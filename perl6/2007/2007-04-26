[00:15] *** justatheory joined
[00:19] *** bsb joined
[00:20] *** bonesss joined
[00:38] *** geoffb_ joined
[00:59] <pasteling> "evalbot_r16126" at 194.145.200.126 pasted "Pugs build failure" (315 lines, 17.2K) at http://sial.org/pbot/24510

[01:05] *** agentzh joined
[01:05] <agentzh> Perl6::Perldoc updated to v0.0.5 on feather.

[01:05] <agentzh> added TOC to S26 produced by smartlinks.pl

[01:06] <agentzh> auto-smoke on feather is working fine these days :)

[01:06] <agentzh> school &

[01:06] *** agentzh left
[01:29] *** dolmans joined
[01:38] *** bonesss joined
[01:39] *** BooK joined
[02:16] *** Alias__ joined
[02:21] *** amnesiac joined
[02:46] *** Psyche^ joined
[02:54] *** Psyche^ is now known as Patterner

[02:59] *** nekokak joined
[03:15] *** drbean joined
[03:25] *** geoffb_ joined
[03:30] *** mako132_ joined
[03:37] *** avarab joined
[03:37] *** [particle] joined
[03:49] *** avarab is now known as avar

[04:17] *** offby1` joined
[04:22] *** offby1` joined
[04:22] *** rissy joined
[04:24] *** offby1` is now known as offby1

[05:15] <gaal> fglock: re names. "Generate" (as in Template::Generate")? "Inhabit" (as in type inhabitation)? uh, "Represent"? :)

[05:26] <spinclad> "a local habitation and a name"

[05:28] <spinclad> "Prosper" (as in Tempest::Mage)? "Leer" (as in King::Lir)?

[05:29] <spinclad> "Puck" (as in Midsummer::Night::Hockey)?

[05:33] <spinclad> "Unmatch"?

[05:47] *** rfordinal joined
[05:55] <gaal> Matchmaker :)

[05:56] *** devogon joined
[06:04] *** buetow joined
[06:30] *** marmic joined
[06:58] *** mj41 joined
[06:58] *** elmex joined
[07:02] *** SubStack joined
[07:06] *** franck__ joined
[07:07] *** elmex joined
[07:15] *** iblechbot joined
[07:19] *** jisom joined
[07:55] <dduncan> ?eval my $bar = 1 ?? Bool::True !! Bool::False;

[07:55] <evalbot_r16129> Error: ␤Unexpected "$bar"␤expecting "=", "::", dot, ":", "(", term postfix, operator, ",", "!!" or context

[07:56] <dduncan> pardon my naivety, but what is wrong with that expression?

[08:00] <dduncan> Pugs doesn't seem to like ??!! and :: in the same statement

[08:10] *** bsb left
[08:24] *** nwc10 left
[08:50] *** Loro_ joined
[09:14] *** RHainsworth joined
[09:14] *** RHainsworth left
[09:23] *** Aankhen`` joined
[09:31] *** benny_ joined
[09:58] *** dmq joined
[10:05] *** dduncan left
[10:17] *** idiotmax joined
[10:20] *** larsen_ joined
[10:33] *** chris2 joined
[10:41] *** agentzh joined
[10:42] <agentzh> Damian is definitely not committing updates for Perl6::Perldoc to the Pugs repos.

[10:42] <agentzh> sync'ing the versions starts to be a pain :(

[10:43] <moritz> agentzh: then remove it

[10:43] <moritz> agentzh: or talk to damian

[10:44] <agentzh> *nod*

[10:44] <agentzh> will do

[10:44] <agentzh> the latter

[10:51] <agentzh> mail sent :)

[10:52] <masak> @tell dduncan nothing wrong with the expression as far as I can see. maybe commit a test for it in t/operators/ternary.t?

[10:52] <lambdabot> Consider it noted.

[10:53] <agentzh> sigh. svnbot is off :(

[10:53] <moritz> agentzh: for quite a while I might add

[10:53] <moritz> agentzh: do you know who runs svnbot6?

[10:53] <agentzh> moritz: audreyt

[10:54] <moritz> damned

[10:54] <agentzh> not sure how to start it.

[10:54] <agentzh> my cron no longer uses audreyt's pugs tree since a few processes are messing things around there :(

[11:10] *** RHainsworth joined
[11:16] *** RHainsworth left
[11:27] <agentzh> Oops!

[11:27] <agentzh> Juerd: i'm sorry, i've something stupid to feather.

[11:27] <agentzh> a process is eating all the CPU resource of feather.

[11:29] <gaal> ghc 6.6.1 released

[11:30] <agentzh> gaal: feater is down due to my mistake.

[11:30] <agentzh> :(((

[11:30] <agentzh> gaal: i can't even login.

[11:30] <gaal> send Juerd mail?

[11:30] <agentzh> k

[11:31] <agentzh> [email@hidden.address] ?

[11:34] <gaal> afaik yes

[11:34] <agentzh> sent

[11:34] <gaal> lunch&

[11:34] <agentzh> a friend of mine made a bad joke on me :(

[11:35] <agentzh> Apologies to all other feather users.

[11:35] <moritz> agentzh: that's live ;)

[11:36] <moritz> agentzh: those who work make mistakes - now we know that you worked ;)

[11:36] <agentzh> hopefully Juerd will not kill me :(

[11:40] <lumi> moritz: For the logger, maybe email obfuscation (although that interacts badly with Perl code, sometimes)

[11:40] <moritz> lumi: I don't know if that's worth the effort

[11:41] *** laye joined
[11:42] <agentzh> school again &

[11:45] <lumi> moritz: Trivially off the top of my head, s/(?<=\w)\@(?=\w)/<img src="at.gif">/g

[11:46] <lumi> Prolly could be done better

[11:46] *** BooK joined
[11:52] *** irclogbot joined
[11:55] <moritz> lumi: testing...

[11:57] *** juerd_ joined
[11:58] *** rindolf joined
[12:04] <moritz> lumi: works locally, but commits must wait until feater is up again ;)

[12:04] <rindolf> Hi all.

[12:04] <rindolf> Hi moritz 

[12:04] <moritz> hi rindolf ;)

[12:04] <rindolf> Once again I'm being sucked into the productivity black hole of IRC.

[12:04] <juerd_> moritz: That may take a while.

[12:05] <juerd_> Days if we're unlucky.

[12:05] <moritz> what happend?

[12:05] <juerd_> Someone used up all memory

[12:14] *** fglock joined
[12:22] <masak> juerd_: why days?

[12:23] *** VanilleBert joined
[12:26] <juerd_> masak: It costs not only fuel, but also time to get there.

[12:27] <juerd_> And I won't have a few hours free time for a few days.

[12:27] <juerd_> There's still a chance that it'll come up by itself, by the way.

[12:27] <moritz> it responds to ping

[12:28] <juerd_> Yes. It's probably slowly filling virtual memory and swapping in and out a lot

[12:28] <juerd_> When virtual memory is full too, it'll start killing processes.

[12:28] <moritz> let's hope it kills the right processes ;)

[12:28] <juerd_> Right :)

[12:28] <juerd_> Not init, ssh, and things like that

[12:28] <moritz> how much swap space is available?

[12:29] <juerd_> 1 GB

[12:30] <fglock> hmm - pugs can load the MiniPerl6::Grammar module already

[12:33] *** iblechbot joined
[12:41] *** irclogbot-test joined
[12:43] *** the_dormant joined
[12:47] *** jerrylee joined
[13:08] *** fglock joined
[13:19] <fglock> I've got a problem with kp6-mop - I made a "P6opaque" object that stores the kp6 objects; but kp6 can't see P6opaque, it only sees the higher-level object

[13:19] <fglock> much like VAR($x) and $x

[13:20] <fglock> will need something like NATIVE($obj) to get to P6opaque

[13:20] *** laye joined
[13:21] <fglock> meeting &

[13:22] *** laye joined
[13:29] *** VanilleBert left
[13:32] *** ruoso joined
[13:35] *** laye joined
[13:42] *** Juerd joined
[13:43] *** diakopter joined
[13:43] <diakopter> wb feather

[13:45] <Juerd> Found a friendly security person at the datacentre who didn't mind rebooting it for me

[13:46] *** Muixirt joined
[13:50] *** laye joined
[13:57] *** fglock joined
[14:31] *** offby1-urbana joined
[14:34] *** amnesiac joined
[14:36] *** Boogiebruva joined
[14:39] *** offby1 joined
[14:41] *** myavuzselim joined
[15:06] *** RHainsworth joined
[15:13] *** bonesss joined
[15:20] *** bonesss is now known as bones`lunch

[15:21] *** [particle] joined
[15:31] *** vel joined
[15:34] *** ruoso_ joined
[15:34] *** justatheory joined
[15:35] *** polettix joined
[15:46] *** marmic joined
[15:52] *** kanru joined
[15:54] *** bernhard joined
[15:58] *** bones`lunch is now known as bonesss

[16:04] *** iblechbot joined
[16:08] *** VanilleBert joined
[16:13] *** jjore-w left
[16:26] *** offby1 joined
[16:27] *** justatheory joined
[16:27] *** offby1-urbana joined
[16:33] *** franck__ joined
[16:34] *** Limbic_Region joined
[16:35] <Limbic_Region> any sendmail experts around?  Specifically, sendmail 8.13 on Solaris 9.  I am trying to figure out how to prevent sendmail from making AAAA (IPv6) queries of the FQDN passed in helo/ehlo

[16:35] <offby1> yikes

[16:35] <Limbic_Region> explicitly setting the DaemonPortOptions and Resolver option doesn't have any affect

[16:35] <Limbic_Region> and since this is extremely OT, I would be happy to take the conversation to /msg land

[16:36] *** franck__ joined
[16:39] <moritz> .oO(write a perl wrapper around a dns proxy, then you're more on topic ;-)

[16:40] * offby1 writes a perl 6 wrapper to provide him hot stock tips

[16:41] <TimToady> all you need to do is read your spam to get all kinds of hot stock tips.

[16:43] <moritz> even knowing that stocks are advertised in spam is a bad sign - because it means sombody is reading his spam ;)

[16:43] <avar> Limbic_Region: compile without ipv6 support?

[16:48] <rindolf> Hi TimToady, offby1, avar, Limbic_Region 

[16:49] <avar> wrarr

[16:49] * moritz feels left out ;)

[16:49] <Limbic_Region> avar - yeah, that's something I would rather avoid

[16:50] <rindolf> moritz: I already greeted you.

[16:54] *** buetow joined
[16:55] *** jjore-w joined
[17:01] <moritz> rindolf: I was just kidding ;)

[17:01] <rindolf> moritz: OK. :-)

[17:02] * rindolf is now Perl->BSD'ing the Test::Run code.

[17:02] <rindolf> It's pretty mindless, but it gives me a chance to refactor the code.

[17:02] <rindolf> Mindless but annoying.

[17:02] * rindolf sighs

[17:11] <TimToady> anyone have a clue why it takes 20 cpu minutes to do a fairly simple m:g// in list context on an 80K string?

[17:15] *** Psyche^ joined
[17:16] <kolibrie> TimToady: that's a long time.  Did it use up memory also?

[17:16] <TimToady> >250M

[17:17] <kolibrie> I've had memory issues with PCR, but usually the cpu usage is acceptable

[17:18] <TimToady> m:g:P5/(?xms) ^ (?: rule | token | regex | method ) \s+ ( \w+ 

[17:18] <TimToady> )/

[17:18] <TimToady> P6 version doesn't seem significantly different in performance

[17:18] <TimToady> (the string in question is, of course, STD.pm :)

[17:19] <kolibrie> if P5 takes that long, I have no idea, PCR usually leaves those pretty much intact, I think

[17:20] <TimToady> no, I'm pretty sure P5 would rip through it rather quickly

[17:20] <TimToady> didn't test it though.

[17:21] <TimToady> I think something generating the list is probably copying lists back and forth on every match, maybe.

[17:21] * kolibrie suspects it has something to do with the 'g' (but is mostly just guessing)

[17:23] *** Psyche^ is now known as Patterner

[17:30] *** sapir joined
[17:32] *** stevan__ is now known as stevan_

[17:54] *** veritos joined
[18:04] *** VanilleBert left
[18:14] *** wolverian joined
[18:31] <moritz> @seen audreyt

[18:31] <lambdabot> audreyt is in #haskell and #perl6. I don't know when audreyt last spoke.

[18:38] *** pmurias joined
[18:40] *** edenc joined
[18:41] *** jisom joined
[19:00] *** larsen_ joined
[19:05] *** larsen_ joined
[19:30] <rindolf> Hi all!

[19:30] <rindolf> moritz (and all): do you have any additions for http://www.shlomifish.org/perl-oop-systems-n6eWb7==LK/summary.txt ?

[19:30] <rindolf> audreyt: here?

[19:37] *** edenc joined
[19:41] <moritz> rindolf: I don't have any idea, but I'm not a p5 wizard at all

[19:41] <rindolf> moritz: OK, no problem.

[19:58] *** fglock joined
[20:01] <fglock> I guess I'll take a week or so for planning on kp6 and the other compilers, rather than implementation

[20:01] <fglock> due to combinatorial explosion of possible paths

[20:03] <kolibrie> fglock: cool

[20:03] <[particle]> any(*)

[20:03] * kolibrie hopes to look at that again soon

[20:04] <fglock> any(*) is only good if you have multiple processors :)

[20:05] <[particle]> unless you're working with very small values of whatever :)

[20:06] <fglock> it's like playing chess, you have to explore the design space (or something like that)

[20:16] <moritz> fglock: how many compilers have you written so far?

[20:16] <moritz> not only p6 ones, that is ;)

[20:17] <[particle]> lrep, v6, mp6, kp6..*

[20:17] <[particle]> i feel like i'm missing something, too

[20:18] *** dduncan joined
[20:18] *** nwc10 joined
[20:19] <fglock> oh, and PCR

[20:19] <nwc10> When will we get Perl 6? I just found myself writing something that would not be an error in Perl 6

[20:19] <[particle]> ah, right.

[20:20] <avar> perl mp6-perl5-boot.pl lib/MiniPerl6/Perl5/Match.pm > lib5-new/MiniPerl6/Perl5/Match.pm

[20:20] <avar> Can't call method "emit" without a package or object reference at mp6-perl5-boot.pl line 33, <> line 298.

[20:20] <dduncan> in the short term, I'm looking forward to when audreyt will get that solid 2 days desired to integrate the new metamodel into pugs

[20:20] <lambdabot> dduncan: You have 1 new message. '/msg lambdabot @messages' to read it.

[20:20] <avar> perl mp6-perl5-boot.pl lib/MiniPerl6/Perl5/Runtime.pm > lib5-new/MiniPerl6/Perl5/Runtime.pm

[20:20] <avar> Can't call method "emit" without a package or object reference at mp6-perl5-boot.pl line 33, <> line 172.

[20:20] <fglock> moritz: a forth, a pascal, a macro-assembler, some DSLs

[20:21] <[particle]> fglock: did you build the pascal compiler the way the original was built--self-hosting?

[20:21] <fglock> avar: Perl5/Match.pm is part of the perl5 runtime (it's perl5 code)

[20:21] <fglock> [particle]: in turbo pascal, yes

[20:21] <fglock> but not really self-hosting

[20:21] <avar> fglock: Yes, but what does it all mean basil?

[20:21] <avar> fglock: is that normal?

[20:22] <[particle]> fglock: iirc the original was built with a subset of the language, much like mp6/kp6

[20:22] *** edenc joined
[20:22] <moritz> quite an impressive collection ;)

[20:22] <fglock> avar: sorry?

[20:24] *** iblechbot joined
[20:25] *** OwlEye joined
[20:26] <fglock> avar: see util/build-perl5.sh - Match.pm and Runtime.pm are simply copied to lib5-new/

[20:28] <fglock> [particle]: re pascal - I was working on an air-conditioner controller project, and the only language available was 8096 assembler

[20:29] <moritz> so you wrote your own compiler in order not to have to write it in assembler?

[20:30] <moritz> that kind of reminds me how larry came to writing perl ;)

[20:30] <fglock> yes, it was more fun, and I had plenty of time until the hardware were ready, anyway

[20:31] <fglock> brb (switching to other building) &

[20:38] *** fglock joined
[20:40] <fglock> I tried to port the kp6-perl5 OO to perl6, but I got a problem with "P6opaque"

[20:42] <fglock> because I can't tell P6opaque.meth from $Obj.meth

[20:43] <fglock> the 'dispatch' slot in P6opaque is occupied by the Object's dispatch

[20:43] <fglock> :P

[20:45] <spinclad> so as a proxy it's completely transparent, you can't get a hold on it?

[20:46] <fglock> re p6 compilers - forgot "pil-run"

[20:46] <fglock> spinclad: yes

[20:47] <fglock> just like $var.STORE calls .STORE in the $var's value

[20:48] <spinclad> i suppose this includes .HOW and such, so meta introspection won't see it either

[20:49] <fglock> no, same problem

[20:52] <fglock> VAR() in kp6 works like this: 

[20:52] *** lumi joined
[20:53] <fglock> $var.dispatch( $meth, $var )  # calls method on $var.FETCH

[20:53] <spinclad> (thinking) problem could be conflating levels: implementation level != meta level, maybe?

[20:53] <fglock> $var.dispatch_VAR( $meth, $var )  # calls method on $var itself

[20:54] <spinclad> $obj.dispatch_CONTAINER(...) maybe, in a parallel thought?

[20:55] * araujo just received 'Types and Programmings Languages - B.C. Pierce'

[20:55] <fglock> spinclad: yes, that was my first idea

[20:56] <fglock> araujo: I'd like to read that some day

[20:58] <araujo> fglock, it looks good definitely

[21:04] <fglock> spinclad: but this would require a language extension, rather than being a 'plain perl6' solution (the VAR macro already exists in the language)

[21:07] *** Aankhen`` joined
[21:07] <fglock> &

[21:09] <spinclad> (thoughts:)

[21:10] <spinclad> implement $var.dispatch(...) as $var.FETCH.dispatch

[21:10] *** geoffb joined
[21:10] <spinclad> implement $var.dispatch_VAR(...) as $var.dispatch

[21:11] <spinclad> implement $obj.dispatch(...) as $obj.OPEN.dispatch(...)  # follows link from P6opaque 

[21:12] <spinclad> implement $obj.[WHAT?](...) as $obj.dispatch(...)  # like lstat, acts on the P6opaque itself

[21:15] <spinclad> or is the problem that at source level you have no way to express the last form?

[21:15] <spinclad> (/thoughts)

[21:23] <spinclad> P6opaque is from perl5/Perl6-ObjectSpace, right?

[21:27] <spinclad> [food and song] &

[21:29] *** edenc joined
[21:31] *** buubot joined
[21:34] *** thepler joined
[21:41] *** polettix joined
[21:58] *** PerlJam joined
[22:05] <nothingmuch> ingy: benewed on your freedom

[22:05] <nothingmuch> i hope you get well soon

[22:05] <nothingmuch> and post your bone fixer hack on www.instructables.com

[22:05] *** nwc10 left
[22:24] *** edenc joined
[22:33] *** ozo_ joined
[22:58] *** SubStack joined
[23:15] *** fglock joined
[23:16] <fglock> I've got the P6opaque problem fixed :)

[23:17] <fglock> I made an implementation in pugs, but feather doesn't  let me upload 

[23:20] <pasteling> "fglock" at 200.203.83.212 pasted "P6opaque for pugs" (56 lines, 1.1K) at http://sial.org/pbot/24536

[23:20] <fglock> it works like this:

[23:21] <fglock> - create a p6opaque using $P6opaque.new

[23:21] <fglock> - set the fields with $p.set( $data )

[23:22] <fglock> oops - $p.set( 'field', $data )

[23:23] <fglock> - set the dispatcher field with $p.set( '_dispatcher', $dispatcher )

[23:23] <fglock> - done - $p now responds to whatever your MOP implements

[23:25] <fglock> s/fields/slots/

[23:26] *** Psyche^ joined
[23:27] *** fglock left
[23:30] *** gnuvince_ joined
[23:30] *** kunwon1 joined
[23:38] *** Psyche^ is now known as Patterner

