[00:05] *** jisom left
[00:34] *** zostay left
[00:54] *** Southen_ left
[00:55] *** devogon_ left
[00:55] *** nekokak_ joined
[01:01] *** dduncan left
[01:05] *** nekokak left
[01:06] *** sunnavy joined
[01:12] *** jhorwitz left
[01:13] *** nipotaway is now known as nipotan

[01:22] *** jisom joined
[01:27] *** nipotan is now known as nipotaway

[02:00] *** jisom left
[02:00] *** Tene joined
[02:15] *** dduncan joined
[02:18] *** drbean_ joined
[02:22] *** evalbot_r left
[02:25] *** justatheory joined
[02:26] *** buetow left
[02:27] *** nipotaway is now known as nipotan

[02:28] *** buetow joined
[02:29] *** drbean left
[02:34] *** Aankhen`` joined
[02:38] * diakopter calls evalbot forth from the tomb...

[02:38] *** buetow left
[02:38] <diakopter> it replies "hey, I'm not forth"

[02:42] *** thepler_ left
[02:44] * Aankhen`` stabs diakopter in a friendly manner.

[02:45] *** Schwern joined
[02:46] *** justatheory left
[02:46] <diakopter> ouch.

[02:46] <diakopter> well, apparently I'm not Jesus.

[02:48] <spinclad> nor evalbot a zombie

[02:48] *** weinig left
[02:48] <diakopter> this Lazarus appears to have stopped to build pugs from scratch before it tries to find the tomb's egress.

[02:48] <diakopter> (as well it should)

[02:49] <spinclad> evalbot: this way to the egress

[02:50] <spinclad> evalbot: 'i'm not over egre to go'

[02:51] * diakopter snorts

[02:55] *** bcmb_ joined
[02:57] <pugs_svnbot> r17176 | diakopter++ | 'cuz I like it that way.

[02:57] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17176

[02:57] <lambdabot> Title: Changeset 17176 - Pugs - Trac

[02:59] <bcmb_> I've got a question about one of the test scripts...

[03:14] <diakopter> bcmb_: yes?

[03:14] <diakopter> (sorry for the delay)

[03:15] <bcmb_> no problem. i'm looking at t/syntax/interpolation/strings.t

[03:15] <bcmb_> it was missing a semi-colon, so i fixed that, but the tests on line 26-27 don't run and was wondering how best to handle that?

[03:17] <bcmb_> sorry, i mean lines 36-37

[03:28] <diakopter> bcmb_: taking a look...

[03:28] <bcmb_> diakopter: ok

[03:30] *** perlDreamer joined
[03:31] <perlDreamer> So I was saying, I've been trying to run the tests from the pugs repo on parrot.

[03:31] <diakopter> perlDreamer: indeed.

[03:31] <perlDreamer> and finding that parrot can easily run fractions of tests, but very few whole tests due to unsupported syntax

[03:32] <perlDreamer> It doesn't sound good for the idea of using them wholesale

[03:32] <diakopter> by "test" you mean ".t file containing one or more tests"?

[03:33] <perlDreamer> yes, test == test file

[03:33] <perlDreamer> some tests don't compile

[03:33] <diakopter> what would you call each is(), ok()?

[03:33] <perlDreamer> a test

[03:34] <perlDreamer> It's context sensitive

[03:34] <diakopter> ok

[03:35] * diakopter takes off the RFC-reading mode hat.

[03:36] <diakopter> perlDreamer: what options do you see for helping parrot/languages/perl6 by making the test suite more incrementally runnable?

[03:36] <perlDreamer> hm

[03:36] <perlDreamer> Option 0: Don't try.  Write parrot tests from scratch.

[03:37] <perlDreamer> Option 1: Slice and dice the current tests.  This would make for messy repositories.

[03:37] <diakopter> msw on Option 0: I kinda like this option at first glance.

[03:38] <perlDreamer> Option 2: Hack parrot's fetchspec script to modify the tests to suit parrot on checkout

[03:38] <perlDreamer> Option 3: Import the current suite wholesale, hack out uncompilable code.  Periodically, manuall resync the tests.

[03:38] <diakopter> O0: (except, while still storing the refactored test suite in pugs' svn or whichever spot becomes agreed-upon next)

[03:39] <diakopter> O2: blecchhh

[03:39] <diakopter> :)

[03:39] <diakopter> O3: blecchhh

[03:39] <perlDreamer> 2 and 3 give you some bootstrapping

[03:39] <perlDreamer> for existing tests

[03:40] <perlDreamer> re your comment on O0, why would parrot specific tests be put into the pugs svn repo?

[03:41] <diakopter> O3: manually resyncing would be a huge pain.  Unless it's mostly one-way.  That's quite hard to predict, contrary to (perhaps) popular belief.

[03:41] <diakopter> why would there be parrot-specific tests?

[03:41] <perlDreamer> well, pugs doesn't implement the e constant yet

[03:42] <diakopter> disregarding the (difficult to trace) historical literature on the origin of the current todo marking system... what do you suggest for that?

[03:42] <perlDreamer> I don't think parrot can do named params yet, so the current marking system is no good.

[03:43] <diakopter> p/l/nqp can, so I assume p/l/perl6 could trivially....?

[03:43] <perlDreamer> what is p/l/nqp?

[03:44] <diakopter> parrot/languages/nqp

[03:44] *** weinig joined
[03:44] <perlDreamer> perl6 still uses tge?

[03:45] <diakopter> no, I mean it's probably a copy-and-paste possibility.

[03:45] <perlDreamer> it's hard to write tests for possibilities, unless you're talking about junctions :)

[03:46] *** hakobe left
[03:46] <diakopter> I wasn't suggesting writing tests for the possibility I conjectured.

[03:47] <diakopter> I was suggesting that you or pmichaud could merge down more of nqp's functionality to perl6

[03:47] <perlDreamer> When perl6 uses nqp, that might work.

[03:47] <diakopter> why wouldn't it work before then?

[03:48] <diakopter> (sorry if that's a dumb question)

[03:50] <perlDreamer> You asked about the todo marking system.  It uses named params,   perl6 (parrot) doesn't do named params.  You mentioned nqp (which perl6 (parrot)) doesn't use.

[03:50] <perlDreamer> The questions isn't implementation, it's function.

[03:52] *** amnesiac joined
[03:59] *** hakobe joined
[04:04] *** drbean joined
[04:12] *** thoughtpolice joined
[04:12] <diakopter> so, back to O0..O3.  Let me be a lot more explicit about the design parameters, here.

[04:15] *** drbean_ left
[04:15] <diakopter> allison declared pugs' svn the location of the official 'Perl 6' test suite, here: http://use.perl.org/articles/06/12/01/2234220.shtml   ...

[04:15] <lambdabot> Title: use Perl | Perl 6 Design Meeting Notes for 29 November 2006

[04:17] <diakopter> perlDreamer: your comment on my comment on O0 implies that you think tests that are pugs:TODO but are implemented in parrot shouldn't be in the official test suite

[04:17] <diakopter> er, shouldn't be in other implementations' test suite

[04:18] * obra begs the community to try to keep a single test suite together across all implementations.

[04:18] <diakopter> TPF's goal is a test suite that is releaseable under AL2

[04:18] <diakopter> (which requires the contributor agreements, etc)

[04:18] <diakopter> (another reason why I still prefer O0)

[04:19] <perlDreamer> diakopter: only because I don't think (but haven't tried) the :todo's will compile under parrot.

[04:19] <perlDreamer> aside from that, it should be no sweat

[04:19] <diakopter> (because whoever does the refactoring can release/commit them under AL2.

[04:19] <diakopter> )

[04:19] <perlDreamer> Can't take someone else's code and re-release under a different license.  That's bad.

[04:19] <perlDreamer> even after refactoring

[04:20] <diakopter> I guess I'm imagining a somewhat more severe refactoring than you are, then.

[04:20] <diakopter> I think what you're imagining is closer to O1

[04:21] <perlDreamer> there are 18000 tests in the pugs repo

[04:21] <diakopter> sort of.

[04:21] <perlDreamer> rewriting that from scratch, by hand, would take large amounts of time

[04:21] <obra> I believe  patrick has indicated a preference to improve the pugs versions of the tests to be useful to parrot.

[04:21] <diakopter> many of them are redundant or generated

[04:22] <obra> rather than to fork the test suite

[04:23] <diakopter> obra: right; I guess I'm trying to take into account TPF's perspective.

[04:23] <diakopter> what with the claim of copyrighting "Perl 6" on the home page.

[04:24] <obra> I think that for now, I'd not worry about that.

[04:24] <obra> we have full version history.

[04:24] <obra> if there is ever a license issue and a contributor isn't comfortable making a grant of rights AND that grant of rights is necessary, the en corrective action can be taken

[04:26] <obra> TPF has been working on copyrights with larry's blessing and involvement. (But TimToady can better speak to that ;)

[04:29] <diakopter> obra: my other (related) point is that the test suite needs not only a (1) drastic reorganization [which tests are in which file, which test files are in which dirs, what the files are named, what the dirs are named] but also a (2) quite severe functionality-rejiggering [there are only two closed dependency strata, currently: pre-sanity and post-sanity], not to mention 

[04:30] <obra> ok. that sounds like a good thing

[04:31] <diakopter> (3) integration of the "code" sections of the Synopses as tests that can be back-smart-linked to the Synopses.

[04:31] *** Schwern left
[04:34] <perlDreamer> what if we had a branch for parrot tests in the pugs repo

[04:34] <diakopter> so I guess my hands-thrown-up-in-surrender mindset/conclusion is to say that the organically grown test suite needs formalized, and in the process, refactored, reorganized, cross-dependency-reduced..... in order to meet the goal I stated way above (helping parrot/languages/perl6 by making the test suite more incrementally runnable)

[04:35] <obra> perlDreamer: why a parrot branch specifically? 

[04:35] <diakopter> perlDreamer: other than not having the named parameter markers, why do they need a separate branch?

[04:35] <obra> I suspect kp6 is going to need something similar in the near future too.

[04:35] <perlDreamer> what parrot needs today, is pugs' test suite from a long time ago

[04:35] <obra> (this discussion might be worth having on p6l)

[04:35] <perlDreamer> that sounds like version control

[04:35] <perlDreamer> which makes me think branch

[04:36] <obra> perlDreamer: well, the language has evolved considerbly

[04:36] <diakopter> what was more usable/runnable about the test suite long ago, and how long ago?

[04:36] <perlDreamer> yes, but currently parrot can't do named params, object methods on variables, and many other things that pugs does today.

[04:36] <perlDreamer> and are in the test suite

[04:37] <obra> is it the test harness that needs these? or is it more advanced test files?

[04:37] <perlDreamer> it's across the board

[04:37] <perlDreamer> have a peek at t/builting/math/trig.t

[04:37] <perlDreamer> it fails on test 2 because parrot doesn't handle unary builtins without parens yet.

[04:38] <perlDreamer> the substr tests won't run because parrot only supports substr with no parens

[04:38] <perlDreamer> the join tests will run with and w/o parens, but not as string methods

[04:38] <perlDreamer> and all those things are interleaved through the tests

[04:39] <diakopter> perlDreamer: for those several things you just mentioned, are there tests that test *just* those things?

[04:39] <perlDreamer> no

[04:39] <perlDreamer> that's why I suggested a branch

[04:39] <diakopter> perlDreamer: then that's what you add to pugs' test suite: in new files.

[04:39] <perlDreamer> or as a branch.

[04:40] <perlDreamer> either would work

[04:40] <obra> I think that new test files would have the greatist utility. And lead to the most people actually looking at, working on and running them

[04:40] <perlDreamer> then the parrot people would have to keep a list of which test files they can run, and which they can't

[04:41] <obra> perlDreamer: having a script that "runs all useful tests for parrot" in the pugs repo would certianly be welcoem

[04:41] <obra> welcome, even

[04:41] <perlDreamer> pmichaud has such a script, but thinking about scaling to hundreds of names isn't pleasant

[04:41] <obra> and it might even be a good thing to start turning something like that into "test this tier of functionality"

[04:42] <diakopter> perlDreamer: what about putting all these new files into new dirs?

[04:42] <obra> it sounds less bad then having parrot tests out on a branch and starting to diverge. that feels like it could lead to a _lot_ of duplicated effort and diverging implementations

[04:42] <diakopter> new dirs that start with digit-pairs, perhaps.

[04:43] <perlDreamer> obra, how is this different from branching and merging source code?

[04:43] <obra> also, if the tests are organized by what functionality they need in the interpreter. (or even annotated with those features), you wouldn't need to maintain a list.

[04:43] <diakopter> perlDreamer: then the import script could import all the files in just particular dirs

[04:43] <perlDreamer> divergence is controlled by dev's

[04:43] <diakopter> perlDreamer: b/c pugs' svn doesn't have branches.

[04:43] <perlDreamer> is that by policy?

[04:43] <diakopter> and why would there need to be merging?

[04:43] <obra> perlDreamer: the zen of pugs is not big on long-lived branches.

[04:44] <perlDreamer> ah

[04:44] <perlDreamer> well, then dirs sounds better then

[04:44] <obra> branches are mostly used for short feature work. 

[04:44] *** nekokak joined
[04:44] <diakopter> perlDreamer: why would they ever need to be merged anywhere?

[04:44] <obra> *nod*

[04:44] <perlDreamer> well, if someone added string methods to parrot, you could merge in those tests from the respective test files

[04:45] <perlDreamer> but it sounds like a poor idea, compared to dirs

[04:45] <diakopter> why merge?  why not just move?

[04:45] <diakopter> instead of copying

[04:45] <perlDreamer> I'm assuming that wholesale moving wouldn't work, due to other features that may not work yet

[04:46] <perlDreamer> maybe it's just nomenclature

[04:46] <diakopter> I think I'm following

[04:46] <diakopter> definitely don't ever duplicate individual test lines, even partially.

[04:47] <[particle]> please take this discussion to a list.

[04:47] <[particle]> btw there is a syntax for marking tests as todo with a comment

[04:47] <diakopter> [particle]: backlog; discussed :{

[04:47] <[particle]> #todo :parrot<0.4.1> (or similar)

[04:47] <diakopter> :P

[04:47] <[particle]> yes, i see that.

[04:48] <diakopter> the problem is that parrot's perl6 can't parse that, according to perlDreamer

[04:48] <[particle]> yet.

[04:48] <perlDreamer> agreed, yet

[04:48] <diakopter> right, obvious.

[04:48] <perlDreamer> which list would be appropriate to move this discussion to?

[04:48] <[particle]> once the tests are in 01-sanity, it can be a requirement for Test.pm

[04:48] <[particle]> p6c, i think

[04:49] <diakopter> [particle]: once which tests are in 01-sanity?

[04:49] <[particle]> tests for anything deemed a requirement for running Test.pm

[04:50] <perlDreamer> I need to go stand on a board, I'll watch p6c for more discussion

[04:50] <diakopter> ah, named parameters.

[04:50] *** perlDreamer left
[04:50] <[particle]> either they go in t/01-sanity or t/02-test

[04:50] <[particle]> also, right now 01-sanity tests are not sufficient to run Test.pm

[04:51] <[particle]> don't have 100% coverage of Test.pm features, that is.

[04:51] * [particle] has to run off

[04:52] <diakopter> right, that's why there're only 2 strata, and not 3 (including the Test.pm level).

[05:01] *** Schwern joined
[05:02] *** nekokak_ left
[05:05] *** bcmb_ left
[05:06] *** xinming_ joined
[05:06] <pasteling> "./pugs_r17176" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26554

[05:07] *** pro21ms4 joined
[05:12] <pasteling> "./pugs_r17176" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26556

[05:13] <diakopter> <sigh> evalbot: grrrr

[05:18] *** xinming left
[05:21] *** amnesiac left
[05:23] *** dduncan left
[05:33] *** jisom joined
[05:42] *** pro21ms4 left
[06:24] *** anatolyv joined
[06:30] *** cognominal_ left
[06:34] *** hakobe is now known as hkb_lab

[06:39] *** elmex joined
[06:56] *** masak joined
[06:58] *** devogon joined
[07:01] *** kane_ joined
[07:04] *** kane_ left
[07:04] *** kane_ joined
[07:11] *** iblechbot joined
[07:12] <diakopter> Haskerl: we take the "ask" out of "Haskell" and "FAQ"

[07:28] <masak> diakopter: "Hell Frequently 'ed Questions"?

[07:32] <diakopter> er, something like that.

[07:32] *** flokuehn joined
[07:34] *** agentzh joined
[07:36] *** drrho joined
[07:36] <agentzh> PCR's emitter often generates single boolean expressions for nodes in the regex AST...i'm wondering how to add debugging code to such expressions

[07:37] <agentzh> maybe something like "expression ^ do { print $pos; 0 }" ?

[07:37] <agentzh> ^ will never short-circuit, unlike && and 

[07:37] <agentzh> ||

[07:38] *** f0rth joined
[07:39] <agentzh> for AST nodes that emit code blocks instead of single expressions, adding tracing code is staightforward :)

[07:39] *** f0rth left
[07:39] *** f0rth joined
[07:40] <diakopter> heehee: http://www.dcs.gla.ac.uk/~partain/haskerl/wall-1.html

[07:40] <lambdabot> Title: A message about Haskerl

[07:44] *** iblechbot left
[07:46] <masak> agentzh: looks ok, but if you anticipate doing that construct a lot, consider embedding it into a well-named subroutine

[07:47] <agentzh> masak: i've been avoiding closures or subs because it's costy...

[07:47] <masak> agentzh: ok

[07:48] <agentzh> masak: but there's still a problem...

[07:48] <agentzh> masak: i can't get the result of expression in the do block

[07:48] <agentzh> only $pos is available :(

[07:48] <agentzh> masak: how about this? $expr && ($bool = 1) xor do { print "$bool $pos\n"; 0 }

[07:49] <masak> eh.

[07:49] <masak> well, it works

[07:49] <agentzh> yay

[07:49] <masak> is this code that anyone will ever read? :)

[07:49] <agentzh> it's the code generated by the PCR emitter

[07:49] <agentzh> i think only PCR developers will read such code

[07:49] <agentzh> hehe

[07:51] *** weinig left
[07:51] *** jisom left
[08:08] <masak> agentzh: I guess if speed trumps maintainability/readability, anything goes

[08:09] <agentzh> masak: okay, i'll wrap the code with a do block then. fighting with logical operators is no fun at all :)

[08:09] <masak> true. good luck. :)

[08:09] <agentzh> masak: thanks.

[08:12] <agentzh> i think it's acceptable for PCR to slow down a bit in tracing mode...for production code, there will be no performance impact since there's only some special comments in non-tracing mode. :)

[08:13] <agentzh> heh, PCR's emitter is already a bit hard to maintain...there's so many optimization tricks...

[08:13] <agentzh> kp6 may make our lives easier.

[08:14] <masak> hopefully.

[08:14] <agentzh> :)

[08:17] <meppl> good morning

[08:17] <masak> meppl: morning

[08:17] <agentzh> morning, meppl

[08:18] <meppl> good morning masak and agentzh

[08:25] *** args left
[08:26] *** DarkWolf84 left
[08:35] *** daxim_ joined
[08:36] *** anatolyv left
[08:36] *** rgs joined
[08:47] *** toly joined
[08:50] *** daxim left
[08:51] *** toly left
[08:56] *** franck___ joined
[08:58] *** IllvilJa joined
[08:59] *** drbean left
[08:59] *** sunnavy left
[09:09] *** iblechbot joined
[09:10] <agentzh> p6 grammar => p5 code with smart comments => p5 code with smart comments expanded as tracing code

[09:11] <agentzh> does this compilation route look sane?

[09:13] *** rindolf joined
[09:22] *** ruoso joined
[09:37] *** rfordinal_ left
[09:39] *** rfordinal joined
[09:50] <agentzh> hmm, ANTLR's ParseView looks interesting.

[09:52] <agentzh> is there any good visual debugging tool that i can learn from?

[09:53] <agentzh> supper &

[10:01] *** pro21ms4 joined
[10:02] *** Aankhen`` left
[10:03] *** Aankhen`` joined
[10:31] *** chris2 joined
[10:33] *** nipotan is now known as nipotaway

[10:42] *** kanru left
[10:44] *** kanru joined
[10:49] *** cognominal_ joined
[10:55] *** buetow joined
[11:07] *** Blwood left
[11:13] *** penk joined
[11:19] *** cognominal_ left
[11:19] *** buetow left
[11:20] *** buetow joined
[11:20] *** Blwood joined
[11:23] *** rindolf left
[11:24] *** Schwern left
[11:29] *** Southen joined
[11:34] *** torz left
[11:47] *** bonesss joined
[11:56] *** cognominal_ joined
[11:56] *** cognominal_ left
[11:56] *** cognominal_ joined
[11:57] *** Casan joined
[12:10] *** agentzh left
[12:16] *** xinming_ is now known as xinming

[12:16] *** Aankh|Clone joined
[12:26] *** cognominal_ left
[12:31] *** sysdef left
[12:31] *** Aankhen`` left
[12:32] *** xerridwen left
[12:37] *** pro21ms4 left
[12:48] *** lichtkind joined
[12:48] *** drupek12 joined
[13:01] *** SixF9 left
[13:04] *** lichtkind left
[13:17] *** jhorwitz joined
[13:18] *** iblechbot left
[13:23] *** sunnavy joined
[13:25] *** TJCRI joined
[13:33] *** revdiablo left
[13:39] *** iblechbot joined
[13:40] *** revdiablo joined
[13:47] *** ruoso left
[13:48] *** ruoso joined
[13:52] *** revdiablo left
[13:56] *** ChanServ sets mode: +o diakopter

[13:56] *** sunnavy left
[14:12] *** iblechbot left
[14:13] *** IllvilJa left
[14:29] *** thepler joined
[14:39] *** amnesiac joined
[14:43] *** cognominal_ joined
[14:51] *** cognominal_ left
[14:52] *** cognominal_ joined
[14:55] *** cognominal_ left
[14:55] *** cognominal_ joined
[14:59] *** franck____ joined
[15:04] <pugs_svnbot> r17177 | masak++ | [Prim/Code.hs]

[15:04] <pugs_svnbot> r17177 | masak++ | * <anon> coderefs are now treated properly

[15:04] <pugs_svnbot> r17177 | masak++ | * I have no idea what I am doing, am not a Haskell programmer, I just play one on TV. Code review appreciated

[15:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17177

[15:04] <lambdabot> Title: Changeset 17177 - Pugs - Trac

[15:04] *** drupek12 left
[15:08] *** franck___ left
[15:14] *** weinig joined
[15:15] *** cognominal_ left
[15:16] *** Eidolos_ joined
[15:20] *** franck____ left
[15:23] <moritz_> masak++ # pugs hacking

[15:24] <masak> thx :) haskell is alien but quite fun

[15:25] *** drupek12 joined
[15:27] *** Eidolos left
[15:30] <moritz_> http://www.google.com/trends?q=perl6%2C+perl+6&ctab=0&geo=all&date=all&sort=0

[15:30] <lambdabot> Title: Google Trends: perl6, perl 6, http://tinyurl.com/238f73

[15:31] *** cmarcelo joined
[15:31] <masak> wonder what the spikes at the end of 2005/beginning of 2006 were?

[15:32] <masak> something to do with releases of Pugs, probably

[15:35] <moritz_> or christmas and thus p6 release being near ;)

[15:36] <masak> that must be it

[15:37] <diakopter> SPJ's Oscon Haskell primer; I dunno if there's a video: http://conferences.oreillynet.com/cs/os2007/view/e_sess/14016 http://conferences.oreillynet.com/presentations/os2007/os_peytonjones.pdf

[15:37] <lambdabot> Title: O'Reilly Open Source Convention 2007 &#8226; July 23-27, 2007 &#8226; Portland,  ...

[15:39] *** flokuehn left
[15:43] <pugs_svnbot> r17178 | masak++ | [Prim/Code.hs]

[15:43] <pugs_svnbot> r17178 | masak++ | * corrections from auto-review ;)

[15:43] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17178

[15:43] <lambdabot> Title: Changeset 17178 - Pugs - Trac

[15:47] *** cerridwen joined
[15:56] *** justatheory joined
[15:58] *** iblechbot joined
[16:00] *** ruoso left
[16:04] *** ruoso joined
[16:09] *** masak left
[16:14] *** daxim_ left
[16:16] *** rindolf joined
[16:17] *** daxim joined
[16:17] *** melissa_ joined
[16:19] *** franck___ joined
[16:22] *** melissa_ left
[16:22] *** IllvilJa joined
[16:30] *** rindolf left
[16:36] *** REPLeffect_ joined
[16:43] *** Snake707 joined
[16:44] *** melissa_ joined
[16:49] *** Snake707 left
[16:50] *** jisom joined
[16:53] *** hkb_lab is now known as hakobe

[16:56] *** dduncan joined
[16:57] *** Eidolos_ is now known as Eidolos

[17:08] *** Aankh|Clone left
[17:11] *** araujo is now known as araujoIsNotarmin

[17:20] *** Psyche^ joined
[17:31] *** Patterner left
[17:31] *** Psyche^ is now known as Patterner

[17:35] *** chris2 left
[17:41] *** cognominal_ joined
[17:42] *** cognominal_ left
[17:42] *** cognominal_ joined
[18:02] *** perlDreamer joined
[18:02] *** rindolf joined
[18:02] *** Jamtech joined
[18:05] *** araujoIsNotarmin is now known as araujo

[18:05] *** semifor joined
[18:07] *** Jamtech left
[18:12] *** Schwern joined
[18:17] *** Teratogen left
[18:24] *** drrho left
[18:39] *** lumnar joined
[18:40] *** lumnar left
[18:42] *** aindilis left
[18:42] *** aindilis joined
[18:44] <pugs_svnbot> r17179 | bcmb++ | Update smart links and correct 1 test script.

[18:44] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17179

[18:44] <lambdabot> Title: Changeset 17179 - Pugs - Trac

[18:46] <moritz_> bcmb++ # cage cleaning

[18:47] *** cernd joined
[18:47] <[particle]> kennel cleaning?

[18:47] <moritz_> [particle]: they are all just containers ;)

[18:54] *** franck____ joined
[18:58] *** aindilis left
[18:58] *** aindilis` joined
[18:58] *** bonesss left
[19:05] *** buetow left
[19:11] <pugs_svnbot> r17180 | moritz++ | kp homepage: removed bogus </a>, added fglock++ as the main author

[19:11] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17180

[19:11] <lambdabot> Title: Changeset 17180 - Pugs - Trac

[19:12] *** franck___ left
[19:16] *** hakobe is now known as hkb_zz

[19:23] *** jisom left
[19:26] *** apeiron left
[19:30] <moritz_> in the html of http://www.pugscode.org/ there are <nobr>...</nobr> tags, which are not html

[19:30] <lambdabot> Title: Pugs - pugscode

[19:30] *** apeiron joined
[19:30] <thoughtpolice> hi moritz_ 

[19:30] <moritz_> any idea what they should be? span? or just nothing?

[19:30] <moritz_> hi thoughtpolice ;)

[19:33] <moritz_> I'll just delete those tags now

[19:33] <moritz_> afterwards you can hit me if you want ;)

[19:33] <pugs_svnbot> r17181 | moritz++ | pugscode.org homepage: removed bogus tags

[19:33] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17181

[19:33] <lambdabot> Title: Changeset 17181 - Pugs - Trac

[19:35] <moritz_> thoughtpolice: so what's up?

[19:36] <thoughtpolice> moritz_: not a whole lot actually. i've been more busy than i figured lately so I haven't had time to blog/program much in the past couple weeks :/

[19:37] <moritz_> thoughtpolice: same for me, too much $work (it's mostly perl, though ;-)

[19:37] <moritz_> but last weekend I managed to implement fulltext search in the logs ;)

[19:38] <thoughtpolice> good stuff. :)

[19:39] <thoughtpolice> i have been reading through the new erlang book (really good) and spj's old 'implementation of functional languages'

[19:39] *** ruoso left
[19:39] <thoughtpolice> i must say spj is quite eloquent and writes/speaks very nicely. i watched the OSCON talk on transactional memory systems.

[19:40] * moritz_ pities himself for living so far from OSCON ;-)

[19:41] <thoughtpolice> i watched it on blip.tv :p

[19:41] <moritz_> ;)

[19:41] <pugs_svnbot> r17182 | moritz++ | kp homepage: fixed link to examples

[19:41] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17182

[19:41] <lambdabot> Title: Changeset 17182 - Pugs - Trac

[19:42] <diakopter> thoughtpolice: I'm reading the same (SPJ 1987)

[19:42] *** diakopter sets mode: -o diakopter

[19:44] <thoughtpolice> diakopter: SPJ 1992 here (.pdf download from his site)

[19:44] <diakopter> hrm

[19:45] <thoughtpolice> http://research.microsoft.com/~simonpj/Papers/pj-lester-book/

[19:45] <lambdabot> Title: Simon Peyton Jones: book

[19:47] <diakopter> oh, that's the much-abridged version.

[19:49] <diakopter> Relationship to The implementation of functional programming languages:

[19:49] <diakopter> An earlier book by one of us, [Peyton Jones 1987], covers similar material to this one, but in a less practically oriented style. Our intention is that a student should be able to follow a course on functional-language implementations using the present book alone, without reference to the other.  The scope of this book is somewhat more modest, corresponding to Parts 2 and 3 of [Peyton Jones 1987]. Part 1 of the latter, which ...

[19:49] <diakopter> ... discusses how a high-level functional language can be translated into a core language, is not covered here at all.

[19:50] <diakopter> in other words, Part 1 of the 1987 work contains lots of explanatory background/theory that would be helpful to someone who's, say, writing a new (say, for Perl 6) frontend for GHC.

[19:51] <diakopter> I don't mean to imply that the tutorial isn't good or anything... I'm just saying, it's different from what I'm reading (and I haven't gotten to needing a tutorial yet.. I will soon, I hope).

[19:52] <thoughtpolice> ah. ty. :)

[19:53] *** weinig_ joined
[19:56] *** weinig left
[19:56] *** weinig joined
[19:59] *** sysdef joined
[20:02] * moritz_ wanders off to bed &

[20:05] <thoughtpolice> later moritz_ 

[20:09] *** Teratogen joined
[20:11] *** rindolf left
[20:12] *** weinig_ left
[20:24] *** cernd left
[20:25] *** franck____ left
[20:39] *** REPLeffect_ left
[20:43] *** TJCRI left
[20:59] *** buetow joined
[21:00] *** cerridwen is now known as julchen

[21:01] *** julchen is now known as cerridwen

[21:11] <meppl> good night

[21:17] *** weinig left
[21:27] *** SamB left
[21:28] *** riffraff joined
[21:28] *** riffraff left
[21:34] *** cernd joined
[21:40] *** cernd left
[21:42] *** iblechbot left
[21:55] *** SamB joined
[21:56] *** demq joined
[22:07] *** dmq left
[22:14] *** thorat joined
[22:16] *** polettix joined
[22:16] *** Jamtech joined
[22:20] *** Jamtech left
[22:21] *** lichtkind joined
[22:24] *** thepler left
[22:27] *** weinig joined
[22:30] *** lichtkind left
[22:42] *** Caelum left
[22:42] <pugs_svnbot> r17183 | bcmb++ | Correct smart links in several test scripts

[22:42] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17183

[22:42] <lambdabot> Title: Changeset 17183 - Pugs - Trac

[22:46] *** Limbic_Region joined
[22:53] *** Caelum joined
[22:54] *** buetow left
[22:56] *** weinig_ joined
[22:56] *** weinig left
[23:06] *** REPLeffect_ joined
[23:07] *** REPLeffect_ is now known as REPLeffect

[23:09] *** silug left
[23:23] <perlDreamer> TimToady: In S29, there are only 3 argument forms of substr defined.  Does that mean that the 2 and 4 argument forms from perl5 do not exist in perl6, or that since they are unchanged they remain?

[23:23] *** xinming left
[23:41] *** aindilis` left
[23:45] *** perlDreamer left
