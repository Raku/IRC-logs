[00:20] *** xinming joined
[00:20] *** SubStack joined
[00:26] *** nekokak joined
[00:26] *** meppl joined
[00:42] *** forsaken joined
[00:46] *** toku_away is now known as tokuhirom

[00:47] *** forsaken joined
[00:55] *** forsaken joined
[00:59] *** forsaken joined
[01:08] *** forsaken joined
[01:25] *** H0LE joined
[01:32] <devbot6> dev: Ticket #12 (task updated): Tests directory scaling problem. <http://dev.pugscode.org/ticket/12#comment:2>

[01:34] *** nipotan joined
[01:43] *** gustavderdrache joined
[02:22] *** perlmonkey2 joined
[02:24] *** gustavderdrache left
[03:04] *** geoffb joined
[03:06] <Lorn> hi ppl

[03:18] *** justatheory joined
[03:36] *** geoffb joined
[03:38] <perlmonkey2> Hi Lorn.

[03:54] *** perlmonkey2 left
[04:09] *** amnesiac joined
[04:10] *** stevan__ joined
[04:23] *** Eidolos joined
[04:39] *** drupek12178125 joined
[04:48] <gaal> short and sweet intro to CLOS: http://eval.apply.googlepages.com/guide.html

[04:49] <lambdabot> Title: Warp Speed Introduction to CLOS

[05:01] <wolverian> I certainly see multis and protos there .. just in another form :)

[05:16] *** Eidolos is now known as Cheapy|

[05:16] *** Cheapy| is now known as Eidolos

[05:32] *** prly_ joined
[05:42] *** dduncan left
[05:45] <Khisanth> wolverian: protoss? :)

[05:50] *** prly joined
[05:50] <Tene> Heh.

[06:00] *** sunnavy joined
[06:01] *** devogon joined
[06:04] *** forsaken joined
[06:14] *** SubStack joined
[06:21] *** tokuhirom is now known as toku_away

[06:39] *** dduncan joined
[06:48] *** toku_away is now known as tokuhirom

[07:16] *** allbery_b joined
[07:19] *** kanru joined
[07:28] *** esstone joined
[07:42] *** xinming_ joined
[08:09] *** mjk joined
[08:26] *** offby1` joined
[08:27] *** offby1` is now known as offby1

[08:32] *** iblechbot joined
[08:35] *** mj41 joined
[08:41] *** andar1 joined
[09:06] *** DarkWolf84 joined
[09:06] *** chris2 joined
[09:14] *** nipotan is now known as nipotaway

[09:38] *** dduncan left
[09:43] *** rgs joined
[09:53] *** thefirstdude joined
[10:02] <svnbot6> r15833 | andara++ | [runpugs] new server backend, fixing some obscure bugs. 

[10:09] *** RHainsworth joined
[10:19] *** riffraff joined
[10:20] <riffraff> hi

[10:20] <moritz> hi

[10:22] *** SubStack joined
[10:39] *** lichtkind joined
[10:45] *** RHainsworth left
[10:54] *** eumenides joined
[11:00] *** macroron joined
[11:05] *** buetow joined
[11:20] *** araujo joined
[11:22] *** macroron joined
[11:34] *** prism joined
[11:52] *** RHainsworth joined
[12:04] *** prism joined
[12:09] *** Alchemy joined
[12:37] *** xinming_ is now known as xinming

[13:09] *** HiTech69 joined
[13:11] *** imperator joined
[13:11] *** RHainsworth joined
[13:11] *** RHainsworth left
[13:19] *** imperator left
[13:33] *** the_dormant joined
[14:01] *** OwlEye joined
[14:01] <OwlEye> hi

[14:07] *** eric__ joined
[14:08] *** iblechbot joined
[14:08] *** xinming joined
[14:08] *** kanru joined
[14:08] *** devogon joined
[14:08] *** stevan__ joined
[14:08] *** avar joined
[14:08] *** weinig|away joined
[14:08] *** TimToady joined
[14:08] *** idiotmax joined
[14:08] *** pnu joined
[14:08] *** autark joined
[14:08] *** SamB joined
[14:08] *** buu joined
[14:08] *** PerlJam joined
[14:08] *** sri_ joined
[14:08] *** kcwu joined
[14:08] *** Juerd joined
[14:08] *** wolverian joined
[14:08] *** ingy joined
[14:15] *** perlmonkey2 joined
[14:16] *** ofer0 joined
[14:34] <cj> hi OwlEye 

[14:34] <cj> ingy: anything new in your life?  Seen Colin recently?

[14:46] *** riffraff joined
[14:47] *** Jedai joined
[15:21] *** rashakil_ joined
[15:30] *** pmurias joined
[15:30] *** falesca joined
[15:31] *** falesca joined
[15:42] *** falesca joined
[15:43] *** ofer0 is now known as ofer

[15:55] *** prism joined
[16:00] *** thefirstdude joined
[16:32] *** prism joined
[16:32] *** pbuetow joined
[16:33] *** OppaiSan joined
[16:34] *** nagayama joined
[16:35] <nagayama> hi

[16:37] <perlmonkey2> hello

[16:38] *** forsaken joined
[16:39] *** polettix joined
[16:39] *** eveer joined
[16:39] *** buetow joined
[16:39] <eveer> ?eval 1+1

[16:39] <evalbot_r15831> 2

[16:39] *** OppaiSan left
[16:44] *** offby1` joined
[16:49] *** buetow joined
[16:51] <moritz> ?eval 

[16:51] <evalbot_r15831> No code to eval given.

[16:51] <moritz> ?eval for 2..4 { say $^num; }

[16:51] <evalbot_r15831> OUTPUT[2‚ê§3‚ê§4‚ê§] undef

[16:52] <moritz> can anybody tell me where $^num is specced?

[16:59] *** andar1 left
[16:59] <[particle]> $^ is specified with the other sigils

[17:00] <[particle]> (twigils, really)

[17:00] <[particle]> (reloading browser...)

[17:01] <moritz> these twigils are hard to grep for ;-)

[17:02] <[particle]> S02

[17:02] <[particle]> $^foo       self-declared formal parameter

[17:03] <moritz> I found that, but that's not too helpfull ;-)

[17:03] <moritz> does that mean that I may use any name?

[17:04] <moritz> ?eval for 1 .. 2 { say $^foo, $^bar; }

[17:04] <evalbot_r15831> OUTPUT[12‚ê§] undef

[17:04] <moritz> hey, that's... magic

[17:04] <[particle]> yes

[17:04] <[particle]> i read on this channel that they would be indexed in lexicographic order, but that sounds... funny

[17:05] <[particle]> and it's not how it's currently implemented in pugs, as you see above

[17:05] <[particle]> however, it would allow { $^b cmp $^a } to work as you might expect

[17:05] <moritz> it is for sort {$^b <=> $^a} I guess

[17:05] <[particle]> yep

[17:06] <moritz> TimToady: do self-declared formal parameters get their values in lexicographic order?

[17:09] *** offby1` is now known as offby1

[17:25] *** eveer joined
[17:26] <eveer> hi, takeshi!

[17:27] <geoffb> ?eval { say $^foo, $^bar }.(1 .. 2)

[17:27] <evalbot_r15831> OUTPUT[12‚ê§] Bool::True

[17:28] <geoffb> ?eval { say $^foo, $^bar }.(4, 1)

[17:28] <evalbot_r15831> OUTPUT[41‚ê§] Bool::True

[17:28] <geoffb> yep, it's borken all right

[17:29] <moritz> geoffb: so it _should_ print 21 in the first example?

[17:31] <[particle]> l11c sorting on unicode var names will be interesting. it may vary based on locale, no?

[17:32] <moritz> probalby, yes

[17:32] <[particle]> fun.

[17:32] <moritz> in German for example √§ is sorted as a - I don't know if you'd like to see that in plain English

[17:35] *** rashakil__ joined
[17:36] *** justatheory joined
[17:41] *** Psyche^ joined
[17:48] <Jedai> Well but ‰ in plain English is kinda seldom...

[17:48] <offby1> indeed

[17:49] <moritz> ;-)

[17:49] *** aukjan|gone is now known as aukjan

[17:50] <moritz> in English you even write "Ueberhacker" instead of using the proper "√úber.."

[17:50] <integral> most English people would just write "uber..." though unfortunately

[17:51] <moritz> or that, yes

[17:51] * moritz can't get used to that

[17:52] <offby1> that's how I'd write it too.

[17:56] <moritz> .oO(off by two dots ;-)

[17:57] *** Psyche^ is now known as Patterner

[17:59] <polettix> moritz: http://en.wikipedia.org/wiki/3%9Cber is the note wrong then?

[17:59] <polettix> acc

[17:59] <polettix> moritz: http://en.wikipedia.org/wiki/%C3%9Cber is the note wrong then?

[17:59] <lambdabot> Title: √úber - Wikipedia, the free encyclopedia

[18:01] <moritz> polettix: which note?

[18:01] <polettix> "The title of this article contains the character √º. Where it is unavailable or not desired, the name may be represented as ueber."

[18:01] <moritz> polettix: √ú is normally transliterated as Ue, that's write

[18:01] * polettix still wonders how to write it in its italian keyboard ;)

[18:01] <moritz> polettix: so it's right

[18:02] *** lisppaste3 joined
[18:06] *** nagayama is now known as nagayaway

[18:10] <polettix> ?eval ((-1+0i)**0.25)**4

[18:10] <evalbot_r15831> 1645504557321206492089141148895406768524688025302506974512605841/6582018229284824168619876730229402019930943462534319453394436096

[18:10] <polettix> ?eval ((-1+0i)**0.25)**4.000000000000001

[18:10] <evalbot_r15831> -1.0 + -7.657177843178875e-16i

[18:11] *** nagayaway is now known as nagayama

[18:13] <moritz> ?eval print ((-1+0i)**0.25)**4

[18:13] <evalbot_r15831> OUTPUT[0.2500000000000000683580865766192366900403] Bool::True

[18:19] <moritz> '**' with complex numbers seems to be rather broken

[18:20] <polettix> it seems that there's a weird interaction with integer exponents

[18:22] <moritz> yes

[18:23] <[particle]> ?eval print ((-1+0i)**0.25)**(4+0i)

[18:23] <evalbot_r15831> OUTPUT[0.2500000000000000683580865766192366900403] Bool::True

[18:23] <[particle]> ?eval print ((-1+0i)**(0.25+0i))**(4+0i)

[18:23] <evalbot_r15831> OUTPUT[0.2500000000000000683580865766192366900403] Bool::True

[18:23] * offby1 idly wonders if perl6 will have modular exponentiation built in :-)

[18:23] <polettix> ?eval print ((-1+0i)**0.25**(4+0.00000000001i))

[18:24] <evalbot_r15831> OUTPUT[0.9999247018391445 + 1.2271538285719925e-2i] Bool::True

[18:24] <offby1> "it's got bloody well everything else"

[18:24] <polettix> ?eval print ((-1+0i)**0.25**(4+0.0000000000001i))

[18:24] <evalbot_r15831> OUTPUT[0.9999247018391445 + 1.2271538285719925e-2i] Bool::True

[18:24] <[particle]> yep, it's not related to complex/int, it's definitely **

[18:24] <moritz> offby1: it doesn't have algebraic expressions :(

[18:25] <moritz> offby1: like simplifying "a**2 + 2*a*b+b**" to "(a+b)**2"

[18:25] <polettix> ahahhahah

[18:25] *** eumenides joined
[18:28] <moritz> but that's rather hard to implement, I guess ;)

[18:29] <moritz> at least if you want it to be good

[18:31] <Khisanth> that seems like something that is better left in a module

[18:33] <offby1> moritz: awww.

[18:33] <Jedai> Well it's not even always possible

[18:33] *** amnesiac joined
[18:33] <moritz> Jedai: what?

[18:34] <Jedai> So I guess unless Perl6 is to become a specialized language

[18:34] <Jedai> moritz : algebraic expression simplification

[18:34] <moritz> Jedai: of course there are expressions that can't be simplified

[18:35] <moritz> Jedai: otherwise ever expression would be reducable to the empty expression ;-)

[18:35] <moritz> I like Mathematica, but I fear the overhead

[18:36] <Jedai> I don't want Perl6 to be Mathematica, for sure !

[18:37] <moritz> well, it has conventions that are very strange for "normal" programming languages

[18:37] <integral> err, Perl 6 is extensible.  You can do anything you want in an addon module.  Why is everyone so obsessed about getting their pet feature "into perl6"?

[18:37] *** Belaf joined
[18:37] <moritz> like calling functions with foo[bar], and a space as multiplication

[18:37] <Jedai> I guess because it already has so many features

[18:37] <integral> The smaller core perl 6 is, the easier it is to actually produce it.

[18:38] <Jedai> I can't agree more

[18:38] <moritz> integral: I'm not really trying to make that a p6 core feature, I know it would change the language too much

[18:38] <integral> anyway, the RFC process was YEARS ago.

[18:38] <Khisanth> Jedai: one bad turn deserves another?

[18:39] <Jedai> integral : But the specification is evolving even now.

[18:39] <integral> Jedai: But not the actual style, spirit or extent of the language.

[18:39] <Jedai> Khisanth: ? Sorry, my english isn't that good

[18:40] <Jedai> integral : I was just trying to answer your "why" ;)

[18:40] <integral> TBH, looking at the commit messages to p6l I only see small changes that tweak existing stuff, not whole new features

[18:47] <Jedai> Yes, the specification is now rather stable. I was just pointing out that there was evolution beyond the RFCs :)

[18:47] *** pmurias joined
[18:47] <svnbot6> r15834 | pmurias++ | a vaporware TH based haskell to p6 translator (can translate integers :)

[18:47] <pmurias> hi

[18:48] <moritz> hi

[18:48] <Tene> Hi!

[18:54] <pmurias> ?eval -> (...) {...}

[18:54] <evalbot_r15831> Error: ‚ê§Unexpected "...)"‚ê§expecting formal parameter or ")"

[18:54] <pmurias> ?eval -> () {...}

[18:54] <evalbot_r15831> ->{Syn "block" {App &fail_ (: "... - not yet implemented");‚ê§                Noop}}

[18:58] *** RHainsworth joined
[19:04] <pmurias> has anyone tried writting a haskell to perl6 translator?

[19:04] *** pbuetow joined
[19:06] * integral keeps pondering hacking a parrot emittor to ghc but is scared off by how BIG ghc is :-/

[19:06] <[particle]> how many emitters are there for ghc?

[19:07] <integral> There's a C one, and a native code one, and some bits and pieces of Java and .Net

[19:07] <integral> It's not bad because it's from Cmm which is already fairly close to a PIR view of the world

[19:07] <[particle]> well, we have a partial .net -> pbc converter

[19:08] * integral has been hacking at a YHC bytecode -> pir converter to learn some parrot stuff

[19:09] * pmurias tried that too, but couldn't get the python api to work

[19:09] <integral> I just wrote my own YBC parser in perl; it's just about well enough specified to do

[19:10] <pmurias> what did you use for parsing bytecode?

[19:11] <integral> unpack, and rejigging their XML->python XSLT file to convert to perl

[19:11] *** buetow joined
[19:13] <pmurias> did you release it anywhere

[19:13] <pmurias> ?

[19:13] <integral> try http://svn.cabbage.org.uk/pchs/trunk/

[19:14] <integral> It's very incomplete at code generation, but fine for parsing.  It has a very basic, but usable way of converting from stack to register code.  Not quite as good as what jonathan uses for the .Net stuff afaict

[19:15] <pmurias> 404

[19:15] <integral> err, yes, it would be http://svn.cabbage.org.uk/svn/pchs/trunk/

[19:15] <lambdabot> Title: Revision 25: /trunk

[19:15] * integral gives lambdabot a cookie

[19:20] <perlmonkey2> How do you all find time to work on this during the weekdays?

[19:21] <[particle]> time dialation

[19:22] * integral hasn't for a couple of weeks :-(

[19:25] <pmurias> what is the equivalent of a join in haskell?

[19:25] <pmurias> s/of a join/of join()/

[19:26] <allbery_b> concat?

[19:27] <integral> intercalcate (or something similarly weird)

[19:27] <integral> (intersperse + concat roughly)

[19:27] <pmurias> i want the perl function join

[19:33] *** Aankhen`` joined
[19:34] <pmurias> should \a b -> ... be translated to -> ($a,$b) {...}???

[19:34] <pmurias> s/???/?/

[19:35] <integral> -> $a { -> $b { ... } } surely?

[19:37] *** lichtkind joined
[19:38] <OwlEye> hey lichtkind :)

[19:38] <lichtkind> ixhi

[19:38] <lichtkind> :)

[19:39] *** jisom joined
[19:40] <lichtkind> OwlEye: bin bisserl traurig werde heiss duschen und mich zur√ºcjziehen

[19:42] *** perlmonkey2 left
[19:46] <pmurias> ?eval sub f($a) {-> $b {return "$a and $b"}};f(1)

[19:46] <evalbot_r15831> ->{Syn "block" {App &return (: ‚ê§                             App &infix:~ (: ‚ê§                                           Var $a, ‚ê§                                           App &infix:~ (: " and ", App &infix:~ (: Var $b, ""))))}}

[19:47] *** geoffb joined
[19:47] <pmurias> ?eval sub f($a) {-> $b {return "$a and $b"}};f(1)(2)

[19:47] <evalbot_r15831> (no output)

[19:47] <pmurias> ?eval sub f($a) {-> $b {return "$a and $b"}};(f(1))(2)

[19:47] <evalbot_r15831> (no output)

[19:47] <lichtkind> OwlEye: hab recht heftig getr√§umt

[19:48] <OwlEye> lichtkind :-( *knuddel*

[19:51] <lichtkind> :)

[19:54] *** cognominal joined
[19:57] *** szabgab joined
[19:57] <szabgab> good evening

[19:57] <Tene> Sure is. :)

[19:57] <szabgab> I am trying to build Pugs on a newly installed Ubuntu Feisty beta

[19:58] <Tene> Sounds like fun. :)

[19:58] <szabgab> ghc6 is installed using aptitude but it complains about: *** Could not load the "mtl" package in your GHC installation.

[19:59] <Tene> Looks like ghc is missing some packages that pugs needs.  Ask your package manager about other ghc packages, perhaps ghc-extralibs.

[19:59] <gaal> szabgab: aptitude install libghc6-mtl-dev and a few others

[19:59] <gaal> -network- prolly

[20:00] <Tene> Yes, listen to gaal.

[20:00] <szabgab> gaal: thanks

[20:00] <gaal> np

[20:00] <moritz> libghc6-plugins-dev and libghc6-network-dev are listed in debian/control

[20:00] * Tene doesn't know enough about debian packages.

[20:00] <gaal> hs-plugin is optional

[20:00] <moritz> though  libghc6-mtl-dev ist installed on my maschine as well

[20:01] <gaal> it's for eval :lang<haskell>

[20:01] <gaal> mtl is not optional

[20:01] <gaal> and I

[20:01] <gaal> 'm not here :) &

[20:01] <szabgab> it passed that part already, thanks

[20:07] <svnbot6> r15835 | szabgab++ | mention libghc6-mtl-dev in Makefile.PL

[20:07] *** dduncan joined
[20:10] *** forsaken joined
[20:11] *** diakopter joined
[20:11] <TimToady> hi, you guys are on the screen at Brown University

[20:11] * [particle] waves to everyone at Brown

[20:11] <diakopter> hello Bears.

[20:12] * offby1 beams brown particles at the Chicago Bears

[20:12] <moritz> szabgab: while you are at it, you could add it to the build depencies in debian/control as well

[20:12] <spinclad> good aftern, Providence

[20:13] <TimToady> okay, switch to talk now

[20:13] <TimToady> bbl &

[20:13] <moritz> ;-)

[20:13] *** the_dormant joined
[20:14] <spinclad> ?eval sub f($a) {sub ($b) {$a}}; f(1)(2)

[20:14] <evalbot_r15831> \1

[20:14] <spinclad> ?eval sub f($a) {sub ($b) {$b}}; f(1)(2)

[20:14] <evalbot_r15831> \2

[20:14] <spinclad> ?eval sub f($a) { -> ($b) {$a}}; f(1)(2)

[20:14] <evalbot_r15831> \1

[20:14] <spinclad> ?eval sub f($a) { -> ($b) {$b}}; f(1)(2)

[20:14] <evalbot_r15831> \2

[20:16] <spinclad> pmurias: you may want to lose the 'return' you had, it wants to return from the call to f itself

[20:16] *** the_dormant joined
[20:16] <pasteling> "szabgab" at 192.117.127.193 pasted "Compilation error" (22 lines, 862B) at http://sial.org/pbot/24058

[20:16] <spinclad> ?eval sub f($a) { -> ($b) {return $a}}; f(1)(2)

[20:16] <evalbot_r15831> (no output)

[20:17] <szabgab> so perl Makefile.PL now works but I get a compilation error, see the link above

[20:18] <spinclad> (which already got the -> {...} to return)

[20:18] <spinclad> s/to return/ return to it/

[20:18] <spinclad> s/return/returned/

[20:19] <szabgab> what is this "setup configure" I am supposed to run?

[20:23] *** the_dormant joined
[20:24] <pmurias> ?eval sub f($a) {-> $b {"$a and $b"}};f(1)(2)

[20:24] <evalbot_r15831> "1 and 2"

[20:24] *** diakopter left
[20:25] <pmurias> spinclad: thanks

[20:25] <spinclad> sub f($a) {sub ($b) {return "$a and $b"}}; f(1)(2)

[20:26] <spinclad> hm.. thought that would work

[20:26] <spinclad> (return from inner sub)

[20:26] <pmurias> dduncan: hi

[20:26] <moritz> spinclad: perhaps with an ?eval in front?

[20:26] <Tene> spinclad: you didn't ?eval

[20:26] <spinclad> ?eval sub f($a) {sub ($b) {return "$a and $b"}}; f(1)(2)

[20:26] <evalbot_r15831> "1 and 2"

[20:26] <spinclad> right, duh

[20:26] <dduncan> pmurias, hi

[20:26] <Tene> ?eval sub f ($a) { -> $b { "$a and $b" } }; f(1)(2)

[20:26] <evalbot_r15831> "1 and 2"

[20:28] <pmurias> dduncan: when will you release QDBMS?

[20:29] <dduncan> this weekend I hope ... maybe even late today if I'm not diverted to other things

[20:29] * pmurias is switching from jifty and would love to give it a try

[20:29] <dduncan> keep in mind though that its first release is only pre-alpha, and about as usable as Pugs in its first few months

[20:29] <dduncan> it will take a few more releases before it can replace anything

[20:30] <dduncan> however, after the first release, it should be easy for myself or others to hack features on to it

[20:30] <geoffb> pmurias: you are switching *from* jifty?

[20:30] <geoffb> Out of curiosity, why?

[20:31] <dduncan> in any event, you may end up using both of them together

[20:31] <geoffb> I was just thinking it was getting interesting enough to play with

[20:31] <dduncan> since QDRDBMS is just as much a tool to make DBI wrappers with as being a standalone

[20:31] <dduncan> so tools like Jifty may refactor to use it internally, while presenting a nicer interface

[20:34] <pmurias> i do all of my gui in ajax(a single page) so i use only the webservice api

[20:35] <pmurias> s/only/only use/

[20:36] <pmurias> i got too frustrated with getting jifty to use only utf-8 (instead of the abdominable iso-8859-1) so desided it wasn't worth it

[20:37] <pmurias> s/getting/trying to get/

[20:37] <geoffb> wow, seems like something they would have gotten right!

[20:40] <pmurias> they don't set iso-* explicitly anywhere, so it's probably a case of my environment being screwed up somehow

[20:40] <geoffb> ah

[20:41] <geoffb> Distros are starting to default to UTF-8 locales, so in the future that may just fix itself ....

[20:41] <pmurias> it don't use mason at all, so i could have skipped the default setting code somehow

[20:44] <pmurias> i have set a utf-8 locale at my box, but i'm using gentoo so i would have to go on a holiday to recompile my whole system :(

[20:45] <lichtkind> TimToady: i have written that in the time before release of perl 1.0 you biggest halpers was Daniel Faigin and Mark Biggar. is that aproximatly right?

[20:47] <pmurias> Jifty::Collection isn't designed for complex, so i'm not to keen on it too

[20:51] <geoffb> Well, maybe I'll just stick with hand-rolled Mason and mod_perl stuff then ....

[20:53] *** perlmonkey2 joined
[20:55] <pmurias> i only need a simple webservice api POST --> JSON, so web templating is needless in this case

[20:56] <geoffb> nodnod

[20:56] <pmurias> i'll use CGI::Fast + lighttpd as it seem the simplest option

[20:57] *** nagayama is now known as nagayaway

[20:57] <geoffb> OK, that leads me to another question -- what is the appeal of lighttpd + CGI, rather than mod_perl?

[20:57] <geoffb> (that's an honest question, not a troll)

[20:58] <Tene> I think they're more for different applications.

[20:59] <geoffb> Tene.last_comment.get_details();

[20:59] <pmurias> i configured lighttpd more recently (wanted to use it with jifty)

[21:00] <pmurias> lighttpd is likely faster, and mod_perl is more magical

[21:02] <Tene> geoffb: if you're doing a lot of database work, for example, it's a pain to open and close a new db connection for every page view.

[21:03] <pmurias> Tene: do you have to do it in mod_perl?

[21:03] <geoffb> Tene: sure, that's what Apache::DBI is for

[21:03] <Tene> I'm fairly certain that you can't have persistant state and such with CGI::Fast and lighttpd, but I'm not a reliable or accurate source for anything today.

[21:03] <pmurias> Tene: on disk or in memory?

[21:03] <moritz> Tene: I thought CGI::Fast allows that

[21:04] <Tene> moritz: like I said, I'm incompetent today.  correct me if I'm wrong.

[21:04] <pmurias> the example in the docs does it

[21:04] <Tene> pmurias: persistant db connection?

[21:04] <Tene> Huh.

[21:04] <Tene> 'kay, ignore me.

[21:07] <geoffb> It's my personal belief that for any important feature, and for all environments more than a couple years old, P(env has feature) = ~1

[21:07] <geoffb> If the environment is popular, and it's missing something really damn useful, someone will add it.

[21:07] <Tene> like CPAN for PHP?

[21:08] <Tene> ;)

[21:08] <geoffb> Well, they did it for JS ...

[21:08] <geoffb> but then, the '~' is important.  Occasionally you find a gap.

[21:08] * Tene nods.

[21:09] <geoffb> Or the env authors find a different local maximum that they prefer.  Like Python's "batteries included" philosophy.

[21:09] <Tene> Yeah.

[21:09] <Aankhen``> Tene: PEAR?

[21:09] <Aankhen``> Only PEAR is quite useless compared to CPAN.

[21:09] <Tene> Aankhen``: "Total number of packages: 437"

[21:09] <Aankhen``> geoffb: JSAN hasn't exactly caught the JavaScript-using world's imagination quite yet...

[21:09] <Aankhen``> Tene: Well, yeah, like I said. :-)

[21:10] <Khisanth> CTAN :)

[21:10] <Aankhen``> Comprehensive Tanning Archive Network?

[21:10] <geoffb> That's because, all trolling aside, JS got really damn widely used by A) non-CS people, and B) way before JSAN was created, so millions of JS coders don't know about JSAN, or even that it's worth looking for

[21:10] <Khisanth> except CTAN came first

[21:10] <geoffb> TeX.

[21:11] <Khisanth> also in many instances it seems like it is much easier to work with JS when NOT using any of the popular libraries which all has some fault or another

[21:12] <geoffb> Yeah, lots of weak code, no core set of rockin' stuff that everyone agrees to just use and be done with.

[21:12] <Aankhen``> geoffb: Mostly because JS doesn't really have any easy way to handle namespaces.

[21:12] <Aankhen``> s/namespaces/packages/, sorry.

[21:13] <geoffb> Aankhen``: I was about to say, namespaces they have.  ;-)

[21:13] <Aankhen``> Heh.

[21:13] <Aankhen``> That's one of the things about JS2 which I want most.

[21:13] * geoffb will be damned happy when that nice AS VM is merged into production Firefox ....

[21:14] <Aankhen``> AS?

[21:14] <geoffb> Adobe ActionScript (basically just JS).

[21:14] <Aankhen``> Ah, ActionScript.

[21:14] <Aankhen``> Yeah, but that won't happen before 2008, IIRC.

[21:14] <geoffb> The newest version is not only newer in spec compliance, but is based on a VM that's about 10x as fast as the current Firefox one.

[21:14] <Aankhen``> Which means we might see it some time around 2009.

[21:15] <geoffb> nod.

[21:15] <Aankhen``> Er, see it in production Firefox.

[21:15] <geoffb> A man can dream.  I'm *here*, after all.

[21:15] <Aankhen``> Hehe.

[21:15] <pmurias> action script?

[21:15] <Aankhen``> What I really want is Firefox with an embedded Parrot 1.0.0. =)

[21:15] <geoffb> pmurias: branded JavaScript

[21:15] <Aankhen``> Actually, it's branded ECMAScript.

[21:16] <Khisanth> geoffb: so you are waiting for JS on Perl6 on Parrot? :P

[21:16] <geoffb> Aankhen``: NODNOD

[21:16] <geoffb> Khisanth: I'd settle for iblech coming back.

[21:16] <pmurias> my irrsi window was scrolled up so i only so the AS? line :)

[21:16] <geoffb> Perl 6 in my browser, dammit

[21:16] <Khisanth> Aankhen``: embedding a parrot in your computer is going to be messy

[21:16] <Aankhen``> Khisanth: I'll leave that to the technical people. ;-)

[21:17] <Khisanth> how are they going to deal with the blood and guts?

[21:17] <geoffb> Is iblech still in school?

[21:18] <Aankhen``> Hey, that's THEIR problem.

[21:18] <pmurias> and THE parrots

[21:19] <Aankhen``> YEAH.  It's not MY problem.  You can TELL from all the CAPS.

[21:19] <moritz> hey, what about porting parrot to System-C and build parrot hardware? *g*

[21:19] * Aankhen`` wanders off to shower.

[21:20] * Khisanth shuts off Aankhens water supply

[21:22] * spinclad tampers with the water heater

[21:22] <spinclad> (cruel we arre, yess, preciouss)

[21:23] * moritz fills the pipes with fluid sodium

[21:24] <spinclad> what, so he can still have his shower, yes?

[21:25] <spinclad> (er.. EGENDERUNRECORDED, core dumped)

[21:25] <moritz> spinclad: yes, I sometimes have moments where I want to help others ;-)

[21:26] <Khisanth> 97.72 ¬∞C shower doesn't sound very helpful!

[21:26] <spinclad> hot enough anyway

[21:27] <Khisanth> and I seem to recall sodium combines with water in exciting ways :)

[21:28] <moritz> Khisanth: you recall correctly ;-)

[21:28] <spinclad> yes, you must drain the system thoroughly before this procedure

[21:28] <moritz> or you apply enough pressure ;-)

[21:29] <moritz> did you know that there was a nuclear reactor in france that was cooled by liquid sodium?

[21:29] * moritz finds that fascinating - and scary

[21:29] <moritz> imagine it starts burning - and you have to put out the flames somehow... ;-)

[21:32] <spinclad> dump a load of freon on it.  though if it's getting stealing OH- from the water...

[21:33] <spinclad> let the water boil off, that'll put it out

[21:33] <moritz> spinclad: that's like "blow oxigen into the fire, then it goes out faster" ;-)

[21:34] <spinclad> ? 'let the wood burn away, the fire goes out'

[21:35] <moritz> very funny if you are near a nuclear reactor that needs cooling

[21:35] <moritz> and all the cooling fluid burns off

[21:36] <offby1> har har

[21:39] <spinclad> i'd like to try to keep the sodium inside the pipes, somehow; coolant system leaks are a problem whatever their medium

[21:42] <spinclad> in the heat exchangers these are two fluids one very much wants to keep separate

[21:43] *** pmurias left
[21:45] <dduncan> if you had the proper kind of nuclear reactor, then the reaction would stop if the coolant went away, because the coolent is necessary for the reaction to take place at all ... I think those are called candu reactors or something

[21:46] <moritz> dduncan: I though the candu ones are using graphein, but don't shut down automatically...

[21:46] <moritz> dduncan: while HT reactors and boiling waters shut down by themselves

[21:46] <spinclad> where the coolant moderates the neutrons to reaction energy

[21:46] <moritz> but the french one was a fast breeder

[21:47] <dduncan> I just know that more modern or proper reactors won't overheat since the water going away would stop the reaction

[21:47] <moritz> dduncan: that's certainly true

[21:50] <TimToady> lichtkind: yes, they were my officemates.  (Mark is also my brother-in-law, and happens to be in the room with me now.)

[21:53] <lichtkind> TimToady: thanks i did know that he is you brother in law, i wrote it in the article, i read nearly every interview available :)

[21:55] <lichtkind> TimToady: i just bother you to make this articel exellent :)

[22:56] *** lichtkind_ joined
[22:57] *** miyagawa joined
[22:59] *** lichtkind_ is now known as lichtkind

[23:01] *** sili is now known as jagerwoman

[23:02] *** theorbtwo joined
[23:05] *** SubStack joined
[23:06] *** jagerwoman is now known as sili

[23:35] <zgh> sili: subtle

[23:45] <sili> o rly

[23:47] <sili> zgh: subtle is my middle name

[23:48] <zgh> oh i thought it was martha. I'll need to rewrite your birthday card

[23:49] <sili> zgh: whhhaaazzuzuupp?

[23:50] <zgh> sili: geni is up. just another way to bide my time until I can get someone to let me use perl6 in production

[23:50] <sili> nice.

[23:54] *** lisppaste3 joined
[23:56] *** ozo left
