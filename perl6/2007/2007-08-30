[00:03] *** vdrab joined
[00:08] *** mj41__ joined
[00:08] *** mj41__ is now known as mj41

[00:33] *** stevan_ joined
[00:33] *** stevan_ left
[00:43] *** bsb_ joined
[00:54] *** sunnavy joined
[00:56] *** nekokak joined
[01:01] *** lyokato joined
[01:05] <DarkWolf84> ?eval say localtime(time);

[01:06] *** weinig_ joined
[01:06] *** pro21ms4 joined
[01:06] *** pro21ms4 left
[01:06] <pugsbot_r17185> OUTPUT[<obj:Time::Local>␤] Bool::True

[01:06] <DarkWolf84> I found a bug

[01:07] <DarkWolf84> why this is just capture

[01:07] *** weinig left
[01:09] *** Limbic_Region left
[01:13] <DarkWolf84> maybe my mistake again

[01:13] <DarkWolf84> :(

[01:14] *** eXile7 left
[01:30] <pugs_svnbot> r17497 | sunnavy++ | added tests for the equivalence of .123 and 0.123

[01:30] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17497

[01:56] *** melissa joined
[01:57] *** melissa left
[01:57] *** melissa joined
[01:57] *** melissa left
[02:00] *** melissa joined
[02:28] *** thoughtpolice joined
[03:13] *** nekokak_ joined
[03:31] *** nekokak left
[03:35] *** weinig_ is now known as weinig

[03:37] *** amnesiac joined
[03:41] *** JarJarBinks joined
[03:56] *** Ashizawa joined
[04:14] *** masak joined
[04:25] *** cj joined
[04:25] <cj> lar lar lar

[04:26] <cj> anything fun happening here?

[04:26] <masak> cj: 'lar', is that Singaporean English?

[04:26] <masak> and yes, we always have fun :)

[04:27] <masak> right now, there is some development around kp6, nqp and the grammar, I think

[04:27] *** ubajas joined
[04:27] <masak> moritz_ has deployed a new bot

[04:30] <cj> hurm... no Perl::Critic in etch :(

[04:31] <cj> masak: it could be Singaporean English :)

[04:31] <cj> what's kp6?

[04:33] <masak> cj: you'll just have to go through CPAN, like the rest of us

[04:34] <masak> cj: kp6 is Kinda Perl 6

[04:34] <masak> it's a subset of Perl 6 developed in mp6, Mini Perl 6

[04:35] <masak> increasingly feature-complete, it's to be bootstrapped and implemented in itself

[04:35] *** lyokato left
[04:37] <masak> see http://svn.pugscode.org/pugs/v6/v6-KindaPerl6/docs/kindaperl6-spec.pod

[04:37] <lambdabot> http://tinyurl.com/yt5pg2

[04:43] *** weinig left
[04:48] *** lyokato joined
[05:03] *** weinig joined
[05:11] *** weinig left
[05:12] *** weinig joined
[05:22] *** elmex joined
[05:30] <cj> masak: that sounds pretty neato

[05:31] <pugs_svnbot> r17498 | sunnavy++ | fixed an invalid comment for smartlink

[05:31] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17498

[05:31] <lambdabot> Title: Changeset 17498 - Pugs - Trac

[05:32] <masak> cj: yes. furthermore, I gather there's a YAPC and a corresponding hackathon going on

[05:32] <masak> many of the regulars are involved in that IRL, so this channel seems eerily quiet

[05:33] <cj> where's the current YAPC?

[05:33] <masak> good question

[05:33] <masak> Vienna, apparently

[05:33] <sunnavy> from s02: Variables with native types do not support undefinedness: it is an error to assign an undefined value to them.

[05:33] <masak> http://vienna.yapceurope.org/ye2007/

[05:33] <lambdabot> Title: YAPC::Europe 2007 in Vienna | YAPC::EU | 2007 | Vienna | 28th to 30th August 200 ...

[05:34] <sunnavy> anybody knows why?

[05:34] *** jisom joined
[05:34] <masak> sunnavy: a guess would be that native types are tied somewhat to hardware, and may not support such a value

[05:37] <sunnavy> masak: what about `my int $x;', what's the value of $x now? not undef?

[05:37] <masak> sunnavy: 0?

[05:38] <masak> seems reasonable to me

[05:38] <masak> p'haps because I come from the Java direction, where this is the case with instance int variables

[05:39] <sunnavy> pugs -e 'say my int $x'

[05:39] <sunnavy> we get a ``int\n"

[05:40] * masak too

[05:40] <masak> that's likely wrong

[05:41] <sunnavy> I wish I can find answers when I get through syn, hehe.

[05:43] <masak> as far as I can see, there's no test for setting my int $x to 0

[05:43] <masak> maybe one of us should add one? that's usually the best way to codify questions for posterity :)

[05:44] <jisom> make it a todo test and people will think it used to be "broken"

[05:44] <masak> jisom: they will?

[05:45] <sunnavy> but we are not quite sure if that's right.

[05:45] <jisom> if they're actually checking what tests are failing and what's succeeding that used to fail

[05:45] <masak> jisom: ah. a todo test sounds like a good idea

[05:46] <masak> sunnavy: true, but a test is easy to change after the fact

[05:46] <jisom> I'm halfway joking, most people just report tests and don't delve further

[05:46] <masak> it's better to add the test and forget about it, than not to add the test and forget about it

[05:48] <sunnavy> masak, it's not a sigle test, how about other native types?

[05:49] <masak> sunnavy: they too, I suppose

[05:49] <masak> are all native types numerical? even without checking S02, i guess not

[05:49] <masak> what should the default values be for the non-numerical types?

[05:49] <jisom> you know of a computer that knows anything but bits?

[05:50] <masak> jisom: that's not the point

[05:50] <wolverian> masak, the prototype? :)

[05:51] <masak> wolverian: you lost me. what do you mean?

[05:51] <jisom> if they're native types, a computer really only has ints and floats, and sort of pointers

[05:51] <masak> ok

[05:51] <masak> so 0 all the way, then

[05:52] <sunnavy> We'd better keep this confusion till it's clear :-)

[05:52] <sunnavy> maybe bother to ask TimToday, hehe

[05:53] <sunnavy> s/TimToday/TimToady/

[05:53] <jisom> btw, to complicate things, the equivalent of undef for a float is nan so should floats default to nan? :-p

[05:53] <masak> @ask TimToady whether all native types are 0 at first

[05:53] <lambdabot> Consider it noted.

[05:54] <masak> sunnavy: there. asking is easy when lambdabot is around

[05:54] <masak> @thx

[05:54] <lambdabot> you are welcome

[05:54] * masak pats lambdabot on the head

[05:54] <sunnavy> so cool ;-)

[05:54] <masak> ;)

[05:55] <masak> yes, ph3ar the p0wer of haskell

[06:07] *** meppl joined
[06:10] <moritz_> re

[06:10] <moritz_> g'morning

[06:19] <masak> moritz_: good morning

[06:24] *** JarJarBi1ks joined
[06:27] *** vdrab left
[06:32] *** Schwern joined
[06:36] *** JarJarBinks left
[06:39] *** zamolxes left
[06:42] *** iblechbot joined
[06:47] *** Ashizawa is now known as ashizawa

[06:48] *** devogon joined
[06:50] *** Aankhen`` joined
[07:10] *** renormalist joined
[07:14] *** iblechbot left
[07:17] *** amnesiac left
[07:17] <pugs_svnbot> r17499 | fglock++ | [kp6] updated Junction

[07:17] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17499

[07:17] <lambdabot> Title: Changeset 17499 - Pugs - Trac

[07:19] *** Aankhen`` left
[07:20] *** Aankhen`` joined
[07:20] <moritz_> I didn't know that kp6 implements return'ing from an inner scope

[07:20] <moritz_> I thought I tried it lately, and it gave a "not implemented" message

[07:22] <TimToady> masak: after talking it over with TheDamian, we'd probably go with int = 0 and num = NaN, perhaps with pragmatic control, though it's easy enough to = 0 xx *

[07:23] *** ruoso joined
[07:25] <masak> TimToady: I love it how you guys talk things over based on stuff we discuss here on IRC

[07:25] <masak> you're better than the Swiss government!

[07:27] <masak> so... add tests for it?

[07:29] <pugs_svnbot> r17500 | moritz++ | [kp6]

[07:29] <pugs_svnbot> r17500 | moritz++ |  * Junctions: corrected true() for 'one'

[07:29] <pugs_svnbot> r17500 | moritz++ |  * EmitPerl5: more newlines in generated p5 output

[07:29] <pugs_svnbot> r17500 | moritz++ |  * Array:     a stub min() implementation

[07:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17500

[07:29] <lambdabot> Title: Changeset 17500 - Pugs - Trac

[07:29] <moritz_> masak: I'd wait until it's in the specs

[07:33] <masak> moritz_: good idea

[07:37] *** thoughtpolice left
[07:45] *** weinig left
[07:45] *** Azure-BOT left
[07:56] <pugs_svnbot> r17501 | ruoso++ | [kp6] new test. new with parameter is still a syntax error

[07:56] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17501

[07:56] <lambdabot> Title: Changeset 17501 - Pugs - Trac

[07:59] *** drupek12 joined
[08:04] *** fglock joined
[08:05] <sunnavy> TimToady: how about the other native types? be initialized to what?

[08:08] *** fleurtons joined
[08:08] *** fleurtons left
[08:09] *** fridim joined
[08:12] *** franck___ joined
[08:19] *** test joined
[08:19] *** test left
[08:21] *** Azure-BOT joined
[08:22] <moritz_> I'd suggest bool with false...

[08:22] <moritz_> buf with empty buffer

[08:22] *** b00t joined
[08:22] *** flokuehn joined
[08:22] <moritz_> complex... NaN?

[08:23] <moritz_> my humble suggestions

[08:23] <moritz_> but most are pretty straight forward ;)

[08:27] <moritz_> #kp6 say 2+4*5

[08:27] <exp_evalbot> r17501: OUTPUT[22␤]

[08:30] <xinming> #kp6 (2+4*5).say

[08:30] <exp_evalbot> r17501: OUTPUT[22␤]

[08:30] <sunnavy> In fact, I like undef, but I don't know exactly why there are no undef in native types.

[08:30] <xinming> my @a = qw/a b c/; @a.perl.say

[08:30] <xinming> #kp6 my @a = qw/a b c/; @a.perl.say

[08:30] <exp_evalbot> r17501: OUTPUT[Syntax Error␤DISPATCH: calling APPLY on invalid object:$VAR1 = {};␤␤ at lib5/KindaPerl6/Runtime/Perl5/MOP.pm line 31␤  main::DISPATCH('undef', 'APPLY') called at - line 19␤]

[08:30] <moritz_> sunnavy: because "native" is what is implemented in hardware...

[08:30] <moritz_> sunnavy: and hardware doesn't know undef

[08:31] <moritz_> xinming: the p6 syntax for qw/ .. / is < .. >

[08:31] <moritz_> #kp6 my @a; @a=<a b c>;

[08:31] <exp_evalbot> r17501: OUTPUT[Syntax Error␤]

[08:31] <xinming> #kp6 my @a = <a b c>; @a.perl.say

[08:31] <exp_evalbot> r17501: OUTPUT[Syntax Error␤]

[08:31] <moritz_> but it's NYI it seems

[08:33] <ruoso> fglock, did you notice the new 43 test?

[08:33] <ruoso> when running with --ast, it indeed shows a parse error...

[08:34] <sunnavy> moritz: gotcha, though still not very comfortable with it. :-)

[08:36] <pugs_svnbot> r17502 | moritz++ | [irclog] ilbot2.pl, a POCOIRC-based irc log bot works now

[08:36] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17502

[08:36] <lambdabot> Title: Changeset 17502 - Pugs - Trac

[08:36] <moritz_> sunnavy: well, nobody is forced to use it - if you want the comfort, use Int instead of int ;)

[08:36] *** iblechbot joined
[08:37] <moritz_> I think native types are meant for situations where you really have to know what you are doing - for example if you want to implement a bigint lib in perl, you'd use native types

[08:37] <moritz_> but for "normal" variables the "normal" types are preferred

[08:38] *** devogon left
[08:38] *** devogon joined
[08:40] <sunnavy> Before I thought native types are a lot like the variables in Perl 5, this misled me much. ;-)

[08:40] *** fglock left
[08:42] <meppl> good morning

[08:43] <moritz_> good morning meppl ;)

[08:43] <meppl> good morning moritz

[08:43] <pugs_svnbot> r17503 | moritz++ | [irclog] fixed previous commit (hopefully)

[08:43] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17503

[08:43] <lambdabot> Title: Changeset 17503 - Pugs - Trac

[08:45] *** drupek12 left
[08:45] *** DarkWolf84 left
[08:46] *** irclogbot joined
[08:48] *** b00t left
[08:50] *** ilbot2 joined
[08:51] *** drupek12 joined
[08:51] *** ilbot2 left
[08:51] *** drupek12 left
[09:00] *** ruoso left
[09:05] *** drupek12 joined
[09:07] *** buetow joined
[09:08] *** test joined
[09:09] *** test left
[09:09] *** test joined
[09:10] *** jedai joined
[09:10] *** test left
[09:11] *** test joined
[09:12] *** irclogbot left
[09:13] *** ruoso joined
[09:13] *** sunnavy left
[09:13] <moritz_> #perl6, #cdk and #bioclipse are now logged by a single bot

[09:13] <moritz_> I hope it works ;)

[09:21] <masak> moritz_: seems to work over at #bioclipse at least

[09:23] <moritz_> masak: Aye, same here... I just don't understand why the bot insists on naming itself "test", I told it to take the name "ilbot2" ;)

[09:32] *** renormalist left
[09:33] *** zamolxes joined
[09:36] *** scw joined
[09:48] *** buetow left
[09:55] *** devogon left
[09:55] *** devogon joined
[10:01] *** mr_ank joined
[10:11] <Blwood> woaw

[10:11] <Blwood> ?eval [*] 1..5

[10:12] <Blwood> where is the bot :(

[10:12] <pugsbot_r17185> 120

[10:12] <Blwood> oh :)

[10:12] <pugs_svnbot> r17504 | moritz++ | svn-search: added search hints to template.

[10:12] <pugs_svnbot> r17504 | moritz++ | URL is http://moritz.faui2k3.org/svn-search/

[10:12] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17504

[10:12] <lambdabot> Title: Changeset 17504 - Pugs - Trac

[10:12] <moritz_> Blwood: gone :(

[10:12] <lambdabot> Title: Pugs SVN search

[10:13] <moritz_> #pugs [*] 1..5

[10:13] <exp_evalbot> OUTPUT[120␤]

[10:13] <Blwood> :)

[10:13] <moritz_> it's a new, different bot

[10:13] <moritz_> I don't know what diakopter++ did to the old one

[10:13] <Blwood> #pugs [+] split "", [*] 1..5

[10:13] <exp_evalbot> OUTPUT[3.0␤]

[10:13] <Blwood> this one is good too, isn't it :o ?

[10:14] <moritz_> it supports different implementations

[10:14] <moritz_> #kp6 "hello".say

[10:14] <exp_evalbot> r17503: OUTPUT[hello␤]

[10:14] <Blwood> ah nice :)

[10:14] <moritz_> additionally there are #p6 (p6 on parrot) and nqp

[10:15] <Blwood> perl6 is kind of magic

[10:16] *** riffraff joined
[10:16] <moritz_> indeed ;I

[10:16] <Blwood> how to compute the factorial of a number and add all its digits ?

[10:16] <Blwood> [+] split "", [*] 1..5 does it :o

[10:16] <Blwood> even in Haskell it's harder

[10:17] <Blwood> (I may be wrong)

[10:17] <Blwood> sum . map digitToInt .  show . product $ [1..5] does it in Haskell

[10:20] <moritz_> would you like help a bit with perl6?

[10:20] *** bsb_ left
[10:21] <Blwood> yeah I would like to, but I'm don't know if I'm enough competent

[10:22] <moritz_> there are complicated and easy tasks

[10:22] <moritz_> just /msg me your email address and your desired username, and I'll send you a commit bit

[10:23] <Blwood> okay :)

[10:23] <moritz_> http://dev.pugscode.org/wiki/Overview gives an overview of the haskell source

[10:24] <lambdabot> Title: Overview - Pugs - Trac

[10:25] <moritz_> damned, feather has a load of 13, and commitbit doesn't respond

[10:27] <moritz_> Blwood: I hope the email is out (sender: audrey tang), if you don't receive one in the next 15 minutes please ask again

[10:27] <Blwood> okay :)

[10:28] <Blwood> thank you 

[10:28] <moritz_> you're welcome ;)

[10:28] <moritz_> there are many things that can be done without knowlodge of compiler construction, like writing tests

[10:28] <moritz_> in t/ there are ~20,000 test, but we need more

[10:29] <Blwood> yeah the more, the best :p

[10:29] <moritz_> aye

[10:29] <moritz_> and some features and builtins are not tested yet

[10:30] <moritz_> of course if you like haskell, pugs hacking is the best you can do

[10:30] <moritz_> but I have to admit I don't know how easy or complex the pugs source code is... I managed to contribute about two lines so far ;)

[10:31] <Blwood> haha :), so I'll have a deeper look inside /src/ 

[10:33] <moritz_> aye ;)

[10:33] <moritz_> best thing might be to run a smoke and look at a simple bug, and try to fix that

[10:34] *** jisom left
[10:37] <Blwood> I've just received the mail :)

[10:37] *** renormalist joined
[10:38] <moritz_> YaY

[10:43] <Blwood> I don't know if it's me but commitbit is not responding :( 

[10:43] <moritz_> it tags ages, really

[10:44] <moritz_> the server it runs has a load avg. of 15 atm :(

[10:48] <moritz_> Blwood: btw it's a custom to add yourself to the AUTHORS file in the first commit, to test the commit bit

[10:49] <Blwood> all right :)

[10:50] <Blwood> I come back in 30min it's nearly 1pm and my stomach hurts :(

[10:50] <Blwood> 13pm*

[10:51] <moritz_> 1pm was right... seems we're in the same time zone ;)

[10:52] <moritz_> and lunch is a very good idea ;)

[10:55] <pugs_svnbot> r17505 | renormalist++ | - a minimalistic all-in-one call of kp6

[10:55] <pugs_svnbot> r17506 | renormalist++ | - without perltidy

[10:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17506

[10:55] <lambdabot> Title: Changeset 17506 - Pugs - Trac

[10:56] <moritz_> renormalist: are you on the wsorga mailing list?

[10:58] *** rhizo joined
[11:00] *** ruoso left
[11:23] *** rindolf joined
[11:24] *** cognominal_ joined
[11:27] *** renormalist left
[11:37] *** drupek12 left
[11:41] *** stevan_ joined
[11:45] *** drupek12 joined
[11:52] *** rindolf left
[11:52] *** ruoso joined
[11:58] *** test left
[11:59] *** test joined
[11:59] *** test left
[11:59] <pugs_svnbot> r17507 | moritz++ | [irclog] many whitespace fixes

[11:59] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17507

[11:59] <lambdabot> Title: Changeset 17507 - Pugs - Trac

[11:59] *** test joined
[12:03] *** masak left
[12:05] <pugs_svnbot> r17508 | moritz++ | [irclog] remove trailing punctuation from URLs

[12:05] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17508

[12:05] <lambdabot> Title: Changeset 17508 - Pugs - Trac

[12:05] *** felipe joined
[12:06] *** Shillo joined
[12:09] *** cognominal_ left
[12:09] *** Casan joined
[12:11] <pugs_svnbot> r17509 | fglock++ | [mp6] set svn props

[12:12] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17509

[12:12] <lambdabot> Title: Changeset 17509 - Pugs - Trac

[12:12] *** drupek12 left
[12:12] *** DarkWolf84 joined
[12:13] *** drupek12 joined
[12:13] *** cognominal_ joined
[12:18] *** fglock joined
[12:18] <fglock> back at kp6 hackathon

[12:20] *** renormalist joined
[12:27] <pugs_svnbot> r17510 | ruoso++ | [kp6] marking test 43 as TODO, as the grammar doesnt support new with args...

[12:27] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17510

[12:27] <lambdabot> Title: Changeset 17510 - Pugs - Trac

[12:28] <moritz_> svn up

[12:28] <moritz_> svn: PROPFIND request failed on '/pugs'

[12:28] <moritz_> svn: PROPFIND of '/pugs': 403 Forbidden (http://svn.pugscode.org)

[12:29] <moritz_> that's not good :/

[12:29] <moritz_> now it works again...

[12:32] <moritz_> ruoso: I think it's token exp_seq that needs hacking if you want to allow argument pairs...

[12:33] <moritz_> you'd have to replace it with something that parses anything that returns a list or a hash or a pair

[12:33] *** cmarcelo joined
[12:37] *** Shillo left
[12:39] *** stevan_ left
[12:46] *** masak joined
[12:47] <pugs_svnbot> r17511 | fglock++ | [kp6] updated IDEAS-HACKATHON

[12:47] <pugs_svnbot> r17511 | fglock++ | fixed none(...) stringification

[12:47] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17511

[12:48] <fglock> moritz_: re exp_seq, we are adding support for named params (Runtime::Perl6::Capture), but it still needs some integration work

[12:50] <pugs_svnbot> r17512 | fglock++ | [kp6] fixed last commit

[12:50] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17512

[12:50] <lambdabot> Title: Changeset 17512 - Pugs - Trac

[12:53] *** fridim left
[13:02] *** cognominal_ left
[13:04] *** cognominal_ joined
[13:06] *** lyokato left
[13:09] <Blwood> moritz_, are you here ?

[13:10] <Blwood> I'll be back in 2h

[13:10] <fglock> [particle]: ping

[13:10] <pugs_svnbot> r17513 | fglock++ | [kp6] updated roadmap

[13:10] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17513

[13:10] <Blwood> (I have some questions about the tests)

[13:10] <lambdabot> Title: Changeset 17513 - Pugs - Trac

[13:12] <moritz_> Blwood: depends on your notion of "here" ;)

[13:14] <bloonix> I really missing a dumper vor structes :/

[13:14] <bloonix> like Data::Dumper

[13:14] <moritz_> Blwood: use .perl

[13:15] <moritz_> sorry, bloonix ;)

[13:15] <bloonix> is there a temporary dumper way for p6 structures?

[13:15] <[particle]> fglock: pong

[13:16] <moritz_> #pugs my %a = b => [c,d], e => f; say %a.perl

[13:16] <exp_evalbot> OUTPUT[*** No such subroutine: "&c"␤    at /tmp/RIhcxjIxHF line 1, column 15-18␤]

[13:16] <fglock> [particle]: i'm working with Jonathan in the mp6-parrot emitter

[13:17] <fglock> we think is reasonably possible to have mp6 bootstrapped in parrot

[13:17] <moritz_> #pugs my %a = b => <c d>, e => f; say %a.perl

[13:17] <exp_evalbot> OUTPUT[*** No such subroutine: "&f"␤    at /tmp/Hi5F0HyrqD line 1, column 26-27␤]

[13:17] <fglock> so that we can compile kp6 to parrot using it

[13:17] <[particle]> ok, great!

[13:17] <moritz_> #pugs my %a = b => <c d>, e => 3; say %a.perl

[13:17] <exp_evalbot> OUTPUT[{("b" => ("c", "d")), ("e" => 3)}␤]

[13:18] <moritz_> bloonix: that's your Data::Dumper ;)

[13:18] <[particle]> fglock: hopefully we have enough of the new object model for that

[13:18] <bloonix> grml

[13:18] <[particle]> (jonathan should know) :)

[13:18] <fglock> [particle]: we've been discussing several other options, but this seems to be the most simple

[13:18] <fglock> he said any parrot problems should be fixed anyway

[13:19] <[particle]> fglock: i'm still going to pursue serialized past and ast-past translation as i think it's of use

[13:19] <bloonix> moritz_: but all in one line :)

[13:20] <fglock> [particle]: yes, that's one of the ideas - it would be nice to have that working

[13:20] <fglock> do you think it would be difficult to have a past parser for parrot?

[13:21] <[particle]> fglock: i talked to pmichaud and ingy and we'll use a json++ subset of yaml

[13:21] <fglock> i thougt about emitting parrot code that would build the tree

[13:21] <[particle]> basically json with types

[13:21] <fglock> ok

[13:21] <[particle]> ...and using blocks instead of indent levels

[13:21] <fglock> so we could make kp6 emit that, right?

[13:21] <[particle]> yes indeed

[13:22] <moritz_> is there a PAST definition somewhere?

[13:22] <[particle]> fglock: http://rafb.net/p/qqJLjn69.txt

[13:23] <[particle]> moritz_: there's plenty of comments in the source

[13:23] <[particle]> i'll get you a link

[13:23] *** yuteh joined
[13:23] *** yuteh left
[13:23] <[particle]> fglock: this syntax is true yaml, but it shows the hierarchy of past.

[13:24] <fglock> [particle]: i wonder if it would be possible to have a parenthesis-delimited version, that's a bit easier to emit

[13:24] <[particle]> the syntax we want would look a bit different (like i said, blocks instead of indents, and more json-like)

[13:24] <fglock> oh, that's what blocks instead of indents means

[13:24] *** cognominal_ left
[13:24] <[particle]> yep, {

[13:25] <[particle]> it's easier to parse, too :)

[13:26] <[particle]> moritz_: http://svn.perl.org/parrot/trunk/compilers/past-pm/PAST/Node.pir

[13:26] <moritz_> [particle]: thanks

[13:26] *** JarJarBi1ks is now known as JarJarBinks

[13:26] <fglock> do i have to figure out the 'pirop' codes, or is this already implemented elsewhere?

[13:27] <[particle]> fglock: that's in the language grammar, i'll post an example

[13:28] <[particle]> http://svn.perl.org/parrot/trunk/languages/nqp/src/Grammar.pg /pirop

[13:28] <[particle]> also see http://svn.perl.org/parrot/trunk/languages/nqp/src/Grammar/Actions.pir

[13:28] <lambdabot> http://tinyurl.com/2zvwah

[13:31] *** cognominal_ joined
[13:32] *** cognominal_ left
[13:32] *** cognominal__ joined
[13:32] *** jhorwitz joined
[13:33] <[particle]> past nodes all have a type, a hash, and an array

[13:36] <fglock> [particle]: is there already a version of the past parser?

[13:36] <[particle]> fglock: no, but it shouldn't be hard to write

[13:37] <[particle]> i'm looking at the yaml and json specs now

[13:37] <[particle]> we already have a json parser, so it's not much of a stretch to get what we need

[13:38] <[particle]> we'll use this as a base and modify from there: http://svn.perl.org/parrot/trunk/compilers/json/JSON/grammar.pg

[13:39] <[particle]> of course, it needs to be updated to current S05 syntax

[13:40] *** gongyiliao joined
[13:43] *** jhorwitz_ joined
[13:43] <pugs_svnbot> r17514 | renormalist++ | - [kp6] started to fill IO module with mkdir, rmdir and tests for this

[13:43] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17514

[13:43] <lambdabot> Title: Changeset 17514 - Pugs - Trac

[13:45] <renormalist> moritz_: I implemented some unsafe operations in kp6, do we have to handle that in any way ?

[13:45] <pugs_svnbot> r17515 | dakkar++ | *very* simple tree transformation engine, with similar semantics to XSLT.

[13:45] <pugs_svnbot> r17515 | dakkar++ | Needs lots of cleanup

[13:45] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17515

[13:45] <lambdabot> Title: Changeset 17515 - Pugs - Trac

[13:45] <renormalist> moritz_: fglock said, u asked for such nusafe operations, therefore I ask

[13:47] <fglock> coffee break! &

[13:48] <ruoso> TimToady, take a look at this ideas for the Tree Transformation Language

[13:48] <pugs_svnbot> r17516 | ruoso++ | [pX] Simple syntax mockup in the tree transformation language

[13:48] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17516

[13:48] <lambdabot> Title: Changeset 17516 - Pugs - Trac

[13:48] <ruoso> pX/Common/Data-Transform-Trivial

[13:50] *** ruoso left
[13:51] *** |Jedai| joined
[13:56] *** snearch joined
[14:00] *** jhorwitz left
[14:07] *** kanru joined
[14:08] *** fglock left
[14:08] *** jedai left
[14:11] *** snearch left
[14:15] *** mr_ank left
[14:16] *** cognominal__ left
[14:17] <bloonix> ?eval my $foo = 1; my $bar = $foo.WHAT; say "true" if $foo;

[14:17] <pugsbot_r17185> OUTPUT[true␤] Bool::True

[14:17] <bloonix> ?eval my $foo = 1; my $bar = $foo.WHAT; say "true" if $bar;

[14:18] <pugsbot_r17185> undef

[14:18] <bloonix> why that?

[14:18] <bloonix> ?eval my $foo = 1; my $bar = $foo.WHAT; say $bar;

[14:18] <pugsbot_r17185> OUTPUT[Int␤] Bool::True

[14:19] <bloonix> ?eval my $foo = 1; my $bar = $foo.WHAT; say "true" if ~$bar;

[14:19] <pugsbot_r17185> OUTPUT[true␤] Bool::True

[14:19] <bloonix> *hmpf*

[14:19] <moritz_> ?eval my $foo = 1; say $foo.WHAT

[14:20] <moritz_> #pugs my $foo=1; say $foo.WHAT

[14:20] <exp_evalbot> OUTPUT[Int␤]

[14:20] <pugsbot_r17185> OUTPUT[Int␤] Bool::True

[14:20] <moritz_> #pugs my $foo=1; say ?$foo.WHAT

[14:20] <exp_evalbot> OUTPUT[␤]

[14:20] <bloonix> ?eval my $foo = 1; my $bar = $foo.WHAT; if $bar { say "TRUE" } else { say "FALSE" }

[14:20] <pugsbot_r17185> OUTPUT[FALSE␤] Bool::True

[14:21] <moritz_> that should be fixed when audreyt merges her MO branch

[14:21] <moritz_> like so many other things ;)

[14:22] <bloonix> ?eval my $foo = 1; my $bar = $foo.WHAT; if ~$bar { say "TRUE" } else { say "FALSE" }

[14:22] <pugsbot_r17185> OUTPUT[TRUE␤] Bool::True

[14:22] <bloonix> "if ~$bar" works

[14:24] *** cognominal_ joined
[14:24] *** cognominal__ joined
[14:25] *** cognominal_ left
[14:26] *** drupek12 left
[14:30] *** fglock joined
[14:32] *** amnesiac joined
[14:33] *** buetow joined
[14:39] *** gongyiliao left
[14:42] <TimToady> Int is a kind of Undef, so it's not clear that it should be true...

[14:43] <TimToady> it's not even defined...

[14:44] <fglock> #kp6 my $foo = 1; my $bar = $foo.WHAT; if $bar { say "TRUE" } else { say "FALSE" }

[14:44] <exp_evalbot> r17516: OUTPUT[FALSE␤]

[14:45] *** stevan_ joined
[14:46] <moritz_> #pugs 1.WHAT.WHAT

[14:46] <exp_evalbot> OUTPUT[::Int␤]

[14:46] *** riffraff left
[14:46] <moritz_> #pugs (1.WHAT).WHAT

[14:46] <exp_evalbot> OUTPUT[::Int␤]

[14:47] <fglock> #kp6 (1.WHAT).WHAT

[14:47] <exp_evalbot> r17516: OUTPUT[␤]

[14:47] <moritz_> I expected something like Type

[14:47] <fglock> #kp6 say (1.WHAT).WHAT

[14:47] <exp_evalbot> r17516: OUTPUT[Int␤]

[14:47] <fglock> it only prints if stringified

[14:48] <moritz_> #kp6 say (1.WHAT).perl

[14:48] <exp_evalbot> r17516: OUTPUT[Str␤]

[14:48] <moritz_> #kp6 say ((1.WHAT).WHAT).perl

[14:48] <exp_evalbot> r17516: OUTPUT[Str␤]

[14:48] <TimToady> no, the protoobject is the exact same type as the real object, except undefined

[14:48] <TimToady> so .WHAT is the identity operation on a protoobject

[14:49] <moritz_> ok

[14:49] <TimToady> .HOW is the metaobject

[14:49] <TimToady> ?eval 1.HOW

[14:49] <pugsbot_r17185> ^Int

[14:49] <TimToady> note the ^

[14:49] <moritz_> and .WHY is 42 ;)

[14:49] <DarkWolf84> ?eval "hello".HOW.Methods

[14:49] <TimToady> ?eval 1.WHY

[14:50] <pugsbot_r17185> Error: No such subroutine: "&Methods"

[14:50] <pugsbot_r17185> Error: No such method in class Int: "&WHY"

[14:50] <TimToady> should probably return "Why not?"

[14:50] <DarkWolf84> :)

[14:50] <moritz_> or some documentation

[14:50] <DarkWolf84> or just 42

[14:50] <DarkWolf84> :)

[14:50] <fglock> #kp6 say (1.HOW).methods

[14:50] <exp_evalbot> r17516: OUTPUT[perl str true HOW WHAT␤]

[14:51] <moritz_> #pugs say 1.HOW.methods

[14:51] <exp_evalbot> OUTPUT[["LIST","ITEM","bless"]␤]

[14:51] <DarkWolf84> #kp6 ("hello".HOW).methods

[14:51] <exp_evalbot> r17516: OUTPUT[[ 'perl', 'str', 'true', 'HOW', 'WHAT',  ]␤]

[14:51] <DarkWolf84> ?eval ("hello".HOW).methods

[14:52] <pugsbot_r17185> ["reverse","chop","index","quotemeta","join","chars","bytes","split","LIST","ITEM","bless"]

[14:52] <TimToady> ?eval "hello".^methods

[14:52] <pugsbot_r17185> ["reverse","chop","index","quotemeta","join","chars","bytes","split","LIST","ITEM","bless"]

[14:52] <DarkWolf84> :)

[14:52] <DarkWolf84> thanks

[14:53] <DarkWolf84> my version of pugs had problem last time I checked

[14:53] <DarkWolf84> in .HOW.methods

[14:58] <fglock> ? eval [1,"2",3].>>.^HOW

[14:58] <fglock> ?eval [1,"2",3].>>.^HOW

[14:59] <pugsbot_r17185> Error: ␤Unexpected "^"␤expecting ".", "=", operator name, qualified identifier, variable name, "...", "--", "++", "i", array subscript, hash subscript or code subscript

[14:59] <bloonix> hmmm I wrote a very little dumper that could help me a bit if I develop. it calls Dumper.pm. is it okay to upload to the repos?

[14:59] <bloonix> it

[15:00] <moritz_> of course

[15:01] <DarkWolf84> I really have to learn the grammar

[15:01] <pasteling> "bloonix" at 87.230.108.20 pasted "module Dumper-0001; use v6-alp" (105 lines, 1.8K) at http://sial.org/pbot/27200

[15:01] <bloonix> very simple. but enough for me first

[15:02] <moritz_> bloonix: $foo.WHAT eq "Array" should be replaced with $foo ~~ Array

[15:03] <moritz_> bloonix: because it takes inheritance into account

[15:03] *** cognominal__ left
[15:04] <bloonix> okay

[15:04] <bloonix> done

[15:05] *** masak left
[15:11] *** fridim joined
[15:12] <cj> morning folks

[15:12] *** rhizo left
[15:13] <moritz_> hi cj ;)

[15:13] *** renormalist left
[15:14] *** flokuehn left
[15:15] <pugs_svnbot> r17517 | nothingmuch++ | blah

[15:15] <pugs_svnbot> r17518 | nothingmuch++ | blah

[15:15] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17518

[15:15] <lambdabot> Title: Changeset 17518 - Pugs - Trac

[15:15] *** ashizawa left
[15:27] *** riffraff joined
[15:34] *** devogon left
[15:36] <DarkWolf84> how to set a var in scalar context

[15:36] <DarkWolf84> ?

[15:36] <moritz_> DarkWolf84: assign it to a scalar

[15:37] <moritz_> DarkWolf84: or with ~, +, ? in string, numeric or boolean context

[15:37] <DarkWolf84> ?eval scalar time

[15:37] <pugsbot_r17185> Error: No such subroutine: "&scalar"

[15:37] <moritz_> ?eval item time

[15:37] <pugsbot_r17185> 120901733228183/500000

[15:37] <moritz_> #pugs say +time

[15:37] <exp_evalbot> OUTPUT[241803470.353283␤]

[15:38] <moritz_> item() seems to work, as well as + for numerical context

[15:38] <moritz_> #pugs say ~time

[15:38] <exp_evalbot> OUTPUT[241803498.519021␤]

[15:38] <DarkWolf84> ?eval @foo=time

[15:38] <pugsbot_r17185> Error: ␤Unexpected "="␤expecting "::"␤Variable "@foo" requires predeclaration or explicit package name

[15:38] <DarkWolf84> ?eval my @foo=time

[15:39] <pugsbot_r17185> [241803554019773/1000000,]

[15:39] <DarkWolf84> hm

[15:39] <DarkWolf84> the same

[15:39] <moritz_> #pugs say time.perl

[15:39] <exp_evalbot> OUTPUT[120901784716771/500000␤]

[15:39] <moritz_> #pugs say &time.perl

[15:39] <exp_evalbot> OUTPUT[\:() {}{Prim ([Pugs.AST.Internals.Val] -> Pugs.AST.Eval.Eval Pugs.AST.Internals.Val)}␤]

[15:39] <DarkWolf84> the magic localtime(time) not work

[15:40] <DarkWolf84> :)

[15:40] <DarkWolf84> :(

[15:40] <DarkWolf84> ?eval localtime(time)

[15:40] <pugsbot_r17185> \Time::Local.new(("day" => 30), ("hour" => 17), ("is_dst" => Bool::True), ("min" => 40), ("month" => 8), ("picosec" => 0), ("sec" => 37), ("tz" => 7200), ("tzname" => "CEST"), ("wday" => 5), ("yday" => 241), ("year" => 2007))

[15:40] <DarkWolf84> yes

[15:40] <DarkWolf84> works

[15:41] <DarkWolf84> mine vesion just prints {obj:Time::Local}

[15:41] <moritz_> #pugs print localtime(time)

[15:41] <exp_evalbot> OUTPUT[<obj:Time::Local>]

[15:42] <moritz_> DarkWolf84: because you don't say .perl

[15:42] <moritz_> #pugs print localtime(time).tz

[15:42] <exp_evalbot> OUTPUT[0]

[15:42] <DarkWolf84> yeah

[15:42] <DarkWolf84> #pugs localtime(time).month

[15:42] <exp_evalbot> OUTPUT[\8␤]

[15:43] <fglock> moritz_: we added a few possible unsafe operators to kp6 today - what should we do to keep #kp6 safe?

[15:43] <moritz_> fglock: which op?

[15:44] <moritz_> fglock: the best would be a --unsafe option that prevents the compilation or execution

[15:44] *** stevan_ left
[15:45] <fglock> moritz_: i think renormalist didn't upload yet - things like mkdir()

[15:45] <fglock> ok, we could just prevent loading the IO module if --unsafe

[15:46] <moritz_> fglock: the evalbot runs in a chroot with a user id that has no permissions to write to any important place...

[15:46] <moritz_> fglock: so it's not too urgent, but it would be a good idea anyway

[15:46] <fglock> ok, good to know :)

[15:48] <moritz_> perhaps just set a global variable and make IO die() if this is set

[15:49] *** kcwu_ joined
[15:49] <pugs_svnbot> r17519 | bloonix++ | Added Dumper.pm and fixed a lot of code of Sys::Statistics::Linux*

[15:49] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17519

[15:49] <lambdabot> Title: Changeset 17519 - Pugs - Trac

[15:50] <fglock> moritz_: will do

[15:50] <fglock> brb &

[15:58] <pugs_svnbot> r17520 | bloonix++ | add pod to Dumper.pm

[15:58] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17520

[15:58] <lambdabot> Title: Changeset 17520 - Pugs - Trac

[16:05] <bloonix> improvements for Dumper.pm are welcome

[16:05] *** [particle1 joined
[16:05] <moritz_> I think when pugs' MMD works reliably it you could rename dump() to perl() with an additional argument

[16:06] <moritz_> so that perl($foo) calls the builtin perl, and perl($foo, :nice) the version newlines

[16:11] *** fglock left
[16:11] *** kcwu_ left
[16:12] <bloonix> ok feierabend :)

[16:12] <pugs_svnbot> r17521 | bloonix++ | Add an example output to SYNOPSIS.

[16:12] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17521

[16:13] <bloonix> quitting time

[16:15] <bloonix> it do a little bit more and shows the type of each value

[16:16] <bloonix> does

[16:16] *** [particle2 joined
[16:16] *** [particle2 is now known as [particle]

[16:20] *** rindolf joined
[16:22] *** kcwu joined
[16:25] *** justatheory joined
[16:29] *** [particle1 left
[16:31] *** franck___ left
[16:31] *** rhizo joined
[16:32] *** fglock joined
[16:33] *** toshinori joined
[16:38] *** kanru left
[16:39] *** kanru joined
[16:50] *** fglock left
[17:00] <pugs_svnbot> r17522 | jnthn++ | [mp6] Dummy main sub and class variables sub should be :anon.

[17:00] <pugs_svnbot> r17523 | moritz++ | perl6.vim: rounding up is 'ceil', not 'ceiling'

[17:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17523

[17:02] *** cognominal_ joined
[17:03] *** drupek12 joined
[17:06] <moritz_> 3D3

[17:06] <moritz_> damn keyboard

[17:08] *** Psyche^ joined
[17:10] *** cognominal_ left
[17:20] *** Patterner left
[17:20] *** Psyche^ is now known as Patterner

[17:32] <obra> hey folks

[17:33] <moritz_> hey obra ;)

[17:34] <moritz_> there's something I wanted to ask you, but I forgot it :(

[17:49] <obra> aw

[17:50] *** drupek12 left
[17:52] *** drupek12 joined
[17:58] *** REPLeffect joined
[18:00] <moritz_> #pugs for "foo" ~~ m/./ -> $match { say $match.from }

[18:00] <exp_evalbot> OUTPUT[undef␤]

[18:00] <moritz_> #pugs for "foo" ~~ m/./ -> $match { say $match }

[18:00] <exp_evalbot> OUTPUT[undef␤]

[18:00] <moritz_> #pugs for "foo" ~~ m/./g -> $match { say $match }

[18:00] <exp_evalbot> OUTPUT[*** ␤    Unexpected "g"␤    expecting term postfix, operator or block construct␤    at /tmp/Ib4Zl09uqm line 1, column 18␤]

[18:00] <moritz_> #pugs for "foo" ~~ m:g/./ -> $match { say $match }

[18:00] <exp_evalbot> OUTPUT[*** Cannot parse regex: .␤*** Error: ␤]

[18:02] <moritz_> #kp6 "foo" ~~ m/./

[18:02] <exp_evalbot> r17523: OUTPUT[Syntax Error␤DISPATCH: calling APPLY on invalid object:$VAR1 = {};␤␤ at lib5/KindaPerl6/Runtime/Perl5/MOP.pm line 31␤  main::DISPATCH('undef', 'APPLY') called at - line 15␤]

[18:05] *** snearch joined
[18:14] *** snearch left
[18:27] *** jisom joined
[18:29] *** weinig joined
[18:32] *** iblechbot left
[18:39] *** devogon joined
[18:45] *** chris2 joined
[18:56] *** kcwu left
[19:05] *** kcwu joined
[19:07] *** penk joined
[19:18] *** pbuetow joined
[19:18] *** pbuetow left
[19:20] *** pbuetow joined
[19:23] *** jjore-w left
[19:35] *** jisom left
[19:42] <Blwood> moritz_, how can I write tests ? I mean, I have to follow the synopsis or there's a list of tests that need to be written ? 

[19:50] <moritz_> Blwood: in the synposis as http://perlcabal.org/syn/ there are "smartlinks" from the tests, ie you see for which parts of the synopsis there are tests already...

[19:50] <lambdabot> Title: Official Perl 6 Documentation

[19:51] <moritz_> Blwood: so you can go through the synopsis, you'll find sections without these smartlinks - then you know where more tests are needed

[19:51] <[particle]> is there a utility to figure out which tests don't have smartlinks?

[19:51] <Blwood> okay :)

[19:51] <Blwood> oh yeah it would be nice :)

[19:52] <moritz_> [particle]: probably not.. .but you could combine find(1) and util/smartlinks.pl 

[19:55] <[particle]> paste?

[19:56] <moritz_> I thought of something like find t/ -name '*.t' -exec perl  util/smartlinks.pl --check {} \;

[19:56] <moritz_> but it seems too slow

[19:57] <pasteling> "[particle]" at 24.22.165.145 pasted "ack -L "L\<.*\>" t -- test files without smartlinks" (442 lines, 14.6K) at http://sial.org/pbot/27203

[19:57] *** thoughtpolice joined
[19:57] <[particle]> it's a first pass--not entirely accurate, but it's a start :)

[19:58] <moritz_> it is indeed

[19:58] <moritz_> [particle]++

[19:58] *** kjwcode joined
[19:58] <[particle]> ack++

[19:59] <moritz_> what's ack?

[19:59] <moritz_> I'd do that with grep

[19:59] <[particle]> cpan App::Ack

[20:00] <buubot> [particle]: App::Ack: , by Andy Lester, P/PE/PETDANCE/ack-1.64.tar.gz 

[20:00] <[particle]> hrmm, i thought 1.66 was released....

[20:01] <[particle]> ack is a pure-perl better-than-grep

[20:01] <[particle]> parrot developers *love* ack

[20:01] <moritz_> sometimes I miss perl's look(ahead|behind) assertions in grep

[20:01] <moritz_> I bet they do

[20:02] *** moritz_ sets mode: +o [particle]

[20:02] <[particle]> ack supports full p5 regexes

[20:03] *** Aankhen`` left
[20:03] *** rindolf left
[20:05] <pasteling> "moritz_" at 84.148.0.223 pasted "Test files worth looking at" (286 lines, 9.6K) at http://sial.org/pbot/27204

[20:07] <[particle]> should be simple enough to add L<S05> to all of t/regex/ and L<S12> to all of t/oo/

[20:07] <[particle]> eventually, the search can be refined to "L<S\d\d\/.+>" or whatever

[20:13] *** mykhal joined
[20:16] <moritz_> I don't get it...

[20:17] <moritz_> why is # L<S05/Return values from matches/Accessing captured subpatterns> not a valid smartlink=

[20:17] <moritz_> s/=/?/

[20:17] <moritz_> ERROR: t/regex/capture_rollback.t: line 9: pattern ``Accessing captured subpatterns'' failed to match any paragraph in L<S05/Return values from matches>.

[20:18] <moritz_> but there is a paragraph with that title in 'Return values from matches', isn't there?

[20:18] <moritz_> I always feel dump when I can't get smartlinks working

[20:19] <rhr> does it need quotes?

[20:20] <moritz_> doesn't help

[20:27] *** kcwu left
[20:28] *** kcwu joined
[20:28] <pugs_svnbot> r17524 | moritz++ | smartlink for t/regex/from_perl6_rules/anchors.t

[20:28] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17524

[20:29] <lambdabot> Title: Changeset 17524 - Pugs - Trac

[20:35] <pugs_svnbot> r17525 | moritz++ | smartlink for t/regex/from_perl6_rules/array_cap.t

[20:35] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17525

[20:35] <lambdabot> Title: Changeset 17525 - Pugs - Trac

[20:35] *** marmic joined
[20:35] <moritz_> assert.t isn't up to date

[20:37] *** kcwu left
[20:37] *** pbuetow left
[20:38] *** kcwu joined
[20:41] <pugs_svnbot> r17526 | moritz++ | smartlink for t/regex/from_perl6_rules/assert.t

[20:41] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17526

[20:41] <lambdabot> Title: Changeset 17526 - Pugs - Trac

[20:51] *** stevan_ joined
[20:58] *** ubajas3 joined
[21:03] *** daxim joined
[21:08] *** ubajas left
[21:13] *** jhorwitz_ left
[21:16] <bloonix> damian and domm did arm wrestling?

[21:16] <bloonix> and I wasnt there :/

[21:16] <TimToady> bare chested

[21:17] *** daxim_ joined
[21:17] <bloonix> okay, I think that scene will be published on youtube :)

[21:17] <bloonix> I will see it :)

[21:19] <bloonix> they did it to "collect gift" for the next yapc?

[21:20] <TimToady> it was one of the "items" that were auctioned off

[21:21] *** riffraff left
[21:22] <bloonix> what a pitty that I wasnt there. 

[21:24] <bloonix> I would spend a bit as well

[21:25] *** kjwcode left
[21:27] *** Blwood left
[21:28] *** Blwood joined
[21:31] *** daxim left
[21:39] *** ubajas joined
[21:39] *** kaether left
[21:41] <bloonix> hmmm I dont know what is wrong... in downloaded pugs over svn and install it but some modules are not installed

[21:44] *** mugwump left
[21:45] *** kjwcode joined
[21:45] <bloonix> *ARG*

[21:49] *** ubajas3 left
[21:49] <pugs_svnbot> r17527 | bloonix++ | Fixed typo Makefile.pl -> Makefile.PL

[21:49] <pugs_svnbot> r17528 | bloonix++ | Fixed typo Makefile.pl -> Makefile.PL

[21:49] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17528

[21:49] <lambdabot> Title: Changeset 17528 - Pugs - Trac

[21:57] *** |Jedai| is now known as jedai

[21:57] <bloonix> good night @all

[22:02] *** daxim_ left
[22:07] *** fglock joined
[22:14] *** REPLeffect left
[22:14] *** REPLeffect joined
[22:17] *** kaether joined
[22:18] *** kaether left
[22:21] *** cerridwen joined
[22:24] *** ubajas3 joined
[22:28] *** zamolxes left
[22:31] *** zamolxes joined
[22:33] *** ubajas left
[22:40] *** [particle1 joined
[22:40] *** pbuetow joined
[22:40] *** buetow__ joined
[22:41] *** buetow__ left
[22:43] *** pmurias joined
[22:44] <pmurias> good evening

[22:44] <pmurias> i'm back home :)

[22:47] *** REPLeffect left
[22:47] <DarkWolf84> hi

[22:47] <DarkWolf84> :)

[22:47] <DarkWolf84> and maybe good night

[22:48] <pmurias> good night

[22:49] *** pmurias left
[22:50] *** d4l3k_ joined
[22:51] *** pbuetow left
[22:51] *** d4l3k_ left
[22:52] *** dalek joined
[22:53] *** [particle] left
[22:59] *** fglock left
[23:02] <meppl> good night

[23:06] *** amnesiac left
[23:07] *** mr_ank joined
[23:09] *** ubajas joined
[23:09] *** justatheory left
[23:10] *** justatheory joined
[23:18] *** ubajas3 left
[23:19] *** stevan_ left
[23:37] *** buetow left
[23:38] *** buetow joined
[23:40] *** weinig_ joined
[23:42] *** devogon_ joined
[23:42] *** weinig left
[23:43] *** devogon left
[23:45] *** fridim left
[23:45] *** devogon_ left
[23:45] *** devogon joined
[23:49] *** devogon left
[23:53] *** jjore-w joined
[23:54] *** chris2 left
[23:55] *** ubajas3 joined
[23:58] *** zamolxes left
