[00:08] *** bsb joined
[00:13] *** autin joined
[00:54] *** nipotaway is now known as nipotan

[00:56] *** REPLeffect joined
[01:11] <svnbot6> r16210 | rhr++ | [Date.pm] use named args to BUILD

[01:12] <rhr> when I run ext/DateTime/t/basic.t there's now a 50/50 chance that all test pass, which is an improvement!

[01:15] *** araujo joined
[01:19] *** lambdabot joined
[01:28] *** sreeram_ joined
[01:38] *** rindolf joined
[01:56] *** TimToady_ joined
[02:13] *** TimToady_ is now known as TimToady

[02:22] <svnbot6> r16211 | lwall++ | nick change message was backwards

[02:25] *** knewt joined
[02:38] *** jisom joined
[02:48] *** autin joined
[03:03] *** mako132_ joined
[03:03] *** ProperNoun joined
[03:25] *** mithraic_ joined
[03:27] *** agentzh joined
[03:27] *** kanru joined
[03:43] *** dduncan joined
[03:52] <svnbot6> r16212 | agentz++ | PCR - added some more tests and a smartlink for sigspace

[04:04] *** justatheory joined
[04:07] *** justatheory joined
[04:38] <agentzh> <'...'> and <"..."> are no longer valid according to S05?

[04:38] <lambdabot> agentzh: You have 1 new message. '/msg lambdabot @messages' to read it.

[04:38] <agentzh> @messages

[04:38] <lambdabot> unobe said 9h 52m 57s ago: the current.build.yml should now show good paths to install pugs into.

[04:38] <agentzh> unobe: nice

[04:41] *** penk joined
[04:42] <TimToady> agentzh: yes, they're now just '...' and "..."

[04:42] <agentzh> TimToady: thanks :)

[04:42] <agentzh> PCR needs some updates.

[04:42] <TimToady> though PCR already fixed those, though maybe <> forms were going through a deprecation cycle...

[04:43] <TimToady> *thought

[04:43] <agentzh> oh

[04:43] <TimToady> ?eval $_ = '$x'; / '$x' /

[04:44] *** evalbot_r16189 is now known as evalbot_r16212

[04:44] <evalbot_r16212> Match.new(␤  ok => Bool::True, ␤  from => 0, ␤  to => 2, ␤  str => "$x", ␤  sub_pos => (), ␤  sub_named => {}␤)

[04:44] <TimToady> ?eval $_ = '$x'; / <'$x'> /

[04:44] <evalbot_r16212> *** Cannot parse regex:  <'$x'> ␤*** Error: ␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[04:44] <agentzh> sorry, i was looking a very old version of PCR. ;)

[04:44] <agentzh> *looking at

[04:44] <TimToady> yeah, I think it's fixed

[04:44] <agentzh> cool :)

[05:10] <rindolf> Hi agentzh 

[05:11] <agentzh> rindolf: hi

[05:12] <agentzh> fglock: i wonder if you would like to give Smart::Comments a short (for debugging) :)

[05:12] <rindolf> agentzh: what's up?

[05:12] <agentzh> rindolf: adding smartlinks to PCR's test suite.

[05:12] <agentzh> (and also polishing the tests themselves)

[05:12] <rindolf> agentzh: what is PCR?

[05:12] <agentzh> Pugs::Compiler::Rule

[05:12] <rindolf> agentzh: oh.

[05:12] <agentzh> under perl5/

[05:13] <rindolf> agentzh: what is the connectivity at your place?

[05:14] <agentzh> web connectivity?

[05:15] <rindolf> agentzh: no, Inet connectivity.

[05:15] <rindolf> agentzh: upstream/downstream

[05:16] <REPLeffect> must be about 100baud :-)

[05:17] <agentzh> 100 MB, not sure.

[05:18] <rindolf> agentzh: 100 MB per-second?

[05:18] <rindolf> Mega-bytes, Mega-bits?

[05:19] <agentzh> bits

[05:31] <rindolf> agentzh: OK.

[05:31] <rindolf> agentzh: and how much upstream do you have?

[05:32] <agentzh> no idea

[05:38] <svnbot6> r16213 | agentz++ | PCR - more smartlinks for 09-ratchet.t (we now have 28 working links :))

[05:39] <dduncan> agentz, about your r16200

[05:39] <agentzh> ?

[05:39] <dduncan> agentzh, [smartlinks.pl]

[05:39] <dduncan> * used Perl6::Perldoc::To::Xhtml's full-doc feature

[05:39] <dduncan> * now we don't set UTF-8 for S26 since it's in Latin-1

[05:40] <dduncan> why don't we just resave S26 as UTF-8 instead, which is what all files should be standardized as?

[05:40] <agentzh> well, S26 is already in UTF-8.

[05:40] <dduncan> so what did your comment mean?

[05:40] <agentzh> but Perl6::Perldoc converts that to Latin-1, it seems.

[05:40] <agentzh> i'm not sure.

[05:40] <agentzh> that comment is incorrect.

[05:41] <dduncan> if so, then Perl6::Perldoc needs fixing

[05:41] <agentzh> dduncan: agreed

[05:41] *** sreeram_ is now known as sreeram

[05:41] *** sreeram left
[05:42] <agentzh> there is a bug entry in Perl6::Perldoc's POD: "The parser does not assume a default encoding of UTF-8 (as per the specification in Synopsis 26)."

[05:43] <dduncan> okay

[05:54] <agentzh> ?eval $_ = 'a'; / $<cap> := (<alpha>) /

[05:54] *** evalbot_r16212 is now known as evalbot_r16213

[05:54] <evalbot_r16213> *** Cannot parse regex:  $<cap> := (<alpha>) ␤*** Error: ␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[05:55] <agentzh> ?eval $_ = ' '; / $<cap> := (<ws>) /

[05:55] <evalbot_r16213> *** Cannot parse regex:  $<cap> := (<ws>) ␤*** Error: ␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[05:56] <agentzh> weird. it works on my machine.

[06:03] <agentzh> is there any difference between /$<a> := <b>/ and /$<a> := (<b>)/ ?

[06:03] *** lisppaste3 joined
[06:05] <agentzh> i'd expect $/<a><b> to return something in the latter case.

[06:07] <agentzh> but PCR doesn't work that way.

[06:13] *** SubStack joined
[06:17] *** marmic joined
[06:29] <svnbot6> r16214 | agentz++ | PCR - 09-ratchet.t - more tests for capture aliases and we have 34 smartlinks there now

[06:37] *** b_jonas joined
[06:53] <agentzh> fglock: it seems S05 does not state that <ident> and <alpha> are builtin subrules although S05 makes heavy use of them.

[07:04] *** iblechbot joined
[07:16] <agentzh> ?eval 'abc' ~~ /ab|abc/

[07:17] *** evalbot_r16213 is now known as evalbot_r16214

[07:17] <evalbot_r16214> Match.new(␤  ok => Bool::True, ␤  from => 0, ␤  to => 2, ␤  str => "ab", ␤  sub_pos => (), ␤  sub_named => {}␤)

[07:17] <agentzh> bug?

[07:17] <agentzh> | is with longest-token semantics, no?

[07:20] <moritz> agentzh: I'd suppose so...

[07:20] <agentzh> :)

[07:21] <moritz> from => 0, to => 2 looks as if 'abc' is matched, isn't it?

[07:21] <lumi> Isn't (from => 0, to => 2) 3 long?

[07:21] <moritz> lumi: exactly

[07:21] <agentzh> interesting

[07:21] <lumi> What engine is that?

[07:21] <agentzh> PCR

[07:21] <moritz> ?eval 'a' ~~ m/a/

[07:21] <evalbot_r16214> Match.new(␤  ok => Bool::True, ␤  from => 0, ␤  to => 1, ␤  str => "a", ␤  sub_pos => (), ␤  sub_named => {}␤)

[07:22] <lumi> I guess "to" means "just before"

[07:23] <agentzh> *nod*

[07:23] <lumi> So longest-token | is not implemented

[07:24] <lumi> ?eval 'abc' ~~ /ab||abc/ # should be the other variant, right?

[07:24] <evalbot_r16214> Match.new(␤  ok => Bool::True, ␤  from => 0, ␤  to => 2, ␤  str => "ab", ␤  sub_pos => (), ␤  sub_named => {}␤)

[07:24] <agentzh> yup

[07:27] <svnbot6> r16215 | agentz++ | PCR - more tests and more smartlinks (42 links now)

[07:27] <moritz> ?eval ('abc' ~~ /abc | ab /).str

[07:27] <evalbot_r16214> Error: No such method in class Match: &str

[07:28] <agentzh> fglock: failing tests are all marked as TODOs so that it's easier to do regression. ;)

[07:28] <moritz> ?eval ~ ('abc' ~~ /abc | ab /)

[07:28] <evalbot_r16214> "abc"

[07:28] <lumi> ?eval my %foo = ('ab' => 1, 'abc' => 2); 'abc' ~~ /%foo/

[07:28] <evalbot_r16214> *** Cannot parse regex: %foo␤*** Error: ␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[07:28] <moritz> agentzh++ # test cases and smartlinks

[07:28] <lumi> Not like that, I guess

[07:29] <agentzh> hmm, evalbot is using PGE?

[07:29] <agentzh> %foo works in PCR

[07:29] <lumi> I have no idea how to check

[07:30] *** BooK joined
[07:33] <agentzh> http://perlcabal.org/agent/S05  # linked with PCR's test suite

[07:33] <lambdabot> Title: S05

[07:33] <agentzh> apparently PCR need more test cases and more links. :)

[07:33] <agentzh> *needs

[07:34] <agentzh> fglock: maybe you'll find it interesting or even helpful :)

[07:35] <agentzh> i'd reuse pugs' smoking mechanism to generate smoke.yml from PCR's test suite and then use it to mark the snippets in S05.

[07:36] <agentzh> Hmm, 'make smoke' and 'make smartlink' can even be integrated into Module::Install as development tools (author-side) :)

[07:36] <agentzh> not sure if audreyt will like the idea.

[07:40] <agentzh> gotta rush back to the campus &

[07:40] *** agentzh left
[07:44] *** demq joined
[07:57] *** buetow joined
[08:01] *** DarkWolf84 joined
[08:33] *** andara joined
[09:16] *** theorbtwo joined
[09:16] *** VanilleBert joined
[09:21] *** aukjan|gone joined
[09:21] *** aukjan|gone is now known as aukjan

[09:48] *** ruoso joined
[09:58] *** Grrrr joined
[10:18] *** aukjan is now known as aukjan|gone

[10:26] *** dduncan left
[10:42] *** buetow joined
[10:50] *** scw_ is now known as scw

[10:56] <avar> @tell dvergin in  S28draft.pod you say "These variables are all read-only" about $0, $1, $2. This needs to mention :rw apperently

[10:56] <lambdabot> Consider it noted.

[11:01] *** chris2 joined
[11:22] *** ferreira joined
[11:23] *** iblechbot joined
[11:34] *** Kattana joined
[11:38] *** fglock joined
[11:43] *** nipotan is now known as nipotaway

[11:43] <svnbot6> r16216 | fglock++ | [PCR] - added non-greedy quantifier to "ratchet" emitter

[11:49] <fglock> agentzh++  # more tests

[11:57] <fglock> agentzh: re %foo - I think it's a problem in the haskel/perl5 bridge; this works:

[11:58] <fglock> perl -Ilib -e 'use v6-alpha' - ' my %foo = (ab => 1, abc => 1); "abc" ~~ /%foo/; say $/.perl '

[11:58] <fglock> haskell

[12:03] *** prism joined
[12:05] *** prism joined
[12:13] <fglock> hmm - PCR hash-value semantics needs an update

[12:29] *** lichtkind joined
[12:51] *** IllvilJa joined
[13:16] *** fglock joined
[13:30] *** CindyLinz joined
[13:36] *** andara joined
[13:37] <fglock> TimToady: re STD - do you mean { ($<start>,$<stop>) = $.findbrack() } instead of <?{ ($<start>,$<stop>) = $.findbrack() }> ?

[13:38] <fglock>  <{...}> would be used if it returned a regex, right?

[13:51] *** vel joined
[13:55] *** VanilleBert joined
[14:05] *** [particle] joined
[14:17] <svnbot6> r16217 | fglock++ | [v6.pm] - added preprocess-STD.pl

[14:19] <moritz> fglock: is preprocess-STD.pl the v6.pm equivalent to cheat.pl?

[14:24] *** elmex joined
[14:26] <svnbot6> r16218 | andara++ | [runpugs] 

[14:26] <svnbot6> r16218 | andara++ | - Session.pm: now with Moose

[14:26] <svnbot6> r16218 | andara++ | - Session startup handling now more robust

[14:26] <svnbot6> r16218 | andara++ | - Repl.pm: a very simple mini-REPL for testing

[14:28] <fglock> moritz: yes; it replaces the {*} blocks with the actual code

[14:29] <PerlJam> fglock: in which language?

[14:29] <moritz> p5

[14:30] <fglock> hmm - it could be written in p6

[14:30] <PerlJam> It seems like it's taking forever to start using p6 to parse p6

[14:30] <fglock> PerlJam: why? v6.pm has a lot of p6 code

[14:32] <PerlJam> fglock: I know, it just seems like we're stuck in the hell of having most of the pieces needed for a full-fledged perl6, but not enough momentum to actually produce and release a full-fledged perl6  (i.e., something that one could announce to the world)

[14:33] <PerlJam> of course, my grousing about it isn't helping anything either

[14:34] *** vel joined
[14:38] <avar> building a cpan-installable command-line utility from the kp6/mp6 stuff would help IMO, even if the subset it parses/runs is very minimal

[14:39] <fglock> avar: how about a v6.pm based one?

[14:40] <avar> would work too

[14:42] *** kanru joined
[14:47] <PerlJam> fglock: Did you apply for a TPF grant yet?  :-)

[14:47] <fglock> re 'produce and release a full-fledged perl6', I agree it's a momentum problem, rather than a purely technical problem

[14:47] <fglock> PerlJam: no

[14:48] <fglock> back in ~2h &

[14:48] <PerlJam> fglock: Well, consider that I at least think you should get paid for the cool work you do (have done) and TPF seems a likely source of funds.

[14:49] <avar> the issue with p6 is not purely a lack of runtime problem, there are no p6 modules on cpan yet for instance, which sucks;/

[14:55] *** rashakil_ joined
[14:56] *** veritos joined
[15:00] <veritos> hey...new idea. use yacc or something to generate perl code from c.

[15:00] *** amnesiac joined
[15:07] *** mithraic joined
[15:10] *** ruz joined
[15:28] *** theorbtwo joined
[15:31] *** b_jonas joined
[15:33] *** jhorwitz joined
[15:41] <cj_> what is this "golf" that I hear so much about?

[15:42] <avar> ?eval [~] <g o l f>

[15:42] *** evalbot_r16214 is now known as evalbot_r16218

[15:42] <evalbot_r16218> "golf"

[15:44] <svnbot6> r16219 | andara++ | [runpugs]

[15:44] <svnbot6> r16219 | andara++ |     -Preparing to make new version go live

[15:44] <svnbot6> r16219 | andara++ |      No changes to front-end, more stable back-end

[15:44] <svnbot6> r16219 | andara++ |     -Goal for next iteration is to port back-end to Perl 6

[15:44] <svnbot6> r16219 | andara++ |      Help welcome!

[15:45] <avar> andara: back end for what?

[15:46] <andara> avar: runpugs consists of a server "back-end" and a client "front-end"

[15:46] <wolverian> cj_, http://en.wikipedia.org/wiki/Perl#Perl_golf

[15:47] <cj_> wolverian: I play that game!

[15:49] *** Loro_ joined
[15:53] *** buetow joined
[16:02] *** IllvilJa joined
[16:09] *** weinig_ joined
[16:15] *** frederico joined
[16:16] *** chris2 joined
[16:19] *** veritos joined
[16:19] <frederico> Hi, I tried to install v6-alpha via cpan but I got recursive dependence with Pugs::Emitter::Perl6::Perl5 , but in source dir I did make install and everything worked.

[16:40] *** [particle] joined
[16:43] *** riffraff joined
[16:43] *** cjeris joined
[16:43] <riffraff> hi

[16:43] *** cjeris left
[16:45] <veritos> hmm...this is fun. making a man page for myself.

[16:47] <TimToady> do you need to be documented? :)

[16:48] <TimToady> myself, I just try to have an intuitive interface.  :)

[16:48] <veritos> TimToady: ok. am i section 1 or what?

[16:48] <veritos> http://feather.perl6.nl/~karhu/ for more info.

[16:48] <lambdabot> Title: NAME

[16:48] <TimToady> do you call yourself from shell scripts?

[16:49] <veritos> TimToady: no, D\ Koenig is too hard to type.

[16:49] <[particle]> veritos: don't forget to document your appendix

[16:49] <veritos> [particle]: heh.

[16:49] <TimToady> I don't want your colon

[16:49] <riffraff> question: I wont to do an iteration like: for foo($x) { for foo($x) {bar($_} }

[16:50] * [particle] has a semicolon

[16:50] <riffraff> is there a shortcut? I can't use two statement modifiers one after the other, sadly 

[16:50] *** mithraic_ joined
[16:50] <veritos> riffraff: try closing the paren in bar($_

[16:51] <riffraff> lol

[16:51] <[particle]> for foo($x) {.bar for foo($x) }

[16:51] <TimToady> ?eval for (1..2) X ('a','b') -> $a, $b { say $a,$b }

[16:51] *** evalbot_r16218 is now known as evalbot_r16219

[16:51] <evalbot_r16219> OUTPUT[1a1b␤2a2b␤] undef

[16:52] <TimToady> well, it's not quite right yet, should autoflatten

[16:53] <riffraff> [particle], yep, thought of that, still looks perfectible :)

[16:54] <TimToady> so when you use $_, are you expecting to get only the inner loop var?

[16:56] <riffraff> wow, .bar for foo($x) X foo($_) seem to work 

[16:57] <riffraff> TimToady, not really, I was just convinced I could not use $_ in the cross product in the beginning of the loop

[16:58] <TimToady> well, X is there to do cross products, except it's supposed to flatten by default.  but maybe the default is wrong in this case...

[16:58] <[particle]> for foo($x) X foo($_) ?? not $x?

[16:58] <PerlJam> [particle]: that looks like a syntax error to me.

[16:58] <[particle]> meetoo

[16:59] <[particle]> well, at least a bug.

[16:59] <[particle]> oh, wait.

[16:59] <[particle]> i mean, should the $_ be $x

[17:00] <[particle]> ?? not $x? is surely a syntax error, if it's perl :)

[17:00] <[particle]> does X set $_ for you?

[17:00] <PerlJam> That would be surprising to me.

[17:01] <riffraff> interesting,. if I change my code from the for to the cross operator, it sucks so much CPU that it gets killed

[17:01] <avar> veritos: your ~ page is funny:)

[17:01] *** cj_ is now known as da_man

[17:02] <riffraff> and my keybioard layout changed, wow

[17:02] *** fglock joined
[17:02] *** da_man is now known as cj

[17:04] <fglock> oops - v6.pm Makefile.pl -> requires('Pugs::Emitter::Perl6::Perl5' => '0'); ???

[17:05] <fglock> this will take some time to fix; v6.pm depends on a new release of Sub::Multi

[17:06] *** zafoeta joined
[17:06] <zafoeta> hi guys

[17:06] <PerlJam> hello

[17:06] <zafoeta> i am new in this group 

[17:06] <zafoeta> just read some stuff about pugs

[17:07] <zafoeta> i am programming myself in perl5 currently

[17:07] <zafoeta> and wanted to get involved in pugs

[17:08] <fglock> re v6.pm Makefile.PL - it was already fixed; needs a release

[17:09] *** frederico joined
[17:09] <zafoeta> anybody there?

[17:10] <TimToady> nobody but us chickens...

[17:10] <PerlJam> zafoeta: we're here ... ish

[17:10] <TimToady> what you you like to do with pugs?

[17:10] <TimToady> and what's your background?

[17:11] <zafoeta> i am computer science student and working in a finance company

[17:11] <zafoeta> having been doing some perl in the last 3 years, but i would not call myself a huge perl hacker

[17:11] <zafoeta> i know how to program with it, though

[17:12] <TimToady> would you like a commit bit to pugs?

[17:12] <zafoeta> also, i like functional languages, and i am working at the moment in a project which involves  functional languages, but have onle basics in haskell

[17:12] <zafoeta> yes

[17:12] <zafoeta> that is my intention

[17:12] <TimToady> msg me your email and I'll get one sent

[17:12] <zafoeta> helping in writing some code, and learning more haskell

[17:13] <zafoeta> i subscribed to the mailing list

[17:13] <TimToady> most of the real work happens here

[17:13] <PerlJam> zafoeta: do you know how to use subversion?  

[17:14] <zafoeta> yes

[17:14] <zafoeta> using it at work

[17:14] <riffraff> sorry, could someone check if he can do "my %s = {'a'=>1}" in interactive pugs ?

[17:14] <riffraff> it seem it parser correctly in a file but I get a sttrange error in the repl

[17:14] <zafoeta> i know some good basics, will learn more if necessary

[17:14] <PerlJam> great!  Once you've got a commit bit, you can start hacking on pugs one way or another.

[17:14] <zafoeta> :)

[17:14] <TimToady> what's your emali address

[17:14] <TimToady> *email

[17:15] <zafoeta> sounds quite good and straight forward

[17:15] <zafoeta> i think i sent it to  u privately

[17:15] <TimToady> didn't get here, are you registered?

[17:15] <zafoeta> nope

[17:15] <zafoeta> im actually never in irc

[17:15] <TimToady> freenode requires reg to /mst

[17:15] <zafoeta> ok, wait then

[17:15] <TimToady> to /msg rather

[17:15] <TimToady> or just mail to [email@hidden.address]
[17:16] <zafoeta> wow, i am now taling to larry wall??

[17:16] <zafoeta> :)

[17:16] <TimToady> I'll never tell...

[17:16] <zafoeta> *honoured*

[17:17] <PerlJam> zafoeta: no, it's Mr. Incog  Nito

[17:17] <TimToady> I usually just answer to "Hey, you!"

[17:17] <zafoeta> good

[17:18] <zafoeta> anyway, sent u the address

[17:18] *** [M]erk joined
[17:20] <TimToady> commitbit is thinking about you, but being slow...

[17:21] <TimToady> okay, you should have email now

[17:21] <veritos> Hey, you! Perl's supposed to be intuitive, and it has a manpage

[17:22] <TimToady> rofl

[17:23] <TimToady> obviously Perl 6 won't need a manpage.  :)

[17:23] <veritos> of course, it has p6doc

[17:23] <veritos> which is oddly enough written in perl 5

[17:24] <fglock> TimToady: I've got a problem with STD - http://moritz.faui2k3.org/irclog/out.pl?channel=perl6;date=2007-05-07#id_l183

[17:24] <lambdabot> Title: IRC log for #perl6, http://tinyurl.com/2yx3e8

[17:24] <TimToady> they've got drugs for that...

[17:25] <fglock> :)

[17:25] <veritos> ?eval my %s = a => 1; print %s

[17:25] <evalbot_r16219> OUTPUT[a	1] Bool::True

[17:26] <TimToady> fglock: no, that's intentional.  That's an assertion being used as a bare block to be invisible to longest-token processing

[17:26] <TimToady> ordinarily bare {...} limits your longest token

[17:26] <zafoeta> k, im back

[17:26] <zafoeta> just checking out the code

[17:27] <TimToady> it's customary to add yourself to AUTHORS as your first checkin to make sure it works right.

[17:27] <TimToady> welcome aboard!

[17:27] <zafoeta> ok.

[17:27] <zafoeta> will to that.

[17:27] <zafoeta> do you normally do check ins on the whole directory or only on single files?

[17:28] <TimToady> either way is fine

[17:28] <zafoeta> good

[17:28] <riffraff> mah

[17:28] <riffraff> (onomatopeic sound of not understanding life, universe and everything)

[17:28] <veritos> zafoeta: we have few rules here. just don't destroy it beyond repair.

[17:28] <veritos> forgiveness > permission

[17:28] <TimToady> if you've done a bunch of changes across directories, just checkin at the top

[17:28] <zafoeta> ok

[17:29] <zafoeta> :) sounds all good.

[17:29] <fglock> TimToady: oops - I confused it with a non-capturing <{...}>

[17:29] <TimToady> yeah, the ? is not entirely orthogonal in this case

[17:29] <TimToady> bugs me a little

[17:30] <TimToady> but even if you've only changed one file, svn at the top is still pretty fast in my experience

[17:30] <fglock> how about <??{..}> - as in ?? !!

[17:30] <TimToady> so I mostly only do specific checkins when I know there's other stuff out there that I don't want to checkin yet (or are not sure)

[17:31] <veritos> fglock: that's nice. and then <??{foo} bar !! baz>

[17:31] <TimToady> it's starting to look a little too much like perl 5...

[17:32] <veritos> TimToady: with (?(foo)bar|baz)? at least the ?? !! one wasn't picked at random

[17:32] <TimToady> but <?{...}> isn't a conditional, it's just an assertion

[17:32] <fglock>  <true {...}>

[17:33] <zafoeta> so, is this actuallly a group for perl6 in general or more for pugs?

[17:33] <PerlJam> zafoeta: noth

[17:33] <PerlJam> er, both

[17:33] <zafoeta> ok

[17:33] <TimToady> we always answer "yes", except when we answer "no"

[17:33] <zafoeta> and parrot as well, i suppose

[17:34] <PerlJam> no, #parrot is for that.

[17:34] <TimToady> parrot happens more on the mailing list

[17:34] <TimToady> and #parrot

[17:34] <TimToady> and #parrotsketch

[17:34] <zafoeta> ok

[17:34] <cj> TimToady: I hear that can get you in deep trouble with the security people :)

[17:34] <[particle]> although i'm usually here for random parrot questions

[17:34] <TimToady> but if you like functional programming, you probably want to hang out here more

[17:34] <cj> TimToady: I think they prefer you to say no except where you say yes

[17:34] <PerlJam> TimToady: Was that meant to be punny? :)

[17:35] <TimToady> yes and no

[17:35] <zafoeta> i wanna learn about haskell and perl in this project. that is why i chose pugs

[17:35] <veritos> PerlJam: is 'hang' supposed to be a functional thing?

[17:35] <veritos> foo = 1:foo; main = do { putStrLn foo }

[17:36] <TimToady> hang is a word that expresses dependency

[17:36] <PerlJam> veritos: sure!  It's solving the halting problem and that takes a while.

[17:36] <TimToady> and in fact japanese basically uses the same word for the two concepts

[17:36] <TimToady> (though spelled with different kanji)

[17:37] <TimToady> zafoeta: what kind of computer are you running on?

[17:38] <zafoeta> mac os x

[17:38] <zafoeta> what do u prefer?

[17:38] <zafoeta> have a linux as well

[17:38] <TimToady> okay, we have some of those folks here to help

[17:38] *** b_jonas_ joined
[17:38] <zafoeta> good

[17:38] <zafoeta> thanks:)

[17:38] *** b_jonas_ is now known as b_jonas

[17:39] <zafoeta> just installed ghc yesterday btw

[17:39] <zafoeta> anything else i need?

[17:40] <PerlJam> zafoeta: the newer the ghc the better

[17:40] <TimToady> 6.6 is the minimum currently

[17:41] <zafoeta> than i need to update ... 

[17:41] <zafoeta> have 6.4.

[17:41] <TimToady> 6.6 will be considerably faster too

[17:41] <offby1> _alarmingly_ faster.

[17:42] <cj> gnu haskell compiler?

[17:42] <PerlJam> offby1: you were alarmed?

[17:42] <TimToady> zafoeta: how much memory do you have?

[17:42] <gnuvince> cj: Glaskgow

[17:42] <PerlJam> cj: glasgow

[17:42] <zafoeta> 2 gb

[17:42] <TimToady> that will suffice :)

[17:42] <zafoeta> glasgow ghc, yes

[17:43] <TimToady> any other mac folks on now?

[17:43] <cj> ah

[17:43] <cj> I don't think anybody else with names that start with 'g' should be able to create software.  It muddies the water :)

[17:44] <PerlJam> cj: and in an interesting turn of events, GHC was bootstrapped using perl5 :-)

[17:44] <zafoeta> so, maybe people should think staring about a merger, in the world of globalization ... 

[17:44] <TimToady> (audreyt uses mac, but is being heavily distracted by real life at the moment.)

[17:44] <cj> PerlJam: ha.  everything is bootstrapped using perl5 - autotools require perl5 :)

[17:45] <[particle]> sans is creating a perl security test: http://www.adtmag.com/article.aspx?id=20594

[17:45] <b_jonas> cj: you mean like gnuplot?

[17:45] <lambdabot> Title: Application Development Trends - Putting Coders' Security Chops to the Test

[17:45] <cj> b_jonas: not following you

[17:45] <PerlJam> TimToady: What's with all of you cabal people and your "real life" distractions?  :-)

[17:45] <b_jonas> cj: gnuplot has nothing to do with the GNU project, it's just named that accidentally

[17:46] <cj> b_jonas: oh noes!

[17:46] <zafoeta> so, just commited revision 16220

[17:46] <PerlJam> b_jonas: though, had they taken a little time and explored the net a bit, they would have surely not named it that.

[17:46] <zafoeta> seems to work fine

[17:46] <svnbot6> r16220 | walter++ | Walter Pallestrong joined.

[17:46] <zafoeta> yep

[17:46] <TimToady> there you are

[17:47] *** fred__ joined
[17:47] <cj> "oh noes" invokes images of Andy's LJ icon...

[17:47] <cj> http://www.livejournal.com/allpics.bml?user=petdance

[17:47] <lambdabot> Title: Userpics

[17:47] <zafoeta> so ... where do i start of?

[17:47] <PerlJam> zafoeta: what do you want to do?

[17:47] <PerlJam> zafoeta: write tests?  Write docs? Write perl?  write haskell?

[17:47] <zafoeta> i would say the latter 2

[17:47] <PerlJam> (almost anything involves writing at some point)

[17:48] <TimToady> some start by reading the Haskell, some start by reading the test files

[17:48] <TimToady> or the examples files

[17:48] <TimToady> if you haven't read the synopses, that would be a good place to start

[17:49] <PerlJam> TimToady: as big as the Synopses have gotten, I occasionally wish for a cliff notes version  :)

[17:49] <b_jonas> cj, perljam: http://www.gnuplot.info/faq/faq.html#SECTION00032000000000000000

[17:49] <lambdabot> Title: Gnuplot FAQ

[17:50] <PerlJam> b_jonas: man were they foolish!  :)

[17:51] *** ofer joined
[17:51] *** _bernhard joined
[17:53] <zafoeta> i am actually having a c++ exam tomorrow, but this intrigues me:)

[17:53] <cj> b_jonas: cute :)

[17:53] <cj> zafoeta: and well it should!

[17:53] <TimToady> that's called "creative procrastination", and some of us are quite good at it

[17:54] <[particle]> it's a continuation-based approach to learning

[17:54] <PerlJam> heh

[17:55] <cj> TimToady: I heard a bit on NPR that reminded me of you.  There was a guy who wrote a book about creative procrastination

[17:56] <b_jonas> cj: is that not Paul Graham?

[17:56] <cj> I forget the name of the program, but it's a quiz show, and the host wrote a book called "Innuendo and out the other"

[17:56] <cj> b_jonas: he was English, so his name might have been Graham...

[17:56] <TimToady> and ouch the other is more like

[17:57] <b_jonas> cj: http://www.paulgraham.com/procrastination.html

[17:57] <svnbot6> r16221 | fglock++ | [PCR] - added a 'modifier' attribute to the 'closure' node

[17:57] <lambdabot> Title: Good and Bad Procrastination

[17:57] <cj> there we are... "Whad'Ya Know"

[17:58] *** Psyche^ joined
[17:58] <PerlJam> Michael Feldman

[17:58] *** Psyche^ is now known as Patterner

[17:59] <cj> PerlJam: yeah, but he was the host, not the author

[18:00] <PerlJam> http://www.amazon.com/Something-I-Said-Innuendo-Other/dp/0299202704

[18:00] <lambdabot> http://tinyurl.com/2g4szo

[18:00] <PerlJam> not it?

[18:01] <cj> PerlJam: that's Michael's book, the one on procrastination was a different author's

[18:01] <offby1> PerlJam: I sort of _was_ alarmed at how much faster ghc 6.6 was compared to 6.4 -- I'm not used to that kind of speedup, and initially I thought something was wrong -- perhaps instead of compiling all my files, it was rejecting them!

[18:01] <cj> oh, TimToady... you feel like being a guinnea pig?

[18:01] <PerlJam> Oh, I was just taking my cue from the title mentioned.

[18:02] <PerlJam> offby1: Well, at least it was a good alarm  :)

[18:02] <TimToady> nobody who has spent two months in a hospital ever feels like being a guinea pig again...

[18:03] <cj> http://www.amazon.com/connect

[18:03] <lambdabot> Title: Sign In

[18:03] <cj> TimToady: it's the blog software I get paid to write.  I hear you've written a book or two and you don't use a mac ( which we don't support yet :( )

[18:03] <TimToady> heh, it thinks I'm Heidi...

[18:03] <cj> TimToady: you might be! :)

[18:04] <TimToady> that would explain why she just came down with shingles...

[18:04] *** SubStack joined
[18:04] <cj> there's a "I'm not Heidi!" link at /

[18:04] <PerlJam> As far as we know, you are Heidi

[18:04] <cj> TimToady: TMI!!!

[18:04] <TimToady> it seems anatomically unlikely to me

[18:04] *** rindolf joined
[18:04] <PerlJam> In fact, I was going to comment earlier that I occasionally wonder if you're really lwall and not some other family member or even a bot 

[18:04] <PerlJam> :-)

[18:05] <TimToady> what makes you think my family members aren't bots?

[18:05] <cj> PerlJam: TimToady: the public face of the Wall Nuthouse

[18:05] <PerlJam> heh

[18:05] <rindolf> Hi PerlJam 

[18:05] <rindolf> Hi TimToady 

[18:05] <rindolf> Hi everyone.

[18:05] <TimToady> howdy

[18:05] <PerlJam> Hello rindolf.

[18:05] <cj> hi rindolf!

[18:06] <PerlJam> rindolf: how's unemployment been treating you?

[18:06] <rindolf> TimToady: what have you daughter (now married) study in college.

[18:06] <rindolf> PerlJam: it treated me very well.

[18:06] <PerlJam> rindolf: or should I say "self-employment"?

[18:06] <rindolf> PerlJam: heh.

[18:06] <rindolf> I'm not self-employed yet.

[18:06] <PerlJam> well, thus the scare-quotes

[18:06] <rindolf> I contacted a Ma'ariv journalist about writing some articles for Ma'ariv.

[18:06] <rindolf> Could be a nice source of income.

[18:06] <b_jonas> PerlJam: he is a bot: http://lxer.com/module/newswire/view/29032/index.html

[18:06] <lambdabot> Title: LXer: Paul Ferris: Pundit for a Day, 2005

[18:07] <rindolf> I need to write them in Hebrew though.

[18:07] *** drupek12 joined
[18:07] <rindolf> If I can make a living from being an essayist, that would be awesome.

[18:07] <PerlJam> rindolf: What is Ma'ariv ?

[18:08] <PerlJam> never mind.

[18:08] <PerlJam> wikipedia tells me enough

[18:08] <rindolf> PerlJam: ok.

[18:08] <rindolf> PerlJam: it's a newspaper.

[18:08] <rindolf> It's also a prayer.

[18:08] <rindolf> Or a time for a prayer.

[18:08] <PerlJam> well, wikipedia uses the adjective "tabloid" to describe it.

[18:09] <rindolf> PerlJam: it's not really a tabloid.

[18:09] <rindolf> PerlJam: well at least not officially.

[18:09] <rindolf> It's better than Yedioth Aharonoth and worse than Ha'aretz.

[18:10] *** REPLeffect joined
[18:10] <PerlJam> rindolf: what would be the subject matter of your essays?

[18:10] <rindolf> PerlJam: lots of stuff.

[18:10] <PerlJam> rindolf: perl?

[18:11] <PerlJam> :)_

[18:11] <rindolf> PerlJam: some about computers and FOSS.

[18:11] <rindolf> PerlJam: Perl too, probably.

[18:11] <TimToady> UFOs, mutant children...

[18:11] <rindolf> Dynamic languages in general most likely.

[18:11] <rindolf> Some about philosophy.

[18:11] <rindolf> I still have to write the samples in Hebrew.

[18:11] <rindolf> PerlJam: have you seen my "The End of IT Slavery"?

[18:12] <rindolf> PerlJam: how are you kids doing?

[18:12] <PerlJam> yes, I've seen it.

[18:12] <rindolf> PerlJam: oh good.

[18:12] <PerlJam> My kids are fine.  The twins are slightly sick, but they've gotten over it except for the runny noses.

[18:12] <rindolf> PerlJam: that's good.

[18:13] <rindolf> TimToady: have you ever had depressions?

[18:13] <TimToady> had a tropical depression once

[18:13] <rindolf> I had depressions, anxieties, hypomanias, manias - the works.

[18:13] <rindolf> I think I'm Manic-Depressive.

[18:13] <TimToady> was pretty depressed in my early 20's

[18:13] <rindolf> TimToady: what's a tropical depression?

[18:13] <rindolf> TimToady: oh.

[18:13] <PerlJam> rindolf: They make medication for that.  A friend of mine started taking meds and he was night-and-day better

[18:14] <rindolf> PerlJam: I'm taking medication.

[18:14] <REPLeffect> Better than depressions from people touching you with 10 foot poles :-)

[18:14] <PerlJam> TimToady: were those pre-Gloria days?

[18:14] <rindolf> PerlJam: but it does not completely prevent it.

[18:14] <rindolf> PerlJam: cogntivie psychology has helped me more.

[18:14] <rindolf> PerlJam: have you read "Feeling Good"?

[18:14] <rindolf> perlbot: feeling good

[18:14] <perlbot> "Feeling Good" by David A. Burns - a field guide to Cognitive Psychology. http://xrl.us/vurb

[18:14] <lambdabot> Title: Shlomi Fish' Book Recommendations

[18:14] <PerlJam> no I've not.

[18:15] <rindolf> PerlJam: you should.

[18:15] <rindolf> PerlJam: it explains how to handle depressions very well.

[18:15] <rindolf> PerlJam: and also useful as a preventative measure.

[18:15] <PerlJam> I'll take it under advisement :)

[18:15] *** jisom joined
[18:16] <PerlJam> Though I've only had external experiences with depression.

[18:16] <rindolf> PerlJam: you might be able to find an ebook online.

[18:16] <rindolf> PerlJam: yes.

[18:16] <rindolf> But people at any age can develop depressions.

[18:16] <PerlJam> I'm too stubborn to get depressed about anything in particular.

[18:17] <TimToady> PerlJam: yes, pre-Gloria

[18:17] <rindolf> TimToady: how did you meet your wife?

[18:17] *** macroron joined
[18:17] <TimToady> but it's probably more like SAD, and California is a good place to get plenty of light

[18:18] <TimToady> rindolf: her brother was my best buddy at college before she showed up

[18:18] <rindolf> TimToady: oh nice.

[18:18] <rindolf> TimToady: connections.

[18:18] * cj is pretty cheery most of the time... I might explode if left in sunlight too long...

[18:18] <PerlJam> Maybe that's it.  If I lived further north, perhaps I'd get depressed like other people.

[18:18] <rindolf> "If you have connections, you don't need protexia"

[18:19] <rindolf> PerlJam: I live in Israel and I get depressed.

[18:19] <cj> sounds like a brand of condom

[18:19] <PerlJam> rindolf: clearly you need to move closer to the equator then!  :)

[18:19] <rindolf> PerlJam: heh.

[18:19] <REPLeffect> PerlJam:  I think it depends on the person.

[18:20] <REPLeffect> I could stay in a basement coding every day for a week easily.

[18:20] <REPLeffect> I don't need the windows -- some folks do.

[18:20] <cj> REPLeffect: me, too!

[18:20] <REPLeffect> In fact.  In my old house, that's exactly what I did :-)

[18:20] <REPLeffect> (have no basement now).

[18:20] <cj> they put us in this friggin' corner office with tons of windows - we pull the blinds when the sun comes out

[18:21] *** amnesiac joined
[18:21] * PerlJam tries to imagine TimToady in college and doesn't notice much difference

[18:21] <TimToady> cj: in Seattle?

[18:21] <PerlJam> maybe the mustache was bigger?  Sideburns longer?

[18:21] <cj> TimToady: yar

[18:21] <cj> TimToady: it's not often...

[18:21] <[particle]> watching the folks walk in and out of uwajimaya i suppose

[18:21] <TimToady> well, they really don't understand that big yellow light in the sky up there...

[18:22] <REPLeffect> "Is that a UFO?" :-)

[18:22] <TimToady> no, it's a mutant children

[18:22] <PerlJam> REPLeffect: more like "Ahhhh!  It burns!"

[18:22] <cj> [particle]: the front door is obscured by some building... but otherwise I would be :)

[18:22] <REPLeffect> "my eyes, my eyes!!!"

[18:22] <PerlJam> exactly

[18:22] <cj> [particle]: they put me in the big black building, not the ones by union station

[18:23] <[particle]> the sun definitely has that effect here.

[18:23] <PerlJam> Suddenly all programmers have been compared to Gollum. 

[18:23] <TimToady> the buildings are too shiny from all the rain

[18:23] <[particle]> yesterday, ~60 and cloudy. today, the sun came out, so it'll be ~70.

[18:23] <[particle]> cj: i see

[18:23] <TimToady> if that were here, it would have swung between 50 and 80

[18:24] <cj> [particle]: I get to watch people drive out of the express ramp

[18:24] <[particle]> heh

[18:26] <TimToady> that would be down at Seneca or James or so?

[18:26] <TimToady> or Mercer?

[18:26] * [particle] wonders when his favorite open sores developer returns to seattle

[18:27] <REPLeffect> Ooh.  An "open sores" developer --- sounds painful.

[18:27] <TimToady> Perl 6 is definitely a sort point with some folks...

[18:27] <[particle]> yeah, ingy dot net has a framework on his left wrist

[18:27] <TimToady> *sore

[18:27] <REPLeffect> darn muscle memory.

[18:27] <TimToady> gah, fingers are overtrained

[18:27] <cj> TimToady: 5th & Columbia

[18:28] <rindolf> PerlJam: I'm trying to find the time to take a look at Punie.

[18:28] <[particle]> TimToady: that's below jackson

[18:28] <rindolf> PerlJam: then hopefully, I'll start adapting it into rindolf.

[18:28] <[particle]> err, no.

[18:28] <[particle]> i'm still thinking about union station

[18:28] * REPLeffect trying to figure out how Perl 6 could actually be a "sort point" with some folks :-)

[18:29] <REPLeffect> perl -e " .... sort ... "

[18:29] <REPLeffect> s/"/'/g

[18:29] <TimToady> yeah, between Seneca and James

[18:29] * offby1 jerks awake

[18:29] <offby1> those are streets in Seattle.

[18:30] <[particle]> offby1: you're so five minutes ago

[18:30] <offby1> I am indeed.

[18:30] <offby1> cj: you're at Amazon?

[18:30] <REPLeffect> "jerks awake":  That sounds like a bad slogan of some kind.

[18:30] <TimToady> I'm just showing off my knowledge of geography.

[18:30] <TimToady> or maybe ancient history...

[18:31] <offby1> REPLeffect: ok, then feel free to substitute "wakes with a start".

[18:31] <TimToady> for me, Seattle is like, *so* 30 years ago...

[18:31] <rindolf> Hi offby1 , [particle] 

[18:31] * offby1 waves

[18:31] <PerlJam> TimToady: As long as you have the appropriate amount of fun (and we get a perl6 compiler out of the deal somehow  ;-)

[18:31] <TimToady> the former is more certain than the latter.  :)

[18:32] <REPLeffect> offby1: Sorry, I just can't resist seeing alternate meanings (a family trait).

[18:32] <cj> offby1: yar

[18:32] <zafoeta> can it be that perl6 has a lot of functional influences?

[18:32] <REPLeffect> and disfunctional influences.

[18:32] <PerlJam> zafoeta: of course.

[18:32] <REPLeffect> (there I go again)

[18:33] <[particle]> zafoeta: yes, and a lot of disfunctional interfaces

[18:33] <[particle]> REPLeffect: beat me to it ;)

[18:33] <cj> TimToady: I figured you were using google maps :)

[18:33] <REPLeffect> I was just hoping to beat TimToady to it :-)

[18:33] <TimToady> you did, barely

[18:34] <TimToady> but I'd've spelled it right

[18:34] <TimToady> reaching for the y key cost me the prize

[18:34] <REPLeffect> hehe.

[18:34] <REPLeffect> insert random rant about English here.

[18:34] <REPLeffect> (or not-so-random-rant)

[18:34] <TimToady> cj: I admit that I double checked with google there at the end.

[18:34] <[particle]> it's greek to me

[18:35] <TimToady> greek is a nice language

[18:35] <TimToady> and great training in case grammars

[18:35] <cj> when people say "functional programming" what do they mean?

[18:36] <REPLeffect> I'll let it pass for the next guy this time :-)

[18:36] <TimToady> generally they mean programming without side effects, to some extent or another

[18:36] <cj> can you give me an example of a side-effect?

[18:37] <TimToady> $a = 42

[18:37] <zafoeta> reading from the synopsis i see that perl6 will have proper types ... :)

[18:37] <offby1> cj: How many times a day do you hear someone say "Only connect!            -- EM Forster" ?

[18:38] <TimToady> zafoeta: yes, primarily motivated by the desire to do multimethod dispatch an the like

[18:38] <cj> TimToady: is that it?  I must be missing some context...

[18:38] <ferreira> but (let (a 42)) does not produce a side-effect.

[18:38] <TimToady> Lisp is not a pure functional language

[18:38] <zafoeta> so, it might also be more interesting for numerical programming purposes

[18:39] <ferreira> but the let construction looks like a pure functional construct

[18:39] <TimToady> it's interesting for problems that are solved by lining up a lot of definitions

[18:39] <zafoeta> people in my industry always complain that perl is not good enough for what they are doing, and prefer python ... 

[18:39] <TimToady> not so good for modeling the real world, where OO reigns

[18:40] <zafoeta> reading the synopsis, i like it a lot:)

[18:40] <TimToady> we've been working on it a long time...

[18:41] <TimToady> so most of the rough edges are worn off already

[18:41] <ferreira> I dare to say that to many people the problem with Perl is that it gives them too many choices. And they don't want that.

[18:41] <offby1> there's something to that.

[18:41] <offby1> that's the attraction of scheme, in my humble opinion: There's Only One Way To Do It

[18:42] <TimToady> yeah...that's part of why we're trying to give at least one obvious way to do it right.

[18:42] <offby1> s/the/part of the/

[18:42] *** japhb joined
[18:42] <offby1> choice can indeed be overwhelming.

[18:42] <offby1> choice without guidance, anyway.

[18:42] <rindolf> Bleh! I feel bad that my Wikipedia article was deleted.

[18:42] <TimToady> we think we can make the right way easy to do by accident, and still provide flexibility

[18:42] <offby1> that of course is the ideal.

[18:42] <rindolf> About the Haifa Linux Club.

[18:43] <rindolf> Maybe I should join the wikipedia mailing list and discuss it there.

[18:43] <rindolf> Discussing stuff on wikipedia using threading makes me frustrated.

[18:43] <ferreira> Blessed hashes as objects is the easy way for OO in perl 5. And even so, inside-out objects are amazing.

[18:43] <zafoeta> also, the problem of choice is that bad programmers will normally do a bad choice

[18:45] <TimToady> ferreira: inside-out is amazing, but also kinda wrong.  :)

[18:45] <TimToady> all the p5 approaches force the programmer to know too much about the class.

[18:46] <TimToady> well, except maybe Moose...

[18:46] <TimToady> and that can be blamed on p6 :)

[18:46] <ferreira> What do you mean? The opaqueness that inside-out objects provide by saving the attributes elsewhere is the cunning trick?

[18:47] <TimToady> at the price of making it harder to write metacode like serializers

[18:47] <TimToady> even DESTROY can be problematic, depending

[18:48] <TimToady> p5 really falls down on expressing the relationships between classes

[18:49] <TimToady> and the confusion between functions and methods just keeps biting people over and over

[18:50] <ferreira> I see.

[18:51] <cj> isn't a function a method!? :)

[18:51] <TimToady> p5 basically proves it's possible to make your OO design too orthogonal with the rest of the language.

[18:54] <ferreira> I learned a lot from reading "Perl Best Practices". The name of the book emphasizes the positive side of the things. On the hand, there are the hundreds of ways not to do it. That makes Perl a kind of dangerous language: don't try it if you don't know what you're doing. And that's only true if you start to do advanced programming.

[18:55] <zafoeta> my Hash of Array of Recipe %book; is the same as my Hash of Hash of Array of Recipe $book; ??

[18:56] <TimToady> pretty close, except for the variable itself

[18:57] <TimToady> certainly you could subscript them the same once you're past the var name

[18:57] <TimToady> but if you had both in the same namespace, they wouldn't conflict

[18:58] <zafoeta> i see, so, with the above declaration, could i say %book = $book ?

[18:58] <ferreira> cj: nope, a method is a function. But there's no easy way to tell when a function is not a method.

[18:58] <TimToady> %book := $book

[18:58] <zafoeta> ok,thx

[18:59] *** mithraic joined
[19:06] <rhr> I'd like to start writing some tests, any suggestions on what needs more testing?

[19:10] *** REPLeffect_ joined
[19:11] *** fglock joined
[19:12] <TimToady> the sections in the synopses that are barren of smartlinks, maybe?

[19:18] <rhr> OK, I'll have a look

[19:19] *** cognominal joined
[19:20] <[particle]> looks like pugs needs a coverage tool too

[19:26] *** ozo joined
[19:33] *** ferreira left
[19:45] <svnbot6> r16222 | fglock++ | [PCR] - simplified perl5-ratchet-closure emitter

[19:55] *** jvoorhis joined
[19:58] *** zafoeta joined
[20:02] *** DarkWolf84 joined
[20:07] *** veritos joined
[20:08] *** dduncan joined
[20:11] *** dduncan left
[20:11] *** dduncan joined
[20:14] <veritos> heylo

[20:15] *** justatheory joined
[20:15] <masak> veritos: good evening

[20:15] <veritos> afternoon.

[20:16] *** Aankhen`` joined
[20:18] <veritos> TimToady: i think we should have all people write their own man pages.

[20:18] <veritos> makes everyone feel like one big (dys)?functional family.

[20:20] *** obvio171 joined
[20:21] *** justatheory joined
[20:33] *** iblechbot_ joined
[20:37] *** riffraff joined
[20:38] <riffraff> hi

[20:40] <svnbot6> r16223 | fglock++ | [PCR]  perl5-ratchet - implemented <?{...}> and <!{...}>

[20:42] <avar> fglock: go go go:)

[20:42] <avar> fglock: I know PCR has emitting features, could it potentially be made less slow my caching the compiled P5 code?

[20:42] <fglock> avar: :)

[20:43] <fglock> avar: it does, already - it uses Cache::Cache

[20:44] <avar> mm, cool

[20:45] <fglock> it's about 30% slower with an empty cache (perl Makefile.PL empties the cache)

[20:46] *** polettix joined
[20:46] <avar> Pugs::Emitter::Rule::Perl5::Regex looks cool:)

[20:48] <fglock> yes, I plan to replace parts of the perl5-ratchet emitter with it

[20:49] <fglock> the non-ratchet engine is harder to replace; backtracking into subrules is hard in p5regex-land

[20:50] <avar> how so?

[20:51] <fglock> when you call a subrule like /.*/, it needs to return all possible combinations

[20:51] <fglock> it may be possible with inlining

[20:52] <avar> you could always make it (*FAIL) if I understand you correctly

[20:53] <fglock> where / a <subrule> b / becomes / a (.*) b /

[20:55] <avar> would compiling it to something like / (?: a <subrule> | a (.*) b (*FAIL) ) .. /x work?

[20:56] <fglock> avar: not sure I understand it

[20:57] <avar> not sure I do:)

[20:57] <fglock> I mean: rule subrule { .* }; / a <subrule> b /;

[20:59] <fglock> can perl5.10 call sub-regexes like this?

[21:01] <fglock> home &

[21:07] *** prism joined
[21:17] *** prism joined
[21:23] *** mithraic joined
[21:30] *** IllvilJa joined
[21:33] *** polettix is now known as poletti

[21:35] *** poletti is now known as polettix

[21:41] *** stef__ joined
[21:43] *** SubStack joined
[21:45] *** jjore-w joined
[21:52] *** araujo joined
[22:01] *** obvio171 joined
[22:03] *** zafoeta left
[22:06] *** obvio171 joined
[22:14] *** pbuetow joined
[22:34] *** larsen_ joined
[22:39] *** goban joined
[22:48] *** SubStack joined
[23:17] *** obvio171 joined
[23:20] *** obvio171 joined
[23:22] *** obvio171 joined
[23:59] *** DarkWolf84 joined
