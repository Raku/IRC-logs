[00:05] *** theorb joined
[00:13] *** hakobe is now known as hkb_aw

[00:18] *** theorbtwo left
[00:24] *** justatheory joined
[00:30] *** kanru left
[00:33] *** dduncan joined
[00:34] *** justatheory left
[00:36] *** thestarslookdown joined
[00:43] *** weinig left
[01:11] *** idiotmax left
[01:16] *** thestarslookdown left
[01:41] *** agentzh joined
[01:51] *** araujo joined
[02:13] *** weinig joined
[02:13] *** weinig left
[02:14] *** weinig joined
[02:27] *** ryporter left
[02:39] *** tflorez joined
[02:40] *** hkb_aw is now known as hkb_507

[02:41] *** Helios- left
[02:41] *** Helios- joined
[02:42] *** nelhage left
[02:42] *** spinclad left
[02:42] *** nelhage joined
[02:43] *** spinclad joined
[02:45] *** amnesiac left
[03:02] *** dduncan left
[03:03] *** toshinori joined
[03:05] *** elmex_ joined
[03:17] *** [particle1 left
[03:19] *** elmex left
[03:24] *** idiotmax joined
[03:25] *** [particle] joined
[03:26] *** jisom joined
[03:38] *** c9s joined
[03:43] *** jisom_ left
[04:48] *** dduncan joined
[05:02] *** daxim joined
[05:12] *** xinming_1 joined
[05:30] *** c9s left
[05:30] *** xinming left
[05:36] *** elmex_ left
[05:37] *** elmex joined
[05:40] *** amnesiac joined
[05:44] <moritz_> moin

[05:44] <pugs_svnbot> r17874 | moritz++ | cross-metaop.t: removed redundant, broken smartlink

[05:44] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17874

[05:44] <lambdabot> Title: Changeset 17874 - Pugs - Trac

[05:47] <pugs_svnbot> r17875 | moritz++ | fixed smartlink in t/regex/from_perl6_rules/qinterp.t

[05:47] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17875

[05:47] <lambdabot> Title: Changeset 17875 - Pugs - Trac

[05:47] <moritz_> the last two tests with broken smartlinks need more looking at

[05:53] *** pyer joined
[05:54] *** pyer left
[05:55] *** IllvilJa joined
[05:59] *** devogon joined
[06:07] *** hkb_507 is now known as hkb_aw

[06:10] *** pdcawley joined
[06:11] *** pdcawley left
[06:11] *** pdcawley joined
[06:12] *** Aankhen`` joined
[06:40] *** BinGOs joined
[06:42] *** jisom left
[06:43] *** nipotaway is now known as nipotan

[06:54] *** nipotan is now known as nipotaway

[07:00] <moritz_> @seen ferreira

[07:00] <lambdabot> I saw ferreira leaving #perl6 2d 10h 41m 58s ago, and .

[07:10] *** amnesiac left
[07:26] *** daxim left
[07:39] *** dduncan left
[07:41] *** the_dormant joined
[07:46] *** iblechbot joined
[08:00] *** cognominal_ left
[08:01] *** cognominal_ joined
[08:02] *** cognominal_ left
[08:09] *** franck___ joined
[08:10] *** integral left
[08:11] *** jisom joined
[08:14] *** the_dormant left
[08:37] *** autark joined
[08:45] <pugs_svnbot> r17876 | moritz++ | ext/Recurrence: removed unneccessary skip in t/recurrence-grep.t

[08:45] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17876

[08:45] <lambdabot> Title: Changeset 17876 - Pugs - Trac

[08:47] *** drupek12102 left
[08:50] *** andara joined
[09:02] *** hkb_aw is now known as hkb_SMZ

[09:04] *** ruoso joined
[09:09] *** drupek12102 joined
[09:11] *** IllvilJa left
[09:14] *** autark left
[09:18] *** riffraff joined
[09:22] *** jisom left
[09:26] *** drrho joined
[09:40] *** drupek12102 left
[09:43] *** Psyche^ joined
[09:48] *** IllvilJa joined
[09:48] *** cognominal_ joined
[09:48] *** rfordinal_ is now known as rfordinal

[09:49] *** cognominal__ joined
[09:50] *** cognominal_ left
[09:56] *** Patterner left
[09:56] *** Psyche^ is now known as Patterner

[09:58] *** IllvilJa left
[09:58] *** pdcawley left
[10:00] *** Blwood joined
[10:17] *** riffraff left
[10:18] *** ahmadz joined
[10:19] <ahmadz> hi all

[10:19] <moritz_> hi ahmadz 

[10:20] <ahmadz> http://feather3.perl6.nl/runpugs/ ;-)

[10:20] <lambdabot> Title: Run Perl 6 Now -- in your browser!

[10:20] *** cognominal__ left
[10:21] <moritz_> Sorry, the pugs server is not running.

[10:21] <ahmadz> try again... i restarted it

[10:22] <moritz_> it appears to have problems with control chars

[10:22] <moritz_> I entered 'my @a = <foo bar 1 2 3>' and hit return...

[10:23] <moritz_> what I got is this:

[10:23] <moritz_> pugs> 

[10:23] <moritz_> pugs> my 

[10:23] <moritz_> pugs> 

[10:23] <moritz_> even the input line disappeared from the terminal

[10:23] <ahmadz> hmmm

[10:23] <moritz_> tested with firefox 2.0.0.something on linux

[10:23] <ahmadz> let me check

[10:24] <ahmadz> http://feather.perl6.nl:8096/runpugs/

[10:24] <pugs_svnbot> r17877 | fglock++ | [kp6] token-sym clean up

[10:24] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17877

[10:24] <lambdabot> Title: Run Perl 6 Now -- in your browser!

[10:24] <lambdabot> Title: Changeset 17877 - Pugs - Trac

[10:24] <ahmadz> feather3 seems to have a configuration issue with IO::Pty

[10:25] <ahmadz> feather.perl6.nl is working correctly

[10:25] <pugs_svnbot> r17878 | fglock++ | [kp6] added multi token test

[10:25] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17878

[10:25] <lambdabot> Title: Changeset 17878 - Pugs - Trac

[10:25] <ahmadz> moritz: ah html escaping problem

[10:27] <ahmadz> moritz: after ironing out these bugs, i should work on the tutorial part...

[10:30] <moritz_> ahmadz: perl 6 or runpugs tutorial? or combined?

[10:30] <ahmadz> im thinking of using http://jnthn.net/papers/2007-ukuug-perl6programming-slides.pdf as a basis for the examples for the tutorial

[10:30] <ahmadz> moritz: perl6 tutorial

[10:31] <ahmadz> moritz: along with a brief runpugs/pugs command features...

[10:31] <moritz_> ahmadz: great idea

[10:31] *** cognominal_ joined
[10:32] <ahmadz> any ideas are welcome on runpugs

[10:32] <moritz_> kp6 backend - but you know that idea ;)

[10:32] <Juerd> ahmadz: Shall I ask Audrey to point run.pugscode.org to feather3?

[10:34] <ahmadz> juerd: hi, no not yet... we're having problems running it on feather3

[10:35] <ahmadz> moritz_: cool, we have been discussing it with andara, and i think we can extend runpugs to run kp6

[10:35] <Juerd> ahmadz: 

[10:35] <Juerd> ahmadz: Anything I could help with?

[10:36] <ahmadz> juerd: it seems to a bug in IO::Pty, andara mentioned it was a race condition

[10:36] <ahmadz> juerd: slow down the machine? ;-)

[10:36] <Juerd> Haha :)

[10:36] <moritz_> LOL

[10:36] <Juerd> I could give it 64 MB of RAM so it'd have to swap all the time

[10:37] <Juerd> But it's already down to 1 out of 2 CPUs, and I can't make it any slower cpu-wise :)

[10:38] <ahmadz> andara will look at it meanwhile i will iron out the remaining ui bugs... im targeting thursday as a final release date.

[10:54] *** Blwood left
[10:58] <pugs_svnbot> r17879 | azawawi++ | [runpugs] added 'fix html escaping' reported by moritz my @a = <foo 1 2 3>

[10:58] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17879

[10:58] <lambdabot> Title: Changeset 17879 - Pugs - Trac

[11:10] *** devogon_ joined
[11:10] *** riffraff joined
[11:11] *** rutlov joined
[11:17] *** pdcawley joined
[11:20] *** rutlov left
[11:29] *** ahmadz left
[11:30] <pugs_svnbot> r17880 | fglock++ | [kp6] multi token ident:string {...}

[11:30] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17880

[11:35] *** fglock joined
[11:36] *** Blwood joined
[11:37] *** ahmadz joined
[11:39] *** ahmadz left
[11:49] *** drupek12102 joined
[11:57] *** franck___ left
[12:00] *** franck___ joined
[12:00] *** pdcawley left
[12:01] *** theorbtwo joined
[12:08] *** zomgb00bie left
[12:12] *** kanru joined
[12:13] *** pdcawley joined
[12:14] *** theorb left
[12:14] *** drrho left
[12:18] *** Blwood_ joined
[12:21] *** cognominal_ left
[12:21] *** Blwood__ joined
[12:22] *** devogon_ left
[12:27] *** pdcawley left
[12:32] *** Psyche^ joined
[12:34] *** cognominal_ joined
[12:34] *** pdcawley joined
[12:35] *** Blwood left
[12:35] *** HiTech69 joined
[12:37] *** Blwood_ left
[12:42] *** PerlJam left
[12:43] *** devogon left
[12:43] *** devogon joined
[12:47] *** Patterner left
[12:47] *** Psyche^ is now known as Patterner

[12:57] *** cmarcelo joined
[13:03] *** pdcawley left
[13:18] *** riffraff left
[13:18] *** drrho joined
[13:21] *** kanru left
[13:22] *** cognominal_ left
[13:22] <fglock> i'm confused with the meanings of variables within a regex

[13:23] <fglock> how do i get to the string being matched

[13:23] *** polettix joined
[13:27] *** TJCRI joined
[13:27] *** pdcawley joined
[13:33] *** pdcawley left
[13:34] *** agentzh left
[13:35] *** jhorwitz joined
[13:41] <fglock> Cursor.pm seems to imply that the string being matched is $_.orig

[13:43] *** pdcawley joined
[13:46] *** [particle] left
[13:53] *** [particle] joined
[13:58] *** pdcawley left
[14:06] *** amnesiac joined
[14:10] *** integral joined
[14:16] <pugs_svnbot> r17881 | fglock++ | [kp6] more Pair syntax sugar

[14:16] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17881

[14:16] *** cognominal_ joined
[14:20] *** buetow joined
[14:26] *** buetow left
[14:35] <pugs_svnbot> r17882 | fglock++ | [kp6] dollar-cent is a valid identifier

[14:35] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17882

[14:36] *** c9s joined
[14:44] *** kanru joined
[15:00] <pugs_svnbot> r17883 | fglock++ | [kp6] multi token supports french quotes

[15:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17883

[15:01] <moritz_> fglock: so are you parsing the inpt files consistently as unicode?

[15:03] *** polettix left
[15:08] <fglock> moritz_: it seems to work

[15:08] <moritz_> cool

[15:09] <moritz_> and from the sym multis in grammars I gather that you are slowly adapting STD code?

[15:09] <fglock> see t/kp6/56-token-sym.t

[15:10] * moritz_ looks

[15:10] <fglock> i'm trying to - there are some things in the new regexes that i don't understand yet

[15:11] <moritz_> like what?

[15:12] <fglock> the calling convention - like, where is the starting position specified

[15:13] *** vel joined
[15:13] <moritz_> you mean in subrules, or when TOP is matched?

[15:13] <moritz_> TOP is a token, so implicitly anchored to ^

[15:21] *** drupek12102 left
[15:22] *** fglock_ joined
[15:23] <fglock_> moritz_: in subrules

[15:24] <moritz_> fglock_: they are always implicitly anchored to where the calling rule left off

[15:24] <moritz_> so m/foo<bar>/ will match foo first, set .pos on $_ and call subrule bar

[15:24] <moritz_> that is implicitly anchored to .pos

[15:25] <fglock_> there was some talk about .pos being deprecated

[15:27] <moritz_> fglock_: the biggest change iirc is that the regex remembers the position, not the string

[15:28] <moritz_> or in terms of variables, it's $/.to

[15:28] <TimToady> the fundamental is that there is no single $_ that is continually being mutated

[15:28] <moritz_> TimToady to the rescue ;)

[15:28] <TimToady> vaguely

[15:29] <TimToady> coffee is still brewing so ignore half of what I say

[15:29] <amnesiac> hah

[15:29] <moritz_> "Within a closure, the instantaneous position within the search is denoted by the .pos method on that object."

[15:29] <moritz_> is this true for subrules as well?

[15:29] <Kattana> which half?

[15:29] <TimToady> this half

[15:30] *** fglock left
[15:30] <fglock_> i'm translating regexes to plain methods

[15:30] <TimToady> when you have a partial result in a logic program, if you want your logic program to be parallelizable, you can't store that partial result in a mutating variable

[15:30] <TimToady> I am also tranlating regexes to plain methods

[15:31] <fglock_> how does a method that matches a simple constant looks like

[15:31] <fglock_> TimToady: should i reuse your code? :)

[15:31] <TimToady> it's still mutating

[15:32] <TimToady> but hang on and I'll send an example

[15:32] <fglock_> TimToady++

[15:32] <pasteling> "TimToady" at 71.139.49.56 pasted "token { 'a' }" (10 lines, 191B) at http://sial.org/pbot/27526

[15:33] <TimToady> at the moment current "cursor" is in $¢

[15:33] <TimToady> that happens to be self at the top of the method, but each closure within the method gets its own copy of $¢

[15:34] <TimToady> because in theory different parts of it can be "in flight" simultaneously

[15:34] <TimToady> (though generally not in a ratchet grammar)

[15:35] <TimToady> if you want to see more complicated things, "cheat STD.pm | metholate >std"

[15:35] <fglock_> i've been using self as the current grammar 

[15:36] <TimToady> it's also that, but I decided that the current grammar could derive from Cursor, which is the current parser state

[15:36] <TimToady> so a method call can be calling either into Perl or into Curso

[15:36] <TimToady> it seemed to simplify things

[15:37] <TimToady> so I don't have to pass parser state separately from the parser

[15:37] <TimToady> before that my self was pretty much just a static object that never changed

[15:37] <TimToady> (unless you changed the grammar)

[15:38] <TimToady> my current goal is to work out the longest token semantics

[15:38] <TimToady> and make each of these methods actually return a list of longest tokens and actions to take on them.

[15:38] <TimToady> they can then be composed at any point into a lexer

[15:39] <TimToady> but that means the methods themselves are really metamethods part of the time

[15:40] <TimToady> and at the moment I'm looking at swapping in a different PreCursor class to actually do the meta calculations with the same exact body

[15:41] <TimToady> this seems to be the part that nobody else is working on, so I should work on it

[15:43] <TimToady> it's also arguably the core of what makes Perl 6 Perl 6

[15:44] <TimToady> (the ability to mutate your grammar cleanly and efficiently on the fly)

[15:44] *** pdcawley joined
[15:44] <pugs_svnbot> r17884 | azawawi++ | [runpugs] fixed html escaping problem (my @a = <foo 1 2 3>)

[15:44] <pugs_svnbot> r17884 | azawawi++ | [runpugs] fixed prompt not being taken from server

[15:44] <pugs_svnbot> r17884 | azawawi++ | [runpugs] fixed duplicate prompt

[15:44] <pugs_svnbot> r17884 | azawawi++ | [runpugs] updated html/css for cross-browser compatibility

[15:44] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17884

[15:44] <fglock_> http://svn.pugscode.org/pugs/v6/v6-KindaPerl6/lib/KindaPerl6/Runtime/Perl6/Multi.pm

[15:45] <fglock_> my impl of "multi token"

[15:45] *** dwave left
[15:45] *** [particle1 joined
[15:45] *** dwave joined
[15:46] <fglock_> add_token_variant() adds "sym" routines

[15:46] <TimToady> seems to assume you know the token length in advance

[15:47] <TimToady> S05 does not define tokens such that you can always know their length in advance

[15:47] <fglock_> i see

[15:48] <TimToady> usually you can, so one could fake DFA semantics by keeping two tables

[15:48] <TimToady> one of static lengths and one of dynamic

[15:48] <TimToady> but you'd have to run all the dynamic ones to see how they compare to the static

[15:48] <TimToady> depending on the mix that might be more space efficient than DFA

[15:49] <TimToady> but probably not more time efficient

[15:50] <TimToady> perhaps one could traverse a trie of static tokens in parallel with stepping through a DFA

[15:52] <TimToady> any of these ways would probably work okay, given that most dynamic tokens would fail near the beginning, not matching <alpha> for instance in the case of identifiers

[15:52] <TimToady> anyway, that's why I'm working on that part of it.  :)

[15:53] <TimToady> it's not something to be terribly worried about in a bootstrap, but when we actually get to where we're doing it all, this needs to be part of it

[15:55] *** [particle] left
[15:56] <fglock_> i'm working on merging STD into kp6 - is there a particular feature that you'd recommend implementing first?

[15:59] <fglock_> re two tables, that seems doable

[16:02] <TimToady> can you do gather/take lazily?

[16:02] <fglock_> S05 seems to imply that sigil:sym<$> is fixed-length 

[16:02] <fglock_> i can try :)

[16:02] <TimToady> if so, then you can do nonratchet intermixed with ratchet

[16:02] <TimToady> kept running into pugs bugs when I tried prototyping that

[16:03] <fglock_> would you have a pointer to a small test case

[16:03] <TimToady> sym is a way of specifying the identifier of some tokens and later some operator names, but it's not the definition of longest token

[16:04] <TimToady> if the rule says "<sym> 'bar'" then the token would be $bar (at least)

[16:04] <TimToady> it's basically everything DFAable up to <ws> or ::

[16:05] <TimToady> sec...

[16:07] <TimToady> it basically includes any assertions even if they might have to be checked after the DFA is done, but leaves out anything with side effects, such as {*} and friends

[16:09] <TimToady> so the DFA yields a list of candidates from longest to shortest, and the closure we call may say "I didn't really match", and then we have to try the next-longest DFA match instead.

[16:09] <pugs_svnbot> r17885 | fglock++ | [kp6] added "fixme" to Multi.add_token_variant()

[16:09] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17885

[16:10] <TimToady> most of those action closures can just start up where the DFA left off

[16:10] <TimToady> but some of them will need to reparse the token

[16:11] <TimToady> to apply any additional constraints that the DFA can't check

[16:11] <TimToady> or to capture bits of it

[16:11] <TimToady> that's all part of what I'm trying to figure out

[16:14] <TimToady> by the way, the current metholate does not assume ratcheting at all, except to apply .[0] to the gathered list of candidates.  much more could be done there, but I think it would be a premature optimization

[16:14] *** andara left
[16:14] <fglock_> re lazy gather, i think it's doable

[16:15] <TimToady> in any case, having bounced several attempts at ratcheting off of pugs, I've given it up as a bad job till we implement "andthen" :)

[16:15] <fglock_> it would be good to have a test - i'm looking at t/statements/gather.t

[16:16] <TimToady> run a simple sequence through metholate and you'll get a bunch of nested gather/takes; might make a good test

[16:16] <fglock_> k

[16:16] <wolverian> hm.. what will we call the stm orElse now that it's taken? :)

[16:17] <TimToady> it's already named "maybe"

[16:17] <TimToady> and it's a block prefix, not a separator

[16:17] <TimToady> you can string a bunch of maybe blocks in a row

[16:17] <wolverian> oh... dammit, I knew that! :)

[16:18] <wolverian> is it specced?

[16:18] *** drupek12102 joined
[16:19] <TimToady> don't think so, though "contend" is mentioned in S04

[16:19] <wolverian> okay, thanks. 

[16:19] <TimToady> it's one of those things that should find its way into the concurrency spec

[16:20] <wolverian> yeah, it's just not on spec.pugscode.org, which is what I check first

[16:20] * wolverian needs more time for pugs 

[16:20] * TimToady needs more time for everything

[16:22] <TimToady> actually, it's already in Concurrency.pod

[16:22] <TimToady> so it's kinda specced

[16:22] * kolibrie looks in Concurrency.pod for more time

[16:22] <TimToady> keep handing out those commit bits...

[16:23] <TimToady> biab &

[16:23] *** weinig left
[16:25] *** baest left
[16:26] <fglock_> hmm - is there a way to kill a perl5 thread? i miht need this in case @a = gather {...} and @a is destroyed

[16:26] <fglock_> might

[16:27] <ruoso> fglock_, does the ast in kp6 contains line number information?

[16:28] <fglock_> no

[16:28] <ruoso> it's starting to be KindaHard to debug kp6 without that

[16:28] *** HiTech69 left
[16:32] *** franck___ left
[16:39] <ruoso> fglock_, what's needed to implement { return ::Foo( a => b) } inside rules

[16:40] <ruoso> ?

[16:40] *** pdcawley left
[16:40] <fglock_> ruoso: it should work already; needs some debugging

[16:41] <ruoso> fglock_, the tests still fail

[16:42] <fglock_> kp6 already has named parameters, it should be possible to fix .new

[16:42] *** rindolf joined
[16:42] <fglock_> and use Foo.new( a => b )

[16:44] *** pmurias joined
[16:44] <pmurias> hi

[16:44] *** justatheory joined
[16:45] *** hoelzro joined
[16:46] <ruoso> fglock_, tests grammar/08 and 09 tests that

[16:46] <ruoso> and both fail

[16:46] <ruoso> pmurias, hi

[16:46] <ruoso> pmurias, echo 'die' | perl -Ilib-kp6-kp6-p5 kp6-kp6.pl

[16:46] <ruoso> some clue?

[16:46] <ruoso> some value of some scalar have a perl5 1 instead of a ::Int 1

[16:47] <ruoso> the problem is how to find out where?

[16:47] <ruoso> fglock_, what is the auto_deref thing?

[16:48] <fglock_> it tells for() whether to interpolate @array, and not $scalar

[16:48] <ruoso> who sets it?

[16:48] *** ahmadz joined
[16:49] <fglock_> it is a role in the Array/Hash class

[16:49] <fglock_> in MOP.pm

[16:49] *** shriphani joined
[16:49] *** weinig joined
[16:49] <ruoso> hmhmm

[16:50] *** shriphani left
[16:50] <ruoso> for some reason a plain Scalar with a value of "1" has this

[16:50] <ruoso> in kp6-kp6

[16:51] <pmurias> maybe some perl5 component "leaks" perl5 values

[16:54] <ruoso> pmurias, I think it's in the closure of Rule::Block

[16:55] <pugs_svnbot> r17886 | fglock++ | [kp6] investigating lazy gather/take

[16:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17886

[16:55] *** c9s left
[16:55] <ruoso> pmurias, it's probably using the last statement from some closure

[16:56] <ruoso> which returns 1

[16:56] <ruoso> gah...

[16:58] <ruoso> ::DISPATCH( $COMPILER::Code_add_pad, 'APPLY', $Class_name );

[16:58] <ruoso> this is the line that returns a p5 1

[17:01] *** barney joined
[17:02] <ruoso> hmmm

[17:03] <ruoso> Perl5/Array.pm unshift was returning 1 instead of ::Int 1

[17:05] <pmurias> push makes the same mistake

[17:05] * pmurias is thinking of making a Carp which would serialise perl6 values properly

[17:06] <ruoso> pmurias, I've just fixed both

[17:07] <ruoso> interesting is that now I get a Syntax Error...

[17:07] <ruoso> :)

[17:08] <ruoso> that should be a good sign

[17:08] <pmurias> ruoso: do you think perl5 values are a common enough problem to add (optional) automatic detection of them?

[17:09] <ruoso> pmurias, it already detects it

[17:09] <pugs_svnbot> r17887 | fglock++ | [kp6] gather TODO list

[17:09] <pugs_svnbot> r17888 | ruoso++ | [kp6] Perl5::Array unshift/push were returning plain p5 scalar. fixed

[17:09] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17888

[17:09] *** hoelzro left
[17:10] <ruoso> pmurias, the message isn't that helpfull

[17:10] <ruoso> but I'm not sure it can ebe

[17:11] *** dakkar joined
[17:12] *** xinming_1 is now known as xinming

[17:17] <pmurias> ruoso: if we can extract the helpfull information

[17:18] <pmurias> or if any information croak could return would be usefull?

[17:18] *** drrho left
[17:19] <ruoso> pmurias, fglock_, take a look at this new test I've just submitted

[17:21] *** jjore-w left
[17:21] *** lambdabot left
[17:21] <pugs_svnbot> r17889 | ruoso++ | [kp6] new failing test: code inside rule always return, even if it did not explicitly return

[17:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17889

[17:22] *** lambdabot joined
[17:24] <pmurias> ruoso: i know the problem

[17:24] <pmurias> there used to be a return 'stange value' prepended inside code clousres in rules

[17:25] <TimToady> fglock_: actually, I doubt that we'll get a viable implementation of gather/take from ithreads--too heavy

[17:26] <ruoso> pmurias, yep... I remember that

[17:26] <TimToady> note that we changed "return" to "make" last week, and the semantics just now set the return value, but don't halt parsing

[17:26] <fglock_> hmm

[17:26] <ruoso> pmurias, are you putting that again?

[17:26] <ruoso> fglock_, TimToady, I'm not sure you have that much to gain from parallel executing right now... we can already use make -j to speed as possible

[17:27] <ruoso> and we're talking mostly about 2 cpu machines at most

[17:27] <ruoso> for the currenct scenario

[17:27] <TimToady> I'm not talking about practice, but about theory :)

[17:27] <ruoso> ah

[17:27] <ruoso> ok

[17:28] <ruoso> TimToady, about the s/return/make/... I think we probably will stick with return... at least until we bootstrap kp6....

[17:28] <fglock_> ruoso: laziness is only meant for non-infinite loops, mostly

[17:28] <ruoso> or else we would need to change mp6 too...

[17:29] <TimToady> don't you have to handle "return" specially anyway?

[17:29] <TimToady> it can't really be a return

[17:29] <ruoso> TimToady, yep... but we use mp6 to compile kp6's grammar right now

[17:29] <ruoso> we would need to modify mp6 to support that change

[17:30] <ruoso> when we bootstrap kp6 

[17:30] <ruoso> we will refactor the entire compiler

[17:30] <TimToady> *nod*

[17:30] <ruoso> using the features that are already available in kp6, but are not available in mp6

[17:30] <fglock_> ruoso: we can tell mp6 to use [ return | make ]

[17:30] <pmurias> make works differently

[17:31] <ruoso> actually, that's why I think it's so important to bootstrap ASAP...

[17:33] <pmurias> although i don't think mp6 depends on return ending the rule

[17:33] <ruoso> kp6 depends on mp6 doing that

[17:33] <ruoso> and that's why kp6-kp6 is failing right now

[17:34] <ruoso> because mp6 does, but kp6 doesn't

[17:34] <ruoso> . o O (geez... that kpmsp6 is confusing)

[17:35] <pmurias> ruoso: it's the other way around

[17:35] <ruoso> nope...

[17:35] <ruoso> mp6 is the compiler for Grammar

[17:35] <ruoso> when the grammar is compiled by kp6

[17:36] <pmurias> yes

[17:36] <ruoso> it fails because of that

[17:36] <pmurias> kp6 depends on mp6 not ending the rule on a  closure without a return

[17:36] <pmurias> is what i mean

[17:37] <ruoso> ah... ok

[17:37] <fglock_> i've got an old implementation of yield() somewhere, that doesn't use threads - i'll try to find it

[17:38] <ruoso> pmurias, so, do you know how to fix that?

[17:38] <pugs_svnbot> r17890 | azawawi++ | [runpugs] show "Please wait" message now works on FF2,IE7,Opera

[17:38] <pugs_svnbot> r17890 | azawawi++ | [runpugs] hidden iframe is loaded after document is ready (faster page load)

[17:38] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17890

[17:38] <lambdabot> Title: Changeset 17890 - Pugs - Trac

[17:39] <pmurias> ruoso: doing it right now ;)

[17:39] <ruoso> :)

[17:40] <pmurias> the long compiles help to catch up with irc ;)

[17:40] <pmurias> *catching

[17:40] <ruoso> home &

[17:41] <ruoso> try to run kp6-kp6 when you finish

[17:41] <ruoso> pmurias, ^

[17:41] <TimToady> fglock_: finally backlogged, did your question about current position get answered?

[17:41] <ruoso> pmurias, like: echo 'say "Hello World"' | perl -Ilib-kp6-kp6-p5 kp6-kp6.pl

[17:42] *** ruoso left
[17:42] <pmurias> make is overzelous

[17:42] <fglock_> TimToady: i think so, current position is stored in an instance of Cursor, which inherits from the current grammar

[17:42] <pmurias> * zealous

[17:43] <TimToady> basically, all that information (both current position, and which string it points into) must come through Cursor or we lose any hope of multithreading

[17:43] <fglock_> TimToady: ok

[17:43] <fglock_> home too &

[17:43] <TimToady> bye &

[17:44] *** PerlJam joined
[17:45] <TimToady> actually, current grammar inherits from Cursor because Perl inherits from Cursor

[17:52] *** kyrbe joined
[17:52] *** kyrbe left
[17:55] *** Psyche^ joined
[17:55] *** ahmadz_ joined
[17:57] *** daxim joined
[17:58] *** ferreira joined
[17:59] <ferreira> moritz_: hi

[17:59] <lambdabot> ferreira: You have 1 new message. '/msg lambdabot @messages' to read it.

[17:59] <ferreira> @messages

[17:59] <lambdabot> TimToady said 6d 20h 8m 24s ago: pugs does not yet implement Range objects, nor does it really treat * as anything other than Inf, so 0..* is pretty much doomed at the moment

[18:01] <ferreira> I just wrote something about the microgrant to write micro-articles on Perl 6 operators: http://use.perl.org/~ferreira/journal/34473

[18:01] <lambdabot> Title: Journal of ferreira (5993)

[18:02] <ferreira> Is there someone willing to read the one about the zip operator: http://ferreira.nfshost.com/perl6/zip.html

[18:02] <lambdabot> Title: Yet Another Perl 6 Operator: Zip

[18:03] <PerlJam> ferreira++ btw

[18:03] <pugs_svnbot> r17891 | pmurias++ | [kp6]: fixed closures in rules withought return

[18:03] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17891

[18:03] <lambdabot> Title: Changeset 17891 - Pugs - Trac

[18:04] <PerlJam> ferreira: How much did you ask for in your grant?  I was thinking of submitting an article on perl 6 regex as a TPF microgrant but I really have no clue what to ask for.

[18:05] <ferreira> Well, I did not say how much. I believe each microgrant is $500 and that's what I am assuming.

[18:06] <PerlJam> oh really?

[18:06] <ferreira> That's what I infered from: http://www.nntp.perl.org/group/perl.perl5.porters/2007/03/msg122448.html

[18:06] <lambdabot> Title: Perl 6 Microgrants. Now accepting proposals. - nntp.perl.org, http://tinyurl.com/2bjsdl

[18:06] <ferreira> and the microgrants that were accepted until now.

[18:07] <PerlJam> I thought it was like any other TPF grant where you *must* specify the amount or it would be rejected.

[18:07] <PerlJam> no having to make that decision makes the idea of proposing something much easier  :)

[18:07] <PerlJam> s/no/not/

[18:08] <ferreira> I don't think so. In the presentation of the project, it says: "We'll be making USD500 grants"

[18:08] *** ahmadz left
[18:09] <[particle1> yep, there's 10 USD500 microgrants

[18:09] *** [particle1 is now known as [particle]

[18:09] <PerlJam> Well, I should write my proposal then :-)

[18:12] <ferreira> Go for it! See the last paragraph of http://www.perlfoundation.org/july_5th_2007_a_trio_of_perl_6_microgrants

[18:12] <lambdabot> http://tinyurl.com/37fnew

[18:12] *** Patterner left
[18:12] *** Psyche^ is now known as Patterner

[18:12] <PerlJam> ferreira: thanks.  

[18:13] *** IllvilJa joined
[18:13] <PerlJam> ferreira: did you need reviewers of your articles or you just want people to read them in general?  :)

[18:14] <ferreira> Reviewers indeed ;-) I need to learn a lot for catching up with Perl 6 

[18:14] <ahmadz_> http://feather3.perl6.nl/runpugs/

[18:14] <lambdabot> Title: Run Perl 6 Now -- in your browser!

[18:15] <ferreira> For example, by now I want a statement to use (from Perl 6) a Perl 5 module and import a sub from it. 

[18:17] <PerlJam> ferreira: your eq_array() subroutine it buggy.

[18:17] <ferreira> Ok. What's wrong?

[18:17] <PerlJam> "return False if $x eq $y"

[18:17] <PerlJam> s/eq/ne/

[18:17] <PerlJam> :)

[18:18] <PerlJam> also, that's just string comparison.

[18:18] <PerlJam> you may want to use eqv

[18:18] <PerlJam> (or whatever it's called)

[18:18] *** c9s joined
[18:18] <ferreira> ha ha. Maybe I should rename it to neq_array ;-) 

[18:19] *** kjwcode joined
[18:19] <PerlJam> Equivalence operators should get an article of their own early on IMHO

[18:20] <PerlJam> ferreira: And I think it's just  use "perl5:Lingua::EN::Numbers";  But that may just a be a pugsism rather than a perl6ism.

[18:20] *** jisom joined
[18:21] <PerlJam> ferreira: I *Really* like your disclaimers

[18:21] <ferreira> Well, I am not seriously concerned about not using non-introduced operators. For example, ~~ will be used 

[18:21] *** sonmez joined
[18:21] <PerlJam> ferreira: I realize that, I just think that there will be confusion about ==, =:=, eq, eqv, and whatever other equivalence operators there are  :)

[18:22] <PerlJam> (and I tend to think that those things with a high chance of confusion should be covered early and well)

[18:23] <ferreira> eqv is the general comparison operator? The one that works kind of Java equals()?

[18:23] *** sonmez left
[18:25] *** c9s left
[18:28] <ferreira> Well, I fixed 'eq' by '!eqv' and used the 'use perl5:' thing

[18:39] *** franck___ joined
[18:39] <TimToady> ferreira: "perl5" used to be a perl6ism but is now just a pugsism because Perl 6 is now specced as "use LingENNum:from<perl5 Lingua::EN::Numbers>" or some such.  but pugs doesn't do that yet

[18:40] <TimToady> that in S11:390 and thereabouts

[18:41] <ferreira> TimToady: thanks. Reading S11

[18:50] <ferreira> So what I want is "use Lingua::EN::Numbers:from<perl> <num2en>" or do I need the Perl 5 module name and an alias?

[18:50] <PerlJam> TimToady: could that have been "use Foo:from<perl5 Lingua::EN::Numbers>"  (where Foo is essentially a made-up name that acts as an alias)  ?

[18:51] <TimToady> the intent is the latter, but the either form could probably be made to work

[18:53] <ferreira> Ok, this is clear from the example at the synopsis: " use Whiteness:from<perl5 Acme::Bleach 1.12 cpan:DCONWAY>; "

[18:53] <TimToady> presumably the syntax inside the :from<> corresponds to the source language's view of the module name

[18:53] <TimToady> which might not map into the Perl 6 namespace cleanly

[18:53] <TimToady> plus it's useful to have a ::-less alias

[18:54] <PerlJam> I guess, I'm wondering if there are any "hidden" (to me) constraints on the perl 6 name.

[18:54] <PerlJam> s/,//

[18:54] <ferreira> In the example, the only thing needed is a way to use num2en from Perl5 Lingua::EN::Numbers. 

[18:56] <TimToady> presumably one could just say "use :from<perl5 Lingua::EN::Numbers> <num2len>" to just import that, and perhaps generate an alias

[18:56] <TimToady> but since imports are lexical by default, we don't actually need to have an alias

[18:56] *** franck___ left
[18:57] <TimToady> well, except maybe for decent error reporting

[18:58] <TimToady> I guess we really need to track a name and version and authority even for foreign modules, if we want to pull in multiple of the same name...

[18:59] <TimToady> but that might be impractical depending on the foreign language

[19:00] <ferreira> Even for Perl 5 it would depend on an extension mechanism that does not exist today. That is an enhanced toolchain that saved that info (name, version, authority)

[19:01] *** vel left
[19:01] <theorbtwo> For example, I'm betting .net CLRage will have something similar in spirit but quite different in details already that we'll want to pull from when loading C# stuff.

[19:02] <TimToady> indeed, there are similarities there

[19:02] <TimToady> we won't say who borrowed the idea from whom...  :)

[19:05] <ferreira> Any implementation of lexical imports by now? Sorry to keep asking: as I said I need to catch up yet with current Perl 6.

[19:06] <TimToady> pugs, presumably

[19:14] *** rindolf left
[19:23] <moritz_> ferreira: I looked at zip.html, looks fine at first sight

[19:24] <theorbtwo> Hm, I wonder if you can do lexical imports in 5.10 with ours?

[19:27] <TimToady> only by also doing a package import at the same time, but the point of lexical import is to reserve packages for export lists, not imports

[19:27] <TimToady> well, that's one of the points, anyway

[19:28] *** jjore-w joined
[19:32] *** vel joined
[20:04] *** jisom left
[20:06] <pmurias> CLRage?

[20:07] <pmurias> goole dosn't find anythinh

[20:07] <pmurias> *anything

[20:14] <pmurias> or is it something like a ice age?

[20:15] *** autark joined
[20:17] *** dakkar left
[20:19] *** barney left
[20:30] *** vel left
[20:33] *** dduncan joined
[20:42] *** ferreira left
[20:43] <[particle]> CLR age, maybe?

[20:47] <rhr> @tell ferreira in 'my @E = map ...' there needs to be a comma after the block

[20:47] <lambdabot> Consider it noted.

[20:50] *** pmurias left
[20:53] <TimToady> I took it to be the -age suffix, as in postage is what goes along with the post

[20:53] <TimToady> CLRage is then just the stuff associated with CLR

[20:54] <TimToady> a package is something you pack, etc.

[20:54] <TimToady> it's not a terribly productive suffix in modern English

[20:55] <TimToady> amperage is the amount of amperes, voltage is the number of volts

[20:55] *** kaether left
[20:57] *** vel joined
[20:57] <TimToady> @tell pmurias on CLRage see http://moritz.faui2k3.org/irclog/out.pl?channel=perl6#i_104982

[20:57] <lambdabot> Consider it noted.

[21:01] *** kane_ joined
[21:07] *** TJCRI left
[21:07] *** justatheory left
[21:09] *** cmarcelo left
[21:12] *** cmarcelo joined
[21:13] *** Aankhen`` left
[21:17] *** ashleyb joined
[21:34] *** vel left
[21:55] *** jhorwitz left
[21:56] *** justatheory joined
[21:57] *** vel joined
[22:06] *** polettix joined
[22:16] *** thoughtpolice joined
[22:29] *** mncharity left
[22:31] *** amnesiac left
[22:32] *** vel left
[22:36] *** iblechbot left
[22:36] <pugs_svnbot> r17892 | avar++ |  r63477@t:  avar | 2007-09-17 22:35:14 +0000

[22:36] <pugs_svnbot> r17892 | avar++ |  Replaced the old Makefile with a custom Makefile.PL system based on

[22:36] <pugs_svnbot> r17892 | avar++ |  ExtUtils::MakeMaker, `make test', `make dist', `make disttest' and all

[22:36] <pugs_svnbot> r17892 | avar++ |  the other usual suspects now work as with other perl dists. It works

[22:36] <pugs_svnbot> r17892 | avar++ |  for all the stuff the old Makefile worked for (unless I screwed up).

[22:36] <pugs_svnbot> r17892 | avar++ |  However `make install' does not yet work, but that's just a matter of

[22:36] <pugs_svnbot> r17892 | avar++ |  tweaking the right parameters and maybe modifying a couple of .pl files.

[22:36] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17892

[22:36] <lambdabot> Title: Changeset 17892 - Pugs - Trac

[22:37] *** Limbic_Region joined
[22:37] <avar> fglock_: (and other kp6 guys), don't be afraid to revert that change if it screws stuff up

[22:38] *** polettix left
[22:38] <avar> but it's a nice start for the stuff I was whining about at yapc::eu, getting kp6 on cpan and having it smoked:)

[23:10] *** polettix joined
[23:11] *** polettix left
[23:14] *** cmarcelo left
[23:16] *** kjwcode left
[23:17] *** Blwood__ left
[23:20] <[particle]> avar: was that kp6 specific? i didn't see a [kp6] tag in the commit message

[23:20] <pugs_svnbot> r17893 | avar++ | make test TEST_VERBOSE=1 now works as in other EU::MM dists

[23:20] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17893

[23:20] <lambdabot> Title: Changeset 17893 - Pugs - Trac

[23:21] <avar> [particle]: Yeah it was, I don't know why [kp6] doesn't appear

[23:21] <avar> Maybe because svk really commits to the whole repository rather than a subdir

[23:22] <avar> [particle]: The last one was too:)

[23:22] <[particle]> nice, hopefully it'll build on windows :) i'll try later, time for a meeting &

[23:22] <avar> It requires GNU specific makefile features still, but that should be hackable

[23:23] <avar> Just need to make a glob-thingy in perl instead of the makefile stuff it has now

[23:47] *** luqui joined
[23:48] *** devogon left
[23:52] *** rfordinal_ joined
