[00:01] <diakopter> Limbic_Region: hrm, I guess I missed seeing planet.pugscode.org when moving everything to apache2...

[00:01] <diakopter> what'd you expect it to show

[00:02] <diakopter> you sure it's not supposed to redirect to http://planetsix.perl-foundation.org/ ?

[00:02] <diakopter> (that's my guess)

[00:05] *** drupek12 joined
[00:06] <beppu> diakopter: Yeah, that's what planet.pugscode.org is supposed to look like.

[00:07] <diakopter> supposed to look like, or supposed to *be*?

[00:08] <diakopter> back in May: http://web.archive.org/web/20070503083204/planet.pugscode.org/ 

[00:09] <diakopter> you'll note the reference to PlanetSix: Pugs-related news are available from <a href="http://planetsix.perlfoundation.org/">PlanetSix</a>

[00:09] <diakopter> actually: here. :)  http://web.archive.org/web/*hh_/planet.pugscode.org/

[00:10] <diakopter> yeah, it's always redirected there.

[00:10] * diakopter goes to fix it

[00:13] *** agentzh joined
[00:13] <agentzh> morning!

[00:13] <diakopter> evening!

[00:14] * agentzh grins.

[00:14] <diakopter> I'll have a good evening if you'll have a good morning.

[00:14] <TimToady> g'day, mate!

[00:14] <agentzh> heh

[00:14] <agentzh> thanks

[00:15] <Aankhen``> agentzh: Hiya.

[00:15] <agentzh> Aankhen``: hi :)

[00:15] <Aankhen``> Was trying to leave a message for you earlier, but lambdabot is MIA, so I'll repeat it.

[00:16] <Aankhen``> <Aankhen``> @tell agentzh I sent DCONWAY a Perl6::Perldoc::To::Html, that's about the full extent of my contributions. :-)

[00:16] <agentzh> Aankhen``: i've seen it because i do have the habit of reading logs

[00:16] <Aankhen``> Heh, okay.

[00:16] <agentzh> sending stuff to DCONWAY == I won't be able to hack on it

[00:16] <agentzh> ;)

[00:16] <Aankhen``> Ah.

[00:18] *** unobe is now known as unobe_away

[00:19] <agentzh> is it recommended to include $VERSION for every p5 package? (i'm polishing PCR...so it's not OT here ;))

[00:24] *** avar joined
[00:24] *** weinig_ joined
[00:25] *** trippeh joined
[00:25] <agentzh> ah, PCR hangs...

[00:25] <avar> meow

[00:26] <agentzh> when continue is set to 1

[00:26] *** ChanServ sets mode: +o diakopter

[00:26] <avar> agentzh: ->compile("foo", continue => 1) ?

[00:27] <agentzh> ->compile("foo", { continue => 1 })

[00:28] *** diakopter sets mode: +b *!*@*ompugoat.biz

[00:28] <Aankhen``> diakopter: Who's that?

[00:29] <agentzh> avar: okay, :c is actually not working in PCR...i put it in a loop and no wonder it hang ;) 

[00:34] <avar> sh-3.1$ perl5.9.5 -MPugs::Compiler::Rule -wE 'my $r = Pugs::Compiler::Regex->compile("foo", { continue => 1 })'

[00:34] <pugs_svnbot> r16820 | agentz++ | trunk:

[00:34] <pugs_svnbot> : PCR - fixed t/04-rule.t

[00:34] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16820

[00:34] <avar> sh-3.1$

[00:35] <agentzh> avar: can you give me an example of *using* :c ?

[00:36] *** Alchemy joined
[00:36] <agentzh> avar: PCR can't remember the pos it left off when :c is specified

[00:36] <pasteling> "evalbot_r16819" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26000

[00:39] <avar> $ perl5.9.5 -mPugs::Compiler::Regex -mPugs::Grammar::Base -wE 'my $rule = Pugs::Compiler::Regex->compile("."); for (0 .. 2) { my $m = $rule->match("abc", { pos => $_ }); say "$m" }'

[00:39] <avar> a

[00:39] <avar> b

[00:39] <avar> c

[00:39] <avar> pos is useful but I don't know what continue is for

[00:39] <agentzh> yeah, i know pos is working

[00:39] <agentzh> :c is like m//g in p5, no?

[00:40] *** prism joined
[00:42] <avar>   if( $_[3]{continue} ) {

[00:42] <avar>     pos(${$_[1]}) = $_[3]{p}

[00:42] <avar>       if defined $_[3]{p};

[00:42] <avar>     $bool = \( ${$_[1]} =~ /) . $rule_source . q(/g \) ? 1 : 0; ) .

[00:42] <avar>     $captures . q(

[00:42] <avar>   }

[00:43] <avar> where @_ is from:

[00:43] <avar>         my $match = $rule->{code}(

[00:43] <avar>             $grammar,

[00:43] <avar>             $str,

[00:43] <avar>             $state,

[00:43] <avar>             \%args,

[00:43] <avar>         );

[00:43] <avar> so it sets the pos() magic on the string you're matching against I guess

[00:43] <agentzh> avar: *nod*

[00:44] <agentzh> avar: unfortunately PCR copies $str everywhere...

[00:44] <avar> Good to see someone else than fglock poking PCR:)

[00:44] <avar> *other than

[00:44] <agentzh> avar: hehe

[00:44] <agentzh> avar: i'm fixing it

[00:46] <avar> howz?

[00:49] <agentzh> avar: by using the original argument instead of a copy

[00:49] <avar> the pattern or the string?

[00:50] <agentzh> the string

[00:50] <avar> You have no idea what you're getting yourself into do you?:)

[00:50] * avar snickers

[00:51] *** mjk joined
[00:51] <avar> the perl5 runtime has hundreds of lines of mega scary code to deal with all the evil cases of someone matching something and then changing the string, but not before they've finished using the match variables which are positionals

[00:52] *** mjk joined
[00:53] <agentzh> avar: okay, i think i'd better do some experiments first.

[00:54] <agentzh> avar: not so familiar with all the p5 magic

[00:54] <avar> it's really just to catch different cases of this:

[00:54] *** diakopter is now known as diakopter_afk

[00:54] *** diakopter_afk is now known as diakopter

[00:55] <avar> my $str = "abc"; if ($str =~ /(.)(.)(.)/) { $str = "meh"; say $$_ for 1 .. 3 }

[00:55] <agentzh> avar: wow

[00:55] <avar> (prints a, b, c)

[00:55] <agentzh> it's really impressive

[00:57] *** nipotaway is now known as nipotan

[01:06] <agentzh> avar: yay! finally fixed the :c thing

[01:06] <diakopter> ?eval say "I'm alive"

[01:06] *** evalbot_r16804 is now known as evalbot_r16820

[01:06] <evalbot_r16820> OUTPUT[I'm alive␤] Bool::True

[01:08] <avar> agentzh: what does it do that it wasn't doing before?:)

[01:08] <agentzh> avar: using the original arg instead of the copy really helps

[01:08] <agentzh> avar: maybe we're not on the same page ;)

[01:09] <agentzh> furthermore, PCR's emitter doesn't set pos($_[1]) when continue is specified.

[01:09] <agentzh> s/doesn't/didn't/

[01:10] <TimToady> ?eval "Number {+^-[+] ^4} is alive!  Need more input!"

[01:10] <evalbot_r16820> "Number 5 is alive!  Need more input!"

[01:10] <TimToady> or in this case, number 16820

[01:10] <agentzh> wow, my eyes...

[01:11] <diakopter> heh; ironic that Short Circuit 2 is on ENCOREP at the moment.

[01:12] <agentzh> fglock: is there a particular reason for not using heredoc in the emitter?

[01:12] *** bonesss joined
[01:12] <agentzh> fglock: updating the emitter templates is error prone ;)

[01:16] <TimToady> ?eval say map { ([+] ^$_) == (-[-] ^$_) }, ^10

[01:16] <evalbot_r16820> OUTPUT[1111111111␤] Bool::True

[01:17] <TimToady> which only works because ^n always starts with 0

[01:18] <Limbic_Region> sorry, was AFK

[01:19] <Limbic_Region> diakopter - the journals link should not link to a directory listing, that's the issue

[01:19] <pugs_svnbot> r16821 | agentz++ | trunk:

[01:19] <pugs_svnbot> : PCR - renamed t/emitter/00-ratche.t to 00-ratchet.t

[01:19] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16821

[01:19] <Limbic_Region> The RSS link is probably fine - I have no idea, I don't use RSS

[01:19] <Limbic_Region> it is specifically the journals link that is b0rk

[01:20] <diakopter> Limbic_Region: my yak shaver's batteries are out of charge at the moment, so in other words planet. is not redirecting yet.

[01:20] <Limbic_Region> k

[01:20] *** unobe_away is now known as unobe

[01:20] <Limbic_Region> hrm - the change in channel ops due to all the spamming recently

[01:20] <Limbic_Region> ?

[01:21] <diakopter> Limbic_Region: affirmative

[01:22] <Limbic_Region> good

[01:22] * Limbic_Region laughs at seeing the dalekbot

[01:22] *** diakopter sets mode: -o diakopter

[01:22] <diakopter> apparently some reference to a destructive entity

[01:23] <Limbic_Region> diakopter - not a Dr. Who fan apparently

[01:23] <Limbic_Region> http://en.wikipedia.org/wiki/Dalek

[01:25] *** agentzh joined
[01:26] <pasteling> "agentz" at 222.45.12.128 pasted "avar: the copying problem is demonstrated in this p5 script (which loops)" (6 lines, 90B) at http://sial.org/pbot/26001

[01:26] <diakopter> dunno, but I got the 1st season of Torchwood at the recommendation of a friend

[01:27] <agentzh> avar: see the post above :)

[01:27] *** mjk joined
[01:30] *** daxim_ joined
[01:30] *** ChanServ sets mode: +o diakopter

[01:32] <agentzh> kolibrie: :continue (:c) should now work in PCR's ratchet mode. not sure if it works in pugs due to my limited knowledge of the HsBridge and Hs...

[01:32] <pugs_svnbot> r16822 | agentz++ | trunk:

[01:32] <pugs_svnbot> : [PCR]

[01:32] <pugs_svnbot> : * fixed the :continue(:c) issue for the ratchet emitter

[01:32] <pugs_svnbot> :   (thanks kolibrie++ for reporting it and avar++ for discussing it

[01:32] <pugs_svnbot> :    with me on #perl6)

[01:32] <pugs_svnbot> : * added corresponding tests to t/04-compiler-regex.t

[01:32] *** jedai joined
[01:32] <pugs_svnbot> : * updated t/emitter/00-ratchet.t by copying 00-ratchet.t_ over since

[01:32] <pugs_svnbot> :   the emitter templates have changed

[01:33] <pugs_svnbot> : * use the original $str variable everywhere without passing

[01:33] <pugs_svnbot> :   sub arguments by copy.

[01:33] <pugs_svnbot> : (no new failing tests)

[01:33] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16822

[01:33] <pasteling> "evalbot_r16821" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26002

[01:35] <avar> agentzh: if you did my $s2 = \$s; $s = $$s2 it would work

[01:35] <avar> I.e. it's because you're not copying the pos magic, butyouprobablyknewthat

[01:35] <agentzh> avar: yeah, of course. because we're passing things by ref here :)

[01:36] <agentzh> avar: yes, i knew :)

[01:37] <avar> I should get re::engine::PCR working again

[01:37] * avar lazy

[01:37] * agentzh 2

[01:37] <avar> have you worked on making PCR emit a standalone compiled grammar?

[01:38] <avar> Afaik it just requires Pugs::Runtime::Match + the emitted code

[01:38] <avar> PRM could be emitted as well...

[01:38] *** stewcolinsi joined
[01:39] *** dolmans joined
[01:40] * avar pokes agentzh 

[01:44] *** bsb joined
[01:45] *** rindolf joined
[01:50] *** unobe is now known as unobe_away

[01:50] *** r0bby joined
[01:58] *** weinig joined
[02:05] *** prism joined
[02:05] *** xinming joined
[02:09] *** agentzh joined
[02:09] <agentzh> back from an electricity failure...

[02:10] <rindolf> Hi agentzh 

[02:10] <rindolf> agentzh: wb

[02:10] <agentzh> rindolf: howdy!

[02:10] <agentzh> avar: i've thinking about that

[02:10] <agentzh> avar: and i believe it's straightforward given the current implementation of P::C::Regex

[02:11] <agentzh> *I've been

[02:11] *** drupek12 joined
[02:13] <agentzh> avar: $regex = P::C::Regex->compile(...); $regex->{perl5} + P::C::Regex::match + Pugs::Runtime::Match is sufficient

[02:14] <agentzh> avar: P::C::Regex's ->perl5() blesses a hash with the P::C::Regex package, which seems unnecessary to me...

[02:15] <agentzh> avar: P::C::Regex is already a compiler that emits p5 code; thanks to fglock++

[02:16] * agentzh hopes his electricity won't be cut off again today.

[02:16] <avar> ya, it doesn't look that hard:)

[02:17] <agentzh> avar: indeed

[02:17] <agentzh> avar: fglocks does eval everywhere ;)

[02:17] <avar> moo

[02:18] *** prism joined
[02:19] <avar> agentzh: have you looked into the different emitters? Like the p5rx emitter?

[02:19] <agentzh> avar: yes, i have.

[02:20] <agentzh> avar: the p5 emitter seems a thin wrapper around p5 regexes

[02:20] <agentzh> which should be very efficient

[02:20] <agentzh> actually it only constructs a match object and passes p6 regex modifiers in

[02:21] <agentzh> avar: i think there's much room for optimizing the ratchet emitter

[02:21] <avar> I'm specifically wondering whether how to get something like the ->{perl5} code except something that uses the p5 engine more (as opposed to the pure-perl-substr horror

[02:22] <agentzh> avar: the current implementation is already very suitable for emitting C/C++ code

[02:22] <agentzh> right, it doesn't take full advantage of the p5 regex engine

[02:22] <agentzh> yet

[02:23] <avar> will you be at yapc::eu?

[02:23] <agentzh> nope, too far for me ;)

[02:24] <agentzh> i hope i could :)

[02:25] <avar> Yeah, it would be very cool to emit XS too

[02:26] <agentzh> aye!

[02:26] <avar> You could make a p5 package, and with Module::Install::Compiler::Rule (or something) generate xs/p5rx/perl code from that grammar

[02:26] <avar> it would be fastah!

[02:26] <agentzh> right

[02:27] <avar> mm, svk sync of pugs going slowly

[02:27] * agentzh has already switched back to svn for pugs hacking

[02:27] *** diakopter is now known as diakopter_afk

[02:28] <avar> why?

[02:28] <agentzh> because i often have problems with svk while working on the pugs repos

[02:28] <agentzh> *had

[02:28] <agentzh> i dunno why

[02:29] *** diakopter_afk is now known as diakopter

[02:29] <avar> Warning: the following files are missing in your kit: 00-ratche.t t/emitter/00-ratche.t

[02:29] <avar> Please inform the author.

[02:29] <agentzh> avar: sorry, forgot to update MANIFEST...

[02:33] <agentzh> comitting...

[02:33] <avar> a lot of tests fail because Pugs::Grammar::Base isn't loaded

[02:33] <agentzh> avar: could you paste the outputs?

[02:33] <pugs_svnbot> r16823 | agentz++ | trunk:

[02:34] <pugs_svnbot> : PCR - updated MANIFEST and MANIFEST.SKIP (avar++)

[02:34] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16823

[02:34] *** r0bby joined
[02:34] <avar> http://sial.org/pbot/26005

[02:34] <agentzh> avar: 75 tests are supposed to fail

[02:34] <avar> that's on blead b.t.w.

[02:35] <avar> http://sial.org/pbot/26006

[02:36] <agentzh> avar: PadWalker doesn't work there?

[02:37] <avar> it does, but it would appear to work somewhat differently

[02:37] <agentzh> k

[02:38] <agentzh> the failing tests seem to be related to PadWalker...

[02:41] <avar> my system install of PCR was screwing some of it up

[02:43] <pugs_svnbot> r16824 | agentz++ | trunk:

[02:43] <pugs_svnbot> : PCR - used croak instead of die for better diagnostics

[02:43] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16824

[02:44] <agentzh> avar: oh...$regex->{code} is missing again...according to your test outputs...

[02:44] <agentzh> avar: in t/08-hash

[02:45] <pasteling> "evalbot_r16823" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26007

[02:46] <avar> $ prove -brv t 2>&1 |pbotutil.pl

[02:46] <avar> http://sial.org/pbot/26008

[02:46] *** Alias_ joined
[02:47] *** AfterDeath left
[02:48] *** thrig joined
[02:52] <pugs_svnbot> r16825 | agentz++ | trunk:

[02:52] <pugs_svnbot> : PCR - more diagnostics

[02:52] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16825

[02:52] <agentzh> i'll try win32 to make sure it's not a problem on my side...

[02:52] <agentzh> avar: could you try out r16825 and paste the output again?

[02:56] *** fglock joined
[02:56] <avar> http://sial.org/pbot/26009

[02:56] <agentzh> cool, fglock is also here :)

[02:56] <thrig> avar: can you post those to #perl6 or nochannel instead?

[02:58] <avar> thrig: this is #perl6

[02:58] <thrig> yes, and 26009 showed up in #perl

[02:58] <avar> ah

[02:59] * avar wonders how with pbotutil

[02:59] <agentzh> avar: it works for activeperl 5.8.7 + winxp.

[02:59] <avar> wee config file

[03:00] <agentzh> avar: it seems to be a bleadperl problem...

[03:01] <agentzh> it's interesting to see that on winXP PCR fails 1 less test than ubuntu :)

[03:04] <pugs_svnbot> r16826 | agentz++ | trunk:

[03:04] <pugs_svnbot> : PCR - fixed MANIFEST for real this time :(

[03:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16826

[03:06] <avar> agentzh: http://sial.org/pbot/26010

[03:06] <pasteling> "evalbot_r16825" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26011

[03:06] <avar> compile_p6grammar.pl appers to be broken

[03:06] <agentzh> avar: looking

[03:10] <agentzh> avar: same here

[03:10] <agentzh> :(

[03:10] <avar> $ perl5.9.5 -Mblib -mPugs::Compiler::Token -E 'say Pugs::Compiler::Token->new("a b c")->perl5\

[03:10] <avar> '

[03:10] <avar> Can't use string ("Pugs::Compiler::Token") as a HASH ref while "strict refs" in use at /var/src/pug\

[03:11] <avar> s-perl5/Pugs-Compiler-Rule/blib/lib/Pugs/Compiler/Regex.pm line 260.

[03:11] <avar> and using no strict there just makes it spit out much of nothing

[03:14] <agentzh> avar: use the following:

[03:15] <agentzh> perl -Mblib -MPugs::Compiler::Token -e 'print Pugs::Compiler::Token->compile("a b c")->perl5'

[03:15] <agentzh> it works for me

[03:17] <agentzh> i'll revert to r16752 locally and try compile_p6grammar.pl again

[03:18] <avar> ah, compile not new

[03:19] <agentzh> avar: i can't make compile_p6grammar.pl work even with r16752...

[03:20] <agentzh> i've never tried it before, so i don't know when it worked.

[03:20] <avar> I don't think you broke it

[03:22] <agentzh> to be honest, i think ->new is more appropriate than ->compile ;)

[03:23] <agentzh> since it does what an ordinary constructor does.

[03:23] <agentzh> the name "compile" made me believe it returns raw p5 source or something...

[03:26] <agentzh> i'll try r16100...

[03:27] <agentzh> r16100 doesn't work either...

[03:27] <agentzh> fglock: was lib/Pugs/Grammar/Rule2.pm compiled by compile_p6grammar.pl?

[03:29] <agentzh> fglock: i wonder what you did use to generate lib/Pugs/Grammar/Rule.pmc :)

[03:31] <agentzh> because PCR's test suite is not so good, i'm in the fear of breaking things without notice...

[03:31] <agentzh> PCR needs a good tracing facility :)

[03:31] <agentzh> maybe a visualized one

[03:35] <agentzh> bbiab &

[03:40] *** amnesiac joined
[03:41] <avar> agentzh: 

[03:41] <avar> sh-3.1$ pbotutil.pl grammar.pm

[03:41] <avar> http://sial.org/pbot/26012

[03:41] <avar> sh-3.1$ pbotutil.pl Grammar.pmc

[03:41] <avar> http://sial.org/pbot/26013

[03:41] <avar> http://nopaste.snit.ch:8001/10586

[03:41] <avar> the last one is the compiler

[03:42] <avar> of course it doesn't work, but it would be neat if it did

[03:42] <agentzh> how did you get the .pmc?

[03:43] <avar> perl5.9.5 -Mblib util/compile_p5grammar.pl grammar.pm > Grammar.pmc

[03:44] <avar> $ perl5.9.5 -Mblib -MPugs::Compiler::Regex -I. -MGrammar -E 'my $rx = Pugs::Compiler::Regex->compile("<Grammar::number>"); my $m = $rx->match("123"); say "Digit ", $m->[0]'

[03:44] <avar> Use of inherited AUTOLOAD for non-method Grammar::number() is deprecated at (eval 22) line 8.

[03:44] <avar> Not a SCALAR reference at (eval 24) line 47.

[03:44] <agentzh> there is no compile_p5grammar.pl under util

[03:44] <avar> so some evilness in the generated code

[03:44] <avar> yeah, I hacked it together (it's the nopaste.snit.ch file)

[03:44] <agentzh> avar: fair enough :)

[03:45] <avar> maybe you can use that as basis for something more serious?

[03:45] <agentzh> avar: i'm having a lot of small patches for PCR, will look into that later

[03:45] <agentzh> avar: i'm not that smart to jump too far ;)

[03:45] <agentzh> avar: i'm still getting my head around PCR

[03:45] <agentzh> avar: but the process is much faster than i ever expected ;)

[03:46] <avar> I don't understand any ofe it:)

[03:46] <agentzh> avar: will hack out a graphical tracer for PCR first

[03:46] <agentzh> avar: that will make my life easier while debugging the grammar

[03:47] <avar> tried the smart comment stuff?

[03:47] <agentzh> avar: and adding missing features along the way...

[03:47] <agentzh> smart comment?

[03:48] <agentzh> you mean Smart::Comments on CPAN?

[03:48] <agentzh> already using it right now

[03:48] <agentzh> but it's not the answer for everything ;)

[03:49] <avar> ya, make something like re=debug :)

[03:49] <agentzh> will use some customized smart comments in the generated code to ease debugging and visualization

[03:49] <agentzh> re=debug?

[03:50] <avar> perl -Mre=debug

[03:50] *** [particle1 joined
[03:50] <avar> does PCR construct an AST?

[03:51] <agentzh> avar: yes

[03:51] <agentzh> avar: a hash-based AST

[03:51] <agentzh> but fglock is moving to a class-based one in kp6

[03:51] <agentzh> the AST is constructed by Pugs::Grammar::Rule

[03:52] <agentzh> and fed into Pugs::Emitter::*

[03:52] <avar> where's the source file for Rule.mc?

[03:52] <avar> *pmc

[03:52] <agentzh> Rule2.pm

[03:52] <agentzh> it's a p6 grammar file

[03:52] <agentzh> lib/Pugs/Grammar/Rule2.pm

[03:53] <avar> ooh, evil:)

[03:53] <agentzh> indeed!

[03:53] <agentzh> this part is bootstrapped

[03:53] <agentzh> i have no clue what tool fglock used to compile Rule2.pm though

[03:53] <agentzh> maybe v6.pm?

[03:54] <agentzh> anyway, my dad is calling me for lunch, later &

[03:55] <avar> he used compile_p6grammar, when it was working

[03:55] *** diakopter is now known as diakopter_afk

[04:29] *** unobe_away is now known as unobe

[04:29] *** LimbicRegion joined
[04:30] *** LimbicRegion is now known as Limbic_Region

[04:30] *** ProperNoun joined
[04:33] *** diakopter_afk is now known as diakopter

[04:35] *** monomorph joined
[04:51] *** weinig joined
[04:55] *** Psyche^ joined
[05:04] *** weinig joined
[05:08] *** GabrielVieira2 joined
[05:08] *** rlb3 joined
[05:10] *** Psyche^ is now known as Patterner

[05:10] *** DarkWolf84 joined
[05:20] *** devogon joined
[05:22] *** diakopter is now known as diakopter_afk

[05:35] *** GabrielVieira joined
[05:43] *** riffraff joined
[05:48] *** jedai joined
[05:59] *** rho joined
[06:05] <meppl> good morning

[06:07] <DarkWolf84> good morning

[06:15] <meppl> good morning dark wolf

[06:31] *** dduncan joined
[06:43] *** franck__ joined
[07:02] *** iblechbot joined
[07:06] *** kane_ joined
[07:21] <agentzh> avar: thanks

[07:26] *** jisom joined
[07:35] *** nipotan_ joined
[07:44] *** sunnavy joined
[07:49] *** mj41 joined
[07:53] <agentzh> fglock: is it normal for Pugs::Compiler::Perl6 to fail the tests in its t/builtins/arity.t and t/regex.t ?

[08:04] *** dduncan left
[08:09] <pugs_svnbot> r16827 | agentz++ | trunk:

[08:09] <pugs_svnbot> : [PCR]

[08:09] <pugs_svnbot> : * fixed POD syntax errors in Precedence.pm and Parsec.pm

[08:09] <pugs_svnbot> : * added t/00-pod.t

[08:09] <pugs_svnbot> : * more Pod to P::C::Regex

[08:09] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16827

[08:27] *** b_jonas joined
[08:37] *** unobe is now known as unobe_away

[08:43] <Juerd> feather is showing CGI source code instead of executing it

[08:43] <Juerd> I can't find the cause

[08:43] <Juerd> Anyone?

[08:58] <DarkWolf84> maybe it's not in cgi-bin directory

[08:58] <DarkWolf84> or cgi should be

[08:58] <Jmax> Juerd: apache?

[08:59] <Jmax> Options ExecCGI? proper executable modes? hashbangs? any htaccess overriding?

[08:59] <Juerd> Jmax: Apache2

[08:59] <Juerd> Jmax: ScriptAlias'ed.

[08:59] <Jmax> ok

[08:59] <Jmax> er, that's a bit different

[08:59] <Jmax> check error.log? apache2ctl configtest? ...

[08:59] <Juerd> Scriptalias is supposed to be equal to alias + execcgi + sethandler cgi-script

[08:59] <DarkWolf84> I don't think so

[09:00] <Juerd> Jmax: It doesn't think there's an error

[09:00] <Jmax> heh

[09:00] <DarkWolf84> it's not an error

[09:01] <DarkWolf84> there is place in http.conf where is shown the palce where cgi will be executed

[09:01] *** adu joined
[09:01] <DarkWolf84> I use apache2

[09:02] <DarkWolf84> sry for my bad english

[09:10] *** chris2_ joined
[09:11] *** chris2_ is now known as chris2

[09:15] *** ruoso joined
[09:15] <pugs_svnbot> r16828 | agentz++ | trunk:

[09:15] <pugs_svnbot> : [PCR]

[09:15] <pugs_svnbot> : * added t/04-compile-rule.t to test Pugs::Compiler::Rule

[09:15] <pugs_svnbot> : * added tests to t/04-compiler-regex.t to test default modifier settings

[09:15] <pugs_svnbot> : * added a TODO test to t/04-compiler-regex.t for :c in backtracking mode

[09:15] <pugs_svnbot> : * removed trailing spaces in Pugs::Emitter::Rule::Perl5

[09:15] <pugs_svnbot> :   and Pugs::Compiler::Rule

[09:15] <pugs_svnbot> : * updated the POD of P::C::Rule

[09:15] <pugs_svnbot> : * added more POD to P::C::Regex (moved some common parts from P::C::Rule)

[09:15] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16828

[09:18] *** rfordinal joined
[09:19] <pasteling> "evalbot_r16827" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26016

[09:36] *** KevinLei joined
[09:36] <pugs_svnbot> r16829 | agentz++ | trunk:

[09:36] <pugs_svnbot> : [PCR]

[09:36] <pugs_svnbot> : * fixed a bug in P::C::Rule->compile regarding modifiers with undef values

[09:36] <pugs_svnbot> : * added tests to t/04-compiler-rule.t for it

[09:36] <pugs_svnbot> : * updated MANIFEST

[09:36] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16829

[09:37] *** rfordinal joined
[09:39] *** dolmans left
[09:40] *** KevinLei left
[09:44] <avar> agentzh: implement my pet project!

[09:44] <avar> waah!

[09:44] <avar> :)

[09:45] <agentzh> avar: ;)

[09:45] <avar> agentzh: do you know if I can do something like s/// with a rule in compile_p5..?

[09:45] *** isaacd_ joined
[09:45] <avar> specifically I'm thinking of the token/rule/regex => sub {} stuff

[09:46] <agentzh> avar: i haven't seen anything analogous to s/// in PCR's tests

[09:46] <agentzh> what is the token/rule/regex => sub {} stuff?

[09:47] *** alexe joined
[09:47] <avar> $txt =~ s/(token|regex|rule)\s+(\w+)\s*\{(.*?)\}/"sub $2 { " . Pugs::Compiler::$1->compile($3) . "}"/gxs;

[09:47] <avar> basically

[09:48] <agentzh> wow

[09:48] <agentzh> i think you can :)

[09:48] <agentzh> but the details must be adjusted a bit

[09:49] <agentzh> especially the wrapper

[09:49] <agentzh> we have to take care of the arguments fed into the subs

[09:50] <agentzh> PCR has its own protocol

[09:50] <agentzh> which is unlikely the same in p6

[09:51] <agentzh> basically the parameter list must follow ($grammar, $str, $state, \%params)

[09:51] <agentzh> i dunno what the $state is for

[09:52] <avar> presumably compile($1)->perl5 takes care of that

[09:52] <agentzh> avar: indeed

[09:52] <agentzh> no, not ->perl5, but ->{perl5}

[09:52] <avar> why?

[09:52] <agentzh> ->perl5 put a wrapper around ->{perl5}

[09:53] <agentzh> which is a bit mysterious

[09:53] <avar> ->emit($backend)

[09:53] <agentzh> fglock tries to make the ->perl5 method does something like serializing a P::C::Regex instance

[09:53] <agentzh> heh

[09:53] <agentzh> currently there is two major emitters

[09:54] <agentzh> one for ratchet mode and the other for backtracking mode

[09:54] <agentzh> P::C::Regex does the dispatch based on the value of ->{ratchet}

[09:55] *** rff_ joined
[09:56] <agentzh> i think we should make these things clear in PCR's POD or comments...

[10:00] <pugs_svnbot> r16830 | agentz++ | trunk:

[10:00] <pugs_svnbot> : PCR - more POD for P::C::Rule and P::C::Regex

[10:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16830

[10:06] <pasteling> "evalbot_r16829" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26018

[10:06] <avar> agentzh: if you're interested in optimizations for the ratchet emitter you might want to look at constant folding

[10:07] <agentzh> avar: *nod*

[10:07] <avar> ->compile("eek", {ratchet => 1}) calls substr 3 seperate times for qw(e e k)

[10:08] <agentzh> avar: there *is* similar effor in the ratchet emitter

[10:08] <agentzh> avar: but it's currently commented out

[10:09] <avar> hrm, ratchet => 0 actually looks more efficient

[10:09] <avar> ratchet => 0 == no backtracking?

[10:09] <agentzh> ratchet => 0 == with backtracking

[10:09] <agentzh> the non-ratchet emitter lacks a lot of features, it seems

[10:10] <agentzh> and it's not well tested.

[10:42] *** buetow joined
[10:48] *** obvio171 joined
[10:49] *** bsb_ joined
[10:50] *** drupek12 joined
[10:55] *** masak joined
[10:59] *** cmarcelo joined
[11:04] *** kanru joined
[11:07] <pugs_svnbot> r16831 | agentz++ | trunk:

[11:07] <pugs_svnbot> : PCR - added 00-pod-coverage.t and more POD to P::C::Rule and P::C::Regex

[11:07] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16831

[11:16] <pugs_svnbot> r16832 | agentz++ | trunk:

[11:16] <pugs_svnbot> : PCR - tweaked the POD of P::C::Rule a bit more

[11:16] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16832

[11:18] <moritz> re

[11:21] *** fglock joined
[11:28] <agentzh> fglock: i don't quite understand the $state argument...

[11:29] <agentzh> fglock: is it related to the legacy engine only?

[11:30] <agentzh> moritz: i hope you can fix the encoding issue for me when you have time...you do have the environment :)

[11:32] <moritz> agentzh: I will try, as soon as I have my power supply back - hopefully that's tomorrow or friday

[11:32] <agentzh> moritz: no hurry ;)

[11:33] <moritz> Aankhen``: thanks for your recent content-type fix, but as long as the encoding issues are not solved, I will not update the server

[11:34] <avar> agentzh++ # poking PCR

[11:34] * agentzh feels guilty.

[11:34] <agentzh> avar: thanks :)

[11:34] <avar> avar-- # not poing re::eng::PCR

[11:34] <agentzh> heh

[11:35] <moritz> agentzh: do feel guilty, you just tried to enhance it, and it works for you... if I can't fix it, I'll just fall back to the last working revision of the encoding stuff

[11:35] <moritz> s/do/don't/ ;-)

[11:36] <avar> moritz: If you get how emitters work some pod would be greeat:)

[11:36] <moritz> avar: ?

[11:36] <moritz> avar: you meant agentzh I suppose?

[11:36] <avar> yeah, that:)

[11:37] <agentzh> avar: will work on the emitter pod :)

[11:37] <avar> \o/

[11:37] <agentzh> avar: the emitter is quite simple :)

[11:37] <avar> yeah, isn't it just the hash keys in Rule2.pm mapped to subs?

[11:39] <agentzh> avar: yeah

[11:39] <avar> How does it determine what emitter to use?

[11:40] <avar> Say if I wanted to make a C.pm emitter or something..

[11:41] <moritz> lemme guess... it always uses the perl emitter? *g*

[11:41] <agentzh> avar: it's hard-coded in P::C::Regex

[11:42] <agentzh> moritz: yes, it always uses p5 emitter right now

[11:42] * avar purrs

[11:45] * moritz barks

[11:51] *** mjk joined
[11:55] *** xinming joined
[12:00] *** drupek12 joined
[12:27] *** elmex joined
[12:28] *** dalekbot sets mode: +b *!*@u.nix.is

[12:28] *** avar was kicked by dalekbot (EXTERMINATE CRAPFLOODING))
[12:31] <moritz> wtf?

[12:31] <pugs_svnbot> r16833 | agentz++ | trunk:

[12:31] <pugs_svnbot> : PCR - P::C::Regex - fixed a "XXX" by refactoring duplicated code between C<reinstall> and C<install> into C<_install> (no new failing tests)

[12:31] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16833

[12:31] <moritz> could somebody with op unban avar please?

[12:32] <BinGOs> he was being an arse on one of the channels that dalekbot is on.

[12:32] <moritz> no need to ban him here, though

[12:33] <BinGOs> *shrug*

[12:35] *** DarkWolf84 joined
[12:41] *** |Jedai| joined
[12:42] <fglock> agentzh: ping

[12:45] <agentzh> fglock: pong

[12:46] <fglock> re $state - it is an optional arg used by the backtracking engine

[12:46] <agentzh> fglock: ah

[12:46] <agentzh> thanks

[12:46] <fglock> PCR uses a state machine for backtracking

[12:47] <agentzh> haven't looked at the backtracking engine yet :P

[12:47] <fglock> agentzh: have you seen the new p6regex-in-p5regex ?

[12:47] <agentzh> no

[12:47] <agentzh> in kp6?

[12:47] <fglock> yes

[12:47] <agentzh> fglock: haven't touched kp6 yet, sorry ;)

[12:48] <fglock> it is only partially implemented, but there is a working prototype - one sec...

[12:48] <fglock> http://svn.pugscode.org/pugs/v6/v6-KindaPerl6/temp/backtracking-recursive-subrule.pl

[12:48] <agentzh> looking

[12:48] <fglock> this is "hand-emitted" code :)

[12:49] <agentzh> hmm

[12:50] <agentzh> what's the original p6 regex?

[12:51] <fglock> one sec - I'll add that as comments

[12:51] <agentzh> i see a lot of (?{...}) ;)

[12:51] <agentzh> k

[12:52] <fglock> these blocks are used to create a "script", which is later interpreted and generates a Match object

[12:52] <fglock> the idea is to have low-cost backtracking

[12:52] <agentzh> interesting

[12:53] <agentzh> looks a bit like assembly code ;)

[12:54] <agentzh> indeed it works

[12:55] <agentzh> wow, 0 dependency, hehe

[12:57] *** lumi joined
[13:01] <agentzh> fglock: why isn't P::C::RegexPerl5 a subclass of P::C::Regex?

[13:01] <fglock> looking...

[13:02] <pugs_svnbot> r16834 | fglock++ | trunk:

[13:02] <pugs_svnbot> : [kp6] added comments to backtracking-recursive-subrule.pl, with Perl 6 versions of the regexes - agentzh++

[13:02] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16834

[13:03] <agentzh> ah, r6-on-r5 looks clean!

[13:03] <agentzh> i like it :)

[13:04] <agentzh> fglock++

[13:05] <fglock> Pugs::Compiler::RegexPerl5 was meant as an internal library

[13:05] <agentzh> fglock: fair enough :)

[13:05] <pugs_svnbot> r16835 | agentz++ | trunk:

[13:05] <pugs_svnbot> : PCR - added SYNOPSIS to P::C::Regex

[13:05] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16835

[13:06] <fglock> agentzh: may I give you comaint of PCR on cpan?

[13:06] <agentzh> fglock: okay!

[13:06] <agentzh> my cpan id is AGENT

[13:07] <fglock> just one thing - please test v6.pm (from CPAN), it depends heavily on PCR

[13:08] <agentzh> fglock: i'm already running v6.pm's test suite before each commit ;)

[13:08] <fglock> cool :)

[13:08] * agentzh has a fast machine.

[13:08] * moritz wants to work this summer, in order to buy a fast maschine ;)

[13:09] <agentzh> heh

[13:09] <moritz> with at least 1G ram, so I can compile pugs without swapping

[13:09] *** drupek12 joined
[13:09] <moritz> and stitch my panoramas - that's really a pain with swapping

[13:11] * agentzh does have 1G.

[13:11] *** b_jonas joined
[13:11] *** dalekbot sets mode: +b *!*@dsl5402B9F8.pool.t-online.hu

[13:11] *** b_jonas was kicked by dalekbot (Previous lamer ban))
[13:11] * agentzh decides to go out for a walk.

[13:11] <agentzh> &

[13:12] <fglock> agentzh: all set

[13:12] <agentzh> fglock: thanks :)

[13:13] <fglock> agentzh: v6.pm too

[13:13] <agentzh> cool

[13:14] <fglock> you are welcome :)

[13:14] *** iblechbot joined
[13:15] *** kanru joined
[13:24] <fglock> agentzh: re 'continue', it means "match at or after pos" - 'pos' only matches at pos

[13:24] *** diakopter_afk is now known as diakopter

[13:25] <agentzh> fglock: it seems implementing p6regex m:p/pattern/ with PCR is not trivial

[13:25] <moritz> what's the :p modifier ?

[13:25] <agentzh> because PCR doesn't use StrPos, it's quite hard to distinguish :p and :pos(StrPos(3))

[13:26] <agentzh> :p means match from the current pos

[13:26] <fglock> by not trivial you mean it is not impossible? good :)

[13:26] <agentzh> s/pos/.pos/

[13:26] <agentzh> fglock: LOL

[13:26] <agentzh> fglock: i'm thinking about a solution of using a fixed negative value, like -1

[13:27] <agentzh> or a ref

[13:27] <agentzh> or a particular string like 'true'

[13:27] <agentzh> the undef value of :pos now already has a special meaning (matching from anywhere)

[13:29] <agentzh> fglock: btw, :continue now works for ratchet mode

[13:29] <agentzh> fglock: i reused p5 string's pos() magic

[13:30] <fglock> RegexPerl5 already uses pos()

[13:30] <agentzh> fglock: yes, i've seen that

[13:31] <fglock> in the other modules, you could read pos() at start, and set it at exit

[13:31] <agentzh> fglock: that's exactly what i did for the ratchet emitter ;)

[13:31] <fglock> :)

[13:31] <agentzh> gotta run for walk for real &

[13:32] *** agentzh left
[13:42] *** Limbic_Region joined
[13:43] <diakopter> g'morning LR

[13:43] <Limbic_Region> morning

[13:43] <Limbic_Region> I was up way too late last night

[13:44] <Limbic_Region> how are you?

[13:46] <diakopter> I'm alright.

[13:47] * diakopter tries to get Debian lenny/amd64 to work on Asus M2N-E

[13:55] *** amnesiac joined
[14:14] *** wilx joined
[14:22] <diakopter> moritz: you around?

[14:23] <moritz> diakopter: yes

[14:34] <diakopter> moritz: what say you about logging magnet#parrot similarly?

[14:35] <moritz> diakopter: if that's OK for the folks there, then that's fine by me

[14:36] <moritz> diakopter: but I have to admit that current linkifications (for example of r\d+) are #perl6-specific, and currently there I can't create separate configs...

[14:36] <moritz> diakopter: I'll work on it during the weekend ;)

[14:37] <diakopter> moritz: #parrot uses the same svnbot

[14:37] <diakopter> (run from feather as well)

[14:38] <moritz> diakopter: you mean #parrot on irc.perl.org? afaict they have a no-logging policy

[14:38] <moritz> diakopter: or did they change it recently?

[14:38] <moritz> diakopter: I offered them logging the other day

[14:39] *** amadeus joined
[14:39] *** amadeus is now known as laye

[14:41] <diakopter> oh

[14:41] <diakopter> I didn't realize

[14:41] <diakopter> yeah, that's what I meant

[14:42] <diakopter> meanwhile, the A record for irc.pugscode.org appears to have changed...?

[14:43] *** phileas_fox joined
[14:44] <moritz> I don't know... what do you think it was before?

[14:45] <moritz> roughly a month (?) ago feather's IP changed

[14:45] *** phileas_fox left
[14:45] <moritz> Juerd: did you get your micro grant for feather hardware?

[14:45] <diakopter> I thought previously it was 193.200.132.135 (feather)

[14:46] <moritz> when?

[14:47] <diakopter> yesterday?

[14:48] <moritz> I don't have a clue... I think Juerd is the 'DNS-Slave' ;)

[14:48] <moritz> or was it audreyt?

[14:48] <diakopter> audreyt owns the domain

[14:57] *** bsb_ left
[14:59] *** amnesiac joined
[15:07] *** isaacd__ joined
[15:09] <pugs_svnbot> r16836 | fglock++ | trunk:

[15:09] <pugs_svnbot> : [kp6] updated kp6-roadmap.pod; included p6regex-on-p5regex

[15:09] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16836

[15:12] *** hkb_zz is now known as hakobe

[15:15] *** agentzh joined
[15:16] <Juerd> moritz: I did not get any response

[15:16] <masak> to what extent are people doing development in perl6 nowadays?

[15:16] <Juerd> diakopter: feather's normal FQDN is feather.perl6.nl

[15:16] <masak> and to the extent that they're not, what's holding them back?

[15:16] <Juerd> diakopter: There are others who pointed their domains to it (notably pugscode.org)

[15:17] <diakopter> irc.pugscode.org just got pointed to feather.. adding the vhost redirector now...

[15:17] <Limbic_Region> Juerd - did you get my email?

[15:17] <Juerd> Limbic_Region: Yes

[15:17] <Limbic_Region> k

[15:17] <Juerd> Limbic_Region: I fixed half of it.

[15:17] <Juerd> Limbic_Region: You can now connect through https again

[15:17] <Juerd> Limbic_Region: But CGI still doesn't work. Or someone must have fixed it while I was working :)

[15:17] <Limbic_Region> no, still not working

[15:18] <Limbic_Region> https://feather.perl6.nl/cgi-bin/cgiirc/irc.cgi

[15:18] <Juerd> It was this morning

[15:18] <Limbic_Region> pulls up source code for me

[15:18] <Juerd> Yep

[15:18] <Juerd> But no longer the 500 :)

[15:18] <Limbic_Region> ;-)

[15:18] <Juerd> The 500 had to do with a PAM error, not CGI

[15:19] <Limbic_Region> ok - I really don't have much time to log in from work anymore and that's the only place where I need the cgi:irc

[15:19] <Limbic_Region> but thank you so much for providing the service

[15:21] <Limbic_Region> anyone here know much about Levenshtein distances I could pose an off-topic question to?

[15:22] * Juerd has to config an old cisco

[15:22] <Juerd> I *hate* that.

[15:26] <diakopter> Limbic_Region: I can work on the cgiirc...

[15:26] <diakopter> I mean, if Juerd doesn't mind

[15:27] <Juerd> 10:43 <@Juerd> feather is showing CGI source code instead of executing it

[15:27] <Juerd> 10:43 <@Juerd> I can't find the cause

[15:27] <Juerd> 10:43 <@Juerd> Anyone?

[15:27] <diakopter> irc.pugscode.org and planet.pugscode.org fixed

[15:27] <Juerd> diakopter: Be my guest :)

[15:27] <diakopter> gotcha :)

[15:27] <diakopter> probably b/c mod_cgi is not enabled in that apache instance

[15:28] <Juerd> Shouldn't it croak on ScriptAlias then?

[15:29] <diakopter> no, ScriptAlias is provided by mod_alias

[15:29] <Juerd> But it implies SetHandler cgi-script iirc

[15:29] <diakopter> yeah

[15:30] <diakopter> but apparently doesn't give a warning when the cgi-script handler is not available

[15:31] * Juerd should think less while debugging.

[15:31] <Juerd> s/think/assume/

[15:31] <Juerd> Mostly, I should assume less developer sanity  :)

[15:32] <agentzh> fglock: what tool did you use to generate Pugs/Grammar/Rule.pmc from Pugs/Grammar/Rule2.pm?

[15:36] <diakopter> LR: can you try it again?

[15:40] <diakopter> Limbic_Region I mean

[15:48] *** barney joined
[15:50] <Limbic_Region> just a sec

[15:50] <Limbic_Region> Specifically, if I know the edit distance (inserts, adds, substitutions) between string A and B, and between A and C, is there a way to infer the distance between B and C without actually calculating it?

[15:51] <moritz> Limbic_Region: you can just guess, but two patches that revert each other will provide wrong results

[15:53] <masak> Limbic_Region: seems there could be a triangle inequality involved somehow

[15:53] <Limbic_Region> moritz - the distance between B and C must be exact

[15:54] <Limbic_Region> masak - I am actually dealing with about 15K strings

[15:54] <Limbic_Region> but if I could lay them on a grid using a fixed string as a starting point

[15:54] <Limbic_Region> I could get the distance between any two strings quite easily

[15:55] <Limbic_Region> I just don't think it is possible to find the edit distance between two strings using a known distance between a 3rd point

[15:55] <Limbic_Region> I was thinking about using a cartesian coordinate system where number of inserts, deletes, and substitutions served as my axis

[15:56] <Limbic_Region> but I think it is a wash

[15:57] <masak> Limbic_Region: you get a (maybe useless) maximum distance out of the triangle inequality

[15:57] <Limbic_Region> yes, useless - must be exact

[15:57] <barney> Limbic_Region: If you have the two edit vectors, you can comput the sum of them

[15:58] <masak> maybe with some processing you could get the exact distance

[15:58] <barney> distance is not enough

[15:58] <fglock> agentzh: Rule.pmc is compiled with v6.pm; there are some hand-edits, documented in the pod

[15:58] <masak> but it doesn't sound trivial

[15:58] <fglock> agentzh: the edits are necessary to avoid dependecy problems

[15:59] <Limbic_Region> barney - what goes into an edit vector - beyond quantity of each insert, delete, and substitution + overall distance, I do not know anything more

[15:59] <agentzh> fglock: i'm writing a script to automate this process

[16:00] <Limbic_Region> *9666433333333333333f8+994k 4111\

[16:00] <Limbic_Region> '[;

[16:00] <Limbic_Region> ;

[16:00] <Limbic_Region> ''''

[16:00] <Limbic_Region> '

[16:00] <Limbic_Region> 2

[16:00] <Limbic_Region> ]]\

[16:00] <Limbic_Region> 555555555555555555555555555555555555555555555

[16:00] <masak> whoa! cat?

[16:00] <Limbic_Region> my daughter says hi

[16:00] <masak> :)

[16:00] <amnesiac> hah

[16:00] <barney> The complete recipe how to go from one string to the other

[16:00] <fglock> agentzh: thanks!

[16:01] <agentzh> fglock: my pleasure

[16:01] <Limbic_Region> barney - thanks but that will end up being more work

[16:02] <barney> as moritz said: you need to find out the changes that cancel each other

[16:02] <TimToady> ?eval 555555555555555555555555555555555555555555555

[16:02] *** evalbot_r16820 is now known as evalbot_r16836

[16:02] <evalbot_r16836> 555555555555555555555555555555555555555555555

[16:03] <TimToady> hmm, I'd better be careful, or dalekbot will do in L_R and evalbot  :)

[16:03] <moritz> TimToady: and you ;)

[16:03] <TimToady> I said "?eval" on the front

[16:03] <TimToady> so I'm different

[16:04] <fglock> masak: re development in perl6 - I've been programming in "miniperl6"

[16:04] <moritz> TimToady: we all know you're different ;)

[16:04] <barney> http://en.wikipedia.org/wiki/Levenshtein_distance

[16:05] <masak> fglock: is it non-perl6 development in perl6?

[16:05] <moritz> masak: it's "subset of perl 6 development" in a subset of perl 6 ;)

[16:05] <fglock> masak: it's p6 devel

[16:05] *** fglock left
[16:05] <masak> moritz: yes, I know :)

[16:06] <moritz> masak: ok ;)

[16:06] <masak> I'm interested in how many are doing development in other things than perl6 in perl6

[16:06] <masak> I meant "...of other things than perl6..."

[16:06] *** fglock joined
[16:07] <moritz> masak: I wrote a Sudoku solving module in p6 recently

[16:07] <masak> it seems it's such a fine language, and already sufficiently mature to produce nice programs

[16:07] <moritz> masak: that runs fine in pugs

[16:07] <masak> moritz: cool. is it publicly available?

[16:07] <moritz> masak: it's in ext/Sudoku/ in the pugs repo

[16:08] <masak> thx

[16:08] <moritz> masak: not entirely bug free, but basic solving worked last time I tried

[16:09] <masak> moritz: have you read the excellent article by peter norvig? http://norvig.com/sudoku.html

[16:10] <masak> it's about an implementation in python. anything in p6 which resembles that one would look really beautiful, I think

[16:12] <moritz> masak: I had a look at it once, but it didn't seem too impressive then

[16:12] <moritz> masak: maybe I should have another look ;)

[16:13] <masak> moritz: I had a look at it, and the python code is really clear and expressive. it's a joy just to read

[16:13] <moritz> masak: I seems like he is using sets or junctions, right?

[16:14] <masak> sets implemented as arrays, I seem to remember

[16:14] *** TimToady sets mode: -b avar!*@*

[16:15] <TimToady> hmm, not sure that's right...

[16:15] <amnesiac> heh, was avar banned?

[16:15] <TimToady> apparently dalekbot got him on another channel during the night

[16:15] <moritz> amnesiac: yes, by dalekbot 

[16:16] <amnesiac> oh

[16:16] <BinGOs> I think the banmask is *!*@u.nix.is

[16:16] <moritz> anyway, gotto go

[16:16] <moritz> bye

[16:16] <masak> bye, moritz

[16:17] *** TimToady sets mode: -b *!*@u.nix.is

[16:18] <TimToady> BinGOs: you are correct

[16:18] <TimToady> I need to learn to read one of these years...

[16:19] <BinGOs> but as dalekbot has stashed that hostname in it's lamers hash ....

[16:19] <BinGOs> I think buu needs to refine it slightly.

[16:19] <BinGOs> also avar shouldn't have been provoking it in #buubot 

[16:20] <TimToady> maybe dalekbot needs an unlamer hook

[16:20] <TimToady> what does being in the lamers hash do?

[16:20] <TimToady> make it less forgiving?

[16:20] <BinGOs> We'll see when avar tries to join again >:)

[16:21] <BinGOs> It remembers.

[16:21] <BinGOs> I unbanned him from magnet #perl and as soon as he joined again, he got a kickban

[16:22] *** Schwern joined
[16:22] <BinGOs> you might want to do a +J channel mode.

[16:22] <TimToady> remind me not to cross dalekbot...

[16:22] <TimToady> what does that do?

[16:22] <BinGOs> it sure does cut down on that joining spam

[16:22] <BinGOs> join throttling.

[16:23] <BinGOs> we've got +J 30,3 on #perl

[16:24] <BinGOs> when you had that recent attack, we only saw a small fraction of the bots.

[16:25] <TimToady> hmm, but maybe they wouldn't have been banned there if dalekbot hadn't noticed them here...

[16:25] *** diakopter sets mode: -o dalekbot

[16:26] <BinGOs> heh

[16:26] <TimToady> so maybe we need a way to divert the overflow to a spam-only channel and run dalekbot on that.  :)

[16:26] <BinGOs> http://freenode.net/using_the_network.shtml # explains all the channel modes available including +J

[16:26] <TimToady> thanks, I was wondering where those were documented.  /help only gets you so far...

[16:27] *** lichtkind joined
[16:28] <BinGOs> I just wish pugs didn't take so long to compile on this netbsd box or I'd set up a smoker.

[16:28] <TimToady> set it up to autosmoke overnight?

[16:29] <BinGOs> I'm pretty much CPAN smoking all day anyways on here, can't really afford the cpu cycles.

[16:30] *** justatheory joined
[16:30] <BinGOs> hmmm I might have space on the vmware server for a netbsd image though.

[16:32] *** masak joined
[16:36] *** offby1 joined
[16:40] <TimToady> heh, looks like we could set up an overflow channel and run dalekbot on it...

[16:55] <agentzh> fglock: yay! i succeeded! Rule.pmc now automatically updated with the latest v6.pm ;) and no new failing tests :D

[16:56] <TimToady> BinGOs: is +J smart about joins after netsplits?

[16:57] *** philv joined
[16:57] *** TimToady sets mode: +J 30,3

[16:57] *** hakobe is now known as hkb_furo

[16:57] <TimToady> well, we can try it...

[16:58] <BinGOs> it seems to work okay for us on #perl

[16:59] <BinGOs> 487 is the current channel population.

[16:59] <TimToady> I suppose most people who are netsplit aren't active at the moment anyway, so if there's some delay in rejoining, it's not a biggie

[16:59] <TimToady> (presuming it just delays, and doesn't knock 'em off)

[17:00] <TimToady> every so often, I wish I knew what I was talking about...

[17:01] <fglock> agentzh++

[17:01] <agentzh> :)

[17:02] <agentzh> fglock: well, i had to patch Rule2.pm a bit since the closure { die "..." } in p6 regexes produces invalid code with the latest v6.pm

[17:03] <agentzh> i wrote it as { die "..."; return undef } and then it worked

[17:03] <pugs_svnbot> r16837 | fglock++ | trunk:

[17:03] <pugs_svnbot> : [kp6] EmitPerl5Regex - character escapes: \n \D ...

[17:03] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16837

[17:03] *** franck__ joined
[17:03] *** marmic joined
[17:04] <agentzh> i know closures with "return" in them are treated specially ;)

[17:04] <fglock> agentzh: my plan for PCR is to replace the compiler/emitter with kp6 (after kp6 phase 3)

[17:04] <agentzh> fglock: fine :)

[17:05] <TimToady> BinGOs: thanks for the +J pointer, btw

[17:05] <fglock> and after phase 4, replace v6.pm with kp6

[17:05] <agentzh> fglock: cool

[17:06] <agentzh> fglock: i'd like to see what i can help in the meantime :)

[17:07] <lichtkind> moritz:  thanks

[17:07] <fglock> you could take a look at Visitor::EmitPerl5Regex

[17:08] <agentzh> fglock: okay :)

[17:08] <agentzh> fglock: will do later

[17:09] <BinGOs> TimToady: no probs.

[17:12] <pugs_svnbot> r16838 | agentz++ | trunk:

[17:12] <pugs_svnbot> : [PCR]

[17:12] <pugs_svnbot> : * pacthed Pugs/Grammar/Rule2.pm a bit to work around

[17:12] <pugs_svnbot> :   a v6.pm bug regarding the { die "..." } closures

[17:12] <pugs_svnbot> :   in p6 regexes.

[17:12] <pugs_svnbot> : * updated Rule.pmc with the latest v6.pm

[17:13] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16838

[17:15] <pugs_svnbot> r16839 | fglock++ | trunk:

[17:15] <pugs_svnbot> : [kp6] EmitPerl5Regex - quantifiers

[17:15] <pugs_svnbot> r16840 | agentz++ | trunk:

[17:15] <pugs_svnbot> : [PCR]

[17:15] <pugs_svnbot> : * added util/update-pmc to automate the process of

[17:16] <pugs_svnbot> :   updating Pugs/Grammar/Rule.pmc with Pugs/Grammar/Rule2.pm

[17:16] <pugs_svnbot> : * added util/gen-rule-pmc.pl to post-process the

[17:16] <pugs_svnbot> :   .pmc file generated by v6.pm from Pugs/Grammar/Rule2.pm

[17:16] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16840

[17:17] *** Psyche^ joined
[17:26] *** kanru joined
[17:28] <pugs_svnbot> r16841 | agentz++ | trunk:

[17:28] <pugs_svnbot> : [PCR]

[17:28] <pugs_svnbot> : * added notes to the beginning of Pugs/Grammar/Rule2.pm

[17:28] <pugs_svnbot> :   regarding script util/gen-rule-pmc.pl

[17:28] <pugs_svnbot> : * removed trailing spaces in Pugs/Grammar/Rule2.pm

[17:28] <pugs_svnbot> : * updated Pugs/Grammar/Rule.pmc

[17:28] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16841

[17:34] *** Psyche^ is now known as Patterner

[17:35] <pugs_svnbot> r16842 | agentz++ | trunk:

[17:35] <pugs_svnbot> : PCR - updated Pugs/Grammar/Rule.pmc with the latest PCR emitters (yes, it's full of cycles...)

[17:35] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16842

[17:42] *** Schwern joined
[17:43] *** dduncan joined
[17:57] <agentzh> fglock: now that i'm able to edit Rule2.pm, it's straightforward to add pos info for each node to the regex AST.

[17:58] *** fglock joined
[17:58] *** diakopter sets mode: +o dalekbot

[17:58] *** diakopter sets mode: -o diakopter

[17:58] *** diakopter is now known as diakopter_afk

[17:59] <agentzh> fglock: such pos info can later be saved into the emitted code and reused by the regex runtime for debugging purpose

[17:59] <fglock> agentzh: one sec - backlogging

[17:59] <agentzh> fglock: for example, for automatically drawing the matching process presented in kolibrie's slides

[18:01] <dduncan> to whom it concerns, something in perl5/Pugs-Compiler-Rule seems to break the Pugs build ... or at least while running the Makefile.PL there, 'make' halts with can't locate inc/Module/Install.pm

[18:01] <dduncan> I encountered this with a pull+make, and a subsequent main makefile.pl and make

[18:02] <agentzh> http://feather.perl6.nl/~kolibrie/extraction.xul

[18:02] <agentzh> dduncan: thanks for reporting this

[18:03] <dduncan> okay

[18:03] <agentzh> dduncan: i think it may be my fault

[18:03] <dduncan> mind you, does it break for *you*

[18:04] <agentzh> dduncan: it does not break for me

[18:04] <agentzh> dduncan: even after a realclean

[18:05] <agentzh> dduncan: do you have Module::Install installed on your machine?

[18:05] <dduncan> can anyone else confirm one way or the other?

[18:05] <dduncan> I can't say

[18:05] <agentzh> could you check?

[18:05] <dduncan> I haven't installed any support modules for many months

[18:05] <dduncan> will do ...

[18:06] <dduncan> suffice it to say, if this is a new external dependency for Pugs, that should be documented

[18:06] <dduncan> looking ...

[18:06] <agentzh> maybe i should bundle PCR's inc/ into pugs's inc/

[18:07] <agentzh> dduncan: *nod*

[18:07] <dduncan> that's strange ... there is an inc/Module/Install.pm in Pugs itself

[18:07] <dduncan> a custom one

[18:07] <agentzh> dduncan: yes, there is.

[18:08] <dduncan> if that works for you, you may need to add ../../ to the path of PCR or something

[18:08] <dduncan> the PCR makefile

[18:09] <dduncan> unless it requires the normal version

[18:09] <dduncan> or that is the normal version

[18:09] <agentzh> PCR requires the normal version

[18:09] <agentzh> as well as Test::Base

[18:09] <agentzh> for developers

[18:09] <agentzh> (not end-users)

[18:11] <dduncan> in general, I wonder if there exists a CPAN bundle for installing everything that stuff in the Pugs repo requires that isn't bundled with Perl ... eg, all the YAML and Install whatever

[18:11] <dduncan> including requirements to do smokes

[18:12] <dduncan> just checked ... I do not have Module::Install with my Perl that I run Pugs against ... will go get it ...

[18:14] *** avar joined
[18:14] *** dalekbot sets mode: +b *!*@u.nix.is

[18:14] <fglock> agentzh: re pos - sure, please do

[18:14] *** avar was kicked by dalekbot (Previous lamer ban))
[18:15] * BinGOs sighs.

[18:15] <agentzh> fglock: okay!

[18:15] <agentzh> dduncan: please don't

[18:15] <dduncan> okay

[18:16] <agentzh> dduncan: i'm fixing it by bundling the necessary inc/ files

[18:16] <dduncan> will not get MI

[18:16] <agentzh> dduncan: i'll ask you to test it after fixing it ;)

[18:16] <dduncan> will do

[18:16] <agentzh> dduncan: thanks :)

[18:17] <fglock> agentzh: I need to find a simple way to add the pos to kp6 nodes, too

[18:18] <agentzh> fglock: i'll just use hash keys like _from and _to

[18:18] <agentzh> fglock: (in PCR)

[18:20] <agentzh> is it safe to update pugs's inc/ with the latest version of Module::Install?

[18:20] <fglock> dunno

[18:20] <agentzh> is pugs's inc/ indeed customized for pugs?

[18:20] <agentzh> fglock: okay

[18:20] <agentzh> s/is/does/

[18:21] *** TimToady sets mode: -o dalekbot

[18:21] *** TimToady sets mode: -b *!*@u.nix.is

[18:21] *** unobe_away is now known as unobe

[18:22] <agentzh> pugs's M::I is way too old...

[18:22] *** avar_ joined
[18:22] * avar_ stabs DarkWolf84 

[18:22] <avar_> uh

[18:22] * avar_ stabs dalekbot 

[18:22] *** avar_ is now known as avar-NOTOBEYING

[18:24] <TimToady> avar-NOTOBEYING: I guess dalekbot thought you were being boring. :)

[18:24] *** avar-NOTOBEYING is now known as CYBERMEN

[18:24] <CYBERMEN> I guess this is more appropriate

[18:24] <CYBERMEN> DALEKBOT: YOU HAVE NO SENSE OF ASTHETICS

[18:24] <TimToady> you can say that again

[18:25] <CYBERMEN> TimToady: On the contrary, it thinks I'm being a bit too interesting

[18:27] <TimToady> hmm, I wonder if the lamers hash is by address or by nick...

[18:27] <CYBERMEN> well, it's banning my hostmask so I would guess the former

[18:28] <TimToady> we could turn it back on and see if you disappear :)

[18:29] <pugs_svnbot> r16843 | agentz++ | trunk:

[18:29] <pugs_svnbot> : inc - bundled Test::Base into pugs

[18:29] <pugs_svnbot> r16844 | agentz++ | trunk:

[18:29] <pugs_svnbot> : removed inc/.author

[18:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16844

[18:30] <TimToady> 'course, /whois still knows you're really avar@ if dalekbot thinks about it

[18:31] <DarkWolf84> :)

[18:31] <pugs_svnbot> r16845 | agentz++ | trunk:

[18:31] <pugs_svnbot> : PCR - reuses Pugs's inc/ instead of its own

[18:31] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16845

[18:31] <agentzh> dduncan: please test r16845 :)

[18:31] <DarkWolf84> I was stabed without knowing that

[18:31] <dduncan> will do ...

[18:31] <DarkWolf84> :)

[18:33] <dduncan> but why does that commit's comment say: PCR - reuses Pugs's inc/ instead of its own ... when it adds those files?

[18:34] <agentzh> dduncan: i added the files in the previous commit

[18:34] *** Schwern joined
[18:34] <agentzh> not the same commit

[18:34] <dduncan> what I mean is, they weren't removed

[18:34] <agentzh> so it's natural to think they *are* already pugs's

[18:34] <dduncan> so 'make' completed this time

[18:35] <agentzh> dduncan: yay! thanks!

[18:35] <dduncan> pardon me, I misread where the added files went

[18:35] * agentzh needs to get some sleep

[18:35] <agentzh> g'night all &

[18:35] <lichtkind> night

[18:35] <dduncan> I saw the addition of Test and was thinking it was MI

[18:35] <TimToady> sleep well

[18:36] <dduncan> yes

[18:36] <agentzh> :)

[18:36] *** agentzh left
[18:37] <TimToady> I'll bet we could get pugs_svnbot banned with sufficient creativity in log messages, like too many bare [PCR] lines

[18:42] <fglock> TimToady: :)

[18:53] *** diakopter_afk is now known as diakopter

[18:53] *** ChanServ sets mode: +o diakopter

[18:53] *** diakopter sets mode: -o dalekbot

[18:54] *** diakopter sets mode: -b *!*@dsl5402B9F8.pool.t-online.hu

[18:54] <diakopter> um, oops

[18:55] * diakopter should try *fully* backlogging next time

[18:57] *** hkb_furo is now known as hkb_zz

[19:05] *** Southen joined
[19:11] <TimToady> buu: it might be nice if dalekbot notices explicit unbans and removes the subject from the lamers hash

[19:17] <TimToady> so, how come there's join throttling, but not quit throttling?  :)

[19:18] <TimToady> hmm, I guess the Berlin Wall demonstrated that quit throttling doesn't work over the long haul...

[19:20] *** ronny joined
[19:20] *** ProperNoun joined
[19:20] <ronny> yo

[19:21] <TimToady> good evening

[19:27] *** Arathorn joined
[19:27] <Arathorn> hi folks - should multi work in pugs head?

[19:27] <TimToady> up to a point

[19:28] <TimToady> it can do rough discrimination but not fine discrimination, basically

[19:28] <Arathorn> mm, right

[19:28] <TimToady> and I don't think "where" parses yet.

[19:28] *** BooK_ joined
[19:29] <Arathorn> i was trying to show off a multi factorial(0) { 1 } multi factorial($n) { factorial($n) * ($n - 1) }

[19:29] <TimToady> the use of values as types may also not be there yet

[19:29] <Arathorn> unless that's illconceived anyway

[19:30] <TimToady> yeah, doesn't parse yet

[19:30] <TimToady> should parse okay when we switch over to STD though

[19:30] <Arathorn> cool :)

[19:30] <Arathorn> and fair enough.

[19:30] <TimToady> then we just have to worry about the little matter of semanics...

[19:32] <Arathorn> shame, as that's the most legible expression of a recursive factorial function in a language i've found (at least from someone coming from curlybracket land rather than planet FP)

[19:32] *** kanru2 joined
[19:34] <TimToady> for practical use you might want a "proto factorial (UInt) {...}" in there as well.

[19:34] <Arathorn> mm, true

[19:34] <Aankhen``> moritz: What encoding issues?

[19:34] <Arathorn> although at least that gives you the weird 0! == 1 edge case for free

[19:34] <TimToady> course, [*] 1..^$n is even shorter

[19:35] <Arathorn> presumably the range works backwards for $n = 0?

[19:36] <TimToady> s/\^//

[19:36] *** diakopter is now known as diakopter_afk

[19:36] <TimToady> ?eval [*] 1..0

[19:36] *** evalbot_r16836 is now known as evalbot_r16845

[19:36] <evalbot_r16845> 1

[19:36] <shachaf> Is "[]" a fold in Perl 6?

[19:36] <Arathorn> snazzy :)

[19:36] <TimToady> ?eval [+] 1..0

[19:36] <evalbot_r16845> 0

[19:36] <shachaf> ?eval [*] ()

[19:37] <evalbot_r16845> 1

[19:37] <shachaf> ?eval [+] ()

[19:37] <evalbot_r16845> 0

[19:37] * Arathorn blinks

[19:37] <TimToady> ?eval [or]

[19:37] <evalbot_r16845> undef

[19:37] <TimToady> ?eval [or] ()

[19:37] <evalbot_r16845> undef

[19:37] <shachaf> ?eval [||] ()

[19:37] <evalbot_r16845> Bool::False

[19:37] <TimToady> shoud be false

[19:38] <shachaf> Where does it get the nil value from?

[19:38] <TimToady> ?eval [min]

[19:38] <evalbot_r16845> [undef,]

[19:39] <shachaf> ?eval [min] (2,3,1)

[19:39] <evalbot_r16845> Error: ␤Unexpected "("␤expecting operator

[19:39] <shachaf> ?eval min (2,3,1)

[19:39] <evalbot_r16845> 1

[19:39] <Arathorn> what's STD (other than the, uh, obvious)?

[19:39] <TimToady> see S03:3117

[19:39] * Arathorn has been missing the p6 summaries :(

[19:39] <TimToady> src/perl6/Perl-6.0.0-STD.pm, the standard grammar

[19:39] <Arathorn> ooh, right

[19:40] <TimToady> ?eval [+&]

[19:40] <evalbot_r16845> -1

[19:40] <TimToady> ?eval [~]

[19:40] <evalbot_r16845> ""

[19:41] <TimToady> ?eval [<]

[19:41] <evalbot_r16845> Bool::True

[19:41] <TimToady> the null list is monotically increasing :)

[19:41] <Arathorn> is STD coming out of the KindaPerl6 side of things, or the pugs side of things, or the TimToady marble-tablet side of things (or one of the other p6 experimentationss)?

[19:41] <TimToady> the last

[19:41] <Arathorn> woo

[19:42] <shachaf> Is this a left or right fold?

[19:42] <shachaf> ?eval [-] (1,2,3)

[19:42] <TimToady> -4

[19:42] <evalbot_r16845> -4

[19:42] <TimToady> it's whatever makes sense for the operator

[19:42] <TimToady> assuming you interspersed the operator as infix

[19:42] <shachaf> Oh.

[19:42] <shachaf> I guess that makes sense.

[19:43] <shachaf> Where does it get the default value from?

[19:43] <TimToady> from a practical and teaching point of view, yesw

[19:43] <TimToady> from S03:3117 :)

[19:43] * Arathorn svn ups and winces at the 7000-odd revisions which have elapsed since he was last visual with what's going on

[19:44] <Arathorn> (wincing in a good way :)

[19:44] <TimToady> ?eval [!=] 1,2,3

[19:44] <evalbot_r16845> Bool::True

[19:46] <TimToady> ?eval infix:<*>()

[19:46] <evalbot_r16845> Error: No compatible multi variant found: &infix:*

[19:46] <TimToady> I guess pugs just hardwires it still

[19:46] *** weinig joined
[19:47] <TimToady> that eval should have returned 1

[19:47] <Aankhen``> moritz: All my patch does is to get rid of the conflict between `meta` elements and the Content-Type header, serving application/xhtml+xml to browsers that can handle it and text/html to others.  I didn't touch the encoding; and AFAICT, you encode everything as UTF-8 anyway. :-)

[19:56] *** bonesss joined
[20:01] *** weinig joined
[20:04] *** weinig joined
[20:07] <Arathorn> TimToady: has STD been developed against any of the existing partial implementations?

[20:07] *** fglock_ joined
[20:08] * Arathorn wonders how can-of-wormsish the 'things todo' pod section is, and whether anything yet executes the AST it yields

[20:08] *** offby1 left
[20:13] *** nwc10 joined
[20:13] *** nwc10 left
[20:21] *** iblechbot joined
[20:28] <Yaakov> TimToady: kismet, who you won't know, says "hi".

[20:28] <TimToady> hi, kismet!

[20:29] <TimToady> pleased to meet you

[20:29] *** isaacd_ joined
[20:29] <BinGOs> heh

[20:29] <Yaakov> Heh, good afternoon, Larry.

[20:30] *** sheriff joined
[20:30] <sheriff> Wow, big channel

[20:30] <Yaakov> Hello, sheriff.

[20:30] <daxim_> hey.  are you with the magnet peeps?

[20:30] <BinGOs> size isn't important.

[20:30] <sheriff> daxim_: I AM the magnet peep

[20:30] <Yaakov> Learn all about perl6 here, also, get a shave and have your shoes resoled.

[20:31] * Arathorn needs all 3 :/

[20:31] <BinGOs> I need my shoes shaved.

[20:32] <TimToady> yak hide shoes?

[20:32] <BinGOs> >:)

[20:32] <BinGOs> hang on, they are my feet.

[20:32] <TimToady> hobbit blood, eh?

[20:33] <Yaakov> TimToady: Mine are plain cow.

[20:33] <BinGOs> I am short, but no one has given me a magic ring recently.

[20:33] <sheriff> I ahve decided to stop being a programmer

[20:33] * Arathorn found a ukelele made out of an armadillo the other day (talking of unexpected things which shouldn't be made of dead animal :/)

[20:33] <sheriff> There seems to be a strong correlation between active users in this channel and irc.perl.org opers...

[20:34] <BinGOs> I only joined here a couple of days ago. Make no such correlations

[20:34] <Yaakov> sheriff: It is July 4th.

[20:34] <sheriff> Yaakov: That means it's 50 Cent's party

[20:34] <TimToady> BinGOs: sorry, misread you name as BilBOs

[20:34] * BinGOs blinks.

[20:34] <sheriff> and I'm missing it because I'm in a small Himalyan country

[20:34] <Yaakov> sheriff: Also, this channel is *usually* busy with various development activities.

[20:35] <sheriff> Really? I thought this was the meth support group...

[20:35] <Yaakov> BinGOs is fairly Bagginsesque.

[20:35] <Yaakov> sheriff: No, that's #qerl6.

[20:35] <sheriff> Time is 2:20 AM

[20:35] <sheriff> urgh

[20:35] <TimToady> yow

[20:36] <BinGOs> oh Nepal time.

[20:36] *** jisom joined
[20:36] <sheriff> BinGOs: right

[20:36] <sheriff> 45 minute TZ offsets FTW

[20:36] <BinGOs> See! I remember some stuff through the gin haze

[20:36] <sheriff> I might go and steal some whiskey off my Dad

[20:37] <sheriff> Mind you, I've already had my long sleep

[20:37] <TimToady> so, no yak shaving for you; you'll have to settle for yeti shaving

[20:37] <sheriff> So it'd be like drinking at 9am

[20:37] <sheriff> Probably not a good move

[20:37] * sheriff is marginally excited about seeing the sun rise

[20:37] <sheriff> One of my most enduring childhood memories is seeing the sunrise in the tropics

[20:38] <sheriff> although that normally meant I'd been up all night playing Civ II

[20:38] <BinGOs> sheriff: it has been pissing it down on and off all day here in Blighty

[20:38] <sheriff> BinGOs: that's nice. It's monsson season here

[20:38] <BinGOs> HEH

[20:38] <sheriff> I laugh at your pitiful English weather

[20:38] <sheriff> To which I must soon return :(

[20:39] <sheriff> gah.

[20:39] <sheriff> I really really really would like X11

[20:39] <sheriff> Turns out with 10.4 and no install disks

[20:39] <sheriff> that's a tall order

[20:39] <BinGOs> We had vague monsoon-esque rain when I was waving my wife and mother-in-law off earlier.

[20:39] <sheriff> You have a wife?

[20:39] <BinGOs> they were going to an outdoor Shakespear play.

[20:39] <BinGOs> er yes.

[20:39] <sheriff> BinGOs: Forget if it was you I was telling, but g/f found out why she didn't get her 1st 

[20:40] <sheriff> And it turns out to be arcane Oxford exam rules

[20:40] <BinGOs> that is typical.

[20:40] <sheriff> quite

[20:40] <sheriff> I've told her I'm tempted to upgrade to a better g/f

[20:40] <sheriff> that made her cry tho

[20:40] <sheriff> So I won't be doing that again

[20:40] <BinGOs> sheriff: http://gumbynet.org.uk/images/wedding/

[20:42] <sheriff> Oh she's pretty

[20:42] <BinGOs> or to give her her full title, "Long suffering wife and Perl widow"

[20:42] <sheriff> You look like a computer programmer tho

[20:42] <BinGOs> funny, I am a sysadm.

[20:43] <sheriff> Oh, you're doing well then :)

[20:43] <amnesiac> http://gumbynet.org.uk/images/wedding/26.html is that TEH BinGOs ?

[20:44] <BinGOs> Yes, the one on the left >:)

[20:44] <amnesiac> BinGOs++ # married

[20:44] <sheriff> sheriff-- # almost married

[20:45] <amnesiac> why --? :P

[20:45] <amnesiac> marriage doesn't have to be bad dude :P

[20:45] <BinGOs> I don't quite understand what my wife doing for a living, but it seems to involve 'dicking about with spreadsheets'

[20:46] <BinGOs> and she is paid more than I.

[20:46] <BinGOs> this is what working in IT in local government gets one.

[20:50] <amnesiac> hahahah

[20:51] <BinGOs> are there any pugs smoke testing frameworks available ?

[20:52] *** Entonian joined
[20:52] <TimToady> what is this "framework" of which we speak?

[20:52] <BinGOs> something that automates the whole pugs smoke process

[20:52] <TimToady> you mean, like "make smoke"?

[20:52] <sheriff> TimToady: Affixes photos and prints to wall

[20:52] <TimToady> :)

[20:52] <BinGOs> svn update, Makefile.PL blah blah blah

[20:53] <sheriff> So I've bought a bunch of scary Nepal stuff to put on my wall at home

[20:53] <sheriff> I'm wondering if this is going to stop me getting laid

[20:53] <TimToady> Your Honor, I was framed!

[20:53] <sheriff> Woo, there goes the generator kicking int to power

[20:53] <sheriff> gotta love Nepal

[20:53] <BinGOs> erm right. 

[20:53] <BinGOs> So roll my own it is.

[20:53] <sheriff> It's like a nlittle bit of Africa in Asia!

[20:53] <TimToady> well, I just type "sup", and then I type ".testme"

[20:54] <TimToady> and my smoke (usually) magicially appears on the smoke server

[20:55] <TimToady> sheriff: what's your altitude?

[20:55] <BinGOs> I'm just thinking ahead. I haven't got the netbsd image sorted yet. my vmware server is still smoking CPAN on linux at the moment.

[20:55] <BinGOs> probably until tomorrow morning ( UK time ) at this rate.

[20:56] <BinGOs> every fricking module seems to depend on DBI these days.

[20:56] <BinGOs> and I rum vaguely virgin perl installs, so it has to compile and test DBI each time.

[20:57] <BinGOs> s/rum/run/

[20:57] <BinGOs> but rum sounds nice right now.

[20:57] <sheriff> TimToady: 4500ft

[20:58] <TimToady> awww

[20:59] <sheriff> I am so very excited about quitting my day job

[20:59] <sheriff> To think: soon, any programming I do will be purely recreational

[21:00] <BinGOs> which most of mine is.

[21:00] <sheriff> I will no longer be a programmer by profession

[21:00] <sheriff> This is starting to excite me a lot

[21:02] * Arathorn continues to wade through STD - has it actually been hooked up to pugs or one of its friends at all yet?

[21:07] <TimToady> if you run it through "cheat", it parses under pugs.  That's about as far as we've got with it so far.

[21:11] <Arathorn> fairynuff

[21:18] *** araujo joined
[21:23] *** diakopter_afk is now known as diakopter

[21:30] *** CardinalNumber joined
[21:35] <meppl> good night

[21:39] *** pelagic joined
[21:42] *** avar joined
[21:43] <CYBERMEN> CYBERMEN DEPART

[21:43] *** CYBERMEN left
[21:48] <Arathorn> as you do

[21:50] *** weinig joined
[21:51] *** gfdgfg joined
[21:51] *** Soul- joined
[21:51] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.

[21:51] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.

[21:51] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT..

[21:51] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT..

[21:51] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT...

[21:51] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT...

[21:51] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT....

[21:51] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT....

[21:51] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.....

[21:51] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.....

[21:51] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT......

[21:51] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT......

[21:51] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.......

[21:51] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.......

[21:51] *** bobs200-anime joined
[21:51] <bobs200-anime> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.

[21:51] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT........

[21:51] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT........

[21:51] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.........

[21:51] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.........

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT..........

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT..........

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT...........

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT...........

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT............

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT............

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.............

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.............

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT..............

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT..............

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT...............

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT...............

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT................

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT................

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.................

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.................

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT..................

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT..................

[21:52] *** TimToady sets mode: +o dalekbot

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT...................

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT...................

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT....................

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT....................

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.....................

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.....................

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT......................

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT......................

[21:52] <gfdgfg> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.......................

[21:52] <Soul-> CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THE ATTACKS WILL NOT CEASE UNTIL THIS PORT HAS BEEN GIVEN FULL PRIORITY AND SUPPORT.......................

[21:52] *** gfdgfg left
[21:52] *** Soul- left
[21:52] *** justatheory joined
[21:53] *** unobe joined
[21:53] <amnesiac> ugh

[21:53] <TimToady> I've op'd dalekbot temporarily

[21:53] *** teratoma joined
[21:53] <yum_> what is with these dudes

[21:53] <yum_> they are ruining my irc experience

[21:53] <Aankhen``> I'm sure they're very sad about that. ;-)

[21:54] *** TimToady sets mode: -o dalekbot

[21:55] *** weev joined
[21:55] *** vix joined
[21:59] <vix> WE ARE GREATLY SADDENED THAT WE HAVE RUINED YOUR IRC EXPERIENCE. UNFORTUNATELY, WE MUST CONTINUE TO DO SO UNTIL OUR DEMANDS ARE MET. THEY ARE AS FOLLOWS: CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THANKS FOR YOUR TIME

[21:59] <vix> WE ARE GREATLY SADDENED THAT WE HAVE RUINED YOUR IRC EXPERIENCE. UNFORTUNATELY, WE MUST CONTINUE TO DO SO UNTIL OUR DEMANDS ARE MET. THEY ARE AS FOLLOWS: CAPTAIN GOUDATR0N OF THE GREATER ALLIANCE OF PHP PROGRAMMERS DEMANDS PHP BINDINGS FOR PARROT. THANKS FOR YOUR TIME

[21:59] *** diakopter sets mode: +b *!*@cpe-72-130-0-248.socal.res.rr.com

[21:59] *** vix was kicked by diakopter (on popular demand, you are now leaving the channel))
[22:00] <BinGOs> wacky

[22:01] <Aankhen``> "PHP BINDINGS FOR PARROT"?

[22:01] <BinGOs> it's horseshit. Don't read anything into it.

[22:01] <Aankhen``> I guess so.

[22:02] * Aankhen`` goes to clean up the logs.

[22:02] <allbery_b> this is why you shouldn't give your kids too much sugar

[22:02] <Aankhen``> Heh.

[22:02] <BinGOs> strangely enough they didn't attack either #perl here or magnet

[22:03] *** qmole joined
[22:04] <diakopter> curse my metal body!  I wasn't fast enough.

[22:04] <BinGOs> you need the power of POE in your irssi.

[22:05] <BinGOs> ( assuming irssi of course ).

[22:05] <ronny> hmm

[22:07] *** diakopter sets mode: +R
 
[22:07] *** diakopter sets mode: +r
 
[22:09] *** diakopter sets mode: +b *!*@c-67-174-249-33.hsd1.ca.comcast.net

[22:14] *** diakopter sets mode: +t
 
[22:15] *** diakopter sets mode: -r
 
[22:20] *** diakopter sets mode: -R
 
[22:21] *** BooK joined
[22:45] *** diakopter is now known as diakopter_afk

[22:50] *** ludan joined
[23:45] *** Aankhen`` joined
[23:53] *** r0bby joined
[23:53] *** bonesss joined
[23:54] *** devogon_ joined
[23:55] *** ecki_ joined
[23:59] *** lambdabot joined
