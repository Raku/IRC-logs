[00:06] *** theorb joined
[00:09] *** justatheory joined
[00:11] *** justatheory left
[00:12] *** jhorwitz left
[00:17] *** theorbtwo left
[00:48] *** c9s_ left
[00:55] *** nipotaway is now known as nipotan

[00:58] *** Limbic_Region left
[01:03] *** kanru left
[01:38] *** daxim joined
[01:40] *** meppl left
[01:41] *** sri_ left
[01:47] *** daxim_ left
[01:57] *** sri_ joined
[02:00] <pugs_svnbot> r18174 | azawawi++ | [k6-parrot] Lit::Code implemented, new String "Hello world", shows up ;-)

[02:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18174

[02:00] <lambdabot> Title: Changeset 18174 - Pugs - Trac

[02:01] *** zakame joined
[02:07] *** dduncan left
[02:11] *** dduncan joined
[02:14] *** Schwern left
[02:37] *** justatheory joined
[02:39] *** zachy joined
[02:40] *** Blwood left
[02:40] *** zakame left
[02:40] *** zachy is now known as zakame

[02:41] *** Blwood joined
[02:42] *** polettix left
[02:45] *** weinig left
[02:49] *** tewk joined
[02:49] <tewk> Is there a pseudo perl6 rules implementation in perl5?

[02:50] *** lascasas joined
[02:50] <tewk> How old is http://search.cpan.org/~dconway/Perl6-Rules-0.03/Rules.pm?

[02:50] <lambdabot> Title: Perl6::Rules - Implements (most of) the Perl 6 regex syntax - search.cpan.org

[02:54] *** amnesiac joined
[03:03] *** drupek12 left
[03:12] *** weinig joined
[03:14] *** BinGOs_ joined
[03:14] *** weinig left
[03:15] *** weinig joined
[03:21] *** xinming joined
[03:22] *** drupek12 joined
[03:26] <dduncan> tewk, I believe there is something newer and more complete ... looking ...

[03:27] <dduncan> tewk, look at http://search.cpan.org/dist/Pugs-Compiler-Rule/

[03:27] <lambdabot> Title: Agent Zhang (&#31456;&#20134;&#26149;) / Pugs-Compiler-Rule - search.cpan.org

[03:28] <dduncan> that's what you want, afaik ... though it is possible that it is about to be superceeded by something else ... or not, but its quite regularly maintained none the less

[03:35] *** BinGOs left
[03:36] *** lyokato joined
[03:41] *** bsb left
[03:43] *** bsb_ joined
[03:43] *** bsb_ is now known as bsb

[04:19] *** xinming left
[04:19] *** xinming joined
[04:43] *** BinGOs_ left
[05:08] *** israr joined
[05:24] *** Greenn joined
[05:24] <ahmadz> @tell fglock "should EmitParrot.pm emit PIR directly or should it use a Parrot Runtime like lisp/Perl5..?"

[05:24] <lambdabot> Consider it noted.

[05:26] *** miyagawa left
[05:27] *** justatheory left
[05:29] *** ahmadz left
[05:42] *** amnesiac left
[05:49] *** devogon joined
[05:51] *** BinGOs joined
[05:54] <dduncan> @tell tewk look at http://search.cpan.org/dist/Pugs-Compiler-Rule/ for Perl 6 rules in Perl 5

[05:54] <lambdabot> Consider it noted.

[06:02] *** c9s joined
[06:08] *** Greenn left
[06:19] *** vsoni joined
[06:19] *** vsoni left
[06:30] *** weinig is now known as weinig|sleep

[06:30] *** weinig|sleep left
[06:42] *** araujo left
[06:59] *** elmex joined
[07:02] *** hkb_lab is now known as hkb_aw

[07:07] *** dduncan left
[07:24] *** jisom joined
[07:34] *** Patterner left
[07:35] *** Psyche^ joined
[07:35] *** Psyche^ is now known as Patterner

[07:42] *** Aankhen`` joined
[07:47] *** Daveman left
[07:51] *** mj41_ left
[07:52] *** Daveman joined
[07:57] *** Daveman left
[07:58] *** cognominal_ left
[07:58] *** franck___ left
[08:03] *** franck___ joined
[08:17] *** baest_ joined
[08:28] *** Ashizawa joined
[08:30] *** Aankh|Clone joined
[08:33] *** baest left
[08:34] *** Ashizawa left
[08:34] *** rhizo joined
[08:41] *** drupek12 left
[08:49] *** Aankhen`` left
[08:52] *** ruoso joined
[08:54] *** c9s left
[09:06] *** masak joined
[09:30] *** riffraff joined
[09:31] *** fax joined
[09:31] *** _chris_holden_ joined
[09:32] *** fax left
[09:33] *** fax joined
[09:33] <fax> ?eval [~] <m oo se>

[09:35] *** idiotmax left
[09:39] *** rindolf joined
[09:43] <masak> #pugs [~] <m oo se>

[09:44] <masak> hm, seems to be no-bots day today...

[09:44] <fax> I tried in pugs :D

[09:44] <fax> Have learned <m oo se>

[09:45] *** chris2 joined
[09:49] <Aankh|Clone> ?kp6 "hello"

[09:49] <lambdabot> "hello"

[09:49] * Aankh|Clone waves at fax.

[09:49] <fax> ?kp6 reverse "!ih"

[09:49] <lambdabot> reverse "!ih"

[09:49] <buubot> lambdabot: "hi!"

[09:50] <Aankh|Clone> I'm not sure much works on KP6 yet though.

[09:51] *** cerridwen joined
[09:53] *** cognominal_ joined
[10:12] *** drupek12 joined
[10:22] *** rindolf left
[10:32] *** chris2 left
[10:50] *** Daveman joined
[10:59] *** funktio joined
[11:03] *** meppl joined
[11:06] *** araujo joined
[11:15] *** zakame left
[11:17] *** Schwern joined
[11:21] *** fax left
[11:23] *** nipotan is now known as nipotaway

[11:29] *** iblechbot joined
[11:41] *** pmurias joined
[11:43] *** drupek12 left
[11:50] *** hkb_aw is now known as hkb_lab

[12:14] *** funktio left
[12:30] *** lascasas left
[12:34] *** rfordinal_ is now known as rfordinal

[12:39] *** chris2 joined
[12:41] *** lyokato left
[12:47] *** araujo left
[12:48] *** drupek12 joined
[12:49] *** jhorwitz joined
[12:55] <pugs_svnbot> r18175 | pmurias++ | [kp6] initial rules2c

[12:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18175

[12:55] <lambdabot> Title: Changeset 18175 - Pugs - Trac

[13:05] *** Blwood left
[13:06] *** fglock joined
[13:09] *** jisom left
[13:10] *** bloonix left
[13:23] *** cmarcelo joined
[13:30] *** riffraff left
[13:55] <pugs_svnbot> r18176 | avar++ |  r65542@t:  avar | 2007-09-26 13:53:13 +0000

[13:55] <pugs_svnbot> r18176 | avar++ |  More operatiors: < > <= >= + - * / length

[13:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18176

[13:55] <lambdabot> Title: Changeset 18176 - Pugs - Trac

[14:01] <avar> Aankh|Clone: hi

[14:02] *** idiotmax joined
[14:11] *** TimToady left
[14:12] <pmurias> avar: hi

[14:15] *** pmurias left
[14:16] <avar> bye...

[14:26] *** diakopter left
[14:27] *** pmurias joined
[14:27] *** diakopter joined
[14:27] *** Blwood joined
[14:28] *** vbattsAtWork joined
[14:36] <pmurias> avar: had to turn the computer off for testing if our power sockets are properly grounded

[14:37] <avar> pmurias: hi

[14:40] <pmurias> is there a portable equivalent of gcc's ({})

[14:40] <pmurias> ?

[14:40] *** fglock_ joined
[14:40] *** fglock left
[14:41] *** weinig joined
[14:42] *** weinig left
[14:42] <pmurias> it's the c equivalent of do {}

[14:42] *** weinig joined
[14:42] <avar> pmurias: no

[14:43] <pmurias> avar: thanks

[14:43] <avar> if you're thinking of macros you'll have to write a function

[14:44] <pmurias> avar: i use it for declaring temporary variables for storing the position in alteration

[14:45] <pmurias> Rule::Or in lib/KindaPerl6/Visitor/TokenC.pm

[14:47] <pmurias> declaring a lot of variable at the function start should also work but it's troublesome

[14:54] <[particle]> declare an array

[14:56] <pmurias> a stack should work, but would introduce a performace penalty

[14:57] <pmurias> a performace penalty is to big a word

[14:57] <pmurias> * too big a phrase

[14:59] <[particle]> you can optimize later... just get it working and maintainable

[15:00] *** bonesss joined
[15:00] <avar> or you could depend on gcc:)

[15:01] *** hkb_lab is now known as hkb_aw

[15:05] <pmurias> does anyone here not use gcc? ;)

[15:05] <avar> Only traitors

[15:06] <[particle]> me, but i haven't been doing any kp6 dev lately... tried, but make doesn't work on win32 either and i haven't tried to fix it

[15:06] *** mncharity joined
[15:09] <fglock_> [particle]: kp6 works without make

[15:10] <avar> fglock_: No, you need GNU make

[15:11] <avar> ..if you want to develop it anyway

[15:11] *** drrho joined
[15:11] <fglock_> dependencies--

[15:13] *** israr left
[15:21] <Aankh|Clone> avar: You rang?

[15:23] <fglock_> pmurias: how about s/TokenC/EmitTokenC/

[15:25] *** Aankh|Clone left
[15:25] *** Aankhen`` joined
[15:29] <avar> Aankhen``: fleh

[15:29] <Aankhen``> What do you mean "fleh"?

[15:34] * Aankhen`` wants a Mercurial mirror.

[15:40] <avar> isn't that evil pythoon?

[15:40] <Aankhen``> It's gooooooooood Python.

[15:47] *** zomgb00bie joined
[15:47] <pmurias> fglock_: ok

[15:47] <pmurias> TokenC isn't a good name

[15:53] <pugs_svnbot> r18177 | pmurias++ | [kp6] c rules return a match

[15:53] <pugs_svnbot> r18178 | pmurias++ | [kp6] missing files

[15:53] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18178

[15:53] <lambdabot> Title: Changeset 18178 - Pugs - Trac

[15:55] <avar> I think "my" should be called "may"

[15:55] <avar> may $res = 0; reads better

[15:56] <avar> .o O ( oh so this is why it's failing, Aankhen`` sucks )

[15:56] <avar> :)

[15:58] <pmurias> avar: what should "our" be called

[15:58] <pugs_svnbot> r18179 | pmurias++ | [kp6] TokenC -> EmitTokenC

[15:58] <pugs_svnbot> r18180 | pmurias++ | [kp6] - missing file

[15:58] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18180

[15:58] <lambdabot> Title: Changeset 18180 - Pugs - Trac

[15:58] <pmurias> ? ;)

[15:59] <fglock_> have $it = 1

[15:59] <avar> pmurias: "mah"

[16:00] *** araujo joined
[16:01] *** araujo left
[16:01] *** araujo joined
[16:02] *** masak left
[16:03] *** Psyche^ joined
[16:03] *** Patterner left
[16:03] *** Psyche^ is now known as Patterner

[16:07] <pugs_svnbot> r18181 | avar++ |  r65546@t:  avar | 2007-09-26 16:06:36 +0000

[16:07] <pugs_svnbot> r18181 | avar++ |  Support for stringify and numify

[16:07] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18181

[16:07] <lambdabot> Title: Changeset 18181 - Pugs - Trac

[16:11] *** barney joined
[16:11] <fglock_> .oO( stringification and mummification

[16:16] *** blindfish joined
[16:16] *** gaal left
[16:17] *** Patterner left
[16:17] *** Psyche^ joined
[16:17] *** Psyche^ is now known as Patterner

[16:18] <avar> Aankhen``: sh-3.1$ echo '0 && say "not ok"' | perl kp6-mp6-perl5.pl --lisp  | sbcl 2>/dev/null  | grep ok

[16:18] <avar> * not ok

[16:18] <avar> sh-3.1$ echo '1 && say "not ok"' | perl kp6-mp6-perl5.pl --lisp  | sbcl 2>/dev/null  | grep ok

[16:18] <avar> * not ok

[16:20] *** weinig left
[16:23] *** TimToady joined
[16:27] <TimToady> avar: there is no length function in Perl 6; you probably want chars there instead.

[16:28] <avar> TimToady: There is now!

[16:28] <avar> >:)

[16:32] *** justatheory joined
[16:34] *** Patterner left
[16:34] *** Psyche^ joined
[16:34] *** Psyche^ is now known as Patterner

[16:34] <Aankhen``> avar: I'm busy, stop bothering me!

[16:36] <TimToady> nobody on irc is really busy, by definition

[16:37] <avar> Aankhen``: IMPLEMENT

[16:37] *** hoelzro joined
[16:38] *** riffraff joined
[16:38] <Aankhen``> avar: I've been working on something rather big since yesterday.

[16:38] <Aankhen``> I think I'll be ready to land it soon.

[16:38] <Aankhen``> (It's not all that big conceptually, but it took a long time to think it through and implement it, and I'm still not sure I've got it right.)

[16:39] <avar> what?

[16:39] <PerlJam> avar: the magic perl 6 compiler of course!

[16:39] <Aankhen``> avar: Basically creating a kp6-interpreter class that encapsulates an entire P6 world.

[16:40] <PerlJam> Aankhen``: ala smalltalk?

[16:40] <Aankhen``> avar: Needless to say, creating the class is easy, implementing the encapsulation is not. :-)

[16:40] <Aankhen``> PerlJam: I don't have a lot of experience with Smalltalk, so I'm not sure.

[16:40] <Aankhen``> PerlJam: It's not an image, though, AFAIK.

[16:40] <avar> PerlJam: We are doing that!

[16:41] <Aankhen``> Heh, I like how I say "I don't have a lot of experience" to indicate that I've never touched Smalltalk.

[16:41] <avar> Job interview reflex?

[16:41] <Aankhen``> Never had one!

[16:41] <Aankhen``> Lots of practice in embellishing the truth, though.

[16:41] <PerlJam> That's always a good skill.

[16:41] <Aankhen``> Yup.

[16:41] <Aankhen``> I'm an excellent liar.

[16:41] <Aankhen``> I'd make a great lawyer.

[16:42] <[particle]> now perljam is embellishing...

[16:43] <Aankhen``> PerlJam: I just realized that actually, we can already save images.

[16:43] <PerlJam> Once, while on a trip to my parent's house in Louisiana with a friend, he asked me about some structure he saw in the swamp.  I didn't know what it was, but I made a quick assessment and came up with what I thought was a plausible explanation, and then I told him as if I knew exactly what I was talking about.

[16:43] <Aankhen``> Most CL implementations let you save an image.

[16:43] <Aankhen``> (SBCL being a case in point.)

[16:43] *** bonesss left
[16:44] <Aankhen``> That functionality isn't exposed at present, however.

[16:44] <Aankhen``> (By KP6-CL, I mean.)

[16:46] <avar> How would it be exposed?

[16:46] <pugs_svnbot> r18182 | avar++ |  r65553@t:  avar | 2007-09-26 16:45:24 +0000

[16:46] <pugs_svnbot> r18182 | avar++ |  Made := work, more tests pass

[16:46] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18182

[16:46] <lambdabot> Title: Changeset 18182 - Pugs - Trac

[16:46] <avar> Well we have a machine code compiler currently based on sbcl's image saveing

[16:46] <Aankhen``> avar: &save_perl_and_die? <G>

[16:49] <avar> why do you want that?

[16:50] <avar> all the tests that currently fail are due to &&, ||, if and unless not knowing perl truth;/

[16:51] <avar> well, the ones that don't fail to compile..

[16:53] *** lichtkind joined
[16:53] *** bonesss joined
[16:53] *** arrowax joined
[16:55] *** weinig joined
[16:56] *** hoelzro left
[16:56] <Aankhen``> avar: What'd you do to make := work?

[16:56] <avar> see commit

[16:56] <avar> no idea if that's correct though

[16:57] <Aankhen``> Ah, I'd tried that too.

[16:57] <avar> and?

[16:57] <Aankhen``> It only assigns, not binds.

[16:57] <avar> what's the difference?

[16:57] <avar> ah, the VAR() won't get copied?

[16:57] <Aankhen``> my $x = "abcd"; my $y := $x; $y = "efgh"; # $x is still "abcd"

[16:58] <pmurias> binding is VAR($var) = ...;

[16:58] <Aankhen``> I thought about it, and my idea was that entries in the variable tables should point to cells rather than kp6-* values.

[16:58] <Aankhen``> (Completely untested and unimplemented, of course.  It just came up. :-)

[17:00] *** rindolf joined
[17:00] *** drrho left
[17:00] <pmurias> Aankhen``: cells == containers?

[17:01] <Aankhen``> pmurias: Er, possibly.  I'm not sure I have the right terminology.

[17:01] <Aankhen``> But yeah, that'd make sense.

[17:01] <Aankhen``> So which wheel did I mentally reinvent this time?

[17:01] *** hkb_aw is now known as hakobe

[17:01] *** Psyche^ joined
[17:01] *** Patterner left
[17:02] *** Psyche^ is now known as Patterner

[17:02] <pmurias> Aankhen``: it's done that way in kp6

[17:03] <Aankhen``> pmurias: Ah, okay.

[17:03] <pmurias> how should i make the c rules avalible from p6

[17:03] <pmurias> XS?

[17:08] *** c9s joined
[17:09] <avar> You can use the cl-ffi interface:)

[17:10] <avar> but more seriously it isn't (going to be) specced

[17:10] <fglock_> pmurias: just compile everything to C - examples/kp6-example.c is a quick experiment

[17:11] <avar> well then you'd need a full C emitter

[17:12] <fglock_> it even looks like lisp: ( fetch_by_key( return_obj, METH_name ) ))( return_obj, "" )

[17:13] <avar> maybe lisp with your crazy coding style:)

[17:14] <lichtkind> it is normal that i dont see any pugsshell at http://run.pugscode.org/

[17:14] <lambdabot> Title: Run Perl 6 Now -- in your browser!

[17:14] <lichtkind> my js is on

[17:15] *** Psyche^ joined
[17:16] *** Patterner left
[17:16] *** Psyche^ is now known as Patterner

[17:18] <pmurias> fglock_: i haven't considered compiling everything to c, i would rather finish a small thing then start a big one

[17:20] <avar> You could use it with the  perl5 emitter and xs

[17:24] <Aankhen``> Is there no way to access the compilation unit from an AST node?

[17:24] <fglock_> or Inline::C

[17:24] <fglock_> Aankhen``: you mean the root node?

[17:25] <Aankhen``> fglock_: I guess so, assuming a ::CompUnit is always the root node.

[17:25] <Aankhen``> I'd like to store some data in the ::CompUnit and access it from nodes within that.

[17:26] <fglock_> KindaPerl6::Traverse passes a $path argument around, which is an array with the parent nodes

[17:26] <fglock_> this is untested

[17:26] <Aankhen``> I'll get that in the implicit @_ of &emit_lisp?

[17:27] *** devogon_ joined
[17:27] *** devogon left
[17:27] <fglock_> problem is, emit_lisp() is called everywhere, so you have to pass the arguments yourself

[17:28] <Aankhen``> Okay.

[17:28] <Aankhen``> Sounds irritating, but ah well.

[17:28] <avar> * sh-3.1$ echo 'if "0" { say "true" } else { say "false" }' | perl kp6-mp6-perl5.pl --lisp | sbcl 2>/dev/null | egrep "true|\

[17:28] <avar> false"

[17:28] <avar> * false

[17:28] <avar> sh-3.1$ echo 'if "1" eq "0" { say "true" } else { say "false" }' | perl kp6-mp6-perl5.pl --lisp | sbcl 2>/dev/null | egrep "\

[17:28] <avar> true|false"

[17:28] <avar> * true

[17:28] <avar> (defmethod kp6-Bit ((self kp6-Str))

[17:28] <avar>   (not (= (perl->cl (kp6-Num self)) 0)))

[17:28] <avar> s

[17:29] <avar> (defmethod kp6-Bit ((self kp6-Bit)) doesn't work however

[17:29] <Aankhen``> Oh, ::CompUnit's signature just mentions a $arg_secure

[17:29] <Aankhen``> avar: What the heck are you doing?

[17:29] <fglock_> EmitLisp takes control out from Traverse.pm and does everything itself

[17:29] <avar> I'm trying to fucking8 implement a concept of truthness

[17:29] <Aankhen``> avar: See Num.lisp to see how to do it.

[17:29] *** Psyche^ joined
[17:29] *** Patterner left
[17:29] *** Psyche^ is now known as Patterner

[17:30] <Aankhen``> fglock_: Oh.

[17:30] <avar> (defmethod initialize-instance :after ((obj kp6-Num) &key)

[17:30] <avar>   (when (= (kp6-value obj) 0) (setf (kp6-bit obj) nil)))

[17:30] <avar> (defmethod (setf kp6-value) :after (val (obj kp6-Num))

[17:30] <avar>   (when (= val 0) (setf (kp6-bit obj) nil)))

[17:30] <avar> what the hell does that do?

[17:30] <Aankhen``> fglock_: Any particular reason for that?

[17:30] <avar> umm

[17:30] <Aankhen``> avar: Basically keeps the BIT slot up-to-date, which is supposed to be used when checking for truth.

[17:31] <Aankhen``> avar: The first one runs after the creation of a new KP6-NUM object, and sets the BIT slot to NIL (i.e. false) when the value of the number is 0.

[17:31] <fglock_> Aankhen``: EmitLisp is not really an AST transform, it just reuses the AST-plugin API for convenience

[17:31] <avar> bit is 1 or 0?

[17:31] <Aankhen``> avar: The second one runs whenever the value is set, and does the same thing.

[17:31] <Aankhen``> avar: T or NIL.

[17:31] <Aankhen``> fglock_: Ah.

[17:33] <avar> riht

[17:33] <avar> right

[17:33] <avar> s/bit/bool/ maybe

[17:33] <Aankhen``> avar: The spec says every object has a .bit attribute that's used to check for truth.

[17:34] <Aankhen``> fglock_: I just realized that since it calls emit_lisp manually anyway, I might as well pass the data I need there.

[17:34] <fglock_> yes

[17:36] <Aankhen``> Now, what should I do to generate a suitably random name in Perl…

[17:36] <fglock_> Aankhen``: more complex things, like node reordering, can be implemented as AST transforms in a separate visitor

[17:37] <Aankhen``> Kewl.

[17:38] <Aankhen``> avar: Any ideas?

[17:38] <Aankhen``> avar: Need random name!

[17:38] *** ruoso left
[17:38] <fglock_> Aankhen``: you can use a class variable (for sequential numbers), or add a subroutine to the Main namespace in the Perl5 runtime

[17:38] *** REPLeffect joined
[17:39] <Aankhen``> Hmm, I'll try the former.

[17:39] <fglock_> see Runtime/Perl5/MP6Runtime.pm:267

[17:43] <fglock_> home &

[17:46] *** Patterner left
[17:47] *** Psyche^ joined
[17:47] *** Psyche^ is now known as Patterner

[17:50] *** vbattsAtWork left
[17:51] *** vbattsAtWork joined
[17:52] *** Psyche^ joined
[17:58] *** jeffreykegler joined
[18:01] *** Greenn joined
[18:03] *** fglock_ left
[18:05] *** hakobe is now known as hkb_zz

[18:07] *** Patterner left
[18:07] *** Psyche^ is now known as Patterner

[18:07] <pugs_svnbot> r18183 | avar++ |  r65555@t:  avar | 2007-09-26 18:07:09 +0000

[18:07] <pugs_svnbot> r18183 | avar++ |  make (kp6-bit on bits work, this makes if work

[18:07] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18183

[18:07] <lambdabot> Title: Changeset 18183 - Pugs - Trac

[18:07] <avar> Aankhen``: I have no idea why && and || fail

[18:08] <avar> * sh-3.1$ echo '1 == 2 && say "shit"' | perl kp6-mp6-perl5.pl --lisp | sbcl 2>/dev/null |grep shit

[18:08] <avar> * shit

[18:09] *** weinig_ joined
[18:10] <avar> MAIN> (kp6-bit (make-instance 'kp6-Bit :value 0))

[18:10] <avar> NIL

[18:10] <avar> MAIN> (kp6-bit (make-instance 'kp6-Bit :value 1))

[18:10] <avar> 1

[18:10] <avar> MAIN> (kp6-bit (make-instance 'kp6-Bit :value 2))

[18:10] <avar> 2

[18:10] <avar> M

[18:11] <[particle]> kp6 -Ocurses

[18:12] <avar>   (define-kp6-function "infix:<&&>" (&rest operands)

[18:12] <avar>     (if (null operands)

[18:12] <avar>         (cl->perl 'true)

[18:12] <avar>         (if (kp6-bit (first operands))

[18:12] <avar>             (call-kp6-function "infix:<&&>" (cdr operands))

[18:12] <avar>             (cl->perl 'false))))

[18:13] <avar> KP6-CL> (kp6-bit (cl->perl 'false))

[18:13] <avar> NIL

[18:13] <avar> KP6-CL> (kp6-bit (cl->perl 'true))

[18:13] <avar> 1

[18:13] <avar> K

[18:13] <avar> should be working, but isn't

[18:14] *** weinig left
[18:15] *** Patterner left
[18:15] *** Psyche^ joined
[18:15] *** Psyche^ is now known as Patterner

[18:32] *** c9s left
[18:50] *** IllvilJa left
[18:50] *** jisom joined
[18:51] *** bonesss left
[18:53] *** rindolf left
[18:58] *** weinig_ left
[19:01] *** Patterner left
[19:01] *** Psyche^ joined
[19:01] *** Psyche^ is now known as Patterner

[19:04] *** weinig joined
[19:10] *** IllvilJa joined
[19:29] *** Patterner left
[19:29] *** Psyche^ joined
[19:29] *** Psyche^ is now known as Patterner

[19:30] *** franck___ left
[19:35] *** Patterner left
[19:36] *** Psyche^ joined
[19:36] *** Psyche^ is now known as Patterner

[19:38] <Aankhen``> avar: I fail to understand why you ignored coerce.lisp and wrote all that stuff instead. :-S

[19:39] *** riffraff left
[19:41] *** jisom left
[19:50] *** buubot left
[19:50] *** weinig left
[19:56] *** buubot joined
[19:59] *** Foix joined
[19:59] *** Foix left
[20:03] *** REPLeffect_ joined
[20:03] *** REPLeffect left
[20:04] *** devogon_ left
[20:04] <pugs_svnbot> r18184 | lwall++ | [STD] closer to running again with new autolexer

[20:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18184

[20:04] <lambdabot> Title: Changeset 18184 - Pugs - Trac

[20:04] *** devogon joined
[20:08] *** sahadev left
[20:10] <pmurias> how should emitters which emit multiple files be handled?

[20:13] <Aankhen``> Sorry in advance for the gigantic commit.

[20:13] <Aankhen``> All this stuff got mixed up inextricably.

[20:13] <Aankhen``> avar: Not to worry, though, I took into account your commits too.

[20:13] *** chris2 left
[20:14] <Aankhen``> Now I have to fix stuff.

[20:14] <pugs_svnbot> r18185 | Aankhen++ | [kp6-lisp]

[20:14] <pugs_svnbot> r18185 | Aankhen++ | * implemented self-contained interpreters; this required a lot of reworking and affected many files.  some things currently broken.

[20:14] <pugs_svnbot> r18185 | Aankhen++ | * removed KP6-STR and KP6-NUM methods in favour of KP6-COERCE.

[20:14] <pugs_svnbot> r18185 | Aankhen++ | * added util.lisp containing WITH-UNIQUE-NAMES and DEFINED.

[20:14] <pugs_svnbot> r18185 | Aankhen++ | * added some error handling for package functions.

[20:14] <pugs_svnbot> r18185 | Aankhen++ | * removed unnecessary INITIALIZE-INSTANCE :AFTER on KP6-BIT class.

[20:14] <pugs_svnbot> r18185 | Aankhen++ | * stick Runtime.lisp code within a WITH-COMPILATION-UNIT.

[20:14] <pugs_svnbot> r18185 | Aankhen++ | * don't always call COMPILE-FILE on Runtime.lisp

[20:14] <pugs_svnbot> r18185 | Aankhen++ | * fixed report functions for KP6-WARNING and KP6-ERROR condition classes.

[20:14] <pugs_svnbot> r18185 | Aankhen++ | * changed error functions to take a condition designator as the first argument.

[20:14] <pugs_svnbot> r18185 | Aankhen++ | * CL->PERL should populate KP6-BITs with T and NIL.

[20:15] <pugs_svnbot> r18185 | Aankhen++ | * added some error handling in functions.lisp

[20:15] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18185

[20:15] <lambdabot> Title: Changeset 18185 - Pugs - Trac

[20:20] <Aankhen``> Hmm, for some reason, EmitParrot.pm seems to be regenerated for me each time I run `make`.

[20:20] <pugs_svnbot> r18186 | Aankhen++ | * [kp6-lisp] assigning to variables works again.

[20:20] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18186

[20:20] <lambdabot> Title: Changeset 18186 - Pugs - Trac

[20:26] *** blindfish left
[20:27] *** weinig joined
[20:35] *** pjcj joined
[20:36] <pmurias> Aankhen``: why do you store the bool value in an attribiute, rather then determine it based on the content

[20:36] <pmurias> ?

[20:38] <pugs_svnbot> r18187 | Aankhen++ | * [kp6-lisp] commented out autovivification of globals for now.

[20:38] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18187

[20:38] <lambdabot> Title: Changeset 18187 - Pugs - Trac

[20:39] *** rindolf joined
[20:40] <Aankhen``> pmurias: Just going by S02…

[20:41] <Aankhen``> "Unlike in Perl 5, objects are no longer always considered true. It depends on the state of their .bit property. Classes get to decide which of their values are true and which are false. Individual objects can override the class definition"

[20:41] <pmurias> seen it

[20:41] <buubot> pmurias: Sorry, I haven't seen it

[20:41] <pmurias> buubot--

[20:41] <buubot> pmurias:  is the module loaded?

[20:42] <pmurias> Aankhen``: seen that paragraph

[20:42] <pmurias> i don't think it referes to an actual $.bit slot

[20:42] <Aankhen``> Oh.

[20:42] <pmurias> return 0 but True;

[20:43] <pmurias> is used instead of an assignment

[20:43] <pmurias> i could be wrong ;)

[20:43] <TimToady> it should probably be the .true method instead of the .bit method

[20:43] <Aankhen``> Okay.

[20:44] * Aankhen`` will get to it after figuring out why "Argument X is not a number: NIL".

[20:45] <Aankhen``> Ohh, durr.

[20:47] *** rindolf left
[20:47] <pugs_svnbot> r18188 | Aankhen++ | * [kp6-lisp] removed a few unneeded functions in GLOBAL.lisp

[20:47] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18188

[20:47] <lambdabot> Title: Changeset 18188 - Pugs - Trac

[20:47] <Aankhen``> TimToady: So it's a proper method rather than a slot?

[20:47] <pugs_svnbot> r18189 | Aankhen++ | * [kp6-lisp] added coercion for KP6-BIT.

[20:47] <pugs_svnbot> r18190 | Aankhen++ | * [kp6-lisp] fixed PERL->DISPLAY for KP6-BITs.

[20:47] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18190

[20:47] <lambdabot> Title: Changeset 18190 - Pugs - Trac

[20:53] <pugs_svnbot> r18191 | Aankhen++ | * [kp6-lisp] replaced KP6-BIT with KP6-TRUE method.

[20:53] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18191

[20:53] <lambdabot> Title: Changeset 18191 - Pugs - Trac

[21:11] <Aankhen``> avar: Found the problem.

[21:11] <Aankhen``> No lazy evaluation (at least at present). :-|

[21:11] <Aankhen``> It returns false, but both arguments are evaluated first anyway.

[21:13] <Aankhen``> I'm going to call it a night as far as the KP6 hackery goes.

[21:13] <pugs_svnbot> r18192 | Aankhen++ | * [kp6-lisp] s/kp6-bit/kp6-true/g in GLOBAL.lisp

[21:13] <pugs_svnbot> r18193 | Aankhen++ | * [kp6-lisp] pass -f rather than -v to rm in compile_tests_kp6_mp6-lisp.pl

[21:13] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18193

[21:13] <lambdabot> Title: Changeset 18193 - Pugs - Trac

[21:18] <TimToady> Aankhen``: there's no requirement that .true be implemented as an attribute.  We're just basically saying that all types do the Bool interface

[21:18] <Aankhen``> Okay.

[21:19] <Eidolos> w 22

[21:19] <Aankhen``> 23 is better.

[21:19] <Eidolos> no way! :)

[21:19] <Aankhen``> 24?

[21:20] <[particle]> 21... blackjack!

[21:21] <Aankhen``> Bah.

[21:21] <Aankhen``> Cheater.

[21:28] *** arrowax left
[21:31] *** pmurias left
[21:46] *** vbattsAtWork left
[21:47] *** barney left
[22:00] *** cmarcelo left
[22:03] *** justatheory left
[22:11] *** Limbic_Region joined
[22:22] *** iblechbot left
[22:30] *** Khisanth left
[22:31] *** Khisanth joined
[22:35] *** Aankhen`` left
[22:56] <avar> how do I blog at pugs.blogs.com ?

[22:58] *** jhorwitz left
[23:03] *** zomgb00bie left
[23:03] * avar finally gives up on svk

[23:06] <avar> arg what the crap

[23:08] *** baest_ left
[23:08] <pugs_svnbot> r18194 | avar++ |  r65568@t:  avar | 2007-09-26 23:06:48 +0000

[23:08] <pugs_svnbot> r18194 | avar++ |  tabs to spaces

[23:08] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18194

[23:08] <lambdabot> Title: Changeset 18194 - Pugs - Trac

[23:08] *** baest joined
[23:11] *** elmex left
[23:16] * avar sees that aankhen isn't running tests

[23:23] <pugs_svnbot> r18195 | avar++ | Define a Main function for the program (again), this is required for the sbcl image dumper to work

[23:23] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18195

[23:23] <lambdabot> Title: Changeset 18195 - Pugs - Trac

[23:38] *** Limbic_Region left
[23:40] *** hkb_zz is now known as hakobe

[23:54] *** hakobe is now known as hkb_aw

[23:55] *** devogon left
