[00:05] *** theorb joined
[00:11] *** ispy_ joined
[00:18] *** Notrix left
[00:20] *** theorbtwo left
[00:21] *** DarkWolf84 joined
[00:46] *** drbean joined
[00:47] *** luqui left
[00:48] *** drbean_ left
[00:50] *** nipotaway is now known as nipotan

[00:53] *** ispy_ left
[01:02] *** kcwu joined
[01:04] *** polettix left
[01:05] *** kanru left
[01:08] *** Schwern left
[01:18] *** IllvilJa left
[02:02] *** zakame joined
[02:17] *** Winkie joined
[02:41] *** jferrero left
[02:52] <pugs_svn> r19126 | Darren_Duncan++ | ext/Muldis-DB/ : split Machine role|class into itself and Process role|class

[03:01] *** Schwern joined
[03:03] *** cnhackTNT joined
[03:07] *** Schwern left
[03:08] *** Schwern joined
[03:16] *** xystic- joined
[03:33] *** luqui joined
[03:37] <pugs_svn> r19127 | Darren_Duncan++ | ext/Muldis-DB/ : this is the Perl 6 equivalent of what will end up on CPAN as Muldis::DB version 0.6.0 for Perl 5

[03:40] *** Limbic_Region left
[03:43] *** luqui left
[03:57] *** pen1 joined
[03:58] *** penk left
[04:13] *** neuromu joined
[04:20] *** neuromu is now known as jmacclure

[04:41] *** xystic- left
[05:17] *** alc joined
[05:27] *** amnesiac joined
[05:38] *** zakame_ joined
[05:41] *** Schwern left
[05:53] *** zakame left
[05:57] *** zakame_ is now known as zakame

[06:03] *** njbartlett left
[06:08] *** agentz1 left
[06:14] *** cnhackTNT left
[06:21] *** luqui joined
[06:32] *** Aankhen`` joined
[06:36] *** bd_ left
[06:52] *** thoughtpolice left
[06:53] *** agentzh joined
[06:55] *** luqui left
[06:59] *** devogon joined
[07:08] *** jisom joined
[07:29] *** jmacclure left
[07:32] *** jiing joined
[07:41] *** BinGOs joined
[07:49] *** charsbar_ joined
[07:50] *** elmex joined
[07:51] *** pen1 left
[07:53] *** charsbar left
[07:55] *** zamolxes left
[07:55] *** zamolxes joined
[07:57] *** luqui joined
[08:00] *** BinGOs left
[08:08] *** BinGOs joined
[08:12] *** amnesiac left
[08:20] *** zakame left
[08:22] *** iblechbot joined
[08:24] *** njbartlett joined
[08:45] *** elmex left
[08:46] *** elmex joined
[08:58] *** jisom left
[09:07] *** njbartlett left
[09:14] *** IllvilJa joined
[09:18] *** DarkWolf84 left
[09:22] *** Southen joined
[09:31] *** luqui left
[09:33] *** penk joined
[09:34] *** cmarcelo left
[09:39] *** zakame joined
[09:39] *** Southen_ left
[10:12] *** penk left
[10:12] *** franck___ joined
[10:16] *** penk joined
[10:17] *** zakame left
[10:17] *** njbartlett joined
[10:18] *** ruoso joined
[10:21] *** masak joined
[10:26] *** alc left
[10:27] *** masak` joined
[10:29] *** fglock_ joined
[10:29] *** fglock_ is now known as fglock

[10:41] *** masak left
[10:41] *** masak` is now known as masak

[10:42] *** drrho joined
[10:43] <fglock> we have 2 weeks until Christmas

[10:44] <pugs_svn> r19128 | fglock++ | [kp6-boot] fixed t-bootstrap/02-grammar.p6, all tests pass - pmurias++

[10:45] *** djm joined
[10:56] <masak> fglock: I like that attitude

[10:57] <fglock> :)

[11:01] <pugs_svn> r19129 | fglock++ | [kp6-boot] started debugging src-script/kp6-kp6.pl

[11:02] *** pcbuetow left
[11:06] <pugs_svn> r19130 | fglock++ | [kp6-kp6] t-bootstrap/02-grammar.p6 - added <parse> test

[11:09] *** pbuetow joined
[11:15] *** Sizur joined
[11:17] <Sizur> and unofficial approximation date +/- n years for perl6 release?

[11:20] <wolverian> christmas 

[11:22] <Sizur> > reverse $ '?':fromJust (Just "siht")

[11:22] <lambdabot>  "this?"

[11:26] <Patterner> 20xx

[11:29] *** jferrero joined
[11:36] <Sizur> thanks

[11:36] *** Sizur left
[11:43] <pugs_svn> r19131 | fglock++ | [kp6-kp6] src-script/kp6-kp6.pl is compiled on make

[11:43] <pugs_svn> r19131 | fglock++ | - fixed Pad.isa()

[11:48] *** iblechbot left
[11:58] <pugs_svn> r19132 | fglock++ | [kp6-kp6] added debugging info; KindaPerl6::Visitor::MetaClass runs ok

[12:01] <pugs_svn> r19133 | fglock++ | [kp6-kp6] src-script/kp6-kp6.pl - added instructions

[12:11] <pugs_svn> r19134 | fglock++ | [kp6] Visitor::Global - fixed 'self'

[12:12] *** ebassi joined
[12:23] *** cognominal_ left
[12:35] *** penk left
[12:38] <pugs_svn> r19135 | fglock++ | [kp6-kp6] Pad.pm - more p5/p6 translations

[12:45] *** Lorn joined
[12:45] *** kanru joined
[12:56] *** kane_ joined
[12:57] *** ebassi is now known as ebassi|lunch

[13:04] *** barney joined
[13:07] *** mncharity joined
[13:13] *** Lorn_ joined
[13:13] *** Lorn left
[13:21] *** jferrero left
[13:21] *** jferrero joined
[13:24] *** jferrero left
[13:25] *** jferrero joined
[13:30] *** agentzh left
[13:33] *** iblechbot joined
[13:35] *** felipe joined
[13:38] *** HiTech69 joined
[13:40] *** ebassi|lunch is now known as ebassi

[14:12] *** tuxdna joined
[14:14] <pasteling> "tuxdna" at 122.162.158.30 pasted "Build failed" (51 lines, 2.5K) at http://sial.org/pbot/29146

[14:14] <tuxdna> hi

[14:14] <moritz_> hi

[14:15] <moritz_> tuxdna: which GHC version are you using?

[14:15] <tuxdna> for few days I am getting an error with build

[14:15] <tuxdna> I am not able to comprehend it.

[14:15] <tuxdna> [ 1 min ]

[14:15] <tuxdna> The Glorious Glasgow Haskell Compilation System, version 6.8.1

[14:15] <moritz_> ah

[14:15] <tuxdna> I installed it from source

[14:16] <moritz_> you need to modify some config files for 6.8.1

[14:16] <moritz_> standard pugs builds fine with ghc 6.6.1

[14:16] <moritz_> wait a second...

[14:16] <tuxdna> which ones?

[14:16] <tuxdna> okay...

[14:17] <moritz_> tuxdna: read http://irclog.perlgeek.de/perl6/2007-11-16#i_145128 and the following lines

[14:17] <lambdabot> Title: IRC log for #perl6, 2007-11-16

[14:19] <pugs_svn> r19136 | fglock++ | [kp6-perl5] fixed attribute initialization

[14:21] <moritz_> tuxdna: if you manage to build pugs with ghc 6.8.1 you can check in your changes and bump the ghc requirement to 6.8.1

[14:23] <tuxdna> thanks lambdabot 

[14:23] <tuxdna> [ 1 min ]

[14:23] <tuxdna> thanks moritz_ 

[14:24] <moritz_> did it work?

[14:25] *** chris2 joined
[14:34] *** jhorwitz joined
[14:35] <pugs_svn> r19137 | fglock++ | [kp6-perl5] fixed last commit

[14:44] <pugs_svn> r19138 | fglock++ | [kp6] fixed a node initialization in Visitor::MetaClass.pm

[14:46] *** TJCRI joined
[14:47] *** nipotan is now known as nipotaway

[14:48] *** lichtkind joined
[14:56] *** Psyche^ joined
[15:05] *** cognominal_ joined
[15:05] <tuxdna> moritz_: it did'nt work. however I (perhaps) have a hint to make it more clear.

[15:05] *** arguile left
[15:06] <tuxdna>     in Makefile.PL  there is this line  : my @ghci_flags = qw( -hide-all-packages -package base -package filepath -package parsec -package template-haskell -package readline -package unix -package haskell98 -package mtl -package stm -package network -package pugs-HsSyck -package pugs-hsregex );

[15:06] <tuxdna>  

[15:07] <tuxdna> i think this makes the packages hide. I dont know muck about Haskell, so I am not sure of this.

[15:07] *** chris2 left
[15:07] <allbery_b> hides all, then exposes a subset

[15:08] <allbery_b> the subset probably needs to be expanded, for example, probably need -package containers these days

[15:10] *** arguile joined
[15:11] <pugs_svn> r19139 | fglock++ | [kp6-kp6] kp6-kp6 now emits some code

[15:11] <tuxdna> allbery_b: thanks for that

[15:13] *** drrho left
[15:13] *** Patterner left
[15:13] *** Psyche^ is now known as Patterner

[15:16] <pugs_svn> r19140 | fglock++ | [kp6-kp6] fixed variable name mangling

[15:25] *** cognominal_ left
[15:26] *** araujo left
[15:32] <pugs_svn> r19141 | fglock++ | [kp6-kp6] fixed compiler name

[15:33] <cj> what's the locale string for "german as spoke in .de"?

[15:33] <cj> (where en_US is "english as spoken in .us")

[15:34] <wolverian> de_DE

[15:34] * masak is somehow reminded of "English as she is spoke"

[15:35] <moritz_> de_DE is right 

[15:37] <pbuetow> or de_AT, german spoken in austria?

[15:37] <moritz_> they don't really speak German in Austria (they just think they do) ;-)

[15:38] <pbuetow> haha

[15:39] <moritz_> (the closer the country is, the more we bicker with them ;)

[15:40] <pbuetow> hehe yes

[15:40] <pbuetow> like NL <-> DE in soccer.

[15:41] <moritz_> aye

[15:41] <moritz_> or Scotland <-> England in every regard ;)

[15:42] <pbuetow> hehe yes

[15:50] <masak> not very surprising, really

[15:50] <masak> it's easier to bicker with someone you can see across the border

[15:51] <moritz_> so I assume in scandinavia you do the same?

[15:55] <masak> sure

[15:56] <masak> although we have less and less real reason to make fun of the norwegians here in sweden, now that they've got all the oil

[15:56] <masak> still, we do our best

[15:56] <masak> (actually, that's not quite true. some of my best friends are norwegians)

[15:57] <moritz_> ;)

[15:57] <moritz_> can you tell me a few prejudices about norwegians? my girlfriend is half norwegian, and I'd like to tease her a bit ;)

[15:58] <masak> oh, it's nothing as sophisticated as that

[15:58] <masak> it's just the usual crap, applicable to all neighbouring countries

[15:58] <moritz_> ok

[15:59] <masak> like the one about the norwegian who was out driving

[15:59] <masak> when he hears on the radio about this one maniac going against traffic

[15:59] <masak> "one?" he exclaims. "there are hundreds!"

[15:59] <masak> ...and you could see that coming from miles away, I guess

[16:00] <moritz_> yes ;)

[16:00] <masak> of course, you're supposed to say his lines in norwegian accent, which helps

[16:01] <masak> another norwegian-in-traffic joke is based on the misconception of "R" meaning "Racing" on the transmission

[16:01] <masak> stuff like that

[16:02] <moritz_> "the usualy stuff"

[16:02] <masak> yes

[16:02] <masak> although we have a few about norwegian word formation

[16:02] <masak> which actually sound plausible, but which I suspect are false

[16:03] <masak> I also suspect that they are only funny in swedish, and possibly norwegian

[16:03] <masak> the few I can remember are toilet="brusefåtølj", banana="gulebøj" and squirrel="tallefjant"

[16:04] <masak> but recollection is impaired by the fact that I haven't kept tabs on those jokes since I was about 12

[16:06] <njbartlett> I have a true story about Norwegian traffic regulations

[16:07] <njbartlett> A friend was driving in Norway and he passed an obvious speed camera, so he slowed down... but it flashed anyway

[16:07] <njbartlett> Curious, he turned round and went through it again much slower. It flashed again

[16:08] <njbartlett> A few weeks later he received two tickets... 

[16:08] <njbartlett> For not wearing his seatbelt!

[16:08] <njbartlett> Turns out there was a guy in a box pressing a button

[16:09] *** masak left
[16:09] <moritz_> nice one ;)

[16:09] *** vbattsAtWork joined
[16:10] *** vbattsAtWork left
[16:20] *** Psyche^ joined
[16:22] *** pmurias joined
[16:34] <fglock> pugs: ( 1, 2,  @([ 4, 5, 6 ]), 7 )

[16:34] <exp_evalbot> RESULT[(1, 2, [4, 5, 6], 7)]

[16:35] <fglock> pugs: ( 1, 2,  ([ 4, 5, 6 ]).values, 7 )

[16:35] <exp_evalbot> RESULT[(1, 2, 4, 5, 6, 7)]

[16:35] *** Patterner left
[16:35] *** Psyche^ is now known as Patterner

[16:35] <moritz_> pugs: (1, 2, |@([3, 4]), 5)

[16:35] *** jjore-m left
[16:35] <exp_evalbot> RESULT[(1, 2, [3, 4], 5)]

[16:37] *** pjcj joined
[16:37] *** tuxdna left
[16:58] <pugs_svn> r19142 | fglock++ | [MiniPerl6] implemented .values

[16:58] <pugs_svn> r19142 | fglock++ | [kp6-perl5] implemented .values; fixed Grammar::Statements

[16:58] *** chruc1 joined
[16:59] *** chruc1 is now known as chruck

[17:01] <pugs_svn> r19143 | pmurias++ | [kp6-kp6] fixed &get_compiler_target_runtime

[17:04] <pugs_svn> r19144 | fglock++ | [kp6-perl5] more s/@()/.values/

[17:04] <pmurias> fglock: 123 is parsed as class Main {1};class Main {2};class Main {3}

[17:04] <pmurias> by script/kp6-kp6

[17:05] <fglock> pmurias: yes - I'm working on it

[17:06] <fglock> I think it's the same error as in test #15

[17:07] <pmurias> and examples/hello.pl as 012345...

[17:07] <fglock> ::CompUnit(  body => ::Lit::Code(  body => [  <-- error here

[17:07] <fglock> it's $$<exp_stmts>

[17:09] <fglock> adding more tests...

[17:10] *** dlocaus joined
[17:10] *** HiTech69 left
[17:12] *** HiTech69 joined
[17:17] <pmurias> fglock: if the the $match.result.Str is not a Str the result will be a boxed "HASH(...)"

[17:18] *** amnesiac joined
[17:18] <pmurias> i think KindaPerl6::Runtime::Perl5::Match should be replaced by KindaPerl6::Runtime::Perl6::Match

[17:18] *** tzoa joined
[17:19] *** tzoa left
[17:24] <fglock> pmurias: ok, but please wait for a few commits, i'm debugging the 1/2/3 problem

[17:24] <pmurias> fine

[17:27] <pmurias> (studying chemistry--)-- &

[17:28] <pugs_svn> r19145 | fglock++ | [kp6-kp6] fixed Match.Str

[17:32] *** DarkWolf84 joined
[17:33] *** justatheory joined
[17:38] <pugs_svn> r19146 | fglock++ | [kp6-perl5rx] always define Match.from

[17:42] *** franck___ left
[17:43] <dlocaus> pmurias: is this legal perl6?  "(say)(1234);"

[17:44] <moritz_> pugs: (say)(123)

[17:44] <exp_evalbot> OUTPUT[␤*** Cannot cast from VBool True to Pugs.AST.Internals.VCode (VCode)␤    at /tmp/dmMzWHCwuV line 1, column 1 - line 2, column 1␤]

[17:45] <dlocaus> moritz_: is that supposed to be "legal" perl6?

[17:45] <dlocaus> "(say)(1234);"?

[17:45] <moritz_> dlocaus: I don't know

[17:45] <moritz_> I guess not

[17:46] <pmurias> dlocaus: pugs says it is

[17:46] <dlocaus> I think you can do that in perl5, or something similar to it

[17:46] <dlocaus> pmurias: so, that is legal perl6?

[17:46] <rhr> (say)(1234) I think is say().(1234) which is sort of leagal but nonsensical

[17:47] <pugs_svn> r19147 | fglock++ | [kp6-kp6] single comp_unit compiling works

[17:48] <dlocaus> sort of legal?  I wonder how a judge would take that...

[17:48] <dlocaus> Yer Honor Wall, that is a sort of legal statement! ;)

[17:48] <moritz_> pugs: (say).(123)

[17:49] <exp_evalbot> OUTPUT[␤*** Cannot cast from VBool True to Pugs.AST.Internals.VCode (VCode)␤    at /tmp/atpcTGxoUs line 1, column 1 - line 2, column 1␤]

[17:49] <moritz_> it's not a parse error, but an interal pugs error

[17:49] <moritz_> at least judging from the error message

[17:50] <rhr> you're innocent of syntax errors but guilty of trying to call the Bool::True function :)

[17:50] <Auzon> Well, say returns Bool::True, right? So wouldn't that be like calling the "123" method on Bool::True?

[17:50] <rhr> Auzon: right

[17:50] <moritz_> pugs: my $a = \&say; ($a).(123);

[17:50] <exp_evalbot> OUTPUT[123␤]

[17:51] <pmurias> rhr: wrong

[17:51] <rhr> sorry, 123 is the arg

[17:51] * moritz_ says it's not valid perl 6

[17:52] <Auzon> pugs: $_ = "test"; my $a = \&say; ($a).();

[17:52] <exp_evalbot> OUTPUT[␤]

[17:52] <Auzon> pugs: $_ = "test"; say();

[17:52] <exp_evalbot> OUTPUT[␤]

[17:53] <Auzon> Should that print out "test"?

[17:53] <pugs_svn> r19148 | dlo++ | [kp6] Updated apply so that it produces a legal say command. IE,  kp6 -e 'say 1234'; produces (say (1234)) and not (say)(1234);

[17:54] <rhr> you want .say to get $_, nothing defaults to it anymore

[17:54] <Auzon> Ah

[17:54] <Auzon> That's good :)

[17:54] <Auzon> pugs: $_ = "test"; my $a = \&say; .($a);

[17:54] <exp_evalbot> OUTPUT[*** Cannot cast from VStr "test" to Pugs.AST.Internals.VCode (VCode)␤    at /tmp/sbr0gIhznE line 1, column 29-34␤]

[17:54] <pugs_svn> r19149 | fglock++ | [kp6-kp6] the kp6-kp6.pl compiler script works

[17:56] <rhr> pugs: $_ = "test"; my $a = "say"; .$a;

[17:56] <exp_evalbot> OUTPUT[test␤]

[17:56] <Auzon> Oh, right

[17:56] <Auzon> OK, it makes sense now

[18:00] <dlocaus> is infix a "real" function?

[18:00] <dlocaus> ie, is this legal? "say 'ok', ( infix : <~> ( ' ', '5' ) );"

[18:01] <dlocaus> pugs: say 'ok', ( infix : <~> ( ' ', '5' ) );

[18:01] <exp_evalbot> OUTPUT[*** ␤    Unexpected ": <~>"␤    expecting "::"␤    at /tmp/MCfgg6T59C line 1, column 19␤]

[18:01] <moritz_> no, 'infix:<~>' is the function:

[18:01] <pugs_svn> r19150 | fglock++ | [kp6-kp6] kp6-kp6.pl emits runnable code

[18:01] <moritz_> pugs: say infix:<~>("foo", "bar")

[18:01] <exp_evalbot> OUTPUT[foobar␤]

[18:01] <moritz_> dlocaus: you can't insert whitespaces into function names

[18:02] <dlocaus> oh ok.

[18:03] <fglock> kp6-kp6 now compiles Perl 6 :)

[18:04] <moritz_> fglock: what do you mean by "Perl 6"?

[18:05] <fglock> the syntax as defined in kp6, instead of MiniPerl6

[18:05] <avar> runs tests?!

[18:05] <moritz_> cool

[18:05] <moritz_> so the grammar is bootstrapped

[18:05] <fglock> avar: i didn't try yet

[18:06] <avar> TRY!:)

[18:06] * moritz_ heeds off to RL

[18:07] <fglock> k

[18:07] <fglock> the command line is:

[18:07] <fglock>  perl -I compiled/perl5-kp6-kp6/lib/ script/kp6-kp6.pl < source > target

[18:07] <Auzon> Where is the SVN (or some easy way to get the code) for kp6?

[18:08] <fglock> Auzon: the same as pugs itself

[18:08] <fglock> i mean, http://svn.pugscode.org/pugs

[18:08] <lambdabot> Title: Revision 19150: /

[18:08] <Auzon> Yeah, OK

[18:08] <Auzon> I didn't see it there, so I'll look harder ;)

[18:09] *** cmarcelo joined
[18:10] *** pmurias left
[18:10] <[particle1> v6/v6-KindaPerl6

[18:10] *** [particle1 is now known as [particle]

[18:11] <Auzon> I can just pull that directory, right?

[18:11] <[particle]> yep

[18:11] <Auzon> Cool.

[18:11] <[particle]> fglock++

[18:12] <Auzon> So I take it that the bootstrap mentioned in README is done now?

[18:13] <pugs_svn> r19151 | dlo++ | [kp6] Fixed kp6, so -Bperl6 is not run though perltidy

[18:17] <[particle]> anybody spare a little grammar help?

[18:17] <[particle]> rule TOP    {

[18:17] <[particle]>     ^

[18:17] <[particle]>     [  <lineseq>

[18:17] <[particle]>     || <panic: parse error>

[18:17] <[particle]>     ] $

[18:17] <[particle]>     {*}

[18:17] <[particle]> }

[18:17] <[particle]> i'm not getting <lineseq> to match, but <panic:...> isn't being called

[18:17] <avar> <line>+ ?

[18:18] <[particle]> rule lineseq { <line>* {*} }

[18:18] <fglock> $ PERL5LIB=compiled/perl5-kp6-kp6/lib/ sh -c 'perl script/kp6-kp6.pl < t/kp6/01-tap.t | perl'

[18:18] <fglock> takes 5 seconds to run, but it works

[18:19] *** ebassi left
[18:20] <fglock> [particle]: line* matches, and $ fails too late

[18:20] <fglock> i guess

[18:20] <[particle]> ah... [ ^ <lineseq> $ || <panic:...> ] {*} seems to work

[18:20] <fglock> yes :)

[18:21] <[particle]> thanks :)

[18:21] <avar> where's the source for kp6/kp6.pl ?

[18:21] <avar> script/kp6-kp6.pl

[18:21] <fglock> src-script/

[18:22] <fglock> avar: kp6 is not bootstrapped yet - this is the first stage 

[18:23] <ruoso> the question is if kp6-kp6.pl generates the same code as non-bootstrapped kp6 targetting kp6 runtime

[18:23] <avar> yeah 04-* fails on a pad error

[18:24] <fglock> trying to compile kp6-kp6.pl with itself...

[18:24] <avar> $ PERL5LIB=compiled/perl5-kp6-kp6/lib/ sh -c 'perl script/kp6-kp6.pl < src-script/kp6-kp6.pl | perl'

[18:25] <avar> Can't call method "var" on unblessed reference at compiled/perl5-kp6-kp6/lib//KindaPerl6/Runtime/Perl5/Pad.pm line 249, <> line 81.

[18:25] <avar> same error

[18:25] <fglock> avar: looking

[18:27] <pugs_svn> r19152 | fglock++ | [kp6-kp6] Pad.pm - fixed a Perl 6 call

[18:27] <fglock> now i get a different error

[18:32] *** dlocaus left
[18:32] *** dlocaus joined
[18:34] <fglock> t/04-* has a one-line difference between kp6-mp6 and kp6-kp6

[18:35] *** kst joined
[18:42] <Lorn_> fglock: do you have any project, about *v6,  to SoC ? 

[18:42] *** Lorn_ is now known as Lorn

[18:44] <fglock> Lorn: do you have ideas?

[18:45] *** araujo joined
[18:45] <dlocaus> pugs: (infix:<&&> ((infix:<eq> (1, 1)), (say 'ok')));

[18:46] <exp_evalbot> OUTPUT[pugs: Extra space found after &infix:&& (...) -- did you mean &infix:&&(...) instead?␤]

[18:46] <dlocaus> pugs: 

[18:46] <dlocaus> pugs: (infix:<&&>((infix:<eq> (1, 1)), (say 'ok')));

[18:46] <exp_evalbot> OUTPUT[pugs: src/Pugs/Prim.hs:1730:18-38: Non-exhaustive patterns in lambda␤␤␤]

[18:46] <dlocaus> pugs: (infix:<&&>((infix:<eq>(1, 1)),(say 'ok')));

[18:46] <exp_evalbot> OUTPUT[ok␤]

[18:47] *** pmurias joined
[18:47] <dlocaus> kp6: (infix:<&&>((infix:<eq>(1, 1)),(say 'ok')));

[18:47] <exp_evalbot> r19152: OUTPUT[ok␤]

[18:47] <dlocaus> kp6:(infix:<&&> ((infix:<eq> ($x, $x)), (say ('ok 1'))));

[18:47] <dlocaus> kp6: (infix:<&&> ((infix:<eq> ($x, $x)), (say ('ok 1'))));

[18:47] <exp_evalbot> r19152: OUTPUT[Can't call method "emit_perl5" on an undefined value at compiled/perl5-kp6-mp6/lib/KindaPerl6/Visitor/Emit/Perl5.pm line 671, <> line 1.␤Attempt to free unreferenced scalar: SV 0x8f9f5a8, Perl interpreter: 0x814e008, <> line 1.␤]

[18:48] <dlocaus> kp6: (infix:<&&>((infix:<eq>(1, 1)),(say 'ok')));

[18:48] <dlocaus> kp6: (infix:<&&> ((infix:<eq> ($x, $x)), (say ('ok 1'))));

[18:48] <exp_evalbot> r19152: OUTPUT[ok␤]

[18:48] <exp_evalbot> r19152: OUTPUT[Can't call method "emit_perl5" on an undefined value at compiled/perl5-kp6-mp6/lib/KindaPerl6/Visitor/Emit/Perl5.pm line 671, <> line 1.␤Attempt to free unreferenced scalar: SV 0x8f9f5a8, Perl interpreter: 0x814e008, <> line 1.␤]

[18:48] <fglock> dlocaus: space is forbidden after the function name

[18:48] <dlocaus> oh duh.

[18:48] <Lorn> fglock: no :P i was looking bug in the dev.pugscode.org have a lot of open tickets

[18:48] <dlocaus> where is the infix perl6 code?

[18:49] <dlocaus> It is not in Visitor/Emit/Perl6.pm

[18:49] <avar> Runtime/*

[18:49] <pmurias> src/KindaPerl6/Runtime/Perl5/GLOBAL.pm

[18:49] <fglock> dlocaus: it's in Runtime::Perl5::GLOBAL, but shortcircuiting code is handled at Visitor::Emit::Perl5

[18:50] <fglock> shortcircuiting = &&, ||

[18:50] <dlocaus> I mean, where is the emitter for infix perl6 code?

[18:50] <avar> and //

[18:50] <pmurias> Lorn: do you know if TPF will take part in SoC this year?

[18:51] <Lorn> fglock: i'm searching something to do ... TODO its huge :P

[18:51] <Lorn> pmurias: i dont know

[18:51] <fglock> dlocaus: infix:<eq> is a Code object

[18:51] <pmurias> jjjjjjjjkl:q

[18:51] <fglock> it doesn't have a special emitter

[18:51] <pmurias> sorry

[18:52] <Lorn> pmurias: vim problems? :P

[18:52] <pmurias> there is a useless terminal sequence which hangs the terminal

[18:52] <dlocaus> fglock: where is it emited then?

[18:53] <dlocaus> or where are the lines that return the perl6 code for it?

[18:53] <fglock> one sec

[18:54] *** drrho joined
[18:54] <avar> kp6: my @arr; @a[0]; @a

[18:55] <exp_evalbot> r19152: RESULT[[  ]]

[18:55] <avar> kp6: my @a; @a[0]; @a

[18:55] <fglock> $ perl script/kp6 -Cast <<< ' "a" eq "b" '

[18:55] <exp_evalbot> r19152: RESULT[[  ]]

[18:55] <avar> kp6: my @a; @a[0] = "foo"; @a[1] = "bar"; @a

[18:55] <exp_evalbot> r19152: RESULT[[ 'foo', 'bar' ]]

[18:55] <fglock> "eq" is handled by the Apply emitter

[18:55] <avar> kp6: my @a; @a[0] = "foo"; @a[1] = "bar"; @a.scalar

[18:55] <exp_evalbot> r19152: RESULT[[ 'foo', 'bar' ]]

[18:55] <avar> shouldn't it be method scalar { self.elems } ?

[18:55] <avar> kp6: my @a; @a[0] = "foo"; @a[1] = "bar"; @a.elems

[18:55] <exp_evalbot> r19152: RESULT[2]

[18:56] <fglock> pugs: my @a; @a[0] = "foo"; @a[1] = "bar"; @a.scalar

[18:56] <exp_evalbot> OUTPUT[*** No such method in class Array: "&scalar"␤    at /tmp/ee0efWkGyG line 1, column 38 - line 2, column 1␤]

[18:56] <pmurias> fglock: compiling the tap takes 21sec and running 3sec here

[18:56] <fglock> pugs: my @a; @a[0] = "foo"; @a[1] = "bar"; $(@a)

[18:56] <exp_evalbot> RESULT[["foo", "bar"]]

[18:56] <pmurias> * 01-tap.t

[18:56] *** kane_ left
[18:57] <fglock> wow

[18:57] <fglock> pugs: my @a; @a[0] = "foo"; @a[1] = "bar"; +(@a)

[18:57] <exp_evalbot> RESULT[2]

[18:58] *** luqui joined
[19:00] <fglock> pmurias: time to start a Parrot/C backend?

[19:01] <[particle]> :D

[19:01] <fglock> this could be a SoC

[19:01] <pmurias> fglock: doing some profiling might help

[19:02] <fglock> ::DISPATCH() seems guilty :P

[19:02] <pmurias> fglock: caching could be added quite simply

[19:02] <avar> fglock: I don't see many changes in Runtime/Perl6/, what have you mainly been hacking?

[19:03] <pmurias> fglock: should i hack in a --backend kp6-kp6 option into run_tests.pl?

[19:03] <fglock> avar: mostly in the regex engine; there were several segfaults last week

[19:03] <fglock> pmurias: sure

[19:04] <pugs_svn> r19153 | dlo++ | [kp6] fixed infix space problem

[19:05] <fglock> dlocaus: good catch

[19:05] <dlocaus>  :), ty

[19:07] <fglock> avar: Namespace desugaring was mostly implemented, but it's not used in the Perl 5 backend

[19:08] <pugs_svn> r19154 | dlo++ | [kp6] Modified Perl6.pm to be a bit more liberal with its newlines

[19:08] <fglock> avar: but Pad desugaring is not implemented yet

[19:14] <pugs_svn> r19155 | pmurias++ | [kp6] a hack in order for script/run_tests.pl --backend kp6-kp6 to run, assumes set PERL5LIB

[19:18] <pmurias> fglock: syntactic scope / semantic scope / pragmatic scope part of http://www.perl.com/pub/a/2007/12/06/soto-11.html?page=3 might be relevant to the scope discussion we had

[19:18] <lambdabot> Title: perl.com: Programming is Hard, Let's Go Scripting...

[19:18] *** Auzon left
[19:19] *** Auzon joined
[19:21] <fglock> pmurias: right

[19:22] <pmurias> is the time object documented in docs/Perl6/Spec/Functions.pod:1547

[19:22] <Lorn> exists a perl6 highlitgh for vim?

[19:22] <pugs_svn> r19156 | dlo++ | [kp6] Fixed perl6 if emit formating

[19:23] <pugs_svn> r19157 | dlo++ | [kp6] quick comment, about () in kp6 if

[19:23] <fglock> Lorn: i think there is one in the pugs repo

[19:23] <pmurias> Lorn: yes i have got it

[19:23] <Lorn> where i download? they come in with pugs?

[19:24] <pmurias> util/perl6.vim

[19:27] <pmurias> * where is the Time object in docs/Perl6/Spec/Functions.pod:1547 documented?

[19:27] <pmurias> * referenced

[19:28] <dlocaus> fglock: what is perl6 "class Lit::SigArgument" supposed to do?

[19:30] *** drrho left
[19:30] <dlocaus> ah, nm

[19:31] <fglock> it represents a signature item

[19:50] *** barney left
[19:53] <pmurias> fglock: kp6-kp6 raises an error when run with -d:DProf on t/kp6/03-scalar.t

[19:53] *** jferrero left
[19:54] <fglock> looking

[19:57] <fglock> same here - same error with 5.10.0-RC2 too

[19:57] *** cognominal_ joined
[19:58] *** ruoso left
[19:58] <pmurias> kp6 seems to attract strange errors

[19:59] *** cognominal_ left
[20:00] *** lumi joined
[20:02] <dlocaus> in perl6 is it legal to make an annoymous subroutine with arguments? IE

[20:02] <dlocaus> my $sub = sub ($arg1,$arg2,$arg3) {

[20:02] <dlocaus>    say $arg1, $arg2, $arg3;

[20:02] <dlocaus> };

[20:03] <fglock> yes

[20:03] <dlocaus> ok, ty

[20:06] <fglock> home &

[20:16] *** luqui left
[20:17] *** pmurias left
[20:19] *** penk joined
[20:22] <dlocaus> @tell fglock could you please update "class Sub" in Visitor::Emit::Perl6?  I attempted to figure out how "subroutines" should emited, but I couldn't figure it out.

[20:22] <lambdabot> Consider it noted.

[20:27] *** fglock left
[20:33] *** __Ace__ joined
[20:35] *** DarkWolf84 left
[20:51] *** yahooooo joined
[21:00] *** pmurias joined
[21:00] <pmurias> dlocaus: ping

[21:00] <dlocaus> pmurias: hi

[21:01] <pmurias> dlocaus: hi

[21:01] <dlocaus> pmurias: what's up?

[21:01] <pmurias> have you looked at Emit::Perl5?

[21:02] <dlocaus> pmurias: I didn't think to look at it.  But, now having looked at it...

[21:02] <dlocaus> I don't think that helps me.

[21:02] <pmurias> dlocaus: hard to sum up the current state of events

[21:03] <dlocaus> pmurias: :)

[21:03] <dlocaus> pmurias: yeah, I know that the signature part of the code is currently being worked on.

[21:03] <pmurias> dlocaus: i think it's the pads

[21:04] <dlocaus> pmurias: right now, I'm running though the t/* test cases and attempting to run them though perl6 ie.. kp6 -Bperl6 test.pl | kp6 

[21:05] <pmurias> dlocaus: you could try taking the code structure from Emit::Perl5

[21:06] <pmurias> no, that would not be a good idea

[21:07] <dlocaus> pmurias: why not?

[21:07] <dlocaus> pmurias: the perl6 backend is supposed to produce valid perl.  Ergo, compiling perl6 into perl6 should produce code that kp6 can execute.

[21:08] <pmurias> i meant taking the structure from Emit::Perl5

[21:08] <dlocaus> pmurias: oh.

[21:09] <pmurias> it might be worth automating the kp6 -Bperl6 test.pl | kp6 process

[21:09] <dlocaus> pmurias: that is what I'm doing now

[21:10] <pmurias> ah

[21:12] <pmurias> dlocaus: do you want me to to the Sub.emit_perl6 for you?

[21:12] <dlocaus> pmurias: sure, if you can do that, that would be great!

[21:12] <dlocaus> pmurias: I looked at the documentation S06? for subs and my brain freaked out.

[21:12] *** cognominal_ joined
[21:17] <[particle]> once your brain is warped by perl 6, there's no turning back.

[21:18] <dlocaus> [particle]: I hope not.  That would mean I wouldn't be able to get a job until perl6 is done.

[21:23] <[particle]> well, you may be able to work with ancient tools like perl 5, but you won't like it

[21:24] *** Lorn left
[21:26] <dlocaus> ;)

[21:26] <dlocaus> perl 5.10 + Perl6::*

[21:31] <pmurias> ruby ;)

[21:31] *** HiTech69 left
[21:33] <pugs_svn> r19158 | pmurias++ | [kp6] very simplified and not fully working support for subs in Emit::Perl6 (per dlocaus request)

[21:33] <pmurias> dlocaus: comitted something basic

[21:33] *** cognominal_ left
[21:35] <avar> 2

[21:35] <dlocaus> pmurias: checking

[21:35] <pmurias> avar: 2 means?

[21:36] <[particle]> probably means wrong window :)

[21:38] <pugs_svn> r19159 | dlo++ | [kp6] Added Lit::Char

[21:41] *** pmurias left
[21:46] *** Aankhen`` left
[22:13] *** pbuetow left
[22:18] <pugs_svn> r19160 | dlo++ | [kp6] I have cleaned up -B or --backend= option for script/kp6

[22:18] <pugs_svn> r19160 | dlo++ | 

[22:18] <pugs_svn> r19160 | dlo++ | I have also added script/perl6_to_perl6.pl which will execute a file as in

[22:18] <pugs_svn> r19160 | dlo++ | 

[22:18] <pugs_svn> r19160 | dlo++ | script/kp6 --backend=perl6 myPerl6TestFile.t | script/kp6

[22:18] <pugs_svn> r19160 | dlo++ | 

[22:18] <pugs_svn> r19160 | dlo++ | This makes sure that the perl6 backend produces valid perl6 code.  

[22:18] <pugs_svn> r19160 | dlo++ | 

[22:18] *** pbuetow joined
[22:18] <pugs_svn> r19160 | dlo++ | perldoc script/perl6_to_perl6.pl for more information.

[22:18] <pugs_svn> r19160 | dlo++ | 

[22:18] <pugs_svn> r19160 | dlo++ | Also.  perl script/run_tests.pl --backend=perl6 

[22:18] <pugs_svn> r19160 | dlo++ | will execute all test cases via perl6_to_perl6.pl

[22:18] <pugs_svn> r19160 | dlo++ | 

[22:18] <dlocaus> @karma dlo

[22:18] <lambdabot> dlo has a karma of 167

[22:18] <pugs_svn> r19160 | dlo++ | dlocaus @ #perl6 irc.freenode.net

[22:19] <Auzon> If you revert, do you get a --? ;)

[22:19] <dlocaus> I don't know..  I've never reverted code.

[22:20] <dlocaus> I've always svn cat -r( old version) files; svn commit -m " more karma " files;

[22:20] <Auzon> heheh

[22:20] <dlocaus> @karma fglock

[22:20] <lambdabot> fglock has a karma of 427

[22:23] *** polettix joined
[22:27] *** pbuetow left
[22:28] *** pbuetow joined
[22:29] *** lichtkind left
[22:32] *** elmex left
[22:41] *** drbean left
[22:58] *** amnesiac left
[23:13] *** BinGOs_ joined
[23:16] *** ferreira joined
[23:16] *** BinGOs left
[23:23] *** columbus joined
[23:24] *** TJCRI left
[23:36] *** jferrero joined
[23:39] *** columbus left
[23:47] *** justatheory left
[23:56] *** ferreira left
