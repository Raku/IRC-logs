[00:01] *** justatheory left
[00:06] *** Limbic_Region left
[00:11] *** weinig_ left
[00:20] *** justatheory joined
[00:22] *** devogon left
[00:25] *** [particle1 joined
[00:28] *** thorat left
[00:35] *** REPLeffect left
[00:35] *** REPLeffect_ joined
[00:40] *** [particle] left
[00:44] *** dduncan left
[00:49] *** dduncan joined
[00:57] *** q{-oo-}p left
[01:11] *** nipotaway is now known as nipotan

[01:17] *** buetow left
[01:21] *** thoughtpolice left
[01:23] *** drbean joined
[01:28] *** REPLeffect_ left
[01:39] *** weinig left
[01:53] *** Jamtech joined
[02:03] *** nixfu left
[02:10] *** justatheory left
[02:14] *** weinig joined
[02:26] *** DarkWolf84 joined
[02:34] *** hoowa joined
[02:37] *** pasteling joined
[02:41] *** rfordinal_ joined
[02:43] *** rfordinal left
[02:44] *** Jamtech left
[02:44] *** jbwiv joined
[02:45] <jbwiv> guys, I'm sure this is an oft asked question...but is there any slight hint of a date when perl 6 might be released? Say, before 2010?

[02:48] *** rashakil joined
[02:52] <Tene> jbwiv: it will be released sooner if you help... want a commit bit for the svn repository?

[02:53] *** |Jedai| joined
[02:55] <araujo> jbwiv, i heard that every time someone asks when perl 6 will be released, this is delayed 6 months , 6 weeks, 6 days more

[03:01] <diakopter> jbwiv: more importantly, I'm severely curious why you're interested in when an implementation of Perl 6 will be released.  Do you have a particular business decision you're making, and perhaps considering Perl 5 or 6?

[03:01] *** rfordinal_ left
[03:01] *** rfordinal_ joined
[03:10] *** jedai left
[03:12] <pmichaud> I'm working on it, really! :-)

[03:12] <TimToady> I'm just listening to pudge.

[03:12] *** jbwiv left
[03:13] <Tene> I'm surprised by how little development has happened since audreyt hasn't been around.

[03:18] <Zoffix> What kind of work do you need "help" with?

[03:18] <Zoffix> I am not THAT good with Perl more of a web guy

[03:20] <Tene> Zoffix: something that would be very helpful would be if someone would write up a spec for web libraries for Perl 6.

[03:20] <diakopter> Zoffix: what other language(s) do you know (if any)?

[03:20] <Tene> Or at least expand on Juerd's proposal.

[03:21] * Zoffix realizes that he won't be of much help .... :)

[03:21] <Tene> Zoffix: http://svn.pugscode.org/pugs/ext/HTTP/docs/ -- take a look at these two docs here.

[03:21] * Zoffix looks

[03:23] <diakopter> Zoffix: ah, you're a CSS guy.

[03:24] <Alias_> oh dear

[03:24] <Tene> Zoffix: oh, you do actual web stuff, not perl stuff that creates web stuff?

[03:24] <Alias_> I look at that web motivations thing and I see second-system syndrome all over again

[03:24] * Tene misunderstood.

[03:24] <Alias_> I have libraries that do what he describes

[03:24] <Alias_> And they are fairly chunky

[03:25] <Tene> Alias_: perhaps you could speak about those thoughts for a bit?

[03:25] <Alias_> I tried this several times

[03:25] <Alias_> Took me 2 or 3 attempts

[03:26] <Zoffix> diakopter, pretty much ( zoffix.com && haslayout.net ) I know CSS/HTML really well, a bit of JS. Coded some Python and C++ in the past but don't remember a thing. Been coding in Perl for about a year.

[03:26] <Alias_> What I found was that simplistic sticky fields was fairly naive

[03:26] <Alias_> Doing is right was far trickier

[03:26] <Alias_> it

[03:26] <Alias_> For example

[03:27] <Alias_> Lets say you have a series of options, radio buttons

[03:27] <Tene> CGI::FormBuilder has a pretty good implementation of part of it, at least.

[03:27] <Alias_> If you are editing an existing record, you NEED the current value to be an option, even if it's not in the list

[03:27] <Tene> *nod*

[03:27] <Alias_> That means you really are treating the entire cluster as a single thing

[03:27] <Alias_> Also, those things naturally trend to classes

[03:28] <Alias_> Where the class is responsible for BOTH taking a piece of data and turning it into HTML

[03:28] <Alias_> And then taking the result fragment of CGI fields and looping it back into the data

[03:28] <Alias_> And error checking it

[03:28] <Alias_> And that single class can throw a piece of data around the data->HTML->browser->CGI->data as many times as it likes

[03:29] <Alias_> in my case I have data->view, data->edit, cgi->data

[03:29] <Alias_> And an intermediate form for things like three-dropdown date selectors, where they don't select all three

[03:29] <Alias_> Which would be the object itself really

[03:29] <Alias_> $object = WidgetClass->from_cgi

[03:29] <Alias_> if ( $object->error_messages ) etc

[03:30] <Alias_> So in my web apps, I've accumulated all these neat hybrid classes

[03:30] * diakopter tries to figure out what in the world Alias_ is talking about

[03:30] <Alias_> Like Widget::AU::DriversLicense

[03:30] <Alias_> (composite state dropdown with validates textfield attached)

[03:30] <Tene> diakopter: Juerd's Web proposal is full of Second System Syndrome, according to Alias_.

[03:30] <Alias_> Or Widget::Human::EyeColour

[03:30] <Alias_> And so on

[03:31] <Tene> diakopter: and I asked him for details.

[03:31] <Alias_> I think his motivations suggest solving those problem too close to the basic library layer

[03:31] *** rashakil left
[03:31] <Alias_> My widget library solves the hard stuff, but it uses HTML generators and stuff underneath it

[03:31] <Alias_> They aren't linked together

[03:31] <diakopter> ahhh... those documents.

[03:32] <Alias_> I also needed a fairly complex role-based inheritance structure to make it all work

[03:32] <Alias_> Because you have widgets that have context, or vary based on other widgets etc

[03:32] <Alias_> some need embedded javascript

[03:32] <Alias_> I have a widget that needs a thumbnailing module :)

[03:33] <Alias_> And one that has to check for client flash support

[03:33] <Alias_> etc

[03:33] <Alias_> (That would be Widget::Media::URI::MP3Player btw)

[03:34] *** offby1 left
[03:34] <Alias_> If we're going to solve problems in the Perl 6 web library, it's best to really solve the tricky stuff that spans entire sets of things

[03:34] <Alias_> like HTML vs XHTML contexts and what have you

[03:34] <Alias_> Doing CGI, just the CGI bit, strictly correctly

[03:35] <Alias_> Most of the problems with CGI.pm come from various attempts to join CGI to HTML

[03:35] <Alias_> sticky fields being one

[03:36] <Alias_> God sessions

[03:36] <Alias_> Another nasty problem

[03:36] <Alias_> sessions in shared memory? on disk databases? in the main database?

[03:36] <Alias_> what if my sesions need some special modality

[03:36] <Alias_> Or the need to straddle a cluster

[03:36] * Tene leaves himself a note to return tomorrow and compile this set of thoughts into a document of some sort.

[03:37] <Alias_> The best thing you could possibly do, is solve the seperate problem domains seperately

[03:37] <Alias_> And don't play favourites and built-in functionality games when it comes to the hard stuff

[03:38] <Alias_> About the only new feature I'd like to see in a CGI app, is the idea of a subform

[03:38] <Alias_> Where you name your CGI fields, say, "foo.name", "foo.address", etc

[03:39] <Alias_> And you can go CGI->new->subform('foo') and you get a subset of the fields

[03:39] <Alias_> with the prefix stripped/ignored

[03:39] <Tene> And that's not really anything core... that's pretty trivial to add on top of any correct implementation.

[03:39] <Alias_> Something like that I've found useful and complementary to CGI

[03:39] <Alias_> Tene: Indeed

[03:39] <Alias_> I've written it 3 times :)

[03:39] <Tene> Exactly.

[03:39] * Tene goes to bed.

[03:39] <Alias_> night

[03:40] *** [particle] joined
[03:40] * Tene will read scrollback tomorrow.

[03:42] * diakopter will flood the scrollback with commits

[03:48] *** perlDreamer joined
[03:49] *** [particle1 left
[03:50] <diakopter> welcome, perlDreamer

[03:51] <perlDreamer> hola

[03:52] <pugs_svnbot> r17132 | diakopter++ | initial stub of a feather-only svnbot plugin for Botnix, a multi-nick, multi-network, multi-channel, event-driven Perl 5 ircbot.  We'll see how it goes

[03:52] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17132

[03:52] <lambdabot> Title: Changeset 17132 - Pugs - Trac

[03:54] *** justatheory joined
[04:06] *** weinig left
[04:06] <pugs_svnbot> r17133 | perlDreamer++ | Remove old comments from top of file.

[04:06] <pugs_svnbot> r17133 | perlDreamer++ | Uncuddle the elsif.

[04:06] <pugs_svnbot> r17133 | perlDreamer++ | Fix the typos for the template line inside init.

[04:06] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17133

[04:06] <lambdabot> Title: Changeset 17133 - Pugs - Trac

[04:11] *** justatheory left
[04:12] <Alias_> Tene: One thing I do agree with Juerd on though is that there should be a way to say things like "use utf8" or "use xhtml" once

[04:13] *** amnesiac joined
[04:14] *** weinig joined
[04:16] <Alias_> (not necesarily in terms of "use" module loading of course)

[04:20] *** Jamtech joined
[04:21] *** Jamtech left
[04:26] *** mako132 joined
[04:29] *** hoowa left
[04:29] *** unobe is now known as unobe_away

[04:30] *** layon joined
[04:32] <layon> Hi! I need to extract attached files from mails, RFC 822 mail text, more exacly

[04:32] <diakopter> layon: great! :)

[04:33] <diakopter> Perl 6 would be good for that.

[04:33] <layon> I know how to "separate" the attached file from mails, but I need get the mail without the attach....

[04:34] <layon> diakopter, can you help me?

[04:34] <diakopter> layon: which implementation of Perl 6 are you using?

[04:35] <layon> I use GNU/Linux

[04:36] <diakopter> layon: hm. are you in the right channel?

[04:36] <diakopter> This is the channel for Perl 6.

[04:39] <layon> perhaps I`m wrong....

[04:39] <layon> I use perl 5, but think here can found some help......sorry

[04:44] <torz> if you look at the channel name once more you will notice that you're wrong

[04:44] *** mako132 left
[04:44] <torz> hmmm

[04:44] <torz> yawn

[04:44] <diakopter> layon: no problem.  Good luck stripping attachments from emails.

[04:44] *** mako132 joined
[04:47] *** layon left
[04:51] <pugs_svnbot> r17134 | perlDreamer++ | Add a method to interpolate the template for svnbot.

[04:51] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17134

[04:51] <lambdabot> Title: Changeset 17134 - Pugs - Trac

[05:00] *** |Jedai| left
[05:06] <pugs_svnbot> r17135 | perlDreamer++ | Instrument the template interpolator with a cache for reading

[05:06] <pugs_svnbot> r17135 | perlDreamer++ | template files.

[05:06] <pugs_svnbot> r17135 | perlDreamer++ | Take some care to make sure the template cache doesn't stomp

[05:06] <pugs_svnbot> r17135 | perlDreamer++ | on itself.

[05:06] <pugs_svnbot> r17135 | perlDreamer++ | Fix a few typos and syntax errors.

[05:06] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17135

[05:06] <lambdabot> Title: Changeset 17135 - Pugs - Trac

[05:12] *** ednarofi left
[05:15] *** unobe_away is now known as unobe

[05:15] *** kanru joined
[05:21] *** perlDreamer left
[05:24] *** jisom joined
[05:25] *** weinig left
[05:43] *** devogon joined
[05:46] *** kanru left
[05:51] *** nixfu joined
[05:52] *** weinig joined
[05:55] *** ednarofi joined
[05:55] *** kanru joined
[06:20] *** nixfu left
[06:23] *** cognominal_ left
[06:30] *** dduncan left
[06:31] *** iblechbot joined
[06:35] *** jisom left
[06:41] *** mako132 left
[06:58] *** ednarofi left
[06:59] *** ednarofi joined
[07:00] *** franck___ joined
[07:07] *** amnesiac left
[07:49] *** funktio joined
[07:49] *** masak joined
[07:50] *** funktio left
[07:52] <kane__> szbalint: no, it's not online, but the npw, lpw or yapc::eu may have recorded it

[07:55] *** ednarofi left
[07:56] *** ednarofi joined
[07:58] *** weinig left
[08:04] *** buetow joined
[08:09] *** zamolxes joined
[08:19] *** drupek12 left
[08:20] *** beppu left
[08:20] *** Alias__ joined
[08:25] *** beppu joined
[08:25] *** riffraff joined
[08:29] *** iblechbot left
[08:30] *** cognominal_ joined
[08:34] *** beppu left
[08:34] *** Alias_ left
[08:34] *** beppu joined
[08:41] *** DarkWolf84 left
[08:52] *** nekokak left
[08:58] *** rho joined
[09:01] *** elmex joined
[09:10] *** nekokak joined
[09:12] *** cognominal__ joined
[09:13] *** riffraff left
[09:16] *** buetow left
[09:18] *** cognominal_ left
[09:21] *** cognominal__ left
[09:38] *** sunnavy joined
[09:44] *** riffraff joined
[09:45] *** BinGOs_ joined
[09:46] *** BinGOs left
[09:47] *** BinGOs_ is now known as BinGOs

[09:51] *** alexe joined
[09:51] *** chris2 joined
[09:53] *** zamolxes left
[10:04] <Juerd> 05:24 < Alias_> I look at that web motivations thing and I see second-system syndrome all over again

[10:04] <Juerd> Alias__: Ehm, it's just a Perl6-ish redesign of LWP and CGI.pm

[10:05] <Juerd> Alias__: Not adding any new feature - just restructuring, and changing syntax to something that is more Perl 6-ish (and IMO better)

[10:05] <Juerd> Alias__: How is it 2nd system like?

[10:06] <Alias__> The sticky stuff should never have existed in CGI.pm the first time, sessions get done differently all over the place...

[10:06] *** Yaakov left
[10:06] <Juerd> Alias__: I disagree about stickiness. For the simple cases, it's very useful. As for sessions, I'd like to learn how they should be done

[10:07] <Juerd> Alias__: Note that I think stickiness should be off by default, but it could easily be added afterwards with a role.

[10:07] <Juerd> Alias__: As for setting an option in a radio group that doesn't have that option - can be a fatal error for all I care :)

[10:07] <Alias__> Sessions are going to need to be done very differently depending on the web model

[10:08] *** rindolf joined
[10:08] <Juerd> Alias__: How?

[10:08] <Alias__> If you are doing it on a single machine, you can use fast stuff in shared memory, others use local DBM, the session might need to be in the database...

[10:08] <Alias__> then there's clusters

[10:09] <Alias__> Stuff that works in an async environment

[10:09] <Juerd> Anyway, my strongest points are that you shouldn't have to repeat yourself, that get and post should be separated, and that we should have hash-like interfaces where hash-like interfaces make sense.

[10:09] <Juerd> All the rest is negotiable (this is too, but I'm less likely to be convinced)

[10:09] <Alias__> I totally agree with the HTML vs XHTML and the unicode thing

[10:10] <Alias__> The sticky stuff I've found completely pointless, because the implementation is so utterly trivial

[10:10] <Juerd> But that's where the sessions are *stored*. I don't think I even touched that subject.

[10:10] <Alias__> I don't like linking the HTML and CGI sides of the problem

[10:10] <Juerd> I only said that there should be a default that works out of the box, regardless of performance.

[10:10] <Alias__> They are intrinsically orthogonal problems

[10:10] <Juerd> Alias__: Yes, but if they talk to eachother, that can be useful

[10:11] <Alias__> OR, the next layer up can use them both

[10:11] <Juerd> HTML::Form.new( use_for_defaults => $request ); suffices.

[10:12] <Alias__> ugh

[10:12] <Alias__> stinks of bloat to me

[10:12] *** sunnavy left
[10:13] <Juerd> If this already looks like bloat to you, then our disagreement is rather fundamental

[10:13] <Juerd> You seem to say that default values based on the current request must not be possible

[10:13] <pugs_svnbot> r17136 | fglock++ | [kp6] added tests for the Prelude (still fail)

[10:13] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17136

[10:13] <lambdabot> Title: Changeset 17136 - Pugs - Trac

[10:14] <Juerd> Whereas I think it's absolutely necessary, to provide an upgrade path from Perl 5's CGI.pm

[10:14] *** fglock joined
[10:14] <Alias__> HTML::Sticky.new( cgi => $cgi, form => HTML::Form.new() );

[10:14] <Juerd> Doesn't have to be in the same toolkit, doesn't have to be enabled by default, doesn't even have to have ultra-nice syntax. But it *must* be available, and it must work with the standard web toolkit.

[10:14] <Juerd> Alias__: Perfect.

[10:15] * Alias__ is big on layers not getting above themselves :)

[10:15] <Juerd> Alias__: I think you've misunderstood my posts. The code is for illustration, and I haven't even posted any code about stickiness anyway.

[10:16] <Alias__> I didn't get to the code :)

[10:16] <Juerd> I've just said that it's useful, and must be available - can't see how that's second system syndrome.

[10:16] <Alias__> Most of the hard work I do lately pretty much hangs on stuff like motivations :)

[10:16] <Juerd> Can you explain why you think it's bloated?

[10:16] <Alias__> Juerd: It was the "we can do better, and provide functionality for this and this and this"

[10:17] <Alias__> I had a dark feeling of "like CGI.pm, but bigger!"

[10:17] <Alias__> Or something vaguely like that

[10:17] <Juerd> Alias__: That's because it has to be, at least somewhat, like CGI.pm, in the grand scale. CGI.pm is used a lot, and all its useful features need to be provider, if people are ever going to adapt the new stuff.

[10:17] <Alias__> ya

[10:17] <Juerd> Alias__: The interface and implementation, however, can be radically different.

[10:18] <Juerd> And I think I said that :)

[10:18] <Juerd> Most important to me is that it works out of the box, and is much better designed that CGI.pm

[10:19] <Alias__> hear hear

[10:19] <Juerd> And indeed, HTML generation, including stickiness, is *not* part of a CGI framework, that's why I called it Web, not CGI :)

[10:19] <Juerd> Web::* is a bunch of smart wrappers around HTTP::* and HTML::*, in my mind.

[10:20] <Juerd> And, if HTTP and HTML are no longer the world wide defaults, then it can easily be changed to support other techniques

[10:21] <Juerd> But if at first you just get a raw HTTP::Request object, fine

[10:21] <pugs_svnbot> r17137 | fglock++ | [kp6] match stringification works; but doesn't load Prelude correctly

[10:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17137

[10:21] <lambdabot> Title: Changeset 17137 - Pugs - Trac

[10:21] <Juerd> LWP is mostly very well designed - there's no reason its class structure couldn't be copied over and reused

[10:21] <Juerd> And I think it's a bit weird that we're not already widely using it in Perl 5 web development :)

[10:22] *** lisppaste3 left
[10:22] <Alias__> indeed

[10:22] <Alias__> It just beed to be better maintained

[10:22] <Juerd> An HTTP request object is great on the client side as well as on the server side

[10:22] <Alias__> gisle doesn't exactly give it much attention any more

[10:22] <Juerd> Well, for Perl 6, it needs minor redesign anyway

[10:23] <Juerd> I don't want to set headers with methods, or grab form variables with methods.

[10:23] <Juerd> We can build ordered hashes and hybrid array/scalar values, and we should

[10:23] <Juerd> Build that once, and it'll be useful all over the CPAN :)

[10:24] <Alias__> uuhhh...

[10:24] <Juerd> At least for everything that vaguely resembles mime headers :)

[10:24] <Alias__> if there's no methods, how do you overload and emulate stuf

[10:24] <Alias__> I want the simplest possible solution

[10:24] <Alias__> And most extensible

[10:24] <Juerd> There can be methods

[10:25] <Juerd> The array/scalar thing is just a role an object can have

[10:25] <Juerd> Same for the ordered hash thing.

[10:25] <Alias__> ordered hash thing is tricky

[10:25] <Juerd> "does Hash" just gives your object a bunch of methods, like .keys, .values, and .{} and .<>

[10:25] <Juerd> Why?

[10:25] <Alias__> Because the CGI params aren't really an ordered hash

[10:26] <Juerd> Er, yes they are :)

[10:26] <Alias__> foo=1;bar=2;foo=3

[10:26] <Alias__> Turn that into an ordered hash and you've got information loss

[10:26] <Juerd> Much less than when .param() is your only entry.

[10:26] <Juerd> What data would be lost, except the semicolons?

[10:26] <Alias__> seen the internals? :)

[10:26] <buubot> Alias__: Sorry, I haven't seen the

[10:27] <Juerd> Oh, I get it -- you're talking about having to choose between "foo is an array" and "foo is two values"?

[10:27] <Alias__> ya

[10:27] <Juerd> I think that should be a user decision. Obviously one can't have both.

[10:27] <Alias__> Either a list of pairs, or an ordered list, or an unordered list

[10:28] <Alias__> The most literal version is a list of pairs

[10:28] <Juerd> Yes, but that'd be detached from common use 

[10:28] <Juerd> I think that in practice, the fact that bar=2 was before foo=3 doesn't matter in more than 99% of all webapps.

[10:29] <Juerd> Ordering is necessary within headers/formvars of the same key only

[10:29] <Juerd> I think a normal hash would suffice even

[10:29] <Juerd> As long as the values are scalar/array hybrid

[10:30] <Alias__> hmm

[10:30] <Juerd> In any case, I think we agree on most things

[10:30] <Alias__> objects, removed, just checked the structure of the CGI.pm internals

[10:30] <Alias__> objection removed

[10:30] <Juerd> Let's put this stuff on a wiki soon and hack on it

[10:30] <Alias__> rather

[10:31] <Juerd> I can reformat my post "Web development I: Web::Toolkit" as a bullet point wishlist

[10:31] <Juerd> Then the individual points can be molded into the right shape

[10:31] *** lisppaste3 joined
[10:35] *** iblechbot joined
[10:35] *** ednarofi left
[10:40] *** ednarofi joined
[10:40] *** Alias__ left
[10:59] *** nipotan is now known as nipotaway

[11:05] *** riffraff left
[11:09] *** cognominal_ joined
[11:16] *** cmarcelo joined
[11:17] *** ruoso joined
[11:21] *** cognominal_ left
[11:26] *** fglock_ joined
[11:28] *** cognominal_ joined
[11:29] *** rho left
[11:32] *** cognominal_ left
[11:37] *** ruoso left
[11:38] *** masak left
[11:38] *** fglock left
[11:38] *** ruoso joined
[11:46] * Jmax coughs

[11:46] <Jmax> any prelimenary work done on pod2.0 ?

[11:46] <Jmax> I wish pod had tables :)

[11:47] *** masak joined
[11:51] *** cognominal_ joined
[11:51] *** Southen joined
[11:52] *** cognominal_ left
[11:54] <fglock_> hmm - if I inline the kp6 Prelude into a program, it works - but it fails when "use"d

[11:54] <fglock_> it's time to get "use" properly implemented

[11:57] <masak> fglock_: any idea why it fails?

[11:58] <fglock_> masak: not yet - the initialization seems to be working in the right order

[11:58] <masak> ok

[11:58] <masak> any tests say anything about use?

[11:59] <fglock_> t/kp6/30-prelude-match.t fails if the 'use' is uncommented

[12:01] * masak svns up

[12:01] <meppl> hello

[12:01] <masak> meppl: hi there

[12:02] <fglock_> meppl: hey

[12:02] <meppl> hello masak and fglock

[12:31] *** rindolf left
[12:43] *** mncharity joined
[13:02] *** rho joined
[13:03] *** mako132 joined
[13:06] <avar> Jmax: pod2 has tables

[13:06] *** larsen joined
[13:07] *** orafu left
[13:48] *** Grrrr left
[13:48] *** frobnitz joined
[13:49] *** cognominal_ joined
[13:55] *** cognominal_ left
[13:55] *** polettix joined
[14:21] *** mako132 left
[14:22] *** TJCRI joined
[14:23] *** daxim_ joined
[14:28] *** aindilis` joined
[14:28] *** aindilis` left
[14:32] *** daxim left
[14:32] *** daxim_ is now known as daxim

[14:33] *** iblechbot left
[14:36] *** alexe left
[14:40] <pugs_svnbot> r17138 | fglock++ | [kp6] working Perl6::Prelude

[14:40] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17138

[14:40] <lambdabot> Title: Changeset 17138 - Pugs - Trac

[14:41] *** sunnavy joined
[15:00] *** cheeseeater joined
[15:01] *** Blwood joined
[15:01] *** cheeseeater left
[15:34] *** amnesiac joined
[15:42] *** mako132 joined
[15:43] *** franck___ left
[15:52] <pugs_svnbot> r17139 | fglock++ | [kp6] '$_' and '$/' are not 'GLOBAL' 

[15:52] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17139

[15:52] <lambdabot> Title: Changeset 17139 - Pugs - Trac

[15:53] *** Blwood left
[15:58] *** penk joined
[16:01] <pugs_svnbot> r17140 | fglock++ | [kp6] v6/docs/kp6-roadmap.pod - phase 4 is marked as started

[16:01] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17140

[16:01] <lambdabot> Title: Changeset 17140 - Pugs - Trac

[16:03] *** polettix left
[16:04] * moritz_ updates the HTML version

[16:04] *** moritz_ is now known as moritz

[16:05] <moritz> somehow the git mirror doesn't work as I expected

[16:05] <lambdabot> moritz: You have 1 new message. '/msg lambdabot @messages' to read it.

[16:10] *** elmex left
[16:10] <moritz> lambdabot: I know, I backlog... ;)

[16:11] *** sunnavy left
[16:11] <TimToady> hard to backlog and listen to Tim O. at the same time...

[16:13] <moritz> TimToady: that's why we hilight you if there's something important ;)

[16:14] <TimToady> I've yet to see a hilighter that could distinguish my important ideas from my blatherations. :)

[16:14] <moritz> filter it through perlmonks.org ;)

[16:17] <pugs_svnbot> r17141 | fglock++ | [kp6] added tests for Capture

[16:17] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17141

[16:17] <lambdabot> Title: Changeset 17141 - Pugs - Trac

[16:22] *** Yappo left
[16:23] *** masak left
[16:32] *** franck___ joined
[16:34] *** ashleyb joined
[16:43] *** flummox joined
[16:46] *** cmarcelo left
[16:47] *** flummox left
[16:49] *** iblechbot joined
[16:50] *** [particle1 joined
[17:01] <diakopter> kayak.com is my favorite screen-scraper

[17:03] *** weinig joined
[17:10] * moritz thinks about tags/labels that could be attached to conversations in the irc logs

[17:10] *** kanru left
[17:12] *** moritz left
[17:12] *** moritz joined
[17:12] *** moritz left
[17:12] <diakopter> moritz: my last comment would get the "OSCON lurker/troll" label.

[17:12] *** kanru joined
[17:15] <diakopter> any other OSCONers want to share what session(s) they're attending this morning and the rest of today?

[17:16] *** mako132 left
[17:16] *** [particle2 joined
[17:17] *** moritz_ joined
[17:17] <diakopter> I'll be in the "herding cats" talk right now... or in the virtual hallway track.

[17:18] *** fglock_ left
[17:19] *** [particle1 left
[17:22] *** [particle1 joined
[17:25] *** orafu joined
[17:28] <Jmax> avar: nice

[17:28] <diakopter> Jmax: what do you mean by Pod2.0?

[17:29] <Jmax> i mean the p6 version of pod

[17:29] <Jmax> i was simply using a cute name for it!

[17:29] <diakopter> Jmax: there's currently quite a big blocking controversy occuring on the mailing lists regarding exactly that...

[17:29] <Jmax> the name?

[17:30] <diakopter> a controversy that's blocking further progress, I mean

[17:30] * rho is away: getting ice cream

[17:30] <diakopter> no, the format itself

[17:30] <Jmax> oh, I see

[17:37] *** [particle2 left
[17:37] *** revdiablo left
[17:37] *** revdiablo joined
[17:41] *** jisom joined
[17:48] *** mako132 joined
[17:49] *** [particle2 joined
[17:50] <bcmb> I can't seem to get pugs to build with parrot embedded, any ideas?

[17:51] <diakopter> bcmb: I don't think that configuration currently works anywhere.

[17:53] *** [particle3 joined
[17:53] *** [particle2 left
[17:56] <bcmb> diakopter, thanks ... today was the first time that I tried that

[17:56] <diakopter> bcmb: may I ask if you have a pugs commit bit yet?

[17:56] *** [particle2 joined
[17:57] *** Psyche^ joined
[17:57] <bcmb> not yet ... I was looking over the todo list and I think that I could help with getting some of the smart links setup

[17:57] <diakopter> aside: I suspect that half the macbooks Apple has ever made are in Portland, OR at the moment.

[17:58] <diakopter> bcmb: great! PM me your email address and preferred svn username :)

[17:58] <moritz_> diakopter: did you check in your todo list from http://moritz.faui2k3.org/irclog/out.pl?channel=perl6;date=2007-07-19#id_l437 somewhere?

[17:59] <lambdabot> Title: IRC log for #perl6, 2007-07-19, http://tinyurl.com/2erfo8

[17:59] <diakopter> (private message, I mean).  Or just put it here in the channel if you don't care about spam to that address, or have excellent filtering, etc.

[17:59] <diakopter> moritz: no, but I'm learning lots at oscon that is putting those ideas in flux... 

[18:00] <diakopter> bcmb: invitation sent :)

[18:01] <diakopter> moritz: (the usual featuritis and scope creep and idealism over pragmatism)

[18:01] <moritz_> diakopter: I know that ;)

[18:01] <bcmb> diakopter, got it ... thanks

[18:02] <moritz_> http://www.perlmonks.org/?node_id=628746 <-- I wrote my first meditation on pm, about contributing to perl6

[18:02] <lambdabot> Title: Getting Involved with Perl 6

[18:02] *** [particle1 left
[18:03] *** breinbaas joined
[18:05] *** rindolf joined
[18:05] <diakopter> bcmb: you're already familiar with the Synopses? :)

[18:06] <bcmb> diakopter, I've been reading through them in my spare time the last few days

[18:07] *** franck____ joined
[18:09] *** Patterner left
[18:09] *** Psyche^ is now known as Patterner

[18:11] *** [particle3 left
[18:15] *** franck___ left
[18:18] *** zamolxes joined
[18:24] *** daxim left
[18:25] *** mako132 left
[18:32] *** justatheory joined
[18:32] *** masak joined
[18:32] * rho is back

[18:33] *** rho left
[18:36] *** penk left
[18:40] *** mako132 joined
[18:41] *** [particle1 joined
[18:42] *** mako132 left
[18:44] *** [particle3 joined
[18:44] *** awwaiid left
[18:45] *** awwaiid joined
[18:46] *** TJCRI left
[18:47] *** TJCRI joined
[18:47] *** mako132 joined
[18:48] *** kanru left
[18:48] *** kanru joined
[18:49] *** kanru left
[18:49] *** kanru joined
[18:50] *** [particle2 left
[18:54] *** weinig_ joined
[18:57] *** Jmax left
[19:01] *** [particle1 left
[19:01] *** barney joined
[19:04] *** weinig left
[19:11] *** weinig_ left
[19:11] *** weinig joined
[19:16] *** Yappo joined
[19:16] *** mako132 left
[19:22] *** chris2 left
[19:24] *** elmex joined
[19:35] *** justatheory left
[19:36] *** weinig left
[19:37] *** [particle3 left
[19:40] *** dduncan joined
[19:51] *** Jamtech joined
[19:51] *** rindolf left
[19:52] *** ruoso left
[19:57] *** Jmax joined
[19:59] *** ednarofi left
[20:04] *** jisom left
[20:07] *** franck____ left
[20:08] *** mako132 joined
[20:11] *** justatheory joined
[20:12] *** daxim joined
[20:16] *** barney left
[20:31] <meppl> good night

[20:32] <moritz_> sleep well, meppl ;)

[20:33] <meppl> ;)

[20:36] *** mako132 left
[20:36] <masak> meppl: night

[20:40] <meppl> ;)

[20:41] *** F7 joined
[20:41] *** mako132 joined
[20:47] *** [particle1 joined
[20:50] *** TJCRI left
[20:54] *** [particle2 joined
[20:57] *** miyagawa left
[21:00] *** miyagawa joined
[21:00] *** iblechbot_ joined
[21:03] *** buetow joined
[21:06] *** devogon left
[21:07] *** devogon joined
[21:08] *** thepler left
[21:08] *** weinig joined
[21:10] *** [particle1 left
[21:11] <diakopter> TimToady: hilight! :)   SPJ (paraphrased) - "If the language is too wide-ranging [permissive?] the compiler has no chance of optimization." (referring to design choices in Data-Parallel Haskell's syntax for denoting Data-parallel arrays)

[21:11] *** xinming left
[21:14] *** Limbic_Region joined
[21:14] *** iblechbot left
[21:18] <TimToady> we did something like that when we made the >><< reversible to indicate dwimminess vs lack of dwimminess

[21:20] *** buetow left
[21:22] *** Eidolos_ joined
[21:23] *** kanru left
[21:31] *** mako132 left
[21:31] <diakopter> TimToady: how was the DBI::Gofer talk?  I think it's interesting that it's getting presented the same year as MySQLProxy (which is similar, but at the transport layer).

[21:33] *** Eidolos left
[21:34] *** mako132 joined
[21:35] *** Eidolos_ is now known as Eidolos

[21:35] *** elmex left
[21:36] * diakopter walks and types

[21:51] *** [particle2 left
[21:55] *** dmq joined
[22:05] *** demq left
[22:05] *** masak left
[22:08] *** Jamtech left
[22:10] *** kanru joined
[22:14] <diakopter> any haskellers around today?

[22:15] <diakopter> (I would like to chat about an alternative idea for approaching P6-on-ghc (other than pugs' current approach).)

[22:15] <wolverian> how much of a haskeller do you want?

[22:15] <wolverian> oh. that much.

[22:15] * wolverian backs off

[22:16] <diakopter> heh

[22:17] <diakopter> wolverian: have you toyed with http://haskell.org/haskellwiki/GHC/As_a_library ?

[22:17] <lambdabot> Title: GHC/As a library - HaskellWiki

[22:17] <wolverian> some time ago, yes. I left it alone due to lack of docs 

[22:17] <wolverian> that was in 6.5 days 

[22:17] <wolverian> oh, the page is a lot better nowadays :)

[22:20] *** justatheory left
[22:20] *** mako132 left
[22:20] <wolverian> hm. I wanted to use it from vim

[22:23] *** larsen left
[22:24] *** iblechbot_ left
[22:32] *** meppl left
[22:32] *** sysdef left
[22:32] *** Eidolos left
[22:32] *** Limbic_Region left
[22:32] *** devogon left
[22:32] *** F7 left
[22:32] *** Yappo left
[22:32] *** pjcj_ left
[22:32] *** toshinori left
[22:32] *** PerlJam left
[22:32] *** wolverian left
[22:32] *** Juerd left
[22:32] *** integral left
[22:32] *** theorbtwo left
[22:32] *** JarJarBinks left
[22:32] *** SubStack left
[22:32] *** mr_ank left
[22:32] *** BooK left
[22:32] *** felipe left
[22:32] *** dvorak left
[22:32] *** statico left
[22:32] *** dwave left
[22:32] *** blblack left
[22:32] *** rhr left
[22:32] *** args left
[22:32] *** sri_ left
[22:32] *** Gothmog_ left
[22:32] *** Gothmog_ joined
[22:32] *** blblack joined
[22:32] *** args joined
[22:32] *** sri_ joined
[22:32] *** rhr joined
[22:32] *** sysdef joined
[22:32] *** GeJ joined
[22:32] *** audreyt_ joined
[22:32] *** clkao joined
[22:32] *** takanori joined
[22:32] *** meppl joined
[22:32] *** dwave joined
[22:32] *** statico joined
[22:32] *** dvorak joined
[22:32] *** felipe joined
[22:32] *** BooK joined
[22:32] *** mr_ank joined
[22:32] *** SubStack joined
[22:32] *** JarJarBinks joined
[22:32] *** theorbtwo joined
[22:32] *** integral joined
[22:32] *** Juerd joined
[22:32] *** wolverian joined
[22:32] *** PerlJam joined
[22:32] *** toshinori joined
[22:32] *** pjcj_ joined
[22:32] *** Yappo joined
[22:32] *** F7 joined
[22:32] *** devogon joined
[22:32] *** Limbic_Region joined
[22:32] *** Eidolos joined
[22:44] *** weinig is now known as fakeolliej2

[22:46] *** amnesiac left
[22:47] *** fakeolliej2 is now known as realweinig

[22:51] *** justatheory joined
[22:53] *** polettix joined
[22:59] *** Yaakov joined
[23:08] *** realweinig left
[23:10] *** weinig joined
[23:11] *** autark_ joined
[23:13] *** mako132 joined
[23:25] *** autark left
[23:27] *** [particle1 joined
[23:33] <diakopter> wolverian: after a 20-min discussion with spj on the topic, he recommends *not* attempting to do either of the two alternatives I was considering, but not for the reasons I would have expected.  Here are my two ideas:

[23:34] <wolverian> diakopter++

[23:34] <Tene> diakopter++

[23:35] <diakopter> what's with the karma-ing? :P

[23:35] <[particle1> diakopter--

[23:35] <[particle1> :P

[23:37] <diakopter> spj++ for being patient with me and willing to address my novice ramblings...

[23:37] <wolverian> and the ideas? :)

[23:38] <diakopter> 1) Implement Perl 6 on top of libGHC as, essentially, a source filter that translated Perl 6 source into some haskell-syntax intermediary form, that included calls to functions imported from some new dynamic-language Haskell module, including a functional edition of PGE/TGE's functionalities.  It would have then fed the translated Haskell source to libGHC.

[23:43] *** kanru left
[23:43] *** kanru joined
[23:49] * Eidolos wonders if it's a joke at Perl 6's expense that diakopter didn't give us #2

[23:50] *** unobe left
[23:50] <diakopter> oops, now I remember, he said that I *could* consider number #2... which was: 2) Implement Perl 6 as a substitute front-end to GHC, that handles the parsing, the type-checking/enforcement, and again, a translation of much of Perl 6's dynamic and "impure" language features to [usages of] new haskell libraries (of mostly new monads, apparently), which emits the result to Core (haskell's lower-level, preferably-functional ...

[23:50] <diakopter> ... intermediary representation).

[23:50] <diakopter> Ediolos: :P

[23:51] <diakopter> Eidolos: :P

[23:51] <wolverian> I wonder how much that would give us over the current approach 

[23:52] <Tene> What's the current approach?

[23:53] <diakopter> anyway, he said that #2 was possible and feasible, because it could reuse lots of GHC's existing Haskell98 front-end... but that of course it's mostly a super-set of #1.

[23:53] <Eidolos> #2 is what Liskell does

[23:53] <Eidolos> well, partly. it does the parsing at least :)

[23:53] <Eidolos> it still defers to ghc on the parsing

[23:54] <Eidolos> it still defers to ghc on the type checking (sigh, I'm tired)

[23:54] <diakopter> wolverian: it would eliminate the bootstrapping step. Suddenly, there's no need to bootstrap, because Perl 6 would be sorta a dialect of Haskell-on-GHC.  GHC would replace Parrot/PGE...

[23:55] <diakopter> no need to bootstrap, and no benefit to bootstrap, I mean.

[23:55] <wolverian> diakopter, oh, right.. haskell 6? :)

[23:59] <diakopter> in addition, it would give Haskell the ability to host/intake the same set of languages that Parrot targets.

