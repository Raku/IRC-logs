[00:05] *** ispy_ left
[00:05] *** theorb joined
[00:07] *** zakame left
[00:14] *** Harleaquin left
[00:16] *** theorbtwo left
[00:18] *** ebassi joined
[00:30] <Limbic_Region> salutations all

[00:33] <Auzon> Hi.

[00:34] *** ebassi left
[00:47] *** khisanth_ joined
[00:49] *** amnesiac left
[00:51] *** Khisanth left
[00:51] *** khisanth_ is now known as Khisanth

[00:54] *** nipotaway is now known as nipotan

[01:00] *** polettix left
[01:01] *** chris2 left
[01:04] *** devogon left
[01:06] *** justatheory left
[01:11] *** funktio joined
[01:20] *** njbartlett_ left
[01:36] *** jferrero joined
[01:37] *** njbartlett joined
[01:43] *** Limbic_Region left
[01:49] *** zakame joined
[02:14] *** Torment joined
[02:17] *** Limbic_Region joined
[02:31] *** Jedai left
[02:41] *** ferreira left
[02:49] *** jjore-m joined
[03:05] *** jonathanturner left
[03:05] *** Limbic_Region left
[03:57] *** jferrero left
[04:03] *** elmex_ joined
[04:19] *** elmex left
[05:12] *** theorb left
[05:12] *** theorbtwo joined
[05:29] *** amnesiac joined
[05:43] *** Psyche^ joined
[05:58] *** Patterner left
[05:58] *** Psyche^ is now known as Patterner

[06:03] *** ispy_ joined
[06:03] *** Ashizawa joined
[06:18] *** thoughtp1lice joined
[06:19] *** thoughtpolice left
[06:19] *** thoughtp1lice is now known as thoughtpolice

[06:28] <obra> seen fglock

[06:28] *** justatheory joined
[06:28] <moritz_> @seen fglock

[06:28] <lambdabot> I saw fglock leaving #perl6 10h 49m 59s ago, and .

[06:38] *** jjore-m left
[06:38] *** thoughtpolice left
[06:40] *** jisom joined
[06:50] *** amnesiac left
[06:58] *** ispy_ left
[07:23] *** justatheory left
[07:24] *** reltuk joined
[07:56] *** jisom left
[08:03] *** BinGOs_ is now known as BinGOs

[08:25] *** Aankhen`` joined
[08:26] *** franck___ joined
[08:34] *** devogon joined
[09:09] *** mattz left
[09:12] *** mattz joined
[09:23] *** xaxxon joined
[09:23] <xaxxon> is it done yet?

[09:24] <xaxxon> duke perl6'em forever

[09:32] *** hcchien left
[09:37] *** BinGOs left
[09:38] *** BinGOs joined
[09:41] <clkao> o/win 4

[09:41] *** drrho joined
[10:24] *** renormalist left
[10:30] *** cmarcelo left
[10:31] *** Ashizawa left
[10:36] *** jferrero joined
[10:59] *** chris2 joined
[11:16] *** cmarcelo joined
[11:18] *** Pox joined
[11:19] * Pox wants his line noise back

[11:19] * moritz_ injects some grey noise into #perl6

[11:20] * Pox basks

[11:20] <Pox> but seriously, perl6 is way too easy to read for non-adepts

[11:21] <moritz_> you can do nice obfuscation with hyperops

[11:21] <Pox> hehe

[11:21] <Pox> even though i have pugs installed

[11:21] <Pox> i'm going to use evalbot

[11:21] <Pox> to be annoying

[11:21] <Pox> ?eval for <a b c> -> $a { say $a }

[11:21] <Pox> wait

[11:21] <Pox> is it in here?

[11:21] <Pox> or am i a noob?

[11:21] <moritz_> @list>>.method() takes some time to get used to

[11:21] <lambdabot> Unknown command, try @list

[11:22] <moritz_> Pox: the original evalbot is gone, the new one has a different syntax

[11:22] <Pox> ah right

[11:22] <Pox> so i'm a noob :P

[11:22] <moritz_> pugs: say "hi, Pox (aka noob;-)"

[11:22] <exp_evalbot> OUTPUT[hi, Pox (aka noob;-)␤]

[11:22] <Pox> pugs: eval for <a b c> -> $a { say $a }

[11:22] <exp_evalbot> OUTPUT[*** ␤    Unexpected "->"␤    expecting operator␤    at /tmp/pmaQwhULdc line 1, column 18␤]

[11:23] <Pox> woo i suck

[11:23] <moritz_> no need for an eval there

[11:23] <moritz_> pugs: for <a b c> -> $a { say $a }

[11:23] <exp_evalbot> OUTPUT[a␤b␤c␤]

[11:23] <Pox> yeah

[11:23] <Pox> i kinda left the eval from the ?eval

[11:24] <Pox> i even suck at IRC

[11:24] <Pox> hmm

[11:24] <moritz_> are you a vacuum cleaner?

[11:24] <Pox> ...yes?

[11:25] <moritz_> that explains why you suck so much

[11:25] <Pox> OH

[11:25] <Pox> LOL

[11:25] <Pox> pugs: say "lo" x 10 ~ "l";

[11:25] <exp_evalbot> OUTPUT[lolololololololololol␤]

[11:25] <Pox> that string multiplication thing is whacky

[11:26] <moritz_> same as in p5

[11:26] <Pox> really!?

[11:26] <moritz_> only that you use xx in p6 for lists

[11:26] <moritz_> while you'd use ($item) x $times in p5 to generate a list

[11:26] <Pox> eoe

[11:26] <Pox> *wow

[11:26] <Pox> didn't know that was in perl5

[11:27] <moritz_> eval: print "foo" x 2

[11:27] <Pox> then again, i probably don't use half of perl5

[11:27] * moritz_ though buubot works like that

[11:27] *** ferreira joined
[11:29] <Pox> pugs: say [*] (2,3)

[11:29] <exp_evalbot> OUTPUT[6␤]

[11:29] *** njbartlett left
[11:29] <Pox> weird syntax is great

[11:30] *** njbartlett joined
[11:30] <Pox> pugs: say [**] (2,2,2,2) # 2 tetrate 4

[11:30] <exp_evalbot> OUTPUT[65536␤]

[11:30] <Pox> hmmk

[11:30] <Pox> i need sleep

[11:30] <Pox> long day of perl hacking tomorrow

[11:30] *** Pox left
[11:47] *** macae joined
[11:49] *** HiTech69 joined
[11:55] *** xaxxon left
[11:56] *** beejeebus joined
[12:01] *** fglock_ joined
[12:01] *** fglock_ is now known as fglock

[12:03] *** chris2 left
[12:05] *** IllvilJa left
[12:11] *** JarJarBinks joined
[12:13] *** chris2 joined
[12:17] *** cmarcelo left
[12:20] <fglock> @tell [particle] re meeting in #parrot yesterday, i couldn't connect from home :(

[12:20] <lambdabot> Consider it noted.

[12:23] *** IllvilJa joined
[12:23] *** chris2 left
[12:24] *** chris2 joined
[12:31] *** chris2 left
[12:50] *** beejeebus left
[13:00] <[particle]> np, fglock

[13:00] <lambdabot> [particle]: You have 1 new message. '/msg lambdabot @messages' to read it.

[13:02] *** bwinkler joined
[13:02] *** ispy_ joined
[13:22] *** kolibrie_ is now known as kolibrie

[13:22] *** njbartlett left
[13:31] *** iblechbot joined
[13:47] *** franck___ left
[13:47] *** franck___ joined
[13:48] *** sproingie joined
[14:07] <ferreira> the micro-article on boolean operators is published: http://www.oreillynet.com/onlamp/blog/2007/12/yet_another_perl_6_operator_bo.html

[14:07] <lambdabot> Title: Yet Another Perl 6 Operator: Boolean Operators - O&#039;Reilly ONLamp Blog, http://tinyurl.com/27rrzs

[14:07] *** hanekomu joined
[14:08] <ferreira> it made me wonder about the tests for boolean operators

[14:08] <ferreira> I was thinking about how ? (coertion to bool) was tested: http://svn.pugscode.org/pugs/t/operators/context_forcers.t

[14:09] <ferreira> it should not use "ok" but "is $bool_exp, True" and "is $bool_exp, False"

[14:09] <moritz_> aye

[14:09] <moritz_> since ok() forces boolean context itself

[14:10] <moritz_> pugs: say 1 == True

[14:10] <exp_evalbot> OUTPUT[1␤]

[14:10] <moritz_> pugs: say 1 eq True

[14:10] <exp_evalbot> OUTPUT[1␤]

[14:10] <moritz_> erm

[14:10] <ferreira> moritz_: yep. would  you and everyone else agree with that? and think this patch is sane? http://paste.scsys.co.uk/paste

[14:11] <moritz_> ferreira: give us the real URL please ;)

[14:11] <ferreira> moritz_: that last one is strange

[14:11] <ferreira> sorry: http://scsys.co.uk:8001/11414

[14:11] <ispy_> moritz_: so how does this 'examples' directory in pugs work?  can we just submit different scripts ( examples ) to it?

[14:12] <moritz_> ispy_: yes, you can

[14:12] <moritz_> ispy_: they should work with pugs (but that's no "hard" requirement)

[14:12] <ferreira> moritz: the culprit is the convertion from bool to string

[14:12] <ispy_> moritz_: excellent, I've been writing a lot of 50 liners or so for various odds and ends, figured they might be helpful.

[14:12] <ferreira> pugs: say ~True

[14:12] <exp_evalbot> OUTPUT[1␤]

[14:13] <ferreira> pugs: say ~False

[14:13] <exp_evalbot> OUTPUT[␤]

[14:13] <pugs_svn> r19188 | pmurias++ | deleted v6-Onion it has been obsoleted by kp6-kp6

[14:13] <moritz_> ferreira: the patch looks fine to me

[14:14] <ferreira> do you think I go ahead and commit, or is it better to wait for more eyes to take a look at it? 

[14:15] <moritz_> go and commit it

[14:15] <moritz_> anybody who objects is free to correct it or to just revert the patch

[14:16] <pugs_svn> r19189 | ferreira++ |  r168@dracma:  perl | 2007-12-12 12:15:51 -0200

[14:16] <pugs_svn> r19189 | ferreira++ |  tests for boolean coertion should use "is"

[14:33] *** masak joined
[14:45] *** drrho left
[14:55] *** pmurias joined
[15:08] *** Psyche^ joined
[15:09] <rhr> ferreira: in the article you have [] and {} as true, but S02:1460 says the empty hash is false and I'm pretty sure [] is also

[15:11] <ferreira> rhr: I was wondering about that just now - gonna fix it. Thanks. Double thanks for the reference where to look at

[15:12] <rhr> ferreira++

[15:13] *** drrho joined
[15:24] *** Patterner left
[15:24] *** Psyche^ is now known as Patterner

[15:25] *** njbartlett joined
[15:28] <clkao> 然後用 binary saerh

[15:36] <moritz_> ?

[15:37] <moritz_> wow, the search for multi byte characters still works in the irc logs: http://irclog.perlgeek.de/search.pl?channel=perl6&nick=&q=%E7%84%B6%E5%BE%8C%E7%94%A8

[15:37] <lambdabot> Title: IRC logs - Search, http://tinyurl.com/34zefn

[15:50] *** TJCRI joined
[15:54] <ispy_> So, since many of you guys in here have been contributing to Perl6 much longer than myself ( obviously ), any guesses as to when P6 will officially be released? Or is that a silly question? :)

[15:54] <moritz_> ispy_: christmas

[15:54] <ispy_> I know no time table exists, which I believe is good...

[15:54] <ispy_> ok, so the usual answer...

[15:54] <ispy_> :)

[15:54] <moritz_> aye ;)

[15:54] <ispy_> great, just wanted to make sure we were on track.

[15:54] <ispy_> haha..

[15:55] <moritz_> I think 2008 or 2009

[15:55] <ispy_> sounds good.

[15:55] <moritz_> but it's a tricky questions because not everything is specced yet

[15:56] <ispy_> Yeah I know the deal.

[15:56] <moritz_> and we don't know how hard the concurrency part will be

[15:56] <moritz_> to spec, to implement and to test

[15:57] <ispy_> I've been doing a grip load of reading on Perl6 in an attempt to try and catch-up on all the lingo and ideals prior to throwing code on svn ( and helping with existing projects ) so...

[15:57] <ispy_> I'm very much looking forward to helping out, I love Perl :)

[15:58] <ispy_> And I'm surprised because I was very nervous of p6 once I felt I had a solid understanding of p5.

[15:58] <moritz_> ;)

[15:58] <ispy_> But, after about an hour of messing around with p6 I welcomed many of the changes.

[15:58] <ispy_> And I realized that I needed to get involved.

[15:59] *** zakame left
[15:59] <moritz_> so you know where to get all the information you need?

[15:59] *** masak left
[15:59] *** jhorwitz joined
[15:59] <moritz_> and have a pugs commit bit, I hope? 

[16:00] <moritz_> and you're subscribed to the mailing lists? ;-)

[16:00] <ispy_> moritz_: yes and yes.

[16:00] <ispy_> I need to subscribe to perl6-compiler though, I'll do that now.

[16:00] <moritz_> very good

[16:01] <moritz_> most of the interesting talk happens on p6l, though

[16:01] <ispy_> I'm going to need my hand held a little, I'll admit.  But I'm very eager to contribute, and my code is sound I can assure you.

[16:01] <ispy_> moritz_: yeah seems to be the most popular list.

[16:05] *** iblechbot left
[16:05] <[particle]> moritz_: i think traffic will shift to p6c now that language design is mostly done, and we're implementing the compilers

[16:06] <moritz_> [particle]: might be possible, yes

[16:10] *** fridim_ joined
[16:11] *** fridim_ left
[16:13] *** ispy_ left
[16:16] <sproingie> is there a freeze date for when design will actually be really really done?

[16:17] <[particle]> yes.

[16:17] <[particle]> ...but nobody knows when that is.

[16:18] <[particle]> design doesn't happen before implementation... they happen together

[16:18] <[particle]> one influences the other

[16:19] <sproingie> yes, but eventually both are finished

[16:19] <[particle]> correct.

[16:19] <[particle]> since this is an all-volunteer effort, there's no telling when the volunteers will finish

[16:21] <[particle]> as far as completion percentage goes, larry likes to say that we're done with the first 80%, and well into the second 80%

[16:31] *** Psyche^ joined
[16:37] *** nipotan is now known as nipotaway

[16:40] *** gbacon left
[16:41] *** gbacon joined
[16:45] *** revdiablo joined
[16:47] *** barney joined
[16:48] *** Patterner left
[16:48] *** Psyche^ is now known as Patterner

[17:01] *** _meppl joined
[17:12] <pugs_svn> r19190 | ferreira++ |  r173@dracma:  perl | 2007-12-12 15:11:55 -0200

[17:12] <pugs_svn> r19190 | ferreira++ |  bool coercion to containers, hashes and undef

[17:20] *** _meppl is now known as meppl

[17:20] *** justatheory joined
[17:21] *** meppl left
[17:27] <fglock> from #parrot: <fglock> how about this for a short-term kp6 plan: add a nqp backend and try to self-host on it; and try to reuse code and algorithms from the nqp and perl6 compilers

[17:36] <Tene> Interesting.

[17:38] *** franck___ left
[17:40] <ruoso> fglock, yap6 is near being available as another backend ;)

[17:40] * moritz_ wishes again that #parrot was logged publicly

[17:41] <moritz_> I followed the discussion, but it would be nice if it was linkable

[17:42] <Tene> It's logged for me.  I can make links that I can follow to the discussion.

[17:42] <Tene> ;)

[17:44] *** meppl joined
[17:51] *** pbuetow left
[17:54] <moritz_> pugs: my $a; for <1 2> -> { say $a }; say $a;

[17:54] <exp_evalbot> OUTPUT[␤␤␤]

[17:55] <moritz_> pugs: my $a; for <1 2> -> $a { say $a }; say $a;

[17:55] <exp_evalbot> OUTPUT[1␤2␤␤]

[17:59] *** pbuetow joined
[18:00] *** macae left
[18:01] <pmurias> kp6: my $a; for <1 2> -> $a { say $a }; say $a;

[18:01] <exp_evalbot> r19190: OUTPUT[1␤2␤␤]

[18:02] *** Schwern left
[18:03] <spinclad> looks right

[18:04] *** drrho left
[18:04] <moritz_> spinclad: it does. I was thinking about http://www.perlmonks.org/?node_id=656675

[18:04] <lambdabot> Title: Re^3: Duh. 'my' scope in if else blocks. (implicit)

[18:07] <ferreira> seen TimToady

[18:08] <ferreira> pugs: ~True

[18:08] <exp_evalbot> RESULT["1"]

[18:08] <ferreira> pugs: ~False

[18:08] <exp_evalbot> RESULT[""]

[18:09] <ferreira> hum, that is coherent with the fact that ~True is true and ~False is false 

[18:09] <fglock> (#parrot) alternate plan: "fix" the kp6 source code such that it works in nqp

[18:09] <moritz_> but not very symmetric

[18:11] <ferreira> moritz: they follow Perl 5 closely:   1==1   returns 1   and   0==1   returns "" - to tell the truth, I heard they return the internal PL_ok and PL_no IIRC 

[18:12] *** jjore-w left
[18:13] <pmurias> fglock: is the plan more oriented towards runing kp6 on parrot or targeting parrot?

[18:14] <fglock> pmurias: both, it would allow kp6 to run both on parrot and Perl 5 (and other backends)

[18:17] <pmurias> if we target the parrot backend seriously shouldn't we target past instead of nqp?

[18:17] <fglock> nqp is Parrot's "MiniPerl6"

[18:18] <fglock> it's low-level enough

[18:18] <moritz_> pmurias: there is no serialization format (yet) for PAST

[18:18] <pmurias> nqp

[18:18] <moritz_> pmurias: so you'd trade seriousness for time 

[18:18] <moritz_> gone &

[18:18] <fglock> moritz_: :)

[18:19] <pmurias> we can use nqp as a serialization format

[18:20] <pmurias> once we bootstrap on parrot there is no need to serialize

[18:20] <fglock> nqp is close enough to MiniPerl6, it might even compile kp6 source code

[18:21] <fglock> or, we could tweak -Cperl6

[18:21] <fglock> pmurias: do you think this makes sense?

[18:21] <pmurias> yes

[18:24] <pmurias> fglock: i think it's the question which of the two options is less work

[18:25] <fglock> I think -Cnqp makes more sense, because once kp6 gets self-hosted you would want to use Perl 6 syntax

[18:32] *** cmarcelo joined
[18:33] <pmurias> fglock: assuming there isn't anything tricky hidden with -Cnqp it seems a better option

[18:35] *** justatheory left
[18:35] *** justatheory joined
[18:37] *** amnesiac joined
[18:42] <[particle]> logs?

[18:42] <[particle]> where are the public logs?

[18:42] <[particle]> is there a bot with that factoid?

[18:43] <pmurias> irc.pugscode.org

[18:43] <[particle]> ah. easy!

[18:46] <fglock> $ perl script/kp6 -Cperl6 t/kp6/01-tap.t | ~/projetos/parrot-svn/parrot/parrot ~/projetos/parrot-svn/parrot/compilers/nqp/nqp.pbc --

[18:46] <fglock> I get errors, but it's a start

[18:47] <fglock> get to find out what's valid nqp

[18:47] <fglock> I'll create the nqp backend

[18:48] <[particle]> where's the source? i can have a look

[18:48] <[particle]> er, the source input to parrot

[18:48] <fglock> is it Nqp.pm or NQP.pm ?

[18:48] <fglock> [particle]: $ perl script/kp6 -Cperl6 t/kp6/01-tap.t

[18:50] <[particle]> i'm not sure nqp understands 'module' yet

[18:50] <pugs_svn> r19191 | fglock++ | [kp6] added Emit::Nqp placeholders

[18:50] <[particle]> and i'll have to see if it gets & sigil, too

[18:51] <fglock> what can we use to start a namespace?

[18:51] <fglock> [particle]: we can tweak the kp6 emitter

[18:52] <pmurias> fglock: i would guess it should be NQP?

[18:54] <[particle]> we've always used all lowercase

[18:54] <[particle]> but all upper would be fine

[18:54] <[particle]> hrmm, start a namespace. class?

[18:54] <pugs_svn> r19192 | fglock++ | [kp6] fixed Emit::Nqp own namespace and method names

[18:55] <fglock> [particle]: see src/KindaPerl6/Visitor/Emit/Nqp.pm

[18:55] <[particle]> oh, nqp does understand module

[18:55] <fglock> please rename as appropriate :)

[18:58] <pugs_svn> r19193 | ferreira++ |  r175@dracma:  perl | 2007-12-12 16:57:34 -0200

[18:58] <pugs_svn> r19193 | ferreira++ |  basic tests for Bool True and False

[18:58] *** TJCRI left
[18:59] *** aindilis left
[18:59] <[particle]> nqp --target=parse x # works (where x contains output from 01-tap.t)

[19:00] <[particle]> heck, it even generates PAST

[19:01] <pugs_svn> r19194 | fglock++ | [kp6] added -Cnqp backend

[19:02] <[particle]> No scope found for PAST::Var '&say' # seems like it's saying that lexical lookup failed for this variable

[19:02] <[particle]> it's likely that it doesn't know how to process the '&' sigil

[19:05] <[particle]> hrmm, looks like it should parse &

[19:05] <[particle]> s/parse/understand/

[19:10] *** hanekomu left
[19:11] <fglock> the new incantation is:

[19:11] <fglock> $ perl script/kp6 -Cnqp t/kp6/01-tap.t | ~/projetos/parrot-svn/parrot/parrot ~/projetos/parrot-svn/parrot/compilers/nqp/nqp.pbc --

[19:11] <fglock> [particle]: I could make kp6 remove & when the var is used in Apply context

[19:12] <[particle]> fglock: do it!

[19:18] *** rindolf joined
[19:22] <pugs_svn> r19195 | fglock++ | [kp6-nqp] removed & sigil when the variable is used in Apply context

[19:22] <obra> fglock: are you likely to be at the lisbon.pm social the first week of January?

[19:23] <fglock> obra: sure

[19:23] <obra> Lovely. I'll get to buy you a drink :)

[19:23] <obra> Kaia and I ended up deciding to holiday in portugal the first week of January

[19:23] <obra> we'll be in Porto 31 Dec - 2 Jan. Probably lisbon for a bit after that.

[19:24] <fglock> cool :)

[19:24] <fglock> [particle]: it works now, but it emits some syntax messages

[19:25] <pugs_svn> r19196 | ferreira++ |  r179@dracma:  perl | 2007-12-12 17:17:01 -0200

[19:25] <pugs_svn> r19196 | ferreira++ |  these tests had wrong anchors - probably to renaming of POD section

[19:25] <pugs_svn> r19197 | ferreira++ |  r180@dracma:  perl | 2007-12-12 17:24:08 -0200

[19:25] <pugs_svn> r19197 | ferreira++ |  fix todo test: ?| produces Bool, and False does not stringify to 0

[19:28] <[particle]> fglock: nqp seems to display the output twice :/

[19:30] <fglock> I get:  error/1..2/ok 1/ ok 2/another error

[19:32] *** rindolf left
[19:33] <fglock> home &

[19:43] <pugs_svn> r19198 | ferreira++ |  r185@dracma:  perl | 2007-12-12 17:36:17 -0200

[19:43] <pugs_svn> r19198 | ferreira++ |  added boolean xor infix operator

[19:43] <pugs_svn> r19199 | ferreira++ |  r186@dracma:  perl | 2007-12-12 17:36:40 -0200

[19:43] <pugs_svn> r19199 | ferreira++ |  added basic tests for boolean infix operators

[19:44] <pugs_svn> r19200 | ferreira++ |  r187@dracma:  perl | 2007-12-12 17:41:50 -0200

[19:44] <pugs_svn> r19200 | ferreira++ |  ?&, ?|, ?^ work coercing their arguments to boolean

[19:50] *** TJCRI joined
[19:53] <ferreira> rhr: FYI, I fixed the problems with my interpretation of [] and {} as booleans in ONLamp article

[19:56] *** fglock left
[20:00] *** araujo left
[20:07] *** jisom joined
[20:10] *** iblechbot joined
[20:15] *** ispy_ joined
[20:32] *** pmurias left
[20:34] *** Limbic_Region joined
[20:36] *** jisom left
[20:45] *** TJCRI left
[20:54] *** ispy_ left
[21:09] *** TJCRI joined
[21:15] *** thoughtpolice joined
[21:33] *** justatheory left
[21:33] *** justatheory joined
[21:45] *** ferreira left
[21:46] *** ispy_ joined
[21:52] *** ilogger2 joined
[21:52] *** dduncan joined
[22:00] *** Lyricson joined
[22:00] * Lyricson 1,8(1,0__1,8/)

[22:00] * Lyricson 1,8(4o1' '4o1)

[22:00] * Lyricson 1,8(")_(") Pikaaaa Pika Pika chuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu

[22:01] *** Lyricson left
[22:38] *** snearch joined
[22:45] *** BinGOs joined
[22:50] *** Southen joined
[22:52] *** snearch left
[22:52] *** Southen_ joined
[22:56] *** REPLeffect joined
[22:57] *** meppl joined
[23:02] *** BinGOs_ joined
[23:05] *** Southen left
[23:07] *** dduncan left
[23:10] *** jferrero joined
[23:17] *** araujo joined
[23:22] *** d4l3k_ joined
[23:22] *** d4l3k_ is now known as dalek

[23:28] *** BinGOs left
[23:39] *** njbartlett joined
[23:44] *** meppl left
[23:46] *** Psyche^ joined
[23:47] *** sri_ joined
[23:52] *** Psyche^ is now known as Patterner

