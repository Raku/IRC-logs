[00:01] *** crashmatrix_ joined
[00:10] *** weinigLap_ joined
[00:11] <bsb> gweilo too

[00:20] <TimToady> well, specbot6 and svnbot6 are sitting there waiting to be invited, if anyone can figger out how...

[00:20] *** specbot6 joined
[00:20] *** svnbot6 joined
[00:21] <Tene> /msg specbot6 ?join #perl6

[00:21] <Tene> /msg svnbot6 ?join #perl6

[00:21] <TimToady> ah

[00:22] <TimToady> so...intuitively obvious...

[00:22] <Tene> It is if you read the code. >.>

[00:24] <TimToady> but I don't know perl6 yet...

[00:30] <[particle]> TimToady: write once, read many.

[00:31] <moritz> TimToady: why didn't you design perl 6 to be a read only language? ie a self-writing one ;)

[00:31] <SamB> moritz: how would you get it to write the programs that you want to read?

[00:31] <[particle]> good idea... optimize the write op away

[00:32] <moritz> SamB: I don't know, I'm not a language designer ;)

[00:32] <TimToady> Tene: thanks, btw

[00:32] <Tene> np

[00:39] <drowned> ?eval class Chozzle1 {has $a;method set_a { $b = 1 }} my $c1 = Chozzle1.new; $c1.set_a;

[00:39] *** evalbot_r16654 is now known as evalbot_r16655

[00:39] <evalbot_r16655> \1

[00:39] <drowned> class Chozzle {has $a;method set_a { $::a = 1 }} my $c = Chozzle.new; $c.set_a;

[00:40] *** f0rth joined
[00:40] <drowned> ?eval class Chozzle {has $a;method set_a { $::a = 1 }} my $c = Chozzle.new; $c.set_a;

[00:40] <evalbot_r16655> \1

[00:44] *** drowned left
[00:59] *** shachaf joined
[01:00] *** nipotaway is now known as nipotan

[01:24] *** weinigLap_ is now known as weinigLap

[01:41] *** Aankhen`` joined
[01:48] *** sunnavy joined
[02:02] *** [particle1 joined
[02:11] *** syang joined
[02:29] *** bonesss joined
[03:14] *** mncharity joined
[03:25] *** daxim_ joined
[03:28] *** dolmans joined
[03:29] *** Alias_ joined
[03:32] *** amnesiac joined
[03:32] *** penk joined
[03:55] <dduncan> I got some curious output on the last Pugs command line ...

[03:55] <dduncan> ?eval sub subish (:$fuzz) { say "got $fuzz"; }

[03:55] <evalbot_r16655> undef

[03:56] <dduncan> it printed out a ream of stuff, originally

[03:59] <pasteling> "dduncan" at 24.69.53.198 pasted "that ream of stuff" (67 lines, 2.4K) at http://sial.org/pbot/25524

[04:01] <dduncan> that ream looks sort of like the AST for the sub I declared, plus a bunch of environmental stuff

[04:10] *** chaoslawful joined
[04:28] <svnbot6> r16656 | Darren_Duncan++ | ext/Muldis-DB/ : in Operators.pm, updated the way subs take args ; in mainly Validator.pm, updated named arg syntax

[04:31] *** justatheory joined
[04:34] *** pnu joined
[04:39] *** [particle] joined
[04:52] *** mako132_ joined
[05:01] <meppl> good morning

[05:03] *** BooK joined
[05:04] *** ron__ joined
[05:05] *** ofer joined
[05:20] *** devogon joined
[05:29] *** dduncan left
[05:31] <gaal> in the block-comment Syn update, "The entire final line counts as part of the comment". Does this imply that something after the closing delimiter but on the same line as it is taken as part of the comment?

[05:32] <TimToady> yes

[05:32] <gaal> also, must block comments start in the first column, or is leading whitespace allowed? the text suggests it must be flush to the margin.

[05:33] <TimToady> must be flush, or it's an embedded comment instead

[05:34] <gaal> what's the motivation for counting code outside the closing delimiter as if it were in it?

[05:34] <gaal> (sorry if this has been discussed here, I haven't backlogged yet)

[05:34] <TimToady> the line is the delimiter, not the "#}"

[05:35] <TimToady> the reasoning is that that's what line-ending comments would do too.

[05:36] <TimToady> so it still works identically with # in front of all the lines

[05:36] <gaal> but then if I nudge the comment opening marker a bit and it becomes an embedded comment, suddenly that trailing code becomes not-a-comment, right?

[05:36] <TimToady> you win a few, you lose a few...

[05:37] <TimToady> just don't put code after an initial }   :)

[05:37] <gaal> let's add a layout rule to Perl :-p

[05:37] <gaal> (since we have whitespace sensitivity anyway

[05:37] <gaal> )

[05:38] <TimToady> sure, as long as you predeclare it with "use Python;"  :P

[05:38] <gaal> hey, haskell has a totally nice layout rule

[05:38] <gaal> because it's easy to turn it off when you want

[05:39] <TimToady> definitely turns me off :)

[05:39] <gaal> well, I have to say this comment-opener surprises me, then!

[05:40] <gaal> but I probably have to think on it some more<tm>.

[05:43] <svnbot6> r16657 | lwall++ | [STD.pm] cheated version parses again

[05:53] *** unobe_away is now known as unobe

[05:54] <Alias_> sigh... one of these days I'm going to have CPAN 1.5 in good enough shape to start on CPAN 2

[05:55] <Alias_> I do, however, increasingly think the "layer" approach will work the best for the Perl 6 "core" definition

[05:55] <Alias_> (if nobody else has been dealing with that yet)

[06:02] *** iblechbot joined
[06:03] *** kanru joined
[06:24] *** Averell joined
[06:26] *** Schwern joined
[06:40] *** weinigLap joined
[06:44] *** kanru joined
[07:20] *** jisom joined
[07:53] *** akreal joined
[08:03] *** ofer joined
[08:44] *** crem joined
[08:50] *** rho joined
[08:53] *** crem joined
[08:54] *** bsb left
[08:59] *** jedai joined
[09:04] *** thoughtpolice joined
[09:14] *** buubot joined
[09:14] *** mico_ joined
[09:22] *** buubot joined
[09:22] *** mico_ joined
[09:25] *** buubot joined
[09:26] *** unobe is now known as unobe_away

[09:27] *** buubot joined
[09:32] *** buubot joined
[09:38] *** buubot joined
[10:07] *** sunnavy_ joined
[10:51] *** sunnavy_ is now known as sunnavy

[10:56] * Tene needs to come up with a decent project idea to use to start implementing Web and HTTP to support

[10:56] * Tene needs sleep before that, though.

[10:57] <akreal> good night Tene!

[10:57] *** chris2 joined
[11:04] *** buetow joined
[11:22] <thoughtpolice> morning everybody. :)

[11:26] <akreal> thoughtpolice: good morning!

[11:26] <moritz> foo everybody! ;)

[11:34] <gaal> Tene: port svk to p6? :)

[11:35] <moritz> gaal: I don't think you need Web and HTTP for that (these two modules, I mean)

[11:41] *** isaacd joined
[11:47] <gaal> Not Web, perhaps, but why not HTTP?

[11:48] <gaal> (And there are course plenty of support apps you could write that might employ Web.pm)

[11:48] <moritz> ah right, sv(n|k) uses HTTP 1.1

[11:51] <lumi> What would Web be?

[11:53] <moritz> lumi: a kind of advanced CGI module I guess

[11:53] <lumi> Something like the HTML parts of CGI.pm? Or ...?

[11:53] <gaal> lumi: ext/Web, a less ad-hoc CGI.pm

[11:53] <gaal> there's just a sketch there

[11:55] <lumi> Yeah, I'm looking

[11:56] <lumi> Do we have no way of making enums/tagged-unions other than '$x where { $_ eq any <a b c> }

[11:56] <lumi> '

[11:56] <lumi> ?

[11:57] <lumi> g

[11:58] *** |jedai| joined
[11:58] <lumi> Sorry, wrong window, that last single character

[12:00] *** Aankh|Clone joined
[12:00] <svnbot6> r16658 | agentz++ | Makefile.PL - worked around GHC version numbers like 6.6.1 (reported by laye++)

[12:04] <thoughtpolice> svnbot lives again?!

[12:08] *** _jedai_ joined
[12:10] <gaal> there's an interesting enum spec in one of the latter Syns, but it's not implemented

[12:17] *** deq` joined
[12:19] <gaal> lumi: I think it was waiting on MO, actually. If you want to implement it, now may be a good time.

[12:23] *** buetow joined
[12:31] *** |Jedai| joined
[12:33] *** unobe_away joined
[12:43] <lumi> It's a bit creepy that it looks at your identifier case to decide whether the representation should be boxed

[12:45] <gaal> location?

[12:45] <gaal> but that's how types are arranged in Perl 6; int vs. Int etc.

[12:46] <lumi> True, and yet

[12:46] <gaal> ah, "If the declared type name begins with an uppercase letter, the default type is Int or Str, depending on the type of the first value. If the declared type is lowercase, the default return type is int or buf."

[12:46] <gaal> I didn't remember that

[12:47] <lumi> See, creepy

[12:47] <gaal> # http://perlcabal.org/syn/S12.html#Enums

[12:47] <lambdabot> Title: S12

[12:48] <lumi> Also, why are they not an actual type, but only aliases to Str/Int?

[12:48] <lumi> (or str/int, as the case may be)

[12:48] <gaal> "A given enum value can function as a subtype"

[12:50] <lumi> Ah so

[12:55] <gaal> gotta moose&

[13:03] *** nipotan is now known as nipotaway

[13:04] *** rindolf joined
[13:06] <rindolf> Hi all.

[13:06] <rindolf> eval: my $h = "Hello"; @a= map { "$_\n" } sort { lc($a) cmp lc($b) } ("Hi","Lo","$h\n"); [@a]

[13:06] <buubot> rindolf:  ['hello  ','Hi ','Lo '] 

[13:19] *** perlygatekeeper joined
[13:30] *** iblechbot joined
[13:34] *** tewk joined
[13:46] <ayrnieu> eval: given my $h = "Hello" { [map { "$_\n" } sort { lc $a cmp lc $b } <<Hi Lo $h\n>>] }

[13:46] <buubot> ayrnieu: Error: syntax error at eval line 1, near "#line 1 eval       given my "  

[13:47] <ayrnieu> oh well.

[13:49] <ayrnieu> er.

[13:49] <ayrnieu> @evalgiven my $h = "Hello" { [map { "$_\n" } sort { lc $a cmp lc $b } <<Hi Lo $h\n>>] }

[13:49] <lambdabot> Unknown command, try @list

[13:50] <ayrnieu> ?eval given my $h = "Hello" { [map { "$_\n" } sort { lc $a cmp lc $b } <<Hi Lo $h\n>>] }

[13:50] *** evalbot_r16655 is now known as evalbot_r16658

[13:50] <evalbot_r16658> Error: ␤Unexpected "["␤expecting "use", statements or "}"

[13:51] <Juerd> rindolf: Interesting bug

[13:51] <ayrnieu> ?eval [<a b>]

[13:51] <evalbot_r16658> ["a", "b"]

[13:51] <ayrnieu> well, that's just odd then.

[13:52] <lumi> ?eval given "Hello" -> $h { map { "$_\n" } sort { <<Hi Lo $h>>.sort({ lc $^a cmp lc $^b }).map: { "$_\n" } }

[13:52] <evalbot_r16658> Error: ␤Unexpected "sort"␤expecting ",", ":", operator or "}"

[13:52] <lumi> Ehm

[13:53] <lumi> ?eval given "Hello" -> $h { <<Hi Lo $h>>.sort({ lc $^a cmp lc $^b }).map: { "$_\n" } }

[13:53] *** chaoslawful_ joined
[13:53] <evalbot_r16658> ("Hello\n", "Hi\n", "Lo\n")

[13:54] <ayrnieu> ?eval given "Hello" -> $h { [<<Hi Lo $h>>.sort({ lc $^a cmp lc $^b }).map: { "$_\n" }] }

[13:54] <evalbot_r16658> ["Hello\n", "Hi\n", "Lo\n"]

[13:55] <ayrnieu> (Bad syntax results in fictitious declaration of bad syntax.)

[13:57] <Juerd> Doesn't : work correctly yet?

[13:57] <Juerd> ?eval given "Hello" -> $h { [ <<Hi Lo $h>>.sort:{ lc $^a cmp lc $^b }.map:{ "$_\n" } ] }

[13:58] <lumi> That should work?

[13:58] <evalbot_r16658> ["Hello\n", "Hi\n", "Lo\n"]

[13:58] <Juerd> IIRC

[13:58] <lumi> Pugs agrees

[13:58] <Juerd> ?eval given "Hello" -> $h { [ <<Hi Lo $h>>.sort:{ .lc }.map:{ "$_\n" } ] }

[13:58] <evalbot_r16658> ["Hi\n", "Lo\n", "Hello\n"]

[13:59] <Juerd> argless .sort doesn't work yet, apparently :)

[13:59] <Juerd> ?eval given "Hello" -> $h { <<Hi Lo $h>>.sort:{ $^a.lc cmp $^b.lc }.map:{ "$_\n" } }

[13:59] <evalbot_r16658> ("Hello\n", "Hi\n", "Lo\n")

[13:59] <Juerd> ?eval [ given "Hello" -> $h { <<Hi Lo $h>>.sort:{ $^a.lc cmp $^b.lc }.map:{ "$_\n" } } ]

[13:59] <lumi> Almost argless, anyway

[14:00] <evalbot_r16658> Error: ␤Unexpected "["␤expecting program␤postfix op

[14:00] <lumi> Is this because 'given' is a statement?

[14:01] <ayrnieu> 'given' has a return value; otherwise it may as well be perl5's for.

[14:02] <ayrnieu> That error message, given the recent history of my evaluations, only says that 'some kind of syntax error occurred anywhere in your code after this point'

[14:03] <lumi> Maybe this is like what Gaal was saying, that there's not enough <?> in the parser

[14:03] <lumi> I mean, not enough named constructions, I guess?

[14:05] *** amnesiac joined
[14:09] *** fglock joined
[14:10] <fglock> Alias_: what you mean 'the "layer" approach will work the best for the Perl 6 "core" definition' - it's about CPAN?

[14:20] *** jedai joined
[14:21] *** jedai joined
[14:22] *** jedai is now known as Oisoutch

[14:24] *** |Jedai| is now known as jedai

[14:32] <moritz> lumi: soory, I can't /msg on freenode...

[14:32] <moritz> lumi: and I don't know anything about Convert::Binary::C anyway :(

[14:34] <lumi> moritz: k, thanks anyway :)

[14:38] *** isaacd joined
[14:39] *** chaoslawful__ joined
[14:57] *** kanru joined
[15:24] *** sunnavy left
[15:36] *** barney joined
[15:36] *** myavuzselim joined
[15:39] *** bonesss joined
[15:47] *** riffraff joined
[15:47] <riffraff> hi

[15:50] *** rindolf joined
[15:54] *** araujo joined
[15:59] *** electrogeek joined
[15:59] *** xinming joined
[16:01] <gaal> lumi: most rules in Parser begin with rule "moose" $ do ...real rule...

[16:02] <gaal> that's just \r -> do { (<?> "moose") r ; whiteSpace }

[16:03] <gaal> (the convention is "verbatim" doesn't eat trailing whitespace, "rule" does)

[16:03] *** chaoslawful_ joined
[16:20] *** elmex joined
[16:22] <riffraff> how is the plan to support per-object roles?

[16:22] *** penk joined
[16:22] <riffraff> ruby-like hidden class in the lookup hierarchy?

[16:23] <svnbot6> r16659 | agentz++ | checked in docs/zh-cn/S01.pod which is a Chinese transcript for S01

[16:24] <moritz> agentz++

[16:24] <gaal> anonymous classes, yes

[16:25] *** fglock_ joined
[16:29] <riffraff> I see

[16:30] <nothingmuch> audreyt: ping

[16:30] *** macli left
[16:31] <nothingmuch> locale::maketext::lexicon's s/\\\*(?=[^*]+$)/\([-\\w]+\)/g or next; makes no sense to me

[16:31] <nothingmuch> why aren't subsequent wilds allowed? i would replace just the first with the lang capture, and then leave the rest of em

[16:31] <nothingmuch> which are handled by the next s///;

[16:31] <nothingmuch> tell me if i can remove the $ assertion and rerelease

[16:32] <gaal> nothingmuch: moose

[16:32] <nothingmuch> moose

[16:33] <nothingmuch> coming to steffi's on fri?

[16:33] <gaal> no, can't make it :(

[16:33] <nothingmuch> dueu to transportation or other?

[16:33] <nothingmuch> i might be able to arrange a solution if the first

[16:33] <gaal> other

[16:33] <gaal> but thanks

[16:33] <nothingmuch> ah well

[16:33] <nothingmuch> i will relay a cold, heartless goodbye on your behalf

[16:34] <gaal> please do

[16:34] <nothingmuch> if i remember ;-)

[16:35] <gaal> you mean you might forget and relay a warm, effluently kind farewell instead? that also works

[16:35] <nothingmuch> i forget

[16:35] <nothingmuch> maybe i meant that I might not remember to show up

[16:36] *** ron___ joined
[16:36] <svnbot6> r16660 | agentz++ | oops...added the Makefile for real this time

[16:42] *** chaoslawful_ joined
[16:42] <svnbot6> r16661 | agentz++ | updated docs/feather/script/update-syn to auto-html-ify docs/zh-cn/syn/*.pod

[16:46] *** fglock joined
[16:48] *** kunwon1 joined
[16:57] <svnbot6> r16662 | agentz++ | docs/zh-cn/syn/Makefile - specified --index when invoking podhtm

[17:03] *** Psyche^ joined
[17:08] *** rindolf joined
[17:11] *** Psyche^ is now known as Patterner

[17:20] *** chaoslawful_ joined
[17:20] *** iblechbot joined
[17:24] *** justatheory joined
[17:25] *** weinigLap joined
[17:28] *** weinigLap joined
[17:48] *** deq` joined
[17:52] *** chaoslawful_ joined
[18:08] *** offby1 is now known as offby19876

[18:08] *** offby19876 is now known as offby

[18:09] *** offby is now known as offby1

[18:17] *** jisom joined
[18:29] *** rlpeacock joined
[18:30] *** avarab joined
[18:32] *** asksh joined
[18:39] <svnbot6> r16663 | lwall++ | [STD.pm] nested block comments now handled

[18:41] *** avarab_ joined
[18:51] *** avar joined
[19:00] *** avarab joined
[19:04] *** avarab is now known as avar

[19:10] *** avarab joined
[19:18] *** japhb joined
[19:19] *** fglock joined
[19:21] *** avarab_ joined
[19:26] *** jedai joined
[19:29] *** xinming joined
[19:30] *** avar joined
[19:34] *** devogon joined
[19:37] *** crem joined
[19:41] *** avarab joined
[19:44] *** isaacd_ joined
[19:51] *** avarab_ joined
[19:55] <svnbot6> r16664 | moritz++ | minor corrections in debian/pugs.docs and debian/pugs-modules.install

[20:03] *** riffraff joined
[20:04] <riffraff> hi everyone

[20:04] <fglock> hi

[20:05] <moritz> hi

[20:12] *** avarab_ is now known as avar

[20:12] <gaal> aiieeeee r14420 appeals to a _brace_ style? that really looks wrong to me -- and that particular brace style happens the one I use, myself

[20:14] <gaal> I forget who it was that proposed languages should mandate a particular style and make all others compile errors. The idea being not to advocate that author's preffered stlye, but to eliminate the holy wars.

[20:15] <gaal> s/fer/err/

[20:16] <gaal> also, what happens when there's an if/else in this style?

[20:19] <riffraff> gaal, I think there is something like that in object oriented software construction

[20:20] <riffraff> but it's more like "no language should have feature such that you have to tell 'this should not be done usually' "

[20:20] <riffraff> WRT public member variables, and blaming C++ IIRC

[20:20] <gaal> heh

[20:20] <Tene> "system('rm -rf /'); # This should not be done usually"

[20:22] <gaal> actually, it should _never_ be done. the correct thing is to turn off swap and dd if=/dev/urandom of=/dev/hda :-p

[20:24] *** b_jonas joined
[20:28] <riffraff> Tene, yay for languages withouth access to esystem

[20:28] <riffraff> I always said that

[20:28] <thoughtpolice> while you're at it you might as well cat /dev/urandom > /dev/dsp

[20:29] <Tene> cat /dev/dsp > /dev/hda

[20:29] <riffraff> exec* is a bad family of functions

[20:31] *** dwave joined
[20:31] <gaal> "real programmers dd if=/dev/dsp of=a.out and whistle"

[20:35] <gaal> or, if we're getting nostalgic: "Real Programmers dd if=/dev/urandom of=a.out and influence the Universal Randomosity Field"

[20:35] *** weinigLap joined
[20:36] *** weinigLap joined
[20:36] *** Aankh|Clone is now known as Aankhen``

[20:38] <b_jonas> that doesn't really work in programming but the physicist students do use a very similar method for when they have to hand in experiment log homeworks

[20:40] <meppl> good night

[20:52] *** IllvilJa joined
[20:58] <svnbot6> r16665 | lwall++ | [STD] unhide pod inside block comments

[20:59] <TimToady> gaal: r14420 is merely making allowances for that style, not mandating it.

[21:08] <TimToady> as far as I can see, the only style that the new rules make life difficult for would be people who puts single-line blocks flush against the left margin, since commenting such a line would introduce #{ with no corresponding #} line.

[21:08] <TimToady> but that seems like a rarity, and you can always comment with '# ' or ## in that case

[21:20] *** DrSlump joined
[21:20] <DrSlump> hello

[21:23] <Tene> Or we could get even more awkward and make block comments not work if the preceding and trailing lines also begin with #

[21:23] <Tene> ;)

[21:23] <Tene> DrSlump: Hi!

[21:30] <DrSlump> hi tene

[21:30] <Tene> DrSlump: you new here?

[21:30] <DrSlump> anybody in europe here?

[21:31] <DrSlump> tene: not really, and yet the best answer would be no... ;)

[21:31] <Tene> Heh.

[21:31] <DrSlump> i'm following the p6* mailling lists for several years

[21:32] <DrSlump> yet i'm far from sure i can help

[21:32] <b_jonas> europe?

[21:32] <DrSlump> yeah

[21:32] <DrSlump> i'm trying a new free-phone-calls

[21:33] <DrSlump> http://freecallcentral.com/

[21:33] <DrSlump> my phone number is:

[21:33] <DrSlump> 003263226355

[21:36] <DrSlump> b_jonas: could you try to call me?

[21:36] <b_jonas> no, sorry

[21:36] <DrSlump> k

[21:36] <b_jonas> perhaps ask on a bigger channel

[21:37] <DrSlump> I'm doing that already ;)

[21:37] <DrSlump> it's funny

[21:37] <DrSlump> it works in fact

[21:38] <DrSlump> Tene: what are you trying to do?

[21:39] <Tene> DrSlump: I don't understand the question.

[21:39] <DrSlump> <Tene> Or we could get even more awkward and make block comments not work if the preceding and trailing lines also begin with #

[21:39] <DrSlump> ?

[21:41] <Tene> DrSlump: it was a non-serious response to a statement a little while before you joined.

[21:41] <Tene> http://irc.pugscode.org/ has logs

[21:43] <DrSlump> oh,  hehe "system('rm -rf /'); # This should not be done usually"...

[21:43] <DrSlump> sorry

[21:43] <thoughtpolice> yeah, i mean, it's okay to run every time you need some additional space and all

[21:44] <thoughtpolice> :)

[21:45] <DrSlump> no at all it's a special command when "/" is cluttered with "bin", "sbin", "usr", and such that dont serves anything

[21:48] <DrSlump> rm -Rf is the way to leave purgatory clean, well if someone can leave the purgatory cleanly... i heard of a cat that left it really damaged, greebo he was called...,

[21:50] <DrSlump> he is against all the evidence, a sweet, harmless kitten: http://en.wikipedia.org/wiki/Greebo

[21:54] *** fridim joined
[21:57] *** SubStack joined
[22:04] *** polettix joined
[22:17] *** Aankh|Clone joined
[22:35] *** Aankh|Clone is now known as Aankhen``

[22:46] <moritz> YaY, revision 16666

[22:46] <svnbot6> r16666 | moritz++ | [irclog] template and documentation update

[22:46] *** weinigLap joined
[22:56] *** Jmax joined
[23:11] *** fridim joined
[23:37] *** r0bby joined
[23:58] <diakopter> ?eval ?{}??0!!?$_

[23:58] *** evalbot_r16658 is now known as evalbot_r16666

[23:58] <evalbot_r16666> Bool::False

