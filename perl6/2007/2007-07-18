[00:02] *** dvorak joined
[00:02] *** lambdabot joined
[00:06] *** ofer joined
[00:08] *** justatheory left
[00:09] *** xdg joined
[00:11] *** xdg left
[00:12] *** xdg joined
[00:14] <pugs_svnbot> r17097 | Darren_Duncan++ | ext/Muldis-DB/ : updated Language.pod concerning transaction specifying and scope

[00:14] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17097

[00:14] <lambdabot> Title: Changeset 17097 - Pugs - Trac

[00:15] <dduncan> can I assume that pugscode.org is not on feather?

[00:15] <dduncan> or is it?

[00:15] <dduncan> actually, probably not

[00:15] <dduncan> or the commit wouldn't have worked

[00:18] <diakopter> it is on feather..

[00:18] <Juerd> Routing still works

[00:18] <Juerd> I'm in the process of building a new router

[00:19] <Juerd> So far, I've screwed up twice already (I blame fatigue)

[00:19] *** drupek12 left
[00:19] <Juerd> First forgot to zero out the partition table

[00:20] <Juerd> And the second time I forgot that newer knoppixes use newer mdadm's, that default to a newer superblock version, that lilo cannot handle yet

[00:20] <Juerd> It's now booting for the third time.

[00:20] *** drupek12 joined
[00:23] <pugs_svnbot> r17098 | Aankhen++ | * [irclog] a few more abbrs.

[00:23] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17098

[00:23] <lambdabot> Title: Changeset 17098 - Pugs - Trac

[00:24] <Juerd> If I do everything right (probably not) you will experience not more than a network glitch

[00:24] <Juerd> If I'm fast enough (probably not) existing ssh sessions won't even die

[00:25] <Juerd> MAKEDEV--  # takes 55 seconds!

[00:25] <Juerd> Dear whoever developped MAKEDEV, please don't do all logic in shell scripting. It's incredibly slow.

[00:26] <Juerd> Dear myself, make a tarball of whatever MAKEDEV makes, and re-use that. It's the same every time anyway.

[00:27] <Juerd> Base system installed; installing kernel

[00:28] <Juerd> Dear Debian, why the hell is lilo executed before the kernel is installed?

[00:32] <Juerd> Restoring config

[00:35] <Aankhen``> Dear Juerd, I CAN HAZ CHEEZBURGER?  Love, Aankhen.

[00:37] <Juerd> No, sorry, but I can make you a cheese sandwich

[00:38] <Juerd> Come to Einsteinstraat 67, 3316 GG  Dordrecht, The Netherlands

[00:41] <Juerd> Here goes

[00:41] <Juerd> If you want to ping, ping 193.200.132.2 and feather

[00:41] <Juerd> :)

[00:44] *** devogon left
[00:46] *** d4l3k_ joined
[00:46] *** ruoso left
[00:46] *** devbot6 left
[00:46] *** devbot6 joined
[00:47] *** d4l3k_ left
[00:47] <diakopter> my two ssh sessions remained up WHEE!!!!!!!!!!!!!!!

[00:47] <Juerd> re

[00:47] <Juerd> That was...

[00:47] <Juerd> ...scary :)

[00:47] *** d4l3k_ joined
[00:47] *** dalek left
[00:48] *** d4l3k_ is now known as dalek

[00:48] *** buetow left
[00:51] *** nipotaway is now known as nipotan

[00:55] *** Schwern left
[01:05] *** ofer left
[01:11] *** ofer joined
[01:19] *** ashelyb_ left
[01:19] <diakopter> Juerd: I was exaggerating my elation. sorry to frighten you.

[01:21] <Juerd> I was frightened mostly by the PCI NIC that wouldn't fit.

[01:21] <Juerd> Most of the downtime was actually caused by mechanical problems!

[01:21] <Juerd> Fortunately, I carry a leatherman tool with pliers.

[01:21] *** REPLeffect left
[01:22] <devbot6> planet6: perl6.announce: Parrot 0.4.14 "Now, with Seat Belts!" Released by jerry gay <http://www.nntp.perl.org/group/perl.perl6.announce/2007/07/msg571.html>

[01:22] <lambdabot> http://www.nntp.perl.org/group/perl.perl6.announce/2007/07/msg571.html>

[01:23] <diakopter> heh

[01:23] <diakopter> devbot6: thank you

[01:23] <devbot6> diakopter: Error: "thank" is not a valid command.

[01:24] <diakopter> devbot6: help

[01:24] <devbot6> diakopter: (help [<plugin>] [<command>]) -- This command gives a useful description of what <command> does. <plugin> is only necessary if the command is in more than one plugin.

[01:31] *** Schwern joined
[01:39] *** Schwern left
[01:44] *** nperez joined
[01:47] *** Blwood left
[01:54] *** Schwern joined
[01:54] *** Schwern left
[01:56] *** ashleyb joined
[02:04] *** weinig left
[02:12] *** Alias_ joined
[02:12] *** xinming left
[02:16] <Aankhen``> I may have asked this before, but I can't find where

[02:16] <Aankhen``> … what is {*} for in STD?

[02:16] <Aankhen``> I think I've seen a few explanations but I couldn't really follow any of them.

[02:17] <diakopter> Aankhen``: backlog a bit; it was discussed earlier today

[02:18] <Aankhen``> OK, thanks.

[02:18] <diakopter> unless you were talking about the explanations from earlier today :) (sorry)

[02:20] <Aankhen``> Er, where was it discussed?

[02:20] <Aankhen``> Oh, possibly while I was asleep.

[02:20] * Aankhen`` hits up the online los.

[02:20] <Aankhen``> Logs, even.

[02:23] <Aankhen``> Ohhhhhh.

[02:24] <Aankhen``> [particle]++ # the ABC::Grammar stuff really helps.

[02:45] *** ashleyb left
[02:45] *** thorat left
[02:46] *** ashleyb joined
[02:47] *** mako132_ joined
[02:48] *** jedai left
[02:54] *** Schwern joined
[02:54] *** bonesss left
[02:55] *** weinig joined
[02:55] *** jhorwitz left
[02:57] *** ashelyb_ joined
[02:59] *** Neophyte[Away] joined
[03:04] *** ashleyb left
[03:18] *** Schwern left
[03:23] *** Alias_ left
[03:45] *** amnesiac joined
[04:07] *** mako132_ left
[04:09] *** kanru joined
[04:25] *** Schwern joined
[04:28] *** Squern joined
[04:29] *** Squern left
[04:29] *** Squern joined
[04:35] *** Alias_ joined
[04:37] *** pro21ms4 joined
[04:43] *** monomorph joined
[04:49] *** Schwern left
[05:11] *** devogon joined
[05:14] *** Squern left
[05:20] *** dduncan left
[05:28] *** sunnavy joined
[05:30] *** jisom joined
[05:33] *** dduncan joined
[05:38] <moritz_> Aye, it does

[05:39] *** dduncan left
[05:46] *** stevan_ left
[05:50] *** stevan_ joined
[05:51] *** ashleyb joined
[05:58] *** ashelyb_ left
[05:59] *** icy-lisper joined
[06:01] <icy-lisper> ?eval sub postfix: <!> ($n) { return [*] 1 .. $n }; say 8!;

[06:01] <evalbot_r17041> Error: ␤Unexpected ": <!>"␤expecting "::", "handles", "is", bare trait, subroutine parameters, trait or block

[06:01] <icy-lisper> ?eval sub postfix:<!> ($n) { return [*] 1 .. $n }; say 8!;

[06:01] <evalbot_r17041> OUTPUT[40320␤] Bool::True

[06:04] <moritz_> ?eval sub postfix :<!> { [*] 1..$^a }; 4!

[06:04] <evalbot_r17041> Error: ␤Unexpected ":<!>"␤expecting "handles", "is", bare trait, subroutine parameters, trait or block

[06:04] <moritz_> ok, no whitespace allowed at all

[06:04] <moritz_> ?eval sub postfix:< ! > { [*] 1..$^a }; 4!

[06:04] <evalbot_r17041> Error: ␤Unexpected "!"␤expecting "_", fraction, exponent, term postfix or operator

[06:06] *** ashelyb_ joined
[06:08] <bloonix> good morning

[06:08] <moritz_> good morning bloonix ;)

[06:13] *** ashleyb left
[06:24] *** elmex joined
[06:34] *** amnesiac left
[06:37] *** DarkWolf84 left
[06:40] *** franck___ left
[06:45] *** amnesiac joined
[06:45] *** amnesiac left
[06:48] *** iblechbot joined
[06:51] *** hakobe is now known as hkb_lab

[06:52] *** Neophyte[Away] left
[06:59] *** franck___ joined
[07:03] *** pro21ms4 left
[07:23] *** ashelyb_ left
[07:23] *** ashleyb joined
[07:42] *** weinig left
[07:43] *** Daveman left
[07:47] *** flokuehn joined
[07:47] *** franck____ joined
[07:52] *** Schwern joined
[08:04] *** franck___ left
[08:05] <moritz_> S02/"Immutable types" # irc log test

[08:06] <moritz_> YaY, it works ;)

[08:19] *** Schwern left
[08:24] *** xinming joined
[08:27] <thoughtpolice> oi, morning

[08:27] <thoughtpolice> hey moritz_ 

[08:27] *** masak joined
[08:28] <moritz_> hey thoughtpolice ;)

[08:28] *** moritz_ is now known as moritz

[08:29] *** Schwern joined
[08:35] *** pmurias joined
[08:35] <pmurias> hi

[08:38] *** pro21ms4 joined
[08:39] <masak> hi pmurias 

[08:44] *** franck___ joined
[09:01] *** Schwern left
[09:01] <thoughtpolice> @tell [particle] i submitted my dragonfly smokes for 0.4.13; they're out of the tarball and not the svn repo, although I'm most likely going to get around to pulling a svn copy pretty soon and after which I'll set up a cron or somesuch to get the latest revision and run a smoke for you guys

[09:01] <lambdabot> Consider it noted.

[09:01] *** franck____ left
[09:02] <thoughtpolice> damn, I'm behind the times. 0.4.14 was just released?

[09:02] <thoughtpolice> now i feel obsolete

[09:02] <moritz> ;)

[09:02] <moritz> http://www.nntp.perl.org/group/perl.perl6.announce/2007/07/msg571.html

[09:02] <lambdabot> Title: Parrot 0.4.14 "Now, with Seat Belts!" Released - nntp.perl.org, http://tinyurl.com/ypggma

[09:03] <moritz> cool name, I have to admit

[09:03] <moritz> fitting for all the lint/splint things they have done

[09:03] <masak> moritz: the name makes you not want to try the earlier versions

[09:03] <thoughtpolice> i think i'll be fine

[09:03] <moritz> masak: aye ;)

[09:03] <thoughtpolice> i just need to drive safely :)

[09:03] *** flokuehn left
[09:04] <masak> thoughtpolice: :)

[09:04] *** flokuehn joined
[09:04] <masak> why don't you upgrade?

[09:04] <thoughtpolice> masak: i'm actually running that smoke right now

[09:04] <moritz> as someone on #parrot put it: "with seat belts, but not everone is buckled yet" ;)

[09:04] <thoughtpolice> and it's out of a tarball

[09:04] <thoughtpolice> masak: after I get this smoke done I'll pull the svn repo and from there I can start doing regular smokes

[09:05] <masak> thoughtpolice: ah, ok

[09:06] <thoughtpolice> gah

[09:07] *** buetow joined
[09:07] <thoughtpolice> * Sending data to smokeserver "http://smoke.parrotcode.org/smoke/"... error: The submitted smoke has an invalid format!

[09:07] <thoughtpolice> screw it; I'll pull the SVN repo and see if I can get it done from there.

[09:08] <thoughtpolice> only now I also have to install svn.

[09:08] <thoughtpolice> oh, the woes

[09:08] <masak> :)

[09:08] <thoughtpolice> of having a brand new system, that is

[09:09] <moritz> aptitude install subversion # debian++

[09:09] <thoughtpolice> my dfbsd box is somewhat in its infancy :(

[09:09] <thoughtpolice> cd /usr/pkgsrc/devel/subversion; bmake install

[09:09] <thoughtpolice> pkgsrc++

[09:09] <thoughtpolice> :)

[09:09] *** franck____ joined
[09:10] <thoughtpolice> i would use git-svn for doing it since I already have git on there

[09:10] <moritz> I'm just compiling pugs on maschine by bloonix++ ;)

[09:10] <thoughtpolice> but I'm not exactly sure of its overall mechanics in case I ever want to submit code

[09:11] <thoughtpolice> (since I'd probably want to use a branch for it)

[09:11] <moritz> that's really cool, installing all dependencies within minutes

[09:13] <thoughtpolice> i have to compile my stuff

[09:13] <thoughtpolice> on both my bsd boxes

[09:13] <thoughtpolice> but I really have no problem with it; I don't quite know why people complain about compilation so much

[09:14] <moritz> i takes time

[09:14] <moritz> that's all

[09:14] *** Aankhen`` left
[09:14] <thoughtpolice> i guess the time of the compilation isn't too life-altering for me; I normally have other things I can partake in at the time :>

[09:14] <moritz> and when I want ghc installed, I don't want to wait 3 hours until it finishes with bootstrapping itself ;)

[09:15] <thoughtpolice> hah. i don't think it took quite 3 hours for 6.6.1 to install here

[09:15] <moritz> but on my (slow) maschine

[09:15] <thoughtpolice> overall I'd say it would have taken around there though, since I had to compile 6.2.4 from C first

[09:15] <moritz> still, it will be more than an hour for you

[09:15] <thoughtpolice> and then compile 6.6.1

[09:16] <thoughtpolice> moritz: this thing has 256mb ram with a p4 and like

[09:16] <thoughtpolice> 8gb of hdd space (openbsd box)

[09:16] <moritz> thoughtpolice: sounds like no fun to compile pugs on it ;)

[09:16] <thoughtpolice> kinda

[09:16] <thoughtpolice> :x

[09:18] *** dmq joined
[09:18] <thoughtpolice> hm. i feel like coding something.

[09:18] <thoughtpolice> a lot.

[09:19] <moritz> hack pugs. or kp6

[09:19] <thoughtpolice> no, something more low level.

[09:19] <thoughtpolice> parrot mayhaps?

[09:19] <moritz> yes

[09:19] <moritz> or perl6-on-parrot

[09:19] <thoughtpolice> I haven't licked my C chops in a while

[09:20] *** idiotmax joined
[09:24] *** franck___ left
[09:24] *** franck___ joined
[09:24] *** chris2 joined
[09:26] *** Schwern joined
[09:27] *** nothingmuch joined
[09:27] *** beppu joined
[09:28] *** bloonix left
[09:28] *** bloonix joined
[09:36] *** franck____ left
[09:44] *** zamolxes joined
[09:56] *** agentzh joined
[09:57] <agentzh> *** Cannot find GHC 6.6.1 or above from path (we have 6.6).

[09:57] <agentzh> *** Please install a newer version from http://haskell.org/ghc/.

[09:57] <lambdabot> Title: The Glasgow Haskell Compiler

[09:57] <masak> agentzh: well, have you?

[09:57] <moritz> agentzh: audreyt++ recently added the new dependency

[09:58] <agentzh> moritz: feather still uses GHC 6.6, i'm afraid.

[09:58] <masak> oh, it's feather

[09:58] *** buetow left
[09:59] <moritz> agentzh: then it's just wating for an update - feather is unstable, and I know that testing has 6.6.1

[09:59] <agentzh> if anyone with root access to feather, please update the GHC there. :)

[09:59] <agentzh> s/with/has/

[09:59] <masak> who does have root on feather?

[09:59] <agentzh> me :)

[10:00] <agentzh> and a few others.

[10:00] <masak> agentzh: so... if you have it...

[10:00] <moritz> diakopter, Juerd , TimToady , adureyt

[10:00] <moritz> s/du/ud/

[10:01] <agentzh> well, i'm currently on holiday and the windows box i'm using doesn't have putty...

[10:01] *** aindilis left
[10:01] <moritz> windows--

[10:01] <masak> agentzh: putty is downloadable on the web

[10:02] <moritz> it should be made a crime to ship an OS without ssh

[10:02] <agentzh> masak: i know that part...but i'm just too lazy ;)

[10:02] <masak> ah, ok

[10:02] *** aindilis joined
[10:04] <agentzh> the web connection is very bad here, especially while using CGI:IRC...i'm off :) &

[10:04] *** agentzh left
[10:13] *** iblechbot left
[10:13] <thoughtpolice> @karma windows

[10:13] <lambdabot> windows has a karma of -6

[10:13] <thoughtpolice> hah.

[10:14] *** xdg left
[10:18] *** hcchien joined
[10:24] *** franck____ joined
[10:40] *** masak left
[10:40] *** franck___ left
[10:40] *** franck___ joined
[10:50] *** franck____ left
[10:54] *** iblechbot joined
[10:56] *** awwaiid left
[10:56] *** awwaiid joined
[11:04] *** masak joined
[11:10] <meppl> gugu

[11:11] <TimToady> I always carry a copy of putty on my USB stick...

[11:11] <TimToady> moritz: the postfix:< ! > form ought to work

[11:12] <TimToady> since it should canonicalize to postfix:{'!'}

[11:12] <moritz> I thought so

[11:12] <TimToady> but the other forms don't admit whitespace

[11:12] <moritz> the <...> is just the list constructor, irght?

[11:13] <TimToady> it's the qw// naked form as used to represent constant subscript slices

[11:13] <TimToady> hash slicing syntax, essentially

[11:14] <TimToady> so circumfix:< ( ) > turns into circumfix:{'(',')'}

[11:14] <moritz> ok

[11:14] <TimToady> I use extra whitespace in STD for instance

[11:14] <thoughtpolice> @tell [particle] scratch that last message; I just pulled parrot's SVN repo and the smokes went great and they've been submitted; I'll continue smoking future revisions for you guys on dragonfly.

[11:14] <lambdabot> Consider it noted.

[11:15] <moritz> TimToady: did you read [particle]'s suggestions about using grammar subclassing for perlhints?

[11:15] <TimToady> darn my compose key is broken...

[11:15] <thoughtpolice> 7255 OK from 7262 tests (99.90% ok)

[11:15] <thoughtpolice> almost there. :>

[11:15] <moritz> buy a new one? *g*

[11:15] <thoughtpolice> i need a new keyboard and chair

[11:15] <TimToady> I think that would help in I18n eventually

[11:15] <TimToady> or some other kind of indirection

[11:16] <moritz> and do you think it works?

[11:16] <thoughtpolice> anybody have any recommendations?

[11:16] <thoughtpolice> i've heard microsoft's natural ergonomic keyboard 4000 is totally awesome

[11:17] <TimToady> moritz: would probably depend on how the data structures actually attach

[11:18] <TimToady> it's an interesting question whether a subclass can turn dumb comments into smart comments after the fact in a used module...

[11:19] <moritz> well, the subclass would hold the data, and not as comments

[11:19] <TimToady> sorry, was going off on a tangent

[11:19] <moritz> never mind ;)

[11:21] <moritz> and should all tokens that actually match text (not assertions) actually get a {*}?

[11:21] <moritz> I noticed lambda has none, so I guess a compiler couldn't determine if -> or <-> was parsed

[11:23] <TimToady> yes, lambda is an example of a missing {*}

[11:23] <TimToady> it should be a separate token

[11:23] <moritz> ok

[11:24] <TimToady> from a grammar point of view, it could be processed in the rule above as $<lambda>, but you might want a hook in the actual rule

[11:31] *** franck____ joined
[11:32] *** mncharity left
[11:43] <masak> I did a bit of grepping in t/ for tests relating to the bug we uncovered in pugs yesterday

[11:43] <masak> ?eval my $a = 'word'; --$a; $a

[11:43] <evalbot_r17041> \-1.0

[11:44] <masak> didn't find anything relating to ++ and -- of string values

[11:44] <TimToady> and did you find any such tests?

[11:44] <masak> TimToady: no

[11:44] <masak> there's t/operators/inc.t

[11:44] *** nipotan is now known as nipotaway

[11:44] <masak> but it almost exclusively does numbers

[11:45] <masak> so I'm adding some string ++ and -- tests if that's ok

[11:45] <TimToady> masak++

[11:45] <moritz> more tests are always good ;)

[11:45] <masak> should anyone ever realize they're duplicates, I guess that's easily fixed :)

[11:46] <moritz> masak: the smartlinks should show that easily

[11:47] <masak> moritz: how? I know about them, but not where they are

[11:48] *** franck___ left
[11:48] <moritz> masak: when you look at http://perlcabal.org/syn/S02.html, you see those links like "- Show t/regex/smartparse.t lines 9–14 (0 √, 1 ×) -"

[11:48] <lambdabot> Title: S02

[11:49] <masak> moritz: thx

[11:49] <moritz> you're welcome

[11:51] <masak> ah, found it

[11:51] <masak> it's t/operators/auto.t

[11:53] <masak> but all tests pass in that one, so I'm sure I could add something :)

[11:53] <sunnavy> hi, does anyone encounter this: when `make test' about pugs, your box will be shutted down surprisingly. my os is Gentoo, Pugs is up to date and GHC is 6.6.1.

[11:54] <masak> sunnavy: sounds very unfortunate. do you get any message about it?

[11:54] <moritz> what do you mean by "shutted down"? as if you typed "halt"?

[11:54] <sunnavy> moritz: yes

[11:54] <TimToady> in the compile or in the smoke?

[11:54] <moritz> sunnavy: are you compiling as root?

[11:55] <moritz> sunnavy: a normal user shouldn't have the right to shutdown 

[11:55] <sunnavy> moritz: I don't think so.

[11:55] <TimToady> and if in the compile, how much memory on the box?

[11:55] <TimToady> I'm thinking running out of swap space maybe

[11:55] <sunnavy> TimToady: I think it's in the smoke.

[11:55] <moritz> sunnavy: does that happen every time?

[11:56] <TimToady> though should just give "out of memory"

[11:56] <sunnavy> I tried 3 times :-(

[11:56] <moritz> :(

[11:56] <TimToady> same place in the smoke?

[11:56] <masak> ?eval my $foo = 'A99'; ++$foo;

[11:56] <evalbot_r17041> "B00"

[11:56] <masak> TimToady: is the reverse still true in p6?

[11:56] <masak> i.e -- gives back A99

[11:56] <masak> or are both false?

[11:57] <sunnavy> it's suddenly shutted down, I even don't have time to look.

[11:57] <TimToady> should go to A99, yes

[11:57] <masak> ok

[11:57] <sunnavy> Next time I'll stare at this

[11:57] <TimToady> and A00 should fail

[11:57] <masak> ok

[11:58] <moritz> sunnavy: try to run 'script pugs_smoke.log' and then 'make smoke'

[11:58] <moritz> sunnavy: then you have a transcript after reboot ;)

[11:59] <TimToady> you might force an fsck

[11:59] <masak> why's it called "autoincrementing" anyway?

[11:59] <sunnavy> thanks, moritz. I'll try again.

[11:59] <TimToady> PDP-11

[11:59] <moritz> masak: auto = self

[11:59] <masak> moritz: ah, 'course

[11:59] <masak> thought of it as 'automatic' there for a while

[12:00] <moritz> what's "matic"? *g*

[12:00] <TimToady> mov @R0++,@R1++ or some such

[12:00] <masak> moritz: :)

[12:00] <masak> TimToady: cool

[12:00] <sunnavy> If I'm out of irc soon, you'll know what happened ;-)

[12:00] <moritz> ;)

[12:00] <masak> TimToady: did PDP-11 have pre- as well?

[12:01] <TimToady> I think so, good for stack ops

[12:02] <TimToady> pushes did --(

[12:02] <TimToady> --(SP) and pops (SP)++

[12:03] <TimToady> so stacks grew downward

[12:03] <masak> as they should :)

[12:04] <TimToady> which lets buffer overflows clobber your return address. :(

[12:04] <masak> oops

[12:04] <masak> maybe an argument for the harvard architeture after all

[12:05] <masak> http://en.wikipedia.org/wiki/Harvard_architecture

[12:05] <lambdabot> Title: Harvard architecture - Wikipedia, the free encyclopedia

[12:05] <moritz> sunnavy: still there? *g*

[12:06] <pugs_svnbot> r17099 | masak++ | [t/operators/auto.t]

[12:06] <pugs_svnbot> r17099 | masak++ | * added tests for auto-decrementing of string variables

[12:06] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17099

[12:06] <lambdabot> Title: Changeset 17099 - Pugs - Trac

[12:06] <TimToady> http://www.anvari.org/fortune/Laws_2/481_harvard-law-under-the-most-rigorously-controlled-conditions-of-pressure-temperature-volume-humidity-and-other.html

[12:06] <lambdabot> Title: Harvard Law Under the most rigorously controlled conditions of pressure, tempera ..., http://tinyurl.com/yrvkoj

[12:07] <masak> TimToady: :)

[12:08] *** r0bby left
[12:10] *** Daveman joined
[12:15] *** jhorwitz joined
[12:16] *** ashelyb_ joined
[12:17] *** ashleyb left
[12:18] *** sunnavy left
[12:18] *** pro21ms4 left
[12:27] *** DarkWolf84 joined
[12:31] <moritz> is there a git repository clone of pugs anywhere?

[12:37] <masak> http://www.ohloh.net/projects/3300

[12:38] <lambdabot> Title: Pugs - Ohloh, the open source network

[12:38] <masak> how come it says on that page that the Pugs project is mostly written in Perl?

[12:40] <wolverian> it doesn't grok haskell

[12:40] <masak> that explains it

[12:40] <masak> who does, by the way? :)

[12:40] <moritz> lol

[12:40] <wolverian> try #haskell.. :)

[12:40] <moritz> ghc and audreyt, I guess ;)

[12:40] <TimToady> um, quite a few folks in this room...

[12:41] <masak> true

[12:41] <wolverian> just ask, don't ask to ask! (;

[12:42] <masak> wolverian: is it just meta-asking that's not ok, or are questions like this fine?

[12:43] <wolverian> I have a headache.

[12:43] <masak> ehm, s/ or//

[12:43] <TimToady> "Anything you can do I can do meta; I can do anything meta than you!"

[12:44] <thoughtpolice> no you can't!

[12:45] *** ashleyb joined
[12:45] <TimToady> not me. that was from "Annie get your pun!"

[12:45] <thoughtpolice> moritz: me kinda sorta. :(

[12:45] <moritz> thoughtpolice: do you have a clonable URL for me?

[12:45] <thoughtpolice> moritz: i meant in relation to 'grok haskell'

[12:46] <thoughtpolice> moritz: git has built in support for svn though

[12:46] <thoughtpolice> man git-svn

[12:46] <moritz> thoughtpolice: ah, ok

[12:46] <thoughtpolice> you'll need perl libs for SVN though.

[12:46] <thoughtpolice> but yeah it works

[12:46] <moritz> thoughtpolice: I no about git-svn, but I don't want to stress feather's network more than necessary

[12:46] <thoughtpolice> ah.

[12:46] <thoughtpolice> in that case i don't know of a git repo. :(

[12:46] <TimToady> .oO(Annie git your pun)

[12:47] <moritz> maybe I should get a feather account to set one up

[12:47] <thoughtpolice> moritz: i could probably see if the guy who hosts my website would let me use tailor and put a git repo there

[12:48] <thoughtpolice> moritz: the thing is getting in contact with him (he lives in sweden, I live in texas. damn geography and time zones :( )

[12:48] <thoughtpolice> if not i could just put one on my feather account

[12:48] <moritz> thoughtpolice: feather would be preferable, because then the initial checkout is not such a pain for feather

[12:49] <thoughtpolice> moritz: then we could just use my account.

[12:50] <masak> TimToady: that was a bit meta, too

[12:50] <thoughtpolice> I've been meaning to also use it to host some pugs haddock documentation, but right now the haddock comments all aren't valid (although it wouldn't take much effort to make them valid I assume)

[12:51] <masak> there should be a direct link to the Wayback Machine on 404 pages

[12:52] *** mncharity joined
[12:52] <thoughtpolice> moritz: when Juerd's around I'll ask him about it.

[12:53] <moritz> thoughtpolice: I'm sending him an email right now to get a feather account

[12:53] <thoughtpolice> ah cool

[12:53] <moritz> thoughtpolice: i guess it's handy after all

[12:54] *** ashelyb_ left
[12:55] <thoughtpolice> moritz: a git repo would be nice i'd think. :>

[12:55] <thoughtpolice> git rocks pretty nicely. and plus I think I found my new favorite command: git-bisect

[12:55] *** pmurias left
[12:56] <moritz> ;)

[12:56] <moritz> binary search to trac regressions, right?

[12:56] <moritz> s/trac/locate/

[12:56] <thoughtpolice> binary search to find which commit blob introduced a bug

[12:57] <thoughtpolice> which as you'd think is pretty useful, and using it is really really easy

[12:58] <thoughtpolice> just mark a good commit and a bad one, and start a bisection. it'll put you at various points in the commit history and you just tell git whether that commit at that point was good or bad. eventually you'll narrow it down to the commit that gave you your bug

[12:58] *** stevan_ left
[12:58] *** stevan_ joined
[13:02] *** sunnavy joined
[13:04] <sunnavy> uh, after halt for another 3 times, I got the reason: my box was too hot to bare the tests. :-(

[13:05] *** drupek12 left
[13:07] *** masak left
[13:07] *** masak joined
[13:08] <szbalint> sunnavy: it's always something simple isn't it? :)

[13:10] *** Alias_ left
[13:10] *** drupek12 joined
[13:10] *** funktio joined
[13:12] <sunnavy> szbalint: yeah. oh, my poor box

[13:18] <masak> sunnavy: so once again it's confirmed: Perl 6 is hot

[13:20] <thoughtpolice> @quote masak so once again it's confirmed: Perl 6 is hot

[13:20] <lambdabot> No quotes for this person. Listen, broccoli brains, I don't have time to listen to this trash.

[13:20] <thoughtpolice> er

[13:20] <thoughtpolice> @remember masak so once again it's confirmed: Perl 6 is hot

[13:20] <lambdabot> Done.

[13:20] <thoughtpolice> lambdabot insults hurt :(

[13:20] <masak> thoughtpolice: thx. the quote sort of loses its punch outside of the context of sunnavy++'s box, though

[13:22] <diakopter> thoughtpollice: re: "no you can't!" - "Yes, I can!" ;)

[13:22] <thoughtpolice> diakopter: no you can't!

[13:23] <diakopter> Yes I can!

[13:23] <thoughtpolice> you win. :(

[13:23] <diakopter> :P

[13:23] <diakopter> too bad I don't know any more lyrics to that song

[13:24] <thoughtpolice> i remember that part because I see commericals with it in them when I actually watch TV

[13:24] <thoughtpolice> which is somewhat rare at best. tv really sucks. :(

[13:24] *** franck___ joined
[13:25] *** mj41 left
[13:25] *** nperez left
[13:26] *** ashelyb_ joined
[13:26] <diakopter> I had *thought* I'd already updated feather to 6.6.1... but I'll upgrade it now if not.

[13:27] *** nperez joined
[13:28] *** nperez left
[13:28] <diakopter> oh.  it's b/c someone put a 6.6 build in /usr/local/bin

[13:29] <diakopter> yes, MS Keyboard 4000 rocks, in reply to whoever said that.

[13:29] *** mj41 joined
[13:31] <diakopter> k.... 1;0 root@feather:~# which ghc

[13:31] <diakopter> 1;0 root@feather:~# ghc --version

[13:31] <diakopter> The Glorious Glasgow Haskell Compilation System, version 6.6.1

[13:35] *** ashleyb left
[13:35] *** sunnavy left
[13:37] <thoughtpolice> diakopter: me

[13:37] <thoughtpolice> yeah that's what I've heard about the 4000 (some say it's the best keyboard they've ever used)

[13:37] <thoughtpolice> and at $40 I'd be willing to pay for that, I've heard a lot of praise

[13:37] <masak> diakopter: IBM Model M keyboards rock too, but in an orthogonal way

[13:38] *** xdg joined
[13:38] <thoughtpolice> i used to have a legendary IBM clicky

[13:38] <thoughtpolice> unfortunately when we got rid of our old DOS system my father used it was also taken away. :(

[13:39] *** franck____ left
[13:39] <diakopter> I dunno if I agree with that.  The 4000 is kinda loud; I learned to type on a rusty typewriter and I'm a guitarist, so I tend to strike each key with about 80N.

[13:39] <thoughtpolice> hah.

[13:39] <diakopter> I had an old compaq ps/2 keyboard that was whisper quiet, even with that style of typing.

[13:40] <thoughtpolice> well I'm mainly looking for something nice and ergonomic and I've heard lots of praise for the NE 4000

[13:40] <diakopter> old meaning 1990

[13:40] <thoughtpolice> I also need a chair too, because this one really sucks.

[13:40] <thoughtpolice> any recommendations on that note?

[13:42] <thoughtpolice> i've never had a really good keyboard or chair and everybody tells me it makes a world of difference. to be honest, I'm pretty sick of this chair/keyboard anyway.

[13:43] <diakopter> I knew a guy during college who had a keyboard with the LHS and RHS on opposite sides of a vertical plane.

[13:44] <thoughtpolice> i also probably need to switch to dvorak one of these days

[13:44] *** franck____ joined
[13:47] <masak> thoughtpolice: amen. me too

[13:48] <masak> http://dvorak.nl/

[13:48] <lambdabot> Title: dvorak.nl (aoeu.nl)

[13:48] <diakopter> I still say someone should produce/sell a keyboard optimized for Perl 6. :)

[13:49] *** ashelyb_ left
[13:49] <diakopter> sure, the market would be small, at first.

[13:50] <masak> diakopter: design one and put the design notes online

[13:50] <masak> somebody will be tempted enough to build one

[13:50] <masak> and then the ball is rolling

[13:55] <moritz> @seen sunnavy

[13:55] <lambdabot> I saw sunnavy leaving #perl6 19m 20s ago, and .

[13:56] <masak> I was never sure what lambdabot wanted to say after the "and"

[13:56] <moritz> masak: probably the parting message, if there was one

[13:57] <diakopter> I *hate* these keys: Shift, Ctrl, Alt.  Why can't the space bar be much smaller (or elsewhere) and let the thumbs operate Shift, Ctrl, Alt toward the center of the bottom row?  continually torquing the wrists or 4th fingers to reach Shift to Shift the number row, or to reach Ctrl, Alt, or Apple/Command/Windows is torturous.

[13:58] *** iblechbot left
[13:59] *** franck___ left
[13:59] * diakopter rants about people who use irc channels as their personal rant blogs.

[14:00] <masak> .oO( modular rebuildable keyboards )

[14:00] <Patterner> my space key is the same size as the enter key. and I use thumbs for ctrl, alt and backspace...

[14:01] <szbalint> I simply have big hands. :)

[14:01] <diakopter> Patterner: does your enter key touch the ;: key? or is the '" key there?

[14:01] *** xdg left
[14:01] <Patterner> the enter key is surrounded by page down, page up, alt, ctrl and space

[14:02] <diakopter> I haven't seen that keyboard

[14:02] <awwaiid> I was just pondering about the use of ';' to separate statements and how it is so conveniently located under the pinky

[14:02] <moritz> just a minute ago I read about a german startup where you can design and order your own keyboard layout...

[14:02] <awwaiid> and what a waste that key is for non-code

[14:02] <Patterner> diakopter: kinesis ergo elan

[14:02] <moritz> and that's printed and attached as a USB keyboard

[14:03] <Patterner> the russion optimus keyboard?

[14:03] <masak> moritz: URL?

[14:04] <moritz> masak: http://flippress.com/

[14:04] <moritz> masak: I think they just started, I don't know if you can already order the keyboards

[14:05] <diakopter> Patterner: *wow* those Kinesis ones look cool.

[14:06] <diakopter> with a 3-pedal foot switch!

[14:06] <Juerd> I have a Kinesis Ergo Contoured keyboard

[14:06] <Juerd> I love the form factor, but the cherry switches are too heavy.

[14:07] <Juerd> (require much force. I don't know if "heavy" is the proper term.)

[14:07] <diakopter> I almost suspect that a pipe organ rank would enable faster typing than a keyboard.  and sound better.

[14:09] <masak> :)

[14:09] <diakopter> use v6::mixolydian;

[14:09] *** TJCRI joined
[14:10] <Patterner> Juerd: i have no problem with mine

[14:10] *** franck___ joined
[14:11] <diakopter> of course, that would have to be editor-time enabled.

[14:11] <Juerd> Patterner: Your hands are probably not as ruined as mine

[14:12] <Patterner> probably... although I bought mine because I started to get joint aches...

[14:15] *** icy-lisper left
[14:20] <thoughtpolice> Patterner: help much?

[14:21] <Patterner> yes. no problems since I got it.

[14:22] *** rhandom joined
[14:22] <moritz> thoughtpolice: if you have much space, you could use an old car seat

[14:22] <moritz> thoughtpolice: they are designed so that you can sit quite a long time in them, and you can get them rather cheaply

[14:23] <moritz> thoughtpolice: ... at your nearest scrap yard

[14:24] *** rashakil left
[14:26] *** franck____ left
[14:26] <[particle]> Juerd: did you get my testimonial?

[14:26] <lambdabot> [particle]: You have 2 new messages. '/msg lambdabot @messages' to read them.

[14:26] <thoughtpolice> moritz: hah

[14:26] *** ashleyb joined
[14:26] <moritz> thoughtpolice: I read that once on /. and it sounded like a good idea to me ;)

[14:26] <thoughtpolice> i'd get some awesome seat covers then

[14:27] <[particle]> thoughtpolice++ # the parrot team thanks you for smoking parrot

[14:27] * [particle] showers &

[14:27] <thoughtpolice> [particle]: np. i also did a smoke for the languages

[14:27] <[particle]> yay

[14:27] <thoughtpolice> on the regular tests you have 99.9% passing

[14:27] <thoughtpolice> on the languages it was about 90% flat

[14:27] <thoughtpolice> so pretty good. :)

[14:28] *** rdice joined
[14:31] <moritz> the parrot team has pretty good QA ;)

[14:31] <moritz> I think I never say a parrot smoke on my maschine with more than 15 tests failing

[14:31] <moritz> and only once or twice one with more than 5

[14:32] <rdice> moritz:  kid51 (Jim Keenan) and Andy have really buckled down on that over the past few months.  And good on 'em.

[14:32] <Juerd> [particle]: That depends on your name :)

[14:32] <Juerd> afk

[14:32] <thoughtpolice> moritz: for the regular tests dfbsd only failed 7

[14:32] <moritz> kid51++, Andy++

[14:33] <thoughtpolice> (0.4.14)

[14:33] <thoughtpolice> on the languages ~200 failed

[14:33] <thoughtpolice> but it's getting there at least. :)

[14:33] <moritz> and I have a rather common system ( debian linux on i386 )

[14:33] <thoughtpolice> ouch

[14:33] *** franck____ joined
[14:34] <thoughtpolice> on fbsd 0.4.14 the languages only passed with 37% ok

[14:35] <thoughtpolice> almost all of the lua, apl, tcl and regex tests failed. 

[14:35] *** r0bby joined
[14:37] <diakopter> there are studies that conclude seat belt usage generally causes individuals to drive more daringly (because of the increased sense of "safety"), but without the increased alertness that more daring drivers utilize, thence more wrecks/injuries for seat belt users and their victims.

[14:38] <thoughtpolice> people are dumb.

[14:38] <thoughtpolice> really.

[14:38] <moritz> thoughtpolice: FULL ACK ;)

[14:38] * diakopter is a daring driver.

[14:39] <diakopter> people are zombies

[14:39] <thoughtpolice> getting eaten by zombies would suck. :(

[14:40] * diakopter hopes the increased seat belts in parrot cause parrotfolks to be more daring (and alert). :)

[14:40] <moritz> thoughtpolice: unless they are attractive female zombies ;)

[14:40] <diakopter> (not that they are lacking in dare/alertness currently; I'm just trying to salvage the metaphor.

[14:41] <thoughtpolice> in any case, I need to go mow my lawn and shower before it gets too blazingly hot outside and i turn into proverbial fried chicken

[14:41] * thoughtpolice --status=away --reason=chores &> /dev/null &

[14:43] <[particle]> diakopter: just cause we have seatbelts doesn't mean folks are using 'em. that's next. then airbags and abs. :)

[14:43] <[particle]> Juerd: [email@hidden.address] # i'll let you guess my name :)

[14:44] <[particle]> great, now i'm hungry for some pfc. thanks, thoughtpolice.

[14:44] <Juerd> [particle]: Then I got it :)

[14:45] <[particle]> great

[14:45] <Juerd> Indeed :)

[14:48] <[particle]> i suspect frequency analysis of the perl 6 test suite would reveal that many sigiltwigil and other metacharacters belong in unshifted kb positions

[14:48] *** franck___ left
[14:48] <[particle]> how'd you like <shift-left index> := 4

[14:50] <moritz> I want a foot pedal for $ and @

[14:50] <[particle]> and ;

[14:51] <args> you have only two feed, haven't you

[14:51] <moritz> [particle]: that's better reachable

[14:51] <[particle]> i'm heavily biased towards left-pinky-shift

[14:51] <[particle]> i've probably used right-pinky-shift 20 times in 10 years

[14:52] *** cerridwen left
[14:52] * moritz thinks about a second layer keyboard above the first one that can be operated by pushing the hands upwoards

[14:54] *** Patterner left
[15:02] *** kanru left
[15:09] *** flokuehn left
[15:10] *** daxim_ left
[15:15] *** pro21ms4 joined
[15:15] *** DarkWolf84 left
[15:26] <moritz> can anybody over his/her p6 OO wisdom on that thread: http://www.perlmonks.org/?node_id=627130

[15:26] <lambdabot> Title: &#91;Perl 6&#93; Object methods on the fly?

[15:28] <masak> interesting question

[15:40] *** REPLeffect joined
[15:45] *** franck____ left
[15:58] *** masak left
[16:04] *** ashelyb_ joined
[16:09] *** Blwood joined
[16:13] *** franck___ joined
[16:14] *** ashleyb left
[16:17] *** weinig joined
[16:25] *** TJCRI left
[16:26] *** TJCRI joined
[16:37] *** justatheory joined
[16:45] *** TJCRI left
[16:46] *** randomity joined
[16:47] *** aindilis left
[16:51] *** TJCRI joined
[17:10] *** buetow joined
[17:19] *** bonesss joined
[17:21] *** aindilis joined
[17:29] *** dduncan joined
[17:31] *** Blwood left
[17:39] *** randomity left
[17:39] *** pro21ms4 left
[17:41] *** Psyche^ joined
[17:41] *** Psyche^ is now known as Patterner

[17:56] *** iblechbot joined
[18:00] *** pmurias joined
[18:01] *** buubot joined
[18:04] *** ashelyb_ left
[18:09] *** joao joined
[18:20] *** rho joined
[18:21] *** offby1 joined
[18:27] <rdice> I've a perl6 technical/philosophical question I'd like some help with, in case anyone out there has insights I don't on something.

[18:28] <rdice> What are references (well, captures) good for in p6?  I mean, when I think about what I use them for in p5 it's a) param passing of arrays and hashes to subs, and b) creating complex data structures.

[18:29] <rdice> But in p6 we've got a) real param definitions for subs and b) "flattening" of arrays and hashes isn't the behaviour, so you can stick your arrays and hashes into each other directly.

[18:29] *** REPLeffect left
[18:29] <rdice> So what's left?  (Captures are cool for currying and co-routines and such I guess.)

[18:30] *** REPLeffect joined
[18:31] <TimToady> basically, whenever you need to delay binding an argument list

[18:31] <TimToady> suppose you want to pass an argument list to a switch statement

[18:32] <TimToady> in order to to serial matching rather than unordered matching like mmd does

[18:32] <TimToady> mostly you get capture objects in wrappers that don't want to bind

[18:32] *** bonesss left
[18:33] <TimToady> sub wrappush (|$capture) { ... push |$capture; ... }

[18:33] <TimToady> that doesn't need \ of course

[18:33] <TimToady> Match objects are also derived from Capture

[18:34] <TimToady> so you could fake a match with $/ := \($foo, $bar, :baz(42) )

[18:35] <TimToady> (wouldn't have .from or .to attrs tho)

[18:37] *** crem_ left
[18:37] <rdice> Thanks TimToady.  

[18:37] *** crem_ joined
[18:39] <rdice> As suspected, references/captures exist and can be used in p6 as they are used in p5, but if you're using them that way then you're not doing idiomatic p6.  And the idiomatic p6 uses of captures barely even have analogs in p5.

[18:41] <TimToady> they're almost like (shh!) anonymous typeglobs

[18:43] *** SportChick joined
[18:45] <rdice> That thought had occurred to me. :-)

[18:46] <TimToady> which is another argument for not using them much. :)

[18:52] <rdice> Captures seem to serve as an awesome "grand unified theory" of several underlying aspects of p6, to the point where they're basically an object of semantics made concrete, and bordering on implementation.  In that sense I'm astonished by their beauty.

[18:52] <rdice> But as just another perl hacker, I'm still struggling to see how I might ever use them.  But I felt that way about closures once too.

[18:52] <rdice> Maybe when I finally bootstrap myself into functional programming I'll have a renewed appreciation of what I might do with them.

[18:52] *** offby1 left
[18:52] *** funktio left
[18:53] <TimToady> they're essentially the complement to the signature matching that is pervasive in FP

[18:54] <TimToady> It's kinda strange to be able to say $foo ~~ $signature and not have a type for $foo

[18:55] <TimToady> and my (...) := $foo is essentially the same

[18:56] <TimToady> well, I guess it'd have to be |$foo there

[18:57] *** ashleyb joined
[18:57] *** ashleyb left
[18:59] <TimToady> dinner &

[19:09] <dduncan> way off topic, but if there are any Mac users among you (as am I), or you know others who are, I recommend checking out this time-limited bundle deal (of non-free software) at http://www.macupdate.com/ 

[19:09] <lambdabot> Title: MacUpdate: Macintosh Software & Games

[19:13] *** penk joined
[19:13] *** chris2 left
[19:19] *** bonesss joined
[19:19] *** jisom left
[19:31] *** joao left
[19:33] <wolverian> ?eval map { "$a -- $b" }, "a".."c", "d".."f"

[19:33] <evalbot_r17041> (" -- ", " -- ", " -- ", " -- ", " -- ", " -- ")

[19:33] <wolverian> erm.

[19:33] <wolverian> ?eval map { "$a -- $b" }, "a".."c" Z "d".."f"

[19:33] <evalbot_r17041> ((" -- ", "d"), (" -- ", "e"), (" -- ", "f"))

[19:33] <wolverian> ?eval map -> $a, $b { "$a -- $b" }, "a".."c" Z "d".."f"

[19:33] <evalbot_r17041> (("a -- b", "d"), ("c -- ", "e"), (undef, "f"))

[19:33] <wolverian> right. I don't get what's doing on here.

[19:33] <wolverian> s/doing/going/

[19:34] *** Blwood joined
[19:38] *** rho left
[19:39] <Tene> wolverian: you want $^a and $^b

[19:39] <Tene> Or perhaps that's not the part you were confused about.

[19:40] <Tene> ?eval 'a'..'c' Z 'd'..'f'

[19:40] <evalbot_r17041> (("a", "d"), ("b", "e"), ("c", "f"))

[19:41] <wolverian> shouldn't map -> $a, $b { ... } work equally well?

[19:42] <wolverian> (I tried the ^ variables in pugs shell, which failed to parse them altogether, so I didn't try them here.)

[19:42] <Tene> Yes, it should.  I suspect a grouping issue.

[19:42] <Tene> ?eval map -> $a, $b { "$a -- $b" }, ("a".."c" Z "d".."f")

[19:42] <evalbot_r17041> ("a d -- b e", "c f -- ")

[19:43] <wolverian> heh, it's not doing structural expansion into the tuples

[19:43] <wolverian> I suppose we want map -> [$a, $b]?

[19:43] <wolverian> (or ()?)

[19:43] <Tene> ?eval map -> [$a, $b] { "$a -- $b" }, ("a".."c" Z "d".."f")

[19:43] <evalbot_r17041> Error: ␤Unexpected "[$"␤expecting subroutine parameters, trait or block

[19:43] <Tene> ?eval map -> ($a, $b) { "$a -- $b" }, ("a".."c" Z "d".."f")

[19:43] <evalbot_r17041> ("a d -- b e", "c f -- ")

[19:43] <wolverian> maybe that's the ticket, pugs just doesn't parse it yet.

[19:49] <thoughtpolice> it seems as though what's happening is map doesn't seem to taking a tuple such as ('a','d') and being able to feed it appropriately into the given sub

[19:53] *** dduncan left
[19:54] *** Aankhen`` joined
[20:07] *** dduncan joined
[20:15] <diakopter> ?eval map -> ([$a, $b]) { "$a -- $b" }, ("a".."c" Z "d".."f")

[20:15] <evalbot_r17041> Error: ␤Unexpected "[$"␤expecting formal parameter or ")"

[20:16] <wolverian> good try :)

[20:16] <diakopter> ?eval map -> ($a => $b) { "$a -- $b" }, ("a".."c" Z "d".."f")

[20:16] <evalbot_r17041> Error: ␤Unexpected "$a"␤expecting ")"

[20:17] *** devogon left
[20:18] *** franck___ left
[20:19] *** mr_ank left
[20:19] *** devogon joined
[20:35] <rhr> ?eval map -> $a { "$a[0] -- $a[1]" }, ("a".."c" Z "d".."f")

[20:35] <evalbot_r17041> ("a -- d", "b -- e", "c -- f")

[20:36] <rhr> I think -> [$a, $b] should work

[20:36] <wolverian> right.

[20:36] <TimToady> Z is not supposed to add [...] by default

[20:37] *** jedai joined
[20:37] <wolverian> I misread S29 then, I think

[20:37] <TimToady> S29 might be wrong

[20:37] <wolverian> would it be map ..., $ .. Z ... then?

[20:38] <wolverian> (that is, if I really wanted the tuples)

[20:38] <wolverian> (for some unspecified reason)

[20:38] <TimToady> I think you want @@ or slice

[20:38] <TimToady> or just take them two at a time from the flat list

[20:39] <wolverian> ah, right.

[20:39] <wolverian> hm. from S03: $ map { $_, $_*2 }, ^4   # [\(0,0),\(1,2),\(2,4),\(3,6)]

[20:39] <wolverian> that confused me. :)

[20:40] <TimToady> only one arg there, but spits out captures

[20:40] <wolverian> right.

[20:40] <wolverian> what's the name of the [] there? capture? reference?

[20:41] <TimToady> it's an array

[20:41] <wolverian> good.

[20:41] <TimToady> a list in scalar context makes one

[20:41] <TimToady> and inside of [] provides @ context, so flattens

[20:42] <wolverian> Z makes me want an operator version of map 

[20:42] <wolverian> a la mathematica 

[20:43] <TimToady> which side does the closure go on?

[20:43] <wolverian> mathematica's goes on the right side

[20:43] <wolverian> I was thinking the other way around, I think 

[20:43] <TimToady> @array.map: {...} works

[20:43] <lambdabot> Unknown command, try @list

[20:43] <wolverian> maybe have two of them ;)

[20:44] <wolverian> right. it was just for consistency in map ..., ... Z ..., which is not a very good motivation.

[20:44] <TimToady> hmm, yeah, Z eats lists on both sides

[20:46] <TimToady> well, {...} for ... Z ... is supposed to work the same eventually

[20:46] <TimToady> and ... Z ... ==> map {...}

[20:47] <wolverian> good point 

[20:48] <wolverian> multi zipwith (&f, *@ls) { { .reduce(&f) } for @@ zip @ls } # look right?

[20:50] *** thorat joined
[20:50] *** TJCRI left
[20:53] <TimToady> I think zip @ls is a noop

[20:54] <wolverian> hm

[20:54] <wolverian> makes sense

[20:54] <wolverian> zip @@ls? 

[20:54] * wolverian reads

[20:54] <TimToady> yes, if @ls is a list of something listy

[20:55] <wolverian> well, the *@ls was meant to imply that, though I realise I didn't specify it explicitly

[20:55] <wolverian> (...surely the type inferencer will do this for me! or so)

[20:55] <wolverian> been doing haskell.

[20:56] <TimToady> the trouble with a really smart compiler is that it can tend to require the programmer to be just as smart to outsmart it

[20:56] <wolverian> I don't need to outsmart haskell, I just need to understand what it's doing. which is not a trivial task, indeed.

[20:56] <TimToady> heh, I was just sitting next to Simon Peyton-Jones at dinner...

[20:57] <wolverian> and the space-time continuum didn't have an epileptic seizure? hm.

[20:57] <TimToady> nope.  though one of the other hardcore FP folks here told him earlier today that Haskell is the Perl of FP.  :)

[20:58] *** lisppaste3 left
[20:58] <TimToady> meaning somewhat accretive, I believe.

[20:58] <thorat> at least the way Oleg Kiselyov uses it :)\

[20:58] <wolverian> ghc is accretive, at least

[20:59] <wolverian> the haskell standard is pretty conservative (boring)

[20:59] <lumi> So ghc is the perl of FP?

[20:59] *** ashleyb joined
[20:59] <TimToady> maybe of fp

[21:00] <SamB> why is it the perl? because Baughn doesn't like the syntax?

[21:01] <wolverian> there isn't much syntax to speak of, though the lack itself can certainly be hateful

[21:01] <TimToady> I suspect it has more to do with trying to solve all the problems of the world.

[21:01] <wolverian> I particularly don't like how everything in haskell looks the same.

[21:01] <wolverian> perl does this much better.

[21:01] <TimToady> I think we're better at conserving identifiers too

[21:01] <thorat> (we're back to chipped fingernails in oatmeal metaphor)

[21:02] <TimToady> little of this for vs forM business

[21:02] <wolverian> except haskell doesn't have the fingernails... 

[21:02] <TimToady> they're invisible

[21:02] <thorat> right

[21:02] <wolverian> TimToady, right, though perl doesn't have that division, to be fair.

[21:02] <SamB> TimToady: wth is for?

[21:03] <TimToady> I meant map vs mapM

[21:03] <SamB> oh, that

[21:03] <TimToady> adding monads tends to increase the alphabet soup

[21:03] <thorat> (I guess I meant simile)

[21:03] <SamB> well, they have rather different types

[21:03] <wolverian> I thought ghc 6.6 added for/forM, but, yeah.

[21:04] <TimToady> admittedly, inheriting from different classes in OO tends to use up names too

[21:04] <wolverian> (being just flip . map)

[21:04] <SamB> I mean mapM f = sequence . map f, doesn't it?

[21:04] *** lisppaste3 joined
[21:04] <wolverian> SamB, that's the division... sequence being the monad 

[21:04] <TimToady> but the fact that most everything is definitional means you have to name a lot more definitions

[21:05] <wolverian> namespaces would work too

[21:06] <wolverian> M.map instead of mapM 

[21:06] <TimToady> but maybe I'm just going crosseyed at all the CamelCase

[21:06] <wolverian> (though M. is usually used for Data.Map, so...)

[21:07] <SamB> M is like a sigil at the wrong end of the variable ;-P

[21:07] <TimToady> so Haskell is really the BASIC of FP  :)

[21:07] <SamB> heh

[21:07] <wolverian> hm, how about enforcing a sigil for monads

[21:08] <SamB> I thought that was called Visual Basic

[21:08] <wolverian> $monadAction instead of monadAction

[21:08] <wolverian> I'm sure that'd fly... (except $ is taken)

[21:08] <SamB> $ is already taken

[21:08] <SamB> twice!

[21:08] <wolverian> no $$ :)

[21:09] <SamB> also, what are the typing rules for your proposal?

[21:09] <wolverian> I don't know if it has any that differ from the status quo, though I see how it would apply to uniqueness typing too

[21:10] <wolverian> visually anyway

[21:10] <meppl> good night

[21:10] <wolverian> please don't tell anyone I proposed sigils for haskell though, I'm sure they'd kill me.

[21:10] <SamB> I won't, because your proposal is incomplete ;-P

[21:10] <Tene> /join #haskell

[21:11] <wolverian> I'm there.

[21:12] <Tene> I was joking suggesting that I was going to /join #haskell and mention what you just jokingly asked not be mentioned.

[21:12] <wolverian> ah.

[21:12] <wolverian> TimToady, what'd be the right way to mark the zipwith as operating on a list of listy things?

[21:13] <wolverian> lazily, I suppose.. 

[21:14] <TimToady> @@ should do it

[21:15] <TimToady> or zip([;] @ls) in a pinch

[21:15] <TimToady> maybe even @ls.zip

[21:16] <wolverian> I meant exposing that to zipwith's users

[21:16] <wolverian> but that's a good one, hm.

[21:17] <TimToady> well, any zippy thing probably wants to have a slicey interface that separates lists with ;

[21:18] <wolverian> right

[21:18] <diakopter> "implicit things need explicit (possible) denotations"?

[21:19] <TimToady> it really depends on whether the typical use case is zip(1,2,3; "a","b","c") or zip [;] @foo

[21:20] <TimToady> generally it's probably zip somefunc()

[21:20] <wolverian> I think so

[21:21] <wolverian> I don't get what [;] @foo does

[21:21] <TimToady> which currently requires zip @@ somefunc(), which might get tiresome

[21:21] <TimToady> all reductions are defined syntactically

[21:21] <TimToady> so equiv to @foo[0] ; @foo[1] ; etc

[21:22] <wolverian> agh, sorry. I don't get what ; does. ;) I'll read.

[21:22] <TimToady> it separates lists, for bindings that care

[21:22] <wolverian> hrm

[21:23] <wolverian> that makes me think it turns 1..3 into ([1],[2],[3])

[21:25] <wolverian> now I found the section in S9

[21:26] <TimToady> it's mostly for multidimensional subscripts

[21:27] <wolverian> hm, it carries the context into the array 

[21:27] <wolverian> yeah, I can see me putting @@ everywhere, just to make sure..

[21:31] <wolverian> or just not using ; 

[21:32] *** Blwood left
[21:32] <TimToady> yes, there's always the [[],[],[]] approach, which many languages take

[21:32] <wolverian> or the ; approach, where ; is always chunks 

[21:33] *** ashleyb left
[21:33] <TimToady> we're just doing that lazily depending on context

[21:33] <TimToady> because p5 programmers will expect flat

[21:34] <TimToady> esp from things like map

[21:34] <TimToady> not to mention return

[21:34] <wolverian> could it be a pragma then?

[21:34] <TimToady> possibly

[21:35] *** ashleyb joined
[21:35] <TimToady> all functions that return 1,2,3 would end up returning [1,2,3]

[21:35] <TimToady> instead of a Capture

[21:35] <wolverian> hrm, no. that's ugly.

[21:36] <wolverian> ?eval my @foo = [1,2,3]

[21:36] <evalbot_r17041> [[1, 2, 3],]

[21:36] <wolverian> right.

[21:36] <TimToady> there's much to be said for lazy binding

[21:36] <wolverian> in principle I like it. in practice, I'm worried about the extra responsibility on the receiving end

[21:37] <TimToady> well, if we made it only a receiving end pragma

[21:37] <TimToady> then it would do @@ map for you

[21:37] <TimToady> (by default)

[21:37] <TimToady> and you'd have to @ it explicitly to get flat, I guess

[21:38] <TimToady> and return would still just return a capture

[21:38] <TimToady> that seems saner with foreign funcs

[21:38] <wolverian> yeah, that's my expectation of a sane language, I think.

[21:38] <wolverian> derived from haskell, I suppose, but it's pretty generic.

[21:39] <TimToady> alternate seems to be two versions of map, two versions of gather, etc.

[21:40] <TimToady> which drives it towards contextual in PerlThink

[21:40] <wolverian> so captures are perl6's monads

[21:41] <TimToady> hmm

[21:41] <TimToady> I'd think the monads are more like the binding contexts

[21:42] <TimToady> the captures are the enforcees, not the enforcers

[21:42] <wolverian> well, yes, if you think about it.. but I was making a point about the dualism.

[21:42] <wolverian> (thinking is hard)

[21:44] <wolverian> I suppose a true haskeller would be scared of runtime context operations

[21:44] <TimToady> likely

[21:44] <wolverian> it's a bit iffy to me, but then again, I can think of it as implicit typeclass operations 

[21:45] <TimToady> monads are mostly about escaping from pure value semantics, which essentially means how do you discipline something that is not a value, that is a container of values

[21:45] <wolverian> capture would be an instance of all that they can transform into.

[21:45] <wolverian> was that a question? :)

[21:48] *** pmurias left
[21:49] <TimToady> it's the binding that decides the eventual container

[21:49] <TimToady> I suppose print() is how you bind values to the IO monad.  :)

[21:50] <wolverian> well, right

[21:50] <wolverian> same thing in haskell, except the binding is decided at compile time

[21:50] <wolverian> and there can only be one :)

[21:51] <TimToady> well, a filehandle is just a lifted IO, maybe

[21:51] <TimToady> but yes about compile time

[21:52] <wolverian> sleep time 

[21:52] <wolverian> cheers 

[21:52] <wolverian> filehandles as monads is a weird thought

[21:52] <wolverian> the monad api is incredibly flexible

[21:52] <TimToady> likewise on sleep

[21:53] *** iblechbot left
[21:53] *** mj41 left
[21:54] *** demq joined
[22:00] *** aindilis left
[22:03] *** dmq left
[22:09] *** crem_ left
[22:09] *** crem_ joined
[22:14] *** aindilis joined
[22:17] *** BooK joined
[22:18] *** noobist joined
[22:18] <noobist> Hello.

[22:18] *** aindilis left
[22:18] <thorat> hi

[22:19] *** aindilis joined
[22:35] *** REPLeffect_ joined
[22:35] *** REPLeffect left
[22:39] *** BooK left
[22:41] *** theorbtwo left
[22:48] *** theorbtwo joined
[22:49] *** monomorph left
[22:49] *** weinig_ joined
[22:49] *** weinig_ left
[22:50] *** weinig_ joined
[23:02] *** noobist left
[23:03] *** rdice left
[23:04] *** weinig left
[23:06] *** REPLeffect_ left
[23:10] *** weinig_ left
[23:11] *** weinig_ joined
[23:13] *** rhandom left
[23:18] *** ashleyb left
[23:20] *** Limbic_Region joined
[23:26] *** felipe left
[23:37] *** weinig_ is now known as weinig

[23:38] *** elmex left
