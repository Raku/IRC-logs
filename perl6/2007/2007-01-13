[00:00] <luqui> (still talking, actually)

[00:00] <luqui> just a sec

[00:00] <pdcawley> patently not reading over your shoulder.

[00:00] <pdcawley> LUQUI'S ROOMMATE => STOP DISRACTING LUKE!

[00:00] <putter> TimToady: "they" plural, s/user/users scattered in space and time/

[00:01] <luqui> okay, I think one semicolon is useful

[00:01] <luqui> because there is definitely a place for options and parameters

[00:01] <putter> Limbic_Region: good point.  though a lot of it was off line.  searching for A B C and Int Num multiples might do it.

[00:01] <luqui> but I might take that back, actually

[00:02] <TimToady> semi is a method for yielding to another candidate you have more confidence in than yourself

[00:02] * pdcawley heads to bed. G'night all.

[00:02] * Limbic_Region wasn't volunteering

[00:02] <putter> good night pd

[00:02] <luqui> TimToady, how so?

[00:02] <TimToady> night

[00:03] * luqui 's brain isn't thinking very clearly

[00:03] <luqui> I am heavily multitasking, that could do it

[00:03] * TimToady 's brain never thinks very clearly

[00:03] <TimToady> drat, company meeting...will be distracted...

[00:04] <luqui> get to work!

[00:04] <luqui> :-

[00:04] <luqui> (I will leave the final character to semantic inference)

[00:04] <allbery_b> that, or you're speaking prolog at us

[00:05] <luqui> hell_freezes_over :- luqui_ever_speaks_prolog_again

[00:05] <luqui> oh no!

[00:05] <luqui> there it goes...

[00:09] <putter> re dependency management, here's a strawman proposal...

[00:09] <diotalevi> no.

[00:10] <diotalevi> % which is just the answer to the question should you ever ask it.

[00:10] <putter> ???

[00:11] <diotalevi> % this is just some prolog.

[00:11] <TimToady> everything that is make-like is bogus; everything that is non-make-like is also bogus.  :)

[00:11] <putter> ok.... continuing... ;)

[00:12] * diotalevi thinks an after work beer is non-make-like and isn't bogus.

[00:12] <TimToady> pay no attention to the peanut gallery behind the curtain

[00:12] * allbery_b seems to have touched off a stream of consciousness

[00:14] <putter> input is a "little" text file in cvs (using a ruby dsl I think).  tasks (perhaps hierarchical) with skills required, and dependence (single flavor) on other tasks.

[00:14] <putter> generate dot vis graph.

[00:15] <putter> random hacker can look at pretty graph, see what needs doing that they can handle, and its connection with the whole.

[00:15] *** lisppaste3 joined
[00:16] <putter> rev to permits adding "stuck" entries, task "foo" is stuck because task "bar" doesn't yet do "mumble".

[00:16] <putter> s/rev/rev2/

[00:16] <putter> err, s/rev to/rev two/

[00:17] <putter> so task "christmass" depends on tasks "test suite" and "working p6", and...

[00:17] <putter> and "working p6 passes test suite", and...

[00:18] <putter> thoughts?  questions?

[00:20] <putter> I basically want a way for anyone stopping by to see that one with p6 and minimal hs skill can be doing "move primitives from hs to p6", on which "p6 prelude" depends, on which "all implementations use a common p6 prelude" depends, etc.

[00:20] <TimToady> you should bounce this off of obra

[00:20] <putter> obra?

[00:20] <TimToady> Jesse Vincent

[00:21] <putter> it's an area of interest for him?  he has done something similar?

[00:21] <TimToady> Hiveminder

[00:21] <TimToady> maybe

[00:21] <putter> err, lack of simplicity.  I should have just asked.  "great.  why?"

[00:21] <putter> ahhh

[00:25] <putter> hmm..

[00:27] <putter> I'm thinking of the strawman as more like the existing TASKS (or some such) file, but with dependencies, so it can be show as a graph.  hmm, and that might be a better model than the dsl.

[00:30] *** luqui joined
[00:30] <putter> strawman proposal 2 - create a more regular version of TASKS, with shortnames/ids, and dependency info.  and trivial little tool to make graph from same.

[00:32] <putter> I'd like to easily see, for instance, what kp6 needs, and what it provides.  how it fits in to the whole project.

[00:32] <putter> thoughts?  (though I remember this is the wrong time of day for this...:/ )

[00:33] *** Psyche^ joined
[00:35] <putter> I wonder if it could be overlayed on pod format.  directory tasks/ of pods.  grep for TASK and DEPENDS.

[00:37] *** cls_bsd joined
[00:39] *** mako132_ joined
[00:50] *** Psyche^ is now known as Patterner

[01:05] *** jferrero joined
[01:07] *** spoops joined
[01:41] <putter> anyone still around who has been watching the project?

[01:44] *** Psyche^ joined
[01:45] * diotalevi thought prolog would be a nice way to write that thing. *shrug*

[01:46] <TimToady> how do you define "watching"?

[01:53] <luqui> diotalevi, good point

[01:58] *** Psyche^ is now known as Patterner

[02:02] *** SamB joined
[02:06] *** ashelyb_ joined
[02:16] *** I_want_job joined
[02:16] *** I_want_job left
[02:18] *** miyagawa joined
[02:19] *** araujo joined
[02:19] *** bonesss joined
[02:26] <putter> TimToady etal: I'd like an "expert" to interview.  "Is tomorrow Christmass?"  "How does today principly differ from Christmass?"  etc

[02:28] <putter> "Is self hosting required for Ch?"  "Could p6 on ghc suffice for Ch?" etc

[02:29] <putter> "What are the strongest areas of the test suite?" "What are the weakest?" "What is missing entirely?"

[02:29] <putter> "What are the strongest parts of the spec?"  "The weakest?"  "Missing entirely?"

[02:31] <putter> re prolog, I thought of that. but... it increasingly seems like nothing computation is really needed.  the pretty picture/whatever is primarily a driving factor for asking questions like above, secondarily a mechanism for documenting the result.

[02:34] <putter> It's project analysis/characterization which is missing/unwritten, rather than a tool to compute over it.

[02:35] * allbery_b meant the ":-" halfsmiley, not suggesting writing anything in prolog :)

[02:35] * allbery_b hasn't touched prolog in some 10 years, and is kinda fuzzy on it now.  and would like to stay that way :>

[02:35] <putter> ah...

[02:35] * diotalevi only said prolog because you can express trees nicely there.

[02:36] <allbery_b> bad enough they were tossing around haskell's map and foldr in prolog on #haskell the other day :)

[02:36] <putter> DOT is quite nice.  http://www.graphviz.org/Gallery.php

[02:36] <lambdabot> Title: Graphviz

[02:36] * diotalevi regularly tosses around p5 regexps in prolog on p5p. ;-)

[02:39] <obra> putter: start collating those tasks. no matter what format.

[02:41] <putter> indeed.

[02:41] *** diotalevi left
[02:42] *** dmq joined
[02:43] <obra> and god knows we don't have enough visibility into what needs doing in useful bite-sized chunks

[03:01] *** nekokak_ joined
[03:07] <audreyt> putter: I did actually give a well-received academic talk in ICFP's Dynamic Language Symposium, which is why I got invited to POPL :)

[03:09] <audreyt> putter: however, I was unable to attend POPL this year, as it turned out that I went back to Taipei from the airport, some 20 minutes before boarding the flight, for certain private reasons

[03:09] <audreyt> so I don't even have to write the talk now ;) 

[03:10] <audreyt> but now I need to proc certain nonfun matters instead of IRC'ing. bbiab

[03:10] <audreyt> &

[03:14] <putter> Oh my.  I'm so sorry.  Let us know if there is anything we can do to help.

[03:16] <audreyt> yes: do try to optimize for fun even under constrained resources :)

[03:16] <audreyt> Juerd: I've installed trac on feather a few days ago; you okay with me enabling it and link it with the svn now hosted on feather?

[03:17] <luqui> audreyt, trac is a spam magnet.  require an account to add bugs.

[03:17] <audreyt> require an account to do any write operation.

[03:17] <luqui> (probably already planned that)

[03:17] <audreyt> and commitbit manages those accounts

[03:17] <luqui> ohk

[03:17] <audreyt> (yes, and already set up for $job)

[03:18] <audreyt> commitbit++ # useful even for intranet projects

[03:19] <luqui> well, enjoy nonfun matters... :-/

[03:19] * audreyt goes back to the quest of contacting the travel agency for ticket refund, which is looking unlikely now at this Saturday noon

[03:19] <audreyt> yeah, I'll try :-/

[03:19] <audreyt> bbl

[03:23] *** ayrnieu joined
[03:24] <audreyt> (fwiw, it's all nonlethal and solvable, so don't worry too much, I'll eventually emerge :))

[03:25] <putter> ok.  thanks.

[03:31] *** szabgab joined
[03:34] <szabgab> I still cannot compile Pugs, installed v6 and its many prereqs from CPAN is that necessary or is that what is actually causing the problems now?

[03:36] *** [particle] joined
[03:36] <szabgab> certainly perl Makefile.PL of Pugs did not complain on any missing modules (actually if there are CPAN prereqs for building Pugs as listed in INSTALL, would it make sense to add them to Makefile.PL as well?

[03:38] <szabgab> I get "Unknown error" while trying to "make" pugs

[03:40] *** mdiep joined
[03:53] *** mdiep joined
[03:53] <luqui> szabgab, what version of ghc?

[03:53] <luqui> or, where in the build process did it die?

[03:54] <luqui> oh, well, I have to go.  I think pugs now requires ghc 6.6...

[03:57] *** brando joined
[04:02] *** brando joined
[04:02] <szabgab> I have compiled and installed ghc6.6 and pugs seems to use that ghc

[04:03] <audreyt> nopaste the build log?

[04:09] <szabgab> hi audreyt !

[04:09] *** justatheory joined
[04:10] <audreyt> szabgab: greetings

[04:10] <szabgab> I went back to a clean PERL5LIB, so I am not sure now, why does Pusg complain about missing v6.pm ?

[04:11] <szabgab> is that something that comes with Pugs or is that a prereq I should install from CPAN ?

[04:11] <audreyt> that is something that comes with Pugs

[04:11] <szabgab> so perl Makefile.PL did not seem to complain about missing it but then make stops lacking that module

[04:11] <audreyt> can you paste the build log (or just the error lines) in 

[04:11] <audreyt> http://sial.org/pbot/perl6

[04:11] <audreyt> ?

[04:11] <lambdabot> Title: sial.org Pastebot - pasteling

[04:12] <szabgab> do you mean what I get on the screen? or is there a log file ?

[04:13] <audreyt> what you get on the screen

[04:13] <audreyt> make > make.log

[04:13] <audreyt> or something like that

[04:14] <pasteling> "szabgab" at 192.117.110.30 pasted "error while compiling pugs on a clean (?) install" (12 lines, 945B) at http://sial.org/pbot/22341

[04:15] <audreyt> you have "lib" in your PERL5LIB somehow

[04:15] <audreyt> and it picked up the perl6 File::Find

[04:15] <szabgab> yes, is that causing problesm ?

[04:15] <szabgab> ah I see

[04:15] <audreyt> yes.

[04:15] <audreyt> let me think about how to fix that

[04:16] <audreyt> there does not seem to be a good general solution :/

[04:17] <audreyt> try taking out 'lib' from PERL5LIB and see if 'make' now passes?

[04:17] <szabgab> I removed lib for PERL5LIB for now and so far it seems to be compiling ok

[04:17] <audreyt> a general solution is to put our perl6 libs under lib6/

[04:18] <audreyt> but for now, a warning/error in the main Makefile.PL to check for blind "lib" in PERL5LIB will do

[04:19] <audreyt> can you add one to our main Makefile.PL? line 64ish should be a good place to put a "die" for it

[04:19] <audreyt> also check for PERLLIB.

[04:19] <szabgab> I'll try

[04:20] <audreyt> szabgab++ # thanks

[04:20] <szabgab> thank *you*

[04:25] *** SamB joined
[04:28] <svnbot6> r15063 | szabgab++ | Makefile.PL - check for naked 'lib' in PERL5LIB and PERLIB

[04:29] <szabgab> sg else: in INSTALL v6-alpha is mentioned. If I am not mistaken it is totally separate project and has nothing to do with Pugs, right ?

[04:30] <audreyt> it is a separate implementation

[04:30] <audreyt> part of it (the grammar engine) is used by ./pugs

[04:31] <audreyt> otherwise no, these two are independent, 'cept they are under the same repository

[04:31] <szabgab> so do I need to install that too ?

[04:31] <audreyt> no

[04:31] <audreyt> not at all :)

[04:31] <szabgab> OK, Ill try to make that clear in INSTALL

[04:31] <audreyt> if that's not clear enough... update INSTALL to say that

[04:31] <audreyt> heh, preempted

[04:31] <audreyt> szabgab++

[04:40] <svnbot6> r15064 | audreyt++ | * Makefile.PL - Fix szabgab++'s PERLLIB check - it was typo'ed as PERLIB

[04:40] <svnbot6> r15064 | audreyt++ |   and somewhat Unix-specific; changed to use $Config{path_sep} as separator

[04:40] <svnbot6> r15064 | audreyt++ |   and catch cases like ./lib ././lib .//lib etc.

[04:43] <svnbot6> r15065 | szabgab++ | INSTALL - put the v6-alpha installation notes in another file: INSTALL.v6-alpha

[04:46] *** luqui joined
[04:48] <putter> TimToady: ping?

[04:50] *** awwaiid joined
[04:52] *** spoops is now known as spoop

[05:08] <TimToady> putter: pong

[05:14] <putter> hmm, let's see.  is there an easy way to post a png image...

[05:19] <TimToady> poke it into a public_html somewhere?

[05:19] <putter> http://www.vendian.org/mncharity/TemporaryURL/deleteme.png

[05:21] <putter> which is sort of putters mind-map of p6.  I need more task fodder.  thoughts?

[05:26] <TimToady> would be nice if a unified AST was in there somewhere

[05:27] <putter> a unified ast gives you ast macros, and... what else?

[05:27] <TimToady> event model

[05:28] <TimToady> hopefully it gives you consistency across platforms at a lower level than syntax

[05:28] <TimToady> I/O model

[05:28] <TimToady> docs processing flow

[05:29] <putter> docs processing flow?

[05:30] <TimToady> there's a reason I'm not a project manager.  :)

[05:31] <putter> :)

[05:31] *** kanru joined
[05:31] <putter> what is a document processing flow?

[05:32] <putter> image updated

[05:32] <TimToady> how the documents get from where and how they're written to where and how they're read by the end user

[05:32] <putter> ah, ok

[05:34] <putter> image updated

[05:34] <putter> let's see...

[05:36] <putter> documentation big picture...  the spec gets written, you write a book, what else happens?   a reference manual?  quick reference.  tutorials.  what else?

[05:37] <putter> feel free to punt whenever.  getting towards 1am here.

[05:38] <TimToady> need to get up at 5:30 myself, sigh.

[05:38] <TimToady> but it's a good start

[05:39] <putter> ok.  I don't have working svn at the moment, so I'll clean up and paste the DOT file.

[05:40] <TimToady> maybe make writing the emitters to the platform a separate step...

[05:40] <TimToady> though probably done in parallel up to a point.

[05:40] <TimToady> Oh, the MOP!

[05:41] *** sunnavy joined
[05:42] <TimToady> and maybe a circularity saw if the prelude is circularly defined.

[05:45] <putter> hmm!...

[05:51] * putter doesn't recall what circularly defined means vis the prelude...?

[05:51] <putter> image update

[05:52] <szabgab> ?seen nothingmuch 

[05:52] <lambdabot> nothingmuch is in #perl6, #darcs and #haskell. I don't know when nothingmuch last spoke.

[05:53] <TimToady> things defined in terms of each other, on the assumption different platforms will nullify different parts to supply as primitives instead.

[05:53] <putter> ah, right.

[05:53] <szabgab> trying to run make smoke but I cannot install Test::TAP::Model from CPAN, any idea?

[05:54] <allbery_b> "cannot install"?

[05:54] <allbery_b> it's there

[05:55] <szabgab> I mean make test on that module fails

[05:55] *** ofer0 joined
[05:56] <TimToady> there is also still some work to at least move the todos to separate lines so different platforms can keep their status independently.

[05:58] <allbery_b> yeh, force the install.  there will be failures when you use it as well, but at least part of the result is valid

[05:58] <allbery_b> (but Test::TAP::Model only matters for "make smoke"; you can always fall back to "make test")

[05:58] * allbery_b has been getting those Test::TAP::Model errors from the start --- and his smoke test attempts alway show individual tests passing but the whole file failing

[05:59] <TimToady> I get errors but it seems to calculate file stats right.

[06:02] *** leed joined
[06:02] <putter> image updated :)

[06:03] <szabgab> ah and I was showing off with the nice HTML reports the other day but could not create them on a plain Perl 5 test suit

[06:03] <TimToady> kinda funny to have P6 on P6 out there without anyone depending on it.  :)

[06:05] <putter> yeah.  I suspect there is another path which is "some p6, not Christmas but enough to run a compiler written in p6, used to bootstrap p6 on p6 on mumble".

[06:05] <putter> for some backend mumble

[06:06] <TimToady> arguably, P6 on P6 is just part of the test suite.  :)

[06:06] <putter> :)

[06:07] *** nipra joined
[06:08] <putter> I guess its basically replacing a core written in mumble, with one in p6, and then bootstrapping with a mumble emitter also written in p6.

[06:10] <TimToady> depends on what you mean by "core"

[06:11] <TimToady> writing a VM in Perl 6 is specifically not on the agenda any time soon...

[06:11] <putter> :)

[06:11] <TimToady> though maybe an OS or two...

[06:12] <putter> core + emitter + prelude = p6

[06:12] <putter> "runtime" perhaps

[06:12] <putter> err, core + emitter + compiler + prelude = p6

[06:13] <TimToady> still think "core" is far too overloaded

[06:14] <putter> agreed

[06:14] <TimToady> it's a machine, which may or may not be virtual...

[06:14] <putter> does everything use a compiler written in p6?  even pugs?

[06:14] <TimToady> that's the plan

[06:14] <putter> ok

[06:15] *** BooK_ joined
[06:16] *** kanru joined
[06:20] <putter> "core" -> "machine".  image updated

[06:21] *** ditto joined
[06:24] <TimToady> I'm gonna shutup now so we can all sleep...

[06:24] <putter> :)

[06:25] <putter> DOT file up as http://www.vendian.org/mncharity/TemporaryURL/deleteme.dot

[06:29] *** ditto left
[06:31] <putter> image updated

[06:47] *** agentzh joined
[06:47] *** iblechbot joined
[06:49] *** nipra joined
[06:50] <putter> image updated

[06:55] <putter> Good night all.  I've no idea if/when I'll get back to the graph, so anyone/everyone should feel to take it over.

[06:55] <putter> Keep up the good work.  Perl 6 is *important*.

[06:55] <putter> &

[06:56] *** devogon joined
[07:11] <agentzh> putter: sure. perl 6 is important. :)

[07:15] <agentzh> fglock: PCR is still under development, right?

[07:16] <agentzh> i think PCR may be a good starting point for me since it has a lot of meaningful unit tests. :)

[07:18] <agentzh> fglock: i haven't figured out how to "run" mp6's test suite with mp6. it seems that t/*.t pick v6.pm instead.

[07:26] <agentzh> ?eval 'aa' ~~ /a**{2..2}/

[07:26] *** evalbot_r15026 is now known as evalbot_r15065

[07:26] <evalbot_r15065> *** Cannot parse regex: a**{2..2}␤*** Error: Error: quantifier not implemented: HASH(0x8fffbf0) at /home/audreyt/pugs/perl5/Pugs-Compiler-Rule/lib/Pugs/Emitter/Rule/Perl5.pm line 162.␤␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[07:27] <agentzh> ?eval 'aa' ~~ /a**{2..4}/

[07:27] <evalbot_r15065> *** Cannot parse regex: a**{2..4}␤*** Error: Error: quantifier not implemented: HASH(0x8fffbf0) at /home/audreyt/pugs/perl5/Pugs-Compiler-Rule/lib/Pugs/Emitter/Rule/Perl5.pm line 162.␤␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[07:29] <agentzh> weird. i see there is a qunatifier implementation in Pugs::Runtime::Regex. maybe the rule parser can't handle that right now?

[07:31] <agentzh> another question: is /a**{4}/ a valid perl 6 regex?

[07:33] * allbery_b suspects it should not be since ** is already a quantifier

[07:34] <agentzh> allbery_b: ** is a meta construct according to S05.

[07:35] <agentzh> perl 6 regex /\d ** {1..6}/ is equivalent to /\d{1,6}/ in perl 5, i think.

[07:35] * allbery_b had forgotten that change to regex syntax

[07:35] <agentzh> allbery_b: ;-)

[07:36] <agentzh> pe

[07:36] * allbery_b dislikes {} as a rule anyway, it's devilishly hard to handle sanely 

[07:37] <agentzh> why?

[07:39] <allbery_b> the runtime behavior tends to be atrocious.  perl and pcre note it as a pathological case; openbsd's standard regexp implementation can be easily made to take infinite time to match, and glibc's to take infinite space

[07:40] *** mdiep joined
[07:41] <agentzh> *nod* a lot of backtracking is involved here.

[07:42] <allbery_b> (6-deep nested {1,6} expressions triggered the obsd and linux/glibc behavior)

[07:44] <agentzh> ah

[07:47] <svnbot6> r15066 | agentz++ | PCR - added some more tests to t/01-iterator_engine.t.

[07:47] <svnbot6> r15066 | agentz++ | it's not meant to be complete; i'm just playing around

[07:47] <svnbot6> r15066 | agentz++ | PCR's internals. :)

[07:55] *** mdiep joined
[07:56] *** jamessan joined
[07:56] *** devogon joined
[07:56] *** kanru joined
[07:56] *** BooK_ joined
[07:56] *** SamB joined
[07:56] *** smash_ joined
[07:56] *** wilx joined
[07:56] *** hcchien joined
[07:56] *** silug joined
[07:56] *** baest joined
[07:56] *** sri_ joined
[07:56] *** mugwump joined
[07:56] *** cookys joined
[07:56] *** audreyt joined
[07:56] *** Gothmog_ joined
[07:56] *** LCamel_ joined
[07:56] *** broquaint joined
[07:56] *** nnunley joined
[07:56] *** takesako__ joined
[07:56] *** pasteling joined
[08:01] *** bernhard joined
[08:14] <svnbot6> r15067 | agentz++ | PCR - added 4 more tests to t/03-match.t.

[08:17] *** Aankh|Clone joined
[08:22] *** DHGE joined
[08:40] <agentzh> ?eval "ab" ~~ /a?b/

[08:40] *** evalbot_r15065 is now known as evalbot_r15067

[08:40] <evalbot_r15067> Match.new(␤  ok => Bool::True, ␤  from => 0, ␤  to => 2, ␤  str => "ab", ␤  sub_pos => (), ␤  sub_named => {}␤)

[08:40] <agentzh> ?eval "ab" ~~ /a?bg?/

[08:40] <evalbot_r15067> Match.new(␤  ok => Bool::True, ␤  from => 0, ␤  to => 2, ␤  str => "ab", ␤  sub_pos => (), ␤  sub_named => {}␤)

[08:52] *** larsen_ joined
[09:02] *** ayrnieu joined
[09:08] <svnbot6> r15068 | agentz++ | PCR - added some more tests to t/04-rule.t

[09:17] <svnbot6> r15069 | agentz++ | PCR - some more tests to t/05-var.t

[09:18] * agentzh is learning p6 regex by tests.

[09:23] *** bernhard joined
[09:23] *** Aankh|Clone is now known as Aankhen``

[09:25] *** iblechbot joined
[09:54] *** elmex joined
[10:47] *** Salzh joined
[10:50] <nothingmuch> szabgab: pong

[10:59] *** kisu joined
[11:06] *** marmic joined
[11:42] *** BooK joined
[11:45] <Juerd> audreyt: Please go ahead :)

[11:52] *** jferrero joined
[11:55] *** bwk joined
[12:07] *** GabrielVieira2 joined
[12:14] *** dduncan left
[12:20] *** larsen_ joined
[12:27] *** elmex joined
[12:28] *** buetow joined
[13:00] *** ludan joined
[13:08] *** nipra joined
[13:17] *** chris2 joined
[13:26] *** GabrielVieira joined
[13:31] *** weinig joined
[13:42] *** Limbic_Region joined
[13:46] *** weinig is now known as weinig|bbl

[14:03] *** nivrrex joined
[14:18] *** Yappo_ joined
[14:19] *** cookys joined
[14:20] *** Yappo joined
[14:32] *** idiotmax joined
[14:46] *** idiotmax joined
[14:46] *** GabrielVieira2 joined
[14:46] *** weinig|bbl is now known as weinig

[14:49] *** spx2 joined
[14:54] *** weinig is now known as weinig|food

[15:10] *** weinig|food is now known as weinig

[15:37] *** weinig is now known as autogeneration

[15:38] *** autogeneration is now known as weinig

[15:44] *** polettix joined
[15:57] *** idiotmax joined
[15:58] *** xinming joined
[16:46] *** sonorous joined
[16:55] *** nwc10 joined
[16:56] *** _bernhard joined
[16:56] <nwc10> Offhand does anyone know which synopsis ... ??? and !!! are in?

[16:57] <allbery_b> S03/New operatos, at minimum

[16:58] <allbery_b> ...preend I cn type

[17:02] *** brent[] joined
[17:05] <nwc10> ah yes. Thanks. http://dev.perl.org/perl6/doc/design/syn/S03.html

[17:14] *** nwc10 left
[17:55] *** Limbic_Region joined
[18:05] *** neonse joined
[18:12] *** takanori joined
[18:23] *** Limbic_Region joined
[18:27] <xinming> 3

[18:28] *** mako132_ joined
[18:30] <Limbic_Region> hrm

[18:46] *** sonorous joined
[18:54] *** elmex joined
[18:56] *** justatheory joined
[18:56] *** bcorn joined
[19:05] *** sonorous joined
[19:23] <Khisanth> ?eval 1 ?? 2 !! 3

[19:24] *** evalbot_r15067 is now known as evalbot_r15069

[19:24] <evalbot_r15069> 2

[19:24] <Khisanth> ?eval 0 ?? 2 !! 3

[19:24] <evalbot_r15069> 3

[19:30] *** foo\ joined
[19:33] <Khisanth> ?eval 0..10:by(2)

[19:33] <evalbot_r15069> Error: ␤Unexpected ":by"␤expecting "_", fraction, exponent, term postfix or operator

[19:44] *** diakopter left
[20:14] *** rhizo joined
[20:24] *** ill joined
[20:28] *** ill is now known as idoublel

[20:29] *** kanru_ joined
[20:36] *** mako132_ joined
[20:49] *** andara joined
[21:05] *** beppu joined
[21:11] *** penk joined
[21:17] *** idoublel left
[21:34] *** Aankhen`` joined
[21:41] *** mako132_ joined
[22:07] *** weinig is now known as weinig|bbl

[22:11] *** dduncan joined
[22:20] *** prism joined
[22:21] *** Alchemy joined
[22:21] *** prism joined
[22:26] *** lambdabot joined
[22:27] *** prism joined
[22:51] *** mako132_ joined
[23:37] *** justatheory joined
[23:46] *** Vex joined
[23:58] *** SamB joined
