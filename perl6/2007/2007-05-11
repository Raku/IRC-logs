[00:22] *** nekokak joined
[00:48] *** Teratogen joined
[00:48] <Teratogen> so is Perl 6 out yet?

[00:53] <diakopter> Teratogen: yes, I think it *just now* escaped.  I'll go hunt around for it... it's gotta be around here somewhere.

[00:54] <dduncan> maybe you'll catch it by Christmas

[00:58] *** nipotaway is now known as nipotan

[01:16] *** stef__ joined
[01:16] *** ben_ joined
[01:17] *** ben_ joined
[01:18] *** ben_ joined
[01:19] *** ben_ is now known as bennett

[01:21] *** cognominal joined
[01:29] *** justatheory joined
[01:31] *** justatheory joined
[01:39] *** agentzh joined
[01:40] <agentzh> @tell fglock it'd be cool if you have a look at my questions here: http://moritz.faui2k3.org/irclog/out.pl?channel=perl6;date=2007-05-10#id_l23 thanks! :)

[01:40] <lambdabot> Consider it noted.

[01:42] <agentzh> moritz: the irclog has some oddity while processing long messages like the above:

[01:42] <agentzh> http://moritz.faui2k3.org/irclog/out.pl?channel=perl6;date=2007-05-11#id_l17

[01:42] <lambdabot> agentzh: You have 2 new messages. '/msg lambdabot @messages' to read them.

[01:42] <lambdabot> Title: IRC log for #perl6, http://tinyurl.com/yt8xrr

[01:43] <agentzh> @messages

[01:43] <lambdabot> moritz said 10h 49m 21s ago: you could prefix each paragraph of the synopsys on percabal.org/syn/ with an anchor and a link to that anchor, just like the irclogs

[01:43] <lambdabot> moritz said 10h 47m 20s ago: if you then provide a mapping from line numbers to paragraph numbers, the irclog could automagically turn things like S02:2775 into a link

[01:44] <agentzh> moritz: i think it's a bit tricky. maybe i should prepend to each paragraph an anchor for every line composing it.

[01:45] <agentzh> line-to-paragraph mapping on your side is difficult.

[01:46] *** [particle] left
[01:46] *** [particle] joined
[01:48] <agentzh> Hmm, regarding the implementation of smartlinks.pl, it's sufficient to add placeholders containing lineno info to the POD AST and replace them with proper <a name="..."> afterwards.

[01:50] <agentzh> lacking time lately, will try it out weeks later :)

[01:50] <agentzh> &

[01:50] *** agentzh left
[01:50] *** cognominal joined
[01:52] <Teratogen> I want to propose a new Perl 6 operator

[01:52] <Teratogen> <<==*==>>

[02:04] <Aankhen``> I wonder how come there's no Perl6::Perldoc::To::Html.

[02:08] *** stef__ joined
[02:11] <Tene> Teratogen: you're just... proposing a sequence of characters?

[02:11] <Tene> Aankhen``: nobody has written one yet.

[02:16] <Aankhen``> Tene: Yes, I know, but strangely enough there's an Xhtml.

[02:17] <Aankhen``> I'm trying to summon enough courage to write a ::To::Html.  It's just a little intimidating when I look at the code for ::To::Xhtml.

[02:18] <Aankhen``> Oh, wait, first I was just going to fiddle with smartlinks.pl

[02:23] <Aankhen``> Hmm.  Gonna follow this up myself, but in case anyone already knows the answer: can LGPL code be incorporated into the Pugs source tree?

[02:23] *** weinig_ joined
[02:24] <Aankhen``> Well, LGPL-2.1 appears to be included under LICENSE, so I'm going to guess it can be.

[02:41] *** mako132_ joined
[02:45] *** REPLeffect joined
[02:46] <REPLeffect> Is something wrong with planetsix.perl.org?

[02:46] <REPLeffect> I try to load it and it connects, but never fully loads.

[02:47] <REPLeffect> (that sounded stupid)

[02:47] <REPLeffect> I go to the page, and get a connection, but the page load never completes.

[02:53] <Aankhen``> REPLeffect: Seems to be working alright here.

[02:53] <Aankhen``> REPLeffect: Can you ping it without a problem?

[02:53] <REPLeffect> Yeah.  Must be a Firefox problem

[02:53] <REPLeffect> exacerbated by dialup, probably :-)

[02:54] <Aankhen``> Awww.

[02:54] <REPLeffect> Loads fine in Konqueror (albeit slowly)

[03:00] *** offby1` joined
[03:08] *** SubStack joined
[03:22] *** mako132_ joined
[03:43] *** ggoebel joined
[03:58] *** japhb joined
[04:04] *** dduncan joined
[04:10] *** ggoebel joined
[04:12] *** ggoebel joined
[04:23] <clkao> summon ingy

[04:29] *** offby1` is now known as offby1

[04:33] *** REPLeffect joined
[05:06] *** BooK joined
[05:08] *** buetow joined
[05:10] *** REPLeffect joined
[05:40] *** REPLeffect left
[05:43] *** awwaiid joined
[05:46] *** kunwon1 joined
[05:51] *** dj joined
[05:52] *** dj joined
[05:54] *** dj joined
[05:57] *** REPLeffect joined
[05:58] *** TimToady joined
[06:05] *** buetow joined
[06:08] *** REPLeffect joined
[06:08] *** REPLeffect left
[06:09] *** japhb joined
[06:12] *** REPLeffect joined
[06:16] <Aankhen``> Er, what do I use to upload something to ~agentzh/public_html on feather?

[06:23] *** REPLeffect joined
[06:25] *** SubStack joined
[06:29] *** lisppaste3 joined
[06:30] *** IllvilJa joined
[06:31] *** REPLeffect joined
[06:40] *** REPLeffect joined
[06:40] *** marmic joined
[06:48] *** iblechbot joined
[06:50] *** riffraff joined
[06:50] <riffraff> hi

[06:51] <spinclad> hi ho

[06:51] <Tene> hi ho hi

[06:52] <spinclad> Tene: you need a longer nick, so those will line up

[07:05] *** REPLeffect joined
[07:12] *** franck__ joined
[07:22] *** mjk joined
[07:23] <Tene> yeah...

[07:23] <moritz> Aankhen``: there ist perldoc2xhml in Perl6::Perldoc (or some such) that parses pod6

[07:25] <Aankhen``> moritz: Yes, I know, and I've used it. :-) I was wondering how come there's no HTML equivalent.

[07:25] <Aankhen``> And, like I said, trying to work up the courage to write one myself.

[07:25] <moritz> you mean html4?

[07:26] <moritz> you can still pipe it through `tidy' and tell tidy to produce any html format you want ;)

[07:32] <moritz> Aankhen``: re LGPL: of course you can import it into the pugs tree, afaict lgpl is a "non-poisoing" license...

[07:33] <moritz> and even it was poisoning, it would just affect the file it is linked to, not the whole repository

[07:35] <Aankhen``> Ah, I see.

[07:35] <Aankhen``> I wasn't sure, so I wanted to check.

[07:36] <Aankhen``> Then I saw it under LICENSE/ so I figured it should be okay.

[07:36] <Aankhen``> And yes, I do mean HTML 4.

[07:37] *** shady joined
[07:37] <moritz> what do you need that for?

[07:38] <moritz> the HTML 4 I mean

[07:41] <dduncan> LICENSE/ is just a convenient place for all licences used by parts of the distro can go, so that each component in the distro doesn't need its own copy

[07:41] *** sapir joined
[07:42] *** jisom joined
[07:45] <Aankhen``> moritz: Same reason why you'd need any POD convertor.

[07:45] <Aankhen``> moritz: HTML makes a lot more sense than XHTML.

[07:45] <Aankhen``> dduncan: Ahh.

[07:46] <Aankhen``> dduncan: Welp, anyway, I figured if it's under LICENSE, it must be sanctioned, at any rate. ^_^

[07:46] <dduncan> LICENSE/ doesn't indicate sanctioned

[07:46] <dduncan> it just says what people are using

[07:47] <dduncan> if you want another licence for your part, add the copy of that licence to LICENSES and use it

[07:47] <Aankhen``> Ergh.

[07:47] <Aankhen``> Nah, it wasn't for my part, it was someone else's code that I needed.

[07:48] <dduncan> on a tangent, I will mention that I'm using straight GPL for my most important components ... QDRDBMS

[07:50] <dduncan> I may possibly even be the only person whose ext/ is plain GPL

[08:08] <sapir> I just checked out r16241... "perl Makefile.PL" dies with something about load_all_extensions but "./Makefile.PL" works... any idea why?

[08:09] <sapir> (I had to change the first line of Makefile.PL to /usr/bin/perl , so it's definitely the same perl executable)

[08:10] <moritz> "perl Makefile.PL" works for me

[08:10] <dduncan> for some reason, the Makefile says: #!/usr/local/bin/perl

[08:11] <dduncan> do you have a perl there too?

[08:11] <sapir> no, I had to change it

[08:11] <Tene> sapir: run 'which perl'

[08:12] <sapir> /usr/bin/perl

[08:12] <dduncan> I don't have a perl under local

[08:12] <sapir> the error it gives me is: Can't call method "load_all_extensions" on an undefined value at inc/Module/Install.pm line 128.

[08:12] <dduncan> the makefile has long worked, though I didn't try it in the last few days

[08:12] <Tene> sapir: do you have a /usr/local/bin/perl ?

[08:12] <sapir> Tene: no

[08:13] <dduncan> actually, I remember now that I always invoke my pugs makefile using /path/to/my/perl Makefile.PL

[08:13] <dduncan> and the latter has extra modules installed

[08:13] <dduncan> it is also a perl 5.8.8, while my system perl would have been 5.8.6

[08:15] <dduncan> I am now re-running /Volumes/Programming160/perl58 Makefile.PL ...

[08:15] <dduncan> it completed without errors

[08:16] <dduncan> sapir, did you get the error while running the makefile, or after using make or something on the result?

[08:16] <sapir> from Makefile.PL

[08:17] <sapir> running "./Makefile.PL" works and I can then make etc.

[08:17] <sapir> which is working so far

[08:17] <dduncan> well, no problems here

[08:17] <sapir> so I'm ok... but I don't get why it should make a difference how I run it

[08:18] <dduncan> fyi, one reason I run my own perl with extra modules is because make smoke et al has more dependencies

[08:18] <dduncan> but I would expect plain Pugs to work with a pristine perl

[08:18] <dduncan> it bundles its own special build system for one thing

[08:19] <dduncan> including the part giving you the error

[08:22] <sapir> I seem to still have Perl modules lying around from older Perl versions... I'm trying to update them now

[08:40] *** JanK_ joined
[08:41] <JanK_> could someone help me with a small regexp problem?

[08:41] <JanK_> i want to match every space in a string, but those between two ". for example the regex should not match the space between moo and cow but all other spaces 'foo bar asdf="moo cow" chicken'

[08:42] *** BooK joined
[08:42] <moritz> JanK_: the easiest is a two-pass solution: first remove all "..."

[08:43] <moritz> JanK_: the problem is that with multiple "..." pairs a regex has a hard time to decide if it's outside a quoted string or not

[08:43] <JanK_> moritz: i need this to split the string on the matched spaces.

[08:44] <JanK_> an other soloution would be to temporary replace the spaces in quotes, but i dont knwo how to do this either

[08:44] <moritz> JanK_: what about splitting on all spaces, and rejoin those inside a quoted string?

[08:44] <JanK_> moritz: yeah, thank you that could be a solution

[08:45] <JanK_> i'll try this

[08:45] <moritz> or you write a simple tokenizer

[09:19] *** chris2 joined
[09:29] *** elmex joined
[10:15] *** avar joined
[10:31] *** ofer joined
[10:35] *** gugod joined
[10:41] *** dduncan left
[10:42] *** cognominal joined
[11:03] *** nferraz joined
[11:09] *** cognominal joined
[11:10] *** iblechbot joined
[11:17] *** IllvilJa joined
[11:18] *** fglock joined
[11:24] *** nipotan is now known as nipotaway

[11:59] *** xinming joined
[12:33] *** myavuzselim_ joined
[12:55] *** justatheory joined
[12:59] *** rlb3_work joined
[13:02] *** nferraz_ joined
[13:53] *** marmic joined
[14:11] *** ruoso joined
[14:17] *** JanK_ left
[14:19] *** rindolf joined
[14:32] *** avico joined
[14:34] *** avico joined
[14:50] *** cj joined
[14:50] <cj> whee.

[14:50] <cj> morning folks

[14:51] <gnuvince> Good morning

[14:54] <moritz> heja

[14:55] *** veritos joined
[14:55] *** amnesiac joined
[15:13] *** f0rth joined
[15:15] *** rodi joined
[15:39] *** TimToady joined
[15:41] *** lichtkind joined
[15:48] <rindolf> Hi all!

[15:48] <rindolf> Is this a bug:

[15:48] <rindolf> perl -le 'my $r = qr/^\-{79}$/m; print +(("Hello\n" . ("-" x 79) . "\nYourkok\n") =~ /$r/)?"Yes":"No"'

[15:51] <[particle]> yes, in your code

[15:51] <avar> You're matching a string that ends in kok\n to a regex that is exactly 79 -

[15:51] <[particle]> print returns 1

[15:52] <avar> [particle]: note the +

[15:52] <[particle]> oh, i missed the + sign....

[15:52] <avar> :)

[15:52] <rindolf> avar: yes, but it's multi-line.

[15:53] <rindolf> avar: notice the /m

[15:53] <[particle]> i'm not sure / modifiers work with qr

[15:53] <avar> they do

[15:53] <[particle]> how about qr/(?m).../

[15:53] <[particle]> oh

[15:55] <avar> urgh

[15:56] <rindolf> Oh! I need a \n?

[15:56] <rindolf> Or something

[16:03] <avar> avar@Arsia:~$ perl -le 'my $r = qr/^\-{79}$/m; print +(("Hello\n" . ("-" x 79) . "\nYourkok\n") =~ /$r/)?"Yes":"No"'

[16:03] <avar> No

[16:03] <avar> avar@Arsia:~$ perl5.9.5 -le 'my $r = qr/^\-{79}$/m; print +(("Hello\n" . ("-" x 79) . "\nYourkok\n") =~ /$r/)?"Yes":"No"'

[16:03] <avar> Yes

[16:03] <avar> a

[16:04] *** mncharity joined
[16:08] *** bernhard joined
[16:10] <jrockway> ?eval undef eq undef

[16:10] <evalbot_r16241> Bool::True

[16:11] * jrockway wishes for a modifier on eq to make that false

[16:11] *** nferraz_ joined
[16:11] <PerlJam> jrockway: why?

[16:12] <[particle]> like NaN?

[16:12] <avar> undef has never behaved like NULL

[16:13] <avar> it's explicitly set to an undef value, at least in p5..

[16:13] <mncharity> undef but unique ?  :)

[16:13] <jrockway> well, it should be undefined, not false :)

[16:14] <jrockway> admittedly, the current behavior is good for actual use (well, with no warnings 'uninitialized'...)

[16:14] <jrockway> but it feels wrong to me :)

[16:14] <obra> seen Juerd 

[16:14] <avar> when would undef eq undef => Bool::False be useful?

[16:14] <obra> @seen juerd

[16:14] <lambdabot> juerd is in #perl6. I last heard juerd speak 1d 4h 51m 46s ago.

[16:14] <obra> @seen audreyt

[16:15] <lambdabot> audreyt is in #haskell and #perl6. I don't know when audreyt last spoke.

[16:15] <avar> during theoretical circlejerks where the topic is definedness?:)

[16:16] <Juerd> obra: pong

[16:17] <obra> Juerd: hi. I got poked bout trying to help debug the commitbit perf issues on feather

[16:17] <obra> But I...don't even have a feather account.

[16:17] <obra> What's the right thing for me to be doing?

[16:17] <Juerd> Heh, let's get you one then :)

[16:17] <obra> What would you like from me?

[16:17] <Juerd> First you send me an email in which you pretend you're genuine and stuff :)

[16:17] <obra> [email@hidden.address]  Including my ssh pubkey?

[16:18] <Juerd> You make up a full name, and state it, together with the required username

[16:18] <Juerd> That mailaddress is fine

[16:18] <Juerd> You can mail your pubkey, but I'll set your password to "changeme" anyway.

[16:18] <Juerd> Feather is low security.

[16:18] <Juerd> Can't combine security with giving anyone access :)

[16:19] <obra> ::)

[16:19] <obra> sent

[16:19] <Juerd> Feather has 90 users, of which I think I met only 15 or so :)

[16:19] <obra> :)

[16:20] * kolibrie almost feels like he's met Juerd, but really he hasn't

[16:20] <Juerd> obra: You're set

[16:20] <Juerd> kolibrie: Care to elaborate? :)

[16:21] *** veritos joined
[16:21] <kolibrie> Juerd: just been in the chatroom for so long I feel like I know you as well as some people I've met, but thinking back, we've never met in real life

[16:22] <Juerd> Heh, interesting.

[16:22] <veritos> heya

[16:22] <obra> Juerd: thanks. I'll try to poke around. Something will likely need to be done as root. should I irc or mail or what when I know?

[16:22] <Juerd> obra: Sure

[16:22] <obra> ok

[16:23] <Juerd> Do my /msg's ever arrive?

[16:23] <Juerd> Ah, they do ):

[16:23] <Juerd> eh

[16:23] <Juerd> :)

[17:19] *** GabrielVieira joined
[17:19] *** polettix joined
[17:20] *** fglock joined
[17:33] <mncharity> Can adverbs be meaningfully repeated?  eg, foo :v:v; being distinct from  foo :v:v:v; ?  There is the implication not (ie, use of bar(*%adverbs), but I don't immediately see an explicit statement.

[17:34] <mncharity> ?eval sub f(*%a){say %a} f :v:v;

[17:34] <evalbot_r16241> OUTPUT[v	1␤] Bool::True

[17:35] <mncharity> ?eval sub f(*%a){say %a} f :v(2):v(3)

[17:35] <evalbot_r16241> OUTPUT[v	3␤] Bool::True

[17:36] *** SubStack joined
[17:38] <TimToady> mncharity: if the parameter they are binding to is @v, then it gets all the :v values.

[17:39] <TimToady> we probably need some tests for that

[17:39] <TimToady> would you like to write some?

[17:41] <TimToady> but it's also quite likely that it is not specced good

[17:42] <TimToady> actually, it's at S06:463

[17:44] <TimToady> the specs don't show any smartlinks to that section, so there probably are missing tests

[17:44] <TimToady> especially since it was a fairly recent decision

[17:44] <mncharity> :)

[17:44] <TimToady> (where recent means "last year or so")

[17:44] <rindolf> Hi TimToady 

[17:45] <TimToady> hi rindolf 

[17:45] <rindolf> TimToady: what's up?

[17:45] <TimToady> there are missing tests, shock!

[17:45] <TimToady> "There it was, gone completely!"

[17:46] <TimToady> or at least, missing smartlinks

[17:48] <TimToady> it's just an oddity of English that something missing can be said to exist...

[17:48] *** jisom joined
[17:50] *** buetow joined
[17:52] *** ruz joined
[17:52] *** Psyche^ joined
[17:58] <polettix> TimToady: in Italian we say pretty much the same

[17:59] <TimToady> probably and Indo-European thing...

[17:59] <TimToady> *an

[17:59] *** oceanlab joined
[18:09] *** Psyche^ is now known as Patterner

[18:10] *** veritos joined
[18:22] *** Belaf joined
[18:33] *** REPLeffect joined
[18:42] <obra> Juerd: ping

[18:43] <obra> TimToady: The commitbit issues on feather are, unfortunately, fascinating.

[18:44] <Juerd> pongish

[18:44] * Juerd loves Friday evenings at work :(

[18:45] <obra> Juerd: I'm seeing slightly weird things out of the apache logs on Feather. I'd like to 1) get the apache2 instance actually logging requests and 2) add time-taken to the access log for apache1. Is that ok?

[18:46] <Juerd> obra: 1) Sure, 2) Add that to new log files, please, because it'd make the existing logs incompatible with the standard

[18:46] <obra> (basically, I'm seeing requests that take 2 minutes of clock time not show up in the apache log until 2 minutes in...and see firebug reporting 1.67s" for the request.

[18:47] <Juerd> obra: Note, when debugging, that access logs only include *completed* requests and are sometimes useless for segfaults and such.

[18:47] <Juerd> (In this case, mod_perl with an early handler can be a life saver)

[18:48] <obra> right. What I'm trying to see is whether the request is being handed off by the apache1 instantly or sat on for 2 min.

[18:50] <Juerd> Aha

[18:50] <Juerd> Perhaps server-status can be of help too

[18:55] *** Southen joined
[18:55] *** mj41 joined
[19:05] *** larsen_ joined
[19:10] <rindolf> Juerd: can you install links or elinks on feather?

[19:10] <rindolf> Juerd: please?

[19:24] *** the_dormant joined
[19:33] *** REPLeffe1t joined
[19:51] *** fglock joined
[19:55] *** the_dormant joined
[20:00] <obra> PSA: svn is down while juerd does a dist-upgrade

[20:00] <obra> it'll be back as soon as that's done

[20:04] <fglock> obra: hi!

[20:04] <lambdabot> fglock: You have 1 new message. '/msg lambdabot @messages' to read it.

[20:06] <obra> hey fglock! how's things?

[20:06] <fglock> agentzh: I think <alpha> and <ident> are built-in subrules, because I've seen them in examples

[20:06] <[particle]> yes, they are, like <ws>

[20:06] <Tene> ?eval 'foo' ~~ m/<ident>/

[20:06] <evalbot_r16241> Match.new(␤  ok => Bool::True, ␤  from => 0, ␤  to => 3, ␤  str => "foo", ␤  sub_pos => (), ␤  sub_named =>␤    { "ident" =>␤        Match.new(␤          ok => Bool::True, ␤          from => 0, ␤          to => 3, ␤          str => "foo", ␤          sub_pos => (), ␤          sub_named => {}␤        )␤    }␤)

[20:09] <fglock> obra: I'm a bit under burn out lately, but I will be ok in a few days

[20:09] *** veritos joined
[20:11] *** fglock joined
[20:11] *** IllvilJa joined
[20:11] <obra> fglock: sorry to hear about hte burnout

[20:12] *** SubStack joined
[20:13] <[particle]> fglock: maybe a sunburn will help

[20:14] <veritos> fglock/[particle]: huh ?

[20:14] <fglock> agentzh: re $<a> := (<b>) - it creates $<a><b>

[20:14] <[particle]> hint... go outside! enjoy life

[20:14] <fglock> sure - I've got the weekend ahead

[20:15] <[particle]> fglock: http://dev.perl.org/parrot/trunk/languages/abc/src/abc-2.pg

[20:15] <[particle]> s/dev/svn/

[20:16] <veritos> ooh, nifty.

[20:19] <moritz> wow

[20:19] *** fglock joined
[20:19] <fglock> hmm - cgi-irc in feather is failing

[20:20] <veritos> try irssi.

[20:20] <veritos> it's a fairly nice client

[20:20] <fglock> [particle]: is this p6parrot already?

[20:20] <fglock> veritos: I'm on irssi now :)

[20:20] <veritos> fglock: oh...

[20:21] <veritos> i was actually considering writing a small perl implementation.

[20:21] <moritz> veritos: of what?

[20:21] <[particle]> fglock: it's a first stab at syntax

[20:21] <veritos> moritz: IRC

[20:21] <obra> fglock: cgi-irc may be on the apache2 process

[20:21] <obra> which is down while juerd does a system upgrade

[20:21] <[particle]> it doesn't parse--note the opp syntax is not done

[20:21] <veritos> moritz: yes, i know we have a lot, but mine would be faster.

[20:22] <moritz> veritos: you mean another cgi interface?

[20:22] <moritz> veritos: or a pure perl irc client for the desktop?

[20:22] <rindolf> Hi moritz, obra 

[20:22] <veritos> moritz: no, pure perl for desktop

[20:22] <veritos> hey rindolf 

[20:22] <fglock> veritos: ah - I thought you would implement a perl6 :)

[20:22] <moritz> hi rindolf ;)

[20:22] <veritos> fglock: v6-Py?

[20:23] <moritz> hey, cool idea - let's implement perl6

[20:23] <moritz> oh, wait

[20:23] <[particle]> fglock: you seem to have cornered the market on that 

[20:23] <fglock> veritos: how is it going?

[20:23] <fglock> [particle]: sorry?

[20:23] <veritos> fglock: i've sorta scrapped it for now, i have a lot of schoolwork

[20:23] <veritos> maybe i should implement rules first for the dynamic grammar

[20:23] <[particle]> implementing perl6--you've done it a few ways already :)

[20:24] <fglock> [particle]: that's what I've been wondering about,

[20:24] <rindolf> Hi veritos 

[20:24] <rindolf> veritos: what's up?

[20:24] <rindolf> moritz: what's up?

[20:25] <veritos> rindolf: just chatting, nothing else.

[20:25] <moritz> rindolf: lot of learning for the exams :(

[20:25] <fglock> [particle]: it doesn't seem to have made much difference

[20:25] <moritz> rindolf: or at least I'm supposed to :)

[20:26] <[particle]> fglock: if you have ideas on what an opp syntax should look like, speak up

[20:26] <rindolf> moritz: which exams?

[20:26] <fglock> [particle]: did you take a look at STD?

[20:26] <[particle]> yes

[20:27] <moritz> rindolf: master exams

[20:27] <[particle]> translating from that to pge is the problem

[20:27] <moritz> physics

[20:28] <rindolf> moritz: physics...

[20:28] <rindolf> moritz: I wasn't too fond of physics in Uni.

[20:28] <moritz> rindolf: nothing to be scared of ;)

[20:28] <moritz> rindolf: it's all a matter of taste

[20:28] <rindolf> moritz: I wasn't scared of it.

[20:28] <moritz> I like computer science very well, but I decided it's nothing I want to do all my life

[20:30] <offby1> *gasp*

[20:30] <rindolf> moritz: I studied Elec. Eng.

[20:30] <rindolf> My first Usenet message - http://groups.google.com/group/rec.puzzles/browse_thread/thread/497cd6684bcde371/4e05d7f0912f3944?lnk=st&q=shlomi+fish&rnum=739#4e05d7f0912f3944

[20:30] <lambdabot> Title: Gates &amp; Angels - A Tougher Version - rec.puzzles | Google Groups, http://tinyurl.com/233ml9

[20:31] *** dduncan joined
[20:31] <obra> Juerd: upgrade done?

[20:32] <offby1> God bless lambdabot for tiny-ifying long URLs.

[20:33] <moritz> who wrote lambdabot?

[20:33] <Juerd> obra: No

[20:34] <offby1> rindolf: even if I _knew_ where my first Usenet post was, I wouldn't tell anybody :-p

[20:34] <Juerd> rindolf: 1994; impressive.

[20:34] <Juerd> My first usenet posting was in 1997

[20:35] <dduncan> afaik, I have never posted to usenet

[20:35] <dduncan> my first internet communication was email, in 1997

[20:35] <dduncan> and the first time I used the web was in 1995

[20:35] <dduncan> or late 1994

[20:35] * offby1 finds the old "Four Yorkshiremen" film clip

[20:36] <fglock> [particle]: one thing that bugs me is if "proto 'postfix:++'" is actually redefining the perl6 grammar, not bc's ? 

[20:36] *** bonesss joined
[20:37] <Juerd> March 20, 1997

[20:37] <Juerd> My first internet communication was IRC

[20:37] <Juerd> In fact, IRC was the first TCP protocol I used successfully :)

[20:37] <[particle]> fglock: can't that be fixed with namespaces?

[20:37] <fglock> [particle] it is lexically redefining the global table

[20:37] <[particle]> grammar foo;

[20:37] <Tene> Juerd: where did you get your IRC client?

[20:38] <TimToady> fglock: that's just the old pge notation, from before we understood that distinction

[20:38] <TimToady> that's part of what will change in the upcoming refactoring

[20:38] <Juerd> For a while (I was 12 years old) I had no idea there was more than this. IRC fit the description perfectly: communicating with other people, exchanging files, looking up information (infobots!)

[20:38] <Juerd> So for all I knew, for a few months, IRC *was* the internet.

[20:38] <Tene> Heh.

[20:39] <Juerd> Tene: It came with the free dial up trial account

[20:39] *** REPLeffect joined
[20:39] <moritz> Juerd: and nobody postet http:// URLs that you were curious about?

[20:39] <Juerd> I have no idea what the name of that client was

[20:39] <moritz> s/postet/posted/

[20:39] <Juerd> moritz: That's how I eventually learned there was more.

[20:39] <Juerd> moritz: But no, very few people posted that.

[20:41] <Juerd> A "corporate website" was still called "hompeage", and was typically a tiled background image of the brand logo, and a dozen pages in a horrible color scheme.

[20:42] <fglock> TimToady: hmm - you mean postfix:* does change the perl6 grammar, and pge is being refactored?

[20:42] <Juerd> This was in 1995

[20:42] <moritz> Juerd: for most companies that's still the case :(

[20:42] <[particle]> pge is being refactored to use the new syntax

[20:42] <Juerd> I still coded in Quick Basic :)

[20:42] <moritz> Juerd: well, not _so_ bad

[20:43] <[particle]> i forget how far along it is, but we now have p6regex (old) and perl6regex (new) syntax

[20:43] <[particle]> eventually the migration will be complete

[20:44] *** lichtkind joined
[20:44] <[particle]> ...but right now so many things depend on pge, we need to  do a step at a time (i forgot about those syntax changes, which is why my initial response was confused)

[20:45] <PerlJam> isn't that what branches are for? :)

[20:45] <[particle]> why branch when you don't have to?

[20:45] <[particle]> only trunk is smoked, and it's one less merge to do

[20:47] <[particle]> until we get a good set of smoke utils, we're not going to do much branching, i'm afraid

[20:47] <TimToady> postfix:* is illegal, if you meant the * literally.  postfix:<*> is reserved for talking about the * operator in your current language that you're running.  you can name your rules anything other than that, but postfix:sym<*> is recommended for rules that parse symbolic operators

[20:48] <TimToady> postfix:foo works for non-symbolic operators

[20:48] <moritz> you can use barewords as posfix operators?

[20:48] <TimToady> and is taken to be short for postfix:sym<foo>

[20:48] <fglock> I mean postfix:* as postfix-anything

[20:48] <TimToady> ?eval 1i

[20:49] <evalbot_r16241> 0.0 + 1.0i

[20:49] <moritz> and how do you apply them to variables?

[20:49] <moritz> with unspace?

[20:49] <TimToady> ?eval my $x = 1; $x.i

[20:49] <evalbot_r16241> Error: No such method in class Int: &i

[20:49] <TimToady> NIY

[20:50] <TimToady> will work as soon as STD is the parser though

[20:50] <fglock> how do you talk about postfix in the current grammar, as opposed to postfix in the current language?

[20:50] <[particle]> my Ordinal $x = 3; # could be the same as my $x = 3rd; # if postfix:sym<rd> is defined

[20:51] <obra> Juerd: I see no deb/dh/apt processes

[20:51] <TimToady> if you say <postfix> you're calling all the postfix:* rules in your grammar

[20:51] <TimToady> using * in your sense

[20:51] <fglock> so it's a... multi?

[20:52] <TimToady> but if you say postfix:<*> you are specifically not referring to one of those rules, but current language

[20:52] <Juerd> obra: It fails in several places and I'm a bad multitasker

[20:52] <TimToady> yes, many of the rules in STD are multis--all of the ones that 'cheat' constructs a rule for at the end.

[20:52] <obra> Juerd: ok

[20:53] * Juerd removes aspell and ispell

[20:53] <Juerd> Ugh, broken packages :(

[20:53] <offby1> packages don't break.  People do.

[20:53] <Juerd> I never said they were breaking.

[20:53] <TimToady> the constructed postfix rule refers to 5 postfix:* rules

[20:54] <fglock> and "sym" is like the old "KEY" in <%hash>

[20:54] <TimToady> the first one of which is postfix_i

[20:54] * PerlJam is still trying to wrap his head around "calling _all_ the postfix rules"

[20:54] <TimToady> much like, but the rule can set $<sym> to whatever it likes

[20:55] <TimToady> so that the eventual name of the operator in the eventual language becomes postfix:{$sym}

[20:55] <lichtkind> hi juerd

[20:55] <TimToady> so you can write one rule that parses various operators

[20:55] <TimToady> STD does that with sigil casts, for instance

[20:56] <PerlJam> oh, I see.  it's lookup-tableish

[20:57] <TimToady> PerlJam: the point is that some of the operators are defined by standard Perl, while others by the user, and they all have to have the same standing in the parser

[20:57] <[particle]> rule dispatch

[20:58] <PerlJam> right, I'm getting it (pardon my slowness :)

[20:58] *** lichtkind_ joined
[20:58] <TimToady> so when the grammar says <postfix> it knows all of the postfix operators defined at this point, and doesn't privilege the standard ones over the user-defined, or vice versa

[20:58] <fglock> ah, I just found it in S05

[20:59] *** japhb joined
[20:59] <TimToady> (the cheated version isn't that smart, of course, since it's not doing longest-token really)

[20:59] * [particle] heads off to lunch

[21:02] * PerlJam needs to re-read S05 at the very least.

[21:03] * moritz thought about translating it to German to be forced to read it carefully ;)

[21:04] <PerlJam> I've read it carefully once already.  But it's changed a bit since then  ;)

[21:04] * spinclad thought of writing a parser for it to force another process to read it carefully

[21:06] <TimToady> if only we could find someone to write it carefully, we'd be home free...

[21:06] <moritz> TimToady: do you think it's not carefull right now?

[21:06] <PerlJam> heh

[21:07] <TimToady> so far I've only rewritten one synopsis to stand on its own without assuming a bunch of Perl 5, and that's S03.

[21:08] <PerlJam> Well, S05 doesn't have the words "conjecture" or "conjectural" nor does it have the word "maybe" anywhere within its text.  I'd S05 is doing okay :-) 

[21:08] <PerlJam> s/I'd/I's say/

[21:08] <PerlJam> Grr.

[21:08] <TimToady> a synopsis that doesn't adequately mark its conjectures is even more hopeless  :)

[21:08] <Tene> s/Grr/Hi, I'm PerlJam/

[21:09] <TimToady> and, in fact, S05 has two instances of "Conjecture".

[21:09] <PerlJam> ah, my search was case sensitive when I didn't mean for it to be.

[21:10] <PerlJam> and there's one instance of "Maybe" that looks like it should be "May be"

[21:11] <TimToady> looks like there are currently 14 Conjectures in the design.

[21:11] *** tewk joined
[21:11] <fglock> weekend &

[21:11] <TimToady> have fun

[21:12] <fglock> I will :)

[21:30] <moritz> S05 mentions user defined modifiers - any idea how that might look like?

[21:46] *** ruz_ joined
[21:56] *** weinig joined
[21:58] <ingy> hi all

[21:58] <moritz> hi ingy ;)

[21:59] <ingy> I just bound libyaml to perl. see YAML::LibYAML

[21:59] <ingy> when this work matures, I recommend it replace syck for pugs dev

[21:59] <ingy> hi moritz 

[22:00] <avar> ingy: why is it better than syck?

[22:00] <ingy> because it was written exactly to the YAML1.1 spec

[22:01] <ingy> syck was completely adhoc and is pretty buggy

[22:01] <ingy> and afaik has no native unicode support

[22:02] <ingy> libyaml is the canonical Python implementation and has been ported to Ruby

[22:02] <ingy> it also is a streaming (think SAX) parser/emitter

[22:03] <ingy> syck is not

[22:03] <ingy> syck forces you to build everything in memory

[22:04] <ingy> whereas libyaml could theoretically process an endless yaml stream

[22:04] <Tene> cat /dev/randomyaml | libyaml --parse

[22:08] <ingy> cat /dev/randomyaml | libyaml --parse | /dev/phonecall --random-number

[22:09] <avar> nice

[22:11] <ingy> I'm following audrey's lead and implementing the whole stack over libyaml's parser/emitter in C

[22:11] <ingy> instead of Perl, so that it should be very fast

[22:12] *** prism joined
[22:12] <Juerd> Debian, f you. Just !@#$%# pick some sane defaults and don't block to wait for my input

[22:12] <Juerd> Or group the questions together and ask them all at once, instead of intermittently.

[22:14] <japhb> Juerd: part of that is package maintainers who still don't use debconf.  Debconf questions "should" come all at once at the beginning, and you can change your question level such that it takes defaults most of the time.

[22:14] *** nperez joined
[22:15] <Juerd> japhb: I've never had debconf questions all at the beginning.

[22:15] <japhb> Packages that aren't up to snuff usually irk me, but then I recall that I don't have packaging skillz either, so every packager has to start *somewhere*.

[22:15] *** wolverian joined
[22:15] <japhb> Now, base/essential packages that are handled idiotically really do irk me.

[22:16] <japhb> Juerd: perhaps different definitions of "beginning".  Clearly it doesn't know what to ask until the packages are downloaded and unpacked, but it should be able to ask before doing the installs.

[22:17] *** wolverian joined
[22:17] <wolverian> Juerd, feather's locales seem borked. want me to investigate? can't see if you're doing something already there :)

[22:18] <Juerd> wolverian: I disabled it

[22:18] <wolverian> oh. well, that explains it..

[22:18] <Juerd> wolverian: I've backupped your old config so I can restore it easily

[22:19] <wolverian> well, it's just that I don't have an UTF-8 locale anymore..

[22:19] <Juerd> japhb: Except it unpacks each package individually, just before installing it.

[22:19] <wolverian> s/an/a/

[22:20] <Juerd> wolverian: For some reason that I have yet to figure out, feather is very slow with some things, and has extremely high loads even when doing very little.

[22:20] <Juerd> At this moment, a load of 11 for just dist-upgrading. Has been at 19 even.

[22:20] <Juerd> Disabling locales helped. A little.

[22:20] <wolverian> Juerd, hm. well, UTF-8 locales are very resource hungry when sorting and such. some locales are, anyway.

[22:20] <Juerd> If anyone has ideas...

[22:21] *** Limbic_Region joined
[22:23] <japhb> hmmm, /me wonders if I've not come across debconf behaving badly because I so rarely do really huge upgrades (I normally ride testing)

[22:24] <Juerd> I have a lot of huge upgrades, because I run Debian Sid almost everywhere

[22:25] <Juerd> "Unstable" is sometimes surprisingly more stable than "testing" :)

[22:25] <Juerd> Even though it has many more updates

[22:27] <wolverian> I've been trying ubuntu a bit, leaving servers to autoinstall security ugprades and otherwise letting them be for the six month release cycle

[22:27] <wolverian> it's .. peaceful.. mostly.

[22:28] <wolverian> anyway, no idea about the load. :( 

[22:28] <Juerd> I'm currently considering evaluating ubuntu for servers.

[22:28] <Juerd> I've used it on my laptops for more than a year now, and am pleased in general, but not about major upgrades.

[22:29] <wolverian> at least they've now added a text mode release upgrader

[22:29] <wolverian> (do-release-upgrade)

[22:30] <wolverian> kind of telling that it is needed at all. :)

[22:30] <Juerd> It's silly to have such things gui only.

[22:30] <wolverian> yes. 

[22:30] <Juerd> It's usually easier to build some commands and then a frontend, than to combine things and do it both monolithically.

[22:31] <wolverian> iirc the backend is separated, they just didn't have a text frontend until now.

[22:40] *** prism joined
[22:42] <japhb> Juerd: I don't run unstable primarily because when unstable does get horked, it's a MESS to clean up.  On the downside, when someone uploads a key package like say glibc every week, never allowing it to fulfill the testing waiting period, a LOT of packages get blocked.  And when glibc finally moves to testing, it's almost like a release upgrade.

[22:44] * japhb just wants to shake the glibc packager and say "PLEASE STOP UPLOADING!  TWO WEEKS, THAT'S ALL I ASK!"

[22:48] *** mjk joined
[22:58] <Yaakov> ingy!

[23:00] *** nperez joined
[23:03] <Juerd> japhb: Such a mess hasn't happened to me in the past 3 years.

[23:03] <Juerd> japhb: But indeed such situations have existed

[23:04] <japhb> Juerd: once burned, twice shy and all that.  In my case, more like "several times burned, shy for a long time"

[23:05] *** ruz_ is now known as ruz

[23:05] <japhb> If not for the aforementioned "caffeinated packager single-handedly blocks testing" problem, I'd be perfectly happy in the testing world.

[23:24] *** avar joined
[23:33] <moritz> in S05:

[23:33] <moritz>     / ( foo | bar ) d <~~$0> /  # matches using rule associated with $0

[23:33] <moritz> The last is equivalent to

[23:33] <moritz>     / ( foo | bar ) d ( foo | bar) /

[23:33] <moritz> isn't there a 'd' missing at the end?

[23:34] <moritz> eg  / (foo | bar ) d ( foo | bar ) d/

[23:38] <obra> Juerd: looks done. did it error out again?

[23:38] <japhb> moritz: why?  The d is outside the parentheses marking $0's capture bounds, right?

[23:39] <moritz> japhb: right

[23:40] <obra> hm. commitbit feels a lot faster

[23:41] <moritz> it _is_ faster

[23:41] <obra> oh good :)

[23:41] <obra> I wouldn't call it _fast_

[23:41] <moritz> it doesn't time out on nearly every request as before

[23:41] <obra> But now, hopefully, I have time to actually finish the new version ;)

[23:42] <moritz> can somebody re-enable trac?

[23:45] <moritz> deleting a pending author in commitbit is a noop

[23:49] *** SubStack joined
[23:49] <japhb> obra: so what did you change?  Or is it simply because of Juerd's upgrades?

[23:52] <obra> japhb: I reindexed and cleaned the db

[23:54] <japhb> obra: ah.  I'm surprised we were large enough to have performance problems from the DB ....

[23:59] *** araujo joined
