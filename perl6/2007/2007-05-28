[00:01] *** offby1` joined
[00:08] *** Jmax joined
[00:25] *** offby1` is now known as offby1

[00:35] *** nipotaway is now known as nipotan

[00:48] *** audreyt joined
[01:03] *** offby1 joined
[01:06] *** Talaman72 joined
[01:06] <svnbot6> r16544 | Darren_Duncan++ | ext/QDRDBMS/ : reordered some parts of AST.pm (the file byte size is unchanged)

[01:34] *** rashakil joined
[02:21] *** agentzh joined
[02:21] <agentzh> could anyone paste the IP address of feather? I'm having problems with my DNS server. :(

[02:21] <lambdabot> agentzh: You have 1 new message. '/msg lambdabot @messages' to read it.

[02:21] <agentzh> @messages

[02:21] <lambdabot> Aankhen`` said 8d 22h 25m 54s ago: BTW, you might want to look at http://validator.w3.org/check?verbose=1&uri=http%3A%2F%2Fperlcabal.org%2Fsyn%2FS02.html â€¦ I'd change the ID format to something

[02:21] <lambdabot> valid, but I'm not sure what it might break, so I'll leave that to you.

[02:24] <agentzh> Aankhen``: thanks! I'll remove the leading underscores from the ID value :) it will break moritz++'s irclog but it's trivial to fix :)

[02:24] <agentzh> oh, feather is out of reach due to DNS problem...

[02:25] <agentzh> Aankhen``: feel free to update smartlinks.pl since I can't commit these days :(

[02:29] *** Daveman joined
[02:30] *** Khisanth joined
[02:36] *** dolmans joined
[02:54] *** fridim joined
[03:21] <Aankhen``> agentzh: Aye Cap'n.

[03:25] <svnbot6> r16545 | Aankhen++ | util/smartlinks.pl:

[03:25] <svnbot6> r16545 | Aankhen++ | * removed leading underscore from line anchors to ensure valid HTML.

[03:26] <agentzh> Aankhen``: ++

[03:26] <Aankhen``> Heh, thanks.

[03:26] <agentzh> :)

[03:27] <Aankhen``> agentzh++ though, since all I'm doing is tweaking your work. :-)

[03:27] *** drbean joined
[03:34] *** daxim_ joined
[03:37] *** agentzh left
[04:09] *** the_dormant joined
[04:14] *** stevan__ joined
[04:16] *** jisom joined
[04:50] *** justatheory joined
[05:06] *** BooK joined
[05:11] *** amnesiac joined
[05:37] *** obvio171_ joined
[05:38] *** obvio171_ is now known as obvio171

[05:44] *** ssd7 left
[06:13] *** rindolf joined
[06:14] <svnbot6> r16546 | Darren_Duncan++ | ext/QDRDBMS/ : in AST.pm, added package TypeInvo and updated TypeDict to use it, made other small changes

[06:25] *** Averell joined
[06:41] *** weinigLap joined
[06:43] *** jisom joined
[06:47] *** rfordinal joined
[07:02] *** xinming joined
[07:04] *** the_dormant_ joined
[07:08] *** ayrnieu joined
[07:10] *** franck__ joined
[07:11] *** franck__ joined
[07:16] <meppl> good morning

[07:19] <Tene> hi

[07:24] *** buetow joined
[07:28] *** elmex joined
[07:29] <meppl> good morning tene

[07:29] <xinming> @tell stevan__ sorry t trouble again, Please give me the Moose repository url.

[07:29] <lambdabot> Consider it noted.

[07:39] *** iblechbot joined
[07:53] *** mj41 joined
[08:10] <spinclad> xinming: http://code2.0beta.co.uk/moose/svn (or ask purl 'moose svn?' in #moose)

[08:10] <lambdabot> Title: Revision 2378: /

[08:11] <xinming> spinclad: thanks.

[08:12] *** devogon joined
[08:14] *** PDET joined
[08:14] <PDET> hello!

[08:14] *** weinigLap joined
[08:17] *** kane_ joined
[08:19] <PDET> who wants to learn mandarin?

[08:20] <xinming> PDET: ni gan ma?

[08:21] <PDET> i want to find a part time job on the internet!

[08:21] <xinming> ...

[08:21] <xinming> This is not the right place

[08:22] <PDET> where should i go?

[08:24] <xinming> PDET: bu zhi dao...

[08:25] <PDET> thank you!

[08:25] *** PDET left
[08:40] *** Alias_ joined
[08:41] <lumi> TimToady++ # patch is so cool

[09:11] *** dduncan left
[09:16] <moritz> good morning ;)

[09:18] <svnbot6> r16547 | moritz++ | [irclog] fixed line anchors in synopsis links which were changed in r16545

[09:41] *** SCalimlim joined
[09:49] *** isaacd joined
[10:14] *** trunix joined
[10:45] *** rho joined
[10:50] *** IllvilJa joined
[10:52] <IllvilJa> Hm... I did a recent "make install" in my pugs build directory... Should I then count my two feet to ensure that I didn't shoot one of them off in the process?

[10:53] <moritz> yes, you should ;)

[11:03] <lumi> IllvilJa: http://moritz.faui2k3.org/irclog/out.pl?channel=perl6;date=2007-05-25#id_l16 -- Foot counter

[11:03] <lambdabot> Title: IRC log for #perl6, http://tinyurl.com/2f47kz

[11:03] <lumi> moritz: There's a bug in the log search (I think)

[11:04] <moritz> lumi: tell me more

[11:04] <lumi> moritz: I searched for that line, the link on the search page was to id_l15

[11:05] <moritz> it has an offset of one, I know

[11:05] <lumi> (Well, I searched for the line in *my* logs, and then searched for the nick in the search)

[11:05] <lumi> Okay

[11:05] <moritz> I wanted to honor offbyone ;-)

[11:05] <lumi> Hehe

[11:05] <moritz> s/offbyone/offby1/

[11:05] <moritz> but if you think it should be fixed, I can do it

[11:05] <lumi> How does that work for the last entry in a log?

[11:06] <moritz> I don't see a problem with the last entry

[11:06] <lumi> You're right, the first one

[11:06] <moritz> the first one will get a non-existing anchor and stay at the top

[11:06] <lumi> But it'll just get you to the top of the log, so I guess it works

[11:06] <lumi> Right

[11:07] <lumi> Well,, I'd fix it unless you want more people like me reporting it :)

[11:07] <moritz> lumi: ok, on my TODO list

[11:07] <moritz> erm, @TODO ;-)

[11:09] <moritz> but I won't fix it until some time later, I've got a master exam today ;)

[11:12] <lumi> But it's URGENT! :P

[11:12] <lumi> Good luck

[11:13] <lumi> Or good non-luck, as the case may be

[11:13] <IllvilJa> moritz and lumi: if I got it right, the pugs install will do some... intresting stuff in the perl5 directories?

[11:13] <IllvilJa> BTW, I did a "find /usr/lib/per5 -cmen 10080" but no files showed up.  So maybe I'm lucky.

[11:13] <lumi> IllvilJa: That's what I understand, also, it misinstalls over your perl5

[11:14] <lumi> I mean: That's what I understand too

[11:14] <IllvilJa> Ok.  Then I were lucky not having any misinstallations in perl5.  Or perhaps I gave my find command the wrong time limit for the -cmin flag ;-).

[11:15] <lumi> Did you spell -cmin right?

[11:15] <IllvilJa> Hm.  Maybe I should run "make install" in pugs, just to ensure that /usr/lib/perl5 get's "upgraded" :-D?  (just my sick humor)

[11:15] <IllvilJa> Yes.  "-cmin 10080".  Probably I can replace the -cmin flag with something else as 10080 is the number of minutes on a week.

[11:16] <lumi> IllvilJa: I only asked because you mentioned it wrong a second ago, but it would've thrown an error prolly

[11:17] <IllvilJa> Hm... when I ran that "find" command on /usr/lib/perl6 instead I also get zero files.  So my use of the find command on /usr/lib/perl5 probably was a red herring...

[11:18] <IllvilJa> (But when on earth does not I see any new files in /usr/lib/perl6??)

[11:19] <IllvilJa> Nevermind.  I'll address this (potential) problem on my machine the professional way: I'll take two aspirin and pretend it isn't there.

[11:26] *** renormalist joined
[11:28] *** rfordinal joined
[11:32] *** isaacd_ joined
[11:42] *** chris2 joined
[11:45] *** andara joined
[11:55] <Tene> IllvilJa: -cmin -10800

[11:55] <Tene> you need the '-'

[11:58] <svnbot6> r16548 | moritz++ | [irclog] fixed line anchors in search, lumi++

[12:03] <IllvilJa> Tene... thx, I'll test.

[12:05] <IllvilJa> Hm... when I ran the command I just got 2 files in /usr/lib/perl5 which where touched last week.

[12:06] <IllvilJa> One of them is a .pod file and the other is a .packlist file related to Perl6/Pugs, so my gut feeling is that my Perl5 install then is in pretty good shape.

[12:09] * Tene nods.

[12:10] *** fglock joined
[12:10] <IllvilJa> Of course, I won't let this prevent me from issuing yet another "make install" in my pugs build directory the next time there is a new release of Pugs (or parrot) ;-)

[12:11] <moritz> presumably somebody will fix "make install" before a release

[12:11] <moritz> IllvilJa: in the case of parrot you don't need to be afraid, they manage their build system quite well

[12:12] <IllvilJa> Cool!

[12:12] <IllvilJa> Actually, regarding Pugs and Parrot, I'm never afraid (not even when I actually should be)...

[12:12] <moritz> ;-)

[12:13] <IllvilJa> The brave (or stupid?) early adopters I assume assist in getting Perl6 moving forward.

[12:13] <moritz> the only problem with parrot's build system is that you can't "make -j 2" 

[12:13] <IllvilJa> I can live with that.  And eventually, I suppose they will address that too.

[12:13] <moritz> speaking of moving perl6 forward... do you have a commit bit?

[12:14] <fglock> demq: ping

[12:15] <IllvilJa> Um... no. I do unfortunately not have any time hacking ON Perl6,  I'm barely looking into hacking WITH perl 6 so I suspect that a commit bit would be a bit wasted on me.

[12:15] <IllvilJa> But if I get the possibility in the future to contribute with code to the Perl6 language or modules etc I'll ask if I can get that bit.

[12:15] <moritz> IllvilJa: ok

[12:15] <IllvilJa> But thanks for asking!

[12:16] <moritz> IllvilJa: for example working examples/ are always welcome ;)

[12:16] <IllvilJa> Aha!

[12:16] <IllvilJa> I'll remember that.

[12:16] <lumi> A bit wasted, haha

[12:16] *** nipotan is now known as nipotaway

[12:16] * moritz sells commit bits on ebay ;-)

[12:17] <lumi> I've seen them go on auction

[12:18] <IllvilJa> Hm... commit bits and pieces... sorry, I won't go down that path.  (Beware, I'm born and raised in Gothenburg, Sweden, a town whose inhabitants are notorious for their love for really bad jokes based on wording and twisting the Swedish language.  So I rather stay away from "bit"-jokes...  Like trying to get a "commit byte" for a workgroup of 8 ppl etc...)

[12:19] <IllvilJa> Ok, got to focus on my work (which right now is coding in Perl 5, ironically). Thanks for the chat!

[12:20] <moritz> ;-)

[12:22] <demq> ironically coding must be hard.

[12:23] <demq> youve got to steel yourself to do it.

[12:23] <fglock> demq: you asked why Data::Bind instead of Data::Alias in v6.pm?

[12:24] <demq> and if you arent careful you might come'a'copper.

[12:24] <demq> yes

[12:24] <demq> especially if you find yourself lead down the garden path.

[12:25] <fglock> mostly because clkao wrote Data::Bind, and he was working on v6.pm at that time

[12:25] <demq> ah

[12:25] <demq> no other technical reason?

[12:25] <fglock> I don't think so

[12:26] <fglock> Data::Alias looks pretty good

[12:26] <demq> cool.

[12:26] <demq> do you mind if i quote you here?

[12:26] <fglock> sure

[12:26] <demq> thnx

[12:26] <fglock> but you talk to clkao too

[12:27] <fglock> s/you/you could/

[12:28] <fglock> I'm trying to find this out in the irc logs

[12:28] <demq> hopefully he reads p5p, and will pipe up if has something to add.

[12:29] *** stevan__ joined
[12:30] <fglock> I think we just ignored that Data::Alias existed - http://www.gossamer-threads.com/lists/perl/porters/208440?do=post_view_threaded

[12:30] <lambdabot> Title: Mailing List Archive: Re: Data::Bind sematics in Perl core, http://tinyurl.com/yvfkt2

[12:31] *** JarJarBinks joined
[12:32] <demq> ok.

[12:35] <demq> thanks. at the very least it clarifies the situation.

[12:36] <fglock> thank you

[12:36] <fglock> brb &

[12:37] *** wilx` joined
[12:44] *** agentzh joined
[13:01] *** elmex_ joined
[13:05] *** baest joined
[13:14] <fglock> I've been thinking about how to "lexically modify the grammar" - for example, how is 'use Python' going to work?

[13:15] <demq> die "Naughty boy"

[13:15] <demq> :-)

[13:16] <demq> er, die "Say no more"

[13:16] <fglock> :)

[13:17] <demq> the logic in the perl5 regex optimiser is twisted beyond all comprehension

[13:18] <fglock> I see how categories are multi subs, that can be lexically redefined; but the Perl 6 grammar methods are not lexical (or are they?)

[13:19] <fglock> re twisted: even if you add some structure to a complex system, it is still complex

[13:20] *** agentzh left
[13:22] <demq> trust me, this is twisted. just plain old twisted.

[13:22] <demq> i almost wonder if ilya was on acid when he wrote it

[13:22] <fglock> aha, I forgot about $?PARSER

[13:23] *** kanru joined
[13:23] <demq> hmm, maybe if i took acid i could understand it.. hmmm

[13:28] *** buetow joined
[13:38] *** elmex joined
[13:41] *** baest joined
[13:43] <gaal> possible janitorial Hs job, try out the new Data.Derive at http://www-users.cs.york.ac.uk/~ndm/derive/ as a replacement for DrIFT

[13:43] <lambdabot> Title: Neil Mitchell - Derive

[13:44] <gaal> though if someone has tuits and is looking for Hs stuff then moving more stuff from Pugs.Prim.* to MO methods is better!

[13:45] <gaal> "Hs tuitted individual"

[13:46] *** ProperNoun joined
[14:07] *** stef_ left
[14:08] <xinming> TimToady: Can we add a special variable into perl 6, which will be an alias of value returned by last executed sub?

[14:09] <rgs> and blow up memory ?

[14:09] <xinming> TimToady: eg, currently, in perl 5, we have, if (my $a = blabla()) { return $a }; If we have such veriable, we can use

[14:09] <xinming> if (blabla()) { return $last_return_variable }

[14:09] <xinming> rgs: No, It won't, just an alias. It won't take too much space.

[14:10] <lumi> xinming: if blabla -> $a { return $a } # Wasn't there something like this?

[14:10] <rgs> but you have to keep the original value around.

[14:11] <xinming> lumi: What i want is, write something like...

[14:11] <xinming> blabla && return $last_excutes_variable;

[14:11] <rgs> I'm only a perl-5'er, but in that context that doesn't sound like a good idea. Perl 6 might be different.

[14:12] <xinming> lumi: It is still the same like 'if (my $a = blabla) { return $a }' in perl 5

[14:12] <demq> a new keyword like returnif would do it.

[14:12] *** stef_ joined
[14:12] <demq> returnif blahlah();

[14:13] <xinming> demq: But I don't think TimToady will add this keyword. ;-)

[14:13] <demq> use feature returnif

[14:13] <demq> :-)

[14:13] <gaal> iirc there a similar proposal, that named this thing "it".

[14:13] <demq> ive wanted stuff like that beofre.

[14:14] <xinming> Because perl is different. ;-)

[14:14] <lumi> macro returnif($a) { {{{my $t = $a; return $t if $t; }}} }

[14:14] <lumi> Or so...

[14:14] <xinming> People use perl wishes to write code as less as possile.

[14:14] <xinming> possible*

[14:15] <demq> its *kindof* like ||= or //= 

[14:15] <gaal> shouldn't there be an extra scope in that macro, to prevent $t from leaking?

[14:15] <xinming> lumi: Such kind of thing is easy to add, But I think many people will like there will be built-in

[14:15] <xinming> lumi: It's a bit like the function 'say' in perl 5

[14:16] <lumi> gaal: I think it's scoped to be a fresh name? Could be wrong

[14:16] <lumi> s/scoped/specced/

[14:16] <xinming> sub say { print @_, "\n"; }

[14:16] <gaal> macros get their own scope be default? doesn't sound, uh, sound.

[14:16] <lumi> xinming: iswym, and I've been using that construct quite a bit

[14:16] <lumi> gaal: That's hygiene

[14:17] <xinming> lumi: What does iswym mean?

[14:17] <lumi> I see what you mean

[14:17] <gaal> xinming: i see what you moose

[14:17] <lumi> That too :)

[14:18] <gaal> well, so long as there's a way to supress the extra scope..

[14:18] <lumi> if (blahblah()) { return $^it }

[14:18] <gaal> $^ only works in ->s

[14:19] <lumi> Oh?

[14:19] <lumi> I thought $^ and -> were bitter enemies

[14:19] <gaal> let me refresh my moose..

[14:19] <lumi> aol

[14:20] <xinming> Perl will be a language for the next century... :-)

[14:20] <gaal> oh, you're right; "it is illegal to use placeholder variables in a block that already has a signature"

[14:20] <xinming> use GLOBAL '$*blabla*

[14:20] <xinming> use GLOBAL '$*blabla'

[14:22] <lumi> gaal: As for the macro, :COMPILING makes it meanthe outside scope

[14:23] <lumi> Without it, variables default to freshness

[14:23] <lumi> http://perlcabal.org/syn/S06.html#Quasiquoting

[14:23] <gaal> ACK, thanks

[14:23] <lambdabot> Title: S06

[14:24] <lumi> I guess I was using {{{}}} wrong though

[14:24] *** vel joined
[14:28] *** lde joined
[14:29] <gaal> bbl&

[14:34] *** LCamel joined
[14:35] *** amnesiac joined
[14:45] <lumi> What's the win in Data.Derive over DrIFT?

[14:45] *** lde joined
[14:49] <gaal> worth evaluating, but possibly: 1. faster 2. easier to use, because we can just bundle Derive instead of having anyone who wants to hack on modules that have instances need to install DrIFT themselves (which is kinda tricky with our symlink chicanery)

[14:49] <gaal> re-bbl&

[14:52] *** F joined
[14:55] <lumi> gaal: Ah, Data.Derive with its TH, I see

[14:57] *** chris2 joined
[14:58] *** mj41 joined
[15:01] *** F left
[15:02] *** buetow joined
[15:05] *** iblechbot joined
[15:21] *** torz joined
[15:22] <nothingmuch> eautiful: http://galileo.phys.virginia.edu/classes/109N/more_stuff/Applets/brownian/brownian.html

[15:22] <lambdabot> Title: Einstein's Explanation of Brownian Motion, http://tinyurl.com/4undx

[15:31] *** the_dormant joined
[15:42] <fglock> nothingmuch: will you be at YAPC::EU?

[15:44] <nothingmuch> fglock: yep

[15:44] <fglock> great :)

[15:45] <nothingmuch> i hope my talks get accepted

[15:45] <nothingmuch> well, talk, really

[15:46] <nothingmuch> the other is more of a "if you like I'm willing to give that too" kind of fller, that slightly applies to the social perl theme

[15:46] <moritz> nothingmuch: which topic?

[15:46] <moritz> I mean the "real"

[15:46] <nothingmuch> moritz: object meta programming

[15:47] <pasteling> "nothingmuch" at 84.110.247.29 pasted "abstract" (12 lines, 1K) at http://sial.org/pbot/25188

[15:49] <moritz> sounds nice ;)

[15:57] <nothingmuch> climbing &

[15:58] <moritz> have fun ;)

[16:00] *** araujo joined
[16:20] *** kanru joined
[16:32] *** Limbic_Region joined
[16:36] <Limbic_Region> salutations all

[16:37] <moritz> hi L_R ;)

[16:41] *** rlb3_work_ joined
[16:45] *** franck__ joined
[16:49] *** elmex joined
[16:50] *** andara left
[16:53] *** obvio171 joined
[16:54] *** isaacd__ joined
[17:01] *** justatheory joined
[17:16] <TimToady> yes, "if blahblah() { return $^it }" should work

[17:17] <TimToady> in fact, arguably "if blahblah() { .return }" should work if we take the use of $_ to be a requirement for a parameter to the block.

[17:18] <TimToady> since "if" should respond to any block that has arity == 1

[17:19] <TimToady> but I can also argue that the other way

[17:20] <TimToady> since people will also expect "if .foo { .bar }" to use the same $_ for both.

[17:24] *** Psyche^ joined
[17:26] *** Psyche^ is now known as Patterner

[17:31] *** jisom joined
[17:37] *** bernhard joined
[17:43] *** ahmadz joined
[17:47] *** weinigLap joined
[18:04] *** fglock_ joined
[18:09] *** the_dormant joined
[18:11] *** renormalist joined
[18:19] *** IllvilJa joined
[18:19] *** rindolf joined
[18:28] *** ruoso joined
[18:28] *** arguile_ joined
[18:29] *** Entonian joined
[18:31] <renormalist> When I (try to) port a P5 module to P6, what version number do you typically choose. 0.01, ie. from the beginning, or the version, that's ported?

[18:40] <demq> when did the perl6 design phase start?

[18:41] *** the_dormant_ joined
[18:42] <demq> specifically would the perl.bootstrap be considered to be a perl6 or perl5 list?

[18:42] <demq> or should it just be considered to be a perl list?

[18:44] <demq> wikipedia seems to consider this important in describing "Warnocks Dilemma"

[18:48] <renormalist> demq: just the wrong time. Probably in every timezone an important tv programm has started or such. try again in 1h. :-)

[18:49] <demq> heh. thanks. i was starting to feel warnocked there

[18:49] <demq> :-)

[18:49] <renormalist> demq: btw, I don't understand the question. Do you ask, when the first apocalypse was written?

[18:50] <demq> no, its silly trivia.

[18:51] <demq> somebody was quibbling over the post that brought us "Warnocks Dilemma" and whether it was to a perl-5 or perl-6 list. in hindsight its a stupid debate.

[18:51] <demq> as Larry has officially stated that he considers both to be just Perl. Therefore it doesnt matter

[18:52] <Limbic_Region> actually, I thought it was on the perl6.internals list which really is parrot

[18:52] <Limbic_Region> but I am likely mistaken

[18:58] <svnbot6> r16549 | renormalist++ | - is extended|deep|also traits

[19:00] *** daxim joined
[19:02] <demq> apparently it was called perl.bootstrap

[19:16] <svnbot6> r16550 | lwall++ | Added note about parsing of pblocks in conditional statements.

[19:23] *** riffraff joined
[19:23] <riffraff> hi

[19:27] *** dduncan joined
[19:34] *** weinigLap joined
[19:45] *** jisom joined
[20:07] *** justatheory joined
[20:10] *** drupek12 joined
[20:14] *** ahmadz joined
[20:14] <svnbot6> r16551 | renormalist++ | * cperl-mode: long time bug fixed: 

[20:14] <svnbot6> r16551 | renormalist++ |   distinguish between blocks and hashes now works.

[20:28] *** fglock joined
[20:30] *** pjcj joined
[20:38] *** ssd7 joined
[20:39] <renormalist> Are there still the    tr///   and y ///   in Perl6?

[20:39] <TimToady> tr/// only

[20:39] <renormalist> ok. (simplifies a cperl-mode problem ...) 

[20:40] *** Aankhen`` joined
[20:40] <TimToady> see S05:3260

[20:41] <renormalist> ah, found it, thx

[20:42] *** larsen joined
[20:45] <qmole> what does the y stand for anyway? anything?

[20:45] <Khisanth> lazY coder? :P

[20:46] *** jisom_ joined
[20:46] <svnbot6> r16552 | renormalist++ | - cperl-mode: $.y no longer misinterpreted as start of y///   

[20:46] <moritz> translyteration ;)

[20:47] <qmole> hmm. :)

[20:49] *** SubStack joined
[20:51] <renormalist> qmole: maybe they searched for a letter and someone said: Y not. And his partner answered: Why not Y? And then a third one in the room collected the most probable char statistically, which was Y in that dialogue.

[20:52] * renormalist should start an urban legend series about unanswerde mysteries in unix history.

[21:03] <gaal> is this correct?  ($obj but SomeRole).role_meth

[21:03] <gaal> or must you do something to make the invocant a clearer term?

[21:05] *** wilx` joined
[21:05] <gaal> .oO(hast is of the devil, eh?)

[21:10] *** stef_ joined
[21:14] *** weinigLap is now known as weinigLunch

[21:14] <TimToady> gaal: I don't know how you could make it look any more like a term than the parens already do.

[21:16] <amnesiac> <TimToady> see S05:3260 ---> that sounds like the bible!

[21:17] <moritz> amnesiac: it kinda is - we just need a citebot ;)

[21:17] <amnesiac> indeed, that would be pretty helpful.

[21:18] <moritz> in the irc logs they alread link to the corresponding "verse" ;)

[21:19] <TimToady> bbl &

[21:19] <moritz> bbl = bible ;-)

[21:19] <TimToady> ;)

[21:19] <TimToady> really bbl &

[21:22] <gaal> (($obj but SomeRole) but term).role_meth ?

[21:26] <gaal> I figured out why haskell drives people to distraction. In it, otherwise = True.

[21:26] <moritz> monads drive me mad

[21:27] <Aankhen``> moritz: Hi, just in case you missed it, the line anchors on the synopses no longer start with an underscore.

[21:27] <moritz> even quantum physics is easier ;)

[21:27] <Aankhen``> So it's just, f.e. "line_499".

[21:27] <moritz> Aankhen``: thanks, fixed in  r16547

[21:27] <Aankhen``> Kewl. ^_^

[21:28] <Aankhen``> moritz++ for the logs BTW.

[21:28] <gaal> moritz: in my experience, years of suffering help somewhat.

[21:28] <moritz> thanks ;)

[21:28] <gaal> seriouslier, pick more than one tutorial and see what they ahve to say.

[21:28] <moritz> gaal: how very encouraging ;)

[21:28] <moritz> gaal: I do that already

[21:29] <gaal> this is in opposition to most of the rest of the language, which you can learn from just say YAHT

[21:29] <moritz> and it helped me with other topics, so I hope it will help me with monads as well

[21:30] <gaal> oh, the YAHT presentation of monads isn't bad! it's just that (ymmv but) in my experience no single tutorial made me "get it".

[21:30] <gaal> we probably need a cubist tutorial writer, I mean painter, to get it all on cavas.

[21:31] <moritz> I think the diversity is very helpfull

[21:31] <gaal> moritz: oh, and one very specific tip: make sure you understand typeclasses.

[21:31] * Aankhen`` wonders whether control statements could take subs.

[21:31] <moritz> Aankhen``: in haskell? sure ;-)

[21:32] <Aankhen``> Heh.

[21:32] <Aankhen``> I meant in P6, of course. ;-)

[21:32] <moritz> gaal: I decided to skimm over most of the tutorials, and then start a smal "real" project, and at the same time I read through it more carefully 

[21:34] <moritz> the \ notation for lambda is something I can't get used to unless I'll write a whole lot of them myself ;)

[21:34] <gaal> moritz: oh that's easy. just rewrite it in Perl 6 with ->  :-)

[21:35] <gaal> another thing to do is to look at Parsec code

[21:35] <gaal> there's a lot of it in Pugs, and not all of it is crazy

[21:35] <moritz> for me, a parsec is a unit for length/distance

[21:35] <gaal> most of it uses do notation, but there's occasionally an explicit >>= bind

[21:36] <gaal> Parsec is a monadic parser combinator library

[21:36] <gaal> that is, it gives you tiny parsers for basic things, and you combine those to write parsers for bigger and bigger things

[21:37] <gaal> @google parsec daan

[21:37] <lambdabot> http://www.cs.uu.nl/~daan/parsec.html

[21:37] <lambdabot> Title: Parsec

[21:37] <moritz> so it's basically bottom up?

[21:37] <gaal> YAHT introduces it nicely

[21:37] <moritz> ok, I'll read that ;)

[21:39] *** guinex joined
[21:40] *** wilx` joined
[21:40] <gaal> it's rec descent, if i'm not mistaken, but when you write ll(1) in it it's fastest.

[21:40] <renormalist> I have problems working in the pugs/ext/  subdir. I don't know how to use everything there autonomically outside the global Pugs makefile. I want do things like "perl Makefile.PL". "make test". Is this somewhere described?

[21:41] <renormalist> currently I'm interested in how the tests are called.

[21:41] <renormalist> make test doesn't do it right

[21:42] <gaal> renormalist: in a pinch, just run make smoke instead

[21:42] <gaal> this is worth fixing though

[21:43] <gaal> you mean 'make test' doesn't descend into ext/ at all?

[21:43] <moritz> renormalist: which module?

[21:43] <renormalist> I want to only test my own little module. Is there an example somewhere

[21:43] <renormalist> no in pugs yet. i struggle with basic class problems

[21:44] <renormalist> maybe make test is ok, but another thing is worng with whateever, 

[21:44] <gaal> i think this may have been intentional, actually; once upon a time we were preflighting and the tests took too long so we didn't do ext/. (or am i imagining things?)

[21:44] <gaal> renormalist: to test your own stuff, sidestep the makefile and harness issues, use prove or util/prove6

[21:45] <gaal> could be that something isn't setting search paths correctly so it doesn't look at pugs/blib6/lib

[21:45] <renormalist> ah, ok, porve6 works better

[21:46] <renormalist> gaal: indeed, some path issues, but solved

[21:46] <gaal> that would cause great slowdowns since the prelude will have to be parsed every hit, and possibly break things if someone's depending on someone else.

[21:46] <gaal> okay, great

[21:47] <renormalist> btw, how can I create makefile from makefile.PL

[21:47] <gaal> I'm glad; it's the first time I see how prove6 is actually useful for someone

[21:47] <gaal> "perl Makefile.PL"

[21:47] <renormalist> hm, no. Without everything it creates a makefile that make complains about

[21:48] <renormalist> from Pugs' make it generates other makefiles, that work

[21:48] <renormalist> that was strange to find out, although now I know

[21:48] <renormalist> you can test this with every module that has a :: in namespace.

[21:48] <renormalist> in ext/

[21:49] <gaal> then do the following: in ext/Whatever/Makefile.PL, near the top, 

[21:49] <gaal> { open my $e, ">", "/tmp/env.out" ; print "$_\t$ENV{$_}\n" for keys %ENV }

[21:49] <gaal> and run top level make

[21:50] <gaal> i bet it's PERL6LIB or something

[21:50] *** the_dormant joined
[21:50] <renormalist> mkay, I understand ,will try

[21:51] <gaal> I suddenly noticed it's late here, moose y'all tomorrow then...

[21:51] <gaal> zZ&

[21:51] <Aankhen``> Nite.

[21:53] <moritz> g'night

[21:53] <Aankhen``> gunihgt moritz

[21:56] * moritz is not gooing to sleep right now, just wishing gaal one ;)

[21:58] *** wilx` joined
[22:00] <Aankhen``> gunihgt moritz

[22:00] <Aankhen``> Sorry, stuck in infinite loop. :-(

[22:03] <moritz> Aankhen``: infinte loops are not too bad, unless they take up too many resources ;)

[22:04] <Aankhen``> Hehe.

[22:05] * moritz is in many semi-inifinte loops: eating, sleeping, hacking, learning...

[22:05] <moritz> and I don't wish them to terminate too soon ;)

[22:05] <Aankhen``> Haha.

[22:06] *** wilx` joined
[22:09] *** silug_ joined
[22:11] *** silug_ is now known as silug

[22:13] *** ruz joined
[22:16] *** isaacd_ joined
[22:18] *** ssd7 left
[22:35] *** weinigLunch joined
[22:42] *** weinigLunch joined
[22:46] *** elmex joined
[23:13] *** BooK_ joined
[23:15] <bsb> I've been thinking about anaphoric constructs recently too.  That's ones that maintain an implicit topic like $_

[23:16] <bsb> I got the name fom Paul Graham's book, he implements and "aand" that remembers the LHS for the RHS, as "it" I think

[23:16] <offby1> (and (odd? x) (+ 1 it))

[23:16] <bsb> For a moment I though .{ } could mean "call this closure with the think on the left"

[23:16] <offby1> something like that

[23:17] <bsb> think so, i'll check

[23:18] *** dmq joined
[23:19] <bsb> There's aand, aif, awhen, acond, eg. (aand (owner x) (address it) (town it))

[23:19] <bsb> http://lib.store.yahoo.net/lib/paulgraham/onlisp.lisp

[23:20] <bsb> but .{} is a has deref for $_ right?

[23:20] <bsb> maybe "-> { }", without a sig?

[23:22] <bsb> anyway, I was thinking about it in the context of rules applied to trees, like writing an xml schema in p6rules

[23:36] *** justatheory joined
[23:48] *** ssd7 joined
