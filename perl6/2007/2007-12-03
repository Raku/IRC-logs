[00:06] *** theorbtwo joined
[00:07] *** bsb joined
[00:16] *** thoughtpolice left
[00:19] *** theorb left
[00:24] *** SubStack joined
[00:29] *** Ace__ left
[00:35] *** kanru left
[01:12] *** devogon left
[01:16] *** thoughtpolice joined
[01:16] *** neuromu joined
[01:21] *** cognominal_ left
[01:27] *** Sultmhoor joined
[01:28] *** neuromu is now known as jmacclure

[01:40] *** Sultmhoor left
[01:49] *** kanru joined
[01:56] *** Lorn joined
[02:37] *** w3pt joined
[02:38] *** jmacclure left
[02:49] *** ruz joined
[02:52] *** ispy_ joined
[02:58] *** w3pt left
[03:42] *** kst left
[03:48] *** kst joined
[03:53] *** neuromu joined
[03:53] *** neuromu is now known as jmacclure

[04:02] *** alc joined
[04:09] *** awwaiid joined
[04:18] *** drbean joined
[04:25] *** jisom joined
[04:49] *** hkb_zz is now known as hkb_lab

[05:27] *** amnesiac joined
[05:34] *** jwest-- joined
[05:55] <gaal> moose

[05:59] *** Ashizawa joined
[06:04] *** ispy_ left
[06:09] *** drbean left
[06:10] *** drbean joined
[06:19] *** drbean left
[06:19] *** drbean joined
[06:27] *** Onyxyte joined
[06:33] *** thoughtpolice left
[06:42] *** devogon joined
[06:49] *** lambdabot left
[06:50] *** iblechbot joined
[06:50] *** lambdabot joined
[06:50] *** zamolxes left
[06:50] *** zamolxes joined
[06:53] *** lambdabot left
[06:53] *** lambdabot joined
[06:58] <bsb> gaal, moose

[07:00] *** zamolxes left
[07:00] *** zamolxes joined
[07:06] <bsb> &

[07:12] *** Aankhen`` joined
[07:12] *** DarkWolf84 left
[07:18] *** penk joined
[07:31] *** jisom left
[07:35] *** cnhackTNT joined
[07:36] *** lisppaste3 left
[07:42] *** iblechbot left
[07:42] <spinclad> good moosetime(), all

[07:46] *** Ashizawa left
[07:46] *** Ashizawa joined
[07:47] *** zamolxes left
[07:57] *** zamolxes joined
[08:13] *** zamolxes left
[08:13] *** zamolxes joined
[08:20] *** drrho joined
[08:20] *** zamolxes left
[08:21] *** drbean left
[08:21] *** zamolxes joined
[08:23] *** drbean joined
[08:23] *** ludan joined
[08:32] *** franck___ joined
[08:48] *** drbean left
[08:53] *** drbean joined
[09:22] *** masak joined
[09:24] *** IllvilJa joined
[09:26] *** masak left
[09:31] *** ruoso joined
[09:35] *** ludan left
[09:41] *** cognominal_ joined
[09:42] *** masak joined
[09:43] *** dalecooper joined
[09:49] *** amnesiac left
[09:50] *** ludan joined
[09:51] *** ludan left
[10:05] *** elmex joined
[10:14] *** ebassi joined
[10:15] *** alc left
[10:16] *** cnhackTNT left
[10:20] *** Lorn left
[10:22] *** mattz joined
[10:27] *** drbean_ joined
[10:28] *** drbean left
[10:38] *** drbean joined
[10:39] *** drbean_ left
[11:30] *** fglock joined
[11:40] *** fglock left
[11:41] *** fglock joined
[11:49] *** cmarcelo joined
[11:54] *** Lorn joined
[12:02] <fglock> kp6 works fine with perl5.10.0-RC2 :)

[12:19] *** Arathorn joined
[12:21] <elmex> hmm, whats up with perl6 at the moment? is there still lots of work going into PUGS? is there an efford for the final implementation ontop of parrot?

[12:29] *** Ashizawa left
[12:35] *** nipotan is now known as nipotaway

[12:42] <moritz_> elmex: currently the most effort is on kp6 and parrot

[12:43] <elmex> kp6? oh

[12:45] <elmex> ah, ok, got it, thanks for the info

[12:46] *** drbean left
[12:46] *** drbean joined
[13:04] *** Southen left
[13:04] *** pugs_svn joined
[13:05] <moritz_> nqp: say("hi");

[13:05] <exp_evalbot> OUTPUT[src/pmc_freeze.c:1254: failed assertion 'must_have_seen'␤Backtrace - Obtained 19 stack frames (max trace depth is 32).␤  Parrot_print_backtrace␤    Parrot_confess␤      (unknown)␤        (unknown)␤          (unknown)␤            (unknown)␤              Parrot_thaw␤               

[13:05] <exp_evalbot> ..PackFile_Constant_unpack_pmc␤                  PackFile_Con...

[13:05] <moritz_> woops

[13:06] *** Southen joined
[13:16] *** lichtkind joined
[13:34] *** Southen left
[13:43] *** kanru left
[13:47] <pugs_svn> r19007 | fglock++ | [kp6] - remove Data::Dump::Streamer dependency;

[13:47] <pugs_svn> r19007 | fglock++ | - moved t/kp6/internals to t/kp6-internals - Coro.pm is now really optional

[13:55] *** cognominal_ left
[13:57] <pugs_svn> r19008 | fglock++ | [kp6-kp6] updated t-bootstrap/02-grammar.t

[14:01] <moritz_> fglock: should t-bootstrap/02-grammar.t pass?

[14:02] <fglock> moritz_: not yet, I'm adding failing tests as the previous ones get fixed

[14:05] <moritz_> fglock: ok... only the first test passes for me

[14:08] *** stevan_ joined
[14:09] *** Southen joined
[14:11] <pugs_svn> r19009 | fglock++ | [kp6-kp6] one more test passes, but then "Segmentation fault"

[14:11] <fglock> moritz_: I'm now testing with both 5.8.8 and 5.10.0rc2

[14:12] <fglock> 5.10 has better error handling: "EVAL without pos change exceeded limit in regex at compiled/perl5-kp6-kp6/lib/KindaPerl6/Grammar/Term.pm line 890."

[14:15] *** masak left
[14:15] *** kanru joined
[14:19] *** drrho left
[14:22] *** cmarcelo left
[14:32] *** masak joined
[14:45] *** kanru left
[14:49] *** Lunchy joined
[14:52] *** TJCRI joined
[14:57] *** ofer joined
[14:58] *** Psyche^ joined
[15:05] *** chris2 joined
[15:14] *** Patterner left
[15:14] *** Psyche^ is now known as Patterner

[15:16] *** kanru joined
[15:30] *** iblechbot joined
[16:08] *** dalecooper left
[16:08] <pugs_svn> r19010 | fglock++ | [kp6-perl5] use an alternate hack for shortcircuiting

[16:11] *** pmurias joined
[16:13] *** cls_bsd left
[16:17] *** amnesiac joined
[16:18] *** pmurias left
[16:20] *** penk left
[16:21] *** Psyche^ joined
[16:22] *** ludan joined
[16:37] *** Entonian joined
[16:38] *** masak left
[16:39] *** Patterner left
[16:39] *** Psyche^ is now known as Patterner

[16:41] *** pmurias joined
[16:47] <pmurias> fglock: is it easier for you to have the 02-grammar in p5 than in p6?

[16:48] <fglock> pmurias: yes, because I need it to be executed by kp6-kp6, which can't compile yet

[16:49] <pmurias> it needs to be executed by kp6

[16:49] <pmurias> s/needs/can

[16:50] <pmurias> s/executed/compiled/

[16:50] <pmurias> see t-bootstrap/02-grammar.p6

[16:50] <fglock> hmm - that's right

[16:51] <pmurias> by easier i meant more convenient (i'm considering porting the changes to 02-grammar.p6)

[16:52] <fglock> trying out...

[16:52] *** cmarcelo joined
[16:55] <fglock> pmurias: yes, that works :)

[16:56] <pmurias> port the changes?

[16:56] <jwest--> is there any real use of asm anymore?

[16:57] <moritz_> jwest--: are you talking about parrot assembler?

[16:57] <moritz_> I think it's mostly replaced by PIR these days

[16:58] <jwest--> not parrot

[16:58] <jwest--> just asm in general

[16:58] <jwest--> inline asm

[16:58] <moritz_> in what?

[16:59] <moritz_> the linux kernel uses inline ASM

[16:59] <jwest--> a lot?

[16:59] <moritz_> jwest--: not really

[17:00] <fglock> pmurias: sure

[17:00] <moritz_> a far friend of mine wrote a chess program, he used inline asm for some heavily used code

[17:01] <jwest--> whycouldnt he have done that in c

[17:01] <jwest--> or lisp or something

[17:01] <pugs_svn> r19011 | fglock++ | [kp6-perl5rx] minor fix in Match.perl

[17:02] <moritz_> jwest--: because asm can be faster, in some cases

[17:02] <moritz_> the two reasons for inline assembler are 1) speed 2) low level access

[17:03] <pmurias> one probably also uses assembler for writing shellcode

[17:05] <jwest--> i dont mind seeing a lot of assembly code

[17:05] <jwest--> really

[17:05] <fglock> pmurias: nevermind updating, I'll just use 02-grammar.p6 instead

[17:05] <jwest--> just that i dont see it

[17:09] <pmurias> fglock: updated

[17:09] <pugs_svn> r19012 | pmurias++ | [kp6] brought 02-grammar.p6 up to date with the p5 version

[17:09] <pugs_svn> r19012 | pmurias++ | cosmetic change in Test

[17:09] *** dlocaus joined
[17:09] *** TJCRI left
[17:10] <pmurias> jwest--: you can always ask gcc to supply you with some/lots of with an appropriate compiler flag

[17:11] *** [particle1 is now known as [particle]

[17:11] <jwest--> heh

[17:11] <pugs_svn> r19013 | fglock++ | [kp6-kp6] added instructions to t-bootstrap/02-grammar.p6; removed Perl 5 version

[17:12] *** TJCRI joined
[17:13] * dlocaus cries

[17:13] <dlocaus> my ubuntu boot disk crashed.

[17:15] <pmurias> dlocaus: got to use windows now?

[17:15] <dlocaus> I have 2 machines.

[17:15] <dlocaus> I'm on the windows machine right now, the linux box is still searching for "harddisks and other hardware"

[17:16] <dlocaus> I see the HD light go on once in a while though.

[17:20] *** barney joined
[17:26] <pmurias> fglock: it might be good to remove the "eval '$var'" odity

[17:26] <fglock> pmurias: I don't think it works without that

[17:26] <fglock> it interpolates too early

[17:33] <pmurias> fglock: i don't think the eval can help anything

[17:33] <pmurias> it might me able to hide errors

[17:33] <pmurias> if an undeclared lexical variable is used

[17:35] <pmurias> giving a Segfault here

[17:35] <fglock> fixed :)

[17:36] <pugs_svn> r19014 | fglock++ | [kp6-perl5rx] fixed a segfault (uninitialized sub-regex)

[17:37] <moritz_> are BEGIN blocks in kp6 really executed at compile time?

[17:37] <pmurias> moritz_: yes

[17:38] <pmurias> at parse time exactly

[17:38] <moritz_> so a program 'BEGIN { say "foo" }' prints something at compile time, and does nothing at execution time?

[17:38] <moritz_> that's cool, actually ;)

[17:40] <pugs_svn> r19015 | fglock++ | [kp6-kp6] t-bootstrap/02-grammar.p6 - fixed test #4

[17:41] <gaal> BEGIN { $compilation_time = time }, yes.

[17:42] <pmurias> fglock: i think the eval can only introduce bugs by hiding the undeclared variable error

[17:43] *** devogon left
[17:44] <pmurias> s/introduce/hide/

[17:44] <fglock> pmurias: can you test without the eval? there are some old regex-recursion tests in misc/

[17:44] <fglock> not sure if they still run

[17:45] *** lichtkind left
[17:45] <pmurias> fglock: p6 tests?

[17:45] <gaal> or should I say, my $parsed_at = BEGIN { time };

[17:46] <pugs_svn> r19016 | fglock++ | [kp6] warn() returns a Perl 6 value

[17:46] <fglock> moritz_: $ perl script/kp6 -Cperl5 -e ' BEGIN { warn "foo" } ' > compiled.pl

[17:48] <moritz_> fglock: nice ;)

[17:48] <fglock> pmurias: misc/token-test-recurse2.pl and others, it's assorted Perl 6 or Perl 5

[17:53] <pugs_svn> r19017 | fglock++ | [kp6-kp6] one more test

[18:00] <pugs_svn> r19018 | pmurias++ | [kp6] the eval makes a difference here dunno why

[18:01] <pmurias> fglock: please check the file i commited

[18:01] <fglock> k

[18:01] <pmurias> eval '$var' and $var behave differently 

[18:05] <fglock> I don't know - how about asking in the p5p irc?

[18:07] <fglock> I should add more "why" docs in my code

[18:07] <moritz_> well, eval '$var' returns the content of $var, while eval $var evals it, and returns the result

[18:08] <moritz_> or did I miss something?

[18:08] <pmurias> moritz_: it's eval '$var' versus $var

[18:08] <moritz_> pmurias: uhm, ok

[18:08] <moritz_> context?

[18:08] <moritz_> maybe eval '$var' always forces scalar context

[18:11] <pmurias> eval '$var' is undef the first time

[18:11] <[particle]> pugs: say +"123.45"

[18:11] <exp_evalbot> OUTPUT[123.45␤]

[18:12] <pmurias> fglock: the #p5p channel?

[18:12] <fglock> yes

[18:12] <pmurias> i'm to tired now (long day of school)

[18:12] <pmurias> visiting a friend&

[18:12] <fglock> pmurias: np :)

[18:13] <[particle]> pugs: @a = (1,2,3); say +@a;

[18:13] <exp_evalbot> OUTPUT[*** ␤    Unexpected " ="␤    expecting "::"␤    Variable "@a" requires predeclaration or explicit package name␤    at /tmp/orYlEN22Wo line 1, column 3␤]

[18:14] <[particle]> pugs: my @a = (1,2,3); say +@a;

[18:14] <exp_evalbot> OUTPUT[3␤]

[18:17] *** buubot left
[18:17] *** franck___ left
[18:18] *** buubot joined
[18:22] *** ebassi left
[18:24] *** TJCRI left
[18:25] <pugs_svn> r19019 | fglock++ | [kp6-kp6] fixed Match lookup

[18:26] *** jjore-m left
[18:27] <pugs_svn> r19020 | fglock++ | [kp6-kp6] t-bootstrap/02-grammar.p6 - one more test

[18:33] *** hkb_lab is now known as hkb_zz

[18:35] *** ludan left
[18:39] *** TJCRI joined
[18:42] <pugs_svn> r19021 | pmurias++ | [kp6] test descriptions

[18:53] *** jjore-m joined
[18:54] <pugs_svn> r19022 | fglock++ | [kp6-kp6] fixed Class name conflicts

[18:58] *** elmex left
[19:09] *** kane_ joined
[19:11] *** marmic joined
[19:14] <pugs_svn> r19023 | fglock++ | [kp6] t-bootstrap/02-grammar.p6 added failing test

[19:25] *** dlocaus left
[19:26] *** penk joined
[19:26] *** pbuetow left
[19:26] *** justatheory joined
[19:26] *** pbuetow joined
[19:27] *** cognominal_ joined
[19:27] <fglock> &

[19:28] <[particle]> |

[19:39] *** TJCRI left
[19:45] *** fglock left
[19:49] *** jisom joined
[19:55] *** justatheory left
[19:55] *** justatheory joined
[20:03] *** kyrbe joined
[20:03] *** jjore-m left
[20:04] *** kyrbe left
[20:06] *** jjore-m joined
[20:07] *** lisppaste3 joined
[20:13] *** TJCRI joined
[20:20] *** chruck left
[20:21] *** dlocaus joined
[20:21] *** jwest-- left
[20:21] <dlocaus> my (linux) HD died, I'll be out for a while... /cries

[20:22] * dlocaus waves

[20:22] *** dlocaus left
[20:27] *** justatheory_ joined
[20:28] *** justatheory left
[20:29] *** Aankhen`` left
[20:31] *** pbuetow left
[20:32] *** pbuetow joined
[20:44] *** justatheory_ left
[20:44] *** justatheory joined
[20:45] *** jisom left
[20:48] *** thoughtpolice joined
[21:07] *** ruz left
[21:07] *** ruz joined
[21:17] *** barney left
[21:24] *** REPLeffect joined
[21:24] *** lidden left
[21:26] *** araujo left
[21:34] *** ofer left
[21:36] *** devogon joined
[22:16] *** stevan_ left
[22:22] *** Kattana joined
[22:35] *** cmarcelo left
[22:38] *** pmurias left
[23:00] *** Lorn left
[23:12] *** TJCRI left
[23:13] *** mncharity joined
[23:13] <mncharity> pugs: my B::x = 3;

[23:14] <exp_evalbot> OUTPUT[*** ␤    Unexpected "="␤    expecting ":" or "("␤    at /tmp/UFCQiZVg9H line 1, column 9␤]

[23:15] <mncharity> I couldn't remember, and was randomly curious, whether one can lexically scope variable names in non-local packages.

[23:16] <mncharity> pugs: package A {} my A::x = 3;

[23:16] <exp_evalbot> OUTPUT[*** ␤    Unexpected "="␤    expecting ":" or "("␤    at /tmp/8TvG9zWneX line 1, column 22␤]

[23:16] <mncharity> pugs: package A {}; my A::x = 3;

[23:16] <exp_evalbot> OUTPUT[*** ␤    Unexpected "="␤    expecting ":" or "("␤    at /tmp/yXn4aIuKUc line 1, column 23␤]

[23:17] <moritz_> mncharity: it's "module" in p6, not "package" (iirc)

[23:18] <moritz_> pugs: module a {}; my $A::x=3; say $A::x;

[23:18] <exp_evalbot> OUTPUT[*** ␤    Unexpected "::x"␤    expecting word character, "?", "!", trait, "=", infix assignment, term postfix or operator␤    at /tmp/YTMLdVNNrD line 1, column 19␤]

[23:18] <moritz_> pugs: module a { my $x}; say $a::x;

[23:18] <exp_evalbot> OUTPUT[␤]

[23:18] <moritz_> pugs: module a { my $x = 3 }; say $a::x;

[23:18] <exp_evalbot> OUTPUT[␤]

[23:19] <TimToady> pugs: module a { our $x = 3 }; say $a::x

[23:19] <exp_evalbot> OUTPUT[␤]

[23:19] <mncharity> I was thinking about namespaces, and wondered whether pugs could have an exposed api, where variable lookup is handled by a macro P6MOP::lookup(name) -> <whatever it is names are bound to>.  Then users could lexically override name resolution.

[23:20] <moritz_> that would allow all sort of hacks ;)

[23:20] <mncharity> indeed :D

[23:21] <TimToady> see S10:84

[23:21] <mncharity> looking...

[23:22] <mncharity> is there a copy of S10 somewhere with line numbers?  :)

[23:23] *** Notrix joined
[23:24] <moritz_> mncharity: take a look at irc.pugscode.org

[23:24] <moritz_> mncharity: there the S10:84 directly links to the correct line ;)

[23:25] <moritz_> thanks to agentzh++ who implemented the line anchors in the HTML files

[23:26] <mncharity> ooo, shiny

[23:31] *** iblechbot left
[23:32] <[particle]> pugs: say 7 +& +^1;

[23:32] <exp_evalbot> OUTPUT[6␤]

[23:33] *** chris2 left
[23:35] <moritz_> that syntax looks plain scary

[23:35] <moritz_> probably because the operation is scary as well ;)

[23:35] <TimToady> we're trying to punish bit twiddlers

[23:36] <moritz_> whip the bit twiddlers!

[23:36] <moritz_> but I'm sure it'll allow great obfus

[23:36] <TimToady> "I feel bit-slapped!"

[23:37] <mncharity> what do we have for a p6 wiki?  http://www.perlfoundation.org/perl6/index.cgi ?

[23:37] <lambdabot> Title: Perl 6 / Perl 6

[23:38] <mncharity> http://perl.net.au/wiki/Perl_6  http://perl6.cz/wiki/Perl_6_and_Parrot_links

[23:38] <lambdabot> Title: Perl 6 - PerlNet

[23:40] <TimToady> there's also http://dev.pugscode.org/wiki/

[23:40] <lambdabot> Title: Pugs - Trac

[23:42] <TimToady> and http://www.perlfoundation.org/parrot/index.cgi

[23:42] <lambdabot> Title: Parrot / Parrot

[23:46] <TimToady> pugs: say 7 +& -2

[23:46] <exp_evalbot> OUTPUT[6␤]

[23:46] <[particle]> lovely

[23:47] <TimToady> I suppose we could mention that Int assumes 2's complement arithmetic.

[23:51] <[particle]> good idea.

[23:56] <mncharity> I dropped the links as http://perl.net.au/wiki/Perl_6#Wikis  (perl.net.au, unlike perfoundation.org, didn't require me to remember or create an account)

[23:56] <lambdabot> Title: Perl 6 - PerlNet

[23:58] <mncharity> the one liner seems to be "perl.net.au is active, perlfoundation is official, pugscode is for pugs, perlfoundation.org/parrot/ is for parrot, and perl6.cz has some nice links".

