[00:06] *** theorbtwo joined
[00:18] *** theorb left
[00:19] *** zakame joined
[00:28] *** ruoso left
[00:45] *** thoughtpolice left
[00:54] *** polettix left
[01:03] *** nipotaway is now known as nipotan

[01:07] *** drupek12 left
[01:08] *** dvorak joined
[01:12] *** SinDoc joined
[01:20] *** drupek12 joined
[01:34] *** stevan_ joined
[01:34] *** stevan_ left
[01:34] *** stevan_ joined
[01:39] *** devogon_ left
[01:42] *** AzureStone joined
[01:42] *** HiTech69 left
[01:52] *** stevan_ left
[01:56] *** lyokato joined
[02:01] *** lidden joined
[02:02] *** lidden left
[02:02] *** pbuetow left
[02:02] *** lidden joined
[02:05] *** pbuetow joined
[02:08] *** justatheory left
[02:15] *** colfax joined
[02:17] *** TheInformers joined
[02:21] *** colfax left
[02:27] *** stevan_ joined
[02:50] *** aindilis joined
[02:51] *** Limbic_Region left
[02:54] *** jisom joined
[03:04] *** jisom_ joined
[03:08] *** jisom_ left
[03:21] *** lichtkind left
[03:21] *** jisom left
[03:25] *** weinig|food is now known as weinig

[04:19] *** stevan_ left
[04:24] *** penk left
[04:28] *** lisppaste3 left
[04:36] *** lisppaste3 joined
[04:37] *** luqui joined
[04:48] *** amnesiac joined
[04:51] *** diakopter left
[04:54] *** sunnavy left
[04:59] *** sunnavy joined
[05:17] *** TheInformers left
[05:31] *** bsb joined
[05:36] *** stevan_ joined
[05:40] *** zakame left
[06:01] *** diakopter joined
[06:09] *** stevan_ left
[06:12] *** SinDoc left
[06:14] *** stevan_ joined
[06:16] *** SinDoc joined
[06:29] *** penk joined
[06:36] *** devogon joined
[07:08] *** luqui left
[07:18] *** diakopter left
[07:34] *** kanru left
[07:39] *** SinDoc left
[07:47] *** liffey_ left
[07:49] *** Aankhen`` joined
[07:49] *** drupek12 left
[08:00] *** xinming joined
[08:01] *** xinming_ left
[08:10] *** iblechbot joined
[08:14] <moritz_> good morning

[08:14] <moritz_> does anybody else has problems connecting to irc.perl.org?

[08:15] <moritz_> connection times out

[08:17] <Aankhen``> Not here.

[08:21] <moritz_> dammit

[08:21] *** franck___ joined
[08:32] *** bloonix left
[08:36] *** bloonix joined
[08:41] *** DarkWolf84 joined
[08:42] *** zakame joined
[08:51] *** kanru joined
[08:58] *** AzureStone left
[09:27] *** Torment joined
[09:38] *** masak joined
[09:44] *** Jedai left
[09:46] *** tooo joined
[09:47] *** IllvilJa left
[09:48] *** amnesiac left
[09:57] *** cathyal joined
[10:10] *** penk left
[10:16] *** IllvilJa joined
[10:16] *** sstanvir joined
[10:16] <sstanvir> what is the regular expression for a range of numbers?

[10:17] <sstanvir> for example, 21-58 , the regular expression would be [21-58] ?

[10:21] <sstanvir> will anybody please answer..?

[10:24] *** chris2 joined
[10:24] *** fglock joined
[10:27] *** bbkr_ left
[10:27] <Juerd> sstanvir: Regular expressions don't work like that. A regex has no concept of "number", only of characters.

[10:27] *** bbkr_ joined
[10:28] <fglock> building a regular expression that recognizes all the possible strings in a range of numbers is possible, but it's complicated

[10:28] <Juerd> sstanvir: To match 21..58, you'd need to come up with something that matches all possible combinations of digits: /^(?: 2[1-9] | [34][0-9] | 5[0-8] )\z/x

[10:29] <Juerd> sstanvir: Clearly this is something you should not be using a regex for.

[10:38] <sstanvir> Juerd, but I hv to hv some sort of regular expression 

[10:38] <sstanvir> based on user's input I hv to prepare the expression

[10:38] <sstanvir> I can make if I know the start and end 

[10:39] <sstanvir> like for 21-58:   I can prepare 2[1-9]|(3|4)[0-9]|5[0-8]

[10:39] <sstanvir> but when I dont know the start and end.. is there any way ?

[10:39] <sstanvir> [$start - $end] is not the right RE for range?

[10:41] *** zakame left
[10:45] *** sstanvir left
[10:46] *** sstanvir joined
[10:47] <sstanvir> ....

[10:49] <spinclad> you are right, that RE has nothing to do with a range of int values

[10:56] *** fglock left
[10:56] *** xinming_ joined
[10:57] *** xinming left
[11:00] <spinclad> how about something like:  / $n := (\d+) { fail unless +$n ~~ ($start .. $end) } /

[11:01] <spinclad> sstanvir: ^

[11:02] <sstanvir> :)

[11:02] <sstanvir> yes, spinclad

[11:02] <sstanvir> I was trying to prepare an algorithm

[11:02] <sstanvir> but I didnt understand ur algorithm

[11:03] <spinclad> match a number, bind to $n; reject it if as a number it's out of range.

[11:04] <sstanvir> actually I dont know the range..

[11:04] <sstanvir> all I need is to prepare the RE based on user input

[11:05] <sstanvir> if user inputs min:100 max: 50005 the regular expression has to be something that matches 100-50005

[11:05] <spinclad> oh, you need to match a range but you don't know its bounds?  that could be harder, indeed.

[11:05] <sstanvir> hmm

[11:05] <sstanvir> yes, whatever user inputs the Regular expression will be generated based on that

[11:07] <spinclad> ok, so by the time you use the RE, you know the bounds.  all set then, i think.

[11:10] <sstanvir> its like if user inputs 21, 58 the  RE would be 2[1-9]|34[0-9]|5[0-8]

[11:11] <sstanvir> but if user inputs 71, 93

[11:11] *** zakame joined
[11:11] <spinclad> well, if you don't like my way, have fun

[11:12] <sstanvir> it has to be 7[1-9]|8[0-9]|9[0-3]

[11:12] <sstanvir> what is ur way spinclad, I didnt get u

[11:12] <spinclad> $n := (\d+) { fail unless +$n ~~ ($start .. $end) } /

[11:12] <sstanvir> but its not for checking.. I hv to generate the RE and save into DB

[11:13] <spinclad> this is an RE that matches a range.  save it to the DB with values for $start and $end.

[11:14] <spinclad> or else you have more constraints than you've said as yet.

[11:15] *** penk joined
[11:15] <spinclad> you are talking about Perl 6 RE's, yes?

[11:15] <sstanvir> actually I am trying in php

[11:16] <spinclad> oh. no idea.  ask in #php maybe.

[11:16] <sstanvir> sorry for not mentioning earlier

[11:19] <sstanvir> thnx anyway, spinclad

[11:20] *** sstanvir left
[11:23] *** fglock joined
[11:25] *** fglock left
[11:29] *** lyokato left
[11:30] *** fglock joined
[11:31] *** ebassi joined
[12:22] *** xdg joined
[12:27] *** chris2 left
[12:30] *** Aankh|Clone joined
[12:31] *** Southen left
[12:31] *** zakame left
[12:31] *** xinming_ left
[12:31] *** masak left
[12:31] *** revdiablo left
[12:31] *** buubot left
[12:31] *** idiotmax left
[12:31] *** zamolxes left
[12:31] *** QtPlatypus left
[12:31] *** rafl left
[12:31] *** thepler left
[12:31] *** qmole left
[12:31] *** shmem left
[12:31] *** tewk left
[12:31] *** diotalevi left
[12:31] *** yahooooo left
[12:31] *** rgs left
[12:31] *** Eidolos left
[12:31] *** fglock left
[12:31] *** Torment left
[12:31] *** kanru left
[12:31] *** bloonix left
[12:31] *** iblechbot left
[12:31] *** aindilis left
[12:31] *** pbuetow left
[12:31] *** weinig left
[12:31] *** marmic left
[12:31] *** avar left
[12:31] *** agentzh left
[12:31] *** ruz left
[12:31] *** moritz_ left
[12:31] *** Casan left
[12:31] *** test left
[12:31] *** clkao left
[12:31] *** silug left
[12:31] *** allbery_b left
[12:31] *** cj left
[12:31] *** jjore-w left
[12:31] *** bbkr_ left
[12:31] *** ofer left
[12:31] *** Patterner left
[12:31] *** dalek left
[12:31] *** AzureBOT left
[12:31] *** spinclad left
[12:31] *** Khisanth left
[12:31] *** Teratogen left
[12:31] *** pnu left
[12:31] *** integral left
[12:31] *** w3 left
[12:31] *** funktio left
[12:31] *** DarkWolf84 left
[12:31] *** jrockway left
[12:31] *** veek left
[12:31] *** rhr left
[12:31] *** Grrrr left
[12:31] *** takanori_ left
[12:31] *** mncharity left
[12:31] *** awwaiid left
[12:31] *** Gothmog_ left
[12:31] *** julchen left
[12:31] *** pravus left
[12:31] *** gugod left
[12:31] *** felipe left
[12:31] *** pjcj left
[12:31] *** zakame joined
[12:31] *** xinming_ joined
[12:31] *** masak joined
[12:31] *** revdiablo joined
[12:31] *** buubot joined
[12:31] *** idiotmax joined
[12:31] *** zamolxes joined
[12:31] *** QtPlatypus joined
[12:31] *** rafl joined
[12:31] *** thepler joined
[12:31] *** qmole joined
[12:31] *** shmem joined
[12:31] *** tewk joined
[12:31] *** rgs joined
[12:31] *** Eidolos joined
[12:31] *** diotalevi joined
[12:31] *** yahooooo joined
[12:37] *** ft left
[12:37] *** ft joined
[12:38] *** cggoebel joined
[12:38] *** jrockway joined
[12:38] *** veek joined
[12:38] *** pjcj joined
[12:38] *** felipe joined
[12:38] *** awwaiid joined
[12:38] *** funktio joined
[12:38] *** mncharity joined
[12:38] *** Grrrr joined
[12:38] *** rhr joined
[12:38] *** takanori_ joined
[12:38] *** pravus joined
[12:38] *** gugod joined
[12:38] *** julchen joined
[12:38] *** Gothmog_ joined
[12:38] *** cognominal__ joined
[12:41] *** Southen joined
[12:41] *** franck___ left
[12:41] *** devogon_ joined
[12:42] *** bbkr_ joined
[12:42] *** ofer joined
[12:42] *** Patterner joined
[12:42] *** dalek joined
[12:42] *** AzureBOT joined
[12:42] *** w3 joined
[12:42] *** pnu joined
[12:42] *** Teratogen joined
[12:42] *** Khisanth joined
[12:42] *** integral joined
[12:42] *** spinclad joined
[12:42] *** franck___ joined
[12:42] *** tooo_ joined
[12:42] *** Torment joined
[12:42] *** kanru joined
[12:42] *** bloonix joined
[12:42] *** iblechbot joined
[12:42] *** aindilis joined
[12:42] *** pbuetow joined
[12:42] *** weinig joined
[12:42] *** marmic joined
[12:42] *** avar joined
[12:42] *** agentzh joined
[12:42] *** jjore-w joined
[12:42] *** allbery_b joined
[12:42] *** cj joined
[12:42] *** ruz joined
[12:42] *** silug joined
[12:42] *** clkao joined
[12:42] *** Casan joined
[12:42] *** moritz_ joined
[12:42] *** test joined
[12:42] *** iblechbot left
[12:43] *** drupek12 joined
[12:43] *** exp_evalbot joined
[12:44] *** jjore-m left
[12:44] *** sunnavy left
[12:44] *** jjore-m joined
[12:44] <moritz_> kp6: say "back again"

[12:44] <exp_evalbot> r18880: OUTPUT[back again‚ê§]

[12:44] *** kst left
[12:45] *** xdg left
[12:45] *** ajs__ joined
[12:45] *** jMCg left
[12:45] *** IllvilJa left
[12:45] *** devogon left
[12:45] *** cognominal_ left
[12:45] *** penk left
[12:46] *** tooo left
[12:46] *** obra left
[12:46] *** ajs_ left
[12:47] *** ggoebel left
[12:47] *** Aankhen`` left
[12:48] *** penk joined
[12:48] *** xdg joined
[12:48] *** kst joined
[12:49] *** sunnavy joined
[12:50] *** obra joined
[12:50] *** jMCg joined
[12:50] *** IllvilJa joined
[12:51] *** lisppaste3 left
[12:56] *** fglock joined
[13:01] *** cmarcelo joined
[13:12] *** xdg left
[13:13] *** zakame left
[13:19] *** cathyal left
[13:25] *** gene9 joined
[13:30] *** iblechbot joined
[13:31] *** fglock left
[13:32] *** HiTech69 joined
[13:37] *** penk left
[13:40] *** DarkWolf84 joined
[13:48] *** devogon_ left
[13:48] *** devogon joined
[13:48] *** gene9 left
[13:58] *** gene9 joined
[14:01] *** ruoso joined
[14:19] *** penk joined
[14:25] *** polettix joined
[14:28] *** fglock joined
[14:45] *** nipotan is now known as nipotaway

[14:51] *** gene9 left
[14:54] *** Aankh|Clone is now known as Aankhen``

[15:03] *** andara joined
[15:04] *** andara left
[15:06] *** rindolf joined
[15:06] *** TJCRI joined
[15:07] *** Psyche^ joined
[15:14] *** drupek12 left
[15:17] *** renormalist joined
[15:20] *** Patterner left
[15:20] *** Psyche^ is now known as Patterner

[15:30] <fglock> I and ruoso were talking about making MiniPerl6 a "stage1" compiler, and KindaPerl6 would be "stage2"

[15:31] <ruoso> this basically mens that MP6 would then generate code targetting KP6 runtime

[15:31] *** drupek12 joined
[15:31] <fglock> this makes it possible to rewrite the MOP in MiniPerl6

[15:32] <ruoso> and the kp6 bootstrap would be easier also

[15:32] <ruoso> as there would be no runtime divergence

[15:32] <ruoso> as there is today

[15:32] <fglock> hmm - Haskell has a stage3 compiler

[15:33] <fglock> ah, gcc does too

[15:39] *** gongyiliao joined
[15:55] *** Lorn joined
[15:56] <fglock> mp6-stage1 compiles MOP.pm,

[15:56] <fglock> mp6-stage2 uses MOP.pm,

[15:56] <fglock> kp6 is stage3

[15:58] *** tooo_ left
[16:01] *** dlocaus joined
[16:01] <dlocaus> 'allo!

[16:01] <fglock> dlocaus: hi!

[16:02] <dlocaus> fglock: I'm confused about a practice of yours.

[16:03] <dlocaus> Sometimes you use "$::meta_(something)" and other times you will do "my $meta_something"

[16:03] * dlocaus scratches his head

[16:04] *** rindolf left
[16:05] <dlocaus> fglock: here is an example of a global meta container

[16:05] <dlocaus> http://dev.pugscode.org/browser/v6/v6-KindaPerl6/src/KindaPerl6/Runtime/Perl5/Container.pm#L162

[16:05] <dlocaus> here is an example of a lexical container

[16:05] <dlocaus> http://dev.pugscode.org/browser/v6/v6-KindaPerl6/src/KindaPerl6/Runtime/Perl5/Container.pm#L206

[16:05] <dlocaus> are the meta_ values supposed to be lexical or global?

[16:06] <fglock> dlocaus: looking

[16:08] <fglock> dlocaus: I'd rather use ::DISPATCH( $::Container, 'HOW' ) everywhere, instead of $mets_XXX

[16:08] <fglock> meta_XXX

[16:09] <dlocaus> ah, ok.

[16:12] *** Lorn left
[16:12] *** Lorn joined
[16:15] *** pmurias joined
[16:20] *** pmurias_ joined
[16:20] *** pmurias left
[16:21] <pmurias_> i guess calling MiniPerl6 stage1 is sort of fine (as stage1 is the previous version)

[16:21] *** renormalist left
[16:21] <pmurias_> mp6-stage-2 would be a diffrent code base?

[16:25] <ruoso> pmurias_, calling mp6 stage 1 have a different meaning from what it is today

[16:25] <fglock> pmurias_: mp6-stage2 would use the MOP calling conventions

[16:25] <ruoso> as mp6 currently doesn't target kp6 runtime

[16:25] <fglock> but it's the same code

[16:25] <ruoso> mp6 stage 1 would generate mp6 with kp6 runtime

[16:25] <fglock> same source code

[16:25] <fglock> ruoso: that's stage 2,

[16:26] <ruoso> yep... yep...

[16:26] <fglock> stage 1 is low level

[16:26] <ruoso> sorry

[16:26] <moritz_> can kp6 compile mp6?

[16:26] <fglock> yes, it should

[16:26] <moritz_> .oO( or is that a forbidden question? ;-)

[16:26] *** cognominal__ left
[16:26] <ruoso> in theory, we could make it completely in kp6

[16:26] *** Psyche^ joined
[16:26] <ruoso> the problem is that kp6 is too complex to bootstrap

[16:26] <fglock> which means, kp6 could do stage 1 

[16:27] <ruoso> and one of the reasons kp6 is so complex

[16:27] <ruoso> is because mp6 is not a "stage 1" compiler

[16:27] <ruoso> not today, I mean

[16:27] <fglock> ruoso: how about making kp6-stage1?

[16:28] <ruoso> we need kp6-kp6 working for that

[16:28] *** cognominal_ joined
[16:28] <ruoso> which is a complicated task

[16:28] <fglock> we just need a special emitter

[16:28] <ruoso> ah... that.. yes

[16:28] <ruoso> in fact

[16:28] <fglock> :)

[16:28] <ruoso> but without bootstrapping kp6, it won't be much usefull

[16:29] <moritz_> what's the problem with bootstrapping kp6? BEGIN blocks?

[16:29] <pmurias_> moritz_: parsing it

[16:29] <ruoso> moritz_, incompatibilities between mp6 runtime and kp6 runtime

[16:29] *** pmurias_ is now known as pmurias

[16:29] <ruoso> kp6 counts on mp6 runtime today

[16:29] <fglock> ruoso: it's as useful as mp6-stage1, but possibly easier

[16:29] <ruoso> it needs to be ported to be pure-kp6

[16:30] <ruoso> fglock, mp6 already is the compiler for kp6

[16:30] <ruoso> mp6-stage1 would just provide a different runtime to mp6-as-it-is-today

[16:30] <fglock> yes, but kp6-stage1 would replace mp6

[16:30] <fglock> than we can implement kp6-stage2

[16:30] <ruoso> fglock, only when you bootstrap it 

[16:31] <fglock> kp6-stage2 would compile kp6 to stage3

[16:31] <ruoso> it won't replace it before that

[16:31] *** amnesiac joined
[16:31] <fglock> using the "kp6" runtime

[16:31] <fglock> it works the same, whether you use mp6 or kp6

[16:31] <ruoso> hmmm

[16:31] *** cognominal_ left
[16:31] <fglock> but using kp6 is "cleaner"

[16:32] <ruoso> putting it clearly... stage1 generates a "libkp6" which is the runtime used by "stage2"

[16:32] <ruoso> used by the code generated by stage2 I mean

[16:33] <fglock> yes, stage1 compiles the MOP

[16:33] <fglock> (stage1 doesn't use or need the MOP)

[16:33] <ruoso> stage2 compiles itself using the MOP

[16:33] <fglock> yes

[16:33] <ruoso> to get to stage3, which is the final compiler

[16:34] <ruoso> so, the compiler from stage1 needs to be bootstrapped

[16:34] <ruoso> in stage2

[16:34] <ruoso> to result as the stage3 compiler

[16:35] <fglock> hmm - so in the end we really need mp6, because kp6-in-kp6 is not portable? but we can still cross-compile

[16:35] <fglock> so it's not a problem

[16:36] <pmurias> is mp6 portable?

[16:36] <ruoso> I was just saying that bootstrapping mp6 is easier than bootstrapping kp6

[16:36] <fglock> it's reasonably portable

[16:37] <pmurias> ruoso: you mean changing mp6 to emit kp6-calling-conventions code

[16:37] <ruoso> and if we bootstrap from mp6, it will be easier to later bootstrapping kp6

[16:37] <pmurias> ?

[16:37] <ruoso> pmurias, that is the stage2 compiler

[16:37] <pmurias> i think mp6 is bootstraped

[16:38] <ruoso> pmurias, it is, but it is not a cross compiler 

[16:38] <ruoso> stage2 is a cross-compiler

[16:38] <ruoso> it runs using the mp6 runtime, but generates kp6 runtime

[16:39] <fglock> ok, I think keeping mp6 is saner

[16:39] <fglock> because kp6 won't recompile easily with a stage1/2 compiler

[16:39] <ruoso> yep... that's the point...

[16:39] <ruoso> on the other hand...

[16:39] <pmurias> fglock: keeping mp6 in the long term or untill a working bootstrap?

[16:39] <ruoso> it will be very much easier to bootstrap kp6 once we have a stage1/2 mp6

[16:40] <fglock> pmurias: keeping it for future bootstraps

[16:40] <ruoso> pmurias, after kp6 bootstrap, we can implement a cross-compiler in kp6

[16:41] <ruoso> but it would be hard to do it before the bootstrap

[16:41] *** julchen is now known as cerridwen

[16:41] <fglock> that's a plan :)

[16:42] <pmurias> kp6 is a cross-compiler now

[16:42] <ruoso> pmurias, not until it is bootstrapped

[16:42] <ruoso> it can't compile itself

[16:42] <fglock> all we need is to port kp6-emit-perl5 back to mp6

[16:42] *** Patterner left
[16:42] *** Psyche^ is now known as Patterner

[16:42] <ruoso> fglock, not exactly

[16:43] <ruoso> the code mp6-stage1 should emit is different

[16:43] <ruoso> because it's kp6-lowlevel

[16:43] <ruoso> it just declares the data structures that the stage2 compiler will use

[16:43] <ruoso> but it can't use it yet

[16:43] <ruoso> mp6-stage1 can't use $::DISPATCH, as it is the one who will define it

[16:44] <ruoso> it will use low-level runtime to declare what "$::DISPATCH" is

[16:44] <fglock> ruoso: mp6-stage1 is the current mp6

[16:44] <ruoso> fglock, kinda

[16:45] <ruoso> the MOP is missing

[16:45] <ruoso> I mean

[16:45] <ruoso> the MOP source, so it can be a stage1 in a practical term

[16:45] <fglock> yes, but that's a library problem - the compiler is ok

[16:45] * dlocaus wonders why he always has 3 computers and only 1 motherboard manual.

[16:48] <fglock> you can develop and refine the MOP separately

[16:52] *** cognominal_ joined
[16:54] <ruoso> but you need to recompile the entire compiler (all 3 stages) everytime you do it

[16:54] * dlocaus argh, I'll never buy a single processor MB again.

[16:55] <dlocaus> 3.2Ghz, and these tests take forever.

[16:55] <fglock> ruoso: from stage 2 and up

[16:57] <pmurias> from stage 3 and up

[16:57] *** kyrbe joined
[16:57] *** gongyiliao left
[16:58] <fglock> Namespace.pm still doesn't work :(

[17:02] <fglock> coffee &

[17:04] *** kyrbe left
[17:09] *** Lorn left
[17:09] *** Lorn joined
[17:18] *** vel joined
[17:21] <pmurias> won't mp6-stage2 be horribly slow?

[17:24] *** jjore-m left
[17:27] <dlocaus> Is there a particular reason that we use perltidy to produce output to STDOUT?

[17:27] <dlocaus> forcing standard out in util/perltidyrc "-st" seams makes things awkward.  Does anyone mind if I fix this?

[17:27] <dlocaus> moritz_: ?

[17:28] <pmurias> dlocaus: where should perltidy output to then?

[17:29] <fglock> re slow, maybe - but perl5rx should fix that until we have an optimizer

[17:29] <pmurias> so we would also have to backport perl5rx?

[17:29] <dlocaus> pmurias: in many places the xecution of perltidy is such

[17:29] <dlocaus> perl ... | perltidy -pro=util/perltidyrc  > $@

[17:29] <dlocaus> when it could be

[17:29] <dlocaus> perl ... | perltidy -pro=util/perltidyrc -o $@

[17:30] <dlocaus> pmurias: by forcing "-st" it screws up internal perl "use Perl::Tidy" executions by causing havoc with the I/O

[17:30] *** Jamtech joined
[17:30] <fglock> pmurias: hmm

[17:31] <pmurias> dlocaus: i think you could change it

[17:31] <dlocaus> pmurias: ok

[17:32] <fglock> pmurias: we have the option to keep the grammar compilation in stage1, which is more optimized

[17:32] <fglock> it almost makes sense

[17:33] <dlocaus> all: I don't mean to seam all needy with these questions.  It is just that in the "programming culture" I grew up in, messing around with another programmers code (uninvited) was just not done, unless it had to be fixed "now!".  And if you messed around just to make "style" changes... omg.

[17:33] <fglock> dlocaus: the reason to use Perl::Tidy was to keep diffs smaller,

[17:34] <fglock> but it actually messes up with some regexes

[17:34] <fglock> so it was disabled for kp6-kp6

[17:34] *** drupek12 left
[17:34] <dlocaus> ok.. I'll see if I can find some place to note that.

[17:35] <fglock> please do what you are pleased to do :)

[17:35] <dlocaus>  :)

[17:36] <pmurias> fglock: re "style" why do you use }\nelse {?

[17:37] <fglock> pmurias: how do you like it?

[17:37] <pmurias> i can cope ;)

[17:37] <fglock> I think I read it in a style guide smewhere

[17:37] <fglock> somewhere

[17:40] <fglock> how do I fix "A checksum mismatch occurred: ... Perl-6.0.0-STD.pm" (in my feather svk repo)

[17:40] <pmurias> svk up?

[17:41] <fglock> "svk up" gives no errors, but "svk up -s" does

[17:48] *** TJCRI left
[17:49] <pmurias> fglock: did you fix it?

[17:49] <fglock> no

[17:53] <pmurias> fglock: i don't think i can help with that :(

[17:55] <fglock> pmurias: np, that's not my main devel machine

[17:57] *** TJCRI joined
[17:57] <Tene> "}\nelse {" is recommended in PBP as I recall.

[17:58] <PerlJam> cuddled elsed are frowned upon, yes.

[17:59] *** ebassi left
[17:59] * pmurias is suprised

[18:00] *** jjore-m joined
[18:02] <Juerd> Frowned upon even.

[18:02] *** masak left
[18:03] <Juerd> Interesting

[18:03] *** lichtkind joined
[18:06] *** barney joined
[18:09] *** Lorn left
[18:11] *** franck___ left
[18:32] *** weinig_ joined
[18:37] *** HiTech69 left
[18:38] *** justatheory joined
[18:46] *** weinig left
[18:48] *** jjore-m left
[18:59] *** fglock left
[19:10] *** dlocaus left
[19:43] *** jisom joined
[19:43] *** polettix left
[19:50] *** rindolf joined
[19:59] *** weinig_ left
[19:59] *** weinig joined
[20:05] *** lisppaste3 joined
[20:16] *** bw_hb joined
[20:16] *** TJCRI left
[20:18] *** bw_hb left
[20:18] *** bw_hb joined
[20:18] *** bw_hb left
[20:19] *** wilx joined
[20:20] *** bw_hb joined
[20:24] *** rindolf left
[20:30] *** TJCRI joined
[20:54] *** buubot left
[20:54] *** buubot joined
[21:04] *** araujo left
[21:06] *** jisom left
[21:07] *** __Ace__ joined
[21:07] *** __Ace__ left
[21:08] *** __Ace__ joined
[21:16] *** Jamtech left
[21:21] *** aindilis left
[21:22] *** buubot left
[21:22] *** buubot joined
[21:26] *** Aankhen`` left
[21:32] *** bw_hb left
[21:38] *** pen1 joined
[21:39] *** penk left
[21:40] *** barney left
[21:47] *** pmurias left
[22:03] *** TJCRI left
[22:16] *** drupek12 joined
[22:16] *** weinig_ joined
[22:24] *** weinig_ left
[22:24] *** weinig_ joined
[22:24] *** weinig_ left
[22:29] *** weinig left
[22:34] *** Limbic_Region joined
[22:53] *** thepler left
[22:57] *** IllvilJa left
[23:02] *** __Ace__ left
[23:02] *** polettix joined
[23:05] *** iblechbot left
[23:12] *** pbuetow left
[23:15] *** araujo joined
[23:15] *** pbuetow joined
[23:34] *** weinig joined
[23:34] *** weinig left
[23:34] *** weinig joined
[23:42] *** polettix left
