[00:13] <svnbot6> r15178 | putter++ | yet_another_regex_engine/OPP.pl - created.  Yet another operator precedence parser.  A first, rough, non-running draft.  See notes at top of file.

[00:14] *** Psyche^ joined
[00:15] <putter> end of day for me

[00:15] <TimToady> night

[00:15] <moritz> the package is called libghc6-network-dev (probably)

[00:15] <moritz> night ;)

[00:21] *** REPLeffect_ joined
[00:21] <putter> tene: re current state of p6 rules in pugs, looking at http://m19s28.vlinux.de/cgi-bin/pugs-smokeserv.pl? (specifically the recent liniux repository snapshot second ">>", under t/regex/ , where both dark green and red means failed), I'd say "a great deal not working".

[00:21] <lambdabot> Title: Pugs Smoke Reports

[00:22] <putter> and "but some is".

[00:22] <putter> good night all &

[00:27] *** Schwern joined
[00:30] *** Psyche^ is now known as Patterner

[00:32] <svnbot6> r15179 | moritz++ | mentioned build depenency on haskell-network aka libghc-network-dev in

[00:32] <svnbot6> r15179 | moritz++ | PROBLEMS file

[00:40] *** neonse left
[00:43] *** nekokak joined
[00:50] *** charsbar_ joined
[01:07] *** justatheory joined
[01:09] <PartclCoke> audreyt: hello.

[01:09] <audreyt> PartclCoke: greetings.

[01:11] * PartclCoke wonders where he can get a lambdabot for #parrot.

[01:11] <allbery_b>  @ask dons for it?

[01:12] * PartclCoke wonders if he's still a meta-committer in new pugs land.

[01:12] <audreyt> PartclCoke: sure, you still are. http://invite.pugscode.org/

[01:12] <lambdabot> Title: Login

[01:13] * PartclCoke says, "Freaky."

[01:13] <PartclCoke> allbery_b: looks like "@ask" means something special?

[01:14] <allbery_b> it's a lambdabot command

[01:14] <allbery_b> @help ask

[01:14] <lambdabot> ask <nick> <message>. When <nick> shows activity, ask them <message>.

[01:14] <allbery_b> dons is the keeper of lambdabot

[01:15] <PartclCoke> @ask dons "Any chance we could get a lambdabot on #parrot on irc.perl.org? thanks -Coke

[01:15] <lambdabot> Consider it noted.

[01:15] <PartclCoke> @ask partclCoke huh?

[01:15] <lambdabot> Consider it noted.

[01:15] <PartclCoke> what?

[01:15] <allbery_b> you could build your own but the source is in an odd state currently

[01:15] <partclCoke> what?

[01:15] <lambdabot> partclCoke: You have 1 new message. '/msg lambdabot @messages' to read it.

[01:15] <allbery_b> yeh, it's cae-dependent

[01:17] <allbery_b> so it told you it recorded the query, next tme dons pops up on IRC he'll get informed like you did

[01:17] <allbery_b> he's in .au so the time shifting capability is rather useful :)

[01:18] <partclCoke> mmm. takes care of one of the worst limitations of irc. =-)

[01:23] <audreyt> errands bbl &

[01:36] *** nekokak joined
[02:04] *** luqui joined
[02:14] *** buetow joined
[02:25] *** agentzh joined
[02:25] <agentzh> oh, smartlinks.pl is misbehaving on feather...

[02:26] <agentzh> i'm getting the error "invalid top directory at /usr/share/perl/5.8/File/Find.pm line 592."

[02:27] <agentzh> i think i'd better look into the recent commits to smartlinks.pl :)

[02:30] <agentzh> err, for those who don't know. one group of tests can be linked to multiple places in the spec by putting the links successively.

[02:31] <agentzh> so it's already supported n-to-m correspondance for months.

[02:31] <agentzh> not sure if i have made it explicit in smartlinks.pl's POD...looking now...

[02:37] *** Limbic_Region joined
[02:41] *** justatheory joined
[02:45] *** dmq joined
[02:46] *** agentzh joined
[02:48] <agentzh> @tell szabgab please recheck your recent commits to smartlinks.pl because i'm getting error report from feather's cron. thank you :)

[02:48] <lambdabot> Consider it noted.

[02:50] <agentzh> the synopses on feather are no longer updated automatically :/

[02:50] <agentzh> "This page was generated at 2007-02-03 10:01:14 GMT"

[02:53] <agentzh> @tell szabgab i think it's r15169 that has introduced the problem :)

[02:53] <lambdabot> Consider it noted.

[02:55] <agentzh> no svn usable on my machine, so i can't fix it myself...windows virus-- :(

[02:57] *** mdiep joined
[02:57] <agentzh> looking forward to my shiney new ubuntu box :)

[02:58] *** mdiep joined
[03:05] *** andrei joined
[03:06] <dduncan> amen

[03:12] *** weinig|away is now known as weinig

[03:24] <svnbot6> r15180 | agentz++ | [util/smartlinks.pl]

[03:24] <svnbot6> r15180 | agentz++ | Fixed a bug in the --dir support.

[03:24] <svnbot6> r15180 | agentz++ | smartlinks.pl should work again on feather++ :)

[03:27] <svnbot6> r15181 | agentz++ | [util/smartlinks.pl]

[03:27] <svnbot6> r15181 | agentz++ | added comments on smartlinks.pl's m-to-n correspondance linking support to POD.

[03:28] <agentzh> @tell szabgab the bug is now fixed in r15180. never mind. :) thanks to feather++ and Juerd++

[03:28] <lambdabot> Consider it noted.

[03:36] <agentzh> dduncan: is there a web browser on feather?

[03:39] <agentzh> bye &

[03:39] *** agentzh left
[03:43] *** mako132_ joined
[03:47] *** weinig is now known as weinig|zZz

[03:53] *** lrizo joined
[03:54] <lrizo> hi

[03:54] <lrizo> any can help me?

[03:58] *** Aankhen`` joined
[03:58] <lrizo> hi

[04:00] <jrockway> what's your question?

[04:01] <lrizo> i whould like to make a echo with udp

[04:01] <lrizo> but perl can not generate my udp packets

[04:02] <jrockway> perl6?

[04:02] <lrizo> not, perl 2.2

[04:03] <partclCoke> ... 2.2!?

[04:03] <partclCoke> this channel is for talk about perl6, but your version of perl intrigues me.

[04:04] <jrockway> i'm equally confused :)

[04:04] <jrockway> the production version of perl is perl 5.8.8

[04:05] <lrizo> excuseme

[04:05] <lrizo> im confused too :(, is perl 5.8

[04:05] <partclCoke> oh, that's far less interesting. =-)

[04:06] <lrizo> jejej

[04:06] <jrockway> you should ask on plain-old #perl, then

[04:06] <lrizo> are you developer of perl 6?

[04:06] <lrizo> yes i will ask in a old perl room

[04:06] <partclCoke> I think most of the people here have committed something to one of the... 3 version of perl6, ja.

[04:06] <allbery_b> ths whole channel is perl6 developer folks

[04:06] <partclCoke> Try Net::UDP, too.

[04:07] <allbery_b> some of whom may not do perl5

[04:07] <lrizo> ok

[04:07] <jrockway> there's some other UDP server whose name I can't remember...

[04:07] * jrockway searches a bit

[04:08] <lrizo> based on you experencies, can i make a UDP ECHO on perl 6?

[04:08] <allbery_b> just as a wild uess, if your server is running on a port < 1024, it must be run as root (OS restriction)

[04:08] <jrockway> i'm thinking of Net::Server with Net::Server::Proto::UDP

[04:08] <jrockway> docs are at http://search.cpan.org/~rhandom/Net-Server-0.95/

[04:08] <lambdabot> Title: Paul T. Seamons / Net-Server-0.95 - search.cpan.org

[04:10] <lrizo> thanks

[04:10] <lrizo> let me see the reference

[04:26] *** ruz joined
[04:36] *** stevan_ joined
[05:31] *** justatheory joined
[05:35] *** dduncan left
[05:37] *** leed joined
[05:50] *** nipra joined
[05:55] *** lrizo left
[05:58] *** ruz joined
[06:01] *** ruz_ joined
[06:14] *** BooK_ joined
[06:42] *** rfordinal joined
[07:02] <svnbot6> r15182 | lwall++ | first whack at getting ops into the standard grammar

[07:37] *** iblechbot joined
[07:38] *** marmic joined
[08:21] *** devogon joined
[08:53] *** drrho joined
[09:27] *** BooK_ is now known as BooK

[09:41] *** andara joined
[10:06] *** BooK_ joined
[10:15] *** elmex joined
[10:26] *** Ziggy6 joined
[10:39] *** naught joined
[10:39] *** pfarmer joined
[10:42] *** lyokato_ joined
[10:44] *** IllvilJa joined
[11:03] *** leed joined
[11:09] *** lyokato joined
[11:17] *** ruz__ joined
[11:23] *** pfarmer joined
[11:28] *** fglock joined
[11:29] <fglock> hi

[11:29] <lambdabot> fglock: You have 1 new message. '/msg lambdabot @messages' to read it.

[11:31] *** ruoso joined
[11:32] <fglock> putter: re help: the core of kp6 is done - I'm now starting bugfixing, optimization, docs

[11:39] <svnbot6> r15183 | fglock++ | kp6 - finished core compiler

[11:39] <svnbot6> r15183 | fglock++ | see v6/v6-KindaPerl6/docs/ANNOUNCE

[11:50] <fglock> putter: for next phase of the project, an optimized gramar engine written in simple-p6 would be a great help

[11:57] <fglock> putter: re p5 code which enumerates the operators, each with all its associated info - please see v6.pm perl5/Pugs-Compiler-Perl6/lib/Pugs/Grammar/*fix.pm

[12:00] <fglock> putter: re pugs regexes: pugs uses the same as v6.pm = Pugs::Compiler::Rule

[12:19] *** explorer joined
[12:41] *** rfordinal_ joined
[12:49] *** mako132_ joined
[13:01] *** REPLeffect_ joined
[13:04] *** rfordinal_ is now known as rfordinal

[13:12] <moritz> has anybody got an idea what to do about http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=406081 ?

[13:12] <lambdabot> Title: #406081 - pugs_6.2.13-0.1(ia64/unstable): FTBFS: No such file - Debian Bug repor ...

[13:13] <moritz> the quoted file ext/Math-Basic/lib/Math/Basic.pm is in the svn...

[13:23] *** buetow joined
[13:36] *** iblechbot joined
[13:39] *** kanru joined
[13:46] *** bonesss joined
[14:31] *** BooK joined
[14:37] *** mr_ank joined
[14:39] *** amnesiac joined
[14:43] *** kanru_ joined
[14:46] <gaal> moritz: I think it's maybe just a transient failure, like running out of memory likely. prelude compilation takes lots of ram.

[14:47] <moritz> gaal: maybe. but wouldn' other compilations fail as well? and many of them?

[14:51] <gaal> they might, if they run of of memeory. the question is whether this always happens, and how much free memory did the system have when it happened.

[14:52] <moritz> I don't know if the debian buildds collect such information...

[14:53] *** vel joined
[14:54] <gaal> ok, i'll reply to the bug.

[15:06] *** kanru joined
[15:31] *** xinming joined
[15:42] *** REPLeffect_ joined
[15:46] *** ofer1 joined
[15:54] *** mako132 joined
[16:00] *** mdiep_ joined
[16:07] *** BooK_ joined
[16:10] *** Dr_Pi joined
[16:21] *** Dr_Pi_ joined
[16:32] *** chris2 joined
[16:44] *** ProperNoun joined
[16:45] *** bernhard joined
[16:55] *** thepler joined
[17:04] *** kanru joined
[17:05] *** justatheory joined
[17:05] <svnbot6> r15184 | moritz++ | Added libghc-network-dev to debian/control

[17:05] <svnbot6> r15184 | moritz++ | Mentioned project_planning/{TASKS,TALK} in Pugs::Doc::Hack

[17:16] *** nipra joined
[17:23] <moritz> hey, what happened  to the -e (etc.) operators from perl5?

[17:23] <moritz> pugs> if -e "/etc/passwd" { say "Yes"; }

[17:23] <moritz> *** No compatible subroutine found: "&e"

[17:23] <moritz>     at <interactive> line 1, column 4-21

[17:24] <Gothmog_> They're gone and replaced...

[17:25] <Gothmog_> See S03

[17:25] <wolverian> moritz, see http://perlcabal.org/syn/S03.html#Changes_to_Perl_5_operators

[17:25] <lambdabot> Title: S03

[17:25] <Gothmog_> You can use $filename.:e or $filename ~~ :e

[17:26] <moritz> wolverian, Gothmog_: Thanks

[17:26] <moritz> I skimmed over S03 but seemed to have missed it ;)

[17:28] <moritz> the ~~ version works, the .:e not

[17:30] <Gothmog_> Might not be implemented in pugs yet.

[17:32] *** explorer joined
[17:34] *** prism joined
[17:36] <TimToady> it's not implemented yet.

[17:47] *** bonesss is now known as bonesss`out

[17:57] *** elmex joined
[17:58] *** GabrielVieira joined
[18:13] *** Southen_ joined
[18:13] *** nipra joined
[18:20] *** mdiep joined
[18:29] *** justatheory joined
[18:32] *** ashleyb joined
[18:34] *** ashleyb joined
[18:38] *** Limbic_Region joined
[18:38] *** drupek12167 joined
[18:43] *** Caelum joined
[18:44] *** mdiep joined
[19:08] *** Qiang joined
[19:24] *** jisom joined
[19:31] *** dduncan joined
[19:35] <gaal> TimToady: "Perl 5's ${...}, @{...}, %{...}, etc. dereferencing forms are now $(...), @(...), %(...), etc." in S03/Changes -- shouldn't we, uh, de-"reference" that?

[19:37] <PerlJam> heh

[19:38] <PerlJam> gaal: If it helps the programmer think of them as references, why not let them continue to do so?  :)

[19:38] <gaal> for the same reason that other conceits that stop working should be given up

[19:39] <gaal> @@@@@@@@x fails in Perl 5 where it wouldn't in Perl 6, for example.

[19:40] <gaal> well, $$$$$$$x

[19:40] *** DHGE joined
[19:41] <PerlJam> Well, those are still "perl 5's dereferencing forms".  The sentence doesn't say what they are in perl 6 land.  That seems like a useful omission to me  :-)

[19:43] <gaal> hmm, I guess if the purpose is pedagogical, not to scare off folks with a new concept right in line one, then there's a reason for it. But who said this has to be in line one? :-)

[19:46] <gaal> &

[19:50] <Limbic_Region> gaal - concept ne conceit

[19:54] <Khisanth> and anyone that writes $$$$$$$x deserves a beating

[19:55] <PerlJam> Khisanth: amen!

[19:55] * tene gives Khisanth a beating.

[19:56] <PerlJam> tene: you seem to be suffering from use/mention conflation

[19:56] <tene> PerlJam: he said "write", not "use"

[19:56] <PerlJam> touche

[19:57] *** theorb joined
[20:03] *** hexmode joined
[20:11] *** buetow joined
[20:14] <partclCoke> ... even if someone DOES say "jehovah". </python>

[20:14] *** explorer joined
[20:15] *** LimbicRegion joined
[20:26] *** mr_ank joined
[20:29] *** LimbicRegion is now known as Limbic_Region

[20:52] <svnbot6> r15185 | lwall++ | added skeleton of precedence parser

[20:52] <svnbot6> r15185 | lwall++ | syntactic categories look a little more role based now

[20:53] *** IllvilJa joined
[21:05] *** ezraburgh joined
[21:16] *** larsen_ joined
[21:21] <Gothmog_> Where is the grammar located in the repository? I'm somewhat curious. :-)

[21:22] *** ruz__ is now known as ruz

[21:24] <wolverian> Gothmog_, /mirror/pugs/src/perl6/Perl-6.0.0-STD.pm

[21:24] <wolverian> er, you get the idea.. :)

[21:28] <partclCoke> what's the current status of pugs on parrot?

[21:30] <audreyt> -CPIR still works last I checked

[21:31] <audreyt> still no objects, closures should still work if PIR havn't changed too much

[21:31] <audreyt> wouldn't be surprised if embedded parrot has bitrotten 

[21:31] <audreyt> wasn't very stable to begin with

[21:32] <partclCoke> is it worth keeping up to date, you think?

[21:32] <audreyt> is the embparrot API declared stable?

[21:33] <partclCoke> nothing in parrot has been declared stable, i didn't think.

[21:33] <audreyt> having worked with 4 generations of that API, I don't quite envision chasing more :)

[21:33] <audreyt> *nod*

[21:33] <partclCoke> though I think particle is trying tof ix that.

[21:33] <partclCoke> I'm just wondering if having the end version of pugs being able to target the end version of parrot is useful. If so, probably better to chase it now than try to fix it up later.

[21:34] <audreyt> target is -CPIR

[21:34] <audreyt> it's in better shape

[21:34] <audreyt> embed otoh probably doesn't need to work

[21:34] <audreyt> it needed to work when we were relying on PGE for rules

[21:34] <audreyt> (target means "take perl6, compile with pugs, and generate PIR")

[21:34] <audreyt> (embed means "call PIR natively from within Pugs")

[21:34] *** ezraburgh joined
[21:35] <partclCoke> c has done a bit of work on embedded. no clue on current status.

[21:35] <audreyt> in any case, firmly convinced that fix it up later is easier than chase.

[21:35] <TimToady>  audreyt: have a look at the most recent src/perl6/Perl-6.0.0-STD.pm

[21:35] <partclCoke> eh. I'll poke later this week.

[21:35] <partclCoke> really. Hurm. then I won't poke too much. =-)

[21:35] <partclCoke> STD is an unfortunate acronym!

[21:36] <TimToady> categories are kinda multi-ish rules

[21:36] <partclCoke> (er, abbreviation, I suspect it really is)

[21:36] <audreyt> Six-Targetting Definitions?

[21:37] * audreyt sees lower-cased :prec<z=> etc table and flashes thru nethack monsters

[21:37] <TimToady> I suppose we could spell it out "Standard" or something...

[21:37] <moritz> TimToady: how boring ;)

[21:38] <partclCoke> eh. not everyone has the brane of a 14 year old.

[21:40] <audreyt> TimToady: so instead of "multi rule ..." you just write "rule"?

[21:40] <audreyt> after a category is seen that is

[21:41] <TimToady> I suppose "category" could be "proto rule" but I didn't want to commit to rule/token

[21:41] <TimToady> since you could conceivably mix 'em

[21:42] <audreyt> they are just shorthands for regexes

[21:42] <TimToady> but extensible regexes

[21:42] <audreyt> so "proto rule" just means "proto regex {...:sigspace:ratchet}"

[21:42] <TimToady> can be extended by more declarations at derivation time

[21:42] <audreyt> ayeaye.

[21:42] <audreyt> really not identical to subs

[21:43] <TimToady> they're trying to get a handle on the scoping of grammar reanalysis as it mutates

[21:43] *** jferrero joined
[21:44] <TimToady> also I suspect category needs special handling so we know what's legal in foo:<*> syntax

[21:44] <TimToady> unless we just admit anything of that form as a valid name anywhere...

[21:44] <audreyt> token prefix is Named_unary[] {:<rand>}

[21:45] <TimToady> just sub ($) probably

[21:45] <audreyt> anytime a user defines an in-scope name the metasub need to go register a new token?

[21:45] <audreyt> to the current grammar objec that is

[21:45] <TimToady> I suspect we can special case identifier parsing

[21:45] <audreyt> mm?

[21:45] *** mako132 left
[21:46] <TimToady> on the other hand, there's some benefit to shoving idents through longest token as well

[21:46] <TimToady> presuming an efficient DFA or trie front end

[21:47] <audreyt> yeah. find with that way for now

[21:47] <Gothmog_> wolverian: Thanks!

[21:47] <wolverian> you're welcome :)

[21:47] <audreyt> *fine

[21:48] *** GabrielVieira2 joined
[21:48] <moritz> anybody interested in failing debian builds via dpkg-buildpackage?

[21:48] *** larsen_ joined
[21:49] <audreyt> TimToady: so the dynamic parsing rules (list vs scalar assignment, immediate binding with ::=, declarator pseudoassignment) belong there too?

[21:49] <audreyt> moritz: I am

[21:50] <moritz> audreyt: http://moritz.faui2k3.org/tmp/pugs-dpkg-buildlog (wait a second until that damn slow upload is finished)

[21:51] <audreyt> TimToady: historically those three are among the more tricky ones to lift from precparser land back into dynamic rulespace

[21:51] <TimToady> any rule that gets ahold of the engine can treat however much of the subsequent text as part of its "token", and call EXPR with a different sub-precedence

[21:51] <audreyt> (I saw that => has been taken care of)

[21:51] <moritz> audreyt: upload finished ;)

[21:51] * allbery_b wasn't gonna say anything... :)

[21:52] <TimToady> sorry 'bout that... :)

[21:52] <allbery_b> (nobody gets my name right)

[21:52] *** marmic joined
[21:52] <TimToady> that's how ??...!! is parsed already

[21:52] <audreyt> moritz: clearly 10smoker is a faulty patch

[21:53] <moritz> audreyt: right ;)

[21:53] <audreyt> rafl: thoughts?

[21:53] <audreyt> rafl: seems 10smoker no longer applies (assuming it's yours)

[21:54] <audreyt> TimToady: 

[21:54] <audreyt>     { :<??> <EXPR(|%conditional> :<!!> }

[21:54] <TimToady> %conditional contains the max precedence

[21:54] <audreyt> explain the <FOO(|%x> metasyntax?

[21:54] <TimToady> missing right paren

[21:54] <audreyt> oh. easy explanation

[21:55] <audreyt> fixed

[21:55] <TimToady> you see how multiple :<> can work together to form infix:<?? !!> from the user point of view?

[21:55] <svnbot6> r15186 | audreyt++ | * Fix missing right parens

[21:55] <audreyt> what is prefix | doing?

[21:56] <audreyt> expanding into nameds?

[21:56] <TimToady> yes

[21:56] <TimToady> there's a skeleton "method EXPR" at the bottom

[21:56] <audreyt> amazingly simple

[21:57] <audreyt> oh, "your ad here" 

[21:57] <audreyt> ok

[21:57] <TimToady> I didn't put in the reduces. 

[21:57] *** larsen__ joined
[21:57] <audreyt> nodnod. got the idea

[21:57] <audreyt> what are those suppose points?

[21:58] <TimToady> places where you parse it by the standard rules, but mark that you suspect they meant something else, so when the parse gets into trouble, you have things to look at to give them better diags

[21:58] <TimToady> "Did you mean..."

[21:59] <audreyt> no examples yet?

[21:59] <TimToady> no, it's just a stub idea, but one I've had for ages.

[21:59] <audreyt> but just string?

[21:59] <audreyt> or try some reparse

[21:59] <TimToady> not strictly necessary to get a good parse, but will be necessary for acceptance by p5 programmers

[21:59] <audreyt> and use reparse to give more info?

[22:00] <audreyt> moritz: drop [email@hidden.address] and [email@hidden.address] a mail?

[22:00] <TimToady> yes, grinding through backtracking to figure out some might-have-beens

[22:00] <audreyt> moritz: rafl may not be around atm, but I suspect he can fix it rather quickly

[22:01] <audreyt> why does that remind of of /:panic//

[22:01] <audreyt> *remind me of

[22:01] <moritz> audreyt: I just delete the /debian/patches/ dir and now it builds (and needs quite a while .. ;)

[22:01] <TimToady> 'cause I used the same word maybe?

[22:01] <audreyt> :)

[22:02] <moritz> audreyt: I'll write the mail as sonn as the package is ready

[22:02] <audreyt> all in all sane

[22:02] <audreyt> moritz++ # thanks!

[22:02] <audreyt> TimToady: you still think

[22:02] <audreyt> when .:e {}

[22:02] <audreyt> when :e {}

[22:02] <audreyt> need to be synonyms?

[22:03] <audreyt> admittedly the latter reads better

[22:03] <TimToady> I think so

[22:03] <audreyt> ok. will go implement .:e

[22:03] *** larsen___ joined
[22:03] <TimToady> I don't see a better way out of the prec problem with ~~

[22:03] <audreyt> no, I mean ditch ~~

[22:03] <audreyt> force .: all the time

[22:04] <TimToady> don't want to force that

[22:04] <TimToady> since I think people want "when :r & :x"

[22:04] <audreyt> btw, how is $foo.Foo::Bar parsed nowadays?

[22:05] *** Azure-BOT joined
[22:05] <TimToady> .<name>

[22:05] <audreyt> $foo.Foo: :Bar?

[22:05] <TimToady> method is name, not ident

[22:05] <audreyt> (this is S03:247)

[22:05] <audreyt> then maybe S03 wants to say that

[22:05] <TimToady> name can include ::

[22:07] <TimToady> fixed

[22:07] <audreyt> thx

[22:08] <audreyt> $file.=:e

[22:08] <audreyt> legal?

[22:08] <TimToady> no

[22:08] <audreyt> so it's dot

[22:08] <audreyt> not methname

[22:08] <audreyt> gotcha

[22:08] <TimToady> .: is special

[22:09] <audreyt> S03:2156

[22:09] <audreyt>     Any       Pair      test object             .STATUS(X) (Str,IO do filetest)

[22:09] <audreyt> oh. the parens means #

[22:09] <audreyt> the last pair that is

[22:09] <TimToady> ???

[22:10] <audreyt> I misparsed it as Signature

[22:10] <audreyt> :(Str, IO does filetest)

[22:10] <audreyt> but it actually means

[22:10] <audreyt> # Str and IO objects do filetest

[22:10] <TimToady> yes

[22:10] <TimToady> but intended for any lightweight status reporting

[22:10] <TimToady> syntax also hijacked for :exists and :delete

[22:11] <audreyt> but that is for construction not slicing syntax no?

[22:11] <audreyt> I mean, a pair literal :foo{...}

[22:11] <audreyt> means

[22:11] <audreyt> foo => {...}

[22:11] <audreyt> which doens't use slice syntax inside

[22:11] <audreyt> unless I'm mistaken

[22:12] <audreyt> i.e. it's not a subscribe, it's a normal hash composer (or Code)

[22:12] <audreyt> *subscript

[22:12] <TimToady> well, $obj.:delete{expr} just gets the pair and can do whatever it likes to expr, I expect

[22:12] <audreyt> except

[22:12] <audreyt> @foo.delete:[1;2;3]

[22:12] <lambdabot> Unknown command, try @list

[22:12] <audreyt> works but

[22:12] <audreyt> only if (@x = [1;2;3]) works

[22:12] <audreyt> I mean .:delete[] of course

[22:13] <TimToady> ; is supposed to work inside brackets

[22:13] <TimToady> statement vs dimensional is left to context

[22:14] <TimToady> might not be lazy enough for {;;} though...

[22:14] <audreyt> so in .:exists{1;2;3}

[22:14] <audreyt> it's turned into Code 

[22:14] <audreyt> but in

[22:14] <audreyt> .:exists{1=>2, 3=>4}

[22:14] <audreyt> it's turned into Hash

[22:14] <audreyt> either way the pair STATUS gets is not very useful

[22:15] <audreyt> still not quite grasping the picture

[22:15] <TimToady> unless there's some way to eval Code to return dimensions

[22:15] <TimToady> but I admit it's far-fetched.  will think s'more

[22:15] <audreyt> what I mean is "parsed exactly as a subscript will be"

[22:15] <audreyt> need to be a hard mandate

[22:15] <audreyt> and not (generally) to be labelled as colon pairs

[22:16] <audreyt> cool :)

[22:16] <audreyt> (fwiw, I wonder if we can parse it as postcircum, instead of circum.)

[22:17] <audreyt> and generally just treat all brackets in .: form as slice

[22:17] <audreyt> but that will not work with "when" and ~~

[22:17] <audreyt> which was the motivation behind suggestion of dropping them

[22:17] <TimToady> not too worried about "when :delete{...}

[22:17] <audreyt> when :exists{1} {...}

[22:18] <TimToady> but maybe pairs in general need to be a little lazier about {...}

[22:18] <TimToady> or maybe we always use [...] for such things.

[22:19] <audreyt> mmm lua.

[22:19] <audreyt> the autocomposing thing bites us a bit too much

[22:19] <audreyt> not limited to here

[22:19] <TimToady> I have thought some about [a => 1, b => 2] maybe autohashifying lazily

[22:19] <audreyt> wouldn't oppose codeonly{}

[22:19] <audreyt> exactly.

[22:20] <wolverian> I was just thinking about saying that aloud but was too scared..

[22:20] <audreyt> but everybody else is going that way :)

[22:20] <TimToady> "like the rest of the world uses" is not an argument that flies in certain quarters... :/

[22:21] <audreyt> unless it's the dot...

[22:21] <audreyt> j/k

[22:21] <wolverian> the solution is obviously {[ ]}

[22:21] <TimToady> "...and wrong"

[22:21] <tene> {[(< >)]}

[22:22] <audreyt> .oO([{< >}])Oo.

[22:22] <wolverian> space portal! 

[22:22] <TimToady> well, %(...) already presumably works

[22:22] <moritz> perl6 should parse ascii-art ;)

[22:22] <TimToady> but only for bare literal

[22:22] <audreyt> moritz: seen Saturn.pl?

[22:22] <jabbot> audreyt: I havn't seen Saturn.pl, audreyt

[22:22] <moritz> audreyt: nope 

[22:23] <audreyt> moritz: http://www.perlmonks.org/index.pl?node_id=397958

[22:23] <lambdabot> Title: Saturn

[22:23] <wolverian> jabbot, seen a spelling guide?

[22:23] <jabbot> wolverian: I havn't seen a, wolverian

[22:23] <TimToady> going with optional %foo['bar'] would allow us to use "my" inside.

[22:23] <TimToady> but I've always felt that [...] should be reserved for numeric subscripts so the optimizer knows things are getting coerced to integer generally.

[22:23] <audreyt> "my"?

[22:24] *** nipra joined
[22:24] <TimToady> a { } subscript defines a lexical scope

[22:24] <audreyt> aha.

[22:24] <TimToady> a [ ] one doesnt

[22:24] <audreyt> "deliberately"

[22:24] <tene> Just let people use whatever grouping operator they want and guess at the meaning from context.

[22:24] <TimToady> rebol

[22:24] <TimToady> everything is [...]

[22:25] <audreyt> actually if we make :meth first class

[22:25] <audreyt> and not worry about STATUS

[22:25] <audreyt> then this problem all goes away

[22:25] <audreyt> no more pairs, generally

[22:25] <audreyt> the :exists method gets a normal subscripting arglist as postcircum[] would

[22:26] <TimToady> evaluated too soon

[22:27] <audreyt> for the .:exists form?

[22:27] <TimToady> .meth{foo} is parsed as .meth.{foo}

[22:27] <TimToady> you'd have to return a proxy

[22:27] <audreyt> sure, I mean keep parserule

[22:28] <audreyt> .:meth is special in that it takes postcircum brackets 

[22:28] <audreyt> in addition to parens

[22:28] <audreyt> but make the dispatch go through normal dispatch

[22:28] <audreyt> not named redispatch

[22:28] <TimToady> hmm.  :infix<*>

[22:29] <audreyt> method :exists {...} # also easier to write than STATUS variants

[22:29] <audreyt> dunno. seems simpler

[22:29] <audreyt> quite a bit faster too.

[22:29] <TimToady> I actually thought of that a couple of days ago, but it didn't seem like it worked out, forget why.

[22:30] <audreyt> it wouldn't work out if we allow ~~:exists[]

[22:30] <audreyt> but as you said we're fine with limiting ~~ to simple (nonbracketing, or parens-only) args

[22:30] <audreyt> otherwise seems kosher

[22:32] <TimToady> ah, part of the reason I didn't want to go that route was I didn't want :r etc in Str, but maybe that's just does something or other

[22:32] <audreyt> yeah.

[22:32] <TimToady> or maybe we just shove :r into Str anyway

[22:32] <audreyt> and it nicely summarizes :!e to mean !:e

[22:32] <audreyt> !   .:e

[22:32] <audreyt> and do without the "inspect the bool" game

[22:32] *** weinig|zZz is now known as weinig

[22:33] <TimToady> well, we did have :!x meaning two different things, I guess

[22:33] <audreyt> *nod*

[22:33] <TimToady> does it mean !.:x or does it mean .:x(Bool::False)

[22:33] <TimToady> old pair syntax has the latter

[22:33] <audreyt> the current spec places burden on STATUS implementers

[22:33] <audreyt> to inspect the bool

[22:33] <audreyt> and translate by hand

[22:34] <audreyt> (pugs does that currently)

[22:34] <audreyt> icky.

[22:34] <TimToady> or maybe pairs can carry their !-hood independent of their argument

[22:34] <TimToady> method :!r {...}

[22:34] <audreyt> I think it's easier to leave pairs alone

[22:34] <audreyt> and make :!foo consistent instead of as part of the name

[22:35] <TimToady> but people will want :!exists{...}

[22:35] <audreyt> and that is differnet from !.:exists{} how?

[22:35] <moritz> Saturn.pl is way cool ;)

[22:35] <audreyt> i.e. if we assume a rewrite of all

[22:35] <audreyt> $obj.:!meth{...}

[22:35] <audreyt> into

[22:36] <audreyt> !$obj.:meth{...}

[22:36] <audreyt> don't quite see what's lost

[22:36] <audreyt> rewrite by compiler not by hand

[22:36] <audreyt> moritz: so Perl 5 alredy does ascii art :)

[22:36] <TimToady> :!flag as an option gets ! how?

[22:36] <audreyt> $obj.meth(:!flag) still sees $obj.meth(flag => False)

[22:37] <audreyt> the .: form no longer have anything to do with pairs

[22:37] <audreyt> .:foo{...} has nothing to do with foo=>{...}

[22:37] <audreyt> .:!foo nothing to do with foo=>False

[22:37] <TimToady> but prevents "when :!w"

[22:38] <audreyt> does not

[22:38] <audreyt> still means

[22:38] <audreyt> ! ~~:w

[22:38] <audreyt> the smartmatcher can mandate that easily

[22:38] <audreyt> when :w(False) # special cased

[22:38] <audreyt> always means !:w

[22:39] <TimToady> seems not quite a simple as it should be.

[22:39] <audreyt> but pushing all this to Pair objects seems to make it more complex

[22:40] <audreyt> dunno. not very tied to this particular interpretation. but handwritten STATUS tester feels somehow wrong, plus I'd like subscript over constructor

[22:40] <TimToady> well, I guess we're just saying the meaning of ! is contextual.

[22:41] <audreyt> hm. <1.5hr till OSCON proposal deadline

[22:41] * audreyt goes making something random up :) bbiab

[22:41] <miyagawa> audreyt: thanks for reminding me

[22:41] <audreyt> miyagawa: heya :)

[22:42] <miyagawa> :)

[22:42] <audreyt> miyagawa: so seems there'll be YAPC::Beijing right after OSDC.tw

[22:42] <miyagawa> ooooh!

[22:42] <audreyt> jp-tw-cn

[22:42] <audreyt> I'll be to all three

[22:42] <audreyt> they'll post to use.perl soon

[22:42] <miyagawa> awesome

[22:42] <audreyt> hopefully we can find some .jp hackers to join

[22:43] <audreyt> next time it could be an OSDC

[22:43] <miyagawa> should we rename ours to YAPC::Asia::Tokyo? :)

[22:43] <audreyt> but YAPC first this time

[22:43] <audreyt> nah. YAPC::Asia is just fine :) the rest of us are OSDC'ing

[22:43] <audreyt> OSDC.cn

[22:43] <miyagawa> we're talking with Sasada and other RubyKaigi organizers to make OSDC (at least Ruby and Perl) happen in 2008

[22:44] <audreyt> eggsellent

[22:48] *** Schwern joined
[23:16] *** bd_ joined
[23:22] *** Aankhen`` joined
[23:27] *** gnuvince joined
[23:28] <beppu> I've heard crazy rumors that pugs can take Perl 6 code and emit Javascript?  Is this true?

[23:30] <audreyt> yes, ./pugs -CJS -e "say 'hello'"

[23:30] <beppu> audreyt += 2 ** 32

[23:31] * audreyt overfloweth

[23:32] <audreyt> it's iblech's work, though.

[23:32] <beppu> whooooaaaa -- that was a lot of javascript

[23:33] <TimToady> probably dumped the prelude with it

[23:33] *** weinig joined
[23:34] <beppu> yeah...  I'm going to try to see if it actually works....

[23:34] <audreyt> with the released pugs, definitely works

[23:35] <audreyt> trunk pugs, conditionals may be broken (known bug) as we switched representation for "if ... CODE" to "if ... BLOCK"

[23:35] <audreyt> known issue and will be fixed before release

[23:38] *** weinig is now known as weinig|away

[23:42] *** Psyche^ joined
[23:42] <beppu> ha!  firefox 1.5.0.8's js interpreter says:  too much recursion

[23:43] <beppu> didn't give me any line numbers, though.

[23:43] <moritz> ;)

[23:43] <moritz> pugs -CJS -e "say 'hello';"|wc -l

[23:43] <moritz> 56085

[23:43] <moritz> that's quite impressive ;)

[23:46] *** Squern joined
[23:55] *** Psyche^ is now known as Patterner

