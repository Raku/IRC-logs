[00:05] *** theorbtwo joined
[00:07] *** weinig left
[00:15] *** weinig joined
[00:17] *** theorb left
[00:22] *** devogon left
[00:33] *** nipotaway is now known as nipotan

[00:40] *** ewj joined
[00:41] *** justatheory left
[00:46] *** ewj left
[00:57] *** lyokato joined
[01:20] *** daxim_ left
[01:32] <avar> arg nothing works in kp6;/

[01:45] <avar> oh fuck yeah!

[01:50] <pugs_svnbot> r18446 | avar++ | [kp6-lisp] Implemented :apply on function objects, my $sub = sub { 5 + 5 }; say $sub.() now works

[01:50] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18446

[01:50] <lambdabot> Title: Changeset 18446 - Pugs - Trac

[01:51] *** weinig left
[01:53] <avar> the closure test passes \o/

[01:54] <avar> .map, .grep and .sort should be easy now

[02:09] <[particle]> avar hearts kp6 -- twelve minutes from suck to rock :)

[02:18] *** aero_ joined
[02:18] *** aero_ left
[02:20] <Tene> avar++

[02:23] *** bsb joined
[02:26] *** weinig joined
[02:29] *** weinig left
[02:29] *** weinig joined
[02:30] *** IllvilJa left
[02:31] *** IllvilJa joined
[02:36] *** justatheory joined
[02:44] <buu> What the fuck, avar did something useful?

[02:50] * avar updates http://pugs.blogs.com/

[02:50] <lambdabot> Title: Pugs

[03:05] *** elmex_ joined
[03:20] *** elmex left
[03:33] <avar> Anyone interested in doing the CPAN releases for kp6?

[03:33] <avar> make sure disttest, install works, writing a changelog, changing the version number, uploading..

[03:37] *** justatheory left
[03:38] *** BinGOs_ left
[03:43] *** BinGOs joined
[03:48] *** amnesiac joined
[04:05] *** Daveman left
[04:29] *** drupek12 left
[04:32] *** drupek12 joined
[04:41] *** rlb3_work left
[04:43] *** rlb3_work joined
[05:00] *** vel left
[05:02] <[particle]> avar: blog about it, you'll get more bites

[05:09] *** Daveman joined
[05:19] *** devogon joined
[05:30] *** jisom joined
[05:32] *** Ashizawa joined
[05:43] *** amnesiac left
[06:02] *** funktio joined
[06:07] *** dduncan joined
[06:39] *** drrho joined
[07:01] * integral nibbles on avar

[07:06] *** franck___ joined
[07:10] * spinclad gets a nip of earlobe in

[07:13] *** renormalist joined
[07:21] *** vsoni joined
[07:28] *** Aankhen`` joined
[07:29] *** gorax joined
[07:29] *** kane_ joined
[07:34] *** bsb left
[07:37] *** iblechbot joined
[07:48] *** dduncan left
[07:54] *** Daveman left
[08:02] *** agentzh joined
[08:16] <meppl> good morning

[08:40] *** jisom left
[08:48] *** masak joined
[08:48] *** chris2 joined
[08:48] *** iblechbot left
[08:49] *** idiotmax joined
[08:51] *** IllvilJa left
[09:11] *** IllvilJa joined
[09:12] *** thoughtpolice left
[09:22] *** lichtkind joined
[09:28] *** renormalist left
[09:45] *** vsoni left
[09:49] *** gorax left
[10:00] *** penk joined
[10:04] *** rindolf joined
[10:16] *** gorax joined
[10:17] *** fglock joined
[10:24] *** rindolf left
[10:43] *** jwest- joined
[10:57] *** Ashizawa left
[10:58] *** lyokato left
[11:07] <moritz_> I just 'svn up'ped parrot, and a 'make -j 3' compiled parrot, but the "make smoke" after that died with a segfault

[11:07] <moritz_> I thought make -j was fixed[tm] :(

[11:13] <masak> moritz_: what does -j do?

[11:13] <moritz_> masak: spawn multiple processes in parallel

[11:14] <masak> during the make?

[11:14] <moritz_> masak: yes

[11:14] <masak> that shouldn't affect the smoke at all, it seems

[11:15] <moritz_> masak: unless it breaks the build

[11:15] <masak> moritz_: but why should it?

[11:15] <moritz_> masak: it did that previously :/

[11:15] <masak> anyway, a make -j 3 here doesn't survive all the way through

[11:15] <masak> it says "Invoking Parrot to generate runtime/parrot/include/config.fpmc --cross your fingers"

[11:16] <masak> and then it dies

[11:16] <moritz_> masak: when not all dependencies are explicitly stated, some dependencies might be implicitly enforced wihtout the -j option

[11:16] <masak> ah

[11:18] *** chris2 left
[11:20] <masak> ordinary make gives me the same error, btw

[11:20] <masak> maybe I should report this somewhere?

[11:21] <moritz_> masak: on #parrot (irc.perl.org) preferably

[11:21] <moritz_> masak: ordinary 'make && make smoke' work for me

[11:21] <pugs_svnbot> r18447 | fglock++ | [kp6] changed .str => .Str, .int => .Int

[11:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18447

[11:21] <lambdabot> Title: Changeset 18447 - Pugs - Trac

[11:22] <masak> moritz_: will do

[11:23] <masak> there's one other non-bot on #parrot :/

[11:23] <moritz_> masak: on irc.perl.org?

[11:26] <masak> moritz_: oh. ah.

[11:26] <masak> checking

[11:26] <fglock> does lisp care about 'int' vs 'Int' ?

[11:27] <masak> hm, quite a bit more users over there, yes

[11:29] <avar> fglock: no, methods are case insensitive for now

[11:33] *** iblechbot joined
[11:37] *** drupek12 left
[11:38] <integral> avar: you were looking for someone to do CPAN releases for kp6?

[11:38] <avar> integral: ya, I'm lazy

[11:39] <pugs_svnbot> r18448 | fglock++ | [kp6-perl] allow " undef but 'x' "

[11:39] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18448

[11:39] <lambdabot> Title: Changeset 18448 - Pugs - Trac

[11:40] <moritz_> kp6: say(undef but 'x')

[11:40] <exp_evalbot> r18447: OUTPUT[Undef␤]

[11:40] <moritz_> not yet updated

[11:41] <fglock> kp6: my $a = 0 but True; say $a,($a+2),( $a ?? "ok" !! "nok" ) 

[11:41] <exp_evalbot> r18447: OUTPUT[02ok␤]

[11:42] <fglock> kp6: say(undef but 'x')

[11:42] <exp_evalbot> r18448: OUTPUT[x␤]

[11:42] <fglock> k

[11:42] <moritz_> allright, the svn up occured ;)

[11:43] <moritz_> the crontab says 0-59/3 * * * * 

[11:43] <moritz_> ;-)

[11:45] <masak> kp6: say( (undef but True) ?? 'wai~!' :: 'no wai' )

[11:45] <exp_evalbot> r18448: OUTPUT[syntax error at position 3, line 1 column 3:␤say( (undef but True) ?? 'wai~!' :: 'no wai' ␤   ^ HERE␤Bareword found where operator expected at - line 2, near "* Syntax error"␤        (Missing operator before error?)␤syntax error at - line 2, near "* Syntax error in "␤BEGIN not safe

[11:45] <exp_evalbot> ..after errors--compilation aborted at - line 5.␤]

[11:46] <masak> uhn? what did I do wrong? :/

[11:46] <fglock>  ::  =>  !!

[11:46] <masak> fglock: ah.

[11:46] <masak> oops.

[11:46] <masak> kp6: say( (undef but True) ?? 'wai~!' !! 'no wai' )

[11:46] <exp_evalbot> r18448: OUTPUT[wai~!␤]

[11:46] <masak> wai~! :)

[11:46] <fglock> wai!

[11:47] <masak> in 6.0.0, I'd say there should be a grammar subrule that catches the ??:: typo and politely corrects the erring programmer

[11:47] <avar> integral: interested? :)

[11:50] *** drupek12 joined
[11:54] <pugs_svnbot> r18449 | fglock++ | [kp6] masak++  there should be a grammar subrule that catches the ??:: typo

[11:54] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18449

[11:54] <lambdabot> Title: Changeset 18449 - Pugs - Trac

[11:56] <fglock> kp6: say( (undef but True) ?? 'wai~!' :: 'no wai' )

[11:56] <exp_evalbot> r18449: OUTPUT[maybe you mean infix:<?? !!> at compiled/perl5/lib/KindaPerl6/Grammar.pm line 1636, <> line 1.␤]

[11:57] <fglock> oops - ternary

[12:00] <pugs_svnbot> r18450 | fglock++ | [kp6] fixed last commit

[12:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18450

[12:00] <lambdabot> Title: Changeset 18450 - Pugs - Trac

[12:01] <masak> fglock: realizing thoughts out loud

[12:02] <masak> (meant to say fglock++)

[12:02] *** lichtkind left
[12:03] *** lichtkind joined
[12:10] <masak> actually, what is the p6 <-> parrot status?

[12:12] <integral> avar: yes

[12:13] * integral is just svk upping again

[12:13] <moritz_> masak: which one do you mean?

[12:13] <moritz_> masak: perl6onparrot?

[12:14] <moritz_> masak: or various parrot backends for mp6/kp6/pugs?

[12:14] <moritz_> or nqp?

[12:15] <masak> moritz_: I'm a little interested in the relation between all the projects, if they're active in some sense, and how far they have progressed

[12:16] <moritz_> masak: ok, I'll try ;)

[12:16] <masak> cool, thx

[12:16] <moritz_> currently the parrot folk work on the compiler tools, and implementing nqp with them

[12:16] <moritz_> and, afaict, nqp is pretty much finished

[12:17] <moritz_> and after that pmichaud (and other) will refocus on perl6onparrot

[12:17] <moritz_> that's the parrot side of things

[12:17] <masak> ok

[12:17] <moritz_> on the perl6 side, pugs has a bit-rotten parrot backend

[12:17] <moritz_> no work here since long, long time ago

[12:17] <masak> what needs to be done?

[12:18] <masak> to reverse the bit rot, I mean

[12:18] <moritz_> mp6 has a parrot backend that nearly bootstraps mp6, but not quite

[12:18] <moritz_> masak: I don't really know... It was broken when I joine p6 development back in june 07

[12:18] <moritz_> kp6 doesn't have a parrot backend afaict

[12:19] <moritz_> at least not more than a prototype

[12:20] <moritz_> did I forgot any compiler?

[12:21] *** BinGOs left
[12:21] <masak> seems most of the development is on kp6 right noe

[12:21] <masak> s/noe/now/

[12:21] *** BinGOs joined
[12:22] <masak> so maybe focus on a kp6 parrot backend is more warranted than a refreshed one on pugs

[12:22] <masak> just planning my weekend here :)

[12:22] <moritz_> masak: I thought about a kp6 parrot backend as well, because parrot now pretty much implements all of p6 object modell

[12:23] <moritz_> masak: just without the syntactic sugar

[12:23] <masak> would be cool

[12:23] <masak> and probably reincrease pugs-parrot intercommunication

[12:23] <moritz_> which means that you have a performance boost _and_ less programming work 

[12:24] <masak> not bad.

[12:25] <moritz_> sadly now my university term has started and my time resources are limited

[12:25] <masak> :(

[12:25] <masak> (limited resources)--

[12:47] *** cmarcelo joined
[12:52] *** gorax left
[12:52] *** kyrbe joined
[12:53] *** kyrbe left
[12:54] *** riffraff joined
[12:55] <moritz_> masak: if you're serious about that, try to apply for a micro grant

[12:55] <moritz_> masak: I'm sure it'll be granted

[12:55] <masak> moritz_: intriguing idea

[12:56] <masak> the difference is, though, that it would be very dependent on my free time

[12:56] <moritz_> I just suggested that here: http://www.perlmonks.org/?node_id=645438

[12:56] <lambdabot> Title: Re^3: book list for perl6?

[12:56] <masak> and applying for a microgrant would be a bit like promising to do it, no?

[12:57] <masak> so, at least this weekend, I will make it my private little project

[12:57] <masak> maybe after that, if it seems feasible and not too big, I'd apply for a microgrant

[12:57] <masak> excellent idea, though. I'll remember it

[12:57] *** drrho left
[12:58] <masak> moritz_: btw, you "Perl 6 Micro Grant" link points wrong, it's the same as the kp6 link

[12:59] <moritz_> damned

[12:59] <moritz_> thanks for the hint

[13:00] <moritz_> masak: fixed

[13:01] <masak> now works -- thx

[13:01] <avar> integral: cool

[13:06] <avar> integral: You could release 0.02 today if you're up for it:)

[13:06] <avar> Aankhen``: HACK

[13:06] <avar> :)

[13:09] <integral> avar: sounds good.  I'm hacking on a mainframe for about another hour, then I'll look at kp6 :)

[13:15] *** renormalist joined
[13:19] *** avar left
[13:19] *** avar joined
[13:20] *** avar left
[13:21] *** avar joined
[13:27] *** Notrix joined
[13:29] <fglock> integral: commiters wanted for v6.pm and Pugs::Compiler::Rule too

[13:31] <fglock> integral: what is your CPAN id?

[13:32] <integral> BSMITH, fglock 

[13:37] <fglock> integral: Added BSMITH to co-maintainers of Pugs::*, v6, Inline::Parrot

[13:39] <avar> fglock: yours is FGLOCK right?

[13:41] <avar> ya

[13:43] <avar> fglock, integral: gave you comaint on KindaPerl6*

[13:43] <fglock> avar: yes

[13:45] *** TJCRI joined
[13:48] *** rindolf joined
[13:52] *** dvorak left
[13:53] *** diegoray joined
[14:00] *** vbattsAtWork joined
[14:08] *** perlmonkey2 joined
[14:09] *** Daveman joined
[14:10] *** perlmonkey2 left
[14:29] *** weinig left
[14:29] *** jwest- left
[14:29] *** weinig joined
[14:34] *** Notrix left
[15:07] *** renormalist left
[15:14] *** lidden joined
[15:14] *** masak left
[15:14] *** lidden left
[15:14] *** lidden joined
[15:15] *** lidden left
[15:15] *** lidden joined
[15:19] *** barney joined
[15:25] *** amnesiac joined
[15:29] *** fax joined
[15:33] *** Notrix joined
[15:39] *** fglock left
[15:40] *** fglock joined
[15:44] <Aankhen``> avar: I told you, I'm taking a break from programming.

[15:45] <moritz_> ... and still hanging around in #perl6 ;)

[15:45] <Aankhen``> But of course. :-)

[15:45] <Aankhen``> I never said I was taking a break from IRC.  Or anything else, for that matter.

[15:53] *** weinig left
[15:54] <avar> Aankhen``: wrarr

[15:54] <Aankhen``> To you too!

[15:55] * Aankhen`` wanders off.

[15:58] <fax> hi guys

[15:59] <moritz_> hi fax ;)

[16:01] *** Juerd left
[16:01] *** Juerd joined
[16:01] <rindolf> Hi fax 

[16:03] *** drupek12 left
[16:04] *** penk left
[16:06] *** drupek12 joined
[16:13] *** justatheory joined
[16:26] <pugs_svnbot> r18451 | brian_d_foy++ | * I constructed two bad tests. In hexadecimal numbers written with

[16:26] <pugs_svnbot> r18451 | brian_d_foy++ | the adverbial form, the leading 0d or 0b are hex digits, not 

[16:26] <pugs_svnbot> r18451 | brian_d_foy++ | internal radix specifiers. I've fixed that, so two more tests

[16:26] <pugs_svnbot> r18451 | brian_d_foy++ | should pass now. :)

[16:26] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18451

[16:26] <lambdabot> Title: Changeset 18451 - Pugs - Trac

[16:29] *** elmex_ left
[16:34] *** elmex joined
[16:37] <avar> fax: hia fax

[16:38] <avar> fax: check out pugs.blogs.com :)

[16:41] <fax> avar: Great!

[16:42] <moritz_> is there a "lazy" but still efficient sort algorithm, so that @list.sort.[0] can be done in O(@list.elems)?

[16:42] <moritz_> and full sort in O(n log n) for n = @list.elems

[16:43] *** weinig joined
[16:43] <fglock> you mean make it return @list.min instead?

[16:44] <moritz_> fglock: in this case yes, but in the more general case a lazy sort

[16:44] <moritz_> fglock: so that the sort is only actually made if you access it, and if you don't acces half of the sorted array you don't have to sort the other half

[16:45] <[particle]> bubble sort works well for mostly sorted data

[16:45] <moritz_> [particle]: yes, but has O(n²) in the general case

[16:45] <[particle]> yep

[16:46] <fglock> yes, it's possible - but you need some way to know when the user means to access all elements or not

[16:46] <[particle]> might be something to switch to when some part of the list is already sorted

[16:46] * moritz_ is running throug different sort algorithims in his mind

[16:46] <[particle]> mergesort can do it in constant space

[16:47] <moritz_> and quicksort might be lazily implementable

[16:48] <moritz_> you make one pass and split your list into one half that is bigger than a reference element, and the other half is smaller

[16:48] <moritz_> the items in each half, that is

[16:48] <[particle]> http://en.wikipedia.org/wiki/Selection_algorithm

[16:48] <lambdabot> Title: Selection algorithm - Wikipedia, the free encyclopedia

[16:49] <moritz_> so if you access only the first half of the generated list, you can safly omit processing the second half

[16:49] <moritz_> [particle]: looking

[16:49] <fax> avar: glug

[16:50] <fax> avar: I did a fix to Array.lisp

[16:50] <fax> I can't commit until I remember my password :S

[16:51] <[particle]> if you need, we can resend your commit bit to reset the password

[16:51] <fax> yeah please, that would great

[16:52] *** penk joined
[16:53] <moritz_> commitbit not responding to me :(

[16:54] <[particle]> me neither :(

[16:54] <[particle]> Juerd: ping

[16:54] <moritz_> or diakopter, if you are around... or obra ;)

[16:54] <[particle]> Juerd: commitbit isn't responding... can you perform some admin magic?

[16:55] * moritz_ randomly hilights feather sudoers

[17:00] <moritz_> there's Sort::Key::Top on CPAN

[17:02] *** kanru joined
[17:03] *** jhorwitz joined
[17:08] *** buubot left
[17:08] *** buubot joined
[17:12] <TimToady> fax: commitbit resent

[17:12] <fax> thanks

[17:13] <TimToady> (had to kill jifty on feather to restart it)

[17:13] <[particle]> TimToady++

[17:17] *** kane_ left
[17:17] <pugs_svnbot> r18452 | fax++ | [kp6-lisp] fixed array index check

[17:17] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18452

[17:17] <lambdabot> Title: Changeset 18452 - Pugs - Trac

[17:20] <pugs_svnbot> r18453 | fax++ | [kp6-lisp] (oops!) properly fixed array index check this time

[17:20] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18453

[17:20] <lambdabot> Title: Changeset 18453 - Pugs - Trac

[17:24] *** agentzh left
[17:33] *** Patterner left
[17:34] <moritz_> "Perl 6 is meant to be Lisp + CPAN, no minuses." by [dragonchild]

[17:34] <moritz_> nicely phrased ;)

[17:37] <TimToady> well, there's a bit of syntax in there too...

[17:38] <moritz_> aye ;)

[17:38] *** Psyche^ joined
[17:38] *** Psyche^ is now known as Patterner

[17:39] *** cmarcelo left
[17:40] <moritz_> that quote was from http://www.perlmonks.org/?node_id=645520 btw

[17:40] <lambdabot> Title: Re^3: Catalyst vs CGI::Application

[17:44] *** rindolf left
[17:46] *** jisom joined
[17:50] *** justatheory left
[17:52] *** franck___ left
[17:52] *** cognominal left
[17:54] *** cognominal joined
[17:59] *** REPLeffect_ joined
[17:59] *** REPLeffect_ left
[18:00] *** REPLeffect joined
[18:07] *** drupek12 left
[18:13] *** BooK joined
[18:20] *** cmarcelo joined
[18:25] *** justatheory joined
[18:27] *** penk left
[18:30] *** vbattsAtWork left
[18:30] *** Jedai joined
[18:33] *** franck___ joined
[18:33] *** franck___ left
[18:35] *** funktio left
[18:35] *** vbattsAtWork joined
[18:39] *** Notrix left
[18:40] *** fglock left
[18:41] *** Aankh|Clone joined
[18:48] *** Torment left
[18:48] *** drupek12 joined
[19:00] *** Aankhen`` left
[19:03] <avar> fax: cat t/kp6/35-undef.t | perl script/kp6 -lisp | sbcl

[19:03] <avar> Error: The index 666 is too large.

[19:04] <fax> I fixed that now :p

[19:04] <pugs_svnbot> r18454 | fax++ | [kp6-lisp] Array out of bounds access returned undef now

[19:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18454

[19:04] <avar> fax: the problem is doing my @a; @a[666]; lookup tries to search for stuff without checking how large the array is

[19:04] <lambdabot> Title: Changeset 18454 - Pugs - Trac

[19:05] <avar> whee:)

[19:05] <fax> I am sort of trying to get $counter := 1;

[19:05] <fax> to work now

[19:05] <fax> $counter := $other_counter; works though

[19:05] <avar> bindings?

[19:05] <fax> yes binding for values

[19:05] <avar> awesome

[19:06] <clkao> 6/win 25

[19:06] <avar> I don't really know what that entails

[19:06] <fax> me neither :p

[19:06] <fax> I will probably figure it out

[19:06] <fax> (I hope so..)

[19:07] <fax> Do you know what /c is short for in lookup-lexical-variable/c ?

[19:08] <avar> it returns a cell as opposed to the variable, itself. I have no idea what cells are supposed to be

[19:08] <fax> ah ok

[19:08] <fax> it seems like it uses cells for bindings to variables

[19:10] *** blindfish joined
[19:20] * avar wonders what the crap this macro soup in global.lisp is supposed to be

[19:20] <integral> debian-- # stupid perl-doc

[19:21] <moritz_> integral: what's stupid about it?

[19:22] <integral> it's not installed by default

[19:22] <pugs_svnbot> r18455 | avar++ | [kp6-lisp] Implemented not()

[19:22] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18455

[19:22] <lambdabot> Title: Changeset 18455 - Pugs - Trac

[19:34] <avar> integral-- # debian is always right

[19:35] <Tene> avar-- # I like docs

[19:35] <moritz_> debian++ # just to compensate :)

[19:36] <avar> Tene-- # Install perl-doc then

[19:36] <avar> karma war!

[19:36] <integral> it's just because perl's part of the base install.  If I'd installed it with aptitude I'd have gotten perl-doc or at least seen it.

[19:37] <[particle]> karma--

[19:37] <rgs> debian-- # weird @INC

[19:37] <integral> no, it's a sensible FHS compliant and useful @INC

[19:41] *** rindolf joined
[19:41] *** TJCRI left
[19:47] <fax> In pugs, my $x; my $y; $x = 0; $y = 666; $y := $x; $x := 1; say "$x & $y"

[19:47] <fax> that says "1 & 0"

[19:47] <fax> is that right?

[19:48] <Tene> pugs: my $x; my $y; $x = 0; $y = 666; $y := $x; $x := 1; say "$x & $y"

[19:48] <exp_evalbot> OUTPUT[1 & 0␤]

[19:48] <[particle]> yes, that's right

[19:48] <Tene> Yes, that's right.

[19:48] <[particle]> y is bound to x

[19:48] <Tene> fax: do you expect something different?

[19:48] <fax> I expected 1 & 1

[19:48] <Tene> pugs: my $x; my $y; $x = 0; $y = 666; $y := $x; $x = 1; say "$x & $y"

[19:48] <exp_evalbot> OUTPUT[1 & 1␤]

[19:49] <PerlJam> fax: why?  you changed where $x was

[19:49] <Tene> your last assignment was rebinding $x

[19:49] <integral> when you set $x the last time, you're *binding* it, not assigning to it

[19:49] <fax> aha!

[19:49] <fax> ok thanks I get it now

[19:49] <PerlJam> fax: have you ever using redirection from a unix command line?  It's the same as the difference betweeen 2>&1 >/dev/null and >/dev/null 2>&1

[19:49] <PerlJam> order of operations is important :)

[19:50] * moritz_ never quite understood why the second order doesn't work

[19:50] *** vbattsAtWork left
[19:51] <PerlJam> "doesn't work"?

[19:51] <moritz_> ... the way I expect it to work ;)

[19:51] <PerlJam> they both work.  They just do something different.

[19:51] <rindolf> What is the difference between := and = ?

[19:51] <moritz_> rindolf: := is binding, = is assignment

[19:51] <integral> rindolf: := binds, = assigns.  You're changing which box the name refers to; or changing what's inside the box

[19:51] <moritz_> rindolf: so := is kind of aliasing

[19:52] <moritz_> pugs: my $a = 2; my $b := $a; $b = 3; say $a;

[19:52] <exp_evalbot> OUTPUT[3␤]

[19:52] <rindolf> I see.

[19:52] <avar> it's also different in that = never copies "magic" like p5 does

[19:52] <avar> so my $str = $anotherstr; is like my $str = "" . $anotherstr; in p5

[19:52] <moritz_> so you have to bind subroutines, you can't assign them, right?

[19:53] <avar> uh, dunno

[19:53] <moritz_> pugs: my &a := sub { 42; }; say a();

[19:53] <exp_evalbot> OUTPUT[42␤]

[19:53] <moritz_> pugs: my &a = sub { 42; }; say a();

[19:53] <exp_evalbot> OUTPUT[*** Can't modify constant item: VStr "MkCode {isMulti = True, subName = \"&\", subType = SubPrim, subOuterPads = [], subInnerPad = MkPad (padToList []), subPackage = , subAssoc = AIrrelevantToParsing, subParams = [], subBindings = [], subSlurpLimit = [], subReturns = (mkType \"Any\"),

[19:53] <exp_evalbot> ..subLValue = False, subBody = Prim ([Pugs.AST.Internals.Val] -...]

[19:53] <avar> pugs: my $s = sub { 42 }; say $s

[19:53] <exp_evalbot> OUTPUT[<SubRoutine(<anon>)>␤]

[19:54] <avar> pugs: my $s = sub { 42 }; say $s ~ ""

[19:54] <exp_evalbot> OUTPUT[<SubRoutine(<anon>)>␤]

[19:54] <avar> pugs: my $s := sub { 42 }; say $s ~ ""

[19:54] <exp_evalbot> OUTPUT[<SubRoutine(<anon>)>␤]

[19:54] <avar> pugs: my $s := sub { 42 }; say $s 

[19:54] <exp_evalbot> OUTPUT[<SubRoutine(<anon>)>␤]

[19:54] <avar> hrm

[19:54] <moritz_> pugs: my $s = sub { 42 }; say $s();

[19:54] <exp_evalbot> OUTPUT[42␤]

[19:54] <avar> isn't $s() $s.() now?

[19:57] <[particle]> it desugars to that

[20:00] <avar> fax: I'm killing coerce.lisp :)

[20:00] <fax> ok 

[20:00] <fax> pugs: my $x; my $y; $x = 0; $y = 666; $y := $x; $x := 3; say "$x & $y"

[20:00] <exp_evalbot> OUTPUT[3 & 0␤]

[20:01] <fax> I just got that to work in kp6-lisp

[20:01] <fax> (it was saying 3 & 3 before)

[20:01] <avar> neat

[20:01] <avar> how about sub binding and whatnot?

[20:01] <fax> I've not look at that

[20:01] <fax> are there some more examples of using bindings?

[20:02] *** jisom left
[20:02] <avar> just the tests in t/kp6 I guess

[20:03] <avar> t/kp6/05-bind.t passes for you?

[20:03] <fax> yes

[20:03] <avar> 15-rebind.t ?

[20:03] <fax> yes

[20:04] <avar> awesome:)

[20:04] <fax> well I'll commit then?

[20:04] <avar> sure!

[20:05] <avar> it compiles, ship it

[20:06] <fax> haha

[20:13] <pugs_svnbot> r18456 | fax++ | [kp6-lisp] starting to bind constant values

[20:13] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18456

[20:13] <lambdabot> Title: Changeset 18456 - Pugs - Trac

[20:16] *** TJCRI joined
[20:16] <pugs_svnbot> r18457 | avar++ | Why doesn't $(echo 'say ((0).true).Str' | perl script/kp6 -lisp) produce an interpreter for :true? Find out later, hack around it in the meantime

[20:16] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18457

[20:16] <lambdabot> Title: Changeset 18457 - Pugs - Trac

[20:19] <pugs_svnbot> r18458 | avar++ | [kp6-lisp] slot-value not kp6-value

[20:19] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18458

[20:19] <lambdabot> Title: Changeset 18458 - Pugs - Trac

[20:22] <pugs_svnbot> r18459 | avar++ | Use .Str and .Num in GLOBAL.lisp to string and numify stuff. This breaks a lot of things probably

[20:22] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18459

[20:22] <lambdabot> Title: Changeset 18459 - Pugs - Trac

[20:32] <pugs_svnbot> r18460 | avar++ | generated from 18456 by fax

[20:32] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18460

[20:32] <lambdabot> Title: Changeset 18460 - Pugs - Trac

[20:32] <fax> oh I'm mean to commit that :S

[20:32] <fax> I especially removed it from the list of files to commit..

[20:32] <fax> I'll remember next time

[20:33] <avar> don't sweat it

[20:33] *** rindolf left
[20:37] <avar> down to 24 failing tests from 32 yesterday:)

[20:37] <fax> cool :D

[20:38] <avar> some regressions due to my last commit though. I'll fix those

[20:39] *** BooK left
[20:40] *** barney left
[20:41] <pugs_svnbot> r18461 | avar++ | [kp6-lisp] $Int.Str implemented

[20:41] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18461

[20:41] <lambdabot> Title: Changeset 18461 - Pugs - Trac

[20:41] <avar> 23 now at least:)

[20:42] *** riffraff left
[20:43] <avar> *22

[20:43] *** thoughtpolice joined
[20:49] *** vbattsAtWork joined
[20:49] *** vbattsAtWork left
[20:54] *** mr_ank left
[20:56] <avar> hrm, 32 actually, I probably didn't compile them all

[21:00] *** TJCRI left
[21:01] *** diegoray left
[21:08] *** Limbic_Region joined
[21:13] <avar> fax: trying to get $sub.($param) working

[21:20] *** lichtkind left
[21:29] *** Aankh|Clone left
[21:32] *** Notrix joined
[21:32] *** Notrix left
[21:33] *** elmex left
[21:38] <pugs_svnbot> r18462 | fglock++ | [kp6] pod ends in =end

[21:38] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18462

[21:38] <lambdabot> Title: Changeset 18462 - Pugs - Trac

[21:46] *** blindfish left
[22:20] *** justatheory left
[22:30] *** mr_ank joined
[22:32] *** amnesiac left
[22:43] *** jernster left
[22:59] *** cmarcelo left
[23:03] *** iblechbot left
[23:06] *** ludan joined
[23:09] *** GeJ_ is now known as GeJ

[23:12] <ludan> hi

[23:13] *** weinig_ joined
[23:14] *** weinig_ left
[23:15] *** weinig_ joined
[23:17] <avar> ludan: hi

[23:28] *** weinig left
[23:40] *** ludan left
[23:51] *** weinig_ is now known as weinig

[23:55] *** _mjk_ joined
[23:55] <pugs_svnbot> r18463 | avar++ | [kp6-lisp] .Int implementation for Str

[23:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18463

[23:55] <lambdabot> Title: Changeset 18463 - Pugs - Trac

[23:58] <pugs_svnbot> r18464 | avar++ | [kp6-lisp] :Num not :num, not that it matters. But it feels sooo much better

[23:58] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18464

[23:58] <lambdabot> Title: Changeset 18464 - Pugs - Trac

