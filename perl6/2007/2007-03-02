[00:01] <TimToady> j

[00:03] *** nipra joined
[00:09] *** mako132 joined
[00:14] <cj> TimToady: hurm... I should check to see if I've got the right fonts installed then!

[00:15] <cj> TimToady: what font packages do you recommend?  do you run debian?

[00:17] <TimToady> cj: fedora

[00:18] <TimToady> if it's a font issue, usually they'll put something consistent for the glyphs they don't have

[00:19] <TimToady> but if you're getting gobbledygook, it's probably an encoding issue

[00:20] <TimToady> make sure LANG=en_US.UTF-8 for instance

[00:20] *** [particle] joined
[00:25] <putter> dinner, bbl

[00:29] *** CardinalNumber joined
[00:29] *** Khisanth joined
[00:29] *** macli left
[00:39] *** diakopter joined
[00:48] *** CardinalNumber is now known as ProperNoun

[01:09] *** nicodaemos joined
[01:12] *** CardinalNumber joined
[01:16] <offby1> what a coincidence!  My cat is eating dinner too

[01:19] *** IllvilJa left
[01:26] <svnbot6> r15404 | lwall++ | neglected to convert nameroots to new sym form

[01:26] <svnbot6> r15404 | lwall++ | generalized syntax to allow "use" before file-scope package declarator

[01:30] *** CardinalNumber is now known as ProperNoun

[01:35] *** CardinalNumber joined
[01:45] *** Limbic_Region left
[01:52] *** CardinalNumber is now known as ProperNoun

[02:10] *** meppl joined
[02:14] *** meppl joined
[02:18] <putter> let's see... aliases...

[02:20] *** dmq joined
[02:31] *** rhizo is now known as PEARLDALEK

[02:31] *** PEARLDALEK is now known as rhizo

[02:37] *** bonesss joined
[02:37] *** bonesss joined
[02:43] *** rashakil joined
[02:44] *** mod_cure joined
[02:46] *** |PrinCo| joined
[02:48] * |PrinCo| #projectoX la nueva sala en español para ayuda sobre temas relacionados con windows y linux ;) todo los temas/probemas sera solucionados ;);)

[02:48] *** |PrinCo| left
[02:50] *** REPLeffect_ joined
[02:52] <mod_cure> wonder when Perl6 will be out

[02:52] <tene> mod_cure: christmas

[02:52] <tene> we don't know the year, though

[02:52] <mod_cure> i been waiting sinxe 2002 :)

[02:54] <rodi> mod_cure: christmas has come like four times since then...

[02:54] <tene> Well, it might be this year!

[02:54] <mod_cure> u said that 4 years ago :)

[02:55] <rodi> it was as true than as it is now!

[03:07] <diakopter> "is this a rhetorical question?"

[03:12] *** bucky joined
[03:13] <bucky> Randal Schwartz has had his conviction expunged

[03:14] <revdiablo> Source? =)

[03:14] <revdiablo> Cite your sources!

[03:14] <TreyHarris> bucky: !!

[03:14] <bucky> http://it.slashdot.org/article.pl?sid=07/03/02/0117257&from=rss

[03:14] <lambdabot> Title: Slashdot | Randal Schwartz's Charges Expunged

[03:14] <TreyHarris> he said something about going to court today

[03:14] <bucky> heh

[03:15] <revdiablo> Neat

[03:15] <bucky> yah

[03:15] <bucky> 13 years of prosecutorial persecution

[03:17] <TreyHarris> oops.  apparently this happened a month ago already

[03:17] * TreyHarris has been out of the loop

[03:17] <TreyHarris> i got spanked for mentioning it on another channel :)

[03:18] <bucky> effective 1 Feb 2007

[03:19] <allbery_b> heh

[03:20] * allbery_b doesn't think he still has the scrollback from when randal popped in here himself and announced it

[03:22] <bucky> BTW thanks to Orrin Hatch and the Patriot Act, the crime of computer intrusion is now punishable to up to a term of life in prison

[03:24] <cj> TimToady: $ echo $LANG

[03:24] <cj> C

[03:24] <cj> d'oh

[03:25] <bucky> heya cj

[03:27] *** kdevin joined
[03:54] <allbery_b> hm.  wonder how much of a speedup pugs would get if there were a precompiled prelude va Data.Binary?

[03:54] <cj> hey TreyHarris 

[03:54] <cj> how's life?

[03:55] <cj> hey there bucky

[03:55] <cj> what's going on?

[03:55] * cj re-sets his $LANG... BRB

[03:57] *** cj joined
[03:57] <cj> say something in kanji! :)

[03:57] <bucky> cj jan kneschke had a UDF called UDF-mysql_udf_lua-0.9.3.tar.gz  do you know anything about it?

[04:01] *** mako132 joined
[04:29] *** justatheory joined
[04:54] *** leed joined
[04:55] *** rod1 joined
[05:00] *** amnesiac joined
[05:11] *** REPLeffect_ left
[05:12] <tene> Has a trait to indicate caching on a function been specced yet?

[05:12] <tene> "is cached" or "is memoized" or some such?

[05:15] *** drupek12212157 joined
[05:17] <TimToady> well, if you just grep the specs for "cached" you might find something

[05:19] <tene> Huh.  I thought I did that.

[05:19] <tene> Thanks.  Apology.

[05:23] <TimToady> cj: 漢字で何か

[05:24] <putter> ah well.  downside is still no aliases.  upside is some pugs t/regex/  files now run.  three even pass.

[05:24] <svnbot6> r15405 | putter++ | yet_another_regex_engine - Some pugs t/regex/ test files now run.  A couple even pass.  See README.

[05:25] *** cognominal joined
[05:28] <putter> TimToady: on reflection, it seem premature to attempt STD on yet_another, which still lacks ratchet, sigspace, etc.  maybe in a calendar week or three.

[05:28] <TimToady> whatever, it's just the target

[05:28] <TimToady> don't stress

[05:29] <putter> :) k

[05:34] <cj> bucky: not off the top of my head.  I don't even know what UDF might happen to be.  Ulf Wendel and Mike Zinner did something with lua at one point... you might google them and ask if they know...

[05:34] <cj> TimToady: d'oh.  I blame putty.

[05:34] * cj makes a late-night diaper run

[05:34] <TimToady> putty does utf8 okay

[05:35] <cj> hurm... let me twiddle some bits then...

[05:35] <bucky> cj, you know.. User Defined Function

[05:35] <cj> TimToady: oh, right... I probably need to install some fancy win32 fonts...

[05:35] <bucky> cj, do you work with Brian Acker?

[05:36] <cj> bucky: Aker, probably, yes?

[05:36] <bucky> s/Acker/Aker

[05:36] <cj> bucky: I work with him on occasion, yes.  But I work for Amazon these days, and not MySQL.  I switched over in June/July 06

[05:36] <bucky> oh.. nm

[05:37] <cj> I had a computer in his basement for a couple of years.  He's good at providing infrastructure :)

[05:37] <bucky> seems like a cool guy http://krow.net/index.pl?node_id=32

[05:37] <lambdabot> Title: Brian "Krow" Aker Presents: brian

[05:38] <cj> TimToady: hurm... Maybe I'm still stuck on the LANG stuff... how do I change my locale from C to en_US.UTF-8?

[05:39] <cj> TimToady: you did say that it would look like placeholder characters if I don't have the fonts, but have everything else set up correctly, didn't you?

[05:39] <cj> there's probably a HOWTO around here somewhere, and I shouldn't be bothering you for your precious time :)

[05:41] <TimToady> LANG is just an environment variable, so you'd set it in your .bashrc or equivalent

[05:41] <TimToady> putty has a menu somewhere to tell it to interpret text as utf8

[05:43] <cj> TimToady: woo!  That got closer... now I need fonts...

[05:43] * cj googles kanji win32 fonts

[05:44] <cj> bah.  I'll do this later.  diapers need getting :)

[05:44] <putter> parting strawman hypothesis: once we have pugs oo and a regex engine, it might be worth doing a javascript implementation to exercise the oo.  the js 1.x spec is mechanically convertible to p6 code.  there's a years old one-day effort somewhere in misc.

[05:46] <putter> the motivation is we don't have much p6 oo code to exercise the oo implementation.  whereas js has a testsuite and assorted code.  this might be an approach to shaking down the oo impl mechanically, rather than waiting for average users to trip over the inevitable bugs.

[05:47] <putter> g'night &

[05:52] *** Schwern joined
[05:58] *** Eidolos joined
[06:14] *** BooK_ joined
[06:24] *** cognominal joined
[06:26] *** rfordinal joined
[06:31] *** stevan_ joined
[06:36] *** rod2 joined
[06:46] *** bsb left
[07:00] *** dduncan left
[07:03] *** CardinalNumber joined
[07:19] *** the_dormant joined
[07:23] *** CardinalNumber is now known as ProperNoun

[07:33] *** Aankhen`` joined
[07:36] <gaal> audreyt: in general, how closely are we willing to go with the techniques in "Haskell's Overlooked Object System"? (the 2005 paper by Oleg and Ralf)

[07:42] *** cognominal joined
[07:45] *** iblechbot joined
[07:56] *** the_dormant joined
[08:14] *** aukjan|gone is now known as aukjan

[08:16] *** aukjan is now known as aukjan|gone

[08:17] *** forsaken joined
[08:24] *** jisom joined
[08:24] *** jisom left
[08:24] *** jisom joined
[08:37] *** Endymion joined
[08:38] <Endymion> hiho

[08:40] *** marmic joined
[08:40] <tene> hi!

[08:45] *** lichtkind joined
[08:52] <lichtkind> good morning your camels :)

[08:53] *** mako132 joined
[09:13] *** CardinalNumber joined
[09:18] *** buetow joined
[09:26] <svnbot6> r15406 | gaal++ | * minor cleanup

[09:26] <svnbot6> r15406 | gaal++ |   (More points-free would have merge_clean simply as "map . filter . (/=)";

[09:26] <svnbot6> r15406 | gaal++ |   I don't know if that's clearer.)

[09:32] *** CardinalNumber is now known as ProperNoun

[09:36] *** Ziggy6 joined
[09:37] *** idiotmax joined
[09:38] *** spinclad joined
[09:42] *** buetow joined
[09:57] *** meppl joined
[10:05] *** andara joined
[10:09] *** drrho joined
[10:29] *** IllvilJa joined
[10:35] <svnbot6> r15407 | gaal++ | * fixed-point golf: get "HOW" and "WHICH" methods on all pure

[10:35] <svnbot6> r15407 | gaal++ |   classes automatically.

[10:35] <buubot> Current winner is buu with 85 characters: ZOMG SCARY STUFF

[10:37] <tene> ???

[10:37] <tene> buubot--

[10:37] <buubot>  is a potvaliant land-lubber!appeared to work above, right?

[10:56] *** ruoso joined
[11:10] *** fglock joined
[11:12] *** cmarcelo joined
[11:16] <cmarcelo> @tell gaal re: mutable classes, http://dev.pugscode.org/browser/docs/notes/mo-bootstrap-plan.pod?format=raw maybe helpful.

[11:16] <lambdabot> Consider it noted.

[11:34] *** wilx joined
[11:35] *** CardinalNumber joined
[11:45] <cmarcelo> @tell gaal in [15407], how "fix" know when to stop? it's like it is iterating until the function "converges"?

[11:45] <lambdabot> Consider it noted.

[11:46] <gaal> @massages

[11:46] <lambdabot> cmarcelo said 29m 42s ago: re: mutable classes, http://dev.pugscode.org/browser/docs/notes/mo-bootstrap-plan.pod?format=raw maybe helpful.

[11:46] <lambdabot> cmarcelo said 1m 34s ago: in [15407], how "fix" know when to stop? it's like it is iterating until the function "converges"?

[11:46] <gaal> cmarcelo: re: fix, lazy evaluation

[11:47] *** |newbie| joined
[11:47] <gaal> I can't find a good explanation online, I remember there was one

[11:47] <gaal> it's pretty !ing, I agree :)

[11:48] <gaal> but assuming you grok the Y combinator in principle, think of it as a magical implementation of it

[11:48] <audreyt> fix f = let x = f x in x

[11:48] <lambdabot> audreyt: You have 4 new messages. '/msg lambdabot @messages' to read them.

[11:49] <audreyt> gaal++ # let fix = fix fix in fix!

[11:49] <audreyt> fix is not that magical compared to mfix

[11:49] <audreyt> mfix is mind-bogglingly magical

[11:49] <gaal> y my nexy Q for you was whether MutClass should use mfix. :)

[11:50] <gaal> if indeed we were to use a monadic class for mutable classes

[11:50] <audreyt> nay they are orthogonal

[11:50] <audreyt> currently we still use const self

[11:50] <gaal> so despite the notes cmarcelo++ linked me to, where does the mutability come from?

[11:51] <audreyt> but ^Str.add_method is the same as ^Scalar.add_method

[11:51] <audreyt> it comes after we get Pugs.Prim ported

[11:51] <audreyt> then we augment the "MI" data type

[11:51] <audreyt> where it only contains a table of methods

[11:51] <cmarcelo> gaal: ok.. in some sense it was like I was imagining.. but, what does "!ing" mean? :P

[11:51] <audreyt> it will carry a mutable table of methods

[11:51] <audreyt> shocking

[11:52] <gaal> which reminds me, does ByteString have unicode-aware toUpper etc. functions? I was looking for them

[11:52] <gaal> cmarcelo: think Chess notation, where "!" means a surprising and stong move

[11:52] <audreyt> gaal: no, and it doesn't need to

[11:52] <audreyt> hint: use perl5embed

[11:53] <gaal> oi

[11:53] <gaal> I knew you'd say that :)

[11:53] <audreyt> the p5 unicode core is _nice_

[11:53] <audreyt> it's just the surface semantic is borderline braindead

[11:53] <audreyt> but we avoid that

[11:53] <audreyt> the engine can totally be reused

[11:53] <audreyt> I consider it saner than linking libICU

[11:53] <audreyt> and our p5 bridge already is SvUTF8_on()

[11:54] <audreyt> so should be straightforward to just call uc() on p5 land

[11:54] <audreyt> please make some very easy shorthand for that :)

[11:54] <gaal> is p5 unicore exposed?

[11:54] <audreyt> just call &uc

[11:54] <audreyt> it should Transparently Work (tm)

[11:54] *** CardinalNumber is now known as ProperNoun

[11:54] <gaal> that will also work, but doesn't it entail some overhead?

[11:54] <audreyt> not more than calling a normal p5 function

[11:54] <audreyt> I wouldn't care that much

[11:55] <audreyt> also makes augmenting code easier

[11:55] <audreyt> you really don't want to write XS at this stage, trust me :)

[11:55] <gaal> okay.... the plan is to implement that stuff in Perl 6 evenually, yes?

[11:55] *** ruoso joined
[11:55] <audreyt> not until several milestones from now

[11:55] <audreyt> so no

[11:55] <audreyt> yes re "eventually"

[11:55] *** chris2 joined
[11:55] <audreyt> no re "plan"

[11:56] <audreyt> of course if you find it fun by all means do it... but I don't think it's sensible to move that much runtime into p6

[11:57] <audreyt> C-land stuff is still sensible for Unicode

[11:57] <gaal> well, I mean, how tightly coupled do we want to be with perl5?

[11:57] <audreyt> and p5 is as good as any

[11:57] <audreyt> for the Pugs Haskell+Perl dual runtime

[11:57] <audreyt> I think forever

[11:57] <gaal> okay

[11:58] <audreyt> I don't see a good way to do DBI.xs compat

[11:58] <audreyt> beyond what we already have

[11:58] <audreyt> not convinced that "Ponie for Pugs" can work

[11:58] <gaal> now, re the Moose thing, picking up last night's thread...

[11:58] <audreyt> but glad to be proven wrong by someone eventually :)

[11:58] <audreyt> ok. the idea is that when you declare 

[11:58] <audreyt> "class Foo { ... }"

[11:58] <audreyt> in p6-land

[11:58] <gaal> does the glue write Moose bridges automoosically?

[11:58] <audreyt> it should generate a corresponding perl5 symtable

[11:58] <audreyt> *perl6::Foo

[11:59] <audreyt> most likely

[11:59] <audreyt> yes, that I think is the plan. it runs Moose bridgecode

[11:59] <gaal> there's some old stuff in DrIFT/Perl6Class

[11:59] <audreyt> yes, aware of that

[11:59] <audreyt> I'm still evaluating the possibility of dyld

[12:00] <moritz> hey, what about a C to perl 6 translator, and use that on the p5 source code </kidding> ;)

[12:00] <audreyt> that is it generates a genuine Haskell data structure

[12:00] <audreyt> use ghci to compile it

[12:00] <audreyt> then byteload it

[12:00] <audreyt> and drift it

[12:00] <audreyt> and eval that in p5 land

[12:00] <audreyt> the gain is that compact structures gets to be really compat

[12:00] *** aukjan|gone is now known as aukjan

[12:00] <audreyt> but that is optional and not relevant to getting 6.28.0 released

[12:00] <audreyt> maybe 6.28.1 or .2

[12:01] <gaal> .. is that the libGHC idea mentioned in that note?

[12:01] <audreyt> yes./

[12:01] <gaal> ok let me see if I understand the picture

[12:02] <gaal> Parse "class {...}" -> Hs code -> ??? -> P5 Moose code -> P5bridge

[12:02] <audreyt> or rather, class {...} generates a series of MO calls

[12:03] <audreyt> that in turn generates Hs code and p5 moose code

[12:03] <gaal> which are compiled to Hs code?

[12:03] <gaal> ah y

[12:03] <audreyt> yes

[12:03] <audreyt> but the 6->5 bridge I intend to do after 5->6

[12:03] <gaal> runtime drifiting, heh

[12:03] <audreyt> instance Boxable Eval PerlSV -- I want to get this written first

[12:04] <Juerd> Anyone in here going to the European hackathon today?

[12:04] <gaal> Juerd: not unless I can borrow a teleporter

[12:05] <audreyt> a time machine will also do

[12:05] <Juerd> I'd lend you mine, but I'd need another teleporter for that :)

[12:05] <Juerd> Otherwise it turns inside out during.

[12:06] <Juerd> And eventually teleports everything surrounding it, but not itself.

[12:06] <audreyt> if a p5p hacker gets online via dial-up, does that make a teleporter?

[12:06] <Juerd> This happened already in some parts of the world. They now drive on the wrong side of the road, as a result.

[12:07] <moritz> Juerd: currently I am in such a country... it's not the only thing that changed ;)

[12:08] <gaal> audreyt: so actually the 5->6 is pretty critical now, if we're to delegate much of stringy Prim to it

[12:09] <gaal> I'm not familiar with the existing 5->6 bridge at all

[12:09] <gaal> what does "si" in MO.si stand for?

[12:10] <gaal> hmm okay, I'm called off for lunch now...

[12:10] <gaal> (single invocant?)

[12:10] <cmarcelo> gaal: single inheritance..

[12:10] <gaal> ah, okay :)

[12:10] *** fglock joined
[12:10] <gaal> *waves* &

[12:11] <cmarcelo> but si.hs is a file used for testing... :o)

[12:11] <cmarcelo> see you.

[12:13] <gaal> (this is a pretty minor detail but we probably want a p5prelude too, to implement things like &capitalize without hitting the bridge muliple times)

[12:19] <fglock> I've been thinking on a low-level p6lib (possibly in C) that could be used by pugs, v6.pm, and also be converted to pmcs too

[12:23] *** rindolf joined
[12:23] <rindolf> Hi all!

[12:23] <rindolf> Does anyone know what is the channel for the hackathon today?

[12:25] <moritz> @seen all

[12:25] <lambdabot> I haven't seen all.

[12:25] <moritz> ;)

[12:25] <moritz> rindolf: you're out of luck ;)

[12:26] *** rindolf is now known as all

[12:26] *** all is now known as rindolf

[12:26] <rindolf> Wonder who took the "all" nickname.

[12:32] <pasteling> "cmarcelo" at 200.245.119.10 pasted "error doing 'svk pull' @ feather" (17 lines, 586B) at http://sial.org/pbot/23256

[12:51] *** yhsuan joined
[12:54] *** elmex joined
[12:55] <shay> hi folks

[12:56] <shay> cmarcelo, I know that glibc bug

[12:56] <shay> give me a sec

[13:01] <shay> oh, it's not the same error :/

[13:05] <audreyt> cmarcelo: maybe pull file:///data/svn/pugs

[13:11] *** Limbic_Region joined
[13:13] * avar says hi to feather's webserver

[13:14] <cmarcelo> hmm.. should //mirror/pugs point to file:///... too?

[13:17] <cmarcelo> it exists already. its //mirror/local :o)

[13:21] *** the_dormant joined
[13:25] *** avarab joined
[13:31] *** iblechbot joined
[13:35] *** gnuvince_ joined
[13:48] *** avar joined
[14:06] <Limbic_Region> salutations all

[14:12] *** drupek12212157 joined
[14:15] <cmarcelo> ola

[14:16] *** Lorn joined
[14:31] *** bernhard joined
[14:35] *** weinig|bbl is now known as weinig

[14:48] *** diakopter joined
[14:50] *** penk joined
[15:05] *** fglock joined
[15:08] <rindolf> Hi all!

[15:09] <rindolf> So where's the Hackathon IRC channel?

[15:11] *** amnesiac joined
[15:14] <moritz> rindolf: is that a parrot hackathon?

[15:15] <rindolf> moritz: http://conferences.yapceurope.org/hack2007nl/

[15:15] <lambdabot> Title: European Perl Hackathon 2007 - The Netherlands - Home

[15:15] *** rashakil_ joined
[15:15] <rindolf> moritz: they also work on Perl 6 and Parrot.

[15:15] *** kanru joined
[15:17] *** forsaken joined
[15:22] * bernhard greetings from the hackathon in Arnhem

[15:23] <fglock> bernhard: is there an IRC channel for the hackathon?

[15:23] *** bernhard joined
[15:23] <fglock> bernhard: is there an IRC channel for the hackathon?

[15:25] <bernhard> I think we use #hackathon on MagNet irc.perl.org

[15:30] *** vel6608 joined
[15:34] <rindolf> Hi bernhard 

[15:36] <bernhard> Hi

[15:47] <cj> bernhard: what are you hackath on?

[15:57] *** rashakil__ joined
[15:59] *** forsaken joined
[16:01] *** aukjan is now known as aukjan|gone

[16:05] *** cognominal joined
[16:09] <gaal> moose

[16:09] <svnbot6> r15408 | andara++ | [runpugs]

[16:09] <svnbot6> r15408 | andara++ | -refactoring Server.pm to catch race hazard in preloaded session management.

[16:09] <svnbot6> r15408 | andara++ | -adding testing framework.

[16:10] *** turrepurre joined
[16:17] *** bonesss joined
[16:20] <rindolf> Hi gaal 

[16:38] <PerlJam> The perl.com article on perl 6 has two comments to the effect of "we want lots more perl 6 articles"

[16:38] <svnbot6> r15409 | andara++ | [runpugs] -cleaning up obsolete files

[16:38] <PerlJam> I imagine that's a common sentiment

[16:40] <TimToady> 'course, even this one's a little bit wrong.  A file starting with 'package' should be considered Perl 5, not Perl 6.  Wanted 'module" there...

[16:42] <gaal> hi rindolf. I'm not really here.

[16:42] <gaal> what perl.com article?

[16:42] <kolibrie> gaal is tele-porting?

[16:42] <TimToady> http://www.perl.com/pub/a/2007/03/01/perl-6-parameter-passing.html

[16:42] <lambdabot> Title: perl.com: The Beauty of Perl 6 Parameter Passing, http://tinyurl.com/2x2opj

[16:43] *** rod1 joined
[16:43] <gaal> oh, nice. reading...

[16:43] * kolibrie too

[16:43] <TimToady> just be sure to s/package/module/ in your head

[16:44] <TimToady> other than that, a good article

[16:45] <gaal> human parsers are usually transparently error-correcting. to the chagrin of copyeditors...

[16:50] <svnbot6> r15410 | fglock++ | PCR - updated TODO

[16:54] <gaal> I'd have mentioned variable declaration and calling converntions were merged; and explained the recommendation against using Perl for numeric computations.

[16:55] <gaal> re-&

[16:56] *** IllvilJa joined
[16:56] *** Ziggy6 left
[16:56] *** Ziggy6 joined
[16:58] *** lichtkind joined
[17:00] *** fglock joined
[17:01] <PerlJam> TimToady: I don't know ... I thought the article didn't give enough explanations.

[17:01] <TimToady> I didn't call it an excellent article :)

[17:03] <PerlJam> I was going to spend some time playing with parrot/cardinal this weekend but maybe I could cobble together a perl6 article for perl.com or TPR or any other venue that'll have it.

[17:04] <PerlJam> (Becaise I tend to agree with the commenters that we need more perl 6 articles :-)

[17:04] <TimToady> we do need multiple voices explaining things on various levels

[17:04] <PerlJam> s/ais/aus/

[17:04] *** thepler joined
[17:06] <PerlJam> The hardest part (for me) would be picking a narrow enough topic to write on.  There's just *so* *much* ... stuff  in perl 6  :-)

[17:06] *** andara left
[17:07] <kolibrie> my problem is forgetting that people are not familiar with Perl 6 syntax

[17:08] <TimToady> and part of the problem is that you're writing for two very different audiences simultaneously

[17:08] <TimToady> those who know Perl 5 syntax, and those who don't.

[17:10] <offby1> I would gently suggest: if you cannot please both, then write for the new users, not the old.  Assume that, five years from now, more people will be writing perl6 than perl5 (i.e., plan to succeed)

[17:10] <offby1> this from a perl5 user.

[17:11] *** drupek12212157 joined
[17:13] <PerlJam> offby1++  good advice I think.

[17:13] <TimToady> sure, I agree completely, but...

[17:13] <TimToady> the downside of it is

[17:14] <TimToady> if the P5 people perceive that they're being written off, they will also feel free to ignore you

[17:14] <[particle]> say "{ newton(8, \&f, verbose => 1, epsilon => .00005) }";

[17:14] <TimToady> and then you get what we see continually in p5p--piecemeal solutions to individual RFC problems

[17:14] <[particle]> can \&f be &f?

[17:15] <TimToady> why is there a \ in the first place?

[17:15] <[particle]> does &f invoke, or is it just a sigil?

[17:15] <[particle]> i think it's an error

[17:15] <TimToady> the & never invokes in P6

[17:15] <[particle]> it's too perl5y

[17:15] <PerlJam> I wonder if we shouldn't submit corrections to the author (or the editor) before too many people read that article :)

[17:16] <TimToady> also, the say "{...}" is a bit strange since say ... does the same.

[17:16] * [particle] sometimes thinks of  as a twigil in p5 :)

[17:16] <[particle]> pidgin perl 6

[17:16] <PerlJam> [particle]: then you've got something backwards as the \ normally comes first ...  \$thing  # $ is the "twigil"  here

[17:17] <[particle]> pj: i know, it's just that \ is used so frequently in p5 that it's twigil-like

[17:18] <[particle]> and \ will be used so infrequently in p6, i feel

[17:18] <[particle]> in fact, if you need a new twigil, \ could be a candidate

[17:18] <TimToady> still and all, I like the way he's doing it better than the way other people aren't doing it.  :)

[17:18] <PerlJam> :-P

[17:18] <[particle]> agreed! i plan on writing a lot of pidgin p6

[17:19] <PerlJam> TimToady: will you be around #perl6 later tonight and this weekend?

[17:19] <TimToady> yes, for the most part.  have to sneak some $job in there as well though.

[17:20] <PerlJam> If my kids don't distract too much, I'll start writing something and I'll want an expert opinion  :-)

[17:20] <PerlJam> speaking of $job ... back to work for me!

[17:20] <[particle]> is there a difference between {foo(...)}.say and foo(...).say?

[17:20] <TimToady> I'll be glad to give feedback

[17:21] <TimToady> the first one will try to print a closure instead of calling it?

[17:21] <TimToady> {foo(...)}().say would be the same

[17:21] <offby1> ooh! closures print?

[17:21] <TimToady> "try to"

[17:21] <offby1> :-(

[17:22] <TimToady> ?eval {1+1}.say

[17:22] <evalbot_r15410> OUTPUT[<SubBlock(<anon>)>␤] Bool::True

[17:22] <TimToady> ?eval {1+1}().say

[17:22] <evalbot_r15410> OUTPUT[2␤] Bool::True

[17:23] <TimToady> closures never autocall themselves unless in a calling context of some sort.  use as bare statement, use before (), use in regex, etc.

[17:24] <TimToady> much like &foo never autocalls itself without context.

[17:32] <TimToady> now I'm wondering whether our current module names are sugar for the general adverbial names

[17:33] <TimToady> use Foo:v<1.2.3>:auth<JRANDOM>

[17:33] <TimToady> use :root<perl5>:DBI:6.0:auth<JRANDOM>:foo<bar>:baz

[17:33] <TimToady> assuming :6.0 desugars to :v<6.0> or some such

[17:34] <TimToady> that also would solve the problem of :root<C#> and :root<C++> not being identifiers

[17:36] <TimToady> use :DBI<6.0>:root<perl5> shows some other possibilities

[17:37] <[particle]> i like having the root up front

[17:38] <TimToady> use:root<perl5> DBI(:1.2.3, :auth<TBUNCE>)

[17:38] <[particle]> hrmm

[17:39] <[particle]> with a default root of perl6

[17:40] <[particle]> are parens required there? i'll have to check up on that syntax again

[17:40] <TimToady> or do the trick we were doing with :sym<foo> and make use:perl5 mean use:root<perl5> for identifiers

[17:40] <TimToady> we're talking new syntax here

[17:40] <TimToady> I'm just trying to think about what really modifies what

[17:40] <[particle]> i'm thinking about existing syntax, so see how close the new syntax is

[17:41] <[particle]> i think the root modifies use, as the import routine will differ based on library language

[17:41] <TimToady> use:<C#> Foo:(...)

[17:43] <TimToady> use:perl5 DBI:(version => 1.2.*, auth => 'TBUNCE')

[17:43] <TimToady> thinking of use:<C#> as more the infix:<*> syntax here

[17:45] *** cmarcelo joined
[17:45] <[particle]> use DBI of perl5 is :(version<1.2.3>)

[17:45] <TimToady> couple things wrong with that

[17:46] <TimToady> perl5 is not a type

[17:46] <TimToady> and "is" basically means : already

[17:46] <[particle]> i like use:perl5 better anyway

[17:47] *** wilx` joined
[17:47] <[particle]> use:<perl5> DBI is {version<1.2.*>, author<TBUNCE>}

[17:47] <cj> what benefit do you see the <...> providing?

[17:47] <TimToady> anyway, it bugged me that my grammar had to have cplusplus

[17:47] <cj> ah.  special character escaping?

[17:47] <TimToady> <...> quotes

[17:48] <TimToady> :<C#>

[17:48] <cj> maybe optional?

[17:48] <TimToady> yes, optional for ident

[17:48] <TimToady> :perl5

[17:49] <TimToady> use:cobol COLLATE_BUSINESS_FORMS

[17:50] <TimToady> maybe allow Foo-1.2.3 as sugar, but nothing with - beyond that maybe

[17:50] <TimToady> Or just make Foo:1.2.3 work right

[17:51] <[particle]> :v1.2.3 wouldn't be horrible

[17:51] <TimToady> would still have to be a special case adverbial form

[17:52] <[particle]> hrmm

[17:52] <TimToady> :16<dead_beef> might require brackets, and :16.42 could be version

[17:52] <[particle]> don't we have a colon number form for base/radix conversion?

[17:53] <TimToady> but it would still have to special-case the .

[17:53] <TimToady> just wondering if people will get used to the notion of reading :1.2 as a version

[17:54] <[particle]> no, but :v1.2 they might

[17:54] <[particle]> or v:1.2

[17:54] *** penk joined
[17:54] <TimToady> :v<1.2>

[17:54] <TimToady> hmm, that's just a Pair

[17:55] <[particle]> that will work today

[17:55] <TimToady> but

[17:55] <TimToady> it wants a special syntax to force Version object construction

[17:55] <TimToady> or we fall into the v-strings fallacy again

[17:55] <[particle]> hrmm

[17:56] <[particle]> can it be typed that way?

[17:56] <[particle]> have use accept a param v of type Version

[17:56] <TimToady> in context it's a version, but I'm thinking about version literals

[17:56] *** justatheory joined
[17:57] <TimToady> v1.2.3 would map nicely to :v1.2.3 to use a literal as an option

[17:58] <TimToady> but have to think about wildcard version literals

[17:58] <TimToady> can get away with v1.2.* at least

[17:59] <TimToady> but anything more complicated is going to require brackets, and then it starts going strange

[17:59] * offby1 wonders how IRC will have affected the design of perl6 as compared to perl5

[17:59] <TimToady> v({ matchme()}) is just a function call

[17:59] <TimToady> and :v(...) is just a pair again.

[18:00] <TimToady> offby1: this seems like apples and oranges to me

[18:00] <TimToady> IRC is not a language exactly

[18:01] <TimToady> what aspect of IRC are you thinking of?

[18:01] <offby1> just that you're thinking out loud with so many people now

[18:01] <offby1> I assume that wasn't the case back in perl5

[18:02] <TimToady> oh, I misparsed your sentence entirely

[18:02] <offby1> I should have used more parens :-)

[18:02] <TimToady> IRC wasn't used in the design of Perl 5 at all.

[18:02] <offby1> didn't think it would have been

[18:02] <[particle]> versions with idents will definitely be trouble :v1.2.3.beta1

[18:02] <TimToady> I only started using IRC in the AP era (after pugs)

[18:03] <[particle]> "no such method: beta1"

[18:03] * offby1 hopes TimToady, [particle], PerlJam, et al don't have aching heads from having so many ideas bounced off them

[18:03] <TimToady> so at some point you go :v<1.2.3.beta1> 

[18:03] <[particle]> right

[18:04] <TimToady> but then it's back to a pair, not a version :(

[18:04] <[particle]> so, a V operator?

[18:04] <[particle]> prefix:<V>

[18:05] <TimToady> V '1.2.3.beta1'

[18:05] <TimToady> hmm

[18:05] *** lichtkind joined
[18:05] <TimToady> I don't doubt someone will want V for something list infixish

[18:05] <[particle]> that's what multis are for

[18:06] <TimToady> just worrying about market confusion

[18:06] <[particle]> call dibs

[18:06] <TimToady> it's not pretty enough

[18:06] <[particle]> true

[18:07] <TimToady> huffmanly, probably Version('1.2.3.beta1')

[18:07] <[particle]> that's boring

[18:07] <TimToady> and :v<1.2.3.beta1> where a pair will be interpreted as a version

[18:08] <[particle]> that works

[18:08] <TimToady> so Version() only used in normal code for weird version names

[18:08] <[particle]> where versions are expected, the syntax is compact. for other reasons, you're penalized appropriately

[18:08] <TimToady> and :v contexts really just feed the :v argument to Version()

[18:08] <[particle]> s/reasons/uses/

[18:09] <[particle]> yop

[18:09] <[particle]> it's got my vote

[18:09] * TimToady wonders if v1.2.3.beta1 would still become an unfortunate faq

[18:10] <[particle]> just give them enough rope

[18:11] <[particle]> this is only a problem in locales with . as a num sep

[18:12] <[particle]> is whitespace following a list sep , required?

[18:12] <[particle]> eval? (1,2,3).say

[18:13] <[particle]> ?eval (1,2,3).say

[18:13] <evalbot_r15410> OUTPUT[123␤] Bool::True

[18:13] *** drupek12212157 joined
[18:14] <[particle]> so v1,2,3,beta1 has *other* problems

[18:18] <TimToady> we ignore the num sep cultural problem, basically, and practice cultural imperialism on that point (no pun intended)

[18:19] <[particle]> it's unlike you not to intend a pun

[18:19] <[particle]> the low-coffee diet is affecting your humour

[18:20] <TimToady> well, it was unintended only up to the point that I noticed it.  :)

[18:20] <TimToady> at any rate, we simply can't have the meaning of comma flapping in the cultural breeze.

[18:22] <TimToady> at best maybe we can recognize 1,2 and give a warning if things go wrong later.  but I don't know that 1,2 would cause things to go wrong later soon enough for the compiler to notice

[18:22] <[particle]> i18n is still on the horizon, anyway

[18:23] <TimToady> I think we're already past the event horizon on that one, though a lot of p5p still thinks they can continue to send messages to the outside universe as long as they like

[18:24] <TimToady> but the universe has changed, and Unicode is the new simplicity

[18:24] <TimToady> and yes, I smile when I say that...

[18:28] <[particle]> dingbat

[18:28] *** drupek12212157 joined
[18:28] <TimToady> to zapf and beyond!

[18:34] <TimToady> but in the overall scheme of things Unicode really is a simplification in the same sense that Perl was a simplification of Unix, a complex set of trees, but a smaller forest

[18:37] *** bonesss joined
[18:38] *** diakopter joined
[18:39] *** stevan_ joined
[18:44] <TimToady> but in general people can only perceive the complexity of the bit of forest they can see from where they stand

[18:45] <TimToady> "can't see the forest for the trees" as some folks put it

[18:45] <TimToady> most of p5p is perpetually in that state

[18:46] <TimToady> shower &

[18:46] <[particle]> they're picking the bark off of all the trees so they can see more of the forest

[18:53] *** gnuvince_ joined
[18:57] *** drupek12212157 joined
[19:00] * fglock trying to see the tree - concentrate on a single problem and fix it

[19:02] *** explorer joined
[19:02] <[particle]> with pcr, mp6, kp6 etc?

[19:02] *** forsaken joined
[19:03] <fglock> [particle]: yeah - I'm trying to figure out a plan

[19:04] <fglock> kp6-perl5 is powerful, but it's almost another language, incompatible with cpan modules

[19:04] <fglock> v6.pm OTOH, is too perl5 in many cases

[19:05] <[particle]> heh

[19:06] <fglock> pcr should really be written in p6, but it would be much better if this were coordinated by pmichaud or audreyt, IMO

[19:10] <fglock> other kp6 backends (C, C++) seem to be dead ends, though some code could be reusable by parrot

[19:11] <fglock> C would still be nice to have for fast small programs

[19:12] <[particle]> it'd be nice to have a shared regex lib to embed in a browser

[19:13] <[particle]> p6cre

[19:13] <fglock> I think pmichaud was working on one, before starting PGE

[19:14] <fglock> mm - PCR-on-MP6-on-C ?

[19:16] <fglock> I wonder if it's reasonable to require the host program to provide the object system and memory allocation

[19:16] <[particle]> you might target .net then

[19:17] <fglock> a C lib would probably require a huge API specification

[19:17] <[particle]> yes

[19:19] <fglock> yes, but then it seems reasonable to use PCR-on-p6 -> dotnet

[19:26] <fglock> re kp6, I noticed that mp6 can be implemented with even less features (and be much more portable)

[19:27] <[particle]> is it worth doing?

[19:27] <fglock> namespaces and pads are better represented as objects than native things - this gives much more p6-ish closures

[19:28] <fglock> [particle]: parrot already does this, to some extent

[19:29] <fglock> and the Haskell implementation 

[19:29] <fglock> it's probably the way to go

[19:31] <fglock> but then, this is one of the things that make kp6-perl5 incompatible with cpan

[19:31] *** drupek12212157 joined
[19:36] <fglock> a compiled kp6 program would look like an ast, with Closure objects pointing to native code

[19:37] <fglock> an OO version of m-expressions (is there a name for this?)

[19:39] <fglock> it's just one indirection level, but this kills the performance in p5

[19:40] <ruoso> fglock, may I talk to you in private?

[19:40] <fglock> sure

[19:41] *** rindolf joined
[19:45] <fglock> the solution would be a smart compiler that would desugar as much as possible to native p5/.net/jvm/parrot

[19:45] <ruoso> fglock, did you receive my privmsg or freenode just didn't deliver?

[19:45] <fglock> and keep the difficult parts as plain oo

[19:46] <fglock> ruoso: I dit - I think I can't msg back - can you try google chat?

[19:46] <ruoso> you mean gtalk?

[19:46] <[particle]>  /nickserv identify <user> <pass>

[19:46] <fglock> one sec...

[19:49] <fglock> ruoso: I sent a ping

[19:49] <ruoso> nop... but if you have gtalk you can add ruoso at jabber.org and talk to me directly

[19:49] *** eric__ joined
[19:59] *** putter joined
[20:01] <putter> fglock: re what to work on, so how do you see the future of PCR?

[20:01] * putter ponders  [ $2:=(a) ]*

[20:04] *** jisom joined
[20:04] *** the_dormant joined
[20:05] *** jisom left
[20:05] *** jisom joined
[20:09] <TimToady> $2 ends up with an array of a, I expect

[20:10] <putter> ah, ok.  tnx

[20:12] *** dduncan joined
[20:12] *** drupek12212157 joined
[20:25] *** drupek12212157 joined
[20:26] *** simcop2387 joined
[20:28] <fglock> putter: ping

[20:32] *** GabrielVieira joined
[20:43] <putter> pong

[20:43] <fglock> putter: re PCR

[20:44] * putter listens attentively

[20:44] <fglock> :)

[20:44] <putter> ;)

[20:44] <fglock> it will likely keep the API, but some things can improve

[20:44] <nothingmuch> BAM!

[20:44] <nothingmuch> oh crap, i lost my moment... i was going to make everyone bounce

[20:45] * putter notes loud noises rendered as text are somewhat less startling than the original

[20:45] <fglock> the compiler needs an ast processing step

[20:46] <fglock> access to p5 lexicals could be improved

[20:47] <putter> has it been run against parrots rx_* tests?

[20:47] <fglock> some things need to be rethought, like the haskell backend 

[20:47] <fglock> yes, some of them pass

[20:47] <putter> :)

[20:48] *** drupek12212157 joined
[20:48] <putter> other thoughts?

[20:48] <fglock> improving the compiler and adding functionality are orthogonal

[20:49] <fglock> but only to some extent 

[20:49] <fglock> like:  <rule> <rule>  - the compiler needs to detect this and arrange for array storage

[20:50] <fglock> the TODO list is huge

[20:51] <fglock> it's bigger than just failing tests

[20:51] <putter> bigger in what way?

[20:52] <fglock> several XXX and ??? places in the source are not detected as test failures, which means we need more tests

[20:53] <putter> oh yeah

[20:53] <putter> for a lot of the alias stuff, there isn't a single test case anywhere.  :(

[20:55] <putter> perhaps we should write a "we need more regex tests regards X" wish list?

[20:55] <putter> what else might be done to improve things?

[20:56] <putter> "things" == "big picture", aside from TODO

[20:56] <fglock> I've been looking for a DFA implementation

[20:56] <putter> to generate test cases?

[20:56] <fglock> documenting the regex AST

[20:57] <putter> makes sense, what else?

[20:58] <fglock> creating a benchmark directory, for tests regarding algorithms

[20:58] <fglock> some things are already in the TODO list, like adding the p5regex backend to the distro

[20:59] <putter> re benchmark. ??   like optimization tests?  "dont search where you know there isnt a character you need" kinds of tests?

[20:59] *** elmex joined
[21:01] <fglock> yes - there are several things, like - how much faster is it to compile to p5regex than pure-perl5 - when is it worth to change mode 

[21:01] <fglock> and - is it worth to use XS here

[21:02] <putter> that ones easy... "Is it worth using XS?"  "No, until proven otherwise". ;)

[21:03] <fglock> reimplement the compiler in p6, and compile it back to p5

[21:04] <fglock> then, pugs could probably use the p6 version directly

[21:04] <putter> re ->p5, yeah.  I was wondering if we could special case the nodes, pragma "straight to p5", so we don't take the moose performance hit.

[21:05] <fglock> remove the Parse::Yapp dependency - we could use a p6 version

[21:05] <fglock> re Moose, we can use mp6

[21:05] <fglock> mp6 == no dependencies

[21:06] <putter> mp6 faster than moose?

[21:06] <fglock> sure - it's much simpler

[21:06] <putter> (I should have said "hypothetical rumored moose performacne hit")

[21:06] <putter> k

[21:06] <putter> hmmm

[21:07] *** rashakil joined
[21:07] <[particle]> anything that hits a moose is likely to suffer performance problems

[21:07] <fglock> of course, mp6 is uglier than a moose

[21:08] <putter> unless performance is measured in running-away-from-irritated-moose velocity

[21:08] <putter> re uglier, oh my, that's a scary thought

[21:08] <putter> ;)

[21:09] <[particle]> what's uglier, pugs or moose?

[21:09] <rindolf> fglock: mp6 == mod_perl6?

[21:10] <fglock> "MiniPerl6"

[21:10] <[particle]> somebody here has been smoking crack

[21:10] <TimToady> pugses are ugly enough that they wrap around the backside to cute.  not sure mooses make it that far around...

[21:10] <[particle]> great, now i'm picturing mooses backsides

[21:10] <fglock> MiniPerl6 - imagine a pugs without hair

[21:10] <putter> lol

[21:11] <gaal> @google pretty moose

[21:11] <lambdabot> http://www.unexplained-mysteries.com/forum/index.php?showtopic=88674

[21:11] <lambdabot> Title: The ghost moose of Maine. - Unexplained Mysteries Discussion Forums

[21:11] <putter> oh my

[21:12] <gaal> "The sight of him is so frightening, he once scared a bicyclist up a tree."

[21:12] <putter> "a moose version of Moby Dick"

[21:12] <putter> "what will your language earn thee in Nantucket market"

[21:14] *** drupek12212157 joined
[21:14] <gaal> .oO( St. Antler's Fire )

[21:14] <putter> groan

[21:15] <fglock> OTOH, PCR didn't get to the point of full-spaghetti yet (unlinke v6-pm emitter) - so it's probably fixable

[21:15] <putter> "point of full-spaghetti" concept++

[21:16] <gaal> fixed point of full gnocci

[21:16] <putter> "well modularized software is like raviolli"

[21:16] <fglock> some software architecture work would be nice

[21:17] <fglock> gnocci is like little modules

[21:18] <[particle]> better than java beans

[21:18] <putter> some systems are just a shell with no meat

[21:18] <[particle]> i prefer mine hand rolled

[21:19] <gaal> there's that chapter or three where he just talks about taxonomy of whales and stuff

[21:19] <gaal> that's like the meta model but tedious

[21:19] <putter> lol, hard

[21:20] <putter> bbiab

[21:20] <gaal> bb after sunrise &

[21:21] <fglock> weekend starts now for me

[21:24] <TimToady> is that good or bad?

[21:25] <fglock> I miss being online - but going to the beach is great

[21:26] <fglock> converting PCR to use the compiler tools in kp6 should be easy - but it would be better if mp6 were in cpan

[21:26] <fglock> not sure if publishing mp6 is a good thing

[21:27] <[particle]> there's one way to find out

[21:29] <fglock> ok - I've got to close the place here and go home &

[21:31] *** fglock left
[21:35] *** Aankhen`` joined
[21:41] *** drupek12212157 joined
[21:56] *** rafl joined
[21:57] *** Caelum is now known as merlyn

[21:57] *** merlyn is now known as Caelum

[22:03] *** BooK joined
[22:03] *** BooK left
[22:06] *** devogon joined
[22:08] *** drupek12212157 joined
[22:19] *** Psyche^ joined
[22:28] *** Psyche^ is now known as Patterner

[22:37] <putter> the room echos emptily

[22:38] *** stevan_ joined
[22:38] <tene> rooms full of stuff usually don't echo very well.

[22:38] <putter> :)

[22:44] <putter> &

[22:46] *** weinig is now known as weinig|bbl

[22:48] *** khisanth_ joined
[22:51] *** khisanth_ is now known as Khisanth

[22:57] *** |newbie| joined
[23:07] *** ruz joined
[23:16] *** drupek12212157 joined
[23:27] *** Limbic_Region joined
[23:31] *** drupek12212157 joined
[23:44] *** drupek12212157 joined
[23:55] *** kdevin joined
[23:57] *** drupek12212157 joined
