[00:02] *** justatheory left
[00:05] *** jhorwitz left
[00:08] *** jedai left
[00:10] *** ashleyb joined
[00:24] *** buetow left
[00:26] *** dduncan left
[00:39] *** ashleyb left
[00:47] *** felipe joined
[00:49] *** nipotaway is now known as nipotan

[00:58] *** dduncan joined
[01:04] *** weinig left
[01:16] *** devogon left
[01:34] *** weinig joined
[01:37] *** anculz joined
[01:37] <anculz> http://rectum.antiville.fr/

[01:37] <lambdabot> Title: Miniville

[01:37] <anculz> http://rectum.antiville.fr/

[01:37] <lambdabot> Title: Miniville

[01:41] <thorat> that's a spammer that's been kicked from #vim, #haskell, #lisp for example

[01:44] *** nperez joined
[01:44] *** anculz left
[01:54] *** Yaakov left
[01:55] *** Limbic_Region left
[01:57] *** ashleyb joined
[01:57] *** thorat left
[01:57] *** mr_ank joined
[02:14] *** ashelyb_ joined
[02:20] *** ashleyb left
[02:22] *** nperez left
[02:27] *** ashleyb joined
[02:30] *** daxim_ joined
[02:34] *** kanru joined
[02:35] *** ashelyb_ left
[02:45] *** ChanServ sets mode: +o diakopter

[02:46] *** ashelyb_ joined
[02:50] *** diakopter sets mode: +b *!*@mic92-6-82-227-94-181.fbx.proxad.net

[02:50] *** diakopter sets mode: -o diakopter

[02:53] *** chaoslawful joined
[02:53] *** ashleyb left
[03:00] <spinclad> diakopter++

[03:02] *** bonesss left
[03:04] *** mako132_ joined
[03:05] *** Schwern left
[03:09] *** ashleyb joined
[03:09] *** pasteling left
[03:12] *** pasteling joined
[03:16] *** ashelyb_ left
[03:18] *** pasteling left
[03:20] *** ashelyb_ joined
[03:20] *** pasteling joined
[03:28] *** ashleyb left
[03:31] *** xdg joined
[03:35] *** ashleyb joined
[03:35] *** amnesiac joined
[03:42] *** ashelyb_ left
[04:09] *** weinig_ joined
[04:10] *** weinig left
[04:10] *** weinig joined
[04:15] *** monomorph joined
[04:17] *** alexe joined
[04:18] *** ashelyb_ joined
[04:25] *** ashleyb left
[04:26] *** weinig_ left
[04:27] *** ashleyb joined
[04:31] *** mako132_ left
[04:34] *** ashelyb_ left
[04:41] *** sunnavy joined
[04:56] *** REPLeffect joined
[04:56] *** ashelyb_ joined
[05:04] *** ashleyb left
[05:07] *** [particle1 joined
[05:07] *** ashleyb joined
[05:10] *** devogon joined
[05:12] *** monomorph left
[05:15] *** ashelyb_ left
[05:18] *** thoughtpolice left
[05:23] *** thoughtpolice joined
[05:24] *** [particle] left
[05:27] *** xdg left
[05:31] *** jisom joined
[05:31] *** Lunchy left
[05:38] *** drupek12 left
[05:42] *** drupek12 joined
[05:45] *** ashleyb left
[05:46] *** araujo left
[05:52] <moritz> re

[05:52] *** weinig_ joined
[05:53] *** weinig left
[05:56] *** IceS joined
[06:03] *** jedai joined
[06:08] *** IceShaman left
[06:08] *** IceS is now known as IceShaman

[06:08] *** renormalist joined
[06:11] *** jisom_ joined
[06:28] *** jisom left
[06:30] *** ashleyb joined
[06:31] *** weinig_ left
[06:31] *** marmic left
[06:38] *** Southen left
[06:40] *** marmic joined
[06:41] *** REPLeffect left
[06:45] *** rho joined
[06:52] *** zamolxes left
[06:58] *** ashleyb left
[06:59] *** franck___ joined
[07:01] <renormalist> Good morning. Finally, my article about Pugs appeared in the german IT magazine iX. With some luck, we get some more audience in the next few days. At least I hope so. So "*Oh, behave! Yeah, yeah baby, yeah!*" :-)

[07:02] *** iblechbot joined
[07:03] <moritz> renormalist++

[07:04] *** torz joined
[07:05] <torz> hey all :D

[07:05] <moritz> hey torz ;)

[07:08] <moritz> btw the iX is one of the more advanced IT magazines, well known for its quality

[07:08] <moritz> although half of the topics are not interesting for me

[07:09] <renormalist> same for me, anyway it seems to have a broad audience, exactly what we need for the advocacy.

[07:10] <Aankhen``> 'Grats, renormalist. :-)

[07:10] <Aankhen``> renormalist++

[07:12] *** thepler joined
[07:14] *** chaoslawful left
[07:16] <renormalist> I just see there is also an URL for the article available: http://www.heise.de/ix/artikel/2007/08/127/

[07:18] <moritz> renormalist: is that the full article?

[07:18] *** BooK joined
[07:18] <moritz> it looks like ;)

[07:22] <renormalist> i looks like

[07:22] <renormalist> s/i/it/

[07:29] <moritz> renormalist: I'm making a bit of advertisment for your article: http://perl-6.de/blog/archives/13-iX-Artikel-zu-Pugs-und-Perl-6.html

[07:29] <lambdabot> Title: iX-Artikel zu Pugs und Perl 6 - perl-6.de Blog, http://tinyurl.com/yqudlv

[07:34] *** weinig joined
[07:35] <renormalist> moritz: thanks

[07:35] *** dduncan left
[07:44] <renormalist> moritz: can you correct the small typo in my name, there is one  "n" more than needed :-)

[07:45] <moritz> renormalist: of course, sorry ;)

[07:46] <moritz> improper don't-use of copy&paste ;)

[07:47] <moritz> done

[07:47] <renormalist> npnp. thx.

[07:56] *** elmex joined
[08:26] *** masak joined
[08:33] *** iblechbot left
[08:35] *** weinig left
[08:51] *** pmurias joined
[08:51] <pmurias> moritz: ping

[08:52] *** buetow joined
[08:52] <moritz> pmurias: pong

[08:52] *** zamolxes joined
[08:53] <moritz> or should I say "5 bytes from moritz.lenz: icmp_seq=1 ttl=64 time=1min " ;)

[08:54] <pmurias> moritz: you forgot to print the statistics ;)

[08:54] <moritz> pmurias: which?

[08:54] <pmurias> 10 packets transmitted, 10 received, 0% packet loss, time 9068ms

[08:55] <pmurias> for google.com

[08:55] <moritz> -- moritz.lenz ping statistics ---

[08:55] <moritz> 1 packets transmitted, 1 received, 0% packet loss, time 72s

[08:55] *** flokuehn joined
[08:55] <pmurias> that's better :)

[08:56] <moritz> at your command ;)

[08:58] <pmurias> i looked into the make info page, and am wandering if $(patsubst lib/%,lib5/%,$(wildcard lib/*)) wouldn't be a better way of generating the list of files to make

[08:59] <moritz> it probably would

[08:59] <moritz> I'm by no means an expert in makefiles, and took the first cludgy workaround that I could find

[09:00] <moritz> so please feel free to improve anything you want

[09:00] <pmurias> neither am i

[09:02] <moritz> diakopter: are you running an unmodified version of evalbot? with HEAD pugs?

[09:10] *** Aankh|Clone joined
[09:13] <pugs_svnbot> r17100 | pmurias++ | kp6:explicit file list in Makefile changed to wildcards

[09:13] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17100

[09:13] <lambdabot> Title: Changeset 17100 - Pugs - Trac

[09:13] <moritz> pmurias++

[09:16] <pmurias> i hope i didn't brake anything ;)

[09:18] <moritz> I'm recompiling it right now

[09:19] <Aankh|Clone> pmurias: Brake stuff all you want, just make sure you don't break anything!

[09:20] <moritz> ok, "make clean", "make" and "make test" worked

[09:20] <moritz> Aankh|Clone: "as long as your brakes work.." ;)

[09:24] *** Aankhen`` left
[09:24] *** Aankh|Clone is now known as Aankhen``

[09:35] <bloonix> how can I pass a scalarref? in perl 5 I would say "$foo = \$bar" but how in perl 6 ?

[09:35] <Aankhen``> What are you passing a scalarref for?

[09:35] <Juerd> Perl 6 does not have references.

[09:36] <Juerd> It has captures for similar functionality.

[09:36] <Juerd> And that still works with \

[09:37] <bloonix> Aankhen``: for Params::Validate::GLOBREF

[09:37] <Aankhen``> Er, you're porting P::V to Perl 6?

[09:37] <bloonix> no, I'm learning ;)

[09:38] <moritz> Aankhen``: no, he wants to use a p5 module that uses P::V

[09:38] <Aankhen``> Oh.

[09:38] <bloonix> I want to port my own modules to p6 and I'm using P:V

[09:38] <Aankhen``> I'm not sure there is an equivalent to GLOBREF.

[09:38] <moritz> why should there be one?

[09:38] <bloonix> I try the following:

[09:38] <bloonix> my $log = Log::Handler.new(filename => $*OUT);

[09:39] <bloonix> and P:V say its a glob and not a globref

[09:39] <Aankhen``> moritz: Perhaps for this. ;-)

[09:39] <wolverian> bloonix, well, try \$*OUT, then.

[09:39] <moritz> Aankhen``: (backwards compatibility)--

[09:39] <wolverian> though this is a pretty nasty case of backwards compatibility. globs--

[09:39] <Aankhen``> (backwards compatibility)-- # indeed

[09:39] <moritz> ?eval \$*OUT

[09:39] <evalbot_r17041> \undef

[09:39] <bloonix> my $log = Log::Handler.new(filename => \$*OUT);

[09:39] <bloonix> The 'filename' parameter ("*pugs::guts::FH") to Log::Handler::new was a 'glob', which is not one of the allowed types: scalar globref

[09:39] <moritz> ?eval (\$*OUT).WHAT

[09:39] <evalbot_r17041> ::Scalar

[09:40] <moritz> ?eval (\$*OUT).perl

[09:40] <evalbot_r17041> "\\undef"

[09:40] <Aankhen``> moritz: Perl 5 probably doesn't feel the same way. :-(

[09:40] <moritz> Aankhen``: I know

[09:41] <bloonix> moritz: I will port my mods on the server where pugs is installed

[09:42] <bloonix> piece for piece

[09:42] <moritz> bloonix: you are welcome to add them to the pugs repository under ext/

[09:43] <moritz> bloonix: do you already have a commit bit?

[09:43] <bloonix> if you give me hint what I can do with this bit :)

[09:43] <bloonix> a hint

[09:43] <moritz> bloonix: you can modify the pugs svn repository

[09:43] *** masak left
[09:44] <moritz> bloonix: should I send you one to your cpan email address?

[09:46] <bloonix> better to my privat mail address

[09:46] <bloonix> jonny.schulz

[09:46] <moritz>  at bloonix.de?

[09:46] <bloonix> yes

[09:47] <moritz> bloonix: email sent. It's a custom to add yourself to AUTHORS to test if the commit bit works

[09:50] <moritz> ?eval $*OUT.say: "foo"

[09:50] <evalbot_r17041> OUTPUT[foo␤] Bool::True

[09:50] <moritz> ?eval $*ERR.say: "foo"

[09:50] <evalbot_r17041> OUTPUT[foo␤] Bool::True

[09:50] <moritz> so evalbot joins STDERR and STDOUT it seems

[09:59] *** chris2 joined
[10:01] <bloonix> pugs cannot handle pod?

[10:01] *** buetow left
[10:06] <TimToady> what do you mean by "handle"?

[10:07] <bloonix> =pod_begin =cut

[10:07] <TimToady> should handle that currently

[10:08] <TimToady> though we'd like to switch to Pod6 at some point

[10:08] <TimToady> and kill off =cut

[10:08] <bloonix> oh, it runs

[10:10] <Aankhen``> KILL THE CUTS

[10:15] <bloonix> ?eval sub foo { my $bar = shift; say "foo $bar"; }; foo('bar');

[10:15] <evalbot_r17041> Error: ␤Unexpected "$bar"␤expecting "=", context, ":" or "("

[10:20] <TimToady> hmm

[10:20] <TimToady> ?eval sub foo { my $bar = shift @_; say "foo $bar"; }; foo('bar');

[10:21] <evalbot_r17041> OUTPUT[foo bar␤] Bool::True

[10:21] <TimToady> shift doesn't default in pugs

[10:21] <TimToady> and maybe not in p6

[10:21] <TimToady> not sure why it got that error message though

[10:21] <TimToady> parsec is mysterious

[10:23] <bloonix> okay I should better write shift @_ ?

[10:24] <TimToady> ?eval sub foo ($bar) { say "foo $bar"; }; foo('bar');

[10:24] <evalbot_r17041> OUTPUT[foo bar␤] Bool::True

[10:24] <TimToady> you should better write that

[10:25] <bloonix> hmmm my problem is that I dont know how much arguments are passed to the sub. I know only that the first argument is the object

[10:25] *** Southen joined
[10:25] <Aankhen``> ?eval sub foo ($bar, *@baz) { say "foo: $bar, followed by @baz[]"; }; foo("bar", "baz", "quux", "etc.")

[10:25] <evalbot_r17041> OUTPUT[foo: bar, followed by baz quux etc.␤] Bool::True

[10:25] <TimToady> method foo ($self: *@args) { ... }

[10:26] <Aankhen``> ?eval sub foo ($bar, *@baz) { "foo: $bar, followed by @baz[]"; }; foo("bar", "baz", "quux", "etc.")

[10:26] <evalbot_r17041> "foo: bar, followed by baz quux etc."

[10:26] <Aankhen``> Yeh, if it's a method, it should *be* a method, not a sub. ^_^

[10:30] *** jisom_ left
[10:32] <TimToady> sure, but maybe it's just a multi

[10:33] <bloonix> the simple construct "sub foo { my $self = shift; $self->do_something; }

[10:33] <bloonix> okay, I think I have to read a intoduction first

[10:35] <TimToady> OO is in S12.  You might want to skim the earlier S's first ignoring fine details to avoid bogging down

[10:36] <TimToady> there aren't really many intros that get as far as S12

[10:36] <bloonix> I read the german p6 tutorial of moritz

[10:37] <bloonix> but where can I found the S* documentations?

[10:37] *** Aankhen`` left
[10:37] <TimToady> http://perlcabal.org/syn/

[10:37] <lambdabot> Title: Official Perl 6 Documentation

[10:39] <TimToady> if you don't remember that, just go to pugscode.org and follow the Specs Coverage link

[10:39] <TimToady> (what I did)

[10:40] <bloonix> I pushed it into my bookmarks :)

[10:41] *** ruoso joined
[10:41] <bloonix> my first Perl6 bookmark folder ;)

[10:43] *** andara joined
[10:48] *** mr_ank left
[11:13] *** nipotan is now known as nipotaway

[11:20] *** masak joined
[11:30] <torz> yawn

[11:30] <torz> evening all

[11:40] *** iblechbot joined
[11:53] *** cmarcelo joined
[12:02] <pmurias> TimToady: is this valid p6: [ $x1, $y1 ] := [ $x, $y ]?

[12:03] <TimToady> not unless you put the left side into a signature, then it's just unimplemented

[12:04] <TimToady> only simple vars may happen outside :() or we can't parse it

[12:04] <TimToady> (without backtracking)

[12:12] <pmurias> :([$x1,$y1]) := [$x,$y] is equivalent to $x1 := $x;$y1 := $y?

[12:12] <TimToady> generally with a my on the front, but yes

[12:13] *** nperez joined
[12:13] <TimToady> with my you can drop the :

[12:13] <TimToady> (or any declarator)

[12:13] <pmurias> my [$x1,$y1] := [$x,$y] ?

[12:14] <TimToady> that might fly

[12:14] <TimToady> not currently grammatical

[12:15] <TimToady> my ($x1,$y1) := $x,$y works

[12:16] *** funktio joined
[12:17] <pmurias> ?eval my ($x1,$y1) := 1,2

[12:17] <evalbot_r17041> Error: Wrong number of binding parameters: 1 actual, 2 expected

[12:17] <pmurias> ?eval my ($x1,$y1) := [1,2]

[12:17] *** torz left
[12:17] <evalbot_r17041> Error: Wrong number of binding parameters: 1 actual, 2 expected

[12:17] <pmurias> ?eval my ($x1,$y1) := (1,2)

[12:17] <evalbot_r17041> (\1, \2)

[12:18] <TimToady> looks like the right side of := is a scalar context when it shouldn't be

[12:18] <TimToady> though doesn't explain why parens help

[12:18] <TimToady> some kind of fossilized semantics, I think

[12:19] <TimToady> I think the parens are making a kind of capture, which shouldn't require the parens

[12:21] *** toshinori joined
[12:21] *** jql joined
[12:21] *** arguile_ joined
[12:23] <masak> what's the correct place nowadays for tests against known pugs bugs?

[12:23] <TimToady> If it's a bug that any implementation could fall into, it's not a "pugs bug"

[12:24] <TimToady> and should probably go under the functional category

[12:24] <pmurias> thanks that clears my doubts, me & fglock were not sure before if v6/v6-KindaPerl6/t/mp6/06-bind-array.t was valid p6, and i wanted to make sure before looking into trying to implement it in kp6

[12:24] <masak> TimToady: it's just that there's always that queasy feeling of adding a test a posteriori

[12:25] <TimToady> uh, there's still a lot more preterior than posterior in Perl 6

[12:25] <TimToady> :)

[12:25] <TimToady> at least in terms of testing

[12:25] <TimToady> we currently have 18k tests; I estimate we need 40k eventually

[12:26] <TimToady> I expect some of those 40k to come in after 6.0.0, I should clarify

[12:26] *** ruoso left
[12:26] *** aindilis left
[12:27] <pmurias> ?eval my $x1,$y1,$x,$y;:([$x1,$y1]) := [$x,$y]

[12:27] <evalbot_r17041> Error: ␤Unexpected "$x1"␤expecting signature or ")"

[12:27] <pmurias> ?eval my ($x1,$y1,$x,$y);:([$x1,$y1]) := [$x,$y]

[12:27] <evalbot_r17041> Error: ␤Unexpected "$x1"␤expecting signature or ")"

[12:27] <pmurias> ?eval my ($x1,$y1,$x,$y);

[12:27] <evalbot_r17041> (\undef, \undef, \undef, \undef)

[12:28] <TimToady> :([]) isn't impl afaik

[12:28] <TimToady> doesn't work in a sub sig, anyway

[12:30] <szbalint> http://dev.pugscode.org/query?status=new&status=assigned&status=reopened&order=priority - the problems described in these tickets still need fixing right?

[12:30] <lambdabot> Title: Custom Query - Pugs - Trac, http://tinyurl.com/2d9yt4

[12:33] <szbalint> I'm asking because most of the tickets were created quite a long time ago

[12:34] *** Limbic_Region joined
[12:34] *** ruoso joined
[12:34] <TimToady> on the tortoise/hare continuum, most of our managers are hares

[12:35] <TimToady> maybe we need to recruit a tortoise into management

[12:39] *** aindilis joined
[12:39] <moritz> re

[12:41] *** Limbic_Region left
[12:44] <integral> szbalint: quite a few of those still seem current

[12:44] <TimToady> lunch &

[12:50] *** Lunchy joined
[12:55] *** nperez left
[12:59] *** JarJarBi1ks joined
[13:01] *** bons joined
[13:02] <bloonix> ?eval my $x = <2 3 4>; say "foo" if $x ~~ Array;

[13:02] <evalbot_r17041> OUTPUT[foo␤] Bool::True

[13:08] *** pjmm joined
[13:09] *** jhorwitz joined
[13:10] *** JarJarBinks left
[13:14] <pugs_svnbot> r17101 | moritz++ | added sub prototypes to evalbot

[13:14] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17101

[13:14] <lambdabot> Title: Changeset 17101 - Pugs - Trac

[13:16] <bloonix> the perl 6 documentation is hard to read... a lot of expressions...

[13:16] <bloonix> TimToady: do you like to write it in german? *g*

[13:16] <masak> bloonix: which document are you referring to?

[13:16] <bloonix> S02

[13:17] <masak> bloonix: the synopses are intentionally compact

[13:18] <masak> bloonix: you should try the blog "Dive into Perl 6" for a softer introduction

[13:18] <masak> bloonix: also the exegeses, although they are a bit outdated, I think

[13:18] <masak> bloonix: also the pugs test suite, it helps me a lot to make matters concrete

[13:18] <bloonix> masak: I was just joking. I will read it and in this time dict.leo.org is my best way to understand it :)

[13:19] <diakopter> moritz: you asked about evalbot?  it's running from stock svn; why?

[13:19] <moritz> diakopter: because for me it complained about not deklared subs

[13:19] *** [particle1 is now known as [particle]

[13:20] <moritz> diakopter: on_invite and on_privsmg where not predeclared prior to r17101

[13:20] <moritz> and I get an error on connecting:

[13:20] <moritz> » Error in connection to irc.perl.org:6667 ("Closing Link: ds80-237-200-60.dedicated.hosteurope.de (Invalid username [~<SubBlock])").

[13:21] <bloonix> masak: do you have a link for me to "Dive into ..."

[13:21] <diakopter> bloonix: see planet.pugscode.org 

[13:21] <diakopter> it's got links to recent articles, of which that one is one, I think.

[13:22] <bloonix> diakopter: thx

[13:22] <moritz> and the direct link is http://diveintoperl6.blogspot.com/

[13:22] <lambdabot> Title: Dive into Perl 6

[13:23] <diakopter> moritz: re evalbot

[13:23] <moritz> diakopter: does evalbot work for you when you don't run evalbot-loop but evalbot.pl directly?

[13:23] <diakopter> haven't tried it

[13:23] * diakopter checks to see where it *actually* runs from

[13:24] <bloonix> planet.pugscode.org is written for blind persons

[13:24] <diakopter> here's my TODO list for feather, btw; fyi to whomever:

[13:25] *** TJCRI joined
[13:25] <moritz> bloonix: what makes you think so?

[13:25] <masak> bloonix: dissatisfied with the layout?

[13:25] <masak> I kinda like it

[13:25] <bloonix> the front page has a font size of 6em or more :)

[13:26] <masak> bloonix: resize it in your browser

[13:26] <bloonix> it makes no changes

[13:26] <bloonix> the letters overriding itself

[13:26] <diakopter> 1. get a build of perl6-on-parrot prepared for new evalbot.

[13:26] <masak> bloonix: that _is_ bad

[13:27] <diakopter> 2. Poll #perl6 for a shortname for perl6-on-parrot (?pugs "hi from pugs"..... ?p6prt "hi from parrot"  for example..... ?kp6 "hi from kp6-on-mp6-on-perl5")

[13:28] <bloonix> http://www.bloonix.de/img/img.gif

[13:28] <bloonix> ^^

[13:29] <masak> looks like it could be an opera issue...

[13:29] <moritz> it looks fine with firefox

[13:29] <masak> and safari

[13:31] <bloonix> yes, firefox looks fine :/

[13:37] <diakopter> feather todo paused; brb

[13:45] <moritz> diakopter: does feather run an identd server?

[13:49] <diakopter> I think it might've... but I shut down xinetd a couple of months ago, which it would've run under, and no one complained. :) why, does it need to be turned back on?

[13:49] <moritz> diakopter: no, I'm just wondering why my evalbot doesn't connect

[13:50] <diakopter> possibly there's already a username on that network 'evalbot'

[13:50] <moritz> it says ("Closing Link: ds80-237-200-60.dedicated.hosteurope.de (Invalid username [~<SubBlock])").

[13:50] <moritz> no, I connected as p6eval

[13:50] <moritz> adn taht <SubBLock looks suspicious to me

[13:50] <diakopter> it shows you're already connected

[13:51] <diakopter> 08:50:34 [perl] -!- p6eval [moritz@ds80-237-200-60.dedicated.hosteurope.de]

[13:51] <diakopter> 08:50:34 [perl] -!-  was      : <SubBlock(<anon>)>

[13:51] <diakopter> but yeah that username is flawed

[13:51] <diakopter> are you sure it didn't fork to the background and it still running?

[13:51] <pmurias> is anybody working on a kp6 evalbot?

[13:52] <moritz> it's in the foreground and still running

[13:52] <diakopter> pmurias: hey, that was #3 on my list

[13:53] <diakopter> pmurias: do you want to do it?  my plan was just to add another step after the pugs evalbot step (because we still need pugs to handle the "safe" delineation), and output the proper backend's result, depending on which of the 3 requested it

[13:53] <pmurias> whats #1 & #2 :)?

[13:53] <moritz> pmurias: backlog ;)

[13:53] <diakopter> backlog 25 lines

[13:53] <Juerd> I want :w in perl5 regexes!

[13:53] *** monomorph joined
[13:54] <pmurias> k :)

[13:54] *** devogon left
[13:54] <diakopter> pmurias: (and everyone else): please do *not* take this todo list to mean that you shouldn't start any of those things... I'm sure anyone's implementation of all of that stuff would be better than my (first) ones...

[13:55] <diakopter> so please please please go ahead and start...

[13:56] *** andara left
[13:56] <moritz> Juerd: any news regarding my feather account?

[13:57] <Juerd> moritz: Yes, you're getting it but I can't reach my administration right now

[13:57] <moritz> Juerd: ok, thanks

[13:58] <Juerd> moritz: I've created the account for you; info follows

[13:58] <Juerd> moritz: Your password is changeme. Change it now, please.

[13:58] <moritz> Juerd: logging in...

[13:58] <moritz> Juerd: changed ;)

[14:00] <pmurias> diakopter: are you sure using pugs for determining if the code is safe is a valid security step?

[14:00] <diakopter> pmurias: it's as good as we've got

[14:00] <diakopter> pmurias: do you have any other ideas for creating that distinction?

[14:02] <pmurias> looking at buubot might be a good idea(or whatever it's called)

[14:02] <diakopter> bb2, yeah

[14:03] <diakopter> heh

[14:03] <moritz> @tell fglock does kp6 support any "unsafe" operations yet? eg ones that might be harmful if run as an evalbot

[14:03] <lambdabot> Consider it noted.

[14:03] * diakopter imagines running all the generated Perl5 code through bb2's unsafe detector

[14:03] <diakopter> I'm sure there'd be false positives

[14:04] <moritz> does parrot implement any safe/unsafe distinction?

[14:04] * diakopter no se

[14:05] <pmurias> mortiz: it does

[14:05] <moritz> could somebody with root rights on feather please install 'git-svn'?

[14:05] <moritz> pmurias: cool

[14:06] <pmurias> why is unsafeness cool? ;)

[14:06] <moritz> then _somebody_ just has to write a fairly complete PIR emitter

[14:06] <moritz> pmurias: it's not, but being able to tell if something is unsafe is cool

[14:06] <pmurias> by the way kp6 supports sdl see: examples/sdl/simple.pl

[14:10] <pmurias> moritz: it does meant kp6 does support unsafe operations, not that parrot can distinguish safe ones

[14:12] <moritz> pmurias: ok, then I misunderstood it

[14:13] <pmurias> it's my fault ;)

[14:14] <diakopter> Juerd: i'm doing the git thing, unless you already are...

[14:14] <diakopter> well I suppose you can't be since the package db wasn't locked :)

[14:15] <Juerd> diakopter: I'm not; I tried but ran into versioning/dependency trouble

[14:15] *** orafu joined
[14:16] * diakopter fixed that...

[14:17] <diakopter> moritz: git-svn is there

[14:17] <moritz> diakopter: thanks

[14:18] <Juerd> moritz: An evalbot could be chrooted, ulimit'ed, throttled, etc.

[14:19] <diakopter> and even limited to a single working directory inside that chroot...

[14:20] <moritz> aye

[14:21] <diakopter> pmurias: I'd really like to port the evalbot to a plugin inside of the dalek bot I'm working on... along with all the svn and infobot and lambdabot functions.  It runs in perl 5, and uses much fewer resources than pugs (as far as I can tell, I mean), and the concurrency system is event-based.  I'd like to put everything there because of the integrated authentication/trust system.

[14:21] <diakopter> and b/c it would use 1/10 the resources

[14:21] <moritz> diakopter: sounds like a very good idea ;)

[14:22] <diakopter> I know it's a step backwards from the Perl 6 svnbot.pl and such

[14:22] <diakopter> in a sense

[14:22] <moritz> but it's convenient ;)

[14:23] <diakopter> the other (big) benefit is that dalek's base system is already multi-network.

[14:24] <szbalint> it'll just exterminate all of us

[14:24] <szbalint> :)

[14:24] <diakopter> so a single bot would provide the same eval, svn, infobot, and ****flood protection on #parrot and here, at least in my imagination

[14:24] <diakopter> szbalint: indeed!

[14:24] <diakopter> EX TERM IN ATE, right?

[14:25] <szbalint> Aye

[14:25] <moritz> diakopter: yes. And we want evalbot in #perlde and #perl6de on irc.perl.org ;)

[14:25] <diakopter> anyway, anyone please voice any objections to that plan... I won't be defensive! ;)

[14:25] *** bons left
[14:25] *** andara joined
[14:25] <moritz> diakopter: "IT'S A SECURITY RISK" - are you happy now?

[14:26] <diakopter> moritz: heh. do explain, if you mean it.

[14:26] <moritz> diakopter: I'd just be over-paranoid with evalbot

[14:26] *** funktio left
[14:27] <moritz> of course there is no special risk if done properly, but feels like something that should be separated from the rest

[14:28] <moritz> diakopter: if you have an evalbot plugin that runs in chroot and the communication is done through a socket, then I don't have any objections

[14:28] <moritz> or something along these lines

[14:29] *** flokuehn left
[14:30] *** andara left
[14:31] <diakopter> well sure.  chrooted is the way to go. All the chroot needs is a nice perl5, subversion, the build dependencies of pugs, parrot, and kp6....

[14:32] <diakopter> I was gonna put the whole ircbot in the chroot

[14:32] <moritz> ok

[14:32] <diakopter> sockets shmockets :P

[14:33] <moritz> the git repository is somewhere at 3800 atm

[14:33] <moritz> r3800 I mean

[14:35] <diakopter> Juerd: any thoughts/comments on that ircbot plan?

[14:36] <moritz> diakopter: if you need a server for it, I (or bloonix) could help out

[14:36] <moritz> diakopter: or if you want to experiment on it, without messing with feather

[14:38] <Juerd> diakopter: Yes. Keep things that run outside the chroot (like the bot itself?) out of the chroot

[14:39] <Juerd> (Because they might be altered)

[14:39] <Juerd> It's like the common rule that says "don't make things that root will execute writable for non-root"

[14:39] <diakopter> Juerd: hm, ok.

[14:39] <Juerd> diakopter: A process can chroot itself :)

[14:40] *** devogon joined
[14:40] <diakopter> or of course, chroot (evals) inside chroot (bot)

[14:40] <Juerd> diakopter: Or you can start a process that chroots, and THEN starts the bot inside

[14:40] <Juerd> But I think it's sane to start one process PER eval.

[14:40] *** pjmm left
[14:40] <Juerd> Because then you can ulimit it, kill it when it takes too long, etc.

[14:40] <diakopter> Juerd: ok

[14:41] <Juerd> And if you do that, you can leave all the rest outside the chroot I think

[14:41] * diakopter continues with spewing the todo list

[14:41] <diakopter> #3 Get all that bot stuff consolidated (recruit helpers for it)

[14:42] <diakopter> #4 Set up carnavon to provide svn history/analysis

[14:44] <diakopter> #5 Set up the specification XHTMLs (and PODs) to be indexed and searchable via http and via the ircbot by literal exact phrases.

[14:45] <diakopter> #6 Set up implementations of SVN::Log and SVN::Log::Index to provide searchable commit logs.  Hopefully integrate with the carnavon implementation.  or reimplement carnavon. :)

[14:47] <diakopter> #7 Set up cabie on feather to coordinate distributed autobuilds of pugs, parrot, and kp6.  Note that this would not replace the smoke server(s), but instead merely provide records of build successes/failures.  Research integrating with the smoking system.

[14:48] <diakopter> #7 continued - anyone can volunteer their machines to do the autobuilds/submissions; cabie coordinates it all.

[14:48] <diakopter> #7 continuted: this would also be a step toward audreyt's TODO (long ago) of getting nightly builds of pugs downloadable for the major architectures/OSes.

[14:50] <diakopter> #8 Set up subissue and a Jifty (or WebGUI if I'm the one doing it) frontend to it.  subissue uses a precommit svn hook to catch issue #s in svn commit logs, and stores the actual tickets/trackers in the same svn repository, but because it's a precommit hook, does not "duplicate" revisions.

[14:51] *** ashelyb_ joined
[14:53] <diakopter> #9 As part of the specification searching/indexing, set up a "keyword" index, where (probably not *in* the Snn themselves, but merged in via smartlinks) Perl 6's keywords would be listed hierarchically (perhaps by initial character) in some sort of html treeview.  Also provide an irc interface to them.  ?p6kw map  for instance.

[14:53] *** daxim_ left
[14:54] *** Schwern joined
[14:54] <moritz> that's a good idea ;)

[14:54] <diakopter> #10 reorg the pugs repository so that the various implementations are at the same levels.  Yes of course there will be pushback on this suggestion.

[14:56] *** daxim_ joined
[14:58] <moritz> wow, I'm impressed ;)

[14:58] <diakopter> #10 continued - also as part of this, separate the official Perl 6 Test Suite from the pugs 'distribution' (as it's released to CPAN) by creating a separate CPAN distribution Perl6::TestSuite, which would be a dependency of future Pugs distributions.  Hopefully that would force the issue of making the test suite's various progress markers truly implementation-independent .oO("perhaps by utilizing another layer of smartlinks!?!").  ...

[14:59] <diakopter> ... This would also help pmichaud with demarcating which tests he wants to run/target in p6prt's various make targets.

[14:59] <[particle]> these items should be put into trac or rt

[15:00] <diakopter> yeah :(

[15:00] <moritz> you can copy & paste from the irc logs ;)

[15:00] <[particle]> they're not linear, and parallelization would help

[15:00] <[particle]> some are good oscon-hackathon tasks

[15:01] <diakopter> #10 continued - yes I realize parrot has as one of it's eventual goals to not required perl5 as a build/test dependency... but this is a necessary interim state imho.

[15:04] <diakopter> erm, I think I misspelled carnavon

[15:05] <diakopter> *carnarvon it should be

[15:05] <moritz> diakopter: what's that?

[15:05] <diakopter> http://carnarvon.tigris.org/

[15:05] <lambdabot> Title: carnarvon.tigris.org

[15:06] <diakopter> it's this svn commit history analysis/graphing tool, in python

[15:07] <diakopter> actually if we stuck with trac, it'd be nice to integrate it with trac.

[15:07] <[particle]> that looks like a helpful tool for parrot.

[15:07] <Juerd> ?eval 7 * 2.15

[15:07] <evalbot_r17041> 301/20

[15:07] <moritz> ?eval print 7*2.15

[15:08] <evalbot_r17041> OUTPUT[15.05] Bool::True

[15:09] <diakopter> Juerd: lol - you're reading the comments on that backpacking comic

[15:09] <Juerd> diakopter: Er, no...?

[15:11] <diakopter> heh; my bad; I meant knapsack. :)  http://blag.xkcd.com/2007/07/09/perl-appetizers/

[15:11] *** kanru left
[15:11] <lambdabot> Title: xkcd 􏿽xBB Blog Archive 􏿽xBB Perl Appetizers

[15:11] *** alexe left
[15:14] <moritz> nice one ;)

[15:14] <bloonix> now I can use "Immutable types" as replacement for "use constant" ?

[15:14] <diakopter> #11 - create some wrapper scripts for svk to allow audreyt (and others) the ability to easily push copies of their local branches up to a "tentative" "staging" SVK server, from which folks like me could see visual diffs of things that folks haven't yet committed.  As in, http://svn.pugscode.org/remote/audreyt-macbook1/ http://svn.pugscode.org/remote/fglock-macbook3/ etc

[15:15] <moritz> diakopter: which is roughly the same as switching to a distributed SCM ;)

[15:16] <moritz> bloonix: what do you want? constant values?

[15:18] <diakopter> moritz: I know... that's what I'm aiming for... creating a client component add-on/wrapper and a server component add-on/wrapper to enable svk to do that... I realize of course that it could all be in one repository, under /branches/ of course, but that makes the psychological barrier too high for some folks to experiment, imho...

[15:18] *** franck___ left
[15:19] <moritz> diakopter: I'd recommend setting up a git mirror (that's what I'm doing that moment), which automatically provides that (kind of)

[15:20] <moritz> I just imagine that svn/svk hacking is not that easy

[15:20] <moritz> but I might be wrong, of course

[15:21] <meppl> gugu

[15:21] <diakopter> in my opinion I think a blocker for other haskell folks contributing is merely waiting to see what audreyt has coded, both in her local branch, and in her head. :)

[15:22] <moritz> right, especially now

[15:22] <moritz> where we are wating for the merge of the new MO protocoll

[15:23] * integral doesn't know which bits that affects, or he would be hacking the haskell

[15:23] <diakopter> also, to address the room's elephant

[15:27] <bloonix> moritz: yes

[15:28] <diakopter> there is even hesitation to contribute to portions of pugs that audreyt has *not* explicitly stated she's working on, just because of worry of implementing somehting suboptimally, or "not the way audreyt would have done it".  In my humble opinion, I think this fear is invalid (but not unreasonable), but only because I know audreyt does not mind suboptimal solutions (in the least).  In other words, haskellers, please do not think ...

[15:28] <moritz> ?eval constant $foo = 4; $foo

[15:28] <diakopter> ... that your contributions will fall prey to the results of the NIH syndrome in someone else (in the short run). :)

[15:28] <evalbot_r17041> \4

[15:28] *** rho left
[15:28] <moritz> bloonix: just use 'constant $constant'

[15:29] <moritz> ?eval constant $a = 3; $a = 4

[15:29] <evalbot_r17041> Error: Can't modify constant item: VInt 3

[15:29] <bloonix> great

[15:29] *** stevan__ joined
[15:29] <moritz> I think "constant" scopes like "my"

[15:32] <diakopter> anyway, I'm sorry if I stepped on anyone's toes or crossed any lines with those last few messages.

[15:32] *** justatheory joined
[15:32] *** REPLeffect joined
[15:32] *** weinig joined
[15:32] <moritz> diakopter: I don't think you did ;)

[15:33] <diakopter> moritz: wow; git-svn uses lots of cpu in this initial sync.

[15:33] <moritz> but on the other hand I never respected authorities very much, so my opinion might no hold for others

[15:33] <moritz> diakopter: aye, sadly ;)

[15:33] <moritz> diakopter: I'm at r12000 now

[15:36] *** justatheory left
[15:37] *** stevan_ left
[15:41] *** JarJarBi1ks is now known as JarJarBinks

[15:46] *** justatheory joined
[15:53] *** kanru joined
[15:58] *** buetow joined
[16:03] <pmurias> integral: you expressed intrest in hacking on kp6?

[16:05] *** franck___ joined
[16:06] * integral is hacking a script to use Test::Harness to run the tests atm

[16:08] <pmurias> nice

[16:10] <avar> integral: yay

[16:10] <avar> integral: do you have commit access?

[16:10] <integral> Yep.  I was something like the 10th committer :)

[16:10] <avar> yay

[16:11] <avar> pugs++ # slutty about commit access

[16:11] <[particle]> that is, like, so hot.

[16:12] <avar> yeah, parrot is a cold turkey that wants you to sign papers before she'll let you play with her:)

[16:12] <diakopter> and get STD tests.

[16:13] <[particle]> that's the burden of tpf sponsorship

[16:14] <avar> tpf generally won't sponsor things unless it has std contributor agreements?

[16:15] *** renormalist left
[16:17] <[particle]> so it seems

[16:19] *** [particle] left
[16:19] *** [particle] joined
[16:22] *** rho joined
[16:24] *** BooK_ joined
[16:26] *** SubStack left
[16:28] *** BooK left
[16:30] *** thoughtpolice left
[16:31] <diakopter> TimToady: will there be a SotO this year? inquiring mindless zombies want to know.

[16:32] *** smash joined
[16:40] *** sunnavy left
[16:45] <PerlJam> no state of the onion would be a sure sign to the perl naysayers that they are right about perl being dead  (IMHO)

[16:49] <xinming> Perl isn't never, and never die. How can a language with such perfect integration of other language feature die? :-)

[16:49] <[particle]> perl will never die, the community will reinvent it! :)

[16:49] <xinming> PerlJam: perl isn't dead, and never die.

[16:50] <PerlJam> xinming: At work we're bidding on a project to convert a mod_perl app to PHP.  The stated reason for the conversion is that they believe they'll have trouble finding perl programmers in the future because they are having trouble finding perl programmers now.

[16:52] <xinming> hmm, well, this is what I doubt for perl.

[16:52] <xinming> Python goes much better than perl in these area

[16:52] <xinming> in China, python people are learning django. And few people try to learn cataylst

[16:53] <PerlJam> Perl's main problem IMHO is that it's been too successful.  It's ubiquitous.  It fills all the niches.  And then it becomes part of the background and largely invisible.

[16:54] <diakopter> PerlJam: yes, supply of Perl folks in the small-mid US cities is very very low. and from what I can tell, it's even low in the big cities.

[16:54] <xinming> If it is invisible, Do we have to live in cyberspace? :-P

[16:54] <cognominal_> how can I test if a package A exists? if it is a class?

[16:55] <diakopter> the older Perl guys are reblessed as managers for human capital lifecycle reasons... the younger Perl guys move on to flashier things... 

[16:55] <xinming> for now, people think all language is the same.

[16:55] <xinming> They didn't notice the nice feature for a language.

[16:56] <xinming> eg. anoymous sub, and closure, and also on handy grammar.

[16:56] <diakopter> and very very few young folks choose/want to be trained in Perl, nor is the training available.  It's either, 7-10 years experience in Perl, or nothing.  No entry-level Perl positions.

[16:56] <[particle]> perl has many ugly features, too.

[16:57] <xinming> they just think, they are all just if else, while, combination, that's true. But It's not the power in perl. :-)

[16:57] <PerlJam> yes, for a tool to be used it needs to be more than useful.  It needs for people to *want* to use it.

[16:57] <cognominal_> perl5 has lived too long and perl6 is not there :(

[16:57] <[particle]> and these days, that means shiny web framework

[16:57] <cognominal_> for many people, ruby is perl5 done right

[16:57] <[particle]> cognominal_: we're working on it :)

[16:58] *** araujo joined
[16:58] <xinming> cognominal_: ruby is perl without $ @ %. :-)

[16:58] <[particle]> why aren't you? :P

[16:58] *** nub joined
[16:58] <cognominal_> ximming: I miss in ruby this minimal static typing

[16:58] <xinming> well, I don't like ruby personally, at least, Because of It's not designed by @larry. >_<

[16:58] <cognominal_> btw: you perl6 guru, can you asnwer my question?

[16:59] <xinming> cognominal_: in perl 6? or perl 5?

[16:59] <xinming> if perl 5, please go #perl

[16:59] <cognominal_> in perl6

[16:59] <xinming> if perl 6, I don't think there is implemented yet.

[16:59] <xinming> s/there/the feature/

[16:59] <cognominal_> in perl5, I can help myself usually

[17:00] <xinming> or even specced yet

[17:00] <xinming> Sorry, I don't know

[17:01] <cognominal_> I am reading S10 because a class is a package but I can't yet answer my question

[17:01] <pmurias> diakopter: what things do you consider most flashy right now?

[17:01] <xinming> cognominal_: maybe using ~~

[17:01] <PerlJam> cognominal_: do you mean a lexical package or a dynamic package?

[17:01] <xinming> cognominal_: I don't know. sorry, I didn't read syn long time.

[17:02] <PerlJam> cognominal_: if the latter, it should surely be in %OUR and the former would be in %MY

[17:02] *** b2gills joined
[17:03] <PerlJam> (I may have the sigils wrong there, but that should be enough for you grep for :)

[17:03] <cognominal_> there is a CANDO multimethod, but I don't want to test the existence of a specific method, jsut the existence of the class

[17:03] <cognominal_> Perljam: this would be a global class

[17:06] *** Psyche^ joined
[17:06] *** Azure-BOT joined
[17:10] <diakopter> ... and so, Perl remains non-"mainstream" because 1. most Perl users are non-mainstream-minded kinds of folks, 2. very few companies are willing to hire entry-level guys to become "their Perl guy[s]", 3. Perl as a brand name is viewed as a "has-been" technology, something that's been superceded, 4. Perl's future[-as-a-technology] is drastically uncertain, so only the most daring of companies choose to implement new projects in it, ...

[17:11] <diakopter> ... 5. Perl developers are viewed by hiring managers and project architects as elitist, rare, and demanding, 6. Perl just plain isn't the newest thing, 7. There is *NO* marketing/positioning/branding of Perl being done, by *ANYONE* (marketing in the strict sense, not just "ads") (and yes, I include perl.com in this vacuum), 8. The "way to code" Perl (the IDEs, the editors, the development environments and methodologies, the ...

[17:11] <diakopter> ... project architecture abstractions) is universally seen as obsolete and less capable (this is probably the only misinterpretation of the facts/evidence on this list), and of course there are more (reasons).

[17:15] <diakopter> cognomial_: flashy to me?  or flashy to the market?

[17:15] <diakopter> er

[17:15] <diakopter> pmurias: ^^

[17:17] <pmurias> both

[17:18] *** Patterner left
[17:18] *** Psyche^ is now known as Patterner

[17:18] <pmurias> well either ;)

[17:21] *** penk left
[17:29] <diakopter> flashy to me: Perl 6.  I (perhaps wrongly) project another great wave of IT reimplementation, especially in the open-source circles, due to 1. Perl 6's dynamic grammar (hence the ability to mimic any other language, and thus reuse much more existing software, much more easily), 2. its omniparadigmatic builtins (and hence one-stop-shopping for Computer Science instructors interested in actually teaching their students), 3. its ...

[17:29] <diakopter> ... (hopefully) well-abstracted base class library (implementing MOST common (and uncommon, but superior) algorithms, patterns, protocols, and application archetypes as fully-inheritable, fully-overridable libraries), 4. its (hopefuly) ability to emit itself and other languages into other backends, such as SpiderMonkey/Tamarin on the client side, and the Java VM or .Net runtime on the server side.  Other reasons come to mind but ...

[17:29] <diakopter> ... are less articulated.

[17:29] <masak> diakopter: one can only hope.

[17:30] <pugs_svnbot> r17102 | bsmith++ | Implemented a new run_tests script that uses Test::Harness and will report

[17:30] <pugs_svnbot> r17102 | bsmith++ | which tests fail.

[17:30] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17102

[17:30] <lambdabot> Title: Changeset 17102 - Pugs - Trac

[17:30] *** masak left
[17:31] <diakopter> masak: the reason I think those things are crucial is that they are "terminal" or "final" steps in open-source's ideal progression.

[17:33] <diakopter> er, terminal/final meaning that once they are done (a language/runtime compatibility layer is created for both inputted languages and emitted languages), it doesn't have to be done ever again, especially because it itself is extensible.

[17:35] <diakopter> obviously those results were not the original goals of Perl 6.

[17:35] <diakopter> but imho those are what they have morphed into.

[17:37] *** buetow left
[17:39] <diakopter> If the use of Perl 6 is proposed as a useful "library" (when it's more properly described as a library-consolidator, compatibility layer, and emitter) for a Java or .Net or Rails/Ajax project, that puts it back in the toolbox, in the project architect's view.

[17:50] *** dduncan joined
[17:54] *** jisom joined
[17:59] *** weinig_ joined
[17:59] *** Psyche^ joined
[17:59] *** weinig left
[18:02] *** rho left
[18:05] *** moritz left
[18:05] *** moritz joined
[18:05] *** moritz left
[18:07] *** kanru left
[18:09] *** masak joined
[18:10] *** moritz_ joined
[18:12] <diakopter> hmm; I hope that not every long answer is perceived as a rant.

[18:14] <Tene> Not for any useful definition of "rant" I'm aware of.

[18:16] <PerlJam> rants have more vitrol usually :)

[18:16] *** Patterner left
[18:16] *** Psyche^ is now known as Patterner

[18:16] <PerlJam> er, vitriol even

[18:18] *** Jmax- joined
[18:18] *** Jmax- is now known as Jmax

[18:20] *** thorat joined
[18:27] *** nub left
[18:29] *** thorat left
[18:29] *** funktio joined
[18:34] *** jisom_ joined
[18:37] *** weinig_ is now known as weinig

[18:45] *** chris2 left
[18:46] *** rindolf joined
[18:48] <pmichaud> diakopter: I find your long posts here to be very well reasoned, fwiw

[18:48] * Tene also.

[18:48] <Tene> diakopter++ # talks good

[18:49] <[particle]> he's a kook!

[18:51] *** jisom left
[18:53] <wolverian> diakopter, it'd be nice if you put that up on the perl wikis, or a blog, or so. 

[18:56] *** penk joined
[18:57] <diakopter> wolverian: yes, and I can read between the lines "instead of putting things like that here in #perl6" :) I know, irc isn't good for sermons.

[18:58] <Tene> I approve of IRC for sermons.  I'm much more likely to see them here than elsewhere.

[18:58] <diakopter> perlblog.org

[18:58] <diakopter> (soon)

[18:59] <Tene> Bah, blogs.  Maybe I should set up a blog->irc proxy.

[18:59] <Tene> perlblog.org == ads eww

[19:00] <Tene> I still don't get the whole "parked" thing... If you don't have content, why not just... not add an A record to DNS?

[19:01] *** funktio left
[19:02] <wolverian> diakopter, I don't mind if you do it here _and_ on web. I just want a url to link to. :)

[19:02] <Tene> http://irc.pugscode.org/ ;)

[19:03] <diakopter> Tene: sorry; that domain just finished transferring this morning; haven't pointed it yet

[19:06] *** Aankhen`` joined
[19:11] <wolverian> Tene, something a bit more organised would be nice 

[19:11] <Tene> wolverian: yes, it would.  that wasn't a serious suggestion.

[19:11] *** riffraff joined
[19:11] <riffraff> hi

[19:11] <wolverian> Tene, :)

[19:12] *** polettix joined
[19:15] *** Aankh|Clone joined
[19:16] *** jisom_ left
[19:24] *** ashelyb_ left
[19:32] *** bonesss joined
[19:33] *** Aankhen`` left
[19:35] <bloonix> I hope that a perl 6 book is coming soon

[19:37] <spinclad> well, the Perl 6 and Parrot Essentials book got checked in to the pugs and parrot repos recently...  updates happening...

[19:38] <diakopter> bloonix: http://conferences.yapceurope.org/npw2007/talk/504

[19:38] <lambdabot> Title: Learning Perl 6

[19:39] <diakopter> http://www.learningperl6.com/source_control.html

[19:39] <lambdabot> Title: Learning Perl 6

[19:39] <bloonix> lol

[19:39] <bloonix> ln -s /usr/local/bin/pugs /usr/bin/perl

[19:39] <bloonix> I did ln -s /usr/local/bin/pugs /usr/bin/perl6 ;)

[19:41] <bloonix> I'm in the hope for the next perl bible on version 6

[19:43] *** REPLeffect left
[19:44] *** franck___ left
[19:44] *** REPLeffect joined
[19:45] <bloonix> diakopter: really nice

[19:46] *** masak left
[19:46] *** cmarcelo left
[19:46] *** rlb3_work_ joined
[19:49] <wolverian> hrm

[19:49] <wolverian> ?eval sub foo (@xs) { @xs } foo(1,2,3)

[19:49] <evalbot_r17041> Error: No compatible multi variant found: &foo

[19:49] <wolverian> versus

[19:50] <wolverian> ?eval sub foo (@xs) { @xs } foo((1,2,3))

[19:50] <evalbot_r17041> [1, 2, 3]

[19:50] <wolverian> is that correct?

[19:50] <bloonix> hmm the best way to learn perl 6 is really to read the test files

[19:51] <Tene> wolverian: it looks correct to me, depending on what specific question you're asking.

[19:51] <Tene> ?eval sub foo (@*foo) { @foo } foo(1,2,3)

[19:51] <evalbot_r17041> Error: No compatible multi variant found: &foo

[19:51] <Tene> ?eval sub foo (*@foo) { @foo } foo(1,2,3)

[19:51] <evalbot_r17041> [1, 2, 3]

[19:52] <Tene> You can use a slurpy param, but that's semantically different from what you were talking about, I think.

[19:52] <wolverian> Tene, I thought ()s are only for grouping.

[19:52] <wolverian> precedence, that is.

[19:52] <wolverian> foo(1,2,3) being different to foo((1,2,3)) is very weird.

[19:52] <Tene> wolverian: howso?

[19:53] <diakopter> wolverian: I think it's turning the list into an Array

[19:53] <wolverian> I suppose. 

[19:53] <wolverian> Tene, I'm thinking in perl5, I guess. :)

[19:53] <Tene> 'kay

[19:56] <diakopter> ?eval sub foo ( Array $xs ) { $xs.perl } foo((1,2,3))

[19:56] <evalbot_r17041> "[1, 2, 3]"

[20:02] <wolverian> is there a way to autothread (@foo, "a") so that if @_ is (1,2,3), I get back (1,"a";2,"a";3,"a")

[20:03] <wolverian> sub foo { use autoindex; -> $i { (@_[$i], "a") } } # I think?

[20:04] <wolverian> I know the map solution is trivial, but I was wondering if there's a more, er, higher order approach. hypering the , operator isn't possible, I think.

[20:04] <wolverian> or is it?

[20:05] <Tene> ?eval [;] [1,2,3],'a'

[20:05] <evalbot_r17041> Error: ␤Unexpected "[;]"␤expecting program

[20:05] <Tene> ?eval [;] ([1,2,3],'a')

[20:05] <evalbot_r17041> Error: ␤Unexpected "[;]"␤expecting program

[20:05] <wolverian> I know zip is trivial too :)

[20:05] <Tene> ?eval [~] [1,2,3],'a'

[20:05] <evalbot_r17041> "1 2 3a"

[20:05] <wolverian> pugs doesn't like [;] for some reason

[20:06] <Tene> ?eval [,] [1,2,3],'a'

[20:06] <evalbot_r17041> ([1, 2, 3], "a")

[20:06] <Tene> ?eval [>>,] [1,2,3],'a'

[20:06] <evalbot_r17041> Error: ␤Unexpected "[>>,]"␤expecting program

[20:06] <wolverian> ?eval (1,2,3) Z ('a' XX *)

[20:06] <evalbot_r17041> Error: ␤Unexpected "XX"␤expecting operator or ")"

[20:06] <wolverian> ?eval (1,2,3) Z ('a' X *)

[20:06] <evalbot_r17041> ((1, ("a", Inf)), (2, undef), (3, undef))

[20:06] <wolverian> well, something like that

[20:06] <wolverian> but, still, I wonder if you can hyper ,.

[20:07] <wolverian> ?eval (1,2,3) <<,>> 'a'

[20:07] <evalbot_r17041> Error: ␤Unexpected "<<,>>"␤expecting operator

[20:07] <Tene> ?eval @f=1..3;$a='a'; @f>>~$a

[20:07] <evalbot_r17041> Error: ␤Unexpected ">>~$"␤expecting "::", term postfix or operator

[20:07] <Tene> ?eval @f=1..3;$a='a'; @f~>>$a

[20:07] <evalbot_r17041> Error: ␤Unexpected ">$"

[20:07] <Tene> ?eval @f=1..3;$a='a'; @f ~>> $a

[20:07] <evalbot_r17041> Error: ␤Unexpected ">"

[20:07] * Tene needs to re-read current hyper syntax.

[20:08] <wolverian> oops, my hyper was wrong

[20:08] <wolverian> ?eval (1,2,3) >>,>> 'a'

[20:08] <evalbot_r17041> Error: ␤Unexpected ">>,>>"␤expecting operator

[20:08] <wolverian> dammit. :)

[20:08] <wolverian> TimToady, can you hyper ,?

[20:09] * pmurias hates bugs in kp6...

[20:09] <Tene> ?eval (1,2,3) >>~>> 'a'

[20:09] <evalbot_r17041> Error: ␤Unexpected ">>~>>"␤expecting operator

[20:09] <wolverian> ooh. hypers work with the Each role. is that what map uses too?

[20:09] <wolverian> should we rename map to fmap? :)

[20:09] *** rhandom joined
[20:10] *** rhandom left
[20:10] <wolverian> oops, my XX was wrong too

[20:10] <wolverian> X is a metaoperator

[20:11] <wolverian> ?eval (1,2,3) Z ('a' xx *)

[20:11] <evalbot_r17041> pugs: out of memory (requested 1048576 bytes)

[20:11] <wolverian> haha, you're supposed to stop when the shorter list ends! 

[20:11] <wolverian> silly pugs

[20:11] <wolverian> s/pugs/pug/

[20:11] <wolverian> ?eval (1,2,3) Z ('a' xx 3)

[20:11] <evalbot_r17041> ((1, "a"), (2, "a"), (3, "a"))

[20:11] <wolverian> nice. :)

[20:14] <diakopter> ?eval say .=++.perl

[20:14] <evalbot_r17041> OUTPUT[0␤] Bool::True

[20:14] <diakopter> say .=++.perl

[20:14] <diakopter> ?eval say .=++.perl

[20:14] <evalbot_r17041> OUTPUT[0␤] Bool::True

[20:14] <diakopter> aw drat.  in the pugs shell it does weird things

[20:15] <Tene> diakopter: doesn't for me.

[20:15] <diakopter> if you do it more than once

[20:15] *** buetow joined
[20:15] <Tene> *Oh*

[20:16] <Tene> I almost understand that.  What's the ++ do?

[20:17] <diakopter> I don't know

[20:17] <diakopter> perhaps nothing

[20:18] <rhr> is that $_.= ++$_.perl ?

[20:18] <diakopter> I guess it's the same as:

[20:18] <diakopter> ?eval .perl.perl

[20:18] <evalbot_r17041> "\"\\\\undef\""

[20:18] <diakopter> ?eval .perl.perl.perl

[20:19] <evalbot_r17041> "\"\\\"\\\\\\\\undef\\\"\""

[20:19] <diakopter> yep

[20:23] *** weinig_ joined
[20:24] *** weinig left
[20:28] *** Eidolos left
[20:30] <pmurias> ?eval ++.perl

[20:30] <evalbot_r17041> Error: Can't modify constant item: VStr "\\undef"

[20:33] *** rindolf left
[20:37] *** Schwern left
[20:38] <diakopter> ?eval my&s={''};

[20:38] <evalbot_r17041> Error: Can't modify constant item: VStr "MkCode {isMulti = True, subName = \"&\", subType = SubPrim, subEnv = Nothing, subAssoc = ANil, subParams = [], subBindings = [], subSlurpLimit = [], subReturns = (mkType \"Any\"), subLValue = False, subBody = Prim ([Pugs.AST.Internals.Val] -> Pugs.AST.Eval.Eval Pugs.AST.Internals.Val), subCont = Nothing, subTraitBlocks = MkTraitBlocks {subPreBlocks = [], subPostBlocks = [], subFirstBlocks = [], subLastBlock

[20:40] <diakopter> that's saying I made a sub with name '&'!

[20:44] *** araujo left
[20:46] *** SubStack joined
[20:50] <bloonix> p5: *{"$subname"} = sub { 1 } how can I create it in p6 ?

[20:50] *** TJCRI left
[20:50] <bloonix> I want to create 3 subs in a for loop

[20:50] <bloonix> as example

[20:50] <bloonix> for <foo bar baz> -> $subname { }

[20:51] <wolverian> probably a method on the current namespace.

[20:51] <bloonix> in a module

[20:56] *** weinig_ is now known as weinig

[21:05] <bloonix> I do something like this:

[21:06] <pasteling> "bloonix" at 87.78.209.250 pasted "BEGIN { for my $level (qw/DEBU" (28 lines, 875B) at http://sial.org/pbot/26410

[21:06] <meppl> good night

[21:07] <bloonix> but dont know how I can create a sub or a method in p6

[21:07] <bloonix> meppl: good night :)

[21:07] <pmurias> for <foo bar baz> -> $subname {&::($subname) = sub {...}}

[21:08] <meppl> ;)

[21:08] <bloonix> pmurias: if that run you get a beer ;)

[21:08] <bloonix> mom

[21:08] <wolverian> a beer mom?

[21:08] <pmurias> i don't drink beer ;)

[21:08] <bloonix> mom -> moment

[21:09] <bloonix> :)

[21:09] <wolverian> ah.

[21:09] <pmurias> ?eval for <foo bar baz> -> $subname {&::($subname) = sub {1}}

[21:09] <evalbot_r17041> Error: Can't modify constant item: VStr "MkCode {isMulti = True, subName = \"&\", subType = SubPrim, subEnv = Nothing, subAssoc = ANil, subParams = [], subBindings = [], subSlurpLimit = [], subReturns = (mkType \"Any\"), subLValue = False, subBody = Prim ([Pugs.AST.Internals.Val] -> Pugs.AST.Eval.Eval Pugs.AST.Internals.Val), subCont = Nothing, subTraitBlocks = MkTraitBlocks {subPreBlocks = [], subPostBlocks = [], subFirstBlocks = [], subLastBlock

[21:10] <pmurias> bloonix: does running in kp6 count? :)

[21:13] <avar> integral: how's the harness going?:)

[21:17] <pmurias> good night

[21:17] *** pmurias left
[21:26] *** Aankhen`` joined
[21:26] *** weinig_ joined
[21:27] *** weinig left
[21:33] *** Aankh|Clone left
[21:41] *** monomorph left
[21:41] *** riffraff left
[21:54] *** dmq joined
[21:55] <bloonix> is autoflush on on filehandles in p6 by default?

[22:04] *** demq left
[22:05] <TimToady> unspecced

[22:05] <TimToady> autochomp is default

[22:05] <TimToady> autoflush would fix a faq, but at the cost of performance.

[22:05] <TimToady> hard to know how to balance that one

[22:06] <TimToady> (on the other hand, my impression is that Haskell has not worried much at all about IO buffering.)

[22:07] <bloonix> just call $fh.autoflush(1) ?

[22:07] <TimToady> at least, some of my straces have seemed to indicate character-at-a-time input

[22:08] <TimToady> probably :flush on the open, or whatever replaces binmode

[22:08] <TimToady> $fh.mode(:flush) maybe

[22:08] <TimToady> as opposed to $fh.flush

[22:09] <TimToady> don't think we need the "auto"

[22:09] <bloonix> okay

[22:09] <TimToady> or maybe $fh.buffering(:cmd) or :line or :block or whatever

[22:10] <diakopter> $fh.mode(:latrine)

[22:10] <TimToady> since :flush doesn't necessarily imply a flush per command

[22:10] *** weinig_ left
[22:11] <PerlJam> TimToady: Does anyone ever ask you if you're having the appropriate amount of fun?  Even if they already do ... Are you having the appropriate amount of fun?  :-)

[22:12] <TimToady> at the moment I think I am.  and no, I don't get asked that too often.  but I've learned to pace myself.

[22:12] <TimToady> but sometimes it's an appropriate amount of nonfun.

[22:12] <spinclad> $fh.commode(:flush)

[22:13] <TimToady> there's a sense in which I'm the only person who is not allowed to quit  :)

[22:13] <diakopter> spinclad: :)

[22:13] <PerlJam> TimToady: as long as there's balance and you can push through the nonfun

[22:13] <TimToady> yeah, fortunately I'm stubborn.

[22:13] <TimToady> unfortunately, sometimes I'm more stubborn than my health allows.

[22:14] <TimToady> and then I learn to pace myself again.  :)

[22:15] <PerlJam> I missed it earlier, but someone asked if there was going to be a State of the Onion this year.  Is there?

[22:15] <bloonix> ?eval has Int $.foo = 'string'; say $.foo;

[22:15] <evalbot_r17041> Error: *** Can't modify constant item: VUndef␤    at -e line 16, column 7-94

[22:15] <PerlJam> bloonix: implementations vary :)

[22:16] <bloonix> I dont understand it. in my code its possible to pass a string to an int

[22:16] <TimToady> PerlJam: maybe.  Allison has been finding a slot, and may be able to persuade me to say something in it.  But actually, preparing a soto is not one of the things I enjoy.

[22:17] <TimToady> but if it works out, I could probably reuse something from yapc

[22:17] <bloonix> ?eval has Int $.foo = 'string';

[22:17] <evalbot_r17041> Error: *** Can't modify constant item: VUndef␤    at -e line 16, column 7-78

[22:17] <PerlJam> Well, then I'll wish for Allison to not find a slot, or for someone to step up and give the soto in your place :)

[22:18] <bloonix> ?eval my Int $foo = 'string';

[22:18] <evalbot_r17041> \"string"

[22:18] <TimToady> well, whether I enjoy it or not has little to do with whether I *should*

[22:18] <TimToady> bloonix: pugs ignores some of the type decls currently

[22:19] <bloonix> okay... and I though that I miss understand something :)

[22:19] <TimToady> that is one of the refactorings that probably depend on MO

[22:20] <TimToady> pugs is an amazing first approximation to Perl 6, but it's just an approximation

[22:20] <bloonix> http://sial.org/pbot/26410

[22:20] <lambdabot> Title: Paste #26410 from "bloonix" at 87.78.209.250

[22:20] <bloonix> how can I do that in p6

[22:20] <TimToady> looking

[22:20] <bloonix> *{"$subname"} = sub {1}

[22:20] <szbalint> btw TimToady, wikipedia noted that your personal webpage is inaccessible. Where did the chartreuse go?

[22:20] <PerlJam> bloonix: in perl6 or in pugs?  The answers may be different

[22:21] <diakopter> TimToady: so there's no "Perl Evening" with awards and such?

[22:21] <TimToady> bloonix: at the moment you'd have to use eval.  that's also waiting on MO

[22:22] <bloonix> PerlJam: maybe both :)

[22:22] <bloonix> okay, atm I build it all without a loop

[22:22] <TimToady> diakopter: no, gnat thought they'd try somethign different this year.  

[22:22] <TimToady> szbalint: I installed F7 on a new disk and I still haven't entirely recovered from it.

[22:23] <bloonix> how can I say that $foo can be a string and a glob?

[22:23] <TimToady> a glob?

[22:23] <TimToady> as in a typeglob?

[22:24] <TimToady> those are officially dead, though Captures have some of the same multitype capabilities

[22:24] <szbalint> ah I see, forgive my curiosity :)

[22:24] <bloonix> a filehandle

[22:24] <bloonix> TimToady: a filehandle

[22:25] <TimToady> filehandles are just scalars now

[22:25] <TimToady> $fh

[22:25] <TimToady> $fh = open $filename

[22:25] <bloonix> $foo can be a string "file.txt" or $*OUT

[22:25] <bloonix> as example

[22:25] <PerlJam> bloonix: my String $foo but does FileHandle;   # syntax may vary  ;)

[22:26] <bloonix> but how can I declare it? "my Str | Handle $foo;" ?

[22:26] <PerlJam> oh.  yes.

[22:26] <TimToady> more like, when you use it "given $x { when FileHandle {...}; when Str {...} }

[22:27] <TimToady> or translate everything to handle at the start, if that makes sense

[22:27] <bloonix> my WhatIExpect $foo; ?

[22:27] <bloonix> ...

[22:27] <PerlJam> And for junctional types, how can you assign to just one portion without destroying the others?

[22:28] <TimToady> A junctional type doesn't imply "portions"

[22:28] <TimToady> if you want an object with multiple attributes, you should probably use one

[22:28] <TimToady> class MyType { has $.filename; has $.filehandle; ... }

[22:29] <PerlJam> indeed.  This is the most important aspect of your job as language designer I think ... to winnow through the craziness  :)

[22:29] <bloonix> hmmm

[22:29] <TimToady> occasionally I am driven to sanity

[22:30] <TimToady> but if you just want an untyped union, $x still holds that just fine

[22:30] <TimToady> (well, untyped from the standpoint of the scalar; still has runtime type)

[22:30] <TimToady> hence the given/when above

[22:33] <[particle]> somebody drove you here: http://maps.google.com/maps?f=q&hl=en&geocode=&q=sanity,+robin+hood+ln,+lydd,+romney+marsh,+tn29+9hz,+uk&sll=47.60538,-122.291575&sspn=0.082291,0.113297&ie=UTF8&z=16&iwloc=addr&om=1 ??

[22:33] <lambdabot> Title: Google Maps, http://tinyurl.com/259tgt

[22:33] <diakopter> anyone else here attending oscon this year besides Andy, Schwern, dha, possibly LordVorp, jrockway, mako132, sachmet or statico or joel or geoffeg or boojum or jobsheet or mjd (tutorials only) or particle or pmichaud or davidfetter or diakopter or cxreg or cwest or chromatic. or jonathan or TimToady or perlDreamer  ?

[22:33] * PerlJam afk and home to wife+kids &

[22:33] <bloonix> good night people

[22:33] *** randomity joined
[22:34] *** iblechbot left
[22:35] <TimToady> night

[22:35] <bloonix> and thx a lot for the help today/yesterday

[22:36] <TimToady> soitinly

[22:37] *** amnesiac left
[22:38] *** weinig joined
[22:39] <TimToady> I don't think Robin Hood ever got anywhere close to there...

[22:42] <diakopter> TimToady: have you looked at Kamaelia?

[22:42] *** Aankh|Clone joined
[22:50] <dduncan> diakopter, wish I was, but can't afford to this year

[22:51] *** buubot left
[22:51] *** buubot joined
[22:59] *** Aankhen`` left
[23:06] *** SubStack left
[23:08] *** nperez joined
[23:15] *** REPLeffect left
[23:22] *** elmex left
[23:26] *** Limbic_Region joined
[23:27] *** Aankh|Clone left
[23:27] *** Aankhen`` joined
[23:34] <TimToady> diakopter: nope, not much time for that sort of exploration, alas

[23:35] <pugs_svnbot> r17103 | szbalint++ | Neatening run-smoke.pl up a bit.

[23:35] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17103

[23:35] <lambdabot> Title: Changeset 17103 - Pugs - Trac

[23:35] <szbalint> If I broke something please yell

[23:35] <Limbic_Region> salutations all

[23:35] <szbalint> :)

[23:37] <TimToady> you broke the silence

[23:38] <TimToady> oh wait, YOU BROKE THE SILENCE!!!

[23:38] <Tene> Heh.

[23:38] <Tene> Oh, huh, ubuntu has pugs packages.

[23:38] <TimToady> hmm, actually, I broke it

[23:39] <Tene> 6.2.10 was how long ago?

[23:39] <szbalint> hehe

[23:39] <TimToady> 'bout 97 years

[23:40] <IceShaman> that the age of the package or the eta for the next version?

[23:42] <TimToady> no, that's how long it's been since 1910

[23:42] <TimToady> but I wasn't sure whether 6.2 was June 2 or Feb 6

[23:45] *** weinig left
[23:45] *** mr_ank joined
[23:47] *** BinGOs left
[23:48] *** weinig joined
[23:48] *** weinig left
[23:49] *** weinig joined
[23:49] *** penk left
