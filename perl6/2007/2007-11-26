[00:05] *** theorb joined
[00:17] *** theorbtwo left
[00:20] *** chris2 left
[00:22] *** ofer left
[00:34] *** ebassi left
[00:42] *** weinig is now known as sammy

[00:49] *** jisom left
[00:58] *** IllvilJa left
[01:09] *** polettix left
[01:17] *** AzureStone joined
[01:47] *** mncharity left
[01:48] *** justatheory left
[01:56] *** xdg left
[02:43] *** Daveman joined
[02:50] *** AzureStone left
[03:06] *** elmex_ joined
[03:10] *** AzureStone joined
[03:22] *** elmex left
[03:24] *** Limbic_Region left
[04:54] *** veritos joined
[04:55] <veritos> yo...

[04:59] *** veritos left
[05:20] *** sammy left
[05:20] *** weinig joined
[05:21] *** weinig left
[05:21] *** weinig joined
[05:21] *** weinig left
[05:21] *** weinig joined
[05:22] *** weinig left
[05:22] *** weinig joined
[05:31] *** amnesiac joined
[05:56] *** jisom joined
[06:11] <AzureStone> http://blog.yappo.jp/yappo/archives/000542.html?plucoreirc

[06:11] <lambdabot> Title: YappoLogs: „Åä„Åç„Å™„Çè„Å´„Åç„Å¶„Çã

[06:11] <AzureStone> ÈñìÈÅï„Åà„Åü

[06:12] <AzureStone> „Åô„ÅÑ„Åæ„Åõ„Çì„ÄÅÈñìÈÅï„Åà„Åæ„Åó„Åü„ÄÇ

[06:16] *** AzureStone left
[06:24] *** tokuhiro_ joined
[06:25] <tokuhiro_> ?eval "<naoya>"|"</naoya>"

[06:28] *** Yappo__ joined
[06:29] <Yappo__> AzureStone--

[06:32] *** jisom left
[06:45] <Tene> pugs: "<naoya>"|"</naoya>"

[06:45] <exp_evalbot> OUTPUT[("</naoya>" | "<naoya>")‚ê§]

[06:45] <tokuhiro_> oh.

[06:46] <tokuhiro_> is topic wrong?

[06:47] <Tene> the "normal evalbot" seems to be missing.

[06:47] <Tene> That's been in the topic for a long time.

[06:47] <tokuhiro_> oh

[06:47] <Tene> I guess exp_evalbot gets used a bit more than the "normal" evalbot these days.

[06:48] <Tene> kp6: "<naoya>"|"</naoya>"

[06:48] <exp_evalbot> r18910: OUTPUT[Can't locate object method "new" via package "IO::Handle" at script/kp6 line 340, <> line 1.‚ê§]

[06:49] <tokuhiro_> ok.thanks.

[06:50] <Tene> np

[06:51] *** Aankhen`` joined
[07:12] *** redicaps joined
[07:13] *** redicaps left
[07:13] *** lumi joined
[07:26] *** thoughtpolice left
[07:35] *** iblechbot joined
[07:37] *** IllvilJa joined
[08:20] *** amnesiac left
[08:24] *** franck___ joined
[08:25] *** franck___ left
[08:25] *** franck___ joined
[08:27] *** pen1 left
[08:30] *** devogon joined
[08:58] *** penk joined
[09:05] *** xinming joined
[09:12] *** cmarcelo left
[09:13] *** yves joined
[09:20] *** drupek12 joined
[09:35] *** masak joined
[09:40] *** Casan joined
[09:43] *** drrho joined
[09:48] *** ruoso joined
[10:14] *** penk left
[10:14] *** penk joined
[10:19] *** ruoso left
[10:20] *** ruoso joined
[10:26] *** franck____ joined
[10:26] *** franck___ left
[10:39] *** ting_ joined
[10:45] *** DarkWolf84 joined
[10:47] *** fglock joined
[10:53] *** kolot182 joined
[11:00] *** toshino__ joined
[11:03] *** kolot182 left
[11:07] *** ebassi joined
[11:10] *** cognominal_ left
[11:48] *** masak left
[12:09] *** Alias__ joined
[12:14] *** chris2 joined
[12:19] *** mj41__ joined
[12:31] *** iblechbot left
[12:38] *** baest_ joined
[12:39] *** fglock left
[12:39] *** drrho left
[12:39] *** Casan left
[12:39] *** elmex_ left
[12:39] *** marmic left
[12:39] *** luqui left
[12:39] *** avar left
[12:39] *** ruz left
[12:39] *** aindilis left
[12:39] *** Gekz left
[12:39] *** toshino__ left
[12:39] *** lumi left
[12:39] *** Aankhen`` left
[12:39] *** Kattana left
[12:39] *** devogon left
[12:39] *** jjore-m left
[12:40] *** devogon joined
[12:40] *** jjore-m joined
[12:40] *** f0rth joined
[12:40] *** kcwu joined
[12:40] *** SamB joined
[12:40] *** melissa joined
[12:40] *** mj41 joined
[12:40] *** toshino__ joined
[12:40] *** lumi joined
[12:40] *** Aankhen`` joined
[12:40] *** Kattana joined
[12:40] *** zamolxes joined
[12:40] *** cls_bsd joined
[12:40] *** lidden joined
[12:40] *** QtPlatypus joined
[12:40] *** rafl joined
[12:40] *** shmem joined
[12:40] *** tewk joined
[12:40] *** diotalevi joined
[12:40] *** yahooooo joined
[12:40] *** fglock joined
[12:40] *** drrho joined
[12:40] *** Casan joined
[12:40] *** elmex_ joined
[12:40] *** marmic joined
[12:40] *** luqui joined
[12:40] *** avar joined
[12:40] *** ruz joined
[12:40] *** aindilis joined
[12:40] *** Gekz joined
[12:40] *** charsbar joined
[12:40] *** lambdabot joined
[12:40] *** yath joined
[12:40] *** pbuetow joined
[12:40] *** qmole joined
[12:40] *** bloonix joined
[12:40] *** agentzh joined
[12:40] *** allbery_b joined
[12:40] *** cj joined
[12:40] *** clkao joined
[12:40] *** moritz_ joined
[12:40] *** test joined
[12:42] *** idiotmax joined
[12:50] *** ebassi is now known as ebassi|lunch

[12:54] *** baest_ is now known as baest

[12:54] *** mj41__ left
[13:09] *** lichtkind joined
[13:10] *** ebassi|lunch left
[13:10] *** xinming left
[13:10] *** tokuhiro_ left
[13:10] *** araujo left
[13:10] *** sunnavy left
[13:10] *** TimToady left
[13:10] *** jiing left
[13:10] *** Maddingue left
[13:11] *** ebassi|lunch joined
[13:11] *** xinming joined
[13:11] *** tokuhiro_ joined
[13:11] *** araujo joined
[13:11] *** sunnavy joined
[13:11] *** Jedai joined
[13:11] *** c9s joined
[13:11] *** ajs__ joined
[13:11] *** exp_evalbot joined
[13:11] *** jql joined
[13:11] *** TimToady joined
[13:11] *** Maddingue joined
[13:11] *** jiing joined
[13:11] *** Juerd joined
[13:11] *** wolverian joined
[13:11] *** PerlJam joined
[13:11] *** buu joined
[13:11] *** zostay joined
[13:11] *** stef_ joined
[13:11] *** arguile joined
[13:11] *** shachaf joined
[13:11] *** TreyHarris joined
[13:11] *** nipotan joined
[13:11] *** GeJ joined
[13:11] *** SubStack joined
[13:18] *** fglock left
[13:38] *** luqui left
[13:40] *** ebassi|lunch is now known as ebassi

[13:58] *** ggoebel joined
[14:08] *** fglock joined
[14:08] *** elmex_ left
[14:20] *** iblechbot joined
[14:25] *** masak joined
[14:45] *** nipotan is now known as nipotaway

[14:47] <lichtkind> is there a errelse?

[14:53] *** Loro_ joined
[15:02] *** perlygatekeeper joined
[15:12] *** TJCRI joined
[15:12] *** jrockway joined
[15:13] <fglock> lichtkind: norr :)

[15:14] <lichtkind> fglock: thanks

[15:14] <lichtkind> fglock:  you mean not yet :)

[15:14] *** elmex joined
[15:15] <ebassi> would be nice having a "orelse" - if (eat_your_soup()) { } orelse { go_to_your_bedroom() }

[15:15] <lichtkind> i dont understand sense of orelse since the right block is ony executed if the left has no result why pass then the result over?

[15:16] <lichtkind> fglock: my perl 6 tutorial has since 2 weeks also chapter about kp6, is ther eanything you want to have mentioned?

[15:16] <fglock> lichtkind: have a link?

[15:16] <lichtkind> its german either :)

[15:17] <lichtkind> fglock: http://wiki.perl-community.de/bin/view/Wissensbasis/Perl6TutorialKapitel1#kp6

[15:17] <lambdabot> Title: PerlCommunityWiki ª Wissensbasis ª Perl6TutorialKapitel1, http://tinyurl.com/2qeq2v

[15:18] <fglock> looking

[15:19] <lichtkind> you can german?

[15:19] <lichtkind> btw the perlfoundation wiki seems buggy

[15:19] <lichtkind> i dont get any affirmation mail

[15:20] *** drrho left
[15:21] *** Psyche^ joined
[15:21] *** Patterner left
[15:21] *** Psyche^ is now known as Patterner

[15:21] <fglock> lichtkind: I read very slowly and I miss some words, but it looks ok :)

[15:22] <fglock> lichtkind: you should also mention v6.pm, which is a separate project

[15:22] <lichtkind> tell me more

[15:22] <fglock> v6.pm is a CPAN module (look for "v6"),

[15:23] <fglock> it is a Perl 6-in-Perl 5

[15:23] <fglock> it is split in 2 modules: Pugs::Compiler::Rule, and Pugs::Compiler::Perl6

[15:23] <fglock> PCR is the grammar engine

[15:23] *** weinig left
[15:24] <fglock> the v6 runtime uses Moose and other Perl 5 modules, in order to emulate Perl 6 behaviour

[15:25] *** chris2 left
[15:25] <lichtkind> fglock:  right i saw that in cpan last week

[15:30] <lichtkind> fglock:  http://wiki.perl-community.de/bin/view/Wissensbasis/Perl6TutorialKapitel1#v6

[15:30] <lambdabot> Title: PerlCommunityWiki ª Wissensbasis ª Perl6TutorialKapitel1, http://tinyurl.com/2qeq2v

[15:30] *** faxathisia joined
[15:31] <fglock> :)

[15:31] <lichtkind> fglock:  im quick :)

[15:34] <fglock> kp6: my $a; say exists($a[1]); say defined($a); $a[1]=42; say exists($a[1]); say defined($a);

[15:34] <exp_evalbot> r18914: OUTPUT[Can't locate object method "new" via package "IO::Handle" at script/kp6 line 340, <> line 1.‚ê§]

[15:39] <fglock> kp6 now autovivifies structures lazily

[15:39] *** Lorn joined
[15:46] <lichtkind> pugs: my $a = sub { say @$_}; $a(2,3);

[15:46] <exp_evalbot> OUTPUT[*** No compatible multi variant found: "$a"‚ê§    at /tmp/hE7hyuOH2k line 1, column 25-32‚ê§]

[15:47] <lichtkind> pugs: my $a = sub { say @$_}; $a(3);

[15:47] <exp_evalbot> OUTPUT[3‚ê§]

[15:47] <lichtkind> strange why blocks can only be called with one parameter

[15:47] <lichtkind> is that a bug or intentional?

[15:50] <fglock> I think it's a default-signature bug

[15:50] <fglock> pugs: my &a := { say $^a,$^b }; a(2,3);

[15:50] <exp_evalbot> OUTPUT[23‚ê§]

[15:51] *** jrockway left
[15:51] *** jrockway joined
[15:53] *** cognominal_ joined
[15:55] <lichtkind> fglock: are you shure its not intention?

[15:57] <lichtkind> $a(2,3); doest works but $a((2,3)); does

[15:59] <fglock> pugs: sub a { say @_ }; a(2,3);

[15:59] <exp_evalbot> OUTPUT[23‚ê§]

[16:00] <fglock> pugs: my &a := { say @_ }; a(2,3);

[16:00] <exp_evalbot> OUTPUT[*** No compatible multi variant found: "&a"‚ê§    at /tmp/mNaRxjXFfr line 1, column 22-28‚ê§]

[16:01] <fglock> it does look like a compiler error

[16:09] *** amnesiac joined
[16:09] *** penk left
[16:09] <lichtkind> fglock: maybe but blocks hast only $_ no @_ maybe it has something to do with

[16:11] *** Limbic_Region joined
[16:14] *** faxathisia left
[16:15] *** weinig joined
[16:19] *** REPLeffect joined
[16:27] <fglock> lichtkind: yes, that's a possible explanation

[16:32] <moritz_> re

[16:34] <fglock> kp6: say "IO::Handle error"

[16:34] <exp_evalbot> r18914: OUTPUT[Can't locate object method "new" via package "IO::Handle" at script/kp6 line 340, <> line 1.‚ê§]

[16:34] <perlygatekeeper> perlbot port 25

[16:34] <perlbot> port 25: smtp - Simple Mail Transfer

[16:34] <perlygatekeeper> perlbot port 465

[16:34] <perlygatekeeper> damn

[16:34] <perlygatekeeper> what's the port number for mail delivery

[16:35] <moritz_> 25

[16:36] <perlygatekeeper> no, secure

[16:36] <perlygatekeeper> 465 and 587 

[16:36] <perlygatekeeper> but thanks

[16:37] <moritz_> grep -i smtp /etc/services # 4 t w!

[16:38] *** rindolf joined
[16:40] *** masak left
[16:45] *** Psyche^ joined
[16:59] *** pmurias joined
[17:02] *** Patterner left
[17:02] *** Psyche^ is now known as Patterner

[17:11] *** justatheory joined
[17:13] *** justatheory left
[17:19] *** toshino__ left
[17:23] *** elmex left
[17:24] *** elmex joined
[17:58] *** jjore-m left
[17:58] *** cmarcelo joined
[18:14] *** justatheory joined
[18:19] *** jjore-m joined
[18:24] *** polettix joined
[18:25] *** Alias__ left
[18:25] <fglock> kp6: say (($A::a[1])[2]).exists; say defined($A::a); ($A::a[1])[2]=42; say exists(($A::a[1])[2]); say defined($A::a); 

[18:25] <exp_evalbot> r18916: OUTPUT[Can't locate object method "new" via package "IO::Handle" at script/kp6 line 340, <> line 1.‚ê§]

[18:27] <Tene> kp6: 1;

[18:27] <exp_evalbot> r18916: OUTPUT[Can't locate object method "new" via package "IO::Handle" at script/kp6 line 340, <> line 1.‚ê§]

[18:28] <moritz_> is script/kp6 still the recommended way to eval kp6 code?

[18:29] *** franck____ left
[18:29] *** lambdabot_ joined
[18:30] <pmurias> moritz_: unless you want to brew your one interface i would guess

[18:31] <fglock> pmurias: all kp6 autovivification tests pass :)

[18:32] <pmurias> fglock: that's good

[18:35] <pmurias> neither IO::Handle nor IO::File seem to be requiter/used by script/kp6

[18:35] <pmurias> used i the sense of the keyword

[18:35] <bbkr_> what does '-->' operator do in p6? plenty of those are used in http://svn.pugscode.org/pugs/src/perl6/STD.pm but i cannot find it in Synopses

[18:36] <bbkr_> for example "token infix:sym<=:=> ( --> Chaining) { <sym> {*} }"

[18:36] <moritz_> I think that's "returns an object of type $type"

[18:37] <moritz_> it's in Syntax.pod for example

[18:37] <bbkr_> thanks, that makes sense, Chaining is a class in this file

[18:37] *** rindolf left
[18:38] <fglock> pmurias: I updated script/kp6 to use IO::*

[18:38] *** ebassi left
[18:38] <fglock> kp6: 1

[18:38] <exp_evalbot> r18917: OUTPUT[Can't locate object method "new" via package "IO::Handle" at script/kp6 line 340, <> line 1.‚ê§]

[18:38] <pmurias> fglock: where are they required at?

[18:39] <fglock> by line 340, it selects between STDOUT or a filename for output

[18:39] <fglock> kp6: 1

[18:39] <exp_evalbot> r18918: OUTPUT[no method 'say' in Class 'Str'‚ê§ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 345‚ê§    KindaPerl6::Runtime::Perl5::MOP::__ANON__('HASH(0x8791460)', 'say') called at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 169‚ê§       

[18:39] <exp_evalbot> ..main::DISPATCH('HASH(0x8791460)', 'say') called at - line 17‚ê§]

[18:39] <fglock> kp6: say 1

[18:39] <exp_evalbot> r18918: OUTPUT[1‚ê§]

[18:39] <fglock> it's back :)

[18:40] <fglock> kp6: say (($A::a[1])[2]).exists; say defined($A::a); ($A::a[1])[2]=42; say exists(($A::a[1])[2]); say defined($A::a); 

[18:40] <exp_evalbot> r18918: OUTPUT[0‚ê§0‚ê§1‚ê§1‚ê§]

[18:41] * pmurias laments the death of svnbot

[18:41] *** lisppaste3 joined
[18:41] <pmurias> fglock: autovivifications looks like an advanced feature ;)

[18:41] <fglock> kp6: say ++($A::a);

[18:42] <exp_evalbot> r18918: OUTPUT[1‚ê§]

[18:42] <fglock> kp6: say ++($A::a); $A::a[1];

[18:42] <exp_evalbot> r18918: OUTPUT[no method 'INDEX' in Class 'Int'‚ê§ at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 345‚ê§  KindaPerl6::Runtime::Perl5::MOP::__ANON__('HASH(0x87953d0)', 'INDEX', 'HASH(0x87973d8)') called at compiled/perl5-kp6-mp6/lib/KindaPerl6/Runtime/Perl5/MOP.pm line 169‚ê§  

[18:42] <exp_evalbot> ..main::DISPATCH('HASH(0x87953d0)', 'INDEX', 'HASH(0x87973d8)') called at c...]

[18:42] <pmurias> say $undefine_var;

[18:42] <pmurias> kp6: say $undefine_var;

[18:42] <exp_evalbot> r18918: OUTPUT[ValueProxy‚ê§]

[18:42] <fglock> after autovivification, $A::a can no longer be an array

[18:42] *** pugs_svn joined
[18:42] <pugs_svn> r18914 | fglock++ | [kp6-perl5] s/STORE/BIND/

[18:42] <pugs_svn> r18915 | fglock++ | [kp6-perl5] tighter rule for emitting "self"

[18:42] <pugs_svn> r18916 | fglock++ | [kp6] t/todo/64-autovivify-global.t resolved; 

[18:42] <pugs_svn> r18916 | fglock++ | - 56-proto-sym.t now fails, but this seems to be due to an older bug

[18:42] <pugs_svn> r18917 | fglock++ | [kp6] TODO: autovivification is marked as resolved

[18:42] <pugs_svn> r18918 | fglock++ | [kp6] script/kp6 - added missing 'use'

[18:43] * pmurias cheers the pugs_svn resurection

[18:44] <fglock> oops - autovivification killed strictness

[18:45] <moritz_> that's not so good ;)

[18:46] <pmurias> we only had an illusion of strictness anyway

[18:46] <pmurias> ;)

[18:47] <pmurias> say $undefined_var.Str();

[18:47] <pmurias> kp6: say $undefined_var.Str();

[18:47] <exp_evalbot> r18918: OUTPUT[ValueProxy‚ê§]

[18:47] <pmurias> say $undefined_var.isa("Undef");

[18:47] <pugs_svn> r18919 | fglock++ | [kp6] added "strictness" to TODO

[18:48] <moritz_> kp6: say $undefined_var.isa("Undef");

[18:48] <exp_evalbot> r18919: OUTPUT[1‚ê§]

[18:50] *** barney joined
[18:52] <pmurias> say $undefined_var.isa("Undef");

[18:57] <fglock> hmm - $undefined_var.Str() is a problem

[18:57] <moritz_> kp6: say $undef_var

[18:57] <exp_evalbot> r18919: OUTPUT[ValueProxy‚ê§]

[18:58] <pmurias> fglock: does the new construct the object properly

[18:58] *** penk joined
[18:59] <fglock> the object is ok, but it looks like a prototype object, which stringigfies to the class name

[18:59] *** marmic left
[19:02] *** marmic joined
[19:04] <lichtkind> is there any known problem with the TPF wiki?

[19:04] *** jjore-m left
[19:05] *** DarkWolf84 left
[19:07] *** jjore-m joined
[19:07] <pmurias> having a new method which returns the depends on the internal object format dosn't seem "clean"

[19:08] <lichtkind> has anybody here an account in the TPF wiki?

[19:09] <pmurias> luring people with simpler questions first? ;)

[19:10] <moritz_> ;)

[19:11] <fglock> pugs: my $a = ::Undef.new; say $a

[19:11] <exp_evalbot> OUTPUT[<obj:Undef>‚ê§]

[19:11] <fglock> doesn't look correct either

[19:11] *** elmex left
[19:12] <fglock> pugs: my $a = ::Undef.new; say $a.Str

[19:12] <exp_evalbot> OUTPUT[*** No such method in class Undef: "&Str"‚ê§    at /tmp/S3zMDgqLC2 line 1, column 26 - line 2, column 1‚ê§]

[19:17] *** jovs joined
[19:19] <pmurias> fglock: ValueProxy basicly is a prototype object with with _parent_container

[19:20] <pmurias> kp6: ::Int.isa("Undef")

[19:20] <exp_evalbot> r18919: OUTPUT[syntax error at position 0, line 1 column 0:‚ê§::Int.isa("Undef"‚ê§^ HERE‚ê§]

[19:20] <fglock> it's not a prototype object, it's an instance - but it's "undefined" like a prototype object is

[19:20] <pmurias> fglock: i how it is represented in kp6

[19:20] <pmurias> * i mean

[19:21] <pmurias> %{ $_[0] }

[19:21] <pmurias> clones the prototype

[19:21] <fglock> hmm - let me try something here

[19:22] <pmurias> sure

[19:24] *** jjore-m left
[19:32] <pmurias> ::Foo is the protoobject for the Foo class

[19:32] <fglock> kp6: say undef

[19:32] <exp_evalbot> r18919: OUTPUT[‚ê§]

[19:32] <pmurias> ?

[19:33] <fglock> undef stringifies correctly

[19:33] <moritz_> kp6: print undef

[19:33] <exp_evalbot> r18919: OUTPUT[Undef]

[19:33] <moritz_> ah, wait

[19:33] <moritz_> no output = evaled again with say ( ($expr).perl) around it

[19:33] *** REPLeffect left
[19:34] <pmurias> moritz_: that's a hack

[19:34] <moritz_> pmurias: yes :)

[19:34] <pmurias> bad moritz_ ;)

[19:34] <moritz_> pmurias: but a fairly successfull one, for those who forget to put a 'say' or 'print' in their expression

[19:35] <moritz_> pmurias: the bad thing is that it still says OUTPUT[...]

[19:35] <pmurias> kp6: print undef;say "-----";

[19:35] <exp_evalbot> r18919: OUTPUT[Undef-----‚ê§]

[19:36] <pmurias> kp6: say undef;say "-----";

[19:36] <exp_evalbot> r18919: OUTPUT[‚ê§-----‚ê§]

[19:36] *** pbuetow left
[19:36] <moritz_> ouch

[19:38] <fglock> hmm - ValueProxy can't "be" an Undef, because the Container object can be assigned to

[19:38] *** pbuetow joined
[19:38] <pmurias> fglock: i'm amazed prototype objects get stringifed as the names of their classes

[19:39] <fglock> pmurias: this is specced, afaik

[19:39] <pmurias> yes

[19:39] <pmurias> is there any magic which makes them not inherit the Str method from their respective class?

[19:40] <fglock> they do inherit, but the dispatcher has a special case to ignore the default .Str

[19:40] <pmurias> seen it

[19:41] <pmurias> that conflicts with undef not having a value

[19:41] <fglock> ValueProxy will need some extra magic for .Str, .isa and such

[19:42] <fglock> Undef has the same problems, but it didn't show before

[19:44] <pmurias> the internal object format should be more encapsualted

[19:45] <fglock> should we use P6Opaque ?

[19:46] <pmurias> looking at what it does

[19:47] <pmurias> don't know

[19:48] <fglock> I think it's ok to have special cases for Container and Undef

[19:48] *** jisom joined
[19:48] <fglock> they are too different from plain objects

[19:52] *** TJCRI left
[19:52] <pmurias> fglock: ok

[19:53] <pmurias> but for example Hash.new also depends on the internal object format

[19:54] <pmurias> =head1 Construction and Initialization

[19:54] <pmurias> in S12

[19:54] <pmurias> looks like the way we should be creating objects

[19:54] <fglock> pmurias: I'll read it again..

[19:54] <fglock> home &

[19:58] *** rindolf joined
[20:03] *** xinming_ joined
[20:15] *** fglock left
[20:16] *** xinming left
[20:29] *** lambdabot_ left
[20:30] *** lambdabot_ joined
[20:33] *** fglock joined
[20:33] <fglock> b

[20:34] *** Aankhen`` left
[20:39] <rafl> obra: could mikem help you?

[20:41] <obra> rafl: I passed the comment on to minion but hadn't heard back

[20:41] *** rindolf left
[20:41] <obra> ok. alex says he hasn't poked mike yet.

[20:41] <obra> lame. ;)

[20:41] *** jisom left
[20:44] <rafl> i see

[20:44] <obra> I've just prodded him to deal

[20:45] <rafl> I have some paid hours to work on it this week

[20:45] <rafl> so I'll take care about it if it isn't resolved already

[20:46] <obra> cool! thanks

[20:53] *** ingyfoo joined
[20:53] *** ingyfoo is now known as ingy

[20:58] *** fglock left
[21:00] *** xinming_ left
[21:00] *** Lorn left
[21:00] *** xinming joined
[21:03] <pmurias> class object in the synopsis fragment refers to the prototype?

[21:11] <pmurias> :q

[21:11] <pmurias> typo

[21:11] *** pmurias left
[21:25] *** jjore-m joined
[21:33] *** chris2 joined
[21:37] *** lumi left
[21:49] *** perlygatekeeper left
[22:01] *** barney left
[22:07] *** lichtkind left
[22:16] *** drupek12 left
[22:26] *** TJCRI joined
[22:44] *** iblechbot left
[22:48] *** rama1 joined
[23:00] *** NoNaME joined
[23:00] <NoNaME> Hi

[23:01] <moritz_> hi

[23:09] *** ujwalic joined
[23:09] <pugs_svn> r18920 | dlo++ | [kp6] Test updated to actually fail, and not produce a bad 'successful' output

[23:17] *** TJCRI left
[23:17] *** fglock joined
[23:19] <fglock> pmurias: yes, it seems class-object is the prototype, and actual-class-object is the metaclass

[23:32] *** amnesiac left
[23:33] *** ujwalic left
[23:39] *** jjore-m left
[23:42] *** jjore-m joined
[23:46] *** rama1 left
[23:54] <pugs_svn> r18921 | fglock++ | [kp6-perl5] fixed ValueProxy.Str and .isa; ValueProxy is now "transparent" 

[23:54] <pugs_svn> r18921 | fglock++ | - 46-hash-item-bind.t fails; moved to t/todo

[23:56] <fglock> kp6: my $a; say $a

[23:56] <exp_evalbot> r18921: OUTPUT[‚ê§]

