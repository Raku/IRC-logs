[00:01] *** veritos joined
[00:06] *** veritos_ joined
[00:31] *** Khisanth joined
[00:32] *** forsaken joined
[00:33] *** stevan_ joined
[00:33] *** Aankhen`` joined
[00:40] *** Khisanth joined
[01:03] *** nperez joined
[01:23] *** rlb3 joined
[01:24] *** dolmans joined
[01:38] *** H0LE joined
[02:02] *** weinig is now known as weinig|away

[02:13] *** audreyt_ joined
[02:28] *** dvorak joined
[02:29] *** Eidolos joined
[02:35] *** weinig|away joined
[02:38] *** mako132_ joined
[02:41] *** alexe joined
[02:46] *** esstone joined
[02:57] *** lisppaste3 joined
[03:19] *** drupek12 joined
[03:27] *** kanru joined
[03:39] *** pfenwic1 joined
[03:46] *** forsaken joined
[04:00] *** Southen_ joined
[04:03] *** prly joined
[04:08] *** ProperNoun joined
[04:17] *** b00t joined
[04:29] *** justatheory joined
[04:43] *** prly_ joined
[04:48] *** amnesiac joined
[05:09] *** prly joined
[05:38] <gaal> @tell Limbic~Region Data and Typeable are two datatypes used in haskell reflection, yes; Data is the one allowing generic folds. So for example, to implement the function that looks at a block like { $^a cmp $^b } and infers the set of placeholder variables are {$^a, $^b}, you basically need to write only a function that works on variables, and the generics stuff will sift through a possibly very complex AST node and find those, applying your functi

[05:38] <lambdabot> Consider it noted.

[05:39] <gaal> @tell Limbic~Region both you can get default implementations of both typeclasses from GHC, but Typeable's defaults are more likely to DTRT.

[05:39] <lambdabot> Consider it noted.

[05:43] <gaal> @tell lumi regarding Hs<=>pugs val bridge, see class (Show a, Typeable a, Ord a) => Boxable at Pugs.Class:36 and various instances from there, eg instance (Show a, Typeable a, Ord a) => Boxable (Maybe a). No Data required.

[05:43] <lambdabot> Consider it noted.

[05:43] *** Psyche^ joined
[05:43] *** pfenwic1 left
[05:48] *** Psyche^_ joined
[05:55] *** Psyche^_ is now known as Patterner

[06:09] *** RHainsworth joined
[06:09] *** elmex joined
[06:09] *** Alias__ joined
[06:11] *** prly_ joined
[06:12] *** devogon joined
[06:15] *** BooK joined
[06:19] *** prly__ joined
[06:23] *** baest joined
[06:30] *** miyagawa joined
[06:33] *** bsb left
[06:35] *** rfordinal_ joined
[06:41] *** Alias__ joined
[06:41] *** rfordinal_ joined
[06:41] *** dolmans joined
[06:41] *** integral joined
[06:41] *** Loro joined
[06:41] *** arguile joined
[06:41] *** MikeJS joined
[06:41] *** svnbot6 joined
[06:41] *** allbery_b joined
[06:43] *** rfordinal_ joined
[06:44] *** integral_ joined
[06:49] *** prly joined
[06:50] *** audreyt_ is now known as audreyt

[06:56] *** prly_ joined
[06:59] *** RHainsworth left
[07:08] *** prly__ joined
[07:14] *** rfordinal joined
[07:14] *** prly joined
[07:15] *** integral_ is now known as integral

[07:23] *** jisom joined
[07:35] *** iblechbot joined
[07:40] *** xinming_ joined
[07:49] *** ruz joined
[08:48] *** lf12580 joined
[08:49] *** rgs_ joined
[08:50] *** Maddingu1 joined
[08:53] *** prly joined
[09:03] *** rgs_ is now known as rgs

[09:07] *** lichtkind joined
[09:08] *** rindolf joined
[09:10] *** the_dormant joined
[09:15] <lichtkind> moin

[09:15] <lambdabot> lichtkind: You have 1 new message. '/msg lambdabot @messages' to read it.

[09:16] *** buetow joined
[09:18] *** marmic joined
[09:18] <lichtkind> audreyt: thank

[09:19] <lichtkind> i didnt found re::Engine::PGE where is it?

[09:20] *** awwaiid joined
[09:30] *** geoffb joined
[09:30] *** ProperNoun joined
[09:30] *** Aankhen`` joined
[09:31] *** andara joined
[09:38] *** drupek12 joined
[09:51] <moritz> lichtkind: in the parrot repos there is a file runtime/parrort/library/PGE.pbc

[09:51] <moritz> lichtkind: maybe it's that

[09:51] <moritz> lichtkind: and there is a directory compilers/pge/

[09:51] <moritz> lichtkind: sounds even better

[09:52] <lichtkind> but you cant use it inside perl5?

[09:53] <moritz> lichtkind: it says "This is a regular expression/rules/grammar engine/parser designed to

[09:53] <moritz>        run in Parrot"

[09:54] <lichtkind> yeah but re::Engine is normaly a perl5 plugin

[09:54] <lichtkind> so i thopught re::engine::PGE is for the use in perl

[10:02] <lichtkind> moritz: i know what pge is but when i heard yesterday of re::engine::PGE i was amazed about the possibility maybe i misunderstood something

[10:02] *** rindolf left
[10:05] *** chris2 joined
[10:05] *** BooK_ joined
[10:06] *** baest joined
[10:07] *** ayrnieu joined
[10:36] *** ludwig- joined
[10:42] *** rfordinal_ joined
[10:43] <ayrnieu> ?eval 'm' ~ 'oo' ~ 'se' | > reverse (show (scanl (*) 1 [1..] !! 4))

[10:43] <evalbot_r15771> Error: ␤Unexpected ">"

[10:43] <ayrnieu> Ah, that is Perl6 and then Haskell.  Strange.

[10:44] <gaal> two separate moose, folks :)

[10:44] <gaal> ?eval 'm' ~ 'oo' ~ 'se'

[10:44] <evalbot_r15771> "moose"

[10:44] <gaal> > reverse (show (scanl (*) 1 [1..] !! 4))

[10:44] <lambdabot>  "42"

[10:44] <ayrnieu> ?eval [~] <m oo se>

[10:44] <evalbot_r15771> "moose"

[10:44] <gaal> yay, golf

[10:45] *** gaal changes topic to: http://pugscode.org | http://sial.org/pbot/perl6 | ?eval [~] <m oo se> | > reverse (show (scanl (*) 1 [1..] !! 4))

[10:45] *** gaal changes topic to: http://pugscode.org | http://sial.org/pbot/perl6 | ?eval [~] <m oo se> | We do Haskell, too | > reverse (show (scanl (*) 1 [1..] !! 4))

[10:45] <gaal> -- disambig

[10:45] *** mathlord joined
[11:12] *** [particle] joined
[11:27] <broquaint> What's the equivalent of that Haskell code in Perl 6?

[11:28] <moritz> ?eval "42"

[11:28] <evalbot_r15771> "42"

[11:28] <moritz> broquaint: that's it ;)

[11:33] <broquaint> > show (scanl (*) 1 [1..] !! 4)

[11:33] <lambdabot>  "24"

[11:34] <broquaint> Ah, I get it now.

[11:39] *** ruoso joined
[11:42] <ayrnieu> so, what's the real equivalent of that Haskell code in Perl 6?

[11:43] <Juerd> ayrnieu: say "24";  # ;)

[11:43] *** IllvilJa joined
[11:44] <ayrnieu> these non-answers bore me.

[11:49] <masak> ?reval reverse [*] 1..4

[11:49] <masak> ayrnieu: that's the closest I get

[11:49] <[particle]> it's factorial

[11:49] <masak> ?eval reverse [*] 1..4

[11:49] <evalbot_r15771> "42"

[11:49] <[particle]> 4!

[11:49] *** rfordinal__ joined
[11:50] <moritz> but what's the reverse for?

[11:50] <moritz> it currently reverses only a scalar

[11:50] <masak> moritz: string reversal

[11:50] <moritz> masak: ok, now I get it ;)

[11:50] <masak> both in Perl and Haskell

[11:50] <Debolaz2> http://en.wikipedia.org/wiki/Wikipedia:Articles_for_deletion/Audrey_Tang

[11:51] <lambdabot> http://tinyurl.com/yrp267

[11:51] <masak> (but for different reasons)

[11:51] *** Debolaz2 is now known as Debolaz

[11:51] <ayrnieu> masak - well, for the same reason, but of course the semantics differ.

[11:51] <masak> ayrnieu: as I understand it, in Haskell a string is a list

[11:52] <masak> while in Perl, reverse does one thing for scalars and another for arrays

[11:52] <ayrnieu> masak - yes, that would be part of the 'semantics' that differ.  The reason is still the same.

[11:52] <masak> ayrnieu: ok, granted :)

[11:53] <ayrnieu> but OK, I'll accept { reverse [*] 1..4 } as a nice golf of that Haskell :-)

[11:57] <ayrnieu> It could be better with a  take 4 $ [1..]  ; how is that in perl6?  In Perl5, that specifically is easy enough to simulate with a tied array.

[12:03] *** fglock joined
[12:06] <gaal> broquaint: we don't have lazy lists yet, but once we do: reverse ([\*] 1 .. *)[4] 

[12:06] <gaal> broquaint: [*] is fold, [\*] is scan

[12:06] <gaal> (on (*))

[12:07] <gaal> associtivity and id are defined as traits on the operator

[12:08] <gaal> ?eval ([\*] 1 .. 10)[4]

[12:08] <evalbot_r15771> \120

[12:08] <gaal> ?eval ([\*] 1 .. 10)[3]

[12:08] <gaal> heh.

[12:08] <evalbot_r15771> \24

[12:09] *** FurnaceBoy joined
[12:10] <broquaint> Do/will fold & scan exist as functions?

[12:13] <gaal> fold is spelled "reduce", and exists

[12:13] <gaal> scan.. let me check :)

[12:13] <gaal> ah yes

[12:14] <gaal> scan is spelled "produce", TimToady++

[12:14] <broquaint> Groovy.

[12:14] <gaal> ? produce &infix<+> 1..4

[12:14] <gaal> ?eval produce &infix<+> 1..4

[12:14] <evalbot_r15771> Error: ␤Unexpected "1"␤expecting operator, ":" or ","

[12:14] <gaal> ?eval produce &infix<+>, 1..4

[12:14] <lichtkind> but is it right that MAD will be pluffed into perl?

[12:14] <gaal> grrr

[12:14] <evalbot_r15771> Error: Cannot cast into Hash: VRef <Sub:0xb7ae14b4>

[12:15] <gaal> brb

[12:15] <lichtkind> i mean perl with little p

[12:17] <moritz> ?eval produce {$^a+$^b}, 1..4

[12:17] <evalbot_r15771> (1, 3, 6, 10)

[12:17] *** drupek12 joined
[12:18] <fglock> lichtkind: re::engine is in CPAN: http://search.cpan.org/search?query=re%3A%3Aengine

[12:18] <lambdabot> Title: The CPAN Search Site - search.cpan.org

[12:18] <lichtkind> fglock: i know but i didnt found it there

[12:20] *** Limbic_Region joined
[12:20] *** rfordinal__ is now known as rfordinal

[12:25] <gaal> ?eval produce &infix:<+>, 1..4 # that's more like it

[12:25] <evalbot_r15771> (1, 3, 6, 10)

[12:27] <fglock> lichtkind: avar said he will publish it, after re::engine::Plugin v0.02 is out

[12:28] <lichtkind> will it be out in may?

[12:49] <lichtkind> avar: do you have schedule for re::engine::PGE ?

[12:51] *** prly_ joined
[12:51] *** integral joined
[12:56] <avar> why may?

[12:56] <avar> trying to finish it soonish for the last month:)

[12:56] <avar> I should pack what I have and do a release sometimes soon, still need api polish and docs though:)

[12:56] <avar> *updated docs

[13:00] <fglock> avar: do you know there is a place in pugs for work-in-progress, at misc/pX/

[13:00] *** pnu joined
[13:00] <lichtkind> avar: because the article i writing will me out in may and i want to only write about when it will be out :)

[13:01] <lichtkind> avar: what does re::endine do to perl5 ?

[13:01] <lichtkind> err

[13:01] <lichtkind> avar: what does re::engine::PGE do to perl5 ?

[13:03] <avar> wrap Pugs::Compiler::Rule so you can do

[13:03] <avar> if ("boobs" =~ /\$<x> = (b[oo|w]bs)/) {

[13:03] <avar>     say $&->{x}; # implemented

[13:03] <avar>     say $+{x};   # plan on it

[13:03] <avar> }

[13:03] <avar> all the re::engine:: stuff swaps out perl5 regexes for something else

[13:05] <avar> oh, PGE, PGE would wrap the Parrot Grammar Engine, I've only started on PCR - Pugs Compiler Rule

[13:06] <avar> http://sial.org/pbot/23656 - # PCR.pm so far

[13:06] <lambdabot> Title: Paste #23656 from Someone at 85.197.228.236

[13:09] <lichtkind> avar: so ist re::engine::PCR?

[13:10] <lichtkind> i know approx what re::engine does

[13:10] <lichtkind> i just whant to be correct in my article :)

[13:13] <lichtkind> avar: s/ist/its/

[13:14] *** prly joined
[13:14] <avar> yep

[13:14] <avar> see package:)

[13:16] <avar> lichtkind: http://svn.perl.is/svnweb/index.cgi/perl.is/browse/

[13:17] <lambdabot> Title: browse: /perl.is (Rev: HEAD, via SVN::Web)

[13:19] <lichtkind> avar: thanks wtf is plan9 ?

[13:19] *** prly__ joined
[13:19] <avar> http://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs

[13:19] <lambdabot> Title: Plan 9 from Bell Labs - Wikipedia, the free encyclopedia

[13:23] <avar> http://svn.perl.is/svnweb/index.cgi/perl.is/browse%2Fre-engine-Plugin%2Ftrunk/t # best reference of what works atm

[13:23] <lambdabot> Title: browse: /perl.is/re-engine-Plugin/trunk/t (Rev: HEAD, via SVN::Web), http://tinyurl.com/2fgllp

[13:24] <avar> all those tests pass at the moment

[13:28] <lichtkind> avar: so its the regexes from plan9 regex lib ?

[13:31] *** lf12580 left
[13:35] <avar> lichtkind: yeah

[13:36] *** drupek12 joined
[13:36] *** integral joined
[13:41] *** iblechbot joined
[13:41] *** prly joined
[13:46] *** prly_ joined
[13:47] <moritz> ?eval class f {has @.f; method foo {return $.f}} my $f=f.new; say $f.foo'

[13:47] <evalbot_r15771> Error: ␤Unexpected "'"␤expecting term postfix, operator, ":" or ","

[13:48] <moritz> on my maschine that compiles and runs (although it should not)

[13:48] <moritz> ?eval class f {has @.f; method foo {return $.f}} my $f=f.new; say $f.foo

[13:48] <evalbot_r15771> OUTPUT[␤] Bool::True

[13:48] <masak> ?eval class f {has @.f; method foo {return $.f}} my $f=f.new; $f.foo

[13:48] <evalbot_r15771> []

[13:48] <moritz> it allows access to $.foo although only @.foo should be available

[13:49] <masak> moritz: yeah, seems like a bug

[13:50] <moritz> masak: any idea where an appropriate testcase should be?

[13:50] <masak> moritz: t/oo/attributes?

[13:51] <moritz> masak: somwhere there, probably

[13:51] * masak is currently making an inventory of the pugs test suite

[13:51] *** drbean joined
[13:51] <masak> so you're kinda asking the right person :)

[13:52] <masak> 'though I'm by no means an expert on it

[13:57] *** rlb3_work joined
[13:59] <moritz> maybe t/oo/attributes/instance.t?

[14:00] <lichtkind> avar: thx

[14:04] *** forsaken joined
[14:06] *** rashakil__ joined
[14:11] *** vel joined
[14:34] *** kanru joined
[14:38] *** mr_ank joined
[15:01] *** pmurias joined
[15:01] *** bonesss joined
[15:02] <pmurias> masak: S12: Because C<$.foo>, C<@.foo>, C<%.foo>, C<&.foo> are just shorthands of

[15:02] <pmurias> C<self.foo> with different contexts

[15:03] <pmurias> ?eval class f {has @.f; method foo {return $.f}} my $f=f.new; @f.foo

[15:03] <evalbot_r15771> Error: No such method in class Array: &foo

[15:04] <pmurias> ?eval class f {has @.f;} my $f=f.new; $f.f

[15:04] <evalbot_r15771> []

[15:04] <pmurias> ?eval class f {has @.f; method foo {return @.f}} my $f=f.new; @f.foo

[15:04] <evalbot_r15771> Error: No such method in class Array: &foo

[15:05] <pmurias> ?eval class f {has @.f; method foo {return @.f}} my $f=f.new; $f.foo

[15:05] <evalbot_r15771> []

[15:05] <pmurias> (1,2,3)

[15:05] <pmurias> ?eval (1,2,3)

[15:05] <evalbot_r15771> (1, 2, 3)

[15:05] <pmurias> ?eval sub {return 1,2,3};f()

[15:05] <evalbot_r15771> Error: No such subroutine: &f

[15:05] <pmurias> ?eval sub f {return 1,2,3};f()

[15:06] <evalbot_r15771> (1, 2, 3)

[15:06] <pmurias> my @a;@a

[15:06] <pmurias> ?eval my @a;@a

[15:06] <evalbot_r15771> []

[15:31] <obra> We're looking for a new perl6 summarizer. Would anyone here be interested in the fame and fortune that comes with being the person to put a public face on all the work that goes on on Perl 6 each week?

[15:32] <[particle]> *cough* good luck! *cough*

[15:32] * obra smacks particle

[15:32] *** buetow joined
[15:32] <[particle]> has ann stopped for good?

[15:33] <obra> ann's finding herself without enough time to do as good a job as she feels the job deserves

[15:33] <obra> She's going to hang around for a bit to help with an orderly transition.

[15:34] <[particle]> you know, i was wondering if there was a way a wiki or obby could allow multiple folks to act as summarizer

[15:34] <[particle]> i call it, "cooperation"

[15:34] <obra> it'd certainly be interesting

[15:34] <obra> nothingmuch: want to hack on your tools more to make collaborative summarization easyier?

[15:35] <[particle]> i was thinking about how spreading out release manager role for parrot has improved things, and thought the summarys could benefit

[15:35] <obra> sure

[15:36] <obra> it makes lots of sense

[15:36] *** bonesss is now known as bones`almoco

[15:36] <obra> "With enough hands, all work is shallow"

[15:38] <gaal> kudra++ # great job when she did have time

[15:38] <[particle]> indeed

[15:38] <lichtkind> obra i would contribute but defeinitvly have the time to do it alone

[15:39] <[particle]> i read every post, and i still find the summaries quite valuable

[15:40] <Alias__> obra!

[15:40] <Alias__> You are totally the person I need to talk to right now

[15:40] <Alias__> http://use.perl.org/~Alias/journal/32762

[15:40] <obra> Alias__: how can I help?

[15:40] * [particle] wanted to talk to Alias__, but can't remember why

[15:40] <Alias__> Read that, then talk to me about commit bit

[15:40] <lambdabot> Title: Journal of Alias (5735)

[15:41] <obra> ok. setting up commitbit shouldn't take much work. sorry to hear about your repostorty. have you lost data?

[15:41] <masak> pmurias: ah, now that you mention it, yes

[15:42] <masak> so it's not really an error

[15:42] <Alias__> obra: Yeah :(

[15:42] <Alias__> obra: The actual CPAN code is all intact, but I'm still patching together some commercial stuff

[15:42] <Alias__> I mean, I have enough checkouts spread around they are ok, but I really don't want to lose the history

[15:42] <obra> ok. was gonna say. I have a currentish mirror of the cpan code.

[15:43] <obra> ...this is where having svk can be a lifesaver ;)

[15:43] <Alias__> I'm extra careful to always have 4-5 semi-current checkouts

[15:43] <Alias__> And fairly irregular proper backups

[15:43] <Alias__> Or should that be fairly regular irregular backups :)

[15:48] <gaal> unfairly regular backups?

[15:49] <Alias__> heh

[15:50] <Alias__> Fortunately, MOST of the commercial code moved to DreamHost subversion, since for them having plain text passwords to edit doesn't hurt

[15:50] <Alias__> For the CPAN repo though, it demands the automated account management stuff

[15:54] <Alias__> ew

[15:54] <Alias__> One thing I might have lost though, is the master for my codegen system

[15:55] <Alias__> in fact, I haven't found an intact current checkout yet either

[15:55] <Alias__> managed to save the database thank god

[16:01] <avar> 15:34:07 <[particle]> you know, i was wondering if there was a way a wiki or obby could allow multiple folks to act as summarizer

[16:01] <avar> I belive svn should be used for this

[16:01] <avar> host it in the pugs repos?:)

[16:01] <obra> avar: yes, though tools may help a lot to prevent duplicated work

[16:01] *** fglock joined
[16:02] <avar> *nod*

[16:04] <obra> and we need someone to run the show

[16:04] <obra> Are you interested in trying to speakhead ?

[16:04] <obra> "spearhead"

[16:10] <Alias__> I prefer the term "spadehead"

[16:10] <Alias__> Because it means you're the one down in the shit doing something useful before anyone else realises there's actually something happening

[16:10] <Alias__> And then of course, while others are pouring the concrete, you sit back and lap up the applause :)

[16:11] <fglock> re pugs repos: http://svn.pugscode.org/pugs/docs/summaries/

[16:11] <lambdabot> Title: Revision 15771: /docs/summaries

[16:25] *** Southen joined
[16:38] *** offby1 joined
[16:40] *** forsaken joined
[16:49] *** diotalevi joined
[16:54] *** fridim joined
[16:59] *** offby1 joined
[17:06] *** justatheory joined
[17:19] *** diotalevi joined
[17:20] *** thepler joined
[17:22] *** bones`almoco is now known as bonesss

[17:26] *** [particle] joined
[17:26] <tene> http://thorstenl.blogspot.com/2007/01/thls-irssi-notification-script.html

[17:27] <lambdabot> Title: thl: thl's irssi notification script [UPDATED], http://tinyurl.com/yqvbla

[17:30] *** forsaken joined
[17:52] *** weinig|away is now known as weinig

[17:59] <gaal> @tell nothingmuch http://www.ultratechnology.com/meta2.html

[17:59] <lambdabot> Consider it noted.

[17:59] *** ozo_ joined
[18:00] *** forsaken joined
[18:10] *** jisom joined
[18:12] *** Kinbote joined
[18:15] <pmurias> forth seems bizarre to me...

[18:15] <allbery_b> enh

[18:16] <allbery_b> it is certainly "different", but not so much bizarre

[18:16] <allbery_b> or do you consider postscript bizarre as well?

[18:16] *** vel joined
[18:16] *** weinig is now known as weinig|bbl

[18:19] <broquaint> I would say ColorForth qualifies as bizarre.

[18:20] * allbery_b googles and finds himself agreeing

[18:20] <moritz> allbery_b: well, postscript is more "special" than "bizzare" ;-)

[18:25] <broquaint> Or should I say, 2color6Forth :)

[18:25] <broquaint> Hrm, 3color5Forth

[18:25] * moritz screams out in agony

[18:25] <broquaint> That's the ticket.

[18:25] *** polettix joined
[18:26] <broquaint> Ah no, 5color3Forth it should be according to http://en.wikipedia.org/wiki/Colorforth

[18:26] * broquaint gives up

[18:27] <SamB> hmm, is colorforth one of the distinguished few languages with multiple sourceplanes?

[18:27] <broquaint> Looks like it.

[18:28] <broquaint> I imagine it's only a small macro away in perl6 ...

[18:31] *** aalaa joined
[18:32] * SamB supposes the sourcefiles are probably not actually stored in multiple planes

[18:32] <broquaint> Doesn't look like it, no.

[18:33] <SamB> but that was just a PC joke anyway ;-)

[18:33] * broquaint watches it whistle over his head

[18:34] <SamB> hmm.

[18:34] * SamB thinks it may have been an incorrect PC joke

[18:34] *** aalaa left
[18:37] *** polettix is now known as torquemada

[18:37] <moritz> hey, we could color-code different contexts in p6 source code

[18:37] <moritz> I mean just as syntax hilighting

[18:38] *** torquemada is now known as polettix

[18:42] <tene> map -> $n 9$n*2, @list

[18:45] <TimToady>  

[18:45] <tene> use Color; class Foo { has $5private; has $10public; has $11publicisrw; 

[18:45] * TimToady 's mind is obviously blank...

[18:47] <TimToady> but i do kinda like the context coloring idea

[18:48] <TimToady> especially since with p6 it turns into lazy vs eager coloring

[18:48] <broquaint> If Perl 6 were a colour what colour what it be?

[18:48] <allbery_b> octarine :)

[18:49] <tene> broquaint: it changes based on what packages you use.

[18:50] <Alias__> allbery_b, maybe bluer than that though... octamarine? :)

[18:51] * moritz wonders how hard it would be to teach the vim perl6 syntax file to use different background colors for different contexts

[18:51] <TimToady> I'm sure gaal would say Perl 5 is tan and Perl 6 is brown.

[18:52] <tene> Why would gaal say that?

[18:52] <TimToady> because brown is very møøse

[18:53] <tene> Ahh.

[18:53] <[particle]> i think perl6 would be grue

[18:54] <[particle]> grue is the new bleen, you know.

[18:54] <TimToady> would you rather have a cold grue or a cold bleen?

[18:56] <broquaint> .oO( What does syntax-highlighted perl sounds like to synesthesics ... )

[18:56] <TimToady> salty

[18:57] <TimToady> well, actually, some of 'em might think it's pretty shweet.

[18:58] <TimToady> synaesthesia is highly idiosyncratic...

[18:58] <[particle]> perl 6: like pouring sugar on perl 5's wounds

[19:01] <pmurias> what is/are synesthesics?

[19:01] <broquaint> http://en.wikipedia.org/wiki/Synesthesia

[19:01] <lambdabot> Title: Synesthesia - Wikipedia, the free encyclopedia

[19:04] *** elmex joined
[19:05] <pmurias> thanks

[19:05] <broquaint> That should've been "synesthetes", I'd forgotten the appropriate term :/

[19:06] *** forsaken joined
[19:07] <pmurias> how does one write colorForth with a normal editor?

[19:10] <broquaint> I think it can only be done within color 5color3Forth1 presently.

[19:10] <broquaint> s/color //

[19:11] <SamB> you could translate normalish forth, I think...

[19:13] <TimToady> colorspace as syntax is just about as bad as whitespace as syntax...

[19:14] <broquaint> Possibly a little unfair on the colour blind as well.

[19:17] <pmurias> and the ascii shackled

[19:17] <SamB> TimToady: I'd say it is worse

[19:18] <SamB> since it (a) requires editor support and (b) is probably not easy to type

[19:21] <pmurias> (c) it is more expensive to print

[19:22] <gaal> ~/~ given $moose { when :house<7> {...} } ~/~

[19:23] * obra ponders colorForth with a colorblindness filter. We could use sigils to denote colors...

[19:25] <gaal> hey, happy equinox everybody!

[19:26] <moritz> moose

[19:27] <gaal> yes

[19:39] *** yuteh joined
[19:47] *** geoffb joined
[19:49] *** bonesss joined
[19:53] <geoffb> BTW, as I recall part of the reason for colorForth (aside from pushing yet more CPU work in the runtime -> compiler -> editor direction) is to get as much conceptually on the screen at once, when limited by Chuck's low vision.  Entire enlarged screen was 16 x 16 characters or some such, and he needed to fit a maximum amount of semantics within his editor window

[19:53] <svnbot6> r15772 | kudra++ | Summary complete

[19:55] *** lichtkind joined
[19:55] <kolibrie> kudra++ # summary

[19:55] <lichtkind> kudra++

[19:56] <geoffb> kudra++ indeed

[19:58] <lichtkind> audreyt: ping

[20:02] <tene> kudra++

[20:03] *** rashakil_ joined
[20:03] *** bones_ joined
[20:08] *** the_dormant joined
[20:12] *** Alias__ joined
[20:18] *** explorer joined
[20:20] *** integral joined
[20:24] *** Aankhen`` joined
[20:25] *** jferrero joined
[20:29] *** jferrero joined
[20:30] * tene considers translating perlwm to Perl 6.

[20:46] *** ludan joined
[20:47] <ludan> hola

[20:50] <fglock> hola

[20:50] *** larsen_ joined
[21:01] *** diotalevi joined
[21:08] *** Psyche^ joined
[21:17] *** Psyche^ is now known as Patterner

[21:24] *** drupek12 joined
[21:25] *** rofl joined
[21:26] *** rofl is now known as mathlord

[21:33] *** riffraff joined
[21:33] <riffraff> hi

[21:37] <tene> Hi!

[21:41] <pmurias> hi

[21:52] <offby1> aren't we jolly

[22:06] *** mr_ank joined
[22:15] *** Caelum joined
[22:26] *** Limbic_Region joined
[22:31] *** drupek12 joined
[22:46] *** felipe joined
[23:02] *** mako132_ joined
[23:04] *** perlmonkey2 joined
[23:19] *** macli joined
[23:25] *** explorer joined
[23:26] *** riffraff joined
[23:38] *** riffraff joined
[23:39] *** mjk joined
