[00:06] *** theorb_ joined
[00:08] *** BinGOs left
[00:15] *** penk left
[00:17] *** theorbtwo left
[00:40] *** penk joined
[00:40] *** lichtkind joined
[00:43] *** devogon left
[00:44] *** polettix left
[00:54] *** thoughtpolice left
[00:57] *** lichtkind left
[01:00] *** kanru left
[01:10] *** jisom joined
[01:13] *** xdg joined
[01:36] *** agjal left
[01:36] *** agjal joined
[01:41] *** J3M left
[02:06] *** justatheory left
[02:07] *** cnhackTNT joined
[02:37] <agjal> good night

[02:43] *** neuromu joined
[02:45] *** agjal left
[02:49] *** njbartlett left
[02:50] *** njbartlett joined
[02:50] *** justatheory joined
[02:58] *** Limbic_Region left
[03:00] *** njbartlett left
[03:03] *** BinGOs_ left
[03:03] *** funktio left
[03:03] *** obra left
[03:03] *** Southen left
[03:03] *** neuromu left
[03:03] *** Patterner left
[03:03] *** SamB left
[03:03] *** zakame left
[03:03] *** ting_ left
[03:03] *** kolibrie left
[03:03] *** moritz_ left
[03:03] *** djm left
[03:03] *** sunnavy left
[03:03] *** Kattana left
[03:03] *** ft left
[03:03] *** tcliou left
[03:03] *** pasteling left
[03:03] *** Daveman left
[03:03] *** zostay left
[03:03] *** f0rth left
[03:03] *** diotalevi left
[03:03] *** Grrrr left
[03:03] *** thepler left
[03:03] *** tewk left
[03:03] *** JarJarBinks left
[03:03] *** zamolxes left
[03:03] *** Juerd left
[03:03] *** jiing left
[03:03] *** allbery_b left
[03:03] *** revdiablo left
[03:03] *** pjcj left
[03:03] *** integral left
[03:03] *** justatheory left
[03:03] *** cnhackTNT left
[03:03] *** jferrero left
[03:03] *** bbkr_ left
[03:03] *** pkeane left
[03:03] *** aindilis left
[03:03] *** rgs left
[03:03] *** drbean left
[03:03] *** dalek left
[03:03] *** Auzon left
[03:03] *** reltuk left
[03:03] *** arguile left
[03:03] *** wolverian left
[03:03] *** ead left
[03:03] *** baest_ left
[03:03] *** cognominal left
[03:03] *** Eidolos left
[03:03] *** buubot left
[03:03] *** bsb left
[03:03] *** araujo left
[03:03] *** cookys left
[03:03] *** jjore-m left
[03:03] *** qmole left
[03:03] *** exp_evalbot left
[03:03] *** pugs_svn left
[03:03] *** kcwu left
[03:03] *** buu left
[03:03] *** broquaint left
[03:03] *** silug left
[03:03] *** nipotan left
[03:03] *** jisom left
[03:03] *** theorb_ left
[03:03] *** Schwern left
[03:03] *** __Ace__ left
[03:03] *** marmic left
[03:03] *** pbuetow left
[03:03] *** jcpiza left
[03:03] *** akreal left
[03:03] *** mncharity left
[03:03] *** charsbar left
[03:03] *** kst left
[03:03] *** Casan_ left
[03:03] *** avar left
[03:03] *** gbacon left
[03:03] *** xdg left
[03:03] *** idiotmax left
[03:03] *** Khisanth left
[03:03] *** yahooooo left
[03:03] *** nnunley left
[03:03] *** Maddingue left
[03:03] *** clkao left
[03:03] *** yath left
[03:03] *** Tene left
[03:03] *** jql left
[03:03] *** penk left
[03:03] *** stevan_ left
[03:03] *** lisppaste3 left
[03:03] *** xinming_ left
[03:03] *** dvorak left
[03:03] *** mtve left
[03:03] *** Lunchy left
[03:03] *** nipra left
[03:03] *** Caelum left
[03:03] *** [particle1 left
[03:03] *** AzureBOT_ left
[03:03] *** rhr left
[03:03] *** Ara4n left
[03:03] *** chruck left
[03:03] *** zev left
[03:03] *** GeJ left
[03:03] *** spinclad left
[03:03] *** takanori left
[03:03] *** jrockway left
[03:03] *** test left
[03:03] *** awwaiid left
[03:03] *** Gothmog_ left
[03:03] *** gugod left
[03:03] *** ruz left
[03:03] *** shachaf left
[03:03] *** nothingmuch left
[03:03] *** cj left
[03:03] *** Yappo_ left
[03:03] *** c9s left
[03:03] *** rafl left
[03:03] *** felipe left
[03:03] *** pravus left
[03:04] *** [particle] joined
[03:04] *** Ara5n joined
[03:04] *** njbartlett joined
[03:04] *** justatheory joined
[03:04] *** neuromu joined
[03:04] *** cnhackTNT joined
[03:04] *** xdg joined
[03:04] *** jisom joined
[03:04] *** penk joined
[03:04] *** theorb_ joined
[03:04] *** Southen joined
[03:04] *** Schwern joined
[03:04] *** jferrero joined
[03:04] *** __Ace__ joined
[03:04] *** pkeane joined
[03:04] *** bbkr_ joined
[03:04] *** Auzon joined
[03:04] *** stevan_ joined
[03:04] *** aindilis joined
[03:04] *** marmic joined
[03:04] *** Patterner joined
[03:04] *** pbuetow joined
[03:04] *** rgs joined
[03:04] *** lisppaste3 joined
[03:04] *** xinming_ joined
[03:04] *** SamB joined
[03:04] *** zostay joined
[03:04] *** zakame joined
[03:04] *** drbean joined
[03:04] *** f0rth joined
[03:04] *** dalek joined
[03:04] *** idiotmax joined
[03:04] *** Khisanth joined
[03:04] *** dvorak joined
[03:04] *** mtve joined
[03:04] *** Lunchy joined
[03:04] *** nnunley joined
[03:04] *** yath joined
[03:04] *** clkao joined
[03:04] *** Maddingue joined
[03:04] *** jql joined
[03:04] *** Tene joined
[03:04] *** yahooooo joined
[03:04] *** nipra joined
[03:04] *** qmole joined
[03:04] *** exp_evalbot joined
[03:04] *** pugs_svn joined
[03:04] *** kcwu joined
[03:04] *** nipotan joined
[03:04] *** buu joined
[03:04] *** silug joined
[03:04] *** broquaint joined
[03:04] *** Casan_ joined
[03:04] *** mncharity joined
[03:04] *** jcpiza joined
[03:04] *** charsbar joined
[03:04] *** avar joined
[03:04] *** cognominal joined
[03:04] *** reltuk joined
[03:04] *** ead joined
[03:04] *** bsb joined
[03:04] *** wolverian joined
[03:04] *** Eidolos joined
[03:04] *** cookys joined
[03:04] *** revdiablo joined
[03:04] *** diotalevi joined
[03:04] *** pjcj joined
[03:04] *** jiing joined
[03:04] *** integral joined
[03:04] *** Juerd joined
[03:04] *** Grrrr joined
[03:04] *** allbery_b joined
[03:04] *** thepler joined
[03:04] *** tewk joined
[03:04] *** djm joined
[03:04] *** tcliou joined
[03:04] *** sunnavy joined
[03:04] *** moritz_ joined
[03:04] *** Kattana joined
[03:04] *** ting_ joined
[03:04] *** kolibrie joined
[03:04] *** pasteling joined
[03:04] *** ft joined
[03:04] *** Daveman joined
[03:04] *** gbacon joined
[03:04] *** JarJarBinks joined
[03:04] *** zamolxes joined
[03:04] *** arguile joined
[03:04] *** akreal joined
[03:04] *** araujo joined
[03:04] *** jjore-m joined
[03:04] *** Caelum joined
[03:04] *** baest_ joined
[03:04] *** buubot joined
[03:04] *** kst joined
[03:05] *** BinGOs_ joined
[03:06] *** obra joined
[03:06] *** funktio joined
[03:06] *** AzureBOT joined
[03:06] *** GeJ joined
[03:10] *** penk left
[03:13] *** xdg_ joined
[03:13] *** AzureBOT_ joined
[03:13] *** awwaiid joined
[03:13] *** pravus joined
[03:13] *** rafl joined
[03:13] *** zev joined
[03:13] *** spinclad joined
[03:13] *** felipe joined
[03:13] *** chruck joined
[03:13] *** nothingmuch joined
[03:13] *** shachaf joined
[03:13] *** ruz joined
[03:13] *** Yappo_ joined
[03:13] *** test joined
[03:13] *** cj joined
[03:13] *** c9s joined
[03:13] *** takanori joined
[03:13] *** jrockway joined
[03:13] *** rhr joined
[03:13] *** gugod joined
[03:13] *** Gothmog_ joined
[03:14] *** penk joined
[03:20] *** pen1 joined
[03:22] *** jisom left
[03:25] *** AzureBOT_ left
[03:26] *** justatheory left
[03:29] *** xdg left
[03:32] *** rhr left
[03:32] *** zev left
[03:32] *** chruck left
[03:32] *** spinclad left
[03:32] *** takanori left
[03:32] *** awwaiid left
[03:32] *** Gothmog_ left
[03:32] *** test left
[03:32] *** jrockway left
[03:32] *** gugod left
[03:32] *** ruz left
[03:32] *** shachaf left
[03:32] *** nothingmuch left
[03:32] *** cj left
[03:32] *** Yappo_ left
[03:32] *** c9s left
[03:32] *** rafl left
[03:32] *** felipe left
[03:32] *** pravus left
[03:32] *** funktio left
[03:32] *** obra left
[03:33] *** Gothmog_ joined
[03:33] *** gugod joined
[03:33] *** rhr joined
[03:33] *** jrockway joined
[03:33] *** takanori joined
[03:33] *** c9s joined
[03:33] *** cj joined
[03:33] *** test joined
[03:33] *** Yappo_ joined
[03:33] *** ruz joined
[03:33] *** shachaf joined
[03:33] *** nothingmuch joined
[03:33] *** chruck joined
[03:33] *** felipe joined
[03:33] *** spinclad joined
[03:33] *** zev joined
[03:33] *** rafl joined
[03:33] *** pravus joined
[03:33] *** awwaiid joined
[03:33] *** obra joined
[03:33] *** funktio joined
[03:36] *** penk left
[03:38] *** __Ace__ left
[03:39] *** BinGOs_ left
[03:40] *** BinGOs joined
[03:56] *** pen1 left
[03:57] *** penk joined
[04:00] *** jferrero left
[04:27] *** Auzon left
[04:29] *** Auzon joined
[04:39] *** justatheory joined
[04:52] *** thoughtpolice joined
[04:58] *** neuromu left
[05:07] *** penk left
[05:08] *** penk joined
[05:17] *** amnesiac joined
[05:26] *** justatheory left
[05:39] *** thestarslookdown joined
[05:46] *** lambdabot left
[05:47] *** lambdabot joined
[05:48] *** hcchien joined
[05:50] *** thoughtpolice left
[06:36] *** pen1 joined
[06:36] *** penk left
[06:49] *** thestarslookdown left
[06:57] *** xinming_ left
[07:12] *** njbartlett_ joined
[07:13] *** njbartlett left
[07:15] *** devogon joined
[07:17] *** theorb_ is now known as theorbtwo

[07:32] *** xinming joined
[07:53] *** IllvilJa joined
[07:53] *** pen1 left
[08:04] *** iblechbot joined
[08:23] *** silug left
[08:25] *** franck___ joined
[08:36] *** agjal joined
[08:50] *** Ashizawa joined
[08:54] *** elmex joined
[08:57] <moritz_> good morning, lambdamoose ;)

[09:18] *** penk joined
[09:25] *** njbartlett_ left
[09:25] *** njbartlett joined
[09:41] *** jjore-m left
[09:42] *** Ashizawa left
[09:46] *** drrho joined
[09:50] *** iblechbot_ joined
[10:04] *** cnhackTNT left
[10:04] *** iblechbot left
[10:16] *** Ashizawa joined
[10:22] *** agjal left
[10:47] *** Grrrr left
[10:47] *** Grrrr joined
[10:49] *** andara joined
[11:01] *** ebassi joined
[11:10] *** iblechbot_ left
[11:14] *** Ashizawa left
[11:21] *** ruoso joined
[11:44] *** xinming left
[11:44] *** xinming joined
[12:01] *** chris2 joined
[12:03] *** penk left
[12:14] *** hanekomu joined
[12:15] *** fglock joined
[12:16] *** cmarcelo joined
[12:18] *** BinGOs_ joined
[12:20] *** BinGOs left
[12:29] *** BinGOs_ left
[12:31] *** chris2 left
[12:31] *** BinGOs joined
[12:40] *** bbkr__ joined
[12:41] *** bbkr_ left
[12:48] *** iblechbot joined
[13:31] *** lichtkind joined
[13:32] *** jferrero joined
[13:45] *** fglock left
[14:03] *** nipotan is now known as nipotaway

[14:07] *** iblechbot left
[14:26] *** iblechbot joined
[14:31] *** masak joined
[14:32] *** jhorwitz joined
[14:32] *** amnesiac left
[14:38] *** fglock joined
[14:44] *** gongyiliao joined
[15:00] *** gongyiliao left
[15:06] *** hanekomu left
[15:08] <ruoso> fglock, about scopes...

[15:08] <ruoso> one thing I just reminded is that it is expected that the scope can be pushed and popped explicitly

[15:09] <ruoso> perl5 does it, for instance...

[15:09] <ruoso> you have a macro to push and pop the scope

[15:09] *** xdg joined
[15:09] <fglock>  { ... }

[15:09] <ruoso> in vm terms, I mean

[15:09] <ruoso> not in language terms

[15:10] <ruoso> so for every type of scope, it's ok to expect an explicit declaratino of a push or pop

[15:10] <ruoso> when declaring a context variable

[15:10] <fglock> $inner := $outer.inner; ...; $inner.DESTROY

[15:10] <ruoso> yep...

[15:11] <ruoso> but that also for the other kinds of scopes...

[15:11] <ruoso> $contextinner := $contextouter.inner; ...; $contextinner.destroy

[15:11] <theorbtwo> ruoso: I note that requirement of perl5 has been a reason for a lot of memory leaks in XS historically, and one of the ideas for perl6 when the project was first announced (back in the dim elder days) was to get away from that to make writing XS-equiv easier.

[15:12] <ruoso> theorbtwo, but how do you implement it without explicit scope manipulation?

[15:13] <theorbtwo> ruoso: Fuck if I know.

[15:13] <ruoso> heh

[15:14] <theorbtwo> The idea was that the supermagical gc would obliviate the need for XS writers to care so much.

[15:14] <ruoso> ah.. yeah... the trace gc...

[15:14] <ruoso> but this is not completely scope-related...

[15:15] <ruoso> p5 requires that because it only destroys the variables when you pop the scope..

[15:15] <ruoso> in yap6, otoh, the variable is destroyed immediatly if it reaches refcount 0

[15:15] <ruoso> anyway, I'm not still confortable with trace gc..

[15:15] <ruoso> I like things being deterministic

[15:16] <ruoso> the thing in Perl 6 is the new types of scope

[15:16] <ruoso> which makes a new set of possible stacks for symbol-name-resolution

[15:17] *** renormalist joined
[15:19] <ruoso> fglock, I got it...

[15:19] <ruoso> if you place before GlobalScope a hash for the twigils

[15:19] <ruoso> you can represent the other scope types...

[15:19] *** TJCRI joined
[15:20] <fglock> hmm

[15:20] <ruoso> then you'll have

[15:21] <ruoso> MainScopeManager{*}{A::b}

[15:21] <ruoso> for a global variable

[15:23] <ruoso> and you can have a precedence list for scope types

[15:23] <ruoso> like

[15:23] <ruoso> you first look at "my", than at "context", than at "temp", and finally at "global"

[15:25] <ruoso> unless the twigil is defined... which makes you look directly to that scope...

[15:26] <ruoso>  hmmm

[15:26] <ruoso> maybe I'm wrong...

[15:29] *** jhorwitz left
[15:31] <ruoso> in which synopsis is the definition of the variable scope types ?

[15:34] *** rindolf joined
[15:34] <[particle]> looks like S04, but it's somewhat messy imo

[15:36] <fglock> I think most of the info is in the mail logs

[15:37] *** jhorwitz joined
[15:39] *** hanekomu joined
[15:40] *** renormalist left
[15:42] *** ispy_ joined
[15:46] *** fmbogo joined
[15:56] *** xdg left
[16:05] *** rindolf left
[16:10] *** justatheory joined
[16:12] *** pmurias joined
[16:12] <pmurias> fglock: why is GlobalScoper required, wouldn't an implicit 'use GLOBAL' be cleaner?

[16:14] *** Khisanth left
[16:16] *** rindolf joined
[16:16] <ruoso> pmurias, GlobalScope is not GLOBAL

[16:16] <ruoso> GLOBAL is a namespace entry

[16:20] <pmurias> ruoso: i don't claim it is

[16:20] <pmurias> GlobalScope is i guess nessesary for 'no strict'

[16:21] <fglock> pmurias: GlobalScope is just an specialized Scope - it's not really necessary

[16:21] <fglock> it's just an experiment for now

[16:21] *** Psyche^ joined
[16:21] *** Patterner left
[16:21] *** Psyche^ is now known as Patterner

[16:21] <fglock> s/an/a/

[16:22] <fglock> 1st

[16:23] <fglock> i'm doing some experiments with interpreters (as opposed to VM)

[16:24] <pmurias> fglock: interpreters such as perl5 or such as in bash

[16:24] <pmurias> ?

[16:24] <pmurias> s/in//

[16:29] *** rindolf left
[16:30] <fglock> such as perl5

[16:31] *** justatheory left
[16:32] *** Limbic_Region joined
[16:33] <pmurias> fglock: are there other major things slowing down the perl5 backend then the slow dispatch?

[16:34] <fglock> there is the Container object overhead

[16:35] <pmurias> (have you seen misc/cache.pl?)

[16:36] <fglock> yes - have you tested it?

[16:36] <pmurias> in kp6?

[16:37] <pmurias> i could try to integrate it

[16:37] <fglock> pmurias: even if we get to MiniPerl6 speed, this is still slow

[16:38] <fglock> but it would help for now

[16:38] *** Khisanth joined
[16:38] <fglock> we could focus on the compiler again, instead of worrying about backends

[16:39] <pmurias> fglock: i think it shouldn't be too hard to beat the mp6 based compiler

[16:39] <pmurias> we have better parse times, and the compiler does very little work besides parsing for now

[16:42] <fglock> re little work - compiling kp6 generates a *lot* of data

[16:44] <fglock> coffee &

[16:45] *** xinming left
[16:45] *** fmbogo left
[16:46] <pugs_svn> r19221 | pmurias++ | [kp6] changed variable_names to lexicals in the libkp6 Pad

[16:47] *** Khisanth left
[16:54] <pugs_svn> r19222 | pmurias++ | [kp6] removing bit of an experiment which got commited accidently

[17:03] *** TJCRI left
[17:04] *** rindolf joined
[17:04] *** hanekomu left
[17:23] *** xdg_ left
[17:31] *** xinming joined
[17:31] *** rindolf left
[17:35] *** andara left
[17:48] *** agjal joined
[17:56] <pugs_svn> r19223 | pmurias++ | [kp6] start of method caching (not fully integrated)

[17:56] *** jferrero left
[18:10] <pugs_svn> r19224 | pmurias++ | [kp6-perl5] autofetch and boxed methods work although we don't get a performance benefit

[18:17] *** justatheory joined
[18:24] *** justatheory left
[18:25] *** justatheory joined
[18:28] *** ebassi left
[18:28] *** lichtkind left
[18:35] *** TJCRI joined
[18:38] *** franck___ left
[18:41] *** jjore-w joined
[18:41] <jjore-w> ?eval ^..^

[18:42] <jjore-w> aw.

[18:42] <jjore-w> eval: ^..^

[18:42] <jjore-w> !eval ^..^

[18:42] <jjore-w> shoot.

[18:42] <Auzon> pugs: ^..^

[18:42] <exp_evalbot> OUTPUT[*** ␤    Unexpected "^..^"␤    expecting program␤    at /tmp/bcbbtZRu7a line 1, column 1␤]

[18:42] <Auzon> kp6: ^..^

[18:42] <exp_evalbot> r19224: OUTPUT[syntax error at position 0, line 1 column 0:␤^..␤^ HERE␤]

[18:43] <Auzon> What's that supposed to do, anyway?

[18:46] *** manne joined
[18:47] <pugs_svn> r19225 | pmurias++ | [kp6] using .isa to check for Code in cached method calls

[18:47] <pmurias> pugs: ^..&

[18:47] <pmurias> pugs: ^..^

[18:47] <exp_evalbot> OUTPUT[*** ␤    Unexpected "^..&"␤    expecting program␤    at /tmp/cpURTBk5xv line 1, column 1␤]

[18:47] <exp_evalbot> OUTPUT[*** ␤    Unexpected "^..^"␤    expecting program␤    at /tmp/hfgRBJDRSk line 1, column 1␤]

[18:48] *** felipe left
[18:54] <fglock> pugs: *; kp6: *; nqp: *; all say "hello" 

[18:54] <exp_evalbot> OUTPUT[hello␤]

[19:00] *** amnesiac joined
[19:02] *** masak left
[19:03] <pugs_svn> r19226 | pmurias++ | [kp6-perl5] commented the method caching code a bit

[19:05] *** njbartlett left
[19:05] *** silug joined
[19:06] *** drrho left
[19:12] *** njbartlett joined
[19:12] <fglock> [particle]: ping

[19:15] <[particle]> hey there flavio

[19:16] <fglock>  I've been reading about perl6/nqp for a few days,

[19:17] <fglock> I see some Parrot problems are worked around, instead of fixing

[19:17] *** felipe joined
[19:18] <fglock> most of the kp6-perl5 runtime is made of workarounds over Perl 5

[19:18] <fglock> i hoped Parrot would make this easier

[19:18] <PerlJam> fglock: worked around until they are fixed.  Work arounds are just so that forward progress isn't hampered

[19:20] <fglock> i wonder if some of the kp6 workarounds could be useful for perl6

[19:20] <[particle]> surely possible

[19:20] <fglock> if these things were implemented, we could share the runtime

[19:20] <[particle]> with parrot, we're working around things that are actively being (re)designed

[19:21] <[particle]> with perl5, you're working around permanent design limitations, i suspect

[19:21] <fglock> the most important thing for kp6 are BEGIN blocks, but there are other small stuff

[19:22] <[particle]> we're still figuring out the begin/end control block design

[19:23] <fglock> kp6 workaround for BEGIN blocks is resource-intensive, it should probably be implemented in low-level

[19:24] <fglock> probably C, because PIR doesn't seem to support creating closures

[19:24] <[particle]> since it's our one remaining test failure, it'd be nice to have before tomorrow's parrot release

[19:24] <[particle]> pmichaud is at lunch now, but when he returns it'd be worth talking about

[19:24] <fglock> tomorrow is a bit too close :)

[19:25] <[particle]> well, we don't need end tests passing, we can TODO them

[19:25] <fglock> END is runtime

[19:25] <[particle]> true

[19:25] <[particle]> begin is the tricky one

[19:25] <[particle]> and i think we can get a side-effect-free begin working quickly

[19:26] <fglock> kp6 really needs the side-effects

[19:26] <[particle]> but we definitely won't have full begin support tomorrow

[19:29] <pmurias> [particle]: it depends on how much parrot contributors you can get to stay up hacking all night ;)

[19:29] <fglock> is there a short-term plan to implement BEGIN in perl6?

[19:30] <[particle]> we can get side-effect-free begin quickly, probably today.

[19:30] <[particle]> but full begin, no short term plan i know of

[19:31] <[particle]> pmurias: i'm willing to try that :)

[19:36] <fglock> [particle]: I'm trying to find out what PIR commands to use for implementing BEGIN blocks

[19:36] <fglock> eg, looking for modified lexical variables

[19:37] *** ruz left
[19:40] <[particle]> find_lex ?

[19:41] <fglock> hmm - you mean to compare all variables in scope?

[19:42] <fglock> sorry, i need to leave - back in 2hr, i hope &

[19:42] <[particle]> cya

[19:54] *** ferreira joined
[19:55] <ferreira> pugs: 1..6

[19:55] <exp_evalbot> RESULT[(1, 2, 3, 4, 5, 6)]

[19:55] <ferreira> pugs: 1 ^.. 6

[19:55] *** REPLeffect joined
[19:55] <exp_evalbot> RESULT[(2, 3, 4, 5, 6)]

[19:55] <ferreira> pugs: 1 ^..^ 6

[19:55] <exp_evalbot> RESULT[(2, 3, 4, 5)]

[19:55] <ferreira> pugs: 1 ..^ 6

[19:56] <exp_evalbot> RESULT[(1, 2, 3, 4, 5)]

[19:56] <ferreira> ^6

[19:56] <ferreira> pugs; ^6

[19:57] <REPLeffect> missed the semicolon there.

[19:57] *** jjore-w left
[19:57] <REPLeffect> I mean, colon.

[19:57] <ferreira> pugs: ^6 ;

[19:57] <exp_evalbot> RESULT[(0.0, 1.0, 2.0, 3.0, 4.0, 5.0)]

[19:57] <ferreira> just wrote a micro-article about range operators: http://feather.perl6.nl/~ferreira/perl6-operators/ranges.html

[19:58] <lambdabot> Title: ranges.pod6

[19:58] <REPLeffect> Yeah, I just read it :-)

[19:58] <ferreira> REPLeffect: thanks 

[19:59] <REPLeffect> np

[19:59] <ferreira> and another about the conditional (ternary) operator: http://feather.perl6.nl/~ferreira/perl6-operators/ternary.html

[19:59] <lambdabot> Title: ternary.pod6

[19:59] <ferreira> and about negated operators: http://feather.perl6.nl/~ferreira/perl6-operators/negate.html

[19:59] <lambdabot> Title: negate.pod6

[19:59] <ferreira> they are fun to write when you are in the mood

[20:03] *** fglock left
[20:11] *** manne left
[20:13] <rhr> ferreira: ^$limit  #   0 ..^ $limit-1 should be either 0 ..^ $limit or 0 .. $limit-1

[20:16] *** ruz joined
[20:18] *** JarJarBi1ks joined
[20:23] <Auzon> pugs: May .. Dec

[20:23] <exp_evalbot> OUTPUT[*** No such subroutine: "&May"␤    at /tmp/zAmiRBzdf4 line 1, column 1 - line 2, column 1␤]

[20:23] <Auzon> pugs: May..Dec

[20:23] <exp_evalbot> OUTPUT[*** No such subroutine: "&May"␤    at /tmp/s4QFHzxIIb line 1, column 1 - line 2, column 1␤]

[20:24] <Auzon> pugs: ^4

[20:24] <exp_evalbot> RESULT[(0.0, 1.0, 2.0, 3.0)]

[20:24] <Auzon> pugs: .say for ^4

[20:24] <exp_evalbot> OUTPUT[0␤1␤2␤3␤]

[20:25] <Auzon> pugs: $_ = "qwerty"; tr/a..z/A..Z/;

[20:25] <exp_evalbot> RESULT[\"QWERTY"]

[20:25] <Auzon> Neat

[20:30] *** JarJarBinks left
[20:37] *** TJCRI left
[20:39] <ferreira> rhr: fixed - it seems like I am not learning what I am writing :(

[20:39] <ferreira> Auzon: that examples is from S03 and presupposes some decl of an enum or something like it

[20:40] <ferreira> Auzon: ".say for ^4" is so beautiful that I replaced the more explicit version with it

[20:41] <Auzon> Neat. :)

[20:41] <Auzon> I had to make sure postfix 'for' would've worked ;)

[20:44] <Auzon> pugs: $_ = "stuff"; $_->HOW;

[20:44] <exp_evalbot> OUTPUT[*** ␤    Unexpected "->"␤    expecting "::", term postfix or operator␤    at /tmp/kPII3x6F4k line 1, column 17␤]

[20:44] <Auzon> Yay.

[20:45] <ferreira> pugs: my  enum Months «:Jan(1) Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec»

[20:45] <exp_evalbot> OUTPUT[decodeUTF8': bad data: '\171'␤decodeUTF8': bad data: '\187'␤*** ␤    Unexpected "Months"␤    expecting ":" or "("␤    at /tmp/xJr51Wn92g line 1, column 10␤]

[20:45] <Auzon> Is it choking on the << ?

[20:46] <Auzon> pugs: my  enum Months <<:Jan(1) Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec>>

[20:46] <exp_evalbot> OUTPUT[*** ␤    Unexpected "Months"␤    expecting ":" or "("␤    at /tmp/kfsqX0TDVO line 1, column 10␤]

[20:46] <[particle]> do you need a sigil?

[20:46] <ferreira> it looks enum declarations are not ready yet (in pugs, at least)

[20:46] <ferreira> this is from S09

[20:46] <Auzon> kp6: my  enum Months <<:Jan(1) Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec>>

[20:47] <Auzon> Uh oh. Did I break it?

[20:47] <[particle]> i think it's just slower

[20:47] <exp_evalbot> r19226: OUTPUT[syntax error at position 70, line 1 column 70:␤my  enum Months <<:Jan(1) Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec>␤                                                                      ^ HERE␤]

[20:48] <Auzon> It didn't like it at all...

[20:48] <ferreira> pugs: enum <<:Jan(1) Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec>>

[20:48] <exp_evalbot> OUTPUT[*** No such subroutine: "&enum"␤    at /tmp/u77vm5u4JT line 1, column 1 - line 2, column 1␤]

[20:49] <ferreira> hm, in Pugs tests, enum are marked :todo - so by now, no toying around unless we implemented it

[20:50] <Auzon> Makes sense.

[20:51] <Auzon> pugs: $_ = "abcdefg"; $_ =~ s/[aeg]//g;

[20:51] <exp_evalbot> OUTPUT[*** ␤    Unexpected "s"␤    There is no =~ operator in Perl 6 -- did you mean ~~ (match) or ~= (concat-assign)?␤    at /tmp/JTJUkVlA1R line 1, column 23␤]

[20:51] <Auzon> pugs: $_ = "abcdefg"; $_ = s/[aeg]//g;

[20:52] <exp_evalbot> OUTPUT[*** ␤    Unexpected "g"␤    expecting term postfix or operator␤    at /tmp/huYgKDzq1m line 1, column 31␤]

[20:52] <ferreira> pugs: a . b

[20:52] <Auzon> pugs: $_ = "abcdefg"; $_ = s:each/[aeg]//;

[20:52] <exp_evalbot> OUTPUT[*** ␤    Unexpected " b"␤    expecting ".", "\187", ">>", "=", "^", operator name, qualified identifier, variable name, "...", "--", "++", "i", array subscript, hash subscript or code subscript␤    at /tmp/wqFuQSAJMC line 1, column 4␤]

[20:52] <exp_evalbot> RESULT[\{subst}]

[20:52] <ferreira> pugs: 1 . b

[20:52] <ferreira> pugs: 1 . 2

[20:52] <exp_evalbot> OUTPUT[*** ␤    Unexpected "."␤    expecting operator␤    at /tmp/qWta1CIU8I line 1, column 3␤]

[20:52] <exp_evalbot> OUTPUT[*** ␤    Unexpected "."␤    expecting operator␤    at /tmp/3jY3vqYYWp line 1, column 3␤]

[20:53] *** TJCRI joined
[20:53] <Auzon> pugs: $_ = "abcdefg"; $_ ~~ s:each/[aeg]//;

[20:53] <exp_evalbot> OUTPUT[*** Cannot parse regex: [aeg]␤*** Error: ␤]

[20:54] <Auzon> Hm...

[20:54] <Auzon> pugs: $_ = "abcdefg"; $_ ~~ s/a//;

[20:54] <exp_evalbot> RESULT[Bool::True]

[20:54] <Auzon> :-/

[20:54] <[particle]> <[aeg]>

[20:54] <Auzon> pugs: $_ = "abcdefg"; $_ ~~ s/<[aeg]>//; $_;

[20:54] <Auzon> Thanks :)

[20:54] <exp_evalbot> RESULT[\"abcdefg"]

[20:54] <Auzon> Hm.

[20:57] <Auzon> pugs: $_ = "abcdefg"; $_.subst(/a/, "q");

[20:58] <exp_evalbot> RESULT[\"qbcdefg"]

[20:58] <Auzon> I guess that's kind of nice.

[20:59] *** ferreira left
[21:01] *** pmurias left
[21:05] *** thoughtpolice joined
[21:12] *** REPLeffect left
[21:13] *** chruck left
[21:14] *** REPLeffect joined
[21:20] *** ahmadz joined
[21:20] *** ahmadz left
[21:22] *** Grrrr left
[21:22] *** Grrrr joined
[21:25] *** chris2 joined
[21:33] *** lichtkind joined
[21:35] *** ntgrl joined
[21:42] *** integral left
[21:42] <thoughtpolice> ispy_: ping?

[21:42] <lambdabot> thoughtpolice: You have 1 new message. '/msg lambdabot @messages' to read it.

[21:43] <ispy_> thoughtpolice: sup dude.

[21:43] <ispy_> checking my messages...

[21:44] <ispy_> thoughtpolice: What's up?

[21:44] *** njbartlett left
[21:47] *** DarkWolf84 joined
[21:50] <thoughtpolice> ispy_: since you're interested in contributing as via messages, would you like some credentials to post? :)

[21:51] <ispy_> thoughtpolice: yes I would :)

[21:52] <ispy_> I'll follow any guidelines you have, of course... I would just like to help the tutorial grow, it's an excellent resource.

[21:53] <thoughtpolice> ispy_: if it has to do with perl 6 (related stuff works too, announcements/project updates etc,) it's allowed. :)

[21:53] <thoughtpolice> generally the income bringer will be the resources/tutorials, though.

[21:54] <ispy_> of course.

[21:54] <thoughtpolice> ispy_: pm me an email and I'll send an invite to be an author. feel free to contribute immediately. :)

[21:54] <ispy_> Excellent, thank you.

[21:54] <ispy_> Ok, back to work for me! Thanks thoughtpolice.

[21:55] <thoughtpolice> sent! :)

[21:56] *** ntgrl is now known as integral

[22:08] *** TJCRI left
[22:11] *** ispy_ left
[22:13] *** njbartlett joined
[22:14] *** jhorwitz left
[22:15] *** jhorwitz joined
[22:19] *** ronny joined
[22:19] *** ronny left
[22:33] *** elmex left
[22:34] *** jferrero joined
[22:43] *** thoughtp1lice joined
[22:45] *** agjal is now known as meppel

[23:01] *** thoughtpolice left
[23:03] *** thoughtp1lice is now known as thoughtpolice

[23:07] *** nipotaway is now known as nipotan

[23:26] *** Casan_ left
[23:27] *** Casan_ joined
[23:28] *** BinGOs left
[23:33] *** BinGOs joined
[23:33] *** iblechbot left
[23:47] *** thoughtpolice left
[23:49] *** tlb joined
[23:50] *** Khisanth joined
[23:59] *** thoughtpolice joined
[23:59] *** jisom joined
