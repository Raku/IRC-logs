[00:01] <offby1> "salomonic" ... involving skis?

[00:02] <offby1> maybe he means "salmonic" -- involving tasty fish

[00:02] * moritz cries about the amount of classical education that seems to be lost ;)

[00:03] * offby1 cries about misspellings of "Solomonic"

[00:03] <moritz> offby1: I've got a good excuse, I'm not a native speaker...

[00:03] <offby1> you are excused

[00:03] <moritz> and in German that guy is called "Salomon"

[00:05] <dduncan> moritz, I agree

[00:05] <dduncan> about that salmon solution

[00:06] <moritz> what would you like with it? chips? *g*

[00:06] <dduncan> nah

[00:07] <dduncan> besides, normally chips are eaten with cod

[00:07] <dduncan> or a cod-like fish

[00:08] <moritz> so what would you eat with salmon? rice?

[00:09] * moritz doesn't like most kinds of fish

[00:10] <dduncan> I mainly have my salmon by itself, actually

[00:10] <dduncan> with salt

[00:11] *** xinming joined
[00:11] <dduncan> that said, I once had it served with coconut, that was nice

[00:12] <dduncan> that was more fancy than usual, though

[00:13] <moritz> well, have fun pondering about tasty food, I'll get some sleep in the mean time ;)

[00:13] <dduncan> one combination I don't think I've had before, though, is fish with any kind of hash, if I recall

[00:13] <dduncan> and I'll to work

[00:13] <moritz> bye &

[00:13] <dduncan> yup

[00:36] *** avarab joined
[00:38] <meppl> good night

[00:49] *** Infinoid joined
[00:59] *** avar joined
[01:01] *** jedai joined
[01:22] *** avarab joined
[01:34] *** avarab is now known as avar

[01:41] *** avarab joined
[01:50] *** mako132 joined
[01:51] *** diakopter_afk is now known as diakopter

[01:53] *** ddwagnz joined
[01:54] *** ddwagnz left
[01:58] *** REPLeffect joined
[02:01] *** avar joined
[02:03] *** justatheory joined
[02:05] *** gogonkt1_ joined
[02:06] *** Conrad joined
[02:20] *** jedai joined
[02:22] *** avarab joined
[02:47] *** avar joined
[02:59] *** avarab_ joined
[02:59] *** jisom joined
[03:13] *** diotalevi joined
[03:14] *** avarab_ is now known as avar

[03:20] *** avarab joined
[03:20] *** jisom_ joined
[03:24] *** daxim_ joined
[03:26] *** diakopter is now known as diakopter_afk

[03:38] *** jianingy joined
[03:38] *** ting_ joined
[03:40] *** avar joined
[03:51] *** fayland joined
[03:59] *** avarab joined
[04:15] *** justatheory joined
[04:30] *** jisom joined
[05:05] *** iblechbot joined
[05:12] *** f0rth joined
[05:13] *** f0rth joined
[05:15] *** f0rth joined
[05:26] *** araujo joined
[05:37] *** gogonkt1__ joined
[05:37] *** gogonkt1__ is now known as gogonkt1

[05:54] *** hirschnase joined
[06:34] *** weinigLap joined
[06:36] *** weinigLap joined
[06:38] *** drupek12 joined
[06:41] *** devogon joined
[06:57] <meppl> good morning

[07:03] *** obvio171 joined
[07:08] *** dduncan left
[07:28] *** weinigLap joined
[07:28] *** chaoslawful joined
[07:31] *** jisom joined
[07:59] *** chaoslawful joined
[08:11] *** weinigLap joined
[08:11] *** marmic joined
[08:13] *** weinigLap joined
[08:20] *** xinming joined
[08:36] *** jedai joined
[08:45] *** kcwu joined
[08:46] *** hav0x joined
[08:53] *** iblechbot joined
[08:58] *** evanl joined
[08:58] *** jisom joined
[08:59] <evanl> hi

[08:59] <evanl> we're on yapc::beijing 2007

[09:00] <Tene> :D!

[09:00] <evanl> agent zhang has been given us some wonderful presentations about how to contribute to pugs and UML::Class:Simple

[09:00] *** isaacd joined
[09:00] <evanl> he's great

[09:00] <evanl> :)

[09:08] *** evanl joined
[09:08] *** chaoslawful_ joined
[09:09] *** sunnavy joined
[09:09] <evanl> !

[09:09] <evanl> hi chaos

[09:09] <evanl> hi sunnavy

[09:10] <chaoslawful_> wow~

[09:10] *** chaoslawful_ joined
[09:11] *** evanl is now known as hmisty

[09:11] <chaoslawful_> wow~lucky to meet u here, evan

[09:11] <hmisty> hehe

[09:11] *** hmisty is now known as evanl

[09:12] <evanl> nick server told me the nickname is owned by someone else, so faint

[09:14] <chaoslawful_> er...maybe just a cache problem...i met this problem before

[09:14] <evanl> ok:)

[09:14] <evanl> we're on yapc::beijing 2007 just now

[09:14] <evanl> pity you're not here

[09:15] <evanl> many excellent guys have given a lot of wonderful presentations

[09:15] <chaoslawful_> that's really a pity...

[09:15] <evanl> r u all ok in baglore?

[09:15] <sunnavy> hi, evanl

[09:16] <evanl> hi sunnavy

[09:16] <chaoslawful_> ya, i'm fine here.

[09:16] <evanl> great to hear that

[09:16] <chaoslawful_> much cooler than beijing

[09:16] <sunnavy> chaow, hi, I heard you went to India

[09:16] <sunnavy> s/chaow/chaoslawful/

[09:16] <chaoslawful_> hi, sunnavy. yep, i have to stay at bangalore for 3 weeks

[09:17] <evanl> o i told them you'll stay for 2 months...sorry

[09:17] <sunnavy> evanl, you must be hmisty ;-)

[09:18] <evanl> haha yes

[09:18] *** franck__ joined
[09:19] <sunnavy> I'm back from YAPC::Beijing, for there'll be a dinner for my friends' graduations.

[09:19] <evanl> oh. so where'r u now?

[09:19] <evanl> @school?

[09:19] <lambdabot> Unknown command, try @list

[09:19] <evanl> \@school?

[09:20] <sunnavy> 西王庄, aha

[09:20] *** chaoslawful__ joined
[09:21] <evanl> o great irc can show chinese

[09:21] <evanl> chaos, ur network seems not good...

[09:21] <chaoslawful__> yep...i'm accessing internet with a CDMA card...

[09:22] <evanl> ...

[09:22] <chaoslawful__> the signal is very bad...such a pain...

[09:22] <sunnavy> utf8 is great

[09:22] <evanl> haha

[09:22] <evanl> don't u have LAN connections?

[09:22] <chaoslawful__> nop...

[09:23] <sunnavy> oh, it's horrible.

[09:23] *** weinigLap joined
[09:25] <evanl> chaos, do you always come here?

[09:26] <sunnavy> aha, this's my first time to talk to evanl and chaos here

[09:28] *** BooK joined
[09:31] *** rfordinal joined
[09:31] *** chaoslawful joined
[09:37] *** isaacd_ joined
[10:11] *** drbean joined
[11:00] *** tlb joined
[11:10] *** dagur joined
[11:18] *** buetow joined
[11:30] *** dolmans joined
[11:35] *** polettix joined
[11:38] *** elmex joined
[11:47] *** rfordinal_athome joined
[11:49] *** rindolf joined
[11:57] *** rfordinal_mobile joined
[11:58] *** REPLeffect joined
[12:01] *** chris2 joined
[12:12] *** kanru joined
[12:31] *** |Jedai| joined
[13:37] *** hirschnase joined
[13:43] *** barney joined
[13:46] *** pbuetow joined
[13:48] *** Eidolos joined
[14:02] *** the_dormant joined
[14:20] *** sunnavy joined
[14:46] <gaal> moose

[14:49] <lumi> Elk

[14:52] <gaal> caribou!

[14:53] * offby1 glances around nervously. 

[14:53] <offby1> mouse!

[14:53] <offby1> <Kock>how'm I doing?</Koch>

[14:53] <gaal> you're emitting invalid XML

[14:54] <offby1> so I am.

[14:54] <offby1> s/k/h/

[14:55] <offby1> good thing you're an accepting parser

[14:55] <gaal> (Is that supposed to be Kenneth Koch, of Variations on a Theme by William Carlos Williams fame?)

[14:55] <gaal> tag souffle

[14:55] <offby1> nope, it's supposed to be Ed Koch, mayor of New York in the '80s (?) who was known for asking strangers on the street "How'm I doing?"

[14:56] <offby1> His catch-phrase as Mayor was "How'm I doing?" When walking down the street, he would often use that question as a greeting to the people he talked to.

[14:56] <offby1> -- http://en.Wikipedia.org/wiki/Ed_Koch

[14:56] <lambdabot> Title: Ed Koch - Wikipedia, the free encyclopedia

[14:56] <gaal> 80ies eh? I bet he got "ballsy but about to get mugged" a lot

[14:58] <lumi> The good ol' days

[15:03] <offby1> NYC mayors get mugged rarely, what with the bodyguards and all

[15:04] <gaal> I was about to wonder out loud when the practice of retaining bodyguards started and then I realized it was obviously much older than US politics.

[15:05] <offby1> "In mid-1976, he was threatened with murder by Uruguayan secret police. "

[15:06] <lumi> Way to blow your cover, guys

[15:10] <daxim_> Koch is also the alter ego of Kosh, along with Karsh.  "The avalanche has already started. It is too late for the pebbles to vote." http://google.com/search?q=site%3Atruemeaningoflife.com+koch

[15:10] <lambdabot> Title: site:truemeaningoflife.com koch - Google Search

[15:10] * offby1 stares blankly 

[15:18] *** chris2 joined
[15:21] *** popo joined
[15:35] *** jerrylee joined
[15:41] *** avarab is now known as avar

[15:44] *** cmarcelo joined
[15:50] *** evanl joined
[15:52] *** evanl is now known as evanl_

[15:53] *** evanl_ is now known as \evanl

[15:53] *** \evanl left
[16:03] *** avarab joined
[16:16] *** isaacd joined
[16:19] *** avarab is now known as avar

[16:20] *** evanl_ joined
[16:28] *** bonesss joined
[16:28] *** jerrylee joined
[16:39] *** evanl_ left
[16:50] *** [particle] joined
[17:01] *** autark joined
[17:03] *** TimToady joined
[17:06] *** [particle] left
[17:07] *** amnesiac joined
[17:08] *** justatheory joined
[17:11] *** Psyche^ joined
[17:14] *** rfordinal joined
[17:29] *** johannes2 joined
[17:29] *** Psyche^ is now known as Patterner

[17:38] *** [particle] joined
[17:42] *** [particle] left
[18:09] <diotalevi> Is the reduce operator foldl or foldr depending on the associativity of the base operator?

[18:15] <Tene> diotalevi: haskell?

[18:16] <diotalevi> Oh sorry, Perl 6.

[18:16] <|Jedai|> eval: [-] [5..7]

[18:16] <buubot> |Jedai|: Error: syntax error at eval line 1, near "-]"  

[18:16] <diotalevi> I forget Perl 6 also strongly implies Haskell these days.

[18:16] <Tene> ?eval [*] 1..10

[18:16] *** evalbot_r16674 is now known as evalbot_r16675

[18:16] <evalbot_r16675> 3628800

[18:17] <diotalevi> Given [+] 1 .. 3, does that mean ((1+2)+3) or (1+(2+3)) always or does it vary depending on the associativity of the operator being reduced?

[18:17] <Tene> ?eval [say] 1..5

[18:17] <evalbot_r16675> Error: ␤Unexpected "1"␤expecting operator

[18:18] <moritz> Tene: say is a method, not an op

[18:18] * Tene nods

[18:18] <diotalevi> Also, does reduce only work for unary and binary operators?

[18:18] <rhr> diotalevi: it uses the associativity of the operator

[18:19] <moritz> diotalevi: how would reduce with an unary operator?

[18:19] <|Jedai|> I can't think of a right associative operator right now (brain-dead after a feast)

[18:19] <Tene> ?eval sub infix:<foo> { say $^a,'->',$^b; return $^a + $^b }; 5 foo 6

[18:19] <evalbot_r16675> OUTPUT[->␤] 0

[18:19] <rhr> ** is right assoc

[18:19] <Tene> ?eval sub infix:<foo> { say $^a,'-> $b; return $a + $b }; 5 foo 6

[18:19] <evalbot_r16675> Error: ␤Unexpected end of input␤expecting "\\", variable name or "'"

[18:19] <|Jedai|> No, in Pugs it isn't

[18:19] <diotalevi> So can I override the associativity? Perhaps I cared to be foldr instead of foldl or whatever.

[18:19] <Tene> ?eval sub infix:<foo> ($a,$b) { say "$a,-> $b"; return $a + $b }; 5 foo 6

[18:20] <|Jedai|> ?eval 1**5**6

[18:20] <evalbot_r16675> OUTPUT[5,-> 6␤] 11

[18:20] <evalbot_r16675> 1

[18:20] <Tene> ?eval sub infix:<foo> ($a,$b) { say "$a,-> $b"; return $a + $b }; [foo] 1..3

[18:20] <evalbot_r16675> OUTPUT[1,-> 2␤3,-> 3␤] 6

[18:20] <rhr> ?eval [**] 2..4

[18:20] <Tene> ?eval sub infix:<foo> ($a,$b) { say "$a->$b"; return $a + $b }; [foo] 1..6

[18:20] <evalbot_r16675> 2417851639229258349412352/1

[18:20] <evalbot_r16675> OUTPUT[1->2␤3->3␤6->4␤10->5␤15->6␤] 21

[18:21] <|Jedai|> Sorry, it is

[18:21] <Tene> How to specify associativity on an operator?

[18:21] <|Jedai|> Ok, [**] is foldr

[18:21] <|Jedai|> foldr infix:<**>

[18:24] * diotalevi imagines a list of values where + is left associative for some and right associative for others.

[18:26] <rhr> Tene: is assoc<whatever> (in S06)

[18:26] <rhr> S06:1609

[18:27] <Tene> ?eval sub infix:<foo> is assoc<right> ($a,$b) { say "$a->$b"; return $a + $b }; [foo] 1..6

[18:27] <evalbot_r16675> Error: ␤Unexpected "<right"␤expecting trait or block

[18:27] <Tene> ?eval sub infix:<foo> is assoc('right') ($a,$b) { say "$a->$b"; return $a + $b }; [foo] 1..6

[18:27] <evalbot_r16675> OUTPUT[5->6␤4->11␤3->15␤2->18␤1->20␤] 21

[18:28] <Tene> diotalevi: that a good example?

[18:28] <Tene> rhr++

[18:28] <diotalevi> Tene, of mixed associative operator? No.

[18:28] <Tene> diotalevi: no, of reduce with a right-associative operator

[18:29] <diotalevi> But that's ok. fold[lr]ness for a reduction is a property of the operator plus the data.

[18:30] * diotalevi supposes this might mean a programmer can't look at code and know whether he is getting foldl or foldr because perl is notorious for allowing values to be crazy reality bending things.

[18:30] * diotalevi wouldn't normally expect reality bending values though.

[18:31] <Tene> junctions!

[18:31] <rhr> I don't see how the data can affect the associativity

[18:34] <|Jedai|> rhr : Can't a multi variant of an operator have different associativity ?

[18:34] *** Limbic_Region joined
[18:34] <|Jedai|> rhr: I would rather it can't but ... 

[18:35] <diotalevi> 0, 1, 2.5, 3 is a list of four elements, three ints and one float. Perhaps float's + or int's + operator's associativity were defined differently.

[18:35] <rhr> I guess it could, that be pretty crazy :)

[18:35] <|Jedai|> I don't remember the Synopsys section

[18:35] <rhr> *would be

[18:35] <|Jedai|> I think consistent associativity should be enforced for all multi variant

[18:36] * diotalevi shrugs. Why?

[18:36] <diotalevi> You can't allow someone to shoot their own foot off?

[18:36] <|Jedai|> Because it's too confusing and you can use two different operators instead ?

[18:37] <diotalevi> "too confusing" is an illegal statement in perl.

[18:37] <diotalevi> I think.

[18:37] <moritz> perl has always given you more than enough rope to hang yourself, your neighbour and his whole family

[18:37] <rhr> of course you could specify list or chain associativity and do whatever you want internally

[18:37] <|Jedai|> diotalevi: I can if it really brings more power to the knowledgable perlist

[18:37] <moritz> if you want to ;)

[18:37] * diotalevi is in the "write more rope" camp of perl.

[18:38] *** |Jedai| is now known as jedai

[18:38] *** diotalevi is now known as jjore

[18:39] <jjore> With infinite mutability comes freaking infinite power. Or something.

[18:39] <moritz> infinit rope through infinite lists! YaY!

[18:39] <jjore> Yay!

[18:40] * jjore salts his white fish and potato and lutefisk with the darkest magics. It's good seasoning.

[18:40] * jjore was just thinking of bland and white foods.

[18:41] <jjore> tre Norwegian.

[18:44] *** Infinoid left
[18:45] * jjore has an even better idea. Evaluating the infix:+ operator replaces the implementation of the infix:+ operator with the same thing but opposite associativity.

[18:45] <jjore> You know, just to be evil.

[18:46] * jjore demurs slightly. Ok, not the + operator, make it the foo operator.

[18:50] <jjore> ?eval sub infix:<foo> is assoc('right') ($a,$b) { eval q[sub infix:<foo> is assoc('left') ($a,$b) { return $a + $b }]; return $a + $b }; [foo] 1..3

[18:50] <evalbot_r16675> 6

[18:50] <jjore> k... now to get delayed expressions.

[18:51] <jjore> ?eval sub infix:<foo> is assoc('right') ($a,$b) { eval q[sub infix:<foo> is assoc('left') ($a,$b) { return sub { $a + $b } }]; return sub { $a + $b }}; [foo] 1..3

[18:51] <evalbot_r16675> sub {Syn "block" {App &infix:+ (: Var $a, Var $b)}}

[18:51] *** weinigLap joined
[18:51] <jjore> ?eval sub infix:<foo> is assoc('right') ($a,$b) { eval q[sub infix:<foo> is assoc('left') ($a,$b) { return sub { $a + $b } }]; return sub { $a + $b }}; ([foo] 1..3).Dump

[18:51] <evalbot_r16675> Error: No such method in class Sub: &Dump

[18:52] <Limbic_Region> try ~() or .perl

[18:52] <jjore> ?eval sub infix:<foo> is assoc('right') ($a,$b) { eval q[sub infix:<foo> is assoc('left') ($a,$b) { return sub { $a + $b } }]; return sub { $a + $b }}; ([foo] 1..3).perl

[18:52] <evalbot_r16675> "sub \{Syn \"block\" \{App \&infix:+ (: Var \$a, Var \$b)}}"

[18:52] <Limbic_Region> that didn't do what I expected

[18:52] * jjore wants dmq's DDS.

[18:52] <gaal> remoose

[18:53] <gaal> jjore: the zero is also a property of the op

[18:53] <gaal> and re:scope of the associativity... it's basically lexical

[18:53] <jjore> "the zero is also a property of the op?"

[18:54] <gaal> like basically all weird effects in Perl 6

[18:54] <gaal> ?eval my @a = (); [+] @a

[18:54] <evalbot_r16675> 0

[18:54] <Limbic_Region> happy Father's day to all that fit the category

[18:54] <gaal> "zero" of infix:<+> == 0

[18:54] <gaal> I misread that as happy feather day

[18:54] *** rindolf joined
[18:55] <gaal> ?eval my @a = (); [*] @a

[18:55] <evalbot_r16675> 1

[18:55] <gaal> "zero" of infix:<*> == 1

[18:55] <Limbic_Region> infix * is smart

[18:55] <gaal> not smarter than other ops.

[18:55] <jjore> Oh, right.

[18:55] <Limbic_Region> well, there is a difference between, knowledge, wisdom, and intelligence

[18:56] * jjore is somewhat hoping weird effects aren't required to be lexical. Global world changing weirdness is a wonderful thing.

[18:56] <gaal> jjore: since you used haskellish terminology: Perl unifies foldr/foldl, and almost also scanr/scanl

[18:56] <Limbic_Region> looks like the parrot squad is really close to having the perl 6 sanity tests passing

[18:57] <moritz> yes, indeed

[18:57] *** larsen_ joined
[18:57] <jjore> I er... was speaking other list based languages at that moment. I still don't mean Haskell when I say fold.

[18:57] <gaal> there was a beautiful while where [] in list context was a scan

[18:57] <jjore> What is scan?

[18:58] <gaal> oh, okay.

[18:58] <gaal> scan ("produce" rather than "reduce" in longhand in Perl 6) is keep intermediate values

[18:58] <gaal> ?eval [\+] 1, 2, 3

[18:58] <evalbot_r16675> (1, 3, 6)

[18:58] <jjore> foldl is much more likely to mean Oz to me right now and almost never any of you.

[18:59] <jjore> I've been reading the CTM book recently http://www.info.ucl.ac.be/~pvr/book.html.

[18:59] <lambdabot> Title: Concepts, Techniques, and Models of Computer Programming

[19:01] <jjore> It covers much more concurrency, various styles of declarative programming, and various kinds of search.

[19:01] <gaal> sounds interesting, thanks for the link!

[19:02] <jjore> I spent $50 of my employer's money and for me... well worth it.

[19:02] <jjore> You do have to get over the idea of looking at lots of Oz code though.

[19:02] <jjore> And if you want to use the Oz IDE you also have to use Emacs. It's what it was implemented in.

[19:03] <jjore> s/Oz IDE/Mozart IDE/. Oz is the language, Mozart is an implementation.

[19:04] <gaal> oh, for a minute there I thought the content was available online :/

[19:04] <jjore> No, sorry.

[19:04] <jjore> There is a wiki though.

[19:05] <jjore> The US edition is $70, the eastern economy edition is $50.

[19:05] <cj> happy fathers' day, fathers :)

[19:05] <jjore> I opted for cheap. The pages are kind of thin though. One of my co-workers said it'd make it unreadable for him. I haven't noticed.

[19:09] <meppl> good night

[19:09] * Limbic_Region has a project he would like to do in Mozart or Alice but will likely end up writing it in Java since he hasn't the time to learn either one

[19:12] <rindolf> Hi all.

[19:12] <rindolf> Hi gaal 

[19:12] <jjore> What's the project?

[19:12] <Limbic_Region> perfect order magic cube of 10

[19:15] <Limbic_Region> its like a magic square on steroids

[19:16] <jjore> Oh, that.

[19:18] <Limbic_Region> Between work being crazy lately, going to be a Dad again, and dealing with Jean's immigration stuff - I haven't had any free time for some time now

[19:19] <jjore> The point to using Oz (or Alice, I suppose) would be to get the don't-know non-determinism search mechanism or to get good concurrency.

[19:20] <Limbic_Region> mostly the good concurrency

[19:20] <Limbic_Region> but also because the idea for reducing the search space is constraint programming

[19:20] <jjore> So then if its the concurrency you're after there's also Erlang.

[19:21] * jjore doesn't know any of Erlang, Alice, or Standard ML.

[19:21] *** theorbtwo joined
[19:21] <Limbic_Region> well, from what I have read of Alice, it is very similar to Mozart but does the concurrency for free plus some extra bells and whistles

[19:23] * Limbic_Region is sure you have seen it, but http://en.wikipedia.org/wiki/Alice_programming_language

[19:23] <Limbic_Region> so really the combination of constraint programming and concurrency

[19:24] <Limbic_Region> what I would really like to have is the ability to describe a problem, provide the constraints I can think of, and have some tool spit out other constraints that must also be true that I hadn't thought of

[19:30] *** jisom joined
[19:34] <jjore> "concurrency for free?"

[19:34] <jjore> What's that?

[19:35] <Tene> suggestions for API for "run this block, but kill it if it takes more than $num seconds to run"?

[19:37] <Tene> perhaps a timeout parameter to 'do'?

[19:48] * avar suggests alarm

[19:51] *** [particle] joined
[19:52] <jjore> That's two blocks.

[19:52] <jjore> One to run indefinitely, the other to wait for the time period to elapse and kill the former.

[20:21] <jjore> Does Perl 6 have anything to say about concurrency? I didn't see anything on http://dev.perl.org/perl6/doc/synopsis.html that was obvious.

[20:21] <lambdabot> Title: Synopses - perl6

[20:22] *** isaacd_ joined
[20:23] <moritz> jjore: I think most of that is not yet specced

[20:23] <moritz> jjore: there are just some things like auto-concurrency that are specced in some cases

[20:24] <jjore> I'm aware that junctions have a little bit already requested.

[20:24] <jjore> But beyond that...

[20:24] <Tene> jjore: docs/Perl6/Spec/Concurrency.pod

[20:29] *** hav0x joined
[20:35] *** jisom joined
[20:47] <Aankhen``> Tene: That spec seems outdated, I think.

[20:48] *** [particle] joined
[20:48] <Aankhen``> jjore: Perl 6 is slated to get the unified events & threads model <http://www.seas.upenn.edu/~lipeng/homepage/unify.html> with STM on top.

[20:48] <Aankhen``> jjore: And, according to TimToady, the underlayer will have "Erlang-ish semantics". Whatever that means. :-)

[20:51] *** marmic joined
[20:54] *** justatheory joined
[20:56] * jjore is quite happy to hear of Erlangish things happening.

[20:57] <jjore> It likely means dataflow variables.

[21:05] *** REPLeffect joined
[21:38] *** kcwu joined
[21:40] *** lisppaste3 joined
[21:47] *** mico_ joined
[22:13] *** r0bby joined
[22:20] *** bonesss joined
[22:20] *** araujo joined
[22:32] *** dduncan joined
[22:36] *** thoughtpolice joined
[22:50] *** diakopter_afk is now known as diakopter

[23:38] *** diakopter is now known as diakopter_afk

