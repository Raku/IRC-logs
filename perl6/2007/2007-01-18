[00:08] *** pbuetow joined
[00:09] *** mako132_ joined
[00:10] *** rashakil joined
[00:15] *** CardinalNumber joined
[00:19] <Juerd_> masak: Tiu, kiu volas featherkonton, skribu al mi retposxtmesagxon kun vera nomo, dezirata uzantonomo, kaj la kialo por voli la konton.

[00:21] <Juerd_> masak: Kaj ne iuj nomoj, sed siaj nomoj :)

[00:24] <luqui> esperanto?

[00:37] *** vel joined
[00:38] *** mako132_ joined
[01:03] *** b00t joined
[01:17] *** weinig joined
[01:21] *** penk joined
[01:35] *** Debolaz joined
[01:37] *** ProperNoun joined
[01:53] *** CardinalNumber joined
[01:57] *** lyokato joined
[02:03] *** ashleyb joined
[02:04] *** meppl joined
[02:12] *** ProperNoun joined
[02:54] *** mncharity joined
[02:55] *** mncharity is now known as putter

[03:12] *** kanru joined
[03:39] *** luqui joined
[04:07] *** leed joined
[04:31] *** xinming joined
[04:57] *** Alias__ joined
[05:51] *** kanru joined
[06:18] *** Alias__ joined
[06:18] *** luqui joined
[06:19] *** spx2 joined
[06:28] *** iblechbot joined
[06:28] <masak> juerd: bone. mi pensu iom pri la kialo k poste sendos al vi retposhtajhon

[06:47] *** Yappo joined
[06:49] *** GabrielVieira2 joined
[07:13] *** b00t joined
[07:22] *** prism joined
[07:33] *** rashakil joined
[07:34] *** rhizo joined
[07:41] * yves is back (gone 14:34:16)

[07:42] *** dduncan joined
[07:52] *** b00t joined
[07:54] *** elmex joined
[08:04] *** ozo_ joined
[08:04] *** jql joined
[08:11] *** BooK joined
[08:17] *** sili joined
[08:29] *** shar joined
[09:21] *** Juerd_ is now known as Juerd

[09:22] <Juerd> luqui: Yes

[10:00] *** mr_ank joined
[10:10] *** iblechbot joined
[10:16] *** marmic joined
[10:21] *** fglock joined
[10:28] *** ruoso joined
[10:36] <jql> ?eval %x = ('a' => 1); %y = ('b' => 2); %x.push(%y); %x;

[10:36] <evalbot6> Error: Can't modify constant item: VUndef

[10:38] *** dduncan left
[10:40] <Juerd> I don't think you can push onto a hash

[10:42] *** cmarcelo joined
[10:43] <jql> I would've been surprised if it worked

[10:57] *** spo0nman joined
[10:59] *** integral_ is now known as integral

[11:02] <Juerd> I wouldn't. I have been wanting HASH.push since Perl 4 :)

[11:03] <Juerd> Simply because writing @hash{keys %foo} = values %foo involves both a temporary hash, and ugly code :)

[11:03] <jql> I'm not saying I would mind :)

[11:03] <Juerd> Fortunately it's easily added to Perl 6 :)

[11:03] <Juerd> Though perhaps I would name it .add instead of .push, as .push does sort of suggest sequential order

[11:04] <Juerd> Maybe the ,= operator

[11:04] <Juerd> Though killed and burried at least a dozen times :)

[11:05] <jql> I presume there's no lazy hash? If so, .push becomes meaningful

[11:05] * jql has disturbing thoughts this late

[11:08] <integral> There would only be a lazy hash if someone actually sat down a wrote it.

[11:10] <fglock> I wrote a lazy hash for pil-run - I was told not to do that :)

[11:10] <jql> push %lazy.specs, /^something/ => -> { generate_value($^a) };

[11:11] <jql> where do I commit my example? :)

[11:13] <fglock> jql: language-related stuff is usually discussed in the p6-language mailing list

[11:15] <pasteling> "evalbot_r15090" at 194.145.200.126 pasted "Pugs build failure" (429 lines, 24.1K) at http://sial.org/pbot/22492

[11:34] *** Lorn joined
[11:37] *** ruoso joined
[11:37] *** chris2 joined
[12:05] *** xinming joined
[12:05] *** TimToady joined
[12:11] *** fglock joined
[12:16] <fglock> 6 days left until vacations

[12:16] <fglock> http://christmas.whipnet.net/kids/timeleft.html

[12:16] <lambdabot> Title: How many days left until Christmas?

[12:23] *** buetow joined
[12:24] *** VanilleBert joined
[12:26] *** nferraz joined
[12:27] <nferraz> hello, fglock! :)

[12:28] *** lisppaste3 joined
[12:29] <fglock> nferraz: ola

[12:36] <fglock> jql: I think the result of the discussions at that time was that you can have lazy hash, but you have to declare it explicitly

[12:37] <nferraz> i was thinking on what you told me last night, about using grammars...

[12:40] <nferraz> i thought defining something like: regex articles { (a|an|the) }

[12:41] <nferraz> seems more elegant than the old-fashioned way... 

[12:44] <fglock> token articles { a | an | the }  -- more efficient

[12:46] *** jiing_ joined
[12:46] *** _marco joined
[13:05] *** ruz joined
[13:07] *** capixaba joined
[13:07] *** bonesss joined
[13:08] *** elmex joined
[13:25] *** Limbic_Region joined
[13:29] *** diakopter joined
[13:42] *** gnuvince joined
[13:47] *** kanru joined
[13:49] *** rashakil joined
[13:56] <fglock> someone asked why wasn't 6-on-6 being written with pugs

[13:56] <fglock> now I'm thinking why not

[14:01] <fglock> it would be easier for kp6 to catch up to an existing compiler, rather to a planned one

[14:01] <fglock> rather then

[14:03] <fglock> hmm - rather than

[14:03] *** gnuvince_ joined
[14:06] <fglock> I wonder why nobody seems to be interested on 6-on-6

[14:06] <fglock> lunch &

[14:09] <Ziggy6> wow

[14:09] <Ziggy6> you mean no 6-on-6 project exists now?

[14:09] <Limbic_Region> fglock - orgies are so passe

[14:19] *** falseep joined
[14:19] *** vel joined
[14:24] <Steve_p> I thought a selfhosting 6-on-6 is what pugs was

[14:27] <Ziggy6> it seems so obvious that 6-on-6 should be written in pugs

[14:27] <[particle]> um. it'll be written in p6, won't it? ;)

[14:28] <Ziggy6> right, but now, pugs seems to be the closest to p6, so...

[14:29] <Ziggy6> i noticed object.HOW.methods doesn't work

[14:29] <Ziggy6> HOW returns something though

[14:30] <Ziggy6> is it the same return value for all objects?

[14:30] <[particle]> yes, object metainfo is largely unimplemented

[14:30] *** marmic joined
[14:30] <Ziggy6> that would seem like a nice place to start hacking for me :P

[14:31] <[particle]> look for tests, if there aren't any, write em :)

[14:31] <[particle]> are you using svn, or svk?

[14:31] *** penk joined
[14:31] <Ziggy6> svn for now

[14:32] <Ziggy6> i'm still waiting for a svk2 ebuild

[14:32] <[particle]> you may want to install App::Ack from cpan

[14:32] <[particle]> it's a grep replacement, and works great in svn working copies

[14:32] <[particle]> (eg. ignores .svn dirs)

[14:33] <Ziggy6> hehe, i ignore them visually :P

[14:34] <[particle]> it also has colorful output... i' think you'll like it C<cpan App::Ack>

[14:36] *** xinming joined
[14:43] <wolverian> argh, I need a printer.

[14:50] *** elmex_ joined
[14:54] *** fglock joined
[15:02] *** elmex__ joined
[15:09] *** triplef joined
[15:10] <triplef> Shouldn't "my $class = Class->new; my $thread = Threads->new(Class::function, $class);" send $class to Class::function?

[15:12] <[particle]> what is Class::function here?

[15:12] <[particle]> do you want to invoke that, and pass the result to new?

[15:12] <gaal> if this is p5 and you want to send the coderef, better use \&Class::function

[15:13] <Ziggy6> ack is cute, 10x for the tip :)

[15:13] <gaal> otherwise "Class::function" is evaluated and the result is treated as the first argument to new

[15:13] <[particle]> anytime, Ziggy6

[15:14] <triplef> gaal: Yes this IS perl5! I forgot to look at the channel title :-/ . But \$Class::function seems to work. Thanks alot!

[15:14] <gaal> \&, not \$ :-)

[15:14] *** mj41 joined
[15:15] <triplef> gaal: Yes, that was what i was *thinking* :)  \&Class::function

[15:18] *** Lorn_ joined
[15:30] <nferraz> what is the new recommended way to pass parameters to a sub?

[15:30] <nferraz> I know sub foo( $param ) will work, but $param will be read-only???

[15:33] <fglock> nferraz: either make foo a method/role and then $param.foo, or sub foo( $param is rw )

[15:37] <nferraz> mmm

[15:37] <nferraz> does the $sentence ~~ s:[foo] = " "; work???

[15:43] *** Lorn joined
[16:03] *** buetow joined
[16:15] *** rashakil joined
[16:15] *** ofer1 joined
[16:22] *** hexmode joined
[16:40] *** stevan_ joined
[16:48] * yves is away: Occupé

[16:49] * nothingmuch is here, otoh

[16:55] * statico is here in spirit

[17:00] * allbery_b is sorta halfway here

[17:00] <[particle]> "wherever you go, there you are, man."

[17:02] *** VanilleBert joined
[17:08] <TimToady> The Doctor is In

[17:08] <TimToady> Psychiatric Help 5Â¢

[17:12] *** juerd_ joined
[17:13] <TimToady> the main problem with doing 6-on-6 in pugs is that nobody has bothered to port a P6 regex engine to Haskell...

[17:15] <TimToady> < nferraz> does the $sentence ~~ s:[foo] = " "; work???

[17:15] <TimToady> this is an ambiguous question

[17:15] <TimToady> on the surface, it doesn't work because of that colon there

[17:16] <TimToady> it would have to be s[foo] = " "

[17:17] *** bernhard joined
[17:17] <TimToady> if you are asking whether pugs supports it

[17:18] <TimToady> I don't think pugs has the syntax yet.

[17:18] <TimToady> if you are asking about the relative precedence of ~~ and =, the answer is that the = is not a real =, and binds more tightly to the s[foo] than the ~~

[17:19] *** prism joined
[17:19] <TimToady> nferraz: see above

[17:19] <lumi> It's the Â« s = Â» operator?

[17:20] <[particle]> if it's not a "real" equals, what is it?

[17:20] <[particle]> is it more like a <== ?

[17:20] <TimToady> a delimiter between parts of a macro

[17:20] <nanonyme> hmm

[17:20] <TimToady> it's real enough to have += variants though

[17:22] <[particle]> can it be hyperized?

[17:22] <TimToady> or maybe it's real, but s[] is a bit like a listop in having a different precedence on one side than the other

[17:22] <TimToady> no

[17:23] <TimToady> s[] = is really mostly a macro

[17:25] <TimToady> s[foo] = "bar" is sugar for .subst(/foo/, { $_ = "bar" }) or some such

[17:26] *** theorbtwo joined
[17:26] *** ashleyb joined
[17:28] <[particle]> does that list of variants exclude ::=

[17:28] <TimToady> if you look at what it desugars to, $_ ::= "bar" is rather nonsensical

[17:29] <TimToady> it would have no effect on the s[]

[17:29] <[particle]> yeah, i thought so

[17:29] <[particle]> just making sure

[17:29] <[particle]> probably that excludes =>, too

[17:30] <[particle]> (looking over the assignment ops in S03)

[17:35] <TimToady> nferraz: I'm wrong, it is implemented in pugs

[17:36] <TimToady> ?eval my $_ = "f00"; s:g[0] += 2; .say

[17:36] <evalbot6> OUTPUT[f22â¤] Bool::True

[17:37] <TimToady> though it doesn't recognize x= there... :(

[17:37] <TimToady> ?eval my $_ = "f00"; s:g[0] x= 2; .say

[17:37] <evalbot6> Error: Internal error:â¤    Unknown pseudo-assignment form:Syn "=" [Var "$_x",Val (VInt 2)]â¤Please file a bug report.

[17:40] <TimToady> $_x ???

[17:41] <TimToady> I'll bet it's desugaring to $_x=2 instead of $_ x= 2

[17:45] *** rashakil joined
[17:46] <TimToady> fixed

[17:49] *** fglock joined
[17:51] <TimToady> ?eval my $_ = "f00"; s:g[0] x= 2; .say

[17:51] <evalbot6> Error: Internal error:â¤    Unknown pseudo-assignment form:Syn "=" [Var "$_x",Val (VInt 2)]â¤Please file a bug report.

[17:51] * TimToady twiddles thumbs...

[17:51] <fglock> TimToady: re P6 regex engine to Haskell - mp6 engine could be reused

[17:52] <Ziggy6> what's mp6?

[17:52] <lumi> Why is evalbot nude from version?

[17:52] <lumi> s/from/of/

[17:52] <fglock> Ziggy6: a minimal 6-on-6 compiler

[17:52] <nothingmuch> it's the new EvalBot Pro0n edition

[17:52] <nothingmuch> we need an op to /kick all the underage perl6 hackers

[17:53] <TimToady> I think that's most of us

[17:53] <Ziggy6> mp6 = http://svn.pugscode.org/pugs/v6/v6-MiniPerl6 ?

[17:53] * nanonyme feels old

[17:53] <lambdabot> Title: Revision 15092: /v6/v6-MiniPerl6

[17:53] <nothingmuch> not just iblech?

[17:53] <fglock> Ziggy6: yes

[17:54] *** Debolaz joined
[17:54] <TimToady> Ziggy6: btw the current plan for implementing .HOW is to stitch in the MO code that is in (I think) src/MO

[17:55] <TimToady> fglock: yes, I think mp6 could pretty easily be translated, given someone who has learned Haskell more times than I have...

[17:55] *** rashakil_ joined
[17:56] *** triplef joined
[17:57] <TimToady> fglock: did you notice that we changed the meaning of | again to collect all DFAable prefixes, not just constant prefixes?

[17:57] <Ziggy6> oops, i had a shock, seeing all that Haskell code :)

[17:58] <fglock> TimToady: yes

[17:58] <TimToady> thinking of it as deciphering a transmission from Alpha Centauri.

[17:58] <fglock> I'm figuring out how to implement

[17:58] <Ziggy6> so the rule engine from mp6 is complete?

[17:59] <fglock> Ziggy6: it's not complete, but it is written in perl 6

[17:59] <Ziggy6> you were thinking about porting it to Haskell?

[17:59] <fglock> and it compiles itself

[17:59] * allbery_b misreads "rule enigma"

[17:59] <TimToady> basically instead of /foo \d*/ returning just "foo", it returns "foo \d*", and all those prefix patterns get or'ed together into one DFA where the accepting states tell you which subpattern matched

[17:59] <Ziggy6> how did you bootstrap mp6?

[18:00] <fglock> Ziggy6: pugs could translate mp6->haskell

[18:00] *** xinming_ joined
[18:00] <fglock> Ziggy6: it was bootstrapped by a compiler chain: lrep -> v6.pm -> mp6

[18:00] <fglock> lrep was bootstrapped by hand

[18:02] <fglock> TimToady: ah, so the underlying engine is still the same

[18:02] <fglock> it just adds a further check for longest token

[18:03] <TimToady> yes, essentially

[18:03] <TimToady> it would be nice not to reparse but that's an optimization

[18:03] <fglock> problem is, if it finds a return block, for example

[18:03] <fglock> hmm - not a problem, really

[18:04] <TimToady> {...} is defined to terminate "pure" region

[18:04] *** ludan joined
[18:04] <fglock> ah, ok

[18:04] <TimToady> see most recent S05 changes

[18:04] <Juerd> feather is reachable by its IP address

[18:04] <Juerd> The DNS server is broken, and because of the storm, there is no way to reach Amsterdam right now :)

[18:04] <Juerd> feather's IP is 194.145.200.126

[18:05] <[particle]>  /topic update?

[18:06] <Juerd> Hm, there may be another way... Just a sec.

[18:06] <TimToady> that's funny, I have DNS for it--just checked in a patch in fact

[18:06] <Juerd> Probably cached by your ISP :)

[18:06] <Juerd> Yay, the DNS machine is xen-ified

[18:06] <Juerd> I can "xm console" it remotely

[18:07] <TimToady> yeah, I get a non-authoritative answer

[18:19] *** nferraz left
[18:31] *** autark__ joined
[18:32] <fglock> TimToady: re S05 - I'm trying to understand this part - "but not including any subrule more than once"

[18:33] <kolibrie> lumi: evalbot didn't join the channel when feather came back up yesterday, so I started one and invited it here.

[18:34] <TimToady> recursion will cause the token collector not to terminate

[18:34] <kolibrie> I didn't find docs explaining all the versioning stuff, so it doesn't have that

[18:34] *** svnbot6 joined
[18:35] <kolibrie> anyone who knows how to fix evalbot can kill this one, start a new one, and document how to do it

[18:35] <TimToady> X>>X>>X>>+<<X<<X<<X would be a legal token

[18:35] <fglock> TimToady: ok

[18:35] <audreyt> kolibrie: all I did was: "perl examples/network/evalbot/evalbot-loop"

[18:36] <audreyt> I've summoned a new evalbot here; please drop the evalbot6 once it's here (should be in 5min or so)

[18:36] <TimToady> thanks. how's backlogging going?  :)

[18:36] *** VanilleBert left
[18:36] <audreyt> done with the syns

[18:36] <kolibrie> audreyt: so you don't run the pugs step from the README, I guess

[18:37] <audreyt> kolibrie: mm?

[18:37] <audreyt> was confused a bit with S02 because in my mind Squid isa Fish

[18:37] <audreyt> (in Chinese they share the word root)

[18:37] <TimToady> heh

[18:37] <audreyt> esp. you have a clause saying that "returns" can usefully be more specific than "of"

[18:38] <audreyt> but then the example is showing two wholly incompatible types

[18:38] <kolibrie> audreyt: examples/network/evalbot/README.pod says: pugs evalbot.pl evalbot6 irc.freenode.net:6667

[18:38] <audreyt> which is mildly confusing given the Chinese foobar :)

[18:38] <audreyt> kolibrie: README.pod predates evalbot-loop. fix it?

[18:38] <TimToady> we just need a perfect language to categorize everything for us properly.  ;)

[18:39] <rgs> ask john wilkins !

[18:39] <audreyt> CosmicOS!

[18:39] <TimToady> he's dead--I asked Umberto Eco instead...

[18:39] *** _marco joined
[18:39] <audreyt> Lincos, rather

[18:39] <kolibrie> audreyt: so just run 'perl examples/network/evalbot/evalbot-loop', and then how do you invite to #perl6

[18:40] *** TimToady joined
[18:40] <audreyt> kolibrie: it's the default

[18:40] *** buetow joined
[18:40] <audreyt> see evalbot-loop and grep for #perl6

[18:40] <kolibrie> audreyt: ok, updating README.pod

[18:40] <audreyt> kolibrie++

[18:43] *** evalbot_r15092 joined
[18:45] *** TimToady joined
[18:47] <audreyt> ?eval 1+1

[18:47] <evalbot_r15092> 2

[18:52] *** _marco left
[18:52] <svnbot6> r15093 | kolibrie++ | evalbot - added documentation for starting the autoincrementing bot

[18:52] <diakopter> ?eval 'r15092' + 'Christmas'

[18:52] <evalbot_r15092> 0.0

[18:53] <diakopter> ?eval 'r15092' && 'Christmas'

[18:53] <evalbot_r15092> "Christmas"

[18:53] <kolibrie> audreyt: thanks for starting up the svnbot6 too

[18:55] <audreyt> np :)

[18:57] <diakopter> is it possible to set up a way of inputting tests to the evalbot, who would then add failing ones to svn?

[18:59] <audreyt> sure :) wanna write one? :)

[19:00] <TimToady> ?eval my $_ = "f00"; s:g[0] x= 2; .say

[19:00] *** evalbot_r15092 is now known as evalbot_r15093

[19:00] <evalbot_r15093> OUTPUT[f0000â¤] Bool::True

[19:07] *** seano joined
[19:17] *** __Ace__ joined
[19:18] <__Ace__> hey folks

[19:18] <__Ace__> so.. in beta stage with Perl6 now eh?

[19:18] <__Ace__> ;)

[19:18] *** thepler joined
[19:19] *** nipra joined
[19:20] *** GabrielVieira joined
[19:20] <__Ace__> I truly hope its not another waporware...

[19:20] <audreyt> TimToady: so the reason of accepts/rejects instead of ACCEPTS/REJECTS is ... ?

[19:23] *** Ziggy6 left
[19:23] *** Ziggy6 joined
[19:23] <__Ace__> I was also wondering... how much build in OO is there gonna be with Perl6? Kinda like the 5.next idea.. (although I wonder why the h-ll they dont have 5.prev in Ruby)

[19:23] <wolverian> __Ace__, see spec.pugscode.org for the specs 

[19:24] <__Ace__> ok

[19:25] *** ludan joined
[19:26] *** luqui joined
[19:26] <TimToady> audreyt: because it's also expected to be called directly, not just automagically?

[19:28] <luqui> gidday

[19:28] <TimToady> but if anything can be a "pattern", then maybe uppercase would be a good idea for collision avoidance

[19:28] <TimToady> luqui: howdy do

[19:28] <luqui> am I to infer that there are audreyts around?

[19:29] <TimToady> shh!  be vewy vewy siwent

[19:30] <__Ace__> uh, having "loop" instead of "for".. isnt that just confusing?

[19:30] <TimToady> it's there just to confuse you!  :)

[19:31] <luqui> it saves "for" for the useful "for"

[19:31] <luqui> ... it has been a really, really long time since I've used C-style for in perl code

[19:31] <__Ace__> I bet you guys know what you are doing but sometimes things are best as they are since they are so used..

[19:31] <TimToady> that was how Perls 1..5 were designed

[19:31] <TimToady> Perl 6's mandate is to break everything that could use breaking

[19:32] <__Ace__> so, now you wanna be inventive by making some new stuff up?

[19:32] <TimToady> Hubris it is.

[19:32] <__Ace__> aha

[19:32] <TimToady> well, and Laziness, since for is shorter than loop, and used more often

[19:32] <__Ace__> same goes with using ~ for concatination instead of . ?

[19:32] <luqui> TimToady, and it works on infinite lists :-)

[19:33] <__Ace__> ~ is 2 buttons instead of 1 with the . :)

[19:33] <TimToady> yes, method calls are more important than concatenation

[19:33] <__Ace__> haha, true

[19:33] <luqui> __Ace__, that's because we spelled the three-button -> with one button: .

[19:33] <TimToady> especially since most concatenation is done via interpolation

[19:34] <__Ace__> just as I thought, you know what you are doing ;)

[19:34] <[particle]> how dare you make such accusations!

[19:34] <TimToady> we don't really know what we're doing, we just know what we're trying to do.

[19:35] <__Ace__> TimToady: And how is that going then?

[19:35] <TimToady> things still seem to be converging on a solution

[19:35] <[particle]> such is the path of architects. making a quick succession of suboptimal decisions.

[19:36] *** prism joined
[19:36] <__Ace__> Me and my buddy did a simple javacompilator... and we thought that was hard.. Perl code cant be easy to break down..

[19:36] <TimToady> if you want some of the original suboptimal reasoning, you can look at the old apocalypses too.

[19:37] <TimToady> that's why we need a powerful pattern matching engine in Perl 6 to do it for us.  :)

[19:37] <__Ace__> hehe

[19:37] <__Ace__> and we did this in Java.. not C

[19:38] *** fglock joined
[19:39] <__Ace__> so, seriously, noone knows how much is left of all this before some release?

[19:39] <__Ace__> some Ruby/Python/blahblah folks say it will never come out...

[19:40] <TimToady> our aim is convergence, not a particular area under the curve.

[19:40] <TimToady> as long as the area is not infinite

[19:40] <__Ace__> would be nice to see how you respond to such accusation

[19:40] <TimToady> precisely how I'm responding to it now.  Just keep peddling...

[19:41] *** _marco joined
[19:41] <TimToady> whether it comes out or not has little to do with people who aren't contributing, only with people who are.

[19:41] <__Ace__> so, its not about finishing it, but to work on it?

[19:41] *** autark_ joined
[19:41] <TimToady> it's about working on finishing it.

[19:41] <__Ace__> :)

[19:42] <TimToady> convergence on a solution is important

[19:42] <__Ace__> I would gladly help.. but I need some realy work where I get money first.. ;)

[19:42] <__Ace__> *real

[19:43] <TimToady> yeah, know the feeling, believe me.

[19:43] <TimToady> most of us here do

[19:43] <__Ace__> bet you _do_ get money from it... some way

[19:43] <__Ace__> or no?

[19:43] <TimToady> I get some royalties from Perl 5 book sales

[19:43] <__Ace__> haha, thats sad.. I mean, only that.. ?

[19:43] <TimToady> but aside from some early grants from the Perl Foundation, I'm entirely self funded

[19:44] <__Ace__> no sponsor money?

[19:44] <TimToady> and about $250k more in debt on my house than when I started

[19:44] <__Ace__> "Hey, this is some good stuff. Here's $1000000"

[19:45] <TimToady> would be nice, but not counting on it.

[19:45] <[particle]> it'd be nice to get a million pennies, even

[19:45] <__Ace__> isnt it funny though.. some other folks make a living working with Perl code

[19:46] <Ziggy6> timtoady do you have a real job?

[19:46] <TimToady> yes.  should be going there 'bout now...

[19:46] <TimToady> I work across the street from Google

[19:46] <Ziggy6> wow

[19:46] <__Ace__> cool

[19:46] <__Ace__> with that?

[19:46] <Ziggy6> in seattle?

[19:46] <__Ace__> *what

[19:46] <TimToady> Mountain View

[19:47] <TimToady> company called Netlogic Microsystems

[19:47] <Ziggy6> did you apply there?

[19:47] <TimToady> I was invited by an acquaintance who works there.

[19:47] <TimToady> they are working on pattern matching in hardware, and they thought I knew something about that...

[19:48] * obra grins at timtoady

[19:48] <kolibrie> Perl 6 regexes in hardware ???

[19:48] <TimToady> but it does chew up a significant amount of my time

[19:48] <Ziggy6> lol

[19:48] <Ziggy6> standard 8hrs/day?

[19:48] <luqui> really??you seem to be here most of the day...

[19:48] <TimToady> they expect me to spend part of my time working on Perl

[19:49] <Ziggy6> ah, you are helping them to build faster firewalls or something

[19:49] <TimToady> yeah, things like that.

[19:50] <[particle]> ziggy6: are you in seattle?

[19:50] <Ziggy6> nope

[19:50] <TimToady> romania?

[19:50] <fglock> btw, audreyt: Segula never paid your sponsorship :(

[19:50] <[particle]> 'cause last time i checked, google's in california

[19:50] <Ziggy6> hehe tim, how did you find out?

[19:50] <__Ace__> TimToady: what say you about me having done a "Desktop Search" app in perl? :)

[19:50] <TimToady> I saw the .ro first time you checked in

[19:50] <Ziggy6> ah, the domain name...

[19:51] <__Ace__> its more than that, but anyway..

[19:51] <TimToady> __Ace__: er, my condolences?  :)

[19:51] <__Ace__> hehe

[19:51] <__Ace__> I actually did alot of research before I started... was like 2 years ago

[19:52] <Ziggy6> you're selling it?

[19:52] <__Ace__> the idea was to release it as open source or something

[19:52] <[particle]> so it's vaporware, like perl6? ;)

[19:52] <Ziggy6> but you didn't release it yet

[19:52] <__Ace__> yea kinda ;)

[19:52] <__Ace__> problem is

[19:52] <TimToady> most things fall into the category of "open source or something"... :)

[19:53] <__Ace__> I have ideas with it all the time I wanna implement, and even if its Perl (where things goes pretty much faster than doing the same in C), it takes time

[19:54] <TimToady> Hopefully even faster in Perl 6, someday...

[19:54] <__Ace__> yea

[19:55] <Ziggy6> ?don't_eval "next" xx * ~ " christmas"

[19:55] <lambdabot> Unknown command, try @list

[19:55] <TimToady> anyway, you're welcome to help however you like.

[19:55] <__Ace__> when I started research I wanted among other things: 1. make it like a standalone. one run and go file (like PAR) 2. have modules that I needed.. :)

[19:55] *** thepler joined
[19:55] <__Ace__> and other things I cant remember

[19:56] <__Ace__> TimToady: so, where do one start?

[19:56] <__Ace__> dl the source of perl6 and understand it?

[19:56] <TimToady> most people start by playing with pugs, the prototype implementation

[19:56] <TimToady> and then branch out into writing tests, or docs, or whatever

[19:57] <luqui> __Ace__, it could be a couple years until you understand it

[19:57] *** thepler joined
[19:57] <TimToady> putter was working on a diagram the other day of various places that people can contribute

[19:57] <luqui> I'm not actually sure how long, since i started a couple years ago and don't understand it

[19:57] <TimToady> doesn't stop any of us... :)

[19:58] <luqui> but not in a perl5-this-is-the-most-horrible-thing-i-have-ever-seen kind of way

[19:58] <__Ace__> I suppose the code is devided into "modules" aswell eh?

[19:58] * [particle] hopes putter sends a list email about that

[19:58] <TimToady> anyway, you can get a commit to pugs really easily.

[19:58] <luqui> but more in a perl6-this-is-the-most-abstract-thing-i-have-ever-seen kind of way

[19:58] <Ziggy6> hehe, i started 2 days ago, and i hope it won't take that long...

[19:58] <__Ace__> *divided

[19:58] <TimToady> if you /msg me your email, I can send a pugs commit bit to you.

[19:58] * luqui had to learn haskell along the way

[19:59] * [particle] avoided the haskell part

[19:59] <[particle]> mp6++

[19:59] * Ziggy6 is in for haskell too

[19:59] <__Ace__> crap, need to register

[19:59] <__Ace__> cant pm otherwise

[19:59] <TimToady> or obfuscate your addr here

[19:59] <[particle]> but you can respond to somebody else's pm

[19:59] <TimToady> or email to me

[20:00] <__Ace__> yea, using md5?

[20:00] <__Ace__> lol

[20:00] <luqui> well, it has to be something we can reverse

[20:00] <__Ace__> yea, give me yours then

[20:00] *** bpphillips joined
[20:00] <TimToady> email to larry at wall dot org

[20:00] <__Ace__> oki

[20:00] <luqui> or note [particle]'s comment...

[20:00] <luqui> nevermind

[20:00] <TimToady> I already get tons of spam there...

[20:00] <__Ace__> I send right away then

[20:00] <luqui> are you implying that __Ace__'s message will be spam :-)

[20:01] <Ziggy6> ah, didn't realise you were larry wall :)

[20:01] *** BooK joined
[20:02] <[particle]> there's more than one way to spell it

[20:02] <TimToady> I scarcely realize it myself. :)

[20:04] <__Ace__> "you got mail"

[20:05] <__Ace__> hopefully it wont see gmail as spam

[20:06] <TimToady> commitbit sent

[20:06] <TimToady> after svn/svk checkout it's customary to add yourself to AUTHORS as first checkin as a test.

[20:07] <TimToady> might be a little trouble today because the svn server was having DNS issues

[20:07] <TimToady> dunno if that got resolved

[20:07] <__Ace__> http://www.wall.org/ <- is this like a family page?

[20:07] * luqui updated okay...

[20:07] <lambdabot> Title: The Wall Nuthouse

[20:07] <TimToady> yes, though most of the kid links are pretty old

[20:07] <[particle]> TimToady: you still have home automation running w/ perl5?

[20:07] <TimToady> you bet

[20:08] <TimToady> my family would now be very unhappy if I took that down

[20:08] <[particle]> great. next time we get you up to seattle i'd like you to talk about that

[20:08] <TimToady> they like hearing the computer say who is calling on the phone

[20:08] <[particle]> :)

[20:09] <[particle]> does it tell you how much you weigh?

[20:09] <TimToady> nope

[20:09] <[particle]> well, room for improvement :)

[20:09] <TimToady> it only tells me how smart I am.  'Course it lies...

[20:10] <__Ace__> hey, anyone here wanna try my "shell" Im working on aswell?

[20:10] <__Ace__> made in perl ofcourse 

[20:10] <TimToady> the first application is actually still one of the most important; the drier in the garage plays a noise throughout the house since we can't hear it directly when the garage door is closed...

[20:11] <__Ace__> TimToady: btw, is there a way to change the nick to "Ace"?

[20:11] * luqui can only imagine how annoying that would be

[20:11] <__Ace__> usename I mean

[20:12] <TimToady> probably, if not I can give you a new invite

[20:12] <__Ace__> only reason I use __Ace__ is since the others were taken :)

[20:12] *** autark__ joined
[20:12] <TimToady> yeah goto preferences

[20:12] <__Ace__> although it suits nice with __END__

[20:13] *** autark__ is now known as autark

[20:13] <TimToady> A meme that is dying with Perl 5 though...

[20:13] <luqui> (turned into =pod ?)

[20:13] <TimToady> among other things

[20:13] <TimToady> depending on the nature of __MUMBLE__

[20:14] <__Ace__> yea, Im dying..

[20:14] <TimToady> file and line are just compiler "constants"

[20:14] <__Ace__> why are those gone btw?

[20:14] <allbery_b> there are cleaner ways to do them

[20:15] <__Ace__> like?

[20:15] <[particle]> it's now spelled $?FILE

[20:15] <TimToady> $?FILE can be interpolated

[20:15] <TimToady> __FILE__ can't

[20:15] *** diotalevi joined
[20:16] <TimToady> =pod streams can have multiple of them, unlike __DATA__

[20:16] <TimToady> things like that

[20:16] <[particle]> see http://dev.perl.org/perl6/doc/design/syn/S02.html#Names

[20:16] <lambdabot> Title: Synopsis 2: Bits and Pieces - perl6:

[20:16] <__Ace__> when you say interpolated you mean? I think I know what it is... with gfx and images..

[20:16] *** idiotmax joined
[20:17] <__Ace__> I mean, combining between 2 values..

[20:17] *** ekelund joined
[20:17] <TimToady> die "Error at $?FILE line $?LINE you dinglefungus!"

[20:17] <[particle]> (descriptive errors)++

[20:18] <TimToady> string interpolation, not point interpolation

[20:18] <TimToady> more like "gnostic interpolation"

[20:18] <__Ace__> so, what do that do exactly?

[20:19] <TimToady> same thing as Perl 5's die "Error at " . __FILE__ . " line " . __LINE__ . " you dinglefungus!"

[20:20] <TimToady> but they parse as variables rather than symbols

[20:20] <TimToady> so you can interpolate them like variables

[20:20] * diotalevi is currently wishing Perl 5 didn't die with strings but rather with objects that happened to stringify.

[20:20] * allbery_b has wished that a few times as well

[20:20] <TimToady> Um, it does, if you give die an object

[20:20] <[particle]> they're no longer preprocessor macros, they're variables now

[20:21] <allbery_b> hm, but isn't that quasisupported in 5.6/5.8?

[20:21] <TimToady> It's even quaisier supported in Perl 4

[20:21] <__Ace__> hey ekelund

[20:21] <__Ace__> cant pm.. need to reg..

[20:21] <diotalevi> TimToady: yes, but the error $foo/0 thrown by the interpreter isn't an object.

[20:22] <ekelund> __Ace__: hi

[20:22] <TimToady> true nuff

[20:22] <diotalevi> $foo/0 looks odd. I read it like "$foo, the function with zero arity."

[20:22] <__Ace__> TimToady: ok, think I got it now :)

[20:22] * luqui too

[20:22] <luqui> (to diotalevi )

[20:23] <__Ace__> so ekelund.. Perl sucks, and Ruby doesnt?

[20:23] <__Ace__> :)

[20:23] <allbery_b> ruby looks a lot like perl5 with many of the wartier things removed.

[20:23] <allbery_b> of course, so does perl6

[20:23] <luqui> allbery_b, plus continuations

[20:24] <luqui> (the only reason I have ever programmed in ruby)

[20:24] <luqui> (or rather, the reason I started)

[20:24] <allbery_b> aruably that's one of the removed warts :)

[20:24] *** b_jonas joined
[20:24] <__Ace__> well, ofcource ruby is "better".. its from 1995.. perl is from 1987

[20:25] <luqui> Java is from... 1991?

[20:25] <ekelund> __Ace__: I havnt said that :) but I like the ruby syntax. But never used ruby and perl for any big application, besides our compiler

[20:25] * TimToady wanders off in a daze &

[20:25] <allbery_b> heh

[20:26] * luqui wonders how we started talking about ruby and other pls

[20:33] *** _marco joined
[20:45] <ekelund> will there be any way to talk between ruby and perl 6? any supported ways

[20:47] <allbery_b> parrot is a sort of .net-like thing which hosts perl6 and could easily host a ruby implementation if it doesn't already

[20:48] <[particle]> the implementation of ruby on parrot is codenamed "cardinal"

[20:48] <ekelund> will parrot use object based assembler as in .Net?

[20:48] <[particle]> yes, parrot has an oo-assembly language

[20:49] <__Ace__> parrot is supposed to support alot of languges no?

[20:49] <[particle]> yes

[20:49] <__Ace__> you can do things in diff lang. and they can then interact

[20:49] <[particle]> that's a goal, yes

[20:49] *** davidra joined
[20:49] <allbery_b> s/\.net/CLR/

[20:49] <__Ace__> sounds like a cool thing..

[20:50] <[particle]> i want to use perl's nifty test modules in my tcl code

[20:50] *** davidra is now known as autark

[20:50] <ekelund> [particle]: how big is the execution time lost when running C/C++ in parrot?

[20:50] <[particle]> you mean, benchmarks of c vs parrot?

[20:50] <[particle]> for the same task?

[20:51] <ekelund> and whats the benifits to use parrot instead of say Mono

[20:51] <ekelund> [particle]: yes

[20:51] <allbery_b> for one, mono is officially dead now, isn't it?

[20:52] <__Ace__> it is?

[20:52] <allbery_b> as of a couple weeks ago

[20:52] <[particle]> parrot is a register-based vm, unlike java & ms stack-based vms

[20:52] <[particle]> parrot is designed for dynamic languages

[20:52] <wolverian> alioth's shootout has parrot entries 

[20:52] <__Ace__> mono dead? thats interesting..

[20:53] <ekelund> [particle]: is it because of the ms - novell thing?

[20:53] <[particle]> here's some details on the benchmark question: http://shootout.alioth.debian.org/sandbox/benchmark.php?test=all&lang=parrot&lang2=gcc

[20:53] <lambdabot> Title: Parrot PIR benchmarks | Debian : AMD&#8482; Sempron&#8482; The Sandbox, http://tinyurl.com/25nw99

[20:53] * allbery_b thought he'd herd work on it had stopped

[20:53] <__Ace__> and the reason is?

[20:54] <wolverian> parrot still loses to c sometimes ;)

[20:54] <[particle]> mono has pretty restrictive licensing

[20:54] <[particle]> but compare parrot to perl5

[20:54] <ekelund> hmm wasnt mono GPL?

[20:54] <ekelund> or LGPL

[20:54] <wolverian> mono is GPL, LGPL and MIT

[20:55] <wolverian> "Mono's C# compiler and tools are released under the GNU General Public License (GPL), the runtime libraries under the GNU Lesser General Public License (LGPL) and the class libraries under the MIT License."

[20:55] *** bpphillips left
[20:55] <wolverian> that might be considered more restrictive than the artistic license, perhaps. 

[20:55] *** rashakil__ joined
[20:56] <ekelund> wolverian: I see it as something good, then it will be free even if someone fork it

[20:56] <ekelund> GPL will continue to be free after a fork I mean

[20:57] <wolverian> GPL will be forked? :)

[20:58] <ekelund> no you know what i ment

[20:58] <ekelund> the software licensed with GPL will continue to be free

[20:59] <wolverian> right.

[21:04] <ekelund> wolverian: but that is when no one break the license ofcourse.

[21:13] <__Ace__> Checked out revision 15093.

[21:13] <__Ace__> nice :)

[21:14] *** Aankhen`` joined
[21:17] *** bonesss joined
[21:18] *** larsen_ joined
[21:27] <ekelund> __Ace__: of perl?

[21:27] <__Ace__> yea, perl6.. pugs

[21:28] <__Ace__> damnit, ghc 6.6 isnt in the list in ubuntu.. only 6.4

[21:28] <Ziggy6> congratulations, __Ace__, you are looking at an 10 hour compilation ordeal

[21:28] <__Ace__> heh

[21:28] <__Ace__> need to get this haskell thing to work first

[21:29] <ekelund> __Ace__: will you wont come tomorrow right? antar lÃ¶rdag

[21:29] <Ziggy6> compiling haskell takes several hours

[21:29] <ekelund> does perl use haskell?

[21:29] <Ziggy6> also, get -extralibs

[21:29] <__Ace__> eller imon?

[21:29] <Ziggy6> if you compile without -extralibs, pugs won't work

[21:30] <ekelund> __Ace__: jasa vilket foredrar du. Sorry we speak swedish :/ maybe should be privmsg

[21:30] <__Ace__> its probably better to meet tomorrow.. party on sat suits me better I think..

[21:30] <Ziggy6> didn't find this piece of info before I started compiling.. :D

[21:30] <__Ace__> where did you compile?

[21:30] <__Ace__> ekis: tomorrow and sunday

[21:31] <ekelund> tomorrow then. can you work late to? because Im at work first (class with tdd then out to our customer)

[21:32] <__Ace__> sure

[21:32] <__Ace__> we are geeks arent we?

[21:32] <__Ace__> :)

[21:32] <__Ace__> so, we can stay up long coding

[21:33] <__Ace__> and to answer your question ekelund... there is a haskell implementation made for perl6

[21:33] <Ziggy6> on my 1.85Mhz barton

[21:34] <Ziggy6> used only 256 Mb though (vmware)

[21:34] <__Ace__> guess it was easy and fast to do... compared to the one in C..

[21:34] <ekelund> hmm to run haskell in perl or run perl in haskell 

[21:34] *** nipra joined
[21:34] <__Ace__> perl in haskell

[21:34] <ekelund> because you run ghc so I guess no haskell intepret.. in perl

[21:34] <__Ace__> so, you can try perl6 code...

[21:34] <__Ace__> eh, ja :)

[21:35] *** Schwern joined
[21:36] <ekelund> __Ace__: next friday will be nice with the conferance and all. Will stay one night at the hotel to. I and my coworkers will probably party in HBG to

[21:37] <__Ace__> would be interesting to see the presentation ;)

[21:37] <__Ace__> gotta finish up the perl thingy.. to make it even cooler ;)

[21:37] <allbery_b> recent ghc has a library, which would allow you to run haskell embedded in perl if you had bindings for ghc-lib :)

[21:39] <ekelund> __Ace__: yes would be good, maybe I can get someone to record it on a tape och dvd :)

[21:39] <__Ace__> haha, yea, would be cool

[21:39] <ekelund> :)

[21:40] <__Ace__> possibly removing all that output data flooding out

[21:40] *** Ziggy6 left
[21:41] <ekelund> hehe :) that to ofcourse

[21:41] *** mj41_ joined
[21:42] <ekelund> I am thinking of running the app and record it to flash or something. I dont think my GNU installation is supporting the external tv yet. Then I can run the flash in os x and show them

[21:42] *** Ziggy6 joined
[21:42] <__Ace__> vlc2swf ?

[21:43] <ekelund> that didnt work that well last time

[21:43] <ekelund> :/

[21:43] <__Ace__> well

[21:44] <__Ace__> try xvidcap then :9

[21:44] <__Ace__> http://xvidcap.sourceforge.net/

[21:44] <lambdabot> Title: Xvidcap Project Home Page

[21:45] *** jferrero joined
[21:45] <__Ace__> http://www.google.com

[21:45] <lambdabot> Title: Google

[21:50] <ekelund> __Ace__: see privmsg

[21:50] <__Ace__> Ziggy6 make -extralibs doesnt work with ghc

[21:50] <__Ace__> hmm

[21:50] <__Ace__> ekelund: yea saw it

[21:51] <ekelund> __Ace__: nice right :) he is cool, helt off and his solo work :0

[21:51] <__Ace__> he's ok :)

[21:52] <ekelund> __Ace__: he have had an concert in NY to. My friend Rebecka was leaving NY that day she had no time to see it :(

[21:53] <__Ace__> NY = New York?

[21:54] <Ziggy6> __Ace__: you need to just unpack ghc-version-extralibs.tgz in the same directory where you unpacked ghc-version.tgz

[21:55] *** Limbic_Region joined
[21:55] <__Ace__> I did

[21:56] *** [particle] joined
[21:56] <__Ace__> ran ./configure

[21:56] <Ziggy6> a simple make install shoul do it now

[21:56] <__Ace__> aha

[21:56] <ekelund> NY = New York yes

[21:57] <__Ace__> Ziggy6: this is gonna take a few days now eh?

[21:58] <__Ace__> damn, why is there no 6.6 ready for ubuntu.. 

[21:59] <Ziggy6> depending on your RAM and CPU

[21:59] <Ziggy6> it took me a night

[21:59] <Ziggy6> for both ghc6.6 and pugs

[22:00] <ekelund> __ace__: run dist. gcc

[22:01] <ekelund> and add some nodes to the network :)

[22:02] <__Ace__> yea, well

[22:02] <Ziggy6> i'm kind of used to waiting for compiles, since i use gentoo... :D

[22:02] <__Ace__> hard to set up?

[22:02] <Ziggy6> i did that once and it was pretty straightforward

[22:03] <ekelund> __Ace__: the dist. gcc?

[22:03] <ekelund> or gentoo

[22:03] <ekelund> :)

[22:03] <Ziggy6> distcc on gentoo :)

[22:04] <ekelund> hehe :)

[22:04] <__Ace__> dist gcc

[22:04] <ekelund> __Ace__: do you run the puppy linux ?

[22:04] <__Ace__> not atm

[22:05] <ekelund> hmm dont think dist gcc is hard if you know what you do. A person used it to compile gentoo for my old 233 by adding his desktop and laptop to distcc :) instead of a week of compiling it took one day I guess

[22:05] <ekelund> belive not think :)

[22:07] <__Ace__> nothing is hard if you know what you do

[22:08] <ekelund> :)

[22:09] <ekelund> or you use xcode on a mac and it will find nodes by it self over bonjour. if you config it that way. Never tried but if I remember it right xcode works like that

[22:10] <allbery_b> ...assuming you haven't killed off the distcc stuff like I did because every so often it eats the machine

[22:10] <ekelund> allbery_b: ;)

[22:10] <allbery_b> (there is nobody else on my internal netwok to use it, it was just sitting there chewing CPU all by itself)

[22:10] <__Ace__> well, Im not compiling KDE so.. I skip that for now

[22:11] <ekelund> allbery_b: its a lost not using the Hz :) 

[22:11] <ekelund> __Ace__: :)

[22:12] <allbery_b> enh.  at home there's no point as there's only the mini (and rarely the iBook); on campus, well, I'd rather randoms didn't borrow my iBook on me :)

[22:13] <ekelund> :)

[22:25] <ekelund> __Ace__: see the privmsg

[22:25] <__Ace__> I still cant answer in pms

[22:25] <ekelund> bah

[22:26] <ekelund> __Ace__: see another channel we both are in

[22:26] <allbery_b> register with nickserv.  not like they charge for it...

[22:33] <__Ace__> and if I forgot my pass?

[22:35] <ekelund> hmm http://www.youtube.com/watch?v=1Uk9va7IzaI&NR

[22:42] <allbery_b> I think that's where you use /stats p and talk to an ircop

[22:44] <__Ace__> ...still compiling ghc...

[22:45] <obra> ghc is good that way

[22:46] <Limbic_Region> since ghc bootstraps itself it compiles twice (like gcc).

[22:47] *** weinig joined
[22:50] *** autark joined
[22:54] *** Odin-LAP joined
[23:15] *** mncharity joined
[23:16] *** mncharity is now known as puttter

[23:16] *** puttter is now known as putter

[23:19] <putter> Did the POPL keynote end up being about Perl 6?  Did it leave any artifacts? (video, slides, blog, etc)

[23:19] <lambdabot> putter: You have 2 new messages. '/msg lambdabot @messages' to read them.

[23:24] <putter> luqui: indeed, fglock.  I hope to capture the knowledge of how people can help with kp6, but that second interview hasn't happened yet.

[23:26] *** Psyche^ joined
[23:28] *** thepler_ joined
[23:28] *** dduncan joined
[23:38] *** pbuetow joined
[23:42] *** Psyche^ is now known as Patterner

[23:46] <putter> <log mark>

[23:46] <putter> What is the state of the OO AST?

[23:46] <putter> Not of migrating pugs to it, but the ast specification itself?

[23:47] <putter> Largely done and expected to survive pugs implementation unchanged?  A rough sketch awaiting implementation to be fleshed out?

[23:48] <putter> How close is it to the current pugs ast?

[23:48] <putter> Largely backwards compatible?  A major rewrite?

[23:50] <putter> It is no doubt at least partially my own bias, but the OO AST node keeps ending up as the leftmost node on my project dependency diagram.

[23:50] <putter> Thanks.

[23:51] <putter> lambdabot: ?tell gaal Any thoughts on http://colabti.de/irclogger/irclogger_log/perl6?date=2007-01-18,Thu&sel=557   ?  tnx.

[23:51] <lambdabot> Consider it noted.

[23:51] <putter> lambdabot: ?tell audreyt Any thoughts on http://colabti.de/irclogger/irclogger_log/perl6?date=2007-01-18,Thu&sel=557   ?  tnx.

[23:51] <lambdabot> Consider it noted.

