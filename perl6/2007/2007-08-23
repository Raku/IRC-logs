[00:01] *** hkb_lab is now known as hbk_

[00:03] *** rfordinal left
[00:08] *** buetow left
[00:18] *** justatheory joined
[00:34] *** hbk_ is now known as hkb_aw

[00:52] *** lyokato joined
[00:53] *** lambdabot left
[00:54] *** lambdabot joined
[01:00] *** jhorwitz left
[01:02] <TimToady> on the flakiness of the pugs compiler, I wonder whether that means ghc 6.6.1's GC is a bit flakey...

[01:03] <TimToady> definitely something non-deterministic

[01:03] <SamB> TimToady: you expect GC's to be deterministic now?

[01:04] <TimToady> nope, I just expect them not to make a parser fail half the time

[01:04] *** justatheory left
[01:05] <TimToady> it's kindof about 50/50 whether pugs's parser will succeed in parsing the metholated STD

[01:05] <SamB> fail in a SIGSEGV-esque way, or a mysterious wrong answer way?

[01:06] <TimToady> mysterious wrong answer

[01:06] <TimToady> in fact, fairly consistenly claiming that a variable wasn't declared when in fact it was

[01:06] <PerlJam> TimToady: earlier I was musing over using |? as the "shortest token" version of |  (i.e.,  / f|fo|foo / matches "foo" at first approximation while  / f|?fo|?foo /  matches "f" at first approx.)  Do you think that's useful at all.

[01:06] <SamB> what sort of flakiness do you suspect the GC of exhibiting?

[01:06] <PerlJam> ?

[01:07] <TimToady> PerlJam: I don't know what it'd be useful for

[01:08] <TimToady> SamB: possibly reclaiming some memory that shouldn't have been reclaimed

[01:08] *** nipotaway is now known as nipotan

[01:08] <TimToady> otherwise how can running the same program on the same data result in a different answer?

[01:08] <rhr> TimToady: also, that pugs internal error I was getting yesterday is also an intermittent thing, but it happens far less often than the hash decl error

[01:09] <SamB> TimToady: how can it do that without causing a SIGSEGV or similar dramatic failure?

[01:09] <TimToady> well, for sure, methstd is stressing the pugs compiler for than usual

[01:09] <SamB> are there flakey finalizers involved?

[01:09] <PerlJam> TimToady:  I don't know either, but it feels weird to have operators that match only the longest match when we have other operators that can match either the longest or shortest 

[01:09] <SamB> weak references?

[01:10] <TimToady> SamB: because Haskell mostly doesn't change memory once it's allocated it for something

[01:10] <TimToady> one of those side effects of a pure language.  :)

[01:10] <SamB> TimToady: if the memory was wrongfully reclaimed, wouldn't that leave a dangling pointer and cause a dramatic crash later?

[01:11] <SamB> or alternatively, leave a dangling pointer and have absolutely no effect on the result

[01:11] <TimToady> maybe, unless it just tends to reclaim it for something similar, but with different enough contents to give a different answer to "is this variable declared?"

[01:12] <SamB> are there any kind of weak references involved at all?

[01:12] <TimToady> maybe it keeps different pools for chunks of different sizes, and that particular pool is mostly only that

[01:12] <TimToady> SamB: no kloo

[01:13] <SamB> TimToady: last I heard, GHC did allocation by incrementing a Cmm "register"

[01:15] <rhr> is there any way to tweak ghc's GC behavior other than changing the heapsize?

[01:16] <SamB> ghc +RTS --help

[01:18] <pugs_svnbot> r17388 | lwall++ | [STD] noun unreliable, so postfix must do its own ws test, noted by pmichaud++

[01:18] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17388

[01:18] <lambdabot> Title: Changeset 17388 - Pugs - Trac

[01:20] <TimToady> rhr: I'll be offline the next few hours, so if you want to whack on things, feel free.

[01:20] <TimToady> we do need to figure out how to integrate $/ back in, as you noticed

[01:21] <TimToady> I can tell you that trying to do "class MCont does Match" doesn't work out very well, so for now method probably need to rewrite all references to $/ or $<foo>

[01:21] <TimToady> s/method/metholate/

[01:22] *** torz left
[01:23] <rhr> OK, I'm not sure I understand things well enough yet to do that, but I'll look

[01:28] <TimToady> well, whack on anything you care to

[01:28] <TimToady> bbl &

[01:32] *** sunnavy joined
[01:33] *** Limbic_Region left
[01:55] *** kingdong joined
[01:55] <kingdong> wtf is going on with Perl6 ?

[01:55] <kingdong> it is going to be released one day ?

[01:57] *** kingdong left
[02:04] <pugs_svnbot> r17389 | rhr++ | [Metholated.pm] defeat bogus string reverse in STARg and PLUSg

[02:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17389

[02:04] <lambdabot> Title: Changeset 17389 - Pugs - Trac

[02:05] <rhr> $¢ is getting stringified somewhere, but I don't see it.  _STARg -> retm -> whats -> *** Odd number of elements found where hash expected: VStr ">tnoCM:jbo<"

[02:05] <SamB> that is the craziest name...

[02:06] <SamB> dollar cent...

[02:06] *** dwave left
[02:07] <rhr> :) (I think it's supposed to stand for continuation)

[02:27] *** SCalimlim left
[02:39] *** silug left
[02:45] *** rfordinal_ left
[02:45] *** rfordinal_ joined
[02:51] *** REPLeffect joined
[03:00] *** kanru left
[03:01] *** kanru joined
[03:10] <rhr> if I do .perl.say on a MCont object, sometimes I get MCont.new(...), but sometimes it says $_ := \MCont.new(...).  What's up with that?

[03:11] <allbery_b> depends on context

[03:11] <allbery_b> if you're looping over a list then you're getting an lvalue variable

[03:14] <rhr> not sure I understand... it's the same say statement producing both

[03:17] *** NBTF joined
[03:19] * allbery_b wonders if someone better versed in p6 is around

[03:20] <allbery_b> okay, same say statement.  but in perl6 there is a difference betweena variable being assigned a normal value and being assigned a reference into some other collection

[03:20] <pugs_svnbot> r17390 | rhr++ | [Metholated.pm] prevent MCont object from being stringified

[03:20] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17390

[03:20] <lambdabot> Title: Changeset 17390 - Pugs - Trac

[03:20] *** NBTF left
[03:20] <allbery_b> (in perl5 the same distinction exists but is less obvious)

[03:21] <allbery_b> so when you .perl.say a variable which is actually holding a reference into a list you get the wacky := ...

[03:22] <allbery_b> indicating that the variable really has an lvalue reference in it

[03:24] <rhr> ?eval my @a = 1,2,3; my $b := @a[1]; $b.perl.say;

[03:24] <pugsbot_r17185> OUTPUT[\2␤] Bool::True

[03:24] <rhr> did you mean something different?

[03:24] <allbery_b> don't think it works there, it's looping constructs that do the weird thing

[03:25] <allbery_b> really we need someone who better understands perl6 and who isn't currently suffering from fuzzy-brain

[03:25] <rhr> looping where?

[03:25] <allbery_b> hm, I suusally see it in looping constructs, there might be others

[03:26] * allbery_b decides to back off and wait for someone with a working brain and actual p6 internals knowledge to answer

[03:26] <rhr> np

[03:26] *** amnesiac joined
[03:26] *** hkb_aw left
[03:29] *** hkb_aw joined
[03:38] <pugs_svnbot> r17391 | rhr++ | [Metholated.pm] revert string reverse fix; it just hides a deeper problem

[03:38] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17391

[03:38] <lambdabot> Title: Changeset 17391 - Pugs - Trac

[03:55] *** kanru left
[03:56] *** daxim_ left
[03:56] *** kanru joined
[03:59] *** szabgab left
[04:05] *** REPLeffect left
[04:09] *** SCalimlim joined
[04:20] *** silug joined
[04:32] *** kanru left
[04:32] *** kanru joined
[04:33] <rhr> no more commits tonight, but I'll be around for a while

[04:33] <rhr> also, to see the weird stringification bug, undo my fix and try to parse 'foo(1)'

[04:50] *** lyokato left
[05:07] *** weinig_ left
[05:29] *** jisom joined
[05:31] *** SCalimlim left
[05:32] *** weinig_ joined
[05:49] *** lyokato joined
[05:53] *** stevan_ joined
[05:53] *** weinig_ left
[06:00] *** BinGOs left
[06:14] *** stevan_ left
[06:24] *** [particle] left
[06:30] *** BinGOs joined
[06:38] *** elmex joined
[06:47] *** nipra joined
[06:53] *** jisom left
[07:01] *** kane_ joined
[07:11] *** amnesiac left
[07:20] *** DarkWolf84 left
[07:24] *** iblechbot joined
[07:27] *** snearch joined
[07:33] <meppl> good morning

[07:40] <bloonix> morning

[07:42] *** pmurias joined
[07:42] <pmurias> morning

[07:47] *** dwave joined
[07:51] *** franck___ joined
[07:52] *** Aankhen`` joined
[07:54] <pugs_svnbot> r17392 | pmurias++ | kp6: fixed some test depending on the harness requiring numbering;

[07:54] <pugs_svnbot> r17392 | pmurias++ | changed parsing of subs

[07:54] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17392

[07:54] <lambdabot> Title: Changeset 17392 - Pugs - Trac

[08:01] *** daxim joined
[08:02] *** Aankh|Clone joined
[08:14] *** snearch left
[08:20] *** Aankhen`` left
[08:26] *** pugsbot_r17185 left
[08:27] *** Juerd left
[08:27] *** PerlJam left
[08:27] *** wolverian left
[08:28] *** pugs_svnbot left
[08:28] *** wolverian joined
[08:28] *** d4l3k_ joined
[08:29] *** dalek left
[08:30] *** toly_ left
[08:30] *** d4l3k_ is now known as dalek

[08:31] *** melissa left
[08:32] *** PerlJam joined
[08:32] *** Juerd joined
[08:32] *** toly joined
[08:39] *** melissa joined
[08:45] <pmurias> &

[08:45] *** rindolf joined
[08:46] *** polettix left
[09:03] *** rindolf left
[09:07] *** lyokato left
[09:15] *** Aankh|Clone left
[09:17] <pmurias> b

[09:17] *** jedai joined
[09:21] *** andara joined
[09:24] *** polettix joined
[09:26] *** iblechbot left
[09:27] *** Aankhen`` joined
[09:30] *** lyokato joined
[09:32] *** chris2 joined
[09:57] *** fridim left
[09:59] *** hkb_aw is now known as hkb_lab

[10:11] *** lisppaste3 left
[10:16] *** ruoso joined
[10:17] *** lisppaste3 joined
[10:17] *** yves_ left
[10:18] *** yves_ joined
[10:39] *** fglock joined
[10:42] <pmurias> fglock: hi

[10:46] <pmurias> the thing left for having subs is the get a sig which expects an invocant

[10:47] <pmurias> it would be solved by the new calling convention so i'm not sure if to fix it

[10:48] <pmurias> what's missing for changing the calling convention to passing Captures?

[11:01] *** smash__ left
[11:04] *** snearch joined
[11:12] <fglock> pmurias: i'm thinking about that,

[11:13] <fglock> but i'd like to have a version of multis soon

[11:13] <fglock> so i'm thinking which to do first

[11:17] *** agentzh left
[11:18] <fglock> re invocant, i think it's not a problem, if the invocant is optional

[11:19] *** PhileasFox joined
[11:21] <pmurias> optional in what sense?

[11:21] <pmurias> the problem it is passed as the first argument

[11:23] <fglock> pmurias: it is only passed in methods, subs don't get an invocant now

[11:23] <pmurias> can method choose not to receive and invocant

[11:23] <fglock> i don't think so

[11:23] <pmurias> methods

[11:23] <pmurias> s/and/an/

[11:24] <pmurias> subs get an invocant in their sigs because the use method_sig

[11:25] <fglock> yes, but it is safe to ignore the invocant for now; it is only in the sig (not in the param list)

[11:25] <pmurias> a solution would be to write sub_sig which dosn't default for an invocant

[11:25] <fglock> yes, that works

[11:25] <pmurias> fglock: subs and methods use the same code for parameter handling

[11:26] <pmurias> the problem would solve itself under the new calling convention because grabing a non-existant invocant dosn't eat up one of your positional parameters

[11:28] <fglock> but this is not a problem, because subs don't do '$self = shift'

[11:28] <fglock> self keeps undefined

[11:32] <pmurias> figured out how to do it

[11:37] <pmurias> re: multis and calling convention, changing the calling conventions before multis would save some work, but multis are likely more fun

[11:40] *** Blwood left
[11:46] *** ofer left
[11:47] *** ofer joined
[11:57] *** nipotan is now known as nipotaway

[12:05] *** lyokato left
[12:10] *** lyokato joined
[12:13] *** cmarcelo joined
[12:15] *** lyokato left
[12:22] <pmurias> seen svnbot

[12:22] <buubot> pmurias: Sorry, I haven't seen svnbot

[12:36] <fglock> #kp6 123.say

[12:36] <exp_evalbot> r17394: OUTPUT[123␤]

[12:39] <pmurias> #kp6 sub f($a) {say $a};f(123);

[12:40] <exp_evalbot> r17394: OUTPUT[123␤]

[12:42] *** iblechbot joined
[12:44] <fglock> lunch &

[12:45] *** b_jonas joined
[12:46] <b_jonas> ?eval (0..*)

[12:46] <b_jonas> oh, it's not online

[12:50] <pmurias> #eval (0..*)

[12:50] <exp_evalbot> kp6: OUTPUT[Syntax Error␤]

[12:50] <exp_evalbot> ..pugs: No output

[12:52] <xinming> #kp6 (0..10)

[12:52] <exp_evalbot> r17394: OUTPUT[Syntax Error␤]

[12:52] <xinming> pmurias: It seems, the array syntax is still under going.

[12:56] *** Limbic_Region joined
[12:58] <Limbic_Region> salutations all

[12:58] <pmurias> xinming: was testing if exp_evalbot's pugs works

[12:58] <pmurias> Limbic_Region: welcome

[13:01] <b_jonas> I'd like to know if ^* would work instead of (0..*)

[13:03] *** fglock left
[13:08] *** jhorwitz joined
[13:15] <pmurias> b_jonas: #eval runs the code on both pugs *and* kp6 so it's a ?eval replacement

[13:15] <pmurias> #eval (0..^*)

[13:15] <exp_evalbot> kp6: OUTPUT[Syntax Error␤]

[13:15] <exp_evalbot> ..pugs: No output

[13:15] <pmurias> #eval say (0..^*)

[13:16] <exp_evalbot> kp6: OUTPUT[Syntax Error␤␤]

[13:16] <exp_evalbot> ..pugs: No output

[13:16] <pmurias> #eval say 3

[13:16] <exp_evalbot> kp6: OUTPUT[3␤]

[13:16] <exp_evalbot> ..pugs: OUTPUT[3␤]

[13:16] *** [particle] joined
[13:27] *** [particle] left
[13:27] <b_jonas> no, U mean just ^*

[13:27] <b_jonas> #eval ^*

[13:28] <exp_evalbot> kp6: OUTPUT[Syntax Error␤]

[13:28] <exp_evalbot> ..pugs: No output

[13:28] <b_jonas> #eval ^10

[13:28] <exp_evalbot> kp6: OUTPUT[Syntax Error␤]

[13:28] <exp_evalbot> ..pugs: No output

[13:28] <b_jonas> hmm

[13:28] <b_jonas> #eval (0..)

[13:28] <exp_evalbot> kp6: OUTPUT[Syntax Error␤]

[13:28] <exp_evalbot> ..pugs: OUTPUT[*** ␤    Unexpected end of input␤    at /tmp/nHBKOAJAVb line 1, column 6␤]

[13:28] <b_jonas> #eval say (0..)

[13:28] <exp_evalbot> kp6: OUTPUT[Syntax Error␤␤]

[13:28] <exp_evalbot> ..pugs: OUTPUT[*** ␤    Unexpected end of input␤    at /tmp/zyhSLbM3Iw line 1, column 10␤]

[13:28] <b_jonas> #eval say (0..*)

[13:29] <exp_evalbot> kp6: OUTPUT[Syntax Error␤␤]

[13:29] <exp_evalbot> ..pugs: No output

[13:29] <b_jonas> #eval say ^*

[13:29] <b_jonas> #eval say (0..10)

[13:29] <exp_evalbot> kp6: OUTPUT[Syntax Error␤␤]

[13:29] <exp_evalbot> ..pugs: No output

[13:29] <exp_evalbot> kp6: OUTPUT[Syntax Error␤␤]

[13:29] <exp_evalbot> ..pugs: OUTPUT[012345678910␤]

[13:29] <b_jonas> #eval say 3*3

[13:29] <exp_evalbot> kp6: OUTPUT[9␤]

[13:29] <exp_evalbot> ..pugs: OUTPUT[9␤]

[13:37] *** [particle] joined
[13:37] *** pugs_svnbot joined
[13:38] *** jedai left
[13:38] <diakopter> <sigh> stupid bots...

[13:43] *** fglock joined
[13:43] *** fglock left
[13:43] *** fglock joined
[14:01] *** stevan_ joined
[14:06] *** Limbic_Region left
[14:10] *** amnesiac joined
[14:16] <fglock> stevan_: hi

[14:16] <stevan_> fglock: hello

[14:16] <stevan_> fglock: ready for vienna?

[14:17] <fglock> i hope so :)

[14:17] <fglock> i saw you in the hackathon list :)

[14:18] <stevan_> fglock: yes, I should be floating around

[14:18] <fglock> it would be nice if we could discuss the kp6 MOP

[14:18] <stevan_> we should definitely meet up and chat

[14:18] <[particle]> stevan_: try to connect with allison and jonathan re parrot mop, too

[14:19] <stevan_> [particle]: are they done with it yet?

[14:19] <stevan_> the documentation?

[14:19] *** TJCRI joined
[14:19] <fglock> stevan_: did you see the kp6 infrastucture modules written in real-perl6?

[14:20] <stevan_> fglock: not yet

[14:20] * stevan_ has just come out of a long $work project

[14:21] <fglock> http://svn.pugscode.org/pugs/v6/v6-KindaPerl6/lib/KindaPerl6/Runtime/Perl6/ - except for Prelude and P6Opaque, which are obsolete

[14:21] <lambdabot> http://tinyurl.com/2xxpgb

[14:22] <fglock> this is actual runtime code

[14:23] <stevan_> fglock: very cool

[14:24] <stevan_> fglock: we should also talk to mst as well, he and I have been discussing some p5 lexer hacks he is doing to get a p6-ish method syntax in p5 

[14:24] <stevan_> amoung other crazy ideas he has as well

[14:24] <fglock> ruoso has some cool ideas about p5 - he will be in the hackathon too

[14:25] <fglock> p5 as a plain VM

[14:25] <stevan_> cool

[14:26] <stevan_> mst and I were discussing trying to do a perl-- type thing too

[14:26] <stevan_> a small subset of highly optimized opcodes

[14:26] <stevan_> which can easily be built on

[14:26] <stevan_> somewhat inspired by the PIL^N work audreyt_ and I did way back when

[14:27] <fglock> you should definitely talk to ruoso :)

[14:29] *** Casan joined
[14:29] <[particle]> stevan_: 90+% of the tests are passing, so yes, the docs are "done"

[14:30] <stevan_> :)

[14:30] <stevan_> [particle]: is it all PIR?

[14:30] <fglock> the plan would be to use something like B::Generate, so that you can create code that you can run in the plain p5 debugger, and see p6 code

[14:31] <stevan_> fglock: mst is desperate to give p5 real macros.,.. probably on the B::* level though

[14:31] <[particle]> stevan_: all pir? not sure what you mean. the spec is here: http://www.parrotcode.org/docs/pdd/pdd15_objects.html

[14:31] <lambdabot> Title: Object and Class semantics for Parrot - parrotcode:

[14:31] <stevan_> so that sounds very similar

[14:31] <stevan_> [particle]: I mean is the code which is passing the tests in PIR

[14:32] <[particle]> oh, yes

[14:32] <[particle]> the tests are under t/pdd15oo/

[14:32] <stevan_> ok,... I will have to brush up on my PIR then

[14:32] <[particle]> ...if you feel like browsing....

[14:35] *** zigdon left
[14:35] <[particle]> fglock: i wish pmichaud would be there. nqp is progressing nicely... as is kp6, i see

[14:42] <fglock> [particle]: i wish we could converge into a single roadmap some day

[14:42] <[particle]> yes, indeed!

[14:42] <[particle]> pmichaud provided a syntax example of using external libraries from nqp yesterday: http://nopaste.snit.ch:8001/10975

[14:42] <[particle]> we're hoping to be able to write mod_parrot handlers in nqp soon

[14:42] <fglock> i have an evil plan, to compile kp6 to nqp; i've already done some experiments with mp6 to nqp

[14:42] <fglock> hmm - no, i was doing mp6 to parrot-perl6 

[14:44] <[particle]> i'd rather see ast transforms

[14:45] <[particle]> a two way transform between the kp6 ast and past would yield interesting results

[14:47] *** stevan_ left
[14:48] <fglock> that should not be difficult at the kp6 side - we even have an AST-as-HTML emitter

[14:48] <fglock> http://svn.pugscode.org/pugs/v6/v6-MiniPerl6/hello-parrot.sh - mp6 to parrot experiment

[14:50] <[particle]> where is the kp6 ast spec/impl?

[14:52] <fglock> one sec

[14:53] <fglock> $ echo echo 'class Main { say "hello, World" }' | perl kp6-perl5.pl --do EmitHTML

[14:53] <fglock> this prints the html version of the ast :)

[14:54] <fglock> the ast is defined here: http://svn.pugscode.org/pugs/v6/v6-KindaPerl6/lib/KindaPerl6/Traverse.pm

[14:54] <lambdabot> http://tinyurl.com/283h7h

[14:54] *** DarkWolf84 joined
[14:54] <fglock> the node list is still a bit incomplete

[14:55] <fglock> but it is based on the proposed Pugs AST

[14:55] <[particle]> okay, then. i'll check it out

[14:56] <fglock> s/echo echo/echo/

[14:56] <fglock> it had an echo

[14:57] <fglock> oops - EmitHTML is actually the code colorizer

[14:58] <fglock> this is the AST-to-HTML:

[14:58] <fglock> $  echo 'class Main { say "hello, World" }' | perl kp6-perl5.pl --do EmitAstHTML

[15:00] <fglock> kp6 has got some cute little tools

[15:04] <[particle]> but doesn't build on windows :(

[15:05] <[particle]> the makefile isn't nmake-friendly

[15:05] <[particle]> ooh, wait. i have 'make'.

[15:05] <fglock> it should work without make

[15:05] <[particle]> oh, okay

[15:05] <[particle]> it's building now, anyway

[15:05] <fglock> the image is plain perl5

[15:20] <[particle]> i get a perltidy error, since it's not installed. anyway, trying echo now

[15:20] <pugs_svnbot> r17395 | fglock++ | [kp6] fixed .WHAT

[15:20] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17395

[15:20] <lambdabot> Title: Changeset 17395 - Pugs - Trac

[15:21] <fglock> hmm - you may end up with some empty files because of the missing perltidy

[15:21] <fglock> i hope not

[15:22] <fglock> if you do, just do a revert and use kp6 without make'ing

[15:22] <[particle]> the ast html is very small

[15:22] <[particle]> 540characters

[15:24] <fglock> oops - it is missing a css

[15:24] <[particle]> i'll just install it

[15:24] <[particle]> yeah, that too

[15:24] <fglock> install?

[15:24] <[particle]> $it := perltidy;

[15:24] <fglock> ah

[15:25] <fglock> you can use: echo 'class Main { say "hello, World" }' | perl kp6-perl5.pl --ast | perltidy

[15:25] <fglock> it is reasonably readable

[15:33] *** barney joined
[15:39] *** rindolf joined
[15:41] <pugs_svnbot> r17396 | fglock++ | [kp6] ::Class cleanup

[15:41] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17396

[15:41] <lambdabot> Title: Changeset 17396 - Pugs - Trac

[15:43] *** ubajas3 is now known as ubajas

[15:48] *** ruoso left
[15:48] *** ruoso joined
[15:52] *** ruoso_ joined
[15:52] *** ruoso left
[15:52] *** ruoso_ is now known as ruoso

[16:04] *** snearch left
[16:04] <pugs_svnbot> r17397 | fglock++ | [kp6] more cleanup

[16:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17397

[16:04] <lambdabot> Title: Changeset 17397 - Pugs - Trac

[16:05] *** gongyiliao joined
[16:05] *** gongyiliao left
[16:07] *** ObeLisK_12183 joined
[16:07] <ObeLisK_12183> Hey @ aLL :))

[16:08] <ObeLisK_12183> can somebody help me?=D  this site: www.pennergame.de/ref.php?uid=12183

[16:09] *** snearch joined
[16:16] *** ObeLisK_12183 left
[16:18] *** sunnavy left
[16:18] *** hkb_lab is now known as hkb_zz

[16:28] *** DarkWolf84 left
[16:28] *** DarkWolf84 joined
[16:36] *** justatheory joined
[16:39] *** andara left
[16:43] *** franck____ joined
[16:43] *** franck___ left
[16:44] *** Blwood joined
[16:45] *** franck____ left
[16:47] *** iblechbot left
[16:49] <pugs_svnbot> r17398 | fglock++ | [kp6] is it possible to implement Multi using Perl 6?

[16:49] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17398

[16:49] <lambdabot> Title: Changeset 17398 - Pugs - Trac

[16:50] *** autark_ left
[16:54] *** autark joined
[16:54] *** jedai joined
[17:03] *** marmic left
[17:03] <pugs_svnbot> r17399 | fglock++ | [kp6] added Signature

[17:03] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17399

[17:03] <lambdabot> Title: Changeset 17399 - Pugs - Trac

[17:08] *** _ joined
[17:09] <_> hey @ all ^^

[17:09] <_> can somebody help me?=D  on this site here: www.pennergame.de/ref.php?uid=12183

[17:09] <_> thanks

[17:09] *** _ left
[17:09] <qmole> nice nick though

[17:12] *** buetow joined
[17:16] *** ofer left
[17:20] *** weinig_ joined
[17:21] <pugs_svnbot> r17400 | fglock++ | [kp6] started Code.signature

[17:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17400

[17:21] <lambdabot> Title: Changeset 17400 - Pugs - Trac

[17:28] *** Psyche^ joined
[17:28] *** mncharity left
[17:31] *** marmic joined
[17:39] <pugs_svnbot> r17401 | fglock++ | [kp6] refactored Code.signature

[17:39] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17401

[17:39] <lambdabot> Title: Changeset 17401 - Pugs - Trac

[17:41] *** Patterner left
[17:41] *** Psyche^ is now known as Patterner

[17:42] *** dwave left
[17:45] *** dwave joined
[17:53] *** snearch left
[18:01] *** weinig_ left
[18:02] *** penk left
[18:05] *** weinig_ joined
[18:21] *** hkb_zz left
[18:21] *** hkb_zz joined
[18:29] *** jisom joined
[18:35] *** fglock left
[18:36] *** pmurias left
[18:39] *** ruoso left
[18:52] *** Blwood_ joined
[18:52] *** Blwood_ left
[18:57] *** Blwood_ joined
[19:03] *** polettix left
[19:05] *** Blwood left
[19:22] *** ajs joined
[19:24] *** rindolf left
[19:25] *** Lorn joined
[19:27] *** laniz_ joined
[19:27] <laniz_> hi

[19:28] <laniz_> is the release of perl 5.10 planned before or after the release of perl 6?

[19:28] <b_jonas> laniz_: both well be released "when they're ready" but it's belived that 5.10 will be released before 6

[19:29] <laniz_> i see!

[19:29] <b_jonas> some say that 5.12 will be released after 6 or even not at all because of it, but we can't know for sure

[19:29] <b_jonas> try asking on #perl where they might have a different opinion :)

[19:30] <laniz_> i was hoping Larry would correct the people in case, if i ask here :P

[19:31] <b_jonas> if you wait more, he might

[19:31] <b_jonas> but he is by definition optimistic about P6

[19:31] <SamB> how often do perl releases usualy happen anyway?

[19:31] * laniz_ tries to find a seat near TimToady :P

[19:31] <b_jonas> SamB: see perldoc perlhist

[19:32] <b_jonas> but as often as neccessary

[19:32] <b_jonas> it doesn't have to change with hardware like OS kernels so there's no need for a frequent release

[19:33] <SamB> hmm, minor releases somewhere near once a year it looks like...

[19:33] <laniz_> Perl 5.8.8 works pretty decent for me, was just curious about the future plans

[19:34] <[particle]> it all depends on the pumpking. for a time, it was quarterly releases for perl 5

[19:35] <SamB> where by minor releases, I mean releases incrementing the third number

[19:35] <[particle]> parrot has a monthly release cycle, which i *love*

[19:35] <[particle]> s/minor/bugfix/

[19:35] <SamB> ah.

[19:35] <SamB> well, what are the real minor releases for then?

[19:35] <[particle]> major features

[19:36] <[particle]> major releases are for rearchitecting

[19:36] <[particle]> i should say 'new features' rather than using the loaded term 'major' there

[19:43] *** pmurias joined
[19:43] *** DaGo joined
[19:45] *** snearch joined
[19:47] *** rindolf joined
[19:59] *** PhileasFox left
[19:59] *** barney left
[20:04] *** jisom left
[20:21] *** renormalist joined
[20:33] *** fglock joined
[20:37] <pugs_svnbot> r17402 | pmurias++ | kp6: fixed for, testing invocant in capture literals

[20:37] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17402

[20:37] <lambdabot> Title: Changeset 17402 - Pugs - Trac

[20:43] *** Aankhen`` left
[20:44] *** TJCRI left
[20:45] *** renormalist left
[20:50] *** rindolf left
[20:50] *** rindolf joined
[20:51] <pmurias> fglock: mp6 dosn't support after

[20:51] <pmurias> ?

[20:52] <fglock> maybe not - what you need to do?

[20:52] <pmurias> i want allow ending statements with }\n 

[20:53] <pmurias> if 1==2 {print "hello"} \n say " world";

[20:53] <fglock> it is possible that this was implemented in mp6, but wasn't ported to kp6

[20:53] <pmurias> with \n being "

[20:53] <pmurias> "

[20:54] <pmurias> lib/MiniPerl6/Emitter/Token.pm:# no <after .. > - so it doesn't need to match backwards

[20:56] <fglock> pmurias: ending a line with } works in mp6 - it could be ported to kp6

[20:57] *** polettix joined
[20:57] <pasteling> "fglock" at 87.103.44.98 pasted "line ending in mp6" (13 lines, 330B) at http://sial.org/pbot/27047

[20:58] <pmurias> tested it myself too, and it worked

[20:58] <pmurias> too

[20:58] <fglock> mp6 was still being implemented when kp6 started, so the grammar is a bit different

[21:06] <pmurias> mp6 dosn't require semicolons

[21:06] <pmurias> say "a"

[21:06] <pmurias> say "b"

[21:06] <pmurias> works

[21:09] <fglock> ah - I knew there was some hack :)

[21:10] <TimToady> might be easier to do what STD does there

[21:11] <TimToady> (and nqp)

[21:13] <fglock> hmm - what do they do?

[21:14] <fglock> looking

[21:18] <pmurias> vim tags for perl6 grammars would help much

[21:21] *** mj41 left
[21:28] *** rindolf left
[21:28] <pugs_svnbot> r17403 | fglock++ | [kp6] a possible implementation for the signature emitter

[21:28] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17403

[21:28] <pmurias> nqp uses a special variable

[21:29] <pmurias> marks if the last thing was a block

[21:29] *** dmpk2k left
[21:30] <pmurias> sleep&

[21:31] *** pmurias left
[21:31] *** snearch left
[21:42] *** polettix left
[21:42] *** polettix joined
[21:47] *** jhorwitz left
[21:50] *** Schwern joined
[21:52] *** Limbic_Region joined
[22:04] <pugs_svnbot> r17404 | fglock++ | [kp6] added t/kp6/29-signature.t

[22:04] <pugs_svnbot> r17404 | fglock++ | &sub.signature works

[22:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17404

[22:07] *** chris2 left
[22:10] *** fglock left
[22:16] *** YuGi_11118 joined
[22:16] <YuGi_11118> heey people ^^

[22:19] *** YuGi_11118 left
[22:21] *** fglock joined
[22:24] *** rhizo left
[22:24] <pugs_svnbot> r17405 | fglock++ | [kp6] fixed Signature.perl

[22:24] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17405

[22:31] *** polettix is now known as poletti

[22:32] *** Psyche^ joined
[22:40] *** fglock_ joined
[22:44] *** Patterner left
[22:44] *** Psyche^ is now known as Patterner

[22:56] <laniz_> TimToady: do you have release plans for perl 5.10 already?

[22:56] <Limbic_Region> laniz_ - TimToady is not the pumpking for 5.10

[22:56] <Limbic_Region> rgs might have more info though

[22:57] <[particle]> on #perl

[22:57] <ubajas> I WANT BIG == FOR EVERY $. IS POSSIBLE IN PERL SIX PLZ`?

[22:57] <laniz_> Limbic_Region: thanks!

[22:57] <Limbic_Region> particle - which network?

[22:58] <Tene> ubajas: I don't understand what you mean.

[22:58] *** fglock left
[22:59] *** Lorn left
[23:03] *** CapNemo joined
[23:03] <CapNemo> hello guys :)

[23:03] <Tene> Hi!

[23:03] *** lambdabot left
[23:03] <CapNemo> what would be the best doc to read to create a compiler on parrot to support another language ?

[23:03] *** lambdabot joined
[23:04] <Tene> CapNemo: you probably want #parrot on irc.perl.org

[23:04] <Tene> What language would you like to support?

[23:04] <CapNemo> it's a language I use to use at university for simulation

[23:04] <CapNemo> it's called ADT'81

[23:13] *** fglock_ left
[23:23] *** cmarcelo left
[23:24] *** rhizo joined
[23:25] *** CapNemo left
[23:41] *** b_jonas left
[23:43] *** thoughtpolice joined
[23:44] *** cerridwen is now known as {cerri|nmap}

[23:54] *** laniz_ left
