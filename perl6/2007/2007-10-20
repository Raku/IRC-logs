[00:01] *** polettix left
[00:04] *** thoughtpolice left
[00:05] *** theorb joined
[00:06] *** REPLeffect left
[00:07] *** REPLeffect joined
[00:08] *** luke-jr left
[00:17] *** theorbtwo left
[00:28] *** weinig left
[00:28] *** justatheory left
[00:38] *** weinig joined
[00:39] *** dvorak joined
[00:40] *** devogon left
[00:44] *** amnesiac left
[00:46] *** weinig left
[01:19] *** diotalevi joined
[01:21] <pugs_svnbot> r18492 | avar++ | the functionality of the script/run_* scripts has been merged into script/kp6 which now supports executing in-place. It's a bit messy at the moment, argv isn't supported properly and some other things probably don't work, but better to commit and fix later

[01:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18492

[01:21] <lambdabot> Title: Changeset 18492 - Pugs - Trac

[01:23] <avar> sh-3.1$ perl script/kp6 -Bperl5 -e 'say "foo"'

[01:23] <avar> foo

[01:23] <avar> sh-3.1$ perl script/kp6 -Bcl-ecl -e 'say "foo"'

[01:23] <avar> foo

[01:23] <avar> Not a condition type: KP6-LISP::NOT-IMPLEMENTED

[01:23] <avar> Broken at MAKE-CONDITION.

[01:23] <avar> KP6-LISP-USER>>

[01:24] <avar> I'll add support for making stand-alone binaries with the lisp backend later

[01:24] <avar> -C'cl -ecl -o my.exe' or something

[01:34] <pugs_svnbot> r18493 | avar++ | * [kp6-lisp] ecl support in (quit)

[01:34] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18493

[01:34] <lambdabot> Title: Changeset 18493 - Pugs - Trac

[01:37] <pugs_svnbot> r18494 | avar++ | (quit 0) not (quit)

[01:37] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18494

[01:37] <lambdabot> Title: Changeset 18494 - Pugs - Trac

[01:52] *** weinig joined
[02:12] *** weinig left
[02:12] *** weinig joined
[02:12] *** REPLeffect left
[02:19] *** arcady_ joined
[02:26] *** arcady__ joined
[02:32] *** arcady left
[02:40] *** fax left
[02:42] *** arcady joined
[02:43] *** arcady_ left
[02:52] *** buu left
[02:52] *** buu joined
[02:56] *** arcady__ left
[03:00] *** buu left
[03:00] *** buu joined
[03:04] *** elmex_ joined
[03:20] *** elmex left
[03:32] *** Limbic_Region left
[03:47] *** daxim joined
[03:53] *** daxim_ left
[03:58] *** scent joined
[04:03] *** amnesiac joined
[04:08] *** justatheory joined
[04:35] *** REPLeffect joined
[04:50] *** snearch joined
[05:06] *** scent left
[05:06] *** REPLeffect left
[05:25] *** jisom joined
[05:29] *** devogon joined
[05:34] *** mncharity left
[05:43] *** jisom_ joined
[06:00] *** jisom left
[06:03] *** devogon left
[06:03] *** devogon joined
[06:09] *** d4l3k_ joined
[06:10] *** dalek left
[06:11] *** d4l3k_ is now known as dalek

[06:18] *** funktio joined
[06:39] *** amnesiac left
[06:51] *** diotalevi left
[06:52] *** gorax joined
[06:56] <meppl> good morning

[06:58] <agentzh> morning, meppl :)

[06:59] <meppl> good morning agentzh

[06:59] <agentzh> :)

[07:15] *** justatheory left
[07:23] *** dduncan left
[07:28] *** Southen joined
[07:35] *** Aankhen`` joined
[07:47] *** Southen_ left
[07:50] *** DarkWolf84 left
[07:50] *** funktio left
[07:58] *** marmic left
[08:45] *** devogon left
[08:45] *** kcwu left
[08:47] *** drrho joined
[08:59] *** masak joined
[08:59] <masak> g'localtime(), people

[09:02] *** iblechbot joined
[09:13] <spinclad> good 05:13Z-0400, @all

[09:14] <spinclad> mornin, masak

[09:14] <masak> spinclad: mornin'

[09:19] <masak> so this is the weekend when I'm going to look into a kp6->parrot backend

[09:20] <masak> I'll just perform a few other urgent tasks, then I'll get right on it

[09:21] *** polettix joined
[09:31] *** barney joined
[09:43] *** fglock joined
[09:48] *** kcwu joined
[09:55] *** iblechbot left
[10:01] *** marmic joined
[10:08] <fglock> hi from Open aLANtejo|07 http://alantejo.uevora.pt/2007/

[10:08] <lambdabot> Title: Delta aLANtejo|07

[10:24] *** jisom_ left
[10:41] *** devogon joined
[10:46] <pugs_svnbot> r18495 | fglock++ | [kp6] added Signature options

[10:46] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18495

[10:46] <lambdabot> Title: Changeset 18495 - Pugs - Trac

[10:56] *** Aankhen`` left
[10:56] *** Aankhen`` joined
[11:01] <spinclad> kp6 thoughts:

[11:03] <spinclad> is kp6 MOP ready to fold constants here, as moose does?: (dispatch (dispatch (dispatch (dispatch $o :how) :lookup $methname) :choose-given $capture) :apply $capture)

[11:03] <spinclad> kp6-cl indent: print to stream, which counts indents within itself.  kill $indent.

[11:04] <spinclad> kp6-parrot: could this go via a minimal rewrite to nqp?

[11:04] <spinclad> ( masak: talk with pmichaud? )

[11:04] <masak> spinclad: 's a good idea

[11:05] <masak> I'm still busy with pesky $work stuff, but after that, I will

[11:06] <fglock> spinclad: re nqp, it's possible - MiniPerl6 had a p6parrot backend (maybe still works)

[11:07] <fglock> not sure what you mean with fold constants?

[11:07] <spinclad> i'm hoping nqp is nearly ready -- it was waiting on the new pdd15 object model, which has just been merged to parrot trunk

[11:08] <fglock> fold constants == compile time optimization?

[11:10] <pasteling> "fglock" at 213.13.106.82 pasted "avar: strange behaviour of script/kp6" (27 lines, 963B) at http://sial.org/pbot/28135

[11:11] <spinclad> constant folding:  $o is of known type / :how; its :how is closed (immutable) so its :lookup $methname is known; this is a known multi, and can :choose a signature against $capture, giving a particular sub; leaving only the :apply for runtime.

[11:12] <fglock> spinclad: yes, it could - but we don't have closed classes yet

[11:12] <spinclad> this depends of course on known type, closed class, closed multi.

[11:13] <spinclad> i could try adding 'no Moose' to the language maybe :)

[11:14] *** devogon left
[11:15] <spinclad> first though i think i'll fix up simple-minded indenting in kp6-cl

[11:16] <spinclad> (besides kibitzing/joining in on kp6-parrot, if masak doesn't mind)

[11:17] <masak> spinclad: 'course not

[11:17] <fglock> spinclad: this can be added as a Visitor module, there is probably one you could use as a template

[11:17] <masak> just glad to have company / someone to discuss with

[11:18] <spinclad> excellent.  good fun to be had here, then, on several fronts. 

[11:18] <masak> :)

[11:19] <spinclad> but now, to bed.  good dawn to @all!

[11:19] <masak> spinclad: g'dawn

[11:19] <spinclad> &

[11:19] <fglock> can someone try to out script/kp6? I'm having problems with the new command line

[11:21] <spinclad> .oO{ try anything particular? }

[11:22] *** masak left
[11:25] <pugs_svnbot> r18496 | fglock++ | [kp6] more Signature options

[11:25] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18496

[11:25] <fglock> spinclad: http://sial.org/pbot/28135

[11:25] <lambdabot> Title: Changeset 18496 - Pugs - Trac

[11:25] <lambdabot> Title: Paste #28135 from "fglock" at 213.13.106.82

[11:26] <fglock> it fails to compile code from src/KindaPerl6/Runtime/Perl6/*

[11:26] <fglock> I'm just using an older version for now

[11:29] *** kanru left
[11:29] <fglock> brb &

[11:32] <spinclad> $ echo say 123 | script/kp6 -Bperl5

[11:32] <spinclad> 123

[11:36] <spinclad> yes, i get the same as you...

[11:37] *** garfield_cat joined
[11:41] *** fglock_ joined
[11:42] <spinclad> Perl::Tidy::perltidy is unhappy with { source => $out, ... }

[11:42] <spinclad> $out should be a file name but is the program text instead?

[11:44] *** fglock left
[11:44] *** fglock_ is now known as fglock

[11:46] <spinclad> from the Perl::Tidy manpage, that should be source => \$out, maybe: a ref to a string.  trying...

[11:46] <pugs_svnbot> r18497 | fglock++ | [kp6] prepare to add parameter options to the grammar

[11:46] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18497

[11:46] <lambdabot> Title: Changeset 18497 - Pugs - Trac

[11:48] <fglock> lunch &

[11:58] <spinclad> fglock: yes, changing the call to perltidy to { source => \$out, ... } fixes it.

[11:58] *** masak joined
[11:58] *** iblechbot joined
[11:59] <spinclad> trying to svn ci: it asks for my password... this is new since last year... i'll have to figure it out, after sleep.

[12:01] <spinclad> fglock: i leave a one-char change in your care.          ^

[12:01] * spinclad &

[12:01] <spinclad> (really!)

[12:03] *** fglock left
[12:03] <spinclad> (script/kp6, line 423)

[12:04] *** garfield_cat left
[12:07] <spinclad> avar: see above re script/kp6

[12:09] *** amnesiac joined
[12:10] *** amnesiac left
[12:11] *** amnesiac joined
[12:14] * integral wonders why that eval just eats the error message

[12:14] *** amnesiac_ joined
[12:14] <integral> oh, I see.  it's meant to only run when Perl::Tidy is present.

[12:16] *** chris2 joined
[12:16] *** amnesiac__ joined
[12:22] <pugs_svnbot> r18498 | bsmith++ | [kp6] Fix script/kp6's call to perltidy.

[12:22] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18498

[12:22] <lambdabot> Title: Changeset 18498 - Pugs - Trac

[12:24] *** IllvilJa left
[12:27] *** amnesiac left
[12:31] *** amnesiac_ left
[12:33] *** amnesiac__ left
[12:36] *** dolmen joined
[13:03] *** snearch left
[13:06] *** gorax left
[13:25] *** cmarcelo joined
[13:42] *** fglock_ joined
[13:42] *** fglock_ is now known as fglock

[13:48] *** lichtkind joined
[13:55] *** rgs left
[14:01] *** fglock left
[14:07] <pugs_svnbot> r18499 | fglock++ | [kp6] move Signature parsing to it's own module at KindaPerl6::Grammar::Signature

[14:07] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18499

[14:08] <lambdabot> Title: Changeset 18499 - Pugs - Trac

[14:24] *** Limbic_Region joined
[14:26] *** rgs joined
[14:26] *** mr_ank joined
[14:29] <pugs_svnbot> r18500 | fglock++ | [kp6] more Signature syntax; ( does :x<1> in a sig implies it is a named-only parameter? )

[14:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18500

[14:29] <lambdabot> Title: Changeset 18500 - Pugs - Trac

[14:30] *** masak left
[14:31] *** fglock joined
[14:47] <pugs_svnbot> r18501 | fglock++ | [kp6] updated AST with signature options

[14:47] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18501

[14:47] <lambdabot> Title: Changeset 18501 - Pugs - Trac

[14:59] <fglock> trying to figure out what is the data structure of a sig with named positionals

[15:05] <Aankhen``> Treat them like normal positionals with a special flag indicating they're named-only?

[15:05] <Aankhen``> I don't really understand the point of named positionals though.

[15:07] <fglock> hmm

[15:09] *** jdv79 joined
[15:10] <fglock> you mean  s/named-only/named-too/ ?

[15:11] <fglock> it's probably just an array of parameters and their descriptions

[15:12] *** pjcj left
[15:12] <fglock> complex sigs need to be interpreted at run-time anyway

[15:12] *** pjcj joined
[15:15] <Aankhen``> I'm not sure I understand now. :-S

[15:16] <Aankhen``> What are named positionals?

[15:17] <fglock>  sub x ($a) {...};  x(10); x( :a<10> );

[15:18] <fglock> the second form

[15:18] <fglock>  sub x ( :$a ) {...}  # named only

[15:19] <Aankhen``> So you're talking about the arguments passed rather than the items in the signature?

[15:20] <fglock> I was representing the sig as a capture-ish thing (a scalar, an array, and a hash)

[15:20] <fglock> but it's more complex than that

[15:20] <Aankhen``> Right.

[15:21] <fglock> it's probably an array of "statements" instead

[15:21] <Aankhen``> In KP6-LISP, I had separate slots for positional, optional and named parameters, as well as slurpy hash, block, and array.

[15:21] <fglock> to be resolved at runtime

[15:21] <Aankhen``> I think I had decided to punt on named positionals.

[15:22] <Aankhen``> Just didn't seem to me to be that important.

[15:22] <fglock> resolved == when it is bound to a capture

[15:22] <Aankhen``> I mean, what is the use case over a regular named parameter?

[15:22] <Aankhen``> Wait, I'm off on a tangent again.

[15:22] <Aankhen``> x(:a<10>) # :a<10> is a named positional?

[15:23] <fglock> this is needed according to the spec

[15:23] <fglock> yes, if the $a argument was not "named-only"

[15:23] <Aankhen``> OK, yeah, that was handled in KP6-LISP too.  I think.

[15:23] * Aankhen`` checks.

[15:24] <fglock> I'm just adding it to the AST; check the output of

[15:24] <fglock>  $ perl script/kp6 -Cast <<< 'sub x ( *$a => 42 ) { 123 };'

[15:25] <Aankhen``> I'm not familiar with that notation.  What does the * indicate?

[15:25] <Aankhen``> Isn't it used for slurpy parameters or unpacking parameters?

[15:25] <fglock> slurpy (expands lists into @_)

[15:26] <Aankhen``> Okay.

[15:26] <Aankhen``> Yeah, unpacking parameters is completely unimplemented in KP6-LISP.

[15:27] <fglock> brb & coffee break

[15:32] *** funktio joined
[15:41] <fglock> b

[15:41] *** kanru joined
[15:50] *** wilx left
[15:50] *** wilx joined
[15:52] <fglock> i've got an impl, but it breaks the runtime - should probably fix the runtime before committing

[15:57] *** rindolf joined
[16:08] <pugs_svnbot> r18502 | fglock++ | [kp6] large change to signature code to accomodate named-positionals and such; most tests still pass

[16:08] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18502

[16:08] <lambdabot> Title: Changeset 18502 - Pugs - Trac

[16:10] *** jdv79_ joined
[16:10] *** jdv79 left
[16:16] *** LimbicRegion joined
[16:16] *** Limbic_Region left
[16:16] *** LimbicRegion is now known as Limbic_Region

[16:26] <lumi> Hi, what's new in p6land?

[16:26] <pugs_svnbot> r18503 | fglock++ | [kp6] reverted Lit::NamedArgument for use in Capture; now use Lit::SigArgument for Signature; "fixed" the Lisp impl too

[16:26] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18503

[16:26] <lambdabot> Title: Changeset 18503 - Pugs - Trac

[16:29] <pugs_svnbot> r18504 | fglock++ | [kp6] fixed SigArgument object

[16:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18504

[16:29] <lambdabot> Title: Changeset 18504 - Pugs - Trac

[16:34] *** IllvilJa joined
[16:34] <pugs_svnbot> r18505 | fglock++ | [kp6] killed Sig.named (might be replaced by a method later)

[16:34] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18505

[16:34] <lambdabot> Title: Changeset 18505 - Pugs - Trac

[16:38] <fglock> lumi: we've got some new stuff in kp6, see latest pugs blogs - I'm now rewriting signatures to support more Perl 6 features

[16:43] <lumi> Oh nice, kp6 on lisp! Does that mean I can write my emacs macros in Perl 6 soon? :)

[16:46] <fglock> I guess so :)

[16:48] *** jisom joined
[17:04] <fglock> CAPTURIZE() is broken (in Perl5::MOP) because of the sig changes

[17:04] <pugs_svnbot> r18506 | fglock++ | [kp6] 'is rw', 'is copy' in Signature

[17:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18506

[17:04] <lambdabot> Title: Changeset 18506 - Pugs - Trac

[17:14] *** drrho left
[17:19] <funktio> just wondering, what does   do { [] };    do?

[17:20] *** rindolf left
[17:21] <lumi> Wouldn't it create a new array, but in void context, so lose it immediately?

[17:21] <QtPlatypus> lumi: Its common list rather then elisp.

[17:21] <lumi> I might be wrong, I've been some months out of the loop

[17:22] <integral> http://www.lisp.se/emacs-cl/ # But it doesn't support CLOS

[17:22] <lambdabot> Title: Emacs Common Lisp

[17:23] <lumi> integral: So you write a mode in P6, compile it via kp6 to CL, and then run it in emacs-cl, win

[17:23] *** Psyche^ joined
[17:23] <integral> I had the decided impression that we were using CLOS...

[17:23] <lumi> Oh, um.

[17:24] * integral prefers scheme personally

[17:24] <lumi> aol

[17:24] <lumi> It's somehow neater

[17:24] *** [particle1 joined
[17:25] <integral> TBH I'd probably be happier with strict haskell and CLOS, but that doesn't exist :-(

[17:26] <lumi> Strict Haskell? That kinda spoils it...

[17:27] <lumi> Although I guess it's nice to be able to reason about space

[17:28] <pugs_svnbot> r18507 | fglock++ | [kp6-perl5] created ROUTINE env variable, so that a routine can get to it's signature at runtime

[17:28] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18507

[17:28] <lambdabot> Title: Changeset 18507 - Pugs - Trac

[17:29] <fglock> CLOS is a shortcut, we can use the Perl 6 native MOP when it gets written

[17:34] *** pmurias joined
[17:34] <pmurias> b

[17:38] <fglock> pmurias: i broke parameter passing, fixing

[17:38] <pugs_svnbot> r18508 | fglock++ | [kp6-perl5] fixed the param binding code

[17:38] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18508

[17:38] <lambdabot> Title: Changeset 18508 - Pugs - Trac

[17:39] <fglock> pmurias: I added richer signatures, trying to get the runtime up to it

[17:39] <fglock> I may have done something that broke CAPTURIZE()

[17:40] <pmurias> fglock: hi

[17:40] <fglock> hi :)

[17:40] *** Patterner left
[17:40] *** Psyche^ is now known as Patterner

[17:40] *** [particle] left
[17:41] <fglock> pmurias: see  $ perl script/kp6 -Cast <<< 'sub x ( *$a => 42 is rw ) { 123 };'

[17:41] <fglock> actually, $ perl script/kp6 -Cast -e 'sub x ( *$a => 42 is rw ) { 123 };'

[17:43] <pmurias> fglock: nice

[17:46] <fglock> brb

[17:49] *** lisppaste3 left
[17:56] *** lisppaste3 joined
[17:56] *** devogon joined
[17:56] *** [particle] joined
[18:03] *** fglock left
[18:05] *** funktio left
[18:07] *** jisom left
[18:12] *** [particle1 left
[18:16] *** chris2 left
[18:19] <pmurias> should script/kp6 -Cperl5 t/kp6/01-tap.t work?

[18:19] <pmurias> it dosn't

[18:20] <pmurias> script/kp6 -Cperl5 < t/kp6/01-tap.t works

[18:24] *** Khisanth left
[18:31] *** Torment joined
[18:33] *** wilx left
[18:37] *** wilx joined
[18:48] *** Jedai left
[18:51] *** barney left
[18:54] *** jdv79_ left
[18:57] *** Limbic_Region left
[19:12] *** cathyal joined
[19:16] *** Khisanth joined
[19:17] *** lichtkind left
[19:17] *** cathyal left
[19:28] *** ST47 joined
[19:34] <pmurias> @tell fglock EmitPerl5 emits Signatures incorectly as it uses Main::perl (via .perl) on Lit::SigArgument(in .positionals)

[19:34] <lambdabot> Consider it noted.

[19:42] *** rindolf joined
[19:43] <pmurias> avar++ #the new CLI interface is handy

[19:53] *** weinig left
[20:01] <avar> pmurias: yeah but I apperently screwed up some stuff:)

[20:07] *** pjcj_ joined
[20:11] <pmurias> avar: i still like it anyway ;)

[20:14] <pmurias> metaobjects++ #fun

[20:17] *** kanru left
[20:18] <integral> pmurias++ # fixed that bug

[20:20] <pmurias> integral: which bug? i didn't fix anything

[20:20] <pugs_svnbot> r18509 | bsmith++ | [kp6] Fix a bug in calling Perl::Tidy when source files are padsed on the command line instead of via STDIN.

[20:20] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18509

[20:20] <lambdabot> Title: Changeset 18509 - Pugs - Trac

[20:20] <integral> ^^^ that one

[20:21] *** kanru joined
[20:21] <pugs_svnbot> r18510 | pmurias++ | [kp6]

[20:21] <pugs_svnbot> r18510 | pmurias++ | - kp6.sh (pointless now)

[20:21] <pugs_svnbot> r18510 | pmurias++ | added .attributes (should return descriptors instead of method names)

[20:21] <pugs_svnbot> r18510 | pmurias++ | + an example using the metaobject to generate an wrapper class

[20:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18510

[20:21] <lambdabot> Title: Changeset 18510 - Pugs - Trac

[20:23] *** _Helios is now known as Helios-

[20:25] <pmurias> how should method and attribtors be called? (class names)

[20:53] *** baest left
[20:53] *** baest joined
[20:58] *** rfordinal_ joined
[21:03] *** pmurias left
[21:05] *** pmurias joined
[21:21] <pugs_svnbot> r18511 | andara++ | [runpugs]

[21:21] <pugs_svnbot> r18511 | andara++ | Clean-up of internals.

[21:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18511

[21:21] <lambdabot> Title: Changeset 18511 - Pugs - Trac

[21:23] *** rfordinal left
[21:29] <PerlJam> Is it safe to say that a regex always has an implicit .* at the front of it?  For instance, just as "foobar" ~~ /bar/ matches, so would regex foo { <bar> } regex bar { "bar" }  "foobar" ~~ /<foo>/   ?

[21:29] <pugs_svnbot> r18512 | bsmith++ | [kp6] Updated manifest.

[21:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18512

[21:29] <lambdabot> Title: Changeset 18512 - Pugs - Trac

[21:32] *** Aankhen`` left
[21:33] *** rindolf left
[21:35] <PerlJam> Hmm. that's a poor example of what I'm trying to get at.

[21:36] <PerlJam> regex foo { "f" } regex bar { "bar" }   "foobar" ~~ /<foo>/;  # Matches or not?

[21:37] <PerlJam> blah

[21:37] <PerlJam> regex foo { "f" <bar> } regex bar {'bar' } I meant

[21:44] <pugs_svnbot> r18513 | Darren_Duncan++ | ext/Muldis-DB/ : removed the files Operators.pm and PhysType.pm but they will be replaced later

[21:44] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18513

[21:44] <lambdabot> Title: Changeset 18513 - Pugs - Trac

[21:52] *** pmurias left
[21:54] <spinclad> PerlJam: definitely not, as far as i can tell

[21:54] <spinclad> "foobar" !~~ / 'f' <bar> /

[21:55] *** [particle1 joined
[21:56] <spinclad> i don't have a pointer to spec for it atm tho

[21:56] <PerlJam> spinclad: I didn't used to think so either, but this sentence from the section that talks about :ratchet implies that it is so "When a ratcheted regex is called as a subrule, the front is anchored to the current position ..."

[21:56] <PerlJam> at least to me.

[21:56] <PerlJam> (it implies that a non-ratcheted regex is not anchored to the current position)

[21:57] <spinclad> hmm

[21:57] <Khisanth> it implies it might or might not be anchored :P

[21:58] <PerlJam> Well, I'll ask TimToady next time I see him or p6l or something

[21:58] <PerlJam> (But right now I've got some kids to take care of)

[21:58] * PerlJam &

[21:59] *** [particle] left
[21:59] <spinclad> i'd say practice depends on front anchoring, and spec likely must follow...

[22:00] <spinclad> but idunno really

[22:01] <spinclad> afk, back later &

[22:06] *** faxathisia joined
[22:14] <integral> wouldn't that be the equivalent of .*? anyway not .*?

[22:15] <integral> oops.  ".*?" and ".*"

[22:20] <pugs_svnbot> r18514 | Darren_Duncan++ | ext/Muldis-DB/ : this is the Perl 6 equivalent of what will end up on CPAN as Muldis::DB version 0.5.0 for Perl 5

[22:20] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18514

[22:20] <lambdabot> Title: Changeset 18514 - Pugs - Trac

[22:35] *** weinig joined
[22:35] *** weinig left
[22:49] *** iblechbot left
[22:52] *** weinig joined
[23:01] *** pjcj left
[23:01] *** pjcj_ left
[23:07] *** pjcj joined
[23:12] *** weinig left
[23:12] *** weinig joined
[23:15] *** devogon left
[23:27] *** polettix left
[23:53] *** weinig left
[23:56] *** [particle1 is now known as [particle]

[23:58] *** slango joined
[23:58] <slango> is perl 6 ridiculously different?

