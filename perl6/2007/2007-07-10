[00:00] *** broquaint joined
[00:01] *** DarkWolf84 joined
[00:07] *** drbean joined
[00:14] *** broquaint joined
[00:23] *** asksh joined
[00:25] *** weinig joined
[00:26] *** amnesiac joined
[00:30] *** broquaint joined
[00:30] *** Limbic_Region joined
[00:39] *** justatheory joined
[00:42] *** whooosh joined
[00:51] *** nekokak joined
[01:06] *** unobe is now known as unobe_away

[01:18] *** lichtkind joined
[01:30] *** weinig joined
[01:31] *** nipotaway is now known as nipotan

[01:31] *** broquaint joined
[01:31] *** sunnavy joined
[01:31] *** daxim joined
[01:41] *** thoughtp1lice joined
[01:55] *** araujo joined
[02:24] *** Squern is now known as Schwern

[02:47] *** agentzh joined
[03:00] *** diakopter joined
[03:00] <diakopter> @messages

[03:00] <lambdabot> You don't have any new messages.

[03:00] <diakopter> yes!

[03:02] * Aankhen`` glances sideways at diakopter.

[03:03] <agentzh> heh

[03:03] <lambdabot> agentzh: You have 1 new message. '/msg lambdabot @messages' to read it.

[03:03] <agentzh> @messages

[03:03] <lambdabot> fglock said 15h 15m 55s ago: how about call the accessor/key "match", and include a "filename" or "str" pointer

[03:03] <agentzh> i've got one :)

[03:03] *** justatheory joined
[03:05] <Aankhen``> @moosages

[03:05] <lambdabot> You don't have any new messages.

[03:05] <Aankhen``> Mwahaahahaha.

[03:05] <agentzh> @tell fglock will do. but i prefer names leading with '_' :)

[03:05] <lambdabot> Consider it noted.

[03:05] <Aankhen``> I prefer names with a leading *!

[03:05] <diakopter> @tell Aankhen`` message this

[03:05] <lambdabot> Consider it noted.

[03:05] <Aankhen``> $#*@)#*$@#*%$%&(^%&(#($@#

[03:05] <lambdabot> Aankhen``: You have 1 new message. '/msg lambdabot @messages' to read it.

[03:06] *** ChanServ sets mode: +o dalek

[03:06] <Aankhen``> There goes the neighbourhood.

[03:09] *** diakopter was kicked by dalek (ENOSPAMMINGLAMBDABOT))
[03:09] *** dalek sets mode: +b *!*@pdpc/supporter/active/diakopter

[03:09] <Aankhen``> What theâ€¦?

[03:14] *** ChanServ sets mode: -b *!*@pdpc/supporter/active/diakopter

[03:14] *** diakopter joined
[03:14] <diakopter> op #perl6

[03:14] <lambdabot> diakopter: You have 1 new message. '/msg lambdabot @messages' to read it.

[03:14] *** ChanServ sets mode: +o diakopter

[03:14] <diakopter> @mooooooooooooosages

[03:14] <lambdabot> Unknown command, try @list

[03:14] <diakopter> @mooooosages

[03:14] <lambdabot> Unknown command, try @list

[03:14] <Aankhen``> dalek = nutty.

[03:15] <diakopter> @moooosages

[03:15] <lambdabot> Unknown command, try @list

[03:15] <diakopter> @mooosages

[03:15] <lambdabot> Unknown command, try @list

[03:15] <Aankhen``> You trying to get yourself banned again? :-P

[03:15] *** diakopter sets mode: -o+b dalek *!*@feather.perl6.nl

[03:15] *** dalek was kicked by diakopter (on popular demand, you are now leaving the channel))
[03:15] <Aankhen``> Uh.  That's a bit of a wide ban, isn't it?

[03:15] <Aankhen``> Ban (*!*@feather.perl6.nl) affects: dalek devbot6 evalbot_r16941 Juerd pugs_svnbot specbot6 wolverian

[03:15] <diakopter> WHOA

[03:15] *** diakopter sets mode: -b *!*@feather.perl6.nl

[03:15] <diakopter> yikes

[03:16] <Aankhen``> You diakopter, you.

[03:16] <diakopter> sry :/

[03:16] <Aankhen``> Don't make me come over there.

[03:16] * diakopter is bored waiting for mythbuntu to finish installing correctly for once

[03:16] * Aankhen`` is reading "WhyAttributeGrammarsMatter".

[03:17] <Aankhen``> (Which involves trying to figure out what the heck an Attribute Grammar is.)

[03:18] <diakopter> har.  I'm sure someone has written "Attribute Grammar[ian]s Considered Harmful"

[03:18] *** diakopter sets mode: -o diakopter

[03:18] <Aankhen``> Heh, no doubt.

[03:18] <Aankhen``> I'd make a crack about "Computers Considered Harmful", but it wouldn't be very funny. :-\

[03:19] *** dalek joined
[03:28] <mncharity> @tell fglock sorry I missed you.  I should be around early morning and late evening tomorrow (EST).

[03:28] <lambdabot> Consider it noted.

[03:35] *** ProperNoun joined
[03:36] *** bonesss joined
[03:41] <diakopter> eeenteresting

[03:42] *** dalek joined
[03:42] *** hkb_zz is now known as hkb_lab

[03:47] *** unobe_away is now known as unobe

[03:54] *** weinig joined
[03:55] *** BinGOs joined
[04:11] *** bonesss is now known as duend

[04:11] *** duend is now known as bonesss

[04:14] *** ofer0 joined
[04:16] *** monomorph joined
[04:17] *** justatheory joined
[04:24] *** kane_ joined
[04:26] *** Aankhen`` joined
[04:28] *** drbean joined
[04:44] *** devogon joined
[05:02] *** weinig joined
[05:15] *** wilx joined
[05:33] *** justatheory joined
[06:02] *** kanru joined
[06:03] *** Alias_ joined
[06:12] <moritz> moin

[06:12] *** weinig joined
[06:13] <agentzh> morning!

[06:13] <unobe> morning :-)

[06:14] <moritz> can I tell `cpan' somehow to install into a different directory?

[06:15] <agentzh> no idea

[06:15] <Aankhen``> moritz: You can probably pass PREFIX=/foo or INSTALL_BASE=/foo in the Makefile.PL args.

[06:16] <moritz> I just downoaded the tarball manually now ;)

[06:16] <Aankhen``> Heh.

[06:16] <Alias_> moritz: o conf init, and set PREFIX=/path when it asks for Makefilel.PL params and Build.PL params

[06:18] *** elmex joined
[06:18] <pugs_svnbot> r16957 | moritz++ | trunk:

[06:18] <pugs_svnbot> : [irclog]

[06:18] <pugs_svnbot> :  * added POD to IrcLog.pm and IrcLog/WWW.pm

[06:18] <pugs_svnbot> :  * index.pl now displays all possible dates as a calendar

[06:18] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16957

[06:18] <lambdabot> Title: Changeset 16957 - Pugs - Trac

[06:18] <moritz> Alias_: thanks

[06:19] <agentzh> moritz++

[06:20] <moritz> Aankhen``: the index page might welcome some HTML/CSS tweaking - it's just an evil hack atm ;)

[06:20] <moritz> and I guess we need a big 'Today'-Link

[06:20] <pasteling> "evalbot_r16956" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26165

[06:20] * agentzh will need Aankhen``'s help with CSS/HTML soon as well ;)

[06:21] <Aankhen``> Sure thing, but give me a few moments.  I need to sort out this thing with Vista switching keyboard layouts on me.

[06:22] <agentzh> heh

[06:22] * agentzh won't install vista anyway.

[06:22] <Aankhen``> Hmm.

[06:22] <Aankhen``> It seems to have something to do with the language bar.

[06:23] <Aankhen``> Oh, I should probably install Komodo so I can tweak stuff.

[06:26] <devbot6> dev: Ticket #14 (enhancement closed): More information in pugs -V output. <http://dev.pugscode.org/ticket/14#comment:4>

[06:26] <pugs_svnbot> r16958 | moritz++ | trunk:

[06:26] <pugs_svnbot> : [irclog] added 'Today'-Link to index page

[06:26] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16958

[06:26] <lambdabot> Title: Changeset 16958 - Pugs - Trac

[06:33] *** iblechbot joined
[06:34] <moritz> index page is slow now :( - propably due to too much Date::Simple magic

[06:34] <moritz> I wonder if I should fix it, or cache it ;)

[06:35] *** dvorak joined
[06:55] *** unobe is now known as unobe_away

[07:02] <pasteling> "evalbot_r16958" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26168

[07:02] <pugs_svnbot> r16959 | moritz++ | trunk:

[07:02] <pugs_svnbot> : [irclog]

[07:02] <pugs_svnbot> :  * much more efficient index calendar creation (less date magic)

[07:02] <pugs_svnbot> :  * whitespace/tab fixes in cgi/index.pl

[07:02] <pugs_svnbot> :  * fixed vim modelin in cgi/index.pl

[07:02] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16959

[07:02] <lambdabot> Title: Changeset 16959 - Pugs - Trac

[07:06] *** dduncan_ joined
[07:10] *** rho joined
[07:24] *** jisom joined
[07:41] *** audreyt joined
[07:45] *** iblechbot_ joined
[07:53] *** CardinalNumber joined
[08:02] *** Schwern joined
[08:11] *** masak joined
[08:11] *** CardinalNumber joined
[08:18] *** franck__ joined
[08:28] *** dduncan_ left
[08:38] *** ruoso joined
[08:43] <meppl> good morning

[08:43] <moritz> hi meppl ;)

[08:43] <masak> mornin', meppl

[08:43] <meppl> good morning moritz

[08:44] <lumi> Morning, M people

[08:44] <masak> ;)

[08:44] <meppl> good morning masak and lunik

[08:45] *** masak left
[08:45] *** masak joined
[08:45] <moritz> any comments regarding the new irclog index page?

[08:45] <moritz> it certainly looks neat, but it wastes space as well

[08:50] <masak> moritz: url?

[08:51] <moritz> masak: http://moritz.faui2k3.org/irclog/

[08:51] <lambdabot> Title: IRC logs

[08:51] <moritz> and as a comparison the old one: http://209.85.135.104/search?q=cache:5uibCq-x2xQJ:moritz.faui2k3.org/irclog/+site:moritz.faui2k3.org+irclog+index&hl=de&ct=clnk&cd=1&client=iceweasel-a

[08:51] <lambdabot> http://tinyurl.com/yp8qyt

[08:52] <masak> definitely an improvement

[08:52] <masak> I think it wastes space in a good way

[08:53] <masak> if you're too worried about it, I'd suggest adding some CSS to remove the table cell borders

[08:53] <moritz> I'll let Aankhen`` do that, I don't want to take that pleasure from him ;)

[08:54] <masak> ok, me neither ;)

[08:54] <moritz> unfortunately HTML::Calendar::Simple is not so CSS friendly

[08:55] <masak> nothing is set in stone

[08:55] <moritz> aye ;)

[08:56] <Alias_> Although building in CSS support from the start helps a LOT

[08:56] <Alias_> <-- PPI::HTML

[08:57] <moritz> Alias_: do you know by chance if PPI or Text::VimColor generate "better" markup for perl?

[08:58] <Alias_> PPI::HTML is by far the most accurate markup in existance

[08:58] <wolverian> vim isn't particularly accurate.

[08:58] <Alias_> You might need to play and tweak the CSS a bit, and maybe subclass PPI::HTML for anything esoteric

[08:58] <Alias_> But it's absolutely better than anything else

[08:59] <Alias_> Just a bit of a CPU hog for big files (because of PPI)

[08:59] <moritz> Alias_: ok I'll try it out

[08:59] <Alias_> I was using an Apache plugin for a while, but then google started trawling my repository and it killed the server somewhat

[08:59] <moritz> vim has the advantag of knowing >300  languages/config files

[08:59] <Alias_> ya

[09:00] <moritz> Alias_: use robots.txt ;)

[09:00] <Alias_> I do now

[09:00] <Alias_> After google deleted a production database 

[09:00] <Alias_> Because I accidentally left a database management web app exposed, and it went down the tool.pl/DatabaseSetup?cmd=purge;db=whatever link

[09:01] <moritz> :(

[09:01] <Alias_> ya, not fun

[09:01] <Alias_> Big lesson for the future though

[09:02] <Alias_> I'm going to rewrite my connection pool at some point so that it only hands out read-only connections to GET requests

[09:02] <moritz> "never leeave a management toll without password protection"

[09:02] <Alias_> Oh it had password support

[09:03] <Alias_> The config file got reset due to version control,  and if the config doesn't list a password, it doesn't use it

[09:03] <Alias_> Something multi-factor like that from memory

[09:03] <moritz> ouch

[09:13] <trippeh> Heh, any data modifying action should be a POST though, not GET...

[09:13] <trippeh> This is one of the reasons

[09:13] <Alias_> yep

[09:13] <wolverian> or PUT, but ...

[09:13] <wolverian> (or DELETE, for that matter)

[09:13] <Alias_> Although this makes data-stored sessions interesting

[09:13] * wolverian wishes browsers weren't so crippled

[09:13] <Alias_> Because strictly speaking you couldn't nudge last_request dates on the session in a GET

[09:14] <Alias_> (which could be bad, but I'm not sure)

[09:14] <Alias_> Maybe I could rejigger it so that it had permissions to update the session table, but that's all

[09:15] <Alias_> Instead of being a pure readonly connection

[09:16] <Alias_> I suspect my connection-pooling needs are getting complex enough to write a standalone module :)

[09:16] <Alias_> 3 classes of connections (shared read-only, shared auto-commit, and transaction pool)

[09:16] *** Blwood[dodo] is now known as Blwood

[09:16] <moritz> Alias_: are you writing a http server in perl?

[09:17] <Alias_> Just regular webapps

[09:17] <Alias_> But I have a fairly interesting ORM layer

[09:17] <Alias_> Better than anyone else, in my opinion

[09:17] *** andara joined
[09:17] <Alias_> But unfortunately based on code-generation, so not CPAN'able

[09:17] <moritz> self made?

[09:17] <Alias_> yeah

[09:18] <Alias_> I talk to mst quite a bit, and he's gradually stealing some of the better ideas from it

[09:18] <moritz> ORM-Compiler, YaY

[09:18] <Alias_> for DBIx::Class

[09:18] <moritz> (idea stealing)++

[09:18] <masak> Alias_: what's particularly good about it?

[09:19] <Alias_> You design the structure in entity-relational terms

[09:19] <Alias_> And the codegen produces both a sane schema and sane code to talk to it

[09:19] <masak> nice

[09:19] <Alias_> And it can handle 100% of all structures

[09:19] <Alias_> Handles importing and exporting circular data references

[09:19] <masak> so far it sounds like Hibernate to me

[09:20] <Alias_> It can do queries with infite arbitrary foreign key traversal

[09:20] <moritz> "combine the crazyness of perl with the power of databases"

[09:20] <Alias_> $query = Class->select;

[09:20] <moritz> or was it the other way round? ;)

[09:21] <masak> Alias_: cool

[09:21] <Alias_> $query->add_condition( 'self.parents.friends.children.school.teachers.pets.name', '=', 'Spot' );

[09:21] *** SchwarzeSchwuler joined
[09:21] *** SchwarzeSchwuler left
[09:21] <Alias_> It generates it's own schema 

[09:22] <Alias_> So the code can create it's own database structures

[09:22] <Alias_> And it can handle superfluous tables and columns

[09:22] <wolverian> "its" :)

[09:22] <moritz> Alias_: how do you distinguish references from string literals?

[09:22] <Alias_> It knows what entity names are reserved words in various databases and renames around the problem

[09:22] <Alias_> moritz: hmm?

[09:23] <Alias_> It has a model of the entity-relationships

[09:23] <moritz> Alias_: I guess 'self.parents. ...' is treated as a database column...

[09:23] <Alias_> not necesarily

[09:23] <Alias_> It's not 1 to 1

[09:23] <moritz> Alias_: and 'Spot' is a string constant, right?

[09:23] <Alias_> .friends may involve traversing a many to many rable

[09:23] <Alias_> table

[09:23] <moritz> ok, but it's not treated as a string constant

[09:23] <Alias_> or going backwards across a relationship, because it's the OTHER side of the relationship that has the column

[09:23] <moritz> whereas 'Spot' is treated as a constant, right?

[09:24] <Alias_> the entity model knows the difference between data and relationships

[09:24] <Alias_> The "=" condition class knows the data types it's allowed to build a condition for

[09:24] <Alias_> So if you tried that on something that wasn't a string or a number, it would barf

[09:24] <moritz> so if you have some external input, $dog_name, how can you be sure that it doesn't contain a string that describes a column and messes up your whole system?

[09:25] <Alias_> huh?

[09:25] <Alias_> Because of sql placeholders...

[09:25] <Alias_> The SQL generation handles placeholders

[09:25] <moritz> so you add sql placeholders in add_condition and the like?

[09:25] <Alias_> As it builds the SQL it keeps track of them and aggregates them in the correct order as it merges the parts of the query

[09:25] <Alias_> "=" is implemented by code

[09:26] <moritz> I think we are talking about different levels...

[09:26] <Alias_> There's also things like "approx"

[09:26] <moritz> if I do a $object->add_condition($foo => $bar)...

[09:26] <Alias_> you don't

[09:26] <moritz> why not?

[09:27] <Alias_> conditions are (subject, condition, value, value, ... )

[09:27] <Alias_> like in rdf

[09:27] <Alias_> Although obviously, nothing like rdf :)

[09:27] <Alias_> A condition expression is three parts

[09:27] <moritz> ok, add_condition($foo, '=', $bar)

[09:27] <moritz> how does it know how to interpret $foo and $bar?

[09:28] <Alias_> $foo is going to refer to some model element

[09:28] <Alias_> So it's split by . and mapped to the entity model

[09:28] <moritz> ok

[09:28] <moritz> and $bar?

[09:28] <Alias_> Depends on the condition

[09:28] <moritz> let's assume '='

[09:29] <Alias_> sql_equal_to( $resolved_property, $bar )

[09:29] <Alias_> sql_equal_to knows it needs $bar to be of data type $resolved_property->data_type

[09:29] <moritz> and how does that handle $bar?

[09:29] <Alias_> And it returns [ 'sql fragement including a ?', $bar ]

[09:30] <Alias_> fragment

[09:30] <moritz> ok, so $bar is _alway_ treated as constant?

[09:30] <Alias_> ah, I get you

[09:30] <moritz> s/alway/always/

[09:30] <Alias_> you want column A = column B

[09:31] <moritz> I want to know how it dispatches between string B and column B

[09:31] <Alias_> You'd need a new condition 

[09:31] <Alias_> add_condition( $foo, 'column-wise equal', $bar )

[09:31] <Alias_> I don't currently have an implementation of that

[09:31] <moritz> ok

[09:31] <moritz> then I'm happy for the moment ;)

[09:31] <Alias_> But it's probably possibly

[09:32] <Alias_> resolve the properties of $bar like for $foo, make sure that they are in the same table

[09:32] <moritz> ... or that you do a join

[09:32] <Alias_> I don't do joins

[09:32] <moritz> ok

[09:32] <Alias_> It's all done with subselects

[09:32] <Alias_> I mostly use postgres, which can do query rewriting across up to 7 subselects and turn it into The Right Thing

[09:33] <moritz> is that efficient?

[09:33] <moritz> ok

[09:33] <Alias_> There's three choices

[09:33] * moritz ends up saying "ok" all the time

[09:33] <Alias_> 1. Implement it in wetware (my head)

[09:33] <moritz> ?eval "ok" xx 5

[09:33] *** evalbot_r16941 is now known as evalbot_r16959

[09:33] <evalbot_r16959> ("ok", "ok", "ok", "ok", "ok")

[09:33] <Alias_> 2. Implement query rewriting in Perl (also from my head)

[09:33] <Alias_> 3. Implement it inside the database (not in my head)

[09:34] <wolverian> postgres++ # not crap

[09:34] <Alias_> Also, do you have any idea how complicates a join would be for self.parents.friends.children.school.teachers.pets.name

[09:34] <Alias_> which goes across at least one many to many

[09:34] <moritz> no, I don't, and I don't want to have an idea ;)

[09:35] <moritz> let other people handle the complexity ;)

[09:35] <Alias_> The nice thing about subselects is that while it might not always be stunningly fast, you can reach 100% coverage for all relationship types

[09:35] <Alias_> recursively

[09:35] <Alias_> I do a couple of small tricks to limit the problem

[09:36] <Alias_> if you had a self.parents.friends.children.school.teachers.pets.name and self.parents.friends.school.pupils.name conditions, it would merge the two at the "school" level

[09:36] <Alias_> So it merges conditions in a tree-like shape (in entity relationship terms)

[09:36] <Alias_> Which seems to work

[09:37] <Alias_> If you run explain on postgres for equivalent join and subselect queries, it actually implements it in terms about halfway between the two 

[09:37] <Alias_> in processes

[09:37] <Alias_> table scans, index commands etc

[09:38] <Alias_> Anyways, my code does some funky stuff when you say $object->store

[09:38] <Alias_> Because the values might need to be stored in multiple SQL commands

[09:38] <Alias_> So it pulls transactions internally sometimes from the connection manager

[09:38] <Alias_> And hence, I need a fairly robust connection manager

[09:39] <moritz> that doesn't sound very portable across databases

[09:39] <Alias_> codegen :)

[09:39] <Alias_> I have implementations for MySQL, Postgres and Oracle

[09:39] <Alias_> SQLite I can't build, because it doesn't have sequences

[09:39] <Alias_> But for the most parts, it does work properly between the three

[09:39] <moritz> I witdraw my last comment ;)

[09:40] <Alias_> The speed penalty is probably worse on some database

[09:40] <Alias_> But really, I only added MySQL support because I felt I had to, not for the speed

[09:40] <moritz> ;)

[09:40] <Alias_> And because I expected client-requests for it

[09:41] <Alias_> It's already slower, since I have to use innodb, and emulate sequences

[09:41] <wolverian> sqlite doesn't have sequences?! weird, I thought it did

[09:41] <Alias_> nope :(

[09:42] <Alias_> He added auto_increment instead

[09:42] <wolverian> oh

[09:42] <Alias_> You can't get a table id before insertion

[09:42] <Alias_> Which is absolutely critical 

[09:42] <wolverian> not first class, then

[09:42] <Alias_> ya

[09:42] <Alias_> And you can't emulate it

[09:42] <wolverian> too bad. 

[09:42] <wolverian> thanks for telling me that :)

[09:42] <Alias_> Because sequence actions need to occur outside of transactions

[09:42] <Alias_> And SQLite has a global lock

[09:43] <Alias_> So if you are inside a transaction, and you try to pull a sequence value, it deadlocks

[09:44] <Alias_> If I REALLY need it, I'll write an emulation implementation that does the sequence table in a seperate database

[09:44] <Alias_> And according to audrey, there's a new thingy that lets you connect to two different sqlite files as one virtual database

[09:44] <Alias_> If the locks are file-granular, that might work

[09:44] <Alias_> I've never had the time for a proper proof of concept though

[09:45] <wolverian> sequences for sqlite might be an interesting soc project

[09:47] *** buetow joined
[09:54] *** chris2_ joined
[09:55] *** chris2_ is now known as chris2

[09:57] <pugs_svnbot> r16960 | fglock++ | trunk:

[09:57] <pugs_svnbot> : [kp6] perl5x - fixed code-blocks

[09:57] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16960

[09:57] <lambdabot> Title: Changeset 16960 - Pugs - Trac

[09:57] *** spinclad joined
[10:25] *** agentzh left
[10:42] *** ferreira joined
[10:57] *** ruoso joined
[11:04] *** nferraz joined
[11:21] *** phileas_fox joined
[11:28] *** nipotan is now known as nipotaway

[11:29] *** sunnavy_ joined
[11:36] *** perlMa joined
[11:49] <chris2> i need some quick help from a chinese. any here?

[11:51] *** sunnavy_ is now known as sunnavy

[12:00] *** fglock joined
[12:08] *** lichtkind joined
[12:13] <bloonix> hallo lichtking

[12:13] <bloonix> s/g/d/

[12:13] <lichtkind> hi bloonix

[12:13] <lichtkind> moin

[12:13] <lichtkind> ja noch bin ich prinz :)

[12:13] <bloonix> ein lustiger schreibfehler :)

[12:14] <bloonix> wie geht es dir so?

[12:14] <bloonix> sorry! how are you?

[12:15] <lichtkind> nene schon gut deustch is mir lieber tschechisch grad am liebsten

[12:16] <lichtkind> ganz gut  danke bin nur etwas verwirrt

[12:16] <bloonix> ich dachte an die anderen hier :)

[12:16] <bloonix> was ist denn los?

[12:19] <lichtkind> bloonix: your right i had 5 tabs in my irc client an thought im in perlde, what are you doing here? infected by my article ?

[12:20] <lichtkind> bloonix:  btw its ready now if you like to see it

[12:20] * moritz welcomes the german perl6 guys ;)

[12:20] <lichtkind> hihi moin

[12:21] <bloonix> I had a bit trouble on perlde so I though to avoid it. yes I read your perl 6 introduction on p-c.de and wanted to start a bit and where could I get a better start as here? :)

[12:22] <bloonix> hi moritz

[12:22] <moritz> bloonix: http://perl-6.de/tutorials/ if you want a german introduction

[12:22] <lambdabot> Title: Perl 6 - Tutorials

[12:23] <bloonix> moritz: already done ;)

[12:23] <moritz> bloonix: then what more introduction do you want?

[12:23] <bloonix> on p-c.de are a lot of shortcuts on one site. I like that

[12:24] <moritz> something like a cheat sheat?

[12:24] <bloonix> I need a lot of code examples

[12:24] <bloonix> to know how can I write nice letters in Perl 6 ;)

[12:25] <moritz> bloonix: then look into the pugs repository...

[12:25] <moritz> in examples/, or in src/perl6/Prelude*

[12:25] <moritz> or for regexes in src/perl6-Perl-6.0.0-STD.pm

[12:27] *** agentzh joined
[12:27] <lichtkind> bloonix: do you mean the perl 6 tutorial on p-c.de wiki, there is also link to  http://perl-6.de/tutorials/ i

[12:27] <lambdabot> Title: Perl 6 - Tutorials

[12:28] <bloonix> moritz: I should put a link on my home page to your introduction

[12:28] <moritz> bloonix: do that please ;)

[12:28] <moritz> bloonix: and if you have suggestions what else to add, please let me know as well

[12:31] <bloonix> lichtkind: I read the article if you like

[12:31] <lichtkind> moritz: =<> goes also in perl6 like =$*IN ?

[12:32] <lichtkind> bloonix: cool but its now cold and gone, (third deadline :))

[12:33] <moritz> lichtkind: afaict it's like the p5 <@ARGV>

[12:33] *** Limbic_Region joined
[12:34] <moritz> lichtkind: but I'm not entirely sure about that, maybe it's =$*IN

[12:34] <lichtkind> moritz: so maybe you could this clear up in http://perl-6.de/tutorials/anfaenger/variablen

[12:34] <lambdabot> Title: Perl 6 - Variablen

[12:35] <moritz> lichtkind: yes, I should

[12:35] *** masak joined
[12:36] *** Limbic_Region joined
[12:38] <lichtkind> moritz:  it should be more entertaining :) exactly that whyt you disliked on my artikles :)

[12:38] <lichtkind> i mean the trivial style

[12:40] *** Limbic_Region joined
[12:41] <lichtkind> moritz: i dont grok fully your structure but its growing so it will be good :)

[12:41] *** elmex joined
[12:41] <moritz> lichtkind: I'm not so good in writing entertaining stuff ;)

[12:41] <moritz> lichtkind: what don't you grok? the different tutorials?

[12:42] <moritz> or the directory structure?

[12:42] <moritz> or how the menus are built?

[12:42] <lichtkind> moritz: the idea of the structure of the whole site

[12:42] <lichtkind> also the design could support the content more

[12:43] <moritz> I'm not aware of a very elaborate structure - just a normal tree structure like most other static sites

[12:44] <moritz> lichtkind: could you tell me more about the design, and how I could improve it?

[12:44] *** diakopter8 joined
[12:45] <lichtkind> moritz: when i had more time, now im fiddeling on my own project and preparing my next foo article because im next month away in spain

[12:45] <lichtkind> moritz: this time a non perl 6 topic

[12:45] <moritz> lichtkind: allright, no hurry ;)

[12:46] <lichtkind> moritz: but as i promised at the bottom on the article in next foo will also a small perl6 in depth article maybe about operator for scalars

[12:46] *** Squern joined
[12:47] <lichtkind> moritz: last night i hacked Alien::Wx into my project and a bunch of problem fell over me :)

[12:47] <moritz> lichtkind: I think there are more exicting topics in p6, if that's what you want

[12:47] *** phileas_fox left
[12:48] <lichtkind> moritz: i want a step by step in depth tutorial and thats something simple to start with, but think there are exciting new things in it like chained comparsion type forcing and so on

[12:48] <moritz> lichtkind: aye

[12:49] *** xinming_ is now known as xinming

[12:50] <lichtkind> good :) see you have to take a shower :)

[12:50] <lichtkind> and my new linux  machine also seeks my attention

[12:51] <lichtkind> but a good perl 6 tutorial is pretty high up on my todo

[12:52] *** Flibble22226 joined
[12:54] *** sunnavy joined
[13:01] *** unobe_away is now known as unobe

[13:04] <pugs_svnbot> r16961 | fglock++ | trunk:

[13:04] <pugs_svnbot> : [kp6] fixed code-block compilation inside regex

[13:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16961

[13:04] <lambdabot> Title: Changeset 16961 - Pugs - Trac

[13:06] <pasteling> "evalbot_r16960" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26175

[13:11] <masak> fglock: what's the progress status of kp6?

[13:12] <fglock> masak: it's following the plan, roughly - http://svn.pugscode.org/pugs/v6/docs/kp6-roadmap.pod

[13:12] <lambdabot> fglock: You have 2 new messages. '/msg lambdabot @messages' to read them.

[13:12] <fglock> currently improving the regex engine

[13:12] <masak> fglock: ok

[13:13] <fglock> next phase will implement more library functions

[13:13] <moritz> fglock: the kp6 prelude, so to say?

[13:15] <fglock> yes, and it is missing some low level classes too

[13:17] <fglock> these are the things that it needs in order to run the Perl6-STD grammar

[13:19] * agentzh wants to hack on kp6.

[13:20] <fglock> agentzh: there are some simple things to do

[13:20] <avar> agentzh: I started fiddling with writing grammars in PCR, noticed some differences from p6

[13:21] <agentzh> oh?

[13:21] <avar> like when I wrote C<< token digit { <[0..9]> } token digits { $<num> := [ <digit>+ ] } >> in p6 I could do:

[13:21] <agentzh> there are always simple things :)

[13:21] <avar> "123" ~~ /<digits>/; say $/<num>;

[13:22] <avar> but to get that in pcr I have to do:

[13:22] <avar> C<< token digit { <[0..9]> } token digits { $<num> := [ <digit>+ ] { return { num => $$<num>> } } } >>

[13:22] <agentzh> avar: really?

[13:22] <lichtkind> fglock++

[13:22] <avar> I.e. it doesn't automatically make named and numbered captures part of the result object..

[13:23] <agentzh> avar: i think it can be easily fixed by adding tokens to Pugs::Grammar::Base

[13:23] <avar> agentzh: I just wrote that up by hand but yes, roughly

[13:23] <avar> What? Adding a token digit {} ?

[13:23] <diakopter> Alias_: you still around?

[13:23] <agentzh> avar: the match object is okay in PCR, no?

[13:23] <fglock> avar: that should work

[13:23] <agentzh> avar: yup

[13:24] <avar> I'm talking about the general idea of result objects not a digit token in particular

[13:24] <agentzh> avar: named captures: $match->{'name'}

[13:24] <agentzh> avar: numbered captures: $match->[num]

[13:25] <avar> I had a testcase where the grammar I was porting from pugs didn't work at all unless I did what I said above, manually made a hash of things that were already being captured as $<> := []

[13:25] <avar> I'll try to get it to you later-ish

[13:25] <agentzh> avar: okay

[13:26] <fglock> avar: [] captures a string, always (but let me check)

[13:26] *** jisom_ joined
[13:28] <fglock> if you use / $<x> := [ some captures here ] / then you lose the data structure, and only get the matched string

[13:28] <fglock> you need to use parentheses instead

[13:29] <avar> I'll try that (later)

[13:30] <avar> but whatever the issue was it was behaving differently in pugs and pcr

[13:37] <moritz> wow, somebody found my homepage searching for "pugs" on result page number 47 (!) ;)

[13:49] <pugs_svnbot> r16962 | fglock++ | trunk:

[13:49] <pugs_svnbot> : [kp6] v6/docs/p6regex-on-p5regex.txt - progress report

[13:49] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16962

[13:49] <lambdabot> Title: Changeset 16962 - Pugs - Trac

[13:54] *** TJCRI joined
[13:55] *** rindolf joined
[14:03] *** masak joined
[14:07] *** fglock_ joined
[14:07] *** ruoso joined
[14:21] *** bonesss joined
[14:26] *** amnesiac joined
[14:31] *** cjeris joined
[14:32] *** franck___ joined
[14:45] *** fglock joined
[14:50] *** cmarcelo joined
[14:51] *** unobe is now known as unobe_away

[14:56] *** daxim joined
[15:00] *** rashakil joined
[15:06] *** Blwood joined
[15:13] *** REPLeffect_ joined
[15:13] *** REPLeffect_ is now known as REPLeffect

[15:16] *** chris2 joined
[15:16] *** REPLeffect joined
[15:24] *** gilby joined
[15:25] *** pmurias joined
[15:26] <pmurias> hi

[15:26] <moritz> hi pmurias ;)

[15:26] *** fglock left
[15:30] <masak> hello pmurias

[15:37] <diakopter> Juerd: ping

[15:37] <Juerd> diakopter: pong

[15:38] *** awwaiid joined
[15:38] <diakopter> Juerd: may I ask the status of getting more ram for feather? (merely curious) or moving it to xen on a big(ger) box?

[15:39] *** DarkWolf84 joined
[15:40] <moritz> Juerd: if money is still the problem, i might donate something (not enough for a bigger box, but probably for more RAM)

[15:42] <Juerd> diakopter: Microgrant was approved; I'm waiting for payment info.

[15:42] <moritz> cool

[15:42] <Juerd> moritz: Money is no longer the problem, but any donation would still be welcome. Every dollar or euro can help to get bigger CPUs, or perhaps a spare hard drive :)

[15:43] <moritz> Juerd: I'm willing to donate up to 150â‚¬ if you tell me what you do with it ;)

[15:44] <Juerd> moritz: A bigger CPU in the new hardware.

[15:44] <moritz> Juerd: write me an email with your IBAN and BIC code, then I can transfer the money to you

[15:45] <Juerd> moritz: Which address?

[15:46] <Juerd> IBAN: NL62ABNA0578740923

[15:46] <Juerd> BIC: ABNANL2A

[15:46] <Juerd> Note that I have to charge 19% VAT btw

[15:46] <Juerd> If you have a european business, I can send you an invoice and it's 0% then

[15:46] <moritz> Juerd: I do have

[15:47] <Juerd> Please let me know the VAT number

[15:47] <moritz> I don't have it yet, I only opened my buisiness the other day :(

[15:47] <Juerd> Oh. I can send you the invoice later

[15:48] <moritz> after the bank transfer?

[15:49] *** Blwood joined
[15:49] <Juerd> moritz: In any order you wish :)

[15:49] <Juerd> I don't know if your country allows payment without prior invoice.

[15:49] <moritz> I hope so ;)

[15:50] *** Blwood joined
[15:50] <moritz> Juerd: I've done my transfer now, you should receive the money during the next few days

[15:53] <Juerd> moritz: On behalf of dozens of feather users, thank you :)

[15:53] <moritz> this is so cool - in the EU transfers to other countries may not cost more than within the country, so it's free for me ;)

[15:53] <moritz> Juerd: you're welcome

[15:53] <Juerd> Yes, it's free -- iff you say "shared costs"

[15:53] <Juerd> If you say "I pay everything" or "recipient pays everything", then voila: expenses!

[15:54] <Juerd> Which is a problem because many people pick "I'm paying" because they don't want the recipient to pay...

[15:54] <moritz> Juerd: if we host that p6explain/decrypt/perldoc project on feather I'll want an account - right now I'm fine without

[15:55] <moritz> I didn't have a choice :(

[15:55] <Juerd> moritz: If you want an account, please request it by email.

[15:55] <moritz> regarding the paiment thing

[15:55] <Juerd> That's good :)

[15:55] <moritz> Juerd: Aye, I'm just moosing randomly...

[15:55] <Juerd> Being forced into the free option is good.

[15:56] <moritz> btw what location in the pugs repository would you suggest?

[15:57] <Juerd> I haven't looked in pugs's repository for a few months, so I wouldn't know

[15:57] *** gilby left
[16:03] *** xwrn joined
[16:06] <lichtkind> Juerd:  hello

[16:10] <[particle]> mortiz++ for volunteering currency

[16:11] <moritz> [particle]: use your tab key if you want to karma me ;-)

[16:11] <[particle]> d'oh!

[16:11] <moritz> ;)

[16:11] <[particle]> particle-- ;)

[16:13] *** b_jonas joined
[16:18] *** daxim joined
[16:19] *** Squern joined
[16:22] *** barney joined
[16:23] <masak> moritz: re location in the pugs repo: I'd say ext/

[16:23] <masak> though I'm by no means an expert either

[16:23] <agentzh> ext/ ?

[16:23] <moritz> masak: I thought about it, but ext/ is reservered for P6 modules...

[16:23] <agentzh> is it a Perl 6 module?

[16:24] <agentzh> moritz: right :)

[16:24] <moritz> masak: and it'll mostly be a collection of data, with some p5 and p6 modules perhaps

[16:24] <masak> hm

[16:24] <moritz> I'll use misc/ for the moment

[16:24] <masak> sounds good

[16:25] <moritz> if it gets a lot of contributers, we can still move it to the pugs root or somewhere

[16:28] <Juerd> lichtkind: Hi.

[16:30] *** Limbic_Region joined
[16:34] * Limbic_Region takes bets on how long he will last before being disconnected

[16:34] <lichtkind> Juerd good to see you, i also wasnt much around 

[16:35] * Limbic_Region looks around for Juerd but doesn't see him

[16:35] <Limbic_Region> ahh, there he is as an op 

[16:36] *** Blwood joined
[16:37] <moritz> good disguise, such a doughnut ;)

[16:39] *** [particle] joined
[16:40] *** cmarcelo_ joined
[16:41] *** cmarcelo_ is now known as cmarcelo

[16:42] *** fglock joined
[16:50] <pugs_svnbot> r16963 | moritz++ | trunk:

[16:50] <pugs_svnbot> : Added P6Explain, the first attempt to build a character based syntax database.

[16:50] <pugs_svnbot> : Comments and contributions are welcome!

[16:50] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16963

[16:50] <lambdabot> Title: Changeset 16963 - Pugs - Trac

[16:51] <pasteling> "evalbot_r16962" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26180

[16:53] *** fglock left
[17:07] *** franck__ joined
[17:11] *** kanru joined
[17:13] *** rfordinal joined
[17:16] *** hkb_lab is now known as hakobe

[17:24] *** barney joined
[17:29] <pmurias> mortiz: a possible name for the project might be p6hints

[17:30] <pmurias> * moritz 

[17:30] *** weinig joined
[17:31] <[particle]> perlhints or perlexplain or perlnurse *g* might be better

[17:32] <moritz> pmurias: I like that name ;)

[17:35] <pmurias> mortiz: good ;)

[17:58] *** Psyche^ joined
[17:58] *** zamolxes joined
[17:58] *** marmic joined
[18:01] *** Blwood joined
[18:06] <pugs_svnbot> r16964 | diakopter++ | trunk:

[18:06] <pugs_svnbot> : new svnindex style... let's see what it looks like.

[18:06] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16964

[18:06] <lambdabot> Title: Changeset 16964 - Pugs - Trac

[18:07] *** foo\ joined
[18:09] *** rindolf joined
[18:09] *** [particle1 joined
[18:11] *** rashakil joined
[18:15] *** Psyche^ is now known as Patterner

[18:15] *** nnunley joined
[18:17] *** chris2 joined
[18:28] *** drupek12 joined
[18:44] *** b_jonas_ joined
[18:44] *** b_jonas_ is now known as b_jonas

[19:05] *** fglock joined
[19:05] <pugs_svnbot> r16965 | fglock++ | trunk:

[19:05] <pugs_svnbot> : [kp6] perl5rx - the $/ under construction is available inside code blocks; but for now it is a copy

[19:05] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16965

[19:05] <lambdabot> Title: Changeset 16965 - Pugs - Trac

[19:09] <pasteling> "evalbot_r16964" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26182

[19:17] *** thoughtpolice joined
[19:21] *** REPLeffect_ joined
[19:25] *** fglock_ joined
[19:29] *** Aankhen`` joined
[19:31] *** drupek12 joined
[19:33] *** mncharity joined
[19:33] <mncharity> fglock: ping?

[19:36] *** bonesss is now known as bones`OFF

[19:44] *** vel joined
[19:48] *** bones`OFF is now known as bones{off}

[19:49] *** Blwood_ joined
[19:49] <fglock_> mncharity: pong

[19:50] <fglock_> mncharity: I'd like you to sanity check p6rx-in-p5rx if possible

[19:51] <fglock_> it's a new kp6 regex backend

[19:52] *** REPLeffect joined
[19:55] <mncharity> nifty

[19:55] <mncharity> how can I help?

[19:56] *** Blwood__ joined
[19:56] <fglock_> I'd like if you could take a look at the architecture and comment on it

[19:56] *** WiNK79 joined
[19:57] <fglock_> I'm afraid it can have scalability problems, or hit perl 5 regex bugs

[19:57] <WiNK79> Hi guys..can any one help me with adding perl-devel package onto perl5.8.8

[19:58] <WiNK79> i cannot find where I can get the Windows version of the package..? i tried using the cpan shell..

[19:58] <WiNK79> but nothing was found..

[19:58] *** offby1 left
[19:58] <mncharity> fglock_: looking...

[19:58] <fglock_> WiNK79: I don't think there is a perl-devel for Windows - but you should ask at #perl

[19:59] <WiNK79> oh...ok....thanks...will do..

[19:59] <fglock_> mncharity: there is a sample code here (with instructions for compiling/running) http://svn.pugscode.org/pugs/v6/v6-KindaPerl6/examples/token-test.pl

[19:59] <lambdabot> http://tinyurl.com/2hf4xk

[20:00] <mncharity> ah :)  I was about to ask "uhm, where?"

[20:00] <fglock_> hmm - please comment out the { return 123 } block - it makes the output very verbose by dumping the whole kp6 object hierarchy :P

[20:01] <fglock_> the "docs" are here http://svn.pugscode.org/pugs/v6/docs/p6regex-on-p5regex.txt

[20:02] <WiNK79> hi fglock: no response...:P

[20:02] <WiNK79> fglock: from #perl

[20:02] *** justatheory joined
[20:02] <fglock_> the original prototype is here (easier to understand) http://svn.pugscode.org/pugs/v6/v6-KindaPerl6/temp/backtracking-recursive-subrule.pl

[20:02] <lambdabot> http://tinyurl.com/29lv29

[20:03] <fglock_> WiNK79: how about #perl at irc.perl.org

[20:03] <WiNK79> fglock: ok..will try that one..thanks

[20:03] <fglock_> WiNK79: or http://perlmonks.org

[20:04] *** Aankhen`` joined
[20:05] <fglock_> mncharity: btw, the root directory for running kp6 is v6/v6-KindaPerl6/

[20:07] <fglock_> mncharity: the idea is that the match creates a linked-list of operations, which grows and shrink as the perl5 regex matches/backtracks; the list is converted to a Match object on demand

[20:07] *** weinig joined
[20:07] <fglock_> the linear structure is much easier to manage than the match tree

[20:09] *** rho joined
[20:10] <mncharity> ./lib5/KindaPerl6/Runtime/Perl5/Match.pm vs lib5regex/KindaPerl6/Runtime/Perl5/Match.pm ?

[20:11] <mncharity> ah, neat idea

[20:11] <fglock_> lib5regex is the p6rx-on-p5rx Match class; lib5 is for the mp5 regex engine

[20:11] <fglock_> mp6

[20:13] <fglock_> I mean: lib5regex/ is the p6rx-on-p5rx runtime; lib5/ is the mp6 runtime

[20:13] <mncharity> so it's just that one file in lib5regex/ I should be looking at?

[20:14] <mncharity> oh, no docs, and output of the test script

[20:14] <fglock_> yes, that's the runtime; you can see the compiled script by piping into perltidy

[20:15] <fglock_>   perl kp6-perl5.pl --perl5rx < examples/token-test.pl | perltidy

[20:16] *** dduncan joined
[20:17] <mncharity> re "after the match finishes, the operations are interpreted, and the result is a Match object", you will also have to do it during the matching, if the regex itself uses the match.

[20:17] <fglock_> the emitter is: http://svn.pugscode.org/pugs/v6/v6-KindaPerl6/lib/KindaPerl6/Visitor/EmitPerl5Regex.pm

[20:17] <lambdabot> http://tinyurl.com/2h6f5d

[20:17] <fglock_> yes, it does that

[20:17] <fglock_> it is currently a copy, but I can make it rw by using references

[20:18] <fglock_> or by making a diff

[20:22] *** weinig_ joined
[20:23] *** ProperNoun joined
[20:26] <pugs_svnbot> r16966 | diakopter++ | trunk:

[20:26] <pugs_svnbot> : oops, didn't mean to commit that :/

[20:26] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16966

[20:26] <lambdabot> Title: Changeset 16966 - Pugs - Trac

[20:26] *** weinig joined
[20:39] *** fglock_ left
[20:40] * mncharity looks around for fglock_

[20:42] *** lisppaste3 joined
[20:53] *** Blwood joined
[21:34] *** Khisanth joined
[21:35] *** buetow joined
[21:36] *** dduncan joined
[21:37] *** Khisanth joined
[21:45] *** Aankhen`` joined
[21:46] *** justatheory joined
[21:51] *** xwrn joined
[21:52] *** xwrn is now known as Schwern

[21:54] <Aankhen``> Idiot moment.  Could two conforming Perl 6 implementations generate different ASTs for the same snippet of code, all other things being equal?

[21:57] <lumi> Aankhen``: I don't think we have an AST spec

[21:57] <lumi> Also, I think you can optimize on the AST level

[21:57] <spinclad> Aankhen``: sure

[21:57] <Aankhen``> Thanks.

[21:58] <Aankhen``> I felt like the answer was obvious, but for some reason I had a mental block.

[21:58] <Aankhen``> (Hence the "idiot moment".  I tend to have a lot of those. :-P)

[22:04] *** weinig is now known as weinig|coffee

[22:19] *** cjeris left
[22:22] *** weinig|coffee is now known as weinig

[22:28] *** unobe_away is now known as unobe

[22:40] <nothingmuch> w 12

[22:50] <dduncan> I would expect there to be an AST spec, at least insomuch as that the syntax for writing Perl 6 macros can take or return ASTs

[22:51] <avar> the std parser is pretty much an AST spec

[22:51] <dduncan> mind you, that could just be a role/interface to the ASTs, and not be how they are implemented internally

[22:53] <[particle1> perhaps once somebody is near the point of implementing perl6 macros, a standard will develop.

[22:53] *** [particle1 is now known as [particle]

[22:57] *** pjcj_ joined
[23:10] *** [particle1 joined
[23:15] *** theorbtwo joined
[23:26] *** [particle2 joined
[23:34] *** Squern joined
[23:52] *** Eidolos joined
[23:53] *** Aankhen`` joined
[23:54] *** gilby joined
[23:57] <mncharity> @tell fglock btw, I've comments, whenever is convenient.

[23:57] <lambdabot> Consider it noted.

