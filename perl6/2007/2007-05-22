[00:02] *** Limbic_Region joined
[00:05] <Limbic_Region> salutations all

[00:06] *** kaether joined
[00:06] <moritz> hi Limbic_Region ;)

[00:12] *** rlb3_work_ joined
[00:13] <dduncan> hi ho

[00:14] <stevan_> polettix: your welcome, you can always ask on #moose over on irc.perl.org as well 

[00:15] * polettix thanks

[00:18] <stevan_> polettix: the #moose crowd is pretty helpful :)

[00:18] <polettix> some time ago I tried to start a new project with moose, but I was quite in hurry and I eventually falled back to Object::InsideOut

[00:19] <polettix> but with some nasty feeling that I was missing a good chance

[00:20] <polettix> also considering that (for what I know) moose could be a soft bridge towards Perl 6

[00:21] <polettix> BTW, is there a best practice to write Perl 6? Should it be a single word "Perl6" or two separate tokens?

[00:21] * polettix confesses not to have RTFM regarding this

[00:23] <moritz> polettix: Perl 6

[00:25] *** kaether joined
[00:25] <polettix> ok, thanks for bearing with my non-constructive lazyness. Good night for those that live where it's night :)

[00:25] <stevan_> night 

[00:26] * moritz goes to sleep as well

[00:26] <moritz> night

[00:29] *** weinigLap_ joined
[00:33] *** weinigLap_ joined
[00:35] *** irc joined
[00:35] *** cognominal joined
[00:35] *** JarJarBinks joined
[00:36] *** weinigLap joined
[00:38] *** amnesiac joined
[00:57] *** [particle1 joined
[01:02] *** nipotaway is now known as nipotan

[01:04] *** SubStack joined
[01:07] <bsb> dduncan: I'm looking at sql ast possibilities for $work and many paths link to you.  I'd appreciate your advice on what to check out

[01:09] <bsb> currently it's perl5, but the build stages could potentially involve other things

[01:11] <dduncan> bsb, my AST is for relational databases in general, and isn't specific to SQL, but you can parse SQL to it and generate SQL from it, either with minimal or more indirection depending what SQL features you use

[01:12] <dduncan> I also made an AST once that was specific to SQL, which was on CPAN as Rosetta::Model, but I abandoned that in favor of QDRDBMS::AST

[01:13] <dduncan> regardless, I'm open to discussing your needs and helping as I can

[01:13] <dduncan> for your $work, do you have something in house you started, or are you trying to save yourself from making your own?

[01:14] <bsb> Thanks, I'll check out Rosetta and QDRDBMS

[01:14] <bsb> the later

[01:14] <dduncan> just keep in mind that Rosetta is officially aborted

[01:14] <dduncan> QDRDBMS is a rewrite

[01:14] <dduncan> and Rosetta never actually worked, per se

[01:15] <bsb> :)

[01:16] <bsb> my dream is a declarative validation framework, but that's a long way above the gutter of sql

[01:16] <dduncan> depending on your time table, you could help enhance QDRDBMS to meet your need

[01:17] <dduncan> it is intended to be what SQL DBMSs could have been were they not led astray

[01:17] *** trunix joined
[01:18] *** [particle1 is now known as [particle]

[01:18] <dduncan> right then, lets talk later ... meanwhile, I suggest you check out http://mm.DarrenDuncan.net/mailman/listinfo

[01:18] <lambdabot> Title: mm.darrenduncan.net Mailing Lists

[01:18] <dduncan> I set up lists specific to QDRDBMS there

[01:19] <dduncan> that might be better fora for discussions

[01:19] <bsb> will do, thanks again

[01:23] *** irc joined
[01:23] *** cognominal joined
[01:23] *** JarJarBinks joined
[01:28] * dduncan dinner &

[01:28] *** JarJarBinks|meta joined
[01:34] *** vel joined
[01:36] *** aukjan|gone joined
[01:39] *** stevan__ joined
[01:58] *** japhb joined
[02:20] *** miyagawa joined
[02:30] *** drbean joined
[02:57] *** fridim joined
[03:09] *** REPLeffect joined
[03:17] <PerlJam> Anyone awake and happen to remember the reasons why **{} looks the way it does?

[03:26] *** stevan__ joined
[03:29] *** avarab joined
[03:38] *** Alias_ joined
[03:46] *** mncharity joined
[03:48] * mncharity observers that python is generally good at guiding/confining people in the direction of clean code.  with one major caveat.  dsl's are not part of the vision.  so when you really really want a dsl, eg, to abstract away gui hair, python... leaves you in a nest of gui hair. :(

[03:49] <mncharity> pining for p6....

[03:51] <Tene> mncharity: Why not start using it now?

[03:52] <mncharity> it's not xmass yet.

[03:52] *** mncharity is now known as putter

[03:52] <Tene> huh.  Apparently the IRC bot I left running ran out of memory.

[03:53] <Tene> although, on reflection, that's probably my mistake, not pugs'

[03:56] <putter> g'night &

[04:18] *** devogon joined
[04:21] *** anatolyv joined
[04:23] *** thoughtpolice joined
[04:26] *** zperl joined
[04:27] *** drupek12 joined
[04:27] <zperl> hi

[04:29] <zperl> ?eval my $N is constant = 5; $N = 10; say $N;

[04:29] *** evalbot_r16488 is now known as evalbot_r16493

[04:29] <evalbot_r16493> OUTPUT[10␤] Bool::True

[04:29] <zperl> hmmm how can i make $N constant and readonly?

[04:32] <zperl> anyone?

[04:34] <TimToady> ?eval constant $N = 5; $N = 10; say $N

[04:34] <evalbot_r16493> Error: Can't modify constant item: VInt 5

[04:34] <TimToady> "is constant" is a fossil

[04:35] <zperl> cool ty larry

[04:35] <TimToady> there is now an "is readonly" which applies readonlyness to something that is intrinsically writable

[04:35] <TimToady> that's what parameters to functions are by default

[04:35] <TimToady> but the constant declarator lets you declare a compile-time constant

[04:36] <TimToady> (scopes like my)

[04:37] *** toku_away is now known as tokuhirom_

[04:38] <zperl> ?eval my constant $N = 5; $N = 10; say $N;

[04:38] <evalbot_r16493> OUTPUT[10␤] Bool::True

[04:39] <zperl> interesting 'constant' is ignored by pugs?

[04:39] <TimToady> when used as a type, yes

[04:39] <zperl> so is it a bug or a feature?

[04:39] <TimToady> fossil, going away

[04:39] <zperl> ok, cool

[04:40] <TimToady> gotta go pick up my son from the airport...

[04:40] <zperl> any place where fossils are documented so we can avoid?

[04:40] <TimToady> eh, not really

[04:40] <zperl> ok larry, cya and ty.

[04:40] <TimToady> just memorize the synopses and you'll be fine

[04:40] <TimToady> :)

[04:40] <TimToady> afk &

[04:40] <zperl> lol

[04:40] *** kunwon1 joined
[05:03] *** chylli joined
[05:04] *** chylli left
[05:07] *** BooK_ joined
[05:25] *** skrit joined
[05:25] <Aankhen``> ?eval constant $N = 5; $N = 10; $N.say

[05:25] <evalbot_r16493> Error: Can't modify constant item: VInt 5

[05:33] *** jisom joined
[05:34] <Aankhen``> Couple of questions about grammars.  Can grammars export regexes?  Is the syntax for matching from a specific grammar always <My::Awesome::Grammar.foo> to use the `foo` subrule from My::Awesome::Grammar?

[05:34] <Aankhen``> (My understanding is that the answer is "yes" to both.)

[05:43] *** skrit left
[05:45] *** kanru joined
[05:48] *** rfordinal joined
[05:48] *** rashakil_ left
[05:56] <thoughtpolice> Aankhen``: a grammar is a class, too. it just inherits from Rule, so you're basically working the same way.

[05:57] *** rfordinal joined
[05:58] <Aankhen``> Okay.

[06:23] *** renormalist joined
[06:25] *** Averell joined
[06:34] *** skrit joined
[06:35] *** skrit left
[06:36] *** IllvilJa joined
[06:46] <xinming> what the related name for ->meta->make_immutable in moose is in perl 6 please?

[06:47] *** weinigLap joined
[06:54] *** iblechbot joined
[06:56] *** kane_ joined
[06:57] *** kane_ left
[06:58] *** kane-xs joined
[06:58] <renormalist> ?eval my $in = "y" ; given $in { when          "y"   { say "yes" } };

[06:58] <evalbot_r16493> OUTPUT[yes␤] Bool::True

[06:58] <renormalist> ?eval my $in = "y" ; given $in { when ({ $_ ~~ "y"}) { say "yes" } };

[06:58] <evalbot_r16493> OUTPUT[yes␤] Bool::True

[06:58] <renormalist> ?eval my $in = "y" ; given $in { when    $_ ~~ "y"   { say "yes" } };

[06:59] <evalbot_r16493> undef

[07:00] *** kane-xs joined
[07:01] <renormalist> Why do I have to put ({ }) around an explicit smart match expression, as seen in my second eval. Without the paran/brace (3rd eval) it doesn't work.

[07:02] *** franck__ joined
[07:03] *** obvio171_ joined
[07:11] *** justatheory joined
[07:12] *** justatheory joined
[07:12] *** franck___ joined
[07:16] *** japhb joined
[07:22] *** beppu joined
[07:24] *** kane-xs is now known as kane_

[07:30] <svnbot6> r16494 | Aankhen++ | * added examples/rules/Grammar-URI-RFC1738.pm

[07:39] *** dduncan left
[07:51] *** LaserQ joined
[07:52] <LaserQ> What's the eqiv to sort ( $hash{$b} <=> $hash{a} ) in perl6?

[07:52] <Aankhen``> @foo.sort:{ $^a <=> $^b }, most likely.

[07:52] <lambdabot> Unknown command, try @list

[07:53] <LaserQ> Ah, twigils. Thanks

[07:53] <Aankhen``> NP.

[07:53] <Aankhen``> You don't necessarily have to use placeholder variables like that.

[07:53] <Tene> @foo.sort: { %hash{$^a} <=> %hash{$^b} }

[07:53] <lambdabot> Unknown command, try @list

[07:53] *** dmq joined
[07:53] <Aankhen``> You can specify any block that takes two variables.

[07:53] <Aankhen``> Er, yeah, with %hash too.

[07:53] * Aankhen`` blushes.

[07:54] <Aankhen``> @foo.sort: -> $a, $b { %hash{$a} <=> %hash{$b} }

[07:54] <lambdabot> Unknown command, try @list

[07:54] <Aankhen``> @foo.sort: sub ($a, $b) { %hash{$a} <=> %hash{$b} }

[07:54] <lambdabot> Unknown command, try @list

[07:54] <Aankhen``> To the best of my knowledge, any of those should suffice.

[07:54] <Tene> There was a proposal to have sort() inspect the arity of its code block and automagically parse blocks with single arguments only into sort: { &code($^a) <=> &code($^b) }

[07:54] <Aankhen``> Say what?

[07:54] <Aankhen``> Ah.

[07:54] <Aankhen``> Hmm.

[07:55] <Tene> Although perhaps that should have a different keyword

[07:55] <Tene> sort_by, ocelot

[07:55] <Aankhen``> So basically you take the result of the_block($^a) and the_block($^b) and compare those?

[07:55] * gaal mooses

[07:55] <Tene> Right.

[07:55] * Aankhen`` capybaras gaal.

[07:55] <Aankhen``> Ah.

[07:55] <Aankhen``> Sounds neat.

[07:56] <LaserQ> %tally.keys.reverse.sort: { %tally{$^b} <=> %tally{$^a} } gives me Undeclared variable: "$^b"

[07:56] <svnbot6> r16495 | yiyihu++ |  r16572@HomePc:  xinming | 2007-05-18 06:11:39 +0800

[07:56] <Aankhen``> Okay, I think I've ported all the easy Regexp::Common modules.

[07:56] <svnbot6> r16495 | yiyihu++ |  Renamed from_moose_0.21 to from_moose

[07:56] <Aankhen``> All three of them.

[07:56] <LaserQ> Can yo only do that kind of sort with a .kv?

[07:56] <Aankhen``> Although I did end up writing a grammar for RFC 1738 in the process.

[07:56] <Aankhen``> LaserQ: Er, where is this giving you an error?

[07:56] <Tene> There are lots of convenient little operators like sort_by that would be nice to have builtin, but are only a line or two to implement.

[07:57] <Aankhen``> And why do you reverse the keys when you're sorting them anyway?

[07:57] <Aankhen``> Tene: Fair enough.

[07:57] <LaserQ> That's a very good question. Ops. Still get the eror with that bit removed though

[07:58] <Aankhen``> ?eval my %foo = (a => 'c', b => 'b', c => 'a'); %foo.keys.sort:{ %foo{$^a} <=> %foo{$^b} }

[07:58] *** evalbot_r16493 is now known as evalbot_r16494

[07:58] <evalbot_r16494> ("a", "b", "c")

[07:58] <Aankhen``> Uhm.

[07:58] <Tene> LaserQ: pugs doesn't handle auto-magic parameters properly yet.  It handles them in the order they appear in the code, not in alphabetical order.

[07:58] *** kane_ joined
[07:58] <Aankhen``> ?eval my %foo = (a => 'c', b => 'b', c => 'a'); %foo.keys.sort:{ %foo{$^a} cmp %foo{$^b} }

[07:58] <evalbot_r16494> ("c", "b", "a")

[07:58] <Aankhen``> There we go.

[07:58] <svnbot6> r16496 | yiyihu++ |  r16665@HomePc:  xinming | 2007-05-22 15:56:04 +0800

[07:58] <svnbot6> r16496 | yiyihu++ |  An attempt to translate 000_load and 001_recipe moose tests in to perl 6.

[07:58] <Aankhen``> And what Tene said.

[07:59] <Aankhen``> 'Cept s/auto-magic/placeholder/. :-P

[07:59] <Tene> Yeah.  Couldn't remember the term.  Thanks.

[07:59] <Tene> Aankhen``++

[08:00] <Aankhen``> Oh, please.  I'm always happy to correct other people. ;-)

[08:00] <LaserQ> Aankhen`` - your sort worked so I'm made a mistake somewhere. I'll have a dig, thanks for the pointers

[08:00] <svnbot6> r16497 | Aankhen++ | * added examples/rules/Regexp-Common.pm (only contains `list`, `ws` and `lingua` patterns so far).

[08:00] <Aankhen``> LaserQ: <Tene> LaserQ: pugs doesn't handle auto-magic parameters properly yet. It handles them in the order they appear in the code, not in alphabetical order.

[08:01] <LaserQ> oohh

[08:01] <Aankhen``> LaserQ: You didn't make a mistake, Pugs just doesn't handle placeholder variables correctly as yet.

[08:01] <Aankhen``> You can work around it for now by reversing $^a and $^b.  And presumably altering your algorithm accordingly.

[08:01] <Aankhen``> @quote ghc

[08:01] <lambdabot> ghc says: Illegal constraint

[08:02] <Aankhen``> @quote fortune

[08:02] <lambdabot> No quotes match. Are you on drugs?

[08:02] <Aankhen``> :-(

[08:02] <Tene> @quote tene

[08:02] <lambdabot> Cale says: desrt: Did you hear about the trivial religion that I came up with? Its tenets consist of a single statement: "Believing in this statement will make you happier". It's like a terminal

[08:02] <lambdabot> object in the category of religions and theomorphisms.

[08:02] <Aankhen``> Yeh, just realied it, heh.

[08:02] <Aankhen``> Realized, even.

[08:03] <Aankhen``> And LMAO at the quote.

[08:03] <LaserQ> Thank you both.

[08:06] <renormalist> @list

[08:06] <lambdabot> http://www.cse.unsw.edu.au/~dons/lambdabot/COMMANDS

[08:06] <renormalist> @help

[08:06] <lambdabot> help <command>. Ask for help for <command>. Try 'list' for all commands

[08:07] <renormalist> @help karma

[08:07] <lambdabot> karma <polynick>. Return a person's karma value

[08:07] <renormalist> @karma renormalist

[08:07] <lambdabot> You have a karma of 11

[08:07] <renormalist> @karma audreyt 

[08:07] <lambdabot> audreyt has a karma of 815

[08:07] <renormalist> @karma TimToady 

[08:07] <lambdabot> TimToady has a karma of 36

[08:10] <meppl> good morning

[08:10] <renormalist> @help quote

[08:10] <lambdabot> quote <nick>

[08:10] <lambdabot> remember <nick> <quote>

[08:10] <lambdabot> Quote somebody, a random person, or save a memorable quote

[08:10] <renormalist> @quote

[08:10] <lambdabot> AdamPeacock says: Once I looked at the source code, 25000 lines of ASP, I reckoned it would be easier to rewrite it in a real language.

[08:11] <renormalist> @quote

[08:11] <lambdabot> Syzygy- says: Why do I get the feeling that the arrow code was written during "Speak like a pirate day"?

[08:15] *** kane_ joined
[08:20] <renormalist> a wording question: Does one use the word "twigil" also for the parameters of functions, eg sub quicksort(*$x, *@tail)

[08:20] <renormalist> or are twigils just what starts with $, %, @, like $.accessor?

[08:25] <renormalist> s/parameters of functions/modifiers of parameters of functions/

[08:26] <Aankhen``> Hi meppl. :-)

[08:27] <Aankhen``> renormalist: A twigil is a secondary sigil, so only things like "*" in $*FOO or "^" in $^foo are twigils.

[08:27] <Aankhen``> Or "." in $.accessor, since you mentioned it.

[08:28] <renormalist> k, thx

[08:28] <Aankhen``> Happy to help.

[08:29] * Aankhen`` wonders if eric256 has abandoned examples/rules/basic.pl

[08:29] <Aankhen``> (Most likely because of vastly incomplete implementations.)

[08:29] <Aankhen``> His last commit was r10195, so I'm guessing yes.

[08:31] <moritz> good morning ;)

[08:31] *** VanilleBert joined
[08:32] <Aankhen``> Eek, it's moritz.  Run.

[08:32] <Tene> He killed audreyt!

[08:33] <Aankhen``> Oh the huge manatee~!

[08:33] <Aankhen``> s/~//

[08:33] <Aankhen``> Stupid ~ key keeps sneaking in there.

[08:34] <renormalist> Aankhen``: you have a special Perl6 keyboard? :-)

[08:34] <Aankhen``> Shh, don't tell anyone. ;-)

[08:36] <renormalist> as we just speak about Perl6: can someone explain me what the pipe symbol in the quicksort example (examples/algorithms/quicksort.pl) do:   return(quicksort(|@pre), $x, quicksort(|@post));

[08:38] <Aankhen``> Well, |@pre is a Capture, like |@post.  Unfortunately, I'm not sure I understand them completely.

[08:39] <Aankhen``> I *think* what's happening there is that it's sort of "flattening" @pre to fill the argument list of quicksort.

[08:39] <Aankhen``> Although "flattening" might be a particularly bad word to use.

[08:42] *** offby1` joined
[08:42] <Aankhen``> I could have sworn there was a POD document on captures.

[08:43] <Aankhen``> Ah, there's a docs/Perl6/FAQ/Capture.pod

[08:44] <Aankhen``> Though I have no idea how up-to-date that is.

[08:44] <Aankhen``> S02 says: "Capture     Function call arguments (right-hand side of a binding)"

[08:44] <Aankhen``> Actually, just read S02 from "An argument list may be captured into an object with backslashed parens", that might give you some idea.

[08:45] *** rho joined
[08:46] *** franck__ joined
[08:49] <renormalist> hm, not sure I understand, maybe it's indeed due to the use of := binding of @pre/@post.  that I also don't understand, why it's done. Or generally when I should use binding.

[08:50] <Aankhen``> I'm afraid I don't really know. :-(

[08:51] <renormalist> m'kay

[09:04] *** rho joined
[09:11] <renormalist> ?eval 3 ~~ 1 .. 10

[09:11] *** evalbot_r16494 is now known as evalbot_r16497

[09:11] <evalbot_r16497> Bool::False

[09:13] <moritz> ?eval grep {$_ == 3}, 1 .. 10

[09:13] <evalbot_r16497> (3,)

[09:14] <moritz> ?eval 3.grep(1..10)

[09:14] <evalbot_r16497> Error: Cannot cast from VList [VInt 1,VInt 2,VInt 3,VInt 4,VInt 5,VInt 6,VInt 7,VInt 8,VInt 9,VInt 10] to Pugs.AST.Internals.VCode (VCode)

[09:25] *** riffraff joined
[09:26] <riffraff> hi

[09:26] <moritz> hi riffraff ;)

[09:28] *** buetow joined
[09:29] <riffraff> too bad that $x does role doesn't work yet :/

[09:41] <renormalist> how can I count how many tests the testsuite contains without running it?

[09:41] <renormalist> or can someone tell me current numbers

[09:42] <moritz> renormalist: you can look into the smokes on smoke.pugscode.org

[09:42] <moritz> renormalist: there is a count at the very bottom

[09:43] <renormalist> indeed, thx

[09:43] <renormalist> is it really around 18.000 tests? sounds good :-)

[09:45] <moritz> I had 20.000 in mind

[09:45] <moritz> I think a few of the test files don't compile currently, so the plan $n; is never executed...

[09:46] <riffraff> renormalist, well, not all opf them pass though

[09:46] <moritz> and they don't count in that statistic

[10:00] <renormalist> can i sum the numbers in "17954 ok, 0 failed, 4638 todo, 747 skipped " to 17954+4638+747==23339 ?

[10:01] *** audreyt joined
[10:02] <riffraff> I remember more than 17954

[10:02] <riffraff> there a re a lot of new TODOs, I believe

[10:03] <moritz> it explicitly says "18590 test cases"

[10:03] <riffraff> completely OT: what does pile-drive means?

[10:04] <moritz> or something

[10:04] <moritz> renormalist: just take that number

[10:04] * riffraff is been doing make smoke for a while now

[10:11] *** lampus_ joined
[10:22] *** yves_ joined
[10:30] *** LCamel joined
[10:38] *** trunix joined
[10:40] <svnbot6> r16498 | audreyt++ | * Pugs.Compat, Pugs.Embed.Parrot: Change the PUGS_HAVE_POSIX

[10:40] <svnbot6> r16498 | audreyt++ |   check in .hsc from reading #include <../pugs_config.h> into

[10:40] <svnbot6> r16498 | audreyt++ |   using a _PUGS_HAVE_POSIX variable, because relative paths

[10:40] <svnbot6> r16498 | audreyt++ |   under .hsc is not reliable (in GHC-HEAD's Cabal, .hsc files

[10:40] <svnbot6> r16498 | audreyt++ |   generates dist/build/Pugs/Embed/Parrot.hs rather than the

[10:40] <svnbot6> r16498 | audreyt++ |   assumed src/Pugs/Embed/Parrot.hs).

[10:46] <svnbot6> r16499 | audreyt++ | * UTF8.hs - GHC.Prim is not visible in GHC-HEAD anymore;

[10:46] <svnbot6> r16499 | audreyt++ |   change import to GHC.Base.

[11:29] *** mugwump left
[11:32] *** VanilleBert left
[11:33] *** avarab is now known as avar

[11:35] *** rgs joined
[11:38] *** rfordinal_ joined
[11:41] <svnbot6> r16500 | audreyt++ | * Move src/RRegex into third-party/hsregex/, both to simplify the

[11:41] <svnbot6> r16500 | audreyt++ |   building process (no more mucking with src/pcre/pcre.o etc), and

[11:41] <svnbot6> r16500 | audreyt++ |   to continue the move of third-party projects (see README) for

[11:41] <svnbot6> r16500 | audreyt++ |   clarifying licensing/redistribution.

[11:41] *** ggoebel joined
[11:42] *** deq` joined
[11:42] <svnbot6> r16501 | audreyt++ | * Remove pcre/re-override-*; they are thoroughly replaced by

[11:42] <svnbot6> r16501 | audreyt++ |   the re-engine family of modules on CPAN.

[11:43] *** mako132_ joined
[11:44] *** prism joined
[11:48] <svnbot6> r16502 | audreyt++ | * Thoroughly remove src/pcre and src/RRegex in favor of

[11:48] <svnbot6> r16502 | audreyt++ |   third-party/hsregex/.

[11:48] <svnbot6> r16503 | audreyt++ | * gen_prelude.pl: Do not precompile a module more than once..

[11:51] <svnbot6> r16504 | audreyt++ | * Pugs.Meta.Str: The "split" method should be named "split". :)

[11:54] <svnbot6> r16505 | audreyt++ | * docs/notes/mo-bootstrap-plan.pod: Spellchecking.

[11:57] *** chris2 joined
[12:00] *** nipotan is now known as nipotaway

[12:09] <svnbot6> r16506 | audreyt++ | * Unbreak the build.

[12:12] * moritz fears for the debian packages ;)

[12:13] <moritz> but since I'm not too keen on learning for my exams, I'll spend some time fixing it if something breaks ;)

[12:13] *** iblechbot joined
[12:13] *** the_dormant joined
[12:19] *** Alias_ joined
[12:19] *** rgs is now known as args

[12:23] *** rodi joined
[12:27] <avar> ew @ re::override:)

[12:28] *** f0rth joined
[12:42] *** offby1` is now known as offby1

[12:45] *** bloonix joined
[12:46] <bloonix> salute

[12:46] *** f0rth joined
[12:46] <moritz> hi bloonix ;)

[12:46] <bloonix> hey moritz, what up? :) nice to meet you again

[12:47] <moritz> bloonix: I'm thinking about two dimensional regexes

[12:47] <bloonix> *hehe*

[12:47] <moritz> to extend regex matching to image data

[12:47] <moritz> but so far I'm not very successfull ;)

[12:47] <args> hmm image spam detection

[12:47] <moritz> not only spam

[12:48] <moritz> other features as well

[12:48] <bloonix> use bugs as a feature moritz ;)

[12:52] <moritz> bloonix: that's your job ;)

[12:54] <bloonix> i plead guilty

[12:54] * moritz executes bloonix

[13:11] *** stevan__ joined
[13:22] *** [particle1 joined
[13:23] *** audreyt joined
[13:27] *** buetow joined
[13:29] *** pbuetow joined
[13:29] *** rfordinal_ is now known as rfordinal

[13:34] *** buetow__ joined
[13:35] *** vel joined
[13:38] *** yves_ joined
[13:42] <moritz> feather.perl6.nl and perlcabal.org don't have a favicon

[13:42] <moritz> maybe we should use the same as pugscode.org?

[13:49] <masak> moritz: I've been thinking at times about 2d regexes in relation to Hex: http://en.wikipedia.org/wiki/Hex_(board_game)

[13:49] <masak> it carries additional difficulties due to the non-rectangular layout of the board...

[13:50] <masak> but I'd need something like that to do efficient pattern matching on a board

[13:50] *** [particle1 is now known as [particle]

[13:55] *** kaether_ joined
[14:03] *** VanilleBert joined
[14:06] *** devogon joined
[14:15] *** rhandom joined
[14:18] *** renormalist joined
[14:34] *** REPLeffect joined
[14:35] <renormalist> What are the most important URLs that people should know of, when they hear from Pugs in an article?

[14:35] <moritz> www.pugscorde.org and the svn url ;)

[14:36] <VanilleBert> http://run.pugscode.org/

[14:36] <VanilleBert> if it would work

[14:37] <moritz> if it doesn't work, report to andara++ (iirc)

[14:38] <VanilleBert> it redirects me to http://feather.perl6.nl:8080/runpugs/ and no connection can be made

[14:39] <moritz> that's propably due to feather's reboot

[14:44] <moritz> renormalist: what are you writing about pugs?

[14:44] <moritz> renormalist: maybe you could link audrey's talk on pugs+perl6 at google video

[14:48] <renormalist> moritz: I'm working on an article in a magazine. Google video might be cool.

[14:49] <moritz> renormalist: which magazine? ix?

[14:49] <renormalist> y

[14:49] <renormalist> what's the url of audreys talk I already had it but forgot

[14:51] <moritz> http://video.google.de/videoplay?docid=-3876155376103839772

[14:51] <lambdabot> Title: Audrey Tang - Perl 6 Today - Google Video

[14:55] *** mikfire joined
[14:55] *** mikfire is now known as mikfire09

[14:57] *** rindolf joined
[15:04] <renormalist> moritz: thx, I made it short: http://xrl.us/perl6today 

[15:04] <lambdabot> Title: Audrey Tang - Perl 6 Today - Google Video

[15:09] *** amnesiac joined
[15:10] <mikfire09> My pugs install seems to be missing HsBridge.pm.  Could somebody tell me how to fix this?  I want to play with the new match syntax but cannot get past this.

[15:13] *** the_dormant joined
[15:20] * rho is away: (ice cream time)

[15:20] *** _bernhard joined
[15:21] <TimToady> mikfire09: do you have a file in ./blib6/pugs/perl5/lib/Pugs/Runtime/Match/HsBridge.pm ?

[15:22] <TimToady> (we don't generally try to install pugs because it tends to interfere with future development, with the consequence that it tends not to be maintained much either...)

[15:23] <mikfire09> That is a fair answer

[15:23] <mikfire09> I may have to back what I did out and try again the old fashioned way.

[15:24] <TimToady> some of us just symlink /usr/bin/pugs into the build directory

[15:24] <mikfire09> I can set my PATH easier.  Hmmm.  Thanks Tim, I think that was the answer I needed.

[15:27] *** moritz_ joined
[15:28] <Juerd> Is there a place where one can pull up to date versions of the synopses from?

[15:28] <Juerd> POD preferrably

[15:28] *** moritz changes topic to: http://pugscode.org | Think twice before installing pugs

[15:31] <kolibrie> Juerd: http://svn.perl.org/perl6/doc/trunk

[15:31] <lambdabot> Title: Revision 14400: /doc/trunk

[15:32] <Juerd> kolibrie: Thanks

[15:32] <kolibrie> np

[15:34] <renormalist> @help seen

[15:34] <lambdabot> seen <user>. Report if a user has been seen by the bot

[15:34] <renormalist> @seen rafl

[15:34] <lambdabot> I haven't seen rafl.

[15:34] <renormalist> oh

[15:35] *** SubStack joined
[15:39] *** myren joined
[15:44] <masak> @seen lambdabot

[15:44] <lambdabot> Yes, I'm here. I'm in #friendly-coders, #dreamlinux-es, #xmonad, #unicycling, #perl6, #parrot, #oasis, #jtiger, #haskell-soc, #haskell-overflow, #haskell-blah, #haskell, #ghc, #gentoo-uy, #gentoo-

[15:44] <lambdabot> haskell, #darcs and #scannedinavian

[15:44] <masak> nice.

[15:45] <[particle]> can somebody kick lambdabot from #parrot--that channel isn't used on freenode

[15:45] <[particle]> will the real #parrot please stand up?

[15:45] <allbery_b>  @tell dons

[15:46] <allbery_b> also remind him to rejoin #haskell on irc.perl.org :)

[15:46] <moritz> are '@tell's scoped to channels?

[15:46] <allbery_b> nope

[15:47] <allbery_b> they're scoped to nicks

[15:47] <moritz> cool ;)

[15:49] <[particle]> @tell dons lambdabot is on #parrot, but that channel isn't used on freenode (the real #parrot is on irc.perl.org)

[15:49] <lambdabot> Consider it noted.

[15:50] *** weinigLap joined
[16:03] *** kanru joined
[16:08] *** iblechbot joined
[16:29] *** rodi left
[16:35] <rindolf> Hi all.

[16:36] *** ribasushi joined
[16:36] <rindolf> Happy Shavuoth everybody.

[16:36] <ribasushi> hi

[16:37] <ribasushi> anyone here uses/used Petal? Although the documentation specifically states it works with HTML as well as XHTML, it can not parse validated HTML 4.01

[16:37] <ribasushi> nothingmuch: rindolf suggested you are the one that might know

[16:40] *** the_dormant joined
[16:40] <rindolf> ribasushi: maybe try #petal on irc.perl.org, assuming this channel exists.

[16:41] <ribasushi> rindolf: nope

[16:41] <ribasushi> I am still milking google

[16:43] <nothingmuch> ribasushi: i don't like petal

[16:43] <nothingmuch> i used to

[16:43] <nothingmuch> but then I realized it's only useful for the first version of a templat

[16:43] <nothingmuch> e

[16:43] <nothingmuch> because it takes too much work to tweak small things

[16:43] <nothingmuch> nowadays I use TT if it's klunky

[16:44] <nothingmuch> or HTML::Element if it's clean

[16:44] <nothingmuch> YMMV

[16:44] <nothingmuch> it's nice to have a "100% guaranteed to be valid" template

[16:45] <nothingmuch> but you can get that with HTML::Element, Template::Declare or HTML::Seamstress ( basically HTML::Element on crack)

[16:45] <nothingmuch> it also has issues with unicode

[16:45] <ribasushi> nothingmuch: I am into petal because of the wysiwyg friendlines

[16:45] <nothingmuch> yeah, i thought that pipe dream was worth it

[16:45] <nothingmuch> i'm not sure now

[16:45] <nothingmuch> HTML::Seamstress should get you the same friendliness

[16:46] <nothingmuch> basically you parse the HTML

[16:46] <nothingmuch> and run replacement patterns on it

[16:48] <ribasushi> reading...

[16:48] <ribasushi> can you tell me anything on my question though?

[16:48] <nothingmuch> i don't think it can

[16:49] <nothingmuch> it's an XML parser

[16:49] <ribasushi> so the input/output options are leftovers from the pre-xml versions I suppose?

[16:58] *** buetow joined
[16:58] *** damog joined
[16:58] *** renormalist joined
[17:07] *** Psyche^ joined
[17:07] *** Psyche^ is now known as Patterner

[17:14] *** prism joined
[17:15] *** elmex joined
[17:16] <renormalist> is it correct to use the term "Perl6" (without space) in an article, or should I always put a space before the 6? Opinions?

[17:17] <rhandom> On the conversation of template engines, I'm releasing a new version of a year old module today that keeps its TT2 and TT3 support and adds HTML::Template and HTML::Template::Expr support - now for the pugs/perl6 connection - the engine is grammar based and I really can't wait to rewrite it in perl6 - I guess its time to start :).

[17:18] <rhandom> I am hoping I can define my grammar, refine the AST, and play it natively in different runtimes.

[17:19] <myren> is parrot still seen as "the" engine which will ultimately host perl6?

[17:20] <myren> listening to mr audrey tang's presentations it started to seem in ways that perl6 was the perl6 runtime

[17:20] <[particle]> renormalist: i think "Perl 6" is more appropriate

[17:21] <[particle]> myren: parrot as "an" engine for perl6

[17:23] <TimToady> renormalist: we tend to prefer "Perl 6" in order to indicate that it's version 6 of the language "Perl"

[17:24] <TimToady> otherwise people think "Perl6" is the name of the language

[17:24] <avar> mp6 and co are looking much more viable than parrot

[17:25] <TimToady> however, I'm not as picky as some people... :)

[17:25] <TimToady> avar: different levels--they can be complementary

[17:26] <avar> they can, but mp6 emitting perl5, java bytecode etc. would allow it to target different vm's

[17:27] *** Arathorn joined
[17:28] *** BuRn-X joined
[17:28] *** BuRn-X left
[17:29] <renormalist> TimToady: ok, I will use "Perl 6"  (with space). the same when referring to Perl 5

[17:30] * rho is back

[17:33] *** franck__ joined
[17:34] *** rodi joined
[17:36] <renormalist> brb

[17:37] <PerlJam> TimToady: why is **{} writ that way?  (as opposed to *{} for instance)

[17:37] <TimToady> because otherwise it requires a space to distinguish * {} from *{}, and I thought it would be better to keep it visually distinct as well

[17:38] <PerlJam> TimToady: I was reading S05 last night and **{} still seems like an oddball.  Specifically the difference between procedural vs. declarative.  Everywhere else it seems procedural has doubled chars, and declarative has single chars.

[17:38] *** rafl joined
[17:39] *** renormalist joined
[17:40] <TimToady> well, we might re-evaluate now that all non-alpha are considered meta by default

[17:41] *** _bernhard joined
[17:42] <PerlJam> okay, don't let it impinge upon your brain too much, but a re-eval would be nice :-)

[17:42] *** justatheory joined
[17:46] *** dduncan joined
[17:57] *** kaether_ is now known as kaether

[17:57] *** the_dormant joined
[17:58] <TimToady> kaether: greetin's

[17:58] <TimToady> would you like a commit bit?  :)

[18:00] <kaether> Can I have two?

[18:02] <Tene> You going to pass the second one on to someone else?

[18:02] <kaether> I was thinking about ebay...

[18:02] <moritz> ;-)

[18:02] <Tene> Heh.

[18:03] <TimToady> gimme two email addresses and you can have two bits...

[18:03] *** SubStack joined
[18:03] * [particle] hums "shave and a haircut"

[18:05] <PerlJam> I could use both of those

[18:06] <kaether> I was thinking that maybe the second bit would be immutable.  

[18:07] <TimToady> if your second email address is immutable, shouldn't be a problem...

[18:07] <TimToady> actually, I know your immutable email address, it's the mutable one I don't know. :)

[18:10] <[particle]> i have a mutable email address, with gmail

[18:11] <TimToady> yeah, well, heisenberg and all that...

[18:12] <[particle]> [email@hidden.address]
[18:16] <TimToady> commitbit seems to be hosed

[18:16] <TimToady> spewing bare templates at me...

[18:16] <Tene> I remember audreyt saying that she was turning it off because it was having too many issues.

[18:17] <TimToady> I don't suppose there's a commandline interface that can be used on feather...

[18:18] <obra> TimToady: let me look. I have admin bits now

[18:19] <TimToady> yeah, I remember her turning it off too

[18:19] <TimToady> even said where to turn it back on at the time

[18:19] *** japhb joined
[18:19] <obra> TimToady: this was after I last messed with it?

[18:20] <[particle]> yes, this was yesterday

[18:20] <obra> I see her running a current rsync of commitbit

[18:20] <obra> which leads me to not want to touch it

[18:21] <obra> (like 1 minute ago)

[18:22] <TimToady> http://moritz.faui2k3.org/irclog/out.pl?channel=perl6;date=2007-05-21#id_l728

[18:22] <lambdabot> Title: IRC log for #perl6, http://tinyurl.com/yspw57

[18:22] <moritz> how can I tell irssi not to hilight my nick if it's followod by a dot '.'?

[18:23] <renormalist> Perl-6.0.0-STD.pm currently doesn't compile with pugs -c. The log says it worked some time ago. Is it currently meant to be parseable by pugs or is this not a current goal?

[18:23] <TimToady> audrey does not appear to be logged on to feather

[18:23] <TimToady> sure it wasn't a cron job?

[18:23] <obra> audreyt  26872  0.2  0.0   2980  1484 ?        Ss   20:20   0:00 rsync --server --sender -vulogDtprz . /data/svn/commitbit

[18:23] *** jisom joined
[18:23] <obra> Not sure it wasn't a cronjob

[18:23] <obra> I may have just had good timing

[18:23] <TimToady> oops, now she's there

[18:23] <moritz> renormalist: I think you have to pipe it through "cheat"

[18:25] <TimToady> yes, currently you have to use "cheat"

[18:26] <TimToady> as pugs's parser improves, we can remove transformations.  when "cheat" turns into "cat", we'll have made progress.

[18:27] <diakopter> s/he//

[18:27] <TimToady> will the intermediate state be ceat or chat?

[18:28] <TimToady> "Yes! Both! Neither!" says QM.

[18:29] *** prly joined
[18:29] <[particle]> c[h|e]at

[18:30] <obra> I'd really like to get commitbit off this snapshot from november

[18:30] <renormalist> moritz, TimToady: cheat? what's that?

[18:31] <renormalist> ah, cat

[18:31] <moritz> renormalist: a p5 script that transforms some syntactic sugar into something that is easier to parse

[18:31] <moritz> but not so nice to read

[18:32] <moritz> /src/perl6/cheat  in the pugs repository

[18:34] <renormalist> moritz: thx I found it. works with that

[18:34] <TimToady> smile when you say "works"

[18:36] *** REPLeffe1t joined
[18:36] *** prly_ joined
[18:37] <Tene> moritz: irssi has regex as an option to specify hilights.

[18:37] <Tene> moritz: /help hilight

[18:39] <moritz> Tene: I know it has regexes, but it's a bit... unusual (compared to PCRE)

[18:41] *** prly__ joined
[18:41] <moritz> damned, `man 7 regex` doesn't seem to mention lookahead assertions

[18:42] <obra> commitbit Database vacuumed and indexed and tested with the standalone server. I expect it to be back in a bit.

[18:42] <obra> (renabled in httpd.conf)

[18:42] <moritz> does commitbit do anything else except handling of svn access?

[18:43] <moritz> it seems to cause a lot of trouble for such a seemingly simple task

[18:43] <obra> moritz: indeed it does. We built it for code.bestpractical.com and haven't seen any of these issues there.

[18:44] <obra> But pugscode is running an ancient snapshot, so I don't actually know if actively my fault or passively my fault ;)

[18:44] *** chris2 joined
[18:44] <moritz> obra: ;)

[18:45] <obra> Part of it is that I can't understand why feather is So. Slow.

[18:46] <obra> TimToady: want to try that commit bit?

[18:46] <TimToady> loadavg went up to 10 :(

[18:47] <moritz> it feels faster now

[18:47] <moritz> the "People" page no longer lists all authors

[18:48] <obra> TimToady: most of the load was svk and irssi (It was there before commitbit was up)

[18:48] <obra> moritz: who's missing?

[18:48] <TimToady> people doesn't list any people

[18:48] <obra> http://commitbit.pugscode.org/project/Pugs looks ~rasonable to me

[18:49] <moritz> obra: everybody ;)

[18:51] <obra> I'm going to spend my afternoon trying to get commitbit up to the latest (this involves fixing a bug in the latest) so that I can _know_ this is my fault.

[18:53] *** isaacd joined
[18:59] <renormalist> Does the word "hyperoperator" only mean the meta operator "«", or is an hyperoperator the constructed result from the meta with the base operator, like »+« ?

[19:00] *** toshinori joined
[19:00] <TimToady> it's the resulting operator

[19:01] <TimToady> "hyper map" will also be a hyper operator

[19:01] <TimToady> hyper means "run to completion but I don't care what order"

[19:02] <wolverian> can hypers short circuit in boolean context?

[19:02] <TimToady> that would depend on what type the hyper is returning, and how that type behaves in boolean context

[19:03] <moritz> I guess in a reduce [...] they can

[19:03] <wolverian> I'm wondering about the naive if any(@foo) == 2 { ... } 

[19:03] <wolverian> er

[19:03] <TimToady> that's not a hyper

[19:03] <moritz> you could 'grep' or 'first' for it

[19:04] <wolverian> TimToady, yeah. sorry. I don't know what's wrong with me. :)

[19:04] <TimToady> junctions are meant to parallelize in boolean context

[19:04] <TimToady> (and short-circuit)

[19:10] <moritz> ?eval 'x'.HOW.methods

[19:10] *** evalbot_r16497 is now known as evalbot_r16506

[19:10] <evalbot_r16506> ["","reverse","chop","index","quotemeta","join","chars","bytes","LIST","ITEM","_split_str","bless"]

[19:10] <moritz> what's that empty method?

[19:11] <moritz> 'x'. or 'x'.""

[19:11] <moritz> or a bug?

[19:17] *** ozo joined
[19:19] <audreyt> moritz: not a bug; it's currently MO's way to get to the metaobject from an object, since all other method names must resolve "normally"

[19:20] <audreyt> maybe I should hide it from the .methods list

[19:20] *** ozo_ joined
[19:20] <audreyt> but it's more of an exposed implementation detail 

[19:20] <moritz> if you can't call 'x'.'', it should be hidden IMHO ;)

[19:20] <audreyt> agreed. (afk)

[19:26] *** Tene is now known as tenen

[19:27] <renormalist> Can someone explain me why binding with := is used in examples/algorithms/quicksort.pl ? Is it ok to use just = (it seems so)

[19:28] <audreyt> no real reason except it avoids creation of a mutable array structure

[19:31] <svnbot6> r16507 | audreyt++ | * Pugs.Class: Mask the "" magic-backdoor-method in the .^methods list

[19:31] <svnbot6> r16507 | audreyt++ |   as requested by moritz++

[19:36] <dduncan> speaking of MO, what is the major stuff still pending?

[19:37] <audreyt> dduncan: having .methods actually list stuffs in Pugs.Prim

[19:37] <audreyt> you'll note that a string can't actually only have those methods...

[19:37] <audreyt> ?eval "x".^methods

[19:38] <evalbot_r16506> Error: ␤Unexpected "^"␤expecting ".", "\187", ">>", "=", operator name, qualified identifier, variable name, "...", "--", "++", "i", array subscript, hash subscript or code subscript

[19:38] <audreyt> er, hm, it works here

[19:38] <audreyt> ?eval "x".HOW.methods

[19:38] <evalbot_r16506> ["","reverse","chop","index","quotemeta","join","chars","bytes","LIST","ITEM","_split_str","bless"]

[19:38] <dduncan> okay

[19:39] <audreyt> but in doing so all kinds of misassumptions and bad-multi-dispatching and model corner cases got turned up

[19:39] <audreyt> but I'm making progress... just need some continuous hours of cycles.

[19:43] <dduncan> good fortune

[19:46] *** lampus_ is now known as lampus

[19:49] *** awwaiid joined
[20:03] *** obvio171_ joined
[20:03] *** obvio171_ is now known as obvio171

[20:06] <moritz> S02 has an example: if $x ~~ 1..* {...}                 # if 1 <= $x <= +Inf

[20:07] <moritz> does this work because 1..* is a range rather than a list?

[20:07] <TimToady> Range object can be used as a matcher

[20:07] <moritz> ok

[20:07] <TimToady> pugs does not yet implement Range objects

[20:08] <TimToady> hence tends to get unhappy about 1..*

[20:08] <moritz> I noticed that ;)

[20:12] <audreyt> Juerd: 

[20:12] <audreyt> $ time perl -e 'print "x" x 10485768' > z

[20:12] <audreyt> real    0m0.221s

[20:12] <audreyt> user    0m2.320s

[20:12] <audreyt> $  time perl -e '$_ = "z"; open _; <_>' 

[20:12] <audreyt> real    0m10.120s

[20:12] <audreyt> user    0m4.608s

[20:12] <audreyt> on feather

[20:12] <audreyt> hypothesis: software raid going crazy?

[20:13] <audreyt> er,

[20:13] <audreyt> real    0m10.120s

[20:13] <audreyt> for read, and

[20:13] <audreyt> real    0m5.972s

[20:13] <audreyt> for write

[20:13] <audreyt> reading 10m shouldn't be 2x slower than writing 10m, and either way they shouldn't take many seconds...

[20:14] <audreyt> @tell Juerd (time perl -e 'print "x" x 10485768' > z) and (time perl -e '$_ = "z"; open _; <_>') are showing weird perf losses and that's what blocked commitbit

[20:14] <lambdabot> Consider it noted.

[20:15] <Juerd> audreyt: Could be anything

[20:15] <lambdabot> Juerd: You have 3 new messages. '/msg lambdabot @messages' to read them.

[20:15] <Juerd> audreyt: But I have nothing to diagnose it further than I have, and everything I did showed that it was okay

[20:15] <Juerd> @messages

[20:15] <lambdabot> Tene said 8d 11h 55m 24s ago: tracd uses a literal 'md5crypt' to check passwords in the htpasswd file. Patching tracd to recognize the '{SHA}' sequence in the htpasswd file is an option?

[20:15] <lambdabot> Tene said 8d 11h 53m 14s ago: python-support/trac/trac/web/auth.py:268

[20:15] <lambdabot> audreyt said 1m 12s ago: (time perl -e 'print "x" x 10485768' > z) and (time perl -e '$_ = "z"; open _; <_>') are showing weird perf losses and that's what blocked commitbit

[20:16] <moritz> is DMA enabled?

[20:16] <Juerd> moritz: It's S-ATA

[20:16] <moritz> ok

[20:16] <audreyt> k, but the fix is not going to be at commitbit level -- I upped to latest jifty and tuned db a bit

[20:16] <audreyt> all it does though is reducing 10mn per page to 3min

[20:17] <audreyt> commitbit is re-enabled

[20:17] <Juerd> 104857600 bytes (105 MB) gekopieerd, 0,688841 seconden, 152 MB/s

[20:17] <audreyt> and I need to crash into sleepland :)

[20:17] <moritz> night ;)

[20:17] <Juerd> audreyt: I understand it's feather, but I don't know what to do.

[20:17] <Juerd> audreyt: RAID seems to perform just right

[20:17] <Juerd> 152 OTOH, this could be cache

[20:17] *** polettix joined
[20:18] *** fglock joined
[20:19] <Juerd> 1073741824 bytes (1,1 GB) gekopieerd, 15,4734 seconden, 69,4 MB/s

[20:19] <Juerd> That's certainly not cached I think

[20:19] <Juerd> 70 MB/s is fine.

[20:19] <Juerd> 1;0 root@feather:~# time dd if=/dev/zero of=tmp/1024mb.bin count=1048576 bs=1024

[20:19] <Juerd> So I think the RAID is not guilty

[20:19] <Juerd> The question remains... what is...

[20:20] <fglock> would pugs be able to use a Range class implemented in Perl 6?

[20:20] <Juerd> 1;0 root@feather:~/tmp# time dd if=1024mb.bin of=/dev/null

[20:20] <Juerd> 2097152+0 records in

[20:20] <Juerd> 2097152+0 records uit

[20:20] <Juerd> 1073741824 bytes (1,1 GB) gekopieerd, 9,73728 seconden, 110 MB/s

[20:20] <Juerd> Also great.

[20:21] <Juerd> (Double speed, because it can read from both drives of the mirror set)

[20:22] <moritz> really misteriously

[20:23] <moritz> I once had a vim instance that lost its terminal and produced 100% CPU usage without showing up in top...

[20:23] <moritz> but theses cases are extremely rare

[20:23] <moritz> so I can't see how anything like that could happen regularly

[20:27] *** larsen_ joined
[20:31] <renormalist> Juerd: did you already consider that some malicious thing might doing that? like a root kit that sniffs local network with flood attacks (just an example). They can feel like high load.

[20:32] <Juerd> renormalist: Yes, considered that.

[20:33] <Juerd> renormalist: But chkrootkit couldn't find anything - do you know more ways to diagnose this?

[20:33] <moritz> Juerd: rkhunter

[20:33] <moritz> or maybe sniff traffic at the router

[20:34] <Juerd> Have sniffed already

[20:34] <Juerd> Nothing out of the ordinary

[20:34] <japhb> Juerd: can you paste a line or two of 'vmstat 5'?

[20:34] <Juerd> japhb: Sure

[20:34] <Juerd> procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu---- r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa

[20:35] <Juerd> 19  0      0 1183088  65336 266596    0    0   382   149    2   48 68  2 25  4

[20:35] <Juerd> That's during an apt-get install

[20:35] <Juerd> 16  0      0 1203192  65356 266484    0    0     1   132  300  231 99  1  0  0

[20:35] <Juerd> 10  0      0 1200040  65400 266692    0    0    18    50  342  284 98  2  0  0

[20:35] <Juerd>  r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa

[20:35] *** baest joined
[20:36] *** lisppaste3 joined
[20:36] <Juerd> I'm installing rkhunter now

[20:37] *** ggoebel joined
[20:37] <japhb> hmmm ... so user CPU% and io blocks are probably both the apt-get ...

[20:37] <japhb> ... the interrupts looks normal for clock tick + NIC irq, assuming you're not running a tickless kernel.

[20:38] <japhb> and the context switches is in line with the interrupts

[20:39] <diakopter>  /home/agentz/autosmoke has taken all available cpu for the past while...

[20:39] *** the_dormant joined
[20:39] <Juerd> diakopter: I assume it was niced?

[20:39] <diakopter> err

[20:39] <diakopter>  /home/agentzh/auto-smoke I mean

[20:39] <diakopter> I dunno. I was just looking at htop

[20:40] <Juerd> Agent said he'd niced everything, so that shouldn't be a problem

[20:40] <renormalist> Juerd: don't get panicked with 2.6 kernels when rkhunter/chkrootkit find LKM rootkits. They are often false positives. Unfortunately the "false" you never know ...

[20:40] *** rhandom left
[20:41] <Juerd> renormalist: Same with chkrootkit

[20:41] <Juerd> But that's why I disabled module support on this public box :)

[20:41] <Juerd> 1;0 root@feather:~# lsmod

[20:41] <Juerd> Module                  Size  Used by    Not tainted

[20:41] <Juerd> lsmod: QM_MODULES: Function not implemented

[20:42] *** zamolxes joined
[20:43] <integral> It's okay, you can still load modules via /dev/kmem :-)

[20:43] <Juerd> Those aren't technically LKMs :)

[20:43] <integral> I guess no one's written something that'll load real modules via that

[20:44] *** riffraff joined
[20:45] <riffraff> hi

[20:45] <moritz> hi riffraff ;)

[20:45] <riffraff> err.. trying to run make smoke yesterday, but it seems that something in t/xx-unspecced/ loops forever

[20:45] *** SubStack joined
[20:46] <riffraff> xx-uncategorized, sorry

[20:46] <riffraff> file http://svn.pugscode.org/pugs/t/xx-uncategorized/deref_doesnt.t

[20:46] <[particle]> should probably move that test to xx-infinite ;)

[20:46] <riffraff> sorrty, no svn and compiler atm, but it would be nice if someone could confirm that :)

[20:47] <moritz> it terminates within a second for me

[20:47] <moritz> r16436

[20:47] <[particle]> riffraff: platform?

[20:47] <riffraff> linux, ubuntu 7

[20:47] <riffraff> (now on win32)

[20:48] <riffraff> usua x86 cpu (athlon)

[20:55] *** weinigLap_ joined
[20:58] <diakopter> wolverian: are you around?

[20:59] <wolverian> yes

[21:00] <wolverian> well, let's make sure: diakopter, a highlighted yes.

[21:00] *** deq` joined
[21:01] <diakopter> wolverian: :)

[21:01] <wolverian> :)

[21:02] <obra> Juerd: are there any other builds of perl5 on feather?

[21:03] <Juerd> obra: Nafaik

[21:03] <obra> *nod*

[21:05] <TimToady> maybe trac installed a vm rootkit...

[21:05] <TimToady> and now the python gang are spying on every keystroke...

[21:05] <obra> Just for the hell of it, I'm going to build a 5.8.8 in my ~ to see if I get the same weird io performance

[21:06] <wolverian> hrm. any ideas what irssi scripts could be taking lots of cpu?

[21:06] <TimToady> Paranoids Я  Us

[21:06] <obra> Ya.

[21:07] <TimToady> :)

[21:08] <Juerd> obra++  # "ya"

[21:09] <diakopter> Juerd: anyone know why cron is set to renice all irssiz to -1 ?  It looks like someone tried to filter screen'd irssiz out, but failed.

[21:10] <Juerd> There's this store "HEИDRIKSEN" that I keep reading as Heidriksen.

[21:10] <obra> wow. ./configure.gnu is ... very slow

[21:11] <Juerd> diakopter: To keep this ultra-interactive process at priority

[21:11] <Juerd> diakopter: This has never been a problem, and shouldn't be, because irssi typically is done very quickly. It's just to prevent lag.

[21:11] <Juerd> rkhunter is finished and found nothing special

[21:11] <diakopter> ok... thanks.

[21:12] <wolverian> Juerd, I'm running irssi at 10 now and don't notice a difference. then again feather isn't terribly loaded right now.

[21:12] <Juerd> Hm, I saw htop running in top

[21:12] <Juerd> Nice tool.

[21:12] <wolverian> (only 11...)

[21:12] <Juerd> Who was running that? Thanks.

[21:12] <diakopter> that was me...

[21:13] <Juerd> diakopter++

[21:13] <wolverian> I ran it a week or ago, though ;)

[21:13] <Juerd> wolverian: Its load is at 12.

[21:13] <wolverian> s/or/or so/

[21:13] <wolverian> Juerd, yeah. then I guess: irssi++ # still interactive

[21:13] <diakopter> obra's configuring all of gnu

[21:13] <wolverian> (or maybe the linux scheduler) 

[21:13] <Juerd> Wow, htop takes even more resources than top :)

[21:13] <diakopter> yeah it's heavy

[21:14] <obra> running perl's configure script...shouldn't be doing this

[21:14] <diakopter> htop's tree view is nice

[21:14] *** ruz joined
[21:16] <Juerd> diakopter: I specifially like the nice- and nice+ :)

[21:17] <diakopter> svk info is using *tons* of cpu every so often, when called from examples/network/evalbot/evalbot-loop, but I don't see any !eval lately.  could people be messaging it directly or is that a normal part of the loop?

[21:17] <moritz> that's... nice *SCNR*

[21:17] <Juerd> I hae no idea

[21:18] <moritz> diakopter: the looks is propably to ensure it's rebuild every so often

[21:18] <moritz> s/looks/loop/

[21:18] <tenen> yes, it's to check if it needs to rebuild pugs

[21:18] <Juerd> wolverian: What kinds of irssi scripts do you run, by the way? 

[21:18] <tenen> perhaps you could commit a method of checking that used less cpu

[21:19] <diakopter> it could be switched to an svn commit-hook (with a forced wait-after-rebuild, and perhaps a !rebuildYourself command to force it), now that the repo is on the same machine.

[21:19] <wolverian> Juerd, I use hilightwin, go, wlstat, people, scriptassist, keepnick, dccstat, thistory, title, hideauth, bitlbee_tab_completion, usercount, cleanlinkchan, buf, splitlong

[21:20] <wolverian> I wonder if there's an irssi profiling plugin

[21:20] <Juerd> bitlbee_tab_completion is only active on tab presses, buf is only active on /upgrade, splitlong only for outgoing stuff

[21:20] <Juerd> scriptassist is safe, keepnick ought to be safe

[21:20] <Juerd> The rest I don't know

[21:21] <Juerd> If you're in a lot of active channels, things that process incoming output can damage performance

[21:21] <Juerd> Especially if brain dead regexes are used

[21:21] <wolverian> I'll look into it. thanks.

[21:22] * diakopter filters out wolverian's irssi from the cron renicer temporarily

[21:22] * wolverian feels fat

[21:22] *** IllvilJa joined
[21:23] <obra> Juerd: just for testing, would you be up for renicing my ./configure.gnu to a high priority?

[21:23] <obra> I'm curious to see if I'm just low in the IO queue or what.

[21:23] <obra> (I'm seeing about 3s per syscall check from configure. it's Impressive)

[21:24] <Juerd> obra: Go ahead

[21:26] <obra> About the same

[21:26] <Juerd> Then restore its priority please

[21:27] <Juerd> irssi is noticeably lagging 

[21:27] <wolverian> hrm. none of my scripts really parse input in large amounts

[21:27] <obra> ok

[21:27] <Juerd> wolverian: Anything that registers signal "message public"?

[21:27] <obra> restored

[21:28] *** SamB joined
[21:29] <wolverian> Juerd, a few. looking

[21:29] <Juerd> wolverian: Quite often, those have inefficient (.*) regexes and re-emit themselves.

[21:30] <wolverian> ah. hm. I think it might be people

[21:30] <Juerd> Don't blame the machine. Blame people!

[21:30] <wolverian> the script ;)

[21:30] * wolverian disables it 

[21:31] <Juerd> Holy crap that script is huge

[21:31] <wolverian> it's.. useful

[21:31] <wolverian> though it has features that have nothing to do with a people system

[21:31] <japhb> wolverian: what does it do?

[21:31] <wolverian> (like nick colours..)

[21:31] <Juerd> It better be, otherwise its usefulness/lines ratio would be very low... Like Brainfuck :)

[21:32] <wolverian> japhb, userlist with auto-opping, etc.. and lots of vaguely relevant things

[21:32] <wolverian> anyway, it's disabled for now.

[21:32] <wolverian> vim++ # vimgrep

[21:32] <Juerd> It does rather heavy things

[21:33] <Juerd> Like retrieving multiple settings per incoming line. Understandable, though.

[21:33] <obra> Juerd: next time you reboot, will you try audrey's trivial line-of-perl tests?

[21:33] <wolverian> I don't really see any way around it

[21:33] <Juerd> obra: How is that related to rebooting?

[21:33] <wolverian> it's not an essential script, so no worries if I can't use it

[21:33] <Juerd> obra: I'm sitting right next to feather. I can reboot it right now if you think that'll help

[21:33] <Juerd> wolverian: Could you /upgrade now to reset your CPU counter? :)

[21:34] <wolverian> sure :)

[21:34] <Juerd> Thanks

[21:34] <Juerd> buf.pl is the only Irssi script that I wrote and still use.

[21:34] <Jmax> what does it do?

[21:34] <Juerd> (Speaking of slow scripts...)

[21:34] <obra> Juerd: mostly, I'm curious to know if the issue is load related

[21:34] <Jmax> oh, neat

[21:34] <Juerd> Jmax: Store scroll buffers, and restore them after irssi's /upgrade has exec()ed a new irssi.

[21:35] <Juerd> obra: If I reboot now, your perl compile is aborted

[21:35] <obra> I don't want to inconvenience folks

[21:35] *** weinigLap joined
[21:35] <Juerd> obra: It needs reboots once in a while anyway

[21:35] <obra> Juerd:  I'm ok with that. the ./configure being slow strongly suggests taht it's not in perl

[21:36] <Juerd> obra: And it doesn't matter much at which time of the day you do it, there's always people using feather

[21:36] <obra> Well, it's only been up a day ;)

[21:36] *** isaacd joined
[21:36] <Juerd> This is one of the reasons I want to make it a xen box by the way

[21:36] <wolverian> that was a slow upgrade indeed

[21:36] <Juerd> Then it can just suspend and resume in between reboots

[21:37] <Juerd> wolverian: /upgrade+buf.pl on a slow box can cause a ping timeout...

[21:37] <wolverian> ouch..

[21:37] <Juerd> wolverian: I used to run irssi on a Pentium 100

[21:37] <obra> heh. *nod*

[21:37] <Juerd> buf.pl should be implemented in irssi's core, not in a script.

[21:38] <Juerd> A few function calls PER LINE OF THE SCROLL BUFFER is way too much to do in Perl space :)

[21:38] <Juerd> Scroll buffers tend to get large, and typically people have a dozen windows at least.

[21:39] <Juerd> buf.pl was a proof of concept. But as it goes, the proof of concept worked and nobody wanted to spend time rewriting it in C.

[21:39] <Juerd> Most people run irssi on dedicated fast idle boxes :)

[21:40] <Juerd> wolverian: Hm, apparently exec doesn't replace the CPU counter. Ah well

[21:41] *** rindolf joined
[21:42] <wolverian> Juerd, aw. I can restart irssi.

[21:43] <Juerd> wolverian: No, never mind.

[21:47] <meppl> good night

[21:49] *** perlDreamer joined
[21:50] <wolverian> load is down now.. I hope it was obra's configure, not my irssi.. :)

[21:51] <perlDreamer> ?eval {a => 1} eqv {a => 2}

[21:51] *** evalbot_r16506 is now known as evalbot_r16507

[21:51] <evalbot_r16507> Error: ␤Unexpected end of input␤Closing hash curly may not terminate a line;␤please add a comma or a semicolon to disambiguate

[21:51] <perlDreamer> ?eval {a => 1} eqv {a => 2};

[21:51] <evalbot_r16507> Bool::False

[21:52] <Juerd> wolverian: Hehe

[21:52] <perlDreamer> ?eval !({a => 1} eqv {a => 2});

[21:52] <evalbot_r16507> Bool::True

[21:52] * Juerd is configuring an old bleadperl just to see the load

[21:53] <perlDreamer> ?eval ok(!({a => 1} eqv {a => 2}), "eqv on anonymous hash references (1)");

[21:54] <evalbot_r16507> Error: No such subroutine: &ok

[21:55] <Juerd> Nah, load still goes up very quickly

[21:55] <obra> Juerd: is it possible to add a non-mirrored disk into the mix?

[21:55] <obra> even a small one

[21:56] <Juerd> obra: I can add USB drives while it's running

[21:56] <Juerd> obra: Do you need anything specific?

[21:56] <wolverian> ?eval {a => 1} !eqv {b => 1};

[21:56] <Juerd> obra: Note that I could write a GB at 67 MB/s and read it back at 110 GB/s. That suggests to me that disk I/O is not the problem.

[21:56] <evalbot_r16507> Bool::True

[21:56] <renormalist> does something need to be restarted to make rnu.pugscode.org work again?

[21:56] <wolverian> oo, that's implemented.

[21:56] <obra> I just want to try my syscalls against something not raided.

[21:57] <perlDreamer> wolverian: I was testing some things that are crashing pugs in a test

[21:57] <renormalist> s/rnu/run/

[21:57] <perlDreamer> but evalbot seems pretty happy with them

[21:57] <wolverian> perlDreamer, strange

[21:57] <perlDreamer> I'm going to update and rebuild

[21:57] <Juerd> obra: Wait, I'll attach a small USB disk

[21:59] <Juerd> I wonder if the kernel has usb support even :)

[21:59] <obra> :)

[21:59] <Juerd> It does

[21:59] <japhb> Juerd: what about soft errors and other such problems on the physical drives ...?  Your test may not hit the problem areas of the disk, while something that gets used frequently *does* happen to be hitting the failing sectors ...

[21:59] *** xinming_ joined
[21:59] <Juerd> obra: /mnt/for-jesse-only

[21:59] <Juerd> obra: Feel free to empty it if needed

[22:00] <Juerd> japhb: Could be, but it doesn't report any of it. Do you know how to examine this?

[22:00] <obra> ok :)

[22:00] *** Jedai joined
[22:00] <japhb> Juerd: I dunno, but smartmontools appeared in an apt-cache search.  That looks promising

[22:00] <Juerd> It's really nice to have servers at a few yards away instead of a 1h30m drive

[22:01] <Juerd> japhb: I was just installing that. I don't think it'll work on sata drives though

[22:01] <obra> Juerd: yeah. that has the same horrible IO performance

[22:02] <japhb> Hmmm, I would think if it supports both ATA and SCSI it's got a decent chance

[22:02] <obra> Juerd: done. thanks.

[22:02] <obra> "now I have no idea"

[22:02] <[particle]> what's the magic eight ball say?

[22:02] <Juerd> I've started smart short tests

[22:02] <Juerd> s/smart/SMART/

[22:03] <Juerd> 00:03 <@Juerd> purl: excuse for slow feather?

[22:03] <Juerd> 00:03 <+purl> Juerd: Recursivity.  Call back if it happens again.

[22:03] <wolverian> purl++

[22:05] <Juerd> # 1  Short offline       Completed without error       00%     17438         -

[22:05] <Juerd> (that's sda)

[22:05] <mikfire09> Juerd, smartmon does work on SATA drives.  I have it installed on my machine using SATA and it works fine.

[22:05] <Juerd> # 1  Short offline       Completed without error       00%     17436         -

[22:05] <Juerd> (that's sdb)

[22:05] <Juerd> ?eval 17438/24

[22:05] <evalbot_r16507> 8719/12

[22:06] <Juerd> I hate that.

[22:06] <Juerd> 726.583333333333

[22:06] <Juerd> 2 years, that's about right.

[22:06] *** drupek12 joined
[22:06] <wolverian> completed without error: 00%

[22:06] <wolverian> (cough)

[22:06] <Juerd> Num  Test_Description    Status                  Remaining  LifeTime(hours)  LBA_of_first_error

[22:06] <Juerd> wolverian: status: completed without error, remaining: 00%

[22:06] <wolverian> ah.

[22:07] <japhb> ?eval Num(17438/24)

[22:07] <Juerd> Doing long test on sda.

[22:07] <Juerd> Don't be surprised if disk access is slow now.

[22:07] <evalbot_r16507> Error: No such subroutine: &Num

[22:07] <japhb> ?eval my Num $foo = 17438/24; $foo

[22:07] <evalbot_r16507> \8719/12

[22:07] <wolverian> isn't Num the generic "any number type" 

[22:08] <wolverian> what's Float called? Float? :)

[22:08] <Juerd> eh, Float?

[22:08] <japhb> ?eval my num $foo = 17438/24; $foo

[22:08] <evalbot_r16507> \8719/12

[22:08] <Juerd> Why would floats have a special type? That's just Num.

[22:08] <mikfire09> ?eval +(17438/24);

[22:08] <Juerd> japhb: Pugs doesn't do native types afaik

[22:09] <Juerd> ?eval my aoeuaoeu $foo = 17438/24; $foo

[22:09] <japhb> Juerd: yeah, sigh.

[22:09] <evalbot_r16507> 8719/12

[22:09] <evalbot_r16507> \8719/12

[22:09] <Juerd> It doesn't really do *types*, apparently :)

[22:09] <wolverian> Juerd, they're different in haskell... ;)

[22:09] <japhb> ?eval my num $foo = (17438/24) ** 1.0; $foo

[22:09] <Juerd> wolverian: Perl's not haskell, so that doesn't answer the question :)

[22:09] <evalbot_r16507> \8719/12

[22:09] <wolverian> Juerd, to differentiate between rationals and irrationals I suppose

[22:09] <Juerd> ?eval 17438.0/24.0

[22:10] <japhb> ?eval my num $foo = ((17438/24) ** 0.5) ** 2; $foo

[22:10] <evalbot_r16507> 8719/12

[22:10] <wolverian> the foo/bars are even called Rats 

[22:10] <wolverian> but I don't think we have Irrats :)

[22:10] <evalbot_r16507> \899466600210769342731597381841/1237940039285380274899124224

[22:10] <Juerd> Mice

[22:10] <japhb> DAMMIT

[22:10] <Juerd> japhb: Hahaha

[22:10] *** thoughtpolice joined
[22:12] *** ribasushi joined
[22:12] <japhb> ?eval my num $foo = 2 ** (log(17438/24) / log(10)); $foo

[22:12] <japhb> oops

[22:12] <evalbot_r16507> \7.266624873097622

[22:12] <japhb> ?eval my num $foo = 2 ** (log(17438/24) / log(2)); $foo

[22:12] <evalbot_r16507> \726.5833333333331

[22:12] <japhb> HAH!

[22:13] <japhb> And it only ended up wrong by ~2 ulp

[22:14] <wolverian> Juerd, anyway, you're right. I don't see a float type. I was thinking Num was a role, with integer, rational and irrational implementations (among others)

[22:15] <wolverian> due to much haskelling lately, probably

[22:15] <diakopter> slow feather?  Put it in a vacuum.  That will reduce drag by quite a bit.

[22:20] *** SubStack joined
[22:21] <GeJ> Hello all.

[22:22] <GeJ> is everything right with svn.pugscode.org? I can't seem to be able to connect.

[22:23] <GeJ> hum, well, now I can

[22:24] <GeJ> sorry, please forgive me for the noise.

[22:25] *** lichtkind joined
[22:26] <lichtkind> ?eval @a = 1, 2; say @a;

[22:26] <evalbot_r16507> OUTPUT[12␤] Bool::True

[22:26] <lichtkind> ?eval @a = 1, 2; say @a.perl;

[22:26] <evalbot_r16507> OUTPUT[[1, 2]␤] Bool::True

[22:32] *** REPLeffect joined
[22:35] <TimToady> by the way \1/2 is incorrect output, since it would mean (\1)/2 by precedence

[22:35] <Jedai> ?eval my @array := [1, 2, 3]; @array.elems

[22:35] <evalbot_r16507> 1

[22:35] <masak> ouch.

[22:36] <TimToady> woops

[22:36] <TimToady> ?eval my @array := [1,2,3]; say +@array

[22:36] <evalbot_r16507> OUTPUT[1␤] Bool::True

[22:36] <masak> that's a misfeature, mehopes

[22:37] <TimToady> indeed

[22:37] <Jedai> Well Audrey say it will be fixed before the next release

[22:37] <Jedai> I was just checking

[22:37] <masak> ah.

[22:37] <masak> it does seem pretty fix-worthy

[22:40] <lichtkind> i only tried to figure out what this .perl does

[22:43] <moritz> lichtkind: output of perl code, like Data::Dumper does

[22:44] <lichtkind> thanks

[22:44] <perlDreamer> weird

[22:44] <perlDreamer> This test passes

[22:44] <perlDreamer> ok  {a => 1} === {a => 2}, "on anonymous hash references (1)";

[22:44] <perlDreamer> but prints no test comment after it

[22:44] <perlDreamer> and it also shouldn't pass

[22:45] <perlDreamer> is comma very binding?

[22:45] <lichtkind> moritz i currently proofread the IX perl6 article from renormalist, there i saw it the first time

[22:45] <moritz> lichtkind: ok ;)

[22:45] <perlDreamer> and if you parenthesize the boolean, then pugs pukes

[22:46] <moritz> I might proofread as well if he wants to, but currently he's not on the channel

[22:47] <lichtkind> moritz:  yeah he told me not to give that away since its for a big magazine

[22:48] <moritz> lichtkind: quite understandable ;)

[22:49] <moritz> lichtkind: do you read IX regularly?

[22:50] <lichtkind> moritz:  no its boring

[22:50] <moritz> most of it, yes ;)

[22:50] <lichtkind> too much buzzhyping

[22:56] <lichtkind> moritz:  but if you see something good id be interested

[22:56] *** Aankhen`` joined
[23:00] <lichtkind> good night

[23:00] <Aankhen``> Er, shouldn't the topic be a little more specific?

[23:00] <Aankhen``> As in, think twice before running `make install` rather than just installing Pugs?

[23:00] <moritz> Aankhen``: it should... go ahead and improve it

[23:01] *** Aankhen`` changes topic to: http://pugscode.org | Beware of `make install` and Pugs, it will do bad things to your system

[23:14] <Aankhen``> So is the whole coerce:<as> syntax dead?

[23:14] <Aankhen``> Seems a shame.

[23:14] <Aankhen``> Unless there's something similar which I missed.

[23:15] <moritz> can't you force coercion by forcing a context?

[23:15] <moritz> ?eval ~("foobar" ~~ m/oo/)

[23:15] <evalbot_r16507> "oo"

[23:15] <Aankhen``> Yes, but that depends on, e.g. redefining prefix:<~> for your classes.

[23:16] <moritz> and why do you want something else?

[23:16] <Aankhen``> Doesn't seem as universal as multi coerce:<as> (::?CLASS $self, Str $other) { ... } # or whatever the exact syntax was

[23:17] <wolverian> I suggested 'method --> Str { ... }' .. :)

[23:17] <moritz> why not use roles? "does Stringify"?

[23:18] <Aankhen``> Every object needs to `do Stringify` anyway, so why add a role for it?

[23:18] <wolverian> why add a role, you have a type already (Str)

[23:18] <Aankhen``> (That is to say, any object could conceivably be interpolated into a string.)

[23:28] <TimToady> I'm still thinking through the whole coerce/deep semantics thing.  I don't like the "is deep" approach much any more.

[23:29] <TimToady> and we have to deal with "as" vs "to" issues.

[23:30] <TimToady> which might or might not be the same as the difference between Str($x) and Str.new($x)

[23:32] <TimToady> this also might interact with dduncan's desire to require a readonly copy of a potentially rw argument

[23:32] <Aankhen``> Fun. ^_^

[23:32] <Aankhen``> TimToady: I have to say, I don't envy you your job.

[23:33] <moritz> language design is hard ;)

[23:33] <dduncan> I would probably comment on this discussion, but I'm in the middle of another chat that is $work related

[23:38] <GeJ> moritz: language design with continuous almost-realtime feedback from passionate users is harder.

[23:43] <TimToady> language design in a vacuum is even harder.  :)

[23:49] *** fridim joined
[23:52] *** ntgrl joined
