[00:04] *** Limbic_Region joined
[00:06] *** theorb joined
[00:07] *** jferrero left
[00:14] *** fglock joined
[00:18] *** theorbtwo left
[00:30] *** agjal left
[00:31] *** agjal joined
[00:46] *** lichtkind left
[00:51] *** nipotaway is now known as nipotan

[01:06] *** penk joined
[01:11] *** araujo joined
[01:15] *** cnhackTNT joined
[01:20] *** fglock left
[01:34] *** lyokato joined
[01:40] *** kanru left
[02:00] *** oneuponzero joined
[02:16] *** oneuponzero left
[02:36] <agjal> good night

[02:49] *** agjal left
[02:55] *** jatt` joined
[02:59] *** jatt`` joined
[03:05] *** kanru joined
[03:10] *** jatt left
[03:15] *** jatt` left
[03:23] *** __Ace__ left
[03:49] *** neuromu joined
[04:19] *** ruz left
[04:20] *** ruz joined
[04:25] *** Limbic_Region left
[04:35] *** penk left
[04:45] *** chacha_chaudhry joined
[04:45] *** amnesiac joined
[04:56] *** drbean_ joined
[05:42] *** poppper joined
[06:06] *** cnhackTNT left
[06:12] *** Ashizawa joined
[06:12] *** kanru left
[06:24] *** neuromu left
[06:31] *** kanru joined
[06:40] *** drbean_ left
[06:42] *** Aankhen`` joined
[07:17] *** Schwern joined
[07:44] *** jedai joined
[07:48] *** chacha_chaudhry left
[08:05] *** cnhackTNT joined
[08:14] *** ruz left
[08:37] *** franck___ joined
[08:41] *** franck____ joined
[08:43] *** pjcj joined
[08:47] *** franck_____ joined
[08:51] *** kanru left
[08:53] *** Ashizawa left
[08:54] *** Ashizawa joined
[08:59] *** franck___ left
[09:01] *** franck____ left
[09:05] *** poppper left
[09:12] *** franck___ joined
[09:17] *** Caelum left
[09:22] *** franck_____ left
[09:23] *** Caelum joined
[09:25] <pugs_svn> r19245 | Darren_Duncan++ | ext/Muldis-DB/ : added new Example Engine file Value.pm, replaces the previous PhysType.pm

[09:42] <Schwern> How does one declare a class method?

[09:43] *** franck____ joined
[09:58] *** franck___ left
[10:05] <Juerd_> Schwern: method foo { ... }

[10:06] *** amnesiac left
[10:07] <Juerd_> Oh, method ^foo { ... }

[10:08] *** cnhackTNT left
[10:09] <Schwern> Seriously?

[10:10] <Schwern> That seems like huffman encoding gone wild

[10:15] <Tene> Schwern: howso?

[10:18] *** franck___ joined
[10:18] <Schwern> How often does one declare a class method that they can't write "class"?

[10:18] <Schwern> And what does ^ have to do with a class?

[10:18] <Tene> ^ is used in a few other places to refer to class methods.

[10:19] <Schwern> That doesn't answer either question.

[10:19] <Tene> $obj.^foo is the same as $obj.WHAT.foo, as I recall

[10:19] <Schwern> HOW

[10:19] <Tene> Ahh, right.

[10:20] <Tene> Oh, you're right, that isn't what you asked.

[10:20] <Schwern> Didn't mean for that to come our rude, but I just watched the Matrix Reloaded again. :)

[10:20] <Schwern> Nevermind

[10:21] <Tene> No, no rudeness.

[10:21] <Schwern> What a second

[10:21] <Schwern> $obj.^foo... but ^foo is a class method...

[10:21] <Schwern> And you're calling it like an object method

[10:22] <Tene> Yes, used when you want to find out stuff about the class.

[10:22] <Tene> "Do something with the class that this object is an instance of."

[10:23] <Schwern> I see.

[10:23] <Schwern> At least its internally consistent.

[10:24] <Schwern> I'm sure there's some clever mnemonic like "^ is an up arrow indicating you should move up the aristotlean conceptual hierarchy from object to class" :)

[10:25] <Tene> Heh, sounds as good as any other mneumonic.

[10:31] *** franck____ left
[10:41] *** nipotan is now known as nipotaway

[10:45] *** lyokato left
[10:49] *** franck____ joined
[10:54] *** pmurias joined
[10:55] <pmurias> Schwern: $foo.^method is the shortcut for $foo.HOW.method

[10:56] <pmurias> they are more like metaclass instance methods than class methods

[10:57] *** Ashizawa left
[11:05] *** franck_____ joined
[11:06] *** franck___ left
[11:10] *** agjal joined
[11:12] *** pmurias left
[11:17] *** agjal is now known as meppel

[11:17] *** franck____ left
[11:23] *** franck_____ left
[11:32] *** fglock joined
[11:34] *** franck___ joined
[11:37] *** franck___ left
[11:42] *** lichtkind joined
[11:51] <wolverian> http://comments.gmane.org/gmane.comp.lang.perl.perl5.porters/52692 interesting issue with regexes and copy semantics 

[11:51] <lambdabot> Title: gmane.comp.lang.perl.perl5.porters, http://tinyurl.com/26m4de

[11:54] *** ludan left
[11:58] <fglock> [particle]: ping

[12:01] *** ludan joined
[12:15] *** franck___ joined
[12:15] *** turrepurre joined
[12:21] *** kanru joined
[12:27] <lichtkind> sorry for that question but how to text an print output of a script?

[12:28] *** fglock left
[12:30] *** fglock joined
[12:31] *** franck___ left
[12:35] *** pmurias joined
[12:37] *** tcliou left
[12:39] *** pmurias left
[12:39] *** pmurias joined
[13:20] *** amnesiac joined
[13:21] *** devogon joined
[13:24] <pugs_svn> r19246 | ruoso++ | [yap6] YAP6_NEW actually doesnt make sense...

[13:27] <ruoso> fglock, the Scalar, List and Hash need ways to coerce between themselves, doesn't it?

[13:28] <ruoso> I mean, Scalar should have a List and Hash methods and vice-versa for the there

[13:28] <ruoso> s/the there/the three/

[13:29] *** fglock__ joined
[13:32] <fglock__> ruoso: re coercion, there are several methods and functions, such as: @(), %(), +(), ~(), ?()

[13:35] <fglock__> and: postcircumfix:<{ }>, postcircumfix:<[ ]>, .Str, .true, ...

[13:38] <pmurias> fglock__: have you seen my question about the containers?

[13:38] *** dwave_ joined
[13:39] <fglock__> pmurias: I think v6.pm does have enough support containers, but I need to check it again to be sure

[13:39] <fglock__> support for

[13:42] <pmurias> lunch&

[13:42] *** pmurias left
[13:42] <fglock__> I think it's reasonable to backport kp6 to v6.pm,

[13:42] <fglock__> like I'm trying to do with kp6->perl6

[13:49] *** franck___ joined
[14:04] <pugs_svn> r19247 | ruoso++ | [yap6] all dispatchers have all the coercion methods...

[14:15] <fglock__> pmurias: re container methods, some things - binding, a "readonly" trait, a "type"

[14:17] *** lorn joined
[14:29] *** pbuetow left
[14:29] *** pbuetow joined
[14:31] *** polettix is now known as poletti

[14:31] *** poletti is now known as polettix

[14:38] *** Psyche^ joined
[14:43] *** Psyche^_ joined
[14:43] *** franck___ left
[14:49] *** alc joined
[14:55] *** Patterner left
[14:55] *** Psyche^_ is now known as Patterner

[14:56] *** Psyche^ left
[15:00] <fglock__> [particle]: ping

[15:15] *** njbartlett left
[15:15] *** njbartlett joined
[15:16] *** chris2 joined
[15:18] *** kanru left
[15:21] <fglock__> [particle]: ../../parrot nqp.pbc t/10-sub.t  # Segmentation fault

[15:22] <[particle]> fglock: that happens occasionally. lemme diagnose that today, after i rebuild parrot

[15:27] <fglock__> thanks

[15:27] <fglock__> [particle]: I'm playing with parrot scratchpads, I'm trying out PIR+nqp

[15:27] *** pmurias joined
[15:27] <pmurias> b

[15:28] <[particle]> excellent

[15:28] <fglock__> no progress yet - the hardcoded ":outer" is hard to play with

[15:30] <pmurias> is there an official example of a custom container?

[15:30] <fglock__> I wonder if I could generate parrot bytecode "by hand", or use low-level pasm

[15:30] <fglock__> pmurias: I don't think so

[15:32] *** fglock___ joined
[15:32] <fglock__> pmurias: there is "Lvalue subroutines" in S06

[15:33] <pmurias> fglock__: i think i know how Scalar's should work

[15:34] <pmurias> i'm not sure about VAR(%hash) and VAR(@array)

[15:34] <fglock__> VAR() exists for Scalar only

[15:34] <fglock__> (S12)

[15:35] <pmurias> thanks that cleared a lot

[15:35] <fglock__> spec-searchplugin ++

[15:41] *** jhorwitz joined
[15:42] <fglock__> compiling a PIR program to PASM, it seems to just throw away the :outer information

[15:43] <fglock__> looking for a decompiler

[15:43] <[particle]> there isn't one

[15:43] *** fglock left
[15:43] <fglock__> hmm - writing a decompiler, then :P

[15:45] <fglock__> [particle] is there a difference between compilers/ and languages/ ?

[15:45] *** drrho joined
[15:46] <[particle]> yes, compilers/ are guaranteed to ship with parrot

[15:47] <[particle]> languages/ is a place where hll devs can work in the parrot tree, but many of these will be ripped out later

[15:47] <fglock__> thanks

[15:47] <fglock__> reading compilers/imcc

[15:49] <fglock__> "imcc.l" has this message: This file is generated automatically by the Parrot build process from the file compilers/imcc/imcc.l

[15:49] <fglock__> :)

[15:50] <[particle]> yes, it does, inside a %top{ } block

[15:50] <[particle]> so the output file that flex generates will have that at the top of it

[15:51] <fglock__> got it

[15:51] <[particle]> maybe we can put a comment in there before %top{} to mention that the following block isn't to be taken literally

[15:54] *** drrho left
[15:54] <pmurias> [particle]: aren't compilers/ the compiler tools?

[15:54] <[particle]> compilers/ contains imcc, which isn't a compiler tool, it's the pir/pasm compiler

[15:55] <[particle]> we haven't been including that in our definition of pct

[15:56] <[particle]> it's possible that we could create a pir->pbc emitter, then we could ship a headless parrot (no compilers) and run bytecode on it

[15:56] <[particle]> right now, only imcc can do that (emit pbc)

[16:03] *** Psyche^ joined
[16:04] <fglock__> looking at newclosure() - pdd20 seems to imply that LexEnv is settable

[16:04] <fglock__> but we may need a dummy :outer anyway

[16:04] <[particle]> there may be tests to look at

[16:05] <fglock__> looking

[16:08] *** Psyche^_ joined
[16:09] <fglock__> t/op/lexicals.t

[16:10] <fglock__> I could add probably add some set_* methods for kp6

[16:14] *** jferrero joined
[16:18] <fglock__> hmm - get_lexenv() is implemented in PIR

[16:20] *** Patterner left
[16:20] *** Psyche^_ is now known as Patterner

[16:21] <fglock__> this doesn't help - I think we need a Sub.set_outer()

[16:24] *** Psyche^ left
[16:28] <[particle]> correct. we do need that, and don't have it yet

[16:28] <fglock__> [particle]: if I subclassed 'Sub', I don't think there is a way to actually instantiate mySubs, right?

[16:29] <fglock__> so I need to add a method to Sub itself

[16:29] *** ludanolo joined
[16:29] <[particle]> i haven't tried it, but it's possible if you map your subclassed Sub to Sub using the .HLL directive, it'll Just Work

[16:30] <fglock__> the same way perl6 does it, right?

[16:31] <fglock__> I'll try it out

[16:31] <[particle]> i'm not sure it'll work, but it's worth trying

[16:35] <fglock__> is there a way to mix C and PIR in the same file?

[16:38] <[particle]> no

[16:39] <[particle]> what do you want to do? if you need to write a pmc, i can help

[16:39] *** ludan left
[16:44] <pugs_svn> r19248 | fglock++ | [kp6-nqp] added Sub.pmc stub

[16:45] <fglock__> sure - I need to get the parameter and store it to sub->outer_sub

[16:45] <fglock__> and then make a test program

[16:45] <fglock__> v6/v6-KindaPerl6/misc/nqp/outer.pmc

[16:47] <fglock__> the usage is likely to be: $inner.set_outer($outer)

[16:48] <[particle]> i expect you'll take a PMC *outer param, and set sub->outer_sub

[16:50] <fglock__> yes, I just found an example

[16:53] <fglock__> what is the command line to compile a .pmc?

[16:53] <[particle]> you'll have to change the const nature of sub, though

[16:54] <[particle]> look it perl6's makefile

[16:54] *** idiotmax joined
[16:54] <fglock__> ok

[16:54] *** |Jedai| joined
[17:00] <fglock__> $ perl tools/build/pmc2c.pl --dump ~/pugs-svn-2/trunk/v6/v6-KindaPerl6/misc/nqp/outer.pmc  # no pmclass found

[17:02] <[particle]> perhaps you should name it perl6sub.pmc instead of outer.pmc or modify pmclass to say 'Outer' instead of 'Perl6Sub'

[17:04] <fglock__> fixed

[17:07] <pugs_svn> r19249 | fglock++ | [kp6-nqp] added preprocessing instructions

[17:13] <pugs_svn> r19250 | fglock++ | [kp6-nqp] fixed module name, compilation instructions don't work yet

[17:14] *** jedai left
[17:16] *** fglock___ left
[17:22] <pugs_svn> r19251 | fglock++ | [kp6-nqp] perl6sub.pmc compiles ok

[17:23] <fglock__> hmm - now what

[17:30] <fglock__> what is the PIR/nqp command to load a pmc

[17:33] <[particle]> if the library is compiled in, new 'Other' should do it

[17:33] <[particle]> (in pir)

[17:33] <[particle]> $P0 = new 'Other' # sorry

[17:34] <fglock__> is there a command for "dynamic loading"?

[17:34] *** rindolf joined
[17:35] <fglock__> compiled in == copied to parrot lib/ ?

[17:35] <[particle]> oh, no. there are makefile commands for that

[17:35] <[particle]> eg. PERL6_GROUP

[17:36] <fglock__> you mean Parrot makefile? I'm currently in v6/v6-KindaPerl6/misc/nqp/

[17:36] <[particle]> look in perl6's makefile

[17:36] <fglock__> ok

[17:38] <fglock__> I need to create a config/makefiles/root.in, right?

[17:38] <[particle]> do you have a languages dir under parrot?

[17:38] <fglock__> yes

[17:39] <fglock__> you mean, languages/kp6? no

[17:39] <[particle]> okay, yes, config/... is better then

[17:39] <[particle]> yes

[17:39] <fglock__> I wonder if it would be easier to patch perl6 instead

[17:40] <fglock__> or nqp

[17:40] <[particle]> if all you need is that one method, i'd try that first

[17:40] <[particle]> not nqp, no runtime there

[17:41] <fglock__> I'll try to organize kp6-parrot as a perl6 patch

[17:46] *** lichtkind_ joined
[17:49] <pmurias> fglock__: you mean the runtime?

[17:49] <pugs_svn> r19252 | fglock++ | [kp6-parrot] created v6/v6-KindaPerl6/parrot

[17:49] <pugs_svn> r19252 | fglock++ | - this directory replicates the Parrot directory structure;

[17:49] <pugs_svn> r19252 | fglock++ | it will contain patches to "parrot" and "perl6"

[17:49] <fglock__> pmurias: yes, "perl6" and "kp6" will share the runtime

[17:50] *** jjore-m left
[17:50] <pmurias> fglock__: that's good

[17:53] <fglock__> it seems the BEGIN and .perl code was lost - I'll patch that in later

[17:54] *** lorn is now known as Lorn

[17:55] <fglock__> what's the opposite of "fork"?

[17:55] <[particle]> join

[17:56] <fglock__> thanks

[18:01] <pugs_svn> r19253 | fglock++ | [kp6-parrot] added perl6sub.pmc from misc/nqp;

[18:01] <pugs_svn> r19253 | fglock++ | - added config file from "perl6" (unmodified)

[18:02] <fglock__> now I need a merge script

[18:03] *** lichtkind left
[18:07] <pugs_svn> r19254 | fglock++ | fixed last commit

[18:09] <pugs_svn> r19255 | fglock++ | [kp6] fixed last(2) commit

[18:14] <fglock__> looking for a "merge" in cpan

[18:16] <fglock__> clkao: ping

[18:17] <fglock__> clkao: I wonder if svk could handle merging files in different repositories

[18:22] *** jjore-m joined
[18:27] <pmurias> fglock__: editors such as vim and emacs have a merge function

[18:27] <pmurias> see vimdiff

[18:28] <fglock__> pmurias: I'm writing an automated merge

[18:28] *** ajs joined
[18:28] *** ajs left
[18:29] <pmurias> fglock__: there is a merge command on my system

[18:30] <fglock__> sure, but I need one that knows which files to merge, etc

[18:30] <fglock__> I forget command line switches quickly 

[18:30] *** turrepurre_ joined
[18:31] <pmurias> from app-text/rcs

[18:31] <pmurias> (it's a gentoo box)

[18:39] <lichtkind_> TimToady: can i make a suggestion due the titles of the synopses?

[18:39] *** lichtkind_ is now known as lichtkind

[18:43] <pugs_svn> r19256 | fglock++ | [kp6-parrot] added merge.pl script

[18:43] <pugs_svn> r19256 | fglock++ | - shows how to diff and patch "kp6-parrot" x "perl6"  

[18:46] *** gbacon joined
[18:46] *** ludanolo left
[18:49] *** ludanolo joined
[18:49] *** turrepurre left
[18:55] *** |Jedai| left
[18:59] <pugs_svn> r19257 | fglock++ | [kp6-parrot] added t/kp6/01-outer.t (fails)

[19:01] *** iblechbot joined
[19:02] <pugs_svn> r19258 | fglock++ | [kp6-parrot] fixed test; does nothing useful yet

[19:02] <fglock__> [particle]: I think I've got everything in place - now testing...

[19:03] <TimToady> lichtkind: what's that?

[19:04] <lichtkind> TimToady: howdy, im currently resurecting the perl6::bible from the grave, its now called perl6::Doc but one of the problems i ran into that the titles of the S, E and A are not CPAN friendly

[19:05] <fglock__> "Method 'set_outer' not found for invocant of class 'Closure'"

[19:05] <lichtkind> TimToady: a perfekt title is : =head1 NAME

[19:05] <lichtkind> Synopsis_01 - Overview

[19:06] <lichtkind> TimToady: i wanted the rename by myself but there were no longer in Pugs SVN

[19:07] <fglock__> lichtkind: how about fetching the most up-to-date text at Makefile.PL time?

[19:07] <fglock__> (maybe it already does this)

[19:07] <lichtkind> fglock__: what you mean?

[19:08] <fglock__> instead of bundling the documentation with the module

[19:08] <lichtkind> fglock__: yes i had this idea too

[19:08] <fglock__> cool

[19:08] <lichtkind> i already have an script that does that :9

[19:09] <lichtkind> iit has to be cleaned and styled  up a bit but it works and isnt that dirty

[19:12] <pugs_svn> r19259 | fglock++ | [kp6-parrot] added Closure class

[19:12] <pugs_svn> r19259 | fglock++ | - trying to fix this error message in "perl6":

[19:12] <pugs_svn> r19259 | fglock++ | "Method 'set_outer' not found for invocant of class 'Closure'"

[19:14] <fglock__> I'm still getting the "Method not found" error

[19:16] <fglock__> [particle]: do I need to modify the "perl6_group" files somwhow?

[19:16] <fglock__> some

[19:16] <fglock__> home &   # will backlog

[19:37] *** fglock__ left
[19:38] <Auzon> Or not ;)

[19:41] <[particle]> TimToady: no call today, correct?

[19:46] *** rindolf left
[19:51] <lichtkind> why synopses no longer in pugs\docs\Perl6\Spec ?

[19:52] *** Lorn_ joined
[19:53] *** Lorn left
[19:53] *** Lorn_ is now known as Lorn

[19:56] *** chris2 left
[19:59] *** ispy_ joined
[19:59] <Tene> [particle]: that was the decision last I heard.

[20:00] *** jisom left
[20:01] <Tene> Oh, nevermind, I'm thinking of something else.

[20:08] *** jedai joined
[20:10] *** jhorwitz left
[20:31] *** __Ace__ joined
[21:06] <pmurias> lichtkind: to restrict the number of people able to edit them

[21:06] <lichtkind> pmurias: as i could think myself i just want to get shure there was no accident :)

[21:10] *** Limbic_Region joined
[21:12] *** Aankhen`` left
[21:16] <lichtkind> pmurias: thanks

[21:17] *** ispy_ left
[21:21] <pmurias> lichtkind: i only guessed the reason, but i'm sure it isn't an accident

[21:38] *** amnesiac left
[21:47] *** REPLeffect joined
[21:48] *** jjore-m left
[21:53] *** Lorn left
[21:53] *** jjore-w left
[21:55] *** turrepurre_ left
[22:03] *** sverrej left
[22:04] *** lichtkind left
[22:07] *** justatheory joined
[22:19] *** iblechbot left
[22:20] *** pmurias left
[22:35] *** r0bby left
[23:02] *** chris2 joined
[23:19] *** fglock___ joined
[23:19] *** fglock___ is now known as fglock

[23:24] <pugs_svn> r19260 | fglock++ | [kp6-parrot] fixed makefile 

[23:38] *** fglock___ joined
[23:39] *** fglock___ left
[23:40] <pugs_svn> r19261 | ruoso++ | [yap6] declared the YAP6__CORE__num type, which is the return of the YAP6_NUMBR macro. I think all the coercions are declared now.

[23:40] *** fglock_ joined
[23:41] *** r0bby joined
[23:41] *** meppel left
[23:42] *** meppel joined
[23:48] *** fglock left
[23:50] <pugs_svn> r19262 | ruoso++ | [yap6] some cleaning and reordering of the yap6.h file

[23:51] <pugs_svn> r19263 | ruoso++ | [yap6] some cleaning and reordering of the yap6.h file

[23:58] *** fglock__ joined
[23:58] *** fglock__ is now known as fglock

