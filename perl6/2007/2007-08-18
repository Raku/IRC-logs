[00:00] <DarkWolf84> :)

[00:00] *** dpuu left
[00:01] <DarkWolf84> my vesion blocked when i tryed Inf..Inf

[00:04] <TimToady> if someone wants to hack in real Range objects, that's be cool

[00:04] <TimToady> *that'd

[00:11] <DarkWolf84> well I think that lazy evaluation is cool enogh

[00:13] <DarkWolf84> enough*

[00:13] <DarkWolf84> no need while(1)

[00:13] <DarkWolf84> :)

[00:18] *** audreyt_ joined
[00:19] *** ozo joined
[00:19] <pugs_svnbot> r17273 | lwall++ | STAR, PLUS etc now methods so that Grammar object can construct Match objects

[00:19] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17273

[00:19] <lambdabot> Title: Changeset 17273 - Pugs - Trac

[00:20] *** obvio171 joined
[00:22] *** obvio171 left
[00:22] *** obvio171 joined
[00:29] <wolverian> TimToady, heh, so you did find a way to get ¢ in...

[00:30] <wolverian> TimToady, great work, by the way. what does metholate do? it.. metholates?

[00:35] *** Blwood left
[00:40] *** sunnavy joined
[00:40] *** buetow left
[00:47] *** REPLeffect left
[00:48] *** PerlJam joined
[00:48] *** REPLeffect joined
[01:04] *** thoughtpolice left
[01:09] *** pro21ms4 joined
[01:25] *** sysfault joined
[01:32] *** drbean joined
[01:32] *** sysfault left
[01:42] *** kanru left
[01:43] *** MattRdo joined
[02:15] * spinclad keeps reading 'merthiolate'.  (those that know the word know it *stings*.)

[02:16] <spinclad> either that or 'methylate'

[02:17] <spinclad> i'm in ur dna, methylatin ur bases

[02:20] *** pro21ms4 left
[02:27] *** obvio171_ joined
[02:29] *** obvio171 left
[02:37] *** ofer left
[02:45] *** |Jedai| joined
[02:48] *** rindolf joined
[02:51] *** jhorwitz left
[02:53] <TimToady> it's a pun on methylate

[02:54] <wolverian> ah

[02:54] *** BinGOs_ joined
[02:56] *** thoughtpolice joined
[02:56] *** ofer joined
[03:03] *** justatheory joined
[03:03] *** jedai left
[03:07] *** BinGOs left
[03:30] *** Limbic_Region left
[03:43] *** mj41_ joined
[03:44] *** Psyche^ joined
[03:50] *** rindolf left
[03:51] *** perlbot joined
[03:58] *** weinig left
[04:01] *** Patterner left
[04:01] *** Psyche^ is now known as Patterner

[04:01] *** mj41 left
[04:09] *** MattRdo left
[04:15] *** Patterner left
[04:15] *** ofer left
[04:15] *** obvio171_ left
[04:15] *** PerlJam left
[04:15] *** sunnavy left
[04:15] *** audreyt_ left
[04:15] *** daxim_ left
[04:15] *** theorbtwo left
[04:15] *** mr_ank left
[04:15] *** xinming left
[04:15] *** IllvilJa left
[04:15] *** zigdon left
[04:15] *** stevan_ left
[04:15] *** hcchien left
[04:15] *** wolverian left
[04:15] *** rgs left
[04:15] *** araujo left
[04:15] *** marmic left
[04:15] *** lisppaste3 left
[04:15] *** baest left
[04:15] *** gugod left
[04:15] *** lotek left
[04:15] *** rafl left
[04:15] *** tcliou left
[04:15] *** perlbot left
[04:15] *** justatheory left
[04:15] *** melissa left
[04:15] *** pjcj left
[04:15] *** Elly left
[04:15] *** bloonix left
[04:15] *** shmem left
[04:15] *** mugwump left
[04:15] *** Maddingue left
[04:15] *** orafu left
[04:15] *** shachaf left
[04:15] *** ingy left
[04:15] *** LCamel left
[04:15] *** kane_ left
[04:15] *** Eidolos left
[04:15] *** cognominal left
[04:15] *** amnesiac left
[04:15] *** JarJarBinks left
[04:15] *** dalek left
[04:15] *** toly_ left
[04:15] *** Juerd_ left
[04:15] *** [particle] left
[04:15] *** lumi left
[04:15] *** SubStack left
[04:15] *** Gothmog_ left
[04:15] *** |Jedai| left
[04:15] *** dduncan left
[04:15] *** yves_ left
[04:15] *** nekokak left
[04:15] *** Caelum left
[04:15] *** rhr left
[04:15] *** diakopter left
[04:15] *** arguile_ left
[04:15] *** kane_ joined
[04:15] *** Eidolos joined
[04:15] *** cognominal joined
[04:15] *** amnesiac joined
[04:15] *** JarJarBinks joined
[04:15] *** dalek joined
[04:15] *** Juerd_ joined
[04:15] *** toly_ joined
[04:15] *** [particle] joined
[04:15] *** lumi joined
[04:15] *** SubStack joined
[04:15] *** Patterner joined
[04:15] *** ofer joined
[04:15] *** obvio171_ joined
[04:15] *** PerlJam joined
[04:15] *** sunnavy joined
[04:15] *** audreyt_ joined
[04:15] *** daxim_ joined
[04:15] *** theorbtwo joined
[04:15] *** mr_ank joined
[04:15] *** xinming joined
[04:15] *** IllvilJa joined
[04:15] *** zigdon joined
[04:15] *** stevan_ joined
[04:15] *** hcchien joined
[04:15] *** wolverian joined
[04:15] *** rgs joined
[04:15] *** araujo joined
[04:15] *** marmic joined
[04:15] *** lisppaste3 joined
[04:15] *** baest joined
[04:15] *** kolibrie joined
[04:15] *** gugod joined
[04:15] *** rafl joined
[04:15] *** lotek joined
[04:15] *** tcliou joined
[04:15] *** perlbot joined
[04:15] *** justatheory joined
[04:15] *** melissa joined
[04:15] *** mugwump joined
[04:15] *** Elly joined
[04:15] *** pjcj joined
[04:15] *** shachaf joined
[04:15] *** orafu joined
[04:15] *** bloonix joined
[04:15] *** shmem joined
[04:15] *** ingy joined
[04:15] *** Maddingue joined
[04:15] *** LCamel joined
[04:16] *** |Jedai| joined
[04:16] *** dduncan joined
[04:16] *** yves_ joined
[04:16] *** nekokak joined
[04:16] *** Gothmog_ joined
[04:16] *** Caelum joined
[04:16] *** rhr joined
[04:16] *** diakopter joined
[04:16] *** arguile_ joined
[04:21] *** hcchien_ joined
[04:24] *** obvio171_ left
[04:24] *** kanru joined
[04:29] *** hcchien left
[04:33] *** tcliou left
[04:34] *** jiing left
[04:34] *** idiotmax left
[04:35] *** jiing joined
[04:36] *** LCamel left
[04:41] *** idiotmax joined
[04:42] *** weinig joined
[04:43] *** weinig left
[04:43] *** weinig joined
[04:59] *** cls_bsd joined
[05:24] *** REPLeffect left
[05:31] *** weinig left
[05:31] *** nipra joined
[05:39] *** jisom joined
[05:45] *** unobe joined
[05:45] *** unobe left
[06:04] *** weinig joined
[06:11] *** justatheory left
[06:13] *** nekokak_ joined
[06:30] <pugs_svnbot> r17274 | Darren_Duncan++ | ext/Muldis-DB/ : renamed DB.pod to DB.pm ... part 1/2

[06:30] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17274

[06:30] <lambdabot> Title: Changeset 17274 - Pugs - Trac

[06:31] *** nekokak left
[06:36] *** kanru left
[06:36] *** hkb_aw left
[06:43] *** hkb_aw joined
[06:50] *** rhr_ joined
[06:58] *** Aankhen`` joined
[07:02] *** kanru joined
[07:03] *** hkb_aw left
[07:04] *** rhr left
[07:04] *** hkb_aw joined
[07:15] <pugs_svnbot> r17275 | Darren_Duncan++ | ext/Muldis-DB/ : renamed DB.pod to DB.pm ... part 2/2

[07:15] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17275

[07:15] <lambdabot> Title: Changeset 17275 - Pugs - Trac

[07:26] *** hkb_aw left
[07:27] *** hkb_aw joined
[07:30] *** amnesiac left
[07:34] *** weinig left
[07:44] *** iblechbot joined
[07:47] *** rhr_ is now known as rhr

[08:10] *** DarkWolf84 left
[08:21] *** sunnavy left
[08:21] <pugs_svnbot> r17276 | Darren_Duncan++ | ext/Muldis-DB/ : relicenced a small part of Muldis DB under the Lesser GPL

[08:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17276

[08:21] <lambdabot> Title: Changeset 17276 - Pugs - Trac

[08:24] <pugs_svnbot> r17277 | Darren_Duncan++ | likewise updated Pugs' README

[08:24] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17277

[08:24] <lambdabot> Title: Changeset 17277 - Pugs - Trac

[08:27] *** dduncan left
[08:33] *** BinGOs_ is now known as BinGOs

[08:53] *** charsba__ left
[08:55] *** kanru left
[08:55] *** kanru joined
[08:57] *** masak joined
[08:58] *** charsbar_ joined
[09:05] *** Blwood joined
[09:05] <masak> ?eval my $square = -> ($value) { $value ** 2 }; $square(20);

[09:05] <pugsbot_r17185> 400/1

[09:05] *** iblechbot left
[09:05] <masak> ?eval my $square = -> ($value) { $value ** 2 }; $square 20;

[09:06] <pugsbot_r17185> Error: ␤Unexpected "20"␤expecting operator

[09:06] <masak> I guess the latter couldn't be allowed, due to the policy, what's-it-called...

[09:06] <masak> "no two terms in a row"

[09:31] *** elmex joined
[09:41] *** jisom left
[09:51] *** ozo left
[09:56] *** dwave joined
[09:59] *** ozo joined
[10:02] *** laye joined
[10:05] *** laye left
[10:06] *** |Jedai| is now known as jedai

[10:07] *** masak left
[10:12] <moritz_> ?eval my &square = -> ($val) { $val**2 }; &square(20)

[10:12] <pugsbot_r17185> Error: Can't modify constant item: VStr "MkCode {isMulti = True, subName = \"&\", subType = SubPrim, subOuterPads = [], subInnerPad = MkPad (padToList []), subPackage = , subAssoc = AIrrelevantToParsing, subParams = [], subBindings = [], subSlurpLimit = [], subReturns = (mkType \"Any\"), subLValue = False, subBody = Prim ([Pugs.AST.Internals.Val] -> Pugs.AST.Eval.Eval Pugs.AST.Internals.Val), subCont = Nothing, subStarted = Just <ref:0xb6739c54>, 

[10:12] <moritz_> should that work?

[10:19] *** chris2 joined
[10:23] *** Blwood_ joined
[10:24] *** Blwood_ left
[10:25] *** ozo left
[10:25] *** Blwood_ joined
[10:31] *** barney joined
[10:33] *** buetow joined
[10:39] *** Blwood left
[10:44] *** melissa left
[10:44] *** melissa joined
[10:57] *** rindolf joined
[11:07] *** iblechbot joined
[11:07] *** BinGOs left
[11:07] *** BinGOs joined
[11:12] *** BinGOs left
[11:12] *** BinGOs joined
[11:19] *** poky joined
[11:27] *** poky is now known as Camel0t

[11:28] *** Camel0t is now known as Lilly

[11:28] *** Lilly is now known as lotus

[11:28] *** lotus left
[11:32] *** turrepurre left
[11:37] *** poky joined
[11:41] *** woo` joined
[12:18] <moritz_> ?eval say "foo"

[12:18] <pugsbot_r17185> OUTPUT[foo␤] Bool::True

[12:25] *** iblechbot left
[12:29] *** |Jedai| joined
[12:29] *** jedai left
[13:00] *** laye joined
[13:15] *** hkb_aw left
[13:25] *** jisom joined
[13:26] *** hkb_aw joined
[13:38] *** pjmm joined
[13:41] *** pjmm left
[13:46] *** buetow left
[13:46] *** buetow joined
[13:52] *** cj left
[14:00] *** BinGOs left
[14:11] *** nipra left
[14:25] *** jisom left
[14:46] *** devogon joined
[14:56] *** exp_evalbot joined
[14:56] <pugs_svnbot> r17278 | moritz++ | added misc/evalbot/, a p5 pluggable evalbot.

[14:56] <pugs_svnbot> r17278 | moritz++ | Currently echo and kp6 are "supported"

[14:56] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17278

[14:56] <lambdabot> Title: Changeset 17278 - Pugs - Trac

[14:56] <moritz_> #kp6 class Main { say "hello, world" }

[14:56] <exp_evalbot> OUTPUT[hello, world␤]

[14:57] *** DarkWolf84 joined
[14:59] *** drrho joined
[15:03] *** iblechbot joined
[15:05] *** exp_evalbot left
[15:17] *** Gothmog_ left
[15:17] *** Gothmog_ joined
[15:18] *** exp_evalbot joined
[15:20] *** iblechbot left
[15:31] <moritz_> #kp6 class Main { say(2*3); }

[15:31] <exp_evalbot> OUTPUT[Undefined subroutine &main:: called at lib/KindaPerl6/Runtime/Perl5/MOP.pm line 28.␤]

[15:32] <wolverian> whoo :)

[15:34] *** nekokak joined
[15:35] <pugs_svnbot> r17279 | moritz++ | [p5 eval]:

[15:35] <pugs_svnbot> r17279 | moritz++ |  * some documentation

[15:35] <pugs_svnbot> r17279 | moritz++ |  * two example config files

[15:35] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17279

[15:35] <lambdabot> Title: Changeset 17279 - Pugs - Trac

[15:36] <moritz_> #kp6 class Main { say 2+2 }

[15:36] <exp_evalbot> OUTPUT[4␤]

[15:36] <moritz_> #kp6 class Main { say 2*2 }

[15:36] <exp_evalbot> OUTPUT[Undefined subroutine &main:: called at lib/KindaPerl6/Runtime/Perl5/MOP.pm line 28.␤]

[15:36] <moritz_> no multiplication is NYI? *g*

[15:38] *** exp_evalbot left
[15:38] *** exp_evalbot joined
[15:43] *** BinGOs joined
[15:45] <TimToady> ?eval my &square := -> ($val) { $val**2 }; square 20

[15:45] <pugsbot_r17185> 400/1

[15:47] <moritz_> so '&' is not an "ordinary" sigil?

[15:49] <moritz_> #kp6 class Main { my &square := -> ($val) { $val**2 }; square 20

[15:49] <exp_evalbot> OUTPUT[]

[15:49] <moritz_> Syntax Error

[15:49] *** nekokak_ left
[15:49] *** hkb_aw is now known as hakobe

[15:51] <wolverian> forgot a closing }

[15:51] <moritz_> #kp6 class Main { my &square := -> ($val) { $val**2 }; square 20 }

[15:51] <exp_evalbot> OUTPUT[]

[15:51] <moritz_> still Syntax Error

[15:51] <moritz_> #kp6 class Main { my &square := sub  ($val) { $val**2 }; square 20 }

[15:51] <exp_evalbot> OUTPUT[Illegal declaration of subroutine main:: at - line 1.␤]

[15:53] *** exp_evalbot left
[15:53] <pugs_svnbot> r17280 | moritz++ | [p5 evalbot]: experimental pugs executer

[15:53] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17280

[15:53] <lambdabot> Title: Changeset 17280 - Pugs - Trac

[15:53] *** exp_evalbot joined
[15:53] <moritz_> #pugs my &square := -> ($val) { $val**2 }; square 20

[15:53] <exp_evalbot> OUTPUT[]

[15:53] <moritz_> oops

[15:54] <moritz_> #pugs my &square := -> ($val) { $val**2 }; say square 20

[15:54] <exp_evalbot> OUTPUT[400␤]

[15:54] <moritz_> exp_evalbot ignores any return values, you have to print/say it

[15:55] <TimToady> interesting that it gets rid of the /1

[15:55] <TimToady> I think it should print the return value iff there's no output maybe

[15:56] <moritz_> I don't know how to achieve that

[15:56] <moritz_> I run a pugs process for each eval, and capture the output

[15:59] <moritz_> now the next time a perl 5 coder asks what to do, tell him/her to improve evalbot (for example error reporting)

[15:59] <moritz_> ;-)

[16:01] *** masak joined
[16:02] *** rhizo left
[16:04] *** Limbic_Region joined
[16:05] *** poky is now known as zomgb00bie

[16:07] *** rhizo joined
[16:23] *** laye left
[16:31] *** Caelum left
[16:33] *** franck___ joined
[16:37] <moritz_> #kp6 class Main { while(1){ 1; } }

[16:37] <exp_evalbot> OUTPUT[]

[16:37] <moritz_> #kp6 class Main { while 1 { 1; } }

[16:37] <exp_evalbot> OUTPUT[]

[16:40] *** exp_evalbot left
[16:40] <pugs_svnbot> r17281 | moritz++ | [p5 evalbot]: small tweaks

[16:40] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17281

[16:40] <lambdabot> Title: Changeset 17281 - Pugs - Trac

[17:01] *** barney left
[17:05] *** Limbic_Region left
[17:07] *** Psyche^ joined
[17:07] *** Patterner left
[17:07] *** Psyche^ is now known as Patterner

[17:08] *** franck___ left
[17:17] *** exp_evalbot joined
[17:21] *** nekokak_ joined
[17:35] *** nekokak left
[17:49] *** IllvilJa left
[17:52] <pugs_svnbot> r17282 | fglock++ | [kp6] Subset - added a little more impl

[17:52] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17282

[17:52] <lambdabot> Title: Changeset 17282 - Pugs - Trac

[17:58] *** chris2 left
[18:05] *** pmurias joined
[18:07] *** fglock joined
[18:10] <spinclad> #kp6 say 1

[18:10] <exp_evalbot> OUTPUT[Syntax Error␤]

[18:11] <pmurias> fglock: hi

[18:11] <spinclad> #kp6 class Main { say 1; }

[18:11] <exp_evalbot> OUTPUT[1␤]

[18:11] <spinclad> #kp6 say 1;

[18:11] <fglock> pmurias: hi

[18:11] <exp_evalbot> OUTPUT[Syntax Error␤]

[18:11] <spinclad> #kp6 class Main { say 1 }

[18:11] <exp_evalbot> OUTPUT[1␤]

[18:11] <fglock> spinclad: kp6 always demands a class declaration - this is a remain from the mp6 grammar

[18:13] <spinclad> so there's an implicit Main.new() in the runtime system, as it were?

[18:14] <fglock> hmm - kind of

[18:17] <spinclad> #kp6 class This { say 1 }

[18:17] <exp_evalbot> OUTPUT[1␤]

[18:17] <spinclad> oh, no...

[18:18] <spinclad> #kp6 class This { say 1 }; class Other { say 2 }

[18:18] <exp_evalbot> OUTPUT[1␤2␤]

[18:18] <moritz_> it seems that everything in the classes are just executed as normal code

[18:19] <spinclad> they just all have to be wrapped in classes ... top level is <class>*

[18:19] *** cognominal_ joined
[18:19] <fglock> #pugs class This { say 1 }; class Other { say 2 }

[18:19] <exp_evalbot> OUTPUT[1␤2␤]

[18:19] <fglock> same

[18:19] <spinclad> #kp6 class This { class That { say 1 }; That.new() }

[18:19] <exp_evalbot> OUTPUT[Undefined subroutine &main:: called at lib/KindaPerl6/Runtime/Perl5/MOP.pm line 28.␤]

[18:20] <fglock> looking...

[18:20] <wolverian> lovely errors :) 

[18:20] <spinclad> #kp6 class This { 1 }; say That.new()

[18:20] <exp_evalbot> OUTPUT[Syntax Error␤]

[18:21] <spinclad> #kp6 class This { class That { say 1 } }

[18:21] <exp_evalbot> OUTPUT[Undefined subroutine &main:: called at lib/KindaPerl6/Runtime/Perl5/MOP.pm line 28.␤]

[18:21] <spinclad> #kp6 class This { 1 }; class That { say That.new() }

[18:21] <exp_evalbot> OUTPUT[That␤]

[18:21] <spinclad> #kp6 class This { 1 }; class That { say That.new }

[18:21] <exp_evalbot> OUTPUT[That␤]

[18:22] <masak> this definitely gives a more solid feel for kp6

[18:22] <spinclad> great fun!

[18:22] <masak> kudos to whomever set exp_evalbot up!

[18:22] <moritz_> masak: that was me ;)

[18:22] <masak> moritz_: kudos

[18:22] <masak> moritz_++

[18:22] <spinclad> moritz_++

[18:22] <fglock> moritz++ :)

[18:23] <masak> moritz_++ # the best thing about karma is that it's free

[18:23] <masak> moritz++ # oh right

[18:24] <moritz_> r17278 to r17281 

[18:24] <moritz_> thanks

[18:24] <moritz_> "karma is like software - it's better when it's free" ;-)

[18:24] <masak> *lol*

[18:25] <rindolf> moritz_: heh.

[18:25] <rindolf> moritz_++

[18:25] <moritz_> fglock: please be sure to tell when you implement a non-safe operation in kp6

[18:25] <masak> :)

[18:25] <fglock> moritz_: ok!

[18:25] <moritz_> and perhaps a safe mode along with it ;-)

[18:26] <spinclad> 'well volunteered!'

[18:26] <pugs_svnbot> r17283 | fglock++ | [kp6] infix:<*>

[18:26] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17283

[18:26] <lambdabot> Title: Changeset 17283 - Pugs - Trac

[18:26] <fglock> #kp6 class Main { say 2 * 2 }

[18:26] <exp_evalbot> OUTPUT[Undefined subroutine &main:: called at lib/KindaPerl6/Runtime/Perl5/MOP.pm line 28.␤]

[18:26] <moritz_>  #kp6 class Main { say 2 * 2 }

[18:26] <exp_evalbot> OUTPUT[4␤]

[18:27] <moritz_> the svn repo doesn't update itself automagically

[18:27] <fglock> ah

[18:27] <fglock> thanks

[18:27] <moritz_> maybe I should add a cronjob, and print the svn revision as well

[18:28] <wolverian> or put it in the nick

[18:28] <wolverian> like pugsbot_r17185 

[18:28] <spinclad> say $?REVISION

[18:28] <moritz_> wolverian: that's a bad idea if pugs revision != kp6 revision

[18:28] <pmurias> ?kp6 class Main {use IO::File:from<perl5>;$dir = IO::Dir.new('.')}

[18:28] <lambdabot> (line 1, column 12):

[18:28] <lambdabot> unexpected "{"

[18:28] <lambdabot> expecting variable, "(", operator or end of input

[18:28] <wolverian> I meant of course using the kp6 revision :)

[18:28] <moritz_> wolverian: pugs can take a few minutes to rebuild

[18:28] <pmurias> ?kp6 class Main {use IO::File:from<perl5>;$dir = IO::Dir.new('.');}

[18:28] <lambdabot> (line 1, column 12):

[18:28] <lambdabot> unexpected "{"

[18:28] <lambdabot> expecting variable, "(", operator or end of input

[18:28] <wolverian> erm, what does pugs have to do with kp6?

[18:28] <moritz_> pmurias: it's #kp6

[18:29] <moritz_> #pugs say "foo"

[18:29] <exp_evalbot> OUTPUT[foo␤]

[18:29] <pmurias> #kp6 class Main {use IO::File:from<perl5>;$dir = IO::Dir.new('.');}

[18:29] <exp_evalbot> OUTPUT[Undefined subroutine &main:: called at lib/KindaPerl6/Runtime/Perl5/MOP.pm line 28.␤]

[18:29] <wolverian> ah, okay

[18:29] * thoughtpolice yawns

[18:29] <thoughtpolice> how goes it?

[18:29] <pmurias> #kp6 class Main {use IO::File:from<perl5>;}

[18:29] <exp_evalbot> No output

[18:29] <pmurias> #kp6 class Main {use IO::File:from<perl5>;my $file = IO::File('test');}

[18:29] <exp_evalbot> OUTPUT[Undefined subroutine &main:: called at lib/KindaPerl6/Runtime/Perl5/MOP.pm line 28.␤]

[18:30] *** weinig joined
[18:30] <moritz_> .oO( maybe I should run that evalbot as a non-priviliged user )

[18:31] <spinclad> .oO( in a chroot jail )

[18:32] <moritz_> spinclad: probably, yes

[18:32] <wolverian> with a strict apparmor profile

[18:32] <wolverian> :)

[18:32] <spinclad> .oO( niced and ulimited )

[18:32] <fglock> #kp6 class Main {use IO::File:from<perl5>;my $file = IO::File.new('test');}

[18:32] <exp_evalbot> No output

[18:32] <fglock> #kp6 class Main {use IO::File:from<perl5>;my $file = IO::File.new('test');say $file}

[18:32] <exp_evalbot> OUTPUT[Undefined subroutine &main:: called at lib/KindaPerl6/Runtime/Perl5/MOP.pm line 28.␤Undefined subroutine &main:: called at lib/KindaPerl6/Runtime/P...]

[18:32] <moritz_> it fork()s and uses BSD::Resource in the child

[18:33] <pmurias> #kp6 class Main { use IO::File:from<perl5>; my $file = IO::File.new('test'); }

[18:33] <exp_evalbot> No output

[18:33] <fglock> #kp6 class Main {use IO::File:from<perl5>;my $file = IO::File.new('test');say 'still here'}

[18:33] <exp_evalbot> OUTPUT[still here␤]

[18:34] <pmurias> is there a standard perl5 module with nasty side effects?

[18:34] <spinclad> #kp6 class Main { method hi { "there" }; Main.new.hi }

[18:34] <exp_evalbot> OUTPUT[Syntax Error␤]

[18:34] <fglock> there probably is

[18:35] <pmurias> is the eval box in a good enough sandbox?

[18:35] <moritz_> not atm

[18:35] <fglock> class Main { method hi { "there" }; say (Main.new).hi }

[18:35] <spinclad> #kp6 class Main { method hi { "there" }; Main.new().hi() }

[18:35] <exp_evalbot> OUTPUT[Syntax Error␤]

[18:35] <fglock> #kp6 class Main { method hi { "there" }; say (Main.new).hi }

[18:35] <exp_evalbot> OUTPUT[there␤]

[18:36] <fglock> spinclad: precedence problems

[18:37] <spinclad> so it parsed as Main.(new.hi) ?

[18:37] <fglock> " Main.new .hi " I guess

[18:37] <spinclad> Semantics Error

[18:38] <spinclad> #kp6 class Main { method hi { "there" }; say (Main .new) .hi }

[18:38] <exp_evalbot> OUTPUT[Undefined subroutine &main:: called at lib/KindaPerl6/Runtime/Perl5/MOP.pm line 28.␤]

[18:38] <pmurias> recompiling Grammar.pm is so slow...

[18:38] <spinclad> #kp6 class Main { method hi { "there" }; say (Main\ .new)\ .hi }

[18:38] <exp_evalbot> OUTPUT[Syntax Error␤]

[18:40] <spinclad> (kp6 should of course *never* include surface sugar like unspace)

[18:42] <fglock> spinclad: the grammar refactoring is set for Phase 5 (maybe in 3 months)

[18:42] <fglock> but unspace would be easy to implement

[18:43] <spinclad> but won't kp6 remain a least-features internal representation, that STD translates into?

[18:45] <pmurias> as far as i know, the plan is to use STD.pm directly

[18:45] <fglock> no, that's mp6

[18:46] <fglock> the plan is for kp6 to be able to run STD, yes

[18:47] *** knewt_ joined
[18:47] <fglock> mp6 == least-features, bootstrapped 

[18:47] <pmurias> how should i code ... <foo> ... | ... <foo> ... in mp6?

[18:47] <fglock> kp6 == full-featured, written in mp6

[18:47] <pmurias> with ... being anything

[18:48] <fglock> pmurias: you mean, in a token?

[18:49] <fglock> would you paste what you are trying? it looks correct

[18:49] * moritz_ sets up a chroot

[18:50] <pasteling> "rindolf" at 88.154.187.2 pasted "Fortune based on the talk" (15 lines, 532B) at http://sial.org/pbot/26923

[18:51] <spinclad> huh.  thought i remembered kp6 taking mp6's place in the chain...

[18:52] <spinclad> (taking -> being planned to take)

[18:53] *** hakobe is now known as hkb_zz

[18:54] <pmurias> how should i nopaste?

[18:54] <fglock> the next step in the STD direction is implementing multis, which depend on signatures, which depend on subsets - which is what I'm trying to do...

[18:54] <fglock> pmurias: are you getting an error?

[18:57] *** kcwu joined
[18:58] <pmurias> i use <exp_stmts2> and a temorary variable $exp_stmts

[19:00] <pmurias> seen http://sial.org/pbot/ will paste if it doesn't work

[19:00] <buubot> pmurias: Sorry, I haven't seen http://sial.org/pbot/

[19:00] <lambdabot> Title: sial.org Pastebot - pasteling

[19:00] <moritz_> bot war ;)

[19:02] <thoughtpolice> bots are silly.

[19:05] *** knewt left
[19:05] <masak> thoughtpolice: in a good way ;)

[19:06] <moritz_> thoughtpolice: and sometimes very usefull

[19:06] <moritz_> thoughtpolice: that's why I wrote a new one lately

[19:06] <masak> bots on #perl6 make me hope for AI again for some reason

[19:06] <thoughtpolice> moritz_: what's this one do now?

[19:06] <moritz_> thoughtpolice: eval through kp6 or pugs

[19:07] <spinclad> #kp6 class Hello { say "hi" }

[19:07] <exp_evalbot> OUTPUT[hi␤]

[19:07] <moritz_> #pugs say "Hi thoughtpolice"

[19:07] <exp_evalbot> OUTPUT[Hi thoughtpolice␤]

[19:07] <thoughtpolice> moritz_: awesome. :)

[19:07] <pmurias> fglock: doing it a different way

[19:07] <thoughtpolice> moritz_: my bot is working right now

[19:07] <thoughtpolice> but it's not too useful

[19:07] <moritz_> #echo "foo" # that's stupid, I know ;-)

[19:07] <exp_evalbot> OUTPUT["foo" # that's stupid, I know ;-)]

[19:07] <thoughtpolice> because there are no plugins for it :(

[19:08] <thoughtpolice> although if you know little haskell you could probably write something for it without much hassle.

[19:08] <pmurias> (i'm trying to make #kp6 say "Hi" work)

[19:09] <thoughtpolice> moritz_: think of it like a baby-lambdabot :p

[19:10] <moritz_> thoughtpolice: cool

[19:10] <fglock> pmurias: you need to make it enter the Main namespace, if it is not yet into any namespaces

[19:13] <fglock> pmurias: this is a bit tricky, because when you declare a MyModule, it is not Main::MyModule

[19:14] <spinclad> make it enter the null-named root namespace?

[19:14] <TimToady> #echo `ls`

[19:14] <exp_evalbot> OUTPUT[`ls`]

[19:15] <spinclad> (Main doesn't seem to be special)

[19:16] <fglock> I mean: class Main { class X { ... } }  declares Main::X

[19:16] <fglock> but   sub x { ... }   declares Main::x

[19:17] <fglock> but   class X { ... }   declares X

[19:17] <fglock> so you need some extra flags there

[19:19] *** penk joined
[19:19] <pmurias> fglock: my version passes the test suit, i'll commit and try to fix it later

[19:20] <fglock> pmurias: ok

[19:21] *** exp_evalbot left
[19:22] *** exp_evalbot joined
[19:22] <pmurias> ?kp6: class Main { class X {} }

[19:22] <lambdabot> Unknown command, try @list

[19:22] <pmurias> #kp6 class Main { class X {} }

[19:22] <exp_evalbot> OUTPUT[Undefined subroutine &main:: called at lib/KindaPerl6/Runtime/Perl5/MOP.pm line 28.␤]

[19:22] <pmurias> #kp6 class Main { class X { say "hi"} }

[19:22] <exp_evalbot> OUTPUT[Undefined subroutine &main:: called at lib/KindaPerl6/Runtime/Perl5/MOP.pm line 28.␤]

[19:23] <masak> pmurias: it doesn't like nested classes, it seems

[19:24] *** exp_evalbot left
[19:24] *** exp_evalbot joined
[19:24] *** exp_evalbot left
[19:24] *** exp_evalbot joined
[19:24] <pmurias> #kp6 class Main {};class Main {}'

[19:24] <exp_evalbot> OUTPUT[Syntax Error␤]

[19:24] <pmurias> #kp6 class Main {};class Main {};

[19:24] <exp_evalbot> No output

[19:24] <pmurias> #kp6 class Main {say 1};class Main {say 2};

[19:25] <exp_evalbot> OUTPUT[1␤2␤]

[19:25] *** knewt joined
[19:32] <pugs_svnbot> r17284 | pmurias++ | kp6: handles stmts outside of classes

[19:32] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17284

[19:32] <lambdabot> Title: Changeset 17284 - Pugs - Trac

[19:36] <moritz_> #kp6 say "foo"

[19:36] <exp_evalbot> OUTPUT[Syntax Error␤]

[19:36] <DarkWolf84> #kp6 "foo".say

[19:36] <exp_evalbot> OUTPUT[Syntax Error␤]

[19:36] *** DarkWolf84 left
[19:37] *** DarkWolf84 joined
[19:37] <pugs_svnbot> r17285 | pmurias++ | kp6: updating precompiled file

[19:37] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17285

[19:37] <lambdabot> Title: Changeset 17285 - Pugs - Trac

[19:37] <pmurias> moritz_: didn't commit the compiled version by accident

[19:37] <moritz_> #kp6 say "foo"

[19:37] <exp_evalbot> OUTPUT[foo␤]

[19:38] <moritz_> pmurias++

[19:38] <pmurias> i lack a bit of svk skill

[19:38] <spinclad> #kp6 say "pmurias++"

[19:38] <exp_evalbot> OUTPUT[pmurias++␤]

[19:38] *** dwolf_ joined
[19:39] *** DarkWolf84 left
[19:39] <spinclad> #kp6 "foo".say

[19:39] <exp_evalbot> OUTPUT[Undefined subroutine &Main::say called at - line 3.␤]

[19:39] *** dwolf_ is now known as DarkWolf84

[19:40] <moritz_> #kp6 ("foo").say

[19:40] <exp_evalbot> OUTPUT[Undefined subroutine &Main::say called at - line 3.␤]

[19:42] <spinclad> #kp6 class Main { method say { say self } }; "foo".say

[19:42] <exp_evalbot> OUTPUT[Undefined subroutine &Main::say called at - line 7.␤]

[19:42] *** knewt_ left
[19:43] <pmurias> a question regarding S11: is the package at the start of the file really * or GLOBAL?

[19:43] *** dduncan joined
[19:43] <pmurias> or is * an alias for GLOBAL?

[19:45] <TimToady> it's an alias

[19:46] <pmurias> so *::foo and ::*foo are the same thing?

[19:47] <fglock> oops - I didn't read that spec

[19:47] <moritz_> that's nice - implmenting a language without reading the spec ;-)

[19:48] <pmurias> TimToady: can't grep it anywhere so might make sense to mention it explicitly

[19:48] <TimToady> pmurias: yes, except you can't start a term with * because it'll look like "whatever"

[19:49] <TimToady> * is just a twigil, not a sigil

[19:50] <pmurias> so $*::foo works

[19:50] <pmurias> ?

[19:50] <TimToady> and is the same as $*foo

[19:51] <pmurias> is there any point in having * as an alias for GLOBAL?

[19:51] <TimToady> the :: isn't necessary unless you want to say $*::($foo) or some such

[19:51] <TimToady> you really want to say %GLOBAL::ENV every time you want to get at the environment?

[19:52] <moritz_> "weird things should look weird" ;-) (re $*::($foo))

[19:52] <TimToady> or $GLOBAL::IN

[19:52] <TimToady> ?

[19:52] <pmurias> no

[19:52] <pmurias> i like the twigil form

[19:53] * moritz_ votes for an optional thrigil ;-)

[19:53] <TimToady> just extend the twigil token from the standard grammar.  :)

[19:54] <spinclad> i take it you would have to say (at shortest) &*foo() if you want the global &foo and a local &foo shadows it; you couldn't omit the & and () as with calling the local?

[19:54] <moritz_> what about ::*foo @args; ?

[19:55] <spinclad> ah, missed that.

[19:55] * moritz_ was just guessing

[19:55] *** dwave left
[19:56] *** SamB left
[19:56] <moritz_> #pugs say "foo".perl

[19:56] <exp_evalbot> OUTPUT[sh: pugs: command not found␤]

[19:56] <moritz_> wtf? I just compiled it :(

[19:56] <moritz_> #kpt say "I'm there"

[19:56] <moritz_> #kp6 say "I'm there"

[19:56] <exp_evalbot> OUTPUT[Search pattern not terminated at - line 3.␤]

[19:57] <moritz_> #kp6 say "Im there"

[19:57] <exp_evalbot> OUTPUT[Im there␤]

[19:57] <DarkWolf84> :P

[19:57] *** SamB joined
[19:57] <spinclad> #kp6 say "'"

[19:57] *** exp_evalbot left
[19:57] <DarkWolf84> no quoting

[19:57] <moritz_> #pugs "foo"

[19:57] <pmurias> i think both $*foo and $GLOBAL::foo should be allowed but i can't think of a good use for the * alias besides $*::($foo) instead of $GLOBAL::($foo)

[19:58] *** exp_evalbot joined
[19:58] <spinclad> O NOEZ I KILT IT

[19:59] <moritz_> #pugs "foo"

[19:59] <exp_evalbot> OUTPUT[sh: pugs: command not found␤]

[19:59] *** exp_evalbot left
[19:59] <spinclad> #kp6 say "dear kp6, sorry i kilt u"

[20:00] * moritz_ killed it manually

[20:00] <moritz_> at least the second time

[20:01] *** exp_evalbot joined
[20:01] <moritz_> the first one was a segfault :(

[20:01] * spinclad puts flowers on its grave instead

[20:01] <moritz_> #kp6 say "foO"

[20:01] <exp_evalbot> OUTPUT[foO␤]

[20:01] <moritz_> #pugs "foo".say

[20:01] <exp_evalbot> OUTPUT[pugs: user error (*** *** Can't modify constant item: VUndef␤        at <prelude> line 803, column 9-46␤           <prelude> line 803, column 9-46␤...]

[20:01] <spinclad> oh here it's back again... i can't keep up

[20:02] <moritz_> #pugs say "foo"

[20:02] <exp_evalbot> OUTPUT[pugs: user error (*** *** Can't modify constant item: VUndef␤        at <prelude> line 803, column 9-46␤           <prelude> line 803, column 9-46␤...]

[20:02] <moritz_> something's terribly wrong with my pugs

[20:02] <spinclad> #kp6 say "foo"

[20:02] <exp_evalbot> OUTPUT[foo␤]

[20:02] <spinclad> #kp6 say "'"

[20:02] *** exp_evalbot left
[20:03] <fglock> #kp6 "foo".say

[20:03] <spinclad> once was by accident... twice makes it murder

[20:03] * moritz_ hates all kinds of IPC

[20:03] <spinclad> sorry moritz_ 

[20:03] *** exp_evalbot joined
[20:04] <moritz_> spinclad: don't bother... I like to know my bugs ;-)

[20:04] <moritz_> #kp6 say "'"

[20:04] *** exp_evalbot left
[20:04] <spinclad> :)

[20:04] *** exp_evalbot joined
[20:04] <moritz_> why does it make my bot segfault? why?

[20:04] <moritz_> #pugs say "foo"

[20:04] <exp_evalbot> OUTPUT[pugs: user error (*** *** Can't modify constant item: VUndef␤        at <prelude> line 803, column 9-46␤           <prelude> line 803, column 9-46␤...]

[20:04] <fglock> hmm - "'" compiles ok, but is emitted as '''

[20:05] <moritz_> #kp6 say "''"

[20:05] *** exp_evalbot left
[20:05] *** exp_evalbot joined
[20:06] *** exp_evalbot left
[20:07] <moritz_> now it auto-restarts

[20:07] *** exp_evalbot joined
[20:08] <spinclad> #kp6 say "hi there'; system ('im in ur sandbox ... messin around')"

[20:08] *** exp_evalbot left
[20:08] *** exp_evalbot joined
[20:08] <moritz_> Eval: say "hi there'; system ('im in ur sandbox ... messin around')"

[20:08] <moritz_> Segmentation fault

[20:08] <moritz_> ;-)

[20:09] <moritz_> that's a good protection - just segfault when somebody tries to do something usefull ;)

[20:10] <moritz_> #pugs 1;

[20:10] <exp_evalbot> OUTPUT[sh: pugs: command not found␤]

[20:11] <spinclad> PATH?

[20:11] <moritz_> spinclad: I just figured that ;-)

[20:12] *** exp_evalbot left
[20:12] <pugs_svnbot> r17286 | fglock++ | [kp6] improved quoting in emitted code

[20:12] <pugs_svnbot> r17287 | moritz++ | [p5 evalbot]: fixed path for pugs

[20:12] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17287

[20:12] <lambdabot> Title: Changeset 17287 - Pugs - Trac

[20:12] *** |Jedai| is now known as jedai

[20:12] *** Blwood_ left
[20:12] *** exp_evalbot joined
[20:13] <spinclad> #kp6 say "let's see"

[20:13] <exp_evalbot> OUTPUT[let's see␤]

[20:13] <fglock> #kp6 "'".say

[20:13] *** exp_evalbot left
[20:13] <fglock> oops

[20:13] <moritz_> segfault again

[20:13] *** exp_evalbot joined
[20:13] <spinclad> #kp6 say "'"

[20:13] <exp_evalbot> OUTPUT['␤]

[20:13] <spinclad> #kp6 "string".say

[20:13] <exp_evalbot> OUTPUT[Undefined subroutine &Main::say called at - line 3.␤]

[20:14] <fglock> ah - it's a problem at the emitter

[20:14] <spinclad> #kp6 "'".say

[20:14] *** exp_evalbot left
[20:14] *** exp_evalbot joined
[20:14] <spinclad> #pugs say 1

[20:15] <fglock> it is trying to be smart about .say

[20:15] <exp_evalbot> OUTPUT[1␤]

[20:16] *** iblechbot joined
[20:17] *** Aankhen`` left
[20:20] <pmurias> "string".say();

[20:21] <pmurias> #kp6 "string".say();

[20:21] <exp_evalbot> OUTPUT[Undefined subroutine &Main::say called at - line 3.␤]

[20:21] <pmurias> fglock: special handling of .say needs to be removed

[20:22] <spinclad> #kp6 sub speak ($a) { say $a }; "hi".speak

[20:22] <exp_evalbot> OUTPUT[Can't modify constant item in scalar assignment at (eval 11) line 2, at EOF␤Bareword "Bind" not allowed while "strict subs" in use at (eval 11) lin...]

[20:22] <fglock> pmurias: yep - but there is an extra problem, Str.method is special for some reason, probably remaining from an mp6 workaround

[20:23] <fglock> pmurias: EmitPerl5 line 221

[20:23] <spinclad> #kp6 method speak ($a) { say $a }; "hi".speak

[20:23] <exp_evalbot> OUTPUT[Undefined subroutine &main:: called at lib/KindaPerl6/Runtime/Perl5/MOP.pm line 28.␤]

[20:23] <fglock> pmurias: I think it's a grammar workaround

[20:24] <spinclad> #kp6 method speak ($a) { say $a }; "'".speak

[20:24] *** exp_evalbot left
[20:24] <pugs_svnbot> r17288 | moritz++ | added revision string for kp6 

[20:24] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17288

[20:24] <lambdabot> Title: Changeset 17288 - Pugs - Trac

[20:25] *** exp_evalbot joined
[20:25] <spinclad> #kp6 say $?REVISION

[20:25] <exp_evalbot> OUTPUT[syntax error at - line 8815, at EOF␤Missing right curly or square bracket at - line 8815, at end of line␤Execution of - aborted due to compilation ...]

[20:25] <fglock> hmm - the grammar look ok

[20:25] *** exp_evalbot left
[20:25] <moritz_> #kp6 "foo"

[20:25] *** exp_evalbot joined
[20:26] <moritz_> #kp6 "foo"

[20:26] <exp_evalbot> No output

[20:26] *** exp_evalbot left
[20:26] <pmurias> MetaClass uses Val::Buf instead of Proto

[20:26] *** exp_evalbot joined
[20:26] <moritz_> #pugs say "foo"

[20:26] <exp_evalbot> OUTPUT[foo␤]

[20:26] <moritz_> hrmpf

[20:26] <moritz_> enough hacking for today, bed &

[20:32] <fglock> pmurias: "no method 'PROTOTYPE' in Class 'Str'"

[20:33] *** SubStack left
[20:34] <pmurias> what did you do?

[20:34] *** rindolf left
[20:34] <fglock> I commented out the emitter hack, and added Str.say

[20:35] *** SubStack joined
[20:37] <fglock> the emitted code looks ok

[20:37] <fglock> I'll commit, would you take a look?

[20:37] <pmurias> sure

[20:38] <pmurias> i get *** glibc detected *** gobby: free(): invalid pointer: 0x082194e8 *** and a backtrace when i run gobby on gentoo, any idea why?

[20:38] <pugs_svnbot> r17289 | fglock++ | [kp6] fixed Str.method - but "no method 'PROTOTYPE' in Class 'Str'"

[20:38] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17289

[20:38] <lambdabot> Title: Changeset 17289 - Pugs - Trac

[20:39] <fglock> pmurias: no idea

[20:42] <fglock> hmm - I get that error even when I do 1+1

[20:43] <pmurias> fglock: i think it might be an issue with MetaClass using Val::Buf wrongly

[20:43] *** Schwern joined
[20:43] <pmurias> the Val::Buf hack is required

[20:45] <fglock> yes, but where?

[20:46] <pmurias> i get Undefined subroutine &main:: called at lib5/KindaPerl6/Runtime/Perl5/MOP.pm line 28 if i add it when trying to call .say but the test suit works fine

[20:47] <pmurias> greping

[20:48] <pmurias> it seems only MetaClass uses it

[20:50] *** obvio171 joined
[20:51] *** obvio171 left
[20:53] <fglock> hmm - it seems to happen when PROTOTYPE is called to create ::Main

[20:55] <fglock> maybe "Class".new is creating a Str 

[20:55] <fglock> which kinda makes sense

[20:56] *** Schwern left
[20:56] *** Schwern joined
[20:56] <fglock> so the problem might be in the MetaClass visitor

[20:57] <fglock> which is creating Str instead of Proto

[20:58] <pmurias> it is there :)

[20:58] *** estevon joined
[20:58] <pmurias> fixing ;) using Proto(buf => "Foo) caused the problem

[20:59] <fglock> Proto( name => 'Foo' )

[20:59] *** ToniEisner joined
[21:00] <pmurias> that's the correct version

[21:01] <fglock> yes (Proto is declared at Traverse.pm:407)

[21:04] <pmurias> commiting

[21:04] <pugs_svnbot> r17290 | pmurias++ | kp6: MetaClass uses Proto

[21:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17290

[21:04] <lambdabot> Title: Changeset 17290 - Pugs - Trac

[21:06] *** drrho left
[21:06] <pmurias> got to sleep, the proto in bind uses '$::' ~ which is wrong

[21:06] *** Schwern left
[21:08] <pmurias> good night

[21:08] *** pmurias left
[21:10] <fglock> #kp6 "abc".say

[21:10] <exp_evalbot> r17288: OUTPUT[Undefined subroutine &Main::say called at - line 3.␤]

[21:10] <pugs_svnbot> r17291 | fglock++ | [kp6] "aaa".say works - pmurias++

[21:10] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17291

[21:10] <lambdabot> Title: Changeset 17291 - Pugs - Trac

[21:10] <fglock> #kp6 "abc".say

[21:10] <exp_evalbot> r17288: OUTPUT[Undefined subroutine &Main::say called at - line 3.␤]

[21:10] *** Schwern joined
[21:11] <masak> does exp_evalbot say when it's updated itself?

[21:11] <masak> maybe it should

[21:11] *** explorer joined
[21:12] <masak> if it only did it upon changes to kp6, it would probably be a nice feature

[21:13] <fglock> #kp6 "abc".say

[21:13] <exp_evalbot> r17288: OUTPUT[Undefined subroutine &Main::say called at - line 3.␤]

[21:14] <fglock> it doesn't seem to be auto-updating

[21:14] <masak> no

[21:14] <masak> that would be a nice first step :)

[21:15] <fglock> food &

[21:15] *** fglock left
[21:18] *** jisom joined
[21:19] <pugs_svnbot> r17292 | rhr++ | [misc/evalbot] Add an #eval command to run all the p6 backends

[21:19] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17292

[21:19] <lambdabot> Title: Changeset 17292 - Pugs - Trac

[21:20] <rhr> #eval say "hello"

[21:20] <DarkWolf84> ?eval say "hello"

[21:20] <pugsbot_r17185> OUTPUT[hello␤] Bool::True

[21:20] <rhr> I hope I didn't break the bot, I can't test locally...

[21:21] <rhr> #pugs say "hello"

[21:21] <exp_evalbot> OUTPUT[hello␤]

[21:21] <rhr> I guess it's not updating

[21:21] <DarkWolf84> :)

[21:22] *** dwave joined
[21:22] <rhr> moritz++

[22:00] *** iblechbot_ joined
[22:04] *** fglock joined
[22:06] *** iblechbot left
[22:11] *** Limbic_Region joined
[22:22] <pugs_svnbot> r17293 | fglock++ | [kp6] .print

[22:22] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17293

[22:22] <lambdabot> Title: Changeset 17293 - Pugs - Trac

[22:22] *** explorer left
[22:24] *** explorer joined
[22:27] *** elmex left
[22:31] *** Limbic_Region left
[22:37] *** dwave left
[22:41] *** devogon left
[22:44] *** dwave joined
[22:53] <pugs_svnbot> r17294 | fglock++ | [kp6] moved the subset match operation to .does()

[22:53] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17294

[22:53] <lambdabot> Title: Changeset 17294 - Pugs - Trac

[22:54] *** ask_ joined
[22:58] *** iblechbot_ left
[23:03] *** dwave left
[23:17] <pugs_svnbot> r17295 | fglock++ | [kp6] some more work on .does

[23:17] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17295

[23:17] <lambdabot> Title: Changeset 17295 - Pugs - Trac

[23:23] *** daxim_ left
[23:23] *** daxim_ joined
[23:26] *** jisom left
[23:32] *** [particle1 joined
[23:35] *** TimToady left
[23:37] *** fglock left
[23:38] *** thoughtpolice left
[23:47] *** [particle] left
[23:51] *** masak left
