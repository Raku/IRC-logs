[00:01] *** ozo joined
[00:07] *** elmex left
[00:11] *** jedai joined
[00:15] <meppl> good night

[00:23] *** flokuehn left
[00:24] *** flokuehn joined
[00:27] *** buetow left
[00:29] *** jedai left
[00:34] *** obvio171 left
[00:34] *** obvio171 joined
[00:44] *** lyokato joined
[00:51] *** nipotaway is now known as nipotan

[00:51] *** hakobe left
[01:26] *** flokuehn_ joined
[01:37] *** obvio171 left
[01:37] *** obvio171 joined
[01:40] *** flokuehn left
[01:42] *** luqui joined
[01:48] *** justatheory left
[01:53] *** gnuvince_ left
[01:58] <pasteling> "rhr" at 65.94.7.35 pasted "some hacky edits to metholated STD to work around some pugs bugs" (46 lines, 1.8K) at http://sial.org/pbot/26991

[02:01] <pasteling> "rhr" at 65.94.7.35 pasted "attempt to parse '42+1/(2**4-6)' with STD - fails strangely" (2243 lines, 83.5K) at http://sial.org/pbot/26992

[02:02] *** luqui left
[02:05] *** xinming left
[02:05] *** xinming joined
[02:08] *** araujo left
[02:08] *** araujo joined
[02:13] *** dolmans joined
[02:26] *** jhorwitz left
[02:33] *** MattRdo joined
[02:38] *** ozo left
[02:39] *** sunnavy joined
[02:40] *** MattRdo left
[03:24] *** justatheory joined
[03:26] *** hakobe joined
[03:31] *** lyokato left
[04:04] *** hakobe is now known as hkb_aw

[04:23] *** kanru left
[04:27] *** avar left
[04:28] *** avar joined
[04:32] *** flokuehn_ left
[04:34] *** thoughtpolice joined
[04:40] *** weinig_ left
[04:47] *** eggzeck joined
[04:51] *** nipra joined
[04:51] *** avar left
[04:52] *** avar joined
[05:02] *** nipra left
[05:05] *** nipra joined
[05:08] *** szabgab joined
[05:09] <szabgab> morning

[05:09] <szabgab> it is that time of the year again, I am trying to build and test Pugs and it does not work

[05:09] <szabgab> make went well

[05:10] <szabgab> but make smoke seems to be stuck

[05:11] <szabgab> ext/Benchmark/t/basic.t - finishes but then ext/CGI/t/Dump.t takes forever

[05:11] <szabgab> or rather I stop it after a while...

[05:15] *** weinig_ joined
[05:15] <rhr> hmm, it doesn't hang for me.  what happens when you run pugs ext/CGI/t/Dump.t ?

[05:17] *** weinig_ left
[05:18] *** weinig_ joined
[05:19] *** lyokato joined
[05:30] *** jisom joined
[05:32] <szabgab> I am running plain old "make test" to see what happens there

[05:33] <szabgab> pugs ext/CGI/t/Dump.t  printed 1..1 and now it is eating my CPU, but does not print anything

[05:35] <rhr> interesting, do you get 3 regex parse errors after the 1..1?

[05:41] <szabgab> no, nothing, just 100% load on the CPU

[05:42] <szabgab> in the meantime on the other channel make test seems to be working hard on t/builtins/strings/match without sign of finishing it

[05:43] *** dolmans left
[05:44] *** dolmans joined
[05:44] <rhr> OK, so it's probably a problem with the pugs parser, which has been behaving erratically lately.  I had it throw spurious errors 14 times in a row (!) earlier today before running the script correctly...

[05:45] <rhr> not sure what to do about it, though...

[05:56] <szabgab> ok, I'll stop this for now and let others eat my CPU for a while

[06:00] *** amnesiac left
[06:04] *** hkb_aw is now known as hkb_lab

[06:17] *** lyokato_ joined
[06:17] *** lyokato left
[06:28] *** cognominal_ left
[06:35] *** DarkWolf84 left
[06:44] *** Blwood_ joined
[06:48] *** Blwood__ joined
[07:00] *** Blwood left
[07:03] *** Blwood_ left
[07:06] *** eggzeck left
[07:06] *** ozo joined
[07:08] *** iblechbot joined
[07:09] *** Aankhen`` joined
[07:17] *** elmex joined
[07:21] *** araujo left
[07:22] *** justatheory left
[07:31] *** apple-gunkies left
[07:38] *** franck___ joined
[07:38] *** obvio171 left
[07:39] *** obvio171 joined
[07:39] *** kanru joined
[08:07] *** jedai joined
[08:22] <meppl> good morning

[08:23] *** pmurias joined
[08:23] <pmurias> hi

[08:25] <meppl> good morning pmurias

[08:31] *** jedai left
[08:35] *** kanru left
[08:37] *** snearch joined
[08:47] *** andara joined
[08:53] *** Blwood__ left
[09:00] *** cognominal_ joined
[09:22] *** cognominal_ left
[09:37] *** cognominal_ joined
[09:44] *** jedai joined
[09:45] *** Blwood joined
[09:47] *** FoRMaTC joined
[09:47] *** FoRMaTC left
[09:48] *** dolmans left
[10:01] *** zamolxes left
[10:12] <daxim_> blast from the past!  http://slashdot.org/article.pl?sid=00/07/19/203221

[10:12] <lambdabot> Title: Slashdot | Larry Wall Announces Perl 6

[10:13] *** ruoso joined
[10:14] *** elmex left
[10:16] *** buetow joined
[10:17] *** lyokato_ left
[10:18] *** Patterner left
[10:19] *** elmex joined
[10:19] *** Psyche^ joined
[10:19] *** Psyche^ is now known as Patterner

[10:30] *** flokuehn joined
[10:36] *** buetow left
[10:43] *** cognominal_ left
[10:48] *** jisom left
[10:50] *** cognominal_ joined
[10:52] <pmurias> ?eval @a := @b;

[10:52] <pugsbot_r17185> Error: ␤Unexpected " :="␤expecting "::"␤Variable "@a" requires predeclaration or explicit package name

[10:52] <pmurias> ?eval my (@a,@b);@a := @b;

[10:52] <pugsbot_r17185> []

[11:02] *** cognominal_ left
[11:03] *** fglock joined
[11:05] *** ingy left
[11:05] *** ingy joined
[11:05] <pmurias> fglock: hi

[11:11] <pmurias> i'm convinced the current Bind semantics are wrong

[11:12] <pmurias> either it should call BIND on a signature, or emit a assignment to a container

[11:14] *** iblechbot left
[11:16] <fglock> hmm

[11:16] <fglock> i think / VAR($var).BIND( 42 ) / is ok for containers

[11:17] <fglock> and then / $sig.BIND( $capture ) / for complex structures

[11:19] <fglock> do you have a use case, where is it wrong?

[11:22] <pmurias> $var := @_[0];

[11:23] <pmurias> VAR($var).BIND assumes the specific internal structure of the thing it's binding

[11:24] *** cognominal_ joined
[11:24] <pmurias> $var := @_[0] would work actually

[11:25] <fglock> it doesn't - the thing it is binding is either a Value or a Container

[11:26] <pmurias> does it copy roles and _dispatch right now?

[11:27] <fglock> looking

[11:29] <pmurias> i think an assigment in perl5 code would be more correct

[11:29] <fglock> it only copies or set "readonly"

[11:30] <fglock> it should probably check the Type, but not set it

[11:31] <pmurias> to put it another way what are the advantages of using BIND instead of =

[11:31] <pmurias> only {modified} = 1 come to my mind

[11:31] <fglock> yes, that's one thing

[11:32] <fglock> another one: you can't morph a scalar into an array:

[11:33] *** nipotan is now known as nipotaway

[11:35] *** snearch left
[11:36] <fglock> in / $a := @b / - $a is still a scalar

[11:38] <pmurias> i think the / @b := $a / is the case which requires special handling

[11:41] <pmurias> maybe we should defer discussion of it to the YAPC

[11:41] <pmurias> ...

[11:41] <fglock> we could have some tests

[11:43] <fglock> we can use BEGIN blocks to test if the "modified" flags are working properly,

[11:43] <fglock> and for-loop to test scalar x array auto-deref

[11:45] *** sunnavy left
[11:46] <pmurias> i don't know how to write the first one

[11:48] <pmurias> i think i got the idea

[11:49] <fglock> there are some - see t/kp6/xx-begin-*.t

[11:55] <pmurias> a t/kp6/08-begin-bind.t fails if i run it by hand but works via the harness

[11:55] *** Shillo joined
[11:55] <pmurias> s/a//

[11:55] <Shillo> Hi all

[11:56] <fglock> looking

[11:56] *** Casan left
[11:56] <pmurias> Shillo: hi

[11:57] <pmurias> fglock: i should probably commit my version which uses =

[11:58] <fglock> pmurias: it works here

[11:58] <pugs_svnbot> r17377 | pmurias++ | kp6: BIND replaces with =

[11:58] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17377

[11:58] <lambdabot> Title: Changeset 17377 - Pugs - Trac

[11:58] <pmurias> after my latest commit too?

[12:00] <pmurias> found the problem

[12:02] <pmurias> the harness uses accepts a more relaxed format the i thought

[12:04] *** chris2 joined
[12:07] <fglock> pmurias: what if a user-defined container redefines BIND?

[12:14] *** DarkWolf84 joined
[12:21] *** snearch joined
[12:27] *** zamolxes joined
[12:34] *** LCamel joined
[12:34] *** thoughtpolice left
[12:34] *** wilx left
[12:36] *** BinGOs_ joined
[12:38] *** BinGOs left
[12:38] *** BinGOs_ is now known as BinGOs

[12:45] *** cmarcelo joined
[12:51] <pmurias> fglock: sorry had my irc window scrolled up, i don't think a user-defined container can redefine BIND

[12:51] <pugs_svnbot> r17378 | pmurias++ | kp6: better undef handling and a test for it

[12:51] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17378

[12:51] <lambdabot> Title: Changeset 17378 - Pugs - Trac

[12:53] <pmurias> you can't overload '=' in perl5

[12:54] *** iblechbot joined
[12:57] <pmurias> some test assume the tap harness requires test numbers

[12:57] <pmurias> is there a way to have it require them or should they be changed

[13:11] <fglock> pmurias: I don't know

[13:12] <pmurias> currently the begin & bind test appears to pass alhough shouldn't

[13:13] *** Shillo left
[13:17] <fglock> pmurias: ok, there is no BIND in the spec - only STORE and FETCH

[13:20] <fglock> t/kp6/08-begin-bind.t stopped working after the last commits

[13:21] <fglock> it looks like $counter is no longer logged as modified

[13:24] <pugs_svnbot> r17379 | pmurias++ | kp6: tests fixed to report "not ok" if they don't work

[13:24] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17379

[13:24] <lambdabot> Title: Changeset 17379 - Pugs - Trac

[13:24] <pmurias> fglock: i'll fix it

[13:29] *** TJCRI joined
[13:36] *** polettix joined
[13:38] *** jhorwitz joined
[13:40] <pmurias> fglock: i'll fix it later today as i need a break now

[13:41] <fglock> pmurias: sure

[13:49] *** obvio171 left
[13:49] *** obvio171 joined
[14:03] *** cognominal_ left
[14:08] *** snearch left
[14:08] *** mr_ank left
[14:11] *** kanru joined
[14:11] *** integral left
[14:11] *** integral joined
[14:13] *** mr_ank joined
[14:19] *** mr_ank left
[14:19] *** mr_ank joined
[14:20] *** integral left
[14:20] *** integral joined
[14:44] *** buetow joined
[14:46] *** cognominal_ joined
[14:51] *** iblechbot left
[14:57] *** snearch joined
[14:59] *** weinig_ left
[14:59] *** weinig_ joined
[15:25] <PerlJam> in regex, | supports longest token matching, right?

[15:25] <PerlJam> (unlike perl5)

[15:26] <PerlJam> I don't think I actually read that anywhere, but infer it from the discussion on hashes %foo | %bar  does longest-token across the two hashes.

[15:31] *** barney joined
[15:33] *** nipra left
[15:45] *** rindolf joined
[15:56] <fglock> PerlJam: yes, | would match in "parallel" like junctions do

[15:57] <PerlJam> yes, but the longest token always wins?

[15:58] <moritz_> it does

[15:58] <PerlJam> "foo" ~~ / f | fo | foo /;  # Always matches foo

[15:58] <PerlJam> so that makes me wonder if we shouldn't also have a ? modifier on | and & too

[15:58] <PerlJam> "foo" ~~ / f |? fo |? foo /;  # Always matches f

[15:59] <moritz_> I think you can do this with backtracking control

[15:59] <PerlJam> or @x = <f fo foo>;  "foo" ~~ / |? @x /;

[15:59] <moritz_> f : | fo : | foo/

[15:59] <PerlJam> moritz_: except there's no guaranteed order with |

[15:59] <PerlJam> you only get ordered matching with ||

[16:00] <PerlJam> (and I don't think that works anyway)

[16:00] <PerlJam> (or, it doesn't quite makes sense to me that it would work anyway)

[16:01] <PerlJam> not sure if I need to change my thinking or | needs more explaining.

[16:01] *** polettix left
[16:01] *** TJCRI left
[16:03] <PerlJam> "foo" ~~ / ( f | fo | foo ) /;  # What's in $0 ?  IF the answer is a junction, how do I collapse to the "right" one?  OR does that question not even make any sense?

[16:03] <pugs_svnbot> r17380 | pmurias++ | kp6: things are again marked as modified; all test pass again

[16:03] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17380

[16:03] <lambdabot> Title: Changeset 17380 - Pugs - Trac

[16:03] *** theorb joined
[16:04] <pmurias> PerlJam: in $0 is foo

[16:04] <pmurias> it's the longest one that matches

[16:05] <pmurias> it's equivalent to "foo" ~~ /(fo?o?) /

[16:05] <PerlJam> pmurias: okay, that jibes with my thinking completely.  But again, I wonder should we modify | with a ? to make it "shortest token"?

[16:05] <PerlJam> "foo" ~~ / ( f |? fo |? foo ) /;  # $0 == "f"

[16:06] <PerlJam> (similar logic applies to & )

[16:07] <DarkWolf84> the lgic is simple

[16:07] <DarkWolf84> lazy

[16:07] <DarkWolf84> :)

[16:08] <DarkWolf84> the simplest answer is the first posible

[16:10] *** TJCRI joined
[16:10] *** TJCRI left
[16:11] *** TJCRI joined
[16:14] <PerlJam> well, maybe similar logic doesn't apply to &

[16:14] *** andara left
[16:20] *** flokuehn left
[16:22] <pmurias> PerlJam: do you have a use case for |? ?

[16:23] <[particle]> perljam: what about ||

[16:25] *** theorbtwo left
[16:26] *** snearch left
[16:30] *** justatheory joined
[16:33] *** franck___ left
[16:34] <PerlJam> [particle]: What about || ?   || is ordered, so we always try the alternatives from left to right.

[16:35] <PerlJam> pmurias: not really, it just appeals to my sense of symmetry that everywhere else we have a "longest" thing, we have a corresponding way to get the "shortest".

[16:36] *** weinig_ left
[16:39] <fglock> how about <longest f | fo | foo >  and <shortest f | fo | foo > where longest is the default

[16:42] <pmurias> fglock: my positional parameters get globalised :(

[16:42] <pmurias> method f($a) {$a} gets turned into method f($a) {$GLOBAL::a}

[16:44] <pmurias> fglock: what should i do?

[16:45] *** weinig_ joined
[16:47] *** amnesiac joined
[16:50] <fglock> you need to transform the AST to hve them declared and added to the Pad

[16:51] <fglock> have

[17:00] <pugs_svnbot> r17381 | lwall++ | Missing <sym> on !~ matcher discovered by rhr++

[17:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17381

[17:00] <lambdabot> Title: Changeset 17381 - Pugs - Trac

[17:02] <fglock> KindaPerl6::Visitor::Global finds undeclared variables and looks them up in GLOBAL

[17:04] <pmurias> i started at first making KindaPerl6::Visitor::Global leave my params alone, but you suggestion in easier

[17:06] <fglock> it's reasonably easy to do this at the AST creation time - it's done elsewhere

[17:07] <fglock> we should probably split the grammar in smaller files, in order to make recompilation faster

[17:10] *** kanru left
[17:12] *** snearch joined
[17:14] <fglock> pmurias: I think when add the sig to the Method node (in token method) we should have the params declared in

[17:15] <fglock> when we add

[17:15] <pmurias> should 'for @(($node.sig).positional) -> $var {say "positional"}' work?

[17:16] <fglock> it look ok

[17:16] <fglock> looks

[17:17] <fglock> pmurias: I'll try modifying the AST node creation - are you working on this too?

[17:18] <pmurias> feel free

[17:25] *** Psyche^ joined
[17:31] <pugs_svnbot> r17382 | fglock++ | [kp6] added stub to declare parameters as 'my' 

[17:31] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17382

[17:31] <lambdabot> Title: Changeset 17382 - Pugs - Trac

[17:36] *** Lunchy left
[17:38] *** kanru joined
[17:40] *** Lunchy joined
[17:41] *** Patterner left
[17:42] *** Psyche^ is now known as Patterner

[17:56] <fglock> pmurias: the variable declaration worked, but i'm not sure how to do the variable initialization - should i commit?

[17:57] *** obvio171 left
[17:57] *** obvio171 joined
[18:01] *** obvio171 left
[18:02] *** obvio171 joined
[18:04] <fglock> ok - i found out

[18:06] *** obvio171 left
[18:06] *** obvio171 joined
[18:10] *** obvio171 left
[18:10] *** obvio171 joined
[18:11] *** charsb___ joined
[18:11] *** mr_ank left
[18:14] *** obvio171 left
[18:15] *** obvio171 joined
[18:17] *** thoughtpolice joined
[18:19] *** obvio171 left
[18:19] *** obvio171 joined
[18:23] *** obvio171 left
[18:24] *** obvio171 joined
[18:25] *** Lunchy left
[18:26] *** charsbar_ left
[18:27] *** obvio171 left
[18:27] *** obvio171 joined
[18:28] *** mr_ank joined
[18:28] *** Lunchy joined
[18:31] *** obvio171 left
[18:31] *** obvio171 joined
[18:34] <pugs_svnbot> r17383 | fglock++ | [kp6] method parameters exist as Pad variables at compile-time 

[18:34] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17383

[18:34] <lambdabot> Title: Changeset 17383 - Pugs - Trac

[18:35] *** jedai left
[18:35] *** obvio171 left
[18:36] *** obvio171 joined
[18:37] *** DarkWolf84 left
[18:40] *** obvio171 left
[18:40] *** obvio171 joined
[18:40] *** flokuehn joined
[18:41] *** iblechbot joined
[18:44] <pmurias> fglock++ #positional parameters in methods work now

[18:44] <pmurias> :)

[18:44] <fglock> pmurias: it's easy to add params to subs now

[18:44] *** obvio171 left
[18:44] *** obvio171 joined
[18:46] <pmurias> yes

[18:46] <pmurias> working now on getting subs to work

[18:49] *** obvio171 left
[18:49] *** obvio171 joined
[18:52] *** obvio171 left
[18:52] <pugs_svnbot> r17384 | fglock++ | [kp6] cleanup 'sub' emitter

[18:52] <pugs_svnbot> r17385 | lwall++ | 1st whack at binding captures

[18:52] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17385

[18:52] <lambdabot> Title: Changeset 17385 - Pugs - Trac

[18:52] *** obvio171 joined
[18:54] *** DarkWolf84 joined
[18:56] *** obvio171 left
[18:56] *** flokuehn left
[18:56] *** obvio171 joined
[18:57] <pmurias> fglock: we should use gobby if we work on the same file :)

[18:58] <fglock> ok - but i'm not going to make further changes now :)

[19:00] *** fridim__ joined
[19:00] *** fridim_ left
[19:00] <fglock> you can overwrite my last commit

[19:01] *** obvio171 left
[19:01] *** obvio171 joined
[19:01] <pmurias> i reverted my own, as yours is better ;)

[19:04] *** obvio171 left
[19:04] *** obvio171 joined
[19:07] *** snearch left
[19:08] *** obvio171 left
[19:09] *** obvio171 joined
[19:10] *** thoughtpolice left
[19:12] *** obvio171 left
[19:12] *** obvio171 joined
[19:13] *** jisom joined
[19:16] *** obvio171 left
[19:16] *** obvio171 joined
[19:17] *** jedai joined
[19:17] <pmurias> fglock: should our variables be add_lexicals'ed

[19:18] <pmurias> ?

[19:19] <fglock> we need a separate place for globals, 

[19:19] <fglock> but 'our' is a lexical alias to a global, right?

[19:19] <fglock> so maybe yes

[19:21] *** obvio171 left
[19:21] *** obvio171 joined
[19:25] *** obvio171 left
[19:25] *** obvio171 joined
[19:29] *** obvio171 left
[19:30] *** obvio171 joined
[19:30] *** baest left
[19:32] <fglock> hmm - our vars are already being added to the pad, but it looks like subroutine decls is missing this

[19:34] *** obvio171 left
[19:34] *** obvio171 joined
[19:35] <pmurias> had to let my mother use the computer,

[19:35] *** jedai left
[19:36] <pmurias> i'm working on that part of the grammar now

[19:41] *** jisom left
[19:46] *** obvio171 left
[19:47] *** obvio171 joined
[19:50] *** obvio171_ joined
[19:51] *** obvio171 left
[19:55] <pugs_svnbot> r17386 | fglock++ | [kp6] parameters are added to the pad at once, for less closure depth

[19:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17386

[19:59] *** snearch joined
[20:00] *** Aankhen`` left
[20:03] <pmurias> Grammar.pm must be split

[20:03] *** baest joined
[20:04] *** obvio171_ left
[20:06] <fglock> pmurias: yup

[20:07] <fglock> just move the parts to Grammar/

[20:07] <pmurias> moving term into it's own file would be a good start

[20:12] *** stevan_ joined
[20:18] <pmurias> can't debug that part of grammar should i commit it now,or tommorow after i work on it some more?

[20:19] *** barney left
[20:23] <fglock> pmurias: better wait, you'd likely fix it quickly after some sleep

[20:24] <fglock> time to go home here

[20:25] *** ruoso left
[20:26] *** fglock left
[20:40] *** stevan_ left
[20:41] *** JarJarBinks joined
[20:48] *** polettix joined
[20:48] *** fridim__ is now known as fridim

[20:51] *** rindolf left
[20:52] *** JarJarBi1ks left
[21:05] *** yahooooo1 joined
[21:06] *** yahooooo left
[21:06] *** snearch left
[21:07] *** yahooooo1 is now known as yahooooo

[21:10] *** pmurias left
[21:24] *** penk left
[21:28] *** penk joined
[21:39] *** chris2 left
[21:44] <pugs_svnbot> r17387 | rhr++ | [Metholated.pm] add _SPACE and _SPACE_rev

[21:44] <pugs_svnbot> r17387 | rhr++ | [metholate] handle $+endargs like $+endstmt

[21:44] <pugs_svnbot> r17387 | rhr++ | [STD] add is_type stub

[21:44] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17387

[21:58] *** TJCRI left
[22:01] <DarkWolf84> is there any way to open udp socket with listen

[22:01] <DarkWolf84> ?

[22:01] <TimToady> fg

[22:02] *** stevan_ joined
[22:02] *** stevan_ left
[22:05] *** justatheory left
[22:14] *** Limbic_Region joined
[22:22] *** iblechbot left
[22:24] *** amnesiac left
[22:28] *** elmex left
[22:31] *** DickyArts joined
[22:34] *** DickyArts left
[22:34] *** cmarcelo left
[22:50] *** buetow left
[22:54] *** buetow joined
[23:24] *** daxim_ left
[23:24] *** daxim_ joined
[23:29] *** kane_ left
[23:42] *** lotek left
[23:50] *** rfordinal_ joined
[23:58] *** lotek joined
