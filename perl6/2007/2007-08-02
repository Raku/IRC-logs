[00:08] *** Limbic_Region left
[00:18] *** uuuu joined
[00:18] *** uuuu left
[00:21] *** b00t joined
[00:28] *** devogon left
[00:29] *** weinig left
[00:30] *** cj_ joined
[00:34] *** xdg joined
[00:46] *** cj left
[00:54] *** nipotaway is now known as nipotan

[00:55] *** sysdef joined
[01:13] *** pro21ms4 joined
[01:19] <SamB> have you folks seen this: http://www.ohloh.net/projects/3300/analyses/latest ?

[01:19] <lambdabot> Title: Pugs Code - Ohloh

[01:21] <Tene> What is it?

[01:22] <SamB> it's got some statistics about pugs

[01:22] <SamB> unfortunately it doesn't know what Haskell is yet

[01:24] *** szbalint left
[01:31] *** xdg left
[01:33] *** polettix left
[02:16] *** thorat left
[02:25] *** Jamtech joined
[02:28] *** Jamtech left
[02:28] *** b00t left
[02:49] *** kanru joined
[02:52] *** hkb_zz is now known as hakobe

[02:52] *** weinig joined
[04:15] *** SportChick left
[04:33] *** f0rth joined
[04:59] *** weinig left
[05:01] *** Jamtech joined
[05:02] *** Jamtech left
[05:03] *** weinig joined
[05:04] *** baest joined
[05:12] *** f0rth left
[05:12] *** f0rth joined
[05:25] *** jisom joined
[05:31] *** Debolaz joined
[05:35] *** devogon joined
[05:38] *** hoowa joined
[05:50] <moritz_> TimToady: iirc substr isnt

[05:50] <moritz_> ah, I should read on before answering ;)

[05:51] <hoowa> does audryet here?

[05:52] <moritz_> hoowa: she idles here, but hasn't been active lately

[05:52] <moritz_> @seen audreyt 

[05:52] <lambdabot> audreyt is in #haskell and #perl6. I don't know when audreyt last spoke.

[05:56] *** BooK_ joined
[05:58] *** hoowa_ joined
[06:03] *** hoowa_ left
[06:09] *** weinig left
[06:13] *** hoowa left
[06:20] *** dduncan left
[06:21] *** drrho joined
[06:22] *** DarkWolf84 left
[06:29] *** DarkWolf84 joined
[06:32] *** elmex joined
[06:45] *** amnesiac left
[07:06] *** Aankhen`` joined
[07:10] *** BooK joined
[07:13] *** DarkWolf84 left
[07:17] *** BooK left
[07:17] *** iblechbot joined
[07:20] *** BooK joined
[07:21] *** franck___ joined
[07:23] *** BooK_ left
[07:35] *** pro21ms4 left
[07:36] *** pnu left
[07:42] *** BooK_ joined
[07:50] *** BooK__ joined
[07:56] *** BooK left
[08:02] *** Aankh|Clone joined
[08:03] *** pro21ms4 joined
[08:04] <meppl> good morning

[08:05] *** BooK_ left
[08:05] *** Aankh|Clone left
[08:15] *** flokuehn joined
[08:20] *** Aankhen`` left
[08:22] *** dwave left
[08:35] *** daxim_ joined
[08:49] *** daxim left
[09:04] *** rindolf left
[09:06] *** IllvilJa left
[09:13] *** scaner joined
[09:24] *** IllvilJa joined
[09:31] *** dwave joined
[09:58] *** polettix joined
[09:59] *** fglock_ joined
[10:22] *** agentzh joined
[10:22] *** thoughtpolice left
[10:22] <agentzh> masak++ # p6 dom builder

[10:23] <agentzh> @seen masak

[10:23] <lambdabot> I saw masak leaving #perl6 18h 4m 12s ago, and .

[10:24] <agentzh> i think you can rework the v6.pm's grammar to make it always return the entire match objects instead of particular captures...

[10:24] <agentzh> masak: but i'm not quite sure about the precedence parser part in PCR...

[10:27] *** agentzh left
[10:28] *** pro21ms4 left
[10:32] *** jisom left
[10:59] *** fglock_ left
[11:06] *** Aankhen`` joined
[11:10] *** dwave left
[11:19] *** iblechbot left
[11:26] *** fglock joined
[11:38] *** nipotan is now known as nipotaway

[11:39] *** franck___ left
[11:41] *** franck___ joined
[11:46] *** demq left
[11:47] *** dmq joined
[11:49] *** demq joined
[11:49] *** dmq left
[11:55] *** Blwood joined
[11:55] *** Aankhen`` left
[12:08] *** Aankhen`` joined
[12:08] *** iblechbot joined
[12:15] <bloonix> hmmm

[12:15] <bloonix> hello together

[12:15] <bloonix> ?eval say :8(10)

[12:15] <pugsbot_r17185> OUTPUT[8␤] Bool::True

[12:15] <bloonix> ?eval say 10.:8

[12:15] <pugsbot_r17185> Error: ␤Unexpected ":8"␤expecting ".", "\187", ">>", "=", "^", operator name, qualified identifier, variable name, "...", "--", "++", "i", array subscript, hash subscript or code subscript

[12:16] <bloonix> is that not yet implemented or will that be never implemented?

[12:21] *** jettero left
[12:22] *** jettero joined
[12:23] *** kanru left
[12:26] *** dwave joined
[13:26] *** TJCRI joined
[13:30] *** [particle] left
[13:30] *** [particle] joined
[13:32] *** riffraff joined
[14:04] *** havocologe joined
[14:18] <sysdef> cycle

[14:20] *** sysdef left
[14:24] <bloonix> how can I get the inode of a file ?

[14:26] *** sysdef_ joined
[14:27] *** sysdef_ left
[14:27] *** sysdef joined
[14:28] <broquaint> (stat $fn)[1]

[14:30] *** havocologe left
[14:31] *** BooK joined
[14:37] <bloonix> stat() on unopened filehandle FH at /usr/share/perl/5.8/File/stat.pm line 49.

[14:38] <jettero> hrm, I wondered if that was a perl5 question

[14:38] <bloonix> my $fh = open('test.txt'); say (stat $fh)[1];

[14:38] <jettero> oh

[14:38] <bloonix> #!/usr/bin/pugs

[14:38] <jettero> perl6 loads perl5 modules?

[14:39] <jettero> I clearly need to read some web pages about pugs

[14:42] <bloonix> hmm I dont understand how to open a file for appending

[14:42] <bloonix> what is the right operator?

[14:42] *** thepler joined
[14:43] *** BooK__ left
[14:43] *** riffraff left
[14:44] <bloonix> :a

[14:44] <bloonix> ^^

[14:44] <bloonix> just test it

[14:54] *** drupek12 left
[14:56] *** amnesiac joined
[15:06] <bloonix> I tried to open a file with "my test.pl" and not with "vi test.pl"...

[15:06] <bloonix> I need holiday :/

[15:11] <moritz_> bloonix: was ist lexically scoped at least? ;-)

[15:12] <bloonix> hi moritz_ 

[15:12] <moritz_> hi bloonix ;)

[15:15] *** BooK left
[15:15] <bloonix> how can I implement something like Fcntl's O_CREATE | O_APPEND ...?

[15:17] <bloonix> I need O_TRUNC O_EXCL O_WRONLY O_APPEND O_CREAT

[15:21] *** franck___ left
[15:22] *** amnesiac left
[15:22] *** f0rth left
[15:22] *** cj_ left
[15:22] *** Gothmog_ left
[15:22] *** f0rth joined
[15:23] *** amnesiac joined
[15:24] *** BooK joined
[15:27] *** kanru joined
[15:27] *** cj joined
[15:27] *** Gothmog_ joined
[15:38] *** BooK_ joined
[15:45] *** flokuehn left
[15:46] *** BooK__ joined
[15:48] *** IllvilJa left
[15:51] *** BooK left
[15:51] <pasteling> "bloonix" at 87.230.108.20 pasted "use perl5:POSIX <strftime>; my" (6 lines, 118B) at http://sial.org/pbot/26612

[15:52] *** sysdef left
[15:52] <bloonix> *** 

[15:52] <bloonix>     Unexpected "$lt"

[15:52] <bloonix>     expecting "=", context, ":" or "("

[15:52] <bloonix>     at ./posix.pl line 5, column 4

[15:53] <moritz_> ?eval localtime

[15:53] <pugsbot_r17185> Error: ␤Unexpected end of input

[15:53] <bloonix> moritz_: any idea?

[15:53] <moritz_> bloonix: learn haskell, fix pugs :/

[15:53] <moritz_> ?eval localtime();

[15:53] <pugsbot_r17185> \Time::Local.new(("day" => 2), ("hour" => 17), ("is_dst" => Bool::True), ("min" => 53), ("month" => 8), ("picosec" => 0), ("sec" => 49), ("tz" => 7200), ("tzname" => "CEST"), ("wday" => 5), ("yday" => 213), ("year" => 2007))

[15:53] <moritz_> ?eval localtime().day;

[15:53] <pugsbot_r17185> \2

[15:54] <moritz_> ?eval localtime().yday;

[15:54] <pugsbot_r17185> \213

[15:54] *** TJCRI left
[15:55] <moritz_> ?eval localtime # without parenthesis

[15:55] <pugsbot_r17185> Error: ␤Unexpected end of input

[15:55] <moritz_> why that?

[15:57] *** elmex left
[16:01] *** BooK_ left
[16:02] *** IllvilJa joined
[16:02] *** cognominal__ left
[16:03] *** drupek12 joined
[16:03] *** gnuvince joined
[16:04] <gnuvince> @seen audreyt 

[16:04] <lambdabot> audreyt is in #haskell and #perl6. I don't know when audreyt last spoke.

[16:06] *** elmex joined
[16:08] *** cognominal_ joined
[16:08] *** TJCRI joined
[16:10] <lumi> Ah, whatever happened to the Haskell-people meeting?

[16:13] <lumi> diakopter: Whatever happened to the Haskellite meeting you suggested?

[16:15] *** justatheory joined
[16:15] *** BooK joined
[16:16] *** justatheory left
[16:22] *** franck___ joined
[16:22] *** BooK_ joined
[16:25] <diakopter> lumi: I didn't push it

[16:26] <lumi> Still interested, though?

[16:26] <diakopter> lumi: yes

[16:27] <lumi> I'm asking as a beginner Haskellite, I don't know the compiler innards

[16:27] <lumi> So I won't be able to judge your ideas for feasability probably

[16:27] *** BooK__ left
[16:27] <lumi> s/abil/ibil/

[16:28] *** BooK__ joined
[16:30] <diakopter> lumi: :)

[16:34] *** cognominal_ left
[16:35] *** BooK left
[16:35] <bloonix> ?eval 333 ~~ /^3{1..3}$/

[16:35] <pugsbot_r17185> Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[16:35] <bloonix> why is that false?

[16:36] <moritz_> ?eval 333 ~~ m/^3**{1..3}$/

[16:36] <lumi> ?eval 333 ~~ /^3**{1..3}$/ # maybe it's like this?

[16:36] <pugsbot_r17185> *** Cannot parse regex: ^3**{1..3}$␤*** Error: Error: quantifier not implemented: $VAR1 = {␤  'closure' => '{1..3}'␤};␤␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[16:36] <pugsbot_r17185> *** Cannot parse regex: ^3**{1..3}$␤*** Error: Error: quantifier not implemented: $VAR1 = {␤  'closure' => '{1..3}'␤};␤␤Match.new(␤  ok => Bool::False, ␤  from => 0, ␤  to => 0, ␤  str => "", ␤  sub_pos => (), ␤  sub_named => {}␤)

[16:36] <lumi> ENOTIMPL

[16:37] <moritz_> bloonix: {} in p5 is **{} in p6

[16:37] <bloonix> hmmm

[16:37] <bloonix> okay

[16:37] <moritz_> bloonix: plain { ... } encloses code that is executed on matching

[16:41] <TimToady> presumably your p5ism would be caught eventually by a "Useless use of range" warning

[16:41] *** BooK_ left
[16:42] <moritz_> TimToady: is that already in STD.pm?

[16:42] <TimToady> STD doesn't do context analysis

[16:42] *** cognominal_ joined
[16:43] <TimToady> but it might be a simpler problem than in p5, so maybe STD could do at least some of it

[16:43] *** cognominal_ left
[16:43] *** cognominal_ joined
[16:44] <moritz_> I saw detection of while(my $var =... as p5ism

[16:45] *** DarkWolf84 joined
[16:45] <TimToady> some of the void context can be spotted by syntactic analysis, while other instances require semantic analysis.  It's an interesting question whether it's better to report in two place rather than one, assuming the syntactic analysis can find the problem significantly earlier.

[16:47] <TimToady> it's not always the case that , or ; introduce void context on the left

[16:47] <TimToady> and certainly in this case, the bare block called from regex doesn't know that it's in void context unless the regex parsing rule tells it

[16:48] <TimToady> as far as {1..3} is concerned, the range is the final value, so is returned

[16:48] <moritz_> right

[16:49] <TimToady> it's also an interesting question to what extent STD, when used as a mere syntax checker, should be reporting such warnings

[16:50] <TimToady> but in the user's mind the distinction between syntactic and semantic analysis will be fuzzy in any case

[16:51] <TimToady> plus there's a minor side issue that we run the risk of warning twice about the same thing if we do it in two places

[16:52] <[particle]> unless the analysers share state info

[16:52] <TimToady> there's probably something profound in here about what can be factored out

[16:52] <TimToady> semantic analysis that merely makes distinctions

[16:53] <TimToady> vs tree transformations

[16:53] <TimToady> I think a syntax checking could warn about use of an undefined sub, for instance.

[16:53] *** gnuvince left
[16:54] <TimToady> *checker

[16:54] <moritz_> erm ist that really a syntactic issue?

[16:54] <TimToady> depends on how you define "syntax" :)

[16:55] <moritz_> doesn't that depend on the import mechanism of modules, for example?

[16:55] <TimToady> BEGIN changes things

[16:55] <TimToady> including your current syntax

[16:55] <moritz_> aye

[16:57] <TimToady> but it seems obvious that there will be things that BEGIN can do that are well-behaved (in a PPIish sense) and things that aren't

[16:57] <TimToady> so maybe we can have some enforcement of what kinds of syntactic changes are allowed without extraordinary declaration of UNSAFE_PRACTICES

[17:00] <TimToady> you ought to be able to swap in a completely new grammar safely, but BEGIN { require $x if rand < .5 } is obviously not so safe

[17:01] <moritz_> but it's a nice idea ;)

[17:02] <TimToady> and maybe BEGIN is really the counterpart to eval, insofar as any forced use of it to do something that needs less power indicates a missing feature

[17:20] *** polettix is now known as poletti

[17:22] *** poletti is now known as polettix

[17:38] *** Blwood left
[17:39] *** rindolf joined
[17:43] *** BooK joined
[17:51] *** BooK_ joined
[17:52] *** Psyche^ joined
[17:56] *** BooK__ left
[17:57] *** drupek12 left
[17:59] *** weinig joined
[18:00] *** thepler left
[18:04] *** drrho left
[18:06] *** Patterner left
[18:06] *** Psyche^ is now known as Patterner

[18:06] *** BooK left
[18:13] *** Aankhen`` left
[18:16] *** dduncan joined
[18:17] <DarkWolf84> I found perl6-alpha in subversion

[18:18] <DarkWolf84> It really work

[18:18] <DarkWolf84> ?

[18:18] <Tene> DarkWolf84: I don't understand your question.

[18:19] <DarkWolf84> does perl6-alpha in pugs subversion work

[18:20] <DarkWolf84> is it ready for testing

[18:20] <DarkWolf84> sorry for mu bad english

[18:21] <[particle]> perl 6 is under development.

[18:21] <DarkWolf84> i know

[18:21] <DarkWolf84> but

[18:21] *** buetow joined
[18:21] <DarkWolf84> is it ready for testing

[18:21] <DarkWolf84> does it run some code

[18:22] <DarkWolf84> ?

[18:22] <[particle]> there are almost 20,000 tests now

[18:22] <[particle]> there are evalbots and other things written using perl 6 (pugs)

[18:23] <[particle]> ?eval "hello, world!".say

[18:23] <pugsbot_r17185> OUTPUT[hello, world!␤] Bool::True

[18:26] <DarkWolf84> what is the diference between pugs and perl6-alpha then?

[18:29] <DarkWolf84> and why there r Install and Istall.v6-alpha

[18:31] <fglock> DarkWolf84: just try 'cpan v6' for installing v6 from cpan

[18:31] <fglock> it comes with some tests

[18:32] <DarkWolf84> right this is perl6 on perl5

[18:32] <fglock> yes

[18:33] *** msilva joined
[18:33] *** rindolf left
[18:36] <moritz_> and pugs is p6 on haskell

[18:36] *** rashakil joined
[18:37] <PerlJam> but perl6 on parrot is the *real* perl6   ;-)

[18:37] <moritz_> PerlJam: does it pass the test suite yet? *g*

[18:41] <moritz> I have my nick back ;)

[18:41] <moritz> but probably not for long :(

[18:41] <obra> PerlJam: Perl 6 on Parrot is "Onion"

[18:41] <moritz> obra: not officially

[18:42] <obra> Just to be pedantic, the "real" Perl 6 is _ANYTHING_ that passes the test suite

[18:42] *** Blwood joined
[18:42] <obra> and that's canonized in Syn1.

[18:43] *** jisom joined
[18:43] <moritz> so I'll write a script that passes the test suite - and it will be called official perl 6

[18:43] <moritz> it's a 10 liner in clean p5 ;)

[18:44] <obra> moritz: if your script can run everyhthing in the test suite, then yes. 

[18:44] <obra> if you emasculate the test script and print 1 ok  and exit... well, we'll all giggle.

[18:44] <obra> but there is not one 'official' implementation.

[18:44] *** BooK joined
[18:44] <PerlJam> moritz: write script that uses the test suite to gather the answers it is supposed to give and then output them at the appropriate time.   Eventually it will pass the test suite  :)

[18:44] <moritz> obra: good april's fool joke ;)

[18:44] <obra> moritz: sure.

[18:45] <DarkWolf84> LOL

[18:45] <moritz> I planned to do that for previous 1st april, but I didn't find the time

[18:46] <obra> http://use.perl.org/~jesse/journal/26825?from=rss

[18:46] <lambdabot> Title: Journal of jesse (2531)

[18:47] <PerlJam> ed.7  xferlog_regular.processed.3

[18:47] <PerlJam> weird

[18:47] *** weinig_ joined
[18:48] *** weinig left
[18:51] *** chris2 joined
[18:58] *** BooK_ left
[18:59] *** polettix left
[19:03] *** lichtkind joined
[19:08] *** thepler joined
[19:12] *** fglock left
[19:13] *** msilva left
[19:14] <lichtkind> moritz: hihi

[19:14] *** weinig_ left
[19:15] *** spinclad left
[19:16] *** justatheory joined
[19:16] *** spinclad joined
[19:42] *** lichtkind left
[19:44] *** jisom left
[19:59] *** amnesiac left
[20:04] *** perlbot left
[20:04] *** perlbot joined
[20:12] *** Blwood left
[20:14] *** TJCRI left
[20:17] *** arguile_ left
[20:17] *** jql left
[20:17] *** hakobe left
[20:18] *** hakobe joined
[20:18] *** arguile_ joined
[20:18] *** jql joined
[20:21] *** thepler left
[20:21] *** TJCRI joined
[20:22] *** arguile_ left
[20:22] *** jql left
[20:22] *** hakobe left
[20:23] *** hakobe joined
[20:23] *** arguile_ joined
[20:23] *** jql joined
[20:34] *** thepler joined
[20:34] *** moritz joined
[20:34] *** moritz left
[20:36] *** kanru left
[20:39] *** moritz_ joined
[20:52] *** TJCRI left
[20:59] *** dylanclendenin_ joined
[21:07] *** weinig joined
[21:11] *** weinig_ joined
[21:15] *** iblechbot left
[21:19] *** weinig left
[21:19] *** weinig joined
[21:25] *** Schwern joined
[21:30] *** KuRuMiN_ZoO joined
[21:31] *** marmic left
[21:35] *** marmic joined
[21:35] *** weinig_ left
[21:40] *** weinig_ joined
[21:43] *** KuRuMiN_ZoO left
[21:46] *** IllvilJa left
[21:46] <meppl> good night

[21:48] *** demerphq joined
[21:52] *** thepler left
[21:57] *** weinig left
[22:00] *** IllvilJa joined
[22:06] *** demq left
[22:16] *** tlb joined
[22:16] *** tlb left
[22:27] *** dylanclendenin_ left
[22:29] *** drupek12 joined
[22:29] <pugs_svnbot> r17195 | lwall++ | Allow for $$foo forms of attached sigil

[22:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17195

[22:29] <lambdabot> Title: Changeset 17195 - Pugs - Trac

[22:41] *** rfordinal_ joined
[22:53] *** SCalimlim joined
[22:54] *** Limbic_Region joined
[22:56] *** justatheory left
[22:57] *** justatheory joined
[23:23] <Limbic_Region> salutations all

[23:25] <Debolaz> Salutations Maximus.

[23:29] *** Limbic_Region left
[23:34] *** SamB joined
[23:36] *** Schwern left
[23:39] *** rashakil left
[23:43] *** Schwern joined
[23:52] *** rfordinal_ left
[23:52] *** rfordinal_ joined
