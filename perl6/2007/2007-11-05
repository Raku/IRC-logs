[00:00] *** Notrix joined
[00:14] *** ludan joined
[00:26] *** thoughtpolice left
[00:37] *** thestarslookdown left
[00:38] *** KidShenck_ joined
[00:40] *** jisom left
[00:57] *** penk left
[01:00] *** FurnaceBoy joined
[01:02] *** como left
[01:05] *** lyokato joined
[01:10] *** Notrix left
[01:12] *** FurnaceBoy left
[01:14] *** kanru left
[01:24] *** lichtkind left
[01:43] *** agentzh joined
[01:46] *** __Ace__ joined
[01:48] *** lisppaste3 joined
[02:00] *** devogon left
[02:01] *** `nipra joined
[02:23] *** justatheory joined
[02:43] *** Khisanth joined
[03:06] *** elmex_ joined
[03:09] *** jisom joined
[03:20] *** elmex left
[03:31] *** justatheory left
[04:04] *** Lunchy joined
[04:14] *** weinig left
[04:16] *** ludan left
[04:18] *** Lunchy left
[04:18] *** Lunchy joined
[04:30] *** amnesiac joined
[04:35] *** kane_ joined
[04:53] *** Jamtech joined
[04:53] *** IllvilJa joined
[05:03] *** BinGOs left
[05:06] *** kane__ joined
[05:20] *** kane_ left
[05:26] *** Jamtech left
[05:27] *** kane_ joined
[08:05] *** ilogger2 joined
[08:06] *** iblechbot joined
[08:32] *** franck___ joined
[08:44] *** baalial joined
[09:06] *** drupek12 joined
[09:15] *** drupek12 left
[09:52] *** drupek12 joined
[10:15] *** ruoso joined
[10:28] *** iblechbot left
[10:36] *** nipotaway is now known as nipotan

[10:53] *** ebassi joined
[11:53] *** gongyiliao joined
[12:12] *** iblechbot joined
[12:15] *** lichtkind joined
[12:16] *** ting joined
[12:22] *** ruoso left
[12:25] *** chris2 joined
[12:29] *** ebassi is now known as ebassi|lunch

[12:29] *** drrho joined
[12:32] *** ruoso joined
[12:33] *** nipotan is now known as nipotaway

[12:38] *** jiing joined
[12:38] *** [1]jaffa joined
[12:38] *** Gekz joined
[12:39] <[1]jaffa> Hi

[12:39] <[1]jaffa> how is parrot going?

[12:42] *** iblechbot left
[12:54] <moritz_> [1]jaffa: quite well, you can expect the 0.5 release this month

[12:56] <[1]jaffa> can it generate executables?

[12:57] *** rindolf joined
[12:57] <[1]jaffa> when is it going to be finished?

[12:57] <moritz_> no, it's a virtual machine, not a compiler

[12:57] <moritz_> and there is no release date - it's released when it's done ;)

[12:58] <moritz_> but the folks in #parrot on irc.perl.org can tell you more about it

[12:59] <[1]jaffa> that channel is not very active

[13:00] <moritz_> oh, it is - are you sure you were on irc.perl.org?

[13:00] <moritz_> currently 69 nicks in there

[13:01] <[1]jaffa> no, I was not on it.

[13:01] <[1]jaffa> so do you use Perl 6?

[13:01] <moritz_> a bit, yes

[13:01] <moritz_> and I try to hack on kp6 from time to time

[13:01] <[1]jaffa> kp6?

[13:02] <moritz_> KindaPerl6, a perl 6 compiler written in Perl 6

[13:03] *** cmarcelo joined
[13:04] <[1]jaffa> is it complete?

[13:04] <moritz_> no

[13:04] <moritz_> that's the 'Kinda' part in the name :)

[13:04] <[1]jaffa> is the definition of Perl 6 complete?

[13:04] <moritz_> not yet either

[13:05] <moritz_> large parts of the language are specced

[13:05] <moritz_> but for example concurrency is still missing

[13:05] <moritz_> http://perlcabal.org/syn/

[13:05] <lambdabot> Title: Official Perl 6 Documentation

[13:06] <[1]jaffa> what is the backend of Perl 6 compiler?

[13:08] <moritz_> there's none yet

[13:08] <moritz_> and every compiler/interpreter that passes the test suite will be "official perl 6"

[13:09] <moritz_> the test suite is in the pugs svn repository, and is about half way done

[13:09] <[1]jaffa> is there a competition?

[13:09] <moritz_> yes

[13:09] <moritz_> or no ;)

[13:09] <moritz_> well, there are different approaches

[13:09] <moritz_> and hopefully they'll meet in the middle somewhere

[13:09] <moritz_> pmichaud++ implements perl 6 on parrot

[13:10] *** ebassi|lunch is now known as ebassi

[13:10] <moritz_> fglock++, ruoso++, pmurias++ and a few others hack on kp6 (which is a way to bootstrap 6-on-6)

[13:10] <[1]jaffa> ++?

[13:10] <moritz_> TimToady++ writes the Perl 6 grammar in Perl 6

[13:10] <moritz_> [1]jaffa: I increase their karma while mentioning them ;)

[13:11] <moritz_> @karma TimToady 

[13:11] <lambdabot> TimToady has a karma of 6

[13:11] <[1]jaffa> are you playing a game?

[13:11] <moritz_> not really

[13:11] <moritz_> it's just programmer's fun

[13:12] <moritz_> a very crude measurement for popularity+effort

[13:13] <Juerd> Incredibly crude and inaccurate :)

[13:13] <moritz_> but still fun

[13:13] <moritz_> just for the sake of it ;)

[13:13] <[1]jaffa> I wonder why perl6 has not been finished by now.

[13:13] <Juerd> I think most people don't do it for the counters, but to indicate that they like certain people or their efforts.

[13:13] <moritz_> Juerd: did you find any tuits to restart trac?

[13:13] <Juerd> Er

[13:13] <moritz_> Juerd: I couldn't find out how to do it :(

[13:14] *** baalial left
[13:14] <Juerd> If trac doesn't live in apache2, then I don't know where it does.

[13:14] <moritz_> [1]jaffa: because it's a very powerfull, complex and totally new language

[13:14] <[1]jaffa> So?

[13:14] <moritz_> [1]jaffa: it tries to embrace many different programming paradigms, and that's not easy to bring together

[13:14] <[1]jaffa> don't you have enough manpower?

[13:14] <moritz_> that's one of the problems, yes

[13:15] <moritz_> would you like to help?

[13:15] <moritz_> obra: ping

[13:15] <Juerd> [1]jaffa: You should realise that while Perl 6 was announced in 2000, implementation began in 2005

[13:15] <Juerd> [1]jaffa: And the design still changes a little every now and then.

[13:16] <[1]jaffa> who is controlling the process?

[13:16] <Juerd> [1]jaffa: Nobody.

[13:16] <[1]jaffa> is it going anywhere?

[13:16] <Juerd> Yes, it is

[13:16] <moritz_> of course ;)

[13:17] <Juerd> [1]jaffa: It's a completely volunteer effort, so one can't simply hand out tasks and expect them to be done.

[13:17] <[1]jaffa> why python seems to move faster....

[13:17] <Juerd> [1]jaffa: Things take a lot of time.

[13:17] <Juerd> [1]jaffa: Python has more funding, and doesn't try to create a wholly new language :)

[13:17] <moritz_> [1]jaffa: python was not a complete redisgn

[13:18] <Juerd> [1]jaffa: Also, don't worry about Perl 6 too much. There is Perl 5, which is a really great programming language. And we won't shoot you for using Python or Ruby either :)

[13:18] <[1]jaffa> I use Perl 5

[13:18] <[1]jaffa> I have written an IDE in it

[13:19] <Juerd> Interesting

[13:19] <Juerd> url?

[13:19] <moritz_> and soon there'll be perl 5.10 out

[13:19] <[1]jaffa> I have not published it

[13:20] <moritz_> what language is the IDE for? perl as well?

[13:20] <[1]jaffa> perl,c++,D

[13:20] <moritz_> sounds cool ;)

[13:21] <[1]jaffa> it uses wxPerl

[13:22] *** Torment joined
[13:24] <[1]jaffa> the problem is if perl 6 is not released fast enough, it is not going to be popular if that matters.

[13:24] <[1]jaffa> there are many alternatives.

[13:24] <[1]jaffa> Perl6 , who is it for?

[13:25] <moritz_> we know, but increasing pressure on the developers doesn't speed up the process

[13:25] <[1]jaffa> if per6 design were complete, could parrot host it?

[13:26] <[1]jaffa> is parrot complete enough?

[13:26] <moritz_> read http://www.perl.com/pub/a/2005/09/22/onion.html for "whom is it for"

[13:26] <lambdabot> Title: perl.com: The State of the Onion 9

[13:27] <moritz_> regarding parrot - I think it's a worthy backend target right now, and improves steadily

[13:28] <moritz_> every turing complete VM could host perl 6, so you have to ask "how well is suited"

[13:29] <[1]jaffa> ok

[13:29] <moritz_> and real soon it'll implement (nearly?) all of Perl 6's object model

[13:29] <[1]jaffa> I would like to see executable backend.

[13:29] <moritz_> you're welcome to write one ;)

[13:30] <Juerd> [1]jaffa: You seem to be under the impression that Perl 5 is not used?

[13:30] <[1]jaffa> no, it is used.

[13:30] <[1]jaffa> I am aware of that.

[13:30] <moritz_> the problem is that since perl 6 has an eval(), so every compiled exeutable that uses eval() has to have a full Perl 6 compiler linked in

[13:30] <[1]jaffa> why is it a problem?

[13:31] <moritz_> it's not exactly a problem, but most people don't like that

[13:31] <moritz_> imagine each C program having gcc linked in :-)

[13:31] <[1]jaffa> I don!t use eval a lot

[13:31] <[1]jaffa> do you?

[13:31] <moritz_> yes

[13:31] <moritz_> I use 'use'

[13:32] <moritz_> which in turn calls require()

[13:32] <moritz_> which in turn calls do

[13:32] *** iblechbot joined
[13:32] <moritz_> which in turn runs eval

[13:32] <[1]jaffa> but that is compile time thing,

[13:32] <[1]jaffa> if I remember correctly

[13:32] <moritz_> right ;)

[13:33] <moritz_> at runtime I tend to avoid eval $string, and only use eval { ... } (which is completely different)

[13:33] <moritz_> but there are cases where string eval is really handy

[13:33] <avar> Perl 6 doesn't only need the compiler for eval() it needs it for all the reasons common lisp compilers need a present compiler (which includes eval)

[13:33] <rgs> if ($feature_is_supported) { require Foo::Bar }

[13:33] <moritz_> right

[13:33] <avar> inc. macros

[13:34] <[1]jaffa> well, all requires could not included

[13:34] <[1]jaffa> well, all requires could be included

[13:34] <moritz_> you could have requires that collide

[13:34] <moritz_> but never happen simultaniously at run time

[13:35] <[1]jaffa> I see

[13:35] <moritz_> there could be disambiguation methods, but they'd be rather complicated, and not worth the trouble

[13:36] <rgs> see alos: plugins

[13:36] <rgs> s/los/lso/

[13:38] <[1]jaffa> I see

[13:46] *** ilogger2 joined
[13:46] <moritz_> anyway, bashing java is easy, implementing perl 6 isn't

[13:47] <[1]jaffa> If I use win32 , it is not going to be platform independent.

[13:47] <ggoebel> moritz: any word on a commit bit / Trac?  Whose door do I need to knock on if Juerd can't do it?

[13:48] <ggoebel> Who are the maintainers for the various bots and services that pugs and onion depend on?

[13:48] <moritz_> ggoebel: I pinged obra++, who is our trac guru

[13:49] <moritz_> @seen obra

[13:49] <lambdabot> obra is in #perl6. I last heard obra speak 15h 18m 3s ago.

[13:49] <[1]jaffa> don't you think?

[13:49] <ggoebel> If you use the right CPAN modules Perl isn't bad on Win32. Except for non-blocking IO...

[13:49] <moritz_> ggoebel: the maintainers are in the file 'SLAVES' in pugs root

[13:49] <[1]jaffa> I mean Win32:: modules.

[13:50] <moritz_> [1]jaffa: if you want to access functionality that's only available on win32, there's no way around it

[13:50] <moritz_> and there's no point in disallowing it

[13:51] <ggoebel> mncharity: ping

[13:51] <ggoebel> We sure... if you opt in to the platform specific modules... you're code will be... platform specific!

[13:52] <ggoebel> s/we sure/well sure/

[13:52] <[1]jaffa> It makes me think, what does platform-independent mean?

[13:53] <[1]jaffa> I ported a perl code from Win32 to UNix

[13:53] <[1]jaffa> I had to deal with the files

[13:53] <[1]jaffa> how they are represented.

[13:53] <moritz_> with File::Spec?

[13:53] <[1]jaffa> no

[13:54] <[1]jaffa> if I just use open, print, close...

[13:54] <Juerd> What's wrong with trac on feather, by the way? It appears to work.

[13:54] <[1]jaffa> that in self, not platform independent.

[13:54] <moritz_> Juerd: it doesn't work for me, proxy timeout

[13:54] <Juerd> Weird, 'cause it's very fast for me

[13:55] <moritz_> which url?

[13:55] <Juerd> dev.pugscode.org

[13:55] <moritz_> I try http://commitbit.pugscode.org/

[13:55] <Juerd> Commitbit isn't trac

[13:55] <moritz_> oh damned, I always thought it was a trac plugin

[13:56] <moritz_> then mentally rephrase all my questions with s/trac/commitbit/

[13:56] <moritz_> ;-)

[13:56] <Juerd> I restarted it but now it gives a 503

[13:57] <Juerd> To restart commitbit, btw: cd /service; sudo svc -d commitbit; sudo svc -u commitbit

[13:57] <Juerd> Ah, works now

[13:57] <Juerd> Apparently it took some time to start - or someone else made it work in the past minute

[14:00] <moritz_> @tell ggoebel invitation sent. It's a custom to add your name to AUTHORS as first commit (and commit test)

[14:00] <lambdabot> Consider it noted.

[14:00] <moritz_> Juerd: thanks

[14:00] <moritz_> anybody else who wants a commit bit? ;-)

[14:00] <Juerd> me! me!

[14:00] <[1]jaffa> ok

[14:01] <[1]jaffa> guys

[14:01] <[1]jaffa> bye

[14:01] <moritz_> Juerd: /msg me your email and desired nick  ;)

[14:01] <moritz_> bye [1]jaffa, nice chat ;-)

[14:01] <moritz_> s/, /, that was a / ;-)

[14:01] <Juerd> moritz_: :)

[14:18] *** ruoso joined
[14:57] *** iblechbot joined
[15:08] *** TJCRI joined
[15:46] *** amnesiac joined
[15:52] *** cognominal_ joined
[15:53] *** bbkr joined
[15:55] *** cognominal_ left
[15:57] *** diakopter left
[15:57] *** diakopter joined
[16:01] <obra> ok. if you're hacking on Perl 6 implementation,  raise your hand.

[16:02] <obra> I'm going to try to get together a "state of the onion patch"

[16:03] * moritz_ raises hand tentativeley

[16:03] <moritz_> btw you can ignore my previous ping ;)

[16:04] <obra> ok.

[16:04] <obra> so. there are lots and lots of questions about "what implementations exist. where are they?"

[16:04] <obra> I'd like to blog at the very least a list of implementations and how far along are they.

[16:04] <obra> Are you up for braindumping to me what you know? ;)

[16:05] <moritz_> i'd like to see that in a wiki, so it can be edited easily

[16:05] <moritz_> ok, there's pug, which is p6 on haskell

[16:05] <moritz_> atm only plain haskell backend works, other backends are bit rotten

[16:06] <moritz_> there's parrot, which is the p6 VM, and many languages are implemented based on parrot

[16:06] <obra> (important bit of data: how much of perl6 is implemented)

[16:06] <obra> quibble: parrot isn't quite "The p6 vm" - it's a vm. the p6 implementation is very basic.

[16:07] <moritz_> pugs has much of the syntax right, lists, hashes, basic OO, basic regex, a bit IO

[16:07] <moritz_> most control constructs work in pugs

[16:07] <moritz_> but currently there is little pugs work, mostly because of audreyt++ being absent

[16:08] <moritz_> did I forget anything about pugs?

[16:08] <obra> is there anyone else who's working to maintain pugs for synopsis updates?

[16:08] *** dlocaus joined
[16:09] *** Aankhen`` joined
[16:09] <moritz_> there weere a few attempts by lumi++, masak++

[16:09] <moritz_> and TimToady++ did a few haskell hacks as well

[16:09] <moritz_> but the last haskell commit is more than a month ago, if I recall correctly

[16:10] <obra> *nod*

[16:11] <moritz_> PIR and JS backends compile, but fail every single test in the test suite

[16:12] <moritz_> anything else you want to know about pugs?

[16:12] <obra> I think that's good for pugs ;)

[16:12] <obra> So. who's next?

[16:13] <moritz_> mp6/kp6 I'd say

[16:14] <moritz_> mp6 is bootstrap with its perl5 backend, PIR backend exists, but doesn't bootstrapped

[16:14] <moritz_> mp6 is pretty much frozen, except for occasional fixes or small feature additions

[16:15] <obra> the goal of mp6 isn't to be a full implementation, right?

[16:15] <moritz_> right

[16:15] <moritz_> just enough to code kp6 in it

[16:15] <moritz_> that is, mostly regex/rules and a bit OO

[16:15] <dlocaus> Juerd: responding to your comment, that it being a volunteer effort and one just can't hand out tasks, I think helping out would be a bit easier if the  "super" strucutre of kp6 was already broken out into easily testable tasks.

[16:16] *** BinGOs joined
[16:16] <dlocaus> kind of black box, but it may just be my timing in coming into the project...

[16:16] *** BinGOs left
[16:16] <moritz_> obra: kp6 is written in mp6, partly in kp6 as well, and has perl5 and CL runtime

[16:17] <moritz_> obra: kp6 implements grammars, OO, basic junctions, multi methods,

[16:18] <moritz_> obra: dan BEGIN blocks, closures

[16:18] <moritz_> s/dan/and/

[16:18] <obra> how much of the pugs test suite can it run?

[16:18] <avar> The CL runtime is incomplete

[16:18] <moritz_> not much, because it lacks much syntactic sugar

[16:18] <avar> And it looks like there were some regressions recently

[16:19] <moritz_> and the grammar has precendence problems

[16:19] <moritz_> the plan was to get rid of thoses by swithcihng to STD.pm

[16:19] <obra> how close is that?

[16:20] <moritz_> the current plan seems to be to insert another bootstrapping stage before, v6-Onion

[16:20] <Juerd> dlocaus: Well, yes, I agree in general.

[16:20] <moritz_> obra: you have to ask fglock, he's working on that for quite some time...

[16:20] *** BinGOs joined
[16:20] <obra> *nod*

[16:20] <Juerd> dlocaus: Not much effort goes into making collaboration easier, unfortunately.

[16:21] <moritz_> he implemented lazy gather/take to supporrt TimToady's STD/metholate

[16:21] <obra> moritz_: v6-Onion? (note that Onion is the name of the implementation of Perl 6 on Parrot)

[16:21] <dlocaus> Juerd: oi! soemthing for me to work on.

[16:21] <dlocaus> I'm currently looking at trying to solve t/kp6/internals/02-gather.t

[16:21] <dlocaus> or ... documenting something

[16:21] <Juerd> dlocaus++

[16:21] <moritz_> obra: yes, but there's no better na atm

[16:21] <moritz_> s/na/name/

[16:22] <moritz_> I'm not too happy with that

[16:22] <obra> but it has nothing to do with the parrot implementation, right?

[16:22] <moritz_> right

[16:27] *** pmurias joined
[16:27] <pmurias> dlocaus: t/kp6/internals/02-gather.t work here

[16:28] <obra> any other interesting p6 hacking efforts that haven't been getting a lot of press? ;)

[16:30] <dlocaus> pmurias: 02-gather.t works here?

[16:30] <dlocaus> works "there"

[16:31] <pmurias> yes

[16:31] <pmurias> do you have Coro?

[16:32] <dlocaus> Coro?

[16:32] <pmurias> Coro.pm from cpan

[16:32] <dlocaus> no, I didn't know it was needed.

[16:33] <dlocaus> Installing...

[16:33] <moritz_> obra: there's yaph

[16:33] <avar> http://llvm.org/docs/tutorial/

[16:33] <lambdabot> Title: LLVM Tutorial: Table of Contents

[16:33] <moritz_> obra: but I don't know much about it

[16:33] <avar> onion/kp6 on llvm would be neat

[16:34] <moritz_> oa parrot emitter ;)

[16:34] <pmurias> mp6 is bootstraped

[16:34] <avar> obra: since when is the p6 on parrot called onion?

[16:34] *** IllvilJa joined
[16:34] <moritz_> it isn't, officially

[16:35] <obra> avar: um. at least 6 months ago. you'd have to ask pmichaud

[16:35] <dlocaus> I think that happened a few days ago

[16:35] <pmurias> obra: the reason for the kp6 bottleneck is that it can  bootstrap itself yet

[16:35] <obra> it was something patrick brought up on the concall a while back. should be in the minutes chromatic posted.

[16:35] <avar> somebody mentioned it as a /potential/ name in a mailing list

[16:36] <obra> Patrick has been calling it onion, even if he hasn't had a lot of cycles to _hack_ on it.

[16:36] <dlocaus> http://irclog.perlgeek.de/perl6/2007-10-25#i_131721

[16:36] <lambdabot> Title: IRC log for #perl6, 2007-10-25

[16:36] <obra> Regardless, he totally has prior claim on the name ;)

[16:36] <moritz_> right

[16:37] <obra> dlocaus: that's the new thing folks here are discussing. not pmichaud's "perl 6 on parrot"

[16:37] * dlocaus just wants p6 out the door, before PERL goes down in history, next to bash, tcsh, and sh.

[16:37] <moritz_> but it would be nice to know if he _really_ plans to rename use the name

[16:37] <obra> I promise to ask him this week

[16:37] <moritz_> ok, do that ;)

[16:37] <obra> There are many names in the world. I'm sure we can come up with something else ;)

[16:37] *** weinig joined
[16:38] <obra> we/you/whichever. not going to force any names on anyone. just make sure we don't conflict

[16:38] <moritz_> and I'll try to convince everybody to name the new thing v6-Garlic ;)

[16:38] <dlocaus> cool, ok 02-gather.t passes.

[16:38] <dlocaus> I'll document that.

[16:38] <obra> heh

[16:38] <avar> dlocaus: uh, bash?

[16:38] <rgs> or "thyme"

[16:38] <moritz_> rgs: that's nice, actually ;)

[16:39] <dlocaus> yes.  There was an article on Perl buzz, saying that perl wasn't really that dead, and that it appeared popularly in many job offers.

[16:39] <moritz_> avar: bash is _so_ web 1.0 - web 2.0 uses zsh ;)

[16:39] <dlocaus> When I see perl on craigslist.org job offers, it generally is right next to a list of shell scripting languages.

[16:39] <dlocaus> avar: When I was doing job interviews, most people think perl is a shell scripting language.  It drives me nuts.

[16:39] <dlocaus> I like tcsh.

[16:40] <obra> ..web 2.0 uses yubnub

[16:40] <dlocaus> I'm thinking I should start a beginners.html guide.  Any thoughts?

[16:40] <allbery_b> an annoying number of people program perl as if it were a shell scripting language

[16:41] <dlocaus> Take everything I've learned to-date (not much) and document it in docs/

[16:41] <dlocaus> moritz_: ?

[16:42] <moritz_> dlocaus: just kidding ;)

[16:42] <dlocaus> moritz_: no, I was asking about starting a beginners.html guide.

[16:42] <dlocaus> Document things like Coro.pm being needed.

[16:42] <pmurias> dlocaus: i found the cause of the bug you looked for

[16:43] <dlocaus> 15&17?

[16:43] <pmurias> yes

[16:43] <dlocaus> ok.

[16:43] <moritz_> dlocaus: ah yes, that's a good idea

[16:43] <moritz_> dlocaus: I just didn't realize it was a question ;)

[16:43] <dlocaus> oh.  np :)

[16:45] <dlocaus> pmurias: did you fix the bug?

[16:47] <pmurias> no

[16:47] <dlocaus> pmurias: ok, are you passing this back to me? or working on it?

[16:49] <pmurias> i'm not working on it so feel free

[16:49] <dlocaus> ok.

[16:53] <pmurias> dlocaus: do you know how to implement -> {return 1}?

[16:55] *** zamolxes joined
[16:55] *** jjore-w joined
[16:56] <pmurias> fixing a web 2.0 bug&

[16:56] *** pmurias left
[17:01] <pugs_svn> r18785 | dlo++ | [KP6] A basic beginners guide to helping out in KindaPerl-6.

[17:01] <pugs_svn> r18785 | dlo++ | Please comment and update.

[17:01] <dlocaus> @tell pmurias "I don't know how to implement {return 1}

[17:01] <lambdabot> Consider it noted.

[17:06] <pugs_svn> r18786 | dlo++ | [kp6] added comment about prefixing with [kp6]

[17:06] <moritz_> recursion++ ;-)

[17:07] <pugs_svn> r18787 | dlo++ | [kp6] Added a recent commits link

[17:10] <pugs_svn> r18788 | dlo++ | added TODO list.

[17:10] *** pmurias joined
[17:12] <pmurias> t/kp6/56-token-sym.t i think is the easiest thing to hack on right now

[17:12] <lambdabot> pmurias: You have 1 new message. '/msg lambdabot @messages' to read it.

[17:12] <pugs_svn> r18789 | dlo++ | [kp6] Minor formating changes.

[17:13] <dlocaus> pmurias: was that last message for me?

[17:13] <pmurias> from you

[17:13] <dlocaus> pmurias: (this one)(09:12:04) pmurias: t/kp6/56-token-sym.t i think is the easiest thing to hack on right now

[17:14] <pmurias> yes

[17:14] *** amnesiac left
[17:14] <dlocaus> humm, ok. I'll work on that then.  (I haven't started on grammar_17_15_bug_ilustration.t)

[17:15] *** amnesiac joined
[17:18] *** amnesiac left
[17:25] <moritz_> kp6: say "'escaping test 1'";

[17:25] <exp_evalbot> r18789: OUTPUT['escaping test 1'␤]

[17:26] <moritz_> kp6: say '"escaping test 2"';

[17:26] <exp_evalbot> r18789: OUTPUT["escaping test 2"␤]

[17:26] <moritz_> kp6: say 'escaping \' test 3';

[17:26] <exp_evalbot> r18789: OUTPUT[escaping \' test 3␤]

[17:26] <moritz_> kp6: say "escaping \" test 3";

[17:26] <exp_evalbot> r18789: OUTPUT[escaping " test 3␤]

[17:28] <moritz_> kp6: say "escaping \\\" test 5";

[17:28] <exp_evalbot> r18789: OUTPUT[escaping \" test 5␤]

[17:29] <pmurias> moritz_: that bug breakes EmitPerl5 in garlic

[17:29] <moritz_> pmurias: which bug?

[17:30] <pmurias> kp6: say 'escaping \' test 3';

[17:30] <exp_evalbot> r18789: OUTPUT[escaping \' test 3␤]

[17:30] <moritz_> ah, right

[17:36] *** ujwalic joined
[17:38] <dlocaus> snack &

[17:42] *** ujwalic left
[17:48] <dlocaus> yummm hummus and grapes!

[17:49] * moritz_ had "Spätzle", for which I don't know an English word

[17:50] <moritz_> it's a bit like noodles, but they are thicker and contain eggs; usually served with cheese

[17:50] <moritz_> yummy as well ;)

[17:50] <dlocaus> opps, I need to avoid fat.

[17:51] <dlocaus> http://en.wikipedia.org/wiki/Sp%C3%A4tzle (Spatzle)

[17:51] <lambdabot> Title: Spätzle - Wikipedia, the free encyclopedia

[17:52] <dlocaus> yumm

[17:52] <dlocaus> looks good

[17:52] <moritz_> dlocaus: exactly that ;)

[17:53] <dlocaus> wikipedia++

[17:54] <moritz_> spätzle++

[17:54] *** justatheory joined
[18:14] *** amnesiac joined
[18:40] *** Psyche^ joined
[18:43] <pugs_svn> r18790 | dlo++ | [KP6] Added Note about how to get around perl5's Debugger stack notice at 100 levels deep.

[18:44] *** araujo joined
[18:47] *** jjore-w left
[18:53] *** cognominal_ joined
[18:57] *** Psyche^ is now known as Patterner

[19:02] *** ujwalic joined
[19:03] *** ggoebel joined
[19:03] *** barney joined
[19:14] <dlocaus> pmurias: t/kp6/56-token-sym.t ping!

[19:15] <dlocaus> @seen pmurias

[19:15] <lambdabot> pmurias is in #perl6. I last heard pmurias speak 1h 44m 31s ago.

[19:18] <dlocaus> moritz_: ?

[19:18] <dlocaus> moritz_: ping

[19:20] <pmurias> dlocaus: pong

[19:20] <dlocaus> I've traced the problem to Runtime::Perl6;:Mutli

[19:20] <dlocaus> the Class "Multi" does not have add_token_variant implemented.

[19:21] <dlocaus> MultiToken does, however, when I tried substuting it, I got an "syntax" error

[19:22] <dlocaus> pmurias: http://dev.pugscode.org/browser/v6/v6-KindaPerl6/src/KindaPerl6/Runtime/Perl6/Multi.pm

[19:22] <lambdabot> Title: /v6/v6-KindaPerl6/src/KindaPerl6/Runtime/Perl6/Multi.pm - Pugs - Trac, http://tinyurl.com/29l9ma

[19:23] <pmurias> dlocaus: where/when do you get the syntax error?

[19:23] <pugs_svn> r18791 | dlo++ | [kp6] Multi.add_token_variant is not implemented in Runtime::Perl6::Multi

[19:23] <dlocaus> pmurias: one second, getting

[19:24] <pmurias> i moved add_token_variant to MultiToken as multi token and multi sub are seperate things

[19:25] <dlocaus> pmurias: I made the conversion from Multi to MultiToken in KindaPerl/Grammar/Sub.pm line 194

[19:25] <dlocaus> after re-compling I get this error

[19:25] <dlocaus> kitty:~/volunteer/perl6/pugs/v6/v6-KindaPerl6> !perl

[19:25] <dlocaus> perl script/kp6 t/kp6/56-token-sym.t

[19:25] <dlocaus> *** Syntax Error in Block: missing closing curly bracket }

[19:25] <dlocaus> error in Block at compiled/perl5-kp6-mp6/lib/KindaPerl6/Grammar/Sub.pm line 753, <> line 1.

[19:28] *** BinGOs left
[19:29] *** BinGOs joined
[19:32] <pmurias> script/kp6 t/kp6/56-token-sym.t 

[19:32] <pmurias> gives me

[19:32] <pmurias> not ok #...

[19:33] *** JBoofy_ joined
[19:33] <dlocaus> Sorry, I've updated the script to fail

[19:34] *** BinGOs left
[19:35] <dlocaus> reverting

[19:36] <dlocaus> reverted

[19:36] <pugs_svn> r18792 | dlo++ | [kp6] reverted out changes

[19:37] <pugs_svn> r18793 | dlo++ | [kp6] Removed contractions (English grammer)

[19:39] *** cognominal_ left
[19:43] <mncharity> ggoebel: pong

[19:43] <mncharity> obra: I have to run in literally 15 min, but quickly,

[19:44] <mncharity> In addition to current state of what exists, I'd be very interested in a characterization of the "negative space", the gaps where things are missing.

[19:45] <mncharity> Eg, once upon a time we were stuck because only p6-hs could parse p6, its ast didn't include oo, and we were unclear how to implement oo in its backend.

[19:45] <mncharity> and we didn't have a usable p6re engine, with which to create an alternate non-p6-hs frontend.

[19:46] <mncharity> I'm not sure how much of all that has changed.  If a .lot, we may be "unstuck, but not realizing it".

[19:47] <mncharity> Eg, it may be that Moose is an ok oo model, the kp6 ast has the right nodes to handle the entire test suite, and we now have a fast p6re.

[19:52] <mncharity> back to front, if Moose plus (MultiMethods-Pure or kp6 multimethods) is a right thing, what would it take to document and get development of backends on assorted platforms unstuck.

[19:53] *** BinGOs joined
[19:54] <mncharity> if the kp6 ast isn't quite ready for doing the whole test suite, what would it take to become so?  Once is, can we do p6-hs ast <-> new kp6 ast (which would be the v2 ast we've been looking forward to for a couple of years now), conversion, and start driving backends with the non-oo entirety of t/.

[19:56] <mncharity> do we now have a p6 rules engine which is both usable for development, and acceptably fast?  if not, what kp6 tweaking would be needed to get one?  are we using all the 5.latest goodness?

[19:57] <mncharity> is STD something we think can be a next step implementation, or do we want to use it more as documentation, and do something simpler, half way inbetween existing impls and STD.

[19:57] *** jisom joined
[19:58] *** BinGOs left
[19:58] <mncharity> what would be the minimum tweaking needed to get kp6 to run against the test suite?  each time we spin up a new impl, progress is much faster once we can bang on t/.  what would it take to get a kp6 derivative there.

[19:59] *** BinGOs joined
[19:59] <mncharity> timeout.  bbl &

[20:02] <mncharity> (btw, I'm told/know that I sometimes have a negative tone when doing design space analysis.  I'm actually tremendously grateful and happy with fglocks heroic efforts, everyone elses work, obra doing the onion, audreyt breathtaking contribution, TimToady's perseverence, patience and insight, and so many others.  P6 is a great project to have some connection to, and one I think very important for the soft. eng. and the world.)

[20:03] <mncharity> re world, if anyone thinks I'm exagerating, OLPC has the potential for a major impact on 100 M's of kids' lives.  and every day I wish p6 had been ready for primetime.

[20:03] <mncharity> &

[20:04] *** BinGOs left
[20:09] *** BinGOs joined
[20:11] *** ujwalic left
[20:20] <pugs_svn> r18794 | avar++ | Hack to make 5 more tests pass

[20:26] <moritz_> re

[20:36] *** takanori joined
[20:40] <pmurias> moritz_: re

[20:42] *** BinGOs_ joined
[20:42] *** jisom left
[20:42] *** BinGOs left
[20:42] *** BinGOs_ is now known as BinGOs

[20:43] *** thoughtpolice joined
[20:45] <pmurias> avar: kp6 also does what your hack does

[20:46] <moritz_> sounds.. hacky

[20:47] <dlocaus> pmurias: moritz_: well, is there anything you guys want me to work on?

[20:47] <pmurias> dlocaus: is there anything you want to hack on?

[20:48] <dlocaus> Documentation would probably be good.

[20:49] <dlocaus> I realize a lot of this code will be tossed once onion comes into being, but it would be good to get some of onion? documentation going?

[20:49] <dlocaus> will onion be the final release?

[20:49] <avar> pmurias: good to know

[20:49] <avar> dlocaus: some of it will be used for it at least

[20:49] <pmurias> dlocaus: i don't know

[20:50] <moritz_> dlocaus: "final" sounds very... final ;) - I don't think it will be final

[20:50] <dlocaus> mp->kp6->onion->??? ;)

[20:50] <pmurias> onion won't toss so much code

[20:50] <dlocaus> Well, I can refactor code if you want.

[20:50] <dlocaus> I've been working on refactoring script/kp6 (I want to test it a bit more though...)

[20:51] * dlocaus wants to help!!! :)

[20:51] <pmurias> script/kp6 is very ugly

[20:52] <dlocaus> I made it a lot less ugly :)

[20:52] <moritz_> dlocaus: then commit it, and let everybody else test it ;)

[20:52] <dlocaus> I was thinking about sorting out the -st & stdout issue, but I wasn't sure that wouldn't be disrupptive to the end project.

[20:53] <pmurias> dlocaus: i'm too confused by the MultiToken giving parse failures

[20:54] <pmurias> dlocaus: you could try to work on kp6-kp6

[20:54] <dlocaus> kp6-kp6?

[20:54] <pmurias> wait

[20:54] <pugs_svn> r18795 | dlo++ | [kp6] I have refactored script/kp6, I bottomed out a lot of the exit codes, attempted to clean up the documentation, while preserving the core of the code, please revert if I screwed up, and please send me the command that got refactored out dlocaus #perl6 irc.freenode.net

[20:55] <dlocaus> I saw src-script/kp6-kp6, but I didn't know what to make of it.

[20:55] <moritz_> dlocaus: kp6-kp6 is what you get when you compile kp6 with kp6 instead of mp6

[20:55] * dlocaus crriick!

[20:55] <dlocaus> moritz_: doesn't kp6 using mp6 to compile kp6-kp6?

[20:56] <moritz_> now we're in that bootstapping discussion again ;)

[20:56] <dlocaus> aye, that was the "crashing" sound in my head again.

[20:57] <moritz_> ussually when you compile kp6, you use mp6 for most of it, and kp6 for Runtime::Perl6::*

[20:57] *** the_dormant joined
[20:57] <moritz_> now what we call kp6-kp6 is when you compile all of kp6 with kp6

[20:57] <moritz_> it compiles iirc, but it doesn't run yet

[20:58] <dlocaus> moritz_: I'm not sure I'm ready for that, I'm still working on learning the perl6 language.

[20:59] <dlocaus> ok, so we use kp6 w/ mp6 to compile kp6 into perl5 code?

[20:59] <moritz_> dlocaus: in which step do you mean? normal kp6-mp6?

[21:00] <pmurias> in kp6-kp6 we don't use mp6 at all

[21:00] <moritz_> right

[21:00] <moritz_> because kp6 is a fully compiled perl5 image

[21:00] <dlocaus> wouldn't it be

[21:00] <dlocaus> perl script/kp -o kp6.pl src-script/kp6-kp6 

[21:01] <pmurias> yes

[21:01] <dlocaus> where kp6.pl is a completely perl5 code.

[21:01] <moritz_> dlocaus: exactly

[21:01] <moritz_> dlocaus: so no mp6 involved anymore

[21:01] * dlocaus urk!

[21:01] <moritz_> which is why we want the bootstrapping ;)

[21:01] <dlocaus> You mean that everyone down wind of us, has to use the ::DISPATCH code?

[21:01] <avar> no

[21:02] <dlocaus> the perl5 code produced by script/kp6 is a bunch of ::DISPATCH calls...

[21:02] <lisppaste3> avar pasted "kp6 breakage" at http://paste.lisp.org/display/50339

[21:02] *** drupek12 joined
[21:02] <dlocaus> avar: ok, I'll check into that

[21:03] <avar> oh it's because of a svn conflict

[21:03] <avar> works now

[21:03] * avar likes lisppaste

[21:04] <avar> They have a xml-rpc interface unlike sial.org so I can do M-x lisppaste-region in emacs easily:)

[21:04] <lisppaste3> dlocaus annotated #50339 with "it worked for me... " at http://paste.lisp.org/display/50339#1

[21:04] <avar> yeah, my bad

[21:04] <dlocaus> avar: ok

[21:04] <moritz_> avar: sial has a command line interface

[21:04] <moritz_> they provide a client script, I think it's perl

[21:05] <avar> I know, but the xml-rpc stuff I can do in pure-elisp

[21:07] <dlocaus> moritz_: pmurias: I'm going to try and come up with an document that explains how the code works.  IE, who does want and where.  If I'm lucky, I'll get "why" in there too. :)

[21:08] *** baalial joined
[21:08] <dlocaus> The "big picture" of kp6.  Which, is something I haven't been able to get a hold of in my head yet.

[21:08] *** pjcj joined
[21:08] * moritz_ not either

[21:10] *** Aankhen`` left
[21:24] <lisppaste3> avar pasted "What's the 't' in ast & perl5 output all about?" at http://paste.lisp.org/display/50343

[21:24] <dlocaus> what does CompUnit mean?

[21:24] <dlocaus> CompileUnit?

[21:25] <moritz_> yes

[21:25] <avar> "compilation unit"

[21:25] <moritz_> which is a module, package or class

[21:28] <dlocaus> ok

[21:28] <dlocaus> is that "compilation unit" Compiled? or need to be compiled?

[21:29] <avar> It really means it can be stand-alonein some aspects, check out -Ccl for a better exmple than -Cperl5

[21:29] <avar> @tell fglock "What's the 't' in ast & perl5 output all about?" at http://paste.lisp.org/display/50343

[21:29] <lambdabot> Consider it noted.

[21:29] <moritz_> are you talking about the AST?

[21:29] <avar> The general thing, where does this t come from?

[21:29] <avar> but yes, the ast

[21:34] <pmurias> avar: you want to compile 't/kp6/21-oo.t'

[21:34] <pmurias> ?

[21:35] <pmurias> i think you put the -e by mistake

[21:35] <avar> haha, right

[21:35] <avar> thanks:)

[21:36] <pmurias> the polite response to "thanks" is?

[21:37] <moritz_> "you're welcome"

[21:37] <pmurias> thanks ;)

[21:37] <moritz_> or "yw" for short

[21:39] *** barney left
[21:40] <pmurias> dlocaus: the syntax errors in token proto come from inside COMPILER::begin_block($bind)

[21:42] <pmurias> how are multi methods inherited as normal ones?

[21:44] <dlocaus> pmurias: looking

[21:45] <dlocaus> pmurias: as for the multi methods part, I don't know.  I'm still trying to grasp the big picture part.

[21:47] <pmurias> * s/inherited/inherited,/ - in p6 i mean (not in kp6)

[21:47] <moritz_> pmurias: could you rephrase your question?

[21:47] <moritz_> I'd think "just like any other method"

[21:48] *** Jamtech joined
[21:48] <moritz_> just the type of the invocant changes to that of the child class

[21:48] <pmurias> is multi method inheritance the same as only method inheritance?

[21:48] <moritz_> yes, I think so

[21:51] <pmurias> so one would have to add multi method visit($node) {callsame} at the end in a multi method based visitor

[21:52] <pmurias> for example in Perl5Token

[21:52] *** weinig left
[21:52] *** weinig joined
[21:56] <pmurias> dlocaus: you might like fixing Emit::Perl6 (i don't think there are any hidden pitfalls in that task)

[21:57] <pmurias> although you like writing a code overview more, do it

[22:00] *** drupek1253 joined
[22:00] <avar> urgh, proto objects

[22:02] <dlocaus> pmurias: what does Emit::Perl6 need fixing?

[22:02] <dlocaus> I'm attempting to find that compilation error... (it would help if I could read perl6)

[22:02] <dlocaus>  ;)

[22:05] <avar> what error?

[22:05] <pmurias> Emit::Perl6 should turn the ast back into valid perl6 code

[22:06] <avar> should kp6->emitperl6->.p6->kp6 produce the same AST ?

[22:06] <dlocaus> Humm, ok.  I think I'm some where in the middle of the this bug, but I'll check into p6->kp6->p6.

[22:07] <pmurias> avar: yes

[22:12] <pmurias> sleep&

[22:12] *** pmurias left
[22:14] *** drupek12 left
[22:15] <dlocaus> is class Main { ... } a requirement for perl6?

[22:15] <moritz_> no

[22:15] <dlocaus> thanks

[22:16] <moritz_> it's a requirement for mp6 though, iirc

[22:17] <mncharity> dlocaus: a "wrap your head around it" intro (blog post?) to kp6/mp6 would be nifty.

[22:17] <dlocaus> mncharity: aye, I'll be working on that.

[22:18] <dlocaus> I've finally found what was causing the MultiToken problem, or rather, I've found how to "properly" invoke it.

[22:18] <dlocaus> proto token xyz { };   

[22:18] <dlocaus> The compilier doesn't like Empty brakets

[22:18] <dlocaus> proto token xyz { 1; };

[22:18] <dlocaus> this works, sort of.

[22:18] <dlocaus> well, it compiles

[22:18] <mncharity> *caveat, _I'd think_ would be nifty.  My head is as yet unwrapped, so I'm hypothesizing.

[22:20] <dlocaus> mncharity: some of the problem with modifing this code, is you don't know where it came from.

[22:23] <dlocaus> http://dev.pugscode.org/browser/v6/v6-KindaPerl6/compiled/perl5-kp6-mp6/lib/KindaPerl6/Grammar.pm

[22:23] <lambdabot> Title: /v6/v6-KindaPerl6/compiled/perl5-kp6-mp6/lib/KindaPerl6/Grammar.pm - Pugs - Trac, http://tinyurl.com/25fh8q

[22:23] <dlocaus> I was stuffing my head into this file.

[22:23] <mncharity> that first step of getting familiar with an unfamiliar project is often a challenge / barrier to entry.

[22:23] <dlocaus> That code, I think is perl6 code produced by mp6.

[22:23] <mncharity> re "stuffing my head into this file", hmm, you might try the reverse...

[22:24] <dlocaus> sorry, is perl5 code produced produced by mp6, which I think is a translation from perl6.

[22:24] <dlocaus> mncharity: I don't think I can pull the reverse off.

[22:24] <dlocaus> The file is just too complicated.

[22:26] <avar> perl5.9.5 script/kp6 -Cast t/kp6/21-oo.t <= fails

[22:27] <moritz_> avar: does it work with perl 5.8?

[22:32] <dlocaus> I have to pick up my dog (teeth cleaning) & 

[22:32] <mncharity> dlocaus: re complicated, for mechanically generated code it helps if you approach it systematically.  eg, if you don't have an editor which can show you just the top level sub names, then grep them out, and start an analysis doc.  for boilerplate, consider bulk s///ing it away.  And then block by block, go through either adding comments, or discarding code for clear pseudo code.  Eventually get a handle on whats going on.  And start t

[22:33] <dlocaus> mncharity: go ahead, I'll read up on the log when I get back :)

[22:33] *** iblechbot left
[22:33] <pugs_svn> r18796 | avar++ | [kp6] this print_perl() never worked on installations without Perl::Tidy

[22:33] <avar> fixed it

[22:33] <avar> moritz_: yes

[22:34] *** baalial left
[22:35] <mncharity> actually, given that Grammar.pm is generated, first step should probably to look at the file it was generated _from_, no?

[22:41] <avar> eek!

[22:42] <avar> dlocaus: Do your manual changes to compiled/perl5-kp6-mp6/lib/KindaPerl6/Visitor/Emit/Perl5.pm need to be kept?

[22:42] <avar> dlocaus: That "free unreferenced scalar" thing is a bug in the perl interpreter, it's fixed in the 5.8.9 branch and 5.10

[22:44] <pugs_svn> r18797 | avar++ | [kp6] Emit some comments to make ::Method() easier to read in the emitted code. this overwrites some MANUAL CHANGES to the emitted file by dlocaus which probably don't need to be there

[22:44] <avar> caps for the changelogs

[22:45] *** weinig left
[22:46] *** weinig joined
[23:03] *** bbkr left
[23:07] *** bbkr joined
[23:09] *** TJCRI left
[23:14] *** Jamtech left
[23:14] *** the_dormant left
[23:30] *** BinGOs left
[23:32] <dlocaus> avar: don't worry about it

[23:33] <dlocaus> avar: its just some code I put in there to help pmurias / fglock find a bug.

[23:33] *** amnesiac left
[23:34] <dlocaus> avar: I can add it in if the bug hasn't gone away

[23:34] <dlocaus> and I'm away again, pick up my dad at the airport.

[23:35] *** Limbic_Region joined
[23:51] *** fglock joined
