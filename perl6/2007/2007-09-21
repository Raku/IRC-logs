[00:01] *** devogon left
[00:05] *** theorbtwo joined
[00:06] *** d4l3k_ joined
[00:07] *** d4l3k_ left
[00:07] *** dalek left
[00:07] *** dalek joined
[00:17] <dduncan> pugscode is back now

[00:18] *** justatheory left
[00:19] <davidfetter> yay!

[00:19] *** theorb left
[00:21] *** Juerd joined
[00:32] *** thoughtpolice joined
[00:34] *** takanori_ left
[00:45] *** ferreira joined
[00:55] *** takanori joined
[01:06] *** c9s joined
[01:06] *** c9s left
[01:15] *** hoelzro joined
[01:18] *** nipotaway is now known as nipotan

[01:23] <avar> @tell fglock If you tell me what the hell you're trying to do with global.lisp maybe I could implement it >:)

[01:23] <lambdabot> Consider it noted.

[01:25] *** davidfetter left
[01:26] *** polettix left
[01:27] <ahmadz> hi, is feather right now offline?

[01:27] <ahmadz> @seen feather ? ;-)

[01:27] <lambdabot> I haven't seen feather.

[01:28] <ahmadz> @karma feather

[01:28] <lambdabot> feather has a karma of 0

[01:28] <ahmadz> @localtime feather

[01:30] <avar> @localtime avar

[01:30] <lambdabot> Local time for avar is Fri Sep 21 01:30:08 2007

[01:30] <ahmadz> @localtime ahmadz

[01:30] <lambdabot> Local time for ahmadz is Fri Sep 21 04:30:35 2007

[01:30] <ahmadz> @karma ahmadz

[01:30] <lambdabot> You have a karma of 2

[01:30] <ahmadz> not bad ;-)

[01:30] *** daxim_ joined
[01:31] <hoelzro> @localtime hoelzro

[01:31] <avar> ahmadz++

[01:31] <avar> YOU GROW STRONGAH

[01:31] <ahmadz> @karma ahmadz

[01:31] <lambdabot> You have a karma of 3

[01:31] <hoelzro> what, have I no local time?

[01:31] <hoelzro> @karma hoelzro

[01:31] <lambdabot> You have a karma of 3

[01:31] <avar> @remotetime hoelzro 

[01:31] <lambdabot> Unknown command, try @list

[01:31] <avar> @list

[01:31] <lambdabot> http://www.cse.unsw.edu.au/~dons/lambdabot/COMMANDS

[01:32] <ahmadz> i slept to wake and work on runpugs in the morning but pugscode/feather seem to be offline :-(

[01:33] <hoelzro> =(

[01:34] <ferreira> when feather is online again, the next micro-article will there at http://feather.perl6.nl/~ferreira/perl6-operators/repeat.html and repeat.pod6

[01:34] *** [particle1 joined
[01:34] <hoelzro> you plan on working on pugs, ahmadz?

[01:34] <ahmadz> runpugs

[01:35] <ahmadz> hoelzro: finishing the tutorial part of "run perl6 on your browser"

[01:35] <hoelzro> ah

[01:35] <ferreira> Juerd warned about interruptions from 0AM to 4AM. I forgot that and don't have a single copy of the article in another machine.

[01:35] <ferreira> see you tomorrow. 

[01:35] *** ferreira left
[01:40] *** Schwern left
[01:45] *** daxim left
[01:49] *** [particle] left
[01:52] *** Jamtech joined
[01:56] <ahmadz> @localtime juerd

[01:56] <lambdabot> Local time for Juerd is Fri Sep 21 03:56:48 2007

[02:04] *** Schwern joined
[02:08] *** calin_ left
[02:12] *** d4l3k_ joined
[02:12] <pasteling> "pugsbot_r17185" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/27608

[02:12] *** pugs_svnbot joined
[02:12] *** pugsbot_r17185 joined
[02:12] *** dalek left
[02:12] *** Juerd left
[02:13] *** d4l3k_ is now known as dalek

[02:16] *** Limbic_Region left
[02:23] *** ajelenak joined
[02:27] *** Juerd joined
[02:27] <Juerd> Flipped the wrong switch, sorry

[02:29] *** vdrab joined
[03:01] *** rhizo left
[03:02] *** ryporter joined
[03:02] *** takanori_ joined
[03:03] *** takanori left
[03:05] *** elmex_ joined
[03:06] *** amnesiac joined
[03:16] *** ahmadz left
[03:20] *** elmex left
[03:20] *** justatheory joined
[03:20] *** salzh joined
[03:25] *** lyokato joined
[03:28] *** Schwern left
[03:42] *** ajelenak left
[03:44] *** Chris joined
[03:52] *** mj41__ joined
[04:05] *** IllvilJa joined
[04:11] *** mj41 left
[04:25] *** penk left
[04:33] *** Patterner left
[04:33] *** mj41__ left
[04:33] *** amnesiac left
[04:33] *** rgs left
[04:33] *** platypus left
[04:33] *** broquaint left
[04:33] *** beppu left
[04:33] *** shmem left
[04:33] *** perlbot left
[04:33] *** ingy left
[04:34] *** mj41__ joined
[04:34] *** amnesiac joined
[04:34] *** rgs joined
[04:34] *** platypus joined
[04:34] *** broquaint joined
[04:34] *** beppu joined
[04:34] *** shmem joined
[04:34] *** ingy joined
[04:34] *** perlbot joined
[04:34] *** meppl left
[04:34] *** meppl joined
[04:35] *** dduncan left
[04:42] *** vsoni joined
[04:43] *** Jamtech left
[04:44] *** drupek12 left
[04:46] *** vsoni left
[04:51] *** PerlJam joined
[04:54] *** drupek1245 joined
[05:03] *** luqui left
[05:21] *** amnesiac left
[05:38] *** lyokato left
[05:41] *** Aankhen`` joined
[05:42] *** hoelzro left
[05:44] *** Ashizawa joined
[05:49] *** lyokato joined
[05:53] <Aankhen``> avar: Yeesh, why on Earth did you change everything to camelCase?

[05:53] <Aankhen``> Rather, even worse, hyphenated-CamelCase.

[05:53] <platypus> The worse of all worlds.

[05:53] * Aankhen`` grins.

[05:53] *** iblechbot joined
[05:54] *** [particle1 is now known as [particle]

[05:59] <avar> Aankhen``: to mirror the p6 names

[06:01] <Aankhen``> "Bah", I say.  "Bah".

[06:02] <Aankhen``> avar: A few things… first, what is the value of a container?  Second, why do you specify a VALUE slot for kp6-Hash when it already inherits one from kp6-Container?

[06:03] <avar> Aankhen``: hlagh

[06:03] <Aankhen``> Third, why did you remove kp6-object from kp6-Container's superclass list?

[06:03] <avar> clean it up then:)

[06:03] <Aankhen``> Answer the first and third questions first. :-P

[06:13] <pugs_svnbot> r18034 | Aankhen++ | [kp6-lisp]

[06:13] <pugs_svnbot> r18034 | Aankhen++ | * kp6-Container inherits from kp6-Object.

[06:13] <pugs_svnbot> r18034 | Aankhen++ | * added a BIT slot to kp6-Object.

[06:13] <pugs_svnbot> r18034 | Aankhen++ | * changed STR method to be defined with DEFGENERIC.

[06:13] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18034

[06:13] <lambdabot> Title: Changeset 18034 - Pugs - Trac

[06:16] <pugs_svnbot> r18035 | Aankhen++ | * [kp6-lisp] removed references to KP6-GLOBAL package.

[06:16] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18035

[06:16] <lambdabot> Title: Changeset 18035 - Pugs - Trac

[06:17] <avar> fix say() kthx

[06:17] <pugs_svnbot> r18036 | Aankhen++ | * [kp6-lisp] indentation in GLOBAL.lisp

[06:17] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18036

[06:17] <lambdabot> Title: Changeset 18036 - Pugs - Trac

[06:20] <pugs_svnbot> r18037 | Aankhen++ | * [kp6-lisp] initarg for kp6-Bit's BIT slot.

[06:20] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18037

[06:20] <lambdabot> Title: Changeset 18037 - Pugs - Trac

[06:21] <Aankhen``> o_O

[06:21] <Aankhen``> Interesting hash stuff.

[06:22] <avar> light it up

[06:23] <Aankhen``> Sure.

[06:24] <Aankhen``> Seeing as how you wrote KP6-LOOKUP to operate on an instance of KP6-HASH and then pass it a quoted symbol instead, I think I may have found the problem.

[06:29] * Aankhen`` goes to shower.

[06:33] *** devogon joined
[06:34] *** cognominal__ left
[06:35] *** justatheory left
[06:44] *** iblechbot left
[06:55] *** drrho joined
[07:02] *** BinGOs joined
[07:02] *** pdcawley joined
[07:13] <Aankhen``> avar: Okay, got the packages things done in a simple form.

[07:13] <pugs_svnbot> r18038 | Aankhen++ | [kp6-lisp]

[07:13] <pugs_svnbot> r18038 | Aankhen++ | * added kp6-Package class.

[07:13] <pugs_svnbot> r18038 | Aankhen++ | * removed initarg for VALUE slot of kp6-Hash.

[07:13] <pugs_svnbot> r18038 | Aankhen++ | * added Object.lisp to load list.

[07:13] <pugs_svnbot> r18038 | Aankhen++ | * fixed syntax for kp6-Object class definition.

[07:13] <pugs_svnbot> r18038 | Aankhen++ | * added package manipulation functions in GLOBAL.lisp

[07:13] <pugs_svnbot> r18038 | Aankhen++ | * changed Code_say to use TERPRI instead of FORMAT for the newline.

[07:13] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18038

[07:13] <lambdabot> Title: Changeset 18038 - Pugs - Trac

[07:15] *** mr_ank left
[07:16] <Aankhen``> I'm out, later.

[07:16] *** mr_ank joined
[07:18] *** ahmadz joined
[07:26] *** pdcawley_ joined
[07:26] *** pdcawley left
[07:34] *** wolverian joined
[07:36] *** Azure-BOT left
[07:39] *** Azure-BOT joined
[07:41] *** Schwern joined
[07:42] *** hakobe is now known as hkb_lab

[07:49] *** ahmadz left
[07:51] *** franck___ joined
[07:54] *** pdcawley_ left
[07:58] *** ahmadz joined
[08:21] <jisom> anyone around?

[08:25] *** orafu joined
[08:29] <jisom> the bot might answer me, http://74.134.230.123/

[08:55] *** chris2 joined
[09:00] *** vdrab left
[09:15] *** cognominal_ joined
[09:16] *** cognominal_ left
[09:16] *** cognominal_ joined
[09:17] *** jisom_ joined
[09:33] *** jisom left
[09:34] <pugs_svnbot> r18039 | ruoso++ | [kp6] prefix:<$> calls scalar on the object. Match.scalar returns result or self.str

[09:34] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18039

[09:34] <lambdabot> Title: Changeset 18039 - Pugs - Trac

[09:40] <pugs_svnbot> r18040 | ruoso++ | [kp6] using attr directly. Accessors are bad right now...

[09:40] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18040

[09:40] <lambdabot> Title: Changeset 18040 - Pugs - Trac

[09:43] <pugs_svnbot> r18041 | ruoso++ | [kp6] new failing test. Object acessors are not working...

[09:43] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18041

[09:43] <lambdabot> Title: Changeset 18041 - Pugs - Trac

[09:49] <pugs_svnbot> r18042 | ruoso++ | [kp6] object accessors now work...

[09:49] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18042

[09:49] <lambdabot> Title: Changeset 18042 - Pugs - Trac

[10:00] *** IllvilJa left
[10:07] *** rindolf joined
[10:17] *** ahmadz left
[10:19] *** ahmadz joined
[10:22] <pugs_svnbot> r18043 | ruoso++ | [kp6] params to constructor inside rule compile fine but do nothing...

[10:22] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18043

[10:22] <lambdabot> Title: Changeset 18043 - Pugs - Trac

[10:22] *** Ashizawa left
[10:30] *** gaal joined
[10:30] *** snearch joined
[10:30] <gaal> Haskell is less painful than LISP: http://scienceblogs.com/loom/2007/09/21/mathematical_markings.php

[10:30] <lambdabot> Title: The Loom : Mathematical Markings

[10:35] *** devogon left
[10:35] *** Aankhen`` left
[10:36] *** flokuehn joined
[10:40] *** devogon joined
[10:40] *** ferreira joined
[10:41] <ferreira> comments and suggestions on the draft micro-article on repeat operators are very welcome. Read it at http://feather.perl6.nl/~ferreira/perl6-operators/repeat.html

[10:41] <lambdabot> Title: repeat.pod6

[10:44] *** Aankhen`` joined
[10:46] *** cognominal_ left
[10:47] *** cognominal_ joined
[10:49] *** ahmadz left
[10:53] *** jisom_ left
[10:54] *** rindolf left
[10:55] *** sunnavy left
[10:57] *** sunnavy joined
[10:57] *** cognominal_ left
[11:09] <ruoso> ferreira, shouldn't Marker->new be Marker.new ?

[11:10] *** nipotan is now known as nipotaway

[11:10] <pugs_svnbot> r18044 | fglock++ | [kp6] fix ::Obj() emitter

[11:10] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18044

[11:10] <lambdabot> Title: Changeset 18044 - Pugs - Trac

[11:12] *** Blwood joined
[11:17] <ferreira> ruoso: oops. indeed

[11:18] <ferreira> ferreira: fixed

[11:19] <ferreira> hey, I am talking to myself ;-)

[11:20] <ferreira> by the way, yesterday the article on stitching (the ~ operator) hitted the 12th position on The Hot 25. Maybe this series get popular :)

[11:20] <ferreira> The Hot 25 is seen at the right of this O'Reilly page: http://www.oreillynet.com/blogs/

[11:20] <lambdabot> Title: O'Reilly Network Blogs

[11:26] *** fglock joined
[11:26] <szbalint> cool

[11:28] <pugs_svnbot> r18045 | fglock++ | [kp6] set svk eol, mime-type properties

[11:28] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18045

[11:28] <lambdabot> Title: Changeset 18045 - Pugs - Trac

[11:33] *** c9s joined
[11:40] <fglock> Aankhen``: ping

[11:40] <lambdabot> fglock: You have 4 new messages. '/msg lambdabot @messages' to read them.

[11:40] <Aankhen``> fglock: What's up?

[11:40] <fglock> OSX doesn´t know the difference between Package.lisp and package.lisp, and it messed up

[11:40] <Aankhen``> Whoops.

[11:41] <Aankhen``> Sorry, I'll fix that.

[11:41] <fglock> thanks

[11:41] <Aankhen``> Give me a minute, waiting for the VM to be restored.

[11:44] <Aankhen``> Oh man.

[11:47] <Aankhen``> Done.

[11:47] <pugs_svnbot> r18046 | Aankhen++ | * [kp6-lisp] renamed package.lisp to defpackage.lisp to prevent name conflicts.

[11:47] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18046

[11:47] <lambdabot> Title: Changeset 18046 - Pugs - Trac

[11:47] <Aankhen``> Sorry about the delay, my VM lost its network connection.

[11:50] <pugs_svnbot> r18047 | ryporter++ | change double to single quotes, to fix a unit test

[11:50] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18047

[11:50] <lambdabot> Title: Changeset 18047 - Pugs - Trac

[11:54] *** wolv joined
[11:55] *** wolv left
[11:58] *** c9s left
[12:18] *** drupek1245 left
[12:19] *** ahmadz joined
[12:19] <ahmadz> kp6: my @a = <foo 1 2 3>;

[12:19] <exp_evalbot> r18047: OUTPUT[syntax error at position 6, line 1 column 6:␤my @a = <foo 1 2 3>␤      ^ HERE␤]

[12:20] <ahmadz> perl6: my @a = <foo 1 2 3>;

[12:20] <exp_evalbot> kp6: OUTPUT[syntax error at position 6, line 1 column 6:␤my @a = <foo 1 2 3>␤      ^ HERE␤]

[12:20] <exp_evalbot> ..pugs: OUTPUT[["foo", "1", "2", "3"]␤]

[12:20] <exp_evalbot> ..p6: OUTPUT[Null PMC access in invoke()␤current instr.: 'parrot;Perl6::Compiler;main' pc 138 (perl6.pir:98)␤]

[12:20] <exp_evalbot> ..nqp: OUTPUT[Statement not terminated properly at line 1, near "@a = <foo "␤current instr.: 'parrot;PGE::Util;die' pc 123 (runtime/parrot/library/PGE/Util.pir:83)␤called from Sub 'parrot;NQP::Grammar;statement_list' pc 3574 (src/Grammar_gen.pir:1275)␤called from Sub 'parrot;NQP::Grammar;TOP' pc

[12:20] <exp_evalbot> ..537 (src/Grammar_gen.pir:103)␤called from Sub 'parrot;PCT::HLLCo...]

[12:21] <ahmadz> pugs: my @a = <foo 1 2 3>;

[12:21] <exp_evalbot> OUTPUT[["foo", "1", "2", "3"]␤]

[12:23] <Aankhen``> What the…

[12:24] <ruoso> fglock, wooohooo

[12:24] <ruoso> I made it

[12:24] <Aankhen``> Something blew away my defpackage.lisp.

[12:24] <ruoso> it's weird and dirty

[12:24] <ruoso> but works

[12:25] <pasteling> "ruoso" at 82.154.252.25 pasted "named argument support in new" (27 lines, 1K) at http://sial.org/pbot/27635

[12:25] <pugs_svnbot> r18048 | azawawi++ | [runpugs] minified version of runpugs.js

[12:25] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18048

[12:25] <lambdabot> Title: Changeset 18048 - Pugs - Trac

[12:25] <ruoso> fglock, ^

[12:25] <fglock> looking

[12:27] <fglock> looks good :)

[12:27] <pugs_svnbot> r18049 | Aankhen++ | * [kp6-lisp] fixed defpackage.lisp, updated export list.

[12:27] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18049

[12:27] <lambdabot> Title: Changeset 18049 - Pugs - Trac

[12:27] * ruoso recompiling kp6-kp6 with that

[12:29] *** cmarcelo joined
[12:29] <pugs_svnbot> r18050 | Aankhen++ | * [kp6-lisp] fixed Package.lisp

[12:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18050

[12:29] <lambdabot> Title: Changeset 18050 - Pugs - Trac

[12:32] <pugs_svnbot> r18051 | Aankhen++ | * [kp6-lisp] kp6-Package should inherit from kp6-Hash (temporary!).

[12:32] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18051

[12:32] <lambdabot> Title: Changeset 18051 - Pugs - Trac

[12:44] <ruoso> fglock, echo -n 'say "Hello!"' | perl -Ilib-kp6-kp6-p5 kp6-kp6.pl | perltidy

[12:44] <pugs_svnbot> r18052 | ruoso++ | [kp6] implemented arguments to new. WOOOOHOOOO... kp6 now emits *some* ast.. still wrong.. but emits...

[12:44] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18052

[12:44] <lambdabot> Title: Changeset 18052 - Pugs - Trac

[12:45] *** ahmadz left
[13:00] *** lyokato left
[13:06] <pugs_svnbot> r18053 | Aankhen++ | [kp6-lisp]

[13:06] <pugs_svnbot> r18053 | Aankhen++ | * added foreign.lisp containing CL->PERL and PERL->CL methods.

[13:06] <pugs_svnbot> r18053 | Aankhen++ | * removed the unused code in GLOBAL.lisp and changed the "say" function to use CL->PERL.

[13:06] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18053

[13:06] <lambdabot> Title: Changeset 18053 - Pugs - Trac

[13:06] *** flokuehn left
[13:25] *** ryporter left
[13:32] *** blindfish joined
[13:42] *** jhorwitz joined
[13:43] *** Boes joined
[13:49] *** TJCRI joined
[13:50] *** iblechbot joined
[14:22] *** drupek1245 joined
[14:27] *** junp joined
[14:31] *** junp left
[14:31] *** Limbic_Region joined
[14:38] *** Boes left
[14:41] *** TJCRI left
[14:47] *** DarkWolf84 joined
[14:47] *** calin joined
[14:47] *** silug left
[14:49] *** TJCRI joined
[14:49] *** barney joined
[14:49] *** rhizo joined
[14:53] *** turrepurre joined
[14:53] <pugs_svnbot> r18054 | fglock++ | [kp6] added Runtime::Perl6::Scope.pm

[14:53] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18054

[14:53] <lambdabot> Title: Changeset 18054 - Pugs - Trac

[14:54] *** adelfino joined
[14:55] *** Boes joined
[14:55] *** amnesiac joined
[14:57] *** LimbicRegion joined
[14:57] *** LimbicRegion left
[14:58] <rhr> ferreira: $title.elems should be $title.chars.  also, sub prefix:<~> should probably be multi method *prefix:<~>

[14:58] <lambdabot> rhr: You have 1 new message. '/msg lambdabot @messages' to read it.

[14:59] <rhr> @messages

[14:59] <lambdabot> ferreira said 3d 1h 35m 23s ago: Thanks. Fixed.

[15:10] *** Limbic_Region left
[15:10] *** Blwood left
[15:10] <pugs_svnbot> r18055 | fglock++ | [kp6] added a test for Scope.pm

[15:10] <pugs_svnbot> r18056 | ruoso++ | recompile

[15:10] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18056

[15:10] <lambdabot> Title: Changeset 18056 - Pugs - Trac

[15:10] *** snearch left
[15:16] *** franck___ left
[15:20] *** daxim_ left
[15:21] *** drupek1245 left
[15:24] *** franck___ joined
[15:29] *** drupek1245 joined
[15:33] *** theorbtwo left
[15:35] <ferreira> rhr: I fixed the *prefix:<~> signature and used .chars as it should be. thanks

[15:45] *** Boes left
[15:46] *** cognominal_ joined
[15:46] *** barney left
[15:52] *** barney joined
[15:53] *** hkb_lab is now known as hakobe

[15:55] <pugs_svnbot> r18057 | fglock++ | [kp6] *exists()

[15:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18057

[15:55] <lambdabot> Title: Changeset 18057 - Pugs - Trac

[15:58] <pugs_svnbot> r18058 | ruoso++ | [kp6] uses NamedArgument in Match at p5 token. Grab string from $_ if not defined

[15:58] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18058

[15:58] <lambdabot> Title: Changeset 18058 - Pugs - Trac

[16:09] <TimToady> ferreira: actually, multi method *prefix:<~> is wrong several ways.

[16:09] <TimToady> there's no point in putting "multi" on a method with no arguments

[16:09] <pugs_svnbot> r18059 | fglock++ | [kp6] lazy hash lookup

[16:09] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18059

[16:09] <lambdabot> Title: Changeset 18059 - Pugs - Trac

[16:10] <TimToady> nor is there any reason to put the *, since we're looking for a deep coercion on the object, and not using a global operator

[16:11] <TimToady> and prefix:<~> by itself isn't going to specify the deep coercion anyway

[16:12] <ferreira> well, it seems I do not understand operators like ~, +, and ?

[16:12] <ferreira> How do I specify an object Marker to stringify as its attribute $.text ?

[16:13] <TimToady> currently it's specced in S13 with "is deep" but I'm not terribly happy with that

[16:13] *** justatheory joined
[16:14] <moritz_> TimToady: what about an additional coercion interface via roles?

[16:15] <moritz_> so a ~ first looks for a method prefix:<~>, and if it doesn't find one, a role "stringification" or whatever you will call it

[16:15] <ferreira> multi sub *prefix<~> ( Marker $m ) is deep { $m.text }    ??

[16:15] <TimToady> prefix:<~> is the name of a syntax, not the name of a deep operation

[16:16] <PerlJam> ferreira: btw, you suck.  :-) When I applied for a microgrant to write about perl 6 regex, they said they were full up on documentation grants.  So it looks like you got the last one.  

[16:16] <PerlJam> though, it's my own fault for not applying sooner.

[16:16] <TimToady> ferreira: that's almost according to current spec, but you don't need the * on a multi

[16:17] <TimToady> but I still don't really like "is deep" when we should be using type names

[16:18] <TimToady> we can already specify from the receiving type a function like Str()

[16:18] *** pdcawley joined
[16:18] <TimToady> so it seems to me that the sending class should have a way to override that

[16:18] <TimToady> method Str or method :to(Str) or some such

[16:19] <pugs_svnbot> r18060 | fglock++ | [kp6] fixed exists()

[16:19] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18060

[16:19] <lambdabot> Title: Changeset 18060 - Pugs - Trac

[16:19] <TimToady> also the parens in (1) xx $x are unnecessary

[16:19] <PerlJam> perl5 habits die hard :)

[16:19] *** Limbic_Region joined
[16:20] *** mj41__ left
[16:20] *** mj41__ joined
[16:20] <TimToady> and certainly we want $x.Str to work, so for now maybe just make it "method Str"

[16:20] *** mj41__ is now known as mj41

[16:21] *** salzh left
[16:21] <TimToady> maybe "method Str is export"

[16:21] <TimToady> if you want to get the Str() form as well

[16:22] <[particle]> are submethods still around?

[16:22] <TimToady> yes

[16:23] *** justatheory left
[16:23] <pugs_svnbot> r18061 | fglock++ | [kp6]?\194?\160t/kp6/internals/01-scope.t pass

[16:23] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18061

[16:23] <lambdabot> Title: Changeset 18061 - Pugs - Trac

[16:26] *** adelfino left
[16:27] *** pdcawley_ joined
[16:27] *** pdcawley left
[16:29] <pugs_svnbot> r18062 | ruoso++ | [kp6] p5 tokens are now part of the ast, all grammars test pass.

[16:29] <pugs_svnbot> r18063 | ruoso++ | [kp6] fixing test plan...

[16:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18063

[16:29] <lambdabot> Title: Changeset 18063 - Pugs - Trac

[16:30] <ruoso> wheeeeeeeee... only three tests failing

[16:35] *** franck___ left
[16:35] <pugs_svnbot> r18064 | ruoso++ | [kp6] GLOBAL::exit

[16:35] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18064

[16:35] <lambdabot> Title: Changeset 18064 - Pugs - Trac

[16:37] <fglock> ruoso: coffee?

[16:37] <ruoso> yep ;)

[16:39] *** pdcawley_ left
[16:39] *** rhizo left
[16:40] *** rhizo joined
[16:40] *** pdcawley joined
[16:42] *** justatheory joined
[16:46] *** silug joined
[16:49] *** calin left
[16:50] *** justatheory left
[16:55] *** wolverian left
[16:56] *** pugs_svnbot left
[16:56] *** PerlJam left
[16:56] *** pugsbot_r17185 left
[16:57] *** Juerd left
[16:57] *** dalek left
[16:58] *** hoelzro joined
[17:03] <hoelzro> is svn down?  I can't svn update

[17:05] *** rhizo left
[17:05] <ferreira> hey, I lost the connection with feather: "Host does not exist"

[17:07] <ferreira> TimToady: I will replace the scary "multi method ..." thing with "method Str { $.text }" which looks nicer.

[17:09] <ferreira> So there is no point in saying "multi method no_arg { ... }" I thought it be a kind of multi declaration that took precedence over "multi sub one_arg( ThisClass obj )"

[17:09] *** pdcawley left
[17:10] *** lumi left
[17:11] *** lumi joined
[17:15] <ferreira> PerlJam: sorry to have let you down. It looks like they did some simple mathematics on the 10 microgrants. 

[17:16] <ferreira> Having used two for porting stuff (Steve Peters and Steve Pritchard), one for hardware (Juerd), one for travel (fglock, for evangelizing purposes), one for tools/application (Phil Crow), they closed the ones for documentation after the first.

[17:17] *** Aankh|Clone joined
[17:17] <ferreira> Probably the remaining are preferred for coding and testing, and other topics that have not been contemplated.

[17:22] <[particle]> looks like perljam isn't around

[17:22] <[particle]> but maybe he could get a microgrant for interpretive dance

[17:23] <ferreira> yep, he could try it. particle: do you know why feather is gone and svn.pugscode.org as well?

[17:24] <[particle]> no idea

[17:24] *** kyrbe joined
[17:25] <moritz_> even dns for feather.perl6.nl is b0rked

[17:25] *** kyrbe left
[17:25] *** Aankh|Clone left
[17:29] *** Aankh|Clone joined
[17:30] <fglock> moritz_: i've been reading irc.pugscode.org while committing, but after a few hours it gets too big for my phone - i wonder if it would be possible to have a paginate option

[17:30] <fglock> commuting

[17:32] <moritz_> fglock: would a plain text only version help as well?

[17:32] <fglock> sure

[17:32] *** ahmadz joined
[17:32] <fglock> and it should be easier to implement

[17:32] <ahmadz> hi

[17:33] <ahmadz> is feather down?

[17:33] *** rfordinal left
[17:34] <ahmadz> @seen moritz

[17:34] <lambdabot> moritz has changed nick to moritz_.

[17:34] <lambdabot> moritz_ is in #perl6. I last heard moritz_ speak 2m 40s ago.

[17:35] <hoelzro> moritz is on vacation

[17:35] *** hakobe_ joined
[17:35] *** Aankhen`` left
[17:35] *** Aankhen`` joined
[17:36] <moritz_> not yet, but I will be from tomorow, 20H

[17:36] <hoelzro> oh hi

[17:36] <moritz_> hi ;)

[17:36] <ahmadz> moritz: hi ;-)

[17:37] <moritz_> I thought my notebook was b0rked, but occasionally it still works... that's why I thought I couldn't IRC to you guys before vacation ;)

[17:38] <ahmadz> moritz: i used the camel moose pic as a console background on runpugs. it looked cool but then feather went down and so no commit :-(

[17:38] <moritz_> ahmadz: ;)

[17:40] <ahmadz> moritz: and a new click-click sound for the runpugs keyboard is coming also ;-)

[17:42] *** Casan left
[17:42] <moritz_> ahmadz: please don't... I always hate sound on websites ;)

[17:42] *** hakobe left
[17:44] <ahmadz> moritz: consider it noted ;-)

[17:45] <moritz_> ;)

[17:46] <ahmadz> moritz: i guess having a command !kp6 or kp6: is not useful on runpugs as it compiles far less than pugs atm

[17:47] *** justatheory joined
[17:48] * ahmadz thinks about !tutorial and !load example/*.pl in runpugs

[17:49] <moritz_> ahmadz: probably, yes

[17:49] *** vel joined
[17:51] *** Aankh|Clone left
[17:55] *** Aankhen`` left
[17:56] *** snearch joined
[17:56] *** justatheory left
[17:59] *** Aankhen`` joined
[18:00] <moritz_> fglock: http://moritz.faui2k3.org/irclog/text.pl

[18:00] <moritz_> fglock: supports the same parameters as the normal 'out.pl'

[18:00] *** Aankh|Clone joined
[18:01] <fglock> i'm working with ruoso on a high level implementation of scopes for bootstrapping

[18:01] <fglock> moritz_: thanks!!!

[18:03] <moritz_> fglock: you're welcome... more elaborate version to follow after my vacations ;)

[18:04] *** drrho left
[18:05] <moritz_> fglock: now the HTML versions have a "Plain Text" link

[18:06] <fglock> moritz_: the phone wants to download it instead of displaying - but i think it's a problem on my side

[18:06] <moritz_> fglock: it's Content-Type: text/html

[18:07] <moritz_> fglock: perhaps you can configure it...

[18:07] <fglock> yes, looking

[18:07] *** dalek joined
[18:09] *** hoelzro left
[18:12] <fglock> hmm - it just doesn't support "text"

[18:13] <ahmadz> fglock: what kinda of phone?

[18:13] <fglock> ahmadz: nokia 6070

[18:14] *** chris2 left
[18:14] <ahmadz> feather is back ;-)

[18:15] <fglock> yay - committing...

[18:15] <ahmadz> 11% packet loss when you ping it for a while

[18:17] *** snearch left
[18:18] <moritz_> pugs_svnbot is missing ( hilight diakopter here...)

[18:18] *** Aankhen`` left
[18:18] <ahmadz> fglock: most phones dont support text/plain, your need wml or xhtml (http://www.forum.nokia.com/devices/6070)

[18:18] <lambdabot> Title: Device Details -- Nokia 6070

[18:18] *** Aankh|Clone is now known as Aankhen``

[18:18] *** justatheory joined
[18:19] <ahmadz> s/your/you/

[18:19] <fglock> how about a simple-html version like, just replace \n with <br/>

[18:19] <ahmadz> fglock: xhtml or wml will do the trick

[18:20] <ahmadz> fglock: however on wml, you need to escape things a lot 

[18:21] <Aankhen``> Why not just HTML?

[18:21] <ahmadz> moritz: seems to me than feather's dns was only down

[18:23] <ahmadz> if it is well formed, then most phones should have no problem reading it.

[18:23] *** ruoso left
[18:23] <Aankhen``> Indeed.

[18:23] <Aankhen``> The link you gave mentions HTML.

[18:23] <Aankhen``> They might leave out HTML in order to avoid the processing burden of error correction, but IIRC most phones do support it anyway.

[18:23] <fglock> it does read html, but gives out of memory with big pages

[18:24] <Aankhen``> And not with XHTML?

[18:24] <ahmadz> 4MB memory or less

[18:25] <ahmadz> fglock: did u try google's mobilizer: http://www.google.com/gwt/n

[18:25] <lambdabot> Title: Enter a URL

[18:26] <fglock> ahmadz: will try

[18:26] *** justatheory left
[18:27] *** amnesiac_ joined
[18:27] <ahmadz> fglock: we could actually provide a link to on the irc log for simplicity and it should transcode it easily.

[18:27] <fglock> ahmadz: sure - it looks great

[18:27] <fglock> http://www.google.com/gwt/n?u=http%3A%2F%2Firc.pugscode.org&_gwt_noimg=1

[18:28] <lambdabot> Title: IRC log for #perl6, 2007-09-21, http://tinyurl.com/2g3p79

[18:28] <moritz_> it's not very readable though

[18:28] <moritz_> I can create a more readable, tiny version when I get back

[18:29] <fglock> moritz_: the google version is good enough

[18:29] <moritz_> fglock: ok

[18:29] <ahmadz> moritz: most phones = small screen+memory, so more formatting and the browser breaks.

[18:32] <ahmadz> moritz, fglock:  i guess a version without the "left/joined" events would make sense and let google mobilizer do the rest.

[18:33] <fglock> cool - it works now

[18:34] *** amnesiac_ is now known as recover

[18:35] *** recover is now known as recovery

[18:35] *** amnesiac left
[18:35] <moritz_> fglock: please try http://moritz.faui2k3.org/irclog/text.pl?channel=perl6;2007-09-21 again - it now emits a html header

[18:36] <moritz_> and it omits all join/leave messages

[18:36] *** recovery is now known as amnesiac

[18:36] <ahmadz> moritz_++

[18:36] <moritz_> from a technical point of view it's horrible ;)

[18:37] <moritz_> and it's not safe yet

[18:37] <fglock> looking (where is lambdabot with the tinyurl?)

[18:37] <fglock> http://moritz.faui2k3.org/irclog/text.pl?channel=perl6;2007-09-21

[18:37] *** PerlJam joined
[18:38] <moritz_> or just http://moritz.faui2k3.org/irclog/text.pl for today

[18:40] *** vel left
[18:40] <fglock> moritz_: is it marked as html? the phone wants to save it

[18:41] <moritz_> fglock: yes, it's send as text/html

[18:41] *** sunnavy left
[18:42] <moritz_> but it's in quirks mode (no doctype)

[18:44] <moritz_> fglock: perhaps a caching issue?

[18:44] <fglock> maybe - cleaning

[18:48] <fglock> nope

[18:49] <fglock> 4 minutes to clean the cache and retry :P

[18:49] <moritz_> omg

[18:49] <moritz_> fglock: then you'll have to use google for the moment

[18:49] <fglock> moritz_: np, that's good enough

[18:50] <moritz_> fglock: my fault, I'm too dump...

[18:50] <moritz_> fglock: I didn't update the server...

[18:51] *** sunnavy joined
[18:52] <moritz_> fglock: try http://moritz.faui2k3.org/irclog/text.pl again please - last time now ;)

[18:52] <lambdabot> Title: IRC Logs

[18:52] <fglock> k

[18:53] *** jhorwitz left
[18:54] *** IllvilJa joined
[18:55] <fglock> moritz_: out of memory

[18:56] <moritz_> fglock: ok, I give up

[18:56] <ahmadz> phone development can be very difficult to test; i do this everyday ;-)

[18:57] *** barney left
[18:57] <moritz_> decommute &

[18:58] * ahmadz ponders about a wml version of runpugs ;-)

[18:58] <ahmadz> check out this http://feather.perl6.nl:8096/runpugs/ ;-)

[18:58] <lambdabot> Title: Run Perl 6 Now -- in your browser!

[18:58] <fglock> ahmadz: that would be great

[18:59] *** jisom joined
[19:11] <fglock> svnbot is down

[19:13] <fglock> home &

[19:27] *** buubot left
[19:27] *** buubot joined
[19:31] *** hoelzro joined
[19:34] *** fglock left
[19:35] <hoelzro> hooray!  I can svn update again!

[19:43] *** ferreira left
[19:45] *** justatheory joined
[19:50] *** Blwood joined
[19:58] *** hoelzro left
[20:07] *** jisom left
[20:09] *** Khisanth is now known as tchrist

[20:09] *** tchrist is now known as Khisanth

[20:38] <Aankhen``> avar: Make sure to `svn up`. :-)

[20:40] <avar> Aankhen``: what stuff works now?

[20:41] <avar> say() still fails..

[20:41] <Aankhen``> I dunno about the emitter, I've been working on the Lisp side.

[20:42] <Aankhen``> Load up Runtime.lisp, switch to the KP6-CL package, and try this:L

[20:42] <Aankhen``> s/L$//

[20:43] <Aankhen``> (kp6-apply-function "Code_substr" (mapcar #'cl->perl (list "abcdef" 2 2)))

[20:43] <Aankhen``> (kp6-apply-function "Code_say" (mapcar #'cl->perl (list "ab" #\c #\d "ef")))

[20:43] <avar> yeah i see

[20:43] <avar> sweet

[20:43] *** rlb3_work left
[20:43] <Aankhen``> ^_^

[20:43] <avar> Are you using slime?

[20:44] <Aankhen``> But of course.

[20:44] <avar> I've had some issues with loading the lisp files, seems I'm in the wrong dir..

[20:44] <Aankhen``> Yeah, Runtime.lisp uses absolute paths.

[20:45] <Aankhen``> You'll probably need to start emacs from the v6-KindaPerl6/ dir, then (load "lib/KindaPerl6/Runtime/Lisp/Runtime.lisp").

[20:45] <Aankhen``> I should really just create an ASDF system for it.

[20:48] <avar> M-x cd v6-KindaPerl6 M-x slime C-x C-f lib/.../Runtime.lisp C-c C-k worked

[20:48] <Aankhen``> Ugl-eh.

[20:48] <Aankhen``> But it's better than what I was using, I suppose.

[20:48] <avar> I like how package.lisp uses the Hash.lisp stuff

[20:49] <Aankhen``> packages.lisp, you mean

[20:49] <Aankhen``> ?

[20:49] <avar> yeah

[20:49] <Aankhen``> I'm all about layers. <G>

[20:50] <avar> what lisp are you using?

[20:50] *** rlb3_work joined
[20:50] <Aankhen``> SBCL.

[20:50] <Aankhen``> BRB.

[20:50] <avar> clisp here, my box crashes on sbcl;/

[20:53] <Aankhen``> What OS?

[20:53] <avar> ew tabs for indenting

[20:53] <avar> it's running on xen, known bug

[20:54] <Aankhen``> Oh, sucks.

[20:54] <Aankhen``> Tabs for indenting?  Yuck!

[20:54] <Aankhen``> (So says the person who used them exclusively for nine years.)

[20:54] <avar> you put some in global.lisp :)

[20:55] <Aankhen``> Hmm, how?

[20:55] <avar> (define-kp6-function ("say" :returns 'true) (&rest strs)

[20:55] <avar>   (format t "~{~A~}~%" (mapcar #'kp6-value strs)))

[20:55] <Aankhen``> I only edited it in emacs, which is set to use spaces rather than Tabs.

[20:55] <Aankhen``> Where's the Tab?

[20:55] <avar> you fuuckeeed uuup?:)

[20:55] <Aankhen``> I see two spaces before the (format.

[20:56] <avar>     :value #'(lambda ,params

[20:56] <avar>            ,@body

[20:56] <avar>            ,@(when (not (null returns))

[20:56] <avar> there

[20:56] <avar> no "say" is all right

[20:56] <Aankhen``> Still only seeing spaces.

[20:56] <Aankhen``> A lot of them, but spaces nonetheless.

[20:57] <avar> try C-x h M-x untabify on the file and diff it

[20:58] <Aankhen``> I already shut down my VM, unfortunately.

[21:00] *** TJCRI left
[21:01] <avar> how do you call the "say" function?

[21:01] <Aankhen``> (kp6-apply-function "Code_say" (mapcar #'cl->list (list "foo" "bar" "baz")))

[21:02] <Aankhen``> General template, for now, is: (kp6-apply-function "Code_foo" (mapcar #'cl->list (list ...args...)))

[21:03] <Aankhen``> I'll add a wrapper function tomorrow.

[21:05] <Aankhen``> I'm a little confused.  Is there an `apply` and a `call` in Perl 6?

[21:05] <avar> that's a kp6 thing

[21:05] <Aankhen``> Not in Perl 6 proper, then?

[21:06] <avar> KP6-CL> (kp6-apply-function "Code_say" (mapcar #'cl->perl (list "a" "b" "c")))

[21:06] <avar> abc

[21:06] <avar> #<KP6-BIT #x000333E6E488>

[21:06] <avar> It's just something kp6 uses for dispatch I think

[21:07] <Aankhen``> I wrote the KP6-APPLY-FUNCTION, I was just wondering about whether I was stomping a Perl 6 builtin. :-)

[21:07] <avar> Aankhen``: If you can tell me how that would work where "a" "b" and "c" are (make-instance 'kp6-Str :value "a") I can get it working..

[21:07] <Aankhen``> Or rather, confusing names with a builtin.

[21:07] <Aankhen``> The idea is that the MAPCAR runs CL->PERL on each of them, which basically turns them into instances of kp6-Str.

[21:07] <Aankhen``> So if you already have instances of kp6-Str, just pass a list of them instead.

[21:08] <avar> hrm

[21:08] <avar> yeah, I see

[21:08] <Aankhen``> KP6-APPLY-FUNCTION takes the function name and a list of arguments, which need to be Perl 6 objects.

[21:09] <Aankhen``> It's just one step above the bare minimum, which is to look up the function yourself.

[21:09] <Aankhen``> Oh, it can also take an optional :PACKAGE argument to indicate which package you want to search for the function in.

[21:09] <avar> I'll add a generic function that takes kp6-str and just passes it through

[21:09] <Aankhen``> Not sure I understand.

[21:10] <Aankhen``> Oh, a method for CL->PERL specialized on kp6-Str?

[21:10] <avar> KP6-CL> (mapcar #'cl->perl (list "foo" (kp6-value (make-instance 'kp6-Str :value "bar"))))

[21:10] <avar> (#<KP6-STR #x000333E64398> #<KP6-STR #x000333E643B8>)

[21:10] <avar> thi works

[21:10] <avar> KP6-CL> (mapcar #'cl->perl (list "foo" (make-instance 'kp6-Str :value "bar")))

[21:11] <avar> this doesn't

[21:11] <Aankhen``> You could do that, but you'd be better off doing this: (defmethod cl->perl ((object kp6-Object)) object)

[21:11] <avar> so there needs to be a cl->perl version that passes it through

[21:11] <avar> yeah, that's what I was doing:)

[21:11] <Aankhen``> Yes, you're right.

[21:11] <Aankhen``> I'm not sure CL->PERL is the right place to do that though.

[21:11] <Aankhen``> Oh well, it'll do for now.

[21:12] <avar> your stuff doesn't work with kp6-Object, works with kp6-Str

[21:12] <avar> maybe it needs a type-of call instead?

[21:13] <Aankhen``> Wha?

[21:13] <Aankhen``> How so?

[21:13] <avar> (defmethod cl->perl ((object kp6-Str) &key)

[21:13] <avar>   object)

[21:13] <Aankhen``> That works but not kp6-Object?

[21:13] <avar> this works, the same thing with kp6-Object doesn't work

[21:13] <Aankhen``> Strange.

[21:13] <amnesiac> omg it's avar...

[21:14] <Aankhen``> I'll look into it tomorrow.

[21:14] *** hoelzro joined
[21:16] <Aankhen``> avar: What exactly happens if you substitute kp6-Object for kp6-Str?

[21:17] <avar> no generic function is found

[21:17] <Aankhen``> I see.

[21:17] <Aankhen``> Something wrong with the inheritance hierarchy, maybe.

[21:17] <avar> It just needs something equivalent to ->isa("kp6-Object") as opposed to ref $obj eq 'kp6-Str'

[21:17] <avar> yeah

[21:17] <Aankhen``> Dangit, I hate having to boot up a VM to do any programming.

[21:17] <Aankhen``> It's just another barrier!

[21:20] <avar> urgh, subtypep is odd

[21:20] <Tene> Aankhen``: why do you need a VM for programming?

[21:21] <Aankhen``> SUBTYPEP is for checking whether one class is a subclass of another.

[21:21] <Aankhen``> Tene: My primary OS is Windows.

[21:21] <Aankhen``> I've done the whole Win32 programming bit for many, many years, and I finally got tired of it.

[21:21] <Tene> Oh.

[21:21] <hoelzro> ugh, Win32 programming...

[21:21] <Aankhen``> Er, s/Win32 programming/programming on Windows/.

[21:21] <Aankhen``> I didn't mean I've been writing Windows apps.

[21:22] <hoelzro> be thankful

[21:22] * Aankhen`` is.

[21:22] <Tene> So... why are you running on Windows?

[21:22] <Aankhen``> Because for everything except development, it works. :-)

[21:22] <Aankhen``> And I'm not particularly fond of Linux.

[21:22] <avar> you know slime supports connecting to a remote image

[21:22] <Tene> Okay.

[21:22] <Aankhen``> It's better than Windows in many ways, but it's still just the lesser of two evils.

[21:22] <Aankhen``> And with that I'll shut up on the subject.

[21:22] <hoelzro> to each his own

[21:23] <Aankhen``> avar: Yessir.

[21:24] <avar> what do you use windows for?

[21:24] <avar> might be less of a pita to run it in vmware:)

[21:24] <Aankhen``> Everything except development.  Surfing the 'Net, playing games, wasting time on IRC…

[21:25] <Aankhen``> Oh, and watching lots of animated series & movies.

[21:25] <Aankhen``> And listening to music.

[21:25] <Aankhen``> Until foobar2000 is released for Linux, I'm sticking with Windows.

[21:25] <hoelzro> what's foobar2000?

[21:25] <Aankhen``> Audio player.

[21:26] <hoelzro> never heard of it

[21:26] <hoelzro> interesting

[21:26] <avar> use emacs for playing music, dewd:)

[21:26] <avar> the interface is similar to foobar

[21:26] <hoelzro> emacs?!

[21:26] <hoelzro> blasphemy!

[21:27] <hoelzro> I'm a vimmer myself

[21:27] <hoelzro> =P

[21:27] <avar> Aankhen``: ATTACK

[21:28] <Aankhen``> EEK

[21:28] *** thoughtpolice left
[21:29] <Tene> If you don't use linux, why do you care about developing software for it?

[21:29] <avar> Aankhen``: Why do you hate america?

[21:30] <Aankhen``> I don't hate America, and I don't hate Linux. :-)

[21:30] <Tene> I didn't say hate, just "don't use"

[21:31] <Tene> I'm really just curious.

[21:31] <Aankhen``> Tene: As I said, Linux is the lesser of two evils… more importantly, though, I develop software because I love programming.

[21:31] <Tene> Ahh.

[21:31] <Tene> Okay. :)

[21:31] <avar> Aankhen``: Your CL works, but the emitter really likes stuff in a certain order

[21:31] <Aankhen``> avar: How so?

[21:32] <avar> and I (kp6-apply-function "Code_say" (mapcar #'cl->perl (list (make-instance 'kp6-Str :value "a")

[21:32] <avar>  (make-instance 'kp6-Str :value "b")

[21:32] <avar> this works now

[21:32] <avar> but..

[21:32] <avar>  (make-instance 'kp6-Str :value "c"))))

[21:32] <avar> http://sial.org/pbot/27644

[21:32] <lambdabot> Title: Paste #27644 from Someone at 208.78.101.240

[21:32] <avar> this is what the emitter spits out

[21:32] <Aankhen``> You're going to make me start up the VM again, at 3:00 AM, aren't you? :-\

[21:33] <avar> http://sial.org/pbot/27645 # with these patches

[21:33] <lambdabot> Title: Paste #27645 from Someone at 208.78.101.240

[21:33] <avar> nah, this looks more like a task for fglock

[21:33] <Aankhen``> Why did you remove the &allow-other-keys on CL->PERL?

[21:33] * Kattana also cant move to linux until foobar2000 is ported

[21:33] <Aankhen``> And PERL->CL.

[21:34] <avar> oh that was me screwing around earlier, nevermind that

[21:34] <Aankhen``> avar: Oh, I didn't realize what you were trying to use SUBTYPEP for.  What you want is TYPEP.  (typep object 'kp6-Object)

[21:34] <avar> the relevant stuff is EmitLisp.pm

[21:34] <Aankhen``> The invocant EmitLisp.pm spits out is way harsh.

[21:35] <Aankhen``> I'm not sure what it's doing, exactly.

[21:35] <hoelzro> none of us are.

[21:35] <hoelzro> =P

[21:35] * Aankhen`` giggles.

[21:35] <avar> it's spitting out AST nodes 

[21:36] <Aankhen``> avar: Yes, I mean, I'm not sure why it has so many colons, for one.

[21:36] <avar> Either the AST needs to be mutated or the lisp stuff needs to work in that order too

[21:36] <avar> I added that to see what was doing what

[21:36] <Aankhen``> Hrm, hrm.

[21:37] <Aankhen``> This stuff is whack, man!

[21:37] <Aankhen``> </dude>

[21:38] <Aankhen``> avar: What is the invocant it's printing?  Can it be separated into a package and a name?

[21:39] * avar fails to parse that

[21:39] <Aankhen``> (kp6-apply-function (kp6-lookup obj:'(kp6-lookup obj:'kp6-Hash_KP6 index:(make-instance 'kp6-Str :value "GLOBAL") index:(make-instance 'kp6-Str :value "Code_say") ; AIUI, that huge second argument is the function being called

[21:40] <Aankhen``> Can it be separated into just the package and the name?

[21:40] <avar> ugh, I don't know

[21:41] <avar> hrm

[21:41] <Aankhen``> I'm sorry, I'm very ignorant of KP6's architecture; perhaps I should have held back before jumping into the CL side. :-\

[21:42] <avar> nah it's fiine

[21:42] * avar tries something

[21:43] <Aankhen``> Okay.

[21:46] <Aankhen``> The KP6-OBJECT thing seems okay here.

[21:46] *** blindfish left
[21:46] <Aankhen``> Actually, I think I'd left the &key off the one I wrote in-channel.

[21:46] <Aankhen``> I've checked in the working version.

[21:48] <avar> yes, you did:)

[21:48] <Aankhen``> Hold on, hold on.

[21:48] <Aankhen``> How on Earth did KP6-VALUE stop inheriting from KP6-OBJECT? O_O

[21:49] <Aankhen``> Fixed.

[21:49] <avar> ah, was that the problem?

[21:49] <Aankhen``> As I said, KP6-VALUE wasn't inheriting from KP6-OBJECT for some reason.

[21:51] <avar> sh-3.1$ echo 'say "a", "b", "c"' | perl kp6-mp6-perl5.pl --lisp | clisp | grep ^Break.*abc

[21:51] <avar> Break 1 [2]> abc

[21:51] <avar> awesomeness

[21:51] <Aankhen``> ?

[21:51] <Aankhen``> What does the Break indicate?

[21:51] <Aankhen``> I only used CLISP very briefly, when I was very new to CL.

[21:52] <avar> nothing, it's just spewing out tons of shit

[21:52] <Aankhen``> Ah.

[21:52] *** Blwood left
[21:53] <avar>         #my $op := $.code.emit_lisp;

[21:53] <avar>         my $op := '"Code_say"';

[21:53] <avar> naughty

[21:54] <hoelzro> which spec contains the information on the relationships between frontend,backend,emitter/etc?

[21:54] <avar> of kp6?

[21:54] <hoelzro> of Perl 6 in general

[21:54] <hoelzro> I want to understand the roles that Pugs, kp6, etc all play

[21:54] <avar> they each work in their own way

[21:55] <avar> and it's all light on docs;/

[21:55] <hoelzro> kp6 is just a Perl 6 -> CL translator?

[21:56] <Aankhen``> avar: LMAO.

[21:56] <hoelzro> I think I'm confused

[21:56] <avar> kp6 emits perl5, html, cl and probably something else

[21:56] <Aankhen``> hoelzro: No, Common Lisp is just one language for which KP6 has an emitter.

[21:56] <hoelzro> I see

[21:56] <Aankhen``> hoelzro: There's a part of KP6 that parses Perl 6, and a separate part that emits that code in a different language.

[21:57] <hoelzro> ah

[21:57] <hoelzro> understood

[21:57] <avar> ls lib/KindaPerl6/Visitor/Emit*

[21:58] <hoelzro> are there plans for Perl 6 -> PIL with kp6?

[21:58] <avar> $ echo 'say "a", "b", "c"' | perl kp6-mp6-perl5.pl --lisp | head -n3

[21:58] <avar> global say

[21:58] <avar> (in-package #:cl-user)

[21:58] <avar> (load (compile-file "lib/KindaPerl6/Runtime/Lisp/Runtime.lisp"))

[21:58] <avar> urgh, where the hell does that "global say" come from

[21:58] <Aankhen``> What's with the "global say" at the beginning?

[21:58] <Aankhen``> Heh.

[21:59] <avar> hoelzro: If someone does it, suure:)

[21:59] *** hakobe_ is now known as hkb_zz

[21:59] <hoelzro> is PIL a big deal, or some idea we're just throwing around?

[21:59] <avar> The current plan for it is to bootstrap it with the STD parser, me and Aankhen`` are just goofing around

[21:59] <avar> what's PIL?:)

[22:00] <Aankhen``> Pugs Intermediate Language?

[22:00] <hoelzro> I think it's Parrot Intermediate Language, or more likely Perl Intermediate Language

[22:00] <Aankhen``> Parrot Intermediate Language?

[22:00] <Aankhen``> One of the two, I think.

[22:00] <avar> Oh that thing

[22:00] <avar> pugs or parrot?

[22:00] <hoelzro> I think it's parrot

[22:01] <TimToady> that's PIR, not PIL

[22:01] * Aankhen`` checks the IRC logs to see if they're smarter.

[22:01] <Aankhen``> Pugs, yay.

[22:01] <Aankhen``> The logs were smarter than me after all. :-D

[22:01] <hoelzro> ah

[22:01] <avar> http://search.cpan.org/~particle/parrot-0.4.16/docs/glossary.pod#PIL

[22:01] <lambdabot> Title: docs/glossary.pod - Parrot Glossary - search.cpan.org, http://tinyurl.com/yw6bue

[22:02] <avar> If someone steps up sure, but pugs doesn't seem like an especially good /runtime/ at the moment

[22:02] <hoelzro> I'm trying to help with Pugs, but I need guidance

[22:03] <hoelzro> and the trac at dev.pugscode isn't very helpful =/

[22:03] <avar> well "Pugs" is a lot of things, are you mainly interested in the pugs haskell compiler ?

[22:03] <avar> i.e. the pugs(1) binary

[22:03] <TimToady> I'm using pugs to breadboard STD currently, but that's because pugs's set of things it does right is closer to what STD needs than the set of things that everyone else's platform does right.

[22:03] <hoelzro> the haskell compiler

[22:04] <avar> TimToady: Are you runnning the desugared version?

[22:05] <TimToady> I've run the metholated version of STD as far as parsing 42+1 via the operator precedence parser. mostly I'm fiddling with small examples to figure out how to optimize DFAable longest tokens out to the current language

[22:06] <TimToady> so when you call "expect_term" from a particular language, it knows right there what all the possible tokens are

[22:06] <TimToady> basically, I'm working on self-lexing grammars

[22:06] <TimToady> which interacts oddly with extensible grammars

[22:07] <TimToady> because when two different languages call expect_term, they have two different sets of longest tokens

[22:07] <TimToady> so that info has to be stored in the right place

[22:07] <avar> ah, so implementations aren't holding you back at the moment

[22:08] <TimToady> well, I've spent a fair share of my time working around pugs bugs...

[22:09] <TimToady> for instance, I can't really create a Match object from Perl 6

[22:10] <TimToady> a lot of the bugs come back to the incomplete object system

[22:10] <TimToady> but some of them are just Parsec being wonky

[22:11] *** devogon left
[22:13] <TimToady> a lot of what I want to do is things like mixins of roles into method objects, but that doesn't work either.

[22:13] <avar> ;/

[22:13] <avar> everything sucks:)

[22:14] <avar> apperently clisp's idea of --quiet or --silent is "please spew out the same irrelivant 50 lines of debug info"

[22:14] <Aankhen``> LMAO.

[22:15] *** wolverian joined
[22:16] <TimToady> I think a good error message would be "foobar at baz line 42; see http://[127.0.0.1]/aos24jakj9 for more"

[22:16] <TimToady> where that contains the traceback and long explanations

[22:16] <TimToady> and maybe the cockpit recorder

[22:17] <szbalint> where is the terminal colour code for orange when you need it

[22:17] <szbalint> :)

[22:17] <TimToady> you do that with the TURN_TERMINAL_ORANGE_ON_ERROR env var

[22:18] <avar> <Starship Troopers Announcer>Error on line 42, would you like to know more?

[22:19] <TimToady> and the http page could have a link that says "Send me in as a bug report"

[22:25] *** Aankhen`` left
[22:28] <avar> kp6: class Fleh {} Fleh.new

[22:28] <exp_evalbot> r18087: OUTPUT[syntax error at position 0, line 1 column 0:␤( ( do { class Fleh {} Fleh.new } ).perl ).sa␤^ HERE␤]

[22:29] <TimToady> that should be a syntax error according to spec

[22:30] <TimToady> requires ; after the {}

[22:30] <TimToady> but that's probably not what it's complaining about there...

[22:31] <TimToady> biab &

[22:41] <avar> avar@oe:/tmp/v6/v6-KindaPerl6$ time ./kp6-hellow |grep abc

[22:41] <avar> abc

[22:41] <avar> real    0m0.086s

[22:41] <avar> the first Perl 6 to machine code compiler via CL and sbcl :)

[22:56] <TimToady> what is CL's attitude toward's Unicode?

[22:57] <avar> It's implementation defined, most do native unicode but if you want it portable across implementations you'll need your own (or some pre-written) library

[22:57] <avar> (length "ævar")

[22:57] <avar> 4

[22:58] <avar> that's clisp, same with sbcl, might not be the case with some others..

[23:00] *** weinig joined
[23:03] <avar> TimToady: So about as well as C:)

[23:03] <avar> w 5

[23:05] *** polettix joined
[23:06] <avar> How do I see (in kp6) what class something belongs to?

[23:06] <avar>         my $op := $.code.emit_lisp;

[23:06] <avar> I want to find out what class that's being dispatched to 

[23:06] <avar> not $.code.WHAT

[23:06] <avar> (ref $foo).to(Perl6) :)

[23:10] <TimToady> .WHAT gives you the protoobject, while .HOW gives you the metaclass object

[23:10] <TimToady> (in theory)

[23:11] <TimToady> there is no such thing as a class object in Perl 6 :)

[23:12] *** lambdabot left
[23:13] *** dduncan joined
[23:14] <avar> I just want to see what class it belongs to

[23:16] <TimToady> define "belongs"

[23:16] *** iblechbot left
[23:16] *** BinGOs_ joined
[23:17] <TimToady> there is no object that "owns" your object...

[23:18] <amnesiac> avar, introspection?

[23:21] <TimToady> introspection would be in the bailywick of the .HOW metaclass object

[23:22] <amnesiac> yes, about the behaviors of the object

[23:22] <amnesiac> TimToady, but what abou attributes?

[23:22] *** cmarcelo left
[23:22] <amnesiac> TimToady, I guess avar wants to know the class it belongs to, not as a relationship, just about with which class was it created

[23:24] <avar> yeah, what C<class {}> the method will be dispatched to

[23:25] <TimToady> that would be controlled by the metaobject instance, which could support either class-based or prototype-based method dispatch

[23:26] <TimToady> but each class {} would typically get its own instance

[23:26] * amnesiac ponders

[23:30] <TimToady> the standard MO is class based, but there's no guarantee.  a MOP could easily set up a responder interface without classes at all, as in prototype based languages.  if there's a concept of class, your .HOW should be able to tell you

[23:30] <TimToady> but for the standard MO, it'll probably just tell you the protoobject, whose main function is to carry the .HOW without being a real object.

[23:31] <TimToady> so when you say "class Foo {}" you're setting up a Foo protoobject that isn't a real object

[23:31] <TimToady> nonetheless Foo.HOW returns the metaclass instance for it.

[23:32] <TimToady> otherwise you'd have to say Foo.new.HOW to get at it.

[23:33] <TimToady> Foo is just a typed undef in Perl 6

[23:33] <TimToady> Foo.HOW is the closest thing to a "class"

[23:34] <TimToady> the "class" keyword is a good indication that you're using the standard MO though

[23:34] <TimToady> a different MOP would likely use a different keyword

[23:34] <TimToady> much like roles and subsets are different ways to view types

[23:35] <TimToady> (though roles are a part of the standard MOP)

[23:37] <wolverian> random_mop_class Foo { } # macro

[23:38] *** BinGOs left
[23:39] <TimToady> currently package_declarator:<random_mop_class> in STD

[23:41] <wolverian> ach, my ideas are pre-empted

[23:42] <TimToady> we're serious about extensibility in Perl 6, and have been so for 'bout seven years now...

[23:42] <TimToady> so there's been a lot of pre in which to empt...

[23:46] *** BinGOs joined
[23:47] *** BinGOs_ left
[23:54] <Eidolos> possible microgrant idea: implement a few popular modules in idiomatic p6

