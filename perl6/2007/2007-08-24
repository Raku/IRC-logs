[00:20] *** jhorwitz joined
[00:20] *** jhorwitz left
[00:25] *** weinig_ left
[00:25] *** weinig_ joined
[00:26] *** daxim_ joined
[00:27] *** DaGo left
[00:30] *** Limbic_Region left
[00:31] *** nipotaway is now known as nipotan

[00:33] *** BinGOs left
[00:39] *** buetow left
[00:40] *** BinGOs joined
[00:41] *** daxim left
[00:43] <pugs_svnbot> r17406 | lwall++ | [metholate] switch to using $/ for current in-flight match

[00:43] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17406

[00:43] <lambdabot> Title: Changeset 17406 - Pugs - Trac

[00:57] *** weinig_ left
[00:59] *** justatheory left
[01:02] *** araujo joined
[01:10] *** rindolf joined
[01:24] *** mncharity joined
[01:26] *** ofer joined
[01:32] *** weinig_ joined
[01:39] *** sunnavy joined
[01:43] *** BinGOs left
[01:45] *** BinGOs joined
[01:53] *** rindolf left
[02:01] *** lyokato joined
[02:12] *** justatheory joined
[02:17] *** weinig_ left
[02:17] *** weinig_ joined
[02:20] *** REPLeffect joined
[02:32] *** kanru left
[02:38] *** c9s joined
[02:43] <diakopter> and perl6 loses its cents

[02:47] *** |Jedai| joined
[02:49] <diakopter> er, no.  TimToady: what's the distinction between dollar-cents and dollar-backslash

[02:50] <diakopter> <sigh> dollar-slash.

[02:53] <pugs_svnbot> r17407 | rhr++ | [STD] fill out is_type a little

[02:53] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17407

[02:53] <lambdabot> Title: Changeset 17407 - Pugs - Trac

[03:04] *** jedai left
[03:04] *** elmex_ joined
[03:16] *** hkb_zz_ joined
[03:19] *** elmex left
[03:24] *** dduncan joined
[03:33] <TimToady> $/ is the current match, though it still doesn't actually work right for accessing its contents, but will eventually.  $Â¢ is basically just $/.to

[03:34] *** hkb_zz left
[03:43] *** diotalevi joined
[03:47] <pugs_svnbot> r17408 | rhr++ | [STD] all the typenames I could find in S02

[03:47] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17408

[03:47] <lambdabot> Title: Changeset 17408 - Pugs - Trac

[03:47] *** justatheory left
[03:49] <TimToady> mostly is_type just wants to see if there's a package of that name in ::*, I suspect.

[03:50] <TimToady> (or in the current namespace)

[03:52] <rhr> how does one do that?

[03:57] <TimToady> it's just a SMOHP...

[03:58] <rhr> HP?

[03:58] <TimToady> Haskell Programming

[03:58] <TimToady> I suppose you could eval"$name" and see if it complains about barewords

[03:59] *** snearch joined
[03:59] <TimToady> though presumably that's just depending on whatever pugs's idea of is_type is...

[04:00] <rhr> wouldn't that find subs etc. also?

[04:00] <TimToady> well, you'd have to look at the return type, I suppose.

[04:01] <TimToady> but it'd certainly be better if pugs actually implemented symbol tables as user-accessible hashes...

[04:01] <TimToady> maybe there's a way to get at the info

[04:01] <TimToady> I just know GLOBAL::{$name} doesn't work yet

[04:02] <rhr> ah, I thought there was supposed to be some kind of hash...

[04:03] <rhr> should is_type handle things like Int|Str?

[04:03] <TimToady> probably not

[04:04] <TimToady> that's just a constraint, not a real type

[04:04] <TimToady> is_type is really for named types

[04:05] <rhr> what about e.g. unit23?  will all of those be pregenerated in GLOBAL::?

[04:05] <TimToady> unit23?

[04:05] <TimToady> oh, uint

[04:06] <rhr> yes, sorry

[04:06] <TimToady> um, some will likely be pregenerated, I suppose

[04:06] <TimToady> but probably not uint23

[04:06] <rhr> but it's supposed to take any integer there, right?

[04:07] <diakopter> heh

[04:07] <TimToady> we only guarantee powers of two

[04:07] <diakopter> (sorry)  just imagining really large integers

[04:07] <TimToady> and only insofar as "supported" by the architecture, for some def or other

[04:09] <rhr> ok.  I'll leave the current implementation in place for now, and add a commented-out GLOBAL:: impl awaiting haskell magic

[04:10] <TimToady> some of this may straighten itself out eventually when we get MO in pugs

[04:10] <TimToady> we've hardwired some unicode stuff too, which is fine for now

[04:11] <TimToady> but we do need to check for user-defined types there at some point

[04:12] <rhr> right, but that would have to go in the "action" part of STD, no?

[04:12] <rhr> which doesn't exist yet

[04:12] <TimToady> *nod*

[04:13] <TimToady> except insofar as we're currently assuming pugs is good enough, whether it is or ain't.  :)

[04:14] <rhr> :)

[04:15] <TimToady> next I need to write something that runs inside parens and rules that runs down the .prior links and builds a real match object, somehow

[04:15] <pugs_svnbot> r17409 | rhr++ | [STD] is_type should be a little different in the future

[04:15] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17409

[04:15] <lambdabot> Title: Changeset 17409 - Pugs - Trac

[04:15] <TimToady> but pugs is not friendly toward people who want user-defined Match or Capture objects, sigh

[04:16] <TimToady> for now about all I can get is $<foo> and $<0> out of a Hash object

[04:17] <rhr> did you notice that at some point parsing 42+1 began failing with 'pugs: unexpected node: <Scalar:0x2b59c57e9348>'?  Not sure what the problem is or when it stopped working.

[04:18] <TimToady> I broke it when I switched to $/

[04:18] <TimToady> needs fixin

[04:18] <rhr> ok

[04:18] <TimToady> but it seemed obvious to me that $/ needed to be the real in-flight transactional object

[04:19] <TimToady> or we were going to be doing your copy-in-copy-out trick all over

[04:19] <rhr> yes, that makes sense.  afk a few mins &

[04:25] *** BinGOs_ joined
[04:27] *** BinGOs left
[04:31] <rhr> re: hardwired, I should get cracking on the unicode stuff again one of these days...

[04:57] *** diakopter left
[04:57] *** diakopter joined
[05:30] *** jisom joined
[05:39] *** laniz_ joined
[05:39] *** weinig_ left
[05:50] *** Aankhen`` joined
[05:51] *** Aankhen`` left
[05:52] *** REPLeffect left
[05:55] *** Aankhen`` joined
[05:57] *** snearch left
[06:03] *** cls_bsd left
[06:10] *** f0rth left
[06:17] *** sunnavy left
[06:35] *** sunnavy joined
[06:41] *** DarkWolf84 left
[06:44] *** amnesiac left
[06:51] *** BinGOs_ is now known as BinGOs

[06:56] *** cognominal_ left
[06:58] *** mncharity left
[07:00] *** f0rth joined
[07:08] *** dduncan left
[07:11] *** pmurias joined
[07:12] *** jisom_ joined
[07:12] *** jisom left
[07:15] <pmurias> why does capture.t use &foo.callwith(|$capture) instead of foo(|$capture)

[07:15] <pmurias> ?

[07:25] *** lumi left
[07:40] *** franck___ joined
[07:45] *** dwave left
[08:04] <pugs_svnbot> r17410 | pmurias++ | kp6:

[08:04] <pugs_svnbot> r17410 | pmurias++ | keys,values implemented in perl6

[08:04] <pugs_svnbot> r17410 | pmurias++ | testing join and map

[08:04] <pugs_svnbot> r17410 | pmurias++ | do {} around Bind

[08:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17410

[08:04] <lambdabot> Title: Changeset 17410 - Pugs - Trac

[08:32] *** iblechbot joined
[08:42] *** franck___ left
[08:42] *** snearch joined
[08:46] <poletti> sorry, just testing moritz_'s logger: http://www.polettix.it/ciao, link with comma

[08:47] <laniz_> is his code somewhere?

[08:47] <poletti> don't know about the code, but the log is here: http://moritz.faui2k3.org/irclog/out.pl?channel=perl6

[08:47] <lambdabot> Title: IRC log for #perl6, 2007-08-24

[08:48] <wolverian> hm the vertical alignment is still off

[08:48] <wolverian> the code is in pugs repo I think

[08:48] <poletti> I was only ensuring that the trailing comma was kept in the auto-linkified uri

[08:48] <laniz_> cool

[08:48] <wolverian> http://moritz.faui2k3.org/en/ilbot

[08:49] <lambdabot> Title: ilbot - Irc log bot in Perl

[08:49] <wolverian> it uses Net::IRC, though, so someone please port it to PoCoIRC :)

[08:50] <wolverian> moritz_, by the way, http://moritz.faui2k3.org/en/ilbot claims to be xhtml valid, but is not.

[08:50] <lambdabot> Title: ilbot - Irc log bot in Perl

[08:50] <laniz_> thanks wolverian!

[08:51] <laniz_> maybe silly to ask, but that code wont do its magic with Perl 5.8, right?

[08:52] <wolverian> hmm? it's perl5 code afaik

[08:53] <laniz_> then its a perfect example to learn from :D

[08:53] * laniz_ runs away with the code being all happy

[08:54] <wolverian> except it uses Net::IRC ..

[08:54] <laniz_> thats why its great to learn from for me. POE is too complex for a start

[08:55] <wolverian> well, sure, just be aware that Net::IRC is a buggy piece fo crap :)

[08:55] <laniz_> after all the decades of its existence??

[08:56] <wolverian> quite. 

[08:56] <wolverian> 11:56       purl : net::irc is at http://www.funkplanet.com/irc/ or always good for a laugh or a scare, depending on if you're reading the comments or the code (= or see also  POE::Component::IRC or not supported any more and dennis tells people to use PCI. or an abomination and a crime against nature.

[08:56] <wolverian> purl knows best :)

[08:57] <wolverian> but, yes, POE needs some headwrapping around to make sense. 

[08:57] * laniz_ smiles

[08:57] <wolverian> just remember it's a simple state machine.

[09:01] *** franck___ joined
[09:03] *** franck___ left
[09:04] <laniz_> seems a bit similar than DBD::mysql and DBIx::Mysql

[09:04] <wolverian> hm?

[09:04] *** franck___ joined
[09:04] <laniz_> DBIx::Mysql might be much better technically, but its too complex for a beginner

[09:04] <wolverian> I don't think that exists

[09:05] <laniz_> what do you mean?

[09:05] <wolverian> I don't see DBIx::Mysql on CPAN

[09:07] <laniz_> yeah, the full name is DBIx-Mysql-InformationSchema or so

[09:07] <wolverian> oh, okay.

[09:10] <pmurias> DBIx-Mysql-InformationSchema seems be a bit diffrent thing then DBD::mysql

[09:12] <laniz_> yeah, i meant more the DBIx in general

[09:12] <laniz_> still a beginner as you can see :)

[09:13] *** chris2 joined
[09:16] *** ubajas left
[09:24] <pmurias> wolverian: www.funkplanet.com/irc/ is a none-working adress

[09:25] <pmurias> s/none-working/non-working/

[09:25] <wolverian> pmurias, quite. 

[09:28] <wolverian> pmurias, fixed, thanks.

[09:28] <wolverian> (now it says "Net::IRC is not at http:/..." :)

[09:34] <pmurias> ;)

[09:36] *** cognominal_ joined
[09:36] <pmurias> it's a bit unfortunate that if i took part in both the parrot and kp6 hackathons i would miss most of the talks :(

[09:36] *** buetow joined
[09:37] <pmurias> at YAPC::Europe

[09:38] *** lumi joined
[09:40] <pmurias> i'll probably take part in both anyway ;)

[09:42] *** sunnavy left
[09:47] *** poletti is now known as polettix

[09:59] *** snearch left
[10:00] *** ruoso joined
[10:21] *** sunnavy joined
[10:26] *** nipotan is now known as nipotaway

[10:38] *** jisom_ left
[10:40] *** iblechbot left
[10:42] *** fglock joined
[10:49] *** knewt joined
[10:57] *** |Jedai| is now known as jedai

[10:59] <fglock> pmurias: re talks, i feel like that too

[10:59] <pugs_svnbot> r17411 | fglock++ | [kp6] touch Perl6/*.pm and recompile

[10:59] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17411

[10:59] <lambdabot> Title: Changeset 17411 - Pugs - Trac

[11:01] *** knewt_ left
[11:04] <fglock> is Signature.arity a junction, if you have optional arguments?

[11:05] *** rindolf joined
[11:05] *** cognominal_ left
[11:06] *** c9s left
[11:15] *** kanru joined
[11:19] <pmurias> fglock: hi

[11:19] <fglock> hi!

[11:20] <pugs_svnbot> r17412 | fglock++ | [kp6] Signature.arity

[11:20] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17412

[11:20] <lambdabot> Title: Changeset 17412 - Pugs - Trac

[11:22] *** Aankhen`` left
[11:23] *** Aankhen`` joined
[11:24] <pmurias> is mp6 declared frozen, or is it ok to add an simplified <after> support

[11:24] <pmurias> ?

[11:24] *** lyokato left
[11:25] <fglock> it's a junction of frozen and open

[11:25] <fglock> it's ok :)

[11:28] <pmurias> but not encouraged ;)

[11:33] *** iblechbot joined
[11:34] <pmurias> why does mp6 match literals a char at a time?

[11:35] <pmurias> how do i recompile a file in mp6?

[11:40] <pmurias> it emitts 'literal' ok, but splits literal into 7 seperate chars

[11:48] <fglock> re char at a time, it didn't make much difference when benchmarking

[11:50] *** agentzh joined
[11:50] <fglock> for recompiling, there is util/build-perl5.sh

[11:51] <fglock> if all goes well, you can move lib5-new to lib5

[11:51] <agentzh> heh, there's always version-control :)

[11:51] <fglock> then recompile again, in order to check that it bootstraps

[11:52] <agentzh> fglock: sorry if i'm interrupting...but out of curiosity, are you going to run kp6 against the pugs test suite?

[11:52] *** Shillo joined
[11:52] <Shillo> Hi all

[11:52] <agentzh> hi, Shillo

[11:55] <Shillo> Oh. Hiya!

[11:55] <Shillo> Glad to see -somebody- awake. :)

[11:56] <pmurias> agentzh: there are some syntax issues blocking it

[11:57] <pmurias> kp6 runs only t/01-sanity/01-tap.t unmodified

[11:57] <rindolf> Hi Shillo 

[11:57] <rindolf> Shillo: it's 15:00 here.

[11:58] <pmurias> but i for one would love to use the pugs test suit

[12:01] <fglock> agentzh: re test suite, yes,

[12:01] <agentzh> pmurias, fglock: thanks for the answers :)

[12:01] <fglock> but kp6 still needs some more infrastructure before it can do that

[12:02] <agentzh> okay

[12:02] <agentzh> fglock: is kp6 mature enough to replace PCR?

[12:02] * agentzh is looking for ways to let himself hack on kp6 and related stuff in $work...

[12:02] <fglock> hmm - it could

[12:03] <fglock> kp6-perl5rx is more powerful than PCR

[12:03] <agentzh> great

[12:03] <fglock> but it's not an easy task...

[12:03] <agentzh> hehe, gathered so ;)

[12:04] <fglock> i'm using v6.pm at work

[12:04] * agentzh wants a lua/c++ backend for mp6/kp6.

[12:05] <agentzh> performance is very important here...v6.pm is just not good enough to let my $boss happy ;)

[12:05] <fglock> agentzh: nferraz wants a lua backend too - are you going to the hackathon?

[12:05] <Shillo> rindolf: It's 2pm here, and I'm at work. :)

[12:05] <agentzh> fglock: i'm afraid not...but i'd love to help ;)

[12:06] <Shillo> So, few people on IRC, as Europe works while US still sleeps.

[12:06] <fglock> if you need performance, the shortest path would be to port perl5rx back to PCR

[12:06] <fglock> instead of waiting for kp6 to get faster

[12:06] *** thoughtpolice left
[12:07] <agentzh> fglock: okay, will take a closer look at perl5rx :)

[12:07] <fglock> let me find an example

[12:08] <agentzh> k

[12:08] <pmurias> agentzh: are you worried about regex speed or general speed

[12:08] <agentzh> pmurias: the latter

[12:10] <fglock> agentzh: this is an example of kp6-perl5rx - it should print a Match dump of the result

[12:10] <Shillo> Heh, parrot backend would actually be a good start.

[12:10] <fglock> perl kp6-perl5.pl --perl5rx <  examples/token-test-recurse.pl | perl -Ilib5regex -Ilib5

[12:10] <agentzh> fglock: thanks :)

[12:10] <agentzh> Shillo: parrot backend == moving target

[12:10] <agentzh> Shillo: == pain :)

[12:11] <fglock> agentzh: you can pipe the compiled code through perltidy, to see the generated perl5 regexes

[12:11] <agentzh> okay

[12:12] *** pbuetow joined
[12:13] <agentzh> doing now

[12:13] <pmurias> agentzh: parrot probably isn't as a moving target as it used to be

[12:13] <agentzh> pmurias: glad to hear that :)

[12:14] <pmurias> i may be wrong

[12:14] <pmurias> ;)

[12:14] *** buetow left
[12:14] <fglock> this used to work:  echo 'class Main { say "hello, World" }' | perl -Ilib5 mp6-parrot.pl | parrot -

[12:16] <agentzh> fglock: i see an AST dump from that command :)

[12:16] <fglock> hey, it still works!

[12:16] <fglock> agentzh: it's a Match

[12:16] <agentzh> cool

[12:16] <fglock> it looks like an AST

[12:16] <agentzh> *nod*

[12:16] <agentzh> hehe

[12:18] <agentzh> fglock: how are you debugging p6 regexes while hacking? is there any tracing tool?

[12:18] <fglock> agentzh: no, it just works :P

[12:18] <agentzh> wow...*impressed*

[12:18] <agentzh> it always just works?

[12:19] <pmurias> no

[12:19] <fglock> just kidding :)

[12:19] <fglock> i add print statements

[12:20] <agentzh> okay

[12:20] <agentzh> i'm going to develop a graphical regex tracer for the current PCR.

[12:20] <pmurias> i had to look at the emited code once because mp6 emitted $$<foo> eq 'a' wrongly

[12:20] <agentzh> the basic facilities are already there...

[12:21] <agentzh> pmurias: right, mp6 cannot be bug free (at least for now) :)

[12:21] <pmurias> the compile speed for me with mp6 is slow enough that it's better to think more then to add print statements

[12:22] <agentzh> pmurias: *nod* that's a very good reason for a real regex tracer/debugger

[12:22] <fglock> pmurias: there was a reason to have it frozen...

[12:23] <agentzh> fglock: i know that reason :)

[12:26] <pmurias> if kp6 obsoletes it will be very nice

[12:26] <pmurias> obsoletes mp6

[12:27] <fglock> yes, that's the idea

[12:28] *** jhorwitz joined
[12:30] <sunnavy> Hi, everybody.

[12:32] <sunnavy> I've get some free time about 1 or 2 weeks, and I'd like to do something with P6.

[12:34] <fglock> sunnavy: YAPC::EU would be a great place to be if you have a free week

[12:36] <sunnavy> When I digged into the repository, wow, what a huge repository! I don't know how to start.

[12:36] *** {cerri|nmap} left
[12:36] <sunnavy> fglock: I'm afraid I can't go there, I don't have enough money anyway.

[12:36] <agentzh> sunnavy: welcome from jifty :)

[12:37] <sunnavy> agentzh: ;-)

[12:37] <fglock> sunnavy: t/ and ext/ contain Perl6 code (tests and modules)

[12:37] <agentzh> sunnavy: will you write more tests for pugs?

[12:37] *** cerridwen joined
[12:37] <agentzh> sunnavy: or hack on p6 compilers directly?

[12:38] <agentzh> sunnavy: or proofread the latest synopses first?

[12:39] <sunnavy> Maybe I should proofread the latest synopses, while write more tests ;-)

[12:39] <agentzh> sunnavy: cool

[12:39] <agentzh> sunnavy: take a look at http://perlcabal.org/syn please

[12:39] <lambdabot> Title: Official Perl 6 Documentation

[12:40] <agentzh> sunnavy: it may help ;)

[12:40] <sunnavy> thanks 

[12:40] <agentzh> np :)

[12:42] <rindolf> Hi agentzh 

[12:43] <agentzh> rindolf: hey, rindolf

[12:43] <rindolf> agentzh: what's up?

[12:44] <agentzh> rindolf: looking for ways to do p6 hacking at $work

[12:44] <rindolf> agentzh: what's stopping you?

[12:47] <agentzh> rindolf: the current p6 compilers are not fast and mature enough.

[12:47] <rindolf> agentzh: do you want to write Perl6 code for production?

[12:47] <agentzh> rindolf: it makes it a bit difficult to align them up.

[12:47] <agentzh> rindolf: aye

[12:48] <rindolf> :S

[12:48] <agentzh> rindolf: so i have a plan to write a lua emitter for mp6/kp6.

[12:49] <agentzh> rindolf: so there may be more chances to get p6 aligned with our C/C++ toolchain used here in yahoo.

[12:49] <rindolf> agentzh: are you working for Yahoo?

[12:50] <agentzh> rindolf: yes.

[12:51] <rindolf> agentzh: nice.

[12:51] <agentzh> rindolf: :)

[12:51] <laniz_> i thought Yahoo is doing the dishes for Google now. they still have developers? :P

[12:51] <agentzh> laniz_: ahhh...that is offensive...

[12:52] <laniz_> agentzh: only lame humor of a non-developer :)

[12:52] <pugs_svnbot> r17413 | fglock++ | [kp6] fixed Sub signature (no 'self')

[12:52] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17413

[12:52] <lambdabot> Title: Changeset 17413 - Pugs - Trac

[12:54] <fglock> lunch &

[12:58] <pmurias> any idea why  $ok &&= eval { runtests("../../t/01-sanity.t") } gives

[12:59] <pmurias> ../../t/01-sanity....../../t/01-sanity.t does not exist

[13:00] <pmurias> stupid me

[13:04] *** Shillo left
[13:11] *** agentzh left
[13:22] *** gilimanjaro joined
[13:22] *** b_jonas joined
[13:24] *** gilimanjaro left
[13:26] *** rindolf left
[13:34] *** cognominal_ joined
[13:57] *** iForget joined
[14:07] *** stevan_ joined
[14:08] *** amnesiac joined
[14:10] *** snearch joined
[14:16] *** Yaakov left
[14:27] *** DarkWolf84 joined
[14:28] *** mncharity joined
[14:29] *** turrepurre joined
[14:30] *** buetow joined
[14:30] *** pbuetow left
[14:32] *** stevan_ left
[14:40] *** Aankh|Clone joined
[14:46] <pugs_svnbot> r17414 | fglock++ | [kp6] multi, arity check

[14:46] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17414

[14:48] *** b_jonas left
[14:48] <pugs_svnbot> r17415 | pmurias++ | kp6:

[14:48] <pugs_svnbot> r17415 | pmurias++ | overelaxed the Grammar to allow ending a statement with a newline

[14:48] <pugs_svnbot> r17415 | pmurias++ | kp6 runs TEST from the main pugs test suit listed in TESTS

[14:48] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17415

[14:51] *** cmarcelo joined
[14:55] *** Aankhen`` left
[15:01] <pugs_svnbot> r17416 | fglock++ | [kp6] added Multi test; fails

[15:01] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17416

[15:04] *** Aankh|Clone is now known as Aankhen``

[15:06] <moritz_> re

[15:09] <moritz_> wolverian: re xhtml: thank you, I fixed it

[15:10] *** cognominal_ left
[15:18] *** justatheory joined
[15:18] *** pmurias left
[15:19] *** justatheory left
[15:25] *** snearch left
[15:26] *** snearch joined
[15:31] <laniz_> moritz_: thanks a lot for the very well readable code of your irclog bot! very useful to learn :D

[15:32] *** zamolxes left
[15:33] <moritz_> laniz_: you're welcome ;)

[15:34] <moritz_> ilbot2.pl isn't up to date and may have db timeout issues on low traffic channels

[15:34] <laniz_> covers 3 topics at once that i want to learn :)

[15:34] <moritz_> which ones?

[15:35] <laniz_> irc connectivity, mysql access and templates 

[15:37] *** Aankh|Clone joined
[15:38] <laniz_> surprising to me was, that DBI tutorials have no real good example that explains how you access certain data that is stored in mysql. and i usually learn by playing with examples

[15:38] <laniz_> and projects like blootbot or buubot are too complex to learn from

[15:38] <laniz_> (if you start as beginner)

[15:39] *** buetow left
[15:39] <moritz_> actually the CGI code is getting a bit complex as well

[15:39] <moritz_> if you download earlier revisions, the CGI code is easier

[15:41] *** chris2 left
[15:42] *** zamolxes joined
[15:44] <laniz_> moritz_: how can i checkout earlier version? :)

[15:44] <moritz_> svn up -r $revision

[15:44] <laniz_> cool, thanks 

[15:46] <moritz_> irc logger will be down for about an hour for server maintaince

[15:46] *** Psyche^ joined
[15:47] *** irclogbot_backup joined
[15:47] <laniz_> moritz_: hm. the syntax and variations does not work for me

[15:47] <moritz_> irclogbot_backup takes over, afterwards I'll  backport the changes

[15:48] <moritz_> laniz_: did you do a 'svn co' first?

[15:48] <laniz_> yeah, but maybe too long ago, hang on

[15:48] *** moritz__ joined
[15:49] <moritz__> laniz_: an error message might be helpfull

[15:49] *** iForget left
[15:49] <moritz__> and I hope you substituted $revision with a real revision number

[15:49] <laniz_> [17:48:56]: laniz@castle:~/svn : svn up -r 1

[15:49] <laniz_> Skipped '.'

[15:50] <moritz__> is this the pugs root directory?

[15:50] <laniz_> yep

[15:50] <fglock> pmurias: ping

[15:51] <fglock> pmurias: Can't locate KindaPerl6/Grammar/Statements.pm in @INC

[15:51] <moritz__> laniz_: I'd recommend r16066 as a starting point

[15:51] *** weinig_ joined
[15:52] <laniz_> oh

[15:52] <moritz__> r1 is _really_ old, and doesn't contain ilbot at all

[15:53] <laniz_> the svn syntax somehow does not work for me, but its not that important

[15:54] <moritz__> what does a simple 'svn up' produce?

[15:54] <laniz_> Skipped '.'

[15:54] <laniz_> but does not fetch a thing

[15:54] <moritz__> which means that something is wrong with your working copy

[15:54] <laniz_> or is "up" to upload to the repo and i need "down" or something?

[15:54] <moritz__> or you aren't in a svn repo at all

[15:55] *** Aankhen`` left
[15:55] <moritz__> no, "up" is to "update" your local copy

[15:55] <moritz__> upload is "commit" or "ci"

[15:55] *** irclogbot left
[15:55] *** moritz_ left
[15:55] <laniz_> well. but if i checkout r17416 before that it cant update a thing, no?

[15:56] <moritz__> the normal output would be "At revision 17416."

[15:57] <[particle]> svn co http://svn.pugscode.org/trunk -r 16066  # is that correct?

[15:57] <moritz__> s/trunk/pugs/

[15:58] <[particle]> laniz_: i suggest you create an empty directory for pugs, change to it, and run that (corrected) command

[15:58] <SamB> svn up is short for svn update. as in, you can run the latter and it does the exact same thing.

[15:58] <laniz_> svn co http://svn.pugscode.org/pugs/misc/irclog/ --> Checked out revision 17416. | then: svn up -r 16066 --> Skipped '.'

[15:58] <moritz__> laniz_: first you have to go into that directory

[15:58] <moritz__> cd irclog; svn up

[15:59] <moritz__> cd irclog; svn up -r 16066

[15:59] <laniz_> oh crap, you said that before. i am sorry

[15:59] <moritz__> no problem

[15:59] <SamB> hehe

[15:59] *** barney joined
[15:59] <laniz_> i thought by "bugs directory" you meant my "~/svn"

[15:59] <laniz_> s/bugs/pugs/

[16:00] <laniz_> now i have it :D

[16:00] <moritz__> s/bugs/pubs/ # it's friday ;-)

[16:00] <laniz_> nice idea. the weather is great for having a beer outside

[16:00] <moritz__> Aye, there are several very nice "Bieaerten" in town here

[16:01] <moritz__> which are basically pubs where you sit outside, usally below trees

[16:01] <laniz_> haha, moosecamel.png so typical Freenode geek :P

[16:02] <laniz_> moritz__: biergarten!

[16:02] <moritz__> s/Freenode/perl/ ;-)

[16:02] <moritz__> laniz_: yes, my terminal ate the 'g'

[16:02] <moritz__> and Biergaerten is the plural

[16:02] *** Patterner left
[16:02] *** Psyche^ is now known as Patterner

[16:03] <laniz_> ah, you have no ô¿½xE4?

[16:03] <moritz__> I usually have, but since my server is down I use a poorly configured irssi

[16:03] <laniz_> oh

[16:03] <moritz__> and since it'll be back in 1H I don't bother with configuring it

[16:04] <laniz_> oh wait, all this will be recorded... oh no

[16:04] <moritz__> too late ;-)

[16:04] * laniz_ hides in a hole

[16:04] <moritz__> but don't bother, we're talking nonsese here half the time anyway ;)

[16:04] <laniz_> phew, ok

[16:05] * laniz_ whispers to moritz__ but TimToady is really him, the master himself?

[16:05] <moritz__> Aye, he is

[16:05] <laniz_> wow :D

[16:05] <moritz__> and a real human as well ;) (or so I believe ;)

[16:06] <laniz_> i once had the chance to speak to Telsa Cox for a while. very nice person :D

[16:07] <laniz_> a pitty she does not write in her blog anymore

[16:07] * moritz__ only knows Alan Cox (but not personally)

[16:07] <laniz_> she is his wife :)

[16:07] <laniz_> also a geek and a true hippie

[16:07] <moritz__> what a coincidence ;-)

[16:07] <laniz_> yeah :D

[16:10] *** schmalbe joined
[16:12] *** cognominal_ joined
[16:15] *** zamolxes left
[16:15] <pugs_svnbot> r17417 | fglock++ | [kp6] added a Grammar::Statements placeholder - waiting for pmurias++ version

[16:15] <pugs_svnbot> r17418 | moritz++ | [irclog] 

[16:15] <pugs_svnbot> r17418 | moritz++ |  * updated POE-based logger to "new"est DB layout, 

[16:15] <pugs_svnbot> r17418 | moritz++ |  * fixed db timeout issues

[16:15] <pugs_svnbot> r17418 | moritz++ |  (both untested)

[16:15] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17418

[16:16] *** zamolxes joined
[16:16] <moritz__> laniz_: are you from Germany as well?

[16:16] <moritz__> or Austria perhaps? *g*

[16:20] <moritz__> laniz_: if so, there is #perl6de on irc.perl.org as well ;)

[16:21] *** barney left
[16:23] *** rindolf joined
[16:29] *** franck___ left
[16:29] *** weinig_ left
[16:31] *** weinig_ joined
[16:37] <pugs_svnbot> r17419 | fglock++ | [kp6] emitter: s/undef/$::Undef/

[16:37] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17419

[16:42] *** ozo left
[16:42] <pugs_svnbot> r17420 | lwall++ | [metholate] remember only the prior nodes that were bound to a name or positional

[16:42] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17420

[16:45] *** irclogbot joined
[16:48] *** moritz_ joined
[16:49] *** moritz__ left
[16:49] <moritz_> irc logs (and the real moritz_) are back ;)

[16:51] <sunnavy> cool :-)

[16:51] *** irclogbot_backup left
[16:55] *** Blwood_ left
[16:56] *** Blwood joined
[16:56] *** sunnavy left
[17:00] *** Blwood left
[17:00] *** Blwood joined
[17:06] <pugs_svnbot> r17421 | fglock++ | [kp6] minor fixes in Array, Multi

[17:06] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17421

[17:09] <moritz_> #kp6 multi sub s($foo, $bar) { say $foo, '|', $bar }; s('a', 'b')

[17:09] <exp_evalbot> r17421: OUTPUT[DISPATCH: calling APPLY KindaPerl6::Runtime::Perl5::DispatchSugar::Dispatch=HASH(0x82d7cc4) on invalid object:$VAR1 = {};â¤â¤ at lib5/KindaPerl6/Runtime/Perl5/MOP.pm line 29â¤ main::DISPATCH('undef', 'APPLY', 'KindaPerl6::Runtime::Perl5::DispatchSugar::Dispatch=HASH(0x82...') called at

[17:09] <exp_evalbot> ..- line 3â¤]

[17:09] <moritz_> #kp6 sub s($foo, $bar) { say $foo, '|', $bar }; s('a', 'b')

[17:09] <exp_evalbot> r17421: OUTPUT[a|bâ¤]

[17:10] *** Patterner left
[17:11] <moritz_> #kp6 sub s($foo, $bar) { say $foo, '|', $bar }; s('a')

[17:11] <exp_evalbot> r17421: OUTPUT[a|â¤]

[17:15] *** Psyche^ joined
[17:15] *** Psyche^ is now known as Patterner

[17:16] <fglock> moritz_: i'm still implementing!

[17:16] <fglock> :)

[17:22] <moritz_> #kp6 sub s(Int $foo) { say $foo; }; s(2);

[17:22] <exp_evalbot> r17421: OUTPUT[Can't modify non-lvalue subroutine call in scalar assignment at - line 3, near ")}"â¤Execution of - aborted due to compilation errors.â¤]

[17:22] <moritz_> is it the type system that is NYI, or Int?

[17:23] <moritz_> it seems like kp6 parses it correctly, but emits non-functional p5

[17:25] *** pmurias joined
[17:25] <pugs_svnbot> r17422 | fglock++ | [kp6] Multi - more fixes, doesn't work yet

[17:25] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17422

[17:25] <pmurias> fglock: sorry for not svk adding Statements.pm

[17:25] <fglock> moritz_: signatures are not finished

[17:26] <fglock> signatures, captures, and multis are interlocked

[17:26] <fglock> pmurias: no problem :)

[17:27] *** weinig_ left
[17:27] *** weinig_ joined
[17:35] <TimToady> hmm, "return" is the wrong verb to use for a reduce, since a rule *must* return the current parse state in addition to anything the user returns

[17:36] *** gwall joined
[17:36] <gwall> hey, could someone maybe help me out with a really weird bug in pugs?

[17:36] <gwall> http://php.pastebin.com/f7d45c2bc

[17:37] <TimToady> spam

[17:37] <gwall> Hey Larry ;)

[17:38] <ruoso> damn bots...

[17:38] <pugs_svnbot> r17423 | fglock++ | [kp6] problem with t/kp6/36-multi.t - doesn't enter the for loop

[17:38] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17423

[17:38] <ruoso> this one is kind of smart

[17:39] <gwall> I'm not a bot, you jerk.

[17:39] *** gwall is now known as deraadt

[17:40] <deraadt> #

[17:40] <deraadt> It was in my freshman year I lost my virginity. I was always the dork in high

[17:40] <deraadt> #

[17:40] <deraadt> school, spending more time writing perl than going out to parties and doing

[17:40] <deraadt> #

[17:40] <deraadt> drugs. Freshman year taught me otherwise though, and my teacher was Geneva

[17:40] <deraadt> #

[17:40] <deraadt> Wall, known simply as "the sex demon," but most importantly the daughter of my

[17:40] <deraadt> #

[17:40] <deraadt> idol, Larry Wall.

[17:40] <ruoso> shit... can soneone kick this shit...

[17:40] <deraadt> I was sitting in my intro to Psychology class (we're all required to take some

[17:40] <deraadt> arts courses, unfortunately) when she strode in. She was a bit short and dumpy,

[17:40] <deraadt> and looked sorta' emo. I immediately recognized her, however, because of the

[17:40] <deraadt> amount of time I spent browsing the Wall family home page. I knew immediately

[17:40] <deraadt> that I wanted to get to know her, perhaps so I could just say I knew Larry's

[17:40] <deraadt> daughter. I edged towards her in the lecture hall, hoping to not seem too

[17:40] <[particle]> diakopter: ping

[17:40] <deraadt> creepy. I sat down three seats away from her.

[17:41] <deraadt> As the prof droned on about something, I felt a tap at my shoulder. I turned to

[17:41] <deraadt> see who it was, and sure enough it was my future sex partner.

[17:41] <deraadt> "Hi, I see you're reading my father's book!" I looked down and saw my copy of

[17:41] <deraadt> the Perl 5 book sitting in my lap. I turned bright red and quickly moved to 

[17:41] <deraadt> cover it up. "Don't worry, I think it's cool. Let's chat after class." She

[17:41] <deraadt> turned back to reading whatever it was she had open on her lap. I think it was

[17:41] <deraadt> a bible (after all, the Wall family was very religious).

[17:41] <deraadt> After class I waited at the exit to the lecture hall for her to come out. As

[17:41] <deraadt> she left the lecture hall, bible under one arm, backpack slung lazily over one

[17:41] <deraadt> shoulder I offered a warm handshake to her and finally uttered my first words

[17:41] <deraadt> to the stumpy Geneva Wall.

[17:41] <deraadt> "Hi, my name is Theo, it is an honor to meet you." She giggled and accepted

[17:41] <deraadt> my handshake.

[17:41] <deraadt> "Nice to meet you Theo, do you have any classes next?"

[17:41] <deraadt> "Nope, I was just going to do some oclets and head back to my dorm room." She

[17:41] <deraadt> seemed to tilt her head quizzically at the term oclet, but quickly shook it off.

[17:41] <deraadt> "Well, why don't you come back to my dorm room and we can get to know eachother?"

[17:42] <moritz_> diakopter: could you please kick the spammer?

[17:42] <deraadt> she said, with a slightly coy wink. Excited to be hanging out with the daughter

[17:42] <ruoso> obra, ping?

[17:42] <deraadt> of the legendary Larry Wall, I quickly accepted and followed her back to the

[17:42] <deraadt> residences.

[17:42] <deraadt> After a few minutes of walking in a somewhat awkward silence, we arrived at her

[17:42] <deraadt> dorm room. "Come on in!" she urged as she unlocked the door and opened it. I

[17:42] <deraadt> walked into the dorm room and had to blink a few times before my eyes could

[17:42] <deraadt> adjust to the light. She closed the door quickly behind her and set her books

[17:42] *** teratoma joined
[17:42] <deraadt> down on the bed. That's when things started getting weird.

[17:42] <deraadt> Most girls usually awkwardly would offer a drink, or perhaps just make small-

[17:42] *** ChanServ sets mode: +o diakopter

[17:42] <deraadt> talk. Not Geneva though. Geneva took off her pants, revealing a bright orange

[17:42] <deraadt> thong. She probably could tell I was a bit shocked from the look on my face,

[17:42] <deraadt> but rather than be ashamed and quickly pull some pants on she said, "wanna 

[17:42] *** diakopter sets mode: +b *!*@65.99.218.179

[17:42] *** deraadt was kicked by diakopter (Autokick! mwahahahah!))
[17:42] <[particle]> *shazaam*

[17:42] <ruoso> can someone clean this shit from the irclogger?

[17:42] <diakopter> I will

[17:43] * moritz_ is doint that already

[17:43] <diakopter> er, no I won't, since I don't have my admin credentials accessible from here

[17:44] <moritz_> done

[17:44] *** diakopter sets mode: +o TimToady

[17:44] <moritz_> I just hope I didn't actually mark some non-spam ;)

[17:44] <diakopter> heh

[17:45] *** diakopter sets mode: +o moritz_

[17:45] <pugs_svnbot> r17424 | fglock++ | [kp6] Multi matches on positional count (it's a start) 

[17:45] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17424

[17:45] <moritz_> just mine and ruoso++ 's notifications

[17:47] * ruoso completely disturbed by that moron... and do hope that doesn't affects anyone life for real... sigh

[17:47] *** philv joined
[17:48] * moritz_ didn't even read it

[17:48] * diakopter keeps /ipkb very handy

[17:49] *** philv left
[17:51] <pugs_svnbot> r17425 | fglock++ | [kp6] t/kp6/36-multi.t passes

[17:51] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17425

[17:52] * ruoso just hate open proxies

[17:54] <moritz_> $mulit.long_names might be an unfortunate name

[17:54] <moritz_> it contains refs to the subs, not their names

[17:55] *** snearch left
[17:56] *** diakopter sets mode: -o TimToady

[17:59] *** justatheory joined
[18:00] <fglock> moritz_: i'm not sure if 'long name' in the spec is talking about strings

[18:00] <pugs_svnbot> r17426 | fglock++ | [kp6] Multi - added TODO

[18:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17426

[18:01] <moritz_> fglock: I didn't realize that the term "long name" was mentioned in the spec... I apologize for the fuzz ;)

[18:01] <fglock> moritz_: i mean, it confuses me too

[18:01] *** thoughtpolice joined
[18:01] *** diakopter sets mode: -o moritz_

[18:01] *** diakopter sets mode: -o fglock

[18:02] *** cognominal_ left
[18:05] *** diakopter sets mode: +o moritz_

[18:08] *** audreyt_ is now known as audreyt

[18:12] *** ubajas joined
[18:13] *** diakopter sets mode: +o fglock

[18:21] *** buetow joined
[18:21] <pugs_svnbot> r17427 | fglock++ | [kp6] added a bit more calling-convention code

[18:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17427

[18:22] *** cognominal_ joined
[18:30] <pugs_svnbot> r17428 | fglock++ | [kp6] changed $multi to &multi - I hope this is valid Perl 6

[18:30] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17428

[18:32] *** felipe left
[18:41] *** weinig_ left
[18:46] *** ubajas3 joined
[18:51] *** schmalbe left
[18:54] *** pmurias left
[18:56] *** ubajas left
[18:57] *** pmurias joined
[19:11] *** ruoso left
[19:18] *** ubajas joined
[19:26] *** diakopter sets mode: +o TimToady

[19:27] *** ubajas3 left
[19:37] *** teratoma left
[19:42] *** fglock left
[20:01] *** ubajas3 joined
[20:02] *** cognominal_ left
[20:07] *** cognominal_ joined
[20:09] *** ubajas left
[20:13] *** weinig_ joined
[20:16] *** rindolf left
[20:17] *** holst joined
[20:21] <holst> will the standard perl6 suite be able to compile the perl6 byte code into standalone executables?

[20:21] <moritz_> holst: probably into parrot bytecode

[20:22] <moritz_> holst: full perl 6 will be able to do an eval(), which requires a p6 installation

[20:22] <holst> ok, but standalone in the sense of .pyc in perl and .class in java?

[20:22] <moritz_> holst: but perhaps you can avoid that by not using eval

[20:23] <holst> hmm, thats something. 

[20:23] <moritz_> but the term "standard perl6 suite" is rather vague

[20:23] <holst> its just ashame that the best thing we got in the year 2007 which compiles native code is ... C 

[20:23] *** kane_ left
[20:23] <moritz_> because everything that passes the test suite is "official" and therefore "standard" ;)

[20:24] <moritz_> allow me to disagree.. we've got eiffel

[20:24] <moritz_> nobody uses that, but for OO programming that's really great

[20:24] <holst> hmm, i've heard about it but I think the syntax was too weird for me (never used it)

[20:29] <moritz_> the syntax is quite oposite to perl: rather verbose, virtually no "special" chars

[20:29] <moritz_> and very readable

[20:30] <moritz_> you don't have to know the language to understand an eiffel program... kinda like pascal with "real" OO

[20:30] <holst> I was looking at a lot of programming languages a bit back, I might have it confused with some other languge

[20:31] <thoughtpolice> we have haskell! :)

[20:31] <holst> maybe that was the one I was thinking off =D

[20:32] * thoughtpolice is working on the new version of his irc bot

[20:32] <thoughtpolice> the first code base was alright

[20:32] <thoughtpolice> then I realized it was too cumbersome to really work with so I did the natural thing

[20:32] <holst> I was looking for a languge 'which is not C++ but efficient and can talk to C'

[20:33] <thoughtpolice> rewrite it, which is what I'm doing. :)

[20:33] <holst> and also I wanted it to be efficient to /program in/ not only in execution

[20:33] <thoughtpolice> and damn, I need something to blog about for DIP6. once school starts I don't know how much I'll be able to do that. :(

[20:34] <moritz_> holst: well, perl 5 and 6 are not C, and can/will be able to talk to C ;-)

[20:34] <moritz_> holst: and so can Eiffel

[20:34] <thoughtpolice> haskell can as well. :)

[20:34] <moritz_> Aye

[20:34] <moritz_> sadly you need a major brain twist for that

[20:34] <thoughtpolice> the 6.8 of ghc is looking nice. should be out sometime in the next month, give or take a few.

[20:35] <thoughtpolice> moritz_: well there's the standard ffi, there's also greencard but I'm not sure how much easier it makes talking to C.

[20:35] <moritz_> thoughtpolice: re DIP6, are you looking for a topic?

[20:35] <thoughtpolice> moritz_: somewhat.

[20:36] <thoughtpolice> moritz_: if you have any ideas you can have post priviledges on it. i've been thinking about it for a while and more people posting stuff on it would make it much more useful than just I posting could.

[20:36] <thoughtpolice> like I said, my last year of high school is starting in ~4 days or so, and when that happens, I'm not sure how much I'll be able to blog (or even code.)

[20:36] <thoughtpolice> so having someone else in the ring would be really nice. :)

[20:36] <moritz_> thoughtpolice: I won't have too much time either, but I can give it a shot

[20:36] <holst> not being able to code and being a student? thats an oxymoron

[20:37] <holst> you will be coding like there is no tomorrow as soon as the exams are closing in =D

[20:37] <thoughtpolice> holst: hah.

[20:37] <moritz_> possible ideas: rules (2), self defined operators...

[20:38] <holst> thoughtpolice: anything to avoid studying, you know =D

[20:38] <moritz_> modules and classes

[20:38] <thoughtpolice> moritz_: anything would be appreciated. :) if you want priviledges to post just gimmie an email.

[20:38] <moritz_> thoughtpolice: you can uses these ideas as well ;)

[20:39] <thoughtpolice> perl 6 is a community effort, so I figure a part of those people blogging would be beneficial.

[20:39] <holst> moritz_: will perl6 core interpreter still be written in haskell when it hits -std or will it be rewritten in C?

[20:39] <Tene> It will be written in Perl 6.

[20:40] <thoughtpolice> moritz_: sent. :)

[20:40] <holst> isnt that a moment 22?

[20:40] <thoughtpolice> moritz_: if you have any ideas of anybody else who would like to contribute, just ask and I'd be glad to give priviledges. ;>

[20:41] <moritz_> thoughtpolice: ok

[20:43] <moritz_> holst: what do you mean?

[20:43] <holst> to implement perl6 in perl6. it would need a perl6 parser, which is itself!

[20:44] *** ubajas joined
[20:44] <holst> I can see how to compile a C compiler with a compiler written in C is do-able, since it's compiled and not interpreted

[20:44] <thoughtpolice> naturally to be able to do this we already need a sufficient perl 6 implementation, which is what pugs aims to be once it's milestones are finished. :)

[20:45] <moritz_> holst: if perl 6 is compiled to parrot bytecode, it's the same situation as with C

[20:46] <moritz_> after all even perl 5 is mostly a compiler

[20:46] <holst> maybe I was really talking about the parrot

[20:46] <Tene> holst: perl6 is first being written in Haskell and Parrot and such with the goal of making a good enough perl 6 to write perl 6 in perl 6.

[20:46] <moritz_> holst: parrot is written in C

[20:47] * holst withdraws from *

[20:47] <holst> Im clearly opening my mouth about things I should not =D

[20:48] <holst> anyways, I was just curious about the current state of perl6 and what this bytecode optimizer etc. backend meant to me as a 'native code' lover

[20:49] <holst> if I was in my own house I would say that we have too much of this 'byte code' this day

[20:49] <holst> but I guess there is trends in everything

[20:49] <thoughtpolice> byte code isn't necessarily a bad thing. it helps bootstrap to other platforms. if you have some, say, ANSI C interpreter for bytecode, you've already got your implementation a lot of places.

[20:49] <Tene> Perhaps we need a cpu that runs parrot natively. ;)

[20:50] <moritz_> Tene: that's a good idea...

[20:50] <holst> like those 'java cpus'

[20:50] <moritz_> Tene: perhaps we can translate the parrot source code to System C to create one ;-)

[20:50] <holst> (no they dont exist, /end of concept proof)

[20:50] <thoughtpolice> i was thinking recently about a haskell compiler for embedded platforms; byte code would be an optimal choice in that instance.

[20:51] <holst> but why not compile into native code with library substitutes for things the native cpu cant handle?

[20:51] <moritz_> what about a parrot backend for GHC?

[20:51] <thoughtpolice> which is something I've thought of since I got my psp. :) haskell on the iphone would definately score a few points as well (although bindings for objective-c would be needed.)

[20:52] <moritz_> holst: I'm not a low level guru, but probably things like JIT-compiling and GC are not easily done in libraries

[20:52] <moritz_> holst: and you lose portability

[20:52] <holst> the portability is in the compiler

[20:52] <holst> like gcc

[20:52] <holst> anyways, I dont want to drive too far off topic with that =D

[20:52] <moritz_> which means "recompiling for every platform"

[20:53] <moritz_> topics are totally overrated ;-)

[20:53] <holst> (compiling is not a bad thing)

[20:53] <holst> just look at gentoo =D

[20:53] <thoughtpolice> for something like embedded platforms, you're dealing with a lot of potential architectures and binary formats, etc.

[20:54] <thoughtpolice> if you have some haskell compiler like I was saying, it'd probably just be a lot easier to have some sort of ANSI-C runtime. if you have that, you've already got your implementation a *lot* of places, by only doing the work once.

[20:54] <moritz_> holst: I'd say that looking at gentoo proves that compiling _is_ a bad thing indeed ;-)

[20:54] <moritz_> just my 0.02â¬

[20:55] <moritz_> my first japh: http://www.perlmonks.org/?node_id=634962

[20:55] <holst> hehe, you are preaching to the already believing 

[20:56] <holst> gentoo is insane

[20:56] <holst> however, it would be equally insane to use a java backend for all programs in all x86 computers

[20:56] <moritz_> why isn't lambdabot posting the title of my URL?

[20:56] <moritz_> @seen lambdabot 

[20:56] <SamB> possibly more insane

[20:57] <SamB> lambdabot is seriously ill, apparantly

[20:57] <SamB> I saw a lambdabot2 in #haskell

[20:57] <holst> moritz_: will that format my harddrive or something? =D

[20:57] <SamB> ... hey ... isn't lambdabot2 in the same process as lambdabot?

[20:58] <moritz_> holst: I don't know what it will do on your maschine, but it left mine healthy ;-)

[20:59] *** ubajas3 left
[21:05] <moritz_> time for bed

[21:05] <moritz_> g'night

[21:05] <holst> nite, thanks for the heads up on perl6

[21:05] *** holst left
[21:09] <obra> TimToady: ping

[21:09] <laniz_> moritz_: sleep well :)

[21:15] *** felipe joined
[21:19] *** ubajas3 joined
[21:20] *** rlb3_work left
[21:20] *** rlb3_work joined
[21:26] *** dmq joined
[21:29] *** ubajas left
[21:38] *** jhorwitz left
[21:40] <pugs_svnbot> r17429 | rhr++ | [Metholated.pm] fix "called at" (maybe)

[21:40] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17429

[21:40] *** Limbic_Region joined
[21:44] *** Aankh|Clone left
[21:46] <rhr> is the above correct, and should other things like "Commit branch" and "didn't match at" be changed likewise?  Or is there something wrong with $Â¢?

[21:47] *** Elly left
[22:01] <TimToady> $Â¢ should have worked there--it's set first thing in that routine.

[22:01] <TimToady> and it should be to, not from, at least for forward ops

[22:02] *** dmq left
[22:02] *** ubajas joined
[22:03] <rhr> until something matches most of $/ (includint $/.to) is undef

[22:03] *** blindfish joined
[22:03] *** iblechbot left
[22:04] <TimToady> $/ should start defined; note that first call is passed MCont.new() now, not 0

[22:04] <TimToady> however, .new could init .to to 0, I suppose

[22:05] <TimToady> s/init/default/

[22:05] <rhr> I guess it should just use +$Â¢ there instead of $Â¢

[22:05] <TimToady> but in general .from is the beginning of the *previous* match

[22:05] <rhr> oh, ok.

[22:05] <TimToady> so would be correct only when prev match was ""

[22:07] <rhr> so I guess I'll change all debugging use of $Â¢ to +$Â¢, does that sound right?

[22:08] <TimToady> $Â¢ should always be a StrPos now, so the + should be unnecessary, assuming ~ produces the same answer

[22:08] <TimToady> for now, if it's not really an Int, it's a bug

[22:09] <rhr> well, it's just undef, which stringifies to ""

[22:09] *** thepler left
[22:10] <TimToady> then it needs = 0 or // 0 somewhere

[22:10] <rhr> how about my $Â¢ = +$/.to;?

[22:11] <TimToady> again, the + should be unnecessary, and merely covers a bug elsewhere

[22:12] *** ubajas3 left
[22:13] <rhr> I don't see what you mean.

[22:13] <TimToady> string positions are not integers, in the long run, they're opaque

[22:14] <TimToady> $/.to should always return a StrPos, and a StrPos should always work anywhere a string position is necessary, without knowing whether it's measured in bytes, chars, or whatever

[22:15] <rhr> so an undef StrPos should stringify to "0"?

[22:15] <TimToady> It's only that pugs assumes all string positions are measured in codepoints that we use ints for now

[22:16] <TimToady> 0 is a convenient but misleading notation for "beginning of the string"

[22:16] <TimToady> it's the only number that doesn't care what its units are

[22:17] <rhr> I'm confused.  The problem is that $Â¢ starts out undef, so you get messages like "_BRACKET called at\n".  I don't see how changing the type of $Â¢ would fix that...

[22:17] <TimToady> $Â¢ should not start out undef, it should start out initialized to the beginning of the string

[22:18] <rhr> OK, so the problem is that $/ starts out with ("to" => undef)

[22:18] <TimToady> yes

[22:19] <rhr> can that only be fixed in pugs?

[22:19] <rhr> and does using +$Â¢ in the debug messages make sense in the meantime?

[22:21] <TimToady> no, and no

[22:21] <pugs_svnbot> r17430 | lwall++ | set proper default on .from and .to

[22:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17430

[22:22] <rhr> aha :)

[22:24] <pugs_svnbot> r17431 | lwall++ | change .from back to .to

[22:24] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17431

[22:26] <TimToady> biab &

[22:30] *** amnesiac left
[22:44] *** ubajas3 joined
[22:45] *** BinGOs left
[22:53] *** ubajas left
[23:06] *** laniz_ left
[23:14] *** BinGOs joined
[23:16] *** cmarcelo left
[23:18] *** ozo joined
[23:23] *** flokuehn joined
[23:24] *** thoughtpolice left
[23:28] *** ubajas joined
[23:34] *** thorat joined
[23:38] *** ubajas3 left
[23:49] *** thorat left
[23:53] *** flokuehn left
[23:54] *** polettix left
[23:58] *** snearch joined
[23:59] *** justatheory left
