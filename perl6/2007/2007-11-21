[00:05] *** theorbtwo joined
[00:09] *** lichtkind left
[00:27] *** thoughtpolice joined
[00:52] *** fglock left
[01:01] *** cognominal_ joined
[01:05] *** fglock joined
[01:26] *** weinig is now known as weinig|away

[01:29] *** fglock left
[01:44] *** jonathanturner joined
[02:02] *** thoughtpolice left
[02:04] *** Limbic_Region left
[03:01] *** kanru left
[03:02] *** kanru joined
[03:07] *** elmex_ joined
[03:21] *** elmex left
[03:24] *** zakame_ joined
[03:39] *** AzureStone joined
[03:42] *** r0bby_ joined
[03:46] *** r0bby_ left
[04:25] *** amnesiac joined
[04:46] *** zakame_ left
[04:57] *** solomon joined
[05:19] *** zakame_ joined
[05:31] *** ofer left
[05:41] *** penk joined
[05:43] *** zakame_ is now known as zakame

[06:05] *** kanru left
[06:29] *** kanru joined
[06:40] *** dj_goku joined
[06:42] *** zakame left
[07:03] * araujo reading PP

[07:03] <araujo> TimToady, bunch of good quotes there

[07:03] <araujo> :-)

[07:19] *** drrho joined
[07:36] *** ruz left
[07:46] *** weinig|away left
[07:57] *** franck___ joined
[08:00] *** Aankhen`` joined
[08:13] *** masak joined
[08:34] *** zakame joined
[08:43] *** jisom joined
[08:51] *** kane__ joined
[08:54] *** iblechbot joined
[08:56] *** masak left
[09:00] *** zakame left
[09:05] *** gongyiliao joined
[09:16] <rafl> obra: pong

[09:24] *** cognominal_ left
[09:52] *** drupek12 left
[10:10] *** zakame joined
[10:13] *** penk left
[10:15] *** chris2 joined
[10:20] *** Khisanth left
[10:27] *** iblechbot left
[10:41] *** iblechbot joined
[10:42] *** drupek12 joined
[10:43] *** zakame left
[10:48] *** zakame joined
[10:49] *** drbean joined
[10:56] *** gongyiliao left
[11:03] *** drbean left
[11:03] *** drbean joined
[11:16] *** jisom left
[11:17] *** polettix joined
[11:40] *** achilles14 joined
[11:40] <achilles14> hi all, I am new to parrot. how to complie perl6 script to parrot bytecode?

[11:43] *** achilles14 left
[11:44] *** achilles14 joined
[11:44] <achilles14> which command to use to compile script into parrot bytecode?

[11:48] *** achilles14 left
[11:56] *** AzureStone left
[12:03] *** drbean_ joined
[12:06] *** drbean left
[12:10] *** ebassi joined
[12:14] *** chris2 left
[12:38] *** jonathanturner left
[12:43] *** weinig joined
[12:48] *** weinig left
[12:49] *** weinig joined
[12:50] *** drrho left
[13:03] *** lichtkind joined
[13:04] *** ebassi is now known as ebassi|lunch

[13:07] *** ludan joined
[13:08] <ludan> hi

[13:13] *** cognominal_ joined
[13:25] *** Khisanth joined
[13:34] *** cmarcelo joined
[13:39] *** laye joined
[13:40] *** ebassi|lunch is now known as ebassi

[13:40] *** ebassi left
[13:41] *** ebassi joined
[14:07] *** drbean_ left
[14:07] *** drbean joined
[14:08] *** rindolf joined
[14:15] *** drbean left
[14:15] *** drbean joined
[14:18] *** c9s left
[14:19] *** masak joined
[14:19] *** hcchien left
[14:21] *** solomon left
[14:30] *** kanru left
[14:32] *** drupek12 left
[14:35] *** pmurias joined
[14:38] *** cognominal_ left
[14:41] *** cognominal_ joined
[14:42] *** pbuetow left
[14:42] *** drbean left
[14:43] *** drbean joined
[14:44] *** drupek12 joined
[14:46] *** TJCRI joined
[14:48] *** c9s_ joined
[14:48] *** c9s_ left
[14:49] *** c9s joined
[14:51] *** drrho joined
[14:56] *** drbean left
[14:56] *** drbean joined
[14:56] *** gongyiliao joined
[14:56] *** gongyiliao left
[14:57] *** gongyiliao joined
[14:59] *** pbuetow joined
[15:00] *** pbuetow left
[15:00] *** pbuetow joined
[15:05] *** penk joined
[15:09] *** gongyiliao left
[15:13] *** Psyche^ joined
[15:23] *** polettix left
[15:24] *** rindolf left
[15:30] *** Patterner left
[15:30] *** Psyche^ is now known as Patterner

[15:31] *** zakame_ joined
[15:33] *** stevan_ joined
[15:35] *** TJCRI left
[15:40] *** TJCRI joined
[15:44] *** ilogger2 joined
[15:47] *** Casan_ joined
[15:48] *** ofer joined
[15:50] *** baest joined
[16:08] *** Lorn joined
[16:20] <obra> hey rafl. one of my minions has been hacking Net::SSLeay for segfaults we're hitting in prod. I was curious if his patch (on rt.cpan) looked sane

[16:21] <rafl> obra: I didn't have a chance to give ssleay some love recently. you could ask [email@hidden.address] the co-maintainer.

[16:22] *** Southen joined
[16:22] <obra> ok. will do. thanks

[16:24] *** cls_bsd left
[16:36] *** Psyche^ joined
[16:40] *** kanru joined
[16:41] *** dlocaus joined
[16:43] <dlocaus> Hi everyone! :)

[16:53] *** ilogger2 joined
[17:18] *** justatheory joined
[17:29] *** justatheory left
[17:30] *** justatheory joined
[17:42] *** TJCRI joined
[17:45] *** rindolf joined
[17:53] *** perlbot joined
[18:00] *** justatheory left
[18:09] *** fglock joined
[18:10] <fglock> dlocaus: hi :)

[18:11] *** jjore-w joined
[18:12] <fglock> I went to Tomar (Portugal) to give a talk on Perl, not much hacking today

[18:12] <fglock> I rewrote the .BIND code yesterday, but it still has some errors

[18:12] <dlocaus> cool

[18:13] <fglock> I guess I'll move the failing tests to t/todo/ and commit

[18:13] <dlocaus> make forcerecompile; make test; breaks the current code

[18:13] <fglock> hmm

[18:13] <dlocaus> I'm trying to find the revision that broke it

[18:13] <fglock> looking

[18:13] <dlocaus> its either dlo or pmurius that broke it

[18:14] <fglock> not necessarily :P

[18:14] <pasteling> "dlocaus" at 63.192.210.11 pasted "hunting down bad commit" (74 lines, 2.3K) at http://sial.org/pbot/28757

[18:15] <dlocaus> fglock: I was wondering, since we have a good working test case (0 errors), could we convince lambabot to do a "make forcerecompile; make test" after every commit?

[18:15] <dlocaus> after the shell script btw, is some "workspace"

[18:16] *** rindolf left
[18:17] <fglock> or, we could have a dedicated bot to do that and then make a smoke report

[18:17] <fglock> we can even reuse the pugs infrastructure

[18:17] <fglock> but I don't know much about how the pugs smoke works

[18:17] <fglock> still compiling...

[18:17] <dlocaus> agh! I'm the guilty party

[18:19] <fglock> "guilty partly" - collaborative work++

[18:19] <dlocaus> 18886

[18:19] <dlocaus> that's the bad revision

[18:19] <dlocaus> oh wait a minute, that's not me.

[18:20] <dlocaus> http://dev.pugscode.org/changeset/18886

[18:21] <fglock> about my talk, people are much interested in the Perl 6 multi processor capabilities

[18:21] <pasteling> "dlocaus" at 63.192.210.11 pasted "Revision 18886 broke the test cases when doing a forcerecompile" (53 lines, 2.6K) at http://sial.org/pbot/28758

[18:22] <fglock> and the thing they want most is an IDE with some kind of "best practices" plugin

[18:23] <dlocaus> Who is "they"?  One of the things I REALLY hate is when my IDE (ultraedit) attempts to correct my perl.  It drives me nuts.

[18:23] <dlocaus> (auto-correct keywords).

[18:24] <dlocaus> Don Canonway's PBP?

[18:24] <fglock> it's a university audience, this what they expect from a "first language"

[18:24] <dlocaus> or by best practices do you mean Perl::Critic?

[18:25] <fglock> they want a limited syntax

[18:25] <fglock> which is possible with Perl 6

[18:25] <dlocaus> a limited syntax?

[18:25] <fglock> like, just one way to do each thing

[18:25] <fglock> but this is just for beginners

[18:26] <dlocaus> oh I see.

[18:26] <fglock> they do want all the other things, later

[18:26] <fglock> and a nice beautiful colorful IDE

[18:26] <fglock> :)

[18:27] <dlocaus> It is an interesting question... do it 1 way (java) or DWIW (perl)

[18:28] <dlocaus> fglock: how do I got about reverting out pmurias's changes?

[18:29] <dlocaus> Should I inform him and wait for a reply?  and if he doesn't respond "reasonbly" soon, just do it and @tell him?

[18:29] <dlocaus> pmurias: ping?

[18:30] <dlocaus> pmurias: ping?

[18:30] <fglock> dlocaus: what kind of changes? if you are fixing a mistake, just do it

[18:30] <dlocaus> fglock: http://dev.pugscode.org/changeset/18886

[18:30] <lambdabot> Title: Changeset 18886 - Pugs - Trac

[18:30] <dlocaus> If I knew it was a mistake I would do it.

[18:30] <fglock> my local copy is doing an infinite loop after make forcerecompile - I guess I'll not commit

[18:30] <fglock> looking

[18:31] <dlocaus> But I'm really just acting the part of a machine.  Do a binary search, find out which commit broke the code, revert that code.

[18:32] <dlocaus> and I didn't even have the good graces to do a binary search, I only did part of one.

[18:32] <fglock> dlocaus: if you find out that the deleted code was necessary, I think it's better to add a test to demonstrate the need

[18:32] <fglock> than just put the code back

[18:32] <dlocaus> fglock: I would, if I knew what was going on.

[18:33] <dlocaus> I'm only good enough (right now) to know that the code broke the test cases.

[18:33] <fglock> this code is working around a grammar bug:

[18:33] <fglock> the grammar thinks 'self' is actually 'self()'

[18:34] <fglock> so it parses to self.APPLY

[18:34] <fglock> that code reverts that at the emitter

[18:34] <dlocaus> fglock: this part?  src/KindaPerl6/Ast.pm

[18:35] <dlocaus> oh, wait, nm

[18:35] <fglock> dlocaus: it's fixable at Grammar::Term

[18:36] <dlocaus> fglock: could you please fix it?  I do not think I have the skills (yet) to fix it.

[18:36] <fglock> but the workaround is ok for now, since all the grammar will be rewritten anyway

[18:36] <dlocaus> workaround?  but the test cases break

[18:37] <fglock> ok

[18:37] <fglock> you mean, the tests break because the workaround was removed?

[18:38] <dlocaus> well, when pmurias removed the code, the test cases broke.

[18:38] <dlocaus> removed the code in 18886

[18:38] <dlocaus> yeah.. that's what I mean.

[18:39] <fglock> you can just paste the code back

[18:39] <dlocaus> ok

[18:39] <fglock> and add a comment explaining the workaround

[18:40] <dlocaus> humm ok.

[18:40] <fglock> recompiling...

[18:40] *** pjcj joined
[18:41] *** drbean joined
[18:41] <fglock> we do need a fast compiler

[18:41] <dlocaus>  :) 

[18:42] <dlocaus> You know, I was thinking about the _isa, and I was wondering if it would be possible to write some sort of "compression" hack, that would check out an ::DISPATCH mess, and then compress it.

[18:42] <dlocaus> something to "flatten" it.

[18:42] <fglock> the thing the audience liked most today was: time perl -e ' print "hello, World\n" '

[18:42] <dlocaus> oh, you know I came across something interesting about perl

[18:43] <fglock> dlocaus: yes, it's possible

[18:43] <dlocaus> perl '' test.pl

[18:43] <fglock> it's a method cache, I think perl5 implements it

[18:43] <dlocaus> forces perl to read from the source code from STDIN and not from test.pl

[18:43] <dlocaus> I've been wondering if I should make of note of that to the perl5.10 people to see if it should be fixed 5.10?

[18:43] <fglock> heh

[18:44] <fglock> dlocaus: do you believe it's an error?

[18:45] <dlocaus> well, it is a bit odd.  On one side of the coin, its not expected behavior. 

[18:45] <dlocaus> on the other hand, it was caused/found by ahemm.. you.

[18:45] <fglock> the problem with the flatten hack, is that we have "open" classes, so you need to track when a class is changed and recalculate the objects

[18:46] <dlocaus> using TAP::Harness (Test::Harness 3.0) it called an open3 call, which when given an empty $extra_lib string in script/run_tests.pl caused the end arguments passed to perl to be "perl '' test.pl"

[18:46] <fglock> :)

[18:46] <dlocaus> when the invocation could have been "perl -I(libs) test.pl"

[18:46] <dlocaus> so, I'm not sure if it is a bug or not, but definitely unexpected.

[18:48] <dlocaus> I've been thinking about checking out 5.10 and seeing what changes need to be done to get kp6 working on it.

[18:48] <dlocaus> It would be good for the community... :)

[18:48] <fglock> interesting bug, but I think it it's more like an "undocumented behaviour"

[18:48] <fglock> sure it would

[18:48] <dlocaus>  :)

[18:49] <dlocaus> I'll see if this bug works on perl5.10 and if it does, I'll send in a note to the development team about it.

[18:50] <fglock> I don't think 5.10 will help much with kp6, because the kp6 runtime is so "low level"

[18:50] <fglock> it mostly just uses array, hash, and closure - none of the 5.10 cool hacks

[18:52] <dlocaus> well, it will be a good test to do, just to "make sure".

[18:52] <fglock> dlocaus: make forcerecompile / make test - passes all tests here

[18:52] <dlocaus> on 18890?

[18:53] <dlocaus> or after you add the hack back in?

[18:54] *** weinig_ joined
[18:54] <fglock> without modifications - but I'm compiling again

[18:54] <fglock> ah - a second compilation fails

[18:55] <fglock> I'll try with the 'self' thing now

[18:58] <fglock> re second compilation, maybe the Makefile is compiling the Runtime::Perl6 stuff before recompiling kp6 proper

[18:58] <dlocaus> I've always had grief with the Makefile...

[18:59] <dlocaus> esp. that make -j option.

[18:59] <dlocaus>  :)

[19:00] <fglock> I've only 10min left - compilation eats a lot of battery :P

[19:00] <dlocaus>  :(

[19:01] <dlocaus> feel free to commit, I'll update and run cmds for you.

[19:01] <fglock> k

[19:02] *** hanekomu joined
[19:03] <dlocaus> I undid pmurias 18886 and put it in the 18890 revision, but there was massive breakage

[19:04] <dlocaus> @seen pmurias

[19:04] <lambdabot> pmurias is in #perl6. I don't know when pmurias last spoke.

[19:05] <fglock> I committed 18891, but I'm still testing it

[19:05] <fglock> now recompiling the Perl6 modules...

[19:07] *** TJCRI left
[19:07] <fglock> dlocaus: looks good here - I'm committing the recompiled modules

[19:07] <dlocaus> ok

[19:07] <fglock> done - 18892

[19:08] <dlocaus> if it passes on my side, I'll annotate the re-hack

[19:09] <dlocaus> if you don't mind my asking, how are you running out of battery, but still web-enabled?

[19:09] <fglock> 7min battery - bye bye :)

[19:09] <fglock> 1st class trains have 220V power plugs

[19:09] *** rindolf joined
[19:09] <fglock> this is the cheap one :)

[19:09] <dlocaus> if you are on a train, how can you be internet connected?

[19:09] <dlocaus> does the train have WIFI?

[19:10] <fglock> I've got mobile internet (hsdpa modem)

[19:10] <dlocaus> oh... neat :)

[19:10] <fglock> very neat :) 

[19:11] <fglock> did it work?

[19:11] <dlocaus> 3.2GHZ amd is only so fast.... :(

[19:12] <dlocaus> I've gotten to the mp6.pl part now

[19:12] <fglock> I've reverted my local changes - I need to split BIND into small refactorings

[19:12] <fglock> .BIND is everywhere in the code

[19:13] <dlocaus> while forloops and such may be great for the mutli-cpu stuff, I wonder how the parrot people will handle it

[19:13] <dlocaus> it apperas to work, the snaity tests came back ok

[19:13] <dlocaus> !yea!

[19:13] * avar wonders how kp6 is doing these days

[19:13] <fglock> avar: I'm working on the bootstrap,

[19:13] * dlocaus is doing janitorial duties, so it looks much better :)

[19:14] <avar> fglock: :)

[19:14] <fglock> which means to fix several workarounds

[19:14] * dlocaus is about to try and re-straighten out the perltidy -st option.

[19:14] <fglock> which work in Perl5, but break in Perl6

[19:14] <dlocaus> All tests successful.

[19:14] <dlocaus> Files=85, Tests=200, 81 wallclock secs ( 0.25 usr  0.08 sys + 74.72 cusr  3.78 csys = 78.83 CPU)

[19:14] <dlocaus> Result: PASS

[19:14] <fglock> dlocaus++

[19:15] <fglock> avar: I rewrote much of the container code, including hash and array

[19:15] <fglock> 1min!

[19:16] * dlocaus says a prayer for fglock's battery...

[19:16] *** IllvilJa joined
[19:18] *** drbean_ joined
[19:20] * dlocaus thinks his prayer worked...

[19:20] <avar> billions of people worldwide share your little fallacy:)

[19:21] * avar waits for bootstrap to try lisp emitting again

[19:21] <dlocaus> avar: :)

[19:22] <dlocaus> avar: well, it makes for an interesting test case.  perl -e ' print "1..1\nok\n" prayer.pl 

[19:23] <avar> You can test whether the system runs but not whether all the lights are on?:)

[19:23] <dlocaus> with todays webcams that shouldn't be a problem :)

[19:23] <dlocaus> I wonder if I could patent that?

[19:23] <dlocaus> Using a webcam to monitor blinking lights?

[19:24] <dlocaus> if image.x.y = red then warn "oppps!"

[19:25] <dlocaus> I hope that line of code did not just eliminate someone's job.

[19:26] *** Limbic_Region joined
[19:27] *** drbean left
[19:29] *** drbean joined
[19:32] <Limbic_Region> salutations all

[19:33] * dlocaus waves

[19:36] *** drbean_ left
[19:38] *** fglock left
[19:39] *** hanekomu left
[19:39] *** drbean left
[19:39] <pmurias> dlocaus: ping

[19:39] <pmurias> well pong

[19:39] *** drbean joined
[19:42] <dlocaus> pmurias: hiya

[19:42] <pmurias> hi

[19:43] <dlocaus> pmurias: I just wanted to let you know that fglock and I put back in some code you removed

[19:43] <dlocaus> commits 18891-18893 : http://dev.pugscode.org/changeset/18893

[19:43] <lambdabot> Title: Changeset 18893 - Pugs - Trac

[19:43] <pmurias> seen it

[19:43] <dlocaus> ok. that's it.

[19:45] <pmurias> the hack i removed $.code has a .name which is not always the case

[19:46] <dlocaus> pmurias: I'm sorry, I'm not that far along in knowing how kp6 works, to understand what you said.

[19:47] <pmurias> sorry

[19:47] <pmurias> i meant to type the hack i removed assumed 

[19:47] <pmurias> that

[19:48] <pmurias> $.code being the code attribiute of Apply

[19:48] <pmurias> which is assumed by the hack to be a Var

[19:49] <pmurias> is it now clearer ? ;)

[19:49] <dlocaus> yeah, self vs self()

[19:49] <dlocaus> yes.

[19:50] <pmurias> more like foo() vs $hash<key>.()

[19:50] <dlocaus> I don't even understand perl6 all that well... ;)

[19:52] <pmurias> foo() vs ($hash->{key})->() in perl5 terms ;)

[19:52] <dlocaus> yep! I got that.

[19:52] <pmurias> althought the later gets turned into a Call in kp6

[19:53] *** jisom joined
[19:54] <pmurias> Apply could be replaced by Call, as it's just the case with method attribiute being 'postcircumfix:<( )>'

[19:55] <pmurias> dlocaus: if you want a refactoring task you could do it

[19:55] <dlocaus> Right now, I want to streighten out the util/perltidyrc which forces an "-st" # output to stdout

[19:56] <pmurias> ok

[19:56] <dlocaus> I'm also looking at the cost of doing perltidy.

[19:56] <pmurias> it's significant ;)

[19:57] <dlocaus> Yes, I'm thinking it might be worhtwhile to put an in ENV{ kp6perltidy } to turn it on or off.

[19:57] <dlocaus> I'm running a test now..

[19:58] <dlocaus> not to mention, I think putting -st in perltidyrc is bad practice.. since it forces output to stdout, and prevents usage of -o and -b.

[19:58] <pmurias> you can change it

[19:58] <dlocaus> yes, but then the code in script/kp6, script/mp6 and Makefile all use it.

[19:58] <pmurias> the is a CLI option to kp6 for not using perltidy

[19:58] <dlocaus> yes.

[19:58] <dlocaus> I thought I'd run a test.. ah

[19:58] <dlocaus> its done, one second

[19:59] *** rindolf left
[20:00] <dlocaus> by wall clock seconds...

[20:00] <dlocaus> Running: make forcerecompile ; make test  W/O perltidy

[20:00] <dlocaus> costs: 4m and 14seconds

[20:00] <dlocaus> Running: make forcerecompile ; make test  W/ perltidy

[20:00] <dlocaus> costs: 5m and 28seconds

[20:00] <dlocaus> a difference of 102 seconds or about 1minutes and 42 seconds.

[20:01] <dlocaus> Assuming a developer forcerecompiles as a test 10 times a day, that's 20 minutes

[20:02] <dlocaus> or assuming there are 5 developers who forcerecompiles 10 times a day that is a loss of 85 minutes of developer time

[20:03] <dlocaus> pmurias: do you think it is worth putting in a on/off global perltidy switch?

[20:03] <pmurias> i don't know

[20:03] <dlocaus> ok, well, I'll let it be then for now.

[20:03] *** Limbic_Region left
[20:04] <dlocaus> if someone else has a thought on this, then they can @tell dlocaus "message" me.

[20:04] *** weinig_ left
[20:05] *** weinig joined
[20:08] *** ruz joined
[20:12] *** drbean left
[20:16] *** Lightop joined
[20:20] *** Lightop left
[20:23] *** kanru joined
[20:24] *** drbean joined
[20:32] *** jisom left
[20:38] *** bsb joined
[20:44] *** mj41 joined
[20:56] *** TJCRI joined
[21:09] *** Psyche^ joined
[21:10] *** Psyche^ is now known as Patterner

[21:24] *** thoughtpolice joined
[21:43] *** TJCRI left
[21:45] *** Limbic_Region joined
[22:11] *** weinig is now known as weinig|away

[22:15] *** thoughtpolice left
[22:52] *** drupek12 joined
[23:18] *** polettix joined
[23:59] *** ggoebel joined
