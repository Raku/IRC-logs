[00:07] *** theorb joined
[00:18] *** theorbtwo left
[01:04] *** penk left
[01:27] *** Lorn joined
[01:32] *** jferrero left
[02:10] *** dlocaus left
[02:12] *** jiing joined
[02:15] *** jhorwitz joined
[02:15] *** kanru left
[02:19] <meppl> good night

[02:24] *** jhorwitz left
[02:25] *** kanru joined
[02:39] *** jjore-m left
[02:42] *** kst left
[02:43] *** kst joined
[02:44] *** ahmadz joined
[02:44] *** ahmadz left
[03:20] *** nipotaway is now known as nipotan

[03:35] *** kanru left
[03:35] *** pbuetow left
[03:35] *** marmic left
[03:35] *** test left
[03:35] *** stevan_ left
[03:35] *** ak__ left
[03:35] *** qmole left
[03:35] *** charsbar left
[03:35] *** ruz left
[03:35] *** Arathorn left
[03:35] *** awwaiid left
[03:35] *** avar left
[03:40] *** avar joined
[03:43] *** Southen left
[03:44] *** Southen joined
[03:46] *** thoughtpolice left
[03:46] *** kanru joined
[03:46] *** pbuetow joined
[03:46] *** marmic joined
[03:46] *** test joined
[03:46] *** stevan_ joined
[03:46] *** ak__ joined
[03:46] *** qmole joined
[03:46] *** charsbar joined
[03:46] *** ruz joined
[03:46] *** Arathorn joined
[03:46] *** awwaiid joined
[03:46] *** Gekz joined
[03:46] *** szbalint joined
[03:46] *** nnunley joined
[03:46] *** broquaint joined
[03:46] *** Casan joined
[03:46] *** Caelum joined
[03:46] *** djm joined
[03:46] *** silug joined
[03:46] *** yath joined
[03:46] *** bloonix joined
[03:46] *** allbery_b joined
[03:46] *** cj joined
[03:46] *** clkao joined
[03:46] *** moritz_ joined
[03:52] *** Southen left
[03:53] *** Southen joined
[03:56] *** Southen left
[04:07] *** cmarcelo left
[04:09] *** ispy_ joined
[04:13] *** kanru left
[04:16] *** justatheory joined
[04:16] *** amnesiac joined
[04:17] *** Ara4n joined
[04:19] *** theorb left
[04:20] *** theorbtwo joined
[04:23] *** qmole left
[04:23] *** bloonix_ joined
[04:24] *** bloonix left
[04:25] *** djm_ joined
[04:25] *** szbalint_ joined
[04:28] *** stevan_ left
[04:28] *** marmic left
[04:28] *** nnunley left
[04:28] *** ruz left
[04:28] *** Arathorn left
[04:28] *** moritz_ left
[04:28] *** Casan left
[04:28] *** pbuetow left
[04:28] *** test left
[04:28] *** szbalint left
[04:28] *** djm left
[04:28] *** clkao left
[04:28] *** cj left
[04:28] *** allbery_b left
[04:28] *** broquaint left
[04:28] *** Gekz left
[04:28] *** Caelum left
[04:28] *** silug left
[04:28] *** awwaiid left
[04:28] *** ak__ left
[04:28] *** yath left
[04:28] *** charsbar left
[04:32] *** nnunley joined
[04:37] *** pbuetow joined
[04:37] *** marmic joined
[04:37] *** test joined
[04:37] *** stevan_ joined
[04:37] *** ak__ joined
[04:37] *** charsbar joined
[04:37] *** ruz joined
[04:37] *** Arathorn joined
[04:37] *** awwaiid joined
[04:37] *** Gekz joined
[04:37] *** szbalint joined
[04:37] *** broquaint joined
[04:37] *** Casan joined
[04:37] *** Caelum joined
[04:37] *** silug joined
[04:37] *** yath joined
[04:37] *** allbery_b joined
[04:37] *** cj joined
[04:37] *** clkao joined
[04:37] *** moritz_ joined
[04:37] *** ak__ left
[04:37] *** ak__ joined
[04:37] *** ak__ left
[04:37] *** szbalint left
[04:37] *** qmole joined
[04:38] *** Gekz_ joined
[04:39] *** Gekz_ left
[04:41] *** lambdabot left
[04:42] *** lambdabot joined
[04:45] *** justatheory left
[04:47] *** Arathorn left
[04:54] *** qmole left
[04:54] *** stevan_ left
[04:54] *** marmic left
[04:54] *** ruz left
[04:54] *** moritz_ left
[04:54] *** Casan left
[04:54] *** pbuetow left
[04:54] *** test left
[04:54] *** clkao left
[04:54] *** cj left
[04:54] *** allbery_b left
[04:54] *** broquaint left
[04:54] *** Gekz left
[04:54] *** Caelum left
[04:54] *** silug left
[04:54] *** awwaiid left
[04:54] *** yath left
[04:54] *** charsbar left
[05:04] *** sprocket joined
[05:04] *** sprocket left
[05:04] *** Southen joined
[05:07] *** clkao joined
[05:07] *** qmole joined
[05:07] *** pbuetow joined
[05:07] *** marmic joined
[05:07] *** test joined
[05:07] *** stevan_ joined
[05:07] *** charsbar joined
[05:07] *** ruz joined
[05:07] *** awwaiid joined
[05:07] *** broquaint joined
[05:07] *** Casan joined
[05:07] *** Caelum joined
[05:07] *** silug joined
[05:07] *** yath joined
[05:07] *** allbery_b joined
[05:07] *** cj joined
[05:07] *** moritz_ joined
[05:11] *** stevan_ left
[05:11] *** marmic left
[05:11] *** qmole left
[05:11] *** ruz left
[05:11] *** moritz_ left
[05:11] *** Casan left
[05:11] *** pbuetow left
[05:11] *** test left
[05:11] *** cj left
[05:11] *** allbery_b left
[05:11] *** broquaint left
[05:11] *** Caelum left
[05:11] *** silug left
[05:11] *** awwaiid left
[05:11] *** yath left
[05:11] *** charsbar left
[05:11] *** clkao left
[05:13] *** charsbar joined
[05:13] *** Caelum joined
[05:14] *** awwaiid joined
[05:15] *** broquaint joined
[05:15] *** yath joined
[05:24] *** sprocket joined
[05:27] *** clkao joined
[05:27] *** qmole joined
[05:27] *** pbuetow joined
[05:27] *** marmic joined
[05:27] *** stevan_ joined
[05:27] *** ruz joined
[05:27] *** Casan joined
[05:27] *** allbery_b joined
[05:27] *** cj joined
[05:27] *** moritz_ joined
[05:28] *** moritz_ left
[05:28] *** silug joined
[05:28] *** allbery_b left
[05:30] *** allbery_b joined
[05:30] *** ruz left
[05:30] *** marmic_ joined
[05:30] *** obra left
[05:30] *** jjore-m joined
[05:30] *** qmole left
[05:31] *** Casan left
[05:33] *** obra_work joined
[05:37] *** fihi09 joined
[05:39] *** marmic left
[05:39] *** cj left
[05:39] *** pbuetow left
[05:42] *** clkao left
[05:43] *** stevan_ left
[05:46] *** kanru joined
[05:51] *** sprocket left
[05:57] *** lambdabot left
[05:57] *** lambdabot joined
[05:59] *** nipotan is now known as nipotaway

[06:09] *** Ashizawa joined
[06:12] *** DarkWolf84 left
[06:23] *** lisppaste3 left
[06:26] *** alc joined
[06:30] *** ispy_ left
[06:37] *** lisppaste3 joined
[06:47] *** Aankhen`` joined
[07:10] *** penk joined
[07:12] *** devogon joined
[07:22] *** [particle] left
[07:29] *** tuxdna joined
[07:48] *** franck___ joined
[07:49] *** moritz_ joined
[08:02] *** BinGOs_ is now known as BinGOs

[08:07] *** penk left
[08:19] *** kanru left
[08:24] *** drrho joined
[08:28] *** elmex joined
[08:32] *** mr_ank joined
[08:37] *** pmurias joined
[08:37] *** pmurias left
[08:39] *** Southen_ joined
[08:56] *** mr_ank_ joined
[08:59] *** mr_ank_ left
[08:59] *** Southen left
[09:01] *** cognominal_ left
[09:09] *** mr_ank left
[09:32] <pugs_svn> r19095 | Darren_Duncan++ | ext/Muldis-DB/ : renamed all ::DBMS Perl packages to ::Machine, and all other 'dbms' named vars etc

[09:40] <moritz_> the loggin bot has trouble connecting to irc.freenode.net

[09:41] <moritz_> no idea what's wron

[09:41] <moritz_> g

[10:08] *** alc left
[10:19] *** Psyche^ joined
[10:23] *** penk joined
[10:30] *** djm_ is now known as djm

[10:34] *** Patterner left
[10:34] *** Psyche^ is now known as Patterner

[10:43] *** fglock_ joined
[10:43] *** fglock_ is now known as fglock

[10:52] *** Grrrr joined
[11:00] *** dalek left
[11:02] *** dalek joined
[11:02] *** Ashizawa left
[11:02] *** drrho left
[11:03] *** drrho joined
[11:04] *** Juerd left
[11:04] *** Juerd joined
[11:16] *** alc joined
[11:32] <pugs_svn> r19096 | fglock++ | [kp6-perl5] .map was overwriting $_

[11:34] *** Lorn left
[11:55] *** jferrero joined
[11:55] *** lichtkind joined
[12:01] *** hanekomu joined
[12:04] *** cognominal_ joined
[12:34] *** cj joined
[12:35] *** Casan joined
[12:35] *** ruz joined
[12:35] *** Lorn joined
[12:37] *** chris2 joined
[12:39] *** qmole joined
[12:39] *** test joined
[12:40] *** masak joined
[12:41] *** clkao joined
[12:53] *** tuxdna left
[12:53] *** Aankhen`` left
[13:00] *** MoKu23 joined
[13:00] <MoKu23> hi

[13:01] <MoKu23> ;)

[13:02] <MoKu23> °_°

[13:02] <MoKu23> boy help me?

[13:02] <araujo> no

[13:03] <MoKu23> why?

[13:03] <araujo> because we can't

[13:03] <MoKu23> 	w la figa e non ci pensate + xD

[13:05] <araujo> creo que no entendistes lo que te dije

[13:07] <elmex> speaking russian won't get u far

[13:10] *** MoKu23 left
[13:11] *** hanekomu left
[13:18] *** penk left
[13:32] *** jhorwitz joined
[13:32] *** cmarcelo joined
[13:48] *** AzureBOT_ joined
[13:48] *** moritz_ left
[13:48] *** Caelum left
[13:48] *** charsbar left
[13:48] *** Kattana left
[13:48] *** pravus left
[13:48] *** GeJ left
[13:48] *** ting_ left
[13:48] *** kane_ left
[13:48] *** kolibrie_ left
[13:48] *** SamB left
[13:48] *** kcwu left
[13:48] *** ft left
[13:48] *** pasteling left
[13:48] *** moritz_ joined
[13:48] *** Caelum joined
[13:48] *** charsbar joined
[13:48] *** Kattana joined
[13:48] *** pravus joined
[13:48] *** GeJ joined
[13:48] *** ting_ joined
[13:48] *** kane_ joined
[13:48] *** kolibrie_ joined
[13:48] *** pasteling joined
[13:48] *** ft joined
[13:48] *** kcwu joined
[13:48] *** SamB joined
[13:48] *** Yappo_ joined
[14:07] *** xinming_ joined
[14:15] *** ruoso left
[14:17] *** fglock left
[14:17] *** cognominal_ left
[14:20] *** xinming left
[14:22] *** ruoso joined
[14:22] *** ebassi joined
[14:24] *** fglock_ joined
[14:24] *** fglock_ is now known as fglock

[14:27] *** kyrbe joined
[14:27] *** kyrbe left
[14:28] *** elmex left
[14:43] *** iblechbot joined
[14:44] *** cognominal_ joined
[14:49] *** Lorn left
[14:49] *** Psyche^ joined
[14:51] *** Schwern joined
[14:54] *** penk joined
[14:56] <fglock> i found a workaround for mixing code and regex in perl5 - testing...

[15:01] *** Patterner left
[15:01] *** Psyche^ is now known as Patterner

[15:13] *** cognominal_ left
[15:17] *** drrho left
[15:24] *** rgs is now known as rgstfm

[15:24] *** rgstfm is now known as rgs

[15:31] *** pmurias joined
[15:31] <pmurias> fglock: what's the workaround?

[15:32] *** Aankhen`` joined
[15:32] <fglock> it's a mix between the current p5rx and PCR,

[15:32] <fglock> kind of an inside-out of p5rx

[15:32] <fglock> one sec,

[15:32] <pmurias> okay

[15:32] <fglock> $ perl -e ' $_="4234"; ( /\G4/g && /\G2/g ); print pos(),"\n"; '

[15:33] <fglock> add regex to code, instead of add code to regex

[15:33] *** zakame_ joined
[15:33] <fglock> it's just a bit slower

[15:34] <pmurias> fglock: not nessesary much slower

[15:34] <fglock> but most important, it shouldn't segfault

[15:35] <fglock> i'm working on an implementation

[15:35] <pmurias> fglock: once it's working in should be possible to have it join fragments not containing perl5 code

[15:35] <fglock> sure

[15:40] *** ahmadz joined
[15:40] *** ahmadz left
[15:41] <fglock> there are several possible optimizations - i just want it to work for now

[15:50] *** neuromu joined
[15:51] *** hareldvd joined
[15:52] <hareldvd> Does env variable such as LC_LANG influences regexps? cos on egrep it does.

[16:01] <wolverian> perldoc perllocale

[16:01] <wolverian> if you mean perl 5

[16:02] <wolverian> as for perl 6, I don't remember that in the spec.

[16:03] *** TJCRI joined
[16:09] *** barney joined
[16:16] *** Psyche^ joined
[16:17] <pugs_svn> r19097 | fglock++ | [kp6-perl5rx] new perl5rx emitter, passes t/kp6/grammar/01-simple-or-token.t

[16:17] <pugs_svn> r19097 | fglock++ | - old perl5rx emitter saved to Emit::Perl5RegexPure

[16:22] <TimToady> at the standard unicode level, "graphs"Â¸ locales are completely ignored.

[16:23] <TimToady> locales are evil

[16:23] <wolverian> and useful :)

[16:23] <TimToady> but if you ask for language dependent character processing, you can ask it to pay attention to a locale

[16:23] <wolverian> what I hate is when an app decodes the input _file_ according to locale

[16:24] <wolverian> that makes absolutely no sense 

[16:24] <TimToady> locales are a classic case of misplaced type information

[16:24] <wolverian> hm, yeah.

[16:24] <TimToady> and p6 is trying to clear up all the misplaced data

[16:25] <pugs_svn> r19098 | fglock++ | [kp6-perl5rx] t/kp6/grammar/02-non-capturing-group.t passes

[16:26] <fglock> yet another regex engine rewrite :P

[16:26] <wolverian> I'm so tired I started thinking about attaching locale info to the monitor

[16:26] <wolverian> "my monitor is en_US.UTF-8" 

[16:27] *** blindfish_ joined
[16:27] <pmurias> wolverian: why does decoding the input _file_ according to locase does not make sense?

[16:27] <wolverian> pmurias, what does the file have to do with the locale? 

[16:28] *** Patterner left
[16:28] *** Psyche^ is now known as Patterner

[16:31] <pmurias> wolverian: locale as far as i understand is the information about the local environment which files are part of

[16:32] <pmurias> i myself only care about the charset part of the locale

[16:33] <wolverian> the locale doesn't really have anything to do with files. maybe you just downloaded the file from elsewhere.

[16:33] <wolverian> I think larry meant this problem. the metadata isn't attached to the data.

[16:34] <allbery_b> actually I would say the locale does have to do with files.  the problem is the ==wolverian locale should be part of each frile's metadata

[16:34] <allbery_b> notpart of the "globa" environment

[16:34] <wolverian> right

[16:34] <pugs_svn> r19099 | fglock++ | [kp6-perl5rx] t/kp6/grammar/03-ident-token-from-grammar.t passes

[16:35] <pmurias> wolverian: i think the understanding is that you convert all the files you store on your hard drive

[16:36] <wolverian> no

[16:36] <wolverian> are you perhaps thinking of filenames?

[16:37] *** ether0 left
[16:38] <allbery_b> his theory is that any time you obtain a file from somewhere it is converted to your format

[16:38] <allbery_b> the problem here is shared files:  what if person A's format is ISO8859/1 and person B's is UTF16?

[16:39] <allbery_b> so the file really needs to be tagged

[16:42] <pmurias> allbery_b: i belive ISO8859/1 should be obsoleted

[16:43] <allbery_b> *shrug* substitue UTF8 then.  (WIndows uses UTF16, Unix prefers UTF8, so that is not necessarily a trumped-up example.)

[16:43] <allbery_b> that said, older files may well still be ISO8859/1

[16:44] <allbery_b> and still older ones may be plain ASCII

[16:45] <allbery_b> (yes, some of us *do* have files that old hanging around; shuld we really have to recode them every few years to keep up with current notions?)

[16:47] <pmurias> allbery_b: i agree with you that they should be marked with metadata

[16:48] *** turrepurre joined
[16:48] <pmurias> that would make the recoding much easier ;)

[16:49] <allbery_b> if I keep tem for archival and don't touch them that often, recoding only when needed is better.  and it still doesn't address the question of files thatmay be accessed by different users with different environment settings

[16:55] *** [particle] joined
[16:56] *** jjore-m left
[17:02] *** mattz left
[17:02] *** masak left
[17:02] *** mattz joined
[17:06] *** dlocaus joined
[17:10] *** drbean left
[17:11] *** drbean joined
[17:11] *** Jedai left
[17:14] *** justatheory joined
[17:17] *** Khisanth left
[17:20] *** Jedai joined
[17:21] *** Jedai left
[17:23] <pmurias> fglock: shouldn't it be /gc instead of /g?

[17:23] *** Jedai joined
[17:23] *** Jedai left
[17:24] <fglock> what is /c ?

[17:25] <pmurias> it's the continue modifier, the pos dosn't get reset on a failed match

[17:26] *** jjore-m joined
[17:27] <pmurias> s/reset/zeroed/

[17:27] <djm> where are those documented? it doesn't seem to be in perlre (what's /e?)

[17:28] <fglock> i think it is not needed, because the program needs to store pos() in order to control backtracking anyway

[17:29] <pmurias> /\G1/g && (/\G2/g || /\G3/g)?

[17:30] <pmurias> is /\G(1[23]|3)/g instead of /1[23]/g

[17:31] <fglock> see Rule::Or - but i may be wrong

[17:35] *** cognominal_ joined
[17:35] <fglock> the old p5rx algorithm can't be directly mapped to the new one

[17:36] <fglock> the local+backtrack trick doesn't work

[17:37] *** Jedai joined
[17:38] *** Jedai left
[17:40] *** Jedai joined
[17:40] *** dlocaus left
[17:42] <pmurias> fglock: why dosn't the save pos and restore it if Or fails trick work?

[17:42] <pmurias> fglock: i think it needs to be /gc for &&

[17:42] *** Jedai left
[17:43] <fglock> it works, the problem is it needs to reset the $GLOBAL::_M structure too

[17:43] *** jjore-m left
[17:44] <fglock> i think you don't need it for &&, because if it fails it ... failed

[17:44] <pmurias> right

[17:45] <fglock> but i'm not thinking clearly after 3 days struggling perl5 bugs :P

[17:45] *** Jedai joined
[17:46] <fglock> i think we need some simple && and || tests

[17:46] *** cognominal_ left
[17:50] <fglock> i mean, regex tests

[17:50] <pmurias> i got it

[17:51] <fglock> get some coffee && food &

[17:52] *** jjore-m joined
[17:54] *** Jedai left
[17:55] <pmurias> fglock: kp6 dosn't support || and && (but | and & do what they should)

[18:01] <pmurias> &

[18:01] *** cognominal_ joined
[18:02] *** Jedai joined
[18:06] *** franck___ left
[18:15] *** TJCRI left
[18:19] *** dlocaus joined
[18:21] <pugs_svn> r19100 | dlo++ | [kp6] Altered the files so that perltidy is not required

[18:21] <dlocaus> well, harddrive is still in the shop... but I've got another one going! I'm back!

[18:22] *** baest left
[18:22] *** baest_ joined
[18:24] *** baest_ is now known as baest

[18:29] *** jferrero left
[18:42] <pugs_svn> r19101 | fglock++ | [kp6-perl5rx] implemented some rollbacks

[18:42] <fglock> dlocaus: :)

[18:42] <dlocaus> fglock: in the Makefile

[18:43] <dlocaus> how does mp6.pl know which files to compile and which ones not too?

[18:43] <pugs_svn> r19102 | pmurias++ | [kp6] simple or test

[18:43] <fglock> the make utility looks at the file dates

[18:43] <dlocaus> fglock: but I did a forcerecompile

[18:43] <dlocaus> compiled/perl5-kp6-mp6/lib/%.pm: src/%.pm

[18:43] <dlocaus>         $(PERL) script/mp6.pl -o $@ $<

[18:44] <dlocaus> that makeline seams to be indicating compile -everything- in src/%.pm into compiled...

[18:44] <dlocaus> but only some files are compiled.

[18:44] <dlocaus> why isn't anything in KindaPerl6::Runtime::* compiled by mp6?

[18:44] <dlocaus> sorry, src/KindaPerl6/Runtime/*.pm

[18:45] <pmurias> other rules take precendence

[18:46] <dlocaus> pmurias: ah, so if another "rule" had worked on the file, then it is skipped?

[18:46] <dlocaus> so in effect the last rule is the "default" rule for all files that had not been touched? (for this makefile)

[18:47] <pmurias> yes

[18:48] <dlocaus> ah, ok, now this makes more scense :), ty

[18:51] *** ebassi left
[18:55] <dlocaus> fglock: I found this in the FAQ.pod, is it obsolete now?

[18:55] <dlocaus> =item Bootstrapping mp6-perl5: (FGLOCK: Where is this?)

[18:55] <dlocaus> This script rebuilds the lib5 directory. It creates a directory named lib5-new:

[18:55] <dlocaus>   perl util/build-perl5.sh

[18:55] <dlocaus>   mv lib5 lib5-old

[18:55] <dlocaus>   mv lib5-new lib5

[18:55] <pmurias> pos($_pos) is a bug it should be pos($_) = $_pos;

[18:55] <dlocaus> and, is perl kp6-perl5.pl now known as script/kp6

[18:55] <fglock> this is in v6-MiniPerl6/util

[18:56] <dlocaus> ah, ok

[18:57] <fglock> pmurias: one sec, I'll commit what I have here

[18:58] <dlocaus> fglock: (when you get a chance) 

[18:58] <dlocaus> The 'kp6-perl5.pl' script is one of the possible compiler 'workflows' that can be built with kp6.

[18:58] <dlocaus>  perl kp6-perl5.pl < source.pm > dest.pm

[18:58] <dlocaus> this kp6-perl5.pl is now known as the perl5 build from Makefile.pl? And the script is script/kp6 -Bperl5 in effect right?

[18:58] <pugs_svn> r19103 | fglock++ | [kp6-perl5rx] more fixes

[18:58] <dlocaus> (that was from the FAQ.pod too)

[18:59] <fglock> yes, script/kp6 -Bperl5  is the old kp6-perl5

[18:59] <dlocaus> ok, ty

[19:02] <pugs_svn> r19104 | fglock++ | [kp6-perl5rx] fixed pos() usage - pmurias++

[19:03] <pugs_svn> r19105 | dlo++ | [kp6] Updated the documentation.  Please review the changeset.

[19:05] *** TJCRI joined
[19:10] <pugs_svn> r19106 | fglock++ | [kp6-perl5rx] fixed extra }

[19:13] <pugs_svn> r19107 | dlo++ | [kp6] Added comment explaining the mp6.pl part of the Makefile.PL

[19:14] <dlocaus> is this file supposed to be commited?

[19:14] <dlocaus>  compiled/perl5-kp6-mp6/lib/KindaPerl6/Visitor/Emit/Perl5RegexPure.pm

[19:14] <dlocaus> it was "made" on my machine, but not part of the repository

[19:15] *** ebassi joined
[19:15] *** ebassi left
[19:16] <fglock> dlocaus: it has bugs - I'll move it away

[19:16] <dlocaus> oh, ok.

[19:19] <pugs_svn> r19108 | dlo++ | [kp6] perltidy'd these files

[19:21] <pugs_svn> r19109 | fglock++ | [kp6] move Emit::Perl5RegexPure away, because it segfaults Perl 5

[19:29] *** alc left
[19:32] *** princeofdark joined
[19:32] *** princeofdark left
[19:33] *** chris2 left
[19:34] *** jisom joined
[19:42] <fglock> &

[19:43] *** ruoso left
[19:45] *** TJCRI left
[19:50] *** [particle] left
[19:53] *** snearch joined
[20:00] *** fglock left
[20:02] *** fglock_ joined
[20:02] *** fglock_ is now known as fglock

[20:08] *** TJCRI joined
[20:09] *** luqui joined
[20:10] <pugs_svn> r19110 | dlo++ | [kp6] perltidy'd these files

[20:22] *** fglock left
[20:26] *** Daveman joined
[20:34] *** syle joined
[20:36] <dlocaus> in "class Var" it has the attribute $.namespace, when I debug the compiled version it appears to say that $.namespace is an array.  but when I invoke $.namespace.elems == 0, it claims it is not an array

[20:37] <dlocaus> $.namespace.elems converts to perl5: $self->{namespace}->elems()

[20:37] <dlocaus> but $self->{namespace} is an unblessed reference

[20:37] <dlocaus> ergo:  if   ( ( $self->{namespace}->elems() == 0 ) )

[20:37] <dlocaus> that fails

[20:37] <dlocaus> pmurias: ping?

[20:38] <dlocaus> @seen pmurias

[20:38] <lambdabot> pmurias is in #perl6. I last heard pmurias speak 1h 42m 43s ago.

[20:38] <dlocaus> moritz_: ping?

[20:42] <pugs_svn> r19111 | dlo++ | [kp6] a little bit of work, getting subroutines to emit in perl6

[20:53] *** snearch left
[20:54] <pmurias> dlocaus: ping

[20:54] <dlocaus> pmurias: pong

[20:55] <dlocaus> pmurias: did you read what I wrote above your initial ping inquriy?

[20:55] <dlocaus> about "class Var"

[20:56] <pmurias> it looks like namespace is undef if not specified

[20:56] <dlocaus> but when I quired it via the debugger it was an empty array

[20:57] *** barney left
[20:58] <pmurias> dlocaus: mp6 stores arrays as unblessed array references

[20:59] <dlocaus> humm ok

[21:00] <pmurias> mp6 is buggy

[21:00] <dlocaus> oh argh!

[21:01] <dlocaus>  :)

[21:04] <pmurias> dlocaus: on of the points of the bootstrap is to no longer use mp6

[21:04] <dlocaus> this bootstraping is giving me a headache.

[21:05] *** jisom left
[21:05] <dlocaus> If we use mp6 to compile perl6 code to provide libraries for kp6, and then we no longer use mp6, who will compile the perl6 code to provide libraries for kp6?

[21:06] <pmurias> dlocaus: we don't use mp6 is such capability as far as i know

[21:06] <pmurias> have you found any such files?

[21:07] <dlocaus> Well, yes.  When you "make forcerecompile", the first 10 or so files, are files compiled by mp6 to produce the AST and visitor code

[21:08] <dlocaus> and the Grammar code.

[21:08] <pmurias> they will be compiled by kp6

[21:09] * dlocaus is thinking

[21:09] <pmurias> you will have to have a compiled version of kp6 to compile the source code

[21:09] <meppl> good night

[21:10] <pmurias> meppl: good night

[21:11] <dlocaus> but once you can get a "good" version of kp6 going, then you can compile the parser files that mp6 used to compile, and then remove mp6?

[21:11] <meppl> ;)

[21:12] <pmurias> dlocaus: exactly

[21:12] <dlocaus> ah ok.

[21:12] <dlocaus> what happens when you find there is a flaw in the kp6 parser code?

[21:12] *** BinGOs_ joined
[21:13] <pmurias> there are lots now

[21:14] <dlocaus> humm, ok

[21:14] <pmurias> you change the kp6 source code and compile it with the last working version

[21:14] <dlocaus> ok, I'll update the FAQ

[21:15] <pmurias> dlocaus: you are talking about it in the context of the future when it's bootstaped, or right now?

[21:15] <pmurias> * asking

[21:16] <dlocaus> well, this seams to be the problem where in that old problem, what happens if someone puts a "backdoor" in the compiler, thus when the compiler compiles any other code (including another compiler) it would put the "backdoor" in the next "compiler"

[21:22] *** ilogger2_ joined
[21:23] <pugs_svn> r19112 | dlo++ | [kp6] documented the bootstrapping process better.

[21:26] <pugs_svn> r19113 | dlo++ | [kp6] documentation clean up, removed idiom.

[21:29] *** buu joined
[21:29] *** wolverian joined
[21:29] *** sunnavy joined
[21:30] *** TimToady joined
[21:30] *** Maddingue joined
[21:31] *** hareldvd joined
[21:33] *** thoughtpolice joined
[21:33] <pmurias> b

[21:38] *** Psyche^ joined
[21:39] *** ilogger2 joined
[21:39] <pugs_svn> r19114 | pmurias++ | [kp6] minor clarification

[21:43] *** ajs joined
[21:44] *** araujo joined
[21:44] *** stef_ joined
[21:44] *** bsb joined
[21:45] *** penk joined
[21:46] *** nipotaway joined
[21:56] <pugs_svn> r19115 | pmurias++ | [kp6-faq] described status of v6-Onion, small changes

[21:57] <dlocaus> pmurias: ping?

[21:58] <dlocaus> http://dev.pugscode.org/browser/v6/v6-KindaPerl6/src/KindaPerl6/Visitor/Emit/Parrot.pm#L303

[21:58] <dlocaus> http://dev.pugscode.org/browser/v6/v6-KindaPerl6/src/KindaPerl6/Visitor/Emit/Parrot.pm#L799

[22:02] <dlocaus> I was hunting down an odd report by perl::tidy complaining of duplicate subroutine names in the Parrot.pm package.

[22:02] <dlocaus> In "class Var" method name "name", and "invocant", "positional" in "class Sig"; are produced twice

[22:02] <dlocaus> when compiled by mp6.pl.

[22:02] <dlocaus> the first time is the accessor (standard accessor), but the second declarations of the subroutine force it to be read-only.

[22:02] <dlocaus> I removed the subroutines and all the test cases worked as normal.  Should those R/O accessors be removed?

[22:02] <dlocaus> pmurias: ping?

[22:03] <dlocaus> moritz_: ping?

[22:08] <pmurias> dlocaus: pong

[22:08] <dlocaus> pmurias: hey, can you check out the above comment?

[22:08] <pmurias> doing it

[22:10] <pmurias> dlocaus: you can remove it

[22:10] <dlocaus> ok, ty

[22:10] <pmurias> does Emit::Parrot actually work?

[22:11] <dlocaus> I don't know.

[22:11] <dlocaus> I was hunting down an odd report when doing a forcerecompile

[22:11] <pasteling> "dlocaus" at 63.192.210.11 pasted "odd perltidy report" (8 lines, 900B) at http://sial.org/pbot/29110

[22:11] <pmurias> i think it's unsupported

[22:11] <dlocaus> pmurias: I've pasted it above.

[22:12] <dlocaus> pmurias: well, it may be unsupported now, but it will have to be supported sometime! ;)

[22:12] <pmurias> dlocaus: i think going through PAST instead of directly emitting pir is the way to go

[22:12] <dlocaus> PAST?

[22:13] <dlocaus> ah, I see

[22:13] <dlocaus> neat

[22:14] <dlocaus> I'm not that far along yet... in the parrot world, I'd still be a bird cage cleaner :)

[22:16] *** dlocaus joined
[22:16] *** hanekomu joined
[22:19] <pugs_svn> r19116 | dlo++ | [kp6]  Perl::Tidy was producing an error message stating that

[22:19] <pugs_svn> r19116 | dlo++ | 

[22:19] <pugs_svn> r19116 | dlo++ | /usr/bin/perl script/mp6.pl -o compiled/perl5-kp6-mp6/lib/KindaPerl6/Visitor/Emit/Parrot.pm

[22:19] <pugs_svn> r19116 | dlo++ | src/KindaPerl6/Visitor/Emit/Parrot.pm

[22:19] <pugs_svn> r19116 | dlo++ | 126:    already saw definition of 'sub name' in package 'Var' at line 124

[22:19] <pugs_svn> r19116 | dlo++ | 197:    already saw definition of 'sub invocant' in package 'Sig' at line 193

[22:19] <pugs_svn> r19116 | dlo++ | 198:    already saw definition of 'sub positional' in package 'Sig' at line 194

[22:20] <pugs_svn> r19116 | dlo++ | 

[22:20] <pugs_svn> r19116 | dlo++ | While, this message appears to be from perl, or even mp6.pl it is really produced by Perl::Tidy.

[22:20] <pugs_svn> r19116 | dlo++ | MP6 produces (as per spec) accessors for attributes in "class Var" and "class Sig"

[22:20] <pugs_svn> r19116 | dlo++ | however, those classes later produces read only accessors.

[22:20] <pugs_svn> r19116 | dlo++ | 

[22:20] <pugs_svn> r19116 | dlo++ | pmurias said they could be removed:

[22:20] <pugs_svn> r19116 | dlo++ | 

[22:20] <pugs_svn> r19116 | dlo++ | http://irclog.perlgeek.de/perl6/2007-12-07#i_158855

[22:20] <lambdabot> Title: IRC log for #perl6, 2007-12-07

[22:20] <pugs_svn> r19116 | dlo++ | 

[22:20] <pugs_svn> r19116 | dlo++ | make forcerecompile; make test; -> all tests pass

[22:32] *** rgs joined
[22:44] *** IllvilJa joined
[22:47] *** Shillo joined
[22:54] <pugs_svn> r19117 | dlo++ | [kp6]  I have added a line of code to strip the spaces at the begining of every line.

[22:54] <pugs_svn> r19117 | dlo++ | 

[22:54] <pugs_svn> r19117 | dlo++ | By removing the spaces from begining of every line, I have reduced the amount of time it takes to parse a file.

[22:54] <pugs_svn> r19117 | dlo++ | 

[22:54] <pugs_svn> r19117 | dlo++ | On a 26k file compiled by mp6.pl, this reduces compilation time by 3 seconds.  I believe overall this would reduce 

[22:54] <pugs_svn> r19117 | dlo++ | total compilation time by 1 minute.

[22:54] <pugs_svn> r19117 | dlo++ | 

[22:54] <pugs_svn> r19117 | dlo++ | Since, all code is parsed by perltidy after being "compiled" there are no net changes to any of the files.

[22:54] <pugs_svn> r19117 | dlo++ | 

[22:54] <pugs_svn> r19117 | dlo++ | make forcerecompile; make test => passes all tests.

[22:54] <pugs_svn> r19117 | dlo++ | svn noted no changes in the compiled/* directory too!

[22:54] <pugs_svn> r19117 | dlo++ | 

[22:55] <pugs_svn> r19117 | dlo++ | dlocaus++ (sorry, could not resist)

[23:24] *** jql joined
[23:49] *** Khisanth joined
[23:57] *** Shillo left
[23:58] <pugs_svn> r19118 | dlo++ | [kp6]  I have written in code to allow people to quickly turn on/off the use

[23:58] <pugs_svn> r19118 | dlo++ | of perltidy by setting the environmental variable PERLTIDY to /dev/null, instead

[23:58] <pugs_svn> r19118 | dlo++ | of ???/util/perltidyrc.  This reduces compile time by approximately 20%.

[23:58] <pugs_svn> r19118 | dlo++ | 

[23:58] <pugs_svn> r19118 | dlo++ | #!/bin/tcsh

[23:58] <pugs_svn> r19118 | dlo++ | setenv PERLTIDY /dev/null

[23:58] <pugs_svn> r19118 | dlo++ | unsetenv PERLTIDY

[23:58] <pugs_svn> r19118 | dlo++ | 

[23:58] <pugs_svn> r19118 | dlo++ | I have doubts about this feature as I am worried that someone will commit these

[23:58] <pugs_svn> r19118 | dlo++ | files to the respository.  However, volunteer time is -the most- valuable

[23:58] <pugs_svn> r19118 | dlo++ | time and should not be wasted.

[23:58] <pugs_svn> r19118 | dlo++ | 

[23:58] <pugs_svn> r19118 | dlo++ | A warning will be issued at compile time requesting that the user not commit

[23:58] <pugs_svn> r19118 | dlo++ | these files to the respository.

[23:58] <pugs_svn> r19118 | dlo++ | 

[23:58] <pugs_svn> r19118 | dlo++ | dlocaus@ #perl6 irc.freenode.net

