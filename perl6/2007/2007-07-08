[00:08] *** diakopter_afk is now known as diakopter

[00:10] <Limbic_Region> salutations diakopter

[00:12] <diakopter> thanks :) u2

[00:12] *** bonesss joined
[00:14] * diakopter experiences a UTF8 bug in the bash/ssh/bash/screen/irssi combo

[00:19] *** buetow joined
[00:23] <diakopter> Limbic_Region: in what browser/OS were you seeing the 500s on cgiirc?

[00:24] <Limbic_Region> WinXP home with FireFox

[00:24] <Limbic_Region> WinXP profession with IE

[00:25] <Limbic_Region> still getting them btw

[00:28] <diakopter> can you PM me the url you're trying?  I'm not seeing the 500s

[00:28] <diakopter> curious - are you using https?

[00:29] *** diakopter6 joined
[00:29] <diakopter6> from cgiirc. hi

[00:30] *** weinig joined
[00:30] <diakopter6> EWORKSFORME

[00:30] <Limbic_Region> sorry

[00:30] <Limbic_Region> was AFK

[00:30] <Limbic_Region> https://feather.perl6.nl/irc/

[00:30] <diakopter> ah :)

[00:31] *** cognominal_ joined
[00:31] <diakopter> well I guess it would help if we were using the same URLs. :)

[00:31] <Limbic_Region> that IS the url that is advertised

[00:31] <diakopter> heh; :)

[00:31] <Limbic_Region> if you are using a different URL then the front page should be updated

[00:31] <Limbic_Region> http://feather.perl6.nl/ -> see the link for IRC chat

[00:31] <lambdabot> Title: Perl6 Community Development Server

[00:31] <diakopter> k

[00:32] <diakopter> I found the url by looking for irc.cgi on the filesystem and cetera

[00:32] <diakopter> an url, I mean

[00:34] <Limbic_Region> *shrug* - it did stop working all of a sudden on Friday

[00:37] <diakopter> yeah

[00:37] <diakopter> my fault I'm sure, since I scrapped the PAM auth

[00:37] <Limbic_Region> when I first reported the problem to Juerd some time ago, he told me there were two issues, one with HTTPS and the other with PAM

[00:38] <Limbic_Region> one was fixed relatively quickly (the HTTPS)

[00:38] * avar found a use for p5 subs.pm

[00:38] <Limbic_Region> the second was fixed in a day

[00:38] <Limbic_Region> and it worked for a few days

[00:38] <Limbic_Region> then on Friday, it just stopped working

[00:39] <diakopter> yeah, cuz while it appeared to be working it was still throwing lots of errors

[00:43] *** jedai joined
[00:43] <Limbic_Region> well I don't know how many folks here use it other than me so it might not be much of a big deal

[00:49] <diakopter> please try https://feather.perl6.nl/cgi-bin/cgiirc/irc.cgi

[00:49] <diakopter> just to confirm it works there for you as well

[00:50] <Limbic_Region> in a sec

[00:51] *** LimbicRegion joined
[00:51] *** LimbicRegion is now known as Limbic_Region

[00:52] <Limbic_Region> daughter turned off the wireless card

[00:52] <Limbic_Region> but yes, it works

[01:05] *** LimbicRegion joined
[01:11] *** _iShock joined
[01:26] *** vel joined
[01:30] *** daxim_ joined
[01:46] *** ChanServ sets mode: +o diakopter

[01:46] *** diakopter sets mode: -o diakopter

[01:57] *** ProperNoun joined
[01:58] *** rlb3 joined
[02:05] *** Limbic_Region joined
[02:24] <dduncan> so my smoke all worked with the clean pugs checkout plus clean perl 5.9.5 ... and the change I made re smoker.yml caused no problems that I'm aware of

[02:26] *** diakopter is now known as diakopter_afk

[02:35] *** fglock joined
[03:08] *** teratoma left
[03:23] *** agentzh joined
[03:23] <agentzh> audreyt++ # did what i wanted to do :)

[03:23] <lambdabot> agentzh: You have 1 new message. '/msg lambdabot @messages' to read it.

[03:25] <agentzh> avar said "tell @agentzh " yesterday and it certainly didn't work ;)

[03:25] <agentzh> @messages

[03:25] <lambdabot> avar said 5h 55s ago: You need to check in PCR inc/Test/* stuff into svn, or all the inc/ stuff

[03:25] <agentzh> avar: already checked in as pugs' inc/

[03:26] <avar> that's moved into pcr's?

[03:26] <agentzh> avar: i'm guessing you only checked out PCR

[03:26] <agentzh> without checking out the whole pugs tree

[03:27] <agentzh> avar: it's something like "use Module::Install '../../inc'" in PCR's Makefile.PL

[03:28] <agentzh> avar: re compile_p6grammar.pl

[03:28] <agentzh> it currently treats regex {...} and rule {...} as token {...} and i'm going to change that.

[03:30] <agentzh> sigh...slept too late last night...still quite sleepy...

[03:30] <pugs_svnbot> r16893 | Aankhen++ | trunk:

[03:30] <pugs_svnbot> : * [irclog] couple more abbreviations.

[03:30] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16893

[03:30] <lambdabot> Title: Changeset 16893 - Pugs - Trac

[03:31] <agentzh> dduncan: so you have changed .smoker.yml to smoker.yml? okay, i'll update it on feather for auto-smoke...

[03:31] <dduncan> yes

[03:32] <agentzh> k

[03:32] <agentzh> personally i quite like this change

[03:32] <agentzh> since "ls" hides .smoker.yml...

[03:32] *** pifuruan joined
[03:32] <dduncan> assuming your Pugs is up to date, all the files save that one wouldn't need changing

[03:33] <dduncan> my own smoke worked after the committed changes, and that 1 file rename

[03:33] <pifuruan> hi

[03:33] <agentzh> dduncan: my pugs tree on feather is aways up-to-date ;)

[03:33] <dduncan> atta

[03:33] <agentzh> pifuruan: hi

[03:34] <pifuruan> what is pubs?

[03:35] <pifuruan> pugs

[03:35] <lidden> http://pugscode.org/

[03:35] <lambdabot> Title: Pugs - pugscode

[03:35] <agentzh> dduncan: smoker.yml can be confused by smoke.yml, btw

[03:36] <agentzh> dduncan: we're already using smoke.yml for storing smoke results

[03:36] <dduncan> I considered that ... perhaps it should be renamed to smoker_config.yml then?

[03:36] <agentzh> dduncan: maybe smoker.conf.yml?

[03:36] <agentzh> heh

[03:36] <dduncan> I considered that earlier, but for now went for the smaller delta

[03:36] <dduncan> question is, is smoker_config or config_smoker better?

[03:36] <dduncan> the former would sort next to config.yml

[03:37] <dduncan> alternately, can't those files be merged?

[03:37] <dduncan> config.yml already has smoke config in it

[03:37] <agentzh> reasonable

[03:37] <dduncan> smoke_concurrent

[03:37] <agentzh> yeah, why not?

[03:37] <dduncan> that would probably work best ... but it would be more onerous to get right, so I don't want to be the one to attempt that

[03:37] <agentzh> dduncan: commits welcome :)

[03:37] <pifuruan> Pugs is an implementation of Perl 6, written in Haskell. It aims to implement the full Perl6 specification, as detailed in the Synopses. For more information, please see the overview and this interview.

[03:38] <agentzh> pifuruan: right

[03:38] <dduncan> that is, I can rename the smoke file again, but doing the merge I would have concerns about

[03:38] <agentzh> dduncan: understood

[03:38] <pifuruan> so where can i get "the full specification

[03:38] <pifuruan> of perl6

[03:38] <agentzh> pifuruan: http://perlcabal.org/syn

[03:38] <lambdabot> Title: Official Perl 6 Documentation

[03:38] <pifuruan> tks

[03:38] <agentzh> pifuruan: you're welcome

[03:39] <pifuruan> thank u very much,man,

[03:39] <agentzh> pifuruan: let us know if you do like a commit bit

[03:39] <agentzh> dduncan: smoker.yml is not that terribly bad. i'll stay with it for now

[03:39] <pugs_svnbot> r16894 | Aankhen++ | trunk:

[03:39] <pugs_svnbot> : * [irclog] took a shot at preserving whitespace.

[03:39] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16894

[03:40] <lambdabot> Title: Changeset 16894 - Pugs - Trac

[03:40] <dduncan> okay

[03:40] <pifuruan> i am so sorry, i am chinese ,forgive my poor English,so what is commit bit

[03:40] <agentzh> pifuruan: are you? me too :)

[03:40] <pifuruan> 􏿽xD0􏿽xD2􏿽xBB􏿽xE1

[03:41] <agentzh> pifuruan: the commit bit allows you to update the pugs subversion repository

[03:41] <pifuruan> i like it

[03:41] <agentzh> ( http://svn.pugscode.org/pugs )

[03:41] <lambdabot> Title: Revision 16894: /

[03:41] <agentzh> pifuruan: /msg me your email address, and i'll try to send one to you

[03:42] <pifuruan> [email@hidden.address]
[03:42] <agentzh> k, a sec

[03:42] <pifuruan> thks

[03:42] <dduncan> pifuruan, try setting your irc client to utf8 text encoding if you can, for better compatibility when sending non-ascii characters

[03:42] <dduncan> for that matter, all Pugs repo files are utf8

[03:43] <dduncan> the text ones anyway

[03:43] <pifuruan> ok,i will try

[03:43] <agentzh> pifuruan: what user name would you like for your commit bit?

[03:44] <agentzh> pifuruan: hanson?

[03:44] <pifuruan> ok

[03:44] <agentzh> k

[03:44] <agentzh> sending

[03:44] <pifuruan> i will check now

[03:45] <agentzh> commitbit is not so fast though...

[03:45] <agentzh> my page is still loading...sigh...

[03:46] <agentzh> pifuruan: please let me know if you already get the mail

[03:46] <pifuruan> i am afraid not yet

[03:48] <agentzh> commitbit--

[03:48] <pifuruan> i havn't got ur mail 

[03:48] <agentzh> could anyone here send one to him?

[03:49] * agentzh gives up.

[03:49] <TimToady> I will try.

[03:49] <agentzh> wow

[03:49] <pifuruan> I love all guys here

[03:49] <agentzh> TimToady++

[03:50] <pifuruan> [email@hidden.address]
[03:54] <TimToady> it thinks it has sent you an invitation

[03:54] <pifuruan> ok,i received mail from audrey

[03:56] <agentzh> pifuruan: actually you've received a mail from lwall

[03:57] <agentzh> or his bot

[03:57] <agentzh> ;)

[03:57] <TimToady> 欢迎！

[03:57] <dduncan> pifuruan, so it is customary to add your name to the AUTHORS file as your first commit ... and it is a utf8 file

[03:57] <dduncan> I saw that encoded correctly!

[03:57] * agentzh 2

[03:57] <pifuruan> hh

[03:58] <TimToady> assuming simplified is correct here, and not 歡迎

[03:59] <dduncan> well, I just mean it didn't look like garbage

[03:59] <dduncan> plus 'incompatible encoding' notice

[03:59] <agentzh> TimToady++ # a Chinese guy

[03:59] <TimToady> I don't suppose "huan1 ying2" would do you any better...

[04:00] <agentzh> PinYin is very hard to read for even native CN speakers.

[04:00] <agentzh> like "huan1 ying2"

[04:00] <TimToady> but dduncan has a slightly better chance of knowing how to pronounce it.

[04:01] <agentzh> TimToady: *nod*

[04:01] <TimToady> though you'd have to know the tones to really do it right

[04:01] <agentzh> exactly

[04:01] <TimToady> dduncan: tone 1 is high, then drop a bit on tone 2

[04:01] <agentzh> lol

[04:01] <TimToady> I mean, other way

[04:01] <dduncan> I don't actually know much about this

[04:02] <dduncan> if anything, TimToady should know a lot more about it than dduncan does

[04:03] <agentzh> tone 2 is like "huh?" while tone 1 is like "yayyyyyyyyyy"

[04:03] <TimToady> mostly don't know much yet except some of the characters; mostly coming at it from the direction of japanese kanji

[04:04] <agentzh> TimToady: it's already good enough :)

[04:05] <TimToady> 好说。

[04:05] <agentzh> ......

[04:06] * pifuruan slaps agentzh around a bit with a large trout

[04:06] <TimToady> or maybe 不敢当 is more appropriate

[04:06] <agentzh> heh

[04:06] <agentzh> it's amazing...

[04:06] <TimToady> yep, grep is pretty amazing... :)

[04:07] <pifuruan> timTOady, where are u now

[04:07] <TimToady> Mountain View, California.

[04:07] <pifuruan> o

[04:07] <clkao> TimToady: do you know "牛人" ?

[04:08] <TimToady> cow person?

[04:08] <clkao> ya

[04:08] <pifuruan> 􏿽xB9􏿽xFE􏿽xB9􏿽xFE

[04:08] <TimToady> not in my dictionary, alas

[04:08] <clkao> i shall let the chinese folks explain, the phrase is getting popular in taiwan too

[04:08] <clkao> and i should go to bed

[04:08] <agentzh> TimToady is a 牛人

[04:09] <clkao> agree

[04:09] <agentzh> clkao: go to bed *now*?

[04:09] <clkao> it's 5am here

[04:09] <agentzh> clkao: okay, you're not in .tw...

[04:09] <TimToady> yow, and thought I was late for supper...

[04:10] <agentzh> 牛人 == a smart person with amazing skills

[04:11] <TimToady> so 牛逼 also works

[04:11] <TimToady> (when grep fails, there's google...)

[04:11] <agentzh> LOL

[04:12] <TimToady> that character doesn't occur much in japanese.  "walk" and "fulljar" in my radical naming system.

[04:12] <TimToady> actually, Xwalk, since it only has one tick on top

[04:12] <agentzh> TimToady: is that system open-sourced?

[04:14] <TimToady> vaguely, but I'm still refining it, and need to refactor the whole thing

[04:14] <agentzh> i heard it was originally written in Perl 6 :)

[04:15] <agentzh> (iirc)

[04:15] <TimToady> I tried translating to p6 once a long time ago, but unicode was really slow back then

[04:15] <TimToady> been kinda waiting for things to speed up before I try again

[04:16] <agentzh> hopefully fglock's kp6 will get that point before you decide to try again ;)

[04:16] <TimToady> also need to get a font that supports all the extra character in plane 1 and annotate them like I did all the CJK area...

[04:17] <TimToady> all 20900 characters...

[04:17] <agentzh> oh, so coooooool

[04:17] <TimToady> that...took a while...

[04:18] <TimToady> turns out there's about 3000 different radicalish things, if you count anything that's either repeated more than 5 times or is used as a partial character but is a complete character elsewhere

[04:19] <agentzh> that's interesting :)

[04:25] * agentzh decides to make a CPAN release for PCR.

[04:29] <avar> agentzh: what namespace do you think generated grammar stuff should be in?

[04:29] <avar> Pugs::Grammar::*?

[04:29] <agentzh> no

[04:29] <avar> like just some random parser..

[04:30] <agentzh> grammar Foo; just generates package Foo

[04:30] <agentzh> each package is derived from Pugs::Grammar::Base

[04:30] <avar> I mean practically, as a upload-to-cpan thing

[04:30] <agentzh> but it's not necessary if the user doesn't want <ident> or some such

[04:30] <agentzh> avar: upload to cpan for other cpan modules

[04:30] <agentzh> ?

[04:31] <agentzh> avar: or a component in PCR itself?

[04:31] <avar> I mean uploading modules generated with PCR

[04:31] <agentzh> avar: i think it's arbitrary

[04:32] <agentzh> avar: in fact i'm going to regenerate my Makefile::Document::Gmake with compiler_p6grammar.pl

[04:32] <agentzh> no namespace standard is needed here, i think.

[04:32] <agentzh> Pugs::Grammar::* are for PCR only

[04:33] <agentzh> lunch &

[04:33] <avar> aw forget it

[04:34] *** rashakil left
[04:58] <pugs_svnbot> r16895 | Darren_Duncan++ | trunk:

[04:58] <pugs_svnbot> : ext/Muldis-DB/ : fleshed out Grammar.pod, updated Core.pod, other minor edits

[04:58] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16895

[04:58] <lambdabot> Title: Changeset 16895 - Pugs - Trac

[05:04] <pugs_svnbot> r16896 | Darren_Duncan++ | trunk:

[05:04] <pugs_svnbot> : ext/Muldis-DB/ : minor bug fix in Grammar.pod

[05:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16896

[05:04] <lambdabot> Title: Changeset 16896 - Pugs - Trac

[05:10] *** diotalevi joined
[05:12] *** hakobe is now known as hkb_aw

[05:13] <diotalevi> so this is neat. If you teach File::Next that things readable by Archive::Extract are directories, you can use ack on CPAN.

[05:13] *** diotalevi is now known as jjore

[05:13] *** justatheory joined
[05:18] <dduncan> izzatso?

[05:20] <dduncan> the joys of abstraction

[05:50] <pasteling> "agentzh" at 222.45.13.33 pasted "Why this p6 grammar is looping?" (16 lines, 321B) at http://sial.org/pbot/26105

[05:53] <agentzh> avar, fglock: any clue?

[05:54] *** weinig joined
[05:56] <agentzh> sigh. it takes forever to commit...

[05:57] <agentzh> &

[05:57] *** agentzh left
[06:01] *** xinming joined
[06:03] *** agentzh joined
[06:09] <TimToady> agentzh: why do you have curlies around the "our"?

[06:10] <agentzh> TimToady: because...because...it's a syntax

[06:10] <agentzh> i just want to make the grammar parser simpler to implement

[06:11] <agentzh> those blocks are considered "global actions"

[06:11] <agentzh> or "global code blocks that are directly passed to the generated file"

[06:12] <TimToady> but $Count won't be visible as a lexical name

[06:12] <TimToady> if it's inside {...}

[06:12] <TimToady> if it works at all, it's because it's a package var and strict is off

[06:12] <agentzh> TimToady: the curlies are removed by the emitter :)

[06:12] <agentzh> TimToady: i know that is a big confusing...

[06:13] <agentzh> *bit

[06:13] <TimToady> well, it's just not Perl 6, is all...

[06:13] <agentzh> TimToady: it's a mix of Perl 6 and Perl 5

[06:13] <agentzh> just an odd grammar syntax designed specific for PCR

[06:14] <agentzh> *specifically

[06:14] <agentzh> ;)

[06:14] <TimToady> yeah, but you called a "p6 grammar" when you nopasted it, which led me to believe in was Perl 6... :/

[06:14] <TimToady> *it

[06:14] <agentzh> sorry for the confusion

[06:15] <agentzh> i should have called it "pcr grammar" or something like that :)

[06:16] <agentzh> hmm...can't commit any more today...it seems...

[06:16] <TimToady> maybe you could make it a P5( our ... ) macro to avoid confusing other people later...

[06:16] <agentzh> TimToady: great idea!

[06:21] *** agentz1 joined
[06:21] *** agentz1 is now known as agentzh_

[06:21] <agentzh_> or simply borrow yacc's syntax: "%{ ... %}"

[06:23] <TimToady> that would work, especially since p6 doesn't use %{

[06:24] <agentzh_> :)

[06:25] *** Alias_ joined
[06:25] <pugs_svnbot> r16897 | agentz++ | trunk:

[06:25] <pugs_svnbot> : [PCR]

[06:25] <pugs_svnbot> : * added token "digit" to P::G::Rule2.pm and updated Rule.pmc accordingly

[06:25] <pugs_svnbot> :   (one more test is passing now :))

[06:25] <pugs_svnbot> : * Pugs::Emitter::Grammar::Perl5 - appended "1;" to each generated

[06:25] <pugs_svnbot> :   package

[06:25] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16897

[06:25] <agentzh_> i'd expect compile_p6grammar.pl be much faster than v6.pm for compiling p6 grammars (or PCR grammars)

[06:25] <agentzh_> since it doesn't bother parsing perl 6 in actions (or closures)

[06:26] <agentzh_> after chaning my IPs 3 or 4 times, svn ci finally works :)

[06:26] <agentzh_> *changing

[06:27] <agentzh_> yay

[06:27] *** Jameswf joined
[06:28] <agentzh_> the sadest thing for me is that i'm prevented from committing :)

[06:29] <Jameswf> I was committed once

[06:29] <agentzh_> Jameswf: commits welcome!!!

[06:29] <agentzh_> *saddest

[06:31] <Jameswf> sometimea I code quick and dirty, I will do something and my IT guy is like WTF. cleans it up and breaks it. I say it wa oogily but it worked

[06:32] <Jameswf> i think my s is messed up

[06:32] <pugs_svnbot> r16898 | agentz++ | trunk:

[06:32] <pugs_svnbot> : PCR - added examples/digits.grammar which doesn't work yet; it's looping...sigh

[06:32] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16898

[06:32] <lambdabot> Title: Changeset 16898 - Pugs - Trac

[06:32] <agentzh_> will change the syntax to %{ ... %} ...

[06:33] <agentzh_> Jameswf: i like to code quickly too (but not the dirty part...)

[06:55] *** agentzh_ is now known as agentzh

[06:56] <agentzh> changing {...} to %{...%} breaks the parser...will do later...

[06:57] *** toshinor_ joined
[07:02] <agentzh> heh, it finally works: token verbatim { '%{' ( [ <!before '%}'> . ]* ) '%}' }

[07:04] *** hkb_aw is now known as hakobe

[07:04] <agentzh> is anyone working on the parsec emitter for pcr?

[07:05] <agentzh> if not, i'll skip t/11-parsec.t's tests by default

[07:05] <agentzh> it's annoying to see the errors everytime running 'make test'

[07:21] <pugs_svnbot> r16899 | Aankhen++ | trunk:

[07:21] <pugs_svnbot> : * [irclog] I am a lean, mean, abbreviation expanding machine.  Or something.

[07:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16899

[07:21] <lambdabot> Title: Changeset 16899 - Pugs - Trac

[07:24] *** devogon joined
[07:26] *** iblechbot joined
[07:29] <agentzh> Aankhen++

[07:36] *** dduncan left
[07:43] <pugs_svnbot> r16900 | agentz++ | trunk:

[07:43] <pugs_svnbot> : [PCR]

[07:43] <pugs_svnbot> : * skipped the failing tests in t/11-parsec.t, t/14-mini_perl6.t,

[07:43] <pugs_svnbot> : and t/12-plain_regex.t

[07:43] <pugs_svnbot> : * added examples/digits.grammar which is looping...sigh...

[07:43] <pugs_svnbot> : * Rule2.pm: changed the global code blocks to %{ ... %} per TimToady++

[07:43] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16900

[07:46] <pugs_svnbot> r16901 | agentz++ | trunk:

[07:46] <pugs_svnbot> : PCR - added t/16-examples.t to test examples/*.grammar

[07:46] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16901

[07:46] <lambdabot> Title: Changeset 16901 - Pugs - Trac

[08:06] *** ashelyb_ joined
[08:22] *** rho joined
[08:27] *** elmex joined
[08:30] *** elmex joined
[08:31] <Jameswf> I wande if pizza_party can be addapted to papajohns

[08:35] *** ashleyb joined
[08:36] *** monomorph joined
[08:37] *** elmex joined
[08:46] *** elmex joined
[09:11] *** iblechbot joined
[09:11] *** lixinso joined
[09:24] *** chris2 joined
[09:25] *** jedai joined
[09:28] *** toshinori joined
[09:35] *** toshinori joined
[09:43] <pugs_svnbot> r16902 | agentz++ | trunk:

[09:43] <pugs_svnbot> : [PCR]

[09:43] <pugs_svnbot> : - t/16-examples.t: generated .pm files within tmp/.

[09:43] <pugs_svnbot> : - added $VERSION to front-end modules like Pugs::Compiler::Regex,

[09:43] <pugs_svnbot> :   and Pugs::Compiler::Grammar and raised it to 0.24.

[09:43] <pugs_svnbot> : - renamed ChangeLog to Changes.

[09:43] <pugs_svnbot> : - now developers should invoke 'Makefile.PL' as follows:

[09:43] <pugs_svnbot> :     perl Makefile.PL releng

[09:43] <pugs_svnbot> :   in releng mode, pugs' inc/ will not be reused.

[09:43] <pugs_svnbot> : - updated Changes to reflect recent changes.

[09:43] <pugs_svnbot> : - Makeile.PL - removed tmp/ and *.pm in 'make clean'.

[09:43] <pugs_svnbot> : - updated README with my 'releng' script.

[09:43] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16902

[09:44] <lambdabot> Title: Changeset 16902 - Pugs - Trac

[09:45] <pasteling> "evalbot_r16901" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26108

[09:46] <agentzh> Pugs::Compiler::Rule 0.24 has been uploaded to CPAN :)

[09:52] *** unobe joined
[09:54] <agentzh> @tell fglock the old failing tests in t/11-parsec.t, t/12-plain_regex.t, and t/14-mini_perl6.t are skipped and 0.24 are released to CPAN :)

[09:54] <lambdabot> Consider it noted.

[09:55] <meppl> good morning

[09:55] <agentzh> good afternoon!

[09:56] <meppl> good afternoon agentzh

[09:56] <agentzh> :)

[09:57] <unobe> good night :-)

[09:59] <agentzh> supper &

[09:59] <pugs_svnbot> r16903 | agentz++ | trunk:

[09:59] <pugs_svnbot> : PCR - CPAN release 0.24

[09:59] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16903

[09:59] <lambdabot> Title: Changeset 16903 - Pugs - Trac

[10:10] *** unobe is now known as unobe_away

[10:20] <devbot6> dev: WikiStart edited by aharoni <http://dev.pugscode.org/wiki/WikiStart>

[10:28] *** buetow joined
[11:06] <pugs_svnbot> r16904 | agentz++ | trunk:

[11:06] <pugs_svnbot> : PCR - added examples/langs.grammar (this file contains two grammars and the latter calls the subrules of the former and it works\!)

[11:06] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16904

[11:06] <lambdabot> Title: Changeset 16904 - Pugs - Trac

[11:09] <pasteling> "evalbot_r16903" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26109

[11:18] <pugs_svnbot> r16905 | agentz++ | trunk:

[11:18] <pugs_svnbot> : PCR - prepends 'use strict; use warnings' to the .pm file generated

[11:18] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16905

[11:18] <lambdabot> Title: Changeset 16905 - Pugs - Trac

[11:20] *** franck__ joined
[11:27] *** integral joined
[11:33] <pugs_svnbot> r16906 | agentz++ | trunk:

[11:33] <pugs_svnbot> : PCR - updates version number to 0.25

[11:33] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16906

[11:33] <lambdabot> Title: Changeset 16906 - Pugs - Trac

[11:36] *** masak joined
[11:54] <pugs_svnbot> r16907 | masak++ | trunk:

[11:54] <pugs_svnbot> : [t/syntax/numbers/misc.t]

[11:54] <pugs_svnbot> : * corrected copy/paste bug

[11:54] <pugs_svnbot> : [t/builtins/arrays/slice.t]

[11:54] <pugs_svnbot> : * unbroke mid-testfile crash with a try block

[11:54] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16907

[11:54] <lambdabot> Title: Changeset 16907 - Pugs - Trac

[11:59] <masak> I must say I was positively surprised by the last line in t/syntax/numbers/hexadecimal.t

[11:59] <masak> see if somebody sees what I mean

[11:59] <masak> it says "is :16<DEAD_BEEF>, 0xDEADBEEF"

[12:00] <masak> I thought the old 0x syntax was dead, bereft of all life, pushing up the daisies

[12:00] <masak> if so, what's it doing in a test file?

[12:01] <masak> if not, why isn't it exercised more in the test file? :)

[12:04] *** rafl joined
[12:08] <agentzh> yay! "rule foo { ... }" works now

[12:09] <masak> agentzh++

[12:09] <agentzh> :)

[12:10] <masak> how far are we really from 6.28.0?

[12:10] * masak longs for christmas :)

[12:12] <Alias_> Thursday

[12:12] <Alias_> Of course, I'm not saying WHICH Thursday

[12:12] <Alias_> Really, I have no idea at all

[12:12] <masak> seems 6.28's been around the corner for ages

[12:15] <agentzh> for 6.28.x, we need audreyt ;)

[12:16] <masak> yes

[12:16] <Alias_> And where's she lately?

[12:16] <pugs_svnbot> r16908 | agentz++ | trunk:

[12:16] <pugs_svnbot> : [PCR]

[12:16] <pugs_svnbot> : - Pugs::Emitter::Grammar::Perl5 : set sigspace for "rule XXX {...}"

[12:16] <pugs_svnbot> :   and calls the backtracking rule emitter for "regex XXX {...}".

[12:16] <pugs_svnbot> : - added tests to t/04-compiler-grammar.t for this.

[12:16] <pugs_svnbot> : - the ratchet rule emitter : saved the emitter params as special

[12:16] <pugs_svnbot> :   comments in the generated code to help debugging.

[12:16] <pugs_svnbot> : - added some remaining issues to the TODO file.

[12:16] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16908

[12:16] <lambdabot> Title: Changeset 16908 - Pugs - Trac

[12:16] <masak> Alias_: exactly...

[12:16] <agentzh> she's been resting at home mostly.

[12:16] <Alias_> burned out?

[12:16] <agentzh> Alias_: sort of

[12:17] <Alias_> I did real something about some sort of health thing

[12:17] <masak> yes

[12:17] <masak> hepatitis

[12:17] <Alias_> ouch

[12:17] <Alias_> which one?

[12:18] <masak> don't remember

[12:18] <masak> prolly not fun either way

[12:18] <Alias_> ya, but I think it might matter

[12:18] <masak> might have been A

[12:18] <masak> ?eval my @a = ^5; say @a[*-1];

[12:18] *** evalbot_r16866 is now known as evalbot_r16908

[12:18] <evalbot_r16908> OUTPUT[0␤] Bool::True

[12:19] <masak> evalbot_r16908: nope

[12:19] * masak needs to stop the bad habit of saying 'say' to evalbot

[12:19] <Alias_> I really wish I had gotten cvsmonitor working on svn

[12:19] <Alias_> Would have made this whole "who's doing what" thing so much easier

[12:20] <masak> Alias_: what does cvsmonitor do?

[12:20] <Alias_> Let me see if I can find a working one

[12:20] <Alias_> In short though, it monitors cvs repositories

[12:20] <masak> ya :)

[12:21] <Alias_> http://ali.as/cgi-bin/demo/stable/cvsmonitor/cvsmonitor.pl?cmd=viewBrowseModule&module=Alias.OpenSource

[12:21] <Alias_> There's a good example

[12:21] <lambdabot> Title: CVS Monitor - Browsing Alias.OpenSource, http://tinyurl.com/258vby

[12:21] <Alias_> My open source coding, until I migrated it to svn

[12:21] <Alias_> Actually, that's boring

[12:21] <Alias_> Let me find you an interesting one

[12:21] <Alias_> http://ali.as/cgi-bin/demo/stable/cvsmonitor/cvsmonitor.pl?cmd=viewBrowseModule&module=E.e17

[12:22] <masak> nifty

[12:22] <Alias_> Enlightenment :)

[12:22] <lambdabot> Title: CVS Monitor - Browsing E.e17, http://tinyurl.com/chbtn

[12:22] <Alias_> That's a better idea of the interesting stuff that results

[12:22] <masak> I wish I'd had that for my projects

[12:22] <masak> you were saying it doesn't work for svn?

[12:22] <Alias_> Nah, I never ported it

[12:22] <masak> that's a shame

[12:22] <Alias_> It's a priorities thing

[12:23] <masak> 'course

[12:23] <Alias_> Someone else could, fairly likely

[12:23] <Alias_> I ended up working on PPI and PITA and CPAN upgrades and a 100 bazillion modules instead

[12:23] <Alias_> Neatest part though

[12:23] <Alias_> It worked as a CVS client

[12:23] <Alias_> So it doesn't have to run on the server, you can point it at anything you have anonymous read rights to

[12:23] <masak> cool

[12:23] <masak> sounds like the Right Thing

[12:24] <masak> should be able to do the same thing with svn

[12:24] <Alias_> That second URL is "So WTF even happened to the Enlightenment Window Manager Anyways?"

[12:24] <Alias_> I already broken the repository back-end code up into a driver API

[12:24] <Alias_> I've

[12:24] <Alias_> So it's mostly a case of someone filling out the svn stubs

[12:25] <Alias_> And negotiating my horrible old-style CGI code

[12:25] <Alias_> I was asked to write a Perforce backend at one point

[12:25] <Alias_> But they never came through with the money

[12:25] <Alias_> Otherwise we could point it at the Perl 5 source :)

[12:26] <masak> & # afk

[12:26] <agentzh> Alias_: neat

[12:27] <Alias_> Someone later wrote a commercial clone in Java that I believe supports SVN

[12:27] <Alias_> Dunno if it does the "point it at other people's code" thing though

[12:27] <agentzh> heh

[12:27] <agentzh> pointing it at pugs' code...

[12:27] <Alias_> which was always the killer feature for me :)

[12:27] <Alias_> pugs is in CVS?

[12:27] <agentzh> svn

[12:27] <Alias_> meh

[12:27] <Alias_> If there's a svn2cvs around you can spit it into, I can do it though

[12:28] <agentzh> GNU make's repos is in CVS though

[12:28] <Alias_> Where's that?

[12:28] <Alias_> I'll add it now :)

[12:28] <agentzh> @google GNU make

[12:28] <lambdabot> http://www.gnu.org/software/make/

[12:28] <lambdabot> Title: GNU Make - GNU Project - Free Software Foundation (FSF)

[12:29] <Alias_> hmm

[12:29] <Alias_> ok, adding it :)

[12:29] <agentzh> Alias++

[12:29] <Alias_> Man, it's old, but I love CVSMonitor still

[12:29] <Alias_> One of my favourite orphans

[12:29] <agentzh> understood :)

[12:30] <Alias_> heh, I still remember the admin password too 

[12:30] <agentzh> Alias_: your server is kinda slow on my side...

[12:31] <Alias_> CVSMonitor is kind of a resource hog

[12:31] *** obvio171 joined
[12:31] <Alias_> REALLY

[12:31] <Alias_> Like 200meg for those enlightenment pages

[12:31] <agentzh> wow

[12:31] <Alias_> (ram)

[12:31] <Alias_> It's my test case for farging enormous repositories

[12:31] <Alias_> Takes over an hour to pull all the metadata

[12:32] <agentzh> *impressed*

[12:32] <Alias_> <-- kicks ass when he finds a good idea

[12:32] <Alias_> ok, repository self-tests ok and added

[12:32] <Alias_> Let me find out what module names they use

[12:32] <agentzh> Alias_: i've also something with pugs's repos using svk

[12:32] <agentzh> Alias_: i'll show you the page...

[12:33] <Alias_> hang a sec, adding gnu :)

[12:33] <Alias_> BTW, because it's such a heavy app, look at the bottom of the cvsmon page :)

[12:33] <Alias_> I actually had to add that warning

[12:33] <agentzh> Alias_: http://perlcabal.org/agent/stats/report.html

[12:33] <lambdabot> Title: report - 数据挖掘报告

[12:33] <Alias_> My server got melted at one point

[12:33] <agentzh> Alias_: you can ignore the chinese chars in it :)

[12:34] <agentzh> Alias_: it's a static page rather than a cgi

[12:34] <Alias_> ya

[12:34] <Alias_> Mine is sorta split

[12:34] <agentzh> Alias_: "Please do not SlashDot this application" ?

[12:34] <Alias_> There's an admin backgrounded process that does metadata pulling and analysis

[12:35] <Alias_> And it generates a giant Storable structure

[12:35] <Alias_> And saves it

[12:35] <agentzh> Alias_: *nod*

[12:35] <agentzh> it indeed costs a lot of resource...

[12:35] <Alias_> Storable is 95% of my process time :)

[12:35] <Alias_> Or something rediculous

[12:36] <agentzh> Alias_: why not use RMDB?

[12:36] <Alias_> RMDB?

[12:36] <agentzh> sorry, i mean relational data base

[12:36] <Alias_> ah

[12:36] <Alias_> Because 1) Probably slower

[12:36] <Alias_> 2) SQLite didn't exist at the time

[12:37] <Alias_> 3) Circular and complex data structures

[12:37] <agentzh> fair enough

[12:37] <Alias_> It just turned out the only easy way to do it was generate the huge object tree and storable it

[12:37] <Alias_> hmm

[12:37] <Alias_> the source browser is dead

[12:37] <Alias_> So I don't know what modules exist in the make cvs

[12:38] <agentzh> ah

[12:38] <Alias_> That was always one of the problems with cvs

[12:38] <agentzh> modules?

[12:39] <Alias_> The fact you have to know the name of the modules in the repository

[12:39] <agentzh> it's odd

[12:39] <Alias_> There's not really an easy way to see them

[12:39] <Alias_> It's a legacy of it's design by accretion

[12:39] <agentzh> hehe

[12:39] <agentzh> is svn suffering from the same problem?

[12:39] <Alias_> nah

[12:40] <agentzh> good

[12:40] <Alias_> svn fixes most of cvs' problems

[12:40] <agentzh> svn++

[12:40] <Alias_> Adds a few new problems, but fixes most of them

[12:40] <Alias_> Well

[12:40] <Alias_> not really :)

[12:40] <Alias_> There's no such thing as a branch or a tag in svn

[12:40] <Alias_> Which complicates things a lot 

[12:40] <Alias_> Means writing svn port for cvsmonitor is supremely hard

[12:40] <agentzh> we have to add branches explicitly in svn?

[12:41] <Alias_> branches are implemented as policy

[12:41] <Alias_> They only exist in wetware

[12:41] <Alias_> The software has no idea what a "branch" is

[12:41] <Alias_> It just sees copies

[12:41] <agentzh> aye

[12:41] <Alias_> Making a Tag: svn copy foo bar

[12:41] <Alias_> Making a Branch: svn copy foo bar

[12:41] <Alias_> Making a Copy: svn copy foo bar

[12:41] <Alias_> :)

[12:42] <agentzh> *nod*

[12:42] <agentzh> that's what i've been doing ;)

[12:42] <Alias_> CVS Monitor has a bunch of smarts to be able to tell added and removed lines

[12:42] <Alias_> It's what the karma scores are derived from

[12:42] <Alias_> And it's branch-aware, mostly

[12:42] <agentzh> hmm

[12:42] <Alias_> Making a branch should be considered adding lines :)

[12:42] <agentzh> that's cool

[12:42] <Alias_> yeah, it was :)

[12:43] <Alias_> er

[12:43] <Alias_> making a branch should NOT be considered adding lines

[12:43] *** toshinori joined
[12:43] <Alias_> I'm going to guess there's a module called "src" in the make repository

[12:43] <agentzh> heh

[12:44] <agentzh> Alias_: btw, for a separate issue...PPI has problems parsing heredocs like <<\EOF

[12:44] <Alias_> WTF is <<\EOF?

[12:44] <Alias_> Man, _I_ have a problem parsing that

[12:44] <Alias_> No wonder PPI does

[12:44] <agentzh> Alias_: an old p4 syntax

[12:44] <agentzh> still supported by p5

[12:44] <Alias_> ugh

[12:44] <agentzh> like <<'EOF'

[12:44] <agentzh> make's test suite makes heavy use of this odd syntax.

[12:45] <Alias_> hmm

[12:45] <Alias_> You are welcome to add support :)

[12:45] <agentzh> i was using PPI to convert make's test suite (in p4) to Test::Base and found the problem...

[12:45] <agentzh> heh

[12:45] <Alias_> The heredoc area of PPI is _relatively_ self-contained

[12:45] *** toshinori joined
[12:46] <agentzh> Alias_: and heredoc gives problem to regen p5 code from PDOM trees

[12:46] <Alias_> hmm?

[12:46] <Alias_> It should be mostly ok

[12:46] <Alias_> If you are using ->serialize

[12:46] <agentzh> Alias_: i can't use ->content directly

[12:46] <Alias_> No, you can't

[12:46] <agentzh> is there a serialize method?

[12:46] <agentzh> sorry, i'm not aware of that.

[12:46] <Alias_> Because ->content ignores "rolled up" lines

[12:46] <agentzh> Alias_: yes, i know

[12:46] <Alias_> heredoc content is not considered part of the content

[12:47] <Alias_> It's sort of "rolled up"

[12:47] <Alias_> Because it's line-oriented

[12:47] <Alias_> So it exists in a special location in the tree

[12:47] <Alias_> And when you write to a file it gets "unrolled" to the line stream

[12:47] <agentzh> yes, i've read this from the PPI docs :)

[12:47] <Alias_> Sp ->serialize is the method you use to serialize the Perl code :)

[12:47] <Alias_> ->content is mostly a convenience

[12:48] <Alias_> So

[12:48] <agentzh> serialize must be new method?

[12:48] <Alias_> No, been there since 1.00

[12:48] <Alias_> "rollups" are also where stuff inside of "use v6" sections will go

[12:48] <agentzh> weird...which class?

[12:48] <Alias_> PPI::Document

[12:48] <agentzh> thanks

[12:48] <Alias_> Because you can't serialize fragments of perl

[12:49] <Alias_> The concept is illogical

[12:49] *** baest joined
[12:49] <Alias_> Well, not arbitrary trees anyways

[12:50] <agentzh> k

[12:51] <agentzh> Alias_: PPI makes a lot of apps possible :)

[12:51] <Alias_> blame heredocs :)

[12:51] <Alias_> heh

[12:51] <Alias_> Yes, yes it does

[12:51] <agentzh> yup

[12:51] <Alias_> The supreme irony is that, having written it, I do almost nothing with it :)

[12:51] <Alias_> ppi_version is my main usage

[12:51] <Alias_> Well, perlver too I guess

[12:51] <Alias_> So I use it here and there

[12:51] <Alias_> But not to the extent I probably could be

[12:52] <agentzh> lol

[12:52] <Alias_> I don't trust it yet

[12:52] <Alias_> For some reason there's a half dozen files in CPAN that explode it's memory usage

[12:52] <agentzh> for example?

[12:52] <Alias_> When you are running all of CPAN, knowing which one is exploding your memory usage is hard

[12:53] <Alias_> Because it takes 6 hours of processing to get to that point :)

[12:53] <Alias_> I've never actually worked out which one it is

[12:53] <agentzh> okay

[12:53] <Alias_> When I get back to working on CPAN::Metric I'll work it out

[12:53] <agentzh> i wonder if you have a $day_job ;)

[12:53] <Alias_> ya

[12:53] <Alias_> I do

[12:53] <agentzh> you seem to have done so much work

[12:54] <Alias_> Well, my general policy is to make the two align

[12:54] <Alias_> If I need something for work, I stall a bit and do it as a CPAN module

[12:54] <agentzh> good point

[12:54] <Alias_> And I've been careful to insist on the right to do that when I get jobs

[12:54] * agentzh will do this too!

[12:54] <Alias_> And really, it's not THAT much code

[12:54] <Yaakov> Hello, Alias_.

[12:55] <Alias_> sloccount says my entire repository for CPAN is only 66,000 lines of code

[12:55] <Alias_> I reuse a lot of code

[12:55] <Alias_> And most of my CPAN stuff is small

[12:55] * agentzh reuses Alias's code

[12:55] <agentzh> my UML::Class::Simple is also small

[12:55] <agentzh> because your Class::Inspector does most of the stuff for me :)

[12:55] <Alias_> :)

[12:56] * Alias_ was really proud to see the PPI tree model get stolen btw

[12:56] <agentzh> it's a reuse chain...hehe

[12:56] <Alias_> Was that you?

[12:56] <Alias_> For JavaScript or something...

[12:56] <agentzh> Alias_: yup

[12:56] <Alias_> ya

[12:56] <Alias_> Was really excited to see it :)

[12:56] <agentzh> Alias_: 50% of the GNU make test suite is passing for my makefile library

[12:56] <Alias_> ah right

[12:56] <Alias_> Make syntax, that's right

[12:56] <agentzh> which has a PPI-like tree

[12:56] <Alias_> Now I remember

[12:57] <Alias_> Wasn't exactly sure which language

[12:57] <agentzh> i haven't got cycles to upload the stuff to cpan

[12:57] <Alias_> See, that's another reason I get a lot done

[12:57] <Alias_> ruthless release automation

[12:57] <agentzh> ah

[12:57] <agentzh> a script?

[12:57] <Alias_> perl build_cpan.pl --install --commit Module::Name

[12:58] <agentzh> awesome

[12:58] <agentzh> i'll write one for myself ;)

[12:58] <Alias_> Runs QA on it, adds needed files automagically, adds author tests, cleans up newlines and stuff, runs the tests, checks it, reruns them, make tardists, adds the dist to the svn repository, commits, then gives me the URL for the location of the tarball in the repository

[12:59] <Alias_> And I have a firefox bookmark to upload a URI to pause

[12:59] <agentzh> omg

[12:59] <Alias_> So "copy" from putty, and in firefox "release (paste URI)"

[12:59] <Alias_> And PAUSE pulls the distribution tarball straight out of SVN :)

[12:59] <agentzh> that's so cool

[13:00] <moritz> Alias_: you're a geek ;-)

[13:00] <Alias_> http://svn.ali.as/cpan/tools/build_cpan.pl

[13:00] <Alias_> moritz: It's entirely practical, I swear. :)

[13:00] <Alias_> Do you have any idea how many releases I've done :)

[13:00] <Alias_> Shiteloads

[13:00] <moritz> Alias_: that's no contradiction

[13:00] <Alias_> http://svn.ali.as/cpan/releases/

[13:00] <lambdabot> Title: Revision 1902: /releases

[13:01] <Alias_> That's just since I moved to svn

[13:01] <Alias_> So yeah, without the slowly evolving automation, I could never manage it

[13:01] <Alias_> I'm working on my own equivalent of Insurrection or CommitBit so I can add maintainers more easily :)

[13:01] <Alias_> http://svn.ali.as/why.jpg

[13:02] <wolverian> does it work well with opera mini? :)

[13:02] <Alias_> Probably

[13:02] <wolverian> (opera mini)++ # much better than the horrible browser your mobile comes with

[13:02] <wolverian> (opera mini)-- # goodbye privacy 

[13:03] <Alias_> wolverian: I also tested svn.ali.as today with the EVE Online in-game browser :)

[13:03] <wolverian> heh

[13:03] <Alias_> So I can both fly space ships and add maintainers :)

[13:03] <Alias_> I'll add a screen shot later :)

[13:03] <wolverian> I assume the wii browser works too

[13:03] <Alias_> I want to start a collection

[13:03] *** mncharity joined
[13:03] <Alias_> Probably :)

[13:03] <Alias_> Got a wii and a camera?

[13:03] <wolverian> no camera :/

[13:05] * agentzh goes to work on a p5 version of Pugs::Grammar::Rule2.pm.

[13:09] <Alias_> agentzh, anyways, can you please submit a bug report on PPI for that heredoc feature you need?

[13:09] <Alias_> They generally get done

[13:09] <agentzh> Alias_: will do later :)

[13:09] <Alias_> ok

[13:09] <Alias_> Cause I have a PPI timeslice coming up soonish

[13:09] <agentzh> Alias_: i was just a bit lazy but will do, anyway :)

[13:10] <Alias_> And if you miss it, it will likely be a while till the next one

[13:10] <agentzh> cute

[13:10] <Alias_> Audrey terminology

[13:10] <agentzh> doing now

[13:12] *** fglock joined
[13:13] <agentzh> Alias_: done :)

[13:13] <Alias_> thanks

[13:13] <agentzh> Alias_: thank *you* :)

[13:14] <Alias_> nah, no problem

[13:14] <Alias_> small syntax bugs are relatively easy

[13:14] <Alias_> And it's ironing out the nigglies that make it so much more useful day by day

[13:14] <Alias_> And keep people excited, when it handles even the stuff they think isn't possible

[13:14] <Alias_> Gotta maintain the illusion :)

[13:15] <agentzh> yeah

[13:15] <agentzh> exactly

[13:16] <Alias_> when I went to OSCON to release it, I made especially sure I had added support for all the cases I knew merlyn was gunna throw at me as things that perl parsers couldn't possibly handle :)

[13:16] <Alias_> And I was right :)

[13:16] <Alias_> I did a demo at pdx.pm and he started giving me examples, all the ones I expected :)

[13:16] <Alias_> First time I ever wiped the smirk right off him :)

[13:17] <agentzh> *g*

[13:17] <Alias_> Actually, one of the highlights of my Perl career I think

[13:17] <Alias_> in retrospect

[13:17] <wolverian> I hope he appreciated it as much as you did :)

[13:17] <Alias_> oh sure

[13:18] <Alias_> Spent a great night getting sloshed with him at a martini bar in Melbourne last YAPC::AU

[13:18] <Alias_> And he's one of the few people that actually understand why PPI works at the zen level :)

[13:18] *** rindolf joined
[13:18] <Alias_> I think it's like maybe 6 people

[13:19] <Alias_> me, merlyn, audrey, and a few others

[13:19] <wolverian> there are bars just for martinis?

[13:19] <Alias_> wolverian: sure is :)

[13:19] <Alias_> In Melbourne at least

[13:19] <wolverian> insane world 

[13:19] <Alias_> hidden down an alley somewhere

[13:19] <Alias_> amazing place, really funky

[13:19] <Alias_> like out of another time

[13:20] <wolverian> and then you google 'em and find out they're really popular and have a really web2.0 site 

[13:20] <Alias_> oh sure

[13:20] <Alias_> But it still felt like another world

[13:21] <moritz> why should a bar have a web2.0ish site?

[13:21] <wolverian> meh, now my summer feels so dull :) 

[13:22] <Alias_> heh

[13:22] <Alias_> moritz: Because that's the the generic design company sold them, using Frontpage.NET default Web 2.0 automation

[13:22] <Alias_> or something in that general situation

[13:22] *** xdemondogx joined
[13:24] <moritz> omfg

[13:24] <xdemondogx> ?

[13:24] *** cerridwen joined
[13:25] *** kanru joined
[13:25] <moritz> !

[13:26] *** perlMa joined
[13:27] <Alias_> ?

[13:27] <xdemondogx> ?

[13:27] <moritz> !!?

[13:27] <devbot6> moritz: Error: "!?" is not a valid command.

[13:28] <xdemondogx> ??

[13:28] <moritz> devbot6: and ! is?

[13:28] <devbot6> moritz: Error: "and" is not a valid command.

[13:28] <moritz> devbot6: help

[13:28] <devbot6> moritz: (help [<plugin>] [<command>]) -- This command gives a useful description of what <command> does. <plugin> is only necessary if the command is in more than one plugin.

[13:28] <moritz> wow, that was helpful

[13:29] <wolverian> devbot6, list

[13:29] <devbot6> wolverian: Admin, Channel, Config, Misc, Owner, RSS, Services, TracBot, User, and Web

[13:29] *** svnbot6 joined
[13:29] <moritz> devbot6: help User

[13:29] <devbot6> moritz: Error: There is no command "user".

[13:29] <moritz> that would have been too easy

[13:30] <wolverian> devbot6, list User

[13:30] <devbot6> wolverian: capabilities, changename, hostmask, hostmask add, hostmask list, hostmask remove, identify, list, register, set password, set secure, stats, unidentify, unregister, username, and whoami

[13:30] <moritz> !RSS

[13:30] <devbot6> moritz: (rss <url> [<number of headlines>]) -- Gets the title components of the given RSS feed. If <number of headlines> is given, return only that many headlines.

[13:30] <wolverian> see, it's logical, if you know the logic

[13:30] <wolverian> (;

[13:33] <moritz> devbot6: help help

[13:33] <devbot6> moritz: (help [<plugin>] [<command>]) -- This command gives a useful description of what <command> does. <plugin> is only necessary if the command is in more than one plugin.

[13:38] *** thorat joined
[13:40] <svnbot6> r16909 | agentz++ | trunk:

[13:40] <svnbot6> : [PCR]

[13:40] <svnbot6> : - added examples/langs2.grammar to demonstrate the use of

[13:40] <svnbot6> :   the "rule foo { ... }" syntax.

[13:40] <svnbot6> : - added a test to 16-examples.t for langs2.grammar.

[13:40] <svnbot6> : - fixed emitter/00-ratchet.t

[13:40] <pugs_svnbot> r16909 | agentz++ | trunk:

[13:40] <pugs_svnbot> : [PCR]

[13:40] <pugs_svnbot> : - added examples/langs2.grammar to demonstrate the use of

[13:40] <pugs_svnbot> :   the "rule foo { ... }" syntax.

[13:40] <pugs_svnbot> : - added a test to 16-examples.t for langs2.grammar.

[13:40] <pugs_svnbot> : - fixed emitter/00-ratchet.t

[13:40] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16909

[13:40] <lambdabot> Title: Changeset 16909 - Pugs - Trac

[13:40] <agentzh> weird...

[13:40] <agentzh> two bots are reporting the same commit?

[13:41] <agentzh> well, anyway, my karma has doubled :)

[13:42] <fglock> agentzh: I found the bug in your paste; there is an error in the parameter order for calling subrules

[13:42] <lambdabot> fglock: You have 1 new message. '/msg lambdabot @messages' to read it.

[13:43] <agentzh> fglock: you mean the adder sample?

[13:43] <fglock> agentzh: re release: congrats :)

[13:43] <agentzh> fglock: thanks :)

[13:43] *** drupek12 joined
[13:44] <fglock> the digit counter example; I'll try to fix it

[13:44] <agentzh> fglock: yay!

[13:44] <fglock> I wonder why I didn't notice that before

[13:45] <agentzh> fglock: because there's not enough tests! haha!

[13:46] <moritz> maybe audreyt restartet svnbot6 assuming it was down?

[13:47] <agentzh> audreyt++

[13:48] <moritz> diakopter++ # managing bots, cleaning up irc logs

[13:49] <agentzh> fglock: will try to do another CPAN release for PCR tonight :)

[13:49] <moritz> 1771 lines are marked as spam atm

[13:49] <agentzh> moritz: maybe it's your cute log site attracts those spammers?

[13:50] <agentzh> *g*

[13:50] <agentzh> *that attracts

[13:53] <agentzh> fglock: the counter example is examples/digits.grammar

[13:53] <fglock> yes

[13:54] <agentzh> fglock: and the corresponding test is in t/16-examples.t

[13:54] <agentzh> fglock: currently it's skipped.

[13:54] <agentzh> but it's looping...

[13:54] <agentzh> hehe

[13:54] <agentzh> *because

[13:56] <agentzh> fglock: currently PCR's regex parser doesn't do any error handling. i'll look into v6.pm's parser since it seems to have some diagnostics for invalid inputs

[13:57] <Alias_> You are lost in a twisty series of grammars, all of them alike

[13:57] <moritz> where do you want to turn (NWSE)?

[13:57] * Alias_ read NSFW for a sec there

[13:59] *** iblechbot joined
[14:01] <rindolf> Hi Alias_ 

[14:01] <Alias_> heya

[14:01] <Alias_> How's things

[14:01] <rindolf> Alias_: what's up?

[14:01] <rindolf> Alias_: I'm fine.

[14:01] <rindolf> Alias_: worked on XML::SemanticDiff.

[14:01] <Alias_> Hey, were you looking for maint on something? Did it ever get done?

[14:01] <rindolf> Alias_: and then Kip Hamton (its author) re-surfaced.

[14:02] <Alias_> So did he set maint for you ok?

[14:02] <Alias_> All happy?

[14:02] <rindolf> Alias_: you mean co-maint for X-SD?

[14:02] <rindolf> Alias_: well, actually, someone else did.

[14:02] <rindolf> Alias_: from the CPAN Cabal.

[14:02] <Alias_> I am the CPAN Cabal :)

[14:02] <Alias_> well, not really

[14:03] <Alias_> But if there's nothing I need to do, that's fine

[14:04] <svnbot6> r16910 | fglock++ | trunk:

[14:04] <svnbot6> : [PCR] fixed a bug in the parameter ordering - agentzh++

[14:04] <pugs_svnbot> r16910 | fglock++ | trunk:

[14:04] <pugs_svnbot> : [PCR] fixed a bug in the parameter ordering - agentzh++

[14:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16910

[14:04] <lambdabot> Title: Changeset 16910 - Pugs - Trac

[14:04] <agentzh> fglock++

[14:04] <rindolf> Alias_: what time is it there?

[14:04] <agentzh> wow, bots are racing..

[14:05] <Alias_> rindolf: midnight'ish

[14:05] <rindolf> Alias_: I see.

[14:08] <pasteling> "evalbot_r16909" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26113

[14:19] <fglock> agentzh: did it work? I'm switching back to kp6... :)

[14:19] <agentzh> fglock: it works :)

[14:20] <agentzh> fglock: could you document the subrule calling protocol somewhere when you have spare time?

[14:20] <agentzh> fglock: such as parameter list and return values...

[14:20] <agentzh> fglock: i'm having problems in understanding it

[14:25] <svnbot6> r16911 | agentz++ | trunk:

[14:25] <svnbot6> : [PCR]

[14:25] <svnbot6> : - updated examples/digits since fglock++ has already fixed it.

[14:25] <svnbot6> : - unSKIP'd the test in 16-examples.t for examples/digits.

[14:25] <svnbot6> : - updated emitter/00-ratchet.t since the emitter template has changed.

[14:25] <pugs_svnbot> r16911 | agentz++ | trunk:

[14:25] <pugs_svnbot> : [PCR]

[14:25] <pugs_svnbot> : - updated examples/digits since fglock++ has already fixed it.

[14:25] <pugs_svnbot> : - unSKIP'd the test in 16-examples.t for examples/digits.

[14:25] <pugs_svnbot> : - updated emitter/00-ratchet.t since the emitter template has changed.

[14:25] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16911

[14:25] <lambdabot> Title: Changeset 16911 - Pugs - Trac

[14:41] <fglock> agentzh: the calling protocol changed 2 times already - at Compiler::Regex near lines 143 and 150 there are some backward-compatibility hacks and a little documentation

[14:41] <fglock> it needs a cleanup

[14:41] <agentzh> fglock: *nod*

[14:47] *** masak joined
[14:47] <masak> ok, correct me if I'm wrong, but...

[14:47] <masak> t/data_types/array.t, test 53, "negative index [-1]"

[14:47] <masak> that's got to be out-of-date, no?

[14:49] <masak> it does this

[14:49] <masak> ?eval my @a = <a b c e>; @a[-1]

[14:49] *** evalbot_r16908 is now known as evalbot_r16911

[14:49] <evalbot_r16911> \"e"

[14:50] <masak> ...which I'm pretty sure is written '@a[ *-1 ]' these days

[14:50] <moritz> ...which is pretty ugly ;)

[14:50] *** b_jonas joined
[14:51] <masak> moritz: but still

[14:51] <masak> it's correct perl6, as the changing standard goes

[14:51] <moritz> masak: aye

[14:51] <masak> what's in the test isn't

[14:51] <moritz> masak: then change it

[14:51] <masak> ok :)

[14:51] <masak> that's all I needed to hear

[14:56] <TimToady> should likely also have a test that @a[-1] fails properly

[14:57] <masak> TimToady: right. I'll work that in now

[14:57] <svnbot6> r16912 | masak++ | trunk:

[14:57] <svnbot6> : [t/data_types/array.t]

[14:57] <svnbot6> : * "negative index" -1 etc are now "end index" [*-1] etc

[14:57] <pugs_svnbot> r16912 | masak++ | trunk:

[14:57] <pugs_svnbot> : [t/data_types/array.t]

[14:57] <pugs_svnbot> : * "negative index" -1 etc are now "end index" [*-1] etc

[14:57] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16912

[14:57] <lambdabot> Title: Changeset 16912 - Pugs - Trac

[14:57] <masak> two bots! svnbot6++ pugs_svnbot++ :)

[14:58] <masak> TimToady: so even reading of @a[-1] fails? or just writing?

[14:59] <pasteling> "evalbot_r16911" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26114

[15:00] <masak> oops. was that me?

[15:00] *** Limbic_Region joined
[15:00] <agentzh> masak: not likely

[15:00] <masak> I only ever changed a .t file...

[15:00] <masak> agentzh: good. carrying on :)

[15:01] <agentzh> masak: we've been seeing this for months

[15:01] <masak> agentzh: and no explanation?

[15:01] <agentzh> masak: a messed-up pugs tree on feather maybe

[15:01] <masak> agentzh: could be

[15:02] <masak> agentzh: does no-one have privs to go look?

[15:02] <agentzh> masak: many people have tried but with no luck so far

[15:02] <agentzh> masak: or maybe you can work out the puzzle?

[15:02] <masak> agentzh: oki

[15:03] <agentzh> hehe

[15:03] <masak> agentzh: not likely. for starters, I don't have a feather account

[15:03] <agentzh> k

[15:04] <masak> TimToady: I just went ahead and assumed now that even reading from [-1] on a normal array is fatal

[15:04] <svnbot6> r16913 | masak++ | trunk:

[15:04] <svnbot6> : added back a few failing -1 tests into t/data_types/array.t

[15:04] <pugs_svnbot> r16913 | masak++ | trunk:

[15:04] <pugs_svnbot> : added back a few failing -1 tests into t/data_types/array.t

[15:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16913

[15:04] <lambdabot> Title: Changeset 16913 - Pugs - Trac

[15:04] <masak> maybe that was to harsh; in that case I'll be happy to change it to something less harsh, like a normal undefined value

[15:05] <masak> s/to/too/

[15:07] <masak> actually, I could argue either way there

[15:08] <masak> on one hand, accessing past the end of the array in the other direction (i.e. going above @a.end) only returns undef

[15:08] <TimToady> it returns an unthrown exception, which is a variety of undef

[15:08] <TimToady> but if you try to use the value, it should throw an exception

[15:08] <masak> ok, so dies_ok is correct in the .t file for that?

[15:09] <TimToady> as long as you do something like @a[-1] + 0 inside

[15:09] <masak> ah -- no, right now only @a[-1]

[15:09] <masak> I'll go change it

[15:09] <TimToady> the direct result would merely test as undefined

[15:10] <TimToady> biab &

[15:10] <masak> oki

[15:10] <masak> adding another test for that

[15:12] <masak> hehe, now the test file hangs instead

[15:12] <svnbot6> r16914 | masak++ | trunk:

[15:12] <svnbot6> : changed t/data_types/array.t slightly after clarification 

[15:12] <svnbot6> : from TimToady++

[15:13] <pugs_svnbot> r16914 | masak++ | trunk:

[15:13] <pugs_svnbot> : changed t/data_types/array.t slightly after clarification 

[15:13] <pugs_svnbot> : from TimToady++

[15:13] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16914

[15:13] <lambdabot> Title: Changeset 16914 - Pugs - Trac

[15:14] <masak> it probably hangs because @a[*-4 .. *-2] is treated as something to do with infinity...

[15:15] <pasteling> "evalbot_r16913" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26115

[15:15] <masak> hm, sometimes I find it tedious to keep the plan figure at the top of test files updated

[15:15] <masak> wouldn't it be possible to write a simple script to count the tests?

[15:16] <masak> one that took into account if blocks and for loops

[15:16] <masak> I think such a script could avoid the Halting Problem issue on account of .t files never going above a certain complexity

[15:17] <masak> specifically, they never contain infinite loops with test method calls

[15:17] *** nik joined
[15:17] <pugs_svnbot> r16915 | agentz++ | trunk:

[15:17] <pugs_svnbot> : PCR - compile_p6grammar.pl - adds header comments to the generated p5 files

[15:17] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16915

[15:17] <lambdabot> Title: Changeset 16915 - Pugs - Trac

[15:18] <svnbot6> r16915 | agentz++ | trunk:

[15:18] <svnbot6> : PCR - compile_p6grammar.pl - adds header comments to the generated p5 files

[15:19] <masak> agentzh: there are a couple of unrecognized files in the perl5/Pugs-Compiler-Perl6/t directory -- is it ok if I svn:ignore those?

[15:19] <agentzh> really? looking

[15:20] <masak> it's 01-sanity, builtins, Test.pm, 02-test-pm and data_types/array_extending.t

[15:20] <masak> at least on my box, but maybe I haven't cleaned lately

[15:20] *** LimbicRegion joined
[15:20] <agentzh> ah, you mean pugs's t/

[15:20] <masak> yes

[15:20] <agentzh> i thought it was PCR's

[15:21] <masak> no, wait, it is

[15:21] <agentzh> okay, it's v6.pm's

[15:21] <agentzh> i was just reading too fast

[15:21] <agentzh> sorry

[15:21] <masak> they're not there when I remove the directory structure and svn up

[15:21] <masak> so they're probably generated by make

[15:22] <agentzh> masak: they're copied from pugs's t/

[15:22] <agentzh> clkao worked that out iirc

[15:22] <agentzh> they're mostly passing tests for v6.pm in the pugs test suite

[15:23] <masak> agentzh: but I could just prop them as ignored so they don't show up when one does `svn st`?

[15:23] <agentzh> masak: use svn st -q

[15:23] *** dwave joined
[15:23] <masak> agentzh: why? I know what it does, but why should I have to?

[15:24] <agentzh> masak: setting them as ignored is fine

[15:24] <masak> great. I'll do that

[15:28] <svnbot6> r16916 | masak++ | trunk:

[15:28] <svnbot6> : props

[15:28] <pugs_svnbot> r16916 | masak++ | trunk:

[15:28] <pugs_svnbot> : props

[15:28] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16916

[15:28] <lambdabot> Title: Changeset 16916 - Pugs - Trac

[15:30] <pasteling> "evalbot_r16915" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26117

[15:36] <svnbot6> r16917 | masak++ | trunk:

[15:36] <svnbot6> : hiding autogenerated perl5/Pugs-Grammar-MiniPerl6/lib/Pugs/Grammar/MiniPerl6.pm too

[15:36] <pugs_svnbot> r16917 | masak++ | trunk:

[15:36] <pugs_svnbot> : hiding autogenerated perl5/Pugs-Grammar-MiniPerl6/lib/Pugs/Grammar/MiniPerl6.pm too

[15:36] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16917

[15:36] <lambdabot> Title: Changeset 16917 - Pugs - Trac

[15:37] <masak> I'm peeking inside Pugs internals now

[15:37] <masak> does anyone have a pointer to what the difference between IArray and VArray is?

[15:38] *** LimbicRegion is now known as Limbic_Region

[15:39] <Jameswf> 13 char 

[15:40] <masak> ?eval "V".ord - "I".ord

[15:40] *** evalbot_r16911 is now known as evalbot_r16917

[15:40] <evalbot_r16917> 13

[15:40] <masak> Jameswf: I get it. Not quite what I was looking for, though

[15:40] <masak> :)

[15:41] <masak> if I know audreyt right, it's something more substantial than that

[15:43] <masak> here's another 'cute' way to do it:

[15:43] <masak> ?eval [-] map :{ .ord } <v i>

[15:43] <evalbot_r16917> 13

[15:44] <Jameswf> IArray $sweeet[1] #index VArray $sweeet[juice] #value

[15:44] <Jameswf> my guess

[15:44] <masak> Jameswf: please explain more verbosely than that

[15:44] <masak> what's the second one? it doesn't parse in my brain

[15:45] <masak> an index is a value too, yes?

[15:46] <Jameswf> you can call an arrays contents my its indes 0-sizeof() or by value if you have set that so an array gas_prices[newyork] can also be gas_prices[0]

[15:46] <Jameswf> its how you make the call

[15:46] <masak> Jameswf: you sure you're not thinking of PHP now?

[15:47] <masak> that doesn't sound like Perl 6 to me

[15:48] <masak> because (1) it's not a call, (2) you can't use a bareword inside the index [] like that, unless it's a defined method, and (3) using $ before the array is Perl5 (and PHP), not Perl 6

[15:49] <Jameswf> it all sort of blends php perl c its like 40 different dialects of spanish, Some times you speak mexican to a puortorican

[15:49] <masak> :)

[15:49] <masak> to me they're very distinct

[15:49] <masak> maybe not syntactically, but spiritually

[15:50] <masak> when I use PHP, I feel dead; when I use Perl, I feel alive :)

[15:50] <Jameswf> I was going for context more than syntaf thats why there were no ;

[15:50] <Jameswf> *syntax

[15:50] <masak> Jameswf: anyway, I don't think that's it

[15:51] <masak> this is internals we're talking about, so it's two different types of array being used inside Pugs

[15:51] <masak> how you index a particular array should not come into the question

[15:53] *** vel joined
[15:54] <Jameswf> I cant find the terms on google except used as array names

[15:54] <masak> I'm in src/Pugs/AST/Internals.hs now

[15:55] <masak> there's a lot of types defined here starting with I

[15:55] <masak> and many starting with V

[15:55] <masak> trying to figure out what sets them apart

[16:01] <spinclad> 'when 6.28 comes, every day will be Thursday'...

[16:02] <masak> spinclad: :P

[16:02] <masak> that's a great slogan

[16:03] <masak> especially along with Arthur Dent's "This must be Thursday. I could never get the hang of Thursdays."

[16:05] <spinclad> 'when i catch up with the backlog, every time will be 08:10'

[16:06] <spinclad> (12:10 UTC)

[16:06] <masak> I also find a lot of SV and V suffixes in the names in the Pugs internals

[16:06] <spinclad> yeah, or Belgium

[16:07] <masak> they remind me of something from Perl 5 internals

[16:11] <masak> & # dinner

[16:12] *** araujo joined
[16:24] *** offby1 joined
[16:30] *** vel joined
[16:38] *** BooK__ is now known as BooK

[16:47] *** justatheory joined
[16:50] *** fglock joined
[16:52] *** weinig joined
[16:52] <svnbot6> r16918 | fglock++ | trunk:

[16:52] <svnbot6> : [kp6] p5regex - implemented positional captures

[16:52] <pugs_svnbot> r16918 | fglock++ | trunk:

[16:52] <pugs_svnbot> : [kp6] p5regex - implemented positional captures

[16:52] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16918

[16:52] <lambdabot> Title: Changeset 16918 - Pugs - Trac

[16:57] <pasteling> "evalbot_r16917" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26118

[17:08] *** rashakil joined
[17:10] *** Schwern joined
[17:14] <svnbot6> r16919 | fglock++ | trunk:

[17:14] <svnbot6> : [kp6] p5regex - quantified positionals capture to an array

[17:14] <pugs_svnbot> r16919 | fglock++ | trunk:

[17:14] <pugs_svnbot> : [kp6] p5regex - quantified positionals capture to an array

[17:14] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16919

[17:14] <lambdabot> Title: Changeset 16919 - Pugs - Trac

[17:19] <TimToady> ?eval [-] map :{ .ord } <v i>

[17:19] *** evalbot_r16917 is now known as evalbot_r16919

[17:19] <evalbot_r16919> 13

[17:19] <TimToady> that should not parse

[17:19] <TimToady> ?eval [-] map { .ord }, <v i>

[17:19] <evalbot_r16919> 13

[17:19] *** vel joined
[17:20] <TimToady> ?eval [-] map <v i>, :{ .ord }

[17:20] <evalbot_r16919> 13

[17:20] <TimToady> but a :{} where a term is expected should be expecting an infix after it.

[17:20] <TimToady> so it should have taken < as a less than

[17:21] <TimToady> so probably parsec being overly backtracky...

[17:22] <TimToady> @tell masak I think probably @a[-1] with a literal negative should be a compilation failure

[17:22] <lambdabot> Consider it noted.

[17:23] <TimToady> @tell masak in order to catch a frequent P5Think error sooner than runtime.  But @a[$negative] is still a runtime failure

[17:23] <lambdabot> Consider it noted.

[17:40] *** vel joined
[17:41] *** Psyche^ joined
[17:55] *** Psyche^ is now known as Patterner

[17:56] <fglock> just checking - named assertions don't capture, right? like <before ...>

[17:56] <fglock> or do I need <?before ...> for that

[17:57] *** vel6608 joined
[17:59] <fglock> are captures-inside-assertions discarded? as in <before (...) >

[17:59] *** vel joined
[18:03] <fglock> nevermind, I found the answer to my question

[18:04] *** masak joined
[18:26] *** Belaf joined
[18:31] *** [particle] joined
[18:38] *** Squern joined
[18:46] *** vadrer joined
[18:48] <vadrer> ?eval say 'hello';

[18:48] <evalbot_r16919> OUTPUT[hello␤] Bool::True

[18:48] <masak> ?eval 'hello'

[18:48] <evalbot_r16919> "hello"

[18:49] <smg> ?eval print for <1 2 3 4 5>

[18:49] <evalbot_r16919> OUTPUT[] undef

[18:49] <smg> ?eval map { print } <1 2 3 4 5>

[18:49] <evalbot_r16919> Error: ␤Unexpected "2"␤expecting operator

[18:49] <masak> ?eval [~] <1 2 3 4 5>

[18:49] <evalbot_r16919> "12345"

[18:49] <smg> is this lisp or perl?

[18:50] <masak> smg: perl 6

[18:50] <lambdabot> masak: You have 2 new messages. '/msg lambdabot @messages' to read them.

[18:50] <smg> what is [~] ?

[18:50] <masak> wee, messages!

[18:50] <smg> masak: tell what's [~] pls

[18:50] <masak> @messages

[18:50] <lambdabot> TimToady said 1h 28m 4s ago: I think probably @a[-1] with a literal negative should be a compilation failure

[18:50] <lambdabot> TimToady said 1h 26m 36s ago: in order to catch a frequent P5Think error sooner than runtime. But @a[$negative] is still a runtime failure

[18:50] *** xwrn joined
[18:50] <masak> smg: ~ is string concatenation

[18:50] <masak> like the old . in perl 5

[18:50] <smg> lol

[18:51] <smg> but what does ~ concatenate then?

[18:51] <masak> [~] takes a whole list and concatenates all the items

[18:51] <smg> k

[18:51] <smg> like join "" ?

[18:51] <masak> smg: ~ concatenates strings

[18:51] <masak> smg: yes

[18:51] <smg> damn

[18:51] <smg> is there a page for all changes from perl 5 => perl 6?

[18:52] <masak> @tell TimToady re @a[-1]: ok. that's half of what I thought too

[18:52] <lambdabot> Consider it noted.

[18:52] <masak> @tell TimToady I will change the test to reflect this

[18:52] <lambdabot> Consider it noted.

[18:52] <masak> smg: yes. let me find it for you

[18:53] <smg> thx

[18:53] <smg> i'm too lazy atm

[18:53] <smg> http://feather.perl6.nl/syn/Differences.html <-this?

[18:53] <lambdabot> Title: Perl6::Perl5::Differences

[18:53] <smg> lambdabot: true

[18:53] <masak> not the one I was thinking about

[18:53] <smg> okay then find the better one from your memory pls for me 

[18:53] <smg> :)

[18:54] <masak> here you go: http://svn.pugscode.org/pugs/docs/other/porting_howto

[18:54] <masak> but even better is to download pugs and look at all the tests

[18:54] <masak> they tell the whole story about the syntax and semantics

[18:55] <smg> all the tests

[18:55] <smg> where can i find them?

[18:55] <masak> in the pugs repository

[18:55] <smg> mh

[18:56] <masak> which you can download in a number of ways

[18:56] <masak> check out pugscode.org

[18:56] <jjore> smg, the [ ] around ~ turned it into a reduce operation.

[18:56] <smg> lol

[18:56] <smg> that's really evil

[18:56] <smg> it's from haskell?

[18:56] <jjore> it accepts any function btw.

[18:56] <jjore> op, rather.

[18:56] <smg> isn't [ ] anonymous array?

[18:56] *** unobe_away is now known as unobe

[18:56] <jjore> no, not at this place.

[18:57] <smg> k

[18:57] <smg> context?

[18:57] <jjore> dunno. probably?

[18:57] <smg> k

[18:57] <smg> :)

[18:57] <smg> i love perl 5

[18:57] <jjore> I love perl 6 harder.

[18:57] <smg> but i can't stand with perl 6 atm

[18:57] *** kane_ joined
[18:59] <Tene> smg: why?

[19:00] <Gothmog_> it takes some getting used to, but that was just as true for perl 5, and its worth it

[19:00] <Juerd> it's

[19:00] <smg> i dunno

[19:00] <smg> :)

[19:00] <masak> smg: I agree with Gothmog_. Perl 6 is still in the spirit of Perl.

[19:01] <smg> it is

[19:01] <masak> except it has more neat stuff to play with

[19:01] <Juerd> I guess that depends on the definition of Perl's spirit :)

[19:01] <smg> i will see

[19:01] <smg> for the moment i dislike some major changes for perl 6

[19:01] <smg> but maybe i get used to them

[19:01] <masak> Juerd: yes, it kind of has to depend on that :)

[19:01] <Juerd> I personally think some parts of Perl 6 are too complicated, and Perl 5 always felt simple.

[19:01] <jjore> Perl 6 is just tons of great stuff that's way too hard to implement in Perl 5 as add-ons. *You* try writing macros in Perl 5.

[19:01] <jjore> Blech.

[19:01] <masak> smg: most of the changes have good reasons behind them

[19:02] <avar> ha! perl5 felt simple?:)

[19:02] <Juerd> masak: Hm... And which changes do not? :)

[19:02] <smg> masak: i know, because i know the perl6 developers are good

[19:02] <Juerd> avar: Yes. Simple, not easy.

[19:02] <masak> Juerd: I think I agree on some points, junctions for example

[19:02] <jjore> junctions are what you've been using in SQL for ages now!

[19:02] <smg> masak: but in the first place they look uncomfortable, but i understand :)

[19:02] <avar> Perl [56] are a lot of things, but I wouldn't say simple is one of them, at least not on the language level

[19:02] <Juerd> masak: I think junctions are relatively simple. Multidimensional anything, however, argh. I just don't get that.

[19:02] <avar> Maybe on the "there's lots of code written for you via cpan" level

[19:03] <masak> Juerd: hm, which changes do not have good reasons behind them? maybe none. have to thing about that

[19:03] <Juerd> avar: Not simple like PHP :)

[19:03] <Juerd> avar: But Perl 5 is much simpler than Perl 6

[19:03] <masak> smg: give it some time

[19:03] *** b_jonas joined
[19:03] <Juerd> avar: I think references are simpler than captures, for example

[19:04] <Juerd> avar: And arrays of arrays, simpler than multidimensional arrays.

[19:04] <avar> Juerd: No, the other way around. You can easily explain some things on p6 which would take whole days to explain in p5:)

[19:04] <avar> Yeah maybe, but syntax and some other semantics are simpler

[19:04] <Juerd> avar: I doubt it.

[19:04] <avar> and some or not, *shrug*

[19:04] <b_jonas> and lambdas simpler then p6 functions with prototypes and stuff, but that's what we get

[19:04] <Alias_> jjore: I for one don't think the new constructor stuff is something that's way too hard to implement in Perl 5

[19:04] <masak> interesting discussion

[19:04] <Juerd> Well, yes, some things. And those are probably the changes that I like :)

[19:04] <Alias_> I'm not a far

[19:04] <Alias_> fan

[19:05] <Juerd> The other changes, I'll just take because I long for the good stuff :)

[19:05] <b_jonas> multidimensional array can be a performance thing in some cases

[19:05] <Gothmog_> I think arrays of arrays are rather clumsy if you want something multidimensional.

[19:05] <jjore> Alias_: ok, but the new constructor syntax is implemented in perl 5 as source filters.

[19:05] <jjore> that sucks.

[19:05] <Juerd> b_jonas: I still think that such things are nice to have, but as an extension rather than in the main language.

[19:05] <b_jonas> especially if you have numeric arrays

[19:05] <Juerd> b_jonas: Same for junctions, perhaps.

[19:05] <Alias_> jjore: Sure, but I don't like having it imposed on eme

[19:05] <Alias_> me

[19:05] <agentzh> question: how to avoid warnings like "Name XXX used only once: possible typo"?

[19:05] <jjore> I'd much prefer to have ASTs or similar to work with.

[19:06] <Alias_> ... because it's someone's favourite constructor stule

[19:06] <Alias_> style

[19:06] <b_jonas> well, I don't like p6 junctions in code either, yep

[19:06] <Juerd> agentzh: Use it twice or disable warnings :)

[19:06] <b_jonas> agentzh: our can work in some cases

[19:06] <Alias_> agentzh: $foo = $foo :(

[19:06] <b_jonas> our $foo that is

[19:06] <masak> sometimes I'm afraid that junctions will not be introspectable enough

[19:06] <b_jonas> but not always

[19:06] <agentzh> Alias_: there's tons of such things...because it's generated code...

[19:07] <agentzh> Juerd: no warnings may be a good idea

[19:07] <Juerd> agentzh: That's what it's for.

[19:08] *** diakopter_afk is now known as diakopter

[19:08] <b_jonas> you can no warnings just specific kinds of warnings

[19:09] *** amnesiac joined
[19:12] <agentzh> b_jonas: what's the warning catagory for the "used only once" thing?

[19:12] <b_jonas> agentzh: try "once"

[19:13] <agentzh> k

[19:13] <agentzh> b_jonas: it works, thanks :)

[19:14] <masak> any tips on how to familiarize oneself with the internals of pugs?

[19:15] <masak> I started today, but quickly ran into a lot of questions with no-one to ask

[19:16] <agentzh> masak: it's a big project ;)

[19:16] <masak> agentzh: so I gather.

[19:16] <agentzh> masak: but i'm glad to see you've started :)

[19:16] <masak> still, it's nice to know a little about what's going on under the hood

[19:16] <agentzh> masak: one tip

[19:16] <masak> my plan is to learn enough so that I can apply simple patches when I have the time

[19:17] <agentzh> grep the irc logs over the years for audreyt, gaal, and other hs people's remarks

[19:17] <masak> 'aight

[19:17] <agentzh> it may helps

[19:17] <agentzh> *help

[19:17] <masak> maybe follow along with the svn logs/diffs as well...

[19:17] <agentzh> masak: *nod*

[19:18] * masak takes deep breath

[19:18] * agentzh grins.

[19:18] <agentzh> masak: maybe you'll become a second audreyt here and start hacking on src/

[19:19] <masak> who knows? anything might happen

[19:19] <agentzh> masak: yup

[19:19] <masak> though at this point I doubt I could replace audreyt

[19:19] <masak> I would have to quit my day job :)

[19:19] <agentzh> lol

[19:20] <masak> and even that would probably not be enough

[19:20] <agentzh> fglock: caching is anti-testing...

[19:20] <agentzh> masak: agreed

[19:20] <agentzh> masak: you need huge hours...

[19:20] <masak> I'm not worshipping audreyt, I'm just un deep awe

[19:21] <masak> I hope she's soon well enough to carry on with pugs

[19:21] <agentzh> fglock: yay! compile_p6grammar.pl generates a working Pugs::Grammar::Rule.pmc and all tests are passing :D

[19:21] <agentzh> masak: me too

[19:22] <masak> agentzh++ # cool

[19:22] <agentzh> masak: thanks :)

[19:22] <agentzh> it's much much faster...

[19:22] <agentzh> let me time it...

[19:23] <agentzh> $ time util/update-rule-pmc-new update

[19:23] <agentzh> real    0m1.503s

[19:23] <agentzh> user    0m1.416s

[19:23] <agentzh> sys     0m0.080s

[19:23] * diakopter will return later tonight to fix 1. the default vhost on feather (which I broke yesterday with some incomplete changes before someone/cron restarted apache2), 2. fix the auto-builds of pugs, 3. implement the super-improved dalek I planned this morning (details later).  bbl

[19:23] <agentzh> while the traditional v6.pm approach takes much longer:

[19:23] *** diakopter is now known as diakopter_afk

[19:24] <agentzh> $ time util/update-rule-pmc updateGenerating lib/Pug/Grammar/Rule2.pmc...

[19:24] <agentzh> real    0m7.176s

[19:24] <agentzh> user    0m7.072s

[19:24] <agentzh> sys     0m0.088s

[19:24] <masak> about a 4-fold improvement, not bad

[19:24] <agentzh> indeed!

[19:24] <masak> what's the sikkrit?

[19:25] <agentzh> sikkrit?

[19:25] <offby1> he means "Sekrit"

[19:25] <offby1> obviously can't spell :-)

[19:25] <offby1> as in, "sekrit password"

[19:25] <masak> offby1: :)

[19:25] <agentzh> ah

[19:26] <masak> offby1: I honestly didn't know it had a correct inkurikt spelling

[19:26] <agentzh> compile_p6grammar doesn't parse p6 code, it only parse p6 regexes

[19:26] <agentzh> *parses

[19:26] <masak> offby1: that's what you get for not being a native english speaker, I guess

[19:27] <masak> agentzh: and that makes it faster?

[19:27] <agentzh> masak: yes :)

[19:27] <agentzh> compiling full perl 6 is slow...

[19:27] <agentzh> while compiling just perl 6 regexes can be rather efficient.

[19:28] <masak> ok

[19:28] <masak> sounds like interesting code to look at...

[19:28] <agentzh> the code in actions are treated as Perl 5

[19:28] <agentzh> or source-filtered Perl 5 :)

[19:28] <agentzh> i'll commit the stuff...

[19:28] <masak> do so

[19:29] <agentzh> a sec

[19:30] <agentzh> it's a huge commit

[19:32] <svnbot6> r16920 | fglock++ | trunk:

[19:32] <svnbot6> : [kp6] p5regex - fixed quantified captures

[19:32] <svnbot6> : - added v6/docs/p6regex-on-p5regex.txt

[19:32] <pugs_svnbot> r16920 | fglock++ | trunk:

[19:32] <pugs_svnbot> : [kp6] p5regex - fixed quantified captures

[19:32] <pugs_svnbot> : - added v6/docs/p6regex-on-p5regex.txt

[19:32] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16920

[19:32] <lambdabot> Title: Changeset 16920 - Pugs - Trac

[19:33] <masak> it's always nice to see big commits...

[19:34] <agentzh> still working on the log message...

[19:35] <pasteling> "evalbot_r16919" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26120

[19:35] *** weinig joined
[19:37] *** fglock joined
[19:37] <svnbot6> r16921 | masak++ | trunk:

[19:37] <svnbot6> : [t/data_types/array.t]

[19:37] <svnbot6> : * changes based on input from TimToady++

[19:37] <pugs_svnbot> r16921 | masak++ | trunk:

[19:37] <pugs_svnbot> : [t/data_types/array.t]

[19:37] <pugs_svnbot> : * changes based on input from TimToady++

[19:37] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16921

[19:37] <lambdabot> Title: Changeset 16921 - Pugs - Trac

[19:37] *** unobe is now known as unobe_away

[19:37] <masak> that was just a tiny commit :)

[19:37] <agentzh> committed

[19:38] <pugs_svnbot> r16922 | agentz++ | trunk:

[19:38] <pugs_svnbot> : [PCR]

[19:38] <pugs_svnbot> : - added examples/Grammar.grammar which is the grammar spec

[19:38] <pugs_svnbot> :   for Perl 6 regexes themselves.

[19:38] <pugs_svnbot> :   this grammar file can be compiled by util/compile_p6grammar.pl

[19:38] <pugs_svnbot> :   down to a .pm file and replaces lib/Pugs/Grammar/Rule.pmc.

[19:38] <svnbot6> r16922 | agentz++ | trunk:

[19:38] <svnbot6> : [PCR]

[19:38] <svnbot6> : - added examples/Grammar.grammar which is the grammar spec

[19:38] <svnbot6> :   for Perl 6 regexes themselves.

[19:38] <svnbot6> :   this grammar file can be compiled by util/compile_p6grammar.pl

[19:38] <pugs_svnbot> : - added util/update-rule-pmc-new to automate this process.

[19:38] <svnbot6> :   down to a .pm file and replaces lib/Pugs/Grammar/Rule.pmc.

[19:38] <svnbot6> : - added util/update-rule-pmc-new to automate this process.

[19:38] <pugs_svnbot> : - updated Rule.pmc using this new approach. It's about 4 times

[19:38] <svnbot6> : - updated Rule.pmc using this new approach. It's about 4 times

[19:38] <pugs_svnbot> :   faster than the traditional v6.pm approach!

[19:38] <pugs_svnbot> : - set $NoCache to 1 by default in P::C::Regex to help testing

[19:38] <svnbot6> :   faster than the traditional v6.pm approach!

[19:38] <pugs_svnbot> :   (will reset to 0 before release though).

[19:38] <svnbot6> : - set $NoCache to 1 by default in P::C::Regex to help testing

[19:38] <pugs_svnbot> : (no regressions)

[19:38] <svnbot6> :   (will reset to 0 before release though).

[19:38] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16922

[19:38] <svnbot6> : (no regressions)

[19:38] <masak> whoa

[19:38] <masak> competing bots

[19:38] <agentzh> masak, fglock, avar: Please see http://svn.pugscode.org/pugs/perl5/Pugs-Compiler-Rule/examples/Grammar.grammar 

[19:38] <lambdabot> http://tinyurl.com/2ez2j3

[19:38] <masak> agentzh: oki

[19:39] <agentzh> PCR now uses compile_p6grammar.pl to compile this grammar file down to its own regex parser (i.e. Pugs::Grammar::Rule.pmc)

[19:39] *** CardinalNumber joined
[19:39] <masak> agentzh: nice

[19:39] <agentzh> in other words, this part is self-hosting.

[19:39] <masak> agentzh: not bad

[19:40] <agentzh> (in fact, it's a grammar parser)

[19:40] <agentzh> a superset of Perl 6 regexes.

[19:40] *** SamB joined
[19:41] <masak> I still have the feeling I'd be even more impressed if I had a better overview of Perl 6 work

[19:41] <masak> but a self-hosting grammar does sound important

[19:41] <avar> agentzh: ah, %{}% is perl5 code?

[19:41] <agentzh> avar: yup

[19:41] <agentzh> avar: so is the actions

[19:42] <agentzh> (to be more accurate, the action code goes through a source-filter which de-sugars things like $/ and $<foo>)

[19:42] <avar> well, they look sort-of-p6

[19:42] <avar> ah, yeah

[19:42] <masak> agentzh: why p5?

[19:42] <agentzh> source-filters may give troubles but they're pretty handy.

[19:43] <agentzh> masak: because p5 is fast!

[19:43] <masak> agentzh: oh yeah, that's why

[19:43] <agentzh> and more complete, more flexibale and more stable

[19:43] <fglock> agentzh: looking

[19:43] <agentzh> *flexible

[19:43] <avar> ..and p6 isn't going to be here until next**{inf} christmas:)

[19:43] <agentzh> right

[19:44] <Tene> So, can we do source filters in p6 still if we want to?

[19:44] <masak> avar: don't say that :( you're making me cry

[19:45] <rindolf> Hi all! Can anyone help with this Prolog problem http://sial.org/pbot/26119 ?

[19:45] <lambdabot> Title: Paste #26119 from "rindolf" at 82.81.175.57

[19:45] <masak> in a way, p6 is here already

[19:45] <agentzh> fglock: some parts of Grammar.grammar look ugly because PCR has inconsistent calling protocol between named subrules and anonymous subrules :(

[19:46] <agentzh> Tene: there's macros in Perl 6.

[19:46] <agentzh> Tene: they're more stable source-filters :)

[19:47] <avar> and you can override the grammar lexically, presumably

[19:47] <Tene> agentzh: yes, but how difficult would it be to do a traditional source filter? ;)

[19:47] <agentzh> fglock: it has taken me many hours to get it right ;)

[19:48] <agentzh> Tene: not sure...

[19:48] <jjore> rindolf: solving for any one word is sufficient. You asked for word(...) OR word(...) OR ...

[19:48] <avar> Tene: as in override the IO layer when it's reading in source files?

[19:49] <rindolf> jjore: ah, I see.

[19:49] *** rho joined
[19:49] <fglock> agentzh: you should take a look at token-test.pl - p6rx-on-p5rx is close to usable :)

[19:49] <agentzh> fglock: yes, i will!

[19:50] <rindolf> jjore: thanks.

[19:50] <jjore> np.

[19:50] <avar> fglock: as in via kp6?

[19:50] <rindolf> jjore: I indeed mixed between ";" (OR) and "," (AND).

[19:50] <fglock> avar: yes; but it is portable to PCR

[19:50] <rindolf> jjore: also had a few variable problems.

[19:51] <jjore> sure.

[19:52] <avar> fglock: If you get it working well enough kp6 might replace pcr:)

[19:53] <agentzh> avar: the parser can be written in kp6 at least

[19:53] <fglock> that's the idea

[19:55] <agentzh> fglock: i'll try to find some time to work on a p6 regex tracer with a web UI tomorrow...

[19:55] <agentzh> fglock: we need a good tool to debug grammars, it seems

[19:56] <agentzh> fglock: not sure how good it will be, but i have some interesting ideas in my head aleady

[19:56] <avar> something like -Mre=debug ?

[19:56] <agentzh> avar: more descriptive

[19:56] <avar> how so?

[19:56] <agentzh> avar: it has a GUI.

[19:57] <agentzh> avar: it's easier to explain once i can give you a live demo :)

[19:58] <agentzh> avar: but i can't promise anything but i'd like to try :)

[19:58] <agentzh> too late to make a PCR release tonight...4am already...

[19:58] <agentzh> will crash soon...

[19:59] <agentzh> see you guys "tomorrow"... &

[19:59] *** agentzh left
[19:59] <masak> agentzh: 'night

[20:00] *** fglock joined
[20:03] <fglock> does / (.) $0 := (.) / overwrite $0, or does it capture to an array?

[20:06] <masak> fglock: good question. is that covered in the synopses?

[20:07] <fglock> kind of - it's a corner case

[20:07] <masak> definitely

[20:07] <masak> I don't understand your second alternative fully, it seems magical to me

[20:08] <masak> so I would go for 'overwrite'

[20:09] <fglock> masak: / $<x> := (.) $<x> := (.) / captures to @( $<x> )

[20:10] <masak> oh -- didn't know that

[20:10] <fglock> I wonder if positional captures do the same, and to what extent I should care in compile-time

[20:10] <masak> it's not compatible with my current understanding of binding :=

[20:11] <masak> seemingly they work differently in regexes

[20:11] <fglock> yes, it's regex named-capture binding

[20:11] <masak> :)

[20:11] <masak> and it still seems magical, but now intentionally so

[20:12] <masak> now the latter alternative seems more plausible to me

[20:16] <masak> I seem to remember there was something wonky with regex array captures

[20:16] <masak> wonder if it ever got fixed...

[20:17] <masak> audreyt wrote an email about it months ago, with an opinion that sounded like sanity compared to the (then) semantics of array capture

[20:18] <masak> I don't know if it has been addressed

[20:20] <masak> here's the thread in question: http://groups.google.com/group/perl.perl6.language/browse_thread/thread/c2b106d848ac8019

[20:20] <lambdabot> Title: Motivation for /&lt;alpha&gt;+/ set Array not Match? - perl.perl6.language | Goo ..., http://tinyurl.com/yub8y7

[20:20] <masak> anyone know what happened to that issue? last I heard from TimToady was that he needed to discuss it with TheDamian

[20:22] <fglock> masak: yes, that was my idea, but it was not approved

[20:23] <masak> fglock: oh, so things are still the way they were before the proposal?

[20:23] <masak> is there a discussion recorded somewhere explaining why it wasn't approved?

[20:24] <fglock> I'll take a look

[20:24] <masak> upon rereading the thread, it still seems clear to me that the then semantics are strange and surprising

[20:29] *** vel_ joined
[20:30] <masak> it's stuff like this that makes me glad p6 is still quite fluid

[20:30] * rho is back

[20:30] <masak> there's still room for opinions and improvement

[20:42] *** weinig joined
[20:54] *** lixinso left
[21:06] *** dduncan joined
[21:08] *** weinig joined
[21:13] *** unobe_away is now known as unobe

[21:14] *** justatheory joined
[21:17] *** jisom joined
[21:18] *** vel joined
[21:19] *** iblechbot joined
[21:39] *** vel joined
[21:42] <svnbot6> r16923 | fglock++ | trunk:

[21:42] <svnbot6> : [kp6] p5regex - implemented / $<named> := (...) /

[21:42] <pugs_svnbot> r16923 | fglock++ | trunk:

[21:42] <pugs_svnbot> : [kp6] p5regex - implemented / $<named> := (...) /

[21:42] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16923

[21:42] <lambdabot> Title: Changeset 16923 - Pugs - Trac

[21:44] *** Alias__ joined
[21:46] <pasteling> "evalbot_r16922" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26122

[21:57] *** avar joined
[22:00] <svnbot6> r16924 | fglock++ | trunk:

[22:00] <svnbot6> : [kp6] p5regex - the match-result-interpreter now uses a dispatch table

[22:00] <pugs_svnbot> r16924 | fglock++ | trunk:

[22:00] <pugs_svnbot> : [kp6] p5regex - the match-result-interpreter now uses a dispatch table

[22:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16924

[22:00] <lambdabot> Title: Changeset 16924 - Pugs - Trac

[22:14] *** rlb3 joined
[22:18] *** vel joined
[22:19] *** hakobe is now known as hkb_zz

[22:20] *** justatheory joined
[22:20] *** fglock joined
[22:39] *** vel joined
[22:42] <svnbot6> r16925 | fglock++ | trunk:

[22:42] <svnbot6> : [kp6] p5regex - named captures can capture to array

[22:42] <pugs_svnbot> r16925 | fglock++ | trunk:

[22:42] <pugs_svnbot> : [kp6] p5regex - named captures can capture to array

[22:42] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16925

[22:42] <lambdabot> Title: Changeset 16925 - Pugs - Trac

[22:43] <pasteling> "evalbot_r16924" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26124

[22:50] *** vel_ joined
[22:55] <clkao> seen xdg

[22:58] <fglock> clkao: hi

[22:59] <clkao> hola

[23:00] <fglock> clkao: would you update Sub-Multi in cpan? I've committed a small fix

[23:00] <clkao> oh sure

[23:00] <clkao> do you want to comaint it?

[23:01] <fglock> sure, but please make the upload this time, if possible

[23:02] <clkao> sure

[23:02] <fglock> thanks :)

[23:02] <clkao> you've got CHANGES /version etc all set?

[23:03] <clkao> you didn't add a failing test for the thing you fixed ;)

[23:03] <jrockway> hmm, is moose using Sub::Multi yet?

[23:03] <jrockway> that would be pretty cool

[23:03] <fglock> looking

[23:03] <clkao> now again

[23:04] <clkao> how the fuck do i generate meta.yml

[23:04] <clkao> why does it all stop working

[23:04] *** diakopter_afk is now known as diakopter

[23:05] <fglock> clkao: sorry, no tests in Sub::Multi; the failing test belongs to v6.pm

[23:05] <jrockway> WriteAll(meta => 1) ?

[23:05] <fglock> http://dev.pugscode.org/changeset/15766

[23:05] <jrockway> then rerun Makefile.PL

[23:05] <clkao> right, i mean there should be unit test in s::m :)

[23:05] <lambdabot> Title: Changeset 15766 - Pugs - Trac

[23:05] <clkao> no worky

[23:12] <clkao> fglock: there you go

[23:12] <svnbot6> r16926 | clkao++ | trunk:

[23:12] <svnbot6> : Sub-Multi 0.003

[23:12] <pugs_svnbot> r16926 | clkao++ | trunk:

[23:12] <pugs_svnbot> : Sub-Multi 0.003

[23:12] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16926

[23:12] <lambdabot> Title: Changeset 16926 - Pugs - Trac

[23:13] *** bonesss joined
[23:14] <fglock> clkao: thank you :)

[23:14] <clkao> fglock: you are comaint now as well

[23:20] *** vel joined
[23:41] <svnbot6> r16927 | fglock++ | trunk:

[23:41] <svnbot6> : [kp6]

[23:41] <svnbot6> : - added 'perl5rx' target:

[23:41] <svnbot6> :   $ perl kp6-perl5.pl --perl5rx < examples/token-test.pl | perl -I lib5regex -I lib

[23:41] <svnbot6> : - same-name captures now correctly capture to array

[23:42] <pugs_svnbot> r16927 | fglock++ | trunk:

[23:42] <pugs_svnbot> : [kp6]

[23:42] <pugs_svnbot> : - added 'perl5rx' target:

[23:42] <pugs_svnbot> :   $ perl kp6-perl5.pl --perl5rx < examples/token-test.pl | perl -I lib5regex -I lib

[23:42] <pugs_svnbot> : - same-name captures now correctly capture to array

[23:42] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/16927

[23:42] <lambdabot> Title: Changeset 16927 - Pugs - Trac

[23:54] *** jameswf joined
[23:56] *** bsb joined
