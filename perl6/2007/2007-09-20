[00:05] *** polettix left
[00:06] *** theorb joined
[00:07] *** devogon left
[00:19] *** theorbtwo left
[00:23] *** weinig left
[00:28] *** Schwern joined
[00:31] *** rfordinal left
[00:35] *** REPLeffect left
[00:36] *** davidfetter joined
[00:36] <davidfetter> hello

[00:37] <davidfetter> i'm packaging parrot RPMs and i'm trying to figure out how to get it to create a perl5 Parrot:: package. anybody have experience with this kind of thing?

[00:38] <Tene> davidfetter: you might have a bit more luck in #parrot on irc.perl.org, if nobody responds here.

[00:38] <Tene> Oh, you're already there.  Nevermind.

[00:39] <davidfetter> heh

[00:39] <davidfetter> great CD, that

[00:40] <Tene> CD?

[00:40] <davidfetter> Nervermind. it's by nirvana :)

[00:40] <davidfetter> Nevermind*

[00:47] *** BinGOs left
[00:47] *** BinGOs joined
[00:56] <Juerd> Big network maintenance tomorrow 0:00 - 4:00 CET

[00:57] <Juerd> feather will be offline a few times.

[00:57] <Juerd> (online intermittently...)

[00:58] *** baest left
[01:01] *** nipotaway is now known as nipotan

[01:03] *** lyokato joined
[01:26] *** felipe left
[01:44] *** BinGOs left
[01:48] *** BinGOs joined
[01:48] *** weinig joined
[02:06] *** vel joined
[02:20] *** felipe joined
[02:24] *** felipe left
[02:24] *** DarkWolf84 left
[02:24] *** hkb_zz left
[02:24] *** thepler left
[02:24] *** Gothmog_ left
[02:24] *** rhizo left
[02:24] *** cerridwen left
[02:24] *** rafl left
[02:24] *** szbalint left
[02:24] *** takanori_ left
[02:24] *** weinig left
[02:24] *** BinGOs left
[02:24] *** cognominal__ left
[02:24] *** ting left
[02:24] *** lisppaste3 left
[02:24] *** fglock_ left
[02:24] *** knewt left
[02:24] *** exp_evalbot left
[02:24] *** rgs left
[02:24] *** Maddingue left
[02:24] *** cj left
[02:25] *** felipe joined
[02:25] *** weinig joined
[02:25] *** BinGOs joined
[02:25] *** DarkWolf84 joined
[02:25] *** cognominal__ joined
[02:25] *** hkb_zz joined
[02:25] *** ting joined
[02:25] *** lisppaste3 joined
[02:25] *** thepler joined
[02:25] *** Gothmog_ joined
[02:25] *** fglock_ joined
[02:25] *** knewt joined
[02:25] *** exp_evalbot joined
[02:25] *** rhizo joined
[02:25] *** rgs joined
[02:25] *** Maddingue joined
[02:25] *** cerridwen joined
[02:25] *** rafl joined
[02:25] *** szbalint joined
[02:25] *** cj joined
[02:25] *** takanori_ joined
[02:33] *** ajelenak joined
[02:34] *** ajelenak left
[02:35] *** weinig left
[02:40] *** vel left
[02:41] *** Schwern left
[02:48] *** araujo joined
[02:55] *** Lunchy left
[03:02] *** jonadab joined
[03:04] *** Schwern joined
[03:04] <Schwern> How does one rollback a change?  svk merge -c1234 //local/project says it did something, but appears to have had no effect.

[03:04] <Schwern> Hey, this isn't #svk!

[03:04] <Schwern> cads!

[03:06] *** jonadab left
[03:12] *** perlmonkey2 joined
[03:12] *** perlmonkey2 left
[03:13] *** vsoni joined
[03:26] *** bsb_ joined
[03:27] *** bsb left
[03:32] *** weinig joined
[03:32] *** weinig left
[03:32] *** weinig joined
[03:37] *** vsoni left
[03:44] *** Schwern left
[03:47] *** Lunchy joined
[03:53] *** penk left
[04:02] *** penk joined
[04:15] *** amnesiac joined
[04:17] *** jhorwitz left
[04:20] *** hkb_zz is now known as hkb_lab

[04:50] *** penk left
[05:03] *** penk joined
[05:30] *** Ashizawa joined
[05:42] *** Ashizawa_ joined
[05:42] *** Ashizawa left
[05:52] *** rfordinal joined
[06:04] *** devogon joined
[06:09] *** liffey joined
[06:11] *** DarkWolf84 left
[06:52] *** ft left
[07:03] *** fglock_ left
[07:04] *** amnesiac left
[07:04] *** iblechbot joined
[07:23] *** riffraff joined
[07:27] *** elmex joined
[07:33] *** Aankhen`` joined
[07:36] *** jisom joined
[07:41] *** franck___ joined
[07:43] *** ting left
[07:43] *** ting joined
[08:03] *** drrho joined
[08:40] *** rgs left
[08:41] *** rgs joined
[08:46] *** dduncan left
[08:52] *** riffraff left
[09:12] *** lyokato left
[09:33] *** riffraff joined
[09:33] *** riffraff left
[09:36] *** fglock joined
[09:37] *** bsb_ left
[09:39] *** lyokato joined
[09:42] <pugs_svnbot> r17966 | Aankhen++ | * added *.fasl to svn:ignore.

[09:42] <pugs_svnbot> r17967 | Aankhen++ | * kp6 Lisp: added package.lisp

[09:42] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17967

[09:42] <lambdabot> Title: Changeset 17967 - Pugs - Trac

[09:44] *** c9s_ left
[09:46] *** rhizo left
[09:48] <pugs_svnbot> r17968 | Aankhen++ | kp6-cl:

[09:48] <pugs_svnbot> r17968 | Aankhen++ | * normalized EOL at EOF.

[09:48] <pugs_svnbot> r17968 | Aankhen++ | * placed all code in KP6-CL package.

[09:48] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17968

[09:48] <lambdabot> Title: Changeset 17968 - Pugs - Trac

[09:54] <pugs_svnbot> r17969 | Aankhen++ | * kp6-cl: eliminate redundancy in Runtime.lisp

[09:54] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17969

[09:54] <lambdabot> Title: Changeset 17969 - Pugs - Trac

[09:55] <Aankhen``> Strange… my changes to EmitLisp.pm don't seem to be taking effect.

[09:58] <avar> did you do `make' ?

[09:59] <Aankhen``> Er, no.

[09:59] <Aankhen``> One sec. :-P

[10:10] <Aankhen``> Boy, it sure takes a while.

[10:16] <Aankhen``> avar: I ran make, now what?

[10:16] *** jisom left
[10:20] <Aankhen``> The changes still don't seem to be having an effect. :-|

[10:27] <Aankhen``> AVAR WAKE UP

[10:28] *** xinming left
[10:28] <avar> uh, I don't know

[10:29] <avar> what did you change

[10:30] *** xinming joined
[10:30] <Aankhen``> Added a line to CompUnit::emit_lisp's output.

[10:31] <avar> don't see it after my svk pull

[10:31] <Aankhen``> I haven't checked it in, wanted to test it.

[10:31] <Aankhen``> One sec.

[10:34] <Aankhen``> Okay, pull now.

[10:34] <pugs_svnbot> r17970 | Aankhen++ | kp6-cl:

[10:34] <pugs_svnbot> r17970 | Aankhen++ | * import CL package.

[10:34] <pugs_svnbot> r17970 | Aankhen++ | * use #: notation in DEFPACKAGE.

[10:34] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17970

[10:34] <lambdabot> Title: Changeset 17970 - Pugs - Trac

[10:37] <avar> why use #: ?

[10:38] <Aankhen``> To avoid interning a bunch of symbols in the KEYWORD package.

[10:38] <Aankhen``> It's not required, just good form.

[10:38] <avar> I don't see anything new in emit_lisp

[10:39] <avar> ah, defpackage

[10:39] <Aankhen``> You ought to see ~ '  (:use #:cl))' ~ Main::newline() at the very least.

[10:39] <avar> $ echo '[ 1, 2 ]' | perl kp6-mp6-perl5.pl --lisp

[10:39] <avar> (defpackage #:Main

[10:39] <avar>   (:use #:cl))

[10:39] <avar> (in-package #:Main)

[10:39] <avar> works here

[10:39] <Aankhen``> Then why not for me? :-S

[10:40] <avar> ;; Compiling file /var/src/pugs/v6/v6-KindaPerl6/lib/KindaPerl6/Runtime/Lisp/Array.lisp ...

[10:40] <avar> WARNING: Cannot redefine #<BUILT-IN-CLASS ARRAY> with a different metaclass #<STANDARD-CLASS STANDARD-CLASS>

[10:40] <avar> *** - (SETF FIND-CLASS): cannot redefine built-in class #<BUILT-IN-CLASS ARRAY>

[10:40] <Aankhen``> I'm trying the exact same code as you, but it gives the same output as before.

[10:40] <Aankhen``> Yup.

[10:41] <Aankhen``> The code defines some classes with the same names as builtin classes.

[10:41] <avar> yes you're not regenerating for some reason

[10:41] <Aankhen``> Yeah.

[10:41] <avar> what system is this?

[10:41] <avar> what version of make?

[10:41] <Aankhen``> 3.81

[10:42] <pugs_svnbot> r17971 | avar++ |  r63583@t:  avar | 2007-09-20 10:41:03 +0000

[10:42] <pugs_svnbot> r17971 | avar++ |  generated files with EmitLisp.pm changes

[10:42] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17971

[10:42] <lambdabot> Title: Changeset 17971 - Pugs - Trac

[10:42] <Aankhen``> I'm going to try running `make` again.

[10:42] <Aankhen``> After that I'll start mangling the class names.

[10:42] <Aankhen``> Actually, I can do that while it's building, since it takes so long.

[10:44] <Aankhen``> Oh, now it works.

[10:44] <Aankhen``> And it only compiled EmitLisp.pm this time.

[10:48] <pugs_svnbot> r17972 | Aankhen++ | * kp6-cl: name mangling to prevent conflicts with builtin classes.

[10:48] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17972

[10:48] <lambdabot> Title: Changeset 17972 - Pugs - Trac

[10:49] <avar> you also have to change the emitter

[10:50] <Aankhen``> Indeed. :-)

[10:50] <pugs_svnbot> r17973 | Aankhen++ | * kp6-cl: name mangling in EmitLisp.pm too.

[10:50] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17973

[10:50] <lambdabot> Title: Changeset 17973 - Pugs - Trac

[10:51] <avar> forgot 'make' :)

[10:53] <pugs_svnbot> r17974 | Aankhen++ | * kp6-cl: missed a couple names to mangle.

[10:53] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17974

[10:53] <lambdabot> Title: Changeset 17974 - Pugs - Trac

[10:53] <Aankhen``> Bleh, missed another one too.

[10:53] <pugs_svnbot> r17975 | Aankhen++ | * kp6-cl: regenerated files with EmitLisp.pm changes.

[10:53] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17975

[10:53] <lambdabot> Title: Changeset 17975 - Pugs - Trac

[10:57] <Aankhen``> Back in a few, lunch. :-)

[11:07] *** lyokato left
[11:14] <avar> echo 'say { foo => "bar" }' | perl kp6-mp6-perl5.pl --lisp | perl -pe 's/apply \$global::code_/apply kp6-cl::/i'|cli\

[11:14] <avar> sp

[11:17] <pugs_svnbot> r17976 | fglock++ | [kp6-kp6] added some debugging code

[11:17] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17976

[11:17] <lambdabot> Title: Changeset 17976 - Pugs - Trac

[11:21] <Aankhen``> avar: ?

[11:29] *** rindolf joined
[11:29] <avar> Aankhen``: try that

[11:29] <avar> *** - FIND-CLASS: KP6-STR does not name a class

[11:29] <Aankhen``> Yeah, I've added the classes to the export list locally.

[11:29] <avar> :)

[11:29] <Aankhen``> I'm more concerned with the invocant bit though.

[11:29] <Aankhen``> How does the $GLOBAL::code_say get in there?

[11:30] <Aankhen``> Or rather, isn't there any way to just get the name of the routine being called?

[11:30] <Aankhen``> I'm just doing an s/// for now.

[11:31] <Aankhen``> Or perhaps not.  Bleh.

[11:31] <Aankhen``> Trying to use s/// makes it blow up.

[11:31] <fglock> Aankhen``: the routine is a Code object; GLOBAL::Code_say is the name of the variable that contains the Code object

[11:31] <lambdabot> fglock: You have 1 new message. '/msg lambdabot @messages' to read it.

[11:32] <Aankhen``> fglock: Ah.

[11:33] <Aankhen``> How would one mangle that into kp6-cl::say?

[11:34] <fglock> can you use namespaces? GLOBAL is required, if possible

[11:35] <Aankhen``> kp6-cl is the namespace in kp6-cl::say, natch.  I could change it to GLOBAL::say if you'd prefer, though.

[11:36] <fglock> how about kp6::GLOBAL::say

[11:36] <fglock> or kp6-GLOBAL::say

[11:36] <Aankhen``> The latter seems good to me.

[11:37] <avar> CL has no concept of sub-namespaces right?

[11:37] <Aankhen``> avar: Right.

[11:37] <Aankhen``> You could have a module named kp6::GLOBAL.

[11:37] <Aankhen``> But that would be the entire name, not a hierarchy.

[11:37] <pugs_svnbot> r17977 | Aankhen++ | kp6-cl:

[11:37] <pugs_svnbot> r17977 | Aankhen++ | * export types.

[11:37] <pugs_svnbot> r17977 | Aankhen++ | * don't use for-side-effects loop in SAY.

[11:37] <pugs_svnbot> r17977 | Aankhen++ | * load runtime before other code.

[11:37] <pugs_svnbot> r17977 | Aankhen++ | * regenerated EmitLisp.pm files.

[11:37] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17977

[11:37] <lambdabot> Title: Changeset 17977 - Pugs - Trac

[11:38] <fglock> Aankhen``: i'll change it

[11:38] <Aankhen``> Kewl.

[11:38] *** buetow joined
[11:39] *** drrho left
[11:41] <fglock> how about kp6-GLOBAL::kp6-say, such that both the namespace and the variable name are mangled?

[11:42] <Aankhen``> Sure.

[11:42] <Aankhen``> The AST needs the variable name to be mangled?

[11:46] *** drrho joined
[11:46] <fglock> no, just at the emitter (almost done)

[11:47] <Aankhen``> Ah.

[11:49] <pugs_svnbot> r17978 | fglock++ | [kp6-lisp] &GLOBAL::say mangled to kp6-GLOBAL::kp6-Code_say

[11:49] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17978

[11:50] <lambdabot> Title: Changeset 17978 - Pugs - Trac

[11:54] *** Ashizawa_ left
[11:57] <avar> ;; Compiling file /var/src/pugs/v6/v6-KindaPerl6/lib/KindaPerl6/Runtime/Lisp/GLOBAL.lisp ...

[11:57] <avar> *** - SYSTEM::%FIND-PACKAGE: There is no package with name "KP6-GLOBAL"

[11:57] <avar> hrm, wtf

[11:58] <fglock> GLOBAL.lisp declares itself as #:kp6-cl

[12:00] <Aankhen``> I'm working on it. :-)

[12:00] <Aankhen``> Should a KP6-UNDEF class go in Undef.lisp?

[12:00] <Aankhen``> Or is there a better place for it?

[12:01] *** Schwern joined
[12:02] <pugs_svnbot> r17979 | fglock++ | [kp6-lisp] declare package name in GLOBAL

[12:02] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17979

[12:02] <lambdabot> Title: Changeset 17979 - Pugs - Trac

[12:02] <fglock> Aankhen``: i think so

[12:03] *** vel joined
[12:03] <pugs_svnbot> r17980 | Aankhen++ | * kp6-cl: added Undef.lisp

[12:03] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17980

[12:03] <lambdabot> Title: Changeset 17980 - Pugs - Trac

[12:05] <avar> ;;  Loading file /var/src/pugs/v6/v6-KindaPerl6/lib/KindaPerl6/Runtime/Lisp/GLOBAL.fas ...

[12:05] <avar> *** - FIND-CLASS: KP6-CODE does not name a class

[12:05] <avar> is that an issue with it being in #:kp6-cl ?

[12:05] * avar can't use sbcl ;/

[12:06] *** vel left
[12:11] *** qewer4 joined
[12:12] <qewer4> hi,  i use Wordpress 2.2.2 Classic Theme 1.5. is it possible to show the treatment-field seperated on a site?

[12:13] <avar> you're in the wrong channel

[12:14] <qewer4> ive also tried it in #wordpress but its deserted

[12:15] <avar> You should probably try their mailing list instead of joining random unrelated channels asking about wordpress

[12:15] <Aankhen``> What makes you think anyone here will be able to help you? :-S

[12:18] <qewer4> so can you help me?

[12:20] <qewer4> avar: are you avatar?

[12:21] <avar> qewer4: no

[12:22] *** qewer4 left
[12:22] *** cmarcelo joined
[12:24] <moritz_> re

[12:26] *** rindolf left
[12:27] *** ruoso joined
[12:31] *** nipotan is now known as nipotaway

[12:50] *** hoelzro joined
[12:52] <hoelzro> I have a quick question about the ..., ???, and !!! operators in Pugs.  I don't mean to sound ungrateful or anything, but I was just wondering why these haven't been implemented yet.  It seems like they'd be pretty easy to implement.  Are they just not a high priority?

[12:53] <moritz_> hoelzro: there could be many reasons, one of them priority

[12:53] <moritz_> hoelzro: other possible reasons are "no test case", or "too new in the specs"

[12:54] <hoelzro> I wasn't aware the feature was that new, but then again, I've only been reading about Perl 6 for a few weeks now =P

[12:55] <moritz_> hoelzro: I don't know if "too new" applies here, it's just a general guess

[12:55] <hoelzro> oh ok

[12:56] <moritz_> hoelzro: btw do you have a commit bit?

[12:57] <hoelzro> no,  but I'd like one;  I'd like to try my hand at implementing those operators and the test cases for them

[12:57] <hoelzro> I figure those three operators would be a good starting point

[12:57] *** xinming left
[12:57] <moritz_> hoelzro: very good idea

[12:58] <moritz_> sadly I don't have my password around, so we need to wait for somebody else ;)

[12:58] <moritz_> fglock, diakopter, Juerd: are you around? hoelzro wants a commit bit ;)

[12:59] <ruoso> hoelzro, are you meaning "??" and "!!"

[12:59] <ruoso> the ternary if?

[12:59] <hoelzro> no, the yada-yada operator and friends

[12:59] <hoelzro> the ones that call fail, die, and warn

[12:59] <ruoso> ah... ok

[13:00] <moritz_> ruoso: do you take the honor of inviting hoelzro? I don't have my password at hand ;)

[13:00] <ruoso> moritz_, and I don't remember the url ;)

[13:01] <moritz_> ruoso: http://commitbit.pugscode.org/ # I hope ;)

[13:01] <lambdabot> Title: Welcome to CommitBit for PugsCode

[13:01] <ruoso> hoelzro, what's your email addr?

[13:01] <hoelzro> [email@hidden.address]
[13:01] <ruoso> moritz_, hoelzro, oops... I can't invite...

[13:02] <ruoso> ahmmm

[13:02] <ruoso> I think I can

[13:02] <ruoso> I was just lost in commitbit interface

[13:02] <moritz_> ok ;)

[13:03] <ruoso> done

[13:03] <moritz_> ruoso++

[13:03] <hoelzro> thanks much

[13:05] <moritz_> hoelzro: did you read Pugs::Doc::Hack in docs/?

[13:05] <hoelzro> not yet

[13:06] <avar> hoelzro: ??? !!! aren't implemented because pugs (the hs implementation) is pretty much abandonware

[13:07] <moritz_> hoelzro: don't listen to avar ;)

[13:08] <avar> the "na na na na na na" method?:)

[13:08] <moritz_> yes ;)

[13:08] <moritz_> avar: or what do you mean by "abandonware"? that it will finally be replaced by a 6-on-6 implementation and doesn't need much sugar?

[13:09] <avar> Development of pugs pretty much dropped to a standstill when audrey wasn't active anymore

[13:10] <avar> at least I haven't seen any substancial .hs commits since early this year

[13:10] <moritz_> avar: that's why we need to encourage people to work on it ;)

[13:11] <avar> Yes by all means work on it, I'm just offering an IMO more realistic explanation for why that and a bunch of other stuff isn't implemented

[13:11] <moritz_> avar: ok ;)

[13:12] <moritz_> I think it still makes sense to work on everything but the object model

[13:12] <hoelzro> so there hasn't been much work on the Haskell portion of pugs?

[13:13] <moritz_> hoelzro: right

[13:13] <hoelzro> is that because not enough devs know Haskell?

[13:14] <moritz_> hoelzro: yes, mostly

[13:14] <hoelzro> more work for me then =P

[13:14] <moritz_> hoelzro: audreyt has been seriously sick, and didn't commit very much since then

[13:14] <avar> sick + doing other stuff

[13:14] <avar> syck?:)

[13:14] <moritz_> yes

[13:15] <ruoso> fglock, we need to hunt doewn the bind/assign problem

[13:15] <ruoso> I just got another accidental circular reference

[13:15] <ruoso> which makes a deep recursion that eats the memory in 10 seconds

[13:17] <moritz_> hoelzro: btw it is a cutom to add your name to AUTHORS in the first commit, to test the commit bit

[13:17] <ruoso> hoelzro, and you can always check your karma ;)

[13:17] <ruoso> (is karma alive?)

[13:18] <moritz_> @karma ruoso 

[13:18] <lambdabot> ruoso has a karma of 96

[13:18] <moritz_> @karma moritz

[13:18] <lambdabot> moritz has a karma of 106

[13:19] <hoelzro> karma?

[13:20] <moritz_> it's really just a programmer's jok

[13:20] <moritz_> s/jok/joke/

[13:20] <avar> @karma avar

[13:20] <lambdabot> You have a karma of 46

[13:20] <moritz_> when somebody writes hoelzro++, your karma is increased by one

[13:20] <avar> I GROW STRONGER

[13:20] <hoelzro> oh

[13:21] <hoelzro> I assume it won't work if I do it?  =D

[13:21] <moritz_> avar: but compared to ruoso and me you still suck ;) SCNR

[13:21] <moritz_> hoelzro: right

[13:21] <avar> moritz_: I challange you to unicycle jousting

[13:21] <ruoso> hoelzro, it'll probably decrease

[13:21] <hoelzro> haha

[13:21] <pugs_svnbot> r17981 | ruoso++ | [kp6] preventing circular references in Visitor/Token.pm

[13:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17981

[13:21] <lambdabot> Title: Changeset 17981 - Pugs - Trac

[13:21] <moritz_> hoelzro: and when you commit something to the svn repo, pugs_svnbot will automatically increase your karma ;)

[13:22] <avar> the longer the log message the more KARMA

[13:22] <ruoso> avar, hehe... I've never realised that

[13:22] * ruoso will start to write longer messages

[13:22] <ruoso> haeheh

[13:22] <avar> start using svk too, implicit karma

[13:22] <ruoso> one char by lien

[13:22] <ruoso> s/lien/line/

[13:23] <hoelzro> so should I make a commit with just my change to AUTHORS then?  or should I do actual work, then commit?

[13:24] <avar> hoelzro: We have a very strict commit rule: there are none:)

[13:24] <avar> but commit frequently after each logical change:)

[13:24] <hoelzro> I'm a fan of committing often =D

[13:24] <avar> *and after

[13:24] <moritz_> hoelzro: that's good

[13:24] <hoelzro> which is something my co-workers don't really practice...

[13:25] <hoelzro> but they're using VSS, so can you blame them?

[13:25] *** jasonmay joined
[13:26] <moritz_> wtf is VSS?

[13:26] <hoelzro> visual sourcesafe?

[13:26] <hoelzro> be happy you never heard of it

[13:26] <moritz_> ok, I am ;)

[13:26] <hoelzro> it's Microsoft's RCS

[13:26] <hoelzro> and it's TERRIBLE

[13:26] <avar> it's more crappy than that, amazingly

[13:26] <moritz_> is it meant for Word files? ;-)

[13:27] <hoelzro> no, plain text

[13:31] <hoelzro> but that doesn't stop us from using it for .docs...

[13:32] *** TJCRI joined
[13:32] <allbery_b> ah, visual sourcesafe, the source motel

[13:32] <hoelzro> what a great analogy!

[13:40] *** Blwood joined
[13:41] <ruoso> fglock, found the problem in the !before token

[13:41] <ruoso> it was returning $MATCH, instead of $MATCH.bool

[13:41] <ruoso> hmm

[13:41] <ruoso> Match.true should return Match.bool.true

[13:41] <ruoso> hmm

[13:41] <ruoso> interesting

[13:42] <ruoso> it wasn't ;)

[13:42] <ruoso> the bool object always evaluate as true...

[13:42] <ruoso> hmm

[13:42] <ruoso> there are some things weird in this object system

[13:43] <moritz_> kp6: say (3!=3)

[13:43] <exp_evalbot> r17981: OUTPUT[␤]

[13:43] <moritz_> kp6: say (3==3)

[13:43] <exp_evalbot> r17981: OUTPUT[1␤]

[13:44] <ruoso> kp6: class MyClass { has $.bool; method true { return $.bool } }; my $a = MyClass.new(); $a.bool = 1; if ($a) { "ok "} else { "not ok" }

[13:44] <exp_evalbot> r17981: OUTPUT[syntax error at position 0, line 1 column 0:␤( ( do { class MyClass { has $.bool; method true { return $.bool } }; my $a = MyClass.new(); $a.bool = 1; if ($a) { "ok "} else { "not ok" } } ).perl ).sa␤^ HERE␤]

[13:44] <ruoso> kp6: class MyClass { has $.bool; method true { return $.bool } }; my $a = MyClass.new(); $a.bool = 1; if ($a) { "ok "} else { "not ok" };

[13:44] <exp_evalbot> r17981: OUTPUT[syntax error at position 0, line 1 column 0:␤( ( do { class MyClass { has $.bool; method true { return $.bool } }; my $a = MyClass.new(); $a.bool = 1; if ($a) { "ok "} else { "not ok" }; } ).perl ).sa␤^ HERE␤]

[13:44] <ruoso> kp6: class MyClass { has $.bool; method true { return $.bool } }; module Main { my $a = MyClass.new(); $a.bool = 1; if ($a) { "ok "} else { "not ok" } };

[13:44] <exp_evalbot> r17981: OUTPUT[syntax error at position 0, line 1 column 0:␤( ( do { class MyClass { has $.bool; method true { return $.bool } }; module Main { my $a = MyClass.new(); $a.bool = 1; if ($a) { "ok "} else { "not ok" } }; } ).perl ).sa␤^ HERE␤]

[13:44] <ruoso> hrm

[13:45] <ruoso> kp6: class MyClass { has $.bool; method true { return $.bool } }; module Main { my $a := MyClass.new(); $a.bool = 1; if ($a) { "ok "} else { "not ok" } };

[13:45] <exp_evalbot> r17981: OUTPUT[syntax error at position 0, line 1 column 0:␤( ( do { class MyClass { has $.bool; method true { return $.bool } }; module Main { my $a := MyClass.new(); $a.bool = 1; if ($a) { "ok "} else { "not ok" } }; } ).perl ).sa␤^ HERE␤]

[13:45] <ruoso> kp6: class MyClass { has $.bool; method true { return $.bool } }; module Main { my $a := MyClass.new(); $a.bool = 0; if ($a) { say "ok "} else { say "not ok" } };

[13:45] <exp_evalbot> r17981: OUTPUT[not ok␤]

[13:46] <ruoso> kp6: class MyClass { has $.bool; method true { return $.bool } }; module Main { my $a := MyClass.new(); $a.bool = 1; if ($a) { say "ok "} else { say "not ok" } };

[13:46] <exp_evalbot> r17981: OUTPUT[ok ␤]

[13:46] <ruoso> hmmm

[13:51] <fglock> ruoso: i think .bool should just be renamed to .true

[13:54] <ruoso> fglock, the problem is that the context is not propagated

[13:55] <ruoso> kp6: class MyClass { has $.bool; method true { return $.bool } }; module Main { my $a := MyClass.new(); $a.bool = MyClass.new(); $a.bool.bool = 0; if ($a) { say "ok "} else { say "not ok" } };

[13:55] <exp_evalbot> r17981: OUTPUT[syntax error at position 73, line 1 column 73:␤class MyClass { has $.bool; method true { return $.bool } }; module Main { my $a := MyClass.new(); $a.bool = MyClass.new(); $a.bool.bool = 0; if ($a) { say "ok "} else { say "not ok" } }␤                                                  

[13:55] <exp_evalbot> ..                      ^ HERE␤DISPATCH: calling APPLY on invali...]

[13:55] <ruoso> kp6: class MyClass { has $.bool; method true { return $.bool } }; module Main { my $a := MyClass.new(); $a.bool = MyClass.new(); ($a.bool).bool = 0; if ($a) { say "ok "} else { say "not ok" } };

[13:55] <exp_evalbot> r17981: OUTPUT[no method 'p5landish' in Class 'MyClass'␤]

[14:00] <pugs_svnbot> r17982 | ruoso++ | [kp6] problem with !before solved. It was returning a MATCH object to the bool value...

[14:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17982

[14:00] <lambdabot> Title: Changeset 17982 - Pugs - Trac

[14:06] *** xinming joined
[14:09] *** hkb_lab is now known as hkb_aw

[14:09] <pugs_svnbot> r17983 | fglock++ | [kp6-lisp] GLOBAL loads ok

[14:09] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17983

[14:09] <lambdabot> Title: Changeset 17983 - Pugs - Trac

[14:18] <pugs_svnbot> r17984 | fglock++ | [kp6-lisp] export method names ???

[14:18] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17984

[14:18] <lambdabot> Title: Changeset 17984 - Pugs - Trac

[14:18] *** f0rth_ left
[14:19] *** cmarcelo left
[14:21] *** f0rth joined
[14:22] <fglock> hmm - Lisp (or me) is confusing the namespaces: "The class #<STANDARD-CLASS KP6-STR> has no slot named KP6-GLOBAL::VALUE"

[14:23] <fglock> the accessor is getting a namespace...

[14:24] *** amnesiac joined
[14:25] *** ak__ left
[14:26] <avar> rest assured that we're screwing things up:)

[14:26] <avar> packages are apperently a reader-type thing not an eval thingy, see the pdf I gave you

[14:27] <Aankhen``> fglock: Where is the namespace in that?

[14:28] <Aankhen``> fglock: KP6-GLOBAL::VALUE is this symbol read in the KP6-GLOBAL package: 'value

[14:28] <allbery_b> @remember avar rest assured that we're screwing things up:)

[14:28] <lambdabot> Done.

[14:28] * ruoso wonders if it wouldn't be a better idea to implement the namespace management above lisp, instead of using it...

[14:28] <avar> true

[14:29] <avar> well, maybe not. I don't know how all this stuff works. Maybe it's needed for classes..

[14:29] *** cmarcelo joined
[14:29] <fglock> no, classes are anonymous things

[14:29] <pugs_svnbot> r17985 | fglock++ | [kp6-lisp] a "hello" program for debugging

[14:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17985

[14:29] <lambdabot> Title: Changeset 17985 - Pugs - Trac

[14:30] <Aankhen``> You can implement a lot of Perl 6 by simply using Lisp features, but I do think it might be a better idea to implement namespaces separately.

[14:30] <Aankhen``> The Lisp package model is quite different from the Perl 6 package model.

[14:30] <ruoso> Aankhen``, and that's a path already made in mp6

[14:30] <moritz_> are lisp lists lazy?

[14:30] <ruoso> which proved non-viable for a more complete implementation

[14:30] <fglock> Aankhen``: using a hash?

[14:30] <avar> moritz_: no

[14:31] <avar> But yes, lisp packages are purely a reader-level thing for your convenience. You don't really need that when doing emitting

[14:31] <avar> We probably want to use it in the compiler runtime itself though..

[14:32] <ruoso> avar, the compiler runtime must be the normal runtime

[14:32] <ruoso> remember about "eval"

[14:33] *** kyrbe joined
[14:33] <pugs_svnbot> r17986 | Aankhen++ | * moved (DEFPACKAGE :KP6-GLOBAL ...) into package.lisp.

[14:33] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17986

[14:33] <lambdabot> Title: Changeset 17986 - Pugs - Trac

[14:33] <fglock> i committed http://svn.pugscode.org/pugs/v6/v6-KindaPerl6/examples/hello.lisp for debugging the runtime; the compiler can be fixed when it works

[14:34] *** kyrbe left
[14:34] <Aankhen``> fglock: Yeah, using hashes.

[14:35] <Aankhen``> fglock: Might I prevail upon you to use lowercase symbols? :-)

[14:36] <avar> and a sane indenting style?:)

[14:36] <Aankhen``> Heh.

[14:37] <Aankhen``> All I want is lowercase symbols.

[14:37] <Aankhen``> Proper indentation only comes through a decent editor.

[14:37] <moritz_> .oO(lisptidy?)

[14:37] <Aankhen``> LOL.

[14:38] *** pmurias joined
[14:38] <avar> lisptidy is just (read) and (print) in your implementation

[14:38] <pmurias> ?eval '...'

[14:38] <fglock> Aankhen``: sure

[14:39] <pmurias> pugs: ...

[14:39] <lambdabot> pmurias: You have 1 new message. '/msg lambdabot @messages' to read it.

[14:39] <exp_evalbot> OUTPUT[*** Cannot use this control structure outside a 'routine' structure␤    at /tmp/ZiKWD7CxGj line 1, column 1 - line 2, column 1␤]

[14:39] <Aankhen``> fglock: One question, probably due to my lack of understanding of kp6. Since you're mangling the names for Lisp, is it necessary to use a name like kp6-Code_say instead of kp6-code-say?

[14:39] <avar> Aankhen``: no, either way works

[14:39] <avar> does _ screw things up?

[14:39] <avar> the names aren't being mangled .. yet

[14:39] <Aankhen``> avar: No, it's just aesthetic. :-)

[14:40] <Aankhen``> Eh, anything that goes from foo to bar-foo_baz is mangling as far as I'm concerned.

[14:40] <Aankhen``> I guess my terminology is incorrect.

[14:40] <avar> they'll be mangled more:)

[14:40] <Aankhen``> Like how?

[14:40] <fglock> not fully mangling yet, it doesn't do lowercase/uppercase yet

[14:41] <Aankhen``> I see.

[14:41] <avar> sh-3.1$ perl -wle 'print "(defun kp6-", join q[-], map { ord } split //, shift' 'infix:<~>'

[14:41] <avar> (defun kp6-105-110-102-105-120-58-60-126-62

[14:41] <avar> something like that

[14:41] <Aankhen``> Oh.

[14:42] <ruoso> fglock, wouldn't it be a good idea to implement namespaces and pads in upper level, since there's anoter backend being developed?

[14:42] <moritz_> I hope nobody tries to read that code ;)

[14:42] <fglock> ruoso: makes sense

[14:42] <avar> moritz_: there'll be a comment giving the real name:)

[14:43] <Aankhen``> moritz_: LOL.

[14:43] <avar> but yeah, don't expect emitted code to be readable

[14:43] <avar> ruoso: definetely

[14:43] <Aankhen``> Is this correct?  `grammar` ISA `class` ISA `module` ISA `package`

[14:44] <ruoso> Aankhen``, I don't think so

[14:44] <ruoso> classes can be outside packages

[14:44] <ruoso> like anon-classes

[14:44] <Aankhen``> But aren't they anonymous packages then?

[14:44] <ruoso> no... the would be inside someone's else package

[14:44] <avar> packages are a different thing from classes alltogether

[14:44] <Aankhen``> Ah.

[14:44] <fglock> ruoso: this will be a big change, expect some problems...

[14:45] <ruoso> :) 

[14:45] <fglock> ruoso: maybe i should work on it in a branch

[14:45] <ruoso> nah...

[14:45] <ruoso> better break everythih

[14:45] <ruoso> so more people try to fix it

[14:45] <ruoso> ;)

[14:46] <avar> ruoso++

[14:50] <pmurias> avar: there is no point in mangling \w

[14:52] <ruoso> I think there's a exponential graphic of performance from faster to slower: mp6 -> kp6-mp6 -> kp6-kp6... where kp6-kp6 is in the very low end of the curve

[14:52] <ruoso> it takes years to parse say "Hello!"

[14:53] <ruoso> user    0m5.588s

[14:53] <ruoso> time echo -n 'say "Hello!"' | perl -Ilib-kp6-kp6-p5 kp6-kp6.pl

[14:53] <ruoso> gah

[14:54] <moritz_> so kp6-kp6 _can_ parse 'say "Hello"'?

[14:54] <ruoso> moritz_, almost

[14:54] <ruoso> it's failing with no method 'p5landish' in Class 'Match'

[14:54] <ruoso> but already at the end of the match

[14:54] <pmurias> that's not good

[14:54] <ruoso> which means some token is setting the bool of its parent match with the match itself

[14:55] <ruoso> instead of a literal value

[14:55] <ruoso> (the ones which implement p5landish)

[14:55] <ruoso> that's because kp6 doesn't propagate the context 

[14:55] <ruoso> kp6: class MyClass { has $.bool; method true { return $.bool } }; module Main { my $a := MyClass.new(); $a.bool = MyClass.new(); ($a.bool).bool = 0; if ($a) { say "ok "} else { say "not ok" } };

[14:55] <exp_evalbot> r17986: OUTPUT[no method 'p5landish' in Class 'MyClass'␤]

[14:55] <ruoso> pmurias, this is the code to reproduce it

[14:56] <pmurias> kp6: class MyClass { has $.bool; method true { return $.bool } }; module Main { my $a := MyClass.new(); $a.bool = MyClass.new(); ($a.bool).bool = 0; if ($a) { say "ok "} else { say "not ok" } };kp6: class MyClass { has $.bool; method true { return $.bool } }; module Main { my $a := MyClass.new(); $a.bool = MyClass.new(); ($a.bool).bool = 0; if ($a) { say "ok "} else { say "not ok" } };

[14:56] <exp_evalbot> r17986: OUTPUT[syntax error at position 192, line 1 column 192:␤class MyClass { has $.bool; method true { return $.bool } }; module Main { my $a := MyClass.new(); $a.bool = MyClass.new(); ($a.bool).bool = 0; if ($a) { say "ok "} else { say "not ok" } };kp6: class MyClass { has $.bool; method true {

[14:56] <exp_evalbot> ..return $.bool } }; module Main { my $a := MyClass.new(); $a.bo...]

[14:56] <pmurias> argh

[14:57] <pmurias> ruoso: i see

[14:57] <pugs_svnbot> r17987 | Aankhen++ | * added KP6-VALUE accessor to all classes that had a VALUE slot.

[14:57] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17987

[14:57] <lambdabot> Title: Changeset 17987 - Pugs - Trac

[14:58] <Aankhen``> Should all those classes be inheriting from some sort of base type?

[14:58] <ruoso> they do

[14:58] <ruoso> but p5landish only makes sense to classes that *can* be mapped to p5 values

[14:58] <ruoso> like, int, bool, str

[14:58] <ruoso> like: int, bool, str

[14:59] <Aankhen``> Er, I'm talking about the CL backend.

[14:59] <ruoso> ah

[14:59] <ruoso> ok

[14:59] <Aankhen``> D'oh, bad commit message.

[14:59] <Aankhen``> Is "backend" even the right word?

[14:59] <pmurias> fglock used [kp6-lisp] in his commit messages

[15:00] <pmurias> backend is the right word if you mean the lisp backend

[15:00] <Aankhen``> Yeh.

[15:00] <Aankhen``> I've been using kp6-cl, guess I'll switch to kp6-lisp.

[15:01] <fglock> Aankhen``: re base class, i think CLOS takes care of that

[15:01] <Aankhen``> fglock: Whatcha mean?

[15:01] <ruoso> are you planning to use CLOS as-is and not implement a MOP on top of it?

[15:01] <fglock> the base class is a lisp class, right?

[15:02] <fglock> ruoso: yes, at least for the prototype impl

[15:02] <Aankhen``> fglock: Not following you. Which base class?

[15:02] <Aankhen``> We have a bunch of classes, kp6-int, kp6-str, etc.

[15:02] <Aankhen``> They don't share any superclass.

[15:02] <fglock> Aankhen``: kp6-object

[15:02] <ruoso> every kp6-lisp object would be a lisp object

[15:02] <Aankhen``> Okay, so that ought to be added to the list of ancestors.

[15:02] *** ixolit joined
[15:02] <pugs_svnbot> r17988 | ruoso++ | [kp6] 'no method' confess instead of dies... \n[kp6] kp6-token-debug shows a letter hint for the level, and detects closure exits...

[15:02] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17988

[15:02] <lambdabot> Title: Changeset 17988 - Pugs - Trac

[15:02] <Aankhen``> Which is what I was asking about. :-)

[15:03] <ruoso> but I still think that's not a nice path to follow...

[15:03] *** ixolit left
[15:03] <ruoso> you'll probably not be able to implement all p6 semantics directly on CLOS

[15:03] <Aankhen``> ruoso: Such as?

[15:03] <fglock> ruoso: it's still an experiment

[15:04] <Aankhen``> ruoso: Hmm, actually, you're right.

[15:04] <ruoso> Aankhen``, I don't know CLOS enough... but it's just a feeling..

[15:04] <pmurias> ruoso: are you still looking for the token which sets .bool to Match?

[15:04] <ruoso> yep... and I don't have any clue

[15:05] <pmurias> i'll try

[15:05] <ruoso> I changed the die to confess when the method is not found

[15:05] <Aankhen``> fglock: There's a comment in Str.lisp saying "TODO: subclass Value". Is Value == kp6-object?

[15:05] <ruoso> pmurias, and there's a call to "join" in the stack trace

[15:06] <avar> http://u.nix.is/cl-class.png

[15:06] * avar experiments

[15:06] <fglock> Aankhen``: it's  Object -> Value -> Str/Int/Num/Code, and Object -> Container -> Scalar/Hash/Array

[15:07] <Aankhen``> fglock: Ah.

[15:07] <pmurias> ruoso: adding debuging statements in the code generated in Visitor/Token.pm might be a good idea

[15:07] <ruoso> there are some already

[15:07] <ruoso> try running with the KP6_TOKEN_DEBUGGER env var set to 1

[15:08] <pmurias> seen it

[15:08] <buubot> pmurias: Sorry, I haven't seen it

[15:08] <pmurias> ruoso: i mean adding check if bool was just set to Match

[15:08] <pmurias> and printing the rule ast/code if it was

[15:09] <ruoso> pmurias, following the stack trace

[15:09] <ruoso> it's not in the bool

[15:09] <ruoso> it's in the join impl

[15:09] <avar> Aankhen``: Check out my leet subclassing

[15:09] <ruoso> Array.pm 104

[15:09] <avar> fglock: What's the best reference for the methods those should contain? I'm planning on writing a bunch of lisp objects that do what they do

[15:10] <avar> Which'll be fast and will make the emitter a lot easier later on when FETCH and such can just be method calls

[15:10] <Aankhen``> avar: Wait, you just added subclasses?

[15:11] <Aankhen``> I did too. :-P

[15:11] <fglock> avar: not fully specified, but the Perl 5 version has what kp6 needs (Runtime/Perl5/*)

[15:11] <avar> I'm working on different code, it'll be pure-cl for a while

[15:11] <avar> I'm mainly teaching myself lisp by implementing cl-perl6 :)

[15:11] <Aankhen``> percl6!

[15:12] <fglock> the methods in Runtime/Perl6/* should be reusable, so you shouldn't need lisp versions

[15:12] <Aankhen``> avar: Did you fix up the class hierarchy?  If so, you should commit it so I don't conflict… :-)

[15:12] <avar> I'm not working on /Lisp/, feel free to commit

[15:12] <Aankhen``> Oh.

[15:12] <Aankhen``> Sorry, I misunderstood.

[15:12] <avar> fglock: It'll be in /Lisp/ eventually:)

[15:14] <pugs_svnbot> r17989 | Aankhen++ | [kp6-lisp]

[15:14] <pugs_svnbot> r17989 | Aankhen++ | * added kp6-object, kp6-value, kp6-num and kp6-container classes.

[15:14] <pugs_svnbot> r17989 | Aankhen++ | * set up inheritance hierarchy between classes.

[15:14] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17989

[15:15] <lambdabot> Title: Changeset 17989 - Pugs - Trac

[15:15] *** penk left
[15:16] <avar> Everything.isa(Object) in p6 right?

[15:16] <ruoso> pmurias, found

[15:17] <moritz_> avar: I don't think that Junction.isa(Object)

[15:17] <moritz_> but I could be wrong

[15:17] <ruoso> moritz_, everything.isa(Object)

[15:18] <pugs_svnbot> r17990 | ruoso++ | [kp6] return match.result.str in str, instead of just match.result

[15:18] <pugs_svnbot> r17991 | fglock++ | [kp6] KindaPerl6::Visitor::Namespace stub 

[15:18] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17991

[15:18] <lambdabot> Title: Changeset 17991 - Pugs - Trac

[15:18] <fglock> Junction is a bit special, but not much

[15:19] <fglock> just like containers are a bit different from normal objects

[15:20] <fglock> and Code, and lazy lists, and...

[15:21] <TimToady> ?eval Junction ~~ Object

[15:21] <pugs_svnbot> r17992 | ruoso++ | [kp6] do not call pad declaration in the compiler yet

[15:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17992

[15:21] <lambdabot> Title: Changeset 17992 - Pugs - Trac

[15:22] <ruoso> WOooooooooooHoooooooooo: Now it's official... ;)  kp6-kp6 can parse: say "Hello!"

[15:22] <pmurias> wow ;)

[15:22] <fglock> ruoso++

[15:22] <pmurias> ruoso++

[15:22] <ruoso> the return is still not the expected

[15:22] <ruoso> but it finishes

[15:22] <TimToady> say ruoso++ for 1..*

[15:23] <moritz_> ruoso += *

[15:23] <ruoso> echo -n 'say "Hello!"' | ./kp6-token-debug

[15:23] <buubot> ruoso: -n 'say "Hello!"'

[15:23] <TimToady> pugs: Junction ~~ Object

[15:23] <exp_evalbot> OUTPUT[Bool::True␤]

[15:23] <TimToady> pugs: Junction ~~ Any

[15:23] <exp_evalbot> OUTPUT[Bool::False␤]

[15:23] <moritz_> ok

[15:24] <TimToady> and function parameters default to Any, not Object

[15:24] *** Shillo joined
[15:25] <Shillo> Hullo, all

[15:25] <pmurias> Shillo: hi

[15:25] <moritz_> hi Shillo ;)

[15:28] <avar> So everything is anything in perl6?:)

[15:28] <TimToady> junctions aren't anything; they're just objects

[15:29] <TimToady> everything that has been observed is anything, I suppose :)

[15:30] <TimToady> at least in the Copenhagen interpretation

[15:30] <moritz_> is there an up to date inheritance graph somewhere?

[15:31] *** hkb_aw is now known as hakobe

[15:34] <TimToady> hmm, we drew a lot of them several years ago, but I'm not sure any of them is specced officially

[15:34] <TimToady> if pugs had MO we could make it print out its version

[15:34] *** weinig left
[15:35] <moritz_> ok, then the laziest path is to wait for audreyt's MO-branch ;)

[15:36] <pugs_svnbot> r17993 | fglock++ | [kp6] some progress in namespace-in-perl6

[15:36] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17993

[15:36] <lambdabot> Title: Changeset 17993 - Pugs - Trac

[15:42] *** mj41 joined
[15:44] <fglock> ruoso: echo 'say "hello"; $x::y::xxx' | perl kp6-mp6-perl5.pl --do Global,Namespace --ast | perltidy

[15:44] <pugs_svnbot> r17994 | ruoso++ | [kp6] kp6-kp6 already in the visitors...

[15:44] <pugs_svnbot> r17995 | fglock++ | [kp6] namespace in Perl 6; missing some initialization code

[15:44] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17995

[15:44] <lambdabot> Title: Changeset 17995 - Pugs - Trac

[15:48] <TimToady> for 'a'..* X 'a'..'zzzzzzzzzzzzzzzzzzz' -> $sub, $super { say "$sub isa $super" if ucfirst $sub ~~ ucfirst $super }

[15:48] <TimToady> that would probably get most of them eventually

[15:49] <TimToady> assuming builtin class are not too long and don't do camel case

[15:49] <[particle]> or underscore

[15:50] <TimToady> well, so far we've managed to avoid both

[15:51] <[particle]> and somehow you've managed to avoid unicode, too :P

[15:51] <pugs_svnbot> r17996 | fglock++ | [kp6-lisp] namespace implemented in Perl 6 land

[15:51] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17996

[15:51] <lambdabot> Title: Changeset 17996 - Pugs - Trac

[15:52] <fglock> done :)

[15:52] <moritz_> fglock: wow, that was fast ;)

[15:54] <TimToady> basically, we reserve all the ugly class names for users  :P

[15:58] *** DarkWolf84 joined
[15:58] <pugs_svnbot> r17997 | fglock++ | [kp6-lisp] lispish .INDEX, .LOOKUP

[15:58] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17997

[15:58] <lambdabot> Title: Changeset 17997 - Pugs - Trac

[15:58] *** Shillo left
[15:58] *** barney joined
[16:01] *** justatheory joined
[16:03] *** Blwood left
[16:03] <pugs_svnbot> r17998 | fglock++ | [kp6-lisp] more lispy calls

[16:03] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17998

[16:03] <lambdabot> Title: Changeset 17998 - Pugs - Trac

[16:06] <pugs_svnbot> r17999 | fglock++ | [kp6-lisp] removed some semicolons

[16:06] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17999

[16:06] <lambdabot> Title: Changeset 17999 - Pugs - Trac

[16:12] <pugs_svnbot> r18000 | ruoso++ | [kp6] new test... if without else needs to generate a p6 value, instead of leaking the implicit p5 return

[16:12] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18000

[16:12] <lambdabot> Title: Changeset 18000 - Pugs - Trac

[16:14] <hoelzro> does $SIG{__WARN__} still work in perl 6?

[16:15] <hoelzro> I guess it'd be %SIG{__WARN__}

[16:15] <moritz_> or %*SIG{__WARN__}

[16:16] <moritz_> just grep the synopsis for SIG

[16:16] <hoelzro> I don't understand the whole deal with @* vs @, %* vs %, etc

[16:16] <hoelzro> where can I read up on twigils??

[16:16] <moritz_> S02 I think

[16:16] <hoelzro> k, thanks

[16:16] <moritz_> $* are just global vars

[16:17] <moritz_> and $? are vars that are known at compile time

[16:17] <hoelzro> I see

[16:17] <hoelzro> what's taking the place of @_, again?

[16:17] <hoelzro> I thought it was @*..., but it can't be global

[16:17] <moritz_> and $^ are things that are auto declared (like sort { $^a <=> $^b } )

[16:18] <moritz_> no, it's still @_ iirc

[16:18] <hoelzro> really?

[16:18] <moritz_> but you can declare sub signatures

[16:18] <hoelzro> right

[16:18] <moritz_> so you rarely ever need it 

[16:18] <hoelzro> sub foo ($a, $b, @*args) { ... }

[16:19] <moritz_> pugs: sub fac(Int $a) { [*] 1...$a }; say fac(5)

[16:19] <exp_evalbot> OUTPUT[*** ␤    Unexpected "$a"␤    expecting operator, ":", ",", term postfix or "}"␤    at /tmp/EI4lKjaZo1 line 1, column 27␤]

[16:19] <moritz_> pugs: sub fac(Int $a) { [*] 1..$a }; say fac(5)

[16:19] <exp_evalbot> OUTPUT[120␤]

[16:19] *** weinig joined
[16:28] *** rindolf joined
[16:34] <moritz_> I'm off for vacation (and buying a new laptop :/), see you all in about two weeks

[16:34] <hoelzro> take it easy

[16:34] *** IllvilJa left
[16:34] <moritz_> if someting goes wrong with exp_evalbot, contact bloonix++

[16:39] *** franck___ left
[16:39] *** TJCRI left
[16:47] <TimToady> hoelzro> sub foo ($a, $b, @*args) { ... }

[16:48] <TimToady> you want *@args there, which is different from @*args

[16:48] <hoelzro> yeah, I took a look at that

[16:48] <TimToady> the former is a slurpy argument, while the latter is global

[16:48] <hoelzro> good thing I'm not writing Perl 6 for Pugs =P

[16:49] <TimToady> anyway, welcome!

[16:49] <hoelzro> thanks!

[16:49] <hoelzro> I'm trying to get my first commit done before I go to class

[16:50] *** drrho left
[16:50] *** REPLeffect joined
[16:51] *** ferreira joined
[16:51] <ferreira> The reactions to micro-articles have begun. See the comments at http://www.oreillynet.com/onlamp/blog/2007/09/yap6_operator_stitching.html

[16:51] <lambdabot> Title: YAP6 Operator: Stitching - O&#039;Reilly ONLamp Blog, http://tinyurl.com/2dcsta

[16:57] *** f0rth left
[16:57] *** f0rth joined
[17:02] <avar> my $x = ~foo() is string context on foo() right?

[17:02] <avar> pugs: sub foo { 5 } ~foo()

[17:03] <exp_evalbot> OUTPUT["5"␤]

[17:04] <hoelzro> does anyone online have experience with hacking the parser?

[17:05] <ferreira> pugs: class Foo { sub prefix:<~> { 'a Foo' } }; ~(Foo.new)

[17:05] <exp_evalbot> OUTPUT["<obj:Foo>"␤]

[17:05] <ferreira> What is wrong? The output should not be 'a Foo' ?

[17:06] <avar> pugs: class Foo { method prefix:<~> { 'a Foo' } }; ~(Foo.new)

[17:06] <exp_evalbot> OUTPUT["<obj:Foo>"␤]

[17:06] <avar> maybe it's not supported

[17:07] *** Loro_ joined
[17:08] <TimToady> hoelzro: I presume you mean the pugs parser.  I've tweaked it upon occasion, but whenever I try to do anything substantial in Haskell I get into an argument with the compiler and lose.

[17:08] <hoelzro> ok

[17:09] <hoelzro> I was wondering if anyone knew how to do optional arguments

[17:09] <TimToady> if you see gaal online, he's a much better Haskeller

[17:09] <hoelzro> for the yada* operators

[17:09] *** polettix joined
[17:09] <hoelzro> I know Haskell, but my experience with Parsec is...well, I started this morning

[17:09] <TimToady> it would be a list operator

[17:09] <TimToady> so it'd work like print or warn

[17:10] <hoelzro> yes

[17:10] <hoelzro> actually, EXACTLY like warn

[17:10] <hoelzro> as in, all I'm doing is calling warn =P

[17:10] <TimToady> so I'd look at how warn is parsed

[17:11] <hoelzro> I tried, but I couldn't find it anywhere

[17:11] <TimToady> hmm

[17:12] <avar> CL-USER> (elems *my-hash*)

[17:12] <avar> 0

[17:12] <avar> ;

[17:12] <avar> CL-USER> (STORE *my-hash* "key" "value")

[17:12] <avar> "value"

[17:12] <avar> CL-USER> (elems *my-hash*)

[17:12] <avar> 1

[17:12] <avar> C

[17:12] <avar> whee:)

[17:12] <hoelzro> just curious, what is Lisp used for in Pugs?

[17:12] <TimToady> Parser/Literal.hs: doYada "???" = "&warn"

[17:12] <hoelzro> TimToady: I'm looking at that right now

[17:13] <hoelzro> but that's the yada operator part

[17:13] <avar> hoelzro: We're working on another compiler that uses it as an emitter backend

[17:13] <hoelzro> sweet

[17:14] <avar> It's currently not as complete as the .hs stuff but easier to get into, and IMO has more of a future:)

[17:14] <TimToady> then there's the parrot perl6 compiler, which targets parrot,  And my STD parser, which targets nothing (yet)

[17:14] <TimToady> well, it's really targetting pugs at the moment

[17:15] <avar> kp6 differs from the others in that it compiles itself which makes it a "real" compiler IMNSHO :)

[17:17] <TimToady> anyway, it's a healthy competition, I think

[17:17] <hoelzro> competition can be good for projects

[17:17] <TimToady> as long as we keep talking to each other

[17:17] <hoelzro> yeah

[17:17] *** rhizo joined
[17:18] <avar> totally:)

[17:20] <TimToady> hoelzro: btw, I don't think Perl 6 will necessarily have a %SIG, or if it does, it likely won't contain __WARN__

[17:21] <TimToady> if warn needs a global hook, it'd be more like $*WARN_HOOK or some such

[17:21] <hoelzro> oh that, yeah, I figured out a way around it

[17:21] * avar amazingly remembers what the diference between (let and (let* 

[17:21] <avar> ..is

[17:21] *** DarkWolf84 left
[17:22] <TimToady> avar: just finish all your sentences with ]

[17:24] <[particle]> TimToady: mostly it's coopetition between projects, except when we all battle with the language designer :)

[17:27] <TimToady> ah, well, he could use a good whack upside the head occasionally.

[17:32] <fglock> moritz_: ping

[17:35] <davidfetter> oi, fglock :)

[17:35] <fglock> davidfetter: hey!

[17:35] <davidfetter> what's new & good? :)

[17:35] <TimToady> about an hour ago moritz said he's off for vacation for two weeks

[17:35] <fglock> davidfetter: all is new and good :)

[17:36] <davidfetter> my spies tell me you're in .pt

[17:36] *** REPLeffect left
[17:36] * fglock looks around

[17:37] *** REPLeffect joined
[17:38] <fglock> davidfetter: it's a nice weather here - they had a cool winter back in .br

[17:39] <davidfetter> so i heard

[17:39] <davidfetter> what brought you to .pt ?

[17:39] <[particle]> $$

[17:39] <davidfetter> h€h

[17:40] *** ruoso left
[17:40] *** ruoso joined
[17:41] <fglock> a bunch of brazilian *-pm group leaders were hired by an open source company in .pt - it's a nice environment

[17:42] <davidfetter> neat. can you talk about what you're doing there?

[17:42] <fglock> and € > R$ too

[17:42] <davidfetter> heh

[17:43] <fglock> we are working on customized versions of several open source products, and contributing back to the projects

[17:43] <fglock> Perl 6 is one of them :)

[17:43] <davidfetter> w00t!

[17:43] <fglock> i've used v6.pm on a migration project

[17:44] <davidfetter> sweet

[17:44] <avar> http://sial.org/pbot/27597 # luev slime:)

[17:44] <pugs_svnbot> r18001 | avar++ |  r63624@t:  avar | 2007-09-20 17:41:59 +0000

[17:44] <pugs_svnbot> r18001 | avar++ |  add a value member to the container for storage

[17:44] <pugs_svnbot> r18002 | avar++ |  r63625@t:  avar | 2007-09-20 17:42:55 +0000

[17:44] <pugs_svnbot> r18002 | avar++ |  Implemented new/store/lookup/pairs. May still need to return kp6 objects and could use some cleanup of the code and API

[17:44] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18002

[17:44] <lambdabot> Title: Paste #27597 from Someone at 208.78.101.240

[17:44] <lambdabot> Title: Changeset 18002 - Pugs - Trac

[17:45] <avar> evaluation aborded there is when I switched to the other buffer to write the function, before I loaded it into the lisp image:)

[17:45] <fglock> davidfetter: i'm working with several people i've only met in the net

[17:45] <davidfetter> that's common :)

[17:46] <avar> fglock: I'm going to be making more libary runite hacks, but first $exercise :)

[17:46] <fglock> i mean, working in the same place

[17:46] *** IllvilJa joined
[17:46] <fglock> avar++

[17:47] <avar> is LOOKUP fglockish for FETCH ?

[17:47] <avar> :)

[17:47] <fglock> lookup is the read-key-from-hash operation

[17:48] <ferreira> I am looking for instructions on keeping in sync with Pugs and compiling it, working from feather. Anyone knows where I can find instructions for that?

[17:48] <fglock> fetch is read-from-container 

[17:48] <fglock> a fetch on a hash returns the whole hash

[17:49] <fglock> ferreira: i think it's this: http://feather.perl6.nl/svk.html

[17:49] <lambdabot> Title: SVK on Feather

[17:50] <ferreira> Fglock: thanks

[17:50] <fglock> then follow the instructions in pugs

[17:50] <fglock> np

[17:51] *** kane_ left
[17:51] <fglock> avar: does the namespace elimination transform makes sense?

[17:52] * ruoso changing EmitPerl5 to return Bit(false) when an if doesn't have an else

[17:52] <ruoso>  /return/return in the else/

[17:55] <fglock> ferreira: how about adding links to previous/next article 

[17:56] *** Patterner left
[17:57] <ferreira> at ONLamp? I am having trouble with MovableType that seems to randomly change URLs in some updates. I am thinking of alternatives.

[17:57] *** daxim joined
[18:01] *** pl4fks joined
[18:01] <pugs_svnbot> r18003 | ruoso++ | [kp6] if without else emits an else { Bit(False) } for implicit returns

[18:01] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18003

[18:01] <lambdabot> Title: Changeset 18003 - Pugs - Trac

[18:01] <ferreira> I don't understand these instructions on SVK. I started a svk repository for saving the micro-article series. So I cannot just copy ~audreyt/config to ~/.svk. I would need to understand what mirrors this is setting.

[18:01] *** Psyche^ joined
[18:01] *** Psyche^ is now known as Patterner

[18:02] <fglock> ferreira: you can add the articles under docs/articles/

[18:03] <fglock> then svk add / svk ci

[18:03] <ferreira> ok

[18:05] *** REPLeffect left
[18:05] <pugs_svnbot> r18004 | ruoso++ | [kp6] prefix:<%>. Still does nothing... kp6 does not implement contexts

[18:05] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18004

[18:05] <lambdabot> Title: Changeset 18004 - Pugs - Trac

[18:05] *** pl4fks left
[18:05] <fglock> avar: are we going to use kp6-* for method names?

[18:07] *** REPLeffect joined
[18:07] <fglock> are there some guidelines on lisp indentation best practices?

[18:08] *** qmole left
[18:11] <pugs_svnbot> r18005 | fglock++ | [kp6-lisp] Hash.pairs, Hash.elems return Perl 6 objects

[18:11] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18005

[18:11] <lambdabot> Title: Changeset 18005 - Pugs - Trac

[18:11] *** SubStack left
[18:11] *** SubStack joined
[18:11] <fglock> ruoso: prefix:<%> just calls .hash

[18:11] <fglock> in kp6

[18:12] <ruoso> fglock, I've just changed it

[18:15] *** weinig left
[18:20] <pugs_svnbot> r18006 | fglock++ | [kp6-lisp] added Undef, Value, Container to Runtime.lisp

[18:20] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18006

[18:20] <lambdabot> Title: Changeset 18006 - Pugs - Trac

[18:20] *** buetow left
[18:23] <ferreira> pugs build fails with error in src/Pugs/Internals/Monads.hs What am I doing wrong? pugs build is broken?

[18:24] *** qmole joined
[18:25] *** Blwood joined
[18:29] <fglock> ferreira: sorry, i don't know

[18:29] <pugs_svnbot> r18007 | fglock++ | [kp6-lisp] &GLOBAL::say is stored in the right place

[18:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18007

[18:29] <lambdabot> Title: Changeset 18007 - Pugs - Trac

[18:30] <fglock> home &

[18:34] *** TJCRI joined
[18:34] *** barney left
[18:40] *** calin joined
[18:41] *** gnuvince joined
[18:42] *** calin_ joined
[18:43] <gnuvince> Is audreyt still active on the Pugs project?  I notice that she hasn't committed anything to pugs since July.  Some of her CPAN modules are still being maintained however.

[18:43] <ferreira> I think she's busy at work

[18:46] <gnuvince> Where does she work?

[18:51] *** Schwern left
[18:52] <allbery_b> she was out for a long time with hepatitis, then there were complications to her recovery

[18:52] <gnuvince> I didn't know about that.  I knew she got hep A, but not that her recovery didn't go well.

[18:52] <pugs_svnbot> r18008 | ruoso++ | [kp6] some value checking... kp6-kp6 does emit some code... but not the right code

[18:52] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18008

[18:52] <lambdabot> Title: Changeset 18008 - Pugs - Trac

[18:53] <ruoso> pmurias, run: echo 'say "Hello!"' | perl -Ilib-kp6-kp6-p5 kp6-kp6.pl

[18:53] <ruoso> kp6-kp6.pl already pass through all the visitors

[18:53] <ruoso> :)

[18:53] <ruoso> it emits the p5 skelethon code

[18:53] <ruoso> the ast is not as it should yet

[18:54] <ruoso> we need a p6 dumper

[18:54] <ruoso> does anyone wants to implement KP6Data::Dumper?

[18:54] <ruoso> ;)

[18:54] <TimToady> KP6Data::YAML maybe...

[18:56] <ruoso> I was thinking in the quasiquotes too

[18:56] <ruoso> maybe KP6AST::Dumper

[18:56] *** fglock left
[18:56] *** gnuvince left
[18:59] <ruoso> kp6-kp6 almost works ;)

[18:59] <pugs_svnbot> r18009 | ruoso++ | [kp6] dumps the ast as a warning in kp6-kp6 before emitting... The ast now is highly incomplete

[18:59] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18009

[19:00] <lambdabot> Title: Changeset 18009 - Pugs - Trac

[19:00] *** calin left
[19:05] <ruoso> A long way to go now... Must understand why the AST is almost empty...

[19:05] <ruoso> but...

[19:05] <ruoso> home &

[19:05] *** ahmadz joined
[19:06] <ahmadz> hi all

[19:06] <pmurias> ahmadz: hi al

[19:06] <pmurias> l

[19:06] <pmurias> ahmadz: hi ;)

[19:06] <ahmadz> pmurias: ;-)

[19:07] <pmurias> ruoso: i works here :) but takes 0m31s

[19:07] <ruoso> heh

[19:08] <ruoso> pmurias, I'm going out now... 

[19:08] <ruoso> do you want to search why is the ast getting out empty?

[19:09] <ruoso> now really home &

[19:12] <ferreira> Why I got "A checksum mismatch occurred: Base checksum mismatch on '/mirror/pugs/src/perl6/Perl-6.0.0-STD.pm" when doing "svk pull". I am at feather.

[19:15] <TimToady> that file isn't there anymore.  it was renamed to STD.pm

[19:16] <TimToady> seems like kind of a lousy error message...

[19:17] <TimToady> clkao: see above

[19:17] *** jisom joined
[19:18] <clkao> hello

[19:18] <clkao> aaah what version of svk is on feather

[19:19] <TimToady> ENOKLOO

[19:19] <ferreira> This is svk, version v2.0.2 (using Subversion bindings 1.4.4)

[19:19] <clkao> hmmm

[19:19] <clkao> this is during pull... /me ponders

[19:21] *** weinig joined
[19:28] *** ludan joined
[19:28] *** TJCRI left
[19:45] *** dduncan joined
[19:51] <avar> @tell fglock re namespace elimination transform, haven't looked at it yet, will peek mayybeees

[19:51] <lambdabot> Consider it noted.

[19:52] <avar> @tell fglock I'm still n00bing around with CLOS so I don't know the best names for methods, but I suppose a prefix makes sense, maybe

[19:52] <lambdabot> Consider it noted.

[19:52] <avar> @tell fglock You should indent lisp like emacs does it:)

[19:52] <lambdabot> Consider it noted.

[19:52] <hoelzro> who was the resident Haskell expert again?

[19:52] *** amnesiac left
[19:53] <hoelzro> began with a 'g', if I remember right

[19:53] <ferreira> gaal ?

[19:53] <hoelzro> that looks right

[19:57] <hoelzro> alright, yada-yada-yadas are working!

[19:59] <TimToady> hoelzro++

[19:59] <TimToady> but weren't you supposed to go to class?

[19:59] <hoelzro> I just got back

[20:00] <hoelzro> I had inspiration while listening to my professor

[20:00] <TimToady> sorry, kneejerk reaction from spawning too many teens...

[20:00] <hoelzro> that's fine =P

[20:01] <hoelzro> are the yadas supposed to accept lists, like this:  ... ("list", "of", "things")?

[20:02] <TimToady> yes, and the args are implicitly joined with ''

[20:03] <hoelzro> really?  I didn't know that

[20:03] <hoelzro> I supposed I'll actually have to LEARN Perl 6 after I get more coding done

[20:03] <TimToady> that part's actually the same as Perl 5... :)

[20:04] <hoelzro> really?!

[20:04] <TimToady> try "warn 'foo','bar'"

[20:04] <hoelzro> I clearly haven't been writing enough Perl...

[20:05] *** weinig left
[20:05] <TimToady> well, it's not all that useful of a feature, but warn and die were modeled on print

[20:06] <hoelzro> by the way, what's the purpose of fail if we have die?

[20:06] <TimToady> die always throws an exception

[20:07] <TimToady> fail only does that if the caller uses "use fatal"

[20:07] <hoelzro> ah

[20:07] <TimToady> otherwise it returns an "unthrown exception"

[20:07] <pmurias> The argument

[20:07] <pmurias> is optional,

[20:07] <TimToady> which eventutally throws an exception if you try to use it

[20:07] <pmurias> TimToady: it might suggest that !!! takes one argument

[20:07] <TimToady> also known as "interesting values of undef"

[20:07] <hoelzro> I think you can do die w/o an arg

[20:08] *** TJCRI joined
[20:08] <pmurias> yes

[20:08] <TimToady> but instead of "Something's wrong" or "Died" the default message for the yadas can be more specific

[20:08] *** pmurias left
[20:09] <TimToady> "Attempt to execute stub" or some such

[20:09] <hoelzro> oh?  I just have it calling die/fail/warn

[20:09] <hoelzro> would you like me to change it?

[20:09] <TimToady> sure

[20:11] <hoelzro> would you like me to change it to anything in particular, or should I be creative? =D

[20:11] <TimToady> maybe "Unimplemented stub called"

[20:11] *** rindolf left
[20:12] <hoelzro> ok

[20:13] <hoelzro> what version of pugs does the evaluator in this channel use?  a nightly build?

[20:13] <TimToady> probably more frequent than that

[20:13] <[particle]> it rebuilds when it senses a disturbance in the repo

[20:14] <hoelzro> dang

[20:14] <hoelzro> impressive

[20:14] <hoelzro> Jedi build system?

[20:14] <[particle]> use The::Repo;

[20:14] <TimToady> pugs: say $*PUGS_VERSION

[20:14] <exp_evalbot> OUTPUT[Perl6 User's Golfing System, version 6.2.13, October 17, 2006 (r17871)␤]

[20:15] <avar> Updated annually?:)

[20:15] <wolverian> heh

[20:15] <[particle]> hasn't been released in a while... sohuld probably have a -devel on the version or something

[20:16] <TimToady> -extended_version or _directors_cut maybe

[20:16] <[particle]> and the last couple hundred revs have been for kp6, not pugs

[20:16] <[particle]> deluxe_widescreen_edition

[20:17] <ferreira> the revision number is from svn.pugscode.org? That (the revision number) differs if you use other svk mirrors, right?

[20:35] *** ferreira left
[20:43] <diakopter> more like -unrated_edition

[20:46] <[particle]> diakopter: svnbot throttling doesn't seem to be working. have a look at some code i wrote up: http://nopaste.snit.ch:8001/11202

[20:47] <[particle]> ...it may need some fixing up, i have no good way to test

[20:49] <diakopter> [particle]: so it always sleeps 0.51 ?

[20:49] <hoelzro> is &die implemented as a multi sub?

[20:50] <hoelzro> I'm getting complaints from !!! about "no multi variant found for &die"

[20:51] <[particle]> diakopter: yep

[20:51] <[particle]> or 1s if the platform doesn't support sub-second resolution

[20:52] * davidfetter wonders which platforms don't offer sub-second resolution

[20:52] <diakopter> [particle]: someone on #parrot demanded a maximum of 0.2msgs/s

[20:53] <[particle]> it was 2msg/s

[20:53] <diakopter> someone said 5 seconds between messages.

[20:53] <[particle]> that's wrong.

[20:53] <[particle]> 5 minutes between runs

[20:53] <[particle]> 2 messages/second

[20:55] <hoelzro> what are the various forms of die?

[20:55] <diakopter> [particle]: oh yeah. I see where you said  diakopter: kismet says 2 messages/second would be a good value

[20:56] <[particle]> yep, that's it

[20:57] <[particle]> hoelzro: see http://perlcabal.org/syn/S03.html#List_prefix_precedence Exception generators

[20:57] <lambdabot> Title: S03

[20:58] <hoelzro> thank you

[20:58] <hoelzro> I'm seldom sure which synopses to look at...

[20:59] <[particle]> that's why you should have a local repo to search :)

[20:59] <[particle]> http://svn.perl.org/perl6/doc/trunk

[20:59] <lambdabot> Title: Revision 14463: /doc/trunk

[20:59] *** snearch joined
[21:01] <diakopter> [particle]: there.  let's see if that works.

[21:03] <pugs_svnbot> r18010 | hoelzro++ | Added myself to the AUTHORS list, fixed a discrepancy in docs/SEEALSO, and 

[21:03] <pugs_svnbot> r18010 | hoelzro++ | implemented the yada operators (..., !!!, ???).  Tests are soon to follow...

[21:03] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18010

[21:03] <lambdabot> Title: Changeset 18010 - Pugs - Trac

[21:05] <[particle]> diakopter++ # i'll test after lunch & errands

[21:06] <avar> is a true/false value of the Bit class or of Bool directly?

[21:06] * avar wondering what the hell fglock has been doing:)

[21:06] *** IllvilJa left
[21:10] <Juerd> avar: Should be Bool, because bits are 0/1, and bools are false/true.

[21:11] <Juerd> That's the only distinction AFAIK. Of course, the obvious 1-on-1 mapping applies.

[21:11] * Juerd does not see any use for having different classes

[21:12] <avar> different stringify and such?

[21:18] *** xinming left
[21:19] *** TJCRI left
[21:22] *** kjwcode left
[21:23] *** snearch left
[21:24] *** ludan left
[21:24] <pugs_svnbot> r18011 | avar++ |  r63636@t:  avar | 2007-09-20 21:14:25 +0000

[21:24] <pugs_svnbot> r18011 | avar++ |  XXX note

[21:24] <pugs_svnbot> r18012 | avar++ |  r63637@t:  avar | 2007-09-20 21:15:55 +0000

[21:24] <pugs_svnbot> r18012 | avar++ |  Add the kp6-value introspective accessor to all containers, this gets the CL hash table, string, array etc

[21:24] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18012

[21:24] <lambdabot> Title: Changeset 18012 - Pugs - Trac

[21:27] <hoelzro> is there POD for Test.pm?

[21:27] <pugs_svnbot> r18013 | avar++ |  r63638@t:  avar | 2007-09-20 21:19:25 +0000

[21:27] <pugs_svnbot> r18013 | avar++ |  Undef isa Value and is nil by default

[21:27] <pugs_svnbot> r18014 | avar++ |  r63639@t:  avar | 2007-09-20 21:20:08 +0000

[21:27] <pugs_svnbot> r18014 | avar++ |  eek, forgot C-x C-s

[21:27] <pugs_svnbot> r18015 | avar++ |  r63640@t:  avar | 2007-09-20 21:20:33 +0000

[21:27] <pugs_svnbot> r18015 | avar++ |  make the (str) method use the (kp6-value) introspector

[21:27] <pugs_svnbot> r18016 | avar++ |  r63641@t:  avar | 2007-09-20 21:21:19 +0000

[21:27] <pugs_svnbot> r18016 | avar++ |  camel case class names, not that it matters to lisp

[21:27] <pugs_svnbot> r18017 | avar++ |  r63642@t:  avar | 2007-09-20 21:21:36 +0000

[21:27] <pugs_svnbot> r18017 | avar++ |  delicious indenting

[21:27] <pugs_svnbot> r18018 | avar++ | test dir

[21:27] <pugs_svnbot> r18019 | avar++ | test dir nuked

[21:27] <pugs_svnbot> r18020 | avar++ |  r63643@t:  avar | 2007-09-20 21:22:21 +0000

[21:27] <pugs_svnbot> r18020 | avar++ |  camel case class names, not that it matters to lisp

[21:27] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18020

[21:27] <lambdabot> Title: Changeset 18020 - Pugs - Trac

[21:29] <avar> urgh!

[21:29] <pugs_svnbot> r18021 | avar++ |  r63644@t:  avar | 2007-09-20 21:22:32 +0000

[21:29] <pugs_svnbot> r18021 | avar++ |  camel case class names, not that it matters to lisp

[21:29] <pugs_svnbot> r18022 | avar++ |  r63645@t:  avar | 2007-09-20 21:22:52 +0000

[21:29] <pugs_svnbot> r18022 | avar++ |  M-x indent-region

[21:29] <pugs_svnbot> r18023 | avar++ |  r63646@t:  avar | 2007-09-20 21:24:21 +0000

[21:29] <pugs_svnbot> r18023 | avar++ |  Drop kp6-Hash-new, just use (make-instance) which now initializies the hash thanks to :initarg, Implemented DELETE and CLEAR and make pairs return key-value pairs, not value-key pairs (oops), more cleanup

[21:29] <pugs_svnbot> r18024 | avar++ | test dir un-nuked

[21:29] <pugs_svnbot> r18025 | avar++ | test dir nuked

[21:29] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18025

[21:29] <lambdabot> Title: Changeset 18025 - Pugs - Trac

[21:29] <hoelzro> nevermind...I found it =P

[21:29] <avar> how do I make svn/svk remember my bloddy password so it doesn't ask for it every commit?

[21:30] <avar> svk doesn't have --password for push like svn to make it less annoying

[21:30] <clkao> apparently there's something silly in the codepath. try to do something with svn that requires password once and have it remembered

[21:30] <avar> yeah, I've been commiting test dirs with svn, keeps asking

[21:31] <avar> iirc it cached it when i tried it some months ago

[21:31] <avar> I did svn co http://svn.pugscode.org/pugs; cd pugs/misc/pX/avar; svn mkdir test; svn ci test

[21:31] <lambdabot> Title: Revision 18025: /

[21:33] *** iblechbot left
[21:33] <avar> pugs.switch_to(Git)

[21:33] <avar> version control is always greener on the other side

[21:33] <hoelzro> does old-school eval { ... } if($@) { ... } still work?  I'm trying to write tests for .../!!!/???

[21:35] *** xinming joined
[21:37] <hoelzro> nevermind, I think I found it

[21:42] <hoelzro> are there hooks for die, warn, and fail?

[21:43] <avar> currently you're the dude that understands this haskell nonesense best here:)

[21:43] <hoelzro> yay!

[21:43] <hoelzro> I was talking about Perl 6 though;  I'm writing a test for the yadas

[21:44] <avar> GLOBAL::die() and so on I think

[21:44] <avar> ..maybe...

[21:56] *** Schwern joined
[21:58] *** orevdiabl joined
[21:58] *** revdiablo left
[22:07] <hoelzro> pugs: say $*PUGS_VERSION

[22:07] <exp_evalbot> OUTPUT[Perl6 User's Golfing System, version 6.2.13, October 17, 2006 (r17871)␤]

[22:09] <avar> You've implemented this stuff?

[22:09] <pugs_svnbot> r18026 | avar++ |  r63661@t:  avar | 2007-09-20 21:43:51 +0000

[22:09] <pugs_svnbot> r18026 | avar++ |  Be more quiet when compiling

[22:09] <pugs_svnbot> r18027 | avar++ |  r63662@t:  avar | 2007-09-20 22:08:33 +0000

[22:09] <pugs_svnbot> r18027 | avar++ |  GLOBAL needs to be in the kp6-cl package too

[22:09] <pugs_svnbot> r18028 | avar++ |  r63663@t:  avar | 2007-09-20 22:09:18 +0000

[22:09] <pugs_svnbot> r18028 | avar++ |  Use the kp6-Hash interface instead of manually (make-hash-table); syntax fixes

[22:09] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18028

[22:09] <lambdabot> Title: Changeset 18028 - Pugs - Trac

[22:09] *** REPLeffect_ joined
[22:11] *** vel joined
[22:11] <hoelzro> which Perl 6 implementation is furthest along?

[22:14] <avar> pugs.hs

[22:15] <hoelzro> I figured

[22:15] <hoelzro> it doesn't seem like a lot of people are working on it

[22:17] <avar> no, like I said earlier

[22:17] <avar> :)

[22:18] <avar> kp6 is the most active atm

[22:18] <hoelzro> audrey's off doing other things?

[22:18] <avar> yup

[22:18] <hoelzro> =(

[22:18] <hoelzro> if I had a better idea of what needed to be done, I'd keep going

[22:19] <hoelzro> and my Lisp isn't nearly as good as my Haskell

[22:19] <avar> maybe you'd like to hack kp6?:)

[22:19] <hoelzro> I could learn

[22:19] <avar> Oh the lisp backend is just a current project, the most complete one and the one that's actually working is the perl5 emitter

[22:20] *** vel left
[22:20] <avar> You could also write a haskell emitter, a lot of the current stuff from pugs.hs could be reused

[22:20] <avar> or do @anything :)

[22:20] <hoelzro> I think for now, I'm going to read over the specs better

[22:21] <pugs_svnbot> r18029 | avar++ |  r63669@t:  avar | 2007-09-20 22:17:18 +0000

[22:21] <pugs_svnbot> r18029 | avar++ |  kp6-CLEAR does not need a key argument

[22:21] <pugs_svnbot> r18030 | avar++ |  r63670@t:  avar | 2007-09-20 22:18:35 +0000

[22:21] <pugs_svnbot> r18030 | avar++ |  Load Int too

[22:21] <pugs_svnbot> r18031 | avar++ |  r63671@t:  avar | 2007-09-20 22:20:52 +0000

[22:21] <pugs_svnbot> r18031 | avar++ |  Export the Hash.lisp methods, this is stupid

[22:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18031

[22:21] <lambdabot> Title: Changeset 18031 - Pugs - Trac

[22:23] *** Aankhen`` left
[22:27] <pugs_svnbot> r18032 | avar++ |  r63675@t:  avar | 2007-09-20 22:27:14 +0000

[22:27] *** REPLeffect left
[22:27] <pugs_svnbot> r18032 | avar++ |  (foo) not ( foo ); (kp6-APPLY not (APPLY

[22:27] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18032

[22:27] <lambdabot> Title: Changeset 18032 - Pugs - Trac

[22:30] *** REPLeffect_ is now known as REPLeffect

[22:30] <pugs_svnbot> r18033 | avar++ |  r63676@t:  avar | 2007-09-20 22:27:48 +0000

[22:30] <pugs_svnbot> r18033 | avar++ |  emitter changes from the last few commits

[22:30] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/18033

[22:30] <lambdabot> Title: Changeset 18033 - Pugs - Trac

[22:33] *** hoelzro left
[22:37] *** Blwood left
[22:38] *** BinGOs left
[22:54] *** penk joined
[22:54] *** kaether joined
[22:59] *** Limbic_Region joined
[23:14] <dduncan> whats up with pugscode.org?  I can't connect to it now

[23:15] <dduncan> one moment ...

[23:15] <dduncan> oh, maybe that thing on log.perl.org explains it

[23:15] <dduncan> or indirectly

[23:16] <dduncan> since that's 2 days old, and pugscode was working an hour ago

[23:16] <dduncan> so my question stands

[23:16] *** ft joined
[23:17] <TimToady> I didn't have any trouble connecting to www.pugscode.org

[23:18] <TimToady> not from work anyway, but it doesn't ping from my home machine

[23:21] *** PerlJam left
[23:21] *** wolverian left
[23:21] *** Juerd left
[23:23] *** dalek left
[23:23] *** pugs_svnbot left
[23:23] <TimToady> it is not a good sign that all the folks from feather dropped off at the same time...

[23:25] <Tene> mysterious questions about problems with a server, followed by everyone on that server falling offline... sounds like the start of a horror film.

[23:25] <TimToady> but Juerd said earlier today that: Big network maintenance tomorrow 0:00 - 4:00 CET

[23:25] <TimToady> feather will be offline a few times.

[23:26] <TimToady> (online intermittently...)

[23:26] <TimToady> and that seems like about now

[23:30] *** REPLeffect left
[23:41] *** luqui joined
[23:45] *** dalek joined
[23:47] *** cmarcelo left
[23:47] *** Loro_ left
