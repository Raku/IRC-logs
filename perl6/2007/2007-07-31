[00:00] *** justatheory left
[00:16] *** sunnavy joined
[00:21] *** elmex left
[00:38] *** polettix left
[00:50] *** weinig_ left
[00:51] *** silug joined
[01:04] *** devogon left
[01:08] *** nipotaway is now known as nipotan

[01:22] *** Siggy_SS joined
[01:23] *** Limbic_Region left
[01:25] *** weinig joined
[01:42] *** thorat left
[01:49] *** REPLeffect left
[01:50] *** REPLeffect joined
[02:04] *** kolibrie joined
[02:12] *** jhorwitz left
[02:15] *** Lectus joined
[02:18] *** kolibrie_ left
[02:20] *** weinig_ joined
[02:22] *** weinig left
[02:44] *** Siggy_SS left
[03:14] *** Lectus left
[03:26] *** cmarcelo left
[03:27] *** pro21ms4 joined
[03:49] *** Siggy_SS joined
[03:52] *** justatheory joined
[04:04] *** torz joined
[04:23] *** Aankhen`` joined
[04:48] *** f0rth left
[04:53] *** penk left
[05:01] *** f0rth joined
[05:06] *** f0rth_ joined
[05:08] *** f0rth left
[05:10] *** Eidolos_ joined
[05:20] *** REPLeffect left
[05:21] *** Eidolos left
[05:26] *** devogon joined
[05:29] *** weinig_ left
[05:39] *** weinig joined
[05:50] *** jisom joined
[05:52] *** drrho joined
[06:04] *** justatheory left
[06:12] <bloonix> morning

[06:24] <dduncan> soon

[06:26] *** amnesiac left
[06:29] *** Siggy_SS left
[06:35] *** elmex joined
[06:37] *** daxim_ joined
[06:42] *** pro21ms4 left
[06:52] *** daxim left
[06:52] *** audreyt joined
[06:59] *** polettix joined
[07:02] *** franck___ joined
[07:08] *** daxim_ left
[07:10] <meppl> good morning

[07:11] *** daxim joined
[07:13] *** iblechbot joined
[07:24] *** marmic left
[07:27] *** flokuehn joined
[07:42] *** marmic joined
[08:02] *** weinig left
[08:04] *** mj41 left
[08:16] *** IllvilJa left
[08:18] *** weinig joined
[08:27] *** buetow joined
[08:32] *** daxim_ joined
[08:40] *** BooK_ joined
[08:50] *** daxim left
[08:57] *** dduncan left
[08:58] *** BooK left
[09:03] *** weinig left
[09:06] *** ruoso joined
[09:08] *** dalecooper joined
[09:09] *** dalecooper left
[09:09] *** dalecooper joined
[09:21] *** xinming joined
[09:29] *** masak joined
[09:33] *** Aankhen`` left
[09:34] <masak> moritz_: I'm on another channel, #bioclipse, on freenode. they are looking for an IRC logging solution. what would you recommend?

[09:36] *** jisom left
[10:04] <pugs_svnbot> r17184 | masak++ | [t/syntax/interpolation/strings.t]

[10:04] <pugs_svnbot> r17184 | masak++ | * some tests in eval() where not run, adding // ok( "" )

[10:04] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17184

[10:04] <lambdabot> Title: Changeset 17184 - Pugs - Trac

[10:05] <masak> I still think it would be very possible to develop a little Emacs/vi tool that auto-calculated the number after 'plan'

[10:05] <masak> I'd like to write such a tool, but I would need some real-world data to test on

[10:05] <masak> then I realized that the Pugs test suite is perfect for this

[10:07] <masak> & # lunch

[10:12] *** franck____ joined
[10:29] *** franck___ left
[10:47] *** thoughtpolice left
[10:48] <wolverian> masak, the one we use seems ok

[10:48] *** iblechbot left
[10:48] <wolverian> hm, now that I look at it, it aligns the nicks higher than the text lines 

[10:48] <wolverian> that looks weird

[10:49] <wolverian> omg it uses Net::IRC

[10:57] *** lisppaste3 left
[11:05] *** cmarcelo joined
[11:08] *** lisppaste3 joined
[11:19] <masak> wolverian: do you mean this one? http://colabti.de/irclogger//irclogger_logs

[11:19] <lambdabot> Title: Logs of IRC channels

[11:20] <masak> appears that it's the #irclogger people that handle that one

[11:20] <wolverian> masak, I meant irc.pugscode.org, as in topic

[11:21] <masak> wolverian: ah, yes. that's why I asked moritz_++

[11:21] <wolverian> but that looks good too, and maybe it doesn't use Net::IRC ;)

[11:21] <masak> it uses something called irclogger2

[11:21] <masak> don't know if that uses Net::IRC

[11:21] <wolverian> it's python, so no..

[11:22] <masak> ah

[11:23] <masak> ilogger2: so it's you who keeps our logs at colabti...

[11:23] <ilogger2> masak: I am a logger bot. Lines starting with [off] won't be logged. Extra help available at http://colabti.de/irclogger/irclogger_logs.

[11:23] <lambdabot> Title: Logs of IRC channels

[11:23] <masak> right. I knew that

[11:23] *** chris2 joined
[11:23] <masak> but thx :)

[11:24] <masak> is it "it's you who keeps" in modern english?

[11:24] <masak> "it's you who keep" sounds wrong to me

[11:25] <masak> but in archaic english you say "Father, [you] who art in Heaven"

[11:26] <masak> yuck, verb endings that change depending on grammatic person are stupid

[11:29] <diakopter> masak: but English might regain such endings, if the trend towards dropping nominative pronouns continues.

[11:30] <masak> there's such a trend?

[11:30] <masak> didn't know

[11:31] <diakopter> at least on IRC/IM/txt :P

[11:31] <masak> now that I think about it, I do it in Swedish quite a bit when writing emails to friends

[11:32] <wolverian> interesting, http://search.cpan.org/~philcrow/Java-Javap-0.04/bin/java2perl6

[11:32] <lambdabot> Title: java2perl6 - a Java to Perl 6 API translator - search.cpan.org

[11:33] <diakopter> yeah...  much of the time, the context or even (*gasp*) `lilt' can indicate person.  

[11:36] <masak> "lilt" ?

[11:38] <diakopter> intonation, I meant.

[11:38] <masak> ah

[11:39] <masak> it's a bit of an art to convey intonation correctly over the webbernet, though

[11:39] <masak> I sometimes cringe at people who use exclamation marks liberally

[11:39] <diakopter> I guess for someone like me (who's not learned Japanese or similar) considers all intonation as sounding like a "lilt". :)

[11:40] <diakopter> er, how'd that "for" creep into that sentence?

[11:40] <masak> diakopter: not sure I follow. how does a "lilt" sound?

[11:41] <masak> what's the best way today to generate an AST from p6 source?

[11:42] <diakopter> I'm using it to mean several of these definitions: http://dictionary.reference.com/browse/lilt

[11:42] <lambdabot> Title: lilt - Definitions from Dictionary.com

[11:42] <masak> I just realised that this would be far superior to parsing test files directly in a script

[11:42] <masak> diakopter: wow, there really is such a word. I thought you made it up, or borrowed it from some other language

[11:43] <diakopter> heh... as if there are words that don't arise in those ways... ;)

[11:43] <masak> diakopter: 'course, but in this particular case...

[11:44] <diakopter> masak: the implication being that if I use such a word, there is such a word.

[11:44] <diakopter> (I or anyone else)

[11:45] <masak> diakopter: I'd agree, except there's still the extra authority of finding a word in a dictionary

[11:45] <masak> that means at least two people have used it :)

[11:45] <masak> hm, maybe I mean something like "authoricity" instead of "authority"

[11:46] <masak> diakopter: you don't happen to know how to generate an AST from perl6 source, do you?

[11:47] <diakopter> masak: Hey!  Authoricity isn't a word!  Someone already coined a term for your usage!  ;)

[11:47] <masak> diakopter: :)

[11:47] <diakopter> (joking...)

[11:47] <masak> yes

[11:48] <diakopter> hmm, well, actually I was just studying pugs' src/ to find exactly that.

[11:48] <diakopter> funny you ask

[11:48] <masak> heh

[11:48] <masak> diakopter: as long as you have a certain familiarity with src/, maybe you can answer some other questions ;)

[11:49] <masak> where is string interpolation being done? I've looked, but turned up zilch

[11:51] <masak> also, what's the difference between a an anon black and the common space outside all blocks?

[11:51] <masak> (muddy question, maybe I need to clarify that)

[11:52] <masak> it's pugs t/magicals/subname.t, the last test

[11:52] <masak> it wants &?ROUTINE.name to be undef, and I can do that

[11:52] * diakopter looks for a long while

[11:52] <diakopter> ahah!

[11:52] <masak> but right now it's '<anon>', and I need to test for something that distinguishes it from test #3, otherwise that will fail

[11:53] * masak loves discussing wanted features based on failing tests

[11:53] <diakopter> masak: pronoun nominatives can disappear today because the imperative mood (implied 2nd person) has all but disappeared!

[11:53] <masak> diakopter: yes, are right about that

[11:54] <masak> er

[11:54] <masak> I mean "nod"

[11:54] <masak> (which could be imperative, but isn't)

[11:55] <diakopter> LOL

[11:55] <diakopter> "diakopter, yes, are right about that"

[11:55] <diakopter> (I assume that was a typo)

[11:56] <masak> diakopter: no, just testing writing w/o nominative pronouns

[11:56] <diakopter> k; gotcha :D

[11:56] <polettix> lol

[11:56] <masak> it would have been a bit too coincidental to have been a typo, wouldn't it?

[11:56] <diakopter> no.... I drop (random) all the time

[11:57] <masak> ("gotcha" is fun too... it's the only time "you" is spelled "cha")

[11:57] <diakopter> "whatcha" doing

[11:57] <masak> ah, true

[11:57] <diakopter> "captcha" this! ;)

[11:57] <masak> no ;)

[11:58] <masak> for one thing, "capt" is not a verb

[11:59] <diakopter> lol; sorry, just taking the opportunity to exercise my visual word index.

[11:59] <masak> diakopter++ # for exercising

[12:00] <diakopter> k, so, gimme a while to research some of your questions.

[12:00] <masak> you forgot "cha-cha" in that case

[12:00] <masak> diakopter: sure

[12:04] <diakopter> ... "k, so, " being a plea for tolerance of the forthcoming imperative verb (because otherwise someone might take it as a demand or command, as if I think I have authority or influence).  Pray suffer me a time to research.

[12:04] <masak> that's how I read it

[12:08] *** polettix left
[12:16] *** buetow left
[12:20] *** buetow joined
[12:20] <allbery_b> the archaic meaning of "pray" is supplication; the modern equivalent is "please"

[12:20] <allbery_b> in modern English "pray" has all but lost its secular usage

[12:21] * masak likes the new linguistic touch to #perl6

[12:21] <diakopter> but first, 'authoricity'.  From the (extremely few) usages indexed by Google, it can denote "[intended or effective] authoritative-ness or definitive-ness"... is that your usage?

[12:21] <allbery_b> (where's TreyHarris, he can probably give you a complete rundown on it... :)

[12:21] <masak> diakopter: that's my usage

[12:22] <masak> diakopter: "authority" felt like something else when I tried it

[12:22] <masak> even if it can probably also be used to denote what "authoricity" denotes

[12:23] *** iblechbot joined
[12:25] <diakopter> allbery_b: I was trying to be archaic, hence "suffer" for "allow" or "let me have".

[12:29] <diakopter> albery_b: it sounded like you were correcting me, but now I'll assume you weren't. :)

[12:35] *** Gothmog_ left
[12:36] *** nipotan is now known as nipotaway

[12:36] <allbery_b> no, I dropped in late and didn't spot any context in a quick scan of backscroll

[12:37] <allbery_b> what I did see implied someone trying to figure out unusual English usage so I tossed that in

[12:40] <diakopter> ah. :)

[12:40] <diakopter> msft is BSDish-licensing IronRuby's source...

[12:41] <diakopter> oh, I'm behind the times.

[12:43] <masak> diakopter: they are? cool. kudos to msft

[12:45] *** TJCRI joined
[12:48] <diakopter> TextMate doesn't like audrey's nested .hs block comments

[12:49] <masak> well, it's open source, isn't it? should be able to change

[12:51] <diakopter> the syntax highlighting grammar is, yeah

[12:51] <masak> yes. maybe not the editor itself

[12:51] <masak> would be difficult to sell for money then

[12:52] <diakopter> thoughtpolice: ping

[12:55] *** dwave left
[12:57] *** jhorwitz joined
[12:59] *** Schwern left
[13:00] *** Schwern joined
[13:00] *** Schwern left
[13:02] *** Schwern joined
[13:02] *** drrho left
[13:05] *** jhorwitz left
[13:05] *** jhorwitz joined
[13:06] *** jhorwitz left
[13:07] *** jhorwitz joined
[13:13] *** Aankhen`` joined
[13:13] *** xinming_ joined
[13:19] *** mncharity joined
[13:23] <pugs_svnbot> r17185 | diakopter++ | minor corrections; still haven't determined whether the draft Concurrency.POD should be linked from here... any suggestions, anyone?

[13:23] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17185

[13:25] *** xinming left
[13:32] <masak> speaking of which, I'd like to remind anyone who has the required bits to change it,

[13:32] <masak> that http://perlcabal.org/syn/ has a broken link

[13:32] <masak> namely A07, http://dev.perl.org/perl6/doc/design/apo/A07.html

[13:33] <masak> now I know the background of A07, and that it doesn't contain any essential text

[13:33] <masak> but still, I think it's a shame that it gives a 404

[13:34] <masak> the official docs of a product contribute to much of the initial impression about the product

[13:34] <masak> and perlcabal.org/syn are as much official docs for perl6 as you can get

[13:35] <masak> people will get the 404 and go "oh well, guess there's not enough people reading those docs to have noticed yet"

[13:36] <masak> "guess there's not that much interest for perl6, then"

[13:36] <masak> ...which I think would be sad, when it's very easy to patch

[13:36] * masak winds down

[13:36] *** thepler joined
[13:37] *** hkb_zz left
[13:38] *** hkb_zz joined
[14:00] *** BooK_ left
[14:07] *** BooK joined
[14:25] *** amnesiac joined
[14:32] <diakopter> masak: is there an A07 anywhere?

[14:32] <masak> I should think so

[14:32] <masak> but it's very small

[14:33] <masak> basically says that it didn't need to be written

[14:33] <masak> because formats are not core anymore

[14:33] <masak> I don't know where or if it can be found on the net

[14:34] <masak> but I remember reading it at some point

[14:34] <masak> and there's a (broken) link to it, but not to many of the other Axx

[14:36] <masak> diakopter: how's it going with my questions? :)

[14:37] <masak> don't want to rush you in any way, but I'm very curious

[14:40] *** IllvilJa joined
[14:40] <diakopter> masak: :P slowly... was afk for a while. building my new 1GB vps for slightly-more-private-than-feather development... http://www.vpsfarm.com/

[14:40] <lambdabot> Title: vpsFarm

[14:40] <masak> diakopter: ok, don't let me slow you down further :P

[14:42] *** qmole left
[14:42] <diakopter> (a darn good deal if you ask me... and I've tried several vps companies - unixshell.com(1 too many lost-all-data crashes) prgmr.com(yikes! 3 too many lost-all-data crashes) and spry.com/vpslink.com (1 too many lost-all-data crashes).  Haven't lost any from vpsfarm.com yet.

[14:43] * avar likes slicehost.com

[14:43] * masak agrees with the 'yikes', in general

[14:43] <diakopter> haven't tried that one yet - it's always been somewhat more expensive than those others I mentioned.  If vpsfarm fails me... I'll try slicehost next.

[14:44] <masak> I haven't needed such solutions yet. diakopter, what do you use them for?

[14:48] <diakopter> masak: clients/employers need commodity offsite backup locations (that are more customizable than the ASP offerings), email filtering/holding/hosting, vpn/proxy endpoints... and I like to toy around on them. it's like having vmware or parallels, except much easier (less laptop hdd intensive, I mean) to reload OS images while "learning" tricky system admin skills. :)

[14:50] <diakopter> vpsfarm.com is the best I've seen, so far... and of course, by far, the cheapest.  $40/month for 1GB ram and 5Mb/s throttled/unmetered.  Oh, and I also use them for file distribution/hosting for clients/employers.

[14:51] <diakopter> you don't get a VPS for the CPU... you get one for the memory and bandwidth.

[14:51] <masak> ok

[14:54] *** rdice joined
[14:54] <diakopter> btw, all those companies advertised RAID1/5 storage for their vps' filesystems.  But in each case of failure, it was the RAID controller that failed, and the arrays couldn't be rebuilt on a replacement controller, either because "couldn't get an exact-model replacement in time" or "the dying controller ruined the array".

[14:55] <diakopter> (so they said)

[14:55] <Juerd> That's why I always use software raid.

[14:55] <Juerd> BTW, my company has VPS'es too

[14:55] <Juerd> See www.rootaccess.nl </spam>

[14:55] <diakopter> so... for clients I get them in pairs, and make the vps host insist they're on distinct machines.

[14:56] <Juerd> (We still haven't built a real site, because we're doing well enough without even)

[14:56] <diakopter> Juerd: can you beat vpsfarm.com's prices?

[14:56] <Juerd> I have no idea

[14:56] <Juerd> I'm not interested in beating prices, to be honest.

[14:56] <Juerd> No, I can't

[14:57] <diakopter> Juerd: I will definitely let you know as soon as vpsfarm has a crash or goes out of business or something :)

[14:57] <diakopter> RAID-10 in software?

[14:59] *** moritz joined
[14:59] <Juerd> Yes.

[14:59] <moritz> masak: do you still need an irc log solution?

[14:59] <masak> moritz: yes. I've asked on #irclogger, but they have not responded yet

[14:59] <Juerd> diakopter: I've stress tested that extensively and it works very well

[15:00] <Juerd> We have great I/O on our servers

[15:00] <diakopter> oh, interesting, it can even do RAID1+0ish on odd numbers of disks.

[15:00] *** irclogbot left
[15:00] <moritz> masak: my server is rebooting atm (new kernel or something), after that I can start logging

[15:00] *** irclogbot joined
[15:00] *** moritz_ left
[15:00] <Juerd> diakopter: We use it on 4 disks, the old fashioned way

[15:00] <masak> moritz: cool

[15:00] <moritz> masak: if you have old logs (irssi or something), so can mail me and I'll try to parse and import them

[15:01] <masak> moritz: I don't

[15:01] <masak> not sure if Emacs' erc saves my logs, but it's nothing I've enabled

[15:01] <masak> anyway, even if it does, it's not much and it doesn't really matter

[15:02] *** Casan left
[15:02] <moritz> allright, don't worry

[15:02] <masak> ok

[15:03] *** Casan joined
[15:03] <diakopter> @tell TimToady in case you missed the hilite....   perlDreamer?> TimToady: In S29, there are only 3 argument forms of substr defined.  Does that mean that the 2 and 4 argument forms from perl5 do not exist in perl6, or that since they are unchanged they remain?

[15:03] <lambdabot> Consider it noted.

[15:04] * moritz waits for his server to come up again

[15:07] <diakopter> open question for all: remember we discussed funding Perl 6 work previously?  Please help me get an idea of how much anyone here would "pledge" (commit to fund on a monthly-for-12-months or prepaid annual basis) if 200% matching funds to your pledges were promised.  Would anyone here pledge, and how much.

[15:08] <diakopter> in other words, some (possibly anonymous) benefactors promise to pledge $40/month for every $20/month that anyone pledges/commits.

[15:09] * masak senses an infinite loop there somewhere

[15:09] <diakopter> (assuming full transparency and consensus for the identity, goals, and activities of the supported person, but not assuming US tax-deductible donations).

[15:10] <integral> And what's the money used for? http://www.perlfoundation.org/parrot_grant_from_nlnet shows lots of unclaimed money for parrot

[15:10] <diakopter> that anyone *else* pledges/commits.

[15:10] <moritz> integral++ # that's my question as well

[15:10] <masak> diakopter: that's better :)

[15:10] *** franck____ left
[15:10] <moritz> diakopter: I think the microgrants took a long time to be consumed...

[15:10] <[particle]> integral: that money is free for the taking. feel free to attack one of the milestones listed there

[15:11] <integral> There's also TPF's microgrants, of which, only 4 have been allocated

[15:11] <[particle]> moritz: there are still 5 microgrants that hasn't been consumed

[15:11] <moritz> diakopter: and audreyt++ might want to get paid for pugs hacking, but not at the moment...

[15:11] <moritz> [particle]: good to know ;)

[15:12] <[particle]> it'd be a shame to come out of conference season without any new microgrant proposals

[15:14] <diakopter> [particle]: do you get to see the ones that are rejected?  Have there been (m)any that were rejected?

[15:15] <[particle]> diakopter: i don't get to see them, that's for jesse and leon. but i talked to jesse, and there haven't been many proposed

[15:15] <[particle]> i'm not aware of any that have been rejected -- but there may have been a few

[15:17] <moritz> the java2perl6 module that was mentioned earlier - is that the (intermediate) result of one of the  micro grants?

[15:17] <diakopter> seems to me that anyone who knows alot about the status of the project wouldn't propose something that would get rejected... so it makes sense that there haven't been (m)any rejected.  I suppose an "outsider" could submit a non-serious proposal, though.

[15:18] <moritz> aye

[15:20] <masak> allright, gotta go

[15:20] <diakopter> moritz: yeah, see perlfoundation.org/microgrants - Phil Crow...

[15:20] <masak> see you all

[15:20] <diakopter> masak: I'll be online in your morning

[15:20] <masak> diakopter: good. see you then

[15:21] <moritz> masak: see you ;)

[15:21] <masak> moritz: yes. I'll be back sometime tonight

[15:21] *** masak left
[15:22] <moritz> hopefully my server is back then ;)

[15:22] <diakopter> moritz: regarding where the funding/matching funds would go - I hadn't thought about that, specifically.  I was assuming consensus among the benefactors could be reached about that.  I was more interested in finding out who would be willing to pledge the small amounts, if they knew that their small amounts would be multiplied by 3.

[15:23] <moritz> diakopter: I'd be willing to donate a bit if I knew _in advance_ where it went...

[15:23] <moritz> diakopter: and given the fact that there _are_ unused funds (though not too much, I guess) that's the question that has to be answered first

[15:24] <diakopter> oh, that's what I meant; sorry.  The pledges would all be tentative, pending assignment/consensus.

[15:24] <moritz> diakopter: but I do appreciate your effort

[15:24] <diakopter> I'm not looking for "pledges" here on the channel, I'm just asking how much anyone would "consider" contributing.

[15:24] <moritz> I think I'd donate up to 300$ once

[15:25] <moritz> you can divide that by 12 for your self ;)

[15:25] <diakopter> heh

[15:26] <moritz> ?eval ~ 300/12

[15:27] <diakopter> um, evalbot is currently dead.

[15:27] <diakopter> I, uh, was fixing it.... :( but...

[15:27] <diakopter> gimme a second; thanks for the reminder.

[15:29] * moritz reminds evalbot to raise from the dead

[15:29] <diakopter> I created a fresh .svk (2.0.2) mirror/local of pugs in the process, btw... someone should .bz2/post that somewhere.

[15:31] <diakopter> I mean, b/c audreyt's .svk is ... in an unknown state of usability.

[15:31] <moritz> and I should publish my git mirror

[15:31] *** orafu left
[15:31] <moritz> I first did it on my server, but the differnt versions of git-svn caused that not to update correctly :(

[15:32] <moritz> so I guess I'll just install a cron job on feather

[15:33] <diakopter> oh... yeah... git-svn on feather is like, bleeding edge.

[15:34] <moritz> 1.5.3~rc1-1

[15:34] <moritz> as opposed to 1.4.4.4-2 on debian etch

[15:35] *** Gothmog_ joined
[15:36] *** irclogbot left
[15:36] *** irclogbot joined
[15:36] *** moritz left
[15:37] *** Blwood is now known as dingotux

[15:37] *** dingotux is now known as Blwood

[15:37] *** moritz joined
[15:38] *** perlDreamer joined
[15:41] *** evalbot6_r17176 joined
[15:41] <diakopter> whoa; it actually worked.

[15:42] <diakopter> ?eval 300*3/12  # 25, duh

[15:42] <diakopter> 75

[15:42] <diakopter> lol

[15:43] <diakopter> hm, well

[15:43] <diakopter> <sigh>

[15:43] <diakopter> (at least the revision number is correctly appearing now)

[15:44] <moritz> ?eval 1

[15:44] *** nekokak_ joined
[15:44] *** evalbot6_r17176 left
[15:44] * diakopter tries again

[15:52] <diakopter> boy..... it's slow to svk update -s ; svk info ; make clean ; make soon

[15:56] *** pugsbot_r17185 joined
[15:56] * Juerd wonders when TPF will wire the money

[15:56] <Juerd> I hope it'll happen before thursday, but probably not

[15:56] <Juerd> I'll be gone for a week from friday afternoon

[15:57] <[particle]> Juerd: i suggest you follow up with email. i've found that pestering helps speed things up

[15:57] <diakopter> ?eval 1

[15:57] *** unobe joined
[15:57] <diakopter> argh.

[15:57] <Juerd> [particle]: Did that, obra helped too.

[15:58] *** sunnavy left
[16:00] *** Eidolos_ is now known as Eidolos

[16:02] *** nekokak left
[16:04] *** xinming_ is now known as xinming

[16:13] <obra> [particle]: we're already fully pestering

[16:16] <[particle]> great :) there are others waiting on tpf money, too

[16:20] <Juerd> I wonder what is slowing this small organization down

[16:20] <Juerd> Perhaps lack of tuits, perhaps fundamental problems. It's so opaque so we can only guess :|

[16:21] *** orafu joined
[16:22] *** franck___ joined
[16:23] *** Blwood is now known as Ivanlef0u

[16:23] *** Ivanlef0u is now known as Blwood

[16:24] *** weinig joined
[16:25] <diakopter> Juerd: it appears there is someone named as Treasurer, but who is Ex officio

[16:27] <Juerd> Aha

[16:27] <Juerd> Maybe phones would work

[16:27] <Juerd> It's a relatively new invention that helps people communicate over arbitrary distance ;)

[16:29] <diakopter> in realtime!!! :)

[16:29] <rgs> in _constant_ time

[16:29] <diakopter> rgs: thanks, yes.

[16:29] <SamB> eh.

[16:29] <SamB> you guys didn't get very far in physics, did you?

[16:31] <Juerd> rgs++

[16:31] <Juerd> samb++

[16:31] <Juerd> SamB: Sufficiently arbitrary distance, then :)

[16:31] <amnesiac> same SamB as ##C?

[16:32] <SamB> yeah

[16:32] <Juerd> It's not like the Treasurer is likely to be on another planet :)

[16:32] <amnesiac> I see

[16:32] <amnesiac> same Juerd as ##perl? :P

[16:32] <Juerd> There's a ##perl? Where?

[16:32] <diakopter> SamB: that's kind of a snide remark. :/ Some people stop a course of education for reasons other than not being able to "get" further.

[16:32] <amnesiac> at undernet

[16:32] <amnesiac> and dalnet!

[16:32] <Juerd> I'm on undernet? Dalnet?

[16:32] <Juerd> Hm

[16:32] <Juerd> Could be :)

[16:32] <Juerd> As far as I know, I'm the only Juerd who writes Perl.

[16:33] <Juerd> There are a few other Juerds, but I've never seen anyone with this name do anything with Perl

[16:33] <amnesiac> I'm the only Marco that writes Perl!

[16:33] <SamB> diakopter: I meant, if they'd taken it they ought to remember that we don't know how to make things go faster than the speed of light

[16:33] <Juerd> amnesiac: No :)

[16:33] <amnesiac> Juerd, dang!

[16:33] <amnesiac> Juerd, well, the only mexican Marco

[16:33] <amnesiac> better? :P

[16:33] <Juerd> Can't verify that :)

[16:33] <amnesiac> :/

[16:34] <Juerd> I think it's funny that approx 99% of all Google hits on "Juerd" are related to me.

[16:34] *** justatheory joined
[16:34] <Juerd> Yay for CPAN and its gazillion mirrors.

[16:34] <SamB> diakopter: I wasn't trying to insult their intelligence

[16:34] <amnesiac> with my name, Google shows my CPAN account too.

[16:34] <amnesiac> and all the stuff I've been into

[16:35] <amnesiac> (including drugs and pr0n movies)

[16:35] <Juerd> diakopter: He didn't mention any reasons for stopping...

[16:35] <diakopter> Juerd: not explicitly, no.

[16:38] * Juerd did not get very far in physics

[16:38] <Juerd> I got far enough in Perl though

[16:38] * moritz is much further in physics than in perl 

[16:38] <moritz> I which I knew my perl nearly as well as my physics ;)

[16:39] <Juerd> I guess what I'm trying to say is that if that remark offended you, you might be a bit over sensitive

[16:39] <Juerd> In my humble opinion, of course.

[16:41] <SamB> or maybe I'm insensitive!

[16:41] <meppl> gugu

[16:41] <SamB> meppl: what you do that for?

[16:42] <diakopter> Juerd: I got the message; I appreciate the sentiment.  I was [and remain] unoffended, but I did find it annoying that SamB didn't read my mind and see that I said "realtime" when I meant "synchronous".

[16:42] <meppl> good evening samb

[16:42] <meppl> SamB, just for greeting

[16:42] <diakopter> :D

[16:42] <SamB> heh

[16:42] <SamB> ah.

[16:42] <SamB> good, um, lunchtime ;-)

[16:43] <meppl> bon appetit samb

[16:43] <moritz> Juerd: the changeset r17181 changed index.html on www.pugscode.org 21 hours ago, and still isn't showing on the front page...

[16:44] <moritz> Juerd: could you please check if the synchronisation works?

[16:44] <moritz> or am I missing something stupid here?

[16:44] *** Aankhen`` left
[16:48] *** weinig is now known as weinig|brb

[16:52] *** dalecooper left
[16:52] <Juerd> moritz: ENOTUIT

[16:53] <diakopter> moritz: I'll look at it after the evalbot is fixed

[16:53] <diakopter> I'm not sure what's wrong.  it's setup nearly exactly the same way as it is in audreyt's tree.

[16:54] *** pugsbot_r17185 left
[16:54] <moritz> ok

[16:55] <moritz> diakopter: does the no-autobuild evalbot work for you?

[16:56] <diakopter> haven't tried running it without the wrapper.

[16:59] *** weinig|brb is now known as weinig

[17:00] *** pugsbot_r17185 joined
[17:00] <diakopter> ?eval "I'm a bot"

[17:01] <moritz> \"I'm a bot", Bool::True

[17:02] *** pugsbot_r17185 left
[17:08] *** hkb_zz is now known as hakobe

[17:13] *** pugsbot_r17185 joined
[17:14] *** vel joined
[17:14] *** beppu joined
[17:14] *** pugsbot_r17185 left
[17:14] *** TJCRI left
[17:14] <moritz> ?eval 1

[17:15] <diakopter> ahah

[17:15] <diakopter> it's b/c multiple dispatch is broken.

[17:15] <diakopter> (eye roll).

[17:16] *** flokuehn left
[17:19] *** Psyche^ joined
[17:26] *** qmole joined
[17:31] *** Patterner left
[17:31] *** Psyche^ is now known as Patterner

[17:32] *** pugsbot_r17185 joined
[17:34] <diakopter> ?eval 1

[17:34] <pugsbot_r17185> 1

[17:35] <diakopter> oh look, I can work around pugs' brokenness.  ran across an interesting question, though... one minute...

[17:37] *** pugsbot_r17185 left
[17:38] *** vel left
[17:40] *** amnesiac left
[17:43] *** amnesiac joined
[17:43] *** TJCRI joined
[17:56] *** moritz left
[17:56] *** moritz joined
[17:56] *** moritz left
[17:59] *** jisom joined
[18:00] *** fglock joined
[18:00] <fglock> hi

[18:00] <lambdabot> fglock: You have 1 new message. '/msg lambdabot @messages' to read it.

[18:01] *** moritz_ joined
[18:01] <diakopter> fglock: hi

[18:02] <fglock> diakopter: hey

[18:02] <obra> hey fglock

[18:02] <obra> how's life?

[18:03] <fglock> I'm doing the tourist thing :)

[18:03] <obra> nice

[18:03] <moritz_> where?

[18:04] <fglock> and a bit of $work - I'm implementing a language-to-java translation - with several parts reusable for kp6

[18:04] <fglock> moritz_: Lisbon

[18:04] <obra> what language? ;)

[18:05] <moritz_> fglock: cool ;)

[18:05] <fglock> it's called "tea", but there seems to be several languages named like that

[18:05] <fglock> I'm finishing the type analysis

[18:06] <fglock> the grammar is written in Perl 6

[18:06] <moritz_> cool ;)

[18:10] <fglock> ruoso is implementing the Java emitter 

[18:11] <avar> fglock: what $work allows you to hack p6?:)

[18:11] <ruoso> actually I'm doing tree transformations in tea itself now...

[18:11] <ruoso> refactoring the syntax tree

[18:12] <ruoso> so that if { func(); func() } { then() } { else () } can be written more sanely in java

[18:12] *** rindolf joined
[18:12] *** dduncan joined
[18:13] <ruoso> it would be nice if there was a way to manipulate the tree in a more readable way

[18:13] <fglock> avar: it's a code base migration - we are the R&D crew :)

[18:13] <ruoso> I think that applies to kp6, don't it fglock?

[18:13] <ruoso> currently the tree transformation is weird Perl 5 code

[18:13] <rindolf> ruoso: what is kp6, BTW?

[18:14] <ruoso> kinda-perl-6

[18:14] <ruoso> a subset of Perl 6 and a supper set of mini-perl-6

[18:14] <fglock> hmm - we could have a tree transformation library, or a tree transformation language

[18:14] <ruoso> I need to take a better look in TGE, but at the first sight, it seems very parrot specific

[18:15] <avar> fglock: Take a lesson from lisp, trees are naturally lists of lists:)

[18:15] <[particle]> forget tge (it's parrot-specific). look at nqp

[18:15] <rindolf> Hi all, BTW.

[18:15] <avar> So I guess if you have a easily modifyable ast everything leads from thereon:)

[18:15] <ruoso> actually, I figured out that the match should be more like a tree

[18:15] <fglock> nqp?

[18:16] <ruoso> actually implementing a tree-traverser of the match is kind of always case-by-case

[18:16] <ruoso> as the match object is today

[18:16] <obra> nqp is patrick's "perl6 like language for tree transformation"

[18:16] <obra> I believe it's a proper subset.

[18:16] <[particle]> not-quite-perl

[18:16] <ruoso> nice... any links?

[18:16] <[particle]> sure!

[18:17] <[particle]> http://svn.perl.org/parrot/trunk/languages/nqp/

[18:17] <lambdabot> Title: Revision 20381: /trunk/languages/nqp

[18:19] *** buetow left
[18:19] <ruoso>  hmmm

[18:19] *** buetow joined
[18:19] <ruoso> doesn't seems to be much of help in our case...

[18:20] <ruoso> at least I didn't see anything tree-specific

[18:23] <ruoso> [particle], did I miss something or it is just a subset of perl 6?

[18:24] <moritz_> rindolf: hi, see http://www.pugscode.org/kp6.html ;)

[18:24] <lambdabot> Title: kp6 - KindaPerl6

[18:25] <rindolf> moritz_: I see.

[18:26] * moritz_ was too dump to really help with kp6, so he wrote this homepage instead

[18:28] <moritz_> are io layers supposed to work with STDOUT in p5?

[18:29] <moritz_> open(STDOUT, '>:utf8', $file)

[18:29] <moritz_> that doesn't work for me

[18:29] <[particle]> ruoso: it's a subset of perl 6, but will be used for tree transformation in parrot

[18:29] <rindolf> moritz_: I think so, yeah.

[18:30] <ruoso> hm.. I see, it will be used with TGE, turning TGE less parrot-specific (is it?)

[18:30] <[particle]> well, no, nqp uses tge to build itself.

[18:30] <moritz_> ok, then I'll write a bug report

[18:30] <ruoso> but anyway... It really would be nice if the match object had a tree interface

[18:30] <[particle]> until nqp is bootstrapped (possible but not high-priority) we'll keep tge around

[18:31] <ruoso> but, nqp, being a subset of perl 6, won't help that much with tree transformation

[18:31] * ruoso saying that from this specific experience

[18:32] <ruoso> we need something that looks like XSLT to transform a match into something else

[18:32] <[particle]> ruoso: it will certainly help us in parrot, we'll be replacing the parse -> PAST transformations with nqp

[18:33] <ruoso> [particle], I see, but I'm talking about yet another abstraction layer

[18:36] <ruoso> maybe a pluggable tree interface that could keep that logic..

[18:37] <ruoso> and a tree transformation engine that understands that tree interface

[18:38] <fglock> we could apply a 'Tree' role to the Match class  # ???

[18:38] <ruoso> that would work

[18:39] <ruoso> actually, it should be two different objects

[18:39] <ruoso> so that the match object doesn't have any info of where it is in the tree

[18:39] <ruoso> what makes it possible to change the "data" for a node

[18:39] <ruoso> without losing the children

[18:42] <ruoso> eventually the tree could have all the "data" slots changed, but still have the same strucutre

[18:42] <fglock> my $tree = MyTree.from_match( $/ )

[18:42] <ruoso> or have all the "dat" slot unchanged, but with a complete different structure

[18:43] <ruoso> that seems sane...

[18:43] <ruoso> Considering the match is turned into a tree

[18:43] <ruoso> we need a language to specify the transformations

[18:44] <ruoso> like a Grammar is to text

[18:45] <fglock>  $/.xml

[18:45] <ruoso> fglock, $/.dom would be better, actually

[18:45] <fglock>  # xslt

[18:46] <ruoso> $/.xml_dom

[18:47] <ruoso> actually, thinking about xml as a way to represent a match is very much straight-forward

[18:47] *** franck___ left
[18:47] *** franck___ joined
[18:48] <fglock> PCR::Runtime::Match::XMLDOM ?

[18:48] <ruoso> specially in terms of debugging the grammar

[18:48] <ruoso> analysing a XML file is easier than the output of Data::Dumper ;)

[18:49] <fglock> how about the compiler environment  # implemented as closures

[18:50] <ruoso> that should be part of the transformation language

[18:50] <ruoso> and stored inside the tree as appropriate

[18:51] <fglock> for example - a BEGIN block that modifies the grammar

[18:51] <fglock> in a specific scope

[18:51] <ruoso> hmmm...

[18:51] * ruoso in crazy mode...

[18:52] <ruoso> so the entire Perl 6 grammar is part of the compiler env, rihgt?

[18:52] <fglock> yes

[18:52] <ruoso> this is actually a sad thing, because this way we can't have multi-stage compilers...

[18:53] <fglock> BEGIN only executes at the first stage

[18:53] <ruoso> but it runs arbitrary code that can change the compiler environment

[18:54] <ruoso> so, the first stage must have available all the other stages 

[18:54] <ruoso> which, in the end turns everything into a single stage again

[18:54] *** stevan_ left
[18:56] <fglock> kp6 BEGIN finishes with a tree transformation

[18:56] <fglock> which copies the side-effects back to the AST under construction

[18:56] <fglock> what if BEGIN returned xslt ?

[18:57] <ruoso> we would need to know exactly what happens inside BEGIN... which we don't

[18:57] <ruoso> the idea of a simple copy

[18:57] <ruoso> seems simpler

[18:58] <fglock> hmm - after BEGIN finishes, we can get to the side-effects

[18:59] <fglock> such as, a global was modified

[18:59] <ruoso> we copy the env to the new compiler instance that will handle BEGIN, and then copy it back to the tree representing that this new tree is available after that statement

[19:00] *** stevan_ joined
[19:02] *** bcmb_ joined
[19:03] *** franck____ joined
[19:05] *** masak joined
[19:06] *** jettero left
[19:06] *** jettero joined
[19:07] *** weinig_ joined
[19:07] *** weinig left
[19:11] *** franck___ left
[19:12] *** hakobe is now known as hkb_zz

[19:14] *** weinig joined
[19:14] *** Blwood left
[19:14] *** weinig_ left
[19:15] <fglock> [from the offline discussion] compile-time pads must be serializable, so that we can represent them in the tree

[19:15] *** bcmb left
[19:19] <ruoso> TimToady, ping

[19:19] <ruoso> one of the big things of the BEGIN in Perl 6 is that it can change the grammar, right?

[19:20] <ruoso> and this change will affect the compilation from that point on

[19:20] <moritz_> aye

[19:20] <ruoso> how exactly is the syntax for that?

[19:20] <ruoso> and how is the compiler supposed to handle a parse tree with a different structure?

[19:21] <moritz_> I don't know... one way to change the syntax is to define new/override old operators

[19:22] <moritz_> the other thing is you can just define a token the STD namespace, and per mmd it will be used instead of the original one

[19:22] *** JarJarBinks left
[19:22] <ruoso> would that be a substitution rule that generates parseable code?

[19:22] <moritz_> at least that's how I think it works

[19:23] *** ilogger2 joined
[19:24] <ruoso> moritz_, actually, that's what macro are

[19:24] <TimToady> a macro is just a convenient way for a user to write a new grammar rule

[19:24] <lambdabot> TimToady: You have 1 new message. '/msg lambdabot @messages' to read it.

[19:25] <ruoso> TimToady, yes... and that's not what I'm talking about... I'm talking about that COMPILING::<$?PARSER> thing...

[19:26] <TimToady> there is some speculation in the comments at the top of STD about that, but obviously they are not entirely fleshed out yet.

[19:26] * ruoso reading that, and getting no clue about how it should work ;)

[19:26] <TimToady> certainly you are correct that it doesn't make much sense to swap in grammar rules without also adding corresponding semantic rules

[19:27] <TimToady> unless you're just testing for syntactic correctness...

[19:27] <TimToady> but basically you just never return something from a grammar reduction that you don't also have a way to handle downstream

[19:27] <ruoso> but the problem is that the code accepted as correct by a new rule (not counting macros) will be completely unknown to the compiler in the second stage

[19:27] <TimToady> there is no "the compiler"

[19:28] <rindolf> Hi TimToady 

[19:28] <TimToady> Perl 6 isn't a single language

[19:28] <ruoso> s/the/one/

[19:28] <moritz_> ruoso: no necessarily.. if you just overwrite a rule, and insert the same {*} tokens, the semantics might not see the changes at all

[19:28] <moritz_> s/no\b/not/

[19:28] <ruoso> moritz_, and that's a mine field ;)

[19:29] <moritz_> ruoso: aye. most fiddling with internals is ;)

[19:29] <TimToady> {*} is just a kludge currently to avoid speccing the AST transforms in STD.pm

[19:29] <ruoso> TimToady, we stop then in the need for a language for the second compiling stage, where the parse tree is transformed in a semantic tree

[19:30] <TimToady> the important point about {*} is that it is bound to a semantic identity

[19:30] <ruoso> which is where this discussion started, btw...

[19:30] <ruoso> heh

[19:30] <TimToady> if you change the semantics of {*}, then you have to give it a different identity

[19:30] <moritz_> TimToady: right. Which makes it possbile to attach documentation instead of a compiler to the grammar ;)

[19:30] <TimToady> p6 is all about maintaining identity of the "current language"

[19:30] <moritz_> TimToady: that's what I want to do for perlhints

[19:31] <TimToady> yeah, though I think they are kinda tending to clutter STD in the same way that explicit reductions would

[19:31] <TimToady> maybe we can get those indirect like the reductions

[19:32] <ruoso> the problem is that getting to the AST is a bigger problem than it looks at first sight

[19:32] <ruoso> even if you can parse correctly the code

[19:32] <ruoso> parsing is now (thanks to Perl 6 rules) the easiest step

[19:32] <ruoso> but transforming that into something actually usefull is another story

[19:34] <TimToady> well, of course, minimally you can just interpret the AST like pugs.  everything else is optimization.  :)

[19:35] <TimToady> which, of course, explains pugs blazing speed  ;)

[19:35] <TimToady> *pugs's

[19:36] <TimToady> *not* interpreting the AST directly is one way that p5 got faster than p4

[19:37] <TimToady> but I completely agree that it's a fair amount of work, or maybe an unfair amount of work

[19:37] <ruoso> yep... the experience from this "tea" compiler shows that...

[19:38] <ruoso> I'm quite sure that we need a "tree grammar language" to make this job acceptable

[19:39] <TimToady> we were working on something like that earlier in the design of p6

[19:39] <TimToady> mostly based on binding tree nodes to signatures

[19:39] * ruoso votes for getting to work on that again ;)

[19:39] <ruoso> heh

[19:40] <TimToady> with a sufficiently restricted subset of returns you can even make it reversible

[19:40] <[particle]> timtoady: pmichaud and i discussed a possible #{*} for a hook that didn't affect longest-token analysis

[19:40] * ruoso feels the smell of functionall programming again...

[19:41] <[particle]> ruoso: see txl for a tree transformation language i happen to like

[19:41] <ruoso> [particle], url?

[19:41] <TimToady> after having spent months teaching the p5 compiler not to forget things just so I could do p5-to-p6, I am a little more pleased with the idea of reversibility than I was 15 years ago...

[19:42] <[particle]> http://www.txl.ca/

[19:42] <lambdabot> Title: TXL Home Page

[19:42] <TimToady> [particle]: well, by definition a comment wouldn't affect anything, but it also doesn't give you anything that actually gets called.

[19:42] *** sunnavy joined
[19:43] <TimToady> a <?{*}> assertion doesn't affect longest token and still gets called (eventually)

[19:43] <[particle]> TimToady: yeah, i know. it would mean smart comments

[19:43] <TimToady> I don't like smart comments, actually

[19:43] <[particle]> what about reserving <*>

[19:43] <TimToady> the #= stuff notwithstanding

[19:43] <TimToady> I think we even mentioned <*> a couple of weeks ago.  It's certainly available.

[19:44] <[particle]> in general, i agree, but the door opened with #= :)

[19:44] <TimToady> #= was aimed at enabling a preprocessor kludge

[19:44] <TimToady> I wasn't expecting pm to turn it into real smart comments. :)

[19:45] <diakopter> TimToady: it's in its pugs form, but check this out:  http://rafb.net/p/JtCYyZ42.html

[19:45] <lambdabot> Title: Nopaste - foobar

[19:45] <[particle]> you ivory tower designers just don't know a good implementation hack when you spec one :)

[19:45] <diakopter> chromatic clarified the question: <@chromatic> I think the question is "Why does binding a code block to a module-global name occur at the point of compilation, not at the point of execution within a surrounding context?"

[19:46] <diakopter> then, my next question was: Is Perl 6 supposed to change this behavior (and why [not])?

[19:48] <masak> TimToady: do you happen to know what today's best method for getting p6 source -> AST is?

[19:48] <ruoso> masak, actually that's the question of the day ;)

[19:49] <TimToady> masak: depends on which subset of p6 you want to run.

[19:49] <masak> ruoso: woot

[19:49] <masak> TimToady: the tests, which would be all of p6, I guess

[19:49] <masak> I aim to do statistics on the tests

[19:49] <ruoso> it would be better if we had a p6 AST definition

[19:49] <ruoso> :)

[19:50] <TimToady> I was hoping the implementors would just all get together and agree on an AST, just like they did a grammar, oh wait...

[19:50] <pasteling> "pugsbot_r17185" at 193.200.132.135 pasted "Pugs build failure" (6 lines, 278B) at http://sial.org/pbot/26583

[19:51] *** pugsbot_r17185 joined
[19:51] <moritz_> ?eval 1

[19:51] <pugsbot_r17185> 1

[19:51] <masak> ?eval $?VERSION

[19:51] <pugsbot_r17185> \"6.2.13"

[19:52] <diakopter> yeah, it seems ok now

[19:52] <moritz_> diakopter++ # being *bot SLAVE ;-)

[19:52] <fglock> http://svn.pugscode.org/pugs/src/Pugs/AST/CapInternals.hs inspired kp6 AST, but it's not exactly as-is

[19:52] <diakopter> b/c mmd is broken in pugs currently, it was always calling the {...} placeholder subs.

[19:52] <diakopter> which led to my question on #parrot... and me repeating it here. :)

[19:52] *** thoughtpolice joined
[19:53] <TimToady> I'm going to have to spend a lot of time backlogging after lunch...

[19:54] *** weinig joined
[19:55] *** diotalevi_ joined
[19:58] <masak> `pugs -CParse-Pretty` seems to do what I want

[19:58] <masak> except I would prefer not to parse text at all

[19:58] <masak> can I get the same as p5 or p6 objects?

[20:00] <fglock> masak: pugs -CPIL1-Perl5 -e ' 1+1 '

[20:01] <masak> yay

[20:01] <masak> just so

[20:05] *** [particle1 joined
[20:15] *** jrockway joined
[20:17] *** szbalint joined
[20:22] *** Lectus joined
[20:43] *** TJCRI joined
[20:47] *** Lectus left
[21:21] *** TJCRI left
[21:22] *** thorat joined
[21:30] *** vel joined
[21:35] <cj> TimToady: is it ready for production yet? :)

[21:36] <cj> and did I miss anything exciting at OSCON this year?

[21:47] *** cmarcelo joined
[21:49] *** Limbic_Region joined
[21:56] *** dmq joined
[21:58] *** weinig left
[22:06] *** statico joined
[22:12] *** weinig joined
[22:13] *** vel left
[22:13] *** xinming_ joined
[22:15] *** vel joined
[22:28] *** vel left
[22:28] *** vel_ joined
[22:29] *** cmarcelo left
[22:36] *** weinig_ joined
[22:37] *** weinig left
[22:38] *** Blwood joined
[22:47] <meppl> good night

[22:51] *** polettix joined
[23:05] *** vel_ left
[23:24] *** weinig_ left
[23:33] *** wilx left
[23:33] *** wilx` joined
[23:36] <TimToady> the irc logger seems to be broken

[23:36] <TimToady> <p><a href="/irclog/out.pl?channel=perl6;date=2007-07-29">&larr; Previous

[23:36] <TimToady> doesn't like the &, apparently

[23:36] <Limbic_Region> http://colabti.de/irclogger/irclogger_log/perl6?date=2007-07-31,Tue

[23:37] <lambdabot> Title: #perl6 2007-07-31,Tue, http://tinyurl.com/ynk7kv

[23:37] <Limbic_Region> are they all broke?

[23:37] <perlDreamer> irc.pugscode.org seems to work okay

[23:39] <TimToady> false alarm; did a yum upgrade and it confused firefox till I restarted

[23:48] *** weinig joined
[23:50] *** drupek12 joined
[23:54] *** vel joined
