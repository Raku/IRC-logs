[00:14] *** polettix left
[00:23] *** Lunchy joined
[00:38] *** sunnavy joined
[00:50] *** justatheory joined
[00:51] *** muixirt2 joined
[00:59] *** muixirt2 left
[01:03] *** weinig left
[01:03] *** nipotaway is now known as nipotan

[01:06] *** lyokato joined
[01:07] *** Muixirt left
[01:09] *** nekokak_ left
[01:10] *** pro21ms4 joined
[01:11] *** nekokak joined
[01:27] *** buetow left
[01:28] *** amnesiac joined
[01:41] *** thoughtpolice joined
[02:09] *** Limbic_Region left
[02:12] *** mj41__ joined
[02:16] *** weinig joined
[02:18] *** weinig left
[02:19] *** weinig joined
[02:21] *** justatheory left
[02:29] *** mj41 left
[03:25] *** pro21ms4 left
[03:31] *** bsb joined
[03:37] *** pro21ms4 joined
[03:48] *** supery joined
[03:53] *** supery left
[03:56] *** supery joined
[04:03] *** supery left
[04:07] *** DarkWolf84 joined
[04:23] *** pro21ms4 left
[04:27] *** agentz joined
[04:28] *** agentz left
[04:36] *** nekokak_ joined
[04:45] *** shmem left
[04:45] *** shmem joined
[04:47] *** Ashizawa joined
[04:51] <DarkWolf84> hi there

[04:51] <DarkWolf84> :)

[04:53] *** nekokak left
[05:07] *** nipra left
[05:09] *** nipra joined
[05:15] *** weinig left
[05:16] *** weinig joined
[05:20] <agentzh> hi, DarkWolf84

[05:35] *** lyokato left
[05:36] *** devogon joined
[05:46] *** jisom joined
[05:46] *** lyokato joined
[06:11] *** nekokak joined
[06:29] *** nekokak_ left
[06:32] *** devogon left
[06:33] *** devogon joined
[06:33] *** charsbar joined
[06:33] *** charsbar_ left
[06:37] *** amnesiac left
[06:38] *** Aankhen`` joined
[06:46] *** Zenzizenzic joined
[06:46] *** Zenzizenzic left
[06:52] *** weinig left
[06:56] *** franck___ joined
[06:59] <moritz_> good morning ;)

[07:06] *** Helios- joined
[07:16] *** charsbar_ joined
[07:16] *** charsbar left
[07:18] *** iblechbot joined
[07:35] *** drupek1260 left
[07:36] *** rgs left
[07:43] *** franck___ left
[07:44] *** franck___ joined
[07:46] *** nothingmuch left
[07:46] *** rgs joined
[07:49] *** jisom_ joined
[07:56] *** jisom left
[07:57] *** jisom joined
[08:13] *** jisom_ left
[08:14] *** masak joined
[08:50] <moritz_> an opinion question: should docs/Perl6/Perl5/Differences.pod be kept short and concise, or should it be made more comprehensive?

[08:51] <masak> moritz_: maybe short explanations with further references to long ones in individual .pod files in docs/Perl6/Perl5/Differences/

[08:53] *** polettix joined
[08:57] <moritz_> masak: sounds good

[08:59] *** sunnavy left
[09:02] <masak> moritz_: doing neither and both at the same time. I guess that's the natural solution to everything from a Swedish perspective

[09:02] <masak> (we're good a compromising)

[09:02] <masak> s/a/at/

[09:02] *** buetow joined
[09:05] <moritz_> sweden++

[09:05] <masak> :)

[09:06] <masak> yes... the middle way is good most of the time

[09:06] <moritz_> (actually the things I hear recently about sweden are not that good... like a person id for everybody, sever problems with privacy etc.)

[09:07] <masak> I know. I'm pretty actively opposing the privacy things

[09:07] <masak> and ID for everybody, that's been here a long time I think

[09:07] <masak> that's just business as usual in Sweden

[09:07] *** theorbtwo joined
[09:08] <moritz_> I mean an ID is not a bad thing, as long as you can't do anything with it unless you have special privileges

[09:08] <masak> hm

[09:08] <masak> I don't think we have gone that far yet, no

[09:09] <moritz_> name+date of birth pretty much serves as an ID otherwise

[09:09] <masak> an ID still feels comparable to a passport or a drivers licence: it identifies you uniquely

[09:09] <masak> but the privacy things worry me

[09:10] <moritz_> apart from that I sympathize with the scandinavian countries...

[09:10] <masak> strangely enough, Piratpartiet is the first political party that brings issues to the table which I even care about

[09:10] <moritz_> and my girlfriend is half norwegean ;)

[09:10] <moritz_> masak: but currently they don't get that much votes, do they?

[09:10] <masak> no, not very many

[09:11] <masak> only in high schools and stuff

[09:11] <moritz_> that's sad

[09:11] <masak> people who don't yet have voting rights

[09:11] <masak> it shows, if nothing else, that there's a generation divide

[09:11] <masak> the elder generation criminalizes the younger

[09:12] <moritz_> which will eventually strike back by reducing pensions ;)

[09:12] <moritz_> but seriously, we have similar problems in Germany

[09:13] <masak> hm, reducing pensions would be like hitting yourself in a sense

[09:13] <moritz_> with a minister for inner affair who wants to put everyone under surveilance and has no feeling for privacy

[09:13] <masak> plus, I'm not sure the young generation is ever concerted enough to do anything as a unit

[09:13] <masak> yes, that's sad

[09:13] <moritz_> it's pretty clear that the german pension system is going bankrupt

[09:14] <moritz_> so everybody who cares (and can) builds pension fonds privately

[09:14] <masak> there are silent problems stemming from the Age Revolution, too

[09:14] <masak> people live longer and reach their actual pension age later than at 65

[09:15] <moritz_> it's raised to 67 now :/

[09:15] <masak> probably not enough

[09:15] <moritz_> aye

[09:16] <masak> Sweden is thinking of recording all their mobile phone traffic

[09:16] <masak> that's just insane

[09:16] <moritz_> it is

[09:17] * moritz_ wants more people to use cryptography

[09:18] <moritz_> we need a good crypto api in Perl 6 (back to topic ;)

[09:24] *** bloonix left
[09:25] *** bloonix joined
[09:28] *** bsb left
[09:28] *** buetow left
[09:38] *** charsbar joined
[09:38] *** charsbar_ left
[09:49] *** jisom left
[09:52] *** masak left
[09:52] *** masak joined
[09:54] *** nipotan is now known as nipotaway

[09:54] *** drupek12 joined
[10:09] *** riffraff joined
[10:11] <riffraff> ciao

[10:14] <moritz_> hi riffraff ;)

[10:23] *** nothingmuch joined
[10:23] *** fglock joined
[10:31] *** ruoso joined
[10:33] *** lyokato left
[10:35] *** Ashizawa left
[10:42] *** iblechbot left
[10:46] *** drrho joined
[10:53] *** buetow joined
[10:56] *** pbuetow joined
[11:01] *** fglock_ joined
[11:01] *** fglock_ left
[11:18] <moritz_> since most tests pass with kp6-kp6, can I consider kp6 to be bootstrapped?

[11:24] *** drupek12 left
[11:39] <fglock> moritz_: not yet, the kp6-kp6 tests dont't test for bootstrapping

[11:39] <fglock> they are runtime tests

[11:40] <moritz_> but it's an kp6 image compiled by kp6, isn't it?

[11:44] *** iblechbot joined
[11:45] *** xinming left
[11:45] *** xinming joined
[11:46] <fglock> moritz_: yes, but it needs some fixes before it can replace kp6-mp6

[11:47] <moritz_> fglock: ok

[11:47] <fglock> kp6-kp6 can't compile itself yet

[11:53] *** cognominal_ left
[11:59] *** cognominal_ joined
[12:10] <fglock> the original kp6 roadmap didn't mean to bootstrap so early

[12:11] <moritz_> so why was it attempted? because kp6 is much more hackable than mp6?

[12:17] <fglock> side-projects are good for investigating problems and alternatives

[12:18] <fglock> and because bootstrapping is fun

[12:19] <moritz_> -Ofun++

[12:21] <DarkWolf84> and that gives more bootstraping experience :)

[12:22] *** masak left
[12:22] *** masak joined
[12:24] <fglock> it also depends on what you mean by bootstrapping, plain kp6 already has a bunch of code written in Perl6 (junctions, multis, array, pair, ...)

[12:25] <fglock> kp6-kp6 is basically migrating the calling conventions in the grammar, from mp6 to kp6

[12:25] <DarkWolf84> that's  what I mean

[12:26] <DarkWolf84> most of the p6 syntax is done

[12:26] <DarkWolf84> :)

[12:26] <DarkWolf84> or just kp6 one

[12:28] <fglock> kp6 grammar is still incomplete, the next project phase would be to fix it

[12:28] <fglock> by merging STD chunks into it

[12:30] <DarkWolf84> I'm curious about emiting executables and how this will be done

[12:30] <moritz_> DarkWolf84: then write an emitter for a compileable language ;)

[12:30] <DarkWolf84> this things bootstraping and grammar are new things to me

[12:30] <fglock> DarkWolf84: you mean binaries?

[12:31] <DarkWolf84> yes

[12:32] <fglock> it would be possible to emit C right now

[12:32] <fglock> but actually making it work requires a lot of work

[12:33] <fglock> writing the C libraries

[12:34] <moritz_> even though C has no BEGIN blocks?

[12:34] <fglock> the emitted code has no BEGIN blocks

[12:35] <fglock> they are executed at compile time

[12:35] <moritz_> it's no fun writing libraries for dynamic lists, hashes and strings in C ;)

[12:35] <fglock> i think we can reuse existing libs

[12:36] <moritz_> the emitted p5 code has BEGIN blocks

[12:36] <moritz_> but they might be an artefact of the p5 emitter

[12:36] <fglock> moritz_: that's because we are using native perl5 pads

[12:36] <fglock> but C pads would be just a data structure

[12:37] <fglock> Parrot is another option, of course

[12:38] <fglock> and kp6 could even emit nqp code

[12:39] <moritz_> and parrot supports virtually all of p6 OO, so we wouldn't have to emulate OO

[12:40] <DarkWolf84> so p6-p6 will use parrot? 

[12:41] <moritz_> some day perhaps, yes

[12:41] <moritz_> that's what parrot is being made for

[12:41] <moritz_> but it doesn't mean that all implementations must use it

[12:47] <fglock> lunch &

[12:48] *** masak left
[12:49] *** demq32 joined
[12:56] <xinming> 20:26 < fglock> DarkWolf84: you mean binaries?

[12:56] <xinming> Oops. sorry. 

[12:56] <xinming> In windows, clicked right button, and didn't notice the putty is activeated. >_<

[12:57] *** cmarcelo joined
[12:57] <DarkWolf84> np :)

[12:57] *** danga joined
[12:58] *** drupek12 joined
[12:59] *** dmq32 left
[13:04] *** jhorwitz joined
[13:17] *** sunnavy joined
[13:21] *** fglock left
[13:26] *** daxim_ joined
[13:34] *** fglock joined
[13:40] *** daxim left
[13:51] *** daxim_ left
[13:52] *** riffraff left
[13:53] *** jedai joined
[13:55] *** rindolf joined
[13:59] *** pbuetow left
[14:08] *** pbuetow joined
[14:10] *** |Jedai| left
[14:23] *** pbuetow left
[14:27] *** Aankhen`` left
[14:27] *** Aankhen`` joined
[14:39] *** buetow left
[14:39] *** amnesiac joined
[14:39] *** buetow joined
[14:42] *** rindolf left
[14:52] *** masak joined
[14:56] *** toshinori_ left
[14:57] *** daxim joined
[15:00] *** [particle1 joined
[15:05] *** toshinori joined
[15:06] *** dwave left
[15:13] *** [particle] left
[15:14] *** dwave joined
[15:17] *** drupek12 left
[15:18] *** danga left
[15:18] *** danga joined
[15:21] *** [particle] joined
[15:30] *** [particle1 left
[15:46] *** dwave left
[16:02] <DarkWolf84> #pugs print pi; print e;

[16:02] <exp_evalbot> OUTPUT[3.141592653589793*** No such subroutine: "&e"␤    at /tmp/mBke6tbUj4 line 1, column 17-18␤]

[16:03] <DarkWolf84> is there the number for e?

[16:03] <moritz_> I seem to recall it's Math.e or Math::e or some such

[16:04] *** drupek12 joined
[16:04] <moritz_> we had that disussion on p6c

[16:05] <moritz_> oh way, if you `use Num :constants;' then you have e and pi

[16:05] <moritz_> #pugs use Num :constants; say pi

[16:05] <exp_evalbot> OUTPUT[pugs: *** No such subroutine: "&require_Num"␤    at /tmp/r39Cqq83QX line 1, column 1␤]

[16:06] *** barney joined
[16:06] <DarkWolf84> pi works without use

[16:06] <moritz_> #pugs sayNum::pi

[16:06] <exp_evalbot> OUTPUT[*** No such subroutine: "&sayNum::pi"␤    at /tmp/D71EPbS5OC line 1, column 1 - line 2, column 1␤]

[16:06] <DarkWolf84> #pugs print pi

[16:06] <moritz_> #pugs say Num::pi

[16:06] <exp_evalbot> OUTPUT[3.141592653589793]

[16:06] <exp_evalbot> OUTPUT[*** No such subroutine: "&Num::pi"␤    at /tmp/ocI6jFGnpz line 1, column 5 - line 2, column 1␤]

[16:06] <moritz_> Num::pi should work, pi not

[16:06] <DarkWolf84> but pi worked

[16:07] <DarkWolf84> as a global var

[16:07] <moritz_> it's not a var (it doesn't have a sigil)

[16:07] <DarkWolf84> s/var/const/

[16:08] <moritz_> where are sigil less constants defined

[16:09] <masak> we have sigil-less constants? :/

[16:09] <moritz_> I'm asking that ;)

[16:09] <DarkWolf84> maybe it's a function then

[16:09] <DarkWolf84> sub*

[16:09] <masak> that, strangely, would be ok

[16:09] <masak> by me

[16:10] <moritz_> aye

[16:10] <moritz_> still, it shouldn't be in ::GLOBAL ?

[16:10] <moritz_> t/builtins/math/pi.t calls pi() as a sub

[16:12] <moritz_> or is there another definition of pi?

[16:14] <moritz_> doesn't seem so

[16:18] *** sunnavy left
[16:21] <pugs_svnbot> r17698 | moritz++ | updated t/builtins/math/pi.t to current synopsis

[16:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17698

[16:21] <lambdabot> Title: Changeset 17698 - Pugs - Trac

[16:24] <masak> I must say I prefer writing pi to writing Num::pi every time ;)

[16:24] <masak> but a rebind in my programs would solve that

[16:24] <moritz_> you can 'use Num :constants;'

[16:25] <moritz_> perl5.10.0 -E 'say "YaY"'

[16:25] <moritz_> YaY

[16:25] <moritz_> note the version number ;)

[16:26] <rgs> YaY.

[16:26] <masak> cool

[16:27] <PerlJam> 5.10 was finally released?

[16:27] <moritz_> not released

[16:28] <moritz_> but the version number of blead is 5.10 now

[16:28] <moritz_> which means it can't take too long now

[16:28] <rgs> IT CAN'T IT CAN'T

[16:28] <PerlJam> well it was planned to be here in Sept. So there's still time  :)

[16:29] <rgs> various small problems still need cleaning, but I hope a RC soon

[16:29] *** TreyHarris joined
[16:34] <TimToady> s:g/err/orelse/

[16:35] <rgs> TimToady: uugh

[16:35] <masak> why?

[16:35] <TimToady> logic programming

[16:35] <TimToady> and readability

[16:35] * masak liked err

[16:35] <masak> not much-despised by me

[16:35] * PerlJam still likes "err"

[16:35] <rgs> it's not obvious that the difference between or and orelse is definedness

[16:36] <TimToady> please see email

[16:36] * masak is reading it now

[16:37] <moritz_> TimToady: on p5p?

[16:37] <PerlJam> moritz_: p6l

[16:37] <TimToady> private cc to rgs, but he may forward if he likes

[16:37] <moritz_> ah, read it

[16:38] <moritz_> I liked 'err' as well, 'dor' needs more explanation IMHO

[16:38] <moritz_> 'orelse' is ok, though

[16:38] <rgs> I haven't received anything yet

[16:38] <Juerd> I'd almost suggest ifundef

[16:38] <Juerd> But that's one char longer again

[16:38] <szbalint> I like the move away from err, it was too close to error.

[16:38] <TimToady> logic programming is about success/failure, which definedness is just the underlying mechanism indicating success

[16:38] <Juerd> It's immediately fully obvious what it does though.

[16:39] <PerlJam> "andthen" and "orelse" seem a tad forced, but I can live with them  :-)

[16:39] <TimToady> I'm forcing them.  :)

[16:39] <Juerd> $foo ifundef $bar

[16:39] <Juerd> $foo orelse $bar

[16:39] <Juerd> $foo dor $bar

[16:39] <Juerd> $foo err $bar

[16:39] <TimToady> foo() orelse fail

[16:39] <Juerd> In order of obviousness, from my perspective

[16:39] <TimToady> immediately obvious

[16:39] <moritz_> I seem to recall that Eiffel uses 'orelse' or some such for guaranteed short circuit or

[16:39] <Juerd> "foo or fail" and "foo orelse fail" read the same to me

[16:39] <TimToady> Ada did

[16:40] * moritz_ never used or learned ada

[16:40] <moritz_> but eiffel is based on Ada syntax I was told

[16:40] <masak> now that we have orelse, what's the remaining uses of or?

[16:41] <PerlJam> I thought eiffel predates Ada.

[16:41] <TimToady> it's still just a low precedence ||

[16:41] <PerlJam> (or perhaps that's just how I ran into them)

[16:41] <TimToady> but for STD I kept running into the need for the logic programming ops that can bind intermediate results

[16:41] <Juerd> Actually, what's the use for defined-or for *failure handling*, given that we can now easily "return 0 but true;"?

[16:41] <TimToady> so that I can do hypothesis chaining

[16:42] <moritz_> anybody inclined to update the test suite?

[16:42] <Juerd> Why use definedness to indicate success?

[16:42] <TimToady> in my mind, any use of "but" is a code smell.

[16:42] <Juerd> "but" should be an alias for "and"

[16:42] <TimToady> because fail returns something undefined

[16:42] <Juerd> if $foo but not $bar { ... }

[16:42] <[particle]> TimToady: maybe you should rename it 'butt' to make that more obvious ;)

[16:43] <moritz_> [particle]: lol ;)

[16:44] <TimToady> basically, use of mixins indicate you didn't do a role somewhere you probably should have

[16:44] <TimToady> *indicates

[16:45] <[particle]> 0 but True|False

[16:46] *** weinig joined
[16:52] <masak> moritz_: I could, just a moment

[16:52] <TimToady> hang on, I'm doing it

[16:52] <masak> oki

[16:52] <moritz_> I'm trying to hack s/err/orelse/ into pugs

[16:52] <masak> guess that's only fair :)

[16:52] <TimToady> need to change pugs at same time

[16:52] <TimToady> right

[16:53] <TimToady> I was just grepping the whole pugs dir

[16:53] <TimToady> including pugs and t

[16:53] <moritz_> I don't have much success, though

[16:53] <masak> moritz_: why not?

[16:54] <moritz_> once somebody hacks it in, I can take care of the vim file, and ext/

[16:54] <TimToady> just let me do it all

[16:54] <moritz_> masak: I don't know which instances to replace

[16:54] <masak> TimToady: do it, orelse ;)

[16:54] <TimToady> and then?... :)

[16:54] <moritz_> the problem is that 'err' is sometimes used for errors

[16:54] <TimToady> and then and then and then and then....

[16:54] <TimToady> I'll figger it out

[16:55] <moritz_> TimToady, our chief haskell hacker ;)

[16:55] *** justatheory joined
[16:57] <TimToady> there's really not much much to change in pugs.  It immediately remaps to //

[16:57] <TimToady> which isn't quite according to current spec, but close enough, given $! is already bound by fail

[16:58] <masak> mm

[16:58] <masak> maybe devise a test which exhibits the diff'rence?

[16:59] <rgs> andthen makes sense, once you have orelse

[17:00] <rgs> but days before a RC, I wouldn't add a new operator to perl 5...

[17:00] <pugs_svnbot> r17699 | moritz++ | vim syntax file: added 'orelse', 'andthen'

[17:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17699

[17:00] <lambdabot> Title: Changeset 17699 - Pugs - Trac

[17:00] <moritz_> but it's 7 chars for one op... ;)

[17:01] <TimToady> I'd stick with // for 5.10, probably

[17:02] <rgs> TimToady: yes, and add orelse and andthen later. hopefully the feature pragma makes that easier

[17:02] <rgs> I'll remove "err" from 5.10, still.

[17:04] *** franck___ left
[17:04] *** pmurias joined
[17:05] <pmurias> hi

[17:06] <moritz_> hi pmurias 

[17:07] <moritz_> no 'err' in ext/

[17:08] <TimToady> some js with err though...

[17:11] <DarkWolf84> no more err?

[17:12] <DarkWolf84> why is that

[17:13] <moritz_> DarkWolf84: read p5p ;/

[17:14] <DarkWolf84> sorry I don't understand

[17:16] <moritz_> on the perl5porters mailing list there was a discussion on how that op should be named

[17:18] <fglock> pmurias: hi

[17:21] *** amnesiac left
[17:22] *** masak left
[17:26] <pmurias> fglock: check if this test is written correctly

[17:26] <pugs_svnbot> r17700 | pmurias++ | [kp6] a very simple token test

[17:26] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17700

[17:26] <lambdabot> Title: Changeset 17700 - Pugs - Trac

[17:28] <pmurias> it fails and i'm not sure if i invoke the rule correctly

[17:28] <fglock> looking

[17:31] *** polettix left
[17:31] <fglock> it looks like a new error, thhis is no longer working: perl kp6-mp6-perl5.pl --perl5rx < examples/token-test.pl

[17:31] <fglock> this

[17:32] <pmurias> fglock: is the test correct

[17:32] <pmurias> ?

[17:32] <fglock> it looks ok, and it should work

[17:32] <pmurias> it dosn't here

[17:33] <fglock> it doesn't here either

[17:34] <pmurias> i'm trying to write a simple meta model in kp6

[17:35] <pmurias> is it ok to add an Unboxed class, and make ::DISPATCH autobox things which aren't kp6 objects

[17:35] <fglock> hmm - it works if you use { 'foo' } instead of { foo }

[17:35] <pmurias> ?

[17:36] <fglock> i'd rather handle autoboxing at compile-time

[17:37] <fglock> hmm

[17:37] *** Aankhen`` left
[17:39] *** drupek12 left
[17:40] <pmurias> fglock: yes... int,str might be better

[17:40] <fglock> i think you need to use a non-oo language to write the metamodel 

[17:41] <fglock> and then define 'class' and such using macros

[17:41] <pmurias> fglock: p6 is planned to allow having custom metamodels

[17:42] <pmurias> what i think you do is have your new meta model use the old one

[17:42] *** Psyche^ joined
[17:45] <pugs_svnbot> r17701 | lwall++ | s:g/err/orelse/

[17:45] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17701

[17:45] *** drupek12 joined
[17:45] <lambdabot> Title: Changeset 17701 - Pugs - Trac

[17:47] <pmurias> fglock: the example i commited requires two things i didn't commit yet but it should ilustrate the principle

[17:47] <pugs_svnbot> r17702 | pmurias++ | kp6: example of a custom metamodel

[17:47] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17702

[17:47] <lambdabot> Title: Changeset 17702 - Pugs - Trac

[17:49] <fglock> hmm - p5landish is not portable

[17:50] *** Aankhen`` joined
[17:50] <pmurias> a portable interface layer could be written

[17:51] <pmurias> you need some way of accesing the dispatcher

[17:51] *** jamesmck left
[17:52] <ruoso> pmurias, your're missing the bootstrap magic

[17:52] <pmurias> the responder interface in generaly

[17:52] * ruoso presumes we're talking about the kp6+1 compiler

[17:52] <pmurias> ruoso: the thing assumes you bootstraped via some other way

[17:52] <ruoso> pmurias, ok

[17:52] <ruoso> in that case

[17:53] <ruoso> what happens is that

[17:53] <ruoso> the new compiler implements a new runtime

[17:53] <ruoso> using "class Class"

[17:53] <ruoso> as this new compiler handles all namespace lexicals by itself

[17:53] <ruoso> "class Foo" will be an object of type "Class"

[17:53] <ruoso> stored in the namespace "Foo"

[17:54] <ruoso> then, when the code makes "Foo.new()"

[17:54] <ruoso> the new runtime will lookup the "Foo" something

[17:54] <ruoso> which happens to be an object of "Class"

[17:55] <ruoso> which have a method "constructor" (or something)

[17:55] *** Patterner left
[17:55] *** Psyche^ is now known as Patterner

[17:55] <ruoso> creating a object of type "Foo"

[17:57] <pugs_svnbot> r17703 | pmurias++ | [kp6] things required for example/custom-metamodel.pl to run

[17:57] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17703

[17:57] <lambdabot> Title: Changeset 17703 - Pugs - Trac

[17:57] <pmurias> ruoso: what i'm experimenting with is how the user will be able to use his own metamodel

[17:58] <ruoso> pmurias, a proper name for that would be "p6 extension model"

[17:58] <ruoso> :)

[17:58] <pugs_svnbot> r17704 | moritz++ | updated a few examples to s/err/orelse/

[17:58] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17704

[17:58] <lambdabot> Title: Changeset 17704 - Pugs - Trac

[17:58] *** jisom joined
[17:58] <ruoso> but anyway...

[17:59] <ruoso> this must be implemented by the new compiler

[17:59] <ruoso> in the bootstrap process

[17:59] <pmurias> it's implemented now, by the current compiler :)

[18:00] *** kaether left
[18:00] * ruoso not sure that way is a sane way of doing it

[18:01] * pmurias neither

[18:01] <ruoso> one thing I'm pretty sure

[18:01] <ruoso> is that it should not be that coupled

[18:01] <fglock> pmurias: look at MOP.pm:15

[18:02] <pmurias> ruoso: with the implementation?

[18:02] <ruoso> pmurias, yep

[18:02] <ruoso> the object itself must know where it comes from

[18:02] <ruoso> and how to handle p6 calling convention

[18:02] <ruoso> to its own

[18:03] <pmurias> fglock: looked

[18:03] <ruoso> in theory the reverse should be possible to

[18:03] <fglock> P6opaque could possibly be used to build a new MOP, without the need for low level data

[18:04] <ruoso> a p5 tied variable that translates the p5 calling convention to the p6 land

[18:04] <fglock> pmurias: it's a prototype object that rebuilds itself

[18:06] <ruoso> in the end we'll have the kp6 objects in this new compiler being dispatched in one way, and the other objects being dispatched in other way

[18:08] <pmurias> fglock: i'll have to think it over as i'm a bit confused

[18:09] <fglock> P6Opaque.new( dispatcher => ..., data => ..., ... )

[18:09] <pmurias> fglock: i get it now

[18:10] <DarkWolf84> why in IO there is only tcp socket connection?

[18:10] <pmurias> shower&

[18:15] *** Blwood left
[18:19] *** dakkar joined
[18:21] *** buetow left
[18:21] *** buetow joined
[18:22] <moritz_> DarkWolf84: not yet specced probably

[18:23] <DarkWolf84> In p5 there is udp in IO::Socket

[18:24] <DarkWolf84> imho it's good to select (optional) the protocol

[18:24] <Tene> DarkWolf84: feel free to propose a spec for how other transports should be specified.

[18:25] <ruoso> home &

[18:25] *** ruoso left
[18:45] *** drrho left
[19:01] *** cerridwen_ is now known as cerridwen

[19:04] *** weinig_ joined
[19:14] *** weinig left
[19:20] <pugs_svnbot> r17705 | pmurias++ | [kp6] fixed matching of constants

[19:20] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17705

[19:20] <lambdabot> Title: Changeset 17705 - Pugs - Trac

[19:21] <pmurias> fglock: should there be some general command line syntax for specifing visitor args?

[19:22] <pmurias> i want to add a flag to Token to print out the intermediate code but i don't want to add a Yet Another Command Line Option

[19:23] *** snearch joined
[19:24] <allbery_b> environment?

[19:27] <pmurias> allbery_b: there is an option passed to a Visitor by the --secure flag

[19:28] <pmurias> so i wanted to have a consitent interface

[19:28] <pmurias> * consistent

[19:30] <pmurias> OTOH environment might be best for debugging option 

[19:32] <fglock> pmurias: you could use an %ENV variable 

[19:34] <pmurias> fglock: not supported by either mp6 or kp6

[19:35] <pmurias> supported by kp6 not mp6

[19:35] <fglock> hmm

[19:35] <pmurias> * but not

[19:37] *** danga left
[19:37] <pugs_svnbot> r17706 | fglock++ | [kp6] existing open classes are not overwritten by MOP make_class()

[19:37] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17706

[19:37] <lambdabot> Title: Changeset 17706 - Pugs - Trac

[19:38] *** TJCRI joined
[19:39] <fglock> i wonder why the diffs are so big

[19:39] <fglock> i didn't change the emitter

[19:40] <TimToady> possibly some fallout from the s:g/err/orelse/

[19:41] <fglock> ah, ok

[19:45] <fglock> it's just whitespace

[19:52] *** weinig_ left
[19:56] <pugs_svnbot> r17707 | fglock++ | [kp6] use 'redefine_method' in make_class, allows to use a circular Perl6 Prelude

[19:56] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17707

[19:56] <lambdabot> Title: Changeset 17707 - Pugs - Trac

[19:59] *** weinig joined
[20:01] *** ft joined
[20:05] *** jisom left
[20:07] *** Ara4n joined
[20:07] <pugs_svnbot> r17708 | fglock++ | [kp6] make forcerecompile

[20:07] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17708

[20:07] <lambdabot> Title: Changeset 17708 - Pugs - Trac

[20:08] *** Arathorn left
[20:08] <fglock> home &

[20:10] *** snearch left
[20:10] <pmurias> fglock: do you stay at work up to such later hours?

[20:10] *** sbp joined
[20:13] *** Ara4n left
[20:14] *** Arathorn joined
[20:22] *** rindolf joined
[20:27] *** fglock left
[20:34] *** REPLeffect joined
[20:47] *** dakkar left
[20:50] *** sorear-lambdabot joined
[20:57] *** sorear-lambdabot left
[21:00] *** polettix joined
[21:05] *** weinig_ joined
[21:05] *** weinig left
[21:07] *** rindolf left
[21:09] *** TJCRI left
[21:16] *** Aankhen`` left
[21:25] *** rlpeacock joined
[21:25] *** jhorwitz left
[21:34] *** pmurias left
[21:41] *** thorat joined
[21:43] *** barney left
[21:46] *** SubStack left
[21:53] *** iblechbot left
[21:53] *** lambdabot left
[22:00] *** ofer left
[22:01] *** riffraff joined
[22:02] *** riffraff left
[22:15] *** Limbic_Region joined
[22:30] *** rlpeacock left
[22:54] *** cmarcelo left
[23:10] *** jedai left
[23:19] *** REPLeffect left
[23:30] *** meppl left
[23:30] *** [particle] left
[23:30] *** cognominal_ left
[23:30] *** mj41__ left
[23:30] *** cj left
[23:30] *** polettix left
[23:30] *** xinming left
[23:30] *** nipra left
[23:30] *** DarkWolf84 left
[23:30] *** lisppaste3 left
[23:30] *** felipe left
[23:30] *** sbp left
[23:30] *** szbalint left
[23:30] *** rhizo left
[23:30] *** hakobe left
[23:30] *** cerridwen left
[23:30] *** Southen left
[23:30] *** Arathorn left
[23:30] *** buetow left
[23:30] *** charsbar left
[23:30] *** bloonix left
[23:30] *** mncharity left
[23:30] *** qmole left
[23:30] *** agentzh left
[23:30] *** Schwern left
[23:30] *** ruz left
[23:30] *** Casan_ left
[23:30] *** exp_evalbot left
[23:30] *** test left
[23:30] *** Helios- left
[23:30] *** rlb3_work left
[23:30] *** nelhage left
[23:30] *** jjore left
[23:30] *** allbery_b left
[23:30] *** buubot left
[23:30] *** jql left
[23:30] *** nipotaway left
[23:30] *** IllvilJa left
[23:30] *** Limbic_Region left
[23:30] *** thorat left
[23:30] *** devogon left
[23:30] *** nekokak left
[23:30] *** shmem left
[23:30] *** hcchien left
[23:30] *** JarJarBinks left
[23:30] *** AzureBOT left
[23:30] *** drbean left
[23:30] *** Maddingue left
[23:30] *** perlbot left
[23:31] *** Limbic_Region joined
[23:31] *** thorat joined
[23:31] *** devogon joined
[23:31] *** nekokak joined
[23:31] *** shmem joined
[23:31] *** hcchien joined
[23:31] *** JarJarBinks joined
[23:31] *** AzureBOT joined
[23:31] *** drbean joined
[23:31] *** r0bby joined
[23:31] *** knewt joined
[23:31] *** ingy joined
[23:31] *** perlbot joined
[23:31] *** Maddingue joined
[23:31] *** polettix joined
[23:31] *** sbp joined
[23:31] *** [particle] joined
[23:31] *** cognominal_ joined
[23:31] *** xinming joined
[23:31] *** nipra joined
[23:31] *** DarkWolf84 joined
[23:31] *** mj41__ joined
[23:31] *** lisppaste3 joined
[23:31] *** felipe joined
[23:31] *** szbalint joined
[23:31] *** rhizo joined
[23:31] *** meppl joined
[23:31] *** hakobe joined
[23:31] *** cerridwen joined
[23:31] *** cj joined
[23:31] *** PerlJam joined
[23:31] *** BinGOs joined
[23:31] *** takanori_ joined
[23:31] *** Gothmog_ joined
[23:31] *** awwaiid joined
[23:31] *** Yappo joined
[23:31] *** arguile_ joined
[23:31] *** yves_ joined
[23:31] *** f0rth joined
[23:31] *** diakopter joined
[23:31] *** sri joined
[23:31] *** avar left
[23:31] *** Arathorn joined
[23:31] *** buetow joined
[23:31] *** charsbar joined
[23:31] *** bloonix joined
[23:31] *** Helios- joined
[23:31] *** mncharity joined
[23:31] *** qmole joined
[23:31] *** agentzh joined
[23:31] *** Schwern joined
[23:31] *** ruz joined
[23:31] *** Casan_ joined
[23:31] *** exp_evalbot joined
[23:31] *** test joined
[23:31] *** Southen joined
[23:31] *** allbery_b joined
[23:31] *** jjore joined
[23:31] *** nelhage joined
[23:31] *** IllvilJa joined
[23:31] *** rlb3_work joined
[23:31] *** jql joined
[23:31] *** buubot joined
[23:31] *** nipotaway joined
[23:31] *** sri left
[23:31] *** avar joined
[23:31] *** sri_ joined
[23:31] *** Daveman left
[23:31] *** TimToady left
[23:32] *** Grrrr left
[23:32] *** Grrrr joined
[23:32] *** TreyHarris left
[23:32] *** Lunchy left
[23:33] *** polettix left
[23:38] *** drupek12 left
[23:45] *** zamolxes left
[23:50] *** Daveman joined
[23:56] *** zamolxes joined
