[00:09] *** xinming joined
[00:12] *** ludan joined
[00:12] <ludan> hola

[00:12] <moritz> hola, que tal?

[00:41] *** toku_away is now known as tokuhirom_

[00:51] *** obvio171 joined
[00:51] *** cognominal joined
[00:52] *** nekokak joined
[01:01] *** stef__ joined
[01:13] <rhr> in token block in Perl-6.0.0-STD.pm, what is the normal/endline/endlist stuff about?

[01:14] <rhr> I'm looking for odd places unspace is allowed, and I don't get what the "normal" thing is for

[01:21] *** justatheory joined
[01:21] *** prism joined
[01:22] <rhr> fun fact: you can put pod inside pod directives via unspace (!?!)

[01:24] *** obvio171 joined
[01:32] <obra> seen Juerd 

[01:32] <obra> Who can create accounts on feather?

[01:38] *** rashakil__ joined
[01:53] *** japhb joined
[02:04] *** agentzh joined
[02:04] <agentzh> moritz++ # nick searching

[02:05] *** mako132_ joined
[02:09] <agentzh> are <alpha> and <ident> built-in subrules in standard perl 6?

[02:10] <agentzh> also, will /$<a> := (<b>)/ set $/<a><b> ?

[02:11] <agentzh> it's different from /$<a> := <b>/, right?

[02:17] *** stevan_ joined
[02:26] *** Chaotic_Reality joined
[02:27] *** agentzh left
[02:27] <svnbot6> r16239 | rhr++ | Merge long dot tests, add new unspace tests

[02:48] *** jjore joined
[02:53] *** avarab joined
[03:01] *** weinig_ is now known as weinig

[03:05] *** avarab is now known as avar

[03:08] <mdiep> seen audreyt

[03:08] <avar> @seen audreyt

[03:08] <lambdabot> audreyt is in #perl6 and #haskell. I don't know when audreyt last spoke.

[03:09] <mdiep> thanks, avar.

[03:09] *** cognominal joined
[03:28] *** stevan__ joined
[03:35] *** nipotaway is now known as nipotan

[03:37] *** avarab joined
[04:03] *** ajs_ joined
[04:14] *** penk joined
[04:28] *** Alias_ joined
[04:29] *** the_dormant joined
[05:04] *** dduncan joined
[05:06] *** BooK_ joined
[05:30] *** obvio171 joined
[05:43] *** SubStack joined
[05:50] <Aankhen``> ?eval only sub foo () { 1 }; foo()

[05:50] *** evalbot_r16235 is now known as evalbot_r16239

[05:50] <evalbot_r16239> Error: ␤Unexpected "foo"␤expecting "=", subroutine parameters, trait or block

[05:52] *** obvio171 joined
[05:52] <Aankhen``> ?eval multi sub foo (Str $bar) | (Num $bar) { $bar.say }; foo("1")

[05:52] <evalbot_r16239> Error: ␤Unexpected "|"␤expecting bare trait, trait or block

[05:52] <Aankhen``> Bah.

[05:54] <Aankhen``> S13 talks about defining methods that allow a class to respond as if it were a routine, array or hash, e.g. method postcircumfix:<( )> (|$capture) {...}

[05:54] <Aankhen``> And... er... nevermind.

[05:54] *** nipotan is now known as nipotaway

[05:54] * Aankhen`` slaps his forehead.

[05:56] <offby1> I'm surprised that my "pugs" process has three threads.  I didn't explicitly create threads ... is that new behavior, or has it always done that?

[05:56] <offby1> "Heather has two threads"

[06:12] *** penk joined
[06:13] <obvio171> @seen cmarcelo

[06:13] <lambdabot> I saw cmarcelo leaving #perl6 4d 4h 37s ago, and .

[06:14] <japhb> "And what?  And nothing."

[06:14] <obvio171> "and period", it said :P

[06:30] *** Alias_ joined
[06:41] <dduncan> question: why would CPAN say that v6-0.018 is an unauthorized release?

[06:42] <dduncan> eg, see: http://search.cpan.org/dist/v6/

[06:42] <lambdabot> Title: Fl&#225;vio Soibelmann Glock / v6 - search.cpan.org

[06:42] <dduncan> also, the changelog doesn't say what changed since 17

[06:43] *** nipotaway is now known as nipotan

[06:43] *** rfordinal joined
[06:45] *** elmex joined
[06:51] <zamolxes> dduncan: search.cpan.org is currently borked afaics

[06:52] <dduncan> okay

[06:52] <dduncan> but about the changelog ...

[06:52] <dduncan> was 17->18 just a name change?

[06:53] *** franck__ joined
[06:54] <dduncan> taking the -alpha off, that is

[06:54] <dduncan> if so, then that's the same thing I would do if renaming, make them identical otherwise, which would aid diffs

[06:54] <dduncan> but the changelog would still say that's what I was doing

[07:02] *** iblechbot joined
[07:06] <diakopter> zamolxes: are you sure search.cpan.org is borked?  I routinely have problems with that domain's DNS servers (probably 1/3 attempts); are you sure that wasn't your problem?

[07:07] *** buetow joined
[07:08] *** the_dormant joined
[07:11] *** the_dormant joined
[07:23] *** jisom joined
[07:26] <dduncan> I interpreted the borked comment as about something that resulted in the "unauthorized" comment

[07:27] <dduncan> I've never seen that comment before today ... the only red text was to indicate a developer release

[07:28] <Aankhen``> The "unauthorized" thing was in response to HOOO's modules (including such fine distributions as `perl` and `package`), AIUI.

[07:29] <dduncan> so I assume it appears for anyone who uploads a package that doesn't have the package name registered to them (first uploader by default)

[07:30] <dduncan> sounds like a good idea, actually

[07:39] *** penk left
[07:40] *** IllvilJa joined
[07:42] *** aukjan|gone is now known as aukjan

[07:45] *** aukjan is now known as aukjan|gone

[07:54] *** araujo joined
[08:00] *** diakopter joined
[08:03] *** dduncan left
[08:19] *** TimToady joined
[08:41] *** korpenkra joined
[08:46] <korpenkra> hi all! is there any perl5 vs. perl6 CPU/Mem performance tests around that one could try to get an idea about the improvements brought by for instance static types vs dynamic types?

[08:46] <moritz> korpenkra: I think none of the p6 implementations support static types yet

[08:47] <moritz> korpenkra: and the p6 implementations still perform far worse than p5 because they are not yet in the optimization stage

[09:03] *** obvio171 joined
[09:03] <korpenkra> moritz: aha. too bad. I am doing bioinformatics programming and perl5 is really the only language I know well enough to be creative and productive with. bioinformatics and perl go really hand in hand :-) however, speed and mem usage is not always the best. I dunno if I should look into perl6 or some other language... both I guess ;-)

[09:03] <moritz> korpenkra: did you profile your p5 programs?

[09:04] <Tene> korpenkra: speed and mem usage should be a lot better than perl5 in the future once there are optomized runtimes.

[09:04] <moritz> korpenkra: p6 is really a nice language, but not complete

[09:05] <Tene> the auto-parallelization and such should be very nice for bioinformatics.

[09:08] <Juerd> It should be nice for a vast number of applications

[09:08] <Juerd> I think that even (or especially!) in 20 years from now, most code will still be written by non-programmers

[09:09] <Tene> Juerd: explain more?  I'd be quite interested to hear opinions on this subject.

[09:10] * Juerd has no idea what to explain

[09:14] <korpenkra> moritz, Juerd: I'm sort of a nightmare programmer to any language developer ;-) I'm not really a computer scientist, but a biologist who wants to do weird and computationally intese stuff with heaps of data. meaning I have little real training in computer science and little time at my hands to expand my programming toolbox. I expect much from the language to make up for my own shortcomings ;-)

[09:16] <korpenkra> Tene: can you explain auto-parallelization (is it what I think it is) and how it relates to perl6?

[09:20] <Juerd> korpenkra: That's not a nightmare. That's a challenge.

[09:20] <Juerd> korpenkra: And such use is considered in Perl 6's design.

[09:21] <Juerd> Anything that helps a beginning programmer that does weird and intense stuff, potentially (very probably) also helps an experienced guru

[09:22] <Juerd> But the experienced guru probably wouldn't have come up with it by themselves, because experience causes one to think in set patterns.

[09:24] <korpenkra> Juerd: thanx, those are very encouraging words

[09:25] *** audreyt joined
[09:25] <gaal> moooooooooooose!

[09:27] <gaal> awesome paper on programming and design: http://worrydream.com/MagicInk/

[09:27] <lambdabot> Title: Magic Ink: Information Software and the Graphical Interface

[09:30] <korpenkra> a bit off-topic, but what the heck. I guess haskell is the functional language of choice around here, but does anyone here have experience with ocaml-perl integration?

[09:33] <gaal> camels aren't quick to be labeled off-topic here :) but I've never heard of such integration, korpenkra.

[09:35] <integral> gaal++

[09:35] <korpenkra> :-)

[09:36] <rgs> there was a thing that enabled to use perl modules from ocaml, developed by the INRIA iirc, but I don't remember its name

[09:38] <moritz> korpenkra: re autoparallelisation: to add two arrays, you do @a >>+<<@b, and it's parallelised if you have multiple processors

[09:39] <moritz> korpenkra: and iirc things like map { # do stuff }, @array are parallel as well

[09:40] *** penk joined
[09:44] *** the_dormant joined
[09:44] <korpenkra> moritz: very nifty. especially that winged sun-like: @a >>+<< @b . http://en.wikipedia.org/wiki/Image:Winged_sun_sharpe.png

[09:45] <moritz> korpenkra: it's a bit different... << or « means "array on the left"...

[09:46] <moritz> korpenkra: so @b = @a >>+ 3 adds 3 to all elements of @a ;)

[09:46] <korpenkra> very cool

[09:46] <moritz> and [$op] reduces, so [+] is the sum of all elements, [*] the product, [~] the concatenation etc.

[09:47] <moritz> yes, I quite like that ;)

[09:48] *** theorb joined
[09:49] *** theorb is now known as theorbtwo

[09:55] <gaal> actually literally '[$op]' doesn't work, you need to spell it out as reduce $op

[09:55] <gaal> you had to go metasyntactic to explain a metaop, that's ok :-)

[10:04] *** crashmatrix joined
[10:15] *** rho joined
[10:34] *** pjcj joined
[10:37] *** pjcj joined
[10:37] *** lichtkind_ joined
[10:45] *** rindolf joined
[10:52] <moritz> it would be cool to allow something like eval("[$op]") @a

[10:52] <moritz> if eval() evaluates to an incomplete syntactic elemet it sucks context from the surronding

[10:52] <moritz> at second thought that's a horrible feature ;)

[10:55] <rindolf> Hi all.

[10:56] <rindolf> Hi moritz 

[10:56] <masak> moritz: re map { # do stuff }, @array: what about map calls with side effects? I imagine they are not altogether unheard of

[10:56] <masak> I mean, they do exist in current p5 code

[10:59] <moritz> masak: i think that `cat { # do stuff }' is for things with side effects

[11:06] *** b_jonas joined
[11:09] <masak> moritz: oh. I've completely missed that.

[11:16] <wolverian> huh, no. that's not what cat does.

[11:16] <wolverian> at least according to S29 :)

[11:19] <masak> ok, then I'll default back to believing that it's map that takes care of cases like map { 'silly example' ~ $i++ } @array

[11:19] <Juerd> moritz: Perl 6 should be smart enough to detect "side effects" by itself, or allow the user to indicate that something "is pure", i.e. has no side effects.

[11:20] <Juerd> In general, $i++ in a loop is a silly idea better replaced by iterating over multiple lists simultaneously

[11:20] <b_jonas> Juerd: that's what Matz thinks as well, apparently

[11:20] <b_jonas> but I think sometimes $i++ is useful

[11:21] <b_jonas> including $freq{$_}++

[11:21] *** avarab is now known as avar

[11:23] <Juerd> With $freq{$_}++, though, you can just force the block to be considered pure

[11:23] <Juerd> It typically doesn't matter in which order the ++'es are done

[11:23] <Juerd> Unless, of course, you use the value in the map

[11:27] *** fglock joined
[11:36] <fglock> re v6.pm, version 0.018 is just a distro name change; 'v6' is now a registered module

[11:47] *** marmic joined
[11:49] *** the_dormant joined
[11:50] *** geis1 joined
[11:55] *** VanilleBert joined
[12:00] *** edenc joined
[12:37] *** the_dormant joined
[12:48] *** iblechbot joined
[12:53] * fglock tries out Groovy as a possible backend

[13:07] *** nipotan is now known as nipotaway

[13:22] *** jerrylee joined
[13:24] *** weinig_ joined
[13:27] <gaal> re: parallelism and map, incidententally, i'm not sure how that's suppoesd to work viz. laziness

[13:27] <gaal> ugh banana problem

[13:40] *** justatheory joined
[13:50] *** semifor_ left
[13:51] *** crashmatrix joined
[13:52] *** edenc joined
[13:57] *** [particle] joined
[14:13] *** ruoso joined
[14:31] *** rodi joined
[14:37] *** electrogeek joined
[14:48] <TimToady> map is not automatically parallel unless you prefix it with "hyper", see S02:2775

[14:48] <TimToady> it's considered a variant of "eager"

[14:49] <moritz> ok

[14:50] <TimToady> since there's really no such thing as "lazy parallel"

[14:51] <b_jonas> I'm affraid of lazy semantics so I hope there'll be a way in perl6 to turn off explicit lazyness off

[14:51] <b_jonas> like 'no lazy;' or something

[14:51] <b_jonas> all implicit lazyness off I mean

[14:52] <TimToady> would probably be "use eager"

[14:53] <moritz> @tell agentzh you could prefix each paragraph of the synopsys on percabal.org/syn/ with an anchor and a link to that anchor, just like the irclogs

[14:53] <lambdabot> Consider it noted.

[14:55] <moritz> @tell agentzh if you then provide a mapping from line numbers to paragraph numbers, the irclog could automagically turn things like S02:2775 into a link

[14:55] <lambdabot> Consider it noted.

[15:03] *** the_dormant joined
[15:10] <TimToady> rhr: the case labeled "normal" represents a block that is embedded in an argument list.  ordinarily a block terminates the list it's in unless followed immediately by comma or colon

[15:11] <TimToady> and a block terminates its current statement if it's the last thing on a line

[15:11] <TimToady> either of which can be suppressed with unspace

[15:13] <moritz> I think it's a dangerous road to modify semantics based on whitespaces/unspaces in a few case

[15:14] *** pdcawley joined
[15:14] *** edenc joined
[15:16] <TimToady> well, the other way to be consistent is to require semicolon even on statement-ending blocks like "if"

[15:16] <TimToady> the inconsistent approach taken by C and its derivatives is not extensible grammatically

[15:18] <rhr> TimToady: thanks, that makes sense.  I'll add a test for unspace there

[15:19] *** obvio171 joined
[15:19] <TimToady> the main price from the standpoint of a p5 programmer is that grep and map now require a comma after their block

[15:20] <rhr> gaal: thanks for that link, that's a really cool paper

[15:20] <moritz> which is not such a bad thing IMHO

[15:20] <rhr> I like having a comma there

[15:20] <moritz> sind map and grep are ordinary methods, a comma is not bad

[15:21] <TimToady> indeed, the need for extensibility and dwimmery at the same time has forced a great deal of regularity into the grammar

[15:21] <TimToady> and when there are special rules like for right bracket, they're rules that extend to user-defined constructs as well

[15:21] <rhr> (extensibility and regularity)++

[15:22] <TimToady> likewise for postfix policy

[15:22] <TimToady> and that's exactly where we end up needing unspace for the exceptions

[15:23] <TimToady> but that too is just a generalization of the \ protects the following newline meme

[15:23] <TimToady> it's just extended to whitespace rather than special casing newline

[15:24] <moritz> btw can I somewho change the precendence of a self defined operator?

[15:24] <moritz> ?eval prefix:<!> ($a) { 2*$a} !3**2

[15:24] <evalbot_r16239> Error: ␤Unexpected "{"␤expecting operator, ":" or ","

[15:25] <TimToady> see S06:1482

[15:26] <moritz> ok

[15:27] *** bonesss joined
[15:27] *** amnesiac joined
[15:27] *** bernhard joined
[15:28] *** Loro_ joined
[15:30] <jerrylee> hi any good editor for perl6(pugs) syntax?

[15:30] <moritz> vim

[15:30] <rodi> :se syn=perl6

[15:30] <rodi> yummy.

[15:31] <moritz> in util/perl6.vim

[15:31] <jerrylee> do i need to download something?

[15:31] *** ruoso joined
[15:31] <moritz> cp pugs/util/perl6.vim ~/.vim/syntax/

[15:31] <jerrylee> thanks moritz 

[15:31] <moritz> np

[15:32] <TimToady> I just made a symlink from /usr/share/vim/vim70/syntax/perl6.vim to pug's copy

[15:32] <moritz> that's even better (although it interferes with the package management)

[15:32] *** iblechbot joined
[15:32] <TimToady> only if some package defines perl6.vim  :)

[15:33] <moritz> TimToady: that's not the only case...

[15:33] <TimToady> one could also symlink from your private .vim/syntax

[15:33] <moritz> TimToady: if you uninstall vim (or upgrade to the next major version), the directory will not be empty

[15:34] <TimToady> I'm sure I have much worse "disk leakage" than leaving a few symlinks and directories behind...

[15:35] <TimToady> it's almost time to abandon the current disk an upgrade as a "GC run"

[15:35] <TimToady> *and

[15:35] <TimToady> I don't even delete my email anymore, just watch it accumulate

[15:36] <moritz> TimToady: you should read it, not just watch it ;))

[15:36] <TimToady> not worth the agony of deciding when disk space is growing faster

[15:36] <TimToady> oh, I read it if the subject or the author looks non-bogus

[15:36] <TimToady> but even with my spam filters a lot of junk gets past

[15:37] <moritz> then it's time to beat up paul graham ;)

[15:37] <TimToady> and switching to a bayesian algorithm would put me back into an active rather than passive deciding mode

[15:38] <TimToady> maybe I should just break down and forward everything to gmail, but I like mutt...

[15:38] <moritz> I use SpamAssin and a bayesian filter, and use SAs result to train the bayes filter ;)

[15:39] <b_jonas> beware with the gmail spam filter, for it produces false positives

[15:39] <TimToady> ...and I like not having false positives  :)

[15:39] <b_jonas> on the other hand, bayesian works for english only

[15:39] <moritz> b_jonas: not true

[15:40] <moritz> b_jonas: 90% of my mails are german...

[15:40] <b_jonas> and are you using a bayesian filter?

[15:40] <moritz> b_jonas: and still detection for both german and english are good

[15:40] <b_jonas> nice

[15:40] <moritz> b_jonas: yes, the thunderbird builtin

[15:44] <kolibrie> I have mutt set up to display spam messages in gray, rather than white, and set up a keybinding to reclassify as spam when stuff gets through

[15:44] *** prism joined
[15:57] <gaal> rhr: yeah, and there are some other goodies on his site, too.

[15:58] <pdcawley> b_jonas: Why on earth would bayesian filtering only work for English?

[15:59] <rgs> because bayes was english ! :)

[15:59] <pdcawley> Obviously!

[15:59] <b_jonas> pdcawley: most of the spam I get is english, while most of the non-spam mail is hungarian (this is an over-simplification)

[15:59] <b_jonas> so a bayesian filter will learn to distinguish languages, not spam vs non-spam

[16:00] <b_jonas> and will soon throw away too many english mails and keep too many hungarian ones

[16:00] <pdcawley> And you know this by virtue of trying it?

[16:00] <b_jonas> no

[16:00] <moritz> in my experience that's just a matter of training

[16:01] <moritz> the pre-training that is done with thunderbirds junk filter is not optimal for non-english speakers, but after a month it was fine

[16:02] <pdcawley> moritz: Sounds plausible. I wonder if it's possible to zap thunderbird so it's priors aren't preweighted.

[16:04] <moritz> pdcawley: probably you just have to delete a special file in the profile folder

[16:04] <moritz> but I'm not an expert ;)

[16:07] *** pdcawley joined
[16:09] <[particle]> timtoady: http://72.14.209.104/search?q=cache:kTLP1i_67KUJ:mogrify.homelinux.org/2006/01/03/using-mutt-with-gmail/+gmail+interface+mutt&hl=en&ct=clnk&cd=6&gl=us

[16:09] <lambdabot> http://tinyurl.com/yvefbk

[16:10] <PerlJam> http://www.perl.com/pub/a/2007/05/10/everyday-perl-6.html

[16:10] <lambdabot> Title: perl.com: Everyday Perl 6

[16:16] *** Eimi joined
[16:18] <svnbot6> r16240 | Nelson++ | This is a simple adventure game from the presentation "Adventures in Perl6" (Nordic Perl Workshop 2007, and Oslo.pm).

[16:25] *** jerrylee_ joined
[16:29] *** DarkWolf84 joined
[16:30] *** franck__ joined
[16:39] *** xinming joined
[16:39] *** weinig joined
[17:02] *** Kattana joined
[17:23] *** kanru joined
[17:36] *** iblechbot joined
[17:38] *** rlb3_work joined
[17:40] *** buetow joined
[17:49] *** chris2 joined
[17:52] *** ruoso joined
[17:54] *** karhu joined
[17:54] *** Psyche^ joined
[17:55] <karhu> morning

[17:55] *** karhu is now known as veritos

[17:59] *** zakharyas joined
[18:09] *** rindolf joined
[18:11] *** Psyche^ is now known as Patterner

[18:19] <offby1> mrgn stnly

[18:24] <TimToady> dr lvngstn, prsm?

[18:28] *** larsen_ joined
[18:30] *** nferraz joined
[18:30] *** the_dormant joined
[18:33] *** SubStack joined
[18:35] *** dduncan joined
[18:37] <svnbot6> r16241 | Nelson++ | Added link to the presentation

[18:47] *** fglock joined
[18:48] *** jisom joined
[18:56] *** ruoso joined
[18:58] *** Belaf joined
[18:59] <offby1> TimToady: I'd earlier said that I'd continue saying "mrgn stnly" until someone laughed.  I guess your post counts :-)

[19:01] <TimToady> har har

[19:04] <offby1> OK, I can take a hint

[19:07] *** ruoso_ joined
[19:10] *** penk joined
[19:11] *** amnesiac joined
[19:32] *** sapir joined
[19:40] *** ruoso_ joined
[19:43] *** justatheory joined
[19:52] *** the_dormant joined
[20:00] *** oceanlab joined
[20:15] *** sapir joined
[20:16] <sapir> is there some way right now to use Perl 6 rules from Perl 5 code?

[20:19] <zakharyas> sapir: http://search.cpan.org/~dconway/Perl6-Rules-0.03/

[20:19] <lambdabot> Title: Damian Conway / Perl6-Rules-0.03 - search.cpan.org

[20:19] <zakharyas> anyone know what Damian is up to these days? He hasn't responded to a patch I sent a few weeks ago

[20:19] <sapir> yay thanks

[20:21] <kolibrie> sapir: you probably would be better off with Pugs::Compiler::Rule.  Perl6::Rules is not up-to-date anymore

[20:24] <sapir> thanks again

[20:28] <PerlJam> zakharyas: Damian was wrestling with some personal issues last I heard.

[20:28] <zakharyas> PerlJam: thanks

[20:30] <integral> it's okay, this is open source, one person doesn't have to be a bottleneck

[20:30] *** rashakil joined
[20:31] <zakharyas> integral: well unless I fork the module, it is a bottleneck

[20:31] *** SubStack joined
[20:32] <PerlJam> zakharyas: you can call your module Perl6::MyRules and use module aliases to get Perl6::Rules out of it.

[20:33] <moritz> that's just a workaround, not a solution ;)

[20:34] <zakharyas> PerlJam: my patch wasn't for rules, but I take the point - it's messy though

[20:35] <PerlJam> Until CPAN supports name-version-author in a real way, it's probably best.

[20:35] <PerlJam> Actually, it would be awesome if perl5 and CPAN supported the name-version-author scheme as per perl6.  That would make the transistion to perl6 easier later.

[20:39] *** polettix joined
[20:44] *** japhb joined
[20:47] *** Loro_ joined
[20:48] *** araujo joined
[20:49] *** stevan__ joined
[20:51] *** ruz joined
[20:52] <TimToady> j

[20:52] <TimToady> grr

[20:56] <japhb> meister

[21:01] <offby1> eww, jaegermesiter brings back unpleasant memories of college

[21:03] <moritz> my girlfriend comes from the city where Jägermeister is made ;)

[21:04] <japhb> heh

[21:04] <offby1> Wolfenbüttel

[21:04] * offby1 shows off his google-fu

[21:06] <moritz> google++ ;)

[21:06] <avar> fu++

[21:06] <moritz> '-'++ ;)

[21:06] <sapir> karma google

[21:07] <moritz> @karma google

[21:07] <lambdabot> google has a karma of 5

[21:07] <moritz> @karma fu

[21:07] <lambdabot> fu has a karma of 1

[21:08] <sapir> perlbot: karma google

[21:08] <perlbot> Karma for google: -1

[21:11] <moritz> @karma moritz

[21:11] <lambdabot> You have a karma of 43

[21:11] <moritz> perlbot: karma moritz

[21:11] <perlbot> Karma for moritz: 12

[21:11] <moritz> perlbot seems to be much more conservative ;)

[21:13] <japhb> log or decaying scale perhaps?

[21:13] <moritz> @karma audreyt 

[21:13] <lambdabot> audreyt has a karma of 635

[21:13] <moritz> perlbot: karma audreyt 

[21:13] <perlbot> Karma for audreyt: 414

[21:14] <moritz> japhb: perhaps perlbot doesn't count multiple $nick++es from svnbot6 in successive lines

[21:14] <japhb> hmmm, that would make sense

[21:15] <japhb> audreyt++

[21:15] <japhb> @karma audreyt

[21:15] <lambdabot> audreyt has a karma of 636

[21:15] <japhb> perlbot: karma audreyt

[21:15] <perlbot> Karma for audreyt: 415

[21:15] <japhb> audreyt++

[21:15] <japhb> perlbot: karma audreyt

[21:15] <perlbot> Karma for audreyt: 416

[21:15] <japhb> @karma audreyt

[21:15] <lambdabot> audreyt has a karma of 637

[21:15] <japhb> audreyt++ audreyt++

[21:15] <japhb> @karma audreyt

[21:15] <lambdabot> audreyt has a karma of 639

[21:15] <japhb> perlbot: karma audreyt

[21:15] <perlbot> Karma for audreyt: 418

[21:15] <japhb> hmmm

[21:16] *** japhb joined
[21:16] <japhb> sigh

[21:16] <japhb> audreyt++

[21:17] <japhb> er

[21:17] <japhb> Anyone know how to insert an explicit LF using xchat?

[21:18] <moritz> why would anyone want to do that?

[21:19] <japhb> To send several lines together without someone else interrupting.  Especially in a high-traffic channel, or when multiple threads are overlapping

[21:20] <moritz> you could try to enter lf as ASCII code 

[21:20] <japhb> \cJ

[21:21] <moritz> fascinating ;)

[21:21] *** lichtkind joined
[21:23] <japhb> (Undiscoverable hotkeys)--

[21:26] <Tene> japhb: option+return on X-Chat Aqua, I'm told.

[21:26] *** kunwon1 joined
[21:27] <Tene> so some modifier+Enter on other systems

[21:35] *** [particle] left
[21:36] *** [particle] joined
[21:36] <Tene> japhb: someone else tells me ctrl+shift+a

[21:41] <moritz> something tells me it's Ctrl+Alt+Del ;)

[21:41] <Tene> 9+F2

[21:46] <japhb> karma audreyt

[21:46] <japhb> @karma audreyt

[21:46] <lambdabot> audreyt has a karma of 640

[21:46] <japhb> perlbot: karma audreyt

[21:46] <perlbot> Karma for audreyt: 419

[21:47] <japhb> audreyt++

[21:47] <japhb> audreyt++

[21:47] <japhb> audreyt++

[21:47] <japhb> @karma audreyt

[21:47] <lambdabot> audreyt has a karma of 643

[21:47] <japhb> perlbot: karma audreyt

[21:47] <perlbot> Karma for audreyt: 422

[21:47] <japhb> hmmm

[21:47] <japhb> Maybe perlbot just doesn't have the in-channel uptime that lambdabot has?

[21:48] <japhb> Oh, and Tene you were right -- ctrl+shift+a

[21:49] *** penk joined
[21:49] <japhb> Oooh, ctrl+shift == hex input.  got it!.  Sorta like alt-keypad on windoze

[21:55] <japhb> ?eval (1, 2, 3) »+« (4, 5, 6)

[21:55] *** evalbot_r16239 is now known as evalbot_r16241

[21:55] <evalbot_r16241> (5, 7, 9)

[21:56] <moritz> ?eval 1, 2, 3 »+ 2

[21:56] <evalbot_r16241> Error: ␤Unexpected "\187+"␤expecting operator

[21:56] <moritz> ?eval 1, 2, 3 »+« 2

[21:56] <evalbot_r16241> Error: Hyper OP only works on lists

[21:56] <moritz> ?eval 1, 2, 3 »+« 2,

[21:56] <evalbot_r16241> Error: Hyper OP only works on lists

[21:56] <moritz> ?eval 1, 2, 3 »+« (2,)

[21:56] <evalbot_r16241> (1, 2, 5)

[21:57] <moritz> ?eval (1, 2, 3) »+« (2,)

[21:57] <evalbot_r16241> (3, 2, 3)

[21:57] <PerlJam> If the bot is running an up-to-date pugs, that looks like an area where someone can make some head-way in bringing pugs closer to the perl6 spec.

[21:58] <moritz> it's quite up-to-date

[21:59] <PerlJam> Hmm. something is wrong ...

[21:59] <PerlJam> pugs> (1, 2, 3) >>+<< 2

[21:59] <PerlJam> (3, 4, 5)

[21:59] <PerlJam> maybe the bot is artificially constraining.

[21:59] <japhb> ?eval (1, 2, 3) »+« 2

[22:00] <evalbot_r16241> (3, 4, 5)

[22:00] <PerlJam> (the above was from feather command line pugs r16241 (look familiar?))

[22:00] *** prism joined
[22:00] <japhb> It works in the bot ... we just hand't done that particular combo of punctuation

[22:00] <PerlJam> oh, I see.  the syntax was off.

[22:00] <japhb> I think it's actually supposed to be:

[22:01] <japhb> ?eval (1, 2, 3) »+» 2

[22:01] <evalbot_r16241> Error: ␤Unexpected "\187+\187"␤expecting operator

[22:01] <japhb> but that's NIY

[22:06] <moritz> japhb: you're right, only unary operators have one » or « sign

[22:06] *** Limbic_Region joined
[22:07] <japhb> Hi Limbic_Region

[22:07] <Limbic_Region> salutations japhb

[22:08] <Limbic_Region> hiding or just trying out a new nick?

[22:10] <TimToady> name collision

[22:11] <Limbic_Region> ah

[22:11] <japhb> Had to come up with a new nick because of, as TimToady said, persistent collisions.  After an intense couple minutes, that was the best I could come up with.  :-)

[22:14] <Limbic_Region> had I known about IRC RFCs when I created my nick, I wouldn't have chosen Limbic_Region

[22:14] <Limbic_Region> freenode seems to be pretty leniant though

[22:15] <japhb> nick length limit?

[22:15] <Limbic_Region> as well as naming convention

[22:15] <moritz> are there conventions in the RFCs?

[22:15] *** gnuvince_ joined
[22:15] <Limbic_Region> I don't remember exactly what certain things about a name meant but it had to do with ownership

[22:16] *** mugwump joined
[22:16] <Limbic_Region> this isn't right but it was along the lines of if my nick was Limbic_Region then I owned everything under Limbic_

[22:16] <Limbic_Region> but I don't remember exactly what it was

[22:18] <moritz> ok

[22:18] <Limbic_Region> so I just searched the IRC logs going back to the 2007-05-01 for audreyt and she has been pretty quiet, anyone know if she is ok?

[22:20] *** Chaotic_Reality joined
[22:23] <japhb> Limbic_Region: last I heard, continuing family issues that require her attention

[22:23] <japhb> But I have no more detail than that

[22:23] <gnuvince_> Limbic_Region: I don't know.  She mentionned on her blog that she needed to leave YAPC::Asia in a hurry because of a family emergency.  Plus there was that Hep B case

[22:25] <Limbic_Region> gnuvince_ - thanks.  I have more current information than that.  It appears that situation that looked like it was mostly resolved and returning to some semblence of normalcy is still an ongoing issue.

[22:26] * Limbic_Region tries to remember to keep her in his prayers

[23:01] *** Aankhen`` joined
[23:02] *** b_jonas left
[23:19] *** [particle] left
[23:19] *** [particle] joined
[23:27] *** gnuvince_ joined
[23:39] *** penk left
[23:40] *** myavuzselim joined
