[00:12] *** weinig joined
[00:17] *** nekokak joined
[00:25] *** facenew joined
[00:25] <facenew> OT: a 30-min movie mocking kim jong il and his secret agent buying something from china: http://www.youtube.com/view_play_list?p=EE52D9ED01495685

[00:25] <lambdabot> Title: YouTube - Broadcast Yourself.

[00:31] *** facenew left
[00:45] *** Aankhen`` joined
[01:05] *** lyokato joined
[01:07] *** lambdabot joined
[01:21] *** mako132 joined
[01:30] *** hexmode joined
[01:35] *** neonse left
[01:47] *** kanru joined
[01:57] *** diakopter left
[02:15] *** leed joined
[02:31] *** b00t joined
[02:44] <avar> 02:44:04 < GumbyBRAIN> Send the perl6 developers infinite money and so on.

[03:07] *** REPLeffect joined
[03:07] *** Alias_ left
[03:12] *** _Jack_ joined
[03:25] *** weinig is now known as weinig|zZz

[04:29] *** ProperNoun joined
[04:30] *** miyagawa joined
[04:33] *** spx2 joined
[04:45] *** nipra joined
[04:50] *** nipra joined
[04:53] *** mako132 joined
[05:02] *** mr_ank joined
[05:10] *** nipra joined
[05:24] *** spx2 joined
[05:25] *** xinming joined
[05:28] *** dduncan left
[05:41] *** REPLeffect left
[05:41] <masak> ?eval my $a = 'I can declare the same variable'; my $a = 'twice in the same scope'

[05:41] *** evalbot_r15095 is now known as evalbot_r15118

[05:41] <evalbot_r15118> \"twice in the same scope"

[05:56] *** ProperNoun joined
[05:57] *** araujo joined
[06:06] *** ProperNoun joined
[06:07] *** jdv79 joined
[06:11] *** penk joined
[06:14] *** BooK_ joined
[06:16] *** Aankh|Clone joined
[06:19] *** nipra joined
[06:38] *** penk joined
[06:41] *** rashakil joined
[06:45] *** penk joined
[06:47] *** bjoern_ joined
[06:55] <stevan> audreyt: any chance we will see your POPL keynote online anywhere?

[07:14] *** nipra joined
[07:40] *** marmic joined
[07:43] *** iblechbot joined
[07:50] *** Aankhen`` joined
[07:55] <audreyt> stevan: I did not go to POPL, hence no keynote, hence no new slides :/

[08:37] *** drbean joined
[08:48] *** rashakil_ joined
[08:51] *** elmex joined
[09:11] *** devogon joined
[09:11] *** nipra joined
[09:42] *** andara joined
[09:53] *** fglock joined
[09:55] *** ruoso joined
[09:57] <fglock> hi

[10:18] *** drrho joined
[11:38] *** devogon joined
[11:52] <Ziggy6> hello

[11:53] <Ziggy6> fglock: i looked at kp6 and mp6 and have a few questions

[11:54] <fglock> Ziggy6: sure

[11:55] <Ziggy6> first of all parsing takes to much time

[11:56] <pasteling> "Ziggy6" at 141.85.0.67 pasted "Total Elapsed Time = 20.53264" (19 lines, 1.2K) at http://sial.org/pbot/22551

[11:56] <Ziggy6> i've profiled it

[11:57] <fglock> Ziggy6: the code generated by the parser makes several method calls on each character - this can be optimized with inlining (not planned for mp6)

[11:58] <Ziggy6> so you create MiniPerl6::Perl5::Match for every character?

[11:59] <fglock> Ziggy6: yes

[12:00] <Ziggy6> second question: the parser is top-down?

[12:00] <fglock> it's recursive-descent

[12:01] <Ziggy6> is it going to be that way in the final perl6 compiler?

[12:04] <fglock> the plan is to have a bottom-up stage for operator precedence; the other parts would be recdescent

[12:05] <Ziggy6> why isn't kp6 self-hosting?

[12:07] <Ziggy6> it seems to have almost the same grammar as mp6

[12:07] <Ziggy6> or maybe i missed something

[12:07] <fglock> kp6 is still under implementation - the lexical-subs tranform is currently breaking p5 compatibility, this is being fixed

[12:07] <fglock> that is, it can't call the p5 runtime

[12:10] <Ziggy6> why isn't there a makefile to regenerate v6-KindaPerl6/lib5/

[12:11] <Ziggy6> would it help?

[12:12] *** chris2 joined
[12:12] <Ziggy6> i mean with the compile times

[12:12] <fglock> the workflow for compiling kp6 is not fixed - you can add or take AST transformation steps

[12:12] <fglock> kp6-1 will have a script

[12:13] <Ziggy6> last but not least: how can i help? :)

[12:14] <fglock> the current work under way is the implementation of the compile-time environment

[12:15] <fglock> which is needed for fixing lexsubs, and for BEGIN blocks

[12:17] <Ziggy6> KindaPerl6::Visitor::LexicalSub?

[12:18] <fglock> yes - the plan is to start by implementing a Closure class, with some introspection capabilities

[12:19] <fglock> K::V::LS needs to be split: create the env, and then do the lexsubs

[12:19] <Ziggy6> why is introspection needed? can't we just use Perl5 closures?

[12:20] <fglock> we need access to the lexical variables, and it would be nice if it can return it's source code if needed

[12:20] <fglock> brb

[12:26] <fglock> I didn't add the env prototype to the repo - one sec

[12:28] <fglock> Ziggy6: the tricky part is that compile-time closures are both program and data

[12:28] <svnbot6> r15119 | fglock++ | kp6 - added docs/begin-block.pl - p5 prototype for 'env' implementation

[12:30] <Ziggy6> i don't understand, can you point me to the relevant part of the synopsis?

[12:31] *** leed joined
[12:31] <fglock> Ziggy6: see the discussions in kp6 docs/begin-block.pod

[12:32] <Ziggy6> compile-time closure = closure contained in a BEGIN block?

[12:33] <fglock> pretty much all closures need to exist at compile-time; and some of them survive until run-time

[12:35] <Ziggy6> ok, i think i have enough pointers for now, i'll start digging

[12:36] *** CardinalNumber joined
[12:41] *** weinig|zZz is now known as weinig

[12:42] *** Ziggy6 left
[12:42] *** Ziggy6 joined
[13:10] *** buetow joined
[13:20] *** nipra joined
[13:31] *** weinig is now known as weinig|bbl

[13:33] *** gnuvince joined
[13:45] *** pbuetow joined
[14:08] *** b_jonas joined
[14:10] *** kanru joined
[14:25] *** iblechbot joined
[14:26] *** VanilleBert joined
[14:34] *** vel joined
[14:44] *** weinig|bbl is now known as weinig

[14:44] *** Limbic_Region joined
[14:46] <Ziggy6> ?eval my @i = gather { for 1,2,3 -> { take $_ } }

[14:46] *** evalbot_r15118 is now known as evalbot_r15119

[14:46] <evalbot_r15119> [undef, undef, undef]

[15:03] *** weinig is now known as weinig|meeting

[15:08] *** bonesss joined
[15:11] <fglock> Ziggy6: don't use -> there - it needs a variable name

[15:11] <fglock> ?eval my @i = gather { for 1,2,3 { take $_ } }

[15:11] <evalbot_r15119> [1, 2, 3]

[15:11] <fglock> ?eval my @i = gather { for 1,2,3 -> $x { take $x } }

[15:11] <evalbot_r15119> [1, 2, 3]

[15:12] <Ziggy6> thanks :)

[15:14] *** Ziggy6 left
[15:14] *** Ziggy6 joined
[15:14] <fglock> putter: I wonder if the problem with the mp6/kp6 approach is that there is no low hanging fruit - it's stripped down to a few difficult tasks

[15:15] <[particle]> *cough* documentation *cough*

[15:17] <fglock> [particle]: hmm - there is /docs

[15:18] *** xinming joined
[15:19] <fglock> I agree it's not 'end-user' documentation

[15:19] <[particle]> i was taking a cheap shot, but end user docs would be very useful

[15:19] <[particle]> as would a test suite

[15:19] <[particle]> especially if this is to be used as a base for extension for p6

[15:20] <Ziggy6> anyway, the source code line count is low, and that's what made me start playing with it

[15:22] <fglock> [particle]: I'll work a bit on docs

[15:23] <[particle]> fglock++ # i know i'll appreciate that (and i think pmichaud will, too)

[15:24] <fglock> meeting &

[15:26] *** VanilleBert left
[15:35] *** Ziggy6 left
[15:35] *** Ziggy6 joined
[15:39] *** ProperNoun joined
[15:50] *** weinig|meeting is now known as weinig

[16:25] *** ofer1 joined
[16:30] *** kanru joined
[16:34] *** rashakil__ joined
[16:35] *** chris2_ joined
[16:37] *** chris2_ is now known as chris2

[16:42] *** nipra joined
[16:45] *** b_jonas joined
[16:46] *** fglock joined
[16:48] *** ZiggyE joined
[16:48] *** ashleyb joined
[17:04] <fglock> I'm looking for a starting point for kp6 docs

[17:08] <ZiggyE> you could start by documenting the way kp6 should be run and how to regenerate lib5

[17:08] <avar> explain what subset of p6 it covers

[17:08] *** ZiggyE left
[17:09] <fglock> ok

[17:16] *** hexmode joined
[17:20] *** cdfh joined
[17:28] *** neonse joined
[17:30] <svnbot6> r15120 | fglock++ | kp6 - added docs/FAQ.pod

[17:30] *** tri joined
[17:34] *** macli joined
[17:40] *** falesca joined
[17:42] <gaal> [OT] anyone know how to get a file to be install in /usr/sbin instead of /usr/bin with Module::Install? "install_script" puts it in /usr/bin but apparently relies on EU::MM to do the actual copying...

[17:43] <gaal> *installed

[17:43] <svnbot6> r15121 | fglock++ | kp6 - more FAQ

[17:44] *** weinig is now known as weinig|bbl

[17:44] *** falesca joined
[17:47] *** rashakil_ joined
[17:51] *** spx2 joined
[17:51] <fglock> gaal: maybe 'INSTALLBIN'

[17:52] <[particle]> fglock: your faq states that kp6 allows foo(unnamed, named => 1, unnamed) in Sigs 

[17:53] <[particle]> that's not valid perl6 -- you know that, right?

[17:53] <[particle]> oh, i see

[17:54] <[particle]> it's array/hash/tree unpacking

[17:54] <[particle]> but still, it looks broken

[17:54] *** CardinalNumber joined
[17:54] <[particle]> i'd expect ($top) = @{$_[2]};

[17:55] *** andara left
[17:55] <fglock> [particle]: fixing

[17:55] *** xinming_ joined
[18:04] <fglock> [particle]: thanks

[18:04] <svnbot6> r15122 | fglock++ | kp6 - fixed the args unpacking example in FAQ

[18:10] *** justatheory joined
[18:13] *** iblechbot joined
[18:28] *** bernhard joined
[18:41] *** polettix joined
[18:46] <TreyHarris> TimToady: small typo in your last: "value is a specified" -> "value is specified"

[18:46] <TimToady> thanks

[18:46] * [particle] ~~ to TreyHarris

[18:49] *** demq joined
[18:54] *** sili joined
[18:55] * demq says hello

[18:56] *** demq is now known as dmq

[18:59] *** rashakil__ joined
[18:59] <ingy> nothingmuch: ping

[19:02] <fglock> hmm - maybe for mp6; need to find a way to do eval() too - http://cataclysm.cx/2006/08/19/closures-in-c/ 

[19:02] <lambdabot> Title: eaten by a grue :: Closures in C

[19:03] *** stef_ joined
[19:07] *** VanilleBert joined
[19:08] <VanilleBert> ?eval ([2,1],[4,3],[6,5]).>>.reverse

[19:09] *** evalbot_r15119 is now known as evalbot_r15122

[19:09] <evalbot_r15122> ((("2", "1"), ("4", "3"), ("6", "5")), ())

[19:09] <nothingmuch> ingy: polettix 

[19:09] <nothingmuch> oops

[19:09] <nothingmuch> tab completion ;-)

[19:09] *** cognominal joined
[19:10] <VanilleBert> hmm, i had thought        ((1,2),(3,4),(5,6))

[19:10] <ingy> nothingmuch: http://en.wikipedia.org/wiki/Wikipedia:Articles_for_deletion/Ingy_d%C3%B6t_Net

[19:10] <lambdabot> http://tinyurl.com/29x9gc

[19:11] <nothingmuch> earle martin can be mean

[19:11] <ingy> you know him?

[19:11] <nothingmuch> a tiny bit

[19:11] <ingy> also Kwiki has been deleted

[19:11] <TimToady> VanilleBert: write a test

[19:11] <nothingmuch> he was also rightfully mean to lathos for his Acme::I::Rule thing

[19:12] <nothingmuch> why was kwiki deleted?

[19:12] <ingy> I don't really know

[19:12] <nothingmuch> "dozens of others programmers with many more modules" ? 

[19:12] <nothingmuch> bah

[19:12] <nothingmuch> try 6

[19:13] <nothingmuch> and I think that two of them don't speak

[19:13] <nothingmuch> and one has only started recently

[19:13] <VanilleBert> TimToady: i dont know how... totally new to Perl, Perl6, (CVS)

[19:13] <ingy> yeah, didn't he read his own link?

[19:13] <ingy> anyway, who cares...

[19:13] <ingy> publicity is overrated

[19:14] <nothingmuch> well, I still think you're cool =)

[19:14] <ingy> *kiss*

[19:14] * [particle] hates ingy :P

[19:14] <ingy> hey [particle], coe over to Cap Hill and say that...

[19:15] * [particle] accelerates

[19:15] <ingy> [particle]: you should come work over here today

[19:15] <ingy> I'm at Online Coffee all day

[19:15] <[particle]> maybe i'll drop by this afternoon

[19:15] <ingy> lemme know...

[19:15] <[particle]> i think kudra is coming to seattle next week

[19:15] <ingy> oh yeah? weird

[19:16] <ingy> but cool

[19:16] <ingy> anyone know why?

[19:16] <ingy> nothingmuch: are you coming to Seattle too?

[19:16] <ingy> :)

[19:16] <[particle]> visit family i think

[19:16] <nothingmuch> nope

[19:16] <ingy> I thought she was from Montana

[19:17] <[particle]> bellingham

[19:17] <nothingmuch> she is originally from MO

[19:17] <[particle]> it's like montana with fewer cattle and more hippies :)

[19:18] <ingy> [particle]: where are you now?

[19:18] <[particle]> home, in madrona

[19:18] <nothingmuch> mmmm.... hippyburgers

[19:18] <ingy> come on over

[19:18] <[particle]> i get off work at 2

[19:18] <ingy> nothingmuch: join #kwiki

[19:18] <nothingmuch> [particle]: when ingy says come on over you do it, CLEAR?!

[19:18] <[particle]> (have phone meetings here)

[19:18] <nothingmuch> ingy: i don't use or know how to use kwiki...

[19:19] <nothingmuch> (from an admin perspective)

[19:19] <nothingmuch> i doubt i'd have anything to contribute

[19:19] <ingy> nothingmuch: it's undergoing serious revision

[19:19] <ingy> you should come over... 

[19:20] <ingy> I'm migrating it to P6

[19:20] * fglock will be in Capao da Canoa beach for a whole month

[19:20] <ingy> fglock: I assume that's a good thing?

[19:20] <fglock> yes, except for being offline

[19:21] *** kanru_ joined
[19:21] <nothingmuch> internet access is overrated

[19:21] <nothingmuch> you don't *really* need it to survive

[19:21] * stevan looks sideways at nothingmuch 

[19:21] * nothingmuch ponders quitting to go live in a tree house in brazil

[19:22] <fglock> nothingmuch: you can have wind power and satellite network

[19:22] * stevan shudders at the thought of having to get pron from corner store/gas station

[19:22] <nothingmuch> fuck wind power

[19:22] <nothingmuch> in fact

[19:22] <nothingmuch> fuck potable water

[19:22] <nothingmuch> and clothes!

[19:23] <nothingmuch> well... with the coming ice age clothes might not be so overrated

[19:23] <fglock> clothes are good for mosquitoes

[19:23] <stevan> yeah man,.. all you need is a sharp stick and grub worms

[19:24] <nothingmuch> oh yes... mosquitos... hmm

[19:26] <[particle]> ingy: which online? olive or pine?

[19:26] <ingy> [particle]: pine

[19:27] <ingy> pine and 14th

[19:27] <[particle]> sure, yeah. that's a quick spit from here

[19:29] <VanilleBert> ?eval ([1,2],[3,4,5]).>>.elems

[19:29] <evalbot_r15122> Error: No compatible subroutine found: "&>>elems"

[19:29] <VanilleBert> ?eval (1,2).elems

[19:29] <evalbot_r15122> 2

[19:30] <VanilleBert> hmpf

[19:31] <TimToady> basically I think .>>. is unimplemented

[19:31] <VanilleBert> ("ab", "abc").>>.chars

[19:31] <VanilleBert> ?eval ("ab", "abc").>>.chars

[19:31] <evalbot_r15122> (2, 3)

[19:32] <VanilleBert> :D

[19:34] <TimToady> basically I'm wrong. :)

[19:35] <TimToady> basically I think .>>. is incorrectly implemented.  :)

[19:35] <VanilleBert> i thought so ;)

[19:36] <VanilleBert> ?eval (<a b>, <a b c>).>>.end

[19:36] <evalbot_r15122> Error: No compatible subroutine found: "&>>end"

[19:37] *** ekelund joined
[19:37] <VanilleBert> problems with Arrays in the Array, huh? were is the implementation? want to read 

[19:38] <fglock> ?eval sub elems { @_.elems } ([1,2],[3,4,5]).>>.elems

[19:38] <evalbot_r15122> ((1, 1), (1, 1, 1))

[19:38] <nanonyme> hmm, scary

[19:38] <fglock> it's hypering recursively

[19:39] <TimToady> ah

[19:40] <TimToady> ?eval ([1,2],[3,4,5]).map: {.elems}

[19:40] <evalbot_r15122> (2, 3)

[19:41] <VanilleBert> ?eval ([2,1],[4,3],[6,5]).map: { .reverse }

[19:41] <evalbot_r15122> (1, 2, 3, 4, 5, 6)

[19:42] <VanilleBert> na ~

[19:43] <VanilleBert> ?eval ([2,1],[4,3],[6,5]).map: { [ .reverse ] }   # oO

[19:43] <evalbot_r15122> ([1, 2], [3, 4], [5, 6])

[19:43] <VanilleBert> thats what i want :D

[19:50] <VanilleBert> eval: ([2,1],[4,3],[6,5]).>>.reverse 

[19:50] <VanilleBert> getting: ((("2", "1"), ("4", "3"), ("6", "5")), ())

[19:50] <VanilleBert> this is still a mystery to me

[19:50] <buubot> VanilleBert: Error: syntax error at eval line 1, near ".>>"  

[19:58] *** dduncan joined
[19:59] <fglock> &

[20:18] *** VanilleBert left
[20:46] <dduncan> TimToady, regarding r13532, I think you said "bracket" where you meant to say "parenthesis", in: "A C<do> is assumed immediately after any opening bracket,..."

[20:46] <dduncan> so then that's a typo

[20:47] <[particle]> 'parenthesis'.isa('bracket') == Bool::True

[20:47] *** kanru joined
[20:47] <dduncan> so what is a [] then?

[20:48] <[particle]> http://en.wikipedia.org/wiki/Bracket

[20:48] <lambdabot> Title: Bracket - Wikipedia, the free encyclopedia

[20:48] <[particle]> however, i don't know that timtoady really meant 'bracket'

[20:49] <dduncan> I believe that in technical talk, [] alone means bracket, while {} is called brace and () parenthesis

[20:49] <dduncan> or those are common short names to distinguish them

[20:50] *** weinig|bbl is now known as weinig

[20:50] <TimToady> I mean any kind of opening bracket, in particular including both ( and [

[20:50] <dduncan> okay

[20:51] <TimToady> especially since one of the places you *really* want list comprehensions is inside [...]

[20:52] <dduncan> well, no-op then

[20:52] <TimToady> but it's problem that there isn't an obvious generic term for bracketing characters that isn't overloaded somehow

[20:52] <TimToady> not a no-op

[20:52] <TimToady> at least, not in list context

[20:52] <dduncan> I don't suppose that "grouping delimiter" would suffice as a generic term?

[20:52] <TimToady> everyone would look at us funny

[20:53] <TimToady> also, I think there's a tradition of calling parentheses "round brackets"

[20:53] <[particle]> yes, in england i've heard that

[20:53] <dduncan> mind you, I recently learned that "butter" has a more broad meaning than just the yellow spread made from milk products ... eg, that margerine and some fruit spreads are also butter by the broader meaning

[20:53] <TimToady> I tend to say "square brackets" when I mean [...] specifically

[20:54] <dduncan> yes, of course

[20:54] <TimToady> "apple butter"

[20:54] <dduncan> ... square brackets, curly braces, round parenthesis

[20:54] <dduncan> those are very unambiguous

[20:54] <TimToady> :P

[20:54] <[particle]> cake, hair, pi

[20:54] <dduncan> and yes, I had a problem with the name "apple butter" until I learned what "butter" actually meant

[20:55] <dduncan> that name made it sound like a combination of apple sauce and milk butter, which sounded disgusting

[20:55] <TimToady> I always took "butter" to be a metaphor in such cases.

[20:56] <TimToady> dentist &

[20:58] <dduncan> p.s. my saying "well no-op then" above was just my way of saying, in that case, "never mind the change suggestion then"

[21:03] *** larsen_ joined
[21:14] <ingy> [particle]: are you headed here and when?

[21:15] <[particle]> if i do it'll be at least an 90min from now

[21:15] <[particle]> will you be there?

[21:22] *** ludan joined
[21:23] *** c6rbon_ joined
[21:25] <ingy> [particle]: wanna meet up later this evening?

[21:25] <svnbot6> r15123 | putter++ | kp6 FAQ - added information from http://colabti.de/irclogger/irclogger_log/perl6?date=2007-01-22,Mon&sel=22#l66 .

[21:25] <lambdabot> Title: #perl6 2007-01-22,Mon, http://tinyurl.com/2lvl9s

[21:25] <[particle]> ingy: i can probably do that

[21:25] <ingy> maybe meet here at 7pm

[21:33] *** mncharity joined
[21:33] *** mncharity is now known as putter

[21:33] <putter> gaal: ping?

[21:34] <putter> audreyt: ping?

[21:34] <[particle]> ingy: okie. you going offline?

[21:37] *** mj41 joined
[21:46] <ingy> [particle]: at some point I need to go for a run...

[21:52] <ingy> nothingmuch: ping

[21:55] <svnbot6> r15124 | putter++ | Move "Integrating KP6 with the test suite" from TASKS to TALK.

[21:55] <svnbot6> r15124 | putter++ | In which putter argues with himself over its usefulness.

[21:55] <svnbot6> r15125 | putter++ | kp6 FAQ - mention "no tests pass".

[21:55] <putter> lambdabot: ?tell fglock *When* are you disappearing for a whole month?  (It's in the kp6 FAQ:)

[21:55] <lambdabot> Consider it noted.

[22:19] <svnbot6> r15126 | putter++ | TASKS - added "Capture fglock/putter interview info to kp6 faq."

[22:27] *** c6rbon joined
[22:27] <svnbot6> r15127 | putter++ | PROBLEMS - if "cpan -i  Task::Smoke" fails because  Task::TAP::Model 0.06 install fails, just force install Task::TAP::Model.

[22:29] *** ProperNoun joined
[22:31] <putter> Is pil2js known to be broken?

[22:31] <putter> I'm getting $ ./pugs -Bjs -e 'say 3;'  36483: ReferenceError: _26Main_3a_3astatement_control_3acond is not defined

[22:32] <putter> Same error in  make test-js .

[22:40] <nothingmuch> ingy: pong

[22:41] *** hexmode joined
[22:42] *** luqui joined
[22:44] *** GabrielVieira2 joined
[22:46] <putter> anyone: does ./pugs -Bjs -e 'say 3;' work for you?

[22:49] <audreyt> fixing.

[22:50] *** whooosh joined
[22:54] <putter> danke

[22:56] <stevan> audreyt: how was POPL?

[22:56] <TimToady> she didn't go

[22:56] <stevan> ??

[22:56] <TimToady> family emergency

[22:56] <stevan> ah

[22:57] <stevan> audreyt: well then I hope @family is well

[22:57] <audreyt> it's better now

[22:57] <TimToady> audreyt: I hope P6 still fits in your head...  :)

[22:58] <stevan> audreyt: we can do an informal POPL at some YAPC this year then :)

[22:58] <stevan> we can all pretend to be PhDs for you :)

[22:58] <dduncan> good to hear

[22:58] <audreyt> TimToady: I hope so too, though at the moment jifty claims my spare attention because obra is arriving soon...

[22:59] <audreyt> as in, less than 24 hours

[23:01] <audreyt> and I wasted too much time watching the LoTR DVD set :/

[23:01] <nothingmuch> it's not worth it ;-)

[23:01] <nothingmuch> that movie really managed to take away 90% of the charm of the book

[23:01] <nothingmuch> leaving just the looooooong story

[23:01] <nothingmuch> s/movie/vague plural/;

[23:02] <audreyt> well, but when you have verses in the book running through your head in sync with movie...

[23:02] <dduncan> I regret that the movie left out the ending of the book

[23:02] <dduncan> eg, how the home is not unaffected by the worldwide events

[23:02] <nothingmuch> that bugged me too

[23:03] <nothingmuch> but not as much as how all the characters were flattenned

[23:03] <dduncan> that was a powerful and important part of the story

[23:03] <TimToady> well, my favorite chapter was A Conspiracy Unmasked, and that disappeared as well

[23:03] <audreyt> putter: the problem is that JS.pm needs to accomodate statement:cond form

[23:03] <TimToady> nevertheless, I think the movies will help some people read the book that would not otherwise have sufficient imagination

[23:03] <audreyt> which unlike the :if form, takes two arguments as full closures instead of blocks

[23:04] <audreyt> and so will need to do the pil2js equiv of closure apply .()

[23:04] <dduncan> in regards to the recent "Numeric Semantics" thread on p6l, I wanted to clarify something here before I replied on p6l ...

[23:04] <TimToady> I just revised conditionals and loops return values to make it easier to write list comprehensions...

[23:04] <putter> audreyt: regards moving things from Prim.hs to Prelude.pm... my fuzzy impression is you've said this is currently doable, and a worthwhile thing.  are both of those impressions true?

[23:04] <audreyt> I'm checking in something that doesn't do the .() -- it's 7am here and I think I can't think too well

[23:04] <putter> ok.

[23:05] <putter> I'll add it to TASKS/TALK ;)

[23:05] <putter> my thanks

[23:05] <dduncan> specifically, regarding the relationship between Num and Int and which does what ... or what you get when you say 1.0 ...

[23:05] * putter contemplates creating a project_planning/QUESTIONS_FOR_AUDREYT file

[23:05] <audreyt> putter: my fuzzy impression is as precise as yours

[23:06] <putter> lol

[23:06] <audreyt> as in, I recall its doability and worthwhilability

[23:06] <putter> hmm, let's see, other 7am questions...

[23:06] <audreyt> but as of which parts of Prim.hs is amenable this way I really have no idea

[23:07] <dduncan> I would be inclined to say that Int and Num are completely disjoint, but that Int values and Num values can be mapped, as numbers can be mapped with character strings ... also, that any literal numeric declared with a radix point in it is a Num, while those without are an Int

[23:07] <dduncan> so 1.0 and 1. are num, 1 is an int

[23:07] <luqui> It is certainly not the case that Num does Int

[23:07] <luqui> whether Int does Num is up for debate

[23:07] <luqui> or already defined :-)

[23:08] <svnbot6> r15128 | audreyt++ | * PIL2JS - Prelude/JS: Add a stub statement:cond form that

[23:08] <svnbot6> r15128 | audreyt++ |   compiles but doesn't really work: The problem is that the

[23:08] <svnbot6> r15128 | audreyt++ |   body/else arguments need to be applied as closure, not as block.

[23:08] <dduncan> one thing I need a bit of a refresher on is whether a .does relationship is intended to say that one is a subset of the other, or whether they are just mappable

[23:08] <putter> getting a feel for OO AST... how far away is, say, pugs being able to output the OO AST for PIL2JS, like it currently does the old one.  in audreyt-person-days say, order of magnitude.  more like 1, 10, 100, 1000?

[23:08] <dduncan> eg, if Int and Num are like I said, Int is not a subset of Num, but they are mappable, so I don't know if .does is appropriate ...

[23:09] <putter> person-days rather than calendar days

[23:09] <luqui> is there any difference between a <: b, and a mappable to b?

[23:09] <dduncan> on the other hand, if Num .does Str, then it makes sense for Int .does Num

[23:09] <luqui> (I mean semantically within the language)

[23:10] <audreyt> putter: MO integration and adjustment for AST... order of magnitude is 10, that is if I get sufficient sleep

[23:10] *** nipra joined
[23:11] <dduncan> Is there agreement or disagreement here that 1.0 and 1. should be Num and not Int?  I think that best fits with programmer intentions, and makes parsing easy and predictable.

[23:11] <dduncan> just 1 should be Int

[23:11] <TimToady> luqui: what do you think about [...] implying [do ...]?

[23:11] <putter> audreyt: thanks :)

[23:11] <TimToady> Last I checked 1. was illegal

[23:11] <dduncan> okay

[23:11] *** Aankhen`` joined
[23:12] <luqui> TimToady, well, I think it's obvious if nothing else

[23:12] <dduncan> then I say 1.0 should be a Num ... agree or disagree?

[23:12] <luqui> (4 if 1 < 2)

[23:12] <luqui> what else could that mean?

[23:12] <audreyt> TimToady: I may be totally out of date... but [say 1; say 2]

[23:12] <audreyt> is there a do on both sides of ; ?

[23:12] <audreyt> [4 if 1; 5 if 2] # more concrete

[23:12] <TimToady> good question

[23:13] <TimToady> seems to be implied after ; for ordinary statements...

[23:13] <TimToady> so maybe there too.

[23:13] <luqui> but I'm not sure about it's expressive power as a list comprehender.  have to see it in practice...

[23:13] <TimToady> [...] just harvests all values instead of final

[23:13] <audreyt> what does (4 if 1; 5 if 2) mean nowadays?

[23:13] <audreyt> do infix:<;> has some use in () ?

[23:14] <TimToady> no use currently, so probably multidim there too

[23:14] <luqui> hey, you know, or a syntax error?

[23:14] <audreyt> and ; inside {} forces statement meaning

[23:14] <luqui> eh

[23:14] <luqui> not really necessary

[23:14] <luqui> the way that would catch an error is by a misbalanced parenthesis, which will be caught later anyway

[23:14] <TimToady> depends on whether you want a multidim hash, I suppose.  :)

[23:15] <audreyt> not sure multidim hash can be naturally expressed with semi

[23:15] <audreyt> in construction form anyway

[23:16] <TimToady> well, you'd like multidim slice subscripts, anyway

[23:16] <TimToady> basically the context decides what to do with ; in any case

[23:16] <TimToady> most of the time we know we can spread void context over all-but-last statement

[23:18] <audreyt> presumably (1, 2 ; 3, 4)[1][1] is 4?

[23:18] <TimToady> anyway, without having thought it through entirely, it feels like there's a balance point in there that allows list comprehensions without compromising parsing typology

[23:18] <TimToady> dunno, certainly (1,2; 3,4)[1;1] is 4

[23:19] * luqui isn't sure of TimToady's definition of typology

[23:19] <TimToady> is anyone?

[23:19] <TimToady> :)

[23:20] <TimToady> it's an open question whether [][] is isomorphic to [;] in P6

[23:20] <luqui> okay, funny.  but I'm saying I have no idea what you meant by the latter part of that senteence.

[23:21] <TimToady> I mean if something's a closure and not a hash composer, we can optimize it.

[23:21] <TimToady> knowing statements are mostly in void context

[23:22] <TimToady> after reading the Lua paper I'm sorely tempted to do all composers with [...] and leave bare {...} only for closures

[23:22] *** Psyche^ joined
[23:22] <luqui> which lua paper?

[23:22] * luqui wouldn't be terribly opposed to that

[23:22] <TimToady> sec

[23:23] <audreyt> TimToady: well, sub { @@_[1][1] }.(1,2 ; 3,4) is 1, iirc.

[23:24] <TimToady> http://www.tecgraf.puc-rio.br/~lhf/ftp/doc/hopl.pdf

[23:24] <svnbot6> r15129 | putter++ | TASKS/TALK - added "Fix PIL2JS".

[23:26] <TimToady> audreyt: yes, but that's with special unpacking

[23:27] <TimToady> or special packing, depending on how you look at it.

[23:27] <TimToady> take each slice and assume [...] around it...

[23:27] <audreyt> *nod*

[23:28] * putter muses "if redsix was taught to emit PIL1, PIL2JS could start evolving again..."

[23:28] <TimToady> but I kinda like the recent development that things like "take" put multidim boundaries in that are usually ignored.

[23:28] <TimToady> presumably map is the same.

[23:29] *** devogon joined
[23:31] <TimToady> but arguably it's lists of lists all the way down, and we're just conventionally ignoring the top N dimensions where N is usually 1.

[23:35] <dduncan> the p6l post is sent

[23:39] <svnbot6> r15130 | putter++ | TALK - added "KP6 on PIL2JS?"

[23:39] *** Psyche^ is now known as Patterner

[23:40] <putter> audreyt: so oo ast looks vaguely like Q2 or Q3 2007?

[23:40] <putter> s/vaguely/something very vaguely/

[23:44] *** explorer joined
[23:47] <audreyt> putter: I don't really know. I think I can resume pugswork once $home work settles a bit.

[23:47] <audreyt> I've diverted $job away mostly

[23:48] <audreyt> but we'll see. I need to run the bank to try to figure out how to abort ACM's reimbursement wire trasfer now...

[23:48] <audreyt> bbl

[23:49] <audreyt> er, run to the back.

[23:49] <audreyt> *bank

[23:49] <audreyt> (evidently sleep deprived ;)) &

[23:49] <putter> np.  i'm just attempting a rough quantitative feel for when various milestones on the road to xmas might be...

[23:52] <putter> Though putter is a bit puzzled.  He doesn't see any missing prerequisites for a full p6 implementation in p6 being written *now* on pugs.  So why isn't it?

[23:53] <TimToady> mostly because pugs itself doesn't have its own rule engine yet, I think.

[23:54] <TimToady> it's always been a bridge to pcre, parrot, or v6...

[23:55] <luqui> and of course, pugs's data structure handling is buggy, so it's hard to make progress

[23:56] <luqui> (I've been trying to debug it, but I can't get anywhere)

[23:56] *** diotalevi joined
[23:56] *** jrigby joined
[23:56] <putter> no nicely working grammar -> can't write grammar yet -> working on parser is unattractive

[23:57] <putter> luqui: "data structure handling is buggy", elaborate?

[23:57] <putter> once upon a time there was:  pugs oo is buggy -> hard to make progress on something as large as a p6 implementation (but my fuzzy impression is this is believed to no longer be the case)

[23:58] <putter> there is also:  no oo ast spec -> discourages writing core ast code and emitters

[23:59] <putter> are those 2/3 the only things discouraging folks from beginning a full p6-in-p6 implementation now?  any other thoughts?

