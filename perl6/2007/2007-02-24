[00:00] <putter> pugs, which has the only full one (kp6 being a runner up), wont share all its info (particularly class decls).

[00:00] <audreyt> putter: perl6::Bar is fine.

[00:00] <lambdabot> audreyt: You have 4 new messages. '/msg lambdabot @messages' to read them.

[00:00] <putter> which has been a dev bottleneck for... just about two years now.

[00:00] <putter> re fine, :)

[00:00] <putter> bottleneck might be gone by itself real soon now.

[00:00] <audreyt> re class decls, that's because not pugs itself know about it

[00:01] <audreyt> (no introspection. aka, no MO, hence no MO dump)

[00:01] <putter> but doing an opp and grammar based might be good practice, drive the spec, and make 6.err, the one after next, easier to do.

[00:01] <audreyt> re 6.283, yes. critical, even.

[00:01] <putter> re itself, indeed :)

[00:02] <audreyt> re MO hacking, will do that as long as disk0s2: 0xe0030005 (UNDEFINED). goes away

[00:02] <audreyt> need to spend ~2hr running ddrescue

[00:02] <audreyt> since it's creeped into ~/.svk/ area and hence interfere with hacking

[00:02] <audreyt> *as soon as

[00:02] <putter> so, given the perhaps questionable insanity of "let's write a new p6 parser", a next question is

[00:03] <putter> re disk, eep

[00:03] <putter> lol

[00:03] <audreyt> mm "questional insanity" :) anyway, I'll resurface after ddrescue is done 

[00:03] <audreyt> meanwhile enjoy :) &

[00:04] <putter> (image of audreyt watching disk progressively die, but thinking "no, it hasn't hit /svk yet, so it's not important", and goes back to hacking...;)

[00:04] <putter> thus the lol

[00:04] <putter> good luck

[00:05] <putter> so given an attempt to write a full p6 parser, a next question is how to test.  to judge progress, validated design decisions, determine success, etc.

[00:06] <putter> While you need to track sub arity to do a basic parse (basic as in no BEGIN, etc), I think that's about it.

[00:07] <putter> So rather than trying to create a runtime to go with the parser, one could output PIL instead.

[00:07] <putter> Could check it against pugs -CPIL output, but that kind of game tends to get messy, as non-essential details complicate comparison.

[00:08] <putter> But "PIL2JS passes test using new parser's PIL instead of pugs's parser's PIL" is a good proxy for "your new parser is working".

[00:17] <putter> a new parser could certainly be written in haskell.  should eventually (or perhaps just p6).

[00:17] <putter> isnt p6 now because I don't trust pugs (without audreyt at hand) to not have gotcha path blocking bugs.

[00:19] <putter> but hs vs p5, the regex engine I have the greatest short-term hope for is p5.  hmm, but with p5 now linked into pugs, that's mostly a non-argument.

[00:20] <putter> part of the p5 vs hs thought is that the p5-based components of pugs seem to have drawn more developers and developed comunities more than the hs component has.

[00:20] <putter> eg Moose

[00:21] <putter> end of first level response. ;)

[00:23] *** ofer0 joined
[00:25] *** Limbic_Region joined
[00:26] <putter> s/-CPIL/-CPIL1/   -CPIL1-PERL5 being used by PIL2JS (I think?).  -CPIL1-JSON or -CPIL1-YAML perhaps your best bet â€Žif you want to try your hand at writing a new backend.

[00:26] <putter> That means *you*.  :)

[00:27] <putter> (for every/and(@you))

[00:27] <putter> s/and/any

[00:29] <putter> It's not an enormous task.  PIL2JS and PIL-Run were sortof working in just a day or three.  With PIL2JS to serve as a prototype, if you keep the same design (a good idea), its basically a transliteration exercise.

[00:29] <putter> end of advertisement

[00:33] <putter> cd  perl5/PIL2JS/; ./runjs.pl -e 'say "Hello, World!"'   ... doesn't say anything. :(

[00:33] <putter> @seen iblech

[00:33] <lambdabot> I haven't seen iblech.

[00:42] <putter> hmm... very old spidermonkey

[00:46] *** ashleyb joined
[00:48] <Gothmog_> 0

[00:48] <Gothmog_> Whoops.

[00:54] *** mjk joined
[00:56] *** explorer joined
[00:57] <gaal> putter: you moosed?

[00:58] <gaal> I'm back from a few drinks w/ friends from around and abroad so I'm thinking as straight as my antlers but... elk?

[01:00] <putter> lol

[01:00] <putter> laugh, groan, etc

[01:01] <gaal> was funny, but we were just looking for a place and accidentally landed on a pick-up bar so was v loud and smokey etc.

[01:01] <gaal> I'm about to hit the shower and sleep

[01:02] <xerox> Hit the shower, hit the sack. Two frags in a row.

[01:02] <putter> I was going to ask about the new tree, and where to find it.  but I decided the old tree in the back yard would make a better subject, since I could more easily compare it to the new parser's tree sketches.

[01:02] <gaal> Pugs.Val

[01:02] <gaal> and Pugs.Val.*

[01:03] <putter> danke

[01:03] <gaal> some of it is active already

[01:03] <gaal> also some possibly outdated "rest of it, not yet transcrivbed" is in CaptInternals.hs

[01:03] <gaal> s/t// maybe

[01:04] <gaal> however, be advised audreyt has some sekritt plan to simplify the basic scheme

[01:04] <putter> ok.  PIL2JS isnt working for me, so the old tree may not... fly doesnt seem the right word but...

[01:04] <gaal> ie: newVal currently is based on a variant moose of IIRC 5 subtypes

[01:05] <gaal> native, uh something else immutable I guess, mutable (==STM), external (==IO)

[01:05] <putter> oooo, secret simplicity plans.  complexity seems to be the thing which always stops "try to take over the world" projects.

[01:05] <gaal> the first to are represnted by rank-1 simple |variants like a sane haskell programmer would do

[01:06] <gaal> however as everybody knows, there's not really such a thing (!ExSx) as a sane Haskell programmer,

[01:06] *** Grrrr joined
[01:06] <putter> ("i didn't say it")

[01:06] <gaal> the third three variants are existentially quantified

[01:07] <putter> k

[01:07] <gaal> "to be or not to be? It depends, what monad are you in, for starters?"

[01:07] <putter> hmm.... stm, the death of alternate backends?

[01:07] <gaal> hmm i dunno

[01:07] <putter> lol

[01:08] <gaal> it was a reaosnable transcription of the prexsiting, at the time, L<S06/"Mutable Types">

[01:08] <putter> ooo, oo, maybe if I write an arrow library for p6, noone will ever use monads in 6!  oops, evil plan revield.

[01:08] <gaal> so ask TimToady -- I don't think he was thinking specifically STM when he enumerated these types but maybe he was?

[01:09] <putter> k

[01:09] <putter> lots of delightful reading pointers.  thanks! :)

[01:09] <gaal> or oh, maybe no, regualr mutable  <=> IO types is an audreyt distinction

[01:09] <gaal> not sure if it's even reflected in the S06 enumerations

[01:10] <gaal> sorry too drink to look up now

[01:10] <gaal> *u

[01:10] <putter> cheers, tnx

[01:10] <gaal> yeah that shower.... mm&

[01:11] <gaal> oh also another pointer... an advantage of using existentials as they are layed out in this newVal thing is "open types"

[01:11] <gaal> @google rafl open types

[01:11] <lambdabot> http://bugs.xmms2.xmms.se/view.php?id=1031

[01:12] <lambdabot> Title: 0001031: No mime type reported for files in the medialib. - Mantis

[01:12] <gaal> @google ralf open types

[01:12] <lambdabot> http://portal.acm.org/citation.cfm?id=1140352&dl=ACM&coll=&CFID=15151515&CFTOKEN=6184618

[01:12] <lambdabot> Title: Open data types and open functions

[01:12] <gaal> (oops)

[01:12] <gaal> yeah, that one

[01:12] <gaal> the idea is code organization, you can define a type in some Hs compilation unit other than where the base Val type was mentioend

[01:13] <gaal> and augment it

[01:13] <gaal> ie., this is (also) a Hs implementation/engineering decision

[01:13] <gaal> ok where's that shower zz&

[01:16] <avar> gaal: I was looking at your smoke server slides and was wondering about ripping the smoke serv client script out as Module::Install::Smoke

[01:17] <avar> smokeserver 'http://..../serv'; # In Makefile.PL

[01:18] <avar> I wonder what cpan testers use, you could optionally submit stuff to them

[01:18] <avar> "Do you want to upload smokes along with make test [y/n]"

[01:24] * avar sleep &

[01:25] <gaal> avar: look at Chimps on CPAN and talk w/ obra -- they use this in production AFAIK

[01:25] *** CardinalNumber joined
[01:25] <gaal> putter: one last thing -- re: portability and STM

[01:26] <gaal> you can think at the very least of the VMut / VExt distinction as a helpful boon for non-Hs backends, like so:

[01:26] <gaal> condent { say "oops, I shouldn't run" }

[01:26] <svnbot6> r15336 | putter++ | READTOO - added new (duplicate;) entry for "Open data types and open functions".  Can be deduped later.  For now, keeps file active and builds interest.

[01:26] <gaal> -- this is a runtime exception in haskell backend for free

[01:27] * putter listens attentively....

[01:27] <gaal> how do backends w/o natural STM know that say is unsafe fro STM?

[01:27] <TimToady> *contend

[01:27] <gaal> well, they don't, except hey, helpfully perhaps non-STM thingies in the AST are marked as VExt :)

[01:28] <gaal> so at the very least this is useful documentation

[01:28] *** CardinalNumber is now known as ProperNoun

[01:28] <avar> gaal: ohh, awesome

[01:28] <putter> ah

[01:28] <TimToady> and the thread continuation monad may provide similar for thread vs event issues

[01:29] <TimToady> assuming we take the approach of http://www.seas.upenn.edu/~lipeng/homepage/unify.html

[01:29] <lambdabot> Title: Unifying events and threads

[01:29] <gaal> in short (you folks)++ and I shall now take my leave etc.

[01:29] <gaal> & fer real

[01:30] <putter> back.  thanks gaal!

[01:32] *** mako132 joined
[01:35] <TimToady> someone else mentioned it first a while back here...

[01:35] <svnbot6> r15337 | putter++ | READTOO - added "A language-based approach to unifying events and threads".

[01:35] <putter> ?

[01:39] <TimToady> hmm, must have been somewhere else I saw it first...colabti only sees your new entry.

[01:40] <TimToady> maybe it was in the chatterbox

[01:40] <allbery_b> it was mentioned here, IIRC

[01:43] <TimToady> yeah, audreyt, http://colabti.de/irclogger/irclogger_log/perl6?date=2007-02-09,Fri#l363

[01:43] <lambdabot> Title: #perl6 2007-02-09,Fri, http://tinyurl.com/243zsh

[01:47] <putter> ok.  I notice in READTOO's log masak correcting "credit" and date of mention.  err, it's just a slush file created because I was tired of having to grovel back through colabti.  the date was just included for staleness, and the who, I don't know, randomness.  just in case you wanted to discuss it.

[01:47] <svnbot6> r15338 | lwall++ | correctly ascribe "unify" first mention to audreyt

[01:47] <svnbot6> r15338 | lwall++ | some random cleanups in P6STD

[01:48] <putter> bemused, putter goes back to hacking

[01:49] <putter> though, perhaps the thing is to *add* mentioned by lines, each time its mentioned, and any extra links (and dates?)

[01:58] <putter> @audreyt Was test-js actually working for you back around -r14356?  It happily runs for me, but has 01-sanity failures. :/

[01:58] <lambdabot> Unknown command, try @list

[01:58] <putter> @tell audreyt Was test-js actually working for you back around -r14356?  It happily runs for me, but has 01-sanity failures. :/

[01:58] <lambdabot> Consider it noted.

[02:02] <putter> fixing PIL2JS is already a ticket.

[02:04] <putter> probably shouldnt have spent good hacking time on it, but if it had worked, that would have been fun.

[02:05] <putter> there is a call PIIL2JS from p5 with callbacks embedding existent.  so could easily set PIL2JS up to accept PIL trees created by new p5 code.

[02:06] <putter> could get "say 3" parsed, ast built, PIL emitted, and run on PIL2JS, in no time. ;)

[02:12] <putter> good night all &

[02:34] *** Schwern joined
[02:55] *** deq`_ joined
[03:03] <svnbot6> r15339 | lwall++ | P6STD syntax cleanups

[03:23] *** weinig is now known as weinig|away

[03:25] *** araujo joined
[03:36] *** bsb joined
[03:59] *** GabrielVieira joined
[04:04] <devbot6> planet6: Audrey Tang: ddrescue'ing <http://pugs.blogs.com/pugs/2007/02/ddrescueing.html>

[04:14] *** justatheory joined
[04:21] *** Psyche^ joined
[04:34] *** Psyche^ is now known as Patterner

[04:42] <devbot6> planet6: Luke Palmer: Dwimmery sanity <http://use.perl.org/~luqui/journal/32489?from=rss>

[04:43] *** kanru joined
[04:58] *** nperez joined
[05:08] *** Psyche^ joined
[05:21] <svnbot6> r15340 | lwall++ | Getting P6std runnable by pugs by postprocessing.

[05:24] *** nipra joined
[05:25] *** Psyche^ is now known as Patterner

[05:36] *** Gothmog_ joined
[05:42] <svnbot6> r15341 | lwall++ | cheat Perl-6.0.0-STD.pm | pugs -CPIL1-YAML now succeeds

[05:45] *** colberto joined
[05:45] *** Eidolos joined
[05:49] <TimToady> well, it succeeds in the sense that it doesn't blow up...

[05:49] <TimToady> There are still lots of infelicites, such as the fact that only one of each multi regex shows up...

[05:50] <TimToady> which is likely something the "cheat" script will have to deal with anyway for bootstrapping.

[06:13] *** BooK joined
[06:33] *** jisom joined
[06:34] *** revdiablo joined
[06:34] *** jisom left
[06:34] *** jisom joined
[08:03] *** BooK joined
[08:08] *** elmex joined
[08:33] *** drupek12212157 joined
[08:59] *** jisom_ joined
[09:00] *** rindolf joined
[09:00] <rindolf> Hi all.

[09:00] <lambdabot> rindolf: You have 1 new message. '/msg lambdabot @messages' to read it.

[09:30] <rindolf> moritz: here?

[09:36] *** Kattana joined
[09:59] <moritz> rindolf: yes, now ;)

[10:01] <rindolf> moritz: I fixed the broken link.

[10:02] <moritz> rindolf: ok ;)

[10:02] <rindolf> moritz: thanks for reporting it.

[10:02] <moritz> rindolf: np ;)

[10:02] <rindolf> I'm nearing r1000 in my homesite's repository.

[10:06] *** iblechbot joined
[10:19] *** chris2 joined
[10:21] *** bsb left
[10:31] *** pulqe joined
[10:55] *** larsen_ joined
[10:57] *** turrepurre joined
[11:26] *** mj41 joined
[11:45] *** Eidolos joined
[11:54] *** elmex joined
[12:12] *** wilx joined
[12:14] *** CardinalNumber joined
[12:18] *** sunnavy joined
[12:23] *** TimToady joined
[12:25] *** larsen_ joined
[12:30] *** larsen__ joined
[12:32] *** CardinalNumber is now known as ProperNoun

[12:47] *** larsen_ joined
[12:51] *** Belaf joined
[12:57] *** larsen_ joined
[13:01] *** Psyche^ joined
[13:10] *** Kattana joined
[13:17] *** Psyche^ is now known as Patterner

[13:19] <meppl> gute nacht

[13:22] *** CardinalNumber joined
[13:34] *** dmq joined
[13:40] *** ayrnieu joined
[13:41] *** CardinalNumber is now known as ProperNoun

[14:10] *** wilx` joined
[14:25] *** buetow joined
[14:33] <svnbot6> r15342 | kudra++ | Content added

[14:39] *** wilx` is now known as wilx

[14:43] <devbot6> planet6: Audrey Tang: Weekly Perl 6 mailing list summary for 29 January - 3 February, 2007 <http://pugs.blogs.com/pugs/2007/02/weekly_perl_6_m_1.html>

[14:50] *** Limbic_Region joined
[14:51] *** shay_ joined
[14:52] *** shay_ is now known as shay

[14:54] *** larsen_ joined
[15:15] *** rindolf joined
[15:28] *** cookys joined
[15:29] <rindolf> Hi all.

[15:29] <Limbic_Region> salutations rindolf

[15:29] <rindolf> Hi Limbic_Region 

[15:29] <rindolf> Limbic_Region: what's up?

[15:29] <Limbic_Region> me unfortunately

[15:30] <Limbic_Region> I think I would rather be in bed sleeping

[15:30] <Limbic_Region> you?

[15:32] <rindolf> Limbic_Region: well...

[15:33] <rindolf> Limbic_Region: I added Google AdSense to my DocBook/XML-generated essays and to my presentations.

[15:33] <Limbic_Region> I saw that in #perl

[15:33] <rindolf> Limbic_Region: and prepared a presentation about the Joel Test for Python-IL.

[15:33] * Limbic_Region is pretty ignorant of adsense

[15:34] <Limbic_Region> well, it sounds like you are being productive - that's more than I can say :-)

[15:34] <rindolf> Limbic_Region: more than you can say about yourself?

[15:34] <Limbic_Region> correct

[15:35] <rindolf> Limbic_Region: OK.

[15:36] <dmq> juerd?

[15:38] <dmq> summon juerd

[15:38] <dmq> :-)

[15:50] *** putter joined
[15:54] <putter> @tell audreyt Could the pugs backend be driven by externally generated yaml?  Ie, do you have a feel for how fragile it is/isn't?  How much implicit/idiomatic dependency is present.  I was thinking of exposing loadPreludePC...

[15:54] <lambdabot> Consider it noted.

[15:55] <SamB> putter: what do you suppose is the best way to find out?

[15:55] <SamB> btw, yaml seems fiendishly complicated...

[15:55] <putter> Ask audreyt. :)

[15:55] * SamB was thinking "try it"

[15:57] * moritz was thinking "let somebody else do the work" ;)

[15:59] <putter> re "someone else", yes, delegate questions to someone who can answer without thinking hard, rather than spending days generating a not-as-good answer. :)

[15:59] <putter> re trying it, let's see...

[15:59] <moritz> putter: I fully agree ;)

[16:00] *** ofer0 joined
[16:02] <putter> Hmm, I was thinking it non-trivial to try/play, but.... if one hardcoded loadPreludePC to load a second file in addition to the prelude, if it worked at all, one could then  dump something simple in the file and see if it showed up....

[16:03] <putter> (mutating or replacing the existing prelude appearing much more problematic alternatives)

[16:03] <putter> SamB++

[16:04] <putter> (though it's still mission creep :( :)

[16:04] <putter> bbl (or tomorrow) &

[16:06] *** allbery_b joined
[16:33] *** shlomif joined
[16:40] *** turrepurre joined
[16:50] *** larsen__ joined
[16:58] *** larsen___ joined
[17:03] *** [M]erk joined
[17:03] *** larsen_ joined
[17:35] *** elmex joined
[17:39] *** rindolf joined
[17:39] <rindolf> Hi all.

[17:41] <rindolf> How's audreyt ?

[17:41] <allbery_b> recovering and back in circulation

[17:41] <rindolf> allbery_b: nice. Good to hear.

[17:42] <allbery_b> ...but will probably be <100% for a few months yet

[17:43] <rindolf> What is the timezone of the nntp.perl.org messages? http://www.nntp.perl.org/group/perl.cpan.testers/2007/02/msg420778.html ?

[17:43] <lambdabot> Title: PASS Test-Run-0.0104 OpenBSD.i386-openbsd 3.5 - nntp.perl.org, http://tinyurl.com/2sul4j

[17:45] *** rhizo joined
[18:08] *** idiotmax joined
[18:18] *** jisom joined
[18:33] *** jferrero joined
[18:38] *** CardinalNumber joined
[18:54] *** CardinalNumber is now known as ProperNoun

[19:02] *** explorer joined
[19:19] *** wilx joined
[19:20] *** tzoa joined
[19:41] <rindolf> miyagawa: here?

[19:42] *** bernhard joined
[19:54] *** tzoa left
[19:56] *** SamB joined
[20:12] <miyagawa> rindolf: pong

[20:12] <rindolf> Hi miyagawa 

[20:13] <rindolf> miyagawa: I already asked my question in #plagger

[20:13] <rindolf> miyagawa: but I have a different problem now.

[20:13] <miyagawa> yes, looking at it

[20:42] *** nipra joined
[20:47] *** macli_ joined
[21:14] *** gnuvince_ joined
[21:21] *** Aankhen`` joined
[21:31] *** kanru_ joined
[21:39] *** Schwern joined
[21:49] *** GabrielVieira2 joined
[22:06] *** macroron joined
[22:09] *** macli_ joined
[22:25] *** Psyche^ joined
[22:28] *** lisppaste3 joined
[22:41] *** Psyche^ is now known as Patterner

[22:53] *** explorer joined
[23:06] *** mako132 joined
[23:14] <Juerd> dmq: pong

[23:14] <moritz> probaply ping timeout ;)

[23:15] <Juerd> dmq: But I'll be gone real soon; my brane hurts and I'm sleepy.

[23:20] <Juerd> afk  # zz

[23:22] *** Squern joined
[23:32] *** larsen_ joined
[23:34] *** GabrielVieira joined
[23:39] *** larsen__ joined
[23:41] *** ewilhelm joined
[23:46] *** __Ace__ joined
[23:46] <__Ace__> AUTHORS:

[23:47] <__Ace__> " Larry Wall wrote the original version of patch." Noway? :)

[23:47] <jql> way

[23:47] <jql> or, if it's a legend, I can confirm it was legendary even 10 years ago. :)

[23:48] <__Ace__> yea, havent been updated in a while..

[23:48] <__Ace__> totally bugfree then eh?

[23:48] <jql> they only ever upgrade diff. :)

[23:49] <__Ace__> heh

[23:49] <__Ace__> what does that tell us?

[23:49] <jql> the bizzare bit is by how far diff predates patch

[23:50] *** drbean joined
[23:51] * allbery_b even remembers lwall releasing patch :)

[23:52] <jql> I was probably in kindergarten that day

[23:53] *** BooK joined
