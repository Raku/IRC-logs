[00:02] *** devogon left
[00:04] *** daxim joined
[00:04] *** jisom left
[00:43] *** weinig left
[00:49] *** buetow left
[00:50] *** buetow joined
[00:55] *** mncharity left
[00:59] *** jisom joined
[01:09] *** weinig joined
[01:18] *** thoughtpolice left
[01:32] *** explorer left
[01:37] *** amnesiac left
[01:39] *** thoughtpolice joined
[01:50] *** polettix left
[01:51] *** rutlov joined
[01:52] *** rutlov left
[01:58] *** mncharity joined
[02:12] *** daxim_ joined
[02:25] *** Limbic_Region left
[02:27] *** daxim left
[03:03] *** buetow left
[03:07] *** pbuetow left
[03:14] *** rutlov joined
[03:14] *** weinig left
[03:14] *** buetow joined
[03:15] *** weinig joined
[03:19] *** rutlov left
[03:23] *** buetow left
[03:40] *** bsb joined
[03:43] *** buetow joined
[04:09] *** amnesiac joined
[04:11] *** TimToady joined
[04:13] *** buetow left
[04:29] *** TimToady_ left
[04:39] *** hkb_aw left
[04:52] *** Schwern joined
[04:54] *** TimToady_ joined
[05:09] *** TimToady left
[05:54] *** mncharity left
[05:59] *** thoughtpolice left
[06:10] *** bsb left
[06:22] *** devogon joined
[06:24] *** jisom left
[06:29] *** justatheory joined
[06:44] *** hkb_aw joined
[06:52] *** Schwern left
[07:03] *** iblechbot joined
[07:04] *** justatheory left
[07:31] *** agentzh joined
[07:31] *** iblechbot left
[07:39] *** weinig left
[07:43] *** amnesiac left
[07:51] *** rgs joined
[07:52] *** rgs left
[07:52] *** rgs joined
[07:56] *** Aankhen`` joined
[08:03] *** timbunce joined
[08:07] *** riffraff joined
[08:08] *** jisom joined
[08:11] *** iblechbot joined
[08:25] *** timbunce left
[08:36] *** timbunce joined
[08:39] <moritz_> good morning ;)

[08:46] *** lesterc joined
[08:47] *** timbunce left
[09:01] *** araujo left
[09:15] *** test left
[09:15] *** test joined
[09:18] *** pmurias joined
[09:18] <pmurias> hi

[09:19] *** elmex joined
[09:24] <moritz_> hi pmurias ;)

[09:24] *** chris2 joined
[09:28] * pmurias is in a dilemma whether to implement double quotes or try to make 05-code-inside-rule.t work in kp6

[09:28] *** masak joined
[09:29] <moritz_> well, do both ;)

[09:29] <moritz_> #pugs rand()

[09:29] <exp_evalbot> OUTPUT[0.7210965431810116␤]

[09:30] <pmurias> moritz_: the obvious choice

[09:30] <pmurias> :)

[09:30] <masak> morning all

[09:30] <moritz_> #pugs if rand() < 0.5 { print "double quoted strings" } print { say "05-code-inside-rule.t" }; say " first";

[09:30] <exp_evalbot> OUTPUT[<SubBlock(<anon>)> first␤]

[09:30] <pmurias> masak: morning

[09:31] <moritz_> #pugs if rand() < 0.5 { print "double quoted strings" } else { print "05-code-inside-rule.t" }; say " first";

[09:31] <exp_evalbot> OUTPUT[05-code-inside-rule.t first␤]

[09:32] <masak> I'm afraid to admit that the pugs bug I found yesterday kept me up way too long into the night

[09:32] <masak> that's a first for me: sleeplessness by pugs bug

[09:33] <masak> I didn't solve it, but I gained some further insight into the architecture of pugs

[09:33] <masak> and I trimmed down the problem itself into as few lines as possible

[09:33] <masak> so I guess it wasn't a total waste

[09:34] <masak> question: when a test failure only manifests through the use of a module, what is the proper placement of that module? should I still put it in ext/?

[09:35] *** exp_evalbot left
[09:35] <pugs_svnbot> r17595 | moritz++ | [evalbot] added help message, updated TODO

[09:35] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17595

[09:35] <lambdabot> Title: Changeset 17595 - Pugs - Trac

[09:35] *** exp_evalbot joined
[09:36] *** exp_evalbot left
[09:36] *** exp_evalbot joined
[09:37] *** polettix joined
[09:38] <moritz_> masak: yes, but document it ;)

[09:39] <moritz_> masak: what was the bug btw?

[09:40] <moritz_> nobody really expects ext/ to be BugFree[tm]

[09:41] <moritz_> exp_evalbot: help

[09:41] <exp_evalbot> moritz_: Usage: <\#(nqp|pugs|p6|eval|kp6) $perl6_program>

[09:41] <masak> moritz_: the bug is disturbing to say the least

[09:42] <masak> I will put together a nopaste for you to demonstrate

[09:42] <masak> commit coming shortly, too

[09:43] <moritz_> don't hurry for me, I'll be off to breakfast soon ;)

[09:43] <moritz_> but I'll backlog

[09:43] <masak> sounds good

[09:44] <moritz_> my girlfriend is preparing scones atm ;)

[09:44] <masak> woot

[09:44] <masak> :)

[09:45] <moritz_> normally I do the cooking (like pancakes for breakfast), so it's a nice change ;)

[09:46] <masak> I'd say

[09:49] <moritz_> btw why is it so hard to write a haskell debugger? is it because the execution modell is quite different from the way the code is written?

[09:51] <masak> it doesn't sound overly hard

[09:51] <masak> but debugging would probably not be very much like execution, no

[09:51] <masak> you wouldn't want to see all the massive optimizations when debugging

[09:51] <moritz_> I assumed it was hard because the debugger for ghc was implemted rather lated

[09:52] <moritz_> s/lated/late/

[09:52] <masak> there's a debugger for ghc? where? where?

[09:52] * masak needs it badly

[09:52] <masak> I think

[09:52] <moritz_> I thought I heard there was an effort to write one

[09:52] <moritz_> but my haskell knwledge is dangerously incomplete

[09:53] <masak> @google ghc debugger

[09:53] <lambdabot> http://hackage.haskell.org/trac/ghc/ticket/598

[09:53] <lambdabot> Title: #598 (GHC Debugger) - GHC - Trac

[09:53] <masak> wow

[09:59] <pmurias> #pugs my $a=[1];say $a[0];

[09:59] <exp_evalbot> OUTPUT[1␤]

[09:59] <pmurias> #pugs my $a=[1];say $a[-1];

[09:59] *** agentzh left
[09:59] <exp_evalbot> OUTPUT[1␤]

[10:00] <moritz_> it should really be [*-1[, but that is NYI in pugs

[10:00] <moritz_> s:2nd/'['/]/

[10:01] <masak> hm, maybe I'll know enough soon to be able to implement it

[10:01] <masak> it doesn't look impossible

[10:04] <pmurias> moritz_: there seems to be hat for haskell debuginh

[10:04] <pmurias> *debuging

[10:04] <masak> hat?

[10:04] <pmurias> yes

[10:04] <lumi> There's an interactive debugger in ghc 6.7

[10:05] * masak downloads ghc 6.7

[10:05] <pmurias> http://www.haskell.org/hat/

[10:05] <lambdabot> Title: Hat - the Haskell Tracer

[10:05] <masak> pmurias: nice

[10:05] <pmurias> haven't tried it, but it looks much more usefull then the standart imperative debugger

[10:07] <pmurias> *standard

[10:07] *** buetow joined
[10:08] * pmurias needs @array[*-1] in mp6

[10:10] <pmurias> @array[0-1] works :)

[10:10] <lambdabot> Unknown command, try @list

[10:11] *** rhizo left
[10:17] *** lesterc left
[10:26] *** jisom left
[10:39] <pugs_svnbot> r17596 | masak++ | [t/builtins/arrays/]

[10:39] <pugs_svnbot> r17596 | masak++ | * here is the new pugs bug, in all its glory:

[10:39] <pugs_svnbot> r17596 | masak++ | ** it seems that arrays initialized with "my" (but not assigned to)

[10:39] <pugs_svnbot> r17596 | masak++ |    in subs called from outside the method, are not initialized

[10:39] <pugs_svnbot> r17596 | masak++ |    properly and contain vestiges from earlier calls

[10:39] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17596

[10:39] <lambdabot> Title: Changeset 17596 - Pugs - Trac

[10:41] <pasteling> "masak" at 130.238.204.78 pasted "A demonstration of the array init bug" (43 lines, 1K) at http://sial.org/pbot/27259

[10:41] <pugs_svnbot> r17597 | masak++ | removed outdated comment about being in ext/

[10:41] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17597

[10:41] <lambdabot> Title: Changeset 17597 - Pugs - Trac

[10:47] *** riffraff left
[10:47] <moritz_> scones take up less spaceif aligned to hexagonal lattice ;)

[10:47] <masak> heh.

[10:48] <masak> yes, that should be the most area-efficient arrangement for roughly circular scones

[10:57] *** renormalist joined
[11:00] <masak> lunch &

[11:01] <Patterner> Learn from Battle For Wesnoth :)

[11:16] *** chris2 left
[11:20] <moritz_> learn from  math courses ;)

[11:21] <pmurias> renormalist: hi

[11:21] <pugs_svnbot> r17598 | pmurias++ | [kp6] emitting inner code blocks in rules as seperate methods,unfortunatly self gets scrambled

[11:21] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17598

[11:21] <lambdabot> Title: Changeset 17598 - Pugs - Trac

[11:27] <renormalist> pmurias: hi

[11:27] <lambdabot> renormalist: You have 1 new message. '/msg lambdabot @messages' to read it.

[11:27] <moritz_> compilation of IO.pm is screwed for me (in kp6): COMPILE lib/KindaPerl6/Runtime/Perl6/IO.pm lib5/KindaPerl6/Runtime/Perl6/IO.pm

[11:27] <moritz_> Can't load ExtractRuleBlock plugin: Can't locate KindaPerl6/Visitor/ExtractRuleBlock.pm in @INC

[11:27] *** TimToady joined
[11:28] <renormalist> moritz_: since when?

[11:28] <moritz_> I don't know, perhaps a few days, perhaps since yesterday

[11:29] <moritz_> maybe somebody forgot to svn add ExtractRuleBlock.pm?

[11:30] <pmurias> yes

[11:30] <pmurias> sorry

[11:30] <pugs_svnbot> r17599 | pmurias++ | [kp6] files i forgot to add

[11:30] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17599

[11:30] <lambdabot> Title: Changeset 17599 - Pugs - Trac

[11:31] <pmurias> it's svk add actualy

[11:31] <moritz_> ;)

[11:32] <pmurias> i found the bug which screws up self, will fix it after lunch&

[11:32] <moritz_> 01-sanity/07-try.t uses unless {..} else {..} ;)

[11:32] <pmurias> or somebody else can make sub receive sigs withought self (Grammar problem) ealier

[11:32] <pmurias> moritz_: fix it then :)

[11:33] <moritz_> I'm on it ;)

[11:33] <pmurias> *without

[11:34] <moritz_> revision 17600, YaY

[11:35] <moritz_> is it legal to use a reference to a sub before declaring it?

[11:35] <pugs_svnbot> r17600 | moritz++ | t/01-sanity/07-try.t: removed obsolete unless...else 

[11:35] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17600

[11:35] <lambdabot> Title: Changeset 17600 - Pugs - Trac

[11:35] <moritz_> that's used in t/blocks/goto.t

[11:41] <pugs_svnbot> r17601 | moritz++ | t/builtins/undef.t: removed obsolete unless...else

[11:41] <pugs_svnbot> r17602 | moritz++ | removed t/oo/from_moose/000_load.t (OO is bulitin ;)

[11:41] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17602

[11:41] <lambdabot> Title: Changeset 17602 - Pugs - Trac

[11:45] *** TimToady_ left
[11:47] <pugs_svnbot> r17603 | moritz++ | t/operators/flip-flop.t: removed obsolete unless..else

[11:47] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17603

[11:47] <lambdabot> Title: Changeset 17603 - Pugs - Trac

[11:48] <moritz_> in the test suite I get some errors like that:

[11:48] <moritz_> pugs: Internal error: Unknown pseudo-assignment form:Syn "=" [Var "$*_",Val (VInt 0)]

[11:48] <moritz_> is that new?

[11:48] <moritz_> for example in statements/given.t

[11:50] <pugs_svnbot> r17604 | moritz++ | t/unspecced/sort.t: removed obsolete unless...else

[11:50] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17604

[11:50] <lambdabot> Title: Changeset 17604 - Pugs - Trac

[11:52] *** b_jonas joined
[11:54] <rhr> gone for 2 weeks &

[11:54] <moritz_> rhr: have fun ;)

[12:12] *** araujo joined
[12:14] <pugs_svnbot> r17605 | moritz++ | SLAVES: added myself for exp_evalbot

[12:14] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17605

[12:14] <lambdabot> Title: Changeset 17605 - Pugs - Trac

[12:59] *** turrepurre left
[13:04] *** devogon left
[13:06] *** devogon joined
[13:06] <pugs_svnbot> r17606 | masak++ | [File::Spec::Win32]

[13:06] <pugs_svnbot> r17606 | masak++ | * worked around the strange array init bug

[13:06] <pugs_svnbot> r17606 | masak++ | * module tests now pass

[13:06] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17606

[13:06] <lambdabot> Title: Changeset 17606 - Pugs - Trac

[13:08] *** renormalist left
[13:16] *** Limbic_Region joined
[13:31] *** cognominal_ left
[13:34] *** jhorwitz joined
[13:38] *** daxim_ left
[13:43] *** cognominal_ joined
[13:43] *** nwc10 joined
[13:44] <nwc10> does Flavio Glock appear here?

[13:44] <masak> nwc10: yes

[13:44] *** daxim_ joined
[13:50] <avar> nwc10: as flgock

[13:50] <avar> *fglock

[13:52] *** |Jedai| joined
[13:52] <masak> #pugs use File::Util; my $f = File::Util.new; $f.existent('pugs')

[13:52] <exp_evalbot> OUTPUT[pugs: *** Unsafe function 'use' called under safe mode␤    at /tmp/9v7MZb8zeB line 1, column 1␤]

[13:52] <masak> ah, even use is unsafe?

[13:58] *** drupek12 left
[14:02] *** drupek12 joined
[14:09] *** jedai left
[14:09] <pmurias> use is very unsafe

[14:09] <masak> pmurias: in itself?

[14:10] *** nwc10 left
[14:12] <pmurias> i probably overestimated it's unsafnes ;)

[14:12] <masak> pmurias: maybe, maybe not. I just don't see it right now

[14:13] <pmurias> you can load code from the disk

[14:13] <pmurias> so it's sort of io

[14:13] <masak> yes...

[14:13] <masak> but io in itself is ok, right?

[14:14] <masak> I mean, there's a fixed number of modules on the server behind the eval bot

[14:14] <masak> it's the things that the loaded code might do that are potentially dangerous

[14:14] <pmurias> yes

[14:15] <pmurias> well you might want to keep some code private

[14:15] <masak> please elaborate

[14:15] <masak> still don't see how it merits banning use

[14:16] <pmurias> in the case of evalbot it dosn't make sense to ban it

[14:16] <masak> no, not as far as I can see right now

[14:17] <pmurias> but allowing banning anything else dosn't make sense as well as the evalbot is probably in a sandbox of some sort 

[14:18] <pmurias> maybe restricting the @INC to a predefined directory would be enough

[14:18] <pmurias> and no forgein modules

[14:18] <pmurias> like use DBI:from<perl5>

[14:20] <masak> yeah, good point

[14:31] <pmurias> it's no use to have partial unsafeness checking

[14:32] <masak> true -- and there is probably undecidability creeping in there somewhere, so better to prohibit defensively

[14:39] <pmurias> having the evalbot runing in unsafe mode in a good enough sandbox might be a better option

[14:40] <masak> hm, yes

[14:40] <masak> I'd still be a bit careful with arbritary system calls and the like

[14:42] <Tene> Perhaps running on a read-only fs with no network access and proper ulimits and such.

[14:42] *** mncharity joined
[14:42] <masak> yes

[14:44] <moritz_> I don't really care about anything but DOS attacks

[14:44] <moritz_> fork bombs and the like are the most dangerous thing for the evalbot

[14:44] <moritz_> or something that fills up the disc space

[14:45] <moritz_> otherwise evalbot runs with low permissions in a chroot that is used for nothing else

[14:45] <moritz_> still I'd like to see safe/unsafe flags per namespace/module/whatever

[14:45] <moritz_> for example I'd consider Date::Calc to be "safe" and POSIX to be "unsafe"

[14:46] <masak> moritz_: did you take a look at the array init bug in pugs? what do you think about it?

[14:46] <masak> moritz_: maybe that would be a good enough idea, whitelisting modules

[14:48] <moritz_> masak: re array bug: weird indeed

[14:49] <masak> moritz_: I wouldn't have excpected such a bug to still remain in pugs, shaky as it sometimes is

[14:49] <masak> unfortunately, I don't have the required Haskell-fu to fix it yet

[14:50] <masak> in pugs source, I repeatedly ran into something called pads, which seems a scary context somehow related to monads

[14:50] <pmurias> lexical pads?

[14:50] <masak> yes

[14:50] * moritz_ has heard that as well ;)

[14:50] <masak> they're called Pad in pugs source

[14:50] <masak> I know what they are

[14:50] <moritz_> explain! ;)

[14:50] <masak> ok :)

[14:51] <masak> they are environments tied to blocks of code containing variables bound to values

[14:51] <moritz_> re whitelisting... that's ugly, but workable ;)

[14:51] <masak> you need many pads because the same name might connote different values in different parts of a p6 file

[14:52] <masak> basically, ever subrouting has a pad

[14:52] <moritz_> and an assignment basically changes a pad entry?

[14:52] <masak> dunno

[14:52] <masak> conceivably

[14:52] <moritz_> and a declaration adds a slot, presumably

[14:52] <masak> anyway, this all makes sense re the current bug, since something apparently is carried over from one call to the next

[14:53] <masak> or rather (as I've seen by playing around with it) from the first call to all subsequent ones

[14:53] <masak> we're basically seeing some unintended pad contamination

[14:54] <masak> which only occurs in exported subs

[14:55] <masak> I'm stuck with solving it because I cannot find the place in Eval.hs where "my" declarations are evaluated

[14:55] <masak> if anyone from the future is reading this, please send a patch back to me somehow. kthxbai

[14:55] <pugs_svnbot> r17607 | pmurias++ | [kp6] sub {} no longer gets $self as the invocant

[14:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17607

[14:55] <lambdabot> Title: Changeset 17607 - Pugs - Trac

[14:58] <moritz_> masak: did you see src/Pugs/Eval/Var.hs? that contains a rather verbose explanation of findSub etc.

[15:00] <masak> moritz_: I found it and read it, yes

[15:01] <masak> didn't find anything about declarations, though

[15:03] *** riffraff joined
[15:15] *** packafk joined
[15:18] *** packafk left
[15:25] *** marmic left
[15:29] *** marmic joined
[15:33] *** thoughtpolice joined
[15:44] <pugs_svnbot> r17608 | pmurias++ | [kp6] code inside rules works at last

[15:44] <pugs_svnbot> r17608 | pmurias++ | fixed GLOBAL::print

[15:44] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17608

[15:44] <lambdabot> Title: Changeset 17608 - Pugs - Trac

[15:47] *** xinming_ joined
[15:50] <pmurias> that proved a difficult test to fix

[15:50] *** kanru joined
[15:51] *** Blwood left
[15:53] *** xinming__ joined
[15:54] <mncharity> pmurias++

[15:55] *** xinming__ is now known as xinming

[16:01] *** drrho joined
[16:06] *** xinming__ joined
[16:09] *** xinming_ left
[16:12] *** xinming_ joined
[16:15] *** cognominal__ joined
[16:19] *** xinming left
[16:21] *** cognominal_ left
[16:25] *** xinming__ left
[16:36] *** toshinori left
[16:36] *** toshinori joined
[16:42] *** toshinori_ joined
[16:44] *** amnesiac joined
[16:50] *** DarkWolf84 joined
[16:51] *** barney joined
[16:55] *** buetow left
[16:59] *** toshinori left
[17:22] *** jjore-w left
[17:30] *** buetow joined
[17:41] *** DarkWolf84 left
[17:49] *** DarkWolf84 joined
[17:57] *** Psyche^ joined
[18:00] *** Casan joined
[18:01] *** rhizo joined
[18:04] *** weinig joined
[18:05] *** weinig left
[18:06] *** weinig joined
[18:07] *** barney left
[18:13] *** Patterner left
[18:13] *** Psyche^ is now known as Patterner

[18:26] *** amnesiac left
[18:27] *** masak left
[18:29] *** drrho left
[18:40] <pmurias> kp6 compiles Grammar.pm

[18:40] <pmurias> :)

[18:40] <Tene> Next step: STD.pm? ;)

[18:41] <pmurias> :)

[18:41] <moritz_> wow, I'm impressed

[18:41] <pmurias> well the next step is to check if it does it correctly

[18:42] <pmurias> shower&

[18:43] <b_jonas> lol

[18:43] <DarkWolf84> great

[18:43] <DarkWolf84> :)

[18:56] <pmurias> b

[19:10] <moritz_> when I try to run the test suite with Grammar.pm compiled by kp6 I get a message 'Can't locate object method "comp_unit" via package "KindaPerl6::Grammar" at kp6-perl5.pl line 99'

[19:12] <moritz_> all the Grammar/*.pm compile at least

[19:14] *** jisom joined
[19:15] <pmurias> moritz_: code compiled by kp6 and mp6 isn't compatible

[19:17] <moritz_> seems like, yes

[19:17] <pmurias> you would need the whole compiler compiled by kp6, and a new kp6-perl5.pl

[19:18] <pmurias> what i think is needed right now is a make target which compiles lib with kp6 to a diffrent dir

[19:22] <moritz_> I'm trying to recompile all of kp6 now to tmp/

[19:22] *** devogon left
[19:23] *** devogon joined
[19:24] <moritz_> no syntax errors so far

[19:26] *** riffraff left
[19:29] <pmurias> what i'm worried about is that grammars compiled with kp6 will be too slow

[19:29] <moritz_> Grammar.__rule_block1 seems to get defined/emitted twice

[19:30] <moritz_> perhaps a problem with MOP.pm

[19:30] <pmurias> nay

[19:30] <pmurias> i know what causes that

[19:31] <pmurias> did all files compile?

[19:31] <moritz_> yes

[19:31] <pmurias> could you check them in?

[19:32] <moritz_> 'course

[19:33] <pugs_svnbot> r17609 | moritz++ | [kp6] added bootstrap/ which contains a kp6 image compiled with kp6

[19:33] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17609

[19:33] <lambdabot> Title: Changeset 17609 - Pugs - Trac

[19:34] <moritz_> I can write a little bootstrap.pl script as well

[19:35] <avar> moritz_: does bootstrap/ work without mp6 on your system?

[19:35] <moritz_> avar: it doesn't work at all ;)

[19:35] <pmurias> moritz_: a make target would be better than a script

[19:37] <moritz_> pmurias: I'm not that confident with Makefiles...

[19:38] <moritz_> pmurias: and usually if you change kp6 you want to recompile all of, don't you?

[19:39] <pmurias> not always

[19:40] <pmurias> you might want to use a stable version of kp6 and recompile only the changed part

[19:40] <DarkWolf84> cool kp6 is now bootstraped

[19:40] <DarkWolf84> :)

[19:40] *** weinig left
[19:40] <moritz_> DarkWolf84: now, not quite

[19:40] <DarkWolf84> why?

[19:41] <moritz_> DarkWolf84: it doesn't throw any syntax errors on itself, but it doesn't run yet

[19:41] <DarkWolf84> I had a problem making 'make clean && make'

[19:42] <DarkWolf84> that for kp6

[19:45] <pmurias> make clean screws up kp6

[19:45] <moritz_> make forcerecompile; make is the way to go

[19:47] <pmurias> make forcerecompile is redundant

[19:47] <pmurias> just use make -B

[19:50] <b_jonas> or make clean compile

[19:52] <pmurias> NO! do not use make clean

[19:52] <DarkWolf84> I know that allready

[19:52] <DarkWolf84> :)

[19:54] <pugs_svnbot> r17610 | pmurias++ | [kp6] Makefile complains if not used properly

[19:54] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17610

[19:54] <lambdabot> Title: Changeset 17610 - Pugs - Trac

[19:55] <avar> moritz_++ # working on bootstrap

[19:57] <pugs_svnbot> r17611 | pmurias++ | [kp6] fixed typo

[19:57] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17611

[19:57] <lambdabot> Title: Changeset 17611 - Pugs - Trac

[20:00] <pugs_svnbot> r17612 | pmurias++ | [kp6] failing test for 'for'

[20:00] <pugs_svnbot> r17612 | pmurias++ | s/prim/prime/

[20:00] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17612

[20:00] <lambdabot> Title: Changeset 17612 - Pugs - Trac

[20:01] *** Limbic_Region left
[20:02] *** vel joined
[20:04] <moritz_> more bootstrapping tomorrow, bed &

[20:06] <pmurias> sleep&

[20:07] *** weinig joined
[20:07] <pmurias> and a bit of Compiling with Continuations, Continued

[20:07] *** pmurias left
[20:23] *** riffraff joined
[20:42] *** Blwood joined
[20:46] *** vel left
[20:52] *** TimToady_ joined
[20:54] *** timbunce joined
[20:57] *** notThat joined
[20:57] *** timbunce left
[20:57] *** Blwood left
[21:01] *** jhorwitz left
[21:10] *** TimToady left
[21:15] *** Aankhen`` left
[21:17] *** riffraff left
[21:20] *** TimToady_ left
[21:24] *** TimToady joined
[21:25] *** b_jonas left
[21:43] *** TimToady_ joined
[21:44] *** buetow left
[21:45] *** Limbic_Region joined
[21:46] *** iblechbot left
[21:49] *** elmex left
[22:00] *** TimToady left
[22:08] *** TimToady joined
[22:11] *** Blwood joined
[22:14] *** notThat left
[22:22] *** buetow joined
[22:27] *** TimToady_ left
[22:37] *** justatheory joined
[22:42] *** buetow left
[22:44] *** ruoso joined
[22:48] *** justatheory left
[22:48] *** Casan left
[22:48] *** devogon left
[22:52] *** jisom left
[22:55] *** devogon joined
[22:55] *** TimToady_ joined
[22:59] *** buetow joined
[23:00] *** lesterc joined
[23:00] *** ruoso left
[23:05] *** Blwood left
[23:07] *** |Jedai| left
[23:14] *** TimToady1 joined
[23:14] *** TimToady left
[23:17] <meppl> good night

[23:22] <DarkWolf84> night

[23:23] *** polettix left
[23:26] *** rutlov joined
[23:27] *** rutlov left
[23:31] *** bsb joined
[23:33] *** TimToady_ left
[23:56] *** polettix joined
