[00:00] <TimToady> and your : after 'Bool::' is doing nothing

[00:00] <dduncan> and a token bool would be a 'Bool:' <enum_bool>

[00:00] <TimToady> that looks good

[00:01] <TimToady> can there be space after Bool: ?

[00:01] <TimToady> if so, that might be a rule

[00:01] <dduncan> generally, there are no spaces between parts of simple tokens

[00:01] *** pugs_svnbot joined
[00:01] <dduncan> the only spaces are between collection items ...

[00:02] <TimToady> can you say "Bool: true"

[00:02] <avar> TimToady: Isn't it preventing backtracking?

[00:02] <TimToady> there's nothing quantified before it to backtrack

[00:02] <TimToady> it only controls one atom

[00:02] <dduncan> no, just "Bool:true"

[00:02] <TimToady> in that case token is fine

[00:02] <dduncan> only collection types like tuple and relation would have whitespace

[00:03] <dduncan> eg, "Relation:{ Bool:true, Int:9:42 }"

[00:03] <TimToady> the basic rule of thumb is to consider whether the beginning and end want whitespace.  tokens sometimes want whitespace in the middle but generally because they call into a subrule that would already handle whitespace

[00:03] <dduncan> er, sort of like that

[00:03] <dduncan> in that case, some whitespace is mandatory, but it can be any amount greater than none

[00:04] <dduncan> in my case, the only whitespace is BETWEEN things

[00:04] <TimToady> so '(' <EXPR> ')' is a token, despite EXPR being a rule

[00:04] <TimToady> (in p6)

[00:04] <dduncan> not before/after

[00:04] <dduncan> eg, whitespace only appears after a {, before a }, and between list items

[00:04] <TimToady> well, you can specify everything as tokens then; nothin's sez you have to use rules

[00:04] <dduncan> okay

[00:05] <TimToady> as avar++ points out, it's all just sugar

[00:05] <dduncan> but where whitespace is used, its a variable amount, akin to \s+ of Perl 5 ... is that still a token?

[00:06] * diakopter tastes only the aspartame

[00:06] <TimToady> token is whatever you want it to be

[00:06] <dduncan> okay

[00:07] <dduncan> right then, my grammar is very KISS

[00:07] <TimToady> we're not dealing with an arbitrary distinction between a lexer and a grammar here

[00:07] <avar> TimToady++ # including token {} which makes grammars a lot easier to optimize

[00:07] <dduncan> yes ... actually, what I'm calling a grammer here is more just a tokenizer

[00:07] <TimToady> no, not if you are parsing things like relations

[00:08] <dduncan> er yes, the result is a tree

[00:08] <TimToady> you are writing a grammar, and the lexer is just appearing magically out of it without you really having to spec it

[00:08] <TimToady> that what all the longest-token mumbo jumbo is about

[00:08] <dduncan> thank you for your help

[00:09] <TimToady> np

[00:10] <dduncan> now, about Blob literals in Perl 6 ... I recommend something in between number literals and character string literals ...

[00:11] <TimToady> maybe b is for blob in 0b011010001100010101101010100

[00:11] <dduncan> isn't that spelling already used for base-2 numbers?

[00:11] <dduncan> but I was thinking something similar

[00:12] <TimToady> a sequence of bits is how we defined blob

[00:12] <dduncan> yes,

[00:12] <TimToady> how is that different from a binary number?  :)

[00:12] <dduncan> but if someone wrote what you said, would it turn into a Blob or an Int?

[00:12] <diakopter> TimToady: token integer contains the patterns of octint, decint, etc.  Does it not include them by reference for optimization?

[00:13] <TimToady> haven't really thought about optimization much with STD

[00:13] <TimToady> in particular a non-dfa approach is pretty much guaranteed to run really slow right now.

[00:14] <TimToady> anyway, if something is inlined, it's merely because it hasn't been abstracted out for some reason

[00:15] <dduncan> ?eval 0b011010001100010101101010100.WHAT

[00:15] <pugsbot_r17185> ::Int

[00:15] <dduncan> which is also what synopsis 2 says

[00:15] <dduncan> so the Blob literal can't be exactly that

[00:16] <TimToady> well, the only difference is that a blob knows exactly how many bits it has

[00:16] <dduncan> I see a logical difference since an Int can be represented using a variety of bit patterns behind the scenes, while a bit string is exactly what it is

[00:16] <TimToady> whereas an Int has an infinite number of bits, most of which are 0

[00:17] <dduncan> I consider an Int itself to be radix agnostic

[00:17] <dduncan> as a concept

[00:17] <dduncan> and afaik Int in Perl 6 is also radix agnostic

[00:17] <dduncan> the 0x or whatever is just a map between particular char strings and ints

[00:17] <TimToady> so is blob, really

[00:18] <dduncan> but part of my point is that the types Blob and Int don't have conceptual 1:1 mappings

[00:19] <dduncan> just as Int and Str that look like Int don't

[00:19] <dduncan> but the point here ...

[00:19] <dduncan> is how to spell a Blob literal in Perl 6 so that .WHAT would say 'Blob'

[00:20] <dduncan> I'm hoping the synopsis would specify that soon

[00:20] <TimToady> well, maybe it's just an overloaded literal, like most numbers

[00:21] <TimToady> gotta run to the store &

[00:22] <dduncan> mind you, I do recognize that Perl 6 already treats some other types like abstractions over Blobs, or at least some operators do ... eg I think ?&, +&, ~&

[00:22] <dduncan> though I myself consider eg Bool|Int|Blob|Str values to be all disjoint

[00:22] <dduncan> and the above ops are just mappings

[00:22] <dduncan> er, just do mappings

[00:23] <diakopter> but a literal is a an immutable, and immutables are independent of representation, and so they always lose their origin representation, right?

[00:24] <dduncan> all values are immutable, and a literal typically is a representation of a value of some arbitrary type as a character string

[00:24] <dduncan> a literal is also a value

[00:25] <dduncan> containers are mutable

[00:25] <dduncan> and hold appearances of values

[00:25] <dduncan> a value could be called a literal in some situations, or perhaps all?

[00:26] <diakopter> dduncan: I guess what you're looking for is a container for literals?

[00:26] <dduncan> values are independent of representation

[00:26] *** meiss|na joined
[00:26] <dduncan> a representation is essentially a mapping of one value to another value

[00:26] <dduncan> eg, an Int represented as a Str

[00:27] <dduncan> with some specified base

[00:27] <dduncan> a Perl 6 grammar basically takes a Str value and maps it to a tree composed of values of various types

[00:28] <dduncan> anyway, back to grammar-writing ...

[00:30] <dduncan> or rather, a Perl 6 grammar defines a mapping between Str values that are Perl 6 code and tree values composed of values of various types

[00:31] <dduncan> I mean, the Perl 6 grammar for Perl 6 was ... Perl 6 grammars in general aren't for Perl 6 code

[00:31] <dduncan> no matter

[00:42] *** Eidolos_ joined
[00:44] *** meissner left
[00:52] *** Eidolos left
[00:53] *** Limbic_Region joined
[00:57] *** Eidolos_ is now known as Eidolos

[00:59] *** hkb_aw is now known as hakobe

[01:07] *** flokuehn_ joined
[01:11] *** devogon left
[01:19] *** flokuehn left
[01:20] *** jisom_ joined
[01:38] *** jisom left
[01:44] *** pro21ms4 joined
[01:59] *** flokuehn joined
[02:14] *** flokuehn_ left
[02:22] *** Limbic_Region left
[02:40] *** bonesss left
[03:28] *** araujo joined
[03:51] *** pro21ms4 left
[03:59] *** demerphq joined
[04:17] *** demq left
[04:39] *** flokuehn left
[04:43] *** iblechbot joined
[06:01] *** Aankhen`` joined
[06:09] <Aankhen``> Suggestion for S06: "not because we're mean" would read better as "not *only* because we're mean". :-D

[06:22] <dduncan> further suggestion for S06: "because we're mean" would read better as "because we're having fun"

[06:22] <dduncan> for bonus points, you could further append ", and you're not"

[06:27] * Aankhen`` snickers.

[06:34] *** meiss|na left
[06:36] *** devogon joined
[06:40] *** zard1989 joined
[06:47] *** elmex joined
[06:48] *** iblechbot left
[06:48] *** pmurias joined
[06:59] <pmurias> good morning

[07:13] *** wilx left
[07:17] *** weinig left
[07:19] *** hakobe is now known as hkb_aw

[07:21] *** wilx joined
[07:24] *** zard1989 left
[07:34] *** weinig joined
[07:35] *** Aankhen`` left
[07:37] *** dduncan left
[07:41] *** Aankhen`` joined
[07:45] *** xinming joined
[07:46] *** franck___ joined
[08:00] *** melissa left
[08:03] <agentzh> morning :)

[08:10] *** agentzh left
[08:10] *** Aankhen`` left
[08:12] *** agentzh joined
[08:14] *** Aankhen`` joined
[08:16] *** Aankhen`` left
[08:17] <moritz_> avar: I guess it's not morning for you...? *g*

[08:17] *** Aankhen`` joined
[08:17] <moritz_> s/avar/agentzh/ # sorry

[08:18] *** rindolf left
[08:22] *** Aankh|Clone joined
[08:32] *** BinGOs joined
[08:32] <bloonix> good morning

[08:32] <lambdabot> bloonix: You have 2 new messages. '/msg lambdabot @messages' to read them.

[08:33] <agentzh> moritz_: it's 16:33 here :)

[08:34] <agentzh> moritz_: i'm sitting in my $office :) $job will start tomorrow :)

[08:35] *** daxim_ joined
[08:38] <moritz_> agentzh: what kind of $job?

[08:39] * moritz_ managed to convince his $boss that some perl coding is absolutely necessary (I'm converting weird file formats ;)

[08:40] <agentzh> moritz_: a $job in yahoo china.

[08:40] <agentzh> moritz_: a lot of my team members are perl guys :)

[08:41] <moritz_> agentzh: cool ;)

[08:41] <agentzh> moritz_: i've convinced my $manager to contribute to pugs and perl 6 ;)

[08:42] <agentzh> moritz_: he is now reading the synopses :)

[08:42] <moritz_> agentzh: that's very cool ;)

[08:42] <agentzh> yes, it is!

[08:42] *** Aankh|Clone left
[08:43] <agentzh> we'll try to use more p5/p6 in our products.

[08:45] *** Aankhen`` left
[08:45] <moritz_> agentzh: on a side note I just discovered that the charset in the irclog mysql table is "latin1" :(

[08:46] <moritz_> agentzh: I changed it in the dump manually to utf8 and imported it locally, and it still works

[08:46] *** Aankh|Clone joined
[08:46] <moritz_> agentzh: if I can modify it on the server without breaking it, maybe your fancy detection works as well...

[08:47] *** weinig left
[08:48] <agentzh> moritz_: nice

[08:48] <pmurias> latin1--

[08:49] <agentzh> moritz_: heh, how about do the decoding *before* importing logs to the db?

[08:49] <agentzh> *doing

[08:49] *** daxim left
[08:50] <agentzh> not sure if your db can save raw bytes.

[08:57] <bloonix> its 10:58 here and Im sitting on my balcony, drinking coffee and enjoin the sun :)

[08:58] <moritz_> agentzh: I don't want to do coding magic before importing the data because it could mean data loss

[08:59] <moritz_> agentzh: and mysql's handling of blobs... I don't know... ;)

[09:00] <agentzh> moritz_: *nod*

[09:00] <agentzh> bloonix: wow

[09:00] * agentzh goes to reach his cup.

[09:02] <agentzh> moritz_: still can't search utf-8 in irclogs...it seems :)

[09:02] <agentzh> moritz_: i wonder it'll be a bit difficult to implement that if db saves raw data ;)

[09:03] <agentzh> s/implement/implement fully/

[09:03] <moritz_> agentzh: actually I just don't know :(

[09:03] <agentzh> it'll require some kind of reverse-magic-encoding-detection algorithm...wow

[09:05] <agentzh> using utf8 in db means potential data loss but it makes our lives easier ;)

[09:06] <agentzh> how about two versions of db? (it'll require more room, of course)

[09:07] <agentzh> or just save the raw data as local files...

[09:07] <agentzh> like colabti.de...

[09:09] <agentzh> moritz_: usually we don't want to search the raw bytes anyway...

[09:13] * demerphq is confused

[09:14] <demerphq> if you store your data encoded then you can search for encoded strings.

[09:14] *** demerphq is now known as dmq

[09:22] *** Aankhen`` joined
[09:24] *** feb joined
[09:34] *** dmq left
[09:34] <Juerd> agentzh: Data loss?

[09:34] <Juerd> I thought unicode was a superset of everything else?

[09:35] <moritz_> Juerd: but if your decoding can't handle the data it was given, it is likely to produce garbage

[09:35] *** Aankh|Clone left
[09:36] <Juerd> That's not data loss, it's data-uselessness ;)

[09:36] <moritz_> no, if it can handle the charset, it really can lose data

[09:36] <moritz_> s/can/can't/

[09:38] *** dmq joined
[09:40] <agentzh> dmq, Juerd: i'm trying to persuade moritz_++ to use UTF-8 for the logs stored in the db ;)

[09:41] <agentzh> moritz_: i think you can save the raw bytes some where outside the db (to serve as a backup copy)

[09:42] <moritz_> agentzh: I think mysql has problems with indexing chinese and japanese characters anyway :(

[09:42] <agentzh> moritz_: index the nick names is sufficient, no?

[09:42] <agentzh> *indexing

[09:43] <dmq> mysql has problems.

[09:43] <dmq> its like a teenager.

[09:43] <moritz_> agentzh: no, not for the fulltext search

[09:43] <moritz_> agentzh: a fulltext search in ~1G lines without index kills my server

[09:44] <moritz_> http://dev.mysql.com/doc/refman/5.0/en/fulltext-restrictions.html

[09:44] <lambdabot> Title: MySQL AB :: MySQL 5.0 Reference Manual :: 11.8.4 Full-Text Restrictions

[09:44] <Juerd> moritz_: One single encoding that may contain miscodings is better than mixed encodings, because then practically *everything* is miscoded.

[09:44] <moritz_> 5D#

[09:44] <moritz_> 5DIdeographic languages such as Chinese and Japanese do not have word delimiters. Therefore, the FULLTEXT parser cannot determine where words begin and end in these and other such languages. The implications of this and some workarounds for the problem are described in Section 11.8, “Full-Text Search Functions”.

[09:44] <moritz_> #

[09:45] *** crashmatrix left
[09:45] <moritz_> Juerd: yes, maybe. though in practice most text is just ASCII `subset of` Unicode(as utf-8)

[09:45] <Juerd> IRC programs must either be completely ignorant about charsets, or assume things. The former is worse, so assuming things is okay.

[09:45] <dmq> encodings that are in a healthy relationship live longer.

[09:45] <Juerd> Assuming that sequences aren't UTF-8 are iso-88591-1 is a sane choice

[09:46] <dmq> single encodings tend to encounter health problems later in life.

[09:46] *** crashmatrix joined
[09:46] <Juerd> If most of the line is high bit, you can look for alternatives, but here that's not used much

[09:46] *** Aankh|Clone joined
[09:47] <moritz_> I'll see if I can get a script running that does in place conversion of the database

[09:47] * dmq apologises for being in a silly mood today

[09:47] <moritz_> and then I'll make ilbot charset aware

[09:48] <Juerd> dmq: The silly mood apologises for being around you ;)

[09:48] <dmq> ssh, dont antagonize it, you never know what might happen

[09:49] <dmq> an angry silly mood is a firghtening thing

[09:53] *** Aankh|Clone left
[10:03] *** drupek12 left
[10:04] *** Aankhen`` left
[10:04] *** jisom_ left
[10:13] *** drupek12 joined
[10:18] <feb> somebody wanted to do searches in irc logs with utf-8 encoding ?

[10:18] <moritz_> yes

[10:18] <moritz_> agentzh wants that, and I provide and maintain the logs

[10:18] *** irclog_utf8 joined
[10:18] *** irclog_utf8 left
[10:18] <feb> http://colabti.de/irclogger//irclogger_log_search/perl6?search=%E9B%84%E6%9C%9B%E7%A7%8B&action=search&timespan=&text=checked

[10:19] <lambdabot> http://colabti.de/irclogger//irclogger_log_search/perl6?search=%E9B%84%E6%9C%9B%E7%A7%8B&action=search&timespan=&text=checked

[10:19] <moritz_> maybe an example with matches would be more impressive ;)

[10:19] <moritz_> feb: and I'm talking about http://irc.pugscode.org/

[10:19] <feb> the url didnt paste well :(

[10:20] <lambdabot> Title: IRC log for #perl6, 2007-08-05

[10:20] <moritz_> feb: which means there are non-printable chars in the URL - not good :(

[10:21] <feb> http://tinyurl.com/3bw2xm

[10:21] <lambdabot> Title: #perl6 irc log search

[10:22] <feb> the copy paste is the culprit, not the url

[10:22] <moritz_> I always thought colabti did just latin1 logs (at least audreyt told me so once)

[10:22] <feb> try the tinyurl

[10:22] <feb> it did :)

[10:22] <moritz_> feb: I did, impressing ;)

[10:23] *** irclog_utf8 joined
[10:23] *** irclog_utf8 left
[10:23] <feb> actually, i'm the operator of colabti

[10:23] <feb> just changed it to utf-8, but it's hard-handed as you never know which encoding was used over irc

[10:23] <pugs_svnbot> r17213 | Aankhen++ | * [irclog] couple more abbrs.

[10:23] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17213

[10:23] <lambdabot> Title: Changeset 17213 - Pugs - Trac

[10:24] *** irclog_utf8 joined
[10:24] *** irclog_utf8 left
[10:24] <feb> btw., your logger has a nice display

[10:24] *** irclog_utf8 joined
[10:24] <moritz_> feb: I know, that's what I'm struggling with (unknown encoding)

[10:25] <moritz_> feb: it's very much customized for #perl6, and has seen much tweeking by Aankhen``++ ;)

[10:25] <moritz_> # irc log test: 黄望秋

[10:26] <feb> yes, i saw you hardcoded the nick colors

[10:26] <moritz_> feb: only the ones of the most active nicks

[10:26] <moritz_> feb: there are still heuristics for a few more colors

[10:26] *** irclog_utf8 left
[10:26] <feb> didt read that far

[10:27] <moritz_> wait...

[10:27] <moritz_> the colors are hardcoded in the csss

[10:27] <moritz_> s/sss/ss/

[10:27] <moritz_> just the mapping nick -> css class is not fully hardcoded

[10:28] *** irclog_utf8 joined
[10:28] <moritz_> # another irc log test:  黄望秋

[10:29] <moritz_> feb: btw do you delete spam from old logs?

[10:29] <feb> no, but i didnt see much spam too

[10:30] <feb> and bots like google are not allowed to crawl the logs

[10:30] <moritz_> we had a bit of a hard time with spammers about two months ago

[10:30] * feb looks in the logs

[10:31] <feb> anculz ?

[10:32] <moritz_> url?

[10:33] <moritz_> feb: never mind... I just wanted to point out that _if_ you delete spam, the line anchors will change

[10:33] <feb> was searching for the spam.

[10:34] <moritz_> feb: that's why I changed to database ID based line anchors

[10:34] <feb> I once planned to add a way to hide/censor/delete unwanted lines

[10:35] <feb> didnt think about the line anchors change before you discover it

[10:35] <moritz_> my logs currently have both the line numbers and db ids as anchors, and new links are always to the ids

[10:36] *** irclog_utf8 left
[10:36] *** irclog_utf8 joined
[10:36] *** iblechbot joined
[10:37] <feb> i hoped to allow changing the timezone, but it's annoying with urls based on dates

[10:37] <moritz_> feb: funny how we encounter the same problems ;)

[10:37] <feb> it would break line numbers and the date

[10:37] <agentzh> fyi, 黄望秋 is a muderer in China ;)

[10:37] <feb> lol

[10:37] <moritz_> agentzh: thanks ;)

[10:38] <agentzh> you may want to use my Chinese name for testing: 章亦春

[10:38] <agentzh> ;)

[10:38] <moritz_> feb: you could change the URLs to date=2007-08-04;tz=+1 # for MEZ

[10:39] <moritz_> and tz defaults to 0 making them GMT times

[10:40] <feb> agentzh: are you a murderer too ?

[10:40] *** irclog_utf8 left
[10:40] *** irclog_utf8 joined
[10:41] <moritz_> ?eval '章亦春' eq '黄望秋'

[10:41] <feb> moritz_: but it forces a timezone for the person who receives the url

[10:41] <pugsbot_r17185> Bool::False

[10:41] <feb> or you would have to redirect according to some preferences

[10:41] <moritz_> feb: of course. Otherwise URLs point to different things to differnt persons, which would be very bad

[10:42] <moritz_> the problem is that redirects can't contain anchors, because they are not part of HTTP

[10:43] <feb> true

[10:43] <moritz_> otherwise I'd make the line anchor links point to id=$number, and redirect to the day which, according to the tz cookie, contains that id

[10:44] <moritz_> there are workarounds, of course (like inserting a link, and perhaps some javascript magic) but that's all evil hacks

[10:45] <feb> yes

[10:46] <feb> don't you have trouble with bots harvesting all links in the logs

[10:46] <feb> when you have a link for each line

[10:46] <moritz_> personally I don't mind, because my timezone is just GMT+1/+2 (depending on daylight saving time)

[10:46] <moritz_> good point

[10:47] <moritz_> they could be made nofollow or something

[10:47] <feb> it's one of the reasons, why i disallowed them

[10:47] <feb> as they downloaded hundreds of times the same page

[10:47] <moritz_> currently the line links are just #id-Links, I haven't seen any problems with that

[10:47] <feb> got gigabytes of traffic because of them

[10:48] <feb> pure #id-links should work

[10:49] <moritz_> I monitor my logs closely, and if they start exploding I'll edit robots.txt

[10:50] <feb> i did when i saw the surge in traffic :)

[10:50] <moritz_> which bots?

[10:51] <feb> many different crawlers, like googlebot and others from msn, aol 

[10:52] <feb> and many more i didnt know

[10:52] <moritz_> I'll see how it works out

[10:58] *** irclog_utf8 left
[11:11] *** mj41 left
[11:27] *** wilx left
[11:27] *** buetow joined
[11:36] *** JarJarBi1ks joined
[11:46] *** pro21ms4 joined
[11:50] <pasteling> "bloonix" at 87.78.217.174 pasted "system("cat /proc/sys/fs/file-" (12 lines, 184B) at http://sial.org/pbot/26670

[11:50] <bloonix> I am totaly confused :)

[11:51] <bloonix> my example runs on /proc/uptime and other virtual files

[11:53] *** chris2 joined
[11:57] *** pro21ms4 left
[12:06] <pugs_svnbot> r17214 | moritz++ | [irclog] ilbot.pl now logs UTF-8 in order to allow utf8 fulltext search

[12:06] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17214

[12:06] <lambdabot> Title: Changeset 17214 - Pugs - Trac

[12:06] *** irclogbot joined
[12:07] <moritz_> the database is now recoded in place

[12:10] <bloonix> my $all = =$fh; the same thing

[12:10] <bloonix> just the first number

[12:12] *** rintaro joined
[12:16] *** zsh joined
[12:24] <pugs_svnbot> r17215 | moritz++ | [irclog] search no doesn't include '#' in the channel name 

[12:24] <pugs_svnbot> r17215 | moritz++ | (more robust this way)

[12:24] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17215

[12:24] <lambdabot> Title: Changeset 17215 - Pugs - Trac

[12:25] * moritz_ wonders why the fulltext search works locally with chinese characters, but not on the server

[12:34] *** zsh left
[12:43] *** cognominal__ left
[12:50] *** cognominal_ joined
[12:52] *** turrepurre left
[13:01] <moritz_> # another irclog test: 章亦春

[13:03] *** irclog_utf8 joined
[13:04] <moritz_> charsets are weird beasts, and mysql multiplies my confusion

[13:05] <moritz_> # another irclog test: 章亦春 (No 2)

[13:05] *** irclog_utf8 left
[13:06] *** irclog_utf8 joined
[13:06] *** irclog_utf8 left
[13:14] <bloonix> ?eval 'foo' ~~ /(foo)/; my %h; %h{foo} = $0; say %h{foo};

[13:14] <pugsbot_r17185> Error: No such subroutine: "&foo"

[13:14] <bloonix> ?eval 'foo' ~~ /(foo)/; my %h; %h{foo} = $0; say %h<foo>;

[13:14] <pugsbot_r17185> Error: No such subroutine: "&foo"

[13:14] <bloonix> ?eval 'foo' ~~ /(foo)/; my %h; %h<foo> = $0; say %h<foo>;

[13:14] <pugsbot_r17185> OUTPUT[foo␤] Bool::True

[13:28] *** hkb_aw is now known as hakobe

[13:34] *** chris2 left
[13:40] <Blwood> does the <    > operator work ? (the qw// like)

[13:43] <moritz_> Blwood: yes

[13:43] <lumi> ?eval <foo bar baz>.perl

[13:43] <pugsbot_r17185> "(\"foo\", \"bar\", \"baz\")"

[13:43] <moritz_> ?eval <a bc>

[13:43] <pugsbot_r17185> ("a", "bc")

[13:43] <lumi> Blwood: Works as advertised

[13:45] <moritz_> at least in pugs ;)

[13:50] *** Aankhen`` joined
[13:57] <Blwood> okay thank you :)

[14:00] <Blwood> ?eval <a b c>.end

[14:01] <pugsbot_r17185> 2

[14:02] <Blwood> oh right so .end gives the last index ? I tought it gave the last element

[14:03] *** wilx joined
[14:03] <moritz_> ?eval <a b c>.last

[14:03] <pugsbot_r17185> Error: Cannot use this control structure outside a 'loop' structure

[14:03] <moritz_> ?eval <a b c>[-1]

[14:03] <pugsbot_r17185> \"c"

[14:04] <moritz_> I think in the new syntax that's [*-1], but I'm not quite sure about that

[14:04] <Blwood> I read on the dev doc "$#foo is gone. If you want the final subscript of an array, and [-1] isn't good enough, use @foo.end instead."

[14:05] <Blwood> Oh I understand now :)

[14:05] <Blwood> the best doc for perl6 is http://dev.perl.org/perl6/doc/apocalypse.html ?

[14:05] <lambdabot> Title: Perl6 Apocalypses - perl6

[14:06] <moritz_> no, you should read the synopsis

[14:06] <moritz_> http://perlcabal.org/syn/

[14:06] <lambdabot> Title: Official Perl 6 Documentation

[14:06] <Blwood> woaw :) thank you very much

[14:07] <moritz_> you're welcome

[14:11] *** cognominal_ left
[14:17] <feb> moritz_: you dont log nick changes ?

[14:18] *** jettero left
[14:18] <feb> oh, you do

[14:18] *** jettero joined
[14:21] *** jettero left
[14:22] *** kane__ joined
[14:25] *** jettero joined
[14:30] *** cognominal_ joined
[14:33] *** cognominal__ joined
[14:34] *** cognominal_ left
[14:38] <feb> moritz_: is it ok if I borrow some parts of your CSS ?

[14:39] *** DarkWolf84 joined
[14:39] *** jiing joined
[14:46] *** buetow left
[14:46] *** buetow joined
[15:02] *** jettero left
[15:02] *** jettero joined
[15:03] *** stevan_ joined
[15:05] *** cognominal_ joined
[15:06] <moritz_> feb: I do, normally (looking...)

[15:06] <moritz_> feb: of course, it's (per default) under the artistic license 2 or something

[15:06] <feb> something :)

[15:06] *** cognominal__ left
[15:06] <Blwood> can we use Socket module in perl6 ?

[15:07] *** flokuehn joined
[15:07] <moritz_> Blwood: you can try to use perl5:Socket;

[15:08] <Blwood> I see on : http://perlcabal.org/syn/S16.html that we can use some functions available on Socket; like connect ...

[15:08] <moritz_> http://moritz.faui2k3.org/irclog/out.pl?channel=perl6;date=2007-08-05#i_75012 <-- nick change

[15:08] <lambdabot> Title: S16

[15:08] <lambdabot> Title: IRC log for #perl6, 2007-08-05, http://tinyurl.com/28xea4

[15:09] <Blwood> but Socket for perl6 is not adapted yet ?

[15:09] <moritz_> Blwood: then you can in principle. I just don't know if it's implemented yet...

[15:09] <moritz_> Blwood: but you could look into the pugs repository in ext/, there are networking examples

[15:09] <Blwood> okay I'll have a look, thank you :)

[15:09] <moritz_> like Net::IRC

[15:09] <feb> moritz_: yes, you use another working in the logs for nick change

[15:09] <pmurias> use Socket:from<perl5> is the kp6 way

[15:10] <moritz_> and there's a HTTP-Server-Simple as well

[15:10] <moritz_> feb: it was the first "quick and dirty" hack I could think of ;)

[15:11] <feb> s/working/wording

[15:15] *** flokuehn left
[15:18] *** [particle1 is now known as [particle]

[15:21] *** Blwood left
[15:30] *** Blwood joined
[15:35] *** elmex left
[15:40] *** kanru joined
[15:40] *** jettero left
[15:40] *** jettero joined
[15:43] *** jettero left
[15:47] *** jettero joined
[15:47] *** jettero left
[15:54] *** penk joined
[16:15] *** cognominal_ left
[16:16] *** cognominal_ joined
[16:17] *** jettero joined
[16:22] *** kanru left
[16:33] *** jettero left
[16:33] *** jettero joined
[16:42] *** penk left
[16:49] *** Azure-BOT joined
[16:50] *** Khisanth joined
[16:50] *** jisom joined
[17:00] *** iblechbot left
[17:21] *** chris2 joined
[17:29] *** Aankh|Clone joined
[17:35] *** buetow left
[17:36] *** toly joined
[17:38] *** toly left
[17:41] *** stevan_ left
[17:42] *** marmic left
[17:42] *** fglock joined
[17:43] *** Psyche^ joined
[17:44] *** marmic joined
[17:45] *** Aankhen`` left
[17:47] *** toly joined
[17:55] *** cognominal__ joined
[18:01] *** Patterner left
[18:01] *** Psyche^ is now known as Patterner

[18:01] <moritz_> is it right that '&' is the sigil for code blocksß

[18:01] <moritz_> s/ß/?/

[18:05] *** cognominal_ left
[18:09] *** rintaro_ joined
[18:24] <Juerd> moritz_: The & is the sigil for closures, iirc

[18:25] <spinclad> S02:1110:     &   code/rule/token/regex

[18:25] <spinclad> so yes

[18:25] *** rintaro left
[18:29] <spinclad> see also S02:1158

[18:38] *** nperez joined
[18:42] *** cognominal__ left
[18:44] *** Mmmbop joined
[18:46] <moritz_> thanks Juerd, spinclad ;)

[18:48] *** Mmmbop left
[18:50] *** weinig joined
[18:50] *** Aankh|Clone left
[18:52] *** Mmmbop joined
[18:53] *** jettero left
[18:54] *** jettero joined
[18:58] *** cognominal_ joined
[19:12] *** Mmmbop left
[19:17] *** franck___ left
[19:35] <pmurias> fglock: hi

[19:35] <fglock> pmurias: hi!

[19:36] <fglock> I'm trying to implement matching Captures to Signatures, but I keep getting distracted :P

[19:36] *** maskd joined
[19:37] <pmurias> :) wanted to do the same thing this morning but got distracted to :)

[19:39] <pmurias> i think $var->{_dispatch}($var,...) needs to be replaced in emitted code by something which is not as evil

[19:40] <pmurias> there is a potential problem with f()->{_dispatch}(f(),'method',...) if f() has side effects

[19:42] <pmurias> the DispatchSugar has it's own problem with requiring sugar() calls all over the place

[19:42] *** araujo left
[19:43] <pmurias> using dispatch($invocant,'name',...) is my proposed solution

[19:43] <pmurias> or using autobox.pm

[19:43] <fglock> hmm - looks good

[19:43] <fglock> i mean - dispatch($invocant,'name',...) 

[19:44] <fglock> it doesn't require a temporary variable

[19:45] <fglock> and it is portable to other backends

[19:48] <pmurias> where should the function go?

[19:49] <pmurias> MOP?

[19:49] *** araujo joined
[19:51] <fglock> either MOP.pm, or in GLOBAL (lib/KindaPerl6/Runtime/Perl5/Runtime.pm)

[19:51] <fglock> i think MOP.pm is better

[19:53] <fglock> i've got to find something to eat - back in ~1h

[19:54] <pmurias> should it be invoked as a fully qualified sub? not sure where to export it from

[20:08] <pugs_svnbot> r17216 | moritz++ | [irclog] clear non-printable characters from the logs before any 

[20:08] <pugs_svnbot> r17216 | moritz++ | other output processing to prevent bogus \b matches

[20:08] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17216

[20:08] <lambdabot> Title: Changeset 17216 - Pugs - Trac

[20:10] *** mj41 joined
[20:14] *** fglock left
[20:18] *** nperez left
[20:26] *** rintaro joined
[20:28] *** apeiron joined
[20:32] *** Azure-BOT left
[20:33] *** sunnavy joined
[20:37] *** cognominal_ left
[20:37] <pugs_svnbot> r17217 | lwall++ | statement semicolon not eaten correctly as noted by pmichaud++

[20:37] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17217

[20:37] <lambdabot> Title: Changeset 17217 - Pugs - Trac

[20:37] *** cognominal_ joined
[20:41] *** rintaro_ left
[20:46] *** Azure-BOT joined
[20:55] <pugs_svnbot> r17218 | pmurias++ | kp6: dispatch() is exported from KindaPerl6/Runtime/Perl5/Runtime.pm

[20:55] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17218

[20:55] <lambdabot> Title: Changeset 17218 - Pugs - Trac

[20:57] *** rintaro_ joined
[20:58] <Blwood> say() function adds \r\n ?

[20:58] <Blwood> I thought it was just \n

[20:58] <szbalint> I'd guess it depends on your operating system

[20:59] <Blwood> I see some examples in pugs/examples/networking were irc requests are made using say

[20:59] <szbalint> and line ending settings

[20:59] <Blwood> and irc request need \r\n 

[20:59] <Blwood> irc requests*

[20:59] <Blwood> szbalint, ah it would be very nice :)

[20:59] <Blwood> but I still can't understand the use of say in a http/irc request :s

[21:01] *** cognominal_ left
[21:01] *** kane__ left
[21:01] <pmurias> sleep&

[21:01] *** pmurias left
[21:02] *** kane__ joined
[21:04] *** kane__ left
[21:06] <szbalint> I don't see \r\n anywhere in pugs/examples/network, where are you seeing such endings Blwood?

[21:12] *** rintaro__ joined
[21:12] *** rintaro left
[21:13] *** cognominal_ joined
[21:21] *** rintaro joined
[21:23] *** rintar___ joined
[21:26] *** rinta____ joined
[21:28] *** rintaro_ left
[21:33] <Gothmog_> szbalint: He just said that lines in an HTTP or IRC request /should/ end with \r\n, which is correct (or at least, if \r\n means CRLF).

[21:33] *** diotalevi_ left
[21:36] <Blwood> szbalint, yeah I don't see \r\n there's just for example : say("GET / HTTP/1.1\n"); normally it should be GET HTTP/1.1\r\n

[21:37] <Blwood> but the request works, though :o

[21:37] *** rintaro__ left
[21:38] <Blwood> also, does someone know how to call a method inside the class ?

[21:38] <Blwood> I mean for example a self.drink inside the Class dringer {  }

[21:38] <Blwood> drinker*

[21:39] *** rintaro left
[21:39] *** rintaro joined
[21:39] *** fglock joined
[21:43] *** rintar___ left
[21:44] *** diotalevi_ joined
[21:45] *** Daenyth` joined
[21:47] *** rintaro_ joined
[21:48] *** Blwood is now known as t4pz

[21:48] *** t4pz is now known as Blwood

[21:56] *** rinta____ left
[21:59] *** rintaro left
[22:04] <szbalint> ah

[22:05] *** diotalevi left
[22:07] *** buetow joined
[22:12] *** Azure-BOT left
[22:15] *** buetow left
[22:16] <Gothmog_> Blwood: The request probably works because most servers are very tolerant.

[22:16] <diakopter> moritz: pong

[22:20] <diakopter> moritz: oh yeah, gotta commit that evalbot change.  doing so now.

[22:20] <Blwood> Gothmog_, yeah maybe, but for irc it is not so tolerant I think. 

[22:21] <Gothmog_> I'm not sure. Fire up telnet and try. :-)

[22:21] <Blwood> yeah good idea

[22:21] <Gothmog_> Or replace say "..."; with print "...\n";

[22:22] <Blwood> yes I use print, but I was a bit surprised for the say

[22:22] <Gothmog_> But I suppose it works. Nevertheless I would always send correct data.

[22:24] *** diotalevi_ left
[22:25] *** cognominal_ left
[22:25] *** cognominal__ joined
[22:41] <pugs_svnbot> r17219 | diakopter++ | moritz: here are evalbot's temp workarounds

[22:41] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17219

[22:41] <lambdabot> Title: Changeset 17219 - Pugs - Trac

[22:41] *** ozo left
[22:45] *** chris2 left
[22:46] *** Limbic_Region joined
[22:58] *** ozo joined
[23:17] *** [particle1 joined
[23:32] *** bonesss joined
[23:33] *** [particle] left
[23:33] *** Blwood left
[23:38] *** ozo left
[23:45] *** ezraburgh joined
[23:51] *** fridim joined
