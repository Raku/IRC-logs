[00:00] <TimToady_> does it look like -STD is on the path toward sanity to you?

[00:01] *** TimToady_ is now known as TimToady

[00:06] *** mjk joined
[00:17] <putter> moritz: good night *wave*

[00:17] <putter> TimToady_: re "stop", :)

[00:18] <putter> re "sanity", let's see...

[00:21] <putter> yes

[00:21] <putter> :)

[00:23] *** theorbtwo joined
[00:23] <putter> I haven't looked closely at most of it.  And the real way to detect problems will be to try and run it.  But

[00:24] <putter> basically what it provides is a reference, a spec, which it achieves regardless of any bugs present.

[00:26] *** TimToady joined
[00:26] <putter> hmm.  with delighted emphasis "a reference! :)".

[00:29] <putter> feel free to use a simple text macro for the token category decls.  slightly more work for a preprocessor vs clarity.

[00:29] *** BooK joined
[00:30] <TimToady> yah

[00:36] *** sunnavy joined
[00:37] *** Aankhen`` joined
[00:54] <putter> sigh.  more name pain.  since what was called a "rule" is now called a "named(?) regex", "subrule" needs to be renamed.  "subregex"?

[00:56] *** ashelyb_ joined
[00:58] <putter> Is there some way to do relative addressiing within the numbered capture hierarchy?  starting with "give me the leaf match which encloses the current part of the regex".  I don't immediately see that.  Looks like one has to nonlocally (within a regex) navigate from the top $/ down.

[00:59] *** gnuvince_ joined
[01:04] <audreyt> putter: $/[-1] ?

[01:08] *** Caelum joined
[01:13] <putter> I'm not yet sure what the p6 senario is, but at least in p5, the match array is prepopulated with failed matches.  At least that's my fuzzy recollection.

[01:14] <putter> ((((( (.) { $foo[0] } )))))    with some foo would avoid having to count parens and say $/[0][0][0][0][0][0].

[01:18] <putter> "bxa" =~ /^(?(1)a|b)(x)(?(1)a|b)$/  works.  so, at least nominally, \1 exists before it is reached, even during execution.

[01:20] <putter> obviously one would usually use names.  and one could alias the needed match.  (((( $foo := ( (.) { $foo[0] } )))))   or something like that.

[01:20] <putter> i suppose one might have a $/.current  or somesuch

[01:21] <TimToady> sorry, network problems, have to reboot &

[01:26] *** TimToady joined
[01:28] <TimToady> we still call them subrules

[01:28] <TimToady> it's an inconsistency we can live with

[01:28] *** weinig is now known as weinig|away

[01:28] <putter> (none of my questions were pressing.  just things which popped up as I went coding by)

[01:29] <TimToady> and yes, $/[-1] or $-1 is supposed to be the previous ()

[01:29] <audreyt> TimToady: the Syn does not mention $-N anymore

[01:29] <TimToady> also you can $0 := ... to start the numbering over

[01:29] <TimToady> hmm.

[01:30] <audreyt> neither does STD

[01:30] <putter> re inconsistency, *shudder*.  just as p[45] set the standard for regexps, p6 will like set a new standard.  future generations will hate us less if we put together a sane nomenclature.

[01:30] <putter> s/like/likely

[01:30] <audreyt> neither does pugs :) which makes it noncanonical atm...

[01:30] <TimToady> well, ideas welcome

[01:31] <TimToady> also wondering how far context variables go in emulating attribute grammar attributes

[01:32] <avar> audreyt: I'll cpan re::engine::POSIX tomorrow:)

[01:32] <TimToady> also thinking about some kind of :inline( my $x is context )

[01:32] <audreyt> avar: moose! 

[01:32] <avar> momo:)

[01:33] <audreyt> my doctor just went in to tell me I'll be discharged tomorrow

[01:33] <avar> You have internet at the hospital?

[01:33] <audreyt> ah, this is .tw

[01:33] <avar> (.tw)++

[01:34] <audreyt> in taipei we have internet on public transportation (and taxis) :)

[01:34] <putter> lol

[01:34] <avar> oh man

[01:34] <avar> crazy asian people, me like! (long time *snicker*)

[01:34] <audreyt> for <usd$100/year

[01:35] <TimToady> I used to have that back when my Ricochet modem worked... :(

[01:35] <audreyt> so yeah, for all my wandering around the globe, taipei is still quite compelling a base station for me :)

[01:35] <TimToady> now I have it again, since Google has re-wire(less)ed Mountain View

[01:35] <putter> please do some internet equivalent of launching a satellite.  the US really needs a "we are falling terribly behind!" wireless panic.

[01:36] <audreyt> ooh nice. (even more excited at visiting mountain view)

[01:36] *** ashelyb_ joined
[01:37] <putter> s/a satellite/the first satellite/

[01:37] <audreyt> avar: so ::POSIX goes thru ::Plugin? or is it native? and are you also planning to do the plan9-engine thing?

[01:37] <avar> native, I'm just using STD posix, dmq thought plan9 would be neat, haven't looked at it:)

[01:37] <avar> but I'm getting pretty good at this:)

[01:38] <audreyt> :D

[01:38] <audreyt> avar++

[01:39] <avar> I'm not shipping a posix regex libary though and just using whatever the system has (no workie on windows)

[01:39] <audreyt> sure. it's proof-of-concept anyway

[01:39] <avar> mm

[01:40] *** seano_ joined
[01:40] <putter> avar: has anyone done a simple passthru, ie, do a plugin which uses the usual p5 engine... and then run all the p5 tests related to regexps?  like substr.t, split.t, etc?

[01:40] <avar> good resource on plan9 regexps?

[01:40] <avar> putter: nope

[01:40] <putter> :/

[01:41] <avar> well, once you override the engine it'll work everywhere (probably not what you meant) but then again I'm not sure what you mean:)

[01:41] <avar> re::engine::Perl; which did what you have by default would be a 20 line plugin with an arary of the function pointers it's using anyway

[01:42] <avar> *array

[01:42] <audreyt> avar: consider a ::Plugin::Perl5 that goes to userland and back

[01:42] <audreyt> I believe that's what putter has in mind

[01:42] <avar> ah, that's another issue though

[01:42] <audreyt> but it ensures completeness around edge cases

[01:42] <avar> mm, indeed

[01:42] <audreyt> which is what we'll need for full fledged ::PCR 

[01:42] <avar> ::Plugin is far from complete as you may have noticed

[01:43] <avar> but the framework around it is pretty good IMO, which is why I released it in its infant state:)

[01:43] <putter> the biggest obstacle with the old plugin stuff was that the rest of p5 core, the substr node code in particular, was... taking liberties.  do anything interesting (like accessing a variable) in a plugin, and you got later segfaults.

[01:43] <avar> yeah, there are a lot of liberties:)

[01:43] <putter> call.  bbiab

[01:47] <avar> audreyt: well, depending on what the edge cases are...

[01:48] <avar> tracking down any stuff that presumes perl5-engine semantics on $your_engine is the most important stuff:)

[01:48] <audreyt> *nod*

[01:49] <audreyt> still a userland roundtrip test should be a good test to ::Plugin itself in t/

[01:49] <avar> mm

[01:52] <avar> aren't plan9 regexes notable because of the implementation, not because of external interface/syntax?

[01:53] * avar tries to find some more on them

[01:53] *** Caelum joined
[01:58] <audreyt> avar: are you not about to sleep? :)

[01:58] <avar> mm, sleep:)

[02:02] * audreyt naps a bit :) &

[02:06] <putter> back

[02:07] <putter> yes, what audreyt said.

[02:08] <putter> and turning up core problems will give p5p something to chew on, since apparently there is interest

[02:20] *** Caelum joined
[02:27] *** seano joined
[02:28] *** yhsuan joined
[02:32] <devbot6> dev: WikiStart edited by malon <http://dev.pugscode.org/wiki/WikiStart>

[02:42] <putter> wikibot++

[03:01] *** seano joined
[03:45] <devbot6> dev: WikiStart edited by audreyt <http://dev.pugscode.org/wiki/WikiStart>

[03:53] *** rashakil_ joined
[04:01] *** nperez joined
[04:14] *** rashakil_ is now known as rashakil

[04:17] *** forsaken joined
[04:25] <putter> TimToady: in S05, shouldn't "token ident" and regex ident be \w* rather than \w+ ?

[04:41] *** amnesiac joined
[04:45] <PerlJam> putter: perhaps in the language exemplified by that example, all identifiers must be at least 2 characters :)

[04:46] <PerlJam> of course, S02 says "An identifier is composed of an alphabetic character followed by any sequence of alphanumeric characters. The definitions of alphabetic and numeric include appropriate Unicode characters. Underscore is always considered alphabetic."

[04:47] <PerlJam> depends on how you interpret "any sequence" really.

[04:53] *** seano joined
[04:55] <specbot6> r13591 | larry++ | wrong quantifier on ident noted by putter++

[05:00] * putter wonders if w is <alphanum>

[05:01] *** Aankhen`` joined
[05:02] <putter> hmm, so does unicode alpha always include _, or is <alpha> ne <unicode alpha> ?

[05:03] <TimToady> unicode alpha doesn't include _

[05:03] <devbot6> planet6: Audrey Tang: Intermission over. <http://pugs.blogs.com/pugs/2007/02/intermission_ov.html>

[05:03] <TimToady> \w does, dunno about <alpha>

[05:03] <TimToady> I think <alpha> is probaby unicode alpha

[05:04] <TimToady> just to be consistent

[05:16] <putter> blech, what ugly code.  sigh.

[05:17] <svnbot6> r15313 | putter++ | yet_another_regex_engine - Began p6 regex support.  Parrot rx_* tests currently 36% ok, 12 sec.

[05:22] <putter> It would be nice to have a cannonical printed form for Matches.  Perhaps ideally one line.  So, for instance, the parrot rx_* tests could validate the entire match result, rather than just spotchecking it.

[05:30] <audreyt> putter: Match("all matched": "positional", "captures" :named("capture") :another("named"))

[05:30] <audreyt> something like that?

[05:32] <putter> yes, I think.

[05:33] <audreyt> that seems as canonical as I can fathom

[05:34] <putter> perl Regexp_Module.pm --repl (subliminal advertising "tryyyyy itttt") shows its results as <1,"a",[],{},0,1>

[05:34] <audreyt> though there's still the ok/from/to info

[05:36] <putter> i really don't understand  Match("all matched": "positional", "captures" :named("capture") :another("named"))

[05:36] <audreyt> it's a piece of perl 6 that constructs a Match object with the slots of $$/, @$/ and %$/ spelled out

[05:36] <audreyt> it doesn't have the ?$/ $/.from $/.to info, though

[05:38] <audreyt> though ?$/ (whether match succeeded) can be represented by encoding failure as simply Match()

[05:38] <putter> a(b) -->  ???

[05:38] <audreyt> ?eval :named("capture")

[05:38] <evalbot_r15306> ("named" => "capture")

[05:39] <TimToady>  ?eval Match.true

[05:39] <TimToady> ?eval Match.true

[05:39] <evalbot_r15306> Bool::False

[05:39] <audreyt> protoobj is false.

[05:39] <tene> ?eval Match("all matched": "positional", "captures" :named("capture") :another("named"))

[05:39] <evalbot_r15306> Error: No compatible subroutine found: "&Match"

[05:40] <audreyt> ?eval \("all matched": "positional", "captures" :named("capture") :another("named"))

[05:40] <evalbot_r15306> CCall "perl" CaptMeth {c_invocant = VPure (CaptMeth {c_invocant = VPure (MkStr {unStr = "all matched"}), c_feeds = [MkFeed {f_positionals = [VPure (MkStr {unStr = "positional"}),VPure (MkStr {unStr = "captures"})], f_nameds = fromList [("named",[VPure (MkStr {unStr = "capture"})]),("another",[VPure (MkStr {unStr = "named"})])]}]}), c_feeds = [MkFeed {f_positionals = [], f_nameds = fromList []}]}

[05:40] <audreyt> ok... that's a reminder that I should finish the MO bridge ;)

[05:40] <audreyt> (it's a new-land Capture object that doesn't take methods yet)

[05:41] <tene> Expand "MO"?

[05:41] <audreyt> metaobject.

[05:41] <audreyt> since haskell has no native object system

[05:41] <audreyt> we invented one for it

[05:41] <audreyt> lives in src/MO/*

[05:42] <tene> Thanks.

[05:42] <audreyt> np :)

[05:42] <putter> a(b) --> ???     Match("a",[Match("b")])  ??? but that doesn't seem to be what you were suggesting...

[05:43] <audreyt> putter: something like

[05:43] *** seano joined
[05:43] <audreyt> Match("ab": Match("b"))

[05:43] <audreyt> or, abbreviated:

[05:43] <audreyt> \("ab": \("b"))

[05:44] <audreyt> it may be reasonable to simply discard from/to info and compare the capture tree. maybe.

[05:45] <putter> "if it isn't tested, it doesn't work"

[05:45] *** agentzh joined
[05:46] <audreyt> \(0;2;"ab": \(1;2;"b"))

[05:46] <audreyt> better?

[05:46] * putter is confused by all the ; and : ;)

[05:47] <TimToady> and what units are those numbers?

[05:47] <tene> :)

[05:47] <audreyt> \(FROM ; TO ; MATCH : POS1, POS2, POS3 :N1(NAMED1) :N2(NAMED2))

[05:47] *** dmarkham78 joined
[05:48] <audreyt> TimToady: as this is part of spec-based test, I expect it to be whatever unit the test operates under

[05:48] <TimToady> okay

[05:49] <TimToady> I think : binds tighter than ;

[05:49] <audreyt> it does

[05:49] <audreyt> \(MATCH: POS1, POS2 :N1(NAM1) :N2(NAM2) ; FROM ; TO)  # this, then?

[05:50] <putter> probably want unit constructors so  1 grapheme  can .perl as grapheme(1) or somesuch

[05:51] <putter> though for here, bytes is the lowest common denominator, and knowing bytes, you know everything, yes?

[05:52] <audreyt> hm. if the MATCH: is not specially crafted by "return" then we just write from and to

[05:53] <audreyt> a(b)  ==>  \(\(;1;2);0;2)

[05:53] <TimToady> loses information differently, anyway...

[05:53] <audreyt> a(b)  ==>  \(0;2;\(1;2))

[05:54] <putter> (see previous remark ending in "then it doesn't work")

[05:54] *** dmarkham78 left
[05:54] <audreyt> why?

[05:54] <audreyt> when we just record the matched string, sure it's bogus because it can occur multiple times.

[05:55] <audreyt> but by knowing the original string-to-match, doesn't from/to encode the matched string uniquely?

[05:55] <audreyt> failing to see why it doesn't work

[05:55] <putter> Murphy.  If matches are permitted to be confused about what their matched text is, they will be.

[05:55] <audreyt> fair enough, spell it out then.

[05:56] <putter> So yes, it is a viable minimal rep.  But that minimalism is at odds with the testing objective.

[05:56] <audreyt> kk.

[05:56] <TimToady> or include enough info to retreive the original uniquely

[05:57] <TimToady> not clear that .WHICH is going to be less than the whole string, though...

[05:57] <putter> I suppose you could separately test that the minimal constructors actually work, and then rely on object comparison with the test result.

[05:57] <putter> Paranoid object comparison.

[05:57] <audreyt> \('ab':\('b';1;2);0;2)  # then

[05:57] <TimToady> $a ==== $b

[05:57] <audreyt> it doesn't look that bad, actually :)

[05:58] <tene> need more '=' I think

[05:58] <TimToady> $a =:=:=:=:= $b

[05:58] * putter considers hitti

[05:59] <TimToady> maybe 'ab'(1,2) can be some kind of weird constructor

[05:59] <putter> ng the unicode table to generate a stream of alternating equality-like symbols.   but no.

[05:59] <TimToady> er, 0,2

[05:59] <putter> Is the capture-match relationship described somewhere?

[05:59] <audreyt> conceptually cleaner. doesn't save space/typing, though

[06:00] <audreyt> S03.pod:the C<Match> object is a kind of C<Capture>, which has these capabilities.

[06:00] <TimToady> thing is, 'ab' and (0,2) are isomorphicish

[06:00] <audreyt> yup.

[06:00] <TimToady> and I was thinking along the lines of sigs that re-analyse an arg: :( $node ($left,$right) )

[06:02] <audreyt> so instead of calling &ab like in perl5, this time we annotate Str?

[06:02] <TimToady> seems like one ought to be able to construct an arg similarly

[06:02] <TimToady> not necessarily string, but some notation that builds a tree node as one thing.

[06:03] <TimToady> I suppose that just means the invocant is also a capture...

[06:03] <audreyt> yeah.

[06:03] <TimToady> \( \("ab": 0,2): \("b": 1,2)) or some such

[06:03] <audreyt> we already have a generic xexpr

[06:04] <audreyt> *nod*

[06:05] <TimToady> or \( \("ab": :from(0),:to(2)): \("b": :from(1),:to(2)))

[06:05] <audreyt> though conceptually it's at the wrong level

[06:05] <audreyt> a match can from 0 to 2

[06:05] <audreyt> but has a completely irrelevant $$/

[06:05] <audreyt> built from {return}

[06:06] <audreyt> hence the choice of outofband semicolon

[06:07] <TimToady> seems like returns makes it too easy to lose positional info

[06:08] <audreyt> uh how?

[06:08] <putter> 1am.  good night all &

[06:09] <TimToady> if you return your own object it's unlikely to have .from and .to

[06:09] <TimToady> I foresee someone building up a tree of these and then trying to produce a meaningful error message

[06:09] <TimToady> and saying "oops"

[06:09] <audreyt> mm? the Match still responds to .from and .to

[06:09] <audreyt> it just delegates all other methods to that obj

[06:10] <audreyt> if you want we can even shift to .:from and .:to

[06:10] <TimToady> hmm

[06:10] <audreyt> so the obj is never actually replacing the Match

[06:10] <audreyt> of course we still have the positional trees

[06:11] *** agentzh left
[06:11] <TimToady> I guess I'm actually too tired to think abou this now

[06:12] <audreyt> :) sleep then

[06:13] <TimToady> well, I'd just like to say that I'm glad you're recovering.

[06:13] <TimToady> so...I'm glad you're recovering.

[06:13] <TimToady> pace yourself.  :)

[06:14] *** BooK_ joined
[06:14] <TimToady> zzz 

[06:14] <TimToady> &

[06:14] <audreyt> :D

[06:14] <audreyt> that I will.

[06:14] <audreyt> I'll try to contain my excitement at having my brain back :D

[06:17] *** charsba__ joined
[06:19] *** amnesiac joined
[06:19] *** rashakil joined
[06:19] *** yhsuan joined
[06:19] *** ashelyb_ joined
[06:19] *** araujo joined
[06:19] *** dduncan joined
[06:19] *** Khisanth joined
[06:19] *** polettix joined
[06:19] *** upd joined
[06:19] *** dec joined
[06:19] *** smash joined
[06:19] *** Ziggy6 joined
[06:19] *** czth_ joined
[06:19] *** [particle] joined
[06:19] *** bsb joined
[06:19] *** nekokak joined
[06:19] *** rafl joined
[06:19] *** cognominal joined
[06:19] *** charsbar joined
[06:19] *** awwaiid_ joined
[06:19] *** ajs_home joined
[06:19] *** xerox joined
[06:19] *** stevan_ joined
[06:19] *** Debolaz joined
[06:19] *** prism joined
[06:19] *** mdiep joined
[06:19] *** idiotmax joined
[06:19] *** Maddingue joined
[06:19] *** mj41 joined
[06:19] *** SCalimlim joined
[06:19] *** lambdabot joined
[06:19] *** masak joined
[06:19] *** miyagawa joined
[06:19] *** ludwig- joined
[06:19] *** ruz joined
[06:19] *** diotalevi joined
[06:19] *** jdv79 joined
[06:19] *** wilx joined
[06:19] *** GeJ joined
[06:19] *** autark_ joined
[06:19] *** broquaint joined
[06:19] *** svnbot6 joined
[06:19] *** LCamel joined
[06:19] *** jabbot joined
[06:19] *** jiing joined
[06:19] *** scw joined
[06:19] *** Yappo joined
[06:19] *** jrockway joined
[06:19] *** devbot6 joined
[06:19] *** hcchien joined
[06:19] *** pjcj joined
[06:19] *** cj joined
[06:19] *** felipe joined
[06:19] *** jql joined
[06:19] *** perlbot joined
[06:19] *** knewt joined
[06:19] *** Grrrr joined
[06:19] *** cls_bsd joined
[06:19] *** meppl joined
[06:19] *** statico joined
[06:19] *** revdiablo joined
[06:19] *** moritz joined
[06:19] *** shay|p6 joined
[06:19] *** nipotan joined
[06:19] *** PerlJam joined
[06:19] *** Juerd joined
[06:19] *** wolverian joined
[06:19] *** tcliou joined
[06:19] *** kcwu joined
[06:19] *** _jcrigby joined
[06:24] *** brad__ joined
[06:24] <brad__> hi

[06:25] <tene> hi

[06:26] <brad__> not much going on?

[06:26] <tene> Not anymore.

[06:26] <brad__> just missed the excitement and high drama?

[06:26] <tene> You missed the discussion about potential canonical representations of a Match.

[06:27] <brad__> hmm, would have been interesting to listen to (doubt i could add anything intelligent)

[06:27] <tene> So stay logged in all the time and read the scrollback whenever you come back.

[06:27] <brad__> nah, too expensive to leave my pc on all the time

[06:28] <audreyt> brad__: irssi+screen solves that problem :)

[06:28] <brad__> i am on irssi+screen now

[06:28] <audreyt> a screen that lives on another host :)

[06:28] <brad__> ah

[06:28] <audreyt> for example, perlcabal.org, aka feather

[06:28] <brad__> yes i have access to about 10,000 or so idle servers at yahoo i could use

[06:28] <audreyt> is the host many of us uses :)

[06:28] <audreyt> (I was about to say that :))

[06:29] <brad__> irc logs are always there too

[06:29] <audreyt> yeah, but with offsite screen people can /msg you etc

[06:29] <brad__> audrey, i gave up trying to use darcs to get pugs...reverted to svn

[06:30] <brad__> "/msg"...i learn something new every day

[06:30] <brad__> guess i could rtfm on irc some day

[06:30] <audreyt> oy. I broke darcs a week or so ago

[06:30] <audreyt> fixing.

[06:30] <brad__> no problem, i have the svn checkout

[06:31] <brad__> speaking of haskell, have you tried "goa"?

[06:31] <brad__> ghci on acid

[06:31] <brad__> i would love to see perl -de 0 do stuff like that

[06:32] <brad__> a repl that talks back....intelligently!

[06:33] <audreyt> fixed.

[06:33] <brad__> wow you are fast

[06:34] <svnbot6> r15314 | audreyt++ | * Fix darcs link at pugscode.org: The canonical URL is http://darcs.pugscode.org/.

[06:34] <lambdabot> Title: Index of /

[06:36] <brad__> well i have to scram but thanks for fixing darcs audrey

[06:36] <brad__> take care and good night!

[06:37] <audreyt> have fun :)

[06:42] *** Aankhen`` joined
[06:55] *** devogon joined
[06:57] <ingy> happy new year audreyt 

[06:57] <audreyt> ingy: thanks!

[06:58] <audreyt> though I ended up spending the new year alone in this cell^Wroom

[06:58] <ingy> are you in a hospital?

[06:58] <audreyt> yes.

[06:58] <audreyt> (see http://pugs.blogs.com/)

[06:58] <lambdabot> Title: Pugs

[06:58] <ingy> well I hope they are hospitable :)

[06:59] <audreyt> they in fact will discarge me tomorrow :)

[06:59] <ingy> better than a Hostel; I hear they can get hostile

[06:59] <ingy> oh yay!

[07:00] <audreyt> yeah. small price is no methylphenidate for me in the next month or so

[07:00] <audreyt> (it taxes liver; also it masks tiredness)

[07:00] <audreyt> but yeah, definitely beats liver failure

[07:01] <tene> Hmm.

[07:02] *** wilx joined
[07:02] <ingy> isn't estrogen hard on the liver?

[07:02] <tene> Should pugs play nice with perl5 modules that uses XSLoader?

[07:02] <audreyt> ingy: yeah :/ so no estradiol for me, either. this is going to be fun

[07:02] <tene> That is to say, it doesn't seem to be.  Is that expected?

[07:03] <audreyt> $ ./pugs -Mperl5:YAML::Syck=Dump -e 'say Dump [1,2,3]'

[07:03] <audreyt> --- 

[07:03] <audreyt> - 1

[07:03] <audreyt> - 2

[07:03] <audreyt> - 3

[07:03] <audreyt> worksforme (YAML::Syck uses XSLoader)

[07:03] <tene> What is the "=Dump" syntax?

[07:04] <audreyt> same as in perl5.

[07:04] <tene> Hmm.

[07:04] <ingy> glad to hear you are doing so well audreyt. can't wait to see you in April. good night...

[07:04] <audreyt> perl -MCGI=:standard

[07:04] <audreyt> ingy: g'nite!

[07:05] <dduncan> nice that you're writing blogs again ... those are interesting to read

[07:05] <audreyt> :)

[07:07] <audreyt> hello

[07:07] <dduncan> hello

[07:07] <audreyt> (er. that was my gf.)

[07:07] <dduncan> who?

[07:08] <dduncan> or did you type in here by mistake?

[07:08] <dduncan> nevermind

[07:08] <audreyt> no, isis typed "hello" at my keyboard whilst I was away. I guess that's a hint that I should bbiab :)

[07:08] <audreyt> or rather, bbl...

[07:08] <dduncan> I just figured that out, hence the nevermind

[07:08] <audreyt> :D

[07:09] <audreyt> so, uhm, bbl :) *wave* &

[07:09] <dduncan> yes

[07:09] <dduncan> get lots of rest

[07:10] *** mdiep joined
[07:19] *** Aankh|Clone joined
[07:20] *** seano joined
[07:29] *** marmic joined
[07:30] *** czth__ joined
[07:34] *** Aankh|Clone joined
[07:36] *** Aankh|Clone is now known as Aankhen``

[07:38] *** ashleyb joined
[07:41] * gaal mooses

[07:43] <tene> Any examples yet of wrapping a C library in perl6?

[07:43] * Aankhen`` sneaks up behind gaal and whispers "Boo!".

[07:45] <gaal> Aankhen``! hey :)

[07:45] <Aankhen``> Hiya. ^_^

[07:46] <Aankhen``> What's shakin'?

[07:46] <gaal> tene: nope, but if you're looking for p5 there's the newly revived FFI.pm...

[07:48] <gaal> Aankhen``: just random moose here and there... hopefully much more hacking to be resumed!

[07:48] <Aankhen``> Kewl.

[07:49] *** ashleyb joined
[08:10] *** iblechbot joined
[08:19] *** drrho joined
[08:28] *** jisom joined
[08:33] *** jisom left
[08:33] *** jisom joined
[08:34] *** seano joined
[08:35] *** rizo joined
[08:40] *** seano joined
[08:50] *** Psyche^ joined
[09:01] *** Psyche^ is now known as Patterner

[09:05] *** elmex joined
[09:16] *** Aankhen`` joined
[09:23] *** Aankhen`` joined
[09:27] *** lisppaste3 joined
[09:50] *** rfordinal joined
[10:18] *** buetow joined
[10:25] *** seano joined
[10:54] *** pfarmer joined
[11:21] *** chris2 joined
[11:43] *** dec_ joined
[11:53] *** prism joined
[11:54] *** dduncan left
[12:04] *** mjk joined
[12:16] *** zipf joined
[12:20] *** nipotan is now known as nipotaway

[13:17] *** rindolf joined
[13:25] *** Limbic_Region joined
[13:31] <elmex> yay, GPWS!

[13:39] *** IllvilJa joined
[13:54] *** mjk joined
[14:06] *** ProperNoun joined
[14:25] *** ruz joined
[14:34] *** forsaken joined
[14:39] *** amnesiac joined
[14:44] *** vel6608 joined
[14:45] *** mdiep joined
[14:51] *** lumi joined
[14:58] *** rfordinal_ joined
[15:00] *** mdiep joined
[15:19] *** rashakil_ joined
[15:20] *** rgs is now known as aigrgs

[15:21] *** weinig|away is now known as weinig

[15:41] *** Schwern joined
[15:53] *** [particle] joined
[15:54] *** CardinalNumber joined
[15:55] *** avar joined
[15:58] *** rhizo joined
[16:05] *** Limbic_Region joined
[16:07] *** ruz joined
[16:08] *** ashleyb joined
[16:14] *** thepler joined
[16:19] *** Schwern joined
[16:37] *** weinig is now known as weinig|away

[16:37] <specbot6> r13592 | larry++ | Conjecturalized the delegation-via-hash syntax for now.

[17:09] *** kisu joined
[17:14] *** Ziggy6 left
[17:18] *** upd joined
[17:21] *** upd joined
[17:28] *** avar joined
[17:40] *** awwaiid joined
[17:49] *** silug joined
[18:01] *** ashleyb joined
[18:07] *** beppu joined
[18:15] *** CardinalNumber is now known as ProperNoun

[18:20] *** jisom joined
[18:20] *** jisom left
[18:21] *** jisom joined
[18:21] *** jisom left
[18:21] *** jisom joined
[18:23] *** bernhard joined
[18:39] *** bonesss joined
[18:51] *** Ziggy6 joined
[18:51] *** Ziggy6 left
[18:52] *** justatheory joined
[18:56] *** prism joined
[19:01] *** rindolf joined
[19:04] *** justatheory joined
[19:12] *** VanilleBert joined
[19:15] *** ApeDosMil joined
[19:23] *** kisu left
[19:30] *** CardinalNumber joined
[19:30] *** CardinalNumber is now known as ProperNoun

[19:50] *** aigrgs is now known as rgs

[19:56] *** charsbar_ joined
[19:57] *** Squern joined
[20:15] *** larsen_ joined
[20:15] *** pfarmer joined
[20:16] *** pfarmer left
[20:16] <gaal> http://maudnewton.com/blog/?p=7300 # -lcamel

[20:16] <lambdabot> Title: Maud Newton: Blog

[20:17] <rindolf> gaal: did you see the video on youtube about Vista Voice Recognition and writing a Perl script?

[20:18] <gaal> I did.

[20:18] <rindolf> gaal: yes, it was very amusing.

[20:18] <rindolf> Press Caps lock.

[20:18] <rindolf> "Info"

[20:20] <jisom> he never tried upper case info!

[20:21] <jisom> I don't know if that'd work

[20:25] *** dec_ is now known as dec

[20:34] *** weinig|away is now known as weinig

[20:41] *** Daveman joined
[21:13] *** Aankhen`` joined
[21:38] *** bsb joined
[21:42] *** ruz joined
[21:49] *** mrossetti joined
[21:53] *** ashleyb joined
[22:07] *** allbery_b joined
[22:08] *** Psyche^ joined
[22:09] *** bonesss joined
[22:13] *** xerox joined
[22:16] *** evalbot_r15306 is now known as evalbot_r15314

[22:16] *** Psyche^ is now known as Patterner

[22:34] *** weinig is now known as weinig|fooding

[22:36] <ashleyb> is there a web interface to browse the source code the repository where the official Synopsis' live (i.e. not the pugs repository trac interface)?

[22:43] <[particle]> svn.pugscode.org ?

[22:43] <bsb> ashleyb: like http://svn.perl.org/perl6/doc/trunk/design/syn/ ?

[22:43] <lambdabot> Title: Revision 13592: /doc/trunk/design/syn

[22:44] <ashleyb> yes that's it -- hmm but there's no diff-ing capabilities...

[22:44] <ashleyb> that's really what I was looking for

[22:56] *** integral_ joined
[23:10] <bsb> ashleyb: checkout a copy with svn and diff locally: svn diff -r PREV:HEAD S29.pod

[23:11] <ashleyb> ok cool, thx

[23:13] <bsb> nws

[23:16] *** weinig|fooding is now known as weinig

[23:17] *** _newbie_ joined
[23:21] *** polettix joined
[23:44] *** putter joined
