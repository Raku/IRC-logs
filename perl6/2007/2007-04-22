[00:17] *** redear joined
[00:31] *** ludan joined
[00:41] *** thorat left
[01:07] *** Psyche^ joined
[01:22] *** Psyche^ is now known as Patterner

[01:35] *** buetow joined
[02:12] *** offby1 joined
[02:31] *** lb2 joined
[02:44] *** lambdabot joined
[02:48] *** agentzh joined
[02:49] *** agentzh joined
[02:50] <agentzh> Oops, auto-smoke failed again :(

[02:51] <pasteling> "agentzh" at 221.131.66.71 pasted "auto-smoke failed" (211 lines, 14.4K) at http://sial.org/pbot/24393

[02:55] <offby1> my auto smokes sometimes.  I think I need to get the pistons re-bored

[03:04] * agentzh decides to work on Smart::Links for CPAN.

[03:07] *** kanru joined
[03:08] *** justatheory joined
[03:11] <agentzh> offby1: should i "make clean" before "make smoke"?

[03:11] <agentzh> offby1: or should i "make" before "make smoke"?

[03:12] <agentzh> running "./auto-smoke" on feather manually didn't have any problem.

[03:12] <agentzh> weird.

[03:12] <offby1> I have no idea; sorry.  I was just making a dumb joke

[03:12] <agentzh> offby1: okay

[03:13] <agentzh> finally get the pun in your joke ;)

[03:15] <offby1> wasn't really worth the effort, was it? :-)

[03:16] <agentzh> hehe

[03:22] *** deq` joined
[03:34] *** thorat joined
[03:34] *** thorat left
[04:35] <gaal> agentzh: which ghc is invoked when you say "ghc --version" on your interactive shell? Which one when you autosmoke from cron?

[04:35] <gaal> I'm thinking perhaps the environments are different, and you end up with mismatching versions of the haskell networking library.

[04:35] *** Psyche^ joined
[04:37] <agentzh> gaal: it's feather.

[04:37] <agentzh> GHC 6.6

[04:38] <agentzh> gaal: you mean cron and i are using different GHC?

[04:38] <agentzh> checking now

[04:39] <agentzh> agentzh@feather:~$ ghc --version

[04:39] <agentzh> The Glorious Glasgow Haskell Compilation System, version 6.6

[04:44] *** buetow joined
[04:49] <agentzh> ah, "make" no longer work for me. i'm getting the same output from interactive shell :(

[04:49] <agentzh> *works

[04:51] <agentzh> should i wipe out third-party/installed ?

[04:51] *** Psyche^ is now known as Patterner

[04:52] *** agentzh changes topic to: Upgrade to YAML::Syck 0.85 before smoking | http://pugscode.org | http://sial.org/pbot/perl6 | ?eval [~] <m oo se> | We do Haskell, too | > reverse (show (scanl (*) 1 [1..] !! 4))

[04:55] <gaal> agentzh: I have to leave to work right now, but yes, in general tasks started from cron get their own environments, different paths etc.

[04:55] <agentzh> gaal: okay

[04:56] <gaal> I'll update Task::Smoke later to indicate the Y:S recommendation

[04:56] <agentzh> cool

[04:56] <gaal> &

[05:23] *** jisom joined
[05:38] *** atp joined
[06:13] *** BooK joined
[06:22] <agentzh> Hmm, interesting, my interactive shell on feather uses /usr/local/bin/ghc while cron uses /usr/bin/ghc

[06:22] <agentzh> is there a simple way to fix this?

[06:22] *** dduncan left
[06:25] *** rissy joined
[06:26] <gaal> agentzh: put PATH=/usr/local/bin:$PATH in your crontab

[06:26] <agentzh> gaal: okay :)

[06:29] *** xinming_ joined
[06:33] <svnbot6> r16059 | gaal++ | * avoid generating bad YAML in the harness by depending on

[06:33] <svnbot6> r16059 | gaal++ |   YAML::Syck 0.85 or falling back on YAML.pm

[06:33] <svnbot6> r16060 | agentz++ | [auto-smoke] prepended '/usr/local/bin:' to PATH

[06:34] *** penk joined
[06:39] <agentzh> it seems that YAML.pm fails to read the stuff generated by YAML::Syck 0.85. :(

[06:41] *** amnesiac joined
[06:42] * jjore was incredibly surprised to learn why YAML is impossible to write by hand: it disallows indentation with tabs.

[06:43] <jjore> So much of the PAIN I remember from it is explained by just that.

[06:43] * agentzh thinks YAML is designed to be human-readable rather than human-writable.

[06:44] <jjore> Its not difficult to come up with non-tab indentation but with diagnostics in YAML.pm that don't detect that and tell me about my goofs, I can go years without knowing why I can't write something that looks so simple.

[06:45] <rgs> but aren't tabs The evil ?

[06:45] <jjore> Hee. Yes, they are.

[06:45] <jjore> I had to go to significant effort to get my Emacs to do tab *only* indentation at work.

[06:47] <jjore> You know, I wanted "tab" to mean tab everywhere except in my work's source code where it means "insert a tab or trigger autocompletion"

[06:47] <svnbot6> r16061 | agentz++ | [auto-smoke] added some diagnostic code regarding /usr/bin/ghc

[07:21] <agentzh> gaal: cool, cron now picks up /usr/local/bin/ghc as the interactive shell. hmm, i think putting a PATH definition into /etc/default/cron might help too ;)

[07:22] <gaal> don't do that

[07:22] <agentzh> why?

[07:22] <gaal> that'll modify root's cron environment

[07:22] <agentzh> k

[07:22] <gaal> /usr/local shouldn't in generally be in root's path

[07:22] <agentzh> okay, already removed /etc/default/cron

[07:22] <devbot6> planet6: Audrey Tang: Weekly Perl 6 mailing list summary for 08-14 April, 2007 <http://pugs.blogs.com/pugs/2007/04/weekly_perl_6_m_4.html>

[07:43] *** xinming joined
[07:51] *** kane_ joined
[08:00] <svnbot6> r16062 | kudra++ | Now contains all messages of the week

[08:00] *** kanru joined
[08:01] *** franck__ joined
[08:01] *** elmex joined
[08:11] *** bernhard joined
[08:26] *** kanru joined
[08:26] <svnbot6> r16063 | kudra++ | This commit covers all threads which spanned this week and last week, as

[08:26] <svnbot6> r16063 | kudra++ | well as a few small threads.  I am checking in more often since I may soon

[08:26] <svnbot6> r16063 | kudra++ | be sharing this summary writing duty :)

[08:36] *** elmex joined
[08:52] *** elmex joined
[08:53] *** araujo joined
[09:01] *** marmic joined
[09:01] *** iblechbot joined
[09:11] *** Southen joined
[09:24] *** ludan joined
[09:30] *** Muixirt joined
[09:47] *** ilbot-test joined
[09:48] *** kane_ joined
[10:00] *** laye joined
[10:01] *** laye joined
[10:05] <agentzh> laye: problem solved?

[10:11] *** Belaf_sleeping joined
[10:45] *** ludan joined
[10:47] *** agentzh left
[11:30] <moritz> in p5, can I somehow match a string literally that is interpolated into a regex?

[11:31] <moritz> I want something like $str = "foo...bar"; m/something... $str/ so that the dots in $str are treated literally?

[11:33] <gugod> try \Q$str\E

[11:34] <moritz> gugod: thanks

[11:35] <gaal> moritz: see also the related quotemeta builtin

[11:35] <moritz> gaal: I thought about that, but does it what I want?

[11:35] <moritz> gaal: is \' defined in regexes?

[11:36] <moritz> the dot was just an example

[11:36] <gaal> /\Q$str\E/ is the same as $str_1 = quotemeta $str; /$str_1/

[11:36] <moritz> so if I use $str multiple times in a regex, the quotemeta version is faster?

[11:37] <gaal> if you run the quotemeta once, yes :)

[11:37] <moritz> gaal: I do, thanks ;)

[11:37] <gaal> it's unlikely to have any significant impact in your application, but hey you probably know better :)

[11:37] *** agentzh joined
[11:38] <moritz> well, it does not have any impact ;)

[11:41] * agentzh is enjoying moritz++'s #perl6 logs.

[11:41] <moritz> I'm currently working on a more flexible color management

[11:42] <agentzh> nice

[11:52] <moritz> now I assign colors to the nicks who speak most frequently...

[11:52] <moritz> should I do that on a per-day basis, which gives nicer output, or on a "global" basis, so that a nick has the same color every day?

[11:54] <moritz> anyway, I'm off &

[12:10] *** buetow joined
[12:11] *** qmole joined
[12:14] *** qmole joined
[12:14] *** Muixirt left
[12:26] *** pstu joined
[12:57] *** OwlEye joined
[13:05] *** marmic joined
[13:08] *** chris2 joined
[13:15] <agentzh> moritz: please don't do coloring globally since i may dislike the current one painted on myself ;)

[13:18] <agentzh> moritz: or it can be customized by ourselves. for example, when agentzh says "ilbot: red!" in the channel, it will put red on agentzh. ;)

[13:19] * agentzh thinks this feature is kinda cool.

[13:21] *** Limbic_Region joined
[13:22] <jiing> mabye add an option to switch this feature

[13:22] <agentzh> hehe

[13:24] <lumi> Just assure uniqueness of colours for nicks of the same length and starting with the same letter, everything else is bonus

[13:25] <Limbic_Region> huh what?

[13:26] <agentzh> Limbic_Region: http://moritz.faui2k3.org/irclog/out.pl?channel=perl6;date=2007-04-22

[13:26] <lambdabot> Title: IRC log for #perl6, http://tinyurl.com/23setw

[13:31] <Limbic_Region> iblech solved the coloring problem a long time ago

[13:32] <moritz> re

[13:32] <moritz> agentzh: I think that's overkill, irc logs are overrated ;)

[13:33] <Limbic_Region> http://perlmonks.org/?node_id=384347

[13:33] <lambdabot> Title: Coloring IRC logs nicely

[13:34] <Limbic_Region> and here is a screen shot http://m19s28.vlinux.de/iblech/iblechbot-2.png

[13:57] * moritz kicks svnbot6 ;)

[13:57] <svnbot6> r16064 | moritz++ | added the irclog bot and cgi scripts

[13:58] <moritz> agentzh: if you want to setup the bot and cgi scripts on feather, just tell me so, and I'll provide a sql dump of the data I it collected on my server

[13:59] <pasteling> "evalbot_r16063" at 194.145.200.126 pasted "Pugs build failure" (314 lines, 17.1K) at http://sial.org/pbot/24400

[14:00] <svnbot6> r16065 | franck++ |  r21438@franck-mbp:  franck | 2007-04-22 15:31:29 +0200

[14:00] <svnbot6> r16065 | franck++ |  better translation

[14:08] *** agentzh joined
[14:08] <agentzh> moritz: please do :)

[14:09] *** irclogbot joined
[14:09] <moritz> agentzh: allright... I'm currently working on moving the config to different files

[14:10] <agentzh> no hurry :)

[14:10] <svnbot6> r16066 | moritz++ | moved bot config to separate file

[14:10] <agentzh> moritz++

[14:11] <moritz> agentzh: http://moritz.faui2k3.org/tmp/irclog.sql.bz2

[14:12] <agentzh> thanks

[14:13] <agentzh> i'll first try to set it up on my own machine :)

[14:13] <moritz> agentzh: wait half an hour and you have to modify less code, and more config files ;)

[14:13] <agentzh> cool

[14:16] *** irclogbot joined
[14:18] *** agentzh joined
[14:25] <svnbot6> r16067 | moritz++ | irclog: most configuration is now done in the corresponding config files

[14:31] * agentzh is caught by weird svk conflicts again.

[14:31] <agentzh> to be honest, i really won't say "svk --" since i really like it.

[14:32] <moritz> agentzh: then it's SVN that sucks ;)

[14:32] <agentzh> but...

[14:32] <moritz> if you don't want to blame your implementation, the protocol sucks ;)

[14:32] <agentzh> svn seldom gives me troubles.

[14:35] <agentzh> apologies if i've done something wrong to the pugs repos.

[14:36] <agentzh> i'll revert the last commit if it's not empty.

[14:42] *** rindolf joined
[14:52] *** fridim joined
[15:00] <diakopter> agentzh: I was doing some thinking about smartlinks yesterday

[15:00] <agentzh> diakopter: yes?

[15:00] <diakopter> and then I saw your msg about Smart::Links

[15:01] <agentzh> that's Audrey and jerry's idea :)

[15:01] <diakopter> oh, I didn't see their messages I guess

[15:01] <agentzh> (long long ago)

[15:02] * agentzh is lazy.

[15:02] <diakopter> oh.  my thoughts were these:

[15:03] * agentzh listens.

[15:04] *** kanru joined
[15:07] <diakopter> Perl6::Spec as a regular CPAN release would be nice.  I was envisioning it as containing all the synopses in both Perldoc and POD(5) (so that CPAN could render them as html), the (future) yaml-organized official Perl 6 test suite, and of course the smartlinks tools, to generate the interactive versions.

[15:08] <agentzh> Perldoc == Pod6?

[15:08] <diakopter> yeah

[15:09] <agentzh> the cpan toolchain doesn't support Pod6, does it?

[15:09] <diakopter> no, not yet

[15:10] <diakopter> other grandiose thoughts from that:

[15:10] <agentzh> what do you mean by "yaml-organized test suite"?

[15:10] <moritz> yaml is overrated ;)

[15:10] * agentzh has the feeling too.

[15:11] <diakopter> Perl6::Implementation::Smoke(::Interpreter,::Compiler,::Emitter) that uses Perl6::Spec to smoke arbitrary Perl 6 implementations

[15:11] <agentzh> for "interactive version", do you mean the synopses at http://perlcabal.org/syn ?

[15:11] <lambdabot> Title: Official Perl 6 Documentation

[15:11] <diakopter> yes

[15:12] <agentzh> Hmm

[15:12] <moritz> @karma agentzh 

[15:12] <lambdabot> agentzh has a karma of 6

[15:12] <agentzh> the idea of using specs to smoke implementation is funny.

[15:12] <agentzh> *implementations

[15:12] <agentzh> @karma agentz

[15:12] <lambdabot> agentz has a karma of 10

[15:12] <agentzh> 10 + 6 = 16

[15:12] <diakopter> *someone* put "yaml test suite" in the wide project dependency graph

[15:12] <agentzh> :)

[15:13] <agentzh> diakopter: you mean the pictures produced by putter++?

[15:13] <diakopter> I wonder who that could have been.... ;)

[15:13] <diakopter> I meant this: http://dev.pugscode.org/browser/project_planning/a_dependency_graph.png?format=raw

[15:13] <lambdabot> http://tinyurl.com/yr6gyp

[15:14] <agentzh> looking

[15:14] <diakopter> "YAML-based test framework"

[15:15] <agentzh> yes, that was drawn by putter and others

[15:15] <agentzh> right, the current pugs smoking mechanism is based on YAML.

[15:16] <agentzh> there's no doubt about it.

[15:16] * agentzh has been fighting against YAML::Syck's bug these days.

[15:16] <agentzh> we use YAML to serialize the smoke results as well as other related configuration settings.

[15:16] *** penk joined
[15:17] <diakopter> right, but I assumed that the test suite would additionally need to become more structured in order to be useful for Parrot-Perl6 and others

[15:17] <agentzh> we need a good harness.

[15:18] <agentzh> the current harness is mostly Perl 5's Test::Harness.

[15:18] <agentzh> particle has introduced a neutral TODO tricks to parrot

[15:19] <agentzh> and we believe it's useful for the Pugs test suite too.

[15:19] <agentzh> # TODO: parrot 0.4.5, pugs 6.28.1

[15:19] <agentzh> or something like that.

[15:19] <agentzh> the harness may or may not use YAML.

[15:20] <agentzh> to the best of my understanding, YAML is just a data-serialization tool.

[15:20] <avar> it's a serilization format

[15:20] <agentzh> avar: agreed.

[15:21] <agentzh> :P

[15:22] <agentzh> diakopter: a standalone CPAN module named Perl6::TestSuite makes much more sense to me ;)

[15:22] <diakopter> of course.  What I am trying to get you to mind-read from me :) is that perhaps the test suite could be *in* Perldoc, with the individual tests inline with the specs that explain them.

[15:23] <avar> It doesn't always make sense to test things in the order that they're explained and vice-versa

[15:23] <avar> just look at the correlation between the spec and the smartlinks

[15:24] <agentzh> diakopter: putting test suite into perldoc? wow

[15:24] <agentzh> diakopter: i think i've got what you're saying.

[15:24] <moritz> agentzh: did you get the irclogger running?

[15:25] <agentzh> moritz: sorry, not yet. fixing svk issues right now.

[15:25] <moritz> agentzh: no hurry

[15:25] <agentzh> ;)

[15:25] <moritz> agentzh: just ask me when you have questions

[15:25] <agentzh> diakopter: you're suggesting bringing smartlinks to ordinary CPAN modules, nright?

[15:25] <agentzh> *right

[15:26] <agentzh> moritz: yes, of course!

[15:26] <agentzh> diakopter: or bringing smartlinks to Perl 6 implementations other than the Haskell Pugs?

[15:26] <diakopter> avar: true.  Note the trac ticket about reorganizing the test suite to (possibly) match the specs

[15:27] *** stevan_ joined
[15:28] <diakopter> agentzh: yes, enabling smartlinks for other Perl 6 implementations, and hopefully allowing further linking to other (all?) implementations' results/progress.

[15:28] <diakopter> (from the "official" hosted version of the specs)

[15:28] <agentzh> diakopter: *nod*

[15:30] <agentzh> i think it can already achieved by perhaps setting a environment in the current pugs smoke system?

[15:30] <agentzh> *be achieved

[15:30] <avar> diakopter: there's a trac?

[15:31] <agentzh> diakopter: i think this is our goal :)

[15:32] <diakopter> avar: http://dev.pugscode.org/query?status=new&status=assigned&status=reopened&component=Perl+6+test+suite&order=priority

[15:32] <lambdabot> Title: Custom Query - Pugs - Trac, http://tinyurl.com/yujl4y

[15:33] <agentzh> that ticket is great.

[15:34] <diakopter> which ticket?

[15:34] <agentzh> to be more specific, we need to update "./pugs" to "$*EXECUTABLE_NAME" or something like that.

[15:34] <agentzh> diakopter: "Rearrange t/ for reuse with multiple Perl 6 implementations."

[15:35] <agentzh> I think the test harness needs some treatment too.

[15:36] <diakopter> agentzh: re Perl6::TestSuite, since the Perl 6 test suite is authoritatively defined as *the (machine-readable) specification* for Perl 6, I thought Perl6::Spec was not a misnomer

[15:36] <diakopter> then of course the synopses are the human-readable versions.

[15:37] <agentzh> are you sure our test suite is *only* machine-readable?

[15:37] <agentzh> a lot of our tests are very good code examples ;)

[15:38] <diakopter> right, I mean the specs (with the inlined tests via smartlinks or Perldoc) were human-readable.

[15:38] <diakopter> synopses.

[15:38] <agentzh> your explanation of "spec" is quite interesting though.

[15:38] <agentzh> gotcha

[15:38] <diakopter> if I'm wrong, correct me please... that's how I understood it.

[15:41] <agentzh> diakopter: you're suggesting bundling everyting (the spec, the perldoc tool, and the test suite) into a whole?

[15:41] <diakopter> yeah; one CPAN distribution that's released often, but that includes many packages.

[15:41] <agentzh> and making regular CPAN release with whatever it might be called?

[15:41] <agentzh> *releases

[15:42] <diakopter> yes

[15:42] <agentzh> wow, that will be a HUGE module ;)

[15:42] <diakopter> then pugs would be released without it, but with it as a build dependency

[15:43] <agentzh> diakopter: i think this has been discussed on #perl6 and p6l last summer :)

[15:43] <diakopter> oh.

[15:43] <diakopter> do you happen to remember what the conclusion was, if any?

[15:44] <agentzh> the consensus is keeping the Perl 6 test suite in the Pugs SVN repos.

[15:44] <agentzh> *was

[15:44] <diakopter> okay; I wasn't suggesting changing that

[15:44] <agentzh> i know :)

[15:45] <agentzh> and making the test suite as general as possible

[15:46] <agentzh> diakopter: the problem is we are still not at the point where there's a second Perl 6 implementation that can run most of the test suite like Pugs.

[15:47] <agentzh> so testing the independency of our tools is rather difficult.

[15:48] <agentzh> I think Pugs is still the *only* active user of the test suite since v6.pm is no longer under active development

[15:48] <agentzh> (but v6.pm may come up again soon)

[15:49] <Limbic_Region> actually, pmichaud's perl 6 compiler in parrot using PGE is only failing 4 of the sanity tests

[15:49] <moritz> agentzh: but p6-in-p6 (on parrot) is evolving as well

[15:49] <Limbic_Region> once it passes all those tests, it will be open to the entire test suite

[15:49] <Limbic_Region> minus any implementation specific tests of course

[15:49] <Limbic_Region> unfortunately, he has been plagued with family issues and it has been sitting at those 4 failing tests for some time now

[15:50] <Limbic_Region> to me, that's the most exciting thing going on these days

[15:50] <Limbic_Region> there is nothing like thousands of potentially failing tests to drive development

[15:51] <agentzh> the perl 6 design team is looking for more people working on perl6-on-parrot.

[15:51] <Limbic_Region> in any case, I am off to scrub toilets before my wife gets home tomorrow

[15:51] <avar> agentzh: perl6.pir ?

[15:51] <agentzh> avar: yeah

[15:51] <diakopter> to me, the only problem with my suggestion is that (pmichaud told me) one of parrot's goals is to eliminate the perl5 build/smoke dependency (eventually).

[15:51] <Limbic_Region> in the parrot repo, look at languages/perl6

[15:52] <agentzh> diakopter: coding that in perl 6?

[15:52] <agentzh> or PIR?

[15:53] <diakopter> they didn't say

[15:53] <agentzh> oh

[15:53] <diakopter> it sounded strange to me.

[15:53] <diakopter> I don't know who set that goal.

[15:54] <diakopter> I suppose I might have misunderstood.

[15:54] <agentzh> i suspect it will be PIR or something that can be compiled to PIR.

[15:56] <agentzh> hehe

[15:56] <agentzh> it's not very important from my point of view.

[15:57] <Limbic_Region> The goal for parrot has always been to eliminate the perl 5 build dependency

[15:57] <Limbic_Region> especially for probing the system for Configure.PL

[15:57] <diakopter> what's not important - that they want to lose the perl5 dependency?

[15:57] <Limbic_Region> WRT smoking

[15:57] <agentzh> adding more tests and removing explicit "pugs" depencency from the test suite is the #1 goal right now.

[15:57] <Limbic_Region> presumably all that needs to have happen is p5 on parrot

[15:57] <Limbic_Region> and then port the p5 to p6

[15:57] <Limbic_Region> and done

[15:58] <diakopter> how far is p5 on parrot from there?

[15:58] <agentzh> these things are too far to vision...

[15:58] <Limbic_Region> dunno

[15:58] <Limbic_Region> actually, they should have been kept in mind from the very beginning

[15:58] <Limbic_Region> it wouldn't be so hard to divorce them now

[15:58] <Limbic_Region> parrot has been around a lot longer than pugs

[15:59] <Limbic_Region> but again, I should be scrubbing toilets

[15:59] <Limbic_Region> TTFN

[15:59] <agentzh> bye, Limbic_Region

[15:59] *** toshinori joined
[15:59] <diakopter> Limbic_Region: right, but at the time, it was not dreamt that parrot would accede to pugs' test suite as "official"

[16:00] <Limbic_Region> diakopter - you are missing the point

[16:00] <Limbic_Region> which I haven't done a good job of making

[16:00] <Limbic_Region> when parrot first started development, it should have always always always had a HLL targeting it

[16:00] <Limbic_Region> to keep it straight

[16:00] <Limbic_Region> the most obvious choice there being perl 5

[16:01] <Limbic_Region> then anything written in p5 could have been used by parrot natively rather than as a dependency

[16:01] <Limbic_Region> having a high level language that was more accessible by more people would have meant finding bugs sooner

[16:01] <Limbic_Region> more better tests

[16:01] <Limbic_Region> potentially more contribution, etc

[16:01] <Limbic_Region> not to try and take anything away from nick and company with ponie

[16:02] <Limbic_Region> but I think things would have turned out a lot differently if p5 on parrot would have been there from the beginning

[16:02] <Limbic_Region> of course, it may have turned parrot internals into p5 internals too

[16:02] <Limbic_Region> so who knows

[16:02] <Limbic_Region> speculation speculation speculation

[16:02] * Limbic_Region puts on his rubber gloves (which will make typing and avoiding those toilets harder)

[16:03] <agentzh> perl 5 is very hard to target for parrot.

[16:03] <diakopter> agentzh: re "adding more tests and ..." - that's what I was suggesting with the separate release

[16:03] <agentzh> given that allison is still working on perl 1.

[16:03] <diakopter> agentzh: I thought I read that she gave up on it?

[16:04] <agentzh> oh!

[16:04] <avar> writing a perl1 in pir is totally different from changing perl5 to run on the parrot VM

[16:04] <agentzh> really?

[16:04] <agentzh> avar: *nod*

[16:05] <agentzh> XS nightmare, source filters, and etc etc etc

[16:06] <geoffb_> diakopter: I thought she handed punie over to someone else, not dropped it entirely

[16:07] <agentzh> diakopter: what's the (direct) benefit of releasing a CPAN module for the test suite?

[16:07] <diakopter> agentzh: making it separate from pugs CPAN release.

[16:08] <agentzh> what's it good for?

[16:08] <diakopter> direct usage by parrot, kp6, pyrl6?

[16:09] <agentzh> okay

[16:09] <agentzh> how can you test it?

[16:09] <diakopter> test the test suite?

[16:09] <agentzh> yeah

[16:10] <diakopter> include a dummy interpreter/compiler that fails all tests

[16:10] <agentzh> okay, point taken.

[16:10] <agentzh> i think that's a good idea.

[16:11] <agentzh> at last v6.pm can pass hundreds of tests right now.

[16:11] <agentzh> *least

[16:11] <diakopter> another direct benefit:

[16:11] <diakopter> this would allow much further restructuring/modularization of the current pugs svn repo

[16:11] <agentzh> true

[16:12] <agentzh> the current pugs test harness is a mess

[16:12] <agentzh> i'm really looking forward to such things happen, to be honest ;)

[16:12] <diakopter> all the various implementations with all their circular dependencies could be hierarched.

[16:13] <agentzh> *nod*

[16:13] <agentzh> diakopter: are you going to work on that?

[16:14] <diakopter> well I'm certainly not going to block/stop anyone else by saying yes, so... "yes"

[16:14] <agentzh> cool

[16:14] <agentzh> diakopter++

[16:15] <diakopter> unless someone with better ideas or good criticism pipes up in the near term

[16:15] <diakopter> or beats me to the namespace

[16:15] <diakopter> or whatever

[16:15] <agentzh> but do choose a good name for the modules :)

[16:15] <diakopter> okay; what do you suggest

[16:15] <agentzh> diakopter: you can start coding under msic/pX.

[16:15] <diakopter> draw out the tree

[16:15] <agentzh> we certainly don't want to break everything at once ;)

[16:16] <agentzh> diakopter: midnight here, i may not know what i'm acutally saying ;)

[16:17] <agentzh> i'm sure you'll get a lot of suggestions from others quite soon.

[16:19] <agentzh> diakopter: take a close look at Pugs's Makefile.PL and possibly util/prove6.

[16:19] <agentzh> they may be a good start.

[16:19] <diakopter> agentzh: thanks

[16:19] <agentzh> night, all &

[16:19] *** agentzh left
[16:38] *** ayrnieu joined
[16:50] *** Lunchy joined
[16:51] *** cognominal joined
[17:15] *** amnesiac joined
[17:19] <diakopter> @karma diakopter

[17:19] <lambdabot> You have a karma of 2

[17:19] <diakopter> @karma audreyt

[17:19] <lambdabot> audreyt has a karma of 41

[17:20] <diakopter> I guess it got reset at some point

[17:20] <moritz> @karma autreyus

[17:20] <lambdabot> autreyus has a karma of 0

[17:20] <moritz> wrong spelling I guess

[17:20] <diakopter> @karma autrijus

[17:20] <lambdabot> autrijus has a karma of 6

[17:20] <svnbot6> r16069 | agentz++ | reverted the last bogus commit. (svk bug)--

[17:22] <pasteling> "evalbot_r16067" at 194.145.200.126 pasted "Pugs build failure" (309 lines, 17K) at http://sial.org/pbot/24401

[17:34] *** SamB joined
[17:44] *** ludanolo joined
[18:02] *** rhr joined
[18:04] *** moritz joined
[18:04] *** Psyche^ joined
[18:05] *** rindolf joined
[18:05] <rindolf> Hi all.

[18:08] *** ilbot6 joined
[18:08] <diakopter> Hi rindolf

[18:08] <rindolf> Hi diakopter 

[18:09] *** moritz_ joined
[18:15] *** Psyche^ is now known as Patterner

[18:43] *** larsen_ joined
[18:56] *** sapir joined
[19:12] *** moritz_ is now known as moritz

[19:18] <rindolf> moritz: here?

[19:18] *** dduncan joined
[19:18] <moritz> rindolf: depends on your notion of "here" ;)

[19:20] *** ozo joined
[19:22] *** ozoo joined
[19:23] *** ilbot-test joined
[19:28] <moritz> rindolf: anyway, what's up?

[19:28] <rindolf> moritz: I'm fine.

[19:28] <rindolf> Started working on my guide to perl5 extending and embedding.

[19:46] *** devogon joined
[19:50] *** jisom joined
[19:54] *** macroron joined
[19:57] *** lb joined
[19:59] *** lb joined
[20:06] *** OwlEye joined
[20:11] *** Aankhen`` joined
[20:16] *** penk joined
[20:48] *** whooosh joined
[21:00] *** rlb3 joined
[21:24] *** lisppaste3 joined
[21:39] *** jisom_ joined
[21:44] <moritz> did somebody implement something like a diff utility for smoke.yml files?

[21:44] <moritz> that gives a list of tests that passed in the last but failed in the second-to-last, and the other way round

[21:53] *** demq joined
[23:20] *** ilogger2 joined
[23:31] <svnbot6> r16071 | moritz++ | yaml-diff.pl: changed order of args to be the same as that of ordinary diff 

