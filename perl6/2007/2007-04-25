[00:06] <specbot6> r14379 | larry++ | Clarification suggested by TheDamian++

[00:10] <diakopter> I accidentally committed something to my svk local mirror; how do I commit the previous revision of that file so when I push, the file doesn't get committed upstream at all?

[00:15] *** rissy joined
[00:16] <diakopter> downstream, I mean, I guess.

[00:25] <jrockway> diakopter: delete the branch and start over

[00:25] <jrockway> or you can svk cp from an older revision

[00:25] <jrockway> and push with --lump

[00:26] <jrockway> there's no good "forget this commit" comman though

[00:26] <jrockway> both will mess up merge tracking, i think

[00:26] <jrockway> *think*

[00:26] <jrockway> (not 100% sure)

[00:30] <diakopter> jrockway: thanks

[00:35] *** kunwon1 joined
[00:49] *** TimToady joined
[00:53] *** hcarty joined
[01:08] <specbot6> r14380 | larry++ | Clarifications to CANDO suggested by TheDamian++

[01:29] <specbot6> r14381 | larry++ | Clarifications to module naming suggested by TheDamian++.

[01:52] *** penk joined
[02:11] *** bonesss joined
[02:15] *** nperez joined
[02:23] *** veritos joined
[02:23] <veritos> hey guys

[02:23] <veritos> ingy! how ya doing?

[02:27] <veritos> and everyone else too i guess...

[02:35] *** geoffb_ joined
[02:52] *** mako132_ joined
[02:54] *** LCamel joined
[03:06] *** dolmans joined
[03:15] *** sili joined
[03:18] *** justatheory joined
[03:28] *** amnesiac joined
[04:13] *** rissy joined
[04:14] *** TimToady joined
[04:18] *** veritos joined
[04:18] *** nekokak joined
[04:19] *** TimToady joined
[04:20] <pasteling> "evalbot_r16119" at 194.145.200.126 pasted "Pugs build failure" (379 lines, 21K) at http://sial.org/pbot/24479

[04:22] <veritos> was _ the old concat operator and they just changed it to ~ in order to appeace C++ progs?

[04:25] *** tokuhirom joined
[04:32] *** miyagawa joined
[04:44] <dduncan> no

[04:44] <dduncan> veritos, . was the old concat, and ~ is the new

[04:56] *** SubStack joined
[05:12] <specbot6> r14382 | larry++ | Clarifications suggested by TheDamian++

[05:12] <specbot6> r14382 | larry++ | Killed "next METHOD", now just use nextsame etc.

[05:12] <specbot6> r14382 | larry++ | Defined "lastcall" to allow return from final candidate.

[05:12] <specbot6> r14382 | larry++ | Set up WHENCE mechanism for undefined prototype objects to autovivify lazily.

[05:21] <specbot6> r14383 | larry++ | typos

[05:22] *** rfordinal joined
[05:26] *** KingDiamond joined
[05:31] *** elmex joined
[05:38] *** baest joined
[05:45] *** ofer joined
[06:11] *** rfordinal joined
[06:23] *** elmex joined
[06:23] *** nekokak_ joined
[06:26] *** nekokak__ joined
[06:30] *** SubStack joined
[06:37] *** devogon joined
[06:47] *** SubStack_ joined
[06:47] *** SubStack_ is now known as SubStack

[06:54] *** franck__ joined
[07:09] *** minsu joined
[07:19] *** buetow joined
[07:23] *** dvorak joined
[07:25] *** premshree_ joined
[07:25] *** jisom joined
[07:28] *** iblechbot joined
[07:28] *** premshree__ joined
[07:55] *** elmex joined
[08:04] *** wolv joined
[08:04] *** PerlPilot joined
[08:05] *** wolv is now known as wolverian

[08:18] *** buetow joined
[08:35] *** jisom_ joined
[08:44] *** drupek12 joined
[08:57] *** polettix joined
[09:16] *** rfordinal joined
[09:20] *** ayrnieu joined
[09:29] *** Lunchy joined
[09:32] *** TimToady joined
[09:32] *** rissy joined
[09:32] *** lisppaste3 joined
[09:32] *** charsbar_ joined
[09:32] *** rlb3 joined
[09:32] *** lumi joined
[09:32] *** Loro_ joined
[09:32] *** Juerd joined
[09:32] *** theorbtwo joined
[09:32] *** qmole joined
[09:34] *** rfordinal joined
[09:36] *** benny joined
[09:40] *** andara joined
[09:51] <rhr> re: spec r14382, should Collar.new(Tag.new) be something like Collar.new(:tag(Tag.new)) ?

[09:52] *** BooK joined
[09:59] *** rissy joined
[09:59] *** demq joined
[10:00] *** rissy joined
[10:14] <dduncan> it would be if the default new() were used

[10:14] <dduncan> of Collar

[10:14] <dduncan> but an explicitly declared new() in Collar could do something else

[10:15] <dduncan> personally, I prefer to stick with the default named args for most constructors

[10:16] <dduncan> that is, I always declare explicit BUILD, which have named args, and the new() implicitly matches them, which I leave

[10:49] *** RHainsworth joined
[10:50] *** RHainsworth left
[10:52] *** drupek12 joined
[11:08] *** dduncan left
[11:17] *** sunnavy joined
[11:21] *** rindolf joined
[11:43] *** iblechbot joined
[11:43] *** devogon joined
[11:56] *** mako132_ joined
[12:07] *** drupek12 joined
[12:20] *** forsaken joined
[12:22] *** roanbrasil joined
[12:26] *** buetow joined
[12:32] *** rindolf joined
[12:41] *** cognominal joined
[12:52] *** mako132_ joined
[13:16] *** the_dormant joined
[13:32] *** pmurias joined
[13:32] <pmurias> hi

[13:33] <pmurias> rindolf: why did you choose Henry Ford as an example of a supreme value producer?

[13:35] *** jerrylee joined
[13:35] <rindolf> pmurias: because he was.

[13:35] <rindolf> pmurias: and he was also known to be very unfriendly.

[13:36] <pmurias> rindolf: what valueble thing did he produce?

[13:36] <rindolf> pmurias: cars.

[13:36] <pmurias> cars--

[13:36] <rindolf> pmurias: and buses and stuff.

[13:36] <nothingmuch> and rubber

[13:36] <rindolf> pmurias: you need to look at inventions at their context.

[13:37] <rindolf> pmurias: some car companies also make buses and trucks.

[13:37] <rindolf> pmurias: I don't have a driver's licence.

[13:37] <rindolf> But I still appreciate Henry Ford.

[13:37] *** [particle] joined
[13:38] <rindolf> pmurias: Henry Ford also pioneered the 40 hours work week.

[13:38] <pmurias> i personaly belive cars are the worst invetion on earh

[13:38] <rindolf> pmurias: no, they're not.

[13:38] <rindolf> pmurias: and let's s/cars/automobiles/

[13:39] <pmurias> they are the only real threat to my life

[13:39] <rindolf> pmurias: we may transcend cars someday.

[13:39] <rindolf> Just like we transcended horses or fax machines.

[13:40] <pmurias> Eistain rindolf: what is a worse invention (not counting weapons)?

[13:40] <pmurias> s/Eintain//

[13:40] <rindolf> Einstein.

[13:41] <rindolf> pmurias: I don't think inventions can be bad.

[13:41] <rindolf> pmurias: if something can be invented then by inventing it (and developing it, etc.) it may prove useful to someone.

[13:41] <rindolf> "A worse invention"?

[13:41] <rindolf> Do you mean "The worst invention"?

[13:42] <pmurias> yes

[13:42] <rindolf> pmurias: OK.

[13:43] <rindolf> pmurias: so I think the worst invention is meaningless.

[13:43] <rindolf> You can talk about the greatest inventions:

[13:43] <rindolf> Writing, the Alphabet, electricity, etc.

[13:43] <rindolf> the Internet, computers.

[13:44] <ayrnieu> I liked Chivalry: you could then build knights.

[13:44] <rindolf> ayrnieu: heh.

[13:44] <rindolf> ayrnieu: Civilisation?

[13:45] <ayrnieu> rindolf - yes.  Sim City also has powerful metaphores.

[13:46] <ayrnieu> rindolf - e.g., did you know that the way to make money is to build public services and then underfund them?

[13:47] <pmurias> can you have negative public service spending?

[13:48] *** jerrylee joined
[13:48] <ayrnieu> no, you have a dial between 0% and 100% of funding for each Police and Fire station.  Every % below 100 goes into your own coffers, which you can use to build more interesting facilities -- air ports!

[13:50] <pmurias> i thought you got many from the taxpayers and they just demand so much stuff that you can't get a substancial income

[13:51] <ayrnieu> Yes, you can beat that by underfunding public services.

[13:51] * ayrnieu &

[13:51] <pmurias> thanks

[13:53] <ayrnieu> well, I'll stay long enough to say: governments -really do- make money this way, by raising taxes 'to fix the roads', pilfering the income from that tax, and then coming back five years later to raise taxes again over how bad the roads are.  Also, governments -really do- use their police as a form of taxation, by e.g. installing red-light cameras, raising red-light fines, and then shortening yellow-light duration.

[13:53] * ayrnieu &

[13:55] *** fglock joined
[13:56] <pmurias> hi fglock

[14:02] <fglock> pmurias: hi

[14:07] *** buetow joined
[14:11] *** vel joined
[14:12] *** bonesss joined
[14:49] <TimToady> But..but...but...  If cars hadn't been invented, we couldn't have car chase scenes in movies...

[14:50] <moritz> TimToady: then we had to do all these scenes with helicopters ;-)

[14:58] <lumi> How many horses would have suffered making _The Blues Brothers_ :(

[15:04] *** offby1-urbana joined
[15:13] *** forsaken joined
[15:17] *** forsaken joined
[15:22] *** forsaken joined
[15:24] *** PerlPilot is now known as PerlJam

[15:30] *** baest joined
[15:52] *** DarkWolf84 joined
[15:52] *** shay|p6 joined
[15:52] *** pjcj joined
[15:52] *** sri_ joined
[15:52] *** takanori_ joined
[15:52] *** ingy joined
[15:52] *** spinclad joined
[15:52] *** BooK joined
[15:52] *** beppu joined
[15:52] *** gugod joined
[15:52] *** mr_ank joined
[15:52] *** audreyt joined
[15:52] *** jjore-w joined
[15:52] *** gaal joined
[15:52] *** integral joined
[15:52] *** orafu joined
[15:52] *** polettix joined
[15:52] *** nekokak joined
[15:52] *** marmic joined
[15:52] *** [particle] joined
[15:52] *** kane_ joined
[15:52] *** OwlEye joined
[16:02] *** fglock joined
[16:07] *** amnesiac joined
[16:41] *** buetow joined
[16:41] *** thepler joined
[16:43] *** franck__ joined
[16:48] *** andara left
[16:49] *** araujo joined
[16:50] *** bernhard joined
[17:08] *** allbery_b joined
[17:23] <pasteling> "evalbot_r16124" at 194.145.200.126 pasted "Pugs build failure" (7 lines, 316B) at http://sial.org/pbot/24495

[17:25] <wolverian> http://blogs.zdnet.com/microsoft/?p=404 "Microsoft to roll out dynamic-language layer for .Net" 

[17:25] <lambdabot> Title: » Microsoft to roll out dynamic-language layer for .Net | All about Microsoft |  ...

[17:26] <rindolf> Hi wolverian 

[17:27] <wolverian> heo

[17:27] <wolverian> er, hello

[17:27] <wolverian> keyboard isn't quite working properly

[17:28] <rindolf> wolverian: OK.

[17:28] <rindolf> wolverian: what's up?

[17:28] <wolverian> jsp coding, unfortuately

[17:28] <wolverian> argh! unfortunately.

[17:29] <rindolf> wolverian: OK.

[17:29] <rindolf> BTW, I went to Office Depot the other day and they had a rather poor selection of keyboards.

[17:29] <rindolf> I recall being in a shop with much more.

[17:30] <rindolf> And they moved the "\" and "|" key.

[17:32] *** weinig joined
[17:32] *** justatheory joined
[17:42] *** Psyche^ joined
[17:42] *** buetow joined
[17:45] *** DHGE joined
[17:46] *** Psyche^ is now known as Patterner

[17:53] *** rashakil joined
[17:55] *** fglock joined
[17:55] <fglock> how would you call an operation that, given a Regex and a Match, returns a Str?

[17:56] <moritz> fglock: reverse matching?

[17:58] *** ozo_ joined
[18:01] <fglock> moritz: in a single word (subroutine name)

[18:02] <moritz> fglock: so what should it do?

[18:02] <[particle]> my question precisely

[18:02] <[particle]> does it generate strings that match a regex?

[18:04] <[particle]> or, generate the smallest possible string from the passed Match, created from the passed Regex

[18:06] *** laye joined
[18:06] *** Southen joined
[18:06] <fglock> it should generate a string that uses all the data in the Match, and all the Regex (it's a template function)

[18:07] <moritz> "unroll"?

[18:07] <fglock>   template( /nums:\d+/, Match.new( positionals => [1..3] ) )  # nums:123

[18:08] <fglock> oops

[18:08] <fglock>   template( /nums:(\d)+/, Match.new( positionals => [1..3] ) )  # nums:123

[18:08] <rindolf> fglock: isn't it Ruby?

[18:09] <fglock> rindolf: dunno

[18:10] <rindolf> fglock: where do you see this code?

[18:10] <fglock> hmm - in my head?

[18:10] <fglock> just an idea

[18:10] <wolverian> did you search CPAN? :)

[18:11] <fglock> wolverian: it could be a module under Pugs::Compiler::Rule

[18:20] <avar> fglock: does anything you've written implement :rw on p5?

[18:20] *** veritos joined
[18:21] <veritos> hey...i realised that i had a problem with miniperl6-on-python.

[18:21] <veritos> you can't write a function called print.

[18:21] <veritos> def print is a syntax error, since print is a keyword.

[18:21] <veritos> it's apparently just like writing one called def if.

[18:22] <fglock> avar: rw parameters? v6.pm uses Data::Bind

[18:22] <[particle]> veritos: time for name mangling

[18:22] <veritos> [particle]: def perlfn_print(params)?

[18:23] <[particle]> that'll work

[18:23] <fglock> veritos: I've been renaming functions to 'Code_'~$name

[18:23] <veritos> k...

[18:23] <[particle]> def Code... fglock beat me to it

[18:23] <veritos> brb, i need to log in in screen.

[18:24] *** SubStack joined
[18:24] *** veritos joined
[18:28] <fglock> I'm making a wishlist for next kp6 version

[18:29] <fglock> I'm trying to list features that may be delaying 6-on-6

[18:31] *** g0tchi joined
[18:31] *** g0tchi left
[18:31] <avar> ?eval 1

[18:31] <evalbot_r16126> 1

[18:32] <avar> ?eval my Str $str = "y hlo"; $str ~~ /^^(y) hlo/; $0 = "o"; $str

[18:32] <evalbot_r16126> Error: Can't modify constant item: VUndef

[18:32] <avar> ?eval my Str $str = "y hlo"; $str ~~ /$<x> := [(y)] hlo/; $0 = "o"; $str

[18:32] <evalbot_r16126> *** Cannot parse regex: $<x> := [(y)] hloâ¤*** Error: â¤Error: Can't modify constant item: VUndef

[18:32] <avar> hrmp

[18:35] <fglock> ?eval my Str $str = "y hlo"; $str ~~ /$<x> := [y] \s hlo/; $/<x>

[18:35] <evalbot_r16126> *** Cannot parse regex: $<x> := [y] \s hloâ¤*** Error: â¤\undef

[18:37] <fglock> it works here

[18:39] *** sapir joined
[18:42] *** jisom joined
[18:44] *** lisppaste3 joined
[18:50] *** geoffb joined
[18:56] *** devogon joined
[19:21] *** electrogeek joined
[19:37] *** Caleb1 joined
[19:37] *** Caleb1 left
[19:41] *** gnuzoo joined
[19:41] *** gnuzoo left
[19:44] *** fglock joined
[19:46] <fglock> I need help with a shell command; I'm trying to replace MiniPerl6 "::Obj(...)" with "Obj.new(...)"

[19:46] <fglock> find lib -name '*.pm' | xargs perl -pe 's/::(\w+)\(/$1.new(/g'

[19:47] <moritz> fglock: I think you need a -i.orig

[19:47] <[particle]> \.new\(

[19:47] <moritz> fglock: the way you do it the files don't change

[19:47] <[particle]> oops

[19:47] <moritz> [particle]: not in the replace part

[19:47] <[particle]> right

[19:48] <fglock> moritz: thanks!

[19:48] <moritz> did it work?

[19:49] <fglock> yes

[20:12] *** veritos joined
[20:13] *** zamolxes joined
[20:13] *** DHGE left
[20:15] *** rashakil joined
[20:48] *** fglock left
[20:57] *** nwc10 joined
[21:03] *** dduncan joined
[21:24] *** BooK joined
[21:24] *** jjore-w joined
[21:41] *** larsen_ joined
[21:51] *** Aankhen`` joined
[21:58] *** perlbot joined
[22:05] *** justatheory joined
[22:08] *** antrophos joined
[22:29] *** elmex joined
[22:59] *** mako132_ joined
[23:01] *** nperez joined
[23:08] *** buubot joined
[23:23] *** BooK_ joined
[23:25] *** Khisanth joined
[23:44] *** veritos joined
