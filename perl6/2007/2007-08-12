[00:01] *** kjwcode joined
[00:06] *** thoughtpolice joined
[00:13] *** kjwcode left
[00:36] *** BinGOs_ joined
[00:50] *** devogon left
[00:58] *** BinGOs left
[01:31] *** weinig is now known as weinig|food

[01:54] *** pro21ms4 joined
[02:11] *** Azure-BOT joined
[02:41] *** weinig|food is now known as weinig

[03:38] *** jisom left
[04:03] *** imperator joined
[04:19] *** jisom joined
[04:26] *** pro21ms4 left
[04:47] *** Schwern left
[04:51] *** jrockway left
[04:53] *** Schwern joined
[04:53] *** imperator left
[05:01] *** kanru left
[05:29] *** jrockway joined
[05:30] *** jisom left
[05:30] *** devogon joined
[05:33] *** kanru joined
[05:42] *** xinming left
[05:53] *** xinming joined
[06:10] *** penk left
[06:15] *** REPLeffect joined
[06:15] *** lumi joined
[06:43] *** BinGOs joined
[06:47] *** BinGOs_ left
[06:50] *** REPLeffect left
[06:58] *** Aankhen`` joined
[07:00] *** weinig left
[07:00] *** elmex joined
[07:02] *** dalek left
[07:02] *** dalek joined
[07:53] *** franck___ joined
[08:36] *** daxim_ joined
[08:50] *** kanru left
[08:50] *** daxim left
[09:12] *** AtomicStack joined
[09:20] *** BinGOs_ joined
[09:21] *** BinGOs left
[09:27] *** fridim joined
[09:33] *** DarkWolf84 joined
[09:37] *** Schwern left
[09:41] *** BinGOs_ is now known as BinGOs

[09:57] *** Eidolos_ joined
[10:00] *** chris2 joined
[10:07] *** Schwern joined
[10:08] *** Eidolos left
[10:08] *** Eidolos_ is now known as Eidolos

[10:25] *** fridim_ joined
[10:25] *** lidden left
[10:25] *** lidden joined
[10:26] *** lidden left
[10:26] *** lidden joined
[10:27] *** Schwern left
[10:32] *** pmurias joined
[10:33] <pmurias> hi

[10:33] <moritz_> hi

[10:36] *** nothingmuch joined
[10:40] *** rindolf joined
[10:42] *** fridim left
[10:42] <DarkWolf84> hi

[10:43] <DarkWolf84> IO.getpeername don't work

[10:43] <DarkWolf84> :(

[10:43] <moritz_> patch it ;)

[10:44] <DarkWolf84> It wil be dificult to write network test

[10:45] <DarkWolf84> It will*

[10:51] <DarkWolf84> I don't know wheter fork will work

[10:52] <DarkWolf84> I didn't tried it yet

[10:53] <moritz_> $ pugs -e 'if fork() { say "foo" } else { say "bar" }'

[10:53] <moritz_> bar

[10:53] <moritz_> foo

[10:53] <moritz_> looks good ;)

[10:54] <DarkWolf84> ok

[10:54] <DarkWolf84> maybe I have to try

[10:55] *** buetow joined
[10:57] *** tlb joined
[10:57] <moritz_> woo, but if you leave stray forked processes, you have to kill them manually ;)

[10:57] <pmurias> you plan to fork the test so as to have a server and a client?

[10:59] <DarkWolf84> I know

[10:59] <DarkWolf84> that is writen allready in perldoc

[10:59] <DarkWolf84> :)

[10:59] <DarkWolf84> yes

[11:00] <DarkWolf84> there is no other way

[11:01] <DarkWolf84> the only problem with fork will be windows

[11:01] <DarkWolf84> if fork emulation is not implemented

[11:05] *** kanru joined
[11:06] <pmurias> having the test server run on for example feather might be an option

[11:13] *** rindolf left
[11:16] <DarkWolf84> I think fork don't works too

[11:17] *** hkb_aw is now known as hakobe

[11:20] <DarkWolf84> Is the syntax different form perl5 for kill()

[11:32] <DarkWolf84> the mistake for fork is mine

[11:33] <DarkWolf84> :)

[11:33] <DarkWolf84> pid is 0 in the child process

[11:33] <DarkWolf84> not undef

[11:45] *** buetow left
[11:45] *** buetow joined
[11:58] <DarkWolf84> maybe it's more safe to test with real server

[12:10] *** Aankhen`` left
[12:15] *** fridim_ is now known as fridim

[12:16] <DarkWolf84> ?eval my $sock = connect('feather.perl6.nl', 80) // die "Can't connect feather.perl6.nl: $!"; say $sock.getpeername;

[12:16] <pugsbot_r17185> Error: Unsafe function 'connect' called under safe mode

[12:16] <DarkWolf84> ok

[12:17] <DarkWolf84> pmurias, thanks for the advice :)

[12:18] <DarkWolf84> that makes things simple

[12:22] <DarkWolf84> no test for IO at all?

[12:23] <DarkWolf84> found it

[12:23] <DarkWolf84> in builtins

[12:27] <DarkWolf84> ?eval $?OS

[12:27] <pugsbot_r17185> \"linux"

[12:27] *** poky left
[12:53] *** the_dormant joined
[12:56] <DarkWolf84> I think my test is near ready

[13:00] *** chris2 left
[13:00] *** pjcj joined
[13:02] *** pjcj_ left
[13:12] *** AtomicStack left
[13:22] <DarkWolf84> I have one question

[13:24] <DarkWolf84> Is it ok to write one test in a separate file?

[13:32] <DarkWolf84> I finished IO.getpeername test

[13:38] <pmurias> IMHO it's better to write a file for a one test then to put it in a wrong file

[13:38] <pmurias> if it makes sense to put other tests in that file later on i think it's ok

[13:39] *** rindolf joined
[13:43] *** Muixirt joined
[13:51] <pugs_svnbot> r17243 | darkwolf++ | Add test for IO.getpeername, need checking

[13:51] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17243

[13:51] <lambdabot> Title: Changeset 17243 - Pugs - Trac

[13:51] <DarkWolf84> small lag

[13:51] <DarkWolf84> :)

[14:12] *** Muixirt left
[14:58] *** rindolf left
[15:00] *** the_dormant left
[15:08] *** kcwu left
[15:09] *** Aankhen`` joined
[15:16] *** cognominal_ left
[15:24] <daxim_> I want to have an svk cheat sheet, if you could translate these handful of svn commands into svk, that would be cool       http://www.perlfoundation.org/perl5/index.cgi?svn_cheat_sheet

[15:24] <lambdabot> Title: SVN cheat sheet / Perl 5 Wiki

[15:27] <PerlJam> daxim_: most of those are exactly the same but you type "svk" instead of "svn"

[15:28] <PerlJam> daxim_: I don't think that svk does $keyword$ expansion though.

[15:28] <daxim_> that doesn't give me offline working

[15:29] <pmurias> you use *additional* commands for offline working

[15:29] <PerlJam> "svk push" and "svk pull" are your friends :)

[15:30] *** cognominal_ joined
[15:40] *** JarJarBi1ks joined
[15:40] *** chris2 joined
[15:43] <thoughtpolice> wee. i'm quite happy with the results of my irc bot. :)

[15:50] <pmurias> what does it do?

[15:51] *** JarJarBinks left
[15:52] <thoughtpolice> pmurias: right now it's kind of limited... i'm working on the 0.2 release, but the general idea is it's a tiny but extendable irc bot in haskell.

[15:53] <thoughtpolice> then again, I haven't exactly gone through any *huge* efforts to write plugins for it as of current, although I assume some lambdabot commands could be ported over without too much hassle.

[15:55] <thoughtpolice> plugins are compiled and loaded on startup rather than being statically built in (hs-plugins,) so you can make changes and just restart to see the effect. for the 0.2 release I'm going to work on having the ability to have the bot update plugins 'in-situ,' i.e. you can reload it as it's online.

[15:55] <thoughtpolice> i posted it to haskell-cafe but apparently it's of no interest or something. :(

[15:57] *** buetow left
[15:57] *** buetow joined
[16:11] *** cognominal_ left
[16:12] *** cognominal_ joined
[16:13] *** cognominal_ left
[16:15] *** tlb left
[16:20] *** iblechbot joined
[16:34] *** {cerri|nmap} is now known as cerridwen

[16:38] *** thoughtp1lice joined
[16:40] *** thoughtpolice left
[16:40] *** thoughtp1lice is now known as thoughtpolice

[16:42] *** the_dormant joined
[16:58] *** lisppaste3 left
[17:02] *** poky joined
[17:04] *** cognominal_ joined
[17:04] *** lisppaste3 joined
[17:10] *** DarkWolf84 left
[17:14] *** nowhere_man left
[17:23] *** the_dormant left
[17:35] *** xdg joined
[17:45] *** kcwu joined
[17:56] *** Limbic_Region joined
[17:57] *** Psyche^ joined
[18:05] *** revdiablo joined
[18:09] *** Patterner left
[18:09] *** Psyche^ is now known as Patterner

[18:25] *** IllvilJa joined
[18:33] *** the_dormant joined
[18:34] *** Muixirt joined
[18:35] *** thoughtp1lice joined
[18:40] *** kjwcode joined
[18:47] *** franck____ joined
[18:47] *** thoughtpolice left
[18:57] *** elmex left
[19:07] *** franck___ left
[19:13] *** Aankhen`` left
[19:21] *** jisom joined
[19:24] *** marmic left
[19:28] *** marmic joined
[19:30] *** chris2 left
[19:31] <pugs_svnbot> r17244 | pmurias++ | kp6: converted ->{_dispatch}() to dispatch() in emitted code

[19:31] <pugs_svnbot> diff: http://dev.pugscode.org/changeset/17244

[19:31] <lambdabot> Title: Changeset 17244 - Pugs - Trac

[19:32] *** chris2 joined
[19:34] *** dwave left
[19:35] *** thoughtp1lice left
[19:35] *** Eidolos_ joined
[19:37] *** Eidolos left
[19:50] *** daxim_ left
[19:51] *** Eidolos joined
[19:57] *** daxim joined
[19:57] *** Eidolos_ left
[20:04] *** weinig joined
[20:08] *** fglock_ joined
[20:11] *** the_dormant left
[20:12] *** Eidolos left
[20:13] *** the_dormant joined
[20:14] *** muixirt2 joined
[20:29] *** Muixirt left
[20:35] *** the_dormant left
[20:39] *** muixirt2 left
[20:40] <pmurias> fglock_: hi

[20:40] *** JarJarBinks joined
[20:40] <fglock_> hi pmurias

[20:41] *** cartman joined
[20:42] *** chris2 left
[20:42] * pmurias thought a bit about Captures & Signatures

[20:44] <pmurias> i think signatures will need to get a reference to the variables the need to bind

[20:45] *** kjwcode left
[20:46] <pmurias> shouldn't iS

[20:46] <pmurias> s/.*//

[20:46] <fglock_> I see signatures as data, which will be used by the CALL and APPLY methods

[20:46] <pmurias> methods of?

[20:47] <fglock_> Code.APPLY() uses Code.signature

[20:47] *** Blwood_ joined
[20:48] <fglock_> Code.APPLY( $capture )

[20:48] *** cartman left
[20:52] <fglock_> I think that, when we get the compile-time and runtime storage of multis set up, we'll have a better view of how the multi dispatcher should work

[20:52] <pmurias> i thought of it more like sub($a,$b,$c) {} being tranformed into sub($capture) {:($a,$b,$c).BIND($capture)}

[20:52] *** JarJarBi1ks left
[20:53] *** elmex joined
[20:55] *** Blwood left
[20:55] <fglock_> that's right - and at a  lower level, this is $sub.APPLY( $capture ) { ... }

[20:56] <fglock_> and then - dispatch( $sub 'APPLY', $capture )

[20:57] <pmurias> i grok that part

[20:58] *** Blwood joined
[20:59] <pmurias> what intrests me more is will the binding of arguments be done by the signature object or will code be emitted based on it

[21:00] <pmurias> e.g will sub ($a,$b) {} be emitted as sub($capture) {$a := $capture.positional[0];$b := $capture.positional[1]}? 

[21:02] <pmurias> http://moritz.faui2k3.org/irclog/out.pl?channel=perl6;date=2007-07-20#i_67188 might be of some interest to you

[21:02] <lambdabot> Title: IRC log for #perl6, 2007-07-20, http://tinyurl.com/27rhrm

[21:03] <fglock_> this is up to the optimizer and emitter; for example, v6.pm uses sub( $invocant, $arrayref, $hashref )

[21:04] <fglock_> looking

[21:05] *** Blwood_ left
[21:06] <pmurias> i know how to implement the dynamic way, but i think now that emitting code which does it is more better (faster and more portable)

[21:07] <pmurias> and avoid bootstrap problems

[21:07] *** Schwern joined
[21:07] *** theorbtwo left
[21:09] <fglock_> I think :($a,$b,$c).BIND($capture) is the no-premature-optimizations way to do it

[21:09] <fglock_> we can optimize the easy cases

[21:10] <pmurias> doing it dynamicly is not required by the spec (asked TimToady)

[21:11] <pmurias> .BIND is not required

[21:12] <pmurias> and defining .BIND without signatures would be hard

[21:14] <pmurias> got to sleep now as i go on a bicycle trip tommorow morning (back in a ~week)

[21:15] <pmurias> g'night

[21:15] *** pmurias left
[21:19] *** xdg left
[21:19] *** theorbtwo joined
[21:31] *** Schwern left
[21:33] *** Schwern joined
[21:34] *** buetow left
[21:35] *** buetow joined
[21:41] *** Blwood left
[21:49] *** jisom left
[21:51] *** dduncan joined
[21:54] *** dduncan left
[21:54] *** Blwood joined
[21:55] *** dduncan joined
[22:13] *** danga left
[22:16] *** BinGOs left
[22:18] *** iblechbot left
[22:21] *** BinGOs joined
[22:30] *** fridim left
[22:31] *** BinGOs_ joined
[22:32] *** Eidolos joined
[22:33] *** ozo left
[22:38] *** BinGOs left
[22:44] *** elmex left
[22:45] *** lumi left
[22:58] *** Blwood left
[23:05] *** Schwern left
[23:07] *** Schwern joined
[23:12] *** Schwern left
[23:17] *** ozo joined
[23:19] *** Debolaz left
[23:19] *** mj41_ joined
[23:22] *** clkao_ joined
[23:23] *** qmole left
[23:23] *** qmole joined
[23:25] *** Debolaz joined
[23:31] *** ozo left
[23:36] *** mj41 left
[23:53] *** fglock_ left
[23:58] *** devogon left
[23:59] *** buetow left
