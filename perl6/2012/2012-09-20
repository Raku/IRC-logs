[00:01] *** whiteknight joined
[00:01] *** yarp left
[00:14] *** jerome left
[00:17] *** dayangkun joined
[00:26] *** jerome joined
[00:26] *** Circlepuller joined
[00:27] *** MissingSemicolon joined
[00:29] *** Circlepuller__ left
[00:36] *** Circlepuller_ joined
[00:38] *** Circlepuller left
[00:43] *** Chillance left
[00:51] *** thou left
[00:57] *** benabik joined
[01:05] *** anuby joined
[01:12] *** jerome left
[01:17] *** hypolin joined
[01:17] *** colomon left
[01:19] *** colomon joined
[01:24] *** jerome joined
[01:30] *** baest left
[01:30] *** whiteknight left
[01:31] *** gootle joined
[01:34] *** baest joined
[01:45] *** FROGGS_ joined
[01:47] *** flightrecorder left
[01:48] *** FROGGS left
[01:48] *** flightrecorder joined
[02:01] *** fgomez left
[02:02] *** MikeFair_ joined
[02:03] *** gootle1 joined
[02:04] *** gootle left
[02:11] *** fgomez joined
[02:13] *** erkan left
[02:25] *** fgomez left
[02:37] *** gootle1 left
[02:42] *** fgomez joined
[02:42] *** wooden left
[02:42] *** Vlavv` left
[02:42] *** sftp left
[02:42] *** pmichaud left
[02:42] *** [Coke] left
[02:42] *** phenny left
[02:42] *** sftp joined
[02:48] *** wooden joined
[02:48] *** Vlavv` joined
[02:48] *** pmichaud joined
[02:48] *** [Coke] joined
[02:48] *** phenny joined
[02:57] *** orafu left
[02:58] *** orafu joined
[03:01] *** fgomez left
[03:02] *** gootle joined
[03:12] *** thou joined
[03:40] *** fgomez joined
[03:55] *** dayangkun left
[04:07] *** telex left
[04:15] *** telex joined
[04:24] *** satyavvd joined
[04:27] *** telex left
[04:32] *** Targen left
[04:34] *** jaldhar joined
[04:36] *** telex joined
[04:39] *** skids left
[04:46] *** wooden left
[04:52] *** thou left
[04:59] *** am0c joined
[05:06] *** kaleem joined
[05:09] *** wk__ left
[05:11] *** Targen joined
[05:12] *** eiro joined
[05:17] *** sirrobert left
[05:28] *** MissingSemicolon left
[05:30] *** wooden joined
[05:30] *** wooden left
[05:30] *** wooden joined
[05:30] <moritz> good morning

[05:32] <sorear> good morning moritz

[05:35] *** wooden left
[05:37] *** mucker joined
[05:39] *** sirrobert joined
[05:52] *** wooden joined
[05:52] *** wooden left
[05:52] *** wooden joined
[05:53] *** gootle1 joined
[05:53] *** gootle1 left
[05:53] *** gootle1 joined
[05:53] *** gootle left
[05:56] *** gootle1 left
[05:58] *** yarp joined
[06:03] *** wooden left
[06:17] <TimToady> it seems kinda silly that I'm using a big is_prime routine written in Perl 6 when libtommath implements Miller-Rabin in C..

[06:18] <TimToady> I'm thinking is_prime (or is-prime, or whatever) is something that should be provided as a built-in

[06:20] <TimToady> likewise there's an expmod routine in there that seems to not be visible from Perl

[06:23] *** FROGGS_ left
[06:24] *** wooden joined
[06:24] *** wooden left
[06:24] *** wooden joined
[06:24] <eiro> hello all

[06:25] <eiro> is there a way to introspect a perl6 grammar to build its AST ? (or something equivalent) 

[06:26] *** flightrecorder left
[06:27] <MikeFair_> eiro: I believe a Grammar has the capabilities you're looking for, but I'm not quite sure exactly what it is you're loking for

[06:28] <MikeFair_> (nor am I sure I even know how to code it once I do understand ;) )

[06:28] *** gootle joined
[06:29] <eiro> ok. ingy wrote an awesome piece of perl5 named pegex: it's a PEG parser with multilang emiter so you can write one PEG for python, perl5, javascript, ...

[06:30] <eiro> i wonder if perl6 is not a better tool for that (because of its native PEG support) 

[06:30] *** gootle1 joined
[06:30] *** gootle left
[06:31] *** wooden left
[06:31] <eiro> hmm.. just realized that i can ask on the list: this is a much better place 

[06:31] *** wooden joined
[06:31] *** wooden left
[06:31] *** wooden joined
[06:33] *** wk joined
[06:33] <diakopter> TimToady: sounds good to me

[06:35] *** gootle joined
[06:35] *** gootle1 left
[06:35] *** yarp_ joined
[06:35] *** gootle1 joined
[06:35] *** gootle left
[06:36] <dalek> specs: 5277fef | larry++ | S32-setting-library/Numeric.pod:

[06:36] <dalek> specs: Add expmod and is-prime as built-ins in Int

[06:36] <dalek> specs: review: https://github.com/perl6/specs/commit/5277fefed6

[06:37] *** gootle joined
[06:37] *** gootle1 left
[06:37] *** yarp left
[06:38] *** yarp_ is now known as yarp

[06:38] <diakopter> std: 3.'is-prime?'()

[06:38] <p6eval> std 77327a4: OUTPUT«ok 00:00 41m␤»

[06:38] <diakopter> std: 3.'is-prime?'

[06:38] <p6eval> std 77327a4: OUTPUT«===SORRY!===␤Unsupported use of . to concatenate strings or to call a quoted method; in Perl 6 please use ~ to concatenate, or if you meant to call a quoted method, please supply the required parentheses at /tmp/z_7V5RQAN6 line 1:␤------> 3.'is…

[06:42] *** gootle1 joined
[06:42] *** gootle left
[06:42] *** gootle1 left
[06:42] *** gootle2 joined
[06:42] *** gootle2 left
[06:43] <MikeFair_> eiro: Sorry, I'm not the right person for that question, but Perl6 Grammars are extraordinary and have a combination of hierarchical nested match rules and automated calling of methods as the matches are found.

[06:44] <MikeFair_> Parrot uses P6 Grammars specifically for writing interpretters to all kinds of languages.

[06:49] <eiro> MikeFair_, i'm aware of that! that's why i ask :)

[06:54] <masak> morning, #perl6

[06:55] <sorear> morning, masak

[06:55] <masak> eiro: I think PEG has been described as "the closest thing to what Perl 6 has"; i.e. it's not identical, but it's a good first approximation if you want to understand it.

[06:59] <eiro> masak, you mean PEGex ? isn't PEG a general concept ? 

[07:05] *** erkan joined
[07:10] *** fhelmberger joined
[07:13] *** brrt joined
[07:18] *** cibs joined
[07:18] <tadzik> good morning #perl6

[07:18] <moritz> \o

[07:20] *** gootle joined
[07:20] *** flightrecorder joined
[07:22] <sorear> eiro: https://en.wikipedia.org/wiki/Parsing_expression_grammar

[07:24] <Woodi> morning everyone

[07:24] <eiro> sorear, yep. that's why i don't understand the answer masak gave. 

[07:25] <eiro> don't worry: i'll figure out

[07:25] *** wooden left
[07:28] <Woodi> I was thinking about MOP and security a little... MOP is kind of like assembly language, can mess with (near?) everything inside... so imagine app with GUI written in assembler - implementing into it "sandbox" functionality would be for volontiers :)

[07:29] <diakopter> eiro: masak was saying PEG helps to understand P6, not the other way around

[07:29] <Woodi> so maybe maybe security should be written close to GUI/input ?

[07:32] <Woodi> module with "checks" for input, using regex/grammar or even MOP-y based added behaviours for get/lines/recv ? module used with "use", kind of -T from v5

[07:32] <eiro> ohh sure! but that's not the point! i want to write a lib that parses a text and i want it at least in perl5, perl6, python. as i will use a PEG and as perl6 is a target, i thought pegex wasn't optimal for my problem.

[07:32] <sorear> Woodi: implementing sandbox is near impossible for exactly those reasons.  better to implement it at a lower level, restrict what the application can do

[07:32] <eiro> my dream was: write in perl6, use in perl5 and python 

[07:32] <eiro> (in perl6 as well)

[07:32] <Woodi> sorear: that's my point

[07:33] <Su-Shee> Woodi: that would be a horrible design. security/grants/permissions - all these decisions should already been made down below before you even display anything remotely interface-ish. 

[07:33] <sorear> eiro: talk to ingy, that's what pegex and c'dent is for

[07:33] <Woodi> no sandbox so something close-to-GUI can be used. kind of good practice

[07:33] <diakopter> sorear: I guess you didn't see eiro's original question

[07:33] <diakopter> 1.08 hours ago

[07:34] <diakopter> :)

[07:34] <Woodi> Su-Shee: why horrible before ever designed ?

[07:34] <eiro> sorear, hehe. and that was my first question: why pegex exists when he's aware of perl6

[07:34] <eiro> there must be a technical issue i don't understand 

[07:34] <eiro> diakopter++ 

[07:35] <Woodi> I do not said "do sandbox-in-high-lvl" but "do-filtering-with-module"

[07:35] <diakopter> eiro: well, the p6 compilers don't compile to p5/python

[07:35] *** wooden joined
[07:36] * Woodi rereads and what hi sayd could be read that way... sorry

[07:36] <eiro> diakopter, not even just the grammar ? no way to  introspect it?

[07:36] <diakopter> (though STD/viv do of course, but it's just for the parser. So I guess if you wrote viv backends for python/etc you could get what you want)

[07:37] <Su-Shee> Woodi: because this is a well-known question which has been discussed in detail at least since 1978. A GUI is an information editing/displaying engine, nothing more. it doesn't decide on anything security-like. the security on the contrary decides what an interface is allowed to show. and it does just that: "show stuff" AFTER the decision is done in lower levels of your software. 

[07:37] <Su-Shee> Woodi: read the orginal smalltalk model-view-controler paper. 

[07:37] <Su-Shee> +l

[07:37] <eiro> Grammar.new( 'rx.p6' ).as_yaml.say 

[07:37] <diakopter> eiro: nqp provides a way to supply your own actions to a grammar; I don't know if rakudo does

[07:38] <eiro> argghh... i was affraid of that :) ENOTIME for the moment but i need the result 

[07:38] <eiro> so yes: i'll fallback to pegex

[07:38] <Woodi> I was proposing something close to GUI not GUI with sandbox

[07:38] *** marmay_ joined
[07:38] *** leont joined
[07:38] <eiro> thanks all for answers 

[07:38] <Su-Shee> Woodi: read up on the problem. 

[07:39] <Woodi> I know MVC, controler need to do filtering - preferably by "use SomeSecModule"

[07:44] *** FROGGS joined
[08:00] *** kurahaupo left
[08:11] <arnsholt> diakopter: The NQP actions stuff is the same as in Perl 6

[08:13] <diakopter> k

[08:13] *** wamba joined
[08:19] <arnsholt> eiro: There's no easy way to introspect grammars (assuming what you want is things like "which subrules does this rule call")

[08:20] <arnsholt> And, given that many of those things can be determined at runtime by things like <$subrule> and code interpolation, it's not really possible in the general case

[08:20] *** Psyche^ joined
[08:22] *** kresike joined
[08:22] <kresike> good morning all you happy perl6 people

[08:23] <masak> morning, kresike.

[08:23] *** Patterner left
[08:23] *** Psyche^ is now known as Patterner

[08:23] <kresike> hello masak o/

[08:24] <masak> eiro: I just meant I don't think it captures the whole truth that Perl 6 implements a PEG. but I might be wrong on that, and it might be subject to interpretation.

[08:25] *** wooden left
[08:26] <brrt> morning kresike

[08:26] <kresike> hello brrt o/

[08:30] *** wooden joined
[08:30] *** wooden left
[08:30] *** wooden joined
[08:31] <brrt> for those who care, the fix in parrot 4.8.0 to prevent parrot from dying twice, does not prevent parrot from dying twice, it allows it :-)

[08:32] <brrt> if an embedding application has multiple interpreters, and one of them dies, it used to be the case that the second interpreter dying would not be reported to the embedding application

[08:32] <brrt> this is now fixed

[08:33] <brrt> thus allowing you to do something useful with the resulting exception object, twice

[08:33] <brrt> (or more than once, anyway)

[08:33] <eiro> arnsholt, masak thanks for those answers. that was my guess but perl6 is so astonishing i prefer don't bet before asking 

[08:47] *** dakkar joined
[09:01] *** yves_ joined
[09:04] *** marmay_ left
[09:09] <dalek> mu: 53e9d0d | (Konrad Borowski)++ | docs/feather/~/index.html:

[09:09] <dalek> mu: Update http://perlcabal.org/~/

[09:09] <dalek> mu: review: https://github.com/perl6/mu/commit/53e9d0d5c4

[09:13] <masak> I notice today is Release Day and we don't have a release manager.

[09:13] <masak> I volunteer.

[09:14] <masak> (unless someone else wants to do it more than I do, in which case I gladly step down) :)

[09:23] <moritz> masak: go for it

[09:23] * masak edits the release guide

[09:27] <dalek> rakudo/nom: 69910dc | masak++ | docs/release_guide.pod:

[09:27] <dalek> rakudo/nom: [docs/release_guide.pod] I'll do September

[09:27] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/69910dc761

[09:27] <masak> I'll get to it this evening.

[09:27] <masak> in the meanwhile, please think of an appropriate release name ;) kthx

[09:31] <dalek> rakudo/nom: 94f900b | moritz++ | docs/release_guide.pod:

[09:31] <dalek> rakudo/nom: fix a typo

[09:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/94f900b3c8

[09:31] <moritz> ah, that's usually the hardest part of doing a release :-)

[09:31] <moritz> the release name

[09:31] <moritz> you could always name it 'Perl', you know :-)

[09:32] *** mucker left
[09:33] <masak> :D

[09:34] <wk> Ooh, i had not noticed, that we had release named Tallinn

[09:34] <wk> thank you, Masak

[09:35] <masak> wk: you're welcome. and thank you for being so awesome, Tallinn. :)

[09:37] <wk> masak: when you were here last time?

[09:38] <masak> after YAPC::Europe last year.

[09:38] <masak> wk: you were just celebrating Estonia's second independence! in a big park in the outskirts of Tallinn.

[09:38] <masak> a huge crowd. thousands of white balloons. awesome.

[09:39] <wk> masak: 21th August this year?

[09:40] <masak> no, 2011.

[09:40] <wk> masak: ok, 20th anniversary, after YAPC in Riga

[09:43] <masak> aye.

[09:44] <masak> jnthn and I went north up to Tallinn, and flew back home from there.

[09:44] <masak> I have relatives in Tallinn. we visited them.

[09:46] <masak> moritz: I'm not happy with the intermediate state unquotes are in in the nom branch. pros and cons of reverting the latest changes and relegating them to a branch?

[09:49] *** fhelmberger left
[09:55] <moritz> masak: what were the latest changes?

[09:56] <moritz> the typed exceptions for splice typecheck failures?

[09:56] <masak> oh, I don't mind those.

[09:56] <moritz> keep it

[09:56] *** leont left
[09:56] <masak> I'm thinking more about allowing unquotes at all while giving them the wrong scoping.

[09:56] <moritz> nobody uses macros yet, and we know they are experimental

[09:56] <moritz> lunch&

[09:57] <masak> ok, good.

[09:57] <masak> I'll leave them.

[09:57] <masak> I'm starting to have a plan for how to do them right... but $work is sucking up unusually many tuits right now.

[10:01] *** wamba left
[10:07] *** hypolin left
[10:12] *** wamba joined
[10:13] *** [hds] joined
[10:13] *** [hds] left
[10:22] *** anuby left
[10:24] *** yarp left
[10:29] *** brrt left
[10:38] *** kurahaupo joined
[11:05] *** Su-Shee_ joined
[11:09] *** Su-Shee left
[11:09] *** kurahaupo left
[11:10] *** gootle left
[11:12] *** mucker joined
[11:12] *** Su-Shee_ is now known as Su-Shee

[11:15] *** gootle joined
[11:17] *** fhelmberger joined
[11:20] *** gootle left
[11:21] <jnthn> +1 to leave macros in master

[11:21] <jnthn> *no* feature tends to be spot on during its first iteration

[11:21] <jnthn> Well, maybe some of the ones Pm puts in are. But none of mine are. :D

[11:22] <jnthn> s/master/nom, our spiritual master/

[11:22] *** fhelmberger_ joined
[11:23] *** fgomez left
[11:26] *** fhelmberger left
[11:27] <moritz> jnthn: masak and me also tend to find bugs in the features that pm implements :-)

[11:29] <masak> oh, don't worry. we do.

[11:29] <masak> the best Pm bug that I've found has a long ticket on RT. I'm not sure it's resolved yet, actually.

[11:30] <masak> it was about a leaky optimization.

[11:30] <jnthn> nothing beats comet and snowman bug though :P

[11:32] *** fhelmberger joined
[11:33] *** brrt joined
[11:34] *** fhelmberger_ left
[11:36] <moritz> .oO( double bacon bug! )

[11:37] <tadzik> oh yes

[11:37] <jnthn> that was also pretty good :)

[11:39] <jnthn> My students are currently writing a reverse polish evaluator in C#. Who can write one in Perl 6 that fits in a p6eval line? :)

[11:41] <masak> what should it contain? numbers, + - * / ?

[11:41] <jnthn> right

[11:41] <tadzik> p6eval: given '22+3* { my@s; for .comb { if $_ ~~ /\d/ { @s.push($_) } else { @s.push(eval "{@s.pop} $_ {@s.pop}}") } } say @s.perl }

[11:41] <tadzik> r: given '22+3* { my@s; for .comb { if $_ ~~ /\d/ { @s.push($_) } else { @s.push(eval "{@s.pop} $_ {@s.pop}}") } } say @s.perl }

[11:41] <p6eval> rakudo 94f900: OUTPUT«===SORRY!===␤Confused␤at /tmp/2Z2RtLYGi7:1␤»

[11:41] <tadzik> dang

[11:42] <tadzik> r: given '22+3*' { my@s; for .comb { if $_ ~~ /\d/ { @s.push($_) } else { @s.push(eval "{@s.pop} $_ {@s.pop}}") } } say @s.perl }

[11:42] <p6eval> rakudo 94f900: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2, near "for .comb "␤»

[11:43] <tadzik> yay

[11:43] <tadzik> r: given '22+3*' { my@s; for .comb { if $_ ~~ /\d/ { @s.push($_) } else { @s.push(eval "{@s.pop} $_ {@s.pop}") } } say @s.perl }

[11:43] <moritz> r: $_ = '22+3*'; my @s; for .comb { if m/\d/ { @s.push: $_ } else { @s.push: eval "{@s.pop} $_ {@s.pop}" } }

[11:43] <p6eval> rakudo 94f900: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2, near "for .comb "␤»

[11:43] <p6eval> rakudo 94f900:  ( no output )

[11:43] <tadzik> r: given '22+3*' { my@s; for $_.comb { if $_ ~~ /\d/ { @s.push($_) } else { @s.push(eval "{@s.pop} $_ {@s.pop}") } } say @s.perl }

[11:43] <p6eval> rakudo 94f900: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2, near "for $_.com"␤»

[11:43] <moritz> r: $_ = '22+3*'; my @s; for .comb { if m/\d/ { @s.push: $_ } else { @s.push: eval "{@s.pop} $_ {@s.pop}" } }; say @s[0]

[11:43] <p6eval> rakudo 94f900: OUTPUT«12␤»

[11:44] <moritz> there you go

[11:44] <tadzik> nice

[11:44] <moritz> though tadzik++ did all the hard work :-)

[11:44] <tadzik> and all the syntax errors :P

[11:45] *** satyavvd left
[11:45] <masak> hm, I would've thought '22' would mean 22, not two 2s :)

[11:46] * masak is definitely not having sour grapes because he didn't get there first

[11:46] <tadzik> masak: \details, \details

[11:49] <masak> 5~:P

[11:49] <masak> :P

[11:50] *** yarp joined
[11:50] <tadzik> r: given '33 22+3*' { my@s; for $_.comb(/\d+|\D/) { if $_ ~~ /\d/ { @s.push($_) } else { @s.push(eval "{@s.pop} $_ {@s.pop}") } } say @s.perl }

[11:50] <p6eval> rakudo 94f900: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2, near "for $_.com"␤»

[11:50] <tadzik> dang

[11:50] <tadzik> r: $_ = '33 22+3*'; my @s; for .comb(/\d+|\D/) { if m/\d/ { @s.push: $_ } else { @s.push: eval "{@s.pop} $_ {@s.pop}" } }; say @s[0]

[11:50] <p6eval> rakudo 94f900: OUTPUT«Element popped from empty list␤  in method Str at src/gen/CORE.setting:9842␤  in method Stringy at src/gen/CORE.setting:753␤  in block  at /tmp/I2DL11wU5I:1␤  in method reify at src/gen/CORE.setting:5217␤  in method reify at src/gen/CORE.setting:5119␤  in method re…

[11:50] <tadzik> I'll just get back to work ;)

[11:53] *** am0c left
[11:55] <moritz> r: $_ = '22+3*'; my @s; for .comb(/\d+ | <[+*/\-]> /) { if m/\d/  { @s.push: $_ } else { @s.push: eval "{@s.pop} $_ {@s.pop}" } }

[11:55] <p6eval> rakudo 94f900: OUTPUT«Element popped from empty list␤  in method Str at src/gen/CORE.setting:9842␤  in method Stringy at src/gen/CORE.setting:753␤  in block  at /tmp/5VHApSl8oW:1␤  in method reify at src/gen/CORE.setting:5217␤  in method reify at src/gen/CORE.setting:5119␤  in method re…

[11:55] <moritz> the problem with tadzik's code is that \D matches the whitespace too

[11:55] <tadzik> ah

[11:55] *** gongyiliao left
[11:55] <tadzik> troo

[11:55] <tadzik> r: $_ = '33 22+3*'; my @s; for .comb(/\d+|\w/) { if m/\d/ { @s.push: $_ } else { @s.push: eval "{@s.pop} $_ {@s.pop}" } }; say @s[0] #pleasepleaseplease

[11:55] <p6eval> rakudo 94f900: OUTPUT«33␤»

[11:55] <tadzik> naah

[11:57] *** JimmyZ joined
[12:00] <Timbus> r: $_ = '33 22+3*'; my @s; for .comb(/\d+|\S/) { if m/\d/ { @s.push: $_ } else { @s.push: eval "{@s.pop} $_ {@s.pop}" } }; say @s[0]

[12:00] <p6eval> rakudo 94f900: OUTPUT«165␤»

[12:03] <moritz> \S is good thinking

[12:09] <moritz> a cow-orker presented me an internal gitlab installation (open source subset-clone of github). I found a bug in the first 3 minutes :-)

[12:10] <moritz> (I pushed a project without a master branch; gitlab didn't cope with that. It has been fixed upstream yesterday)

[12:11] <jnthn> r: sub rpn($s) { my @s; @s.push(/\d+/ ?? +$_ !! ::("&infix:<$_>")(@s.pop, @s.pop)) for $s.words; @s[0] }; say rpn '5 2 + 3 *'

[12:11] <p6eval> rakudo 94f900: OUTPUT«21␤»

[12:11] <tadzik> nice

[12:12] <jnthn> coffee and cake break! :)

[12:14] * colomon finally has a Linux which can run Niecza!  o/

[12:14] <Timbus> ::("&infix:<$_>")

[12:15] <Timbus> well thats just freaking awesome

[12:17] * moritz didn't use .words because it requires ws around ops

[12:19] <masak> moritz: maybe .comb can be used to split out ops from runs of digits? / \d+ | <[+-*/]> /

[12:22] <moritz> masak: that's what the \d+ | \S  reges by Timbus++ did

[12:25] <masak> oh!

[12:25] <masak> that's what I get from backlogging partially.

[12:25] <masak> yeah, probably better to \S and then default and error out on something unknown.

[12:34] <masak> which git hooks are connected with the Rakudo repository?

[12:34] <masak> does Niecza have any git hooks?

[12:35] <moritz> both have dalek push hooks

[12:36] <masak> I guess those hooks sit over at Github.

[12:38] <moritz> yes

[12:38] <moritz> masak: any particular reason for asking?

[12:41] * [Coke] yawns.

[12:47] *** spider-mario joined
[12:49] <masak> moritz: yes. the thing at $dayjob that's taking up my time right now is constructing a Git course. I'm looking for real-world examples of everything between heaven and earth (including hooks), that I can use in the course material.

[12:51] <moritz> masak: $work has a git hook that disallows non-fast-forward pushes

[12:51] *** yarp left
[12:51] <moritz> masak: and disallows deleting of several branches (master, dev, bugfix, next)

[12:52] * masak likes is-prime, but votes for the $tries parameter to be named, not positional

[12:52] <masak> is-prime( :tries(100) ) reads better than is-prime(100)

[12:53] <masak> moritz: both of those use cases are nice. thank you.

[12:57] <JimmyZ> Is there a usecase for is-prime?

[12:58] <masak> JimmyZ: my guess is that TimToady has encountered use cases for both it and expmod during his adventures in RC-land.

[12:58] <JimmyZ> RC-land?

[12:59] <moritz> rosettacode

[12:59] <moritz> though you need it for project euler too :-)

[13:00] *** wamba left
[13:01] <JimmyZ> r: my $r = 'a'; my $b = 'r'; say $$$$b

[13:01] <p6eval> rakudo 94f900: OUTPUT«r␤»

[13:02] <masak> that's a very rich variable.

[13:02] <masak> maybe even part of the 1%.

[13:04] *** PacoAir joined
[13:04] <JimmyZ> Is there a way something like $$b to get $r

[13:05] * [Coke] wonders if is-prime would be core or modulastic.

[13:06] <masak> [Coke]: well, it's core now.

[13:06] <masak> by spec.

[13:07] <[Coke]> That seems crazy to me.

[13:07] <JimmyZ> r: my $r = 'a'; my $b = 'r'; say eval "\$$b"

[13:07] <p6eval> rakudo 94f900: OUTPUT«a␤»

[13:08] <masak> r: my $r = 'a'; say $::("r")

[13:08] <p6eval> rakudo 94f900: OUTPUT«a␤»

[13:08] <masak> r: my $r = 'a'; my $b = 'r'; say $::($b)

[13:08] <[Coke]> especially if the answer is "it depends".

[13:08] <p6eval> rakudo 94f900: OUTPUT«a␤»

[13:08] <JimmyZ> nice, that's what I want

[13:09] <masak> [Coke]: I don't know enough about tht algorithm to agree or disagree.

[13:09] <moritz> determining primality is one of these things where there's no one good solution yet, and research ongoing

[13:10] <moritz> putting something in core for that seems questionable

[13:10] <moritz> though I understand the motivation behind it

[13:10] <[Coke]> what is the motivation?

[13:13] <moritz> more elegant rosettacode solutions

[13:13] <masak> I always thought a constant list `primes` would go in before `&is-prime`, for some reason.

[13:13] <moritz> well, generating a list of primes is even more difficult than &is-prime

[13:14] <PerlJam> not if it's primes-less-than-1000  or so  :)

[13:14] <PerlJam> (good morning btw)

[13:15] <moritz> good morning PerlJam 

[13:15] <PerlJam> even if it's not primes-less-than-1000, it's a one-time cost to generate them and store them.   Each release of Perl 6 could update that list  :)

[13:16] *** wk left
[13:16] * moritz slaps PerlJam 

[13:17] *** benabik left
[13:17] <masak> "pull yourself together!"

[13:17] * PerlJam hugs moritz *hard*

[13:18] <masak> there aare not many things you get slapped for on #perl6... but apparently joking about lists of primes is one :P

[13:18] *** PacoAir left
[13:18] *** atrodo joined
[13:18] *** PacoAir joined
[13:25] *** gongyiliao joined
[13:25] <jnthn> .oO( PerlJam's idea shows he sure ain't in his prime on a morning... )

[13:25] <PerlJam> :-P

[13:27] <sirrobert> could just use an Acme::Primes module =)  import a big list of primes if you need them.

[13:28] <PerlJam> Though, I also question TimToady's judgement in naming ... "is-prime" contains far too much certitude for a probabalistic test.   Perhaps it should be called "maybe-prime" and return a confidence as well as a boolean 

[13:29] <sirrobert> sub maybe-prime { return True };

[13:30] <brrt> sub maybe-prime { return True, 0.1 }

[13:30] <brrt> or what is the ratio of prime numbers to non-prime-numbers?

[13:30] <moritz> depends on how far up you go

[13:30] <sirrobert> =)

[13:31] <hoelzro> 1-10 it's 40% =)

[13:31] <hoelzro> 1-7 it's 4/7

[13:31] <sirrobert> http://primes.utm.edu/howmany.shtml

[13:32] *** GlitchMr joined
[13:32] *** skids joined
[13:32] <masak> probably-prime

[13:32] <masak> most-likely-prime

[13:33] <masak> i-poked-it-it-is-prime

[13:33] <hoelzro> trust-me-its-prime

[13:33] <sirrobert> odds-of-primacy-are-greater-than-80-percent

[13:33] <tadzik> masak++ # fotc reference

[13:33] <moritz> here's-my-prime-number-mr-crazy

[13:33] * masak knew tadzik would like it :)

[13:33] <jnthn> primeval # 'cus it evaluates whether it could be a prime

[13:34] <tadzik> I started my morning with Business Time

[13:34] <masak> tadzik: TMI

[13:34] <tadzik> ...if you know, what I mean :P

[13:34] <tadzik> I just meant the song!

[13:34] <tadzik> you insensitive clod :P

[13:34] <masak> :P

[13:35] * masak decommutes

[13:48] *** am0c joined
[13:51] <[Coke]> it is somewhat depressing to just be getting started on the real work of the day and having people heading out. :)

[13:52] <jnthn> [Coke]: Move west! :P

[13:52] <jnthn> er, dammit

[13:52] <jnthn> Move east!

[13:55] <moritz> or move far enough west :-)

[13:57] <dalek> doc: a6f3177 | (Felix Herrmann)++ | lib/Int.pod:

[13:57] <dalek> doc: [Int] add is-prime and expmod

[13:57] <dalek> doc: review: https://github.com/perl6/doc/commit/a6f3177924

[13:59] *** flightrecorder left
[14:00] *** pmurias joined
[14:01] <pmurias> jnthn: what does http://pastie.org/4760291

[14:01] *** colomon left
[14:01] <pmurias> mean?

[14:01] *** flightrecorder joined
[14:01] *** FROGGS left
[14:01] *** thou joined
[14:02] <pmurias> jnthn: I'm using classes (in to different files, one used from the other) not knowhows

[14:02] *** stopbit joined
[14:03] <pmurias> jnthn: putting them in a single file "fixed" the problem

[14:08] *** wamba joined
[14:11] *** kaleem left
[14:14] *** FROGGS joined
[14:14] *** thou left
[14:19] *** colomon joined
[14:21] *** wamba left
[14:25] *** benabik joined
[14:28] *** leprevost joined
[14:30] *** wamba joined
[14:36] *** kaare_ joined
[14:41] *** thou joined
[14:42] <timotimo> Cannot add tokens of category 'postcircumfix'   -  but i want my .o( ) postcircumfix operator! for when i want to make my variables think stuff :(

[14:44] <masak> our implementors are currently busy. thank you for waiting.

[14:46] <timotimo> r: multi infix:<.oO>($a, $b) { $a }; my $a = 10; say ($a .oO "I should see if i'm an odd number") mod 2 == 0;

[14:46] <p6eval> rakudo 94f900: OUTPUT«True␤»

[14:46] <timotimo> i think that's cute

[14:49] <timotimo> .o(actually, s/odd/even/ or s/0/1/ ...

[14:49] <timotimo> shame on me!)

[14:50] <masak> r: my $a = 10; say $a %% 2

[14:50] <p6eval> rakudo 94f900: OUTPUT«True␤»

[14:50] <timotimo> of course there's an operator for that :S

[14:50] <masak> timotimo: also, don't use infix:<mod> until you've read up on it in the manual. ;)

[14:50] <masak> it... may not do what you think.

[14:52] *** benabik_ joined
[14:53] *** JimmyZ left
[14:55] *** benabik left
[14:55] *** benabik_ is now known as benabik

[15:00] *** benabik_ joined
[15:01] *** Timbus left
[15:02] *** Timbus joined
[15:04] *** sqirrel joined
[15:04] *** benabik left
[15:04] *** benabik_ is now known as benabik

[15:08] <TimToady> masak: I don't think is-prime is terribly misnamed when the default number of tries reduces the probability of error to 4⁻¹⁰⁰

[15:09] *** yarp joined
[15:10] <masak> yeah. people are a little too wary of probabilistic algorithms sometimes.

[15:10] <masak> TimToady: how fast is it to make 100 trials?

[15:10] <TimToady> not so fast that one isn't tempted to reduce the number :)

[15:10] <PerlJam> masak: "God does not play dice"

[15:11] <skids> r: multi postfix:<ȯO> (\a) { sub { "{ \a } thinks $^t".say } }; my $a = 10; $aȯO("must find a better nonperiod period"); #for timotimo

[15:11] <p6eval> rakudo 94f900: OUTPUT«===SORRY!===␤Variable $aȯO is not declared␤at /tmp/_AyJQWrmTJ:1␤»

[15:11] <skids> whoops.

[15:11] <TimToady> but then if you reduce the number of tries, you supposedly have at least read the documentation for what the argument does

[15:11] <TimToady> sometimes a rough idea of primality is all you need

[15:11] <masak> PerlJam: not a very apt quote, since scientific consensus seems to have landed very much against Einstein on that.

[15:11] <skids> r: multi postfix:<…O> (\a) { sub { "{ \a } thinks $^t".say } }; my $a = 10; $a…O("must find a better nonperiod period"); #for timotimo

[15:11] <p6eval> rakudo 94f900: OUTPUT«10 thinks must find a better nonperiod period␤»

[15:12] <masak> TimToady: how about the argument that $tries should be made :$tries ?

[15:12] <PerlJam> masak: I still can't think of a better person to emulate :)

[15:13] <TimToady> the run time also depends on the number in question, since modular exponentiate is iterative

[15:13] <masak> PerlJam: you should apply for a job at a patent office, then.

[15:13] <masak> TimToady: I suspected that.

[15:13] <TimToady> *nentiation

[15:13] <PerlJam> (at least as far as thinking about things goes ... his personal life wasn't much in the way things to emulate)

[15:13] <TimToady> in http://rosettacode.org/wiki/Find_largest_left_truncatable_prime_in_a_given_base#Perl_6 I'm only using *one* try

[15:14] <PerlJam> masak: I'm not swiss ;)

[15:14] <TimToady> (for the big numbers)

[15:14] <TimToady> because for some reason the actual problem seems to not amplify mistakes

[15:15] <timotimo> when the chance of the algorithm being wrong is lower than the chance of getting hit by a comet, then i say: good enough

[15:15] <TimToady> and just checking a few candidates at the end is pretty certain to find a real solution

[15:15] <TimToady> well, I use 100 tries for the initial seeding and for the final check of all the truncated primes

[15:16] *** Patterner left
[15:18] <TimToady> I think the reason it works is because choosing a composite in place of a prime does not confer any advantage over its "children" as its generating longer candidates, so the list of final candidates tends to contain largely unrelated candidates of similar length

[15:18] <masak> timotimo: or, more importantly, lower than a stray cosmic ray hitting the bit representing the boolean result and flipping it.

[15:18] <TimToady> the actual solution is guaranteed to be generated, and the only uncertainty is whether we actually throw it away by not including it in the list of finalists for strict checking

[15:19] *** yarp left
[15:19] <TimToady> anyway, it seems to generate correct results up through base 17

[15:20] *** spider-mario left
[15:20] <TimToady> the base 18 I was running earlier blew up mono; I'm running it again to see if that was a fluke

[15:21] <TimToady> I'd run it in rakudo, but I'm waiting for is-prime to use the version from libtommath before I attempt that

[15:21] *** spider-mario joined
[15:21] <skids> masak++ lol.

[15:21] <TimToady> the current Perl-6-based is-prime in rakudo is too slow to be practical for base 18

[15:22] *** wtw left
[15:22] <TimToady> it already takes several days of CPU time on my "supercomputer" in mono, and rakudo runs the algorithm slower

[15:23] <jnthn> decomute &

[15:23] <TimToady> I could run it about 4 or 5 times faster with real parallel hypers...

[15:28] *** flussence left
[15:28] *** flussence joined
[15:29] <kresike> bye all

[15:29] *** kresike left
[15:32] <timotimo> there's lots and lots of items on the todo list before parallel hypers hit rakudo or niecza?

[15:32] * masak .oO( depends if we do things in order on the todo list ) :P

[15:32] <flussence> .oO( oh cool, that's the first time I've noticed 200+ users here. )

[15:33] <masak> flussence: I count 199 nicks in here.

[15:33] <masak> well, irssi does.

[15:33] <PerlJam> maybe flussence sees some invisible users that we don't

[15:33] <flussence> maybe my irssi's broken :)

[15:34] * masak .oO( I see dead nicks )

[15:35] <timotimo> masak: well, that's true. but there's a little bit of DAG going on there, too, isn't there?

[15:35] <TimToady> actually, the RC algorithm doesn't even need hyper, race would be good enough, since we don't care about the order of results, since each iteration is just a set of numbers

[15:38] <colomon> TimToady: what brought on is-prime?

[15:38] <TimToady> http://rosettacode.org/wiki/Find_largest_left_truncatable_prime_in_a_given_base#Perl_6

[15:38] <TimToady> and the fact that libtommath already has one :)

[15:38] <masak> timotimo: well, yes. real hyper ops are probably blocking on a more solidly implemented concurrency model.

[15:40] *** estrabd joined
[15:40] *** estrabd left
[15:40] <timotimo> i wonder why there's no syntax highlighting in that code example. i seem to recall seeing syntax highlighting for perl6 on other pages of that wiki

[15:40] <timotimo> or maybe i've hallucinated that

[15:41] *** estrabd joined
[15:41] <TimToady> no, it seems to be broken there, but all my css from RC seems hosed at the moment

[15:43] <TimToady> I cleared my browser cache, and now it's highlighting correctly

[15:45] <timotimo> indeed it is

[15:46] *** fhelmberger left
[15:46] <flussence> odd, that's the first time I've seen p6 syntax-highlighted better than another language in one place...

[15:47] <timotimo> pow' is a poor choice for that silly syntax highlighter

[15:47] <timotimo> as is n'

[15:57] *** thou left
[16:00] *** brrt left
[16:00] *** birdwindupbird joined
[16:02] *** birdwindupbird left
[16:02] *** birdwindupbird joined
[16:03] <TimToady> When all you have is a machine shop, everything starts to look like it wants a custom tool.

[16:05] <TimToady> I'm referring to the leap from BUILD to MOP to grammar mod at http://irclog.perlgeek.de/perl6/2012-09-19#i_6002309

[16:05] <TimToady> when probably all you need is a function that does what the default BUILD does, callable from your BUILD

[16:06] <pmichaud> good morning, #perl6

[16:06] <masak> pmichaud! \o/

[16:06] <TimToady> the extra arguments do show up in %_, after all

[16:07] <TimToady> pmichaud: o/

[16:07] <masak> timotimo: good point. will need to digest that, though.

[16:07] <pmichaud> TimToady: enjoyed your tweets about the 47%  :-)

[16:07] *** markov1 joined
[16:08] <TimToady> yes, well, I was on a roll...

[16:08] *** stopbit_ joined
[16:08] *** stopbit left
[16:08] <masak> you Usonians sure seem to like your percentages...

[16:08] <TimToady> only 99% of us do

[16:08] <masak> :P

[16:09] <pmichaud> sentiment in my household has been much the same.  It's a little weird for us, too, because nearly all of our extended family are strong Romney backers, and all of them receive some sort of government assistance  :-)

[16:09] <masak> slackers!

[16:09] <masak> :P

[16:09] <TimToady> yes, well, fact is that in the US rich people make more money off of tax breaks than poor people do :)

[16:10] <perigrin> technically they make more money full stop than poor people do

[16:10] * TimToady is also mostly embedded in conservative culture, which seems to have moved out from under him, leaving him stranded as a moderate

[16:10] <perigrin> it makes playing the percentages easier.

[16:11] <pmichaud> TimToady: yeah, I'm in the same boat (stranded)

[16:11] <perigrin> a lot of conservatives feel that way too ... from my perspective you're one of the most liberal conservatives I've met :)

[16:11] <perigrin> (both of you actually)

[16:11] <masak> +1

[16:12] <pmichaud> well, the state I live in has a lot to answer for these days :-P

[16:12] <TimToady> I might turn into a conservative liberal if this keeps up. :)

[16:13] <perigrin> there are worse things to be than someone who thinks that history has meaning but we should take care of each other.

[16:13] *** MayDaniel joined
[16:14] * masak .oO( 50 shades of the GOP )

[16:14] <pmichaud> alas, the GOP is more O than G these days.  :-)

[16:15] <perigrin> pmichaud: my state is trying to give yours a run for it's money.

[16:15] <TimToady> what really gripes me is when the pollsters lump me in with all the other "old white males"...

[16:16] <masak> better than being lumped with the dead white males...

[16:16] <TimToady> working on that...

[16:16] <pmichaud> perigrin: perhaps, but we have W, Ron Paul, and "oops".

[16:16] <flussence> .oO( better than being thrown in with the great white sharks... )

[16:17] <perigrin> pmichaud: We have Rubio, Scott, and W's brother ... 

[16:17] <perigrin> like I said ... trying to give you a run for your money :)

[16:17] <pmichaud> Jeb actually sounds reasonable to me.  

[16:17] <TimToady> because he's *not* running, which is very reasonable :)

[16:17] <pmichaud> lol

[16:17] <perigrin> His first two weeks as Governor he violated our goverment transparency laws.

[16:17] <TimToady> but yes, he seems sane

[16:18] <TimToady> or at least saner, on average

[16:18] <perigrin> Damning with faint praise there. :)

[16:19] * perigrin was not impressed with him as Governor ... but also spent most of that time living over-seas.

[16:20] <TimToady> well, this is all rather off-topic, even if rather topical

[16:21] <huf> but how else would i know to like or dislike perl6 if i dont know the political leanings of the core people working on it? :)

[16:21] <perigrin> hyper-politics operators ... you can lean all directions at once and they'll reify at runtime.

[16:21] <TimToady> we tend to be foaming-at-the-mouth moderates, with a large standard deviation :)

[16:22] <pmichaud> huf: we're all folks who believe there are multiple answers to the same question.

[16:22] <TimToady> you can say that again

[16:22] <TimToady> that goes without saying

[16:22] <huf> :)

[16:22] *** flightrecorder left
[16:22] <huf> i'm sure he can say it again, but exactly how many times?

[16:22] <huf> i must know!

[16:23] <perigrin> huf: it's a lazy list.

[16:23] *** FROGGS left
[16:23] <huf> eh, that way lie the too-easy political jokes, i'll skip those :)

[16:31] <masak> moritz: heh, I also just found the typo you fixed in 94f900b. ;)

[16:38] *** crab2313 joined
[16:51] *** mucker left
[16:51] *** dakkar left
[16:54] *** wk joined
[16:59] <skids> .oO(Cat should be implemented ASAP just so we (<can>,<haz>).lol.cat.say)

[17:02] *** thou joined
[17:02] * TimToady pictures a lolrat

[17:03] <skids> Iz in yer wallz chewin yer wirez

[17:03] <skids> not as endearing

[17:03] <TimToady> tough job, but someone has to do it

[17:04] <masak> tough... and not without risks. those wires are hot!

[17:06] <TimToady> The wires are only half as hot, which is why Norwegian rats do so well here.

[17:09] <masak> Norwegian rats do well almost anywhere. :)

[17:10] <masak> (and they've emigrated from Norway because the beer prices were too high)

[17:11] <TimToady> I guess rats are subject to notchewall selection...

[17:11] <masak> :P

[17:14] *** xinming_ joined
[17:15] *** crab2313 left
[17:15] *** flussence left
[17:15] *** crab2313 joined
[17:15] *** raiph joined
[17:17] *** xinming left
[17:18] *** flussence joined
[17:19] *** flussence left
[17:20] *** leprevost left
[17:22] * moritz wonders if expmod should be an infix operator

[17:23] <masak> **%

[17:23] <masak> actually, I wonder if it should just be a guaranteed optimization...

[17:28] *** pmurias left
[17:35] * diakopter wonders what "portable Perl 6 code" will look like

[17:36] <diakopter> obviously least common denominator syntax

[17:36] <diakopter> but style of writing I'm wondering about

[17:43] <TimToady> masak: yes, I have wondered that also

[17:44] <masak> oh, good.

[17:44] <TimToady> though you might want more type inference for that to work out well...

[17:47] <masak> maybe.

[17:49] *** flightrecorder joined
[17:49] *** FROGGS joined
[17:53] *** sivoais left
[17:53] *** benabik left
[17:55] <raiph> hi all. has anyone reading this used the summary backlog instead of reading the full backlog?

[17:55] <moritz> $ /perl6 -e 'say 3.expmod(2, 8)'

[17:55] <moritz> 1

[17:55] <moritz> $ ./perl6 -e 'say 3.expmod(2, 100)'

[17:55] <moritz> 9

[17:56] <moritz> raiph: I've done that today

[17:56] <moritz> or yesterday, not sure

[17:56] * moritz is a bit confused these days

[17:57] <TimToady> moritz: is that tying into the tom code?

[17:57] <moritz> TimToady: yes

[17:57] <moritz>     method expmod(Int:D: Int:D \base, Int:D \mod) {

[17:57] <moritz>         nqp::expmod_I(self, base, mod, Int);

[17:57] <moritz>     }

[17:57] <TimToady> cool

[17:57] <masak> moritz++

[17:57] <raiph> moritz: instead of or as well as?

[17:57] <TimToady> I saw those routines, and figgered it was a simple matter of nqp

[17:58] <moritz> though probably missing some decontainerization

[17:58] *** benabik joined
[17:58] <moritz> raiph: so far I've settled with reading the summary, and later the full backlog if I have time

[17:59] * TimToady feels obligated to read everything always, for some strange reason

[17:59] * TimToady would not make a good President

[17:59] <raiph> moritz: \o/ :)

[17:59] <moritz> raiph: my hope was that you (or somebody else) would copy&paste the HTML from the IRC logs and add some headings to it

[17:59] <moritz> and split it up into sections

[18:00] <moritz> but the current state is better than nothing, and i hope it doesn't burn out our summarizers

[18:01] <sorear> good * #perl6

[18:02] *** zby_home_ joined
[18:02] <moritz> masak: I think I should wait with my expmod and is-prime changes until after the release

[18:03] <moritz> make: *** [src/stage1/QAST.pbc] Segmentation fault

[18:03] <moritz> eeks

[18:03] <moritz> not reproducible though

[18:03] <benabik> Cosmic ray.  No worries.  ;-)

[18:04] * TimToady greets sorear with an amish californian greeting...

[18:04] <masak> moritz: agreed.

[18:04] <masak> sorear! \o/

[18:11] *** thou left
[18:12] *** birdwindupbird left
[18:13] *** kurahaupo joined
[18:15] *** birdwindupbird joined
[18:28] <masak> ok, all y'all wonder full people.

[18:28] <masak> wonderful*

[18:28] <masak> are you ready to go into Rakudo release mode? :D

[18:29] <moritz> the question is if *you* are ready :-)

[18:29] <TimToady> we're always ready for you to go into release mode, you insensitive clod!

[18:29] <masak> well, then. release mode it is.

[18:30] * masak flips the big "RELEASE MODE" switch

[18:30] <FROGGS> the huge red one?

[18:30] * TimToady hears a humming sound...

[18:30] <masak> yah. that one.

[18:30] <FROGGS> the "there-is-no-going-back" nob?

[18:30] <masak> also, I'll note that I've been called an insensitive clod twice today.

[18:30] <moritz> $ ./perl6 -e 'say grep *.is-prime, 1..100'

[18:30] <moritz> 1 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97

[18:30] <TimToady> masak: yes, I was parodying that

[18:30] <FROGGS> hehe, so it must be true ;o)

[18:31] <masak> TimToady: not sure the first time was well-deserved either :P

[18:31] <PerlJam> masak: you insensitive clod!  (thrice! :-)

[18:31] <masak> FROGGS: no, no. three times means true.

[18:31] <masak> dang.

[18:31] <PerlJam> :-)

[18:31] <TimToady> it's one of those things I wouldn't say if it were true...

[18:31] <moritz> I... didn't expect the libtommath is_prime check to return True on 1

[18:31] <masak> moritz: I *knew* it!

[18:31] <TimToady> hmm

[18:31] <masak> it alwasy *felt* like a prime to me :P

[18:32] <masak> no matter what people said...

[18:32] <rurban> Note that I fixed the broken imcc optimizer for constant encoded strings yesterday, but it's only in a parrot branch. https://github.com/parrot/parrot/issues/837

[18:32] <TimToady> well, it is divisible by itself and 1

[18:32] <PerlJam> looks like a prime, acts like a prime, smells like a prime ...

[18:32] <pmichaud> rurban++

[18:32] <PerlJam> .oO( duck priming? )

[18:32] <masak> TimToady: so are all primes.

[18:32] <moritz> PerlJam: but it doesn't quack like a prime

[18:33] * pmichaud detects the awesome rakudo release machine spinning up

[18:33] <rurban> parrot 4.9.0 will cpontain it but I try to fix the internal representaiuon of enconded string in SREG's also. It's 4x times slower currently

[18:33] <masak> let's see if this time I manage to get the nqp release right...

[18:33] <pmichaud> masak: there are a new set of nqp release instructions, so it should be better this time.  (courtesy of mtmh2012

[18:33] <masak> moritz: be prepared to remind me of whatever it is I've forgotten both recent times.

[18:33] <moritz> rurban++ # fixing stuff

[18:33] <masak> pmichaud: oh, good.

[18:34] <masak> All tests successful.

[18:34] <masak> Result: PASS

[18:34] <masak> \o/

[18:34] <moritz> masak: nqp tarball? bumping NQP's VERSION and Rakudo's VERSION?

[18:34] <masak> moritz: I don't remember. :)

[18:34] <sorear> if you make 1 a prime, you lose unique factorization.

[18:34] <sorear> -1

[18:34] <pmichaud> the nqp tarball is now created by doing "make release"

[18:34] <rurban> I think I can optimize string encoding held in registers or constants by factor 4

[18:34] * PerlJam looks at NQP's release instructions  (I believe I volunteered for next month's release)

[18:34] <masak> sorear: I wasn't being serious.

[18:35] <PerlJam> pm: nice

[18:35] <moritz> I can't make 1 a prime, and i guess nobody can :-)

[18:35] <rurban> calling conventions not sure yet, but it should be doable also.

[18:35] <sorear> rurban: is this part of the imcc optimization enabled by default?  if not, does rakudo enable it?

[18:36] * pmichaud double-checks that nqp release document was indeed updated.

[18:36] <rurban> it's internal in constant folding. it's also that SREG's and const strings cannot hold the encoding information efficiently at all. We need to redesign it.

[18:36] <masak> peeps. release name. seriously.

[18:36] <masak> focus! :P

[18:36] *** spider-mario left
[18:36] <sorear> masak: Stavanger?

[18:37] <masak> ooh

[18:37] <rurban> But it looks easy to do. See https://github.com/parrot/parrot/issues/837#issuecomment-8717966

[18:37] <pmichaud> is there a Stavanger.pm, though?

[18:37] <sorear> or was that used already

[18:37] <TimToady> have we used Tokyo or Edo?  (YAPC::Asia coming up...)

[18:37] <rurban> p.stolen

[18:37] <masak> pmichaud: doubt it. neither is there a Perl.pm, sadly.

[18:37] <rurban> Preikestolen

[18:37] <masak> that would be wonderfully confusing.

[18:37] <pmichaud> well, I figure we could create a Perl.pm :-)

[18:37] <PerlJam> masak: #56?  :)

[18:37] <masak> PerlJam: you're being very helpful there.

[18:37] <rurban> or Pulpit Rock

[18:38] <TimToady> ooh, I just saw that

[18:38] <PerlJam> Release names are always the hardest part.

[18:38] <pmichaud> I'd be fine with Tokyo.pm

[18:38] <[Coke]> which is why we shouldn't use them. :P

[18:38] <PerlJam> [Coke]: ding!

[18:38] <pmichaud> since jnthn++ will be attending, iirc

[18:38] <masak> going with "Tokyo" for now.

[18:38] <pmichaud> ...is there a reason why the release guide has release #55 labeled as "Frankfurst"?  (note the extra 's')

[18:38] <masak> phew, hardest part is over :)

[18:39] <masak> pmichaud: git pull

[18:39] <masak> pmichaud: as to the reason, I guess moritz was thinking of food at the time :P

[18:39] <pmichaud> lol

[18:39] <skids> r: class A { multi method m (:$f) { "f".say }; multi method m (:$g) { "g".say } }; my A $a .= new(); $a.m(:f);

[18:39] <p6eval> rakudo 94f900: OUTPUT«f␤»

[18:39] *** thou joined
[18:40] <skids> Believe it or not that's broken in star08

[18:40] <pmichaud> there is a "#Perl.pm", however!  http://www.pm.org/groups/665.html

[18:40] <skids> Probably got fixed along with the constraints?

[18:40] <masak> o.O

[18:40] <sorear> quick, somebody start a PM group in Frankfurt (Oder) to confuse things

[18:40] <masak> tempted to switch over to "Perl" as a release name, then.

[18:40] <masak> we can do Tokyo next month, when jnthn++'s been there.

[18:41] <pmichaud> not sure how '#Perl.pm' is, though -- but it does appear in pm.org's "active groups" list :)

[18:41] <PerlJam> masak: That sounds perfect ... for me  :)

[18:42] * pmichaud looks through the other list of groups for more names

[18:42] <[Coke]> star: class A { multi method m (:$f) { "f".say }; multi method m (:$g) { "g".say } }; my A $a .= new(); $a.m(:f);

[18:42] <p6eval> star 2012.07: OUTPUT«Ambiguous call to 'm'; these signatures all match:␤:(A , :f(:$f), Mu *%_)␤:(A , :g(:$g), Mu *%_)␤␤  in method m at src/gen/CORE.setting:323␤  in block <anon> at /tmp/eN7sQqdMEy:1␤␤»

[18:42] <PerlJam> Naming any release of Rakudo "Perl" is tempting fate a little I think.   What confusion there could be!

[18:44] <skids> Save it for the 1.0.0 release :-)

[18:44] <jnthn> o/ from the train

[18:44] <sorear> But we're on 56.0.0 now

[18:44] <dalek> perl6-roast-data: b60f209 | coke++ | / (3 files):

[18:44] <dalek> perl6-roast-data: today (automated commit)

[18:44] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/b60f209928

[18:45] <jnthn> this wifi is really greaNO CARRIER

[18:45] <[Coke]> jnthn: back down to 2 rakudo fails.

[18:45] <PerlJam> It would be funny if wifi dropping actually did generate "NO CARRIER" messages

[18:45] <skids> sorear: just chalk that up to endianness.

[18:46] <pmichaud> masak: I'll create the .msi version of the release later tonight or (more likely ) early tomorrow

[18:46] <sorear> pmichaud: and we even have mst contributing :D

[18:47] <pmichaud> sorear: indeed!  mst++

[18:47] <sorear> re. #perl.pm

[18:47] *** thou left
[18:47] <jnthn> [Coke]: Yay :)

[18:48] <sorear> bleh, the end of the month snuck up on me

[18:48] <rurban> bad performance news from the parrot front. just benchmarked it against a different test and it looks like encoding SREG will not bring 4x times speed advantage. rather none. There are other things slowing it down 4 times. sprintf mostly.

[18:52] *** Targen left
[18:54] <skids> .oO(someday I'll crack a NO CARRIER joke and nobody will get it because they are all too young.  Sigh.)

[18:55] *** kurahaupo left
[18:56] <jnthn> skids: Just hang out with old people like me :P

[18:56] *** sqirrel left
[18:56] <TimToady> Get off my CARRIER!!!

[18:57] <masak> tools/contributors.pl finds a contributor named "C". I don't know who that is. I don't find a corresponding author in the git logs. should I delete that entry?

[18:57] <tadzik> C++

[18:57] <tadzik> in the commit logs, I guess

[18:59] <skids> Maybe it's sort of like the C locale.

[18:59] <sorear> rurban: what kinds of things will become 4x faster after you're done?

[19:00] *** fgomez joined
[19:04] <rurban> I thought that SREG not holding STRING is slowing it down by 4x. Because I have to unesacpe, create a new string for the SREG with "encoding:"\unescaped string\"" as char *ptr. But a new benchmarks shows that its not worthwile fixing this. Rather fix sprintf.

[19:04] <rurban> But I'll research it.

[19:05] <dalek> rakudo/nom: c13ac5e | masak++ | docs/announce/2012.09:

[19:05] <dalek> rakudo/nom: [docs/announce/2012.09] added

[19:05] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c13ac5e535

[19:05] <masak> people are welcome to review the announcement.

[19:05] <masak> spotting typos, errors, etc.

[19:07] <dalek> specs: 1c74b86 | larry++ | S32-setting-library/Numeric.pod:

[19:07] <dalek> specs: Assume Miller-Rabin certainty on composites

[19:07] <dalek> specs: 

[19:07] <dalek> specs: Pointed out by Martin D Kealey.

[19:07] <dalek> specs: review: https://github.com/perl6/specs/commit/1c74b86e60

[19:09] <jnthn> masak: is the move to a QAST-based NQP not worth mentioning? Or the new proto support? :)

[19:09] <rurban> #56 "Perl" really? But I like the idea

[19:10] *** crab2313 left
[19:11] <masak> jnthn: they're in the ChangeLog. I removed them from the announcement as being "a bit internal". happy to be overridden on that point, though.

[19:12] * masak decides that "faster compiler" is worth having there

[19:13] <jnthn> yeah, faster is always worth it

[19:13] <dalek> rakudo/nom: 738d1ea | masak++ | docs/announce/2012.09:

[19:13] <dalek> rakudo/nom: [docs/announce/2012.09] mention faster compiler

[19:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/738d1ea823

[19:14] <masak> phenny: sv en "faster"?

[19:14] <phenny> masak: "aunt" (sv to en, translate.google.com)

[19:14] <jnthn> and the proto thing is actually a nice feature

[19:14] <GlitchMr> "These are some possibly breaking changes:"

[19:14] <GlitchMr> "- tie-breaking with constraints now picks the first matching one rather than demanding they be mutually exclusive"

[19:14] <GlitchMr> Why it would be breaking

[19:14] <GlitchMr> It wasn't working before, now it does

[19:15] <GlitchMr> You could use this same argument for "Str.wordcase" - in 2012.08 Str.Wordcase didn't existed, it could break your 2012.09 if they depend on it to not existy

[19:15] <GlitchMr> exist*

[19:16] <masak> good point.

[19:16] <masak> moving tie-breaking up to "new features".

[19:17] <GlitchMr> Every change in dynamic language could be easily breaking

[19:17] <GlitchMr> your code on 2012.09*

[19:17] *** PacoAir left
[19:18] <dalek> rakudo/nom: 488521b | masak++ | docs/announce/2012.09:

[19:18] <dalek> rakudo/nom: [docs/announce/2012.09] tie-breaking is a feature

[19:18] <dalek> rakudo/nom: 

[19:18] <dalek> rakudo/nom: Not a breaking change. :)

[19:18] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/488521be0c

[19:19] *** PacoAir joined
[19:19] <skids> .oO(breaks ties, not code)

[19:19] <masak> guess it prefers bowties.

[19:20] *** flussence joined
[19:21] *** PacoAir left
[19:21] *** raiph left
[19:21] *** PacoAir joined
[19:22] <[Coke]> bowties are cool now.

[19:22] <dalek> nqp: a318bd5 | masak++ | VERSION:

[19:22] <dalek> nqp: [VERSION] bump to 2012.09

[19:22] <dalek> nqp: review: https://github.com/perl6/nqp/commit/a318bd55e4

[19:22] <[Coke]> so, why is evalbot using a one-back star?

[19:22] <GlitchMr> nqp 2012.09 :-)

[19:23] <skids> [Coke]: At least now that we've all forgotten Tucker Carlson entirely.

[19:23] <[Coke]> skids: ah, I was referencing Doctor Who. Yes, I had forgotten TC.

[19:24] * masak wonders if Tucker Carlson is ever going to forgive Jon Stewart

[19:31] *** PacoAir left
[19:32] *** PacoAir joined
[19:33] *** PacoAir left
[19:39] *** mdupont_ left
[19:39] *** fgomez left
[19:39] *** PacoAir joined
[19:40] <masak> NQP 2012.09 uploaded.

[19:43] <dalek> rakudo/nom: bdb50f4 | masak++ | tools/build/NQP_REVISION:

[19:43] <dalek> rakudo/nom: [release] bump NQP revision

[19:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/bdb50f47a6

[19:43] <dalek> rakudo/nom: 77defe7 | masak++ | VERSION:

[19:43] <dalek> rakudo/nom: [release] bump VERSION

[19:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/77defe7332

[19:43] <dalek> glitchmr.github.com/perl6-changes: 8179af9 | GlitchMr++ | _posts/2012-09-23-perl-6-changes-2012W38.md:

[19:43] <dalek> glitchmr.github.com/perl6-changes: Add more Perl 6 changes to blog article.

[19:43] <dalek> glitchmr.github.com/perl6-changes: 

[19:43] <dalek> glitchmr.github.com/perl6-changes: Currently, the changes aren't too exciting compared to previous week,

[19:43] <dalek> glitchmr.github.com/perl6-changes: but we still have three days - who knows what will happen then...

[19:43] <dalek> glitchmr.github.com/perl6-changes: Besides, isn't Rakudo Star release awesome enough - I mean, it brings

[19:43] <dalek> glitchmr.github.com/perl6-changes: newest changes to useful and usable distribution of Perl 6 - you know,

[19:43] <dalek> glitchmr.github.com/perl6-changes: without installing Panda :-).

[19:43] <dalek> glitchmr.github.com/perl6-changes: review: https://github.com/GlitchMr/glitchmr.github.com/commit/8179af9724

[19:45] <GlitchMr> I know that links to `expmod` and `is-prime` aren't working, but I hope http://doc.perl6.org/ will update before I will merge it with `master` :-)

[19:50] *** gongyiliao left
[19:51] <dalek> nqp: e8a7719 | jonathan++ | docs/qast.markdown:

[19:51] <dalek> nqp: Document more of QAST.

[19:51] <dalek> nqp: review: https://github.com/perl6/nqp/commit/e8a7719544

[19:52] *** sivoais joined
[19:52] <dalek> glitchmr.github.com: 92a60be | GlitchMr++ | / (2 files):

[19:52] <dalek> glitchmr.github.com: Fix footer on main page.

[19:52] <dalek> glitchmr.github.com: review: https://github.com/GlitchMr/glitchmr.github.com/commit/92a60be42f

[19:53] *** am0c left
[19:54] <masak> all stresstests pass.

[19:54] *** am0c joined
[19:54] <dalek> glitchmr.github.com: 7111f0d | GlitchMr++ | index.css:

[19:54] <dalek> glitchmr.github.com: Replace 0px with 0, 0px is ugly

[19:54] <dalek> glitchmr.github.com: review: https://github.com/GlitchMr/glitchmr.github.com/commit/7111f0da7f

[19:54] <masak> make release VERSION=2012.09

[19:54] <GlitchMr> I hope I don't spam this channel with commits to my blog

[19:54] <masak> why do I have to pass VERSION here?

[19:54] <masak> if I did everything right up to this point, the correct version is in the file VERSION, no?

[19:55] <masak> when would I ever want to do a release with another version number than the one in the VERSION file?

[19:55] <jnthn> Maybe the Makefile needs it for something

[19:57] <masak> my point is that the Makefile can go look for it in the VERSION file.

[19:57] <masak> oh well. it's not a big deal. it just feels redundant.

[19:57] <jnthn> Yeah but that's probably hassle to (portably) implement :)

[19:57] <jnthn> er, not that make release is portable anyway, I guess...

[19:58] <GlitchMr> Also, my website breaks HTML standards and I seriously don't care

[19:58] <jnthn> GlitchMr: You only break standards if you declare a doctype that says you are following them.

[19:59] <sorear> which ones?

[19:59] <jnthn> If you don't declare a doctype, you can do what you want, 'cus you promised nothing :)

[19:59] <GlitchMr> I declare doctype for Strict Mode

[19:59] <GlitchMr> <!DOCTYPE html>

[19:59] <GlitchMr> Anyways, bye

[19:59] *** GlitchMr left
[19:59] <jnthn> o/

[19:59] <jnthn> bah, my battery is almost out and now the wifi improves

[20:00] <jnthn> 'cus we're back in Skane, of course

[20:00] <masak> Rakudo 2012.09 uploaded to https://github.com/rakudo/rakudo/downloads

[20:00] <sorear> you have wifi on the train but no electricity?

[20:01] <jnthn> There's power but I have something else plugged in :D

[20:01] <jnthn> though, that's probably charged

[20:01] <jnthn> but also I'm almost home :)

[20:03] <masak> p6c announcement sent.

[20:04] <jnthn> masak++

[20:04] <sorear> masak++

[20:05] <jnthn> Time to start making the next month's release awesome :)

[20:06] <masak> http://en.wikipedia.org/wiki/Rakudo_Perl_6 updated.

[20:06] <masak> standing down release mode.

[20:06] * masak celebrates with an imperial stout :)

[20:06] <PerlJam> masak++

[20:06] <jnthn> \o/

[20:06] * jnthn only has unimperial stout at home

[20:06] <jnthn> in fact, I think my fridge only one beer o.O

[20:07] <jnthn> Guess I gotta go shopping after work tomorrow :)

[20:08] <masak> thank you all for participating in this months Rakudo release.

[20:08] <masak> your cooperation is much appreciated.

[20:12] *** estrabd is now known as estrabd_afk

[20:14] *** zby_home_ left
[20:16] <dalek> rakudo/nom: adc2127 | masak++ | docs/release_guide.pod:

[20:16] <dalek> rakudo/nom: [docs/release_guide.pod] some future release dates

[20:16] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/adc21274b3

[20:17] *** Chillance joined
[20:17] * flussence updates the other bit of the wiki page because masak++ forgot :P

[20:18] <masak> oh!

[20:18] <masak> thanks.

[20:18] <masak> let's hope that was my one mistake this time ;)

[20:18] <dalek> rakudo/nom: ee7dfef | duff++ | docs/release_guide.pod:

[20:18] <dalek> rakudo/nom: Move masak's release from the future to the past

[20:18] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ee7dfef791

[20:18] <masak> ah, right. the main text.

[20:18] <masak> PerlJam: heh ;)

[20:19] <masak> flussence++ PerlJam++

[20:19] * masak comes to think of Kung Fu Panda

[20:19] <masak> "yesterday is history, the future, a mystery... but today -- is a gift"

[20:20] <masak> "that's why they call it 'the present'"

[20:20] <tadzik> :D

[20:20] <PerlJam> sage words from a cartoon

[20:20] <tadzik> masak++ #release

[20:20] <masak> \o/

[20:21] * masak is now having a stout and eating 77% chocolate from the Philippines

[20:21] <TimToady> I suppose the chocolate makes the stout not taste bitter, and vice versa

[20:22] <sorear> Is it blended with 23% Swedish chocolate to reduce importation costs?

[20:22] <skids> Is there a non-fatal way to "use NotExistingPackage;" yet, other than BEGIN{ eval {...} }?

[20:22] <sorear> skids: try { require NotExistingPackage; }

[20:22] <masak> sorear: I don't know what the remaining 23% are. probably disgruntled Americans of some kind. :)

[20:23] <skids> Ah.  Right.  Thanks sorear++.

[20:23] <sorear> masak: eating Americans?

[20:23] <masak> sorear: just referring back to my earlier comment today that Usonians seem unusually keen on percentages right now.

[20:24] <sorear> it's like malaria

[20:24] <masak> 1%, 99%, 47%...

[20:24] <sorear> it flares up every four years like clockwork

[20:24] <masak> :P

[20:24] * masak .oO( clockwork flares up every four years? )

[20:25] <diakopter> clockwork * every * *

[20:25] <PerlJam> Is that why it's orange?

[20:26] * masak cut the release just in time for the absurdist humor, it seems :)

[20:26] <[Coke]> glitchmr: I am wondering why you post commits to your blog here. isn't it more interesting that your blog post is posted?

[20:27] <TimToady> 14.3% of all colors are orange

[20:27] <TimToady> --Roy G Bif

[20:27] <TimToady> *Biv

[20:28] <masak> r: say (100 / 7).fmt("%4.1f")

[20:28] <p6eval> rakudo 77defe: OUTPUT«14.3␤»

[20:28] <masak> yep.

[20:28] * TimToady pictures a fiolet flower

[20:28] <masak> we're in fiolent agreement here.

[20:29] <sorear> what probability measure do you use on colors?

[20:29] <sorear> it seems to me that you're only considering spectral colors

[20:29] <diakopter> sorear: I think he just meant 1/7 of roygbiv

[20:30] <TimToady> npr: sub postfix:<%>($x) { $x * 100 }; say (100% / 7).fmt("%4.1f")

[20:30] <masak> sorear: see above p6eval calculation.

[20:30] <p6eval> pugs: OUTPUT«(timeout)»

[20:30] <p6eval> ..rakudo 77defe, niecza v21-15-gf226bf6: OUTPUT«1428.6␤»

[20:30] <TimToady> er...

[20:30] <PerlJam> clearly "color" must refer to visible light

[20:30] <masak> TimToady: talk about overcompensating ;)

[20:31] <diakopter> PerlJam: *visible to humans

[20:31] <TimToady> 1428.6% of oranges are colored

[20:31] <flussence> spectres normally aren't visible to humans

[20:31] <masak> diakopter: *visible to humans who have sight

[20:31] <diakopter> .. and aren't colorblind

[20:32] <PerlJam> humans are the most important of all beings capable of sight, so all refereneces to color revolve around human perception.

[20:32] <TimToady> I don't see it that way.

[20:32] <PerlJam> It's the most important 300 nm EVAR!

[20:33] <TimToady> Solism is so provincial...

[20:34] * sorear mumbles something about imaginary coors

[20:34] <sorear> colors, too

[20:35] <TimToady> didn't know coors made a stout, or chocolate either...

[20:35] <masak> well, the color that flickers in front of my eyes when I rub them or when I'm tired is *exactly* the imaginary purple-green that Pratchett describes in his books.

[20:36] <masak> it's uncanny.

[20:36] <sorear> 'coons?  Moors?

[20:37] * TimToady infers that masak rubs his eyes only when he's not tired

[20:37] <diakopter> he didn't say xor

[20:37] <masak> actually, it's when I'm tired that I tend to rub my eyes.

[20:38] <TimToady> this is why TimToady should have his computer do his inferencing for him

[20:38] <sorear> one micro-foot

[20:39] *** thou joined
[20:39] <TimToady> <- a poem with 7 micro-feet

[20:40] * colomon is now thinking of imaginary Ardbeg...

[20:42] * TimToady wanders off to take a nap for a millifortnight or two

[20:43] <masak> r: say (14 * 24 * 60 * 60) / 1000

[20:43] <p6eval> rakudo 77defe: OUTPUT«1209.6␤»

[20:43] <masak> r: say (14 * 24 * 60 * 60) / 1000 / 60

[20:43] <p6eval> rakudo 77defe: OUTPUT«20.16␤»

[20:43] <masak> twenty minutes.

[20:43] <masak> or forty :)

[20:48] *** thou left
[20:48] <skids> I suppose using xor in a natural language conversation is no worse than using iff.

[20:51] <[Coke]> jnthn: my fridge only has a half drunk beer with a wine stopper in the bottle,

[20:52] <masak> beer is so badly behaved when it's half drunk.

[20:55] *** kurahaupo joined
[20:56] *** birdwindupbird left
[20:56] *** spider-mario joined
[20:56] <jnthn> ah, home :)

[20:56] <sorear> yay!

[20:56] <jnthn> I'll be here for, er, 2 days.

[20:57] <jnthn> Then I think I'm gonna change continent. :P

[20:58] <sorear> YAPC::Tōkyō ?

[20:58] <masak> \o/

[20:59] <PerlJam> jnthn: you need africa, australia, greenland and antarctica for the complete set of major land masses.

[21:00] <jnthn> PerlJam: I went to Morocco, which is Africa. :)

[21:00] <jnthn> Greenland is pretty easy from here. :)

[21:00] <jnthn> Australia is a long flight, and Antarctica is appealing but also distant and very pricey to go to :)

[21:01] <PerlJam> ah, sorry, I wasn't at a good zoom level on your map.   Morocco's placemarks blended into Spain

[21:01] <jnthn> .oO( Why is Greenland icier than Iceland, and Iceland geener than Greenland? )

[21:02] * sorear would like to set up shop on Mars or Venus someday

[21:02] <jnthn> sorear: And yes, YAPC :)

[21:02] <jnthn> And vacation.

[21:02] <jnthn> I'm going for 2 weeks to attend a 2.5 day conference. :)

[21:04] *** sivoais left
[21:06] *** leprevost joined
[21:09] * [Coke] sees he squeaked onto the release announcement.

[21:10] *** sivoais joined
[21:10] *** snearch joined
[21:18] *** snearch left
[21:19] *** stopbit_ left
[21:20] *** stopbit_ joined
[21:20] *** stopbit_ is now known as stopbit

[21:21] *** kaare_ left
[21:25] <dalek> rakudo/nom: 00533a4 | duff++ | CREDITS:

[21:25] <dalek> rakudo/nom: Add IRC name to CREDITS

[21:25] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/00533a4f3d

[21:25] <dalek> rakudo/nom: ef228dd | duff++ | tools/contributors.pl:

[21:25] <dalek> rakudo/nom: Minor improvement to contributors.pl

[21:25] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ef228dd818

[21:25] *** skids left
[21:34] *** wamba left
[21:35] *** benabik left
[21:47] *** spider-mario left
[22:01] *** leont joined
[22:14] *** benabik joined
[22:16] *** benabik_ joined
[22:16] *** benabik left
[22:16] *** benabik_ is now known as benabik

[22:22] *** benabik_ joined
[22:22] *** benabik left
[22:22] *** benabik_ is now known as benabik

[22:27] *** stopbit left
[22:31] *** lue left
[22:46] <masak> good night, #perl6

[22:46] <colomon> \o

[22:49] *** fgomez joined
[22:49] *** thou joined
[22:59] *** benabik left
[23:13] *** PacoAir left
[23:15] *** skids joined
[23:18] *** broquaint joined
[23:19] *** thou left
[23:21] *** telex left
[23:22] *** telex joined
[23:24] *** Psyche^ joined
[23:24] *** Psyche^ is now known as Patterner

[23:44] *** Patterner left
[23:49] *** whiteknight joined
