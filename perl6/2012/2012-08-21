[00:02] <[Coke]> i grabbed a fresh copy of rakudo and built it. I grabbed a copy of panda and ran <installed perl6> bootstrap.pl. it claims it installed panda... but where?

[00:03] *** miks joined
[00:04] *** miks left
[00:04] <[Coke]> ~/.perl6/bin. (wonder how star gets around this.)

[00:07] <[Coke]> so, my idea was to take Net::IRC::Bot and MuEvent and JSON::RPC and write a bot that checked twitter for perl6 tweets and sent them here. Someone have fun and run with that.

[00:07] <[Coke]> I give up.

[00:09] <[Coke]> here's the twitter URL: http://search.twitter.com/search.json?q=%23perl6%20OR%20%23p6p5%20OR%20%22perl%206%22

[00:19] *** jeffreykegler joined
[00:31] *** japhb_ left
[00:55] *** thelazydeveloper left
[01:09] <[Coke]> http://mdk.per.ly/2012/08/20/prs2012-perl5-perl6-reunification-summit/

[01:11] *** jeffreykegler left
[01:14] *** dayangkun joined
[01:28] *** jeffreykegler joined
[01:32] *** benabik joined
[01:50] *** scott__ joined
[02:19] *** ObseLeTe left
[02:53] *** _jaldhar joined
[02:54] *** _jaldhar left
[02:54] *** benabik left
[02:54] *** _jaldhar joined
[02:54] *** sftp joined
[02:56] *** benabik joined
[02:56] *** popl left
[03:03] *** tokuhiro_ left
[03:04] *** localhost left
[03:09] <diakopter> .u 1FAF

[03:09] <phenny> U+1FAF GREEK CAPITAL LETTER OMEGA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI (ᾯ)

[03:09] *** _jaldhar left
[03:10] <diakopter> or as I call it, Mr. Horseshoe.

[03:11] *** _jaldhar joined
[03:13] *** jeffreykegler left
[03:15] *** sftp left
[03:21] *** TheEpicNoob joined
[03:26] *** TheEpicNoob left
[05:17] *** _jaldhar left
[05:20] *** birdwindupbird joined
[05:27] *** _jaldhar joined
[05:38] *** thou left
[05:58] <DrEeevil> hrm. nqp bundles in libtommath, would anyone mind a bug asking for it to be unbundled / to be able to use a system-installed version?

[06:00] <diakopter> I'm curious why

[06:00] <diakopter> (just to not bundle things?)

[06:03] <DrEeevil> because it's ugly ;)

[06:03] <DrEeevil> why are you building something my package manager already provides?

[06:04] <diakopter> lack of developer resources (because it was easiest to just bundle it). plus the main developer develops on windows, which has no package manager.

[06:04] <diakopter> not everyone has a package manager

[06:04] <diakopter> so the default was to bundle it.

[06:05] <diakopter> I'm sure patches are welcome to make it optionally use a system one.

[06:06] <diakopter> do you have that kind of time?

[06:07] <DrEeevil> well, I can try, it's a bit weirdly glued together

[06:07] <DrEeevil> would have to figure out how to make it an optional toggle, I guess (automagic stuff is bad)

[06:08] <diakopter> I agree; a Configure.pl flag would be good

[06:09] <diakopter> (or environment variable) (or both)

[06:10] <DrEeevil> hmm, I prefer Configure.pl flags. explicit and easy to read

[06:14] *** SamuraiJack joined
[06:17] <moritz> +1 to optionally use an existing dyncall

[06:19] <pmichaud> good morning, #perl6

[06:20] <moritz> good am, pm

[06:21] <moritz> eeweew

[06:21] <moritz> sorry, hung connection

[06:25] *** wtw joined
[06:25] *** nodmonkey joined
[06:27] *** nodmonkey left
[06:33] <pmichaud> moritz: I can haz access to doc.perl6.org ?

[06:47] <masak> good morning, #perl6

[06:50] <pmichaud> good morning, masak++

[06:50] <masak> talk day 1! \o/

[06:50] <sorear> good morning!

[06:57] *** telex left
[06:58] *** telex joined
[07:03] <sorear> .u FBF9

[07:03] <phenny> U+FBF9 ARABIC LIGATURE UIGHUR KIRGHIZ YEH WITH HAMZA ABOVE WITH ALEF MAKSURA ISOLATED FORM (ﯹ)

[07:04] <masak> character description length win :)

[07:04] <shachaf> shachaf@carbon:~$ cat UNIDATA/unic.txt | tail -n+2 | sort-by-lengths | tail -n1

[07:04] <shachaf> Hmm, apparenty I have a sort-by-lengths command and a sortbylengths alias.

[07:05] <moritz> pmichaud: please nopaste one or more of your public ssh keys

[07:05] <shachaf> sorear: How long are you in .eu?

[07:06] *** Grrrr left
[07:06] *** Grrrr joined
[07:06] *** benabik left
[07:06] *** benabik joined
[07:07] *** telex left
[07:08] *** telex joined
[07:08] <sorear> shachaf: probably going to be leaving European airspace sometime around 1300 CEST Friday

[07:10] *** hoelzro|away is now known as hoelzro

[07:10] <shachaf> And back to CA shortly thereafter?

[07:11] <sorear> yes

[07:11] <sorear> why?

[07:11] <moritz> .oO( to know when to use the Stinger rockets )

[07:13] * masak .oO( ouch! that's gotta Sting )

[07:15] *** GlitchMr joined
[07:15] <moritz> I'm pretty sure that's where the name comes from

[07:19] *** DreamingInCode left
[07:23] <masak> the name makes me think of bees and wasps.

[07:23] <masak> or the "Every Breath You Take" artist.

[07:24] <masak> oh, hm. Sting wrote it, but The Police performed it.

[07:24] *** brrt joined
[07:24] <moritz> well, Sting was part of The Police, no?

[07:28] *** sergot joined
[07:28] *** tarch joined
[07:28] <sergot> hi o/ !

[07:28] *** tarch left
[07:29] <masak> dzień dobry, sergocie. :)

[07:29] <GlitchMr> Dzień dobry, sergocie :P.

[07:30] <masak> moritz: yes, seems he was.

[07:31] <hoelzro> so I wrote up the following code: https://gist.github.com/3413127

[07:31] <hoelzro> that *should* work, right?

[07:31] <moritz> r: https://gist.github.com/3413127

[07:31] <p6eval> rakudo 009325: OUTPUT«Nominal type check failed for parameter ''; expected R but got C instead␤  in method me at /tmp/OGjm6VZ9qj:2␤  in block  at /tmp/OGjm6VZ9qj:14␤␤»

[07:34] <hoelzro> right, but I'm calling a role method on an object whose class consumes that role

[07:34] * masak considers commuting to the venue

[07:35] *** daniel-s left
[07:35] <masak> hoelzro: feels to me like it should work, yes.

[07:35] *** dayangkun_ joined
[07:36] <hoelzro> so...how do I make it work? =)

[07:36] <masak> r: role R { method me { say "OH HAI" } }; R.^method_table<me>(R.new)

[07:36] <p6eval> rakudo 009325: OUTPUT«OH HAI␤»

[07:36] <masak> r: role R { method me { say "OH HAI" } }; class C does R {}; R.^method_table<me>(C.new)

[07:36] <p6eval> rakudo 009325: OUTPUT«Nominal type check failed for parameter ''; expected R but got C instead␤  in method me at /tmp/dGrHM2WopQ:1␤  in block  at /tmp/dGrHM2WopQ:1␤␤»

[07:37] * masak submits rakudobug

[07:37] <moritz> hoelzro: you wait for jnthn to wake up. He might have an idea

[07:37] <moritz> masak: there's already one for the same issue

[07:37] <masak> ok.

[07:37] <hoelzro> moritz: what TZ is jnthn ?

[07:37] * masak commutes to venue

[07:37] <moritz> hoelzro: CEST+{jnthn-get-up-late-offset}

[07:37] <DrEeevil> sorear: it looks like the niecza-20 tag is missing (or github doesn't show it)

[07:39] *** dayangkun left
[07:39] <dalek> niecza: 7ff1b8e | sorear++ | / (2 files):

[07:39] <dalek> niecza: Add server sockets to socket test module

[07:39] <dalek> niecza: review: https://github.com/sorear/niecza/commit/7ff1b8e631

[07:39] * sorear commutes

[07:49] *** kaleem joined
[07:53] *** jdrab joined
[08:05] <hoelzro> I think the greatest barrier to starting Rakudo development is figuring out how all the pieces fit together

[08:06] <hoelzro> parrot + nqp + Rakudo is one level

[08:06] <hoelzro> now I'm trying to figure out how the internals of Parrot and NQP work =/

[08:12] *** Tene left
[08:13] <arnsholt> I'm not an expert, but I might be able to help a bit

[08:13] <arnsholt> What are you looking for?

[08:14] <hoelzro> oh, I'm just commenting =)

[08:14] <arnsholt> Ah, right =)

[08:14] <hoelzro> I think if I ever get my head around it, I'll write a series of blog posts

[08:14] <arnsholt> Anyways, a good place to start is often rakudo/src/Perl6/Grammar.pm

[08:14] <arnsholt> Find the bit of grammar handling what you're looking at, trace through Actions.pm

[08:15] <arnsholt> That'll usually lead you to some bootstrappy bits and indications as to where in NQP you should look

[08:15] <hoelzro> hmm

[08:15] <arnsholt> Or, that's what I often do, at least

[08:15] <hoelzro> some of the time, I'll see something like this in Actions.pm:

[08:16] <hoelzro> make $/<something>.ast

[08:16] <hoelzro> and I have no idea how to figure out what happens next...

[08:16] <moritz> there's an action method associated with most grammar rules

[08:16] <arnsholt> Then the rule passes through the object made in the something rule

[08:17] <moritz> and they all call 'make' to set the current .ast

[08:17] <moritz> so make $<something>.ast just uses the AST of rule 'something' as the current AST

[08:17] <moritz> so yes, passing it on

[08:17] <hoelzro> ok, that makes sense

[08:17] <hoelzro> so what "handles" the current AST?

[08:18] <moritz> you mean, which rule works on the resulting AST?

[08:18] * moritz isn't sure he understood the question

[08:19] *** fhelmberger joined
[08:19] <hoelzro> moritz: I think so, yes

[08:20] <moritz> src/main.nqp sets upt he compilation chain

[08:20] <moritz> which basically says that the return value from TOP is compiled down to PIR

[08:20] <moritz> and TOP calls comp_unit

[08:20] <moritz> and comp_unit calls other rules, which eventually call the rules you care about

[08:21] <moritz> and the handling of the ASTs is the reverse process

[08:21] <moritz> so, your caller handles whatever you did

[08:21] <hoelzro> I see

[08:21] <moritz> and eventually the caller's caller is TOP, which is then handled by Perl6::Compiler, as set up in src/main.nqp

[08:22] <moritz> it's basically post-order tree traversal

[08:22] * hoelzro needs to start a Rakudo reading list

[08:24] * moritz needs to start a rakudo writing list :-)

[08:25] <hoelzro> =)

[08:25] <arnsholt> It's compositional semantics, if that's the kind of term that makes sense to you =)

[08:25] <moritz> it does

[08:26] <moritz> at some point I've made a nice (IMHO) overview of the rakudo architecture, but it's now out of date

[08:26] <moritz> and I've long wanted to update it

[08:38] *** Circlepuller_ joined
[08:40] *** Circlepuller left
[08:44] *** eiro_ left
[08:44] *** eiro left
[08:46] *** kst left
[08:47] *** sergot left
[08:52] <DrEeevil> sorear: hrm. niecza bootstrap is "dirty" ... would you be terribly upset if I mangled that to bits?

[08:52] *** eiro joined
[08:52] *** eiro_ joined
[08:55] <mathw> o/

[09:04] *** sergot joined
[09:04] *** kaleem left
[09:05] *** bbkr joined
[09:08] *** kaleem joined
[09:09] <tadzik> [Coke]: (MuEvent) I dunno, should be probably

[09:09] <phenny> tadzik: 20 Aug 21:36Z <japhb_> ask tadzik Can panda GitHub issue #15 "install for windows, Could not find Shell::Command" be closed now?

[09:10] <tadzik> japhb: (#15) I'd be glad to get feedback from the original bug openers. I _hope_ it can be closed

[09:12] *** Tene joined
[09:12] *** Tene left
[09:12] *** Tene joined
[09:13] *** dayangkun_ left
[09:20] *** erkan joined
[09:20] *** erkan left
[09:20] *** erkan joined
[09:25] *** jeffreykegler joined
[09:29] <arnsholt> o/ jeffreykegler 

[09:29] <jeffreykegler> hi

[09:33] <jeffreykegler> arnsholt: I was just following your suggestion to read "rakudo/src/Perl6/Grammar.pm"

[09:37] *** kresike joined
[09:37] <kresike> hello all you happy perl6 people

[09:38] <moritz> \o kresike, jeffreykegler, arnsholt 

[09:38] <moritz> jeffreykegler: any insights from reading it?

[09:38] <kresike> o/ moritz 

[09:38] <arnsholt> jeffreykegler: Oh, cool =)

[09:39] * mathw is moonlighting as a happy Perl 5 person today

[09:39] <arnsholt> It can be big and scary (and it makes perl6.vim lose it completely) but it's pretty straightforward, mostly

[09:39] <jeffreykegler> I'm looking into operator precedence for a blog post, and so just skimming

[09:40] <arnsholt> Of course, previous experience with weird grammar formalisms has hardened me a bit =)

[09:40] <arnsholt> (HPSG, I'm looking at you)

[09:41] <jeffreykegler> Also, it's 2:30 AM PST, and I need something to put me back to sleep :-)

[09:42] <moritz> the actual precedence fiddling bit happens in nqp/src/HLL/Grammar.pm in EXPR and EXPR_reduce

[09:42] <moritz> which is still mostly written in PIR, it seems :(

[09:42] <arnsholt> Yeah, the OPP was really scary last time I looked

[09:43] <moritz> STD.pm6 has a Perl 6 version of the OPP

[09:43] <arnsholt> Oh, excellent. I'll have to look at that at some point

[09:43] <moritz> which is also scary :-)

[09:44] <arnsholt> But probably less pages of code than the PIR version =)

[09:44] <arnsholt> (fewer?)

[09:44] <moritz> fewer

[09:44] <moritz> pages are countable

[09:44] <arnsholt> Right, right

[09:44] <moritz> 285 lines

[09:46] <arnsholt> But the PIR one is closer to a kiloline, IIRC =)

[09:46] <moritz> and does less

[09:46] <moritz> push @opstack, $infix;              # The Shift

[09:46] <moritz> oh, the pain

[09:47] <moritz> yes, 800 lines of PIR

[09:55] *** SamuraiJack_ joined
[09:57] <jeffreykegler> good night, all!

[09:57] *** jeffreykegler left
[09:57] *** SamuraiJack left
[10:01] *** ObseLeTe joined
[10:01] *** ObseLeTe left
[10:09] *** leont joined
[10:09] *** scott__ left
[10:12] *** kst joined
[10:13] *** MayDaniel joined
[10:15] *** sftp joined
[10:21] <mj41> Hello from Frankfurt. Enjoy updated feature matrix summary chart https://raw.github.com/mj41/Perl-6-GD/master/export/Summary%20-%20Compilers%27%20features%20-%20GoodData.png

[10:22] <moritz> mj41++

[10:28] *** spider-mario joined
[10:33] <pmichaud> 07:05 <moritz> pmichaud: please nopaste one or more of your public ssh keys

[10:33] <pmichaud> moritz: https://gist.github.com/be2b026e28c58a6bdef2

[10:40] <GlitchMr> mj41: just wondering, why partial features are over missing features?

[10:52] <dalek> ecosystem: bf25353 | tadzik++ | META.list:

[10:52] <dalek> ecosystem: Add MuEvent

[10:52] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/bf2535361e

[10:53] <hoelzro> why is it that nqp code always uses binding (:=) instead of assignment?

[10:53] <tadzik> because nqp doesn't support assignment :)

[10:54] <hoelzro> =P

[10:54] <hoelzro> why not?

[10:55] <GlitchMr> It's probably too magical for simplified NQP code

[10:55] <hoelzro> hmm

[10:57] <GlitchMr> @array := 1, 2, 3; doesn't do what you would think

[10:57] <GlitchMr> For that, you have to use @array := [1, 2, 3];

[11:00] *** leont left
[11:16] *** sirrobert left
[11:18] <hoelzro> nqp::findmethod($obj, $name) is equivalent to $obj.^find_method($name), yes?

[11:20] *** sirrobert joined
[11:29] *** ObseLeTe joined
[11:46] *** skids left
[11:47] <moritz> hoelzro: assignment requires a level of indirection that NQP doesn't want/need to provide

[11:50] <hoelzro> ok

[11:50] <hoelzro> I'm still getting my head around = vs := vs ::=

[11:50] <hoelzro> := seems to be a reference assignment, afaict

[11:51] <moritz> pmichaud: I've added your ssh key. You should be able to run the 'sync' script in the perl6/doc repo

[11:51] <moritz> pmichaud: if you need addtional privs (like for changing the apache config), please let me know

[12:04] *** JimmyZ joined
[12:06] *** bluescreen10 left
[12:09] *** ObseLeTe left
[12:13] *** jdrab left
[12:13] *** raiph joined
[12:14] *** tokuhiro_ joined
[12:35] *** JimmyZ left
[12:36] *** spider-mario left
[12:54] *** JimmyZ joined
[12:55] *** Moukeddar joined
[13:07] <[Coke]> does jnthn++ have slides up from the debugger talk?

[13:07] <[Coke]> or was it even a talk yet?

[13:08] <moritz> it was a talk (about exceptions :-)

[13:08] <moritz> and no, slides aren't up yet

[13:09] <[Coke]> :(

[13:09] <moritz> the newest on http://www.jnthn.net/articles.shtml are from the German Perl Workshop

[13:09] <[Coke]> HTML, SHTML.

[13:12] * [Coke] wonders if there is a way to view PDFS on the mac that will auto-fit to the size of the page, so I can hit "page down" and not have it be "page and a little bit".

[13:12] *** atrodo joined
[13:14] <[Coke]> ah, preview-> turn off "continuous scroll". \o/

[13:17] *** Woodi joined
[13:18] <Woodi> o/ everyone :)

[13:18] <[Coke]> good morning.

[13:19] <Woodi> is Curses for Perl 6 maybe ? :)

[13:21] <GlitchMr> http://www.perlfoundation.org/perl6/index.cgi?what_can_i_do_with_perl_6_today says you can, but I don't know how

[13:21] <GlitchMr> Perhaps NativeCall would work

[13:22] <moritz> please ignore the perlfoundation perl6 wiki

[13:22] <moritz> it's mostly unmaintained

[13:23] *** skids joined
[13:23] <Woodi> but Curses is there...

[13:27] <moritz> where "there"?

[13:28] <Woodi> look Lue want Curses too :) http://rdstar.wordpress.com/2012/07/27/making-an-if-game-in-august/

[13:28] <tadzik> well volunteered :)

[13:29] <Woodi> "there" means perlfundation.org link above

[13:31] <Woodi> what is prefered resource for _starting_ with NativeCalls ?

[13:32] *** raiph left
[13:33] <arnsholt> The NativeCall Readme, then the tests

[13:33] <arnsholt> After that, experimentation or asking here, I think

[13:34] <PerlJam> sounds about right.

[13:34] <Woodi> arnsholt: oki, I want to try: initscr(); endwin(); :)

[13:35] <pmichaud> should I check with tpf to see about having the perlfoundation perl6 wiki forwarded to somewhere else?

[13:36] <Woodi> pmichaud: probably we do not have ready page titled exactly: "What can YOU do with Perl 6 Now, Today, This minute?"

[13:37] <Woodi> and title look nice...

[13:37] *** bluescreen10 joined
[13:38] *** tokuhiro_ left
[13:38] *** raiph joined
[13:38] *** tokuhiro_ joined
[13:39] <arnsholt> Although, there was someone working on Curses stuff a little while back

[13:39] <arnsholt> Can't remember who though :/

[13:41] <PerlJam> Doesn't hurt to duplicate effort if Woodi learns something about how to use NativeCall.

[13:42] <arnsholt> Definitely

[13:43] <arnsholt> Just figured it'd be a good person to ask about stuff as well

[13:43] *** tokuhiro_ left
[13:43] <moritz> iirc there was an old curses binding for parrot, which a hacky p6 module used, back in the days

[13:43] <moritz> if that's true, it surely won't work in nom

[13:44] *** MayDaniel left
[13:45] * Woodi hates http://www.garfield.com/comics/vault.html?yr=2012&addr=120821 ! but maybe Woodi is too naive...

[13:47] <[Coke]> pmichaud: consider it raised to a TPF person.

[13:53] <[Coke]> would we be happy if the whole thing was replaced with a link to perl6.org ?

[13:53] * moritz would be, yes

[13:56] *** spider-mario joined
[13:58] <TimToady> wow, I can get on the network during a break, since everyone else is eating ice cream...

[13:58] <Woodi> so far: Cannot locate native library 'libncurses.so' but it is in /usr/lib/i386-linux-gnu/ ...

[13:58] *** kaare_ joined
[13:59] <moritz> Woodi: does /etc/ld.so.conf have an entry for /usr/lib/i386-linux-gnu/ ?

[13:59] <[Coke]> ok, I'll take care of it.

[14:01] <Woodi> moritz: no, it is empty... how my system is working ??

[14:01] <moritz> Woodi: I have no idea. What kind of system is it?

[14:01] <moritz> I only know of linux that it uses ld.so.conf

[14:01] <PerlJam> Woodi: try specifying the full path to the lib in your "is native()" call

[14:02] <moritz> *BSD systems might use a different mechanism

[14:02] <PerlJam> Woodi: or try setting LD_LIBRARY_PATH

[14:02] <arnsholt> ]

[14:02] <arnsholt> Whoops

[14:02] <moritz> is that a 64 bit machine with a 32bit lib installed?

[14:02] <arnsholt> Stuff hit my keyboard

[14:03] <Woodi> moritz: 32 bit Debian, probably everything should be done as part of apt-get

[14:03] <PerlJam> Woodi: (neither of those is "the answer", but they might be enough to get you going for now)

[14:04] *** leont joined
[14:04] <Woodi> trying now

[14:09] <Woodi> none works. will check strace...

[14:10] <PerlJam> It would be nice if that "Cannot locate native library" message would tell you where it looked.

[14:11] <moritz> Woodi: does linking a C program with libncurses work?

[14:11] <jnthn> ohhai o/

[14:12] <moritz> lolitsjnthn!

[14:12] <PerlJam> jnthn: o/

[14:12] <hoelzro> o/ jnthn 

[14:12] * jnthn was suffering from the heat in the venue, so has retreated to the hotel

[14:14] <geekosaur> beware on recent debian-based distributions, libncurses.so is a linker script redirecting to libncursesw.so.  several add-on dynamic linkers I'm aware of choke on the linker script

[14:14] <Woodi> found: open("/usr/lib/i386-linux-gnu/libncurses.so", O_RDONLY) = 3 and next: read(3, "INPUT(libncurses.so.5 -ltinfo)\n", 512) = 31 and then: write(2, "Cannot locate native library... maybe it do not like symlinks ?

[14:14] <jnthn> geekosaur: Would using dlopen work out on such a thing?

[14:14] <Woodi> yes, that libnc*w annoys me...

[14:15] <geekosaur> I don't think so but havven't tested

[14:15] <geekosaur> but that is a linker script right there that Woodi just quoted

[14:15] <moritz> wtf?  /usr/lib/libncurses.so: symbolic link to `/lib/libncurses.so.5'

[14:15] <jnthn> It'd kinda suck if they did something such that the well-knwon primitive for dynamically loading a library didn't work...

[14:16] <moritz>  /usr/lib/libncurses.so.5: symbolic link to `libtermcap.so'

[14:16] <moritz>  /usr/lib/libtermcap.so: symbolic link to `libncurses.so'

[14:16] <geekosaur> ...

[14:16] <jnthn> wtf indeed

[14:16] <PerlJam> moritz: what OS?

[14:17] <moritz> PerlJam: that's a debian stable

[14:17] * PerlJam makes another mental note to be wary of debian   

[14:17] <PerlJam> ;)

[14:17] <sirrobert> is there a syntax for applying multiple roles through a single "does" ?

[14:18] <sirrobert> class A does X, Y, Z { ... }

[14:18] <sirrobert> that sort of thing (I tried a few but couldn't come up with one that worked =)

[14:18] <moritz> no, you need multiple 'does'

[14:18] <moritz> oh, one of them is a link to /lib/libncurses.so.5

[14:18] <moritz> not /usr/lib

[14:19] <sirrobert> moritz: ok.  Is that a reasonable feature request?

[14:19] <sirrobert> (and if so, where do I make it? =)

[14:19] <moritz> sirrobert: no, multiple 'does' work fine

[14:19] <jnthn> sirrobert: I'm rather certain this has been discussed before :)

[14:20] <moritz> sirrobert: why must it be a single 'does'?

[14:20] <jnthn> I forget the exact arguments for why to keep things the way they are.

[14:20] <moritz> precedence?

[14:20] <sirrobert> jnthn: ok; I'll read up on it

[14:20] <jnthn> Probably 'cus it's get ugly

[14:20] <jnthn> moritz: Yeah, parsing issues could be fun

[14:20] <moritz> oh

[14:20] <moritz> and multi dispatch

[14:20] <jnthn> Well, you'd need another candidate that took a list of roles...

[14:20] <moritz> declaring multis for infix:<does> that do the right thing would be much harder

[14:20] <jnthn> And parser tweaks

[14:21] <sirrobert> it seems like "does (A, B, C)" could just do multiple does underneath?

[14:21] <jnthn> moritz: This is about the trait mod

[14:21] <moritz> jnthn: yes, same problem

[14:21] <jnthn> *nod*

[14:22] <sirrobert> well, I'm ok to use multiple "does" for now =)

[14:23] *** wtw left
[14:23] * geekosaur wonders what benefit you get from uglier syntax?

[14:24] <sirrobert> me too ;)

[14:24] *** kaleem left
[14:25] * moritz doesn't find the start of https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Metamodel/ClassHOW.pm ugly at all

[14:25] * jnthn wonders what benefit you get by saving a couple of characters when it introduces two ways to do something that look different but would really be completely the same

[14:25] <jnthn> ...and make something that's clean more complicated to boot.

[14:25] <sirrobert> TIOORWTDI =)

[14:26] <jnthn> moritz: Right, it's never bothered me either.

[14:26] <sirrobert> I don't find the ClassHow definition ugly either, but there are other considerations, such as line length

[14:27] <jnthn> So...spread it over more than one line!

[14:27] <jnthn> :)

[14:27] <PerlJam> line length?

[14:27] <jnthn> My talk slides from yesterday are at http://jnthn.net/papers/2012-yapceu-exceptions.pdf

[14:27] <pmichaud> \o/ jnthn++

[14:28] <moritz> it's not a very common operation, so not much gain from optimizing short syntax for it

[14:28] <jnthn> And I already pasted the debugger URL yesterday :)

[14:28] <jnthn> Also, I want to be where the front cover photo is again :P

[14:29] <sirrobert> gain is in the eye of the beholder

[14:29] <pmichaud> yeah, that front cover photo is awesome

[14:30] <sirrobert> though (as I mentioned before) I'm happy to adhere to the aesthetic culture present

[14:31] <pmichaud> for those looking at jnthn++'s slides, note that the debugger stuff is mostly in slide 49.

[14:32] <jnthn> Yeah, the way to show the debugger was to, well, show the debugger :)

[14:32] <pmichaud> I'm hoping to create a screencast to demo the debugger soonish (maybe thu or fri of this week, while I'm still in .de)

[14:33] <jnthn> ooh

[14:33] *** JimmyZ left
[14:33] * moritz hasn't tried it yet, just read the source :-)

[14:34] <pmichaud> seems as though everyone else will be mostly gone by fri, which means I'll have a day to do a little sightseeing and a fair bit of catching up on hacking stuff

[14:34] <jnthn> moritz: Oh my :)

[14:35] <pmichaud> and since I have my webcams and stuff with me... I might be in good shape for making a screencast.

[14:35] <moritz> jnthn: I had about 10 minutes on a slow machine and no compiled rakudo :-)

[14:35] <moritz> webcam*s*? if you have more than one, you can record in 3D :-)

[14:36] <jnthn> moritz: ah :)

[14:36] <pmichaud> there's a webcam built-in to my laptop, and I have a usb webcam I carry around with me for emergency presentations

[14:36] <pmichaud> anyway, I'm off to the lightning talks -- bbl

[14:36] * moritz decommutes

[14:37] <kresike> bye all

[14:37] *** kresike left
[14:38] <PerlJam> sirrobert: I can see your desire for multiple does.  All the repetition in the current way bothers ever so slightly.  Have a look at some other craziness that I just thought of: https://gist.github.com/3416060  (the first is your version of does)

[14:38] <sirrobert> PerlJam: thanks; reading =)

[14:39] <sirrobert> yeah, the second two would be trixy, but the first is not uglier for long lists and prettier for short

[14:39] <sirrobert> imho

[14:41] *** tokuhiro_ joined
[14:41] <PerlJam> I don't really have an opinion either way (at least not a strong enough one).  The existing way works and has less syntax to worry about, so on the whole, I'd lean towards the status quo

[14:42] <sirrobert> that's about where I am on it

[14:42] <sirrobert> worth asking about, in case it was implemented already

[14:42] <sirrobert> not worth merely aesthetic arguments

[14:43] <PerlJam> besides, once macros are fully functional, you can make your own multi-does  if you want :)

[14:43] <sirrobert> well, once macros are fully functional, obviously I'll write an Esperanto dialect ;)

[14:44] *** fhelmberger left
[14:44] <sirrobert> completely joking, of course

[14:46] *** tokuhiro_ left
[14:47] <[Coke]> OH NOES there are no actual debugger slides! ;)

[14:47] <[Coke]> jnthn++ nice exception slides, though, moritz++ for heavy lifting.

[14:47] <[Coke]> p6rd: next

[14:47] <p6rd> parrot 2012-08-21, rakudo 2012-08-23, niecza 2012-08-27

[14:48] <[Coke]> is there going to be a star release this week?

[14:48] *** stopbit joined
[14:48] <jnthn> Compiler release is this week, afaik

[14:48] <jnthn> Star probably early next week unless somebody jumps on it sooner :)

[14:50] *** jeffreykegler joined
[14:51] *** Moukeddar left
[14:52] <Woodi> could anyone check if this Curses/NC lines work for him pls ? http://pastebin.com/Ja9GMfPL  Or maybe I messed something

[14:53] *** thou joined
[14:56] *** leont left
[14:56] <PerlJam> Woodi: my ubuntu system seems to have problems locating libncurses.so.  If I change it to read ...  is native('libncurses.so.5')  ... the program executes

[15:01] <flussence> mine doesn't even have a libncurses.so.5 symlink

[15:03] <flussence> ...and somewhat worryingly, the ubuntu desktop I'm at doesn't have /usr/lib/libncurses* at all. That doesn't seem right.

[15:05] <flussence> oh. It's in /usr/lib/$ARCH/

[15:16] <moritz> works here too with libncurses.so.5

[15:19] <sirrobert> how do I add a module to the ecosystem?  It's already created and formatted correctly (per wiki instructions)

[15:20] <tadzik> sirrobert: ask me :)

[15:20] <moritz> sirrobert: you add the URL to its META.info file to the perl6/ecosystem repo

[15:20] <sirrobert> tadzik: heh ok =)

[15:20] <moritz> sirrobert: tell me your github ID, and I can give you commit access to that repo

[15:20] <sirrobert> moritz: via pull request?

[15:21] <moritz> sirrobert: via direct pushing to it :-)

[15:21] <sirrobert> sirrobert

[15:21] <sirrobert> (that's my github id)

[15:21] <moritz> sirrobert: you now have commit access to the ecosystem repo, and, oh, a few more repos. Welcome!

[15:21] <sirrobert> thanks (both) =)

[15:22] <tadzik> \o/

[15:22] <sirrobert> what do o/ and \o/ mean?

[15:22] <tadzik> it's a head and a set of hands

[15:22] <sirrobert> ahh, heh

[15:22] <PerlJam> o/\o  (high 5!)

[15:22] <moritz> and now you can guess what /o\ means :-)

[15:22] <sirrobert> handstand?

[15:23] <tadzik> more like "OH ONES"

[15:23] <moritz> more like hiding your head under your arms

[15:23] <tadzik> or maybe "OH NOES"

[15:23] <sirrobert> I guess % is like ... a two-headed guy trying to brush his hair?

[15:23] <tadzik> hehe

[15:23] <sirrobert> heh nod

[15:28] <dalek> ecosystem: c35ff6a | (Sir Robert Burbridge)++ | META.list:

[15:28] <dalek> ecosystem: added Class::Utils

[15:28] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/c35ff6a86f

[15:29] <sirrobert> a 'getting my feet wet' module

[15:31] *** thelazydeveloper joined
[15:31] <moritz> sirrobert++

[15:31] <PerlJam> sirrobert++ indeed.

[15:37] <PerlJam> sirrobert: You say "Array for example" ... do you know any other classes that have this problem?  A nice addition to your module might be something that shows which classes require it.  Like a program that you can run to test a particular class maybe?

[15:37] <sirrobert> good idea.  I don't know of any off the top of my head (I just tried with Array), but I can check easily enough

[15:38] <sirrobert> Can you add that as an issue in the module's repo?

[15:39] <moritz> do I suck at searching on the internet, or is it really that hard to find documentation about ncurses?

[15:40] <sirrobert> http://tldp.org/HOWTO/NCURSES-Programming-HOWTO/

[15:40] <sirrobert> helpful?

[15:40] <moritz> sirrobert: more than what I had until now, thanks

[15:41] <sirrobert> sure

[15:41] *** leont joined
[15:41] <moritz> I actually wanted the API documentation

[15:41] <sirrobert> ah

[15:42] <sirrobert> http://invisible-island.net/ncurses/ncurses-intro.html

[15:42] <geekosaur> afaik the API docs are all manpages

[15:42] <geekosaur> no html or other fancy formats

[15:42] <geekosaur> with 'man 3 curses' as the table of contents

[15:43] <PerlJam> sirrobert: did you just google "ncurses API reference" and follow the stack overflow link ?   :-)

[15:43] <sirrobert> heh nod

[15:43] <sirrobert> surprisingly often, that's better search results than other people get

[15:43] <sirrobert> my sister is a search ninja.  I'm more of a search hooligan.

[15:43] <moritz> eeks

[15:44] <moritz> NativeCall exports a refresh() function

[15:44] <PerlJam> really?

[15:44] <moritz> and I want to define my own sub refresh

[15:44] <PerlJam> that's ... unfortunate

[15:44] *** _jaldhar is now known as jaldhar

[15:46] <moritz> ah well, 'is symbol<refresh>' to the rescue

[15:49] <moritz> https://gist.github.com/3416731

[15:54] <PerlJam> looking at /usr/include/ncurses.h  it should be fairly straight forward to create NativeCall declarations for most of the ncurses routines

[15:54] *** leont left
[15:59] *** hoelzro is now known as hoelzro|away

[15:59] *** att joined
[15:59] *** nodmonkey joined
[16:00] *** brrt left
[16:01] *** alester joined
[16:04] <thou> PerlJam: i started one

[16:04] <arnsholt> moritz: Oh, good point. Might be an argument in favour of changing the name a bit =)

[16:04] <thou> PerlJam: https://github.com/softmoth/p6-Term-Curses

[16:05] <PerlJam> thou++

[16:05] *** mtk left
[16:06] *** mtk joined
[16:06] <moritz> arnsholt: I sow it as an argument in favour adding export traits

[16:06] <moritz> *saw

[16:06] <moritz> *export tags

[16:07] <dalek> zavolaj/export-tags: 3228da6 | moritz++ | lib/NativeCall.pm6:

[16:07] <dalek> zavolaj/export-tags: add export tags

[16:07] <dalek> zavolaj/export-tags: review: https://github.com/jnthn/zavolaj/commit/3228da6dee

[16:07] <arnsholt> Or that, yeah =)

[16:07] <moritz> arnsholt: if you like that branch, feel free to merge

[16:08] <moritz> arnsholt: if you like that branch, feel free to mergec

[16:08] <PerlJam> moritz: apparently you and I think quite a bit alike  :)  (though you actually did something about it)

[16:08] <PerlJam> arnsholt: what does refresh() do exactly?

[16:08] <arnsholt> Looks good to me

[16:08] <arnsholt> PerlJam: It's for corner cases, really

[16:10] <sirrobert> r: say ::('::?PACKAGE');

[16:10] <p6eval> rakudo 009325: OUTPUT«Start of substr out of range. Is: 1, should be in 0..0␤  in method Str at src/gen/CORE.setting:9719␤  in method Stringy at src/gen/CORE.setting:735␤  in sub infix:<eq> at src/gen/CORE.setting:1047␤  in sub INDIRECT_NAME_LOOKUP at src/gen/CORE.setting:11704␤  in blo…

[16:12] <arnsholt> If you pass an object to C and that object is mutated we catch the change when the C function returns

[16:12] <arnsholt> But if one function call saves a reference to an object and another one changes it (where the object is not an argument) we need a way to explicitly check for changes

[16:13] <arnsholt> Might be useful with callbacks too, come to think of it

[16:14] <PerlJam> I was having hard time thinking of when it would be useful *without* callbacks.

[16:15] <PerlJam> (after reading src/ops/nqp_dyncall.ops)

[16:15] <sirrobert> is there a var that stores a list of all available classes?

[16:16] <moritz> no

[16:16] *** hoelzro|away is now known as hoelzro

[16:16] <moritz> r: say CORE::.keys

[16:16] <p6eval> rakudo 009325: OUTPUT«ObjAt Stash Scalar Proxy Grammar PROCESS Bool False True ContainerDescriptor MethodDispatcher MultiDispatcher WrapDispatcher StaticLexPad NQPCursorRole Metamodel Pair Whatever WhateverCode Positional Associative Callable X &trait_mod:<is> &EXPORT_SYMBOL &trait_mod:…

[16:17] <moritz> that gives you some

[16:17] <moritz> you just have to grep for the undefined values

[16:17] <sirrobert> thanks

[16:17] <hoelzro> jnthn: I was told I should bother you about this: https://gist.github.com/3413127

[16:19] <arnsholt> PerlJam: The tests for it is without callbacks, if you're interested =)

[16:19] <arnsholt> But yeah, it was essentially a piece of LHF I picked

[16:19] <moritz> it's something that was needed for the SQLite driver, iirc

[16:19] <arnsholt> Wasn't that the explicitly managed strings?

[16:20] <moritz> oh right

[16:20] <moritz> another pitfall

[16:21] *** jeffreykegler left
[16:22] *** raiph left
[16:23] *** wooden joined
[16:23] *** wooden left
[16:23] *** wooden joined
[16:31] *** jeffreykegler joined
[16:36] *** nodmonkey left
[16:38] <GlitchMr> .u ☺

[16:38] <phenny> U+263A WHITE SMILING FACE (☺)

[16:38] <GlitchMr> .u 😁

[16:38] <phenny> U+1F601 (No name found)

[16:38] <GlitchMr> But... it is Unicode 6.1 character

[16:39] <GlitchMr> Is Unicode 6.1 supported in phenny?

[16:39] <moritz> phenny only supports character upt to U+FFFF

[16:40] <GlitchMr> I guess I have to do it myself

[16:41] <GlitchMr> U+1F601 GRINNING FACE WITH SMILING EYES (😁)

[16:43] *** hoelzro is now known as hoelzro|away

[16:43] *** mtk left
[16:49] *** mtk joined
[17:00] <thou> r: my $io = '/etc'.IO; <d e f l r s w x z t>.map({ $io."$_"() }).say;

[17:00] <p6eval> rakudo 009325: OUTPUT«True True False False True 4096 False True False False␤»

[17:01] <thou> r: my $io = '/etc'.IO; <d e f l r s w x z t>.map({ $_ => $io."$_"() }).say;

[17:01] <p6eval> rakudo 009325: OUTPUT«use of uninitialized value of type Any in string context  in block  at /tmp/0RUwHgTYzz:1␤␤Method '' not found for invocant of class 'IO'␤  in block  at /tmp/0RUwHgTYzz:1␤␤»

[17:01] <thou> what am i doing wrong in 2nd instance?

[17:01] *** birdwindupbird left
[17:01] <moritz> r: my $io = '/etc'.IO; <d e f l r s w x z t>.map({; $_ => $io."$_"() }).say

[17:01] <p6eval> rakudo 009325: OUTPUT«d True e  True f  False l False r True s  4096 w  False x True z  False t False␤»

[17:01] <moritz> thou: it's the hash vs. block thing

[17:01] <thou> ah

[17:02] <colomon> hash vs block: who'd win?

[17:02] <GlitchMr> It depends

[17:02] <GlitchMr> DWIM chooses

[17:03] <thou> i thought if $_ was present, then it should be a block

[17:03] <moritz> aye; rakudo doesn't implement that part yet

[17:03] <thou> roit

[17:05] *** Circlepuller joined
[17:08] *** Circlepuller_ left
[17:10] *** Circlepuller_ joined
[17:12] *** Circlepuller left
[17:15] *** bbkr left
[17:33] *** mtk left
[17:34] *** mtk joined
[17:37] *** hoelzro|away is now known as hoelzro

[17:41] *** fridim_ joined
[17:42] *** nodmonkey joined
[17:50] *** SamuraiJack_ left
[17:52] *** SamuraiJack joined
[17:53] *** att left
[18:03] *** fhelmberger joined
[18:12] *** fhelmberger left
[18:13] *** att joined
[18:15] *** nodmonkey left
[18:18] *** tokuhiro_ joined
[18:19] *** xinming_ joined
[18:22] *** tokuhiro_ left
[18:22] *** xinming left
[18:26] <thou> rn: my $p = '/foo/bar'; my $r = substr-rw($p, 0, $p.index('/', 1)) = ''; say "p[$p], r[$r]";

[18:26] <p6eval> niecza v19-30-g7ff1b8e: OUTPUT«p[/bar], r[/bar]␤»

[18:26] <p6eval> ..rakudo 009325: OUTPUT«p[/bar], r[/foo]␤»

[18:26] <dalek> doc: e7f00c9 | moritz++ | lib/X/Signature/NameClash.pod:

[18:26] <dalek> doc: document X::Signature::NameClash

[18:26] <dalek> doc: review: https://github.com/perl6/doc/commit/e7f00c9caa

[18:26] <thou> should i believe niecza, rakudo, or neither?

[18:27] *** nebuchadnezzar left
[18:27] * moritz has no idea

[18:27] <thou> i'm kind of surprised that $r isn't ''

[18:28] <thou> i'm pretty sure niecza's doesn't make sense

[18:29] <thou> i actually like rakudo's interpretation, but i'm not sure how it works

[18:30] * moritz neither

[18:30] <thou> r: my $p = '/foo/bar'; my $r = (substr-rw($p, 0, $p.index('/', 1)) = ''); say "p[$p], r[$r]";

[18:30] <p6eval> rakudo 009325: OUTPUT«p[/bar], r[/foo]␤»

[18:30] <moritz> and I implemented substr-rw

[18:31] <thou> r: my $p = '/foo/bar'; (my $r = substr-rw($p, 0, $p.index('/', 1))) = ''; say "p[$p], r[$r]";

[18:31] <p6eval> rakudo 009325: OUTPUT«p[/foo/bar], r[]␤»

[18:31] <thou> n: my $p = '/foo/bar'; (my $r = substr-rw($p, 0, $p.index('/', 1))) = ''; say "p[$p], r[$r]";

[18:31] <p6eval> niecza v19-30-g7ff1b8e: OUTPUT«p[/foo/bar], r[]␤»

[18:33] <thou> maybe just need to rewrite the docs. seems that if substr-rw is rw subroutine, it needs to be on the LHS of assignment in order to have effect; otherwise it's just substr

[18:34] <thou> so it doesn't return a writable reference to part of $p. it returns the same thing as substr().

[18:35] <PerlJam> thou: I don't know about "just rewrite the docs" ... surely there's a test missing?

[18:35] <thou> yeah

[18:36] *** nebuchadnezzar joined
[18:37] * thou looks at S32-str/substr-rw.t

[18:37] <thou> OK, so it's NYI

[18:45] *** nodmonkey joined
[18:51] *** nodmonkey left
[18:54] <dalek> doc: 6fc732a | moritz++ | / (2 files):

[18:54] <dalek> doc: document X::Method::Private::Permission

[18:54] <dalek> doc: review: https://github.com/perl6/doc/commit/6fc732a62a

[18:59] *** jeffreykegler left
[19:01] *** GlitchMr left
[19:07] *** jeffreykegler joined
[19:08] <dalek> doc: 3b79954 | moritz++ | lib/X/Method/Private/Unqualified.pod:

[19:08] <dalek> doc: document X::Method::Private::Unqualified

[19:08] <dalek> doc: review: https://github.com/perl6/doc/commit/3b79954338

[19:13] <diakopter> .u hexagram decayed

[19:13] <phenny> U+4DD1 HEXAGRAM FOR WORK ON THE DECAYED (䷑)

[19:15] <moritz> wow

[19:17] *** mtk left
[19:17] <moritz> phenny: ask jnthn in Actions.pm sub bind_op, is there any way to obtain the variable name to pass to X::Bind::NativeType? if so, how?

[19:17] <phenny> moritz: I'll pass that on when jnthn is around.

[19:19] *** mtk joined
[19:19] *** birdwindupbird joined
[19:23] <dalek> doc: 471e747 | moritz++ | lib/X/Bind/NativeType.pod:

[19:23] <dalek> doc: document X::Bind::NativeType

[19:23] <dalek> doc: review: https://github.com/perl6/doc/commit/471e747335

[19:23] *** desertm4x joined
[19:25] *** mtk left
[19:25] *** mtk joined
[19:29] *** gongyiliao joined
[19:31] <thou> how do i write this?

[19:31] <thou> std: (-> $x => $y { $x.say }).('foo' => 'bar')

[19:31] <p6eval> std 235f71b: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix > instead at /tmp/HqcsBWTDGV line 1:␤------> (-> $x =⏏> $y { $x.say }).('foo' => 'bar')␤Parse failed␤FAILED 00:00 43m␤»

[19:32] *** atrodo left
[19:32] <PerlJam> what are you trying to say?

[19:32] <thou> i have a list of pairs, and i want to write a for loop:  for @pairs -> $k => $v { say "key: $k, val: $v" }

[19:32] <PerlJam> what's the $y for?

[19:35] <thou> r: my @pairs = a => 1, b => 2, c => 3; for @pairs>>.kv -> $k, $v { say "k $k, v $v" }

[19:35] <p6eval> rakudo 009325: OUTPUT«k a, v 1␤k b, v 2␤k c, v 3␤»

[19:35] <moritz> thou: for @pairs -> $ (:$key, :$value) { say "$k => $v" }

[19:36] <moritz> uses signature unpacking

[19:36] <thou> ah, cool

[19:36] <moritz> or

[19:36] <thou> yes, i was hoping to unpack in the sig there

[19:36] <thou> r: my @pairs = a => 1, b => 2, c => 3; for @pairs -> $(:$key, :$value) { say "k $key, v $value" }

[19:37] <p6eval> rakudo 009325: OUTPUT«k a, v 1␤k b, v 2␤k c, v 3␤»

[19:37] <thou> thanks, moritz++!

[19:37] <thou> r: my @pairs = a => 1, b => 2, c => 3; for @pairs -> $(:key($foo), :value($bar)) { say "k $foo, v $bar" }

[19:38] <p6eval> rakudo 009325: OUTPUT«k a, v 1␤k b, v 2␤k c, v 3␤»

[19:38] <thou> maybe ».kv is cleaner anyways :-)

[19:39] *** gongyiliao left
[19:40] <moritz> maybe :-)

[19:48] <jnthn> moritz: (bind_op) you'll have a QAST::Var to hand typically. You can look at its .name

[19:48] <phenny> jnthn: 19:17Z <moritz> ask jnthn in Actions.pm sub bind_op, is there any way to obtain the variable name to pass to X::Bind::NativeType? if so, how?

[19:49] <moritz> jnthn: thanks

[19:49] <pmichaud> good evening, #perl6

[19:50] <PerlJam> pm: greetings!  How's .eu? 

[19:50] <jnthn> moritz: note that in the postcircumfix cases there's not an easy ride though

[19:50] *** am0c left
[19:50] <jnthn> moritz: as in, the expression on the left could be fairly complex

[19:50] <pmichaud> .eu has been very enjoyable... a bit more so than I had expected.  

[19:51] <pmichaud> more enjoyable because of the people I've been hanging out with, mainly

[19:51] <pmichaud> plus many of the talks ahve been excellent

[19:51] <PerlJam> excellent

[19:52] <pmichaud> I'll be glad for the conference to be over so I can get back to hacking, though.

[19:52] <pmichaud> we really need to figure out a hacking venue for thursday that has a/c

[19:52] <jnthn> pmichaud: yes. yes. yes.

[19:53] <PerlJam> what little of the Perl summit that's made it out into the blogosphere has seemed very positive.

[19:53] * jnthn has already almost melted down multiple times this yapc thanks to the heat...

[19:53] <dalek> niecza: 94c69fe | sorear++ | / (2 files):

[19:53] <dalek> niecza: Move IO::Socket::INET into the setting & a DateTime stub for Dancer

[19:53] <dalek> niecza: review: https://github.com/sorear/niecza/commit/94c69fe7f7

[19:53] <PerlJam> I haven't seen much about YAPC::EU though

[19:53] <PerlJam> (haven't looked really)

[19:53] <moritz> PerlJam: there's a bit on twitter

[19:53] <masak> good morning, #perl6

[19:53] <pmichaud> I don't yet know how much time TimToady++ will have on Thu for hacking... so hacking venue may depend a bit on that.  We'll undoubtedly work it out tomorrow :)

[19:53] <PerlJam> jnthn: global warming.  It's a trend  :)

[19:54] <moritz> but I get the impression that wifi is bad the conference, which is why nearly nobody reports directly from it

[19:54] <moritz> is that true?

[19:54] *** Circlepuller joined
[19:54] <moritz> good am, masak

[19:54] <pmichaud> we have remarked that it will be odd if YAPC::NA 2013 (Austin, TX) ends up having lower temperatures than YAPC::EU 2012 (Frankfurt)

[19:54] <masak> moritz: yes, it's true.

[19:54] <pmichaud> wifi is problematic, yes.

[19:55] *** Circlepuller_ left
[19:55] <pmichaud> this afternoon I basically gave up on even bringing my notebook to the venue; not worth the weight

[19:55] <moritz> jnthn: currently I'm mainly interested in the case where we've already checked for QAST::Var

[19:56] <moritz> r: my int $ := 3

[19:56] <p6eval> rakudo 009325: OUTPUT«===SORRY!===␤Cannot bind to a natively typed variable; use assignment instead␤at /tmp/A0X00Jhfkg:1␤»

[19:56] <jnthn> moritz: Ok, then it's easy. Use le .name

[19:56] <pmichaud> PerlJam: overall I have to say the summit was very positive

[19:56] <sorear> good * #perl6

[19:56] <moritz> agreed, even though I missed half of it

[19:56] <moritz> good morning sorear :-)

[19:56] <pmichaud> I somewhat expected it to be positive, but apparently many others had stronger trepidations than I did :)

[19:56] <ingy> seen TimToady 

[19:56] <aloha> TimToady was last seen in #perl6 5 hours 58 mins ago saying "wow, I can get on the network during a break, since everyone else is eating ice cream...".

[19:56] <PerlJam> pm: that's the gap that needed filling.

[19:57] <sorear> moritz: are we not both in CEST?

[19:57] <jnthn> For anyone who missed the commits: the Rakudo debugger now lets you single step through regexes.

[19:57] <moritz> sorear: everybody is in UGT :-)

[19:58] <sorear> I don't like this UGT meme.  It's stepping on the toes of my "good *" meme.

[19:58] <pmichaud> "*" is a valid UGT time, I think :)

[19:58] * moritz doesn't see the conflict either

[19:58] <pmichaud> jnthn: okay, now you're just showing off.  :-P

[19:58] *** gongyiliao joined
[19:58] *** hoelzro is now known as hoelzro|away

[19:58] <moritz> wow

[19:58] <pmichaud> jnthn++  # debugger was a very nice surprise this conference

[19:58] <moritz> now somebody please integrate it in star

[19:58] <pmichaud> oh, I'll do that.

[19:59] <moritz> (probably needs a bit more twiddling than the average module, 'cause of le Makefile)

[19:59] <pmichaud> I'm planning to do the star release anyway, so I've got it on my tasklist.

[19:59] <pmichaud> I will undoubtedly work on it some Friday

[19:59] <moritz> note that I already did the fix for twiddling the shebang lines of ufo and panda

[20:00] <dalek> roast: 12f1b31 | moritz++ | S (2 files):

[20:00] <dalek> roast: basic tests for sigilless params

[20:00] <dalek> roast: review: https://github.com/perl6/roast/commit/12f1b31878

[20:01] <jnthn> pmichaud: We could look at in on Thursday

[20:01] <pmichaud> jnthn: yes, we can do that if you want; I'm suspecting that integrating the debugger into star isn't too difficult though.  We might want to focus on other things, perhaps.

[20:02] <jnthn> pmichaud: well, I thinking we can probably knock it out in like 10 minutes ;)

[20:02] *** bluescreen10 left
[20:02] <pmichaud> although I do need to get a debugger runthrough so I can come up with a screencast script

[20:02] <pmichaud> or storyboard

[20:02] <pmichaud> so perhaps that would be good as well.

[20:03] <jnthn> pmichaud: I'm pondering doing a blog post about it.

[20:03] <pmichaud> jnthn: yes, you should do that (if you do not, then I will :-).

[20:03] <jnthn> Though I agree a screencast would be cooler at showing it off.

[20:03] <pmichaud> we can always have both

[20:03] <jnthn> Oh, sure :)

[20:04] <pmichaud> hearing your description of the debugger is equally valuable.  

[20:06] <moritz> is the tree format after QAST still called POST, or is it now PIRT?

[20:07] <jnthn> PIRT

[20:07] <jnthn> When I get done with all this transition, I'm gonna go on a big search/replace.

[20:08] *** DreamingInCode joined
[20:08] *** SamuraiJack left
[20:08] <jnthn> tbh though, I don't mind too much what we call it :)

[20:10] *** benabik left
[20:11] *** benabik joined
[20:13] *** jeffreykegler left
[20:13] <jnthn> hm, wat, hotel wifi seems to have stopped doing DNS resolution for me 

[20:14] <pmichaud> jnthn: I had that issue to for a while.  Rebooting eventually resolved (pardon the pun) the problem for me :)

[20:14] <pmichaud> oh, wait

[20:14] <pmichaud> looks like dns just failed for me too

[20:14] <pmichaud> like, just now

[20:14] <jnthn> tssk

[20:14] <pmichaud> jnthn: what did you do to the dns?!?  arggggggh  :-P

[20:15] <jnthn> Tried to visit github :P

[20:15] *** bluescreen10 joined
[20:15] <moritz> use 8.8.8.8 as DNS server

[20:15] <moritz> that's the only one where I can remember the IP :-)

[20:16] <pmichaud> I'm afk for a bit

[20:16] *** nodmonkey joined
[20:17] <jnthn> ooh, it works again now Pm has gone afk

[20:17] <jnthn> And me blamed me! :-P

[20:19] *** PacoAir left
[20:19] *** PacoAir joined
[20:19] * masak .oO( and now pm is absent, we'll probably get torrential rainfall )

[20:20] <dalek> rakudo/nom: b1d83db | kboga++ | src/core/Str.pm:

[20:20] <dalek> rakudo/nom: adds native str ops and return type annotations

[20:20] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b1d83dbd8a

[20:20] <dalek> rakudo/nom: 9162d07 | moritz++ | src/core/Str.pm:

[20:20] <dalek> rakudo/nom: Merge branch 'str-ops-ret-annotations' of https://github.com/kboga/rakudo into nom

[20:20] <dalek> rakudo/nom: 

[20:20] <dalek> rakudo/nom: Conflicts:

[20:20] <dalek> rakudo/nom: 	src/core/Str.pm

[20:20] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9162d0726c

[20:20] <dalek> rakudo/nom: e0ffd92 | moritz++ | src/ (3 files):

[20:20] <dalek> rakudo/nom: supply name to X::Bind::NativeType, jnthn++

[20:20] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e0ffd92474

[20:20] <dalek> rakudo/nom: e9b4461 | moritz++ | / (2 files):

[20:20] <dalek> rakudo/nom: Merge branch 'nom' of git://github.com/rakudo/rakudo into nom

[20:20] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e9b4461aec

[20:21] <dalek> rakudo/nom: 555a3eb | moritz++ | docs/architecture.svg:

[20:21] <dalek> rakudo/nom: [docs] update architecture image a bit.

[20:21] <dalek> rakudo/nom: 

[20:21] <dalek> rakudo/nom: probably needs a complete redo eventually

[20:21] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/555a3eba88

[20:22] <sirrobert> I have a compile error that says just "No object at index 85".  How can I track that down?

[20:22] <dalek> specs: 1a55450 | moritz++ | S32-setting-library/Exception.pod:

[20:22] <dalek> specs: [S32::Exception] X::Bind::NativeType now reports name of the variable

[20:22] <dalek> specs: review: https://github.com/perl6/specs/commit/1a55450ccc

[20:22] <sirrobert> there's no other context, except a .pir file (that doesn't get generated)

[20:23] <moritz> sirrobert: that's usually related to precompiled modules in some way

[20:23] <moritz> sirrobert: how old or new is your rakudo?

[20:23] <sirrobert> most recent star

[20:23] <sirrobert> but I was fiddling around with panda earlier =)  Let me take a look

[20:24] <moritz> rakudo doesn't like it when you precompile a module that has dependencies that aren't precompiled (or the precompiled version isn't loaded)

[20:24] <moritz> most recent rakudo from git gives a better error message

[20:24] <sirrobert> ok, I'll grab that one

[20:24] <sirrobert> should I remove the existing rakudo ?

[20:25] <sirrobert> completely, I mean -- and all installed modules and scripts

[20:25] <moritz> yes, the whole install dir

[20:25] <sirrobert> ok, thanks

[20:26] <dalek> doc: d1af529 | moritz++ | lib/X/Bind/NativeType.pod:

[20:26] <dalek> doc: document X::Bind::NativeType

[20:26] <dalek> doc: review: https://github.com/perl6/doc/commit/d1af52967e

[20:34] *** benabik left
[20:34] *** rvchangue left
[20:35] *** benabik joined
[20:41] *** rvchangue joined
[20:42] <dalek> doc: 9fed358 | moritz++ | lib/X/Attribute/Package.pod:

[20:42] <dalek> doc: document X::Attribute::Package

[20:42] <dalek> doc: review: https://github.com/perl6/doc/commit/9fed35881e

[20:45] <moritz> nr: class A { sub f() { has $.x } }

[20:45] <p6eval> niecza v19-31-g94c69fe: OUTPUT«===SORRY!===␤␤Attribute $!x declared outside of any class at /tmp/VJ4tWtSbRG line 1:␤------> class A { sub f() { has $.x ⏏} }␤␤Potential difficulties:␤  &f is declared but not used at /tmp/VJ4tWtSbRG line 1:␤------> [3…

[20:45] <p6eval> ..rakudo 009325:  ( no output )

[20:45] <sirrobert> ooh

[20:46] <moritz> r: class A { sub f() { has $.x } }; say A.new(x => 3).x

[20:46] <p6eval> rakudo 009325: OUTPUT«3␤»

[20:46] <moritz> std: class A { sub f() { has $.x } }

[20:46] <p6eval> std 235f71b: OUTPUT«ok 00:00 42m␤»

[20:47] *** nodmonkey left
[20:50] <moritz> just ~35 error classes left to document

[20:50] <moritz> "just"

[20:50] <sirrobert> heh

[20:51] * moritz should really automate some parts of it

[20:52] *** kaare_ left
[20:54] *** gongyiliao left
[20:54] <masak> $ ./perl6 -e 'macro four { my $q = quasi { 2 }; $q = quasi { 1 + {{{say $q.WHICH; $q}}} } for 1..2; $q }; say four'AST|-686369491820049320

[20:54] <masak> AST|-686369491821388980

[20:54] <masak> 3

[20:54] <masak> oops. ww.

[20:55] <masak> (but still a nice illustration of what I do and don't have working locally) :)

[20:55] <diakopter> :)

[20:56] * masak .oO( good thing it wasn't anything sekkrit! )

[20:58] <sirrobert> trying to install Class::Util (the module I published this morning) gets this: resolve stage failed for Class::Utils: Project Class::Utils not found in the ecosystem

[20:58] <sirrobert> Is there an additional step I overlooked?

[20:59] <moritz> maybe your local projects list is out of date?

[20:59] <sirrobert> I just reinstalled everything (5 minutes ago)

[20:59] <sirrobert> where is the list, so I can check?

[20:59] <moritz> $ panda update

[20:59] <moritz> Segmentation fault

[20:59] <moritz> oops.

[20:59] <sirrobert> heh

[21:00] <sirrobert> thanks, that seems to have fixed it

[21:00] <moritz> it seems you've spelled it Class::Util*s*

[21:00] <sirrobert> yeah, that was an interesting oversight =)

[21:01] <sirrobert> I guess I could change it now before it gets into usage

[21:01] <sirrobert> or just leave it and that's what it is =)

[21:07] <masak> the fact that it's List::Util but then List::MoreUtils seems to indicate that the 's' there is a good idea.

[21:07] <moritz> huh?

[21:07] * moritz doesn't comprehend the logic behind that statement

[21:07] <PerlJam> List::StuffThatShouldAlreadyBeInTheLanguage

[21:07] *** birdwindupbird left
[21:08] *** desertm4x left
[21:08] <masak> so does the fact that you thought your own module was called that :)

[21:08] <PerlJam> If Class::Utils has more than one utility, perhaps the "s" is warranted.  :)

[21:08] <PerlJam> Currently it seemes to only have one "util"

[21:10] *** skids left
[21:12] <sorear> 1. is it something which belongs in the setting?

[21:13] <sorear> 2. will it continue to make sense in the face of 6model changes?

[21:15] *** nebuchadnezzar left
[21:19] *** nebuchadnezzar joined
[21:25] <masak> moritz: the logic behind that statement being something like (1) consistency is nice, but (2) "List::MoreUtil" looks weird, and (3) if the namer of "List::Util" had anticipated (2) and valued (1) enough, then he might have named it "List::Utils".

[21:33] <masak> 'night, #perl6

[21:34] <japhb> o/

[21:43] <jnthn> Stepping through spectests is an awesome way to feel out places where the debugger user experience is LTA

[21:46] *** att left
[21:47] *** rvchangue left
[21:49] <japhb> jnthn++ # A debugger has been in my top 3 list of Rakudo desires for like a year now, THANK YOU

[21:53] *** rvchangue joined
[21:54] *** tokuhiro_ joined
[21:58] *** tokuhiro_ left
[22:04] <jnthn> japhb: Welcome. Enjoy it, ask for a commit bit if you find you want to patch it :)

[22:04] <japhb> Will do.

[22:13] <jnthn> 'night o/

[22:14] <japhb> o/

[22:17] *** gongyiliao joined
[22:26] <sergot> good night o/

[22:26] *** sergot left
[22:37] *** bluescreen10 left
[22:40] *** stopbit left
[22:43] *** whiteknight joined
[22:43] *** whiteknight is now known as Guest53496

[22:48] *** simcop2387 left
[22:48] *** simcop2387 joined
[22:53] *** benabik left
[23:06] *** skids joined
[23:21] *** fridim_ left
[23:24] *** cognominal joined
[23:27] <dalek> panda/verbose-list: 682dbf4 | (Geoffrey Broadwell)++ | lib/Panda/Fetcher.pm:

[23:27] <dalek> panda/verbose-list: Track source-revision in Fetcher

[23:27] <dalek> panda/verbose-list: review: https://github.com/tadzik/panda/commit/682dbf4f57

[23:27] <dalek> panda/verbose-list: 025c83b | (Geoffrey Broadwell)++ | lib/Panda/Fetcher.pm:

[23:27] <dalek> panda/verbose-list: Try harder to detect git URLs in Fetcher

[23:27] <dalek> panda/verbose-list: review: https://github.com/tadzik/panda/commit/025c83bc46

[23:27] <dalek> panda/verbose-list: cb876f0 | (Geoffrey Broadwell)++ | lib/Panda/Fetcher.pm:

[23:27] <dalek> panda/verbose-list: Save source-type in metadata when Fetcher autodetects it

[23:27] <dalek> panda/verbose-list: review: https://github.com/tadzik/panda/commit/cb876f06a8

[23:27] <dalek> panda/verbose-list: e47946f | (Geoffrey Broadwell)++ | lib/Panda/Fetcher.pm:

[23:27] <dalek> panda/verbose-list: Minor whitespace fix

[23:27] <dalek> panda/verbose-list: review: https://github.com/tadzik/panda/commit/e47946f0b2

[23:27] <dalek> panda/verbose-list: 1c443a5 | (Geoffrey Broadwell)++ | bin/panda:

[23:27] <dalek> panda/verbose-list: 'panda list' improvements: Add saved revision info for installed projects; rearrange columns for readability; only show extra columns when --verbose requested

[23:27] <dalek> panda/verbose-list: review: https://github.com/tadzik/panda/commit/1c443a5d5c

[23:27] <dalek> panda/verbose-list: 500690c | (Geoffrey Broadwell)++ | bin/panda:

[23:27] <dalek> panda/verbose-list: Clean up 'panda info' output and include saved info for installed projects

[23:27] <dalek> panda/verbose-list: review: https://github.com/tadzik/panda/commit/500690cf2b

[23:27] <dalek> panda/verbose-list: 5ea91f8 | (Geoffrey Broadwell)++ | TODO:

[23:27] <dalek> panda/verbose-list: Remove TODO items for completed verbose-list branch

[23:27] <dalek> panda/verbose-list: review: https://github.com/tadzik/panda/commit/5ea91f8106

[23:27] <dalek> panda: 2ba908f | (Geoffrey Broadwell)++ | lib/Panda/Ecosystem.pm:

[23:27] <dalek> panda: When installing, save a snapshot of that project's metainfo into the statefile

[23:27] <dalek> panda: review: https://github.com/tadzik/panda/commit/2ba908ff32

[23:27] <dalek> panda: d0553e2 | (Geoffrey Broadwell)++ | bin/panda:

[23:27] <dalek> panda: Display saved metainfo for installed projects when doing 'panda list'

[23:27] *** dalek left
[23:28] *** dalek joined
[23:28] *** ChanServ sets mode: +v dalek

[23:31] <japhb> phenny, tell tadzik, I just pushed a lot of stuff to panda; I suggest pulling and ./reboostrap.pl, and then enjoy my last few days of hacking.  :-)

[23:31] <phenny> japhb: I'll pass that on when tadzik is around.

[23:33] <japhb> phenny, tell tadzik, if you want to use the saved meta features on panda *itself* and its local-bootstrap, you should ./reboostrap.pl *twice*, because only after the first bootstrap will panda be saving all that info.

[23:33] <phenny> japhb: I'll pass that on when tadzik is around.

[23:34] *** mtk left
[23:35] *** gongyiliao left
[23:43] *** spider-mario left
