[00:01] *** godfrey999 left
[00:20] *** wolfman2000 left
[00:25] *** fgomez left
[00:27] *** japhb_ left
[00:27] *** Chillance left
[00:31] *** Araq left
[00:35] *** wolfman2000 joined
[00:44] *** sporous left
[00:46] *** sporous joined
[00:51] *** nif joined
[00:52] *** nif left
[01:15] *** da2ce7 joined
[01:16] *** nif joined
[01:17] *** nif left
[01:24] *** da2ce7 left
[01:24] *** [particle]1 joined
[01:27] *** [particle] left
[01:31] *** thou left
[01:37] *** snarkyboojum joined
[01:46] *** snarkyboojum left
[01:49] *** snarkyboojum joined
[01:55] *** fgomez joined
[01:57] *** nif joined
[01:58] *** jaldhar joined
[02:04] *** da2ce7 joined
[02:08] *** Transformer joined
[02:09] *** Transformer left
[02:09] *** nif left
[02:10] *** nif joined
[02:14] *** benabik joined
[02:15] *** nif left
[02:19] *** nif joined
[02:20] *** nif left
[02:21] *** nif joined
[02:21] *** orafu left
[02:21] *** orafu joined
[02:21] *** nif left
[02:28] *** nif joined
[02:30] *** nif left
[02:31] *** whiteknight left
[02:32] *** liuchong joined
[02:35] *** icwiener left
[02:39] *** nif joined
[02:42] *** da2ce7 left
[02:53] *** mikemol left
[02:53] *** nif left
[02:58] *** nif joined
[03:00] *** nif left
[03:01] *** mikemol joined
[03:07] *** icwiener joined
[03:24] *** godfrey999 joined
[03:31] *** plobsing joined
[03:36] *** _jaldhar joined
[03:36] *** jaldhar left
[03:39] *** thou joined
[03:40] *** _jaldhar is now known as jaldhar

[04:05] *** PacoAir left
[04:15] *** thelazydeveloper left
[04:40] *** birdwindupbird joined
[04:52] *** daniel-s left
[04:52] *** daniel-s joined
[04:54] *** tokuhirom left
[04:56] *** icwiener left
[04:56] *** icwiener joined
[05:03] *** mikemol left
[05:12] <moritz> \o

[05:17] <sorear> o/

[05:38] *** kaare_ joined
[05:52] *** agentzh joined
[05:53] *** tokuhirom joined
[06:26] *** birdwindupbird left
[06:32] *** iley joined
[07:03] *** iley left
[07:35] *** bruges_ joined
[07:35] *** bruges left
[07:45] *** brrt joined
[07:57] *** bruges joined
[07:59] *** bruges_ left
[08:00] *** fgomez left
[08:00] *** fgomez joined
[08:15] *** fsergot joined
[08:15] <fsergot> Morning o/ :)

[08:16] *** birdwindupbird joined
[08:17] *** PacoAir joined
[08:19] *** Vlavv` joined
[08:19] <dalek> rakudo/nom: 119fe3b | moritz++ | src/Perl6/Actions.pm:

[08:19] <dalek> rakudo/nom: allow "anon sub" again

[08:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/119fe3b5b8

[08:22] *** Vlavv_ left
[08:35] *** brrt left
[08:36] <moritz> p6: 1.foo

[08:36] <p6eval> rakudo 4373f0: OUTPUT«Method 'foo' not found for invocant of class 'Int'␤  in block <anon> at /tmp/mGHPkBuSS3:1␤␤»

[08:36] <p6eval> ..niecza v15-6-gefda208: OUTPUT«Unhandled exception: Unable to resolve method foo in class Int␤  at /tmp/P9Ecgi2bSK line 1 (mainline @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3842 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3843 (module-CORE @ 65) ␤  at /home/p6e…

[08:36] <p6eval> ..pugs: OUTPUT«*** No such method in class Int: "&foo"␤    at /tmp/BY44Th86z6 line 1, column 1 - line 2, column 1␤»

[08:50] *** hundskatt left
[08:53] *** fsergot left
[08:55] *** hundskatt joined
[08:56] *** fsergot joined
[09:00] *** Tene left
[09:00] <moritz> that error is thrown from parrot, not from rakudo or nqp :/

[09:01] *** Tene joined
[09:01] *** Tene left
[09:01] *** Tene joined
[09:02] *** thou left
[09:08] *** icwiener left
[09:13] <sorear> moritz: so what?  ...is this related to your semantic errors quest?

[09:15] *** pernatiy joined
[09:35] *** libertyprime left
[09:37] *** libertyprime joined
[09:39] <jnthn> sorear: Yes, the photo is very real. Straight off my camera with no manipulation.

[09:41] <jnthn> Full resolution one is at http://jnthn.net/photos/full/13711.jpg

[09:43] <jnthn> moritz: Yes, it is...and I don't have an easy answer on how to give it a typed exception :(

[09:45] <gfldex> 13711.jpg++

[09:49] <Ulti> did I imagine an online Try Perl 6 page similar to http://tryruby.org ? I swear it existed, but can't find it via google

[09:50] <gfldex> there used to be one

[09:50] <Ulti> I remember it was a little broken, but figured if the source was around I'd have a go hacking on it

[09:51] <sorear> try.rakudo.org existed once

[09:51] <jnthn> It was at try.rakudo.org

[09:51] <jnthn> ah, sorear beat me to it

[09:51] <Ulti> is that on github somewhere?

[09:52] <sorear> jnthn: heh. my eyes-- continue to insist that is a plastic model of a glacier...

[09:52] <gfldex> that would be one big chunk of plastic :)

[09:53] <Ulti> or a blue washing up sponge held in front of some mountains

[09:53] <sorear> gfldex: False perspective.

[09:53] * sorear -> sleep

[09:54] <Ulti> looks like moritz' brain child https://github.com/moritz/try.rakudo.org

[09:54] *** fgomez left
[09:57] <Ulti> oh neat its a mojolicious app

[10:01] *** spider-mario joined
[10:15] *** zhutingting joined
[10:20] *** fsergot left
[10:23] *** whiteknight joined
[10:25] <cognominal_> whoa, the output of --target=parse in last jnthn branch is scary.   piping it thru  | grep 'Cursor.*!name'    to make sense of it.

[10:36] <jnthn> cognominal_: --rxtrace may be more helpful

[10:38] <cognominal_> not so :   "rxtrace" => PMC 'Eval' { ... }

[10:38] <cognominal_> oops 

[10:39] <cognominal_> I typed --target=rxtrace

[10:39] <jnthn> Not --target=rxtrace

[10:39] <jnthn> right :)

[10:49] *** icwiener joined
[10:54] *** snearch joined
[10:58] *** pernatiy left
[10:59] *** liuchong left
[11:05] *** pernatiy joined
[11:17] *** thelazydeveloper joined
[11:19] *** Chillance joined
[11:55] <dima> is there any perl6 activity going on in berlin that you know of?

[11:56] *** icwiener left
[11:57] <moritz> no

[11:58] <jnthn> .oO( Perlin )

[11:59] <dima> hehe

[12:00] <moritz> dima: but if you ever vist the area around Nürnberg, drop in for a mini hackathon :-)

[12:01] <dima> I'm still reading up on the last 10 years of blogposts to get a feel and see if I might be able to do something useful - not realy a compiler hacker ;)

[12:02] <moritz> well, there are lots of things to do besides hacking on the compilers

[12:03] <moritz> writing tests, writing modules, writing docs, helping other people, organize hackathons, blog about Perl 6, ...

[12:03] <moritz> the list is nearly endless

[12:05] <spider-mario> I’ve been wondering,

[12:05] <spider-mario> is it planned to make tco or at least tro part of the spec?

[12:05] <dima> true. I'll look into doing a couple of smaller projects with p6 and see where it leads me. I'm mainly doing (and learning on the go) NLP and ML stuff right now, so maybe that might be an opportunity

[12:05] <spider-mario> o

[12:05] <spider-mario> (oops)

[12:06] <moritz> spider-mario: what is tco/tro?

[12:06] <spider-mario> tail call optimization

[12:06] <spider-mario> and tail recursion optimization

[12:06] <spider-mario> (tre for elimination might be more common than tro)

[12:06] <moritz> spider-mario: the spec is silent on possible optimizations, and I think it'll stay that way

[12:07] <jnthn> Yeah, I'd say the same as what moritz said

[12:07] <spider-mario> scheme’s standard does enforce tail call optimization because it is so idiomatic

[12:07] <moritz> but we have loops in the language

[12:08] <moritz> so the pressure to use use tail recursion is a lot lower

[12:08] <jnthn> If the thing you tail call uses CALLER:: for example then you'd best not apply the optimization.

[12:08] <spider-mario> so do they

[12:08] <spider-mario> hm, indeed

[12:08] <moritz> well, it's also a cultural thing

[12:09] <jnthn> (OK, with CALLER:: potentially there's a transformation...)

[12:10] <moritz> even though there are loops in lisp, all the beginner tutorial teach you how to do stuff with recursion

[12:10] <moritz> that's a bit differnt in p6 land

[12:10] *** JimmyZ joined
[12:10] <spider-mario> that’s true

[12:13] <spider-mario> hm, according to http://www.perlmonks.org/?node_id=161611 “Larry has already said that simple tail recursion in Perl 6 will be optimized”

[12:14] <spider-mario> (it’s from 10 years ago, however)

[12:15] <moritz> well, ten years ago people still planned to have a reference implementatioin

[12:18] *** NamelessTee joined
[12:19] *** mikemol joined
[12:22] *** JimmyZ left
[12:26] *** fsergot joined
[12:32] *** _jaldhar joined
[12:32] *** jaldhar left
[12:34] *** sdo joined
[12:34] <sdo> hello

[12:34] <sdo> I would like to know if there is a way to install perl6 with cpan utility?

[12:35] <tadzik> there is an implementation which you can install from CPAN yes, although it's not the most advanced one

[12:35] <spider-mario> (perlito)

[12:35] <tadzik> the two major implementations, rakudo and niecza are not installable from cpan

[12:36] <sdo> ok because I have a case where I have access to the net but installation with tarball packages are not possible 

[12:37] <moritz> you can download them via git, no tarballs necessary

[12:37] <sdo> because I can't use github and clone repository locally

[12:38] <moritz> why not?

[12:40] <moritz> (I'm just curious; it seems like an odd restriction to be able to access CPAN but not github)

[12:44] <sdo> ok now I figure out is there a tarball where there is no call to github?

[12:44] <moritz> I think that rakudo star tarball has everything bundled

[12:44] <moritz> and you can download niecza releases too

[12:45] <sdo> can I have the link?

[12:45] *** am0c left
[12:45] <jnthn> https://github.com/rakudo/star/downloads

[12:46] <moritz> https://github.com/downloads/rakudo/star/rakudo-star-2012.02.tar.gz 

[12:47] <sdo> ok I try and if there is a problem I'll ask questions. Thanks

[12:47] <moritz> https://github.com/downloads/sorear/niecza/niecza-16.zip

[12:52] <dima> ~>

[12:53] <dima> sorry, ssh was hanging

[12:55] <sdo> thanx guys

[12:56] <spider-mario> if it’s a proxy that prevents the use of the git protocol, github enables https access too, sdo

[13:02] * moritz strongly advises to get a real internet connection and a machine where you can install stuff.

[13:05] <spider-mario> personally, I get rakudo from its git repository, then perl Configure.pl --prefix=$HOME/perl6 --gen-parrot --gen-nqp

[13:05] <spider-mario> $HOME/perl6/bin is in my PATH

[13:05] <spider-mario> and from time to time, I git pull; make; make install

[13:07] * moritz symlinks ~/p6/rakudo/install/bin/perl6 to ~/bin/ which is in $PATH

[13:07] <spider-mario> (btw, it’s quite active, thank you guys for all the hard work)

[13:07] <spider-mario> (I love this community)

[13:07] * moritz too

[13:08] *** zhutingting left
[13:12] *** Chillance left
[13:16] *** fsergot left
[13:24] *** ggoebel left
[13:32] *** ggoebel joined
[14:01] *** snearch left
[14:01] <sdo> ok everything is tip top with perl6

[14:01] *** lichtkind joined
[14:01] <sdo> compilation works fine

[14:02] <sdo> everything is great

[14:02] <sdo> I am on mac OSX

[14:02] <sdo> thanks again

[14:02] *** sdo left
[14:06] <lichtkind> morning

[14:07] <lichtkind> TimToady: can cou please tell me what $*ON_DIE and $*ON_WARNING are about or if we can just drop them

[14:08] *** birdwindupbird left
[14:09] <lichtkind> and btw $?XVM is also such candidate to be fall

[14:09] <lichtkind> because on one hand he should have sisters like $?XKernel

[14:10] <lichtkind> or (and thats my fav) just go into a method like name did

[14:10] <lichtkind> just for konsistancy

[14:10] <lichtkind> nuff of loneely ranting or lokk like a beggar chatting with  himself

[14:13] *** ggoebel left
[14:16] <lichtkind> but i have still one why is ::?Class not $?Class.name ?

[14:21] *** Chillance joined
[14:25] <jnthn> lichtkind: There are both, but only ::?CLASS can go in a type slot.

[14:25] <jnthn> lichtkind: $?CLASS won't parse as a class name.

[14:25] <jnthn> er, type name.

[14:33] *** [particle]1 is now known as [particle]

[14:56] <masak> yo, #perl6

[14:56] <tadzik> yo dawg

[14:58] <spider-mario> yo dawg

[14:58] <masak> I know you like Perl...

[14:58] <spider-mario> I heard you like Perl 6…

[14:58] <spider-mario> oh

[14:58] <spider-mario> yours is better

[14:58] <masak> :)

[14:59] <masak> "Perl 6: putting a Perl in your perl so you can Perl while you Perl since 2000."

[15:02] <spider-mario> well, since “you need a Perl 6 compiler to implement a Perl 6 compiler”… :::)

[15:03] * masak adjusts his mental model of spider-mario as being a six-eyed alien in Rouen

[15:03] <spider-mario> :D

[15:03] <spider-mario> I’m at my parents’, right now

[15:04] <spider-mario> at ~ 20km from Paris

[15:04] <jnthn> o/ masak 

[15:04] <masak> jnthn! \o/

[15:04] *** JimmyZ joined
[15:04] *** ggoebel joined
[15:07] <cognominal_> spider-mario, where that? I am leaving at Arcueil.

[15:07] <spider-mario> Montigny-lès-Cormeilles

[15:07] <lichtkind> jnthn: thanks for enlightenment but rakudo still does $*OS which is officially now $*KERNEL

[15:08] <cognominal_> spider-mario, and where do you live usually?

[15:09] <spider-mario> at my parents’ during week-ends and holidays, Rouen when I go to my school

[15:09] <cognominal_> are you coming to the French Perl workshop?

[15:09] <cognominal_> there will be a perl 6 workshop.

[15:10] <cognominal_> http://journeesperl.fr/fpw2012/

[15:10] <spider-mario> I didn’t know about that

[15:11] <spider-mario> but Strasbourg is a little far :/

[15:11] <cognominal_> masak and jonathan are presenting talks, I hope some other from this channel will do too.

[15:15] <tadzik> I'd love to come

[15:16] <cognominal_> BooK will provide some Chartreuse as usual…    http://en.wikipedia.org/wiki/Chartreuse_(liqueur)

[15:17] *** nif joined
[15:17] *** nif left
[15:18] <cognominal_> By coincidence, Chartreuse is one of TimToady favorite colors.

[15:20] <tadzik> gah, Ratel's broken on nom now

[15:23] <jnthn> tadzik: nom regression?

[15:23] <lichtkind> masak: i really searched the rakudo source but i cant see wehere $*OS is defined

[15:24] <tadzik> jnthn: apparently. A fresh one too

[15:24] <tadzik> jnthn: I'll provide a test case

[15:26] <tadzik> r: https://gist.github.com/2329719

[15:26] <p6eval> rakudo 4373f0: OUTPUT«===SORRY!===␤Variable $.emit-hunk(0) used where no 'self' is available␤at eval_0:1␤»

[15:26] <tadzik> n: https://gist.github.com/2329719

[15:26] <p6eval> niecza v15-6-gefda208: OUTPUT«Potential difficulties:␤  %attrs is declared but not used at /tmp/R_pRyPlZi5 line 56:␤------> [32m    method render(*[33m⏏[31m%attrs) {[0m␤␤Unhandled exception: Variable $.emit-hunk(0) used where no 'self' is available␤  at /home/p6eval/niecza/boot/lib/…

[15:26] <tadzik> so it may be that it's Ratelbug

[15:27] <tadzik> class Foo { has $.a = 5; method bar { eval 'say $.a' } }; Foo.new.bar

[15:27] <tadzik> r: class Foo { has $.a = 5; method bar { eval 'say $.a' } }; Foo.new.bar

[15:27] <p6eval> rakudo 4373f0: OUTPUT«===SORRY!===␤Variable $.a used where no 'self' is available␤at eval_0:1␤»

[15:27] <tadzik> there we are

[15:28] <tadzik> n: class Foo { has $.a = 5; method bar { eval 'say $.a' } }; Foo.new.bar

[15:28] <jnthn> Oh. Interesting. :)

[15:28] <p6eval> niecza v15-6-gefda208: OUTPUT«Unhandled exception: Variable $.a used where no 'self' is available␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1362 (die @ 3) ␤  at /home/p6eval/niecza/src/STD.pm6 line 5722 (STD.sorry @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 5498 (ANON @ 2)…

[15:29] *** tokuhirom left
[15:29] *** tokuhirom joined
[15:30] <jnthn> Of course, the eval doesn't run until runtime, so the $*HAS_SELF contextual is long gone.

[15:30] <jnthn> Well, there's a fresh one for the purpose of the eval, of course.

[15:31] <tadzik> I'm wondering if it ever worked post-bs

[15:32] <jnthn> It wasn't bs

[15:32] <jnthn> It was when we implemented $*HAS_SELF from STD that woulda busted it.

[15:34] *** tokuhirom left
[15:39] *** stevieb_ joined
[15:39] <stevieb_> hey all :) I just want to shout out to moritz with appreciation for sharing my blogpost 

[15:43] *** agentzh left
[15:44] *** stevieb_ left
[15:44] <TimToady> that's spelled "moritz++" around here

[15:47] *** Psyche^ joined
[15:50] <lichtkind> TimToady: sorry for so much requests at once but are you in mood of than var anme thinking?

[15:51] *** Patterner left
[15:51] *** Psyche^ is now known as Patterner

[16:00] *** JimmyZ left
[16:01] <TimToady> yes, there should probably also be an XKERNEL, unless we rethink the whole cross-complation namespace issue some other way

[16:01] <TimToady> *compilation

[16:02] *** pernatiy left
[16:03] *** pernatiy joined
[16:03] <TimToady> I'm not convinced that $*ON_DIE and $*ON_WARNING are redundant with exception handlers, since they're policy hooks for what to do before a throw

[16:07] <TimToady> I guess I'm okay with changing $~Q to $~Quote, though anyone who knows what Q does will surely figure out what the $~Q slang

[16:07] <jnthn> aside the redundant counter variable...

[16:07] <jnthn> er, wrong window

[16:08] <TimToady> maybe we should rename $~Regex to $~rx instead  :P

[16:12] <lichtkind> haha

[16:12] <lichtkind> thanks

[16:13] <lichtkind> TimToady: so i can quote you on "I'm okay with changing $~Q to $~Quote,"? :)

[16:13] <lichtkind> TimToady: and i actually just wanted know what $*ON_DIE and $*ON_WARNING do in detail

[16:22] <lichtkind> allright my last issue for now, do we still need $?ARCH ?

[16:29] <TimToady> no set of names is adequate to describe a fractal environment

[16:29] <TimToady> bbl &

[16:36] <masak> lichtkind: $*OS is at src/core/terms.pm:52

[16:37] <lichtkind> masak: have a commit acess to rakud?

[16:37] <masak> yes, but don't do pull requests through me, I'm only intermittently here tonight.

[16:38] <lichtkind> masak: why whould i do that if i can push directly?

[16:38] <masak> why would you ask about my commit bit if you can push directly?

[16:39] <lichtkind> TimToady: so $?Arch is officially gone?

[16:42] *** lichtkind_ joined
[16:42] <lichtkind_> masak: i asked you if i can get a comit bit

[16:45] *** lichtkind left
[16:45] *** lichtkind_ is now known as lichtkind

[16:56] *** raiph joined
[17:07] <lichtkind> studying https://github.com/rakudo/rakudo/blob/nom/src/core/terms.pm tells me there needs some extra effort to make $*KERNEL an object with  methods like name and version

[17:15] *** raiph left
[17:23] *** s1n left
[17:25] *** JimmyZ joined
[17:25] * JimmyZ can't open irc.perl6.org/

[17:26] *** xinming left
[17:29] *** xinming joined
[17:34] *** JimmyZ left
[17:39] *** s1n joined
[17:40] *** stevieb_ joined
[17:41] <lichtkind> i found another reason why $~Quote is besster it has all the rules not only what Q does but plus all the adverbs

[17:41] *** leprevost left
[17:41] * colomon has no idea all thise $~Quote / $~Q talk is about....

[17:43] <geekosaur> germlish?

[17:45] <lichtkind> yes

[17:45] <lichtkind> i meant better

[17:45] <lichtkind> an s came in

[17:45] <lichtkind> geekosaur: yet another geman more here?

[17:46] <colomon> bester is nice word; clear meaning, and it makes me think of the author, and Babylon Five...

[17:46] <lichtkind> colomon: i just comprehend naming rules of special vars and dids some suggesttion how make names more consistent

[17:46] *** araujo left
[17:46] <lichtkind> colomon: and larry was not opposed rename $~Q tu $~Quote

[17:47] <lichtkind> i love babylon five

[17:47] <colomon> lichtkind: I know you're not the original source of it, I've already seen it in e-mail today.  I just can't recall ever hearing of $~Q before.  Indeed, I don't remember $~ being a thing at all...

[17:47] <colomon> lichtkind: you remember Bester, then, right?  Great character.

[17:49] <lichtkind> a

[17:51] <lichtkind> ja

[17:54] *** stevieb_ left
[17:55] *** s1n left
[18:00] <lichtkind> chief of psi choir

[18:01] *** am0c joined
[18:06] *** am0c left
[18:07] *** araujo joined
[18:07] *** araujo left
[18:07] *** araujo joined
[18:07] <jnthn> .oO( Did the psi choir do a cover of Queen's "Under Pressure"? )

[18:09] *** s1n joined
[18:09] <colomon> and here I was picturing a choir that sang only with the power of their minds...

[18:12] <colomon> lichtkind: psi could also be Pressure per Square Inch, and a choir is a singing group.  (A "corps" is "a body of people engaged in a particular activity"; it's the Psi Corps in B5.)

[18:12] <colomon> but psi choir truly is a lovely image!

[18:24] <lichtkind> colomon: i had so much to ponder which i call of thelepath i would belong too

[18:25] <lichtkind> colomon: or which callcertain impression belonge

[18:25] <lichtkind> d

[18:43] *** s1n left
[18:44] <timotimo> isn't he called Festerbester?

[18:44] <timotimo> i clearly remember him being referred to as "festerbester"

[18:45] <timotimo> he wasn't very good friends with commander sherripie, right?

[18:48] <lichtkind> btw best pun last week from a python fan: pathon - like guido indented it :)

[18:49] <lichtkind> python

[18:56] *** s1n joined
[18:58] <sorear> good * #perl6

[19:02] <lichtkind> good moin

[19:03] <lichtkind> TimToady: can i push the change of $~Q and delete of $*ARCH ?

[19:05] *** birdwindupbird joined
[19:06] *** simcop2387 left
[19:08] *** simcop2387 joined
[19:30] *** fglock joined
[19:41] *** fsergot joined
[19:44] <moritz> \o

[19:46] <fglock> moritz: o/

[19:46] <sorear> o/

[19:48] <fsergot> \o

[19:58] <tadzik> o/

[19:59] *** fsergot left
[20:01] *** stevieb_ joined
[20:01] *** fsergot joined
[20:02] *** nif joined
[20:05] *** nif left
[20:07] *** ggoebel left
[20:08] *** stevieb_ left
[20:11] *** ggoebel joined
[20:28] *** Trashlord left
[20:30] <[Coke]> are we playing plinko?

[20:33] <[Coke]> jnthn++ nice email response to allison

[20:35] *** Trashlord joined
[20:35] <moritz> indeed

[20:37] *** fglock left
[20:39] <[Coke]> p: my uint $a; $a=3;

[20:39] <p6eval> pugs:  ( no output )

[20:39] <moritz> pugs just ignores type constraints

[20:40] <moritz> (except when multi-dispatching, I think)

[20:40] *** Araq joined
[20:45] *** nif joined
[20:47] <[Coke]> which is fine, as it gets me some passes.

[20:49] *** kaare_ left
[20:50] *** fsergot left
[20:58] *** Araq left
[21:12] <lichtkind> [Coke]: its on p6l?

[21:15] <tadzik> n: my %a = POST => 1;

[21:15] <p6eval> niecza v15-6-gefda208: OUTPUT«Potential difficulties:␤  %a is declared but not used at /tmp/qjrJEwgsqK line 1:␤------> [32mmy [33m⏏[31m%a = POST => 1;[0m␤␤»

[21:15] <tadzik> perl6: my %a = POST => 1;

[21:15] <p6eval> pugs:  ( no output )

[21:15] <p6eval> ..niecza v15-6-gefda208: OUTPUT«Potential difficulties:␤  %a is declared but not used at /tmp/B9QZZj74G8 line 1:␤------> [32mmy [33m⏏[31m%a = POST => 1;[0m␤␤»

[21:15] <p6eval> ..rakudo 4373f0: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix => instead at line 1, near " 1;"␤»

[21:15] <tadzik> is masakbot around?

[21:16] <[Coke]> p: subset Even of Int where { $_ % 2 == 0 };

[21:16] <p6eval> pugs:  ( no output )

[21:17] <[Coke]> lichtkind: the email? perl6-compiler

[21:17] <lichtkind> ah thanks

[21:20] *** Guest34170 is now known as xenu

[21:21] *** Trashlord left
[21:22] *** Trashlord joined
[21:31] <dalek> roast: 55c49fa | coke++ | S02-types/ (6 files):

[21:31] <dalek> roast: pugs fudge

[21:31] <dalek> roast: review: https://github.com/perl6/roast/commit/55c49faaf7

[21:31] <dalek> Pugs.hs: 39d6aac | coke++ | t/spectest.data:

[21:31] <dalek> Pugs.hs: run (fudged) test

[21:31] <dalek> Pugs.hs: review: https://github.com/perl6/Pugs.hs/commit/39d6aace12

[21:31] <dalek> Pugs.hs: f01f555 | coke++ | t/spectest.data:

[21:31] <dalek> Pugs.hs: run (fudged) tests

[21:31] <dalek> Pugs.hs: review: https://github.com/perl6/Pugs.hs/commit/f01f555b15

[21:31] <dalek> Pugs.hs/so: 997861d | coke++ | t/spectest.data:

[21:31] <dalek> Pugs.hs/so: run (fudged) test

[21:31] <dalek> Pugs.hs/so: review: https://github.com/perl6/Pugs.hs/commit/997861df40

[21:32] <[Coke]> agh, that commit wasn't supposed to be on so. I caught it right after I committed, move dit to master locally, ammended it, and then forgot I had it on so!

[21:33] *** fsergot joined
[21:45] <dalek> roast: 99f26b6 | coke++ | S02-types/ (2 files):

[21:45] <dalek> roast: pugs fudge

[21:45] <dalek> roast: review: https://github.com/perl6/roast/commit/99f26b60cc

[21:46] <dalek> Pugs.hs: 5a921bf | coke++ | t/spectest.data:

[21:46] <dalek> Pugs.hs: run (fudged) test

[21:46] <dalek> Pugs.hs: review: https://github.com/perl6/Pugs.hs/commit/5a921bf029

[21:46] *** lestrrat left
[21:47] *** lestrrat joined
[22:06] *** raiph joined
[22:07] *** fsergot left
[22:12] *** whiteknight left
[22:14] <tadzik> Bailador::Test arises! https://github.com/tadzik/Bailador/blob/master/t/01-route-existance.t

[22:17] *** nif left
[22:18] <jnthn> tadzik++ :D

[22:18] <pmichaud> jnthn: ping

[22:19] *** nif joined
[22:20] <jnthn> pmichaud: pong

[22:20] <pmichaud> re: the discussion on rakudo packaging.... to your knowledge, are there any places where Rakudo "pokes indiscriminately into Parrot internals"?

[22:20] <pmichaud> I know we had them at one time; I'm curious to know if they still exist.

[22:21] <pmichaud> (are there any places where we do things outside of the normal APIs?)

[22:21] <jnthn> The binder does because there simply *isn't* any API way at present to see if we're being passed native types.

[22:21] <pmichaud> any others?

[22:21] <jnthn> Possibly exceptions (more)

[22:22] <jnthn> Though it's possible the stuff mls++ calls is all considered Parrot API.

[22:22] <pmichaud> okay, thanks

[22:22] <jnthn> I know he was working in both Parrot and Rakudo when he did that stuff.

[22:22] <jnthn> So one would hope that we're doing API things.

[22:23] <jnthn> All this said - there may be places that aren't strictly "guts poking" but make assumptions.

[22:23] <jnthn> Can't think of an example off hand.

[22:24] <jnthn> pmichaud: What I think *is* significant is that none of the Parrot bumps I mentioned had something in the commit message saying "we were poking at stuff we shouldn't have been, thus this change to re-sync"

[22:24] <jnthn> pmichaud: Furthermore, the binder actually has a comment calling out explicitly where we are knowingly going poking.

[22:25] <pmichaud> yeah.  Allison is primarily wanting to know why we require newer Parrots and can't stick to older ones on our releases.

[22:26] <jnthn> pmichaud: Yeah, I just saw her latest reply to mine.

[22:27] <jnthn> pmichaud: I think it comes down to resource allocation at some level.

[22:30] <jnthn> (e.g. if we have to go out of our way to be backward compatible further back, it takes time/effort)

[22:32] <tadzik> good night #perl6

[22:32] <jnthn> 'night tadzik 

[22:32] <dima> btw, just a curious - do you use any special tags in your issue-tracking to mark issues which can be solved by uninitiated? hbase has a "noob" tag ;)

[22:33] <pmichaud> I didn't see her reply

[22:33] <pmichaud> let me check before I send my email

[22:33] *** hundskatt left
[22:43] <pmichaud> do we have the case of NQP depending on a library in Parrot that depends on NQP?

[22:43] <pmichaud> I don't think we do.

[22:44] <jnthn> ...how would that work? :)

[22:44] <jnthn> Certainly not on new NQP.

[22:44] <pmichaud> Allison draws that conclusion in her reply; I'm going to say "it doesn't happen"

[22:45] <jnthn> I suspect it's confusion over NQPs. :)

[22:45] <pmichaud> I suspect so.

[22:45] <jnthn> Parrot depends on nqp-rx.

[22:45] <jnthn> Which is bundled within Parrot.

[22:48] <spider-mario> what is it?

[22:48] <spider-mario> (if I may ask)

[22:52] <jnthn> spider-mario: Which "it"? :)

[22:52] <spider-mario> nqp-rx

[22:52] <jnthn> A previous generation of NQP.

[22:52] <spider-mario> oh, ok

[22:52] <spider-mario> thanks

[22:56] <pmichaud> what's up with https://github.com/perl6/nqp/commit/242f6e5997f6c454246fcf97b8a2a5d038d95931 ?

[22:56] <pmichaud> (the getprop opcode change)

[22:57] *** birdwindupbird left
[22:57] <jnthn> pmichaud: getprop has always had its arguments backwards compared to getattribute

[22:57] <jnthn> pmichaud: Somebody decided they should do something about that.

[22:58] <pmichaud> jnthn: was that somebody a parrot dev or was it done as a rakudo/nqp request?

[22:58] <jnthn> Parrot.

[22:58] <pmichaud> okay

[22:58] <jnthn> pmichaud: I'm fairly certain the dev in question gave us a patch.

[22:58] <pmichaud> yes, I agree

[22:58] <pmichaud> I'm just checking before writing.  :)

[22:58] <pmichaud> (yes, it was bacek++)

[22:59] <pmichaud> better would've been to introduce a new opcode with the correct ordering, than to make an incompatible API change

[22:59] <jnthn> Aye

[22:59] <jnthn> Well

[22:59] <jnthn> In terms of backward compat, yes.

[22:59] <pmichaud> but it does explicitly illustrate for Allison that the problems here aren't really with Rakudo/NQP

[22:59] <pmichaud> Allison says we should keep track of a "minimum version of Parrot" ; I agree, but that patch means that our minimum version would've just bumped to 4.2.0

[23:00] <pmichaud> and it was completely out of our control

[23:00] <jnthn> Aye

[23:02] <jnthn> "I do get a regular series of unusual requests from the Rakudo packagers" ==> I'm curious what those are.

[23:02] <pmichaud> I know what's happening -- I'm finishing up my email on it now.

[23:02] <jnthn> ah, cool

[23:02] <jnthn> pmichaud++

[23:02] <pmichaud> Essentially, the Rakudo packagers are pushing to have the latest releases of rakudo

[23:02] <pmichaud> and they're limited by the version of Parrot

[23:02] *** raiph left
[23:03] <pmichaud> so they're trying to get around that limitation.  What needs to happen is that the packagers use whatever version of Rakudo corresponds to the version of Parrot

[23:06] *** NamelessTee left
[23:07] *** PacoAir left
[23:14] *** hundskatt joined
[23:17] *** raiph joined
[23:20] *** spider-mario left
[23:25] <lichtkind> raiph:  ready

[23:28] <sorear> pmichaud: How hard would it be to allow Rakudo to use *newer* parrots?

[23:28] <sorear> do we generally depend on an exact version, or a "4.2.0 or later" version?

[23:28] *** ggoebel left
[23:29] *** ggoebel joined
[23:31] <jnthn> sorear: I'm pretty sure laters "just work", or at least the Configure script doesn't complain about them.

[23:31] <pmichaud> message sent

[23:32] <pmichaud> sorear: PARROT_REVISION is a "this version or newer" marker

[23:32] <pmichaud> i.e., we expect parrots newer than PARROT_REVISION to still work.  Parrot doesn't always oblige.

[23:33] <pmichaud> for example, 4.2.0 isn't backward compatible with 4.1.0

[23:44] * jnthn -> sleep, night o/

[23:58] <dalek> specs: 62f3a4b | (Herbert Breunung)++ | S02-bits.pod:

[23:58] <dalek> specs: renaming $~Q to $~Quote okayed by $*Larry

[23:58] <dalek> specs: review: https://github.com/perl6/specs/commit/62f3a4ba17

[23:58] <dalek> specs: 967ebce | (Herbert Breunung)++ | S28-special-names.pod:

[23:58] <dalek> specs: removed $*ARCH and $*XARCH

[23:58] <dalek> specs: review: https://github.com/perl6/specs/commit/967ebce2df

[23:58] <lichtkind> good night jnthn 

