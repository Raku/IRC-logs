[00:05] *** Psyche^ joined
[00:07] *** rindolf left
[00:09] *** Patterner left
[00:09] *** Psyche^ is now known as Patterner

[00:15] <jnthn> 'night, #perl6

[00:16] *** Chillance left
[00:27] *** genehack joined
[00:35] *** xinming_ left
[00:37] *** xinming joined
[00:42] *** lichtkind left
[00:44] <[Coke]> tadzik: you still here?

[00:49] <[Coke]> phenny: tell tadzik that I cannot reproduce the panda install error. I blame insufficient beer.

[00:49] <phenny> [Coke]: I'll pass that on when tadzik is around.

[00:54] <[Coke]> er, where does Rakudo::Debugger get installed?

[00:54] <[Coke]> (when you install via panda)

[00:56] <[Coke]> ah, there it is.

[00:59] <flussence> I got my panda working too... had to blow away the entire rakudo/install directory, then update my external panda.git clone and run bootstrap.pl in there. For some reason the one that gets put into install/lib/x/y/z/w/parrot/foobar/panda/src/panda/ was full of 0-byte files - took me a while to figure out why running bootstrap from there didn't work...

[01:00] <[Coke]> yay, I can now perl6-debug my t1 entry and figure out why it started failing! tadzik++ jnthn++ masak++

[01:01] <[Coke]> jnthn: is there a way to do something like "perl6-debug code < inputs" ?

[01:02] *** lawrmcfa left
[01:02] <diakopter> it doesn't just work?

[01:03] <[Coke]> r: say 1

[01:03] <p6eval> rakudo 22518b: OUTPUT¬´1‚ê§¬ª

[01:03] <[Coke]> diakopter: er, yes, but not how I want. I want it to work like perl6 < inputs

[01:04] <[Coke]> not like I'm typing things into perl6-debug.

[01:05] *** anuby joined
[01:05] <[Coke]> r: say "3";‚ê§__END__‚ê§say "4";

[01:05] <p6eval> rakudo 22518b: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Undeclared name:‚ê§    __END__ used at line 2‚ê§‚ê§¬ª

[01:07] <[Coke]> std: say "3";‚ê§__END__‚ê§say "4";

[01:07] <p6eval> std a8bc48f: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Undeclared name:‚ê§    '__END__' used at line 2‚ê§Check failed‚ê§FAILED 00:00 41m‚ê§¬ª

[01:13] *** atrodo left
[01:13] *** cognominal left
[01:14] *** anuby_ joined
[01:14] *** cognominal joined
[01:16] *** anuby left
[01:19] *** atrodo joined
[01:25] *** bowtie left
[01:25] *** atrodo left
[01:27] *** anuby joined
[01:31] *** anuby_ left
[01:37] *** _sivoais is now known as sivoais

[01:39] *** telex left
[01:40] *** telex joined
[01:49] *** atrodo joined
[02:01] *** FROGGS_ joined
[02:04] *** FROGGS left
[02:43] <dalek> perl6-bench: 8d3b8f3 | (Geoffrey Broadwell)++ | README:

[02:43] <dalek> perl6-bench: Further README improvements, including tips on preventing benchmark bogosity

[02:43] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/8d3b8f3046

[02:44] *** yakshavr left
[02:46] *** yakshavr joined
[03:09] *** noggle_ joined
[03:13] *** noggle left
[03:16] *** grondilu left
[03:25] *** xinming left
[03:27] *** xinming joined
[03:39] *** jaldhar joined
[03:39] *** thou left
[03:45] *** xinming left
[03:54] *** hash_table left
[03:57] *** cognominal left
[04:14] *** lawrmcfa joined
[04:14] <shachaf> seen ingy

[04:14] <aloha> ingy was last seen in #perl6 4 days 2 hours ago joining the channel.

[04:21] *** fgomez left
[04:31] *** asdf12 joined
[04:49] *** sbox left
[04:50] *** sbox joined
[04:51] *** atrodo left
[05:03] *** sbox left
[05:09] *** asdf12_ joined
[05:12] *** asdf12 left
[05:14] *** telex left
[05:14] *** sbox joined
[05:16] *** kurahaupo left
[05:20] *** telex joined
[05:23] *** lawrmcfa left
[05:24] *** anuby left
[05:24] *** anuby joined
[05:30] *** telex left
[05:35] *** telex joined
[05:43] *** SamuraiJack joined
[05:44] *** Kharec joined
[05:50] *** skids left
[05:57] *** SamuraiJack left
[05:58] <Bucciarati> p6eval: use rakudo

[05:58] <Bucciarati> std: use rakudo

[05:58] <p6eval> std a8bc48f: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Cannot locate module rakudo at /tmp/GUS3E9rMxL line 1 (EOF):‚ê§------> [32muse rakudo[33m‚èè[31m<EOL>[0m‚ê§Check failed‚ê§FAILED 00:00 41m‚ê§¬ª

[05:59] <Bucciarati> hrm

[05:59] *** SamuraiJack joined
[05:59] *** SamuraiJack left
[05:59] <sorear> Bucciarati: what are you trying to do?

[06:01] *** popl left
[06:02] <Bucciarati> I'm trying to use rakudo, clearly  :)  but I got it backwards wrt the bots

[06:02] <Bucciarati> std: 1+1

[06:02] <p6eval> std a8bc48f: OUTPUT¬´ok 00:00 42m‚ê§¬ª

[06:02] <Bucciarati> std: say 1+1

[06:02] <p6eval> std a8bc48f: OUTPUT¬´ok 00:00 42m‚ê§¬ª

[06:03] <sorear> rakudo: say "hi Bucciarati"

[06:03] <p6eval> rakudo 22518b: OUTPUT¬´hi Bucciarati‚ê§¬ª

[06:03] <Bucciarati> rakudo: say 1+1

[06:03] <p6eval> rakudo 22518b: OUTPUT¬´2‚ê§¬ª

[06:03] <Bucciarati> nice.

[06:03] *** SamuraiJack joined
[06:03] <sorear> std is just a syntax checker

[06:03] *** bbkr joined
[06:03] <Bucciarati> good to know;  is the bot usage documented somewhere ?

[06:04] <sorear> p6eval: help

[06:04] <p6eval> sorear: Usage: <(star|pugs|nqp|b|std|niecza|rakudo|nom|npr|n|r|perl6|prn|rn|p|rnp|nrp|pnr|rpn|p6|nr)(?^::\s) $perl6_program>

[06:04] <Bucciarati> p6eval: help star

[06:04] <p6eval> Bucciarati: Usage: <(star|pugs|nqp|b|std|niecza|rakudo|nom|npr|n|r|perl6|prn|rn|p|rnp|nrp|pnr|rpn|p6|nr)(?^::\s) $perl6_program>

[06:05] <Bucciarati> p6eval: star print 1+1

[06:05] *** bbkr_ left
[06:05] <sorear> Bucciarati: "p6eval: star" does not match that regex.

[06:07] *** kylecazar joined
[06:09] *** kylecazar left
[06:14] *** birdwindupbird joined
[06:15] <FROGGS_> star: say 'good morning!'

[06:15] <p6eval> star 2012.10: OUTPUT¬´good morning!‚ê§¬ª

[06:18] <moritz> \o

[06:21] <sorear> o/ moritz 

[06:27] *** GlitchMr joined
[06:32] *** kaleem joined
[06:36] *** jaldhar left
[06:45] *** MikeFair___ joined
[06:45] *** MikeFair left
[06:49] *** arkydo joined
[06:50] *** asdf12_ is now known as slayer101_

[06:50] *** slayer101_ left
[07:02] *** am0c joined
[07:07] *** sisar joined
[07:08] *** FROGGS_ left
[07:09] *** jaldhar joined
[07:19] *** arlinius left
[07:24] *** jaldhar left
[07:27] *** jaldhar joined
[07:28] *** Kharec left
[07:29] *** Kharec joined
[07:30] *** lawrmcfa joined
[07:38] *** SamuraiJack left
[07:38] *** SamuraiJack joined
[07:43] *** SamuraiJack left
[07:45] *** SamuraiJack joined
[07:50] *** Pompel left
[07:50] *** Pompel joined
[07:55] *** am0c left
[07:58] *** GlitchMr left
[08:01] *** FROGGS joined
[08:02] *** Targen_ joined
[08:02] *** Targen left
[08:29] *** Targen_ left
[08:31] *** am0c joined
[08:36] *** fgomez joined
[08:41] *** am0c_ joined
[08:42] *** am0c left
[08:42] *** am0c_ is now known as am0c

[09:02] <Su-Shee> good morning everyone

[09:03] <FROGGS> morning Su-Shee 

[09:05] *** fgomez left
[09:07] *** fgomez joined
[09:09] <sorear> o/

[09:13] *** sisar left
[09:15] *** slayer101_ joined
[09:33] *** hoelzro|away is now known as hoelzro

[09:36] *** arkydo left
[09:49] *** kresike joined
[09:49] <kresike> hello all you happy perl6 people

[09:52] *** Kharec left
[09:54] *** Kharec joined
[10:08] *** anuby left
[10:09] *** fhelmberger joined
[10:12] *** slayer101_ left
[10:16] *** rindolf joined
[10:22] *** erkan left
[10:32] *** jerome left
[10:34] <jnthn> morning o/

[10:34] <tadzik> good morning

[10:34] <phenny> tadzik: 00:49Z <[Coke]> tell tadzik that I cannot reproduce the panda install error. I blame insufficient beer.

[10:44] *** MrJaw joined
[10:50] *** MrJaw left
[10:58] *** Kharec left
[10:59] *** Kharec joined
[11:05] *** Su-Shee_ joined
[11:06] *** Su-Shee left
[11:06] *** Su-Shee_ is now known as Su-Shee

[11:18] *** fgomez left
[11:38] *** SmokeMachine joined
[11:41] *** grondilu joined
[11:42] <grondilu> rn: https://gist.github.com/4336126

[11:42] <p6eval> niecza v24-12-g8e50362: OUTPUT¬´(timeout)¬ª

[11:42] <p6eval> ..rakudo 22518b: OUTPUT¬´2.41421355164605‚ê§¬ª

[11:43] <grondilu> r: say sqrt(2)  # <-- I was expecting that

[11:43] <p6eval> rakudo 22518b: OUTPUT¬´1.4142135623731‚ê§¬ª

[11:44] *** SmokeMachine left
[11:45] <grondilu> rn: https://gist.github.com/4336126

[11:45] <p6eval> niecza v24-12-g8e50362: OUTPUT¬´(timeout)¬ª

[11:45] <p6eval> ..rakudo 22518b: OUTPUT¬´2.41666666666667‚ê§¬ª

[11:52] <moritz> the first nummber looked like 2.sqrt + 1

[11:54] <grondilu> yes, but I don't understand why it appears

[11:54] <grondilu> this 1 comes out of nowhere

[11:55] <jnthn> .oO( The two hardest problems in programming is off by one errors... )

[12:01] *** SmokeMachine joined
[12:05] <Su-Shee> masak: I'm going to throw your Text::CSV module onto my garbage data today. :)

[12:08] * moritz predicts GIGO :-)

[12:11] <Su-Shee> "great input, great output"? ;)

[12:11] <Su-Shee> oh wait, garbage input, great output ;)

[12:11] *** brrt joined
[12:11] <Su-Shee> right now, I'm fighting against Python anyways. 

[12:12] <hoelzro> Su-Shee: what parts are you fighting?

[12:12] * hoelzro was writing Python last night

[12:13] *** brrt left
[12:13] <Su-Shee> hoelzro: I'm doing xml with beautiful soup, getting a unicode object here and there and tried accidently to apply string methods on it and that doesn't work like I mean it to :)

[12:13] *** brrt joined
[12:14] <Su-Shee> hoelzro: I probably need to read up on python, unicode, encoding foobar.

[12:18] <jnthn> bah, so if you do %!foo := []; in NQP it works...until you discover your hash seems to be giving you collisions in some cases. Bonus: my keys were sometimes different integers, so it "worked" for a while...

[12:25] <tadzik> uhh

[12:32] <jnthn> yes, it was confusing for a while :)

[12:50] *** SamuraiJack left
[12:52] <grondilu> rn: say (^3 Z* *)¬ª.(4);

[12:52] <p6eval> rakudo 22518b: OUTPUT¬´Cannot call 'Numeric'; none of these signatures match:‚ê§:(Mu:U \v: Mu *%_)‚ê§‚ê§  in method Numeric at src/gen/CORE.setting:796‚ê§  in sub infix:<*> at src/gen/CORE.setting:2769‚ê§  in block  at src/gen/CORE.setting:12568‚ê§  in sub coro at src/gen/CORE.setting:5633‚ê§  in meth‚Ä¶

[12:52] <p6eval> ..niecza v24-12-g8e50362: OUTPUT¬´{ ... }‚ê§¬ª

[12:52] <grondilu> can't I create an array of closure with a metaoperator?

[12:52] <grondilu> rn: say (^3) Z* *;

[12:52] <p6eval> rakudo 22518b: OUTPUT¬´Cannot call 'Numeric'; none of these signatures match:‚ê§:(Mu:U \v: Mu *%_)‚ê§‚ê§  in method Numeric at src/gen/CORE.setting:796‚ê§  in sub infix:<*> at src/gen/CORE.setting:2769‚ê§  in block  at src/gen/CORE.setting:12568‚ê§  in sub coro at src/gen/CORE.setting:5633‚ê§  in meth‚Ä¶

[12:52] <p6eval> ..niecza v24-12-g8e50362: OUTPUT¬´{ ... }‚ê§¬ª

[12:53] <jnthn> No

[12:53] <jnthn> Or at least, Rakudo doesn't think you can :)

[12:56] <grondilu> I figured out what was wrong with https://gist.github.com/4336126.   The triangular version of the reduce metaoperator reapeats all the shifts at eatch steps.  That's why I wanted to test with an array of closures made from a zip operator instead.

[12:56] *** Kharec left
[12:56] *** Kharec joined
[12:56] *** cognominal joined
[12:59] *** jerome joined
[13:07] <hoelzro> Su-Shee: encodings are a pain in pretty much any language, I guess =P

[13:07] <hoelzro> Perl makes it fairly simple, at least

[13:20] <dalek> perl6-roast-data: 88d9b96 | coke++ | / (3 files):

[13:20] <dalek> perl6-roast-data: today (automated commit)

[13:20] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/88d9b965c9

[13:20] <dalek> perl6-roast-data: 379b5f7 | coke++ | / (3 files):

[13:20] <dalek> perl6-roast-data: today (automated commit)

[13:20] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/379b5f70df

[13:20] <dalek> perl6-roast-data: 5eb1106 | coke++ | / (3 files):

[13:20] <dalek> perl6-roast-data: today (automated commit)

[13:20] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/5eb1106830

[13:20] <dalek> perl6-roast-data: 106a4d1 | coke++ | / (4 files):

[13:20] <dalek> perl6-roast-data: today (automated commit)

[13:20] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/106a4d13c0

[13:20] <dalek> perl6-roast-data: 03950e1 | coke++ | / (4 files):

[13:20] <dalek> perl6-roast-data: today (automated commit)

[13:20] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/03950e16b0

[13:20] <dalek> perl6-roast-data: 0b75dd9 | coke++ | / (4 files):

[13:20] <dalek> perl6-roast-data: today (automated commit)

[13:20] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/0b75dd9a0e

[13:21] *** xinming joined
[13:22] *** SmokeMac_ joined
[13:23] *** SmokeMachine left
[13:28] <timotimo> every language that has strings that store their encoding with them got one leg up over all the others. it's why whenever i have to do c++ i try to use Qt's QString class

[13:28] <moritz> QuantumString!

[13:29] <jnthn> It's all the encodings at once?

[13:29] <timotimo> and whenever you use it, it has the right encoding

[13:37] *** am0c left
[13:38] <jnthn> bbi20

[13:40] *** kaleem left
[13:42] *** benabik joined
[13:45] <colomon> rn: say (^3 X*  *)¬ª.(4);

[13:45] <p6eval> rakudo 22518b: OUTPUT¬´Cannot call 'Numeric'; none of these signatures match:‚ê§:(Mu:U \v: Mu *%_)‚ê§‚ê§  in method Numeric at src/gen/CORE.setting:796‚ê§  in sub infix:<*> at src/gen/CORE.setting:2769‚ê§  in block  at src/gen/CORE.setting:12548‚ê§  in sub coro at src/gen/CORE.setting:5633‚ê§  in meth‚Ä¶

[13:45] <p6eval> ..niecza v24-12-g8e50362: OUTPUT¬´{ ... }‚ê§¬ª

[13:46] <colomon> oh!

[13:48] <colomon> rn: say (^3 X*  *)(4);

[13:48] <p6eval> niecza v24-12-g8e50362: OUTPUT¬´0 4 8‚ê§¬ª

[13:48] <p6eval> ..rakudo 22518b: OUTPUT¬´No such method 'postcircumfix:<( )>' for invocant of type 'List'‚ê§  in  at src/gen/BOOTSTRAP.pm:852‚ê§  in any  at src/gen/BOOTSTRAP.pm:836‚ê§  in block  at /tmp/TVyVq9wKe7:1‚ê§‚ê§¬ª

[13:49] <colomon> rn: say (^3 X*  (* XX 3))¬ª.(4);

[13:49] <p6eval> rakudo 22518b: OUTPUT¬´Cannot call 'Numeric'; none of these signatures match:‚ê§:(Mu:U \v: Mu *%_)‚ê§‚ê§  in method Numeric at src/gen/CORE.setting:796‚ê§  in sub infix:<*> at src/gen/CORE.setting:2769‚ê§  in block  at src/gen/CORE.setting:12548‚ê§  in sub coro at src/gen/CORE.setting:5633‚ê§  in meth‚Ä¶

[13:49] <p6eval> ..niecza v24-12-g8e50362: OUTPUT¬´{ ... }‚ê§¬ª

[13:50] <colomon> Has it ever been specified what Whatever closures do with metaops?

[13:58] <grondilu> rn: say ^3 X* *

[13:58] <p6eval> rakudo 22518b: OUTPUT¬´Cannot call 'Numeric'; none of these signatures match:‚ê§:(Mu:U \v: Mu *%_)‚ê§‚ê§  in method Numeric at src/gen/CORE.setting:796‚ê§  in sub infix:<*> at src/gen/CORE.setting:2769‚ê§  in block  at src/gen/CORE.setting:12548‚ê§  in sub coro at src/gen/CORE.setting:5633‚ê§  in meth‚Ä¶

[13:58] <p6eval> ..niecza v24-12-g8e50362: OUTPUT¬´{ ... }‚ê§¬ª

[14:00] <colomon> n: say (^3 X* *)(2, 4, 6)

[14:00] <p6eval> niecza v24-12-g8e50362: OUTPUT¬´Unhandled exception: Excess arguments to ANON, used 1 of 3 positionals‚ê§  at /tmp/EwVsuYTk1R line 0 (ANON @ 1) ‚ê§  at /tmp/EwVsuYTk1R line 1 (mainline @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4218 (ANON @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.set‚Ä¶

[14:00] <colomon> n: say (^3 X* *)([2, 4, 6])

[14:00] <p6eval> niecza v24-12-g8e50362: OUTPUT¬´0 3 6‚ê§¬ª

[14:01] <colomon> n: say (^3 X* *)([2, 4, 6, 8, 10])

[14:01] <p6eval> niecza v24-12-g8e50362: OUTPUT¬´0 5 10‚ê§¬ª

[14:01] <colomon> taking the size instead of the values.

[14:01] <grondilu> indeed

[14:02] *** kaleem joined
[14:02] <grondilu> but truly that should be an error.  ^3 X* * is not *a* function, but three functions.

[14:03] *** kaleem left
[14:03] <grondilu> (a list of three functions, I mean)

[14:04] <grondilu> n: say (* + 1, * *2)( [ ^3 ] )

[14:04] <p6eval> niecza v24-12-g8e50362: OUTPUT¬´Unhandled exception: Unable to resolve method postcircumfix:<( )> in type Parcel‚ê§  at /tmp/X8LEUIam3g line 1 (mainline @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4218 (ANON @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4219 (module-CORE @ ‚Ä¶

[14:04] <grondilu> ^ this is an expected error

[14:05] *** kaleem joined
[14:05] <grondilu> n: say (* + 1, * *2)¬ª.( [ ^3 ] )

[14:05] <p6eval> niecza v24-12-g8e50362: OUTPUT¬´4 6‚ê§¬ª

[14:05] *** Radvendii joined
[14:05] *** Radvendii left
[14:06] <FROGGS> jnthn: is there a way to debug rakudo using your debugger?

[14:06] <FROGGS> I'd need to step through Perl6/World.pm and Actions.pm ...

[14:13] <colomon> grondilu: how do you know?  niecza clearly believes ^3 X* * is a single function

[14:14] <colomon> it's the same as -> $x { ^3 X* $x }

[14:14] <colomon> n: say (-> $x { ^3 X* $x })(3)

[14:14] <p6eval> niecza v24-12-g8e50362: OUTPUT¬´0 3 6‚ê§¬ª

[14:15] <colomon> n: say (-> $x { ^3 X* $x })([1, 2, 3, 4])

[14:15] <p6eval> niecza v24-12-g8e50362: OUTPUT¬´0 4 8‚ê§¬ª

[14:15] <colomon> r: say (-> $x { ^3 X* $x })([1, 2, 3, 4])

[14:15] <p6eval> rakudo 22518b: OUTPUT¬´0 0 0 0 1 2 3 4 2 4 6 8‚ê§¬ª

[14:15] <colomon> though I'm inclined to think rakudo is right in this example

[14:15] *** am0c joined
[14:16] * grondilu hadn't thought of the -> $x { ^3 X* $x } interpretation

[14:18] <grondilu> I understood   map -> $x { $x * * }, ^3

[14:18] *** PacoAir joined
[14:19] <grondilu> r: say (map -> $x { $x * * }, ^3)¬ª.(3)

[14:19] <p6eval> rakudo 22518b: OUTPUT¬´0 3 6‚ê§¬ª

[14:20] <jnthn> back]

[14:20] <colomon> nr: say (map -> $x { $x * * }, ^3)¬ª.(3)

[14:20] <p6eval> rakudo 22518b, niecza v24-12-g8e50362: OUTPUT¬´0 3 6‚ê§¬ª

[14:20] <jnthn> FROGGS: No, not least because Actions.pm and World.pm are NQP-based. :)

[14:21] *** atrodo joined
[14:22] <grondilu> what is supposed to take precedence, between metaoperators and currifying?

[14:23] <grondilu> (assuming currifying is the correct word here, which I'm not so sure)

[14:25] <moritz> (currying)

[14:25] *** fgomez joined
[14:26] * grondilu looks in S02

[14:27] <grondilu> it seems that the correct p6 term is 'autopriming', right?

[14:27] <moritz> oh right, we've had a rename

[14:32] *** jaldhar left
[14:36] *** kaare_ joined
[14:49] *** Woodi left
[14:50] *** stopbit joined
[14:50] *** Woodi joined
[14:55] *** Kharec left
[14:58] *** stopbit left
[15:02] <cedrvint> Woodi: (about http://irclog.perlgeek.de/perl6/2012-12-18#i_6255093) it is possible to define something like "multi sub infix:<==> (Measure:D $a, Measure:D $b)" for Numeric comparison only, as per S03.  In this example, the two operands haven't the same type (Num vs. Range, somewhat).

[15:03] *** am0c left
[15:04] *** skids joined
[15:08] *** stopbit joined
[15:08] *** cognominal left
[15:10] *** bowtie joined
[15:13] <timotimo> can i embed rakudo in a cpp application in any meaningful way?

[15:25] *** GlitchMr joined
[15:28] <[Coke]> parrot has an embedding interface.

[15:29] <[Coke]> (so, load parrot, make parrot load perl6.pbc, then invoke the perl6 parrot compiler? maybe?

[15:29] <brrt> [Coke], timotimo, yes, almost

[15:30] <brrt> parrot has the compreg interface, which allows you to load high-level-language compilers at runtime

[15:30] <brrt> rakudo used to be one, but nom ate it

[15:31] <brrt> afaik - and i haven't checked recently - if you do not run either the nqp or the rakudo binary, compreg('perl6') will not work

[15:31] <brrt> r: pir::compreg('perl6');

[15:31] <p6eval> rakudo 22518b: OUTPUT¬´===SORRY!===‚ê§pir::compreg missing a signature‚ê§¬ª

[15:31] <brrt> r: pir::compreg__pS('perl6')

[15:31] <p6eval> rakudo 22518b: OUTPUT¬´use of uninitialized value of type Mu in string context‚ê§use of uninitialized value of type Mu in string context‚ê§===SORRY!===‚ê§error:imcc:The opcode 'compreg_s' (compreg<1>) was not found. Check the type and number of the arguments‚ê§    in file '(file unknown)' line 1993‚Ä¶

[15:31] <timotimo> say, a compiled perl6 module, can that just be loaded into parrot without having rakudo to go with it?

[15:31] <brrt> r: pir::compreg__Sp('perl6')

[15:31] <p6eval> rakudo 22518b:  ( no output )

[15:31] <brrt> timotimo, no

[15:31] <brrt> because of the whole sixmodel thing

[15:32] <timotimo> ah, ok

[15:32] <jnthn> And the small issue of, you know, CORE.setting :)

[15:32] <timotimo> hah, all right :)

[15:32] <brrt> ‚Ä¶.. that is a good point jnthn

[15:32] <jnthn> And that eval needs to call back into the compiler :)

[15:32] <brrt> how would this be fixed in an ideal world

[15:32] <jnthn> I'm a bit surprised that compreg doesn't work out

[15:33] <jnthn> I mean, we still do the registration

[15:33] <brrt> iirc, nqp does the registration at starting-time

[15:33] <jnthn> yeah

[15:33] <brrt> i haven't checked recently

[15:33] <[Coke]> r: my $pc = pir::compreg__SP('perl6');

[15:33] <p6eval> rakudo 22518b:  ( no output )

[15:33] <jnthn> oh...yeah, it happens in the MAIN sub 

[15:33] <[Coke]> r: my $pc = pir::compreg__SP('perl6'); say $pc("3 ~ 4");

[15:33] <p6eval> rakudo 22518b: OUTPUT¬´No such method 'postcircumfix:<( )>' for invocant of type 'Str'‚ê§  in  at src/gen/BOOTSTRAP.pm:852‚ê§  in any  at src/gen/BOOTSTRAP.pm:836‚ê§  in block  at /tmp/SzGvs9jPLY:1‚ê§‚ê§¬ª

[15:34] <brrt> the compiler is not a Callable

[15:34] <[Coke]> r: my $pc = pir::compreg__PS('perl6'); say $pc("3 ~ 4");

[15:34] <p6eval> rakudo 22518b: OUTPUT¬´Nominal type check failed for parameter '$got'; expected Any but got Perl6::Compiler instead‚ê§  in block  at /tmp/njW1Zwurk7:1‚ê§‚ê§¬ª

[15:34] <[Coke]> r: my $pc = pir::compreg__PS('perl6'); say $pc.compile("3 ~ 4");

[15:34] <p6eval> rakudo 22518b: OUTPUT¬´Nominal type check failed for parameter '$got'; expected Any but got Perl6::Compiler instead‚ê§  in block  at /tmp/1rXEx8HYvn:1‚ê§‚ê§¬ª

[15:34] <brrt> r: my $pc = pir::compreg__Sp('perl6'); say $pc.eval("3 ~ 4");

[15:34] <p6eval> rakudo 22518b: OUTPUT¬´Too many positional parameters passed; got 2 but expected 1‚ê§  in method eval at src/gen/CORE.setting:2314‚ê§  in block  at /tmp/Bsw4qAP5aW:1‚ê§‚ê§¬ª

[15:34] <jnthn> r: my Mu $pc := pir::compreg__PS('perl6'); $pc.eval('say 42');

[15:34] <p6eval> rakudo 22518b: OUTPUT¬´42‚ê§¬ª

[15:36] <jnthn> I think if it's possible to move some of the stuff out of the main sub things may work out better. Not sure if that's trivial or not.

[15:36] <timotimo> my Mu $pc := pir::compreg__PS('perl6'); $pc.eval(q{my Mu $pc := pir::compreg__PS('perl6'); $pc.eval('say "what have i done?!"')});

[15:36] <timotimo> r: my Mu $pc := pir::compreg__PS('perl6'); $pc.eval(q{my Mu $pc := pir::compreg__PS('perl6'); $pc.eval('say "what have i done?!"')});

[15:36] <p6eval> rakudo 22518b: OUTPUT¬´what have i done?!‚ê§¬ª

[15:36] <timotimo> bwahahahaha >:]

[15:37] <jnthn> yo dawg...I heard you like Perl6::Compiler :P

[15:37] *** MayDaniel joined
[15:37] <jnthn> nqp: sub MAIN() { say("in MAIN") }

[15:37] <p6eval> nqp: OUTPUT¬´in MAIN‚ê§¬ª

[15:37] <jnthn> nqp: say("here"); sub MAIN() { say("in MAIN") }

[15:37] <p6eval> nqp: OUTPUT¬´here‚ê§in MAIN‚ê§¬ª

[15:38] <jnthn> nqp: my $*x := 42; say("here"); sub MAIN() { say("in MAIN"); say($*x); }

[15:38] <p6eval> nqp: OUTPUT¬´here‚ê§in MAIN‚ê§42‚ê§¬ª

[15:38] <jnthn> Hm

[15:38] <jnthn> That's promising

[15:38] *** MayDaniel left
[15:40] <jnthn> brrt, timotimo: So I think the answer is, if you move everything in main.nqp except the $comp.command_line call and the final END phasers loop out of sub MAIN and place them before it, then just loading perl6.pbc may well be enough to get you a compreg'd compiler.

[15:41] *** cognominal joined
[15:41] <brrt> ok, thats definitely something to try

[15:56] <[Coke]> anyone know Zach Bornheimer ?

[15:58] *** am0c joined
[16:03] *** lichtkind joined
[16:04] <lichtkind> moritz: any comments ?

[16:06] <moritz> lichtkind: I haven't yet had time to review the post

[16:06] <lichtkind> moritz: better pass to someone else?

[16:06] <kresike> bye folks

[16:06] *** kresike left
[16:07] <moritz> lichtkind: but you forgot a small but important detail

[16:07] <lichtkind> what?

[16:07] <moritz> lichtkind: when should it be published?

[16:07] <moritz> last I looked, our slots were already taken

[16:07] <lichtkind> so you dont need it?

[16:08] <moritz> I don't know off-hand

[16:08] *** arlinius joined
[16:08] <moritz> the schedule is in the perl6/mu repo in misc/perl6advent-2012/schedule

[16:09] *** jokar joined
[16:11] <lichtkind> moritz: looks like 22 is no article yet and diff might be happy not to do something

[16:13] <moritz> lichtkind: well, you can always ask him

[16:14] <lichtkind> who is it?

[16:14] <moritz> PerlJam

[16:15] <lichtkind> thanks

[16:15] <lichtkind> PerlJam: is your article for calendar leaf 22 ready?

[16:18] <PerlJam> lichtkind: not even started.

[16:19] <lichtkind> PerlJam: would you agree to let in my text about some basic perl 6 rx ?

[16:19] <lichtkind> its already done

[16:19] <PerlJam> I was going to start writing tonight, but if you've already got something ready to go, feel free to take Dec 22

[16:20] <lichtkind> maybe you could proofread it moritz seem occupied

[16:20] <PerlJam> sure.  What's the url?

[16:20] <lichtkind> i sent him mail

[16:20] <PerlJam> ok.  [email@hidden.address] will get to me

[16:21] *** zby_home joined
[16:22] <lichtkind> thanks

[16:23] *** SmokeMachine joined
[16:26] *** SmokeMac_ left
[16:26] *** cognominal left
[16:27] <lichtkind> PerlJam: sent

[16:28] *** SmokeMac_ joined
[16:30] *** brrt left
[16:31] <pmichaud> good morning, #perl6

[16:31] <jnthn> morning, pmichaud o/

[16:31] <lichtkind> good morning

[16:31] <lichtkind> pmichaud: woke up at 17 pm, i like that

[16:31] *** SmokeMachine left
[16:32] *** kaleem left
[16:32] <pmichaud> can someone from   any(<jnthn perljam moritz masak>) send me a ssh public key that I can put onto the rakudo account so that masak++ can upload a tarball tomorrow?

[16:32] *** kaleem_ joined
[16:33] <jnthn> pmichaud: How soon do you need it? I expect masak will be around in a little bit...

[16:33] <pmichaud> jnthn: well, by tonight.  my schedule tomorrow is really iffy

[16:34] *** cognominal joined
[16:34] <jnthn> pmichaud: Mailed you one for me

[16:34] <jnthn> So there's at least one now.

[16:34] <pmichaud> the same public key used by github should suffice, fwiw  :-)

[16:34] <jnthn> yeah, that's what I sent :)

[16:36] *** hoelzro is now known as hoelzro|away

[16:39] *** gaussblurinc_ joined
[16:40] *** benabik_ joined
[16:40] *** benabik left
[16:40] *** benabik_ is now known as benabik

[16:42] *** benabik left
[16:42] *** benabik_ joined
[16:42] *** benabik_ left
[16:47] *** kaleem_ left
[16:47] *** gaussblurinc_ left
[16:52] <kthakore> Hey guys! Trend Micro is blocking the rakudo download site on Windows 7! http://i.imgur.com/8oqKK.jpg

[16:52] <kthakore> This would be a huge problem of getting perl6 in our lab.

[16:53] <jnthn> wtf. 

[16:53] <kthakore> It was very scary for my Advisor. I was like it is bullshit but it turned him away from getting rakudo.

[16:53] <kthakore> :(

[16:54] <flussence> if I saw that I'd be more concerned that I'd been running a faulty antivirus the whole time...

[16:54] <kthakore> flussence: indeed ... but some people don't get that

[16:54] <jnthn> "The latest tests indicate that this URL contains malicious software or could defraud visitors."

[16:54] <kthakore> wtf

[16:55] <kthakore> lets do a reclassify request?

[16:55] <kthakore> I can do one as a trend micro customer

[16:56] <kthakore> flussence: a lot of people use trend micro at my school. All the computers have it. 

[16:57] * jnthn is submitting one

[16:57] <jnthn> wait, how the hell am I meant to read this captcha...

[16:57] <pmichaud> ...seriously?  trend micro is blocking the "how-to-get-rakudo" page?

[16:57] <kthakore> yeah :(

[16:58] <timotimo> oh, that high risk from the favicon

[16:58] <jnthn> oh finally, I passed the captcha test.

[16:58] <jnthn> I wonder if you can get a program to solve those...

[16:58] <jnthn> :P

[16:59] <pmichaud> I sent a reclassify request as the website owner

[16:59] <jnthn> "Trend Micro will start processing your request immediately and we will send you the result once it is done."

[16:59] <jnthn> pmichaud: ah, me also :)

[16:59] <kthakore> I tried to send one as a trend micro customer

[16:59] <jnthn> I figured I was owner enough :)

[16:59] <kthakore> it wants my serial number :(

[17:00] <kthakore> while this happens can I get the windows download link for rakudo?

[17:00] <kthakore> may I* 

[17:00] <jnthn> kthakore: https://github.com/rakudo/star/downloads

[17:01] <jnthn> oh, seems we don't have an MSI for the 2012.11 though

[17:01] <kthakore> oh doh! I should have done that ...

[17:01] <kthakore> oh ok I can wait

[17:01] <jnthn> Well, 2012.10 is there.

[17:01] <jnthn> It's only so old... :)

[17:01] <kthakore> hehe ok

[17:02] <kthakore> is the upgrade process just install new .msi?

[17:02] <jnthn> think so

[17:02] *** p6eval left
[17:03] *** dalek left
[17:03] *** birdwindupbird left
[17:03] *** Util left
[17:03] *** [Coke] left
[17:03] *** tadzik left
[17:04] *** pmichaud left
[17:04] *** masak left
[17:04] *** Juerd left
[17:04] *** hugme left
[17:04] *** PerlJam left
[17:04] <FROGGS> looks like trend micro got us^^

[17:06] *** cognominal left
[17:06] <kthakore> FROGGS: you should axe morder them

[17:06] <FROGGS> ya, I really should

[17:06] <kthakore> dang advisor is going to use ANTLR for grammars 

[17:06] <kthakore> oh well

[17:07] <FROGGS> uhh, doesnt seem that nice

[17:08] <kthakore> you know ANTLR FROGGS ?

[17:08] <FROGGS> no, just the wikipedia page

[17:09] <jnthn> .oO( Antlr? Oh deer... )

[17:09] <kthakore> jnthn: hehe

[17:10] <kthakore> He wastes like 5 days making a simple tokenizer

[17:10] <kthakore> I made a similar in perl6 grammar in 15 mins

[17:10] <kthakore> he was impressed and wanted to learn it

[17:10] <kthakore> THEN BAM TREND MICRO 

[17:10] <FROGGS> kthakore: do try Perl 6's grammars, just for a little project, it's awesome

[17:10] <FROGGS> ohh, you already have :/

[17:11] <kthakore> FROGGS: where is "try Perl 6's grammars"

[17:11] <kthakore> I just did it from reading test code in rakudo's code base :|

[17:11] <FROGGS> these are just words buddy

[17:12] <FROGGS> me too, reading the rakudo/src/Perl6/Grammar.pm

[17:12] <kthakore> yeah that too

[17:12] <FROGGS> k, gtg now, see ya later

[17:12] <kthakore> oh ok

[17:12] <kthakore> no tutorial?

[17:12] <kthakore> ok bye bye

[17:12] *** cognominal joined
[17:13] <FROGGS> kthakore: in the book there is a chapter

[17:13] <kthakore> cool

[17:13] <FROGGS> but it is a bit short

[17:13] <kthakore> I should have known

[17:13] *** FROGGS left
[17:13] *** xinming left
[17:15] *** xinming joined
[17:16] *** sahadev joined
[17:18] *** atrodo_ joined
[17:19] <sahadev> hello, in my rakudo star 2012.11 setup, panda seems to be broken because of a change I made (replacing the hard-coded unreachable URL for the projectsfile from http://feather.perl6.nl:3000/projects.json to http://modules.perl6.org/proto.json). I ran the bootstrap.pl script to rebuild panda, but I still get the "Missing or wrong version of dependency ..." error when Panda/Ecosystem.pm is being loaded.

[17:19] <sahadev> how do I fix this problem?

[17:20] *** atrodo left
[17:20] *** atrodo_ is now known as atrodo

[17:20] *** mikemol left
[17:21] *** am0c left
[17:21] <jnthn> sahadev: Not entirely sure, but did you try the rebootstrap script instead?

[17:22] <sahadev> jnthn: no. let me try it.

[17:29] *** cognominal left
[17:30] *** SamuraiJack joined
[17:32] <sahadev> jnthn: the rebootstrap script said "No need to rebootstrap, running normal bootstrap", and repeated the bootstrap process.

[17:32] *** benabik joined
[17:33] *** hash_table joined
[17:33] <sahadev> after this Panda files were installed in ../install/lib/parrot/4.6.0/languages/perl6/site/bin. When I ran from here, I got "Missing or wrong version of dependency 'lib/Shell/Command.pm'" error.

[17:34] <sahadev> I found two different versions of Shell/Command.pm, so renamed away the older one. that brought me back to the original error "Missing or wrong version of dependency '.../install/lib/parrot/4.6.0/languages/perl6/lib/Panda/Ecosystem.pm'"

[17:34] <sahadev> not sure what I can do here :(

[17:34] *** Chillance joined
[17:34] *** cognominal joined
[17:38] *** SamuraiJack_ joined
[17:38] *** SamuraiJack left
[17:40] *** cognominal left
[17:40] <jnthn> sahadev: The error typically happens when there are wrong versions of PIR pre-compiled output around.

[17:43] <sahadev> should removing the .pir file force recompile when I run the panda script?

[17:44] <jnthn> If it can't find those then it would certainly use the source version and compile from that.

[17:50] *** masak_webchat joined
[17:50] *** hoelzro|away is now known as hoelzro

[17:50] <masak_webchat> I can't seem to connect to feather right now :/

[17:50] <hoelzro> is the vmlibs options for nqp handled by nqp itself, or is it just passed along to Parrot?

[17:51] <sahadev> I had to remove Panda.pir as well to make the error go away. But now, I get a different error "Null PMC access in invoke() in sub getfile at .../Panda/Ecosystem.pm:14)

[17:52] <jnthn> sahadev: At this point, it's probably quicker to remove all the Panda-installed things and just bootstrap it and install them again.

[17:52] <jnthn> hoelzro: Handled by NQP

[17:53] <hoelzro> jnthn: ok, thanks!

[17:53] <jnthn> masak_webchat: Yes, seems it's down

[17:53] <masak_webchat> oh, that explains it :/

[17:53] <hoelzro> jnthn: but it just results in a few .loadlib instructions, right?

[17:53] <jnthn> hoelzro: It gets passed down to QAST::CompUnit node, which in turn causes .loadlib directives to appear in the PIR

[17:53] <hoelzro> so the loading of the libs is ultimately done by Parrot, yes?

[17:54] <hoelzro> is there a way to tell Parrot where to find these libs? for a single invocation on the command line, I mean

[17:54] <jnthn> hoelzro: Maybe, but I don't know it off hand

[17:54] <jnthn> hoelzro: parrot -h or so may tell you

[17:56] <benabik> -L adds a directory to the library path

[17:56] <hoelzro> the nqp executable is essentially some PBC that gets feed to an embedded interpreter, right?

[17:57] <hoelzro> I'm wondering if it's possible to pass options to nqp that make it into the underlying Parrot VM

[17:57] <jnthn> No

[17:57] <jnthn> But you can run parrot and feed it nqp.pbc

[17:57] <benabik> PBC that gets fed to the parrot library, technically)

[17:57] <hoelzro> I see

[17:57] <hoelzro> shoot

[17:57] <hoelzro> that makes what I'm trying to do a lot messier =/

[17:59] <jnthn> What are you trying to do? :)

[17:59] <hoelzro> I'm trying to fix the Rakudo Star 'make install' rule to be friendlier to distribution packagers

[18:00] <hoelzro> make install DESTDIR=$pkgdir *should* just work

[18:00] <timotimo> saw the ticket for that. good thing youre tackling it.

[18:02] <hoelzro> I feel like Rakudo * should have some good packages if it's going to be taken seriously =)

[18:02] <masak_webchat> I trivially agree.

[18:03] <jnthn> +1

[18:04] <jnthn> I'm about the worst person imaginable to work on such things, but I'm happy somebody is taking it on.

[18:05] <hoelzro> when is * 2012.12 going out?

[18:05] <hoelzro> Dec 25? =P

[18:06] *** FROGGS joined
[18:06] * masak_webchat .oO( followed by three magi )

[18:07] *** mikemol joined
[18:09] *** Kharec joined
[18:10] *** masak_webchat left
[18:13] <hoelzro> the best solution I have for figuring out the current issue is setting LD_LIBRARY_PATH

[18:13] <hoelzro> which, to me, is a gross hack that isn't portable.

[18:17] *** atrodo left
[18:18] <jnthn> dinner, bbl

[18:29] <hoelzro> if no buddy minds, I'd like to braindump my current understanding of how nqp compiles perl6-debugger.nqp

[18:29] <hoelzro> just to sanity check it

[18:32] <hoelzro> so, when I invoke nqp --vmlibs=perl6_group,perl6_ops perl6-debug.nqp

[18:32] <hoelzro> nqp compiles perl6-debug.nqp into an AST (or a QAST, in this case)

[18:33] <hoelzro> it writes out a temporary PIR file with loadlib statements for perl6_group and perl6_ops, followed by the PIR representation of the QAST

[18:33] <hoelzro> it then tells parrot to compile that temporary PIR to a PBC/executable

[18:33] <hoelzro> does that sound right?

[18:34] *** nyuszika7h left
[18:35] <grondilu> rn:  https://gist.github.com/4339194

[18:35] *** kaleem joined
[18:36] <benabik> hoelzro: I don't think it actually writes out a file if it's executing directly.

[18:36] <grondilu> rn: my @a = 1 .. *; say @a.shift;

[18:37] <grondilu> rn: say "hello?"

[18:37] <hoelzro> benabik: but conceptually, that's how it works, right?

[18:37] <benabik> ENOP6EVAL

[18:37] <grondilu> ok

[18:38] <benabik> hoelzro: Basically, yes.  file --> QAST --> PIR --> PBC.

[18:38] *** thou joined
[18:38] <hoelzro> ok, good

[18:38] <hoelzro> then I'm starting to get it =)

[18:39] <benabik> There might still be some step in between QAST and PIR.  It used to be PAST --> POST --> PIR, but I don't know if there's a POST equivalent still.

[18:39] <benabik> (But that may not matter for you)

[18:40] *** nyuszika7h joined
[18:41] <hoelzro> it's good to know, but I'm just trying to get a higher level overview for now =)

[18:42] *** Kharec left
[18:42] *** Kharec joined
[18:43] <hoelzro> so when NQP is generating the PIR file for perl6-debug, it tries to load perl6_ops.  Is that necessary when compiling to PIR?

[18:44] <benabik> It's required for Parrot to parse the PIR, but I don't know if NQP needs it.

[18:45] <hoelzro> hmm

[18:45] <hoelzro> that's what I thought

[18:46] <hoelzro> right now, nqp can't find perl6_ops, but I'm just compiling perl6-debugger.nqp to PIR, so it shouldn't matter, right?

[18:47] <benabik> That I can't tell you.  I know you can get type information and other things from the opcode library, but I don't know if NQP uses that.

[18:47] * benabik is far more familiar with the Parrot end of things.

[18:48] <jnthn> The process is NQP code => .pir file with PIR in it => PBC. The nqp executable does the first step to give the .pir file, then Parrot takes that and produces the PBC

[18:49] <jnthn> The .pir file gets .loadlib instructions due to --vmlibs. It needs to put those inot the PIR file, otherwise Parrot can't find the required op libs and do the PIR => PBC translation

[18:49] <jnthn> ('cus the debugger uses some of the perl6 dynops)

[18:50] <hoelzro> right

[18:50] <hoelzro> the debugger is *basically* another implementation of perl6.exe, right?

[18:50] <hoelzro> just with some extra debug magic?

[18:57] <jnthn> Yeah, it's another frontend basically

[18:57] <jnthn> It subclasses various things 

[18:58] <hoelzro> ok, cool

[18:58] <benabik> It's less another implementation than something that takes perl6.pbc and pokes at the innards with magic.  :-D

[19:01] *** erkan joined
[19:01] *** erkan left
[19:01] *** erkan joined
[19:02] * grondilu just wrote http://rosettacode.org/wiki/Check_Machin-like_formulas#Perl_6 and is amazed that it's actually that easy.

[19:03] <grondilu> rn:  say tan(12*atan(1/18)+8*atan(1/57)-5*atan(1/239))

[19:04] <grondilu> oh yeas I forgot that there is no p6eval now

[19:04] <hoelzro> what happened to it?

[19:04] <benabik> Was it removed, or has it just crashed and not been punted?

[19:08] *** kaleem left
[19:11] <diakopter> I'm sure someone who knows how to fix it will fix it sometime soon

[19:12] * moritz is

[19:12] <benabik> moritz++

[19:13] <moritz> but I can't ssh into feather3

[19:13] <moritz> nor feather

[19:13] <moritz> it hangs

[19:14] <benabik> That's no good.

[19:17] *** hoelzro is now known as hoelzro|away

[19:20] <jnthn> moritz: Everyone connected through feather disappeared a bit ago

[19:36] <GlitchMr> I cannot access feather HTTP server and December wiki doesn't work

[19:36] <GlitchMr> Let me guess, somebody took all memory

[19:38] <benabik> GlitchMr: feather seems to be down in general.

[19:40] *** hoelzro|away is now known as hoelzro

[19:41] *** nyuszika7h left
[19:42] <hoelzro> can one not use say() in BEGIN blocks in NQP?

[19:42] <jnthn> hoelzro: No

[19:43] <jnthn> hoelzro: 'cus they don't know about their outer lexical scope

[19:43] <jnthn> They were added with one very specific task in mind and do exactly as much as it needed.

[19:44] *** nyuszika7h joined
[19:44] <timotimo> should panda perhaps be taught how to access backup servers?

[19:46] <moritz> the lasst hop that traceroute can reach is a3942.compukos.atom86.net

[19:47] *** masak joined
[19:48] <hoelzro> hmm

[19:49] <hoelzro> that makes debugging NQP code very interesting...

[19:50] <jnthn> hoelzro: nqp::say("...") works.

[19:51] <jnthn> moritz: Yeah, I noticed that, but dunno what a normal traceroute looks like so have no idea how close to feather that is.

[19:51] *** fhelmberger left
[19:52] <skids> notably that hop returns an ICMP unreachable for feather3, but just dead air for feather.

[19:53] <skids> Which would increase the likelihood that it is close to the end of the trace (local policy of somesort)

[19:53] *** erkan left
[19:55] *** Patterner left
[19:57] *** Psyche^ joined
[19:57] *** Psyche^ is now known as Patterner

[19:58] *** SamuraiJack_ left
[20:01] *** PerlJam joined
[20:01] <hoelzro> I take it that 'use' in Perl6 runs code at compile time like it does in Perl5?

[20:01] <PerlJam> hoelzro: aye

[20:04] <hoelzro> I figured; that's why compiling the debugger is trying to find the ops file

[20:04] <PerlJam> did anyone ping Juerd about feather?

[20:14] *** SmokeMac_ left
[20:15] <hoelzro> dammit, telling NQP to look in a particular directory for perl6_ops is *hard*

[20:16] <masak> visitor stats spiked for the Advent Calendar yesterday, for some reason.

[20:16] <jnthn> hoelzro: --vm-libs=path/to/look/in/perl6_ops won't work?

[20:16] <moritz> r/programming top 20 or so

[20:17] <moritz> http://www.reddit.com/r/programming/comments/151z1c/real_dsls_formulas_in_perl_6/

[20:17] <masak> oh!

[20:17] <masak> cedrvint++ # piquing reddit's apetite

[20:17] <hoelzro> jnthn: ...

[20:18] * hoelzro tries

[20:20] <timotimo> ah, duh, modules.perl6.org is also on feather, no?

[20:20] <masak> PerlJam: you're on for slot #22. do you have a topic yet?

[20:23] <timotimo> the archive has a version :)

[20:23] <PerlJam> masak: nope.

[20:24] <PerlJam> I have ideas.  Nothing more yet.

[20:24] <PerlJam> I was going to sit down tonight and start on it though

[20:24] <PerlJam> (turning an idea into a post)

[20:27] *** fgomez left
[20:30] <masak> \o/

[20:30] * masak is writing on tomorrow's post now

[20:30] *** fgomez joined
[20:31] * jnthn wrote all his posts so is working on something else :)

[20:32] *** uvtc joined
[20:32] <uvtc> Hi #perl6. Regarding advent calendar topics, I was kinda hoping to see one covering the difference between parcels, lists, and arrays (or maybe I'm missing a piece in there somewhere).

[20:33] <uvtc> I remember asking about docs on this back when ... lessee ... I think pmichaud may have given a talk on the topic.

[20:33] <uvtc> But unfortunately the video was never made available (afaik).

[20:34] <hoelzro> jnthn: amazingly, that didn't work

[20:34] <hoelzro> I totally expected it to!

[20:36] <uvtc> er, just noticed, perl6.org is not responsive atm.

[20:38] *** uvtc left
[20:39] <PerlJam> blah

[20:40] <masak> perl6.org is hosted on feather?

[20:40] <jnthn> Think so

[20:40] <moritz> feather2

[20:41] *** zby_home left
[20:42] <moritz> phenny: tell uvtc https://raw.github.com/perl6/doc/master/lib/List.pod https://raw.github.com/perl6/doc/master/lib/Parcel.pod have a bit documentation that might interest you

[20:42] <phenny> moritz: I'll pass that on when uvtc is around.

[20:43] <PerlJam> phenny: tell uvtc that pmichaud's talk on lists and parcels and stuff is at http://www.youtube.com/watch?v=rsccacoabaE

[20:43] <phenny> PerlJam: I'll pass that on when uvtc is around.

[20:43] *** kurahaupo joined
[20:43] <PerlJam> (at least I'm guessing that's the one he was looking for)

[20:46] *** rindolf left
[20:48] <GlitchMr> http://rosettacode.org/wiki/Extreme_floating_point_values#Perl_6

[20:49] <GlitchMr> Also, how many undefined values Perl 6 does have.

[20:50] <GlitchMr> JavaScript has null and undefined, but how many Perl 6 does have?

[20:50] <PerlJam> GlitchMr: +Inf  :)

[20:51] <GlitchMr> Copied this from C example

[20:56] <GlitchMr> "Despite the name, the comma construct Parcels, not the parens... except for empty parens" - why it reminds me tuples in Python.

[20:57] *** uvtc joined
[20:57] <uvtc> ih

[20:57] <phenny> uvtc: 20:42Z <moritz> tell uvtc https://raw.github.com/perl6/doc/master/lib/List.pod https://raw.github.com/perl6/doc/master/lib/Parcel.pod have a bit documentation that might interest you

[20:57] <phenny> uvtc: 20:43Z <PerlJam> tell uvtc that pmichaud's talk on lists and parcels and stuff is at http://www.youtube.com/watch?v=rsccacoabaE

[20:57] <uvtc> hi

[20:57] <uvtc> Thanks for those links moritz & PerlJam.

[20:59] <uvtc> Hm. I had been asking about that talk on June 18, and we couldn't find it anywhere. But the youtube page says it was published on the 15th! :)

[21:02] <uvtc> moritz: aside from those, an intro-style doc on Lists/Parcels/Arrays would be most useful. Though, maybe after I watch the aforementioned video I can write one. :)

[21:06] *** GlitchMr left
[21:11] <timotimo> hm, how would i iterate over $foo and $bar and inside the body of my for loop change the value of the variable? do i bind it with a capture or something?

[21:12] <benabik> Would something like for $foo -> $_ is rw { } work?

[21:12] <moritz> for $a, $b <-> $x { $x *= 2 }

[21:12] <moritz> yes, that should work too

[21:12] <benabik> Ooh, shorter syntax.

[21:12] <timotimo> oooh, that's a cute syntax

[21:12] *** sftp left
[21:12] <moritz> r: my ($a, $b) = (21, 8); for $a, $b <-> $x { $x *= 2 }; say $a, ' ', $b

[21:13] <moritz> grrr

[21:13] <moritz> ENOP6EVAL

[21:13] <moritz> IRC without evalbots seems so dysfunctional

[21:14] <timotimo> cool :)

[21:16] <mathw> o/

[21:16] <moritz> \o mathw 

[21:16] <mathw> congrats everyone doing the advent calendar this year, it's been great

[21:19] <mathw> I particularly enjoyed the one about phasers, I hadn't realised how they could let you express your concepts so robustly

[21:19] <timotimo> indeed! that one was great

[21:20] *** gaussblurinc_ joined
[21:20] <mathw> I was reading it thinking 'I really wish I had these at work'

[21:21] <timotimo> perl6 trades programming speed against execution speed in a big way :|

[21:21] <mathw> that's not a design feature though, that's just the state of the current implementations :)

[21:21] <benabik> Fortunitely compliers get faster much faster than programmers.

[21:22] <mathw> and compilers written in Perl 6... :)

[21:23] *** cooper left
[21:23] <timotimo> and programmers written ir perl6 ...

[21:23] <mathw> not sure we're into that kind of AI yet

[21:24] <benabik> I think use DWIM is currently delayed until Perl 7

[21:24] <jnthn> I've at least had Perl 6 programs doing boring SQL programming tasks for me :P

[21:24] *** cooper joined
[21:24] <mathw> yeah but that's just common sense :)

[21:25] <jnthn> Aw, dang :)

[21:25] <mathw> even Lisps can do that :P

[21:25] *** gaussblurinc_ left
[21:25] <jnthn> Yeah, but grammars were perfect for the task

[21:25] <mathw> :)

[21:26] *** leont joined
[21:27] *** leont left
[21:28] <masak> mathw! \o/

[21:28] <mathw> oh hai masak

[21:29] <lichtkind> PerlJam: last version is good?

[21:35] <timotimo> is perlcabal.org also on feather? :\

[21:36] *** hash_table left
[21:37] <benabik> Yup!

[21:37] <hoelzro> more additions to the Perl 6 lexer for pygments! \o/

[21:37] <timotimo> at least that way i learn the placings of all stuff on github as well

[21:37] <benabik> Perl6 basically doesn't exist without feather, apparently.

[21:37] <timotimo> hoelzro: got screenshots? :)

[21:38] <timotimo> i'm really missing a file search function on github :\ (as in: grep through files)

[21:39] <hoelzro> timotimo: http://hoelz.ro/files/perl6-pygments2.png

[21:39] <hoelzro> I've been focusing on Rakudo * building tonight, but I added POD and operators for the lexer

[21:39] <timotimo> great, POD :)

[21:40] <timotimo> the vim syntax for perl6 seems to struggle a bit with some of the comment syntaxes

[21:42] *** kaare_ left
[21:43] <timotimo> syntaces?

[21:43] <hoelzro> timotimo: I'm working on that as well =)

[21:44] <hoelzro> well, not the comments in particular, but Perl6 for Vim

[21:44] <hoelzro> at the moment, on folding

[21:45] <uvtc> syntaxi

[21:49] <timotimo> cool, i like that

[21:58] *** popl joined
[21:58] *** uvtc left
[22:01] <timotimo> huh, so you can do a "semicolon definition" of a class in rakudo, but not if you've stubbed another class before that? is that spec or bug?

[22:01] <sorear> spec.

[22:02] *** Patterner left
[22:02] *** skids left
[22:03] <PerlJam> timotimo: S12:52

[22:07] <timotimo> thank you :)

[22:08] <timotimo> right, that makes sense.

[22:15] <lichtkind> PerlJam: last version is good?

[22:16] <PerlJam> lichtkind: Dunno.  I haven't read it.  I just had a little free time earlier but I've mostly busy since.

[22:16] *** Juerd joined
[22:16] *** dalek joined
[22:16] *** ChanServ sets mode: +v dalek

[22:17] *** p6eval joined
[22:17] *** hugme joined
[22:17] *** ChanServ sets mode: +v p6eval

[22:17] *** ChanServ sets mode: +v hugme

[22:17] <lichtkind> PerlJam: right just asking, its plenty time til 22

[22:18] <PerlJam> lichtkind: also, if you're going to post it to the advent calendar, get some feedback from masak, moritz, jnthn, etc. too.  :)

[22:20] *** [Coke] joined
[22:20] *** Util joined
[22:20] *** pmichaud joined
[22:20] *** PerlPilot joined
[22:20] *** masak_ joined
[22:20] <lichtkind> PerlJam: sure i just dunno how submit it to this blog software that mainly why i sent it to you :)

[22:23] *** tadzik joined
[22:25] <timotimo> i don't understand perl6 properly, so necromancing druid is kind of not working very well :|

[22:25] <tadzik> feather is uP! \o/

[22:25] <timotimo> \o/

[22:25] <benabik> wb p6eval, dalek

[22:29] *** Kharec left
[22:31] <timotimo> r: class Base { has $!foo; }; class Other is Base { method test() { say $!foo; } }; Base.new.test

[22:32] <p6eval> rakudo 22518b: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Attribute $!foo not declared in class Other‚ê§at /tmp/_LHxL1twwm:1‚ê§------> [32mther is Base { method test() { say $!foo[33m‚èè[31m; } }; Base.new.test[0m‚ê§¬ª

[22:32] <timotimo> so i'd have to use self.::Base.foo or something?

[22:32] <timotimo> or turn $!foo into $.foo?

[22:33] <jnthn> The latter

[22:33] <PerlJam> timotimo: $!foo is private to Base.  If you want to make it at least readable from Other, you'll have to make an accessor.

[22:33] *** hoelzro is now known as hoelzro|away

[22:34] <timotimo> ok

[22:34] <sorear> or trusts :D

[22:34] *** FROGGS left
[22:34] <jnthn> heh, forgot about that :)

[22:35] <lichtkind> jnthn: wanna look into my calendar text?

[22:36] <jnthn> url?

[22:36] <PerlJam> lichtkind: you might want to put it up on gist.github.com or something for others to view.

[22:36] <masak> dudes and dudettes, I've written an advent post and scheduled it for tomorrow.

[22:37] <PerlJam> masak++

[22:37] <masak> you will find it at the customary location.

[22:37] <masak> reviews welcome.

[22:37] <lichtkind> masak++

[22:37] <lichtkind> PerlJam: good iadea

[22:37] <masak> I'm a bit tired tonight, so there are probably some errors here and there.

[22:38] <jnthn> masak: OMGZ ITZ ALL RONG!

[22:39] <masak> o.O

[22:39] <jnthn> lol not rly :)

[22:40] <masak> the degree of your seriousness was highlighted by your all-caps lolspeak.

[22:40] <lichtkind> https://gist.github.com/4341223

[22:40] *** MayDaniel joined
[22:41] <lichtkind> masak: did you put it on ghist?

[22:42] <masak> no, it's in the Wordpress system, as a draft.

[22:43] <lichtkind> can you please give me the link to that

[22:43] <lichtkind> i mean login page

[22:43] <lichtkind> i should have a account from last year

[22:43] *** Chillance left
[22:44] <timotimo> oh, wy was Term::ANSIColor not in the ecosystem any more?

[22:44] <jnthn> masak: nice post :)

[22:45] <tadzik> is it not?

[22:45] <tadzik> http://modules.perl6.org/ /o\

[22:45] <masak> jnthn: yay

[22:45] <tadzik> oh noes, it's a-not there

[22:46] <masak> lichtkind: the login page is linked from the main page of perl6advent.wordpress.com

[22:46] <diakopter> it was in there wrongly

[22:46] <diakopter> the github url was wrong

[22:46] <tadzik> lies!

[22:46] <lichtkind> thanks

[22:46] <diakopter> [Coke] reported it a day or two ago

[22:46] <tadzik> I still don't know which url was wrong

[22:47] <diakopter> dunno, ask [Coke] 

[22:47] *** thou left
[22:47] <timotimo> ah, ok

[22:47] <diakopter> it had a :: instead of -

[22:47] *** PerlJam left
[22:48] <tadzik> https://github.com/tadzik/perl6-Term-ANSIColor/blob/master/META.info looks ok to me

[22:48] *** benabik left
[22:49] <tadzik> and I see it in https://github.com/perl6/ecosystem/blob/master/META.list#L12 alright

[22:49] <diakopter> maybe I heard wrong; search the irclog

[22:50] <tadzik> I remember asking questions, for I had no idea what's wrong :P

[22:50] <tadzik> [Coke]! [Coke]!

[22:50] *** fgomez left
[22:55] <lichtkind> can perl6advent admin please add user lichtkind to edit rights 

[22:56] <tadzik> http://feather.perl6.nl:3000/module/Term;ANSIColor

[22:56] <tadzik> seems to work

[22:58] *** donaldh joined
[23:00] <timotimo> resolve stage failed for Rakudo::Debugger: Rakudo::Debugger depends on Term::ANSIColor, which was not found in the ecosystem

[23:00] <timotimo> should it work without my intervention?

[23:01] <timotimo> oh yes, panda update apparently

[23:01] <timotimo> er, no, actually not

[23:03] <tadzik> panda update should fix it

[23:03] <timotimo> installed it manually and am now trying to do --nodeps for Rakudo::Debugger

[23:03] <timotimo> strangely, the git repo couldn't be cloned. something must be off :|

[23:06] *** MayDaniel left
[23:06] <timotimo> turns out i was just short on RAM.

[23:07] *** PacoAir left
[23:10] <timotimo> i'm just having no luck at all today, i'll try again tomorrow :|

[23:19] <masak> 'night, #perl6

[23:19] *** masak left
[23:20] *** thou joined
[23:22] <popl> and god bless us, everyone

[23:22] *** donaldh left
[23:25] *** cognominal joined
[23:35] *** skids joined
[23:54] *** slayer joined
[23:54] *** slayer is now known as slayer101_

[23:57] *** slayer101_ left
[23:58] *** lichtkind left
