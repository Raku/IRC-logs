[00:05] *** eviltwin_b joined
[00:07] *** geekosaur left
[00:08] *** spider-mario left
[00:20] *** tyatpi left
[00:29] *** MContagious1 joined
[00:29] *** MContagious left
[00:32] *** tokuhirom joined
[00:34] *** xinming joined
[00:34] *** xinming__ joined
[00:39] *** ponbiki left
[00:45] *** eviltwin_b left
[00:46] *** eviltwin_b joined
[00:52] *** wolfman2000 left
[01:02] *** eviltwin_b left
[01:03] *** geekosaur joined
[01:05] *** tyatpi joined
[01:06] *** vlixes left
[01:06] *** scott_ joined
[01:07] *** scott_ is now known as Guest29784

[01:14] *** jaldhar joined
[01:14] *** eviltwin_b joined
[01:15] *** tyatpi left
[01:17] *** geekosaur left
[01:18] *** wolfman2000 joined
[01:26] *** geekosaur joined
[01:28] *** eviltwin_b left
[01:30] *** benabik joined
[01:42] *** eviltwin_b joined
[01:45] *** geekosaur left
[01:57] *** sisar joined
[01:58] *** sisar left
[01:58] *** nebuchadnezzar left
[02:00] *** sisar joined
[02:05] *** whiteknight left
[02:08] *** scott_ joined
[02:08] *** scott_ is now known as Guest45065

[02:10] *** Guest29784 left
[02:13] *** sivoais left
[02:19] *** lichtkind left
[02:20] *** sivoais joined
[02:35] *** nebuchadnezzar joined
[02:37] *** allbery_b joined
[02:39] <dalek> tablets: 3f82744 | (Herbert Breunung)++ | docs/appendix-g-glossary.txt:

[02:39] <dalek> tablets: repair unicode file

[02:39] <dalek> tablets: review: https://github.com/perl6/tablets/commit/3f827440f9

[02:40] *** orafu left
[02:40] *** eviltwin_b left
[02:41] *** orafu joined
[02:42] <colomon> sorear: out there?

[02:42] *** eviltwin_b joined
[02:44] *** allbery_b left
[02:48] *** noam left
[02:48] *** noam joined
[02:49] *** noam left
[02:49] *** noam joined
[02:54] *** MContagious1 left
[02:57] <sorear> colomon: hi

[02:57] <colomon> sorear: no worries, I figured it out

[02:58] <colomon> bizarre error message, but my stupid

[02:58] *** allbery_b joined
[02:59] *** allbery_b left
[03:00] *** allbery_b joined
[03:01] *** eviltwin_b left
[03:05] *** ponbiki joined
[03:14] *** eviltwin_b joined
[03:16] *** allbery_b left
[03:19] *** MContagious joined
[03:24] *** MContagious left
[03:24] *** eviltwin_b left
[03:25] *** eviltwin_b joined
[03:31] *** eviltwin_b left
[03:31] *** eviltwin_b joined
[03:32] *** scott_ joined
[03:33] *** scott_ is now known as Guest15350

[03:34] *** mattp_ left
[03:34] *** ddima left
[03:34] *** mattp_ joined
[03:35] *** ddima joined
[03:36] *** Guest45065 left
[03:37] *** eviltwin_b left
[03:46] *** Transformer joined
[03:47] *** eviltwin_b joined
[03:47] *** Transformer left
[03:49] *** scott___ joined
[03:51] *** Guest15350 left
[04:08] *** sisar left
[04:13] *** MContagious joined
[04:22] *** geekosaur joined
[04:25] *** eviltwin_b left
[04:28] *** Patterner left
[04:29] *** eviltwin_b joined
[04:29] *** envi_ joined
[04:32] *** geekosaur left
[04:37] *** sftp_ left
[04:46] *** NamelessTee joined
[04:46] *** eviltwin_b left
[04:47] *** eviltwin_b joined
[04:48] *** thou joined
[04:51] *** thou left
[04:53] *** geekosaur joined
[04:53] *** tokuhirom left
[04:53] *** eviltwin_b left
[05:00] *** birdwindupbird joined
[05:02] *** eviltwin_b joined
[05:02] *** ponbiki left
[05:04] *** geekosaur left
[05:05] *** allbery_b joined
[05:08] *** eviltwin_b left
[05:10] *** allbery_b left
[05:11] *** eviltwin_b joined
[05:11] *** MContagious1 joined
[05:12] *** MContagious left
[05:14] *** zostay joined
[05:18] *** MContagious1 left
[05:20] *** MContagious joined
[05:26] *** ggoebel joined
[05:27] *** woosley joined
[05:29] *** zostay left
[05:30] *** zostay joined
[05:31] <moritz> \o

[05:31] <sorear> o/

[05:32] *** bsb left
[05:36] *** kaleem joined
[05:39] *** bsb joined
[05:42] <moritz> what's the name of the thing that a database query returns?

[05:42] <moritz> it's not a table, because it's ordered

[05:46] <dalek> DBIish: fa853a9 | moritz++ | lib/DBDish/SQLite.pm6:

[05:46] <dalek> DBIish: [sqlite] remove unspecific code from backend

[05:46] <dalek> DBIish: review: https://github.com/perl6/DBIish/commit/fa853a961c

[05:47] <moritz> ah, ResultSet probably

[05:54] *** wtw joined
[05:54] *** brrt joined
[05:59] *** NamelessTee left
[05:59] *** eoh joined
[06:00] *** localhost left
[06:23] *** MContagious left
[06:23] *** MContagious joined
[06:24] *** xinming_ left
[06:24] *** xinming left
[06:24] *** xinming__ left
[06:33] *** pjcj joined
[06:36] *** geekosaur joined
[06:38] *** pjcj left
[06:39] *** eviltwin_b left
[06:42] *** pjcj joined
[06:42] *** geekosaur left
[06:43] *** geekosaur joined
[06:44] *** brrt left
[07:08] *** brrt joined
[07:15] *** woosley left
[07:27] *** fhelmberger joined
[07:28] *** xinming joined
[07:37] <jnthn> morning, #perl6

[07:41] <frettled> apparently it is! \o/

[07:41] <sorear> o/

[07:49] <moritz> 'o

[07:50] <moritz> sorear: what would be the best approach to get databases running under niecza?

[07:50] <moritz> sorear: something like DBIish for niecza

[07:51] <sorear> I guess indirecting through CLR

[07:54] <moritz> is there some kind of module/package installing infrastructure for mono?

[07:55] *** pnu_ joined
[07:56] *** japhb_ joined
[07:57] *** jnthn_ joined
[07:57] *** pnu left
[07:57] *** phenny left
[07:57] *** jnthn left
[07:58] *** eiro left
[07:58] *** phenny joined
[07:58] *** eiro joined
[07:59] *** snarkyboojum joined
[08:00] *** jevin joined
[08:09] *** eviltwin_b joined
[08:09] *** GlitchMr joined
[08:09] *** jnthn_ is now known as jnthn

[08:12] *** geekosaur left
[08:13] *** d4l3k_ joined
[08:16] *** cj__ joined
[08:16] *** jrockway_ joined
[08:17] *** BlueT_ joined
[08:17] *** _-`user0_ joined
[08:17] *** integral_ joined
[08:17] *** integral_ left
[08:17] *** integral_ joined
[08:19] *** xenu_ joined
[08:20] *** Vlavv_ joined
[08:20] *** kaleem_ joined
[08:21] *** japhb__ joined
[08:21] *** japhb_ left
[08:21] *** kaleem left
[08:21] *** dalek left
[08:21] *** _-`user0 left
[08:21] *** d4l3k_ is now known as dalek

[08:23] *** rafl joined
[08:23] *** araujo joined
[08:23] *** araujo left
[08:23] *** araujo joined
[08:25] <tadzik> oh skark

[08:25] <tadzik> bah, mornings--

[08:25] <moritz> shark it's tadzik!

[08:27] *** dakkar joined
[08:28] * jnthn wasn't happy to find the morning had arrived either

[08:28] <jnthn> Moar sleep woulda been nice :)

[08:28] <moritz> aye

[08:32] *** dakkar left
[08:33] <dalek> ecosystem: 5ed4b81 | moritz++ | META.list:

[08:33] <dalek> ecosystem: add DBIish

[08:33] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/5ed4b81110

[08:33] * moritz just added the 100ths module to that list

[08:35] <tadzik> \o

[08:35] <tadzik> time to run smoketests

[08:35] <moritz> note that DBIish currently needs a branch of both nqp and zavolaj

[08:35] <tadzik> ach

[08:36] <arnsholt> But I suppose we could merge that branch

[08:36] <moritz> ie test failures with an out-of-the-box rakudo are to be expected

[08:36] <moritz> arnsholt: please do

[08:36] *** cosimo joined
[08:36] <arnsholt> First of all, I was holding off for a bit of independent verification that my code wasn't broken in some obvious way

[08:36] <tadzik> moritz: do DBIish tests rely on DBDish backends?

[08:37] <moritz> tadzik: yes

[08:37] <tadzik> ack

[08:37] <tadzik> we do need some cool mechanism for those

[08:37] <moritz> tadzik: over time I want to make them more robust, so that unavailable dbs simply skip their tests

[08:38] <tadzik> would be cool, yes

[08:41] <arnsholt> I suppose we could at least provide a mechanism via the dyncall ops to try to load a lib and die if loading fails

[08:43] * jnthn suggests adding an extra op

[08:43] <jnthn> And then a sub in NativeCall

[08:45] <arnsholt> Yeah, that's what I was thinking too

[08:45] *** scott____ joined
[08:45] *** dakkar joined
[08:45] <arnsholt> I just have to figure out how to add an op to nqp_dyncall.ops

[08:46] *** SatoAmbush joined
[08:46] <arnsholt> (I'd like to add a write-barrier op as well, to handle creepy action at a distance changes to C storage)

[08:46] *** scott___ left
[08:46] <jnthn> arnsholt: Edit the .ops file, inline op nqp_dyncall_can_load(out INT, in STR) { ... }

[08:47] <jnthn> Something like that.

[08:47] <arnsholt> Yeah, that looks familiar

[08:47] *** dakkar_ joined
[08:48] *** dakkar left
[08:48] *** dakkar_ is now known as dakkar

[08:49] <moritz> fwiw I don't even know if I need such an up

[08:49] <moritz> *op

[08:50] <moritz> I'll just do   try { DBIish.connect(...); CATCH { skip "No DB connection: $!" , $number; exit }}

[08:50] <jnthn> I suspect it's useful for implemetning the .bundle vs .dylib stuff, and good to have for other bits.

[08:50] <moritz> yes, agreed

[08:50] <arnsholt> Yeah, there's that as well

[08:50] <moritz> just sayin' I'm not blocking on it

[08:51] <tadzik> duh, panda suffers the same problem as URI, non-deterministic precompilation :/

[08:52] <moritz> :(

[08:52] <dalek> zavolaj: 16af23b | moritz++ | README.markdown:

[08:52] <dalek> zavolaj: fix typo

[08:52] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/16af23bbb3

[08:52] <dalek> Perlito: ebce10f | (Flavio S. Glock)++ | / (5 files):

[08:52] <dalek> Perlito: Perlito5 - parser: add __END__, __DATA__

[08:52] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/ebce10fb49

[08:52] *** alvis joined
[08:55] <moritz> arnsholt, jnthn: should I delete examples/sqlite3.p6 (which segfaults), and instead point to working DBIish driver(s)?

[08:55] <moritz> from zavolaj, that is

[08:56] <jnthn> moritz: yes

[08:59] <dalek> zavolaj: d9250b0 | moritz++ | / (2 files):

[08:59] <dalek> zavolaj: remove segfaulting sqlite example, point to working DBDish/*.pm6 modules instead

[08:59] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/d9250b0ac3

[09:06] *** jaffa4 joined
[09:06] * jnthn -> office, bbl

[09:06] <jaffa4> hi

[09:06] <jaffa4> How do you debug perl 6 programs?

[09:06] <tadzik> with say(), usually :)

[09:06] *** _-`user0_ left
[09:06] <tadzik> and Grammar::Tracer for grammars

[09:06] <jaffa4> that is so archaic.

[09:07] <tadzik> yes

[09:07] <moritz> jnthn: you are welcome to contribute a proper debugger

[09:07] <moritz> erm, meant jaffa4 

[09:07] <moritz> though jnthn is of course welcome too :-)

[09:07] <jaffa4> jnthn:  please write us a debugger

[09:08] <moritz> jaffa4: please write us a debugger

[09:11] <jaffa4> Is there support for tracing, brackpoints?

[09:11] <jaffa4> brack=> brakepoint

[09:11] <jaffa4> breakpoints

[09:12] <arnsholt> There might be a Parrot-level debugger, but nothing on the Perl 6 level for Rakudo AFAIK

[09:12] <jaffa4> WHat about niecza?

[09:13] <arnsholt> Dunno. Never used it

[09:13] <arnsholt> Probably some kind of Mono debugger at least

[09:14] <jaffa4> I guess then some kind of debugging should be inserted into generated bytecode

[09:15] *** geekosaur joined
[09:18] *** eviltwin_b left
[09:20] <dalek> Perlito: b9c058b | (Flavio S. Glock)++ | TODO-perlito5:

[09:20] <dalek> Perlito: Perlito5 - parser: add TODO; considering whether to implement indirect object notation

[09:20] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/b9c058ba20

[09:28] *** geekosaur left
[09:28] *** geekosaur joined
[09:38] *** eviltwin_b joined
[09:40] <dalek> Perlito: 486148a | (Flavio S. Glock)++ | / (3 files):

[09:40] <dalek> Perlito: Perlito5 - parser: simplify internal expression data structure

[09:40] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/486148aef3

[09:41] *** geekosaur left
[09:48] <jaffa4> moritz: What is the state of Perl 6 in your opinion?

[09:49] *** eviltwin_b left
[09:49] <moritz> jaffa4: evolving. Fun to use for early adopters.

[09:50] *** eviltwin_b joined
[10:06] *** kresike joined
[10:06] <dalek> Perlito: 1dd6050 | (Flavio S. Glock)++ | / (4 files):

[10:06] <dalek> Perlito: Perlito5 - parser: be more strict

[10:06] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/1dd60507c5

[10:10] *** stepnem left
[10:11] *** stepnem joined
[10:25] *** dakkar left
[10:31] *** scott____ left
[10:34] *** JimmyZ joined
[10:34] *** dakkar joined
[10:37] *** allbery_b joined
[10:38] *** NamelessTee joined
[10:39] *** dakkar left
[10:39] *** dakkar joined
[10:40] *** eviltwin_b left
[10:50] *** dakkar left
[10:51] *** geekosaur joined
[10:54] *** allbery_b left
[10:58] *** dakkar joined
[11:09] *** benabik left
[11:10] *** dakkar left
[11:17] *** dakkar joined
[11:18] *** estrai joined
[11:26] *** dakkar left
[11:28] *** dakkar joined
[11:29] *** envi_ left
[11:30] *** alvis left
[11:39] *** eviltwin_b joined
[11:41] *** dakkar left
[11:42] *** geekosaur left
[11:44] *** dakkar joined
[11:50] *** SatoAmbush left
[11:52] *** benabik joined
[11:52] *** spider-mario joined
[11:53] *** NamelessTee left
[11:55] *** allbery_b joined
[11:57] *** eviltwin_b left
[11:58] *** skids left
[11:59] *** jerome_ joined
[12:01] *** SatoAmbush joined
[12:14] *** sisar joined
[12:21] *** mtk joined
[12:23] <dalek> Perlito: 88914e1 | (Flavio S. Glock)++ | TODO-perlito5:

[12:23] <dalek> Perlito: Perlito5 - TODO update

[12:23] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/88914e1a73

[12:26] <dalek> rakudo/nom: 1972721 | moritz++ | src/core/Backtrace.pm:

[12:26] <dalek> rakudo/nom: warnings should include line numbers from user-space programs, not from the setting

[12:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1972721e46

[12:31] * [Coke] yawns.

[12:32] *** eviltwin_b joined
[12:34] *** geekosaur joined
[12:35] <dalek> roast: d9f7caa | moritz++ | / (2 files):

[12:35] <dalek> roast: RT #112724, line numbers from warnings

[12:35] <dalek> roast: review: https://github.com/perl6/roast/commit/d9f7caae3d

[12:35] *** allbery_b left
[12:36] *** eviltwin_b left
[12:41] *** bluescreen10 joined
[12:41] *** eviltwin_b joined
[12:44] *** geekosaur left
[12:46] <jaffa4> Coke: are you bored?

[12:47] <[Coke]> jaffa4: tired.

[12:48] *** am0c left
[12:49] <masak> moritz: http://irclog.perlgeek.de/perl6/today gives an error message on IE9. "TypeError: Object doesn't support property or method 'hide'"

[12:49] <moritz> masak: eeks

[12:49] * JimmyZ is tired too

[12:50] <moritz> masak: works here on IE 9.0.6

[12:51] <moritz> oh, maybe I have js disabled

[12:52] <masak> maybe.

[12:52] <masak> which is a wise thing to do, no doubt.

[12:52] *** PacoAir joined
[12:52] <estrai> is there a way to open/readir in rakudo?

[12:52] <moritz> estrai: dir() lists all entries of a directory

[12:53] <masak> IE 9.0.8112.16421 here.

[12:53] <moritz> estrai: lazy lists make explicit iteration over directories unnecessary

[12:55] * masak is tired, but less so than yesterday

[12:55] <estrai> moritz: thanks, that worked, is there a way to use it with a glob?

[12:55] <masak> moritz: that's actually a really good example of how lazy lists have emergen changes on the language.

[12:55] <moritz> estrai: no

[12:56] <moritz> estrai: but you can grep with regexes

[12:56] <moritz> dir('.').grep: / \.txt $ /

[12:56] * masak wouldn't mind a module providing XPath-like search capabilities for dirs and files

[12:56] <jaffa4> Is it true that one can one use regular expressions on files directly?

[12:56] <tadzik> well volunteered! :)

[12:57] <masak> tadzik: there's a weekend coming up... :)

[12:57] <moritz> masak: no, not before you've blogged about t4 :-)

[12:57] <estrai> moritz: how efficient is that, will it read all contents first and then apply the regexp or is it smarter then that?

[12:57] <masak> moritz: +1

[12:57] <masak> moritz: I promise.

[12:57] <moritz> estrai: it reads them all (at least if you consume all elements of the result list). But glob needs to do that too.

[12:58] <masak> jaffa4: on what, the file contents, the file name, or the file's last-modified timestamp? :)

[12:58] <jaffa4> on file contents

[12:58] <moritz> I'm pretty sure you can't regex file contents without reading them in some way

[12:58] <moritz> or at least mmap them

[12:58] <jaffa4> I mean regex on file handle or stream

[13:00] <moritz> r: grammar A { token TOP { .*? (\w+) } }; A.parsefile('README') && say $0.Str

[13:00] <p6eval> rakudo 0059aa: OUTPUT«Unable to open filehandle from path 'README'␤  in method open at src/gen/CORE.setting:6588␤  in sub open at src/gen/CORE.setting:6808␤  in method parsefile at src/gen/CORE.setting:8862␤  in block <anon> at /tmp/9RdQGzrdWw:1␤␤»

[13:00] <moritz> r: grammar A { token TOP { .*? (\w+) } }; A.parsefile('/etc/passwd') && say $0.Str

[13:00] <p6eval> rakudo 0059aa: OUTPUT«root␤»

[13:01] <tadzik> hehe

[13:02] <moritz> r: grammar A { token TOP { \N+ } }; A.parsefile('/etc/passwd') && say ~$/

[13:02] <p6eval> rakudo 0059aa: OUTPUT«root:x:0:0:root:/root:/bin/bash␤»

[13:07] <[Coke]> r: http://www.cnn.com/

[13:07] <p6eval> rakudo 0059aa: OUTPUT«===SORRY!===␤Confused␤at /tmp/f63DG4u330:1␤»

[13:10] <masak> [Coke]: what did you expect that to give?

[13:11] <[Coke]> masak: perhaps a slightly more interesting error message, but not much.

[13:11] *** xenu_ left
[13:12] *** allbery_b joined
[13:12] <[Coke]> r: 'a'..'z'.roll(4).say

[13:12] <p6eval> rakudo 0059aa: OUTPUT«z z z z␤»

[13:12] <[Coke]> r: ('a'..'z').roll(4).say

[13:12] <p6eval> rakudo 0059aa: OUTPUT«k y r n␤»

[13:12] <PerlJam> Coke: your forgot to load your custom HTML grammar first so that cnn.com gets translated to code

[13:13] *** clkao joined
[13:13] <dalek> Perlito: 0cacd93 | (Flavio S. Glock)++ | / (4 files):

[13:13] <dalek> Perlito: Perlito5 - parser: add "local $x[1]"

[13:13] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/0cacd93546

[13:14] *** mikemol joined
[13:15] *** eviltwin_b left
[13:16] *** xenu joined
[13:16] <moritz> r: constant C4 = 0x10000000; 

[13:16] <p6eval> rakudo 197272:  ( no output )

[13:17] <moritz> r: constant C4 = 0x1000000000000000; 

[13:17] <p6eval> rakudo 197272:  ( no output )

[13:17] *** xenu is now known as Guest26954

[13:17] <moritz> r: constant C4 = 0x1000000000000000; say C4

[13:17] <p6eval> rakudo 197272: OUTPUT«1152921504606846976␤»

[13:18] <fglock> clkao: hi!

[13:18] *** colomon joined
[13:18] <dalek> tablets: bcf340e | (Chas. J. Owens IV)++ | docs/tablet-2-basic-syntax.txt:

[13:18] <dalek> tablets: typo fixes

[13:18] <dalek> tablets: review: https://github.com/perl6/tablets/commit/bcf340ea6c

[13:18] <dalek> tablets: 3327915 | (It's secret to everybody)++ | docs/tablet-2-basic-syntax.txt:

[13:18] <dalek> tablets: Merge pull request #2 from cowens/patch-1

[13:18] <dalek> tablets: 

[13:18] <dalek> tablets: typo fixes

[13:18] <dalek> tablets: review: https://github.com/perl6/tablets/commit/3327915084

[13:19] <masak> clkao! \o/

[13:20] <moritz> r: say '+' ~~ 34

[13:20] <p6eval> rakudo 197272: OUTPUT«malformed numeric string␤  in method Numeric at src/gen/CORE.setting:8670␤  in sub infix:<==> at src/gen/CORE.setting:2377␤  in sub infix:<==> at src/gen/CORE.setting:2377␤  in method ACCEPTS at src/gen/CORE.setting:2159␤  in block <anon> at /tmp/7gE5uGTNsN:1␤␤»…

[13:21] *** skids joined
[13:35] <masak> r: say ('+' ==> ord) ~~ 34

[13:35] <p6eval> rakudo 197272: OUTPUT«False␤»

[13:36] <masak> right, 'cus it... isn't :)

[13:36] <masak> r: say chr 34

[13:36] <p6eval> rakudo 197272: OUTPUT«"␤»

[13:36] <masak> r: say ('"' ==> ord) ~~ 34

[13:36] <p6eval> rakudo 197272: OUTPUT«True␤»

[13:38] <dalek> tablets: 4798709 | (Chas. J. Owens IV)++ | docs/tablet-2-basic-syntax.txt:

[13:38] <dalek> tablets: type fix

[13:38] <dalek> tablets: review: https://github.com/perl6/tablets/commit/4798709f25

[13:38] <dalek> tablets: 31b5d31 | (Herbert Breunung)++ | docs/tablet-2-basic-syntax.txt:

[13:38] <dalek> tablets: Merge pull request #3 from cowens/patch-2

[13:38] <dalek> tablets: 

[13:38] <dalek> tablets: typo fix, cowens++

[13:38] <dalek> tablets: review: https://github.com/perl6/tablets/commit/31b5d31a2f

[13:41] *** SatoAmbush left
[13:46] *** kaleem_ left
[13:47] *** rurban joined
[13:47] <rurban> I've got some packaging questions

[13:48] <moritz> rurban: shoot

[13:48] *** pernatiy joined
[13:49] <rurban> parrot-4.0.3 generated a parrot-nqp (no nqp). rakudo perl Configure needs --with-nqp=/usr/bin/parrot-nqp

[13:49] <rurban> but then the Configure step generated a new nqp and copies it to /usr/bin

[13:49] <rurban> is this the same nqp as parrot's?

[13:49] <moritz> no.

[13:50] <moritz> rakudo needs the nqp from github.com/perl6/nqp

[13:50] <rurban> It should be forbidden for Configure to copy into prefix

[13:50] *** lichtkind joined
[13:50] <moritz> uhm, does it?

[13:50] <moritz> it only does for me if you use some --gen-<mumble> options

[13:50] <rurban> I see. So --with-nqp=/usr/bin/parrot-nqp is wrong?

[13:51] <moritz> which packagers shouldn't use

[13:51] <rurban> It worked for me without the gen steps

[13:51] <moritz> rurban: yes, it's worng

[13:51] <lichtkind> eny git experts here, git say me that i have untracked files but there are none really

[13:51] <phenny> lichtkind: 02 May 16:14Z <masak> tell lichtkind re https://github.com/perl6/tablets/blob/2c73ee9c1daf2d582711994d91e424d36caef7c2/docs/appendix-g-glossary.txt#L197 -- I believe you meant s/terms and statements/terms and operators/

[13:51] <phenny> lichtkind: 02 May 17:48Z <sisar> tell lichtkind the navigation links at the top of Appendix A are broken, especially the symbols row. I tried to fix it, but my markdown knowledge is limited.

[13:51] <phenny> lichtkind: 02 May 17:59Z <sisar> tell lichtkind i meant the navigation links just above the heading "Punctuation"

[13:51] <masak> lichtkind: could you provide a relevant nopaste?

[13:51] <rurban> Nexty problem: ./perl6.exe --setting=NULL --optimize=3 --target=pir  --output=src/gen/CORE.setting.pir src/gen/CORE.setting

[13:51] <daxim> lichtkind, paste of your command and the exact output, please

[13:51] <moritz> lichtkind: 'git status' gives you a list of untracked files

[13:52] <rurban> Parrot VM: PANIC: Out of mem! ha :)

[13:52] <moritz> rurban: it needs about 1.2G on 64bit systems

[13:52] <rurban> I'm building in a VM with 2GB RAM

[13:52] *** thou joined
[13:52] <masak> Parrot says "ha :)" when it runs out of memory? :P

[13:52] <rurban> I see. I need to document this.

[13:52] <lichtkind> moritz: i tried that

[13:52] <rurban> I said "ha :)"

[13:52] <moritz> lichtkind: so, it told you which files were untracked?

[13:52] <masak> I know. :)

[13:52] <tadzik> rurban: you may need more than 2GB if you're on 64-bit

[13:53] <rurban> Because just yestreday I posted my perl5 perlcc out of memory results to blogs.perl.org

[13:53] <lichtkind> moritz: it doesnt

[13:53] <frettled> 2 gigs should be enough for anyone!

[13:53] <moritz> lichtkind: so how do you know there are untracked files?

[13:54] <sisar> moritz++ (reporting line no. bugfix) It will help in debugging some panda issues. o/

[13:54] <aloha> Karma for moritz is now 3121

[13:54] <moritz> aloha: please stop doing that

[13:54] <lichtkind> moritz: becasue it says so

[13:54] <sisar> whoa 3121 !

[13:54] <moritz> lichtkind: which 'it'?

[13:54] <rurban> I'll retry with 4GB. cygwin package is coming soon

[13:55] <moritz> rurban: thank you very much

[13:55] <lichtkind> masak:  your right

[13:55] <daxim> ~/code/perl/six/tablets/.gitignore is not part of the repo

[13:55] <moritz> rurban: you'll hopefully notice much improved startup time

[13:55] <daxim> `add` it and commit it

[13:56] <lichtkind> moritz: git says :  Untracked files:

[13:56] <masak> lichtkind: I'm right? great!

[13:56] <moritz> lichtkind: 'git' itself doesn't say that. A subcommand of git does. Which one?

[13:56] <lichtkind> masak: i mean the phenny msg

[13:57] <masak> oh, good.

[13:57] <lichtkind> moritz: yes status

[13:57] <daxim> case closed.

[13:59] *** noam left
[13:59] <rurban> At first I noticed that it needs more memory :)

[13:59] <lichtkind> sisar: yes one anchor was missing fixed now

[13:59] <moritz> rurban: what was the last version you compiled before that?

[13:59] <rurban> But my compiler behaves the same, solwer compile-time, more memory, but faster run-time

[13:59] <rurban> last was 2011.07

[14:00] <lichtkind> daxim: so i should add .gitignore?

[14:00] <moritz> rurban: heh. 2012.01 took about 40% more than now :-)

[14:00] <daxim> add it and commit it

[14:00] <rurban> Yes, I skipped all those

[14:00] <dalek> tablets: 194b1cc | (Herbert Breunung)++ | docs/appendix- (2 files):

[14:00] <dalek> tablets: added missing anchor

[14:00] <dalek> tablets: review: https://github.com/perl6/tablets/commit/194b1cc5db

[14:02] *** jferrero joined
[14:04] <dalek> tablets: 2a74194 | (Herbert Breunung)++ | .gitignore:

[14:04] <dalek> tablets: finally added gitignore

[14:04] <dalek> tablets: review: https://github.com/perl6/tablets/commit/2a74194a43

[14:04] <lichtkind> sorry for inconveniance i read that message as if .gitignore will tell something

[14:06] <daxim> you have both .gitignore and docs/.gitignore  --  delete docs/.gitignore

[14:07] <[Coke]> daxim: perhaps you mean "merge them into a singl .gitignore"

[14:07] *** kaleem joined
[14:09] <rurban> Maybe I'll try an android cross-build then. Anyone tried before?

[14:10] <rurban> cygwin 32-bit only needed about free 500MB RAM

[14:12] <rurban> make spectest fails now in a non .git builddir. cd t/spec && git pull

[14:13] <rurban> spectest_update should maybe check for .git and clone it then

[14:13] <moritz> rurban: that line in the Makefile has a - in front, which most make commands interpret as 'it's ok if this command fails'

[14:13] *** tokuhirom joined
[14:13] <moritz> rurban: does the make in cygwin not do that?

[14:14] <rurban> I see, it works fine without

[14:15] <rurban> S02-literals/quoting.rakudo and S02-magicals/args.t and some more fail. known problems?

[14:15] <moritz> rurban: it has been reported on some platforms, but I don't think it has ever been diagnosed thoroughly

[14:16] <rurban> I'll try. maybe a windowism

[14:16] <moritz> rurban: can you please nopaste the output of   PERL6LIB=lib ./perl6 t/spec/{S02-literals/quoting.rakudo,S02-magicals/args.t}   ?

[14:16] *** jlaire joined
[14:16] *** eviltwin_b joined
[14:17] <rurban> RT 65304 fails, but not ok 94 - :pair<anglequoted># TODO << :pair(1) >> (eval failed)

[14:18] <rurban> oh, and I got a fork error in perl6_ops.dll. need to rebase

[14:18] <moritz> so it's a TODOed test that fails?

[14:19] *** allbery_b left
[14:19] <moritz> maybe some version of prove that doesn't like certain characters in the TODO message?

[14:19] <rurban> everything alright. it's a cygwin rebase problem

[14:19] <rurban> I need to rebase the dll's before running the tests

[14:20] <rurban> 94 is a TODO

[14:20] <rurban> I have to do the same with perl5

[14:23] <rurban> And all the copies of cygparrot-4.3.0.dll do not help with rebase problkems at all. makes it worse. better have only one in /usr/bin/

[14:24] <moritz> rurban: I think one in $PATH is enough, yes

[14:27] *** allbery_b joined
[14:27] *** PacoAir left
[14:30] *** eviltwin_b left
[14:32] *** Guest26954 left
[14:35] *** eoh left
[14:35] *** eoh| joined
[14:36] <moritz> r: if 42, 44, 22 -> *@a { say @a.perl }

[14:36] <p6eval> rakudo 197272: OUTPUT«Array.new()␤»

[14:38] *** xenu joined
[14:38] *** xenu is now known as Guest98292

[14:40] *** JimmyZ_ joined
[14:41] *** JimmyZ left
[14:41] *** JimmyZ_ is now known as JimmyZ

[14:45] *** MContagious left
[14:47] *** cogno joined
[14:50] *** anil joined
[14:51] *** anil left
[14:51] <rurban> yes, rebased the perl6 dll's and fork tests pass now. conflict was with dynext/perl6_ops.dll and cygiconv-2.dll

[14:51] <rurban> I'm not sure how to codify these steps, as normally you need a dash session without any service and bash running

[14:52] <moritz> oh, "fun"

[14:53] <rurban> if the rebase database is already initialized with cygparrot also, then it is only: ls dynext/*.dll nqp/dynext/*.dll > dll.lst; rebaseall -T dll.lst

[14:54] *** araujo left
[14:54] <rurban> if cygparrot is not in, it will need more. I'll try to codify it for parrot and then for rakudo

[14:57] *** kaare_ joined
[14:58] *** not_gerd joined
[14:59] *** geekosaur joined
[15:00] *** kresike left
[15:00] <moritz> rurban: ah, I've seen those on 32bit platforms. Known problem :(

[15:00] <not_gerd> rurban: https://gist.github.com/1641348 is how I do my rebasing

[15:00] <rurban> overflow failures at http://nopaste.snit.ch/paste/137433

[15:00] <not_gerd> (also, hello #perl6)

[15:01] <rurban> gerd: find" -iname '*.dll' will find duplicate dll's

[15:01] <rurban> better only the ones in dynext

[15:01] <rurban> not the one in src

[15:02] *** allbery_b left
[15:02] <rurban> ah I see. you rebase everything under c:/cygwin. hmm

[15:03] <not_gerd> rurban: you need to invoke the script from your build directory

[15:03] <not_gerd> it looks for additional DLLs there and does a rebaseall

[15:04] <rurban> I would omit the duplicates. ls dynext/*.dll nqp/dynext/*.dll is better

[15:04] <rurban> in cmd.exe syntax: dir /b dynext\*.dll nqp\dynext\*.dll

[15:05] <not_gerd> rurban: the script is not specific to Parrot/NQP/Rakudo, but general purpose

[15:07] *** araujo joined
[15:07] <rurban> t/spec/S16-filehandles/filetest.rakudo: not ok 28 - ~~:z returns false on directories

[15:08] <rurban> filetest :z failure at http://nopaste.snit.ch/paste/137434

[15:08] *** JimmyZ left
[15:09] <moritz> rurban: that nopaste comes out empty here

[15:09] *** JimmyZ joined
[15:10] <PerlJam> Should nom ultimiately only have nqp::mumble ops?  (i.e., the pir::mumble will have been extirpated)

[15:10] <moritz> PerlJam: probably

[15:11] <moritz> PerlJam: but some of the code is very parrot specific, and replacing pir:: by nqp:: doesn't help much

[15:11] <PerlJam> moritz: for instance?

[15:11] *** wtw left
[15:12] <moritz> PerlJam: exception handling. Backtraces.

[15:13] <PerlJam> The reason I ask is because I noticed that there are several pir::mumble ops being used that have corresponding nqp::mumble   (pir::split, pir::join, pir::chr, etc)

[15:13] <moritz> those could and should be replaced by their nqp:: counterparts

[15:13] <PerlJam> and your recently added nqp::die too

[15:20] <dalek> Perlito: 8d71fff | (Flavio S. Glock)++ | TODO-perlito5:

[15:20] <dalek> Perlito: Perlito5 - TODO update

[15:20] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/8d71fffe6e

[15:20] <PerlJam> Could someone remind what the letters after __ mean in pir::substr__SSI and  pir::substr__SSi ?  (or where to find out that info?)

[15:20] <moritz> type signatures

[15:20] <moritz> the first letter is for the returned value

[15:21] <moritz> and upper case means it needs to be a register

[15:21] <PerlJam> ok

[15:21] <moritz> lower case means it can also be a constant/literal

[15:22] <benabik> Type signatures and they're not well documented to my regular irritation.  I should just comment them.

[15:22] <moritz> they are documentated somehwere in PCT

[15:22] <benabik> Oh.

[15:23] <moritz> src/PAST/Compiler.pir

[15:23] <PerlJam> so, the map for nqp::substr says maphash['substr']   = 'substr__Ssii'   How does substr__SSI map to that?  Is another nqp::substr variant needed?

[15:23] *** tokuhirom left
[15:23] <benabik> Yes, I even copied that comment around.

[15:23] * benabik shuts up now.

[15:23] <masak> aloha_noise++ ?

[15:23] <aloha> masak: Karma for _noise is now 1

[15:23] <moritz> nqp: say(nqp::substr("abc", 1))

[15:23] <p6eval> nqp: OUTPUT«bc␤»

[15:23] <masak> do we have commit rights to aloha?

[15:23] *** MaskRay joined
[15:24] <moritz> PerlJam: seems you don't need a separate signature if you want fewer arguments

[15:24] <benabik> aloha: aloha?

[15:24] <moritz> PerlJam: and the lower-case variants are more general than the upper-case variants

[15:24] <benabik> Hm.  aloha seems to have lost it's facts database?

[15:24] <rurban> I submitted a couple of cygwin reports to rakudobug

[15:25] *** cogno left
[15:25] <moritz> PerlJam: there are just some parrot ops that don't like having constant arguments

[15:25] <moritz> rurban++

[15:25] <aloha> Karma for rurban is now 9

[15:25] <masak> benabik: I think aloha only does facts-database on #parrot

[15:25] <benabik> Ah.

[15:25] <masak> aloha: that is fiendishly annoying.

[15:25] <benabik> masak++

[15:25] <aloha> Karma for masak is now 715

[15:25] <PerlJam> so that version of nqp::substr should work for both the __SSi and __SSI cases?

[15:25] <moritz> yes

[15:26] <benabik> masak: aloha is on github, so you could at the least submit a pull request to basek

[15:26] <masak> ok.

[15:26] <moritz> I dimly recall that we've had the exact same issue before

[15:28] <masak> wohoo, trivial guess was correct: https://github.com/bacek/aloha

[15:28] *** tokuhirom joined
[15:28] <moritz> POLS++

[15:28] <aloha> Karma for pols is now 1

[15:28] <masak> huh! last commit was a year ago.

[15:28] <masak> so, what changed lately?

[15:28] <benabik> masak: Yeah, aloha has that knowledge in it's db which is why I was trying to query it.

[15:28] <moritz> masak: probably some module it uses

[15:28] <benabik> Probably an update to the plugin.

[15:30] *** ponbiki joined
[15:30] *** icwiener joined
[15:31] *** fglock left
[15:31] <masak> oh btw. I keep losing connection with feather today. but it might be on my end, because I didn't have any problems a few hours ago on a different computer.

[15:32] *** eviltwin_b joined
[15:32] *** tokuhirom left
[15:34] *** not_gerd left
[15:34] *** allbery_b joined
[15:34] <masak> just giving a heads-up, in case anyone else... g'ah it happened again! :)

[15:35] *** geekosaur left
[15:36] * TimToady is heading out to pick up quietfanatic from college; will be online occasionally to backlog

[15:37] *** eviltwin_b left
[15:37] <masak> masak.o/ ==> TimToady ==> quietfanatic

[15:38] <TimToady> Bool::True

[15:39] <moritz> not OK[<mumble>]? :-)

[15:42] <masak> not yet ;)

[15:43] *** bluescreen10 left
[15:43] *** bluescreen10 joined
[15:45] *** JimmyZ left
[15:46] *** bluescreen10 left
[15:48] * TimToady was tempted though, before settling on Bool::True

[15:50] <frettled> As long as we don't get Bool::Mu

[15:55] <TimToady> afk &

[15:56] *** noam joined
[15:59] * jnthn home o/

[16:01] <dalek> nqp/toqast: 0ce175f | masak++ | src/QAST/Operations.nqp:

[16:01] <dalek> nqp/toqast: [QAST::Operations] added lots of opcodes

[16:01] <dalek> nqp/toqast: 

[16:01] <dalek> nqp/toqast: Stopped at a couple that look like special cases.

[16:01] <dalek> nqp/toqast: 

[16:01] <dalek> nqp/toqast: Not all of these are tested, and some are probably wrong,

[16:01] <dalek> nqp/toqast: but most of them should work.

[16:01] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/0ce175f22c

[16:02] *** bluescreen10 joined
[16:02] *** MaskRay left
[16:02] <jnthn> Whoa!

[16:02] <jnthn> masak++

[16:02] <aloha> Karma for masak is now 716

[16:02] <masak> aloha: shut. up.

[16:03] <jnthn> aloha: I didn't ask you to tell me that.

[16:03] <masak> also, I could easily do those as an AoA and a for loop.

[16:03] <masak> that's an easy refactor.

[16:03] <masak> in fact, I'll do that right away.

[16:03] <jnthn> masak: er.

[16:03] <jnthn> It's just fine like that IMHO :)

[16:03] <masak> ok then.

[16:03] <jnthn> +QAST::Operations.add_core_pirop_mapping('atkey', 'set', 'PQs');

[16:03] <rurban> one more question: we do not install nqp? only parrot-nqp is there?

[16:03] <jnthn> er, you didn't implemnt Q support yet, right?

[16:04] <masak> jnthn: no.

[16:04] <masak> jnthn: probably merits a test.

[16:04] *** brrt left
[16:05] <jnthn> aye

[16:05] <jnthn> masak: Which special casey ones bovvad you?

[16:05] <frettled> Whose responsibility is this aloha annoyance?

[16:06] <frettled> (its help info is not helpful in that regard)

[16:06] <masak> jnthn: $P0 = new ['Hash']; $P0['pasttype'] = 'list'; maphash['list'] = $P0 -- and a similar one for 'hash'

[16:06] <jnthn> rurban: An NQP executable is installed by NQP's "make install", I believe.

[16:06] <jnthn> masak: Oh, yeah

[16:06] <jnthn> masak: Ignore those :)

[16:07] *** geekosaur joined
[16:07] <jnthn> masak: We get those ones for "free" thanks to a nice unification thanks to pmichaud++ :)

[16:07] <rurban> top-level make install did not install nqp

[16:07] <jnthn> "top-level"?

[16:07] <masak> jnthn: ok, great.

[16:07] <rurban> in the rakudo builddir

[16:08] <masak> more opcodes coming up.

[16:08] <rurban> should I call make -C nqp install?

[16:08] <jnthn> rurban: No no, I meant NQP's "make install".

[16:08] *** fglock joined
[16:09] <rurban> yes, that's what make -C nqp install does

[16:09] <rurban> t/nqp/60-bigint.t: Failed tests:  28-29, 34

[16:10] *** allbery_b left
[16:11] <dalek> nqp/toqast: d36485e | masak++ | src/QAST/Operations.nqp:

[16:11] <dalek> nqp/toqast: [QAST::Operations] some more opcodes

[16:11] <dalek> nqp/toqast: 

[16:11] <dalek> nqp/toqast: Do let me know if any of these aren't meant to be kept around

[16:11] <dalek> nqp/toqast: any more. I'll remove them right away. :)

[16:11] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/d36485eafc

[16:15] *** geekosaur left
[16:15] *** geekosaur joined
[16:15] <rurban> Is there no nqp manpage?

[16:17] <rurban> well, there's at least a nqp --help

[16:17] <jnthn> If it's not evident in the repo then probably not.

[16:18] * jnthn doesn't remember seeing one

[16:18] <masak> nqp isn't so outward-facing. with time, it probably will be. but right now it's still a bit bare-bones and targeted towards bootstrapping Perl 6.

[16:19] <jnthn> Aye.

[16:19] *** Chillance joined
[16:19] <PerlJam> masak: with time nqp will be replaced with Perl 6   ;)

[16:20] *** mspaulding joined
[16:21] <jnthn> PerlJam: Uh. Eliminating NQP isn't anywhere in my vision for Rakudo for the foreseeable future. :)

[16:21] <sisar> phenny, tell tadzik, due to moritz++ recent bugfix, we now get the line no. in warnings in panda. For example, lines 4 & 7 in https://gist.github.com/2586890.

[16:21] <phenny> sisar: I'll pass that on when tadzik is around.

[16:21] <rurban> Should I install it at all then? We have a parrot-nqp and a nqp which is a bit awkward to announce

[16:22] <PerlJam> jnthn: sure ... no one specified the horizon for "with time"  though  :)

[16:22] <frettled> PerlJam: I think someone mentioned a certain heathen holiday turned mainstream commercially and nominally Christian, once upon a time

[16:23] <jnthn> rurban: Well, parrot-nqp is the old one...nqp is the one that is actively developed etc.

[16:23] <frettled> I have a feeling that my slow-time refactoring of the cookbook will be finished before NQP is out of date ;)

[16:24] <rurban> I will just install both, and refer to nqp which should be used

[16:24] <frettled> å

[16:24] <rurban> rakudo is done, now only star is left

[16:24] <jnthn> yay :)

[16:24] <PerlJam> rurban++

[16:24] <aloha> Karma for rurban is now 10

[16:24] <jnthn> aloha--

[16:24] <aloha> jnthn: Karma for aloha is now -69 (pffft)

[16:26] <frettled> My google-fu is weak these days, all of my attempts at googling for some sort of docs on what goes in NQP are in vain.  :-/

[16:27] *** fgomez left
[16:28] *** dakkar left
[16:28] *** tokuhirom joined
[16:28] <PerlJam> frettled: what do you mean "what goes in NQP"?

[16:29] <felher> moritz: ping

[16:29] *** dakkar joined
[16:30] *** thelazydeveloper joined
[16:30] <frettled> PerlJam: Well, sort of a tutorial or spec, to get started with it :)

[16:31] <frettled> oops, gotta run :(

[16:32] *** dakkar left
[16:33] *** tokuhirom left
[16:34] <sisar> phenny, tell lichtkind, why does the the navigation in Appendix A, second row,  have "Cn", "Pn", "Rn", "Sn" aling with the other alphabets. Do they have any special meaning or are they there by mistake?

[16:34] <phenny> sisar: I'll pass that on when lichtkind is around.

[16:34] *** kaleem left
[16:37] *** daxim left
[16:37] *** Psyche^ joined
[16:37] *** Psyche^ is now known as Patterner

[16:41] *** pernatiy left
[16:41] *** eviltwin_b joined
[16:44] *** geekosaur left
[16:44] *** erkan left
[16:47] * [Coke] wonders if mentioning job postings for non-perl positions here is suggested against.

[16:48] <PerlJam> [Coke]: I doubt the reaction would be as violent as on other #perls

[16:49] <[Coke]> (web dev, Albany NY. ping me privately)

[16:53] <dalek> rakudo/nom: 4823171 | duff++ | src/Perl6/Actions.pm:

[16:53] <dalek> rakudo/nom: nqp-ize pir::chr

[16:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/482317114f

[16:53] <dalek> rakudo/nom: 420739a | duff++ | src/ (25 files):

[16:53] <dalek> rakudo/nom: nqp-ize pir::die

[16:53] *** dalek left
[16:53] *** dalek joined
[16:53] *** ChanServ sets mode: +v dalek

[16:55] <rurban> blizkost left star?

[16:59] <jaffa4> How would you cut down the length of an array?

[16:59] <PerlJam> jnthn: splice?

[16:59] <PerlJam> er, jaffa4 

[17:00] *** aindilis joined
[17:00] <jaffa4> n: my @a; @b.elems = 2;

[17:00] <p6eval> niecza v17-2-gb8fcf85: OUTPUT«===SORRY!===␤␤Variable @b is not predeclared at /tmp/FiDXgBS4d1 line 1:␤------> my @a; ⏏@b.elems = 2;␤␤Potential difficulties:␤  @a is declared but not used at /tmp/FiDXgBS4d1 line 1:␤------> my ⏏@a; @b.el…

[17:00] <jaffa4> n: my @a; @a.elems = 2;

[17:00] <p6eval> niecza v17-2-gb8fcf85: OUTPUT«Unhandled exception: assigning to readonly value␤  at /tmp/RaDW6sTC78 line 1 (mainline @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3840 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3841 (module-CORE @ 65) ␤  at /home/p6eval/niecza/lib…

[17:01] <rurban> https://github.com/perlpilot/rakudo-dist/blob/master/README still includes subversion as req. Should be changed to git

[17:02] <PerlJam> rurban: er ... you aren't using that for anything are you?

[17:03] <rurban> I'm preparing the cygwin release

[17:04] <PerlJam> rurban: that's not the offical rakudo-star repo.

[17:04] <PerlJam> rurban: rakudo-dist was more of an experiment to generate rakudo star using Dist::Zilla

[17:05] <PerlJam> It hasn't been kept up-to-date though

[17:05] <[Coke]> github.com/rakudo/star

[17:05] <PerlJam> rurban: but!  If you find rakudo-dist useful, feel free to update it  :-)

[17:06] *** eoh| left
[17:06] *** eoh joined
[17:07] <rurban> oh thanks. I just found that on the net. the dist is based on rakudo-star. just stumbled upon the nqp-2012.04.1 update.

[17:08] <masak> jaffa4: I guess .elems could be made rw, but I'm not sure I like the idea of that.

[17:08] <masak> feels like a slippery-slope thing.

[17:09] <jaffa4> How would you do that otherwise?

[17:09] *** geekosaur joined
[17:09] <PerlJam> masak: the only (useful) reason $#array is writable in Perl 5 is to pre-extend the array so as to have between control over memory useage.  Perl 6 doesn't need that at all.

[17:09] <rurban> I was just wondering were blizkost is now

[17:10] *** PacoAir joined
[17:10] <jaffa4> PerlJam: why not?

[17:10] <masak> r: set-length(@a is rw, $l) { pop @a for ^(@a.elems - $l); push @a, Any for ^($l - @a.elems) }; set-length(my @x, 5); say @x.perl

[17:10] <p6eval> rakudo 197272: OUTPUT«===SORRY!===␤Variable @a is not declared␤at /tmp/aYYHXbK8y5:1␤»

[17:10] <PerlJam> s/between/better/  (now *that* was weird.  I know I thought "better", I have no clue why my fingers typed "between")

[17:10] <masak> r: sub set-length(@a is rw, $l) { pop @a for ^(@a.elems - $l); push @a, Any for ^($l - @a.elems) }; set-length(my @x, 5); say @x.perl

[17:10] <p6eval> rakudo 197272: OUTPUT«Array.new(Any, Any, Any, Any, Any)␤»

[17:10] <masak> jaffa4: like that, for example.

[17:11] *** allbery_b joined
[17:11] <PerlJam> jaffa4: Perl6 has other means for getting arrays of various sizes.

[17:11] <masak> jaffa4: but like PerlJam said, it's not a very interesting thing to do.

[17:11] <masak> jaffa4: you might as well dimension it from the start. 'my @a[5]'

[17:11] <PerlJam> exactly

[17:12] *** eviltwin_b left
[17:12] *** fgomez joined
[17:13] <moritz> felher: pong

[17:14] *** geekosaur left
[17:15] *** birdwindupbird left
[17:15] <masak> PerlJam: though I've seen at least one other use case for '$#a =' in Perl 5: truncating arrays.

[17:16] <PerlJam> I suppose so.

[17:17] <felher> moritz: i thought about typed exceptions for IO and i noticed that we have exceptions as we have function Copy,Mkdir but nothing like a FileNotFoundException. Do we prefer one function <-> one exception? What do you think about mixing? Something like: https://gist.github.com/2587005 ? 

[17:18] <felher> moritz: the latter isn't a patch-request. It's just some thinking. 

[17:21] <felher> also, the example is kinda stupid, because copy ("valid-file", "non-existent-directory/file") also stringifies like "no such file or directory" :)

[17:22] <moritz> felher: I think we should rather have a big enum with IO errors

[17:23] <moritz> felher: and then an X::IO::Copy exception could have an $.os-error which could be X::IOTypes::FIileNotFound

[17:23] <masak> an enum would make it non-extensible.

[17:24] <moritz> right

[17:25] <moritz> even if we don't do with enums, I think it should that the actual IO error should be inside the error from the operation

[17:25] <moritz> because "copying failed" is more high level than "file not found"

[17:26] <felher> agreed :)

[17:27] <PerlJam> will there be some convention for differentiating user-defined errors from built-in errors?

[17:27] <jaffa4> How do I call a method in a method?

[17:28] <PerlJam> jaffa4: the same way you call a method anywhere else?

[17:29] <jaffa4> I tried to make a call as calling a sub... method not found...

[17:29] * felher has to go now and is therefore afk

[17:30] *** allbery_b left
[17:31] <PerlJam> jaffa4: but methods aren't subs and you don't call them the same way.

[17:32] <jaffa4> PerlJam:  that is why I am asking

[17:32] <moritz> PerlJam: (re built-in errors) no

[17:32] <moritz> PerlJam: just like setting subs aren't different from "normal" subs

[17:33] <moritz> r: sub &CORE::<uc> === &uc

[17:33] <p6eval> rakudo 83587b: OUTPUT«===SORRY!===␤Missing block␤at /tmp/GjPC1ju6t1:1␤»

[17:33] <moritz> r: say &CORE::<uc> === &uc

[17:33] <p6eval> rakudo 83587b: OUTPUT«False␤»

[17:33] <moritz> r: say &CORE::<uc>

[17:33] <p6eval> rakudo 83587b: OUTPUT«Any()␤»

[17:33] <moritz> that explains it

[17:33] <moritz> r: say CORE::<&uc>

[17:33] <p6eval> rakudo 83587b: OUTPUT«sub uc(Cool $s) { ... }␤»

[17:33] <moritz> r: say CORE::<&uc> == &uc

[17:33] <p6eval> rakudo 83587b: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \$v, Mu *%_)␤␤  in method Numeric at src/gen/CORE.setting:648␤  in sub infix:<==> at src/gen/CORE.setting:2377␤  in block <anon> at /tmp/XD07YAw003:1␤␤»

[17:33] <moritz> r: say CORE::<&uc> === &uc

[17:33] <p6eval> rakudo 83587b: OUTPUT«True␤»

[17:34] <moritz> PerlJam: I guess you can employ the same mechanism with user-defined vs. core types, but it is a hack, and will remain it

[17:34] <moritz> PerlJam: ... unless there's a good use case

[17:34] <masak> jaffa4: do you expect a method .foo to be callable with the foo() syntax, like in Java? that won't work.

[17:34] <PerlJam> I don't have one; just curious and musing

[17:34] <moritz> jaffa4: you call methods as self.method or $.method or @.method or %.method, depending on context

[17:34] <jaffa4> I can see it self.methodnamd();

[17:35] <masak> r: class A { method foo { self.bar(); bar }; method bar { say "method" }; sub bar { say "sub } }; A.new.foo

[17:35] <p6eval> rakudo 83587b: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2␤»

[17:35] <masak> r: class A { method foo { self.bar(); bar }; method bar { say "method" }; sub bar { say "sub" } }; A.new.foo

[17:35] <p6eval> rakudo 83587b: OUTPUT«method␤sub␤»

[17:35] *** geekosaur joined
[17:35] <moritz> it works in java because there are no subs in java :-)

[17:36] *** birdwindupbird joined
[17:36] <jaffa4> moritz: you mean your can force the return context in that way

[17:36] <moritz> jaffa4: correct

[17:36] <rurban> http://rakudo.org/how-to-get-rakudo/ needs to add Cygwin to the list of packages. Hell I was the one who created installable parrots at first.

[17:37] <jaffa4> good idea

[17:37] <moritz> rurban: do you have a link to the cygwin package ready?

[17:37] <rurban> There is no link, just a GUI. In setup select parrot/rakudo/rakudo-star

[17:37] *** eviltwin_b joined
[17:38] <moritz> rurban: ok

[17:38] <rurban> sources at http://code.google.com/p/cygwin-rurban/source/browse/#svn%2Ftrunk%2Frelease%2Fparrot

[17:39] <PerlJam> rurban++   (this karma is worth putting up with aloha :)

[17:39] <aloha> Karma for rurban is now 11

[17:39] <moritz> rurban++ indeed

[17:39] <aloha> Karma for rurban is now 12

[17:40] *** geekosaur left
[17:41] <rurban> http://cygwin.com/packages/rakudo/ is a link you can use

[17:41] <moritz> rurban: http://rakudo.org/how-to-get-rakudo/ updated

[17:41] <rurban> Thanks

[17:41] <dalek> tablets: c7b1283 | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[17:41] <dalek> tablets: fix square brackets link

[17:41] <dalek> tablets: review: https://github.com/perl6/tablets/commit/c7b12834bd

[17:41] <lichtkind> sisar?

[17:41] <phenny> lichtkind: 16:34Z <sisar> tell lichtkind why does the the navigation in Appendix A, second row,  have "Cn", "Pn", "Rn", "Sn" aling with the other alphabets. Do they have any special meaning or are they there by mistake?

[17:42] <moritz> ... and now with link

[17:43] <masak> I hate it when my two-letter combinations go aling without me.

[17:44] <lichtkind> phenny: tell sisar "just have a look section C is much larger than average so the C heading as a backling to the to looses its functionality if you have to scroll too much, so I added some C (second letter a-m)"

[17:44] <phenny> lichtkind: I'll pass that on when sisar is around.

[17:44] <lichtkind> phenny: tell sisar "and Cn for second letter N-z"

[17:44] <phenny> lichtkind: I'll pass that on when sisar is around.

[17:45] <lichtkind> masak: was that for me?

[17:45] <masak> no, I was just being facetious without a recipient. for once.

[17:50] <dalek> tablets: aa9c11f | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[17:50] <dalek> tablets: explain navigation menu; sisar++

[17:50] <dalek> tablets: review: https://github.com/perl6/tablets/commit/aa9c11f220

[17:53] * colomon is fighting to remember Perl 5 syntax for the $work script he must write

[17:56] <moritz> Juerd: you recommended that I copy the DBIx::Simple API, and I'm inclinde to do it at least partially...

[17:56] <jaffa4> colomon: that is bad

[17:57] <moritz> Juerd: the only thing I don't like is that you can't seem to prepare a statement once and then execute is several times with multiple arguments; Is that really missing from the API, or am I just too dense to see it?

[17:57] <PerlJam> jaffa4: when you're doing Perl 5 and Perl 6 there's not exactly a clear distinction between the two syntaxes  :)

[17:58] <masak> sure there is ;)

[17:58] <jaffa4> PerlJam: I have not confused them yet

[17:58] <moritz> jaffa4: you will :-)

[17:59] <PerlJam> I'm always writing Perl 6 code in the middle of my Perl 5 and then having to stop and re-think.

[17:59] <PerlJam> (I have never written perl 5 code in the middle of perl 6 yet though :)

[18:00] <jaffa4> I think it is a matter of being present sufficiently

[18:00] <masak> good for you.

[18:01] <jaffa4> though I remember I confused C++ substr with perl substr

[18:01] <rurban> So it looks like nqp should better be its own package right?

[18:02] <masak> I sometimes have to spend an extra cycle thinking about whether I want .substr or .subst

[18:02] <moritz> it's often small subtleties like adding writing map { 1 + $_}, @list  in p5 :-)

[18:02] <moritz> rurban: yes

[18:03] <rurban> Am I the first or what do the others say? fedora, debian, ...

[18:05] <moritz> rurban: debian is working on packaging nqp separately

[18:06] *** eviltwin_b left
[18:09] <colomon> jaffa4: figured it out.  biggest problem was an accidentally dropped {  -- not a p6 vs p5 issue at all!

[18:09] *** geekosaur joined
[18:10] *** alvis joined
[18:12] <jaffa4> colomon: all is well that ends well.

[18:13] <jaffa4> I find confusing  $.foo(1,2,3);;; so what is the syntax if I want to call with $_ argument in this case and I do not want to use $_?

[18:13] *** NamelessTee joined
[18:13] <moritz> .foo(1, 2, 3)

[18:14] <jaffa4> but then it is not a method call

[18:14] *** ggoebel left
[18:14] <moritz> it is a method call on $_

[18:15] *** geekosaur left
[18:16] *** geekosaur joined
[18:16] <jaffa4> foo(1,2,3) did not work as method call but .foo(1,2,3) does?

[18:17] <PerlJam> jaffa4: right.

[18:18] <moritz> r: $_ = 'foo'; say .uc

[18:18] <p6eval> rakudo 83587b: OUTPUT«FOO␤»

[18:18] *** ggoebel joined
[18:20] <moritz> it's very logical: if you leave off the $obj in $obj.method, you get a call on the default object, which is in $_

[18:20] <moritz> ss/default object/topic/

[18:21] <jaffa4> .say print $_

[18:21] <jaffa4> What is the object in there?

[18:22] <moritz> std: .say print $_

[18:22] <p6eval> std fab64fc: OUTPUT«===SORRY!===␤Two terms in a row (method call requires colon or parens to take arguments) at /tmp/bK_uqImjO_ line 1:␤------> .say ⏏print $_␤    expecting any of:␤      infix or meta-infix␤    infixed function␤       statement modifier

[18:22] <p6eval> ..loop␤Parse…

[18:22] <moritz> jaffa4: it's not valid syntax

[18:22] <jaffa4> .say is like say $_

[18:22] <jaffa4> r: $_="3"; .say;

[18:22] <p6eval> rakudo 83587b: OUTPUT«3␤»

[18:23] <moritz> well no. .say is a method call,  say $_  is a sub call

[18:23] <moritz> They happen to do the same thing in this case, but the distinction is important

[18:23] <moritz> r: $_ = 3; .&say

[18:23] <p6eval> rakudo 83587b: OUTPUT«3␤»

[18:24] <moritz> now that's more like a sub call :-)

[18:25] <jaffa4> r: sub p { print @_[0];} $_=3; .p;

[18:25] <p6eval> rakudo 83587b: OUTPUT«===SORRY!===␤Confused␤at /tmp/7D23VpVyL8:1␤»

[18:26] <jaffa4> r: sub p { print @_[0];} $_=3; .&p;

[18:26] <p6eval> rakudo 83587b: OUTPUT«===SORRY!===␤Confused␤at /tmp/L57Pk85mxs:1␤»

[18:26] <moritz> r: sub p { print @_[0]}; $_=3; .&p;

[18:26] <p6eval> rakudo 83587b: OUTPUT«3»

[18:27] <jaffa4> r: sub p { print @_[0];}; $_=3; .p;

[18:27] <p6eval> rakudo 83587b: OUTPUT«Method 'p' not found for invocant of class 'Int'␤  in block <anon> at /tmp/IyWeVXgtua:1␤␤»

[18:27] *** birdwindupbird left
[18:28] <masak> right. subs != methods

[18:28] <masak> you can use one as the other, if you really want to.

[18:29] <masak> but they are different. they occupy different namespaces. only methods have a notion of an invocant.

[18:29] <moritz> r: class A { our method p($x) { say $x } }; A::p(A.new, 'foo')

[18:29] <p6eval> rakudo 83587b: OUTPUT«foo␤»

[18:29] <[Coke]> rurban++ # disting.

[18:29] <aloha> Karma for rurban is now 13

[18:29] <jaffa4> as in perl 5

[18:30] <[Coke]> did anyone ping bacek about aloha?

[18:31] <[Coke]> I think he's on Москва time, and can't be online during work.

[18:32] <jaffa4> You wrote in cyril

[18:32] <moritz> [Coke]: I didn't ping him

[18:32] <huf> good heavens, communist characters? not in my these-colors-dont-run irc :D

[18:32] *** geekosaur left
[18:33] *** geekosaur joined
[18:34] <rurban> rakudo star tests do not work unless you install it first. 

[18:34] <rurban> This should be documented

[18:36] <masak> agreed.

[18:38] <rurban> Or pass all module/*/lib paths to PERL6LIB

[18:38] <rurban> But this gets big

[18:40] <masak> generally, one should be able to do 'make test' before 'make install'. that feels like one of those "ambient assumptions", somehow.

[18:41] * jnthn suspects it may not be the way it currently is on purpose

[18:41] <jnthn> May be fallout of the removing of lib from the default path, for example.

[18:41] <masak> oh! yes.

[18:48] *** mikemol_ joined
[18:49] *** fglock left
[18:50] *** mikemol left
[18:52] *** Guest98292 left
[18:53] <moritz> at least we can now say prove -Ilib -e perl6 

[18:54] <masak> \o/

[18:55] *** preflex_ joined
[18:55] *** preflex_ is now known as preflex

[18:57] *** xenu joined
[18:57] *** xenu is now known as Guest50704

[18:57] *** cj__ is now known as cj

[18:59] <rurban> can I say that blizkost is gone?

[18:59] <moritz> yes

[18:59] <jnthn> rurban: Yeah. It doesn't work with current Rakudo.

[18:59] <rurban> done

[19:00] <jnthn> It should be done in terms of representation poly, in these post-6model times.

[19:00] <rurban> announcements are out

[19:01] <moritz> \o/

[19:04] *** erkan joined
[19:09] *** birdwindupbird joined
[19:09] <masak> url?

[19:10] <moritz> there's one on parrot-dev

[19:11] <masak> oh, ok.

[19:11] *** ponbiki left
[19:11] <jnthn> And perl6-compiler

[19:12] *** ponbiki joined
[19:13] * moritz is kinda annoyed by people who use rakudobugs to get help, not to report bugs

[19:14] <masak> moritz: maybe it's a cry for help :)

[19:17] *** bluescreen10 left
[19:22] *** tyatpi joined
[19:23] *** jaldhar left
[19:28] <masak> "The mark of a moderate man is freedom from his own ideas." -- Laozi

[19:28] <masak> I think Laozi was a postmodernist. :)

[19:30] *** bluescreen10 joined
[19:32] *** sftp joined
[19:37] *** jaldhar joined
[19:38] *** eviltwin_b joined
[19:38] *** koban joined
[19:40] *** GlitchMr left
[19:40] *** geekosaur left
[19:42] <rurban> And one on cygwin-announce http://cygwin.com/ml/cygwin-announce/2012-05/msg00004.html

[19:46] *** brrt joined
[19:53] <dalek> DBIish: 85a4f68 | moritz++ | lib/DBDish/Pg.pm6:

[19:53] <dalek> DBIish: [Pg] a bit more introspection internally

[19:53] <dalek> DBIish: review: https://github.com/perl6/DBIish/commit/85a4f68d97

[19:56] <tadzik> 'evening

[19:56] <phenny> tadzik: 16:21Z <sisar> tell tadzik due to moritz++ recent bugfix, we now get the line no. in warnings in panda. For example, lines 4 & 7 in https://gist.github.com/2586890.

[19:56] <masak> tadziku!

[19:57] <masak> \o/

[19:57] <tadzik> masaku! \o/

[20:01] <dalek> nqp/toqast: 4422265 | jnthn++ | src/QAST/Operations.nqp:

[20:01] <dalek> nqp/toqast: Can't have sigless ops any more. Also concat should always work on strings.

[20:01] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/4422265aad

[20:01] <dalek> nqp/toqast: 9eb078c | jnthn++ | src/QAST/Compiler.nqp:

[20:01] <dalek> nqp/toqast: Handling of lexical paramters, including natively typed ones. Also, lookup of lexicals declared in the current block; this is optimized right off to a register access.

[20:01] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/9eb078c0d4

[20:01] <dalek> nqp/toqast: 6999d2b | jnthn++ | src/QAST/ (2 files):

[20:01] <dalek> nqp/toqast: Slurpy can only go on a QAST::Var.

[20:01] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/6999d2b636

[20:01] <dalek> nqp/toqast: 63d58d9 | jnthn++ | t/qast/qast.t:

[20:01] <dalek> nqp/toqast: A couple of initial tests for lexical parameters.

[20:01] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/63d58d9999

[20:01] <PerlJam> moritz: Am I missing something to compile DBIish?  When I run make I get: http://gist.github.com/2588842

[20:02] <moritz> PerlJam: you need the 'cstr' branches of both nqp and zavolaj

[20:02] *** fglock joined
[20:02] <PerlJam> gotcha. thanks

[20:02] <moritz> PerlJam: I hope arnsholt++ will merge them soon :-)

[20:02] <tadzik> sisar: ping

[20:02] <moritz> it seems I need to at least tokenize SQL in order to support the ? placeholder syntax for postgresql

[20:03] <moritz> because postgres uses $1, $2 etc. instead of ?

[20:05] <jnthn> Does it not provide soemthing in its API where it does the substs?

[20:05] <moritz> I didn't find anything

[20:05] <jnthn> Or is it up to the driver writer to keep bobby tables at bay?

[20:05] <tadzik> phenny: tell sisar which Rakudo is that? I don't get any warnings in Panda, with or without line numbers

[20:05] <phenny> tadzik: I'll pass that on when sisar is around.

[20:06] <moritz> jnthn: it supports placeholders, just not in the syntax that perl people expect

[20:06] <moritz> jnthn: so the driver needs to convert it, but only in not-quoted constructs, obviously :-)

[20:06] *** PeterSomu joined
[20:06] *** kaare__ joined
[20:07] *** kaare_ left
[20:07] *** icwiener left
[20:07] <jnthn> moritz: oh my... :)

[20:07] *** icwiener joined
[20:08] <PerlJam> What does DBD::Pg do (perl 5)?

[20:08] *** PeterSomu left
[20:08] <moritz> PerlJam: I'm afraid to look :-)

[20:09] <fglock> PerlJam: it is the PostgreSQL database driver for the DBI module

[20:10] <jnthn> I...don't think that's the meaning of "What" and "do" PerlJam had in mind... ;)

[20:11] *** ponbiki left
[20:12] <dalek> tablets: 40a38ac | (Herbert Breunung)++ | docs/appendix- (2 files):

[20:12] <dalek> tablets: polish square bracketing items

[20:12] <dalek> tablets: review: https://github.com/perl6/tablets/commit/40a38ace25

[20:13] <fglock> I've used B::C to convert perlito5.pl into a 18MB C source file; compiling now...

[20:14] *** kaare__ left
[20:15] *** tyatpi left
[20:16] <masak> "Polish square" sounds like a math puzzle.

[20:16] <jnthn> Or a place to meet up in central Europe to drink...

[20:16] *** dorlamm joined
[20:17] <dalek> tablets: 5568f53 | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[20:17] <dalek> tablets: making secondary letter chapter headlines shorter

[20:17] <dalek> tablets: review: https://github.com/perl6/tablets/commit/5568f535c0

[20:18] * fglock reads the logs to get a clue on the context

[20:18] *** fhelmberger left
[20:32] <[Coke]> wierd. you can't create a .gitignore file using windows explorer.

[20:33] *** brrt left
[20:33] <spider-mario> yeah, it’ll refuse

[20:33] <spider-mario> but cmd.exe will let you rename a file to .gitignore

[20:36] <masak> spider-mario! \o/

[20:36] * jnthn always just creates them at the command line :)

[20:36] <spider-mario> o/ masak

[20:36] <jnthn> e .gitignore

[20:36] <jnthn> :)

[20:37] <jnthn> (with "e" being aliased to my editor)

[20:37] <spider-mario> is e edit.com?

[20:37] <spider-mario> oh

[20:37] <spider-mario> :D

[20:37] <jnthn> No!

[20:37] <jnthn> :)

[20:37] <masak> not that there's anything wrong with edit.com :P

[20:37] *** aindilis left
[20:37] <jnthn> Aside from it appears it's nowhere in my path... :P

[20:38] *** geekosaur joined
[20:38] <spider-mario> it’s absent from 64-bit windows since it’s a 16-bit program

[20:38] <spider-mario> not that we’ll miss it, I guess. :)

[20:39] <jnthn> Yes, I don't think I've used it for...probably over a decade. :)

[20:40] <benabik> Edit.com?  Man, memories.

[20:40] *** eviltwin_b left
[20:41] <gfldex> p6: my class A { has $.b }; my $a = A.new(:b(10), :b(10)); say $a;

[20:41] <[Coke]> jnthn: you can also create ".gitignore." in the explorer.

[20:41] <p6eval> rakudo 83587b: OUTPUT«A.new(b => 10)␤»

[20:41] <p6eval> ..pugs: OUTPUT«<obj:A>␤»

[20:41] <p6eval> ..niecza v17-2-gb8fcf85: OUTPUT«A.new(...)␤»

[20:41] <spider-mario> too bad DOSBox doesn’t come with it.

[20:41] *** eviltwin_b joined
[20:41] <gfldex> wouldn't that be a candidate for a warning?

[20:41] <gfldex> having the same named parameter twice is most likely a typo

[20:44] * [Coke] is NOT going to YAPC::NA

[20:44] *** geekosaur left
[20:44] <jnthn> .oO( I was thinking about it, but those guys have totally sold out... )

[20:44] * colomon is not going to YAPC::NA either

[20:45] <[Coke]> jnthn: *thwap*

[20:45] <jnthn> :D

[20:45] <[Coke]> jnthn: also: heee!

[20:45] <colomon> jnthn: groan

[20:49] * colomon finally figured out why the money is so tight this year -- lost the business of a company that represented more than a third of my first quarter income the last two years.  :( 

[20:49] *** ashleydev joined
[20:50] <rurban> I'm going but my talk was too technical

[20:50] <rurban> not accepted

[20:50] <colomon> rurban++

[20:50] <aloha> Karma for rurban is now 14

[20:51] <rurban> about address-sanitzer :)

[20:51] *** dorlamm left
[20:52] <jnthn> colomon: ouch :(

[20:52] <masak> rurban: what was your talk about?

[20:53] <rurban> Forget valgrind, use http://code.google.com/p/address-sanitizer/wiki/AddressSanitizer

[20:54] <rurban> found many security relevant perl5 core bugs

[20:54] <masak> oh, you wrote it above. sorry, missed that :)

[20:54] <rurban> And DBI is still broken.

[20:55] <rurban> And perl-5.16.0 has also one left. Nobody cares

[20:55] <masak> sounds implausible.

[20:56] *** bluescreen10 left
[20:56] <rurban> Good idea: I'll check parrot and perl6 now.

[20:56] <masak> 'night, #perl6

[20:57] <rurban> auto::va_ptr fails with buffer-overflow

[21:01] *** fgomez left
[21:01] *** birdwindupbird left
[21:05] *** mikemol_ left
[21:12] *** skids left
[21:17] *** fgomez joined
[21:17] *** NamelessTee left
[21:19] *** jferrero left
[21:22] *** bruges joined
[21:24] *** icwiener left
[21:26] *** koban left
[21:30] *** geekosaur joined
[21:33] *** eviltwin_b left
[21:34] *** thou left
[21:44] *** jaffa4 left
[21:47] *** whiteknight joined
[22:11] *** eviltwin_b joined
[22:11] *** SatoAmbush joined
[22:12] *** geekosaur left
[22:12] *** eviltwin_b left
[22:13] *** geekosaur joined
[22:14] *** eviltwin_b joined
[22:18] *** geekosaur left
[22:27] *** geekosaur joined
[22:30] *** PacoAir left
[22:30] *** eviltwin_b left
[22:36] *** plobsing joined
[22:37] *** benabik left
[22:46] *** eviltwin_b joined
[22:47] *** geekosaur left
[22:52] *** geekosaur joined
[22:54] *** skids joined
[22:55] *** eviltwin_b left
[22:57] <jnthn> Goodnight, #perl6

[23:00] *** benabik joined
[23:06] <spider-mario> good night, jnthn

[23:12] *** Chillance left
[23:18] <lichtkind> good night

[23:33] <gfldex> p6: enum MonthLength <0 31 28 31 30 31 30 31 31 30 31 30 31>; say MonthLength($_).Int for 0..12;

[23:33] <p6eval> pugs: OUTPUT«*** No such subroutine: "&enum"␤    at /tmp/Ee_9Z0A6a0 line 1, column 1-57␤»

[23:33] <p6eval> ..niecza v17-2-gb8fcf85: OUTPUT«===SORRY!===␤␤Illegal redeclaration of symbol '31' (see line 1) at /tmp/2ClCin4ir6 line 1:␤------>  <0 31 28 31 30 31 30 31 31 30 31 30 31>⏏; say MonthLength($_).Int for 0..12;␤␤Illegal redeclaration of symbol '30' (see …

[23:33] <p6eval> ..rakudo 83587b: OUTPUT«0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤11␤12␤»

[23:34] <gfldex> std: enum MonthLength <0 31 28 31 30 31 30 31 31 30 31 30 31>; say MonthLength($_).Int for 0..12;

[23:34] <p6eval> std fab64fc: OUTPUT«ok 00:00 42m␤»

[23:36] *** SatoAmbush left
[23:43] *** risou joined
[23:43] *** risou left
[23:46] *** risou_awy joined
[23:46] *** risou_awy is now known as risou

[23:46] <dalek> tablets: eee3635 | (Herbert Breunung)++ | docs/appendix- (2 files):

[23:46] <dalek> tablets: explaining delegation and attribute, polish declarator and regularising distance between punctuation headlines

[23:46] <dalek> tablets: review: https://github.com/perl6/tablets/commit/eee3635c23

[23:47] <[Coke]> bacek++

[23:47] <aloha> Karma for bacek is now 1735

[23:48] *** risou left
[23:50] <_sri> wouldn't an mruby-ish implementation of perl6 make sense? https://github.com/mruby/mruby

[23:52] <_sri> a reasonably fast subset with just enough features to get started writing real applications and port modules

[23:53] <flussence> nqp sort of does that already, but it's not fast and a bit too much of a subset imo

[23:53] <flussence> (though the speed thing may be the fault of what it's running on, I dunno)

[23:53] *** risou joined
[23:54] *** mspaulding left
[23:54] <flussence> I agree though, a perl6 with most of the standard library stripped away might be useful. Not everyone needs Str.indent after all

[23:56] *** aloha left
[23:56] *** aloha joined
[23:57] <_sri> yea, reduce it to the absolute minimal feature set

