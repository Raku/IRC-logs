[00:01] <tadzik> leontopod: I'm quite sure you can

[00:02] <tadzik> istr a pal showing such thing on a PM meeting

[00:05] <leontopod> cool

[00:21] *** PacoAir left
[00:25] *** nimiezko left
[00:30] *** lisa_schwarzhaar left
[00:39] <timotimo> is there any protocol to uploading a new pdf snapshot of the perl 6 book?

[00:41] *** lestrrat left
[00:42] <timotimo> i get lots of kpathsea: Invalid fontname '*' contains ' '

[00:42] <leontopod> timotimo, torrents?

[00:42] *** lestrrat joined
[00:43] <timotimo> hm, i meant something like "what to do before and after doing that"

[00:43] <timotimo> also: this pdf has only 5 pages :\

[00:44] <timotimo> probably due to missing fonts

[00:45] <timotimo> i have to install acroread-data and 9base?

[00:46] <timotimo> didn't help. i give up. someone with a functioning environment can do it some time

[00:47] <timotimo> make html works, but isn't very pretty to look at

[00:59] <jnthn> sleep &

[01:05] *** scott__ joined
[01:10] *** benabik joined
[01:20] *** lisa_schwarzhaar joined
[01:22] *** noam_ joined
[01:23] *** skeebitt22 joined
[01:23] <skeebitt22> hello all

[01:26] *** skeebitt22 left
[01:27] <whiteknight> every time jnthn posts about his progress on Rakudo, I find myself thinking: "I wish all these features were in Parrot core"

[01:36] *** whiteknight left
[01:38] *** thou left
[01:47] *** whiteknight joined
[01:49] *** retupmoca joined
[01:51] *** zpmorgan joined
[01:52] <sorear> good * #perl6

[01:52] <zpmorgan> .u �

[01:52] <phenny> U+FFFD REPLACEMENT CHARACTER (�)

[01:53] *** retupmoca left
[01:56] *** retupmoca joined
[02:25] *** preflex_ joined
[02:25] *** skids joined
[02:25] *** preflex left
[02:25] *** preflex_ is now known as preflex

[02:37] <sorear> colomon: yeah, user-defined operators are hosed, and I'm struggling to figure out why

[02:40] <skids> nom: role M { multi method Str (Int:D $self:) { "OHAI" } }; my $a = 1 but M; $a.say;

[02:40] <p6eval> nom 828e4d: OUTPUT«Ambiguous dispatch to multi 'Str'. Ambiguous candidates had signatures:␤:(Int:D , Mu %_!)␤:(Int:D $self, Mu %_!)␤␤␤»

[02:42] <skids> so being defined in a role doesn't give that "inner or derived scope"?

[02:44] <skids> Or I guess Int's .Str is similarly defined... hmm.

[02:44] <sorear> I don't think "inner or derived scope" affects MMD in Rakudo yet

[02:44] <skids> Ah.

[02:47] *** xinming left
[02:50] *** cooper left
[03:03] *** unobe left
[03:05] *** unobe joined
[03:05] *** lestrrat left
[03:07] *** lestrrat joined
[03:09] *** whiteknight left
[03:24] *** yertalert joined
[03:32] *** xinming joined
[03:35] *** wolfman2000 joined
[03:36] <colomon> sorear: o/

[03:40] *** orafu left
[03:40] *** orafu joined
[03:47] <colomon> niecza: say 'a' ∈ <a b c d e>

[03:48] <p6eval> niecza v14-32-g760a302: OUTPUT«True␤»

[03:48] <colomon> sorear: I feel like an idiot for not figuring out what the problem was with that this morning... looked repeatedly at non-class code trying to access a private attribute.

[03:49] <colomon> TimToady: btw, it does seem to work now.  now we need a honking large test file for it...  ;)

[03:49] <colomon> sorear++

[03:49] <colomon> bedtime

[03:49] <sorear> to be fair, the error message is quite LTA

[03:49] <sorear> sleep well

[03:53] *** zpmorgan left
[04:04] <retupmoca> aww, NativeCall doesn't support callbacks :(

[04:07] <TimToady> so fix it!  :)

[04:07] <retupmoca> I will, if I can figure out how

[04:16] <skids> Is there a way for a role to reject being runtime mixed into something.  Like e.g. a role that does not like to be mixed into odd numbers?

[04:20] <sorear> are you sure you don't want to write a subtype instead?

[04:22] <dalek> niecza: 20f241a | sorear++ | src/NieczaFrontendSTD.pm6:

[04:22] <dalek> niecza: Dehose and slightly optimize user-defined operators

[04:22] <dalek> niecza: review: https://github.com/sorear/niecza/commit/20f241af47

[04:22] * skids contemplates that. Meanwhile JOOC:

[04:23] <skids> std: role A[Int $self: ] { }

[04:23] <p6eval> std 48335fc: OUTPUT«ok 00:01 110m␤»

[04:23] *** Su-Shee_ joined
[04:24] <TimToady> STD does not check anything on that level

[04:25] <sorear> skids: $self will always be an undefined value

[04:25] <sorear> roles are mixed into types, not values

[04:25] <sorear> I think whatever you're doing, you're doing very very wrong

[04:26] <skids> probably.

[04:26] *** Su-Shee left
[04:31] <skids> So basically a role never has any idea as to the type of thing it is being applied to, other than it can supply method longnames with different invocants...

[04:32] <skids> (above I was more aiming at rola A [::T $self:] and hoping it might mean "undef of type I'm being applied to")

[04:33] <sorear> You can already access that via ::?CLASS

[04:37] <skids> Yes, what I was wondering really was was that was semantically meaningful, just out of curiosity (JOOC).

[04:46] <skids> subtype doesn't seem to graft to the possible usage mode I was exploring very well, no.

[04:55] <skids> nom: role A { "hi".say; }; 1 but A; 2 but A; # is that specced to happen on each mixin? 

[04:55] <p6eval> nom 828e4d: OUTPUT«hi␤hi␤»

[04:56] <dalek> niecza: 1b3d1e8 | sorear++ | src/NieczaFrontendSTD.pm6:

[04:56] <dalek> niecza: Reenable overriding predefined operators with different precedence, oops

[04:56] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1b3d1e8f2b

[04:56] <skids> I thought stuff like that was supposed to only run once.

[04:57] <doy> well, it has to run each time if the role has parameters, at least

[04:58] <doy> not sure whether or not it makes sense to have a special case for roles without parameters

[04:58] <sorear> one of the odder features of new-model roles is that they take the class as a parameter

[04:58] <sorear> not the base class - the nascent class

[04:59] <doy> that is odd

[04:59] <sorear> so the role has to be reinvoked for each new class created, even without explicit parameters

[04:59] <sorear> arguably, 'but' should be doing some caching to not create lots and lots of "Int but A" classes

[05:01] <skids> Is that just to be considered an implementation side-effect, or reliable behavior going forward?

[05:02] <TimToady> we are deliberately prejudicing things in favor of immutable semantics, so modifying things in place is a second-class citizen

[05:03] <TimToady> we want implementations to freely cache identical mixins and not duplicate anon classes

[05:04] *** Chillance joined
[05:05] <skids> but once per class/class-parameter-combo, we could do an "if $*CLASS ~~ /.../ warn(...)" or something in there?

[05:05] <TimToady> Perl 6 is fundamentally FP more than fundamentally OO, so we prefer things to be stateless whenever possible

[05:06] <TimToady> we also prefer the more generic code not to play guessing games with less generic code

[05:07] <TimToady> because the generic code will never be generic enough to anticipate all usages

[05:07] <TimToady> wanting to do so generally indicates a design smell

[05:08] *** birdwindupbird joined
[05:08] <TimToady> certainly if the generic code must have some invariants, that's possible to enforce with things like PRE/POST though

[05:09] <sorear> I suspect that skids is trying to use roles for something fundamentally different from genericity

[05:09] <TimToady> we may eventually end up with a COMPOSE phaser, but I suspect it will be frequently abused for bad purposes

[05:11] <skids> really I'm just exploring options at this point.

[05:13] <sorear> what sort of options?  perhaps we can help

[05:13] <TimToady> ain't we all, but it helps to understand the underlying philosophy, and go with it rather than against it

[05:14] <skids> Sure.  I wouldn't want to produce frankencode, nobody would want to use it.

[05:14] <skids> sorear: "How is this going to look to the user" and "what about the user who prefers to do things this way?" types of options.

[05:16] <TimToady> that tends to shade into the user that says "I only learned to think this one way, so why can't I use this hammer on everything?"  :)

[05:16] *** Khisanth left
[05:17] *** retupmoca left
[05:17] <skids> Sure, but also there's merit to preserving tmwtdi :-)

[05:18] <TimToady> yes, but "more than one" is not the same as "all"

[05:18] <sorear> ffff

[05:19] <sorear> I have a non-bisectable failure in S06-operator-overloading/sub.t

[05:19] <TimToady> fortissississimo

[05:19] * sorear tries updating mono

[05:20] *** Patterner left
[05:27] *** lisa_schwarzhaar left
[05:33] *** Khisanth joined
[05:34] <leontopod> fortissimo is a great jug wine

[05:35] *** Psyche^ joined
[05:35] <tadzik> it's italian for 'very loud', iirc

[05:35] *** Psyche^ is now known as Patterner

[05:42] <moritz> colomon: yes, the prisoner's harness is *the* test harness

[05:44] *** snearch joined
[05:46] <moritz> perl6: my Num $s;for 1e0..1e3 -> Num $i {$s+=1e0/$i**2};say $s

[05:47] <p6eval> niecza v14-34-g1b3d1e8: OUTPUT«1.6439345666815615␤»

[05:47] <p6eval> ..rakudo 828e4d: OUTPUT«Nominal type check failed for parameter '$i'; expected Num but got Int instead␤␤»

[05:47] <p6eval> ..pugs b927740: OUTPUT«1.6439345666815598031390580238222155896521␤»

[05:47] * moritz submits rakudobug

[05:47] <moritz> nom: for 1e0 .. 1e0 { say .WHAT }

[05:47] <sorear> perl6: say pi**2/6

[05:47] <p6eval> nom 828e4d: OUTPUT«Int()␤»

[05:47] <p6eval> pugs b927740: OUTPUT«1.6449340668482261867549189638081666666667␤»

[05:47] <p6eval> ..niecza v14-34-g1b3d1e8: OUTPUT«1.6449340668482264␤»

[05:47] <p6eval> ..rakudo 828e4d: OUTPUT«1.644934063089␤»

[05:47] <sorear> #optimized that for you

[05:49] * sorear builds a new mono to better investigate the segfaults in sub.t

[05:50] <moritz> nom: for 1.1e0 .. 2.1e0 { say .WHAT }

[05:50] <p6eval> nom 828e4d: OUTPUT«Num()␤Num()␤»

[05:50] <moritz> nom: for 1e0 .. 2e0 { say .WHAT }

[05:51] <p6eval> nom 828e4d: OUTPUT«Int()␤Int()␤»

[05:57] *** kaleem joined
[06:06] *** Patterner left
[06:07] *** jj__ joined
[06:09] *** jj__ left
[06:10] *** xinming left
[06:10] *** xinming joined
[06:12] *** ponbiki joined
[06:15] *** Psyche^ joined
[06:16] *** Psyche^ is now known as Patterner

[06:22] *** thou joined
[06:23] <moritz> nom: say (1e0 .. 2e0).perl

[06:23] <p6eval> nom 828e4d: OUTPUT«1e0..2e0␤»

[06:24] <leontopod> is Haskell actually used to DO anything?

[06:26] <moritz> supposedly, yes

[06:26] <bonsaikitten> leontopod: every now and then, yes

[06:27] <moritz> xmonad is used quite a bit

[06:28] <moritz> http://en.wikipedia.org/wiki/Haskell_%28programming_language%29#Applications

[06:35] *** woosley joined
[06:38] *** snearch left
[06:46] *** Timbus|Away joined
[06:46] *** zby_home_ left
[06:48] *** jnthn_ joined
[06:49] *** clkao_ joined
[06:49] *** timotimo_ joined
[06:49] *** huf_ joined
[06:49] *** broquain1 joined
[06:49] *** lumi____ joined
[06:50] *** Timbus left
[06:50] *** Timbus|Away is now known as Timbus

[06:50] *** lumi___ left
[06:50] *** aloha left
[06:50] *** jnthn left
[06:50] *** broquaint left
[06:50] *** timotimo left
[06:50] *** clkao left
[06:50] *** yertalert left
[06:51] *** aloha joined
[06:52] *** araujo left
[06:52] *** hillu left
[06:52] *** hillu joined
[06:52] *** araujo joined
[06:54] *** takesako left
[06:54] *** huf left
[06:55] *** takesako joined
[06:55] *** broquain1 left
[06:55] *** wtw joined
[06:56] *** thou left
[06:56] *** birdwindupbird left
[06:56] *** tty234 left
[06:56] *** DarthGandalf left
[06:56] *** PerlJam left
[06:56] *** birdwindupbird joined
[06:56] *** orafu left
[06:56] *** avar left
[06:56] *** _jaldhar joined
[06:57] *** Su-Shee_ left
[06:57] *** betterworld left
[06:57] *** [Coke] left
[06:57] *** [Coke] joined
[06:57] *** broquaint joined
[06:57] *** betterworld joined
[06:57] *** jaldhar left
[06:57] *** Trashlord left
[06:57] *** Tedd1^ joined
[06:57] *** PerlJam joined
[06:58] *** avar joined
[06:58] *** avar left
[06:58] *** avar joined
[06:58] *** tty234 joined
[06:58] *** chra left
[06:58] *** Tedd1 left
[06:58] *** orafu joined
[06:58] *** Su-Shee joined
[06:58] *** REPLeffect left
[06:59] *** REPLeffect joined
[06:59] *** chra joined
[07:02] *** araujo left
[07:02] *** sudokode left
[07:02] *** Gothmog_ left
[07:02] *** noam_ left
[07:02] *** _ilbot left
[07:02] *** slavik left
[07:02] *** c1sung left
[07:02] *** djanatyn left
[07:02] *** eviltwin_b left
[07:02] *** scott___ joined
[07:03] *** scott__ left
[07:03] *** noam_ joined
[07:04] *** preflex left
[07:05] *** REPLeffect left
[07:05] *** REPLeffect joined
[07:06] *** preflex joined
[07:07] *** araujo joined
[07:07] *** Gothmog_ joined
[07:07] *** _ilbot joined
[07:07] *** slavik joined
[07:07] *** c1sung joined
[07:07] *** djanatyn joined
[07:07] *** eviltwin_b joined
[07:07] *** _ilbot left
[07:07] *** c1sung left
[07:08] *** Gothmog_ left
[07:08] *** Gothmog_ joined
[07:08] *** c1sung joined
[07:08] *** thou joined
[07:09] *** sudokode joined
[07:11] *** DarthGandalf joined
[07:13] <sorear> fff.  new master mono doesn't work *at all* with niecza

[07:14] *** drbean_ joined
[07:14] *** _ilbot joined
[07:14] *** y3llow_ joined
[07:14] *** kaleem left
[07:14] *** japhb_ joined
[07:15] *** jrockway_ joined
[07:15] *** sunnavy_ joined
[07:15] *** zamolxes_ joined
[07:15] *** jevin_ joined
[07:15] *** Maddingu1 joined
[07:15] *** gfldex_ joined
[07:15] *** Vlavv` left
[07:15] *** x3nU left
[07:15] *** zamolxes left
[07:15] *** jrockway left
[07:15] *** rafl left
[07:15] *** cj left
[07:15] *** y3llow left
[07:15] *** gfldex left
[07:15] *** sunnavy left
[07:15] *** Maddingue left
[07:15] *** x3nU__ joined
[07:15] *** rafl joined
[07:16] *** y3llow_ is now known as y3llow

[07:16] *** Vlavv` joined
[07:16] *** drbean left
[07:16] *** japhb left
[07:16] *** jevin left
[07:16] *** cj__ joined
[07:16] *** prammer left
[07:16] *** drbean_ is now known as drbean

[07:16] *** flussence_ joined
[07:16] *** prammer joined
[07:17] *** ranguard left
[07:17] *** mikemol left
[07:17] *** flussence left
[07:18] *** ranguard joined
[07:19] *** simcop2387 left
[07:19] *** kst`` joined
[07:21] *** rsimoes2 joined
[07:22] *** simcop2387 joined
[07:22] *** pochi joined
[07:23] *** mikemol_ joined
[07:23] *** xinming left
[07:23] *** tty234_ joined
[07:24] *** mikemol joined
[07:24] *** xinming joined
[07:24] *** x3nU__ left
[07:24] *** pochi_ left
[07:24] *** jlaire left
[07:24] *** mikemol left
[07:24] *** cognominal_ joined
[07:24] *** gfldex__ joined
[07:24] *** ponbiki left
[07:25] <benabik> There's a local shop that does all their work in Haskell.  I think they do financial forecasting and the like.  (Or maybe that was two people who were on campus the same day.  Not sure.)

[07:25] *** leontopod left
[07:25] *** leontopod joined
[07:26] *** hillu_ joined
[07:26] *** tty234 left
[07:26] *** rsimoes left
[07:26] *** gfldex_ left
[07:26] *** ab5tract left
[07:26] *** hillu left
[07:26] *** ab5tract joined
[07:27] *** thou left
[07:27] *** cognominal left
[07:27] *** wolfman2_ joined
[07:28] *** arnsholt_ joined
[07:28] *** [particle]1 joined
[07:28] *** y3llow_ joined
[07:28] *** kst` left
[07:29] *** jlaire joined
[07:30] *** athomason_ joined
[07:31] *** nsh_ joined
[07:31] *** sorear_ joined
[07:31] *** awwaiid_ joined
[07:31] *** szabgab_ joined
[07:31] <sorear_> yes, Haskell is quite popular with high finance.

[07:31] <sorear_> they are not the only user though.

[07:32] *** scottp_ joined
[07:32] *** sorear left
[07:32] *** sorear_ is now known as sorear

[07:32] *** Juerd_ joined
[07:32] *** pmichaud_ joined
[07:32] *** rhr_ joined
[07:32] *** uno_be joined
[07:33] *** betterwo1ld joined
[07:33] *** x3nU joined
[07:33] *** wolfman2000 left
[07:33] *** orafu left
[07:33] *** awwaiid left
[07:33] *** nsh left
[07:33] *** ocharles left
[07:33] *** athomason left
[07:33] *** y3llow left
[07:33] *** Khisanth left
[07:33] *** Juerd left
[07:33] *** bacek left
[07:33] *** arnsholt left
[07:33] *** rhr left
[07:33] *** pmichaud left
[07:33] *** scottp left
[07:33] *** szabgab left
[07:33] *** renormalist left
[07:33] *** betterworld left
[07:33] *** [particle] left
[07:33] *** unobe left
[07:33] *** jfried left
[07:33] *** bacek joined
[07:33] *** Juerd_ is now known as Juerd

[07:34] *** ocharles- joined
[07:34] *** jfried joined
[07:34] *** x3nU is now known as Guest6426

[07:34] *** OuLouFu joined
[07:34] *** OuLouFu left
[07:34] *** OuLouFu joined
[07:34] *** OuLouFu is now known as orafu

[07:34] *** ocharles- is now known as ocharles

[07:34] *** y3llow_ is now known as y3llow

[07:37] *** xinming left
[07:40] *** xinming joined
[07:44] *** Khisanth joined
[07:46] *** pothos_ joined
[07:47] *** d4l3k_ joined
[07:47] *** sunnavy joined
[07:48] *** hillu joined
[07:48] *** skids_ joined
[07:48] *** bluescreen100 joined
[07:48] *** jaldhar_ joined
[07:49] *** hillu_ left
[07:49] *** sunnavy_ left
[07:50] *** dalek left
[07:50] *** lumi____ left
[07:50] *** pothos left
[07:50] *** lumi___ joined
[07:50] *** skids left
[07:50] *** bluescreen10 left
[07:50] *** Grrrr left
[07:50] *** _jaldhar left
[07:50] *** _ilbot left
[07:50] *** pnu_ left
[07:50] *** pnu joined
[07:50] *** xinming_ joined
[07:50] *** _ilbot joined
[07:50] *** pothos_ is now known as pothos

[07:50] *** p6eval left
[07:51] *** xinming left
[07:52] *** d4l3k_ left
[07:53] *** dalek joined
[07:53] *** ChanServ sets mode: +v dalek

[07:53] *** simcop2387 left
[07:54] *** simcop2387 joined
[07:54] *** dalek left
[07:55] *** p6eval joined
[07:55] *** dalek joined
[07:55] *** sorear left
[07:55] *** sorear joined
[07:56] *** drbean left
[07:56] *** ChanServ sets mode: +v p6eval

[07:56] *** diakopter left
[07:56] *** diakopter joined
[07:56] *** ChanServ sets mode: +v dalek

[07:56] *** pmichaud_ left
[07:56] *** pmichaud joined
[07:56] *** colomon left
[07:57] *** Woodi left
[07:58] *** Woodi joined
[08:00] *** Grrrr joined
[08:02] *** drbean joined
[08:10] *** thou joined
[08:23] *** sunnavy left
[08:24] *** sunnavy joined
[08:26] *** ab5tract left
[08:26] *** mj41 joined
[08:29] <Su-Shee> good morning everyone.

[08:29] *** Woodi left
[08:29] *** rhr_ left
[08:29] *** szabgab_ left
[08:29] *** awwaiid_ left
[08:29] *** nsh_ left
[08:29] *** tty234_ left
[08:29] *** zamolxes_ left
[08:29] *** c1sung left
[08:29] *** Gothmog_ left
[08:29] *** DarthGandalf left
[08:29] *** timotimo_ left
[08:29] *** jnthn_ left
[08:29] *** woosley left
[08:29] *** Patterner left
[08:29] *** sftp left
[08:29] *** yeltzooo left
[08:29] *** nebuchadnezzar left
[08:29] *** eiro left
[08:32] *** rhr joined
[08:32] <moritz> \o

[08:32] *** sftp joined
[08:35] *** woosley joined
[08:35] *** timotimo joined
[08:35] *** nebuchadnezzar joined
[08:35] *** eiro joined
[08:35] *** Woodi joined
[08:35] *** szabgab_ joined
[08:35] *** awwaiid_ joined
[08:35] *** DarthGandalf joined
[08:35] *** c1sung joined
[08:35] *** Gothmog_ joined
[08:35] *** jnthn_ joined
[08:35] *** AAAA9AI joined
[08:35] *** Patterner joined
[08:35] *** yeltzooo joined
[08:35] *** tty234 joined
[08:35] *** szabgab_ left
[08:35] *** DarthGandalf left
[08:35] *** tty234 left
[08:35] *** tty234 joined
[08:35] *** szabgab joined
[08:35] *** tty234 left
[08:37] *** woosley left
[08:37] *** DarthGandalf joined
[08:38] *** nsh joined
[08:39] *** zamolxes joined
[08:39] *** tty234 joined
[08:40] *** ab5tract joined
[08:40] *** woosley joined
[08:40] *** Patterner left
[08:40] *** Psyche^ joined
[08:40] *** Psyche^ is now known as Patterner

[08:41] *** am0c joined
[08:42] *** nebuchad` joined
[08:42] *** eiro left
[08:42] *** Woodi left
[08:42] *** awwaiid_ left
[08:42] *** c1sung left
[08:42] *** Gothmog_ left
[08:42] *** jnthn_ left
[08:42] *** yeltzooo left
[08:44] *** d4l3k_ joined
[08:44] *** nebuchadnezzar left
[08:45] *** yeltzooo joined
[08:45] *** Gothmog_ joined
[08:45] *** awwaiid joined
[08:45] *** Woodi joined
[08:45] *** c1sung joined
[08:45] *** dalek left
[08:45] *** d4l3k_ is now known as dalek

[08:45] *** ChanServ sets mode: +v dalek

[08:46] <sorear> o/ moritz, Su-Shee 

[08:51] *** simcop2387 left
[08:51] *** pothos left
[08:51] *** Khisanth left
[08:51] *** jfried left
[08:51] *** ocharles left
[08:51] *** cj__ left
[08:51] *** apejens left
[08:51] *** BooK_ left
[08:51] *** sirhc left
[08:51] *** frettled left
[08:51] *** buubot_backup left
[08:51] *** krunen left
[08:51] *** bbkr1 left
[08:52] *** clkao joined
[08:52] *** woosley left
[08:52] *** scottp joined
[08:53] *** buubot_backup joined
[08:53] *** Trashlord joined
[08:54] *** dukeleto left
[08:54] *** scottp_ left
[08:54] *** clkao_ left
[08:54] *** mikemol_ left
[08:55] *** dukeleto- joined
[08:55] *** pothos joined
[08:55] *** Khisanth joined
[08:55] *** jfried joined
[08:55] *** ocharles joined
[08:55] *** apejens joined
[08:55] *** BooK_ joined
[08:55] *** frettled joined
[08:55] *** sirhc joined
[08:55] *** krunen joined
[08:55] *** simcop2387 joined
[08:55] *** pothos left
[08:55] *** dukeleto- is now known as dukeleto

[08:56] *** pothos joined
[08:58] *** mikemol joined
[08:59] *** sorear_ joined
[08:59] *** PerlPilot joined
[08:59] *** nebuchad` is now known as nebuchadnezzar

[09:00] *** cj joined
[09:01] *** domidumont1 joined
[09:02] *** sorear left
[09:02] *** PerlJam left
[09:02] *** am0c left
[09:02] *** Chillance left
[09:02] *** Juerd left
[09:02] *** domidumont left
[09:03] *** Chillance joined
[09:04] *** am0c joined
[09:04] *** preflex_ joined
[09:04] *** preflex left
[09:04] *** preflex_ is now known as preflex

[09:08] *** slavik1 joined
[09:09] *** _jaldhar_ joined
[09:09] *** tarch joined
[09:09] *** geekosaur joined
[09:10] *** sunnavy_ joined
[09:10] *** sftp_ joined
[09:10] *** gfldex joined
[09:11] *** timotimo_ joined
[09:11] *** pothos_ joined
[09:12] *** GlitchMr joined
[09:12] *** slavik left
[09:12] *** eviltwin_b left
[09:12] *** jnthn joined
[09:12] *** sunnavy left
[09:12] *** jrockway_ left
[09:12] *** sftp left
[09:12] *** araujo left
[09:12] *** timotimo left
[09:12] *** jlaire left
[09:12] *** jaldhar_ left
[09:12] *** y3llow left
[09:12] *** pothos left
[09:12] *** DarthGandalf left
[09:12] *** gfldex__ left
[09:12] *** sorear_ left
[09:12] *** y3llow_ joined
[09:12] *** jrockway joined
[09:13] *** jlaire joined
[09:13] *** pothos_ is now known as pothos

[09:13] *** araujo joined
[09:14] *** y3llow_ is now known as y3llow

[09:16] *** sorear joined
[09:16] *** DarthGandalf joined
[09:18] *** sunnavy joined
[09:18] *** mj41_nb joined
[09:20] *** Maddingu1 is now known as Maddingue

[09:21] *** arnsholt_ is now known as arnsholt

[09:21] *** sunnavy_ left
[09:21] *** mj41 left
[09:21] *** bacek left
[09:25] *** pernatiy left
[09:26] *** bacek joined
[09:26] *** AmazingPudding joined
[09:30] *** revdiablo left
[09:30] *** bonsaikitten left
[09:30] *** rsimoes1 left
[09:31] *** revdiablo joined
[09:31] *** revdiablo left
[09:31] *** revdiablo joined
[09:31] *** dakkar joined
[09:35] *** AmazingPudding is now known as bonsaikitten

[09:36] *** zamolxes_ joined
[09:36] *** diakopte1 joined
[09:37] *** diakopter left
[09:37] *** c1sung left
[09:37] *** zamolxes left
[09:39] *** rsimoes1 joined
[09:40] *** c1sung joined
[09:43] *** nsh left
[09:44] *** PerlPilot left
[09:44] *** Trashlord left
[09:44] *** japhb_ left
[09:44] *** PerlJam joined
[09:44] *** nsh joined
[09:45] *** diakopte1 left
[09:45] *** japhb_ joined
[09:46] *** REPLeffect left
[09:48] *** szabgab left
[09:48] *** szabgab joined
[09:49] *** REPLeffect joined
[09:52] <dalek> rakudo/nom: 3bfaa06 | moritz++ | src/core/Range.pm:

[09:52] <dalek> rakudo/nom: Range iteration fixes

[09:52] <dalek> rakudo/nom: 

[09:52] <dalek> rakudo/nom: * allows big integer ranges

[09:52] <dalek> rakudo/nom: * numifies the upper limit if the lower one is numeric

[09:52] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3bfaa06ad1

[09:52] <dalek> rakudo/nom: e035eed | moritz++ | src/core/Range.pm:

[09:52] <dalek> rakudo/nom: Num ranges now produce Num lists

[09:52] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e035eed1eb

[09:53] *** diakopter joined
[09:57] *** Trashlord joined
[09:58] *** daxim joined
[09:59] <dalek> roast: 53c3cd2 | moritz++ | S03-operators/range.t:

[10:00] <dalek> roast: test ranges of bigints and nums

[10:00] <dalek> roast: review: https://github.com/perl6/roast/commit/53c3cd2249

[10:00] *** huf_ is now known as huf

[10:05] *** szabgab_ joined
[10:06] *** szabgab left
[10:06] *** PZt left
[10:31] <masak> good antenoon, #perl6

[10:33] *** PZt joined
[10:33] <masak> [backlog] heh, I'd hate to be remembered as "the guy who used Perl 6 in production". :P

[10:33] <masak> put Perl 6 to the test people! all of you!

[10:33] <masak> s/test/test,/

[10:35] <masak> also, my the first project that I ever planned to write in Perl 6 was actually a supercool RPG game.

[10:36] <masak> kind of a framework for scriptable adventure game worlds.

[10:37] *** kst`` is now known as kst

[10:37] <masak> also, in the department of "sentences no-one could predict": "I can code C/C++ already and my hair is sacred." :)

[10:39] *** slavik1 left
[10:40] *** slavik joined
[10:41] *** xinming_ left
[10:41] *** xinming joined
[10:46] *** xinming left
[10:52] <snarkyboojum> some uses of Perl 6 in production might imply production Haskell use! :O

[10:52] *** bacek left
[10:52] *** xinming joined
[10:53] *** bacek joined
[10:53] <snarkyboojum> but seriously, I've used both Haskell and Perl 6 in production, though that could just a sign that I shouldn't be given prod access ;)

[10:56] <masak> right tool for the job. that's all there is to it.

[10:56] <snarkyboojum> someone else say something, quickly!

[10:56] <snarkyboojum> ah - masak to the rescue

[11:00] <snarkyboojum> though "right tool" isn't necessarily simple either ;)

[11:00] *** Juerd joined
[11:02] *** xinming left
[11:04] *** xinming joined
[11:08] *** MayDaniel joined
[11:09] <masak> indeed, it isn't.

[11:09] <masak> but it tells us something about the needs to keep up-to-date on tools :)

[11:10] <masak> I gave a Perl 5 course in January. in preparing the material, I learned a lot of little tidbits about tools.

[11:11] *** snearch joined
[11:13] *** lestrrat left
[11:14] *** lestrrat joined
[11:26] <dalek> rakudo/nom: a61dbd5 | moritz++ | tools/build/NQP_REVISION:

[11:26] <dalek> rakudo/nom: bump NQP revision

[11:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a61dbd5507

[11:26] *** scott___ left
[11:33] <dalek> roast: d93480e | moritz++ | S0 (2 files):

[11:33] <dalek> roast: two rakudo unfudges

[11:33] <dalek> roast: review: https://github.com/perl6/roast/commit/d93480e56f

[11:38] *** lestrrat left
[11:39] *** Home joined
[11:39] *** lestrrat joined
[11:40] <Home> rakudo: say "test"

[11:40] <p6eval> rakudo e035ee: OUTPUT«test␤»

[11:40] <Home> rakudo: say <STDIN>

[11:40] <p6eval> rakudo e035ee: OUTPUT«===SORRY!===␤Unsupported use of <STDIN>;  in Perl 6 please use $*IN.lines (or add whitespace to suppress warning)␤at /tmp/kbkZxc4TNg:1␤»

[11:41] *** Home left
[11:41] *** snearch left
[11:41] *** snearch joined
[11:43] <moritz> welcome Home!

[11:45] <masak> Home just wanted to test p6eval and our excellent error messages; he already left, fully satisfied.

[11:46] <moritz> I know he left, I just couldn't resist the pun :-)

[11:46] *** lestrrat left
[11:46] <masak> I know :)

[11:48] *** snearch left
[11:49] *** snearch joined
[11:49] *** lestrrat joined
[11:59] *** mtk left
[12:02] *** lestrrat left
[12:03] *** lestrrat joined
[12:04] *** Bucciarati left
[12:13] *** bluescreen100 left
[12:15] *** pernatiy joined
[12:16] *** sftp_ left
[12:25] *** not_gerd joined
[12:25] <not_gerd> hello, #perl6

[12:25] <phenny> not_gerd: 08 Feb 21:51Z <jnthn> tell not_gerd that's up to the REPR to do. See P6opaque - it keeps it around in its REPR_data.

[12:25] *** bluescreen100 joined
[12:33] * [Coke] yawns

[12:42] *** _jaldhar_ left
[12:45] *** xinming left
[12:47] *** xinming joined
[12:51] <moritz> jnthn: fwiw the 'bs' branch in nom fails to build here

[12:51] <moritz> In file included from serializationcontext.c:29:

[12:51] <moritz> ../6model/sixmodelobject.h:143: error: redefinition of typedef ‘STable’

[12:51] <moritz> ../6model/serialization.h:49: note: previous declaration of ‘STable’ was here

[12:52] *** bbkr left
[12:54] *** flussence_ is now known as flussence

[13:00] <jnthn> moritz: Curious - mine doesn't so much as warn me, let alone error.

[13:03] <not_gerd> jnthn: typedefs are semantically definitions, and re-definitions are not allowed (if they are not tentative)

[13:06] <jnthn> not_gerd: Where by tentative you mean?

[13:07] <jnthn> oh, I see

[13:07] <jnthn> duh

[13:07] <not_gerd> int x; int x = 5; is legal as long as you only assign once

[13:07] <not_gerd> it's a technical term from the C standard

[13:07] <jnthn> ok

[13:08] <dalek> nqp/bs: 686b47b | jnthn++ | src/6model/sixmodelobject.h:

[13:08] <dalek> nqp/bs: Fix typedef redefinition that busted the build on some compilers (moritz++ for reporting).

[13:08] <dalek> nqp/bs: review: https://github.com/perl6/nqp/commit/686b47b71d

[13:08] <not_gerd> jnthn: https://gist.github.com/1789578 is what I'm using...

[13:10] <moritz> nom: class A { $.x handles <Numeric> = 5; method x() { return $!x * 2 } }; say A.new.Numeric

[13:10] <p6eval> nom a61dbd: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2␤»

[13:11] <moritz> nom: class A { $.x handles <Numeric>; method x() { return $!x * 2 } }; say A.new(x => 5).Numeric

[13:11] <p6eval> nom a61dbd: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2␤»

[13:11] <jnthn> Missing "has"

[13:11] <moritz> nom: class A { has $.x handles <Numeric>; method x() { return $!x * 2 } }; say A.new(x => 5).Numeric

[13:11] <p6eval> nom a61dbd: OUTPUT«5␤»

[13:11] <moritz> jnthn++

[13:11] <moritz> so the attribute takes care of the 'handles', not the accessor

[13:12] <jnthn> Correct.

[13:12] <moritz> makes sense if you think about it, because it means you can delegate to private attributes too :-)

[13:12] <jnthn> Well, the generated delegation method looks up the attribute

[13:12] <jnthn> Pretty sure traits.pm has the implementation of handles

[13:14] <moritz> nom: multi a($x) { }; multi a(*@a) { }; say a(3)

[13:14] <p6eval> nom a61dbd: OUTPUT«Nil␤»

[13:22] *** MayDaniel left
[13:26] <dalek> roast: 3a7fb4f | moritz++ | S12-class/anonymous.t:

[13:26] <dalek> roast: RT #80024, anon class is anon

[13:26] <dalek> roast: review: https://github.com/perl6/roast/commit/3a7fb4fb42

[13:26] *** tokuhirom joined
[13:28] <moritz> ok, I have a feature request

[13:28] <moritz> I want both 'CATCH' and 'default' to take statements too, not only blocks

[13:29] <moritz> you can write   try foo();   without a block

[13:29] <moritz> but sometimes I also want to write  CATCH default $died = 1;

[13:29] <moritz> or similar stuff

[13:33] <jnthn> Thing is that you expect CATCH to get $_ to the exception. And if there's no block there it could be a little misleading.

[13:33] <jnthn> s/get/set/

[13:33] <jnthn> Maybe that's not a fatal issue

[13:34] <jnthn> Are there use cases for CATCH without a block other than using default?

[13:36] <moritz> sure

[13:36] <moritz> CATCH when X::JustOneException { ... }

[13:37] <moritz> but I don't think topicalizatioin is a problem; after all smart-matching is also a mini-topicalizer

[13:37] <jnthn> True

[13:37] <moritz> as is statement_control:sym<when>

[13:37] <moritz> erm, s/when/given/

[13:37] <moritz> though 'when

[13:37] <moritz> is too

[13:37] <moritz> or not, dunno. I forgot :-)

[13:39] *** xinming left
[13:39] *** skids_ left
[13:39] <masak> CATCH, being a phaser, looks perfectly normal in expression form.

[13:40] <masak> but default doesn't, to my eyes.

[13:40] <moritz> well, because your eyes aren't yet used to it

[13:40] <masak> of course.

[13:40] <masak> but I believe it's also indicative of a real pattern.

[13:40] *** colomon joined
[13:40] <masak> default belongs to a group of things that always take a block.

[13:40] <masak> CATCH doesn't.

[13:40] *** xinming joined
[13:40] <masak> I just wanted to call attention to that through my bias :)

[13:41] <jnthn> Yeah, default does bother me a tad more than CATCH

[13:42] <moritz> well, I request both and get one. That's not too bad by #perl6 feature request standards :-)

[13:42] <masak> :D

[13:42] <masak> we're here to help. :)

[13:43] <masak> CATCH say "oops!" when X::JustOneException;

[13:43] <masak> should be OK, right?

[13:43] <masak> it reads extremely well.

[13:44] <moritz> but won't work

[13:44] <masak> wrong nesting?

[13:44] <moritz> because statement-modifying 'when' doesn't succeed the block

[13:44] <masak> oh!

[13:44] <moritz> thus the 'oops!' will be printed, and then the exception is rethrown

[13:45] <masak> ...unless that's what you want...

[13:48] *** thou left
[13:48] *** xinming left
[13:48] *** xinming joined
[14:01] *** ggoebel left
[14:06] *** ggoebel joined
[14:08] *** JimmyZ joined
[14:14] *** not_gerd left
[14:16] <colomon> moritz: okay, I have a strategy which is slightly better than tit-for-tat.  :)

[14:16] *** ggoebel left
[14:17] *** ggoebel joined
[14:17] *** diakopter left
[14:17] *** diakopter joined
[14:19] *** REPLeffect left
[14:20] <moritz> colomon: submit! submit!

[14:20] <colomon> I'm not sure I should before the last possible minute.  ;)

[14:20] <moritz> you should

[14:20] <moritz> you can also replace your submission with later submissions, if you want

[14:21] <colomon> I'm more concerned with keeping my techniques secret.  ;)

[14:23] *** szabgab_ left
[14:23] *** szabgab joined
[14:24] *** Chillance left
[14:25] *** Chillance joined
[14:31] *** xinming left
[14:32] *** sftp joined
[14:32] <moritz> well, I won't publish any submissions before the deadline, and my own strategies are already written and their SHA1 published

[14:32] *** REPLeffect joined
[14:33] *** xinming joined
[14:35] *** [particle]1 is now known as [particle]

[14:38] *** timotimo_ is now known as timotimo

[14:39] *** packetknife joined
[14:39] <tadzik> friday, friday!

[14:41] *** PacoAir joined
[14:42] <moritz> TCIF indeed!

[14:44] <tadzik> TCIF?

[14:44] <moritz> Thank Chrunchy It's Friday

[14:44] <tadzik> heh

[14:44] <tadzik> it also means the end of the exam session \o/

[14:45] <moritz> \o/ time for tadzik++ to write a Prisoner's Dilemma strategy!

[14:45] <tadzik> yay!

[14:47] * [Coke] , running a niecza auto-un-fudge, realizes he has another fudge patch he never pushed. whoops.

[14:47] * [Coke] will see if it gets any bigger first.

[14:52] <uno_be> win 6

[14:59] *** xinming left
[14:59] *** fasad joined
[15:00] *** xinming joined
[15:01] *** MayDaniel joined
[15:04] * etneg_ checks if niezca has a site

[15:04] * etneg_ sits back and relaxes till one's up

[15:05] <tadzik> niecza

[15:06] <moritz> etneg_: anything missing from https://github.com/sorear/niecza ?

[15:07] <etneg_> doesnt look like it

[15:09] <etneg_> is that a trick question

[15:11] <moritz> no, it's a real question

[15:11] <moritz> the question is if we have a good reason to build and maintain a website for niecza

[15:11] <moritz> or if the github page is enough

[15:11] <etneg_> i think so

[15:11] <etneg_> didnt you guys say it was like totally awesome or something

[15:11] <etneg_> heh

[15:11] <etneg_> sorry i dont code:D

[15:12] <moritz> it *is* totatlly awesome

[15:12] <moritz> you should really start :-)

[15:13] <etneg_> well considering it's on par with rakudo and rakudo has a website

[15:13] <etneg_> i'd think niecza should go in the same direction

[15:14] <etneg_> my 2$ opinion

[15:16] <moritz> thanks for your opinion

[15:16] <etneg_> and reading more, it lookslike it's being compared to raudo

[15:16] <etneg_> rakudo

[15:17] <etneg_> so certainly a website

[15:17] <moritz> I also think it needs a website to be taken seriously, but I'm not (yet?) ready to volunteer to make one

[15:18] <etneg_> possibly a wiki page would be a good start

[15:21] <moritz> somehow I have bad experience with wiki pages

[15:21] *** tokuhirom left
[15:21] <etneg_> well it's a start

[15:21] <etneg_> :D

[15:21] <moritz> it's what you do if you create a page to then abandon, hoping that the rest of the world will maintain it

[15:22] * [Coke] accidentally makes feather REALLY slow for a litle while.

[15:22] <[Coke]> *little

[15:25] * flussence just wrote a completely nonsensical PD strategy which does only slightly worse than tit-for-tat

[15:25] <dalek> roast: 702aa34 | coke++ | S (14 files):

[15:25] <dalek> roast: niecza auto-unfudge

[15:25] <dalek> roast: review: https://github.com/perl6/roast/commit/702aa34958

[15:38] *** sftp_ joined
[15:39] *** sftp left
[15:43] *** Psyche^ joined
[15:47] *** Patterner left
[15:47] *** Psyche^ is now known as Patterner

[15:47] *** MayDaniel left
[16:00] *** birdwindupbird left
[16:01] <leontopod> I think pushing perl 6 in a functional programming direction is a disaster.

[16:01] <leontopod> You are going to push it right into academia.

[16:05] *** am0c left
[16:05] <TimToady> that's only one of the places we're going to push it :P

[16:08] <flussence> .oO( nobody uses functional languages! just look at how SQL flopped! )

[16:08] *** wtw left
[16:08] <TimToady> but the P still stands for Practical and Pathological

[16:09] *** Trashlord left
[16:10] <TimToady> you fundamental mistake is to assume that if something is better for academia, it must necessarily be worse for everything else, and this is...not yet proven...  :)

[16:11] <TimToady> *your

[16:11] <daxim> sql is counted chiefly among the declarative languages, not the functional ones

[16:12] <leontopod> Is that really you, Larry?

[16:12] <leontopod> wow, I am talking to Larry Wall! =)

[16:12] <TimToady> I'll never tell...

[16:13] <TimToady> daxim: declarative and functional are not exclusive concepts in my head

[16:14] <daxim> certainly, but I was surprised to see sql named as an example of a non-floppy functional language

[16:16] <TimToady> sure, and dduncan++ shows up here regularly to point out how floppy SQL is compared to whatever he's calling his new language these days :)

[16:18] *** JimmyZ left
[16:18] <TimToady> anyway, both of those are really mushy concepts because it's really hard to make something that is theoretically pure and also practical, so people compromise on their designs to varying degrees, but still call them "declarative" and/or "functional"

[16:20] *** domidumont1 left
[16:22] *** Trashlord joined
[16:22] <TimToady> Perl 6 is multiparadigmatic, which means it can't be monodogmatic about any of them.

[16:23] * au still thinks P stands for Polymorphic...

[16:23] <TimToady> :D

[16:23] <[Coke]> au: hey!

[16:23] <au> /o

[16:27] <TimToady> for sure, Perl 6 is becoming more existential, despite having been cursed and recursed for having too many lambdas...  :)

[16:28] *** daxim left
[16:28] <leontopod> THUS SPAKE LARRYTHUSTRA

[16:29] <au> well, we did start with a rather cursive syntax in the first place... :)

[16:29] <TimToady> "It's full of asterisks!"

[16:29] <TimToady> anyway, been there, have the T-shirt, which I still wear fondly from time to time

[16:30] <au> *delighted*

[16:30] <leontopod> actually an "It's full of asterisks!" T-shirt would rule

[16:31] <TimToady> though I often have to point out that it's an *imaginary* timeline, and the "hack, hack, hack" bit looks more like a long-term graph of the stock market

[16:31] *** kaare_ joined
[16:32] *** yertalert joined
[16:32] <[Coke]> my god. it's full of whatever.

[16:33] *** thou joined
[16:33] *** thou left
[16:33] <leontopod> the stock market is a big ponzi scheme

[16:34] <TimToady> still, recent recessions notwithstanding, stock market curves to tend upward over the long term, so I guess you might say I'm bullish on Perl 6

[16:34] <leontopod> maybe Perl 6 is a big ponzi scheme! =D

[16:34] <TimToady> shh!

[16:34] <leontopod> to suck in more and more programmers!

[16:35] <yertalert> lol

[16:35] <TimToady> so far we suck at that :)

[16:38] *** wala joined
[16:39] *** p6eval left
[16:39] *** wala left
[16:40] <flussence> Perl 6 seems more like building pyramids than a pyramid scheme sometimes... but that just means it'll last 5000 years

[16:41] *** diakopter left
[16:41] *** dalek left
[16:42] *** diakopter joined
[16:42] <TimToady> hmm, maybe we need to install some traps for grave robbers...

[16:43] *** dalek joined
[16:43] *** ChanServ sets mode: +v dalek

[16:44] *** MayDaniel joined
[16:48] <TimToady> actually, they're already there: the attempt to backport Perl 6 features to Perl 5 has already demonstrated some of those traps :)

[16:49] *** MayDaniel left
[16:50] <flussence> (are they still trying to backport "." and "~"?)

[16:52] <[Coke]> there was a patch for it.

[16:52] <TimToady> dunno; all I know is it's much easier to break everything at once than one piece at a time

[16:54] <TimToady> and the cumulative pain of evolving Perl 5 into a Perl 6 one bit a time would be much greater than the pain we've had developing Perl 6, and would take much longer

[16:54] <jnthn> evening, #perl6

[16:54] <leontopod> Perl 5 is undergoing ferocious development

[16:55] <leontopod> what are they up to Perl 5.14 now?

[16:56] <geekosaur> most recent release, yeh

[16:57] <TimToady> sure, it's ferocious; nevertheless, it's ferocious like a lion chained to a gatepost, so it doesn't get so far down the road as it otherwise might...

[17:01] <leontopod> Is it true that Perl 5 has preprocessor definitions that are thousands of characters long?

[17:01] <leontopod> I love the C preprocessor.

[17:01] * geekosaur has not looked but it would not be uniquein having such

[17:02] <leontopod> A simple text preprocessor, why can't we have that for Perl 6?

[17:02] <jnthn> TimToady: I haz a silly question. In "my $x = [+] 1,2,3", what is it that makes the %item_assignment prec limit not cause <initializer> to stop parsing at the first comma, but swallow the rest of the list as the operand to the meta-op?

[17:02] <leontopod> Why gussy it all up?

[17:02] <timotimo> leontopod: who stops you from using m4 for perl5?

[17:02] <leontopod> because m4 doesn't come with Windows?

[17:02] <timotimo> neither does perl5

[17:02] <timotimo> or c++

[17:02] <timotimo> or c

[17:03] *** p6eval joined
[17:03] *** ChanServ sets mode: +v p6eval

[17:03] <yertalert> Or anything useful

[17:03] <leontopod> perl -P, baby

[17:03] <jnthn> yertalert: Hey, we got Notepad!

[17:04] <leontopod> Notepad got some kind of software award.

[17:04] <yertalert> lol

[17:04] <leontopod> But they couldn't figure out who actually wrote it.

[17:04] <yertalert> It amazes me that so many windows apps have remained unchanged since 3.1

[17:05] <leontopod> hey, windows 3.1, trumpet winsock, and netscape navigator was a pretty peppy combination on a 28k modem back in the day

[17:05] <yertalert> But, I do prefer an extremely light weight editor like notepad for just scratching out ideas

[17:06] <yertalert> That's why I have leafpad on Linux

[17:06] <leontopod> I think Microsoft should give away Windows 98 for free.

[17:06] <yertalert> and it has line numbering!

[17:06] <yertalert> lol, why?

[17:07] <tadzik> so we can play games, obviously

[17:07] *** kaleem joined
[17:08] <benabik> I wonder how long you can have a copy of Win98 connected to the internet before it's riddled with viruses.

[17:08] <moritz> does it even come with a network stack? :-)

[17:08] <timotimo> i think it was less than 30 minutes the last time i read about that

[17:08] <timotimo> and that's already quite a long time ago

[17:08] <benabik> I think the network stack started being standard with 95...

[17:09] <yertalert> They still have 98 viruses?

[17:09] <timotimo> windows 95 is the best windows

[17:09] <timotimo> because it has hover 950

[17:10] <yertalert> I think XP is the best

[17:10] * moritz likes fvwm best

[17:10] * moritz trolls a bit

[17:10] <yertalert> It was a huge scam by MS to see just how long millions of people could go without a modern operating system

[17:11] <moritz> nom: say 1.join.perl

[17:11] <p6eval> nom a61dbd: OUTPUT«"1"␤»

[17:12] <leontopod> I still have win 2k pro sp4, but its ip address is 10.0.0.4

[17:12] <leontopod> it's behind a pretty good linux firewall/nat box

[17:13] *** Tedd1^ left
[17:13] <yertalert> lol, linux has to protect windows

[17:13] <dalek> rakudo/nom: c3fb7d6 | moritz++ | src/core/ (3 files):

[17:13] <dalek> rakudo/nom: small X::AdHoc refactor

[17:13] <dalek> rakudo/nom: 

[17:13] <dalek> rakudo/nom: Now it's finally the way I want it to be.

[17:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c3fb7d6f04

[17:16] <fasad> Is perl6's philosophy "Perl 5 done right!" ?

[17:16] <[Coke]> b: say 2012-1998

[17:16] <p6eval> b 1b7dd1: OUTPUT«14␤»

[17:16] <[Coke]> b: say 2012-1995 ; # whoops

[17:16] <p6eval> b 1b7dd1: OUTPUT«17␤»

[17:17] <moritz> fasad: it's more like "Perl done right!"

[17:19] <TimToady> righter, or a least righterish

[17:20] <TimToady> jnthn: probably the same thing that makes -2**64 treat ** as tighter than the -

[17:20] <cognominal_> http://maxtaco.github.com/coffee-script/  # pasted by rgs in #perlfr

[17:21] <TimToady> jnthn: it doesn't look like the reduce rule is doing anything special other than setting the precedence to %list_prefix

[17:22] *** MayDaniel joined
[17:22] <TimToady> perl6: say -2**3

[17:22] <p6eval> pugs b927740, rakudo a61dbd, niecza v14-34-g1b3d1e8: OUTPUT«-8␤»

[17:22] <TimToady> whew!

[17:23] <cognominal_> TimToady do we have a  construct similar to the icecoffeescript "await/defer" in Perl 6?

[17:24] <cognominal_> …possibly using threads instead.

[17:25] * fasad ubuntu

[17:26] <fasad> ^^ignore that

[17:26] <TimToady> .oO(ignore ubuntu?)

[17:29] <jnthn> TimToady: Yeah, thus my confusion. EXPR is called from initializer with preclim of %item_assignment. It calls termish, which will parse the [+] as a prefix, then <term>, which parses the 1. Then back in EXPR we parse an infixish, which gets the , and this then has $inprec le $preclim as true, so it's considered the last TERM

[17:30] <jnthn> Or so I'd expect it to work, and that's how it's happening in Rakudo. Somehow I'm missing a trick in STD.

[17:32] *** MayDaniel left
[17:32] *** MayDaniel joined
[17:33] *** mj41_nb left
[17:33] <jnthn> I had wondered if it was an effect of the term-forcing that reduce does, but it'd see that this particular case leaves it as a normal prefix.

[17:33] <fasad> TimToday: :D

[17:34] <jnthn> *seem

[17:34] *** fasad left
[17:39] <jnthn> TimToady: Oh. My assumption that STD gets it right because Niecza gets it right may well be wrong.

[17:39] <jnthn> TimToady: Niecza has a term:reduce and then parses <args> after it.

[17:41] *** wolfman2_ left
[17:42] <jnthn> This is perhaps telling

[17:42] <jnthn> std: my $x = [+] 1, $y;

[17:42] <p6eval> std 48335fc: OUTPUT«[31m===[0mSORRY![31m===[0m␤Variable $y is not predeclared (declarators are tighter than comma, so maybe your 'my' signature needs parens?) at /tmp/P7RKd7vEnl line 1:␤------> [32mmy $x = [+] 1, [33m⏏[31m$y;[0m␤Check failed␤FAILED 00:01 112m␤»

[17:42] <jnthn> std: my $x = [+] (1, $y);

[17:43] <p6eval> std 48335fc: OUTPUT«[31m===[0mSORRY![31m===[0m␤Variable $y is not predeclared at /tmp/qhkDMu3KQE line 1:␤------> [32mmy $x = [+] (1, [33m⏏[31m$y);[0m␤Check failed␤FAILED 00:01 113m␤»

[17:43] <leontopod> so I installed ubuntu for the very first time about two weeks ago and wouldn't you know it, the new window manager looks like something that runs on a cell phone or pad computer.

[17:43] <jnthn> This implies (iiuc) that it's marked declend in MEMOS before it sees the $y

[17:44] <jnthn> So I'm suspecting STD parses this the way Rakudo's stdinit branch does, which would seem to be not what at least the spectests expect, nor what folks will in general.

[17:45] <benabik> leontopod: Yeah, Unity looks a little odd.  Haven't played with it much myself.  (I mostly use 10.04 because it's what we have at school (LTS))

[17:45] * benabik should talk in less parentheticals.

[17:45] <leontopod> That's the way everything is going:  cell phones and pad computers

[17:45] <TimToady> jnthn: yes, we should probably switch reduce to do the <args> trick

[17:46] *** uno_be left
[17:46] <jnthn> TimToady: OK, I'll do what Niecza does, or something close to that.

[17:46] <TimToady> and I have confirmed that viv does in fact misparse it

[17:46] <jnthn> TimToady: Phew. I was going nuts trying to figure out what I'd missed on method EXPR :P

[17:46] <jnthn> s/on/in

[17:47] <[Coke]> jnthn: This is the "punch list" of items that need addressing before

[17:47] <[Coke]> releasing a nom-based distribution.

[17:47] <[Coke]> Does that need to be replaced with a new goal, or just removed?

[17:47] <[Coke]> (from NOMMAP.*)

[17:47] <jnthn> [Coke]: Oh, I planned to fold nommap into ROADMAP (if any of it isn't already)

[17:49] <jnthn> heh, yeah, it also claims that the Order enumeration is missing, which it ain't.

[17:49] <benabik> [Coke]: your nick makes me keep wondering what infix:<Coke> does.  :-D

[17:50] <jnthn> [Coke]: Will take care of it this evening.

[17:51] <leontopod> Ritalin/Cocaine, Amphetamine/Adderall

[17:51] <masak> au! \o/

[17:51] <[Coke]> jnthn++

[17:52] <TimToady> jnthn: though it does point out a subtle flaw in EXPR that could perhaps be corrected by noticing that we've passed a precedence loosener and fixing the limiter

[17:53] *** birdwindupbird joined
[17:54] <masak> au: we're a bunch of people who want to kick-start the development of Pugs again, and bring it up to spec.

[17:55] <masak> last I counted: [Coke], ingy, and me.

[17:55] <leontopod> hi masak =)

[17:56] <masak> hi Teratogen =)

[17:56] <leontopod> oh, right

[17:56] *** leontopod is now known as Teratogen

[17:56] *** Teratogen left
[17:56] *** Teratogen joined
[17:56] <masak> both nicks are excellent, by the way.

[17:56] <Teratogen> well, the way I got stuck with Teratogen was 

[17:56] <Teratogen> this was back on efnet in 1994

[17:57] <Teratogen> I got invited by Plutonium (an irc operator at the time) to be an op on #sex

[17:57] <Teratogen> great

[17:57] <masak> "leontopod" puts me in mind of dandelions.

[17:57] <Teratogen> but I was still trying to figure out a nickname because I was so new to irc

[17:57] <masak> "Teratogen" sounds like something that generates Terats.

[17:57] <araujo> masak, I could help with testing too ...

[17:57] <araujo> :P

[17:57] <Teratogen> I saw the word "teratogen" in a novel, I think Jurassic Park

[17:57] <Teratogen> so I started using it

[17:58] <Teratogen> and every time I changed my nick to something else pixiedust would holler at me.

[17:58] <masak> araujo: testing? please elaborate. :)

[17:58] <Teratogen> so I ended up using Teratogen more and more.

[17:58] <Teratogen> And now I am kind of stuck with it.

[17:58] <araujo> masak, well, with pugs .. at least initially

[17:58] <masak> araujo: you're testing Pugs?

[17:58] <Teratogen> I am still banned on efnet #perl

[17:58] <Teratogen> it's been a decade, and the ban is still on.

[17:58] <Teratogen> *giggle*

[17:59] <araujo> masak, not now .... but i have been checking a bit its code 

[17:59] *** pernatiy left
[18:00] <[Coke]> masak: should we install haskell globally on feather?

[18:00] *** dakkar left
[18:01] <TimToady> .oO( #perl6, the Halfway House of banned personages attempting to re-enter society... :)

[18:02] <Teratogen> I remember the apostrophic jihad.

[18:02] <jnthn> TimToady: (fixing the limiter) that's kinda what I expected to find STD's EXPR doing :)

[18:03] <Teratogen> That is where Tom Christiansen attacked anybody who said dont instead of don't

[18:03] <Teratogen> im instead of i'm

[18:03] <Teratogen> etc

[18:03] <[Coke]> etc. ;)

[18:03] <Teratogen> well, yeah, etc.

[18:03] <Teratogen> baw

[18:04] <TimToady> Well, Tom is a prescriptivist at heart, but he's mellowed somewhat of late, at least some of the time...

[18:04] *** thou joined
[18:08] *** not_gerd joined
[18:08] <not_gerd> hello again, #perl6

[18:18] <masak> prescriptivism should be outlawed.

[18:18] <masak> [Coke]: yes, I think we should.

[18:18] <TimToady> that would be proscriptivism, not prescriptivism :)

[18:19] <cognominal_> masak, try harder for a self-contradiction:  "perscriptivism must be outlawed"

[18:19] <TimToady> though I freely admit that the practitioners of each are deeply intertwingled :)

[18:20] *** birdwindupbird left
[18:25] <[Coke]> moritz: hey, can you install the tools we need to build pugs.hs on feather? ;)

[18:26] *** Tedd1 joined
[18:30] *** birdwindupbird joined
[18:32] *** kaleem left
[18:32] *** kaleem joined
[18:32] <Su-Shee> today, I had a horrible experience. please hurry with perl 6. I never ever want to experience working with java and eclipse again. 

[18:34] <[Coke]> su-shee; I do that. and also cold fusion!

[18:34] <Su-Shee> [Coke]: I'm honestly lost for words after that experience. 

[18:35] <[Coke]> as with many things, it gets easier with practice.

[18:36] <[Coke]> I like the eclipse bit, actually, as I can afford not to remember all the java.

[18:36] <Teratogen> Will Java truly ever be completely FOSS?

[18:36] <Teratogen> I have a funny feeling that the guy who runs Oracle is going to keep that from happening.

[18:37] <Su-Shee> [Coke]: I simply avoided Java until today and then decided to give Android app development a try.. 

[18:37] <Teratogen> Su-Shee, yes, I want to develop android apps in Perl please!

[18:38] <Su-Shee> I think I try again when JS/HTML5 is the main stack.. 

[18:39] <not_gerd> Teratogen: possibly, you can do that right now - there's Mono for Android...

[18:41] <not_gerd> Rakudo on Android is probably not going to happen any time soon, though - the Parrot build system can't really deal with cross-compilation

[18:44] *** skids joined
[18:55] *** kaleem left
[19:01] *** unobe joined
[19:05] <masak> Su-Shee: the Android stack on Eclipse isn't so bad. it's based on auto-generation of a bunch of stuff, but considering that, it works quite well.

[19:07] <colomon> I keep on fantasizing about setting sorear++ up with a Android machine and Mono for Android...

[19:08] <colomon> wonder if that could fit into Google Summer of Code....

[19:09] <moritz> [Coke]: I'm updating GHC on feather, in the hope that it'll make compiling pugs.hs easier

[19:10] <masak> moritz++

[19:18] *** thou left
[19:18] *** buubot_backup left
[19:18] <[Coke]> moritz++

[19:20] *** colomon left
[19:33] <sorear> good * #perl6

[19:34] <masak> sorear! \o/

[19:39] *** buubot_backup joined
[19:42] *** bluescreen100 left
[19:43] *** buubot_backup left
[19:45] <moritz> $  ghc -v

[19:45] <moritz> Glasgow Haskell Compiler, Version 7.4.1, stage 2 booted by GHC version 7.0.4

[19:45] <moritz> that's on feather

[19:48] <[Coke]> moritz: looks like Pugs.hs also needs cabal for hacking.

[19:49] <[Coke]> also, thank you. ;)

[19:49] <moritz> [Coke]: yes, I'm now following the dependencies

[19:50] <moritz> cabal-install installed.

[19:52] *** icwiener joined
[19:52] <[Coke]> moritz++

[19:52] <dalek> rakudo/stdinit: 1d2af87 | jnthn++ | src/Perl6/ (2 files):

[19:52] <dalek> rakudo/stdinit: Switch reduction meta-op parsing to be a term, which resolves the last couple of regressions caused by switching to using <initializer>.

[19:52] <dalek> rakudo/stdinit: review: https://github.com/rakudo/rakudo/commit/1d2af87c7a

[19:52] <jnthn> moritz: Think I've got stdinit fixed up now. :)

[19:52] <moritz> \o/

[19:52] <jnthn> Wanna do a test run yourself, or shall I just go ahead and merge it?

[19:53] <moritz> I'm spectesting origin/stdinit merged into nom right nwo

[19:53] <jnthn> moritz: With the above patch?

[19:53] <moritz> jnthn: yes

[19:53] <jnthn> moritz++

[19:54] <jnthn> oh noes, spam in the RT queue!

[19:55] * jnthn suspects meeting thousands of singles would take a LOT of time

[19:55] <moritz> unless you find a way to massively parallelize

[19:56] *** bluescreen100 joined
[19:57] <jnthn> nom: say 645 - 80

[19:57] <p6eval> nom c3fb7d: OUTPUT«565␤»

[19:58] <dalek> roast: da13ad1 | moritz++ | S04-statements/try.t:

[19:58] <dalek> roast: tests for &die, try and X::AdHoc

[19:58] <dalek> roast: review: https://github.com/perl6/roast/commit/da13ad1b1f

[20:03] *** bluescreen100 left
[20:03] *** bluescreen10 joined
[20:04] *** ksi joined
[20:06] <moritz> which pugs repo is the most recent one?

[20:06] *** buubot_backup joined
[20:07] <dalek> rakudo/nom: c9d2827 | jnthn++ | / (5 files):

[20:07] <dalek> rakudo/nom: Merge branch 'nom' of github.com:rakudo/rakudo into nom

[20:07] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c9d28276b2

[20:07] <dalek> rakudo/nom: 525ec75 | jnthn++ | / (2 files):

[20:07] <dalek> rakudo/nom: Remove NOMMAP; update ROADMAP.

[20:07] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/525ec75917

[20:07] *** y3llow left
[20:07] *** pothos left
[20:09] <jnthn> oops, I accidentally the merge commit

[20:09] <moritz> jnthn: all tests pass on stdinit + nom, plus a bunch of passing TODOs

[20:09] *** birdwindupbird left
[20:09] *** y3llow joined
[20:09] <moritz> well, a few exception tests fail, but I'm to blame for that

[20:09] <moritz> (and i want to fix them over the weekend)

[20:09] *** pothos joined
[20:10] <jnthn> moritz: yay

[20:10] <jnthn> moritz: OK, please do go ahead and push the merge :)

[20:11] *** y3llow left
[20:12] *** y3llow joined
[20:12] <moritz> done.

[20:12] <dalek> rakudo/nom: a1180bc | moritz++ | src/ (3 files):

[20:12] <dalek> rakudo/nom: Merge remote branch 'origin/stdinit' into nom

[20:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a1180bccf7

[20:12] *** pothos left
[20:13] *** pothos joined
[20:14] *** y3llow left
[20:14] *** y3llow joined
[20:14] *** not_gerd left
[20:15] *** pothos left
[20:16] *** pothos joined
[20:16] *** y3llow left
[20:16] *** y3llow joined
[20:17] <cognominal_> moritz, the goal is to make rakudo grammar closer to std resulting in better error messages?

[20:18] *** y3llow left
[20:18] *** Trashlord left
[20:19] *** y3llow joined
[20:23] <masak> jnthn: yeech, a merge commit! don't you check the log before you push? :P

[20:25] <moritz> cognominal_: not only that, but it also makes some action methods easier, and other stuff possible that wasn't possible before

[20:25] *** Trashlord joined
[20:26] *** cooper joined
[20:26] <cognominal_> moritz++

[20:26] <PerlJam> moritz++ following the Perl tradition of making the impossible possible  :)

[20:32] <[Coke]> http://blog.chromium.org/2012/02/future-of-javascript-take-peek-today.html updates to JS that may sound familiar.

[20:33] *** fasad joined
[20:34] <moritz> PerlJam: jnthn++ did most of the work, I just merged the branch

[20:38] <jnthn> Just been through RT a bit and shuffled some tests over to testneeded thanks for moritz++'s $*HAS_SELF work :)

[20:38] <jnthn> er

[20:38] <jnthn> some tickets

[20:38] <sorear> is stdinit just the initializer change?

[20:39] <jnthn> sorear: yeah

[20:39] <jnthn> sorear: Well, and $*HAS_SELF

[20:39] <jnthn> sorear: I didn't do defterm yet.

[20:39] <sorear> moritz: website and blog are instances of the same problem - I don't understand the audience well enough to write for it

[20:40] <[Coke]> I would love to read posts for niecza like those that jonathan does on 6guts.

[20:40] <dalek> roast: dfc580a | moritz++ | S0 (2 files):

[20:40] <dalek> roast: rakudo unfudges

[20:40] <dalek> roast: review: https://github.com/perl6/roast/commit/dfc580aa2d

[20:40] <TimToady> even Moses needed Aaron...

[20:42] <masak> sorear: I read the Niecza release announcements with great interest every time.

[20:42] * PerlJam too

[20:42] <moritz> sorear: one solution is to just write stuff for an imaginary audience, and then listen to feedback

[20:42] <masak> sorear: but don't let people here bully you into taking valuable time off from coding to blog for someone else's sake. :)

[20:42] <PerlJam> though I find I don't play with niecza regularly like I do with Rakudo

[20:42] <masak> I'm starting to.

[20:43] *** alester joined
[20:43] <masak> Rakudo is still my main man, but Niecza is definitely getting there (in terms of how much I use it).

[20:43] <moritz> sorear: also the announcements talk about "what", but I'd love to read more about the "why"s (why is $feature hard to implement right now, ...)

[20:43] <PerlJam> It is always a a little bit of happiness when I write something that both Rakduo and Niecza can run  :)

[20:44] <jnthn> OK so...

[20:44] <jnthn> nom: my $foo = 42; ($foo, 'stuff')[0] = 24; say $foo;

[20:44] <p6eval> nom a1180b: OUTPUT«Cannot assign to a readonly variable or a value␤␤»

[20:44] <moritz> ... and that happens quite often these days, as long as I don't use "handles" :-)

[20:44] <jnthn> RT#105368 complains about this.

[20:44] <jnthn> I just fixed it and discovered we have the following test

[20:44] <moritz> jnthn: (unrelated) stdinit closed 3 different bug reports about [+] parsing :-)

[20:44] <jnthn>     my $x = 44;

[20:44] <jnthn>     $rt66304 = ( 11, $x, 22 );

[20:45] <jnthn>     dies_ok { $rt66304[1] = 'rw' }, 'variable List element is immutable';

[20:45] <jnthn> moritz: oh, nice! :D

[20:45] <jnthn> Both of these tests can't be right :) Which way is it? :)

[20:49] <masak> jnthn: mutable.

[20:49] * PerlJam wishes ack had a "paragraph mode" sometimes

[20:49] <masak> otherwise, how would cool things like @array[0, 1, 2].reverse work? :)

[20:49] <jnthn> masak: Good good.

[20:49] <alester> alas

[20:50] <jnthn> std: [xx] 1,2

[20:50] <p6eval> std 48335fc: OUTPUT«ok 00:01 109m␤»

[20:50] <benabik> Maybe regex based context?

[20:51] <benabik> -C /^$/,/^$/  (Backwards until empty line, forwards until empty line)

[20:52] <PerlJam> benabik: that's ... interesting.

[20:52] <benabik> PerlJam: I wasn't terribly serious.  But, yes, interesting.

[20:53] <benabik> Or, perhaps, "interesting'

[20:53] <sorear> we need a good extraction tool

[20:54] <moritz> sometimes I want a tool that searches only code examples in POD

[20:54] <moritz> so either within C<...> or code blocks

[20:54] <moritz> because grepping for things like 'has' or 'does' is simply unproductive otherwise

[20:54] <PerlJam> yep

[20:55] <PerlJam> that would be the next "killer feature" for ack even  :)

[20:56] <sorear> PerlJam: ack -f | xargs perl -00ne 'print if /.../' might DWYW

[21:00] <dalek> std: 52f3895 | larry++ | STD.pm6:

[21:00] <dalek> std: turn reduceop parsing into a term

[21:00] <dalek> std: review: https://github.com/perl6/std/commit/52f38955e1

[21:02] <TimToady> niecza: constant @foo = 1,@foo; say @foo[1]

[21:02] <p6eval> niecza v14-34-g1b3d1e8: OUTPUT«␤»

[21:02] <TimToady> sorear: any clue how far that is from working?

[21:04] <sorear> if by 'working' you mean 'carping with a decent error message', that could probably be done today

[21:05] * sorear wonders if there is a way to configure the regex(?) used by git grep -W

[21:06] <TimToady> no, I mean working working, and in doing what I mean :)

[21:06] <TimToady> *as in

[21:07] <sorear> that would require considerable thinking. :)

[21:07] <sorear> making , thunk the RHS is not reasonable, but maybe something can be done at the level of constant @foo = ...

[21:08] <TimToady> it's just a lazy list; we have to persuade @foo to return an appropriately lazy iterator

[21:09] <[Coke]> TimToady: what do you expect that to print?

[21:09] <TimToady> 1

[21:09] <TimToady> it's the boiled down version of the hamming recursion

[21:09] <[Coke]> what is @foo at that point? 1,1 ?

[21:09] <[Coke]> or 1,1,1... ? or?

[21:10] <TimToady> constant @hamming = 1, dedup (@hamming X* 2) M (@hamming X* 3) M (@hamming X* 5);

[21:11] <TimToady> it's a fancy way of saying 1 xx * via recursive definition

[21:11] <TimToady> Haskellers do this sort of thing all the time

[21:13] *** GlitchMr left
[21:13] <TimToady> and Python includes hamming in their tests of whether iterators are correctly defined, so this bears thinking about

[21:14] <PerlJam> ... and if *those* languages can do it, surely Perl 6 should be able to  ;)

[21:15] <TimToady> we should at least understand why we can't, if not, and how best to work around it

[21:16] <TimToady> if it actually requires strict laziness, for example, we might just define 'constant' that way

[21:16] <Teratogen> Haskell is pretty much an academic language, isn't it?

[21:16] <PerlJam> Teratogen: no

[21:16] <TimToady> among other things

[21:16] <Teratogen> I don't hear about avionics or web sites being written in Haskell, so...

[21:17] <Teratogen> *shrug*

[21:17] <PerlJam> Teratogen: GHC has made Haskell more than just "academic"

[21:17] <TimToady> and I think we already had the avionics discussion

[21:18] <Teratogen> The still use a multithreaded version of Algol called "Jovial" in avionics software.

[21:18] <Teratogen> That is an OLD language.

[21:18] <Teratogen> From, like, 1963.

[21:18] <PerlJam> before the dawn of time!

[21:18] <TimToady> as I said, we already had this precise discussion; let's not have it again

[21:18] <Teratogen> Ok =(

[21:18] *** snearch left
[21:18] <Teratogen> Sorry, I am bipolar and forgetful . =(

[21:19] <TimToady> more like OCD, but we'll let it pass :)

[21:19] * PerlJam makes a note to try that trick on Teratogen in the future   ;)

[21:19] <Teratogen> No!

[21:19] <Teratogen> I am already on four medications!

[21:19] <PerlJam> Teratogen: don't you remember?  We talked about this just the other day!

[21:20] <PerlJam> :-)

[21:20] <Teratogen> Stop it.

[21:20] <TimToady> PerlJam: don't torment the Teratogen 

[21:20] <TimToady> it's the best Teratogen we've got, so we'll have to be nice to it

[21:20] <PerlJam> point taken.

[21:22] <TimToady> anyway, rakudo can't seem to do it either, quite

[21:23] <TimToady> nom: my @foo; @foo.plan: 1, @foo; say @foo[1]

[21:23] <p6eval> nom a1180b: OUTPUT«Method 'plan' not found for invocant of class 'Array'␤␤»

[21:23] <TimToady> hmm, thought we had that, oh well

[21:24] <flussence> pugs: my @foo = 1,@foo; say @foo[1];

[21:24] <p6eval> pugs b927740: OUTPUT«␤»

[21:24] <masak> Teratogen: if you forget things from day to day, I understand much better why you've been asking us to "just get Perl 6 out the door" so often.

[21:24] * masak hugs Teratogen 

[21:24] <flussence> huh, usually pugs surprises with hard code like that

[21:24] <Teratogen> I have some short term memory problems, probably from the medications I am taking

[21:24] <TimToady> that's an eager assignment

[21:24] <Teratogen> My long term memory is ok

[21:24] <PerlJam> flussence: it did surprise you, just not the way you thought it would :)

[21:24] *** MayDaniel left
[21:25] <masak> Teratogen: where does short term memory end and long term memory start for you?

[21:25] <TimToady> pugs: my @foo := (1,@foo); say @foo[1]

[21:25] <flussence> pugs: constant @foo = 1,@foo; say @foo[1]; # I don't think it supports constants...

[21:25] <p6eval> pugs b927740: OUTPUT«␤»

[21:25] <p6eval> pugs b927740: OUTPUT«pugs: *** Undeclared variable: ("@foo",MkPad (padToList []),[PCompiling {pc_pad = MkMPad {mp_id = 140456300146673, mp_pad = <ref:0x7fbe87a55461>}}])␤    at /tmp/izJFdXmd50 line 1, column 19-23␤»

[21:25] <Teratogen> masak, hard to tell

[21:25] <PerlJam> Teratogen: I tend to have problems with medium-term memory myself

[21:25] <Teratogen> I've made modifications to my jeep, and now thinking about it I don't know how I made them.

[21:26] <TimToady> pugs: constant @foo = (1,@foo); say @foo[1]

[21:26] <p6eval> pugs b927740: OUTPUT«pugs: *** Undeclared variable: ("@foo",MkPad (padToList []),[PCompiling {pc_pad = MkMPad {mp_id = 140704615526385, mp_pad = <ref:0x7ff8586e7d99>}}])␤    at /tmp/pjf9djXthZ line 1, column 17-25␤»

[21:26] <Teratogen> Like "What the hell was I thinking when I did that?"

[21:26] <Teratogen> Same with computer programs.

[21:26] <PerlJam> (where "medium term" is in the 1 hour - 1 day range)

[21:26] <Teratogen> I look at some old stuff that I wrote and I can't figure out what the fuck I was doing.

[21:26] <flussence> that's normal

[21:26] <PerlJam> I can remember things for about an hour or 2, but then I forget them until a day or so later

[21:27] *** jeffreykegler joined
[21:30] <TimToady> niecza: constant @foo = gather { take 1; take @foo }; say @foo[1]

[21:30] <p6eval> niecza v14-34-g1b3d1e8: OUTPUT«(timeout)»

[21:30] <TimToady> kaboom!

[21:30] *** pernatiy joined
[21:31] *** bluescreen10 left
[21:32] <TimToady> niecza: my @foo := gather { take 1; take @foo }; say @foo[1]

[21:32] <p6eval> niecza v14-34-g1b3d1e8: OUTPUT«(timeout)»

[21:32] <TimToady> take seems to be eagerizing the return of @foo somehow

[21:33] *** colomon joined
[21:33] <TimToady> niecza: my @foo := gather { take 1; take $_ for @foo }; say @foo[1]

[21:33] <p6eval> niecza v14-34-g1b3d1e8: OUTPUT«1␤»

[21:33] <TimToady> \o/

[21:34] <TimToady> niecza: my @foo := gather { take 1; take $_ for @foo }; say @foo[582]

[21:34] *** ab5tract left
[21:34] <p6eval> niecza v14-34-g1b3d1e8: OUTPUT«Unhandled exception: Circular data dependency in list iteration, or last fetch threw exception␤  at /tmp/j494A5xugU line 1 (ANON @ 4) ␤  at <unknown> line 0 (KERNEL dogather @ 1) ␤  at /home/p6eval/niecza/lib/CORE.setting line 2308 (GatherIterator.reify @ …

[21:34] <TimToady> aww

[21:34] <masak> PerlJam: I used to meditate quite a bit, and I remember medium-term memory actually getting a boost from that. some days I got a little snapshot replay of things I'd forgotten during the day.

[21:35] *** jeffreykegler left
[21:35] <PerlJam> masak: define "meditate".  Did you have something to help you meditate?

[21:36] <Su-Shee> PerlJam: "a cushion"? ;)

[21:36] <masak> PerlJam: no.

[21:36] <TimToady> meditation is what happens when you stop doing everything else :)

[21:36] <PerlJam> TimToady: I call that "sleep"  :)

[21:36] <TimToady> you have to stop that too

[21:36] <masak> &

[21:37] <PerlJam> This guy http://www.ted.com/talks/shawn_achor_the_happy_secret_to_better_work.html talks about meditation as one of the things that leads to happiness.

[21:37] <TimToady> if I'm not careful, I spend all day meditating by default :)

[21:37] <TimToady> I think it just comes down to "Don't be so busy thinking that you can't think."

[21:38] <Su-Shee> PerlJam: if you prefer neuro-science - medidation is rather well researched by now.

[21:38] <PerlJam> I can't get my brain to stop talking to itself some times.

[21:38] <Su-Shee> PerlJam: it's basically a certain physical training of your brain to make it pulse in certain waves. 

[21:39] <Su-Shee> PerlJam: that would be the "training" part.. 

[21:39] <TimToady> nom: my @foo := gather { take 1; take $_ for @foo }; say @foo[582]

[21:39] <p6eval> nom a1180b: OUTPUT«splice() not implemented in class 'Mu'␤␤»

[21:39] <TimToady> whee!

[21:40] <Su-Shee> PerlJam: if you compare all kinds of meditation schools, you'll notice that they all teach several aspects of focus.. "focus on something" "blend out everything" etc. 

[21:42] <TimToady> that's for the ADHD folk; those of us on the autistic spectrum can already shut everything out because it's our only alternative to paying attention to everything

[21:43] <TimToady> however, I think I'll meditate on the insides of my eyelids for now

[21:43] <TimToady> zzz &

[21:47] *** bluescreen10 joined
[21:48] <dalek> rakudo/nom: 9070eeb | jnthn++ | src/core/Parcel.pm:

[21:48] <dalek> rakudo/nom: Don't strip elements of their containers when indexing into a Parcel. Fixes RT#105368.

[21:48] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9070eeb5d8

[21:48] <dalek> rakudo/nom: 2cfeacd | jnthn++ | src/ (2 files):

[21:48] <dalek> rakudo/nom: Thunk the LHS of the xx operator, as current spec requires.

[21:48] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2cfeacd87c

[21:49] <dalek> roast: 4f47254 | jnthn++ | S02-types/lists.t:

[21:49] <dalek> roast: Remove a couple of wrong tests, some corrections and some unfudges for Rakudo.

[21:49] <dalek> roast: review: https://github.com/perl6/roast/commit/4f47254bfb

[21:50] *** rir joined
[21:56] *** yertalert left
[21:57] *** pmurias joined
[21:57] <pmurias> hi

[21:57] <pmurias> anyone else having trouble with git pull'ing niecza from github?

[21:58] *** rir left
[22:10] *** tarch left
[22:13] <PerlJam> pmurias: nope. just did it fine

[22:16] <pmurias> works again

[22:16] <dalek> niecza: 3b576df | (Paweł Murias)++ | p5test/p5test.pl:

[22:16] <dalek> niecza: Fix typo in p5test.

[22:16] <dalek> niecza: review: https://github.com/sorear/niecza/commit/3b576dffc6

[22:19] *** alvis left
[22:19] <benabik> github is suffering from a DDoS.  There are sporadic interruptions in service.

[22:25] <jnthn> std: sub foo() { state $z++; $z }

[22:25] <p6eval> std 52f3895: OUTPUT«ok 00:01 110m␤»

[22:26] <pmurias> why would anyone DDoS github?

[22:28] <benabik> No idea, but that's what they say is happening: https://github.com/blog/1036-about-this-week-s-availability

[22:28] <flussence> one of the comments on their blog explained it nicely

[22:28] <flussence> "cvs fans"

[22:30] <flussence> .oO( but a true cvs fan would use a non-distributed DoS, and they'd have to log in first... )

[22:30] <jnthn> CVS has...fans? :)

[22:31] <timotimo> http://www.quickmeme.com/meme/3619or/

[22:34] *** bkolera joined
[22:41] *** benabik left
[22:42] *** benabik joined
[22:52] <dalek> roast: 5df18e5 | jnthn++ | S12-attributes/instance.t:

[22:52] <dalek> roast: Fudge updates for S12-attributes/instance.t.

[22:52] <dalek> roast: review: https://github.com/perl6/roast/commit/5df18e55cf

[22:52] <dalek> rakudo/nom: f05a588 | jnthn++ | src/Perl6/ (2 files):

[22:52] <dalek> rakudo/nom: Fix handling of self scoping in attribute initializers.

[22:52] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f05a588212

[22:52] <dalek> rakudo/nom: 6f3d34b | jnthn++ | t/spectest.data:

[22:52] <dalek> rakudo/nom: Turn on S12-attributes/defaults.t.

[22:52] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6f3d34b280

[22:52] <dalek> rakudo/nom: 9f9b446 | jnthn++ | src/Perl6/Grammar.pm:

[22:52] <dalek> rakudo/nom: Enable use of :state/:constant/:our declarations in regexes.

[22:52] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9f9b446133

[22:53] *** kaare_ left
[23:17] *** bkolera left
[23:23] <sorear> benabik: I wonder if this is related to the freenode DoS

[23:34] *** bkolera joined
[23:35] *** tarch joined
[23:36] *** Trashlord left
[23:36] <jnthn> rest &

[23:40] *** whiteknight joined
[23:43] *** dorlamm joined
[23:44] *** pmurias left
[23:47] <dalek> rakudo/nom: a39d86a | jnthn++ | docs/ChangeLog:

[23:47] <dalek> rakudo/nom: More ChangeLog updates.

[23:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a39d86a6c7

[23:50] *** wolfman2000 joined
[23:59] <masak> 'night, #perl6

