[00:01] *** kid51_ joined
[00:04] *** kid51 left
[00:05] *** yarp left
[00:06] *** benabik joined
[00:07] *** kid51_ left
[00:18] *** benabik left
[00:18] *** benabik joined
[00:20] *** whiteknight left
[00:22] <jnthn> Good morning, #perl6

[00:22] <phenny> jnthn: 23 Sep 17:26Z <[Coke]> ask jnthn how one is supposed to invoke a named sub from QAST. QAST::Op.new( :op<call>, :name<invoke> ); complains that it cannot find a sub called "invoke" (There's one at program top level, and one in the actions class, since I don't know where it's looking)

[00:23] <jnthn> phenny: ask [Coke] are you installing the sub anywhere? Like, to install it so it can be found lexically, then do a QAST::Op bind. Subs require explicit installation these days.

[00:23] <phenny> jnthn: I'll pass that on when [Coke] is around.

[00:29] *** HarryS joined
[00:30] <jnthn> phenny: ask [Coke] what kind of docs would be most useful with regard to QAST etc? I plan to do some more work in that area.

[00:30] <phenny> jnthn: I'll pass that on when [Coke] is around.

[00:31] *** Tanktalus left
[00:40] <diakopte1> jnthn!

[00:40] *** diakopte1 is now known as diakopter

[00:40] <sorear> JNTHN!

[00:41] *** benabik left
[00:42] <sorear> jnthn: how do you handle compile time installation?  p6 sub foo { }; BEGIN foo

[00:42] <[Coke]> jnthn: a sample mini language would probably be helpful. docs on ::Op would be helpful. "here are the ops you can use and the parameters they take"

[00:42] <phenny> [Coke]: 00:23Z <jnthn> ask [Coke] are you installing the sub anywhere? Like, to install it so it can be found lexically, then do a QAST::Op bind. Subs require explicit installation these days.

[00:42] <phenny> [Coke]: 00:30Z <jnthn> ask [Coke] what kind of docs would be most useful with regard to QAST etc? I plan to do some more work in that area.

[00:42] <[Coke]> jnthn: how does one install a sub??

[00:42] <[Coke]> jnthn: also, welcome back.

[00:43] <sorear> it sounds to me like jnthn is saying to generate code as if 'my &foo := anon sub foo { ... }'

[00:43] *** Tanktalus joined
[00:48] <jnthn> sorear: iirc, it goes into the static lexpad (which is one of those objects in the SC, so it's visible between compile time and runtime)

[00:49] <jnthn> [Coke]: QAST::Op.new( :op('bind'), QAST::Var.new( :name('foo'), :scope('lexical'), :decl('var') ), $the_qast_blcok ) # is now NQP does it

[00:49] <jnthn> *how

[00:49] <jnthn> [Coke]: Example language...OK, makes sense. :) And yes, the ops need more docs too

[00:51] *** benabik joined
[00:51] <[Coke]> ...b ut I don't want a lexical that's visible to the rest of the code.

[00:53] <jnthn> [Coke]: What is the scope of subs in the language you're implementing?

[00:53] <[Coke]> this isn't a sub that's visible to the language.

[00:54] <[Coke]> it's a special dispatcher sub.

[00:54] <jnthn> Oh, it's part of the standard library?

[00:54] <[Coke]> no.

[00:54] <[Coke]> it's just a helper sub.

[00:54] <jnthn> Or some internals-y thing?

[00:54] <[Coke]> yes.

[00:54] <[Coke]> which, I suppose, I could write as QAST all the way down, but that's a PITA compared to writing nqp.

[00:55] <jnthn> Oh, you worte it in NQP?

[00:55] <jnthn> OK, then I misunderstood the question :)

[00:55] <[Coke]> back when this all worked in nqp-rx, yes.

[00:55] <jnthn> OK, moment...breakfast here :)

[00:55] <[Coke]> I have an nqp sub. I wish to invoke this sub from the compiled QAST code.

[00:57] <sorear> But you do NOT want the sub to be visible in any lexical scope. ?

[00:57] <sorear> This must be doable, Rakudo's constant folder is doing something sort of similar

[00:58] <diakopter> mmm breakfast

[00:59] <[Coke]> yah. it's not mandatory for the first pass, but this isn't a sub users need to see (though I could stick it into an "internal" namespace)

[00:59] <sorear> How were you doing this with NQP-rx/PAST?

[01:00] *** Tanktalus left
[01:00] <[Coke]> oh. it would be super awesome keen if you could write code in nqp and have something "decompile" it to QAST. ;)

[01:00] <[Coke]> sorear: github.com/partcl/partcl-nqp, master branch

[01:00] <sorear> what file / method name?

[01:00] <[Coke]> the sub invocation is here:

[01:01] <[Coke]> https://github.com/partcl/partcl-nqp/blob/master/src/Partcl/Actions.pm#L73

[01:01] <[Coke]> that sub is putting together an invocation of "invoke" and putting it into the ast.

[01:02] <sorear> where is the definition of sub invoke?

[01:02] <[Coke]> https://github.com/partcl/partcl-nqp/blob/master/src/init.pm#L82

[01:03] <sorear> I am not sure that is doing what you think it is doing

[01:03] * sorear will wait for jnthn

[01:03] <[Coke]> I am sure that partcl-nqp passes 99% of its tests.

[01:03] <[Coke]> but aside from that, no, quite possible it's not doing it in the way I think it is.

[01:07] <[Coke]> on master, if I put a pir::say() in invoke, it's definitely going through that pointy block.

[01:07] *** hypolin joined
[01:07] <[Coke]> (on each invocation of some partcl command)

[01:10] *** anuby joined
[01:11] *** Tanktalus joined
[01:17] *** benabik left
[01:20] *** Pleiades` left
[01:24] *** benabik joined
[01:28] *** Pleiades` joined
[01:33] <sorear> o/ anuby, au

[01:37] * [Coke] hopes he can finish up $DAYJOB soon today. sheesh

[01:47] *** japhb__ left
[01:50] *** smartviking joined
[02:00] *** Circlepuller joined
[02:03] *** Circlepuller_ left
[02:06] *** larks left
[02:08] *** larks joined
[02:09] *** cognominal left
[02:12] *** sivoais left
[02:12] *** sivoais joined
[02:20] *** fome joined
[02:21] <fome> my @a = 1, [2, 3], [[4, 5], 6]; hi perl6 ! how can I flatten @a to a 6 elems arrays?

[02:23] <jnthn> [Coke]: The compiler tools this days try much harder to keep the compiling environment and the running program distinct.

[02:23] <jnthn> [Coke]: So things won't "accidentally leak through and just work", which I expect is what you'd maybe relied on

[02:24] <jnthn> [Coke]: The way to make those things work these days is through the serialization context / world stuff

[02:24] <jnthn> You can refer to any (6model) object from your program just by wrapping it in a QAST::WVal

[02:24] *** tokuhiro_ left
[02:25] <jnthn> The easiest way for you is to move your sub into some Internals class, make it a method, and then emit a

[02:25] <jnthn> QAST::Op.new( :op('callmethod'), :name('foo'), QAST::WVal.new( :value(Internals) ) )

[02:26] <jnthn> Which will make a static reference to that Internals class in the generated coe.

[02:26] <jnthn> *code

[02:28] <smartviking> I'm very new to perl in general and I have a question, how do I use variables inside forwads slashes ("//")? I've ended up with this line: my @htmlresult = qx/markdown file.md/; to get the result from the markdown program on the file.md file, but I'd rather have the filename be a string variable instead of hardcoding it.

[02:28] <sorear> smartviking: qqx

[02:29] <sorear> two qs is like two quotes, get it?

[02:29] <sorear> '$foo' versus "foo"

[02:29] <smartviking> sorear: so its: my @htmlresult = qqx/markdown $file/;  ?

[02:29] <sorear> n: my @a = 1, [2, 3], [[4,¬†5], 6]; sub f($x) { $x ~~ Iterable ?? $x.list.map(&f) !! $x }; for f(@a) { say $_ } # fome

[02:29] <p6eval> niecza v21-32-g3b04575: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Expecting a term, but found either infix ?? or redundant prefix ?‚ê§  (to suppress this message, please use space between ? ?) at /tmp/mpdFJ7g4kG line 1:‚ê§------> [32m4,¬†5], 6]; sub f($x) { $x ~~ Iterable ??[33m‚èè[31m $x.list‚Ä¶

[02:30] <sorear> n: my @a = 1, [2, 3], [[4,¬†5], 6]; sub f($x) { $x ~~ Positional ?? $x.list.map(&f) !! $x }; for f(@a) { say $_ } # fome

[02:30] <p6eval> niecza v21-32-g3b04575: OUTPUT¬´1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§¬ª

[02:30] <sorear> smartviking: yes

[02:30] <smartviking> sorear: thank you

[02:30] <fome> sorear: thanks! 

[02:30] <sorear> smartviking: note that this is a bit different from perl 5

[02:31] <sorear> in perl 5, qx always interpolates (this is the technical term) variables, unless the chosen delimiter is '

[02:31] <sorear> in perl 6, your choice of delimiter has no effect, but you can choose either qx or qqx

[02:32] <smartviking> sorear: Tbh I don't understand what qx and qqx are, just that they are followed by forward slashes

[02:32] <sorear> smartviking: quote and execute

[02:32] <sorear> runs an external program

[02:32] <sorear> it does not have to be forward slashes

[02:33] <sorear> qx[ foo ], qx(fooo), qx"foo", qx¬´foo¬ª, work

[02:33] <smartviking> sorear: Aha. Are they functions?

[02:33] <MikeFair_> smartviking: in other words my @htmlresult = qqx[markdown $file]; will do the same thing

[02:33] <sorear> they desugar to functions, but it's different from the normal fnction syntax

[02:34] <sorear> I think you can say my @htmlresult = rungather("markdown $file") and it has the same effect

[02:34] <sorear> n: say &rungather

[02:34] <p6eval> niecza v21-32-g3b04575: OUTPUT¬´sub rungather(Any $command_line) { ... }‚ê§¬ª

[02:34] <sorear> r: say &rungather

[02:34] <p6eval> rakudo 16f22b: OUTPUT¬´Nil‚ê§¬ª

[02:34] <sorear> r: say &moo

[02:34] <p6eval> rakudo 16f22b: OUTPUT¬´Nil‚ê§¬ª

[02:35] <sorear> hey cool I found a rakudobug I think

[02:35] <sorear> jnthn: is this known?

[02:35] <smartviking> Thanks I'll understand it eventually, I'm just now writing my first perl program so that why I use code I don't understand :)

[02:35] <sorear> smartviking: I get the impresion you're not new to programming though

[02:36] <sorear> well, welcome to #perl6, smartviking.  I hope you come often :D

[02:36] <smartviking> sorear: Yeah I'm a hobbyist, have been doing python for a couple of years :)

[02:36] <smartviking> sorear: Thanks :)

[02:37] * sorear runs a geoip on smartviking

[02:37] <[Coke]> jnthn: how do I pass arguments to a callmethod Op?

[02:38] <jnthn> [Coke]: Just put them as extra children of the node

[02:38] <jnthn> That's unchanged from PAST :)

[02:39] <jnthn> sorear: Is what known exactly?

[02:39] <jnthn> sorear: Is there...soemthing claled rungather? :)

[02:39] <[Coke]> jnthn: does old :node($/) in an Past Op translate to anything in qast?

[02:39] <jnthn> [Coke]: Unchanged.

[02:39] <jnthn> *called

[02:40] <sorear> jnthn: rakduo does not catch "say &nonexistant" at compile time

[02:41] <jnthn> sorear: We've never done so in Rakudo, afaik.

[02:41] <sorear> jnthn: I'm willing to accept that I implemented the wrong name in niecza and there's no such thing as rungather in the specs, but Rakudo's error is... LTA.

[02:41] <jnthn> sorear: And explicitly don't do so.

[02:41] <jnthn> sorear: Does the spec say somewhere that this one should be a compile time error?

[02:41] <sorear> std: say &moo

[02:41] <p6eval> std 77327a4: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Undeclared routine:‚ê§ 'moo' used at line 1‚ê§Check failed‚ê§FAILED 00:00 44m‚ê§¬ª

[02:42] <jnthn> We've never had it that way for a long time, anyway.

[02:42] <sorear> r: if 0 { moo; } # there was a time when Rakudo didn't even catc this

[02:42] <jnthn> I can make it so, but had been under the impression it wasn't meant to be.

[02:42] <p6eval> rakudo 16f22b: OUTPUT¬´===SORRY!===‚ê§CHECK FAILED:‚ê§Undefined routine '&moo' called (line 1)‚ê§¬ª

[02:43] <jnthn> Right, I agree it should catch that at compile time.

[02:44] <jnthn> n: &foo; sub foo() { }

[02:44] <p6eval> niecza v21-32-g3b04575:  ( no output )

[02:44] <jnthn> Hm, so it isn't treated just like any sigil'd variable.

[02:46] <sorear> for the purposes of compile time checking, &foo; and foo; are considered the same

[02:46] <sorear> (the code which handles this is rather dubious and should not be copied exactly)

[02:49] <jnthn> Well, what we compile them to in terms of nodes is rathre different so the analysis will certainly look different.

[02:49] <jnthn> *rather

[02:51] <[Coke]> jnthn: if I add your line, I get Null PMC access in find_method('new')

[02:52] *** orafu left
[02:52] *** orafu joined
[02:52] <jnthn> [Coke]: huh

[02:52] <jnthn> Maybe one of us typo'd something

[02:52] *** DrEeevil is now known as bonsaikitten

[02:53] <jnthn> nqp: use QAST; class Internals { }; QAST::Op.new( :op('callmethod'), :name('foo'), QAST::WVal.new( :value(Internals) ) )

[02:53] <p6eval> nqp:  ( no output )

[02:53] <jnthn> nqp: use QAST; class Internals { }; QAST::Op.new( :op('callmethod'), :name('foo'), QAST::WVal.new( :value(Internals) ) ); say 'ok'

[02:53] <p6eval> nqp: OUTPUT¬´Confused at line 2, near "say 'ok'"‚ê§current instr.: 'panic' pc 19999 (src/stage2/gen/NQPHLL.pir:7315) (src/stage2/gen/NQPHLL.pm:324)‚ê§¬ª

[02:53] <jnthn> nqp: use QAST; class Internals { }; QAST::Op.new( :op('callmethod'), :name('foo'), QAST::WVal.new( :value(Internals) ) ); say('ok')

[02:53] <p6eval> nqp: OUTPUT¬´ok‚ê§¬ª

[02:56] *** snearch_ joined
[02:57] *** fome left
[02:57] <sorear> jnthn: slightly amusing thing: we had a user here earlier who thought QAST::IVal was QAST::lVal and kept calling them l-values

[02:57] *** Chillance left
[03:00] *** snearch left
[03:04] *** Targen left
[03:05] <jnthn> sorear: Font fail.

[03:05] <jnthn> They look rather different here :)

[03:06] <jnthn> But yes, that will be very confusing.

[03:11] *** [particle]1 left
[03:13] *** gootle joined
[03:14] <[Coke]> I have src/Partcl/Actions.pm and am trying to use src/TclInternals... Trying to figure out the correct use statement.

[03:21] <jnthn> I think it does little more than separate by colons and look for the appropriate .pir or .pbc file

[03:24] <[Coke]> nqp: use some::thing::or::other;

[03:24] <p6eval> nqp: OUTPUT¬´"load_bytecode" couldn't find file 'some/thing/or/other.pbc'‚ê§current instr.: '' pc 1834 (src/stage2/gen/module_loader.pir:788) (src/ModuleLoader.pm:59)‚ê§¬ª

[03:24] <[Coke]> I'm getting "confused at line 1..."

[03:26] *** cibs left
[03:26] *** cibs joined
[03:28] <[Coke]> ARGLEBARGLE wrong branch.

[03:30] *** [particle] joined
[03:35] <[Coke]> now back to "Error while compiling block : Error while compiling op call: Can only use get_how on a SixModelObject

[03:37] <[Coke]> (pushed WIP to nqp2 branch)

[03:37] *** Khisanth left
[03:42] <jnthn> [Coke]: Maybe a leftover PAST:: node somewhere?

[03:46] <[Coke]> not in any of the code I'm generating. (some left elsewhere int eh code base)

[03:46] <[Coke]> ...urk. missing a change.

[03:46] <[Coke]> I clearly need more caffiene.

[03:49] <[Coke]> ... but that change no effect.

[03:49] <jnthn> Do you have any literal strings or intergers in the tree?

[03:52] <[Coke]> That is possible.

[03:53] *** Khisanth joined
[03:54] <[Coke]> if I change the call to use some hardcoded SVals, I get a different error about invoke() not implemented in class 'NQPMu'

[03:54] <[Coke]> which makes me think it didn't find the Internals class.

[04:02] <jnthn> hm, I'd expect a different error in that case

[04:05] *** Tanktalus left
[04:08] <[Coke]> I can't tell if it means my invoke or if invoke is a sixmodel method.

[04:10] <[Coke]> if I rename my method to "barf", I still get an error about invoke()

[04:10] <MikeFair_> [Coke]: Every time I've encountered invoke and NQPMu in the same error sentence it's meant that I've passed a null node 

[04:13] <jnthn> Hm

[04:13] <MikeFair_> [Coke]: Or more specifically, a node that wasn't there was asked for

[04:13] <jnthn> Maybe a missing :op('call')

[04:13] <jnthn> lunch &

[04:14] <[Coke]> jnthn: I'm using the callmethod you suggested.

[04:15] <[Coke]> and then passing in 2 hardcoded SVals.

[04:19] *** Tanktalus joined
[04:19] *** am0c joined
[04:21] * MikeFair_ notices the lVal versus IVal  "And yes folks that poor confused soul would be me.  Quite embarassing actually.  I'm just glad that at least jnthn recognized it as a font fail. :)"

[04:25] * [Coke] goes to sleep

[04:32] *** am0c left
[04:34] *** telex left
[04:39] *** am0c joined
[04:39] *** Tanktalus left
[04:41] *** telex joined
[04:48] *** larks left
[04:50] *** snearch_ left
[04:50] *** larks joined
[04:50] *** snearch joined
[04:53] *** Tanktalus joined
[04:57] *** kaleem joined
[05:19] *** Circlepuller_ joined
[05:20] *** Circlepuller left
[05:21] *** larks left
[05:23] *** larks joined
[05:36] <moritz> \o morning

[05:37] <TimToady> o/

[05:37] <TimToady> we are sitting in LAX at the moment

[05:41] *** [particle] left
[05:42] *** [particle] joined
[05:42] <sorear> I've been there

[05:43] <sorear> so close and yet so far

[05:43] <sorear> o/ moritz

[05:49] *** skids left
[05:51] *** birdwindupbird joined
[06:02] *** Circlepuller joined
[06:04] *** Circlepuller_ left
[06:05] * jnthn back from lunch

[06:14] *** awwaiid left
[06:14] *** awwaiid joined
[06:18] *** wtw joined
[06:24] *** flightrecorder joined
[06:24] *** FROGGS joined
[06:26] *** am0c left
[06:35] *** [particle] left
[06:44] <moritz> jnthn: your time zone is totally non-CEST :-)

[06:48] <jnthn> :P

[06:48] <jnthn> .oO( no, don't make a joke about being totally in CEST... )

[06:49] <jnthn> whee, NativeCall has a lot of warnings...

[06:51] <dalek> niecza: f46ea4d | sorear++ | FETCH_URL:

[06:51] <dalek> niecza: Update bootstrap to v22

[06:51] <dalek> niecza: review: https://github.com/sorear/niecza/commit/f46ea4dc2d

[06:52] <sorear> release sent.

[06:52] <dalek> zavolaj: 32bbd4f | jonathan++ | lib/NativeCall.pm6:

[06:52] <dalek> zavolaj: Update for sigilless variable spec changes, eliminating warnings.

[06:52] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/32bbd4f469

[06:53] <sorear> phenny: tell bonsaikitten Just for you, I made sure the v22 tag would build with itself, rather than requiring v21 :D

[06:53] <phenny> sorear: I'll pass that on when bonsaikitten is around.

[06:53] *** eiro__ is now known as eiro

[06:56] <dalek> zavolaj: 95df414 | jonathan++ | t/07-writebarrier.c:

[06:56] <dalek> zavolaj: Fix 07-writebarrier.t for Win32.

[06:56] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/95df414c10

[06:58] <dalek> zavolaj: 8583324 | jonathan++ | examples/win32-api-call.p6:

[06:58] <dalek> zavolaj: Fix Win32 NCI example to work portably.

[06:58] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/858332461f

[07:00] *** baest_ is now known as baest

[07:02] <dalek> zavolaj: b538ecb | jonathan++ | examples/win32-api-call.p6:

[07:02] <dalek> zavolaj: Don't explicitly add the .dll.

[07:02] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/b538ecb47d

[07:08] *** brrt joined
[07:09] *** stepnem joined
[07:11] *** Tanktalus left
[07:16] *** atrodo left
[07:22] *** am0c joined
[07:23] *** smartviking left
[07:25] *** Tanktalus joined
[07:27] *** daxim joined
[07:30] *** wk joined
[07:33] *** Psyche^ joined
[07:37] *** am0c left
[07:37] *** Patterner left
[07:37] *** Psyche^ is now known as Patterner

[07:39] *** fhelmberger joined
[07:43] *** kurahaupo left
[07:48] *** kresike joined
[07:48] <kresike> good morning all you happy perl6 people

[07:49] <jnthn> o/ kresike 

[07:49] <sorear> o/

[07:49] <kresike> jnthn, sorear o/

[07:53] <Ulti> https://github.com/cjfields/bioperl6   yay!

[07:55] <Ulti> lame they already made a FASTA Grammar :/ maybe I should give them mine which handles DNA and protein sequences at the same time and understands the difference

[07:56] <Ulti> I really think bioinformatics could easily be the killer app for perl6, I'm not sure you understand how much grammars will ease all coding efforts for bioinformaticians

[07:56] *** am0c joined
[07:56] <sorear> Ulti: hahahahaha

[07:57] <Ulti> on a daily basis I have to reformat data between several new bespoke file formats into something sane, leaving a grammar for these in a file is much more sensible than a tonne of uncommented perl 5.8 style regex

[07:57] <Ulti> sorear: why the manic laughter?

[07:57] <daxim> grammar-style parsers have been available for years in p5-land

[07:57] <sorear> Ulti: the thought of running a perl 6 grammar over 3 bln base pairs

[07:58] <Ulti> daxim: yeah but not in core 

[07:58] <Ulti> trust me installing packages in a university is not trivial

[07:58] <Ulti> I use perlbrew for everything :(

[07:58] <Ulti> and rsync it around

[07:58] <sorear> 3 million is pushing current possibility :(

[07:59] <jnthn> sorear: Just 'cus it ain't so fast now doesn't mean it never will be.

[07:59] <Ulti> sorear: well people use the current perl5 regex engine in an ensemble similar to a grammar

[07:59] *** flightrecorder left
[07:59] <Ulti> plus people have compute power

[07:59] *** FROGGS left
[07:59] <Ulti> they have much less time to get formats right

[07:59] <daxim> but e.g. the bioperl dist already has a 1001 dependencies

[08:00] <Ulti> yeah which is why I do everything myself with perl5 regex ;)

[08:00] <Ulti> I also use mojolicious rather than catalyst because (lol Moose)

[08:02] <sorear> you dislike moose but you're ok with p6?

[08:02] <Ulti> no I like Moose, I dont like how much effort it is to install

[08:02] <Ulti> I love Moose

[08:02] <Ulti> but perl6 is Moose without the epic deps

[08:03] *** flightrecorder joined
[08:03] <daxim> I just flipped the bozo bit on you, care to hear why?

[08:03] *** FROGGS joined
[08:03] <Ulti> im just saying in the near term future perl6 does fulfill a big role in the niche I live in

[08:04] <sorear> Ulti: I'm confused, how does more dependencies translate into more effort?

[08:04] <Ulti> because I can't actually install any of them without great effort

[08:04] <Ulti> at home its fine, at work its a nightmare

[08:05] *** mucker joined
[08:06] <Ulti> if Moose was core and my department actually used a distribution of Linux that wasnt a decade old I guess I would have no reason to complain

[08:06] <kresike> Ulti, I think you should refocus your efforts of working around security/policy problems at work into asking the people to help you do your work by installing what you need or allowing you to do it.

[08:07] <kresike> I mean the people responsible for policy/security.

[08:08] <Ulti> yeah I tried that at first, but they demanded that I tell them each package at a time to install, I couldn't just blanket install all of perl

[08:09] <sorear> Ulti: what prevents you from just doing cpanm -S Moose after perlbrew and going on a lunch break?

[08:09] <Ulti> my point was more a perl that comes with nice syntax for writing parsers and no need for external dependencies for OO is a good thing.. whether that should be perl5 or perl6 isn't something I'm massively into arguing about

[08:10] <sorear> well

[08:10] <sorear> scratch the -S

[08:10] <Ulti> sorear: nothing, thats what I do do, then I do it again for the endless different types of machine I work on, and my bashrc gets bigger and bigger working out which perl environment to use

[08:10] <Ulti> and I have to synch up the perlbrew installations

[08:11] <daxim> [09:58] <Ulti> I use perlbrew for everything :(

[08:11] <daxim> [09:58] <Ulti> and rsync it around

[08:11] <daxim> here's the thing, wrong tool for the problem

[08:11] <daxim> learn packaging, you can get up and running with rpm in half an hour

[08:13] <moritz> daxim: it doesn't work out like that in practise

[08:14] <moritz> if you use the system perl, sooner or later you run into problems when modules depend on newwer versions of your core modules

[08:14] <moritz> and then you're pretty much screwed

[08:15] <daxim> your knowledge is outdated, not a problem anymore sine 5.12: http://perldoc.perl.org/perl5120delta.html#%40INC-reorganization

[08:16] <moritz> and yet our production systems still run 5.10.*

[08:16] <jnthn> FROGGS: SDL6's META.info fails to list NativeCall as a dependency.

[08:19] <jnthn> FROGGS: Also, when I panda install SDL after doing that manually, I get "Cannot import symbol &trait_mod:<is> from Inline"

[08:19] *** wk_ joined
[08:20] *** wk left
[08:20] <sorear> daxim: What part of "Ulti> if ... my department actually used a distribution of Linux that wasnt a decade old" makes you think 5.12 is an option?

[08:23] <daxim> you and moritz are fixated on the system perl, although I never mentioned that - I just said packaging.  it's perfectly possible to package to e.g. /opt/modernperl and base everything on top of that

[08:23] <FROGGS> jnthn: the thin about trait_mod:<is> seems to be an open issue or rakudo, there is a TODO in World.pm around line 260

[08:24] <jnthn> FROGGS: Ah, OK. I can probably look at that.

[08:24] <jnthn> FROGGS: Please can I haz a commit bit for File::Spec so I can do a Win32 fix?

[08:24] <FROGGS> I'm trying to make these symbol merges right, but had no luck so far, still trying to understand the rakudo code

[08:24] <FROGGS> jnthn: of course

[08:25] <daxim> brew + rsync + rubberbands is a poor substitute for the existing toolchain

[08:25] <moritz> daxim: well, using the system perl is the obvious first choice. If that's not what you meant, it would have helped to be more forthcoming with your information

[08:25] <moritz> daxim: we can't read your mind over IRC

[08:25] <FROGGS> jnthn: you have commit bit

[08:27] <kresike> daxim, packaging up a modern perl over ancient system libraries can be hard too, especially if one has many distros or architectures to handle

[08:28] <jnthn> FROGGS: Thanks, pushed a fix :)

[08:29] <daxim> otoh, don't underestimate how much research by full-time sysops has been funneled into easing/solving those problems already, most of the time it just takes a bit of research to find the existing code/extension to paper over the differences instead of needing to writing from scratch

[08:32] <jnthn> FROGGS: Hm, well, I fixed the tempdir bit. Now trying to install Inline::C complains about catfile...

[08:32] *** dakkar joined
[08:36] <FROGGS> jnthn: I can fix that stuff on windows this evening too

[08:37] <FROGGS> or maybe even in an hour, I'm currently in a meeting

[08:37] <jnthn> FROGGS: It's OK, I already pushed something that should fix it up :)

[08:39] <jnthn> Oh, but I think it may get some slashes wrong or something

[08:40] <jnthn> Or maybe the issue is in inline itself. The C compiler complains. 

[08:44] <FROGGS> wrong slashes? windows should be able to handle /

[08:45] <FROGGS> maybe its about spaces in path?

[08:49] <jnthn> maybe, but the tmp path it gets contains no spaces

[08:50] <jnthn> Windows doesn't *always* handle / well :)

[08:50] *** ServerSage left
[08:50] <jnthn> (but cl tends to, so yeah, not sure it's a slash issue)

[08:53] <sorear> what if cl thinks it's a command option?

[08:53] <dalek> niecza: 3c5f8e1 | sorear++ | lib/ (3 files):

[08:53] <dalek> niecza: Top removal: regex engine

[08:53] <dalek> niecza: review: https://github.com/sorear/niecza/commit/3c5f8e19e2

[08:53] <dalek> niecza: 5ac00cc | sorear++ | lib/ (3 files):

[08:53] <dalek> niecza: Top removal: StashCursor

[08:53] <dalek> niecza: review: https://github.com/sorear/niecza/commit/5ac00cc014

[08:53] <dalek> niecza: 9840f57 | sorear++ | lib/Kernel.cs:

[08:53] <dalek> niecza: Top removal: Kernel, some easy cases

[08:53] <dalek> niecza: review: https://github.com/sorear/niecza/commit/9840f574db

[08:53] <sorear> sleep&

[08:57] <Ulti> dalek: here's the thing, I already know about packaging and I use deb, but this isnt a system I have root on, its not even a system where I have enough disk space to run my own package of every thing I need

[08:57] <Ulti> sorry daxim

[08:57] <Ulti> too many people here for quick tab complete :)

[08:58] *** Tanktalus left
[08:59] *** Kunal joined
[08:59] <Ulti> perl 5.8 is the perl experience for a lot of people still as much as I hate that myself, on servers I do have some control on I pushed up to 5.10.1 and that took heroic efforts on my part, my job is not to sysadmin half of a university

[09:01] <Ulti> perlbrew also introduces unique problems when you want your perl running in CGI through apache that you dont control

[09:01] *** Vlavv` left
[09:01] *** REPLeffect left
[09:01] *** cibs left
[09:01] <Ulti> core perl6 just has features that I'd use which I'd love to see in perl5 as default vanilla system perl

[09:01] *** cibs joined
[09:01] *** Vlavv` joined
[09:03] *** Kunal left
[09:04] <arnsholt> Ulti: I feel you. I had more or less the same experience up until relatively recently

[09:04] <arnsholt> It sucks

[09:04] *** kunal joined
[09:04] <kunal> when will Perl6 be released?

[09:04] <tadzik> it's released every month

[09:05] <Ulti> well last months Rakudo is on my laptop runs pretty smoothly

[09:05] *** lestrrat left
[09:05] *** Ulti left
[09:05] *** lestrrat joined
[09:05] *** Ulti joined
[09:05] <jnthn> arnsholt: hi! :)

[09:06] <jnthn> arnsholt: I patched a couple of NativeCall bits earlier. Seems the struct test fails on Win32 with segfault...didn't get to look at it yet.

[09:06] <Ulti> arnsholt yeah I feel like I live in the 1980s TRON style, with the master control telling me what I can and cant run

[09:06] <kunal> then why is perl5 actively supported it should have died as perl 4 and perl6 used instead

[09:07] <arnsholt> jnthn: Odd. Hopefully noy anything I did =)

[09:07] <tadzik> no, it should have not

[09:07] <tadzik> that was not the idea

[09:07] <Ulti> because perl6 is a different language kunal its not really replacing perl5, which is under active development as part of the Modern Perl movement

[09:07] <kunal> so what was the idea behind perl 6

[09:07] *** flightrecorder left
[09:07] <kunal> okay how is it different from perl 5

[09:07] <Ulti> take on board all the flights of fancy people have which would utterly break perl5 syntax

[09:07] <arnsholt> Also, Perl 4 coexisted with Perl 5 for many years

[09:08] <kunal> okay how many years

[09:08] <kunal> 5 years do you expect same timeframe for perl 5

[09:08] <arnsholt> Dunno, but quite a while from memory

[09:08] <Ulti> kunal it has a nicer object model like Moose in perl5 and some more regex features which are also backported to perl5

[09:08] *** FROGGS left
[09:08] <Ulti> I doubt perl5 will ever die

[09:09] <kunal> great i am actually happy to hear that

[09:09] <Ulti> there is just too much of it about, especially as sysadmin type scripts, it basically replaced crufty shell scripts for a lot of work

[09:10] <Ulti> perl5 one liners in the shell is a major reason I haven't put a lot of effort into python

[09:11] <Ulti> though I imagine there is some work around for getting one liner regex in python, I can probably package python for every machine I work on to acheive it and then move all my code to python

[09:11] <kunal> why do you want to move to python and leave perl?

[09:12] *** Tanktalus joined
[09:13] <Ulti> sorry it was a snarky dig at daxim's solution to using modern perl

[09:13] <Ulti> bbl

[09:18] *** jerome joined
[09:18] *** kunal left
[09:20] *** FROGGS joined
[09:20] *** flightrecorder joined
[09:26] *** Tanktalus left
[09:32] *** mucker left
[09:39] *** Tanktalus joined
[09:48] *** dayangkun left
[09:55] *** Tanktalus left
[10:05] *** domidumont left
[10:09] *** Tanktalus joined
[10:12] <FROGGS> jnthn: still problems on windows? I could have a look right now too

[10:17] <jnthn> FROGGS: Inline::C doesn't work out with MSVC still

[10:18] *** cognominal joined
[10:18] *** Circlepuller_ joined
[10:18] *** anuby left
[10:19] *** cognominal_ joined
[10:20] *** Circlepuller left
[10:22] *** cognominal left
[10:24] *** fgomez left
[10:25] *** yarp joined
[10:30] <FROGGS> jnthn: k, I'll have a look

[10:30] *** hypolin left
[10:37] *** sudokode joined
[10:38] *** Woodi left
[10:39] *** Woodi joined
[10:41] *** snearch left
[10:51] *** ranguard_ left
[10:51] *** ranguard joined
[10:51] *** s1n1 left
[10:52] *** s1n joined
[10:55] *** Tanktalus left
[11:05] *** Su-Shee_ joined
[11:06] *** domidumont joined
[11:08] *** Tanktalus joined
[11:08] *** Su-Shee left
[11:08] *** Su-Shee_ is now known as Su-Shee

[11:16] *** cognominal_ left
[11:17] *** cognominal joined
[11:30] <colomon> sorear: ping?

[11:32] <colomon> phenny: tell sorear Niecza completely broken: Unhandled exception: System.MissingMethodException: Method not found: 'Cursor..ctor'.

[11:32] <phenny> colomon: I'll pass that on when sorear is around.

[11:36] *** gootle left
[11:38] *** mtk left
[11:38] *** mtk joined
[11:39] *** mtk left
[11:39] *** mtk joined
[11:43] *** cognominal left
[11:43] *** cognominal joined
[11:46] <FROGGS> damn it, panda installs File::Spec to C:\...\login.DOMAIN\.perl6\lib but perl6 is looking in C:\...\login\.perl6\lib

[11:49] *** colomon left
[11:52] <FROGGS> okay, myfault, my HOME wasnt equal to HOMEDRIVE ~ HOMEPATH

[11:57] <FROGGS> jnthn: so you've got a rakudo compiled with msvc? I have the star release which was comiled with gcc as it seems

[12:03] *** cognominal left
[12:05] *** cognominal joined
[12:09] <FROGGS> jnthn: can you zip it up? or is there a msvc project file?

[12:10] *** cognominal_ joined
[12:11] *** cognominal left
[12:14] *** cognominal_ left
[12:16] *** cognominal joined
[12:20] *** mucker joined
[12:20] *** cognominal_ joined
[12:21] *** cognominal left
[12:23] *** tokuhiro_ joined
[12:32] *** cognominal_ left
[12:38] *** cognominal joined
[12:41] <felher> std: class C { multi method !a() { }; multi method !a(Mu $x) { }; }

[12:41] <p6eval> std 77327a4: OUTPUT¬´Potential difficulties:‚ê§  $x is declared but not used at /tmp/T28ykNgGWD line 1:‚ê§------> [32mlti method !a() { }; multi method !a(Mu [33m‚èè[31m$x) { }; }[0m‚ê§ok 00:00 44m‚ê§¬ª

[12:41] *** cognominal_ joined
[12:44] *** cognominal left
[12:46] *** atrodo joined
[12:48] *** cognominal_ left
[12:56] *** PacoAir joined
[12:57] *** Tanktalus left
[12:59] *** cognominal joined
[13:01] *** Circlepuller joined
[13:02] *** Circlepuller_ left
[13:03] *** Circlepuller_ joined
[13:04] *** perigrin left
[13:04] <[Coke]> FROGGS: there's an .msi for windows, is that not helpfuL?

[13:05] <FROGGS> but thats built with gcc, no?

[13:05] *** Circlepuller left
[13:06] *** Circlepuller__ joined
[13:08] *** Circlepuller_ left
[13:10] *** cognominal left
[13:10] *** perigrin joined
[13:11] *** Tanktalus joined
[13:15] <[Coke]> I don't know if the person who built it used the strawberry perl toolchain or the msvc toolchain, no.

[13:16] *** cognominal joined
[13:24] * [Coke] installs the new SourceCodePro font from adobe on OS X... doesn't look great on my normal IRC session. ew.

[13:25] *** bluescreen10 joined
[13:25] *** benabik left
[13:26] <[Coke]> oooh. turned on antialiasing, looks very nice.

[13:26] <[Coke]> 1lLi0oO ;)

[13:28] <[Coke]> also seems to handle unicode quite nicely.

[13:28] <[Coke]> http://boingboing.net/2012/09/24/adobe-releases-open-source-cod.html

[13:29] <tadzik> 1lLi0oO looks pretty good on Monospace :)

[13:29] <[Coke]> oh! - click on the link, it shows the example there.

[13:29] *** cognominal_ joined
[13:29] <tadzik> yeah, I've seen the font

[13:30] <tadzik> only now when you pasted 1lLi0oO on the channel I though "huh, this looks pretty dinstinguishable for me"

[13:30] <tadzik> http://i.imgur.com/mC2jO.png

[13:31] <cognominal_> I am using incosolata on ST2. Probably should use it on xchat

[13:31] *** cognominal left
[13:31] <Su-Shee> droid mono is also nice and unicode-able. 

[13:33] <tadzik> frankly, most fonts seem quite alike to me

[13:33] <tadzik> only those Ubuntu fonts look like some regular font ran over by a monster truck

[13:34] <Su-Shee> there's not that much variation in monospace fonts..

[13:34] <tadzik> yeah

[13:34] <tadzik> maybe it requires a specific taste you gain over time

[13:37] <felher> r: use parameters :D; sub a(Int $x) { }; a(Int);

[13:37] <p6eval> rakudo 16f22b: OUTPUT¬´===SORRY!===‚ê§Could not find parameters in any of: /home/p6eval/.perl6/lib, /home/p6eval/nom-inst/lib/parrot/4.8.0-devel/languages/perl6/lib‚ê§¬ª

[13:37] *** cognominal__ joined
[13:38] <felher> Hm, NYI i guess :)

[13:38] <FROGGS> [Coke]: since there is no ExtUtils::CppGuess yet for perl6 I use the CC vars from parrot to compile code, and for rakudo 2012-08 that means gcc

[13:39] <FROGGS> I wanted to have jnthn's msvc-build to test the errors he got

[13:40] *** kaare__ joined
[13:40] *** tokuhiro_ left
[13:40] *** cognominal_ left
[13:40] *** GlitchMr joined
[13:41] * [Coke] had that at one point on a windows box, but hasn't been keeping up

[13:43] *** cognominal__ left
[13:43] <[Coke]> ‚ìà ‚í™ rry.

[13:43] <[Coke]> . o O (I got lazy half way through that experiment.;)

[13:43] <FROGGS> ;o)

[13:46] <geekosaur> ...write a p6 script to do it :p

[13:48] <tadzik> ohhh, like the flag game

[13:49] *** cognominal joined
[13:51] <moritz> the first rule of the flag game is: you don't talk about the flag game

[13:52] *** kaare__ is now known as kaare_

[13:52] <tadzik> unless it's in flag words

[13:52] *** sctt joined
[13:52] <moritz> .oO( but sometimes I catch people in flag ranti )

[13:53] <felher> Implementing 'use parameters :D' in Rakudo is far from being a LHF, I guess?

[13:54] <GlitchMr> 1Il|ioO0oB8

[13:54] *** bbkr joined
[13:54] *** cognominal left
[13:54] <GlitchMr> I guess I've good font because I can recognize those characters

[13:54] *** cognominal joined
[13:54] <tadzik> moritz: :D

[13:55] <GlitchMr> (also, I accidentally typed "o" two times)

[13:55] <GlitchMr> Too bad that my default browser monospace font doesn't recognize O and 0 very well

[13:56] <GlitchMr> The worst monospace font I've seen had ( and { looking similarly

[13:58] *** stopbit joined
[13:59] *** wk_ left
[14:00] *** Chillance joined
[14:01] *** flightrecorder left
[14:02] *** FROGGS left
[14:03] *** skids joined
[14:03] *** flightrecorder joined
[14:08] *** bluescreen10 left
[14:15] *** FROGGS joined
[14:17] *** fgomez joined
[14:18] <GlitchMr> http://stackoverflow.com/a/215911/736054

[14:18] <GlitchMr> Best font... wait...

[14:19] <GlitchMr> I wouldn't want to program using this. I would even use Comic Sans MS instead of that what

[14:19] <Ulti> why not just use windings

[14:20] <GlitchMr> Actually... I think that Wingdings or Webdings would be worse than that

[14:20] <GlitchMr> I don't know

[14:21] <Ulti> I dunno some obvious bugs might be a lot more obvious in windings.... oh man I have a hammer and smilee in my code, no point compiling yet

[14:23] <GlitchMr> Programming in Webdings would be some sort of joke

[14:25] <Ulti> well yeah I wasn't serious ;P

[14:27] <GlitchMr> Ulti: http://dl.dropbox.com/u/63913412/webdings.png

[14:27] <GlitchMr> Now, find bugs in that

[14:30] <moritz> line 42 is wrong, obviously :-)

[14:30] <GlitchMr> Except... my code doesn't have line 42

[14:31] <moritz> that's why it's wrong

[14:31] <PerlJam> GlitchMr: 3rd line, 15th character

[14:31] <GlitchMr> PerlJam: that would be dot character

[14:31] <GlitchMr> Actually, do you mean "m" or "." character?

[14:31] <PerlJam> yeah, that's a syntax error :)

[14:32] <GlitchMr> Syntax error in what?

[14:32] <GlitchMr> That code was "Hello, world!" in Java

[14:33] <GlitchMr> (also, I guess that more difficult version of that would disable syntax highlighting)

[14:33] <GlitchMr> (perhaps I should've used COBOL as example, but whatever)

[14:34] *** FROGGS left
[14:34] *** flightrecorder left
[14:35] <GlitchMr> Actually...

[14:35] <GlitchMr> http://dl.dropbox.com/u/63913412/webdings2.png

[14:35] <GlitchMr> That is more interesting

[14:36] <GlitchMr> When you shout, Webdings is more annoying

[14:36] <GlitchMr> Actually, I've feeling it's a feature

[14:38] *** Circlepuller joined
[14:38] *** Circlepuller__ left
[14:40] *** Hugh_ joined
[14:42] *** Circlepuller_ joined
[14:42] *** Circlepuller left
[14:43] <Ulti> GlitchMr: you missed a ferry boat on line 3

[14:44] *** Circlepuller joined
[14:45] <dalek> Perlito: 025c8c5 | (Flavio S. Glock)++ | src5/lib/Perlito5/Javascript3/Emitter.pm:

[14:45] <dalek> Perlito: Perlito5 - js3: update TODO

[14:45] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/025c8c55a9

[14:46] *** Circlepuller_ left
[14:48] *** kaleem left
[14:48] *** benabik joined
[14:50] *** Circlepuller_ joined
[14:51] *** kcwu joined
[14:51] *** Circlepuller left
[14:51] <[Coke]> r: say "what"

[14:51] <p6eval> rakudo 16f22b: OUTPUT¬´what‚ê§¬ª

[14:53] <[Coke]> .u ‚ô® 

[14:53] <phenny> U+2668 HOT SPRINGS (‚ô®)

[14:54] <phenny> U+0020 SPACE ( )

[14:54] *** Circlepuller joined
[14:55] <kresike> bye folks

[14:55] *** kresike left
[14:55] *** Circlepuller_ left
[14:56] *** cognominal left
[14:57] <GlitchMr> .u ~:/ 0=|/~ >:i.100

[14:57] <phenny> GlitchMr: Sorry, your input is too long!

[14:58] *** yarp left
[15:03] *** kst left
[15:06] *** Hugh_ left
[15:14] *** thou joined
[15:21] *** fgomez left
[15:21] *** sctt left
[15:22] *** am0c left
[15:22] <pmichaud> good morning, #perl6

[15:22] <phenny> pmichaud: 22 Sep 23:38Z <raiph> tell pmichaud fyi: https://gist.github.com/3768134

[15:23] <felher> o/

[15:23] <pmichaud> just wanted to note that I expect to be able to do the star release tomorrow morning

[15:24] <felher> pmichaud++ :)

[15:24] <[Coke]> pmichaud++

[15:34] *** spider-mario joined
[15:42] <PerlJam> http://www.ted.com/talks/clay_shirky_how_the_internet_will_one_day_transform_government.html

[15:42] *** leont joined
[15:47] <GlitchMr> > * 1..10

[15:47] <GlitchMr> 1..10

[15:47] <GlitchMr> I should shouldn't destroy things

[15:49] <GlitchMr> std: sub prefix:<%> { 1 / $^a }; my %hash;

[15:49] <p6eval> std 77327a4: OUTPUT¬´ok 00:00 46m‚ê§¬ª

[15:50] <GlitchMr> std: sub prefix:<%> { 1 / $^a }; my %hash = number => %30; say %hash<number>;

[15:50] <p6eval> std 77327a4: OUTPUT¬´ok 00:00 46m‚ê§¬ª

[15:50] <GlitchMr> perl6: sub prefix:<%> { 1 / $^a }; my %hash = number => %30; say %hash<number>;

[15:50] <p6eval> niecza v22-3-g9840f57: OUTPUT¬´Potential difficulties:‚ê§  %hash is declared but not used at /tmp/ykluwN_yyz line 1:‚ê§------> [32msub prefix:<%> { 1 / $^a }; my [33m‚èè[31m%hash = number => %30; say %hash<number>[0m‚ê§‚ê§Use of uninitialized value in numeric context‚ê§  at /home/p6eval/niecza/l‚Ä¶

[15:50] <p6eval> ..rakudo 16f22b: OUTPUT¬´use of uninitialized variable $a of type Any in numeric context  in sub prefix:<%> at /tmp/Nb4oaV6QSA:1‚ê§‚ê§Divide by zero‚ê§  in sub infix:<div> at src/gen/CORE.setting:2895‚ê§  in method floor at src/gen/CORE.setting:7972‚ê§  in method Str at src/gen/CORE.setting:7990‚ê§  i‚Ä¶

[15:51] <GlitchMr> std: my !hash = number => %30; say !hash<number>;

[15:51] <p6eval> std 77327a4: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Malformed my at /tmp/VnRxT4sAh_ line 1:‚ê§------> [32mmy [33m‚èè[31m!hash = number => %30; say !hash<number>[0m‚ê§    expecting any of:‚ê§       name‚ê§   scoped declarator‚ê§Parse failed‚ê§FAILED 00:00 41m‚ê§¬ª

[15:51] <GlitchMr> std: my %hash = number => %30; say !hash<number>;

[15:51] <p6eval> std 77327a4: OUTPUT¬´ok 00:00 43m‚ê§¬ª

[15:54] *** bbkr left
[15:56] *** yogendra joined
[15:57] <GlitchMr> Perl 5 mode of STD:

[15:57] <GlitchMr> for (my $len = .chars; $len > 0; --$lenmy $len = .chars; $len > 0; --$len) {

[15:57] <GlitchMr> ok...

[15:59] *** yogendra is now known as yogi_

[16:00] *** brrt left
[16:00] *** yogi_ is now known as yogendra

[16:01] *** yogendra left
[16:01] <dalek> perl6-Text-Abbrev: da7a1d9 | GlitchMr++ | lib/Text/Abbrev.pm:

[16:01] <dalek> perl6-Text-Abbrev: Use KeySet instead of hash.

[16:01] <dalek> perl6-Text-Abbrev: review: https://github.com/GlitchMr/perl6-Text-Abbrev/commit/da7a1d97d7

[16:02] *** yogendra joined
[16:02] *** yogendra_ joined
[16:02] *** yogendra is now known as yogi_

[16:03] *** thou left
[16:03] *** yogendra_ left
[16:03] *** yogi_ left
[16:04] *** yogendra joined
[16:04] *** sisar joined
[16:05] *** yogendra left
[16:16] *** MayDaniel joined
[16:26] *** fhelmberger left
[16:29] *** orafu left
[16:33] *** sisar left
[16:33] *** daxim left
[16:34] *** daxim joined
[16:36] <skids> .oO(Never ask a Perl6 guru for an "itemized list".  You'll both end up confused.)

[16:52] <sirrobert> in an anonymous sub like:   sub {@_[0] + @_[1]}     is there a better way I should refer to the args being passed in?  (assuming I don't want to parameterize)

[16:52] <sirrobert> ?

[16:52] <hoelzro> sirrobert: $_[0] and $_[1], for one =)

[16:53] <sirrobert> hrm

[16:53] <huf> cant you do $^a and friends?

[16:53] <sirrobert> hoelzro: why does the array sign change?

[16:53] <sirrobert> huf: I didn't know about $^a and friends (thanks!)

[16:53] <huf> iirc they bind to the positional parameters in unicode sort order

[16:54] <hoelzro> oops, I thought this was #perl

[16:54] <hoelzro> sorry!

[16:54] <huf> so $^a will be the first one, $^b the second. but i'm not sure.

[16:54] <sirrobert> hoelzro: heh no worries =)

[16:54] <sirrobert> huf:  nice; just tested-- it works

[16:54] *** flightrecorder joined
[16:54] <sirrobert> thanks

[16:54] <huf> sirrobert: also, you can declare params for pointy blocks, but i dont know if they help you here

[16:54] *** FROGGS joined
[16:54] <sirrobert> will check it out

[16:55] <huf> -> $a, $b { .... } # maybe that's the syntax?

[16:55] <spider-mario> yes

[16:55] <spider-mario> or sub($a, $b) {...} must work

[16:55] *** Celelibi left
[16:56] <spider-mario> no, it doesn‚Äôt

[16:56] <sirrobert> doing this right now:  

[16:56] <sirrobert> r: sub foo ($a, $b, &c) { return &c($a,$b); }; my $foo = foo 1, 4, {$^a + $^b}; say $foo;

[16:56] <p6eval> rakudo 16f22b: OUTPUT¬´5‚ê§¬ª

[16:56] <sirrobert> will try to get a feel for the other forms too

[16:56] <huf> spider-mario: ah, but does sub ($a, $b) { } work?

[16:57] <huf> rakudo: my $x = sub ($a, $b) { say $a }; $x("cats");

[16:57] <spider-mario> oh, it works with the space

[16:57] <sirrobert> huf: yeah, that works

[16:57] <p6eval> rakudo 16f22b: OUTPUT¬´Not enough positional parameters passed; got 1 but expected 2‚ê§  in sub  at /tmp/Ons5X_YoAl:1‚ê§  in block  at /tmp/Ons5X_YoAl:1‚ê§‚ê§¬ª

[16:57] <spider-mario> but then sakudo prints it without it

[16:57] <huf> i fail at perl6, but at least my suggestions work :D

[16:57] *** Celelibi joined
[16:57] <spider-mario> which is incorrect and confusing

[16:57] <spider-mario> > sub ($a, $b) {...}

[16:57] <spider-mario> sub($a, $b) { ... }

[16:57] <spider-mario> > sub($a, $b) { ... }

[16:57] <spider-mario> Variable $a is not declared

[16:57] <huf> spider-mario: sub(...) will call the sub sub

[16:57] <huf> sub () will be the sub keyword

[16:58] <huf> or whatever perl6 calls those things.

[16:58] <huf> if () is if, if() calls the function called 'if'

[16:58] <huf> except you dont need the ()-s there, but anyway

[16:59] <spider-mario> right, but I think the output of the REPL should be changed there

[16:59] <spider-mario> even .perl prints it incorrectly

[17:00] <spider-mario> r: (sub ($a, $b) {...}).perl.say

[17:00] <p6eval> rakudo 16f22b: OUTPUT¬´sub($a, $b) { ... }‚ê§¬ª

[17:00] <huf> oh!

[17:00] <huf> that's misleading, yeah

[17:00] <spider-mario> n: (sub ($a, $b) {...}).perl.say

[17:00] <p6eval> niecza v22-3-g9840f57: OUTPUT¬´Potential difficulties:‚ê§  $a is declared but not used at /tmp/f3RguUtUzi line 1:‚ê§------> [32m(sub ([33m‚èè[31m$a, $b) {...}).perl.say[0m‚ê§  $b is declared but not used at /tmp/f3RguUtUzi line 1:‚ê§------> [32m(sub ($a, [33m‚èè[31m$b) {...}).perl.say[0m‚ê§‚ê§su‚Ä¶

[17:00] <spider-mario> n: (sub ($a, $b) {$a + $b}).perl.say

[17:00] <p6eval> niecza v22-3-g9840f57: OUTPUT¬´sub ANON(Any $a, Any $b) { ... }‚ê§¬ª

[17:00] *** birdwindupbird left
[17:01] *** arlinius joined
[17:02] *** rindolf joined
[17:09] *** dakkar left
[17:15] *** wk joined
[17:16] *** spider-mario left
[17:21] *** fgomez joined
[17:21] *** wk left
[17:22] *** crab2313 joined
[17:30] *** sevvie joined
[17:33] <sevvie> Hey everyone. I came around about a month ago, asking about why rakudo-star wouldn't compile on a Macbook. (http://irclog.perlgeek.de/perl6/2012-08-23#i_5920252) I didn't come to a conclusion then, but I started digging at it recently; the way brew solves the problems on Macs is by compiling the most recent version of libffi and replacing the -I portions of CFLAGS with ones that point to the newer libffi. (https://github.com/mxcl/homebrew/blob/master/Library/F

[17:33] <sevvie> Just... in case anyone needs that, or googles it.

[17:33] <sevvie> https://github.com/mxcl/homebrew/blob/master/Library/Formula/rakudo-star.rb#L14

[17:35] <sirrobert> sevvie thanks =)

[17:36] <sevvie> You're welcome; and, thank you!

[17:36] *** tokuhiro_ joined
[17:37] <dalek> Perlito: 9106461 | (Flavio S. Glock)++ | / (3 files):

[17:37] <dalek> Perlito: Perlito5 - js3 - @_ binds to lvalues

[17:37] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/9106461b9a

[17:39] <rindolf> Hi all. In Rakudo "make spectest" fails - http://paste.debian.net/192906/ . Mageia Linux 3/Cauldron x86-64.

[17:42] <[Coke]> nqp: https://gist.github.com/3783359

[17:42] <p6eval> nqp:  ( no output )

[17:42] <dalek> Perlito: 3596c1a | (Flavio S. Glock)++ | / (2 files):

[17:42] <dalek> Perlito: Perlito5 - js3 - fix indentation

[17:42] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/3596c1a9c8

[17:43] <[Coke]> dahell? that fails locally.

[17:43] <[Coke]> nqp: https://gist.github.com/3783359

[17:43] <p6eval> nqp: OUTPUT¬´alive‚ê§¬ª

[17:43] <[Coke]> O_o

[17:48] <FROGGS> rindolf: I get the same fails too

[17:49] <rindolf> FROGGS: I see.

[17:49] <FROGGS> but I didnt checked if there is a ticket or a TODO or somthing

[17:52] <sorear> rindolf! \o/

[17:52] <phenny> sorear: 11:32Z <colomon> tell sorear Niecza completely broken: Unhandled exception: System.MissingMethodException: Method not found: 'Cursor..ctor'.

[17:52] <sorear> colomon_: ping

[17:52] <dalek> Perlito: 1306f63 | (Flavio S. Glock)++ | / (2 files):

[17:52] <dalek> Perlito: Perlito5 - js3 - fix parameter list interpolation

[17:52] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/1306f63aa1

[17:52] <rindolf> sorear: hi.

[17:53] <rindolf> sorear: what's up?

[17:54] <sorear> rindolf: you're here.  that's unusual.

[17:54] <rindolf> sorear: yes, because I want to report the failing tests.

[17:57] *** benabik left
[17:57] <colomon_> sorear: pong

[17:57] <[Coke]> once you have a QAST, how do you compile and run it?

[17:58] <[Coke]> (assuming you have one with a :main)

[17:58] <sorear> colomon_: I suspect that what's going on is badly handled stale compiled modules, what happens if you move ~/.local/share/NieczaModuleCache out of the way?

[17:59] * colomon_ needs to get better at following irssi if he is not going to miss messages while his MBP is away for repairs.

[17:59] <sorear> I can do email.

[18:00] *** benabik joined
[18:02] <colomon_> sorear: blowing away NieczaModuleCache seems to have done the trick.  Thanks!

[18:02] *** benabik left
[18:04] *** thou joined
[18:04] *** thou left
[18:08] *** benabik joined
[18:13] *** mj41 left
[18:13] *** mj41 joined
[18:15] *** daxim left
[18:19] *** fgomez left
[18:28] <dalek> Perlito: 0d21f22 | (Flavio S. Glock)++ | / (2 files):

[18:28] <dalek> Perlito: Perlito5 - js3 - more efficient list interpolation

[18:28] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/0d21f22830

[18:30] <sirrobert> where can I get info on how to use perl6-debug?

[18:30] *** thou joined
[18:34] *** wamba joined
[18:38] <Ulti> sevvie: I haven't had any problems with my Macbook, what version of OSX are you on?

[18:40] *** mucker left
[18:42] <colomon_> sorear: just notice that I do get at least one real spectest fail with the new niecza, t/spec/S02-names-vars/names.t 

[18:43] *** kst joined
[18:45] <[Coke]> phenny: ask jnthn how to run a QAST CompUnit in a standalone NQP program when you're testing QAST.

[18:45] <phenny> [Coke]: I'll pass that on when jnthn is around.

[18:47] *** fgomez joined
[18:50] <japhb> sirrobert, jnthn++ did a presentation on perl6-debug.  IIRC you can start with 'perl6-debug foo' rather than 'perl6 foo' and use the 'help' command to get a feel for what's available.

[18:58] <sorear> japhb: were you there?  I didn't see you

[18:58] <sirrobert> ah, great =)

[18:58] <sorear> o/ kst

[19:01] <sirrobert> r: enum E <A B C>;  for (E::A, E::B, E::C) { say $^a ?? "yep" !! "nope" }

[19:01] <p6eval> rakudo 16f22b: OUTPUT¬´nope‚ê§yep‚ê§yep‚ê§¬ª

[19:01] <sirrobert> I find that *very* unexpected ... am I missing anything?

[19:01] <sirrobert> (I think it's because the first one is getting evaluated as 0 because it's the first one)

[19:02] <sirrobert> r: enum E <A B>; say so E::A; say so E::B;

[19:02] <p6eval> rakudo 16f22b: OUTPUT¬´False‚ê§True‚ê§¬ª

[19:03] <sirrobert> r: enum E <A B>; say E::A; say E::B;

[19:03] <p6eval> rakudo 16f22b: OUTPUT¬´A‚ê§B‚ê§¬ª

[19:03] <sorear> sirrobert: spec oversight, I'd say

[19:03] <sirrobert> I think in bool context it should be True (or 0E0), and in Int context it should be 0;

[19:03] <sorear> enums are specced to inherit from Int, and they don't have spec bool behavior

[19:03] <sorear> so they inherit Int's bool behavior

[19:03] <sirrobert> ok

[19:04] <sirrobert> hmmm

[19:04] <sirrobert> how should I bring that up to someone?

[19:04] <sorear> file a ticket against github.com/perl6/specs

[19:04] <sirrobert> ok, cool

[19:04] <sirrobert> thanks

[19:04] <japhb> sorear, I was there, then I was gone, now I'm back.  ;-)

[19:06] <sorear> japhb: I can't remember if we've met

[19:06] <japhb> In person, no.  It's been years since I've been able to travel to any conferences/hackathons/etc.

[19:07] <sorear> so you were not at frankfurt 2012?

[19:07] * japhb shakes his head sadly

[19:07] <sorear> ah well

[19:07] <sorear> austin 2013?

[19:09] <[Coke]> if you don't want your enums to have the default values, you can override them, fyi.

[19:09] <japhb> sorear, I somewhat doubt it, though at least (if it stays with the YAPC norm) it's not during the school year.

[19:11] <sorear> japhb: where and when *would* be convenient? :D

[19:12] <japhb> San Francisco (especially the north bay) -- just about any time.  :-)

[19:13] <sorear> but school years are relevant, eh?

[19:13] <japhb> Problem is, the only Perl conference around here is O'Reilly's, and it's REALLY expensive if you aren't getting the fees waved.

[19:13] * sorear wonders if japhb has met TimToady

[19:13] <japhb> Yes.

[19:13] <japhb> He probably doesn't remember, though -- I apparently caught him at a bad moment.

[19:14] <japhb> School year is relevant because I have three kids in school.  ;-)

[19:16] *** wk joined
[19:18] <sorear> japhb: aren't you yourself on a phd track of some kind?

[19:18] * japhb chuckles

[19:18] <japhb> Wow.  Uh, no.

[19:18] *** birdwindupbird joined
[19:19] <sorear> I must be confusing you with someone else

[19:19] <flussence> japhd?

[19:19] <sorear> huh?

[19:20] <flussence> bad pun :)

[19:20] <sorear> flussence: japhb is itself a bad pun

[19:21] <japhb> ;-)

[19:21] <flussence> hm, does that mine a double negative, or just twice as bad...

[19:21] <japhb> yes?

[19:27] *** araujo left
[19:33] *** araujo joined
[19:33] *** araujo left
[19:33] *** araujo joined
[19:37] *** crab2313 left
[19:39] *** xinming joined
[19:40] *** domidumont left
[19:42] *** xinming_ left
[19:46] <dalek> Perlito: 005a246 | (Flavio S. Glock)++ | / (2 files):

[19:46] <dalek> Perlito: Perlito5 - js3 - cleanup

[19:46] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/005a2469eb

[19:48] <GlitchMr> Perlito is cool, but it didn't have Perlito6 updates for long time

[19:49] <GlitchMr> But it's nice to see Perl 5 part being improved

[19:49] *** fgomez left
[19:50] *** fgomez joined
[19:50] <sorear> GlitchMr: having spoken with fglock in Perl, I expect the run of perlito5 improvements to continue for a while

[19:54] <GlitchMr> Also, http://perlcabal.org/~fglock/perlito5.html is outdated

[19:54] <GlitchMr> I wonder how can I install it on my harddrive somehow

[19:55] <sorear> I beleive fglock was using node when he was demoing it in Perl

[19:57] *** pmurias joined
[19:57] <pmurias> GlitchMr: git clone the repo from github

[19:58] <GlitchMr> Wow, I have it downloading at 99%

[19:58] <pmurias> sorear: perlito5 uses node for running js from the CLI

[19:58] <GlitchMr> That 99% is long

[19:59] *** rindolf left
[20:05] *** GlitchMr left
[20:20] *** sirrobert left
[20:27] <sorear> github-- # it would be very useful if the notifications mailings could say GlitchMr instead of just –ö–æ–Ω—Ä–∞–¥ –ë–æ—Ä–æ–≤—Å–∫–∏, making me look stuff up

[20:29] <FROGGS> ya, it should show both the nick and the real name

[20:35] <masak> evenin', #perl6

[20:38] <colomon_> o/

[20:43] <[Coke]> masak: guten abend.

[20:43] *** thou left
[20:45] *** thou joined
[20:47] *** thou left
[20:49] *** wamba left
[20:50] *** thou joined
[20:50] <sorear> o/ masak

[20:52] *** benabik left
[20:53] *** kaare_ left
[20:55] *** tokuhiro_ left
[20:57] *** Circlepuller left
[21:01] *** Circlepuller joined
[21:01] *** _jaldhar_ left
[21:04] *** immortal left
[21:04] *** erkan joined
[21:04] *** erkan left
[21:04] *** erkan joined
[21:08] *** birdwindupbird left
[21:10] *** skids left
[21:12] *** fgomez left
[21:18] *** bruges_ left
[21:20] *** bruges joined
[21:27] <masak> 'night, #perl6

[21:28] <[Coke]> SWADOL*

[21:29] <felher> o/ masak 

[21:29] <sorear> L?

[21:30] <[Coke]> Large

[21:31] <sorear> hrm, what was the original?

[21:31] <sorear> sleep well and dream of large ...?

[21:33] <[Coke]> ‚Äúwomen‚Äù

[21:34] <[Coke]> (quote from the princess bride, for those in the log)

[21:43] *** stepnem left
[21:49] *** wamba joined
[21:50] *** mdupont left
[21:50] *** mdupont joined
[21:51] *** fgomez joined
[21:57] *** MayDaniel left
[21:58] *** wamba left
[22:03] *** wamba joined
[22:11] *** pmurias left
[22:15] *** _jaldhar_ joined
[22:21] *** whiteknight joined
[22:23] *** fgomez left
[22:29] *** fgomez joined
[22:29] *** snearch joined
[22:31] *** stopbit left
[22:32] *** yarp joined
[22:39] *** kst left
[22:40] *** PacoAir left
[22:42] *** skids joined
[22:44] *** fgomez left
[22:47] *** wamba left
[22:47] *** benabik joined
[22:49] *** kst joined
[22:51] *** leont left
[22:54] *** kst left
[23:00] *** bonsaikitten left
[23:00] *** bonsaikitten joined
[23:03] *** yarp left
[23:04] *** kst joined
[23:07] *** fgomez joined
[23:16] *** kurahaupo joined
[23:50] *** dayangkun joined
[23:54] *** snearch left
