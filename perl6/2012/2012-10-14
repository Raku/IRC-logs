[00:02] *** benabik left
[00:06] *** fgomez left
[00:07] <diakopter> rn: say(|(|([4])))

[00:07] <p6eval> niecza v22-12-g960f328: OUTPUT«4␤»

[00:07] <p6eval> ..rakudo 8230ae: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&prefix:<|>' called (line 1)␤»

[00:07] <diakopter> sorear: do you know why rakudo doesn't like | there?

[00:08] *** benabik joined
[00:14] *** armitage81 joined
[00:22] <sorear> no

[00:23] *** fgomez joined
[00:31] <diakopter> r: say 1%0; say 1/0

[00:31] <p6eval> rakudo 8230ae: OUTPUT«0␤Divide by zero␤  in sub infix:<div> at src/gen/CORE.setting:2930␤  in method floor at src/gen/CORE.setting:8050␤  in method Str at src/gen/CORE.setting:8068␤  in method gist at src/gen/CORE.setting:2408␤  in sub say at src/gen/CORE.setting:7271␤  in block  at /tm…

[00:31] <diakopter> r: say 1%0; say 1%0

[00:31] <p6eval> rakudo 8230ae: OUTPUT«0␤0␤»

[00:31] <diakopter> scratch the last

[00:31] <diakopter> n: say 1/0; say 1%0

[00:32] <p6eval> niecza v22-12-g960f328: OUTPUT«Inf␤Unhandled exception: System.DivideByZeroException: Division by zero␤  at (wrapper managed-to-native) object:__icall_wrapper___emul_lrem (long,long)␤  at Builtins.mod (Niecza.Constants c, Niecza.Variable a1, Niecza.Variable a2) [0x00000] in <filename un…

[00:32] <diakopter> sorear: rakudo and niecza have opposite behavior here; one div0 on /0 but not %0; the other does the inverse

[00:33] <diakopter> er, converse

[00:33] <diakopter> er, reverse

[00:35] <diakopter> phenny: ask masak masakbot someone's buggy here ^^

[00:35] <phenny> diakopter: I'll pass that on when masak is around.

[00:40] <diakopter> pugs: say 1/0

[00:40] <p6eval> pugs: OUTPUT«*** Illegal division by zero␤    at /tmp/RAjX2yVlD1 line 1, column 5 - line 2, column 1␤»

[00:40] <diakopter> pugs: say 1%0

[00:40] <p6eval> pugs: OUTPUT«*** Illegal modulus zero␤    at /tmp/UxLtEyfu03 line 1, column 5 - line 2, column 1␤»

[00:41] *** wooden left
[00:42] *** wooden joined
[00:42] *** wooden left
[00:42] *** wooden joined
[00:47] <diakopter> sorear: how does one predeclare classes in niecza, for circular types?

[00:47] <diakopter> in rakudo it seems you use stub with ...

[00:50] <sorear> that works in niecza too

[00:50] <sorear> for some purposes

[00:53] <diakopter> sorear: I keep getting "two definitions for"

[00:53] <diakopter> "Two definitions found"

[00:53] <diakopter> rn: class A { ... }; class B is A { has A $.foo }; class A { has B $.bar }

[00:53] <p6eval> niecza v22-12-g960f328: OUTPUT«===SORRY!===␤␤Two definitions found for symbol ::GLOBAL::A␤␤  first at /tmp/m9nFrIm0ty line 1␤  second at /tmp/m9nFrIm0ty line 1 at /tmp/m9nFrIm0ty line 1:␤------> ; class B is A { has A $.foo }; class A ⏏{ has B $.bar }[0…

[00:53] <p6eval> ..rakudo 8230ae:  ( no output )

[00:56] <sorear> diakopter: maybe it'll work if you use "my class"

[00:57] <diakopter> rn: my class A { ... }; my class B is A { has A $.foo }; my class A { has B $.bar }

[00:57] <p6eval> rakudo 8230ae:  ( no output )

[00:57] <p6eval> ..niecza v22-12-g960f328: OUTPUT«===SORRY!===␤␤Illegal redeclaration of symbol 'A' (see line 1) at /tmp/JAq55ZXYO6 line 1:␤------> lass B is A { has A $.foo }; my class A ⏏{ has B $.bar }␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boo…

[00:57] <TimToady> std: class A { ... }; class B is A { has A $.foo }; class A { has B $.bar }

[00:57] <p6eval> std 77327a4: OUTPUT«ok 00:00 43m␤»

[00:58] <diakopter> TimToady!

[00:59] <diakopter> r: class A { ... }; class B is A { has A $.foo }; class A { has B $.bar }; say B.new.foo

[00:59] <p6eval> rakudo 8230ae: OUTPUT«No such method 'new' for invocant of type 'B'␤  in block  at /tmp/bSpnIiCJt3:1␤␤»

[00:59] <diakopter> um

[01:00] <diakopter> it doesn't have a new method?

[01:00] <diakopter> r: class A { ... }; class B is A { has A $.foo }; class A { has B $.bar }; say A.new.bar

[01:00] <p6eval> rakudo 8230ae: OUTPUT«No such method 'gist' for invocant of type 'B'␤  in sub say at src/gen/CORE.setting:7271␤  in block  at /tmp/6LU_D9IzbV:1␤␤»

[01:00] <diakopter> .. nor a gist method?

[01:01] <TimToady> r: package A { ... }; class B is A { has A $.foo }; class A { has B $.bar }; say B.new.foo

[01:01] <p6eval> rakudo 8230ae: OUTPUT«===SORRY!===␤A does not support inheritance, so B cannot inherit from it␤at /tmp/NS4XbU3Dnt:1␤»

[01:01] <TimToady> r: class A is Any { ... }; class B is A { has A $.foo }; class A { has B $.bar }; say A.new.bar

[01:01] <p6eval> rakudo 8230ae: OUTPUT«B()␤»

[01:01] <TimToady> there's the issue

[01:02] <diakopter> r: class A is Any { ... }; class B is A { has A $.foo }; class A { has B $.bar }; say (A.new.bar).HOW

[01:02] <p6eval> rakudo 8230ae: OUTPUT«Null PMC access in get_bool()␤  in attributes at src/stage2/gen/nqp-mo.pm:1151␤  in method perl at src/gen/CORE.setting:804␤  in method gist at src/gen/CORE.setting:798␤  in sub say at src/gen/CORE.setting:7271␤  in block  at /tmp/M_yCzk3f4Z:1␤␤»

[01:02] <diakopter> eh

[01:03] <diakopter> r: class A is Any { ... }; class B is A { has A $.foo }; class A { has B $.bar }; say (A.new.bar).WHO

[01:03] <p6eval> rakudo 8230ae: OUTPUT«().hash␤»

[01:03] <diakopter> r: class A is Any { ... }; class B is A { has A $.foo }; class A { has B $.bar }; say (A.new.bar).WHICH

[01:03] <p6eval> rakudo 8230ae: OUTPUT«B␤»

[01:03] <diakopter> r: class A is Any { ... }; class B is A { has A $.foo }; class A { has B $.bar }; say (A.new.bar).WHY

[01:03] <p6eval> rakudo 8230ae: OUTPUT«Any()␤»

[01:05] <diakopter> r: class A is Any { ... }; class B is A { has A $.foo = A.new }; class A { has B $.bar = B.new }; say B.new.foo.bar

[01:05] <p6eval> rakudo 8230ae: OUTPUT«maximum recursion depth exceeded␤current instr.: 'print_exception' pc 89092 (src/gen/CORE.setting.pir:42611) (src/gen/CORE.setting:9060)␤called from Sub 'new' pc 160822 (src/gen/CORE.setting.pir:74886) (src/gen/CORE.setting:2272)␤called from Sub 'new' pc 126199 (sr…

[01:09] <diakopter> rn: class B is Str is Int is Mu is Mu { }; say B.new.WHAT

[01:09] <p6eval> niecza v22-12-g960f328: OUTPUT«===SORRY!===␤␤C3 MRO generation failed for B: B Str Int Cool Any <-  | Mu | Mu | Mu | Mu | Mu Mu at /tmp/FcT03hrugY line 1:␤------> class B is Str is Int is Mu is Mu { }⏏; say B.new.WHAT␤␤Unhandled exception: Check fail…

[01:09] <p6eval> ..rakudo 8230ae: OUTPUT«B()␤»

[01:09] <diakopter> rn: class B is Str is Int is Mu { }; say B.new.WHAT

[01:09] <p6eval> rakudo 8230ae: OUTPUT«B()␤»

[01:09] <p6eval> ..niecza v22-12-g960f328: OUTPUT«Str()␤»

[01:10] <diakopter> eh

[01:11] <diakopter> rn: class A is Mu { }; say A.new

[01:12] <p6eval> rakudo 8230ae: OUTPUT«A.new()␤»

[01:12] <p6eval> ..niecza v22-12-g960f328: OUTPUT«A.new(...)␤»

[01:12] <diakopter> um

[01:12] <diakopter> oh, it's .perl for some reason

[01:12] <diakopter> (*unknown to me)

[01:13] <diakopter> rn: class A is Mu { }; say ~A.new

[01:13] <p6eval> niecza v22-12-g960f328: OUTPUT«A()<instance>␤»

[01:13] <p6eval> ..rakudo 8230ae: OUTPUT«Cannot call 'prefix:<~>'; none of these signatures match:␤:(str $a)␤:(Str:D \a)␤:(\a)␤␤  in block  at /tmp/UNxA_7XITt:1␤␤»

[01:14] <diakopter> weird; can't stringify

[01:16] *** dduncan joined
[01:16] *** dduncan left
[01:20] *** whiteknight left
[01:27] <diakopter> shortest program to exceed recursion depth (rakudo) or timeout due to recursion (niecza)

[01:29] <diakopter> s/or/and/

[01:32] *** bonsaikitten is now known as DrEeevil

[01:43] <diakopter> rn: say (;),4

[01:43] <p6eval> niecza v22-12-g960f328: OUTPUT«Nil4␤»

[01:43] <p6eval> ..rakudo 8230ae: OUTPUT«===SORRY!===␤Method 'returns' not found for invocant of class 'Integer'␤»

[01:43] <diakopter> ermagerd

[01:52] <diakopter> r: say (;),;<>;4SHOULD NOT PARSE

[01:52] <p6eval> rakudo 8230ae: OUTPUT«===SORRY!===␤Method 'returns' not found for invocant of class 'Integer'␤»

[01:52] <diakopter> hee

[01:53] <diakopter> r: (;)

[01:53] <p6eval> rakudo 8230ae: OUTPUT«===SORRY!===␤Method 'returns' not found for invocant of class 'Integer'␤»

[01:53] <diakopter> curious

[01:55] <diakopter> phenny: ask masak hee:  r: (;) <-- dies while parsing

[01:55] <phenny> diakopter: I'll pass that on when masak is around.

[01:57] *** FROGGS_ joined
[01:58] *** flightrecorder left
[02:00] *** FROGGS left
[02:00] <diakopter> phenny: ask masak hee  r: say (;:[])

[02:00] <phenny> diakopter: I'll pass that on when masak is around.

[02:03] <diakopter> r: say (;:[])

[02:03] <p6eval> rakudo 8230ae: OUTPUT«===SORRY!===␤Error while compiling block : Error while compiling op call: Error while compiling block : Error while compiling op call: Can only use get_how on a SixModelObject␤»

[02:06] *** tgt joined
[02:07] *** xdbr left
[02:10] *** tgt left
[02:21] *** kevouze joined
[02:38] <[Coke]> moritz++ #applying supernovus++ patch

[02:39] *** bluescreen10 joined
[02:47] *** wamba joined
[02:56] <[Coke]> r: say 286+348+6-80

[02:56] <p6eval> rakudo 8230ae: OUTPUT«560␤»

[02:58] <[Coke]> r: enum X <a b c>; say a ~~ Int; say True ~~ Int

[02:58] <p6eval> rakudo 8230ae: OUTPUT«True␤False␤»

[03:01] *** kevouze left
[03:12] *** xinming_ joined
[03:13] <dalek> roast: 72d4c05 | coke++ | S02-types/nan.t:

[03:13] <dalek> roast: Add a test for RT #83622

[03:13] <dalek> roast: review: https://github.com/perl6/roast/commit/72d4c05e8c

[03:16] *** xinming left
[03:39] *** daniel-s__ is now known as daniel-s

[03:39] *** REPLeffect joined
[03:51] *** tokuhiro_ joined
[04:06] *** popl joined
[04:19] *** araujo left
[04:24] *** flightrecorder joined
[04:28] *** telex left
[04:31] *** bluescreen10 left
[04:35] *** birdwindupbird joined
[04:35] *** telex joined
[04:40] *** tokuhiro_ left
[04:40] *** telex left
[04:41] *** tokuhiro_ joined
[04:43] *** tokuhiro_ left
[04:43] *** tokuhir__ joined
[04:44] *** bluescreen10 joined
[04:50] *** telex joined
[05:04] *** cognominal left
[05:05] *** cognominal joined
[05:17] *** cognominal left
[05:19] *** raiph joined
[05:23] *** att_ left
[05:25] *** simcop2387 left
[05:26] *** cognominal joined
[05:27] *** simcop2387 joined
[05:37] *** birdwindupbird left
[05:38] *** armitage81 left
[05:39] *** armitage81 joined
[05:48] *** tokuhir__ left
[05:49] *** tokuhiro_ joined
[05:51] *** mucker joined
[05:53] *** tokuhiro_ left
[05:53] *** cognominal left
[05:56] *** cognominal joined
[06:00] *** cognominal left
[06:03] *** sjohnson left
[06:04] *** armitage81 left
[06:10] *** raiph left
[06:13] *** sjohnson joined
[06:37] *** isBEKaml joined
[06:37] <isBEKaml> hello, #perl6!

[06:40] *** araujo joined
[06:40] *** araujo left
[06:40] *** araujo joined
[06:50] *** kaare_ joined
[06:52] *** aharoni joined
[06:54] *** popl left
[06:59] *** zby_home joined
[07:01] <sorear> heello, isBEKaml!

[07:06] <isBEKaml> sorear: how's things? 

[07:07] <sjohnson> my guess is, "prettaaay.. pretttaaay good."

[07:09] <isBEKaml> that bad, eh? :)

[07:09] <isBEKaml> I'm now sitting with Pugs after sometime. Trying to figure out how long it had been broken. :)

[07:10] *** Entonian joined
[07:10] *** Entonian left
[07:11] <isBEKaml> (on windows)

[07:11] *** wamba left
[07:13] *** leguin left
[07:16] *** marloshouse left
[07:17] *** marloshouse joined
[07:18] *** GlitchMr joined
[07:19] *** hash_table left
[07:23] <sorear> isBEKaml: neutral

[07:23] <sorear> isBEKaml: a bit busy, and utterly unmotivated to maintain niecza

[07:25] *** DrEeevil is now known as bonsaikitten

[07:26] <shachaf> isBEKaml: Pugs was "working" for me Oct 2011, I think?

[07:28] <isBEKaml> shachaf: Windows? base-3.x has System.Posix.Internals and all its type aliases, base-4.x have all of them removed. 

[07:28] <shachaf> Oh, I didn't see that.

[07:28] <shachaf> I don't know about Windows.

[07:29] <isBEKaml> shachaf: besides, it seems to be asking for System.Posix.Directory which is available under unix package. :/

[07:29] *** sjohnson left
[07:29] *** sjohnson joined
[07:29] <isBEKaml> sorear: sorry, planning to take a break and come back? 

[07:34] <moritz> jnthn: an attribute from a parent class has already generated it accessor, so the has_method will find it

[07:34] <moritz> s/it/its/

[07:35] <moritz> good morning

[07:35] <isBEKaml> moritz: good morning.

[07:35] <moritz> r: role R { method a { ... } }; class P { has $.a }; class C is P does R { }; say 'alive'

[07:35] <p6eval> rakudo 8230ae: OUTPUT«alive␤»

[07:37] *** drbean joined
[07:38] <moritz> [Coke]++ # closing the pack patch ticket, which i forgot

[07:41] *** SamuraiJack joined
[07:50] <moritz> r: my $x = Int.HOW; say $x^name

[07:50] <p6eval> rakudo 8230ae: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&name' called (line 1)␤»

[07:50] <moritz> r: my $x = Int.HOW; say $x.^name

[07:50] <p6eval> rakudo 8230ae: OUTPUT«Perl6::Metamodel::ClassHOW␤»

[07:59] <moritz> r: say lines[0]

[07:59] <p6eval> rakudo 8230ae: OUTPUT«Land der Berge, Land am Strome,␤Land der Äcker, Land der Dome,␤Land der Hämmer, zukunftsreich!␤Heimat bist du großer Söhne,␤Volk, begnadet für das Schöne,␤vielgerühmtes Österreich,␤vielgerühmtes Österreich!␤␤Heiß umfehdet, wild umstritten␤liegst dem Erdteil du inmi…

[08:00] <moritz> r: say lines.perl

[08:00] <p6eval> rakudo 8230ae: OUTPUT«("Land der Berge, Land am Strome,\nLand der Äcker, Land der Dome,\nLand der Hämmer, zukunftsreich!\nHeimat bist du großer Söhne,\nVolk, begnadet für das Schöne,\nvielgerühmtes Österreich,\nvielgerühmtes Österreich!\n\nHeiß umfehdet, wild umstritten\nliegst dem Erdt…

[08:01] *** wamba joined
[08:02] <moritz> nqp: say(nqp::substr("foo", 0, 35))

[08:02] <p6eval> nqp: OUTPUT«foo␤»

[08:09] <GlitchMr> rn: say lines

[08:09] <p6eval> rakudo 8230ae: OUTPUT«Land der Berge, Land am Strome,␤Land der Äcker, Land der Dome,␤Land der Hämmer, zukunftsreich!␤Heimat bist du großer Söhne,␤Volk, begnadet für das Schöne,␤vielgerühmtes Österreich,␤vielgerühmtes Österreich!␤␤Heiß umfehdet, wild umstritten␤liegst dem Erdteil du inmi…

[08:09] <p6eval> ..niecza v22-12-g960f328: OUTPUT«Land der Berge, Land am Strome, Land der Äcker, Land der Dome, Land der Hämmer, zukunftsreich! Heimat bist du großer Söhne, Volk, begnadet für das Schöne, vielgerühmtes Österreich, vielgerühmtes Österreich!  Heiß umfehdet, wild umstritten liegst dem Erdtei…

[08:10] <GlitchMr> This string is put for fun?

[08:11] <moritz> well, we need some kind of input for $*IN

[08:11] <GlitchMr> rn: say $*ARGS

[08:11] <p6eval> niecza v22-12-g960f328: OUTPUT«Any()␤»

[08:11] <p6eval> ..rakudo 8230ae: OUTPUT«Dynamic variable name not found␤  in method gist at src/gen/CORE.setting:9955␤  in sub say at src/gen/CORE.setting:7271␤  in block  at /tmp/Rm6bwJpTu3:1␤␤»

[08:11] <GlitchMr> rn: say @*ARGS

[08:11] <moritz> why not the Austrian national anthem?

[08:11] <p6eval> rakudo 8230ae, niecza v22-12-g960f328: OUTPUT«␤»

[08:11] <GlitchMr> moritz: I guess it's more fun than just nothing or the code of program ;-)

[08:12] <GlitchMr> In my eval bot, I have code of the program in STDIN. It's so pointless, but it works

[08:15] *** thou left
[08:20] <moritz> GlitchMr: that makes it far to easy to write quines :-)

[08:32] <sorear> n: say $*ORIG

[08:32] <p6eval> niecza v22-12-g960f328: OUTPUT«Any()␤»

[08:32] <sorear> n: say $?ORIG

[08:32] <p6eval> niecza v22-12-g960f328: OUTPUT«say $?ORIG␤»

[08:34] <GlitchMr> moritz: yeah, it's enough to type 'eval awk 1'

[08:35] *** mucker left
[08:41] *** tokuhiro_ joined
[08:42] <moritz>  ä#C'Äd

[08:42] <sorear> morgen Ronja

[08:55] *** tokuhiro_ left
[08:55] *** tokuhiro_ joined
[09:00] *** tokuhiro_ left
[09:13] <dalek> roast: 51fc070 | moritz++ | S02-types/nan.t:

[09:13] <dalek> roast: [nan.t] add trailing semicolon

[09:13] <dalek> roast: review: https://github.com/perl6/roast/commit/51fc070843

[09:13] *** jfried joined
[09:26] <lumi__> I'm consistently getting fails in t/spec/S32-io/IO-Socket-INET.t that seem to be related to multibyte characters

[09:27] <lumi__> But I'm confused about how the test is built, running an external p6 and piping its result, I think

[09:28] <moritz> yes, that's related to us now using an older parrot, because the newer ones have problems with readline

[09:28] <lumi__> moritz: The failures?

[09:28] <moritz> yes

[09:29] <lumi__> moritz: Also the script seems to run "./perl6", which I think might be wrong

[09:33] <moritz> lumi__: less than awesome at least

[09:33] <moritz> $*EXECUTABLE_NAME would be the better option

[09:40] *** MayDaniel joined
[09:40] *** je joined
[09:41] *** SamuraiJack_ joined
[09:42] *** isBEKaml left
[09:43] <je> P Say 41

[09:44] <je> Perl6 say41;

[09:44] *** SamuraiJack left
[09:44] <je> perl6 say 41

[09:45] *** je left
[09:48] *** GlitchMr left
[09:57] *** tokuhiro_ joined
[10:01] <moritz> p6: say 41

[10:01] <p6eval> rakudo 8230ae, niecza v22-12-g960f328: OUTPUT«41␤»

[10:12] *** spider-mario joined
[10:16] *** zby_home left
[10:17] <sorear> moritz: je left

[10:17] <moritz> sorear: i noticed after my line, yes

[10:23] <dalek> rakudo/nom: edb767a | moritz++ | src/core/Str.pm:

[10:23] <dalek> rakudo/nom: allow substr($str, $first, Inf)

[10:23] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/edb767a301

[10:24] *** wamba left
[10:32] *** MayDaniel left
[10:35] *** wamba joined
[10:37] *** not_gerd joined
[10:37] <not_gerd> hello, #perl6

[10:37] <moritz> \o not_gerd 

[10:37] <not_gerd> FYI: the readline failure might not be Parrot's fault

[10:38] <not_gerd> pir::print__is(pir::getstdin__P.readline) works in NQP, but not in Rakudo

[10:38] <moritz> I thought so, because reverting to an older parrot "fixes" it

[10:38] *** mucker joined
[10:40] <not_gerd> gdb tells me the stdin handle gets messed up or readline gets called on the wrong PMC

[10:41] <not_gerd> if the fault lies within the Parrot codebase, why does it work from NQP?

[10:45] *** Chillance joined
[10:52] <tadzik> ▄█▀ █▬█ █ ▀█▀

[10:52] <tadzik> the bug in Bailador which blocked the Star release is actually a bug in precompilation :(

[10:52] * tadzik cries into jnthn's sleeve

[10:54] *** tokuhiro_ left
[10:55] *** tokuhiro_ joined
[10:57] *** whiteknight joined
[10:57] *** tgt joined
[10:59] *** tokuhiro_ left
[11:05] *** Su-Shee joined
[11:08] *** rindolf joined
[11:08] <not_gerd> building rakudo with a non-optimized debug build of Parrot on Cygwin is s...l...o..o..o...w...

[11:09] *** Su-Shee_ left
[11:09] *** Exodist left
[11:09] <tadzik> yeah, I was working on --debugging rather than usual --optimize for some time

[11:09] <tadzik> the pain :)

[11:10] *** Exodist joined
[11:19] *** MayDaniel joined
[11:27] *** birdwindupbird joined
[12:07] *** bluescreen10 left
[12:08] *** PacoAir joined
[12:10] *** rindolf left
[12:15] <moritz> jnthn: ping

[12:15] <moritz> jnthn: I've tried to add some code to serialiaze and deserialize ByteBuffer, which we use in Buf

[12:16] <moritz> and well, I guess my approach was a bit naive :-)

[12:16] <moritz> because I thought I could simply use a ByteBuffer inside the serialization code

[12:16] <moritz> but lo and behold, "Can only use nqp_add_object_to_sc to add a 6model object"

[12:17] <moritz> the other types solve that creating 6model representations

[12:17] <moritz> does that mean we have to do that for ByteBuffer too?

[12:17] <moritz> a kind of Buf REPR, and then give the Perl 6 Buf type an object with such a representation?

[12:19] <moritz> if yes, fixing that is probably beyond casual weekend hack while herding Ronja :/

[12:23] <moritz> or I wonder if we should say goodbye to ByteBuffer entirely, and use Strings with encoding 'binary'

[12:36] <jnthn> o/

[12:36] <jnthn> moritz: Well, probably for buffers we really want to be using native arrays

[12:37] <moritz> which are NYI :(

[12:38] <moritz> I'm trying to fix https://rt.perl.org/rt3/Ticket/Display.html?id=114500

[12:39] *** _edwin joined
[12:40] <moritz> r: class A { has str $!x = 'foo'; method elems { nqp::p6box_i nqp::elems($!x) } }; say A.new.elems

[12:40] <p6eval> rakudo edb767: OUTPUT«elements() not implemented in class 'Str'␤  in method elems at /tmp/DhCyWw4IZY:1␤  in block  at /tmp/DhCyWw4IZY:1␤␤»

[12:40] <moritz> oh, I should be using nqp::chars or so

[12:42] <_edwin> hi! I have a question about spurt: currently both niecza and rakudo overwrite existing files. is the specced behavior of refusing to overwrite NYI, or is the spec out-of-date?

[12:42] <moritz> _edwin: I think we decided on not making it the default

[12:43] <moritz> and I thought masak++ would do it; if it's not so, we should fix the spec

[12:45] <_edwin> the spec currently does not even provide a way to allow/force overwriting if that's what the user wants, it seems

[12:46] <jnthn> moritz: It may be possible to teach the serializer to handle ByteBuffer.

[12:46] <moritz> _edwin: it seems that the Bool :$createonly = False in the signature means that the default is to overwrite files, but the text below doesn't reflect that

[12:47] <jnthn> Well, it will be possible...#

[12:47] <jnthn> It's just not what we want in the long run, but it's probablyOK fo rnow.

[12:47] <not_gerd> btw, a workaround for the readline issue might be passing an explicit separator argument to the readline PMC method

[12:48] <moritz> jnthn: I'm now experimenting with a binary-Str based Buf type instead

[12:48] <jnthn> moritz: ok

[12:49] <dalek> specs: 6b2c810 | moritz++ | S32-setting-library/IO.pod:

[12:49] <dalek> specs: [S32::IO] unconfuse description of &spurt, _edwin++

[12:49] <dalek> specs: review: https://github.com/perl6/specs/commit/6b2c810188

[12:50] *** tgt left
[12:55] <_edwin> that's why I asked: http://rosettacode.org/wiki/Globally_replace_text_in_several_files#Perl_6

[12:56] <_edwin> moritz++ thanks for clarifying

[12:57] <_edwin> I would have loved to write that with ==> spurt($_)

[12:58] <moritz> does it work?

[13:00] <_edwin> hm...testing. maybe it even works in rakudo

[13:01] <_edwin> \o/ it does

[13:01] <_edwin> not in niecza, though

[13:02] *** tgt joined
[13:04] *** Psyche^ joined
[13:06] *** Patterner left
[13:06] *** Psyche^ is now known as Patterner

[13:06] * not_gerd filed ticket #115248

[13:17] *** mucker left
[13:19] <moritz> ok, Buf stuff works... except encoding and decoding :(

[13:19] <dalek> specs: bcc011f | (Edwin Steiner)++ | S32-setting-library/IO.pod:

[13:19] <dalek> specs: Minor grammar edit.

[13:19] <dalek> specs: review: https://github.com/perl6/specs/commit/bcc011fcd8

[13:25] <dalek> specs: 1d76a26 | (Edwin Steiner)++ | S32-setting-library/IO.pod:

[13:25] <dalek> specs: Typos.

[13:25] <dalek> specs: review: https://github.com/perl6/specs/commit/1d76a26c7e

[13:30] *** not_gerd left
[13:30] *** not_gerd joined
[13:31] <_edwin> why is 'a.txt'.path.open required as opposed to just 'a.txt'.open ?

[13:32] <moritz> _edwin: because there are quite a lot of IO methods, and we don't want them all to clutter Str

[13:32] <moritz> also note that "a\nb\n".lines returns the list ("a", "b")

[13:32] <moritz> but IO.lines reads lines, instead of deconstructing a string

[13:33] <moritz> so we need to have some kind of division

[13:34] <_edwin> maybe open could be put in Cool and do .path.open?

[13:35] *** tgt left
[13:36] <_edwin> $filename.path.open feels a bit unhuffmanly to me

[13:36] <moritz> well, if $filename is an IO::Path object, you can just .open it right away

[13:36] *** tgt joined
[13:37] <moritz> thing is, Str isn't actually a good representation for file names

[13:37] *** GlitchMr joined
[13:45] *** aharoni left
[13:47] <spider-mario> should they be list of components?

[13:47] <spider-mario> and should components be strings?

[13:58] <spider-mario> hm

[13:58] <moritz> well, on Linux, the components should be buffers

[13:59] <spider-mario> $ perl Configure.pl --gen-nqp --prefix=$HOME/.perl6

[13:59] <spider-mario> …

[13:59] <spider-mario> Cannot chmod 755 /usr/bin/nqp

[13:59] <spider-mario> that’s new

[13:59] <moritz> and on Windows there's a string-API for file names

[13:59] <spider-mario> is it because I already have a system-wide nqp installed?

[13:59] <spider-mario> I have had one for months

[13:59] <spider-mario> it has never caused such a problem until now

[14:00] <moritz> spider-mario: I don't think --gen-nqp and --prefix mix

[14:00] <moritz> spider-mario: if you don't let Configure.pl build a parrot for you, you can't chose a prefix either

[14:00] <moritz> (nqp's prefix is always the same as parrot's)

[14:01] <spider-mario> it has built a parrot previously

[14:01] <spider-mario> it’s the first time that command fails

[14:01] *** hash_table joined
[14:01] <moritz> then use --with-parrot=$path/to/bin/parrot to make it pick up the right parrot

[14:01] <spider-mario> oh, thanks

[14:03] *** rindolf joined
[14:11] *** arnsholt left
[14:11] *** arnsholt joined
[14:18] <tadzik> jnthn: mind if I supply you with a testcase for some nasty precompilation bug? :)

[14:19] <jnthn> tadzik: Sure, though if it's the one involving operators I already know it :)

[14:19] <tadzik> no, it's not about operators

[14:19] <jnthn> ah, ok

[14:20] <tadzik> it's actually Bailador stripped to ~60 loc

[14:20] <tadzik> jnthn: http://ge.tt/5ZfZvTP/v/0

[14:20] <tadzik> thing is: if you precompile stuff and run test.t, it fails

[14:20] <tadzik> if you run it without precompilation, it works

[14:20] <tadzik> and... *drum roll*

[14:21] <tadzik> if you comment out 'use Bailador::Test', (it's unused), it works too

[14:21] <tadzik> wild guess: each 'use Bailador' causes 'my $app = Bailador::App.current' to become a different object

[14:23] *** aharoni joined
[14:32] <jnthn> Thanks, will look later tonight or once I get back home from this Stockholm trip.

[14:32] <tadzik> okay, awesome

[14:32] <tadzik> thanks

[14:35] *** mucker joined
[14:36] *** tgt left
[14:42] *** birdwind1pbird joined
[14:45] <not_gerd> bye, #perl6

[14:45] *** not_gerd left
[14:47] *** spider-mario left
[14:53] <rindolf> Hi all.

[14:56] *** FROGGS_ left
[14:57] *** flightrecorder left
[15:01] <moritz> my Buf patch seems to finally work. not_gerd++

[15:07] <_edwin> http://rosettacode.org/wiki/Visualize_a_tree#Perl_6

[15:10] <moritz> _edwin++

[15:11] <rindolf> So the sub statement is lexical?

[15:11] <rindolf> _edwin++

[15:11] <moritz> yes

[15:12] <moritz> _edwin: just yesterday a similar question came up on perlmonks: http://www.perlmonks.org/?node_id=998803

[15:14] <_edwin> hehe

[15:14] <_edwin> the only thing in the VAST:: output my solution cannot do is the wrapping of lines

[15:15] <_edwin> wouldn't be too hard to add, though

[15:19] <dalek> rakudo/nom: 837d0f8 | moritz++ | src/core/ (4 files):

[15:19] <dalek> rakudo/nom: switch Buf from ByteBuffer to binary string storage

[15:19] <dalek> rakudo/nom: 

[15:19] <dalek> rakudo/nom: the serializer knows how serialize strings, but not ByteBuffer; should fix #114500

[15:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/837d0f8ae9

[15:21] *** birdwind1pbird left
[15:25] *** tgt joined
[15:40] <pmichaud> good morning, #perl6

[15:40] <phenny> pmichaud: 10 Oct 02:27Z <[Coke]> ask pmichaud if we can close https://rt.perl.org/rt3/Ticket/Display.html?id=68854

[15:40] <moritz> \o pmichaud 

[15:40] <moritz> erm, wrong line

[15:40] <moritz> good am, pm :-)

[15:41] <pmichaud> phenny:  tell [Coke] RT #68854 closed, thanks!

[15:41] <phenny> pmichaud: I'll pass that on when [Coke] is around.

[15:43] *** wamba left
[15:50] *** birdwind1pbird joined
[16:01] *** birdwind1pbird left
[16:03] <dalek> nqp: 86b5b43 | moritz++ | / (2 files):

[16:03] <dalek> nqp: fix command line parsing (RT #114720)

[16:03] <dalek> nqp: review: https://github.com/perl6/nqp/commit/86b5b436f8

[16:04] <dalek> rakudo/nom: 0d2140b | moritz++ | tools/build/NQP_REVISION:

[16:04] <dalek> rakudo/nom: bump NQP revision to get command line parser improvements

[16:04] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0d2140b7c6

[16:05] <tadzik> good guy moritz++. Removes code. Fixes tests

[16:09] <flussence> r: enum V <a b c>; enum W <a b c>; say a.perl;

[16:09] <p6eval> rakudo edb767: OUTPUT«W::a␤»

[16:09] <flussence> n: enum V <a b c>; enum W <a b c>; say a.perl;

[16:09] <p6eval> niecza v22-12-g960f328: OUTPUT«===SORRY!===␤␤Illegal redeclaration of symbol 'a' (see line 1) at /tmp/iO2HJDmm4W line 1:␤------> enum V <a b c>; enum W <a b c>⏏; say a.perl;␤␤Illegal redeclaration of symbol 'b' (see line 1) at /tmp/iO2HJDmm4W line 1:…

[16:10] <moritz> tadzik: it was me who wrote the errorneous code in the first place

[16:11] <tadzik> Rewarded be thee, thy who saw teh error in yer ways :)

[16:11] <tadzik> er, I messed it up :P

[16:12] *** tgt left
[16:14] <moritz> that was code from February 2011

[16:14] <moritz> I had thought it were older

[16:16] *** birdwind1pbird joined
[16:21] *** Circlepuller left
[16:21] *** circlepuller joined
[16:21] *** circlepuller left
[16:22] *** circlepuller joined
[16:22] *** circlepuller left
[16:22] *** circlepuller joined
[16:22] *** circlepuller left
[16:23] *** circlepuller joined
[16:23] *** circlepuller left
[16:24] *** fridim_ joined
[16:24] *** Circlepuller joined
[16:24] *** Circlepuller left
[16:24] *** whiteknight left
[16:24] *** whiteknight joined
[16:24] *** simcop2387 left
[16:25] *** circlepuller joined
[16:25] *** circlepuller left
[16:25] *** circlepuller joined
[16:25] *** circlepuller left
[16:26] *** circlepuller joined
[16:26] *** circlepuller left
[16:26] *** circlepuller joined
[16:27] *** simcop2387 joined
[16:30] <tadzik> wow, blogs.perl.org on a Mojolicious rampage

[16:31] *** benabik left
[16:32] *** benabik joined
[16:32] <__sri> the underlying question is actually quite interesting, too bad it's buried under mojolicious fud

[16:32] <tadzik> yeah

[16:36] *** tgt joined
[16:36] *** aharoni left
[16:38] *** wamba joined
[16:39] *** fridim_ left
[16:42] *** birdwindupbird left
[16:48] *** circlepuller left
[16:49] *** circlepuller joined
[16:49] *** circlepuller left
[16:49] *** circlepuller joined
[16:50] *** circlepuller left
[16:50] *** circlepuller joined
[16:50] *** circlepuller left
[16:51] *** circlepuller joined
[16:51] *** circlepuller left
[16:51] *** circlepuller joined
[16:51] *** circlepuller left
[16:52] *** circlepuller joined
[16:52] *** circlepuller left
[16:53] *** circlepuller joined
[16:54] *** whiteknight left
[17:00] *** fridim_ joined
[17:04] <GlitchMr> eval: print +'৪2'

[17:04] <buubot_backup> GlitchMr: ৪21

[17:04] <GlitchMr> perl6: print +'৪2'

[17:04] <GlitchMr> Wrong eval...

[17:04] <p6eval> rakudo 0d2140: OUTPUT«Cannot convert string to number: base-10 number must begin with valid digits or '.' in '⏏৪2' (indicated by ⏏)␤  in method Str at src/gen/CORE.setting:9951␤  in method print at src/gen/CORE.setting:7452␤  in sub print at src/gen/CORE.setting:7262␤  in block  at /tmp…

[17:04] <p6eval> ..niecza v22-12-g960f328: OUTPUT«Use of uninitialized value in numeric context␤  at /home/p6eval/niecza/lib/CORE.setting line 1295 (warn @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 294 (Any.Numeric @ 8) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.s…

[17:06] <TimToady> How dare they use ৪ to mean 4!?!  :)

[17:10] <TimToady> though one can kinda see how it developed that way by looking at related scripts

[17:10] <TimToady> .u ৪

[17:10] <phenny> U+09EA BENGALI DIGIT FOUR (৪)

[17:10] <TimToady> .u ४

[17:10] <phenny> U+096A DEVANAGARI DIGIT FOUR (४)

[17:16] *** mucker left
[17:27] <TimToady> n: use Niecza::UCD; say value('numericvalue', '৪');

[17:27] <p6eval> niecza v22-12-g960f328: OUTPUT«===SORRY!===␤␤Q:CgOp not allowed in safe mode at /home/p6eval/niecza/lib/Niecza/UCD.pm6 line 4:␤------>  { (ucd_get_ranges {$table} {$matcher}) ⏏}␤␤Q:CgOp not allowed in safe mode at /home/p6eval/niecza/lib/Niecza/UCD.p…

[17:27] <sorear> o/

[17:27] <TimToady> \o

[18:03] <masak> o/

[18:03] <phenny> masak: 13 Oct 23:28Z <diakopter> ask masak masakbot see preceding; maybe rakudobug(s)

[18:03] <phenny> masak: 13 Oct 23:39Z <diakopter> ask masak see preceding; radkuobgu

[18:03] <phenny> masak: 00:35Z <diakopter> ask masak masakbot someone's buggy here ^^

[18:03] <phenny> masak: 01:55Z <diakopter> ask masak hee:  r: (;) <-- dies while parsing

[18:03] <phenny> Further messages sent privately

[18:04] <masak> oh, and phenny++ actually sent further messages privately.

[18:04] <masak> diakopter: will get to stuff in due time. thanks.

[18:04] *** birdwind1pbird left
[18:06] *** birdwindupbird joined
[18:09] *** dduncan joined
[18:10] *** MayDaniel left
[18:10] *** VXZ joined
[18:11] *** MayDaniel joined
[18:13] *** MayDaniel_ joined
[18:16] *** MayDaniel left
[18:17] *** aharoni joined
[18:17] *** fridim_ left
[18:19] *** dduncan left
[18:25] *** fridim_ joined
[18:26] *** tgt left
[18:28] <masak> I have a Perl 6 day tomorrow.

[18:28] <masak> but first, sleep.

[18:28] <masak> 'night, #perl6

[18:29] *** tgt joined
[18:29] <tadzik> good knight masak :)

[18:35] *** birdwindupbird left
[18:40] <rindolf> masak: night.

[19:29] *** SamuraiJack_ left
[19:39] *** marloshouse_ joined
[19:41] *** marloshouse left
[19:41] *** marloshouse_ is now known as marloshouse

[19:46] <moritz> forgiveness > permission

[19:46] <dalek> rakudo/nom: dfbfbb9 | moritz++ | src/core/terms.pm:

[19:46] <dalek> rakudo/nom: Add another dir to @*INC

[19:46] <dalek> rakudo/nom: 

[19:46] <dalek> rakudo/nom: In the long run I want panda and R* to install the modules there,

[19:46] <dalek> rakudo/nom: instead of ~./perl6/lib, which is shared among different Rakudo versions.

[19:46] <dalek> rakudo/nom: Currently this means that if you have precompiled modules in ~/.perl6/lib,

[19:46] <dalek> rakudo/nom: R* fails to compile modules.

[19:46] <dalek> rakudo/nom: 

[19:46] <dalek> rakudo/nom: You can find this new dir with perl6 -e 'say $*CUSTOM-LIB'

[19:46] <dalek> rakudo/nom: Better names are very welcome :-)

[19:46] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/dfbfbb9828

[19:46] <colomon> foreign travelers: I'm trying to figure out what is needed to make my electronics work in Switzerland.  I've discovered that everything I need to bring claims to handle 110-240 volts so at first blush all that is needed is a plug convertor.  But then I notice Wikipedia claims Switzerland is actually on 250 volts?

[19:48] *** _edwin left
[19:51] <colomon> moritz: I'm not sure I understand your new path name, but I've been saying ~/.perl6/lib is a bad choice for at least six months now.

[19:51] <moritz> colomon: wikitravel claims 230V

[19:52] <colomon> moritz: danke

[19:52] <moritz> http://wikitravel.org/de/Stromsysteme # the English equivalent doesn't have the nice list

[19:54] <sorear> colomon: voltages are not that precisely regulated, a system which is nominally 230V may be 210 or 250 on any given day

[19:54] <sorear> don't sweat the +-10%

[19:54] <Pleiades`> ^

[19:54] <colomon> \o/

[20:06] *** GlitchMr left
[20:07] *** birdwindupbird joined
[20:13] *** fglock left
[20:20] <dalek> rakudo/nom: 8a07b84 | moritz++ | src/core/terms.pm:

[20:20] <dalek> rakudo/nom: refine $*CUSTOM-LIB

[20:20] <dalek> rakudo/nom: 

[20:20] <dalek> rakudo/nom: panda wants a prefix below which it creates bin/ lib/ and panda/ dirs.

[20:20] <dalek> rakudo/nom: So now @*INC containts "$*CUSTOM-LIB/lib" by default

[20:20] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8a07b84f49

[20:21] *** fuleo2 joined
[20:21] *** flussence left
[20:22] *** fuleo left
[20:24] <colomon> moritz: are you thinking panda will be changed to default to using $*CUSTOM-LIB?

[20:24] <dalek> panda/custom-lib: c181c9a | moritz++ | / (3 files):

[20:24] <dalek> panda/custom-lib: stop installing to ~/.perl6

[20:24] <dalek> panda/custom-lib: 

[20:24] <dalek> panda/custom-lib: requires a pretty new Rakudo with $*CUSTOM-LIB support

[20:24] <dalek> panda/custom-lib: review: https://github.com/tadzik/panda/commit/c181c9a76c

[20:24] <tadzik> :)

[20:24] <tadzik> ask and ye'll be told :)

[20:24] <colomon> \o/

[20:24] <moritz> colomon: well, first let's do it in a branch :-)

[20:25] <colomon> that's actually kind of huge.

[20:25] <moritz> then we wait until pmichaud++ points out the holes in my plans

[20:25] <moritz> and see what tadzik++ has to say

[20:25] <moritz> and... we'll see :-)

[20:26] <colomon> I don't like the name CUSTOM-LIB very well, but I completely support this otherwise.

[20:26] <moritz> yeah, I don't like the name either

[20:26] <moritz> constructive bikeshedding welcome

[20:26] <colomon> ah, where's TimToady++ when you need him?  ;)

[20:27] <moritz> perl 5 has "site lib" and "vendor lib", but I haven't quite figured out what they mean, and if we should copy that concept or not

[20:27] *** _edwin joined
[20:28] <moritz> http://www.velocityreviews.com/forums/t898105-perl-vs-site-vs-vendor.html seems to explain it nicely

[20:28] <moritz> well, maybe we should have all three

[20:29] <sirrobert> is there a way to write your own method dispatcher for a class (to handle multi-methods)?

[20:29] *** flussence joined
[20:29] *** lue joined
[20:29] <lue> I can't get NativeCall to find ncurses :/

[20:30] <flussence> ncurses uses a weird soname, iirc

[20:30] <moritz> lue: try a fully qualified path to the .so file

[20:30] <flussence> on some distros anyway...

[20:30] <moritz> sirrobert: your questions scare me :-)

[20:30] <sirrobert> heh

[20:31] <jnthn> evening o/

[20:31] <moritz> sirrobert: there are ways through the metamodel to change for example the method resolution order

[20:31] <sirrobert> I'll take that as a "erm?" then

[20:31] <sirrobert> moritz: hmmm

[20:31] <moritz> sirrobert: what are you trying to achieve (big picture)?

[20:31] <lue> nope, doesn't work. I can put the test file and error message on gist if you'd like.

[20:32] <moritz> I know I had a minimal curses screen in Rakudo not very long ago

[20:32] <jnthn> sirrobert: Needing to do meta-programming is...unusual :)

[20:33] <jnthn> sirrobert: See modules like Grammar::Tracer which override find_method.

[20:33] <sirrobert> moritz:  I've written a pretty nice REST API dispatcher.  It allows me to make a grammatical interpretation of URLs and dispatch with methods like:  method POST_inventory ($id) {...}

[20:33] <jnthn> Oh. You actually are writing some kinda dispatcher. :)

[20:33] <moritz> lue: https://gist.github.com/3416731 that's how it worked for me 2 months ago

[20:33] <sirrobert> I'd rather do:   multi method inventory ($id) { ... } 

[20:33] <sirrobert> and have one version be dispatched if post, and another if get, or under various circumstances

[20:33] <sirrobert> jnthn: nod

[20:35] <sirrobert> also, I'm interested in understanding if there's a way of attaching arbitrary meta-data to a method, as Catalyst did in P5.  Not sure if I want to use it, just want to understand it right now.

[20:35] <sirrobert> (preferrably declaratively)

[20:35] <lue> https://gist.github.com/3889741 # here's what I got

[20:35] <jnthn> sirrobert: If you must do this sorta stuff, override find_method, and check .is_dispatcher on the thing you get back from callsame to see if it's a multi..

[20:35] <jnthn> There's not (yet) an API for custom multi candidate sorting.

[20:36] <sirrobert> jnthn:  hmmm ok.  thanks

[20:36] <jnthn> sirrobert: But you can get the dispatchee list and do as you wish with it.

[20:36] <moritz> sirrobert: I'd rather do something like   multi method inventory($id, :$POST!) { ... }

[20:36] <moritz> and then pass :POST on POST requests etc.

[20:36] <jnthn> sirrobert: But...really, I'd see if there ain't a better way :)

[20:37] <lue> Hm. I don't have any of that .so.5 for ncurses, but other than that I've got essentially the same file.

[20:37] <moritz> or maybe   multi method inventory($id) is handler-for <POST GET> { }

[20:37] <sirrobert> moritz:  How would that work?  Wouldn't $POST just contain 'GET' if you did .inventory(23,'GET')?

[20:37] <sorear> lue lives!!!

[20:38] <moritz> no, :$POST! is a named, required argument

[20:38] <sirrobert> ohh named

[20:38] <moritz> so you have to call .inventory(24, :POST) to call it

[20:38] <sirrobert> hmmmmmmmmmmm

[20:38] <sirrobert> that's pretty good

[20:38] <moritz> and then have whatever handles the URLS pass the HTTP method as a named argument

[20:38] * moritz -> sleep

[20:38] <sirrobert> moritz: thanks

[20:39] <sirrobert> ok, my wife needs me to head home.  later all.

[20:39] <lue> O.o Even though I don't have libncurses.so.5, using moritz's file still worked‽

[20:39] *** sirrobert left
[20:40] * lue decides to accept it, 'cos it makes his own test file work now.

[20:41] *** YamNad joined
[20:44] *** MayDaniel_ left
[20:49] * jnthn takes an early night... Not feeling 100%, and got $meeting here tomorrow...

[20:49] *** kaare_ left
[20:51] *** birdwindupbird left
[20:57] *** rindolf left
[21:04] *** kurahaupo joined
[21:13] *** _jaldhar joined
[21:13] *** jaldhar left
[21:14] *** PacoAir left
[21:15] *** _edwin left
[21:26] *** _jaldhar left
[21:28] *** _jaldhar joined
[21:40] *** YamNad left
[21:41] *** YamNad joined
[22:00] *** LoRe left
[22:01] *** LoRe joined
[22:20] *** ponbiki joined
[22:21] *** ponbiki is now known as Guest33575

[22:23] *** Guest33575 is now known as ponpon

[22:23] *** wamba left
[22:24] *** wamba joined
[22:25] *** Chillance left
[22:43] *** tgt left
[22:50] *** aharoni left
[23:05] *** armitage81 joined
[23:08] *** wamba left
[23:17] *** tokuhiro_ joined
[23:17] *** YamNad left
[23:23] *** sirrobert joined
[23:27] *** benabik left
[23:28] *** benabik joined
[23:45] <dalek> ecosystem: 9b1655d | (Sir Robert Burbridge)++ | META.list:

[23:45] <dalek> ecosystem: added Semantic::Versioning

[23:45] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/9b1655d9da

[23:45] *** tokuhiro_ left
[23:46] *** tokuhiro_ joined
[23:46] *** fgomez left
[23:50] *** tokuhiro_ left
[23:51] *** sirrobert left
[23:55] *** grondilu joined
