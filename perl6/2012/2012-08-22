[00:09] *** thou left
[00:16] *** gongyiliao joined
[00:26] *** ptl left
[00:28] *** tokuhiro_ joined
[00:34] *** raiph joined
[00:38] *** ptl joined
[00:38] *** ptl left
[00:38] *** ptl joined
[00:42] *** gongyiliao left
[00:42] *** ptl left
[00:44] *** ptl joined
[00:44] *** gongyiliao joined
[00:48] *** ptl left
[00:48] <raiph> p5p6 vs p6p5 # you've already got blogs and tweets getting this wrong. i urge you to immediately consider changing the name, letting everyone know the new name, and editing existing blogs asap.

[00:49] *** ptl joined
[00:49] *** ptl left
[00:49] *** ptl joined
[00:53] *** raiph left
[00:53] *** Woodi left
[00:54] *** ptl left
[00:59] *** thelazydeveloper left
[01:00] *** Woodi joined
[01:04] *** ptl joined
[01:04] *** ptl left
[01:04] *** ptl joined
[01:08] *** raiph joined
[01:09] *** ptl left
[01:09] <raiph> strawman suggestion: 5u6

[01:12] *** Circlepuller_ joined
[01:12] *** Circlepuller left
[01:20] *** ptl joined
[01:22] <pmichaud> raiph: what aspects of "5u6" do you find make it better than "p6p5"?

[01:25] *** ptl left
[01:26] <[Coke]> or we could do it both ways. <shrug>

[01:27] <[Coke]> (we could put a tweetfeed on perl6.org somewhere, also.)

[01:31] *** Guest53496 left
[01:32] <pmichaud> yes, I figure doing it both ways works out fine.  I will say that the choice

[01:32] <pmichaud> oops

[01:33] <pmichaud> I will say that the choice of "#p5p6" versus "#p6p5" was discussed and a consensus reached before choosing one.  I suspect mdk just got it backwards (as I do sometimes), which makes me feel like we should just adopt both forms :)

[01:33] <pmichaud> after all, tmtowtdi :)

[01:34] <pmichaud> also, on another topic, the big "5" on the yapceu t-shirts appeared on *all* of the conference t-shirts, not just the conference staff yellow ones.  :)

[01:34] <[Coke]> if I ever get the pieces together for the twitefeed in here, I'll do it both ways.

[01:35] <pmichaud> (it had been suggested that only the conference staff tees had 5's on them)

[01:35] <[Coke]> looks like we'll have rakudo on vms soon. rurban++

[01:35] *** jeffreykegler joined
[01:36] *** ptl joined
[01:37] *** cognominal left
[01:37] <pmichaud> I'll have the p6-versions of the t-shirts up on cafepress soon; I wanted to first check with some tpf officials about the onion on the shirt

[01:38] <[Coke]> there may be issues, aye.

[01:38] <pmichaud> well, apparently there aren't.  :-)

[01:38] <[Coke]> the raptor is probably safer.

[01:38] <[Coke]> ah. ok.

[01:38] <pmichaud> at least for this particular design, they didn't have any issue with it

[01:38] <pmichaud> (indeed, most of them asked where they could get one :)

[01:38] <[Coke]> the amount of overage you're charging on the shirts might impact the decision.

[01:38] <colomon> pmichaud++

[01:39] <[Coke]> but IANA... somtehing.

[01:39] <pmichaud> I'm thinking I won't do any overage.

[01:39] <pmichaud> I just like the shirt and like to see people wearing it :)

[01:40] *** ptl left
[01:41] *** ptl joined
[01:41] *** ptl left
[01:41] *** ptl joined
[01:42] <pmichaud> also, iirc the raptor is intended to indicate p5, which would be a little incongruous on a p6-themed shirt :)

[01:43] <pmichaud> but I could see one replacing the beer mug with a raptor and having an overprinted 5+6 on the reverse :)

[01:43] <pmichaud> that might be a fun design to put together as well

[01:45] *** daniel-s joined
[01:46] *** ptl left
[01:55] *** benabik joined
[01:56] *** ptl joined
[01:56] *** ptl left
[01:56] *** ptl joined
[02:01] *** ptl left
[02:04] *** tokuhiro_ left
[02:08] *** daniel-s_ joined
[02:09] *** daniel-s__ joined
[02:11] *** ptl joined
[02:11] *** ptl left
[02:11] *** ptl joined
[02:12] *** daniel-s left
[02:13] *** daniel-s_ left
[02:16] *** ptl left
[02:27] *** ptl joined
[02:32] *** ptl left
[02:34] *** daniel-s__ is now known as daniel-s

[02:36] *** DreamingInCode left
[02:36] *** am0c joined
[02:42] *** ptl joined
[02:42] *** ptl left
[02:42] *** ptl joined
[02:43] <[Coke]> 5+6? This perl goes to 11.

[02:45] *** daniel-s left
[02:47] *** ptl left
[02:48] *** DarthGandalf left
[02:49] *** DarthGandalf joined
[02:53] *** daniel-s joined
[02:57] *** ptl joined
[02:57] *** ptl left
[02:57] *** ptl joined
[03:02] *** ptl left
[03:06] *** ivan``_ left
[03:08] *** ivan`` joined
[03:13] *** ptl joined
[03:13] *** ptl left
[03:13] *** ptl joined
[03:13] <DrEeevil> sorear: niecza makefiles, not parallel-make safe :(

[03:15] *** sftp left
[03:16] <raiph> pmichaud: the 5s only on supervisors tees comment came from me; i misinterpreted what i read and didn

[03:18] *** ptl left
[03:18] *** skids left
[03:19] <raiph> pmichaud: 5s only on supervisors tees comment was me. i misinterpreted the photo caption. /o\

[03:20] <raiph> p5p6/p6p5 pros

[03:21] <raiph> 1. that's what was agreed

[03:21] *** simcop2387 left
[03:21] <raiph> 2. that's what is now published

[03:22] <raiph> 3. that's what is already set up

[03:22] <raiph> 4. simple (especially if u allow both versions)

[03:23] <raiph> 5. sorta puts emphasis on p6 (p6p5)

[03:23] *** simcop2387 joined
[03:24] <raiph> 6. logical order (p5p6)

[03:24] <raiph> cons

[03:27] *** ivan`` left
[03:28] *** ptl joined
[03:28] *** ptl left
[03:28] *** ptl joined
[03:30] *** ivan`` joined
[03:30] <raiph> 1. IF (a big if) this sticks as something associated with Perl reunification, it'll naturally end up branding that process, and (the following bit is subjective, very obviously) p5p6 doesn't appeal to me

[03:32] <raiph> 2. If you don't double up with both p6p5 and p5p6, well, confusion will ensue, and the last thing Perl 6 needs to be associated with is confusion about p5 versus p6

[03:33] *** ptl left
[03:33] <raiph> (or if not confusion, at least an easy target for ridicule)

[03:35] <raiph> (sorry about my language being so assertive; what i mean is that confusion may ensue; may be an easy target etc.)

[03:40] <raiph> 3. again, if you don't double up, p6p5 sends a not-so-subtle metamessage that it's really about p6, first and foremost. (of course, that might be exactly what you intended)

[03:43] <raiph> 4. if you do double up, well, that also seems off to me -- "why didn't you pick a better name?"

[03:43] *** ptl joined
[03:43] *** ptl left
[03:43] *** ptl joined
[03:43] <raiph> pros of the strawman suggestion of 5u6

[03:46] <raiph> 1. IF the p6p5 effort becomes known about in the broader Perl community, having a good name would matter, and i think a name like 5u6 would be better

[03:48] *** ptl left
[03:53] *** preflex_ joined
[03:54] <raiph> 2. I can see Camelia's brother with a 5 on his right wing instead of the P (and leaning to his right and so on). so 5u6 or 5*6 or somesuch would work nicely. i realize this might horrify Larry -- if so, forget I said anything about Camelia ;)

[03:54] <raiph> 3. the u in 5u6 can stand for something. i was thinking union (between p5 + p6), unique (what's unique about both p5 + p6), unicode (an important Perl strength), universal (the Perls are for general purpose programming).

[03:55] *** preflex left
[03:55] *** preflex_ is now known as preflex

[03:56] <raiph> (getting out there, i imagine Camelia's brother's name is CamelIB, a philosophical camel that's a butterfly in another dimension...)

[03:58] <raiph> 4. thinking tweets, i thought it might be better to do #perl #5u6 than #p6p5 #p5p6

[03:59] *** ptl joined
[03:59] *** ptl left
[03:59] *** ptl joined
[04:02] <raiph> out of pros/cons mode. could be 5x6, 5X6, 5n6, 5*6, 5&6, 5+6, etc.

[04:03] *** ptl left
[04:07] *** gongyiliao left
[04:07] *** simcop2387 left
[04:08] *** simcop2387 joined
[04:14] *** ptl joined
[04:14] *** ptl left
[04:14] *** ptl joined
[04:18] <raiph> .

[04:18] <raiph> the tweet issue is actually what first had me thinking #p6p5 was a problem. first, it would be an ugly hack to say both (#p6p5 #p5p6). second, u get a fundamentally different effect if u tweet #perl #5u6 or whatever than any of #p6p5, #p5p6, #p6p5 #p5p6

[04:19] *** ptl left
[04:20] <raiph> conversely, if you are consciously choosing to fly under the radar, #p6p5 is a good choice 

[04:25] *** telex left
[04:26] *** telex joined
[04:26] *** simcop2387 left
[04:28] *** simcop2387 joined
[04:29] *** ptl joined
[04:29] *** ptl left
[04:29] *** ptl joined
[04:31] <diakopter> raiph: do you think use of the hashtag will go beyond a few uses?

[04:34] *** ptl left
[04:34] *** telex left
[04:36] <raiph> not sure. do u know if it was intended mostly just for those who met?  

[04:38] *** telex joined
[04:44] *** bottles joined
[04:45] *** ptl joined
[04:46] <raiph> diakopter: i think, if the hashtag on twitter remains #p6p5, it will get much less twitter exposure than if it's #perl #5u6 or somesuch

[04:46] <diakopter> no; I don't know

[04:48] <diakopter> I think whichever tag a major blog post/announcement uses will get exposure as it's retweeted, so it doesn't matter much which one is chosen.  I think it'll be great when such a mass-retweeting does occur. MOARPERLPLZ

[04:49] *** ptl left
[04:50] *** bottles left
[04:51] *** ptl joined
[04:51] *** ptl left
[04:51] *** ptl joined
[04:52] *** am0c left
[04:56] *** ptl left
[05:02] *** hypolin joined
[05:04] <raiph> diakopter: agreed about rooting for mass exposure for a renewed 5+6 push

[05:07] *** ptl joined
[05:11] *** ptl left
[05:11] *** fgomez joined
[05:13] <moritz> \o

[05:14] *** ptl joined
[05:18] *** ptl left
[05:20] *** jeffreykegler left
[05:20] *** ptl joined
[05:20] *** ptl left
[05:20] *** ptl joined
[05:25] *** ptl left
[05:36] *** ptl joined
[05:36] *** sweet|kid left
[05:40] *** ptl left
[05:59] *** ilogger2 joined
[05:59] *** ChanServ sets mode: +v ilogger2

[06:00] <dalek> doc: 4275b25 | moritz++ | lib/X/A (3 files):

[06:00] <dalek> doc: document three more error classes

[06:00] <dalek> doc: review: https://github.com/perl6/doc/commit/4275b253ae

[06:04] *** ptl joined
[06:04] *** ptl left
[06:04] *** ptl joined
[06:09] *** ptl left
[06:20] *** ptl joined
[06:20] *** ptl left
[06:20] *** ptl joined
[06:21] *** kaleem joined
[06:22] <pmichaud> current draft of my p6doc talk:  http://pmichaud.com/2012/pres/yapceu-p6doc

[06:23] <pmichaud> comments welcomed

[06:25] *** ptl left
[06:30] <pmichaud> I'm afk for a bit.

[06:31] *** tarch joined
[06:35] *** ptl joined
[06:35] *** ptl left
[06:35] *** ptl joined
[06:39] *** tarch left
[06:40] *** ptl left
[06:42] <moritz> pmichaud: s:g/'Pod::Parser'/Pod::To/

[06:42] <moritz> (slide 31)

[06:43] <moritz> otherwise very nice, pmichaud++

[06:50] *** ptl joined
[06:50] *** ptl left
[06:50] *** ptl joined
[06:52] *** wtw_ joined
[06:52] <masak> good morning, #perl6

[06:53] <moritz> \o masak

[06:55] *** ptl left
[06:58] <masak> pmichaud++ # nice slides; looking forward to the talk

[06:58] *** SamuraiJack joined
[07:06] *** ptl joined
[07:06] *** ptl left
[07:06] *** ptl joined
[07:09] *** brrt joined
[07:10] *** ptl left
[07:11] *** GlitchMr joined
[07:11] *** ptl joined
[07:15] <hoelzro> o/

[07:15] <masak> /o

[07:15] *** ptl left
[07:17] *** ptl joined
[07:17] *** ptl left
[07:17] *** ptl joined
[07:22] *** ptl left
[07:29] <masak> commute &

[07:33] *** ptl joined
[07:37] *** ptl left
[07:39] <felher> pmichaud++ # i'm on slide.

[07:39] <felher> Ah, and by the way, the talk looks nice too ;)

[07:39] <felher> *'im on one slide

[07:40] *** ptl joined
[07:40] *** ptl left
[07:40] *** ptl joined
[07:44] *** ptl left
[07:55] *** hypolin joined
[07:55] *** ptl joined
[07:55] *** ptl left
[07:55] *** ptl joined
[07:57] *** tarch joined
[07:57] <dalek> doc: 9b99b23 | moritz++ | lib/X/TypeCheck (4 files):

[07:57] <dalek> doc: document TypeCheck error classes

[07:57] <dalek> doc: review: https://github.com/perl6/doc/commit/9b99b23b4b

[07:58] *** tarch left
[07:59] *** kresike joined
[07:59] <kresike> good morning all you happy perl6 people

[08:00] *** ptl left
[08:07] <tadzik> oh hai

[08:07] <phenny> tadzik: 21 Aug 23:31Z <japhb> tell tadzik I just pushed a lot of stuff to panda; I suggest pulling and ./reboostrap.pl, and then enjoy my last few days of hacking.  :-)

[08:07] <phenny> tadzik: 21 Aug 23:33Z <japhb> tell tadzik if you want to use the saved meta features on panda *itself* and its local-bootstrap, you should ./reboostrap.pl *twice*, because only after the first bootstrap will panda be saving all that info.

[08:10] *** ptl joined
[08:10] *** ptl left
[08:10] *** ptl joined
[08:13] *** cxreg joined
[08:15] *** ptl left
[08:15] <tadzik> japhb: okay, I'll take a look when I get to some Place of Power :)

[08:16] <tadzik> japhb: argh, bootstrap broken on windows

[08:21] *** flexibeast joined
[08:24] *** carlin joined
[08:25] *** ptl joined
[08:25] *** ptl left
[08:25] *** ptl joined
[08:28] <dalek> rakudo/nom: c5f8b87 | moritz++ | src/ (2 files):

[08:28] <dalek> rakudo/nom: include placeholder name in X::Signature::Placeholder

[08:28] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c5f8b874fe

[08:30] *** ptl left
[08:30] <flexibeast> Hey all. i've been searching through various synopses / documentation, and i can't seem to find what e.g. '*$x' means? ('$*x' i get, it's the case of the sigils reversed i'm not understanding.)

[08:31] <moritz> flexibeast: *$x in which context?

[08:31] <TimToady> that only works in a signature

[08:31] <moritz> flexibeast: in a signature?

[08:31] <TimToady> it means pull one variadic arg from the slurpy list

[08:31] <moritz> TimToady: might be part of a regex too

[08:31] <flexibeast> Yes, in sigs (from memory).

[08:31] <dalek> doc: 79c17a1 | moritz++ | lib/X/ (4 files):

[08:31] <dalek> doc: document more error types

[08:31] <dalek> doc: review: https://github.com/perl6/doc/commit/79c17a1bb1

[08:32] <flexibeast> TimToady: Ah okay, thanks. :-)

[08:32] * TimToady is sitting in masak++'s macros talk

[08:32] <moritz> http://doc.perl6.org/type/Signature might be of interest

[08:33] <moritz> documenting all those error classes would be much faster if I didn't decide that about a third of them could be improved in the process

[08:33] <TimToady> as long as it's done by Christmas...

[08:34] <flexibeast> moritz: Groovy, thanks. :-)

[08:34] *** nwc10 joined
[08:34] <nwc10> gah. I've been indoctrinated

[08:35] <nwc10> I can't see $foo++; without thinking "no, pre-increment is better"

[08:36] *** changedNicks joined
[08:36] *** changedNicks is now known as sweet|kid

[08:37] <moritz> meh, why does 'git status' not automatically launch a pager, when all other git commands do?

[08:38] <shachaf> git config --global pager.status true

[08:39] <hoelzro> why do some people prefer pre-increment?

[08:39] <moritz> easier to understand, faster

[08:39] <shachaf> In C++ there are cases where it's slightly more efficient.

[08:39] <TimToady> P5 optimizes $foo++ to ++$foo when the value is not used

[08:40] <moritz> should we allow that in P6 too?

[08:40] <TimToady> if the value is not used, there is not difference

[08:40] <TimToady> *no

[08:40] <nwc10> but if it can't know (ie return value of subroutine) it can't, I thought? :-)

[08:40] <nwc10> er s/:-)//

[08:40] <nwc10> naughty fingers

[08:40] <moritz> TimToady: only for the built-in prefix:<++> and postfix:<++>

[08:41] *** ptl joined
[08:41] *** ptl left
[08:41] *** ptl joined
[08:41] <TimToady> nwc10: the presumption is that if you put a value at the end of a sub, you want to return it

[08:41] <TimToady> in that case the user would need to say 'sink $x++' or some such

[08:42] <TimToady> or we probably just catch --> Sink in the declaration

[08:42] <moritz> .oO( I ordered a kitchen but it just returns a Sink )

[08:43] <dalek> doc: d57507b | moritz++ | lib/X/Syntax/ (2 files):

[08:43] <dalek> doc: two more error classes

[08:43] <dalek> doc: review: https://github.com/perl6/doc/commit/d57507bb40

[08:46] *** ptl left
[08:47] *** simcop2387 joined
[08:53] *** bbkr joined
[08:56] *** ptl joined
[08:56] *** ptl left
[08:56] *** ptl joined
[08:56] *** uday joined
[08:57] *** uday left
[09:01] *** ptl left
[09:04] <hoelzro> I can add a type constraint based on a role to a subroutine signature, right?

[09:04] <hoelzro> ex. sub foo($value does Role) { ... }

[09:05] <moritz> hoelzro: sub foo(Role $value) { }

[09:05] <moritz> just like any other type constraints

[09:07] <hoelzro> I see

[09:07] <hoelzro> thanks

[09:11] *** ptl joined
[09:11] *** ptl left
[09:11] *** ptl joined
[09:12] <hoelzro> (whoever's been updating doc.perl6.org since last I looked)++

[09:14] <moritz> what we really need is some kind of design for it

[09:14] <moritz> and a bit of navigation etc.

[09:16] *** ptl left
[09:17] <hoelzro> in time =)

[09:17] <hoelzro> having the docs is nice

[09:21] <tadzik> seen japhb 

[09:21] <aloha> japhb was last seen in #perl6 9 hours 47 mins ago saying "phenny, tell tadzik, if you want to use the saved meta features on panda *itself* and its local-bootstrap, you should ./reboostrap.pl *twice*, because only after the first bootstrap will panda be saving all that info.".

[09:23] <jnthn> ohhai o/

[09:23] <moritz> ohaio, jnthn 

[09:24] <hoelzro> o/ jnthn 

[09:24] <hoelzro> ohio!

[09:26] *** nwc10 left
[09:27] *** ptl joined
[09:27] *** ptl left
[09:27] *** ptl joined
[09:28] <hoelzro> so Parameter.ACCEPTS checks object identity?

[09:28] <hoelzro> I would kind of expect it to check the parameter's type constraint against the given value

[09:29] <hoelzro> oh, I needed to scroll further down =P

[09:30] <moritz> note that it's not that easy

[09:30] <moritz> sub f($x, $y where { $_ > $x * 2 } ) { } 

[09:30] <moritz> you can't check the second parameter in isolation

[09:30] <moritz> you can only check whole signatures, in general

[09:31] *** ptl left
[09:33] *** ptl joined
[09:33] *** ptl left
[09:33] *** ptl joined
[09:34] <smash> masak++ # macros talk

[09:36] <TimToady> r: sub f($x, $y where $y > $x * 2) { say "$x $y" }; f 1 2

[09:36] <p6eval> rakudo c5f8b8: OUTPUT«===SORRY!===␤Confused␤at /tmp/bH_nDZBA10:1␤»

[09:36] <TimToady> n: sub f($x, $y where $y > $x * 2) { say "$x $y" }; f 1 2

[09:36] <p6eval> niecza v19-31-g94c69fe: OUTPUT«===SORRY!===␤␤Two terms in a row at /tmp/0tRui2r81s line 1:␤------> where $y > $x * 2) { say "$x $y" }; f 1 ⏏2␤␤Parse failed␤␤»

[09:36] <TimToady> n: sub f($x, $y where $y > $x * 2) { say "$x $y" }; f 1, 2  # duh

[09:36] <p6eval> niecza v19-31-g94c69fe: OUTPUT«Unhandled exception: Constraint type check failed for parameter '$y' in 'f'␤  at /tmp/qq8zGjdMAd line 0 (f @ 1) ␤  at /tmp/qq8zGjdMAd line 1 (mainline @ 4) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4133 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.s…

[09:36] <hoelzro> moritz: interesting point

[09:36] <TimToady> n: sub f($x, $y where $y > $x * 2) { say "$x $y" }; f 1, 3

[09:36] <p6eval> niecza v19-31-g94c69fe: OUTPUT«1 3␤»

[09:36] <TimToady> r: sub f($x, $y where $y > $x * 2) { say "$x $y" }; f 1, 3

[09:37] <p6eval> rakudo c5f8b8: OUTPUT«1 3␤»

[09:37] <TimToady> don't really need another closure there

[09:38] <TimToady> removing an unnecessary layer of closure might be a useful optimization

[09:38] *** ptl left
[09:38] <moritz> I just don't use the where-clauses often enough to be sure about the precedence levels and what works

[09:39] <TimToady> you can't use anything comma or looser, since comma means next parameter

[09:39] <TimToady> other than that, it's just a thunk

[09:40] <TimToady> same deal with default value

[09:41] <TimToady> r: sub f($x, $y = 1 + $x * 2) { say "$x $y" }; f 1

[09:41] <p6eval> rakudo c5f8b8: OUTPUT«1 3␤»

[09:46] <TimToady> http://rosettacode.org/wiki/Random_number_generator_%28device%29#Perl_6

[09:47] <TimToady> http://rosettacode.org/wiki/Trabb_Pardo%E2%80%93Knuth_algorithm#Perl_6

[09:48] <hoelzro> r: sub foo(Str $value) {} say &foo.signature.params[0] ~~ 'hello'

[09:48] <p6eval> rakudo c5f8b8: OUTPUT«===SORRY!===␤Confused␤at /tmp/kdcSH9OW6g:1␤»

[09:48] <hoelzro> confused? how is that confusing?

[09:48] <hoelzro> =(

[09:48] <tadzik> semicolon

[09:48] <tadzik> r: sub foo(Str $value) {}; say &foo.signature.params[0] ~~ 'hello'

[09:48] <p6eval> rakudo c5f8b8: OUTPUT«False␤»

[09:48] *** ptl joined
[09:48] *** ptl left
[09:48] *** ptl joined
[09:49] <tadzik> r: sub foo(Str $value) {}; say 'hello' ~~ &foo.signature.params[0]

[09:49] <p6eval> rakudo c5f8b8: OUTPUT«False␤»

[09:49] <hoelzro> tadzik: ah, thanks

[09:49] <hoelzro> anyway...

[09:49] <arnsholt> "Confused" is perhaps a LTA error message there

[09:49] <tadzik> that's correct

[09:49] <hoelzro> does that look right?

[09:49] <tadzik> r: sub foo(Str $value) {}; say &foo.signature.params[0].WHAT

[09:49] <p6eval> rakudo c5f8b8: OUTPUT«Parameter()␤»

[09:49] <tadzik> that's not a string :)

[09:49] <arnsholt> You want params[0].type

[09:49] <hoelzro> ah ha

[09:51] <TimToady> n: sub foo(Str $value) {} say &foo.signature.params[0] ~~ 'hello'

[09:51] <p6eval> niecza v19-31-g94c69fe: OUTPUT«===SORRY!===␤␤Strange text after block (missing comma, semicolon, comment marker?) at /tmp/zGvEELowI_ line 1:␤------> sub foo(Str $value) {}⏏ say &foo.signature.params[0] ~~ 'hello'␤Other potential difficulties:␤  $valu…

[09:51] <TimToady> niecza is more informative on that subject

[09:51] <moritz> aye, rakudo needs to adopt STD's whole error tracking thing

[09:51] <arnsholt> Indeed. Due to its grammar being more STD-like, I assume

[09:51] <TimToady> nodnod

[09:52] <TimToady> nodnodnod even

[09:53] *** ptl left
[09:54] <dalek> doc: 7c9ae89 | moritz++ | lib/Parameter.pod:

[09:54] <dalek> doc: [Parameter] explain how to obtain an Parameter object; link to Signature

[09:54] <dalek> doc: review: https://github.com/perl6/doc/commit/7c9ae895f2

[09:55] *** ptl joined
[09:55] <pmichaud> fixing up Rakudo's grammar for better error handling is on my hit list

[09:59] *** ptl left
[09:59] <moritz> your hit list is just long :-)

[09:59] <moritz> as is mine

[09:59] <jnthn> as is mine

[10:00] <moritz> and, like, everybody elses

[10:00] <jnthn> Debugger is somewhat knocked off mine now though :)

[10:01] *** desertm4x joined
[10:01] *** ptl joined
[10:01] *** ptl left
[10:01] *** ptl joined
[10:06] *** ptl left
[10:09] <moritz> http://www.haskell.org/haskellwiki/Image:Monad-tutorials-chart.png

[10:10] *** hypolin left
[10:17] *** ptl joined
[10:17] *** ptl left
[10:17] *** ptl joined
[10:17] *** amkrankruleuen joined
[10:19] *** spider-mario joined
[10:22] *** ptl left
[10:23] <dalek> rakudo/nom: 1054d13 | moritz++ | src/core/ (2 files):

[10:23] <dalek> rakudo/nom: awesomify error message for X::Role::Initialization

[10:23] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1054d13cc0

[10:32] <dalek> doc: 19996f3 | moritz++ | lib/X/Role/Initialization.pod:

[10:32] *** ptl joined
[10:32] <dalek> doc: document X::Role::Iinitialization

[10:32] <dalek> doc: review: https://github.com/perl6/doc/commit/19996f3f22

[10:32] *** ptl left
[10:32] *** ptl joined
[10:37] *** ptl left
[10:39] <snarkyboojum> hi guys - is there a suitable switch to take advantage of compiling Perl 6 on a machine with many cores? --jobs rings a faint bell...

[10:40] <snarkyboojum> compiling Rakudo rather :)

[10:40] <TimToady> make -j 4

[10:40] <TimToady> or whatever

[10:41] <snarkyboojum> TimToady: cheers :) will give it a whirl

[10:41] <TimToady> I think there's some way to run spectests in parallel too

[10:42] <snarkyboojum> I should search back through the irc logs eh :) this will get me started though

[10:47] *** ptl joined
[10:47] *** ptl left
[10:47] *** ptl joined
[10:48] <colomon> TEST_JOBS=4 works to make the spectest run in parallel, at least in niecza.

[10:49] <snarkyboojum> noice - should try that.. I'm testing a 'make' of rakudo on a quite beastly beast - trying to optimise - finishes in about 3m15s

[10:50] <TimToady> all systems are go for lunch &

[10:52] *** ptl left
[10:52] <snarkyboojum> colomon: stupid question - but you're talking about an env var right?

[10:52] <colomon> snarkyboojum: yes

[10:53] <snarkyboojum> colomon: will give it a go - output of time make spectest forthcoming :)

[10:53] <colomon> on OS X, the command line I use is just TEST_JOBS=4 make spectest

[10:53] <colomon> that temporarily sets the env var and runs make spectest.

[10:53] <snarkyboojum> nice… I've just manually exported it

[10:53] <snarkyboojum> seems to be going fast!

[10:54] <snarkyboojum> apart from IO-Socket-INET.t :S

[10:54] *** am0c joined
[10:56] *** MayDaniel joined
[10:57] *** fhelmberger joined
[11:00] <snarkyboojum> colomon: finishes spectest in about 1m40s :)

[11:03] *** ptl joined
[11:07] <snarkyboojum> colomon: tho it fails some tests

[11:07] *** ptl left
[11:09] *** ptl joined
[11:09] *** ptl left
[11:09] *** ptl joined
[11:11] *** amkrankruleuen left
[11:14] *** ptl left
[11:22] *** fridim_ joined
[11:24] <colomon> woof, that's fast!

[11:24] <snarkyboojum> colomon: what are some compute intensive perl 6 benchmarky type things? there was a fractal generator from memory?

[11:24] <colomon> snarkyboojum: yes, 

[11:25] <colomon> https://github.com/colomon/mandelbrot

[11:25] <snarkyboojum> colomon: ta

[11:25] *** ptl joined
[11:27] <moritz> note that rakudo's README documents the TEST_JOBS thingy

[11:28] <snarkyboojum> colomon: what would be a good compute stress test with mandlebot.pl?

[11:28] <snarkyboojum> moritz: thanks - I'm a lazy bum :)

[11:29] <colomon> snarkyboojum: just say something like perl6 mandelbrot-color.pl 1001

[11:29] <snarkyboojum> moritz: I can't find TEST_JOBS in the rakudo README though

[11:29] <moritz> wooops

[11:29] <snarkyboojum> oh document(s)

[11:29] *** ptl left
[11:29] <colomon> er, perl6 mandelbrot-color.pl 1001 >fractal.ppm

[11:29] <colomon> if that goes too fast, increase the number.  :)

[11:32] <snarkyboojum> colomon: will this just use a single cpu?

[11:32] <colomon> snarkyboojum: yes

[11:32] <snarkyboojum> colomon: bugger :)

[11:32] <colomon> the niecza gtk-mandelbrot version is in parallel

[11:32] *** ptl joined
[11:32] <colomon> but rakudo doesn't have parallel processing yet, so far as I know

[11:33] <snarkyboojum> colomon: ok.. might get mono installed and niecza going

[11:33] <colomon> how many cores do you have?

[11:33] <snarkyboojum> colomon: we need a gpu version :P

[11:33] <snarkyboojum> colomon: 16 hyperthreaded cores

[11:33] <snarkyboojum> colomon: with 60+GB RAM

[11:33] <colomon> !!!!!!

[11:34] * colomon wonders if he could justify buying one of those for work....

[11:34] <snarkyboojum> colomon: but I don't see any performance increase between 16 and 32 test jobs.. so it seems spectest doesn't use HT

[11:34] <snarkyboojum> colomon: costs me $2.50/hr ;)

[11:35] <moritz> snarkyboojum: it just uses whatever the OS uses for processes

[11:35] <snarkyboojum> colomon: or not (as this is "testing" for work :))

[11:35] <snarkyboojum> moritz: makes sense

[11:35] <colomon> .... $20 for a working day.  $100 a month....that's actually not that insane.  It's a server somewhere?

[11:35] *** MayDaniel left
[11:36] *** ptl left
[11:37] <snarkyboojum> colomon: http://aws.amazon.com/ec2/instance-types/ - a 'Cluster Compute Eight Extra Large Instance' instance on AWS :D

[11:37] <snarkyboojum> colomon: 2 x Intel Xeon E5-2670

[11:38] <colomon> for what I'd need it for on work, I think they'd kill me on file storage costs.

[11:38] <colomon> gtk-mandelbrot probably not suitable, then, as it's got an actual GUI

[11:39] *** ptl joined
[11:39] *** ptl left
[11:39] *** ptl joined
[11:39] <snarkyboojum> colomon: run it on a windows box then :)

[11:39] <snarkyboojum> colomon: file storage costs?

[11:39] *** MayDaniel joined
[11:40] <colomon> I'd be testing my software on a lot of large files.  18 gigs worth.

[11:41] <colomon> as I recall, amazon's file storage is a bit pricey.  and uploading them from scratch each time would kill the performance improvements of using the big box.

[11:41] <snarkyboojum> colomon: ouch - could cost $1.80 for block storage

[11:41] <colomon> that's per day or something, no?

[11:41] <snarkyboojum> colomon: per month

[11:41] <colomon> really?  hmm.....

[11:42] <moritz> if you have a huge blob of seldom-changing data, you could use the new "glacier" thing

[11:43] <snarkyboojum> moritz: indeed - 1c/GB/month :P

[11:44] *** ptl left
[11:52] *** rvchangue joined
[11:54] <moritz> r: 1.Str::split('foo')

[11:54] <p6eval> rakudo 1054d1: OUTPUT«Cannot dispatch to method split on Str because it is not inherited or done by Int␤  in method dispatch:<::> at src/gen/CORE.setting:830␤  in block  at /tmp/dBdzCoABND:1␤␤»

[11:54] *** ptl joined
[11:54] *** ptl left
[11:54] *** ptl joined
[11:56] <dalek> doc: 2dc3ff6 | moritz++ | lib/X/Method/InvalidQualifier.pod:

[11:56] <dalek> doc: X::Method::InvalidQualifier

[11:56] <dalek> doc: review: https://github.com/perl6/doc/commit/2dc3ff629c

[11:59] <dalek> doc: 92a6deb | moritz++ | lib/X/Syntax/Number/RadixOutOfRange.pod:

[11:59] <dalek> doc: X::Syntax::Number::RadixOutOfRange

[11:59] <dalek> doc: review: https://github.com/perl6/doc/commit/92a6deb936

[11:59] *** ptl left
[12:05] <dalek> doc: ff5a9cc | moritz++ | lib/X/Export/NameClash.pod:

[12:05] <dalek> doc: document X::Export::NameClash

[12:05] <dalek> doc: review: https://github.com/perl6/doc/commit/ff5a9cc6cc

[12:07] <dalek> doc: 14f9f8e | moritz++ | lib/X/Sequence/Deduction.pod:

[12:07] <dalek> doc: document X::Sequence::Deduction

[12:07] <dalek> doc: review: https://github.com/perl6/doc/commit/14f9f8e464

[12:09] <moritz> r: class A { }; class B does A { }

[12:09] <p6eval> rakudo 1054d1: OUTPUT«===SORRY!===␤B cannot compose A because it is not composable␤at /tmp/tCDkDOoTOE:1␤»

[12:09] *** ptl joined
[12:09] *** ptl left
[12:09] *** ptl joined
[12:10] *** JimmyZ joined
[12:14] *** ptl left
[12:17] <lumi_> moritz: Which 'it' is that?

[12:17] <moritz> the last mentioned

[12:18] <moritz> lumi_: if you can come up with a clearer (but non-repetitive) error message, I can easily change it

[12:18] *** odoacre joined
[12:22] <lumi_> A is not composable, so B cannot compose it # perhaps?

[12:22] <lumi_> moritz: Or is "X because Y" mandatory?

[12:22] <moritz> no, not mandatory

[12:22] *** b_jonas joined
[12:23] <b_jonas> Should S02 have a provision that version control conflict markers like <<<<<<< are a token that causes a syntax error with an approperiate message?

[12:25] <b_jonas> Or would people want to write those for <<...>> strings/indexes?

[12:25] *** ptl joined
[12:25] <moritz> b_jonas: STD.pm6 recognizes it, and it's as much standard for Perl 6 as S02 is

[12:25] <b_jonas> I see.

[12:25] <moritz> b_jonas: it won't hurt to mention it, but the exact semantics are more accurately described in STD.pm6 anyway

[12:27] <b_jonas> The exact semantics for what diagnosis is produced probably does not need to be in S02, but S02 at least needs to mention that it's invalid or else people could insist it's a valid <<...>> literal

[12:27] <moritz> +1

[12:28] <moritz> n: say <<< 1 >>>

[12:28] <p6eval> niecza v19-31-g94c69fe: OUTPUT«===SORRY!===␤␤Bogus term at /tmp/eHwsYd0IMZ line 1 (EOF):␤------> say <<< 1 >>>⏏<EOL>␤␤Parse failed␤␤»

[12:28] <moritz> n: say << 1 >>

[12:28] <p6eval> niecza v19-31-g94c69fe: OUTPUT«1␤»

[12:29] *** ptl left
[12:30] <colomon> std: say <<< 1 >>>

[12:30] <p6eval> std 235f71b: OUTPUT«===SORRY!===␤Bogus term at /tmp/gucLpAH6sX line 1 (EOF):␤------> say <<< 1 >>>⏏<EOL>␤Parse failed␤FAILED 00:00 42m␤»

[12:30] <colomon> std: say <<<<<<<<<<< 1 >>>>>>>>>>>>

[12:30] <p6eval> std 235f71b: OUTPUT«===SORRY!===␤Unsupported use of >> to do right shift; in Perl 6 please use +> or ~> at /tmp/Vib1VSCbEP line 1:␤------> say <<<<<<<<<<< 1 >>>>>>>>>>>>⏏<EOL>␤Bogus term at /tmp/Vib1VSCbEP line 1 (EOF):␤------> say <<<<<<<<<<< 1…

[12:31] <moritz> $ ./perl6 -e 'class A { }; class B does A { }'

[12:31] <moritz> ===SORRY!===

[12:31] <moritz> A is not composable, so B cannot compose it

[12:31] *** ptl joined
[12:31] *** ptl left
[12:31] *** ptl joined
[12:32] <dalek> rakudo/nom: 7b068ea | moritz++ | src/core/Exception.pm:

[12:32] <dalek> rakudo/nom: improve error message for X::Composition::NotComposable, lumi_++

[12:32] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7b068ea36a

[12:33] <moritz> r: say Date.today

[12:33] <p6eval> rakudo 1054d1: OUTPUT«2012-08-22␤»

[12:33] <diakopter> "non composable cannot be composed"

[12:36] *** ptl left
[12:36] <dalek> specs: 5e47a16 | moritz++ | S32-setting-library/Exception.pod:

[12:36] <dalek> specs: [S32::Exception] improve an error message, lumi++

[12:36] <dalek> specs: review: https://github.com/perl6/specs/commit/5e47a16a17

[12:40] <b_jonas> I think it's always *exactly seven* less than signs, in all version control software

[12:40] *** gongyiliao joined
[12:43] *** Tedd1 joined
[12:44] <smash> pmichaud++ # p6doc talk

[12:47] *** ptl joined
[12:47] *** ptl left
[12:47] *** ptl joined
[12:51] *** atrodo joined
[12:52] *** ptl left
[12:53] *** gugod joined
[12:55] *** atrodo left
[13:02] *** ptl joined
[13:02] *** ptl left
[13:02] *** ptl joined
[13:04] *** am0c left
[13:04] *** atrodo joined
[13:05] *** Vlavv_ joined
[13:07] *** ptl left
[13:08] *** desertm4x left
[13:09] *** ptl joined
[13:09] *** ptl left
[13:09] *** ptl joined
[13:13] *** ptl left
[13:16] <GlitchMr> perl6: "a[\x2028]b".perl.print

[13:16] <p6eval> niecza v19-31-g94c69fe: OUTPUT«"a[\x[2028]]b"»

[13:16] <p6eval> ..rakudo 7b068e: OUTPUT«"a[ ]b"»

[13:16] *** ptl joined
[13:16] *** ptl left
[13:16] *** ptl joined
[13:17] <GlitchMr> perl6: "\xA0".perl.print

[13:17] <p6eval> rakudo 7b068e, niecza v19-31-g94c69fe: OUTPUT«" "»

[13:18] *** Guest0281 joined
[13:18] *** Guest0281 left
[13:19] *** skids joined
[13:21] *** ptl left
[13:22] *** integral joined
[13:22] *** integral left
[13:22] *** integral joined
[13:27] *** MayDaniel left
[13:32] *** ptl joined
[13:34] *** bluescreen10 joined
[13:36] *** ptl left
[13:38] *** gongyiliao left
[13:39] *** ptl joined
[13:41] <GlitchMr> perl6: Blob.new(1, 2, 3).perl.print

[13:41] <p6eval> niecza v19-31-g94c69fe: OUTPUT«===SORRY!===␤␤Undeclared name:␤        'Blob' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1402 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 37) ␤  at /home/p…

[13:41] <p6eval> ..rakudo 7b068e: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&Blob' called (line 1)␤»

[13:42] <GlitchMr> I guess that Blob isn't supported yet

[13:43] <moritz> have fun guessing

[13:43] *** ptl left
[13:44] <tadzik> hm. There's no Perl.pm, but could we maybe name tomorrows' release "Perl" after the town of PRS?

[13:46] <moritz> I wouldn't object

[13:46] <moritz> though you could still call it Frankfurt :-)

[13:46] <tadzik> or Frankfurt.pm, it wasn't taken yet :)

[13:49] <tadzik> huh, seems that I released Riga.pm too :)

[13:52] <hoelzro> you know what would be cool? a Perl 6 grammar -> Vim syntax file converter

[13:52] * hoelzro ponders

[13:54] *** sftp joined
[13:54] <tadzik> oh cool. Well volunteered :)

[13:54] *** ptl joined
[13:54] *** ptl left
[13:54] *** ptl joined
[13:54] * hoelzro puts it on the list

[13:58] <japhb> tadzik, I broke bootstrap on windows?  How the heck did I do that?

[13:58] <tadzik> japhb: I donno

[13:58] *** ptl left
[13:58] <tadzik> I'll forward an email to ya

[13:58] <japhb> I didn't think any transform I did would have affected that.  :-/

[13:59] <japhb> My apologies, I was trying to be very careful about that.  :-(

[13:59] <tadzik> yes, that's why I prefer not to touch bootstrap.pl. Never :)

[13:59] <tadzik> sur, that's ok

[13:59] <tadzik> do you have a windows machine to test that on?

[13:59] <japhb> Nope.

[13:59] *** ptl joined
[13:59] *** ptl left
[13:59] *** ptl joined
[14:00] <tadzik> hm, ok

[14:00] <tadzik> I'll ask Gabor if he can bisect it

[14:00] <japhb> Is jnthn around?  He's the only one I know that regularly uses Windows to develop.

[14:00] <japhb> Ah, that's two, good.

[14:01] <japhb> (I also did smaller commits than I usually do, just in case I accidentally caused a problem of *any* kind, so it would be easier to bisect and fix the bad commit.)

[14:01] <tadzik> good

[14:02] <japhb> Well, on the flip side, did you get a chance to play with the changes on a working system?

[14:02] * japhb has not backlogged yet this morning, just saw your highlight ...

[14:03] *** birdwind1pbird joined
[14:03] <tadzik> I rebootstraped a few times, I should have all the changes on

[14:04] <arnsholt> Is FROGGS on GitHub someone here?

[14:04] *** ptl left
[14:05] <GlitchMr> perl6: @("\x80\x40\xFF\x9F".encode('ISO-8859-1')).Str.print

[14:05] <p6eval> rakudo 7b068e: OUTPUT«128 64 255 159»

[14:05] <p6eval> ..niecza v19-31-g94c69fe: OUTPUT«Buf()<instance>»

[14:06] <tadzik> japhb: I'm still not sure why do we want URLs in 'list'

[14:06] <tadzik> so locally installed modules look different, yeah, but the whole URL just for that?

[14:06] <GlitchMr> But why I complicate stuff when I have .ords

[14:06] <japhb> A couple reasons (for me): local installs, installing one of a few different forks of a project, etc.

[14:07] <tadzik> hm

[14:07] <japhb> tadzik, it's certainly not critical to me any more, since I updated 'info' to give both the project list and installed info as well.

[14:07] <tadzik> ok cool

[14:08] <japhb> Feel free to nuke it out of 'panda list --verbose'

[14:09] <tadzik> talk &

[14:09] <japhb> enjoy!

[14:09] * japhb is jealous of all the conference attendees.  :-)

[14:15] *** ptl joined
[14:15] *** flexibeast left
[14:15] *** flexibeast joined
[14:17] *** stopbit joined
[14:17] *** awoodland joined
[14:18] *** awoodland left
[14:19] *** ptl left
[14:21] *** fhelmberger left
[14:21] *** ptl joined
[14:21] *** ptl left
[14:21] *** ptl joined
[14:26] *** ptl left
[14:28] <kresike> bye all

[14:28] *** kresike left
[14:35] *** spider-mario left
[14:37] *** ptl joined
[14:37] <moritz> japhb: me too

[14:38] <moritz> japhb: did you see my comment on roles and inheritance in the type graphs?

[14:39] *** kaare_ joined
[14:39] <TimToady> wrt the table of p6 operators, there are 3 deletions (prefix:<=>, @@, p5=>), 5 additions (%%, Zop, Sop, ...^, set/bag operators), and 3 changed spellings (true => so, slice => lol, also => S&)

[14:39] *** tokuhiro_ joined
[14:41] *** sirrobert joined
[14:41] *** ptl left
[14:43] *** ptl joined
[14:43] *** ptl left
[14:43] *** ptl joined
[14:46] <japhb> moritz, I have not seen that comment yet.  Link?

[14:48] *** ptl left
[14:51] *** thou joined
[14:53] <[Coke]> LWP::Simple doesn't pass its tests, trying to install with recent panda, rakudo.

[14:53] <tadzik> yes

[14:53] <tadzik> it's brokens

[14:53] <tadzik> just when I wanted to finish MuEvent::HTTP :)

[14:54] <moritz> japhb: some roles like X::Comp inherit from a class (Exception)

[14:54] <moritz> japhb: now both that role *and* a role that does it (X::Syntax) get arrows the parent class (Exception)

[14:55] <moritz> and a class that does the role gets another arrow

[14:55] <moritz> for example http://doc.perl6.org/images/type-graph-X::Syntax.svg X::Syntax confused

[14:55] <japhb> Ah yes, known bug that I kept forgetting to address.

[14:55] <moritz> ok

[14:56] <moritz> I'll open a ticket if you don't fix it soon :-)

[14:56] <japhb> It's a result of the "roles apply their isa list to the class that composes them"

[14:56] <japhb> moritz, probably not a bad idea to open the ticket.  I'm a bit scattered this week, and I don't want to forget it again.

[14:56] <moritz> ok, will do

[14:58] <japhb> I guess I need to keep track of which isa relationships were explicit, and which came in from roles.

[14:58] <japhb> Makes me wonder how the Metamodel does this correctly.  ;-)

[14:58] <japhb> Thanks for entering the ticket.

[14:59] *** ptl joined
[14:59] *** ptl left
[14:59] *** ptl joined
[15:00] <[Coke]> arglebargle. I tried again to get panda working inside an installed rakudo, but it's a PITA. I must be doing it wrong.

[15:01] <[Coke]> I moved panda into the installed rakudo, and updated its shebang.

[15:01] <japhb> [Coke], I have to run now but will be back in a bit.  If you post a script of your problem, I can try taking a look at it when I'm back.

[15:01] <moritz> japhb: https://github.com/perl6/doc/issues/4 the Metamodel simply doesn't have roles that inherit from classes

[15:01] <[Coke]> it claims to install things, but not to the installed rakudo.

[15:01] <japhb> moritz, yes it does.

[15:01] *** kikulli joined
[15:02] <japhb> Er, and you pointed out the case I was thinking of in the issue.  ;-)

[15:02] <[Coke]> what do I need to do set my env to in order to use the installed modules? 

[15:03] <japhb> PERL6LIB

[15:03] <japhb> (Assuming they didn't just install into ~/.perl6/

[15:03] <japhb> Anyway, really AFK

[15:03] <japhb> &

[15:03] <[Coke]> they DID install into ~/.perl6

[15:03] *** GlitchMr left
[15:04] <[Coke]> PERL6LIB=/home/coke/.perl6/lib perl6  ... use JSON::RPC - not found.

[15:04] *** GlitchMr joined
[15:04] *** ptl left
[15:05] <[Coke]> ARG. JSON::RPC is not a class, it's a ... package?

[15:05] <[Coke]> so, yes, it all works fine, and my test is flawed. bother.

[15:06] *** GlitchMr left
[15:07] *** GlitchMr joined
[15:09] *** GlitchMr left
[15:10] *** GlitchMr joined
[15:11] <[Coke]> bbkr: how can I find out more details if a client request results in a transport error?

[15:11] <[Coke]> bbkr: (on JSON::RPC::Client)

[15:12] *** kaleem left
[15:13] *** GlitchMr left
[15:13] *** GlitchMr joined
[15:14] *** ptl joined
[15:14] *** ptl left
[15:14] *** ptl joined
[15:18] *** GlitchMr left
[15:19] *** JimmyZ left
[15:19] *** ptl left
[15:19] <[Coke]> phenny: tell cosimo that I'm blocking on Issue #15 for LWP::Simple.

[15:19] <phenny> [Coke]: I'll pass that on when cosimo is around.

[15:19] *** GlitchMr joined
[15:22] *** GlitchMr left
[15:23] *** GlitchMr joined
[15:24] *** GlitchMr left
[15:25] *** GlitchMr joined
[15:28] *** GlitchMr left
[15:29] *** GlitchMr joined
[15:29] *** ptl joined
[15:29] *** ptl left
[15:29] *** ptl joined
[15:30] *** thelazydeveloper joined
[15:30] *** sivoais joined
[15:32] <[Coke]> phenny: ask bbkr how can I find out more details if a client request results in a transport error using JSON::RPC::Client

[15:32] <phenny> [Coke]: I'll pass that on when bbkr is around.

[15:32] *** GlitchMr left
[15:32] *** GlitchMr joined
[15:34] *** ptl left
[15:35] *** GlitchMr left
[15:35] *** GlitchMr joined
[15:37] <bbkr> [Coke]: there is no proper HTTP transport layer, the only message you get is http reposnse line (in exception object under .data attribute)

[15:37] <phenny> bbkr: 15:32Z <[Coke]> ask bbkr how can I find out more details if a client request results in a transport error using JSON::RPC::Client

[15:38] *** wtw_ left
[15:38] *** GlitchMr left
[15:38] *** tokuhiro_ left
[15:39] *** GlitchMr joined
[15:40] <[Coke]> star: use JSON::RPC::Client

[15:40] <p6eval> star 2012.07:  ( no output )

[15:40] <bbkr> star: use JSON::RPC::Client; my $c = JSON::RPC::Client.new(url => "http://app.getresponse.com/error404.html"); $c.foo(); # this page returns 303 redirect

[15:41] <p6eval> star 2012.07: OUTPUT«Transport error (-32300): "HTTP response is - 301 Moved"␤»

[15:41] <bbkr> 301*

[15:41] <[Coke]> so is there any way to get more info ther?

[15:41] <bbkr> what info do you need?

[15:41] *** GlitchMr left
[15:42] *** GlitchMr joined
[15:42] <[Coke]> moved where?

[15:42] <GlitchMr> Disconnections are getting silly

[15:42] <GlitchMr> Just wondering, what was my quit message

[15:44] <bbkr> [Coke]: you can modify this line https://github.com/bbkr/jsonrpc/blob/master/lib/JSON/RPC/Client.pm#L87 to return whole response in exception.data attribute

[15:44] *** ptl joined
[15:44] *** ptl left
[15:44] *** ptl joined
[15:45] *** GlitchMr left
[15:46] <bbkr> [Coke]: we still don't have HTTP::Request/Response classes to handle redirects or chunked transfers. the very basic communication added in JSON::RPC::Client does not handle many cases :(

[15:46] *** GlitchMr joined
[15:47] <bbkr> [Coke]: which URL you try to connect to? local perl-perl communication or something external?

[15:47] *** spider-mario joined
[15:49] *** ptl left
[15:50] *** GlitchMr left
[15:50] <thou> o/

[15:50] *** GlitchMr joined
[15:52] *** GlitchMr left
[15:57] <thou> i have a question about new and BUILD. reading S12, it's not clear to me if the following should work or not:

[15:57] <thou> nr: class Foo { has $.foo; }; my $f = Foo.new(:oops<should this fail or warn?>); $f.perl.say;

[15:57] <p6eval> rakudo 7b068e: OUTPUT«Foo.new(foo => Any)␤»

[15:57] <p6eval> ..niecza v19-31-g94c69fe: OUTPUT«Foo.new(...)␤»

[15:58] <thou> "All classes inherit a default new constructor from Mu. It expects all arguments to be named parameters initializing attributes of the same name."

[15:58] <moritz> thou: excess named arguments are generally ignored in method calls

[15:59] <moritz> so, no warning or failure expected here

[15:59] <thou> ok. that must be in S06

[16:00] *** ptl joined
[16:00] *** ptl left
[16:00] *** ptl joined
[16:00] <thou> for some reason i thought that should error unless there's a slurpy *%foo param

[16:00] <moritz> methods have an implicit *% at the end

[16:02] *** brrt left
[16:04] *** att joined
[16:05] *** ptl left
[16:07] *** GlitchMr joined
[16:10] <thou> ah

[16:10] *** birdwind1pbird left
[16:10] <thou> "Interface Consistency", S12. thanks, moritz!

[16:15] *** ptl joined
[16:15] *** ptl left
[16:15] *** ptl joined
[16:20] *** ptl left
[16:28] *** bbkr left
[16:30] *** ptl joined
[16:30] *** ptl left
[16:30] *** ptl joined
[16:32] <thou> rn: class Foo { has $.foo; method foo { return $.foo; } }; say "alive";

[16:32] <p6eval> niecza v19-31-g94c69fe: OUTPUT«===SORRY!===␤␤Two definitions of method foo (see line 1) at /tmp/wkfZwQvLCo line 1:␤------> class Foo { has $.foo; method foo ⏏{ return $.foo; } }; say "alive";␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niec…

[16:32] <p6eval> ..rakudo 7b068e: OUTPUT«alive␤»

[16:35] *** ptl left
[16:37] *** ptl joined
[16:37] *** ptl left
[16:37] *** ptl joined
[16:39] *** araujo joined
[16:39] *** araujo left
[16:39] *** araujo joined
[16:40] <sorear> good * #perl6

[16:40] <thou> hi, sorear

[16:41] <pmichaud> good evening, #perl6

[16:42] *** ptl left
[16:43] <sorear> DrEeevil: sorry I haven't been available much.  I'd like elaboration on the "dirty bootstrap" and "unsafe makefiles"

[16:43] <sorear> I spent a good chunk of June trying to make the bootstrap not suck so much.  Presumably you have something less ambitious in mind

[16:46] <GlitchMr> I'm not sure, but "===" works like "is" (Python) for mutable types?

[16:50] <sorear> can't speak for Python but it is object equivalence

[16:50] <sorear> n: say [] === [] # two distinct arrays

[16:50] <p6eval> niecza v19-31-g94c69fe: OUTPUT«False␤»

[16:51] <sorear> === tries to model distinguishability.  internally 2 === 2 might be comparing different objects, but they aren't distinguishable because you can't modify one

[16:51] <sorear> n: my $x = 1+1; my $y=$x*1; say $x === $y

[16:51] <p6eval> niecza v19-31-g94c69fe: OUTPUT«True␤»

[16:52] <sorear> n: my $x = 1+1; my $y=$x*1; $x does False; say ?$x, ?$y, $x === $y # might be a problem?

[16:52] <p6eval> niecza v19-31-g94c69fe: OUTPUT«Unhandled exception: Cannot use 'does' operator with an immutable object␤  at /home/p6eval/niecza/lib/CORE.setting line 1431 (die @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1370 (infix:<does> @ 8) ␤  at /tmp/GTyw4gbIJP line 1 (mainline @ 5) ␤  at…

[16:52] <sorear> ah, you hit the guardrail there

[16:53] *** ptl joined
[16:53] *** ptl left
[16:53] *** ptl joined
[16:57] *** mucker joined
[16:58] *** ptl left
[17:06] *** gongyiliao joined
[17:08] <thou> i'd like a code review:  https://github.com/softmoth/uri/compare/master...relative-references

[17:08] *** ptl joined
[17:08] *** ptl left
[17:08] *** ptl joined
[17:13] *** ptl left
[17:19] <PerlJam> thou: What's with all of the Mu assignments?

[17:19] *** GlitchMr left
[17:20] <thou> PerlJam: my $u = URI.new('a'); $u.parse('completely/new/URI');  # .parse() wipes out previous URI completely.

[17:21] <PerlJam> ah

[17:21] <thou> that's how it was written already, i didn't change that code

[17:21] <thou> i'm not a big fan of that interface, i guess i'd rather create a new URI.

[17:23] *** ptl joined
[17:23] *** ptl left
[17:23] *** ptl joined
[17:25] *** jeffreykegler joined
[17:38] *** stopbit left
[17:38] *** thou left
[17:38] *** sftp left
[17:38] *** skids left
[17:38] *** atrodo left
[17:38] *** integral left
[17:38] *** sweet|kid left
[17:38] *** thelazydeveloper left
[17:38] *** odoacre left
[17:38] *** fridim_ left
[17:38] *** kikulli left
[17:38] *** carlin left
[17:38] *** gugod left
[17:38] *** jeffreykegler left
[17:38] *** SamuraiJack left
[17:38] *** b_jonas left
[17:38] *** kaare_ left
[17:38] *** spider-mario left
[17:38] *** cxreg left
[17:38] *** sirrobert left
[17:38] *** simcop2387 left
[17:38] *** att left
[17:38] *** ptl left
[17:38] *** araujo left
[17:38] *** Tedd1 left
[17:38] *** rvchangue left
[17:38] *** flexibeast left
[17:38] *** gongyiliao left
[17:38] *** sivoais left
[17:38] *** mucker left
[17:39] *** c1sung joined
[17:39] *** cosimo joined
[17:39] *** topo joined
[17:39] *** Woodi joined
[17:39] *** flexibeast joined
[17:39] *** obra__ joined
[17:39] *** hanekomu_ joined
[17:39] *** sorear_ joined
[17:39] *** jnthn_ joined
[17:39] *** mj41_ joined
[17:39] *** awwaiid_ joined
[17:39] *** TimToady_ joined
[17:39] *** xinming_ joined
[17:39] *** pnu joined
[17:39] *** robins joined
[17:39] *** [particle]1 joined
[17:39] *** jeffreykegler joined
[17:39] *** att joined
[17:39] *** spider-mario joined
[17:39] *** thelazydeveloper joined
[17:39] *** kikulli joined
[17:39] *** sirrobert joined
[17:39] *** kaare_ joined
[17:39] *** integral joined
[17:39] *** gugod joined
[17:39] *** b_jonas joined
[17:39] *** odoacre joined
[17:39] *** fridim_ joined
[17:39] *** simcop2387 joined
[17:39] *** carlin joined
[17:39] *** cxreg joined
[17:39] *** SamuraiJack joined
[17:39] *** sweet|kid joined
[17:39] *** telex joined
[17:39] *** ivan`` joined
[17:39] *** daniel-s joined
[17:39] *** Circlepuller_ joined
[17:39] *** dalek joined
[17:39] *** nebuchadnezzar joined
[17:39] *** PacoAir joined
[17:39] *** alester joined
[17:39] *** Tene joined
[17:39] *** Pleiades` joined
[17:39] *** bruges_ joined
[17:39] *** dbr joined
[17:39] *** drbean joined
[17:39] *** Khisanth joined
[17:39] *** pratchett.freenode.net sets mode: +v dalek

[17:39] *** Exodist joined
[17:39] *** Helios joined
[17:39] *** flussence joined
[17:39] *** HarryS joined
[17:39] *** quietfanatic joined
[17:39] *** tipdbmp joined
[17:39] *** mattp_ joined
[17:39] *** sudokode joined
[17:39] *** Timbus joined
[17:39] *** broquaint joined
[17:39] *** geekosaur joined
[17:39] *** sporous joined
[17:39] *** _ilbot joined
[17:39] *** BinGOs joined
[17:39] *** jlaire joined
[17:39] *** zb joined
[17:39] *** estrai joined
[17:39] *** SHODAN joined
[17:39] *** perigrin joined
[17:39] *** tadzik joined
[17:39] *** rafl joined
[17:39] *** stepnem joined
[17:39] *** sjn joined
[17:39] *** kcwu joined
[17:39] *** imarcusthis joined
[17:39] *** baest joined
[17:39] *** ChoHag joined
[17:39] *** hoelzro|away joined
[17:39] *** huf joined
[17:39] *** yeltzooo7 joined
[17:39] *** Gesh joined
[17:39] *** moritz joined
[17:39] *** felher joined
[17:39] *** pjcj joined
[17:39] *** rhr_ joined
[17:39] *** buubot_backup joined
[17:39] *** revdiablo joined
[17:39] *** PZt joined
[17:39] *** jerome joined
[17:39] *** dju joined
[17:39] *** ingy joined
[17:39] *** aindilis joined
[17:39] *** arnsholt joined
[17:39] *** hugme joined
[17:39] *** [Coke] joined
[17:39] *** spacebat joined
[17:39] *** Guest7858 joined
[17:39] *** pratchett.freenode.net sets mode: +v hugme

[17:39] *** tomaw joined
[17:39] *** timotimo joined
[17:39] *** au joined
[17:39] *** jtpalmer joined
[17:39] *** rjbs joined
[17:39] *** takesako_ joined
[17:39] *** literal joined
[17:39] *** diakopter joined
[17:39] *** felipe joined
[17:39] *** ironcamel joined
[17:39] *** Bucciarati joined
[17:39] *** Util joined
[17:39] *** p6eval joined
[17:39] *** zamolxes joined
[17:39] *** pratchett.freenode.net sets mode: +v p6eval

[17:39] *** renormalist joined
[17:39] *** ranguard joined
[17:39] *** sunnavy joined
[17:39] *** mucker joined
[17:39] *** silug joined
[17:39] *** mikemol joined
[17:39] *** Celelibi joined
[17:39] *** mikec__ joined
[17:39] *** japhb joined
[17:39] *** Maddingue joined
[17:40] *** thou joined
[17:40] *** sftp joined
[17:40] *** skids joined
[17:40] *** atrodo joined
[17:40] *** erkan joined
[17:40] *** Grrrr joined
[17:40] *** shachaf joined
[17:40] *** avar joined
[17:40] *** phenny joined
[17:40] *** lumi_ joined
[17:40] *** smash joined
[17:40] *** kst joined
[17:40] *** domidumont joined
[17:40] *** mathw joined
[17:40] *** p6rd joined
[17:40] *** aloha joined
[17:40] *** frettled joined
[17:40] *** charsbar_____ joined
[17:40] *** mhasch joined
[17:40] *** patspam joined
[17:40] *** snarkyboojum joined
[17:40] *** szbalint joined
[17:40] *** `patch` joined
[17:40] *** stopbit_ joined
[17:40] *** __sri joined
[17:40] *** benabik joined
[17:40] *** araujo joined
[17:40] *** Tedd1 joined
[17:40] *** rvchangue joined
[17:40] *** preflex joined
[17:40] *** jferrero joined
[17:40] *** gfldex joined
[17:40] *** eternaleye joined
[17:40] *** lestrrat joined
[17:40] *** sjohnson joined
[17:40] *** crazedpsyc joined
[17:40] *** cotto joined
[17:40] *** lorn joined
[17:40] *** ptl joined
[17:40] *** ashleyde1 joined
[17:40] *** sivoais_ joined
[17:40] *** takadonet joined
[17:40] *** prammer joined
[17:40] *** larks joined
[17:40] *** masak joined
[17:40] *** BooK joined
[17:40] *** jevin joined
[17:40] *** ggoebel joined
[17:40] *** pmichaud joined
[17:40] *** Juerd joined
[17:40] *** DrEeevil joined
[17:40] *** daniel-s left
[17:44] *** ptl left
[17:44] *** daniel-s joined
[17:44] *** flexibeast left
[17:44] *** Woodi left
[17:44] *** topo left
[17:44] *** cosimo left
[17:44] *** c1sung left
[17:45] *** Yappocall joined
[17:45] *** flexibeast joined
[17:45] *** Woodi joined
[17:45] *** topo joined
[17:45] *** cosimo joined
[17:45] *** c1sung joined
[17:47] *** sivoais_ left
[17:47] *** sivoais joined
[17:49] *** FireFly joined
[17:50] <[Coke]> I think the right answer here is to get LWP::Simple working, as I don't think this api that returns json is really using jsonrpc.

[17:53] <thou> [Coke]: is that comment related to URI, or did i miss something due to the net split?

[17:54] *** ptl joined
[17:55] <[Coke]> thou: you missed a conversion from over an hour ago about JSON::RPC::Client

[17:55] *** japhb_ joined
[17:56] <thou> ah, ok

[17:57] *** sivoais left
[17:57] *** sivoais joined
[17:59] <[Coke]> aloha: seen ronaldxs?

[17:59] <aloha> [Coke]: ronaldxs was last seen in  15574 days 17 hours ago .

[17:59] *** fhelmberger joined
[17:59] *** ptl left
[17:59] *** fhelmberger left
[18:00] *** sivoais left
[18:00] *** kikulli left
[18:00] *** sivoais joined
[18:01] <[Coke]> tadzik: ronaldxs has a fork of lwp simple that passes all tests.

[18:02] *** benabik left
[18:03] *** benabik joined
[18:09] <[Coke]> masak: if I "use LWP::Simple;\nuseJSON::Tiny;\n\nmy $ua = LWP::Simple.new\nmy $c..." I get a confused on line one, even though the error is a missing semicolon on line 4.

[18:09] *** ptl joined
[18:11] *** jeffreykegler left
[18:14] *** ptl left
[18:15] *** sivoais left
[18:15] *** sivoais joined
[18:16] *** REPLeffect joined
[18:16] *** colomon joined
[18:16] *** krunen joined
[18:18] * [Coke] slowly gets his perl6fu together.

[18:19] *** xinming joined
[18:22] *** xinming_ left
[18:24] <[Coke]> Timbus: have you looked into integrating MuEvent into Net::IRC::Bot?

[18:24] *** ptl joined
[18:29] *** ptl left
[18:30] *** spider-mario left
[18:38] *** gongyiliao joined
[18:40] *** ptl joined
[18:45] *** Circlepuller__ joined
[18:45] *** ptl left
[18:48] *** simcop2387 left
[18:48] *** Circlepuller_ left
[18:49] <dalek> perl6-roast-data: 3a5e6c8 | coke++ | p (2 files):

[18:49] <dalek> perl6-roast-data: today

[18:49] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/3a5e6c8b7e

[18:49] <dalek> perl6-roast-data: abc4e97 | coke++ | / (4 files):

[18:49] <dalek> perl6-roast-data: today

[18:49] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/abc4e97402

[18:50] *** simcop2387 joined
[18:51] <[Coke]> looks like rakudo is down a few tests today, some oddness in S32-exceptions/misc.rakudo

[18:53] <[Coke]> (which IS odd, because it says it passed more tests than before.)

[18:55] *** ptl joined
[19:00] *** ptl left
[19:04] *** ohm_ joined
[19:06] *** ohm_ left
[19:10] *** ptl joined
[19:13] *** fgomez joined
[19:15] *** ptl left
[19:19] *** att left
[19:26] *** ptl joined
[19:29] *** birdwindupbird joined
[19:30] *** att joined
[19:31] *** ptl left
[19:31] *** sweet|kid is now known as upasna

[19:41] <moritz> r: class A { }; class B does A { }

[19:41] <p6eval> rakudo 7b068e: OUTPUT«===SORRY!===␤A is not composable, so B cannot compose it␤at /tmp/_S6oXr4LVr:1␤»

[19:41] *** ptl joined
[19:42] <dalek> doc: 566a7a1 | moritz++ | lib/X/Composition/NotComposable.pod:

[19:42] <dalek> doc: X::Composition::NotComposable

[19:42] <dalek> doc: review: https://github.com/perl6/doc/commit/566a7a1ff4

[19:46] *** ptl left
[19:57] *** ptl joined
[20:00] *** sirrobert left
[20:01] *** ptl left
[20:05] *** stopbit_ left
[20:06] *** fgomez left
[20:07] *** SamuraiJack left
[20:07] *** stopbit joined
[20:08] *** mucker left
[20:12] *** ptl joined
[20:17] *** ptl left
[20:18] *** PacoAir_ joined
[20:20] *** PacoAir_ left
[20:21] *** PacoAir left
[20:21] *** simcop2387 left
[20:23] *** PacoAir joined
[20:23] *** simcop2387 joined
[20:27] *** ptl joined
[20:29] *** sorda joined
[20:32] *** sorda left
[20:32] <diakopter> the yapc crew is conspicuously quiet

[20:32] *** ptl left
[20:32] *** sorda joined
[20:33] <[Coke]> mmm.

[20:33] <[Coke]> I was just thinking that.

[20:33] <[Coke]> probably the crappy network.

[20:33] <diakopter> or something's afoot

[20:33] <[Coke]> thank goodness they all have git so they don't need the net. ;)

[20:33] <moritz> or probably some informal post-conference meetup

[20:33] <moritz> or they are just plain tired

[20:34] <japhb_> [Coke], I've got a few minutes now, do you still need help with panda problems?  (I still haven't backlogged at all today.)

[20:34] <moritz> many of the 6ers were in Perl before the YAPC, so they already had two intense days of conference behind them

[20:37] <[Coke]> japhb_: no, now I need MuEvent::run and Net::IRC::Bot::run to interact. ;)

[20:37] <japhb_> heh

[20:40] *** MayDaniel joined
[20:41] *** simcop2387 left
[20:41] *** simcop2387 joined
[20:41] *** [particle]1 is now known as [particle]

[20:41] *** DarthGandalf joined
[20:42] *** ptl joined
[20:43] <tadzik> I'm here

[20:43] *** sivoais left
[20:43] <tadzik> but I may suddenly get asleep at a random moment :)

[20:43] *** sivoais joined
[20:45] *** phenny left
[20:45] <diakopter> .u phenny

[20:45] *** phenny joined
[20:46] <japhb_> tadzik, I like that phrasing -- it's very evocative.  ;-)

[20:47] *** ptl left
[20:48] *** robins is now known as robinsmidsrod

[20:48] <tadzik> phenny: en pl "evocative"?

[20:48] *** birdwindupbird left
[20:48] <tadzik> oh :)

[20:49] *** ptl joined
[20:50] <phenny> diakopter: Sorry, no results for 'phenny'.

[20:50] <diakopter> O_O

[20:50] <japhb_> phenny is ... very lagged

[20:50] <tadzik> :)

[20:50] <diakopter> yeah but; it wasn't on the channel when I sent that

[20:50] <phenny> tadzik: "sugestywny" (en to pl, translate.google.com)

[20:50] <tadzik> phenny: why, thanks you

[20:51] *** sorda left
[20:52] *** FireFly left
[20:52] *** FireFly joined
[20:52] *** sorda joined
[20:54] *** ptl left
[20:54] * felher is now back at "home" and wants to thank all people he met on the yapc for a wonderful time :)

[20:55] *** sftp left
[20:55] <felher> s/on the/at the

[20:56] *** sorda left
[20:56] *** sftp joined
[21:04] *** skids left
[21:05] *** ptl joined
[21:09] *** ptl left
[21:12] *** ptl joined
[21:16] *** ptl left
[21:17] *** popl joined
[21:24] *** atrodo left
[21:25] *** kaare_ left
[21:27] *** colomon left
[21:27] *** ptl joined
[21:27] *** ptl left
[21:27] *** ptl joined
[21:32] *** ptl left
[21:34] *** spider-mario joined
[21:35] *** MayDaniel left
[21:42] *** ptl joined
[21:42] *** ptl left
[21:42] *** ptl joined
[21:47] *** ptl left
[21:50] *** gongyiliao left
[21:57] *** sirrobert joined
[21:58] *** ptl joined
[22:02] *** ptl left
[22:03] *** ptl joined
[22:05] <sirrobert> How do I sign a method signature with a role?

[22:05] <sirrobert> sub myfunc (MyRole $foo) { ... }

[22:05] <diakopter> with a flourish?

[22:06] <sirrobert> nope; with a faunish =)

[22:07] *** ptl left
[22:08] *** whiteknight joined
[22:09] <sirrobert> ah, no special syntax; my original attempt was just awkwardly tried

[22:09] *** whiteknight is now known as Guest77901

[22:09] <japhb_> sirrobert, heh, I was wondering what you were asking, because I was thinking "Looks right to me ..."  :-)

[22:10] <sirrobert> based on some debugging output I'd written +MyRole =)

[22:10] *** ptl joined
[22:10] *** ptl left
[22:10] *** ptl joined
[22:10] <sirrobert> (there was some error that said something like, "Class+Role")

[22:11] *** bluescreen10 left
[22:12] *** stopbit left
[22:12] <japhb_> sirrobert, you can get Class+Role if you apply the role to a particular object (with e.g. runtime but or does), rather than an entire type (in e.g. your class declaration)

[22:12] <sirrobert> ahh, got it

[22:12] <sirrobert> I was using "but", that must be why I got that 

[22:14] * mhasch is home from yapc::eu

[22:15] *** ptl left
[22:25] *** ptl joined
[22:25] *** ptl left
[22:25] *** ptl joined
[22:26] *** att left
[22:28] *** cognominal joined
[22:29] *** ptl left
[22:30] *** ptl joined
[22:30] *** ptl left
[22:30] *** ptl joined
[22:34] *** thelazydeveloper left
[22:35] *** ptl left
[22:42] *** jeffreykegler joined
[22:46] *** ptl joined
[22:46] *** ptl left
[22:46] *** ptl joined
[22:46] *** cognominal left
[22:50] *** ptl left
[22:53] *** ptl joined
[22:53] *** ptl left
[22:53] *** ptl joined
[22:55] *** skids joined
[22:57] *** ptl left
[22:59] *** ptl joined
[22:59] *** ptl left
[22:59] *** ptl joined
[23:02] *** whooguy joined
[23:03] *** whooguy left
[23:04] *** ptl left
[23:14] *** ptl joined
[23:19] *** ptl left
[23:19] *** tokuhiro_ joined
[23:23] *** thou left
[23:29] *** ptl joined
[23:29] *** ptl left
[23:29] *** ptl joined
[23:34] *** ptl left
[23:34] *** ptl joined
[23:34] *** ptl left
[23:34] *** ptl joined
[23:39] *** ptl left
[23:46] *** gongyiliao joined
[23:46] *** Woodi left
[23:46] *** Woodi joined
[23:50] *** ptl joined
[23:50] *** ptl left
[23:50] *** ptl joined
[23:55] *** ptl left
