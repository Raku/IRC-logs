[00:00] <lichtkind> [Coke]: so it say how utf will be normalized?

[00:01] *** whiteknight joined
[00:02] <[Coke]> s/utf/unicode/

[00:02] <[Coke]> though I'd probably just say "Strings", instead of "Unicode"

[00:05] *** sisar left
[00:06] *** sisar joined
[00:13] <lichtkind> [Coke]: yes i was bit lazy just try to find a good explanation for the tablets, the index is slowly maturing

[00:16] *** vlixes left
[00:28] *** tokuhirom joined
[00:29] <dalek> tablets: e358dfc | (Herbert Breunung)++ | docs/appendix- (2 files):

[00:29] <dalek> tablets: explain $?NF and repair some glossary links [Coke]++

[00:29] <dalek> tablets: review: https://github.com/perl6/tablets/commit/e358dfca67

[00:31] *** japhb_ left
[00:37] *** spider-mario left
[00:38] *** mspaulding left
[00:38] *** jaldhar joined
[00:41] *** benabik joined
[00:50] *** Khisanth left
[00:54] *** scott_ joined
[00:55] *** scott_ is now known as Guest73372

[00:55] *** thou left
[01:03] *** havenn left
[01:08] *** Khisanth joined
[01:10] <dalek> tablets: 69f6d32 | (Herbert Breunung)++ | docs/appendix- (2 files):

[01:10] <dalek> tablets: more crosslinking for subrules

[01:10] <dalek> tablets: review: https://github.com/perl6/tablets/commit/69f6d329dd

[01:10] <dalek> tablets: d247077 | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[01:10] <dalek> tablets: s/P5/perl 5/

[01:10] <dalek> tablets: review: https://github.com/perl6/tablets/commit/d247077ab8

[01:10] <dalek> tablets: 3856104 | (Herbert Breunung)++ | docs/appendix- (2 files):

[01:10] <dalek> tablets: adding eulers number to glossary and linking to ops who using it

[01:10] <dalek> tablets: review: https://github.com/perl6/tablets/commit/3856104a5b

[01:10] <dalek> tablets: 5b5069e | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[01:10] <dalek> tablets: more crosslinks for $*UIDs

[01:10] <dalek> tablets: review: https://github.com/perl6/tablets/commit/5b5069e244

[01:16] *** thou joined
[01:17] *** cognominal_ joined
[01:19] *** cognominal left
[01:20] *** lichtkind_ joined
[01:20] <sorear> colomon: hi

[01:20] <colomon> \o

[01:20] <colomon> kind of curious how you knew I just got home from rehearsal.  :)

[01:20] <sorear> can you reproduce the oddity from earlier?

[01:20] <sorear> colomon: I just got home from dinner

[01:21] <sorear> oh, you don't have time yet then?

[01:21] <sorear> no rush

[01:21] <colomon> give me a minute and I'll see if I can golf it for you.

[01:22] <colomon> (I can reproduce it, but it takes relatively a lot.  Though I guess if you downloaded ABC I could send you the broken script which produces the error without golfing.)

[01:22] <sorear> I have an ABC checkout

[01:22] *** lichtkind left
[01:22] <sorear> I haven't done anything with it

[01:23] *** lichtkind_ is now known as lichtkind

[01:25] *** thelazydeveloper left
[01:26] <colomon> sorear: just e-mailed you everything you should need to reproduce the problem (long version)

[01:26] <colomon> want me to try to golf it as well, or no?

[01:30] <sorear> No

[01:31] *** whiteknight left
[01:38] *** wolfman2000 joined
[01:47] *** bluescreen10 left
[01:53] *** s1n left
[01:54] *** lichtkind left
[02:01] *** tokuhirom left
[02:01] *** tokuhirom joined
[02:03] *** bluescreen10 joined
[02:06] *** tokuhirom left
[02:06] *** s1n joined
[02:18] *** spaceships left
[02:18] *** spaceships joined
[02:20] *** DarthGandalf left
[02:32] <dalek> roast: ebb9ec5 | coke++ | S0 (13 files):

[02:32] <dalek> roast: pugs unfudge

[02:32] <dalek> roast: review: https://github.com/perl6/roast/commit/ebb9ec5713

[02:50] *** orafu left
[02:50] *** orafu joined
[02:51] *** fgomez left
[02:59] *** thou left
[03:00] *** thou joined
[03:01] *** fgomez joined
[03:17] *** envi_ joined
[03:25] *** tyatpi joined
[03:33] *** skids left
[04:06] *** thou left
[04:24] *** bluescreen10 left
[04:34] *** wolfman2000 left
[04:34] *** uniejo joined
[04:43] *** preflex_ joined
[04:44] *** preflex_ is now known as preflex

[04:56] *** uniejo left
[04:59] *** birdwindupbird joined
[05:13] *** tyatpi left
[05:31] <moritz> \o

[05:31] <phenny> moritz: 24 Apr 23:10Z <pmichaud> tell moritz in commit a83a4b the resulting text reads "The Rakudo developers would like to add the organizers from Oslo.pm".  That doesn't read quite right to me -- what are we wanting to add them to?  ;-)

[05:32] *** tyatpi joined
[05:40] *** sergot left
[05:43] <dalek> rakudo/nom: 1a7e4df | moritz++ | docs/announce/2012.04.1:

[05:43] <dalek> rakudo/nom: [announce] wording fix from pmichaud++

[05:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1a7e4df89c

[05:44] *** tyatpi left
[05:54] *** wtw joined
[05:56] *** NamelessTee joined
[05:56] *** kaleem joined
[05:57] *** lestrrat left
[05:57] *** lestrrat joined
[05:59] *** spaceships left
[06:21] *** sisar left
[06:41] *** replore_ joined
[06:50] <dalek> specs: 053a580 | (Frederik Schwarzer)++ | S32-setting-library/Str.pod:

[06:50] <dalek> specs: [S32] Grammar fix.

[06:50] <dalek> specs: review: https://github.com/perl6/specs/commit/053a580612

[06:50] <dalek> specs: 17a1305 | (Frederik Schwarzer)++ | S32-setting-library/Str.pod:

[06:50] <dalek> specs: [S32] Typo fix.

[06:50] <dalek> specs: review: https://github.com/perl6/specs/commit/17a1305def

[06:50] <dalek> specs: a835127 | moritz++ | S32-setting-library/Str.pod:

[06:51] <dalek> specs: Merge pull request #11 from icwiener/master

[06:51] <dalek> specs: 

[06:51] <dalek> specs: Just some minor stuff I saw while reading.

[06:51] <dalek> specs: review: https://github.com/perl6/specs/commit/a835127092

[06:57] *** cognominal_ left
[06:57] *** cognominal_ joined
[07:00] *** brrt joined
[07:09] *** sisar joined
[07:16] <frettled> phenny: tell lichtkind Regarding the use of #foo to access an <a name> element in HTML: it is standard behavior that you're complaining about, it's what everybody expects to happen.  There is of course no technical problem in having the <a name> element in another place than the header, you could put a hundred thousand lines of text inbetween the two if you wanted to.  But that's bad design :)

[07:16] <phenny> frettled: I'll pass that on when lichtkind is around.

[07:26] *** sisar left
[07:30] *** overrosy left
[07:32] *** NamelessTee left
[07:41] *** Khisanth left
[07:42] *** Khisanth joined
[07:44] *** NamelessTee joined
[07:52] *** replore_ left
[07:52] *** replor___ joined
[07:55] *** ggoebel__ left
[07:58] *** ggoebel__ joined
[08:05] *** replore_ joined
[08:05] *** replor___ left
[08:29] *** cognominal_ left
[08:29] *** cognominal_ joined
[08:40] *** daxim joined
[08:42] *** agentzh joined
[08:43] *** agentzh left
[08:43] *** agentzh joined
[08:45] *** dakkar joined
[08:47] <eiro> tadzik, ack

[08:58] *** dagelf left
[08:58] *** kresike joined
[09:03] <moritz> r: https://gist.github.com/2484152

[09:04] <p6eval> rakudo 1a7e4d: OUTPUT«94␤»

[09:04] *** replore_ left
[09:04] <masak> \o/

[09:05] <masak> of course, as soon as I went to bed, I thought of improvements.

[09:07] <arnsholt> moritz: I've started sketching a fix to your sqlite problem

[09:07] <moritz> r: my $c = 1; $c = 2 * $c + 1; for ^5; say $c

[09:07] <p6eval> rakudo 1a7e4d: OUTPUT«===SORRY!===␤Missing block␤at /tmp/PlOpkKI8B5:1␤»

[09:07] <moritz> r: my $c = 1; $c = 2 * $c + 1 for ^5; say $c

[09:07] <p6eval> rakudo 1a7e4d: OUTPUT«63␤»

[09:07] <arnsholt> It'll probably be a bit longer before it's all done, but it's mostly a matter of implementation I think

[09:07] <moritz> arnsholt: ok. I don't plan to hold off the release for it

[09:08] <moritz> I'll release as soon as I've got a +1 from any <pmichaud jnthn>

[09:08] <masak> moritz: it's ($c + 1) * 2

[09:08] <moritz> r: my $c = 1; $c = 2 * $c + 2 for ^5; say $c

[09:08] <p6eval> rakudo 1a7e4d: OUTPUT«94␤»

[09:08] <masak> moritz: that's the inverse of $x / 2 - 1

[09:08] <moritz> right

[09:09] * moritz finds his solution much mor straight forward and readable than masak++'s

[09:09] <masak> the function replace-var is what I had to write to turn the AST "inside out" in the right way.

[09:09] <masak> moritz: yeahbut.

[09:09] <moritz> but of course it's much less interesting :-)

[09:09] <masak> the objective of this exercise is not to compute the inverse yourself.

[09:09] <masak> state the problem *forwards* and have the computer do the numbers.

[09:09] <arnsholt> moritz: Yeah, getting it shipped will depend on my tuit supply, so definitely don't wait for it

[09:11] <moritz> r: sub guard($x) { $x / 2 - 1}; sub all_guards($x is copy) { $x = guard($x) for ^5 }; for 0..* { if all_guards($_) == 1 { .say; last } }

[09:11] <p6eval> rakudo 1a7e4d: OUTPUT«(timeout)»

[09:12] <moritz> r: sub guard($x) { $x / 2 - 1}; sub all_guards($x is copy) { $x = guard($x) for ^5 }; for 0..100 { if all_guards($_) == 1 { .say; last } }

[09:12] <p6eval> rakudo 1a7e4d:  ( no output )

[09:12] <moritz> r: sub guard($x) { $x / 2 - 1}; sub all_guards($x is copy) { $x = guard($x) for ^5 }; say all_guards(93)

[09:12] <p6eval> rakudo 1a7e4d: OUTPUT«0.96875 0.96875 0.96875 0.96875 0.96875␤»

[09:13] <moritz> oh

[09:13] <moritz> r: sub guard($x) { $x / 2 - 1}; sub all_guards($x is copy) { $x = guard($x) for ^5; $x }; for 0..100 { if all_guards($_) == 1 { .say; last } }

[09:13] <p6eval> rakudo 1a7e4d: OUTPUT«94␤»

[09:14] <masak> heh.

[09:17] <moritz> r: sub guard($x) { $x / 2 - 1}; sub all_guards($x is copy) { $x = guard($x) for ^5; $x }; say (0..*).first: { all_guards($_) == 1 }

[09:17] <p6eval> rakudo 1a7e4d: OUTPUT«94␤»

[09:19] <masak> I'm in a superposition of thinking "straightforward" and "brute-force" ;)

[09:19] <masak> I guess I have to make a module of my symbol handling, and then I can solve the problem in three lines ;)

[09:20] <moritz> aren't you supposed to tweak the language until you can? :-)

[09:20] <masak> modules are language tweaks ;)

[09:21] <moritz> when I wrote Math::Expression::Evaluator, I had to constrain myself not to turn it into a CAS :-)

[09:21] <masak> 'use Algebra::Symbolic; my Var $x .= new; my $y = $x; $y = guard($y) for ^5; solve($y == 1); say $x'

[09:22] <masak> ok, five lines ;)

[09:22] <moritz> plus the definition of &guard

[09:22] <masak> I can make it three if I eliminate $y and write 'solve( guard(guard(guard(guard(guard($x))))) == 1 );'

[09:22] <masak> right.

[09:32] <Ulti> there is symbolic algebra in Rakudo???

[09:33] <timotimo> if you can implement it in perl6, it'll be in rakudo, sure

[09:33] <masak> Ulti: well, the point is that you can make it easily as I do in https://gist.github.com/2484152

[09:33] <masak> Ulti: it's not a complete solution by far, but it solves the problem at hand.

[09:33] <timotimo> cute

[09:34] <moritz> the basic idea is the same as "expression templates" in C++

[09:34] <masak> Ulti: what makes it easy is that you can easily co-opt all the operators to not calculate things right away, but to form syntax trees which you can then manipulate any which way you want.

[09:34] <moritz> you overload operators to return a data structure that returns the operation and the operands

[09:34] <frettled> guard⁵, as I wrote the other day, would be kindof cool .)

[09:35] <masak> std: sub postfix:<⁵>($) {}

[09:35] <p6eval> std fab64fc: OUTPUT«ok 00:00 41m␤»

[09:35] *** noam left
[09:35] *** noam joined
[09:35] <moritz> p6: say so '⁵' ~~ /<:L>/

[09:35] <p6eval> rakudo 1a7e4d, niecza v16-23-gaa61ed5: OUTPUT«False␤»

[09:35] <p6eval> ..pugs: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20120203/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** Can't locate P…

[09:35] <moritz> yes, should work

[09:36] <masak> frettled: to me, that's too sugary-sweet, but YMMV. :)

[09:36] <timotimo> what does :L match?

[09:36] <masak> letters?

[09:36] <moritz> r: multi sub postfix:<⁵>($x) { $x ** 5 }; say 2⁵

[09:36] <p6eval> rakudo 1a7e4d: OUTPUT«32␤»

[09:36] <moritz> a single letter, to be precise

[09:37] <Ulti> is letter defined as from any language?

[09:37] <moritz> r: multi sub postfix:<⁵>($x) { $x ** 5 }; say 2⁵⁵

[09:37] <p6eval> rakudo 1a7e4d: OUTPUT«33554432␤»

[09:37] <frettled> masak: thank goodness, I was worried that you might suggest that it was aspartame sweet…

[09:37] <moritz> that doesn't assoc right, does it?

[09:37] <masak> r: multi sub postfix:<⁵>($x) { $x ** 5 }; my &id = -> $x { $x }; multi infix:<**>(&code, 0) { &id }; multi infix:<**>(&code, Int $n where * > 0) { -> $x { &code((&code ** ($n - 1))($x)) } }; say &guard⁵(94)

[09:37] <p6eval> rakudo 1a7e4d: OUTPUT«use of uninitialized variable $x of type Nil in numeric context  in method Numeric at src/gen/CORE.setting:653␤␤Method 'postcircumfix:<( )>' not found for invocant of class 'Int'␤  in <anon> at src/gen/BOOTSTRAP.pm:815␤  in any <anon> at src/gen/BOOTSTRAP.pm:811␤  …

[09:38] <masak> :/

[09:38] <masak> oh!

[09:38] <masak> forgot &guard, didn't I? :)

[09:38] <masak> r: multi sub postfix:<⁵>($x) { $x ** 5 }; my &id = -> $x { $x }; multi infix:<**>(&code, 0) { &id }; multi infix:<**>(&code, Int $n where * > 0) { -> $x { &code((&code ** ($n - 1))($x)) } }; sub guard($x) { $x / 2 - 1 }; say &guard⁵(94)

[09:38] <p6eval> rakudo 1a7e4d: OUTPUT«1␤»

[09:38] <masak> \o/

[09:38] <Ulti> moritz: this is cool http://perlgeek.de/blog-en/perl-6/physical-modelling.html

[09:39] <moritz> Ulti: I'm glad somebody likes it

[09:39] * masak likes it too

[09:39] <moritz> Ulti: I presented it as YAPC::EU 2010 in Pisa, and the echo was mixed

[09:39] <Ulti> really? surely the worst reaction was *meh* rather than negative?

[09:40] <moritz> Ulti: the worst reaction was from somebody who hadn't read the abstract of my talk, and execpted something very different :-)

[09:40] <Ulti> heh so the standard mixed reaction then

[09:40] <Ulti> this doesn't solve all my problems??? why did I sit through this, you are worthless!

[09:40] <arnsholt> moritz: Oooh, workaround for you (maybe)

[09:41] <arnsholt> Try doing @conn[1] = OpaquePointer and then calling sqlite3_open

[09:41] <frettled> masak: so now you just need to generalize that code to work for all of ⁰⁻⁹ ;)

[09:41] <Ulti> moritz: that style of programming would be really great for writing control systems

[09:41] <moritz> Ulti: the talk was titled "Perl 6 and the real world", and that somebody expected it to be about real-life experience with Perl 6, not about modelling real life :-)

[09:42] <arnsholt> Ah, nm. Won't work after all

[09:42] <masak> frettled: I bet it could be done via a macro :P

[09:42] <arnsholt> OTOH, it might give you a segfault =)

[09:42] <timotimo> moritz: that's a little bit misleading, i agree

[09:43] <timotimo> but that's what abstracts are for, so there's no reason to let that confuse you

[09:43] <moritz> arnsholt: it doesn't change anything, apparently

[09:43] <frettled> masak: \o/

[09:43] <Ulti> with word modelling added between 'and' and 'the' might have avoided that I guess

[09:43] <frettled> masak: A macro with a lookup table! ;)

[09:43] <arnsholt> moritz: Right. I get a segfault locally if I just assign to index 1 and fetch index 0

[09:44] <moritz> arnsholt: ah right, if I remove index 0, I get a segfault too

[09:45] <arnsholt> I should probably try to fix that ^_^

[09:45] <moritz> Ulti: I was playing with people's expectations deliberately, I confess. But I expected them to read the abstract, so that their expectations and mine could go into sync before the talk :-)

[09:46] <frettled> masak: writing the code for handling 2⁵⁵ correctly (and not as (2⁵)⁵) would probably be a nice kata

[09:47] <timotimo> moritz: have you done anything with Math::Model after that? have you tried if it got any faster? or if it works on niecza? did anyone build that chaotic model?

[09:48] <moritz> timotimo: well, for one the memory leaks stopped :-)

[09:48] <moritz> timotimo: and I think I made it work on rakudo/nom

[09:48] <moritz> it didn't run on niezca last I tried

[09:48] <moritz> but that was quite a while ago

[09:49] <masak> frettled: I don't see how it could be without serious magic.

[09:49] <timotimo> mhm

[09:49] <masak> given that each ⁵ is one postfix operator, I mean.

[09:50] <moritz> no problem with an 'is parsed' macro

[09:50] <moritz> which just matches all such numerical powers in one go, and code-gens them with the right associativity

[09:50] <frettled> There was something like that I was hoping for.

[09:51] <timotimo> is the syntax and semantics needed for that defined/modeled/explained yet?

[09:52] <moritz> ok, niecza runs Math::RungeKutta (and does so fast :-)

[09:52] <moritz> timotimo: not in detail

[09:53] <moritz> niecza hiccups on one of the xml-writer tests

[09:53] <moritz> but that's just an issue with the tests, not the module (uses $str.match(:x(2), rx/.../)

[09:59] *** Khisanth left
[10:00] <daxim> follow-up from yesterday:  https://rt.perl.org/rt3/Ticket/Display.html?id=108470#txn-1097430      # happy end

[10:04] <masak> this is very interesting: https://www.schneier.com/blog/archives/2012/04/amazing_round_o.html

[10:04] <masak> moritz, you need to read/watch that. :)

[10:05] <moritz> masak: can't watch right now while at work :-)

[10:07] <moritz> masak: but the combination of prisoner's dilemma and games brought back memories of a very nice game, https://en.wikipedia.org/wiki/Hoity_Toity

[10:08] <masak> moritz: I'm watching them now. it's fascinating.

[10:08] <moritz> each round, the players can chose either between competing, stealing or playing detective. It's quite fun to play (though I don't have it at home :/)

[10:09] <masak> moritz: I hadn't really grok'd how fragile trust is in this kind of contest.

[10:09] <masak> honestly, I wouldn't want to play this kind of game against someone who holds a grudge, and who can't compartmentalize things that happen in a game. :)

[10:10] <moritz> same here

[10:10] <tadzik> eiro: ack as in ACK or as in "aargh"? :)

[10:10] *** Guest73372 left
[10:10] <moritz> so, I'll never play it against my wife :-)

[10:10] <masak> ;)

[10:11] <masak> moritz: I haven't watched all videos yet. but so far, all contestants say the same thing to each other: "let's be reasonable. let's both choose 'split'."

[10:11] <masak> so clearly, the words are meaningless -- and most likely, everybody knows this.

[10:12] <masak> and it's all in the nonverbal communication.

[10:12] <moritz> and they have no way to enforce it :-)

[10:13] *** jferrero joined
[10:13] <moritz> oh, I just got bitten by the lack of filling positionals by name :-)

[10:13] <masak> :P

[10:13] <moritz> the Math::Model tests relied on it

[10:14] <moritz> and since it's a method call, no error was thrown due to excess named args

[10:15] <masak> interesting. there seems to be some correlation between contestant A being very trustworthy and contestant B defecting -- and then feeling genuine regret afterwards.

[10:18] *** spider-mario joined
[10:18] <masak> also interesting. there's only one reason to split (because you trust the other to do so), but two reasons to steal (either because you think the other trusts you to split, or because you think the other will double-cross you and steal).

[10:19] *** Khisanth joined
[10:20] <moritz> r: class A { has %.h; method x { %.h<a> } }; say A.new(h => { a => 5 }).x

[10:20] <p6eval> rakudo 1a7e4d: OUTPUT«5␤»

[10:20] <moritz> r: class A { has %.h; method x { %.h<a> } }; say A.new(:h{ a => 5 }).x

[10:20] <p6eval> rakudo 1a7e4d: OUTPUT«5␤»

[10:24] *** GlitchMr joined
[10:24] <moritz> and the second problem with Math::Model was that it used    defined $v ?? ... !! ... ;

[10:25] <moritz> which stopped working after we switched &defined to be a listop

[10:25] <moritz> so, now it works again on nom

[10:28] <moritz> phenny: tell sorear it would be nice of niecza's lives_ok and eval_lives_ok could diag() the exception when one is thrown

[10:28] <phenny> moritz: I'll pass that on when sorear is around.

[10:30] <masak> moritz: I watched all the videos. make sure you watch them when you're $home. worth it.

[10:47] <dalek> nqp: a04da69 | (Arne Skjærholt)++ | src/6model/reprs/CArray.c:

[10:47] <dalek> nqp: Make sure initial child_objs in CArray is zeroed out.

[10:47] <dalek> nqp: review: https://github.com/perl6/nqp/commit/a04da690b8

[10:59] *** mucker joined
[10:59] *** mucker left
[11:00] *** mucker joined
[11:04] *** lestrrat left
[11:05] *** lestrrat joined
[11:05] *** brrt left
[11:07] *** mucker left
[11:07] *** mucker joined
[11:07] *** mucker left
[11:08] *** mucker joined
[11:09] *** pernatiy left
[11:27] <masak> heh. p6 split <=> p5 split. but p6 comb <=> p5 m//g.

[11:27] <eiro> tadzik, ACK: there is a chance you'll be there so i will try to spare some extra boxes 

[11:30] <masak> \o/

[11:33] <tadzik> yay

[11:34] <moritz> masak: having some research and experience in the back of my mind, I'd be very sure to shake hands with the other player before they pick the ball

[11:35] <moritz> masak: at least in .de there seems to be much more reluctance to break word+handshake than just the word

[11:35] <masak> ooh

[11:35] <masak> but wait till you see the last video ;)

[11:38] <eiro> is panda still used ?

[11:39] <tadzik> sure

[11:39] <tadzik> and quite actively developed these days :)

[11:39] <eiro> cool

[11:40] <eiro> can panda install the perl6 toolset? 

[11:41] <eiro> parrot+rakudo ? 

[11:41] <tadzik> nope

[11:41] <tadzik> panda is written in Perl 6 and installs stuff from modules.perl6.orgj

[11:41] <masak> probably better.

[11:41] <tadzik> and it can install itself too :)

[11:41] <masak> proto auto-installed Rakudo for you.

[11:42] *** kresike left
[11:42] <eiro> panda isn't the proto successor ? 

[11:42] <masak> it's the neutro successor, which was the proto successor ;)

[11:43] <tadzik> well, it's a bit like pls successor which was proto successor, because it didn't want to be like neutro, which was proto successor

[11:43] <tadzik> or something

[11:43] <tadzik> I think there's more than one axis

[11:43] <eiro> well ... don't you think panda should be shipped with a perl6 installer in the bootstrap ? 

[11:44] <tadzik> no

[11:44] <tadzik> do cpan clients install Perl 5?

[11:44] <eiro> ok ... so what's the easiest way to install perl6 ?

[11:44] <tadzik> installing Rakudo Star

[11:44] <eiro> tadzik, makes sense: question cancelled, your honnor 

[11:44] <tadzik> which gives you panda for free, iirc

[11:45] <eiro> ahhh! this way :) 

[11:45] <eiro> ok thanks 

[11:45] <tadzik> aye :)

[11:46] <mikec> where does panda install modules to?

[11:46] <tadzik> ~/.perl6/

[11:47] <tadzik> but we're thinking about that one

[11:47] <mikec> ah ok

[11:48] <mikec> in wondered if you could install rakudo star, upgrade rakudo and parrot, and still use panda to install modules

[11:48] <tadzik> sure

[11:49] <tadzik> but note that modules precompiled for the old rakudo won't work with new rakudo

[11:49] <tadzik> and you'll see fireworks :)

[11:49] <mikec> yeah, i found that problem

[11:49] <tadzik> one should probably write something that rebuilds all modules if necessary

[11:49] <tadzik> like panda --rebuild-ALL-THE-THINGS

[11:49] <mikec> but i fetched them from source rather than using panda, which would have been easier

[11:50] <mikec> heh

[11:50] <tadzik> if you precompile them the problem stays

[11:50] <tadzik> you can always find ~/.perl6/ -name '*.pir' -delete

[11:50] <mikec> aha

[11:50] <tadzik> and lose plenty of speed :/

[11:51] <mikec> how would a --rebuild-everything work? just go through everything in .perl6?

[11:53] <masak> by the way, hakank++ built a MiniZinc model for the guards-and-apples problem: http://www.hakank.org/minizinc/guards_and_apples2.mzn

[11:54] <tadzik> mikec: I guess so

[11:54] <mikec> i guess there's no easy way to check whether the precompiled code is out of date

[11:54] <eiro> this page is outdated, right ? http://rakudo.org/how-to-get-rakudo-nom/

[11:55] <eiro> i mean: nom is the current branch now 

[11:55] <masak> eiro: well, it says that.

[11:55] <masak> do you have a really old cache?

[11:55] <masak> it's even in the URL ;)

[11:56] <mikec> heh

[11:56] <masak> or, maybe you just mean that `git checkout nom` is rather redundant?

[11:56] *** mtk joined
[11:56] <masak> it is. it should be a no-op.

[11:57] <eiro> redundant for you and disturbing for a newcomer

[11:57] <eiro> no ?

[11:57] *** tyatpi joined
[11:58] *** kresike joined
[11:58] <mikec> i wouldn't say so. just makes it extra clear which branch you're getting?

[11:58] <eiro> i mean: there is no "perl6 for impatients" in the perl6.org homepage

[11:58] <mikec> although it's probably an accident

[11:59] <eiro> there is no "welcome" banner (i really think like: and if i was a newbie)

[11:59] <mikec> ah

[12:00] <eiro> i'm installing perl6 (again :) ) so i'll try to provide a pr 

[12:00] <masak> "Programming language tutorials shouldn't be about learning languages. They should be about something interesting, and you learn the language in the process." -- http://prog21.dadgum.com/67.html

[12:01] *** NamelessTee left
[12:05] *** pernatiy joined
[12:13] *** GlitchMr left
[12:15] *** ab5tract joined
[12:18] *** NamelessTee joined
[12:20] *** jaldhar left
[12:25] *** skids joined
[12:32] *** bluescreen10 joined
[12:35] *** lichtkind joined
[12:36] <lichtkind> hai

[12:36] <phenny> lichtkind: 07:16Z <frettled> tell lichtkind Regarding the use of #foo to access an <a name> element in HTML: it is standard behavior that you're complaining about, it's what everybody expects to happen.  There is of course no technical problem in having the <a name> element in another place than the header, you could put a hundred thousand lines of text inbetween the two if you wanted to.  But that's bad design :)

[12:37] <lichtkind> frettled: si ID is better?

[12:38] <frettled> frettled: What is "si ID"?

[12:38] <frettled> hups

[12:39] <frettled> Nice typo :)

[12:40] *** zamolxes joined
[12:41] *** pernatiy left
[12:41] <flussence> well you don't need a dummy <a> element to use id=, so I'd say yes

[12:41] <frettled> uh?

[12:41] <frettled> Ah, so lichtkind is asking whether you can use the ID attribute instead of <a name="foo"></a> to make http://example/#foo reach the foo section?  No, that is not how it works.

[12:41] *** brrt joined
[12:41] <frettled> If you want _that_ to work, you need to employ CSS hiding/unhiding and javascript, which will certainly break navigation.

[12:42] *** pernatiy joined
[12:42] <flussence> are you talking about some sort of fancy thing using multiple pages?

[12:42] <frettled> flussence: no

[12:42] <frettled> flussence: I'm not sure if you caught the original discussion yesterday evening, did you?

[12:42] <flussence> I'm lost, I probably missed something

[12:42] <masak> I had the impression that the 'id' attribute more or less supplanted named anchors.

[12:42] * flussence scrollbacks

[12:43] <masak> at least in some best-practices sense.

[12:43] <frettled> masak: the ID attribute provides a way of specifying an identificator for an element, which can later be used by e.g. CSS to specify properties, or by javascript to manipulate the DOM.

[12:44] <frettled> flussence: http://irclog.perlgeek.de/perl6/2012-04-24#i_5489786

[12:45] <masak> frettled: yes, but they also function as anchors, no?

[12:45] <frettled> masak: it is possible that this has been specified to work as an anchor as well

[12:45] <lichtkind> frettled: i used previously name and they talekd so long into me that i started do <a id="Z-op"/> which works too

[12:45] *** pernatiy left
[12:45] <masak> frettled: I'm pretty sure they do, and that it's quite a conscious feature.

[12:45] *** pernatiy joined
[12:45] <lichtkind> frettled: saying that that is the standard

[12:45] <frettled> http://www.w3.org/TR/html401/struct/links.html#anchors

[12:45] <frettled> both seem to be standard now, I'd missed that

[12:46] <flussence> I'm pretty sure even IE6 supports id= as a fragment identifier

[12:46] <frettled> but it has nothing to do with lichtkind's problem

[12:46] <frettled> In fact, to get the behaviouf lichtkind desires, the ID attribute is wholly unsuitable, only <a name> will work

[12:46] <frettled> s/iouf/iour/

[12:47] <frettled> But then again, if I understood lichtkind's wishes correctly, those wishes are against BCP :)

[12:48] *** pernatiy left
[12:48] <lichtkind> frettled: i just want normal inter noc anchors

[12:48] *** pernatiy joined
[12:49] <lichtkind> people just suggested here that ID is best practice

[12:49] <lichtkind> i mean inner doc anchors

[12:50] <frettled> lichtkind: ah, you appeared to say that you wanted clicking on such a link to show you the lines _above_ the anchor as well

[12:50] <frettled> lichtkind: which is the opposite of normal

[12:50] <frettled> The ones on the webpage discussed _are_ behaving normally.

[12:51] <flussence> <h1 id="w">W</h1> is more idiomatic than <h1><a name="w"></a>W<h1>, if that's what you're asking...

[12:51] <frettled> flussence: well, that's debatable

[12:52] <frettled> (when I learned to write HTML, it was <a name="w"></a>\n<h1>W</h1>, though)

[12:52] <lichtkind> frettled: allright i didnt know what your anserwing, that was my first discussiom , yes yesterday i wanted to move the anchors so that more of the page is visible, its just UI thing asking you as user 

[12:52] *** leprevost left
[12:52] <lichtkind> if your not confused

[12:53] <lichtkind> if you see the previous item then you clicked on

[12:53] <flussence> oh, I see what you want now...

[12:54] <frettled> If there is a long list of things, and you use internal anchors to point to specific points in that list, that is a sign that your document is too long, and needs to be split into smaller documents.

[12:55] <masak> er. I wouldn't move the anchor away from the element it's referencing. that way lies madness.

[12:55] <frettled> There is nothing wrong with serving the whole document for certain uses, for e.g. print (which is something I hope will disappear).

[12:55] <masak> also, it seems to be a clear mixing-up of content and presentation.

[12:55] <frettled> masak: yup

[12:57] <frettled> masak: regarding moving the anchor away: the element it's referencing is the element it's closest to :)  Sometimes you may want a graphical element before the sub heading or whatever, and then it makes sense to have the anchor before the image, not after.

[12:58] <lichtkind> frettled: the document is long because perl 6 has so many builtins, talk with larry :)

[12:58] *** JimmyZ joined
[12:58] <frettled> lichtkind: I was speaking generally.

[12:59] <frettled> lichtkind: but are you saying that TimToady is maintaining that web page?  :)

[12:59] <lichtkind> no that i just write what he pulles out

[13:00] <frettled> So splitting the document into smaller documents, e.g. one per letter of the alphabet, is for you to do, should you choose to take that piece of advice :)

[13:02] <flussence> if you *really* want to show some scrollback then there's a nasty CSS hack for that: give each heading a big top padding and an equal-but-negative top margin.

[13:02] *** PacoAir joined
[13:02] <frettled> ooh

[13:02] *** dakkar left
[13:02] <flussence> (but if you go that route, I'd recommend you put <section id=> tags in instead and put the spacing on those, so it doesn't mess up any the headings already have

[13:02] <frettled> I'd rather put some context in the form of forward and back links with minor snippets of what you're missing out on

[13:02] <flussence> *)

[13:06] <flussence> .oO( in an ideal world we'd only need "h1:target { anchor-offset: 5em }" or something )

[13:06] <lichtkind> frettled: this way i get easily over 100 pages which doesnt sounds nice to me

[13:08] <frettled> lichtkind: why?  There are 26 letters in the alphabet, and you have one section for specials

[13:08] <frettled> That looks like 27 documents to me, by separating in the same way that you use internal anchors today.

[13:08] <frettled> bonus: quicker loading/display times

[13:09] <lichtkind> frettled: we have 7 apendices +10 tablets if splitting them all with that logic i get over 100 pages very fast

[13:09] <frettled> lichtkind: okay, but why is that a problem?

[13:10] <lichtkind> we using html now which is much faster than socialtext was

[13:11] <lichtkind> frettled: i see no problem in some kb of text, i just asked if its more pleasent if the item you click to is not on the uppermost border

[13:11] <frettled> lichtkind: and it generally is not more pleasant

[13:11] *** replore_ joined
[13:11] *** fgomez left
[13:13] <lichtkind> frettled: allright so it stays on top boder, thanks :)

[13:14] *** DarthGandalf joined
[13:16] <frettled> lichtkind: np, glad to be of annoying assistance :)

[13:17] <lichtkind> haha

[13:18] <lichtkind> frettled: please have a look http://tablets.perl6.org

[13:18] <frettled> lichtkind: any change since five minutes ago?

[13:20] <lichtkind> no :)

[13:20] <lichtkind> but soon :)

[13:23] <dalek> tablets: a43824e | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[13:23] <dalek> tablets: polish entries for chrs, ords, orelse, andthen

[13:23] <dalek> tablets: review: https://github.com/perl6/tablets/commit/a43824e43a

[13:23] <dalek> tablets: 339d632 | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[13:23] <dalek> tablets: add trim and some crosslinks

[13:23] <dalek> tablets: review: https://github.com/perl6/tablets/commit/339d63231c

[13:23] <dalek> tablets: 3d73921 | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[13:23] <dalek> tablets: bringing more of S32/Str

[13:23] <dalek> tablets: review: https://github.com/perl6/tablets/commit/3d739215e9

[13:24] *** benabik left
[13:25] <masak> lichtkind: re http://tablets.perl6.org/tablet-6-blocks.html -- "2.3.2 continue" -- continue doesn't exist anymore. maybe you're thinking of 'next' for jumping an iteration ahead in loops, or 'proceed' for not automatically breaking out of a 'when' block.

[13:25] * [Coke] learns something new (almost) every day here. I had no idea the #foo in urls now worked with ids.

[13:26] <masak> [Coke]: once you know it, it's easy to see why they're spelled '#foo' in CSS too, though.

[13:27] <masak> I think it's a really established feature. like, HTML 4.

[13:27] <masak> or something.

[13:27] <lichtkind> masak: thanks but  i didnt looked into that since years, i currently busy bringing index uptodate and then going on with lower nimber tablets

[13:27] <masak> lichtkind: ok. just letting you know there's an error there. do with that information what you will.

[13:29] <lichtkind> masak: i checked index b i would but that out now, but it wasnt in there , the blocks tablets which will be rewritten anyway, it just has a sceleton that i cen set the right links into it

[13:31] <masak> it's a bit hard to understand what you mean when you're writing underwater. but I think I got the gist of it.

[13:35] *** JimmyZ left
[13:35] *** mucker left
[13:47] *** kaleem left
[13:52] <dalek> tablets: 53a56f1 | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[13:52] <dalek> tablets: more crosslinks+small format fixes

[13:52] <dalek> tablets: review: https://github.com/perl6/tablets/commit/53a56f1683

[13:52] <lichtkind> masak: i under blub you soblub either

[13:55] *** p6eval left
[13:55] *** d4l3k_ joined
[13:56] *** dalek left
[13:57] *** d4l3k_ is now known as dalek

[13:58] * masak .oO( the Blub paradox )

[13:59] *** wtw left
[14:00] *** p6eval joined
[14:01] *** ChanServ sets mode: +v p6eval

[14:01] * ab5tract likes the Perl 6 Tablets :D

[14:02] <masak> ab5tract! \o/

[14:03] <dalek> tablets: a91b786 | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[14:03] <dalek> tablets: no more ucfirst but titlecase

[14:03] <dalek> tablets: review: https://github.com/perl6/tablets/commit/a91b786a16

[14:03] <lichtkind> ab5tract: thank you

[14:03] <ab5tract> lichtkind++ :)

[14:04] <ab5tract> wrote my first perl 5 in a decade. was fun to get back into a perl way of thinking.

[14:04] <lichtkind> ab5tract: how much you read?

[14:04] <ab5tract> though i had completely forgotten about the referencing system :/

[14:05] <ab5tract> lichtkind, just started on the history section

[14:05] <lichtkind> ab5tract: perl 6 has no reference :)

[14:05] <lichtkind> ab5tract: this i consider not even started :9

[14:05] <lichtkind> but thanks for double karma

[14:05] <lichtkind> but i have to go

[14:05] <lichtkind> shopping time

[14:06] <ab5tract> lots of stuff to add to history (where i might actually be of some use)

[14:06] <lichtkind> some food, and cycle parts

[14:06] <lichtkind> ab5tract: that would be grat

[14:06] <lichtkind> ab5tract: im most pouf of http://tablets.perl6.org/appendix-a-index.html

[14:06] <lichtkind> but just look into our git repo and clone it or get commit bits

[14:08] <ab5tract> lichtkind, sure.

[14:09] <dalek> tablets: 1f8d1f4 | (Herbert Breunung)++ | docs/ (2 files):

[14:09] <dalek> tablets: added link to github repo

[14:09] <dalek> tablets: review: https://github.com/perl6/tablets/commit/1f8d1f42b7

[14:09] <masak> lichtkind: in http://tablets.perl6.org/tablet-1-language-design.html -- "But every context is its own domain, optimized to solve the problems of that domain." -- what does this mean?

[14:10] <masak> how is a context its own domain?

[14:10] <lichtkind> masak: im gone and dont remember anyway :)

[14:10] <masak> it sounds almost, but not quite, completely meaningless to me.

[14:11] <lichtkind> masak: maybe just bad translation, these are the parts i wrote in geman

[14:11] <masak> a bit like "Every situation is its own state." or "Every country is its own region."

[14:12] <flussence> .oO( something something lexical context )

[14:13] <masak> under "One pass parsing" on the same page: "As a nice side effect: syntax errors can only damage the understanding of small units." -- I'm not sure that follows from one-pass parsing.

[14:15] <masak> what TimToady keeps putting forward as the immediate advantage of one-pass parsing is: "You always know which language you're parsing."

[14:15] <masak> the classical counterexample from Perl 5 would probably be a m//x expression with a '#'-style comment with an accidental slash in it.

[14:16] <masak> since Perl 5 only searches blindly for the closing '/', it will find the one in the comment. hilarity ensues.

[14:16] <masak> Perl 6 doesn't do blind searches forward to the next closing delimiter. ever. it always keeps track of how far nested it is down the sublanguage stack.

[14:16] <[Coke]> 10:14 <@Coke> huh. autofudge is running, not emitting any output, and I don't have any perl6 processes running.

[14:16] <[Coke]> 10:14 <@Coke> I think this means /fudge/ is hanging.

[14:17] <[Coke]> 10:15 <@Coke> argh, and autounfudge doesn't respond well when you kill fudge

[14:17] <[Coke]> also, "make spectest" should not "git pull", but "git pull --rebase". no?

[14:19] <masak> I generally like 'git pull --rebase', but I'm inclined to say that "make spectest" should die if you have unpushed commits.

[14:20] *** jaldhar joined
[14:21] <[Coke]> masak: then how do I test my work in progress? (commit. at which point I've now got a merge commit)

[14:23] *** bluescreen10 left
[14:26] <masak> [Coke]: my point is this: I'd rather have 'make spectest' fail fast and leave it up to me to take action, than it silently introducing merge commits in my local copy.

[14:27] <masak> this scenario only affects core contributors anyway, so it's easy to teach everyone what to do if 'make spectest' fails fast. :)

[14:28] <[Coke]> if I have local commits and do a git pull, will that not introduce a merge commit silently?

[14:28] <masak> if you have local commits and there are remote commits and you do a git pull without --rebase, you'll get a merge commit.

[14:28] <masak> (so don't do that)

[14:29] <masak> I just mean, I don't think the solution is for 'make spectest' to do something else silently.

[14:31] *** PacoAir left
[14:34] <[Coke]> masak: so, silent merge commits trump other silent things. got it. ;)

[14:35] <pmichaud> good morning, #perl6

[14:35] <masak> [Coke]: no, failing fast trumps silent behavior.

[14:35] <masak> pmichaud! \o/

[14:35] *** havenn joined
[14:35] <masak> autopun: http://twitter.com/sixthformpoet/status/195150617042370561

[14:38] *** bluescreen10 joined
[14:40] <pmichaud> perhaps 'git pull' could be run with --ff-only

[14:40] <pmichaud> that prevents a merge commit, while still doing the right thing in most cases

[14:41] <tadzik> like pull --rebase?

[14:41] <pmichaud> I think pull --rebase requires that there be no local uncommitted changes

[14:41] <tadzik> possibly

[14:42] <masak> +1

[14:46] <[Coke]> masak: but it... you're not.. nevermind.

[14:46] * [Coke] catches up with pmichaud. Ok, that sounds better.

[14:49] <tadzik> ah, I didn't backlog enough

[14:50] *** benabik joined
[14:51] *** kresike left
[14:51] <masak> [Coke]: I understand that we were talking past each other, but not exactly how or why. anyway, nevermind. :)

[14:51] <[Coke]> masak: exactly!

[14:52] <[Coke]> hugme: hug masak ... TO DEATH

[14:52] * hugme hugs masak

[14:52] <[Coke]> ... no, you... stupid bot.

[14:53] <masak> :P

[14:53] <masak> also, *phew* :)

[14:54] <masak> hugme: you can let go now.

[14:54] * masak tries to shake off hugme

[14:54] <masak> hugme: hey!

[14:56] *** jaldhar left
[14:59] <tadzik> like a Face Hugger

[15:00] *** kaare_ joined
[15:00] <masak> eww

[15:01] <tadzik> I hope I didn't spoil hugme for you

[15:01] <tadzik> hugme: hug masak

[15:01] * hugme hugs masak

[15:01] <tadzik> see? Harmless

[15:01] <masak> :)

[15:02] <masak> I should've thought of that myself.

[15:02] *** spaceships joined
[15:04] *** birdwindupbird left
[15:04] <[Coke]> hugme: hugs?

[15:04] <hugme> [Coke]: 

[15:08] <[Coke]> r: try {die 'eek'} ; say $!

[15:08] <p6eval> rakudo 1a7e4d: OUTPUT«eek␤  in block <anon> at /tmp/C5ap9F9Itg:1␤␤»

[15:08] <[Coke]> r: try {die 'eek'} ; say $::("!");

[15:08] <p6eval> rakudo 1a7e4d: OUTPUT«eek␤  in block <anon> at /tmp/jI5eszEGvt:1␤␤»

[15:09] <[Coke]> r: say %*ENV

[15:09] <p6eval> rakudo 1a7e4d: OUTPUT«("PERLBREW_VERSION" => "0.42", "MAIL" => "/var/mail/p6eval", "USER" => "p6eval", "SHLVL" => "1", "HOME" => "/home/p6eval", "OLDPWD" => "/home/p6eval", "PERLBREW_ROOT" => "/home/p6eval/perl5/perlbrew", "PERLBREW_MANPATH" => "/home/p6eval/perl5/perlbrew/perls/perl-5.…

[15:09] <[Coke]> r: say ::%*ENV

[15:09] <p6eval> rakudo 1a7e4d: OUTPUT«===SORRY!===␤Confused␤at /tmp/7oMHWEQKOc:1␤»

[15:09] <[Coke]> r: say ::("%*ENV")

[15:09] <p6eval> rakudo 1a7e4d: OUTPUT«Symbol '%*ENV' not found␤  in method gist at src/gen/CORE.setting:8667␤  in sub say at src/gen/CORE.setting:6555␤  in block <anon> at /tmp/HsksPDCmzw:1␤␤»

[15:10] <pmichaud> global dynamic vars tend to live in the PROCESS:: namespace, iirc.

[15:10] <pmichaud> r: say %PROCESS::ENV

[15:10] <p6eval> rakudo 1a7e4d: OUTPUT«("PERLBREW_VERSION" => "0.42", "MAIL" => "/var/mail/p6eval", "USER" => "p6eval", "SHLVL" => "1", "HOME" => "/home/p6eval", "OLDPWD" => "/home/p6eval", "PERLBREW_ROOT" => "/home/p6eval/perl5/perlbrew", "PERLBREW_MANPATH" => "/home/p6eval/perl5/perlbrew/perls/perl-5.…

[15:12] *** noam left
[15:12] *** noam joined
[15:13] <[Coke]> pmichaud: ok. old pugsian test, then.

[15:15] <brrt> is there a perl5-ism for reduce?

[15:15] <brrt> (this is a p5 question, really)

[15:15] <moritz> o/

[15:15] <moritz> brrt: I think List::Util or List::MoreUtil have a reduce function

[15:16] <PerlJam> List::Util::reduce

[15:19] <brrt> thx

[15:22] <spider-mario> I have not been able to find an equivalent for scan, however.

[15:23] <spider-mario> (Perl 6’s [\…])

[15:24] <spider-mario> I’ve tried Language::Functional::scan but it seems buggy

[15:24] <spider-mario> producing only two elements for a list that has six

[15:26] *** cognominal_ left
[15:27] *** cognominal joined
[15:31] *** agentzh left
[15:36] *** thou joined
[15:46] <masak> couldn't you implement scan easily-ish in terms of reduce?

[15:49] *** Psyche^ joined
[15:49] <masak> hm, maybe not.

[15:52] *** bluescreen10 left
[15:52] *** Patterner left
[15:52] *** Psyche^ is now known as Patterner

[15:53] *** replor___ joined
[15:55] *** envi_ left
[15:55] *** ab5tract left
[15:56] *** replore_ left
[15:58] *** envi_ joined
[16:00] * masak decommutes

[16:01] *** ab5tract joined
[16:01] *** brrt left
[16:02] <Juerd> Please don't ever make the whitespace around infix / mandatory.

[16:02] <Juerd> I discovered that I tend to leave it out in simple divisions.

[16:03] <TimToady> don't define a postfix beginning with / then

[16:03] <Juerd> (e.g. $foo + 1/2)

[16:03] <Juerd> TimToady: I promise I won't

[16:03] <TimToady> we are also unlikely to :)

[16:03] <Juerd> I know, but there's also the thing that happened to -

[16:03] *** bluescreen10 joined
[16:04] <Juerd> Even without any postfix beginning with that character :)

[16:04] <TimToady> .u minus

[16:04] <Juerd> For - I don't mind, but for / I'd have a hard time dealing with it :)

[16:04] <phenny> U+2216 SET MINUS (∖)

[16:04] *** replor___ left
[16:04] <Juerd> $foo-bar

[16:04] <TimToady> .u −

[16:04] <phenny> U+2212 MINUS SIGN (−)

[16:05] <TimToady> we need to make everyone use that instead of -  :−)

[16:05] <Juerd> My keyboard has only 86 keys.

[16:05] <TimToady> that's why my smiley has a long nose

[16:06] <Juerd> Apparently it has 87 keys. Hm.

[16:06] <Juerd> :þ

[16:06] <Juerd> Nose optional!

[16:06] <Juerd> Hm, compose - n could be endash, compose - m could be emdash...

[16:07] <Juerd> And compose - - minus :)

[16:08] <TimToady> I hate my compose key file, it doesn't have any way to make U+2212

[16:09] <TimToady> last I checked, I can't swap out my compose for a saner one and also keep anthy, alas

[16:11] <TimToady> it gives me MINUS SIGN WITH DOT BELOW but no MINUS SIGN, grrr

[16:12] *** pmurias joined
[16:14] <TimToady> perl6: sub infix:<−> ($a,$b) { $a - $b }; my $x = 43; say $x−1;

[16:14] <p6eval> pugs, rakudo 1a7e4d, niecza v16-23-gaa61ed5: OUTPUT«42␤»

[16:15] *** mspaulding joined
[16:16] <TimToady> the nice thing about the - situation is that if you do leave out the same, the next thing is unlikely to start with a letter, and if it does, you'll get a compile-time error

[16:16] <TimToady> s/same/space/

[16:16] <TimToady> that was a weird braino

[16:20] *** thelazydeveloper joined
[16:25] * PerlJam starts writing the Acme module that will make / valid in identifiers ;)

[16:28] <sorear> TimToady: for me, I can't use compose *at all* with anthy running

[16:28] <phenny> sorear: 10:28Z <moritz> tell sorear it would be nice of niecza's lives_ok and eval_lives_ok could diag() the exception when one is thrown

[16:29] <sorear> good * #perl6

[16:29] <TimToady> sorear: even in Input method Off state?

[16:34] <TimToady> do you have "IBus/Preferences/Advanced/Use system keyboard layout" checked?

[16:35] *** pmurias left
[16:37] *** Vlavv_ joined
[16:39] <TimToady> or do you have a ~/.ibus/tables/compose-user.db file?  (I don't know if I'm using that)

[16:45] *** sporous left
[16:45] *** sporous joined
[16:49] *** s1n left
[16:56] <sorear> TimToady: how do you access Input method Off state?  is that "Enable or disable:" ?

[16:56] <sorear> use system keyboard layout is checked

[16:57] <sorear> I do have a compose-user.db

[16:57] <sorear> symptomatically, "Compose" is simply ignored while ibus is running

[16:57] <sorear> I press compose ' e, the latter two chars echo instantly

[17:01] *** cognominal left
[17:03] *** cognominal joined
[17:03] *** PacoAir joined
[17:05] *** s1n joined
[17:09] *** GlitchMr joined
[17:13] *** att joined
[17:17] <dalek> perl6-bench: 177960d | (Geoffrey Broadwell)++ | TODO:

[17:17] <dalek> perl6-bench: TODO: put two up ...

[17:17] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/177960d4e7

[17:17] <dalek> perl6-bench: 6c541cd | (Geoffrey Broadwell)++ | / (2 files):

[17:17] <dalek> perl6-bench: TODO: ... and knock two down.  With individual test skipping now available, perlito6.js/v8 is now reenabled, with just rc-forest-fire skipped.

[17:17] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/6c541cd15d

[17:19] *** brrt joined
[17:20] *** envi_|2 joined
[17:22] <ab5tract> perlito6.js ?

[17:22] <ab5tract> is that a js implementation of perl 6?

[17:22] *** envi_ left
[17:22] <sorear> ab5tract: what about it?

[17:23] <sorear> ab5tract: yes

[17:23] <ab5tract> curious :)

[17:23] *** cognominal left
[17:23] <ab5tract> sorear, where can i find out more?

[17:23] <sorear> ask fglock or pmurias

[17:24] *** cognominal joined
[17:26] <ab5tract> found the github page

[17:26] <ab5tract> interesting stuff

[17:29] <dalek> niecza: 6ef6b2c | sorear++ | lib/Test.pm6:

[17:29] <dalek> niecza: Diag the exception in lives_ok et al (moritz)

[17:29] <dalek> niecza: review: https://github.com/sorear/niecza/commit/6ef6b2c9d0

[17:35] *** goraki joined
[17:36] *** Chillance joined
[17:36] *** daxim left
[17:43] *** pernatiy left
[17:46] *** birdwindupbird joined
[17:47] *** s1n left
[17:51] *** cognominal_ joined
[17:54] *** kaleem joined
[17:54] *** cognominal left
[17:55] *** ggoebel__ left
[17:55] *** ggoebel__ joined
[17:57] *** fhelmberger left
[17:57] *** LylePerl left
[17:58] *** att left
[18:03] *** cognominal_ left
[18:03] *** brrt left
[18:04] *** s1n joined
[18:04] <dalek> roast: 1cc6e47 | coke++ | S0 (18 files):

[18:04] <dalek> roast: rakudo (auto) (un)fudge

[18:04] <dalek> roast: review: https://github.com/perl6/roast/commit/1cc6e47c33

[18:04] *** cognominal joined
[18:07] <[Coke]> moritz, jnthn, pmichaud: that was a pretty mechanical autounfudge, with some minor undos for things that were clearly marked as "if you todo this, it will give false positives" (there is an autounfudge marker you can put in the skip message to help enforce that, but I forget)

[18:08] * masak home

[18:15] * [Coke] wonders if cabin in the woods is playing out where jnthn and co live.

[18:26] <diakopter> hugme: hug masak...TO_DEATH

[18:26] * hugme hugs masak...TO_DEATH

[18:27] * flussence wonders if hugme is unicode-whitespace-aware...

[18:32] *** birdwindupbird left
[18:35] <[Coke]> # 04/25/2012 - rakudo++ ; niecza (94.32%); pugs (42.27%)

[18:35] <[Coke]> "niecza",     20362,     2,   749,  1532, 22645, 24154

[18:35] <[Coke]> "pugs"  ,      9125,     2,  3341,  1553, 14021, 24015

[18:35] <[Coke]> "rakudo",     21586,    30,   644,  1932, 24192, 24164

[18:35] <diakopter> what are the columns there?

[18:37] <[Coke]> "Impl",      "pass","fail","todo","skip","plan","spec"

[18:37] *** havenn left
[18:38] *** kaleem left
[18:38] <[Coke]> diakopter: percentages in the comment line are of the "lead" implementation.

[18:39] *** birdwindupbird joined
[18:40] *** ggoebel__ left
[18:40] <benabik> Why does the spec column vary?

[18:40] *** ggoebel__ joined
[18:41] <moritz> because we don't really know how many spectests there are

[18:41] <moritz> and for those test files with dynamic test plan, our guess depends on what the implementation does when running the test file

[18:48] *** mdupont left
[18:49] *** tyatpi left
[18:50] *** pernatiy joined
[18:52] *** cognominal left
[18:53] *** cognominal joined
[18:56] <[Coke]> mainly it varies because each impl runs different spec test files.

[18:56] <[Coke]> AIUI.

[19:02] *** Chillance left
[19:02] *** Chillance joined
[19:04] <[Coke]> sorear: https://gist.github.com/2492335 # niecza spectest failure

[19:06] *** colomon joined
[19:06] <[Coke]> or colomon

[19:06] *** Chillance left
[19:06] <colomon> eh?

[19:06] *** Chillance joined
[19:07] <colomon> that's new since ... two days ago?  yesterday?

[19:08] <colomon> I'll take a look when I get back from the post office.

[19:08] <colomon> wow, that is a lot of roast files changed since I last did a spectest.

[19:12] *** PacoAir left
[19:14] *** PacoAir joined
[19:15] *** birdwindupbird left
[19:18] *** PacoAir left
[19:18] *** PacoAir joined
[19:19] *** PacoAir left
[19:19] *** PacoAir joined
[19:21] *** birdwindupbird joined
[19:25] *** goraki left
[19:26] <dalek> nqp: c2ae263 | moritz++ | VERSION:

[19:26] <dalek> nqp: bump VERSION to 2012.04.1

[19:26] <dalek> nqp: review: https://github.com/perl6/nqp/commit/c2ae2631d9

[19:26] <spider-mario> oh

[19:27] <spider-mario> I hadn’t noticed 2012.04 was there.

[19:27] <TimToady> April Fool's

[19:28] <spider-mario> :D

[19:29] *** araujo left
[19:36] <dalek> rakudo/nom: 3447164 | moritz++ | tools/build/NQP_REVISION:

[19:36] <dalek> rakudo/nom: bump NQP revision to 2012.04.1

[19:36] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/34471649e5

[19:42] <dalek> tablets: 62aa1b7 | (Herbert Breunung)++ | docs/appendix-d-delta.txt:

[19:42] <dalek> tablets: clear delta and add ucfirst->titlecase

[19:42] <dalek> tablets: review: https://github.com/perl6/tablets/commit/62aa1b7026

[19:42] <dalek> tablets: db5a45a | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[19:42] <dalek> tablets: sanitize and polish string methods

[19:42] <dalek> tablets: review: https://github.com/perl6/tablets/commit/db5a45abc3

[19:42] <lichtkind> i hope i dont insult tadzik

[19:43] <moritz> http://moritz.faui2k3.org/tmp/rakudo-2012.04.1.tar.gz # release preview, testing welcome

[19:44] *** benabik_ joined
[19:47] *** benabik left
[19:48] *** xinming joined
[19:49] *** benabik_ left
[19:50] *** benabik joined
[19:51] *** cognominal_ joined
[19:51] <lichtkind> moritz++

[19:51] *** xinming_ left
[19:52] * masak .oO( a star is born )

[19:52] <lichtkind> moritz was always cool, you mean he is hot now?

[19:54] *** cognominal left
[19:55] <masak> who are you talking to? :)

[19:55] * moritz is always away from equilibrium

[19:56] <diakopter> too much Hawking radiation

[19:56] <masak> my wakeup times are always at disequilibrium. :/

[19:58] * moritz turns up the equalizer a bit

[20:05] <tadzik> lichtkind: heh, no, pay no mind :)

[20:10] *** cognominal_ left
[20:11] *** cognominal joined
[20:12] *** havenn joined
[20:14] <moritz> ok, 2012.04.1 release tagged

[20:15] *** havenn left
[20:15] * masak didn't have time to run the spectests yet, but presumes everything's OK

[20:15] <PerlJam> moritz: Who is doing the R* release?

[20:16] <masak> more importantly, who is doing the May release of the Rakudo compiler?

[20:17] <masak> there ain't no-one signed up for it yet.

[20:17] <tadzik> I can do it

[20:17] *** GlitchMr left
[20:17] <PerlJam> tadzik++

[20:17] <tadzik> yay, karma

[20:17] <masak> tadzik++

[20:18] *** envi_|2 left
[20:20] <masak> then I'll take July.

[20:21] <dalek> rakudo/nom: f61253e | masak++ | docs/release_guide.pod:

[20:21] <dalek> rakudo/nom: [docs/release_guide.pod] volunteered for July

[20:21] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f61253e537

[20:21] <dalek> Heuristic branch merge: pushed 51 commits to rakudo by masak

[20:21] <dalek> rakudo/nom: 7ad3711 | masak++ | docs/release_guide.pod:

[20:21] <dalek> rakudo/nom: [docs/release_guide.pod] volunteered tadzik++ for May

[20:21] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7ad3711990

[20:21] <masak> I don't like that merge commit there :/

[20:22] <masak> hm. I don't see a merge commit locally.

[20:22] <masak> nor do I see one on github.

[20:22] <masak> I conclude that dalek is charmingly misinformed.

[20:23] <dalek> rakudo/nom: efbc48c | duff++ | docs/release_guide.pod:

[20:23] <dalek> rakudo/nom: [docs/release_guide.pod] claim June release

[20:23] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/efbc48c622

[20:23] <moritz> masak: where do you see a merge commit from dalek?

[20:23] <benabik> dalek infers a merge from large numbers of commits.

[20:23] <PerlJam> moritz:  < dalek> Heuristic branch merge: pushed 51 commits to rakudo by masak

[20:23] <benabik> "Heuristic branch merge" basically means "I got too many commits to display them all"

[20:23] <masak> yeah.

[20:23] <masak> that concerned me, because I hadn't merged anything locally.

[20:24] <masak> as far as I can see, it's reality against dalek on this one.

[20:24] <moritz> oh, dammit. I managed to forget to push rakudo's VERSION bump

[20:24] <PerlJam> benabik: but why did dalek think there were many commits instead of just the 2 that there were?

[20:24] <PerlJam> actually only one at that point

[20:25] <dalek> rakudo/nom: 5a65af3 | moritz++ | docs/release_guide.pod:

[20:25] <dalek> rakudo/nom: add 2012.04 release to release_guide.pod

[20:25] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5a65af3c1a

[20:25] <dalek> rakudo/nom: 4ec5106 | moritz++ | VERSION:

[20:25] <dalek> rakudo/nom: [release] bump VERSION to 2012.04.1

[20:25] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4ec5106aaa

[20:25] <benabik> PerlJam: I think it only knows what github sends it.  It must have received a resend for some reason.

[20:27] <dalek> rakudo/nom: 6bee9b6 | duff++ | docs/release_guide.pod:

[20:27] <dalek> rakudo/nom: [docs/release_guide.pod] claim birthday month release too

[20:27] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6bee9b610d

[20:27] <moritz> 56

[20:29] *** jferrero left
[20:29] <pmichaud> the merge commit was because of a push to the master branch, I think.

[20:29] * PerlJam claims every Oct to gie a little birthday present to himself  :)

[20:29] <PerlJam> s/gie/give/

[20:29] <pmichaud> I got email about the merge commit -- it shows a bunch of commits from May 2011

[20:30] <PerlJam> .oO( I guess "gie" works too though  :)

[20:30] <moritz> ok, tag 2012.04.1 re-created, this time with correct VERSION

[20:30] <moritz> sorry for the inconvenience

[20:31] <pmichaud> I thought we had dropped the master branch?

[20:31] <masak> pmichaud: you're right.

[20:31] <masak> pmichaud: I'll remove the master branch now.

[20:32] <masak> there. removed locally and from github.

[20:32] <masak> pmichaud++ masak--

[20:32] <pmichaud> masak++

[20:32] <masak> dalek++

[20:36] *** cogno joined
[20:40] *** kborer joined
[20:46] *** kaare_ left
[20:48] *** benabik_ joined
[20:48] *** benabik left
[20:48] *** benabik_ is now known as benabik

[20:51] *** havenn joined
[21:00] *** cogno left
[21:00] *** araujo joined
[21:00] *** araujo left
[21:00] *** araujo joined
[21:04] *** birdwindupbird left
[21:07] <dalek> tablets: 798b40c | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[21:07] <dalek> tablets: added string method fc

[21:07] <dalek> tablets: review: https://github.com/perl6/tablets/commit/798b40c07c

[21:07] <dalek> tablets: 1f26a05 | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[21:07] <dalek> tablets: more crosslinks for string methods

[21:07] <dalek> tablets: review: https://github.com/perl6/tablets/commit/1f26a059c8

[21:07] <dalek> tablets: bb5aa7c | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[21:07] <dalek> tablets: snippet for substr

[21:07] <dalek> tablets: review: https://github.com/perl6/tablets/commit/bb5aa7c445

[21:08] *** goraki joined
[21:13] *** PacoAir left
[21:13] *** PacoAir joined
[21:15] *** benabik left
[21:19] *** Chillance left
[21:21] *** Chillance joined
[21:27] *** skids left
[21:28] *** goraki left
[21:30] *** cognominal left
[21:31] <[Coke]> fudge now hanging on a niecza autounfudge run.

[21:31] * [Coke] should really track that down at some point.

[21:32] *** cognominal joined
[21:41] *** havenn left
[21:48] <sorear> good * #perl6

[21:50] <dalek> star: e1fe704 | moritz++ | Makefile:

[21:50] <dalek> star: update version in preparation of the 2012.04 release

[21:50] <dalek> star: review: https://github.com/rakudo/star/commit/e1fe7040d5

[21:50] <dalek> star: 05d8730 | moritz++ | Makefile:

[21:50] <dalek> star: parrot 4.3.0 is a stable release

[21:50] <dalek> star: review: https://github.com/rakudo/star/commit/05d8730e99

[21:51] <dalek> star: 5237f98 | moritz++ | skel/tools/build/Makefile.in:

[21:51] <dalek> star: update version in Makefile.in

[21:51] <dalek> star: review: https://github.com/rakudo/star/commit/5237f98c68

[21:53] <moritz> phenny: tell pmichaud basing a star release on rakudo 2012.04.1 seems to give star the version 2012.04.1 too. Should we try to separate that? or just go with it?

[21:53] <phenny> moritz: I'll pass that on when pmichaud is around.

[21:54] <moritz> phenny: tell pmichaud never mind, doesn't seem hard

[21:54] <phenny> moritz: I'll pass that on when pmichaud is around.

[21:55] <dalek> roast: 7becae6 | coke++ | S0 (9 files):

[21:55] <dalek> roast: niecza autounfudge

[21:55] <dalek> roast: review: https://github.com/perl6/roast/commit/7becae6c95

[21:55] *** havenn joined
[21:57] <masak> moritz: haven't there been similar situations before? what was the Star version number those times?

[21:57] <sorear> o/ masak

[21:58] <masak> \o

[21:58] *** kborer left
[21:58] <tadzik> \o/

[22:10] *** libertyprime joined
[22:13] *** bluescreen10 left
[22:14] *** Chillance left
[22:29] *** tokuhirom joined
[22:34] <masak> 'night, #perl6

[22:42] <spider-mario> good night, masak

[22:42] <sorear> night masak.

[22:42] <sorear> o/ spider-mario

[22:43] <spider-mario> (oh, I’m a little late. sorry)

[22:43] <spider-mario> \o sorear

[22:51] *** havenn left
[22:52] *** NamelessTee left
[22:54] <dalek> tablets: 26c92d0 | (Herbert Breunung)++ | docs/appendix- (2 files):

[22:54] <dalek> tablets: minor fixes and crosslinks

[22:54] <dalek> tablets: review: https://github.com/perl6/tablets/commit/26c92d033a

[22:59] *** PacoAir left
[22:59] <dalek> perl6-bench: ee8d57a | (Geoffrey Broadwell)++ | TODO:

[22:59] <dalek> perl6-bench: Reorg TODO a bit, and add another feature TODO

[22:59] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/ee8d57ae3d

[23:00] *** s1n left
[23:02] *** thou left
[23:05] *** NamelessTee joined
[23:08] *** havenn joined
[23:11] *** envi_|2 joined
[23:15] *** havenn left
[23:15] *** skids joined
[23:18] *** thou joined
[23:18] *** whiteknight joined
[23:19] *** NamelessTee left
[23:25] *** pun joined
[23:27] <dalek> tablets: 34aada7 | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[23:27] <dalek> tablets: expand nav menu so that chapter fit a large screen (less searching)

[23:27] <dalek> tablets: review: https://github.com/perl6/tablets/commit/34aada7f40

[23:28] *** pun is now known as nif

[23:30] *** pyrimidine joined
[23:31] *** thou left
[23:39] <dalek> tablets: 63e3ae0 | (Herbert Breunung)++ | README.md:

[23:39] <dalek> tablets: add rules for glossary anchors

[23:39] <dalek> tablets: review: https://github.com/perl6/tablets/commit/63e3ae0edb

[23:39] <dalek> tablets: 3e5f0c4 | (Herbert Breunung)++ | docs/appendix- (2 files):

[23:39] <dalek> tablets: tiny fixes

[23:39] <dalek> tablets: review: https://github.com/perl6/tablets/commit/3e5f0c481d

[23:50] <sorear> japhb: ping

[23:56] *** nif left
[23:57] *** envi_|2 left
[23:58] *** nif joined
[23:58] *** nif left
[23:59] *** envi_ joined
