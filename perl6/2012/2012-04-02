[00:13] <sorear> Juerd: still ddosing?

[00:14] *** sftp left
[00:14] *** sftp joined
[00:19] <Juerd> sorear: No, it has nothing to do with attacks of any kind, as far as we can tell.

[00:20] <Juerd> One cable's link is disappearing at seemingly random intervals; every time it takes a litlte over 30 seconds for the link to reestablish due to STP.

[00:21] <benabik> Is there a good reference for "what is 6model"?

[00:21] <Juerd> It happens 1 to 4 times per hour. Hasn't happened for the past 30 minutes.

[00:21] <sorear> STP?

[00:21] <Juerd> Spanning Tree Protocol; prevents switch loops in large networks.

[00:22] <sorear> whyyyy

[00:22] <sorear> redundancy is the best part of the internet

[00:22] <Juerd> It's a feature that every managed switch has. 

[00:22] <benabik> sorear: It's a side effect of redundancy.  You need to make sure two switches don't both see the other as the best route to somewhere.

[00:22] <benabik> Redunancy good, loops bad.

[00:23] <Juerd> Because without it, you'd get loops. Loops lead to broadcast storms, and those kill switches.

[00:24] <Juerd> While port bonding/trunking exists to combine two ports, it's not typically seen as a redundancy thing, and it's not enabled by default, or even discoverable in most cases.

[00:25] <Juerd> So if there are two links between switches, it won't see that as a spare link, or to increase bandwidth. Instead, STP will kick in and decide which one to disable.

[00:25] <lichtkind> greetings Juerd 

[00:25] <Juerd> STP has a learning state of approximately 30 seconds before it enters what's called forwarding state. Forwarding state is the normal state for switch ports.

[00:26] <Juerd> Cheap switches forward immediately.

[00:26] <Juerd> STP can be disabled per port but that's dangerous.

[00:26] <Juerd> If these issues continue we'll have to do so, though.

[00:29] *** PerlJam left
[00:30] *** d4l3k_ joined
[00:30] *** dalek left
[00:30] <Juerd> Well, I guess it wasn't the switch port either then :(

[00:30] *** PerlJam joined
[00:30] <Juerd> That was another 30 second outage...

[00:31] *** d4l3k_ is now known as dalek

[00:31] *** masak left
[00:31] *** masak joined
[00:31] <benabik> Bad NIC?

[00:31] * benabik knocks on wood.

[00:38] <geekosaur> ...nic-noc jokes?

[00:44] <Juerd> benabik: No, the flapping connection is definitely between two switches

[00:44] <Juerd> One of those is ours. The other one isn't. These are located at an internet exchange.

[00:45] <benabik> Oh well that's... better?  Harder to fix, but hopefully doesn't require new hardware...  :-/

[00:45] <Juerd> Well, we first have to find out what the hell is going on.

[00:46] <Juerd> But now I'm going back home. I've enabled STP PortFast so that it will skip the 30 second learning phase.

[00:46] *** plobsing joined
[00:46] <Juerd> That should bring the outages down to 4 to 5 seconds only and is probably much more bearable.

[00:46] <benabik> Yay bandaids!

[00:46] <benabik> Juerd++

[00:46] <Juerd> Yea.. :(

[00:48] <Juerd> I hate leaving this place (extremely noisy datacentre-like room) without a real fix.

[00:50] <Juerd> This is a marvellous place. Without leaving the room I could kill of a good part of the Dutch and probably European internet just by cutting cables until the security guys arrive. I just wish fixing things was as easy as breaking them :)

[00:50] <benabik> I get that feeling every time I walk into the machine room at school...  Although I can only really screw up one building from there.

[00:50] <Juerd> Oh well, at least we've tried a few solutions; theoretically that means we're closer to knowing what the problem is.

[00:51] *** wolfman2000 left
[00:51] <Juerd> afk

[00:51] <benabik> "On the contrary, I've learned a great many things that won't work."

[00:51] <benabik> Or however that quote goes.

[00:52] <benabik> "I have not failed. I've just found 10,000 ways that won't work." ~~ Thomas A Edison

[01:07] *** retupmoca joined
[01:15] *** mdupont left
[01:17] *** whiteknight left
[01:20] *** d4l3k_ joined
[01:20] *** hugme left
[01:20] *** dalek left
[01:21] *** d4l3k_ is now known as dalek

[01:21] *** PerlJam left
[01:22] *** PerlJam joined
[01:38] *** tokuhiro_ left
[01:40] *** hugme joined
[01:40] *** ChanServ sets mode: +v hugme

[01:45] *** sisar joined
[01:49] *** mdupont joined
[01:50] *** cbk1090 left
[01:56] *** fgomez left
[01:56] *** fgomez joined
[02:02] <sisar> r: say 5 ~~ int ;

[02:02] <p6eval> rakudo 984dc7: OUTPUT«False␤»

[02:02] <sisar> r: say 5 ~~ Int ;

[02:02] <p6eval> rakudo 984dc7: OUTPUT«True␤»

[02:04] <sisar> is 'int' incorrect? Data types _have_ to start with an uppercase letter ?

[02:04] <benabik> int is a native type

[02:04] <benabik> Native types are lowercase.  (int, num, str)

[02:05] <sisar> what's a *native* type ?

[02:05] <benabik> Ints are variable precision, ints are limited to whatever the (virtual) machine does by default.

[02:05] <benabik> However ints are likely to be faster.

[02:06] <sisar> um, so why did 5 ~~ int fail ?

[02:06] <sisar> i mean, give False

[02:07] <jnthn> Something forced it to box.

[02:07] <jnthn> (The 5)

[02:07] <jnthn> At which point it becomes an Int

[02:07] <sorear> ~~ int feels wrong to me

[02:08] <sisar> jnthn: 'to box' ?

[02:08] <jnthn> sorear: Wrong in the sense of "hard to think of a sane model where it works"? :)

[02:08] <sisar> i'm unfaniliar with the term

[02:08] <Teratogen> can you do stuff like char broiled; in Perl 6?

[02:08] <jnthn> sisar: Turning a native type into an object

[02:10] <sorear> jnthn: wrong in the sense of "~~ takes Mu, so it will never ever see an int argument"

[02:11] *** dalek left
[02:11] *** d4l3k_ joined
[02:11] *** tadzik left
[02:11] *** d4l3k_ is now known as dalek

[02:12] *** masak left
[02:12] *** tadzik joined
[02:12] *** sisar left
[02:12] *** masak joined
[02:15] <jnthn> Hmm, is dalek on the blink?

[02:16] <jnthn> oh, just reached appropriate part of backlog...

[02:31] *** lutok joined
[02:32] *** leprevost joined
[02:35] *** s1n left
[02:39] *** lutok_ joined
[02:43] *** lutok left
[02:43] *** lutok_ is now known as lutok

[02:44] *** lutok left
[02:44] *** lutok joined
[02:45] *** birdwindupbird joined
[02:47] *** lutok left
[02:50] *** s1n joined
[02:57] *** envi_ joined
[02:59] *** orafu left
[02:59] *** orafu joined
[03:00] *** Juerd left
[03:00] *** d4l3k_ joined
[03:00] *** Juerd joined
[03:00] *** dalek left
[03:01] *** d4l3k_ is now known as dalek

[03:08] *** cbk1090 joined
[03:26] *** birdwindupbird left
[03:27] *** lestrrat left
[03:28] *** lestrrat joined
[03:35] <lichtkind> hai jnthn 

[03:36] *** colomon joined
[03:39] *** envi_ left
[03:43] *** lichtkind left
[03:49] *** wolfman2000 joined
[03:51] *** dalek left
[03:51] *** d4l3k_ joined
[03:52] *** d4l3k_ is now known as dalek

[04:35] *** bbkr left
[04:35] *** bbkr joined
[04:38] *** leprevost left
[04:39] *** agentzh joined
[04:42] *** dalek left
[04:42] *** dalek joined
[04:42] *** ChanServ sets mode: +v dalek

[04:45] *** constantined joined
[04:52] *** NamelessTee joined
[04:54] *** bbkr1 joined
[04:56] *** bbkr left
[04:56] *** wolfman2000 left
[05:14] *** birdwindupbird joined
[05:15] *** bharath joined
[05:15] *** bharath left
[05:27] *** mucker joined
[05:28] *** kaare_ joined
[05:31] *** kaare_ left
[05:31] *** kaare_ joined
[05:33] *** dalek left
[05:33] *** dalek joined
[05:33] *** ChanServ sets mode: +v dalek

[05:34] *** pmichaud left
[05:34] *** pmichaud joined
[05:36] *** cbk1090 left
[05:49] *** kaleem joined
[05:59] *** wtw joined
[06:02] *** NamelessTee left
[06:05] *** fgomez left
[06:05] *** constantined left
[06:22] *** brrt joined
[06:24] *** dalek left
[06:24] *** dalek joined
[06:24] *** ChanServ sets mode: +v dalek

[06:34] *** Timbus left
[06:35] *** Timbus joined
[06:35] *** brrt left
[06:35] *** sivoais left
[07:03] *** sivoais joined
[07:08] *** pnu joined
[07:10] *** fhelmberger joined
[07:10] *** tarch joined
[07:12] *** overrosy left
[07:15] *** d4l3k_ joined
[07:15] *** dalek left
[07:16] *** d4l3k_ is now known as dalek

[07:18] *** cj left
[07:21] *** BruceZu left
[07:25] *** cj joined
[07:36] *** BruceZu joined
[07:41] *** overrosy joined
[07:45] *** kaare_ left
[07:46] *** cosimo joined
[07:46] *** cosimo left
[07:47] *** cosimo joined
[07:47] *** cosimo left
[07:54] *** cosimo joined
[07:57] *** araujo left
[08:01] <moritz> p6: say 1 <=> 2

[08:01] <p6eval> rakudo da576f, niecza v16-17-g648c49b: OUTPUT«Increase␤»

[08:01] <p6eval> ..pugs: OUTPUT«-1␤»

[08:03] <dalek> roast: 18ba63b | moritz++ | S32-num/fatrat.t:

[08:03] <dalek> roast: test comparison ops on FatRats where fallback to Num would produce wrong results

[08:03] <dalek> roast: review: https://github.com/perl6/roast/commit/18ba63b974

[08:06] *** BruceZu left
[08:06] *** dalek left
[08:06] *** dalek joined
[08:06] *** ChanServ sets mode: +v dalek

[08:16] *** bacek joined
[08:17] <moritz> r: say ~ Bag.new({a => 5 b => 2})

[08:17] <p6eval> rakudo da576f: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2␤»

[08:17] <moritz> r: say ~ Bag.new({a => 5, b => 2})

[08:17] <p6eval> rakudo da576f: OUTPUT«a b␤»

[08:17] <moritz> r: say ~ Bag.new({a => 5, b => 2}).pairs.map: { .key xx .value

[08:17] <p6eval> rakudo da576f: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2␤»

[08:17] <moritz> r: say ~ Bag.new({a => 5, b => 2}).pairs.map: { .key xx .value }

[08:17] <p6eval> rakudo da576f: OUTPUT«a a a a a b b␤»

[08:18] <moritz> Bag.Str is implemented as  ~ self.pairs.map: { .key xx .value }

[08:18] <moritz> why doesn't it work in the setting?

[08:18] *** BruceZu joined
[08:18] *** kaare_ joined
[08:20] *** kaare_ left
[08:31] <dalek> rakudo/nom: d344e96 | moritz++ | src/core/Rat.pm:

[08:31] <dalek> rakudo/nom: fix thinko in Int <=> Rat

[08:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d344e96f6a

[08:31] <dalek> rakudo/nom: 68e7f8f | moritz++ | src/Perl6/ (2 files):

[08:31] <dalek> rakudo/nom: rename $=POD to $=pod

[08:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/68e7f8ffed

[08:34] <tadzik> moritz: I'm quite sure that second commit broke all Pod tests

[08:37] <dalek> roast: 25f5583 | moritz++ | S (10 files):

[08:37] <dalek> roast: $=POD is now called $=pod

[08:37] <dalek> roast: review: https://github.com/perl6/roast/commit/25f5583931

[08:37] <moritz> tadzik: just because I haven't pushed that one yet

[08:37] <moritz> got called off, sorry for the delay

[08:38] <tadzik> no worries :)

[08:39] <tadzik> moritz++

[08:41] *** dakkar joined
[08:43] <tadzik> random hack idea: write a Perl 6 example of http://oylenshpeegul.typepad.com/blog/2012/03/asynchronicity.html

[08:43] <tadzik> would probably require some LWP and MuEvent hacking, but I find it quite possible

[08:47] *** domidumont joined
[08:52] <dalek> roast: 5d0290d | moritz++ | S (3 files):

[08:52] <dalek> roast: rakudo refudges

[08:52] <dalek> roast: review: https://github.com/perl6/roast/commit/5d0290d413

[08:57] *** dalek left
[08:57] *** dalek joined
[08:57] *** ChanServ sets mode: +v dalek

[09:13] <moritz> any idea what's wrong with the Bag/KeyBag stringification, which I've mentioned in the backlog?

[09:14] *** BruceZu left
[09:23] *** BruceZu joined
[09:23] *** constantined joined
[09:28] <moritz> and any idea what's wrong with twitter? I keep getting search results that are in no way related to my actual search

[09:29] *** bbkr joined
[09:39] <moritz> and it's been happening for too long to be an april fool's joke

[09:42] *** NamelessTee joined
[09:43] <moritz> r: say ?^1

[09:43] <p6eval> rakudo 68e7f8: OUTPUT«False␤»

[09:43] <moritz> r: say ?^0

[09:43] <p6eval> rakudo 68e7f8: OUTPUT«True␤»

[09:44] <moritz> r: say ?^3

[09:44] <p6eval> rakudo 68e7f8: OUTPUT«False␤»

[09:44] *** Vespakoen joined
[09:44] <moritz> n: say ?^3

[09:45] <p6eval> niecza v16-17-g648c49b: OUTPUT«False␤»

[09:45] <dalek> roast: 1fa6884 | moritz++ | S03-operators/boolean-bitwise.t:

[09:45] <dalek> roast: prefix ?^

[09:45] <dalek> roast: review: https://github.com/perl6/roast/commit/1fa68840dd

[09:49] *** envi_ joined
[09:51] *** d4l3k_ joined
[09:51] *** dalek left
[09:51] *** tadzik left
[09:51] *** zhutingting joined
[09:52] *** tadzik joined
[09:52] *** d4l3k_ is now known as dalek

[09:53] <zhutingting> perl6: my $str = '1a2b3c' and say $str ~~ m:g/\d/

[09:53] <p6eval> niecza v16-17-g648c49b: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Regex modifier g not yet implemented at /tmp/zEUpGQyZGk line 1:␤------> [32mmy $str = '1a2b3c' and say $str ~~ m:g[33m⏏[31m/\d/[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1…

[09:53] <p6eval> ..rakudo 68e7f8: OUTPUT«False␤»

[09:53] <p6eval> ..pugs: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20111008/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HANDLE>' tra…

[09:54] <zhutingting> perl6: my $str = '1a2b3c' and say $str ~~ /\d/

[09:54] <p6eval> niecza v16-17-g648c49b: OUTPUT«#<match from(0) to(1) text(1) pos([].list) named({}.hash)>␤»

[09:54] <p6eval> ..rakudo 68e7f8: OUTPUT«=> <1>␤␤»

[09:54] <p6eval> ..pugs: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20111008/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HANDLE>' tra…

[09:54] <zhutingting> how to use global?

[09:55] <moritz> r: for '1a2b3c'.match(:g, /\d/) { say ~$/ }

[09:55] <p6eval> rakudo 68e7f8: OUTPUT«use of uninitialized value of type Any in string context␤␤use of uninitialized value of type Any in string context␤␤use of uninitialized value of type Any in string context␤␤»

[09:55] <moritz> r: for '1a2b3c'.match(:g, /\d/) { say ~$_ }

[09:55] <p6eval> rakudo 68e7f8: OUTPUT«1␤2␤3␤»

[09:55] <moritz> r: for '1a2b3c'.comb(/d) { say $_ }

[09:55] <p6eval> rakudo 68e7f8: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix / instead at line 1, near "d) { say $"␤»

[09:55] <moritz> r: for '1a2b3c'.comb(/d/) { say $_ }

[09:55] <p6eval> rakudo 68e7f8:  ( no output )

[09:55] <moritz> r: for '1a2b3c'.comb(/\d/) { say $_ }

[09:55] <p6eval> rakudo 68e7f8: OUTPUT«1␤2␤3␤»

[09:56] <moritz> it helps to actually type what you want :-)

[09:56] <Teratogen> and *I* generate spam on this channel?

[09:56] <Teratogen> hmph!

[09:57] <moritz> Teratogen: spam != noise

[09:57] <moritz> Teratogen: and I generate noise while trying to answer a question, which is signal. I haven't seen much signal from you yet

[09:57] <zhutingting> thx ;-) and does have some style more perl5?

[09:58] <zhutingting> like $str =~ /\d/g

[09:58] <moritz> zhutingting: I guess  for $str ~~ m:g/\d/ { }  should work, but it's not implemented yet

[09:59] <moritz> p6: say '1234' ~~ m:g/\d/

[09:59] <p6eval> rakudo 68e7f8: OUTPUT«False␤»

[09:59] <p6eval> ..pugs: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20111008/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HANDLE>' tra…

[09:59] <p6eval> ..niecza v16-17-g648c49b: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Regex modifier g not yet implemented at /tmp/g39T2ImGmV line 1:␤------> [32msay '1234' ~~ m:g[33m⏏[31m/\d/[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1366 (die @ 3) ␤  at /…

[09:59] <moritz> there's a design problem with this though

[10:00] <moritz> http://perlgeek.de/blog-en/perl-6/three-functions-of-smartmatch.html

[10:00] <moritz> r: $_ = '123'; say m:g/\d/

[10:00] <p6eval> rakudo 68e7f8: OUTPUT«1 2 3␤»

[10:00] <zhutingting> thx ;-)

[10:00] <moritz> r: $_ = '123'; say (m:g/\d/).WHAT

[10:00] <p6eval> rakudo 68e7f8: OUTPUT«List()␤»

[10:01] <moritz> r: $_ = 'a1b2d34'; .say for m:g/\d/

[10:01] <p6eval> rakudo 68e7f8: OUTPUT«=> <1>␤␤=> <2>␤␤=> <3>␤␤=> <4>␤␤»

[10:01] <moritz> r: $_ = 'a1b2d34'; say .Str for m:g/\d/

[10:01] <p6eval> rakudo 68e7f8: OUTPUT«1␤2␤3␤4␤»

[10:01] <moritz> that one does work in rakudo, but only while matching against $_

[10:01] <moritz> $_ = '123'; m:g/./; say $/.WHAT

[10:02] <moritz> r: $_ = '123'; m:g/./; say $/.WHAT

[10:02] <p6eval> rakudo 68e7f8: OUTPUT«Any()␤»

[10:02] <moritz> zhutingting: oh, and welcome to #perl6 :-)

[10:05] *** mirc71 joined
[10:07] <mirc71> p6: say '1234' ~~ m:g/\d/

[10:07] <p6eval> rakudo 68e7f8: OUTPUT«False␤»

[10:07] <p6eval> ..niecza v16-17-g648c49b: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Regex modifier g not yet implemented at /tmp/xGW4G8aAAg line 1:␤------> [32msay '1234' ~~ m:g[33m⏏[31m/\d/[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1366 (die @ 3) ␤  at /…

[10:07] <p6eval> ..pugs: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20111008/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HANDLE>' tra…

[10:07] <mirc71> wow 

[10:07] <mirc71> looks different in mirc

[10:07] <moritz> std: say()

[10:07] <p6eval> std 5740094: OUTPUT«ok 00:01 107m␤»

[10:07] <moritz> std: say;

[10:07] <p6eval> std 5740094: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unsupported use of bare 'say'; in Perl 6 please use .say if you meant $_, or use an explicit invocant or argument at /tmp/6paawcedCx line 1:␤------> [32msay[33m⏏[31m;[0m␤Check failed␤FAILED 00:01 107m␤»

[10:07] <moritz> std: say ;

[10:07] <p6eval> std 5740094: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unsupported use of bare 'say'; in Perl 6 please use .say if you meant $_, or use an explicit invocant or argument at /tmp/fe3ee7vCEv line 1:␤------> [32msay[33m⏏[31m ;[0m␤Check failed␤FAILED 00:01 107m␤»

[10:07] <mirc71> much better

[10:10] *** JimmyZ_ joined
[10:12] *** JimmyZ_ left
[10:12] *** JimmyZ_ joined
[10:14] <mirc71> I wonder what font I need in xchat to render perl 6 engine output here?

[10:15] <mirc71> render it properly, that is

[10:16] <moritz> mirc71: std and niecza emit ANSI color codes

[10:16] <moritz> mirc71: so you'd need some kind of extension that can handle those

[10:25] <JimmyZ_> chatzilla can't handle those 

[10:27] *** erkan joined
[10:27] <moritz> IMHO compilers shouldn't ouput color codes if they write to pipes

[10:27] <moritz> (which means we wouldn't get colors on IRC, which is fine)

[10:29] <Teratogen> http://www.intertwingled.net/perl6.png

[10:30] <Teratogen> that's what #perl6 looks like in my xchat

[10:30] <Teratogen> clearly the wrong character encodings are at work

[10:31] <Teratogen> I don't know how to fix it in xchat

[10:31] <Teratogen> maybe somebody on #xchat will know

[10:36] <constantined> the same in pidgin. p6eval, use pastebin. please

[10:39] *** constantined left
[10:41] *** constantined joined
[10:42] <constantined> this is a joke :)

[10:42] *** constantined left
[10:43] *** d4l3k_ joined
[10:43] *** dalek left
[10:44] *** d4l3k_ is now known as dalek

[10:45] *** constantined joined
[10:48] *** zhutingting left
[10:48] *** zhutingting joined
[11:01] *** cognominal_ left
[11:01] *** cognominal_ joined
[11:21] *** mirc71 left
[11:35] *** dalek left
[11:35] *** d4l3k_ joined
[11:35] *** d4l3k_ is now known as dalek

[11:39] *** gfldex left
[11:39] *** dalek left
[11:39] *** d4l3k_ joined
[11:40] *** d4l3k_ is now known as dalek

[11:41] *** gfldex joined
[11:42] *** NamelessTee left
[11:49] *** pernatiy left
[11:50] *** tokuhiro_ joined
[11:54] *** d4l3k_ joined
[11:54] *** dalek left
[11:55] *** d4l3k_ is now known as dalek

[11:55] *** pmichaud left
[11:55] *** pmichaud joined
[11:59] *** betterworld left
[12:03] *** cognominal_ left
[12:03] *** cognominal_ joined
[12:03] *** mtk joined
[12:05] *** cognominal___ joined
[12:08] *** cognominal_ left
[12:14] *** fglock joined
[12:16] *** betterworld joined
[12:23] *** araujo joined
[12:23] *** araujo left
[12:23] *** araujo joined
[12:23] *** fsergot joined
[12:23] <fsergot> hi #perl6 o/

[12:24] <bbkr> hi

[12:26] *** PacoAir joined
[12:27] <moritz> \o

[12:27] *** birdwindupbird left
[12:27] <tadzik> hello fsergot 

[12:32] *** pernatiy joined
[12:33] *** birdwindupbird joined
[12:36] <gfldex> r: package P { our proto n(Int $i) { say $i }; our multi sub n(Str $s){ say $s}; } P::n(10); P::n('welp');

[12:36] <p6eval> rakudo 68e7f8: OUTPUT«===SORRY!===␤Confused␤at /tmp/HH7febdbRA:1␤»

[12:37] <gfldex> r: package P { our proto n(Int $i) { say $i }; our multi sub n(Str $s){ say $s}; }; P::n(10); P::n('welp');

[12:37] <p6eval> rakudo 68e7f8: OUTPUT«10␤Nominal type check failed for parameter '$i'; expected Int but got Str instead␤  in sub n at /tmp/iGCIhnpwGE:1␤  in block <anon> at /tmp/iGCIhnpwGE:1␤␤»

[12:38] <moritz> huh, I thought we disallowed 'our multi sub'

[12:39] <gfldex> that would mean I can't use MMD in a package

[12:39] <moritz> not at all

[12:39] <gfldex> not going to kill me to do it in a class

[12:39] <gfldex> how am I supposed to do it then?

[12:40] <moritz> r: package P { our proto n(|$) {*}; multi n(Int $) { 'Int' }; multi n(Str $) { 'Str' } }; say P::n($_) for 42, 'foo'

[12:40] <p6eval> rakudo 68e7f8: OUTPUT«Int␤Str␤»

[12:40] <gfldex> tyvm

[12:40] <moritz> yavw

[12:43] *** dalek left
[12:43] *** dalek joined
[12:43] *** ChanServ sets mode: +v dalek

[12:43] *** skids left
[12:49] *** lutok_ joined
[12:50] *** JimmyZ_ left
[12:53] *** GlitchMr joined
[12:56] *** snearch joined
[12:56] <fglock> I was reading http://trac.parrot.org/parrot/wiki/Languages, and went to check Blizkost - I wonder if it makes sense to compile perlito5 to parrot (Blitzkost seems to be just a perl wrapper)

[12:57] <fglock> *Blizkost

[12:57] <moritz> you mean as a way to interop between p5 and parrot?

[12:59] <moritz> that does make some sense, yes

[13:08] <fglock> no, not as a way to interop, but as an actual implementation of perl5 in parrot

[13:08] <moritz> ah, ponie 2.0

[13:10] <moritz> so, what would you emit? PIR? winxed?

[13:11] <fglock> whatever performs better, I think

[13:11] <fglock> performance is high in my list

[13:12] *** lutok_ left
[13:14] <fglock> looking at winxed, it seems to be too high-level

[13:14] *** JimmyZ_ joined
[13:15] <moritz> well, it aims to mostly provide stuff that translates rather directly to parrot stuff

[13:15] <moritz> but still, PIR is closer to the metal

[13:16] *** Vespakoen left
[13:18] <fglock> I found this about ponie: http://news.perlfoundation.org/2006/08/ponie_has_been_put_out_to_past.html

[13:19] <JimmyZ_> emit M0!

[13:19] <moritz> ... except that M0 doesn't run yet, much less JITs

[13:20] <JimmyZ_> if today is April Fools' Day, emit M0 is very easy

[13:20] <JimmyZ_> :)

[13:21] <moritz> well, it hasn't been April 1st for well over 15 hours here :-)

[13:21] *** gfldex left
[13:21] <fglock> "Ponie was an attempt to drag the Perl 5 internals, kicking and screaming, into the Parrot Virtual Machine and have them run there"

[13:22] <moritz> ok, then it's not an attempt to recreate ponie

[13:22] <moritz> just a p5-on-parrot

[13:23] *** gfldex joined
[13:24] <fglock> moritz: do you have a link to ponie? it seems to be a different project

[13:25] <moritz> fglock: no, it's the same. And it's such an old project that all the websites about it seems to have gone down

[13:26] <moritz> fglock: it was an attempt to bring perl 5 to parrot, though I'm not sure how exactly they tried to do it

[13:29] <[Coke]> most of the people around when that happened aren't with parrot anymore.

[13:30] *** xinming left
[13:30] <moritz> or with Perl 6, for that matter

[13:30] <GlitchMr> Well, you can use "use v5" to run Perl 5 code in Perl 6, but...

[13:30] <GlitchMr> perl6: use v5; my @array = 1; print $array[0];

[13:30] <moritz> though at GPW I talked to Nicholas++, who seems to have vivid memories :-)

[13:30] <p6eval> rakudo 68e7f8: OUTPUT«===SORRY!===␤Variable $array is not declared␤at /tmp/bzPtsKSlCx:1␤»

[13:30] <moritz> GlitchMr: but only if it's implemented.

[13:30] <fglock> there is some discussion here, from 2003 - http://www.gossamer-threads.com/lists/perl/porters/170165 - they wanted XS-level compatibility

[13:31] *** xinming joined
[13:31] *** cognominal_ joined
[13:32] <GlitchMr> XS-level compatibility is insanity :P. That would mean that Perl 6 could be only written in C...

[13:33] <p6eval> ..pugs: OUTPUT«Error eval perl5: "sub { use ops (':default', 'binmode', 'entereval');; my @array = 1; print $array[0];␤␤}"␤*** 'print' trapped by operation mask at (eval 2) line 1.␤␤Undefined subroutine &main:: called.␤»

[13:33] <p6eval> ..niecza v16-17-g648c49b: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Variable $array is not predeclared (did you mean @array?) at /tmp/spCpeBE12E line 1:␤------> [32muse v5; my @array = 1; print [33m⏏[31m$array[0];[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/C…

[13:34] <GlitchMr> ... seriously... five minutes to tell me this O_o...

[13:34] *** dalek left
[13:34] <GlitchMr> OK, three... but whatever...

[13:34] *** dalek joined
[13:34] *** ChanServ sets mode: +v dalek

[13:34] *** cognominal___ left
[13:35] *** tadzik left
[13:35] *** tadzik joined
[13:50] <jnthn> morning o/

[13:50] <jnthn> Around for just a little bit. :)

[13:51] <moritz> \o jnthn 

[13:51] <jnthn> hi moritz :)

[13:51] <jnthn> moritz++ # various Rakudo patches  :)

[13:52] <moritz> thanks :-)

[13:52] <moritz> though fixing URI and LWP::Simple was actually more work :-)

[13:52] <moritz> I wonder if should make a star release, or wait til after the April compiler release

[13:52] *** kaleem left
[13:53] <moritz> I'm not sold on the idea, but I could imagine doing a star release after the Oslo P6 hackathon

[13:53] <jnthn> A Star release would need a patched NQP release because I failed to get the fix for pre-comp of NativeCall-using modules in. ;S

[13:53] <jnthn> *:S

[13:54] <moritz> ok, then it's probably more economic to wait

[13:54] <jnthn> Yeah.

[13:55] <moritz> maybe I'll get around to blogging that tonight

[13:55] <jnthn> fwiw, I'm making the 20 hour journey home tomorrow, so will be digging back in to things later this week. :)

[13:56] <tadzik> lol look: https://gist.github.com/2283587

[13:56] <tadzik> I with I could make LWP work if it, instead of cheating horribly :)

[13:56] * moritz expects to find an event loop

[13:57] <moritz> woah! \o/

[13:58] <tadzik> they're mostly in order, for the event loop is slower than my wifi at the moment :)

[13:58] <tadzik> but thanks to the ultimate slowness of FSM website you can see that it's async :)

[13:58] <moritz> 'KOÅCIÃÅ' -- is that the way it should be?

[13:58] <moritz> or mojibake?

[13:59] * tadzik afks for a while

[13:59] <moritz> tadzik++

[14:05] *** kaleem joined
[14:06] <jnthn> Looks like mojibake to me

[14:06] <jnthn> tadzik++ though ;)

[14:06] <jnthn> 8:)

[14:06] <jnthn> gah, keyboard skills have decreased due to lack of hacking :)

[14:12] *** NamelessTee joined
[14:16] *** skids joined
[14:18] *** NamelessTee left
[14:21] * jnthn bbl

[14:23] *** mucker left
[14:24] *** snearch left
[14:25] *** pmichaud left
[14:25] *** d4l3k_ joined
[14:26] *** pmichaud joined
[14:26] *** dalek left
[14:27] *** tadzik left
[14:27] *** d4l3k_ is now known as dalek

[14:27] *** tadzik joined
[14:28] *** Ulti joined
[14:28] *** snearch joined
[14:29] *** JimmyZ_ left
[14:31] <gfldex> r: say Order::Increase;

[14:31] <p6eval> rakudo 68e7f8: OUTPUT«Increase␤»

[14:31] <gfldex> r: say (Order::Increase).Int;

[14:31] <p6eval> rakudo 68e7f8: OUTPUT«-1␤»

[14:33] *** thou joined
[14:35] <bbkr> rakudo: Order.^methods.say

[14:35] <p6eval> rakudo 68e7f8: OUTPUT«too many named arguments: 2 passed, 0 used␤  in any parents at src/gen/Metamodel.pm:681␤  in any methods at src/gen/Metamodel.pm:398␤  in method dispatch:<.^> at src/gen/CORE.setting:783␤  in block <anon> at /tmp/UvMyerD1sC:1␤␤»

[14:35] <bbkr> what happened here?

[14:35] <gfldex> r: say Order.WHAT;

[14:35] <p6eval> rakudo 68e7f8: OUTPUT«Order()␤»

[14:35] <gfldex> r: say Order.^WHAT;

[14:35] <p6eval> rakudo 68e7f8: OUTPUT«===SORRY!===␤Cannot use .^ on a non-identifier method call at line 1, near ";"␤»

[14:36] <moritz> r: enum A <b c>; say A.^methods

[14:36] <p6eval> rakudo 68e7f8: OUTPUT«too many named arguments: 2 passed, 0 used␤  in any parents at src/gen/Metamodel.pm:681␤  in any methods at src/gen/Metamodel.pm:398␤  in method dispatch:<.^> at src/gen/CORE.setting:783␤  in block <anon> at /tmp/lNDeV59Rnc:1␤␤»

[14:36] <moritz> bbkr: looks like a regression

[14:36] <moritz> r: enum A <b c>; A.^methods

[14:36] <p6eval> rakudo 68e7f8: OUTPUT«too many named arguments: 2 passed, 0 used␤  in any parents at src/gen/Metamodel.pm:681␤  in any methods at src/gen/Metamodel.pm:398␤  in method dispatch:<.^> at src/gen/CORE.setting:783␤  in block <anon> at /tmp/2sIV3gfwH1:1␤␤»

[14:36] *** pmichaud left
[14:36] <bbkr> known or should I report?

[14:36] <moritz> report please

[14:36] * bbkr reports

[14:37] *** d4l3k_ joined
[14:37] *** pmichaud joined
[14:37] *** dalek left
[14:37] <moritz> bbkr++

[14:38] *** d4l3k_ is now known as dalek

[14:40] *** PerlJam left
[14:40] *** PerlJam joined
[14:41] <gfldex> r: package P { class A { has $.a }; multi infix:<==>(A $a1, A $a2){ return $a1.a == $a2.a; } }; my $a1 = P::A.new; $a1.a = 10; my $a2 = P::A.new; $a2.a = 11; say $a1 == $a2;

[14:41] <p6eval> rakudo 68e7f8: OUTPUT«Cannot assign to a readonly variable or a value␤  in block <anon> at /tmp/9A5LNdSEmN:1␤␤»

[14:42] <gfldex> r: package P { class A { has $.a is rw; }; multi infix:<==>(A $a1, A $a2){ return $a1.a == $a2.a; } }; my $a1 = P::A.new; $a1.a = 10; my $a2 = P::A.new; $a2.a = 11; say $a1 == $a2;

[14:42] <p6eval> rakudo 68e7f8: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \$v, Mu %_!)␤␤  in method Numeric at src/gen/CORE.setting:644␤  in sub infix:<==> at src/gen/CORE.setting:2340␤  in block <anon> at /tmp/9cmXVaTvQW:1␤␤»

[14:43] <gfldex> is there any way for me to get A == A out of that scope?

[14:43] <gfldex> r: package P { class A { has $.a is rw; }; multi infix:<==>(A $a1, A $a2){ return $a1.a == $a2.a; } }; my $a1 = P::A.new; $a1.a = 10; my $a2 = P::A.new; $a2.a = 11; say $a1 P::infix:<==> $a2;

[14:43] <p6eval> rakudo 68e7f8: OUTPUT«===SORRY!===␤Confused␤at /tmp/g1ySlOsxhM:1␤»

[14:45] <gfldex> r: package P { class A { has $.a is rw; }; multi infix:<==>(A $a1, A $a2) is export { return $a1.a == $a2.a; } }; my $a1 = P::A.new; $a1.a = 10; my $a2 = P::A.new; $a2.a = 11; say $a1 == $a2;

[14:45] <p6eval> rakudo 68e7f8: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \$v, Mu %_!)␤␤  in method Numeric at src/gen/CORE.setting:644␤  in sub infix:<==> at src/gen/CORE.setting:2340␤  in block <anon> at /tmp/1AMqbuJ6tS:1␤␤»

[14:45] <moritz> gfldex: I don't think there's a way to do it yet >(

[14:45] <moritz> erm, :(

[14:45] <moritz> gfldex: in theory it should work with   infix:<==>(A, A) is export  { }  and then 'import'

[14:46] <moritz> gfldex: but I'm pretty sure it doesn't work in rakudo right now :/

[14:46] <moritz> gfldex: the only way to make it work is to put P::A into a separate .pm file, and then 'use P::A;'

[14:47] <gfldex> i'm writing a module anyway. Would have been nice to cheat until I really have to turn it into a module. :)

[14:47] *** agentzh left
[14:48] <moritz> agreed

[14:48] *** leprevost joined
[14:48] <gfldex> are >, >=, < etc pp "derived" from cmp? Or do I have to implement all of those?

[14:50] <moritz> you have to implement them all

[14:51] <moritz> though I imagine that one could create a module that derives them for you

[14:51] <gfldex> sounds like (mostly) macro work to me

[14:51] <moritz> aye

[14:51] <moritz> for example for strings, eq and ne can easily short-cut when the length is different, but cmp needs to do the full comparison work

[14:52] <moritz> so in general, it's not a good idea to always derive all the comparators from the most general ones

[14:52] <gfldex> masak++ for providing reason to say: that's for later :->

[14:54] *** tokuhiro_ left
[14:59] *** tarch left
[14:59] *** birdwindupbird left
[15:01] *** zipf joined
[15:02] <tadzik> what's mojibake?

[15:02] <tadzik> oh

[15:03] <tadzik> "KOÅCIÃÅ" is just "Kościół" badly encoded

[15:03] <tadzik> phenny: "kościół latającego potwora spaghetti"?

[15:03] <phenny> tadzik: "Church of the flying spaghetti monster" (pl to en, translate.google.com)

[15:03] *** HarryS left
[15:04] *** leprevost left
[15:06] *** wtw left
[15:16] *** colomon left
[15:17] *** HarryS joined
[15:19] <tadzik> nom: my Num $a = (now - now).Numeric

[15:19] <p6eval> rakudo 68e7f8: OUTPUT«Type check failed in assignment to '$a'; expected 'Num' but got 'Duration'␤  in block <anon> at /tmp/fPIIbFfJff:1␤␤»

[15:19] * tadzik disapproves

[15:20] <moritz> nom: say Duration ~~ Numeric

[15:20] <p6eval> rakudo 68e7f8: OUTPUT«True␤»

[15:20] <moritz> tadzik: then change your type constraint to Numeric (or real), or call .Num

[15:20] <moritz> nom: my Num $a = (now - now).Num\

[15:20] <p6eval> rakudo 68e7f8: OUTPUT«===SORRY!===␤Confused␤at /tmp/8qE7wXJapL:1␤»

[15:20] <moritz> nom: my Num $a = (now - now).Num

[15:20] <p6eval> rakudo 68e7f8: OUTPUT«Type check failed in assignment to '$a'; expected 'Num' but got 'Rat'␤  in block <anon> at /tmp/SA4fbusqbI:1␤␤»

[15:20] <moritz> now *that* I disapprove of

[15:20] <tadzik> yeah, that's the next thing :)

[15:21] <moritz> let me just say "WTF" :-)

[15:21] <tadzik> I'll just pass %s to sprintf :P

[15:21] <moritz> ah, I think I know what's wrong

[15:21] <moritz> Duration.Bridge returns a Rat

[15:22] <moritz> and other parts of the setting assume (for performance reasons) that .Bridge returns a Num

[15:27] *** xinming left
[15:27] *** dalek left
[15:27] *** dalek joined
[15:27] *** ChanServ sets mode: +v dalek

[15:28] *** xinming joined
[15:28] *** tadzik left
[15:29] *** pernatiy left
[15:29] *** tadzik joined
[15:35] *** fglock left
[15:37] <dalek> roast: abc657a | coke++ | S0 (2 files):

[15:37] <dalek> roast: pugs fudge

[15:37] <dalek> roast: review: https://github.com/perl6/roast/commit/abc657acff

[15:39] *** GlitchMr42 joined
[15:40] <tadzik> wordpress is absolutely horrible

[15:40] <tadzik> anyway, blog post! http://ttjjss.wordpress.com/2012/04/02/asynchronous-http-in-perl-6/

[15:41] *** GlitchMr left
[15:41] *** GlitchMr42 is now known as GlitchMr

[15:42] *** kaleem left
[15:42] <constantined> > AnyEvent lookalike

[15:45] *** [particle] joined
[15:46] *** zipf left
[15:48] *** zipf joined
[15:50] *** Patterner left
[15:50] *** zipf left
[15:51] *** zipf joined
[15:52] *** Psyche^ joined
[15:52] *** Psyche^ is now known as Patterner

[16:02] *** NamelessTee joined
[16:06] *** kaleem joined
[16:06] * [Coke] supposed trying to learn to speak mandarin while eating lunch is asking for trouble.

[16:07] <[Coke]> (hard to time the speaking with the eating.)

[16:08] *** kaare_ joined
[16:09] <gfldex> You could talk about food and reach new levels of expressiveness.

[16:11] <sorear> good * #perl6

[16:12] <[Coke]> gfldex: I am still at the beginning, learning to say "I can speak a little Mandarin. Do you speak English?"

[16:19] *** pyrimidine joined
[16:19] *** kaleem left
[16:20] *** dalek left
[16:20] *** d4l3k_ joined
[16:20] *** d4l3k_ is now known as dalek

[16:21] *** zhutingting left
[16:21] *** snearch left
[16:46] *** fglock joined
[16:50] *** brrt joined
[16:56] *** dakkar left
[16:57] *** GlitchMr left
[17:00] *** lichtkind joined
[17:01] *** kaleem joined
[17:02] *** zipf_ joined
[17:02] *** zipf_ left
[17:03] *** zipf left
[17:04] <lichtkind> its allrigth to make a category name signature symbol?

[17:05] <moritz> Cannot parse: two terms in a row

[17:06] *** tyatpi joined
[17:07] <lichtkind> morit runs perl in his head

[17:08] *** spider-mario joined
[17:08] <tadzik> https://github.com/blog/1081-instantly-beautiful-project-pages ooh

[17:08] <lichtkind> in the index i have behind every identifier a category which it belongs to

[17:08] <lichtkind> like special var or regex metachar

[17:08] <lichtkind> now i look for a name of a cat for all the signature thingies like -> ? ! : and alike

[17:09] <moritz> ah. yes.

[17:09] <timotimo> githubcities much?

[17:11] *** simcop2387 left
[17:11] <lichtkind> so would be "signature symbol" be good

[17:11] *** d4l3k_ joined
[17:11] *** dalek left
[17:12] *** simcop2387 joined
[17:12] *** d4l3k_ is now known as dalek

[17:12] *** tadzik left
[17:12] <moritz> if it makes sense for grouping the stuff, yes

[17:13] <moritz> there's no syntactic category that contains ->, : and ! because they are parsed at different points in the program

[17:13] *** tadzik joined
[17:23] <lichtkind> i know thatswhy i ask :)

[17:23] <lichtkind> these i did yesterday

[17:32] *** leprevost joined
[17:33] <masak> o/, #perl6

[17:34] <[Coke]> masak: ho.

[17:36] <moritz> \o masak, [Coke] 

[17:38] * [Coke] tries a hot tea in honor of his recent trip to england.

[17:45] <masak> last week, I invested in a medium-sized box of Kusmi Prince Vladimir. best purchase, all categories, in quite a while.

[17:45] *** envi_ left
[17:46] <tadzik> hi masak 

[17:49] <masak> here, today's autopun, though a weak-ish one: '"What do we want?!" "TIME TRAVEL!" "When do we want it?!" "IRRELEVANT!"'

[17:50] <felher> tadzik++ #blog post :)

[17:51] <masak> (I'm more fond of the zombie joke: '"What do we want?!" "Braaaains" "When do we want it?!" "Braaaains"')

[17:51] <masak> felher: url?

[17:51] <felher> masak: http://ttjjss.wordpress.com/2012/04/02/asynchronous-http-in-perl-6/

[17:51] <masak> danke.

[17:51] <felher> masak: gern geschehen :)

[17:52] <masak> tadzik: nice.

[17:52] * felher -> bus

[17:52] <masak> tadzik++

[17:52] <tadzik> :) thanks

[17:53] <masak> tadzik: ss/how it looks like/how it looks/

[17:53] <tadzik> I'm wondering what's the best way to re-use as much LWP::Simple as possible

[17:53] <tadzik> masak: thanks, fixed && faxed

[17:53] <masak> :D

[17:54] * masak has been teaching Perl 5 today

[17:54] <masak> it's nice to be a Perl 5 teacher while also unashamedly saying "I'm one of the developers of Perl 6".

[17:55] <tadzik> :)

[17:56] *** REPLeffect left
[17:56] <TimToady> it's perhaps more telling that we allow an Agent of Creative Destruction to call himself a developer.  :)

[17:56] *** Trashlord left
[17:57] * masak carelessly swings his sledgehammer

[17:58] *** Trashlord joined
[18:01] <moritz> "undeveloper"?

[18:02] *** dalek left
[18:02] *** dalek joined
[18:02] *** ChanServ sets mode: +v dalek

[18:03] <PerlJam> redeveloper

[18:03] *** kaleem left
[18:05] <[Coke]> cad.

[18:05] <masak> :P

[18:09] *** REPLeffect joined
[18:10] <masak> my approach to teaching scalar/list context and sigil variance is based on "yes, this is confusing. it's not just you."

[18:10] <tadzik> :P

[18:11] *** s1n left
[18:11] <masak> scalar/list context is weird because it flows inwards in expressions. return values flow outwards, and that's the direction we're used to thinking of things flowing in expressions.

[18:12] <masak> one very bright student asked "how can I create a sub that differentiates context?". I showed them wantarray().

[18:13] <masak> (for a brief moment, I seemed to recall it was named "want()". the perils of being a Perl 6 historian.)

[18:14] <sorear> how much flak do you get for being into perl6?

[18:14] <masak> none, so far.

[18:15] <masak> these are people whose relation to Perl is "do you think Python is worth looking into?" or "so, what's Parrot?"

[18:15] <PerlJam> masak: do you get any interest in Perl 6?  or confusion about Perl 5/6

[18:15] <PerlJam> ?

[18:15] <masak> no, no confusion. a mild but distanced interest.

[18:16] <masak> I told them I kept writing 'say' and expected Perl 5 to have it, because I was used to it in Perl 6.

[18:16] <PerlJam> good I guess

[18:16] <masak> s/to have it/to have it by default/

[18:17] <gfldex> Why would they have interest when they don't know why they would want to have interest?

[18:17] <moritz> that's why I start all my p5 programs with 'use 5.010;'

[18:17] <PerlJam> moritz: me too

[18:17] <masak> me too, usually.

[18:17] <moritz> gfldex: our marketing effort might not have been totally futile :-)

[18:19] <masak> gfldex: the name "Perl 6" (when they're still on 5) seems to indicate by default that they should pay a modicum of attention.

[18:19] <gfldex> Until they believe the propaganda on the interweb that Perl 6 is a stillborn.

[18:20] <gfldex> and i doubt that will change until folk see real programs written with real perl 6

[18:20] * gfldex might push Gregorian.pm to github tonight

[18:21] <masak> I feel mostly a sense of patient expectation from most people.

[18:21] <gfldex> can we increase earth's rotation a little so i can get rid of leapyears?

[18:22] <masak> the ones that are highly negative are mostly a small set of Perl 5 enthustiasts.

[18:22] <masak> and in a way, I understand them.

[18:23] <moritz> gfldex: come on, leap years are harmless, if you compare them to leap seconds, daylight saving times, time zones, changing time zones and the likes

[18:23] <gfldex> moritz: thank you for reminding me of the pain that waits ahead of me :)

[18:23] <moritz> gfldex: you're welcome

[18:24] *** fhelmberger left
[18:25] <moritz> gfldex: there's a reason I only wrote the Date class in rakudo, and not DateTime

[18:26] *** zipf joined
[18:26] *** s1n joined
[18:29] <Ulti> dealing with past dates is sometimes annoying too, like the days missing in the Gregorian calendar.. and if you transition to Julian leap years before 1582

[18:30] <moritz> aye

[18:31] *** dalek left
[18:31] *** masak left
[18:31] *** tadzik left
[18:31] *** zipf left
[18:31] *** [Coke] left
[18:31] *** s1n left
[18:32] <gfldex> i still have no idea how i should handle Samoa

[18:32] <gfldex> they kindly changed TZ last year

[18:32] *** pmichaud left
[18:32] *** Util left
[18:32] *** zipf joined
[18:32] *** PerlJam left
[18:32] *** hugme left
[18:32] <sorear> gfldex: the USA changed their timezone a couple years ago

[18:32] *** Juerd left
[18:33] <sorear> you have to handle timezones as general functions, not just offsets

[18:33] <sorear> use a zoneinfo file

[18:33] <gfldex> i wonder if they got payed less in december in zamoa given they had only 30 days :)

[18:37] *** zipf left
[18:37] *** masak_in_exile joined
[18:37] * masak_in_exile hugs feather

[18:38] <masak_in_exile> gfldex: from what I remember, people were promised the same pay.

[18:39] <masak_in_exile> but the TZ jump in itself is a significant sign of the times. Samoa essentially wanted to be closer to Asia than to the west, because they're doing more business with Asia, and it makes sense to be on the same day as they.

[18:43] *** mtk left
[18:43] *** dalek joined
[18:43] *** ChanServ sets mode: +v dalek

[18:44] *** Juerd joined
[18:44] *** hugme joined
[18:44] *** ChanServ sets mode: +v hugme

[18:44] *** tadzik joined
[18:47] <Ulti> < masak> I feel mostly a sense of patient expectation from most people.   <--- It's more like imminent euphoria

[18:47] *** s1n joined
[18:48] *** masak joined
[18:48] *** [Coke] joined
[18:48] <Ulti> at least from me, I watched a fun talk from Jonathan Worthington on all the magic you can do with multi dispatch with constraints

[18:48] *** Util joined
[18:48] *** pmichaud joined
[18:48] *** Chillance joined
[18:48] <masak> Ulti: yeah, that talk is very nice :)

[18:49] *** PerlJam joined
[18:49] <masak> Ulti: best of all, that stuff *works* already. in Rakudo as well as Niecza.

[18:50] <Ulti> yeah exactly, that plus regex makes perl6 already something worth using by everyone, ignoring the full spec

[18:51] *** GlitchMr joined
[18:52] <Ulti> I should write some modules for parsing bioinformatics data formats and push perl6 on my friends in academia

[18:52] *** masak_in_exile left
[18:52] *** dalek left
[18:52] *** dalek joined
[18:52] *** ChanServ sets mode: +v dalek

[18:53] *** pmichaud left
[18:53] *** pmichaud joined
[18:54] <sorear> Ulti: are you Util?

[18:55] *** pernatiy joined
[18:55] <Ulti> nope

[18:55] <masak> no, they are distinct but confusingly similarly named.

[18:56] <Ulti> are we similar even under nick colours?

[18:56] <sorear> are you new here?

[18:56] <Ulti> new and a lurker

[18:56] <sorear> welcome, Ulti.

[18:56] <sorear> Ulti: I figured that might be Util's backup nick

[18:56] <Ulti> I dont know enough perl6 to really contribute I'm just so taken with what I've seen I thought it was worth keeping an eye on the action

[18:57] <sorear> some people here have creative choices for the nick to use when their main nick is unavailable

[18:57] <Ulti> weirdly Ulti was my backup since Ultima was taken on freenode

[18:57] *** mtk joined
[18:59] *** pmichaud left
[18:59] <fsergot> What is NativeCall for? :)

[18:59] *** dalek left
[18:59] *** tadzik left
[18:59] *** hugme left
[19:00] *** masak left
[19:00] *** PerlJam left
[19:00] *** localhost left
[19:00] *** [Coke] left
[19:00] *** Util left
[19:00] *** Juerd left
[19:01] <Ulti> fsergot for allowing a perl6 signature to bind to an external c library native function

[19:01] <gfldex> fsergot: to call c-functions from perl6 without much hassle

[19:01] <Ulti> snap

[19:01] *** localhost joined
[19:02] <fsergot> Ulti++

[19:02] <fsergot> gfldex++

[19:02] <fsergot> thanks! :)

[19:02] <gfldex> it can even load the .so for you

[19:03] *** masak_in_exile joined
[19:04] <Ulti> fsergot: http://www.youtube.com/watch?feature=player_detailpage&v=_JmBtf4o2wI#t=805s

[19:04] <Ulti> wow I did something useful today with my procrastination ;)

[19:05] <fsergot> Ulti: thanks! :)

[19:05] <Ulti> also that whole talk is cool

[19:07] <Ulti> being able to unroll a recursive function to multi dispatch makes it really explicit what you are doing, its almost like PROLOG (dare I say)

[19:08] *** fglock left
[19:11] *** dalek joined
[19:11] *** ChanServ sets mode: +v dalek

[19:12] *** hugme joined
[19:12] *** masak_in_exile left
[19:12] *** ChanServ sets mode: +v hugme

[19:14] <sorear> Ulti: have you ever used haskell?

[19:15] *** Juerd joined
[19:16] *** pmichaud joined
[19:16] *** tyatpi left
[19:16] *** masak joined
[19:16] *** [Coke] joined
[19:16] *** Util joined
[19:17] *** PerlJam joined
[19:17] *** mtk left
[19:18] *** mtk joined
[19:18] <Ulti> sorear: no I haven't

[19:18] *** tadzik joined
[19:19] <gfldex> that's where perl6 MMD was stolen from

[19:19] <TimToady> actually, probably more Erlang

[19:20] <Ulti> orly, I should probably check out Haskell then

[19:20] <spider-mario> yes, you should

[19:20] <TimToady> or maybe ML

[19:20] <gfldex> they have all stolen from each other :)

[19:20] *** mtk left
[19:21] <Ulti> its only recently that I've realised a lot of my perl ends up being functional style, I think Lisp made me hate the concept of functional programming even though its what I have a subconscious preference for

[19:21] <TimToady> yes, Lisp, the most ugly beautiful language :)

[19:21] * jnthn back o/

[19:21] <Ulti> and even Lisp I wrote off from using a strange NASA variant called CLIPS

[19:22] <masak> Lisp has an obsession with trees :)

[19:22] <masak> jnthn! \o/

[19:23] <sorear> Haskell is a language I know that has a lot of this stuff.

[19:23] <sorear> However, there are no(?) original ideas in Haskell - it's a committee synthesis of the best parts of a baker's dozen similar previous languages, like Miranda and SASL

[19:24] <TimToady> perl6: say (((1 => 2) => 3) => 4 => 5 => Nil).perl

[19:24] <p6eval> pugs: OUTPUT«*** No such subroutine: "&Nil"␤    at /tmp/lePaVFTQy7 line 1, column 6-38␤»

[19:24] <p6eval> ..rakudo 68e7f8, niecza v16-17-g648c49b: OUTPUT«1 => 2 => 3 => 4 => 5 => Nil␤»

[19:24] <sorear> many of those languages owe a lot to ML

[19:24] <Ulti> I think I'd rather learn perl6 if I'm to learn yet another language

[19:24] <spider-mario> yes, trees might be what repelled me from lisp

[19:24] <spider-mario> writing trees is fun five minutes

[19:24] <TimToady> nobody represents cons trees right with .perl yet

[19:25] <spider-mario> I’d rather have some flatness sometimes

[19:25] *** mtk joined
[19:26] <TimToady> pugs: say (((1 => 2) => 3) => 4 => 5 => 6).perl

[19:26] <p6eval> pugs: OUTPUT«(((1 => 2) => 3) => (4 => (5 => 6)))␤»

[19:26] <TimToady> well, pugs does, but doesn't know Nil

[19:27] <TimToady> the righthand parens are redundant though

[19:27] <TimToady> since => is right associative

[19:29] *** pernatiy left
[19:31] <masak> "it doesn't know Nil" sounds like one of those slang double negation thingies.

[19:32] <masak> pugs: Jack

[19:32] <p6eval> pugs: OUTPUT«*** No such subroutine: "&Jack"␤    at /tmp/BbM0u48kCH line 1, column 1 - line 2, column 1␤»

[19:32] <masak> pugs doesn't know jack either :P

[19:32] <Ulti> if only languages would take newick as a tree literal :)

[19:32] <masak> Ulti: write a library.

[19:33] <masak> and then, when the time is right, we'll write a slang \o/

[19:33] <Ulti> :)

[19:33] <Ulti> someone in my research group already has a recursive perl5 regex to parse newick

[19:33] *** birdwindupbird joined
[19:34] <Ulti> we should probably move it to something sane looking in perl6

[19:35] <sorear> newick?

[19:36] <Ulti> he also said he planned to take a week out to learn perl6 so maybe this would be a fun little project

[19:36] <masak> sorear: https://en.wikipedia.org/wiki/Newick_format

[19:36] <Ulti> sorear: its the maths literal notation for a tree, and used a lot in bioinformatics

[19:36] <Ulti> its not really a "standard" though

[19:36] <Ulti> and is abused a lot

[19:37] *** M_o_C joined
[19:37] <Ulti> just in case anyone cares http://adam.sardar.me.uk/?p=583

[19:38] <masak> :P

[19:41] <dalek> rakudo/nom: 8ead1e8 | jonathan++ | src/Perl6/Metamodel/BaseType.pm:

[19:41] <dalek> rakudo/nom: Enable parents to handle :excl and :all options for things that compose BaseType. Fixes .^methods on enums bustage.

[19:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8ead1e8cfd

[19:42] <Ulti> also that pimp my regex picture is too great not to link to

[19:52] <timotimo> supposedly, "LoL @data" or "lol @data" is supposed to unflatten a list?

[19:53] <masak> timotimo: LoL is the type, .lol is the unflattening conversion method

[19:53] <moritz> currently .tree does that

[19:53] <masak> maybe it's a listop too, I dunno.

[19:55] <timotimo> r: my @data = [1, 2], [3, 4], [5, 6]; say @data.lol;

[19:55] <p6eval> rakudo 68e7f8: OUTPUT«Method 'lol' not found for invocant of class 'Array'␤  in block <anon> at /tmp/4R2gGVazOM:1␤␤»

[19:55] <timotimo> supposedly that's the case because that assignment flattens already?

[19:55] <timotimo> i thought that was kind of "lazily" done?

[19:56] <moritz> note that @data.lol would be a noop

[19:57] *** pernatiy joined
[19:58] <moritz> ((1, 2), (3, 4)).lol would return a two-element LoL

[19:58] <moritz> (at least I think so)

[20:06] <dalek> roast: ba52bb7 | moritz++ | S12-enums/misc.t:

[20:06] <dalek> roast: RT #112202, SomeEnum.^parents

[20:06] <dalek> roast: review: https://github.com/perl6/roast/commit/ba52bb7f7b

[20:06] <jnthn> ooh, that was fast :)

[20:07] <moritz> :-)

[20:07] <moritz> I could say the same about the fix :-)

[20:07] <tadzik> jnthn! \o/

[20:09] <jnthn> hi tadzik :)

[20:10] <jnthn> moritz: Well, I'm in my hotel hiding from pre-thunderstorm humidity and it was LHF... :)

[20:10] <masak> quick! submit more LHF!

[20:10] <jnthn> :P

[20:10] <tadzik> precompilation causes segfaults!

[20:10] <tadzik> :D

[20:10] <jnthn> That ain't LHF :P

[20:10] <tadzik> dang, thought you may not notice ;)

[20:11] * masak .oO( I accidentally didn't notice that the bug I fixed was really hard to fix )

[20:12] *** GlitchMr left
[20:21] <fsergot> good night #perl6 \o

[20:21] *** fsergot left
[20:25] <masak> 'branoc, fsergocie.

[20:26] *** __sri joined
[20:27] *** hillu_ joined
[20:27] *** diakopte1 joined
[20:27] *** apejens_ joined
[20:28] *** Ulti_ joined
[20:30] *** yves_ joined
[20:30] *** jlaire left
[20:30] *** diakopter left
[20:30] *** drbean left
[20:30] *** apejens left
[20:30] *** hillu left
[20:30] *** localhost left
[20:31] *** _sri left
[20:31] *** sudokode left
[20:31] *** krunen left
[20:31] *** integral left
[20:31] *** yves left
[20:31] *** Ulti left
[20:32] *** localhost joined
[20:33] *** integral joined
[20:33] *** integral left
[20:33] *** integral joined
[20:33] *** jlaire joined
[20:34] *** xenu left
[20:34] *** xenu joined
[20:35] *** xenu is now known as Guest69907

[20:36] *** spider-mario left
[20:36] *** krunen joined
[20:38] *** zipf joined
[20:42] *** brrt left
[20:47] *** birdwindupbird left
[20:54] *** Trashlord left
[20:58] *** sudokode joined
[21:05] <gfldex> perl6: enum Day <Mon Tue Wed>; for Day -> $d { say $d };

[21:05] <p6eval> pugs: OUTPUT«*** No such subroutine: "&enum"␤    at /tmp/Gualz1b9nN line 1, column 1-23␤»

[21:05] <p6eval> ..rakudo 8ead1e, niecza v16-17-g648c49b: OUTPUT«Day()␤»

[21:06] *** skids left
[21:07] <masak> gfldex: try 'for Day.enums'

[21:07] *** apejens_ is now known as apejens

[21:07] <gfldex> perl6: enum Day <Mon Tue Wed>; for Day.enmus -> $d { say $d };

[21:07] <p6eval> niecza v16-17-g648c49b: OUTPUT«Unhandled exception: Unable to resolve method enmus in class Day␤  at /tmp/zz11BBNG8Z line 1 (mainline @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3839 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3840 (module-CORE @ 65) ␤  at /home/…

[21:07] <p6eval> ..pugs: OUTPUT«*** No such subroutine: "&enum"␤    at /tmp/K9RzYvOzbU line 1, column 1-23␤»

[21:07] <p6eval> ..rakudo 8ead1e: OUTPUT«Method 'enmus' not found for invocant of class 'Day'␤  in block <anon> at /tmp/z2Rjp1cYGv:1␤␤»

[21:08] <gfldex> perl6: enum Day <Mon Tue Wed>; for Day.enums -> $d { say $d };

[21:08] <p6eval> pugs: OUTPUT«*** No such subroutine: "&enum"␤    at /tmp/hv8S0CXbyU line 1, column 1-23␤»

[21:08] <p6eval> ..rakudo 8ead1e, niecza v16-17-g648c49b: OUTPUT«"Mon" => 0␤"Tue" => 1␤"Wed" => 2␤»

[21:08] <gfldex> not overly DWIM

[21:08] <gfldex> but it will do :)

[21:08] *** M_o_C left
[21:10] *** zipf left
[21:10] <masak> gfldex: fwiw, I don't agree with your intuition that the Day enum type object should listify to all its enums.

[21:10] <masak> it doesn't feel do-what-I-mean to me.

[21:12] <jnthn> Cute today, to magical tomorrow.

[21:13] <jnthn> *too

[21:13] <gfldex> my intuition might be fooled by the fact that I give the compiler a list but what the enum gets is a hash

[21:14] <masak> no, that in itself is usually fine.

[21:14] <gfldex> if i now go and ask the list back from the enum is is indeed allowed to be confused

[21:14] <masak> you can for loop over a hash.

[21:14] <masak> but the enum type object is just that, a type object.

[21:15] <masak> it doesn't expand or explode into its constituent parts.

[21:15] <PerlJam> Is Day.enums guaranteed to give them in a specific order?

[21:15] <masak> much like a class type object doesn't exapnd into all its instances :)

[21:15] <PerlJam> masak: so ... there's a Class.instances() that'll give me all of them?  :)

[21:16] <masak> not sure that's such a good idea :)

[21:16] <masak> r: enum Day <Mon Tue Wed>; say Day.enums.^name

[21:16] <p6eval> rakudo 8ead1e: OUTPUT«Hash␤»

[21:16] <masak> PerlJam: does that answer your question?

[21:17] <gfldex> are enums and their hashes immutable?

[21:18] <masak> yeah.

[21:18] <masak> they're really a kind of constants.

[21:20] <gfldex> can i MONKEY_TYPE them? (that would be crazy :)

[21:20] <PerlJam> masak: Aye.  It was curious that no one pointed that out though.

[21:20] <jnthn> Well, they're backed by an EnumHOW so you can go monkeying at the meta-level.

[21:21] <jnthn> But if you do so after CHECK time then on your own head be it :)

[21:21] <gfldex> that could cause some realy cool bug reports :->

[21:21] <masak> I'd much rather see switch statements be optimized to jump tables :)

[21:22] <jnthn> gfldex: If you submit a bug report saying "I did stupid things in meta-space and X bad thing happened" then it's probably just gonna be rejected. :)

[21:23] <jnthn> masak: Yes, optimization happens after CHECK time. Thus my comment on "be careful" :)

[21:24] * gfldex backs off

[21:24] <jnthn> :)

[21:28] *** tyatpi joined
[21:28] <masak> tyatpi: greetings.

[21:34] <flussence> so, how much of this does "use v6;" get you? :) http://www.perl.com/pub/2012/04/perlunicook-standard-preamble.html

[21:36] <masak> most of it, I think.

[21:39] *** tyatpi left
[21:40] <tadzik> good nigh #perl6

[21:41] <masak> nigh, o tadziku.

[21:51] *** s1n left
[21:53] *** kst joined
[21:55] *** aindilis joined
[21:59] *** Araq joined
[22:05] <masak> 'night, #perl6

[22:05] *** leprevost left
[22:06] *** Trashlord joined
[22:07] *** s1n joined
[22:08] *** Araq left
[22:11] *** ashleydev left
[22:12] <lichtkind> masak: still there?

[22:12] *** kaare_ left
[22:19] *** ashleydev joined
[22:25] *** rgc joined
[22:26] *** PacoAir left
[22:48] *** NamelessTee left
[23:10] *** jferrero left
[23:12] *** jferrero joined
[23:16] *** DarthGandalf left
[23:18] *** jferrero left
[23:21] *** jferrero joined
[23:28] *** Chillance left
[23:32] *** tyatpi joined
[23:40] *** lichtkind left
[23:45] *** lichtkind joined
[23:48] *** envi_ joined
[23:49] *** whiteknight joined
