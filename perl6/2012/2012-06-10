[00:03] <adu> araujo: compiling?

[00:07] *** adu left
[00:13] <sergot> good night! o/

[00:13] *** sergot left
[00:18] <araujo> http://ideone.com/HSRm4

[00:19] <araujo> I get that trying to build latest rakudo

[00:41] *** adu joined
[00:45] *** thelazydeveloper left
[01:55] *** Guest48609 left
[01:56] <adu> grr

[01:57] <diakopter> ?

[01:58] <adu> http://pastebin.com/raw.php?i=uMdcumbd

[01:58] <adu> same grammar

[01:58] <adu> I can't get <semi> right

[01:59] <diakopter> I don't know the intended syntax/semantics

[01:59] <adu> for reference: http://golang.org/ref/spec#Semicolons

[02:02] <diakopter> well, maybe it's a whitespace problem

[02:02] <diakopter> the <?after don't scan through whitespace if it's a token, i don't think

[02:02] <adu> oic

[02:03] <diakopter> of course I very well could be wrong

[02:03] <adu> I don't think so

[02:03] <adu> there shouldn't be any whitespace between the last token on line and \n

[02:03] <diakopter> shouldn't, but some people do

[02:04] <diakopter> or put a comment

[02:04] <adu> hmm

[02:06] <diakopter> whta's the input you're trying to parse

[02:07] *** xdbr left
[02:07] <adu> 'package main\nimport "fmt"\n'

[02:08] <adu> 'package main;import "fmt";' parses just fine

[02:14] *** tokuhiro_ joined
[02:18] *** xinming_ joined
[02:21] *** xinming left
[02:21] <adu> you know what

[02:22] <adu> I think I have a better solution

[02:48] *** lumi_ left
[02:48] *** lumi_ joined
[03:03] <sorear> good * #perl6

[03:03] <adu> good?

[03:30] *** cbk left
[03:33] *** crab2313 joined
[03:43] *** Chillance left
[03:46] <araujo> hello sorear o/

[03:46] <sorear> o/ araujo

[03:55] <adu> o I get it now, * = morning | evening | night | day, depending on your location

[03:55] <benabik> * is the whatever operator  :-)

[03:56] <adu> only in bash

[03:56] <benabik> Also in perl 6.

[03:56] <adu> I thought it was 0..inf

[03:56] <benabik> nom: (* * *)(2,2)

[03:56] <p6eval> rakudo 9ad893:  ( no output )

[03:56] <benabik> nom: say (* * *)(2,2)

[03:56] <p6eval> rakudo 9ad893: OUTPUT«4␤»

[03:57] <adu> how true that is

[03:57] <adu> r: say (* + *)(2, 2)

[03:57] <p6eval> rakudo 9ad893: OUTPUT«4␤»

[04:02] * [Coke] yawns

[04:19] * adu gives [Coke] some Coke

[04:37] *** crab2313 left
[04:39] *** crab2313 joined
[05:04] *** raiph left
[05:18] *** birdwindupbird joined
[05:57] *** birdwindupbird left
[06:21] *** tokuhiro_ left
[06:36] *** GlitchMr joined
[06:36] *** Entonian joined
[06:37] *** kaare_ joined
[06:41] *** Entonian left
[06:54] *** cognominal joined
[06:57] *** cognominal_ left
[07:00] *** adu left
[07:22] *** xiaq joined
[07:25] *** xiaq left
[07:50] *** dbr joined
[07:55] *** cognominal left
[07:55] *** cognominal joined
[08:17] *** sergot joined
[08:17] <sergot> Hello o/ 

[08:17] <sorear> o/

[08:22] <sorear> n: END die "moo"

[08:22] <p6eval> niecza v18-6-ge52d6c3: OUTPUT«Unhandled exception: moo␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /tmp/3p8mRqhpNq line 1 (ANON @ 2) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1639 (List.gist @ 5) ␤  at <unknown> line 0 (ExitRunloop @…

[08:30] *** fgomez left
[08:38] *** birdwindupbird joined
[08:51] <TimToady> just added http://rosettacode.org/wiki/Set_of_real_numbers#Perl_6

[08:51] <TimToady> if anyone wants to do the optional final part while I sleep, feel free

[08:52] <TimToady> oh, works with rakudo, doubt it works under niecza

[08:53] <dalek> niecza/non-bootstrap: fcffb6e | sorear++ | / (4 files):

[08:53] <dalek> niecza/non-bootstrap: Steal a bit more structure from NieczaFrontendSTD

[08:53] <dalek> niecza/non-bootstrap: review: https://github.com/sorear/niecza/commit/fcffb6ebeb

[08:54] <sorear> TimToady: did you see my question about <[^x]> ?

[08:54] <TimToady> already >>todo, thanks

[08:54] <TimToady> zzz &

[08:55] <sorear> I think that task should be renamed Borel_algebra

[08:58] <sorear> sleep&

[09:04] *** birdwindupbird left
[09:20] *** grondilu joined
[09:20] <grondilu> full log (stdin+stderr) of my compilation failure: http://s0.barwen.ch/~grondilu/nqp-parrot-compile-error

[09:20] <grondilu> s/stdin/stdout/

[09:22] <grondilu> uname -a: Linux blacky 3.4-1.slh.2-aptosid-686 #1 SMP PREEMPT Tue Jun 5 20:20:12 UTC 2012 i686 GNU/Linux

[09:23] <grondilu> debian/sid/aptosid pretty much up-to-dated

[09:25] *** [particle]1 joined
[09:25] *** sergot left
[09:26] *** [particle] left
[09:28] *** will joined
[09:35] *** sergot joined
[09:40] *** brrt joined
[09:44] <dalek> doc: afb84de | moritz++ | lib/List.pod:

[09:44] <dalek> doc: [List] sort, rotate

[09:44] <dalek> doc: review: https://github.com/perl6/doc/commit/afb84de1d9

[09:44] <moritz> grondilu: have you ruled out interference by other parrot installations?

[09:48] *** tokuhiro_ joined
[09:51] <dalek> doc: 47dbe4a | moritz++ | lib/List.pod:

[09:51] <dalek> doc: [List] reduce

[09:51] <dalek> doc: review: https://github.com/perl6/doc/commit/47dbe4a0a3

[10:04] * jnthn just did a clean NQP build here and...no luck

[10:04] <jnthn> (As in, it works...didn't manage to get the failure.)

[10:04] <moritz> jnthn: no luck in building? or in reproducing?

[10:04] <grondilu> moritz: I've removed all my rakudo dir and recloned it.

[10:05] <moritz> grondilu: yes, but do you have any other parrot installation directories on your disc?

[10:05] <jnthn> moritz: In reproducing

[10:06] <grondilu> moritz: indeed!

[10:06] * jnthn tries it on another box.

[10:06] <grondilu> I had a copy of parrot in /usr/local/bin!

[10:07] <grondilu> a hard copy, not a symlink

[10:07] <grondilu> should I check anything else ?

[10:09] <grondilu> next time I'll make a symlink.  Sorry for having bothered you with such a silly mistake

[10:09] *** grondilu left
[10:10] <jnthn> ...so, did that fix the problem?

[10:33] *** PacoAir joined
[10:33] *** whiteknight joined
[10:34] *** whiteknight is now known as Guest64819

[10:34] *** spider-mario joined
[10:34] *** thelazydeveloper joined
[10:59] *** Nick___ joined
[11:08] *** [particle] joined
[11:08] *** Nick___ left
[11:11] *** [particle]1 left
[11:28] *** brrt left
[11:28] *** brrt1 joined
[11:45] *** brrt1 left
[12:03] *** tokuhiro_ left
[12:10] *** mikemol joined
[12:11] *** am0c joined
[12:17] *** kaare_ left
[12:20] *** Guest64819 left
[12:21] *** JimmyZ_ joined
[12:30] *** crab2313 left
[12:31] *** crab2313 joined
[12:48] *** tokuhiro_ joined
[12:54] *** crab2313 left
[13:08] *** Psyche^ joined
[13:09] *** crab2313 joined
[13:10] <moritz> jnthn: ping

[13:10] <jnthn> moritz: pong

[13:10] <moritz> jnthn: I'm trying to figure out why require doesn't merge GLOBAL

[13:10] <moritz> jnthn: reading the code it seems it should

[13:11] <jnthn> You're calling the module loader and passing GLOBAL?

[13:11] <moritz> the code that is emitted for require calls ModuleLoader.load_module($name, GLOBAL) at run time

[13:11] <moritz>         make PAST::Op.new(

[13:11] <moritz>             :pasttype('callmethod'), :name('load_module'),

[13:11] <moritz>             PAST::Var.new( :name('ModuleLoader'), :namespace([]), :scope('package') ),

[13:11] <moritz>             $name_past, $*W.symbol_lookup(['GLOBAL'], $/)

[13:11] <moritz>         );

[13:12] *** Patterner left
[13:12] *** Psyche^ is now known as Patterner

[13:12] <jnthn> Yeah, that looks like it should work to me too.

[13:12] *** [particle]1 joined
[13:12] <jnthn> Did you try looking at GLOBAL::.keys after doing the require?

[13:12] <jnthn> Is it untouched?

[13:14] <moritz> the required module does appear in GLOBAL::.keys

[13:14] *** [particle] left
[13:15] <jnthn> OK, that would seem to suggest the global merge worked out then

[13:15] <jnthn> What access to it that you'd expect to work is failing?

[13:16] <moritz> oh, I'm just stupid

[13:16] <jnthn> Oh?

[13:16] <moritz> I wrote ::OUR{...} instead of OUR::{...}

[13:16] * jnthn doubts that :)

[13:16] <jnthn> Oh!

[13:16] <jnthn> Doesn't that warn?

[13:16] <moritz> r: say ::OUR{'Int'}

[13:16] <jnthn> r: ::OUR{'foo'}

[13:16] <p6eval> rakudo 9ad893: OUTPUT«Any()␤»

[13:16] <p6eval> rakudo 9ad893:  ( no output )

[13:17] <jnthn> r: Int{'foo'}

[13:17] <p6eval> rakudo 9ad893:  ( no output )

[13:17] <jnthn> oh...it's whence syntax...

[13:19] * araujo tries go building rakudo again and see if it works

[13:21] <moritz> Q: how do you turn a 17-month old girl who has been screaming for 10 solid minutes into a happy version of the same girl? A: give her blueberries!

[13:21] <tadzik> :)

[13:22] <moritz> she so loves that stuff

[13:26] <dalek> rakudo/require-arglist: 1ebfd94 | moritz++ | src/core/operators.pm:

[13:26] <dalek> rakudo/require-arglist: fix stupid thinkos in require import

[13:26] <dalek> rakudo/require-arglist: review: https://github.com/rakudo/rakudo/commit/1ebfd94d29

[13:27] <jnthn> Blueberries are even pretty healthy too :)

[13:28] <moritz> sadly a bit expensive

[13:28] <moritz> at least here

[13:29] <moritz> r: Any()

[13:29] <p6eval> rakudo 9ad893: OUTPUT«No such method 'Any' for invocant of type 'Parcel'␤  in <anon> at src/gen/BOOTSTRAP.pm:804␤  in <anon> at src/gen/BOOTSTRAP.pm:801␤  in any <anon> at src/gen/BOOTSTRAP.pm:796␤  in block <anon> at /tmp/hkchSzjbey:1␤␤»

[13:29] <moritz> that's a weird error

[13:29] <moritz> ah

[13:30] <moritz> it tries to call .Any on the argument list

[13:30] <moritz> which is an empty Parcel

[13:31] <moritz> anyway, now require with arglist doesn't produce an error anymore, but puts Any into the variables from the import list :(

[13:33] <diakopter> github for windows is neat, so far

[13:33] *** grondilu joined
[13:34] <grondilu> I thought removing /usr/local/bin/parrot would solve my compilation problem.  But no, it still can't compile :(

[13:35] * grondilu is trying again and saves the full log

[13:36] *** birdwindupbird joined
[13:36] <moritz> grondilu: you probably don't just have to remove the binary, but also the libraries etc.

[13:37] <grondilu> Once everything has been downloaded, how can I run compilation offline?  Configure.pl by default always try to connect to update.

[13:38] <moritz> grondilu: you can run parrot's Configure.pl yourself

[13:38] <moritz> perl Configure.pl --optimize --prefix=$RAKUDO_DIR/install

[13:38] <moritz> and then in nqp

[13:38] <grondilu> ok

[13:39] <moritz> erm, and in parrot, make install

[13:39] <moritz> and then in nqp

[13:39] <moritz> perl Configure.pl --with-parrot=$RAKUDO_DIR/install/bin/parrot

[13:39] <moritz> make install

[13:39] <moritz> and then in rakudo simply 'perl Configure.pl'

[13:39] <grondilu> and none of this is going to try to access internet, right?

[13:40] *** birdwind1pbird joined
[13:41] <grondilu> because with the --gen-nqp or --gen-parrot, it does.

[13:42] <moritz> correct

[13:44] *** JimmyZ_ left
[13:44] <grondilu> anyway I don't see any other lib I should remove.  There is nothing perl6 related in /usr/local/lib or /usr/local/bin and my /usr/local/src/rakudo is brand new.

[13:45] <jnthn> Grr...net connection here is up and down :/

[13:46] <grondilu> my last compilation attempt:  http://s0.barwen.ch/~grondilu/nqp-parrot-compile-error

[13:46] * grondilu I gotta go now, low battery.

[13:46] *** grondilu left
[13:46] <jnthn> My word...the errors get stranger and stranger...

[13:47] <moritz> jnthn: when I have a PAST::Op.new(:pasttype<call>), can I do $past.push($thing) to add arguemnts to the call?

[13:47] <spacebat_> is there a binary package of the latest rakudo star somewhere

[13:47] <jnthn> moritz: yes

[13:47] <moritz> spacebat_: not that I'm aware of

[13:47] <moritz> spacebat_: but I found a fix to my compialtion problem, and by extension possibly to yours

[13:47] <spacebat_> damn, I clobbered my working version with the build that failed

[13:47] <spacebat_> ooh

[13:47] <spacebat_> you mentioned removing -pie

[13:48] <spacebat_> but that it raised some other problem

[13:48] <moritz> spacebat_: try perl Configure.pl --gen-parrot=master

[13:48] <spacebat_> ok I will

[13:48] <moritz> spacebat_: I've pushed the fix to parrot master, so that should get the fixed version

[13:48] <spacebat_> noice

[13:48] <spacebat_> do you know what package parrot depends on broke it?

[13:48] <spacebat_> I assumed it was libc but maybe gcc?

[13:49] <moritz> icu

[13:49] <spacebat_> oh

[13:49] <moritz> well

[13:49] <spacebat_> ok what do I know

[13:49] <moritz> icu-config --ldflags  now returns -pie -fPIE etc.

[13:49] <moritz> but it seems what one should call is   icu-config --ldflags-libsonly

[13:50] <moritz> nick wellnhoefer found it

[13:50] <spacebat_> nick++

[13:52] <spacebat_> seems to have got past the point of failure, moritz++

[13:54] *** UncleFester6 joined
[13:58] <UncleFester6> FWIW I think I am getting the same error as grondilu building the latest rakudo - https://gist.github.com/2905747

[13:58] <araujo> http://ideone.com/HSRm4

[13:58] <araujo> any idea? I keep getting that error

[13:59] <moritz> UncleFester6: do you have any other parrot installations lying around on your system?

[13:59] <UncleFester6> Yes but none on my path and, if they are there, they have been there for ages.

[14:00] <moritz> hm

[14:01] <dalek> rakudo/require-arglist: 3605d62 | moritz++ | src/core/Exception.pm:

[14:01] <dalek> rakudo/require-arglist: X::Import::MissingSymbols needs to inherit from Exception

[14:01] <dalek> rakudo/require-arglist: review: https://github.com/rakudo/rakudo/commit/3605d621f2

[14:16] *** tokuhiro_ left
[14:17] <dalek> rakudo/require-arglist: 60a9808 | moritz++ | src/Perl6/Actions.pm:

[14:17] <dalek> rakudo/require-arglist: fix codegen for call to &REQUIRE_IMPORT

[14:17] <dalek> rakudo/require-arglist: review: https://github.com/rakudo/rakudo/commit/60a9808777

[14:19] *** crab2313 left
[14:20] *** crab2313 joined
[14:26] *** sergot left
[14:30] <moritz> ok, I know why that branch doesn't work as it should

[14:30] <moritz> it tries to bind to CALLER::{$symbol}

[14:30] <moritz> and it does so in a for-loop

[14:31] <moritz> and thus the CALLER refer to the caller of the block in the for-loop

[14:31] <moritz> *refers

[14:33] *** kaare_ joined
[14:41] *** spider-mario left
[14:44] *** sergot joined
[14:44] <moritz> jnthn: it seems that OUR:: in the setting does not see the same thing as OUR:: from user-space code

[14:45] <moritz> jnthn: I have a fixed version of REQUIRE_IMPORT which works when I put it into the file that does the 'require'

[14:45] <moritz> jnthn: but when I use the identical subroutine from the setting, it tells me it can't find the symbols to import

[14:51] <moritz> in fact OUR::.keys is empty when called from within the setting

[14:51] <moritz> r: sub f() { say CALLER::OUR::.keys }; our &foo; f

[14:51] <p6eval> rakudo 9ad893: OUTPUT«␤»

[14:51] <moritz> r: sub f() { say CALLER::OUR::.keys }; our class A { };  f

[14:51] <p6eval> rakudo 9ad893: OUTPUT«A␤»

[14:52] * moritz tries that

[14:58] <dalek> rakudo/require-arglist: 200af35 | moritz++ | src/core/operators.pm:

[14:58] <dalek> rakudo/require-arglist: fix up REQUIRE_IMPORT

[14:58] <dalek> rakudo/require-arglist: 

[14:58] <dalek> rakudo/require-arglist: now it works, except that it currently imports our-symbols and not exported symbols

[14:58] <dalek> rakudo/require-arglist: review: https://github.com/rakudo/rakudo/commit/200af35d8f

[15:09] <moritz> tadzik: I've updated my branch of ufo to also install lib/*.pod files

[15:09] <moritz> tadzik: would be nice if you could change panda to do that too

[15:09] <moritz> (it installs them in the same place as .pm files, where p6doc can find them)

[15:12] <tadzik> moritz: yeah, I tried that yesterday, but lacked tuits to polish it

[15:12] <tadzik> as in: it passed my tests but didn't work with p6doc :)

[15:17] *** adu joined
[15:17] *** Chillance joined
[15:20] <moritz> I'm now checking if the star module-install.pl script copies over .pod files

[15:21] *** sergot left
[15:24] <moritz> it does not :(

[15:26] <dalek> rakudo/require-arglist: d96f5ee | moritz++ | src/core/operators.pm:

[15:26] <dalek> rakudo/require-arglist: require now searches for exported symbols instead of our-scoped symbols

[15:26] <dalek> rakudo/require-arglist: review: https://github.com/rakudo/rakudo/commit/d96f5eef61

[15:26] <dalek> rakudo/require-arglist: fd04ae0 | moritz++ | docs/ChangeLog:

[15:26] <dalek> rakudo/require-arglist: update ChangeLog

[15:26] <dalek> rakudo/require-arglist: review: https://github.com/rakudo/rakudo/commit/fd04ae0a20

[15:26] *** tadzik left
[15:26] *** tadzik joined
[15:29] <dalek> star: 36cc46c | moritz++ | skel/tools/build/module-install.pl:

[15:29] <dalek> star: make module-install.pl copy .pod files

[15:29] <dalek> star: review: https://github.com/rakudo/star/commit/36cc46c41e

[15:29] <dalek> star: 820a006 | moritz++ | / (2 files):

[15:29] <dalek> star: include p6doc

[15:29] <dalek> star: review: https://github.com/rakudo/star/commit/820a006075

[15:32] *** am0c left
[15:35] <adu> is that part of ufo?

[15:40] *** whiteknight joined
[15:40] <moritz> star is not part of ufo

[15:40] *** whiteknight is now known as Guest32908

[15:40] <moritz> adu: or which "that" are you talking of?

[15:41] <moritz> jnthn: require-arglist does what it should, and passes all spectests. Any objections to merging?

[15:41] <jnthn> moritz: No

[15:42] <adu> moritz: module-install.pl?

[15:42] <moritz> adu: that's part of rakudo star, not ufo

[15:44] <dalek> rakudo/nom: 715efa4 | moritz++ | src/Perl6/Actions.pm:

[15:44] <dalek> rakudo/nom: compile-time evaluate argument lists to "require"; check for redeclarations

[15:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/715efa4410

[15:44] <dalek> rakudo/nom: 2e974ac | moritz++ | src/Perl6/Actions.pm:

[15:44] <dalek> rakudo/nom: oops, $<EXPR> is an RPA

[15:44] *** dalek left
[15:44] <moritz> good bye dalek

[15:45] <jnthn> fail

[15:45] <jnthn> moritz++

[15:45] <jnthn> Another nice thing for the next release :)

[15:45] <moritz> 's ok, you've seen all those commits in the branch anyway

[15:45] <jnthn> OUR:: in the setting is a bit dubious.

[15:45] *** dalek joined
[15:45] *** ChanServ sets mode: +v dalek

[15:45] <moritz> (except the merge commit)

[15:45] <jnthn> I know we should not install anything in GLOBAL in the setting

[15:45] <moritz> CALLER::OUR:: worked

[15:45] <jnthn> Yeah, that will be fine.

[15:46] <jnthn> Anyway, the setting's own version of GLOBAL gets ignored.

[15:46] <jnthn> We make a fresh one when starting to compile.

[15:47] <jnthn> Hmm...what on earth is going on with some people not being able to build current NQP :S

[15:49] * moritz has no idea

[15:49] <moritz> spacebat_: did your most recent build work?

[15:49] <moritz> tadzik: do you have icu installed on your debian testing machine?

[15:49] <tadzik> moritz: I think so, yes

[15:50] *** birdwindupbird left
[15:50] *** birdwind1pbird left
[15:57] *** will left
[15:58] *** hedgeward joined
[15:59] *** birdwindupbird joined
[15:59] <birdwindupbird> :resize -10

[16:09] *** icwiener_ joined
[16:11] *** brrt joined
[16:12] *** adu left
[16:20] *** [particle]1 left
[16:22] *** brrt left
[16:26] <felher> Can nom set a default value for a hash?

[16:28] <felher> hmm.. I guess is default(...) is not what i am searching for.

[16:29] <sorear> What do you mean?

[16:29] <felher> I want %hash{3} return "blar" instead of Any if there is no {3} in %hash

[16:30] <felher> *to return

[16:30] <moritz> it's not directly supported, but it's not too hard to write a role which can mix into your hash and which does just that

[16:31] <moritz> I did a similar thing recently where somebody wanted non-existing hash keys to throw an exception instead

[16:31] <felher> moritz: ok. Thanks. I'll use a mixin :)

[16:38] *** kaare_ left
[16:46] <hedgeward> What's a good link for tracking the status of concurrency support in Rakudo?  Or are the critical path blockers more in the Parrot implementation and scheduler?

[16:47] <moritz> hedgeward: the parrot folks are currently trying to make threads work on windows

[16:47] <moritz> hedgeward: only then will it be included in parrot's main branch, and available to rakudo

[16:48] <hedgeward> Thanks.  

[16:50] *** kaare_ joined
[16:51] <moritz> hedgeward: when rakudo gets threads, you'll be able to read about it in the release announcements, and probably on the blogs on planetsix.perl.org

[16:53] *** Guest32908 left
[16:53] *** sporous left
[16:54] *** sporous joined
[16:55] <hedgeward> moritz: those I already track.  I'll take a look at the Parrot branches and see what's going on, and whether they are starting with the scheduler,I/O support, or user threads.

[16:57] <moritz> hedgeward: there's also #parrot on irc.perl.org. iirc whiteknight and nine are working on the threads stuff

[17:05] <felher> perl6: class C { has $!e1; has $!e2; method BUILD() { $!e1 = 3; $!e2 = False but anon role { method Int() { return $!e1; } }; }; };

[17:05] <p6eval> niecza v18-6-ge52d6c3, pugs:  ( no output )

[17:05] <p6eval> ..rakudo 1b827c: OUTPUT«===SORRY!===␤Attribute $!e1 not declared in role <anon>␤at /tmp/clNJoyeuPg:1␤»

[17:06] <felher> Hm... Is that NYI?

[17:08] <felher> Hm.. would that even do what i expect it to do....

[17:09] <felher> Hm i guess that tries to access $!e1 in the anon role, not in the instance of C. I guess i have to introduce a lexical for that...

[17:10] <moritz> yes

[17:10] <moritz> or you can make a parametric role

[17:11] <moritz> role mymixin[Int $v] { method Int() { $v } } ;   $thing but mymixin[$!e2];

[17:11] *** xinming_ left
[17:12] <felher> moritz: okay, thanks :)

[17:13] <moritz> (there are some cases where lexicals and roles don't mix wll; the parametric role is more robust then)

[17:18] *** crab2313 left
[17:19] *** xinming joined
[17:27] *** birdwindupbird left
[17:29] *** cognominal_ joined
[17:31] *** sivoais left
[17:32] *** cognominal left
[17:39] *** sivoais joined
[17:42] *** mikemol left
[17:45] *** mtk left
[17:49] *** fgomez joined
[17:57] <moritz> pmichaud: what's the rationale behind List elements being immutable, but allowing push/pop/shift/unshift/splice?

[17:57] <moritz> looks to me like those should go into Array

[17:59] <sorear> good * #perl6

[18:00] <moritz> \o sorear 

[18:02] <dalek> doc: 7578a27 | moritz++ | lib/List.pod:

[18:02] <dalek> doc: [List] pairs, splice

[18:02] <dalek> doc: review: https://github.com/perl6/doc/commit/7578a2708b

[18:03] *** preflex left
[18:05] *** sporous left
[18:05] *** preflex joined
[18:06] *** sporous joined
[18:08] *** spider-mario joined
[18:08] *** spider-mario left
[18:09] *** spider-mario joined
[18:13] <dalek> doc: 9770e19 | moritz++ | lib/List.pod:

[18:13] <dalek> doc: [List] pop, push, shift, unshift

[18:13] <dalek> doc: review: https://github.com/perl6/doc/commit/9770e19587

[18:16] *** adu joined
[18:17] <moritz> nr: say key 'a' => 1

[18:17] <p6eval> niecza v18-6-ge52d6c3: OUTPUT«===SORRY!===␤␤Undeclared routine:␤      'key' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1401 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 37) ␤  at /home/…

[18:17] <p6eval> ..rakudo 1b827c: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&key' called (line 1)␤»

[18:19] <adu> nr: say (a=>1).key

[18:19] <p6eval> rakudo 1b827c, niecza v18-6-ge52d6c3: OUTPUT«a␤»

[18:20] <adu> nr: say (a=>1).val

[18:20] <p6eval> rakudo 1b827c: OUTPUT«No such method 'val' for invocant of type 'Pair'␤  in block <anon> at /tmp/RjgU8zTeAE:1␤␤»

[18:20] <p6eval> ..niecza v18-6-ge52d6c3: OUTPUT«Unhandled exception: Unable to resolve method val in type Pair␤  at /tmp/_XXIZZF7fW line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3917 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3918 (module-CORE @ 562) ␤  at /home/p6…

[18:20] <dalek> doc: 14571d2 | moritz++ | lib/Pair.pod:

[18:20] <dalek> doc: [Pair] mostly stolen from u4x

[18:20] <dalek> doc: review: https://github.com/perl6/doc/commit/14571d21cb

[18:25] <adu> nr: say (a=>1).value

[18:25] <p6eval> rakudo 1b827c, niecza v18-6-ge52d6c3: OUTPUT«1␤»

[18:25] <adu> that's odd I was sure it was .val

[18:25] <Caldrin> r: 'a' !ne 'a'

[18:25] <p6eval> rakudo 1b827c:  ( no output )

[18:25] <Caldrin> :-)

[18:25] <Caldrin> r: print "yes" if 'a' !ne 'a'

[18:25] <p6eval> rakudo 1b827c: OUTPUT«yes»

[18:26] <tadzik> :)

[18:35] *** whiteknight joined
[18:35] *** whiteknight is now known as Guest30072

[18:54] *** adu left
[18:55] *** adu joined
[19:17] *** adu left
[19:18] <moritz> r: module A::B { }; say OUR::<A>.HOW.keys

[19:18] <p6eval> rakudo 1b827c: OUTPUT«No such method 'keys' for invocant of type 'Perl6::Metamodel::PackageHOW'␤  in block <anon> at /tmp/n7s3ZEBTBF:1␤␤»

[19:19] <moritz> r: module A { our module B { } }; say OUR::<A>.HOW.keys

[19:19] <p6eval> rakudo 1b827c: OUTPUT«No such method 'keys' for invocant of type 'Perl6::Metamodel::ModuleHOW'␤  in block <anon> at /tmp/UgL7ouYzk8:1␤␤»

[19:19] <moritz> r: module A { our module B { } }; say OUR::<A>

[19:19] <p6eval> rakudo 1b827c: OUTPUT«A()␤»

[19:19] <moritz> r: module A { our module B { } }; say OUR::<A>.HOW

[19:19] <p6eval> rakudo 1b827c: OUTPUT«No such method 'gist' for invocant of type 'Perl6::Metamodel::ModuleHOW'␤  in sub say at src/gen/CORE.setting:6972␤  in block <anon> at /tmp/1HfM8O1nDd:1␤␤»

[19:19] <moritz> r: module A { our module B { } }; say OUR::<A>.HOW.keys

[19:19] <p6eval> rakudo 1b827c: OUTPUT«No such method 'keys' for invocant of type 'Perl6::Metamodel::ModuleHOW'␤  in block <anon> at /tmp/Gq361u4kiu:1␤␤»

[19:19] <moritz> r: module A { our module B { } }; say OUR::<A>.WHO.keys

[19:19] <p6eval> rakudo 1b827c: OUTPUT«B␤»

[19:19] <moritz> r: module A::B { }; say OUR::<A>.WHO<B>

[19:19] <p6eval> rakudo 1b827c: OUTPUT«A::B()␤»

[19:22] *** PacoAir left
[19:23] *** PacoAir joined
[19:23] *** PacoAir left
[19:24] <jnthn> HOW...WHO... :)

[19:25] <geekosaur> obviously we need some kind of convenience method .wat :}

[19:27] *** birdwindupbird joined
[19:30] <moritz> we could use a convenience method for lookup up nested method names in packages

[19:30] <moritz> r: module A::B { }; say OUR::<A::B>

[19:30] <p6eval> rakudo 1b827c: OUTPUT«Any()␤»

[19:32] <jnthn> r: module A::B { }; say OUR::('A::B')

[19:32] <p6eval> rakudo 1b827c: OUTPUT«A::B()␤»

[19:35] <moritz> oh

[19:35] <moritz> that makes my code easier

[19:36] <jnthn> You implemented that feature too! :P

[19:37] <moritz> oh right :-)

[19:38] <moritz> there's something fishy with exporting :/

[19:39] <moritz> r: module A::B { sub f is export(:bla) }; say OUR::('A::B::EXPORT::ALL').WHO.keys

[19:39] <p6eval> rakudo 1b827c: OUTPUT«===SORRY!===␤Missing block␤at /tmp/J6vGyUdT8C:1␤»

[19:39] <moritz> r: module A::B { sub f is export(:bla) } }; say OUR::('A::B::EXPORT::ALL').WHO.keys

[19:39] <p6eval> rakudo 1b827c: OUTPUT«===SORRY!===␤Missing block␤at /tmp/17vA1cQcqT:1␤»

[19:39] <moritz> r: module A::B { sub f is export(:bla) {} }; say OUR::('A::B::EXPORT::ALL').WHO.keys

[19:39] <p6eval> rakudo 1b827c: OUTPUT«&f␤»

[19:41] <dalek> roast: 89bcf0b | moritz++ | packages/Fancy/Utilities.pm:

[19:41] <dalek> roast: add another exported sub to a test module

[19:41] <dalek> roast: review: https://github.com/perl6/roast/commit/89bcf0b7b2

[19:47] <moritz> $ ./perl6 -I t/spec/packages -e 'require Fancy::Utilities; say OUR::("Fancy::Utilities::EXPORT::ALL").WHO.keys'

[19:47] <moritz> &lolgreet

[19:48] <moritz> shouldn't ALL the exports be in ALL?

[19:48] <moritz> I guess i wrote that code :/

[19:50] *** Guest30072 left
[19:52] <jnthn> ALL should get all the exports, yes

[19:52] <jnthn> I thought that bit worked already.

[19:53] <moritz> I thought so too.

[19:54] <dalek> rakudo/nom: 3855ccb | moritz++ | src/core/ (2 files):

[19:54] <dalek> rakudo/nom: move Associative role from Pair to Enum

[19:54] <dalek> rakudo/nom: 

[19:54] <dalek> rakudo/nom: also add :D type qualifiers to the infix:<cmp>(Pair, Pair) multi

[19:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3855ccb357

[19:54] <dalek> rakudo/nom: fb7d00a | moritz++ | src/core/operators.pm:

[19:54] <dalek> rakudo/nom: [require] improve support for multi-joined namespaces

[19:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fb7d00a2f8

[19:55] <moritz> I think I found the problem

[19:57] <moritz> but it shows that nobody (yet) knows this stuff, and that it's severly undertested

[19:58] *** GlitchMr left
[20:05] <moritz> spectesting a fix now

[20:12] <dalek> rakudo/nom: eef772d | moritz++ | src/core/traits.pm:

[20:12] <dalek> rakudo/nom: fix think in exporter

[20:12] <dalek> rakudo/nom: 

[20:12] <dalek> rakudo/nom: previously some exports would go into the wrong tag

[20:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/eef772d79f

[20:13] <dalek> roast: 5ba71ba | moritz++ | S11-modules/require.t:

[20:13] <dalek> roast: test require and import lists

[20:13] <dalek> roast: review: https://github.com/perl6/roast/commit/5ba71ba040

[20:13] <moritz> s/think/thinko/

[20:13] <moritz> :/

[20:13] *** rsimoes left
[20:13] <moritz> anyway, that test now passes.

[20:14] *** rsimoes joined
[20:18] <dalek> doc: 6e05ed4 | moritz++ | lib/Pair.pod:

[20:18] <dalek> doc: [Pair] small updates; mention Enum

[20:18] <dalek> doc: review: https://github.com/perl6/doc/commit/6e05ed445b

[20:32] *** cognominal joined
[20:34] *** fridim_ left
[20:35] *** cognominal_ left
[20:41] *** cognominal left
[20:42] *** cognominal joined
[20:44] *** kaare_ left
[20:49] *** japhb joined
[20:49] *** libertyprime left
[20:50] *** sergot joined
[20:50] *** libertyprime joined
[20:51] <dalek> perl6-bench: 0f6bc6f | (Geoffrey Broadwell)++ | TODO:

[20:51] <dalek> perl6-bench: Add a few more TODO items

[20:51] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/0f6bc6fbe2

[20:51] <dalek> perl6-bench: f3a1716 | (Geoffrey Broadwell)++ | bench:

[20:51] <dalek> perl6-bench: Add just enough option handling and documentation to handle --help|-h|-? and --man

[20:51] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/f3a17160d0

[20:51] *** sudokode left
[20:56] *** sudokode joined
[20:58] *** libertyprime left
[20:59] *** libertyprime joined
[21:02] *** birdwindupbird left
[21:03] *** sudokode left
[21:04] *** sudokode joined
[21:10] *** libertyprime left
[21:11] *** libertyprime joined
[21:19] *** colomon left
[21:23] *** kurahaupo joined
[21:26] *** libertyprime left
[21:26] *** libertyprime joined
[21:28] *** bruges joined
[21:30] *** bruges_ left
[21:35] *** spaceships joined
[21:41] *** libertyprime left
[21:47] *** libertyprime joined
[21:55] *** cognominal_ joined
[21:58] *** cognominal left
[22:06] <dalek> perl6-bench: d9b2efb | (Geoffrey Broadwell)++ | / (3 files):

[22:06] <dalek> perl6-bench: Get all three rc-forest-fire variants showing the same thing

[22:06] <dalek> perl6-bench: 

[22:06] <dalek> perl6-bench: * Remove yellow "ashes" phase in Perl 5 variant

[22:06] <dalek> perl6-bench: * Switch to bright red fire in Perl 5 variant

[22:06] <dalek> perl6-bench: * Switch to tree ideograms in Perl 5 to match NQP and Perl 6

[22:06] <dalek> perl6-bench: * Switch to fire ideogram (instead of just red tree) in all variants

[22:06] <dalek> perl6-bench: * Reset color after printing every non-empty cell in Perl 5, like NQP/Perl 6

[22:06] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/d9b2efb5ac

[22:10] *** whiteknight joined
[22:10] *** whiteknight is now known as Guest25536

[22:19] <dalek> perl6-bench: b43b2f7 | (Geoffrey Broadwell)++ | TODO:

[22:19] <dalek> perl6-bench: Remove TODONE

[22:19] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/b43b2f777a

[22:22] *** colourspace joined
[22:29] *** colourspace left
[22:36] *** hedgeward left
[22:44] *** thelazydeveloper left
[22:47] *** spider-mario left
[22:56] *** spaceships left
[23:21] *** sergot left
[23:37] <dalek> perl6-bench: e910fea | (Geoffrey Broadwell)++ | TODO:

[23:37] <dalek> perl6-bench: Add lots of possible test ideas to TODO, especially regarding basic algorithms and data structures

[23:37] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/e910fea0d6

[23:53] *** libertyprime left
[23:58] *** Chillance left
[23:59] *** colomon joined
[23:59] <colomon> moritz, jnthn: change in the Rakudo error on ABC: it now says

[23:59] <colomon> ===SORRY!===

[23:59] <colomon> No STable at index 8

