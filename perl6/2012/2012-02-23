[00:00] *** lestrrat joined
[00:08] *** fridim_ left
[00:22] *** jferrero left
[00:22] *** slavik1 left
[00:22] *** djanatyn left
[00:22] *** jfried left
[00:22] *** tokuhirom3 left
[00:22] *** tokuhirom left
[00:22] *** orafu left
[00:22] *** Vlavv` left
[00:22] *** pjcj_ left
[00:22] *** BooK__ left
[00:22] *** simcop2387 left
[00:22] *** Jerkwad left
[00:22] *** Patterner left
[00:22] *** Tedd1 left
[00:22] *** p6eval left
[00:22] *** dju left
[00:22] *** mikemol left
[00:22] *** Maddingue left
[00:22] *** cotto left
[00:22] *** jasonmay left
[00:22] *** doy_ left
[00:22] *** zby_home_ left
[00:22] *** localhost left
[00:22] *** jerome_ left
[00:22] *** shachaf left
[00:22] *** bacek_at_work left
[00:22] *** itz_ left
[00:22] *** cognominal left
[00:22] *** ruoso left
[00:22] *** mathw left
[00:22] *** silug_ left
[00:22] *** jevin left
[00:22] *** pmichaud left
[00:22] *** alvis left
[00:22] *** jnthn left
[00:22] *** ribayr left
[00:22] *** bacek left
[00:22] *** Bucciarati left
[00:22] *** conntrack left
[00:22] *** ocharles left
[00:22] *** __sri left
[00:22] *** `patch` left
[00:22] *** alim left
[00:22] *** kthakore_ left
[00:22] *** ascent__ left
[00:22] *** Trashlord left
[00:22] *** sftp left
[00:22] *** awwaiid left
[00:22] *** [Coke] left
[00:22] *** sahadev left
[00:22] *** unobe left
[00:22] *** peterete1 left
[00:22] *** overrosy left
[00:22] *** pernatiy left
[00:22] *** pochi left
[00:22] *** rsimoes left
[00:22] *** domidumont left
[00:22] *** kst left
[00:22] *** betterworld left
[00:22] *** karamorf left
[00:22] *** szabgab left
[00:22] *** noam left
[00:22] *** masak left
[00:22] *** stepnem left
[00:22] *** sudokode left
[00:22] *** prammer left
[00:22] *** bbkr left
[00:22] *** Juerd left
[00:22] *** tadzik left
[00:22] *** PerlJam left
[00:22] *** lue left
[00:22] *** Yappoko____ left
[00:22] *** literal_ left
[00:22] *** [particle] left
[00:22] *** fsergot left
[00:22] *** jlaire left
[00:22] *** pomysl left
[00:22] *** yves left
[00:22] *** szbalint_ left
[00:22] *** pothos left
[00:22] *** BooK_ left
[00:22] *** lestrrat left
[00:22] *** skids left
[00:22] *** glass left
[00:22] *** leprevost left
[00:22] *** takesako left
[00:22] *** preflex left
[00:22] *** plobsing left
[00:22] *** rsimoes1 left
[00:22] *** colomon left
[00:22] *** aloha left
[00:22] *** mattp_ left
[00:22] *** moritz left
[00:22] *** tty234 left
[00:22] *** dalek left
[00:22] *** Util left
[00:22] *** PZt left
[00:22] *** yeltzooo left
[00:22] *** robinsmidsrod left
[00:22] *** cxreg left
[00:22] *** kcwu left
[00:23] *** HarryS joined
[00:28] *** lestrrat joined
[00:28] *** tokuhirom joined
[00:28] *** alim joined
[00:28] *** kthakore_ joined
[00:28] *** pjcj_ joined
[00:28] *** itz_ joined
[00:28] *** doy_ joined
[00:28] *** jevin joined
[00:28] *** BooK__ joined
[00:28] *** ascent__ joined
[00:28] *** literal_ joined
[00:28] *** skids joined
[00:28] *** pernatiy joined
[00:28] *** zby_home_ joined
[00:28] *** pochi joined
[00:28] *** localhost joined
[00:28] *** pothos joined
[00:28] *** noam joined
[00:28] *** glass joined
[00:28] *** simcop2387 joined
[00:28] *** Jerkwad joined
[00:28] *** leprevost joined
[00:28] *** Patterner joined
[00:28] *** Trashlord joined
[00:28] *** Tedd1 joined
[00:28] *** sftp joined
[00:28] *** Juerd joined
[00:28] *** p6eval joined
[00:28] *** awwaiid joined
[00:28] *** tadzik joined
[00:28] *** PerlJam joined
[00:28] *** pmichaud joined
[00:28] *** masak joined
[00:28] *** Util joined
[00:28] *** [Coke] joined
[00:28] *** [particle] joined
[00:28] *** fsergot joined
[00:28] *** stepnem joined
[00:28] *** takesako joined
[00:28] *** alvis joined
[00:28] *** orafu joined
[00:28] *** jlaire joined
[00:28] *** jferrero joined
[00:28] *** sudokode joined
[00:28] *** sahadev joined
[00:28] *** prammer joined
[00:28] *** pomysl joined
[00:28] *** calvino.freenode.net sets mode: +v p6eval

[00:28] *** slavik1 joined
[00:28] *** PZt joined
[00:28] *** rsimoes joined
[00:28] *** unobe joined
[00:28] *** djanatyn joined
[00:28] *** dju joined
[00:28] *** preflex joined
[00:28] *** cognominal joined
[00:28] *** BooK_ joined
[00:28] *** jnthn joined
[00:28] *** bbkr joined
[00:28] *** tty234 joined
[00:28] *** plobsing joined
[00:28] *** betterworld joined
[00:28] *** rsimoes1 joined
[00:28] *** colomon joined
[00:28] *** lue joined
[00:28] *** ribayr joined
[00:28] *** Vlavv` joined
[00:28] *** domidumont joined
[00:28] *** jfried joined
[00:28] *** yves joined
[00:28] *** jerome_ joined
[00:28] *** bacek joined
[00:28] *** Bucciarati joined
[00:28] *** tokuhirom3 joined
[00:28] *** conntrack joined
[00:28] *** mikemol joined
[00:28] *** yeltzooo joined
[00:28] *** ruoso joined
[00:28] *** Maddingue joined
[00:28] *** shachaf joined
[00:28] *** robinsmidsrod joined
[00:28] *** Yappoko____ joined
[00:28] *** ocharles joined
[00:28] *** peterete1 joined
[00:28] *** karamorf joined
[00:28] *** cotto joined
[00:28] *** mathw joined
[00:28] *** overrosy joined
[00:28] *** mattp_ joined
[00:28] *** __sri joined
[00:28] *** szbalint_ joined
[00:28] *** szabgab joined
[00:28] *** aloha joined
[00:28] *** moritz joined
[00:28] *** dalek joined
[00:28] *** calvino.freenode.net sets mode: +v dalek

[00:28] *** `patch` joined
[00:28] *** kst joined
[00:28] *** jasonmay joined
[00:28] *** bacek_at_work joined
[00:28] *** silug_ joined
[00:28] *** ranguard_ joined
[00:28] *** LoRe joined
[00:28] *** buubot_backup joined
[00:28] *** revdiablo joined
[00:28] *** Woodi joined
[00:28] *** jtpalmer joined
[00:28] *** REPLeffect joined
[00:28] *** SHODAN joined
[00:28] *** sorear joined
[00:28] *** diakopter joined
[00:28] *** daemon joined
[00:28] *** odoacre joined
[00:28] *** drbean joined
[00:28] *** wolverian joined
[00:28] *** geekosaur joined
[00:28] *** krunen joined
[00:28] *** sirhc joined
[00:28] *** frettled joined
[00:28] *** gfldex joined
[00:28] *** felher joined
[00:28] *** charsbar___ joined
[00:28] *** japhb joined
[00:28] *** _ilbot joined
[00:28] *** nsh joined
[00:28] *** snarkyboojum joined
[00:28] *** Tene joined
[00:28] *** krakan joined
[00:28] *** risou joined
[00:28] *** athomason joined
[00:28] *** lumi___ joined
[00:28] *** pnu joined
[00:28] *** scottp joined
[00:28] *** fhelmberger joined
[00:28] *** ashleydev joined
[00:28] *** phenny joined
[00:28] *** DarthGandalf joined
[00:28] *** clkao joined
[00:28] *** hillu joined
[00:28] *** broquaint joined
[00:28] *** avar joined
[00:28] *** bonsaikitten joined
[00:28] *** timotimo joined
[00:28] *** TimToady joined
[00:28] *** apejens joined
[00:28] *** felipe joined
[00:28] *** sjn joined
[00:28] *** `10 joined
[00:28] *** flussence joined
[00:28] *** imarcusthis joined
[00:28] *** arnsholt joined
[00:28] *** Grrrr joined
[00:28] *** ingy joined
[00:28] *** jrockway joined
[00:28] *** rhr joined
[00:28] *** wooden joined
[00:28] *** zostay joined
[00:28] *** renormalist joined
[00:28] *** zamolxes joined
[00:28] *** sunnavy joined
[00:28] *** cj joined
[00:28] *** chra joined
[00:28] *** Timbus joined
[00:28] *** cxreg joined
[00:28] *** kcwu joined
[00:28] *** HarryS left
[00:29] *** y3llow left
[00:30] *** y3llow joined
[00:42] *** replore_ joined
[00:44] *** am0c joined
[01:06] *** whiteknight joined
[01:08] *** scott___ joined
[01:14] *** noam left
[01:15] *** noam joined
[01:23] *** HarryS joined
[01:41] *** Trashlord left
[01:43] *** Trashlord joined
[01:51] *** leprevost left
[02:05] *** tokuhirom left
[02:10] *** alim left
[02:23] *** replore_ left
[02:27] *** wolfman2000 joined
[02:32] *** benabik joined
[02:47] *** alc joined
[02:47] *** jaldhar joined
[02:51] <sorear> adding IO::Socket::INET could be a nice medium-size niecza task

[03:05] *** whiteknight left
[03:18] *** Trashlord left
[03:19] *** fsergot left
[03:19] *** fsergot joined
[03:25] *** orafu left
[03:26] *** orafu joined
[03:32] *** Jerkwad left
[03:32] <colomon> \o

[03:43] *** alc left
[04:15] *** am0c left
[04:22] <sorear> o/ colomon

[04:34] *** alc joined
[04:55] *** alc left
[05:05] <dalek> niecza: a8cbc27 | sorear++ | lib/Cursor.cs:

[05:05] <dalek> niecza: Encapsulate access to NFA nodes array

[05:05] <dalek> niecza: review: https://github.com/sorear/niecza/commit/a8cbc27269

[05:22] *** NamelessTee joined
[05:22] *** lestrrat left
[05:23] *** lestrrat joined
[06:03] *** kaleem joined
[06:33] *** benabik_ joined
[06:35] *** benabik left
[06:35] *** benabik_ is now known as benabik

[06:36] *** wooden left
[06:47] *** localhost left
[06:50] *** zby_home_ left
[06:55] *** wtw joined
[07:02] *** tarch joined
[07:13] *** wooden joined
[07:13] *** wooden left
[07:13] *** wooden joined
[07:14] <masak> morning, #perl6

[07:15] <moritz> \o masak 

[07:17] <masak> http://groups.google.com/group/comp.sources.d/browse_thread/thread/40fb76f3cc9ad102/e605e989bcb15f22?pli=1 is wonderful reading.

[07:17] *** proller joined
[07:18] <masak> somehow it gives the Perl 5 lineage a much more early-adopter, experimental feel.

[07:18] * masak considers whether to start using "Pumpkin Perl" to refer to the Perl 5 lineage

[07:21] <masak> there's not a trace of backwards-compat think at this stage.

[07:22] <masak> TimToady is all like "oh, and I completely replaced the regex functionality with something else" (not a direct quote)

[07:25] *** alim joined
[07:30] *** pmurias joined
[07:30] <pmurias> sorear: hi

[07:30] <phenny> pmurias: 22 Feb 23:17Z <colomon> tell pmurias "Can't locate Package/Stash.pm"

[07:30] <phenny> pmurias: 22 Feb 23:24Z <colomon> tell pmurias Oh, just had to install Package::Stash for my new perlbrew p5.

[07:30] <colomon> \o

[07:30] <pmurias> colomon: hi

[07:31] <pmurias> colomon: so the interop works now?

[07:31] <colomon> the ansi-color test works fine, anyway

[07:32] <colomon> I haven't found any of the S01 tests that work yet...

[07:32] *** woosley joined
[07:32] <pmurias> the ones in t/spectest_p5.data work

[07:32] <pmurias> there aren't many but i hope to change that soon ;)

[07:33] <colomon> I'm trying a normal spectest run atm, will take a look at those as soon as it is done

[07:33] <pmurias> ok

[07:34] <pmurias> colomon: it would be great if you could describe what it takes to get the interop working on mac in the README

[07:38] <colomon> and the t/spectest_p5.data tests do indeed work!

[07:40] <colomon> pmurias: general README, or is there a p5 interop specific readme?

[07:43] <dalek> roast: 8988efd | (Paweł Murias)++ | S01-perl-5-integration/import.t:

[07:43] <dalek> roast: Change eval(...) or die into eval_lives_ok.

[07:43] <dalek> roast: review: https://github.com/perl6/roast/commit/8988efdefc

[07:44] <pmurias> colomon: there isn't one yet

[07:44] *** birdwindupbird joined
[07:45] <pmurias> colomon: not sure if we should have one

[07:49] <pmurias> colomon: general README seems best

[07:57] *** au__ is now known as au

[08:01] *** birdwindupbird left
[08:01] <sorear> pmurias: hi

[08:01] <sorear> pmurias: release monday - a blurb on your p5 improvements would be nice.

[08:02] *** Trashlord joined
[08:04] *** am0c joined
[08:15] *** mj41 joined
[08:21] *** NamelessTee left
[08:32] *** dbr joined
[08:32] *** birdwindupbird joined
[08:33] <masak> so... Niecza v15 coming up. niiiiice.

[08:33] *** am0c left
[08:33] *** jferrero left
[08:38] *** katernya joined
[08:41] *** felher left
[08:43] *** birdwind1pbird joined
[08:44] *** felher joined
[08:46] <dalek> rakudo/nom: fab6a01 | moritz++ | tools/build/NQP_REVISION:

[08:46] <dalek> rakudo/nom: bump NQP revision

[08:46] <dalek> rakudo/nom: 

[08:46] <dalek> rakudo/nom: This gives us the released parrot, and the :$var colonpair syntax

[08:46] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fab6a017db

[08:49] <masak> we still don't have a release manager for today?

[08:49] <moritz> nope

[08:49] <masak> I thought about volunteering.

[08:49] <moritz> \o/

[08:49] * masak does so

[08:49] <masak> I'll probably cut the release tonight, at UTC 20:00

[08:51] <dalek> rakudo/nom: cc6590a | masak++ | docs/release_guide.pod:

[08:51] <dalek> rakudo/nom: [docs/release_guide.pod] volunteered for today's release

[08:51] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cc6590a912

[08:51] *** birdwindupbird left
[08:51] <moritz> ++masak

[08:52] <felher> yeah, masak++

[08:52] <masak> we've had a nice distribution of release managers in the past year or so.

[08:53] <masak> moritz did the last two releases, though. and we don't have *any* names signed up for subsequent releases.

[08:53] *** birdwindupbird joined
[08:53] <masak> sign up for March and April and May, peeps.

[08:53] <masak> it's an easy way to take some load of people like moritz++ who already have lots of admin stuff to do.

[08:54] <masak> plus, it's a great honour to get to cut a Rakudo compiler release.

[08:57] <moritz> ... and it's not complicated :-)

[08:59] *** woosley left
[09:01] <sorear> masak: unless something truly catestrophic happens or I quit the post entirely, I intend to make a release EVERY month.

[09:01] <masak> sorear: yes. still nice each time it happens.

[09:03] *** BooK__ is now known as BooK

[09:11] <masak> phenny: eo en "Google Translate nun tradukas de Esperanto. Ĉu tio ĉi funkcias?"?

[09:11] <phenny> masak: "Google Translate now translates from Esperanto. Does this work?" (eo to en, translate.google.com)

[09:11] <masak> 'o-

[09:11] <masak> \o/

[09:13] <katernya> how long has perl6 been in development

[09:14] <katernya> 10ish years i guess?

[09:14] *** bkolera joined
[09:15] <moritz> yes, about 11 to 12

[09:16] <katernya> cool

[09:17] <masak> it's shaping up real well, I'd say.

[09:17] <masak> perl6: say "hi keternya!"

[09:17] <p6eval> pugs b927740, rakudo cc6590, niecza v14-63-ga8cbc27: OUTPUT«hi keternya!␤»

[09:18] <masak> perl6: say "Perl 6 has been in development for over 11 years. That is ", <cool awesome interesting>.pick

[09:19] <p6eval> pugs b927740, rakudo cc6590, niecza v14-63-ga8cbc27: OUTPUT«Perl 6 has been in development for over 11 years. That is cool␤»

[09:19] <masak> \o/

[09:19] <moritz> wow, they all agree :-)

[09:19] <masak> all three major implementations think it's cool.

[09:19] <katernya> hehe

[09:20] <masak> then it must be cool.

[09:20] <moritz> though all of them are youger than 11 years :-)

[09:20] <moritz> rakudo's git history goes back to 2006

[09:20] <au> it's been in research for over 11 years, but in development for a bit less :)

[09:21] <moritz> niezca's first commit was June 2010

[09:21] <moritz> pugs started pretty much exactly 7 years ago

[09:21] <moritz> (2005-02-06(

[09:22] <masak> the first "Perl 6" commits were probably done not too long after the announcement. but it's questionable whether any of that code survives to this day.

[09:22] <moritz> s:2nd/\(/)/

[09:22] <masak> moritz: huh! I always thought Pugs started on Feb 1.

[09:22] <moritz> masak: well, I just took the date of the first commit

[09:22] <au> it's Feb 1. http://use.perl.org/~autrijus/journal/22965

[09:23] <masak> right.

[09:23] <moritz> as reported from the perl6/mu repo, which was an import fro pugs svn

[09:23] *** benabik left
[09:23] <au> (moritz was also correct in that a svn repo wasn't set up until day 6)

[09:25] * moritz remembers the bad old times when setting up a repo was much more work than writing 'git init'

[09:25] <au> o/~ those were the days of dev's lives / easy things in life were so few o/~ ;)

[09:25] <frettled> You mean like this?  cvs -d dirname init

[09:26] <moritz> did cvs work without a server?

[09:26] <frettled> yes

[09:26] <frettled> (still does :))

[09:27] <moritz> wow, I never knew

[09:27] <katernya> insert joke about cvs ever working here

[09:27] <masak> you people laugh -- some of us still have to use CVS daily :/

[09:28] <moritz> but git-cvs does exist, no?

[09:28] <katernya> hehe

[09:28] <masak> yes.

[09:28] <masak> that's my one ray of sanity.

[09:28] <frettled> RCS was even simpler.

[09:28] <frettled> 1) mkdir RCS

[09:28] <frettled> Oh, already done.

[09:28] <masak> :)

[09:29] <frettled> RCS is probably still okay for single-developer usage, as long as you avoid binaries.  I don't know whether it handles UTF-8 etc, though.

[09:29] <moritz> does it do branches and merges sanely?

[09:30] <frettled> Sanely?  I'm not sure about that.  But it does do them.

[09:31] <frettled> When the system is called "Revision Control System", it may be a bit primitive.

[09:31] <frettled> Wow, it's turning 30 this year!  (http://en.wikipedia.org/wiki/Revision_Control_System)

[09:32] <frettled> …only ten years younger than SCCS!

[09:33] <katernya> i think i just build perl6

[09:33] <katernya> i'm afraid

[09:33] <moritz> don't be nervous, don't be flustered, don't be scared, be prepared!

[09:34] <masak> ...for crappy performance and frequent bugs... :)

[09:35] <moritz> though both rakudo and niecza are much more usable than in The Early Days

[09:35] <pmurias> sorear: have you found out how to speed up niecza?

[09:36] <masak> oh, granted. we're getting better bit by bit.

[09:36] * moritz should really blog about exceptions and backtraces

[09:37] <masak> though there have been some lexical bugs lately of a kind that I thought we simply didn't get anymore.

[09:37] *** birdwindupbird left
[09:37] <moritz> yes, there seems to be something not quite right yet with lexicals

[09:49] *** dakkar joined
[09:57] *** daxim joined
[09:58] *** pmurias left
[10:00] *** alim left
[10:13] *** glass left
[10:24] *** lestrrat left
[10:25] *** lestrrat joined
[10:27] *** timotimo left
[10:29] *** timotimo joined
[10:29] *** jferrero joined
[10:42] <dalek> rakudo/nom: 5d9f349 | moritz++ | src/ (2 files):

[10:42] <dalek> rakudo/nom: typed exceptions for attributes outside of packages, and for attributes inside package types that cannot handle them

[10:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5d9f349d0c

[10:43] <dalek> roast: 6467df2 | moritz++ | S32-exceptions/misc.t:

[10:43] <dalek> roast: test X::Attribute::Package and X::Attribute::NoPackage

[10:43] <dalek> roast: review: https://github.com/perl6/roast/commit/6467df25fa

[10:44] * moritz hopes masak++ doesn't mind some harmless exception hacking prior to the release

[10:44] <masak> 'course not.

[10:44] <masak> I'll start relenging tonight.

[10:44] <masak> and I'll be very clear about when I don't want more commits.

[10:45] <moritz> if I happen to break anything before then, we can still move the commits to a branch and revert them in nom

[10:45] <masak> aye.

[10:45] * araujo wonders when that release is going to be released

[10:46] <moritz> araujo: certainly not before it's done :-)

[10:46] <fsergot> hi o/ :)

[10:46] <araujo> moritz, sure thing

[10:46] <moritz> araujo: masak targets 8 pm UTC

[10:46] <araujo> good :)

[10:47] <fsergot> What should I do, if my 'rmdir' needs an external module?

[10:47] <moritz> what module does it need?

[10:48] <fsergot> Oh... It doesn't need any module! I have an idea. :D

[10:49] <fsergot> moritz: it needed. a File::Find module.

[10:49] <fsergot> but, it can use 'dir' instead of find. :)

[10:49] * moritz is glad to detect the past tense

[10:50] <moritz> std: has sub a() { }

[10:50] <p6eval> std 52f3895: OUTPUT«Potential difficulties:␤  'has' declaration outside of class at /tmp/vdMa4sQ6NH line 1:␤------> [32mhas[33m⏏[31m sub a() { }[0m␤ok 00:01 109m␤»

[10:50] <moritz> nom: has sub a() { }

[10:50] <p6eval> nom cc6590: OUTPUT«===SORRY!===␤Cannot use 'has' scope with a sub at line 1, near ""␤»

[10:50] <moritz> which error is more awesome?

[10:50] <moritz> does 'has sub' ever makes sense?

[10:51] <fsergot> The second one imo. :)

[10:51] <masak> no, 'has sub' never makes any sense.

[10:52] <moritz> std: class A { has method a() { }}

[10:52] <p6eval> std 52f3895: OUTPUT«ok 00:01 109m␤»

[10:52] <moritz> nom: class A { has method a() { }}

[10:52] <p6eval> nom cc6590:  ( no output )

[10:52] <moritz> nom: class A { has method a() { say 'I CAN HAZ'}}; A.a

[10:52] <p6eval> nom cc6590: OUTPUT«I CAN HAZ␤»

[10:54] <moritz> nom: proto sub () { }

[10:54] <p6eval> nom cc6590: OUTPUT«===SORRY!===␤Cannot put proto on anonymous routine at line 1, near ""␤»

[10:54] <moritz> std: proto sub () { }

[10:54] <p6eval> std 52f3895: OUTPUT«ok 00:01 109m␤»

[10:55] <moritz> nom: my method x() { }

[10:55] <p6eval> nom cc6590:  ( no output )

[10:55] <moritz> nom: my method x() { }; class A { }; A.^add_method('x', &x); A.^compose; A.x

[10:55] <p6eval> nom cc6590:  ( no output )

[10:56] <moritz> that's... slightly scary.

[10:56] <masak> nom: my method x() { say "OH HAI" }; class A { }; A.^add_method('x', &x); A.^compose; A.x

[10:56] <p6eval> nom cc6590: OUTPUT«OH HAI␤»

[10:57] <fsergot> Could somebody take a look?

[10:57] <fsergot> https://gist.github.com/1892277

[10:57] <fsergot> to this :)

[10:58] * masak looks

[10:58] <masak> nice.

[10:59] <masak> "Something is wrong" is not a very exact error message. :)

[10:59] <moritz> fsergot: I have several smallish objections

[10:59] <masak> maybe "Could not rmdir $path" would be better.

[10:59] <fsergot> masak: Right, thanks. :)

[10:59] <moritz> fsergot: first, checking for a condition before trying an IO operation is almost always wrong, because it's prone to race conditions

[10:59] <fsergot> moritz: great, it'll help. :)

[11:00] <moritz> fsergot: so it's better to simply try, and then inspect or propagate the error

[11:00] <masak> ah, indeed.

[11:00] <moritz> fsergot: second, I can imagine that the current factoring that &unlink removes directories is quite surprising

[11:01] <moritz> fsergot: so I'd rather have unlink only unlik files, and rmdir only delete directories

[11:01] <masak> I'd insert a check $path.IO ~~ :d

[11:01] <masak> so that you can't rmdir a file.

[11:01] <moritz> and then you have race conditions again :/

[11:03] <fsergot> So, I should use try { } ? Or just check conditions after "unlinking"?

[11:03] <masak> moritz: sure, but only if someone substitutes a directory for a file...

[11:04] <moritz> fsergot: you should examine the return value from &unlink

[11:04] <moritz> fsergot: and if that's not easy, then maybe &unlink needs to be factored differently

[11:05] <fsergot> moritz++

[11:05] <fsergot> masak++

[11:05] <moritz> fsergot: though I wouldn't object to including a simple version of rmdir first

[11:05] <fsergot> thanks.

[11:05] <moritz> I don't want to force you to refactor all our IO build-ins just to add one :-)

[11:06] <masak> fsergot++ # adding builtins

[11:08] <fsergot> moritz: if it is needed, I'll do this. :)

[11:09] <fsergot> moritz: I want to be more involved, so I must learn a lot. :)

[11:09] <moritz> fsergot: that's a great attitude

[11:10] <moritz> fsergot: and I'll do my best to support it, and I'm sure others will do the same

[11:10] <fsergot> Great. :)

[11:10] <fsergot> #perl6++

[11:10] <fsergot> :)

[11:11] *** JimmyZ joined
[11:15] <masak> yes, three cheers for fsergot.

[11:15] <masak> looking forward to meeting up in Oslo.

[11:16] <fsergot> Today I received a message, that my flight is booked. \o/

[11:16] <moritz> \o/

[11:19] <arnsholt> Oooh, Oslo?

[11:19] *** kaleem left
[11:20] *** pernatiy left
[11:21] <moritz> arnsholt: sjn++ is organizing a Perl 6 in Oslo, April 20-22

[11:21] <moritz> *a Perl 6 event

[11:23] <masak> arnsholt: do come!

[11:24] <dalek> rakudo/nom: 4c440e8 | moritz++ | src/ (3 files):

[11:24] <dalek> rakudo/nom: more typed exceptions: X::Sub::Scope and X::Anon::Multi

[11:24] <dalek> rakudo/nom: 

[11:24] <dalek> rakudo/nom: also enables a nicer way to write the type name of exceptions in Actions.pm

[11:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4c440e8d6b

[11:24] <dalek> roast: a2b6fc2 | moritz++ | S32-exceptions/misc.t:

[11:24] <dalek> roast: more typed exceptions

[11:24] <dalek> roast: review: https://github.com/perl6/roast/commit/a2b6fc205c

[11:24] <arnsholt> masak: I'll definitely try to make it!

[11:24] *** kaleem joined
[11:24] <arnsholt> May have plans that week-end, but hopefully not

[11:26] <masak> reschedule! :)

[11:27] <arnsholt> Indeed ^_^

[11:28] <moritz> I don't have an overview of who is going to come, but it's going to be an awesome mixture

[11:29] *** fhelmberger left
[11:30] <moritz> std: sub ($x:) { }

[11:30] <p6eval> std 52f3895: OUTPUT«Potential difficulties:␤  $x is declared but not used at /tmp/1Am_rp1SES line 1:␤------> [32msub ([33m⏏[31m$x:) { }[0m␤ok 00:01 110m␤»

[11:30] <moritz> std: sub ($x, $y:) { }

[11:30] <p6eval> std 52f3895: OUTPUT«Potential difficulties:␤  $x is declared but not used at /tmp/wtBvi98hV4 line 1:␤------> [32msub ([33m⏏[31m$x, $y:) { }[0m␤  $y is declared but not used at /tmp/wtBvi98hV4 line 1:␤------> [32msub ($x, [33m⏏[31m$y:) { }[0m␤ok 00:01 110m␤»

[11:31] *** jferrero left
[11:31] *** fhelmberger joined
[11:31] <masak> yes, it will be quite the event.

[11:41] *** tokuhirom joined
[11:43] *** scott___ left
[11:44] *** NamelessTee joined
[11:44] *** birdwindupbird joined
[11:51] *** sisar joined
[12:01] *** noam left
[12:01] *** noam joined
[12:06] <sisar> what is the difference between pick and roll ?

[12:07] <colomon> roll uses the entire source range every time

[12:08] <colomon> pick logically removes items which have been rolled so they cannot be rolled again in the same call

[12:08] <colomon> nom: say (1..10).pick(5)

[12:08] <felher> sisar: what colomon++ said. For more information: http://perlcabal.org/syn/S32/Containers.html

[12:08] <p6eval> nom 4c440e: OUTPUT«1 8 3 9 5␤»

[12:09] <colomon> nom: say (1..10).pick(9)

[12:09] <p6eval> nom 4c440e: OUTPUT«2 1 3 8 10 5 4 6 9␤»

[12:09] <colomon> nom: say (1..10).roll(9)

[12:09] <sisar> colomon: ah. makes sense. pick and roll have been nicely chosen. perl6++

[12:09] <p6eval> nom 4c440e: OUTPUT«8 8 6 5 7 6 1 6 2␤»

[12:10] <colomon> sisar: note that it doesn't change the original object at all, so $a.pick(1) and $a.roll(1) have identical behavior

[12:16] *** birdwindupbird left
[12:16] *** benabik joined
[12:18] *** kaleem left
[12:18] *** bkolera left
[12:19] <sisar> colomon: sorry, how does one imply the other?

[12:19] <sisar> note.. , so..  

[12:19] <colomon> sisar: each one chooses one element at random

[12:19] <colomon> hmmm... let me see if I can come up with a working example:

[12:20] <masak> sisar: .roll works like rolling an N-sided die. .pick works like successively picking objects out of an urn.

[12:20] <colomon> nom: my @a = 1..6; for ^20 { say @a.pick(1); }

[12:20] <p6eval> nom 4c440e: OUTPUT«4␤5␤5␤5␤1␤6␤6␤3␤4␤5␤1␤5␤4␤6␤3␤5␤1␤2␤5␤4␤»

[12:20] <sisar> masak: i get that

[12:20] <colomon> but all the objects are put back in the urn at the end of the pick call.  :)

[12:20] <masak> yes.

[12:21] <masak> nom: say (1..6).pick(20)

[12:21] <p6eval> nom 4c440e: OUTPUT«6 1 3 5 2 4␤»

[12:21] <masak> nom: say (1..6).roll(20)

[12:21] <p6eval> nom 4c440e: OUTPUT«2 3 4 6 4 2 5 4 4 4 6 4 5 3 2 5 6 5 5 5␤»

[12:21] <colomon> so the only time you notice that pick is different from roll is if you ask it for more than one random choice

[12:23] <colomon> and calling $a.pick(1) 20 times and storing the result has the same effect as calling $a.roll(20)

[12:23] <sisar> now i get it. masak++, colomon++

[12:27] <sisar> felher: it is not easy for beginners to extract this information from S32 . I actually did look at it before asking here :)

[12:30] <felher> sisar: I totally agree :) I didn't want to tell you that have to look there. You may as well ask here :). I just wanted to point out to you that there is a documentation in case you want to do some further reading and don't know about the documentation yet :) But since you knew about S32 anyway, never mind :)

[12:33] *** bkolera joined
[12:40] *** dayangkun joined
[12:48] <dalek> rakudo/nom: d1e7100 | moritz++ | src/ (2 files):

[12:48] <dalek> rakudo/nom: more typed exceptions

[12:48] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d1e7100fd9

[12:48] <dalek> roast: 3b9a604 | moritz++ | S32-exceptions/misc.t:

[12:48] <dalek> roast: more typed exceptions

[12:48] <dalek> roast: review: https://github.com/perl6/roast/commit/3b9a60491c

[12:51] *** mtk joined
[13:01] <dalek> rakudo/nom: 3ed1ece | coke++ | docs/release_guide.pod:

[13:01] <dalek> rakudo/nom: claim a release

[13:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3ed1eceb53

[13:03] *** Teratogen joined
[13:03] <Teratogen> howdy howdy howdy

[13:03] <[Coke]> masak++ # March is still unclaimed.

[13:04] <moritz> [Coke]++ March release

[13:04] <[Coke]> moritz: April

[13:05] <masak> Teratogen! \o/

[13:05] <moritz> erm, yes. I should just read the diff :-)

[13:05] *** wolverian left
[13:05] <masak> [Coke]++ # well vonunteer'd!

[13:05] <[Coke]> I will be out of the country that day and will probably not want to do a release.

[13:05] <[Coke]> (The march one.)

[13:05] <masak> any takers for March? :)

[13:06] *** bkolera left
[13:10] *** pernatiy joined
[13:10] *** dayangkun left
[13:12] *** wolverian joined
[13:13] *** kaleem joined
[13:13] *** skids left
[13:15] *** wolverian left
[13:18] <[Coke]> (The march one.)

[13:18] <[Coke]> ww

[13:18] <sisar> niecza: my %h; say %h<chocolate>;

[13:18] <p6eval> niecza v14-63-ga8cbc27: OUTPUT«Any()␤»

[13:19] <sisar> niecza: my %h; %h<chocolate>.say;

[13:19] <p6eval> niecza v14-63-ga8cbc27: OUTPUT«Unhandled exception: Unable to resolve method say in class Any␤  at /tmp/bu9zYxMPse line 1 (mainline @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3826 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3827 (module-CORE @ 65) ␤  at /home/p6…

[13:19] <sisar> bug ?

[13:19] <sisar> or NYI ?

[13:20] <moritz> niezca: 'foo'.say

[13:20] <moritz> niecza: 'foo'.say

[13:20] <p6eval> niecza v14-63-ga8cbc27: OUTPUT«foo␤»

[13:21] <moritz> sisar: mixture, it seems :-)

[13:21] <moritz> might be that niecza places .say in Cool instead of Any

[13:21] <sisar> moritz: it seems to be choking on type Any()

[13:21] <masak> niecza: my $a; $a.say

[13:21] <p6eval> niecza v14-63-ga8cbc27: OUTPUT«Unhandled exception: Unable to resolve method say in class Any␤  at /tmp/9L2JFlDXKP line 1 (mainline @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3826 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3827 (module-CORE @ 65) ␤  at /home/p6…

[13:21] <moritz> not sure what the specs say aout that

[13:21] <colomon> nom: my $a; $a.say

[13:21] <p6eval> nom d1e710: OUTPUT«Any()␤»

[13:22] <sisar> rakudo does it correctly

[13:22] <sisar> i should submit a bug ?

[13:24] *** bkolera joined
[13:24] <[Coke]> in roast, do we prefer "done" or "plan <number>" ?

[13:25] <moritz> usually plan <number>

[13:25] <[Coke]> (I have a file that has a done that pugs isn't respecting, so I'd like to switch it. ;)

[13:25] <[Coke]> moritz: \o/ ;)

[13:26] <dalek> roast: 7dc32a2 | coke++ | S02-literals/radix.t:

[13:26] <dalek> roast: pugs fudge

[13:26] <dalek> roast: 

[13:26] <dalek> roast: (also add explicit plan)

[13:26] <dalek> roast: review: https://github.com/perl6/roast/commit/7dc32a2922

[13:27] <dalek> Pugs.hs: 0c7e93d | coke++ | t/spectest.data:

[13:27] <dalek> Pugs.hs: run another test

[13:27] <dalek> Pugs.hs: review: https://github.com/perl6/Pugs.hs/commit/0c7e93d658

[13:27] <moritz> at least the exception hacking stuff works sometimes

[13:27] *** lateau__ joined
[13:27] <moritz> the last other 3 things that I tried in rakudo have failed :/

[13:27] *** jferrero joined
[13:30] <moritz> (sink context, the match refactor, and tracking down the problem with operator overloading; the last two are related)

[13:31] *** Trashlord left
[13:33] * masak is surprised and delighted to see docs/ChangeLog filled with items for the upcoming release

[13:35] <moritz> yes, jnthn++ has been keeping it up to date

[13:35] <[Coke]> a thankless job. (he said, thanking him.)

[13:36] <dalek> roast: e4dee67 | moritz++ | S32-exceptions/misc.t:

[13:36] <dalek> roast: X::Syntax::Missing

[13:36] <dalek> roast: review: https://github.com/perl6/roast/commit/e4dee67930

[13:36] *** drbean left
[13:36] <dalek> rakudo/nom: 6588dd3 | moritz++ | src/ (2 files):

[13:36] <dalek> rakudo/nom: X::Syntax::{Missing,Malformed}

[13:36] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6588dd3980

[13:37] * [Coke] wonders if rakudo or niecza might be passing more tests today.

[13:38] * masak definitely thinks so

[13:38] <moritz> [Coke]: probably niecza. I've only added O(10) tests today

[13:40] *** tokuhirom left
[13:41] *** tokuhirom joined
[13:44] * [Coke] kicks off a run

[13:45] <[Coke]> ... oof. rakudo upgraded to new parrot.

[13:45] <[Coke]> pugs will finish running the tests before rakudo is done building parrot. ;)

[13:46] *** drbean joined
[13:46] <[Coke]> (yes that's a completely unfair comparison.)

[13:47] <masak> like comparing apples and orangutans.

[13:48] <[Coke]> au, masak: getting a ton of these running the test suite:

[13:48] <[Coke]> decodeUTF8': bad data: '\171'

[13:48] <[Coke]> (for pugs)

[13:48] <au> that means « is written as latin1 instead of utf8 in source.

[13:48] *** MayDaniel joined
[13:49] <au> *test source

[13:50] <au> pugs: « patientia diligentia humilitate ».pick: 2

[13:50] <p6eval> pugs b927740: OUTPUT«decodeUTF8': bad data: '\171'␤decodeUTF8': bad data: '\187'␤»

[13:50] <moritz> that would surprise me, since then rakudo would also complain

[13:50] <[Coke]> perl6: « patientia diligentia humilitate ».pick: 2

[13:50] <p6eval> pugs b927740: OUTPUT«decodeUTF8': bad data: '\171'␤decodeUTF8': bad data: '\187'␤»

[13:50] <p6eval> ..rakudo 3ed1ec, niecza v14-63-ga8cbc27:  ( no output )

[13:51] <[Coke]> so, clearly a bug somewhere. ;)

[13:51] <au> pugs: say « patientia diligentia humilitate ».pick: 2

[13:51] <p6eval> pugs b927740: OUTPUT«decodeUTF8': bad data: '\171'␤decodeUTF8': bad data: '\187'␤humilitatepatientia␤»

[13:51] <moritz> pugs does that on the command line too

[13:51] <moritz> so I don't blame p6eval 

[13:51] <au> hm, note it still runs the program

[13:52] <[Coke]> mmm. just a lot of extra output running the test.

[13:52] <au> ah, I know, it's due to new GHC's default :utf8 iomode

[13:52] <masak> oh?

[13:53] <masak> how does that make Pugs assume latin-1?

[13:53] <moritz> sounds like a p5ish double-decoding problem

[13:53] <flussence> perl6: say '£'.bytes

[13:53] <masak> aye.

[13:54] <p6eval> pugs b927740: OUTPUT«decodeUTF8': bad data: '\163'␤2␤»

[13:54] <p6eval> ..niecza v14-63-ga8cbc27: OUTPUT«2␤»

[13:54] <p6eval> ..rakudo 3ed1ec: OUTPUT«1␤»

[13:54] *** MayDaniel left
[13:54] <masak> o.O

[13:54] <moritz> which would be outright embarrasing, since if there's a type system that's suited to catch such errors statically, it's haskell's

[13:54] * sisar has submitted an issue for the .say quirk

[13:54] <masak> sisar++

[13:55] <au> moritz: well, yeah, pugs was written before it was possible to catch such errors :)

[13:55] <moritz> au: but I'd still expect better magic from Haskell :-)

[13:57] *** ab5tract joined
[14:03] <colomon> nom: Mu.say

[14:03] <p6eval> nom 3ed1ec: OUTPUT«Mu()␤»

[14:04] <moritz> perl6: (1|2).say

[14:04] <p6eval> rakudo 6588dd: OUTPUT«any(1, 2)␤»

[14:04] <p6eval> ..niecza v14-63-ga8cbc27: OUTPUT«1␤2␤»

[14:04] <p6eval> ..pugs b927740: OUTPUT«any(VInt 1,VInt 2)␤»

[14:04] <au> [Coke]: for the time being, please run pugs under LC_ALL=en_US.ISO-8859-1

[14:05] <dalek> rakudo/nom: 3d76478 | moritz++ | src/Perl6/Grammar.pm:

[14:05] <dalek> rakudo/nom: refactor "Malformed" parse errors

[14:05] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3d76478af8

[14:05] <au> that'll likely fix the problem whilst maintaining compatibility with GHC 6.4

[14:05] * au isn't sure if it's worth it to maintain compat with GHC 6.4, though, but it's the most expedient workaround.

[14:06] *** fdafadfsda joined
[14:06] <PerlJam> I guess Camel4 finally made it out the other side of the the O'Reilly publishing machine

[14:06] *** fdafadfsda left
[14:07] *** Trashlord joined
[14:07] <masak> good to see that O'Reilly is still publishing Perl books.

[14:07] <masak> well, Perl book, at least.

[14:08] * moritz generates en_US.ISO-8859-1 on the p6eval server

[14:08] <masak> moritz++

[14:08] *** p6eval left
[14:08] <au> moritz++

[14:09] *** p6eval joined
[14:09] *** ChanServ sets mode: +v p6eval

[14:09] *** bluescreen10 joined
[14:09] <moritz> pugs: say '£'.bytes

[14:10] <p6eval> pugs b927740: OUTPUT«2␤»

[14:10] <moritz> pugs: say '£'.bytes

[14:10] <p6eval> pugs b927740: OUTPUT«2␤»

[14:10] <masak> \o/

[14:10] <au> pugs: say « 耐 勤 謙 ».pick: 2

[14:10] <p6eval> pugs b927740: OUTPUT«耐勤␤»

[14:11] <au> \o/

[14:11] <dalek> evalbot: 7b533ee | (Perl 6 Evalbot)++ | evalbot.pl:

[14:11] <dalek> evalbot: run pugs under a ISO-8859-1 locale, au++

[14:11] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/7b533ee6fa

[14:12] <masak> "patience, diligence, modesty"?

[14:12] <au> *humility, but yeah.

[14:13] <masak> ah, yes.

[14:13] <masak> I'd say Pugs picked the appropriate two :)

[14:13] <au> :D

[14:14] *** kaleem left
[14:16] *** HarryS left
[14:20] <moritz> has anybody else noticed that emails from github use "--- \n" to delimit the signature?

[14:21] <moritz> and that the normal one is "-- \n"

[14:23] *** shinobicl_ joined
[14:23] *** HarryS joined
[14:24] <moritz> is there a github bug tracker?

[14:25] <masak> perl6: say (join "，", map { "$_是$_" }, <四 十 十四 四十>), "。"

[14:25] <p6eval> pugs b927740: OUTPUT«*** Undeclared variable: ("$_\230\152\175",MkPad (padToList [("$_",PELexical {pe_type = (mkType "Scalar"), pe_proto = <Scalar:0x7f797c7acaa1>, pe_flags = MkEntryFlags {ef_isContext = True}, pe_store = <ref:0x7f797c8cb549>}),("@_",PELexical {pe_type = (mkType "Array"…

[14:25] <p6eval> ..rakudo 6588dd: OUTPUT«===SORRY!===␤Variable $_是 is not declared␤at /tmp/h3gmcNEeCd:1␤»

[14:25] <p6eval> ..niecza v14-63-ga8cbc27: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Variable $_是 is not predeclared at /tmp/EkSPQLMspS line 1:␤------> [32msay (join "，", map { "[33m⏏[31m$_是$_" }, <四 十 十四 四十>), "。"[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line…

[14:25] <masak> oh, of course.

[14:25] <masak> perl6: say (join "，", map { $_ ~ "是" ~ $_ }, <四 十 十四 四十>), "。"

[14:25] <p6eval> pugs b927740, rakudo 6588dd, niecza v14-63-ga8cbc27: OUTPUT«四是四，十是十，十四是十四，四十是四十。␤»

[14:26] <masak> \o/

[14:26] *** bkolera left
[14:30] <au> moritz: https://github.com/contact for submission, I'm not sure if the issue list is made available publicly.

[14:30] <moritz> au: I've used that now. I think I've seen a public issue list once, but I wasn't able to find it

[14:30] <au> *nod*

[14:36] <dalek> niecza: 8248afc | (Solomon Foster)++ | lib/CORE.setting:

[14:36] <dalek> niecza: Switch from having Cool.say to Mu.say.

[14:36] <dalek> niecza: review: https://github.com/sorear/niecza/commit/8248afcd88

[14:37] <sisar> sorear++

[14:39] <dalek> roast: cccf2fb | moritz++ | S02-literals/radix.t:

[14:39] <dalek> roast: fix plan in radix.t

[14:39] <dalek> roast: review: https://github.com/perl6/roast/commit/cccf2fbd09

[14:40] *** bkolera joined
[14:41] <gfldex> nom: my $somedate = DateTime.new(now); $somedate.year++; say $somedate;

[14:41] <p6eval> nom 3d7647: OUTPUT«Cannot assign to a readonly variable or a value␤  in sub postfix:<++> at src/gen/CORE.setting:2560␤  in block <anon> at /tmp/1NhQPXtKmn:1␤␤»

[14:42] <moritz> rakudo++

[14:42] <sisar> oops! colomon++

[14:43] <gfldex> nom: my $somedate = DateTime.new(now); say $somedate.year + 365;

[14:43] <p6eval> nom 3d7647: OUTPUT«2377␤»

[14:43] <gfldex> nom: my $somedate = DateTime.new(now); say $somedate + 365;

[14:43] <p6eval> nom 3d7647: OUTPUT«No applicable candidates found to dispatch to for 'Numeric'. Available candidates are:␤:(Mu:U \$v, Mu %_!)␤␤  in method Numeric at src/gen/CORE.setting:657␤  in sub infix:<+> at src/gen/CORE.setting:2249␤  in block <anon> at /tmp/nuEEz9TuVJ:1␤␤»

[14:44] <moritz> nom: say DateTime.now + Duration(year => 1)

[14:44] <p6eval> nom 3d7647: OUTPUT«Method 'Duration' not found for invocant of class 'Parcel'␤  in <anon> at src/gen/Metamodel.pm:3430␤  in <anon> at src/gen/Metamodel.pm:3427␤  in <anon> at src/gen/Metamodel.pm:3422␤  in block <anon> at /tmp/pEsLop2lYK:1␤␤»

[14:44] *** shinobicl_ left
[14:44] <moritz> nom: say DateTime.now + Duration.new(year => 1)

[14:44] <p6eval> nom 3d7647: OUTPUT«Not enough positional parameters passed; got 1 but expected 2␤  in method new at src/gen/CORE.setting:8552␤  in block <anon> at /tmp/RVKf_9IPrm:1␤␤»

[14:45] <gfldex> if i understand S32 right the easy way to say "same day but next year" is to decompose Date|DateTime, add 1 to the year component and then compose a new Date|DateTime object

[14:45] <sisar> can someone review my _trivial_ pull request: https://github.com/perl6/mu/pull/2

[14:46] <masak> gfldex: maybe so. but things are still up for grabs. what's the nicest way you can think of to write it?

[14:47] <gfldex> masak: the nicest way? Given that Perl 6 is a language of languages, the nicest way would be a sub language for calendaring.

[14:47] <PerlJam> masak: my $date = now + 1.year;   #  :-)

[14:47] <gfldex> I will think about something reasonable instead. Will take a few hours.

[14:48] <moritz> sisar: I don't review pull requests. I've given you a commit bit instead :-)

[14:48] <moritz> sisar: so feel free to merge it yourself

[14:48] <sisar> moritz++

[14:48] <moritz> (actually I do review pull requests if necessary; but not necessary here)

[14:50] <dalek> mu: 3c3c531 | (Siddhant Saraf)++ | docs/feather/index.html:

[14:50] <dalek> mu: fix: the site lives at mu, not Pugs' repository

[14:50] <dalek> mu: review: https://github.com/perl6/mu/commit/3c3c531d70

[14:50] <dalek> mu: 226129d | (Siddhant Saraf)++ | docs/feather/index.html:

[14:50] <dalek> mu: Merge pull request #2 from Siddhant/patch-1

[14:50] <dalek> mu: 

[14:50] <dalek> mu: fix: the site lives at mu, not Pugs' repository

[14:50] <dalek> mu: review: https://github.com/perl6/mu/commit/226129d7d4

[14:51] <moritz> sisar++

[14:54] <gfldex> masak: The biggest problem I have with S32 is that it assumes the solar calendar is the only reasonable. Given what do to the only available planet we have right now, the solar calendar might be a thing of the past very soon.

[14:55] <moritz> then we'll change S32 :-)

[14:55] <gfldex> masak: on top of that, thanks to our fat moon, the dinosaurs enjoyed 23h per day and that rotational decline is still ongoing

[14:57] <moritz> are there wildly used calendar systems that account for that?

[14:57] <moritz> (except through the occasional leap second, which seems to work pretty well for most purposes)

[14:58] <sisar> colomon: i can close the issue now? #.say

[14:58] <masak> gfldex: I'm responsible for that crass solar bias in S32. it's been much more accomodating to various calendrickal systems at times.

[14:58] <masak> it's also been perfectly unusable and unimplementable.

[14:58] <moritz> agreed

[14:58] <masak> gfldex: basically, the rule is, if you write it and nopaste the code here, you have a right to propose extensions and generalization.

[14:59] <moritz> and inventing your own calendar system is just hopeless over-engineering for a programming language

[14:59] <masak> otherwise, you are strongly encouraged to pipe down :)

[14:59] <moritz> masak: otoh I would like to have an easy way to do some more DateTime arithmetic

[14:59] <masak> nod.

[14:59] <moritz> like the "same date, same time, but one year later"

[15:00] <masak> a DT::Duration would cover that.

[15:00] <masak> but I'm not sure it need be core.

[15:00] <moritz> well, I'm not sure we need a separate type for it

[15:00] <masak> gfldex: I'll add that few things provoke strong feelings/bikeshed wars like the combination of library-ish modules and everyday occurrances. DateTime hits a sweet spot there.

[15:01] <sisar> how can i force p6eval to rebuild niecza ?

[15:01] <moritz> DateTime.new.add(year => 1)

[15:01] <moritz> evalbot rebuild niecza

[15:01] <p6eval> OK (started asynchronously)

[15:01] <moritz> sisar: you can only ask it nicely, not force it :-)

[15:02] <masak> moritz: I recall CPAN's DateTime has some surprising semantics in that area. (units are added smallest-to-largest, IIRC)

[15:02] *** jferrero left
[15:02] <sisar> moritz: my bad :)

[15:02] *** benabik left
[15:02] <moritz> evalbot rebuild niecza

[15:02] <p6eval> NOT OK (maybe a rebuild is already in progress?)

[15:02] <masak> moritz: it would be interesting to hear what autarch has to say about it.

[15:02] <dalek> Rebuild of niecza complete.

[15:03] <moritz> but I won't be the one to implement it, so I won't press the issue

[15:03] <moritz> niecza: Any.say

[15:03] <p6eval> niecza v14-64-g8248afc: OUTPUT«Any()␤»

[15:03] <moritz> niecza: Any.new.say

[15:03] <p6eval> niecza v14-64-g8248afc: OUTPUT«Any()<instance>␤»

[15:04] <gfldex> masak: most of the world is using a solar calendar based on gregorian reform, the islamic world however is still using a different one. If you want to find out when Ramadhan is due, DateTime wont help you much. And since I know that there are lots and lots of ppl who follow that religion, I was asking if our western default should be the default of Perl 6.

[15:04] *** tokuhirom left
[15:04] <masak> gfldex: yes, I understood you that way.

[15:04] <masak> and my answer is "yes, it should".

[15:04] *** wtw left
[15:05] <moritz> well, DateTime doesn't help you much in finding the next Easter date either

[15:05] <masak> Instance is the atomic clock universal time line data type.

[15:05] <masak> and DateTime is the Gregorian calendar Christian world civic time mapping of an Instant.

[15:05] <masak> Instant*

[15:06] * sisar closed the issue #.say

[15:06] <masak> if you wanted, there's nothing at all preventing you from publishing a DateTime::Islamic module with a .when-is-ramadan method.

[15:08] <gfldex> i think i will start with something easy first

[15:08] <gfldex> ramadhan got the same problem then easter

[15:08] <moritz> I'm pretty sure you'll find instructions online for calculating both

[15:08] * PerlJam wonders if gfldex thinks the .when-is-ramadan method is the hard part

[15:09] <masak> I'd love to see someone blog or nopaste about such datetime calculations in Perl 6. maybe we're still missing a few convenience methods in that area.

[15:09] <PerlJam> gfldex: easter at least stays in the same general time-frame every year.  Ramadan could be at any time 

[15:10] <moritz> note that both Easter and Ramadan would be calculations on the Date level, not DateTime

[15:11] <masak> http://www.reddit.com/r/perl/comments/pv12h/perl_6_compilers_pass_20k_specification_tests/c3sgfsh # that's a good point -- I want us to delight users as well

[15:11] <colomon> sisar: might be worthwhile to add a test for it to roast.  (If there isn't one already that niecza is skipping.)

[15:14] *** alim joined
[15:16] <gfldex> moritz: i did for easter, most official even: http://www.assa.org.au/edm.html

[15:18] <moritz> with example code in basic

[15:19] *** wolfman2000 left
[15:23] <moritz> std: @$_

[15:23] <p6eval> std 52f3895: OUTPUT«ok 00:01 108m␤»

[15:24] <moritz> std: $@_

[15:24] <p6eval> std 52f3895: OUTPUT«[31m===[0mSORRY![31m===[0m␤Placeholder variable @_ may not be used outside of a block at /tmp/Wr7pd_uvhU line 1:␤------> [32m$[33m⏏[31m@_[0m␤Check failed␤FAILED 00:01 108m␤»

[15:24] <moritz> std: sub { $@_ }

[15:24] <p6eval> std 52f3895: OUTPUT«ok 00:01 108m␤»

[15:25] <masak> that looks like QBasic or VB, even.

[15:25] <moritz> my guess would have been QBasic

[15:28] *** benabik joined
[15:37] <dalek> rakudo/nom: 8bb2026 | moritz++ | src/ (2 files):

[15:37] <dalek> rakudo/nom: another typed error

[15:37] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8bb20269f8

[15:38] <dalek> roast: 5065e35 | moritz++ | S32-exceptions/misc.t:

[15:38] <dalek> roast: test X::Anon::Augment

[15:38] <dalek> roast: review: https://github.com/perl6/roast/commit/5065e35d36

[15:40] *** wolverian joined
[15:43] *** thou joined
[15:44] *** Psyche^ joined
[15:46] *** Patterner left
[15:46] *** Psyche^ is now known as Patterner

[15:50] <sisar> colomon: re test, I haven't learnt to write tests yet. Though i would like to :)

[15:50] <sisar> any guidance ?

[15:51] *** kaare_ joined
[15:52] <colomon> sisar: do you have a github id?

[15:52] <moritz> sisar: a test is just a small piece of code, together with the expectation of what it should produce

[15:53] <moritz> a very simple example code would be   Any.say

[15:53] *** kaleem joined
[15:53] <moritz> and the expected output Any()\n

[15:53] <sisar> colomon; yes. siddhant

[15:54] <moritz> sisar: do you have niecza running?

[15:54] <colomon> moritz: I don't see any sign I have admin privileges for roast.  can you add him?

[15:54] <sisar> moritz: no

[15:54] <moritz> colomon: he already has a commit bit

[15:54] <masak> moritz: I wouldn't call that a test so much as "a golfed piece of code" :) for it to be a test, the expectation has to be encoded into the code, too.

[15:54] <colomon> moritz: oh, groovy!

[15:55] <moritz> colomon: I generally add new committers to the 'perl6' team, which includes specs, roast, mu, the websites etc.

[15:55] <colomon> moritz++

[15:55] <colomon> I've got to run to the computer store to see if they can bring by bricked Windows 64-bit machine back to life

[15:55] <moritz> so, just about all repos in the perl6 organization, maybe with the exception of book, nqp and nqp-rx (but those only for hysterical raisins)

[15:56] <moritz> sisar: well, the first step is to get one compiler running (and since you want to test niecza, it would make sense to use niecza here)

[15:56] <moritz> sisar: otherwise you can't test your tests :-)

[15:56] *** kaare__ joined
[15:56] <sisar> moritz: i'm on it #getting niecza

[15:57] <moritz> ok

[15:59] <colomon> moritz++ masak++ sisar++

[15:59] *** kaare_ left
[15:59] *** bkolera left
[16:00] *** benabik left
[16:00] *** skids joined
[16:00] *** benabik joined
[16:03] *** wolverian left
[16:03] <dalek> rakudo/nom: fdb5e3a | moritz++ | src/ (2 files):

[16:03] <dalek> rakudo/nom: X::Augment::NoSuchType

[16:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fdb5e3a3ad

[16:04] *** wolverian joined
[16:04] <dalek> roast: 3804629 | moritz++ | S32-exceptions/misc.t:

[16:04] <dalek> roast: test X::Augment::NoSuchType

[16:04] <dalek> roast: review: https://github.com/perl6/roast/commit/3804629e62

[16:09] * masak decommutes

[16:14] *** sisar left
[16:17] <Teratogen> what's purple and commutes?

[16:17] <Teratogen> an abelian grape!

[16:19] <Teratogen> *rimshot*

[16:20] *** bkolera joined
[16:23] * moritz also decommutes

[16:25] *** PacoAir joined
[16:25] *** pmurias joined
[16:26] *** bkolera left
[16:30] *** Jerkwad joined
[16:32] *** kaleem_ joined
[16:32] *** alim left
[16:34] *** kaleem left
[16:35] *** Jerkwad left
[16:35] *** Jerkwad joined
[16:40] *** wolfman2000 joined
[16:42] *** bkolera joined
[16:44] *** tarch left
[16:47] *** skids left
[16:47] *** tarch joined
[16:49] *** bkolera left
[16:49] *** mj41 left
[16:49] *** tarch left
[16:59] *** jferrero joined
[17:01] *** wolfman2000 left
[17:11] <[Coke]> # 02/23/2012 - niecza++ ; pugs (15.54%); rakudo (98.98%)

[17:11] <[Coke]> "niecza",     20283,     8,   751,  1549, 22588, 23594

[17:11] <[Coke]> "pugs"  ,      3152,     5,  1742,    53,  4952, 23385

[17:11] <[Coke]> "rakudo",     20078,    30,   602,  1869, 22445, 23604

[17:14] *** birdwind1pbird left
[17:14] <[Coke]> (rakudo is failing 2 more tests than yesterday, losing ground.)

[17:15] *** araujo left
[17:18] *** araujo joined
[17:19] *** JimmyZ left
[17:25] *** lichtkind joined
[17:26] *** buubot_backup left
[17:29] *** buubot_backup joined
[17:35] *** birdwindupbird joined
[17:36] *** icwiener joined
[17:37] *** kaleem_ left
[17:41] <lichtkind> just installed perl6

[17:43] <PerlJam> lichtkind: which one?

[17:43] <lichtkind> rakudo

[17:43] <lichtkind> git pull

[17:43] <moritz> lichtkind: congratulations

[17:47] *** pernatiy left
[17:48] <TimToady> perl6: say "文字化け".chars

[17:48] <p6eval> pugs b927740, rakudo fdb5e3, niecza v14-64-g8248afc: OUTPUT«4␤»

[17:49] *** fsergot left
[17:50] <au> perl6: say "もじベーカリー".chars

[17:50] <p6eval> pugs b927740, rakudo fdb5e3, niecza v14-64-g8248afc: OUTPUT«7␤»

[17:53] <lichtkind> moritz: thanks but i have to test the content of the slides with current version

[17:54] *** noam left
[17:55] *** noam joined
[17:55] <TimToady> perl6: 𥄲

[17:55] <p6eval> pugs b927740: OUTPUT«*** No such subroutine: "&\240\165\132\178"␤    at /tmp/XgWy3otnuK line 1, column 1 - line 2, column 1␤»

[17:55] <p6eval> ..niecza v14-64-g8248afc: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Undeclared routine:␤     '𥄲' used at line 0␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1344 (die @ 3) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 33) ␤  at /home/p…

[17:55] <p6eval> ..rakudo fdb5e3: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&𥄲' called (line 1)␤»

[17:56] <flussence> that's... slightly worrying

[17:56] <TimToady> so how come rakudo manages to get that character into the log correctly, while both pugs and niecza produce mojibake?

[17:57] <geekosaur> the output from rakudo and niecza look similar here

[17:57] <benabik> here as well

[17:57] <au> (pugs always uses the \decimal notation regardless of BMPness)

[17:57] <geekosaur> pugs is outputting octal-encoded utf8, from the looks of it

[17:57] <flussence> I get � for input and rakudo/niecza on my screen

[17:57] <geekosaur> oh decimal, not octal

[17:58] <TimToady> in the ir clog, not here

[17:58] <TimToady> I get the replacement character � here in irc

[17:58] <geekosaur> what I actually have is a substitution glyph in the form of a box with 025132 in it

[17:59] <benabik> rakudo: 𥄲 niezca: 𥄲

[17:59] <p6eval> rakudo fdb5e3: OUTPUT«===SORRY!===␤Confused␤at /tmp/iTSKGrMmUx:1␤»

[17:59] <TimToady> even pasting it I get the replacement character, but it's obviously pasting the actual char in the irclock

[17:59] <TimToady> *clog even

[17:59] <benabik> I think my IRC client is adjusting the encoding on the fly.  :-/

[18:00] *** dukeleto joined
[18:00] *** dukeleto left
[18:00] <flussence> xchat defaults to brute-force decoding, iirc

[18:00] <au> rakudo: "🐪📖".chars

[18:00] <p6eval> rakudo fdb5e3:  ( no output )

[18:00] *** az5112 joined
[18:00] <au> rakudo: "🐪📖".chars.say

[18:00] <p6eval> rakudo fdb5e3: OUTPUT«2␤»

[18:00] <au> rakudo++

[18:00] *** dukeleto joined
[18:00] <benabik> I'm using Colloquy, which _says_ it's default encoding is UTF-8

[18:00] *** dukeleto left
[18:01] <TimToady> well, some folks are probably running into font issues

[18:01] *** dukeleto joined
[18:01] *** dukeleto left
[18:01] <TimToady> but the splatter in the logs is obviously encoding failure of some sort

[18:01] *** dukeleto joined
[18:01] *** dukeleto left
[18:02] <TimToady> perl6: say "𥄲"

[18:02] <p6eval> pugs b927740, rakudo fdb5e3, niecza v14-64-g8248afc: OUTPUT«𥄲␤»

[18:02] *** dukeleto joined
[18:02] *** dukeleto left
[18:02] <TimToady> but apparently only on STDERR

[18:02] <TimToady> the STDOUT comes out correctly in the logs

[18:02] *** dukeleto joined
[18:02] *** dukeleto left
[18:03] <moritz> TimToady: maybe the truncation cuts UTF-8 multi byte sequences in the middle

[18:03] *** dukeleto joined
[18:03] *** dukeleto left
[18:03] <TimToady> nah, this is in the middle

[18:03] <au> perl6: $*ERR.say: "🐫"

[18:03] <p6eval> pugs b927740, rakudo fdb5e3, niecza v14-64-g8248afc: OUTPUT«🐫␤»

[18:03] <moritz> TimToady: and then the whole line is detected as not being valid UTF-8

[18:03] *** fglock joined
[18:03] <moritz> and thus decoded as Latin-1 instead

[18:03] *** dukeleto joined
[18:03] *** dukeleto left
[18:03] <fglock> o/

[18:04] <au> /o fglock

[18:04] <benabik> perl6: $*ERR.say: "𥄲"

[18:04] <p6eval> pugs b927740, rakudo fdb5e3, niecza v14-64-g8248afc: OUTPUT«𥄲␤»

[18:04] *** dukeleto joined
[18:04] <fglock> au!

[18:04] *** dukeleto left
[18:04] *** dukeleto joined
[18:04] *** dukeleto left
[18:04] <TimToady> moritz: the entire pugs message comes through, so is not truncated in a multibyte

[18:05] *** dukeleto joined
[18:05] *** dukeleto left
[18:05] <au> [*] fglock

[18:05] <geekosaur> interesting.  note that the entire niecza message is mis-decoded.  yet it's recognized as utf8 here

[18:05] *** dukeleto joined
[18:05] *** dukeleto left
[18:05] <geekosaur> (that is, it has more garbage for where I see a graphic marker)

[18:06] * geekosaur scans back to see if that's normal

[18:06] *** dukeleto joined
[18:06] *** dukeleto left
[18:06] <geekosaur> the log also mangles utf8 from std

[18:06] <flussence> perl6: � # just want to make sure I'm not going insane

[18:06] *** dukeleto joined
[18:06] <p6eval> pugs b927740: OUTPUT«*** ␤    Unexpected "\65533"␤    expecting program␤    at /tmp/5s0TIMREzY line 1, column 1␤»

[18:06] <p6eval> ..niecza v14-64-g8248afc: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Bogus statement at /tmp/umUpxMPas4 line 1:␤------> [32m<BOL>[33m⏏[31m� # just want to make sure I'm not going[0m␤␤Parse failed␤␤»

[18:06] <p6eval> ..rakudo fdb5e3: OUTPUT«===SORRY!===␤Confused␤at /tmp/XDqBVS2z6_:1␤»

[18:06] *** dukeleto left
[18:07] *** dukeleto joined
[18:07] *** dukeleto left
[18:07] <geekosaur> (actually the graphic marker botch is std, niecza has ansi-x3.64 escapes instead)

[18:07] <TimToady> the end of the niecza is cut off at: â�¤  at /home/pâ€¦

[18:07] <flussence> I like pugs' blunt message there :)

[18:07] <TimToady> how did a chop of p6eval produce mojibake in the middle of the ASCII 6?

[18:07] *** dukeleto joined
[18:07] *** dukeleto left
[18:08] *** dukeleto joined
[18:08] *** dukeleto left
[18:08] *** dukeleto joined
[18:08] *** dukeleto left
[18:09] *** dukeleto joined
[18:09] *** dukeleto left
[18:09] <fglock> au: http://perlcabal.org/~fglock/perlito5.html

[18:09] *** dukeleto joined
[18:09] *** dukeleto left
[18:10] *** dukeleto joined
[18:10] *** dukeleto left
[18:10] *** dukeleto joined
[18:10] *** dukeleto left
[18:11] <au> fglock: I've been showing that to all sorts of folks :)

[18:11] <au> _very_ nice work!

[18:11] <fglock> :)

[18:11] *** dukeleto joined
[18:11] *** dukeleto left
[18:11] <au> fglock: I wonder if p52p6 can be made into a similar web interface as well

[18:11] * au also ponders styling it a bit along the lines of js2coffee.org

[18:11] *** dukeleto joined
[18:12] <fglock> p52p6? you mean http://perlcabal.org/~fglock/perlito6.html ?

[18:13] <au> that's p62js...

[18:13] <TimToady> geekosaur: what you said makes no sense to my poor brane

[18:14] <au> fglock: I was thinking along the line of hypotehtical Perlito5::Perl6::Emitter

[18:14] <geekosaur> TimTOady: http://irclog.perlgeek.de/perl6/2012-02-23#i_5196898

[18:15] <fglock> ah, sure

[18:15] * geekosaur glares at mis-shift, d*mn finfers

[18:16] *** dakkar left
[18:17] <TimToady> niecza: $@_

[18:17] <p6eval> niecza v14-64-g8248afc: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Invalid hard reference syntax at /tmp/XiKE_kXtZC line 1:␤------> [32m$[33m⏏[31m@_[0m␤␤Parse failed␤␤»

[18:17] <geekosaur> I hadn't yet managed to answer my other question though

[18:17] <geekosaur> just noting that the irc logs don't seem to like what std produces, either

[18:18] <TimToady> geekosaur: niecza and std appear to behave identically on the output of ⏏ and escape codes

[18:18] <TimToady> then I don't understand what you meant by "instead"

[18:18] <fglock> a p6 backend could actually be fun, because we can then bootstrap in perl6

[18:19] <au> fglock: yup, you see (as usual) where I'm going with this (as usual) :)

[18:20] <geekosaur> that was "the example I was looking at didn't seem to have both of them doing both of them, but as I'm still a trifle discombobulated and in need of naproxen I may not see the same thing next time I look at it)

[18:20] <geekosaur> s/)$/"

[18:21] <geekosaur> irclog does seem to have problems with niecza in general; makes me wonder if the problem is *its* decoder is being thrown off by the escape sequences, and deciding to decode the output as raw bytes

[18:22] <moritz> yes; some weeks or month ago, it started to render lines with escape sequences as mojibake

[18:22] <PerlJam> fglock: does perlito leverage std at all?

[18:23] <fglock> no, it has it's own grammar

[18:23] <fglock> it was developed as-needed for bootstrapping

[18:23] <fglock> it's under a cleanup...

[18:26] <fglock> perlito6 is getting a little behind, as I'm working on the p5 version - but getting closer to STD (and the spec in general) is a priority

[18:32] <[Coke]> nom: say 36-2+1+96

[18:32] <p6eval> nom fdb5e3: OUTPUT«131␤»

[18:32] <fglock> au: p52p6 is potentially easy - between 600 and 1000 loc, judging from p52js

[18:33] <fglock> plus maybe some additional runtime for some special cases

[18:34] <au> right, though if the runtime is perlito6's p5 backend, the runtime can be metacircularly stubbed at first

[18:35] <jnthn> evening o/

[18:35] <masak> evening o/

[18:35] <au> . o O "p52p6onp5"

[18:35] <masak> jnthn! \o/

[18:35] <au> /o jnthn

[18:35] <PerlJam> Any p52p6 translator has some huge benefits

[18:36] <au> would drastically simplify first-pass porting CPAN modules

[18:36] <PerlJam> yep

[18:36] <fglock> hmm

[18:36] * geekosaur misreads p52p6pong, is vastly amused by idea

[18:36] <TimToady> especially if it can translate XS too :P

[18:37] <TimToady> but yes, translation is certainly important; even imperfect tranlation is very helpful

[18:37] <jnthn> No wifi internets at $teaching-gig today...

[18:38] *** pernatiy joined
[18:38] <fglock> I have some 2h of tuits before going to sleep

[18:38] <benabik> p52p6pong...  Start with a piece of code.  One person translates it to perl 5.  The other translates the result to perl 6.  You get a point when your opponent introduces an error.

[18:38] <au> geekosaur: 5|.    |6   # first failing roundtrip drops the ball

[18:38] <au> benabik: jinx!

[18:39] <au> fglock: ooh. a 2hr sketch would be great to see -- I've checked out the repo :)

[18:39] <TimToady> write both translators in Haskell and apply some kind of fixed point analysis :)

[18:39] <moritz>     5|   . |6

[18:39] <fglock> looking for a p6 install

[18:39] <au> 5|  [.]  |6  # least fixed point

[18:40] * PerlJam wonders if he should pass a geiger counter over this mug he just got from an ex-LANL researcher

[18:40] <TimToady> no, you need an N-ray detector to see if it has any residual polywater

[18:41] * jnthn skims the backlog, and sees Rakudo gained some release managers :)

[18:41] <Teratogen> the transtator is the basis of all Federation technology!

[18:42] <TimToady> it'll be the March of Progress

[18:42] <fglock> cloning rakudo

[18:42] <Teratogen> I think duotronics should be incorporated into Perl 6!

[18:43] <jnthn> .oO( now we just need to clone Rakudo developers :) )

[18:43] <TimToady> write the developers in Perl 6 and then you can .clone 'em

[18:43] <fglock> au: cp src5/lib/Perlito5/Javascript/Emitter.pm src5/lib/Perlito5/Perl6/Emitter.pm

[18:43] * jnthn ponders what it'd take to re-write himself into Perl 6.

[18:44] <TimToady> the Singu^WPlurality is Near!

[18:45] <gfldex> frankly OT but not the less quite funny: https://bugs.php.net/bug.php?id=61095

[18:46] <Teratogen> Does PHP have namespaces now?

[18:46] <moritz> yes

[18:47] <Teratogen> nifty!

[18:47] <Teratogen> Now there can be PHPAN

[18:48] <PerlJam> that wasn't what was holding them back from PHPAN at all

[18:48] <TimToady> what the world badly needs is a refactoring PHP to Perl 6 translator :)

[18:49] <moritz> are you talking about me? :-)

[18:49] <TimToady> you were holding them back?

[18:50] <au> you were a refactoring PHP to Perl 6 translator?

[18:50] <TimToady> did you add namespaces to PHP?

[18:50] <au> are you the Nullarity?

[18:51] <TimToady> now yer just gettin' silly

[18:51] <au> evidently a symptom of low glucose level... dinner &

[18:52] <TimToady> chow

[18:52] <fglock> ~/bin/d8 perlito5.js -- -Cperl5 src5/lib/Perlito5/Perl6/Emitter.pm > lib5/Perlito5/Perl6/Emitter.pm  # looks good so far

[18:53] <TimToady> though if au++ is still in Paris, I'm sure they don't appreciate dinner being called "chow"

[18:53] <PerlJam> TimToady: but it's okay because au isn't american.

[18:53] *** fridim_ joined
[18:54] *** az5112 left
[18:54] * TimToady has a brane retroplosion

[18:54] <au> considering "Bistro" originates from "bistouille" meaning "bad alchohol", "chow" would be a step up

[18:54] <TimToady> anyway, that's for setting me up for a multi-lingual pun

[18:54] <TimToady> *thanks

[18:55] <au> anytime :)

[18:55] <TimToady> how did "thanks" turn into "that's"...grr...

[18:56] <TimToady> though it would have been even better had you been dereved from that dynasty instead

[18:56] <TimToady> *derived, grr

[18:56] * TimToady blames this chinese keyboard...

[18:57] *** pmurias_ joined
[18:57] <TimToady> (lenovo, so yes :)

[18:57] <TimToady> bbl &

[18:58] <fglock> hmm - I guess I need some quick help with perl6 - does it still have 'package"?

[18:58] <PerlJam> fglock: yes

[18:59] <fglock> and bless?

[18:59] <dalek> roast: 0c4cae6 | coke++ | S02-literals/radix.t:

[18:59] <dalek> roast: workaround pugs skip bug

[18:59] <dalek> roast: review: https://github.com/perl6/roast/commit/0c4cae6fed

[18:59] <PerlJam> yes, but you rarely see it

[18:59] <fglock> (rakudo still installing)

[18:59] <Teratogen> I immediately regret this decision!

[18:59] <fglock> yes, but I probably need it for p52p6

[18:59] <[Coke]> Can someone enable issues for https://github.com/perl6/Pugs.hs ?

[18:59] <[Coke]> (or point me at the tracker for pugs?)

[19:00] *** pmurias left
[19:00] <moritz> I can, wait a sec

[19:01] <moritz> issues are enabled

[19:01] <[Coke]> so, the plan count you just fixed is because pugs' skip can't skip counts.

[19:01] <fglock> implementing Perl6::inline() :P

[19:01] <[Coke]> (but it was hidden because in the .t, it was skipping a block.)

[19:02] * moritz counted the tests manually, just be sure

[19:02] * [Coke] did too, after you changed it. ;)

[19:02] <moritz> niecza and rakudo agree with my count :-)

[19:04] *** ab5tract left
[19:05] <[Coke]> masak: https://github.com/perl6/Pugs.hs/issues/1

[19:05] *** pyrimidine joined
[19:05] <[Coke]> (also au)

[19:08] <jnthn> afk, dinner

[19:09] <dalek> Pugs.hs: 1ed3e0c | moritz++ | Pugs/ext/Test/lib/Test.pm:

[19:09] <dalek> Pugs.hs: [Test] fix order of arguments of skip()

[19:09] <dalek> Pugs.hs: review: https://github.com/perl6/Pugs.hs/commit/1ed3e0c026

[19:11] <[Coke]> now, see I swear I tried that and it didn't work. ;)

[19:11] * [Coke] will test it.

[19:12] <moritz> [Coke]: I haven't actually tried it

[19:12] <moritz> [Coke]: just thought it should fix it

[19:12] <[Coke]> nope. doesn't work.

[19:12] <moritz> :(

[19:13] <[Coke]> now, perhaps i need to do something in the ./Pugs directory to make it... noticed, but I don't know what.

[19:13] <[Coke]> "make" didn't do anything. trying "cabal build"

[19:14] <PerlJam> moritz: you also didn't change the signature on line 604 either

[19:14] <[Coke]> nope.

[19:15] <moritz> [Coke]: how do you run spectests for pugs?

[19:16] <[Coke]> moritz: I documented that!

[19:16] <[Coke]> last section in HACKING

[19:16] *** pmurias_ left
[19:16] *** ksi joined
[19:17] <moritz> [Coke]++

[19:18] <fglock> what should I use for "null" in perl6?

[19:18] <moritz> fglock: Any

[19:18] <moritz> maybe Pugs/cbits/Test_pm.c needs to be regenerated?

[19:18] <dalek> Pugs.hs: f0bd746 | coke++ | / (3 files):

[19:18] <dalek> Pugs.hs: Add LC env var.

[19:18] <dalek> Pugs.hs: 

[19:18] <dalek> Pugs.hs: (Avoid UTF8 issues)

[19:18] <dalek> Pugs.hs: review: https://github.com/perl6/Pugs.hs/commit/f0bd74604c

[19:19] <[Coke]> moritz: I thought that was for the original Test versiohn, not the external one that the env var is pulling in.

[19:19] <dalek> Pugs.hs: 47cc4a9 | moritz++ | Pugs/ext/Test/lib/Test.pm:

[19:19] <dalek> Pugs.hs: [Test.pm] also fix docs, PerlJam++

[19:19] <dalek> Pugs.hs: review: https://github.com/perl6/Pugs.hs/commit/47cc4a9b53

[19:19] <moritz> [Coke]: have you checked if it pulls in the right one?

[19:20] * PerlJam attempts to run pugs for the first time in years

[19:28] *** skids joined
[19:32] <[Coke]> moritz: well, the env var changes something, anyway.

[19:32] <[Coke]> beyond that, no.

[19:34] <jlaire> * masak hates the phrase "it didn't used to"

[19:34] * jlaire likes the obscure "it usedn't to"

[19:34] <masak> I like that too :)

[19:35] <Teratogen> I'm givin' her all she's got, Cap'n!

[19:35] <jlaire> it tends to result in some o.O looks, though

[19:35] <jlaire> "what'd you say?"

[19:35] <moritz> [Coke]: if I add a die "..." to Test.pm, then it does die. So I think it works with the right Test.pm

[19:36] *** ribayr left
[19:36] *** literal_ is now known as literal

[19:37] <PerlJam> pugs: class A { } ;  A.new.perl

[19:37] <p6eval> pugs b927740:  ( no output )

[19:37] <PerlJam> pugs: class A { } ;  A.new.perl.say

[19:38] <p6eval> pugs b927740: OUTPUT«A.new()␤»

[19:38] <[Coke]> and are you using PUGS_USE_EXTERNAL_TEST=1 ?

[19:38] <moritz> pugs: for (1..3) { say $_ }

[19:38] <p6eval> pugs b927740: OUTPUT«1␤2␤3␤»

[19:38] <moritz> pugs: multi sub skip(Str $reason?, :$depends) { say 1 }; multi sub skip(Str $reason, Int $count = 1, :$depends) { say 2 }; skip('foo', 3)

[19:38] <p6eval> pugs b927740: OUTPUT«2␤»

[19:40] <moritz> ok, it seems that only the first multi is ever called

[19:40] *** ribayr joined
[19:41] <moritz> oh, f**k those multis

[19:43] <dalek> Pugs.hs: f3ef7f0 | moritz++ | Pugs/ext/Test/lib/Test.pm:

[19:43] <dalek> Pugs.hs: [Test.pm] replace complicated, non-working multis with a short, simple, do-it-all only sub

[19:43] <dalek> Pugs.hs: review: https://github.com/perl6/Pugs.hs/commit/f3ef7f042f

[19:43] <fglock> hm - problems: Too late for semicolon form of $*PKGDECL definition at line 7, near "my $x;  my"

[19:44] <fglock> after: module Main;

[19:44] <fglock> is the syntax for "module" different?

[19:44] *** daxim left
[19:44] <fglock> in latest rakudo

[19:45] <[Coke]> moritz++ #that does it

[19:46] <dalek> roast: 7d89666 | coke++ | S02-literals/radix.t:

[19:46] <dalek> roast: Revert "workaround pugs skip bug"

[19:46] <dalek> roast: 

[19:46] <dalek> roast: This reverts commit 0c4cae6fedfb1ccc0d18c312117a6e23c21412d7.

[19:46] <dalek> roast: 

[19:46] <dalek> roast: moritz++

[19:46] <dalek> roast: review: https://github.com/perl6/roast/commit/7d896663d0

[19:47] <fglock> working around

[19:47] <fglock> yay! $ perl -Ilib5 perlito5.pl -Cperl6 t5/01-sanity.t > x.p6 ; /Users/fglock/projetos/rakudo/perl6 x.p6

[19:47] <fglock> 2 tests pass

[19:47] <fglock> p5 to rakudo

[19:47] <colomon> nom: my @a = 2, 4 ... 20; my @b = 1..10; say @a[0..*-1] Z+ @b[1..*]

[19:47] <p6eval> nom fdb5e3: OUTPUT«4 7 10 13 16 19 22 25 28␤»

[19:48] <fglock> pushed

[19:55] <fglock> "Redeclaration of symbol" - is there a way to silence this warning/error in rakudo?

[19:55] <masak> fglock: re the "too late" message: you're probably using the semicolon form after using the block form, or something.

[19:56] <masak> fglock: the rule, to a first approximation, is that it can only cover a whole file.

[19:56] <fglock> ah, that's it - I have it more than once

[19:56] <masak> (with some exceptions for use statements, because you sometimes need to import things in order to write the 'A is B' thing correctly)

[19:56] <masak> yeah, more than once is forbidden.

[19:56] <masak> this isn't Perl 5 ;)

[19:58] <fglock> ok - I'll workaround

[19:58] <masak> fglock++

[19:58] <fglock> "use of uninitialized value of type Any in string context" too

[19:58] <masak> nom: say ~my $a

[19:58] <p6eval> nom fdb5e3: OUTPUT«use of uninitialized value of type Any in string context␤␤»

[19:58] <fglock> anyway, a lot of tests pass now :)

[19:58] <masak> \o/

[19:59] * TimToady pictures fruit laying on the ground :)

[19:59] <masak> re macros2 merge: I talked it over a bit with jnthn++, and it appears that the bug moritz++ uncovered opens up a bigger can of worms than expected. so, holding off for this release.

[20:00] * TimToady pictures cans of worms laying on the ground...

[20:01] <masak> well, they're crawling out of newly opened cans... :)

[20:02] <masak> short explanation: the "need for incarnation" of the quasi ASTs (which is now implemented) goes for the macro-arg ASTs, too (which is not).

[20:03] <fglock> heh - "Calling 'shift' will never work with no arguments" - the error messages are pretty good

[20:03] <TimToady> so just run each of the args though a macro, and you'll have it :)

[20:03] <masak> reason it's a bigger can of worms is that whereas the macro sub is "live", compiled code and easily incarnatable-from, the mainline code isn't.

[20:04] <masak> TimToady: I actually had a very similar thought yesterday, in all earnestness. it didn't work out :)

[20:05] *** MayDaniel joined
[20:06] <TimToady> yeah, rakudo is still recovering from a kind of non-homoiconic-ish notion of the difference between compile time and run time

[20:07] <TimToady> to misuse a word for something I don't have a word for...

[20:07] <masak> during my thinking about macros, I've stopped using the terms "run time" and "compile time" -- they don't serve me well, since macros contain a bunch of them nested within each other.

[20:07] <TimToady> indeed

[20:07] <masak> I find it much easier to say "run mode" and "compile mode". I don't require that everyone follow suit. :)

[20:07] *** alim_ joined
[20:08] * gfldex thinks computers are the only thing that keeps us from changing the number of days per week every odd year (see: http://en.wikipedia.org/wiki/Week)

[20:08] <masak> a macro is a run-mode routine that assists in a compile-mode code substitution. :)

[20:08] *** bluescreen10 left
[20:08] <TimToady> but parrot originally ran things off into the separate-compilation direction without much consideration of what was being lost

[20:09] <TimToady> which is a funny mistake to make when you're trying to be a dynamic engine

[20:09] <masak> TimToady: sorear said at some point the Perl 6 is the only language he knows that tries to unite the two disparate ideas of separate compilation and fuzzy run mode/compile mode boundary.

[20:10] <TimToady> well, we're insane

[20:10] <TimToady> no, we're not!

[20:10] <masak> there is that... :)

[20:10] <PerlJam> sanity is over-rated

[20:13] <TimToady> well, linking/unifying global names is really the main tricky part there, once you have a snapshot model of compilation so that you don't actually care which process compiles or runs code

[20:13] * masak goes into Rakudo releng mode

[20:13] * TimToady admires jnthn++ for naming the latter part 'bs' though :)

[20:13] <[Coke]> TimToady: is this true? http://en.wikipedia.org/wiki/Perl#Name "Perl was originally named "Pearl", after the Parable of the Pearl from the Gospel of Matthew" ?

[20:14] <[Coke]> ovid just pointed this out.

[20:14] <TimToady> not exactly

[20:14] <TimToady> I just wanted something with positive connotations, the parable is just one after-the-fact rationalization

[20:14] <PerlJam> TimToady: is it more or less true than "Perl stands for pathologically eclectic rubbish lister"?   :-)

[20:14] <masak> HEY PEOPLE I DON'T WANT TO SEE NON-RELENG COMMITS TO THE RAKUDO NOM BRANCH NOW FOR A BIT OK

[20:15] <masak> ...kthx

[20:15] <TimToady> PerlJam: sure, I made that one up myself

[20:15] <TimToady> you'll note that one was after we dropped the 'a'

[20:15] <colomon> "non-releng"?

[20:15] <masak> colomon: not related to the release.

[20:16] <PerlJam> a separate release branch would oviate all of the shouting.

[20:16] <PerlJam> er obviate

[20:17] <masak> "oviate" -- turn it into an egg?

[20:17] <TimToady> funny that we call that part "engineering" that is mostly closely related operators moving magtapes from drive to drive :)

[20:17] * PerlJam waits for all of the puns

[20:17] <TimToady> *to operators

[20:17] <mathw> I think it's just so that the people doing that thankless, often tedious job get to feel better about it

[20:17] <masak> that's what I'm doing now. I'm moving the Rakudo nom magtapse around in my server room.

[20:18] <geekosaur> "I am only an egg"

[20:18] <TimToady> it's the folks who wrote the directions for doing a release that are the real engineers, but yes, it's trying to be nice to be people who are doing the scutwork :)

[20:18] <masak> don't say Rakudo release engineering is thankless -- volunteer for March instead!

[20:18] * mathw imagines masak standing over some tapes with a magnet, painstakingly encoding the new release onto the master prior to duplication

[20:18] * TimToady pictures a March Hare

[20:19] <mathw> masak: unfortunately I have no time for anything these days :( I've not even pulled Rakudo for about three months

[20:19] <masak> mathw: aww

[20:19] * colomon is going to see the March Hare next week, he hopes: https://www.google.com/calendar/render?eid=MGs3cjI2aWRhOTgwcW5xNTI1NWt1MTJpdTAgc2hrOHZzcWM2aG12Z2ttbzl0NHJxdmJqcGNAZw&ctz=America/St_Johns&pli=1&gsessionid=hlWQY4PFy7uUGQ5xLPz47w&sf=true&output=xml

[20:19] <colomon> whoops, ugly link

[20:19] <TimToady> in the time you said that, you could've started pulling :)

[20:20] <mathw> masak: well actually I do have time for lots of things, but because I'm doing those I'm not doing Perl 6 things

[20:21] <[Coke]> TimToady: updated the article. we'll see if it sticks.

[20:21] <masak> mathw: we love you anyway :)

[20:21] *** bluescreen10 joined
[20:22] <mathw> I love you all :)

[20:22] <masak> <3

[20:22] *** fglock left
[20:22] <masak> oops, this is a Unicode channel. I meant: ♥

[20:23] <mathw> that's better

[20:23] <PerlJam> hugs are one thing ... but this feels a little too much like inappropriate sharing  ;)

[20:24] *** mj41 joined
[20:25] * masak hugs PerlJam :)

[20:26] <geekosaur> (but Hugs is haskell, not p6!  :p)

[20:26] * TimToady pugs geekosaur 

[20:27] <mathw> hug :: Person -> Person -> IO Person

[20:27] <masak> aww

[20:27] * masak tweets that

[20:28] *** fglock joined
[20:28] <jlaire> what's the return value? o.O

[20:28] <gfldex> a child process?

[20:29] <masak> that's the other thing, not hugging.

[20:29] *** skids left
[20:29] <PerlJam> indeed

[20:29] <mathw> it returns the hugged person and has the side effect of increasing theuniversal happiness level

[20:29] <jlaire> oic

[20:30] <benabik> So it's easier to fold hug across a list of people?

[20:30] <masak> "We need 4 hugs a day for survival. We need 8 hugs a day for maintenance. We need 12 hugs a day for growth." -- Virginia Satir, author and psychoterapist

[20:30] <mathw> I don't get 4 hugs a day!

[20:30] <mathw> unless you count allthe ones from the cat

[20:31] <masak> I think cat hugs count.

[20:31] <gfldex> mathw: i'm terribly sorry but that can only mean you are undead

[20:31] <PerlJam> cat hugs count for the cat at least :)

[20:31] * TimToady is going to have trouble fitting all the glasses of water in between all the hugs

[20:31] <gfldex> what may explain why zombies walk with their armes extended

[20:32] <masak> TimToady: what is it with you US people and water? :)

[20:32] <masak> food contains water, it's cool, you don't have to hydrate all the time just because.

[20:32] <TimToady> some of us live in a desert

[20:32] <masak> then you get an exception.

[20:33] <mathw> it's not just US people, it's UK people too

[20:33] <mathw> a lot of people here think you're supposed to drink six pints of water a day

[20:33] <mathw> but the closest most people get is six pints of beer a day

[20:33] <mathw> or its equivalent in wine

[20:35] *** mj41 left
[20:39] *** fsergot joined
[20:39] <jnthn> To be fair, the six pints of beer may well taste far nicer than the six pints of water :)

[20:41] <masak> jnthn: I heard you've been updating https://github.com/rakudo/rakudo/blob/nom/docs/ChangeLog -- jnthn++ -- do I conclude that this means I don't have to go through the logs and check for omissions? ;)

[20:41] <jnthn> masak: Just look what happened since the last commit to ChangeLog :)

[20:41] *** birdwindupbird left
[20:41] <masak> oki

[20:41] <mathw> jnthn: unlikely!

[20:41] <jnthn> Everything before that ChangeLog commit should be covered.

[20:41] <masak> what about https://github.com/rakudo/rakudo/blob/nom/docs/ROADMAP -- does it need any tweaks?

[20:42] <mathw> jnthn: most of them drink that gassy stuff that comes out of soaking wet cold pump things on the bar

[20:42] <jnthn> mathw: Sad but true.

[20:42] <jnthn> Carling. Fosters. EWWW.

[20:43] *** fsergot left
[20:43] <mathw> Strongbow

[20:43] <mathw> *shudder*

[20:43] * mathw is more of a cider person

[20:45] <masak> I note that SPb.pm (St Petersburg) has never figured in a release. this will be rectified.

[20:45] <masak> ...unless someone has a better suggestion... :)

[20:47] *** icwiener left
[20:47] *** icwiener joined
[20:47] *** icwiener left
[20:47] *** icwiener joined
[20:48] *** mykhal joined
[20:48] <jnthn> masak: SPb FTW :)

[20:48] <jnthn> *that* bar.

[20:50] <jnthn> Maybe this will be the year when I finally make it to Saint Perl. :)

[20:50] <mathw> where's YAPC::EU this year?

[20:50] <benabik> Europe, probably.

[20:51] <mathw> ...

[20:51] <mathw> I would hope so

[20:51] <mathw> "In a surprise announcement, this year's YAPC::EU is going to be held in the lost city of Atlantis, just as soon as we find out where it went."

[20:52] <benabik> Frankfurt, according to http://act.yapc.eu/ye2012/

[20:52] <fglock> can you help me with this one: "Placeholder variable @_ may not be used here because the surrounding block takes no signature"

[20:52] <masak> aye, Frankfurt.

[20:52] * geekosaur carefully does not mention that to people talking about sg:a fic in another channel :p

[20:52] <mathw> awesome, maybe it's time I renewed my passport

[20:52] <mathw> I've not been to Germany for ages

[20:53] <masak> fglock: @_ assumes that you're in a routine. apparently, you're not.

[20:53] <fglock> it's inside sub xxx { ...

[20:53] <masak> nom: sub xxx { say @_ }; xxx 1, 2, 3

[20:53] <p6eval> nom fdb5e3: OUTPUT«1 2 3␤»

[20:53] <masak> fglock: are you inside a block inside sub xxx { ?

[20:54] <fglock> yes, a do-block

[20:54] <au> fglock: perl6: (-> *@_ { say @_[0] })('hello')

[20:54] <au> perl6: (-> *@_ { say @_[0] })('hello')

[20:54] <p6eval> pugs b927740, rakudo fdb5e3, niecza v14-64-g8248afc: OUTPUT«hello␤»

[20:55] <dalek> rakudo/nom: 41349bf | masak++ | docs/ChangeLog:

[20:55] <dalek> rakudo/nom: [docs/ChangeLog] added one more change

[20:55] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/41349bf21a

[20:56] <au> perl6: (sub (*@_) { do { say @_[0] } } )(3)

[20:56] <p6eval> pugs b927740, rakudo fdb5e3, niecza v14-64-g8248afc: OUTPUT«3␤»

[20:58] <masak> how come there's a 2012.11 release on https://github.com/perl6/nqp/tags ?

[20:58] <masak> just curious.

[20:58] <moritz> my fault

[20:58] <moritz> should be 2011.12

[20:58] <benabik> Time traveling code!

[20:58] <masak> oh, I see they're the same.

[20:58] <benabik> Quick, download it and find out what we're going to fix!

[20:58] <masak> moritz: can I remove it?

[20:59] <jnthn> Quite a nice ChangeLog this month

[21:00] <jnthn> moritz++ for much of it :)

[21:00] <masak> jnthn++ for the rest ;)

[21:00] *** icwiener left
[21:00] <fglock> au: would you checkout & try: find t5/*.t | perl -ne ' print "*** $_"; chomp; print ` perl -Ilib5 perlito5.pl -Cperl6 $_ > tmp.p6 && perl6 tmp.p6  ` '

[21:01] <fglock> 2h passed - running out of tuits

[21:02] <au> woot!

[21:03] <au> all pushed? I'll check it out in a few mins

[21:03] <masak> fglock++!

[21:03] <au> s/few mins/couple hours/ :)

[21:03] <au> fglock++

[21:04] <fglock> :)

[21:05] <fglock> afk

[21:05] *** fglock left
[21:12] <dalek> nqp: 4da1150 | masak++ | VERSION:

[21:12] <dalek> nqp: bump VERSION to 2012.02

[21:12] <dalek> nqp: review: https://github.com/perl6/nqp/commit/4da115073f

[21:12] *** bluescreen10 left
[21:14] <[Coke]> jnthn++ #CL maintenance.

[21:16] * [Coke] wonders how to reorder windows in irssi.

[21:16] <TimToady>  /win move 3

[21:17] <PerlJam> [Coke]: also, check your "windows" section in ~/.irssi/config if you've saved your windows state

[21:17] <[Coke]> well, that seems obvious now that I know what it is. ;)

[21:17] <dalek> rakudo/nom: 5aa315f | masak++ | tools/build/NQP_REVISION:

[21:17] <dalek> rakudo/nom: [tools/build/NQP_REVISION] updated

[21:17] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5aa315f65b

[21:17] <PerlJam> [Coke]: (assuming you'd like the window locations to be somewhat permanent)

[21:18] * PerlJam always puts #perl6 on window 6 for some reason :)

[21:18] <[Coke]> I have no idea how to save windows state.

[21:18] <PerlJam>  /save

[21:19] <masak> it's all so obvious

[21:20] <PerlJam> the computer just do it if it's so obvious! 

[21:20] <PerlJam> *should

[21:20] * [Coke] wonders if that will mess with his hand carved .irssi files.

[21:21] <TimToady> okay, how do I make it page forward every time I hit space, except when I want to type space?  :)

[21:21] <PerlJam> You have to install the ESP module first

[21:21] <PerlJam> and then the DWIM module

[21:22] <huf> will that make focus follow my will?

[21:22] * PerlJam ponders a vi-mode for irssi

[21:22] <huf> also no longer will we have to stop typing just to eat

[21:22] <tadzik> PerlJam: I don't think that'd make sense

[21:23] <PerlJam> naturally, there already /is/ a vi-mode

[21:23] <huf> i... huh?

[21:24] <PerlJam> google it if you haven't already

[21:24] *** Chillance joined
[21:25] <masak> tools/update-tai-utc.pl is broken. could someone confirm? just run `perl tools/update-tai-utc.pl src/core/tai-utc.pm` in a fresh rakudo checkout.

[21:25] <masak> it loops forever on the warning 'Use of uninitialized value $lines[0] in pattern match (m//) at tools/update-tai-utc.pl line 18.'

[21:26] <jnthn> Can't locate Time/y2038.pm in @INC

[21:26] <jnthn> guess I'm missing a dep here

[21:26] <PerlJam> same here

[21:26] <masak> yeah, I did too.

[21:26] <masak> I installed it.

[21:27] <PerlJam> heh

[21:27] <PerlJam> "This program should next be run in February."

[21:27] <PerlJam> It seemingly ran fine for me.

[21:28] <PerlJam> masak: what version of perl?

[21:29] <masak> 5.10.1

[21:29] <masak> PerlJam: did it change the file?

[21:29] *** plobsing left
[21:29] <PerlJam> It did not.  Has another leap second been added?

[21:30] <masak> I conclude it hasn't.

[21:30] <PerlJam> I ran it fine with both 5.12.4 and 5.14.2

[21:30] <PerlJam> (no endless loop, but it did tell me I needed to run it again in February which is odd)

[21:31] <PerlJam> looks like an off-by-one error

[21:32] <PerlJam> (maybe)

[21:36] <PerlJam> (as soon as Time::y2038 finishs in stalling, I can try 5.10.1 too)

[21:36] <masak> I see we promised to fix autoviv by the Feb release (according to the Jan announcement) -- but I don't see autoviv in the ChangeLog.

[21:36] <masak> do I just remove that wording from the Feb announcement, or should we promise it again?

[21:37] <masak> oh! we said "in coming releases", not "in the coming release".

[21:37] <jnthn> Yeah, we don't commit that hard :P

[21:37] <masak> then it's fine. I'll leave it as-is.

[21:37] <masak> jnthn: phew!

[21:38] <PerlJam> okay ... apparently installing Time::y2038 is a rabbit hole for my perlbrew'd 5.10.1  :(

[21:39] <Teratogen> before we know it Y2.038K will be upon us!

[21:43] <jnthn> Gonna have to sleep...agreed to start teaching insanely early tomorrow for some reason. :/ On the upside, no teaching at all next week = lots of Perl 6 tuits :)

[21:43] <jnthn> 'night o/

[21:44] <masak> 'night, jnthn 

[21:47] *** NamelessTee left
[21:47] *** NamelessTee joined
[21:48] <dalek> rakudo/nom: f9196e3 | masak++ | docs/announce/2012.02:

[21:48] <dalek> rakudo/nom: [docs/announce/2012.02] added

[21:48] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f9196e38b7

[21:48] <masak> file here: https://github.com/rakudo/rakudo/blob/nom/docs/announce/2012.02

[21:49] <masak> if you're reading this, it's your solemn duty to review and provide feedback.

[21:51] <PerlJam> masak++

[21:51] <dalek> rakudo/nom: a95379d | masak++ | docs/release_guide.pod:

[21:51] <dalek> rakudo/nom: [docs/release_guide.pod] updated

[21:51] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a95379da2c

[21:52] <colomon> +1

[21:52] *** mykhal left
[21:53] <masak> there's something strange and loopy about the release guide asking the release manager to update and improve the release guide... :)

[21:53] <PerlJam> just ran tools/update-tai-utc.pl again with 5.10.1 and again, it rand fine (FYI)

[21:53] *** glass joined
[21:53] <colomon> cough, hofstadter, cough...  ;)

[21:53] <PerlJam> s/rand/ran/

[21:54] <benabik> Hopefully the output from update-tai-utc doesn't rely on rand

[21:55] * masak .oO( it relies on Ayn Rand )

[21:55] <benabik> Rand Paul?

[21:55] *** kaare__ left
[21:57] *** MayDaniel left
[21:58] <masak> "Continue adjusting things until make stresstest passes as expected. Often this means fixing a bug, fudging a test, or (temporarily?) commenting out a test file in t/spectest.data .  Use your best judgment or ask others if uncertain what to do here."

[21:59] <masak> of those three options, the latter two are generally not acceptable in "production" software.

[21:59] <masak> i.e. each release should ratchet forward, not fudge tests or comment out test files.

[22:00] <PerlJam> sure, but there are extraordinary circumstances sometimes

[22:04] *** fsergot joined
[22:05] *** benabik left
[22:05] <colomon> especially because the tests change independently of the compiler

[22:12] <masak> oh, sure.

[22:12] <masak> I'm just talking about a level of stability that we don't explicitly provide yet.

[22:13] <masak> in a sense it doesn't matter if it was the implementation or the spec that slipped from under the end user.

[22:13] <masak> now, could someone please explain to me why Z_4 isn't isomorphic to Z_2 x Z_2? I've never quite understood this.

[22:16] * colomon feels like he should have an answer, but barely understands the question.  badly out of practice in abstract algebra...

[22:21] <masak> Z_2 is a group with the elements (0, 1). Z_4 has (0, 1, 2, 3). both have addition-modulo-N as their operator.

[22:23] <katernya> hi

[22:25] <masak> katernya! \o/

[22:25] <masak> oh. I think I see it now.

[22:27] <masak> maybe the easiest answer to the question "why" is that, in Z_4, 1 + 1 == 2, but in Z_2 x Z_2, (0, 1) + (0, 1) == 0.

[22:27] <colomon> oh, groups.

[22:27] <masak> yeah. I'm bored; I'm running 'make stresstest' :)

[22:29] <colomon> hmmm... Z_2 x Z_2 specifically defines addition as being piecewise addition?

[22:30] * colomon is thinking that if you have full freedom to define the operators on (0, 1) x (0, 1) you can certainly make it isomorphic to Z_4

[22:31] *** tadzik left
[22:31] <masak> :)

[22:31] *** tadzik joined
[22:31] <masak> I think the rules of the x say that the components should stay independant.

[22:32] <colomon> then I think your explanation is exactly right

[22:33] <masak> \o/

[22:33] *** ksi left
[22:33] <colomon> but it's worth remembering that I last studied this stuff back before sorear++ was born.  ;)

[22:33] <masak> now, explain to me why Z_6 *is* isomorphic to Z_3 x Z_2... :/

[22:34] <[Coke]> colomon: the FNG at work was in high school in 2007.

[22:35] <masak> oh, there's an explanation here: http://en.wikipedia.org/wiki/Isomorphism#Practical_examples

[22:36] <colomon> I was just going to suggest you write a Perl 6 script to print out the addition table for Z_3 x Z_2....

[22:36] <masak> oh, and in Z_m x Z_n, m and n need to be coprime for such an isomorphism to hold with Z_mn.

[22:37] <masak> All tests successful.

[22:37] <masak> \o/

[22:37] <PerlJam> masak: so, 2 isn't coprime with itself?

[22:37] <dalek> rakudo/nom: 5808482 | masak++ | VERSION:

[22:37] <dalek> rakudo/nom: [release] bump VERSION

[22:37] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5808482c42

[22:37] <masak> PerlJam: apparently not ;)

[22:38] <masak> PerlJam: maybe because it has some factor in common with itself...

[22:38] <colomon> masak: that doesn't exactly strike me as an explanation; at least, if it is explaining why it works, it's too subtle for me.

[22:39] <masak> colomon: I have a vague hint of a proof in mind.

[22:39] * PerlJam was last schooled in such things almost exactly 20 years ago.

[22:39] <masak> colomon: coprimeness are like two clocks but not with 12 hours but with m and n hours respectively. if they are coprime, they don't start repeating until after mn hours.

[22:40] *** benabik joined
[22:40] <colomon> ooooo, nice explanation indeed

[22:40] <masak> colomon: and that's, in a sense, the "recipe" for a group.

[22:40] * au wonders if one can simply encode x in Z_mn as ((x mod m), (x mod n)) in (Z_m, Z_n).

[22:41] <masak> au: feels that way.

[22:41] <masak> that's the "deconstruction" of the Z_mn group :)

[22:41] <au> ah ok :)

[22:41] *** doy_ is now known as doy

[22:42] <masak> hm, I didn't mean that it's officially called that. or even that it's correct. :)

[22:42] <masak> but it feels like that's what it does :)

[22:43] <masak> it feels a bit like a deconstruction the same way using a Haskell constructor as a getter feels like a deconstruction.

[22:46] <au> the usual nomenclature for the latter is, I believe, "destructuring bind", but "deconstruction" has a nice ring to it :)

[22:46] * au >>= sleep

[22:48] <masak> ah, "destructuring bind" sounds like a reasonable name for it.

[22:52] <masak> p6c announcement sent.

[22:53] <colomon> \o/

[22:53] <colomon> masak++

[22:53] <masak> http://en.wikipedia.org/wiki/Rakudo_Perl_6 updated.

[22:54] <masak> standing down releng mode.

[22:54] <tadzik> masak++

[22:54] <masak> http://en.wikipedia.org/wiki/Niecza doesn't have a Wikipedia article. this is a minor outrage.

[22:59] * masak suddenly realizes that the explanation at http://en.wikipedia.org/wiki/Isomorphism#Practical_examples and his two-clocks metaphor and au's modulo construction all say exactly the same thing

[22:59] <masak> it's like the explanations are... isomorphic.

[23:08] *** NamelessTee left
[23:13] <masak> my work here is done.

[23:13] <masak> 'night, #perl6

[23:13] *** skids joined
[23:23] *** PacoAir left
[23:23] *** PacoAir_ joined
[23:35] *** whiteknight joined
[23:52] *** houghton joined
[23:57] *** leprevost joined
[23:58] *** PacoAir_ left
