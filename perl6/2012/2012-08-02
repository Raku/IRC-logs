[00:09] *** fgomez left
[00:09] *** fgomez joined
[00:10] *** fgomez left
[00:11] *** fgomez joined
[00:12] *** plobsing joined
[00:17] *** Chillance left
[00:20] *** benabik left
[00:20] *** benabik joined
[00:58] *** cognominal left
[00:58] *** cognominal joined
[00:58] *** cognominal left
[00:58] *** cognominal joined
[01:00] *** zhutingting joined
[01:02] *** scott___ joined
[01:02] *** tokuhiro_ joined
[01:04] *** orafu left
[01:04] *** dbr left
[01:05] *** dbr joined
[01:05] *** orafu joined
[01:09] *** bruges joined
[01:15] <diakopter> pmichaud: have you thought about ways to coalesce redundant/unneeded Cursors (for efficiency)

[01:23] *** cognominal left
[01:24] <diakopter> pmichaud: (or, perhaps I should ask: is there any possibility of coalescing Cursors for fastpath mode, then constructing the correct Cursor structure when the matching fate is chosen.. or something like that)

[01:27] *** rhr joined
[01:28] <diakopter> pmichaud: or some other way of using a fastpath, far less heavyweight mode for patterns that are detected to not need all the features of a Cursor and related

[01:31] *** vinian joined
[01:34] *** Guest21411 left
[01:46] *** mule joined
[01:47] *** gongyiliao joined
[01:48] *** mule left
[01:48] *** nebuchad` joined
[01:54] *** preflex left
[02:01] *** preflex joined
[02:02] *** preflex left
[02:03] *** sporous joined
[02:36] *** Psyche^ joined
[02:40] *** Patterner left
[02:40] *** Psyche^ is now known as Patterner

[02:44] *** Vlavv_ joined
[02:45] *** zhutingting left
[02:57] *** orafu left
[02:57] *** orafu joined
[03:03] *** jaldhar joined
[03:09] *** preflex joined
[03:10] *** sftp left
[04:06] *** skids left
[04:17] *** xinming_ joined
[04:18] *** vinian left
[04:20] *** xinming left
[04:27] *** Ex left
[04:27] *** mattp_ joined
[04:28] *** telex left
[04:34] *** vinian joined
[04:35] *** telex joined
[04:43] *** fgomez left
[04:48] *** plobsing left
[04:49] *** fgomez joined
[04:52] *** sudokode left
[05:04] *** sudokode joined
[05:06] *** fgomez left
[05:14] *** thou joined
[05:18] <moritz> \o

[05:19] *** Seganku joined
[05:19] <sorear> o/

[05:24] *** zhutingting joined
[05:26] *** birdwindupbird joined
[05:38] *** Ex joined
[05:58] *** wtw joined
[06:01] *** fgomez joined
[06:11] *** thou left
[06:11] *** Patterner left
[06:16] *** SamuraiJack joined
[06:32] *** Psyche^ joined
[06:32] *** Psyche^ is now known as Patterner

[06:33] *** Ex left
[06:35] *** kaleem joined
[06:45] <japhb> moritz, do you have graphviz on whatever machine you are doing htmlify for perl6/doc on?

[06:46] <jnthn> morning, #perl6

[06:46] <jnthn> wow...short backlog is short.

[06:46] <diakopter> morning

[06:47] <dalek> doc: 1c5e9d8 | (Geoffrey Broadwell)++ | lib/Perl6/Type (2 files):

[06:47] <dalek> doc: Cache the inversion of all type relationships in the type graph

[06:47] <dalek> doc: review: https://github.com/perl6/doc/commit/1c5e9d883c

[06:47] <dalek> doc: 11bb98c | (Geoffrey Broadwell)++ | lib/Perl6/TypeGraph/Viz.pm:

[06:47] <dalek> doc: Add Perl6::TypeGraph::Viz, which uses GraphViz to visualize type graph relationships

[06:47] <dalek> doc: review: https://github.com/perl6/doc/commit/11bb98c064

[06:48] <dalek> doc/generate-svg: 06c2000 | (Geoffrey Broadwell)++ | / (2 files):

[06:48] <dalek> doc/generate-svg: Generate type graph visualizations as SVG files (and .gitignore the new html/svg/ directory)

[06:48] <dalek> doc/generate-svg: review: https://github.com/perl6/doc/commit/06c2000040

[06:49] <japhb> phenny, tell moritz Feel free to merge the generate-svg branch for perl6/doc once you have graphviz installed on your htmlify system.

[06:49] <phenny> japhb: I'll pass that on when moritz is around.

[06:49] <japhb> afk, but will scroll back &

[06:58] *** nebuchad` is now known as nebuchadnezzar

[07:00] *** mucker joined
[07:23] <dalek> rakudo/nom: e1905aa | moritz++ | / (3 files):

[07:23] <dalek> rakudo/nom: Str.path, IO::Path.new(Str:D), tests

[07:23] <dalek> rakudo/nom: 

[07:23] <dalek> rakudo/nom: Also rename IO::Path.dir to .directory, as per spec

[07:23] <dalek> rakudo/nom: Preserve backwards compatiblity for now

[07:23] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e1905aad03

[07:29] <moritz> the shared module installations to ~/.perl6/lib is starting to annoy me

[07:29] <phenny> moritz: 06:49Z <japhb> tell moritz Feel free to merge the generate-svg branch for perl6/doc once you have graphviz installed on your htmlify system.

[07:30] <moritz> I want to keep a "production" installation of rakudo for running p6rd, htmlifying doc.perl6.org etc

[07:37] *** p6rd joined
[07:37] <moritz> speaking of which, p6rd has segfaulted after several days of operation

[07:38] <sorear> what does p6rd do?

[07:38] <moritz> inform us about release dates

[07:38] <moritz> p6rd: upcoming

[07:38] *** p6rd left
[07:39] <moritz> eeks

[07:39] *** fhelmberger joined
[07:39] <moritz> Net::IRC::Bot depends on Str.bytes

[07:45] <diakopter> moritz: what other examples of long-running p6 programs are there

[07:45] *** p6rd joined
[07:46] <moritz> diakopter: dunno, maybe Bailador apps

[07:46] <moritz> p6rd: upcoming

[07:46] <p6rd> parrot 2012-08-21, rakudo 2012-08-23, niecza 2012-08-27

[07:47] <moritz> p6rd: 2012-12

[07:47] <p6rd> parrot 2012-12-18, rakudo 2012-12-20, niecza 2012-12-31

[07:50] <bonsaikitten> is there a RSS feed for that? :)

[07:54] *** jdrab joined
[08:05] *** GlitchMr joined
[08:18] *** jdrab left
[08:30] *** mucker left
[08:35] *** dakkar joined
[08:37] <GlitchMr> https://robert.duckduckgo.com/?q=chomp+perl6

[08:37] <GlitchMr> :)

[08:38] <moritz> that looks nice

[08:38] <tadzik> wow, cool!

[08:40] <GlitchMr> Also, https://robert.duckduckgo.com/?q=ACCEPTS+perl6 (ignore "making some information available" for now)

[08:41] <GlitchMr> Additionally, if you know name of class, you can skip Perl 6 part

[08:41] <GlitchMr> https://robert.duckduckgo.com/?q=Str.chomp

[08:41] <GlitchMr> This works too

[08:42] *** Coleoid joined
[08:42] <GlitchMr> ... I should implement inheritance now :P

[08:42] <GlitchMr> So you could do stuff like Str.any too

[08:43] <moritz> https://robert.duckduckgo.com/?q=X%3A%3AAdHoc+perl6  # doesn't work yet :/

[08:43] <GlitchMr> Hmmm... I know

[08:43] <GlitchMr> I'm going to fix ita

[08:47] *** orafu left
[08:48] *** Chillance joined
[08:48] *** sergot joined
[08:48] <sergot> hi o/

[08:48] *** orafu joined
[08:49] <moritz> \o sergot 

[08:49] <moritz> GlitchMr++ # ddg stuff

[08:49] *** robinsmidsrod joined
[08:49] <jnthn> GlitchMr++

[08:50] <GlitchMr> Actually, i lied about Str.chomp-like stuff always working

[08:51] <GlitchMr> There is one edge case where it doesn't

[08:51] <GlitchMr> http://robert.duckduckgo.com/?q=Any.any

[08:53] *** nodmonkey joined
[08:56] *** jdrab joined
[09:08] *** sergot1 joined
[09:09] *** sergot left
[09:09] *** jdrab left
[09:09] *** jdrab_ joined
[09:10] *** topologist joined
[09:15] *** orafu left
[09:15] *** Chillance left
[09:15] *** p6rd left
[09:15] *** vinian left
[09:15] *** gongyiliao left
[09:15] *** lue left
[09:15] *** [particle] left
[09:17] *** orafu joined
[09:17] *** Chillance joined
[09:17] *** p6rd joined
[09:17] *** vinian joined
[09:17] *** gongyiliao joined
[09:17] *** lue joined
[09:17] *** [particle] joined
[09:17] *** pyrimidine joined
[09:17] *** pjcj joined
[09:17] *** ranguard joined
[09:17] *** PerlJam joined
[09:17] *** Pleiades` joined
[09:17] *** charsbar_____ joined
[09:17] *** Tene joined
[09:19] *** GlitchMr left
[09:31] *** SamuraiJack_ joined
[09:31] *** SamuraiJack left
[09:31] *** MayDaniel joined
[09:34] <moritz> http://hpmor.com/notes/progress-12-08-01/ :( no new chapter

[09:39] *** sergot joined
[09:40] *** sergot1 left
[09:53] *** nodmonkey left
[09:59] *** crab2313 joined
[10:07] *** cognominal joined
[10:11] *** vinian left
[10:12] *** cognominal left
[10:12] *** Ex joined
[10:14] *** cognominal joined
[10:17] *** GlitchMr joined
[10:18] <GlitchMr> http://doc.perl6.org/type/Junction#See%20Also

[10:19] <GlitchMr> Those things are making parsing harder than it needs to be...

[10:19] <GlitchMr> But whatever :)

[10:19] *** cognominal left
[10:20] *** cognominal joined
[10:22] *** cognominal left
[10:27] *** cognominal joined
[10:32] *** daxim joined
[10:33] *** scott___ left
[10:38] *** sftp joined
[10:40] *** MayDaniel left
[10:42] *** kaleem left
[10:45] *** kaleem joined
[10:55] *** crab2313 left
[11:04] *** cognominal left
[11:10] <moritz> GlitchMr: what's the problem with it?

[11:10] <moritz> methods are always below a level 1 heading called "Methods"

[11:10] <moritz> or "Methods supplied by..."

[11:12] *** ismail joined
[11:13] <jnthn> Mmm...curry lunch :)

[11:13] <jnthn> Ewww...excel generation afternoon.

[11:14] <jnthn> .oO( can't win 'em all... )

[11:15] *** gongyiliao left
[11:31] *** spider-mario joined
[11:40] *** ismail left
[11:41] *** ismail joined
[11:52] *** cognominal joined
[11:55] *** sergot1 joined
[11:57] *** sergot left
[12:02] *** wtw_ joined
[12:05] *** Coleoid left
[12:13] *** cognominal left
[12:17] *** ismail left
[12:26] *** mtk left
[12:33] *** cognominal joined
[12:45] *** sergot1 left
[12:45] <moritz> so, who will write a spreadsheet writer for Perl 6? :-)

[12:48] *** sergot joined
[12:48] *** PacoAir joined
[12:49] <moritz> nr: say Capture ~~ Cool

[12:49] *** mtk joined
[12:49] <p6eval> rakudo c1bfbb, niecza v19-15-g051783d: OUTPUT«False␤»

[12:50] *** spider-mario left
[12:51] <moritz> http://doc.perl6.org/svg/type-graph-Any.svg

[12:51] <moritz> that's... a lot of stuff inheriting from Any

[12:51] <moritz> we might not want that all in the chart, just the superclasses and roles

[12:53] *** cognominal left
[12:58] <dalek> doc/generate-svg: 584bf60 | moritz++ | lib/AST.pod:

[12:58] <dalek> doc/generate-svg: document AST

[12:58] <dalek> doc/generate-svg: 

[12:58] <dalek> doc/generate-svg: (masak, please proof-read and augment)

[12:58] <dalek> doc/generate-svg: review: https://github.com/perl6/doc/commit/584bf603e1

[12:58] *** sergot1 joined
[12:59] <jnthn> moritz: Did you mean for that to go in the branch?

[12:59] <moritz> erm, no

[12:59] <moritz> but I meant to merge the branch anyway

[13:00] <jnthn> :)

[13:00] <moritz> japhb++ did some really cool work there

[13:00] *** sergot left
[13:00] <dalek> doc: fd36986 | moritz++ | lib/Block.pod:

[13:00] <dalek> doc: document Block

[13:00] <dalek> doc: review: https://github.com/perl6/doc/commit/fd36986046

[13:00] <dalek> doc: 06c2000 | (Geoffrey Broadwell)++ | / (2 files):

[13:00] <dalek> doc: Generate type graph visualizations as SVG files (and .gitignore the new html/svg/ directory)

[13:01] <dalek> doc: review: https://github.com/perl6/doc/commit/06c2000040

[13:01] <dalek> doc: 5f4d151 | moritz++ | lib/ (7 files):

[13:01] <dalek> doc: Merge branch 'master' of https://github.com/perl6/doc

[13:01] <dalek> doc: review: https://github.com/perl6/doc/commit/5f4d151ec3

[13:01] <dalek> doc: 584bf60 | moritz++ | lib/AST.pod:

[13:01] <dalek> doc: document AST

[13:01] <dalek> doc: 

[13:01] <dalek> doc: (masak, please proof-read and augment)

[13:01] <dalek> doc: review: https://github.com/perl6/doc/commit/584bf603e1

[13:01] <dalek> doc: db1a7dd | moritz++ | / (3 files):

[13:01] <dalek> doc: Merge remote branch 'origin/generate-svg'

[13:01] <dalek> doc: review: https://github.com/perl6/doc/commit/db1a7dd02b

[13:01] <jnthn> Sadly, here at $client I don't have anything that will render an SVG installed :'/

[13:01] <jnthn> Will have to have a look when I get back home.

[13:01] <moritz> not even firefox?

[13:02] <moritz> that's cruel :-)

[13:02] <jnthn> I could install Firefox I guess.

[13:03] * jnthn was moved from machine to machine for weeks on end, so hasn't invested much time in making this one the way he likes it until it seems things settle down a bit.

[13:05] <jnthn> Tip for anybody who does do a Perl 6 spreadsheet emitter thing: give the programmer a DOM for it that doesn't suck. :/

[13:07] *** sergot joined
[13:07] *** MayDaniel joined
[13:07] *** _ilbot joined
[13:09] *** sergot1 left
[13:10] *** atrodo joined
[13:14] <daxim> perl6: my $foo; say $foo.WHAT

[13:14] <p6eval> rakudo c1bfbb, niecza v19-15-g051783d: OUTPUT«Any()␤»

[13:15] *** atrodo left
[13:15] *** kaleem left
[13:17] *** sergot left
[13:18] *** skids joined
[13:19] <moritz> jnthn: how would a non-sucking DOM for a spreadsheet look like?

[13:20] *** atrodo joined
[13:20] <moritz> I'd imagine there's not too much to it

[13:20] <moritz> like, a collection of worksheets

[13:20] <moritz> and each worksheet is a 2D grid of cells

[13:20] <moritz> and a cell knows if it holds a string, number, date or formula

[13:21] <moritz> I'd imagine there's not too much to it # I can imagine what Excel or Gnumeric core devs would think about that line :-)

[13:21] <jnthn> Things like, if you can format stuff within a cell as well as at the level of the cell as a whole, try for making the API for doing the two consistent. :-)

[13:21] <[Coke]> (spreadsheet writer) you mean like the wonderful p5 one? that's a big enough project that it seems better to spend cycles being able to run p5/convert existing p5 code.

[13:22] <moritz> [Coke]: I've read that the one for XLSX is slightly smaller than the one for XLS files :-)

[13:22] <[Coke]> I've spent the last six months working on a project in java to generate .xlsx files quickly from sql/stored procs, so it's kind of near to my brain.

[13:23] <[Coke]> if I were writing something, I'd just do .xlsx. it's just xml and zip and a few thousand pages of DTDs.

[13:24] <moritz> [Coke]++ # few thousand pages of DTDs

[13:24] <moritz> it's not a project I'd do for fun

[13:25] <[Coke]> moritz: me either! ;)

[13:25] <[Coke]> I'm cheating, of course, being a perl programmer, and ignoring the DTDs unless I have to. ;)

[13:25] <jnthn> Nor me :)

[13:26] <moritz> is shelling out to perl considered kosher in the Java world? :-)

[13:27] <flussence> I'd give up and use CSV...

[13:29] *** cognominal joined
[13:29] <rjbs> I didn't know Javaites kept kosher.

[13:31] <jnthn> .oO( Java code always looked a little porky to me... )

[13:33] <jnthn> Oh my, now it spat out a corrupt Excel document?!

[13:39] *** kaleem joined
[13:40] *** bluescreen10 joined
[13:43] <dalek> doc: b1b87b7 | moritz++ | / (2 files):

[13:43] <dalek> doc: [htmlify] emit PNG images along with SVG

[13:43] <dalek> doc: 

[13:43] <dalek> doc: also change the output directory

[13:43] <dalek> doc: review: https://github.com/perl6/doc/commit/b1b87b7be2

[13:43] <moritz> jnthn: http://doc.perl6.org/images/type-graph-Any.png for you :-)

[13:45] <moritz> http://doc.perl6.org/images/type-graph-Cool.png less convoluted

[13:45] <jnthn> whoa!

[13:46] <moritz> japhb: I think we should omit subclasses if there more than $n of them (where $n might be 10 or 20 or so)

[13:46] *** UncleFester6 joined
[13:47] <jnthn> http://doc.perl6.org/images/type-graph-Numeric.png is nice, though makes me wonder if showing the things under Real wouldn't also have been nice.

[13:48] <moritz> it's always just one level for consumers

[13:48] <moritz> currently

[13:48] <jnthn> *nod*

[13:48] <jnthn> japhb++

[13:48] <jnthn> These are great.

[13:48] <moritz> maybe we should generally limit to $n consumers, rather than to one level

[13:48] <moritz> but it's something I'll happily leave to japhb++

[13:49] <jnthn> Is it working of data from relection, ooc?

[13:49] <jnthn> That is, can this be applied to any bunch of types?

[13:49] <jnthn> Or is it fairly specialized to what's in CORE?

[13:50] <moritz> currently it gets the data from type-graph.txt

[13:50] <jnthn> k

[13:50] <moritz> but it goes through an indirection layer (Perl6::TypeGraph, with Perl6::Type nodes)

[13:50] <moritz> shouldn't be hard to fill it via introspection instead

[13:51] <jnthn> yay :)

[13:51] <moritz> and still reuse the dot/svg/png generation

[13:52] <UncleFester6> r: pir::say "abc"

[13:52] <p6eval> rakudo c1bfbb: OUTPUT«===SORRY!===␤pir::say missing a signature␤»

[13:52] <moritz> r: nqp::say 'abc'

[13:52] <p6eval> rakudo c1bfbb: OUTPUT«abc␤»

[13:52] <moritz> r: pir::say__vS 'abc'

[13:52] <p6eval> rakudo c1bfbb: OUTPUT«abc␤»

[13:53] <UncleFester6> some p6 modules depend on pir::load_bytecode and wound build for me with parrot anymore - same missing signature error

[13:53] <UncleFester6> s/parrot/rakudo

[13:53] <moritz> that's since the toqast branch merge

[13:54] <moritz> I've submitted a pull request for MIME::Base64

[13:54] <UncleFester6> other module I noticed would be Diget::MD5

[13:54] <UncleFester6> Digest::MD5

[13:54] <moritz> snarkyboojum: please apply it :-)

[13:56] <moritz> UncleFester6: I'll patch-and-pull-request that one when I come home

[14:02] <dalek> doc: cb90010 | moritz++ | htmlify.pl:

[14:02] <dalek> doc: [htmlify] stop supporting custom output dirs

[14:02] <dalek> doc: 

[14:02] <dalek> doc: since static files directly live in html/, there is not much point in

[14:02] <dalek> doc: allowing different output directories, which would then be incomplete.

[14:02] <dalek> doc: Gets rid of some repetitive argument passing

[14:02] <dalek> doc: review: https://github.com/perl6/doc/commit/cb90010d06

[14:12] <moritz> r: say Routine.^mro

[14:12] <p6eval> rakudo c1bfbb: OUTPUT«Routine() Block() Code() Any() Mu()␤»

[14:14] *** fhelmberger left
[14:24] *** mucker joined
[14:24] *** sporous left
[14:24] *** sporous joined
[14:26] <dalek> doc: 982e21f | moritz++ | lib/Routine.pod:

[14:26] <dalek> doc: document Routine

[14:26] <dalek> doc: review: https://github.com/perl6/doc/commit/982e21f126

[14:27] <GlitchMr> I've updated my DuckDuckGo thing, so you can do stuff like "Str.say" or "perl6 Mu". It isn't yet merged, I'm now waiting for merge :).

[14:27] <moritz> GlitchMr++

[14:27] *** spider-mario joined
[14:27] <moritz> ++crazedpsyc # anticipated merge :-)

[14:28] <GlitchMr> "Str.say" shows entry for "Mu.say", but I don't think it matters much

[14:28] <moritz> it's a very good start

[14:30] <jnthn> Once its merged, probably good to blog about it too :)

[14:30] <GlitchMr> I wonder why they don't use JSON or something like this, but whatever

[14:30] * jnthn finds it quite exciting :)

[14:31] <GlitchMr> Also, https://github.com/GlitchMr/zeroclickinfo-fathead/blob/perl6-doc/perl6_doc/output.txt

[14:31] *** JimmyZ joined
[14:31] *** crab2313 joined
[14:32] *** bluescreen10 left
[14:33] * JimmyZ wonders whether there is a ticket or not for https://github.com/perl6/doc/blob/master/htmlify.pl#L74, the needless colon

[14:35] <moritz> JimmyZ: does rakudo handle it without the semicolon?

[14:35] <JimmyZ> moritz: nope

[14:36] <hoelzro> does anyone know what library Github uses to do its syntax highlighting?

[14:36] <moritz> JimmyZ: you meant rakudobug? yes

[14:36] <JimmyZ> moritz: yeah

[14:36] <moritz> JimmyZ: there's even a ROADMAP item for it

[14:36] <crazedpsyc> moritz: hah, robert is the fathead guy, I'm staying out :)

[14:37] <moritz> ++robert then :-)

[14:37] <GlitchMr> hoelzro: pygments

[14:37] <hoelzro> GlitchMr: thanks

[14:38] <JimmyZ> hoelzro: I think it's here : https://github.com/github/ 

[14:38] <hoelzro> JimmyZ: I looked at their markdown lib, but I couldn't find details on the syntax highlighting

[14:38] * hoelzro wants to add Perl 6 support to GH

[14:39] <GlitchMr> Send your language to pygments and GitHub should update someday

[14:39] <GlitchMr> ...

[14:39] <JimmyZ> hoelzro: https://github.com/github/linguist

[14:40] <GlitchMr> Except, I think that there could be a problem... most of Perl 6 scripts use .pl extension

[14:40] <GlitchMr> And .pm

[14:40] <moritz> and .pod

[14:40] <JimmyZ> hoelzro: they use this library at GitHub to detect blob languages, highlight code, ignore binary files

[14:41] <hoelzro> JimmyZ: I just saw that, thanks =)

[14:41] * hoelzro uses .p6/.pm6

[14:42] <hoelzro> I'm guessing I'm allowed to dip into the content of the file a bit to look for 'use v6' or something

[14:42] <JimmyZ> hoelzro: For disambiguating between files with common extensions, they use a bayesian classifier. https://github.com/github/linguist/blob/master/lib/linguist/classifier.rb

[14:42] *** bluescreen10 joined
[14:43] <hoelzro> nice

[14:43] <[Coke]> Oh. I still have a project for pmichaud to show test coverage by test by implementation, don't i.

[14:43] <moritz> pull request for Digest::MD5 submitted

[14:44] <GlitchMr> But, would GitHub classify Perl 5 and Perl 6 as different languages :P?

[14:44] <[Coke]> I suppose I should start that by moving my gist into an actual project.

[14:44] <moritz> cosimo++ is usually pretty quick in applying them

[14:44] <moritz> GlitchMr: if we ask them nicely, why not?

[14:44] <[Coke]> moritz: how would they, if we're using .pl everywhere?

[14:44] <[Coke]> (same way we do?)

[14:45] <moritz> [Coke]: what JimmyZ said

[14:45] <GlitchMr> They classify Python 2 and Python 3 as this same languages... but differences are rather small, so whatever

[14:45] <moritz> [Coke]: http://irclog.perlgeek.de/perl6/2012-08-02#i_5868680

[14:46] <GlitchMr> Perl 5 and Perl 6 are definitely different

[14:46] <[Coke]> you'd think I could see that far up the scroll. huh. ;)

[14:46] <moritz> you'd have to move your eyes :-)

[14:46] <PerlJam> They could just use file(1)  ;)

[14:47] <moritz> better than fail(1) :-)

[14:48] *** thou joined
[14:48] *** seldon joined
[14:49] <GlitchMr> glitchmr@strawberry ~/g/z/perl6_doc> man fail

[14:49] <GlitchMr> No manual entry for fail

[14:49] <[Coke]> . o O (Ugh. so blah)

[14:49] <moritz> r: say fail(1)

[14:49] <p6eval> rakudo c1bfbb: OUTPUT«1␤  in method gist at src/gen/CORE.setting:9624␤  in sub say at src/gen/CORE.setting:7024␤  in block  at /tmp/pKPe2gswrV:1␤␤»

[14:49] <flussence> .oO( failure is not an option? )

[14:49] <GlitchMr> I guess I don't have program which provides fail manual page

[14:49] <tadzik> fail: command not found

[14:49] <tadzik> that has a double meaning :)

[14:50] *** Pleiades` left
[14:50] <GlitchMr> But, I think the fail man page exists...

[14:50] <GlitchMr> Except it's fail(9)

[14:50] <GlitchMr> http://man.cx/fail

[14:55] *** Pleiades` joined
[15:00] *** SamuraiJack_ left
[15:03] *** SamuraiJack joined
[15:04] *** fgomez left
[15:05] *** kaare_ joined
[15:07] *** birdwindupbird left
[15:13] <[Coke]> https://github.com/coke/perl6-roast-data -- was originally in a gist.

[15:15] <moritz> [Coke]++

[15:15] <jnthn> beer, decommute &

[15:18] *** cognominal left
[15:18] *** crab2313 left
[15:19] <[Coke]> now pmichaud can open an issue there. ;)

[15:20] *** cognominal joined
[15:20] <dalek> doc: 1ca287f | moritz++ | lib/X/Syntax.pod:

[15:20] <dalek> doc: X::Syntax

[15:20] <dalek> doc: review: https://github.com/perl6/doc/commit/1ca287f1b9

[15:24] <dalek> doc: f576a26 | moritz++ | lib/X/Syntax/NegatedPair.pod:

[15:24] <dalek> doc: X::Syntax::NegatedPair

[15:24] <dalek> doc: review: https://github.com/perl6/doc/commit/f576a2647c

[15:31] * PerlJam wonders what his brain is doing sometimes

[15:32] <PerlJam> at first glance I read that as "X::Syntax::NegatedBear"  

[15:32] <PerlJam> (weird, huh?)

[15:32] <moritz> firing neurons?

[15:32] <moritz> while writing docs I just realized that we could include the key of the malformed pair in the error message

[15:36] <moritz> I hate that, getting stuck in code improvements while I actually wanted to write docs

[15:37] <moritz> it's a good case for writing docs earlier than I usually do

[15:38] <moritz> cosimo++ already merged the Digest::MD5 patch \0/

[15:39] *** cognominal left
[15:39] <cosimo> moritz: thanks for that

[15:41] <cosimo> is the current rakudo branch nom?

[15:41] *** kaleem left
[15:41] *** kaleem joined
[15:42] <moritz> yes

[15:42] *** fgomez joined
[15:43] <cosimo> I'm a bit out of the loop :-|

[15:43] <dalek> rakudo/nom: d71ad18 | moritz++ | src/ (2 files):

[15:43] <dalek> rakudo/nom: include key of negated pair with value in the error message

[15:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d71ad18105

[15:45] <dalek> roast: 425b786 | moritz++ | S32-exceptions/misc.t:

[15:45] <dalek> roast: test for extra information in X::Syntax::NegatedPair

[15:45] <dalek> roast: review: https://github.com/perl6/roast/commit/425b7869da

[15:45] <moritz> decommute&

[15:46] *** fgomez left
[15:48] *** MayDaniel left
[15:53] *** wtw_ left
[15:54] *** JimmyZ left
[15:55] <gfldex> r: role R { our $.r; }; class C does R { our $.c = LolImUndefined; }

[15:55] <p6eval> rakudo c1bfbb: OUTPUT«(signal SEGV)»

[15:56] <gfldex> i'm in your language make your compiler crash

[15:56] <[Coke]> eek.

[15:56] <gfldex> jnthn: ^^^ please note 

[15:57] <arnsholt> Only happens if it has a role?

[15:58] <gfldex> yes

[15:58] *** wtw left
[15:58] <gfldex> it's RT#114380

[16:00] <arnsholt> r: role R { has $.r; }; class C does R { our $.c = LolImUndefined; }

[16:00] <p6eval> rakudo c1bfbb: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&LolImUndefined' called (line 1)␤»

[16:00] <arnsholt> Right. So somehow related to the role having a package variable, it seems

[16:08] <gfldex> r: role R { my $.r; }; class C does R { our $.c = LolImUndefined; }

[16:08] <p6eval> rakudo c1bfbb: OUTPUT«(signal SEGV)»

[16:09] *** birdwindupbird joined
[16:11] *** thelazydeveloper joined
[16:11] *** alester joined
[16:12] *** kaleem left
[16:18] <moritz> r: role R { my $.r }

[16:18] <p6eval> rakudo c1bfbb:  ( no output )

[16:19] <moritz> r: role R { my $.r }; class C does R { our $.c }

[16:19] <p6eval> rakudo c1bfbb: OUTPUT«(signal SEGV)»

[16:19] <moritz> r: role R { my $.r }; class C does R {  }

[16:19] <p6eval> rakudo c1bfbb: OUTPUT«(signal SEGV)»

[16:19] <moritz> golfed!

[16:19] <pmichaud> moritz: ping

[16:19] <moritz> pmichaud: pong

[16:20] <pmichaud> I'm reading the "platforms problems" thread on parrot-dev, and I'm a little concerned.  Parrot's thinking of abandoning the ability to run on *BSD and *Solaris?

[16:20] <pmichaud> (and I'm asking you because you've been somewhat aware/involved of the branches involved, I think :)

[16:23] <pmichaud> I guess my first question is: Do we (Rakudo) care about BSD and Solaris?  My thinking is "yes we do".

[16:26] <moritz> yes, we do

[16:26] *** cognominal joined
[16:26] *** sivoais left
[16:27] <pmichaud> will the io_cleanup and/or thread branch merges give Rakudo any features/benefits that it doesn't already have, ooc?

[16:27] *** sivoais joined
[16:30] <pmichaud> I guess I should just write my concerns to parrot-dev.

[16:30] <pmichaud> that's going to be a delicate email to write.  :-/

[16:33] *** MayDaniel joined
[16:36] <PerlJam> pmichaud: "aaiiiigggghh!  What are y'all doing?!?"  :)

[16:39] *** birdwindupbird left
[16:40] *** fgomez joined
[16:40] *** birdwindupbird joined
[16:45] *** fgomez left
[16:45] *** birdwindupbird left
[16:48] <GlitchMr> Just wondering, when Perl 6 search will be added to DuckDuckGo how can I blog about it?

[16:50] *** zhutingting left
[16:51] <GlitchMr> I guess I will have to make a blog :P

[16:51] *** cognominal left
[16:56] <felher> Is there a special pass-through-ast-of-only-matching-subrule thing? I.d: if i have a grammar "... regex a() { <a> | <b> | <c> | <d> } ... ", is there a special whatever that does " method a($/) { if $/.exists("a") { make $/<a>.ast; } elsif $/.exists("b") .... } "? Im using " method a($/) { make $/.values[0].ast; } " for now, which is not bad. I'm just wondering if there is a special way to express this 

[16:56] <felher> which i'm not aware off.

[16:58] <felher> Oh, btw: i mean "regex x() { <a> ..." and "method x($/) {...", not regex and method "a" :)

[17:00] <pmichaud> email sent

[17:05] <pmichaud> felher: there's not a "pass through" mechanism for the .ast items (yet?)

[17:05] <pmichaud> some of us have toyed with the notion of having one but as yet we do not.

[17:06] <felher> pmichaud: okay. Thanks :)

[17:06] <moritz> pmichaud: sorry, have been called away

[17:06] <pmichaud> I speculate we could have a method that looks through .caps and returns the first defined .ast that it encounters.

[17:07] <moritz> pmichaud: and yes, we want some stuff that the io_cleanup branch gives us

[17:07] <moritz> (like, .encoding on sockets, the possiblity to add a recv_bytes method to socket)

[17:08] <pmichaud> are these things that we can only obtain through the io_cleanup branch?

[17:08] <moritz> that's something I can't answer

[17:09] <moritz> I understand the current state of the IO subsystem is a mess, and it would be really much more effort to add such things, though still possible

[17:11] <pmichaud> well, we'll see what responses my email gets.  :-)

[17:12] *** dakkar left
[17:13] <moritz> it sounds like "negate the ability to run Parrot on" is a bit of an exaggeration

[17:13] <pmichaud> yeah, that's probably true.

[17:13] <moritz> there are also TODOed windows tests, and yet you can still run parrot on windows

[17:14] <moritz> or maybe s/run/crawl/ :-)

[17:14] <pmichaud> But "drop support for" sounds much more than "todo some tests"

[17:15] <pmichaud> and if I/O itself doesn't work on those platforms... that's a pretty big feature to lose.  Thus we need more information.  :)

[17:15] *** spider-mario left
[17:15] <moritz> agreed

[17:18] <pmichaud> okay, thanks for the info.

[17:35] <PerlJam> pweb

[17:35] <PerlJam> oops, ww

[17:36] <[Coke]> pew pew!

[17:42] *** cognominal joined
[17:54] <masak> salut, #perl6

[17:56] <japhb> o/

[17:57] <japhb> moritz, jnthn: Thank you for taking a look at the type graph visualizations -- and the positive comments :-)

[17:58] <dalek> perl6-roast-data: 67c8561 | coke++ | perl6_pass_rates:

[17:58] <dalek> perl6-roast-data: today

[17:58] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/67c8561f69

[17:58] * [Coke] tries to decide if that's useful.

[17:59] <japhb> For the Any, Exception, and Metamodel cases, I have some code locally that I've been playing with to segment the complete typegraph, and then draw these in an easier-to-digest form.

[17:59] * [Coke] settles on yes, since you ahve a link to the latest results.

[17:59] <jnthn> good evening o/

[17:59] <japhb> o/

[17:59] <[Coke]> ... where did August 1st go.. whoops. ;)

[17:59] <moritz> down the Tiber, I'm sure

[18:00] * japhb thinks about the "limit consumers" heuristic suggested by jnthn++ and moritz++

[18:01] <[Coke]> would it be helpful to put in the latest copies of each of the spec test run files?

[18:01] <[Coke]> eh, sure.

[18:01] <[Coke]> oops, meeting.

[18:06] *** spider-mario joined
[18:11] *** cognominal left
[18:13] *** SamuraiJack left
[18:15] *** SamuraiJack joined
[18:25] *** daxim left
[18:25] *** cognominal joined
[18:42] *** mucker left
[18:42] <sorear> good * #perl6

[18:50] *** cognominal left
[18:50] *** cognominal joined
[18:50] <diakopter> sorear: howdy

[18:51] <diakopter> (u do)

[18:51] *** cognominal left
[18:51] <jnthn> o/ sorear , diakopter 

[18:51] *** cognominal joined
[18:53] <dalek> perl6-roast-data: 3ec3e6e | coke++ | / (5 files):

[18:53] <dalek> perl6-roast-data: Add the test run output files daily.

[18:53] <dalek> perl6-roast-data: 

[18:53] <dalek> perl6-roast-data: Start with the previous run's output.

[18:53] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/3ec3e6ef1a

[18:54] <[Coke]> there: now https://raw.github.com/coke/perl6-roast-data/master/rakudo_summary.out will have the latest automatically in case folks want to try to fix those, or catch breakage.

[19:03] *** SamuraiJack left
[19:04] <dalek> perl6-roast-data: 550280d | coke++ | spec_ (3 files):

[19:04] <dalek> perl6-roast-data: remove echos - they predate running via cron.

[19:04] <dalek> perl6-roast-data: 

[19:04] <dalek> perl6-roast-data: remove commented out code

[19:04] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/550280dd6b

[19:04] <dalek> perl6-roast-data: 4aa1b06 | coke++ | LICENSE:

[19:04] <dalek> perl6-roast-data: Add LICENSE

[19:04] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/4aa1b06e5c

[19:04] <dalek> perl6-roast-data: 3526c40 | coke++ | README:

[19:04] <dalek> perl6-roast-data: Add README

[19:04] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/3526c40106

[19:04] <dalek> perl6-roast-data: 1f5526f | coke++ | spec_ (3 files):

[19:04] <dalek> perl6-roast-data: reformat code

[19:04] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/1f5526f097

[19:05] <[Coke]> annoyingly, having this in a public repo in a gist makes it more likely I'm going to hack on it. :)

[19:07] <diakopter> :)

[19:07] <[Coke]> *instead of a gist, I mean.

[19:07] * [Coke] deletes the gist.

[19:09] *** fgomez joined
[19:15] <[Coke]> rakudo is seeing a lot of these:

[19:15] <[Coke]> use of uninitialized value of type Any in string context  in sub is at lib/Test.pm:81

[19:16] <[Coke]> r: use Test: say is(Any, 3);

[19:16] <p6eval> rakudo c1bfbb: OUTPUT«===SORRY!===␤Confused␤at /tmp/RMwHNaaZbC:1␤»

[19:16] <[Coke]> r: use Test; say is(Any, 3);

[19:16] <p6eval> rakudo c1bfbb: OUTPUT«use of uninitialized value of type Any in string context  in sub is at lib/Test.pm:81␤␤not ok 1 - ␤use of uninitialized value of type Any in string context  in sub is at lib/Test.pm:84␤␤#      got: ''␤# expected: '3'␤False␤»

[19:17] <[Coke]> Should that warn, or just return false?

[19:19] <moritz> yes, it should warn

[19:19] <moritz> since &is does string comparison

[19:20] <[Coke]> r: no warnings;

[19:20] <p6eval> rakudo c1bfbb: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&warnings' called (line 1)␤Undefined routine '&no' called (line 1)␤»

[19:20] <[Coke]> r: no Test;

[19:20] <p6eval> rakudo c1bfbb: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&Test' called (line 1)␤Undefined routine '&no' called (line 1)␤»

[19:21] <dalek> specs: bbbdb78 | moritz++ | S32-setting-library/Exception.pod:

[19:21] <dalek> specs: [S32::Exception] X::Syntax::NegatedPair should report the key

[19:21] <dalek> specs: review: https://github.com/perl6/specs/commit/bbbdb78468

[19:23] *** cognominal left
[19:24] <moritz> r: :!a(1)

[19:24] <p6eval> rakudo c1bfbb: OUTPUT«===SORRY!===␤Argument not allowed on negated pair␤at /tmp/h6yAYGvHeC:1␤»

[19:26] * moritz idly wonders why rakudo didn't update on p6eval 

[19:28] *** GlitchMr left
[19:30] <dalek> doc: c837ee8 | (Geoffrey Broadwell)++ | lib/Perl6/TypeGraph/Viz.pm:

[19:30] <dalek> doc: Improve algorithm for finding neighbors of requested node visualization; this makes the Numeric visualization way better, for instance

[19:30] <dalek> doc: review: https://github.com/perl6/doc/commit/c837ee837d

[19:30] <dalek> doc: 804072a | (Geoffrey Broadwell)++ | htmlify.pl:

[19:30] <dalek> doc: Write specialized visualizations for Any, Exception, and the Metamodel

[19:30] <dalek> doc: review: https://github.com/perl6/doc/commit/804072a012

[19:30] <dalek> doc: b0b42c9 | (Geoffrey Broadwell)++ | .gitignore:

[19:30] <dalek> doc: Fix .gitignore to skip html/images/ instead of html/svg/

[19:30] <dalek> doc: review: https://github.com/perl6/doc/commit/b0b42c9b18

[19:32] * japhb iterates towards some form of sanity ...

[19:32] *** t0rn joined
[19:36] <dalek> evalbot: 369b28b | moritz++ | sync.pl:

[19:36] <dalek> evalbot: teach sync.pl about pugs

[19:36] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/369b28b2d0

[19:36] <dalek> evalbot: cf3cbb9 | moritz++ | evalbot.pl:

[19:36] <dalek> evalbot: remove toqast target

[19:36] <dalek> evalbot: 

[19:36] <dalek> evalbot: it has been merged into nom by now

[19:36] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/cf3cbb9dc5

[19:36] <dalek> evalbot: 6d61bd8 | moritz++ | build-scripts/rebuild-nom. (2 files):

[19:36] <dalek> evalbot: [nom rebuild] switch to much simpler rebuild script

[19:36] <dalek> evalbot: 

[19:36] <dalek> evalbot: since building and running happens on two different machines, rsync provides

[19:36] <dalek> evalbot: snapshotting semantics for us. No need to keep two separate install locations

[19:36] <dalek> evalbot: anymore

[19:36] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/6d61bd8f80

[19:36] <japhb> moritz, jnthn: In case it wasn't obvious, the .svg versions of the visualizations are clickable -- each node is a link to its corresponding type documentation

[19:37] <moritz> japhb: yes, I've noticed that :-)

[19:37] <moritz> though I'd prefer absolut paths in the SVGs

[19:37] <moritz> because I'm sure some user agents will screw up with relativ paths :-)

[19:37] <japhb> OOC, why?

[19:38] <moritz> or we, when we move the images around

[19:38] <japhb> ah, hmm.

[19:38] * japhb wonders if there are any user agents that *can* render an SVG, but *can't* get the relative paths correct.

[19:38] <moritz> I've generally made bad experience with relative paths and later changing URLs

[19:39] <moritz> or relative URLs and mod_rewrite insanity :-)

[19:39] <moritz> but in the end it's just a slight preference

[19:40] <japhb> I've had the opposite experience: I commonly have tools move between "sites" or parts of the same site, and so only the relative urls work.

[19:40] * japhb shrugs ... it's even easy to override the $.url-base  :-)

[19:41] <moritz> \o/

[19:41] <moritz> japhb++ # flexible design

[19:41] <japhb> heh

[19:42] <moritz> one more thing

[19:42] <japhb> ?

[19:42] <moritz> we probably want thumbnails of those images to be included in the HTML for the type

[19:42] * japhb imagines moritz in a black turtleneck in front of a 5m high screen

[19:42] <moritz> because the images themselves are often too large for direct inclusion

[19:43] <japhb> moritz, yeah, I was thinking something similar, just hadn't quite decided how I wanted to do the thumbnails.

[19:44] <japhb> I'd like to have the thumbs for something not terribly complex (a half-dozen nodes, say) to still be quite readable.

[19:44] <moritz> in case we don't have a better idea,  convert $source.png -resize {$x}x$y $dest.png

[19:44] <moritz> for small $source.png that will produce a readable $dest.png

[19:45] <japhb> nodnod

[19:45] <moritz> though it seems that you can pass   site="x,y"  to dot too

[19:46] <moritz> though of course not as a command line argument. It needs to be in the input file :(

[19:46] <moritz> r: :!a(1)

[19:46] <p6eval> rakudo c1bfbb: OUTPUT«===SORRY!===␤Argument not allowed on negated pair␤at /tmp/H3fTFz0sgC:1␤»

[19:46] <moritz> r: :!a(1)

[19:46] <p6eval> rakudo d71ad1: OUTPUT«===SORRY!===␤Argument not allowed on negated pair with key 'a'␤at /tmp/b3lQGrZFFx:1␤»

[19:47] <japhb> moritz, well, we're generating the dot data, so injecting it into the input is workable.  :-)

[19:47] *** birdwindupbird joined
[19:48] <japhb> Since there can be only one link off the thumbs, how about we make the PNGs be the "thumbs", and have them link to the full-size SVGs?

[19:48] <moritz> I'd love to simply link to the URL without extension

[19:48] <moritz> and let content negotiation figure out whether to deliver the .png or .svg version

[19:49] <moritz> not sure how well it works with contemporary browsers :-)

[19:49] <japhb> Do browsers request SVG in preference to PNG?

[19:49] <moritz> that's a very good question

[19:50] <dalek> doc: 7bdd313 | moritz++ | lib/X/Syntax/NegatedPair.pod:

[19:50] <dalek> doc: [X::Syntax::NegatedPair] document .key, error message

[19:50] <dalek> doc: review: https://github.com/perl6/doc/commit/7bdd313b43

[19:50] <japhb> Well, let's start with the way we know will work, see what that's like, and go from there.

[19:51] <flussence> chromium doesn't seem to care what the response is with images, it sends "Accept: */*"

[19:52] <flussence> it sends a full list for html/css/js files, though

[19:52] <flussence> oh wait, not for js either

[19:53] <flussence> firefox sends for a .gif: "Accept: image/png,image/*;q=0.8,*/*;q=0.5". Looks like it wouldn't load svg.

[19:54] *** cognominal joined
[19:55] <sorear> i'm pretty sure you can use css3 fallbacks to do this :p

[19:58] *** ilogger2 joined
[19:58] *** ChanServ sets mode: +v ilogger2

[20:01] <dalek> evalbot: a8b8afd | moritz++ | sync.pl:

[20:01] <dalek> evalbot: [nom] stop syncing outdated dirs

[20:01] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/a8b8afde4a

[20:06] <moritz> japhb: I have an idea for injecting HTML into the output

[20:06] <moritz> japhb: we can teach Pod::To::HTML to copy '=FOR HTML' sections verbatim to the output

[20:07] <moritz> and then it'll be easy to add some HTML that embeds the image etc.

[20:08] <moritz> wait, S26 says that should be   =begin Html ... =end Html

[20:09] <japhb> There's no tag for having an image in the Pod directly?

[20:10] <moritz> hm, there is

[20:11] <moritz> =Image http://www.perlfoundation.org/images/perl_logo_32x104.png

[20:11] <moritz> though not sure if you can make the image a link

[20:11] <moritz> I remember actively discouraging tadzik++ from parsing block elements inside of X<...> constructs

[20:11] <moritz> for sanity reasons :-)

[20:12] <japhb> It seems kinda silly not being able to make an image link (though I agree with what you said to tadzik)

[20:15] <moritz> hm, S26 is full of options

[20:15] <moritz> maybe we can make   =begin para L<URL HERE>  \n block contents \n =end para  work that way

[20:19] <moritz> but not today&

[20:22] <dalek> doc: 76924b1 | (Geoffrey Broadwell)++ | / (2 files):

[20:22] <dalek> doc: Support sized Viz output, and make PNG visualizations 8" x 3" max (rendered at 96 dpi) for use as "mostly readable thumbnails"

[20:22] <dalek> doc: review: https://github.com/perl6/doc/commit/76924b17e0

[20:22] <dalek> doc: 4bf7649 | (Geoffrey Broadwell)++ | lib/X/Syntax/NegatedPair.pod:

[20:22] <dalek> doc: Merge branch 'master' of github.com:perl6/doc

[20:22] <dalek> doc: review: https://github.com/perl6/doc/commit/4bf76497ef

[20:22] <japhb> Time for lunch &

[20:30] *** snearch joined
[21:13] <japhb> Mmm, Goan food ...

[21:13] <jnthn> I'd go an' have some of that!

[21:13] <japhb> :-P

[21:15] *** cognominal joined
[21:16] <masak> trust jnthn to find the puntential in any utterance... :)

[21:16] * masak .oO( he should change his nick to jnpun... )

[21:17] <jnthn> But it'd contain a vowel and risk pronuncability :P

[21:17] *** snearch left
[21:17] <masak> well, I considered jnphn, but that wasn't as visually evident.

[21:18] <masak> and given how IRC is mainly visual (even though it's really a metaphor for spoken conversation)...

[21:21] <japhb> Anyone around who can htmlify the perl6/doc and run the sync script?  moritz seems to be asleep, and my public key access to [email@hidden.address] seems broken

[21:23] <japhb> (You'll need URI and Pod::To::HTML for Perl 6, and graphviz installed and in your PATH for generating the visualizations)

[21:27] *** cognominal left
[21:38] *** cognominal joined
[21:40] *** cognominal left
[21:41] <masak> nr: role R { our $.r }; class C does R {}; say "alive"

[21:41] <p6eval> rakudo d71ad1: OUTPUT«(signal SEGV)»

[21:41] <p6eval> ..niecza v19-15-g051783d: OUTPUT«alive␤»

[21:42] * masak adds this to https://rt.perl.org/rt3/Ticket/Display.html?id=114380

[21:57] *** cognominal joined
[21:57] *** cognominal left
[21:57] *** cognominal joined
[22:09] *** bluescreen10 joined
[22:21] *** bluescreen10 left
[22:35] *** cognominal left
[22:35] *** skids joined
[22:46] *** alester_ joined
[22:48] *** alester_ is now known as alester

[22:48] <lue> hello world o/

[22:53] *** cognominal joined
[23:05] *** Chillance joined
[23:11] *** Ex joined
[23:11] *** Ex left
[23:11] *** Ex joined
[23:13] <gfldex> r: role R { my $.r; }; class C does R { our $.c = LolImUndefined; }

[23:13] <p6eval> rakudo d71ad1: OUTPUT«(signal SEGV)»

[23:24] *** simcop2387 joined
[23:29] *** gongyiliao joined
[23:45] *** cognominal_ joined
[23:48] *** cognominal left
