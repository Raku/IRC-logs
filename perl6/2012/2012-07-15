[00:01] *** Pleiades` joined
[00:09] *** eviltwin_b left
[00:10] *** sergot left
[00:19] *** spider-mario left
[00:21] *** cognominal__ joined
[00:24] *** cognominal_ left
[00:44] *** fridim_ left
[00:57] *** seldon left
[00:59] *** cognominal joined
[01:02] *** cognominal__ left
[01:05] *** PacoAir left
[01:15] *** Pleiades` left
[01:23] *** Pleiades` joined
[01:23] *** cognominal left
[01:24] *** cognominal joined
[01:45] *** simcop2387 left
[01:47] *** simcop2387 joined
[01:50] <diakopter> perl6: say 44 unless 1 for 1..2;

[01:50] <p6eval> rakudo ee86a5, niecza v19-13-g442e075:  ( no output )

[01:51] <diakopter> perl6: say 44 unless 1 for 1..2;

[01:51] <p6eval> rakudo ee86a5, niecza v19-13-g442e075:  ( no output )

[01:51] <diakopter> oops; sry

[01:58] *** preflex left
[01:59] *** preflex joined
[02:07] *** xdbr left
[02:34] *** edit_21 left
[02:35] *** edit_21 joined
[02:36] *** ggoebel joined
[02:36] *** thou joined
[02:36] *** orafu left
[02:36] *** orafu joined
[02:44] *** prettyrobots left
[02:47] *** prettyrobots joined
[03:16] *** thou left
[03:17] *** shinobicl joined
[03:24] *** leprevost joined
[03:25] *** sisar left
[03:28] *** Chillance left
[03:33] *** kaare_ joined
[03:34] *** shinobicl left
[03:34] *** dbr joined
[04:05] *** prettyrobots left
[04:29] *** telex left
[04:30] *** telex joined
[04:41] *** wamiks joined
[04:45] *** thelazydeveloper left
[04:57] *** benabik left
[05:09] *** telex left
[05:13] *** birdwindupbird joined
[05:13] <moritz> \o

[05:15] <moritz> phenny: tell szabgab your website the p6mave one seem to have each article several times perl page, for example on http://szabgab.com/perl-weekly-two-days-later.html

[05:15] <phenny> moritz: I'll pass that on when szabgab is around.

[05:15] <moritz> phenny: tell szabgab *and the

[05:15] <phenny> moritz: I'll pass that on when szabgab is around.

[05:17] *** sisar joined
[05:26] *** benabik joined
[05:27] *** leprevost left
[06:17] *** GlitchMr joined
[06:20] *** birdwindupbird left
[06:23] *** sisar left
[06:47] *** wamiks left
[06:52] *** wamiks joined
[06:59] *** GlitchMr left
[07:01] *** GlitchMr joined
[07:03] *** GlitchMr left
[07:13] *** GlitchMr joined
[07:16] *** cognominal_ joined
[07:19] *** cognominal left
[07:32] *** timotimo left
[07:33] *** timotimo joined
[07:52] *** kaare_ left
[08:17] <moritz> nr: my %h; say %h<a>

[08:17] <p6eval> rakudo ee86a5, niecza v19-13-g442e075: OUTPUT«Any()␤»

[08:21] <dalek> doc: b45ecfe | moritz++ | lib/EnumMap.pod:

[08:21] <dalek> doc: [EnumMap] :exists

[08:21] <dalek> doc: review: https://github.com/perl6/doc/commit/b45ecfe7e7

[08:21] <dalek> doc: 7f0c910 | moritz++ | lib/Hash.pod:

[08:21] <dalek> doc: start to document Hash

[08:21] <dalek> doc: review: https://github.com/perl6/doc/commit/7f0c910a1c

[08:44] *** edit_21 left
[08:45] *** tokuhiro_ joined
[09:23] *** bbkr joined
[09:24] *** JimmyZ joined
[09:52] <masak> g'day, #perl6

[09:55] <masak> no backlog today :)

[10:03] *** fridim_ joined
[10:21] *** Psyche^ joined
[10:21] *** Patterner left
[10:21] *** Psyche^ is now known as Patterner

[10:27] <moritz> \o masak 

[10:41] <jnthn> Good afty o/

[10:44] <masak> \o

[10:47] <jnthn> Short backlog is short.

[10:50] *** nodmonkey joined
[10:52] <masak> backlog I am disappoint.

[10:52] <masak> to all you :wq-ers out there: http://www.rudism.com/s/vimcreep

[10:53] <masak> I've recently been feeling this with vim, thanks to using macros more.

[10:54] *** jaldhar_ left
[10:54] <masak> the wonderful feeling of running a macro 120 times, seeing it fling text across the screen, ordering it into neat lines at the speed of terminal window updates.

[10:54] <moritz> :-)

[10:55] <moritz> one thing I really like about vim that many other text editors don't offer is column hilighting and editing

[10:56] <dalek> doc: ade3303 | moritz++ | htmlify.pl:

[10:56] <dalek> doc: start to munge URLs

[10:56] <dalek> doc: review: https://github.com/perl6/doc/commit/ade3303a9a

[10:57] <moritz> ok folks, what do you think about a &podeval routine? (name is up for improvement)

[10:57] <moritz> I want to eval a piece of code, and return the $=pod variable at the end

[10:58] <moritz> or... some other API to get at the pod in a different compilation unit

[11:07] <dalek> doc: 7d68a67 | moritz++ | htmlify.pl:

[11:07] <dalek> doc: remove outdated comment

[11:07] <dalek> doc: review: https://github.com/perl6/doc/commit/7d68a678a1

[11:07] <dalek> doc: 36fe0e4 | moritz++ | / (2 files):

[11:07] <dalek> doc: simplify by use of &eval

[11:07] <dalek> doc: review: https://github.com/perl6/doc/commit/36fe0e439b

[11:08] <moritz> this commit significantly speeds up html generation

[11:08] <moritz> though I haven't measured how much

[11:08] <cognominal_> masak, you did not try Sublime Text 2  :)

[11:09] <masak> cognominal_: I did not, no.

[11:15] <dalek> roast: d92fdf6 | (Pawel Pabian)++ | S03-smartmatch/any-type.t:

[11:15] <dalek> roast: Smartmatch against module lives, RT #76610

[11:15] <dalek> roast: review: https://github.com/perl6/roast/commit/d92fdf6058

[11:16] <moritz> oh wow, my last patch to htmlify was a factor 3 speedup

[11:17] <masak> \o/

[11:18] <masak> so it now runs in -200% of the previous time? :P

[11:19] <moritz> masak: I think you're mixing up factors and sums :-)

[11:20] *** lue left
[11:25] <moritz> I want to extract continuous sublists (where all elements match a certain smart-matcher) from a list

[11:26] <moritz> for example <a b a a b a> with matcher 'a' should produce ['a'], 'b', ['a', 'a'], 'b', ['a']

[11:26] <moritz> what would be a good way to do that?

[11:27] <dalek> roast: c1c897c | (Pawel Pabian)++ | S32-str/substr.t:

[11:27] <dalek> roast: substr with start beyond end of string is Failure, RT #76682

[11:27] <dalek> roast: review: https://github.com/perl6/roast/commit/c1c897cf4f

[11:28] <jnthn> moritz: Maybe something with a flip-flop is possible.

[11:30] <masak> do you really prefer the  outer list to alternate arrays and individual elements? looks a bit un-unified to me.

[11:31] <masak> besides that, it looks like a typical lagging-variable problem to me.

[11:31] *** PacoAir joined
[11:31] <moritz> masak: no, actually i want to wrap them into custom objects, now that I think more about it

[11:32] <moritz> and yes, I'm looking for way to solve the lagging-variable thing without having to write a lagging variable all the time

[11:34] *** mucker joined
[11:35] *** lue joined
[11:36] <moritz> r: class Pod::List is Pod::Block { }; say Pod:List.new(content => [])

[11:36] <p6eval> rakudo ee86a5: OUTPUT«You cannot create an instance of this type␤  in method bless at src/gen/CORE.setting:608␤  in method new at src/gen/CORE.setting:595␤  in block <anon> at /tmp/cMTGeWUmBC:1␤␤»

[11:37] <moritz> curious error, no? 

[11:40] *** lue left
[11:40] <jnthn> Well, you usually get it out of things ike

[11:41] <jnthn> r: module Foo { }; Foo.new

[11:41] <p6eval> rakudo ee86a5: OUTPUT«You cannot create an instance of this type␤  in method bless at src/gen/CORE.setting:608␤  in method new at src/gen/CORE.setting:595␤  in block <anon> at /tmp/PAbOHaDHSG:1␤␤»

[11:41] <moritz> r: say (Pod:List).WHAT

[11:41] <p6eval> rakudo ee86a5: OUTPUT«Pod()␤»

[11:41] <moritz> r: say (Pod:List).HOW

[11:41] <p6eval> rakudo ee86a5: OUTPUT«Perl6::Metamodel::PackageHOW.new()␤»

[11:41] <moritz> r: say (Pod::List).HOW

[11:41] <p6eval> rakudo ee86a5: OUTPUT«Could not find symbol 'Pod::&List'␤  in block <anon> at /tmp/hFUo21YuGg:1␤␤»

[11:42] <moritz> so it just ignores everything after the single colon

[11:42] <masak> moritz: I'm also looking for a good general solution the lagging-variable problem. have been for about a year now.

[11:42] <moritz> and what I get is just Pod, which is a namespace

[11:43] <moritz> masak: there seem to be two general categories of algorithm: one that does something if the lagging variable has a certain value, and the other one if the lagging variable changes value in a certain way

[11:44] <masak> YAPC::EU talk submission deadline is today. just so y'all know.

[11:46] <moritz> I wonder if I should submit a second talk, justin case

[11:46] <jnthn> We submitted :)

[11:46] <jnthn> uh wtf

[11:46] * jnthn submitted

[11:46] <jnthn> .oO( Royal we... )

[11:49] * jnthn wonders if masak submitted the macros talk :)

[11:53] *** lue joined
[11:55] * moritz just submitted a talk about p6doc

[11:56] <moritz> and I've submitted one about exceptions long ago

[11:56] <dalek> roast: 4d39751 | (Pawel Pabian)++ | S02-types/array.t:

[11:56] <dalek> roast: cannot use Inf index to assign or access element in infinite array, RT #73184

[11:56] <dalek> roast: review: https://github.com/perl6/roast/commit/4d397514e2

[11:58] *** lue left
[11:58] *** godfrey999 joined
[12:00] *** cognominal__ joined
[12:03] <masak> jnthn: I submitted the macros talk, yes. don't remember about the autopuns talk, but I think so. will check. I have two more talks that I want to submit today. (I expect some of them to be rejected. I don't want to give four talks)

[12:03] <dalek> nqp/toqast: 0f445bb | jnthn++ | src/QRegex/P6Regex/Grammar.nqp:

[12:03] <dalek> nqp/toqast: Should only shallow-clone %*RX.

[12:03] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/0f445bb315

[12:03] *** cognominal_ left
[12:03] <dalek> rakudo/toqast: 5256ba0 | jnthn++ | src/QPerl6/World.pm:

[12:03] <dalek> rakudo/toqast: Replace a couple more leftover pieces of PAST; fixes some cases of list assignment, getting assign.t running again.

[12:03] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/5256ba0d11

[12:03] <dalek> rakudo/toqast: efe8720 | jnthn++ | src/QPerl6/Actions.pm:

[12:03] <dalek> rakudo/toqast: A little more regex fixing.

[12:03] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/efe8720c01

[12:04] * jnthn submitted 2 in total.

[12:04] <jnthn> Happy if either or both are accepted.

[12:06] <masak> seems I only submitted the macros talk so far.

[12:08] <dalek> roast: b963140 | (Pawel Pabian)++ | S06-multi/redispatch.t:

[12:08] <dalek> roast: next same in main block dies due to lack of dispatcher, RT #76328

[12:08] <dalek> roast: review: https://github.com/perl6/roast/commit/b963140531

[12:09] *** thelazydeveloper joined
[12:10] <moritz> flussence: https://gist.github.com/3116493 # I plan to improve the Pod::To::HTML codegen a bit :-)

[12:11] *** lue joined
[12:18] *** alvis joined
[12:23] *** lue left
[12:31] <dalek> nqp/toqast: 8009fa2 | jnthn++ | src/QAST/Operations.nqp:

[12:31] <dalek> nqp/toqast: Named arguments must always follow positional ones in the generated code, even if it ain't so in the AST.

[12:31] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/8009fa2fae

[12:31] <dalek> rakudo/toqast: 0bcd4d4 | jnthn++ | src/QPerl6/ (2 files):

[12:31] <dalek> rakudo/toqast: Fix deferral.

[12:31] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/0bcd4d4798

[12:33] *** crab2313 joined
[12:35] *** lue joined
[12:42] *** lue left
[12:43] *** kaare_ joined
[12:45] *** crab2313 left
[12:47] <bbkr> diakopter: IMO testneeded tag should be removed from https://rt.perl.org/rt3/Ticket/Display.html?id=77562 (explanantion in ticket)

[12:49] *** crab2313 joined
[12:51] *** PacoAir left
[12:54] *** lue joined
[12:56] *** nebuchadnezzar left
[12:59] *** lue left
[13:03] *** tokuhiro_ left
[13:03] *** tokuhiro_ joined
[13:05] <dalek> roast: 868d0c6 | (Pawel Pabian)++ | S03-operators/precedence.t:

[13:05] <dalek> roast: and after say is not interpreted as infix:<and>, RT #73266

[13:05] <dalek> roast: review: https://github.com/perl6/roast/commit/868d0c645f

[13:08] *** tokuhiro_ left
[13:10] *** nebuchadnezzar joined
[13:12] *** lue joined
[13:17] *** localhost left
[13:18] *** localhost joined
[13:20] <bbkr> masak: you classified ticket https://rt.perl.org/rt3/Ticket/Display.html?id=74180 as "LTA error message" - do you expect code in ticket to fail?

[13:21] *** nodmonkey left
[13:21] <bbkr> rn: "foo" ~~ /(foo)/; say "$0a";

[13:21] <p6eval> rakudo ee86a5, niecza v19-13-g442e075: OUTPUT«fooa␤»

[13:22] *** lue left
[13:26] *** leprevost joined
[13:29] *** godfrey999 left
[13:29] *** godfrey999 joined
[13:33] *** godfrey999 left
[13:35] *** lue joined
[13:35] <dalek> roast: 606e737 | (Pawel Pabian)++ | S05-match/capturing-contexts.t:

[13:35] <dalek> roast: alphabetic characters can follow digits in $0 variable in interpolation

[13:35] <dalek> roast: review: https://github.com/perl6/roast/commit/606e73751f

[13:36] *** godfrey999 joined
[13:37] <dalek> nqp/toqast: 0099a4e | jnthn++ | src/QAST/Operations.nqp:

[13:37] <dalek> nqp/toqast: Implement for op.

[13:37] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/0099a4e26b

[13:38] <dalek> rakudo/toqast: 993a4e5 | jnthn++ | src/QPerl6/ (2 files):

[13:38] <dalek> rakudo/toqast: Somewhat fix macros.

[13:38] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/993a4e507b

[13:38] <dalek> rakudo/toqast: 8acb17c | jnthn++ | src/QPerl6/Actions.pm:

[13:38] <dalek> rakudo/toqast: Fix require.

[13:38] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/8acb17ced3

[13:38] <dalek> rakudo/toqast: 01db08d | jnthn++ | src/QPerl6/Actions.pm:

[13:39] <dalek> rakudo/toqast: Eliminate another PAST/pirop usage.

[13:39] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/01db08d81c

[13:39] *** godfrey999 left
[13:40] *** godfrey999 joined
[13:45] *** godfrey999 left
[13:45] <crab2313> ls

[13:48] *** lue left
[13:48] *** godfrey999 joined
[13:53] *** godfrey999 left
[13:59] <JimmyZ> . ..

[13:59] <bbkr> how should test for code that did timeout in the past looks like?

[13:59] *** lue joined
[14:00] <bbkr> I mean - is is possible to wrap it somehow that it won't interrupt whole test but simply fail one assertion?

[14:01] *** fgomez left
[14:04] *** lue left
[14:04] *** leprevost left
[14:05] <dalek> rakudo/toqast: 69aa196 | jnthn++ | src/QPerl6/Actions.pm:

[14:05] <dalek> rakudo/toqast: Fix our scoped subs.

[14:05] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/69aa196b5d

[14:05] <dalek> rakudo/toqast: a997440 | jnthn++ | src/QPerl6/World.pm:

[14:05] <dalek> rakudo/toqast: Fix a couple of pasttype oopsies.

[14:05] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/a997440c8f

[14:05] <dalek> rakudo/toqast: f033319 | jnthn++ | src/QPerl6/Actions.pm:

[14:05] <dalek> rakudo/toqast: Fix 'use fatal'.

[14:05] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/f033319ac7

[14:10] *** birdwindupbird joined
[14:13] *** PacoAir joined
[14:17] *** leprevost joined
[14:19] *** birdwindupbird left
[14:20] *** lue joined
[14:20] <dalek> roast: b080fb5 | (Pawel Pabian)++ | S12-attributes/clone.t:

[14:20] <dalek> roast: cloning a Match object, RT #88254

[14:20] <dalek> roast: review: https://github.com/perl6/roast/commit/b080fb519f

[14:27] *** lue left
[14:27] *** nodmonkey joined
[14:37] *** JimmyZ_ joined
[14:39] *** JimmyZ left
[14:39] *** lue joined
[14:39] *** JimmyZ_ is now known as JimmyZ

[14:39] *** seldon joined
[14:43] <diakopter> oy

[14:44] *** lue left
[14:45] *** eviltwin_b joined
[14:49] <masak> hello from a *bus*! \o/

[14:49] <jnthn> How's it feel to be stored and forwarded? 

[14:49] <diakopter> avoid bus error

[14:50] <masak> so far, so good.

[14:51] <jnthn> .oO( SIGBUS would be a great name for an on-bus wifi access point... )

[14:51] <diakopter> not even the trains here have reliable wifi :(

[14:53] <diakopter> it's very spotty

[14:53] <diakopter> on the heavy rail

[14:53] <diakopter> the light rail doesn't have it at all

[14:54] *** leprevost left
[14:54] <masak> I'm using my phone as a wifi hotspot.

[14:55] <diakopter> ohh :) that works well here (Verizon)

[14:55] *** godfrey999 joined
[14:55] <jnthn> Some trains here do have wifi onboard.

[14:57] * diakopter studies http://cmph.sourceforge.net/

[14:57] *** lue joined
[14:59] *** fgomez joined
[15:03] *** lue left
[15:15] *** prettyrobots joined
[15:15] *** lue joined
[15:22] *** lue left
[15:23] <masak> bbkr: I think you were right to resolve https://rt.perl.org/rt3//Public/Bug/Display.html?id=74180

[15:23] <masak> we'll go by STD's example unless that turns out to be wrong. :)

[15:23] <masak> bbkr++

[15:25] <bbkr> masak: thanks

[15:29] <masak> #perl6, may I recommend http://www.ccs.neu.edu/home/matthias/Presentations/ecoop2004.pdf as a thought-provoking afternoon read?

[15:35] *** lue joined
[15:37] *** nodmonkey_ joined
[15:37] *** nodmonkey left
[15:37] *** nodmonkey_ is now known as nodmonkey

[15:39] *** xinming left
[15:39] *** lue left
[15:43] *** JimmyZ left
[15:45] *** xinming joined
[15:46] <dalek> roast: ae8bd0a | (Pawel Pabian)++ | S12-subset/subtypes.t:

[15:46] <dalek> roast: subset in signature cannot use non-predeclared variable, RT #72948

[15:46] <dalek> roast: review: https://github.com/perl6/roast/commit/ae8bd0a393

[15:51] *** thou joined
[15:51] <bbkr> r: my $::x = 3; say $::x; # is  this the correct way to read '3' ?

[15:51] <p6eval> rakudo ee86a5: OUTPUT«===SORRY!===␤Variable $x is not declared␤at /tmp/0zrLvGh8T9:1␤»

[15:51] <diakopter> masak: I'm not smart enough to infer what's being said by those slides.

[15:52] *** lue joined
[15:55] <masak> diakopter: I had a less-than-100% extraction success too. but still managed to enjoy them.

[15:55] <masak> diakopter: the hierarchy tree diagrams were fairly opaque to me.

[15:55] <masak> many of the points were not.

[15:56] *** nodmonkey left
[16:03] *** lue left
[16:03] <seldon> There are some interesting thoughts in them, although much of it is not new, and much of it would be horribly inefficient in practice at present.

[16:05] *** eviltwin_b left
[16:06] *** eviltwin_b joined
[16:07] <flussence> php discovers array slicing: https://wiki.php.net/rfc/array_column

[16:09] <masak> wow, that is horrible. :(

[16:10] <flussence> I wouldn't call it horrible, just... pointless to do it that way.

[16:10] *** zhutingting joined
[16:10] <masak> is there a way to /ignore things about PHP? :)

[16:10] <flussence> telling me to shut up about it works :)

[16:11] * eviltwin_b is sure there's a way to make a netnanny useful by making it block references to php...

[16:13] <seldon> Most irc clients have scripting support. I'm sure you could hook grep up to it.

[16:14] <seldon> Hmm...perl6 scripting for $irc_client would be nice.

[16:15] <diakopter> how do I interpolate a scalar into a double-quoted string where I have alpha chars I want to appear exactly after the contents of the variable?

[16:15] <benabik> irssi6?

[16:15] <tadzik> diakopter: {} maybe?

[16:16] <tadzik> r: my $foo = "zzz"; say "{$foo}bar"

[16:16] <diakopter> {} what

[16:16] <p6eval> rakudo ee86a5: OUTPUT«zzzbar␤»

[16:16] <eviltwin_b> {$foo}bar, I thought

[16:16] <eviltwin_b> that

[16:16] <diakopter> ok thanks

[16:16] <tadzik> yw

[16:16] *** lue joined
[16:18] <masak> flussence: sorry, I'm being over-sensitive. but seeing that function really made me depressed. :)

[16:19] <masak> seldon: a Perl 6 IRC client would be nice. :)

[16:21] <flussence> .oO( and if we're going to write one from scratch, make it 256-colour compatible! )

[16:22] <seldon> I'm sure many php "programmers" will find the function extremely useful.

[16:23] <seldon> As for the IRC client, 256 colours is thinking too small. 256-bit colours!

[16:25] <seldon> To be prepared for the next few billion years of evolution and all.

[16:34] *** PacoAir left
[16:34] *** crab2313 left
[16:37] *** PacoAir joined
[16:39] <dalek> roast: 1a144b7 | (Pawel Pabian)++ | S14-traits/routines.t:

[16:39] <dalek> roast: declaration of a sub with an unknown trait mentions trait_mod:<is> in dispatch error, RT #74092

[16:39] <dalek> roast: review: https://github.com/perl6/roast/commit/1a144b773b

[16:39] *** MayDaniel joined
[16:46] <bbkr> where should test for "class A { my $b; method c { $A::b = 5; say $A::b } }" be placed? $b is not considered a class attribute, is it?

[16:47] <bbkr> maybe t/spec/S02-packages/package-lookup.t ?

[16:48] <bbkr> hm, I think the best place will be t/spec/S10-packages/scope.t

[16:49] <masak> +1

[16:50] <masak> it's the closest thing to class attributes we have. but they're not really attributes.

[16:53] <bbkr> I also found t/spec/S12-class/lexical.t but it is described as test for classes inside classes

[16:54] <bbkr> and it duplicates some tests from t/spec/S12-class/basic.t :)

[17:05] <dalek> roast: 0577148 | (Pawel Pabian)++ | S02-packages/package-lookup.t:

[17:05] <dalek> roast: can access a variable in a class package through its long name, RT #74412

[17:05] <dalek> roast: review: https://github.com/perl6/roast/commit/0577148ded

[17:09] *** zhutingting left
[17:10] *** cogno joined
[17:12] <dalek> roast: 84fa0c2 | (Pawel Pabian)++ | S12-class/attributes.t:

[17:12] <dalek> roast: class attribute cannot be initialized using .=, RT #74850

[17:12] <dalek> roast: review: https://github.com/perl6/roast/commit/84fa0c2df0

[17:19] *** Chillance joined
[17:20] *** pupoque joined
[17:22] *** Coleoid left
[17:25] *** pupoque left
[17:38] *** godfrey999 left
[17:39] *** Coleoid joined
[17:40] *** zby_home_ joined
[17:41] *** PacoAir left
[17:43] *** birdwindupbird joined
[17:44] <moritz> \o

[17:46] *** crab2313 joined
[17:51] <dalek> roast: c5c61f6 | (Pawel Pabian)++ | S02-packages/package-lookup.t:

[17:51] <dalek> roast: variable declaration and access through long names, RT #75632

[17:51] <dalek> roast: review: https://github.com/perl6/roast/commit/c5c61f6174

[17:54] *** cogno left
[18:01] *** snearch joined
[18:09] *** cogno joined
[18:14] <dalek> roast: fd2b5a2 | (Pawel Pabian)++ | S12-class/inheritance.t:

[18:14] <dalek> roast: our-scoped class can inherit from my-scoped class, RT #75376

[18:14] <dalek> roast: review: https://github.com/perl6/roast/commit/fd2b5a2bbe

[18:21] *** cogno left
[18:21] *** birdwindupbird left
[18:45] *** fridim_ left
[18:49] <moritz> flussence: http://doc.perl6.org/type/Hash has <p>...</p> tags inside <li>...</li> tags. Any idea how to get rid of those?

[18:49] *** nodmonkey joined
[18:50] <moritz> oh, that's even valid html5

[18:50] <moritz> that's... surprising

[18:51] <GlitchMr> But, <p> in <li> is just fine

[18:52] <GlitchMr> There are uses for this

[18:53] <moritz> anyway, http://doc.perl6.org/ now 

[18:53] <moritz> renders much nicer

[18:54] <GlitchMr> http://paste.uk.to/cb666776

[18:54] <moritz> previously, each list item had its own list

[18:54] <GlitchMr> :)

[18:55] <GlitchMr> But yeah, generating separate list for each element was somewhat silly

[18:56] <moritz> well, it's non-trivial to do otherwise with the current Pod DOM

[18:56] <GlitchMr> Hmmm... yeah...

[18:57] <GlitchMr> Something reminding Markdown would be good documentation format, but well, I think we want to keep POD :)

[18:57] *** Coleoid left
[18:58] <GlitchMr> http://doc.perl6.org/routine/prefix%3A%3Cso%3E

[18:59] <GlitchMr> I don't think that this should document "prefix:&lt;so&gt;"

[19:01] <masak> I'd like to see a nice format-agnostic solution to "how to turn a DOM with only <li> nodes into a DOM with <ul> nodes wrapping all contiguous <li> nodes".

[19:01] <masak> GlitchMr: good catch.

[19:03] <GlitchMr> Does POD look like Perl

[19:03] <GlitchMr> Regexes do, but...

[19:04] <masak> I don't understand the question.

[19:05] <masak> could you be a bit more concrete?

[19:05] <GlitchMr> Well, POD is distinct from Perl

[19:05] <GlitchMr> It's barely sticked to it

[19:05] <GlitchMr> Perl 6 rules have syntax which reminds normal Perl 6 syntax

[19:06] <GlitchMr> But I guess it could be difficult to invent syntax for POD which would be similar to Perl 6 syntax

[19:06] <masak> I don't agree.

[19:06] <masak> both regexes and Pod have distinct syntaxes than the mainline Perl 6 syntax.

[19:07] <masak> regexes merely look a bit more similar, but they're really very distinct.

[19:07] <masak> you can inline variables in regexes. you can inline (constant) variables in Pod.

[19:08] <masak> so there is value exchange going back and forth between the mainline Perl 6 and its sublanguages.

[19:08] <masak> changing buses &

[19:08] *** simplx joined
[19:11] <GlitchMr> perl6: +{2}

[19:11] <p6eval> rakudo ee86a5: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \$v, Mu *%_)␤␤  in method Numeric at src/gen/CORE.setting:686␤  in sub prefix:<+> at src/gen/CORE.setting:2321␤  in block <anon> at /tmp/g75h9QyaEN:1␤␤»

[19:11] <p6eval> ..niecza v19-13-g442e075: OUTPUT«Unhandled exception: Cannot use value like Block as a number␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting line 295 (Any.Numeric @ 6) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /tmp/jjHUuN1C2K line 1 (mainline @ 2) …

[19:11] <GlitchMr> perl6: print~{2}

[19:11] <p6eval> rakudo ee86a5:  ( no output )

[19:11] <p6eval> ..niecza v19-13-g442e075: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Unsupported use of bare 'print'; in Perl 6 please use .print if you meant $_, or use an explicit invocant or argument at /tmp/Jjt8VtNhAt line 1:␤------> [32mprint[33m⏏[31m~{2}[0m␤␤Unhandled exception: Check failed␤␤  at …

[19:11] <GlitchMr> perl6: print ~{2}

[19:11] <p6eval> rakudo ee86a5: OUTPUT«_block1011»

[19:11] <p6eval> ..niecza v19-13-g442e075: OUTPUT«Block()<instance>»

[19:12] *** spider-mario joined
[19:14] *** GlitchMr left
[19:15] *** Coleoid joined
[19:15] *** fgomez left
[19:30] *** lolka joined
[19:30] <lolka> helooo

[19:30] <jnthn> hi, lolka ;)

[19:30] <jnthn> er, :) even

[19:31] <lolka> jnthn: am more know here than in my contry :P

[19:31] <lolka> country* damn english :s

[19:32] <jnthn> Well, the population here is a little smaller... ;)

[19:32] *** birdwindupbird joined
[19:32] <lolka> well i havent been to russia for few around a year too :(

[19:33] <jnthn> Me either :(

[19:33] <jnthn> Or Ukraine. :(

[19:33] * jnthn missed the Perl workshop in that part of the world this year :(

[19:33] <lolka> oooooooooooh! i remembered that! 

[19:34] <lolka> at that time my mom died :s i didnt touch a computer for 6 months then

[19:34] <jnthn> Ah, that's why you didn't make it... :( Sorry to hear that. 

[19:35] *** cognominal__ left
[19:35] *** cognominal__ joined
[19:36] <lolka> jnthn: yeah .. my live stopped and i ran out of money and stopped my higher education plans then later god helped a little ^_^

[19:37] <jnthn> :)

[19:37] <jnthn> Hope things are rather better now.

[19:37] <lolka> i have 9 souls as mom once said :P a survivor :)

[19:38] <jnthn> Just like a cat. :)

[19:38] <lolka> i look a little like cat :P

[19:38] <jnthn> Awww :D

[19:39] * jnthn would get a cat if he didn't travel so often.

[19:40] <lolka> i had a huge cat ! he was a master in eating and falling asleep hahaha :D

[19:40] *** Coleoid left
[19:41] <lolka> jnthn: i just got hired as a UX junior :) i do not even have any university degree so am lucky i got it :s

[19:41] <lolka> jnthn: but the problem is that am not sure what is ux except that it stands for user experience :s

[19:42] <jnthn> Time to start learning! :)

[19:42] <moritz> that's why you're junior, not senior :-)

[19:42] <jnthn> Hmmm...working in UX probably means spending the day trying to find ways to make other people's lives easier. :)

[19:42] <moritz> lolka: congratulations on the new job

[19:42] <lolka> moritz: thanxxxxx ^_^

[19:43] *** plobsing joined
[19:43] <lolka> jnthn: yeah i think i will love it :D

[19:43] <jnthn> lolka: Hope it works out well for you. :)

[19:43] <lolka> jnthn: well i will have to take it seriously or i will have no food :s

[19:44] <lolka> lolka: i offered to work as a UI developer but there are tens of them :s

[19:44] <lolka> all with university degrees

[19:44] <lolka> while i have no degree :(

[19:44] <jnthn> :(

[19:45] <moritz> r: say 'X'.ord - 'I'.ord

[19:45] <p6eval> rakudo ee86a5: OUTPUT«15␤»

[19:45] <moritz> only 15 chars apart :-)

[19:45] <jnthn> lolka: Do you have chance to continue studying at some point, or is that hard to arrange?

[19:46] <jnthn> moritz: That's more than half an alphabet away! :P

[19:47] <lolka> jnthn: i have a secret plan to do that :) maybe next year.. will go back home and continue :)

[19:47] <moritz> jnthn: well, considering it's two chars...

[19:47] <moritz> nr: $_ = 'UI'; ++$_ for ^15; .say

[19:48] <p6eval> niecza v19-13-g442e075: OUTPUT«UI␤»

[19:48] <p6eval> ..rakudo ee86a5: OUTPUT«Cannot assign to a non-container␤  in sub prefix:<++> at src/gen/CORE.setting:2771␤  in block <anon> at /tmp/UVc9OKaRme:1␤␤»

[19:48] <moritz> erm, yes

[19:48] <moritz> nr: my $a = 'UI'; ++$a for ^15; $a.say

[19:48] <p6eval> rakudo ee86a5, niecza v19-13-g442e075: OUTPUT«UX␤»

[19:50] <lolka> good night all .. its time to go zzzz....

[19:50] <jnthn> lolka: Sweet dreams o/

[19:50] *** lolka left
[19:53] *** UncleFester6 joined
[19:53] <UncleFester6> r: my %m; our %o; %m{2} = 4; %o{3} = 6; say %m; say %o; say %m.perl; say %o.perl

[19:53] <p6eval> rakudo ee86a5: OUTPUT«("2" => 4).hash␤("3" => 6).hash␤("2" => 4).hash␤{"3" => 6}␤»

[19:54] <bbkr> STD allows "m:nth(Mu)//" while in latest Rakudo it is runtime error "Nominal type check failed for parameter '$nth'; expected Any but got Mu instead". I'm confused now what is desired behavior here. To accept Mu and fail match or to throw runtime error as given?

[19:54] <jnthn> Well, STD only checks syntax.

[19:55] <bbkr> Or to accept Mu and match (just like "m:nth(Any)")

[19:55] <jnthn> Rakudo run with -c will tell you that the syntax is fine, I suspect :)

[19:55] <bbkr> yes, syntax is fine

[19:56] <jnthn> I guess it's constrained to Any because most parameters are (and thus they auto-thread if you stick a junction there).

[19:57] <bbkr> so runtime error is desired behavior here

[19:59] <jnthn> It doesn't surprise me. Is there a ticket about this?

[19:59] <jnthn> (I'm curious why you're asking.)

[19:59] <bbkr> consistent for example with other Mu uses like "my @a; @a[Mu]" which is accepted by STD but throws runtime error in rakudo

[20:00] <jnthn> Well, that's still a syntax/semantics distinction.

[20:00] <UncleFester6> Any reason %o.perl comes out different from the others?  I am tempted to add it as a note to rt 102876 together with a comment that our %h = ('A' => 2) is not fixed yet.

[20:00] <bbkr> it's ticket https://rt.perl.org/rt3/Ticket/Display.html?id=77408

[20:00] <jnthn> Rakudo has to constrain that thing to Any so junctions work.

[20:01] <jnthn> UncleFester6: Hmmm...I can kinda imagine what's going on there.

[20:01] <jnthn> UncleFester6: I agree it shouldn't be different.

[20:02] <UncleFester6> Ok - thx.  I will update the ticket ...

[20:02] <jnthn> bbkr: Infinite recursion was wrong for sure.

[20:02] <jnthn> bbkr: Not accepting Mu is fine.

[20:04] <bbkr> jnthn: I was asking because Coke described successful match as desired behavior earlier. I'll update ticket with info about not accepting Mu and close it after tests.

[20:04] <bbkr> jnthn: thanks

[20:05] *** vmspb joined
[20:11] *** fgomez joined
[20:16] *** tokuhiro_ joined
[20:18] <dalek> roast: 9973e0d | (Pawel Pabian)++ | S05-modifier/counted-match.t:

[20:18] <dalek> roast: :nth does not accept Mu param, RT #77408

[20:18] <dalek> roast: review: https://github.com/perl6/roast/commit/9973e0d457

[20:19] *** snearch left
[20:24] *** UncleFester6 left
[20:26] *** jaldhar_ joined
[20:33] <dalek> roast: 6dff118 | (Pawel Pabian)++ | S05-metasyntax/unknown.t:

[20:33] <dalek> roast: unescaped "-" is not valid regular expression metasyntax, RT #77110

[20:33] <dalek> roast: review: https://github.com/perl6/roast/commit/6dff118dd7

[20:35] *** alvis left
[20:39] *** alvis joined
[20:40] *** kaare_ left
[20:41] *** dukeleto joined
[20:42] *** hoelzro|away is now known as hoelzro

[20:43] <hoelzro> is there a known version of NativeCall that works on Rakudo Star?

[20:44] <jnthn> hoelzro: Rakudo Star includes NativeCall.

[20:44] <hoelzro> I'm trying to install DBIish, and it's pulling down NativeCall as a dependency

[20:44] <jnthn> Ah

[20:45] <jnthn> I guess 'cus panda doesn't know about the installed NativeCall...

[20:46] <jnthn> hoelzro: DBIish was included with latest Rakudo Star also, btw.

[20:46] <hoelzro> oh, that's good!

[20:46] <dalek> roast: a1bcc18 | (Pawel Pabian)++ | S02-types/hash.t:

[20:46] <dalek> roast: array-indexing a hash with a negative index is Failure, RT 77598

[20:46] <dalek> roast: review: https://github.com/perl6/roast/commit/a1bcc1821d

[20:55] *** vmspb left
[21:00] *** hoelzro is now known as hoelzro|away

[21:02] *** birdwindupbird left
[21:05] *** fridim_ joined
[21:05] <dalek> roast: f7a2e33 | (Pawel Pabian)++ | S02-types/set.t:

[21:05] <dalek> roast: variable of Set type inside set does not duplicate elements, RT #107022

[21:05] <dalek> roast: review: https://github.com/perl6/roast/commit/f7a2e336c5

[21:06] <bbkr> we're down to 600 tickets in RT!

[21:09] *** _jaldhar_ joined
[21:10] <jnthn> bbkr++

[21:10] *** jaldhar_ left
[21:12] <lue> How would you place the :i modifier on a regex in $item ~~ /regex/ ? I'm guessing $item ~~ :i/regex/

[21:12] <jnthn> on l'inside

[21:13] <jnthn>  /:i $regex/

[21:13] <jnthn> er

[21:13] <jnthn>  /:i regex/

[21:13] <jnthn> :)

[21:13] <jnthn> In this case you could also do $item ~~ m:i/regex/

[21:14] <lue> ah. S05 (after searching through it) mentions m/:i <stuff> / but not anything without the m in front.

[21:26] <tadzik> r: https://gist.github.com/3118686

[21:26] <p6eval> rakudo ee86a5: OUTPUT«2.5 1␤»

[21:26] <tadzik> I like it more than I should

[21:33] <jnthn> :P

[21:36] <cognominal__> tadzik, next you will propose regexen to recognize operators so as to be able to have a long enough divider line…

[21:37] <tadzik> :)

[21:37] <jnthn> That should be possible at some point...

[21:43] <cognominal__> Where do we stop? eventually perl6 slangs will accept DOM trees as input. btw, I am not there yet to generate DOM trees from nqp parse trees but making progress thx to jnthn.

[21:44] <cognominal__> I wish I had more thorougly read pmichaud slides when starting that endeavor.

[21:51] *** MayDaniel left
[21:54] * lue wonders if a $(*||?)COL variable would help with variable-length fraction line

[22:01] *** cognominal__ left
[22:01] *** PacoAir joined
[22:02] *** cognominal joined
[22:03] *** lichtkind joined
[22:07] *** nodmonkey left
[22:10] *** wamiks left
[22:11] *** nodmonkey joined
[22:14] *** crab2313 left
[22:14] *** tokuhiro_ left
[22:15] *** tokuhiro_ joined
[22:18] *** fibo joined
[22:19] *** Entonian joined
[22:19] *** seldon left
[22:19] *** tokuhiro_ left
[22:20] *** Entonian left
[22:23] *** zby_home_ left
[22:29] *** tokuhiro_ joined
[22:29] *** PacoAir left
[22:31] *** aindilis joined
[22:38] *** nodmonkey left
[22:39] *** PacoAir joined
[22:39] *** PacoAir left
[22:39] *** PacoAir joined
[22:41] * [Coke] sees something in backscroll about someone looking for a job. Coke has an opening in Albany NY, but suspects this it out of area.

[22:43] <colomon> [Coke]!  \o/

[22:43] * [Coke] wonders if there is a jobs.perl.org for jobs that have nothing to do with perl, but would still be of interest to people who like perl. ;()

[22:43] <[Coke]> er, ;)

[22:43] <[Coke]> colomon: ys?

[22:45] <colomon> just celebrating your presence.

[22:49] <thou> phenny: tell masak that introspection on params doesn't work as he expects when methods are declared via the 'handles <foo bar>' syntax: https://friendpaste.com/2kF2g0nQpVE0GzrKaEE7HA   in particular, the args show up as a capture. Also, current nom doesn't call it positional, while rakudo-star 2012.06 does; but either way, the crypt.pl code is bound to break on this.

[22:49] <phenny> thou: I'll pass that on when masak is around.

[22:51] <thou> i'm not sure how to inspect the capture itself in that case to get the usable params

[22:54] <Juerd> [Coke]: Earlier today I killed one of your monos

[22:55] <Juerd> [Coke]: It was eating lots of memory.

[22:55] <[Coke]> ugh.

[22:55] <[Coke]> colomon: so if you fail more tests, that's why.

[22:56] <[Coke]> Juerd: danke.

[22:56] *** PZt left
[22:58] <colomon> running out of memory?

[22:58] <colomon> or you haven't actually run the spectest in a while?

[23:01] *** fridim_ left
[23:15] <thou> phenny: tell masak also looks like the connection from hill south to chamber is missing in current bin/crypt .

[23:15] <phenny> thou: I'll pass that on when masak is around.

[23:17] <[Coke]> colomon: run it every day.

[23:18] *** cognominal left
[23:20] *** cognominal joined
[23:21] *** tokuhiro_ left
[23:22] *** tokuhiro_ joined
[23:26] *** tokuhiro_ left
[23:35] *** thelazydeveloper left
[23:37] * masak is $home again

[23:37] <phenny> masak: 22:49Z <thou> tell masak that introspection on params doesn't work as he expects when methods are declared via the 'handles <foo bar>' syntax: https://friendpaste.com/2kF2g0nQpVE0GzrKaEE7HA   in particular, the args show up as a capture. Also, current nom doesn't call it positional, while rakudo-star 2012.06 does; but either way, the crypt.pl code is bound to break on this.

[23:37] <phenny> masak: 23:15Z <thou> tell masak also looks like the connection from hill south to chamber is missing in current bin/crypt .

[23:37] <thou> erm, ignore that last one

[23:37] <thou> s/last/second/

[23:37] <masak> thou: hm, I thought I fix'd the handles one. maybe I didn't.

[23:38] <thou> masak: it *happens* to work w/ rakudo star

[23:38] <masak> I almost submitted a bug report on it, but jnthn said it was s'posed to be that way.

[23:38] <thou> but code is still depending on the number of params

[23:38] <masak> yeah, the second one is meant to be a connection established by opening the hidden door.

[23:38] <thou> and you won't get it, you'll get a single |$c capture

[23:39] <thou> oh, and the july-9-things-and-descriptions blog post has wrong URL for the last commit. it should be https://github.com/masak/crypt/commit/fcd3e8d0927d447907867137777cc0a6072ab464

[23:39] *** fibo left
[23:40] <masak> will fix tomorrow.

[23:40] <masak> also, today's post is not forthcoming today.

[23:40] *** cognominal left
[23:40] <masak> I'm going to bed, and writing it up tomorrow morning.

[23:41] *** cognominal joined
[23:41] <masak> I missed my blog writing slot, because the last bus didn't have electric outlets.

[23:41] <thou> good night!

[23:41] *** cognominal left
[23:41] <masak> but I did all the work, and pushed it to github, so it's there if anyone's curious.

[23:41] <masak> thou++ # finding stuff

[23:42] <masak> 'night, #perl6

[23:45] *** PZt joined
[23:53] * lue sees he needs to upgrade rakudo if method TOP($/) { } in an Actions will work properly on his machine :(

