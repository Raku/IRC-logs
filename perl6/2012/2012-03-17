[00:03] *** ksi left
[00:04] *** broquaint left
[00:04] *** sporous left
[00:04] *** bacek_at_work left
[00:05] *** sporous joined
[00:05] <tadzik> what, TPF not accepted?

[00:05] <tadzik> ridiculous

[00:06] *** broquaint joined
[00:06] *** bacek_at_work joined
[00:07] <masak> something like that.

[00:08] <masak> 'night, butterflies.

[00:08] <tadzik> 'night

[00:35] *** localhost left
[00:36] *** localhost joined
[01:07] *** tyatpi joined
[01:23] *** jaldhar joined
[01:45] *** whiteknight left
[01:54] *** noteventime left
[01:56] <rafl> pyrimidine: i did

[01:57] <rafl> tadzik: pitch your ideas anyway - we might be able to make it work still

[02:22] *** FACEFOX left
[02:22] *** FACEFOX joined
[02:34] *** tokuhiro_ joined
[03:16] *** nnunley joined
[03:32] *** skids joined
[03:46] *** alester joined
[04:00] *** orafu left
[04:02] *** orafu joined
[04:06] *** nnunley left
[04:08] *** tyatpi left
[04:08] *** PacoAir left
[04:18] *** leprevost joined
[04:58] *** birdwindupbird joined
[05:30] *** xinming left
[05:50] *** kaare_ joined
[06:00] *** tokuhiro_ left
[06:06] *** birdwindupbird left
[06:11] *** tokuhiro_ joined
[06:12] *** sisar joined
[06:17] *** kaare_ left
[06:46] *** alester left
[06:48] *** alester joined
[06:48] *** alester left
[06:48] <moritz> good *, #perl6

[07:05] <sorear> good *, moritz

[07:12] *** Teratogen joined
[07:25] <sorear> o/ Teratogen 

[07:26] <Teratogen> greetings and felicitations

[08:09] *** plutoid joined
[08:12] *** bacek left
[08:15] *** cbk1090 left
[08:25] *** bacek joined
[08:35] *** pjcj left
[08:36] *** pjcj joined
[08:57] *** simcop2387 left
[08:59] *** simcop2387 joined
[09:21] *** simcop2387 left
[09:22] *** simcop2387 joined
[09:29] *** fglock joined
[09:33] *** fglock left
[09:34] *** pernatiy joined
[09:57] *** birdwindupbird joined
[10:03] *** bacek left
[10:07] *** plutoid left
[10:11] <tadzik> it'd seem that the python foundation did not make it into gsoc either

[10:14] *** mj41 joined
[10:18] <tadzik> and neither did Battle for Wesnoth! /o\

[10:18] <tadzik> the world has come to an end indeed

[10:20] *** bacek joined
[10:22] <moritz> whiteknight mentioned on #parrot that we might do some rakudo-related projects through PaFo

[10:25] <felher> BfW did not make it into gsoc? Thats really sad. A new Campaign again or some enhancements to the new planing mode would be really nice (and fixing a strange new multiplayer-bug)

[10:26] <tadzik> fwiw, Python did not make it either

[10:29] *** xenu joined
[10:40] <felher> Is there a list of projects that did? I wonder if vim did make it :)

[10:47] *** sisar left
[10:49] <felher> A found it. Sadly, vim isn't in their either.

[10:49] <felher> s/their/there

[11:18] *** whiteknight joined
[11:24] *** plutoid joined
[11:24] *** mj41 left
[11:42] *** mj41 joined
[11:56] *** fsergot joined
[11:56] <fsergot> Hi #perl6! o/

[12:06] *** MayDaniel joined
[12:10] <masak> good postnoon, #perl6

[12:11] <masak> guess Google felt they got to big last year, and are slimming down.

[12:11] <moritz> that's fine as long as they don't slim *us* down :-9

[12:12] <moritz> ah well, we shouldn't complain about the absence of benevolence, or however it's spelled

[12:17] <masak> right.

[12:18] <masak> reminds me of all the tweets around Christmas saying mean things about parents for not getting them that car or that iPad.

[12:50] *** sisar joined
[12:52] <dalek> Heuristic branch merge: pushed 202 commits to perl6.org/archive_dir by ranguard

[12:53] <ranguard> moritz: ^^ that's what I'm going to go live with unless you (or anyone else) has objections

[12:54] <ranguard> there's a script in archive (convert_pod2html.pl) that does what it's name implies as mowyw doesn't support .pod

[12:55] <ranguard> mowyw has warnings (about utf8) but processes all files (except rfc/230.pod and exe/E07.pod, but I made the pod2html script skip them so they just won't exist)

[12:57] *** leprevost left
[13:00] *** mucker joined
[13:01] <moritz> ok

[13:03] *** Chillance joined
[13:05] <ranguard> moritz: ok to go live, or ok you'll review :) ?

[13:08] <moritz> ranguard: ok go to live

[13:09] <moritz> ranguard: do I need to run convert_pod2html.pl on the server? or is the result from that already checked in?

[13:09] <ranguard> results already checked in

[13:09] <moritz> ok

[13:10] <dalek> perl6.org: 8ee7a06 | (Leo Lapworth)++ | / (1326 files):

[13:10] <dalek> perl6.org: Move into archive folder

[13:10] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/8ee7a065a4

[13:10] <dalek> perl6.org: c723573 | (Leo Lapworth)++ | archive/ (663 files):

[13:10] <dalek> perl6.org: Merge branch 'master' of ../pw into archive_dir

[13:10] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/c723573c4d

[13:10] <dalek> perl6.org: 88b918f | (Leo Lapworth)++ | / (1326 files):

[13:10] <dalek> perl6.org: Move the archive into the source directory

[13:10] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/88b918f350

[13:10] <dalek> perl6.org: 0546cc3 | (Leo Lapworth)++ | source/archive/ (6 files):

[13:10] <dalek> perl6.org: Remove TT tags and processing

[13:10] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/0546cc30ce

[13:10] <dalek> perl6.org: 220974a | (Leo Lapworth)++ | source/archive/convert_pod2html.pl:

[13:10] *** leprevost joined
[13:10] <dalek> perl6.org: Add convert_pod2html.pl script, as mowyw does not handle .pod files

[13:10] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/220974a6b2

[13:10] <dalek> perl6.org: 8f4a115 | (Leo Lapworth)++ | source/archive/rfc/meta/rfc- (2 files):

[13:10] <dalek> perl6.org: Add .html files (generated from their .pod files)

[13:10] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/8f4a115c36

[13:10] <dalek> perl6.org: ea91703 | (Leo Lapworth)++ | app.psgi:

[13:10] <dalek> perl6.org: Add an app.psgi file to make developing easier

[13:10] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/ea9170348f

[13:10] <dalek> perl6.org: 5bc5815 | (Leo Lapworth)++ | source/archive/ (593 files):

[13:10] <dalek> perl6.org: Add a message at the top of most files that they are achived

[13:10] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/5bc581559f

[13:19] *** tokuhiro_ left
[13:19] *** tokuhiro_ joined
[13:20] *** araujo left
[13:21] *** whiteknight left
[13:22] <masak> ranguard++

[13:24] *** tokuhiro_ left
[13:25] <felher> ranguard++

[13:25] *** PacoAir joined
[13:27] *** birdwindupbird left
[13:33] * masak finally gets around to reading the new HPMoR chapters

[13:33] <masak> ooh, more battles! marvellous.

[13:34] <timotimo> hpmor is everywhere o_O

[13:37] *** shinobicl___ joined
[13:40] <masak> finally, rationality is fashionable ;)

[13:43] *** pochi joined
[13:46] <ranguard> moritz: is the mowyw still running? - some pages are live http://www.perl6.org/archive/architecture.html, but others arn't http://www.perl6.org/archive/doc/

[13:57] *** mj41 left
[14:04] *** Juerd left
[14:05] *** Juerd joined
[14:10] *** mj41 joined
[14:12] *** cbk1090 joined
[14:14] <moritz> ranguard: it's running, yes. I'll investigate

[14:15] <ranguard> thanks

[14:17] <moritz> http://perl6.org/archive/architecture is now up

[14:17] <moritz> http://perl6.org/build.log is the full log

[14:17] <moritz> ranguard: is archive/ all latin-1?

[14:18] * ranguard shrugs - but probably

[14:18] <ranguard> moritz++ # making it live

[14:19] <moritz> ranguard++ # doing all the work

[14:19] <ranguard> :)

[14:20] <ranguard> I'll go add the redirects from dev.perl.org - this is all yours now - enjoy :)

[14:21] <moritz> \o/

[14:21] <moritz> I'll have to teach mowyw to apply character encodings on a per-directory base :/

[14:22] <ranguard> or just not worry about it until someone complains - this is the archive after all :)

[14:22] *** plutoid left
[14:22] <masak> or iconv the directories that aren't utf8.

[14:23] <ranguard> oh, guess the build log is abit messy

[14:24] <moritz> masak: that sounds surprisingly simple and sane :-)

[14:25] *** fglock joined
[14:28] *** MayDaniel left
[14:28] <dalek> perl6.org: 618d40e | moritz++ | source/archive/list-summaries/200 (68 files):

[14:28] <dalek> perl6.org: [archive/list-summaries] convert from Latin-1 to UTF-8

[14:28] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/618d40e467

[14:29] <masak> moritz: nowadays, I almost instinctively consider non-utf8-ness to be a deplorable oversight of some sort.

[14:29] <masak> much thanks to the indoctrination of this fine channel.

[14:30] <moritz> i had the "it's an archive, we shouldn't change more than necessary" reflex, but discarded it as WRONG :-)

[14:31] <masak> the archive was unfortunately preserved for posterity in the wrong encoding when it first reached our caring hands. :)

[14:32] <masak> see? it's simple.

[14:35] <dalek> perl6.org: a25cb6b | moritz++ | source/archive/ (10 files):

[14:35] <dalek> perl6.org: recode more stuff to UTF-8

[14:35] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/a25cb6b8b3

[14:36] <ranguard> masak: https://gist.github.com/2060044 <- fles that weren't in the repo (just found them in the rewrite rules) - not sure what we should do with those?

[14:37] <ranguard> moritz: ^^ even

[14:37] <moritz> ranguard: would it be much inconvenience to just leave them where they are?

[14:38] <moritz> ranguard: if not, that might be the nicest solution... they don't have dev.perl.org/perl6/ URLs anyway

[14:41] <ranguard> moritz: don't think so, I'll mention it to Ask, but there's now no links to them as they were accessed via reditects (https://github.com/perlorg/perlweb/blob/master/docs/dev/.htredirects)

[14:43] <moritz> ah well, then just delete them

[14:44] <moritz> I don't think preserving them is worth the effort

[14:49] <ranguard> hmm, quick win, I could stick links to them on /archive/index.html some of the Presentations might be worth that?

[14:51] <moritz> +1

[14:58] <dalek> perl6.org: 2a5ea1e | (Leo Lapworth)++ | source/archive/index.html:

[14:58] <dalek> perl6.org: Link to old PPT/PDF etc talks from archive page

[14:58] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/2a5ea1e96a

[15:02] *** birdwindupbird joined
[15:04] *** havenn joined
[15:09] <ranguard> redirects on dev.perl.org updated in repo, I've emailed Ask and Robrt to put live

[15:10] *** rindolf joined
[15:10] <rindolf> Hi all.

[15:10] * ranguard goes off to hack on puppet for metacpan - have fun with your new archive *wave*

[15:10] <rindolf> So I tried niecza. It claims to have a focus on optimisation, but doing -e 'say 2+2;' took about two seconds.

[15:11] *** plobsing_ left
[15:12] <masak> rindolf: Niecza runs pretty fast for a Perl 6 impl, but the startup time isn't competitive.

[15:13] <masak> rindolf: especially not since the bs branch landed in Rakudo.

[15:13] <rindolf> masak: ah.

[15:29] *** geekosaur left
[15:31] *** geekosaur joined
[15:33] *** fsergot left
[15:42] *** birdwindupbird left
[15:45] *** Psyche^ joined
[15:48] *** preflex left
[15:50] *** Patterner left
[15:50] *** Psyche^ is now known as Patterner

[15:50] *** preflex joined
[16:02] *** havenn left
[16:02] *** bonsaikitten left
[16:02] *** bonsaikitten joined
[16:07] *** havenn joined
[16:09] <sorear> good * #perl6

[16:09] <sorear> o/ rindolf 

[16:09] <rindolf> sorear: hi.

[16:10] <colomon> o/

[16:14] <masak> sorear! \o/

[16:16] <sorear> masak! \o/

[16:27] *** am0c left
[16:31] *** MayDaniel joined
[16:37] <masak> the weekends are a blessing. I have such wonderful devious new uses that I want to put the new, ever-improving Niecza and Rakudo implementations to, but so little time. but weekends, at least some of them, are just brimming with time. whee! \o/

[16:40] <fglock> masak :)

[16:53] * colomon is trying to do advanced prep for Ambercon in between St. Patrick's Day gigs, and also has a ton of $work that needs doing.

[16:58] *** havenn left
[17:00] *** isBEKaml joined
[17:02] *** VAAAQH2 joined
[17:03] *** isBEKaml left
[17:12] *** havenn joined
[17:25] *** kaare_ joined
[17:26] *** catalin joined
[17:29] *** catalin left
[17:38] *** mucker left
[17:38] *** silug joined
[17:45] *** MayDaniel left
[17:52] *** birdwindupbird joined
[18:05] *** havenn left
[18:17] *** s1n left
[18:19] *** tokuhiro_ joined
[18:22] <flussence> perl6: https://gist.github.com/2063802

[18:22] <p6eval> rakudo 16bf0f: OUTPUT«exception: bar␤bar␤  in block <anon> at /tmp/AqKMXTXt0r:7␤  in block <anon> at /tmp/AqKMXTXt0r:4␤␤»

[18:22] <p6eval> ..niecza v15-4-g1f35f89: OUTPUT«exception: bar␤  at /home/p6eval/niecza/lib/CORE.setting line 1222 (warn @ 3) ␤  at /tmp/m8ACYslQz1 line 7 (ANON @ 5) ␤  at <unknown> line 0 (KERNEL run_CATCH @ 3) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1362…

[18:22] <p6eval> ..pugs b927740: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20111008/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HAND…

[18:22] <flussence> that's from http://blogs.perl.org/users/philip_durbin/2012/03/rjbs-advises-to-avoid-givenwhen.html - is that output a good or a bad thing?

[18:23] <geekosaur> that seems correct for the code in the gist

[18:26] *** Juerd left
[18:26] *** Juerd joined
[18:30] *** s1n joined
[18:35] *** [Coke] left
[18:35] *** [Coke] joined
[18:37] <geekosaur> btw I'm not sure p6 gives that answer for the same reason p5 does; but it occurs to me that the topic in a CATCH block *should* probably be the exception that was caught, *and* at the same time that the global $_ should be available

[18:37] <geekosaur> so the explanation given may be wrong *and* the person complaining has failed to think things through properly

[18:40] <flussence> perl6: my $x = 'foo'; given $x { when /f/ { try { die 'bar'; CATCH { warn $*OUTER::_ }; } } }

[18:40] <p6eval> rakudo 16bf0f: OUTPUT«bar␤bar␤  in block <anon> at /tmp/hsL_Bb7KLq:1␤  in block <anon> at /tmp/hsL_Bb7KLq:1␤␤»

[18:40] <p6eval> ..niecza v15-4-g1f35f89: OUTPUT«Use of uninitialized value in string context␤  at /home/p6eval/niecza/lib/CORE.setting line 1222 (warn @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 230 (Mu.Str @ 10) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting…

[18:40] <p6eval> ..pugs b927740: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20111008/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HAND…

[18:40] <au> "exception: bar" is probably correct. rjbs's example gives "exception: foo" in Perl5 under "perl -MTry::Tiny -M5.10.0" which is surprising.

[18:41] <au> the <<This will warn "exception: bar" because...>> is probably just thinko for <<This will warn "exception: foo" because...>>.

[18:41] <flussence> I can understand that, but now I'm confused why rakudo gives "bar" with $*OUTER::_ above...

[18:43] <au> *nod*

[18:43] <geekosaur> ah, ok, now that makes sense

[18:51] *** tokuhiro_ left
[18:54] <fglock> au: o/

[18:59] *** havenn joined
[19:03] <au> \o

[19:15] *** mj41 left
[19:16] *** att joined
[19:16] *** att is now known as att_

[19:24] *** PacoAir left
[19:24] *** PacoAir joined
[19:26] *** raiph joined
[19:27] <sorear> o/ au

[19:29] <sorear> flussence: rjbs is warning to avoid given/when in Perl 5 because of a combination of design mistakes in given/when (that have since been fixed, but p5 can't take the fixes for compat reasons), a poor semantic match between p5 and given/when, and the $_ inconsistency

[19:29] <sorear> none of which apply to us

[19:33] *** mj41 joined
[19:34] *** cxreg left
[19:35] *** cxreg joined
[19:37] *** simcop2387 left
[19:39] *** simcop2387 joined
[19:43] *** Transformer joined
[19:45] *** Transformer left
[19:54] <masak> it's a pity that Perl 5 can't avoid all the issues with given/when, but maybe it's not so surprising when you're locked in by decades of design already in place.

[19:54] <masak> meanwhile, Perl 6 refuses to "grow up" in that way before it absolutely has to :)

[19:56] <masak> but in a way -- and I guess this was the point I wanted to get to -- the fact that Perl 5 tries and fails to get a problem-free given/when construct somehow vindicates the Perl 6 effort.

[19:57] <masak> you can do a lot of cool stuff with Perl 5, but "you can't get there from here".

[19:58] <doy> i'm not convinced that getting a useful given/when in perl 5 is/would have been impossible

[19:58] <doy> but it was pretty badly mishandled back when it was implemented

[20:04] <masak> at least it's fair to say, with hindsight, that a functioning one in Perl 5 won't look the same as the one we ended up with in Perl 6.

[20:04] <masak> because of different environments.

[20:05] <doy> sure

[20:05] <masak> and I'm not referring to the fact that we stranded Perl 5.10 with our initial, broken conception of smartmatching :P

[20:06] <doy> (:

[20:09] <colomon> "we stranded"?  

[20:09] <colomon> "we" stranded?

[20:11] * colomon knows it was in jest, but hates things that imply Perl 6 developers have all the power...

[20:11] <colomon> ... in the Perl 5 / Perl 6 relationship.

[20:12] *** tyatpi joined
[20:12] *** whiteknight joined
[20:13] <flussence> maybe the Perl 6 specs should have a whatwg-style warning at the beginning: "implementors of these features not taking part in spec development are likely to have them change out from under them in incompatible ways"

[20:19] <colomon> Actually, being involved in spec development doesn't help much either.  ;)

[20:20] <geekosaur> being involved with spec development just makes it more likely you'll change the spec out from under yourself..

[20:22] *** Patterner left
[20:30] *** rindolf left
[20:33] <japhb> What facilities are currently available for profiling in Rakudo?  To make this concrete, I just did 'time panda list' a couple times, and the shortest time was 23.1 seconds.  How do I find the bottleneck(s), whether in panda, rakudo, or parrot?

[20:34] *** conntrack left
[20:37] *** birdwindupbird left
[20:37] *** Psyche^ joined
[20:37] *** Psyche^ is now known as Patterner

[20:40] <flussence> japhb: `perl6 --profile` outputs kcachegrind-compatible profiling data

[20:49] <moritz> ... to stderr

[20:50] <flussence> oh moritz, can I prod you to bump rakudo's nqp version again? There's a fix in it now for that compile failure I was getting

[20:51] <moritz> flussence: sure, just a sec

[20:52] <dalek> rakudo/nom: b6ca7a6 | moritz++ | tools/build/NQP_REVISION:

[20:52] <dalek> rakudo/nom: bump NQP revision again, to get a build fix. flussence++ and not_gerd++

[20:52] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b6ca7a66bc

[20:58] <flussence> yay, it works!

[20:58] <moritz> \o/

[20:59] <flussence> (and I noticed I should've used --parrot-make-option instead of --make-option... that gets it done a lot quicker)

[21:00] *** fglock left
[21:02] *** sdo joined
[21:04] <sdo> bonjour

[21:05] <moritz> bon soir

[21:05] <sdo> j'ai besoin d'un commit 

[21:05] *** mj41 left
[21:06] <cognominal> sdo, needs a commit bit to correct my spelling on https://github.com/perl6/course/blob/master/fr

[21:06] <sdo> moritz j'ai besoin d'un commit bit s'il vous plait

[21:07] <cognominal> sdo, this is an english channel and moritz can't guess what you need if you are not precise enough.

[21:07] <sdo> ok man

[21:08] <sdo> moritz I need a commit bit please

[21:09] <sdo> I guess the link is  https://github.com/perl6/course/blob/master/fr/README.pod

[21:09] <sdo> is it ok with you moritz?

[21:10] <cognominal> sdo, with this commit bit you get access to all things Perl6 documentation, so you should get a clue :)

[21:11] <sorear> welcome, sdo!

[21:12] <sdo> hello sorear

[21:16] <moritz> sdo: what's your github ID?

[21:17] <sdo> I don't hove one yet 

[21:18] <moritz> sdo: you need one, otherwise I can't give you a commit bit

[21:18] *** fsergot joined
[21:18] <havenn> githubs is wonderbar

[21:18] <fsergot> o/

[21:20] <sdo> don't worry I subscribe to github 

[21:20] <sorear> o/ fsergot 

[21:21] <japhb> flussence, moritz, thank you, I will give that a try.

[21:22] <sdo> is it ok with the id doreys

[21:23] <moritz> sdo: you now have commit access. Welcome and have fun!

[21:24] <sdo> thanks

[21:24] <cognominal> thx moritz

[21:24] <sdo> moritz

[21:27] <moritz> fwiw we now have 94 members in the 'perl6' team on github

[21:27] <moritz> which gives access to nearly all repos under the perl6 organization

[21:28] * moritz -> sleep

[21:28] <fsergot> good night moritz :)

[21:29] <masak> 'night, moritz

[21:29] <japhb> So we've beaten 2**6, 3**4, 4**3, 5**2, 6**2, 7**2, 8**2, 9**2, I guess it's time for 10**2.

[21:31] *** wolfman2000 left
[21:33] *** raiph left
[21:43] *** mj41 joined
[21:48] <masak> colomon: didn't mean to imply we have all the power. but I've heard accusations, in I-don't-know-how-much jest, that we neglected to tell the Perl 5 people when we updated our smartmatching semantics.

[21:51] <masak> that update was itself a good example of "fine idea on paper, but didn't work -- here's one that does"

[21:51] <masak> it looks fine on paper that smartmatching be symmetric.

[21:51] <masak> turns out it's much more useful that it isn't.

[22:00] *** NamelessTee left
[22:04] *** havenn left
[22:06] *** NamelessTee joined
[22:08] <dalek> rakudo/nom: eccc616 | jonathan++ | src/ (5 files):

[22:08] <dalek> rakudo/nom: First crack at PRE and POST phasers. Known NYI: POST handling doesn't get $_ set to the result yet, and one failing POST doesn't abort the rest. Even without that, can pass 17/25 tests in pre-post.t already.

[22:08] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/eccc616071

[22:08] <jnthn> There's a little vacation patch. :)

[22:08] <masak> PRE/POST \o/

[22:08] <masak> jnthn++

[22:08] <jnthn> Some enterprising soul can fudge pre-post.t if they wish

[22:08] <jnthn> As for me, dinner :)

[22:08] <japhb> jnthn++

[22:08] <masak> at 11 PM!? oh wait. :P

[22:09] <jnthn> Just gone 7pm here.

[22:09] <jnthn> And the culture seems to be to eat later rather than earlier.

[22:09] <japhb> jnthn, where is "here"?

[22:09] <masak> yeah, you guys in the Americas. always a bit behind.

[22:09] <jnthn> japhb: Buenos Aires

[22:09] <japhb> Ah, very nice.

[22:09] <japhb> Travel Guy is travelling.

[22:09] <japhb> :-)

[22:09] <jnthn> Yes, my first time here, and I'm liking it plenty.

[22:09] <jnthn> Especially the steak!

[22:09] <japhb> heh

[22:10] <jnthn> Got no conference/workshop stuff to do here. Just relaxing. :)

[22:11] <japhb> Oh my that sounds nice.

[22:16] <jnthn> Yeah. Keeps the batteries charged :)

[22:17] <jnthn> OK, gone for a bit...or the night :)

[22:17] *** NamelessTee left
[22:21] * japhb is trying to make (more) sense of the kcachegrind profile output ...

[22:21] <japhb> What causes the same method to appear with multiple addresses, and with '1, '2, '3 at the end?

[22:21] <japhb> For example, 0xdb357f8:gimme, 0xea8d1f8:gimme'1

[22:23] <japhb> Hmmmm ... perhaps different caller paths?

[22:24] <japhb> Hrmmm, possibly not.

[22:25] <geekosaur> my guess is that there are either multiple call centers in the function, or multiple entry points.  the former seems more likely

[22:26] <japhb> "multiple call centers"?

[22:27] *** sisar left
[22:27] <geekosaur> it's usually possible to instrument a function with profile points in the middle of the function, to keep track of various code paths within it

[22:28] <geekosaur> hrm, I just realized another interpretation

[22:28] <geekosaur> multis

[22:28] <japhb> Well, I'm seeing it light up the same line numbers in the same file.

[22:29] <japhb> And the profile appears to be a line-by-line profile.

[22:31] *** mj41 left
[22:32] <japhb> geekosaur, try: perl6 --profile `which panda` list 2>my-profile; kcachegrind my-profile

[22:32] <japhb> ... assuming you have rakudo and panda installed locally, of course.

[22:33] <geekosaur> rakudo yes, panda no, kcachegrind lolno (OS X)

[22:34] <japhb> Hmmm, the 'n is in the original raw profile data, so it's not being created by some kcachegrind magic.

[22:34] <japhb> Does OS X have something that can read cachegrind format?

[22:35] <geekosaur> cachegrind is part of the valgrind suite, no?  last time I looked valgrind had lots of issues on OS X

[22:36] <geekosaur> so no valgrind and therefore nobody bothered with tools to read it

[22:37] <japhb> That's unfortunate, because lot of tools use cachegrind-formatted profile output, because it's "what everybody uses".  :-/

[22:40] *** sdo left
[22:52] *** conntrack joined
[22:54] *** kaare_ left
[22:55] <japhb> OK, looks like the 'n comes from recursion, as seen in parrot's src/runcore/subprof.c:699 and :812-813

[22:57] <flussence> I think I remember seeing a gtk thing ages ago that could read cachegrind files, but no idea what it's called...

[22:58] <japhb> flussence, alleyoop?

[22:59] <masak> 'night, #perl6

[22:59] <japhb> o/

[23:02] <flussence> japhb: looks interesting, but from what I can see it doesn't do profiling stuff...

[23:04] <arnsholt> flussence: Maybe you're thinking of kcachegrind?

[23:04] <arnsholt> It's KDE/Qt, but it's a very nice tool for looking at cachegrind files

[23:04] <flussence> I'm thinking of *alternatives* to that :)

[23:05] *** araujo joined
[23:05] <arnsholt> Right. Never mind me then =)

[23:06] <japhb> flussence, yeah, agreed.  I just was looking at the description in apt.

[23:07] <arnsholt> Incidentally, I saw http://dtrace.org/blogs/brendan/2012/03/17/linux-kernel-performance-flame-graphs/ today

[23:07] <arnsholt> Might be an interesting alternative to the box-thing (the name escapes me at the moment) visualisation kcachegrind does

[23:11] <japhb> Ooh yeah, that's much nicer.  I always hated the box one, because it is really hard to see what's going on when children use like 95% of the parent's total time, all the way down the stack.  You end up with a screen full of tightly nested boxes and no useful information.

[23:13] <arnsholt> Yeah, I'd like to try it

[23:14] <arnsholt> I'm considering writing a converter for the Lisp implementation I use occasionally to get a proper visualisation

[23:14] <arnsholt> Text is nice for many things, but some things just are so much better to deal with graphically

[23:15] <japhb> quite.

[23:15] <arnsholt> Trying to convince my Lisper friends of this is met with benevolent incomprehension ^_^

[23:17] <japhb> I bet!

[23:22] <sorear> What's so unpalatable about Qt?

[23:27] <gfldex> (void *) up and down casts?

[23:27] <sorear> gfldex: people are refusing to use a program just because it uses qt

[23:28] <sorear> I've never heard of anyone saying "I ain't touching $thing because it's written in Python and I'm a Perl person"

[23:28] <gfldex> i think that was more about kde what seams to mix badly with osx

[23:31] *** sudokode left
[23:32] *** aindilis left
[23:42] *** sudokode joined
[23:42] <shinobicl___> hi... is there a function like ^methods but that shows data-members? 

[23:45] <shinobicl___> nevermind,.... already found it...

[23:45] <shinobicl___> ^attributes

[23:58] *** s1n left
