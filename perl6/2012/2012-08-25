[00:07] <colomon> FROGGS++: Awesome!  I was actually trying and failing to get MP3 playback working in Niecza a month or two ago.  (Not Niecza's fault as far as I know, I think it was Mono issues.)

[00:10] *** kst` is now known as kst

[00:10] *** gongyiliao joined
[00:15] *** dayangkun joined
[00:15] *** Circlepuller_ left
[00:16] *** nebuchadnezzar joined
[00:16] *** Circlepuller joined
[00:19] *** atrodo left
[00:20] *** s1n joined
[00:21] *** topo__ is now known as topo

[00:22] *** popl left
[00:25] *** jaldhar joined
[00:29] *** Circlepuller_ joined
[00:31] *** fgomez joined
[00:32] *** Circlepuller left
[00:34] *** dayangkun left
[00:45] *** gongyiliao left
[00:47] *** dayangkun joined
[01:01] *** tokuhiro_ joined
[01:05] *** gongyiliao joined
[01:18] *** popl joined
[01:26] *** lumi_ left
[01:28] *** lumi_ joined
[01:31] *** thou left
[01:37] *** dayangkun left
[01:48] *** bonifatio joined
[01:49] *** dayangkun joined
[01:55] *** araujo left
[02:00] *** skids joined
[02:35] *** whiteknight left
[02:41] *** dayangkun left
[02:48] *** bonifatio left
[02:52] *** thou joined
[02:54] *** bonifatio joined
[02:55] *** dayangkun joined
[03:10] *** dayangkun left
[03:21] *** popl left
[03:27] <japhb> Very strange time anomaly in Rakudo 3188aee:  time perl6 -e '' => .477s,  time perl6 -e '0' => 0.934s,  time perl6 -e 'use JSON::Tiny;' => 0.594s

[03:28] <japhb> jnthn, pmichaud, moritz: Any ideas ^^ ?

[04:19] *** topo left
[04:21] *** Util left
[04:21] *** dalek left
[04:21] *** hugme left
[04:21] *** dalek joined
[04:21] *** ChanServ sets mode: +v dalek

[04:21] *** PerlJam joined
[04:21] *** p6eval left
[04:21] *** masak left
[04:22] *** [Coke] left
[04:24] *** tadzik left
[04:24] *** dalek left
[04:26] *** Juerd left
[04:27] *** tadzik joined
[04:27] *** hugme joined
[04:27] *** ChanServ sets mode: +v hugme

[04:27] *** pmichaud left
[04:28] *** pmichaud joined
[04:29] *** Juerd joined
[04:29] *** masak joined
[04:30] *** topo joined
[04:30] *** PerlJam left
[04:30] *** [Coke] joined
[04:31] *** p6eval joined
[04:31] *** ChanServ sets mode: +v p6eval

[04:31] *** Util joined
[04:37] *** PerlJam joined
[04:43] *** xinming_ left
[05:01] *** desertm4x joined
[05:34] *** orphu joined
[05:35] *** skids left
[05:38] *** orphu left
[05:44] *** erkan joined
[05:44] *** erkan left
[05:44] *** erkan joined
[05:56] *** kaare_ joined
[05:57] *** gongyiliao left
[06:04] *** Telgalizer joined
[06:22] *** araujo joined
[06:22] *** araujo left
[06:22] *** araujo joined
[06:44] *** FROGGS joined
[06:46] *** tokuhiro_ left
[06:55] <thou> rn: ^9.roll(30);

[06:55] <p6eval> rakudo 5ceefd, niecza v19-37-g0567c61:  ( no output )

[06:55] <thou> rn: ^9.roll(30).perl.say;

[06:55] <p6eval> rakudo 5ceefd, niecza v19-37-g0567c61: OUTPUT«(9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9).list␤»

[06:57] <thou> rn: (^9.roll(30)).perl.say;

[06:57] <p6eval> rakudo 5ceefd, niecza v19-37-g0567c61: OUTPUT«0..^30␤»

[07:06] *** GlitchMr joined
[07:17] <masak> good morning, #perl6

[07:20] <felher> o/ masak 

[07:21] <masak> oh, nice. now I see a face when I read the nick "felher". felher++

[07:24] <felher> yeah. Same here with you and the other guys i met :)

[07:26] * felher wishes everyone attending the hackathon a happy and productive time is off for $job

[07:45] <moritz> \o

[07:46] *** FROGGS left
[07:46] *** FROGGS joined
[07:53] *** FROGGS left
[07:56] *** FROGGS joined
[08:05] <thou> seen dalek

[08:05] <aloha> dalek was last seen in #perl6 3 hours 44 mins ago joining the channel.

[08:18] *** Psyche^ joined
[08:18] *** FROGGS left
[08:20] *** leont joined
[08:22] *** Patterner left
[08:22] *** Psyche^ is now known as Patterner

[08:23] *** SamuraiJack joined
[08:26] *** desertm4x left
[08:26] *** thou left
[08:44] <eiro> hello all 

[08:45] <diakopter> ~hi

[08:46] <diakopter> what's up?

[08:46] *** betterworld left
[08:48] <eiro> seen tons of new people at yapc. impressed by the young people and women: it seems we're not missing diversity anymore 

[08:48] <aloha> tons of new people at yapc. impressed by the young people and women: it seems we're not missing diversity anymore was last seen in  15577 days 8 hours ago .

[08:50] <diakopter> well, that is an extremely tiny sample

[08:51] <masak> we may have some diversity, but I'm pretty sure we need more of it ;)

[08:51] <tadzik> good morning #perl6

[08:54] *** betterworld joined
[08:56] <masak> thou: the thing you need to understand about prefix:<^> and other prefix operators is that they're looser than terms. for some reasons, we don't always expect that with things like ^9.roll(30). but that's the way it falls out.

[09:00] <moritz> \o

[09:04] *** Woodi left
[09:06] *** immortal joined
[09:06] *** immortal left
[09:06] *** immortal joined
[09:06] *** erkan left
[09:07] *** betterworld left
[09:15] *** betterworld joined
[09:28] *** immortal left
[09:31] *** FROGGS joined
[09:32] <masak> from http://repository.readscheme.org/ftp/papers/ai-lab-pubs/AIM-349.pdf : 'Note well that we did _not_ bring forth a clean implementation in one brilliant flash of understanding; we used an experimental and highly empirical approach to bootstrap our knowledge.'

[09:33] <masak> this is from the first of the "Lambda Papers". a good read if one (like me) is interested in how closures work and the early discoveries about them.

[09:35] *** sftp left
[09:36] *** sftp joined
[09:45] *** FROGGS left
[09:46] *** erkan joined
[09:46] *** erkan left
[09:46] *** erkan joined
[09:49] *** erkan left
[09:49] *** erkan joined
[09:49] *** erkan left
[09:49] *** erkan joined
[09:54] *** erkan left
[09:54] <felher> masak++ # for the link. I sure want to read this if i happend to have some free time next week

[09:57] *** hoelzro|away is now known as hoelzro

[09:58] *** erkan joined
[09:58] *** erkan left
[09:58] *** erkan joined
[10:02] *** erkan left
[10:20] *** hoelzro is now known as hoelzro|away

[10:23] *** erkan joined
[10:23] *** erkan left
[10:23] *** erkan joined
[10:29] <moritz> is Tim Smith here on IRC?

[10:31] <moritz> seems not; I've commented on the commit instead

[10:41] *** spider-mario joined
[10:49] *** whiteknight joined
[10:55] <tadzik> .u »

[10:55] <phenny> U+00BB RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK (»)

[10:55] <tadzik> does anyone have an xkbmap with this?

[10:56] <tadzik> I used to have that on alt+[], but I seem to have lost that one

[10:56] *** ObseLeTe joined
[10:57] *** erkan left
[11:02] *** erkan joined
[11:02] *** erkan left
[11:02] *** erkan joined
[11:05] *** erkan left
[11:05] *** erkan joined
[11:09] *** erkan left
[11:15] *** erkan joined
[11:15] *** erkan left
[11:15] *** erkan joined
[11:19] *** desertm4x joined
[11:21] *** crab2313 joined
[11:29] *** am0c joined
[11:31] <crab2313> r: say 1+3 ?? $_ !! 123;

[11:31] <p6eval> rakudo 5ceefd: OUTPUT«Any()␤»

[11:31] <crab2313> n: say 1+3 ?? $_ !! 123;

[11:32] <p6eval> niecza v19-37-g0567c61: OUTPUT«Any()␤»

[11:37] *** wk_ joined
[11:42] *** crab2313 left
[11:42] *** birdwindupbird joined
[12:01] *** cognominal left
[12:02] *** cognominal joined
[12:06] *** telex left
[12:08] *** telex joined
[12:09] *** JimmyZ joined
[12:24] <tadzik> re woman at yapc, that was at least one good reason to work at booking :)

[12:24] <tadzik> there seemed to be many of them working there

[12:35] <leont> Try Cluj.pm. At their meetup two weeks ago there were about as many women as men, and they're programmers not recruiters. They're doing something right there.

[12:35] <tadzik> indeed

[12:36] *** jtpalmer left
[12:37] *** jtpalmer joined
[12:40] *** GlitchMr left
[12:41] *** desertm4x left
[12:41] *** GlitchMr joined
[12:42] *** marmay joined
[13:05] *** FROGGS joined
[13:06] <FROGGS> hi there

[13:06] <tadzik> hi FROGGS 

[13:08] *** phenny left
[13:09] <awwaiid> tadzik, I have » as compose+>+>

[13:09] *** phenny joined
[13:09] <tadzik> awwaiid: yeah, I prefer to having «» close

[13:09] <tadzik> I put them on altgr+[]

[13:09] <awwaiid> ah

[13:09] <tadzik> like “”, ‘’ and so

[13:10] <mst> I ... suspect I would need a new editor for unicode.

[13:10] <awwaiid> I know «» can be used in perl6, what are “”, ‘’ for?

[13:10] *** rindolf joined
[13:10] <awwaiid> er... s/can/are/

[13:11] <awwaiid> you knowwhatimean

[13:11] <rindolf> Hi all.

[13:11] <awwaiid> hi rindolf 

[13:13] <tadzik> awwaiid: nothing. It's just that I don't always quote, but when I do, I do it with proper characters

[13:13] <tadzik> also, Polish for example uses „” rather than “”

[13:13] <tadzik> and ,,'' looks stupid

[13:13] <awwaiid> ah

[13:16] *** am0c_ joined
[13:33] *** skids joined
[13:45] <moritz> what are modules that (possibly indirectly) use sockets and have tests?

[14:02] *** rindolf left
[14:08] *** marmay left
[14:23] *** flexibeast left
[14:23] *** flexibeast joined
[14:35] <__sri> is there a reason .spurt and .spew have different names in rakudo and nqp?

[14:37] *** tokuhiro_ joined
[14:38] <mst> __sri: nqp is a baby perl6 so it doesn't have the post-puberty capacity to spurt yet and can only spew?

[14:38] * mst hides

[14:38] <__sri> :D

[14:41] <skids> Is the ".clear" method mentioned in http://perlcabal.org/syn/S06.html#Feed_operators for feed taps still likely to be implemented, and if so, when and how was it to be called?  Each time the feed tap occurs in a new feed?

[14:52] *** am0c_ left
[14:54] <JimmyZ> hmm, I can't bootstrap panda

[14:55] <JimmyZ> https://gist.github.com/3466747

[15:08] <JimmyZ> looks like 'mkdir' and 'open' doesn't support no-ascii GBK strings.

[15:32] *** thou joined
[15:34] *** cognominal left
[15:34] *** JimmyZ left
[15:39] *** JimmyZ joined
[15:39] <leont> Non-ascii on Windows is a bit of a bitch

[15:40] <moritz> non-ascii on windows is also a bit of a bit :-)

[15:40] <moritz> (but less so, I think)

[15:40] <thou> moritz: hi, you asked about Tim Smith. it is i

[15:40] <leont> Not sure what parrot uses inside, if they use the non-wide interfaces, like perl 5 does, it is indeed problematic

[15:43] *** tokuhiro_ left
[15:43] *** tokuhiro_ joined
[15:46] *** thou left
[15:48] *** tokuhiro_ left
[16:03] *** JimmyZ left
[16:07] *** jaldhar left
[16:07] *** _jaldhar joined
[16:09] *** hello_wol joined
[16:10] *** hello_wol left
[16:13] <masak> good morning, #perl6

[16:18] * moritz too late

[16:18] <moritz> good morning masak 

[16:22] <masak> so. let's merge macros-d2, shall we? :)

[16:23] <moritz> does it work? :-)

[16:23] <masak> I have one known/outstanding bug, but I don't consider it a blocker.

[16:23] <masak> the rest works, to my knowledge. I'd rather have what I have in maste^Wnom.

[16:23] <masak> I'll be happy to write a todo test for the known bug.

[16:24] *** ObseLeTe left
[16:25] <moritz> so, go ahead and merge :-)

[16:25] * masak .oO( Tim Smith -- is it thou? )

[16:25] * masak .oO( yes, it is I )

[16:25] *** jaldhar_ joined
[16:26] <masak> well, when I say "merge", I really mean something more like "rebase, write spectests, and then merge" ;)

[16:26] *** _jaldhar left
[16:26] <masak> but I have some time to do that tonight, so that's what I'll do.

[16:26] <moritz> why rebase instead of merging?

[16:27] *** ObseLeTe joined
[16:27] <moritz> if you don't expect any fallout from the merge, you can merge locally, spectest and then push

[16:28] <masak> hm, I meant rebase interactively, to make the commits make me appear less stupid ;)

[16:28] <moritz> don't worry about that

[16:28] <moritz> we pretty much know stupid (or not) you are :-)

[16:28] <japhb> Developers (me included) have an irrational fear of looking stupid.  Don't bother with that, you've already proven yourself here.  :-)

[16:29] <masak> *sigh* -- I must've phrased myself badly.

[16:29] <masak> :)

[16:29] <masak> I actually have very little fear of appearing stupid. if I did, I would be much less chatty on this channel.

[16:30] <japhb> Long ago when I worked at a place that had Quake LAN games, my nick was "Dumbass" so no one could claim I was being uncharacteristically stupid. ;-)

[16:30] <masak> the last five years have been one big journey of discovery for me. I've learned loads, much thanks to daring to look stupid when that was the easiest way to learn things.

[16:31] <masak> the "make the commits make me appear less stupid" is more of a meme than anything else. I'm actually not afraid of leaving commits behind that make me look stupid.

[16:31] <masak> but I do like leaving commits behind that are nicely compartmentalized and "do one thing well".

[16:32] <japhb> Ah, that is a worthy goal.

[16:32] <masak> actually, I don't seem to need an interactive rebase this time. they look fairly nice as it is.

[16:33] <japhb> \o/

[16:33] <masak> there's a bit of "no, let's do it like this" in there, but in a sense, that's good historical documentation too.

[16:33] <japhb> True

[16:33] <masak> for D1, I rebased too much, I think, making the work look like one big commit :)

[16:35] <japhb> Some of that "historical documentation" should probably become condensed into code comments or Pod.  It's nice to read a current rev, wonder why one of a few possible designs was chosen, and see a nice comment that says "I couldn't do A because foo, or B because bar, so I went with C, which seems to be working"

[16:38] <masak> on a scale between "leave informative comments" and "leave informative commits", my preference seems to fall more towards the former than most programmers'

[16:42] <japhb> Works for me ... going all the way to the latter seems to only work when most of the team does it, or the repo is curated (in the way that the Linux kernel is)

[16:45] <masak> agree.

[16:49] *** ObseLeTe left
[16:56] <masak> moritz: as to the more general way to interpret the question "why rebase instead of merging?": I vastly prefer commits in a straight line to branches and merge commits.

[16:58] <leont> You can do both

[16:59] <leont> That way you can have merge commits (useful) without having non-linear history (annoying)

[16:59] <moritz> masak: if there are commits that break features, I much prefer a merge commit

[16:59] <masak> leont: I don't understand how that can be.

[17:00] <leont> You first rebase your branch on master, then merge it into master using --no-ff

[17:00] <masak> leont: ah. nice.

[17:00] <masak> moritz: you mean breakages that are discovered later? why are merge commits nicer in that case?

[17:01] <leont> Trick I learned on p5p, actually. Think it was demerphq's.

[17:01] <moritz> masak: no, I mean if a branch breaks the build, or some features that previously worked

[17:06] *** MayDaniel joined
[17:07] *** birdwindupbird left
[17:07] <masak> why would I want to merge work from a branch that breaks the build? I don't understand the use case.

[17:09] <moritz> well, eventually you fix it in the branch

[17:09] <moritz> adn then you merge the branch

[17:09] <moritz> instead of rebasing all the commits on top of master/nom

[17:10] <moritz> so that from the perspective of the master branch, there is one commit (a merge commit) that didn't break anything

[17:10] <masak> ok, now I understand your scenario.

[17:11] <masak> why is a merge commit better there?

[17:11] <moritz> because a git bisect won't stumbler over the commits that broke the build, for example

[17:11] <moritz> *stumble

[17:12] <moritz> and it's easier to see which commits were associated with a certain feature

[17:17] <masak> seems to me you're exclusively talking about the use of git-rebase --interactive that squashes commits.

[17:18] <masak> I kinda like the way the topology is flattened. I'm not necessarily advocating squashing commits in the process.

[17:19] *** rindolf joined
[17:23] <moritz> masak: well, squashing commits in one thing, but I wouldn't squash a whole non-trivial branch

[17:25] <mst> right, for that purpose I prefer to rebase onto master

[17:25] <mst> and then force git to produce a merge commit anyway

[17:25] <mst> that tends to look really nice in the relevant browsers etc.

[17:26] <moritz> what's the benefit over straight merging?

[17:34] <masak> the usual benefit of rebasing.

[17:35] <masak> you get conflicts in commit order, not all-at-once.

[17:55] <mst> straight merging is a crutch for people who don't have git.

[17:55] <moritz> mst: that's not an answer to my question -)

[17:55] <mst> it's one of those "try it with the rebasing for a bit, then go back to without, then scream, then understand" type things

[17:56] <mst> if you don't immediately see the value in having a clean commit history, you're probably not going to be swayed by any argument I can think of, so TIAS is probably an easier answer

[17:57] <moritz> mst: I do value a clean commit history, I just don't see why a rebase + merge is supposed to (significantly) cleaner

[17:57] * [Coke] waves from the airport.

[17:57] <moritz> if many of the commits have conflicts, then I can see the value. If not, not

[17:58] <mst> so ... you're saying "there are two cases - one where the rebase is superior, and one where the rebase is neutral"

[17:58] <mst> at this point, I would argue that the argument for defaulting to doing the rebase has just been made :)

[17:58] *** cjbot joined
[17:59] <moritz> ok, I agree now :-)

[17:59] <mst> oh, the other thing is it means that after the rebase, I can do a straight 'git diff master' to get a clean diff set to review

[18:00] * [Coke] is very happy he has a chance to git pull everythig before the flight

[18:00] <mst> which during the reviewathon I just did for dbix-class was really quite handy

[18:01] <masak> mst++ # swaying moritz ;)

[18:04] <[Coke]> cjbot:[D help

[18:04] <[Coke]> cjbot: help

[18:04] <cjbot> Run by Coke, I relay tweets about Perl 6.

[18:04] *** SamuraiJack left
[18:05] <[Coke]> the sleeps are probably the wrong way to stop us from killing the CPU long term.

[18:05] <[Coke]> glad to see he hasn't fallen asleep, though.

[18:06] <moritz> [Coke]: yes, it's not a long term solution, just a workaround

[18:07] <mst> well, I'll be doing a bit of async I/O stuff

[18:07] <mst> I guess you can bolt a timer API on the top in the process of rewriting my code to not be completely horrible

[18:07] <mst> (since I'm sure it'll require that)

[18:14] *** Exodist left
[18:17] *** cjbot left
[18:23] *** cjbot joined
[18:27] <sorear> good * #perl6.

[18:27] <diakopter> wb

[18:27] <rindolf> sorear: hi.

[18:28] <sorear> I am safely home, pmichaud, masak, anyone else who wanted to kno0w

[18:28] <moritz> glad to hear that

[18:29] <rindolf> sorear: that's great.

[18:30] <sorear> hello rindolf.  Are you just saying hi or can I help you?

[18:30] <rindolf> sorear: no, no help needed in particular.

[18:30] <rindolf> sorear: just saying hi.

[18:34] <masak> sorear! \o/

[18:34] <masak> glad to hear you've arrived safely.

[18:36] <GlitchMr> perl6: print ucfirst 'the world'

[18:36] <p6eval> rakudo 5ceefd, niecza v19-37-g0567c61: OUTPUT«The world»

[18:36] <GlitchMr> But... Perl 6 doesn't have ucfirst... does it?

[18:36] <masak> GlitchMr: correct.

[18:36] <moritz> GlitchMr: it's deprecated in rakudo, but it won't be replaced until we have tc as a repalcement

[18:37] <moritz> aloha: don't fall asleep

[18:37] <masak> GlitchMr: if you're worried about the name being taken when you wanted such a sub in your program, the good news is that your sub will lexically shadow the setting's :)

[18:38] <moritz> nr: say Nil

[18:38] <p6eval> rakudo 5ceefd, niecza v19-37-g0567c61: OUTPUT«Nil␤»

[18:38] <GlitchMr> Sometimes I would like to replace log with something more... useless

[18:38] <moritz> why doesn't that say Nil() like other type objects would?

[18:39] <moritz> GlitchMr: and you're free to do that

[18:39] <GlitchMr> But that would probably be probably too confusing

[18:39] <moritz> isn't Perl 6 wonderful?

[18:39] <GlitchMr> Using log() for logging instead of logarithm

[18:40] *** Telgalizer left
[18:40] <GlitchMr> JavaScript does that. But in JavaScript we have Math.log() and console.log()

[18:40] <GlitchMr> (also, lack of consistency on first letter ;))

[18:42] <moritz> nr: say Nil.new === Nil

[18:42] <p6eval> niecza v19-37-g0567c61: OUTPUT«Unhandled exception: No value for parameter '$l' in 'infix:<===>'␤  at /home/p6eval/niecza/lib/CORE.setting line 0 (infix:<===> @ 1) ␤  at /tmp/0UPX3nNvy8 line 1 (mainline @ 4) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4137 (ANON @ 3) ␤  at /home/p6e…

[18:42] <p6eval> ..rakudo 5ceefd: OUTPUT«True␤»

[18:42] <GlitchMr> Another Niecza bug?

[18:42] <moritz> "No value for parameter"?

[18:43] <GlitchMr> Isn't === comparable to "is" (mutable types) and "==" (immutable types) in Python?

[18:45] *** sivoais left
[18:45] <sorear> dunno, I don't know python

[18:45] *** sivoais joined
[18:46] <sorear> moritz: niecza's signature binder treats Nil as an omitted argument

[18:48] <sorear> although this seems to not (longer?) be by spec

[18:48] <moritz> I'm pretty sure you should be able to === to Nil

[18:51] <sorear> I am not so sure where I stand on this particular consistency/DWIM tradeoff

[18:52] <sorear> since we've established that === autothreads, it's not a low-level binding

[18:53] <moritz> if the OKNess proposal goes anywhere, that will probably change anyway

[18:54] * TimToady_ is happy to report that our living area in Belgium has a decent internet connection

[18:54] <diakopter> ahoy

[18:54] *** TimToady_ is now known as TimToady

[18:54] *** TimToady left
[18:54] *** TimToady joined
[18:56] <TimToady> also that viv can now parse nearly 800 lines of viv

[18:56] <phenny> TimToady: 23 Aug 13:12Z <sorear> tell TimToady see colomon 06:12 and 05:13 PDT, I think we are looking at a stdbug

[18:56] <sorear> TimToady: awesome!

[18:57] <leont> viv == perl5 on perl6?

[18:57] <TimToady> yep

[18:57] <moritz> erm, isn't that the other way round?

[18:57] <moritz> it's the p6-to-p5 compiler that runs STD.pm6

[18:57] <TimToady> well, it's a perl5 parser written in perl6

[18:58] <TimToady> anyway, got heredocs working earlier today, at least for the '' and "" forms

[18:58] <ingy> an someone give me a url for a grammar of perl6?

[18:58] <ingy> c

[18:58] <sorear> the way STD is currently set up, there is 6000 lines of Perl 6 which implements a grammar (std/STD.pm6), and 4000 lines of Perl 5 which implements the Perl 5 emitter (std/viv)

[18:59] <sorear> github.com/perl6/std, STD.pm6

[18:59] <sorear> https://github.com/perl6/std/blob/master/STD.pm6

[19:00] <TimToady> well, viv itself is 4300 lines, so I don't know where you're gonna find the -300 lines :P

[19:00] <sorear> TimToady recently restarted a Perl 6 gramar for Perl 5 (std/STD_P5.pm6)

[19:01] <sorear> I think "viv can parse 400 lines of viv" means "std/viv+std/STD.pm6+std/STD_P5.pm6 can parse 400 lines of viv"

[19:01] <sorear> STD_P5 is not independent of STD

[19:01] <TimToady> correct

[19:05] * masak had not realized this

[19:05] <TimToady> it uses the same EXPR opp parser, for instance

[19:08] <eiro> hello all

[19:08] <masak> heiro!

[19:08] <masak> TimToady: oh, that makes sense.

[19:09] <TimToady> tomorrow we'll be going to see The Pageant of the Golden Tree in Bruges

[19:10] <moritz> aloha has stopped reporting commits

[19:10] <leont> Bruges is fairly high on my to-visit list, I it rather beautiful

[19:10] <eiro> just read about viv: exciting project! 

[19:11] * masak .oO( vive la viv! )

[19:11] * moritz found http://www.imdb.com/title/tt0780536/ quite amusing (re Bruges :-)

[19:14] <sorear> hello eiro.

[19:14] <leont> moritz: watched that movie on my first date with $GF, we're romantic like that :-p

[19:15] * eiro .oO( viva! ) 

[19:19] <sorear> so, I'm listed in the credits for Rakudo 2012.08

[19:19] <sorear> why?

[19:20] <__sri> viva la viv!

[19:20] <moritz> sorear: somebody ++'ed you in a commit message, I think

[19:21] <masak> moritz++ did :)

[19:21] <masak> e5e9e79e1212c3c5bc26d2524bed3e5ebbc2639c

[19:21] <masak> https://github.com/rakudo/rakudo/commit/e5e9e79e1212c3c5bc26d2524bed3e5ebbc2639c

[19:22] <moritz> sorear: you diagnosed the proble with Num.new not being well-suited for subclassing

[19:32] <GlitchMr> Is there a difference between &log and \&log?

[19:33] <moritz> nr: say (\&log).WHAT

[19:33] <p6eval> rakudo 5ceefd, niecza v19-37-g0567c61: OUTPUT«Capture()␤»

[19:33] <moritz> nr: say (&log).WHAT

[19:33] <p6eval> niecza v19-37-g0567c61: OUTPUT«Code()␤»

[19:33] <p6eval> ..rakudo 5ceefd: OUTPUT«Sub()␤»

[19:34] <GlitchMr> oh, I see...

[19:35] <GlitchMr> \&log simply doesn't work

[19:35] <masak> indeed.

[19:35] <GlitchMr> Without any warnings... what is Capture anyways?

[19:35] <masak> a Capture is the thing you get from doing \

[19:35] <masak> it captures containers rather than values.

[19:36] <masak> containers, also known as "value cells".

[19:38] <GlitchMr> my $arr = (3; 4)

[19:38] <GlitchMr> Is it modern comma operator?

[19:38] *** GlitchMr left
[19:39] <moritz> GlitchMr: http://doc.perl6.org/op/infix/:

[19:41] *** cjbot left
[19:42] <masak> moritz: er, that's a colon.

[19:42] <moritz> oh, I misread

[19:45] <sorear> oh, something I need to do now that I have network again

[19:45] <moritz> sorear: fix aloha? :-)

[19:45] <sorear> don't we use dalek here?

[19:45] <moritz> erm, right

[19:46] <moritz> fix dalek, then :-)

[19:46] <sorear> why should I care if aloha is broken

[19:46] <moritz> never mind aloha

[19:46] <sorear> well, https://github.com/sorear/niecza/compare/0567c617ab...55e895a832

[19:47] <masak> oh, that's why my commits don't show up on the channel... :)

[19:47] <sorear> bailador runs unmodified + niecza no longer depends on write access to the install directory + parrallel make debreakage

[19:47] <moritz> masak: did you merge?

[19:47] <sorear> the berlin layover was amazingly productive

[19:48] *** leont left
[19:48] <tadzik> wow, nice!

[19:48] <tadzik> sorear++

[19:48] <masak> moritz: no, not yet. I'm just about to rebase onto nom locally. spectesting before and after.

[19:48] <tadzik> I wonder how many more than 20req/s can you squeeze there :)

[19:59] <eiro> no __END__ and __DATA__ in perl6 ? 

[19:59] <masak> eiro: not with that syntax, no.

[20:00] <masak> eiro: http://perlcabal.org/syn/S26.html#The+%3dEND+block

[20:00] <masak> huh, I thought we renamed that one =finish

[20:00] <masak> is S26 on the web out-of-date?

[20:03] <moritz> might be

[20:03] <moritz> if it's just --doc=HTML output, I can easily refresh it

[20:04] <eiro> thanks :)

[20:04] <masak> rebase successful. rebuilding and respectesting.

[20:10] <moritz> tadzik: I meant pod-gist to be a replacement for Pod::Block.gist, not .Str :-)

[20:10] <moritz> Pod::To::HTML doesn't seem to like the change :/

[20:13] <sorear> (o/ everyone)

[20:14] <moritz> and t/spec/S26-documentation/09-configuration.t doesn't like it either :(

[20:14] <masak> post-rebase spectest run succeeded. pushing.

[20:14] <colomon> sorear++

[20:15] <masak> r: say "what SHA is p6eval on now?"

[20:15] <p6eval> rakudo 5ceefd: OUTPUT«what SHA is p6eval on now?␤»

[20:15] <masak> it'll have b7e189 in a little while :)

[20:17] * masak is excited at this

[20:17] <masak> I haven't added tests yet, but I will during the weekend.

[20:18] <moritz> masak: does that mean I should wait with pushing my local patch until you're done?

[20:18] <masak> no, it means I'm done.

[20:18] <moritz> (I just want to add a test file)

[20:18] <masak> I've already pushed.

[20:18] <moritz> \o/

[20:18] <masak> r: say "how about now?"

[20:18] <p6eval> rakudo 5ceefd: OUTPUT«how about now?␤»

[20:19] * masak is lazy and doesn't look at the cron table

[20:20] *** kaare_ left
[20:20] * moritz triggers a rebuild manually

[20:22] <masak> moritz++

[20:22] <moritz> oops, https://github.com/rakudo/rakudo/commit/1965724f02e0b9afd0fa52e40648ab316dbc1ddd contained stuff I wanted to put into a separate commit

[20:22] <moritz> moritz-- # still using git commit -a

[20:23] <masak> whoa. I never used -a by virtue of it being obviously a bad idea from the start.

[20:23] *** rindolf left
[20:23] <masak> I *want* to add files (or parts of them) manually.

[20:23] <masak> (in other words, I like the staging area)

[20:27] <moritz> r: say 42

[20:27] <p6eval> rakudo 196572: OUTPUT«42␤»

[20:27] <moritz> that's the new rakudo

[20:27] <jnthn> evening o/

[20:27] <moritz> good UGT morning, jnthn 

[20:28] <jnthn> no...it's so not morning :P

[20:29] <moritz> in UGT it's always morning when you join a conversation :-)

[20:30] <masak> jnthn: good morning!

[20:31] <masak> r: macro demo($ast) { quasi { "This is the " ~ {{{$ast}}} ~ " unquote splicing on the channel" } }; say demo "first"

[20:31] <p6eval> rakudo 196572: OUTPUT«===SORRY!===␤Method 'position' not found for invocant of class 'QAST::Unquote'␤»

[20:31] <masak> :/

[20:32] <masak> r: macro demo($ast) { quasi { {{{$ast}}} } }; say demo "first"

[20:32] <p6eval> rakudo 196572: OUTPUT«===SORRY!===␤Method 'position' not found for invocant of class 'QAST::Unquote'␤»

[20:32] <masak> seems to be a systematic error. investigating.

[20:32] <masak> oh!

[20:32] <masak> hm, I have such a method here...

[20:33] <jnthn> NQP revision bump fail?

[20:33] <masak> possibly.

[20:35] <moritz> 2012.08-2-gc223607 added it

[20:35] <masak> yes, looks kosher.

[20:35] <moritz> and it works locally

[20:35] <masak> I have that as the current NQP_REVISION

[20:36] <masak> moritz: manual rebuild didn't update nqp?

[20:36] <moritz> masak: I have a theory

[20:36] <moritz> (it should, because I ran the same command as cron does)

[20:37] <moritz> maybe it did a 'git pull' during an existing rebuild run

[20:37] <masak> :/

[20:37] <moritz> $ p6eval@feather:~/nom/nqp$ ./nqp --version

[20:37] <moritz> This is nqp version 2012.08-4-g8fac254 built on parrot 4.4.0 revision RELEASE_4_4_0

[20:38] <moritz> that is very odd

[20:39] * moritz cleans out and tries again

[20:39] <sorear> jnthn!

[20:40] <moritz> in particular it's odd that it has a newer NQP revision than was ever in tools/buil/NQP_REVISION

[20:41] <moritz> and now NQP rebuild segfaulted

[20:41] <moritz> wtf.

[20:42] <masak> o.O

[20:49] <moritz> r: macro demo($ast) { quasi { {{{$ast}}} } }; say demo "first"

[20:49] <p6eval> rakudo 196572: OUTPUT«===SORRY!===␤Method 'position' not found for invocant of class 'QAST::Unquote'␤»

[20:50] * masak .oO( never do live demo! )

[21:08] *** MayDaniel left
[21:09] <moritz> r: macro demo($ast) { quasi { {{{$ast}}} } }; say demo "first"

[21:09] <p6eval> rakudo 196572: OUTPUT«first␤»

[21:10] <masak> {{{\o/}}}

[21:10] <masak> r: macro demo($ast) { quasi { "This is the " ~ {{{$ast}}} ~ " unquote splicing on the channel" } }; say demo "second"

[21:10] <p6eval> rakudo 196572: OUTPUT«This is the second unquote splicing on the channel␤»

[21:11] <moritz> r: macro call($a) { quasi { {{{$a}}}() } }; call { say "OH HAI" }

[21:11] <p6eval> rakudo 196572: OUTPUT«OH HAI␤»

[21:13] <masak> r: macro call($a) { my $x = "how very"; quasi { say $x; {{{$a}}}() } }; my $x = "lexical"; call { say $x }

[21:13] <p6eval> rakudo 196572: OUTPUT«how very␤how very␤»

[21:13] <masak> oh!

[21:13] <masak> bug.

[21:13] <moritz> they are not hygienic?

[21:13] <masak> this would happen if the unquotes don't get their context set properly, I guess.

[21:13] <masak> they should.

[21:14] <masak> they're meant to be hygienic.

[21:14] * moritz could say lots of things about writing tests early in the process, but decides not to

[21:15] <moritz> instead, I'll gravitate towards the bed

[21:15] <moritz> 'night &

[21:17] <masak> 'night :)

[21:17] <masak> I usually tend towards writing tests early in the process, too.

[21:18] <masak> anyway, this is an excellent test to put in a macros-d2.t file. moritz++

[21:18] <masak> hm, if the above happens, then that means...

[21:18] <masak> r: macro call($a) { quasi { {{{$a}}}() } }; my $x = "lexical"; call { say $x }

[21:18] <p6eval> rakudo 196572: OUTPUT«Any()␤»

[21:18] <masak> yeah.

[21:23] *** bubaflub joined
[21:38] *** Moukeddar joined
[21:42] * [Coke] spends a flight trying to convert partcl to partcl-nqp, is stymied, and then remembers that pmichaud already did most of this work.

[21:42] <[Coke]> sorear: how was the trip?

[21:44] <[Coke]> UGT: universal grumpy time.

[21:45] * [Coke] notes that "class foo is bar; <class def>" fails horribly in nqp, but only if you target==pir.

[21:47] *** silug left
[21:48] *** cjbot joined
[21:49] *** silug joined
[21:49] <[Coke]> is it still necessary to "use NQPP6Regein nqp?

[21:49] <[Coke]> is it still necessary to "use NQPP6Regex" in nqp?

[21:50] <[Coke]> (I hope not, since it's failing. ;)

[21:53] <[Coke]> can someone help me with a nqp-rx -> nqp regex issue?

[21:54] <diakopter> probably not, but I'm curious what the problem is

[21:54] <diakopter> (probably not *I)

[21:54] <[Coke]> https://gist.github.com/3471303

[21:55] <diakopter> I think ** went away

[21:55] * [Coke] remembers to checkout a copy of the specs this time..

[21:56] <diakopter> try % instead?

[21:57] <[Coke]> see, you were helpful. /(

[21:58] <[Coke]> ;)

[21:58] <masak> diakopter: ** went away for separators. not for numbered/range quantifiers.

[21:58] <diakopter> ah.

[21:58] <diakopter> (good thing this case was a separator)

[21:59] <[Coke]> if I change it to %, it now dies with:

[21:59] <[Coke]> Unable to parse blockoid, couldn't find final '}' at line 7, near "token meta"

[22:00] <diakopter> :S

[22:02] <[Coke]> updated gist

[22:02] <diakopter> maybe it was %%

[22:02] <diakopter> (sorry!)

[22:02] * diakopter no clue

[22:04] <[Coke]> that would impact what the regex did, but not stop it from compiling

[22:04] <sorear> [Coke]: trip was great

[22:06] *** cjbot left
[22:09] *** cjbot joined
[22:11] *** dalek joined
[22:11] *** ChanServ sets mode: +v dalek

[22:11] <sorear> 1. ssh into [email@hidden.address]
[22:11] <sorear> 2. sudo -u p6eval tmux attach

[22:12] <sorear> 3. notice that the dalek frontend is NOT RUNNING

[22:12] <[Coke]> glad to hear it. I am travelling for work to a programming conference, but it's to learn about "agile". :P

[22:12] <sorear> 4. attempt to fix

[22:12] * [Coke] stares at regexes. 

[22:13] *** cognominal joined
[22:16] <sorear> o/ cognominal

[22:16] <[Coke]> so, ** -> % or %% seems to be the right answer, but doing a simple dropin replacement doesn't work.

[22:20] <dalek> niecza: 3826c2a | sorear++ | Makefile:

[22:20] <dalek> niecza: Add an extra dependency to make parallel make happy

[22:20] <dalek> niecza: review: https://github.com/sorear/niecza/commit/3826c2af21

[22:20] <dalek> niecza: 9fad9f7 | sorear++ | / (5 files):

[22:20] <dalek> niecza: First attempt to use a per-user directory for the module cache

[22:20] <dalek> niecza: 

[22:20] <dalek> niecza: Data is stored in Local Application Data\NieczaModuleCache, which Mono will

[22:20] <dalek> niecza: map to $HOME/.local/share/NieczaModuleCache.  The --obj-dir object actually

[22:20] <dalek> niecza: does something now (how long has it been broken?) and can be used to isolate

[22:20] <dalek> niecza: multiple instances of Niecza, and is used internally to make bootstrapping

[22:20] <dalek> niecza: work.

[22:20] <dalek> niecza: 

[22:20] <dalek> niecza: One known wart is that $*PERL<version> may become out of date because it is

[22:20] <dalek> niecza: only updated when the setting needs to be recompiled, and the build system

[22:20] <dalek> niecza: no longer always forces a recompilation of the user-wide setting.

[22:20] <dalek> niecza: review: https://github.com/sorear/niecza/commit/9fad9f7d24

[22:20] <dalek> niecza: 55e895a | sorear++ | Makefile:

[22:20] <dalek> niecza: Update mkpackage for new run/Run.Kernel.dll file setup

[22:20] <dalek> niecza: review: https://github.com/sorear/niecza/commit/55e895a832

[22:20] <sorear> whee, dalek is working

[22:20] <sorear> [Coke]: ** -> +%

[22:20] *** Moukeddar left
[22:21] <masak> [Coke]: what sorear said. % isn't a quantifier, it's a quantifier *modifier*.

[22:21] <masak> 'night, #perl6

[22:26] <sorear> bye masak

[22:26] *** popl joined
[22:28] <tadzik> oops, so I broke rakudo :(

[22:29] <sorear> o/ tadzik

[22:29] <tadzik> sorear: o/

[22:43] *** jeffreykegler joined
[22:45] <cognominal> \o: sorear

[23:15] *** lateau joined
[23:36] *** lateau left
[23:56] *** sudokode left
