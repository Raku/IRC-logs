[00:00] *** imarcusthis joined
[00:05] *** Chillance left
[00:19] *** imarcusthis left
[00:21] *** imarcusthis joined
[00:23] *** gfldex left
[00:24] *** MikeFair_ left
[00:25] *** gfldex joined
[00:29] *** MikeFair_ joined
[00:30] *** tokuhiro_ joined
[00:33] *** wamba left
[00:54] *** anuby joined
[01:14] *** dayangkun joined
[01:14] *** hypolin joined
[01:26] *** tokuhiro_ left
[01:27] *** sftp left
[01:35] *** sevvie left
[01:44] *** MikeFair_ left
[01:45] *** MikeFair_ joined
[01:48] *** woosley joined
[01:50] *** hypolin left
[01:50] *** hypolin joined
[02:10] <dalek> perl6-bench: 5f70232 | (Geoffrey Broadwell)++ | bench:

[02:10] <dalek> perl6-bench: Factor out parsing of components.json from multiple places into single action at startup

[02:10] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/5f702322e7

[02:10] <dalek> perl6-bench: c37d0fd | (Geoffrey Broadwell)++ | bench:

[02:10] <dalek> perl6-bench: Add missing #= comment for needs-setup()

[02:10] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/c37d0fd792

[02:10] <dalek> perl6-bench: 8c1853c | (Geoffrey Broadwell)++ | bench:

[02:10] <dalek> perl6-bench: Add explode-components() to expand a partially-specified list of components and checkouts

[02:10] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/8c1853c756

[02:10] <dalek> perl6-bench: 0600709 | (Geoffrey Broadwell)++ | bench:

[02:10] <dalek> perl6-bench: Refactor build command in terms of explode-components; various additional tweaks and cleanups within

[02:10] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/0600709422

[02:11] *** thou left
[02:12] *** japhb left
[02:25] *** orafu left
[02:25] *** orafu joined
[02:35] *** benabik joined
[02:51] *** telex left
[02:52] *** telex joined
[02:57] *** thou joined
[04:01] *** japhb joined
[04:08] <dalek> perl6-bench: 49d7be1 | (Geoffrey Broadwell)++ | bench:

[04:08] <dalek> perl6-bench: Simplify a loop block, hopefully also avoiding a nasty buggenz

[04:08] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/49d7be1dda

[04:10] *** hugme left
[04:11] *** hugme joined
[04:11] *** ChanServ sets mode: +v hugme

[04:11] *** p6eval left
[04:12] *** telex left
[04:13] *** pmichaud left
[04:13] *** pmichaud joined
[04:14] *** p6eval joined
[04:14] *** ChanServ sets mode: +v p6eval

[04:14] *** sergot left
[04:15] *** sergot joined
[04:15] *** [Coke] left
[04:15] *** [Coke] joined
[04:19] *** telex joined
[04:23] *** CharellKing joined
[04:23] <CharellKing> Hi everyone

[04:26] <sorear> Hi

[04:28] *** telex left
[04:36] *** Entonian joined
[04:37] *** telex joined
[04:39] *** Entonian left
[04:45] *** CharellKing left
[04:58] *** kaleem joined
[05:00] *** sftp joined
[05:34] *** hash_table left
[05:34] *** birdwindupbird joined
[05:45] <dalek> panda/custom-lib: 6dfed95 | moritz++ | b (2 files):

[05:45] <dalek> panda/custom-lib: update bin/panda and bootstrap.pl to use %*CUSTOM_LIB

[05:45] <dalek> panda/custom-lib: 

[05:45] <dalek> panda/custom-lib: TODO: rebootstrap

[05:45] <dalek> panda/custom-lib: review: https://github.com/tadzik/panda/commit/6dfed958d6

[05:58] *** birdwindupbird left
[06:06] *** wtw_ joined
[06:08] *** wtw left
[06:28] *** grondilu joined
[06:29] <grondilu> rn: .say for "foo x bar y bar".match: / foo .* bar /, :overlap

[06:29] <p6eval> rakudo 978492: OUTPUT«｢foo x bar y bar｣␤␤»

[06:29] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«Unhandled exception: Excess arguments to Cool.match, unused named overlap␤  at /home/p6eval/niecza/lib/CORE.setting line 0 (Cool.match @ 1) ␤  at /tmp/o4dkHKaD5Y line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4215 (ANON @ 3) ␤  at /h…

[06:30] <grondilu> r: .say for "axbyb".match: / a .* b /, :overlap

[06:30] <p6eval> rakudo 978492: OUTPUT«｢axbyb｣␤␤»

[06:30] * grondilu was expecting axbyb but also axb

[06:36] *** cognominal joined
[06:38] <grondilu> r: .say for "axbyb".match: / a .*? b /, :overlap

[06:38] <p6eval> rakudo 978492: OUTPUT«｢axb｣␤␤»

[06:39] *** fhelmberger joined
[06:39] <grondilu> r: .say for "axbaybzb".match: / a .*? b /, :overlap

[06:39] <p6eval> rakudo 978492: OUTPUT«｢axb｣␤␤｢ayb｣␤␤»

[06:39] <grondilu> r: .say for "axbaybzb".match: / a .* b /, :overlap

[06:39] <p6eval> rakudo 978492: OUTPUT«｢axbaybzb｣␤␤｢aybzb｣␤␤»

[06:41] *** wamba joined
[06:44] *** Su-Shee left
[06:44] *** Su-Shee joined
[06:44] <arnsholt> o/

[06:44] <arnsholt> Waiting for my plane in Oslo

[06:44] *** arlinius left
[06:45] *** araujo left
[06:46] *** azawawi joined
[06:46] *** flightrecorder joined
[06:51] *** FROGGS joined
[06:52] *** am0c joined
[06:57] *** araujo joined
[06:57] *** wtw joined
[07:00] *** wtw_ left
[07:09] *** kaleem left
[07:19] <azawawi> hi

[07:20] <azawawi> i just found out a bad rosetta code perl 6 entry

[07:20] <azawawi> http://rosettacode.org/wiki/URL_decoding#Perl_6

[07:21] <azawawi> basically it is not 100% right since it does not handle (+ for space).

[07:21] *** brrt joined
[07:21] <azawawi> maybe it is better to use the built-in URI::Escape

[07:21] <jnthn> morning, #perl6

[07:21] <tadzik> seems to be written by TimToady himself :) http://rosettacode.org/mw/index.php?title=URL_decoding&diff=142460&oldid=135012

[07:21] <moritz> \o

[07:21] <tadzik> hello jnthn, moritz 

[07:22] <brrt> \o p6

[07:23] <azawawi> "...HTML 5, section 4.10.22.5 URL-encoded form data, says to preserve "-._*", and to encode space " " to "+"..."

[07:23] <azawawi> see http://rosettacode.org/wiki/URL_encoding

[07:25] *** thou left
[07:29] *** cosimo joined
[07:30] <azawawi> star: use Pod::To::HTML;

[07:30] <p6eval> star 2012.07:  ( no output )

[07:31] <azawawi> star: use Pod::To::HTML; Pod::To::HTML.render('=begin pod\nSome POD\n=end pod');

[07:31] <p6eval> star 2012.07:  ( no output )

[07:31] <azawawi> star: use Pod::To::HTML; say Pod::To::HTML.render('=begin pod\nSome POD\n=end pod');

[07:31] <p6eval> star 2012.07: OUTPUT«<!doctype html>␤<html>␤<head>␤  <title>Pod document</title>␤  <meta charset="UTF-8" />␤  <style>␤    kbd { font-family: "Droid Sans Mono", "Luxi Mono", "Inconsolata", monospace }␤    samp { font-family: "Terminus", "Courier", "Lucida Console", monospace }␤    u { te…

[07:31] <moritz> azawawi: that's not how you use it

[07:32] <moritz> instead you pass in the $=pod variable

[07:32] <azawawi> example please :)

[07:33] <moritz> star: =begin pod␤=head1 OH HAI␤␤some text␤=end pod␤ use Pod::To::HTML; say Pod::To::HTML.render($=pod);

[07:33] <p6eval> star 2012.07: OUTPUT«<!doctype html>␤<html>␤<head>␤  <title>Pod document</title>␤  <meta charset="UTF-8" />␤  <style>␤    kbd { font-family: "Droid Sans Mono", "Luxi Mono", "Inconsolata", monospace }␤    samp { font-family: "Terminus", "Courier", "Lucida Console", monospace }␤    u { te…

[07:34] *** domidumont joined
[07:34] <moritz> star: =begin pod␤=TITLE custom title␤use Pod::To::HTML; say Pod::To::HTML.render($=pod);

[07:34] <p6eval> star 2012.07: OUTPUT«===SORRY!===␤=begin without matching =end␤at /tmp/8uflOzusSy:1␤»

[07:34] <moritz> star: =begin pod␤=TITLE custom title␤=end pod␤use Pod::To::HTML; say Pod::To::HTML.render($=pod);

[07:35] <p6eval> star 2012.07: OUTPUT«<!doctype html>␤<html>␤<head>␤  <title>custom title</title>␤  <meta charset="UTF-8" />␤  <style>␤    kbd { font-family: "Droid Sans Mono", "Luxi Mono", "Inconsolata", monospace }␤    samp { font-family: "Terminus", "Courier", "Lucida Console", monospace }␤    u { te…

[07:37] <azawawi> yeah but in my case

[07:37] <azawawi> i need to render what the user is typing in the editor to HTML-POD

[07:38] <moritz> then it's best to invoke  perl6 --doc=html  $filename  on it

[07:38] <moritz> or --doc=HTML, I think

[07:38] <FROGGS> morning

[07:38] <moritz> \o FROGGS 

[07:39] <azawawi> yeah i noticed it does not handle inline code

[07:40] <moritz> inline code?

[07:40] <azawawi> sorry inline pod

[07:41] <moritz> you mean #= ?

[07:41] *** am0c left
[07:42] <azawawi> im not 100% up2date with POD6

[07:42] <moritz> then what do you mean by "inline pod"?

[07:42] <azawawi> i was thinking of basically generating a POD view for what the user types

[07:42] *** sqirrel joined
[07:43] <azawawi> i.e. POD within code

[07:43] *** hoelzro|away is now known as hoelzro

[07:43] <moritz> that's exactly what perl6 --doc=HTML extracts

[07:43] <moritz> unless I completely misunderstood you

[07:43] <azawawi> let me check it

[07:43] <FROGGS> azawawi: like I get a hint about the function/class/object I am typing?

[07:44] <moritz> then I did misunderstand, yes

[07:44] <bbkr__> hello happy p6 people :) who can bump Star modules before release?

[07:44] <FROGGS> or do you mean you wanna display the htmlified section of the pod stuff I am currently writing?

[07:44] <azawawi> FROGGS: yeah the final objective is autocompletion

[07:44] <FROGGS> ahh

[07:44] <azawawi> FROGGS: but right now it is a POD view...

[07:46] <moritz> azawawi: maybe take a look at S26-documentation/why.t in roast

[07:47] <FROGGS> bbkr__: the guy who makes the next release, see https://github.com/rakudo/rakudo/blob/nom/docs/release_guide.pod

[07:47] <FROGGS> I want to do the november one btw

[07:48] <moritz> FROGGS: I think you're talking about the compiler release, and bbkr__ about the star release

[07:48] <moritz> bbkr__: the default is to ship the newest version of each module, so there's no need for bumping

[07:48] <bbkr__> yes, I was asking about Star. thanks for answer.

[07:49] *** domidumont left
[07:50] *** domidumont joined
[08:02] *** SamuraiJack joined
[08:07] *** snearch joined
[08:29] *** dakkar joined
[08:47] <masak> morning, #perl6

[08:47] <jnthn> masak! \o/

[08:48] <FROGGS> hi masak, hi jnthn

[08:52] *** shachaf is now known as SHACHAF

[08:52] *** dayangkun left
[09:00] <cognominal> moritz++, I just happended to search the perl 6 incantation to generate the html from the pod

[09:10] *** SHACHAF is now known as shachaf

[09:14] *** cognominal_ joined
[09:16] *** cognominal left
[09:18] *** wamba left
[09:22] *** jp11 joined
[09:24] *** jp11 left
[09:36] *** daxim joined
[09:39] *** wamba joined
[09:49] *** kaleem joined
[09:52] *** cognominal joined
[09:53] *** cognominal_ left
[10:05] *** hypolin left
[10:11] *** birdwindupbird joined
[10:12] <azawawi> is there any File::Temp module or something similar in Perl 6?

[10:12] <tadzik> I think there is, yes

[10:13] <tadzik> somebody wrote one, odd that it's not on modules.perl6.org

[10:13] <tadzik> it's here though: http://feather.perl6.nl/~sergot/modules/module/File::Temp.html :)

[10:13] <tadzik> sergot++

[10:14] <jnthn> The Perl 6 darkpan strikes again :P

[10:14] *** anuby left
[10:15] <azawawi> star: my $result = qx/ls/;

[10:15] <p6eval> star 2012.07: OUTPUT«qx, qqx is disallowed in safe mode␤  in sub restricted at src/SAFE.setting:4␤  in sub QX at src/SAFE.setting:11␤  in block <anon> at /tmp/LZATyMGdzp:1␤␤»

[10:22] <FROGGS> tadzik: good to know, I already wanted to start hacking on file::temp

[10:25] <brrt> are p6's HOW and WHAT supposed to be independent?

[10:25] *** cognominal left
[10:27] *** cognominal joined
[10:28] *** fgomez left
[10:28] <jnthn> .HOW means meta-object, .WHAT means type object

[10:28] <brrt> rn: my $foo = 3; say $foo.WHAT; say $foo.HOW;

[10:28] <p6eval> rakudo 978492: OUTPUT«Int()␤Perl6::Metamodel::ClassHOW.new()␤»

[10:28] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«Int()␤ClassHOW.new(...)␤»

[10:28] <brrt> … right, ok

[10:29] <jnthn> They work at different levels.

[10:29] <jnthn> The type object is just an empty instance. It has exactly the same type as any instance.

[10:29] <jnthn> The meta-object defines how the object works.

[10:30] <brrt> so, in a sense

[10:30] <jnthn> And thus knows how to answer questions like "what methods does it have" etc.

[10:30] <brrt> the type object is the 'structure', and the meta object is 'the interface'?

[10:30] <jnthn> Not really

[10:30] <brrt> :-( too bad

[10:31] *** erkan left
[10:31] <jnthn> At lesat, that way of thinking about it doesn't make sense to me

[10:31] <brrt> i can't recall where in the synopses it was stated

[10:32] <jnthn> The meta-object is all about things like "what does it mean to have methods", "what order to we visit inherited classes in multiple inheritance when calling a method", "what types am I a subtype of" and so on.

[10:32] <brrt> right

[10:33] <brrt> (i'm off to lunch, thanks :-))

[10:33] * jnthn thinks lunch seems like a good idea too :)

[10:33] *** xinming left
[10:33] *** brrt left
[10:33] *** xinming joined
[10:38] <azawawi> star: my $content = "<body class=\"pod\" id=\"___top\">\n\n<nav class=\"indexgroup\">\n</nav>\n\n\n\n</body>"; if ($content ~~ /\<body.+?\>(.+?)\<\/body\>/) { $content = $0; }; say $content;

[10:38] <p6eval> star 2012.07: OUTPUT«(timeout)»

[10:38] <FROGGS> uhh

[10:38] <azawawi> r: my $content = "<body class=\"pod\" id=\"___top\">\n\n<nav class=\"indexgroup\">\n</nav>\n\n\n\n</body>"; if ($content ~~ /\<body.+?\>(.+?)\<\/body\>/) { $content = $0; }; say $content;

[10:39] <p6eval> rakudo 978492: OUTPUT«maximum recursion depth exceeded␤current instr.: 'print_exception' pc 86654 (src/gen/CORE.setting.pir:41740) (src/gen/CORE.setting:9055)␤called from Sub 'substr' pc 153459 (src/gen/CORE.setting.pir:71513) (src/gen/CORE.setting:2000)␤called from Sub 'Str' pc 303488 …

[10:39] *** erkan joined
[10:39] *** erkan left
[10:39] *** erkan joined
[10:39] <azawawi> r: my $content = "<body class=\"pod\" id=\"___top\">\n\n<nav class=\"indexgroup\">\n</nav>\n\n\n\n</body>"; if ($content ~~ /\<body.+?\>(.+?)\<\/body\>/) { $content = $0; }; say $content.perl;

[10:39] <p6eval> rakudo 978492: OUTPUT«(timeout)»

[10:39] <FROGGS> what is ".+?" ?

[10:39] <azawawi> r: my $content = "<body class=\"pod\" id=\"___top\">\n\n<nav class=\"indexgroup\">\n</nav>\n\n\n\n</body>"; if ($content ~~ /\<body.+?\>(.+?)\<\/body\>/) { $content = '' ~ $0; }; say $content.perl;

[10:39] <p6eval> rakudo 978492: OUTPUT«"\n\n<nav class=\"indexgroup\">\n</nav>\n\n\n\n"␤»

[10:40] <azawawi> r: my $content = "<body class=\"pod\" id=\"___top\">\n\n<nav class=\"indexgroup\">\n</nav>\n\n\n\n</body>"; if ($content ~~ /\<body.+\>(.+?)\<\/body\>/) { $content = '$0; }; say $content.perl;

[10:40] <p6eval> rakudo 978492: OUTPUT«===SORRY!===␤Unable to parse expression in block; couldn't find final '}' at line 2, near "$content ="␤»

[10:40] <azawawi> sorry for the noise

[10:40] <FROGGS> you should be able to do: ~$0

[10:40] <FROGGS> to stringify

[10:41] *** GlitchMr joined
[10:41] <azawawi> so basically it has to do with $0 not being Str, right?

[10:42] *** cognominal_ joined
[10:42] *** cognominal left
[10:43] <azawawi> FROGGS: the problem started when i was trying to do a normal s/<body>.+</body>/$0/

[10:43] <azawawi> FROGGS: escaped ofcourse but that kept segfaulting...

[10:44] <FROGGS> I cant tell why you get "maximum recursion depth exceeded" but since '' ~ $0 works, ~$0 should work too

[10:46] <FROGGS> you wanna get everything from within the body tag, right?

[10:47] <azawawi> yup

[10:48] <azawawi> basically cleaning up output from q{ perl6 -output=HTML test.p6 }

[10:49] <FROGGS> r: my $content = "<body class=\"pod\" id=\"___top\">\n\n<nav class=\"indexgroup\">\n</nav>\n\n\n\n</body>"; if ($content ~~ /\<body<-[>]>*\>(.*)\<\/body\>/) { $content = ~$0; }; say $content;

[10:49] <p6eval> rakudo 978492: OUTPUT«␤␤<nav class="indexgroup">␤</nav>␤␤␤␤␤»

[10:50] <FROGGS> or maybe use an XML module

[10:52] <azawawi> fixed... finally :)

[10:52] <azawawi> now the File::Temp... :)

[10:52] <azawawi> https://github.com/azawawi/farabi6

[10:53] <azawawi> so do we need to add https://github.com/perlpilot/p6-File-Temp to the ecosystem or ask the author permission first?

[10:54] <moritz> I'm sure PerlJam won't object

[10:55] *** dayangkun joined
[10:56] <azawawi> it is still *nix specific though https://github.com/perlpilot/p6-File-Temp/blob/master/lib/File/Temp.pm

[10:57] <tadzik> wasn't there File::Spec which could create temporary files?

[10:57] <tadzik> FROGGS?

[10:57] <FROGGS> well, it could use my File::Spec to get the tempdir and the pathsep...

[10:57] <FROGGS> tadzik?

[10:57] <FROGGS> no, it doesnt create tempfiles

[10:58] <tadzik> ah, ok

[10:58] <FROGGS> I made File::Spec to create tempfiles on my own

[10:58] *** rindolf joined
[11:00] *** brrt joined
[11:06] *** dayangkun left
[11:07] *** Su-Shee left
[11:09] *** cognominal_ left
[11:10] *** UncleFester6 joined
[11:10] *** Su-Shee joined
[11:10] *** UncleFester6 left
[11:11] *** cognominal_ joined
[11:14] <grondilu> Do you guys know the Project Euler website?  http://projecteuler.net/problems

[11:14] <tadzik> yeah

[11:15] <grondilu> this thing must provide some neat examples of perl6 programming.

[11:16] <daxim> more math/pure algorithms wankery

[11:17] <grondilu> like the first one:  "Find the sum of all the multiples of 3 or 5 below 1000."

[11:18] <grondilu> r: say [+] grep * %% 3|5, ^1000

[11:18] <p6eval> rakudo 978492: OUTPUT«166838␤»

[11:18] <FROGGS> is there a way to see the answers?

[11:19] *** cognominal_ left
[11:19] <grondilu> If it's like with rosalind.info, you have to solve a problem to see other people's solutions.

[11:19] <FROGGS> or at least a stat so you know it was solved using Perl 6?

[11:19] <FROGGS> ah, k

[11:20] *** PZt left
[11:20] *** cognominal_ joined
[11:20] <grondilu> I'm amazed how great is this line:  say [+] grep * %% 3|5, ^1000

[11:20] <grondilu> I mean, I dare anyone to solve this task with less characters.

[11:23] <tadzik> you can remove some whitespace, but that's probably minimal, yes

[11:23] <GlitchMr> Less characters, you say...

[11:23] <GlitchMr> say [+] grep *%%3|5,^1000

[11:23] <GlitchMr> Now I did it with less characters.

[11:24] <grondilu> I also meant that I don't think any other language than Perl6 could make such a solution so short.

[11:24] <GlitchMr> ... I hope that some APL or J programmer won't appear ;-)

[11:25] <moritz> well, more importantly it's hard to beat and stay readable

[11:25] <GlitchMr> Or GolfScript

[11:28] <GlitchMr> Or even

[11:28] <GlitchMr> say [+] grep *%%3|5,^1e3

[11:28] <GlitchMr> Shorter!

[11:30] <FROGGS> r: say [+] grep *%%3|5,^1e

[11:30] <p6eval> rakudo 978492: OUTPUT«===SORRY!===␤Confused␤at /tmp/ZZIugo19mZ:1␤»

[11:30] <FROGGS> meh

[11:30] <grondilu> lol

[11:30] <FROGGS> r: say [+] grep *%%3|5,^1e3

[11:30] <p6eval> rakudo 978492: OUTPUT«166838␤»

[11:30] <FROGGS> cp&paste error -.-

[11:30] <grondilu> I'm amazed how great is this line:  say[+]grep*%%3|5,^1000

[11:30] <grondilu> oops

[11:31] <grondilu> r:  say[+]grep*%%3|5,^1000

[11:31] <p6eval> rakudo 978492: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix + instead␤at /tmp/nA3uYHqNBP:1␤»

[11:31] <grondilu> r:  say[+]grep * %%3|5,^1000

[11:31] <p6eval> rakudo 978492: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix + instead␤at /tmp/4Rgt5LOB31:1␤»

[11:31] <grondilu> r:  say[+] grep * %%3|5,^1000

[11:31] <p6eval> rakudo 978492: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix + instead␤at /tmp/GGxoHAIWFS:1␤»

[11:31] <grondilu> r:  say [+] grep * %%3|5,^1000

[11:31] <p6eval> rakudo 978492: OUTPUT«166838␤»

[11:32] *** imarcusthis- joined
[11:33] *** imarcusthis left
[11:35] *** cognominal__ joined
[11:35] <GlitchMr>    q: 123456789

[11:35] <GlitchMr> 3 3 3607 3803

[11:35] <GlitchMr> :-)

[11:36] *** cognominal_ left
[11:37] <grondilu> damn it it's actually not the good answer :(

[11:37] <flussence> you can golf any arbitrarily large program down to "eval get open '/dev/urandom'"... with about 1/(1+0x100 ** .chars) probability of working

[11:40] *** domidumont left
[11:40] <GlitchMr> flussence: http://codegolf.stackexchange.com/a/6142/3103

[11:42] *** pmurias joined
[11:42] <grondilu> rn:  say [+] grep * %% 3|5, ^1000  # the correct answer is actually 233168

[11:42] <p6eval> rakudo 978492: OUTPUT«166838␤»

[11:42] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«499500␤»

[11:43] <brrt> waitaminute

[11:43] <brrt> r: say 3 %% 5

[11:43] <p6eval> rakudo 978492: OUTPUT«False␤»

[11:43] <brrt> r: say 3 %% #|5

[11:43] <p6eval> rakudo 978492: OUTPUT«===SORRY!===␤Confused␤at /tmp/3QsAK2mE2b:1␤»

[11:43] <brrt> r: say 3 %% 3|5

[11:43] <p6eval> rakudo 978492: OUTPUT«any(True, 5)␤»

[11:43] <moritz> nr: say $_ %% 3|5 for ^10

[11:43] <p6eval> niecza v22-14-g136ddcf: OUTPUT«any(Bool::True, 5)␤any(Bool::False, 5)␤any(Bool::False, 5)␤any(Bool::True, 5)␤any(Bool::False, 5)␤any(Bool::False, 5)␤any(Bool::True, 5)␤any(Bool::False, 5)␤any(Bool::False, 5)␤any(Bool::True, 5)␤»

[11:43] <p6eval> ..rakudo 978492: OUTPUT«any(True, 5)␤any(False, 5)␤any(False, 5)␤any(True, 5)␤any(False, 5)␤any(False, 5)␤any(True, 5)␤any(False, 5)␤any(False, 5)␤any(True, 5)␤»

[11:44] <moritz> precedence

[11:44] <moritz> nr: say [+] grep * %% (3|5), ^1000

[11:44] <p6eval> rakudo 978492, niecza v22-14-g136ddcf: OUTPUT«233168␤»

[11:44] <brrt> r: say (grep * %% 3|5, ^10).perl

[11:44] <p6eval> rakudo 978492: OUTPUT«(0, 3, 5, 6, 9).list␤»

[11:45] * grondilu just looked at S03

[11:45] <grondilu> normally junctions precedes multiplicative

[11:46] *** colomon joined
[11:47] <grondilu> oh no they don't.  Sorry. 

[11:53] <cognominal__> rn:  my Junction $a = 0

[11:53] <p6eval> rakudo 978492: OUTPUT«Cannot look up attributes in a type object␤  in sub AUTOTHREAD at src/gen/CORE.setting:1890␤  in block  at /tmp/_VTuNfSZzw:1␤␤»

[11:53] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«Potential difficulties:␤  $a is declared but not used at /tmp/k9n72Y25_q line 1:␤------> [32mmy Junction [33m⏏[31m$a = 0[0m␤␤Unhandled exception: Nominal type check failed for scalar store; got Int, needed Junction or subtype␤  at /tmp/k9n72Y25_q line …

[11:53] <cognominal__> unhelpful message for rakudo

[11:54] * jnthn can't help but wonder if the error occurs when trying to report the real error...

[11:56] <cognominal__> jnthn, I did not thought of that :)

[11:56] <GlitchMr> rn: my \x = 2|0; print x == x + 2

[11:56] <p6eval> niecza v22-14-g136ddcf: OUTPUT«any(any(Bool::False, Bool::True), any(Bool::False, Bool::False))»

[11:56] <p6eval> ..rakudo 978492: OUTPUT«This type cannot unbox to a native string␤  in method print at src/gen/CORE.setting:7450␤  in sub print at src/gen/CORE.setting:7260␤  in block  at /tmp/LgjxiDWqYY:1␤␤»

[11:56] <GlitchMr> What's wrong with Rakudo?

[11:56] <GlitchMr> And why it SIGSEGV it REPL?

[11:56] <jnthn> rn: my \x = 2|0; say x == x + 2

[11:56] <p6eval> niecza v22-14-g136ddcf: OUTPUT«any(any(Bool::False, Bool::True), any(Bool::False, Bool::False))␤»

[11:56] <p6eval> ..rakudo 978492: OUTPUT«any(any(False, True), any(False, False))␤»

[11:57] <cognominal__> GlitchMr: lack of core developpers?

[11:57] <GlitchMr> what

[11:57] <jnthn> Apparently, print is implemented wrongly.

[11:57] <jnthn> Yes, Rakudo needs more developers.

[11:58] <jnthn> Especially ones interested in fixing LTA errors, given our ticket queue is now full of 'em... :)

[12:00] <rindolf> jnthn: what is LTA?

[12:00] <jnthn> rindolf: Less Than Awesome

[12:00] <rindolf> Ah.

[12:00] <jnthn> rindolf: Cases where Rakudo rightly errors out, but where the message it gives could be improved.

[12:01] <GlitchMr> http://codegolf.stackexchange.com/a/8776/3103

[12:01] <GlitchMr> :-)

[12:01] <rindolf> jnthn: OK.

[12:02] <pmurias> jnthn: simple wrapper for nqp: http://pastie.org/5097767

[12:03] <grondilu> r: my @a := 1 .. *; say grep * < 4, @a;

[12:03] <p6eval> rakudo 978492: OUTPUT«(timeout)»

[12:03] <grondilu> n: my @a := 1 .. *; say grep * < 4, @a;

[12:04] <p6eval> niecza v22-14-g136ddcf: OUTPUT«(timeout)»

[12:04] *** cosimo left
[12:05] <grondilu> n: my @a := 1 .. *; say grep * < 4 <== @a;

[12:05] <p6eval> niecza v22-14-g136ddcf: OUTPUT«␤Unhandled exception: Feed ops NYI␤  at /home/p6eval/niecza/lib/CORE.setting line 1443 (die @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3362 (infix:<<==> @ 4) ␤  at /tmp/95gyTlPCo0 line 1 (mainline @ 7) ␤  at /home/p6eval/niecza/lib/CORE.setting l…

[12:05] <jnthn> grondilu: How does grep know when to stop?

[12:06] <grondilu> indeed.  

[12:06] <jnthn> :)

[12:06] <grondilu> Silly of me.

[12:06] <jnthn> Try ... with some closure on the RHS, maybe.

[12:06] <jnthn> depending what problem you're actually aiming at :)

[12:07] <azawawi> alright POD view is now working in Farabi6 :)

[12:09] *** domidumont joined
[12:09] * azawawi prepares Farabi6 to be run over feather.perl6.nl

[12:11] <tadzik> cool :)

[12:12] <grondilu> nr: my @f = 1, 2, *+* ...^ * > 100;

[12:12] <p6eval> rakudo 978492:  ( no output )

[12:12] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«Potential difficulties:␤  @f is declared but not used at /tmp/Sn2j0jUU_R line 1:␤------> [32mmy [33m⏏[31m@f = 1, 2, *+* ...^ * > 100;[0m␤␤»

[12:12] <grondilu> nr: say my @f = 1, 2, *+* ...^ * > 100;

[12:12] <p6eval> niecza v22-14-g136ddcf: OUTPUT«Potential difficulties:␤  @f is declared but not used at /tmp/5FTC_0Bgl0 line 1:␤------> [32msay my [33m⏏[31m@f = 1, 2, *+* ...^ * > 100;[0m␤␤1 2 3 5 8 13 21 34 55 89␤»

[12:12] <p6eval> ..rakudo 978492: OUTPUT«1 2 3 5 8 13 21 34 55 89␤»

[12:13] <brrt> rn: say (0.3 - 0.2) == (0.2 − 0.1)

[12:13] <p6eval> niecza v22-14-g136ddcf: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Confused at /tmp/izzMbQtEzW line 1:␤------> [32msay (0.3 - 0.2) == (0.2 [33m⏏[31m− 0.1)[0m␤␤Parse failed␤␤»

[12:13] <p6eval> ..rakudo 978492: OUTPUT«===SORRY!===␤Unable to parse expression in parenthesized expression; couldn't find final ')' at line 2, near "0.2 \u2212 0.1)"␤»

[12:14] <azawawi> what do we use for prove in Perl 6?

[12:14] <brrt> rn: say 0.1 == 0.1

[12:14] <p6eval> rakudo 978492, niecza v22-14-g136ddcf: OUTPUT«True␤»

[12:14] <brrt> rn say 0.3 − 0.2 == 0.2 − 0.1

[12:14] <masak> azawawi: I usually use prove.

[12:14] <bbkr__> azawawi: prove :) 

[12:14] <tadzik> azawawi: I also use prove

[12:14] <bbkr__> "prove -e perl6"

[12:14] <brrt> rn: say 0.3 − 0.2 == 0.2 − 0.1

[12:14] <p6eval> niecza v22-14-g136ddcf: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Confused at /tmp/VPCLC9uQRs line 1:␤------> [32msay 0.3 [33m⏏[31m− 0.2 == 0.2 − 0.1[0m␤␤Parse failed␤␤»

[12:14] <p6eval> ..rakudo 978492: OUTPUT«===SORRY!===␤Confused␤at /tmp/1ufhJeej94:1␤»

[12:14] <tadzik> did I mention that it'd be lovely to have a TAP harness in Perl 6?

[12:15] <tadzik> it'd be lovely to have a TAP harness in Perl 6 :)

[12:15] <brrt> rn: my $x = 0.3 − 0.2;  my $y = 0.2 − 0.1; say $x == $y;

[12:15] <p6eval> rakudo 978492: OUTPUT«===SORRY!===␤Confused␤at /tmp/uKuLQLkGiJ:1␤»

[12:15] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Confused at /tmp/BO0DRt3BfU line 1:␤------> [32mmy $x = 0.3 [33m⏏[31m− 0.2;  my $y = 0.2 − 0.1; say $x == $y;[0m␤␤Parse failed␤␤»

[12:15] <brrt> whats so confusing abou tit

[12:15] <flussence> use ASCII symbols for subtraction

[12:15] <brrt> darn macintosh

[12:16] <azawawi> masak, bbkr__, tadzik: thx

[12:16] <jnthn> tadzik: Do that, then make a Dancer app to show the output, and call it TAP Dancer :D

[12:16] <brrt> (its true, by the way, yay)

[12:16] <tadzik> jnthn: oh you :D

[12:16] <brrt> rn: say 0.2 - 0.1 == 0.3 - 0.2;

[12:16] <p6eval> rakudo 978492, niecza v22-14-g136ddcf: OUTPUT«True␤»

[12:19] <bbkr__> do we have any p6 version of Devel::Cover in progress?

[12:19] *** orafu left
[12:19] <tadzik> none that I know o

[12:19] <tadzik> f

[12:22] <masak> given how much jnthn++ succeeded in hooking a debugger to the Rakudo runtime, I wouldn't be surprised if a Devel::Cover is eminently doable with what Rakudo has already.

[12:26] <pmurias> jnthn: what do you think would be a sane way to handle Q:PIR in nqp-js?

[12:27] <tadzik> outlaw it ;)

[12:28] *** tokuhiro_ joined
[12:28] <pmurias> having a mapping from known pir fragments to js seems one solution

[12:28] <pmurias> or turn it in a form which takes both a PIR and JS variation

[12:29] <brrt> what tadzik says

[12:30] <brrt> pir is ehm, > 1000 ops large? polymorphic, to boot

[12:31] <brrt> pir is mostly regarded as an Evil Monster

[12:32] <azawawi> do we have a firewall on feather.perl6.nl?

[12:32] <pmurias> brrt: pir fragments are used by rakudo

[12:33] <tadzik> azawawi: no port blocking, I think

[12:33] <brrt> pmurias: i know

[12:33] <brrt> pir fragments are also used by winxed and nqp

[12:33] *** atrodo joined
[12:34] <brrt> the existence of pir in nqp / rakudo is probably one of that hold it down the most

[12:34] <azawawi> tadzik: try http://feather.perl6.nl:3030/

[12:35] <tadzik> azawawi: doesn't seem to work

[12:36] <tadzik> http://feather.perl6.nl:3000/ is up though :)

[12:36] <azawawi> im using https://github.com/supernovus/perl6-http-easy/blob/master/lib/HTTP/Easy.pm6

[12:36] *** atrodo left
[12:36] <pmurias> brrt: there is a lot left so I doubt it harms nqp/rakudo a lot

[12:36] <pmurias> * isn't

[12:37] <brrt> not directly, but all rakudo is eventually compiled down to pir

[12:38] * pmurias is trying to change that with (rakudo,nqp)-js

[12:39] *** fhelmberger left
[12:43] <jnthn> pmurias: The goal is to mostly kill Q:PIR

[12:44] <jnthn> pmurias: I'd not worry about trying to implement it. I know we have tests for it.

[12:45] <GlitchMr> azawawi: have you bound the website to 127.0.0.1 instead of 0

[12:45] <jnthn> But those in the longer run probably want to be marked as NQP-on-Parrot specific or so

[12:45] <pmurias> ok

[12:45] <GlitchMr> I can access it directly from feather, but I cannot access outside

[12:45] <GlitchMr> So, I've feeling you bound it to 0 (IP), not 127.0.0.1

[12:46] <azawawi> GlitchMr: im looking at it

[12:49] *** PacoAir joined
[12:53] *** colomon left
[12:56] <masak> people in here, being Perl people, tend towards a liberal view on language design, and TIMTOWTDI rather than B&D, and "don't do that, then" rather than "users need to be protected from themselves".

[12:57] <masak> given that, does anyone have an example of when it's actually a good idea to restrict the option space, the way languages like Python and Java tend to?

[12:58] <moritz> well, pointers, segfault and GC come to mind

[12:59] <brrt> gc is basically the only good example i can think of

[12:59] <masak> GC seems like a really good idea for most kinds of HLL programming, yes.

[12:59] <pmurias> masak: use strict?

[13:00] *** testing123 joined
[13:00] <masak> pmurias: hm, I've always seen 'use strict' as "should have been in Perl 1..5 from the start". though I'm sure some would disagree.

[13:00] <masak> actually, I can hear the disagreeing arguments forming right now.

[13:00] * daxim gives masak an earful

[13:00] <masak> ;)

[13:01] *** testing123 left
[13:01] *** hash_table joined
[13:01] <masak> but the fact that there wasn't even any discussion whether to have 'use strict' in Perl 6... is saying something.

[13:01] <brrt> masak: i mean 'messing with GC' should probably not be a timtoady option

[13:01] <masak> right.

[13:02] <daxim> early perl as shell replacement mimicks some of its features - barewords as strings, shifting off argument lists

[13:02] <brrt> and yeah, strict

[13:02] <brrt> although i could argue about that

[13:02] <pmurias> masak: python isn't that much more restrictive

[13:02] <brrt> not restrictive per se

[13:02] <brrt> but it has a style of doing it

[13:02] <brrt> that is ehm

[13:02] <brrt> 'enforcing'

[13:03] <brrt> KeyError comes to mind

[13:03] * [Coke] is reminded to force all his JS at work to be strict.

[13:03] <brrt> if js had a strict mode it would be awesome

[13:03] <pmurias> it has

[13:04] <pmurias> just put a 'use strict'; on top of your script

[13:04] <brrt> i'm falling through the basket here

[13:04] <brrt> really?

[13:04] *** Psyche^ joined
[13:05] <masak> brrt: it's new in ES5.

[13:05] <masak> brrt: the quotes are part of the syntax.

[13:06] <brrt> well….

[13:06] <brrt> thats nice then

[13:06] <brrt> but with quotes?

[13:06] <masak> backwards-compatible, I guess.

[13:06] <pmurias> masak: re restricting the option space, there is Perl::Critic

[13:06] *** sizz left
[13:07] *** immortal joined
[13:07] *** immortal left
[13:07] *** immortal joined
[13:07] <masak> pmurias: oh, but with Perl::Critic, we're already talking community-enforced option narrowing. I meant specifically by the language itself.

[13:07] *** Patterner left
[13:07] <masak> s/enforced/guided/

[13:08] *** erkan left
[13:10] <daxim> es6 finally gets heredocs

[13:11] <pmurias> masak: type saftey is statically typed languages

[13:12] <pmurias> masak: the difference between community-enforced and language itself will be blurry in a mutable language like Perl 6

[13:12] *** sizz joined
[13:12] *** pmurias left
[13:14] *** cognominal__ left
[13:15] <bbkr__> r: use MONKEY_TYPING; augment class Int { multi method Str { } }; say 3 # dispatcher hangs forever. but I'm not sure if MONKEY_TYPING issues should be reported as bugs.

[13:16] <p6eval> rakudo 978492: OUTPUT«(timeout)»

[13:16] <moritz> bbkr__: if you don't return a Str from a method named Str, well, you fault :-)

[13:16] <moritz> *your

[13:16] <masak> oh dear, ES6 has destructuring assignment.

[13:17] <bbkr__> moritz: it doesn't reach method body

[13:18] <bbkr__> r: use MONKEY_TYPING; augment class Int { multi method Str returns Str { return "42" } }; say 3

[13:18] <p6eval> rakudo 978492: OUTPUT«(timeout)»

[13:18] *** cognominal__ joined
[13:19] *** colomon joined
[13:21] *** immortal left
[13:22] *** imarcusthis- left
[13:22] *** birdwindupbird left
[13:23] *** SamuraiJack left
[13:23] *** imarcusthis joined
[13:25] <azawawi> now this is interesting

[13:25] <azawawi> IO::Socket::INET does not seem to work properly

[13:25] *** SamuraiJack joined
[13:25] <azawawi> only local addresses work...

[13:29] * azawawi walk &

[13:31] *** cosimo joined
[13:32] *** cosimo left
[13:34] *** azawawi left
[13:34] *** cognominal__ left
[13:35] *** birdwindupbird joined
[13:40] <moritz> bbkr__: it might create an ambiguous dispatch, and loop during error reporting, because again it tries to do an Int -> Str conversion

[13:40] *** tokuhiro_ left
[13:40] <moritz> r: use MONKEY_TYPING; augment class Int { method Str { '42' } }; say 3

[13:40] <p6eval> rakudo 978492: OUTPUT«===SORRY!===␤Package 'Int' already has a method 'Str' (did you mean to declare a multi-method?)␤at /tmp/f0vh6rDi1I:1␤»

[13:41] *** tokuhiro_ joined
[13:41] *** am0c joined
[13:42] <bbkr__> phenny: tell azawawi that to use non-local addresses in IO::Socket::INET listener empty host can be given, my $listener = IO::Socket::INET.new( localhost => '', localport => 8080, :listen );

[13:42] <phenny> bbkr__: I'll pass that on when azawawi is around.

[13:42] *** FROGGS left
[13:43] *** erkan joined
[13:43] *** erkan left
[13:43] *** erkan joined
[13:45] *** tokuhiro_ left
[13:45] *** am0c left
[13:45] *** cognominal joined
[13:45] *** benabik left
[13:45] *** flightrecorder left
[13:49] *** am0c joined
[13:51] *** hash_table left
[13:52] *** wamba left
[13:54] *** wamba joined
[13:57] <dalek> perl6-examples: 8c1c641 | (Gerhard R)++ | euler/prob003-gerdr.pl:

[13:57] <dalek> perl6-examples: [euler/prob003] add more 6ish version that works with current Rakudo

[13:57] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/8c1c64158d

[13:57] *** SamuraiJack_ joined
[14:01] *** SamuraiJack left
[14:01] *** kaare_ joined
[14:04] *** stopbit joined
[14:11] *** sqirrel left
[14:16] *** flightrecorder joined
[14:16] <dalek> perl6-examples: 9bfc150 | (Gerhard R)++ | euler/prob002-gerdr.pl:

[14:16] <dalek> perl6-examples: [euler/prob002] add version using sequence operator

[14:16] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/9bfc15085d

[14:19] *** PacoAir left
[14:19] *** FROGGS joined
[14:19] *** cosimo joined
[14:21] <GlitchMr> :-)

[14:22] *** PacoAir joined
[14:23] *** havenn joined
[14:26] *** arlinius joined
[14:28] *** FROGGS left
[14:29] *** flightrecorder left
[14:31] *** PacoAir left
[14:34] *** cognominal left
[14:34] <masak> haha, there's a Polish village called Dąg. :D

[14:34] <masak> now I don't know whether to make a joke about acyclic graphs, or just say "yo Dąg"...

[14:36] * sjn wonders how Dąg would be pronounced

[14:36] <masak> sjn: quite close to "dong", I think.

[14:37] <masak> with a French-nasal thing going on with the 'on' sound.

[14:37] <masak> maybe "dawng" is a better rendering of it.

[14:37] * sjn first assumed that the a had a cedilla

[14:38] <sjn> but I see it goes the opposite way

[14:38] <masak> yeah. it's an ogonek.

[14:38] <masak> a "little tail".

[14:39] <daxim> wait until you find out about the difference between acute and kreska.  typographic mind == blown

[14:40] <daxim> also, fuck the unicode consortium, never something good came out of glyph unification

[14:40] <huf> kreska?

[14:41] <masak> https://en.wikipedia.org/wiki/Kreska#Palatalization

[14:41] <masak> "In traditional Polish typography, the kreska is more nearly vertical than the acute accent, and placed slightly right of center."

[14:42] <masak> I've seen this, when looking at old writing on statues and stuff with tadzik.

[14:42] *** hash_table joined
[14:42] <huf> /o\

[14:43] * sjn shudders in horror

[14:43] <huf> this seems worse than our mess

[14:44] *** cosimo left
[14:45] <daxim> h̋űf̋

[14:45] *** am0c_ joined
[14:45] *** brrt left
[14:46] *** xinming_ joined
[14:46] <huf> yeah, double-acute at least doesnt look like anything else... of course, in fast cursive writing, both the double-dot and the double-acute become a single vertical line placed above the letter, so at least it's finally ambiguous :)

[14:46] *** am0c left
[14:49] *** xinming left
[14:49] *** skids joined
[14:50] <masak> nrp: unless 2 { say "not two" } else { say "two!" }

[14:50] <p6eval> rakudo 978492: OUTPUT«===SORRY!===␤"unless" does not take "else", please rewrite using "if"␤at /tmp/VMjpRqUhCS:1␤»

[14:50] <p6eval> ..pugs: OUTPUT«*** ␤    Unexpected end of input␤    no else after unless␤    at /tmp/afzzS_uCxI line 2, column 1␤»

[14:50] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤"unless" does not take "else" in Perl 6; please rewrite using "if" at /tmp/ZqNAKbDsBD line 1:␤------> [32munless 2 { say "not two" } [33m⏏[31melse { say "two!" }[0m␤␤Parse failed␤␤»

[14:50] <masak> :)

[14:52] *** am0c_ left
[14:55] <masak> nr: my %l = <a b b c c d b e e f f d>; say (push (my %), %l.invert).per

[14:55] <p6eval> niecza v22-14-g136ddcf: OUTPUT«Unhandled exception: Unable to resolve method per in type Hash␤  at /tmp/WaO6gX9fac line 1 (mainline @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4215 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4216 (module-CORE @ 579) ␤  at /home/p…

[14:55] <masak> nr: my %l = <a b b c c d b e e f f d>; say (push (my %), %l.invert).perl

[14:55] <p6eval> ..rakudo 978492: OUTPUT«No such method 'per' for invocant of type 'Hash'␤  in block  at /tmp/AVvCY6UxjI:1␤␤»

[14:55] <p6eval> rakudo 978492: OUTPUT«("b" => "a", "e" => "b", "d" => ["c", "f"], "f" => "e").hash␤»

[14:55] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«{"b" => "a", "d" => ["c", "f"], "e" => "b", "f" => "e"}␤»

[14:55] *** MikeFair_ left
[14:57] *** brrt joined
[15:01] *** jimmy1980 joined
[15:01] *** Su-Shee left
[15:01] *** benabik joined
[15:04] *** am0c_ joined
[15:04] *** benabik left
[15:04] *** benabik joined
[15:06] *** Psyche^ is now known as Patterner

[15:08] *** cosimo joined
[15:10] *** wamba left
[15:11] *** jimmy1980 left
[15:12] *** MikeFair_ joined
[15:13] *** jimmy1980 joined
[15:14] *** Su-Shee joined
[15:23] *** domidumont left
[15:31] *** brrt left
[15:36] *** benabik_ joined
[15:37] *** benabik left
[15:37] *** benabik_ left
[15:38] *** benabik joined
[15:39] *** birdwindupbird left
[15:45] *** thou joined
[15:47] *** cognominal joined
[15:49] *** hoelzro is now known as hoelzro|away

[15:49] *** birdwindupbird joined
[15:58] *** flightrecorder joined
[16:00] *** pmurias joined
[16:02] *** awwaiid_ left
[16:04] *** simcop2387 left
[16:05] *** simcop2387 joined
[16:06] *** hoelzro|away is now known as hoelzro

[16:06] *** bluescreen10 joined
[16:07] *** huf left
[16:07] *** huf joined
[16:09] *** cosimo left
[16:11] *** hoelzro is now known as hoelzro|away

[16:12] *** awwaiid joined
[16:17] *** pmurias left
[16:18] *** MayDaniel joined
[16:19] *** fgomez joined
[16:22] *** FROGGS joined
[16:34] *** kaleem left
[16:36] *** aindilis joined
[16:39] *** wamba joined
[16:43] *** fgomez left
[16:48] *** cognominal left
[16:50] *** fgomez joined
[16:55] *** cognominal joined
[16:56] *** dakkar left
[16:58] *** birdwindupbird left
[17:01] *** preflex left
[17:01] *** preflex_ joined
[17:02] *** preflex_ is now known as preflex

[17:03] *** circlepuller left
[17:05] *** circlepuller joined
[17:08] *** PacoAir joined
[17:13] *** spider-mario joined
[17:16] <sorear> good * #perl6

[17:16] <FROGGS> hi sorear

[17:16] <diakopter> o/

[17:18] <grondilu> rn: say map *, ^3 X* ^3

[17:18] <p6eval> rakudo 978492: OUTPUT«Cannot call 'map'; none of these signatures match:␤:(&code, *@values)␤␤  in block  at /tmp/eEM1KrITqJ:1␤␤»

[17:18] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«␤»

[17:19] <grondilu> rn: say map *, (^3 X* ^3)

[17:19] <p6eval> niecza v22-14-g136ddcf: OUTPUT«Unhandled exception: Unable to resolve method postcircumfix:<( )> in type Whatever␤  at <unknown> line 0 (KERNEL map @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 2443 (GatherIterator.reify @ 6) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at <unknow…

[17:19] <p6eval> ..rakudo 978492: OUTPUT«Cannot call 'map'; none of these signatures match:␤:(&code, *@values)␤␤  in block  at /tmp/PnhvH38_A0:1␤␤»

[17:19] <grondilu> I don't get it

[17:19] <TimToady> * is not code

[17:19] <phenny> TimToady: 21 Oct 01:13Z <[Coke]> ask TimToady to comment on https://rt.perl.org/rt3/Ticket/Display.html?id=63778 (marked as a spec ticket)

[17:19] <masak> grondilu: you write '*' but you probably mean '{ $_ }'

[17:20] *** Targen left
[17:20] <masak> grondilu: consider it a corner case; lots of expressions involving '*' turn into lambdas, but '*' itself is not a lambda.

[17:20] <TimToady> nor is 0..*

[17:21] <grondilu> ok

[17:22] *** SmokeMachine joined
[17:23] <diakopter> rn: say map * * *, ^3 X* ^3

[17:23] <p6eval> rakudo 978492: OUTPUT«Cannot call 'map'; none of these signatures match:␤:(&code, *@values)␤␤  in block  at /tmp/lgZ04XpmTy:1␤␤»

[17:23] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«␤»

[17:24] *** am0c_ left
[17:24] <TimToady> precedence

[17:24] <TimToady> the X eats the * * *

[17:24] *** hoelzro|away is now known as hoelzro

[17:25] <TimToady> rn: say map * * * <== ^3 X* ^3

[17:25] <p6eval> rakudo 978492: OUTPUT«0 0 0 0 1 2 0 2 4␤»

[17:25] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«␤Unhandled exception: Feed ops NYI␤  at /home/p6eval/niecza/lib/CORE.setting line 1443 (die @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3362 (infix:<<==> @ 4) ␤  at /tmp/_Kf8cgsFNB line 1 (mainline @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting l…

[17:49] *** Chillance joined
[18:15] *** wamba left
[18:15] *** wamba joined
[18:16] *** SamuraiJack_ left
[18:17] *** SamuraiJack joined
[18:18] *** SamuraiJack left
[18:19] *** xinming_ left
[18:19] *** SamuraiJack joined
[18:21] *** havenn left
[18:22] *** havenn joined
[18:22] *** sivoais left
[18:22] *** xinming joined
[18:23] *** daxim left
[18:24] *** cosimo joined
[18:26] *** havenn left
[18:27] <rindolf> Hi all.

[18:30] *** Targen joined
[18:33] *** havenn joined
[18:34] *** domidumont joined
[18:38] *** sivoais joined
[18:40] *** havenn left
[18:40] *** havenn joined
[18:42] *** hoelzro is now known as hoelzro|away

[18:43] <masak> rindolf! \o/

[18:44] *** havenn left
[18:44] *** havenn joined
[18:44] <rindolf> masak: what's up?

[18:50] <masak> roof, atmosphere, outer space.

[18:50] *** SamuraiJack left
[18:50] <jnthn> Atmosphere and outer space is down as well if you go far enough. :P

[18:51] <masak> well, I wasn't asked about that.

[18:52] <PerlJam> when faced with the query "What's up?" it's prudent to first ask "Relative to what?" before offering an answer  :)

[18:55] *** hoelzro|away is now known as hoelzro

[18:55] *** havenn left
[18:57] *** havenn joined
[18:57] *** nyuszika7h left
[18:59] *** nyuszika7h joined
[18:59] * [Coke] used to participate in a group whose rallying cry was "WHICH WAY IS UP!?" at which point every able bodied person would point straight up, jump into the air, and yell "UP!"

[18:59] *** snearch left
[19:00] *** havenn left
[19:03] * grondilu is looking at http://projecteuler.net/problem=7:  "What is the 10 001st prime number?"

[19:03] <GlitchMr> is-prime grep?

[19:04] <grondilu> I wonder how hard it would be to create a lazy list of prime numbers.

[19:04] <moritz> nr: say (2..*).grep(*.is-prime)[10_000]

[19:05] <GlitchMr> Perhaps it could be memoized for .grepping like that?

[19:05] <p6eval> rakudo 978492, niecza v22-14-g136ddcf: OUTPUT«(timeout)»

[19:05] <jnthn> r: say (grep *.is-prime, 1..*)[100]

[19:05] <p6eval> rakudo 978492: OUTPUT«547␤»

[19:05] <jnthn> I guess 10000 takes longer :)

[19:05] <moritz> 9 seconds on rakudo for 1k

[19:06] <jnthn> grondilu: grep *.is-prime, 1..* # is a lazy list of the primes :)

[19:07] <grondilu> yeah but it's kind of cheating

[19:07] <moritz> cheating is technique

[19:08] <grondilu> also, I doubt it is an efficient way to do it.

[19:08] <moritz> $ time ./perl6 -e 'say (2..*).grep(*.is-prime)[10_000]'

[19:08] <moritz> 104743

[19:08] <moritz> real    2m17.111s

[19:08] <PerlJam> I have some wood, nails, a rock and a hammer.   Is it cheating to use the hammer rather than the rock to drive the nails into the wood?  ;)

[19:08] <grondilu> some time ago I tried to implement a lazy version of Eratosthene siever.  I failed.

[19:09] <moritz> that's not well suitable for laziness

[19:09] <sorear> .oO( what's up?  I dunno, I live on a space station )

[19:13] <masak> sorear! \o/

[19:14] <skids> http://en.wikipedia.org/wiki/Prime_number_theorem#Approximations_for_the_nth_prime_number

[19:14] <moritz> sorear: how big is the lag on your space station?

[19:16] <sorear> :p

[19:17] <sorear> masak!

[19:17] *** domidumont left
[19:20] * masak .oO( on my space station, I once caught a lag this big )

[19:22] <dalek> rakudo/categorically-better: 503d19c | jnthn++ | src/core/traits.pm:

[19:22] <dalek> rakudo/categorically-better: Sketch precedence trait implementations.

[19:22] <dalek> rakudo/categorically-better: 

[19:22] <dalek> rakudo/categorically-better: Adds equiv, looser, tighter, assoc.

[19:22] <dalek> rakudo/categorically-better: review: https://github.com/rakudo/rakudo/commit/503d19c8b3

[19:22] <dalek> rakudo/categorically-better: 54ce622 | jnthn++ | src/Perl6/ (2 files):

[19:22] <dalek> rakudo/categorically-better: Have parser pay attention to precedence traits.

[19:22] <dalek> rakudo/categorically-better: review: https://github.com/rakudo/rakudo/commit/54ce622040

[19:22] <dalek> rakudo/categorically-better: 0faf6fa | jnthn++ | src/core/operators.pm:

[19:22] <dalek> rakudo/categorically-better: Attach precedence info to a bunch of operators.

[19:22] <dalek> rakudo/categorically-better: 

[19:22] <dalek> rakudo/categorically-better: Not beautiful, but doing it this way due to some circularity sawing

[19:22] <dalek> rakudo/categorically-better: issues.

[19:22] <dalek> rakudo/categorically-better: review: https://github.com/rakudo/rakudo/commit/0faf6fa5c1

[19:26] * masak is intrigued by what this branch can give us

[19:27] <jnthn> masak: So far, proper mix-in based hanlding of user defined operators, precedence traits, and a slight slowdown to CORE.setting build and the spectest...

[19:28] <sorear> rn: { sub infix:<@>($,$) {} }; 2 @ 3

[19:28] <p6eval> rakudo 978492: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&infix:<@>' called (line 1)␤»

[19:28] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Confused at /tmp/4iYGlkuVU4 line 1:␤------> [32m{ sub infix:<@>($,$) {} }; 2 [33m⏏[31m@ 3[0m␤Other potential difficulties:␤  &infix:<@> is declared but not used at /tmp/4iYGlkuVU4 line 1:␤------> [32m{ sub infix:<@>[33…

[19:28] <sorear> masak ^^^

[19:28] <jnthn> In my branch

[19:28] <jnthn> > { sub infix:<@>($,$) {} }; 2 @ 3

[19:28] <jnthn> Confused

[19:28] <jnthn> \o/

[19:29] <jnthn> r: { sub infix:<++>($,$) { 99 }; say 1 ++ 2 }; say 1 ++ 2

[19:29] <p6eval> rakudo 978492: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&infix:<++>' called (line 1)␤»

[19:29] <jnthn> > { sub infix:<++>($,$) { 99 }; say 1 ++ 2 }; say 1 ++ 2

[19:29] <jnthn> 99

[19:29] <jnthn> 3

[19:29] <diakopter> _._.

[19:30] <sjn> what syntax does one use to create new metaoperators?

[19:31] <jnthn> Also

[19:31] <jnthn> > sub infix:<bar>($a, $b) is equiv(&infix:<**>) { 100 }; say 2 bar 3 * 4;

[19:31] <jnthn> 400

[19:31] <jnthn> sjn: Um...can you do that? :)

[19:31] <sjn> jnthn: I'm asking :)

[19:31] * sjn would almost assume it :)

[19:31] <sorear> sjn: sub infix_prefix_meta_operator:sym<Q>(...) {...}

[19:31] <jnthn> sjn: I ain't seen it done. I'm not sure if they're "just a declaration"

[19:32] <jnthn> Can probably be made to work I guess.

[19:33] <sorear> sjn: The syntax is specced, the semantics aren't.

[19:33] <sorear> we're going to have to decide someday what the signatures for metaops should be

[19:34] <sorear> probably things will be clearer after masak++ finishes the parsed macro subsystem

[19:37] *** havenn joined
[19:38] *** havenn left
[19:39] *** azawawi joined
[19:39] <azawawi> hi

[19:39] <phenny> azawawi: 13:42Z <bbkr__> tell azawawi that to use non-local addresses in IO::Socket::INET listener empty host can be given, my $listener = IO::Socket::INET.new( localhost => '', localport => 8080, :listen );

[19:40] <azawawi> bbkr__: thx

[19:40] <azawawi> bbkr__: it works

[19:40] <azawawi> bbkr__++

[19:40] *** sivoais left
[19:41] *** larks joined
[19:41] *** sivoais joined
[19:43] *** havenn joined
[19:43] <dalek> panda/custom-lib: 109e54c | moritz++ | rebootstrap.pl:

[19:43] <dalek> panda/custom-lib: switch rebootstrap to %*CUSTOM_LIB

[19:43] <dalek> panda/custom-lib: review: https://github.com/tadzik/panda/commit/109e54c77f

[19:44] <moritz> tadzik: IMHO, custom-lib is ready for merging; testing/feedback welcome

[19:44] <tadzik> moritz: I'll take a look, thanks

[19:45] <azawawi> tadzik: hi

[19:45] <azawawi> tadzik: any update on the installation of non-perl shared files by panda?

[19:46] <tadzik> azawawi: no updates, sorry :(

[19:47] *** havenn left
[19:53] *** hoelzro is now known as hoelzro|away

[19:56] *** havenn joined
[20:04] *** simcop2387 is now known as SIMCOP2387

[20:04] *** timbunce_ left
[20:06] <azawawi> http://feather.perl6.nl:3030/   # Feedback welcome :)

[20:06] <tadzik> niice

[20:06] <tadzik> how much of that is Perl 6?

[20:06] <jnthn> Pro tip: before investigating why your changes inexplicably slowed stuff down a lot, first make sure it's not a case of Flash Plug-in Gone Wild. :/

[20:07] <azawawi> tadzik: basically js editor library + perl 6 backend

[20:08] <rindolf> Is feather active again?

[20:08] *** timbunce joined
[20:08] <rindolf> azawawi: it seems pretty slow.

[20:08] <azawawi> tadzik: i still have to write a perl 6 mode client-side mode and show inline std/viv errors

[20:08] <azawawi> rindolf: yeah... perl6 :)

[20:08] <rindolf> azawawi: well, I cannot seem to load it.

[20:08] <rindolf> Oh.

[20:08] *** GlitchMr left
[20:09] <masak> azawawi: mine timed out. :/

[20:09] *** FROGGS left
[20:09] *** flightrecorder left
[20:10] <azawawi> normal.. it is using http::easy

[20:10] <rindolf> azawawi: it's down now.

[20:10] <azawawi> still needs tuning

[20:11] *** kaare_ left
[20:12] <azawawi> and pod2html uses a single temp file. so multi-user can screw results a bit

[20:17] <dalek> rakudo/categorically-better: 1cb742a | jnthn++ | src/Perl6/Grammar.pm:

[20:17] <dalek> rakudo/categorically-better: Scope changes to actions also.

[20:17] <dalek> rakudo/categorically-better: 

[20:17] <dalek> rakudo/categorically-better: Custom circumfixes generate action methods. Refactor this to also be

[20:17] <dalek> rakudo/categorically-better: handled by mixins, so the changes are properly scoped.

[20:17] <dalek> rakudo/categorically-better: review: https://github.com/rakudo/rakudo/commit/1cb742ae33

[20:25] *** havenn left
[20:25] <rindolf> azawawi: where is the source for Farabi?

[20:26] *** bruges_ left
[20:26] <azawawi> rindolf: https://github.com/azawawi/farabi6

[20:27] <azawawi> http://feather.perl6.nl:3030/  # disabled auto update pod2html

[20:28] *** bruges joined
[20:30] <PerlJam> What's this "categorically-better" branch all about?

[20:30] *** stopbit left
[20:31] <rindolf> How do I install the "perl6" executable into the path properly?

[20:31] <masak> PerlJam: improvements in the parsing of grammatical categories a la S02.

[20:31] <jnthn> PerlJam: Making categoricals better.

[20:32] <jnthn> PerlJam: Part STD/spec convergence, part cleanup of mess, part new features.

[20:32] <jnthn> And it also made me shave the nqpattr yak

[20:33] <azawawi> masak: it is working again... I hope it stays up this time :)

[20:33] <PerlJam> jnthn++  nice.

[20:34] *** average_drifter joined
[20:34] <average_drifter> hey #perl6

[20:34] <diakopter> hi average_drifter 

[20:35] <PerlJam> average_drifter: greetings!

[20:35] <average_drifter> wassup ?

[20:35] <average_drifter> concurrency implemented ?

[20:35] <PerlJam> average_drifter: apparently jnthn is continuing to improve rakudo at a steady pace.

[20:36] <average_drifter> I like jnthn because he has that awesome beard :)

[20:36] *** havenn joined
[20:36] <average_drifter> I wonder if he's working on the concurrency part of rakudo

[20:36] <masak> azawawi: yes, I just noticed. nice!

[20:37] <masak> azawawi++

[20:37] <sorear> rakudo does not have a concurrency part

[20:37] <average_drifter> Parrot then

[20:37] <jnthn> Rakudo won't have a concurrency part until it runs on something other than Parrot. Which I'm working towards making happen, 'cus I'd very much like it to have a concurrency part. :)

[20:38] <jnthn> Unless Parrot magically gets working threading stuff...

[20:38] <sorear> "Didn't you see that rurban merged threads last month?"

[20:38] <average_drifter> ok so you guys are moving away from Parrot. do you target LLVM by any chance ?

[20:38] <jnthn> sorear: I...thought that the branch got unmerged?

[20:38] <diakopter> LLVM's not a VM

[20:38] <sorear> jnthn: I did. ""

[20:38] <average_drifter> diakopter: whatever it is

[20:39] <jnthn> average_drifter: Not so much "moving away" as "adding backends"

[20:39] <azawawi> masak: next stop is going to be std/viv Farabi integration (better inline error messages) and then ability to run rakudo perl6 scripts 

[20:39] <average_drifter> it a compiler backend or something like that. not sure if it has anything to do with interpretors

[20:39] <jnthn> average_drifter: Rakudo these days is mostly written in Perl 6 and NQP.

[20:39] <diakopter> average_drifter: no, :) no one's written a GC, object system, or compiler for LLVM

[20:39] <PerlJam> average_drifter: Perl is all about adding options, not taking them away (at least not without a *real* *good* reason)

[20:40] <tadzik> jnthn: parrot has working threading stuff

[20:40] <tadzik> it's perl6/nqp that's failing

[20:40] <jnthn> tadzik: That wasn't my recollection from trying to use it.

[20:40] <sorear> average_drifter: we don't use LLVM directly

[20:40] <tadzik> parrot-nqp works

[20:40] *** kurahaupo joined
[20:40] <masak> azawawi: cool.

[20:40] *** havenn left
[20:40] <sorear> average_drifter: if you really care about using LLVM (why?), Niecza can use it indirectly

[20:41] <average_drifter> sorear: good question. "Why use LLVM ?"

[20:41] <masak> kurahaupo: I read the nick "kurahaupo" and thought "hm, that sounds like a Maori name", and then I saw the .co.nz server, and was happy about the guess :)

[20:41] <PerlJam> LLVM has good buzz-word appeal

[20:41] <sorear> average_drifter: um, it's YOUR fault llvm was brought up

[20:41] <kurahaupo> masak: :-)

[20:42] <average_drifter> sorear: I don't know.. uhm... because it's fairly mainstream compared to Parrot, and there's a lot of big names involved in funding it

[20:42] <rindolf> tadzik: https://github.com/tadzik/panda/pull/22

[20:42] <average_drifter> sorear: and that means stable development for a lot of time to go

[20:42] <PerlJam> average_drifter: like I said ... buzz-word appeal

[20:42] <average_drifter> so piggybacking on LLVM would be no mistake

[20:42] <sorear> average_drifter: llvm and parrot are incomparable

[20:42] <tadzik> rindolf: cool, thanks

[20:42] <dalek> panda: 4100e44 | (Shlomi Fish)++ | README.md:

[20:42] <dalek> panda: Remove trailing space and fix a typo.

[20:42] <dalek> panda: review: https://github.com/tadzik/panda/commit/4100e4434c

[20:42] <dalek> panda: e850e42 | tadzik++ | README.md:

[20:42] <dalek> panda: Merge pull request #22 from shlomif/master

[20:42] <dalek> panda: 

[20:42] <dalek> panda: Remove trailing space and fix a typo.

[20:42] <dalek> panda: review: https://github.com/tadzik/panda/commit/e850e42388

[20:42] <diakopter> average_drifter: but there's really nothing in parrot that has anything to do with LLVM, and vice versa

[20:42] <rindolf> tadzik++

[20:42] <average_drifter> tadzik: you said you are using LLVM but indirectly

[20:43] <sorear> average_drifter: there's lots of big names funding CDMA, let's piggyback on that!

[20:43] <average_drifter> tadzik: what layer is in between LLVM and Rakudo ?

[20:43] <tadzik> average_drifter: I am? No, I'm not :)

[20:43] <average_drifter> tadzik: or uhm Niecza ?

[20:43] <average_drifter> 23:40 < sorear> average_drifter: we don't use LLVM directly

[20:43] <average_drifter> oh sorear wrote that

[20:43] <tadzik> I'm not sorear :)

[20:43] <sorear> average_drifter: I have met tadzik, I can assure you he is not me

[20:43] * diakopter neither

[20:43] <average_drifter> sorear: is there a layer in between ? 

[20:43] <sorear> average_drifter: yes, Mono

[20:43] <tadzik> yeah, the atlantic ocean

[20:43] <tadzik> (ha ha)

[20:43] <average_drifter> Mono ?

[20:43] <diakopter> a VM

[20:44] <Tene> I have not met tadzik; I can not assure you that he is not me.

[20:44] <sorear> http://mono-project.com/Main_Page

[20:44] <Tene> I've been confused with tadzik several times.

[20:44] <average_drifter> yeah I know what Mono is.. I was just..

[20:44] <average_drifter> anyway

[20:44] <average_drifter> so concurrency is working in Mono I guess

[20:44] <sorear> yes

[20:45] <average_drifter> that's cool

[20:45] <diakopter> average_drifter: note, niecza is not rakudo, in case you thought so

[20:45] <rindolf> tadzik: ==> Succesfully installed panda ==> to where?  I cannot find it in my path.

[20:45] <rindolf> Tene: hi.

[20:45] <tadzik> rindolf: ~/.perl6

[20:45] <rindolf> tadzik: oh.

[20:46] <Tene> rindolf: hello

[20:46] <masak> I have met sorear and tadzik, so I can assure you that I am neither of them. I'm not as certain about Tene. maybe I'm him, maybe not. :P

[20:46] <masak> though experience tells me that I'm more likely to be one of my six clones.

[20:46] <rindolf> tadzik: can I set it to a different path?

[20:46] <average_drifter> symbolic links of other people...

[20:46] <rindolf> Tene: what's new? Long time.

[20:46] <masak> sorry, seven clones.

[20:46] <tadzik> rindolf: I think DESTDIR works

[20:46] <rindolf> tadzik: ah, OK.

[20:47] *** fgomez left
[20:47] <sorear> I have met masak and tadzik at the same time.  I can confirm they are distinct.

[20:48] <masak> though confusing the limits between me and tadzik would be quite awesome. just sayin'.

[20:48] <masak> uh. that could be read as innuendo. it wasn't meant that way. :) just being silly.

[20:49] <PerlJam> sure. sure.

[20:49] * Tene flattered to be potentially masak.

[20:49] <masak> Tene: right back at you.

[20:49] <rindolf> azawawi: Could not find URI::Escape in any of: /home/shlomif/.panda/src/Farabi6/blib/lib, /home/shlomif/.panda/src/Farabi6/lib, , /home/shlomif/.perl6/lib, /home/shlomif/Download/unpack/perl/Perl6/rakudo/install/lib/parrot/4.8.0-devel/languages/perl6/lib - when doing panda install Farabi6

[20:49] <PerlJam> Tene: If we had a potentiometer, we could tell how much masakness you might have.

[20:50] *** japhb_ joined
[20:50] * Tene variably resists the electronics puns.

[20:50] <japhb_> Seek not merely to *act* like the masak, seek to *be* the masak.

[20:50] * sorear blinks

[20:51] * PerlJam waits for the "I am masak!" proclamations

[20:51] * masak !

[20:52] *** havenn joined
[20:52] <masak> matters of identity are always interesting.

[20:52] <PerlJam> (or perhaps at some point we'll get "I am the masak" with music by the Beatles)

[20:52] <sorear> I'm not.  I'm much louder.

[20:53] <masak> hey, I'm Swedish. we're built with the volume turned down to 2.

[20:53] <japhb_> Also, I rarely wear a towel on my head.

[20:53] <rindolf> Heh.

[20:53] <azawawi> rindolf: Strange. What rakudo version are you using? 

[20:53] <rindolf> Will the real masak please stand up?

[20:54] <rindolf> azawawi: a bit oldish.

[20:54] <rindolf> azawawi: I can try upgrading.

[20:54] <TimToady> which way is "up? this time?

[20:54] <TimToady> *"up"

[20:54] <azawawi> rindolf: rakudo 2012.09 already includes URI

[20:54] <rindolf> azawawi: OK.

[20:55] <diakopter> average_drifter: have you considered contributing to the p6 efforts?

[20:55] <rindolf> azawawi: shouldn't you spell all the dependencies explicitly?

[20:55] <azawawi> rindolf: but i added it now to META.info. thx

[20:55] <japhb_> In an absolute frame of reference, I think masak's "up" is my "sideways"

[20:55] <rindolf> azawawi: you're welcome.

[20:56] *** bapa left
[20:56] <azawawi> rindolf: panda installation is still not 100% correct since it doesnt copy no-perl stuff in lib/XYZ/

[20:56] <rindolf> azawawi: OK.

[20:58] *** bapa joined
[20:58] <rindolf> azawawi: I am now given « ===SORRY!=== Missing or wrong version of dependency 'src/gen/BOOTSTRAP.p' »

[21:00] *** MayDaniel left
[21:01] <azawawi> rindolf: perl6 --version ?

[21:01] <rindolf> This is perl6 version 2010.08-4941-ge883e01 built on parrot 4.8.0 revision RELEASE_4_8_0

[21:01] <rindolf> Hmmm... I didn't git pull

[21:04] <sorear> japhb_: can't get too absolute, or Lense and Thirring will come a-knockin...

[21:04] *** skids left
[21:08] <rindolf> Hmmm... I did a git pull on nom and I'm still getting This is perl6 version 2010.08-4941-ge883e01 built on parrot 4.8.0 revision RELEASE_4_8_0

[21:09] *** spider-mario left
[21:10] *** hash_table left
[21:10] <rindolf> OK, apparently I have a commit from 2010 at the top of git log and it messes things up.

[21:10] <rindolf> I think.

[21:14] * TimToady reorients to Moscow "up" for an hour or so...

[21:15] <japhb_> rindolf, yeah, ~5K commits from 2010 seems a very odd place for 'git describe' to decide is nearest.

[21:15] <rindolf> japhb_: it's my commit.

[21:15] <rindolf> japhb_: which wasn't merged yet.

[21:16] <rindolf> japhb_: and was rebased or something like that.

[21:16] <japhb_> Ah

[21:16] <flussence> the "4941" indicates 2 years of missing tags

[21:17] <japhb_> flussence, as I understand it, just 2 years of tags not in the current branch.

[21:17] <average_drifter> diakopter: I have considered a lot

[21:17] <average_drifter> diakopter: the truth is that it's not easy

[21:17] <flussence> sounds like a rebase is slightly overdue...

[21:19] <average_drifter> diakopter: documentation is key, and I'm not saying that it's lacking, it's just not the easy kind of documentation that gets you right into it

[21:19] <jnthn> 'night

[21:19] <average_drifter> I'm also a bit concerned about the huge quantity of operators to remember

[21:19] <rindolf> jnthn: night night.

[21:19] <average_drifter> and I'm writing Perl5 on a regular basis..

[21:20] <average_drifter> not sure if that is relevant.. but uhm.. yeah

[21:20] *** fgomez joined
[21:20] <masak> '♞, #perl6.

[21:21] <diakopter> average_drifter: I think it's very relevant; thanks for the info

[21:22] <rindolf> azawawi: I'm still getting Missing or wrong version of dependency 'src/gen/BOOTSTRAP.pm'

[21:22] <rindolf> git pulled now.

[21:22] <average_drifter> diakopter: are you concerned with documentation too ?

[21:23] <average_drifter> diakopter: or are you the one writing some of it ?

[21:23] *** PacoAir left
[21:24] <average_drifter> ok let me show you what I mean

[21:24] <diakopter> average_drifter: I would love to see more guides, tutorials, cookbooks, and blogs about real world uses

[21:24] <average_drifter> ever seen codecademy.com ?

[21:24] *** benabik left
[21:24] <diakopter> no

[21:24] <average_drifter> well check it out

[21:25] <diakopter> there are a bunch of sites like that

[21:25] <average_drifter> yes there are

[21:25] <diakopter> *is

[21:25] <average_drifter> but are there any for p6 ?

[21:25] <average_drifter> :)

[21:25] <average_drifter> it's really a good way to attract people

[21:25] <diakopter> there was try.rakudo.org, but no more

[21:25] <diakopter> wait

[21:25] <diakopter> try.pugscode.org ?

[21:25] <diakopter> I don't remember

[21:26] <average_drifter> yes but you see.. try.rakudo.org or the other one

[21:26] <average_drifter> they both were just in-browser interpreters

[21:26] <diakopter> no

[21:26] <average_drifter> were they like codecademy ?

[21:26] <diakopter> they posted code to the server

[21:26] <average_drifter> yeah, that matters less, bottom line was you could run code you wrote in the browser and get the output back

[21:27] <diakopter> right, they didn't have interactive tutorials/guids

[21:27] <diakopter> guides

[21:27] <average_drifter> except codecademy is about lessons also, and learning is split up in bite-size little chunks which you absorb progressively

[21:27] <average_drifter> yeah

[21:27] <average_drifter> that's what I mean

[21:28] *** cognominal left
[21:32] <dalek> perl6-examples: 0403454 | (Gerhard R)++ | euler/prob003-gerdr (2 files):

[21:32] <dalek> perl6-examples: [euler/prob003] add version using .is-prime

[21:32] <dalek> perl6-examples: 

[21:32] <dalek> perl6-examples: align code of existing one to new version

[21:32] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/0403454ed5

[21:35] *** cognominal joined
[21:36] <rindolf> Any idea about my problem?

[21:36] <rindolf> azawawi: I'm still getting Missing or wrong version of dependency 'src/gen/BOOTSTRAP.pm'

[21:36] <rindolf> Maybe azawawi went to sleep.

[21:36] <azawawi> rindolf: when doing panda install Farabi6? 

[21:36] <rindolf> azawawi: well, bin/farabi6

[21:37] <rindolf> azawawi: also with the panda install command.

[21:37] <azawawi> rindolf: git pull # ?

[21:37] <azawawi> rindolf: and { panda install URI }

[21:37] <rindolf> azawawi: I've done that.

[21:38] <rindolf> azawawi: hmmm... panda gives me the same thing.

[21:38] <rindolf> With no args.

[21:38] <azawawi> rindolf: if you see missing or wrong version while panda is installing stuff... most probably you have a stale ~/.perl6 ...

[21:38] <azawawi> rindolf: remove ~/.perl6

[21:38] <azawawi> rindolf: remove ~/.panda

[21:39] <rindolf> azawawi: OK.

[21:39] <azawawi> rindolf: and install deps again

[21:39] <azawawi> rindolf: pir and pm6 mismatch most probably

[21:44] <rindolf> azawawi: OK, I was able to install Farabi6.

[21:44] <rindolf> But now it crashes.

[21:44] <azawawi> cool

[21:44] <rindolf> azawawi: http://paste.debian.net/202820/

[21:46] <rindolf> azawawi: thanks for your help.

[21:47] <azawawi> rindolf: np, bin/farabi6 --host=localhost ?

[21:48] <rindolf> azawawi: http://paste.debian.net/202822/

[21:48] <rindolf> azawawi: still crashes.

[21:49] <azawawi> https://github.com/supernovus/perl6-http-easy/blob/master/lib/HTTP/Easy.pm6#L86

[21:50] <azawawi> you brought a great idea... analyze stack through projects.json and META.info

[21:50] <azawawi> s/brought/inspired/

[21:50] *** thou left
[21:51] <azawawi> s/stack/stack trace/     # sleepy :)

[21:56] <azawawi> rindolf: upgrade Rakudo star?

[21:56] <rindolf> azawawi: it's the latest.

[21:56] <rindolf> azawawi: Rakudo nom.

[21:57] <azawawi> rindolf: im working on 2012.09

[21:57] <rindolf> azawawi: OK.

[21:58] *** thou joined
[21:58] *** cognominal left
[21:58] <rindolf> azawawi: I'm on commit 16f22b86b12710a05168b8608f77a37e18effa9f

[22:02] <azawawi> rindolf: https://github.com/rakudo/rakudo/commit/16f22b86b12710a05168b8608f77a37e18effa9f  # old?

[22:02] <azawawi> rindolf: i simply get rakudo star distribtuon... :)

[22:03] * azawawi sleepy...

[22:04] <rindolf> OK, now I'm on commit 978492eb1d2c8df42e4e8e33bd1a026df35ddcd3

[22:04] <rindolf> azawawi: good night.

[22:04] <azawawi> my objective is to get http://rosettacode.org/wiki/Category:Perl_6 examples to be opened in farabi6

[22:05] <rindolf> azawawi: sorry for the noise.

[22:05] <rindolf> I did git pull --ff-only instead of git pull --rebase

[22:05] <azawawi> so you browse by language {Perl6 | Perl} and then task and then open the example in farabi

[22:05] <rindolf> And ignored the warning.

[22:05] *** PZt joined
[22:05] <azawawi> np

[22:06] <azawawi> that's why i use star distro :)

[22:06] <azawawi> in the end my target audience are rakudo star users

[22:08] *** cognominal joined
[22:09] *** havenn left
[22:11] *** havenn joined
[22:12] *** havenn left
[22:14] *** bluescreen10 left
[22:17] *** jimmy1980 left
[22:18] *** benabik joined
[22:21] *** azawawi left
[22:23] *** cibs joined
[22:24] *** pjcj left
[22:25] <rindolf> TimToady: here?

[22:29] <rindolf> OK, Farabi6 still crashes.

[22:30] *** wamba left
[22:34] *** grondilu_ joined
[22:35] *** pjcj joined
[22:37] *** grondilu left
[22:47] *** cognominal left
[22:48] *** cognominal joined
[22:49] *** grondilu_ left
[22:58] *** Chillance left
[23:10] *** timbunce left
[23:11] *** krunen left
[23:13] *** krunen joined
[23:13] *** pochi left
[23:18] *** rindolf left
[23:23] *** benabik left
[23:24] *** rindolf joined
[23:28] <larks> where would I look to see the status of implementation of rakudo, like a list of what's working and what's not? 

[23:30] <japhb_> larks, http://perl6.org/compilers/features

[23:32] <larks> thanks japhb_, just what I was looking for

[23:36] *** skids joined
[23:40] *** cognominal left
[23:42] *** pjcj left
[23:46] *** cognominal joined
[23:48] <[Coke]> rindolf: do a git fetch if you don't have all the tags?

[23:51] *** hash_table joined
[23:52] *** fgomez left
[23:52] <rindolf> [Coke]: let me see.

[23:53] <rindolf> [Coke]: OK, now I have them all.

