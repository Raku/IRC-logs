[00:04] * jnthn is safely home from GPW :)

[00:04] <phenny> jnthn: 07 Mar 21:17Z <tadzik> ask jnthn how hard would it be to make S14-roles/attributes.t run on rakudo?

[00:05] <jnthn> phenny: tell tadzik I think that test may be out of date...will try and take a look in the next couple of days

[00:05] <phenny> jnthn: I'll pass that on when tadzik is around.

[00:06] *** att left
[00:06] <jnthn> phenny: tell colomon on Win64, Parrot needs --parrot-option=--intval="long long"

[00:06] <phenny> jnthn: I'll pass that on when colomon is around.

[00:07] <colomon> jnthn: yes, working on getting a build right now

[00:07] <phenny> colomon: 00:06Z <jnthn> tell colomon on Win64, Parrot needs --parrot-option=--intval="long long"

[00:08] *** sivoais joined
[00:09] <sorear> good * #perl6

[00:10] <sorear> pmurias: I am unqualified to answer that question.

[00:13] *** mtk left
[00:16] *** whiteknight joined
[00:16] <colomon> o/

[00:34] *** pmurias left
[00:56] *** thou left
[01:02] *** att joined
[01:07] *** scott__ joined
[01:11] *** cbk1090 joined
[01:12] <cbk1090> Hello #perl6

[01:25] *** sporous left
[01:27] *** sporous joined
[01:27] <colomon> o/

[01:33] *** havenn joined
[01:34] *** alc joined
[01:37] *** overrosy left
[01:38] *** overrosy joined
[01:38] *** {}o_0{} joined
[01:39] <{}o_0{}> hi!  I'm a snow crab!

[01:39] *** havenn left
[01:48] *** alc left
[01:58] <dalek> nqp/new_make: 23eaebb | bacek++ | tools/build/Makefile.in:

[01:58] <dalek> nqp/new_make: Change PMC building rules to enable parallel build.

[01:58] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/23eaebb310

[02:02] *** alc joined
[02:08] <dalek> nqp/new_make: ece5fbf | bacek++ | tools/build/Makefile.in:

[02:08] <dalek> nqp/new_make: Add dependencies for PMC building.

[02:08] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/ece5fbff17

[02:09] *** tokuhirom left
[02:11] <[Coke]> pugs: 3.Int.say

[02:11] <p6eval> pugs b927740: OUTPUT«*** No such method in class Int: "&Int"␤    at /tmp/sgBWnhp8va line 1, column 1 - line 2, column 1␤»

[02:20] <dalek> nqp/new_make: 03ac24e | bacek++ | tools/build/Makefile.in:

[02:20] <dalek> nqp/new_make: Finish PMC building rules.

[02:20] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/03ac24e265

[02:27] *** isBEKaml left
[02:29] *** wolfman2000 joined
[02:31] *** jferrero left
[02:35] *** jferrero joined
[02:51] *** havenn joined
[02:51] *** xinming joined
[02:59] <dalek> Pugs.hs: e06a935 | coke++ | Pugs/src/Pugs/Prim.hs:

[02:59] <dalek> Pugs.hs: Add .Bool coercion

[02:59] <dalek> Pugs.hs: 

[02:59] <dalek> Pugs.hs: Fixes #8

[02:59] <dalek> Pugs.hs: review: https://github.com/perl6/Pugs.hs/commit/e06a9358c4

[02:59] <dalek> Pugs.hs: 0d7fe82 | coke++ | .gitignore:

[02:59] <dalek> Pugs.hs: ignore some generated files

[02:59] <dalek> Pugs.hs: review: https://github.com/perl6/Pugs.hs/commit/0d7fe82457

[03:01] <dalek> roast: 7857696 | coke++ | S (11 files):

[03:01] <dalek> roast: pugs unfudge

[03:01] <dalek> roast: review: https://github.com/perl6/roast/commit/7857696f1b

[03:08] *** orafu left
[03:09] *** orafu joined
[03:11] <dalek> nqp/new_make: 40bae77 | bacek++ | tools/build/Makefile.in:

[03:11] <dalek> nqp/new_make: Rework bigin ops building

[03:11] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/40bae77e33

[03:12] *** lurkster joined
[03:18] *** alester_ joined
[03:23] <dalek> nqp/new_make: ae037b7 | bacek++ | tools/build/Makefile.in:

[03:23] <dalek> nqp/new_make: Bring all PMC deps into one place

[03:23] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/ae037b7cbf

[03:37] <dalek> nqp/new_make: 7261b1c | bacek++ | tools/build/Makefile.in:

[03:37] <dalek> nqp/new_make: Don't use bare '.o' for file extension.

[03:37] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/7261b1c19d

[03:37] <dalek> nqp/new_make: 7116b98 | bacek++ | tools/build/Makefile.in:

[03:37] <dalek> nqp/new_make: Use variable instead of hardcoded path

[03:37] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/7116b98333

[03:39] <dalek> nqp/new_make: 67e4e13 | bacek++ | tools/build/Makefile.in:

[03:39] <dalek> nqp/new_make: Fix previous commit

[03:39] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/67e4e13d52

[03:44] *** xinming left
[03:45] *** xenu left
[03:47] <dalek> Pugs.hs: 56c053f | coke++ | t/spectest.data:

[03:47] <dalek> Pugs.hs: run more tests.

[03:47] <dalek> Pugs.hs: review: https://github.com/perl6/Pugs.hs/commit/56c053f22a

[03:48] *** alc left
[03:50] *** skipper joined
[03:50] <dalek> nqp/new_make: 7cee7ce | bacek++ | tools/build/Makefile.in:

[03:50] <dalek> nqp/new_make: And again...

[03:50] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/7cee7cef60

[03:52] *** havenn left
[03:56] <[Coke]> perl6: say Q{hello};

[03:56] <p6eval> rakudo 182b2f, niecza v15-4-g1f35f89: OUTPUT«hello␤»

[03:56] <p6eval> ..pugs b927740: OUTPUT«*** No such subroutine: "&Q"␤    at /tmp/Ahg7zmJctu line 1, column 5-13␤»

[04:05] <[Coke]> n: say 18*24

[04:05] <p6eval> niecza v15-4-g1f35f89: OUTPUT«432␤»

[04:05] *** marmalade left
[04:06] <sorear> o/ [Coke] 

[04:08] <colomon> \o

[04:12] <[Coke]> perl6: say 35.unpolar(0.8)

[04:12] <p6eval> niecza v15-4-g1f35f89: OUTPUT«24.384734827150787+25.107463181483297i␤»

[04:12] <p6eval> ..rakudo 182b2f: OUTPUT«24.3847348271508+25.1074631814833i␤»

[04:12] <p6eval> ..pugs b927740: OUTPUT«*** No such method in class Int: "&unpolar"␤    at /tmp/3SDyM2vmz_ line 1, column 5 - line 2, column 1␤»

[04:12] <[Coke]> sorear, colomon: o/

[04:15] <colomon> bedtime here, actually

[04:15] *** alvis left
[04:20] <dalek> roast: 062d17a | coke++ | S32-num/complex.t:

[04:20] <dalek> roast: (slightly complex) pugs fudge

[04:20] <dalek> roast: review: https://github.com/perl6/roast/commit/062d17a42b

[04:21] <[Coke]> perl6: say 1/2R

[04:21] <p6eval> rakudo 182b2f: OUTPUT«===SORRY!===␤Confused␤at /tmp/RY6JLoENA1:1␤»

[04:21] <p6eval> ..pugs b927740: OUTPUT«*** ␤    Unexpected "R"␤    expecting "_", fraction, exponent, term postfix, operator, ":" or ","␤    at /tmp/wqyznLHWuC line 1, column 8␤»

[04:21] <p6eval> ..niecza v15-4-g1f35f89: OUTPUT«===SORRY!===␤␤Whitespace is required between alphanumeric tokens at /tmp/W2tQJJgtxL line 1:␤------> say 1/2⏏R␤␤Two terms in a row at /tmp/W2tQJJgtxL line 1:␤------> say 1/2⏏R␤␤Parse failed␤␤»…

[04:25] *** lurkster left
[04:31] <timotimo> oh, cute, with something like postfix:<kg>(Numeric $foo) you could come up with units and stuff. that's neat

[04:32] *** alvis joined
[04:32] <timotimo> perl6: sub postfix:<kg>(Numeric $val) { say "$val kilograms"; }; 9001kg;

[04:32] <p6eval> pugs b927740, rakudo 182b2f, niecza v15-4-g1f35f89: OUTPUT«9001 kilograms␤»

[04:32] <dalek> nqp/new_make: e7ff7f5 | bacek++ | tools/build/Makefile.in:

[04:32] <dalek> nqp/new_make: DRY: use autovariable.

[04:32] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/e7ff7f5fbe

[04:33] *** alc joined
[04:34] <sorear> timotimo: I think it exists for CORE::postfix:<i>

[04:34] <sorear> as in 3 + 4i

[04:35] *** alc left
[04:38] <bacek_at_work> ~~

[04:38] <bacek_at_work> phenny, tell moritz Can you try nqp new_make branch? If you have something like Win32 it will be very helpful

[04:38] <phenny> bacek_at_work: I'll pass that on when moritz is around.

[04:38] <bacek_at_work> phenny, tell jnthn Can you try nqp new_make branch? If you have something like Win32 it will be very helpful

[04:38] <phenny> bacek_at_work: I'll pass that on when jnthn is around.

[04:46] *** birdwindupbird joined
[04:48] *** snearch joined
[04:55] <dalek> nqp/new_make: 1971fe7 | bacek++ | src/6model/Defines.mak:

[04:55] <dalek> nqp/new_make: Add more dependencies to enable parallel build.

[04:55] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/1971fe7aa6

[05:00] *** skipper left
[05:04] *** skids left
[05:06] *** kaleem joined
[05:16] *** lestrrat left
[05:17] *** lestrrat joined
[05:18] *** xinming joined
[05:21] *** thou joined
[05:33] *** envi_ left
[05:38] *** xinming_ joined
[05:38] *** xinming left
[05:40] *** alester_ left
[05:53] *** birdwindupbird left
[06:13] *** xinming_ left
[06:14] *** xinming joined
[06:14] *** NamelessTee joined
[06:23] *** xinming left
[06:49] *** xinming joined
[06:55] *** snearch left
[06:57] *** NamelessTee left
[07:12] *** preflex_ joined
[07:13] *** preflex left
[07:13] *** preflex_ is now known as preflex

[07:15] <tadzik> good morning

[07:15] <phenny> tadzik: 00:05Z <jnthn> tell tadzik I think that test may be out of date...will try and take a look in the next couple of days

[07:17] *** key__ joined
[07:17] *** key__ is now known as key_

[07:17] <moritz> \o

[07:17] <phenny> moritz: 04:38Z <bacek_at_work> tell moritz Can you try nqp new_make branch? If you have something like Win32 it will be very helpful

[07:19] <dalek> nqp: 2195abb | moritz++ | / (13 files):

[07:19] <dalek> nqp: Merge remote branch 'origin/new_getprop'

[07:19] <dalek> nqp: review: https://github.com/perl6/nqp/commit/2195abb5ec

[07:21] *** thou left
[07:26] <sorear> o/ tadzik , moritz

[07:27] <nebuchadnezzar> morning

[07:29] *** woosley joined
[07:30] <moritz> phenny: tell jnthn the nqp branch new_make works fine for me on linux. If it also works for you, please merge it

[07:30] <phenny> moritz: I'll pass that on when jnthn is around.

[07:50] *** bynari left
[07:57] *** birdwindupbird joined
[08:07] <bacek> moritz, there is some problem with parallel build of dyncall in nqp...

[08:07] <bacek> I couldn't make it to behave properly.

[08:14] <moritz> that's knowin-ish

[08:14] <moritz> *known-ish

[08:16] *** birdwindupbird left
[08:28] *** birdwindupbird joined
[08:37] *** wtw joined
[08:38] *** xinming left
[08:41] *** xinming joined
[08:46] *** sisar joined
[08:47] *** woosley left
[09:07] *** mj41 joined
[09:12] *** birdwindupbird left
[09:14] *** birdwindupbird joined
[09:17] *** key_ left
[09:19] *** birdwindupbird left
[09:21] <masak> morning, #perl6

[09:22] <masak> GPW++

[09:22] <masak> moritz++ # GPW

[09:22] <eiro> hi all 

[09:23] <moritz> masak: did the journey home work out well?

[09:23] <eiro> http://journeesperl.fr/fpw2012/newtalk < masak, tadzik :)

[09:24] <eiro> tadzik, can you talk about bailador ?

[09:24] <eiro> (if you concider joining the event)

[09:25] <moritz> hm, strasbourg is about 5..6 hours by train

[09:26] <masak> moritz: yes, hitchlessly.

[09:27] *** am0c joined
[09:27] <moritz> nom: class A { has package B { }}

[09:27] <p6eval> rakudo 182b2f: OUTPUT«===SORRY!===␤Cannot use has scope with package at line 1, near "{ }}"␤»

[09:31] <tadzik> eiro: I will consider that, although I might have some exams at the very end of June. As soon as I get to know that I don't have any I'd gladly join you on the workshop

[09:32] <eiro> moritz, masak -> FKB

[09:32] <moritz> FKB?

[09:32] <eiro> moritz, the lowcost airport of baden baden

[09:32] <eiro> tadzik, cool 

[09:32] <moritz> eiro: if I come, it'll be by train, not flight

[09:33] <eiro> ok ... 5 hours of train... you are a warrior 

[09:33] <tadzik> althogh there's always a chance that I either do my exams on the first attempt and/or procrastinate some of them for September :)

[09:33] <eiro> tadzik, don't! exams come first! 

[09:33] <moritz> because going to the airport, checking in, the flight, waiting for the baggage etc. and all the time safety margins make the flight not much faster

[09:33] <tadzik> heh, well

[09:34] <moritz> and for me trains are much less stress than flights

[09:34] <eiro> moritz, ok then

[09:34] <DrEeevil> moritz: bern-berlin, train is at least as fast and more comfy

[09:35] <eiro> btw: please make some sound about fpw in germany: we're closer to you than ever :)

[09:35] <eiro> also i have to contact rafl :)

[09:35] <moritz> eiro: if you had said that one day earlier, I could have announced that in the closing talk of the GPW

[09:36] <eiro> moritz, i was at GPW '12 

[09:36] <eiro> s/12/11

[09:36] <eiro> gpw12 still happenned ? 

[09:36] <tadzik> yeah, ended yesterday :)

[09:37] <moritz> from Monday to yesterday

[09:37] <eiro> DAMNED! 

[09:37] <moritz> eiro: around March is the usual time for it; last year it was unusually late

[09:38] <eiro> ok

[09:47] *** {}o_0{} left
[09:50] <dalek> nqp/new_make: 96c5cef | bacek++ | / (2 files):

[09:50] <dalek> nqp/new_make: Hackish workaround to build dyncall in single job to enable build of rest of nqp in parallel

[09:50] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/96c5cefa2f

[09:50] <bacek> moritz, ^^^ :)

[09:51] <moritz> bacek: does that work on non-GNU makes?

[09:53] *** mikemol left
[09:54] <jnthn> mornin'

[09:54] <phenny> jnthn: 04:38Z <bacek_at_work> tell jnthn Can you try nqp new_make branch? If you have something like Win32 it will be very helpful

[09:54] <phenny> jnthn: 07:30Z <moritz> tell jnthn the nqp branch new_make works fine for me on linux. If it also works for you, please merge it

[09:56] <jnthn> Microsoft (R) Program Maintenance Utility Version 10.00.30319.01

[09:56] <jnthn> Copyright (C) Microsoft Corporation.  All rights reserved.

[09:56] <jnthn> makefile(474) : fatal error U1001: syntax error : illegal character '^' in macro

[09:56] <eiro> moritz, was rene there ?

[09:56] <jnthn> No, it doesn't work.

[09:56] <bacek> jnthn, sigh...

[09:56] <moritz> eiro: yes

[09:56] <eiro> renee beck

[09:57] <moritz> baecker iirc

[09:57] <jnthn> bacek: I...assume the only thing you're trying to make parallel is the C bits?

[09:57] <eiro> and he said nothing ? he was aware of FPW! 

[09:57] <moritz> eiro: he said lots of things :-)

[09:57] <jnthn> bacek: Well, and the stage 0 PIR can be too I guess

[09:57] <dalek> nqp/new_make: cdbb25d | bacek++ | tools/build/Makefile.in:

[09:57] <dalek> nqp/new_make: Revert "DRY: use autovariable."

[09:57] <dalek> nqp/new_make: 

[09:57] <dalek> nqp/new_make: It doesn't work with nmake.

[09:57] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/cdbb25d93c

[09:57] <tadzik> jnthn: the spec says "the private attr of a role is private to a class, not to a role"

[09:57] *** key_ joined
[09:57] <jnthn> Stage 1 and stage 2 offer just about no chance of parallelism

[09:57] <moritz> like, gave a 40 minutes talk, and telling people about YAPC::EU, and about the next GPW and so on :-)

[09:58] <moritz> he might have simply forgotten about it

[09:58] <bacek> jnthn, I'm trying to "streamline" build process to simplify migration of parrot to 6model :)

[09:58] <bacek> jnthn, can you try again?

[09:58] <jnthn> bacek: Just did. Now:

[09:58] <jnthn> LINK : fatal error LNK1181: cannot open input file 'src\pmc\nqp_group.obj'

[09:58] <tadzik> I was trying to refactor Set stuff

[09:59] <jnthn> Also

[09:59] <eiro> https://twitter.com/#!/marcchantreux/status/174394649190993920 < he knew ! :)

[09:59] <bacek> jnthn, strange...

[09:59] <jnthn> cl : Command line warning D9035 : option 'o' has been deprecated and will be rem

[09:59] <jnthn> oved in a future release

[09:59] <bacek> jnthn, for which target?

[10:00] <bacek> jnthn, can you create gist with make log by any chance?

[10:01] <eiro> moritz, sure. and i think it's still time to spread information in germany

[10:01] <moritz> sure

[10:02] <jnthn> bacek: https://gist.github.com/2000073

[10:02] *** dakkar joined
[10:03] <jnthn> eiro: I've reserved space in my schedule for FPW, and hope to be able to make it.

[10:03] <eiro> jnthn, thanks! 

[10:05] <eiro> please everyone fill the newtalk page http://journeesperl.fr/fpw2012/newtalk soon even if you're not sure to be able

[10:05] <eiro> (to come)

[10:06] <eiro> also: we found a very cheap but cosy accomodation (35,70€ B&B)

[10:06] <dalek> nqp/new_make: cd61e1d | bacek++ | tools/build/Makefile.in:

[10:06] <dalek> nqp/new_make: Use proper macro instead of '-o'. jnthn++

[10:06] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/cd61e1d654

[10:06] <cognominal> eiro \o/

[10:07] <bacek> jnthn, oookey. Warning should gone. I don't quite understand why nqp_group.obj is missing. It was definitely compiled according to log.

[10:08] <jnthn> https://gist.github.com/2000101

[10:08] <jnthn> That one looks odd.

[10:09] <eiro> cognominal, \o/

[10:09] <eiro> cognominal, we also have to add cat in this loop

[10:10] <cognominal> cat? nyan cat?

[10:10] <bacek> jnthn, looks like a bug in opsc. I have to talk to opsc owner. Wait... It's me.

[10:10] *** Chillance joined
[10:10] <jnthn> bacek: Talking to yourself considered normal. :)

[10:10] <bacek> jnthn, http://www.fmylife.com/miscellaneous/19236548 :)

[10:11] *** scott__ left
[10:11] <cognominal> jnthn, with all the stuff that is going in rakudo, you should write a teaser for Perl 6 that eiro could add to the fpw site.

[10:12] <cognominal> … pointing to your next blog entry  :)

[10:12] <moritz> bacek: you might enjoy https://github.com/masak/gpw-talks/blob/master/autopuns.pdf?raw=true

[10:12] *** am0c left
[10:13] <moritz> that's the slides of a lightning talk masak++ gave on Tuesday

[10:16] <eiro> cognominal, cat -> Christian (another perl6 fan)

[10:16] <timotimo> the zoom at the end was amazing

[10:17] <bacek> jnthn, can you try it with bleeding edge parrot? :)

[10:18] <masak> timotimo: thanks :)

[10:19] <jnthn> bacek: Yeah, but I gotta do $dayjob stuff now, having ignored it for the last three days to do German Perl Workshop. Will give it a go later today.

[10:19] <bacek> moritz++ masak++ nice one!

[10:19] <bacek> jnthn, ok, thanks

[10:19] <masak> timotimo: I feel I'm only discovering what can be done with this format. I definitely want to play around more with it.

[10:20] <moritz> masak: having seen you writing the slides, I think you should optimize the source format a bit for less copy and paste

[10:25] <masak> I see what you mean.

[10:26] <masak> that part doesn't bother me so much. the thought crossed my mind to be able to lay out the scene frames in Inkscape, however. something like export-to-svg, move boxes in Inkscape, import-back-to-slides.

[10:26] *** ascrazy joined
[10:27] <masak> positioning is probably best done in Inkscape.

[10:27] <cognominal> jnthn, are you gpw slides posted somewhere?

[10:27] <moritz> cognominal: it's in the backlog somewhere in the last three days. search for .pdf :-)

[10:27] <cognominal> ok

[10:28] <cognominal> thx, moritz

[10:28] <masak> cognominal: http://irclog.perlgeek.de/perl6/2012-03-06#i_5251854

[10:29] <masak> moritz: my idea is to prototype Niobium (the diagramming tool) inside of Gryd (the presentation tool).

[10:29] <cognominal> thx masak

[10:29] *** ascrazy left
[10:30] <cognominal> masak: have you watched kineticjs? it is almost there. That's  html5 canvases with scene memorization. It lacks css selectors to compete with SVG.

[10:31] <cognominal> it seemas that html5 canvases support is better than SVG support theses days.

[10:31] <cognominal> http://kineticjs.com/

[10:34] *** envi_ joined
[10:34] *** sisar left
[10:40] <dalek> rakudo/nom: 2407a5b | moritz++ | src/ (4 files):

[10:40] <dalek> rakudo/nom: Merge branch 'world-API' into nom

[10:40] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2407a5b9b0

[10:40] <dalek> rakudo/nom: e09d7f8 | moritz++ | src/ (3 files):

[10:40] <dalek> rakudo/nom: generalize X::Sub::Scope to X::Declaration::Scope

[10:40] <dalek> rakudo/nom: 

[10:40] <dalek> rakudo/nom: and throw it in one more place.

[10:40] <dalek> rakudo/nom: Also throw another instance of X::Signature::Placeholder

[10:40] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e09d7f870a

[10:41] <moritz> nom: role A[$x] { }; class B does A[1 + 2] { }

[10:41] <p6eval> rakudo 182b2f: OUTPUT«===SORRY!===␤Cannot use '1 + 2' as an argument to a parametric role as its value is not known at compile time at line 1, near " { }"␤»

[10:42] <moritz> LTA

[10:45] <jnthn> Well, bs was a blocker for the constant folder before now.

[10:45] <moritz> I know

[10:45] <moritz> should it treat the argument the same way as the RHS of a constant declaration?

[10:46] <jnthn> Very unlikely.

[10:46] <jnthn> That just puts the RHS as a BEGIN time thing

[10:46] <jnthn> oh

[10:46] <jnthn> hm

[10:46] <jnthn> Maybe that *would* work out... ;)

[10:46] <moritz> which is exactly what you do when you want a value at compile time :-)

[10:47] *** whiteknight left
[10:47] * moritz goes through panics in Perl6::World

[10:47] <jnthn> We probably need to try and map out "how hard to try" in a bunch of cases.

[10:47] *** key_ left
[10:48] <jnthn> Like, run the thing as BEGIN, run the constant folder, etc.

[10:48] <moritz> nom: my $x = 3; constant a = $x ** 2; say a

[10:48] <p6eval> rakudo 182b2f: OUTPUT«use of uninitialized variable $x of type Any in numeric context␤0␤»

[10:50] *** xinming left
[10:50] <jnthn> That assignment doesn't take place until runtime.

[10:50] <moritz> I know

[10:51] <jnthn> Nice that we get the warning. :)

[10:51] <moritz> I was just pondering if such things should generally be forbidden, or trigger a warning at compile time, or simply use the static pad and be fine with it

[10:51] <jnthn> It did 2 and 3 :)

[10:52] <jnthn> Used the static pad, which held an uninitialized value, and we got a warning. :)

[10:55] *** xinming joined
[11:01] *** Trashlord joined
[11:26] *** NamelessTee joined
[11:29] *** envi_ left
[11:52] *** Patterner left
[11:54] *** Psyche^ joined
[11:54] *** Psyche^ is now known as Patterner

[12:06] *** y3llow_ joined
[12:08] *** y3llow left
[12:09] *** y3llow_ is now known as y3llow

[12:11] *** PerlJam left
[12:12] *** bacek left
[12:12] *** tadzik left
[12:13] *** Juerd left
[12:17] *** PerlJam joined
[12:24] *** am0c joined
[12:32] <masak> is feather under heavy load? things are lagging a bit.

[12:34] <moritz> executing 'uptime' will tell you

[12:35] <masak> 13:34:42 up 139 days,  6:49,  5 users,  load average: 0.03, 0.06, 0.05

[12:35] <masak> those load average numbers never meant much to me.

[12:35] <moritz> it means there's nearly now CPU load on feather

[12:35] <masak> right.

[12:36] <moritz> and suggests that the lag comes from the network instead

[12:36] <moritz> (though other explanations are possible too)

[12:36] <masak> ok.

[12:36] <masak> ah, the numbers are for the past 1, 5, and 15 minutes, respectively.

[12:37] <arnsholt> The rule of thumb with load averages is that it shouldn't exceed the number of CPUs in the machine

[12:37] <moritz> yes, the load average is basically the number of CPUs you'd need to perfectly do all the calculations that are running (or have been running)

[12:37] <arnsholt> And the three numbers are over different time spans. First is "right now", second is "a little while" and last "a long while"

[12:38] <moritz> 1, 5 and 15 minutes iirc

[12:38] *** daxim joined
[12:38] <arnsholt> Yeah, sounds about right

[12:39] <moritz> man uptime agrees with me :-)

[12:40] <arnsholt> Even better =)

[12:41] <masak> <masak> ah, the numbers are for the past 1, 5, and 15 minutes, respectively.

[12:41] <masak> you guys don't read what I'm writing :P

[12:44] <moritz> did anybody say something while I was away?

[12:44] *** tokuhirom joined
[12:45] <masak> :P

[12:46] *** Juerd joined
[12:46] <masak> "masak's contributions to #perl6 were much less commented on after he became /ignore'd by the majority of core devs..."

[12:49] <masak> the most damning comment and the clearest example of bynari-of-le-backlog's point -- that it's hard for any product/organization to go against established perceptions -- is a quote I got relayed to me from a former colleague.

[12:49] <awwaiid> "and the monk-like solitude that ensued led him to deeper insights then could have been previously imagined"

[12:50] <masak> something like "They added native types, proper object-orientation, a meta-object protocol, grammars, and metaops... onto *Perl*."

[12:50] <masak> clearly it was meant as a mean joke.

[12:51] <masak> as if the punchline might equally well have been "... onto *INTERCAL*."

[12:52] <masak> so that's part of the perception we have against us.

[12:53] <masak> I remember two years ago at the social on OSDC.fr, when a Ruby-or-whatever programmer came up to me and I introduced myself as a Perl 6 developer.

[12:53] <masak> he spent the next 15 minutes explaining to me that Perl doesn't exist anymore.

[12:54] <awwaiid> I've been lately thinking that bynari has a point in a way -- I think it's all about the "middle class" of programmers

[12:54] <masak> somehow the language barrier, or maybe his zeal, prevented me from interrupting/contradicting him.

[12:54] <awwaiid> haha

[12:54] *** JimmyZ joined
[12:55] *** am0c left
[12:55] <geekosaur> not sure ruby counts there; ruby devs would like to believe they are the inheritors of Perl and have been ever since the English-speaking world discovered Ruby.

[12:55] <geekosaur> much the same way they think Rails is still relevant

[12:56] <masak> Ruby *is* a descendant of Perl.

[12:56] <masak> it's interesting when you go look at all the similar non-alphabetic variables and run options.

[12:56] <geekosaur> oh, certainly

[12:56] <geekosaur> I'm not denying that at all.

[12:57] <jlaire> it's a descendant, but becomes an inheritor only when Perl dies

[12:57] <masak> the Perl roots are all over Ruby, even if Modern Ruby doesn't emphasize it.

[12:57] <geekosaur> I;'m saying that your anecdote says more about the Ruby community than the Perl one

[12:57] *** sisar joined
[12:57] <masak> aye.

[12:57] <lumi__> PLT Scheme recently renamed to Racket, I guess to escape the scheme name

[12:57] <masak> I can't swear he was a Ruby guy.

[12:57] <geekosaur> they often act like they're desperate to be taken seriously

[12:58] <awwaiid> what a racket! hehehehe

[12:58] * JimmyZ always heard somebody said language is not the  problem. :)

[12:58] <masak> geekosaur: or maybe that's just how they *seem* from the point of view of us balanced Perl programmers :)

[12:58] <geekosaur> (seriously?  they want to be taken seriously, make it possible to build a serious system that won;t be broken the next time someone installs a random gem)

[12:59] <geekosaur> ,uch less a random *point release* of ruby...)

[12:59] <masak> JimmyZ: all programming languages are opinionated. all runtimes need to have a memory model, which in the end influences what the language can and can't do. Turing equivalence still applies, but some languages make it easier to do some things.

[12:59] <awwaiid> I'll tell you what -- here in DC the ruby group get's 50 meeting members a month, the python gets 30, and perl gets 10. Inversed to their real-world usage? Indicative of future trends? Indicitive of social-networking skillz?

[13:00] <geekosaur> indicative of marketing skills, to a large extent

[13:02] <geekosaur> but, ruby in particular seems to be in that curious spot where they have the marketing thing working for them, but on the technical side tey're doing the "everyone else is wrong and we can ignore whatthey've come up with and do it right!" and then spent the next year or so rediscovering _The Mythical Man-Month_ etc.

[13:02] * awwaiid want's to start DC-Dynamic-United

[13:02] *** alvis left
[13:03] * awwaiid is also too lazy to _actually0 start DDU

[13:03] <awwaiid> er, DC-DU

[13:04] <geekosaur> (python mostly avoided that stage, by dint of GvR's steering, as did Perl by Larry's.  I still have scars from when Linux went through it)

[13:05] *** mtk joined
[13:05] <awwaiid> anyway. perl is fun!

[13:07] <awwaiid> I been doing generator-based sound stuff in perl5 -- setting up functions that are generators, spitting out new digital samples on every call. Looks like maybe I could do it now in p6

[13:08] <awwaiid> perl6: sub f_gen { my $x = 0; -> { $x++ } } my $f = f_gen(); $f.().say ; $f.().say ; $f.().say

[13:08] <p6eval> rakudo e09d7f: OUTPUT«===SORRY!===␤Confused␤at /tmp/J849RrwMys:1␤»

[13:08] <p6eval> ..niecza v15-4-g1f35f89: OUTPUT«===SORRY!===␤␤Strange text after block (missing comma, semicolon, comment marker?) at /tmp/d5CG7kTC9_ line 1:␤------> sub f_gen { my $x = 0; -> { $x++ } }⏏ my $f = f_gen(); $f.().say ; $f.().say ␤␤Parse failed␤␤»…

[13:08] <p6eval> ..pugs b927740: OUTPUT«0␤1␤2␤»

[13:08] <masak> awwaiid: semicolon after }

[13:08] <awwaiid> doh

[13:08] <awwaiid> perl6: sub f_gen { my $x = 0; -> { $x++ } }; my $f = f_gen(); $f.().say ; $f.().say ; $f.().say

[13:09] <p6eval> pugs b927740, rakudo e09d7f, niecza v15-4-g1f35f89: OUTPUT«0␤1␤2␤»

[13:09] <masak> also, '$f.()' better written '$f()' if you ask me.

[13:09] <awwaiid> oh, didn't know I could. also why do I need a ; after my sub?

[13:09] <masak> the '.' is a p5istic translation of '->'

[13:09] *** kaleem left
[13:09] <moritz> awwaiid: because tehre's no \n after the closing curly

[13:10] <awwaiid> what other interpretation could it have? I must've missed this one

[13:10] <masak> awwaiid: the rule is that ';' or "}\n" must go between statements.

[13:10] <masak> well. to a first approximation.

[13:11] <awwaiid> that for easy-consistent parsing?

[13:13] <awwaiid> or is there some other ambiguity that it solves that I'm not seeing?

[13:13] *** Juerd_ joined
[13:13] *** grondilu joined
[13:14] *** Juerd_ left
[13:14] <grondilu> Is anybody working on a perl6 grammar for mediawiki?  I'd be so happy to have that, but it's kind of tough for me to write it.

[13:17] <masak> awwaiid: basically, it's very important for the parser to be able to recognize and flag up two terms in a row.

[13:17] <masak> grondilu: I did, many years ago, for November the wiki engine. I haven't heard about anyone doing it since then.

[13:18] *** alvis joined
[13:18] <moritz> awwaiid: how much perl 5 do you write?

[13:19] <grondilu> masak: where is it?  I'd like to have a look.

[13:19] <moritz> in perl 5 there's this annoying thing that if you write  'somecallback sub { .... }'

[13:20] <moritz> then the next line triggers a syntax error

[13:20] <moritz> because you didn't write a ; after the }

[13:20] <masak> grondilu: seems to be at https://github.com/viklund/november/blob/master/lib/Text/Markup/Wiki/MediaWiki.pm

[13:20] <moritz> (which is especially annoying if the sub is several lines long, or even more than a vertical screen length)

[13:22] <grondilu> masak: great.  Thanks

[13:22] <moritz> has anybody ported november to nom?

[13:23] <awwaiid> masak, right, but the newline doesn't end it either. I guess I think of a named sub an an anon sub as two different things -- the named sub is a block construct that needs no ; after it. But I just tried this with if blocks in p6 and it works the same, so at least it's consistent :)

[13:25] <masak> moritz: nope.

[13:25] <[Coke]> (user groups attendences: perl here gets 0. cold fusion gets dozens.)

[13:26] *** kaleem joined
[13:27] <masak> r: (sub { $^f("OH HAI") })(sub { say $^m })

[13:27] <p6eval> rakudo e09d7f: OUTPUT«OH HAI␤»

[13:32] <sisar> sorear: warnings seen when make-ing Niecza: https://gist.github.com/2000992 , line 4, 18

[13:33] <masak> sisar: that's fairly normal, I think. par for the course.

[13:33] <[Coke]> I think he eliminates them as possible, but the fact that we're bootstrapped means those are going to show up occasionally.

[13:34] <sisar> masak: ok

[13:34] <sisar> moritz: did you figure out my yesterday's gist : https://gist.github.com/1986576

[13:34] <[Coke]> pugs: say 3.Int

[13:34] <p6eval> pugs b927740: OUTPUT«*** No such method in class Int: "&Int"␤    at /tmp/xnrgsNUN0u line 1, column 5 - line 2, column 1␤»

[13:35] <sisar> me thinks that i might have some insight...

[13:35] <moritz> sisar: no

[13:36] <awwaiid> masak, anyway -- I don't mind offhand about the required [\n;], I was just surprised. For some reason (;|\n) strikes me as the path to the dark side... but I'm not afraid of no dark side

[13:36] <sisar> if you copy-paste any multiline code on the rakudo REPL, then regardless of your next sentence, rakudo responds with 'Confused'

[13:36] <moritz> oh

[13:37] <sisar> moritz: are you able to reproduce it ?

[13:38] <[Coke]> moritz: quiet ping on the pugs-on-evalbot-update question.

[13:38] <moritz> sisar: dunno, currently I don't have a rakudo runninig $here

[13:38] <moritz> [Coke]: pong

[13:38] *** lateau joined
[13:39] <moritz> [Coke]: iirc pugs isn't currently updated on p6eval at all

[13:39] <moritz> and from where I am right now, I don't have access to its host :/

[13:39] <sisar> moritz: oh, ok.

[13:40] <sisar> [Coke] can you try to reproduce the problem ?

[13:40] <sisar> just copy-paste any multiline code, let rakudo complain, then give anyother valid statement

[13:41] <sisar> s/statement/ one line code

[13:42] <[Coke]> sisar: no: https://gist.github.com/2001030

[13:42] <[Coke]> do you have a cut and paste that shows the problem?

[13:42] <masak> JimmyZ: perhaps more importantly, programming languages are tools for doing interesting things. any discussion on which tool is better than the other tools and why is time spent not doing interesting things. :)

[13:44] <sisar> [Coke] one sec...

[13:44] <PerlJam> good * #perl6

[13:45] <sisar> [Coke]: here: https://gist.github.com/2001038. Copying lines 1 to 7 should trigger it...

[13:46] <masak> PerlJam! \o/

[13:47] <moritz> \*/

[13:47] *** kaleem left
[13:47] * masak .oO( moritz has whatever head? )

[13:47] <masak> or maybe it's a moritz Star.

[13:48] *** kaleem joined
[13:48] <moritz> my head just sees stars everywhere

[13:49] <sisar> masak: on http://strangelyconsistent.org/blog/june-22-format-strings "print the value using three characters", i think 'three' => 'five'

[13:51] <PerlJam> sisar: indeed

[13:52] <timotimo> masak: is there no option to center text?

[13:53] <masak> sisar: good catch. thanks.

[13:53] <moritz> timotimo: that's what Form.pm is for

[13:53] <timotimo> oke

[13:53] <masak> timotimo: in sprintf? no.

[13:53] <moritz> though I have no idea what state it's in

[13:53] <moritz> mathw might now

[13:53] <masak> I hope the Form.pm we end up with knows how to handle double-width chars.

[13:54] <masak> Form.pm would be a very adequate GSoC project, methinks.

[13:54] <jnthn> Aye

[13:55] <moritz> nom: role B { ... }

[13:55] <p6eval> rakudo e09d7f:  ( no output )

[13:55] <moritz> why doesn't that complain that B is declared but not stubbed?

[13:55] <moritz> erm, other way round :-)

[13:57] <jnthn> Roles are special cased...it's some trickiness with "which parametric variant did we stub"...

[13:57] <moritz> oh.

[13:57] <jnthn> It needs a better solution.

[13:58] <dalek> rakudo/nom: 4235dfe | moritz++ | src/ (2 files):

[13:58] <dalek> rakudo/nom: X::Package::Stubbed

[13:58] <dalek> rakudo/nom: 

[13:58] <dalek> rakudo/nom: also automagically promote RPA to Parcel in World.throw

[13:58] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4235dfe0f7

[13:59] <dalek> roast: 46f9b17 | moritz++ | S32-exceptions/misc.t:

[13:59] <dalek> roast: track exception name change, and add another test

[13:59] <dalek> roast: review: https://github.com/perl6/roast/commit/46f9b17dad

[13:59] <dalek> roast: ddc21bf | moritz++ | S32-exceptions/misc.t:

[13:59] <dalek> roast: test X::Package::Stubbed

[13:59] <dalek> roast: review: https://github.com/perl6/roast/commit/ddc21bfd2d

[13:59] <masak> how to compare two strings in a case-insensitive way in Perl 6?

[14:00] <moritz> you mean besides $a.lc eq $b.lc?

[14:00] <masak> yeah. I read brian d foy's blog post, and learned from it that .lc isn't enuf.

[14:01] <masak> http://www.effectiveperlprogramming.com/blog/1507

[14:01] <masak> I guess what I'm asking is, does Perl 6 have .fc or something equivalent?

[14:02] <masak> if not, this seems to be something that we'd want to steal from 5.16.

[14:02] *** birdwindupbird joined
[14:03] <geekosaur> I thought this had come up before and something got spec-ed

[14:04] <geekosaur> (not sure it ever got implemented but I know it was discussed)

[14:04] *** kranius joined
[14:05] <kranius> hello #perl6

[14:06] *** benabik left
[14:06] <masak> kranius: greetings, kranius.

[14:06] <awwaiid> sisar, it's not just copy-paste -- just typing "for 2..100 {<enter>" triggers that

[14:06] <masak> kranius: welcome back.

[14:09] *** tadzik joined
[14:11] <kranius> would jumping straight to perl6 be good for a perl newcomer ?

[14:11] <PerlJam> kranius: probably not.

[14:12] <PerlJam> kranius: (but that's just my opinion)

[14:12] <kranius> why so ?

[14:12] *** JimmyZ_ joined
[14:14] *** JimmyZ left
[14:14] *** JimmyZ_ is now known as JimmyZ

[14:14] <masak> I'm less hesitant than PerlJam. Perl 6 might work fine as a "first Perl".

[14:14] <PerlJam> kranius: because there are two Perls now.  Perl 5 and Perl 6 and they are different.   Perl 5 has a long history and lots of tools and lots of edifice (CPAN, cpan testers, etc.) that Just Works for the programmer.  Perl 6 doesn't quite have the same level of maturity with respect to its corresponding tools.

[14:15] <masak> but there's... right, tools and documentation and maturity in general.

[14:15] <timotimo> i'ven't done perl5 before and i'm learning perl6 (very) slowly

[14:15] <masak> if you choose to go with Perl 6, be prepared for more of a "work in progress" experience than with Perl 5.

[14:15] <timotimo> i think it's very nice if you don't expect to become productive immediately

[14:15] <masak> timotimo++

[14:16] <kranius> yes I am aware of that. But I don't really need production readyness

[14:16] <PerlJam> kranius: then learn Perl 6 by all means

[14:16] <PerlJam> !

[14:16] <kranius> nor a big ecosystem

[14:17] <kranius> I have some experience with perl 5, but it's mainly maintaining some already existing code

[14:17] <timotimo> you can probably get many libraries using the CLR interface of niecza if you want to do gui or whatever

[14:18] <kranius> nothing really fancy

[14:19] *** bynari joined
[14:20] *** tokuhirom left
[14:20] <PerlJam> When people talk about Perl "in the wild", I bet their mental model is a Perl 5 universe.  I wonder how we can effectively put the "Perl 6 vision of Perl" into people's heads?

[14:20] <timotimo> .u 哈

[14:20] <phenny> U+54C8 CJK UNIFIED IDEOGRAPH-54C8 (哈)

[14:20] <PerlJam> Seems like the best way is lots of code, documentation, tutorials, articles, real-world examples, etc.

[14:22] <kranius> yes code examples is good to spread the word

[14:23] <masak> PerlJam: tadzik had an interesting talk on GPW about how the Perl 6 module ecosystem toolchain has followed an "evolution" path so far, despite numerous attempts to apply "intelligent design" to it.

[14:23] <masak> at least that's my take on what he said. ;)

[14:23] <masak> tadzik++

[14:24] <PerlJam> cool

[14:24] *** mikemol joined
[14:25] <PerlJam> I feel like Perl 6 is on the cusp of something and it's getting close to the  time when we need to "turn up the heat" to make things bounce around a little more  :)

[14:25] <masak> aye.

[14:25] *** dudulz joined
[14:25] <kranius> most people I know are scared by Perl, they have the "perl golf" in mind, unreadable snippets with cryptic syntax :/

[14:25] <timotimo> hehe, yes

[14:26] <masak> there will always be people who think like that.

[14:26] <PerlJam> kranius: "fear of Perl 5" could be replaced by "wonder of Perl 6"  :)

[14:26] <timotimo> a friend of mine does a lot of perl5 stuff and always brags about how good cpan is and about the usually very high quality of documentation and tests

[14:26] <masak> there will always be people who go "LOL PARENTHESES" when you mention Lisp, too.

[14:26] <kranius> true

[14:26] * PerlJam just thinks of fingernail clippings

[14:27] <PerlJam> TimToady++ (for the memorable quote)

[14:27] *** bluescreen10 joined
[14:27] <masak> and both groups, while crude, are right in some sense.

[14:27] <masak> Lisp code does contain parentheses.

[14:28] <PerlJam> masak: and a few non-parentheses too  ;)

[14:28] <masak> Perl code does contain punctuation. and you have the rope to shoot yourself in the foot.

[14:28] <masak> that doesn't mean you have to.

[14:28] <jnthn> You can...shoot yourself with rope?

[14:28] <masak> :P

[14:28] <PerlJam> jnthn: sure, with a rope gun

[14:29] <masak> "Perl 6 gives you enough rope to shoot yourself in the foot." I thought this meme was well-known enough to be mundane at this point... :)

[14:29] <masak> apparently not.

[14:29] *** dudulz left
[14:29] <jnthn> I guess I never bothered to think it through before :P

[14:30] <kranius> that Parrot vm is sexy

[14:30] <masak> it's a wonderful vision, yes.

[14:31] <PerlJam> btw, anyone working on an April Fools Joke this year?

[14:31] <PerlJam> The Perl community used to do such nice AFJs

[14:31] *** skids joined
[14:32] <masak> PerlJam: no, but it's a great idea.

[14:33] <frettled> «Perl 5.17 and Perl 6 to merge codebases»

[14:34] <masak> ...upgrading the version number to Perl 11.17

[14:34] <PerlJam> frettled: I was thinking something more like "p5p to adopt Parrot VM for Perl 5 with plans to merge with Perl 6 by 2013" or something

[14:34] *** PacoAir joined
[14:34] <PerlJam> (the nuance of p5p using Parrot is important :)

[14:34] <masak> I would assume that that was an April 1st joke even if it arrived in September.

[14:35] <frettled> hee-hee

[14:35] <frettled> PerlJam's suggestion is nice.

[14:35] <frettled> It would be even better if the current uhm er buildmaster or whattheycallit for Perl 5 signed onto that.

[14:36] <masak> oh yes.

[14:36] <PerlJam> "Larry Wall gives up on Perl and moves to the Himalayas"

[14:36] <masak> with a credible enuf timeline up until 2013.

[14:36] <PerlJam> masak: exactly

[14:37] <PerlJam> with quotes from notable Perl people (in Perl 5 and Perl 6) in the announcement.

[14:37] <PerlJam> "RJBS says ... it's about time"

[14:37] <awwaiid> "Perl6 joins force with Mayans to end world before Christmas"

[14:38] <jnthn> "Don't panic, we don't know which Christmas yet."

[14:38] <PerlJam> "obra reveals that this was really his plan all along when he put forth his proposal for the future of perl 5"

[14:38] <PerlJam> awwaiid++ I like that

[14:39] <PerlJam> frettled: btw, the word you were looking for is "pumpking"

[14:39] <frettled> PerlJam: thanks, I forgot

[14:42] *** GlitchMr joined
[14:43] <JimmyZ> masak: I agree with you, though that's always contentious 

[14:44] <PerlJam> The trick is getting enough of the right people involved and to make it sound almost plausible such that people actually question the reality of it.

[14:44] <frettled> Also, you need a decoy, an _obvious_ April 1st joke.

[14:45] *** JimmyZ left
[14:45] <frettled> I think the Mayan joke  suggested by awwaiid works.

[14:45] <masak> :D

[14:45] *** JimmyZ joined
[14:46] <frettled> As a bonus, mentioning the P6 hackathon in Oslo in April as a hacking meet to ensure API compatibility or somesuch could be cool.

[14:47] <PerlJam> exactly

[14:47] <PerlJam> combine enough facts with fiction that people aren't sure if it's a joke

[14:47] <frettled> That timing is becoming freakishly good.

[14:48] * frettled really looks forward to that hackathon, BTW, it will be the first Perl meet for me in a looong time.

[14:51] *** Trashlord left
[14:52] *** Trashlord joined
[15:00] *** benabik joined
[15:00] <PerlJam> another good AFJ would be to announce that lwall has decided to rename Perl 6 after much flak from the community.  (people would certainly believe that! :)

[15:01] <masak> and they'd lynch us when it turns out to be a joke :P

[15:03] <JimmyZ> rename 6 to 7 :)

[15:06] <benabik> The Perl 6 community has gotten tired of the spec changing, so have kicked out TimToady.  Now he's working on Perl 7, which is composed entirely of non-ASCII characters.

[15:06] <masak> "Perl 7 will be my rewrite of the community. (mumble grumble)"

[15:07] <benabik> masak++

[15:08] <JimmyZ> or universe 

[15:09] <geekosaur> (as usual, xkcd already covered that)

[15:11] *** marmalade joined
[15:11] <flussence> "Perl 6000"

[15:21] <cosimo> quick raise of hands: who's coming to Oslo? :)

[15:21] *** JimmyZ left
[15:22] <masak> o/

[15:22] <masak> so are jnthn, moritz, pmichaud, tadzik, and fsergot.

[15:22] *** JimmyZ joined
[15:23] <JimmyZ> firefox--, which always crashed with chatzilla 

[15:23] <cosimo> masak: cool!

[15:23] <cosimo> it's going to be great!

[15:26] <masak> yes. yes, it is.

[15:26] <masak> sjn++

[15:39] <[Coke]> sisar: still can't reproduce it: https://gist.github.com/2001553

[15:40] <[Coke]> I seem to recover immediately after the confusion, whereas you seem to need one more line.

[15:40] <moritz> maybe there's some platform dependent copy/paste mechanism

[15:40] <moritz> thing is, if you paste 5 lines, rakudo should say "Confused" 5 times

[15:40] <[Coke]> -1 from me on more april fool's day stuff.

[15:41] <sisar> [Coke]: why does it look like that you copy-pasted each line one-by-one ?

[15:41] <masak> maybe it's the terminal window application.

[15:41] <[Coke]> sisar;no clue. I did not.

[15:41] <[Coke]> but, in any case: it seems that if you hit return one more time, you're ok.

[15:41] <moritz> so if you only get a single "Confused", maybe the line separator is weird or something

[15:41] <sisar> fyi, i'm using GNOME terminal

[15:42] <[Coke]> I'm ssh'd into feather using putty

[15:42] <sisar> [Coke] you have a local rakudo  ?

[15:43] <sisar> fwiw, awwaiid above was able to reproduce it

[15:46] *** grondilu left
[15:47] <awwaiid> moritz, sisar, actually mine said confused a bunch of times :)

[15:48] *** Patterner left
[15:49] *** pernatiy left
[15:50] *** Psyche^ joined
[15:50] *** Psyche^ is now known as Patterner

[15:50] *** pernatiy joined
[15:50] *** att left
[15:58] *** kaare_ joined
[15:59] *** thou joined
[16:12] *** HarryS left
[16:12] *** JimmyZ left
[16:14] *** lateau left
[16:17] *** tarch joined
[16:31] *** kaleem_ joined
[16:34] *** kaleem left
[16:36] *** att joined
[16:40] *** GlitchMr left
[16:45] <[Coke]> masak++ #autopun pdf

[16:45] <colomon> [Coke]: where is it?

[16:47] <TimToady> https://github.com/masak/gpw-talks/raw/master/autopuns.pdfhttps://github.com/masak/gpw-talks/raw/master/autopuns.pdf

[16:47] <TimToady> er, stupid lag

[16:48] <TimToady> .oO(you can say that again)

[16:48] <colomon> TimToady++

[16:48] <TimToady> if I was going to be snide, I'd've said "in the backlog"

[16:49] <TimToady> all I did was type masak in my browser

[16:49] <TimToady> and look at the history

[16:51] <masak> maybe it was a mistake to publish that PDF. now I have to find new fresh autopuns for YAPC::EU :)

[16:51] <masak> maybe I could build an autopun factory.

[16:51] <masak> turn the crank; autopun comes out.

[16:52] <TimToady> you need to write an autopun macro

[16:52] *** mj41 left
[16:53] <TimToady> actually, just write an AI that wanders the intertubes finding them; I'm sure you'll get more than you can talk about

[16:54] <TimToady> or just teach everyone how to do it, and get it to go viral, and then you don't have to talk about them anymore

[16:55] <masak> it's surprisingly difficult to convey what's an autopun and what isn't.

[16:55] <masak> not just because it's not 100% clearly delineated, but because the the core "trick" isn't easily put into words.

[16:56] <TimToady> indeed, it's almost past the semantic level down in the pragmatic level

[16:56] *** daxim left
[16:57] <TimToady> I keep having this nagging worry that you're gonna think I'm trying to make autopuns when I'm just trying to be funny...  :)

[16:57] <PerlJam> masak: got any example autopuns that recurse at least once?

[16:58] <PerlJam> or autopuns that pun in 2 orthogonal directions

[16:58] <masak> TimToady: in a give conversation about autopuns, there always seems to be a general uncertainty about whether one is trying to stick to the topic, or trying to be funny. :)

[16:58] <masak> given*

[16:58] <PerlJam> your talk seemed to be about wordy autopuns ... any visual autopuns?

[16:59] <masak> PerlJam: interesting notions. no, I haven't seen any examples of those.

[16:59] <TimToady> well "All X are liars" can thought of as a recursive autopun if you're an X

[16:59] <masak> I never liked the "All X are liars" as an example of the prototypical paradox. it's not a paradox.

[16:59] <awwaiid> pft. YOU'RE not a paradox

[17:00] <masak> :)

[17:00] <geekosaur> not by itself, but it's supposed to be shorthand for the syllogism that *is* a paradox when complete

[17:00] *** kaleem_ left
[17:00] * TimToady wonders what a metadox would be

[17:00] <TimToady> maybe a metadox is what the all cretans thing is

[17:01] <masak> well, now, come on. even in a black-and-white world where everyone either is a liar or a truth-teller, things can be resolved by Epimenides being a liar, and not all Cretans being liars.

[17:01] <TimToady> well, I know how Alexander would have solved it

[17:01] <masak> i.e., there has to be at least one Cretan who is not Epimenides and who is not a liar. then Epimenides lies, he's a liar, and no paradox.

[17:02] <TimToady> cretan

[17:02] <masak> :P

[17:03] * masak decommutes

[17:03] <geekosaur> *snrk*

[17:03] <TimToady> discretely

[17:04] <PerlJam> masak: "all X are liars" is more of an idealized theoretical construct.  Yours are *real* and thus quite a bit more appealing. :-)

[17:04] <PerlJam> "all X are liars" makes me think of spherical cows of uniform density.

[17:07] *** MayDaniel joined
[17:08] <TimToady> it's difficult to have a visual autopun in the concrete (ouch) sense of visual, since an autopun is defined to have a use/mention, which implies some amount of semiotic indirection

[17:08] <TimToady> you need something visual that is a "sign" but that is not language, per se

[17:09] <PerlJam> TimToady: difficult doesn't mean impossible.  :-)  I bet Escher has some visual autopuns 

[17:09] <TimToady> a toppled statue of Lenin pointing at the ground comes close

[17:10] <TimToady> the hands drawing each other can be read that way

[17:11] <PerlJam> ah, exactly

[17:11] <TimToady> I think they'll usually come across as "frame violations" in the visual sphere

[17:12] <TimToady> it's a pity the painting has to say "this is not a pipe" in language

[17:12] <PerlJam> heh, that's the first thing I thought of when I mentioned "visual" autopuns :-)

[17:13] *** birdwindupbird left
[17:15] <TimToady> I suspect Escher's impossible objects can be thought of as autopuns, where the semiotic "frame" lies between 3-D space and 2-D projections of that 3-D space

[17:15] <TimToady> and our interpretations of those projections back into 3-D in our minds

[17:16] <TimToady> something kind of 2-level recursive there

[17:16] <TimToady> it's like the automatic translator joke doesn't work unless you translate to Russian and then back to English

[17:17] <PerlJam> that's an interesting notion.   Also the "location" of the autopun.  Where does it happen?  Is it an autopun only if we have a shared language?  a shared community?  a shared geography?  does it even require sharing?

[17:18] <TimToady> you need the before/after to put the spotlight on some hidden semiotic process that is not apparent

[17:19] *** isBEKaml joined
[17:19] <TimToady> there's this sense in which an autopun must construct two different realities in our heads that then metaphorically fight somehow

[17:21] <TimToady> in the semantic space we tend to call these "paradoxes", but they don't actually rise to the level of autopun unless there are pragmatics involved

[17:21] <PerlJam> An image of a square wheel is a sort of autopun

[17:21] <TimToady> indeed, "auto" in Greek just means "he/she/it"

[17:21] <TimToady> in addition to self

[17:22] *** ggoebel left
[17:22] <TimToady> so there has to be a self involved

[17:22] <TimToady> all X are liars doesn't feel autopunny because X is too abstract

[17:22] <PerlJam> masak: I think you'll have no problems coming up with new autopuns  ;)

[17:23] *** HarryS joined
[17:26] *** isBEKaml left
[17:27] *** ggoebel joined
[17:27] *** isBEKaml joined
[17:29] *** tarch left
[17:33] *** wolfman2000 left
[17:36] <PerlJam> According to wikipedia, the Mayans used puns.   awwaiid's suggestion of combining the Mayans with  Perl 6 for an AFJ seems even more like a winner :)

[17:37] *** MayDaniel left
[17:38] * TimToady wonders if "end of the world" sounds like "Perl 6 released" in Mayan...

[17:39] *** nine joined
[17:40] <nine> Is current Rakudo using Parrot's OO stuff (classes and esp. methods) in any way?

[17:41] *** ggoebel left
[17:42] <jnthn> nine: PAST and POST do

[17:42] <PerlJam> nine: why do yo ask?

[17:42] <jnthn> But Rakudo itself doesn't.

[17:42] <jnthn> And PAST is getting replaced once I have the tuits.

[17:43] <jnthn> I think virtually nothing in the NQP repository uses it either.

[17:46] *** ggoebel joined
[17:48] <nine> So it probably would not hurt if I add code to Parrot_find_method_direct? Just ask because I try hard to not touch any code path which is used in a single threaded program.

[17:50] *** att left
[17:50] <[Coke]> +# 03/08/2012 - rakudo++ ; niecza (96.24%); pugs (35.08%)

[17:50] <[Coke]> +"niecza",     20306,     1,   757,  1540, 22604, 23759

[17:50] <[Coke]> +"pugs"  ,      7403,     0,  2887,   850, 11140, 23568

[17:50] <[Coke]> +"rakudo",     21099,    31,   626,  1888, 23478, 24026

[17:51] <jnthn> nine: Almost certainly not.

[17:51] <jnthn> Though I'm a tad curious what you're adding there. :)

[17:55] <nine> jnthn: I use completely separated memory domains for each thread so I have each thread run its own GC. For most parts this was quite simple to achieve, but method calls give me a hard time. I'm currently trying to share VTABLEs and classes between threads and just create a local copy of the method in Parrot_find_method_direct

[17:57] <jnthn> Hm.

[17:57] <jnthn> Yeah, if you have no notion of objects shared between threads then...there's not much else for it besides copying.

[17:58] <jnthn> Guess handling sharing needs a write-barrier on share.

[17:59] <nine> For all other objects I use simple proxies which just forward all VTABLE calls to the proxied object. But calling a sub this way would cause the sub to run in its original interp's context screwing things up.

[18:01] *** fglock joined
[18:01] *** dakkar left
[18:03] *** att joined
[18:05] <eiro> fglock, are you concidering giving your astonishing talk at fpw ? 

[18:05] *** thou left
[18:05] <fglock> eiro: hi

[18:05] <eiro> hi :)

[18:06] <fglock> that's the French Perl Workshop?

[18:06] <fglock> I don't know - looking it up

[18:07] <eiro> please!

[18:07] <fglock> 24th and 25th of June - looks good :)

[18:08] <eiro> fglock, where have you seen those date ? 

[18:08] <eiro> it's actually june 29,30 

[18:09] <eiro> http://journeesperl.fr/fpw2012/

[18:09] <dalek> specs: efdbdd8 | larry++ | S32-setting-library/Str.pod:

[18:09] <dalek> specs: spec fc, remove capitalize (see titlecase)

[18:09] <dalek> specs: 

[18:09] <dalek> specs: capitalize was defined in terms of ucfirst, which no longer exists.

[18:09] <dalek> specs: We also need to support case folding as defined by Unicode.

[18:09] <dalek> specs: review: https://github.com/perl6/specs/commit/efdbdd8165

[18:09] <fglock> http://journeesperl.fr/fpw2011/

[18:09] <eiro> fglock, let me check but i think we're in 2012 :)

[18:10] <fglock> heh

[18:10] <eiro> fglock, was it the default page for ya 

[18:11] <fglock> I just got a link from google

[18:11] <fglock> didn't pay much attention to the small detail of dates

[18:12] <fglock> perlito5 progress report:

[18:12] <fglock> imported all the CORE prototypes

[18:12] <fglock> some prototypes work; some "difficult" parses work now

[18:12] <fglock> self-compile time is now 10s in v8

[18:13] <fglock> perl5-to-perl6 probably need to reuse the javascript data model

[18:14] <fglock> thinking about a low-level backend (parrot or dot-net maybe)

[18:15] <fglock> there is lots of "low-hanging fruit" accumulating

[18:18] <eiro> fglock, it would be cool to report

[18:23] *** benabik left
[18:24] *** wtw left
[18:33] <skids> ERROR: OK. # short autopun

[18:33] *** sisar left
[18:41] *** birdwindupbird joined
[18:45] *** am0c joined
[18:58] *** _buno_ joined
[19:00] <TimToady> perl6: die "Alive"

[19:00] <p6eval> niecza v15-4-g1f35f89: OUTPUT«Unhandled exception: Alive␤  at /home/p6eval/niecza/lib/CORE.setting line 1362 (die @ 3) ␤  at /tmp/dpIcVRsu2l line 1 (mainline @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3838 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3839 (module…

[19:00] <p6eval> ..pugs b927740: OUTPUT«*** Alive␤    at /tmp/Cy8yc1UjZf line 1, column 1 - line 2, column 1␤»

[19:00] <p6eval> ..rakudo 4235df: OUTPUT«Alive␤  in block <anon> at /tmp/N6X7hTyGT2:1␤␤»

[19:03] *** _buno_ left
[19:07] *** aindilis left
[19:07] *** aindilis joined
[19:08] *** isBEKaml left
[19:08] *** isBEKaml joined
[19:20] *** plobsing left
[19:22] *** plobsing joined
[19:22] <ggoebel> on the subject of renaming perl6... I don't think that could ever fly without TimToady's blessing and the consent of the folks implementing perl6

[19:22] <ggoebel> perl6 distributions are at liberty to call themselves whatever

[19:24] <ggoebel> I get the significance of the name change, baggage, etc...

[19:25] <PerlJam> ggoebel: That's why it would make a good AFJ.  :)

[19:25] <ggoebel> but can't really accept it either

[19:26] <ggoebel> april fool's joke?

[19:26] <PerlJam> aye

[19:27] *** NamelessTee left
[19:27] <ggoebel> AFD is coming up soon

[19:29] <ggoebel> Akoya oysters are used to produce cultured pearls... Maybe someone can do something with that...

[19:31] <PerlJam> Is it a kind of autopun when someone asks a question that contains the answer within the question?

[19:31] <PerlJam> (they mention the thing they should use)

[19:32] <skids> I just consider those lmgtfy bait.

[19:36] <skids> "Perl6 renames itself to «insert particularly hard to compose unicode sequence here»"

[19:36] <masak> PerlJam: the only such autopun I know is the one from bash.org: "You should learn how to find things out for yourself." -- "How do I do that?"

[19:36] *** havenn joined
[19:37] <flussence> I'm thinking of writing a buggy, incomplete set of perl6 scripts for website templates...

[19:37] <masak> ha, here: http://bash.org/?3936 :)

[19:37] <flussence> I'll call it "Perl 6 Hypertext something something"!

[19:38] <masak> flussence: "...Matt's archive" :)

[19:38] <masak> it'll be an instant success.

[19:39] <masak> http://en.wikipedia.org/wiki/Matt's_Script_Archive

[19:40] <flussence> ouch... I never knew about that yet I recognise the name "FormMail.pl"

[19:41] *** Trashlord left
[19:41] <moritz> Serialization Error: Unimplemented object type 'CTMThunk' passed to write_ref

[19:41] <moritz> that's what I get when playing with sink

[19:42] <jnthn> Urgh

[19:42] <flussence> .oO( I know! I'll call it Perl 6 HTML Plus. It can be abbreviated to "P6H+", like that HQ9+ language. )

[19:42] <jnthn> moritz: Yeah, I guess that "can't happen" situation can happen.

[19:42] <jnthn> moritz: It's a relatively easy fix.

[19:43] <dalek> rakudo/sink2: 85c63c5 | moritz++ | / (9 files):

[19:43] <dalek> rakudo/sink2: re-apply the interesting parts of the "sink" branch

[19:43] <dalek> rakudo/sink2: review: https://github.com/rakudo/rakudo/commit/85c63c5350

[19:43] <moritz> it's surpsing how little change it is alltogether

[19:44] *** Trashlord joined
[19:44] <moritz> the sink branch, that is

[19:46] *** localhost joined
[19:48] <jnthn> moritz: nomming now, will fix the serializer after that

[19:49] <moritz> jnthn: ok, no hurry

[19:49] *** isBEKaml left
[19:50] * moritz tries to remember the diagram we wrote on that blackboard in ER

[20:03] *** integral left
[20:03] * TimToady wonders why there'd be a blackboard in the emergency room, and how much beer moritz had to drink to end up there...

[20:03] *** leprevost joined
[20:04] <TimToady> that would explain why he can't remember it, though...

[20:09] *** am0c left
[20:10] <masak> TimToady: you've written an editor in Perl 6?

[20:10] <masak> is it published somewhere? :)

[20:11] *** thou joined
[20:13] <[Coke]> phenny: tell au that https://github.com/perl6/Pugs.hs/issues/6 is another one that might get us a large number of unrelated tests. Any pointers on where to look for the grammar of a sub name?

[20:13] <phenny> [Coke]: I'll pass that on when au is around.

[20:13] <TimToady> it's not a text editor

[20:14] <masak> ok.

[20:14] <masak> I guess I assumed it was. I've been thinking of writing one.

[20:15] <TimToady> it's a quiz editor for the quizzing my wife coaches, which I scorekeep for at meets

[20:15] <TimToady> but it does do single character entry and updates the screen as things change

[20:16] <TimToady> and works a bit like a specialized spreadsheet, so performance matters

[20:16] <masak> nod.

[20:18] *** havenn left
[20:19] *** snearch joined
[20:20] <[Coke]> masak: port padre?

[20:21] <TimToady> possible autopun: https://twitter.com/#!/BryanRoberts72/status/177778947528982528/photo/1

[20:21] *** am0c joined
[20:22] <masak> [Coke]: more like, one warm summer evening I had three distinct ideas for how to extend a vim-like editor to be awesome.

[20:22] <masak> I only remember two of them now.

[20:22] <TimToady> 1st idea, rewrite the whole thing in P6

[20:22] <masak> one was to allow for Perl 6 code refactoring by hooking it up with a STD parser somehow.

[20:23] <masak> the other was to scrap the file system and replace it by a git repo, and then follow the logical consequences of that decision.

[20:23] <masak> that latter idea still excites me sometimes.

[20:23] *** NamelessTee joined
[20:24] <masak> imagine seamlessly switching between file edit mode, git blame mode, git log mode, and git branch mode.

[20:24] <masak> all inside of a vim-like editor.

[20:25] <[Coke]> masak: vim++, git++

[20:25] *** bacek joined
[20:25] <TimToady> track blame on a byte-by-byte basis and you're starting to reimplement Xanadu :)

[20:25] <masak> <skids> ERROR: OK. # short autopun

[20:26] * [Coke] wonders if he can trick timtoady into hacking on pugs.

[20:26] <masak> I'm sorry, I only see a contradiction there. no autopun...

[20:26] <Tene> masak: you're familiar with https://github.com/tpope/vim-fugitive yes?

[20:26] <masak> Tene: nope. looking.

[20:26] * TimToady has hacked on pugs before, hence is wary :)

[20:27] <[Coke]> TimToady: is https://github.com/perl6/Pugs.hs/issues/6 something you could point me in a direction on ?

[20:27] <masak> Tene: nice.

[20:27] <TimToady> I'm afraid hacking in Haskell will turn me into a genius with no empathy for the common man :)

[20:27] <eiro> TimToady, can i quote you ? 

[20:28] <TimToady> nobody is allowed to quote me ever

[20:28] <TimToady> fat load of good that does :)

[20:28] <flussence> .oO( the policy is strictly misquotes only )

[20:28] <Tene> http://en.wikiquote.org/wiki/Larry_Wall ;)

[20:29] <TimToady> I bet almost everything there is more than ten years old...

[20:29] <eiro> you said you prefer forgive than forbid

[20:29] *** buubot_backup left
[20:29] <Tene> http://en.wikiquote.org/wiki/Larry_Wall#Larry_Wall_Speaks_at_Google_.282008.29

[20:30] <TimToady> I said a great many things that I never said, but I'm not as good at it as Yogi Berra...

[20:30] <Tene> eh, you did say "almost"

[20:30] *** integral joined
[20:30] *** integral left
[20:30] *** integral joined
[20:30] <[Coke]> pugs: say 3.sec

[20:30] <p6eval> pugs b927740: OUTPUT«*** No such method in class Int: "&sec"␤    at /tmp/RJ9Aa0mayY line 1, column 5 - line 2, column 1␤»

[20:30] <[Coke]> pugs: say sec(3)

[20:30] <p6eval> pugs b927740: OUTPUT«*** No such subroutine: "&sec"␤    at /tmp/I8WMRsQeDT line 1, column 5 - line 2, column 1␤»

[20:32] <TimToady> I hedge every statement I make.  Well, almost every.

[20:33] <masak> :P

[20:34] <masak> autopuns are funny exactly because the link between use and mention is there, triggers in the listener's brain, and becomes something like a "shared secret" between speaker and listener that both can smile knowingly at.

[20:35] <TimToady> or :P at

[20:35] <masak> actually, much humor seems to involve passing a closure into the listener's brain for them to execute.

[20:36] <TimToady> that's what you thunk

[20:36] <PerlJam> masak++ a nice techie analogy  :)

[20:36] <masak> in the case of autopuns, it's "<mention>. <use>. { now look what I just did, putting those close to each other }"

[20:36] <TimToady> autopuns are a bit like quines

[20:37] * flussence wonders if autopuns can be used for effective captchas...

[20:37] <PerlJam> flussence: until humor can be automated :-)

[20:37] <TimToady> you think bulgarian grannies are not smart enough to follow them?

[20:37] <PerlJam> But then you get the problem of people with no sense of humor

[20:37] <TimToady> why is that a problem?

[20:38] <TimToady> </rimshot>

[20:39] <TimToady> well, I suppose it should be <rimshot/> really

[20:39] <PerlJam> masak: Have you heard the song "Say you'll haunt me" by the group Stone Sour?

[20:39] <masak> no. finding it.

[20:40] <TimToady> .oO(You're so vain, I'll bet you think this song is about you...)

[20:40] <[Coke]> ww

[20:40] * [Coke] suggests updating S06-operator-overloading/sub.t 's "correct overloaded method called" test.

[20:40] <PerlJam> masak: your comment about a shared secret made me think of that song.

[20:40] <[Coke]> rw!

[20:40] <PerlJam> masak: "Little souvenirs and secrets shared, Little off guard and unprepared"

[20:41] <flussence> .oO( rw = read-write, ww = write amplification... )

[20:43] * TimToady wants :aro = "almost read-only"

[20:44] * TimToady wonders how that differs from :arw...

[20:44] *** fsergot joined
[20:44] <PerlJam> the former is easier to pronounce :)

[20:45] <fsergot> hi o/

[20:45] <masak> PerlJam: interesting music video.

[20:45] <masak> fsergot! \o/

[20:46] <[Coke]> :raw

[20:50] *** buubot_backup joined
[20:54] *** wooden_ left
[20:56] <TimToady> [Coke]: In regard to helping you with Haskell, either giving you a fish or teaching you how to fish would entail me learning how to fish again first...

[20:56] *** bluescreen10 left
[20:57] *** fglock left
[20:58] <TimToady> and if you try to teach me, we'd have entail recursion...

[20:58] <masak> [Coke]: I'm eager to help. I will not have tuits of that shape until $weekend, though.

[21:03] *** leprevost left
[21:04] *** thou left
[21:06] *** birdwindupbird left
[21:21] <diakopter> entrail recursion?

[21:21] <diakopter> oh, entail

[21:23] <jnthn> o/ diakopter :)

[21:28] <masak> diakopter! \o/

[21:29] *** att left
[21:36] *** icwiener joined
[21:38] *** pat_js joined
[21:45] *** havenn joined
[21:47] *** kaare_ left
[21:50] <felher> I just wanted to briefly note that there is an incomplete sentence in the specs (starting at S04-control.pod:1057) which i am - sadly - not able to fix. Maybe someone with exceptional perl6 experience can fix it? :)

[21:53] *** pat_js left
[21:54] *** pat_js joined
[21:58] *** havenn left
[21:59] *** havenn joined
[22:03] *** skids left
[22:03] <masak> that one can only be fixed by someone who understands the exception model, I'm afraid ;)

[22:04] <jnthn> I guess I could take a 

[22:04] <masak> :P

[22:06] <felher> :)

[22:07] <jnthn> Hm. Not immediately obvious how to fix that one.

[22:12] <masak> it's as if the one who wrote that sentence got interrupted by a thought flow escape mechanism of some sort, and didn't handle the interruption properly.

[22:12] *** am0c left
[22:15] <felher> Hihi, indeed :)

[22:16] <dalek> specs: a0d5a9e | jnthn++ | S04-control.pod:

[22:16] <dalek> specs: A couple of fixes to the exceptions spec.

[22:16] <dalek> specs: review: https://github.com/perl6/specs/commit/a0d5a9eda3

[22:16] <masak> there should be, like, specific instructions for how to behave in such situations.

[22:16] <jnthn> That should do it.

[22:18] <felher> \o/

[22:18] <felher> jnthn++

[22:18] <eiro> thanks masak! (for the talk proposal)

[22:18] <masak> you're welcome.

[22:19] <masak> I should probably include some slides about Gödel numbering in my next instance of the autopuns lightning talk.

[22:20] <felher> Since we are currently at exceptions: Maybe one could explain to me why we do "set_outer_caller's_bang(@handled) unless @unhandled;" in the code just above that part? :)

[22:20] <felher> The outer caller gets all handles exceptions in it's @!, if there aren't any unhandled exceptions?

[22:20] <jnthn> felher: Correct

[22:20] <jnthn> felher: It's an optimization really

[22:21] <jnthn> felher: And may well be a false one

[22:21] <jnthn> The reasoning is that if there are unhandled exceptions, we will unwind the stack beyond this point, so the @! we set in that statement could never be read.

[22:21] *** snearch left
[22:21] *** alester left
[22:22] <jnthn> Though in today's Rakudo, storing a lexical is probably cheaper than the condition check. :)

[22:28] <felher> jnthn: ah, okay. I think i got it.  :) My last question would be: What exactly is the outer-caller: Can  i do the following: "sub-that-handles-all-exceptions-in-a-catch-block(foo); for @! { ... #check what exceptions were handled by sub-that...}"

[22:29] <felher> jnthn: is that the outer-caller that gets its @! set?

[22:31] <jnthn> hm

[22:31] <jnthn> ah

[22:31] <jnthn> nom: try { die "foo" }; say $!

[22:31] <p6eval> rakudo 4235df: OUTPUT«foo␤  in block <anon> at /tmp/2D0QePVnpc:1␤␤»

[22:32] <jnthn> nom: try { die "foo" }; say $!.message

[22:32] <p6eval> rakudo 4235df: OUTPUT«foo␤»

[22:32] <jnthn> I thought it was something to do with the setting of the $! there

[22:33] <jnthn> nom: { die "foo"; CATCH { default { } } }; say $!

[22:33] <p6eval> rakudo 4235df: OUTPUT«foo␤  in block <anon> at /tmp/ldKu89LpyM:1␤␤»

[22:33] <jnthn> nom: { die "foo"; CATCH { default { } } }; say $!.message

[22:33] <p6eval> rakudo 4235df: OUTPUT«foo␤»

[22:33] <jnthn> Like that with an explicit CATCH

[22:35] *** aindilis left
[22:36] *** aindilis joined
[22:36] *** djanatyn left
[22:37] <felher> nom: sub exc() { die "blar"; CATCH { default { } } }; exc(); say $!.message;

[22:37] <p6eval> rakudo 4235df: OUTPUT«Method 'message' not found for invocant of class 'Any'␤  in block <anon> at /tmp/9aG6hyJvNe:1␤␤»

[22:37] *** Tene left
[22:38] *** thelazydeveloper joined
[22:39] <felher> In this case, isn't the 'say $!.message' part the outer-caller?

[22:40] <jnthn> I'm mostly confused by the term "outer caller" there

[22:40] <jnthn> It feels more like outer-outer or some such

[22:41] <jnthn> "the place we're going to unwind to"

[22:42] <felher> Would the "say $!.message"-part be the place we're going to unwind to?

[22:42] <jnthn> Yes

[22:42] *** djanatyn joined
[22:43] <felher> jnthn: okay, great :)

[22:43] <felher> jnthn: so, thanks for your patience and explanations :) jnthn++

[22:43] <jnthn> nom: sub foo() { die "lol"; CATCH { default { } } }; foo(); say $!.message

[22:43] <p6eval> rakudo 4235df: OUTPUT«Method 'message' not found for invocant of class 'Any'␤  in block <anon> at /tmp/H_cisZ8Bx7:1␤␤»

[22:43] *** Tene joined
[22:43] *** Tene left
[22:43] *** Tene joined
[22:44] <jnthn> perl6: sub foo() { die "lol"; CATCH { default { } } }; foo(); say $!.message

[22:44] <p6eval> rakudo 4235df: OUTPUT«Method 'message' not found for invocant of class 'Any'␤  in block <anon> at /tmp/rlLn1XYcCM:1␤␤»

[22:44] <p6eval> ..pugs b927740: OUTPUT«*** lol␤    at /tmp/iU1tM_vq1W line 1, column 49-54␤       /tmp/iU1tM_vq1W line 1, column 13-22␤»

[22:44] <p6eval> ..niecza v15-4-g1f35f89: OUTPUT«Unhandled exception: Unable to resolve method message in class Any␤  at /tmp/FqhAvC_nrh line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3838 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3839 (module-CORE @ 65) ␤  at /home…

[22:44] <jnthn> If it really meant caller I'd kinda expect that to work.

[22:49] <felher> For a moment i thought it works in pugs. But pugs just doesn't catch the exception, i think.

[22:50] *** mtk left
[22:53] *** aindilis left
[22:53] *** aindilis joined
[22:54] <dalek> nqp: f2d0311 | jnthn++ | src/6model/serialization.c:

[22:54] <dalek> nqp: Avoid CTMThunk write_ref error reported by moritz++.

[22:54] <dalek> nqp: review: https://github.com/perl6/nqp/commit/f2d0311603

[22:54] <jnthn> phenny: tell moritz fixed the issue that sunk your progress earlier

[22:54] <phenny> jnthn: I'll pass that on when moritz is around.

[23:10] *** marmalade left
[23:12] *** marmalade joined
[23:13] <masak> 'night, #perl6

[23:17] <felher> o/

[23:19] *** PacoAir left
[23:21] *** havenn left
[23:30] *** icwiener left
[23:35] *** thelazydeveloper left
[23:39] *** sivoais left
[23:51] *** Trashlord left
[23:58] *** Timbus left
[23:58] *** NamelessTee left
[23:58] *** Timbus joined
