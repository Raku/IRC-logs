[00:19] <rjbs> yum, pho.

[00:20] *** larks left
[00:24] *** tokuhirom joined
[00:27] *** larks joined
[00:27] *** daemon left
[00:27] *** d4l3k_ joined
[00:28] *** p6eval left
[00:28] *** larks left
[00:28] *** larks joined
[00:29] *** Juerd left
[00:29] *** Juerd joined
[00:29] *** dalek left
[00:29] *** p6eval joined
[00:29] *** ChanServ sets mode: +v p6eval

[00:30] *** masak left
[00:30] *** d4l3k_ is now known as dalek

[00:30] *** masak joined
[00:30] *** Util left
[00:30] *** Util joined
[00:30] *** daemon joined
[00:33] *** BaggioKwok joined
[00:33] *** daemon left
[00:34] *** daemon joined
[00:34] *** leprevost left
[00:38] *** BaggioKwok left
[00:38] *** BaggioKwok joined
[00:46] *** BaggioKwok left
[00:47] *** BaggioKwok joined
[00:51] *** leprevost joined
[00:55] *** AndChat- joined
[00:55] *** BaggioKwok left
[00:58] *** mcglk joined
[00:58] *** AndChat- left
[00:58] *** BaggioKwok joined
[01:14] *** scott_ joined
[01:14] *** scott_ is now known as Guest29973

[01:15] *** BaggioKwok left
[01:16] *** ponbiki left
[01:17] *** BaggioKwok joined
[01:20] *** BaggioKwok left
[01:20] *** BaggioKwok joined
[01:21] *** BaggioKwok left
[01:22] *** BaggioKwok joined
[01:23] <quietfanatic> One thing I miss in Perl6 that there was in C is the ability to chain statement control forms.

[01:23] <quietfanatic> if (...) \n for (...) \n if (...) \n { ... }

[01:24] <quietfanatic> without requiring a {} for each line and inducing indentation creep.

[01:24] <quietfanatic> I wonder if the Perl 6 grammar could be flexed to support it (without parentheses)

[01:26] <quietfanatic> I know chained ifs can be done with 'and', but fors and such would benefit from this.

[01:27] <quietfanatic> (er, take out the final \n before the {)

[01:31] *** Guest97945 left
[01:33] <geekosaur> they're a frequent source of unexpected behavior in C, actually, and are widely regarded as a misfeature as a result

[01:36] <quietfanatic> The only unexpected behavior I can imagine is an ambiguously-matched else.

[01:37] <quietfanatic> And as long as the final set of { } is required you won't accidentally drop statements out of the block.

[01:38] <dalek> niecza/non-bootstrap: e80e1fe | sorear++ | lib/ (4 files):

[01:38] <dalek> niecza/non-bootstrap: Actions pt 16

[01:38] <dalek> niecza/non-bootstrap: review: https://github.com/sorear/niecza/commit/e80e1fe7df

[01:38] *** BaggioKwok left
[01:39] *** BaggioKwok joined
[01:40] <quietfanatic> I suppose you can chain them in statement postfix form, but that makes the program flow backwards.

[01:49] <quietfanatic> std: 3 if 5 for 0..10 if 1

[01:49] <p6eval> std 30385f8: OUTPUT¬´Use of uninitialized value $x in pattern match (m//) at STD.pm line 66584.‚ê§Use of uninitialized value $x in concatenation (.) or string at STD.pm line 66623.‚ê§Use of uninitialized value $x in pattern match (m//) at STD.pm line 66584.‚ê§Use of uninitialized value $x in c‚Ä¶

[01:49] *** BaggioKwok left
[01:49] <quietfanatic> I take it back, you can't arbitrarily chain statement postfixes.

[01:49] *** BaggioKwok joined
[01:49] <quietfanatic> Not only that, it makes std wig out.

[01:50] *** huf joined
[01:54] *** BaggioKwok left
[01:54] *** jaldhar joined
[01:54] *** BaggioKwok joined
[01:58] *** _jaldhar joined
[01:58] *** jaldhar left
[02:02] *** BaggioKwok left
[02:03] *** BaggioKwok joined
[02:10] *** _jaldhar left
[02:10] *** _jaldhar joined
[02:14] *** BaggioKwok left
[02:15] *** BaggioKwok joined
[02:15] *** tokuhirom left
[02:16] *** tokuhirom joined
[02:17] *** mberends joined
[02:18] *** cooper joined
[02:19] <TimToady> even though C lets you omit those braces, a lot of people would consider it bad form in terms of communicating intent to the reader

[02:19] *** huf left
[02:19] *** adu joined
[02:20] *** tokuhirom left
[02:21] *** huf joined
[02:27] *** BaggioKwok left
[02:27] *** BaggioKwok joined
[02:30] *** orafu left
[02:32] *** orafu joined
[02:35] <quietfanatic> I do not find it unclear at all, but I guess I am not a lot of people.

[02:35] <quietfanatic> Strange people.

[02:40] *** sudokode joined
[02:40] *** BaggioKwok left
[02:40] *** AndChat- joined
[02:43] *** AndChat- left
[02:43] *** BaggioKwok joined
[02:53] *** tyatpi_ left
[02:53] *** tyatpi left
[03:00] *** AndChat- joined
[03:00] *** BaggioKwok left
[03:01] *** adu left
[03:10] *** AndChat- left
[03:13] <mucker> TimToady: I was wondering. In english, a plural is formed by taking a word and adding a *suffix* 's' to it. In perl, wouldn't it be more linguitical to have foo$ and foo@ ?? Also is there a language that uses a prefix to indicate a plural ?

[03:14] <mucker> *linguistical

[03:16] <quietfanatic> It would be more Englishtical, sure

[03:17] <quietfanatic> I don't know about linguistical.

[03:18] *** adu joined
[03:23] <TimToady> well, Navi has a plural prefix... :)

[03:23] <TimToady> apparently proto-IE had one too

[03:23] <TimToady> which might or might not be related to the re- we were discussing earlier

[03:24] <TimToady> I'm sure there are others, but such info is difficult to google for

[03:25] <TimToady> as for putting the sigil last, BASIC/PLUS had foo$ for strings and foo% for integers

[03:25] <TimToady> but that doesn't help with interpolation

[03:28] <TimToady> Athabaskan languages

[03:29] <TimToady> Swahili, apparently

[03:31] <TimToady> Bantu as well

[03:32] <mucker> nice to know :)

[03:32] <mucker> How would suffix sigil be problematic for interpolation ?

[03:33] *** libertyprime left
[03:34] <TimToady> Etung in Nigeria, so perhaps most African languages work this way

[03:34] *** libertyprime joined
[03:34] <TimToady> mucker: you'd have to backtrack after finding the $

[03:35] <mucker> Ah, ok

[03:35] <mucker> good idea for a Acme, source filter though :P

[03:37] <TimToady> apparently a lot of Pacific Indian languages work this way too

[03:38] <TimToady> interesting question though

[03:38] <TimToady> mucker++

[03:39] *** sisar left
[03:44] *** sisar joined
[03:54] *** alester joined
[03:54] <alester> Is there some magic that nqp needs to know about Parrot?

[03:54] <[Coke]> alester: ?

[03:54] <alester> uniqua:~/nqp :( $ perl Configure.pl 

[03:54] <alester> error:imcc:No such file or directory

[03:54] <alester>         in file 'parrot-config.pir' line 1

[03:55] <alester> Do I need to do some other Parrot install other than "sudo make install"

[03:55] <[Coke]> you might have an old parrot installed. perhaps use --gen-parrot to build a local copy?

[03:55] <alester> I just installed it now

[03:55] <alester> --gen-parrot on Configure.pl?

[03:55] <[Coke]> (when I work on rakudo, I tend to use its --gen-parrot option, and have it build a fresh copy of nqp (which builds a fresh copy of parrot) all local to rakudo.

[03:55] *** thou joined
[03:56] <alester> so I don't need to bother installing Parrot to /usr/local?

[03:56] <[Coke]> if you installed a recent parrot, then the recent nqp should work, assuming it's in your path.

[03:56] <[Coke]> I don't think most devs do, no.

[03:56] <[Coke]> it gets installed, but into .../rakudo/install

[03:57] <[Coke]> and --gen-parrot does all the git work (if any) for you.

[03:58] *** kurahaupo left
[03:58] <alester> well, I DID just install to /usr/local

[03:58] <alester>  /usr/local/include/parrot etc

[04:01] <alester> but I get the same results when I tried --with-parrot=/usr/local/bin/parrot

[04:03] <alester> ah, I see what it did.  OK, I guess I'll delete my big installed one

[04:05] *** kurahaupo joined
[04:05] <alester> holy cow, the compiler errors in nqp.

[04:05] <alester> My work here is clear.

[04:13] *** araujo left
[04:14] <alester> oh poo, they're in 3rd-party files.  I'll to do some makefile stuff.

[04:15] <sorear> compiler ... errors?

[04:15] <alester> well, warnings

[04:21] *** alester left
[04:33] *** pyrimidine left
[04:36] <[Coke]> alester is stricter than your average bear.

[04:37] * [Coke] realizes it's tomorrow, and thinks that if he's going to stock cans of soda and drink them at 8pm, they shouldn't be red bull clones.

[04:40] *** sudokode left
[04:46] <adu> [Coke]: heh

[04:51] <timotimo> hm, somehow i find the syntax from ruby (and probably other places, too) where you append ? to a method name if it's supposed to test for some property, cute

[04:51] <timotimo> std: sub is-foo?($a) { $a < 5 }

[04:51] <p6eval> std 30385f8: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Malformed block at /tmp/CTQ14AUcdE line 1:‚ê§------> [32msub is-foo[33m‚èè[31m?($a) { $a < 5 }[0m‚ê§    expecting any of:‚ê§     new name to be defined‚ê§ routine_def‚ê§    trait‚ê§Parse failed‚ê§FAILED 00:00 40m‚ê§¬ª

[04:52] <timotimo> std: sub is-foo‚Åà($a) { $a < 5 }

[04:52] <p6eval> std 30385f8: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Malformed block at /tmp/9B3C7nnC05 line 1:‚ê§------> [32msub is-foo[33m‚èè[31m‚Åà($a) { $a < 5 }[0m‚ê§    expecting any of:‚ê§     new name to be defined‚ê§ routine_def‚ê§    trait‚ê§Parse failed‚ê§FAILED 00:00 40m‚ê§¬ª

[04:53] <sorear> timotimo: I believe that first appeared in LISP, spelled ATOMP; the atom? form may have originated with Scheme

[04:53] <sorear> the P is for predicate

[04:53] <timotimo> neither ? nor ¬ø nor ‚Åà work in function names :(

[04:54] * timotimo afks his way to uni

[04:59] <benabik> .u 

[04:59] <phenny> benabik: You gave me zero length input.

[04:59] <benabik> .u ‚Åà

[04:59] <phenny> U+2048 QUESTION EXCLAMATION MARK (‚Åà)

[05:08] *** GlitchMr joined
[05:11] <geekosaur> smalltalk also uses the foo? form (and is where ruby picked it up from)

[05:11] * moritz waits for the !!!!11! Unicode character

[05:14] <adu> hi moritz 

[05:17] <moritz> \o adu 

[05:17] *** fhelmberger joined
[05:17] <adu> what was that testing thing?

[05:17] <adu> the whole ok function thing

[05:19] <adu> TAP found it

[05:26] <sisar> (re appending ? to methods) its a nice idea to differentiate methods. 

[05:27] <sisar> r: my $v = 'abc'; $v.uc; say $v;

[05:27] <p6eval> rakudo d4c8e6: OUTPUT¬´abc‚ê§¬ª

[05:27] <sisar> hmm, which methods modify a variable permanently ?

[05:28] <moritz> r: my $v = 'abc'; $v.=uc; say $v

[05:28] <p6eval> rakudo d4c8e6: OUTPUT¬´ABC‚ê§¬ª

[05:28] <sisar> well, other than the "=uc" stlye methods :)

[05:29] *** leprevost left
[05:30] <sisar> ok we have push, pop, etc.

[05:30] <sisar> nm.

[05:30] *** cooper left
[05:30] <sisar> was a very vague question...

[05:33] <sorear> $-vars and @-vars are different in kind.  if you want to truly understand Perl 6, you need to accept this.

[05:33] <adu> r: say * ~~ ::Whatever

[05:33] <p6eval> rakudo d4c8e6: OUTPUT¬´True‚ê§¬ª

[05:33] <adu> huh

[05:33] <sorear> $-vars can be modified by any method

[05:33] <sorear> n: my class Foo { method bar($self is rw:) { $self = 10 } }: my $x = Foo.new; $x.bar; say $x;

[05:33] <p6eval> niecza v18-7-ga660099: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Illegal use of colon as invocant marker at /tmp/tbLLps6pLH line 1:‚ê§------> [32mthod bar($self is rw:) { $self = 10 } }:[33m‚èè[31m my $x = Foo.new; $x.bar; say $x;[0m‚ê§‚ê§Unhandled exception: Check failed‚ê§‚ê§  at /home/p6eval/ni‚Ä¶

[05:34] <sorear> n: my class Foo { method bar($self is rw:) { $self = 10 } }; my $x = Foo.new; $x.bar; say $x;

[05:34] <p6eval> niecza v18-7-ga660099: OUTPUT¬´10‚ê§¬ª

[05:34] *** adu left
[05:35] *** birdwindupbird joined
[05:35] <sorear> method calls are just sub calls under the hood, and like any sub they can have rw parameters.

[05:36] <sisar> sorear: I need to accept that I can never know if a method has a rw under the hood ?

[05:37] <sorear> yes.

[05:37] <sorear> fortunately, that's only for $-vars.

[05:37] <sisar> but I guess Perl 6 has good defaults in this case

[05:38] <sisar> sorear: aye, fortunately :)

[05:38] <sorear> @-vars can never be modified; they are fixed to refer to a specific Positional object at binding time

[05:38] <sorear> .push is a completely ordinary method; its invocant is typically an Array object, which has mutable state

[05:42] <sorear> n: say (-> $foo { }).signature

[05:42] <p6eval> niecza v18-7-ga660099: OUTPUT¬´Potential difficulties:‚ê§  $foo is declared but not used at /tmp/07xUuUoP10 line 1:‚ê§------> [32msay (-> [33m‚èè[31m$foo { }).signature[0m‚ê§‚ê§Unhandled exception: Nominal type check failed in binding '' in 'ClassHOW.name'; got Mu, needed Any‚ê§  at /home/p6eval‚Ä¶

[05:42] <sorear> n: say (-> $foo { 2 }).signature

[05:42] <p6eval> niecza v18-7-ga660099: OUTPUT¬´Potential difficulties:‚ê§  $foo is declared but not used at /tmp/Pdgv1s9jGF line 1:‚ê§------> [32msay (-> [33m‚èè[31m$foo { 2 }).signature[0m‚ê§‚ê§Unhandled exception: Nominal type check failed in binding '' in 'ClassHOW.name'; got Mu, needed Any‚ê§  at /home/p6ev‚Ä¶

[05:42] <sorear> n: say (-> $foo { 2 }).signature.perl

[05:42] <p6eval> niecza v18-7-ga660099: OUTPUT¬´Potential difficulties:‚ê§  $foo is declared but not used at /tmp/JUrNINy1xl line 1:‚ê§------> [32msay (-> [33m‚èè[31m$foo { 2 }).signature.perl[0m‚ê§‚ê§Unhandled exception: Nominal type check failed in binding '' in 'ClassHOW.name'; got Mu, needed Any‚ê§  at /home‚Ä¶

[05:42] <sorear> n: say (-> $foo { 2 }).signature.perl #OK

[05:43] <p6eval> niecza v18-7-ga660099: OUTPUT¬´Unhandled exception: Nominal type check failed in binding '' in 'ClassHOW.name'; got Mu, needed Any‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 0 (ClassHOW.name @ 1) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 1107 (Parameter.perl @ 9) ‚ê§  at /home/p6‚Ä¶

[05:43] <sorear> n: say (-> Int $foo { 2 }).signature.perl #OK

[05:43] <p6eval> niecza v18-7-ga660099: OUTPUT¬´:(Int $foo)‚ê§¬ª

[05:43] <sorear> n: say (<-> Int $foo { 2 }).signature.perl #OK

[05:43] <p6eval> niecza v18-7-ga660099: OUTPUT¬´:(Int $foo is rw)‚ê§¬ª

[05:43] *** spaceships joined
[05:43] <sisar> o/ spaceships !

[05:50] <spaceships> howdy :)

[05:53] *** kaleem joined
[05:56] *** Patterner left
[06:05] <dalek> niecza/non-bootstrap: dda9f42 | sorear++ | lib/ (2 files):

[06:05] <dalek> niecza/non-bootstrap: Actions pt 17 (last!)

[06:05] <dalek> niecza/non-bootstrap: review: https://github.com/sorear/niecza/commit/dda9f4261d

[06:08] <tadzik> good morning zebras

[06:09] <sisar> sorear: congrats on finishing Actions !!

[06:10] *** Psyche^ joined
[06:10] *** Psyche^ is now known as Patterner

[06:11] <sorear> heh.

[06:12] <sorear> 'phase 1 is complete'

[06:13] <sorear> I have a lot of loose ends to tie up, and a bootstrap parser to write, before it can even try to run tests

[06:13] *** wtw joined
[06:18] <sisar> sorear++

[06:19] *** xinming left
[06:20] *** xinming joined
[06:24] *** sudokode joined
[06:25] *** GlitchMr left
[06:32] *** adu joined
[06:42] *** spaceships left
[06:44] *** stephenlb left
[06:54] *** mberends left
[06:58] *** adu left
[07:08] *** brrt joined
[07:14] *** BaggioKwok joined
[07:20] *** kresike joined
[07:21] <kresike> good morning all you happy perl6 people

[07:21] <sorear> good morning kresike.

[07:22] <kresike> hello sorear

[07:24] <brrt> sorear: no offense but when do you sleep? :-o

[07:25] <sorear> brrt: in about 2 hours, +/- 1

[07:25] <brrt> I am in awe

[07:26] <sorear> no, I mean I start 2 hours from now

[07:26] <sorear> I will be getting up about 10 hours from now

[07:26] <brrt> still that is short

[07:27] <sorear> 8 hours is pretty normal for a US young adult

[07:27] <brrt> hmm, i guess

[07:27] <sorear> my parents make do on significantly less

[07:29] <moritz> sleep length varies greatly

[07:30] <moritz> I can make do with 8h a day during the week, but then I need a bit more on weekends

[07:31] <bonsaikitten> I oscillate between ~6 and ~12h a day, with an average near 8h

[07:31] <sorear> o/ moritz

[07:33] <dalek> nqp: b5930e1 | moritz++ | tools/build/PARROT_REVISION:

[07:33] <dalek> nqp: bump parrot version to 4.5 release

[07:33] <dalek> nqp: review: https://github.com/perl6/nqp/commit/b5930e183d

[07:34] *** AndChat- joined
[07:34] *** BaggioKwok left
[07:37] *** araujo joined
[07:37] *** araujo left
[07:37] *** araujo joined
[07:44] *** AndChat- left
[07:44] *** BaggioKwok joined
[07:45] *** kurahaupo left
[07:45] *** drbean joined
[07:49] *** thou left
[07:58] *** BaggioKwok left
[07:58] *** BaggioKwok joined
[08:04] <jnthn> morning, #perl6

[08:04] <tadzik> hello jnthn 

[08:05] <moritz> \o jnthn 

[08:05] <moritz> tadzik o/

[08:07] *** SHODAN left
[08:10] *** SHODAN joined
[08:10] *** BaggioKwok left
[08:11] *** BaggioKwok joined
[08:11] <sorear> o/ jnthn

[08:12] * jnthn at $onsite-dayjob today, so won't have tuits until the evening

[08:12] <jnthn> I do at least write a little Perl 6 at this $dayjob at the moment though :0

[08:12] <jnthn> *:)

[08:16] *** drbean left
[08:16] <moritz> yay

[08:17] *** c1sung left
[08:18] *** drbean joined
[08:19] <tadzik> wow

[08:23] *** AndChat| joined
[08:23] *** BaggioKwok left
[08:30] *** jerome_ left
[08:32] *** am0c left
[08:35] *** AndChat| left
[08:35] *** BaggioKwok joined
[08:38] *** BaggioKwok left
[08:39] *** BaggioKwok joined
[08:41] *** BaggioKwok left
[08:41] *** BaggioKwok joined
[08:44] *** BaggioKwok left
[08:44] *** AndChat| joined
[08:53] *** telex joined
[09:04] *** AndChat| left
[09:20] *** skids left
[09:24] *** vmspb joined
[09:37] *** sisar left
[09:38] *** sisar joined
[09:38] *** VXZ left
[10:00] *** grondilu joined
[10:14] <flussence> whoa, how long has <-> { } been there?

[10:14] <moritz> flussence: quite a while :-)

[10:15] <flussence> I need to keep up with these things more often :)

[10:15] *** jerome_ joined
[10:17] <moritz> at least since 2008

[10:19] *** [particle] left
[10:22] *** [particle] joined
[10:23] *** Guest29973 left
[10:37] *** daxim joined
[10:47] *** skids joined
[10:55] *** fgomez left
[10:55] *** fgomez joined
[10:56] *** noam left
[10:56] *** noam joined
[11:03] *** grondilu left
[11:20] *** tokuhirom joined
[11:30] *** mtk left
[11:33] *** snearch joined
[11:33] *** VXZ joined
[11:47] *** mtk joined
[11:51] *** brrt left
[11:52] *** brrt joined
[11:56] *** brrt left
[11:56] *** brrt joined
[12:01] *** vmspb left
[12:09] *** _jaldhar left
[12:16] *** jaldhar joined
[12:20] *** mzgcz joined
[12:25] *** naveen_ joined
[12:25] *** odoacre left
[12:25] *** naveen_ left
[12:36] *** simcop2387 left
[12:39] *** simcop2387 joined
[12:44] *** mzgcz left
[12:53] *** kaleem left
[12:57] *** PacoAir joined
[12:57] *** tadzik left
[13:07] <[Coke]>  4611 tjs       20   0 1874m 978m 1180 D   0.3 83.3   0:54.42 weechat-curses

[13:07] <[Coke]> 83.3% of memory on weechat client.

[13:07] <[Coke]> holding pretty steady.

[13:08] <[Coke]> I think that might be tadzik.

[13:09] *** Psyche^ joined
[13:09] *** Patterner left
[13:09] *** Psyche^ is now known as Patterner

[13:12] *** PerlJam left
[13:15] <pmichaud> yes, feather is really slow for me atm

[13:17] <[Coke]> I don't have sudo.

[13:17] <[Coke]> it's still eating up memory, probably need to kill it.

[13:18] <[Coke]> s/eating up/holding on to/

[13:18] * moritz logs in, and causes even less memory to be available

[13:18] <pmichaud> feather load is 14.16 :-/

[13:19] <moritz> killed.

[13:19] <pmichaud> oh wait, down to 7.47 now :)

[13:19] <[Coke]> moritz: do you have privs to kill that?

[13:19] <pmichaud> moritz++

[13:19] <[Coke]> ah, thanks.

[13:19] *** rafl left
[13:19] <[Coke]> weird, it's still alive.

[13:20] * moritz sends it a deadly SIGKILL

[13:20] *** Vlavv_ joined
[13:20] <[Coke]> all sorts of gone now. thanks.

[13:20] *** tadzik joined
[13:21] *** Vlavv` left
[13:21] *** snearch left
[13:21] <moritz> phenny: tell tadzik sorry, but I had to kill your weechat instance on feature, it used up 1.8G of RAM and swapped

[13:21] <phenny> moritz: I'll pass that on when tadzik is around.

[13:21] <moritz> phenny: tell tadzik *feather

[13:21] <phenny> moritz: I'll pass that on when tadzik is around.

[13:21] <tadzik> moritz: huh, that sounds weird

[13:21] <phenny> tadzik: 13:21Z <moritz> tell tadzik sorry, but I had to kill your weechat instance on feature, it used up 1.8G of RAM and swapped

[13:21] <phenny> tadzik: 13:21Z <moritz> tell tadzik *feather

[13:21] <moritz> tadzik: aye

[13:21] <tadzik> it appeared unreachable for the last couple of minutes, indeed

[13:22] * moritz checks if there's a security update for weechat available on debian

[13:23] *** rafl joined
[13:23] <moritz> weechat (0.3.7-1 => 0.3.8-1)

[13:23] <tadzik> may help

[13:23] <moritz> done.

[13:24] <tadzik> I'll restart it then

[13:24] *** tadzik left
[13:24] *** tadzik joined
[13:24] <moritz> if you want to be safe, do an ulimit first

[13:24] <tadzik> I hope that won't happen again

[13:26] <moritz> pmichaud: I've received an email from somebody who found dead links on rakudo.org, and couldn't find any webmaster email address to notify

[13:27] <moritz> pmichaud: I've fixed those links, but we should do something about the missing webmaster email address

[13:27] <pmichaud> moritz: where would a webmaster email address normally go?

[13:27] <pmichaud> we can certainly put my address there

[13:28] <moritz> pmichaud: well, we could use your email address, or create a new mailing list, or tell them to write to p6c

[13:28] <pmichaud> p6c requires registration, or at least moderation.

[13:28] <moritz> I wonder if we should make a general p6w list for perl 6 related websites

[13:29] <moritz> like perl6.org, rakudo.org, modules.perl6.org etc.

[13:29] <pmichaud> what's the contact address for perl6.org, ooc?

[13:29] <moritz> or if we should use one of the existing addresses

[13:29] <moritz> #perl6

[13:29] <moritz> I might have added mine somewhere too

[13:29] <pmichaud> yours is there, on the about page

[13:29] <frettled> I think a group address or similar would be nice.  Personal addresses are way too failure prone.

[13:31] <pmichaud> I suspect we could get a [email@hidden.address] address.  I'd have to check the DNS settings to know if [email@hidden.address] can work.

[13:31] * pmichaud checks

[13:31] <flussence> I'd suggest having a webmaster@ address that forwards to a real person, there's some RFC somewhere that lists a few "standard" addresses like that one

[13:32] <moritz> fwiw I'm going to upgrade screen on feather

[13:32] <flussence> http://tools.ietf.org/html/rfc2142

[13:32] <moritz> that might kill open screen sessions

[13:33] <moritz> you can execute /tmp/screen-4.0.3 to connect to your old screen sessions

[13:34] *** adu joined
[13:37] <pmichaud> okay, looks like [email@hidden.address] emails successfully make it to the server, so I can at least set up [email@hidden.address] or [email@hidden.address] forwarding addresses

[13:40] <sisar> doesn't wordpress have a plugn or something for this kinda thing ?

[13:42] *** tyatpi joined
[13:42] *** leprevost joined
[13:43] <pmichaud> sisar: oh, probably, yes, but I'm not sure where to look for it.  And besides, contact email address is pretty standard for our likely audience.

[13:43] *** fgomez left
[13:44] <sisar> pmichaud: ok. I can look for a suitable plugin if you want...

[13:48] *** bbkr left
[13:52] *** anant joined
[13:53] <pmichaud> moritz: http://rakudo.org/about/

[13:53] <moritz> pmichaud: great

[13:53] <pmichaud> [email@hidden.address] currently forwards to my address; I can forward to anyone else that wants to receive them

[13:53] <moritz> please add my email address too

[13:54] *** anant is now known as anant_

[13:54] <moritz> [email@hidden.address]
[13:54] <sisar> pmichaud, moritz : i just found this: http://en.support.wordpress.com/contact-form/

[13:54] *** jaldhar left
[13:55] <[Coke]> you can add me too for the webmaster stuff.

[13:55] <[Coke]> moritz: did the screen upgrade happen?

[13:55] <pmichaud> oh, hmmm, my forwarder doesn't like multiple email addresses

[13:56] <pmichaud> I kind of like moritz++'s idea of having a mailing list for infrastructure-things

[13:56] <sisar> the contact from looks perfect, but well, pmichaud++ has already set up an email.

[13:56] <sisar> *form

[13:57] <pmichaud> not sure it should be perl6-web[master]? though.... as we might want admin things not directly web related

[13:57] <timotimo> yapc recordings where the camera never ever shows the slides make me very sad

[13:58] <sisar> pmichaud: may I setup a contact form page, and if u like it we can keep it.

[13:58] <moritz> perl6-infra ?

[13:58] <[Coke]> pmichaud: I can setup a redirect alias at coleda.com ;)

[13:58] <pmichaud> yeah, perl6-infra maybe.  we might have some github notifications going to that address too

[13:58] <pmichaud> [Coke]: oh, I can definitely get something at rakudo.org that will work

[13:59] <[Coke]> hokay.

[14:01] <sisar> there are 31 pending comments on rakudo.org, most of which are spam. May I clean that up ?

[14:01] <pmichaud> sisar: spam cleanup +1

[14:01] * sisar is on it

[14:01] <pmichaud> sisar: if you want to create a page with a contact form, we can look at that also

[14:02] <moritz> and maybe add a link to that to the footer, or so

[14:02] <pmichaud> moritz: how about [email@hidden.address] for the mailing list?

[14:02] <sisar> pmichaud: i'll make it later tonight.

[14:02] <pmichaud> seems long

[14:02] <moritz> pmichaud: well, if it's @rakudo.org, it won't be attractive for non-rakudo stuff (modules.perl6.org etc.)

[14:03] <pmichaud> moritz: sure, but I don't control the other domains :-/

[14:03] <moritz> pmichaud: well, we can always ask the perl.org guys for a mailing list

[14:03] <pmichaud> could be noc@...

[14:04] <pmichaud> perl6-noc@...  :-)

[14:04] <moritz> noc?

[14:04] <pmichaud> "network operations center", canonically

[14:04] <daxim> hand in your computer geek card.

[14:04] <moritz> nervous operating center :-)

[14:04] <daxim> http://noc.perl.org/

[14:05] <moritz> anyway, perl6-noc or perl6-infra would both be fine by me

[14:06] <tadzik> sjn: ping

[14:07] <sjn> pong

[14:07] <sjn> tadzik: what's up? :)

[14:07] <tadzik> sjn: when are the Oslo.pm meetings?

[14:07] <pmichaud> I'll see if I can get [email@hidden.address] mailing list set up.

[14:08] <sjn> tadzik: first wednesday every month

[14:08] *** alester joined
[14:08] * sjn has tadzik's papers at home, but hasn't had time to refund the monies yet :-/

[14:08] <tadzik> oh, I'm glad they got there, was just to ask about this

[14:09] <sjn> yeah, apologies for the delay

[14:09] *** thou joined
[14:09] <tadzik> no problem, I'm the bottleneck of the delays anyway :)

[14:09] <sjn> I'll get to it soon (I need some refunding myself too, so I'll do it at the same time)

[14:10] <sjn> btw, I haven't recieved anything from Filip, I think

[14:10] <tadzik> anyway, there's a chance that me and zby will stumble upon your meeting while visiting the office in July

[14:10] <sjn> tadzik: ooh, cool! :)

[14:10] <sjn> tadzik: bring some of your colleagues :)

[14:10] <tadzik> sjn: yeah, me and zby is the entire Warsaw team :P

[14:10] <sjn> heheeh

[14:11] <sjn> let's call you "Warsaw.pm" :)

[14:11] * sjn was actually thinking about the others at the Oslo office ;(

[14:11] <tadzik> the original plan was to be there from thursday up, but we'll see what we can do

[14:11] <sjn> ;)

[14:11] <tadzik> I can poke some of those guys too

[14:11] <sjn> great :)

[14:12] <sjn> btw, if you bump into sergot, would you mind reminding him about sending his receipts and tickets and stuff?

[14:12] <tadzik> sure thing

[14:13] * sjn is pretty sure he hasn't received any

[14:13] <tadzik> seen sergot?

[14:13] <tadzik> phenny: seen sergot?

[14:13] <tadzik> aloha: seen sergot?

[14:13] <tadzik> no luck for me

[14:13] <sjn> :-/

[14:14] <sjn> the bots are asleep

[14:14] <pmichaud> ENOALOHA

[14:15] *** xinming left
[14:16] <pmichaud> moritz: I'm cc'ing you on the perl.org request.

[14:16] <pmichaud> [Coke]: do you want to be included on the setup discussion, or just a member of the list once it's created?

[14:16] *** xinming joined
[14:18] <timotimo> xprop

[14:19] <flussence> +

[14:20] <moritz> phenny: tell sergot < sjn> btw, if you bump into sergot, would you mind reminding him about sending his receipts and tickets and stuff?

[14:20] <phenny> moritz: I'll pass that on when sergot is around.

[14:20] *** anant_ left
[14:20] <sjn> yay! :)

[14:21] * sjn forgets how to use the bots, despite having seen masak's presentation about them a few years ago in Oslo :)

[14:22] <moritz> you forget stuff you heard just a few years ago? :-)

[14:23] <sjn> no, I forget stuff constantly, and this has been going on for several years :)

[14:23] <pmichaud> moritz: do we want a mailing list on perl.org, or just a forwarding address to a mailing list somewhere else (e.g., google groups or something)?

[14:23] <moritz> pmichaud: I'm fine with a perl.org mailing list

[14:23] <pmichaud> okay, I'll go for that.

[14:24] <pmichaud> sending.

[14:24] <moritz> pmichaud++

[14:25] <[Coke]> for perl.org stuff? cc'ing me may help, as I was the liason with perl.org stuff when parrot was there. Iunno.

[14:25] <[Coke]> (sure)

[14:25] <pmichaud> darn, just sent it

[14:25] <[Coke]> n oworries.

[14:25] <pmichaud> coke: I'll copy you in on any discussions that occur, if any

[14:25] <pmichaud> I suspect it'll be straightforward :)

[14:26] <kresike> bye all

[14:26] *** kresike left
[14:27] *** thou left
[14:28] <timotimo> is it my fault or does pmichauds talk about lists have only blackness on the video stream here and there?

[14:28] <moritz> timotimo: I get the blackouts too

[14:30] <pmichaud> the blackouts are in the video itself

[14:30] <timotimo> OK

[14:30] <pmichaud> I don't know if the official videos will have the same issue; I know that they were there as part of the livestream when it occurred

[14:31] <pmichaud> (and the videos on youtube are just captures of the livestream)

[14:33] <timotimo> all right, gives me hope :)

[14:34] *** tokuhirom left
[14:34] *** tokuhirom joined
[14:38] <timotimo> wow, this is incredibly frustrating. some evil person must have intentionally analysed the stream for where it would be most inconvenient for the video to go black

[14:38] <rjbs> heh

[14:38] *** tokuhirom left
[14:39] <timotimo> "good question! *opens vim*, so if i have a situation like this <start blackness> <long explanation> *closes vim* <end blackness>"

[14:39] <tadzik> yeah

[14:39] <pmichaud> I suspect I could re-figure out what happened in the vim part :)

[14:39] <timotimo> aha! there's the vim again!

[14:41] <moritz> the vim will always be with you

[14:43] *** fgomez joined
[14:50] <timotimo> i'm a big fan of the "no worries" pragma block

[14:52] <rjbs> sounds great, what does it do?

[14:52] <sisar> pmichaud: "WordPress 3.4 is available! Please notify the site administrator." maybe you'd like to upgrade ?

[14:53] <pmichaud> sisar: yes, I'll upgrade it later.

[14:53] <sisar> pmichaud++

[14:53] <moritz> rjbs: pmichaud used it in his talk to indicate stuff that the audience doesn't have to understand

[14:53] <pmichaud> rjbs:  "no worries" identified a segment of my talk.... what moritz++ said :)

[14:53] * rjbs looks forward to watching some youtube videos!

[14:54] * moritz too

[14:54] <pmichaud> http://pmichaud.com/2012/pres/yapcna-lists-2/slides/slide9.html

[14:54] <pmichaud> http://pmichaud.com/2012/pres/yapcna-lists-2/slides/slide15.html

[14:55] <moritz> fwiw I've started a branch that tries to implement 'no strict;'

[14:55] <pmichaud> moritz++

[14:55] <moritz> I think I need to discuss it with jnthn++ a bit

[14:56] *** sisar_ joined
[14:58] *** sisar_ left
[14:58] *** sisar_ joined
[14:59] <harmil> So, I'm not sure if TimToady misunderstood my question last night, or if rakudo is wrong...

[14:59] <harmil> but here's what I've got:

[14:59] <sisar_> maybe someone can reply to this: http://rakudo.org/2012/05/23/rakudo-star-2012-05-released/#comment-1665

[14:59] <harmil> rn: given "abc" { when /(.<[b]>)|(<[a]>:<[b]>)/ { say "0={$0 // "Nothing"} 1={$1 // "Nothing"}" } }

[14:59] <p6eval> niecza v18-7-ga660099: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Unrecognized regex metacharacter : (must be quoted to match literally) at /tmp/2nnDDfXU47 line 1:‚ê§------> [32mgiven "abc" { when /(.<[b]>)|(<[a]>:[33m‚èè[31m<[b]>)/ { say "0={$0 // "Nothing"} 1={$1[0m‚ê§‚ê§Unable to parse captu‚Ä¶

[14:59] <p6eval> ..rakudo d4c8e6: OUTPUT¬´0=ab 1=Nothing‚ê§¬ª

[14:59] <harmil> ah, didn't know that n didn't do : yet

[15:00] <harmil> anyway that 0th expression is always matched.

[15:00] *** sisar left
[15:00] <pmichaud> ummmm

[15:00] <jnthn> Was the "slow startup" comment actually based on a current/recent R* release?

[15:00] <harmil> TimToady was suggesting that : didn't do that.

[15:00] <pmichaud> those are both $0 captures

[15:01] <harmil> oh heck, I forgot p6 did that!

[15:01] *** sisar_ is now known as sisar

[15:01] <harmil> thanks, pmichaud++

[15:02] <moritz> jnthn: good question

[15:02] <sisar> jnthn: no idea. I'll ask the OP.

[15:02] <moritz> startup is more like 0.4s or 0.5s here

[15:04] <[Coke]> I suggest a memory starved box, but they he couldn't have built it. 

[15:05] <timotimo> if i derive from iterable and implement reify to return n times the element n, what would that look like? :)

[15:05] <moritz> or maybe cold startup

[15:07] <sisar> i've asked the OP about his/her Rakudo version (http://rakudo.org/2012/05/23/rakudo-star-2012-05-released/#comment-1666)

[15:08] <moritz> sisar++

[15:09] *** wtw left
[15:09] <jnthn> A 50 line Perl 6 script run with rakudo++ helped me delete 350,000 lines of C# code today :)

[15:10] <moritz> so, your summary is -349,950 lines :-)

[15:10] <sisar> jnthn: wow !

[15:10] <moritz> were they all handwritten?

[15:10] <colomon> jnthn++

[15:10] <jnthn> No

[15:11] <jnthn> Generated, and the IDE kept getting the usage analysis wrong for no good reason :/

[15:12] <jnthn> I've also got one analysing stored proc usage transitively, which has dredged up 900 in theory dead SPs. Need to analyze that bunch of stuff some more next time...

[15:12] * jnthn is a Perl 6 armed janitor :)

[15:12] <jnthn> Anyways, home time...and probably some 6-shaped tuits this evening :)

[15:12] <moritz> \o/

[15:12] <sisar> ok, so 0 pending comments for rakudo.org.

[15:13] <moritz> sisar++

[15:13] * colomon also used Perl 6 for $work this morning, but in a much less spectacular fashion

[15:13] * [Coke] still has his mini log analyzer. nothing fancy.

[15:14] * [Coke] needs to get that running locally so he doesn't have to ssh into feather to run it. ;)

[15:14] <sisar> (the OP with the time issue actually commented on 2012/05/08 about wanting to try Rakudo, and then finally ran the helloperl.pl script today.)

[15:18] *** birdwindupbird left
[15:22] <TimToady> harmil: also, : only does something if you backtrack, and there's nothing in your expression that backtracks

[15:28] <harmil> So, right now, it seems that (I don't know if this is to spec) rakudo breaks ties in regexes based on which comes first.

[15:29] <harmil> r: grammar G { rule TOP { <exp> | <aexp>: }; rule exp { \w+ }; rule aexp { 'a'\w* } }; say G.parse("abc").perl

[15:29] <p6eval> rakudo d4c8e6: OUTPUT¬´Match.new(orig => "abc", from => 0, to => 3, ast => Any, list => ().list, hash => EnumMap.new("exp", Match.new(orig => "abc", from => 0, to => 3, ast => Any, list => ().list, hash => EnumMap.new()), ))‚ê§¬ª

[15:30] <harmil> for example, in that case, exp is matched, but if I reverse exp and aexp, then aexp is matched

[15:30] <harmil> ignore the : I left that in because of my testing

[15:31] <harmil> But I'm assuming that it's unsafe to rely on that behavior...

[15:31] <sisar> pmichaud: The contact form feature is not available in the current WordPress version which we are running. After you upgrade it, i'll work on it.

[15:32] <harmil> r: grammar G { rule TOP { <aexp> | <exp> }; rule exp { \w+ }; rule aexp { 'a'\w* } }; say G.parse("abc").perl

[15:32] <p6eval> rakudo d4c8e6: OUTPUT¬´Match.new(orig => "abc", from => 0, to => 3, ast => Any, list => ().list, hash => EnumMap.new("aexp", Match.new(orig => "abc", from => 0, to => 3, ast => Any, list => ().list, hash => EnumMap.new()), ))‚ê§¬ª

[15:32] <sisar> pmichaud: just ping me when you've upgraded it.

[15:33] *** cap joined
[15:34] <harmil> Aha, no! The Overview section of S05 does say, "4) Within a given compilation unit, earlier declaration wins"

[15:34] <harmil> hmmm‚Ä¶ though that seems to be _not_ what rakudo is doing

[15:34] <harmil> since I didn't change the order of declaration.

[15:35] <pmichaud> harmil: in the example above, I think that aexp should always win based on literal prefix

[15:35] <pmichaud> although might be off because of 'rule' and leading whitespace

[15:36] <pmichaud> r: grammar G { token TOP { <exp> | <aexp> }; token exp { \w+ }; token aexp { 'a' \w* } };  say G.parse('abc').perl

[15:36] <p6eval> rakudo d4c8e6: OUTPUT¬´Match.new(orig => "abc", from => 0, to => 3, ast => Any, list => ().list, hash => EnumMap.new("exp", Match.new(orig => "abc", from => 0, to => 3, ast => Any, list => ().list, hash => EnumMap.new()), ))‚ê§¬ª

[15:37] <pmichaud> I'm guessing 'aexp' should've won there.

[15:40] <sisar> this line from http://rakudo.org/how-to-get-rakudo/ about the Rakudo's REPL seems wrong:

[15:40] <sisar> "Each line entered is treated as a separate compilation unit, however (which means that subroutines are preserved after they are defined, but variables are not)."

[15:40] <harmil> hmm‚Ä¶ interesting.

[15:41] <sisar> variables are not preserbed /

[15:41] <sisar> ?

[15:41] <sisar> *preserved ?

[15:41] <harmil> pmichaud: for now, I think the answer is that I can't rely on the behavior, and that's good enough.

[15:41] <quietfanatic> That's weird.  I'm pretty sure variables are and are supposed to be preserved

[15:41] <sisar> quietfanatic: *nod*

[15:42] <sisar> The sentence is broken anyways. Does WP keep a changelog of pages ?

[15:43] <pmichaud> quietfanatic: that text might actually be from before when rakudo had working lexicals in the REPL

[15:43] <pmichaud> (which would be from before rakudo.org was on WP :-)

[15:44] <sisar> nah, WordPress does not (keep a changelog of page editing).

[15:45] *** awwaiid left
[15:45] <sisar> (from the same paragraph) "If the Rakudo compiler is invoked without an explicit script to run, it enters a small interactive mode... " Whats so "small" about it ?

[15:46] *** awwaiid joined
[15:46] <sisar> awwaiid: o/

[15:46] <quietfanatic> Er, becuse it doesn't display a big banner across your screen?

[15:47] <flussence> compare it to haskell's repl, or python's

[15:47] <pmichaud> I'm fine with eliminating "small" there :)

[15:48] <awwaiid> I got a high five, sisar? thanks!

[15:48] <sisar> awwaiid: :)

[15:49] *** kaare_ joined
[15:49] <sisar> pmichaud: the whole page needs a rewrite, a more recent version is the INSTALL.txt file in the rakudo repo. I'll steal text from that.

[15:50] <pmichaud> sisar++  # good 

[15:54] <sisar> moritz: Why is a .txt suffix good/needed ? (https://github.com/rakudo/rakudo/commit/6e1cfd4bb80894d8dd529e32b9b906efb0dbf63d ) After all README, VERSION, etc don't have one.

[15:57] <moritz> sisar: can't remember, that's nearly a year ago

[15:57] *** fgomez left
[15:58] <sisar> moritz: ok, not a big issue :-)

[16:01] * sisar gets pendatic many times

[16:01] <daxim> that's spelled "pedantic"!

[16:01] <sisar> daxim: !! :-)

[16:02] <masak> Muphry's law at work.

[16:02] <masak> evening, meatbrains.

[16:02] <sisar> masak: o/

[16:02] *** brrt left
[16:05] <sisar> the ICU4C library is not a must have for Rakudo, right ?

[16:05] <jnthn> Not a hard requirement, no.

[16:07] <sisar> are there any tests/spectests which will fail if there is no ICU ?

[16:07] <moritz> yes, those that marked with #icu in t/spectest.data

[16:08] <sisar> moritz: ok

[16:08] <jnthn> (They only get run if you have ICU.)

[16:08] <sisar> oh so it will skip 'em, right.

[16:09] *** MayDaniel joined
[16:15] <masak> right.

[16:27] *** PerlJam joined
[16:28] *** daxim left
[16:44] *** mtk left
[16:45] *** mtk joined
[16:50] *** GlitchMr joined
[16:57] <masak> another sexism-related incident at a tech conf. http://www.whatwherewhy.me/blog/2012/06/11/the-male-gaze/ -- wow.

[16:58] *** aesundstrom joined
[17:00] *** aesundstrom left
[17:00] *** cap left
[17:09] <benabik> While I don't mind not having to wear a suit & tie, perhaps referring to genitalia is getting a little _too_ casual.

[17:11] <PerlJam> First time I've seen the term "feminism theory"

[17:11] <masak> really? you must not live in Sweden.

[17:12] <masak> here it's an academic field.

[17:12] <jnthn> :/

[17:13] <rjbs> It's usually called "feminist theory" ime.

[17:13] <rjbs> Ah, as it is in the article.

[17:13] * jnthn wonders why it's not as blindingly obvious to others as it is to him that said Azure dance routine and song was of course going to be a terrible idea. 

[17:13] <rjbs> jnthn: It's bizarre, isn't it?

[17:13] <PerlJam> either way, it's the first time I've seen the word "theory" associated with feminism in any way.

[17:14] <benabik> I find the face that it's a .me domain amusing.  My first read of the domain name is "What?  Where?  Why me?"

[17:14] <PerlJam> rjbs: it's ... wait for it ... the male gaze!  :)

[17:15] <masak> jnthn: sometimes bad ideas aren't properly culled before publishing. seems like a case of not enough people in the filtering process who would've thought of stopping it.

[17:15] <pmichaud> PerlJam: looks like a common term in most Women's Studies curricula

[17:15] <pmichaud> masak:  I suspect it's  "...who would've realized anything was amiss", sadly.

[17:15] <rjbs> benabik: Heh.

[17:15] *** Chillance joined
[17:16] <flussence> today something reminded me of the whole "Windows 7 Release Party" thing. MS really needs to stop trying to "innovate" its advertising.

[17:16] <PerlJam> not enough critical thinkers in the room.

[17:17] <pmichaud> well, it may also have been a small room

[17:17] <sorear> good * #perl6

[17:18] <masak> feels to me MS often makes this kind of blunt mistake when trying to amuse people.

[17:18] <masak> good *, sorear.

[17:19] <masak> or maybe it's just big IT corps making this kind of blunt mistake. Dell recently did the misogynist comedian stunt.

[17:21] <PerlJam> no, they're just more noticable

[17:21] <[Coke]> masak: tofubrain.

[17:23] *** Chillance left
[17:23] <pmichaud>  afk, lunch

[17:23] *** Chillance joined
[17:29] <masak> [Coke]: I wonder if there are vegan zombies.

[17:30] <adu> masak: misogynist comedian? what did they do?

[17:31] <[Coke]> masak: GRAAAAAAAAAAAAAAINS

[17:32] <masak> [Coke]: :P

[17:33] <masak> adu: http://geekfeminism.wikia.com/wiki/Mads_Christensen_and_Dell

[17:35] <adu> interesting

[17:36] <PerlJam> also, testafy looks like Cucumber with a nice interface

[17:36] *** mtk0 joined
[17:37] *** mtk left
[17:37] *** mtk0 left
[17:38] *** mtk joined
[17:38] *** BlueT_ left
[17:39] *** BlueT_ joined
[17:45] *** fhelmberger left
[17:49] *** cggoebel left
[17:50] *** thou joined
[17:51] *** cggoebel joined
[18:03] *** vmspb joined
[18:04] *** preflex_ joined
[18:06] *** preflex left
[18:06] *** preflex_ is now known as preflex

[18:08] *** thou left
[18:17] <masak> PerlJam: url? DuckDuckGo doesn't find anything reasonable for 'testafy', and is sure I spelled it rong.

[18:18] <[Coke]> testify?

[18:18] <rjbs> testafy

[18:18] <PerlJam> testafy.com

[18:19] <rjbs> I have their card somewhere.

[18:19] <rjbs> I can look for it in a minute if nobody finds it.

[18:19] <masak> PerlJam: thank you.

[18:21] <masak> PerlJam: I'm still curious about how the failure modes of such a thing may look.

[18:22] <masak> there is something to be said for crisp exactness, too.

[18:22] *** mucker left
[18:22] <masak> but yeah, "the Google of automation tools" sounds not-too-bad.

[18:22] <rjbs> I wanted to see whether I could program it without using the Englishy bits

[18:23] <rjbs> I don't care if they offer that for others, but I really do not like programming like that.

[18:24] <PerlJam> rjbs: me either.  It's too far away from the metal and not quite the right abstraction (for me).

[18:25] <rjbs> And if you want to metaprogram, you're now generating "English" with perl

[18:27] <masak> brains and computers keep meeting in the middle and creating awesome stuff. English isn't the middle, it's too much towards the brains.

[18:29] <PerlJam> things like cucumber or testafy also don't make sense to me a BDD.  The underlying premise that the devs and clients always talk to each other seems a little unrealistic.  however, as "behavior driven bug fix" or something it might more sense in that you can have the "customer care" folks interact with the client and without much technical knowledge they can generate the appropriate tests that you can code to.

[18:32] *** aindilis left
[18:32] <masak> I am really jazzed about the idea of an "executable spec", editable by the domain expert, and runnable as automated tests on the application.

[18:33] <masak> I think that has great potential. and it makes a lot more sense with commands and events, too.

[18:37] *** aindilis joined
[18:37] <PerlJam> it'll have more potential when we get out of this "write your tests in this stilted english" phase.  :)

[18:38] *** aindilis left
[18:38] <jnthn> Those weird English dialects always struck me as at least as difficult to write as many programming languages. :)

[18:39] <jnthn> Worse, as a programmer, I couldn't immediately see the patterns and how it mapped to stuff.

[18:39] <jnthn> Feels like worst of both worlds.

[18:39] <masak> you.wrong.me.sir! once.you.learn.to.read.this.it.is.very.easy!

[18:39] * masak .oO( Object-Obsessed Programming )

[18:39] <jnthn> hah, reminds me of a slide I once had...

[18:40] <jnthn> You.Put.Periods(in => "stuff").And("throw").In(some => "lambdas").And.HOLYSHITADSL();

[18:40] <masak> :P

[18:41] * masak read that as "holy shit, ASDL!"

[18:41] <PerlJam> heh

[18:41] <jnthn> Back in the long-way-from-anything village where I grew up, there was a day I said that one too. :P

[18:42] *** aindilis joined
[18:43] <jnthn> oh wait, that was ADSL... :)

[18:43] <masak> oops. indeed.

[18:43] <pmichaud> "Holy dotcoms, Batman!  It's a method chain!"

[18:44] <jnthn> Though, google ASDL and there is a "Abstract Syntax Description Language"

[18:44] <jnthn> :)

[18:44] <PerlJam> I'm all for these so-called DSLs if they are useful.  But many times they are just clever-for-clever sake if you ask me.

[18:44] <masak> aye.

[18:44] <jnthn> Too many times, yeah.

[18:44] <masak> regexes are undeniably a useful DSL.

[18:45] <jnthn> Right.

[18:45] <jnthn> There's a bunch of good examples.

[18:46] <pmichaud> bah, behind every regex is source code that is within a couple of orders of magnitude of the regex version.  :-P

[18:47] <pmichaud> afk for a while

[18:50] <sorear> asymmetric direct subscriber line?  anti-defamationsomethingleague?

[18:51] <tadzik> wasn't that Digital Subscriber Line?

[18:52] <jnthn> I think so.

[18:53] <masak> pmichaud: that's probably part of why regexes are really useful. they fold complex string handling into a natural syntax.

[18:54] <masak> I'm always on the lookout for ways to pull off the same trick in other domains. *syntactically* making hard things possible.

[19:03] *** quietfanatic left
[19:03] *** cog_ joined
[19:05] *** skids left
[19:06] *** cognominal left
[19:11] *** mtk left
[19:12] *** mtk joined
[19:26] <harmil> 300 lines of code in 4 files, and I get "Unable to parse blockoid, couldn't find final '}'"

[19:26] <harmil> Any chance Rakudo could change that error to "go fish"?

[19:28] <diakopter> +238746 that error is horribly common

[19:34] *** vmspb left
[19:37] *** xinming left
[19:38] *** cog__ joined
[19:40] <jnthn> harmil: I *could* do that, but instead I fixed it to report a location in https://github.com/perl6/nqp/commit/ea9ceea3ed4dbd505860b4208b469e1e30354720 :)

[19:41] *** cog_ left
[19:41] *** GlitchMr left
[19:41] <colomon> harmil: I've got that error in Rakudo with perfectly legal Perl 6 code...

[19:43] *** mikemol joined
[19:44] <harmil> jnthn: clearly you are incapable of performing a simple request. For shame! ;-)

[19:44] <jnthn> harmil: I'll put it on my todo list :-P

[19:44] <harmil> colomon: well, parsing errors will happen. My concern is just trying to find the location, and jnthn has fixed that for me. Thanks!

[19:44] *** birdwindupbird joined
[19:47] *** quietfanatic joined
[19:49] <tadzik> "She talks about closure and that validation bit"

[19:49] <tadzik> Well, Offspring, I've never looked at you in that light

[19:49] <tadzik> sjn: sergot says he'll send stuff tommorow

[19:49] <huf> hahahahah :D

[20:03] <adu> tadzik: you're awake?

[20:04] <tadzik> adu: I am

[20:07] <tadzik> adu: whatsup?

[20:08] <adu> tadzik: the sky

[20:09] <tadzik> haha, you got me by suprise ;)

[20:09] <adu> also, trying to learn how to use TAP/Test.pm

[20:11] <tadzik> it's quite convenient

[20:12] <adu> but I guess one could just print "not ok" too

[20:12] <tadzik> indeed. Rakudo does that, in pre-Test.pm tests

[20:12] <tadzik> but it's just easier to call ok()

[20:12] <adu> it is

[20:36] *** cggoebel left
[20:36] *** thou joined
[20:37] *** cggoebel joined
[20:39] *** sudokode left
[20:41] * colomon is now undoing his last four hours' worth of $work...

[20:44] <geekosaur> oops

[20:44] *** leprevost left
[20:47] *** sudokode joined
[20:52] *** birdwindupbird left
[20:54] *** birdwindupbird joined
[20:54] *** cog__ left
[20:55] *** cognominal joined
[20:56] *** skids joined
[21:01] *** cog_ joined
[21:03] <sisar> where in the synopses are the rules for variable names ? or are the rules same as perl5 ?

[21:04] *** cognominal left
[21:05] *** atrodo joined
[21:05] *** cj__ is now known as cj

[21:06] <masak> sisar: S02.

[21:06] <masak> the rules are mostly the same as in Perl 5.

[21:06] <sisar> masak: thanks

[21:06] <masak> what's new is that you can use apostrophes and dashes inside identifiers, as long as alphabetics surround.

[21:07] <masak> rn: sub foo-bar'baz { say "OH HAI" }; foo-bar'baz

[21:07] <p6eval> rakudo d4c8e6, niecza v18-7-ga660099: OUTPUT¬´OH HAI‚ê§¬ª

[21:10] <sisar> "identifiers" ?

[21:10] <sisar> 'identifier' is the variabe/sub/object name ?

[21:10] <[Coke]> huh. cj is the name of my bot.

[21:10] <moritz> sisar: yes

[21:10] <[Coke]> cj: compute the distance to the moon! # ;)

[21:10] <masak> sisar: yes, it's the thing that's common between a variable and a sub name and a class name.

[21:11] <moritz> sisar: though variables in perl 6 are sigil + optional twigil + identifier

[21:11] <sisar> moritz, masak : thanks.

[21:11] <timotimo> moritz: there's also a way to have sigil-less variables

[21:11] <[Coke]> r: say 247038 * 5280

[21:11] <moritz> .. plus optional more identifiers, separated by double colons

[21:11] <p6eval> rakudo d4c8e6: OUTPUT¬´1304360640‚ê§¬ª

[21:11] <sisar> we really need to document these simple concepts somewhere

[21:12] <sisar> moritz++, masak++

[21:12] <timotimo> when you put \ in signatures etc

[21:12] <masak> I'm sure more can be done to build an explicit vocab somewhere.

[21:12] <timotimo> (i use "etc" as "you have to put in all the details because i don't know anything more about it")

[21:12] <sisar> masak: +1 for a perl6 vocab

[21:12] <masak> but in some sense, the only cure for ignorance is hanging around here for half a decade or so.

[21:13] *** kaare_ left
[21:14] * masak .oO( I didn't used to know what "ignoramus" meant, and now I are one! )

[21:14] <cj> [Coke]: was.

[21:15] <cj> [Coke]: it's my name.  find a new one for your bot ;-)

[21:16] *** cggoebel left
[21:17] *** cggoebel joined
[21:27] <[Coke]> if I ever port him to irc, and freenode, absolutely. ;)

[21:27] * [Coke] bumps that up a few notches on the fun todo list.

[21:29] *** kurahaupo joined
[21:33] <sisar> http://wiki.perl6.org/identifier , i could not come up with a good definition., can some add a good, maybe language neutral definition.

[21:33] <sisar> I like making such micro concept docs.

[21:36] <moritz> r: a1-b

[21:36] <p6eval> rakudo d4c8e6: OUTPUT¬´===SORRY!===‚ê§CHECK FAILED:‚ê§Undefined routine '&a1-b' called (line 1)‚ê§¬ª

[21:36] <moritz> std: a1-b

[21:36] <p6eval> std 30385f8: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Undeclared routine:‚ê§ 'a1-b' used at line 1‚ê§Check failed‚ê§FAILED 00:00 40m‚ê§¬ª

[21:37] <sisar> "An identifier may also contain isolated apostrophes or hyphens provided the next character is alphabetic." What is an isolated apostrophe ?

[21:38] <flussence> !~ / ^\' | \'$ /

[21:39] * moritz wonders if it isn't easier to write down the grammars rules for parsing identifiers :-)

[21:39] <moritz> apostrophe is '. "isolated" means there can't be two of them in a row

[21:39] <sisar> moritz++ #defiening identifiers

[21:42] <cog_>   <masak> "but in some sense, the only cure for ignorance is hanging around here for half a decade or so."  Make it a french decade and it will be 365 times more palatable

[21:42] <masak> what's a French decade?

[21:42] <cog_> ten days

[21:42] <masak> heh.

[21:43] <masak> 365 times the knowledge shock, for sure.

[21:43] * sisar is yet to complete a year of #perl6 madness

[21:43] * masak .oO( I know Kung Ffffffffuuuuuuu )

[21:45] <cog_> masak, the factor is greater but in the opposite direction for billions.

[21:46] <cog_> a french billion is 1k the anglosaxon one.

[21:47] <cog_> anyway,  I think we are saner than anglosaxons because we use the metric system

[21:47] <moritz> note that on the British islands, at least the scientists use the metric system

[21:47] <flussence> the roads don't :(

[21:47] <harmil> cog_: $we.defined?

[21:48] <cog_> speaking of decade, fpw, the French Perl workshop, will happen in less then a d√©cade.

[21:48] <cog_> *than

[21:48] <moritz> and in Scotland, empty offices are advertised both in m¬≤ and ft¬≤

[21:49] <harmil> moritz: I'd ask about the y dimension as well before you buy. "It doesn't have one" is a bad sign....

[21:49] <masak> 'night, #perl6

[21:49] <diakopter> o/

[21:49] <cog_> apple.com uses both systems :  http://www.apple.com/macbookair/specs.html

[21:50] *** birdwindupbird left
[21:50] <cog_> but we still uses inches in France for computer display diagonal for whatever reason.

[21:51] *** cggoebel left
[21:51] <moritz> that seems to be an international desease

[21:51] <timotimo> (in germany, too)

[21:52] *** cggoebel joined
[21:52] <cog_> blame marketting 

[21:52] <cog_> s/tt/t/

[21:52] <dalek> doc: edd0140 | moritz++ | lib/Int.pm:

[21:52] <dalek> doc: basic Int docs

[21:52] <dalek> doc: review: https://github.com/perl6/doc/commit/edd014083e

[21:53] <moritz> it seems that Int doesn't really have any methods on its own

[21:53] <moritz> only those provided from Real and Cool

[21:53] <moritz> (notionally; the implementation still has some)

[21:56] *** adu left
[21:58] <moritz>  http://www.perlmonks.org/?node_id=977481 # that illustrates the "arrays force all their values into containers, lists don't" thing, though in perl 5

[21:59] * moritz -> sleep, now that Ronja has decided to sleep as well :-)

[22:07] *** MayDaniel left
[22:07] *** cog_ left
[22:07] *** cog_ joined
[22:09] *** daemon left
[22:09] *** daemon joined
[22:13] <harmil> is there a shorthand for saying "use Module; UNIT::EXPORT::DEFAULT::<&func-that-module-provides> = &func-that-module-provides;" ? That is to say, is there a way to say "re-export symbol foo" once I import it from a module?

[22:13] *** PacoAir left
[22:14] <harmil> Ah, nevermind, it was further down in S11 than I'd read

[22:15] *** cggoebel left
[22:15] *** cggoebel joined
[22:15] <harmil> hmm‚Ä¶ but the right way doesn't seem to be implemented in rakudo yet

[22:41] <jnthn> harmil: No, I think it ain't there yet.

[22:47] *** Patterner left
[22:49] *** tyatpi left
[22:50] <flussence> that's the one big blocker to me implementing a joke PHP module (export thousands of functions, but keep them sanely namespaced internally :)

[22:51] <jnthn> I'm not sure whether you just encouraged me to implement it or discouraged me from implementing it :P

[22:55] <jnthn> Time for some sleep, night o/

[22:55] <flussence> \o

[22:55] <flussence> .oO( sometimes Catalyst feels like the object-oriented equivalent... thousands of methods mixed in from dozens of modules )

[23:13] *** Chillance left
[23:14] *** [particle]1 joined
[23:17] *** [particle] left
[23:22] *** Psyche^ joined
[23:22] *** Psyche^ is now known as Patterner

[23:33] *** thou left
[23:52] *** att joined
