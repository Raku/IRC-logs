[00:07] *** sudokode joined
[00:09] <[Coke]> colomon: lots  of "declared but not used"

[00:09] <colomon> [Coke]: YES

[00:10] <colomon> er, yes

[00:10] <colomon> they seem to only happen the first time Niecza compiles the modules, I think.

[00:10] <[Coke]> ah, only on initial compile?

[00:10] <[Coke]> ah.

[00:12] <[Coke]> error: failed files: "wedding.ly"

[00:13] <colomon> huh?

[00:13] <[Coke]> I compiled wedding.abc -> wedding.ly

[00:13] <colomon> ah.

[00:13] <[Coke]> I then ran wedding.ly through lilypond.

[00:14] <[Coke]> boom.

[00:14] <colomon> and it failed?

[00:14] <colomon> can you post the wedding.ly you got in a gist?

[00:17] * colomon just checked, and wedding.abc -> wedding.ly does work in his Lilypond.

[00:18] <colomon> huh.  though there are a lot of error messages cropping up in Lilypond's output window I never noticed before.

[00:19] <[Coke]> feather.perl6.nl/~coke

[00:19] <[Coke]> GNU LilyPond 2.14.2

[00:19] * colomon has a sudden horrible feeling that Lilypond might be stupid enough to just display the old wedding.pdf file sitting around if generating a new one doesn't work....

[00:22] <[Coke]> put up an "errors" in the same dir.

[00:23] *** _jaldhar left
[00:23] *** mikemol joined
[00:24] <colomon> yes, I get the exact same wedding.ly file.

[00:24] <colomon> Arrrgh, so sorry for this, let me see what I can figure out here.

[00:25] <colomon> ooo, I think I see what's wrong with the wedding.ly file

[00:26] <[Coke]> if it's any consolation, my son is aghast that he might have to use a text editor. ;)

[00:26] <colomon> grump, my MBP is running slow tonight, too.

[00:26] <colomon> if you search and replace "" in the .ly file with " it should work fine.

[00:26] <colomon> now to track down the bug.

[00:27] * colomon must have broken it when he was working on ABC file export a few weeks back

[00:30] *** tokuhirom left
[00:30] *** tokuhirom joined
[00:32] <colomon> [Coke]: just pushed a bugfix.

[00:34] <[Coke]> \o/

[00:34] <[Coke]> I'm going to tell Nathaniel how to file bug reports, btw. watch out. :)

[00:35] <colomon> sweet!  would be wonderful to have someone else poking at it.

[00:36] *** _jaldhar joined
[00:37] <[Coke]> is there a way to specify the output file?

[00:40] <[Coke]> nevermind, don't need it.

[00:42] <colomon> you can do it with pipes... <wedding.abc >wedding.ly

[00:42] <colomon> I suppose I could add a -O option or something like that.

[00:43] *** Telgalizer left
[00:46] <sorear> o/ colomon, [Coke]

[00:47] *** Exio joined
[00:48] *** driador left
[00:48] *** driador joined
[00:49] *** ocharles left
[00:51] <colomon> sorear, o/

[00:52] *** ocharles joined
[01:03] <[Coke]> ugh, what a mess the wrapper script was.

[01:04] <[Coke]> but it works, he can now use TextEdit to edit an abc file, drop to terminal, and generate a pdf.

[01:05] *** xinming_ left
[01:06] *** xinming joined
[01:06] <[Coke]> colomon: do you want to activate "issues" on ABC's github?

[01:07] <colomon> Wynne:ABC colomon$ cat /Users/colomon/bin/abc2ly 

[01:07] <colomon> mono /Users/colomon/tools/niecza/run/Niecza.exe -I/Users/colomon/tools/ABC/lib /

[01:07] <colomon> is the script I use.  :)

[01:08] <colomon> Issues activated, I think.

[01:08] <colomon> (I mean, now they are.)

[01:08] <[Coke]> it's messy because he's not me, and I can't install it.

[01:10] <[Coke]> https://gist.github.com/2985840 - colomon

[01:11] <colomon> interesting.  whenever I want a script that complicated, I always write it in perl.  ;)

[01:12] <[Coke]> I used to be a sysadmin, so I use the bash sometimes.

[01:12] <[Coke]> plus, one less thing to config for him.

[01:12] <[Coke]> bad enough I didn't make it a shiny icon he could click on. :)

[01:20] <colomon> :)

[01:24] *** scott_ joined
[01:24] *** scott_ is now known as Guest20991

[01:32] *** scott___ joined
[01:32] *** raiph joined
[01:32] *** Guest20991 left
[01:34] *** BaggioKwok joined
[01:35] *** fgomez left
[01:42] *** tokuhirom left
[01:44] *** Guest78621 left
[01:54] *** fgomez joined
[01:58] *** BaggioKwok left
[02:05] <colomon> .u &

[02:05] <phenny> U+0026 AMPERSAND (&)

[02:09] *** _jaldhar left
[02:11] *** _jaldhar joined
[02:22] *** orafu left
[02:22] *** orafu joined
[03:02] *** Telgalizer joined
[03:14] *** fgomez left
[03:25] *** vlixes joined
[03:34] *** raiph left
[03:35] <[Coke]> # 06/24/2012 - rakudo++ (22459); niecza (91.12%); pugs (34.5%)

[03:35] <[Coke]> rakudo edging slightly forward.

[03:42] *** Telgalizer left
[03:42] *** Telgalizer joined
[03:46] *** kaleem joined
[03:48] *** jimmy1980 left
[03:57] *** sisar left
[03:58] *** sisar joined
[04:16] *** adu joined
[04:32] *** Telgalizer left
[05:17] *** _jaldhar left
[05:29] *** birdwindupbird joined
[05:33] *** leprevost left
[05:35] *** lue joined
[05:35] <lue> blog post! https://rdstar.wordpress.com/2012/06/25/thoughts-on-starting-nqp-on-llvm/

[05:35] <lue> also, hello again o/

[05:35] *** quietfanatic left
[05:35] <sorear> LUE!

[05:35] *** GlitchMr joined
[05:36] <sorear> 's been ages!

[05:36] <lue> hello sorear o/

[05:36] * sorear jump-hugs lue

[05:36] <lue> XChat said "Loaded log from Wed Mar 28" O.o

[05:39] *** odoacre joined
[05:41] <lue> I feel I should mention modules.perl6.org is currently telling me no-one test, documents, or updates their modules.

[05:41] <lue> *tests

[05:42] <moritz> \o

[05:42] <lue> hello moritz o/

[05:43] *** aloha joined
[05:45] *** fhelmberger joined
[05:46] <adu> oOo

[05:46] *** wtw joined
[05:46] *** wtw left
[05:46] *** wtw joined
[05:48] <lue> hello adu o/

[05:48] <adu> lue: hey

[05:49] <adu> who wrote the blog post?

[05:50] <lue> the one I just linked to? Me.

[05:51] <adu> good job!

[05:52] <adu> I've also considered LLVM

[05:52] <lue> thank you.

[05:52] <adu> however, I was considering compiling PBC=>LLVM

[05:53] <lue> That's sounds good, as well as simpler (but then I'd still have to compile CORE.setting to PBC if I'm not mistaken :P)

[05:54] <adu> doesn't that happen already?

[05:56] <lue> Once rakudo is put entirely on NQP, I don't think rakudo will need to compile to PBC anymore (esp. if NQP is ported to another backend)

[05:58] <lue> It's been a while since I've tried compiling rakudo locally, but I'm fairly sure I'm unable to get past the PIR->PBC (or NQP->PIR?) stage for CORE.setting

[05:58] <adu> oh right

[05:58] <bonsaikitten> lue: works quite well for me, rakudo+nqp are really benign packages to build

[05:59] <adu> my house might blow away in a tornado

[05:59] <adu> just fyi

[05:59] <lue> I have an incredibly old PowerBook laptop with 384 MiB RAM :) [oh, and 1GiB swap space]

[05:59] <bonsaikitten> ouch

[05:59] <bonsaikitten> lue: you should upgrade to this decade ;)

[05:59] <lue> adu: is the tornado close?

[06:00] <adu> I don't know about tornado, but I hear wind right now, and my house is creaking, and Friday there was an neighborhood about 5 miles away that was completely destroyed

[06:01] <lue> If you'd like to donate to the fund... :) (just kidding) hopefully soon I will upgrade. (I got this computer for free though, so I'm not complaining too loudly)

[06:01] <adu> lue: do you have other computers?

[06:02] <adu> you should set yourself some alerts/filters for computer shows in your area

[06:02] <lue> adu: That's not good. (I get very nervous about high winds, because we live in a forested area with tall pine trees.)

[06:02] <adu> but I still have power, for now :)

[06:03] <lue> There are certainly other computers, but they all run Windows :) . I currently have a list of parts for a computer I can put together (~$800, or just under $600 sans non-computer parts (monitor etc.))

[06:04] <adu> lue: I've seen pictures of metal roofs penetrated by a blade of hay, wind can be serious

[06:05] <lue> Yes, the power of wind is why I tend to feel paranoid on very windy days.

[06:07] <adu> but this pic makes me feel so much better about natural disasters: http://wheeeeeeee.com/wp-content/uploads/2011/08/Chair_Earthquake_2-e1314142003301.png

[06:09] <lue> :) Can you imagine the horror if someone was in that chair, *doing things*‽

[06:09] <adu> lol

[06:10] <adu> but I think pbc=>llvm might be useful independant of perl6

[06:10] <sorear> lue: get a job :p  you remember my old machine, right?

[06:10] * adu gives lue some cake on a plate

[06:11] <sorear> lue: I just signed on with a tiny perl shop and one of the perks is a brand new macbook air

[06:11] <lue> Not quite (but I imagine it was just as bad).

[06:11] <sorear> 384mb ram, 2003 Pentium4 1 core, etc

[06:11] <lue> Ooh, that's nice!

[06:11] <adu> heh

[06:11] <adu> my last 3 laptops have been macbooks

[06:12] <adu> before that was a PowerPC, and before that was a Quadra

[06:13] <lue> (sorear: At least your old machine had an x86 CPU)

[06:13] <sorear> the only laptop I currently have is a Hitachi thingy from 1991

[06:13] <shachaf> sorear: Oh, you replaced your old machine!

[06:13] <adu> btw, Quadra=m86k

[06:13] * shachaf remembers the horror stories.

[06:13] <sorear> if it were a year older it would be older than me.

[06:13] <sorear> shachaf: not delivered yet.

[06:13] <sorear> shachaf: a few days yet.

[06:13] <sorear> but it's been promised to me in writing

[06:14] <adu> lue: why SFML?

[06:14] <shachaf> Ah.

[06:14] <sorear> quatra = 680*4*0

[06:15] <bonsaikitten> sorear: I don't see the MBA as perk ;)

[06:15] <lue> adu: 1) C++ 2) I hope I had a better reason that just C++ :)

[06:15] <lue> bonsaikitten: me too, being a linuxer, but at least it's free!

[06:16] <bonsaikitten> lue: but ... it's unusable :(

[06:16] *** GlitchMr left
[06:16] <bonsaikitten> lue: can I interest you in free prostate exams? ;)

[06:17] <adu> that's terrible!

[06:17] <lue> (why the SFML tutorials (as well as many graphical programming ones) is curious)

[06:17] <sorear> it runs Unix, that's all I really insist on

[06:17] <lue> Well, I'd personally s/OS X/Linux/ if possible (worked on this laptop :P)

[06:18] <sorear> yeah, I'll try dual-booting

[06:18] <sorear> but I won't whine if it fails

[06:19] <adu> wtf is http://code.google.com/p/wxgo/

[06:19] <lue> My one problem with OS X (which wasn't what spurred me to install Linux though) was that I had a difficult time doing programming things (e.g. XCode)

[06:20] <lue> [Mind you, this was long before I even started using python, IIRC]

[06:20] <adu> lue: XCode was designed to sell tickets to workshops at ADC

[06:20] <bonsaikitten> my biggest problem with macbooks is that their peripherals suck badly

[06:20] <adu> or WWDC

[06:21] <lue> adu: wxgo appears to be a port of wxwidgets to the Go language.

[06:21] <adu> why isn't it.

[06:22] <sorear> ok, everyone: *I* didn't start this OS holy war.  Drop it.

[06:22] <adu> sorear: what? war?

[06:22] <sorear> next time this comes up, I'll tell people I have a brand X laptop

[06:22] <lue> adu: smells like vaporware to me (someone probably started the page and got bored with the idea 2 days later)

[06:23] <adu> sorear: I'm not interested in oswars

[06:23] <adu> sorear: I'm also a mac user, but it doesn't mean I have to like Apple

[06:23] *** Unik joined
[06:23] <bonsaikitten> sorear: not about OS ;)

[06:24] <lue> I do have to say that OS X is at least Unix and comes with the normal terminal stuff I'm now used to, like emacs (all helpful when writing up papers on the school's Macs, and insisting on using XeLaTeX :P)

[06:24] <adu> my usual procedure involved deleting emacs, installing macports, then installing emacs

[06:25] <Unik> rakudo: class A { has $.aa; method get_aa handles Real { return $.aa; } };

[06:25] <p6eval> rakudo 7d394e: OUTPUT«===SORRY!===␤Cannot call 'trait_mod:<handles>'; none of these signatures match:␤:(Attribute:D $target, $thunk)␤␤»

[06:25] <sorear> I forgot to greek the brand on my company machine and now everyone is talking about OS X

[06:26] <adu> lue: were you also looking into a GUI lib for perl6?

[06:26] <Unik> hi everyone

[06:26] <Unik> was method delegation scrapped from the docs?

[06:26] <lue> adu: through zavolaj, of course (I'd be coding it myself though).

[06:26] <sorear> Unik: which docs?

[06:26] <Unik> or am I doing something wrong? (probably)

[06:26] <Unik> synopses, I suppose

[06:27] <Unik> or is it just NYI?

[06:27] <sorear> S12:1413

[06:27] <sorear> =head1 Delegation is still in the synopses

[06:28] <sorear> (do you know how to handle Sxx:yyyy synopsis links?)

[06:28] <Unik> no, but found it anyway. thanks

[06:29] <Unik> so my example above is flawed somehow?

[06:29] <sorear> this does not follow.

[06:29] <Unik> perl6: class A { has $.aa; method get_aa handles Real { return $.aa; } };

[06:29] <p6eval> rakudo 7d394e: OUTPUT«===SORRY!===␤Cannot call 'trait_mod:<handles>'; none of these signatures match:␤:(Attribute:D $target, $thunk)␤␤»

[06:29] <p6eval> ..niecza v18-9-g95a1946: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Action method trait_mod:handles not yet implemented at /tmp/IgyFskkKv0 line 1:␤------> [32m { has $.aa; method get_aa handles Real [33m⏏[31m{ return $.aa; } };[0m␤␤Unhandled trait 0 for this context at /tmp/IgyFskkKv0 lin…

[06:30] <sorear> it's in the docs but that's not the same as being implemented

[06:30] <sorear> HOWEVER, your example IS flawed

[06:30] <sorear> 'handles' only works on attributes

[06:30] <lue> bye all o/

[06:30] <sorear> r: class { has $.aa handles Real; }

[06:30] <p6eval> rakudo 7d394e:  ( no output )

[06:30] <sorear> that's the correct syntax

[06:30] <Unik> method select_tail handles <wag hang> {...} is straight from S12, no?

[06:31] *** sisar left
[06:31] *** kaleem left
[06:31] <Unik> at the bottom of delegation section

[06:36] <sorear> I guess that isn't implemented

[06:37] *** sisar joined
[06:37] <Unik> that's fine, i nearly lost my mind trying to spot an error in my code

[06:39] <Unik> also, S12 doesn't say if you can use rw methods in this way

[06:40] <sorear> you ought to be able to, I can't think of any interaction

[06:45] <moritz> you can do 'handles' on a method?

[06:46] <moritz> if you call it, does it act on the return value of the method?

[06:46] <moritz> or is it just an alias?

[06:50] <Unik> S12 says it passes calls to return value of the method

[06:51] <Unik> but it's only mentioned once without too much detail

[06:59] <sisar> moritz: link to Synopsis on http://perlgeek.de/blog-en/perl-5-to-6/16-enums.html is broken

[07:00] *** vlixes left
[07:00] <moritz> sisar: thanks

[07:03] *** bbkr joined
[07:03] <moritz> sisar: fixed

[07:03] <sisar> :)

[07:03] <bbkr> hi from Silicon Valley o/

[07:04] <sorear> hello, bbkr

[07:04] <moritz> \o bbkr 

[07:04] <sorear> say hi to TimToady for me :)

[07:08] <dalek> niecza: 07900b5 | sorear++ | lib/CORE.setting:

[07:08] <dalek> niecza: Handle 0-arg [min] and [max], fixes #71

[07:08] <dalek> niecza: review: https://github.com/sorear/niecza/commit/07900b5cac

[07:08] <masak> morning, #perl6

[07:09] <sisar> morning masak 

[07:09] <sorear> morning masak.

[07:11] *** bbkr left
[07:13] <pmichaud> rn:  say [max] (Any, Any, 2);

[07:13] <p6eval> rakudo 7d394e, niecza v18-9-g95a1946: OUTPUT«2␤»

[07:14] *** wamba joined
[07:17] *** brrt joined
[07:19] <jnthn> morning, #perl6

[07:19] <sisar> moritz: link to Synopsis on http://perlgeek.de/blog-en/perl-5-to-6/17-unicode.html is broken. Btw, nice post !

[07:19] <diakopter> ahoy

[07:19] <sisar> morning jnthn

[07:19] <sorear> good morning diakopter. jnthn.

[07:19] <pmichaud> good morning, briefly

[07:19] <pmichaud> (about to head off to sleep :)

[07:26] <dalek> roast: 4ec2969 | pmichaud++ | S03-metaops/reduce.t:

[07:26] <dalek> roast: Add some tests for argumentless [min] and [max].

[07:26] <dalek> roast: review: https://github.com/perl6/roast/commit/4ec2969e81

[07:28] * masak .oO( and don't call us Briefly ) :P

[07:29] <masak> "Delegation" gets a green for Rakudo in http://perl6.org/compilers/features -- and yet Rakudo doesn't have method delegation. is that correct?

[07:30] *** kresike joined
[07:30] <kresike> good morning all you happy perl6 people

[07:31] <jnthn> meeting &

[07:33] <pmichaud> masak: I don't think we even have tests for method delegation yet.

[07:34] <pmichaud> and given that it gets only two lines of S12; I'm not sure that pushes it into yellow.  You can of course disagree.  :)

[07:55] <sorear> n: $*moo = 5

[07:55] <p6eval> niecza v18-9-g95a1946: OUTPUT«Unhandled exception: Writing to readonly scalar␤  at /tmp/VnLIF8lUMt line 1 (mainline @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3917 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3918 (module-CORE @ 562) ␤  at /home/p6eval/niecza/lib…

[08:13] <dalek> rakudo/nom: 53fc0ae | pmichaud++ | src/core/Bool.pm:

[08:13] <dalek> rakudo/nom: Restore [^^] and [xor].

[08:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/53fc0aedbe

[08:13] <dalek> roast: 65b73e9 | pmichaud++ | S03-metaops/reduce.t:

[08:13] <dalek> roast: [S03]:  Unfudge [^^] tests for rakudo.

[08:13] <dalek> roast: review: https://github.com/perl6/roast/commit/65b73e94c9

[08:16] *** kurahaupo left
[08:20] *** Gesh joined
[08:23] *** dakkar joined
[08:25] *** fgomez joined
[08:27] <sorear> sleep&

[08:30] *** grondilu joined
[08:34] *** grondilu left
[08:36] *** sudokode left
[08:37] <moritz> I think the REPL and backtraces don't interact well

[08:42] <moritz> which is the ultimate reason for RT #113776

[08:50] *** kaleem joined
[09:08] <dalek> Heuristic branch merge: pushed 17 commits to rakudo/ex-hardening by moritz

[09:16] *** adu left
[09:20] *** fgomez left
[09:20] *** fgomez joined
[09:26] <dalek> rakudo/nom: b9a332b | moritz++ | src/core/Backtrace.pm:

[09:26] <dalek> rakudo/nom: improve robustness of internal error reporting

[09:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b9a332b3a5

[09:26] <dalek> rakudo/nom: b68a884 | moritz++ | src/core/Backtrace.pm:

[09:26] <dalek> rakudo/nom: be more tight about :D in invocant

[09:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b68a88423b

[09:26] <dalek> rakudo/nom: 57d251f | moritz++ | src/core/Backtrace.pm:

[09:26] <dalek> rakudo/nom: fix previous commit

[09:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/57d251ff7a

[09:26] <dalek> rakudo/nom: 2fdf4bc | moritz++ | / (11 files):

[09:26] <dalek> rakudo/nom: Merge branch 'nom' into ex-hardening

[09:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2fdf4bcf25

[09:26] <dalek> rakudo/nom: 50774a3 | moritz++ | src/core/Backtrace.pm:

[09:26] <dalek> rakudo/nom: [Backtrace] it is fine to generate empty backtraces

[09:26] <dalek> rakudo/nom: 

[09:26] <dalek> rakudo/nom: this seems to happen only on the REPL. Fixes RT #113776

[09:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/50774a3df4

[09:26] <dalek> rakudo/nom: 094e41b | moritz++ | src/core/Backtrace.pm:

[09:26] <dalek> rakudo/nom: Merge branch 'ex-hardening' into nom

[09:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/094e41bed0

[09:32] *** krunen left
[09:32] *** sudokode joined
[09:36] *** brrt left
[09:39] <moritz> r: <a b c>[Any]

[09:39] <p6eval> rakudo 53fc0a: OUTPUT«use of uninitialized variable $pos of type Any in numeric context  in block <anon> at /tmp/Hn3qA2mQFn:1␤␤No such method 'Int' for invocant of type 'Any'␤  in method at_pos at src/gen/CORE.setting:5323␤  in method postcircumfix:<[ ]> at src/gen/CORE.setting:1208␤  i…

[09:39] <moritz> r: <a b c>[+Any]

[09:39] <p6eval> rakudo 53fc0a: OUTPUT«use of uninitialized value of type Any in numeric context  in block <anon> at /tmp/EPChfeI9F8:1␤␤»

[09:40] <moritz> one could argue that those two should do the same

[09:40] <moritz> n: <a b c>[Any]

[09:40] <p6eval> niecza v18-10-g07900b5: OUTPUT«Use of uninitialized value in numeric context␤  at /home/p6eval/niecza/lib/CORE.setting line 1262 (warn @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 296 (Any.Numeric @ 8) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.s…

[09:41] *** krunen joined
[09:42] *** brrt joined
[09:45] *** daxim joined
[09:47] *** wamba left
[09:49] *** Unik left
[10:00] *** SHODAN left
[10:01] *** SHODAN joined
[10:10] *** wamba joined
[10:16] *** scott___ left
[10:21] *** ab5tract joined
[10:45] *** GlitchMr joined
[10:55] *** wamba left
[11:02] *** brrt left
[11:08] *** mtk left
[11:16] *** lue left
[11:19] *** mtk joined
[11:28] *** lue joined
[11:35] *** lue left
[11:36] *** JimmyZ joined
[11:38] <colomon> Has it been announced where the next YAPC::NA will be?

[11:48] <daxim> colomon, answer from MagNET #yapc:

[11:48] <daxim> <Yaakov> No, there is no announcement.  Bids are being reviewed.

[11:48] *** lue joined
[11:48] <colomon> daxim++

[11:48] *** skids left
[11:49] * colomon hopes it is someplace he can easily drive to....  

[11:55] *** leprevost joined
[11:56] <colomon> Columbus was actually ideal for me -- an easy drive and I could stay with my brother-in-law.  :)

[11:56] *** spider-mario joined
[11:58] *** tokuhirom joined
[11:59] *** mucker joined
[12:08] <pmichaud> (yapc)  TPF extended the deadline this year for yapc submissions

[12:08] <pmichaud> (good morning, Perl6)

[12:13] <kresike> hello pmichaud

[12:14] *** mucker left
[12:14] <pmichaud> hello kresike 

[12:15] <[Coke]> pmichaud: you didn't get much sleep.

[12:15] <kresike> you certainly don't sleep much

[12:15] <[Coke]> heh

[12:15] <kresike> :)

[12:16] <pmichaud> I may head back to sleep in a bit; have to take $kid to $school

[12:19] *** _jaldhar joined
[12:28] *** odoacre left
[12:28] <[Coke]> kids are done, here.

[12:29] <pmichaud> well, $school is really summer activities

[12:29] <kresike> no kids here yet, thouugh that will change in about three weeks :)

[12:29] <kresike> though*

[12:30] <[Coke]> ooh, good luck.

[12:30] <kresike> thanks

[12:31] * jnthn home

[12:32] * masak home

[12:32] <dalek> roast: ea70649 | pmichaud++ | S05-grammar/protoregex.t:

[12:32] <dalek> roast: Add tests for RT #113590 (double angles in protoregex names).

[12:32] <dalek> roast: review: https://github.com/perl6/roast/commit/ea70649796

[12:35] *** Khisanth left
[12:52] *** atrodo joined
[12:54] <dalek> roast: b61ccd1 | pmichaud++ | S03-smartmatch/any-bool.t:

[12:54] <dalek> roast: Update boolean smartmatch tests for RT #77080.

[12:54] <dalek> roast: review: https://github.com/perl6/roast/commit/b61ccd136a

[12:55] <masak> pmichaud: yes, I disagree to the extent that having that box be green (1) tells outsiders "it's done now", and then they are disappoint when it isn't, and also (2) tells us "it's done now", so we don't go looking for more spec to implement.

[12:55] *** PacoAir joined
[12:56] <pmichaud> masak: I'm fine with switching it to yellow.

[12:56] <pmichaud> It just means that jnthn++ will likely implement method handles to switch it back to green again.  :)

[12:56] <masak> that sounds like a fine deal by me :)

[12:56] <jnthn> :P

[12:57] * jnthn had totally forgotten that bit of the spec existed...

[12:57] <pmichaud> it's only 2 lines in S12.  :)

[12:57] <dalek> specs: 26b64e4 | pmichaud++ | S03-operators.pod:

[12:57] <dalek> specs: S03:   C<true> should be C<so>

[12:57] <dalek> specs: review: https://github.com/perl6/specs/commit/26b64e42af

[12:58] <dalek> features: f5f9c89 | (Carl Mäsak)++ | features.json:

[12:58] <dalek> features: switch delegation/rakudo to yellow

[12:58] <dalek> features: review: https://github.com/perl6/features/commit/f5f9c8921c

[13:00] <pmichaud> ☹

[13:05] *** lue left
[13:06] <masak> fine with it... but sad?

[13:07] <pmichaud> always a little sad to see green->yellow, even if I know it's "correct"

[13:07] <masak> nod

[13:07] <[Coke]> pmichaud: perhaps more cowbell would help.

[13:08] <[Coke]> .u bell

[13:08] <phenny> U+237E BELL SYMBOL (⍾)

[13:08] <PerlJam> Easier would have been to remove the two lines from the spec  ;-)

[13:08] <PerlJam> (good morning btw)

[13:09] <[Coke]> ⍾ - ... Someone needs to make rog-utf8-e

[13:13] *** Patterner left
[13:15] *** Psyche^ joined
[13:15] *** Psyche^ is now known as Patterner

[13:17] *** _jaldhar left
[13:18] *** skids joined
[13:18] *** _jaldhar joined
[13:18] *** lue joined
[13:19] *** Crooky joined
[13:19] <Crooky> Hai. Are the perl6 developer in any way involved with the perl5 developers?

[13:19] <Crooky> related*

[13:19] <PerlJam> Crooky: kinda not really

[13:20] <PerlJam> Crooky: Many of ther Perl 6 devs are also Perl 5 people in that they use Perl 5 regularly

[13:20] <pmichaud> we're involved at high levels; we usually aren't involved at low-level code levels.

[13:20] * [Coke] doesn't think we have anyone actively committing (or even commenting) on both perls.

[13:20] <Crooky> why perl6? And what makes it important?

[13:21] <masak> Crooky: p5 and p6 devs keep in touch and talk a lot at conferences.

[13:21] <masak> Crooky: Perl 6 is a redesign of the Perl ideas embedded in Perl 5. it has some advantages.

[13:21] <pmichaud> and even outside of conferences;  rjbs++ has been a regular here lately :)

[13:21] *** driador left
[13:21] *** driador joined
[13:31] *** c1sung joined
[13:41] *** brrt joined
[13:46] <PerlJam> lue++ 

[13:46] <dalek> roast: 9e82fe0 | pmichaud++ | S02-names-vars/perl.t:

[13:46] <dalek> roast: Test default Mu.perl  (resolves RT #62002).

[13:46] <dalek> roast: review: https://github.com/perl6/roast/commit/9e82fe0ad4

[13:48] *** fgomez left
[13:49] <masak> wow, there's 195 nicks in here right now.

[13:49] *** Vlavv left
[13:50] <frettled> That means that the activity is at less than 3% in an hour.  ;)

[13:51] *** sisar left
[13:51] <masak> why does it mean that?

[13:52] <frettled> Only 6 nicks said anything in the past hour.  :)

[13:52] <frettled> 6/195 ≈ 3%

[13:53] <flussence> 7!

[13:53] <masak> ah.

[13:53] <frettled> I'm not making a value judgment, though.

[13:53] <frettled> flussence: darnit, 8?

[13:53] <frettled> A whopping 4%!

[13:53] <masak> hehe.

[13:54] <frettled> Given the technical level of some of the discussions here, I don't think that's bad.  I think it's very good that so many listen or pretend listening.

[13:54] <masak> well, I don't believe lurkers are a sign of a systemic error or anything.

[13:54] <masak> quite the opposite.

[13:55] <masak> sometimes I'm concerned about the argument "I don't dare say anything, because obviously all you people are rocket surgeons from the fifth dimension, and I'm just a lowly coder".

[13:56] <masak> but I don't know what to do about it. it's always been like that here.

[13:56] <masak> it's hard to fix people's confidence :)

[13:56] <jnthn> Rocket...surgery? :P

[13:56] <masak> it ain't exactly brain science, you know.

[13:56] <kresike> masak, your perfect english makes things even worse :P

[13:57] <PerlJam> heh

[13:57] <masak> kresike: nice try, Frenchie boy.

[13:58] <masak> we're not switching the channel over to French.

[13:58] <PerlJam> honestly, many times #perl6 does speak in another language that looks like english but doesn't grok the same

[13:58] <kresike> by the way, after watching a few of jnthn's presentations about rakudo development, it seems a little simpler to me too :)

[13:58] <masak> aye. jnthn++ has that effect on people.

[13:58] <kresike> masak, make that hungarian :)

[13:58] <PerlJam> (I believe I just minted a new use of the work grok in that sentence :)

[13:58] <masak> oh!

[13:58] <masak> my bad.

[13:58] <masak> PerlJam: medial 'grok'? nah, old :P

[13:58] <PerlJam> oh, perhaps I just don't see it often

[13:58] <PerlJam> (ever)

[13:59] <kresike> but don't try learning it, I know by experience it's one of the harder languages ...

[13:59] <masak> PerlJam: you know it originally means "to drink", right? :P

[13:59] <PerlJam> aye

[13:59] <masak> kresike: that's what they all say.

[13:59] * [Coke] is not sure he's share water with any of you weirdos.

[13:59] *** tyatpi joined
[13:59] <[Coke]> *he'd

[13:59] <masak> kresike: do you know the tongue-twister with the sailing boat? the one with lots of "hajo" in it?

[13:59] <PerlJam> kresike: Perl 6 is not one of the harder languages  ;)

[13:59] <jnthn> [Coke]: To drink, or to swim in? :)

[14:00] <masak> [Coke]: *lol*

[14:00] <kresike> masak, Ok, go ahead then, maybe I'll have something I can help you with :)

[14:00] <PerlJam> [Coke]: as long as the water isn't yellow and has been boiled, you're probably safe

[14:00] <kresike> masak, you mean: vitorlás hajó

[14:00] <masak> jnthn: [Coke]++ is referring to the work of fiction that introduced "grok". http://www.amazon.com/Stranger-Strange-Land-Robert-Heinlein/dp/0441790348/

[14:00] <jnthn> oh!

[14:01] <jnthn> I'm so uncultured :)

[14:01] <masak> kresike: yes, but there's a whole sentence with just repeated haj? all the way.

[14:01] <masak> jnthn: no, you're just behind on your Heinlein ;)

[14:01] <kresike> PerlJam, compared to hungarian, it's a breeze :)

[14:02] <kresike> masak, I don't think I know the right answer to that :(

[14:02] <PerlJam> masak: I specifically read that book because of the word "grok" many years ago

[14:02] <PerlJam> haj? == buffalo?

[14:02] <PerlJam> ;)

[14:02] <masak> PerlJam: I think I knew about the word, but read the book for other reasons.

[14:03] <masak> PerlJam: it's way out of date in some ways (even though it was a bit ahead of its time back then), but it's still an eerie read.

[14:03] *** sisar joined
[14:06] *** leprevost left
[14:13] <dalek> nqp: 5a8707b | pmichaud++ | src/HLL/Compiler.pm:

[14:13] <dalek> nqp: Add -V/--verbose-config option to HLL::Compiler (RT #62462).

[14:13] <dalek> nqp: review: https://github.com/perl6/nqp/commit/5a8707b02d

[14:15] *** fgomez joined
[14:27] <dalek> rakudo/nom: 185f8fc | pmichaud++ | tools/build/NQP_REVISION:

[14:27] <dalek> rakudo/nom: Bump NQP_REVISION to get -V option (RT #62462).

[14:27] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/185f8fc1a9

[14:33] *** JimmyZ left
[14:33] *** JimmyZ joined
[14:35] *** wtw left
[14:36] *** adu joined
[14:41] *** felher left
[14:46] *** tokuhirom left
[14:50] <sisar> rn: say any(2,3)>>+<<all(1, 2);

[14:50] <p6eval> niecza v18-10-g07900b5: OUTPUT«all(any(3, 4), any(4, 5))␤»

[14:50] <p6eval> ..rakudo 094e41: OUTPUT«any(all(3, 4), all(4, 5))␤»

[14:50] <sisar> honestly, i don't know what I was expecting ^

[14:51] <harmil> -3 was the correct answer

[14:51] <pmichaud> well, since neither any(2,3) nor all(1,2) are lists, they end up acting just like scalars (or lists with one element)

[14:51] <pmichaud> rn: say any(2,3) + all(1,2)

[14:51] <p6eval> niecza v18-10-g07900b5: OUTPUT«all(any(3, 4), any(4, 5))␤»

[14:51] <p6eval> ..rakudo 094e41: OUTPUT«any(all(3, 4), all(4, 5))␤»

[14:52] <harmil> Which seems like the correct lazy behavior...

[14:53] <pmichaud> rn: say all(1,2) + any(2,3)

[14:53] <p6eval> rakudo 094e41, niecza v18-10-g07900b5: OUTPUT«all(any(3, 4), any(4, 5))␤»

[14:53] <pmichaud> rn: say any(2,3) + all(1,2)

[14:53] <p6eval> niecza v18-10-g07900b5: OUTPUT«all(any(3, 4), any(4, 5))␤»

[14:53] <p6eval> ..rakudo 094e41: OUTPUT«any(all(3, 4), all(4, 5))␤»

[14:53] * pmichaud senses a rakudobug.

[14:53] <masak> how so?

[14:54] <jnthn> I think the current auto-threader just threads on the first junction it finds.

[14:54] <masak> oh!

[14:54] <masak> that's wrong, yes.

[14:54] <jnthn> S09 has some funny wording on doing something else. 

[14:54] * masak submits rakudobug

[14:54] <jnthn> It's already in RT.

[14:54] <masak> S09 says "disjunctions outermost, yes".

[14:54] <jnthn> Yeah.

[14:54] <masak> ok.

[14:54] * masak unsubmits it

[14:54] <jnthn> The junction auto-threader is also slow.

[14:54] <jnthn> It's still the "make something work enough" cut from the very early nom days.

[14:55] <masak> jnthn: it's not so funny (as in weird), if you consider how && an || nest in terms of precedence.

[14:55] <masak> and&

[14:55] <jnthn> masak: Yeah, I know the reason.

[14:55] <masak> and*

[14:55] <pmichaud> leftmost 'all' or 'none', followed by leftmost 'one' or 'any'

[14:55] <masak> nod.

[14:55] <jnthn> It's just an edge case Rakudo doesn't implement yet.

[14:56] *** felher joined
[14:58] <sisar> rn: say (any(2,3))++; #Rakudo leaks internal(?) error

[14:58] <p6eval> rakudo 094e41: OUTPUT«No such method 'STORE' for invocant of type 'Int'␤  in sub AUTOTHREAD_METHOD at src/gen/CORE.setting:1829␤  in <anon> at src/gen/Metamodel.pm:2296␤  in sub postfix:<++> at src/gen/CORE.setting:1341␤  in block <anon> at /tmp/Anddle7G7z:1␤␤»

[14:58] <p6eval> ..niecza v18-10-g07900b5: OUTPUT«Unhandled exception: cannot increment a value of type Junction␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting line 272 (Mu.succ @ 9) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /tmp/q8xcTWtSBc line 1 (mainline @ 3) ␤ …

[14:58] <pmichaud> doesn't look internal to me

[14:59] <sisar> but yeha, LTA erroe

[14:59] <sisar> but yeah, LTA error

[14:59] <pmichaud> rn:  say 2++

[14:59] <p6eval> niecza v18-10-g07900b5: OUTPUT«Unhandled exception: Writing to readonly scalar␤  at /tmp/obkhqvBI4v line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3917 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3918 (module-CORE @ 562) ␤  at /home/p6eval/niecza/li…

[14:59] <p6eval> ..rakudo 094e41: OUTPUT«Cannot assign to a non-container␤  in sub postfix:<++> at src/gen/CORE.setting:2770␤  in block <anon> at /tmp/7l3RmlxCH_:1␤␤»

[14:59] <moritz> well

[14:59] <moritz> the proper thing would be to fail the dispatch to postfix:<++>

[14:59] <pmichaud> moritz: why?

[14:59] <moritz> after all postfix:<++> has an rw argument

[15:00] <moritz> and rw-ness should fail at binding time

[15:00] <moritz> erm

[15:00] <pmichaud> r:  my $a = 2;  my $b = 3;   any($a, $b)++;  say $a; say $b;

[15:00] <p6eval> rakudo 094e41: OUTPUT«No such method 'STORE' for invocant of type 'Int'␤  in sub AUTOTHREAD_METHOD at src/gen/CORE.setting:1829␤  in <anon> at src/gen/Metamodel.pm:2296␤  in sub postfix:<++> at src/gen/CORE.setting:1341␤  in block <anon> at /tmp/dht_TpIRbU:1␤␤»

[15:00] <moritz> binding a non-container to an rw-paremeter should fail at binding time

[15:00] * jnthn thinks moritz is right here

[15:00] <pmichaud> okay, if we cannot have junctions of containers, then yes.

[15:00] *** _jaldhar left
[15:01] <jnthn> I think the junction construction is decontainerizing.

[15:01] <masak> could "fail at binding time" mean we can detect it at compile time at some point in the future?

[15:01] <pmichaud> r:  my $a = 2;  my $b = 3;   any(\$a, \$b)++;  say $a; say $b;

[15:01] <p6eval> rakudo 094e41: OUTPUT«No such method 'succ' for invocant of type 'Capture'␤  in sub AUTOTHREAD_METHOD at src/gen/CORE.setting:1829␤  in <anon> at src/gen/Metamodel.pm:2296␤  in sub postfix:<++> at src/gen/CORE.setting:1341␤  in block <anon> at /tmp/pfVcYA13t5:1␤␤»

[15:01] <masak> r: say "OH HAI"; 5++

[15:01] <p6eval> rakudo 094e41: OUTPUT«OH HAI␤Cannot assign to a non-container␤  in sub postfix:<++> at src/gen/CORE.setting:2770␤  in block <anon> at /tmp/mocoU1kHOU:1␤␤»

[15:02] <jnthn> That last one is probably catchable at compile time in le optimizer.

[15:02] <pmichaud> l'optimizer :-)

[15:02] <jnthn> d'oh :P

[15:03] <pmichaud> so, does that mean that is rw parameters never autothread, ooc?

[15:03] <pmichaud> that feels.... wrongish.

[15:03] <jnthn> pmichaud: I think they can auto-thread.

[15:03] <jnthn> pmichaud: But we statically know 5 is not rw :)

[15:04] <pmichaud> I'm talking about the   (2,3)++ case

[15:04] <pmichaud> er,   any(2,3)++

[15:04] <jnthn> Ah

[15:04] <jnthn> I think ti'd auto-thread

[15:04] *** birdwindupbird left
[15:04] <jnthn> Probably already does

[15:04] *** thou joined
[15:05] <jnthn> Then fails to bind.

[15:05] <pmichaud> actually, I think the problem is that it *is* binding

[15:05] <jnthn> Oh.

[15:05] <pmichaud> thus we get to the STORE issue

[15:05] <jnthn> Oh, it is auto-threading

[15:05] <jnthn> But then the "is rw" doesn't cause a bind failure yet.

[15:05] <jnthn> I think we had some reason for delaying adding that...I forget what it was.

[15:06] <jnthn> It's probably not a reason any more. Guess there's a way to find out... :)

[15:06] <sisar> I'm sorry, i don't know enough about this issue to file a bug report (or if there is even an issue or not), maybe masak++ can do it...

[15:06] * sisar -> dinner

[15:07] <masak> I'm not sure yet if it is a bug either.

[15:09] * [Coke] is sad at www.youtube.com/user/yapcna/videos?query=pmichaud

[15:09] <pmichaud> I'm pretty sure the post-autothreading calls should fail the binding

[15:10] <jnthn> Yes

[15:10] <jnthn> But it's not anything to do with auto-threading really

[15:10] <jnthn> r: sub foo($x is rw) { }; foo(5)

[15:10] <p6eval> rakudo 094e41:  ( no output )

[15:10] <jnthn> That's the real issue.

[15:10] <pmichaud> [Coke]: oh, yay, at least the videos are starting to appear

[15:10] <pmichaud> r:  5++

[15:10] <p6eval> rakudo 094e41: OUTPUT«Cannot assign to a non-container␤  in sub postfix:<++> at src/gen/CORE.setting:2770␤  in block <anon> at /tmp/BQ_3JlegfF:1␤␤»

[15:10] <pmichaud> oh, I get it.  okay.

[15:11] <pmichaud> well, not completely, but okay.  I don't understand why  5++  and any(2,3)++ give different errors

[15:11] <PerlJam> [Coke]: sad that the videos aren't all tagged properly?  I'm pretty sure I saw pmichaud's list talk on there the other day.

[15:12] <pmichaud> PerlJam: those are unofficial videos

[15:12] <[Coke]> ah. s/pm/m// !

[15:12] <pmichaud> Coke is looking at the yapcna official channel

[15:13] *** Khisanth joined
[15:13] <kresike> bye all

[15:13] *** mucker joined
[15:13] *** kresike left
[15:14] <[Coke]> there is one patrick video, but this one is only 49s. :)

[15:14] <PerlJam> ah

[15:14] <pmichaud> mithaldu's videos were "unauthorized" -- see the end of http://blogs.perl.org/users/mithaldu/2012/06/how-the-yapcna-videos-got-on-youtube.html

[15:14] * PerlJam just searched for "YAPC 2012" and doesn't care if they are "official" or not :)

[15:15] <daxim> official and complete is http://youtube.com/yapcna

[15:15] <pmichaud> well, I don't really care about officialness either; but I'm pretty sure mithaldu won't be posting more, so that means we have to wait for the official yapc::na ones to come out, and since none of my talks are out yet, I am sad (as Coke++ is)

[15:16] <daxim> http://youtu.be/SuY8FOIb7I0  # Introducing Camelia

[15:16] *** Dzinosky joined
[15:16] <pmichaud> daxim: official, yes; complete, I hope not.

[15:17] *** Dzinosky left
[15:17] <pmichaud> as in, I hope what they have up there now isn't "complete"  :)

[15:18] *** JimmyZ left
[15:19] <daxim> completer than just the last day, what mithaldu got

[15:20] <pmichaud> okay, I managed to close 11 RT tickets in the past six hours; time for a break :)

[15:20] <jnthn> whoa

[15:20] <jnthn> pmichaud++

[15:22] <frettled> pmichaud++ good going, man!

[15:22] <pmichaud> that even includes about 3 hours of sleep :)

[15:24] <masak> pmichaud++

[15:25] <moritz> pmichaud++

[15:28] *** JimmyZ joined
[15:32] *** kaare_ joined
[15:32] *** JimmyZ left
[15:39] *** lue left
[15:39] <rjbs> pmichaud++ # and if you just need a break from p6, we have some tickets you could close in p5 for a break :)

[15:41] <[Coke]> I am happy to see leurs (sp?) and keenan slogging through that queue.

[15:43] <moritz> le urs?

[15:44] <[Coke]> with bees in his mouth.

[15:45] <[Coke]> hurm. that may be slightly too esoteric. ;)

[15:45] <[Coke]> Jesse Luehrs.

[15:45] <[Coke]> ++

[15:45] *** sirhc joined
[15:51] <moritz> oops, seems I've broken the layout on http://perl6.org/community/

[15:51] *** lue joined
[15:52] <masak> you broke the community! o.O

[15:53] <masak> anyway, moritz++ for improving things in general.

[15:53] <dalek> perl6.org: 375a7e5 | moritz++ | source/community/index.html:

[15:53] <dalek> perl6.org: [community] unbreak markup

[15:53] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/375a7e5e31

[15:54] <moritz> in general, but not in particular :-)

[15:55] <masak> you'd probably get more ++es if I knew the particulars :)

[15:56] * masak .oO( unbreak markup. say you'll love me again... )

[15:57] <[Coke]> *groan*

[15:57] <masak> requested: a lightning talk about pop love songs as memetic viruses thriving on people's neurochemical pathways.

[15:58] * masak .oO( this song is *exactly* what happened to me: yes, yes, he walked out the door! )

[16:02] *** brrt left
[16:04] <moritz> nr: my $x = 2; $x = ($x + 2 / $x) / 2 for 1..10; say $x

[16:04] <p6eval> niecza v18-10-g07900b5: OUTPUT«1.4142135623730949␤»

[16:04] <p6eval> ..rakudo 185f8f: OUTPUT«1.41421356237309␤»

[16:04] <moritz> nr: my $x = 2; $x = ($x + 2 / $x) / 2 for 1..10; say $x.WHAT

[16:04] <p6eval> rakudo 185f8f, niecza v18-10-g07900b5: OUTPUT«Num()␤»

[16:04] <moritz> nr: my $x = 2; $x = ($x + 2 / $x) / 2 for 1..5; say $x.WHAT

[16:04] <p6eval> rakudo 185f8f, niecza v18-10-g07900b5: OUTPUT«Rat()␤»

[16:07] *** cognominal left
[16:07] *** cognominal joined
[16:09] <masak> that looks right to me.

[16:10] <moritz> aye

[16:11] <dalek> doc: cfa8f0e | moritz++ | lib/Rat.pod:

[16:11] <dalek> doc: [Rat] explain overflow of denominator and fallback to Num

[16:11] <dalek> doc: review: https://github.com/perl6/doc/commit/cfa8f0e53b

[16:11] *** adu left
[16:16] <sorear> good * #perl6

[16:17] *** cognominal left
[16:23] *** sisar left
[16:24] *** vlixes joined
[16:25] <moritz> \o sorear 

[16:29] <dalek> doc: f6edbb6 | moritz++ | lib/Rat.pod:

[16:29] <dalek> doc: [Rat] some more trivia

[16:29] <dalek> doc: review: https://github.com/perl6/doc/commit/f6edbb62c0

[16:32] *** kaleem_ joined
[16:32] *** sisar joined
[16:34] *** kaleem left
[16:38] *** moukeddar joined
[16:38] *** moukeddar left
[16:39] <dalek> doc: 25a4b5f | moritz++ | lib/Rational.pod:

[16:39] <dalek> doc: Rational

[16:39] <dalek> doc: review: https://github.com/perl6/doc/commit/25a4b5f6b6

[16:45] <dalek> doc: 6d2c1d8 | moritz++ | lib/Rational.pod:

[16:45] <dalek> doc: [Rational] method signatures; method new

[16:45] <dalek> doc: review: https://github.com/perl6/doc/commit/6d2c1d8097

[16:53] <[Coke]> moritz: mind a docpatch for perl6/doc that updates the README to explain why all the docs look empty in github? 

[16:54] <[Coke]> (I think this points to a larger confusing issue for POD tools that find six.pod files in the wild.)

[16:55] <moritz> [Coke]: I don't mind, no

[16:55] <dalek> doc: 7bf22c9 | moritz++ | README:

[16:55] <dalek> doc: [README] add help wanted section

[16:55] <dalek> doc: review: https://github.com/perl6/doc/commit/7bf22c918d

[16:56] <moritz> hm, maybe we should switch to .pod6 as extension

[16:56] *** dakkar left
[17:11] *** kaleem_ left
[17:12] *** kaleem joined
[17:18] *** Gesh left
[17:21] <[Coke]> I would suggest it, but imagine it would be shot down.

[17:36] *** vlixes left
[17:39] *** daxim left
[17:41] *** lue left
[17:50] *** moukeddar_ joined
[17:51] *** moukeddar_ left
[17:54] <masak> nah. knock yourselves out with extensions. :)

[17:54] *** lue joined
[17:56] <PerlJam> moritz: nah, the suffix should be .p6d

[17:56] <PerlJam> </bikeshedding>  :)

[17:57] <timotimo> i'm for pōd instead

[17:58] <timotimo> it looks like a combination of pod and p6d, because the upper line of the 6 is still there

[17:59] *** birdwindupbird joined
[17:59] <PerlJam> timotimo: clearly your suggestion is best.

[17:59] <timotimo> i know, but thanks :]

[18:00] <masak> so much agreement

[18:00] <[Coke]> .рбд

[18:00] <geekosaur> rabid pods?

[18:06] <masak> general question to the room: in writing up the blog post for p6cc2011/t5, I'm desperately trying to remember the URL of a PDF paper from the 1980s about counting unrooted 4-trees using functional programming. does anyone remember sending this URL to me in the first place? (through privmsg, IIRC)

[18:11] *** snearch joined
[18:12] *** am0c left
[18:17] <masak> nvm, moritz++ dug it up from our privmsgs.

[18:17] <masak> it's here, for people who can't wait for the t5 post: http://www.cs.wright.edu/~tkprasad/courses/cs776/paraffins-turner.pdf

[18:20] * PerlJam resists a pun with K&R C

[18:27] *** kaleem left
[18:27] *** fhelmberger left
[18:35] *** Crooky left
[18:39] *** lue left
[18:40] *** mustapha joined
[18:49] <masak> it seems a cute language, really. "a collection of equations by means of which the user attaches names to various objects in KRC's universe of discourse". sounds like Haskell :)

[18:49] * masak only now noticed that the definition of KRC is basically recursive

[18:50] *** Gesh joined
[18:51] *** lue joined
[18:54] *** Gesh left
[18:54] *** Gesh joined
[18:59] *** Gesh left
[19:00] *** GlitchMr left
[19:00] *** Chillance joined
[19:00] <sisar> hm, this is the error i get when trying to install LWP::Simple using panda: https://gist.github.com/2990527 . Looks like Panda failed to recognize that MIME::Base64 is a dependency.

[19:01] * tadzik looks

[19:01] <tadzik> oh, I see

[19:01] <tadzik> grep -i base ~/.panda/state will probably tell you, that it's installed, while it isn't really

[19:01] <tadzik> so your ~/.panda and ~/.perl6 are probably out of sync

[19:02] <sisar> tadzik: right. What should I do ?

[19:03] <arnsholt> masak: If KRC is Kent Recursive Calculator, it's Haskell's grandmother IIRC

[19:03] <tadzik> sisar: you can manually install MIME::Base64

[19:03] <arnsholt> KRC begat Miranda begat Haskell

[19:03] <sisar> tadzik: ok

[19:03] <tadzik> or just purge/manually update your state file, to be sure it works in the future

[19:03] *** brrt joined
[19:04] <arnsholt> (Ref. Wadler's Why Calculating is Better than Scheming)

[19:09] <sisar> adding a "plan x;" to a .t file is compulsory or recommended ?

[19:09] <tadzik> phenny: en pl "compulsory"?

[19:09] <phenny> tadzik: "obowiązkowy" (en to pl, translate.google.com)

[19:10] <tadzik> recommended

[19:10] <tadzik> you can also add 'done;' at the very end

[19:11] <sisar> why is it recommended ? why is 'done;' recommended ?

[19:11] *** pupoque is now known as Gesh

[19:11] <tadzik> having either of those is good to have, for if you don't have one, TAP harness cannot know whether the tests are finished, or simply the script has crashed

[19:12] <geekosaur> (1) documentation, and so test frameworks can tell how many tests you are supposed to have; (2)... that

[19:20] *** vmspb joined
[19:24] *** bluescreen10 joined
[19:25] *** driador left
[19:33] <dalek> nqp/toqast: 4c86f84 | jnthn++ | src/QAST/Node.nqp:

[19:33] <dalek> nqp/toqast: $!name can't be str if we put it here, it turns out. May be better to move it into various other nodes where it can be, since it's just Regex with specialer needs.

[19:33] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/4c86f847f4

[19:33] <dalek> nqp/toqast: 20a37a9 | jnthn++ | src/Q (3 files):

[19:33] <dalek> nqp/toqast: Various fixes so we can use native types on QAST::Regex attributes.

[19:33] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/20a37a90fd

[19:42] <masak> arnsholt: ooh! that makes a lot of sense, then.

[19:48] *** driador joined
[19:48] *** alvis joined
[19:52] <dalek> rakudo/toqast: 841e783 | jnthn++ | src/QPerl6/ (2 files):

[19:52] <dalek> rakudo/toqast: Translate method calls to QAST. Again, a few complicated ones left over (please don't 'help' by changing the leftovers!)

[19:52] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/841e7839fb

[19:57] <masak> "(please don't 'help' by changing the leftovers!)" -- I picture a frustrated chef somewhere.

[19:57] <tadzik> :P

[19:58] <masak> "Madre mia, they again switch the leftovers... for chicken feathers! Why, why?"

[19:58] <jnthn> Yeah, one of them will result in a bloody hard to find bug if dealt with wrongly...

[20:04] *** mustapha left
[20:23] *** sisar left
[20:24] <eiro> tadzik, jnthn i don't find your pass id: did you sent it to me ?

[20:25] <eiro> hello all 

[20:25] <eiro> BooK, also :)

[20:25] <masak> hi eiro

[20:26] <eiro> masak, hi. i'm working on the perl6 introduction (what is rakudo, rakudo-star, parrot, ...) 

[20:26] <eiro> any slides to steal ?

[20:27] *** kaare_ left
[20:28] <tadzik> eiro: no, I did not; TBH, I fell a little bit uneasy about it :/

[20:28] <tadzik> eiro: is it too late already?

[20:29] <jnthn> .oO( Do they validate the numbers we give them... )

[20:29] <eiro> tadzik, your choice :)

[20:29] <eiro> tadzik, no but i prefer to ask :)

[20:29] <jnthn> eiro: http://jnthn.net/articles.shtml is my slides page

[20:29] <eiro> jnthn, i don't think so: feel free to give a fake :)

[20:29] <eiro> jnthn, thx 

[20:30] <tadzik> eiro: if I wanted to buy a local SIM to use the internet, how do the prices look like?

[20:30] <eiro> i really don't know about those kind of things :(

[20:30] <tadzik> BooK?

[20:31] <eiro> tadzik, i ask on the fpw list right now

[20:31] *** pochi joined
[20:31] <tadzik> okay, thanks

[20:36] *** sisar joined
[20:37] <eiro> tadzik, jnthn masak i hope you'll be there to back me up at the perl6 intro: i'll let a long time for free questions 

[20:37] <tadzik> eiro: as long as the language barrier won't stop us :)

[20:38] <masak> language barrier?

[20:38] <masak> phenny: en fr "language barrier?"?

[20:38] <phenny> masak: "barrière de la langue ?" (en to fr, translate.google.com)

[20:39] <masak> phenny: "barri?re de la langue?"?

[20:39] <phenny> masak: "barrels ? re de la langue ?" (es to en, translate.google.com)

[20:39] <sisar> masak: the type hierarchy/tree diagram you have on http://strangelyconsistent.org/blog/june-24-2011-types, is partial. Is the complete diagram of type hierarchy available somewhere?

[20:39] <masak> phenny: fr "barri?re de la langue?"?

[20:39] <phenny> masak: "Barri ? re the language ?" (fr to en, translate.google.com)

[20:39] <masak> oh!

[20:39] <masak> phenny: fr "barrière de la langue?"?

[20:39] <phenny> masak: "language barrier ?" (fr to en, translate.google.com)

[20:39] <masak> sisar: no. feel free to create one.

[20:40] <eiro> tadzik, i'll translate if needed. the thing is i don't know what kind of question can be asked

[20:40] <sisar> masak: ok. I thought the spec would(should?) have one.

[20:40] <tadzik> eiro: we'll do the best we can

[20:41] <masak> by the way, I again want to advertise my plans for July to re-visit http://strangelyconsistent.org/blog/june-30-2011-text-adventure-ii and re-build it from scratch in 31 simple steps, with tests.

[20:41] <masak> tadzik, eiro: I'm not worried, at all.

[20:41] <masak> some of us know school French. and there are plenty of anglophones in the room.

[20:42] <masak> (for those who don't know, an anglophone is a special phone where you call for translation help. France is full of them)

[20:42] <sisar> masak: i think thats the only part of your blog series I havne't gone through ! I mean the last two post, the ones with the game.

[20:42] <masak> turns out the game was far too big for two posts.

[20:42] <masak> (and hence took far too long to get out the door, too)

[20:43] <masak> but I must say I'm proud of the image in http://strangelyconsistent.org/blog/june-29-2011-text-adventure-i

[20:43] <masak> I wish I didn't have to make such images using Inkscape. I'd like a DSL for them.

[20:45] <eiro> masak, "is learning perl6 worth now" ? are you ready for that ?

[20:45] <PerlJam> masak: dot is kinda close

[20:46] <PerlJam> masak: but ... you could always make a DSL yourself (and blog about it! :-)

[20:46] <dalek> rakudo/toqast: 27f9453 | jnthn++ | src/QPerl6/ (2 files):

[20:46] <dalek> rakudo/toqast: Translate a bunch of calls to QAST.

[20:46] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/27f9453d34

[20:47] <masak> PerlJam: I already have plans. there's a gist if you're interested.

[20:48] <masak> PerlJam: the idea has infected many things; my blog; some $work stuff. I expect to do it this summer.

[20:48] <masak> eiro: could you please be more specific? is this a talk I'm supposed to make? do I need slides?

[20:49] <eiro> masak, no: i mean:

[20:49] <PerlJam> masak: I'm certainly curious, but I wouldn't say "interested" because I don't want to add to my list-of-things-undone

[20:50] *** snearch left
[20:50] <eiro> one of the first talk is "intro to perl6". I have a slot of 45mn to introduce all the strange keywords, the history of perl6, what the community expect from it and what the users can expert right now 

[20:50] <eiro> the truth is: i'm really not sure about my answers 

[20:51] <masak> PerlJam: oh, I'm not dragging you into anything. but it certainly would be fun to drag the idea through your expertise and see what sticks.

[20:51] * masak digs up the gist

[20:51] <sisar> https://gist.github.com/2991123 ... how the hell did Rakudo reach line no. 5 ?! There are only three lines in the code !

[20:51] <eiro> it would be very easy to me if i know you're around and handle those kind of questions 

[20:52] <sisar> r: {

[20:52] <p6eval> rakudo 185f8f: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2, near ""␤»

[20:52] <masak> PerlJam: https://gist.github.com/1751911

[20:52] <sorear> sisar: rakudo used to complain about exceptions in the setting around like 1 bln

[20:52] *** driador left
[20:52] <arnsholt> sisar: Rakudo has been known to have problems counting lines

[20:52] <eiro> i mean: the running joke "perl6 is the langage of Duke Nukem Forever running on HURD", someone will tell us that... i know it 

[20:53] <masak> eiro: I'll certainly be ready for such questions.

[20:53] <eiro> or: perl5 is fine, why perl6 ? 

[20:53] <eiro> masak, ok :)

[20:53] <masak> eiro: I remember when jnthn and I came to YACP::Russia in Moscow, and I got all those questions.

[20:53] <sisar> sorear, arnsholt: oh, ok.

[20:53] <tadzik> . o O ( "Oh, I haven't noticed you uploading DNF to our ecosystem" )

[20:53] <masak> eiro: I feel I'm pretty good at handling them.

[20:53] <eiro> \o/ glad to read that :)

[20:54] <jnthn> Nobody has ever actually asked me a question involving HURD and Duke Nukem at a Perl conference yet, fwiw. :)

[20:54] <PerlJam> eiro: "Why is it called Perl 6 if it's a different language?"  :)

[20:55] <masak> the more I see Perl 6 emerging, the more I feel it was worth the wait.

[20:57] <sisar> r: use v6;␤␤{

[20:57] <p6eval> rakudo 185f8f: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 4, near ""␤»

[20:57] <PerlJam> btw, people occasionally come to #perl asking about #perl6.  This seems to be happening more often lately.

[20:57] <sisar> huh, here it is line 4, but i locally get line 5

[20:57] <PerlJam> Maybe that was the YAPC effect?

[20:57] *** tyatpi left
[20:57] <jnthn> r: use v6;␤␤{␤

[20:57] <p6eval> rakudo 185f8f: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 5, near ""␤»

[20:58] <jnthn> It looks on the last line for it :)

[20:58] *** driador joined
[20:58] <sisar> jnthn: hmm

[20:58] <PerlJam> r: {

[20:58] <p6eval> rakudo 185f8f: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2, near ""␤»

[20:59] *** tyatpi joined
[20:59] <pmichaud> (YAPC effect) -- I've seen a number of blog posts from yapc::na attendees saying "hmmm, I need to take a / another look at Perl 6"  :-)

[20:59] <tadzik> that's awesome :)

[21:00] <pmichaud> I'm really hoping the yapcna youtube channel gets my lightning talk up soon :)

[21:00] <PerlJam> pmichaud: What was your lightning talk about?

[21:00] <pmichaud> I wonder if I can send a message saying "I'll make a donation to TPF if you do my lightning talk next :-)"

[21:00] <pmichaud> PerlJam: rakudo speed improvement since 2011.01

[21:01] <PerlJam> oh, that's right, you showed the timing here

[21:02] * PerlJam enjoyed mdk's Perl and CPAN

[21:02] *** skids left
[21:02] <masak> pmichaud: ooh! please market it hard as "The YAPC effect", too! :D

[21:03] <masak> "dude, did you hear about the YAPC effect? apparently YAPC makes people want to check out Perl 6!"

[21:03] <tadzik> dude, did you hear about YAPC effect effect? Apparently YAPC effect makes people want to check out Perl 6!

[21:03] <PerlJam> tadzik++

[21:03] <tadzik> dude, did you hear about YAPC effect effect effect? AppaMaximum recursion depth exceeded

[21:04] <PerlJam> masak: "YAPC effect" gives new meaning to "butterfly effect"  :)

[21:05] <masak> PerlJam: only if checking out Perl 6 generates more YAPCs somehow and leads to a positive feedback gain, ending with a grey-goo situation.

[21:06] <sisar> so i'm still trying to understand OOP both in general and in Perl6. I wrote this: https://gist.github.com/2991221, but it fails. Can someone explain? Also notice the wrong line no. in Rakudo's error.

[21:06] * PerlJam waits for TEDx YAPC

[21:06] <jnthn> More YAPCs wouldn't be a bad thing. :)

[21:06] * jnthn waits for YAPC::Antarctic

[21:06] <jnthn> That'd be so cool!

[21:06] <masak> jnthn: only you would like it :)

[21:06] <tadzik> http://www.myfacewhen.net/uploads/3890-oh-you-dog.jpg oh you

[21:06] <PerlJam> sisar: you need to make your attrs rw if you want to change their values

[21:07] <jnthn> masak: Oh come on...I can't be the ONLY person here who likes cold weather!

[21:07] <tadzik> we didn't want to tell you

[21:08] <tadzik> that reminds me of this old joke

[21:08] <masak> :P

[21:08] <PerlJam> (though that error message could give you some more hints as to the problem)

[21:08] * PerlJam afk

[21:08] <pmichaud> jnthn: I like cold weather... remember how I was enjoying Oslo in April?

[21:08] <sisar> PerlJam: I thought 'attributes' are something like private variables. But I don't have any private variables there.

[21:08] <tadzik> Boss to employee: "Do you like warm vodka?" "No" "How about sweaty women?" "No" "Great, then you get your vacation in december"

[21:08] <masak> jnthn: you do know that all they eat at YAPC::Antarctic is variations on frozen fish?

[21:09] <jnthn> Eww.

[21:09] <jnthn> How sill-y.

[21:09] <masak> :P

[21:09] <masak> phenny: sv en "sill"?

[21:09] <phenny> masak: "herring" (sv to en, translate.google.com)

[21:09] <tadzik> :)

[21:09] <pmichaud> cold would be nice.  38.8 degC here right now.

[21:10] <masak> tadzik: there's something about that joke that feels like it could be improved. :)

[21:10] *** birdwindupbird left
[21:10] <tadzik> masak: what is it?

[21:10] <masak> tadzik: it doesn't quite have that shift-in-perspective at the end that a joke of that category has.

[21:10] <pmichaud> oops, now 38.9 degC  :-)

[21:10] <tadzik> hmm

[21:10] <masak> I mean, it's surprising, but somehow not enough, or not in quite the right way.

[21:10] <jnthn> tadzik: Vacation in December works. Go to where it's too darn hot the rest of the year. :)

[21:11] <jnthn> Like Texas :P

[21:11] <masak> I took a vacation in December last year :)

[21:11] <tadzik> iirc there's 20 degrees celsius in Egypt in January 

[21:11] <masak> went before the tourist season too, so we had the beach mostly to ourselves.

[21:11] <tadzik> both air and water temp

[21:12] <tadzik> masak: maybe it loses something it translation, but it's still not the best of jokes I know

[21:12] *** bruges_ left
[21:12] <sisar> um, can someone have a look at my gist a few line back. PerlJam told me somthing but he went afk before I could ask him something.

[21:13] <tadzik> sisar: if you want to modify the attributes they need to be "is rw"'d

[21:14] <sisar> tadzik:I thought 'attributes' are something like private variables. But I don't have any private variables there.

[21:14] <pmichaud> 'attributes' are anything declared with 'has'

[21:14] <pmichaud> an attribute declared with a dot gets a public accessor method

[21:14] <masak> tadzik: it reminded me of this old joke. https://gist.github.com/2991296

[21:14] *** bruges joined
[21:14] <pmichaud> an attribute declared "is rw" gets a public accessor method that can modify the attribute

[21:14] <masak> pmichaud: well, except that you can go 'has method', IIRC :)

[21:16] <tadzik> masak: haha, nice one :)

[21:16] <sisar> pmichaud: "$.d is rw" makes it public... that means other parts of the program can modify $d ?

[21:17] <pmichaud> sisar: "$.d" makes it 'public', in the sense of being visible.

[21:17] * sisar realizes he needs to understand OOP in general :|

[21:17] <pmichaud> sisar:  "is rw" makes it publicly modifiable, in the sense of being assignable

[21:18] <masak> sisar++ # curious in ways that help

[21:18] <pmichaud> has $!d;   # $!d can only be accessed from within the methods of the class

[21:18] *** brrt left
[21:19] <pmichaud> has $.d;   # creates $!d, but also creates a method 'd' that allows outsiders to obtain the value of $!d

[21:19] *** drbean left
[21:19] <pmichaud> has $.d is rw;   # creates $!d, and also creates a method 'd' that allows outsiders to modify the value of $!d

[21:19] <tadzik> maybe there's some material for the blog post, "OOP as Perl 6 encourages it"

[21:20] <pmichaud> oops, gotta run for a bit

[21:20] <pmichaud> afk

[21:22] <sisar> tadzik: +100 to that. I would really appreciate it if someone wrote that. Unfortunately, masak++'s http://strangelyconsistent.org/blog/june-27-2011-classes is very superficial.

[21:22] <sisar> And http://en.wikibooks.org/wiki/Perl_6_Programming/Classes_And_Attributes is kinda confusing, well atleast for me.

[21:23] <tadzik> sisar: maybe that should just go into the Perl 6 Book

[21:25] <sisar> tadzik: yeah I forgot to mention the Perl6 book, its Classes chapter is not newbie friendly. Given that it is not aimed towards newbies, that is acceptable.

[21:26] *** mucker left
[21:27] <masak> still, we should maybe aim to make it more newbie friendly.

[21:28] <sisar> masak: +1

[21:29] *** vmspb left
[21:30] *** kurahaupo joined
[21:35] <jnthn> I guess there's a difference between being a Perl 6 newbie and an OOP newbie too 

[21:38] <sisar> oh, and the completely wrong line number in the gist. Should I file a bug report ? (After golfin it.)

[21:39] <jnthn> Yeah

[21:39] <sisar> will do

[21:40] <masak> \o/

[21:40] <masak> sisar: before I forget: it's nice to have you on board.

[21:41] <sisar> :)

[21:45] <lue> hello #perl6 o/

[21:45] <jnthn> o/ lue 

[21:45] <dalek> nqp/toqast: 702c1b7 | jnthn++ | / (2 files):

[21:45] <dalek> nqp/toqast: Add a QAST::CompUnit, which will be involved in SC handling and a few other things we have one of per compilation unit.

[21:45] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/702c1b7382

[21:46] <tadzik> hey lue 

[21:48] <masak> rn: say "Hello, {"Life Universe Everything".words>>.substr(0,1).join.lc}!"

[21:48] <p6eval> rakudo 185f8f, niecza v18-10-g07900b5: OUTPUT«Hello, lue!␤»

[21:48] <lue> :)

[21:49] <masak> rn: say "Hello, {"Life, the Universe, and Everything".words>>.substr[0, 2, 4](0,1).join.lc}!"

[21:49] <p6eval> niecza v18-10-g07900b5: OUTPUT«Unhandled exception: No value for parameter '$start' in 'Cool.substr'␤  at /home/p6eval/niecza/lib/CORE.setting line 0 (Cool.substr @ 1) ␤  at /tmp/EBwnWWmiJe line 1 (ANON @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3051 (hyperunary @ 66) ␤  at /h…

[21:49] <p6eval> ..rakudo 185f8f: OUTPUT«Not enough positional parameters passed; got 1 but expected between 2 and 3␤  in method substr at src/gen/CORE.setting:3500␤  in method dispatch:<hyper> at src/gen/CORE.setting:872␤  in block <anon> at /tmp/n5xH9pdE_m:1␤␤»

[21:49] <masak> oops. my bad.

[21:49] <masak> rn: say "Hello, {"Life, the Universe, and Everything".words[0, 2, 4]>>.substr(0,1).join.lc}!"

[21:49] <p6eval> rakudo 185f8f, niecza v18-10-g07900b5: OUTPUT«Hello, lue!␤»

[21:55] *** ggoebel left
[21:55] *** Entonian joined
[21:57] *** Entonian left
[21:58] <harmil> I don't want to be pushy, but what can I do to get https://github.com/rakudo/rakudo/pull/71 merged?

[21:59] <masak> harmil++ # reminder

[22:00] *** ggoebel joined
[22:00] <jnthn> I'm a bit uneasy about the we-know-it-won't-be-called DESTROY going in. The buffering bits look fine...have they been added or are they already in the spec, ooc?

[22:01] * masak was gonna say the same about DESTROY

[22:01] <masak> I'm a bit confused, also. the two commits look identical in what they change.

[22:01] <masak> anyone else seeing this?

[22:01] <harmil> masak: that's because of how I manage my repo

[22:02] <harmil> It's a no-ff merge from my topic

[22:02] <harmil> Once you pull it and do a git log —oneline —graph —decorate it will look sane

[22:02] <masak> ok.

[22:02] <harmil> About the specness of my changes

[22:03] <masak> harmil: I believe a merge is fine. we don't have a policy against merge commits in Rakudo.

[22:03] <harmil> no, it's not in the spec exactly that way. As someone pointed out, the spec for IO is still in need of some updating for the modern world. All I did in the meanwhile was to mock up what Parrot does with buffering

[22:04] <harmil> However, flush is definitely in the spec as I did it (coincidentally)

[22:04] <jnthn> harmil: That's fine...sometimes the implementations should lead the spec, and IO is one of those. Was just curious. :)

[22:05] *** kurahaupo left
[22:05] <jnthn> I'm a bit distracted right now, and about to go get some rest, but I can merge it in the morning (minus the DESTROY)

[22:05] <harmil> If you feel like reverting the DESTROY addition before merging it in, I'm fine with that

[22:05] <jnthn> OK

[22:06] *** ggoebel left
[22:06] <harmil> Though, keep in mind that that means that any IO that sets full buffering without explicitly flushing before exit will throw away all of its work.

[22:07] <harmil> Then again, that's the reality whether we have an impotent DESTROY method or not, right now.

[22:08] *** bluescreen10 left
[22:08] <tadzik> do we pass the spectests after these changes?

[22:11] *** spider-mario_ joined
[22:11] *** spider-mario_ left
[22:11] *** ggoebel joined
[22:11] *** spider-mario left
[22:12] * pmichaud looks at pull request 71

[22:12] <jnthn> Uh-oh :D

[22:13] *** lichtkind joined
[22:14] <pmichaud> I'd remove the Bool::True from method flush()

[22:15] <jnthn> pmichaud: Why?

[22:15] <jnthn> pmichaud: $!PIO is a Parrot object

[22:16] <lichtkind> cabecon++

[22:16] <masak> right. indecent exposure, no wait, that's not the right expression.

[22:16] <jnthn> pmichaud: If we don't explicitly return something we risk leaking a Parrot thingy into Perl 6 space.

[22:16] <jnthn> masak: We...haven't tended to call the problem that. :P

[22:16] <pmichaud> jnthn: at least p6booleanize the return from the Parrot thingy

[22:16] <pmichaud> but always returning True is... wrong.

[22:17] <masak> ah, yes.

[22:17] <masak> that's better.

[22:17] <pmichaud> $!PIO.flush ought to be returning whether the flush succeeded or no.

[22:17] *** PacoAir left
[22:17] <jnthn> Hm, unless it throws...in which case we need to catch it and turn it into a fail

[22:18] <pmichaud> looking.

[22:19] <pmichaud> It does throw.

[22:19] *** PZt left
[22:19] <pmichaud> anyway, I'd prefer to see a p6booleanize of the return from $!PIO.flush().  We should at least acknowledge that flush can return something other than True.

[22:19] <pmichaud> (whether it actually does or not.)

[22:20] <pmichaud> we still don't have a good guideline for use of _ versus - in method names :-/

[22:22] <jnthn> Time for some sleep, 'night o/

[22:23] <tadzik> e.

[22:23] <tadzik> o/

[22:23] <lichtkind> \o

[22:23] <pmichaud> harmil: I wonder if there's a better name than 'buffer_type'

[22:27] <masak> the underscore indicates that it's low-level, no?

[22:27] <pmichaud> masak: looking

[22:28] <pmichaud> masak: yeah, that seems to fit.  In which case this should be buffer-type and not buffer_type

[22:29] <masak> aye.

[22:29] <pmichaud> I also wonder if buffertypes/adverbs should be arguments to open()

[22:30] *** am0c joined
[22:33] *** whiteknight joined
[22:34] *** tokuhirom joined
[22:38] *** cognominal joined
[22:43] <masak> 'night, #perl6

[22:43] *** skids joined
[22:45] <pmichaud> I'd like us (#perl6) to have a discussion about how to handle some of the more exploratory parts of the spec while still retaining a commitment to some sense of stability for users.

[22:47] *** flussence left
[22:47] *** flussence_ joined
[22:47] *** flussence_ is now known as flussence

[22:51] *** thou left
[22:53] *** ab5tract left
[22:55] *** libertyprime left
[22:55] *** libertyprime joined
[22:58] *** am0c left
[23:02] *** cognominal left
[23:04] *** cognominal joined
[23:07] *** Gesh left
[23:11] *** Vlavv joined
[23:13] *** eric joined
[23:16] <harmil> re: Bool::True  — I was just emulating other calls in IO

[23:17] <harmil> I don't think flush returns non-true. I think it's either True or an exception, but I could be wrong (speaking of Parrot, here)

[23:19] <harmil> pmichaud: yes, the buffer_type call is a direct Parrot mock-up. If you have a better name, it would be perfectly acceptable to re-name it (though I'm getting closer and closer to wanting an IO::Parrot from which Rakudo derives its IO and which non-Rakudo implementations replace with an exception-generating stub)…. just a thought

[23:21] <harmil> Yeah, now that I actually say that, I can't think of a good reason it shouldn't be the case. It's kind of like having the POSIX library in Perl 5. You don't usually want POSIX::write semantics, but if you do, they're there...

[23:21] <harmil> Would anyone be averse to an IO::Parrot?

[23:22] <pmichaud> I think an IO::Parrot is an excellent idea.

[23:23] <pmichaud> I have less concern about stability/deprecation for something that exists as IO::Parrot

[23:23] <pmichaud> s/less/much less/

[23:23] <harmil> yeah, that makes sense

[23:24] <harmil> I have a hard time getting my head around the long-term implications of adding interfaces in the core. I know I should be cognizant of it, but that's not terribly easy for me.

[23:24] <pmichaud> re: Bool::True -- yes, I looked at some of the other calls in IO and they're much the same (for better or worse).  So the pull request is at least consistent with the rest of IO in that respect.

[23:24] <pmichaud> we all have a hard time with the longer-term implications. :-)

[23:27] <pmichaud> I think I prefer buffer-mode or buffering-mode to buffer_type

[23:27] *** Chillance left
[23:27] *** Chillance joined
[23:28] <pmichaud> Indeed, setvbuf talks about "mode" instead of "type", as does Perl 5's documentation on setvbuf

[23:28] <pmichaud> "type" tends to be an overused noun; kind of like "user" and "data".

[23:29] *** ponbiki left
[23:30] *** simcop2387 left
[23:30] *** mikemol left
[23:31] *** ponbiki joined
[23:31] *** simcop2387 joined
[23:31] *** Pleiades` left
[23:32] *** sorear left
[23:32] *** sorear joined
[23:33] *** Pleiades` joined
[23:35] *** Maddingue left
[23:36] *** Maddingue joined
[23:37] *** Guest81317 left
[23:37] *** infosophy joined
[23:38] *** xinming left
[23:38] *** xinming joined
[23:39] *** pochi left
[23:39] *** pochi joined
[23:40] *** ponbiki left
[23:40] *** sjohnson joined
[23:40] *** rhr left
[23:41] *** ponbiki joined
[23:43] *** ashleydev left
[23:44] *** ashleydev joined
[23:44] <diakopter> phenny: ask moritz I'd love to see a histogram of weekly #perl6 activity (the number of messages in a given time slice (1hr? 15min?), averaged over the past N weeks, for the whole week).  Does your irclog db support such a thing?

[23:44] <phenny> diakopter: I'll pass that on when moritz is around.

[23:46] *** rhr joined
[23:53] <cxreg> so, is there any effort so far to publish a set of common grammars for re-use?  like, for example, SQL

[23:53] <cxreg> does that make sense?

[23:56] <tadzik> sounds sensemaking to me

[23:56] <tadzik> I think the best way would be to publish it as a module

[23:56] <tadzik> as we have URI for example

[23:56] <cxreg> yeah, i was just looking at that one

[23:56] <cxreg> but rather than bundle it with code

[23:56] <cxreg> just publish the grammars

[23:57] <cxreg> (code too, but separately)

[23:57] <tadzik> grammars are code :)

[23:59] *** Chillance left
