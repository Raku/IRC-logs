[00:01] <tadzik> sjn: hahaha, awesome :)

[00:02] <tadzik> I hope she'll show up

[00:08] <sjn> yeah, me too :)

[00:08] <sjn> her twitter profile even says "loves sarcasm", so she might just do it :D

[00:12] *** thelazydeveloper left
[00:29] *** drbean joined
[00:32] *** tokuhiro_ joined
[00:35] *** am0c left
[00:36] *** spider-mario left
[00:36] <dalek> rakudo/nom: eb6c7d4 | (Geoffrey Broadwell)++ | src/core/Str.pm:

[00:36] <dalek> rakudo/nom: Fix off-by-one in one of the Str.Numeric error messages

[00:36] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/eb6c7d47c5

[00:36] <dalek> rakudo/nom: c91826d | (Geoffrey Broadwell)++ | src/core/Str.pm:

[00:36] <dalek> rakudo/nom: Support complex numbers (including pure imaginary numbers) in Str.Numeric

[00:36] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c91826dace

[00:57] *** thou left
[01:06] *** scott_ joined
[01:06] *** scott_ is now known as Guest38562

[01:52] *** benabik left
[01:53] <japhb> r: class A is Num { }; class B is Str { }; .^mro.say for A, A.new(), B, B.new();

[01:53] <p6eval> rakudo c91826: OUTPUT«A() Num() Cool() Any() Mu()␤Num() Cool() Any() Mu()␤B() Str() Cool() Any() Mu()␤B() Str() Cool() Any() Mu()␤»

[01:53] *** benabik joined
[01:53] <japhb> What the heck?!?

[01:54] <japhb> That looks like a Rakudobug, but an awfully strange one.  Anyone have an explanation or differing opinion?

[01:55] <sorear> r: class A is Num { }; say A.new.WHAT

[01:55] <p6eval> rakudo c91826: OUTPUT«Num()␤»

[01:56] *** replore_ joined
[02:06] *** Guest1438 left
[02:11] *** tokuhiro_ left
[02:17] *** benabik left
[02:17] *** replore_ left
[02:25] *** benabik joined
[02:26] *** drbean left
[02:29] <dalek> perl6-roast-data: 2edeaf2 | coke++ | p (2 files):

[02:29] <dalek> perl6-roast-data: today

[02:29] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/2edeaf2638

[02:34] *** raiph joined
[02:35] <raiph> phenny, tell [Coke] "I'm kind of distracted with perl6 stuff at the moment." (2010) --> http://blog.timbunce.org/tag/perl6/

[02:35] <phenny> raiph: I'll pass that on when [Coke] is around.

[02:36] *** Chillance left
[02:39] *** replore_ joined
[02:41] *** Patterner left
[02:42] *** raiph left
[02:42] <[Coke]> danke

[02:42] <phenny> [Coke]: 02:35Z <raiph> tell [Coke] "I'm kind of distracted with perl6 stuff at the moment." (2010) --> http://blog.timbunce.org/tag/perl6/

[02:43] *** Psyche^ joined
[02:43] *** Psyche^ is now known as Patterner

[02:43] <[Coke]> yah, that was the db stuff that I didn't think went anywhere.

[02:48] *** orafu left
[02:48] *** orafu joined
[02:51] *** drbean joined
[02:59] *** benabik_ joined
[02:59] *** benabik left
[02:59] *** benabik_ is now known as benabik

[03:15] *** localhost left
[03:16] *** localhost joined
[03:18] *** leprevost joined
[03:18] *** jeffreykegler left
[03:58] *** quietfanatic_ joined
[03:59] *** quietfanatic left
[04:00] <TimToady> japhb: I don't see that .Numeric needs to handle <>

[04:12] *** raiph joined
[04:13] *** crab2313 joined
[04:14] *** raiph left
[04:20] *** fgomez joined
[04:23] *** skids left
[04:28] *** replore_ left
[04:49] *** replore joined
[04:59] <diakopter> I told the blogger girl she shouldn't have used the photos without permission, and she replied that she agreed and then took all the photos off the post

[05:05] *** GlitchMr joined
[05:09] *** am0c joined
[05:12] *** jeffreykegler joined
[05:13] *** leprevost left
[05:13] *** jeffreykegler left
[05:17] <sorear> good of her

[05:23] *** birdwindupbird joined
[05:37] *** crab2313 left
[05:56] *** adu joined
[06:11] *** SamuraiJack joined
[06:11] *** brrt joined
[06:17] <moritz> \o

[06:21] *** kaleem joined
[06:28] *** wtw joined
[06:33] <japhb> TimToady, excellent, that's what I'd hoped, thank you.

[06:34] <japhb> masak, Finally getting a chance to read your July blog series.  For July 2, in the section 'Moving disks', the last two bullet point links are the same (both point to the first commit of the two).  Also, the next two paragraphs explain the !apply method, which is not in evidence yet at that point.

[06:44] <japhb> masak, ah, appears to occur in commit caea86f6

[06:49] *** kaleem left
[06:53] *** brrt left
[06:57] *** SamuraiJack left
[06:58] *** SamuraiJack joined
[07:01] <japhb> masak, again in July 2, the last two bullet point links in the 'Command-line client' section are the same (both pointing to the first commit of the two again).

[07:03] *** kaleem joined
[07:05] <felher> moritz: about 34e8d4d83fe8e0e79fd75c1f3ea98d0f3445fd4d : is "+@($rhs) && [...] && +@($rhs) == 2" really what you wanted?

[07:06] <mhasch> sjn++ for inviting the stitch bi^h^h girl to a hackathon

[07:09] *** replore left
[07:12] <masak> good morning, #perl6.

[07:13] <masak> japhb: thanks. will fix. this seems to have happened a lot in my copy-pasting of links. :/

[07:13] <japhb> :-)

[07:14] *** brrt joined
[07:24] <moritz> felher: I guess reordering the alternatives is a better fix

[07:26] <felher> moritz: :)

[07:28] <moritz> spectesting now

[07:32] <GlitchMr> Just wondering, does Perl 6 have something like unimport?

[07:35] <moritz> it has lexical scopes

[07:35] <moritz> you can just import stuff into an inner scope

[07:36] <moritz> and close the scope if you don't want the stuff anymore

[07:36] <moritz> in due time we will need some routine or macro that is triggered by 'no foo;'

[07:36] <moritz> but that's not yet specced, afaict

[07:38] *** adu left
[07:49] <dalek> rakudo/nom: 4e14470 | moritz++ | src/Perl6/Actions.pm:

[07:49] <dalek> rakudo/nom: simplify code from commit 34e8d4d8, felher++

[07:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4e144704d4

[07:49] *** hoelzro|away is now known as hoelzro

[07:49] <felher> moritz++ :)

[07:56] *** adu joined
[07:57] <TimToady> added a second solution to http://rosettacode.org/wiki/Sorting_algorithms/Bead_sort#Perl_6  (dunno if the first solution even works--it looks kinda bogus to me)

[07:58] <TimToady> I think this is the first time I've used ^«@list

[07:58] <TimToady> it was originally 2 X..^ @list

[07:58] <TimToady> which is kinda ugly

[07:58] <TimToady> s/2/0/

[08:13] *** adu left
[08:13] <felher> ^<<@list is sweet :)

[08:13] <felher> TimToady++ #additional entry 

[08:14] * felher -> off to catch the bus.

[08:17] <masak> ooh, ^«

[08:18] <masak> I haven't seen that thought expressed before in code.

[08:18] <masak> TimToady++

[08:22] *** nimiezko joined
[08:22] <GlitchMr> ^<<?

[08:22] <tadzik> I'm not sure what it does

[08:22] <huf> does it create a 0..n list for each element of @list?

[08:22] <GlitchMr> ^<<(2, 3) gives 0 1 0 1 2

[08:23] <GlitchMr> ^2 is 0 1

[08:23] <GlitchMr> ^3 is 0 1 2

[08:23] <huf> yeah so 0..n-1

[08:23] <GlitchMr> This is combined and we get a list

[08:23] <huf> oh and concats it all together?

[08:24] <GlitchMr> But if I would see ^« in real code... well...

[08:24] <GlitchMr> Those operators are confusing

[08:24] <TimToady> well, if you know what ^ is, and what « is, it's not confusing

[08:25] <huf> yeah, you can sortof guess at the meaning if you only vaguely recall what those mean

[08:25] <huf> which is pretty good

[08:25] <GlitchMr> It's worse than 1, 2 X~ 3, 4

[08:25] <arnsholt> r: say ^<<(2,3)

[08:25] <p6eval> rakudo 4e1447: OUTPUT«0..^2 0..^3␤»

[08:26] <GlitchMr> When will my Perl 6 compile... I'm still using Rakudo Star 2011.07 on virtual machine]

[08:27] <GlitchMr> glitchmr@strawberry ~/g/rakudo> perl6

[08:27] <GlitchMr> fish: Job 1, 'perl6' terminated by signal SIGSEGV (Address boundary error)

[08:27] <GlitchMr> wat

[08:27] <GlitchMr> I guess I did something wrongly during compilation

[08:27] <huf> get a passport... :)

[08:27] <GlitchMr> But why make test works if perl6 doesn't?

[08:28] *** frettled left
[08:28] *** frettled joined
[08:30] * TimToady ==> sleep;

[08:30] <mhasch> o/

[08:33] <GlitchMr> ^Inf X** 2 ==> grep * %% 3

[08:33] <GlitchMr> I'm almost sure I do something wrongly

[08:34] *** nimiezko left
[08:34] <GlitchMr> Should make do nothing?

[08:35] <GlitchMr> oh, right... I called make two times

[08:35] *** mattp_ joined
[08:38] *** bbkr joined
[08:39] <GlitchMr> ok, I found problem. I accidentally gave wrong directory as --prefix

[08:39] <GlitchMr> I written /home/glitchmr/perl6 when I wanted /home/glitchmr/rakudo

[08:39] <GlitchMr> I have*

[08:42] <GlitchMr> NQP has been built and installed.

[08:42] <GlitchMr> ===SORRY!===

[08:42] <GlitchMr> NQP revision 2012.07-278-ge401db5 required (currently 2012.07-227-g26a8bc1).

[08:42] <GlitchMr> So, I've installed NQP but it's too old

[08:43] <masak> do it again, but right this time?

[08:46] *** nimiezko joined
[08:46] *** mhasch left
[08:48] *** nimiezko left
[08:52] <hoelzro> I just noticed the "GCC Bug" section on the Rakudo site

[08:52] <hoelzro> has that been there long?

[08:56] <arnsholt> GCC bug section?

[08:57] <GlitchMr> It works :)

[08:57] <hoelzro> "Note On GCC Version 4.1.2/4.1.3" on http://rakudo.org/how-to-get-rakudo/

[08:58] <hoelzro> I was wondering if that has been there long

[08:58] <hoelzro> if so, I'll feel quite dumb

[08:58] <GlitchMr> Who uses GCC 4.1 anymore?

[08:59] * hoelzro shrugs

[08:59] <hoelzro> I saw this same bug a few weeks ago, though

[08:59] <hoelzro> on 4.7

[08:59] <GlitchMr> Even stable Debian has GCC 4.4.5-1

[09:00] <GlitchMr> Debian stable*

[09:01] <GlitchMr> Also... http://gcc.gnu.org/gcc-4.1/

[09:01] <GlitchMr> I don't see GCC 4.1.3 on this page for some reason

[09:01] <GlitchMr> http://upload.wikimedia.org/wikipedia/commons/0/09/GCC_4.1.3_ubuntu7.10_de.png

[09:01] <GlitchMr> Interesting...

[09:02] <tadzik> well, 7.10

[09:26] <GlitchMr> my Car $car = Car.new

[09:26] <GlitchMr> You can write Java in Perl 6

[09:26] <masak> yes.

[09:26] <masak> or FORTRAN. or Lisp.

[09:27] <sorear> now, now, GlitchMr

[09:27] <sorear> that's an unfair comparison

[09:27] <GlitchMr> I should go back to C

[09:27] <GlitchMr> Car car = {}

[09:28] <sorear> Java was designed to strongly support static typing, and it can intuit the "my", you don't need to explicitly *say* you're declaring a global

[09:28] <sorear> s/global/lexicaal/

[09:28] <masak> GlitchMr: "go back to"? are you only doing one language at a time on principle?

[09:28] <masak> that sounds terribly boring. :)

[09:28] <GlitchMr> Or Python

[09:28] <GlitchMr> car = Car()

[09:28] <tadzik> (car cdr)

[09:29] <masak> tadzik++

[09:29] * masak tries to assume GlitchMr is rambling, not trolling

[09:30] *** mhasch joined
[09:31] <GlitchMr> But not like length of class construction matters

[09:32] <masak> ok, let's assume that sigils and 'my' are non-negotiable.

[09:32] <masak> r: class Car { method postcircumfix:<( )>() { self.new } }; say my $car = Car(); # like Python

[09:32] <p6eval> rakudo 4e1447: OUTPUT«Too many positional parameters passed; got 2 but expected 1␤  in method postcircumfix:<( )> at /tmp/SfG1jUHFMe:1␤  in <anon> at src/gen/BOOTSTRAP.pm:824␤  in any <anon> at src/gen/BOOTSTRAP.pm:820␤  in block  at /tmp/SfG1jUHFMe:1␤␤»

[09:33] <masak> r: class Car { method postcircumfix:<( )>($c) { self.new } }; say my $car = Car(); # like Python

[09:33] <p6eval> rakudo 4e1447: OUTPUT«Car.new()␤»

[09:33] <masak> GlitchMr: better?

[09:34] <GlitchMr> r: class Car { has $.colour; method postcircumfix:<( )>($c) { self.new } }; say my $car = Car(:colour<yellow>); # like Python

[09:34] <p6eval> rakudo 4e1447: OUTPUT«Car.new(colour => Any)␤»

[09:35] <masak> r: class Car { has $.colour; method postcircumfix:<( )>($c) { self.new(|$c) } }; say my $car = Car(:colour<yellow>)

[09:35] <p6eval> rakudo 4e1447: OUTPUT«Car.new(colour => "yellow")␤»

[09:39] *** fhelmberger joined
[09:43] *** daxim joined
[09:51] *** fhelmberger left
[09:58] <felher> Well, one can at least write "my Car $car .= new()", if one wants to use normal Perl6 and not write "Car" twice...

[10:00] <masak> yes, that's the idea.

[10:00] <masak> that was even in the Apocalypses.

[10:01] <masak> from the idea of .= doing initialization the way it does, we essentially got type objects like we have them today.

[10:03] <felher> masak++ # interesting background information :)

[10:03] <masak> your friendly neighborhood Perl 6 historian.

[10:04] <felher> :D

[10:05] *** Guest38562 left
[10:06] *** MayDaniel joined
[10:17] *** GlitchMr left
[10:55] *** spider-mario joined
[11:00] *** brrt left
[11:11] *** JimmyZ joined
[12:05] <[Coke]> doin the things a histor can.

[12:05] <masak> :P

[12:13] *** gongyiliao left
[12:21] *** xinming_ joined
[12:24] *** xinming left
[12:59] *** leprevost joined
[13:15] *** kaleem left
[13:19] *** bluescreen10 joined
[13:20] *** fgomez left
[13:32] *** Chillance joined
[13:36] *** skids joined
[13:41] *** leprevost left
[13:44] *** leprevost joined
[13:53] *** tokuhiro_ joined
[13:58] *** leont joined
[14:03] *** cognominal__ joined
[14:06] *** cognominal_ left
[14:12] *** SamuraiJack left
[14:12] *** brrt joined
[14:12] *** brrt left
[14:13] *** adu joined
[14:14] *** brrt joined
[14:14] *** SamuraiJack joined
[14:22] <masak> quiet day today.

[14:22] *** bluescreen10 left
[14:22] <masak> jnthn++ and I are doing a CQRS hackathon today, by the way :)

[14:23] *** preflex_ joined
[14:23] *** preflex_ is now known as preflex

[14:24] <moritz> \o

[14:24] * moritz back from zoo in Hannover

[14:25] <jnthn> .oO( Hannover...Hangover... )

[14:25] <jnthn> Hope it was a nice zoo trip :)

[14:25] <brrt> \o moritz

[14:30] * masak .oO( zoff im zoo in Hannover )

[14:30] <masak> phenny: de en "Zoff im Zoo"?

[14:30] <phenny> masak: "Down and Out at the Zoo" (de to en, translate.google.com)

[14:30] <masak> :D

[14:30] <tadzik> er, is Zoff so hard?

[14:30] *** bluescreen10 joined
[14:31] <masak> "Down and out" sounds like a description of the arrow on my "Enter" key.

[14:32] <tadzik> more like Down and in, imho :)

[14:33] <masak> really? you *in*dent to the right.

[14:33] <tadzik> hmm, well

[14:34] <tadzik> okay. Picture a car going from left to right. Is it going "to", or "from"?

[14:34] <masak> east :P

[14:34] <tadzik> :)

[14:34] *** wtw left
[14:38] <masak> but yeah. it's going "to".

[14:38] <tadzik> that's why Enter is Return

[14:39] <tadzik> the car example works because we're used to typing from left to right

[14:39] <tadzik> arabic people would probably think another way around

[14:40] <arnsholt> Apparently there was a commercial for some painkiller tablets that failed horribly in the Middle East

[14:40] <masak> .werbeH dnA.

[14:41] <masak> arnsholt: because they got the before/after direction wrong? :)

[14:41] <tadzik> :)

[14:41] <arnsholt> It was a comic, going from left to right: man has head-ache, man takes pill, man is happy =)

[14:41] <tadzik> :D

[14:41] <masak> arnsholt: I heard the same story but against child obesity.

[14:41] <tadzik> and you though comic people should know their stuff

[14:41] <tadzik> I mean, Manga

[14:41] <daxim> http://enwp.org/Down_and_out_in_the_magic_kingdom

[14:41] <arnsholt> masak: Heh. Might be apocryphal

[14:42] <masak> arnsholt: like the "Nova car" one in Brazil.

[14:42] <masak> phenny: en de "Down and out in the magic kingdom"?

[14:42] <phenny> masak: "Zoff in der Magic Kingdom" (en to de, translate.google.com)

[14:42] <masak> :P

[14:42] <moritz> "no va" -- doesn't work?

[14:42] <arnsholt> Oh, right ^_^

[14:42] <jnthn> doesn't go, iirc :)

[14:42] <masak> aye.

[14:43] <daxim> http://www.snopes.com/business/misxlate/nova.asp

[14:43] <masak> snopes++

[14:46] <moritz> https://plus.google.com/u/0/110981030061712822816/posts/KaSKeg4vQtz # software liberalism and conservativsm

[14:46] <felher> jnthn: in multidispatch.c, should one ever get to >>error = "Circularity detected in multi sub types.";<< ? :)

[14:47] <jnthn> felher: It's relatively hard to construct a case where it happens.

[14:47] *** adu left
[14:48] *** adu joined
[14:48] <jnthn> It's a legit check, but using the built-in meta-objects shouldn't really lead to it.

[14:49] <jnthn> (So if you've hit it and are surprised to have done so, I'd be interested to know how you managed it.)

[14:50] <tadzik> . o O ( This car is a no-go )

[14:52] *** thou joined
[14:53] *** adu left
[14:53] <moritz> iirc I submitted a bug report where that error was triggered

[14:53] <jnthn> moritz: How long ago?

[14:53] *** adu joined
[14:53] <jnthn> I know I fixed one involving native types a whlie back.

[14:53] <felher> jnthn: here you go: https://gist.github.com/3314278 <- i don't know if the fix really is a fix or if you would do it in some other way. I stumbled upon it and hunted it down just for fun without diving in too deep because i don't have that much free time. I couldn't resist to try, though :)

[14:54] <moritz> maybe two or three month ago?

[14:54] <felher> I just weighted slurpyness more than the need to bind_check... :)

[14:54] <jnthn> felher: that's a genuine bug

[14:55] *** adu left
[14:55] <jnthn> not surprised, given how many things people have insisted work in arity related bits of calcs though... :S

[14:55] *** adu joined
[14:55] <felher> :)

[14:55] * jnthn looks over the patch

[14:55] <jnthn> Does it spectest cleanly, ooc?

[14:56] <felher> jnthn: it does :)

[14:56] <jnthn> Seems reasonable.

[14:57] <jnthn> felher++ # fixing a fehler

[14:57] <jnthn> I'll apply it this evening, if nobody beats me to it.

[14:57] *** leprevost left
[14:57] *** kaare_ joined
[14:57] <felher> \o/ :)

[14:58] <moritz> https://rt.perl.org/rt3/Ticket/Display.html?id=107638 # it was 7 months ago

[14:58] <jnthn> moritz: Yes, that was the one I was thinking of.

[14:58] <jnthn> Was fixed fairly swiftly. :)

[14:59] <moritz> indeed, jnthn++

[14:59] <felher> jnthn: thnx. I'll do another spectest. Just to be sure. I don't want my first internals patch to break stuff just because i did screw up spectesting :)

[15:01] <jnthn> A spectest to cover this would also be good :)

[15:01] * moritz does a spectest run with that patch

[15:02] *** ryan_ joined
[15:03] *** tokuhiro_ left
[15:03] *** JimmyZ left
[15:04] *** ryan_ left
[15:05] *** topo joined
[15:16] <dalek> rakudo/nom: 8f97220 | (Felix Herrmann)++ | src/binder/multidispatch.c:

[15:16] <dalek> rakudo/nom: fix issue in binder/multidispatch.c where A is narrower than B is narrower than A

[15:16] <dalek> rakudo/nom: 

[15:16] <dalek> rakudo/nom: Signed-off-by: Moritz Lenz [email@hidden.address]
[15:16] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8f97220745

[15:18] <masak> felher++!

[15:18] <moritz> jnthn, felher: applied that for you

[15:18] <jnthn> felher++, moritz++

[15:20] *** snearch joined
[15:20] <felher> jnthn++, moritz++ # review, spectest, apply :)

[15:21] * moritz only did the latter two :-)

[15:22] *** raiph joined
[15:22] *** snearch left
[15:28] *** brrt left
[15:29] *** jeffreykegler joined
[15:35] <sorear> good * #perl6

[15:35] <felher> o/

[15:36] <masak> good morning, sorear.

[15:37] <jnthn> o/ sorear 

[15:37] <TimToady> *

[15:38] <sorear> o/

[15:43] *** leprevost joined
[15:45] *** hoelzro is now known as hoelzro|away

[15:49] *** raiph left
[15:49] <moritz> r: (-> $p { .key } )( (a => 1) )

[15:49] <p6eval> rakudo 4e1447: OUTPUT«No such method 'key' for invocant of type 'Any'␤  in block  at /tmp/MARkAeVDKG:1␤␤»

[15:50] * moritz managed a similar block to produce a NPMCA

[15:50] <moritz> r: ( (a => 1) ).map: -> $p { .key }

[15:50] <p6eval> rakudo 4e1447:  ( no output )

[15:50] <moritz> r: say ( (a => 1) ).map: -> $p { .key }

[15:50] <p6eval> rakudo 4e1447: OUTPUT«No such method 'key' for invocant of type 'Any'␤  in block  at /tmp/4r0OULtunU:1␤␤»

[15:50] *** thelazydeveloper joined
[15:50] <moritz> r: say ( (a => 1) ).map: -> $p { say(.key) }

[15:50] <p6eval> rakudo 4e1447: OUTPUT«No such method 'key' for invocant of type 'Any'␤  in block  at /tmp/7F9ub5EIJ0:1␤␤»

[15:51] *** crab2313 joined
[15:53] <japhb> jnthn, did you see the "Num takes over when you inherit from it" issue I found last night?

[15:54] <moritz> r: class A is Num { }; say A.new.WHAT

[15:54] <p6eval> rakudo 4e1447: OUTPUT«Num()␤»

[15:54] <moritz> sorear++ golfed it down

[15:54] <moritz> just needs a better contructor

[15:54] <japhb> ?

[15:54] <japhb> I don't understand that last comment, moritz

[15:54] <moritz> class Num needs a better constructor

[15:55] <japhb> Oh, it has a specialty one of its own?  Freaky.

[15:55] * japhb goes to look at it.

[15:55] <jnthn> multi method new() { nqp::p6box_n(0) }

[15:55] <jnthn> d'oh. :)

[15:55] <moritz> needs to be

[15:55] <moritz> nqp::box_n(self, 0)

[15:55] <jnthn> nqp::box_n(0, self)

[15:55] <moritz> oh, the other way round?

[15:56] <jnthn> I think so

[15:56] <jnthn> r: nqp::box_n(0, Num)

[15:56] <p6eval> rakudo 4e1447:  ( no output )

[15:56] <jnthn> r: nqp::box_n(Num, 0)

[15:56] <p6eval> rakudo 4e1447: OUTPUT«Cannot unbox a type object as a native num␤  in any <anon> at src/gen/BOOTSTRAP.pm:100␤  in block  at /tmp/03G4QmRIbD:1␤␤»

[15:56] <jnthn> Yeah

[16:15] <jeffreykegler> Where does one go for the latest, freshest S05 synopsis?

[16:15] <moritz> http://perlcabal.org/syn/S05.html

[16:16] <moritz> https://github.com/perl6/specs/blob/master/S05-regex.pod is the source

[16:16] <jeffreykegler> Ok, I though someone earlier was diss'ing perlcabal's copy as stale.  (It's the one I have)

[16:17] <TimToady> masak: I've got http://irclog.perlgeek.de/perl6/2012-08-10#i_5889088 the other way around my head, so I guess we need citations :)

[16:17] <masak> TimToady: oh!

[16:17] <masak> good to know.

[16:18] <TimToady> coulda been one of those things rattling around in my head that I didn't say loud enough before .= happened though

[16:18] <masak> I think I just assumed that it was one of those "given that we want this syntax, what does Car have to be" things?

[16:18] <masak> s/\?/./

[16:18] <masak> a bit like .[*-1] led to whatever closures.

[16:19] <TimToady> but to me the important thing is the ability to reason about Socrates isa Man, and .= is epiphenomenal

[16:20] <TimToady> I don't usually install a syntax till I've wanted it for several different reasons

[16:20] <masak> nod

[16:21] <[Coke]> how much effort to get rakudo to support <== feeds?

[16:21] <TimToady> but by the necessities of communication, people tend to see the syntax first

[16:21] *** bbkr left
[16:21] <TimToady> [Coke]: I thought it did, for limited cases

[16:22] <TimToady> or maybe it was just ==> ?

[16:22] <TimToady> r: 1..3 ==> say

[16:22] <p6eval> rakudo 8f9722: OUTPUT«1..3␤»

[16:22] <TimToady> r: say <== 1..3

[16:22] *** birdwindupbird left
[16:22] <p6eval> rakudo 8f9722: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix <== instead␤at /tmp/Ru3a7KUahq:1␤»

[16:22] <TimToady> yeah

[16:23] <[Coke]> r: say (.WHAT <== "again") # --samuel jackson

[16:23] <p6eval> rakudo 8f9722: OUTPUT«===SORRY!===␤Sorry, do not know how to handle this case of a feed operator yet. at line 2, near " \"again\") "␤»

[16:23] <TimToady> which is funny, since you could just s[ '<==' ] = '' and it'd work

[16:24] <TimToady> r: say() <== 1..3

[16:24] <p6eval> rakudo 8f9722: OUTPUT«1..3␤»

[16:24] <TimToady> there we go

[16:24] <[Coke]> r: say .WHAT "again"

[16:24] <p6eval> rakudo 8f9722: OUTPUT«===SORRY!===␤Confused␤at /tmp/Hqv3mv3KzS:1␤»

[16:24] <[Coke]> r: say (.WHAT "again")

[16:24] <p6eval> rakudo 8f9722: OUTPUT«===SORRY!===␤Unable to parse postcircumfix:sym<( )>, couldn't find final ')' at line 2, near "\"again\")"␤»

[16:24] <TimToady> r: say WHAT "again"

[16:24] <p6eval> rakudo 8f9722: OUTPUT«Str()␤»

[16:25] <[Coke]> hurm. why no dot there

[16:25] <[Coke]> ?

[16:25] <TimToady> it's a macro really

[16:25] <jnthn> std: say <== 1..3

[16:25] <p6eval> std f43a358: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unable to parse quote words at /tmp/f8LccSH_p6 line 1:␤------> [32msay [33m⏏[31m<== 1..3[0m␤Couldn't find final '>'; gave up at /tmp/f8LccSH_p6 line 1 (EOF):␤------> [32msay <== 1..3[33m⏏[31m<EOL>[0m␤Parse failed␤FAILED 00:00 41…

[16:25] <TimToady> so more naturally in function form than method form

[16:25] <jnthn> Was gonna say... :)

[16:25] <[Coke]> I know it's supposed to be a macro, but I didn't think it really was a macro anywhere.

[16:25] <jnthn> .WHAT is

[16:25] <jnthn> To the degree that the compiler magics it

[16:26] <TimToady> we want people to think of those as macros in any case

[16:26] <masak> the more I understand about macros, the less I understand how .WHAT can be one.

[16:28] <jnthn> It's not a macro in *that* sense.

[16:28] <TimToady> macro ≅ special to the compiler

[16:28] <jnthn> It's an AST transformation.

[16:28] <jnthn> So it's close enough.

[16:31] * TimToady wonders if <== could be considered heavy enough to override quote word parsing in term position

[16:32] <TimToady> at one point we considered feed operators to be terminators

[16:32] <sorear> I lean towards yes

[16:32] <sorear> I mean, LTM

[16:33] <sorear> <-> in term position isn't quotewords

[16:33] <sorear> std: <-> $x { $x++ } # let me check that assertion

[16:33] <p6eval> std f43a358: OUTPUT«ok 00:00 42m␤»

[16:35] <TimToady> std: say <-> $x { $x++ }

[16:35] <p6eval> std f43a358: OUTPUT«ok 00:00 43m␤»

[16:36] <masak> I also vote for "heavy enough".

[16:36] *** leont left
[16:38] <TimToady> std: sort ==> sort

[16:38] <p6eval> std f43a358: OUTPUT«[31m===[0mSORRY![31m===[0m␤Preceding context expects a term, but found infix ==> instead at /tmp/u13Yo655o_ line 1:␤------> [32msort [33m⏏[31m==> sort[0m␤Parse failed␤FAILED 00:00 41m␤»

[16:39] <TimToady> std: sort or sort

[16:40] <p6eval> std f43a358: OUTPUT«[31m===[0mSORRY![31m===[0m␤Undeclared routine:␤ 'or' used at line 1␤Check failed␤FAILED 00:00 41m␤»

[16:42] *** adu left
[16:43] <dalek> doc: 3d6fb61 | moritz++ | htmlify.pl:

[16:43] <dalek> doc: [htmlify] write disambiguation files

[16:43] <dalek> doc: 

[16:43] <dalek> doc: for example http://doc.perl6.org/Str now says it is a type and a method

[16:43] <dalek> doc: review: https://github.com/perl6/doc/commit/3d6fb615b0

[16:44] <[Coke]>  -> (12:43) From Kazrak, to random:                                             

[16:44] <[Coke]>  - "The First Rule of Robot Fight Club is you DO NOT TALK about Robot Fight     

[16:44] <[Coke]>  - Club, or, through inaction, allow Robot Fight Club to be talked about."      

[16:45] <masak> *lol*

[16:46] <sorear> haha

[16:46] <moritz> [Coke]++

[16:46] <TimToady> much merriment all around at the Wall Nuthouse

[16:47] <masak> today's mini-challenge: find another funny merge of two memes according to the same pattern.

[16:48] <moritz> nr: say (1e2 * 1.FatRat).WHAT

[16:49] <p6eval> rakudo 8f9722, niecza v19-15-g051783d: OUTPUT«Num()␤»

[16:49] <mhasch> walnuts are great, Wall nuts maybe more so :-)

[16:52] <[Coke]> http://insaniquariumguide.com/pvz/index.php?title=Wall-nut # Any relation?

[16:53] *** REPLeffect left
[16:53] <dalek> doc: b7cae64 | moritz++ | lib/FatRat.pod:

[16:53] <dalek> doc: document FatRat

[16:53] <dalek> doc: review: https://github.com/perl6/doc/commit/b7cae64c02

[16:54] <dalek> rakudo/nom: e5e9e79 | moritz++ | src/core/Num.pm:

[16:54] <dalek> rakudo/nom: make Num.new better suitable for subclassing. japhb++ and sorear++

[16:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e5e9e79e12

[16:54] *** REPLeffect joined
[16:59] <masak> dinner &

[17:04] <moritz> on the upside, features of doc.perl6.org and volume of the docs are increasing

[17:04] <moritz> on the downside it takes now 8.5 minutes to run htmlify

[17:11] <dalek> doc: 91e7c16 | moritz++ | lib/Failure.pod:

[17:11] <dalek> doc: document Failure

[17:11] <dalek> doc: review: https://github.com/perl6/doc/commit/91e7c16f15

[17:12] * moritz profiles htmlify.pl

[17:17] <moritz> wow, the most time is consumed in... *drumrolls*... method close

[17:17] <moritz> ie writing files

[17:18] <moritz> and 3% in the get_integer vtable

[17:19] <moritz> there might be something to gain here by unboxing instead

[17:20] <moritz> http://moritz.faui2k3.org/tmp/htmlify.profile

[17:43] <moritz> now if I could figure out where that's called from, that would help tremendously

[17:44] *** crab2313 left
[17:50] *** Tedd1 joined
[17:52] *** birdwindupbird joined
[17:57] <TimToady> I sure hope the new driving instructions they're sending to the Curiosity rover don't allow texting while driving.

[17:58] <TimToady> masak: ^ there's one

[18:00] *** jeffreykegler left
[18:06] <diakopter> oh, the instructions are texts

[18:06] <diakopter> took me a while

[18:06] <TimToady> Curiosity was supposedly tweeting during the landing

[18:09] <rjbs> Think it's on FourSquare?

[18:10] <rjbs> Doesn't look like it. :(

[18:10] <moritz> jnthn, pmichaud: List.gimme calls the get_integer vtable

[18:10] <moritz>     set $I502, $P514

[18:10] <moritz>     perl6_booleanize $P508, $I502

[18:11] <moritz> eeks

[18:12] *** jeffreykegler joined
[18:15] <moritz> https://gist.github.com/3316379

[18:16] <moritz> I'm not sure if that's a bug in the codegen or in List.gimme

[18:16] <moritz> but we surely should avoid it

[18:18] <moritz> $ ack  'set \$I\d+, \$P\d+$' src/gen/CORE.setting.pir |wc -l

[18:18] <moritz> 130

[18:22] *** sirrobert joined
[18:24] *** daxim left
[18:26] *** sirrobert left
[18:27] *** jeffreykegler left
[18:36] *** jeffreykegler joined
[18:36] *** bluescreen10 left
[18:37] *** bluescreen10 joined
[19:14] *** bluescreen10 left
[19:19] *** jeffreykegler left
[19:20] *** jeffreykegler joined
[19:22] *** bluescreen10 joined
[19:25] <[Coke]> http://radar.oreilly.com/2012/08/damian-conway-perl.html

[19:25] <[Coke]> Damian Conway weighs in on new features, best practices and Perl’s future

[19:25] <[Coke]> Moose, Regular Expressions and how Perl 6 is influencing Perl 5

[19:25] <[Coke]> ... fastest dynamic language sounds familiar, which means someone already posted this, didn't they. ;)

[19:26] *** jeffreykegler left
[19:29] *** kaare_ left
[19:30] *** leont joined
[19:43] *** leprevost left
[20:01] <dalek> std: 2e62059 | larry++ | / (3 files):

[20:01] <dalek> std: recover from several months of specrot

[20:01] <dalek> std: 

[20:01] <dalek> std: The bootstrap of STD was completely hosed by the sigspace and +%

[20:01] <dalek> std: changes, as well as various other dysfunctions.  We now have a complete

[20:01] <dalek> std: bootstrap of the new sigspace model, and a partial implementation of +%

[20:01] <dalek> std: (sufficient only to bootstrap a STD containing +% rather than **).

[20:01] <dalek> std: 

[20:01] <dalek> std: With the new sigspace rules we can rewrite many of the tokens to rules

[20:01] <dalek> std: and still preserve LTM correctness.

[20:01] <dalek> std: review: https://github.com/perl6/std/commit/2e620599c1

[20:03] * [Coke] listens to the damien video, and wonders why there is an... envelope wrapping the video. :P

[20:06] <flussence> if they didn't put that there it'd show all the ugly wires and props in the recording studio!

[20:10] <diakopter> I find it interesting that many tokens became rules

[20:11] <cognominal__> I just got burned in javascript by    1.mymethod() because '1.' is interpreted as a token. How Perl 6 interprets that? I thought it did LTM. Or may be I don't understant what it entails.

[20:12] <cognominal__> p6:   say 1.Int

[20:12] <p6eval> rakudo e5e9e7, niecza v19-15-g051783d: OUTPUT«1␤»

[20:12] <moritz> it does the sensible thing :-)

[20:12] <cognominal__> but how?

[20:13] <moritz> I guess with LTM :-)

[20:13] <cognominal__> so it backtracks?

[20:13] <moritz> I think it parses the whole <term><postfixish> as a single LTM token

[20:13] <moritz> at least that would be my first guess

[20:13] <flussence> eval: print 1.2.3.4.5 # not sure what to expect here

[20:13] <buubot_backup> flussence: 1

[20:13] <flussence> wat.

[20:13] <huf> so it parses the 1 and then looks for .Int before it looks to see if a float literal follows?

[20:15] <TimToady> std: 1.

[20:15] <p6eval> std f43a358: OUTPUT«[31m===[0mSORRY![31m===[0m␤Decimal point must be followed by digit at /tmp/F76BTxTFrw line 1:␤------> [32m1.[33m⏏[31m<EOL>[0m␤Unsupported use of . to concatenate strings; in Perl 6 please use ~ at /tmp/F76BTxTFrw line 1 (EOF):␤------> [32m1.[33m⏏[31m<EOL>…

[20:15] <TimToady> that's part of it

[20:15] <huf> or when parsing the ., it doesnt immediately figure out what it is, only one token after it?

[20:16] <cognominal__> ho, so the trick is to require a digit after the dot.

[20:18] *** MayDaniel left
[20:18] * moritz has submitted a rakudo ticket for the LTA codegen

[20:18] *** benabik left
[20:19] *** benabik joined
[20:21] <TimToady> STD now does sigspace well enough for copying, I think

[20:22] <dalek> rakudo/nom: cb065c8 | moritz++ | src/core/control.pm:

[20:22] <dalek> rakudo/nom: avoid a vtable call in get_integer

[20:22] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cb065c87ed

[20:34] <dalek> perl6-roast-data: cc86974 | coke++ | p (2 files):

[20:34] <dalek> perl6-roast-data: today

[20:34] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/cc86974001

[20:36] *** leont left
[20:39] *** Targen left
[20:39] *** PacoAir joined
[20:40] *** Targen joined
[20:44] <dalek> perl6.org: aadb728 | (John Gabriele)++ | source/ (2 files):

[20:44] <dalek> perl6.org: change some headings from h2/h4 --> h3 to match rest of the site

[20:44] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/aadb728815

[20:53] *** birdwindupbird left
[21:00] *** MayDaniel joined
[21:02] *** skids left
[21:18] *** SamuraiJack left
[21:19] *** adam7504 joined
[21:19] *** adam7504 left
[21:19] *** adam7504 joined
[21:33] *** adam7504 left
[21:44] *** bluescreen10 left
[21:46] *** tokuhiro_ joined
[21:50] *** PacoAir left
[21:51] *** PacoAir joined
[21:58] *** PacoAir_ joined
[21:58] *** PacoAir_ left
[21:58] *** PacoAir_ joined
[21:59] *** PacoAir_ left
[21:59] *** PacoAir left
[22:07] *** tokuhiro_ left
[22:08] *** fgomez joined
[22:09] *** PacoAir joined
[22:23] *** PacoAir_ joined
[22:23] *** PacoAir left
[22:23] *** PacoAir_ is now known as PacoAir

[22:31] *** tokuhiro_ joined
[22:36] * diakopter listens for the other shoe to drop

[22:39] *** quietfanatic_ left
[22:39] *** bbkr joined
[22:49] <TimToady> what if it's a horse?

[22:49] <geekosaur> or an Andorian

[22:50] <TimToady> or a Dufflepud

[22:50] <diakopter> well, no one was around to hear it anyway, so it must not have made a sound

[22:51] <benabik> If a shoe falls in the middle of the forest and nobody's around, who waits for the other one?

[22:52] *** whiteknight joined
[22:52] <diakopter> I don't know, but earlier I heard a billion angels fall off the head of a pin, when it dropped.

[22:53] *** whiteknight is now known as Guest45820

[22:54] <jnthn> evening o/

[22:54] <diakopter> oy

[22:57] *** Moukeddar joined
[22:57] *** Moukeddar left
[23:01] *** MayDaniel left
[23:07] *** ChanServ sets mode: +o diakopter

[23:07] *** diakopter sets mode: -o diakopter

[23:15] *** MayDaniel joined
[23:25] *** quietfanatic joined
[23:27] *** fgomez left
[23:27] *** fgomez joined
[23:28] *** MayDaniel left
[23:30] *** PacoAir_ joined
[23:30] *** tokuhiro_ left
[23:31] *** PacoAir left
[23:31] *** PacoAir_ is now known as PacoAir

[23:43] *** sudokode is now known as nub

[23:46] *** fgomez left
[23:52] *** PacoAir left
