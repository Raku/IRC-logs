[00:12] *** rurban left
[00:13] *** Pleiades` left
[00:14] *** _jaldhar left
[00:16] *** _jaldhar joined
[00:17] *** _jaldhar left
[00:18] *** _jaldhar joined
[00:20] *** Pleiades` joined
[00:29] *** pecastro_ joined
[00:31] *** tokuhiro_ left
[00:31] *** tokuhiro_ joined
[00:31] *** pecastro left
[00:34] <colomon> n: given 1 {‚ê§when 1 {‚ê§say "1";‚ê§} default {‚ê§ say "not 1";‚ê§}‚ê§}given 1 {‚ê§when 1 {‚ê§say "1";‚ê§} default {‚ê§ say "not 1";‚ê§}‚ê§}

[00:34] <p6eval> niecza v22-44-g0247fe5: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Strange text after block (missing comma, semicolon, comment marker?) at /tmp/aOjK_FPw4N line 4:‚ê§------> [32m}[33m‚èè[31m default {[0m‚ê§‚ê§Parse failed‚ê§‚ê§¬ª

[00:34] <colomon> n: given 1 {‚ê§when 1 {‚ê§say "1";‚ê§} default {‚ê§ say "not 1";‚ê§}‚ê§}

[00:34] <p6eval> niecza v22-44-g0247fe5: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Strange text after block (missing comma, semicolon, comment marker?) at /tmp/6D2KJZMteb line 4:‚ê§------> [32m}[33m‚èè[31m default {[0m‚ê§‚ê§Parse failed‚ê§‚ê§¬ª

[00:35] <lue> .oO(day 18 looks to be interesting)

[00:36] <colomon> n: given 1 {‚ê§when 1 {‚ê§say "1";‚ê§}‚ê§ default {‚ê§ say "not 1";‚ê§}‚ê§}

[00:36] <p6eval> niecza v22-44-g0247fe5: OUTPUT¬´1‚ê§¬ª

[00:36] <colomon> r: given 1 {‚ê§when 1 {‚ê§say "1";‚ê§}‚ê§ default {‚ê§ say "not 1";‚ê§}‚ê§}

[00:36] <p6eval> rakudo da6569: OUTPUT¬´1‚ê§¬ª

[00:36] <colomon> there's your problem: missing newline

[00:37] <lue> colomon: I know. I'm saying it shouldn't be an error, esp. considering the lack-of-a-newline works when using another when block instead of a default block.

[00:38] <lue> rn: given 1 {‚ê§when 1 {‚ê§say "1";‚ê§} when 2 {‚ê§ say "not 1";‚ê§}‚ê§}

[00:38] <p6eval> rakudo da6569: OUTPUT¬´1‚ê§¬ª

[00:38] <p6eval> ..niecza v22-44-g0247fe5: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Strange text after block (missing comma, semicolon, comment marker?) at /tmp/xgVDjUA1gM line 4:‚ê§------> [32m}[33m‚èè[31m when 2 {[0m‚ê§‚ê§Parse failed‚ê§‚ê§¬ª

[00:39] <lue> (I personally like putting the first line of the next when/elsif/* block on the same line of the closing brace of the last one)

[00:40] <sorear> lue: the fact that it works with two whens is a bg

[00:40] <sorear> std: when 1 {} when 2 { }

[00:40] <p6eval> std a8bc48f: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Strange text after block (missing comma, semicolon, comment marker?) at /tmp/e_0QEKLmbU line 1:‚ê§------> [32mwhen 1 {}[33m‚èè[31m when 2 { }[0m‚ê§    expecting horizontal whitespace‚ê§Parse failed‚ê§FAILED 00:00 42m‚ê§¬ª

[00:40] <lue> std: if 1 { } elsif 2 { }

[00:40] <p6eval> std a8bc48f: OUTPUT¬´ok 00:00 42m‚ê§¬ª

[00:41] <lue> ? why the inconsistency?

[00:41] <sorear> if...elsif is a single statement

[00:41] <sorear> when...when is two statements

[00:41] <sorear> separating two statements always requires either a ; or a }\n

[00:45] <lue> Aw. I think I prefer  } when 2 {  for similar reasons to why I don't like  sub declaration() \n { (I don't like the look of a brace on its own line, it seems)

[00:45] <sorear> }; when 2 { then

[00:48] <lue> :/ (/me goes to read up on the details of given/when to find a rationale for the "they're separate statements" decision)

[00:52] <lue> r: given 1 {‚ê§when 1 {‚ê§say "1";‚ê§} when * {‚ê§ say "not 1";‚ê§}‚ê§}

[00:52] <p6eval> rakudo da6569: OUTPUT¬´1‚ê§¬ª

[00:53] *** wamba left
[00:58] *** popl left
[00:58] *** zby_home_ left
[01:15] *** pmurias left
[01:37] *** ircmouser left
[01:49] *** gfldex left
[01:51] *** gfldex joined
[01:52] *** skids joined
[01:58] *** rindolf left
[01:58] *** tokuhiro_ left
[01:59] *** tokuhiro_ joined
[02:14] *** araujo left
[02:17] <sorear> phenny: tell japhb I have a theory... how does $acc ~= ($x ~ $y); do in rakudo, where $x and $y are loop-invariant but not "constant"s?

[02:17] <phenny> sorear: I'll pass that on when japhb is around.

[02:19] *** dayangkun joined
[02:24] *** grondilu joined
[02:25] <grondilu> r: role Foo {}; my $x = Int but Foo; say Int($x) ~~ Foo;

[02:25] <p6eval> rakudo da6569: OUTPUT¬´True‚ê§¬ª

[02:25] <grondilu> n: role Foo {}; my $x = Int but Foo; say Int($x) ~~ Foo;

[02:25] <p6eval> niecza v22-44-g0247fe5: OUTPUT¬´Unhandled exception: Unable to resolve method postcircumfix:<( )> in type Int‚ê§  at /tmp/BZhgrg1TWY line 1 (mainline @ 6) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4211 (ANON @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4212 (module-CORE @ 578‚Ä¶

[02:26] <grondilu> r: role Foo {}; my $x = Int but Foo; say Int.bless($x) ~~ Foo;

[02:26] <p6eval> rakudo da6569: OUTPUT¬´True‚ê§¬ª

[02:26] <grondilu> How do I "un-role" an object?

[02:32] <grondilu> For instance, how do I make a vanilla Int from Foo-enroled Int?

[02:32] <sorear> 0 + $enrolled-int

[02:33] <sorear> in the general case, though, there's no way

[02:33] <sorear> role application is a one-way street

[02:34] <sorear> jnthn will probably have more to say about this..

[02:41] <grondilu> r: role Foo {}; my $x = 13 but Foo; say (0+$x)  ~~ Foo;

[02:41] <p6eval> rakudo da6569: OUTPUT¬´False‚ê§¬ª

[02:48] <dalek> niecza: 2ad9ba8 | sorear++ | lib/ (3 files):

[02:48] <dalek> niecza: A bit of optimization to ~double the speed of ~; make .join non-quadratic

[02:48] <dalek> niecza: review: https://github.com/sorear/niecza/commit/2ad9ba8a1f

[02:50] <grondilu> In perl5 I could use the 'import' function to send a parameter when using a package.  Like 'package Foo { our $param; sub import { $param = shift } }' and then 'use Foo qw(bar);'   What's the equivalent of that in Perl 6?

[03:07] *** popl joined
[03:16] *** am0c joined
[03:28] *** am0c left
[03:34] <lue> rn: say ?$~MAIN.defined

[03:34] <p6eval> rakudo da6569: OUTPUT¬´===SORRY!===‚ê§Non-declarative sigil is missing its name‚ê§at /tmp/ugGZgbcO0G:1‚ê§¬ª

[03:34] <p6eval> ..niecza v24-1-g2ad9ba8: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Unhandled reference twigil ~ at /tmp/PrCDhhkBlV line 1:‚ê§------> [32msay ?$~MAIN[33m‚èè[31m.defined[0m‚ê§‚ê§Unhandled exception: Check failed‚ê§‚ê§  at /home/p6eval/niecza/boot/lib/CORE.setting line 1443 (die @ 5) ‚ê§  at /home/p6eval‚Ä¶

[03:35] *** orafu left
[03:36] *** orafu joined
[03:38] *** grondilu left
[03:39] <lue> rn: https://gist.github.com/4186848

[03:39] <p6eval> niecza v24-1-g2ad9ba8: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§GLOBAL::MAIN does not name any package at /tmp/5FsBGNYNFn line 5:‚ê§------> [32maugment slang MAIN[33m‚èè[31m {[0m‚ê§‚ê§Augment requires a target at /tmp/5FsBGNYNFn line 5:‚ê§------> [32maugment slang MAIN [33m‚èè[31m{[0m‚ê§‚ê§Illega‚Ä¶

[03:39] <p6eval> ..rakudo da6569: OUTPUT¬´===SORRY!===‚ê§You tried to augment slang MAIN, but it does not exist‚ê§at /tmp/deaNnr5nXo:5‚ê§¬ª

[03:44] *** rurban joined
[03:47] *** rom1504 joined
[03:51] *** sjohnson left
[03:51] *** sjohnson joined
[04:06] <lue> do the terms in src/core/terms.pm get turned into dynamic variables (e.g. the %ENV in that file is %*ENV everywhere else)?

[04:10] *** replore joined
[04:15] <sorear> lue: yes, per spec even

[04:18] *** replore left
[04:21] *** PacoAir left
[04:34] *** fgomez left
[04:36] *** Psyche^ joined
[04:40] *** Patterner left
[04:40] *** Psyche^ is now known as Patterner

[04:49] <dalek> mu: 2930b01 | colomon++ | misc/perl6advent-2012/schedule:

[04:49] <dalek> mu: Update misc/perl6advent-2012/schedule

[04:49] <dalek> mu: 

[04:49] <dalek> mu: Claim a couple of days.

[04:49] <dalek> mu: review: https://github.com/perl6/mu/commit/2930b0193f

[04:51] *** fgomez joined
[04:52] <lue> where should I put tests for the $~ variables in S02?

[04:53] *** tokuhiro_ left
[04:54] *** tokuhiro_ joined
[04:55] <sorear> o/ colomon

[04:55] <colomon> \o

[04:56] <dalek> niecza: 71a8938 | sorear++ | lib/CORE.setting:

[04:56] <dalek> niecza: Specialize Range iteration for Numeric to avoid polymorphic cmp

[04:56] <dalek> niecza: review: https://github.com/sorear/niecza/commit/71a89388c9

[04:56] <colomon> about to sleep

[04:56] <colomon> sorear++

[04:56] <sorear> lue: I'd put them under S26, personally.

[04:56] <colomon> sorear: I ran spectest today on niecza and got ~10 failing files.  Haven't had a chance to investigate them yet.

[04:57] <lue> you mean S28, right?

[04:59] *** rurban left
[05:24] <dalek> roast: 05ff1e5 | lue++ | S28-named-variables/slangs.t:

[05:24] <dalek> roast: Added tests for $~ slang variables.

[05:24] <dalek> roast: 

[05:24] <dalek> roast: Specifically the particular ones provided by Perl 6 by default.

[05:24] <dalek> roast: review: https://github.com/perl6/roast/commit/05ff1e5462

[05:24] <dalek> roast: a5c9497 | lue++ | S28-named-variables/slangs.t:

[05:24] <dalek> roast: Fudge tests for $~ for rakudo.

[05:24] <dalek> roast: review: https://github.com/perl6/roast/commit/a5c94970bb

[05:38] <sorear> lue: I mean whichever one talks about pod

[05:38] <lue> the $~ variables have nothing to do with Pod, though.

[05:41] <sorear> oh I thought you were talking about $=

[05:41] <sorear> my bad

[06:16] *** robins left
[06:30] *** wamba joined
[06:31] *** SamuraiJack joined
[06:57] *** bapa left
[06:58] <moritz> r: say 42 gcd 58

[06:58] <p6eval> rakudo da6569: OUTPUT¬´2‚ê§¬ª

[06:58] *** bapa joined
[07:04] *** _jaldhar left
[07:04] *** _jaldhar joined
[07:17] *** azawawi joined
[07:17] <azawawi> hi

[07:17] <phenny> azawawi: 28 Nov 20:25Z <japhb> tell azawawi I'll add your any(@array) benchmark to perl6-bench. Any other micro-benchmarks you'd like to see added, or particular performance gotchas you've found?

[07:17] <sorear> hello azawawi 

[07:18] <azawawi> hmm good

[07:18] <azawawi> sorear++ # for faster junctions... :)

[07:18] * azawawi takes a look @ perl6-bench

[07:21] <azawawi> sorear: how can i embed a niecza REPL? any examples?

[07:21] <azawawi> sorear: any API for that?

[07:22] <sorear> I think you are looking for some kind of open3

[07:35] <dalek> niecza: 1d0c020 | sorear++ | lib/ (2 files):

[07:35] <dalek> niecza: Forward compatibility for extending the set of kernel-defined types

[07:35] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1d0c020009

[07:35] <dalek> niecza: c85099a | sorear++ | lib/ (3 files):

[07:35] <dalek> niecza: Some C# love for the numeric range hot path

[07:35] <dalek> niecza: review: https://github.com/sorear/niecza/commit/c85099ac19

[07:35] <moritz> phenny: ask masak if his advent calendar post is ready for publishing

[07:35] <phenny> moritz: I'll pass that on when masak is around.

[07:42] *** kaare__ joined
[07:43] <azawawi> sorear: ok thx...

[07:46] <dalek> niecza: 599cbcb | sorear++ | lib/Kernel.cs:

[07:46] <dalek> niecza: Unroll the range iterator for further wins (I think this idea was from an old blog of colomon++ 's)

[07:46] <dalek> niecza: review: https://github.com/sorear/niecza/commit/599cbcb326

[07:47] <sorear> phenny: tell japhb 'for 1..20 { }' before: 757.56 ¬± 26.546 ¬µs now: 53.345 ¬± 1.8765 ¬µs

[07:47] <phenny> sorear: I'll pass that on when japhb is around.

[07:50] *** wamba left
[07:51] <sorear> phenny: tell japhb I'm shelving this for now but there's still much work to be done. [ loop (my $i = 1; $i <= 20; $i++) { } ] = 10.730 ¬± 0.0305 ¬µs; [ my $i = -20; Nil while ++$i ] = 4.1028 ¬± 0.1603 ¬µs

[07:51] <phenny> sorear: I'll pass that on when japhb is around.

[07:55] <skids> https://gist.github.com/4187527  # more bitops fixes, will post an RT tomorrow unless someone can find one it should belong to.

[07:58] <azawawi> phenny: tell japhb i'll send pull requests with any performance bottlenecks I encounter. Thanks for making and pointing out your cool perl6-bench project. I will check it out later today.

[07:58] <phenny> azawawi: I'll pass that on when japhb is around.

[08:05] *** azawawi left
[08:07] *** cedrvint joined
[08:07] <cedrvint> moritz: I think masak's post can be published: http://irclog.perlgeek.de/perl6/2012-12-01#i_6203594

[08:13] *** Chillance left
[08:22] *** am0c joined
[08:23] <lue> phenny: ask jnthn how would someone go about turning %*LANG<MAIN> in Perl6/Compiler.pm into $~MAIN, along with the other $~ variables?

[08:23] <phenny> lue: I'll pass that on when jnthn is around.

[08:23] <lue> goodnight o/

[08:24] <cedrvint> phenny: tell masak it seems auto-publishing has failed. The post is 8 hours late now, I publish it (and hope i'm not wrong)

[08:24] <phenny> cedrvint: I'll pass that on when masak is around.

[08:25] *** araujo joined
[08:26] *** Kharec joined
[08:27] *** wamba joined
[08:29] *** cedrvint left
[08:35] *** GlitchMr joined
[08:35] *** betterworld joined
[09:04] *** FROGGS joined
[09:04] <FROGGS> morning

[09:06] <sorear> o/

[09:15] <GlitchMr> Just wondering, can I get editor access on Perl 6 advent to put article for 12th day which I've already done?

[09:17] *** RandalSchwartz left
[09:22] *** kst` joined
[09:22] *** kst` left
[09:32] *** popl left
[09:33] *** tokuhiro_ left
[09:34] *** tokuhiro_ joined
[09:35] <jnthn> morning, #perl6

[09:35] <phenny> jnthn: 08:23Z <lue> ask jnthn how would someone go about turning %*LANG<MAIN> in Perl6/Compiler.pm into $~MAIN, along with the other $~ variables?

[09:38] <sorear> morning jnthn 

[09:39] <jnthn> phenny: tell lue Well, they are installed in some %?LANG but they will suffer the "not under Mu" issue. And I need to do some MOP stuff before turning to that.

[09:39] <phenny> jnthn: I'll pass that on when lue is around.

[09:40] <jnthn> phenny: tell lue but I think at a first guess $~MAIN would desugar to %?LANG<MAIN>

[09:40] <phenny> jnthn: I'll pass that on when lue is around.

[09:40] <jnthn> o/ sorear 

[09:42] * jnthn will be back to having regular-ish Perl 6 tuits again from tomorrow o/

[09:46] <GlitchMr> 240 updates available... this gonna be fun

[09:47] <GlitchMr> It appears I've to update every KDE app I've

[09:52] *** cognominal joined
[09:54] <dalek> perl6.org: 997054d | GlitchMr++ | source/documentation/index.html:

[09:54] <dalek> perl6.org: Add Perl 6 Advent Calendar 2012 link.

[09:54] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/997054da67

[09:58] *** am0c left
[09:58] <dalek> perl6.org: e6eccff | GlitchMr++ | source/documentation/index.html:

[09:58] <dalek> perl6.org: Revert "[documentation] warn about perl6-examples outdatedness, sbp++"

[09:58] <dalek> perl6.org: 

[09:58] <dalek> perl6.org: It was updated lately by gerdr++.

[09:58] <dalek> perl6.org: 

[09:58] <dalek> perl6.org: This reverts commit fc4bcf057b5fe916479f97984c2a3668dcb336b1.

[09:58] <dalek> perl6.org: 

[09:58] <dalek> perl6.org: Conflicts:

[09:58] <dalek> perl6.org: 	source/documentation/index.html

[09:58] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/e6eccff68a

[10:04] <dalek> perl6.org: 705305f | GlitchMr++ | source/about/index.html:

[10:04] <dalek> perl6.org: Update Carl M√§sak website link.

[10:04] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/705305f695

[10:07] <GlitchMr> -Ofun

[10:12] *** spider-mario joined
[10:16] <GlitchMr> ok, now let's make something -Ofun :-)

[10:17] <GlitchMr> glitchmr@feather ~> panda install Bailador

[10:17] <GlitchMr> Mu()

[10:17] <GlitchMr> resolve stage failed for Bailador: Bailador depends on HTTP::Easy, which was not found in the ecosystem

[10:17] <GlitchMr> What?

[10:23] *** rindolf joined
[10:24] <sorear> sleep&

[10:29] *** Bzek left
[10:32] *** fgomez left
[10:38] *** grondilu joined
[10:39] <grondilu> Is panda supposed to be compliant with rakudo 2012.11?

[10:39] *** spider-mario_ joined
[10:40] <grondilu> Caus' it's not.  Probably since the disappearance of %*ENV{HOME}/.perl6/lib and all

[10:41] *** tokuhiro_ left
[10:41] <GlitchMr> It hasn't disapperead

[10:41] <GlitchMr> It will disappear in 2012.12

[10:41] <GlitchMr> disappeared*

[10:41] *** spider-mario left
[10:41] <GlitchMr> Besides, it's compatible with it

[10:41] *** tokuhiro_ joined
[10:41] <GlitchMr> It saves to path shown by %*CUSTOM_LIB

[10:42] <grondilu> I don't understand.  I ran ./rebootstrap.pl once again, and now it seems to work fine.  I don't know what happened.

[10:43] <grondilu> Please ignore my previous rant anyway.

[10:43] *** birdwindupbird joined
[10:44] <grondilu> Ah, hang on.  There is indeed an error.  It just appeared a bit later than I thought:  ===SORRY!=== 

[10:44] <grondilu> Could not find File::Find in any of: /

[10:44] <grondilu> (+long list of directories)

[10:44] * jnthn knows there was a branch to update it to the custom lib stuff, but ain't sure if it was merged

[10:45] <jnthn> guess I should go do a little sightseeing while there's sun... :)

[10:45] <jnthn> bbl

[10:46] <GlitchMr> I've weird problem with Bailador

[10:46] <GlitchMr> Any header other than Content-Type doesn't work

[10:46] <GlitchMr> Weird...

[10:46] <GlitchMr> I wonder why it happens

[10:48] *** FROGGS_ joined
[10:50] <GlitchMr> This is so confusing

[10:50] <GlitchMr> What's so special about Content-Type that it works...

[10:51] <GlitchMr> (hmmm... perhaps Perl 6 debugger will help me)

[10:51] *** FROGGS_ left
[10:51] *** FROGGS_ joined
[11:01] <GlitchMr> oh

[11:01] <GlitchMr> I found a stupid problem

[11:01] <GlitchMr> HTTP::Easy::PSGI supports only one HTTP header

[11:01] <GlitchMr> WHAT?

[11:02] <GlitchMr> |   for @($result[1]) -> $header

[11:02] <GlitchMr> > $result

[11:02] <GlitchMr> [303, "Content-Type" => "text/plain", "Nothing-Lol" => "nowhere"]

[11:02] <GlitchMr> That... doesn't feel rite

[11:05] *** Su-Shee_ joined
[11:08] *** Su-Shee left
[11:16] <GlitchMr> http://www.perlcabal.org:1337/ -ofun

[11:16] <GlitchMr> s/-o/-O/

[11:25] *** Su-Shee_ is now known as Su-Shee

[11:31] *** MayDaniel joined
[11:34] *** wamba left
[11:35] <GlitchMr> *** glibc detected *** perl6: double free or corruption (out): 0x0b1fe0a0 ***

[11:35] <GlitchMr> What... the... hell?

[11:35] <GlitchMr> That shouldn't happen, should it?

[11:35] <GlitchMr> https://gist.github.com/4188309

[11:35] <GlitchMr> There is the log, but not sure how useful it is

[11:36] *** FROGGS_ left
[12:06] <dalek> perl6-examples: 4ed4ade | (Gerhard R)++ | euler/prob047-gerdr. (2 files):

[12:06] <dalek> perl6-examples: [euler/prob047] add version using NativeCall

[12:06] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/4ed4ade5db

[12:06] <dalek> perl6-examples: 8b1cc51 | (Gerhard R)++ | euler/prob053-gerdr.pl:

[12:06] <dalek> perl6-examples: [euler/prob053] bikeshedding to align with coming advent post

[12:06] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/8b1cc518b7

[12:06] <dalek> perl6-examples: 50cd5aa | (Gerhard R)++ | euler/prob002-gerdr.pl:

[12:06] <dalek> perl6-examples: [euler/prob002] respect proper bound

[12:06] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/50cd5aa6b4

[12:06] <dalek> perl6-examples: ea70e6e | (Gerhard R)++ | euler/prob029-gerdr.pl:

[12:06] <dalek> perl6-examples: [euler/prob029] replace loop with bulk hash assignment

[12:06] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/ea70e6eb62

[12:07] *** pecastro_ is now known as pecastro

[12:17] <felher> masak++ #blog post (haven't read it yet. But will after lunch)

[12:28] *** dayangkun left
[12:36] <moritz> nqp: nqp::findmethod(1, 'foo')

[12:36] <p6eval> nqp: OUTPUT¬´Method 'foo' not found for invocant of class 'Integer'‚ê§current instr.: '' pc 43 ((file unknown):38) (/tmp/AColaPrHet:1)‚ê§¬ª

[12:40] <grondilu> rn: role Foo { has $.x; method succ { self.new: :x($.x eq "foo" ?? "bar" !! "foo") } }; my $f = "foo" but Foo; say $f++; say $f++;

[12:40] <p6eval> niecza v24-5-g599cbcb: OUTPUT¬´Use of uninitialized value in string context‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 1287 (warn @ 5) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 266 (Mu.Str @ 15) ‚ê§  at <unknown> line 0 (ExitRunloop @ 0) ‚ê§  at /tmp/svWveTRh9O line 1 (Foo.succ @ 4‚Ä¶

[12:40] <p6eval> ..rakudo da6569: OUTPUT¬´use of uninitialized value of type Any in string context  in method succ at /tmp/GbDMwdJboV:1‚ê§‚ê§foo‚ê§‚ê§¬ª

[12:41] <grondilu> rn: role Foo { has $.x; method succ { self.new: :x($.x eq "foo" ?? "bar" !! "foo") } }; my $f = "foo" but Foo; $f.x = "foo"; say $f.x; $f++; say $f.x;

[12:41] <p6eval> rakudo da6569: OUTPUT¬´Cannot assign to a readonly variable or a value‚ê§  in block  at /tmp/0TQMwkCkum:1‚ê§‚ê§¬ª

[12:41] <p6eval> ..niecza v24-5-g599cbcb: OUTPUT¬´foo‚ê§Unhandled exception: Excess arguments to Str.new, unused named x‚ê§  at <unknown> line 0 (ExitRunloop @ 0) ‚ê§  at /tmp/F58EYLv3ny line 1 (Foo.succ @ 5) ‚ê§  at <unknown> line 0 (ExitRunloop @ 0) ‚ê§  at /tmp/F58EYLv3ny line 1 (mainline @ 10) ‚ê§  at /home/p6eval‚Ä¶

[12:45] <moritz> aaaarrrgh

[12:45] <moritz> parrot has a VTABLE_find_method, and an op called find_method

[12:45] <moritz> and guess what, the vtable returns PMCNULL when it can't find the method being looked for

[12:45] <moritz> and the op throws an exception

[12:45] <moritz> fun, innit?

[12:47] <bonsaikitten> lol

[12:49] *** Khisanth left
[12:51] <grondilu> rn: role Foo {}; multi infix:<+>(Foo $, Foo $) { !!! "nyi" }; say (1 but Foo) + (2 but Foo);

[12:51] <p6eval> niecza v24-5-g599cbcb: OUTPUT¬´Unhandled exception: >>>Stub code executed‚ê§  at /tmp/a4uxlfMiGU line 1 (infix:<+> @ 4) ‚ê§  at /tmp/a4uxlfMiGU line 1 (mainline @ 7) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4208 (ANON @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 4209 (module-C‚Ä¶

[12:51] <p6eval> ..rakudo da6569: OUTPUT¬´Ambiguous call to 'infix:<+>'; these signatures all match:‚ê§:(Int:D \a, Int:D \b)‚ê§:(Foo , Foo )‚ê§‚ê§  in block  at /tmp/Lp87STYsnE:1‚ê§‚ê§¬ª

[12:58] <GlitchMr> http://www.perlcabal.org:1337/

[12:58] <GlitchMr> I've made a wiki in Perl 6

[12:58] <GlitchMr> I know, lame

[12:59] <moritz> \o/ Decemeber

[12:59] <GlitchMr> I actually like that name :-)

[13:00] <GlitchMr> I will use December as name, ok?

[13:00] <moritz> I have no objections :-)

[13:01] <GlitchMr> It's just quick experiment with Perl 6

[13:01] <grondilu> GlitchMr: can we see the code?

[13:01] <GlitchMr> Yeah, sure. It's in /home/glitchmr/WorstWikiEver on feather

[13:01] <GlitchMr> I can upload it if somebody doesn't have access to feather

[13:01] *** japhb left
[13:02] <moritz> not everybody has :-)

[13:02] *** Khisanth joined
[13:02] <GlitchMr> https://gist.github.com/4188536

[13:02] <GlitchMr> I know, it looks bad.

[13:03] <grondilu> Oh you actually use git for the versionning system.

[13:04] <GlitchMr> Is there anything wrong with it? It just works.

[13:04] <grondilu> No, it actually makes sense to do so.  I wouldn't have thought about it.

[13:05] *** pmurias joined
[13:05] <GlitchMr> Now, how can I read the file from revision without actually checkouting that revision.

[13:05] <pmurias> jnthn: ping

[13:06] <GlitchMr> git show perhaps

[13:06] <dalek> rakudo/nom: 5481c6e | moritz++ | src/Perl6/Metamodel/MethodDelegation.pm:

[13:06] <dalek> rakudo/nom: fix find_method for types with delegation

[13:06] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5481c6efa9

[13:06] <moritz> GlitchMr: git show $revision:$filename

[13:06] <GlitchMr> Thanks :-)

[13:10] *** Moukeddar joined
[13:12] *** tokuhiro_ left
[13:13] *** tokuhiro_ joined
[13:17] *** bowtie joined
[13:19] *** not_gerd joined
[13:19] <not_gerd> hello, #perl6

[13:20] <FROGGS> hi not_gerd 

[13:20] <not_gerd> I believe I'm done with my advent post: https://gist.github.com/73e4f265c2c0b500b568

[13:20] <FROGGS> the problem you posted yesterday is in an older version of Inline::C, right?

[13:21] <FROGGS> the current versions shouldn't work at, without changes to NativeCall btw

[13:21] <FROGGS> so there is no working version yet

[13:22] <not_gerd> FROGGS: I believe Inline::C was a fresh checkout, but I don't remember if I updated Rakudo/NativeCall

[13:22] <moritz> not_gerd: "However, no one forces you to go crazy with operators - there's nothing wrong with vanilla imperative code:"

[13:22] <moritz> not_gerd: either that colon should be a dot, or there should be imperative code after it

[13:22] <moritz> oh, you're talking about the next problem

[13:23] <dalek> Heuristic branch merge: pushed 31 commits to rakudo/qast-sink-1 by moritz

[13:24] <jnthn> moritz: There's a find_method_null_ok op in perl6.ops, if that helps

[13:25] <jnthn> pmurias: pong

[13:26] <GlitchMr> http://www.perlcabal.org:1337/Main%20page/log/ff3f0dd/378a2d0

[13:28] <moritz> jnthn: then I guess 5481c6e should have used that, right?

[13:28] <jnthn> moritz: It'd be more efficient.

[13:29] <moritz> jnthn: is there an nqp:: op for that?

[13:31] <jnthn> moritz: not yet

[13:32] <moritz> https://gist.github.com/4109216 # updated qast-sink-1 spectest summary

[13:33] <moritz> jnthn: can you outline how I could fix nqp::can(role { }, 'sink') ?

[13:34] <jnthn> Hm, did I get to the bottom of what was going on there?

[13:34] <jnthn> oh...I think I remember.

[13:34] <jnthn> Once you get the pun

[13:35] <jnthn> Check if it can do the method

[13:35] <jnthn> If yes return the closure we currently do

[13:35] <jnthn> If not return nqp::null() or some type object

[13:36] <jnthn> Should just need a those relatively small changes in rolepuning.pm

[13:36] <moritz> I see

[13:38] <moritz> r: say (role { }).HOW.^name

[13:38] <p6eval> rakudo 5481c6: OUTPUT¬´Perl6::Metamodel::ParametricRoleHOW‚ê§¬ª

[13:40] * moritz tests a patch

[13:40] <grondilu> is ':$.foo' a valid syntax for ':foo($.foo)' ?

[13:41] <moritz> yes

[13:41] <grondilu> ok

[13:42] <moritz> r: class A { method x() { 42 }; method y { :$.x } }; say A.y.perl

[13:42] <p6eval> rakudo 5481c6: OUTPUT¬´"x" => 42‚ê§¬ª

[13:42] <moritz> r: class A { method y { :$.^name } }; say A.y.perl

[13:42] <grondilu> thanks

[13:42] <p6eval> rakudo 5481c6: OUTPUT¬´===SORRY!===‚ê§Unable to parse expression in block; couldn't find final '}' at line 2, near ":$.^name }"‚ê§¬ª

[13:43] <moritz> std: class A { method y { :$.^name } }; say A.y.perl

[13:43] <p6eval> std a8bc48f: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Bogus statement at /tmp/gZ9uKVpr7I line 1:‚ê§------> [32mclass A { method y { [33m‚èè[31m:$.^name } }; say A.y.perl[0m‚ê§Parse failed‚ê§FAILED 00:00 43m‚ê§¬ª

[13:43] <moritz> std: class A { method x { $.^foo } }

[13:43] <p6eval> std a8bc48f: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Unsupported use of $. variable; in Perl 6 please use the filehandle's .line method at /tmp/l9yTEWBzYY line 1:‚ê§------> [32mclass A { method x { $.[33m‚èè[31m^foo } }[0m‚ê§Parse failed‚ê§FAILED 00:00 42m‚ê§¬ª

[13:47] <moritz> jnthn: the fix for nqp::can seems to work; spectesting now

[13:49] <moritz> or not :(

[13:49] <moritz> it works for ParametricRoleHOW, but not for ParametricRoleGroupHOW

[13:51] <moritz> because the latter doesn't do MethodContainer

[13:51] <not_gerd> the advent posts miss the Day XX prefix - should that be fixed (with or without breaking the URL?)

[13:51] <moritz> without breaking the URLs please :-)

[13:53] <not_gerd> will do

[14:08] <masak> g'day, #perl6

[14:08] <phenny> masak: 07:35Z <moritz> ask masak if his advent calendar post is ready for publishing

[14:08] <phenny> masak: 08:24Z <cedrvint> tell masak it seems auto-publishing has failed. The post is 8 hours late now, I publish it (and hope i'm not wrong)

[14:08] <masak> oh, you did the right thing.

[14:08] *** birdwindupbird left
[14:08] <masak> huh, I probably should've taken it from "draft" to "to be published" status or something.

[14:09] <masak> the GUI made it seem to me everything was in order. :/

[14:10] <pmurias> jnthn: would it be ok if I commited small expansions to the nqp test suit (which nqp-parrot passes without change) directly to the nqp repo? as updating an nqp fork is a bit annoying

[14:12] <masak> lol, "December". :)

[14:12] <masak> GlitchMr:

[14:12] <masak> GlitchMr++ # https://gist.github.com/4188536

[14:14] <GlitchMr> It's very simple wiki :-)

[14:14] <GlitchMr> But hey, it already "sorta" works

[14:14] <GlitchMr> http://www.perlcabal.org:1337/

[14:15] <masak> GlitchMr: have you considered what happens on line 60, when a revert results in a conflict?

[14:15] <GlitchMr> That was old code

[14:15] <GlitchMr> It was already fixed... sorta

[14:16] <pmurias> jnthn: is it correct if in QAST a variable is first declared as 'contextual' and then accessed as 'lexical'?

[14:16] <GlitchMr> https://gist.github.com/4188536

[14:16] *** cedrvint joined
[14:16] <masak> GlitchMr: that looks identical to me. what changed?

[14:16] <GlitchMr> huh?

[14:17] <GlitchMr> I'm confused too

[14:17] <GlitchMr> oh, right

[14:17] <GlitchMr> That paste was newer

[14:17] <GlitchMr> Nothing

[14:17] <GlitchMr> if $content ~~ /'<<<<<<< HEAD'/ {

[14:17] <masak> o.O

[14:17] <GlitchMr> I know, it's lame hack

[14:17] <masak> surely there's a better way...

[14:18] <GlitchMr> For now I wanted it to work.

[14:18] <masak> *nod*

[14:18] <GlitchMr> Before doing more complex stuff

[14:18] <masak> well, been there, done that.

[14:18] <masak> good luck, sur.

[14:18] <masak> sir*

[14:19] <cedrvint> hello #perl6, the post for day 3 needs proof-reading. Any volunteers?

[14:19] <masak> I'll gladly have a look.

[14:19] <masak> url?

[14:20] <cedrvint> masak: in wordpress, so you can make changes directly if you wish

[14:21] <masak> ah, ok.

[14:21] * masak looks

[14:23] <not_gerd> same for day 4. btw

[14:26] *** Moukeddar left
[14:27] <masak> cedrvint: nice post.

[14:27] <masak> cedrvint++

[14:28] <cedrvint> thanks :)

[14:34] <dalek> perl6-roast-data: ca91a62 | coke++ | / (3 files):

[14:34] <dalek> perl6-roast-data: today (automated commit)

[14:34] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/ca91a62305

[14:34] <dalek> perl6-roast-data: b8554ca | coke++ | / (4 files):

[14:34] <dalek> perl6-roast-data: today (automated commit)

[14:34] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/b8554ca78a

[14:35] <jnthn> pmurias: If the tests pass with nqp-parrot, go right ahead

[14:36] <jnthn> pmurias: Not sure if you can declare a contextual. But anyway, they are ordinary lexicals storage wise, it's just that we look them up dynamically. So no problems there.

[14:39] <pmurias> jnthn: may I have a nqp commit bit?

[14:40] *** smallfish joined
[14:40] *** smallfish left
[14:41] <jnthn> pmurias: done

[14:41] <pmurias> jnthn: in perl6 lexicals must be declared with is dynamic to be looked up with OUTER::

[14:41] <jnthn> pmurias: Is it "is context" these days?

[14:42] <jnthn> pmurias: is it true for OUTER:: as well as CALLER:: and DYNAMIC::?

[14:42] <jnthn> Rakudo doesn't enforce this just yet.

[14:47] *** am0c joined
[14:49] <pmurias> jnthn: is dynamic

[14:50] <pmurias> jnthn: I think it's not required for OUTER::

[14:51] <jnthn> ok

[14:51] <pmurias> jnthn: the reason I'm concerned with that is that contextuals carry a performance hit on javascript

[14:51] <pmurias> as I don't have direct control over the native lexical pads

[14:52] *** geekosaur left
[14:54] *** xilo_ joined
[14:57] <not_gerd> bye, #perl6

[14:57] *** not_gerd left
[14:57] *** geekosaur joined
[15:02] <felher> Is there a way to test perl6.org on my machine?

[15:02] <moritz> felher: cpanm App::mowyw; cd perl6.org; mowyw

[15:02] <felher> moritz: thanks :)

[15:03] <moritz> and then x-www-browser online/index.html

[15:03] <moritz> or set up a local apache installation with perl6.org/online as a separate virtual host

[15:04] <moritz> thre's also an app.psgi which I suppose also serves the files

[15:08] *** arlinius left
[15:09] *** PacoAir joined
[15:12] <GlitchMr> moritz: perl6.org uses URLs with / at beginning

[15:12] <GlitchMr> I usually use php -S localhost:8080 to test perl6.org

[15:14] <felher> moritz: works, thnx 

[15:15] <GlitchMr> Surprisingly, PHP builtin server works well when testing static websites.

[15:16] <GlitchMr> I think that httpd in busybox is fine to, but not sure

[15:16] <GlitchMr> Like "busybox httpd -p 8080", but it doesn't have nice debugging info :-(

[15:18] <GlitchMr> I think I've once used httpd in Busybox to serve webpages from Android

[15:26] <pmurias> jnthn: does the order in which we intermix named and flat named arguments matter?

[15:26] <pmurias> jnthn: as in foo(:a(1),|%b,:c(3),|%d)?

[15:30] <timotimo> enjoying the prel6advent so far :)

[15:30] <masak> \o/

[15:33] <GlitchMr> Just wondering, there is no difference between List.roll and List.pick when called without arguments.

[15:36] *** wamba joined
[15:36] *** rurban joined
[15:38] *** fgomez joined
[15:45] <felher> I find the Advent Calendar to be a really nice thing for people just starting with perl6. Maybe it's special enough to promote it on the main perl6.org site while it is running? (Something like http://fasel.nerd2nerd.org/perl6.png maybe?)

[15:46] <felher> GlitchMr: as far as i know, yes

[15:48] <GlitchMr> felher: I was considering putting it in "Documentation" section during Perl 6 Advent Calendar

[15:48] <GlitchMr> But it's already full of things

[15:48] <GlitchMr> But perhaps

[15:49] <GlitchMr> felher: I like it, but for me it looks like a banner, so not sure, really.

[15:49] <felher> GlitchMr: yeah, i though about putting in doc, too. But as you said: it's already full of thinks and may to easily overlooked there.

[15:50] <felher> GlitchMr: yeah. I really suck at designing :) It's mainly an attempt to get someone to do it right ;)

[15:50] <jnthn> pmurias: Certainly shouldn't in NQP

[15:51] <jnthn> pmurias: oh, wait...if there's duplicate ones...guess that gets interesting.

[15:51] *** cedrvint left
[15:51] <jnthn> In the absence of dupes...no difference.

[15:51] <GlitchMr> That's the problem with current Perl 6 design

[15:51] <masak> GlitchMr: there's no difference between .roll(1) or .pick(1), no. (or between the argumentless forms which default to this)

[15:51] <GlitchMr> It's full of links

[15:51] <GlitchMr> But really, I don't think I could think of anything else, as I suck at designing

[15:52] <masak> GlitchMr: pick is "selection without replacement", roll is "selection with replacement". but with only one trial, the difference isn't noticeable.

[15:52] <GlitchMr> felher: also, you have really wide screen :-).

[15:53] <felher> GlitchMr: right :)

[15:54] <GlitchMr> Perhaps I could redesign the Perl 6 page, but that could be difficult.

[15:56] <felher> I have no problem with the design of Perl6.org. I just wanted to place the Advent Calendar prominently :)

[15:57] <GlitchMr> Except if I would redesign the site, it would look as bad as http://dl.dropbox.com/u/63913412/perl6lol.png

[15:57] *** SamuraiJack left
[15:57] <GlitchMr> So I don't know

[15:57] <GlitchMr> I'm not designer.

[15:57] *** Kharec left
[15:58] <felher> :D

[15:58] *** SamuraiJack joined
[15:58] <GlitchMr> But perhaps I could try to come with some design

[15:59] <GlitchMr> It looks ugly for Poincare from GitHub

[15:59] <GlitchMr> But I don't like the design Poincare proposed - http://ge.tt/4ich05L/v/0

[16:00] <GlitchMr> Camelia will stay in my design, that's for sure. But as for other things...

[16:00] <GlitchMr> (I know that my design would have 0% chances of accepting it without Camelia)

[16:03] <SHODAN> just use sharper corners for the boxes, use less colors, make information and action boxes look the same and so on

[16:03] <SHODAN> that's the new thing

[16:04] <felher> Well, I won't get involved in any design issues. First of all my taste is quite different from most people and perl6.org should look like what most people like. Second of all I have dyschromatopsia, which makes me very bad at choosing colors :)

[16:19] *** cognominal left
[16:24] *** rurban left
[16:28] *** rurban joined
[16:28] *** cognominal joined
[16:35] <moritz> jnthn: https://gist.github.com/4189639 that's my attempt to fix nqp::can + role

[16:35] <moritz> (backtrace further down the page)

[16:36] <moritz> it seems to work fine with normal roles

[16:38] <moritz> but with CachedCompiledRegex I run into bootstrappy issues

[16:38] <moritz> currently it fails in dispatch:<.^>

[16:39] <moritz> and I can change infix:<does> not to use that, then it runs into some other problem (.attributes not being there, or something)

[16:40] <moritz> jnthn: is there a good way to apply the bootstrap chainsaw somewhere?

[16:42] <Ulti> has anyone tried Rakudo* under Windows 8 yet? I'm unfortunate enough to be in a position to

[16:43] <Ulti> heh well first up the .msi isnt signed so you have to click some tiny "more info" text in Windows8 to force the install :(

[16:44] <Ulti> cool it runs ok though

[16:45] <GlitchMr> Ok, so I've put perl6lol.png picture of "how bad this website would look if I would design it".

[16:46] <GlitchMr> Now time for serious "how bad this website would look if I would design it" screenshot.

[16:46] <GlitchMr> http://dl.dropbox.com/u/63913412/perl6lol2.png

[16:46] <GlitchMr> I know, it looks bad

[16:47] <GlitchMr> perl6lol.png was close enough ;-)

[16:48] <Ulti> GlitchMr: are you making a new site?

[16:48] <GlitchMr> I'm currently experimenting with trying to redesign it

[16:48] <GlitchMr> But probably old website will stay

[16:50] <Ulti> is it heresy to say that I like Sebastian Reidel's Perl6 logo? http://blog.kraih.com/a-logo-for-perl

[16:51] <dalek> rakudo-js: 96abb65 | (Pawe≈Ç Murias)++ | / (3 files):

[16:51] <dalek> rakudo-js: [nqp] pass test 41

[16:51] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/96abb65001

[16:51] <GlitchMr> I like it too

[16:51] <GlitchMr> But well, Larry Wall really wants Camelia

[16:52] <GlitchMr> At least for now, Camelia has to stay.

[16:52] <Ulti> even if you put Camelia ontop of the 6 I like the idea of the flight path being the 6

[16:54] <masak> me too.

[16:54] <masak> and sri's design looks more polished, indeed.

[16:54] <GlitchMr> I really would like Sebastian Reidel's Perl 6 logo

[16:54] <masak> though anyone who aims to improve on Camelia has to take into account that Camelia is explicitly *meant* not to look polished.

[16:55] <masak> it's meant to look like it's made by a young person.

[16:55] <GlitchMr> And I think it's used as cover of "Using Perl 6" book.

[16:55] <Ulti> well I didnt want to trample on camelia ;) but yeah amelia looks a bit more hipster-cool

[16:55] <GlitchMr> But, I think that Camelia is there to stay.

[16:55] <Ulti> rather than fisher price bold

[16:55] <Ulti> camelia will certainly get children into I guess

[16:56] <Ulti> *in too

[16:57] <GlitchMr> I really would like to use Riedel's logo.

[16:57] <masak> GlitchMr: by all means, use it all you like.

[16:57] <masak> you may want to ask sri, but apart from that... go right ahead.

[16:57] <GlitchMr> But I think it isn't negotable.

[16:58] <masak> *you* using it doesn't have to be negotiable.

[16:58] <masak> replacing Camelia as official mascot... is possible, but you'd have to fulfill a rather long list of criteria.

[16:58] <masak> see the end of https://raw.github.com/perl6/mu/master/misc/camelia.txt

[16:59] <GlitchMr> I think that Riedel's logo fits all of those.

[16:59] <GlitchMr> And it's already used as unofficial logo, even in the cover of "Using Perl 6" book

[17:00] <__sri> you can use the png version of amelia that has been released under CC-SA

[17:01] <__sri> i never actually released a svg version since the interest was so low

[17:01] <moritz> __sri: I think you provided me the SVG for the book cover

[17:01] <moritz> (though that's not the same as a public release)

[17:01] * __sri doesn't remember

[17:01] <masak> __sri: I dunno about low interest. people have been pretty receptive wrt your redesign.

[17:02] <__sri> but yea, i guess the book cover version should have a good license too

[17:02] <masak> all I ever hear are good things about it.

[17:02] <masak> you might be confusing "low interest" with "small community" :)

[17:02] <__sri> perhaps :)

[17:02] *** edsiper joined
[17:03] <edsiper> what means if($if =~ "something") ?

[17:03] <timotimo> call the function "if" with a match result, no?

[17:03] <edsiper> whats the difference between == and =~ ?

[17:04] <timotimo> hold on, isn't =~ like "use a regular expression to transform the name on the left"?

[17:04] <masak> edsiper: =~ is not valid in Perl 6.

[17:04] *** hash_table joined
[17:04] <timotimo> r: my $a = "hello world"; $a =~ s/world/blob/; say $a;

[17:04] <p6eval> rakudo 5481c6: OUTPUT¬´===SORRY!===‚ê§Unsupported use of =~ to do pattern matching;  in Perl 6 please use ~~‚ê§at /tmp/rb7Ryqwb0l:1‚ê§¬ª

[17:04] <masak> std: 2 =~ 2

[17:04] <p6eval> std a8bc48f: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Unsupported use of =~ to do pattern matching; in Perl 6 please use ~~ at /tmp/xT70gXtI60 line 1:‚ê§------> [32m2 =~[33m‚èè[31m 2[0m‚ê§Parse failed‚ê§FAILED 00:00 41m‚ê§¬ª

[17:04] <timotimo> r: my $a = "hello world"; $a ~~ s/world/blob/; say $a;

[17:04] <p6eval> rakudo 5481c6: OUTPUT¬´hello blob‚ê§¬ª

[17:04] <__sri> moritz: did i really give you an svg? i don't remember fixing the image for vector export :o

[17:04] <masak> edsiper: the channel is #perl6. note the '6' at the end.

[17:06] <edsiper> thanks timotimo 

[17:06] <timotimo> r: sub if($a, &blk) { &blk() if $a }; if("hello" ~~ /ll/, { say "whoa!" });

[17:06] <p6eval> rakudo 5481c6: OUTPUT¬´whoa!‚ê§¬ª

[17:06] *** spider-mario_ left
[17:06] <GlitchMr> http://dl.dropbox.com/u/63913412/itsactuallygood.png

[17:07] <__sri> eeeeep

[17:07] <GlitchMr> I've replaced (as a test) Larry's Camelia with Riedel's logo. It's good :-).

[17:07] *** spider-mario joined
[17:07] * __sri hates the purple one

[17:07] <timotimo> i think the page looks not minimal enough to be minimal-goodlooking, but not fleshed out enough to look good otherwise

[17:08] <GlitchMr> I'm still working on it

[17:08] <timotimo> that would explain it :)

[17:08] <__sri> page needs good typography

[17:08] <GlitchMr> Yeah

[17:08] <timotimo> the current perl6 page looks a bit strange with the out-of-place looking download button i find

[17:08] <GlitchMr> Perl 6 is sans-serif, so rest of page should be sans-serif too

[17:08] <au> Source Sans Pro ?

[17:08] <timotimo> is the page you're working on going to replace that page?

[17:08] <au> # https://typekit.com/fonts/source-sans-pro

[17:08] <__sri> Helvetica Neue imo

[17:09] <__sri> Source Sans Pro is not bad either

[17:10] <masak> "Brawny gods just flocked up to quiz and vex him" :)

[17:10] *** rindolf left
[17:12] <GlitchMr> http://dl.dropbox.com/u/63913412/sansserif.png

[17:12] <au> "The five boxing wizards jump quickly. --More--" #nethack

[17:12] <GlitchMr> It looks nicer with sans-serif font.

[17:12] <au> that's Ubuntu?

[17:12] <GlitchMr> Well, yes

[17:12] <GlitchMr> I haven't yet specified what font exactly

[17:13] <GlitchMr> oh wait, not

[17:13] <GlitchMr> no*

[17:13] <GlitchMr> It's DejaVu Sans.

[17:13] <au> aha. 

[17:14] <moritz> __sri: I have a usingperl6.svg, which is the whole cover including title and amelia

[17:14] * flussence suggests Oxygen Sans, just to be different

[17:16] <au> oxygen++ # just two weight-levels, but looks nice

[17:17] <GlitchMr> Well, actually I'm not designer. I just wanted to see how nicely perl6.org would look if I would "design" it.

[17:18] <masak> keep up the good work.

[17:19] <jnthn> moritz: I didn't mean to write a declares_method

[17:19] <GlitchMr> But i start to like my design

[17:19] <__sri> think i'll kill the deep purple version from the blog post... seeing the unfinished image used over and over makes me feel bad

[17:19] <jnthn> moritz: I meant to nqp::can($!pun, $name)

[17:20] <jnthn> moritz: The reason you get the error is because the role's method list doesn't have dispatch:<.^>

[17:20] <jnthn> moritz: It comes from Mu via Any, the default base class for the role.

[17:20] <jnthn> If you do the check in $!pun then you (a) have less code, and (b) it should work

[17:20] <jnthn> moritz: Sorry for unclear explanation of what to do.

[17:22] <GlitchMr> Still, I think that my project for perl6.org is better than https://www.djangoproject.com/...

[17:22] <GlitchMr> But I think that djangoproject.com is one of ugliest webpages on the internet

[17:22] <GlitchMr> (not counting Larry Wall's webpage)

[17:24] *** birdwindupbird joined
[17:28] <masak> GlitchMr: I see honesty is not one of the issues you're struggling with. :)

[17:28] <masak> s/one of the issues/an issue/

[17:31] *** rurban_ joined
[17:33] *** rurban left
[17:33] *** rurban_ is now known as rurban

[17:34] <GlitchMr> http://dl.dropbox.com/u/63913412/community.png

[17:37] <masak> GlitchMr: the page feels much less "alive" than the one we have now. if you see what I mean.

[17:38] <GlitchMr> hmmm, yeah

[17:38] <masak> it feels almost one-dimensional compared to the boxes on the current perl6.org page.

[17:38] <GlitchMr> that's good argument :-)

[17:38] <masak> I think there is some wisdom in presenting options to people in big noticeable boxes.

[17:39] <masak> you're presenting them as headings. might as well send them a Word document.

[17:39] <GlitchMr> Also http://dl.dropbox.com/u/63913412/mobile1.png and http://dl.dropbox.com/u/63913412/mobile2.png

[17:40] <GlitchMr> But well, it doesn't matter much

[17:40] <GlitchMr> (well, most of users will use desktop computer)

[17:40] <GlitchMr> s)

[17:40] <masak> GlitchMr: compare, for example, github.com when you're signed out. big blue "Plans, Pricing and Signup" button front and center. below that, four nice *areas* side-by-side about good things about GitHub.

[17:41] <masak> or take http://37signals.com/ as an example. also very two-dimensional, with things side-by-side.

[17:41] <masak> that just seems to be good use of space on a page, and makes the page more interesting.

[17:41] <GlitchMr> Designing is difficult, I know

[17:41] <masak> yes, but that was not my point. :)

[17:42] <masak> I don't know how these two examples look on a mobile browser. would be interesting to find out.

[17:42] *** cognominal left
[17:43] <GlitchMr> Well, my mobile phone has very small screen size

[17:45] <__sri> http://blog.kraih.com/a-logo-for-perl # the deep purple butterfly has been replaced

[17:45] <__sri> GlitchMr: please use the orange one :)

[17:45] <GlitchMr> Thanks

[17:45] <GlitchMr> Going to change it now

[17:46] <au> for small mobile screens, starting from http://foundation.zurb.com/ or http://twitter.github.com/bootstrap/ could be easier than hand-coding responsive styles

[17:46] <birdwindupbird> pwd

[17:48] <GlitchMr> http://dl.dropbox.com/u/63913412/yellow.png

[17:49] <GlitchMr> I'll start a new branch when every page will be ported to this layout

[17:51] <masak> birdwindupbird: /home/birdwindupbird

[17:55] * moritz agrees

[17:56] <moritz> erm, replying to stale chat :(

[17:56] <masak> :)

[17:57] <masak> irssi should be more conspicuous about that scenario.

[17:59] <FROGGS> does somebody know a tutorial about grammars or so? I'd like to parse the module strings: https://gist.github.com/4190173

[17:59] <moritz> FROGGS: the Using Perl 6 book has a chapter on regexes and one on grammars

[18:01] <FROGGS> moritz: thanks, will read now ;o)

[18:02] *** japhb joined
[18:02] <japhb> Uggh.

[18:02] <phenny> japhb: 02:17Z <sorear> tell japhb I have a theory... how does $acc ~= ($x ~ $y); do in rakudo, where $x and $y are loop-invariant but not "constant"s?

[18:02] <phenny> japhb: 07:47Z <sorear> tell japhb 'for 1..20 { }' before: 757.56 ¬± 26.546 ¬µs now: 53.345 ¬± 1.8765 ¬µs

[18:02] * masak submitted a bug report to Github about a corner case when editing gists :)

[18:02] <phenny> japhb: 07:51Z <sorear> tell japhb I'm shelving this for now but there's still much work to be done. [ loop (my $i = 1; $i <= 20; $i++) { } ] = 10.730 ¬± 0.0305 ¬µs; [ my $i = -20; Nil while ++$i ] = 4.1028 ¬± 0.1603 ¬µs

[18:02] <phenny> japhb: 07:58Z <azawawi> tell japhb i'll send pull requests with any performance bottlenecks I encounter. Thanks for making and pointing out your cool perl6-bench project. I will check it out later today.

[18:03] <japhb> Woah, clearly I have some backlogging to do.

[18:03] * japhb is digging out of home network unhappiness because of power outage that outlasted UPS.

[18:04] <FROGGS> japhb: welcome back then

[18:05] <japhb> Hi FROGGS!  How are things in your part of the world?

[18:05] <FROGGS> japhb: well, good actually

[18:05] <japhb> That's good to hear.

[18:05] <FROGGS> japhb: have two weeks off now, trying to parse the examples in S11/versioning

[18:06] <japhb> Ah nice!

[18:06] <FROGGS> after that, I want to provide a "test suite" which somebody can test her/his implementation

[18:06] <japhb> Any big ideas since I disappeared?

[18:06] <FROGGS> (and I want to start my own implementation)

[18:06] <japhb> Good ideas, both.

[18:07] <FROGGS> some rumor, but nothing concrete

[18:07] <FROGGS> it is always the same back and forth

[18:07] <japhb> Do tell ...

[18:08] <japhb> .oO( Judging by my repo pulls, it's been an active 2-3 days.  Especially Perlito5, wow. )

[18:09] <dalek> rakudo/nom: e2f2dc4 | moritz++ | src/Perl6/Metamodel/RolePunning.pm:

[18:09] <dalek> rakudo/nom: fix nqp::can(role { }, "anything"). jnthn++

[18:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e2f2dc436d

[18:11] <FROGGS> I've forgotten who was it last night, but it was almost the same viewpoint like yours, but he didnt cared <auth>, just <ver>, IIRC

[18:12] <FROGGS> and there is another thing we have to care: there if a from:<> tag that allows one to import Perl 5 stuff for example

[18:13] <FROGGS> don't know how this could work, I guess we just care about auth+ver and storage right now

[18:13] <japhb> Yeah, but then I'm not sure any of the other stuff matters.  With :from<> I think we essentially have to pass a name string and a capture to the proxy for the foreign module system

[18:15] <FROGGS> well, Perl 5 modules have a version, but as long as you use Perl 5's cpan clients to install these modules, you dont have an auth

[18:16] <FROGGS> IMO you would have to use panda for this stuff too, so that these modules get installed in a nown path

[18:16] <japhb> Well, Perl 5 module version handling is done with magic; you would generally have to just pass that through to the proxy loader.

[18:16] <FROGGS> and that XS modules are compiled the "right way"

[18:17] <japhb> (not technically magic in the perl5 guts sense, I mean magic as in "funky logic involving prestidigitation and gnomes")

[18:18] <japhb> Perl 5 modules should be treated as Perl 5 modules; not Perl 5 modules that got eaten by the Perl 6 beast.

[18:27] <tadzik> good evening #perl6

[18:28] <masak> tadzik! \o/

[18:28] <tadzik> \o/

[18:30] <FROGGS> hi tadzik 

[18:32] <japhb> tadzik, masak, hi!

[18:39] *** rindolf joined
[18:44] <japhb> phenny, ask azawawi Would you mind using a different pastebin than the one at paste.debian.net (or configuring it to keep the pastes for longer), because they are expiring quite quickly (sometimes faster than I can backlog if I've been AFK for a couple days)?

[18:44] <phenny> japhb: I'll pass that on when azawawi is around.

[18:47] *** ifim joined
[18:48] <GlitchMr> I've done an experiment about parsing archives: http://dl.dropbox.com/u/63913412/parsearchives.png

[18:48] <GlitchMr> Currently, they aren't feeling like part of the website.

[18:49] <masak> gists are so superior as a pastebin, I don't see why more aren't using them.

[18:50] <GlitchMr> Perhaps s/This file/This page/...

[18:50] <GlitchMr> "file" is implementation detail.

[18:50] <japhb> masak, I very much agree

[18:50] <GlitchMr> masak: I agree too

[18:52] <tadzik> GlitchMr: this is very nice

[18:52] *** wooden joined
[18:52] *** wooden left
[18:52] *** wooden joined
[18:53] *** wooden_ left
[18:57] <GlitchMr> ok, soon I will upload the new design branch

[19:12] <moritz> 32 test files failing in the qast-sink-1 branch

[19:12] <moritz> of 717 files in total

[19:13] <sorear> good * #perl6

[19:13] <moritz> \o sorear 

[19:13] <sorear> au!

[19:14] <sorear> o/ moritz 

[19:15] <GlitchMr> ok... here goes

[19:15] <dalek> perl6.org/new-design: 173c755 | GlitchMr++ | / (613 files):

[19:15] <dalek> perl6.org/new-design: New Perl 6 layout

[19:15] <dalek> perl6.org/new-design: review: https://github.com/perl6/perl6.org/commit/173c75510b

[19:22] <dalek> perl6.org/new-design: 7d2139d | GlitchMr++ | source/style.css:

[19:22] <dalek> perl6.org/new-design: Add updated styles I forgot previous time.

[19:22] <dalek> perl6.org/new-design: review: https://github.com/perl6/perl6.org/commit/7d2139d738

[19:22] <au> o/ sorear

[19:23] <masak> sorear! \o/

[19:23] <GlitchMr> hi, sorear 

[19:25] <sorear> japhb: ping

[19:25] <sorear> o/ masak, GlitchMr

[19:26] <sorear> japhb: when you have the tuits, I'd appreciate an update on standing now that for 1..20 {} is 15 times faster; also smaller gains for ~

[19:28] <moritz> r: my $x := 1; say do while $x { $x-- }

[19:28] <p6eval> rakudo e2f2dc: OUTPUT¬´Cannot assign to a non-container‚ê§  in sub postfix:<--> at src/gen/CORE.setting:3082‚ê§  in code  at /tmp/G6qMBsShlJ:1‚ê§  in block  at /tmp/G6qMBsShlJ:1‚ê§‚ê§¬ª

[19:28] <moritz> r: my $x = 1; say do while $x { $x-- }

[19:28] <p6eval> rakudo e2f2dc: OUTPUT¬´0‚ê§¬ª

[19:31] <GlitchMr> http://dl.dropbox.com/u/63913412/randomcode.png

[19:32] <GlitchMr> Now main page has random example code

[19:32] <moritz> I hope it doesn't rely on javascript

[19:32] <GlitchMr> Nope

[19:32] <GlitchMr> Actually it already exists

[19:32] <moritz> \o/

[19:32] <GlitchMr> But

[19:32] <GlitchMr> It was unused

[19:32] <moritz> i know

[19:32] <moritz> I implemented it, and masak promised to incorporate it

[19:32] <GlitchMr> http://perl6.org/TEMP-example.html

[19:34] <dalek> perl6.org/new-design: 0df6ae4 | GlitchMr++ | source/ (3 files):

[19:34] <dalek> perl6.org/new-design: Random code

[19:34] <dalek> perl6.org/new-design: review: https://github.com/perl6/perl6.org/commit/0df6ae4516

[19:37] *** RandalSchwartz joined
[19:37] *** RandalSchwartz left
[19:37] *** RandalSchwartz joined
[19:46] <[Coke]> GlitchMr: is your new design checked out somewhere we can poke at?

[19:47] <GlitchMr> Not really

[19:47] <GlitchMr> If you want, download new-design branch

[19:47] <GlitchMr> But I haven't set site (aside of localhost) to check it

[19:47] <GlitchMr> But, ok, I will put it on my feather account if you want

[19:48] <GlitchMr> or not

[19:48] <GlitchMr> it depends on being on root of the website :-(...

[19:48] <[Coke]> eh. I'm lazy. easy to click on a URL.

[19:48] <[Coke]> ah. no worries, then. I'm actually working for $DAYJOB atm anyway. :P

[19:50] <dalek> perl6.org/new-design: 555c1b7 | GlitchMr++ | source/archive/ (78 files):

[19:50] <dalek> perl6.org/new-design: Fix Unicode

[19:50] <dalek> perl6.org/new-design: review: https://github.com/perl6/perl6.org/commit/555c1b702b

[19:51] <[Coke]> GlitchMr: looks to me like you broke unicode.

[19:51] <[Coke]> (clicking on that link and looking on github.

[19:52] <GlitchMr> It's because GitHub assumes ISO-8859-1 by default

[19:52] <GlitchMr> (or something)

[19:53] <GlitchMr> Or rather, the diff doesn't contain valid UTF-8 (because it contains removed ISO-8859-1), so GitHub assumes ISO-8859-1.

[19:53] <[Coke]> hokay.

[19:53] <GlitchMr>  If you will view any of those files directly, everything will be correct

[19:58] <dalek> perl6.org/new-design: 88851a9 | GlitchMr++ | / (2 files):

[19:58] <dalek> perl6.org/new-design: Restore online directory

[19:58] <dalek> perl6.org/new-design: review: https://github.com/perl6/perl6.org/commit/88851a9e32

[20:00] *** rurban left
[20:10] *** SamuraiJack left
[20:11] <moritz> r: say (1, 2).map(*+1).WHAT

[20:11] <p6eval> rakudo e2f2dc: OUTPUT¬´List()‚ê§¬ª

[20:12] <pmurias> re redesign of perl6 wouldn't just replacing the ugly download button make it look much better?

[20:12] <masak> "...is not delivering the quantity of hedons per second I have come to expect..." -- today's measurement unit: hedons per second. http://hpmor.com/notes/progress-12-12-0/

[20:13] <masak> pmurias: that may help a lot, yes.

[20:13] <dalek> perl6.org/new-design: da496c9 | GlitchMr++ | source/archive/ (18 files):

[20:13] <dalek> perl6.org/new-design: More cleaning

[20:13] <dalek> perl6.org/new-design: review: https://github.com/perl6/perl6.org/commit/da496c91b4

[20:14] <masak> though I must say that reading Charles Stross's work tends to be fun in the way lesswrong feels he's missing.

[20:15] <masak> ditto Neal Stephenson.

[20:22] *** kaare_ joined
[20:22] <[Coke]> I would be happy with this button: http://twitter.github.com/bootstrap/base-css.html#buttons

[20:22] <dalek> perl6.org/new-design: 43b14a4 | GlitchMr++ | source/archive/rfc/183.html:

[20:22] <dalek> perl6.org/new-design: Fix RFC 183 title

[20:22] <dalek> perl6.org/new-design: review: https://github.com/perl6/perl6.org/commit/43b14a490c

[20:23] <dalek> perl6.org/new-design: f400a18 | GlitchMr++ | source/archive/rfc/183.html:

[20:23] <dalek> perl6.org/new-design: Fix RFC 183 title again

[20:23] <dalek> perl6.org/new-design: review: https://github.com/perl6/perl6.org/commit/f400a18cf9

[20:23] <moritz> phenny: de en "lispeln"?

[20:23] <phenny> moritz: "lisp" (de to en, translate.google.com)

[20:24] <moritz> somehow that meaning of "lisp" was never obvious to me :-)

[20:24] *** kaare__ left
[20:24] <diakopter> GlitchMr: I think we need to keep the spokesbug as TimToady rendered it

[20:26] <moritz> I don't think so

[20:27] <moritz> TimToady has mentioned that it was intended to decolorize a bit

[20:27] <diakopter> I'm pretty sure he meant on pages other than perl6.org

[20:28] <moritz> let's just ask him, shall we?

[20:28] <diakopter> :)

[20:28] <GlitchMr> Well, I can restore Camelia if Larry Wall won't agree.

[20:29] <GlitchMr> It is just a branch currently.

[20:29] <GlitchMr> It's not actual perl6.org, just a design I'm making.

[20:32] <GlitchMr> Personally, I would like to see Riedel's logo. Larry Wall's logo may be cute, but I think it could hurt "first-impression".

[20:33] <GlitchMr> People even think it's a bee - https://en.wikipedia.org/wiki/Talk:Perl_6#Camelia.3F

[20:37] *** Chillance joined
[20:39] <masak> "people even think it's a bee" seems a tame argument next to the things detractors usually say about Camelia.

[20:39] <dalek> perl6.org/new-design: 8089137 | GlitchMr++ | source/favicon.ico:

[20:39] <dalek> perl6.org/new-design: New favicon

[20:39] <dalek> perl6.org/new-design: review: https://github.com/perl6/perl6.org/commit/8089137a5c

[20:39] <moritz> it's a "somebody is WRONG on the internet" kind of argument :-)

[20:40] <tadzik> (:

[20:40] <GlitchMr> http://xkcd.com/386/

[20:40] <diakopter> masak: follow the bee link (if you haven't); it's not just about "bee"

[20:41] <masak> diakopter: url?

[20:41] <diakopter> the one GlitchMr mentioned on wikipedia

[20:41] <masak> or do you simply mean the talk page? I'm reading it.

[20:41] <masak> "If you worry that Perl isn't wearing a tie, you're not the person Perl is trying to impress." -- from that talk page.

[20:41] *** rurban joined
[20:43] *** rurban left
[20:47] <diakopter> masak: yes, the Camelia section of the talk page

[20:48] <masak> it seems evenly divided between people for and people against.

[20:48] <masak> much like most of the Camelia discourse in other places.

[20:56] *** Chillance left
[20:57] *** birdwindupbird left
[20:57] *** Chillance joined
[20:59] <moritz> more fun from them sink department:

[20:59] <moritz> %a = 1, 2;

[20:59] <moritz> compiles to  %a.STORE(1, 2)

[20:59] <GlitchMr> Please don't merge my new layout yet as main page isn't ready yet ;-). Also, bye.

[21:00] <moritz> so that's a methodcall, and thus currently we call .sink on the result

[21:00] <moritz> erm, not a problem for hashes

[21:00] <moritz> but a problem for lists

[21:02] *** GlitchMr left
[21:10] *** kcwu left
[21:12] *** snearch joined
[21:13] <jnthn> moritz: Hm, ouch...

[21:13] <jnthn> moritz: Special-casing the name STORE is one option... :0

[21:13] <jnthn> *:)

[21:13] <japhb> sorear, sorry, I've got a lot going on today.  As soon as I can spare a few minutes, I'll toss them in the direction of perl6-bench.  :-)

[21:13] <japhb> afk again &

[21:14] <moritz> jnthn: yes, I'm just introducing $past<nosink>

[21:14] <dalek> rakudo/qast-sink-1: 1c84805 | moritz++ | src/Perl6/Metamodel/RolePunning.pm:

[21:14] <dalek> rakudo/qast-sink-1: fix nqp::can(role { }, "anything"). jnthn++

[21:14] <dalek> rakudo/qast-sink-1: review: https://github.com/rakudo/rakudo/commit/1c8480581f

[21:14] <dalek> rakudo/qast-sink-1: 17bcd96 | moritz++ | src/core/Parameter.pm:

[21:14] <dalek> rakudo/qast-sink-1: switch to real constants in Parameter.pm

[21:14] <dalek> rakudo/qast-sink-1: review: https://github.com/rakudo/rakudo/commit/17bcd96493

[21:14] <dalek> rakudo/qast-sink-1: 36e4477 | moritz++ | src/Perl6/Actions.pm:

[21:14] <dalek> rakudo/qast-sink-1: do not sink list assignment

[21:14] <dalek> rakudo/qast-sink-1: review: https://github.com/rakudo/rakudo/commit/36e4477e7c

[21:17] <moritz> ... and now everything segfaults

[21:17] <moritz> that is, ./perl6 -e '' segfaults

[21:18] * moritz calls it a day

[21:18] <jnthn> moritz++ # sink hacking

[21:18] <jnthn> moritz: I should have tuits to help out with it a bit this week, if you like.

[21:19] *** snearch left
[21:19] <moritz> jnthn: that would be greatly appeciated

[21:32] <rindolf> Hi all.

[21:34] *** colomon left
[21:36] <lue> hello o/

[21:36] <phenny> lue: 09:39Z <jnthn> tell lue Well, they are installed in some %?LANG but they will suffer the "not under Mu" issue. And I need to do some MOP stuff before turning to that.

[21:36] <phenny> lue: 09:40Z <jnthn> tell lue but I think at a first guess $~MAIN would desugar to %?LANG<MAIN>

[21:37] <lue> Ah. I had a feeling it was more complicated than "Oh, just return the hash value from Actions.pm" or something like that :) .

[21:38] *** skids left
[21:40] *** Kharec joined
[21:42] *** kaare_ left
[21:43] <lue> the logo on kraih.com (linked from the talk page) feels too corporate for me :P

[21:43] *** sevin joined
[21:46] * __sri starts working on a version of the amelia logo with suit and briefcase

[21:48] <lue> .oO(It's a terrific logo, but it just doesn't feel right for P6.)

[21:56] *** bruges_ joined
[21:57] *** skids joined
[21:57] *** bruges left
[21:59] *** kurahaupo joined
[22:01] *** cognominal joined
[22:23] *** Kharec left
[22:34] <__sri> amelia with pinstripe wings flying out of a big briefcase is actually not a bad logo for a perl 6 enterprise edition :)

[22:35] *** spider-mario left
[22:38] *** colomon joined
[22:45] *** rurban joined
[22:46] *** rurban left
[22:56] *** rindolf left
[23:05] *** MayDaniel left
[23:11] *** Targen left
[23:20] *** cognominal left
[23:20] *** cognominal_ joined
[23:26] *** sevin left
[23:33] *** cognominal_ left
[23:34] *** cognominal_ joined
[23:38] *** sevin joined
[23:46] <dalek> rakudo-js: cbdb432 | (Pawe≈Ç Murias)++ | / (3 files):

[23:46] <dalek> rakudo-js: [nqp] pass test 34

[23:46] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/cbdb432684

[23:52] *** popl joined
[23:55] *** lue left
