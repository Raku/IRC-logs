[00:00] <[Coke]> well, it's worth about 1K spectests to pugs if you figure it out. ;)

[00:02] *** snearch left
[00:07] *** katernya left
[00:10] <[Coke]> pugs: say Pair

[00:10] <p6eval> pugs b927740: OUTPUT«Pair␤»

[00:29] *** MayDaniel left
[00:29] *** lutok left
[00:43] *** packetknife joined
[00:47] *** noteventime left
[00:47] *** packetknife left
[00:48] <TimToady> I get a 404 on that link

[00:48] <TimToady> oh, I see the fix

[01:04] <TimToady> [Coke]: I smell an extra Rat: yer Num group takes args (Rat) (Num) (Rat); the first one should be (Int) instead of (Rat)

[01:05] *** colomon joined
[01:07] *** PacoAir_ joined
[01:11] *** PacoAir left
[01:11] *** PacoAir_ is now known as PacoAir

[01:12] <geekosaur> aaaaa

[01:12] <geekosaur> why did pugs build just reinstall network?  I like my ghc working...

[01:13] *** xinming left
[01:13] *** xinming joined
[01:17] <[Coke]> TimToady: checking...

[01:18] <TimToady> line 1898 or so

[01:18] <dalek> roast: 9dac81d | coke++ | S (9 files):

[01:18] <dalek> roast: pugs fudge

[01:18] <dalek> roast: review: https://github.com/perl6/roast/commit/9dac81d151

[01:18] <dalek> Pugs.hs: eb06f3b | coke++ | t/spectest.data:

[01:18] <dalek> Pugs.hs: run fudged tests

[01:18] <dalek> Pugs.hs: review: https://github.com/perl6/Pugs.hs/commit/eb06f3b133

[01:20] <moritz> \o

[01:20] * moritz can't sleep

[01:20] <[Coke]> TimToady: good catch. I still get the same error, though.

[01:21] <moritz> had a glass of coke yesterday night -- didn't think it'd affect me that much :/

[01:21] *** Chillance left
[01:21] <[Coke]> updated the .diff

[01:23] * [Coke] is pretty powerful

[01:23] <moritz> cross-atlantic insomnia

[01:24] <colomon> o/

[01:24] <TimToady> I wonder if you're fighting the fact that type names are also op0 if there are no parens

[01:25] <TimToady> that's why we generally think of it as Type (0-ary) returning an object that responds to .()

[01:25] *** havenn left
[01:25] <TimToady> so if the .() isn't called it is just the type name

[01:27] <TimToady> pugs: say Int

[01:27] <p6eval> pugs b927740: OUTPUT«Int␤»

[01:27] *** karamorf left
[01:27] <TimToady> pugs: say Int.(4.2)

[01:27] <p6eval> pugs b927740: OUTPUT«*** Must only use named arguments to new() constructor␤    Be sure to use bareword keys.␤    at /tmp/Gy2t5_TOMK line 1, column 5 - line 2, column 1␤»

[01:27] <TimToady> o_O

[01:28] <TimToady> pugs: my $type = Int; say $type(4.2)

[01:28] <p6eval> pugs b927740: OUTPUT«*** Must only use named arguments to new() constructor␤    Be sure to use bareword keys.␤    at /tmp/xknJikVhXn line 1, column 21 - line 2, column 1␤»

[01:28] *** am0c joined
[01:28] <TimToady> nom: my $type = Int; say $type(4.2)

[01:28] <p6eval> nom 4bdb94: OUTPUT«4␤»

[01:28] <TimToady> niecza: my $type = Int; say $type(4.2)

[01:28] <p6eval> niecza v15-2-gd19c478: OUTPUT«Unhandled exception: Unable to resolve method postcircumfix:<( )> in class Int␤  at /tmp/6wQbqYA0uq line 1 (mainline @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3838 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3839 (module-CORE @ 65)…

[01:28] <TimToady> nom++

[01:29] *** wolfman2000 joined
[01:29] <TimToady> moritz: are nom: and rakudo: still the same thing?

[01:30] <moritz> TimToady: yes

[01:32] <moritz> I've thought about adding additional aliases

[01:32] <moritz> and have both 'nom' and 'r' mean 'rakudo' (and report as "rakudo")

[01:32] <[Coke]> mmm, reporting the unaliased name++

[01:33] <moritz> and 'n' and 'niecza' alias to the the same thing, and reporting as niecza

[01:33] <[Coke]> I'm I'm fighting that, but have no idea how to win. ;)

[01:36] <[Coke]> (back to TimToady)

[01:38] * [Coke] kicks off a specomparun

[01:38] *** havenn joined
[01:43] <dalek> evalbot: 07fa2a2 | moritz++ | evalbot.pl:

[01:43] <dalek> evalbot: implement aliasing mechanism (untested)

[01:43] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/07fa2a21cc

[01:43] <moritz> evalbot control restart

[01:43] *** p6eval left
[01:43] *** p6eval joined
[01:43] *** ChanServ sets mode: +v p6eval

[01:44] <moritz> n: say 'OH HAI'

[01:44] <moritz> hey, don't be that slow!

[01:44] <p6eval> niecza v15-2-gd19c478: OUTPUT«OH HAI␤»

[01:45] <moritz> it seems that the first execution (or just niecza execution) after a restart is terribly slow

[01:45] <moritz> n: say 'again'

[01:45] <p6eval> niecza v15-2-gd19c478: OUTPUT«again␤»

[01:45] <moritz> much faster

[01:45] <moritz> r: say "It's me"

[01:45] <p6eval> rakudo 4bdb94: OUTPUT«It's me␤»

[01:45] <moritz> nom: say "and me too!"

[01:45] <p6eval> rakudo 4bdb94: OUTPUT«and me too!␤»

[01:47] <moritz> nqp: say("just checkin'")

[01:47] <p6eval> nqp: OUTPUT«just checkin'␤»

[01:58] *** sftp left
[02:01] *** sftp joined
[02:04] <colomon> niecza: constant fib := 0, 1, *+* ... *;

[02:04] <p6eval> niecza v15-2-gd19c478: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Cannot use bind operator with this LHS at /tmp/yW20xgjtEX line 1:␤------> [32mconstant fib := 0, 1, *+* ... *[33m⏏[31m;[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1362 (die …

[02:04] <colomon> niecza: constant fib = 0, 1, *+* ... *;

[02:04] <p6eval> niecza v15-2-gd19c478:  ( no output )

[02:05] <colomon> niecza: constant fib = 0, 1, *+* ... *; say fib[100]

[02:05] <p6eval> niecza v15-2-gd19c478: OUTPUT«Unhandled exception: System.NullReferenceException: Object reference not set to an instance of an object␤  at Niecza.Kernel.ToComposable (Niecza.STable arg, Niecza.STable cls) [0x00000] in <filename unknown>:0 ␤  at Niecza.Kernel.ApplyRoleToClass (Niecza.ST…

[02:08] <moritz> r: constant fib = 0, 1, *+* ... *; say fib[100]

[02:08] <p6eval> rakudo 4bdb94: OUTPUT«354224848179261915075␤»

[02:10] *** sftp left
[02:13] *** lutok joined
[02:14] *** aindilis left
[02:15] <dalek> roast: 13da829 | moritz++ | S12-class/inheritance.t:

[02:15] <dalek> roast: RT #82814 unspeakable evil with constructors and nextsame

[02:15] <dalek> roast: review: https://github.com/perl6/roast/commit/13da829571

[02:16] <dalek> roast: 4b53779 | (Solomon Foster)++ | S04-declarations/constant.t:

[02:16] <dalek> roast: Additional fudging for niecza.

[02:16] <dalek> roast: review: https://github.com/perl6/roast/commit/4b53779677

[02:18] *** PacoAir left
[02:19] *** aindilis joined
[02:20] <dalek> roast: bea87e2 | moritz++ | S32-exceptions/misc.t:

[02:20] <dalek> roast: RT #85942

[02:20] <dalek> roast: review: https://github.com/perl6/roast/commit/bea87e2b43

[02:21] <dalek> roast: 9a6c674 | moritz++ | S02-types/capture.t:

[02:21] <dalek> roast: RT #89766, \()[0]

[02:21] <dalek> roast: review: https://github.com/perl6/roast/commit/9a6c6742d5

[02:28] <[Coke]> # 03/03/2012 - rakudo++ ; niecza (96.29%); pugs (30.33%)

[02:28] <[Coke]> "niecza",     20270,     8,   747,  1530, 22555, 23755

[02:28] <[Coke]> "pugs"  ,      6386,    17,  2793,  1586, 10781, 23564

[02:28] <[Coke]> "rakudo",     21049,    30,   621,  1890, 23590, 24022

[02:29] <colomon> woah

[02:29] <[Coke]> you're falling behind!

[02:29] <colomon> go away for a few days, and look what happens....

[02:31] *** sftp joined
[02:38] *** havenn left
[02:40] <[Coke]> n: say 21049*.3333-6386

[02:40] <p6eval> niecza v15-2-gd19c478: OUTPUT«629.6317␤»

[02:51] *** lutok left
[03:13] *** orafu left
[03:13] *** orafu joined
[03:17] *** am0c left
[03:26] *** NamelessTee left
[03:31] <sorear> good * #perl6

[03:32] *** whiteknight left
[03:33] *** lutok joined
[03:34] <[Coke]> pugs: say 1..5

[03:34] <p6eval> pugs b927740: OUTPUT«12345␤»

[03:35] <[Coke]> pugs: say 111 ~~ 1..5

[03:35] <p6eval> pugs b927740: OUTPUT«␤»

[03:35] <[Coke]> pugs: say 3 ~~ 1..5

[03:35] <p6eval> pugs b927740: OUTPUT«␤»

[03:38] <sorear> today: would have gone better if my computer hadn't resisted booting for so long :|

[03:39] *** kmwallio left
[03:39] *** sisar left
[03:40] <sorear> TimToady: i've added you to The List

[03:40] <TimToady> [Coke]: pugs is from before we had ..., so .. was not considered an interval

[03:40] <TimToady> sorear: thanks

[03:40] <dalek> niecza: 1c4b5a7 | larry++ | lib/NieczaCLR.cs:

[03:40] <dalek> niecza: Also improve niecza's multi call messages

[03:40] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1c4b5a70d0

[03:40] <sorear> at least now I don't have to worry about y'all thinking I'm dead ;)

[03:41] <[Coke]> TimToady: mmm. just seeing if it's worth running that test file; nope.

[03:41] <TimToady> sorear: we're assuming either you had a *long* power failure, or you're assiduously applying yourself to your studies

[03:41] <TimToady> if you want us to think you're dead, just let us know :)

[03:42] <sorear> :p

[03:42] <sorear> there was a #p5p person from Buenos Aires who went incommuncado at the time of the most recent calamity, and only resurfaced yesterday, was a bit worrying

[03:43] <TimToady> perl6: constant @fib = 0, 1, *+* ... *; say @fib[100]

[03:43] <p6eval> pugs b927740: OUTPUT«*** ␤    Unexpected "@fib"␤    expecting "=", context, ":" or "("␤    at /tmp/jbiIkNN6l_ line 1, column 10␤»

[03:43] <p6eval> ..rakudo 4bdb94, niecza v15-2-gd19c478: OUTPUT«354224848179261915075␤»

[03:43] <TimToady> yes, niecza handles it with the sigil, just not without

[03:43] <TimToady> perl6: constant \fib = 0, 1, *+* ... *; say fib[100]

[03:43] <p6eval> rakudo 4bdb94: OUTPUT«===SORRY!===␤Missing initializer on constant declaration␤at /tmp/R6nakjj5NN:1␤»

[03:43] <p6eval> ..niecza v15-2-gd19c478: OUTPUT«Unhandled exception: System.NullReferenceException: Object reference not set to an instance of an object␤  at Niecza.Kernel.ToComposable (Niecza.STable arg, Niecza.STable cls) [0x00000] in <filename unknown>:0 ␤  at Niecza.Kernel.ApplyRoleToClass (Niecza.ST…

[03:43] <p6eval> ..pugs b927740: OUTPUT«*** ␤    Unexpected "\\"␤    expecting "=", formal parameter, context, ":" or "("␤    at /tmp/rbixz362ZU line 1, column 10␤»

[03:44] <sorear> interesting failure mode

[03:44] <dalek> roast: 246ed8d | coke++ | S (10 files):

[03:44] <dalek> roast: pugs fudges

[03:44] <dalek> roast: review: https://github.com/perl6/roast/commit/246ed8d50b

[03:44] <dalek> Pugs.hs: 485869d | coke++ | t/spectest.data:

[03:44] <dalek> Pugs.hs: run fudged tests

[03:44] <dalek> Pugs.hs: review: https://github.com/perl6/Pugs.hs/commit/485869db82

[03:44] <sorear> niecza's handling of list constants is a giant pile of crocks with no underlying semantic model, so it's suprising it ever works at all

[03:56] *** lestrrat left
[03:57] *** lestrrat joined
[04:00] <[Coke]> pugs: use Test; say eval_lives_ok()'

[04:00] <p6eval> pugs b927740: OUTPUT«pugs: *** Unsafe function 'use' called under safe mode␤    at /tmp/RP5j12Bcxa line 1, column 1␤»

[04:00] <[Coke]> pugs: use Test; say eval_lives_ok();

[04:00] <p6eval> pugs b927740: OUTPUT«pugs: *** Unsafe function 'use' called under safe mode␤    at /tmp/us0aH1_2ga line 1, column 1␤»

[04:04] *** lutok left
[04:23] *** tokuhirom joined
[04:27] *** Radvendii joined
[04:27] <Radvendii> o/

[04:27] <Radvendii> I'm getting an error trying to build rakudo 2012.02 on mac OS X

[04:30] <sorear> what is it?

[04:30] <Radvendii> hang on… im trying to get it into a gist

[04:33] <Radvendii> https://gist.github.com/1970675

[04:33] <Radvendii> i didn't know what to include

[04:33] <Radvendii> so i put all of the output

[04:33] <Radvendii> the error appears near the bottom (as always)

[04:35] <Radvendii> i think i might have screwed up the copy-paste (if so, i updated the gist with the data straight from the command line)

[04:38] *** birdwindupbird joined
[04:38] <Radvendii> oh, and hey sorear! long time no see!

[04:38] <Radvendii> how are you?

[04:38] <sorear> "long time"

[04:38] <sorear> I've only been incommunicado for ~20 hours

[04:39] <sorear> Radvendii: you appear to be trying to build rakudo with an incompatible parrot

[04:39] <Radvendii> yeah but i haven't been on #perl6 in a *while*

[04:40] <Radvendii> but i used --gen-parrot

[04:40] <Radvendii> shouldn't that update it?

[04:40] <Radvendii> for configuring i ran: "perl ./Configure.pl --gen-parrot --prefix=/usr/local/"

[04:50] <sorear> you're updating, but you're not using the update because of --prefix

[04:50] <sorear> you need to use --gen-parrot-prefix instead.

[04:50] <Radvendii> ah

[04:50] <Radvendii> will that also set --prefix?

[04:50] <Radvendii> or should i set both

[04:51] <Radvendii> to the same value

[04:52] <sorear> that will also set --prefix, yes

[04:54] <Radvendii> --gen-parrot-prefix isn't an option though, don't i have to set --parrot-option='--prefix=$path'

[05:03] <Radvendii> i think it's working now

[05:03] <Radvendii> thanks

[05:06] <Radvendii> if use .shift in the body of a program, will it take the first command line argument (from @ARGS)

[05:08] <sorear> no

[05:08] <Radvendii> ,':-/

[05:08] <Radvendii> so i should do $_=@ARGV first?

[05:08] <Radvendii> or given @ARGV{}

[05:09] <japhb> Am I correct in assuming that S32-setting-library/Exception.pod:130-131 needs to be revised after https://github.com/perl6/specs/commit/d28c8ef33bd4dc20f4ac7c4bf64fb4d2ae8fe92e ?

[05:09] <Radvendii> i am correct that that was the behavior in perl5 though no? i'm not imagining things.

[05:11] <sorear> Radvendii: I have no words for this.

[05:11] <Radvendii> as in, you don't know?

[05:11] <japhb> Radvendii, shift with no arguments in Perl 5 was sensitive to context: It shifted @_ inside a sub, or @ARGV outside a sub.

[05:11] <japhb> Well, to a first approximation ... see `perldoc -f shift`

[05:11] <Radvendii> japhb: that's what i though. i see that was taken away in perl6

[05:12] <sorear> This feature is incredibly stupid and I have *no* sympathy for anyone who misses it.

[05:12] <japhb> Radvendii, special cases and magic lists of exceptions were much reduced in Perl 6.

[05:12] <japhb> s/were/are/ I suppose

[05:13] <Radvendii> understood.

[05:13] <Radvendii> I would think though, that @ARGV really serves the purpose that @_ does, except outside of a subroutine

[05:13] <japhb> While I love using Perl 5's auto-shift of @_ in subs, that's only because I don't have real parameter lists and methods.

[05:14] <sorear> $_=@ARGV reminds me of a story about an ALGOL programmer who switched to C and then started starting all eir programs with #define BEGIN { #define END }

[05:14] <japhb> Radvendii, yes, that mnemonic of sorts was perfectly useful in Perl 5.  Perl 6 doesn't really need that any more.

[05:14] <Radvendii> right, but from quick programs, i dont really want to deal with it

[05:14] <Radvendii> why not?

[05:15] <Radvendii> sorear: what? what would that even do?

[05:16] <japhb> I just had a discussion at $day-job last week about ancient code we'd found in which someone managed to write 50's/60's era assembly language in Perl 5, metaphorically speaking.

[05:16] <Radvendii> as in, totally obfuscated

[05:16] <Radvendii> ?

[05:17] <japhb> Radvendii, because subs have real parameter lists that do intelligent parameter binding, and in particular, MAIN has a very magical parameter list that can do command line parsing.

[05:17] <japhb> Radvendii, no subroutines.  All control flow done by setting globals and jumping.

[05:17] <Radvendii> japhb: oh i see

[05:18] <Radvendii> but I liked perl5's conspicous lack of a MAIN subroutine… ah well

[05:18] <japhb> It was quite effectively obfuscated even though it clearly wasn't intended to be, since the mental disconnect in most readers was pretty extreme.

[05:19] <japhb> The author was convinced that these new-fangled subroutines were just confusing.  (I kid you not.)

[05:19] <Radvendii> I can actually see that… if your brain is hard-wired one way…

[05:20] <japhb> Radvendii, sorear's ALGOL-to-C joke was basically talking about using the C preprocessor to redefine curly braces to be the "more readable" BEGIN and END.

[05:20] <japhb> Or rather ...

[05:20] <Radvendii> oooh

[05:20] <Radvendii> i see

[05:20] <japhb> to allow the programmer to use BEGIN and END instead of curly braces.

[05:22] <Radvendii> the message of the story being, adapt to the language, don't try to make it fit to your limited worldview

[05:22] <Radvendii> nom: (4.5).floor.say

[05:22] <p6eval> rakudo 4bdb94: OUTPUT«4␤»

[05:24] <dalek> specs: 637b6b4 | (Geoffrey Broadwell)++ | S32-setting-library/Exception.pod:

[05:24] <dalek> specs: Fix naming skew (which also fixes a semantic mismatch)

[05:24] <dalek> specs: review: https://github.com/perl6/specs/commit/637b6b4547

[05:24] <japhb> Radvendii, exactly.

[05:24] <Radvendii> and this lies in balance with TMTOWTDI

[05:25] <japhb> Radvendii, I'll answer that with another story:

[05:26] <japhb> When I was in high school, I used to make up words to fit in English class.  The professor told me to learn the right words to use, and use those instead of ones I made up.

[05:27] *** tokuhirom left
[05:27] <japhb> I protested that Shakespeare, who we were constantly being told was the greatest English poet, had possibly introduced more words into the English language *himself* than any other famous author.

[05:27] <japhb> So why couldn't I?

[05:27] *** rsimoes left
[05:27] <japhb> The professor said: You have to learn all the rules, before you can be clever breaking them.

[05:27] *** djanatyn left
[05:28] *** djanatyn joined
[05:28] <Radvendii> alright… fair enough.

[05:31] <japhb> It's worth noting that I've heard a similar sentiment in a wide range of fields from masters of each.  It's rather humbling, actually.

[05:31] *** rsimoes joined
[05:32] <Radvendii> mhmm. However… i would say that sometimes someone who has not been indoctrinated into the way of thinking of a field can offer some valuable *different* insite…

[05:34] <Radvendii> for example, i feel like the interpretation of the torah has become such that there is only one way of interpretation, because everyone studies from, and learns from, the torah scholars of the past, and so they do not think to think a different way.

[05:34] <japhb> Sure ... but one has to be careful to differentiate true insight from the all-too-seductive "make your scary moon world look like my friendly Earth"

[05:34] <Radvendii> mhmm…

[05:35] <japhb> Radvendii, how then do you explain the vast range of actual life choices made by those who nominally follow the teachings of the Torah?

[05:35] <japhb> And then there's "Your dogma just ran over my karma."

[05:37] <japhb> It takes a great deal of experience to know when the masters are wrong -- as they inevitably eventually are.

[05:39] <Radvendii> japhb: This is a great conversation, and i would really like to continue it, but it's 12:30 my time, and my brain is fried.

[05:39] <Radvendii> I think I'm going to go to bed

[05:39] <Radvendii> thanks for the stories, and discussion

[05:39] <japhb> And all that said (and to come full circle) ... you will rarely find a community more welcoming of other language's viewpoints than this one.  :-)

[05:39] <japhb> You're quite welcome, and thank you.

[05:39] <japhb> Have a good night!

[05:39] <Radvendii> oh, for sure

[05:40] <Radvendii> good night

[05:40] <Radvendii> o/

[05:40] *** Radvendii left
[05:40] <sorear> japhb: are you sure that this community is actually inclusive and pluralistic?  maybe it's just groupthink telling you that. :D

[05:41] <japhb> That was very much *not* the conversation I expected to have after popping my head in here for the first time in months.

[05:41] <japhb> Nah, I've seen it in action.

[05:41] <japhb> Plus, a group of people having a willful hallucination can make it true (or effectively so).

[05:42] <japhb> And how have you been, my fine fellow?

[05:44] <sorear> today could definitely be better.

[05:45] <japhb> Oh?  What troubles you?

[05:45] <sorear> last night there was a (pre-announced) power cut, so I shut my computer down

[05:45] <sorear> this morning it told me it had no hard drive

[05:45] <japhb> OUCH

[05:45] <japhb> Been there, hated that.

[05:45] <sorear> for no apparent reason I then cycled the power about 15 times

[05:46] <sorear> on the ~15th try it booted and is working fine

[05:46] <sorear> which makes me think the BIOS is fried, if that's possible

[05:46] <japhb> Yeah, that'll make you feel *oh* so comfortable.

[05:46] <sorear> no I/O errors on sda in dmesg yet

[05:47] <sorear> (I'm on it right now, not cellphone IRC or anything like that)

[05:47] <japhb> The last time a similar thing happened to me, it turned out to be residual charge on the case.  After a few failed tries to boot, I went to open the case, got a shock strong enough to sting for a few seconds, and it booted just fine after that.

[05:48] <japhb> Apparently the maintenance on the power system had led to the ground line getting charged, or some such.

[05:48] <sorear> in the middle (not the end) of that sequence of attempts, I opened the case and reinstalled all the IDE cables

[05:48] <geekosaur> grins and giggles, open it and reseat all the cables.  but, my alternate guess is not fried bios, it's a borderline component that only works properly when wrmed up to operating temperature

[05:48] <geekosaur> ah, ok

[05:49] * japhb thinks for a bit ... what do you have between your computer and mains?

[05:49] * sorear procured a portable drive and attempted a backup...

[05:49] <TimToady> charging UPS drawing down voltage, you're thinking?

[05:50] <sorear> [ 5607.913634] Buffer I/O error on device sdb1, logical block 786687

[05:50] <TimToady> the fact that sorear could say the power was out seems to indicate a UPS

[05:50] * japhb is wondering if sorear's power supply is limping and providing cruddy power (bad regulation or noisy output)

[05:50] <sorear> that's what I was going to back up *onto*

[05:50] <japhb> ouch again

[05:51] <TimToady> low voltage while the refrigerator cools down?

[05:51] <sorear> TimToady: no, I could say the power was out because I had a piece of mail from SDG&E saying "we'll disconnect your power at 10pm for maintaince, please make sure you have no generators running that could electocute our employees"

[05:51] <TimToady> ah

[05:52] <japhb> TimToady, yeah, possibly, or just component temperature changes moving it in and out of spec.  A marginal power supply plays havoc on the system (and runs it into the ground quickly, I might add -- some components REALLY don't like crappy power).

[05:52] <TimToady> well, I guess I'm not Sherlock Holmes :)

[05:53] * japhb idly wonders just how many actors have played Holmes over the years ....

[05:53] <TimToady> it's that dirty power a-comin' from that thar nukular station

[05:53] <japhb> Heh.

[05:54] <japhb> sorear, did you ever answer what you had between your computer's power supply and the wall?  If so, I missed it.

[05:54] <sorear> I'm not sure.

[05:54] <sorear> Or rather

[05:54] <sorear> One power strip w/breaker (and possibly a MOV?) and one brick that claims to be a UPS

[05:55] <japhb> How long has it been since you had the electronics in the UPS replaced?

[05:55] <TimToady> as I say, a charging UPS can draw down the voltage some

[05:55] <TimToady> depending on how good the circuitry is

[05:55] <japhb> Nodnod

[05:55] <japhb> Also, what brand/model of UPS is it?

[05:56] * TimToady has yet to find a good brand...

[05:56] <sorear> I don't think this "UPS" charges.

[05:56] *** birdwindupbird left
[05:57] <japhb> I've been happy with running an APC Smart-UPS at about 20-40% load for quite a long time.  It's had it's guts swapped out two or three times over the years, and I upgraded it from 1000 VA to 1500 VA at one point.  Otherwise it's taken quite a few hits from crappy mains over the years, without the computers being (apparently) the worse for wear.

[05:58] <TimToady> I can't count how many UPSs I've killed, and we have pretty good power here most of the time...

[05:58] <sorear> For the entire time I've had it, it's just been a very heavy extension cord - which had a purpose at one point, but I just noticed it no longer

[05:58] <TimToady> maybe UPSs thrive on adversity, I dunno...

[05:59] <sorear> (prevented me from unplugging my computer when tripping - since last move, cord no longer crosses a footpath)

[06:00] <japhb> The last time I had to have the guts replaced (and paid the non-trivial fee), I asked why UPS systems die way earlier than the computers they protect.  The support guy basically said "because the UPS keeps sacrificing itself".

[06:01] *** doy left
[06:02] *** kaare_ joined
[06:02] <sorear> someday I need to rework this room so that the PC is less than 4m from the nearest outlet

[06:47] *** sudokode left
[06:47] *** sudokode joined
[06:57] *** marmalade left
[07:04] *** mauror joined
[07:13] *** mauror left
[07:13] <dalek> nqp/kill_props_vtables: cc387d7 | bacek++ | tools/build/PARROT_REVISION:

[07:13] <dalek> nqp/kill_props_vtables: Bump parrot revision to kill_props_vtables marge commit.

[07:13] <dalek> nqp/kill_props_vtables: review: https://github.com/perl6/nqp/commit/cc387d7bde

[07:14] <bacek> phenny, tell jnthn Any objections on merging nqp's kill_props_vtables branch?

[07:14] <phenny> bacek: I'll pass that on when jnthn is around.

[07:14] <bacek> phenny, tell moritz Any objections on merging nqp's kill_props_vtables branch?

[07:14] <phenny> bacek: I'll pass that on when moritz is around.

[07:31] *** birdwindupbird joined
[07:55] *** Trashlord left
[07:56] <moritz> \o

[07:56] <phenny> moritz: 07:14Z <bacek> tell moritz Any objections on merging nqp's kill_props_vtables branch?

[07:59] *** Trashlord joined
[07:59] <moritz> I'll take a look, spectest, and merge if everything works out

[08:01] <bacek> moritz, o/

[08:01] <bacek> moritz, it will need one-line patch for rakudo

[08:03] <bacek> moritz, https://gist.github.com/1971209

[08:04] <moritz> bacek: ok

[08:04] <bacek> moritz, t/spec/S32-str/comb.rakudo                              (Wstat: 0 Tests: 41 Failed: 2)

[08:05] <bacek> Is it expected? (rakudo, spectest)

[08:05] <moritz> I've seen that before the branch merge too

[08:05] <bacek> "comb... dies for expected reason"

[08:05] <moritz> (though it's fairly recent)

[08:05] <bacek> ah, ok.

[08:06] <bacek> I just want to make sure it's not all my fault :)

[08:06] <moritz> bacek: it's ALL your fault, even if you didn't touch anything related :-)

[08:07] <bacek> moritz, hang on. This meme is about 10 years old!!!

[08:07] <moritz> bacek: and it still works great :-)

[08:07] <bacek> bah!

[08:11] <moritz> ah, it's just a matter of change error message wording

[08:19] <dalek> rakudo/nom: 943e4c5 | moritz++ | src/core/Cool.pm:

[08:19] <dalek> rakudo/nom: correct the sub form of comb

[08:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/943e4c5f2f

[08:20] <dalek> roast: 952d663 | moritz++ | S32-str/comb.t:

[08:20] <dalek> roast: fix and unfudge comb.t

[08:20] <dalek> roast: review: https://github.com/perl6/roast/commit/952d663855

[08:20] <dalek> nqp: 572970e | bacek++ | src/ (2 files):

[08:20] <dalek> nqp: Update to latest parrot with replaceing prop VTABLEs with standalone functions

[08:20] <dalek> nqp: review: https://github.com/perl6/nqp/commit/572970edfa

[08:20] <dalek> nqp: cc387d7 | bacek++ | tools/build/PARROT_REVISION:

[08:20] <dalek> nqp: Bump parrot revision to kill_props_vtables marge commit.

[08:20] <dalek> nqp: review: https://github.com/perl6/nqp/commit/cc387d7bde

[08:24] <dalek> rakudo/nom: 3ce70e6 | moritz++ | / (2 files):

[08:24] <dalek> rakudo/nom: bump NQP revision, and get rid of VTABLE_getprop

[08:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3ce70e62f4

[08:35] <dalek> roast: d062730 | moritz++ | S03-operators/repeat.t:

[08:35] <dalek> roast: test that xx thunks the LHS

[08:35] <dalek> roast: review: https://github.com/perl6/roast/commit/d062730a31

[08:39] <dalek> roast: 9376407 | moritz++ | S12-construction/BUILD.t:

[08:39] <dalek> roast:  RT #95340

[08:39] <dalek> roast: review: https://github.com/perl6/roast/commit/9376407c49

[08:50] <moritz> down to 75 testneeded tickets

[08:50] <moritz> nom: Int but role { }

[08:50] <p6eval> rakudo 943e4c:  ( no output )

[09:01] <dalek> rakudo/nom: 42695ea | moritz++ | docs/ChangeLog:

[09:01] <dalek> rakudo/nom: add :ex and :nth adverbs to ChangeLog

[09:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/42695ead9e

[09:19] * geekosaur had a lucid dream about trying to debug something weird in pugs.  I blame yinz, but "my weird brain, let me show you it" :)

[09:24] *** mucker joined
[09:29] *** sistrydg joined
[09:29] *** sistrydg left
[09:31] *** GlitchMr joined
[09:33] *** havenn joined
[09:53] *** xinming left
[09:58] *** tarch joined
[09:58] *** tarch left
[09:59] *** xinming joined
[10:02] *** birdwindupbird left
[10:14] *** fglock joined
[10:33] *** mj41 joined
[10:47] *** MayDaniel joined
[10:47] *** MayDaniel left
[10:47] *** MayDaniel joined
[10:55] *** ascent_ left
[10:57] *** ascent_ joined
[11:35] *** havenn left
[11:36] *** havenn joined
[11:39] *** whiteknight joined
[12:29] *** xinming left
[12:31] *** xinming joined
[12:32] *** benabik left
[12:54] *** MayDaniel left
[12:54] *** havenn left
[12:56] *** ascent_ left
[12:56] *** ascent_ joined
[12:57] *** birdwindupbird joined
[12:59] *** fsergot joined
[12:59] <fsergot> hi o/ ! 

[13:05] <moritz> \o

[13:14] <colomon> o/

[13:14] *** GlitchMr left
[13:17] *** NamelessTee joined
[13:33] *** simcop2387 left
[13:33] *** MayDaniel joined
[13:35] *** simcop2387 joined
[13:42] *** tokuhirom joined
[13:43] *** benabik joined
[13:49] *** benabik left
[13:49] *** benabik joined
[13:52] *** PacoAir joined
[14:21] *** xinming left
[14:23] *** xinming joined
[14:24] *** tokuhirom left
[14:25] *** tokuhirom joined
[14:45] *** tokuhirom left
[14:54] *** lutok joined
[15:10] *** fglock left
[15:12] *** Radvendii joined
[15:15] *** Radvendii left
[15:34] *** MayDaniel left
[15:42] *** tokuhirom joined
[15:48] *** Patterner left
[15:50] *** Psyche^ joined
[15:50] *** Psyche^ is now known as Patterner

[15:53] *** kmwallio joined
[15:55] *** tr-808 joined
[15:55] *** sisar joined
[15:58] *** nebuchadnezzar left
[16:04] *** GlitchMr joined
[16:25] *** mj41 left
[16:25] *** nebuchadnezzar joined
[16:30] *** havenn joined
[16:33] *** Trashlord left
[16:37] *** birdwind1pbird joined
[16:46] *** fsergot left
[16:51] *** birdwindupbird left
[16:57] *** birdwind1pbird left
[16:57] <sorear> amazing.  complete lack of overnight discussion.

[16:57] <sorear> good * #perl6

[17:00] <[Coke]>  ~~

[17:00] <benabik> When nobody talks on #perl6, I tend to assume I was on the wrong end of a net split.

[17:02] <sorear> I don't see a netsplit.

[17:02] <benabik> It's not always true, but it's more common than nobody talking.

[17:04] *** Radvendii joined
[17:05] <Radvendii> nom: my $a="foo"; (*="bar")($a); say $a;

[17:05] <p6eval> rakudo 42695e: OUTPUT«Cannot assign to a non-container␤  in block <anon> at /tmp/pSyfe0gN1B:1␤␤»

[17:05] <Radvendii> is that on purpose?

[17:05] <Radvendii> that you can't assign with whatevercode?

[17:06] <[Coke]> nom: * = "bar"

[17:06] <p6eval> rakudo 42695e: OUTPUT«Cannot assign to a non-container␤  in block <anon> at /tmp/OTrz2HDyEP:1␤␤»

[17:06] *** jferrero left
[17:07] <benabik> Looks like that's not even becoming a whatevercode.

[17:07] <benabik> It's just assigning to a Whatever, I think.

[17:07] <Radvendii> hahaha

[17:07] <Radvendii> really?

[17:07] <Radvendii> nom: my $a="foo"; {$^a="bar"}($a); say $a;

[17:07] <p6eval> rakudo 42695e: OUTPUT«Cannot assign to a readonly variable or a value␤  in block <anon> at /tmp/qVV8Leisl4:1␤␤»

[17:08] <benabik> But I wouldn't expect (* = 'bar') to work...  Parameters are readonly by default.

[17:08] <Radvendii> awwww… what's with everything being readonly?

[17:08] <benabik> nom: my $a = 'foo'; (-> ($b is rw) { $b = 'bar' })($a); say $a

[17:08] <p6eval> rakudo 42695e: OUTPUT«Not enough positional parameters passed; got 0 but expected 1 in sub-signature␤  in block <anon> at /tmp/7m0YSvMMes:1␤␤»

[17:09] <benabik> huh

[17:09] <benabik> nom: my $a = 'foo'; (sub ($b is rw) { $b = 'bar' })($a); say $a

[17:09] <p6eval> rakudo 42695e: OUTPUT«bar␤»

[17:10] <Radvendii> what's the justification for making everything readonly by default (im actually curious)

[17:11] *** GlitchMr left
[17:12] <Radvendii> O.o maybe there should be a "use readwrite" option to let everything be readwrite by default

[17:12] <benabik> I think that would kill a lot of optimization.

[17:12] <benabik> You'd have to create a container for every constant passed in.

[17:12] <Radvendii> oh…

[17:12] *** jferrero joined
[17:12] <Radvendii> what about just for non-constants

[17:13] <Radvendii> just for if you are passing a variable

[17:14] <Radvendii> here, this is the xy problem again

[17:14] <Radvendii> you know how one can say $a == 1|2?

[17:14] <Radvendii> basically, i want to say $a (==2 | > 5)

[17:15] <Radvendii> or, more specifically $a (==2 | = 5)

[17:15] <Radvendii> (a.k.a. if it doesn't equal 2, make it 5

[17:16] <Radvendii> i could just do "$a == 2 || $a = 5"

[17:16] <Radvendii> but if $a is a more complicated expression…

[17:17] <benabik> A complex expression that returns a lvalue?

[17:17] *** jferrero left
[17:17] <Radvendii> yes

[17:17] <benabik> I'd probably do something like `my $a := complex-expression(); $a == 2 or $a = 5

[17:18] <Radvendii> yeah… maybe i should let up on the code golfing :P

[17:21] *** tokuhirom left
[17:25] *** Radvendii left
[17:35] *** marmalade joined
[17:45] *** wolfman2000 left
[17:46] <sisar> moritz: can i have commit bit for github.com/perl6/features/ ? #want to fix a typo

[17:46] <sisar> github ID is 'Siddhant'

[17:48] *** havenn left
[17:48] <TimToady> looks like you're alreayd there

[17:49] <TimToady> if you have a perl6 commit bit, you should already be able to edit features

[17:50] <sisar> strange, just a while back i did not see 'edit this file'

[17:51] <sisar> TimToady: do have some mystical powers ? :p

[17:52] <TimToady> well, I just use the command line on a cloned repo; don't know nuttin' abou the web interface really

[17:55] *** havenn joined
[17:56] <dalek> features: 24e3424 | (Siddhant Saraf)++ | features.json:

[17:56] <dalek> features: typo: printf => sprintf

[17:56] <dalek> features: review: https://github.com/perl6/features/commit/24e3424d02

[17:57] <benabik> But there is a printf...

[17:57] <benabik> nom: printf "foo %s baz", 'bar'

[17:57] <p6eval> rakudo 42695e: OUTPUT«foo bar baz»

[17:57] <sisar> what ?

[17:58] <sisar> oh noez

[17:58] <sisar> sprintf and .fmt are (almost) the same, right ?

[17:59] <benabik> That I don't know.

[18:01] <sisar> benabik: any idea where is printf specced ? its not in S32.

[18:02] <colomon> sisar:

[18:02] <colomon>     method fmt(Str $format = '%s') {

[18:02] <colomon>         sprintf($format, self);

[18:02] <colomon>     }

[18:03] <flussence> S32/IO:472, S32/Str:403

[18:03] <colomon> that's in niecza's Cool class.

[18:03] <flussence> printf isn't really specced, but sprintf is

[18:04] <colomon> sisar: it's not exact, some classes have more specialized versions of .fmt

[18:04] *** GlitchMr joined
[18:04] <sisar> colomon: i know. that is why i said almost above ^.

[18:05] <TimToady> composite types tend to iterate the format as needed

[18:06] <TimToady> perl6: say %*ENV.fmt("%s -> %s")

[18:06] * sisar scratches his head

[18:06] <p6eval> rakudo 42695e: OUTPUT«PERLBREW_VERSION -> 0.24␤USER -> p6eval␤MAIL -> /var/mail/p6eval␤SHLVL -> 1␤OLDPWD -> /home/p6eval␤HOME -> /home/p6eval␤PERLBREW_ROOT -> /home/p6eval/perl5/perlbrew␤LOGNAME -> p6eval␤_ -> ./run.sh␤TERM -> screen␤PATH_WITHOUT_PERLBREW -> /home/p6eval/rakudo/parrot:/…

[18:06] <p6eval> ..pugs b927740: OUTPUT«*** Insufficient arguments to sprintf␤    at Prelude.pm line 668, column 13-53␤»

[18:06] <p6eval> ..niecza v15-3-g1c4b5a7: OUTPUT«LANG -> en_US.UTF-8␤TERM -> screen␤SHELL -> /bin/bash␤SHLVL -> 1␤MAIL -> /var/mail/p6eval␤HOME -> /home/p6eval␤PATH_WITHOUT_PERLBREW -> /home/p6eval/rakudo/parrot:/home/p6eval/rakudo/parrot:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games␤OLDPWD -> …

[18:07] <TimToady> perl6: say %*ENV.sort.fmt("%s -> %s");   # curious

[18:07] <p6eval> pugs b927740: OUTPUT«*** Insufficient arguments to sprintf␤    at Prelude.pm line 750, column 18-81␤       Prelude.pm line 668, column 13-53␤»

[18:07] <p6eval> ..rakudo 42695e: OUTPUT«HOME -> /home/p6eval LANG -> en_US.UTF-8 LOGNAME -> p6eval LS_COLORS -> rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.…

[18:07] <p6eval> ..niecza v15-3-g1c4b5a7: OUTPUT«HOME -> /home/p6eval LANG -> en_US.UTF-8 LD_LIBRARY_PATH -> /usr/local/mono-2.10.1/lib LOGNAME -> p6eval LS_COLORS -> rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st…

[18:08] <TimToady> \o/

[18:08] <sisar> if there is nothing no printf in the spec, why is there a printf in rakudo ?

[18:08] <TimToady> flussence just pointed you to printf in the spec

[18:08] * sisar looks

[18:13] *** NamelessTee left
[18:21] <sisar> well, maybe i should just change the line in question to " printf, sprintf, .fmt " ?

[18:24] * sisar afk

[18:24] *** Radvendii joined
[18:24] <Radvendii> hey guys

[18:24] <Radvendii> i found a (maybe) bug

[18:25] <Radvendii> nom: my $a="foo"; 0 && $a="bar";

[18:25] <p6eval> rakudo 42695e: OUTPUT«Cannot assign to a non-container␤  in block <anon> at /tmp/N7zBzIaBSN:1␤␤»

[18:25] <Radvendii> nom: my $a="foo"; 0 && ($a="bar");

[18:25] <p6eval> rakudo 42695e:  ( no output )

[18:25] <Radvendii> shouldn't = be lower precidence than &&?

[18:25] <benabik> it is.

[18:26] <benabik> So (0 && $a) = 'bar'

[18:26] <Radvendii> sorry

[18:26] <colomon> which is 0 = 'bar'

[18:26] <Radvendii> i meant higher precidence

[18:26] <benabik> no...

[18:26] <benabik> $a = $foo && $bar

[18:26] <Radvendii> oooh

[18:26] <Radvendii> good call

[18:26] <benabik> There's `and` and `or` for low prec versions

[18:27] <Radvendii> and you can't have different precidence for lvalue and rvalue?

[18:27] <benabik> nom: my $a = 'foo'; 0 and $a = 'bar'; say $a

[18:27] <p6eval> rakudo 42695e: OUTPUT«foo␤»

[18:27] <Radvendii> benabik: ah! thanks, that helps.

[18:27] <Radvendii> :D

[18:27] <benabik> I supposed you _could_ have different precedence for l and r sides...  but I think that would get more confusing than needed.

[18:28] <Radvendii> yeah

[18:28] <Radvendii> i think you're right

[18:31] <Radvendii> am i guaranteed that .grep will run through a list in order?

[18:31] <Radvendii> or is that subject to different implimentations?

[18:32] <Radvendii> wait… grep is lazy, so if i do @list.grep(...)[0] it will go through the list in order until it finds a match…

[18:32] *** icwiener joined
[18:34] <TimToady> grep is ordered by default unless you put it into a hyper context (or the new race context, which also unorders the results)

[18:34] *** sisar left
[18:39] *** havenn left
[18:40] *** NamelessTee joined
[18:40] *** havenn joined
[18:44] *** Radvendii left
[18:49] *** havenn_ joined
[18:49] *** havenn left
[18:52] *** localhost left
[18:53] *** ribayr joined
[18:53] *** havenn_ left
[18:54] *** ribayr left
[18:54] *** localhost joined
[19:05] <japhb> In the JSON::Tiny module, there is a commit by colomon that split 'rule array' into two rules, array and arraylist, and said that while this should be equivalent, in practice Niecza is much happier with the split rules.  Does anyone remember what that was about?

[19:08] *** fglock joined
[19:34] *** noteventime joined
[19:47] *** birdwindupbird joined
[19:48] *** au left
[19:49] *** au joined
[20:12] *** ksi joined
[20:25] *** MayDaniel joined
[20:34] *** birdwindupbird left
[20:36] *** fsergot joined
[20:38] *** mucker left
[20:41] <colomon> japhb: it was a niecza bug, AFAIK

[20:50] *** fglock left
[20:53] <lue> hello world o/

[20:53] <mathw> o/

[21:04] <colomon> \o

[21:09] *** GlitchMr left
[21:09] <sorear> goodm * #perl6

[21:09] <colomon> o/

[21:09] <sorear> o/ colomon

[21:10] <colomon> sorear: how are things?

[21:10] * colomon is back from whirlwind trip to Toronto

[21:11] <sorear> Mixed

[21:13] <sorear> back from $event

[21:16] <lue> could somebody reset my password on feather? It's been ages since I last used it and now I can't remember it :)

[21:17] <sorear> lue: pm me what you want it reset to.

[21:19] *** ksi left
[21:21] *** MayDaniel left
[21:21] *** havenn joined
[21:22] *** doy joined
[21:23] *** ksi joined
[21:25] *** thou left
[21:37] *** cognominal_ joined
[21:37] <moritz> hugme: add Siddhant to perl6

[21:37] <hugme> moritz: You need to register with freenode first

[21:37] <moritz> dang

[21:37] <moritz> hugme: add Siddhant to perl6

[21:38] * hugme hugs Siddhant. Welcome to the perl6 github organization

[21:38] * moritz -> sleep

[21:41] *** cognominal left
[21:44] *** NamelessTee left
[21:45] *** doy left
[21:49] *** doy joined
[22:21] *** kaare_ left
[22:26] *** Trashlord joined
[22:34] *** wolfman2000 joined
[22:41] *** araujo left
[23:05] *** Tedd1 joined
[23:05] *** Tedd1^ left
[23:10] *** snearch joined
[23:24] <japhb> colomon, do you remember if that Niecza bug was fixed?

[23:24] <japhb> colomon, the one causing the array/arraylist rule split, I mean

[23:25] *** kmwallio left
[23:32] *** havenn left
[23:32] *** ksi left
[23:42] *** PacoAir left
[23:55] *** tokuhirom joined
[23:59] *** tokuhirom3 left
