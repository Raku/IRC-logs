[00:03] *** dav__a joined
[00:04] *** dav__a left
[00:12] <sorear> good * #perl6

[00:15] <sorear> timotimo: fwiw, you make bugs by mailing to [email@hidden.address]
[00:15] <sorear> There is no format; anything in the mail goes into the bug

[00:18] <sorear> niecza bugs go to https://github.com/sorear/niecza/issues

[00:19] <sorear> I guess if I'm serious about this I should get an org acct eventually ... :P

[00:24] *** japhb_ joined
[00:26] <japhb_> The niecza README says Mono "2.8.2 or later is recommended for best performance".  What's the scale of the difference from 2.6.7?  A few percent?  Half again faster?  Several times faster?

[00:27] <sorear> Around twice as fast when I last measured it, which was rather long ago

[00:27] <sorear> You need to set MONO_ENV_OPTIONS=--gc=sgen to fully realize it

[00:27] <japhb_> sorear, Is this in addition to 'RUN_CLR=mono-sgen'?

[00:28] *** [particle] left
[00:29] <japhb_> Also, has anyone tested recently whether Niecza still works with Mono 2.4.x? (2.4.3.1 in particular; that's what's packaged on RHEL/CentOS/SL 6)

[00:29] <sorear> japhb_: no, equivalent.

[00:29] <sorear> No.

[00:29] <japhb_> OK

[00:33] <japhb_> What does Niecza have for doing non-blocking socket IO these days?

[00:36] *** [particle] joined
[00:38] <sorear> japhb_: still nothing p6y, I keep forgetting

[00:38] <japhb_> sorear, awww.  :-)

[00:39] <japhb_> Is Panda currently able to work with *both* a Rakudo and a Niecza installed?

[00:40] *** xinming left
[00:46] <timotimo> so, is there an official guide on how to pronounce "niecza"?

[00:48] <sorear> cz as in czech republic

[00:48] <TimToady> knee eh cha

[00:48] <sorear> (I have some regrets about this, but the cost-benefit analysis does not support a name change)

[00:49] * TimToady remembers remarking at the now-or-never point

[00:49] <TimToady> .oO("We can't change this; we have 11 users already.")

[00:49] *** havenn joined
[00:50] <sorear> japhb_: if you wanted to invent a Perl 6 non-blocking socket I/O system and prototype it using http://msdn.microsoft.com/en-us/library/system.net.sockets.socket.select.aspx , that would be *awesome*

[00:51] <japhb_> sorear, *chuckle* I saw what you did there.

[00:51] <sorear> (note: the CLR, like the Win32 API on which it is modelled, only supports selecting on sockets, not general FDs)

[00:54] <japhb_> The part of me that 10 years ago would have ranted at that last statement has instead gone off and mixed itself something tasty as a distraction.

[00:55] <TimToady> the right way forward will be a built-in event loop with several event sources that can feed it

[00:55] <TimToady> then we don't have to care how the system splits these things up

[00:56] <japhb_> TimToady, an AnyEvent sort of beast, but standard in Perl 6?

[00:56] <TimToady> yes

[00:57] <japhb_> Hmmmm.  I will cogitate on this later -- any prior art (besides of course the Perl 5 AnyEvent module) that I should consider?

[00:58] <TimToady> Erlang?

[00:58] <TimToady> Go?

[00:58] *** [particle] left
[00:58] <TimToady> Smalltalk?  :)

[00:59] *** mj41 left
[01:00] <japhb_> Wow, that's a rather larger space of prior art than I was expecting, but OK, maybe it's time to learn (yet another) language or two.

[01:00] * japhb_ mentally weighs "learn new language", "research GC algorithms", and "JFDI" as options for next hack session.

[01:02] <colomon> japhb: you should be able to use panda with rakudo and panda-niecza with niecza at the same time.

[01:04] *** envi_ left
[01:04] *** _jaldhar joined
[01:04] <japhb_> colomon, OK.  Where is panda-niecza?

[01:05] <colomon> https://github.com/colomon/panda

[01:07] <japhb_> colomon, How much do the sources drift between panda and panda-niecza?  And is there a plan to unify them again?

[01:08] <colomon> drift is slight but significant

[01:08] <colomon> there is a plan to have a plan to unify them again.

[01:08] *** [particle] joined
[01:11] <japhb_> colomon, *chuckle*  OK, understood, thank you.

[01:13] *** sisar joined
[01:18] <Tene> rakudobug?

[01:18] <Tene> Bah.

[01:18] *** scott__ joined
[01:23] *** Chillance left
[01:34] <sorear> TimToady: when you get a chance I'd like to finish our thing on Nil and @array vars from last night

[01:35] <sorear> TimToady: niecza currently treats 'my @foo' as something like 'my Array $foo ::= []'; I get the impression you're treating it as 'my Array $foo # will autovivify when written to', is this correct?

[01:40] *** havenn left
[01:53] *** japhb_ left
[01:54] *** alester joined
[01:55] * TimToady is not actually taking a position, merely trying to understand the semantic options

[02:01] *** REPLeffect joined
[02:25] *** havenn joined
[02:27] *** tokuhirom left
[02:33] *** sisar left
[02:36] *** xinming joined
[02:41] *** havenn left
[02:41] *** araujo left
[02:42] *** havenn joined
[02:43] *** havenn left
[02:46] *** araujo joined
[02:51] *** havenn joined
[02:56] *** havenn left
[03:00] *** whiteknight left
[03:10] *** havenn joined
[03:11] *** orafu left
[03:11] *** orafu joined
[03:19] *** havenn left
[03:35] *** havenn joined
[03:37] *** sftp left
[03:47] *** wooden left
[03:48] <japhb> sorear, is there a common set of benchmarks that you use when assessing the performance of niecza?

[04:12] <sorear> japhb: only self-compilation

[04:21] *** Fuad joined
[04:22] <Fuad> Hi all

[04:24] *** envi_ joined
[04:27] <sorear> Fuad: Hello!  Welcome to #perl6.

[04:27] *** alester left
[04:27] *** havenn left
[04:28] <Fuad> sorear: Thank you!

[04:29] <sorear> Oops.

[04:29] <sorear> Just checked my logs, you aren't actually new here.

[04:29] <sorear> Hi anyway.

[04:30] <shachaf> sorear: Hello! Welcome to #perl6.

[04:31] *** cbk1090 left
[04:31] *** sshaw__ joined
[04:31] <sorear> shachaf: huh?

[04:32] *** lestrrat left
[04:32] * shachaf stops nonsensing.

[04:32] <sorear> S09 seems quite low on tests.

[04:32] *** lestrrat joined
[04:35] *** sshaw__ left
[04:38] *** havenn joined
[04:41] *** NamelessTee left
[04:44] *** xinming left
[04:45] <Fuad> sorear: yeah :)

[05:09] *** plobsing joined
[05:26] *** NamelessTee joined
[05:27] *** birdwindupbird joined
[05:38] *** woosley joined
[05:39] *** alc joined
[05:50] *** am0c joined
[05:56] *** kaleem joined
[06:25] *** GlitchMr joined
[06:38] *** MayDaniel joined
[06:40] *** MayDaniel left
[06:45] *** awwaiid left
[06:50] *** takesako left
[06:55] *** takesako joined
[06:56] *** NamelessTee left
[07:02] *** wtw joined
[07:04] *** awwaiid joined
[07:06] *** Fuad left
[07:18] *** woosley left
[07:18] *** woosley joined
[07:21] <dalek> niecza: 1f35f89 | sorear++ | lib/ (2 files):

[07:21] <dalek> niecza: Implement Zen slices and @foo[1;2;3] access

[07:21] <dalek> niecza: 

[07:21] <dalek> niecza: Note that there are no actual shaped arrays yet; this is simply the

[07:21] <dalek> niecza: @foo[1][2][3] equivalence per L<S09/Cascaded subscripting of multidimensional arrays>.

[07:21] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1f35f8930f

[07:25] *** GlitchMr left
[07:28] *** wooden joined
[07:29] *** wooden left
[07:29] *** wooden joined
[07:37] *** havenn left
[07:41] <sorear> TimToady: what is the intended semantics of my @array[**] ?

[07:42] * sorear wonders whether it would be more pragmatic to try and adapt niecza's existing Array and Hash classes to multi-D or to create new ones

[07:45] * moritz guesses that nobody here has much wisdom to share on that matter

[07:45] <moritz> and yes, I agree. Not many S09 tests

[07:45] <moritz> mostly because I haven't understood what most of S09 says

[07:47] * moritz -> GPW

[07:47] *** thou left
[07:50] *** LemonLoaf left
[08:43] *** fsergot left
[08:44] *** mj41 joined
[08:49] * sorear -> sleep

[08:52] <masak> morgnung, #perl6

[08:53] <tadzik> Guten Morgen, #perl6

[08:56] <jnthn> GPW. Dag 2.

[08:57] <jnthn> Oops. That wasn't German, was it...

[08:57] * jnthn clearly needs a second cup of coffee...

[08:59] <bonsaikitten> jnthn: nee :) "Dag" is dutch, "Tag" would be proper german

[09:07] *** fsergot joined
[09:27] *** fsergot left
[09:32] *** key_ joined
[09:34] *** woosley left
[09:39] <masak> yay! I just hit 100% preparedness for my talk. :)

[09:39] <masak> with all of... 20 minutes left.

[09:39] * masak , master of procrastination

[09:40] * masak polishes some things

[09:44] <key_> hello to every one on this chanel, i am new to perl6, and also beginner in using  IRC.  i was wondering if templatelanguges (like template toolkit) could be compiled to parrot bytecode and than be used from within perl6 code?

[09:48] *** fsergot joined
[09:49] <tadzik> possibly, yes

[09:49] <tadzik> there's a Rosella library for templating

[09:50] <tadzik> (Rosella is a library collection for Parrot)

[09:54] <key_> thank you

[10:01] *** dakkar joined
[10:08] *** scott__ left
[10:12] *** fsergot left
[10:31] *** Kaswara joined
[10:32] *** am0c left
[10:33] *** fsergot joined
[10:34] <bacek> ~~

[10:34] <phenny> bacek: 05 Mar 11:56Z <jnthn> tell bacek plesae don't change Makefile for now, I have a bunch of re-org of it in a branch, and I don't want to have to re-do that.

[10:34] <phenny> bacek: 05 Mar 11:57Z <jnthn> tell bacek kill_props_vtables branch should be fine

[10:34] <phenny> bacek: 05 Mar 11:58Z <jnthn> tell bacek oh, I see moritz++ already sorted stuff out wrt that branch :)

[10:34] <bacek> jnthn, aloha. In which branch? bs?

[10:37] <moritz> which reminds me, I still need to look at the new_props branch

[10:37] <moritz> it's just a simple argument reordering, right?

[10:37] <bacek> moritz, yes

[10:38] *** alc left
[10:43] *** krakan left
[10:45] *** fsergot left
[10:45] <jnthn> bacek: bs is merged

[10:47] <jnthn> lunch &

[10:48] <bacek> jnthn, ok, thanks.

[10:48] *** Tedd1^ joined
[10:48] *** Tedd1 left
[10:50] *** pernatiy left
[10:54] *** [Coke] left
[10:54] *** [Coke] joined
[10:54] *** tadzik left
[10:58] *** tadzik joined
[10:59] *** Trashlord joined
[11:03] *** preflex left
[11:03] *** preflex_ joined
[11:03] *** preflex_ is now known as preflex

[11:05] *** fsergot joined
[11:12] *** key_ left
[11:17] *** fsergot left
[11:24] *** NamelessTee joined
[11:26] <bacek> jnthn, moritz, can you look at https://gist.github.com/1985777? It's proposed changes in nqp Makefile. Life is too short to wait for useless rebuilds..

[11:27] *** Kaswara left
[11:32] *** snearch joined
[11:44] *** xinming joined
[11:47] *** key_ joined
[11:53] *** snearch left
[11:53] *** pernatiy joined
[11:55] *** key_ left
[12:03] <moritz> +1 if it works also with -j

[12:04] <moritz> jnthn++ is giving his talk right now :-)

[12:04] <rafl> masak: are the slides for your macros talk available online? i didn't quite manage to attend earlier

[12:06] <bacek> moritz, yes, it's step forward to parallel compilation.

[12:11] <bacek> moritz, I can start branch to do it bit more properly

[12:11] <moritz> bacek: a branch would make it easier to apply and harder to forget

[12:12] <bacek> moritz, deal :)

[12:12] *** grondilu joined
[12:12] *** skids left
[12:20] *** pyrimidine left
[12:20] *** Grrrr left
[12:20] *** rsimoes left
[12:20] *** arnsholt left
[12:20] *** lue left
[12:20] *** snarkyboojum left
[12:20] *** Juerd left
[12:20] *** PerlJam left
[12:20] *** Yappoko____ left
[12:23] *** pyrimidine joined
[12:23] *** Grrrr joined
[12:23] *** rsimoes joined
[12:23] *** arnsholt joined
[12:23] *** lue joined
[12:23] *** snarkyboojum joined
[12:23] *** Juerd joined
[12:23] *** PerlJam joined
[12:23] *** Yappoko____ joined
[12:28] *** xinming left
[12:29] *** xinming joined
[12:31] *** skids joined
[12:39] *** bluescreen10 joined
[12:44] *** tokuhirom joined
[12:49] *** ab5tract joined
[12:50] *** grondilu left
[13:01] *** Trashlord left
[13:03] * jnthn wonders if that Makefile change works on Windows...

[13:03] <jnthn> If it's a branch, I'll try it.

[13:23] *** Trashlord joined
[13:24] * [Coke] misses au!

[13:39] *** GlitchMr joined
[13:44] *** skids left
[13:47] <[Coke]> n: say 70/90.perl

[13:47] <p6eval> niecza v15-4-g1f35f89: OUTPUT«0.77777777777777779␤»

[13:47] <[Coke]> n: say 70/90

[13:47] <p6eval> niecza v15-4-g1f35f89: OUTPUT«0.77777777777777779␤»

[13:49] <au> /o

[13:49] <phenny> au: 02 Mar 22:58Z <[Coke]> ask au given http://feather.perl6.nl/~coke/pugs.diff, all the method seem to work: I can do "3.Int.Num.Rat" -> 3/1 - however, when I say "Int" with this patch, I get an error about multis. pre-patch it returns "::Int"; any pointers?

[13:50] * au tries the patch

[13:51] <au> [Coke]: commit to a branch e.g. wip/typefix next time?

[13:52] * au does exactly that

[13:52] <dalek> Pugs.hs/wip/typefix: 0285f84 | au++ | Pugs/src/Pugs/Prim.hs:

[13:52] <dalek> Pugs.hs/wip/typefix: * WIP: Type methods for Int/Num/Rat from coke++

[13:52] <dalek> Pugs.hs/wip/typefix: review: https://github.com/perl6/Pugs.hs/commit/0285f8489f

[13:52] *** tokuhir__ joined
[13:56] *** tokuhirom left
[13:56] *** wooden left
[13:57] *** sftp joined
[13:59] *** kaleem left
[14:03] <tadzik> nom: Int.^methods.grep(*.name ne "").sort

[14:03] <p6eval> rakudo 3c5838: OUTPUT«(signal SEGV)»

[14:04] *** benabik left
[14:08] *** sisar joined
[14:10] <moritz> tadzik: [X] Achievement unlocked

[14:10] <tadzik> :)

[14:11] <tadzik> it's all the _decontainerize() thingy

[14:11] *** plobsing left
[14:11] <moritz> it's in decontainerize from find_best_candidate

[14:12] <tadzik> nom: Int.^methods.grep(*.name ne "").eager

[14:12] <p6eval> rakudo 3c5838: OUTPUT«(signal SEGV)»

[14:13] *** plobsing joined
[14:13] <[Coke]> au: you're back!

[14:13] <moritz> perl6: say so "\n" ~~ /\v/

[14:13] <p6eval> pugs b927740: OUTPUT«*** No such subroutine: "&so"␤    at /tmp/joxO82VRHP line 1, column 5 - line 2, column 1␤»

[14:13] <p6eval> ..rakudo 3c5838, niecza v15-4-g1f35f89: OUTPUT«True␤»

[14:14] <moritz> perl6: say so "\r" ~~ /\v/

[14:14] <p6eval> pugs b927740: OUTPUT«*** No such subroutine: "&so"␤    at /tmp/TXLG8zNONa line 1, column 5 - line 2, column 1␤»

[14:14] <p6eval> ..rakudo 3c5838, niecza v15-4-g1f35f89: OUTPUT«True␤»

[14:14] <moritz> perl6: say so "\r" ~~ /\h/

[14:14] <p6eval> rakudo 3c5838, niecza v15-4-g1f35f89: OUTPUT«False␤»

[14:14] <p6eval> ..pugs b927740: OUTPUT«*** No such subroutine: "&so"␤    at /tmp/TS5s0QKXXK line 1, column 5 - line 2, column 1␤»

[14:16] *** kaleem joined
[14:16] <[Coke]> do we announce git issues on github.com/perl6 projects here?

[14:16] <[Coke]> (should we?)

[14:17] <masak> my autopun lightning talk contains 13 autopuns :)

[14:17] <[Coke]> au: any pointers on where to look to resolve that issue? I could not figure out with casual inspection where "Int" was originally defined.

[14:18] <moritz> masak: and is it self-referential?

[14:19] <masak> the talk? I'm too confused to know.

[14:19] <masak> there's a high chance it is.

[14:20] *** Trashlord left
[14:21] <au> [Coke]: just a sec...

[14:22] *** fsergot joined
[14:22] <fsergot> o/

[14:23] <[Coke]> au++

[14:23] <tadzik> \o

[14:24] <[Coke]> karma au

[14:24] <aloha> au has karma of 34.

[14:24] <[Coke]> n: my $a="au"; $a++ for 1..34; say $a

[14:24] <p6eval> niecza v15-4-g1f35f89: OUTPUT«cc␤»

[14:31] *** Trashlord joined
[14:32] <sisar> rant: there is no easy way to make a private gist public :( However, there is a workaround: http://chris.dzombak.name/blog/2011/05/making-private-gist-public

[14:34] <jnthn> heh, I thought it was about .gist in Perl 6 :P

[14:34] <moritz> sisar: you can just share the URL

[14:34] <dalek> Pugs.hs/wip/typefix: cb4d7e9 | au++ | Pugs/src/Pugs/Prim.hs:

[14:34] <dalek> Pugs.hs/wip/typefix: * Line up return types of Int/Rat/Num and declare op0 fallbacks.

[14:34] <dalek> Pugs.hs/wip/typefix: review: https://github.com/perl6/Pugs.hs/commit/cb4d7e9eff

[14:34] <au> [Coke]: please checkout wip/typefix and see if it passes a bit more tests, and merge back to master if there's no regression

[14:35] <moritz> sisar: also wrt github I'd not rant, but simply write the friendly github staff with a feature request

[14:37] <sisar> moritz: will do

[14:37] <sisar> moritz: hae a look: https://gist.github.com/1986576

[14:37] <sisar> *have

[14:37] <[Coke]> au++ # roger.

[14:37] <sisar> line 1 and line 10 are exactly equal

[14:38] <moritz> std: for map { $_, $_}, 1..3 { .say;}

[14:38] <p6eval> std 1ad3292: OUTPUT«ok 00:01 112m␤»

[14:38] <sisar> moritz: weird, ain't it ?

[14:38] <tadzik> nom: for map { $_, $_}, 1..3 {.say;}

[14:38] <p6eval> rakudo 3c5838: OUTPUT«1␤1␤2␤2␤3␤3␤»

[14:38] <tadzik> nom: for map {$_, $_}, 1..3 { .say;}

[14:38] <p6eval> rakudo 3c5838: OUTPUT«1␤1␤2␤2␤3␤3␤»

[14:39] <tadzik> oh, huh

[14:39] <[Coke]> au: so far, so good. I'll re-fudge roast later today, and merge things back. Thank!

[14:40] <[Coke]> *Thanks!

[14:40] <sisar> tadzik: any insight ?

[14:40] <au> np, glad to help :)

[14:40] <au> -> &

[14:40] <tadzik> sisar: nope

[14:43] <masak> std: -> & {}

[14:43] <p6eval> std 1ad3292: OUTPUT«ok 00:01 109m␤»

[14:44] <tadzik> seen slunski

[14:44] <aloha> slunski was last seen in  15405 days 14 hours ago .

[14:44] <tadzik> I guess that's aloha's for "never"

[14:44] <masak> seen sluszky

[14:44] <aloha> sluszky was last seen in  15405 days 14 hours ago .

[14:44] <masak> seen druszky

[14:44] <aloha> druszky was last seen in  15405 days 14 hours ago .

[14:44] <masak> seems so :)

[14:45] <moritz> [Coke]: should pugs' "make spectest" pass?

[14:47] <dalek> Pugs.hs/so: e0ec661 | moritz++ | Pugs/src/Pugs/Prim.hs:

[14:47] <dalek> Pugs.hs/so: try to implement &so

[14:47] <dalek> Pugs.hs/so: review: https://github.com/perl6/Pugs.hs/commit/e0ec6613ad

[14:47] <moritz> [Coke]: I have no idea if that worked or not, but if it did, you can merge that branch :-)

[14:48] *** kaleem left
[14:48] *** kaleem joined
[14:48] *** lestrrat left
[14:49] *** benabik joined
[14:49] *** lestrrat joined
[14:52] *** kaleem left
[14:52] <masak> moritz++

[14:53] <au> . o O { Travis CI for spectest }

[14:54] <PerlJam> au: don't they have to "enable" perl 6 support?

[14:56] *** tokuhir__ left
[14:57] <au> mm? a perl5 "test.pl" that builds and runs spectest and outputs TAP should work

[14:58] <flussence> ooh, I have one of those

[14:58] <au> s/test.pl/make test/

[15:01] <[Coke]> moritz: there is no spectest target, but the tests mostly pass yes. might be a dozen failures or so.

[15:01] *** xinming left
[15:01] <[Coke]> moritz++ #thanks.

[15:03] *** xinming joined
[15:05] *** ggoebel left
[15:11] *** skids joined
[15:14] <masak> autopun talk delivered. :)

[15:14] <colomon> masak++

[15:14] <masak> there was the appropriate amount of rejoicing ;)

[15:14] <tadzik> it was awesome!

[15:15] <masak> thanks.

[15:16] *** kaare_ joined
[15:19] *** ggoebel joined
[15:19] *** ggoebel left
[15:20] <sisar> masak: upload slides !

[15:21] * sisar has submitted a feature request to github about gist

[15:24] *** marmalade joined
[15:28] <masak> sisar: ok, I'll try.

[15:28] <masak> oh, Fuad was here this morning.

[15:31] <masak> rafl: I'll put up the macro slides for you too.

[15:33] <sisar> rafl ?

[15:33] <sisar> oh, never mind

[15:33] <masak> he asked for them in the backlog.

[15:36] <sisar> our Niecza $developer: https://gist.github.com/1986826. What is wrong ?

[15:38] <masak> my two talks: https://github.com/masak/gpw-talks

[15:38] <masak> grab them while they're hot.

[15:38] <masak> I'll put them up properly on http://feather.perl6.nl/~masak/ once I get proper FTP access.

[15:39] <sisar> masak++

[15:40] <moritz> masak: you can scp to feather, the ssh port is open here

[15:40] <moritz> oh nice, "age: in 14 minutes"

[15:40] <jnthn> :D

[15:41] <jnthn> Slides from the future

[15:41] <tadzik> The Distant Future

[15:41] <moritz> that's so fitting :-)

[15:41] <masak> moritz: yeah, my VM's clock is still off.

[15:41] * moritz is in the conference office, at the place where we did the p6 hackathon

[15:42] <tadzik> seen bbkr

[15:42] <aloha> bbkr was last seen in #perl6 4 days 14 hours ago joining the channel.

[15:43] <PerlJam> "dive-through example"?  I like that.

[15:43] <moritz> masak++'s autopun talk was really hilarious

[15:43] <PerlJam> indeed masak++

[15:43] <masak> :)

[15:43] <PerlJam> I didn't get the "je ne sais quoi" one though    ;-)

[15:44] <moritz> having a whole room full of laughing geeks is a nearly self-amplifying

[15:44] <moritz> after that talk, everybody would have laughed about "chicken" too :-)

[15:44] <fsergot> tadzik: What about your talk? :)

[15:44] <tadzik> PerlJam: I guess that means "I don't know" or such

[15:45] <tadzik> fsergot: wasn't too bad, it almost filled 15 minutes out of 20 :)

[15:45] <tadzik> luckily, audience++ came to the rescue

[15:45] <tadzik> I'm quite satisfied with it; wasn't perfect, but I see an improvement over previous talks I did

[15:45] <PerlJam> masak: I *really* like slide 14 of your macros talk

[15:46] <jnthn> My slides are at http://jnthn.net/papers/2012-gpw-meta-programming.pdf btw

[15:46] <moritz> fwiw my slides are at http://moritz.faui2k3.org/files/p6-features/

[15:46] <jnthn> Suddenly...slides!

[15:46] <moritz> and I was lucky to get enough questions from the audience to fill my 40 minutes

[15:47] *** PacoAir joined
[15:48] *** Patterner left
[15:49] <tadzik> mine is on http://tjs.azalayah.net/index.html if anyone wants to take a look

[15:49] <masak> PerlJam: thanks :)

[15:50] <masak> PerlJam: implementing macros means having a keen sense of compile/run moding.

[15:50] *** Psyche^ joined
[15:50] *** Psyche^ is now known as Patterner

[15:55] *** preflex left
[15:55] *** preflex_ joined
[15:56] *** preflex_ is now known as preflex

[16:00] *** thou joined
[16:02] *** havenn joined
[16:09] *** plobsing left
[16:10] <moritz> std: 'a' ~~ /a*+/

[16:10] <p6eval> std 1ad3292: OUTPUT«ok 00:01 111m␤»

[16:11] <masak> yeah, *+ means *?

[16:11] <masak> hm, or was it *: ?

[16:11] <masak> I think the latter.

[16:12] *** lumi___ left
[16:12] <TimToady> yes

[16:13] *** zipf joined
[16:13] *** zipf left
[16:14] *** birdwindupbird left
[16:18] *** lumi__ joined
[16:30] <dalek> rakudo/nom: 3ce390d | jonathan++ | src/Perl6/ (2 files):

[16:30] <dalek> rakudo/nom: Start collecting LEAVE, KEEP and UNDO phasers; not doing anything with them yet.

[16:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3ce390dbd5

[16:30] <dalek> rakudo/nom: a5b3ede | jonathan++ | src/core/Block.pm:

[16:30] <dalek> rakudo/nom: Keep a list that knows the order we should run LEAVE/KEEP/UNDO, since they should be considered as a single queue.

[16:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a5b3ede647

[16:30] <dalek> rakudo/nom: 0dbe16a | jonathan++ | src/core/Block.pm:

[16:30] <dalek> rakudo/nom: LEAVE/KEEP/UNDO should run in opposite order.

[16:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0dbe16a48b

[16:30] <dalek> rakudo/nom: d4bb162 | jonathan++ | src/ (4 files):

[16:30] <dalek> rakudo/nom: Incorporate various of the patches from mls++, with various updates and tweaked phasers lookup, to get LEAVE essentially working. May not be perfect, but passes a bunch of tests.

[16:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d4bb162acf

[16:30] <dalek> rakudo/nom: d31ad04 | jonathan++ | t/spectest.data:

[16:30] <dalek> rakudo/nom: Turn on a few tests that we now pass.

[16:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d31ad04e8c

[16:30] *** zipf joined
[16:30] <dalek> roast: d48e69f | jonathan++ | S04-phasers/descending-order.t:

[16:30] <dalek> roast: Fix a test that missed expectation of ENTER phaser.

[16:30] <dalek> roast: review: https://github.com/perl6/roast/commit/d48e69f4bb

[16:30] <dalek> roast: c95f0d1 | jonathan++ | S04-phasers/enter-leave.t:

[16:30] <dalek> roast: Fudge for Rakudo.

[16:30] <dalek> roast: review: https://github.com/perl6/roast/commit/c95f0d1719

[16:30] <tadzik> \o/

[16:32] <dalek> features: fcacff9 | jonathan++ | features.json:

[16:32] <dalek> features: Rakudo now implements ENTER and LEAVE.

[16:32] <dalek> features: review: https://github.com/perl6/features/commit/fcacff9492

[16:33] <moritz> nom: &x()

[16:33] <p6eval> rakudo 3c5838: OUTPUT«===SORRY!===␤Symbol '&x' not predeclared in <anonymous> (/tmp/z6RSDHBBtm:1)␤»

[16:33] * masak submits rakudobug

[16:34] *** zipf left
[16:35] <dalek> features: 872a7d3 | tadzik++ | features.json:

[16:35] <dalek> features: Rakudo now has Set, Bag and friends

[16:35] <dalek> features: review: https://github.com/perl6/features/commit/872a7d3473

[16:35] * masak un-submits rakudobug

[16:35] * moritz 's fault

[16:36] <masak> there's plenty of real bugs waiting for us :)

[16:40] *** envi_ left
[16:43] <PerlJam> jnthn: slide 45 says "the case class" instead of "the base class"

[16:43] <dalek> roast: a553a91 | jonathan++ | S04-phasers/next.t:

[16:43] <dalek> roast: Fudge for Rakudo.

[16:43] <dalek> roast: review: https://github.com/perl6/roast/commit/a553a91e2d

[16:44] <PerlJam> jnthn: slide 46 says:  multi trait_mod:(Mu:U $type, ...)     Looks like a missing <is>

[16:44] <PerlJam> jnthn: sorry, just now got around to checking out your slides for gpw :)

[16:45] <masak> yes, moritz++ noticed that omission during the talk as well.

[16:45] <jnthn> jnthn++ also noticed it during the talk

[16:45] <jnthn> :)

[16:47] *** nwc10 joined
[16:47] <dalek> rakudo/nom: ccd0ec1 | jonathan++ | t/spectest.data:

[16:47] <dalek> rakudo/nom: Run another test.

[16:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ccd0ec14f9

[16:51] <masak> social &

[16:51] *** nwc10 left
[16:53] <jnthn> socializing &

[17:01] <sorear> good * #perl6

[17:02] *** am0c joined
[17:02] <sorear> [Coke]: 70/90.perl means 70/(90.perl) => 70/'90' => 70/90

[17:04] <sorear> sisar: I suspect that you did a git pull, then tried to run niecza again without 'make'.  Usually this works, but if there have been additions to the C# api, it won't

[17:06] <PerlJam> why is is "ParametricRoleHOW" instead of just RoleHOW?

[17:06] <PerlJam> s:2nd/is/it/

[17:07] <sorear> because there are several kinds of role types

[17:07] *** _buno_ joined
[17:07] <sorear> you can't have a plain RoleHOW

[17:07] *** _buno_ left
[17:08] <PerlJam> seems like an artificial distinction to me.

[17:08] <PerlJam> Why not a ParametricClassHOW too ?

[17:08] <PerlJam> or a ParametricGrammarHOW?

[17:08] <PerlJam> etc.

[17:09] <PerlJam> Seems like the simpler thing is to say that they're all parametric with the possibility of a null parameter

[17:11] *** alester joined
[17:11] *** _buno_ joined
[17:11] *** plobsing joined
[17:12] *** _buno_ left
[17:12] *** _buno_ joined
[17:12] *** Trashlord left
[17:13] *** _buno_ left
[17:14] *** MayDaniel joined
[17:14] *** pothos left
[17:14] *** pothos joined
[17:16] *** MayDaniel left
[17:16] *** wtw left
[17:20] *** fglock joined
[17:28] *** am0c left
[17:34] *** bluescreen10 left
[17:39] *** benabik left
[17:43] *** havenn left
[17:44] <sorear> PerlJam: All explicitly defined roles *are* ParametricRoleHOW

[17:45] <sorear> When you say MyRole[Int], that's CurriedRoleHOW - still not applied because no ::?CLASS available

[17:45] *** benabik joined
[17:45] <sorear> once ::?CLASS is available (at compose time), you have a ConcreteRoleHOW

[17:47] *** sporous joined
[17:49] *** sporous left
[17:49] *** bluescreen10 joined
[17:53] *** havenn joined
[17:54] *** mj41 left
[17:56] <PerlJam> sorear: mostly I'm just quibbling over the name.  I see no benefit to calling it "ParametricRoleHOW" versus just "RoleHOW" and it keeps the nice (perhaps foolish) consistency with the other HOWs.

[17:57] *** Trashlord joined
[17:57] <TimToady> but which one should be the unmarked form?  you could just as easily argue that it should be the concrete one, sinceit's "closest" to the user

[17:58] <TimToady> one could also argue that the unmarked from should be the base role from which the other roles derive

[17:58] <PerlJam> I'd go the other way since HOWs are more abstract anyway 

[17:58] *** dakkar left
[18:03] *** havenn left
[18:05] <sjn> Silly question... are there any obvious wikis we could use as a "notepad" for the Perl 6 hackathon in Oslo?

[18:06] <sjn> is the Perl Foundation wiki meaningful place for stuff like that?

[18:07] <sjn> (is it necessary to have a wiki?)

[18:09] *** Chillance joined
[18:10] *** sporous joined
[18:11] *** havenn joined
[18:13] *** isBEKaml joined
[18:13] *** thou left
[18:34] *** sisar left
[18:36] *** wooden_ joined
[18:36] *** wooden_ left
[18:36] *** wooden_ joined
[18:44] <sorear> sjn: the TPF wiki is the obvious one, but I have some misgivings about anyone using it for any purpose

[18:45] <sorear> sjn: the traditional solution here is to use the pugs/mu repo as a wiki

[18:47] <awwaiid> could use a github repo wiki

[18:50] *** pothos left
[18:51] *** ReefOctop joined
[18:52] *** ReefOctop left
[19:04] *** bruges joined
[19:04] *** pernatiy left
[19:06] <[Coke]> github++ - easy enough to create a temp wiki wthere.

[19:12] *** att joined
[19:17] *** benabik left
[19:18] *** imarcusthis left
[19:24] *** imarcusthis joined
[19:24] <sorear> I wonder if it makes any sense to have a reified part/lazy part split on a multidimensional array.

[19:29] *** Trashlord left
[19:32] <[Coke]> n: say (70/90).perl

[19:33] <p6eval> niecza v15-4-g1f35f89: OUTPUT«<7/9>␤»

[19:33] <[Coke]> sorear++

[19:35] *** preflex_ joined
[19:36] *** havenn left
[19:38] *** preflex left
[19:38] *** preflex_ is now known as preflex

[19:42] *** ksi joined
[19:44] <sorear> [Coke]: hi.  do you still make test summaries broken down by synopsis?

[19:47] <[Coke]> that is a very manual process, so I only do it when someone asks and I have spare time.

[19:48] <sorear> ah.

[19:48] <sorear> (I'm not asking right now)

[19:51] *** MayDaniel joined
[19:52] *** birdwindupbird joined
[20:03] *** havenn joined
[20:05] <[Coke]> ping me after the week of the 20th. ;)

[20:05] <sorear> Why then?

[20:06] <colomon> recovered from St Patrick's day hangover?  ;)

[20:06] <sorear> o/ colomon

[20:06] <colomon> \o

[20:07] <[Coke]> a $dayjob induced brainfreeze

[20:07] <[Coke]> big project due that monday, in the UK to show off bits of it that week.

[20:07] <sorear> ah.

[20:07] <colomon> sorear: I'm hoping to have my 64-bit Windows machine in good enough shape to try niecza on it in another day or two.

[20:08] <sorear> eeeexclent

[20:09] * sorear is still trying to figure out what the sanest representation of multi-d arrays and hashes is

[20:09] <colomon> it needed a new motherboard, so I'm needing to reinstall a development environment from scratch on it.

[20:10] <[Coke]> I just got a 64bit macbook to play with, will try various perlsixes on that.

[20:12] <[Coke]> (again, not just yet. ;)

[20:13] <colomon> Once I've got the Windows machine running, I'm thinking I might reinstall linux on my big linux box and see if I can get everything working on that, too.

[20:14] *** thou joined
[20:17] * colomon expects he can't usefully help sorear++ figure out multi-d arrays and hashes, but is willing to be a sounding board if needed

[20:20] *** NamelessTee left
[20:22] *** benabik joined
[20:23] *** MayDaniel left
[20:28] *** gfldex left
[20:30] *** gfldex joined
[20:37] *** fglock left
[20:41] *** NamelessTee joined
[20:45] *** NamelessTee left
[20:46] *** fglock joined
[20:50] * fglock updates http://perlcabal.org/~fglock/perlito5.html

[20:50] <fglock> 80% done, 80% to go

[20:50] <TimToady> you can iterate that...

[20:55] * colomon has working SVN on his windows box!!!

[20:56] *** Moukeddar joined
[20:58] <[Coke]> \o/

[21:02] <[Coke]> perl6: say 0.Int

[21:02] <p6eval> pugs b927740: OUTPUT«*** No such method in class Int: "&Int"␤    at /tmp/m_kXnSGXXJ line 1, column 5 - line 2, column 1␤»

[21:02] <p6eval> ..rakudo 3c5838, niecza v15-4-g1f35f89: OUTPUT«0␤»

[21:03] *** birdwindupbird left
[21:05] * colomon has working git (and github access) on his windows box!

[21:06] <PerlJam> colomon: \o/  (*that* is cause for celebration :)

[21:07] *** GlitchMr left
[21:09] <dalek> nqp/new_make: ab98638 | bacek++ | 3rdparty/libtommath/Defines.mak:

[21:09] <dalek> nqp/new_make: Add included makefile for libtommath.

[21:09] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/ab986380a0

[21:09] <dalek> nqp/new_make: 8eddacf | bacek++ | src/6model/Defines.mak:

[21:09] <dalek> nqp/new_make: Start splitting 6model rules into separate makefile.

[21:09] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/8eddacf4a5

[21:09] <dalek> nqp/new_make: 492179a | bacek++ | tools/build/Makefile.in:

[21:09] <dalek> nqp/new_make: Remove bits from Makefile.in which were moved into separate makefiles.

[21:09] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/492179a890

[21:09] <dalek> nqp/new_make: 2a429c3 | bacek++ | src/6model/Defines.mak:

[21:09] <dalek> nqp/new_make: Add todo marker

[21:09] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/2a429c39d3

[21:10] *** NamelessTee joined
[21:13] *** fglock left
[21:14] <sjn> sorear: right, next question would be "is there a point doing it?" (or maybe that sho+uld have been the first one:-P)

[21:15] *** bruges left
[21:16] *** bruges joined
[21:16] *** y3llow_ joined
[21:16] *** y3llow left
[21:18] *** y3llow_ left
[21:19] *** y3llow joined
[21:20] *** alester left
[21:21] *** y3llow left
[21:21] *** y3llow joined
[21:23] *** y3llow left
[21:24] *** y3llow joined
[21:26] *** NamelessTee left
[21:34] <sjn> .u PILE OF

[21:34] <phenny> sjn: Sorry, no results for 'PILE OF'.

[21:34] <sjn> .u PILE

[21:34] <phenny> sjn: Sorry, no results for 'PILE'.

[21:35] <sjn> aw. no unicode 6.0? :-)

[21:35] *** PacoAir left
[21:38] *** bluescreen10 left
[21:39] *** Trashlord joined
[21:44] *** PacoAir joined
[21:44] *** alester joined
[21:47] *** Moukeddar left
[21:48] *** PacoAir left
[21:53] <dalek> nqp/new_make: c9ddedd | bacek++ | tools/build/Makefile.in:

[21:53] <dalek> nqp/new_make: Add includepath for 3rd party libraries

[21:53] <dalek> nqp/new_make: review: https://github.com/perl6/nqp/commit/c9ddedd3fe

[21:53] *** PacoAir joined
[21:54] *** PacoAir left
[21:55] *** PacoAir joined
[22:05] * [Coke] suggests niecza and rakudo get giant ascii art in their startup screen. ;)(

[22:05] <[Coke]> er, ;)

[22:09] *** skids left
[22:10] <PerlJam> giant unicode art

[22:10] <PerlJam> :)

[22:11] *** kaare_ left
[22:11] <benabik> The spec should require all implementations to output Camilla when starting the REPL.  :-D

[22:11] <PerlJam> benabik++

[22:13] *** PacoAir left
[22:30] <[Coke]> that'd be an excellent repl prompt. »ö« > say ?0

[22:31] <benabik> Re-ran pugs spectest: https://gist.github.com/1941582

[22:31] <benabik> (now with less complaining about locales!)

[22:33] *** att left
[22:38] *** benabik left
[22:39] <[Coke]> benanbik: when I run it the way it is, I get no complaints.

[22:39] *** benabik joined
[22:40] <[Coke]> I can try it with yours. if I still get no errors, I'll change it.

[22:40] <benabik> [Coke]: Likely your system has the ISO-8859-1 locale.  I imagine this is somewhat system-dependent.

[22:41] <benabik> I changed it to what my locale normally is.  I have no idea how portable it is.

[22:41] *** ksi left
[22:42] <[Coke]> benabik: with that change, I get more warnings.

[22:43] <benabik> I'm not sure why it sets LC_ALL anyway.

[22:44] <[Coke]> because without it, you get a ton more errors.

[22:44] <[Coke]> because it defaults to UTF8, IIRC.

[22:44] <[Coke]> s/errors/warnings

[22:45] <benabik> LC_ALL should be set to something sane by the platform.  Attempting to blindly set locale information is fraught with problems.

[22:45] <benabik> I think the only one you can be sure exists is "C".  And I'm not even sure of that.

[22:46] <[Coke]> I believe it is to compensate with the encoding of the spec files we're reading.

[22:46] <benabik> The spec tests aren't in UTF8?

[22:49] <[Coke]> I'm assuming not, but to be fair, au suggested the patch to avoid all the warnings.

[22:50] <benabik> Is it trying to avoid the decodeUTF8 messages?  Perl gives me piles of errors because en_US.ISO-8859-1 doesn't exist in OS X.  https://gist.github.com/1941582/da3846f2f5ee5229f5bada6ea77f2753bd18ffa2

[22:51] <[Coke]> Yes.

[22:51] <[Coke]> (trying to avoid the decodeUTF8)

[22:51] <benabik> Hm.

[22:52] <benabik> Ah-hah.  I have a en_US.ISO8859-1

[22:52] <benabik> Although using it still gives me some decodeUTF8 errors.

[22:53] *** ab5tract left
[22:54] <benabik> Nevermind.  It still gives me all the same decodeUTF8 errors.  Blah.

[22:57] * benabik can't win.

[22:57] <[Coke]> If you can find one that works for you, lemme know what it is, we can put in an alternate.

[22:58] <benabik> It seems odd to me that the spec tests are in Latin-1 anyway.

[22:59] <[Coke]> seems like we should standardize on utf8 (if that's indeed the problem.)

[23:07] <benabik> .u »

[23:07] <phenny> U+00BB RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK (»)

[23:13] *** havenn left
[23:14] <[Coke]> # 03/06/2012 - niecza++ ; pugs (32.14%); rakudo (0%)

[23:14] <[Coke]> "niecza",     20306,     9,   749,  1540, 22604, 23759

[23:14] <[Coke]> "pugs"  ,      6527,    38,  2838,  1645, 11047, 23568

[23:14] <[Coke]> "rakudo",         0, 20384,     0,     0, 20384, 23803

[23:14] <benabik> Rakudo 0?

[23:15] <[Coke]> (Can't exec "./perl6")

[23:15] <[Coke]> I'll see about fixing that and redoing today's run.

[23:18] *** havenn joined
[23:18] *** havenn left
[23:19] <benabik> It looks to me like Pugs is trying to convert a string from UTF8 that's already been decoded.

[23:19] <benabik> .u 9829

[23:19] <phenny> U+9829 CJK UNIFIED IDEOGRAPH-9829 (頩)

[23:21] *** leprevost joined
[23:21] <benabik> .u 2665

[23:21] <phenny> U+2665 BLACK HEART SUIT (♥)

[23:22] *** alester left
[23:22] <benabik> decodeUTF8': bad data: '\9829'  means it's reading the character U+2665 as UTF8 data.

[23:23] <benabik> Vim insists that the file is encoded in UTF-8, so I'm guessing there's something odd happening between the file and decodeUTF8 in Pugs.

[23:29] *** havenn joined
[23:33] *** benabik left
[23:44] *** Chillance left
[23:45] *** envi_ joined
[23:48] *** skids joined
[23:53] *** prammer left
[23:56] *** tokuhirom joined
[23:59] *** whiteknight joined
