[00:08] *** adu joined
[00:11] <flussence> hm, awkward.

[00:11] <flussence> this compile failure isn't caused by 32-bit *or* too new system libs

[00:13] *** geekosaur left
[00:14] *** geekosaur joined
[00:19] *** kurahaupo left
[00:19] *** kurahaupo joined
[00:23] *** adu left
[00:27] *** att left
[00:59] <pmichaud> phenny: tell felher there was a camera in the room with my first talk; I have no idea if the video was recorded or when it might appear.  Maybe ping the YAPC::NA organizers :-)

[00:59] <phenny> pmichaud: I'll pass that on when felher is around.

[01:04] *** scott_ joined
[01:05] *** scott_ is now known as Guest37061

[01:10] *** am0c joined
[01:11] *** Psyche^ joined
[01:11] *** cj__ joined
[01:12] *** Patterner left
[01:12] *** cj left
[01:12] *** renormalist left
[01:12] *** Psyche^ is now known as Patterner

[01:17] *** UncleFester6 joined
[01:19] <UncleFester6> flussence:  it just occurred to me that your failure is on a netbook and mine is on a laptop.  Any ideas on testing if it is a limited memory problem?

[01:19] <UncleFester6> I think my laptop has 1 GIG ...

[01:19] <flussence> hm, mine's got 1GB + about half a gig of swap. Never ran out of memory with it though...

[01:20] <sorear> rakudo needs about 1-1.5 G currently I think

[01:20] <flussence> it's 32-bit, usually about 800MB there

[01:22] *** hypolin joined
[01:22] <flussence> and it fails a bit too quickly to be OOM, I think.

[01:22] *** hypolin left
[01:29] *** Guest35265 left
[01:39] <UncleFester6> flussence: if your desktop uses bash you might try ulimit to build with limited memory ... just a thougt - I'll try to increas my swap tomorrow

[01:44] *** mcglk left
[01:44] *** vlixes left
[01:44] *** mcglk joined
[01:44] *** mcglk_ joined
[01:44] *** mcglk left
[01:44] *** mcglk_ is now known as mcglk

[01:44] *** mcglk left
[01:45] <flussence> I might give that a try tomorrow

[01:45] <flussence> &

[01:46] *** UncleFester6 left
[01:47] *** mcglk joined
[01:55] *** tyatpi left
[01:57] *** tyatpi joined
[01:58] *** mcglk left
[01:58] *** mcglk joined
[02:06] *** aloha left
[02:09] *** adu joined
[02:12] *** colomon joined
[02:13] *** raiph joined
[02:24] <adu> I'm going to try being traditional here:

[02:24] <adu> o/

[02:28] *** quiefanatic joined
[02:28] <quiefanatic> Good ** #perl6

[02:28] <adu> hi quiefanatic 

[02:29] *** quiefanatic is now known as quietfanatic

[02:29] <quietfanatic> Not sure what quie is but I'm probably not it.

[02:30] <adu> heh

[02:30] <adu> tab completion gone wrong

[02:30] * adu loves it when stuff justifies, tho

[02:30] <quietfanatic> No, it was me typing my nick in wrong

[02:31] <quietfanatic> but also that I guess

[02:31] <raiph> o/

[02:31] <quietfanatic> \o

[02:32] <adu> o/

[02:33] <sorear> o/ quietfanatic

[02:33] <raiph> reading pmichaud's list slides http://pmichaud.com/2012/pres/yapcna-lists-1/slides/start.html

[02:33] <raiph> "By default, arguments bind one-to-one without flattening"

[02:34] <raiph> but "Slurpy parameter is both lazy and flattening"

[02:35] <raiph> have to do ** for non-flattening slurpy

[02:36] <quietfanatic> Still think the slurpy should be | to match with prefix:<|>

[02:36] <quietfanatic> but who listens to me

[02:36] <raiph> might be nicer to be consistent, and have *@sluroy mean non-flattening

[02:36] <raiph> s/sluroy/slurpy/

[02:36] <raiph> quietfanatic++

[02:36] <quietfanatic> Well, in other places, ** is a multi-dimensional version of *

[02:36] <raiph> that's what i was about to add

[02:37] <quietfanatic> like, I think @lol[*] is different from @lol[**]

[02:37] <quietfanatic> I could just be making this up though

[02:38] <raiph> quietfanatic: are you saying that's a counter argument to using |*@slurpy (or *|@slurpy)?

[02:38] <quietfanatic> raiph: No, it's a justification for *@slurpy being 1-dimensional and **@slurpy being multidimensional

[02:39] <quietfanatic> With | I guess it would be |@slurpy and ||@slurpy

[02:39] *** mcglk left
[02:39] <quietfanatic> Hmm, maybe that's not such a good idea after all

[02:39] *** mcglk joined
[02:39] <adu> omg, I don't understand

[02:40] <adu> what's the difference between my @a = 1,2,3; and my $c = [1,2,3];?

[02:40] <raiph> oh i wasn't thinking | for indicating slurpy, just flattening, to be consistent with flattening on call

[02:40] <adu> (slide15)

[02:40] <quietfanatic> Hm

[02:41] <adu> python uses * for slurpy

[02:41] <sorear> adu: the first one declares @a, the second one declares $c

[02:42] <quietfanatic> adu: They do the same thing in that statement, but in one case you have an @ variable and in one case you have a $ variable

[02:42] <sorear> they are two different variables, the sigil is part of the name

[02:42] <quietfanatic> adu: @a will generally flatten, and $a will never flatten even if it contains a list

[02:42] <adu> is this something I would know if I knew Perl5?

[02:42] <quietfanatic> Not exactly, no

[02:43] <quietfanatic> In Perl5, @a must always be a list, and $a must be either a scalar or a reference to a list

[02:43] *** leprevost joined
[02:43] <quietfanatic> In Perl6, everything is a reference (kinda), so @a and $a are stored the same way

[02:44] <quietfanatic> The only difference is that @a may only contain something that does the Positional[] role, and it will automatically flatten in some contexts.

[02:44] <adu> I think I'll stick with parsing XML, that's easy

[02:44] <quietfanatic> like in for @a { .say }

[02:45] <quietfanatic> hrrm

[02:45] <adu> so if I want non-flattening positional objects, then I should always use $?

[02:45] <quietfanatic> I guess

[02:45] <quietfanatic> yes.

[02:46] <adu> I'm used to seeing some funky notation when you want flattening, like ',@'

[02:46] *** Chillance left
[02:46] <raiph> adu: i don't think it's that black and white

[02:47] *** sftp left
[02:47] <raiph> adu: i think scalar containers generally don't flatten, positionals do

[02:48] <raiph> s/positionals do/positionals generally do/

[02:48] *** mcglk left
[02:48] <raiph> but you can be explicit, to make either go the other way 

[02:48] <adu> but if I say my $y = @x; then can't I do $y[2]? which would imply it supports the positional role

[02:49] <quietfanatic> You can.

[02:49] <raiph> and, as this is perl, there are probably exceptions when that's the best thing overall

[02:49] <quietfanatic> $ is the least restrictive sigil.

[02:49] <quietfanatic> @ requires Positional, % requires Associative, and & requires Callable

[02:49] <quietfanatic> , I believe.

[02:50] <raiph> adu: hence the "in general" bit of "In general, non-scalars interpolate ("flatten") in lists, and scalars do not:  "

[02:51] <adu> so @ implies Positional, % implies Associative?

[02:51] <quietfanatic> yes

[02:51] <raiph> goodnight all

[02:51] <quietfanatic> at least, according to how I heard it from TimToady a few years ago :)

[02:51] <quietfanatic> night raiph

[02:52] <adu> ooo there is a ',@'

[02:52] <adu> .list

[02:52] <adu> I like that

[02:52] <adu> raiph: good night

[02:52] *** raiph left
[02:53] <quietfanatic> $a.list is equivalent to @($a), I believe

[02:53] <quietfanatic> and @a.item is equivalent to $(@a)

[02:53] <quietfanatic> and $a.lol is equivalent to @@($a)

[02:54] *** tyatpi_ left
[02:55] <quietfanatic> Check that; TimToady says there's no @@() any more

[02:55] *** tyatpi_ joined
[02:58] *** awwaiid left
[03:03] <adu> a "few years ago"?

[03:03] <quietfanatic> Perl 6 has been around quite a while, though it's been mutating.

[03:03] *** awwaiid joined
[03:04] <adu> I remember hearing about Parrot 2006 ish

[03:05] <quietfanatic> Perl 6 first started being designed in 2000ish

[03:06] <[Coke]> adu: parrot dates back to 2001 or so

[03:07] <adu> I seem to remember hearing that

[03:07] <quietfanatic> Parrot was designed primarily with p6 in mind, though it was hoping to also support p5

[03:07] <quietfanatic> the latter project being called PONIE

[03:08] <sorear> PONIE was officially abandoned a couple years ago

[03:08] <adu> I thought no one understood p5 enough to reimplement it

[03:08] <quietfanatic> Yep.  Turns out only Perl can run perl. :)

[03:08] <quietfanatic> (5)

[03:09] <adu> I could care less about ponie, pynie, pruby or whatever else used to run on parrot, I just need a scheme

[03:09] <quietfanatic> Don't quote me on this, but I don't think Parrot is going to survive once Rakudo supports another platform.

[03:10] <adu> and I've looked into what code I could find (most of what used to be in /languages is pretty hard to locate now)

[03:11] <quietfanatic> though that probably depends on whether m0 ever comes around.

[03:11] <[Coke]> adu: http://trac.parrot.org/parrot/wiki/Languages

[03:12] <adu> [Coke]: yeah, I know, most of those links are dead

[03:12] <[Coke]> (linked to from http://parrot.org/languages)

[03:12] <adu> hence "hard to locate"

[03:12] <sorear> Ethernet will never die.

[03:13] <sorear> Any system developed to replace it will be called "Ethernet".

[03:13] <adu> the two links I'm sad about are: pheme and scheme/p5

[03:14] <quietfanatic> A rose by any other smell...

[03:14] *** mberends joined
[03:14] <adu> right

[03:14] <adu> but eclectus works, but it isn't written in Parrot/PGE/Perl6Grammars, it's written in pure scheme

[03:14] <adu> pheme is written in Perl6, and I'd like to find it so I can borrow ideas

[03:15] <adu> but I can't find it

[03:15] <sorear> mberends?  You return?

[03:15] <mberends> heh

[03:15] <quietfanatic> How is a scheme implementation written in scheme on Parrot?

[03:15] <[Coke]> adu: I clicked on the first 18 or so. all but 2 links work.

[03:15] <adu> [Coke]: probably the ones I just mentioned

[03:16] <mberends> sorear: it would be rude not to

[03:16] <[Coke]> "most are dead". please keep the hyperbole to a minimum. ;)

[03:16] <[Coke]> ironically, those are ones originally hosted in parrot's svn server. they are probably there, just not updated to point at their new git location.

[03:17] <[Coke]> https://github.com/parrot/pheme

[03:18] <[Coke]> last updated: 2 years ago.

[03:21] <adu> oOo https://github.com/parrot/parrot/tree/00edc124dc8fb07f03f256bcf81fc14262268478/languages/scheme

[03:21] <adu> found it

[03:21] <[Coke]> since I found it, perhaps you could update the wiki page for me to point to the new location.

[03:21] <adu> you found pheme, i found scheme/p5

[03:22] <[Coke]> nice.

[03:22] <adu> I don't see an edit button

[03:26] <[Coke]> are you logged in?

[03:26] * adu registered

[03:26] <[Coke]> FYI, pheme builds but fails immediately at runtime. I'll see if I can resurrect it.

[03:26] <adu> I didn't get an email yet, can I still login?

[03:26] <adu> I can do the dirty work

[03:27] <[Coke]> eh. rather than fight it, I'd probably settle for opening a github issue at this piont.

[03:29] <adu> I still don't see an edit button

[03:29] *** betterworld left
[03:30] *** benabik left
[03:30] *** betterworld joined
[03:31] <[Coke]> there's a reason parrot folk don't use trac much anymore.

[03:32] *** benabik joined
[03:33] <[Coke]> ah. https://github.com/parrot/parrot/wiki/Languages

[03:35] <pmichaud> I bet pheme could be quickly rewritten in nqp or perl6 :-)

[03:36] <pmichaud> fsvo "quickly" :-)

[03:37] <pmichaud> afk # sleep or something

[03:38] <pmichaud> mberends: o/ !!!!

[03:38] * pmichaud notices a nick he hasn't seen in a while.

[03:40] <mberends> pmichaud: hi! thanks for email, will respond after getting enough bandwidth to watch the videos in a day or two :-)

[03:41] <pmichaud> mberends: take your time; glad you got them, hope all is well with you

[03:41] <mberends> yes, and ditto for you. I must also be afk for some hours &

[03:42] <pmichaud> same here -- bbl

[03:42] <pmichaud> afk # sleep or something, again

[03:45] *** xinming left
[03:45] <[Coke]> msg pmichaud I have to rewrite partcl-nqp in nqp before tackling pheme that way

[03:45] <[Coke]> ETOOMANY bots, he'll get it in backscroll.

[03:46] *** xinming joined
[03:46] *** neo_wulf joined
[03:47] *** leprevost left
[03:48] *** araujo left
[03:52] *** araujo joined
[04:03] *** neo_wulf left
[04:06] <sisar> [Coke]: http://wiki.perl6.org/phenny (re msg ...)

[04:09] <[Coke]> sisar: yes, thank ou.

[04:13] *** spaceships left
[04:16] *** gardnan joined
[04:18] <quietfanatic> good night #perl6

[04:50] *** cog_ joined
[04:53] *** cognominal left
[04:53] *** geekosaur left
[04:56] *** geekosaur joined
[04:56] *** birdwindupbird joined
[05:05] *** sisar left
[05:39] *** gardnan left
[05:45] <dalek> perl6.org: 742d0e5 | (John Gabriele)++ | source/ (2 files):

[05:45] <dalek> perl6.org: Added links to categorized articles and videos pages on the wiki.

[05:45] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/742d0e5b67

[05:46] *** fhelmberger joined
[05:58] *** cognominal joined
[05:58] *** kaleem joined
[06:01] *** cog_ left
[06:03] *** adu left
[06:07] *** wtw joined
[06:17] *** quietfanatic left
[06:43] *** stephenlb left
[06:55] <sorear> seen pmurias

[07:06] *** brrt joined
[07:07] *** kresike joined
[07:07] <kresike> good morning all you happy perl6 people

[07:13] <moritz> \o

[07:13] *** sftp joined
[07:15] <frettled> Goooood moooorning! :)

[07:22] <tadzik> hello hello

[07:22] <eiro> felher, no streaming at all at fpw

[07:23] <eiro> no recording for the classrooms 

[07:23] <eiro> but i really hope we'll do screencasts after the event

[07:23] <eiro> for the moment, i just can't install panda btw ;) 

[07:26] <tadzik> oh noes

[07:30] <moritz> tadzik: speaking of panda, can you please push your .pod-installing commit to a branch?

[07:30] <tadzik> moritz: oh, sure

[07:31] <dalek> panda/pod-installing: 551cdc5 | tadzik++ | / (4 files):

[07:31] <dalek> panda/pod-installing: First attempt at installing pod aside .pms and .pirs. Tests work, modules not really

[07:31] <dalek> panda/pod-installing: review: https://github.com/tadzik/panda/commit/551cdc5393

[07:31] <tadzik> there we are

[07:36] <sorear> good morning kresike, frettled, tadzik

[07:36] <eiro> tadzik, it's about a :3000 somewhere in nl

[07:44] <tadzik> oh

[07:44] <tadzik> yes

[07:47] *** sftp left
[07:47] <tadzik> seems that the Dancer app that was serving the modules list broke :(

[07:49] <tadzik> eiro: ok, should be fine now

[08:02] *** sftp joined
[08:03] *** mberends_ joined
[08:05] *** sporous left
[08:05] *** sporous joined
[08:07] *** mberends left
[08:10] *** cognominal left
[08:10] *** cognominal joined
[08:11] *** odoacre left
[08:12] <masak> *yawn*

[08:12] <masak> morning, meatbrains.

[08:12] <frettled> mmmmeat

[08:12] *** mberends_ left
[08:13] <moritz> good masak, morning

[08:13] *** odoacre joined
[08:13] <masak> They're Made Out Of Meat. http://www.youtube.com/watch?v=gaFZTAOb7IE

[08:13] *** mberends joined
[08:13] <masak> moritz: I'd like to chime in with the others in congratulating you. warm congratulations and best wishes.

[08:13] <mberends> o/ masak

[08:13] <masak> I know this was only a ceremony, and that the paperwork happened two years ago. ;)

[08:14] <masak> mberends!!! \o/

[08:14] <moritz> masak: thank you. And it wasn't only a ceremony, it was also a really great party :-)

[08:14] <masak> sounds wonderful.

[08:16] * masak breaks a bit of fast

[08:16] <mberends> dunno how moritz passed the waltz test. stealth, methinks ;-)

[08:18] <moritz> everybody was too polite to point out I failed it, t'was all :-)

[08:18] <sorear> masak!

[08:19] <tadzik> hello mberends, masak :)

[08:19] *** sergot joined
[08:19] <sergot> hi o/

[08:19] <sorear> o/ sergot 

[08:19] <mberends> dobro jutro, ljudi :)

[08:22] <eiro> tadzik, a dancer app ? not a bailador one ? 

[08:23] <tadzik> eiro: no, it predates Bailador :)

[08:23] <tadzik> but it should be possible for it to run on bailador

[08:23] <eiro> tadzik, any source somewhere ?

[08:23] <tadzik> it's just that sometimes the response times may reach 10 seconds or so :)

[08:23] <eiro> why ? 

[08:24] <tadzik> eiro: just this: https://gist.github.com/2953005

[08:24] <tadzik> eiro: JSON parsing is still not so fast, for big files as the modules list

[08:24] <tadzik> although it's well below 10 seconds these days, I think

[08:24] <eiro> (i don't use dancer anymore btw: plack is everything i need 

[08:25] <eiro> tadzik, any NCI for that ? 

[08:25] <tadzik> eiro: nope

[08:26] *** xinming left
[08:28] *** xinming joined
[08:29] <eiro> well ... that's because you parse all the json at every request 

[08:29] <eiro> any way to see the json ? 

[08:29] <eiro> how is it built ? 

[08:29] <tadzik> I don't have to do that

[08:30] <tadzik> I could keep a hash, and rebuild it only if the file is newer than it

[08:30] <tadzik> but when I'd have to reload it, that'd take time

[08:30] <eiro> got it 

[08:31] <eiro> tadzik, why not create a json by module ? you don't have to reload the complete database then 

[08:31] <tadzik> create json by module?

[08:31] <arnsholt> eiro: If you're a bit familiar with C, it might not be too hard to hack together a binding to a C JSON library with Zavolaj

[08:32] <moritz> tadzik: I think eiro wants to have many smaller JSON files instead of a big one

[08:32] <eiro> tadzik, yep: i think it's another idea to work on atfpw 

[08:33] <eiro> moritz, right 

[08:33] <moritz> so that one parses a smaller file when talking about a single module

[08:33] <eiro> arnsholt, any good docs about it ? 

[08:33] <eiro> tadzik, i'm pretty sure there no need of json actually 

[08:33] <tadzik> possibly :)

[08:33] <eiro> we can do something way faster and written in perl6

[08:33] <moritz> it was probably just the most convenient at that time

[08:33] <sorear> eiro: at the same time?

[08:33] <tadzik> parsing projects.json apparently takes 1340094565 1340094568 3 3

[08:34] <tadzik> whatever that means :)

[08:34] <tadzik> https://gist.github.com/2953027

[08:34] <eiro> sorear, sorry ? 

[08:34] <tadzik> so about 3 seconds actually

[08:34] <eiro> same of what ? 

[08:35] <sorear> eiro: california idiom, how to explain...

[08:36] <sorear> eiro: 'written in perl 6' and 'way faster' - both of these are, individually, doable

[08:38] <eiro> oh ... yes! the idea is to write perl6 stuff in perl6 

[08:39] <eiro> the json file can be split on little files with 1 info by line: nothing to parse: just aquire IOs

[08:39] <tadzik> oh, mst is coming for fpw

[08:39] <eiro> i asume IOs are pretty fast C bindings, so the server can run quickly :)

[08:40] <eiro> tadzik, yep :)

[08:40] <tadzik> nope :)

[08:40] <tadzik> the server is pure perl 6

[08:40] <tadzik> well, the one that I usually use for bailador

[08:40] <tadzik> and it's the only one I know of that works with bailador

[08:40] <eiro> tadzik, yep but perl6 uses rakudo for IOs and rakudo uses IO syscalls, right ? 

[08:41] <eiro> so how can this be slow? 

[08:41] <tadzik> well, syscalls are not the problem

[08:41] <tadzik> but things like parsing HTTP headers in perl 6 may not be too fast on rakud'

[08:41] <sorear> eiro: syscalls are the only way to do I/O on a Unix system as non-root

[08:45] <masak> sorear! \o/

[08:45] <sorear> masak: how are you?  that was a long plane trip! :D

[08:47] <masak> heh.

[08:47] <masak> parts of London had good wifi, but I didn't have an urgent need to check in on all y'all.

[08:47] *** dakkar joined
[08:51] <arnsholt> eiro: The Zavolaj docs are pretty good, yeah

[08:51] <arnsholt> There's also the test suite, which is pretty simple

[08:52] <arnsholt> And if all else fails, you can ask me =)

[08:53] <moritz> one can also look at DBIish for examples

[08:53] <arnsholt> Quite

[08:59] <arnsholt> And this reminds me that I should try to get back to getting strings in structs working

[08:59] <eiro> re

[08:59] <eiro> sorear, yep! so this part is fast. storing a simple line into a scalar must be fast also (i assume= 

[09:00] <eiro> it come slow when it comes to parsing

[09:00] <arnsholt> Maybe I can find some of those tuits in the couch...

[09:00] <eiro> i don't like DMBS ... perhaps a redis client must be more usefull 

[09:01] <sorear> You'd be suprised what things aren't fast in current p6 impls

[09:01] <sorear> There's a lot of hidden logic in an assignment statement

[09:01] <eiro> arnsholt, i'll test 

[09:06] *** dakkar_ joined
[09:06] <moritz> though scalar assignment is done in C in Rakudo, and shouldn't be too slow ;-)

[09:06] *** dakkar left
[09:06] *** dakkar_ is now known as dakkar

[09:07] <eiro> tadzik, 

[09:07] <eiro> https://gist.github.com/2953133

[09:08] <eiro> ok then.. my question is: honestly: what is the current possible daily usage of perl6 ? 

[09:10] <tadzik> eiro: huh, when did that happen

[09:11] <tadzik> I think it's also now possible to write the bootstrap.pl in pure perl 6, since we have 'use lib' now

[09:13] *** sunflower joined
[09:16] <dalek> niecza/non-bootstrap: 904e349 | sorear++ | lib/ (2 files):

[09:16] <dalek> niecza/non-bootstrap: Actions pt 15

[09:16] <dalek> niecza/non-bootstrap: review: https://github.com/sorear/niecza/commit/904e349a24

[09:17] <sorear> sleep&

[09:17] <frettled> sleep: missing operand

[09:27] *** jerome_ left
[09:31] <masak> sleep well, sorear. dream of the conjunction of 'written in perl6' and 'way faster'.

[09:36] *** tokuhirom joined
[09:40] *** jerome_ joined
[09:51] *** xinming left
[09:52] *** xinming joined
[09:52] *** am0c left
[10:02] *** orafu joined
[10:04] *** snearch joined
[10:05] *** dakkar left
[10:07] <eiro> tadzik, it happens when i launch boostrap.sh 

[10:08] <eiro> sorry to not investigate myself 

[10:08] <eiro> no time 

[10:08] <eiro> bootstrap.pl++

[10:13] *** Guest37061 left
[10:17] *** apejens joined
[10:26] <dalek> rakudo/no-strict: a9401fb | moritz++ | src/Perl6/Grammar.pm:

[10:26] <dalek> rakudo/no-strict: parse "no strict"

[10:26] <dalek> rakudo/no-strict: review: https://github.com/rakudo/rakudo/commit/a9401fb47d

[10:28] <moritz> that didn't work out the way I wanted it to. Good thing it's in a branch :-)

[10:34] *** jaldhar joined
[10:34] * masak .oO( good thing it's a DAG and none of the commit paths is special )

[10:34] *** daxim joined
[11:00] *** brrt left
[11:00] <pmichaud> good morning, #perl6

[11:06] <masak> good am, pm.

[11:06] <mberends> o/ pmichaud 

[11:07] *** sunflower left
[11:07] <tadzik> \o

[11:09] <masak> tadziku! \o/

[11:09] <masak> is le finals hunting season over?

[11:13] <tadzik> ba

[11:13] <tadzik> it just starts today

[11:13] <tadzik> the last exam is on the day I depart to FPW

[11:13] <tadzik> I'm tired with all this

[11:16] * mberends feels for tadzik: prevail, dude!

[11:16] <tadzik> I shall :)

[11:16] <tadzik> I have high enough grade average from the previous semesters, but this one is a disaset

[11:16] <tadzik> * disaster

[11:18] * masak empathizes

[11:19] <tadzik> on the brighter side, it's possible that I'd be doing a Perl 6 Lightning Talk on today's Warsaw Ruby Users Group meeting :P

[11:19] <timotimo> convert all the ruby users :]

[11:20] <masak> if what some Ruby people say is true and Perl 6 is just Ruby, then conversion is a no-op :P

[11:22] <tadzik> okay, gotta go to my exam &

[11:22] <masak> good luck

[11:22] <tadzik> thanks

[11:24] *** GlitchMr joined
[11:30] *** UncleFester6 joined
[11:32] <UncleFester6> phenny: tell flussence I bumped my swap space up by 2 gig and the build failed the same way

[11:32] <phenny> UncleFester6: I'll pass that on when flussence is around.

[11:32] *** UncleFester6 left
[11:33] *** apejens left
[11:33] *** apejens joined
[11:37] *** UncleFester6 joined
[11:38] <felher> eiro: okay, thanks :)

[11:38] <phenny> felher: 00:59Z <pmichaud> tell felher there was a camera in the room with my first talk; I have no idea if the video was recorded or when it might appear.  Maybe ping the YAPC::NA organizers :-)

[11:38] <felher> pmichaud: okay, thanks :)

[11:38] *** UncleFester6 left
[11:38] <timotimo> i'm also interested in the recording of the first talk

[11:39] *** apejens left
[11:39] *** JimmyZ joined
[11:39] <pmichaud> istr someone saying there was trouble with the audio in the first talk, though... I guess we'll have to wait and see what gets published.

[11:40] *** apejens joined
[11:42] <pmichaud> maybe I can get my local .pm group to let me give the talks for recording :)

[11:42] <masak> sounds like something a local .pm group could potentially be persuaded to do, yes ;)

[11:43] <masak> jnthn, dangit, we need a local .pm group!

[11:43] <awwaiid> where you at, masak?

[11:43] <pmichaud> it's been a long time since our .pm group met, although a subset of our group meets monthly.  But we don't meet in a place that would be conducive to presentations or videography

[11:43] <masak> awwaiid: http://en.wikipedia.org/wiki/Scania

[11:44] <awwaiid> nice

[11:44] <masak> feels like living right next door to the European continent.

[11:46] *** Moukeddar joined
[11:46] <awwaiid> considering that it appears to actually _be_ right next door to the European continent...

[11:47] <masak> well, geographical location is one thing. but the bridge really helps, too.

[11:47] <Moukeddar> Hi masak :)

[11:47] <pmichaud> masak: is it challenging to meet up with copenhagen.pm, ooc?

[11:48] <masak> pmichaud: not really. great idea.

[11:48] <masak> Moukeddar! \o/

[12:00] <sjn> \o

[12:00] <sjn> !seen jnthn

[12:01] <sjn> or not?

[12:01] <pmichaud> phenny seen jnthn

[12:01] <pmichaud> phenny: seen jnthn

[12:01] <pmichaud> bah

[12:02] <pmichaud> seen jnthn

[12:02] <pmichaud> ENOALOHA

[12:03] <sjn> pmichaud: any news on your side about the hague application?

[12:03] <pmichaud> anyway, jnthn++ was last seen 5 days, 12 hours ago

[12:03] <sjn> hm

[12:03] <pmichaud> sjn: no news here, no.

[12:04] <sjn> pmichaud: we *have to* know at absolutely latest on monday

[12:04] <pmichaud> sjn: yes, I know.  I'll be working on trip stuff later today.

[12:04] <pmichaud> right now I have to get $kid to $school -- bbiaw

[12:04] <sjn> ook

[12:05] <pmichaud> (maybe check with krunen and see where things stand on that end?)

[12:05] <masak> pmichaud: IIRC, jnthn was with friends until Sunday and then went back to Sweden for $course.

[12:05] <sjn> pmichaud: I've checked with krunen, thanks

[12:05] <sjn> but I'm kinda trusting you guys to figure out this

[12:06] *** snearch left
[12:07] *** skids left
[12:07] *** jaldhar left
[12:09] *** brrt joined
[12:21] <dalek> rakudo/no-strict: 27b55b5 | moritz++ | src/Perl6/Grammar.pm:

[12:21] <dalek> rakudo/no-strict: remove arglist parsing for now; it does not work

[12:21] <dalek> rakudo/no-strict: review: https://github.com/rakudo/rakudo/commit/27b55b5e42

[12:21] <moritz> $ ./perl6 -e 'no strict; $x'

[12:21] <moritz> Can only use get_who on a SixModelObject

[12:23] *** att joined
[12:26] *** dakkar joined
[12:26] <masak> when you go MOP, error messages start sounding like philosophy.

[12:26] <moritz> it seems it doesn't appreciate my mucking with $*UNIT_OUTER

[12:27] <flussence> pre-emptive "argh"

[12:27] <phenny> flussence: 11:32Z <UncleFester6> tell flussence I bumped my swap space up by 2 gig and the build failed the same way

[12:27] <moritz> masak: you mean like "Cannot compose A, because it's not composable"?

[12:28] <masak> moritz: mostly meant that 'get_who' sounds kinda ponderous.

[12:28] <moritz> masak: though note that it's not get_how (which would be meta)

[12:28] <masak> I wouldn't consider "Cannot X A, because it's not X-able" an informative error message.

[12:29] <masak> or rather, it says the same thing twice.

[12:29] <moritz> r: class A { }; class B does A { }

[12:29] <p6eval> rakudo ddfb9f: OUTPUT«===SORRY!===␤B cannot compose A because it is not composable␤»

[12:29] <masak> "Tried to X A, but A isn't X-able [so it didn't work]" is fine.

[12:31] <pmichaud> "Once again, you've asked for the impossible, and while I can normally provide it, in this case I'm not ready to do that."

[12:31] <moritz> pmichaud++

[12:33] <masak> "We only provide synthetic imposibilities, not analytical ones."

[12:34] *** am0c joined
[12:36] <[Coke]> is p6eval setup in any special way in regards to pugs?

[12:36] <[Coke]> extra env vars or something?

[12:37] * moritz has no idea, and takes a look

[12:37] <moritz> cmd_line    => "PUGS_SAFEMODE=true LC_ALL=en_US.ISO-8859-1 $home/Pugs.hs/Pugs/pugs %program",

[12:39] <masak> that would explain why Pugs has encoding problems.

[12:40] <moritz> I added that specifically because pugs had encoding problems, and at that time it solved them

[12:40] <masak> ah.

[12:41] <[Coke]> there's no one right LC_ALL setting, it seems, and without it, locally, I get errors from decodeUTF8' . will continue poking.

[12:45] <dalek> rakudo/nom: d4c8e6d | moritz++ | src/core/ (2 files):

[12:45] <dalek> rakudo/nom: more exception typos

[12:45] <dalek> rakudo/nom: 

[12:45] <dalek> rakudo/nom: caught by Nick Glencross

[12:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d4c8e6d0d3

[12:46] *** sisar joined
[12:48] <masak> sisar! \o/

[12:48] <sisar> masak: hey !

[12:49] *** mikemol joined
[12:49] <sisar> it seems we had overlapping period of absence from #perl6 (first two weeks of June)

[12:50] <masak> no, I was actually absent.

[12:50] <sisar> though I was not on vacation :|

[12:50] <masak> oh. :/

[12:51] <sisar> It was not a good time for me... all I can say is "What doesn't kill you, makes you stronger."

[12:51] * moritz hugs sisar 

[12:51] * masak hugs sisar too

[12:52] <masak> that saying always felt like a bit of a last resort to me.

[12:52] <sisar> masak: so July is coming ! Another month of bloogging ?

[12:52] <sisar> moritz, masak: thanks

[12:52] <masak> sisar: I'll think about it. quite possibly, yes.

[12:52] <sisar> yay !

[12:53] <masak> it's nice to know someone would like it to happen.

[12:53] *** Moukeddar left
[12:54] <timotimo> oh, more perl6 blogposts? i'd like that

[12:54] * moritz would love them too. But mewants to see t5 and thus p6cc2011 too

[12:55] <masak> I promise to wrap up t5 and p6cc2011 in June.

[12:55] <moritz> s/see/see ... finished/

[12:55] <sisar> seems like we had very less perl6 blogs this last month (modulo moritz++'s exception reports and jnthn++'s blogs). But yes, no perl6-learning blogs.

[12:55] <moritz> oh, and I want qast and macros!

[12:55] * tadzik is back

[12:55] <moritz> and a ponie!

[12:55] <masak> so it's a July of introductory Perl 6 material y'all want, then?

[12:56] <sisar> and oh, I'm not a teenager anymore. I hope my impulsiveness has somehow magically disappeared :)

[12:56] <masak> because I'm toying with this idea of starting to write about compilers and the act of compiling. but maybe save that for next summer.

[12:56] *** PacoAir joined
[12:56] <masak> sisar: happy belated birthday.

[12:56] <masak> nr: say 20.base(2)

[12:56] <sisar> masak: thank you !

[12:56] <p6eval> rakudo ddfb9f, niecza v18-7-ga660099: OUTPUT«10100␤»

[12:56] * [Coke] wonders how to put a putStrLn into an arbitrary location in haskell code.

[12:56] <moritz> sisar++

[12:57] <pmichaud> wow, looks like I can get  DFW->FRA->SVG->DFW for under $1500 US

[12:57] <moritz> [Coke]: you can't

[12:57] <[Coke]> pugs: say 20.base(2)

[12:57] <p6eval> pugs: OUTPUT«*** No such method in class Int: "&base"␤    at /tmp/Cku41l2LHV line 1, column 5 - line 2, column 1␤»

[12:57] <sisar> moritz: I don't know how I forgot this, but congratulations !

[12:57] <moritz> sisar: thanks

[12:58] <masak> [Coke]: more LHF :)

[12:59] <[Coke]> bah. I also cannot get ghci to run the debugger on Pugs. hurm.

[12:59] <moritz> [Coke]: thing is, putStrLn is IO, and thus cannot be used in a pure function

[12:59] <[Coke]> masak: I am trying to fix the decodeUTF8 issue. 

[12:59] <masak> [Coke]: is the problem with putting a putStrLn into an arbitrary location in haskell code that of monads and side effects?

[12:59] <[Coke]> masak: blank stare.

[12:59] <masak> sorry.

[12:59] <[Coke]> "compilation error", mostly. ;)

[12:59] <masak> what moritz said, instead.

[13:00] <moritz> if a function does IO in haskell, it must be reflected in the type signature, and also in the way it's called

[13:00] <masak> putStrLn returns IO, and so it doesn't mix well with things that don't already return IO.

[13:00] <moritz> that's both upside and downside of a pure functional language

[13:03] <arnsholt> There's a diagnostic function you can use anywhere to print though, isn't there?

[13:03] <arnsholt> Can't remember what it's called

[13:03] * [Coke] gives up for today.

[13:03] <arnsholt> trace

[13:03] <arnsholt> (Hoogle to the rescue)

[13:03] <masak> arnsholt++

[13:04] <arnsholt> Of course, you might get the string you wanted to print several times, but that's what you get in a non-strict language

[13:05] <arnsholt> And I have to say I quite like the fact that you can search for a function according to the signature

[13:06] <masak> yes, that's awesome.

[13:08] *** att left
[13:09] *** Psyche^ joined
[13:10] *** BaggioKwok joined
[13:12] <[Coke]> arnsholt: if you speak haskell, do you have any interest in hacking on pugs?

[13:12] * masak still does, but is constantly time-constrained

[13:13] *** Patterner left
[13:13] *** Psyche^ is now known as Patterner

[13:13] *** BaggioKwok left
[13:14] *** BaggioKwok joined
[13:21] <masak> "Unit testing [...] is the practice of writing software to check that units of software behave in ways we expect." -- do you agree with this definition?

[13:22] * masak is writing course slides

[13:22] <moritz> yes

[13:22] <moritz> do manual unit tests exist too?

[13:23] <masak> I think so, but automated ones are the shit, so manual ones don't get much press.

[13:23] <masak> manual unit tests would perhaps be necessary if the system included components outside of the reach of the software.

[13:23] <masak> like an actual physical lever or something.

[13:24] <moritz> then... robotics to the rescue :-)

[13:24] <masak> heh, was thinking that too :)

[13:29] <moritz> two years ago I had an interview with a company that does business software, and they didn't have automated tests

[13:30] <masak> it's far to common, I'm afraid.

[13:30] <moritz> they also had only parts of their code under version control

[13:30] <masak> ditto.

[13:30] <masak> sometimes I marvel at the speed some software houses manage to have despite their lack of proper tooling.

[13:30] <arnsholt> [Coke]: I speak a tiny amount of Haskell

[13:31] <arnsholt> I've been thinking of looking at Pugs, but my tuit-supply is low ATM, unfortunately

[13:31] <[Coke]> arnsholt: that's more than me, and I've patched pugs. ;)

[13:31] <[Coke]> (tuits) ah, the programmer's lament.

[13:31] <flussence> .oO( two years ago the company I *work at* didn't have automated tests... )

[13:32] <moritz> flussence: and you changed that?

[13:32] <arnsholt> moritz: At Opera, the QA department had some amount of manual testing

[13:32] <arnsholt> It turns out that testing a browser is hard in many interesting ways =)

[13:32] <flussence> moritz: yes. on my own :)

[13:32] <moritz> arnsholt: well, I can imagine that... exactly

[13:33] <arnsholt> For example, you can have a bug in the rendering code, such that the screen you -want- to draw is correct, but what's shown on screen isn't

[13:34] <arnsholt> So you need to get screenshots from the outside. Looking at the application's own framebuffer isn't enough ^_^

[13:34] *** atrodo left
[13:34] <moritz> oh, fun indeed

[13:34] <moritz> though that sounds more like integration test than unit test

[13:34] <arnsholt> Yeah, it's not exactly unit testing

[13:35] <moritz> here we are really spoiled; compilers are very easy to test

[13:36] <masak> compilers are input/output filters. filters are ideal for testing, indeed.

[13:36] <moritz> right

[13:36] <masak> but we still have to do some integration testing sometimes, with -e and stuff.

[13:36] <moritz> aye

[13:36] <moritz> masak: did you have a chance to look at my ufo branch yet?

[13:36] <masak> ugh, no.

[13:37] <masak> maybe tonight. at the latest on wednesday.

[13:37] <moritz> masak: ok, great

[13:37] <masak> um. thursday.

[13:37] <masak> (what day is it?) :)

[13:37] * masak has been on vacation

[13:37] <moritz> r: say Date.today

[13:37] <p6eval> rakudo d4c8e6: OUTPUT«2012-06-19␤»

[13:37] <moritz> r: say Date.today.day-of-week

[13:37] <p6eval> rakudo d4c8e6: OUTPUT«2␤»

[13:37] <masak> :)

[13:38] <moritz> r: say <Sunday Monday Tuesday Wednesday ...>[Date.today.day-of-week]

[13:38] <p6eval> rakudo d4c8e6: OUTPUT«Tuesday␤»

[13:39] *** am0c left
[13:43] <masak> no, I thought we went with 7 for Sunday.

[13:43] * masak checks

[13:43] <masak> aye. we did.

[13:44] <moritz> says who?

[13:44] <masak> S32/Temporal.

[13:48] *** PerlJam left
[13:48] *** dalek left
[13:48] *** Util left
[13:49] *** dalek joined
[13:49] *** ChanServ sets mode: +v dalek

[13:49] *** Util joined
[13:49] <masak> there are arguments for both 0 and 7. we went with 7 because there is a slightly stronger case to be made for it.

[13:49] <masak> I think feather is lagging quite badly.

[13:54] *** mberends left
[13:54] *** PerlJam joined
[13:57] *** kaleem left
[13:59] *** dalek left
[14:00] *** dalek joined
[14:00] *** ChanServ sets mode: +v dalek

[14:00] *** BaggioKwok left
[14:02] *** dalek left
[14:02] *** PerlJam left
[14:02] *** PerlJam joined
[14:03] <masak> train &

[14:03] *** dalek joined
[14:03] *** ChanServ sets mode: +v dalek

[14:03] *** skids joined
[14:09] *** BinGOs joined
[14:13] *** wtw left
[14:15] *** majrmovies joined
[14:24] <kresike> bye all

[14:24] *** kresike left
[14:25] <PerlJam> .oO( why do I always think of West Side Story when I see "kresike"?  It's probably not even pronounced like "krupke" )

[14:27] *** smash joined
[14:28] <smash> hello everyone

[14:28] <colomon> o/

[14:28] <TimToady> hello smash you wonderful person you!

[14:28] <TimToady> sorry, for some reason I associate that message with you...

[14:29] <moritz> was that something that purl regularly said?

[14:29] <smash> yeap, purl liked that

[14:37] *** mucker joined
[14:38] *** quietfanatic joined
[14:39] <sisar> ETOOMANYFOO <--- what is this meme/pun ? I don't get it.

[14:40] <sisar> does the 'e' stand for 'error' ?

[14:40] <moritz> sisar: on UNIX there are lots of error codes which are all-caps and start with E

[14:40] <moritz> "No such file or directory" is ENOENT

[14:40] <moritz> (Error no entry)

[14:40] <huf> not anymore, they've all gone treeish

[14:40] <PerlJam> huf: heh!

[14:40] <sisar> moritz: thanks.

[14:41] <sisar> ETOOMANYMEMES

[14:41] <PerlJam> sisar: ENOTENOUGHUNIX

[14:41] <moritz> :-) you're welcome

[14:41] <TimToady> .oO(note no ugh unix)

[14:41] <moritz> but you usually only see that if you do some C programming

[14:42] * TimToady tries to imagine caveman unix

[14:42] <TimToady> unfortunately it's already after breakfast

[14:43] <huf> moritz: or you're a sysadmin...

[14:44] <huf> shitty things often just log some random error code (as the integer) and then you get to use perl to figure out what that error actually was :))

[14:44] <moritz> huf: but that still gives you 'No such file or directory', not ENOENT

[14:45] <moritz> $ perl -wE 'say $! = 1'

[14:45] <moritz> Operation not permitted

[14:45] <huf> true, true

[14:46] * quietfanatic always hacked diagnostic messages into Haskell with unsafePerformIO

[14:47] <masak> quietfanatic! \o/

[14:47] <quietfanatic> masak!

[14:47] <masak> hello from a train! :)

[14:47] <quietfanatic> Hello from a smokey-smelling hotel room

[14:47] * masak doesn't pretend to know how Smokey smells

[14:47] <quietfanatic> Not very good.

[14:48] <masak> included free of charge: second-hand smoking from the walls.

[14:49] <quietfanatic> Well hey, can't argue with free ameni*cough cough*

[14:50] <masak> :)

[14:50] <TimToady> it was the last room in town, except for a flop-house several miles down the road and around the corner, and we weren't going to gamble on that

[14:50] <masak> nod.

[14:51] <TimToady> we were driving into town, and I saw a country club on the nagivator, so I joked "I'll bet there's a golf tournament in town, and all the hotels will be full."

[14:51] <TimToady> we got into town, and there's a golf tournament..

[14:51] <TimToady> and we barely got a room

[14:52] <TimToady> I get one true prediction in my life, and I waste it on this...

[14:52] <masak> *lol*

[14:53] * masak .oO( hotel in one! )

[14:53] <TimToady> btw, "nagivator" is not a typo, that's what I call it

[14:53] <[Coke]> did a little birdie tell you that awful joke?

[14:54] <masak> [Coke]: sigh. that's subpar. :P

[14:54] * TimToady is teed off that all the good puns are taken

[14:54] <TimToady> wait, there are no good puns...

[14:55] * quietfanatic should learn to use a real IRC client

[14:55] <masak> I heard a good pun this weekend.

[14:55] <masak> can't remember it right now, though.

[14:56] <masak> I'm quite fond of English/Mandarin hybrid puns at present.

[14:57] * daxim makes a face like a horse

[14:57] <TimToady> your ma!

[14:57] <masak> :)

[14:57] <pmichaud> back again

[14:57] <masak> pmichaud, you're just in time for the horse jokes.

[14:57] *** fgomez left
[14:57] *** fgomez joined
[14:58] * TimToady likes to walk into an Indian restaurant and say "Nan desu ka?"

[14:58] * pmichaud takes horse jokes with a small bit of equine-imity  :-)

[14:59] * quietfanatic caught a cold and is a little horse

[14:59] <quietfanatic> best I can do folks

[14:59] <PerlJam> quietfanatic: don't give it to the neighbors

[15:00] <quietfanatic> That'd be a nightmare

[15:00] *** tokuhirom left
[15:00] <TimToady> someday some sociologist is going to figure out that its the puns that keep women away, not the loutishness...

[15:00] *** tokuhirom joined
[15:01] <TimToady> or perhaps those are the same thing...

[15:01] <quietfanatic> Don't say that alout

[15:01] <PerlJam> quietfanatic: just take some medicine and get plenty of rest and you'll be back in the saddle in no time.

[15:01] <TimToady> keep trying...or better yet, don't...

[15:02] <quietfanatic> I'll just relax and remain phlegmatic

[15:02] <TimToady> I'm not sanguine about that...

[15:02] <jnthn> Good afternoon

[15:02] * jnthn is back

[15:02] <TimToady> we'll make you regret that

[15:03] <jnthn> uh-oh...

[15:03] *** flussence left
[15:03] * jnthn quietly backs away again

[15:03] *** flussence joined
[15:03] <masak> we could keep keep punning for hourse.

[15:03] <masak> jnthn! \o/

[15:03] <PerlJam> .oO( How do you "gret" something so that you can "regret" it in the future? )

[15:04] <masak> PerlJam: I always read that "re" as "backwards in time" (like "regress"), not "repeated action" (like "re-state")

[15:04] <quietfanatic> and we all know 're' involves backtracking

[15:05] *** tokuhirom left
[15:05] <masak> oh man.

[15:05] <pmichaud> oh, I suspect "regret" is the act of repeatedly remembering what you originally gretted.  :)

[15:05] <masak> quietfanatic: you should hang out here more often :)

[15:05] * jnthn wonders if anything much happened in his absence besides punning :)

[15:05] * TimToady should trot off to the shower now

[15:05] <PerlJam> quietfanatic: what masak said.  That last one was quite good  :)

[15:05] <masak> jnthn: we got so low on puns without you, we had to take the reins...

[15:06] <quietfanatic> Thanks guys, I'm still studying.

[15:06] * pmichaud bridles at that last one.

[15:08] <masak> remember us when you have more time.

[15:09] <arnsholt> masak: The re- is more repetition than backwards

[15:09] * PerlJam members again

[15:10] <masak> arnsholt: that sounds like quite a blanket statement to me. please delve.

[15:11] <arnsholt> Well, re- is a derivational morpheme, so it's independent meaning is fuzzy at best

[15:12] <arnsholt> But it does indicate repetition. re-gress for example would be something like "go again" at its base. That is, "go back"

[15:12] <arnsholt> Which has then been used metaphorically in English

[15:13] <PerlJam> all this membering, gressing and gretting weirds me.  ;)

[15:13] <masak> oh, ok.

[15:13] <masak> arnsholt++ # knows stuff about etymology

[15:13] <arnsholt> Funny enough, regret is apparently the Latin prefix with a Germanic verb

[15:14] <quietfanatic> We're disgressing into dismembering the english langauge

[15:14] <quietfanatic> with...um...disgrets.

[15:14] <PerlJam> disgret, congret, ingret?

[15:14] <diakopter> egrets

[15:14] <arnsholt> (gråte in Norwegian, probably something similar in Swedish)

[15:15] <benabik> diakopter: No need for the fowl language.

[15:15] <sisar> .ety regress

[15:15] <phenny> "late 14c. (n.), 'act of going back,' from L. regressus 'a return,' from regress-, pp. stem of regredi 'to go back,' from re- 'back' (see re-) + gradi 'to step, walk' (see grade (n.))." - etymonline.com

[15:15] <arnsholt> Oh, and looking at my dictionary closer, re- has several more meanings, including reverse or backwards movement

[15:15] <masak> ooh, .ety

[15:15] <pmichaud> progress: to go forward.   congress:  to go .... backward?

[15:15] <arnsholt> con is together

[15:15] *** sergot left
[15:16] *** adu joined
[15:16] <masak> as a seasoned Nomic player, I have full respect for the difficulty in getting anything legislated ;)

[15:16] <sisar> masak: *nod*

[15:16] <PerlJam> profit, refit, confit, outfit

[15:17] * pmichaud has a contrary opinion :)

[15:17] <arnsholt> Heh. Not sure how that one is derived

[15:17] <sisar> .ety contrary

[15:17] <phenny> "mid-14c., from Anglo-Fr. contrarie, from L. contrarius 'opposite, opposed,' from contra 'against' (see contra)." - etymonline.com

[15:18] <masak> right. "contra"

[15:21] <adu> I think there should be more guns in congress

[15:22] *** Chillance joined
[15:23] *** Vlavv` left
[15:24] <arnsholt> And contra is con-ter which is the negation of con =)

[15:24] <adu> masak: Nomic sounds fun, is it still played?

[15:25] <masak> adu: I believe so.

[15:25] <masak> adu: a bunch of us in Uppsala had an instance running for years.

[15:26] <masak> I'd like to play it again some day.

[15:26] <adu> I wonder if it's possible to write a Nomic server in Perl6

[15:27] <masak> yes, but with the caveat that Nomic rules expressed in code has quite a different phenotype to the original legalese Nomic.

[15:27] <masak> part of the charm of Nomic is that it's actually law running in people's brains, subject to uncertainties and interpretation.

[15:28] *** BinGOs left
[15:28] <adu> well, the same might be said of MagicTG, but there's an online game for that

[15:29] *** BinGOs joined
[15:31] <masak> yes, we had a Magic player among us in our instance.

[15:32] <masak> two, even.

[15:32] <jnthn> http://irclog.perlgeek.de/perl6/2012-06-15#i_5730212 references a sha-1 in the nqp repo. But..."git show" of it here complains its an unknown revision.

[15:32] <masak> but I venture to say that not even Magic has the metacircular property.

[15:33] <masak> Nomic does.

[15:33] <PerlJam> jnthn: that's a rakudo SHA1

[15:33] <jnthn> oh...

[15:33] <PerlJam> jnthn: (which updates the NQP revision)

[15:33] <jnthn> ah, I see

[15:34] <jnthn> It mentioned NQP then gave a sha-1, which logically suggests... )

[15:34] <PerlJam> I couldn't reproduce the problem though.  But I never tried it in a pristine environment.

[15:34] *** thou joined
[15:34] *** Vlavv` joined
[15:36] <masak> jnthn: I once saw a PoC search engine that took a SHA-1 as input, and gave a github project back as output ;)

[15:36] <jnthn> There were 7 NQP commits made before the Rakudo revision bump

[15:37] <jnthn> It'd be really handy if somebody who could reproduce the issue could figure out which one it is.

[15:43] *** quietfanatic left
[15:44] *** kurahaupo left
[15:57] *** sergot joined
[15:58] *** snearch joined
[16:00] *** kurahaupo joined
[16:01] *** BinGOs left
[16:05] *** brrt left
[16:05] *** BinGOs joined
[16:08] *** am0c joined
[16:10] <sorear> good * #perl6

[16:11] <moritz> \o sorear 

[16:13] *** JimmyZ left
[16:21] <masak> good time unit, sorear.

[16:25] *** snearch left
[16:38] *** kaare_ joined
[16:41] *** daxim left
[16:42] *** harmil joined
[16:43] *** harmil left
[16:43] *** harmil joined
[16:43] <harmil> Good morrow perl 6

[16:44] <colomon> \o

[16:44] * colomon just ordered a Raspberry Pi

[16:45] <harmil> Have a project in mind for it?

[16:45] <colomon> Mostly just want to have an ARM machine in the house.

[16:46] <colomon> make sure my $work software runs on it, etc.

[16:46] <harmil> nice

[16:46] <colomon> I'm guessing it won't be able to handle building Rakudo...

[16:46] <harmil> Oh no

[16:47] <colomon> not enough ram

[16:47] <colomon> I would love to be wrong about that!

[16:47] <harmil> But you *might* be able to get it to cross-compile....

[16:47] <harmil> Building a x-compile environment for the whole p6 build chain would be … interesting

[16:48] <colomon> but probably not ... fun

[16:49] <harmil> Depends on what sets your $?FUN

[16:50] <jnthn> colomon: How much RAM does it have?

[16:50] <sorear> aren't most smartphones ARM?

[16:51] <sorear> jnthn!  You survived too! :D

[16:51] <colomon> 256 mb

[16:51] <harmil> Yeah, so that's a definite cross-compile target

[16:51] <colomon> sorear: but most smartphones are not terribly convenient for running Linux.

[16:51] <jnthn> sorear: Well, I was taking some time afk to properly rest for some days :)

[16:51] <jnthn> I'm back now :)

[16:52] <sorear> colomon: oh, so your work software requires Linux.  nm then.

[16:52] *** BinGOs left
[16:54] <harmil> "work software requires Linux" -> optimizer -> "work"

[16:54] <colomon> sorear: well, Windows will work as well.  But as far as I know, no current smartphone OS is really up to it.  I'll probably be pushing it to get my stuff working with 256 mb of RAM.  (Sigh.  I'm sure it could do that back in 1998...)

[16:55] *** vlixes joined
[16:59] *** BinGOs joined
[17:00] *** dakkar left
[17:01] *** vlixes left
[17:11] *** araujo left
[17:12] *** araujo joined
[17:17] *** sergot left
[17:26] *** hanekomu joined
[17:27] *** birdwindupbird left
[17:31] *** fhelmberger left
[17:36] *** vlixes joined
[17:52] *** am0c left
[18:07] <[Coke]> p6: say ("this" ~~ s/is/at/) # should this work eventually?

[18:07] <p6eval> rakudo d4c8e6: OUTPUT«Cannot assign to a non-container␤  in sub infix:<=> at src/gen/CORE.setting:11207␤  in block <anon> at /tmp/TTzRu41T9w:1␤␤»

[18:07] <p6eval> ..niecza v18-7-ga660099: OUTPUT«Unhandled exception: Writing to readonly scalar␤  at /home/p6eval/niecza/lib/CORE.setting line 589 (Cool.subst @ 88) ␤  at /tmp/xA9_CuCVLS line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3917 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CO…

[18:07] <p6eval> ..pugs: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20120203/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** Can't locate P…

[18:07] *** hanekomu left
[18:07] *** hanekomu joined
[18:07] <[Coke]> I think I just made this mistake a few weeks ago. Hurm.

[18:10] *** fridim_ joined
[18:14] <[Coke]> https://gist.github.com/2955693 - that segfaults the REPL. whee.

[18:14] * [Coke] rebuilds.

[18:16] <diakopter> [Coke]: there's another error in rt that segfaults after the same error.. I can't remember which one it is

[18:16] <diakopter> hm, or maybe we just discussed it here and didn't add the segfault to the ticket

[18:17] <diakopter> but I do remember it being the same non-container assign error

[18:21] <diakopter> so maybe it's that particular error that triggers the segfault upon exiting the repl

[18:21] *** araujo left
[18:23] <moritz> r: my $x = 1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1;

[18:23] <p6eval> rakudo d4c8e6:  ( no output )

[18:23] * masak feels like Alice in Wonderland

[18:23] <[Coke]> phenny: tell masak bot to checkout 14:14 < [Coke]> https://gist.github.com/2955693 - that segfaults the REPL. whee.

[18:23] <phenny> [Coke]: I'll pass that on when masak is around.

[18:23] *** araujo joined
[18:23] <[Coke]> diakopter: there we go. ;)

[18:23] <sorear> p6: say eval '+1' x 50

[18:23] <p6eval> rakudo d4c8e6, niecza v18-7-ga660099, pugs: OUTPUT«50␤»

[18:23] <sorear> p6: say eval '+1' x 500

[18:24] <p6eval> rakudo d4c8e6, niecza v18-7-ga660099, pugs: OUTPUT«500␤»

[18:24] <sorear> p6: say eval '+1' x 5000

[18:24] *** stephenlb joined
[18:24] <moritz> r: my $x = 1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1

[18:24] <p6eval> rakudo d4c8e6, pugs: OUTPUT«(timeout)»

[18:24] <p6eval> ..niecza v18-7-ga660099: OUTPUT«5000␤»

[18:24] <p6eval> rakudo d4c8e6:  ( no output )

[18:24] <moritz> star: my $x = 1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1

[18:25] <p6eval> star 2012.05: OUTPUT«(timeout)»

[18:25] <sorear> nice, niecza's eval is actually faster than rakudo's in at least one case :D

[18:25] <sorear> n: say eval '+1' x 50000

[18:25] <moritz> sorear: :-)

[18:25] <p6eval> niecza v18-7-ga660099: OUTPUT«(timeout)»

[18:27] *** birdwindupbird joined
[18:27] <sorear> I'm actually very suprised that pugs times out here.

[18:27] <sorear> o/ masak in wonderland

[18:27] <diakopter> aww; we lost the perlesque target during the move

[18:30] <diakopter> (understandable)

[18:34] * masak whistles on "One" from "A Chorus Line"

[18:34] <phenny> masak: 18:23Z <[Coke]> tell masak bot to checkout 14:14 < [Coke]> https://gist.github.com/2955693 - that segfaults the REPL. whee.

[18:34] <masak> [Coke]: rebuilding latest nom now.

[18:36] <[Coke]> masak++ - diakopter says a similar bug may be pre-reported

[18:36] *** wooden joined
[18:36] <masak> diakopter: URL?

[18:36] *** wooden left
[18:36] *** wooden joined
[18:37] <[Coke]> aw, you can't perlbrew (e.g.) 5.16.0 multiple times with different config opts.

[18:37] <[Coke]> we aren't sure.

[18:45] <pmichaud> jnthn: btw, you might want to take a look at https://gist.github.com/2950855 

[18:46] <pmichaud> looks like the optimizer goes quadratic or something on long expressions

[18:47] <jnthn> pmichaud: Whoa.

[18:47] <jnthn> pmichaud: I...don't see why it should. Will have to profile to get the answer.

[18:48] <jnthn> pmichaud: If it's not already, probably good to file rakudobug with a link to that gist.

[18:48] <pmichaud> given th elength of the optimize and PIR steps, I'm guessing that the intermediate constants are being held in a serialization context even if they aren't needed.  but that's just a guess.

[18:48] *** cggoebel left
[18:48] <pmichaud> anyway, yes, I can file a ticket

[18:48] *** cggoebel joined
[18:52] <pmichaud> RT #113754

[18:57] *** adu left
[18:57] *** adu joined
[18:57] *** spider-mario joined
[18:59] *** adu left
[19:00] *** adu joined
[19:01] *** adu left
[19:01] *** adu joined
[19:02] *** adu left
[19:02] *** adu joined
[19:04] <[Coke]> IWBNI we could get ticket stuff cc'd in here.

[19:04] <[Coke]> new ticket, closed ticket...

[19:04] * [Coke] ponders writing an RT bot. I think i still have the CLI docs lying around somewhere...

[19:06] *** adu left
[19:06] *** adu joined
[19:08] *** mucker_ joined
[19:09] *** mucker_ left
[19:09] *** leprevost joined
[19:10] *** mucker left
[19:10] *** mucker joined
[19:32] <PerlJam> btw, I won't be able to get to the rakudo release until late Thu evening my time.  

[19:33] <[Coke]> http://infiniteundo.com/post/25326999628/falsehoods-programmers-believe-about-time

[19:34] <PerlJam> s/There are always 24 hours in a day/There are always 86400 seconds in a day/  :)

[19:37] <sorear> most of that article can be summed up as 'never use civil time for any reason, dumbo'

[19:41] *** sudokode left
[19:51] *** mikemol_ joined
[19:54] *** mikemol left
[19:57] <[Coke]> "fine, you jerk, it's 3:56!" ?

[19:57] <tadzik> good evening

[19:57] *** cggoebel left
[19:58] <sorear> good evening tadzik

[19:58] *** cggoebel joined
[19:58] <jnthn> o/ tadzik 

[19:59] <sorear> o/ jnthn

[19:59] <jnthn> o/ sro

[19:59] <jnthn> er

[19:59] <jnthn> o/ sorear 

[19:59] <jnthn> ...tab completion. You have to hit the right keys *before* <tab> :)

[20:00] <jnthn> PerlJam: Late release on Thu is fine. I won't get any tuits today, but may be some tomorrow night and more likely on Thursday.

[20:01] <jnthn> If so that just means I can tidy more things up pre-release :)

[20:08] *** GlitchMr left
[20:10] *** prammer joined
[20:14] *** rjbs joined
[20:14] <rjbs> Hey everybody!  I have a question.

[20:14] <moritz> hi rjbs. Shoot!

[20:14] <rjbs> p5p has had a bit of dicussion lately about valid "punctuation variable" style variable names.

[20:15] <rjbs> I'm not so concerned about what's valid in an identifier.  That's got better guidelines.

[20:15] <rjbs> But the question is about non-ASCII counterparts to the variables like $^X and $$ and so on.

[20:15] <rjbs> I'm curious as to what the Perl6 solutin is.

[20:15] <rjbs> Sorry, my keyboard has been dropping keys today.  At least, I think it's my keyboard and not my fingers..

[20:16] <moritz> hm

[20:16] <flussence> p6 uses $*LONGNAME for most things iirc

[20:16] <rjbs> I wasn't even sure punctuation variables survived, since there's $*etc

[20:16] <moritz> right; we have about 5 "real" punctuation variables

[20:16] <moritz> $_, $!, $/ are the most important ones

[20:17] <flussence> the worst thing we've got is "$¢", if that's even still around...

[20:17] <rjbs> but $foo¢bar isn't a valid identifier, right?

[20:17] <moritz> it is, but you only need that when touching the regex guts

[20:17] <rjbs> So there's still some kind of rule about one-char var names?

[20:17] <moritz> nr: say so '¢' ~~ /\w/

[20:17] <p6eval> rakudo d4c8e6, niecza v18-7-ga660099: OUTPUT«False␤»

[20:17] <moritz> not a valid identifier, no

[20:17] <moritz> rjbs: there is a short list of valid one-char var names

[20:18] <rjbs> Okay.  So it sounds like very sadly I can't steal from p6 here. :)

[20:18] <moritz> $¢, $/, $! are the only ones that fall out of the pattern

[20:18] <rjbs> Right now there's a bit of contention becaues Perl 5 is allowing some crazy stuff.

[20:18] <moritz> the rest follow rules, like $*PROGRAM_NAME having that * sigil

[20:18] <moritz> and the user can make $*identifer-variables too

[20:19] <rjbs> like single-char scalars with the names \N{THIN SPACE} or \N{U+D800} or \N{COMBINING CIRCUMFLEX}

[20:19] <moritz> s/sigil/twigil/

[20:19] <rjbs> yeah

[20:19] <rjbs> $* implies globality?

[20:19] <moritz> dynamic scoping

[20:20] *** brrt joined
[20:22] <masak> does Niecza have enough threading to create interesting effects when the same dynamics-scoped variable is changed in two different threads?

[20:25] *** cggoebel left
[20:25] *** cggoebel joined
[20:26] <sorear> masak: yes

[20:27] <sorear> moritz: what's the fifth?

[20:28] * [Coke] is glad to see rjbs here. I follow p5p halfheartedly, and wonder occasionally if we should offer any "here's how perl 6 does it" nots.

[20:28] <[Coke]> *nots

[20:28] <[Coke]> *NOTES

[20:28] <[Coke]> rjbs++ # character dropping infectious.

[20:28] <moritz> sorear: I was thinking about @_ and %_, but then realized they don't quite fit into the category

[20:29] *** tomaw left
[20:29] <moritz> otoh I counted $_

[20:29] *** tomaw joined
[20:29] <sorear> TimToady talks from time to time about @!

[20:30] <rjbs> [Coke]: I'm always interested i how Perl 6 does it, but it's always dangerous for us to think we can copy, because of the fundamental differences.

[20:30] <moritz> sorear: aye. In some sense my exception design so far doesn#t cover the most interesting cases

[20:31] <sorear> rjbs: how familiar are you with PL_sawampersand?

[20:31] <[Coke]> rjbs: already had one failure in that area, neh?

[20:31] <[Coke]> rjbs++ # keeping p5 moving.

[20:32] <sorear> this just reminded me of a question I had - would I be correct to think that the major part of the penalty is the need to keep a copy of the orig string?

[20:32] <PerlJam> [Coke]: I think that was just premature copying really.

[20:32] <rjbs> sorear: a bit

[20:32] <rjbs> [Coke]: Yeah, although I'm still a bit dubious about ~~ in p6.  Too many of the core roles' matches seem arbitrary to me.

[20:33] <rjbs> but it's definitely saner in p6

[20:33] <sorear> I think there's a sane subset and a "pair the spares" periphery

[20:34] <rjbs> Yeah.  Felt like there might've been some fill-in-the-box-ism.

[20:34] <sorear> there's nothing particularly sane for $foo ~~ @bar *to* do... imo it should be disallowed, make the user say $foo ~~ any @bar or $foo ~~ all @bar

[20:34] <rjbs> Right, that's what I'm hoping to move to in p5.

[20:35] <sorear> like we recently disallowed %hash{@slice}:exists

[20:35] * sorear wonders if that involves adding junctions to p5

[20:35] <rjbs> sorear: Perl6::Junction; I use it regularly

[20:36] <moritz> rjbs: we still have some design issues with ~~ on Perl 6 too

[20:36] <rjbs> In fact, I should make a patch for ~~ across junctions!

[20:36] <moritz> currently  $x ~~ m:g/a/   doesn't work by spec

[20:36] <rjbs> seen cfranks

[20:37] <moritz> our seen bot hasn't been seen for a day or two... I don't know how long exactly :-)

[20:37] <sorear> I do

[20:37] <PerlJam> rjbs: so $x ~~ @a would be an error with a nice message that tells them to use Perl6::Junction and such?

[20:37] <PerlJam> (in p5)

[20:37] <rjbs> PerlJam: I'm not sure whether it would mention P6::J, but yes.  Let me find my proposal.

[20:38] <rjbs> http://www.nntp.perl.org/group/perl.perl5.porters/2011/07/msg174272.html

[20:39] <rjbs> If you read through, though, you will find that making it pluggable, as we talked about, led to some complexity.

[20:39] <rjbs> so it hasn't happened.

[20:39] <sorear> after the current round of niecza refactors I'm hoping to get array regexes in, maybe then we can talk about ditching the nonintuitive Array ~ Array rules

[20:43] <rjbs> That'd be cool.  I mean, they're certainly not hurting *me* now, but they did seem to be there just to fill in the slot, rather than because they were the obvious behavior.

[20:45] <PerlJam> rjbs:  If you keep hanging out here, we may have a "crossing the streams" moment where new features are worked out and both p6 and p5 adopt the appropriate semantics.  :-)

[20:45] <[Coke]> someone start working on p5.5 right now. :P

[20:45] <rjbs> This is Perl, version 5, revision 500.

[20:46] <[Coke]> mmhehehe.

[20:46] <sorear> rjbs: I have heard rumours of a 2-day pre-YAPC::EU event...?

[20:46] <[Coke]> r: say (500-16)/2+2012

[20:46] <p6eval> rakudo d4c8e6: OUTPUT«2254␤»

[20:46] * [Coke] urks.

[20:47] <flussence> .oO( perl5's versioning scheme isn't y3k-compliant... )

[20:47] *** adu left
[20:48] <sorear> hopefully by y3k we will all have moved to perl 7.

[20:51] <PerlJam> we'll digitally encode our thoughts on the fabric of the universe and the natural expansion will actually execute them.

[20:51] <rjbs> By y3k I hope to be retired and mostly writing Scheme.

[20:56] *** mikemol_ left
[20:58] *** birdwindupbird left
[21:02] *** kaare_ left
[21:03] *** skids left
[21:05] <masak> by y3k I hope to be doing whatever has replaced programming.

[21:07] <masak> (some higher-order design/architecture activity, most likely. or something akin to guiding programming bots along as they montecarlo and recombine on their own)

[21:16] *** phao joined
[21:16] *** phao left
[21:19] *** bruges left
[21:20] *** tyatpi_ left
[21:21] *** tyatpi_ joined
[21:21] *** bruges joined
[21:22] *** quietfanatic joined
[21:29] <rjbs> Yeah, I figure my programming in y3k will just be for fun.  Like to power my D&D game.

[21:30] <masak> :)

[21:30] <rjbs> I call for a unary operator U+232D that tests a value for its cylindricity.

[21:30] <sorear> I try not to figure too much about y3k, there are so many unknown unknowns

[21:30] <sorear> .u 232D

[21:30] <phenny> U+232D CYLINDRICITY (⌭)

[21:30] <sorear> box :|

[21:32] *** [particle] left
[21:33] *** [particle] joined
[21:37] *** brrt left
[21:40] * quietfanatic knows haskell, FTR.

[21:40] <quietfanatic> for the folks who've been considering reviving pugs

[21:42] * sorear also knows haskell.

[21:43] <spider-mario> so do I, a little

[21:43] <rjbs> What's the purpose of \N{SQUARE GAL}?

[21:43] * geekosaur knows some haskell as well

[21:43] <sorear> .u SQUARE GAL

[21:43] <phenny> U+33FF SQUARE GAL (㏿)

[21:44] <sorear> rjbs: compatibiltiy with CJK character sets and their fill-in-box-sim

[21:44] <rjbs> Oh, I missed the ones above.

[21:44] <rjbs> all the other SQUARE xyz ones.

[21:44] <sorear> we have 94*94 spots in our codepage, we've already encoded a few thousand kanji, let's fill in the rest with Latin, Greek, Cyrillic, and whatever else comes to mind

[22:06] <sorear> n: also does Bool:D;

[22:06] <p6eval> niecza v18-7-ga660099: OUTPUT«Unhandled exception: Unable to resolve method CURSOR in type Any␤  at /home/p6eval/niecza/src/NieczaActions.pm6 line 3851 (NieczaActions.trait_mod:does @ 6) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1941 (P6.trait_mod:does @ 7) ␤  at /home/p6eval/niecza/sr…

[22:06] *** fridim_ left
[22:06] <sorear> I thought that looked wrong

[22:07] *** leprevost left
[22:08] *** Telgalizer joined
[22:09] <[Coke]> if you want to hack on pugs, I can offer some suggestions on what to look at first.

[22:10] *** spider-mario left
[22:15] <rjbs> "this image from comp.basilisk"

[22:22] *** whiteknight joined
[22:22] *** whiteknight is now known as Guest97945

[22:23] *** leprevost joined
[22:27] *** skids joined
[22:28] *** PacoAir left
[22:36] <masak> good night, #perl6

[22:36] <sorear> gppd night, masak

[22:42] *** majrmovies left
[22:51] *** Chillance left
[22:52] *** alvis` joined
[22:52] *** vlixes left
[22:54] *** alvis left
[23:02] *** dorlamm joined
[23:06] *** dorlamm left
[23:17] <harmil> Am I correct that statement-commit (single colon) in a regex has two functions: collapse all extant alternations that currently match to this alternation; prevent future backtracking. Or are those the same thing?

[23:21] <harmil> What I want to say is "rule term { <sub-thing>: | <parenthetical> | <literal> } ; rule sub-thing { '(' ~ ')' [ <?before 'thing'> <thing> ] } ; rule parenthetical { '(' ~ ')' <expr> }" but I'm not sure if that's going to work…

[23:27] <TimToady> no, : only prevents backtracking into teh <sub-thing>.  you want :: to commit to <sub-thing>'s LTM match, or ::> to commit to current alternative (not sure if this is implemented)

[23:28] <TimToady> or ::: commits the current rule to this path

[23:30] *** thou left
[23:30] *** tyatpi left
[23:31] *** tyatpi joined
[23:32] <TimToady> phở &

[23:44] <harmil> Ok, thanks TimToady

[23:45] <harmil> I have to say, :$x parameter passing and hash construction is so amazingly nice. I find myself doing this all the time: sub foo($a, $b, $c) { bar(:z<1>, {:$a, :$b, :$c}) }

[23:46] <harmil> Even in Perl 5, that's much, much more cumbersome. In Python it's downright annoying.

[23:46] *** am0c joined
