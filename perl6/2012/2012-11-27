[00:04] *** wamba left
[00:08] *** PacoAir left
[00:08] *** ircmouser joined
[00:08] *** PacoAir joined
[00:16] <lue> [Coke]: yes I would.

[00:16] <phenny> lue: 26 Nov 16:38Z <[Coke]> ask lue if he wants rdstar to be added to the planet sixperl feed.

[00:16] *** ircmouser left
[00:24] *** PZt joined
[00:26] *** larks left
[00:28] *** larks joined
[00:34] *** larks left
[00:34] *** larks joined
[00:35] *** thou joined
[00:44] <[Coke]> lue: what name do you want listed with the blog?

[00:44] <lue> lue is fine. (unless you're not talking about my name)

[00:46] <[Coke]> added.

[00:46] *** leont left
[00:46] <[Coke]> (may take some time to propagate)

[00:51] *** PacoAir left
[01:02] *** anuby joined
[01:15] *** hypolin joined
[01:17] *** atrodo left
[01:29] *** SHODAN left
[01:35] *** fgomez left
[01:35] *** xilo_ joined
[01:36] *** bowtie left
[01:36] *** xilo_ left
[01:37] *** xilo_ joined
[01:50] *** tokuhiro_ left
[01:50] *** tokuhiro_ joined
[01:52] *** jerome left
[01:52] *** fgomez joined
[02:05] *** gootle joined
[02:24] *** benabik joined
[02:38] *** benabik left
[02:39] *** Khisanth left
[02:42] *** thou left
[02:44] *** benabik joined
[02:48] *** japhb_ left
[02:54] *** Khisanth joined
[03:42] *** orafu left
[03:42] *** orafu joined
[03:44] *** s1n left
[03:46] *** s1n joined
[03:55] *** xilo_ left
[03:59] *** popl left
[04:00] *** popl joined
[04:00] *** popl left
[04:00] *** popl joined
[04:01] *** kurahaupo left
[04:02] *** kurahaupo joined
[04:04] *** MikeyG joined
[04:05] *** nwc10 left
[04:05] *** nwc10 joined
[04:09] *** popl left
[04:27] *** rurban_ joined
[04:36] *** Psyche^ joined
[04:37] *** cognominal joined
[04:39] *** Patterner left
[04:39] *** Psyche^ is now known as Patterner

[04:50] *** Pleiades` left
[04:50] *** Pleiades` joined
[05:06] *** thou joined
[05:11] *** jerome joined
[05:12] <moritz> good morning

[05:12] <moritz> oh noez, the test failure in Bailador is related to precompilation :(

[05:12] <moritz> perl6 -Iblib/lib t/05-post-content.t  # fails

[05:12] <moritz> perl6 -Ilib t/05-post-content.t  # works

[05:18] *** sftp left
[05:23] <sorear> o/ moritz 

[05:29] *** skids left
[05:33] *** rurban_ left
[05:35] *** rurban_ joined
[05:43] <moritz> \o sorear 

[05:55] *** clkao__ is now known as clkao|

[05:57] <moritz> nr: multi postfix:<!>($x) { $x == 0 ?? 1 !! $x * ($x-1)! }; say 5!

[05:57] <p6eval> rakudo e6e158, niecza v22-44-g0247fe5: OUTPUT«120␤»

[06:00] *** rurban_ left
[06:01] *** birdwindupbird joined
[06:03] *** cognominal left
[06:06] *** hypolin left
[06:10] *** cognominal joined
[06:10] *** kaleem joined
[06:23] *** hypolin joined
[06:23] *** mtymula joined
[06:24] <mtymula> Hello;p

[06:28] <sorear> Hello mtymula

[06:29] *** rurban_ joined
[06:37] *** rurban_ left
[06:49] *** SamuraiJack joined
[06:57] *** hypolin left
[07:04] *** domidumont joined
[07:10] *** domidumont left
[07:10] *** domidumont joined
[07:11] *** hypolin joined
[07:13] *** cognominal left
[07:16] *** domidumont left
[07:22] *** FROGGS joined
[07:24] *** Patterner left
[07:28] <mtymula> Does optional parameters work in subroutine signatures? Or maybe it is not implemented yet...?

[07:28] *** hypolin left
[07:29] <FROGGS> mtymula: it does work, ya

[07:29] <FROGGS> IIRC you have to prepend the whatever-* to the parameter variable

[07:30] <tadzik> append ?, I think

[07:30] *** hypolin joined
[07:31] <mtymula> Hm.. than wtf? I get runtime error when calling such sub.

[07:33] *** kurahaupo left
[07:34] <sorear> rn: sub foo($x?) { say $x } ; foo 5; foo

[07:34] <p6eval> rakudo e6e158, niecza v22-44-g0247fe5: OUTPUT«5␤Any()␤»

[07:34] <sorear> rn: sub foo($x = 12) { say $x } ; foo 5; foo

[07:34] <p6eval> rakudo e6e158, niecza v22-44-g0247fe5: OUTPUT«5␤12␤»

[07:34] <sorear> both optional parameters and optionals with defaults work in both major impls

[07:34] *** mtymula_PC joined
[07:35] <mtymula_PC> ok, let me show you what i wrote... maybe it's my foult...

[07:35] <mtymula_PC> i have sub like this:

[07:35] <mtymula_PC> multi sub process_template($input, $output, %params?){ 	say "open $input"; 	say "replace {%params.perl}"; 	say "save $output"; }

[07:35] <mtymula_PC> i execute it like this:

[07:35] <mtymula_PC> process_template("from.tmpl", "to.html");

[07:36] <mtymula_PC> and i get that:

[07:36] <mtymula_PC> open from.tmpl Method 'perl' not found for invocant of class 'Hash'   in 'process_template' at line 12:multiple_signatures.p6   in main program body at line 25:multiple_signatures.p6

[07:37] <sorear> mtymula_PC: is it possible you are confusing optional parameters with slurpy parameters?

[07:37] <mtymula_PC> well i don't think so...

[07:39] <mtymula_PC> what i want to do is write a sub with some parameters that are optional so i don't need to write the same sub few times just to handle all cases

[07:39] <mtymula_PC> so in this case i don't need a %params.... 

[07:40] <mtymula_PC> to do this i should write %params? and then it would be optional right??

[07:41] <FROGGS> then you would be able to pass a hash optional

[07:41] <FROGGS> but it must be a hash then

[07:41] *** grondilu joined
[07:41] <FROGGS> or you have to flatten your params when calling your sub

[07:41] *** Psyche^ joined
[07:41] *** Psyche^ is now known as Patterner

[07:42] <mtymula_PC> yes but i do that

[07:42] <mtymula_PC> beside this one hash i have also two scalar 

[07:42] <mtymula_PC> ^scalars

[07:42] <mtymula_PC> $input, $output, %params?

[07:42] <FROGGS> r: multi sub process_template($input, $output, %params?){  say "open $input";  say "replace {%params.perl}";  say "save $output"; }

[07:42] <mtymula_PC> whan i call $input, $output

[07:42] <p6eval> rakudo e6e158:  ( no output )

[07:43] <FROGGS> r: multi sub process_template($input, $output, %params?){  say "open $input";  say "replace {%params.perl}";  say "save $output"; }; process_template("from.tmpl", "to.html");

[07:43] <p6eval> rakudo e6e158: OUTPUT«open from.tmpl␤replace ().hash␤save to.html␤»

[07:43] <FROGGS> looks good, no?

[07:43] <FROGGS> r: multi sub process_template($input, $output, %params?){  say "open $input";  say "replace {%params.perl}";  say "save $output"; }; process_template("from.tmpl", "to.html", 1); # should die

[07:43] <p6eval> rakudo e6e158: OUTPUT«===SORRY!===␤CHECK FAILED:␤Calling 'process_template' will never work with argument types (Str, Str, Int) (line 1)␤    Expected any of:␤    :($input, $output, %params?)␤»

[07:44] <FROGGS> r: multi sub process_template($input, $output, %params?){  say "open $input";  say "replace {%params.perl}";  say "save $output"; }; process_template("from.tmpl", "to.html", |(1 => 2)); # should die

[07:44] <p6eval> rakudo e6e158: OUTPUT«Unexpected named parameter '1' passed␤  in sub process_template at /tmp/VeDlxHesKc:1␤  in block  at /tmp/VeDlxHesKc:1␤␤»

[07:44] <mtymula> Is it possible that by instalation of rakudo does not hande that becouse it is obscure?

[07:44] <FROGGS> r: multi sub process_template($input, $output, %params?){  say "open $input";  say "replace {%params.perl}";  say "save $output"; }; my %optional; process_template("from.tmpl", "to.html", %optional); # should work

[07:44] <p6eval> rakudo e6e158: OUTPUT«open from.tmpl␤replace ().hash␤save to.html␤»

[07:45] <FROGGS> mtymula: dont think so

[07:45] <FROGGS> it is not obscure what you want

[07:46] *** domidumont joined
[07:54] *** domidumont left
[07:55] *** domidumont joined
[08:01] <mtymula_PC> r: multi sub process_template($input, $output, %params?){ 	say "open $input"; 	say "replace {%params.perl}"; 	say "save $output"; } process_template("from.tmpl", "to.html");

[08:01] <p6eval> rakudo e6e158: OUTPUT«===SORRY!===␤Confused␤at /tmp/ZGZsFGsHLH:1␤»

[08:01] <mtymula_PC> multi sub process_template($input, $output, %params?){ 	say "open $input"; 	say "replace {%params.perl}"; 	say "save $output"; }; process_template("from.tmpl", "to.html");

[08:01] <mtymula_PC> r:   multi sub process_template($input, $output, %params?){ 	say "open $input"; 	say "replace {%params.perl}"; 	say "save $output"; }; process_template("from.tmpl", "to.html");

[08:01] <p6eval> rakudo e6e158: OUTPUT«open from.tmpl␤replace ().hash␤save to.html␤»

[08:02] <mtymula_PC> here it works... on my PC it does not... 

[08:08] *** azawawi joined
[08:08] <azawawi> hi

[08:08] <phenny> azawawi: 26 Nov 19:49Z <tadzik> tell azawawi I told panda to install random files from lib as well :) Hope this suits you

[08:09] <azawawi> when is the release of rakudo star  2012-11 ?

[08:09] <FROGGS> in the next days I suppose

[08:09] <azawawi> and what are the expected features/enhancements?

[08:10] <FROGGS> there is an announcement in the repo

[08:10] <FROGGS> rakudos changelog shows a bit more though

[08:11] * azawawi takes a look at https://github.com/rakudo/star/blob/master/docs/announce/2012.11

[08:12] <FROGGS> mtymula_PC: can you show us your script and your error message that you get at home?

[08:12] <FROGGS> using a no-paste service of your choice

[08:12] <azawawi> no threading... oh well :)

[08:12] <FROGGS> not yet ;o)

[08:12] <mtymula> In a minute

[08:14] *** marloshouse_ left
[08:14] *** marloshouse joined
[08:14] *** marloshouse left
[08:15] *** marloshouse joined
[08:18] *** fgomez left
[08:21] *** azawawi left
[08:25] *** hoelzro|away is now known as hoelzro

[08:28] *** wamba joined
[08:30] *** mtymula89 joined
[08:30] *** am0c joined
[08:34] *** mtymula left
[08:34] *** wamba left
[08:40] <dalek> nqp: e9ab312 | (Tobias Leich)++ | src/ (2 files):

[08:40] <dalek> nqp: add indirection for 'Unrecognized backslash sequence'

[08:40] <dalek> nqp: review: https://github.com/perl6/nqp/commit/e9ab3125e8

[08:41] <mtymula_PC> FROGGS: ok i am back

[08:41] <mtymula_PC> my programm: 

[08:41] <mtymula_PC> use v6;  multi sub process_template($input, %params){ 	my $output = substr($input, 0, -4) ~ "html"; 	say "open $input"; 	say "replace {%params.perl}"; 	say "save $output"; }  multi sub process_template($input, $output, %params?){ 	say "open $input"; 	say "replace {%params.perl}"; 	say "save $output"; }  my %data = ( 	fname => "Foo", 	lname => "Bar", );  process_template("index.tmpl", %data); say "-- two subroutines with different sig

[08:42] <mtymula_PC> ups ... there is a char limit here...

[08:42] <moritz> IRC generally has

[08:42] <mtymula_PC> than once again:

[08:42] <moritz> NO

[08:42] <moritz> don't paste it here

[08:42] <moritz> paste it to a nopaste site

[08:42] <moritz> and tell us the URL

[08:42] <mtymula_PC> ??

[08:42] <moritz> !!

[08:42] <mtymula_PC> what is it??

[08:43] <moritz> http://en.wikipedia.org/wiki/Pastebin

[08:43] <sorear> pick one, there are thousands to choose from

[08:43] <moritz> FROGGS: re commit b6145c1, you can use $*W directly inside src/Perl6/Grammar.pm

[08:45] <moritz> FROGGS: so you can do { $*W.throw($/, 'X::Backslash::NonVariableDollar')

[08:45] <mtymula_PC> ok, it is here:   http://pastebin.com/t99UNhy5

[08:46] <moritz> FROGGS: I mean directly, without the indirection

[08:46] <FROGGS> moritz: ahh, cool, thanks

[08:48] <moritz> mtymula_PC: upgrade to a newer version of rakudo

[08:48] <moritz> mtymula_PC: which one are you using?

[08:49] <FROGGS> moritz: you get a better pull request then

[08:49] <mtymula_PC> 2011 04

[08:49] <FROGGS> wow

[08:49] <grondilu> mtymula_PC: that's old indeed

[08:49] <moritz> mtymula_PC: that's like, 1 and a half year old

[08:49] <FROGGS> mtymula_PC: we are almost in the year 2013 ;o)

[08:49] <moritz> lots of bugs have been fixed since then

[08:50] <mtymula_PC> oh come on...

[08:50] <grondilu> mtymula_PC: rakudo is growing very fast, so you really want to keep up to date

[08:50] <moritz> in particular, the bug you are experiencing has been fixed in the mean time

[08:50] <mtymula_PC> just tell me how exactly can i do it in a save way:) 

[08:50] <sorear> where did you get that version?

[08:50] <sorear> distribution?

[08:51] *** zamolxes_ is now known as zamolxes

[08:51] <mtymula_PC> from http://rakudo.org/ 

[08:51] <mtymula_PC> quite some time ago...

[08:51] <moritz> then do the same thing that you did back then, but do it with a newer version :-)

[08:51] *** fgomez joined
[08:52] <mtymula_PC> ok, so it will overide what i have right now

[08:52] <mtymula_PC> ?

[08:52] <moritz> actually it's best if you remove the current installation first

[08:53] <mtymula_PC> oh.. crap... can you tell me what i need to do exactly?

[08:53] <moritz> not without more information

[08:53] <moritz> where is rakudo installed? what operating system do you use?

[08:54] <moritz> the first thing you should do is switch off the "tell me exactly what to do" mode, and turn on the "think and provide useful data" mode :-)

[08:59] <mtymula_PC> ok lets do it

[08:59] <mtymula_PC> i have a windows xp32 and fedora 

[09:00] <FROGGS> for winxp I'd recommend the rakudo star distribution from last month

[09:01] <FROGGS> https://github.com/rakudo/star/downloads

[09:01] <FROGGS> the first one called "Windows installer for Rakudo Star 2012.10 "

[09:01] *** mtymula_PC_ joined
[09:02] <mtymula_PC_> ok, i am back... connection was terminated..

[09:02] <mtymula_PC_> location of my rakudo on winxp is C:\Rakudo

[09:02] *** fhelmberger joined
[09:04] <FROGGS> <FROGGS> for winxp I'd recommend the rakudo star distribution from last month

[09:04] <FROGGS> <FROGGS> https://github.com/rakudo/star/downloads

[09:04] <FROGGS> <FROGGS> the first one called "Windows installer for Rakudo Star 2012.10 "

[09:04] *** mtymula_PC left
[09:04] <FROGGS> rename that C:\Rakudo to something else, and install the msi

[09:04] <mtymula_PC_> ok than

[09:05] <FROGGS> if you think you have everyhing (your scripts an all), then remove that renamed foler

[09:05] <FROGGS> folder

[09:05] <FROGGS> on your linux box do that: https://github.com/rakudo/rakudo/blob/nom/INSTALL.txt

[09:06] <FROGGS> but I'm not sure if the step in line 54 work, IMO there is no perl6 executable in the build directory at that time

[09:07] <moritz> why not?

[09:07] <moritz> line 45 should have created one

[09:08] <FROGGS> hmmmm

[09:08] <FROGGS> I need to check

[09:09] <FROGGS> I always use the install/bin/perl6 ...

[09:09] <moritz> that's the saver alternative, yes

[09:09] <moritz> but not before you ran make install

[09:09] <FROGGS> right

[09:10] <mtymula89> Ok i installed rakudo on win, anything else to do?

[09:10] <tadzik> hack!

[09:11] *** mtymula_PC_ left
[09:12] <FROGGS> well, test your script..

[09:13] <mtymula89> Wooooooohooooo.... hey, guess what? It works;)

[09:13] <FROGGS> ;o)

[09:13] * moritz had to add a * in the substr() call to make it work

[09:13] <FROGGS> to install on your fedora follow this one: https://github.com/rakudo/rakudo/blob/nom/INSTALL.txt

[09:14] <mtymula89> Indeed mortiz

[09:14] <mtymula89> That i can grasp:)

[09:14] * moritz should reinstall his hilight for mortiz

[09:15] <arnsholt> I don't think I ever type in more than three or four letter prefixes of any given nick =D

[09:16] <mtymula89> Ok, I will deal with fedora later...

[09:17] <moritz> (tab completion)++

[09:17] <sorear> too many tims

[09:18] <mtymula89> Thanks a lot!

[09:22] *** Kharec joined
[09:28] <jnthn> morning, #perl6

[09:29] <FROGGS> morning jnthn

[09:29] <moritz> \o jnthn 

[09:30] <sorear> morning #jnthn

[09:30] <jnthn> Spontaneous hardware failure. Didn't have that one happen while teaching before...

[09:31] <jnthn> (thankfully, not the machine I was delivering the course from...)

[09:31] <moritz> the chair you were sitting on? :-)

[09:32] <jnthn> :P

[09:32] <jnthn> No, one of the student computers.

[09:33] <jnthn> Just started emitting a series of loud bleeps. I suspect overheating, but the fact that half an hour later turning it on only produces the same and no output suggests it's a fairly drastic hardware fail...

[09:33] <jnthn> *suspected

[09:34] <mtymula89> Capacitors on a mainboard or ram mems

[09:35] <mtymula89> Or a gpu on your graphic card

[09:36] <mtymula89> Start from it than check rams if all fails look carefuly on the motherboard

[09:37] *** sqirrel joined
[09:37] <moritz> wrong approach

[09:37] <moritz> the teacher isn't responsible for the student's hardware

[09:37] *** PacoAir joined
[09:38] <tadzik> it would be way too easy to avoid doing anything in class

[09:38] <moritz> go get a replacement, and have somebody else fix it :-)

[09:38] <tadzik> like swapping mouse and keyboard cables back in the days when they were on ps/2...

[09:38] <mtymula89> Ok, just do nothing.. than

[09:39] *** grondilu left
[09:46] *** dakkar joined
[09:49] <jnthn> yes, replacement hardware is l'answer

[09:51] <mtymula89> L'answer ?? Meaning lame ?? 

[09:52] <moritz> "the answer", but with french article

[09:53] <mtymula89> Oh.. i almost felt offended;p joke ofc

[09:54] <jnthn> :P

[09:54] <jnthn> Playing with languages. We does it. :)

[09:54] <sorear> jnthn: clearly you should teach at my old college, we had projectors die on us weekly

[09:56] <jnthn> sorear: ouch...I only saw that happen once

[09:56] <jnthn> Smoke came out!

[09:57] <mtymula89> Where do you teach?? 

[09:57] <sorear> jnthn: These were mostly just soft failures that forced the profs to wing it for the rest of the period

[09:58] <jnthn> mtymula89: Various places in Sweden :)

[09:58] <jnthn> In Malmo today

[09:58] <mtymula89> Oh than maybe the teason is a tempetature differences:) 

[09:59] <mtymula89> *Reason

[09:59] <jnthn> bah, it's not even cold here :P

[09:59] <mtymula89> Joking:) 

[10:00] <jnthn> Dang, we get snow on Friday and I won't be here for it...

[10:01] <mtymula89> At least you get it... from where i sit it looks like there will be snowing after new yers eve

[10:02] <jnthn> ok, back to teaching stuffs...bbl :)

[10:03] *** rindolf joined
[10:03] <mtymula89> tadzik: are there any lectures about perl6 in our butiful country

[10:03] <mtymula89> :)

[10:04] <tadzik> mtymula89: well, I did one once :)

[10:04] <tadzik> 2 or 3 years ago, or something. Just before the first Rakudo Star

[10:04] <mtymula89> In wa-wa?

[10:04] <tadzik> yep

[10:04] <tadzik> I should still have slides somewhere, if you want to have a look

[10:05] <tadzik> I think someone reused them in Spain later :)

[10:05] <mtymula89> It would be great:)

[10:05] <sorear> hah, wikipedia actually has a redirect wa-wa -> Warsaw

[10:06] <mtymula89> But the reason i ask is that i really would like to parricipate nex time

[10:06] <huf> wa-wa?

[10:06] <tadzik> https://github.com/tadzik/Perl6-slides, one of my oldest repos it seems :)

[10:06] <mtymula89> sorear... clever

[10:06] <tadzik> huf: it's an abbreviation of WArszaWA

[10:06] <huf> ah

[10:08] <sorear> It's funny because it's also the (US) English onamatopoeia for crying

[10:08] <sorear> (probably with a different value for 'w' though)

[10:08] <mtymula89> So it is more accurate than you think...

[10:09] <sorear> How so?

[10:09] <tadzik> oh, I don't associate Warsaw with crying :)

[10:10] <mtymula89> No? Read the history books...

[10:10] <Woodi> morning everyone :)

[10:10] <tadzik> if I only thought about history I'd have to cry everywhere I go

[10:12] <mtymula89> Well you are right

[10:13] *** thou left
[10:14] <Woodi> moritz: "precedence related traits" - what's they are/do/usefull for ? it's looks so specialized that hard to imagine it usefullness... 

[10:14] <mtymula89> Tadzik this is exactly what i need:) meaning these slides. 

[10:15] *** domidumont left
[10:15] <huf> tadzik: but if your w is a v, what is v?

[10:15] <huf> ... or is it a v?

[10:15] <tadzik> we don't have 'v' in Polish alphabet

[10:15] *** wamba joined
[10:15] <huf> tadzik: whoa.

[10:16] <Woodi> btw. on Debian testing rakudo 2012.10 is available straight from repos :)

[10:16] <tadzik> mtymula89: they're pretty outdated ins ome places, especially regarding the ecosystem

[10:16] <Woodi> huf: no x too :)

[10:16] <Woodi> nor q :)

[10:16] <huf> Woodi: well yes, we dont have x or q either

[10:16] <mtymula89> Yes i see that but nevertheless usefull

[10:16] <huf> and y only in compounds 

[10:16] <huf> but v feels so standard to me ;)

[10:16] <huf> oh well

[10:17] <Woodi> huf: here is ... ? :)

[10:17] <huf> hungary

[10:17] <Woodi> haloo bro ! :)

[10:17] *** hypolin left
[10:17] <huf> oh right, we drink and fight together

[10:18] <huf> or as the rhyme is known in hungarian, "we drink each other's wine together"

[10:18] <sorear> what amuses me is the j

[10:18] <sorear> French, English, Spanish, and German have clearly different js

[10:18] *** domidumont joined
[10:18] <huf> the germans are correct tho, the others are wrong ;)

[10:19] <Woodi> huf: I had something like that in mind :)

[10:20] <Woodi> what it sounds in German ? :)

[10:21] <bonsaikitten> Woodi: like a "j" of course

[10:21] <bonsaikitten> what a silly question!

[10:21] <Woodi> o, sorry that I ask... ;)

[10:21] <sorear> Woodi: I think german and polish have the same j

[10:22] <mtymula89> I agree

[10:22] <Woodi> I realy need to learn some "niemiecki" :)

[10:22] <sorear> the German j is used in most places to the east, until you get to the Cyrillic zone

[10:23] <mtymula89> E! gosciu!! Ja ci dam cyrylice;)

[10:24] *** cognominal joined
[10:24] <Woodi> Russians have j too, but, hmm, ciphered in writting language :)

[10:24] <Woodi> |-O I think...

[10:24] <huf> star trek?

[10:25] <huf> i see you call them "német"-s too :)

[10:25] <sorear> .u CYRILLIC LETTER IO

[10:25] <phenny> U+0451 CYRILLIC SMALL LETTER IO (ё)

[10:25] <sorear> .u CYRILLIC LETTER YO

[10:25] <phenny> sorear: Sorry, no results for 'CYRILLIC LETTER YO'.

[10:26] <sorear> .u ю

[10:26] <phenny> U+044E CYRILLIC SMALL LETTER YU (ю)

[10:28] <sorear> I suppose it's a question of cultural norms relative to transliteration

[10:29] <Woodi> yea, all our languages are correct for us :)

[10:29] <Woodi> so, there are plans for 3-months release of * ?

[10:29] <mtymula89> Just like religion, politics, rase, belive...

[10:30] <sorear> when you get to Japan, they have the syllable じ, which sounds like it starts with an English j, and is usually transliterated ji, except when they use zi instead

[10:30] <mtymula89> Untill you jump to the more abstract level of understanding

[10:31] <Woodi> mtymula89: no, no... religion, politics and rase ar no 'all the way down' correct :)

[10:31] <sorear> the Japanese cultural interpretation of the Latin alphabet is fairly closely aligned with the English one

[10:31] <mtymula89> I am not saying they are, i am saying they feel like they are

[10:32] <sorear> whereas the Chinese interpret it in a way completely unlike anything in Europe

[10:32] <sorear> they're just squiggly lines, there is no one correct way to interpret them as sounds

[10:34] <Woodi> I realy wonder how that babel thing happened :)

[10:34] <sorear> I blame radiation.

[10:34] <Woodi> I blame time and separation :)

[10:34] <dalek> rakudo-js: 184c9e4 | (Paweł Murias)++ | / (2 files):

[10:34] <dalek> rakudo-js: [nqp] start of work on rules

[10:34] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/184c9e4f54

[10:34] <dalek> rakudo-js: 4ff91b7 | (Paweł Murias)++ | / (3 files):

[10:34] <dalek> rakudo-js: [nqp] Pass test 31, very basic rules support.

[10:34] <dalek> rakudo-js: Needs cleanup of how values are converted.

[10:34] <dalek> rakudo-js: review: https://github.com/pmurias/rakudo-js/commit/4ff91b7344

[10:35] *** pmurias joined
[10:35] <Woodi> sorear: so niecza NativeCall can be .pm compatible ?

[10:37] *** exodist_ left
[10:37] <sorear> Woodi: yes ideally

[10:37] <Woodi> suuuper!

[10:37] <mtymula89> Who wrote using perl 6 book, chapter 4 ??

[10:38] <mtymula89> Every example reminds me about eating.... 

[10:38] <Woodi> pls tell you want to shoot someone or thanks ? :)

[10:39] <mtymula89> I want him to buy me lunch

[10:40] <Woodi> I think someone from here :)

[10:40] * Woodi coffe making

[10:40] <arnsholt> git blame can probably tell you who wrote most of it =)

[10:41] <sorear> looks like jnthncode

[10:42] <sorear> huh, git blame is very mixed

[10:42] *** am0c left
[10:42] <arnsholt> Yeah, food and beer definitely sounds like jnthn =D

[10:42] <sorear> chromatic, moritz, jnthn, tim bunce, Przemysław Wesołek on one page

[10:43] *** kresike joined
[10:43] <kresike> hello all you happy perl6 people

[10:43] <sorear> yo kresike

[10:43] <kresike> sorear, o/

[10:43] <mtymula89> Hi

[10:48] <Woodi> sorear: one more question: if you would want to implement ropes for niecza you will do it ib C# or in C ?

[10:49] <Woodi> just hoping for nice, new C lib...

[10:50] <sorear> Woodi: c# for current-niecza, C for the hypothetical C backend

[10:50] <sorear> I do not think foreign calls are cheap enough to use here

[10:51] <Woodi> k, thanx

[10:52] <arnsholt> Woodi: And if some part of NativeCall turns out to be completely incompatible with Niecza, we'll probably want to change S21

[10:53] <sorear> bear in mind that I have not read any of the new S21 and I have only the barest minimum understanding of NativeCall

[10:53] <sorear> I just know that it's a high priority and the CLR can support the backend aspects of it

[10:54] <arnsholt> How familiar are you with the C# (CLR?) foreign function interface stuff, BTW?

[10:56] <sorear> arnsholt: somewhat.  it doesn't seem particularly different from what I know from Parrot, Haskell, and VB6

[10:57] *** pmurias left
[10:58] *** Vlavv_ left
[10:59] <arnsholt> Cool. There're some aspects of FFI I'm not sure how should be done (complex value types, specifically)

[10:59] <sorear> We'll come up with something together.

[10:59] <arnsholt> And jnthn suggested looking into how the C# FFI handles it, as it needs to tackle similar problems as Perl 6

[11:00] <Woodi> arnsholt: while using NativeCall it happens to me wanting to call C preprocessor macro. for now I hardcoded correct numbers inserted by macro in .pm. I there a way to call C macro from Perl6 ?

[11:00] <arnsholt> That's impossible

[11:01] <Woodi> ok :)

[11:01] <arnsholt> preprocessor macros are handled at compile-time, and they're not available in the library

[11:01] <sorear> arnsholt: oh, and I've also more or less completely read the x86 and amd64 C and C++ ABI specs (plus a much smaller amount of 68k and PPC)

[11:01] <arnsholt> Oh, that's awesome!

[11:02] <arnsholt> Another area I'm less knowledgeable in than I should be

[11:02] *** gootle left
[11:05] *** Su-Shee_ joined
[11:09] *** Su-Shee left
[11:09] *** anuby left
[11:13] *** Exodist joined
[11:19] <dalek> doc: fe0907e | (Pawel Pabian)++ | lib/Capture.pod:

[11:19] <dalek> doc: Fixed missing closing bracket in example.

[11:19] <dalek> doc: review: https://github.com/perl6/doc/commit/fe0907e287

[11:20] *** domidumont left
[11:25] *** hoelzro is now known as hoelzro|away

[11:27] *** isBEKaml joined
[11:27] <isBEKaml> OHHAI, #perl6! 

[11:27] <moritz> LOL IT'S isBEKaml

[11:28] <tadzik> oh hai

[11:29] <isBEKaml> R* release in a couple days? 

[11:29] * isBEKaml excitedly looks forward to it

[11:29] <moritz> maybe even today

[11:29] <moritz> there's a release candidate already

[11:30] <moritz> http://moritz.faui2k3.org/tmp/rakudo-star-2012.11-RC0.tar.gz

[11:30] *** pmurias joined
[11:31] <isBEKaml> moritz++ #fast, as ever!

[11:32] <isBEKaml> BTW, I think the last R* release msi didn't include modules. Was that intended?

[11:32] <isBEKaml> *msi*

[11:38] <isBEKaml> how do I build this dist? Do I have to build parrot, nqp and rakudo separately(cd'ing into them, out of the tarball)

[11:39] <isBEKaml> Don't we have an unified Configure.pl/Makefile for this?

[11:39] <moritz> just perl Configure.pl --gen-parrot && make install

[11:39] <isBEKaml> --gen-parrot won't clone a new parrot repo if it finds one in the current directory?

[11:40] <moritz> correct

[11:40] <isBEKaml> awesome.

[11:40] <isBEKaml> I hate to clone an 100mb repo again.

[11:41] <FROGGS> moritz: do you need some more information about RC0?

[11:42] <FROGGS> some module tests are failing, but just the ones that were discusses here yesterday

[11:42] <moritz> FROGGS: no

[11:47] <isBEKaml> rn: say $::x;

[11:47] <p6eval> niecza v22-44-g0247fe5: OUTPUT«Unhandled exception: System.NullReferenceException: Object reference not set to an instance of an object␤  at Niecza.StashCursor.Core (System.String key, Boolean final, Niecza.StashCursor& sc, Niecza.Variable& v, Niecza.Variable bind_to) [0x00000] in <file…

[11:47] <p6eval> ..rakudo e6e158: OUTPUT«===SORRY!===␤Variable $x is not declared␤at /tmp/Y6HqLX3ofD:1␤»

[11:48] <isBEKaml> rn: my $::x = 3; 

[11:48] <p6eval> rakudo e6e158:  ( no output )

[11:48] <p6eval> ..niecza v22-44-g0247fe5: OUTPUT«Potential difficulties:␤  $x is declared but not used at /tmp/V56t3OwDst line 1:␤------> [32mmy [33m⏏[31m$::x = 3;[0m␤␤»

[11:48] *** replore joined
[11:48] <sorear> sleep&

[11:48] <isBEKaml> g'night, sorear

[11:49] <FROGGS> moritz: here we go: https://github.com/rakudo/rakudo/pull/92

[11:55] <isBEKaml> r: say (;:[])

[11:55] <p6eval> rakudo e6e158: OUTPUT«␤»

[11:56] <moritz> r: say (:[]).perl

[11:56] <p6eval> rakudo e6e158: OUTPUT«[]␤»

[11:56] *** wamba left
[11:57] <FROGGS> I thought : is for named params, what does it do without the routine call?

[11:57] <moritz> create a pair, normally

[11:57] <moritz> r: say ( :a ).perl

[11:57] <p6eval> rakudo e6e158: OUTPUT«"a" => Bool::True␤»

[11:57] <FROGGS> ahh, two dots, I see

[11:58] <moritz> r: say ( :a<b c> ).perl

[11:58] <jnthn> But the semicolon seems to impair it somehow...

[11:58] <p6eval> rakudo e6e158: OUTPUT«"a" => $("b", "c")␤»

[11:58] <jnthn> That's odd.

[11:58] <moritz> r: say (;:[]).perl

[11:58] <p6eval> rakudo e6e158: OUTPUT«[]␤»

[11:58] <FROGGS> r: say (;:a).perl

[11:58] <p6eval> rakudo e6e158: OUTPUT«"a" => Bool::True␤»

[11:58] <moritz> the semicolon doesn't seem to do anything

[11:58] <jnthn> oh!

[11:59] <jnthn> I missed the lack of .perl :)

[11:59] <jnthn> phew, not a weird bug then :P

[11:59] <FROGGS> *g*

[11:59] <moritz> so, what does the colon in :[] do?

[11:59] <jnthn> At least I got to make a pun :)

[11:59] <jnthn> Good question...

[11:59] <moritz> how fitting for your role

[11:59] * moritz waits for a pun on role punning

[12:00] <isBEKaml> moritz, jnthn: That's merely RT#115284

[12:00] <isBEKaml> :)

[12:00] <FROGGS> nothing? I mean it is supposed to devide terms... but there is none before ;

[12:00] <moritz> it's supposed to do quite a lot of different things, depending on context

[12:00] <moritz> std: :[]

[12:00] <p6eval> std a8bc48f: OUTPUT«ok 00:00 42m␤»

[12:01] <isBEKaml> std: say (;:[])

[12:01] <p6eval> std a8bc48f: OUTPUT«ok 00:00 44m␤»

[12:01] <moritz> n: say (:[]).perl

[12:01] <jnthn> It certainly should parse, says STD

[12:01] <p6eval> niecza v22-44-g0247fe5: OUTPUT«"" => []␤»

[12:01] <moritz> pugs: say (:[]).perl

[12:01] <p6eval> pugs: OUTPUT«*** ␤    Unexpected ":[])."␤    expecting "::"␤    at /tmp/bmqlZvEEY_ line 1, column 6␤»

[12:01] <isBEKaml> FROGGS: I believe it looks like: say ; :[] # the :[] does nothing here. 

[12:02] <isBEKaml> r: :[]

[12:02] <p6eval> rakudo e6e158:  ( no output )

[12:02] <moritz> no, it's an argument to say()

[12:02] <FROGGS> well, you get the last thing within ()

[12:02] <FROGGS> r: say (1;2;3;4)

[12:02] <moritz> r: sub f(|a) { say a.perl }; f (:[])

[12:02] <p6eval> rakudo e6e158: OUTPUT«4␤»

[12:02] <p6eval> rakudo e6e158: OUTPUT«Capture.new( list => ([],).list, hash => EnumMap.new())␤»

[12:02] <isBEKaml> moritz: say; 

[12:02] <moritz> r: sub f(|a) { say a.perl }; f (;:[])

[12:02] <p6eval> rakudo e6e158: OUTPUT«Capture.new( list => ([],).list, hash => EnumMap.new())␤»

[12:02] <isBEKaml> r: say

[12:02] <p6eval> rakudo e6e158: OUTPUT«␤»

[12:02] <moritz> r: say []

[12:02] <p6eval> rakudo e6e158: OUTPUT«␤»

[12:02] <moritz> isBEKaml: that's no prove :-)

[12:03] <moritz> r: sub f(|a) { say a.perl }; f (;:[]) # look, &f sees the []

[12:03] <p6eval> rakudo e6e158: OUTPUT«Capture.new( list => ([],).list, hash => EnumMap.new())␤»

[12:03] <isBEKaml> moritz: :) farenuff.

[12:03] *** hoelzro|away is now known as hoelzro

[12:03] <FROGGS> .oO( E_FARENUFF )

[12:04] <isBEKaml> fair, fare, damn homonyms!

[12:04] <moritz> aye, there's a fare amount of them in English :-)

[12:07] <isBEKaml> jnthn: when can we see rakudo journeying into jvm land? :-)

[12:08] <FROGGS> he said something about december

[12:08] <FROGGS> but I guess he starts to work on that then, not finishing it ;o)

[12:09] <isBEKaml> FROGGS: yes, I was asking about initial workings. Not the finished product. I thought it'd be interesting to see it evolving. 

[12:11] <isBEKaml> moritz: rakudo star doesn't install precompiled modules into ~/.perl6 ?

[12:12] <moritz> isBEKaml: no

[12:12] <moritz> erm, I hope not, at least

[12:12] <moritz> if so, I need to fix it

[12:12] <moritz> ~/.perl6/lib is deprecated

[12:12] <isBEKaml> I was wondering because the build seemed to be compiling those modules. 

[12:13] <moritz> install/lib/parrot/4.6.0/languages/perl6/lib/LWP/Simple.pm

[12:13] <moritz> install/lib/parrot/4.6.0/languages/perl6/lib/LWP/Simple.pir

[12:13] <moritz> isBEKaml: it installs them, but not into ~/.perl6/lib

[12:14] <isBEKaml> moritz: ah, I didn't see that one. :-)

[12:15] <isBEKaml> moritz: any reasons for deprecating ~/.perl6/lib apart from usability issues between distributions?

[12:16] *** erkan left
[12:17] *** sftp joined
[12:18] <moritz> isBEKaml: usability between different rakudo installations too

[12:21] <isBEKaml> moritz: I remember that one. Stale pirs and others. Yapsi once bit me there. :)

[12:22] <isBEKaml> moritz: would be nice to see p6doc installed along with other binaries in install/bin instead of modules/doc/bin.

[12:23] <moritz> agreed

[12:23] <moritz> isBEKaml: could you open a ticket in https://github.com/rakudo/star/issues for that please?

[12:26] <isBEKaml> moritz: done. https://github.com/rakudo/star/issues

[12:26] <isBEKaml> whoops> https://github.com/rakudo/star/issues/12

[12:27] <moritz> isBEKaml++

[12:29] *** domidumont joined
[12:30] *** HarryS left
[12:31] *** domidumont left
[12:31] *** domidumont joined
[12:31] *** HarryS joined
[12:36] <isBEKaml> moritz: https://github.com/svatsan/star/commit/cf0563d79eb640ba8bf6afb73b64a10930b9241d

[12:36] <isBEKaml> moritz: does this look like the fix?

[12:36] *** Kharec left
[12:38] <moritz> isBEKaml: might very well be

[12:39] <isBEKaml> moritz: want me to send a pull request?

[12:39] <moritz> isBEKaml: yes please

[12:40] *** Kharec joined
[12:42] <isBEKaml> moritz: done. 

[12:43] *** mtymula89 left
[12:50] <isBEKaml> perl6 -n -e '' hangs my machine. This behaviour is different from the one shown in RT#107992

[12:50] <moritz> hangs?

[12:51] <moritz> it's supposed to read from standard input

[12:51] <moritz> and terminate when you send an EOF

[12:51] <isBEKaml> boo, I should read. :|

[12:54] <sergot> hi ! o/

[12:55] <isBEKaml> hello, sergot

[13:03] *** wamba joined
[13:05] *** cognominal left
[13:06] *** pmurias left
[13:11] *** cognominal joined
[13:17] *** rurban_ joined
[13:21] *** kcwu left
[13:23] *** isBEKaml left
[13:23] *** cognominal left
[13:23] *** isBEKaml joined
[13:29] *** replore left
[13:29] *** replore joined
[13:31] *** rurban_ left
[13:31] *** isBEKaml left
[13:31] *** isBEKaml|2 joined
[13:33] *** isBEKaml|2 left
[13:33] *** rurban_ joined
[13:33] *** replore left
[13:34] *** bonsaikitten joined
[13:36] *** kcwu joined
[13:38] *** sizz joined
[13:39] *** sizz_ left
[13:40] *** bonsaikitten left
[13:43] *** bonsaikitten joined
[13:45] <jnthn> phenny: tell isBEKaml once December comes, $dayjob gets much less intense and I expect to get some initial JVM things pushed, and will probably have LHF tasks for interested hackers. ;-)

[13:45] <phenny> jnthn: I'll pass that on when isBEKaml is around.

[13:46] <FROGGS> LHF?

[13:46] * FROGGS is interested in things he can do

[13:46] <jnthn> FROGGS: Low Hanging Fruit

[13:46] <FROGGS> ahh

[13:46] <jnthn> As in, things that should be relatively easy to dig into without having to learn a mass of background.

[13:46] <FROGGS> ya, thats my problem too

[13:51] <moritz> I know a nice task

[13:52] *** cognominal joined
[13:52] <moritz> change the star build system so that it bootstraps panda, and then uses panda to install the rest of the modules

[13:52] <moritz> at least I think that's a good idea to do

[13:53] <moritz> because currently we maintain the same logic in panda and in star, and that's a bit... nasty

[13:53] <tadzik> I wonder how panda would react to having non-writable statefile

[13:55] <moritz> hm

[13:55] <moritz> might need to have two state files

[13:55] <moritz> one non-writable, one writable

[13:56] <tadzik> hm

[13:57] <tadzik> now bootstrap.pl checks if it can write into %*CUSTOM_LIB, is that right?

[13:57] <moritz> how does Perl 5 do it?

[13:57] <moritz> tadzik: correct

[13:57] <tadzik> Perl 5 doesn't have local::lib by default :)

[13:57] <moritz> ah, right

[14:07] *** jaldhar left
[14:11] *** rurban_ left
[14:13] *** GlitchMr joined
[14:14] *** bluescreen10 joined
[14:15] *** atrodo joined
[14:19] *** Su-Shee_ is now known as Su-Shee

[14:23] *** wamba left
[14:24] *** wamba joined
[14:24] *** rurban_ joined
[14:25] *** hash_table joined
[14:28] *** bowtie joined
[14:30] *** hash_table left
[14:35] *** rurban_ left
[14:36] *** rurban_ joined
[14:43] *** wamba left
[14:47] *** rindolf left
[14:49] *** jaldhar joined
[14:51] <dalek> Perlito: cb31482 | (Flavio S. Glock)++ | / (5 files):

[14:51] <dalek> Perlito: Perlito5 - js2 - allow using a string as a reference

[14:51] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/cb3148268d

[14:51] <[Coke]> aaagh. I know we have some LOTR fans here. one of my favorite authors (Scalzi) just pointed out that we shouldn't get our hopes up about the hobbit... after all, it IS a prequel trilogy.

[14:52] *** stopbit joined
[14:56] <moritz> :-)

[14:57] <arnsholt> =D

[14:58] <arnsholt> When talking about the books, it's LotR that's the sequel though =)

[14:58] *** jerome left
[15:02] *** cognominal left
[15:08] *** cognominal joined
[15:08] *** rurban_ left
[15:10] *** jerome joined
[15:15] *** kaleem left
[15:18] *** skids joined
[15:23] *** rurban_ joined
[15:24] *** rurban_ left
[15:25] *** rurban_ joined
[15:32] *** erkan joined
[15:32] *** erkan left
[15:32] *** erkan joined
[15:35] *** cognominal left
[15:36] *** rurban_ left
[15:37] *** kaare_ joined
[15:40] *** hash_table joined
[15:43] *** cognominal joined
[15:47] *** cognominal left
[16:02] <kresike> bye folks

[16:02] *** kresike left
[16:07] <dalek> Perlito: 5eb66c4 | (Flavio S. Glock)++ | / (5 files):

[16:07] <dalek> Perlito: Perlito5 - alternate impl for caret Vars; 3 more tests pass in base/lex.t

[16:07] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/5eb66c4c2f

[16:21] *** thou joined
[16:29] *** Kharec left
[16:29] *** wamba joined
[16:39] *** replore joined
[16:40] *** Kharec joined
[16:41] *** am0c joined
[16:42] *** domidumont left
[16:56] *** FROGGS left
[17:01] *** rurban_ joined
[17:01] <jnthn> evening, #perl6

[17:01] *** cognominal joined
[17:02] *** rurban_ left
[17:03] <dalek> Perlito: 69de328 | (Flavio S. Glock)++ | / (3 files):

[17:03] <dalek> Perlito: Perlito5 - parser - decode caret Vars at compile-time

[17:03] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/69de3284fb

[17:05] *** benabik left
[17:05] *** benabik joined
[17:06] *** cognominal left
[17:09] *** jaldhar left
[17:10] *** MayDaniel joined
[17:10] *** ryutin joined
[17:11] <dalek> Perlito: 72f9f0a | (Flavio S. Glock)++ | / (4 files):

[17:11] <dalek> Perlito: Perlito5 - Dumper - encode "unsafe" strings

[17:11] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/72f9f0a647

[17:11] *** larks left
[17:11] *** larks joined
[17:12] *** cognominal joined
[17:13] <diakopter> jnthn: howdy

[17:14] *** brrt joined
[17:14] *** MayDaniel left
[17:16] *** birdwindupbird left
[17:16] <dalek> Perlito: 22e3af4 | (Flavio S. Glock)++ | / (3 files):

[17:16] <dalek> Perlito: Perlito5 - js2 - caret Var cleanup

[17:16] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/22e3af43d2

[17:16] *** MayDaniel joined
[17:18] *** replore left
[17:20] *** ryutin left
[17:26] *** rindolf joined
[17:27] *** ryutin joined
[17:29] *** domidumont joined
[17:29] *** supernovus joined
[17:31] *** FROGGS joined
[17:32] <supernovus> How does %*CUSTOM_LIB interact with @*INC, and which paths are searched first? One issue I had come across with users of Rakudo Star is that modules bundled with the distribution override newer versions installed with Panda. It's one of the reasons I never use Star, or any other distribution that includes non-core modules (other than "Test" of course.)

[17:33] <masak> evenin', #perl6

[17:35] <supernovus> I guess overriding wouldn't be a problem if we had the versioning support, so we could have multiple versions of modules installed. Anyone want to tackle that? (and if not, where do I begin to look at module discovery and loading, so I can look at hacking at it?)

[17:37] *** kaare_ left
[17:38] *** jaldhar joined
[17:40] <diakopter> masak: howdy

[17:43] <supernovus> good * masak

[17:44] *** kaare_ joined
[17:45] *** Vlavv_ joined
[17:46] <FROGGS> supernovus: If I understand moritz correctly then newer R* will use panda to install modules when installing R*. so there will be just one version of a module at a time

[17:46] *** SHODAN joined
[17:47] <FROGGS> supernovus: versioning support will not always help since sometimes you may want to downgrade to an older version

[17:47] *** domidumont left
[17:47] <supernovus> FROGGS: Hurray! That's fantastic! Still, nobody else has tackled module versioning, so if nobody objects, I wouldn't mind taking a look at it. I'm hunting for the location of the module loading stuff.

[17:47] *** domidumont joined
[17:47] <FROGGS> supernovus++

[17:48] <FROGGS> versioning ftw!

[17:49] <FROGGS> would it be a bad idea to support having different versions of a module installed at a time?

[17:49] <supernovus> FROGGS: that's exactly where versioning is good, you can have a new version, and an old version, and by specifying version constraints in the use statement, you can say, "okay, I want at least this" or "I want newer than this, but older than this" or "I want this version specifically, and only this version, got it!"

[17:50] <FROGGS> a path like lib/My/Module/1.0.0/[files]

[17:50] <FROGGS> so that you can explicitly use version 1.0.0 of a module from withing script A, and version 1.0.1 from script B

[17:50] <FROGGS> right

[17:51] <FROGGS> cool

[17:51] *** rurban_ joined
[17:52] <supernovus> Due to how the paths work, I'm thinking it would have to be more like lib/My/Module.1.0.0.pm6, as the use/require/need statements don't know about every module/class in a bundle, just path names.

[17:52] <FROGGS> but you to fiddle with %*INC, so that the highest non-dev release gets picked when no version is specified

[17:52] <FROGGS> k

[17:53] <FROGGS> is there a spec about versioning? would be good to make one first before hacking

[17:54] *** hoelzro is now known as hoelzro|away

[17:56] *** fgomez left
[17:59] <supernovus> http://perlcabal.org/syn/S11.html specifies some of it, but I think it needs some updates. It was designed before the advent of any package managers for Perl 6, so it doesn't take into account the information from META.info, etc.

[18:02] <FROGGS> I like the idea of having Module-1.0.0.pm6 and other in the same dir, so you would just need to symlink the newest to Module.pm6

[18:02] <FROGGS> that will work well for .pm's, but not for other things that dont have a version

[18:03] <FROGGS> like images or other resources

[18:03] <supernovus> You wouldn't even need to do that, as if you didn't specify a version constraint in your use statement, it would use the newest version by default.

[18:03] * FROGGS will read S11 this evening

[18:04] <FROGGS> what if you want to require a module by its path? you would need to invent the whole versioning thing again in your code

[18:04] <FROGGS> with symlinks you can be sure that a Module.pm6 is there

[18:05] *** fhelmberger left
[18:05] <supernovus> The versioning spec as it currently exists is a bit lacking when it comes to things like resources or binaries. It was't designed with those in mind unfortunately. We may need to do some spec refining as well as implementation testing. It could take a few iterations to get something that everyone likes :-)

[18:06] *** rurban_ left
[18:06] <supernovus> FROGGS: symlinks are great, and I use them a lot, but I also realize that many people run Windows, and does Windows have an equivalent to symlinks? Basically, whatever we do in the versioning spec, needs to be able to be supported on any platform.

[18:06] *** dakkar left
[18:07] <FROGGS> a fallback of a symlink is a copy of a file ;o)

[18:07] <supernovus> I know some of my own libraries have depended on Unix specific features, and I'm 100% guilty of never testing my stuff on anything but Linux, but I'm trying to get better about writing stuff to be as platform neutral as possible :-)

[18:09] * supernovus prints CLA, signs it, and puts it in the "need to go to snail mail office" pile.

[18:11] <FROGGS> did that last week

[18:23] *** brrt left
[18:24] *** Kharec left
[18:29] <[Coke]> supernovus: it is faxable, I think.

[18:29] *** am0c left
[18:29] <[Coke]> or perhaps scannable and emailable.

[18:29] * [Coke] str parrot, at least, had that part worked out. not sure if TPF does.

[18:30] <tadzik> supernovus: email it

[18:30] <tadzik> it worked for me :)

[18:33] <supernovus> tadzik: Hmm, that's nice to know, they didn't say anything about being able to e-mail it on the form itself.

[18:33] <supernovus> That would certainly be a lot faster than snail mail...

[18:34] <supernovus> Hmm, hope it's just my ISP, but perlfoundation.org is not coming up for me.

[18:36] <tadzik> supernovus: http://isup.me/perlfoundation.org

[18:36] <tadzik> ...but it seems down to me as well :)

[18:38] <supernovus> I'd say I'm glad I'm not the only one, but if it's down for a bunch of people, that's not a good thing.

[18:42] *** rurban_ joined
[18:43] *** am0c joined
[18:46] <[Coke]> seen robrt

[18:46] <aloha> robrt was last seen in  15671 days 18 hours ago .

[18:46] <supernovus> Re-reading S11. It seems fairly complex. If we declare a class like "class Foo:auth<github:supernovus>:ver(v1.0.0)" how would we go about accessing the meta data such as "auth" or "ver" (or is that even supported in any implementations yet?)

[18:46] <[Coke]> seen allison

[18:46] <aloha> allison was last seen in #parrot 18 days 19 hours ago joining the channel.

[18:46] *** rindolf left
[18:54] *** rurban_ left
[19:01] *** anew__ joined
[19:01] *** rurban_ joined
[19:02] *** anew__ left
[19:03] <sorear> good * #perl6

[19:04] <supernovus> good * sorear

[19:06] *** Kharec joined
[19:09] *** Chillance joined
[19:09] *** ryutin left
[19:16] *** rurban_ left
[19:17] *** sirrobert joined
[19:27] *** arlinius left
[19:27] *** bowtie left
[19:30] *** fgomez joined
[19:36] *** SamuraiJack left
[19:43] <FROGGS> supernovus: btw, I have several platforms as VMs here to test things

[19:44] <supernovus> Okay, digging in through the code, it appears the colonpairs appended to class/module names are stashed in the LongName and never referred to again. Making things even more complicated, use, require, need, etc. all handle things differently, and none of them seem to support colonpairs attached to the name. I'm going to have a learn a lot more about the guts of this thing before I can do anything useful. A crash course in NQP may h

[19:44] <supernovus> elp, thankfully it seems most of the PIR blocks are gone. NQP I can handle, PIR is the devil's work (IMO)

[19:51] <supernovus> FROGGS: I have Ubuntu 12.10 64 bit, Funtoo Linux current 64 bit, and Windows 8 Pro 64bit. I have Rakudo (not Star, a daily-built git checkout) and Niecza on both Linux distros, and don't even have developer tools on Windows, let alone a Perl 6 implementation. I should give it a try some day.

[19:53] <FROGGS> I've got some BSDs, Mac OS x 10.6, solaris, gnu hurd, win xp and win 7, most of them to test Perl 5 stuff

[19:54] <supernovus> Sweet. I used to have a bunch of test environments, but have gotten lazy.

[19:59] *** tokuhiro_ left
[19:59] *** tokuhiro_ joined
[20:00] *** wamba left
[20:06] *** bluescreen10 left
[20:07] *** grondilu joined
[20:08] <grondilu> nr: my @a = <f o>; say "foo" ~~ / < @abc > ** 3 /; 

[20:08] <p6eval> niecza v22-44-g0247fe5: OUTPUT«Potential difficulties:␤  @a is declared but not used at /tmp/_Myj7OgoCa line 1:␤------> [32mmy [33m⏏[31m@a = <f o>; say "foo" ~~ / < @abc > ** 3[0m␤␤Match()␤»

[20:08] <p6eval> ..rakudo e6e158: OUTPUT«#<failed match>␤»

[20:08] <grondilu> nr: my @abc = <f o>; say "foo" ~~ / < @abc > ** 3 /; 

[20:08] <p6eval> niecza v22-44-g0247fe5: OUTPUT«Potential difficulties:␤  @abc is declared but not used at /tmp/e0LRFYzCgS line 1:␤------> [32mmy [33m⏏[31m@abc = <f o>; say "foo" ~~ / < @abc > **[0m␤␤Match()␤»

[20:08] <p6eval> ..rakudo e6e158: OUTPUT«#<failed match>␤»

[20:09] <grondilu> nr: my @abc = <f o>; say "foo" ~~ / <@abc> ** 3 /; 

[20:09] <p6eval> niecza v22-44-g0247fe5: OUTPUT«#<match from(0) to(3) text(foo) pos([].list) named({}.hash)>␤»

[20:09] <p6eval> ..rakudo e6e158: OUTPUT«#<failed match>␤»

[20:09] <grondilu> NYI in rakudo I guess

[20:11] *** am0c left
[20:11] *** kurahaupo joined
[20:12] *** arlinius joined
[20:19] *** domidumont left
[20:20] *** domidumont joined
[20:24] *** domidumont left
[20:27] *** wamba joined
[20:33] *** cognominal left
[20:34] *** wamba left
[20:34] *** wamba joined
[20:37] <FROGGS> tadzik: after sending the CLA to TPF, is there any reaction that one could expect?

[20:37] <masak> FROGGS: don't think so.

[20:37] <masak> at least, I don't remember one.

[20:38] <FROGGS> masak: k

[20:38] <masak> back when I sent mine in, people voted on #parrotsketch about whether to give out commitbits.

[20:38] <FROGGS> interesting

[20:38] <masak> I remember backloggin over people doing "+1" on the proposal to commitbit me. made me feel warm all over. :>

[20:39] <FROGGS> ahh, so you dont have to dance your name in order to get commit bit?

[20:39] <masak> I didn't. maybe you do. :P

[20:39] <masak> but this was in, hm, 2008. and I haven't seen that voting process in a while.

[20:39] <jnthn> We're givin' WHO a commit bit? :P

[20:39] <FROGGS> well, is easier for me than for you when I think about it...

[20:39] <masak> jnthn: hehe. you're four years late :P

[20:39] <jnthn> :P

[20:40] <jnthn> FROGGS++ # sending in CLA

[20:40] <FROGGS> well, masak++ forced me to ;o)

[20:40] <masak> CLA, the gift that keeps on giving.

[20:41] *** ifim joined
[20:42] <FROGGS> it is a bit like jehovah's witnesses, running around, knocking on doors: "do you believe in Perl?"

[20:43] *** sirrobert left
[20:43] <FROGGS> but its okay, this way the code is saved

[20:43] <tadzik> FROGGS: I don't remember any particular reaction, no :)

[20:44] <FROGGS> thinking of the openstreetmap data in berlin that got "lost" because its "owner" decided to keep it close at some point

[20:44] <tadzik> hehe,

[20:44] <Woodi> versioning would be fine for perlcode.pm6. but it will be nice to detect what compiler version was used to precompile modules (in case all precompiled ends in common dir)...

[20:45] <tadzik> recently, instead of being knocked to my door I got a hand-written letter from JW

[20:45] <FROGGS> JW?

[20:45] <tadzik> that's way more romantic way to get hit on than usual :D

[20:45] <tadzik> Jehova's Witnesses

[20:45] <FROGGS> Woodi: we have to take all this into account, yes

[20:45] <FROGGS> ohh

[20:46] *** bowtie joined
[20:47] * masak tadzik I got my first girlfriend by handwritten letter :)

[20:47] * masak fails at privmsg :P

[20:47] <tadzik> haha :)

[20:47] <FROGGS> *g*

[20:48] <masak> I must be tireder than I thought.

[20:48] <masak> oh well.

[20:48] <tadzik> tired deer

[20:48] <masak> we were in second grade. a bit too early for serious romance.

[20:50] *** tokuhiro_ left
[20:51] <tadzik> I had a similar crush at the beginning of primary school. She ended up being a world-class model years later

[20:51] <tadzik> only to give up the career once it got serious, or something

[20:51] <FROGGS>  well, its not the best job though

[20:51] <tadzik> those were the days, eh?

[20:52] <FROGGS> ;o)

[20:52] <tadzik> yeah, I know. "Gosh, this guy was in primary school 3 years ago or something!" :P

[20:52] *** fgomez left
[20:53] <FROGGS> hehe

[20:53] <masak> you have your whole life in front of you.

[20:53] <masak> unlike geezers like me. :P

[20:53] *** tokuhiro_ joined
[20:53] <tadzik> cheer up, grampa!

[20:53] * masak .oO( not helping... ) :P

[20:54] <jnthn> masak: Careful, I'm only a few years behind :P

[20:54] <FROGGS> damnit, I'm thirty! the ppl in medieval were already dead at that age

[20:54] <masak> jnthn: come on, you're almost as young as tadzik! :P

[20:55] <FROGGS> well, compared to the usual Perl 5 hacker we are pretty young

[20:55] <tadzik> spunky little sisters

[20:55] <FROGGS> at least when comparing to the folks at the YAPC::EU

[20:56] <tadzik> heh, if it wasn't for pjcj's son I'll probably be the youngest one there

[20:56] <jnthn> I might as well use a picture of a darn whirlpool at this rate...

[20:56] <jnthn> uh, wrong window

[20:56] * jnthn must be as tired as masak :P

[20:57] <masak> at least my mis-window utterance wasn't about something as embarrassing as whirlpools! :P

[20:57] <sorear> tadzik: mberends jr was also pretty young

[20:57] <tadzik> yeah, he was the clear winner on the PRS

[20:57] <masak> was gonna mention young berends.

[20:57] <tadzik> sadly they weren't on the actual yapc 

[20:58] <masak> mberends has grown disappointed with the deployment rate of Perl 6 :/

[20:59] <tadzik> well, I'll also prefer it tomorrow :P

[20:59] <tadzik> but this is hard stuff

[21:02] <masak> yeah.

[21:03] <masak> I just want to use Perl 6 :) if world domination fails to happen, I'll still have Perl 6, and I'll be a pretty effective programmer with it.

[21:04] <FROGGS> well, today I had to think about of a second systems effect when thinking of Perl 6... but when I see what happens these days I'm sure it will be in a good shape (or maybe it is already)

[21:05] *** GlitchMr left
[21:05] *** kaare_ left
[21:07] <masak> there are still things to do.

[21:07] <masak> and still too few to do it. :)

[21:07] <tadzik> I still need to refactor keybags and friends

[21:07] <supernovus> r: my $short_v = v1.0.0; say $v;

[21:07] <p6eval> rakudo e6e158: OUTPUT«===SORRY!===␤Variable $v is not declared␤at /tmp/CKm9jqYst4:1␤»

[21:07] *** fgomez joined
[21:07] <supernovus> r: my $short_v = v1.0.0; say $short_v;

[21:07] <tadzik> I don't think we ever resolved the role attributes dillema

[21:07] <p6eval> rakudo e6e158: OUTPUT«v1.0.0␤»

[21:08] <supernovus> r: my $long_v = v10.0.0; say $long_v;

[21:08] <p6eval> rakudo e6e158: OUTPUT«===SORRY!===␤Confused␤at /tmp/dnJBrd4Ru6:1␤»

[21:08] <tadzik> (or what was that)

[21:08] <FROGGS> masak: see, I need commit bit ;o)

[21:09] <masak> :)

[21:09] <tadzik> "a private attribute declared using has is private to the class, not to the role"

[21:09] <tadzik> IIRC this part of spec is a lie

[21:09] * masak read "this part of cake is a lie"

[21:10] <masak> need... sleep...

[21:10] <tadzik> yeah

[21:11] <skids> hrm. well were it a lie it kinda makes it hard to componentize a class without exposing all its guts.  Unless there's an alternative?

[21:11] <masak> tadzik: I've thought about roles and attributes. I think if roles can *easily* be made to have their own private attribute, then they should. if not, then it's worth having a serious discussion whether it's worth it.

[21:11] *** ifim left
[21:12] <masak> tadzik: one of the nice things about interfaces in C# is that you can apply several different concretizations of a generic interface to a class.

[21:12] <tadzik> r: https://gist.github.com/4157041

[21:12] <p6eval> rakudo e6e158: OUTPUT«===SORRY!===␤Attribute $!a not declared in class MyClass␤at /tmp/PLSYm8Y1Ep:10␤»

[21:12] <masak> and that kinda presupposes that attributes be private to the role, not the class.

[21:12] <tadzik> I don't mind them being private to whatever they want to be, but there was something I wanted to do and couldn't, whatever the way

[21:13] <masak> *nod*

[21:13] <skids> I've always just assumed the above gist result was a NYI/bug.

[21:14] <tadzik> another one:

[21:14] <tadzik> r: https://gist.github.com/4157055

[21:14] <p6eval> rakudo e6e158: OUTPUT«Any()␤»

[21:17] <skids> Oh wait, I remember now.  You're supposed to use "trusts $*CLASS" which is NYI.

[21:18] <masak> that sounds backward.

[21:19] <masak> it's the role that declares the attribute, no?

[21:31] <supernovus> Interesting, the <version> rule in the grammar seems limited to a single digit after the 'v'. 

[21:32] <masak> it's to prevent Perl 10 from happening...

[21:32] <supernovus> masak: hah! 

[21:32] <masak> supernovus: no, I think you're reading that wrong...

[21:32] <supernovus> If I copy and paste the very same grammar code into a standalone grammar, it matches 'v10.0.0' just fine.

[21:32] <masak> https://github.com/perl6/std/blob/master/STD.pm6#L1610

[21:33] <masak> <?before \d> just means that it expects the next thing to be a digit.

[21:33] <masak> it's a zero-width match.

[21:35] <supernovus> std: v1.0.1

[21:35] <p6eval> std a8bc48f: OUTPUT«ok 00:00 41m␤»

[21:35] <supernovus> std: v10.0.1

[21:35] <p6eval> std a8bc48f: OUTPUT«[31m===[0mSORRY![31m===[0m␤Confused at /tmp/KyrrepllGu line 1:␤------> [32mv10.[33m⏏[31m0.1[0m␤    expecting any of:␤       dotty method or postfix␤        postcircumfix␤  postfix_prefix_meta_operator␤   postop␤Undeclared routine:␤     'v10' used at line 1␤Parse

[21:35] <p6eval> ..failed␤FAILED 00…

[21:36] <masak> I stand corrected.

[21:37] <supernovus> It seems STD agrees with Rakudo on this one, both fail when attempting to match a major version larger than 9.

[21:37] <skids> masak: yes the role declares the attribute, and declares what roles/classes it trusts.  Which can be $*CLASS if you don't want to name them ahead of time.

[21:37] <supernovus> n: v1.0.0

[21:37] <p6eval> niecza v22-44-g0247fe5: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Action method value:version not yet implemented at /tmp/qpWXza0y2p line 1 (EOF):␤------> [32mv1.0.0[33m⏏[31m<EOL>[0m␤␤Unhandled exception: Unable to resolve method statement_level in type Any␤  at /home/p6eval/niecza/src…

[21:37] <masak> supernovus: I don't understand. <vnum> clearly expects one or more digits.

[21:38] <supernovus> masak: Yeah, it makes no sense at all to me. I copied the bit from Rakudo's Grammar.pm and stuffed it into a standalone grammar, and it matches perfectly. The same match in Rakudo (and apparently STD) fails.

[21:39] <masak> maybe it's a NFA bug or something.

[21:39] * skids guesses that's ::?CLASS actually in S14

[21:40] <supernovus> This helps clarify things a bit.

[21:40] <supernovus> r: v10

[21:40] <p6eval> rakudo e6e158: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&v10' called (line 1)␤»

[21:41] <supernovus> std: v10

[21:41] <p6eval> std a8bc48f: OUTPUT«[31m===[0mSORRY![31m===[0m␤Undeclared routine:␤ 'v10' used at line 1␤Check failed␤FAILED 00:00 41m␤»

[21:41] <supernovus> The rule to match routines/symbols is overriding the rule to match versions.

[21:43] <supernovus> I guess just use Version.new('10.0') for now for any major version over 10.

[21:43] <jnthn> Probably because LTM

[21:45] <masak> oh, 'course.

[21:45] <masak> that makes 100% sense.

[21:47] <moritz> sorry that I didn't get around to do the R* release

[21:47] <moritz> will do tomorrow

[21:48] <masak> no prob. enjoy whatever's distracting you presently ;)

[21:51] *** pmurias joined
[21:51] *** fgomez left
[21:53] <FROGGS> gnight

[21:54] *** FROGGS left
[21:54] <masak> 'night, FROGGS

[22:04] *** MayDaniel left
[22:05] *** skids left
[22:05] *** hash_table left
[22:07] <moritz> http://moritz.faui2k3.org/tmp/rakudo-star-2012.11-RC1.tar.gz # next RC

[22:07] <moritz> if nobody objects, I'll release that one tomorrow

[22:09] *** supernovus left
[22:13] *** thou left
[22:15] <masak> 'night, #perl6

[22:15] *** sqirrel left
[22:21] *** sirrobert joined
[22:21] <sirrobert> hey all =)

[22:22] <sirrobert> I'm running the debugger on a very simple script ("my $foo = "bar"; say $foo;"), but I keep getting this error if I try to inspect anything:

[22:22] <sirrobert> P6opaque only supports type changes where the MRO of the original type is a suffix of the MRO of the new type

[22:22] <sirrobert> Anyone know why or how I can fix it?

[22:24] <jnthn> sirrobert: Odd, I was demonstrating latest debugger on a recent Rakudo at LPW at the weekend without problems...

[22:24] <sirrobert> The only thing I changed is a move to 64-bit architecture

[22:25] <sirrobert> I'll pop open a new 32b and see if it happens.

[22:25] <jnthn> sirrobert: oh...

[22:25] <jnthn> https://github.com/jnthn/rakudo-debugger/commit/e4c27f0838f8482a64aa722cac1ee5a45531447e

[22:25] <jnthn> Is your debugger at least that new?

[22:25] <sirrobert> it's rakudo-star-2012.10

[22:25] <jnthn> OK...

[22:26] <jnthn> I can see how a latest Rakudo + 2012.10 debugger would cause the problem

[22:26] <sirrobert> any fixes come to mind? =)

[22:26] <sirrobert> (and thanks)

[22:26] <jnthn> But for me it failed immediately rather than on first inspection, I think.

[22:26] <sirrobert> oh, it doesn't fail

[22:26] <sirrobert> I can step all the way through the program, I just can't inspect anything.

[22:27] <sirrobert> even on a script as simple as I said before

[22:27] <jnthn> OK, that's weird.

[22:27] <sirrobert> how can I update to the latest debugger?

[22:27] <jnthn> I mean, the commit I linked fixed such an issue when we started handling %*LANG differently in Rakudo

[22:28] <jnthn> Easiest way to have a latest debugger is with a latest R*. But I'm surprised if you're using an R* Rakudo and debugger; those should match up

[22:29] <jnthn> (er, surprised if you're using them and getting the problem, that is)

[22:29] <sirrobert> hmmmmmmm

[22:29] <sirrobert> I recompiled and re-installed from scratch and same issue

[22:29] <jnthn> I guess you've made sure it's not some kinda version skew?

[22:29] <sirrobert> no

[22:29] <sirrobert> I don't even know how to make sure of that

[22:29] <jnthn> Like, no different Rakudo or debugger earlier in the path?

[22:30] <sirrobert> perl6-debug -v says:  This is perl6 version  built on parrot 4.6.0 revision 0

[22:30] <sirrobert> (notice the missing version number)

[22:30] <sirrobert> perl6 -v says: This is perl6 version 2012.10 built on parrot 4.6.0 revision 0

[22:32] <sirrobert> huh

[22:32] <sirrobert> I just compiled the latest perl6-debug and it worked

[22:32] <sirrobert> but the one with the 2012.10 R* didn't

[22:32] <jnthn> Oddness

[22:32] <sirrobert> maybe it got bundled badly?

[22:33] <jnthn> Maybe, but didn't 2012.10 work for you previously?

[22:33] <sirrobert> I don't remember...

[22:33] <sirrobert> haven't coded in like 2 weeks =)

[22:33] <sirrobert> (well, bash scripting...)

[22:33] <jnthn> OK. Hopefully the 2012.11 works out the box for you at lesat...

[22:33] <jnthn> *least

[22:33] <sirrobert> well, either way I can use the version I compiled

[22:33] <jnthn> http://moritz.faui2k3.org/tmp/rakudo-star-2012.11-RC1.tar.gz # release candidate if you want to try it

[22:33] <sirrobert> easy enough =)

[22:33] <sirrobert> thanks for your help

[22:33] <sirrobert> oh, cool

[22:33] <sirrobert> I'll try that

[22:35] <sirrobert> ok, time for dinner.  ttyl

[22:35] <jnthn> o/

[22:36] <jnthn> time for sleep here &

[22:44] *** fgomez joined
[22:48] *** wamba left
[22:49] *** Kharec left
[22:50] *** mtk left
[22:51] *** arlinius left
[22:56] *** Kharec joined
[23:06] *** fgomez left
[23:08] *** fgomez joined
[23:09] *** stopbit left
[23:15] *** Bucciarati left
[23:16] *** Bucciarati joined
[23:18] *** sirrobert left
[23:22] *** Kharec left
[23:27] *** popl joined
[23:31] *** benabik left
[23:32] *** tokuhiro_ left
[23:33] *** tokuhiro_ joined
[23:48] *** Woodi left
[23:48] *** Woodi joined
[23:54] *** skids joined
