[00:09] *** tokuhiro_ joined
[00:15] *** thou left
[00:35] *** atrodo left
[01:04] <skids> r: class C { }; role F [ ::T $t ] { method m { $t.WHAT.say } } ; class D does F[ BEGIN { C.new() } ] { }; my D $d .= new(); $d.m;

[01:04] <p6eval> rakudo f23a45: OUTPUT¬´C()‚ê§¬ª

[01:05] <skids> r: class C { }; role F [ ::T $t ] { method m { $t.WHAT.say } } ; class D does F[ C.new() ] { }; my D $d .= new(); $d.m;

[01:05] <p6eval> rakudo f23a45: OUTPUT¬´C()‚ê§¬ª

[01:05] <skids> Hmmm... someone fixed something since the June Star. :-)

[01:06] * skids is amazed how well implemented the whole parametric role stuff is already, BTW

[01:33] *** colomon joined
[01:47] <colomon> o/

[01:47] <TimToady> \o

[01:49] <TimToady> welcome to the graveyard shift, when it's daytime over Guam, and nearby hotbeds of programming activity

[01:51] <skids> r: class C { }; role F [ ::T:U $t ] { method m { ":U" } }; role F [ ::T:D $t ] { method m { ":D" } } ; class D does F[ C ] { };

[01:51] <p6eval> rakudo f23a45: OUTPUT¬´===SORRY!===‚ê§None of the parametric role variants for 'F' matched the arguments supplied.‚ê§Ambiguous call to ''; these signatures all match:‚ê§:(Mu , Mu $t)‚ê§:(Mu , Mu $t)‚ê§‚ê§¬ª

[01:52] * skids wonders if ::T:U is specced.

[01:59] *** colomon left
[02:05] *** orafu left
[02:05] *** orafu joined
[02:05] <TimToady> std: sub foo (Mu:U ::T $) { say T.WHAT }; foo(Int)

[02:05] <p6eval> std e52e3ca: OUTPUT¬´ok 00:00 43m‚ê§¬ª

[02:05] <TimToady> rn: sub foo (Mu:U ::T $) { say T.WHAT }; foo(Int)

[02:05] <p6eval> niecza v19-15-g051783d: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§GLOBAL::T does not name any package at /tmp/Hh7UhD4z4m line 1:‚ê§------> [32msub foo (Mu:U ::T[33m‚èè[31m $) { say T.WHAT }; foo(Int)[0m‚ê§‚ê§A type must be provided at /tmp/Hh7UhD4z4m line 1:‚ê§------> [32msub foo (Mu:U ::T[33m‚Ä¶

[02:05] <p6eval> ..rakudo f23a45: OUTPUT¬´Int()‚ê§¬ª

[02:06] <TimToady> rakudo++

[02:06] * skids had just figured out Mu:U ::T :-)

[02:06] <TimToady> r: sub foo (Any:U ::T $) { say T.WHAT }; foo(Mu)

[02:06] <p6eval> rakudo f23a45: OUTPUT¬´Nominal type check failed for parameter ''; expected Any but got Mu instead‚ê§  in sub foo at /tmp/SV_pAXJuTX:1‚ê§  in block  at /tmp/SV_pAXJuTX:1‚ê§‚ê§¬ª

[02:07] <skids> I wonder what rakudo is doing with that ":U" in the "::T:U"

[02:07] <TimToady> r: sub foo (Any:U ::T $) { say T.WHAT }; foo(42)

[02:07] <p6eval> rakudo f23a45: OUTPUT¬´Parameter '' requires a type object, but an object instance was passed‚ê§  in sub foo at /tmp/EK6N3C0Ugw:1‚ê§  in block  at /tmp/EK6N3C0Ugw:1‚ê§‚ê§¬ª

[02:07] <TimToady> r: sub foo (Any ::T:U $) { say T.WHAT }; foo(42)

[02:07] <p6eval> rakudo f23a45: OUTPUT¬´===SORRY!===‚ê§CHECK FAILED:‚ê§Undefined routine '&T' called (line 1)‚ê§¬ª

[02:07] <TimToady> r: sub foo (Any ::T:U $) { say T:U.WHAT }; foo(42)

[02:07] <p6eval> rakudo f23a45: OUTPUT¬´===SORRY!===‚ê§CHECK FAILED:‚ê§Undefined routine '&T' called (line 1)‚ê§¬ª

[02:08] <TimToady> beats me

[02:14] *** Coleoid joined
[02:17] *** _daniel-s__ is now known as daniel-s

[02:25] <quietfanatic> isn't WHAT a noop on a type object?

[02:28] *** Guest65084 is now known as ponbiki

[02:29] <skids> r: class C { }; C.WHAT.say; C:U.WHAT.say;

[02:29] <p6eval> rakudo f23a45: OUTPUT¬´C()‚ê§C()‚ê§¬ª

[02:30] *** xinming_ left
[02:32] <TimToady> quietfanatic: sure, I was just...I was just...trying to clarify the intent...yeah, that's the ticket!

[02:33] <skids> Well, one could nitpick at the meaning of "noop". :-)

[02:34] *** woosley left
[02:36] *** woosley joined
[02:39] *** Patterner left
[02:40] *** xinming joined
[02:42] *** Psyche^ joined
[02:42] *** Psyche^ is now known as Patterner

[02:45] *** xinming left
[02:51] *** tokuhiro_ left
[02:52] *** xinming joined
[02:56] *** xinming left
[02:57] *** xinming joined
[03:09] *** benabik left
[03:14] <TimToady> according to S04:1570, http://irclog.perlgeek.de/perl6/2012-07-14#i_5814213 should already be considered a block and not a hash; you should not have to put a semicolon

[03:14] *** scott__ joined
[03:15] <TimToady> if you have to put semicolon, it's a bug

[03:17] <TimToady> perl6: say (map { .key => uc .value }, :foo<bar>).perl

[03:17] <p6eval> niecza v19-15-g051783d: OUTPUT¬´Unhandled exception: Unable to resolve method key in type Any‚ê§  at /tmp/eO1LCKGz_7 line 1 (mainline @ 6) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 3929 (ANON @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 3930 (module-CORE @ 564) ‚ê§  at /home/p6‚Ä¶

[03:17] <p6eval> ..rakudo f23a45: OUTPUT¬´No such method 'key' for invocant of type 'Any'‚ê§  in block  at /tmp/BdUGNYqcsc:1‚ê§‚ê§¬ª

[03:17] <TimToady> perl6: say (map { .key => uc .value }, (:foo<bar>)).perl

[03:17] <p6eval> niecza v19-15-g051783d: OUTPUT¬´Unhandled exception: Unable to resolve method key in type Any‚ê§  at /tmp/j41T32p_Es line 1 (mainline @ 6) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 3929 (ANON @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 3930 (module-CORE @ 564) ‚ê§  at /home/p6‚Ä¶

[03:17] <p6eval> ..rakudo f23a45: OUTPUT¬´No such method 'key' for invocant of type 'Any'‚ê§  in block  at /tmp/K2BtfRL2RK:1‚ê§‚ê§¬ª

[03:18] <TimToady> perl6: say (map { $_.key => uc $_.value }, (:foo<bar>)).perl

[03:18] <p6eval> niecza v19-15-g051783d: OUTPUT¬´Unhandled exception: Unable to resolve method key in type Any‚ê§  at /tmp/HsvK6UJhzw line 1 (mainline @ 6) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 3929 (ANON @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 3930 (module-CORE @ 564) ‚ê§  at /home/p6‚Ä¶

[03:18] <p6eval> ..rakudo f23a45: OUTPUT¬´No such method 'key' for invocant of type 'Any'‚ê§  in block  at /tmp/v_qL0RGVKW:1‚ê§‚ê§¬ª

[03:19] <TimToady> perl6: say (map { $^arg.key => uc $^arg.value }, (:foo<bar>)).perl

[03:19] <p6eval> niecza v19-15-g051783d: OUTPUT¬´("foo" => "BAR", ).list‚ê§¬ª

[03:19] <p6eval> ..rakudo f23a45: OUTPUT¬´("foo" => "BAR",).list‚ê§¬ª

[03:19] <TimToady> $_.key and .key should do whatever $^arg does

[03:20] *** benabik joined
[03:31] *** fhelmberger joined
[03:31] *** mucker left
[03:36] *** mucker joined
[03:41] *** mucker left
[03:47] *** crab2313 joined
[04:22] *** fhelmberger left
[04:37] *** kaare_ joined
[04:57] *** zhutingting joined
[05:00] *** crab2313 left
[05:04] *** nodmonkey joined
[05:04] *** birdwindupbird joined
[05:41] *** muixirt joined
[05:45] *** nodmonkey left
[05:48] *** thou joined
[06:17] *** wtw joined
[06:32] *** kaleem joined
[06:37] *** SamuraiJack joined
[06:47] *** am0c left
[06:49] *** SamuraiJack_ joined
[06:50] *** SamuraiJack left
[06:53] *** SamuraiJack_ left
[06:54] *** SamuraiJack_ joined
[06:57] <dalek> star: 041912e | pmichaud++ | Makefile:

[06:57] <dalek> star: Put a VERSION file into the star tarball; we can use it during

[06:57] <dalek> star: building.

[06:57] <dalek> star: review: https://github.com/rakudo/star/commit/041912eb0a

[06:57] <dalek> star: fa9799f | pmichaud++ | skel/tools/build/Makefile.in:

[06:57] <dalek> star: Some targets to help build MSI files for Windows (hopefully).

[06:57] <dalek> star: review: https://github.com/rakudo/star/commit/fa9799fd50

[06:57] <dalek> star: 6066c44 | pmichaud++ | skel/docs/announce/2012.07:

[06:57] <dalek> star: Merge branch 'master' of github.com:rakudo/star

[06:57] <dalek> star: review: https://github.com/rakudo/star/commit/6066c440ae

[06:59] <dalek> star: 80c00b5 | pmichaud++ | skel/tools/build/ (2 files):

[06:59] <dalek> star: Add script to patch wxs file generated by Wix "heat" command.

[06:59] <dalek> star: review: https://github.com/rakudo/star/commit/80c00b5913

[07:02] <TimToady> http://rosettacode.org/wiki/Averages/Mean_angle#Perl_6

[07:07] *** hoelzro|away is now known as hoelzro

[07:07] <hoelzro> masak: ping

[07:14] <masak> hoelzro: pong.

[07:14] <masak> morning, #perl6

[07:14] <hoelzro> masak: thanks for providing that tarball; it ran my crash script without crashing =)

[07:15] <masak> \o/

[07:18] <hoelzro> I also managed to build my own Rakudo without things crashing

[07:18] <hoelzro> interestingly enough, the crash only seems to happen when I install Rakudo and friends to /usr/

[07:18] <hoelzro> I'll be testing more after work

[07:20] <cognominal> for people doing coffeescript, beware :  console.log "toto" if false for i in [1] is interpreted as   console.log "toto" if (false for i in [1])

[07:21] <cognominal> which prints "toto" . Run with coffee -pe to see the disaster.

[07:23] *** BlueT_ left
[07:23] *** BlueT_ joined
[07:23] <felher> TimToady++ #mean angle on RC

[07:28] <dalek> star: 68b7211 | pmichaud++ | skel/tools/build/Makefile.in:

[07:28] <dalek> star: I meant to ignore an error result, not suppress the command display.  Now fixed.

[07:28] <dalek> star: review: https://github.com/rakudo/star/commit/68b7211b50

[07:31] <masak> cognominal: that sounds like a misdesign, indeed.

[07:39] <jnthn> morning, #perl6

[07:39] <hoelzro> ahoy jnthn 

[07:41] <jnthn> hoelzro: dobry den :)

[07:41] <jnthn> Oooh, pmichaud++ is doing MSI stuff \o/

[07:58] <dalek> roast: 35ecf2e | moritz++ | S03-operators/inplace.t:

[07:58] <dalek> roast: remove wrongly ported test (lcfirst -> tc), rakudo-fudge for missing tc

[07:58] <dalek> roast: review: https://github.com/perl6/roast/commit/35ecf2e879

[07:59] *** dayangkun joined
[08:03] <moritz> we're getting several spectest fails from the transition to tc, which we don't implement :(

[08:07] <pmichaud> I've created a candidate R* tarball if anyone wants to test it:  http://pmichaud.com/sandbox/rakudo-star-2012.07b.tar.gz

[08:07] <pmichaud> I've also created a .msi version, at http://pmichaud.com/sandbox/rakudo-star-2012.07b.msi

[08:07] <moritz> pmichaud++

[08:08] <pmichaud> comments and suggestions welcomed.  I'm off to bed; will check backscroll when I awaken and then produce the final versions and cut the release (unless there are any showstoppers)

[08:09] <pmichaud> afk  # sleep

[08:11] <dalek> roast: 2db35ca | moritz++ | S (2 files):

[08:11] <dalek> roast: rakudo fudges

[08:11] <dalek> roast: review: https://github.com/perl6/roast/commit/2db35ca1ef

[08:13] *** nodmonkey joined
[08:13] *** BlueT_ left
[08:13] *** BlueT_ joined
[08:14] <dalek> roast: ea3913c | moritz++ | S0 (2 files):

[08:14] <dalek> roast: more rakudo fudging, move unrelated tests to use uc instead of tc

[08:14] <dalek> roast: review: https://github.com/perl6/roast/commit/ea3913cc5c

[08:15] <masak> what would the implementation of tc look like? is it expressible in Perl 6?

[08:15] *** nodmonkey left
[08:16] <moritz> it's expressible in Perl 6 if you have access to a Unicode database with casefolding information

[08:18] <dalek> roast: 5e1cfcf | moritz++ | S0 (3 files):

[08:18] <dalek> roast: rakudo unfudges

[08:18] <dalek> roast: review: https://github.com/perl6/roast/commit/5e1cfcfad7

[08:20] <masak> ah, right.

[08:20] <dalek> roast: c04506f | moritz++ | S32-str/ (2 files):

[08:20] <dalek> roast: another rakudo fudge, remove a lcfirst test

[08:20] <dalek> roast: review: https://github.com/perl6/roast/commit/c04506f93d

[08:20] <masak> so, probably better to do in C or something.

[08:20] <moritz> afaict ICU alread has what you need

[08:20] <moritz> it just needs wiring up

[08:22] <masak> oh, of course. nice.

[08:24] *** thou left
[08:37] *** dbr left
[08:37] *** dbr joined
[08:42] <felher> pmichaud++ : i tested the tarball and i didn't find any problems at a first glance. If there is anything specific i should test, let me know :)

[09:05] <moritz> felher: try  perl6 -MLWP::Simple -e 'say LWP::Simple.get("http://www.perl6.org");'

[09:06] <felher> *trying*

[09:08] <moritz> pmichaud: https://gist.github.com/3186956 that's the first "Missing or wrong version of dependency 'src/gen/CORE.setting'", I get several more during the module building

[09:11] <felher> ./rakudo-star-2012.07/perl6 -MLWP::Simple -e 'say LWP::Simple.get("http://www.perl6.org");' gives me ===SORRY!=== No STable at index 7

[09:11] <felher> :/

[09:15] <moritz> pmichaud: module-install.pl tries to compile URI.pm before URI::DefaultPort

[09:18] *** bbkr joined
[09:18] <moritz> erm no, that's not quite accurate

[09:21] <moritz> no, it dies while compiling lib/IETF/RFC_Grammar/URI.pm

[09:21] *** sergot joined
[09:21] <sergot> hi o/

[09:23] <masak> sergocie! \o/

[09:24] <sergot> masaku \o/

[09:24] <sergot> :)

[09:24] <moritz> maybe it's because I have another perl6 in $PATH

[09:28] *** Blih joined
[09:30] *** Blih left
[09:32] *** seldon joined
[09:33] <felher> I took a look at the output of 'make install' and found five messages like "Quantifier quantifies nothing at line 7, near " [ \\, ]  ]"" (in JSON::Tiny, Panda, JSON::RPC::{Client,Server}) and four like "No object at index 265" (all in Bailador). All of them while trying to compile .pm into .pir.

[09:34] <moritz> hm

[09:34] <bbkr> hm

[09:34] *** seldon left
[09:34] *** seldon_ joined
[09:34] <moritz> the "Quantifier quantifies nothing" was usually caused by the regex syntax change regarding ** and %

[09:34] <moritz> so that would be very *very* outdated version shipped there

[09:35] *** seldon_ is now known as seldon

[09:35] <moritz> or it could be an unrelated problem.

[09:37] *** UncleFester6 joined
[09:38] <bbkr> JSON::RPC does not use ** quantifier

[09:39] <UncleFester6> felher: I also got the no stable at index 7 error for LWP::Simple.  I got around it by just recompling the LWP::Simple module itself ...

[09:39] * moritz does a complete new build and logs it all

[09:40] <UncleFester6> LWP::Simple depends on URI but gets compiled first ...

[09:41] <felher> UncleFester6: k, thnx :)

[09:41] <moritz> http://moritz.faui2k3.org/tmp/build.log that's the build log

[09:41] <UncleFester6> felher: does that mean recompile of LWP::Simple worked for you?

[09:43] *** zhutingting left
[09:43] <dalek> star: 2640d6c | moritz++ | skel/tools/build/Makefile.in:

[09:43] <dalek> star: [build] build URI before LWP::Simple

[09:43] <dalek> star: review: https://github.com/rakudo/star/commit/2640d6c88c

[09:44] <moritz> ok, I'm changing the order in my local working dir (the one I untar'ed from pmichaud++'s release candidate), and trying again now

[09:45] <felher> UncleFester6: yes

[09:46] *** dayangkun left
[09:46] <UncleFester6> good news for now ...

[09:47] <moritz> ah, I now see how we managed to introduce URI and LWP::Simple in the wrong order

[09:47] <felher> moritz: how so?

[09:47] <moritz> when LWP::Simple started to depend on URI, I added both (in the correct order) to the end of the module list

[09:47] <moritz> but, LWP::Simple was already in there, further up

[09:47] <moritz> and bbkr++ noticed, and removed the second occurence

[09:48] <felher> :)

[09:49] <moritz> and back in the days, compilate order didn't matter much, so nobody noticed

[09:49] <UncleFester6> I am notoriously bad about finding tickets in RT.  Is there a ticket about this compile in order stuff?  I think it's a bug.

[09:49] <tadzik> no, that's intentional

[09:49] <tadzik> it's just hard to get right and prone to bugs

[09:50] <tadzik> if you precompile stuff in wrong order then it won't work

[09:50] <UncleFester6> why not?

[09:50] <dalek> star: 3f28926 | moritz++ | skel/tools/build/Makefile.in:

[09:50] <dalek> star: [build] add a comment about preserving order of module list

[09:50] <dalek> star: review: https://github.com/rakudo/star/commit/3f2892689e

[09:50] <moritz> UncleFester6: consider   use A; class B does A { };

[09:50] <moritz> UncleFester6: this does a lookup by name for role A

[09:50] <moritz> UncleFester6: and then applies it at compile-time into class B

[09:51] <moritz> UncleFester6: so the generated bytecode depends on the exact form of A

[09:51] *** daxim joined
[09:51] <moritz> UncleFester6: which means that if you change a single bit, and then precompile A, things are bound to go BOOM

[09:52] <UncleFester6> I understand what compile means - reviewing the rest ...

[09:52] <moritz> UncleFester6: which is why it makes sense to only precompile B if A is also precompiled, and the precompiled form of A is available

[09:52] <moritz> afk, bbi20

[09:52] <felher> Oh, the JSON::Tiny was only a local problem

[09:53] <felher> due to some old JSON::Tiny in ~/.perl6/lib... sorry for the noise :/

[10:01] *** zhutingting joined
[10:06] <UncleFester6> phenny: tell moritz thanks for his explanation and when I can explain the order independent module compiles more cogently I'll bring it up again.  I actually code some parrot/pir etc.

[10:06] <phenny> UncleFester6: I'll pass that on when moritz is around.

[10:08] <jnthn> UncleFester6: I suggest studying the bounded serialization stuff a bit also.

[10:08] <jnthn> That will explain quite a bit :)

[10:09] <UncleFester6> thx

[10:16] *** scott__ left
[10:29] *** fhelmberger joined
[10:37] <moritz> jnthn: nonetheless a better error message would be *very* helpful

[10:37] <phenny> moritz: 10:06Z <UncleFester6> tell moritz thanks for his explanation and when I can explain the order independent module compiles more cogently I'll bring it up again.  I actually code some parrot/pir etc.

[10:38] <moritz> r: say @*INC

[10:39] <p6eval> rakudo f23a45: OUTPUT¬´/home/p6eval/.perl6/lib /home/p6eval/nom-inst1/lib/parrot/4.5.0-devel/languages/perl6/lib‚ê§¬ª

[10:39] <moritz> ah, that might be a problem

[10:39] <moritz> since the modules in $HOME come before those from the installation location, modules in ~/.perl6/lib can cause trouble

[10:39] <tadzik> indeed

[10:40] <moritz> I have the feeleing that whichever way around you put the entries in @*INC, there's always a reason to do it differently

[10:41] <daxim> tell masak tag, you're it

[10:42] <tadzik> why do we have /home/ stuff in @*INC by default anyway?

[10:42] <tadzik> What was the reason to do it differently from Perl 5?

[10:42] <tadzik> it makes user's life easier in some cases, but causes breakages in others

[10:43] <moritz> tadzik: so that pand^Wproto had a location to install to

[10:44] <tadzik> right

[10:44] <moritz> this is something we should discuss in Perl or Frankfurt

[10:45] <tadzik> in Perl 5 currently (correct me if I'm wrong) cpan(m) tries to install stuff to the Perl installation directory, and if it can't, it then goes for $HOME/perl5 I think

[10:45] <tadzik> agreed

[10:45] <moritz> hopefully with help from some p5 folks

[10:45] <tadzik> if we do this, we could just make panda warn loudly if it installs to a place which is not in @*INC

[10:50] <masak> daxim: hello -- so, I'm it, yes?

[10:51] <masak> I just wanted to say that jnthn and I are doing a ($work) hackathon today involving CQRS. we'll be hanging out in #cqrs-perl6 if anyone wants to talk shop. :)

[10:52] <jnthn> I...I will?

[10:53] <masak> oh, sorry; should've told you ;)

[10:53] <jnthn> :P

[10:53] <masak> the channel is a bit desolate right now. just you and me and a log bot. :)

[10:53] <jnthn> .oO( At least the Nirvana songs aren't piped into the chanel :P )

[10:54] <jnthn> .oO( METALICA!!! :P )

[10:55] <muixirt> cqrs?

[10:59] <cognominal> ...and the usual lurkers

[10:59] <moritz> jnthn: ok, this is really strange. I recompiled star with no modules in ~/.perl6/lib, and the only modules that fail are Bailador modules. So now I'm loading LWP::Simple, and still get "No STable at index 7"

[11:00] <masak> muixirt: CQRS is a kind of separation of concerns. separating commands (writes) from queries (reads) in an application.

[11:00] <moritz> jnthn: and the weird thing is, I run it with RAKUDO_MODULE_DEBUG=1 and *all* of the loaded modules come from the right paths, and they are all .pir (except for BOOTSTRAP.pbc)

[11:01] <masak> muixirt: it's a fascinatingly applicable technique, and one that seems to lead straight into being able to reason better about the domain.

[11:06] <zhutingting> perl6: sub postfix:<!> { [*] 1..$^n }; say 5!;

[11:06] <p6eval> rakudo f23a45, niecza v19-15-g051783d: OUTPUT¬´120‚ê§¬ª

[11:09] *** fhelmberger left
[11:13] <jnthn> moritz: That's...odd, but in general it's boiled down to compilation order in this cases before.

[11:15] <zhutingting> What's mean?//Larry's First Law of Language Redesign: Everyone wants the colon.

[11:16] <Timbus> you would probably feel bad without a colon

[11:17] <UncleFester6> moritz: about Bailador - Bailador depends on Template::Mojo which doesn't seem to be on the module list

[11:18] <Timbus> zhutingting, it means everyone wanted to use the colon for something

[11:19] <zhutingting> :)

[11:23] *** nodmonkey joined
[11:25] *** JimmyZ joined
[11:25] *** muixirt left
[11:27] <moritz> UncleFester6: oh, that explains a lot

[11:30] <dalek> star: a4ab725 | moritz++ | / (3 files):

[11:30] <dalek> star: Add Template::Mojo

[11:30] <dalek> star: 

[11:30] <dalek> star: Bailador now depends on it. UncleFester6++

[11:30] <dalek> star: review: https://github.com/rakudo/star/commit/a4ab725f4d

[11:32] <felher> moritz: works here :)

[11:33] <moritz> felher: what works?

[11:33] <felher> moritz: adding Template-Mojo fixes the problem with Bailador

[11:34] *** dayangkun joined
[11:35] <moritz> felher: great

[11:36] * JimmyZ couldn't install rakudo-star.msi

[11:37] <moritz> JimmyZ: it probably helps if you're more verbose about the problems you encountered

[11:39] <JimmyZ> I double click it and it does nothing

[11:40] *** skids left
[11:42] <moritz> oh my

[11:43] <moritz> I changed Makefile in my star copy

[11:43] <moritz> but I didn't change Makefile.in

[11:43] <moritz> and then I reconfigured

[11:43] * moritz facepalms

[11:46] *** MayDaniel joined
[11:48] <felher> moritz: i guess you are talking about local changes? Your patch just works fine. I checked it out and rebuild everything. No problems there.

[11:48] <moritz> felher: and can you actually load LWP::Simple?

[11:48] <moritz> perl6 -MLWP::Simple -e 1

[11:49] <felher> ./perl6 -MLWP::Simple -e 1 && echo hi

[11:49] <felher> gives me "hi" :)

[11:49] <moritz> \o/

[11:49] <UncleFester6> jimmyz: I installed the .msi OK - did you get the little popup dialog box for installing rakudo

[11:51] <JimmyZ> I got a process bar and then disappeared on windows xp

[11:51] *** nodmonkey left
[11:51] *** TBA joined
[11:52] <TBA> hi all

[11:52] <tadzik> hey TBA 

[11:52] <TBA> r: for (1, 2, 3)[1..*] -> $i { say $i; }

[11:52] <p6eval> rakudo f23a45: OUTPUT¬´2‚ê§3‚ê§¬ª

[11:53] <TBA> that fails on Rakudo 2011.07, parrot 3.6.0 - is it safe to assume thats an old bug thats fixed?

[11:53] <tadzik> fails in what way?

[11:53] <TBA> eventually times out with "Command terminated"

[11:53] <tadzik> hmm

[11:53] <tadzik> it'd appear so

[11:53] <tadzik> well, 2011.07 is... quite old ;)

[11:53] <tadzik> b: for (1, 2, 3)[1..*] -> $i { say $i; }

[11:53] <p6eval> b 922500: OUTPUT¬´(timeout)¬ª

[11:53] <TBA> ubuntu package sadly, had some issues getting the latest releases to build but in work so didn't have time to play lol

[11:54] <tadzik> TBA: yeah, looks like you're correct

[11:54] <TBA> will install the latest version of rakudo and try again then, thanks :)

[11:54] <tadzik> have fun :)

[11:54] <TBA> always do with perl6! discovering how insanely simple some stuff is!

[11:55] <tadzik> glad you like it:)

[11:55] <moritz> now LWP::Simple works for me too \o/

[11:56] *** jaldhar left
[12:03] <JimmyZ> \o/

[12:08] <TBA> having some issues compiling latest rakudo from git?

[12:08] <TBA> make: *** [src/stage2/NQPCORE.setting.pbc] Error 1 Command failed (status 512): make Command failed (status 512): /usr/bin/perl Configure.pl --with-parrot=/root/rakudo/install/bin/parrot --make-install 

[12:08] *** erkan joined
[12:08] *** erkan left
[12:08] *** erkan joined
[12:09] <TBA> got 1gb ram (its a vm)

[12:11] <moritz> needs about 1.5G :(

[12:12] <UncleFester6> TBA: see also https://rt.perl.org/rt3/Ticket/Display.html?id=113660

[12:14] <TBA> np, remembered having the prob before which is when I upped to 1gb, got enough physical memory left so will up it to 1.5g, thanks

[12:15] <jnthn> Note that Rakudo HEAD from numbers I've seen currently needs 300MB or so less (on 64-bit) for compiling CORE.setting than the previous compiler release.

[12:16] <jnthn> I'm hoping to pull the memory requirements down a bit more in the next week or so too.

[12:17] *** am0c joined
[12:22] <Woodi> hi today pppls :)

[12:23] <Woodi> R* tarball not yet available on R. page ?

[12:23] *** tokuhiro_ joined
[12:23] <masak> hi Woody! \o

[12:24] <Woodi> hallo masak :)

[12:24] <masak> i*

[12:25] <Woodi> I was just thinking v6 is hard to learn but baby-perl chat little helped my hope :)

[12:25] <jnthn> Woodi: Should be up later today.

[12:26] <Woodi> would be nice to have book called "Advanced Perl 6: zig-zags and beyound" :)

[12:26] <Woodi> jnthn: thanx :)

[12:28] <JimmyZ> 600MB here for compiling CORE.setting

[12:28] <JimmyZ> now

[12:29] <jnthn> JimmyZ: Can you remember what it was before?

[12:29] *** nodmonkey joined
[12:30] <JimmyZ> 1GB before qast, iirc

[12:30] <jnthn> Ah. So, an improvement. :)

[12:31] <JimmyZ> before bs was 1.5GB

[12:31] *** nodmonkey left
[12:31] <JimmyZ> or before 6model ? I can't remember ...

[12:31] <Woodi> big improvement :) for example OpenBSD have hardcoded kernel limit for proces memory usage at 1GB seence many years 

[12:39] *** nodmonkey joined
[12:42] *** nodmonkey left
[12:44] *** zhutingting left
[12:51] *** woosley left
[12:56] <tadzik> JimmyZ: 64bit?

[12:56] <JimmyZ> 32bit

[12:57] <jnthn> Those numbers must be 32... :)

[13:01] <TBA> built latest rakudo and the range to whatever thing now works :)

[13:01] <TBA> and now to do some real work!!

[13:02] *** TBA left
[13:06] <tadzik> I wonder if the real work is done in Perl 6 :)

[13:12] *** skids joined
[13:13] *** drbean left
[13:14] <Woodi> I tell you all, monitor glass without years old collection of fingerprints is worth a small walk for cleaninng fluid :)

[13:15] *** drbean joined
[13:25] *** bluescreen10 joined
[13:26] *** am0c left
[13:26] <tadzik> 'p' is not recognized as an internal or external command,

[13:26] <tadzik> operable program or batch file.

[13:26] <tadzik> where on earth does this come from

[13:28] *** atrodo joined
[13:48] *** benabik left
[13:54] *** fhelmberger joined
[13:54] *** zhutingting joined
[13:54] <masak> tadzik: Windows's command shell.

[13:54] *** fhelmberger left
[13:56] <tadzik> yeah, but 'p'? :F

[13:56] <tadzik> I need a shell accound on a windows machine somewhere

[13:58] *** UncleFester6 left
[13:59] *** PacoAir joined
[14:04] *** MayDaniel left
[14:06] *** mucker joined
[14:10] <moritz> pmichaud: ok, more star build trouble

[14:11] <moritz> pmichaud: I ran perl Configure.pl --prefix=/opt/rakudo-star-2012.07 --gen-parrot --gen-nqp  && make install

[14:11] <moritz> pmichaud: and it built and installed nqp just fine in the right location

[14:11] <moritz> except that the "make install" part failed

[14:11] *** tokuhiro_ left
[14:12] <moritz> nopaste forthcoming

[14:13] <moritz> pmichaud: https://gist.github.com/3188234

[14:15] *** wtw left
[14:17] <moritz> when I  cd rakudo-2012.07 && perl Configure.pl --with-nqp=/opt/rakudo-star-2012.07/bin/nqp   it seems to build rakudo

[14:30] *** TBA joined
[14:30] <TBA> hi again :)

[14:31] *** lateau joined
[14:31] <TBA> quick question! if I do this the match works:

[14:31] <TBA> r: my @arr = <aAa bBb cCc>; for @arr.grep(/B/) -> $l { say $l; }

[14:31] <p6eval> rakudo f23a45: OUTPUT¬´bBb‚ê§¬ª

[14:31] <TBA> but I want to match against %*ENV<USER>

[14:32] <TBA> how can I interpolate that in the grep parameter? i.e. i want to do @arr.grep(/%*ENV<USER>/)

[14:32] <TBA> but instead i get "Unrecognized regex metacharacter %"

[14:33] *** birdwindupbird left
[14:34] *** awwaiid left
[14:35] *** seldon left
[14:35] *** kaleem left
[14:36] *** kaleem joined
[14:36] <PerlJam> TBA: @arr.grep(/<{%*ENV<hi>}>/) should work

[14:37] <PerlJam> TBA: there are probably other ways but my brain isn't cooperating with my right now.

[14:37] <PerlJam> s/my/me/

[14:37] *** lateau left
[14:37] <jnthn> That...probably won't work.

[14:37] <TBA> it doesnt :)

[14:37] <TBA> malformed regex

[14:37] <jnthn> I think TBA wants to interpolate the current user into the regex.

[14:37] <TBA> yes, basically

[14:38] <TBA> i could always assign to another var, but it would be easier to read if I can interpolate directly

[14:38] <PerlJam> TBA: you can always assign to a scalar 

[14:38] <jnthn> r: /%*ENV{'USER'}/

[14:38] <p6eval> rakudo f23a45: OUTPUT¬´===SORRY!===‚ê§Unrecognized regex metacharacter % (must be quoted to match literally) at line 2, near "*ENV{'USER"‚ê§¬ª

[14:38] <jnthn> r: /%ENV{'USER'}/

[14:38] <p6eval> rakudo f23a45: OUTPUT¬´===SORRY!===‚ê§Unrecognized regex metacharacter % (must be quoted to match literally) at line 2, near "ENV{'USER'"‚ê§¬ª

[14:38] <jnthn> r: /$(%*ENV{'USER'})/

[14:38] <p6eval> rakudo f23a45: OUTPUT¬´===SORRY!===‚ê§Unrecognized regex metacharacter % (must be quoted to match literally) at line 2, near "*ENV{'USER"‚ê§¬ª

[14:38] <jnthn> Hmm

[14:38] <jnthn> I guess the interpolation rule just expects scalars.

[14:38] <[Coke]> I dispute the claim made in backscroll that I am a real person.

[14:39] <jnthn> std: /%ENV{'USER'}/

[14:39] <p6eval> std e52e3ca: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Variable %ENV is not predeclared at /tmp/b9CSzlqF9s line 1:‚ê§------> [32m/[33m‚èè[31m%ENV{'USER'}/[0m‚ê§Potential difficulties:‚ê§  Apparent subscript will be treated as regex at /tmp/b9CSzlqF9s line 1:‚ê§------> [32m/%ENV[33m‚èè[31m{'USER'‚Ä¶

[14:39] <PerlJam> r: /<{ %*ENV<USER> }>/  # what does it do?

[14:39] <p6eval> rakudo f23a45:  ( no output )

[14:39] <jnthn> std: /%*ENV{'USER'}/

[14:39] <p6eval> std e52e3ca: OUTPUT¬´Potential difficulties:‚ê§  Apparent subscript will be treated as regex at /tmp/KFMdQ07zk_ line 1:‚ê§------> [32m/%*ENV[33m‚èè[31m{'USER'}/[0m‚ê§ok 00:00 42m‚ê§¬ª

[14:39] <PerlJam> r: say %*ENV<USER>

[14:39] <p6eval> rakudo f23a45: OUTPUT¬´p6eval‚ê§¬ª

[14:39] <jnthn> Yeah, it doesn't parse that way even in std

[14:39] <jnthn> PerlJam: <{ }> is just an assertion 

[14:40] <jnthn> TBA: Anyway, the easy way to do it is to put the user into a scalar first.

[14:40] <jnthn> my $user = %*ENV<USER>; ... /$user/

[14:40] <TBA> jnthn: thanks, will go with that

[14:41] <jnthn> r: say %*ENV<USER>

[14:41] <p6eval> rakudo f23a45: OUTPUT¬´p6eval‚ê§¬ª

[14:41] <TBA> but, should interpolation of a hash element work in a regex? s05 mentions about hashes, but not specific keys of a hash

[14:42] <PerlJam> r: "blahp6evalblah" ~~ / <{ %*ENV<USER> }> /;

[14:42] <p6eval> rakudo f23a45:  ( no output )

[14:42] <PerlJam> r: say "blahp6evalblah" ~~ / <{ %*ENV<USER> }> /;

[14:42] <p6eval> rakudo f23a45: OUTPUT¬´q[p6eval]‚ê§‚ê§¬ª

[14:42] <jnthn> TBA: So far as I can tell, it's not specified as working.

[14:42] <jnthn> Oh...

[14:42] <TBA> now that looks good

[14:42] <jnthn> Oh! I was thinking <?{ ... }> 

[14:42] <PerlJam> r: .say for <fred barny p6eval wilma>.grep(/ <{ %*ENV<USER> }> /);

[14:42] <p6eval> rakudo f23a45: OUTPUT¬´p6eval‚ê§¬ª

[14:43] <jnthn> PerlJam++

[14:43] <TBA> r: .say for <fred barny p6eval wilma>.grep(/ <{%*ENV<USER>}> /);

[14:43] <p6eval> rakudo f23a45: OUTPUT¬´p6eval‚ê§¬ª

[14:43] <TBA> r: .say for <fred barny p6eval wilma>.grep(/<{%*ENV<USER>}>/);

[14:43] <p6eval> rakudo f23a45: OUTPUT¬´p6eval‚ê§¬ª

[14:44] <TBA> so whats different, im confused!

[14:44] *** kaleem left
[14:44] <PerlJam> TBA: um ... nothing?  I don't understand what you're confused about

[14:45] <TBA> me either, thought the earlier examples that failed were the same, they werent, my mistake!

[14:46] <TBA> except now I'm getting malformed regex...

[14:46] <PerlJam> TBA: careful if %*ENV<USER> has regex-special characters in it

[14:46] <TBA> .grep(/ <{ %*ENV<USER> }> /)

[14:46] <PerlJam> (presumably %*ENV<USER> won't, but maybe you're using another environment var)

[14:47] <TBA> r: .say for <p6test a b c>.grep(/ <{ %*ENV<USER> }> /)

[14:47] <p6eval> rakudo f23a45:  ( no output )

[14:47] <PerlJam> r: %*ENV<USER> = "foo(bar";   / <{ %*ENV<USER> }> /;

[14:47] <p6eval> rakudo f23a45:  ( no output )

[14:47] <TBA> r: .say for <p6eval a b c>.grep(/ <{ %*ENV<USER> }> /)

[14:47] <p6eval> rakudo f23a45: OUTPUT¬´p6eval‚ê§¬ª

[14:47] <TBA> argh

[14:47] <TBA> when i run it locally I get

[14:47] *** UncleFester6 joined
[14:48] <TBA> ===SORRY!=== Malformed regex at eval_0:1 

[14:48] <PerlJam> r: %*ENV<USER> = "foo(bar";   "test" ~~ / <{ %*ENV<USER> }> /;

[14:48] <p6eval> rakudo f23a45: OUTPUT¬´===SORRY!===‚ê§Malformed regex‚ê§at eval_0:1‚ê§¬ª

[14:48] <flussence> oh crap.

[14:48] <PerlJam> TBA: notice the open paren with no closing paren.

[14:48] <TBA> the user im matching against is 'www-data', atm

[14:49] <flussence> it's interpolating that string as *code*

[14:49] <TBA> could it be the - then?

[14:49] <PerlJam> r: %*ENV<USER> = "www-data";   "test" ~~ / <{ %*ENV<USER> }> /;

[14:50] <p6eval> rakudo f23a45: OUTPUT¬´===SORRY!===‚ê§Malformed regex‚ê§at eval_0:1‚ê§¬ª

[14:50] <PerlJam> looks that way

[14:50] <PerlJam> r: %*ENV<USER> = "wwwdata";   "test" ~~ / <{ %*ENV<USER> }> /;

[14:50] <p6eval> rakudo f23a45:  ( no output )

[14:50] <TBA> excellent, at least its not just me going crazy :)

[14:51] <tadzik> :)

[14:52] <ggoebel> jnthn++ are you expecting the reduction in memory usage to translate into performance gains as well?

[14:52] *** REPLeffect left
[14:53] <TBA> yey :D my bit of code finally works

[14:53] <TBA> thanks all :)

[14:53] <jnthn> ggoebel: Well, it's compile time performance gains if anything, but I'm hoping for a bit. It's hard to guess how much it'll be.

[14:54] <moritz> not swapping is usually a big performance win :-)

[14:54] <tadzik> TBA: curious, is this some work-related stuff?

[14:54] <TBA> yeah, sort of

[14:54] <jnthn> moritz: Well, there is that... :)

[14:54] <TBA> this is what we had:

[14:54] <TBA> killit('-m'); killit('-s'); killit('-q');  sub killit { my $switch = shift; my $output = `ipcs $switch`; $output =~ s/(0x\w+)\s+(\w+)\s+(\w+)/my ($i,$o) = ($2,$3); system("ipcrm $switch $i") if $ENV{USER} =~ \/^$o\/;/ego; } 

[14:54] <TBA> this is what we now have (in p6):

[14:55] <tadzik> "i would prefer to have this (...) stuff in perl6 than using moose" -- heard from a cow-orker today :)

[14:55] <TBA> my $user = %*ENV<USER>; for ('-q','-s','-m') { for qqx{ipcs $_}.trim.lines.grep(/$user/)[0..*] -> $line { say qqx{echo ipcrm $_ $line.trim.split(/\s+/)[1]}.trim; } }

[14:55] <TBA> far neater, shorter and far more readable :)

[14:55] <TBA> (ignore the 0..* range :p forgot to remove it)

[15:00] <masak> tadzik: curious question: are you really collaborating with bovines at your workplace?

[15:00] <tadzik> not really

[15:00] <tadzik> TIL a new word :)

[15:01] <PerlJam> TBA: random commentary:  the first .trim looks superfluous to me.  rather than split(/\s+/), maybe you want to use .words ?

[15:01] <TBA> PerlJam: that was it! .words! couldn't remember what it was called (and was writing this on paper earlier... don't ask :p)

[15:01] <PerlJam> (actually, the fact that you used .trim 3 times sets off my spidey sense)

[15:02] <TBA> the first .trim was to get rid of blank lines, that was before I'd remembered I needed to grep for the user anyway, so it was chopping off the first few lines of ipcs output

[15:04] <masak> PerlJam: what I say three times is true? :)

[15:05] <TBA> interesting...

[15:05] <TBA> oh ignore me

[15:06] <TBA> if I want to use $line.words[1], inside a qqx{}, can I?

[15:06] <TBA> I actually get

[15:06] <TBA> $line output, followed by ".words[1]"

[15:06] <TBA> i.e., with this: for <-q -s -m> { for qqx{ipcs $_}.lines.grep(/$user/) -> $line { say $line.words[1]; say qqx{echo ipcrm $line.words[1]}; } }

[15:06] <PerlJam> TBA: .words.[1]

[15:06] <masak> tadzik: tentative theory about the 'p' command thing. see the error output? it has spaces (or some other blank character) split in everywhere. maybe the command was really 'perl6' (or something) and got similarly split on Windows?

[15:07] <TBA> PerlJam++

[15:07] <TBA> you are genius!

[15:07] <moritz> aye, looks like some UTF-16 messup

[15:07] <TBA> its now this short:

[15:07] <TBA> for <-q -s -m> { for qqx{ipcs $_}.lines.grep(/$user/) -> $line { say qqx{echo ipcrm $line.words.[1]}; } }

[15:07] <tadzik> masak: hmm, possibly

[15:08] <moritz> TBA: instead of "say qqx ..." you can simply do   run("...")

[15:08] <TBA> moritz: i did have a play with run() earlier but something didn't work, cant remember what now though

[15:09] <moritz> TBA: ah my fault, it's shell()

[15:09] <TBA> moritz++ :)

[15:09] <TBA> now slightly shorter again

[15:09] <TBA> for <-q -s -m> { for qqx{ipcs $_}.lines.grep(/$user/) -> $line { shell "echo ipcrm $line.words.[1]"; } }

[15:10] <TBA> thats perfectish, ignoring the fact I got my ipcrm call wrong :p

[15:10] <TBA> for <q s m> { for qqx{ipcs -$_}.lines.grep(/$user/) -> $line { shell "echo ipcrm -$_ $line.words.[1]"; } }

[15:16] <TBA> thanks for all your help :) gonna pick this up again on monday I think!

[15:16] *** TBA left
[15:17] *** dayangkun left
[15:18] <moritz> wait, 'shell "echo"'

[15:18] <moritz> then you can just say() it right away, no?

[15:18] <PerlJam> testing probably

[15:19] <moritz> I guess so, yes

[15:19] *** jferrero joined
[15:22] *** thelazydeveloper joined
[15:35] <zb> wow, i managed to stop & start playback with XMMS2::Client :D

[15:36] <tadzik> nice :)

[15:42] *** GlitchMr joined
[15:43] *** benabik joined
[15:57] *** bbkr left
[15:57] *** JimmyZ left
[15:57] <pmichaud> good morning, #perl6

[15:57] <hoelzro> morning pmichaud 

[15:57] <jnthn> o/ pmichaud 

[15:57] <[Coke]> ho

[15:58] <jnthn> pmichaud: I tried the MSI here. It really needs a completion screen of some kind, I think.

[15:59] <[Coke]> a picture of the rakudo arch saying "done"?

[15:59] <PerlJam> [Coke]: "this is just the beginning..."  :)

[16:00] <jnthn> pmichaud: Mostly the problem is that it can run and install successfully *very* fast :)

[16:00] <jnthn> pmichaud: Which is good but the first time I ran it, I assumed it had failed! :)

[16:01] <jnthn> pmichaud: That detail aside, the install it does looks good to me.

[16:01] <jnthn> pmichaud++

[16:02] *** hoelzro is now known as hoelzro|away

[16:02] <pmichaud> jnthn: I can probably get a completion screen there.

[16:03] <pmichaud> I'm also thinking of a license screen.

[16:03] <moritz> don't

[16:03] <jnthn> *nod*

[16:03] <masak> pmichaud! \o/

[16:03] <moritz> those annoy me to no end

[16:03] <moritz> and on linux you don't have that either

[16:04] <flussence> but this isn't on linux!

[16:04] <pmichaud> okay, I can skip the license screen.

[16:04] <pmichaud> I figure strawberrry includes the screen and they tend to think about such things, so I'd follow their lead :)

[16:04] <pmichaud> but we can skip for a while

[16:04] *** zhutingting left
[16:04] <pmichaud> anyway, I just need to find out what wix provides without too much difficulty.  

[16:04] <pmichaud> should I create desktop and/or program shortcuts?

[16:05] <jnthn> pmichaud: Other things to consider: adding a Start Menu entry to the Rakudo Perl REPL, and perhaps the Perl 6 book.

[16:05] <flussence> shortcuts... to what?

[16:05] <jnthn> (Under a Rakudo folder)

[16:05] <flussence> oh, docs. yeah, that seems like a good idea.

[16:05] <pmichaud> flussence: repl

[16:05] <jnthn> People expect to find *something* after they install.

[16:09] *** kaare_ left
[16:12] <pmichaud> so, other than the .msi stuff, are there any issues that need to be addressed before cutting a standard star release?

[16:12] <jnthn> pmichaud: Yes, see in the backlog.

[16:13] <jnthn> pmichaud: of note

[16:13] <jnthn> 16:47 < moritz> pmichaud: https://gist.github.com/3188234

[16:14] <pmichaud> I'm thinking it picked up an nqp from somewhere else.

[16:17] <pmichaud> moritz: do you have the Makefile from that nopaste handy?

[16:18] <pmichaud> (the one in the rakudo-2012.07 dir)

[16:32] <pmichaud> or, more likely, the nqp executable was missing entirely

[16:34] <[Coke]> # 07/26/2012 - rakudo++ (22806); niecza (90.4%); pugs (41.04%)

[16:35] <sorear> good * #perl6

[16:35] <TimToady> top o' the mornin' to ya

[16:35] <masak> sorear! \o/

[16:36] <[Coke]> https://gist.github.com/1476841#file_perl6_pass_rates - niecza is failing 7, pugs 54, and rakudo 195.

[16:36] <TimToady> .oO(feels more like the bottom of the morning to me, actually...)

[16:36] <masak> 195!?

[16:36] <TimToady> tc maybe?

[16:36] <pmichaud> szabgab++ also reports spectest failures on p6c

[16:36] <jnthn> Probably all that strings crap.

[16:36] <jnthn> (tc and frineds)

[16:37] <jnthn> I think moritz++ fudged a bunch of it though maybe it didn't make it into the stats today.

[16:37] <[Coke]> that was from yesterday. didn't realize today's run is still going.

[16:37] *** spider-mario joined
[16:37] <jnthn> Ah, then that certainly explains it.

[16:37] <[Coke]> will report in again in an hour when rakudo's done. ;)

[16:38] <dalek> star: 9132003 | pmichaud++ | skel/tools/build/Makefile.in:

[16:38] <dalek> star: Break out separate 'wxs' and 'msi' Makefile targets.

[16:38] <dalek> star: review: https://github.com/rakudo/star/commit/9132003e48

[16:40] <moritz> pmichaud: the nqp executable wasn't missing, I pasted its --version output below

[16:40] <pmichaud> okay, yes.

[16:40] <moritz> makefile forthcoming...

[16:41] *** vmspb joined
[16:41] <moritz> pmichaud: http://moritz.faui2k3.org/tmp/star-Makefile

[16:42] *** MayDaniel joined
[16:42] <pmichaud> moritz: any particular reason for including --gen-nqp, btw? 

[16:42] <pmichaud> using --gen-nqp causes star to clone a new nqp repo.

[16:42] <pmichaud> instead of using the one in the tarball bundle.

[16:42] <moritz> pmichaud: no reason, and I wasn't aware of the distinction

[16:43] <pmichaud> I bet that's the issue.

[16:43] <moritz> might well be

[16:43] <pmichaud> since the current nqp would be the qast-merged one.

[16:43] <moritz> wouldn't it pick up the nqp from NQP_REVISION?

[16:43] <pmichaud> ...what NQP_REVISION?

[16:44] <pmichaud> star doesn't have a NQP_REVISION.  Looking.

[16:44] <pmichaud> oh, wait

[16:44] <moritz> but it's copy of rakudo has one

[16:44] <pmichaud> I did my command wrong; I could be wrong about all of this. checking.

[16:45] <pmichaud> never mind, I was in the wrong dir.

[16:45] <pmichaud> --gen-nqp doesn't clone the repo.

[16:45] <pmichaud> testing now.

[16:45] <pmichaud> sorry for false alarm

[16:48] <pmichaud> moritz: I need the Makefile from the rakudo-2012.07 dir

[16:48] <pmichaud> (not from the top-level star dir)

[16:49] <moritz> pmichaud: sorry, I don't have that anymore; I configured rakudo separately to get installed, so the old makefile is gone

[16:49] <moritz> pmichaud: but I can try to reproduce it

[16:49] <pmichaud> okay.

[16:57] <pmichaud> perl Configure.pl --gen-parrot --gen-nqp --prefix=$HOME/p6/install && make install  # just ran successfully for me

[16:58] *** awwaiid joined
[16:58] <moritz> woah, rakudo HEAD compiled the setting using just 1.2GB memory. jnthn++ jnthn++

[16:59] <TimToady> I don't suppose anyone here has an Indian visa and would like to go to India after YAPC::EU to give a talk in my place?

[16:59] <moritz> about 800MB after creating the PAST nodes

[16:59] <moritz> the star installer still runs --gen-nqp on the other machine

[17:00] * TimToady could not get an Indian visa because he was unwilling to sign a paper saying he would engage in no religious activity

[17:00] <TimToady> all my activity is religious :)

[17:01] <moritz> pmichaud: ok, I can't reproduce my earlier problem here. Call it static noise :-/

[17:03] <benabik> Hm.  Compiling CORE:  'Can only use get_how on a SixModelObject' in NQPClassHow.mixin (src/stage2/gen/nqp-mo.pir:10944) (src/stage2/gen/nqp-mo.pm:1249)

[17:03] <TimToady> and http://www.techniche.org/techniche12/ has already advertised far and wide that I'm coming, and is asking who I can send instead...

[17:04] <PerlJam> What's Damian doing around that time period?  :)

[17:04] <au> TimToady: non-tourist visa not an option?

[17:05] <TimToady> they offered a business visa with abridgement of freedom

[17:05] <au> er, wow.

[17:05] <TimToady> last year I went on a conference visa, but that is not longer an option without letters from three different departments of Indian government

[17:05] <TimToady> that for some reason I have to get, not the conference

[17:06] <au> suddenly the Department of Homeland Security seems rather enlightened by comparison...

[17:06] <TimToady> PerlJam: I've heard TheDamian swear that he was never going back to India.

[17:06] <[Coke]> (no religious activity) clearly india /has/ religious activity already. are they trying to avoid missionaries?

[17:07] <TimToady> [Coke]: I believe that's the motivation, but my principles will not allow me to sign such a document even if I wasn't planning any religious activity by their definition

[17:07] <pmichaud> TimToady++ # principles

[17:08] <au> TimToady++

[17:08] <au> telepresence?

[17:08] <TimToady> and quite apart from the stand-for-freedom aspect, when you believe in a higher authority, you cannot swear to a lesser authority to ignore the higher authority... :/

[17:08] <au> (either via robots or just regular Skype)

[17:08] <PerlJam> au++ good idea

[17:09] <sorear> \o/ au

[17:09] <pmichaud> we had a presentation from Ward Cunningham here via telepresence -- it worked out pretty well.

[17:10] <au> "one cannot swear to a lowercased authority to ignore the titlecased Authority"

[17:10] <au> o/ sorear

[17:10] <TimToady> well, not to ruin your joke, but India is usually titlecased as well

[17:11] <au> so it's a lowercased authority with a titlecased name...

[17:11] <TimToady> works for me :)

[17:11] <au> :)

[17:12] <moritz> p6: say 'foo'.codes

[17:12] <p6eval> rakudo f23a45: OUTPUT¬´No such method 'codes' for invocant of type 'Str'‚ê§  in block  at /tmp/e0Vt4ywFOm:1‚ê§‚ê§¬ª

[17:12] <p6eval> ..niecza v19-15-g051783d: OUTPUT¬´3‚ê§¬ª

[17:12] <sorear> well, if you can do your paperwork in a caseless script, it might work out

[17:12] <sorear> I hear India has a few of those

[17:14] * [Coke] pounds on au and asks for a pugs patch. ;)

[17:14] <[Coke]> er, pounces!

[17:14] <au> ouch!

[17:14] <[Coke]> pounds sounds much less friendly. stupid fingers with their automatic typeahead.

[17:14] <TimToady> sorear: ‡•∫

[17:14] <[Coke]> sorry, au!

[17:14] <sorear> .u ‡•∫

[17:14] <phenny> U+097A (No name found)

[17:15] <au> np at all

[17:15] <TimToady> DEVANAGARI LETTER HEAVY YA

[17:15] <sorear> would dollars and/or newtons be more friendly?

[17:15] <[Coke]> # 07/27/2012 - rakudo++ (22902); niecza (90.02%); pugs (40.86%)

[17:15] <[Coke]> bother, pugs already pushed down below 41% 

[17:15] <TimToady> someone should replace phenny with something more modern

[17:15] <[Coke]> fails: n:4,p:55,r:65

[17:15] <sorear> maybe kilograms, depending on how much you like to pretend that they are the same as kiloponds

[17:16] <Tene> TimToady: phenny gets the unicode table from python

[17:16] <TimToady> pugs don't like pounds, and python doesn't like unicode

[17:16] <sorear> so we just need to convince sbp(?) to upgrade python?

[17:16] <Tene> sorear: could be; I don't know if it's any better in newer python.

[17:17] <moritz> this should take care of the majority of the fails

[17:17] <dalek> roast: 37532bc | moritz++ | S32-str/substr.t:

[17:17] <dalek> roast: fudge substr.t for rakudo

[17:17] <dalek> roast: review: https://github.com/perl6/roast/commit/37532bc264

[17:17] <TimToady> python is too busy being enterprise-ready to worry about being Enterprise-ready...

[17:18] <[Coke]> au: how much effort would it be to make the Test functions not autothread?

[17:18] <[Coke]> I tried making the function signatures match those in spec, but it was insufficient to stop the autothreading.

[17:18] <[Coke]> pugs: say 3.FatRat

[17:18] <p6eval> pugs: OUTPUT¬´*** No such method in class Int: "&FatRat"‚ê§    at /tmp/dsOIYR5pwk line 1, column 5 - line 2, column 1‚ê§¬ª

[17:19] * [Coke] sighs.

[17:19] <moritz> pugs: sub f(Object $x) { say $x }; f 1|2|3

[17:19] * [Coke] needs keys to the evalbot to fix that, he guesses.

[17:19] <p6eval> pugs: OUTPUT¬´1‚ê§2‚ê§3‚ê§¬ª

[17:19] <moritz> [Coke]: do you have root on feather?

[17:19] <au> [Coke]: does isa_ok autothread?

[17:20] <au> iirc it had the Any|Junction|Pair signature to explicitly prevent autothreading

[17:20] <au> so perhaps Mu can be made to mean that

[17:20] <moritz> pugs: sub f(Mu $x) { say $x }; f 1|2|3

[17:20] <p6eval> pugs: OUTPUT¬´1‚ê§3‚ê§2‚ê§¬ª

[17:20] <moritz> pugs: say Pair ~~  Any

[17:20] <p6eval> pugs: OUTPUT¬´1‚ê§¬ª

[17:20] <[Coke]> Sorry, user coke is not allowed to execute '/bin/bash' as root on feather.

[17:20] <au> pugs: sub f(Any|Junction $x) { say $x }; f 1|2|3

[17:21] <p6eval> pugs: OUTPUT¬´any(VInt 1,VInt 2,VInt 3)‚ê§¬ª

[17:21] <[Coke]> ah, if I add |Junction temporarily, that'll do it?

[17:21] <au> but as a quickfix, s/Any/Any|Junction/ will likely do

[17:21] <au> worth a try

[17:21] <moritz> [Coke]: I've given you sudo privs on feather

[17:21] <[Coke]> sweet! Thanks.

[17:21] <moritz> [Coke]: you can  sudo su - p6eval

[17:22] <moritz> [Coke]: and set up a working ghc + pugs combo

[17:22] <au> quietfanatic++ # committing 543ec380 and fixing #24

[17:22] <moritz> [Coke]: and then we'll regularly rsync it over to feather3 where p6eval lives

[17:22] * TimToady admits to a fondness for quietfanatic

[17:22] <au> phenny: tell quietfanatic thx for the fix! iirc saying "fixes #24" in the commit message would close the ticket on GitHub automagically

[17:22] <moritz> TimToady: you're forgiven :-)

[17:23] <phenny> au: I'll pass that on when quietfanatic is around.

[17:24] <[Coke]> moritz: if I do a single build, how does that help automatic updates?

[17:24] <[Coke]> or is it just then on me to do a rebuild whenever I want one?

[17:25] <Tene> please use sudo -i instead of sudo su; it'll save you trouble someday.

[17:28] <moritz> [Coke]: I just want something that rsyncs nicely

[17:28] <moritz> [Coke]: preferably along with a cron job that rebuilds regularly

[17:29] <pmichaud> arrrgh, too much chaos here at the house to work productively; I'll bbiaw

[17:29] <TimToady> std: / $(%*ENV<foo>) /

[17:29] <p6eval> std e52e3ca: OUTPUT¬´ok 00:00 42m‚ê§¬ª

[17:30] <TimToady> r: say %*ENV<USER>

[17:30] <p6eval> rakudo f23a45: OUTPUT¬´p6eval‚ê§¬ª

[17:31] <TimToady> rn: $_ = %*ENV<USER>; say so / $(%*ENV<USER>) /

[17:31] <p6eval> niecza v19-15-g051783d: OUTPUT¬´Use of uninitialized value in string context‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 1272 (warn @ 5) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 268 (Mu.Str @ 15) ‚ê§  at <unknown> line 0 (ExitRunloop @ 0) ‚ê§  at /home/p6eval/niecza/lib/CORE.settin‚Ä¶

[17:31] <p6eval> ..rakudo f23a45: OUTPUT¬´===SORRY!===‚ê§Unrecognized regex metacharacter % (must be quoted to match literally) at line 2, near "*ENV<USER>"‚ê§¬ª

[17:31] <TimToady> *bug

[17:32] <[Coke]> au: cabal install pugs-compat ->

[17:32] <TimToady> well, not stdbug :)

[17:32] <[Coke]> cabal: Couldn't read cabal file "HUnit/1.2.5.0/HUnit.cabal"

[17:32] <au> [Coke]: which user? on feather?

[17:33] <[Coke]> ah. http://www.haskell.org/pipermail/haskell-cafe/2012-July/102392.html

[17:33] <[Coke]> it's for the p6eval user on feather.

[17:33] <[Coke]> perhaps I can pick an earlier version of it.

[17:35] <[Coke]> ah. need cabal to be updated.

[17:35] <[Coke]> was cabal on feather installed with a package manager, I wonder?

[17:36] <au> looks like "sudo apt-get install haskell-platform" can fix it.

[17:37] <[Coke]> on it.

[17:37] <au> or, if that takes too long, "sudo apt-get install cabal-install" first would do as well.

[17:39] *** spider-mario left
[17:39] <[Coke]> haskell-platform fails epically to install here. I get a curses screen telling me things are screwy.

[17:40] <[Coke]> cabal-install fails also:

[17:40] <[Coke]> https://gist.github.com/3189296

[17:42] <[Coke]> that seems like a job for someone who actually manages a linux box to look at.

[17:44] <[Coke]> oooh. I wonder if I can just steal coke's .cabal dir for now.

[17:46] <[Coke]> nope. ah well

[17:49] * geekosaur wonders if that's going to cause problems at the next reboot

[17:50] <au> [Coke]: I've dpkg -i'd cabal-install_0.14.0-2_i386.deb from sid's pool

[17:50] <au> [Coke]: so it should work now

[17:50] <au> (where it = feather:/usr/bin/cabal)

[17:56] <[Coke]> au: \o/

[17:59] <au> glad it worked

[17:59] <au> ...& have a good localtime hackers \o

[18:00] *** GlitchMr left
[18:11] *** daxim left
[18:22] *** spider-mario joined
[18:22] *** spider-mario left
[18:23] *** spider-mario joined
[18:26] *** Chillance joined
[18:28] * [Coke] is still cleaning up the cabal stuff for p6eval - looks like it's complaining that some installs of pre-existing packags were borked. reinstalling now.

[18:40] <[Coke]> moritz: p6eval on feather1 now has a working pugs build.

[18:41] <[Coke]> I assume the p6eval bot knows how to deal with the dist/build/pugs... stuff when executing.

[18:42] <moritz> [Coke]: you give it a path to a binary, it executes it

[18:42] <moritz> [Coke]: what neeeds to be rsync'ed to feather3?

[18:44] <[Coke]> I figured you were syncing the whole home dir. ;)

[18:44] <[Coke]> probably ~/.cabal and ~/Pugs.hs

[18:46] <moritz> is Pugs.hs/Pugs/dist/build/pugs/pugs the right binary to execute?

[18:48] <moritz> pugs: say 1.FatRat

[18:48] <p6eval> pugs: OUTPUT¬´1‚ê§¬ª

[18:48] <moritz> [Coke]: does that look better? :-)

[18:49] <moritz> [Coke]: now please adjust build-scripts/rebuild-pugs.sh in the evalbot repo

[18:51] <[Coke]> they seem reasonable. might need some tweaking for when "cabal configure" reports an error and things need manual upgrading. (that's a problem on my daily smokes, also)

[18:51] <[Coke]> can probably kill the GHCBIN-related settings.

[18:51] * [Coke] will poke later.

[18:51] <[Coke]> moritz++ 

[18:51] <[Coke]> au++

[18:52] <[Coke]> sorear++ # for trying to do this before. 

[18:52] <moritz> [Coke]++ # for doing it

[19:05] *** kaare_ joined
[19:19] <quietfanatic> Ah, cool.  I'll keep that in mind.

[19:19] <phenny> quietfanatic: 17:22Z <au> tell quietfanatic thx for the fix! iirc saying "fixes #24" in the commit message would close the ticket on GitHub automagically

[19:34] <Tene> I'm always entertained by the apparent time-reversal in responding to a message before it being apparently delivered.

[19:34] <[Coke]> I was just thinking that.

[19:34] <diakopter> [Coke]: were you just thinking that?

[19:35] <Tene> :D

[19:38] *** SamuraiJack_ left
[19:38] <[Coke]> What's a way to say "this parameter is defined" in a signature?

[19:39] <quietfanatic> that one was three minutes early even.

[19:39] <[Coke]> :q

[19:39] * hugme hugs [Coke], good vi(m) user!

[19:39] <TimToady> what do you mean by "say"?

[19:39] <TimToady> oh, duh

[19:39] <TimToady> :D

[19:39] <Tene> :D

[19:39] <Tene> Oh, heh

[19:40] *** fhelmberger joined
[19:40] * TimToady contemplates kicking [Coke]++ for excessive cleverness :)

[19:42] *** fhelmberger left
[19:46] <TimToady> but [Coke] already self-kicked with :q--and now I'm wondering if I should be glad he didn't say :wq...

[19:57] *** sftp joined
[19:58] *** fgomez left
[19:59] *** fgomez joined
[20:01] *** birdwindupbird joined
[20:04] *** vmspb left
[20:23] <masak> lol, hi #perl6.

[20:23] <masak> I'll be with you in a minute. socializing with jnthn. :)

[20:23] <diakopter> I always imagine that lol as a cackle

[20:24] <moritz> do you all watch the opening of the Olympic games?

[20:27] <TimToady> not on till this evening here

[20:31] <[Coke]> "GE is a proud sponsor..."

[20:33] *** birdwindupbird left
[20:34] *** birdwindupbird joined
[20:39] *** fridim_ left
[20:41] *** mucker left
[20:42] <[Coke]> is the old pugs svn repo around somewhere?

[20:43] <benabik> Doesn't the Pugs.hs.git history stretch back into SVN land?

[20:43] <benabik> I guess not.  I thought I saw git-svn-ids in there.

[20:44] <[Coke]> anyone has a copy of this: https://github.com/perl6/Pugs.hs/issues/22 it'd be helpful. 

[20:45] <[Coke]> ah, sweet, found a copy of the svn repo at openfoundry

[20:46] *** kaare_ left
[20:47] <moritz> [Coke]: the mu repo contains everything there ever was in the pugs svn repo

[20:48] <moritz> (maybe except empty directories, which git doesn't track)

[20:50] <[Coke]> mu repo?

[20:50] <[Coke]> oh, on github.

[20:54] *** atrodo left
[20:56] <[Coke]> moritz: I don't see pugs in there. ;)

[20:56] *** birdwindupbird left
[21:01] <diakopter> [Coke]: see https://github.com/perl6/mu/commits/master?&page=61 middle of the page for removing pugs from mu

[21:02] <diakopter> are you looking for a particular commit?

[21:06] <[Coke]> diakopter: I'm looking for the a script in the repo that compiled Prelude.pm down to c

[21:07] <diakopter> pugscc ?

[21:08] <[Coke]> au said it was "the pmc2c packer script"

[21:09] <[Coke]> Warning: you are leaving 30213 commits behind, not connected to

[21:09] <[Coke]> any of your branches:

[21:10] <benabik> That's... a lot of commits.

[21:11] <[Coke]> from mu

[21:11] <moritz> [Coke]: pugs has been deleted from mu, but it's all in the history of that repo

[21:12] <moritz> [Coke]: the README says something about when stuff was deleted

[21:12] <moritz> git checkout 6f0203060f  should get you before the big cleanup

[21:15] <[Coke]> moritz++

[21:27] *** fgomez left
[21:31] *** skids left
[21:34] *** telex left
[21:36] *** telex joined
[21:41] *** bluescreen10 left
[21:46] <lue> hello world o/

[21:53] <masak> lue! \o/

[21:53] <sorear> lue!

[21:53] <sorear> and masak!

[21:54] <jnthn> evenin'

[21:54] <lue> (if my calculations last night were correct, the opening ceremony started at 12:12 my local time, so shh!)

[21:55] <TimToady> we don't to know who wins

[21:57] <diakopter> I think NBC wins the opening ceremonies

[21:57] <masak> jnthn! \o/

[21:58] <jnthn> masak! \o/

[21:58] <lue> the fact that this is the 30th olympiad (if I'm correct) makes putting roman numerals before the show's title on NBC unfortunate...

[22:03] <TimToady> rpn: say [XXX] <O l y m p i c s>

[22:03] <p6eval> rakudo f23a45: OUTPUT¬´O l y m p i c s‚ê§¬ª

[22:03] <p6eval> ..pugs: OUTPUT¬´*** ‚ê§    Unexpected end of input‚ê§    expecting "\\", variable name or "p"‚ê§    at /tmp/PiyEhJtA8U line 2, column 1‚ê§¬ª

[22:03] <p6eval> ..niecza v19-15-g051783d: OUTPUT¬´Unhandled exception: Excess arguments to ANON, used 2 of 8 positionals‚ê§  at /tmp/0eFP9vo_Zx line 0 (ANON @ 1) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 2543 (reduceop @ 12) ‚ê§  at /tmp/0eFP9vo_Zx line 1 (mainline @ 3) ‚ê§  at /home/p6eval/niecza/lib/COR‚Ä¶

[22:04] <TimToady> er...huh?

[22:05] <TimToady> pugs: say [XXX] <O l y m p i c s>;

[22:05] <p6eval> pugs: OUTPUT¬´*** ‚ê§    Unexpected end of input‚ê§    expecting "\\", variable name or "p"‚ê§    at /tmp/BFx5iAM95a line 2, column 1‚ê§¬ª

[22:06] <TimToady> n: say [XXX] <O l>;

[22:06] <p6eval> niecza v19-15-g051783d: OUTPUT¬´O l‚ê§¬ª

[22:06] <TimToady> n: say [XXX] <O l y>;

[22:06] *** fgomez joined
[22:06] <p6eval> niecza v19-15-g051783d: OUTPUT¬´Unhandled exception: Excess arguments to ANON, used 2 of 3 positionals‚ê§  at /tmp/rZU35pWkOz line 0 (ANON @ 1) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 2543 (reduceop @ 12) ‚ê§  at /tmp/rZU35pWkOz line 1 (mainline @ 3) ‚ê§  at /home/p6eval/niecza/lib/COR‚Ä¶

[22:06] <TimToady> n say 1 X 2 X 3

[22:06] <TimToady> n: say 1 X 2 X 3

[22:06] <p6eval> niecza v19-15-g051783d: OUTPUT¬´1 2 3‚ê§¬ª

[22:06] <TimToady> n: say 1 XX 2 XX 3

[22:06] <p6eval> niecza v19-15-g051783d: OUTPUT¬´1 2 3‚ê§¬ª

[22:07] <TimToady> n: say 1 XXX 2 XXX 3

[22:07] <p6eval> niecza v19-15-g051783d: OUTPUT¬´Unhandled exception: Excess arguments to ANON, used 2 of 3 positionals‚ê§  at /tmp/BrtPBgCcuP line 0 (ANON @ 1) ‚ê§  at <unknown> line 0 (KERNEL map @ 2) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 245 (crossop @ 5) ‚ê§  at /tmp/BrtPBgCcuP line 1 (mainline @‚Ä¶

[22:07] <quietfanatic> all kinds of strangeness

[22:08] <diakopter> n: say [X-X] <O l y>

[22:08] <p6eval> niecza v19-15-g051783d: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Unsupported use of y///; in Perl 6 please use tr/// at /tmp/vzZF26NNWC line 1:‚ê§------> [32msay [X-X] <O l y[33m‚èè[31m>[0m‚ê§‚ê§Undeclared name:‚ê§  'X-X' used at line 1‚ê§‚ê§Parse failed‚ê§‚ê§¬ª

[22:09] <diakopter> heh

[22:09] <diakopter> n: say [X-X] <O l tr>

[22:09] <quietfanatic> parsing it as an array literal.

[22:09] <p6eval> niecza v19-15-g051783d: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Use of a closing delimiter for an opener is reserved at /tmp/OWtYnR9csl line 1:‚ê§------> [32msay [X-X] <O l tr[33m‚èè[31m>[0m‚ê§‚ê§Undeclared name:‚ê§        'X-X' used at line 1‚ê§‚ê§Parse failed‚ê§‚ê§¬ª

[22:10] <diakopter> reserve this!

[22:11] <TimToady> n: say [-X] <O l tr<

[22:11] <p6eval> niecza v19-15-g051783d: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Unable to parse quote-words subscript; couldn't find right angle quote at /tmp/Sb32ssPvla line 1 (EOF):‚ê§------> [32msay [-X] <O l tr<[33m‚èè[31m<EOL>[0m‚ê§‚ê§Undeclared name:‚ê§    'X' used at line 1‚ê§Undeclared routine:‚ê§ 'tr' used ‚Ä¶

[22:11] <quietfanatic> reduce ops and rray literals can lead to ambiguity.

[22:11] <TimToady> n: say [X-X] <O l tr<

[22:11] <p6eval> niecza v19-15-g051783d: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Unable to parse quote-words subscript; couldn't find right angle quote at /tmp/07ms6dkZ0x line 1 (EOF):‚ê§------> [32msay [X-X] <O l tr<[33m‚èè[31m<EOL>[0m‚ê§‚ê§Undeclared name:‚ê§   'X-X' used at line 1‚ê§Undeclared routine:‚ê§       'tr' us‚Ä¶

[22:11] <TimToady> n: say [X-X] <O l tr<foo>

[22:12] <p6eval> niecza v19-15-g051783d: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§No delimiter found at /tmp/XRZnuIz4HO line 1 (EOF):‚ê§------> [32msay [X-X] <O l tr<foo>[33m‚èè[31m<EOL>[0m‚ê§‚ê§Undeclared name:‚ê§   'X-X' used at line 1‚ê§‚ê§Parse failed‚ê§‚ê§¬ª

[22:12] <diakopter> backtracking too far...

[22:12] <TimToady> yeah

[22:12] <TimToady> n: say [X-X] <O l tr<foo<bar<

[22:12] <p6eval> niecza v19-15-g051783d: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Unable to parse quote-words subscript; couldn't find right angle quote at /tmp/u52IwTOJPJ line 1:‚ê§------> [32msay [X-X] <O l tr<[33m‚èè[31mfoo<bar<[0m‚ê§‚ê§Undeclared name:‚ê§      'X-X' used at line 1‚ê§Undeclared routine:‚ê§       'tr' used ‚Ä¶

[22:12] <TimToady> n: say [X-X] <O l tr/foo/bar/

[22:12] <p6eval> niecza v19-15-g051783d: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§Action method quote:tr not yet implemented at /tmp/0vo0q4C1U_ line 1 (EOF):‚ê§------> [32msay [X-X] <O l tr/foo/bar/[33m‚èè[31m<EOL>[0m‚ê§‚ê§Undeclared names:‚ê§      'O' used at line 1‚ê§     'X-X' used at line 1‚ê§Undeclared routine:‚ê§       'l'

[22:12] <p6eval> ..us‚Ä¶

[22:13] *** sergot left
[22:13] <TimToady> n: say s<foo> = 'bar';

[22:14] <p6eval> niecza v19-15-g051783d: OUTPUT¬´Unhandled exception: Unable to resolve method subst in type Any‚ê§  at /tmp/P4aX2JEIBG line 1 (mainline @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 3929 (ANON @ 3) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 3930 (module-CORE @ 564) ‚ê§  at /home/‚Ä¶

[22:16] <TimToady> nr: sub tr { { foo => 42 } }; say tr<foo>

[22:16] <p6eval> niecza v19-15-g051783d: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§No delimiter found at /tmp/AiQeVW7lkf line 1 (EOF):‚ê§------> [32msub tr { { foo => 42 } }; say tr<foo>[33m‚èè[31m<EOL>[0m‚ê§‚ê§Parse failed‚ê§‚ê§¬ª

[22:16] <p6eval> ..rakudo f23a45: OUTPUT¬´42‚ê§¬ª

[22:18] <diakopter> my ubuntu vm says Kernel panic - not syncing: VFS: Unable to mount root fs on unknown-block(0.0)

[22:18] * diakopter sad

[22:19] <lue> blog post!  https://rdstar.wordpress.com/2012/07/27/making-an-if-game-in-august/

[22:21] * masak reads

[22:22] <masak> hm. I will make some internal refactors to Game::Engine, yes. 'things' and 'rooms' may end up in inner classes.

[22:23] <masak> but the key here is not to expose any inner workings out of Game::Engine.

[22:23] <masak> so it may be implemented using hashes, or inner classes, or bubble gum and wires.

[22:24] <masak> aww, I was hoping to read about what the *game* would be like. :) not just a bunch of tech you plan to put in or around Game::Engine...

[22:26] <pmichaud> hello again

[22:26] <diakopter> o/

[22:26] <masak> \o/

[22:26] <lue> sorry. There will be a hamster wheel room though (like the carousel room in Zork II, only hamster-wheel oriented)

[22:27] <lue> (to the tell the truth, I don't have much of a plan for what the actual game will be... /me plans a game)

[22:27] <masak> you're free to copy/paste or augment Game::Engine, of course... but I would prefer it if you didn't.

[22:27] <masak> I can guarantee there's actually a lot of cool stuff you'll be able to do just using the same principles Crypt::Game uses to build the adventure.

[22:28] *** sergot joined
[22:28] *** snearch joined
[22:29] <jnthn> o/ pmichaud 

[22:29] <lue> Yeah, I was thinking of how far I'd end up modifying Adventure::Engine, and how I didn't want to go too far.

[22:30] <masak> I'm trying to make it so that it won't need any modifications at all.

[22:30] <masak> hooks are really flexible, for example.

[22:31] <lue> .oO( Maybe if I end up being that stubborn, I could use OOP anyway and then write an interface that takes info out of objects and puts it in Adventure::Engine as necessary :) )

[22:32] <lue> But I'll definitely try my hand at using Adventure::Engine the way it's used in crypt first, so I can get a better feel for it.

[22:32] <masak> I am using OOP. I'm just not modeling things as objects which I'm not exposing to the outer world anyway.

[22:33] <masak> lue: yes, a very good start is reading through the BUILD submethod in Crypt::Game, to see what the possible repertoire of Game::Engine is in terms of world creation.

[22:34] <TimToady> arguably, variables and closures are objects too :)

[22:35] * lue is starting to realize perhaps his mind is too stuck on how his implementation of a P6 IF engine would've done things.

[22:36] *** drbean left
[22:36] <lue> masak: Are you sure you don't want to rename it Game::Engine? (or IFGame::Engine) :)

[22:36] <masak> well, Adventure isn't perfect, but it's more exact than Game.

[22:37] <masak> my brain keeps thinking of these as "text adventures", not as "interactive fiction", for some reason.

[22:37] <lue> (just referring to the fact you keep typing Game::Engine :) )

[22:37] <TimToady> adventure used to be called 'advent' on 6-char machines, so you could confuse everyone into thinking it's Christmas

[22:38] *** drbean joined
[22:38] <masak> lue: heh :)

[22:39] <sorear> mm, ADV

[22:40] <masak> I'm gonna skip doing the writeup of today's crypt hacking tonight. it's already to late and I need to sleep more than I need to be timely with the blog post.

[22:40] <masak> too*

[22:40] * TimToady first played adventure on a DECSYSTEM-20 in the lobby of a the hotel of a DECUS convention.

[22:41] <masak> you'll get a crypt blog post tomorrow morning :)

[22:41] <lue> this is an awesome coincidence by the way: https://en.wikipedia.org/wiki/Cross_product#Mnemonic

[22:41] <masak> lue: yeah, I read that yesterday :)

[22:41] <masak> quietfanatic and I were talking about vector outer products.

[22:44] *** tokuhiro_ joined
[22:46] <sorear> I still prefer the Levi-Cevita symbol

[22:49] *** MayDaniel left
[22:51] <masak> I never truly grokked tensors.

[22:53] * sorear hugs masak

[22:53] <masak> :)

[22:54] <masak> I can see that they are the generalization of scalar/vector/array/...

[22:54] <masak> but I never went much further than that.

[22:58] <sorear> I like to think about the duality between vectors and linear functions

[22:59] <sorear> (in some branches of geometry, vectors are defined as differential operators, which I do not quite grok but it's another interesting perspective)

[23:00] <sorear> a rank-2 tensor is a linear function from vectors to vectors (when I push a spinning wheel in this direction, it responds in that direction)

[23:00] <sorear> an object constructed from two directions, like an area element or an angular momentum

[23:01] <sorear> a bilinear function from vectors to scalars, or a quadratic function of a single vector

[23:01] <sorear> if you look at gravitational potential near a point and Taylor-expand it, you get a scalar potential, a rank 1 (vector) force field, then a rank 2 tensor which reflects the tides

[23:02] <sorear> (let's stop here, because if you aren't planning to dive into GR you will never use a tensor of rank higher than 2)

[23:04] <masak> ok.

[23:04] <masak> I get all of the above on an intuitive level, at least.

[23:06] <sorear> on another level tensors are a kind of strong typing for physics.  they make it hard to mix certain types of values that should never be mixed.

[23:07] <sorear> when you construct an equation using the tensor formalism, you get for free reasonable behavior under changes of coordinates

[23:07] <sergot> good night o/

[23:07] *** sergot left
[23:09] <masak> ok, so it's types with built-in dimensional analysis.

[23:11] *** snearch left
[23:16] *** whiteknight joined
[23:17] *** whiteknight is now known as Guest65764

[23:22] *** lue left
[23:26] <masak> I just implemented winning the game in crypt.

[23:26] <masak> so now you can play it all the way through. it's still a rough experience, but at least it's possible.

[23:26] <masak> developing an adventure game using tests is wonderful.

[23:27] <masak> latest commits are here: https://github.com/masak/crypt/commits/master

[23:27] <masak> today's blog post will arrive tomorrow :)

[23:31] *** fgomez left
[23:34] *** UncleFester6 left
[23:44] *** takadonet joined
[23:52] *** spider-mario left
[23:56] *** Chillance left
