[00:02] *** cognominal_ joined
[00:05] *** cognominal left
[00:08] *** cognominal_ left
[00:10] *** cognominal_ joined
[00:37] *** dayangkun joined
[00:44] *** Chillance left
[00:52] *** anuby joined
[00:56] *** tokuhiro_ joined
[01:17] *** ilogger2 joined
[01:17] *** ChanServ sets mode: +v ilogger2

[01:51] *** aloha joined
[01:56] *** am0c joined
[02:19] *** firelord joined
[02:19] *** firelord left
[02:37] *** fgomez joined
[03:01] *** Vlavv` joined
[03:07] *** gootle joined
[03:15] <dalek> roast: bab341d | (Solomon Foster)++ | S03-operators/eqv.t:

[03:15] <dalek> roast: Unfudge.

[03:15] <dalek> roast: review: https://github.com/perl6/roast/commit/bab341d9a7

[03:15] <dalek> roast: 224c4bb | (Solomon Foster)++ | S04-phasers/rvalue.t:

[03:15] <dalek> roast: Unfudge.

[03:15] <dalek> roast: review: https://github.com/perl6/roast/commit/224c4bb882

[03:34] *** flightrecorder joined
[03:36] *** plobsing joined
[03:37] <am0c> n: say "hi"

[03:37] <p6eval> niecza v22-16-g4c016f5: OUTPUT«hi␤»

[03:41] *** cognominal_ joined
[03:46] <am0c> I have heard that P5 Moose is a back-ported stuff from Perl 6. I'm wondered why there is no <around before after> roles in Perl 6. I think there would be a reason, but cannot figure out.

[03:47] <am0c> role cute { method { nextsame; say "meow!" } }; class Cat does cute { method grr { say "grr..." } }; Cat.new.grr;

[03:47] <am0c> r: role cute { method { nextsame; say "meow!" } }; class Cat does cute { method grr { say "grr..." } }; Cat.new.grr;

[03:47] <p6eval> rakudo 0a320a: OUTPUT«grr...␤»

[03:51] <sorear> am0c: becuase perl 6 people refuse to beleive it's needed

[03:51] <sorear> I've given up on convincing them.  maybe you can give it a try?

[03:52] <doy> for what it's worth, the moose people don't really believe it's needed anymore either (p5-mop doesn't have them)

[03:53] <sorear> doy: interesting

[03:53] <am0c> I see.. :3

[03:55] <skids> Not being a Moose user, and looking at them, how are they functionally different than accessors and/or wrap?

[03:56] <sorear> skids: they are structured overriding

[03:56] <skids> So, for introspective purposes?

[03:56] <sorear> class A is B { before foo () { say "hi" } } is like method foo() { say 'hi'; nextsame }

[03:57] <sorear> has nothing to do with introspection

[03:57] <sorear> at all

[03:57] <skids> Well, what's so special about them being "structured" then?

[03:57] <sorear> they're easier to use and harder to misuse

[03:58] <doy> the main reason they are useful in moose is that p5's equivalent to nextsame is pretty broken

[03:58] <benabik> r: role cute { method grr { nextsame; say "meow!" } }; class Cat does cute { method grr { say "grr..." } }; Cat.new.grr;

[03:58] <sorear> doy: do you still have before/after/around for classes?

[03:58] <p6eval> rakudo 0a320a: OUTPUT«grr...␤»

[03:58] <doy> sorear: meaning?

[03:58] <am0c> yey, I found the information. https://github.com/stevan/p5-mop/wiki

[03:58] <doy> moose still has method modifiers

[03:58] <sorear> doy: did you get rid of method modifiers entirely or?

[03:58] <benabik> r: role cute { method grr { say "meow!" } }; class Cat does cute { method grr { nextsame; say "grr..." } }; Cat.new.grr;

[03:58] <p6eval> rakudo 0a320a: OUTPUT«grr...␤»

[03:59] <doy> but p5-mop doesn't have them at all

[03:59] <sorear> doy: oh, you just mean that _roles_ no longer support them

[03:59] <doy> no

[03:59] <doy> both roles and classes support them in moose, and neither do in p5-mop

[04:00] <doy> (although they'd be pretty trivial to write as an extension in p5-mop)

[04:00] <doy> but that's kind of the point

[04:03] <skids> r: class cute { method grr { say "meow!" } }; class tiger is cute { method grr { callsame; say "grr..." } }; tiger.new.grr

[04:03] <p6eval> rakudo 0a320a: OUTPUT«meow!␤grr...␤»

[04:04] <sorear> also, I'm not a fan of my \r = callsame; do-more-stuff(); r;

[04:07] *** fgomez left
[04:17] *** raiph joined
[04:20] <raiph> am0c: here's what larry had to say about before/around/after in 2010: http://irclog.perlgeek.de/perl6/2010-04-07#i_2205584

[04:20] <phenny> raiph: 05 Nov 07:46Z <azawawi> tell raiph 1. very old chrome version, F6 at the moment does not do anything when there is no error. Try it with some errors in it. You can install Farabi6 to test it on your machine and set FARABI6_UNSAFE=1

[04:21] <am0c> raiph: wow, thanks very very much!

[04:23] <sorear> wow, TimToady completely failed to get it

[04:24] *** fgomez joined
[04:24] *** clkao joined
[04:30] <sorear> doy: are you at all familiar with perl 6's "wrap"?

[04:30] <raiph> contrast with audrey's take from 2007: "before/around/after is just sugar; can be ported easierly with callwith/nextwith; but I do find before/around/after easier to explain to an audience" : near http://irclog.perlgeek.de/perl6/2007-05-17#i_18912

[04:31] <sorear> raiph: audrey Gets It.

[04:33] <raiph> (I see stevan say he took an idea from BETA; first time I've ever seen a reference to that lang outside its own world)

[04:37] <sorear> raiph: moose also has augment/inner

[04:37] <raiph> sorear: yeah, those were the things stolen from BETA

[04:39] <raiph> goodnight #perl6

[04:40] *** raiph left
[04:41] <am0c> oh audreyt's say in a chatlog are all colored red?

[04:41] <am0c> r: say #<does> "work"

[04:41] <p6eval> rakudo 0a320a: OUTPUT«␤»

[04:42] <benabik> r: say #`<does> 'work'

[04:42] <p6eval> rakudo 0a320a: OUTPUT«work␤»

[04:42] <am0c> ah..

[04:43] <sorear> n: say #<does> "work"

[04:43] <p6eval> niecza v22-16-g4c016f5: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Unsupported use of bare 'say'; in Perl 6 please use .say if you meant $_, or use an explicit invocant or argument at /tmp/n8f4Iw3r2d line 1:␤------> [32msay[33m⏏[31m #<does> "work"[0m␤␤Potential difficulties:␤  Embedded …

[04:44] <sorear> n: #<does> "work"

[04:44] <p6eval> niecza v22-16-g4c016f5: OUTPUT«Potential difficulties:␤  Embedded comment seems to be missing backtick at /tmp/zVnhPF1m2M line 1:␤------> [32m#<does>[33m⏏[31m "work"[0m␤␤»

[04:47] <doy> sorear: i am not

[04:50] <doy> also, another thing about method modifiers: method modifiers in roles are really more a form of macro, or implicit parameterization, than a simple translation to something with nextsame

[04:50] <doy> and that asymmetry is kind of annoying, and leads to weird interactions

[04:51] <sorear> doy: wrap works like this: Str.^find_method('chars').wrap({ say "moo"; nextsame });   say "hello".chars # moo\n5\n

[04:51] <sorear> how do I convince people that wrap is not a viable replacement for method modifiers?

[04:51] <sorear> the two concepts seem completely unrelated in my miond

[04:52] <sorear> wrap modifies existing Code objects

[04:53] <doy> well

[04:53] <sorear> it doesn't interact with the class system at all, except insofar as methods are Code objects

[04:54] <doy> StrSubclass.^add_method('chars', Str.^find_method('chars').clone.wrap({...}))

[04:54] * doy handwaves a bunch

[04:54] <doy> it is a bit roundabout though

[04:55] <benabik> r: role cute { method grr { say "meow!" } }; class Cat does cute; Cat.^find_method('grr').wrap({say "grr..."; nextsame}); Cat.new.grr;

[04:55] <p6eval> rakudo 0a320a: OUTPUT«===SORRY!===␤Too late for semicolon form of $*PKGDECL definition at line 2, near "Cat.^find_"␤»

[04:55] <benabik> r: role cute { method grr { say "meow!" } }; class Cat does cute {}; Cat.^find_method('grr').wrap({say "grr..."; nextsame}); Cat.new.grr;

[04:55] <p6eval> rakudo 0a320a: OUTPUT«grr...␤meow!␤Attempt to return outside of any Routine␤  in block  at src/gen/CORE.setting:541␤  in block  at /tmp/eF6fidP2gP:1␤␤»

[04:56] <sorear> interesting bug

[04:57] <benabik> I don't see what's trying to return.

[04:58] <benabik> Wrapping a method from a role seems to require doing it wholly outside the class definition.  That's LTA

[04:59] <sorear> r: return

[04:59] <p6eval> rakudo 0a320a:  ( no output )

[04:59] <sorear> r: eval 'return'

[04:59] <p6eval> rakudo 0a320a:  ( no output )

[05:13] *** odoacre joined
[05:27] *** obra joined
[05:33] <skids> sorear: you convince people by pointing out that wrap is subject to HardRoutine limitations.

[05:38] <skids> callsame with straight overrides/accessors is actually what competes. 

[05:59] *** am0c left
[05:59] *** kaleem joined
[06:01] <TimToady> I haven't made the wrap argument in ages; I'm fine with callsame semantics, but it still seems like something a module could do

[06:28] *** odoacre_ joined
[06:29] *** odoacre_ left
[06:29] *** odoacre_ joined
[06:30] *** hash_table joined
[06:30] *** odoacre_ left
[06:41] *** gootle1 joined
[06:41] *** risou_ left
[06:41] *** risou joined
[06:41] *** gootle left
[06:49] *** SamuraiJack joined
[06:55] *** flightrecorder left
[07:08] <Woodi> morning ppls :)

[07:11] <Woodi> I wondered how to code "aspects", eg. adding logging, adding checking to code. And before some-method can help. however it looks like event mechanism like in onClick="..."

[07:11] <Woodi> on some-event do-something()

[07:12] <Woodi> irc programming use this...

[07:13] <Woodi> and "ON" is nicely hufmanized. but me think "on" have bad history in languages development... eg. few days ago seen ON ... GOTO ... in BASIC 

[07:24] *** am0c joined
[07:30] *** hash_table left
[07:35] <moritz> it's one week into 2012-11, and the changelog for the November release already looks mightily impressive

[07:35] <moritz> jnthn++

[07:38] *** colbseton joined
[07:39] *** colbseton left
[07:41] *** flightrecorder joined
[07:45] *** sorenso joined
[07:56] <jnthn> Method modifiers in roles seem like an especially bad idea to me. They seem cute today, then tomorrow you have roles that are so tightly coupled to classes that you might as well have used inheritance.

[08:02] <jnthn> teaching &

[08:21] *** domidumont joined
[08:25] *** domidumont left
[08:25] *** azawawi joined
[08:25] <azawawi> hi

[08:30] *** fhelmberger joined
[08:31] *** plobsing left
[08:48] *** azawawi left
[08:49] *** FROGGS joined
[08:57] *** sorenso left
[09:09] *** au left
[09:09] *** c1sung joined
[09:09] *** sorenso joined
[09:11] *** Pleiades` joined
[09:11] *** domidumont joined
[09:15] *** au joined
[09:20] *** jlaire joined
[09:27] *** domidumont left
[09:32] *** VXZ joined
[09:37] <dalek> niecza: f43fe40 | sorear++ | lib/ (6 files):

[09:37] <dalek> niecza: Top removal: iterators, variables, vivihooks

[09:37] <dalek> niecza: review: https://github.com/sorear/niecza/commit/f43fe40cdc

[09:37] <dalek> niecza: eafdf64 | sorear++ | lib/ (5 files):

[09:37] <dalek> niecza: Top removal: Parameter & Signature

[09:37] <dalek> niecza: review: https://github.com/sorear/niecza/commit/eafdf64c9b

[09:37] <dalek> niecza: d874a8e | sorear++ | lib/ (2 files):

[09:37] <dalek> niecza: Top removal: iterators, substrings

[09:37] <dalek> niecza: review: https://github.com/sorear/niecza/commit/d874a8e100

[09:40] *** sorenso left
[09:40] *** am0c left
[09:46] *** GlitchMr joined
[09:49] <bbkr__> r: [1,2,3]>>.say

[09:49] <p6eval> rakudo 0a320a: OUTPUT«3␤1␤2␤»

[09:50] <bbkr__> why output is not in correct order?

[09:50] *** dakkar joined
[09:51] <tadzik> >> autothreads and doesn't preserve order

[09:51] <moritz> any order is correct.

[09:53] <bbkr__> thanks

[10:06] *** sorenso joined
[10:17] *** cognominal_ left
[10:20] *** VXZ left
[10:24] *** grondilu joined
[10:24] *** cognominal_ joined
[10:25] <grondilu> Isn't http://rosettacode.org/wiki/Trigonometric_functions#Perl6 totally wrong?

[10:26] <cotto> seems to be

[10:26] <grondilu> rn: say sin 60 * Degrees

[10:26] <p6eval> niecza v22-19-gd874a8e: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Undeclared name:␤        'Degrees' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1437 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 37) ␤  at /hom…

[10:26] <p6eval> ..rakudo 0a320a: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&Degrees' called (line 1)␤»

[10:27] <moritz> grondilu: it uses a very ancient version of Rakudo

[10:30] *** imarcusthis joined
[10:32] <grondilu> r: sub postfix:<°> { $^a * pi/180 }; say sin 60°

[10:32] <p6eval> rakudo 0a320a: OUTPUT«0.86602540384322␤»

[10:36] <cotto> What

[10:36] <cotto> 's the correct spelling of (1 .. 100)􏿽xBB.&fizzbuzz.join("\n").say;

[10:36] <cotto> http://rosettacode.org/wiki/FizzBuzz#Perl_6

[10:36] <moritz> .map(&fizzbuzz).join("\n")

[10:39] <cotto> looks like it was just an issue with using the repl

[10:47] <grondilu> r: say enum { <foo bar> }

[10:47] <p6eval> rakudo 0a320a: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&enum' called (line 1)␤»

[10:47] <grondilu> ?

[10:48] <grondilu> rn: say enum { <foo bar> }

[10:48] <p6eval> rakudo 0a320a: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&enum' called (line 1)␤»

[10:48] <p6eval> ..niecza v22-19-gd874a8e: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Undeclared routine:␤     'enum' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1437 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 37) ␤  at /hom…

[10:48] <grondilu> n: enum abc { <a b c> }; say my abc $ = a;

[10:48] <p6eval> niecza v22-19-gd874a8e: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Malformed my at /tmp/M8FzJKSkaW line 1:␤------> [32menum abc { <a b c> }; say my[33m⏏[31m abc $ = a;[0m␤␤Undeclared routines:␤       'abc' used at line 1␤   'enum' used at line 1␤␤Parse failed␤␤»

[10:50] <grondilu> rn: say enum <foo bar>;

[10:50] <p6eval> niecza v22-19-gd874a8e: OUTPUT«Use of uninitialized value in string context␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1289 (warn @ 5) ␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 266 (Mu.Str @ 15) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/src/N…

[10:50] <p6eval> ..rakudo 0a320a: OUTPUT«EnumMap.new("foo", 0, "bar", 1, )␤»

[10:54] <grondilu> r: say my enum Days <mon tue wed etc>;

[10:54] <p6eval> rakudo 0a320a: OUTPUT«Days()␤»

[10:55] <grondilu> r: say my enum TrigBase Radians => 1, Degrees => pi/180;

[10:55] <p6eval> rakudo 0a320a: OUTPUT«===SORRY!===␤Malformed my␤at /tmp/6jFLldx0kG:1␤»

[10:55] <grondilu> I don't get it

[10:57] <grondilu> r: say my enum TrigBase «:Radians(1) :Degrees(pi/180)»;

[10:57] <p6eval> rakudo 0a320a: OUTPUT«===SORRY!===␤Type error in enum. Got 'Num' Expected: 'Int' at line 2, near ";"␤»

[10:59] <grondilu> but that's pretty much how S32/Numeric wants to define TrigBase.  Something's wrong.

[11:00] <grondilu> r: enum TrigBase is export (Radians => 1, Degrees => (pi/180)); say "ok"

[11:00] <p6eval> rakudo 0a320a: OUTPUT«===SORRY!===␤Type error in enum. Got 'Num' Expected: 'Int' at line 2, near "; say \"ok\""␤»

[11:04] *** domidumont joined
[11:05] *** domidumont left
[11:05] *** domidumont joined
[11:11] *** am0c joined
[11:19] *** brrt joined
[11:23] <moritz> r: my Cool enum TrigBase  «:Radians(1) :Degrees(pi/180)»;

[11:23] <p6eval> rakudo 0a320a: OUTPUT«===SORRY!===␤P6opaque only supports type changes where the MRO of the original type is a suffix of the MRO of the new type␤»

[11:27] *** sorenso left
[11:35] *** sorenso joined
[11:42] *** brrt left
[11:59] *** sorenso left
[12:08] *** am0c left
[12:09] *** bluescreen10 joined
[12:11] *** sorenso joined
[12:34] *** Psyche^ joined
[12:38] *** gootle1 left
[12:38] *** Psyche^ is now known as Patterner

[13:04] *** chee joined
[13:04] *** chee is now known as Guest75822

[13:08] *** Guest75822 left
[13:08] *** Guest75822 joined
[13:08] *** Guest75822 is now known as chee

[13:18] *** jaldhar joined
[13:27] *** azawawi joined
[13:27] <azawawi> hi #perl6

[13:30] <moritz> \o

[13:30] <chee> hi azawawi 

[13:49] *** brrt joined
[13:51] <sergot> hi o/

[13:52] *** domidumont left
[13:52] <tadzik> oh hey :)

[13:53] *** dakkar left
[13:54] *** benabik joined
[13:56] *** plobsing joined
[13:58] <azawawi> jnthn: ping

[14:01] *** brrt left
[14:02] *** kaleem_ joined
[14:02] *** kaleem left
[14:05] *** brrt joined
[14:08] * [Coke] finds coffee.

[14:09] *** flightre1 joined
[14:10] *** sorenso left
[14:10] *** flightrecorder left
[14:10] *** flightre1 left
[14:10] *** flightrecorder joined
[14:10] *** FROGGS left
[14:12] *** flightrecorder left
[14:13] *** flightrecorder joined
[14:16] *** benabik left
[14:20] *** PacoAir joined
[14:24] *** FROGGS joined
[14:26] *** bowtie joined
[14:28] *** atrodo joined
[14:28] *** dakkar joined
[14:31] *** atrodo left
[14:32] *** atrodo joined
[14:35] *** brrt left
[14:48] *** plobsing left
[14:49] *** bluescreen10 left
[14:54] <jnthn> azawawi: Gotta decommute, but will be home in a bit...will pong you then Ö=

[14:56] <[Coke]> muppet smiley!

[14:57] <azawawi> jnthn++ # perl6-debug :)

[15:05] *** bluescreen10 joined
[15:05] *** azawawi left
[15:17] *** domidumont joined
[15:17] *** alester joined
[15:23] *** stopbit joined
[15:24] *** skids joined
[15:45] *** kaare_ joined
[15:52] *** kaleem_ left
[16:00] * jnthn home :)

[16:01] <jnthn> aza...pong fail :)

[16:06] *** sorenso joined
[16:13] *** domidumont left
[16:13] *** domidumont joined
[16:18] *** SmokeMachine joined
[16:25] *** Gothmog_ joined
[16:41] *** SmokeMachine left
[16:42] *** SmokeMachine joined
[16:44] *** azawawi joined
[16:44] <azawawi> jnthn: ping pong

[16:44] <azawawi> jnthn: i had to go home also :)

[16:45] * [Coke] will be happier when the polls close tonight in the states. Oy.

[16:45] <PerlJam> [Coke]: happier just because it's over?

[16:45] * azawawi task finished... :)

[16:47] <[Coke]> PerlJam: yes.

[16:50] *** benabik joined
[16:55] *** flightrecorder left
[16:55] *** FROGGS left
[16:59] *** pmurias joined
[17:01] <jnthn> o/ azawawi 

[17:02] *** fgomez left
[17:04] * azawawi takes a look at https://github.com/jnthn/rakudo-debugger

[17:05] *** SamuraiJack left
[17:05] <jnthn> :)

[17:05] *** SamuraiJack joined
[17:06] <[Coke]> is it a goal to have all our spec tests not complain about, say, unused variables?

[17:07] <[Coke]> (niecza highlights this; I'm sure STD will also have a lot more complaints if that is ever setup to run.)

[17:07] <PerlJam> [Coke]: sounds like a reasonable goal to me.

[17:08] <azawawi> http://feather.perl6.nl:8080/  # initial dummy implementation of editor tabs .. brb... firefix still crashes it lol :)

[17:08] *** azawawi_ joined
[17:08] *** azawawi left
[17:10] *** sorenso left
[17:12] *** havenn joined
[17:13] <PerlJam> azawawi_: What does "ENV{FARABI6_UNSAFE} is not enabled" mean?

[17:14] <azawawi_> PerlJam: since i dont have a sandboxed perl6, that option is disabled by default...

[17:14] *** azawawi_ is now known as azawawi

[17:15] <PerlJam> azawawi_: I'm also surprised that perlito5 actually outputs something other than "wrong perl version" on that default program.

[17:15] <azawawi> yeah me 2...

[17:15] <PerlJam> anyway ... very nice!  azawawi++

[17:16] *** MayDaniel joined
[17:17] <azawawi> PerlJam: one of the problems that a web app faces when emulating a desktop is shortcuts...

[17:17] <azawawi> PerlJam: e.g. if i try to bind to CTRL-N (for new file). Chrome does not 100% allow it. Same for Ctrl-O (Open) on IE9+

[17:18] <azawawi> PerlJam: i need to think in another way... maybe central popup menu list where you can autocomplete commands...

[17:19] <azawawi> PerlJam: that way you dont need to learn new shortcuts and at the same the most recently used are display first 

[17:20] <azawawi> sorear was also thinking that day of the possibility of running niecza code under silverlight which can be run right away under farabi6 

[17:20] <azawawi> and it is already sandboxed

[17:20] <PerlJam> that would be cool

[17:23] <azawawi> Perlito is nice also in a sense that could use what JS can do.. which means a Perlito 6 can access canvas, audio,...etc API

[17:23] * azawawi starts hacking at perl6-debugger... web-based API

[17:38] <dalek> roast: e0e0034 | jnthn++ | S06-other/introspection.t:

[17:38] <dalek> roast: Eliminate tests depending on non-spec Multi type.

[17:38] <dalek> roast: 

[17:38] <dalek> roast: Also, a Rakudo unfudge.

[17:38] <dalek> roast: review: https://github.com/perl6/roast/commit/e0e0034049

[17:38] <dalek> rakudo/nom: da339d2 | jnthn++ | src/core/ (2 files):

[17:38] <dalek> rakudo/nom: Turn candidates_matching into cando.

[17:38] <dalek> rakudo/nom: 

[17:38] <dalek> rakudo/nom: Turns out we had a non-spec method that was really close to doing what

[17:38] <dalek> rakudo/nom: a spec'd method needed. Small refactor, including to the thing that

[17:38] <dalek> rakudo/nom: depended on it.

[17:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/da339d2626

[17:38] <dalek> rakudo/nom: d3b16b0 | jnthn++ | t/spectest.data:

[17:38] <dalek> rakudo/nom: Run S06-other/introspection.t.

[17:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d3b16b0c24

[17:44] *** cognominal_ left
[17:44] *** rurban joined
[17:46] *** brrt joined
[17:53] *** BillySeth joined
[17:56] *** benabik left
[18:00] <sorear> o/

[18:04] *** dakkar left
[18:06] <jnthn> o/

[18:07] <PerlJam> that method makes me think of "fugue for the tinhorns" from Guys and Dolls

[18:08] <PerlJam> (the first verse anyway)

[18:09] <TimToady> one of the few classic musicals I've never been involved with...

[18:11] * TimToady earned grocery money once upon a time by being concertmaster in a musical comedy troupe in Seattle

[18:12] *** arlinius joined
[18:15] *** grondilu_ joined
[18:16] <TimToady> (and backup conductor from time to time)

[18:18] <TimToady> ((not to be confused with a conductor of backups))

[18:18] *** grondilu left
[18:19] <sorear> TimToady's past only gets interestinger and interestinger.

[18:20] <sorear> .oO( We want to put in a backup conductor so that there won't be issues next time someone screws up in Yuma )

[18:22] * TimToady is wearing a red-white-and-blue shirt today, in order to trick all the Orange County residents into thinking I'm a true-red Republican, who seem to think only Republicans are allowed to wear flag shirts.  Me, I wish there were more white states to go with the red and blue states...

[18:23] <TimToady> was hopin' to wear the shirt to Disneyland today, but that's postponed till tomorrow

[18:24] <sorear> Orange County eh

[18:25] <TimToady> not the Orange County with hanging chads...

[18:26] <TimToady> we're near Newport Beach, actually

[18:27] <dalek> perl6-roast-data: 7c50a25 | coke++ | / (3 files):

[18:27] <dalek> perl6-roast-data: today (automated commit)

[18:27] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/7c50a25e0a

[18:27] <TimToady> the tsunami would have to be over 200' tall to reach us

[18:27] *** sftp joined
[18:28] <TimToady> fortunately the time of day for asteroids is nearly over now

[18:31] *** brrt left
[18:33] <[Coke]> looks like another 24 passing tests for rakudo.

[18:33] <TimToady> and most of the faults are strike-slip here, so mostly we only need to worry about undersea landslides... :)

[18:33] *** brrt joined
[18:33] <jnthn> [Coke]: Now and then, stuff improves... :)

[18:35] *** fhelmberger left
[18:35] *** rindolf joined
[18:35] <rindolf> Hi all.

[18:35] <rindolf> azawawi: here?

[18:36] <azawawi> rindolf: yeah

[18:38] <rindolf> azawawi: thanks for solving my problems with Farabi.

[18:38] <rindolf> azawawi: what's up?

[18:40] <azawawi> rindolf: im trying to fix the firefox bug... apparently firefox keep the connection alive and keeps sending and neither HTTP::Server::Simple nor HTTP::Easy support that

[18:40] *** benabik joined
[18:40] <azawawi> rindolf: s/keep/keeps/

[18:40] <rindolf> azawawi: OK.

[18:40] <rindolf> azawawi: good luck with that.

[18:42] <tadzik> azawawi: what happens if you send it Connection:Close explicitely?

[18:42] <azawawi> tadzik: should work

[18:43] *** spider-mario joined
[18:43] <azawawi> tadzik: where can i find documentation about IO::Socket::INET

[18:43] *** spider-mario_ joined
[18:43] *** spider-mario left
[18:44] *** Chillance joined
[18:44] <tadzik> azawawi: I thought of http://doc.perl6.org/, but apparently not :)

[18:45] <dalek> rakudo/nom: 5f588e4 | jnthn++ | src/ (2 files):

[18:45] <dalek> rakudo/nom: Add nqp::p6setfirstflag to replace a pir:: op.

[18:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5f588e48d5

[18:45] <dalek> rakudo/nom: 069b2d2 | jnthn++ | src/Perl6/World.pm:

[18:45] <dalek> rakudo/nom: Pull phaser run code gen out into a method.

[18:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/069b2d2d8f

[18:45] <dalek> rakudo/nom: 0c0419e | jnthn++ | src/Perl6/Actions.pm:

[18:45] <dalek> rakudo/nom: Support FIRST/NEXT/LAST in non-for loops.

[18:45] <dalek> rakudo/nom: 

[18:45] <dalek> rakudo/nom: Already has worked in for loops for quite a while; now should work in

[18:45] <dalek> rakudo/nom: the various other kinds of loop.

[18:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0c0419e5bf

[18:46] <jnthn> store &

[18:46] *** sorenso joined
[18:47] *** SamuraiJack left
[18:48] *** SamuraiJack joined
[18:48] *** xinming joined
[18:52] *** azawawi left
[18:57] *** benabik left
[19:02] *** benabik joined
[19:06] <masak> hi, #perl6!

[19:06] *** spider-mario_ is now known as spider-mario

[19:07] <[Coke]> guten abend, masak-san.

[19:07] <masak> diakopter: "VVDKVMLRSNCD" gives exactly one hit on Google now :P

[19:08] <tadzik> awesome :)

[19:09] *** havenn left
[19:09] <masak> (though I probably just destroyed that)

[19:09] *** havenn joined
[19:10] <dalek> roast: d381550 | jnthn++ | S04-phasers/next.t:

[19:10] <dalek> roast: Unfudges.

[19:10] <dalek> roast: review: https://github.com/perl6/roast/commit/d381550f58

[19:11] <rindolf> masak: meow.

[19:11] <rindolf> masak: what's up?

[19:11] <dalek> features: 5a33ed9 | jnthn++ | features.json:

[19:11] <dalek> features: FIRST/NEXT/LAST no longer limited to for loops.

[19:11] <dalek> features: review: https://github.com/perl6/features/commit/5a33ed9396

[19:12] <masak> rindolf: roof. rain. clouds.

[19:12] <rindolf> masak: ah, it's raining?

[19:13] <masak> au++ # "easierly" :)

[19:13] <masak> rindolf: yes. on my roof.

[19:13] <rindolf> masak: nice.

[19:13] <benabik> masak: Better than raining through your roof.

[19:14] *** havenn left
[19:14] <masak> oh, don't get me wrong. as long as I'm under it, I'm fine with rain falling on my roof.

[19:15] *** fgomez joined
[19:17] <PerlJam> Now I'm reminded of Gene Kelly.

[19:17] <dalek> rakudo/nom: c5f8d7e | jnthn++ | docs/ROADMAP:

[19:17] <dalek> rakudo/nom: Remove completed ROADMAP item.

[19:17] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c5f8d7eb23

[19:20] <[Coke]> I see "Correct type smiley support" in the roadmap - current versions of tht are wrong?

[19:20] <[Coke]> (for rakudo)

[19:20] <jnthn> Yea

[19:20] <jnthn> h

[19:20] <jnthn> 'cus the spec got changed right after I implemented them, and now NQP and Rakudo's codebases use them all over as they used to be...

[19:21] <jnthn> Well, maybe not "right after"

[19:22] <benabik> Type smiley?  :D :U :A ?

[19:22] <jnthn> Yeah

[19:23] <[Coke]> happy, vomit, and crooked.

[19:23] <jnthn> We use :U and :D to mean...whatever the others are.

[19:23] <jnthn> I can't even remember the.

[19:23] <jnthn> *them

[19:24] <PerlJam> I  thought :U and :D remain unchanged ?

[19:24] <jnthn> The original idea was meant to be that :U and :D represented some low-level definedness (really, is it a type object or not).

[19:25] <jnthn> oh...

[19:25] <jnthn> Hm, huh...

[19:26] <jnthn>     Int:D       Allow only defined (concrete) Int values

[19:26] <jnthn>     Int:U       Allow only undefined (abstract or failure) Int values

[19:26] <jnthn>     Int:T       Allow Int only as a type object

[19:26] <PerlJam> right

[19:26] <jnthn> So now I don't understand what U means at all :)

[19:26] <[Coke]> I am wondering why you'd want Int:U - is it just there for completeness?

[19:26] <tadzik> :T or Failure?

[19:27] *** jlaire left
[19:27] <jnthn> tadzik: But Failure !~~ Int

[19:27] <tadzik> I know :|

[19:27] <jnthn> Unless it means something more like Int:T | Failure

[19:29] <PerlJam> [Coke]: Maybe you'd want a :U type because you're going to turn it into a :D type.

[19:29] <jnthn> "(The default new method has a prototype whose invocant is :T instead, so all new methods all default to allowing type objects.)" # This bit doesn't make much sense to me either...

[19:30] <PerlJam> also, I suppose it's a way to distinguish between SomeType.new.foo and SomeType.foo

[19:32] <jnthn> Anyway, seems Rakudo gets :D right.

[19:32] <jnthn> And the current :U is really :T

[19:34] *** havenn joined
[19:37] <cotto> :_ is also in S12

[19:38] *** raiph joined
[19:40] <raiph> the features comparison matrix shows "Logic cascade (andthen, orelse)" as unimplemented. Shouldn't that be at least partially implemented?

[19:40] <raiph> (for Rakudo)

[19:41] <[Coke]> r: say "no" andthen "what";

[19:41] <p6eval> rakudo 0c0419: OUTPUT«no␤»

[19:42] <jnthn> raiph: We can probably have partially implemented, yes.

[19:42] <TimToady> r: say ("no" andthen "what")

[19:43] <p6eval> rakudo 0c0419: OUTPUT«what␤»

[19:43] <jnthn> Is the precedence right there? :)

[19:43] *** havenn left
[19:43] *** havenn_ joined
[19:44] *** ttime2u joined
[19:44] *** benabik left
[19:45] *** ttime2u left
[19:46] <raiph> r: my @a = 1,2; say "@a[]" # the matrix also suggests Rakudo is only doing scalar variable interpolation

[19:46] <p6eval> rakudo 0c0419: OUTPUT«1 2␤»

[19:47] <jnthn> raiph: I think you're looking at the regexes section.

[19:47] <raiph> d'uh. thanks.

[19:48] *** brrt left
[19:49] <raiph> So that's about turning arrays and hashes into | or || alternates, or something like that, right?

[19:50] *** havenn_ left
[19:50] <jnthn> don't think hashes interpolate at all but yes, the | and || is the tricky thing.

[19:50] <jnthn> Well, the | is the really tricky one

[19:51] <jnthn> afk, nomming

[19:51] *** havenn joined
[19:54] *** havenn_ joined
[19:56] <masak> jnthn: yes, the precedence is right. 'andthen' is as loose as 'and', so 'say "no"' gets grouped into one subexpression.

[19:57] *** havenn left
[20:03] <dalek> features: 343a4f6 | jnthn++ | features.json:

[20:03] <dalek> features: Rakudo partially does logical cascades.

[20:03] <dalek> features: 

[20:03] <dalek> features: moritz++ for implementing, raiph++ for noticing features claimed not

[20:03] <dalek> features: at all implemented.

[20:03] <dalek> features: review: https://github.com/perl6/features/commit/343a4f6600

[20:04] <sorear> o/ masak

[20:05] <masak> \o sorear

[20:05] <colomon> \o/ masak & sorear!

[20:08] <masak> colomon! \o/

[20:09] *** domidumont left
[20:10] <sorear> o/ colomon

[20:11] <sorear> colomon: I think you're a USian.  Wink wink.

[20:12] *** jlaire joined
[20:13] * sorear just got back...

[20:13] *** havenn_ is now known as havenn

[20:14] * colomon is finally recovering from the cold he picked up on the way back from Switzerland...

[20:15] <sorear> not an excuse :p

[20:16] *** kurahaupo joined
[20:17] <jnthn> colomon: Hope Switzerland was enjoyable aside from catching the cold.

[20:17] *** wamba joined
[20:18] <colomon> jnthn: it was mildly nightmarish until I got settled in, then it was quite awesome.

[20:18] * colomon does not adjust well to overseas flights yet

[20:19] *** SamuraiJack left
[20:19] <jnthn> Ah, yeah...that can be annoying.

[20:19] <jnthn> Gets easier with practice. Sorta. :)

[20:19] <TimToady> you're expecting this to improve with time? o_O

[20:20] <colomon> TimToady: well, I've only done it twice (once each direction), so I was hoping....

[20:20] <TimToady> one learns a few tricks, I suppose, but getting older isn't one of them...

[20:21] <TimToady> mostly, take red-eyes eastward, walk in bright sunlight in the mornings

[20:21] <skids> r: ([andthen] "Ohai".say, Int, fail("Onoes")).perl.say

[20:21] <p6eval> rakudo c5f8d7: OUTPUT«Ohai␤»

[20:22] <colomon> It was completely fogged over every morning I was there.  In fact, after the first afternoon I only saw the sun the afternoon we went to the top of the mountain.

[20:22] *** flightrecorder joined
[20:22] <sorear> the sun is usually visible at 41000'

[20:22] <TimToady> well, whatever light is available in the morning

[20:23] <TimToady> cloudy light still has the blue component, which is most important, apparently

[20:23] <TimToady> going the other way, just pretend that a day normally has two naps or so...

[20:24] <TimToady> mind you, this is advice more for an 8-hour difference, not a 5-hour difference, or whatever it was

[20:24] * sorear ponders the value of indoor tanning lamps (high intensity violet) for manipulating sleep cycles

[20:24] <TimToady> in some ways a 12-hour difference is easier than 8 hours, since one can just swap naptime with nighttime :)

[20:25] <sorear> where I live they put us on a 1-hour difference twice a year just to keep us all on edge

[20:25] <sorear> universal jetlag time

[20:27] <colomon> The biggest problem was that I arrived in St. Gallen at what was 6am in my internal clock, with less sleep in the previous 48 hours than I'd get in a normal night, and was whisked off to a meeting.

[20:28] <colomon> Once I had showered, eaten, and slept 11 hours, I felt a bit more human.

[20:28] <TimToady> *if* you can arrange a down day when you arrive, being sleep-deprived can sometimes help you adjust faster

[20:28] <sorear> a meeting, eh?

[20:28] <colomon> Once I discovered I could get fresh roasted chestnuts from a street vendor in walking distance from my hotel I did fine.  ;)

[20:28] <colomon> sorear: a meeting.

[20:29] <colomon> $work, even

[20:30] <TimToady> sorear: the sun is usually visible at 41000' only if you define "usually" as minutely more than 50%

[20:30] <TimToady> it's only more than 50% for three reasons

[20:31] <TimToady> 1) the horizon is slightly below eye-level at altitude

[20:31] <TimToady> 2) the sun is not a point source

[20:31] <TimToady> 3) the atmosphere refracts light downward

[20:33] <TimToady> clouds on the horizon will take away some of that time too

[20:33] <TimToady> oh, and the occasional eclipse :)

[20:36] *** azawawi joined
[20:37] *** fgomez left
[20:39] <rindolf> TimToady: hi.

[20:39] <sorear> now, if you set up at L1 you can get a bit more than 50% :D

[20:39] <sorear> depending on whether you count transits of venus as occlusions

[20:40] * masak would like to set up at L1 at some point

[20:41] <jnthn> somebody set up us L1

[20:41] <masak> :P

[20:44] <[Coke]> home, home on... nevermind.

[20:48] <sorear> or you could spend half the year at the North Pole, then, on the autumnal equinox, catch a flight south

[20:49] * masak .oO( bipolar researcher )

[20:51] *** supernovus joined
[20:52] <supernovus> Quick question, if you "augment class Any" would that not make any methods you added available to all defined classes?

[20:53] <masak> all except the ones that !~~ Any

[20:53] <masak> like Mu, or Junction.

[20:54] <masak> also, depends what you mean by "available". the method could still be shadowed by same-named methods in deriving classes.

[20:54] <supernovus> masak: that's what I thought. I'm probably missing something super simple. 

[20:57] <supernovus> r: use MONKEY_TYPING; augment class Any { method hello { say "woot"; } }; "hi".hello;

[20:57] <p6eval> rakudo c5f8d7: OUTPUT«No such method 'hello' for invocant of type 'Str'␤  in block  at /tmp/_H_vJIBsA8:1␤␤»

[20:57] *** GlitchMr left
[20:58] * TimToady looks around for an L1 at 41000'...

[21:00] <supernovus> Interesting.

[21:01] <supernovus> n: use MONKEY_TYPING; augment class Any { method hello { say "woot"; } }; "hi".hello;

[21:01] <p6eval> niecza v22-19-gd874a8e: OUTPUT«woot␤»

[21:01] <masak> supernovus: yes, that could be considered a rakudobug.

[21:01] <jnthn> Hm. I suspect the method caching changes I did a while back that helped grammars a load are to blame.

[21:01] <jnthn> And the spectests didn't catch it.

[21:01] <masak> supernovus: feel free to report it.

[21:03] <supernovus> Sure thing. I wish Rakudo used the Github bug tracker rather than RT. Anyway, reporting bug.

[21:04] <jnthn> Fixing it will need me to do a chunk of stuff I've been putting off for a while, I guess...

[21:04] *** flightrecorder left
[21:09] <supernovus> Bug submitted.

[21:09] <masak> supernovus++

[21:11] <azawawi> supernovus: hi

[21:11] <supernovus> azawawi: hello

[21:11] <rurban> Q from the peanut gallery: Is anybody using perl6 for "production" already? november or such?

[21:11] * masak 

[21:12] <masak> not November, but http://strangelyconsistent.org/ is a static site running entirely on Perl 6.

[21:12] <azawawi> supernovus: i need to use HTTP::Easy again. The last commits made Farabi6 stuck at / so i switched to HTTP::Server::Simple...

[21:12] <azawawi> supernovus: and firefox seems to send null requests...

[21:12] <azawawi> supernovus: bad requests

[21:13] <supernovus> rurban: depends on your definition of production. I use it for all sorts of things. A script written in Perl 6 generates the http://supernovus.github.com/ page for instance.

[21:14] <flussence> azawawi: HTTP::Easy got broken by a bugfix for something else a few days back. Used to not have POST requests, now it's GET that won't work...

[21:14] *** bluescreen10 left
[21:14] <supernovus> Hmm. I will do some testing to see what's going on.

[21:15] <jnthn> rurban: I've used it for some $dayjob tasks.

[21:15] <rurban> But no companies yet, right?

[21:15] *** Chillance left
[21:17] <flussence> supernovus: IIRC IO::Socket.read was broken, they fixed that, and now it gets confused with certain types of request because it tries to read a request body that isn't there and blocks indefinitely

[21:18] <azawawi> flussence: who fixed it?

[21:18] <masak> rurban: oh, I've used it for $dayjob quite a lot, too.

[21:18] <masak> 'night, #perl6

[21:18] *** BillySeth left
[21:18] <rurban> good to know, thanks

[21:18] <flussence> azawawi: https://github.com/rakudo/rakudo/commit/34febe6663c186c5349df18cb000b8253166e7ce

[21:19] <flussence> wait, no

[21:19] <supernovus> flussence: ugh. I remember IO::Socket being broken, which prevented me from testing some library changes in HTTP::Easy, HTTP::Client and FastCGI. I didn't realize it had been fixed. Is there a good work around for the issue?

[21:19] <flussence> that's something else, one sec

[21:19] <flussence> https://github.com/rakudo/rakudo/commit/72ec6398140564f2655b7d981b7584f9874f1c10

[21:20] <flussence> supernovus: no idea :(

[21:21] <supernovus> I will have to play with it when I have time. Sigh. My lunch break is just about over, I'll commit Method::Modifiers to github (with the optional augment version non-functional in Rakudo due to the previously discovered bug), then it's back to $dayjob.

[21:22] * flussence starts playing around with it

[21:23] <azawawi> supernovus: http://paste.debian.net/207045/   # Farabi6 with HTTP::Easy... Unknown HTTP method error with firefox

[21:23] <azawawi> supernovus: chrome works fine

[21:24] <supernovus> azawawi: interesting, I'll modify the error to include the method that it didn't understand so we can track down the bug better.

[21:24] *** MayDaniel left
[21:25] <azawawi> supernovus: basically it is empty... let me enable :debug

[21:26] <azawawi> supernovus: http://paste.debian.net/207048/  # null request from firefox... strange right?

[21:27] <pjcj> Hello Perl6 people - we're wanting to run the Google Code-In again this year

[21:27] <pjcj> We'd love to see Perl6 get involved, but don't have any Perl6 tasks yet

[21:27] <azawawi> supernovus: i think you need to ignore that bad http request

[21:28] <pjcj> Time is short if The Perl Foundation is to be accepted into the programme this year

[21:28] <pjcj> so if you'd like to see Perl6 involved, please add tasks to http://wiki.enlightenedperl.org/gci2012 ASAP

[21:28] <pjcj> thanks very much!

[21:28] <supernovus> The empty request seems very unusual.

[21:28] <[Coke]> pjcj: danke!

[21:28] <pjcj> bitte

[21:30] *** sftp left
[21:32] <supernovus> Here's another question. The 'augment' feature if I remember correctly, changes the base class everywhere, including outside the current scope, which is why it's considered dangerous. Does the Classname.^add_method() feature have the same caveats or is it working withing a certain scope?

[21:32] <jnthn> Same caveats, since augment is really syntactic sugar for that.

[21:33] <supernovus> Ah okay. I have noticed that the MOP version doesn't require "use MONKEY_TYPING;" unlike the augment statement.

[21:34] <jnthn> Correct.

[21:34] <jnthn> Actually .^add_method is how methods are added to initial class definitions in the first place :)

[21:35] <supernovus> Then again, most people who know how to use ^add_method() probably have a good idea of what they are doing. So there's less of a chance of a monkey typing ;-)

[21:35] *** tokuhiro_ joined
[21:39] <azawawi> supernovus: is there any chance that you can fix that annoying bug so i can use http::easy again? :)

[21:39] <azawawi> supernovus: please :)

[21:41] <flussence> I might take a look at it, it's kinda blocking some stuff I was working on too

[21:41] <supernovus> azawawi: I will update HTTP::Easy to handle errors more gracefully rather than crashing.

[21:41] <bowtie> cool

[21:42] <tadzik> pjcj: will there be translation tasks this year?

[21:43] <supernovus> Technically, it should be returning status 400 for a null request.

[21:44] <supernovus> I will make it configurable.

[21:45] <azawawi> supernovus: https://github.com/supernovus/perl6-http-easy/commit/339ca66a877e6f0cb1c2719106a97ed6a8b9c477 works (does not block after first request is served)

[21:46] <azawawi> supernovus: i already handle that inside my PSGI handler :)

[21:48] *** kaare_ left
[21:48] <supernovus> azawawi: Okay, so the blocking bug is separate from the empty request bug. Gotchya. I'll fix both.

[21:48] <azawawi> supernovus: confirmed https://github.com/supernovus/perl6-http-easy/commit/1e0fda35ba1ac8bbfd76e7dc548b4b8850454e40  # is the bug

[21:50] <azawawi> supernovus: i'll push farabi6 + http::easy changes for you to test it if you want... 

[21:51] *** nyuszika7h joined
[21:53] <pmurias> hi

[21:54] <pjcj> tadzik: no, no translations this year, but your expertise in other areas would be much appreciated :)

[21:55] <azawawi> supernovus: pushed http::easy changes to https://github.com/azawawi/farabi6 . You can test it with { panda install Farabi6 }.

[21:55] <tadzik> pjcj: okay, I'm in :)

[21:56] <tadzik> if there were those, I'll probably flee in terror :P

[21:56] <pjcj> haha

[21:56] <tadzik> they were quite a surprise last year

[21:56] <pjcj> to all of us, I think

[21:57] <tadzik> right

[21:57] <azawawi> tadzik: what about panda installing files other than p6 files? :)

[21:57] <tadzik> oh-oh

[21:57] <tadzik> yes, I'll at least add a test today :)

[21:58] <pjcj> tadzik: please sign yourself up when you get a moment, and add any tasks you can think of - and thanks!

[21:58] <tadzik> pjcj: I shall, thanks :)

[21:59] <azawawi> supernovus: :debug is cool. but what about HTTP_EASY_DEBUG=1  instead?

[21:59] <supernovus> what version of HTTP::Easy were you getting the "unknown HTTP method" error in? That error went away in the Oct 12 commit.

[22:00] *** sorenso left
[22:00] <azawawi> latest produces that "unknown http error"

[22:01] <supernovus> Well that is interesting, as "grep -R unknown *" in the HTTP::Easy source tree reveals that there is no matching string anymore.

[22:02] <supernovus> yeah, that error went away here: https://github.com/supernovus/perl6-http-easy/commit/7e7f1d41dbeb53f6e5ff195c4448e03db2d81045

[22:02] <azawawi> supernovus: yeah that was really something... :)

[22:02] <azawawi> maybe i have an old http::easy...

[22:03] <azawawi> tadzik: btw.. panda install something sometimes does not force install...

[22:03] <tadzik> what do you mean, force install?

[22:03] <supernovus> Does the copy of HTTP::Easy bundled with Rakudo Star override the version installed by Panda by chance?

[22:04] <azawawi> tadzik: i had a strange case today...  i was testing with a local http-server-simple and i did a {panda install .} <- dot...

[22:04] <azawawi> tadzik: and then what ever i did panda install HTTP::Server::Simple... kept an older version

[22:05] <azawawi> tadzik: so i removed ~/.perl6 and panda install worked again

[22:05] <tadzik> hum

[22:07] *** skids left
[22:07] <supernovus> gah, when I try to "panda install Farabi6" it dies while trying to compile File::Spec's lib/File/Spec/Unix.pm with a "Couldn't find terminator $stop at line 23, near "]+[\\/|$]] "

[22:07] * azawawi clears ~/.panda and ~/.perl6 again...

[22:08] <supernovus> I have pushed the change to disable the body reading when there is no CONTENT_LENGTH

[22:10] <azawawi> supernovus: doing a fresh { panda install Farabi6 } 

[22:13] <azawawi> supernovus: still that unknown http error with firefox...

[22:13] <azawawi> supernovus: but otherwise the blocking is not there... restarting browser just in case...

[22:13] <tadzik> try RAKUDO_MODULE_DEBUG=1 or whatsitsname

[22:13] <tadzik> you'll see which HTTP::Easy gets loaded

[22:15] * azawawi perl6-debug bin/farabi6

[22:16] <azawawi> supernovus: http://paste.debian.net/207068/

[22:18] *** bapa joined
[22:19] <supernovus> it still isn't showing which copy of HTTP::Easy is being run. Any version since Oct. 12th has not had that error message. I don't know what version is included in Rakudo Star though, as I don't use Star (I know, blasphemy, I use a daily-compiled bare Rakudo checkout with my own selection of modules installed via Panda.)

[22:20] <azawawi> supernovus: stupid rakudo... http://paste.debian.net/207069/  # i think it is loaded the older one bundled with rakudo star 2012.10

[22:20] <azawawi> and since we have no version info... :)

[22:20] * azawawi starts dancing...

[22:21] <supernovus> I'm going to start marking my modules with a :ver tag again, not that I know if we can query that info yet...

[22:22] <flussence> perl6: module A:ver<1.2.3>;

[22:22] <p6eval> rakudo c5f8d7, niecza v22-19-gd874a8e:  ( no output )

[22:22] <flussence> oh cool, that works in everything now

[22:22] <azawawi> tadzik: so a quick question... if i panda install XYZ with dependency on ZYX which is already with rakudo star... which one gets loaded first? 

[22:23] <tadzik> azawawi: well, depends on order of @*INC

[22:23] <tadzik> panda will install all dependencies because it's not aware of those installed by star

[22:24] <azawawi> the curse of the core star module.. :)

[22:25] <tadzik> well, you can always install --nodeps

[22:25] <tadzik> that should work

[22:25] <sorear> cute.  it's like #perl6 is discovering dual life modules

[22:25] <azawawi> http://paste.debian.net/207071/   # rakudo gets installed first

[22:26] <azawawi> sorear: yup...

[22:26] <dalek> panda: ec22a1e | tadzik++ | t/panda/installer.t:

[22:26] <dalek> panda: Add a test for installing non-perl files

[22:26] <dalek> panda: review: https://github.com/tadzik/panda/commit/ec22a1ecf5

[22:27] <tadzik> azawawi: I'll try to get myself to fix that this week, but please poke me once in a while :)

[22:27] <supernovus> I'm not personally a fan of distributions that include modules other than "Test" and whatever is required to make "panda" work. For me, the perfect distribution would be Rakudo + Panda (and any requirements) and nothing else. Let all the other modules be installed via Panda.

[22:27] * azawawi pokes tadzik :)

[22:27] <tadzik> (:

[22:28] <tadzik> supernovus: I had an idea of panda-driven star

[22:28] <azawawi> i agree

[22:28] <tadzik> I think all the prerequisites are even implemented

[22:28] <azawawi> smaller core... install the rest...

[22:28] <tadzik> there's still the problem of shared ~/.panda/state

[22:28] <supernovus> azawawi: exactly!

[22:28] <tadzik> or is there

[22:29] <tadzik> well, after custom-lib the parrot installation lib has to be writable, I worry

[22:29] <tadzik> I didn't think of that before

[22:29] <tadzik> moritz: ^ am I right?

[22:29] <azawawi> "... ~/.perl6/lib will go away from the default include path (@*INC). Instead %*CUSTOM_LIB now holds paths to four library locations: perl    Rakudo installs its core modules here vendor  OS-level package managers should install their modules here site    for local module installations (e.g. with panda or ufo) home    like site, but always under the user’s home directory. fallback if site isn’t writable..."

[22:29] <tadzik> fallback, right

[22:29] <azawawi> from rakudo star 2012.10 announcement

[22:29] <supernovus> That's why I use my own Rakudo Moon distribution, which is just Rakudo from-git, then Panda-bootstrap-from-git.

[22:30] <tadzik> and per-user by default

[22:30] <tadzik> yes, yes

[22:30] <azawawi> so basically rakudo star is not a star after all? :)

[22:30] <tadzik> well, Moon's not a star :)

[22:31] <geekosaur> it's still a protoplanetary system, I think.  hopefully will take less than a few million years to ignite fully :)

[22:32] <supernovus> I originally included Blizkost in Moon too, but I'm not sure if its even an active project anymore.

[22:35] <azawawi> supernovus: any chance we could have an environment variable instead of :debug? it is more handy to test HTTP::Easy

[22:36] <supernovus> azawawi: I was actually adding support for that right now (in addition to :debug)

[22:36] *** fgomez joined
[22:37] <azawawi> supernovus: cool thanks

[22:38] <azawawi> supernovus++ # for http::* and having a cool name

[22:38] <azawawi> tadzik++ # for creating panda

[22:39] <tadzik> that was an accident :P

[22:41] *** Vlavv` left
[22:42] <supernovus> a beautiful accident

[22:44] <supernovus> azawawi: just for you (and anyone else using HTTP::Easy) -- https://github.com/supernovus/perl6-http-easy/commit/2e144dc0551e74889e94f8ee5821fe2d76d5f48b

[22:45] <azawawi> supernovus: thx

[22:46] *** sftp joined
[22:46] <azawawi> http://feather.perl6.nl:8080/  # Running using HTTP::Easy... bye bye HTTP::Server::Simple... bye bye Firefox crash :)

[22:48] <supernovus> Did you figure out a way to force it to use the newer version?

[22:49] <azawawi> supernovus: yup

[22:50] <azawawi> https://github.com/azawawi/farabi6/commit/38ddb8b7c5e6ea3ec4c45293e2e2d5aec03f7be9

[22:51] <azawawi> now i can support POST again...

[22:54] <sjohnson> diakopter: ping

[22:55] <supernovus> Okay, I must say, Farabi6 is one of the coolest looking web apps in the history of, well, ever.

[22:55] <huf> it doesnt seem to break with my browser settings.

[22:56] <huf> rare. :)

[22:56] *** snarkyboojum left
[22:56] <flussence> it breaks with my defaults, but I expected that :)

[22:57] <huf> no js?

[22:57] <flussence> yeah

[22:57] <huf> currently the only weird thing i have is rather large minimum fonts, and forcing my own font faces

[22:57] <flussence> wow, this feels faster than running rakudo locally...

[22:57] <huf> but since practically all of the web is pixel-counted boxes manually adjusted to pixel-sized fonts...

[22:58] <huf> so perl6.org breaks, for instance

[22:58] *** snarkyboojum joined
[22:58] <huf> not unexpectedly

[22:59] <azawawi> the main advantage so far in farabi6... is the under-the-line error annotations  using ~/std/viv -c (F6)

[22:59] <supernovus> I'm guessing it doesn't actually "run" without JS enabled.

[22:59] <azawawi> nop

[22:59] <azawawi> it is js enabled

[22:59] <huf> now to build a vim plugin that can use this via http to write perl6 ...

[22:59] <sorear> one web pixel (CSS unit of 1px) is defined to be 0.0213 degrees.  despite the name, they do not generally correspond to the picture elements of raster displays

[23:00] <azawawi> since it also needs that for Perlito 6/5 runtime

[23:00] <supernovus> Didn't think so. I develop a lot of web apps for $dayjob, and JS is pretty much a necessity.

[23:00] <huf> sorear: in implementations? or in the standard?

[23:00] *** spider-mario left
[23:00] *** chee left
[23:00] <sorear> huf: both

[23:00] <azawawi> huf: i can enable vim bindings btw... codemirror js editing component supports that... in a limited way

[23:01] <huf> huh. because i've yet to see any place on the web where a 10x10 image isnt the same size as a 10px x 10px div

[23:01] <flussence> (a few months ago I was wondering if I could hack tryrakudo into working using plain old HTTP... I guess it's technically doable, but it'd be a pain)

[23:01] <sorear> huf: that's because images are scaled too

[23:01] <huf> but at least non-integral pixel sizes make sense now.

[23:01] *** PacoAir left
[23:01] <huf> sorear: :(

[23:02] <sorear> implementations are encouraged to round the display pixel/logical pixel ratio to a small ratio of whole numbers

[23:02] *** alester left
[23:02] <sorear> 1:1 is the most common

[23:02] *** chee joined
[23:02] <sorear> the new "Retina" macs have a 2:1 ratio

[23:02] * azawawi feels sleepy... a lot... sleep &

[23:02] <azawawi> it is been fun... thanks everyone

[23:02] * azawawi good night &

[23:03] *** chee left
[23:03] *** chee joined
[23:03] <huf> sorear: so that's how they waste the dpi :)

[23:03] *** azawawi left
[23:03] <diakopter> sjohnson: yes?

[23:03] <sjohnson> diakopter: when you run Windows 8, does it look much different than Windows 7 on a desktop pc?

[23:04] <sjohnson> cause we're gonna stick it on my computer tomorrow, and i'm worried it's gonna look like the ads for the tablet OS i see on TV.

[23:04] <huf> sorear: regardless, forcing minimum fontsize to 16pt or so breaks stuff.

[23:04] <huf> that comes out to some larger virtual pixel size, dont quite know how large

[23:08] *** fgomez left
[23:08] <supernovus> Anyway, have a good * #perl6. I need to run.

[23:09] <flussence> pt is a physical unit that works out to 72 per inch IIRC, so it scales up to about 133% pixels

[23:09] <flussence> (on an OS that assumes 96dpi, which is everything on a desktop...)

[23:09] <dalek> ecosystem: 40f38a8 | (Timothy Totten)++ | META.list:

[23:09] <dalek> ecosystem: Added Method::Modifiers

[23:09] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/40f38a8326

[23:09] *** supernovus left
[23:16] *** rindolf left
[23:21] <sjohnson> diakopter: ... was it something I said? :)

[23:22] <diakopter> well, to answer your question I would have to google stuff to find an explanatory article, or type a bunch

[23:24] <sjohnson> a simple "ya, it looks like win7.  nothing to worry about" will do

[23:26] <diakopter> but what if that's not the case? :)

[23:27] <sjohnson> uh oh's

[23:28] <sjohnson> ah, if you still use it, how bad can it be?

[23:29] <diakopter> I don't find a need/reason to use the new interface, so I don't; it's as simple as that. I never reboot (I just sleep or hibernate the laptop), so the new interface never reappears, unless I accidentally bump the Start key on the keyboard.

[23:29] *** stopbit left
[23:29] <diakopter> (and then it's just another press of the Start key to go back to Desktop)

[23:30] <diakopter> (but yes, the new tablet/phone-y interface comes up by default upon booting.

[23:30] <diakopter> )

[23:30] <diakopter> (but there's a button for Desktop)

[23:31] <sjohnson> cool, thanks

[23:32] <dalek> nqp: b0a8080 | jnthn++ | src/HLL/Grammar.pm:

[23:32] <dalek> nqp: Update EXPR to cope with 'fake' infixes.

[23:32] <dalek> nqp: 

[23:32] <dalek> nqp: This is the mechanism used to parse operator adverbs.

[23:32] <dalek> nqp: review: https://github.com/perl6/nqp/commit/b0a80803e9

[23:32] *** cognominal joined
[23:33] <dalek> rakudo/nom: aaa0cad | jnthn++ | tools/build/NQP_REVISION:

[23:33] <dalek> rakudo/nom: Get an NQP build with fake infix support.

[23:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/aaa0cad2e3

[23:33] <dalek> rakudo/nom: 52d708d | jnthn++ | src/Perl6/ (2 files):

[23:33] <dalek> rakudo/nom: Handle parsing/code-gen for operator adverbs.

[23:33] <dalek> rakudo/nom: 

[23:33] <dalek> rakudo/nom: Maybe not perfect, but seems fairly close, at least.

[23:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/52d708d016

[23:36] <dalek> roast: aeb200d | jnthn++ | S03-operators/adverbial-modifiers.t:

[23:36] <dalek> roast: Fudge test for Rakudo.

[23:36] <dalek> roast: 

[23:36] <dalek> roast: Curiously, needed fudging in just the same places as Niecza. :-)

[23:36] <dalek> roast: review: https://github.com/perl6/roast/commit/aeb200dd35

[23:42] *** fgomez joined
[23:43] <dalek> rakudo/nom: 56203b7 | jnthn++ | t/spectest.data:

[23:43] <dalek> rakudo/nom: Run S03-operators/adverbial-modifiers.t.

[23:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/56203b70a5

[23:43] <dalek> rakudo/nom: 64c26fe | jnthn++ | docs/ROADMAP:

[23:43] <dalek> rakudo/nom: Update ChangeLog.

[23:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/64c26fe6fe

[23:43] <dalek> rakudo/nom: 5dd878b | jnthn++ | docs/ChangeLog:

[23:43] <dalek> rakudo/nom: Update ChangeLog.

[23:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5dd878bfdc

[23:46] *** skids joined
[23:56] <jnthn> 'night, #perl6

[23:56] <tadzik> gnight jnthn 

