[00:11] *** lichtkind left
[00:17] *** whiteknight joined
[00:17] *** tokuhiro_ joined
[00:17] *** seldon left
[00:25] *** gongyiliao joined
[00:29] *** cggoebel left
[00:33] *** s1n joined
[00:35] *** cggoebel joined
[00:36] *** spider-mario left
[00:43] *** scottdware joined
[00:44] *** kurahaupo left
[00:48] *** ingyfoo_ joined
[00:53] *** benabik left
[00:53] *** ingyfoo left
[00:53] *** krunen left
[00:53] *** sftp left
[00:53] *** colomon left
[00:53] *** larks left
[00:53] *** Timbus left
[00:53] *** tipdbmp left
[00:57] *** benabik joined
[00:57] *** krunen joined
[00:57] *** sftp joined
[00:57] *** colomon joined
[00:57] *** larks joined
[00:57] *** tipdbmp joined
[00:57] *** Timbus joined
[01:02] *** dayangkun joined
[01:10] *** PacoAir left
[01:11] *** whiteknight left
[01:14] *** scott__ joined
[01:18] *** tokuhiro_ left
[01:22] *** UncleFester6 left
[01:31] *** scottdware left
[01:39] *** cggoebel left
[01:46] *** cggoebel joined
[01:54] *** FROGGS_ joined
[01:55] *** replore joined
[01:56] *** replore left
[01:58] *** FROGGS left
[02:24] *** thou joined
[02:25] *** orafu left
[02:25] *** orafu joined
[03:31] *** mucker left
[04:21] *** xinming joined
[04:22] *** Khisanth left
[04:22] *** Khisanth joined
[04:35] *** immortal left
[04:37] *** erkan joined
[04:37] *** erkan left
[04:37] *** erkan joined
[04:38] *** birdwindupbird joined
[04:42] *** stepnem joined
[04:53] *** kurahaupo joined
[05:10] *** popl left
[05:11] *** smash left
[05:12] *** wk left
[05:20] *** dayangkun_ joined
[05:22] *** benabik left
[05:23] *** benabik joined
[05:23] *** dayangkun left
[05:34] *** skids left
[05:35] <pmichaud> good morning, #perl6

[05:36] <pmichaud> I made it home okay, and I should be able to do the Star release later today (08/31).

[05:44] <pmichaud> afk, sleep

[05:46] <sorear> good morning, #pmicaud

[05:46] <sorear> pmichaud

[05:53] *** cggoebel left
[05:55] <moritz> \o

[05:55] <phenny> moritz: 30 Aug 23:08Z <japhb> tell moritz Browsing over the KidsRuby GitHub info, it looks like we could build a Perl 6 clone using essentially the same technologies.  Looks more or less straightforward, but some of the libraries involved will have quite large bindings, so definitely a good test of Zavolaj and a fair amount of work.  But at least the path forward is well lit.  :-)

[05:57] <dalek> roast: 81d488a | moritz++ | packages/Test/Util.pm:

[05:57] <dalek> roast: remove outdated #OK comment, japhb++

[05:57] <dalek> roast: review: https://github.com/perl6/roast/commit/81d488ae0e

[05:58] *** wamba joined
[05:59] *** cggoebel joined
[06:02] *** replore joined
[06:04] *** FROGGS_ left
[06:13] *** birdwindupbird left
[06:13] *** birdwindupbird joined
[06:15] *** Woodi joined
[06:16] <Woodi> morning everyone :)

[06:17] <sorear> o/

[06:19] <Woodi> sorear: o/

[06:22] *** gongyiliao left
[06:24] *** alvis` joined
[06:25] *** alvis left
[06:25] <Woodi> I yesterday learned something about SSI programming http://www.akkadia.org/drepper/summit09-stream.pdf  and examples are for data in arrays/vectors... do v6 specs was thinked for such uses ?

[06:25] *** kaleem joined
[06:39] *** wk joined
[06:41] *** dayangkun_ left
[06:43] *** FROGGS joined
[07:07] <Woodi> ehmm, s/SSI/SSE/

[07:09] *** Circlepuller__ joined
[07:11] *** erkan left
[07:11] *** Circlepuller_ left
[07:11] *** leont joined
[07:11] *** cognominal left
[07:23] *** cggoebel left
[07:24] *** kresike joined
[07:24] <kresike> good morning all you happy perl6 people

[07:25] <tadzik> hello there kresike :)

[07:25] <kresike> tadzik, o/

[07:25] *** erkan joined
[07:25] *** erkan left
[07:25] *** erkan joined
[07:26] <tadzik> how are you doing?

[07:28] *** cggoebel joined
[07:29] *** GlitchMr joined
[07:29] *** hoelzro|away is now known as hoelzro

[07:32] *** daniel-s left
[07:33] *** daniel-s joined
[07:35] *** thou left
[07:37] *** kurahaupo left
[07:37] *** kurahaupo joined
[07:38] *** kurahaupo left
[07:42] <dalek> doc: 018e939 | (Felix Herrmann)++ | lib/variables.pod:

[07:42] <dalek> doc: [variables] fix example of suberseding $~Regex (samlh++)

[07:42] <dalek> doc: review: https://github.com/perl6/doc/commit/018e939dae

[07:43] <felher> suberseding ... 

[07:44] * felher sure needs caffeine

[07:53] *** replore left
[07:54] *** fglock joined
[07:55] *** fhelmberger joined
[07:58] <kresike> tadzik, working ... tired ... sleepy, You ?

[08:01] <tadzik> just working, maybe a bit underslept, but I find it hard to remember the last time I properlyslept :)

[08:03] <kresike> I know exactly the last time I properly slept :) 7 weeks and 1 day ago ...

[08:03] <tadzik> oh

[08:03] <tadzik> hold on, you got a child that long ago? :)

[08:04] *** SamuraiJack joined
[08:04] <kresike> Yep :)

[08:04] <tadzik> haha, congratulations :)

[08:04] <kresike> not much sleep since

[08:04] <kresike> thanks

[08:06] *** wooden left
[08:08] *** SamuraiJack_ joined
[08:10] *** SamuraiJack left
[08:11] <jnthn> morning o/

[08:12] <kresike> morning jnthn o/

[08:19] *** Psyche^ joined
[08:19] *** daxim joined
[08:21] *** wooden joined
[08:21] *** wooden left
[08:21] *** wooden joined
[08:22] <felher> morning jnthn o/

[08:22] *** Patterner left
[08:22] *** Psyche^ is now known as Patterner

[08:22] *** cggoebel left
[08:24] *** spider-mario joined
[08:29] *** cggoebel joined
[08:32] *** dakkar joined
[08:55] *** wamba left
[08:57] *** am0c joined
[09:16] *** scott___ joined
[09:17] *** scott__ left
[09:35] <moritz> kresike++ # congratulations

[09:35] <kresike> thanks moritz 

[09:44] *** gongyiliao joined
[09:44] <FROGGS> nr: say time.WHAT

[09:44] <p6eval> niecza v21-1-ga8aa70b: OUTPUT«Num()␤»

[09:44] <p6eval> ..rakudo 231137: OUTPUT«Int()␤»

[09:48] <tadzik> :)

[09:50] <tadzik> pugs: say time.WHAT

[09:50] <p6eval> pugs: OUTPUT«Rat()␤»

[09:50] <tadzik> yapsi: say 1

[09:51] <tadzik> :(

[09:56] *** gongyiliao left
[09:57] *** wooden left
[09:58] *** sergot joined
[09:58] <sergot> hi o/

[09:59] *** leont left
[10:00] <tadzik> hello sergot 

[10:06] *** scott___ left
[10:10] <tadzik> moritz: on which server(s) does p6eval run?

[10:10] <tadzik> ISTR it's built on one of them and then copied into another

[10:11] *** ObseLeTe joined
[10:12] <moritz> tadzik: it builds on feather1 and runs on feather3

[10:15] *** ObseLeTe left
[10:16] *** ObseLeTe joined
[10:25] <tadzik> so feather3 is the lightweight one, and feather1 is the one we're all ircing from, si?

[10:25] <tadzik> sergot and me want to run the Perl 6 powered modules.perl6.org, + possibly emmentaler in a similar way

[10:25] <moritz> correct

[10:26] <tadzik> time to contact Juerd I guess

[10:27] <tadzik> or just put all the things on feather1 for now

[10:27] <tadzik> sergot: do you have an account here?

[10:29] *** MayDaniel joined
[10:29] <moritz> tadzik: I can give you an account on feather3 if necessary

[10:29] <sergot> tadzik: no, I don't :)

[10:32] <tadzik> moritz: no rush, seems that we can pretty much put it on feather1 for now

[10:32] <tadzik> like the modules API sits

[10:32] <tadzik> sergot: time to get one, I think :)

[10:33] <moritz> tadzik: when you have something running, I can also set up a proxy that internally rewrites something.perl6.org to a feather1 address

[10:35] <tadzik> moritz: that'll prove useful, thanks

[10:41] *** cggoebel left
[10:42] <sergot> tadzik: how? :)

[10:42] <tadzik> sergot: contact Juerd. I think there're instructions on http://feather.perl6.nl

[10:43] *** fhelmberger left
[10:43] <tadzik> or maybe not

[10:50] *** cggoebel joined
[10:52] <sergot> tadzik: ok, thanks. :)

[10:56] *** wooden joined
[10:56] *** wooden left
[10:56] *** wooden joined
[10:57] <moritz> http://www.mail-archive.com/perl6-language@perl.org/msg20060.html

[10:57] <moritz> those are the instructions for getting an account

[11:05] * Juerd admits that most requests end up in my mailbox, unread

[11:06] <Juerd> It often takes a month or even longer :|

[11:06] <Juerd> If there's anyone who would like to create accounts on feather, please let me know.

[11:07] <moritz> Juerd: I would

[11:09] *** fhelmberger joined
[11:12] *** cggoebel left
[11:17] *** marmay joined
[11:17] *** cggoebel joined
[11:35] *** fhelmberger_ joined
[11:36] *** fhelmberger left
[11:40] <Juerd> moritz: Please go ahead if anyone asks. I'll need username, email address and real name per new account.

[11:46] *** crab2313 joined
[11:48] <moritz> Juerd: per email?

[11:48] <Juerd> Preferred

[11:48] <Juerd> Can I forward some requests to you?

[11:52] <moritz> sure

[11:52] *** JimmyZ joined
[11:54] *** cognominal joined
[11:54] <Juerd> moritz: At which email address?

[11:54] <moritz> Juerd: [email@hidden.address]
[11:55] <Juerd> Okay :)

[11:57] *** fernandocorrea joined
[12:02] *** skids joined
[12:12] *** Kharec joined
[12:12] <Kharec> hi guys

[12:15] *** cggoebel left
[12:16] <skids> o/

[12:21] *** cggoebel joined
[12:28] *** cognominal left
[12:29] *** cognominal joined
[12:31] *** marmay left
[12:33] *** sergot left
[12:33] *** sergot joined
[12:47] *** fernandocorrea left
[12:48] <moritz> \o

[12:48] <Kharec> o/

[12:48] *** fernandocorrea joined
[13:00] *** FROGGS left
[13:01] *** fernandocorrea left
[13:02] *** fhelmberger_ left
[13:07] *** benabik left
[13:08] *** benabik joined
[13:08] *** BlueT_ left
[13:09] *** BlueT_ joined
[13:13] <takadonet> morning all

[13:14] *** fernandocorrea joined
[13:16] *** crab2313 left
[13:16] <diakopter> hi o/

[13:17] <colomon> \o

[13:18] *** BlueT_ left
[13:18] *** BlueT_ joined
[13:18] *** PacoAir joined
[13:22] *** BlueT_ left
[13:22] *** BlueT_ joined
[13:23] *** wk left
[13:36] *** grondilu joined
[13:36] <grondilu> Guys, check out this video http://youtu.be/-Djj6pfR9KU and tell me how you'd write a short program to find out brown numbers.

[13:38] <GlitchMr> Just wondering, does Perl 6 have negative zero?

[13:40] <tadzik> that's easy to check

[13:40] <GlitchMr> perl6: print atan2 0.Num, -0e0

[13:40] <p6eval> rakudo 231137: OUTPUT«3.14159265358979»

[13:40] <p6eval> ..niecza v21-1-ga8aa70b: OUTPUT«3.1415926535897931»

[13:40] <GlitchMr> It seems it exists

[13:41] <GlitchMr> perl6: printf '<%g>', -0e0

[13:41] <p6eval> niecza v21-1-ga8aa70b: OUTPUT«<0>»

[13:41] <p6eval> ..rakudo 231137: OUTPUT«<-0>»

[13:41] <GlitchMr> Uhmmm... what should be result of this?

[13:41] <Kharec> The first result seems to be Pi ?

[13:41] *** gongyiliao joined
[13:42] <grondilu> p6: say 0**0

[13:42] <p6eval> rakudo 231137, niecza v21-1-ga8aa70b: OUTPUT«1␤»

[13:42] <GlitchMr> But negative zeros exist only for Num type, right?

[13:43] *** Kharec left
[13:44] *** FROGGS joined
[13:46] <japhb> Congratulations, kresike!  Is this your first?

[13:46] <kresike> yes

[13:46] <kresike> thanks

[13:46] <japhb> Welcome to the club.  :-)

[13:46] <kresike> :)

[13:46] <kresike> a pretty large club I might say :)

[13:47] *** stopbit joined
[13:48] <japhb> Makes me wonder what percentage of currently alive humanity is in that club ...

[13:50] *** FROGGS left
[13:51] *** Circlepuller joined
[13:51] *** FROGGS joined
[13:54] *** Circlepuller_ joined
[13:54] *** cggoebel left
[13:54] *** Circlepuller__ left
[13:57] *** Circlepuller left
[13:57] *** JimmyZ left
[13:59] *** cggoebel joined
[13:59] <cognominal> p6:  say 'aaa' ~~  m:g/a/

[13:59] <p6eval> rakudo 231137: OUTPUT«False␤»

[13:59] <p6eval> ..niecza v21-1-ga8aa70b: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Regex modifier g not yet implemented at /tmp/dA0amvxSzV line 1:␤------> [32msay 'aaa' ~~  m:g[33m⏏[31m/a/[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1435 (die @ 5) ␤  at /ho…

[14:00] <cognominal> how m:g is supposed to work in Perl 6?

[14:01] <colomon> kresike++

[14:01] <cognominal> there is not much material in S05 about that

[14:02] <kresike> :)

[14:05] <moritz> cognominal: with magic

[14:05] <moritz> cognominal: our current smart matching system doesn't allow it to work

[14:05] <cognominal> p6: my  @a =  'aaa'.match: /a/, :g ; say @a.perl

[14:05] <p6eval> niecza v21-1-ga8aa70b: OUTPUT«Unhandled exception: Excess arguments to Cool.match, unused named g␤  at /home/p6eval/niecza/lib/CORE.setting line 0 (Cool.match @ 1) ␤  at /tmp/9MoqYnfVG_ line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4138 (ANON @ 3) ␤  at /home/p6e…

[14:05] <p6eval> ..rakudo 231137: OUTPUT«Array.new(Match.new(orig => "aaa", from => 0, to => 1, ast => Any, list => ().list, hash => EnumMap.new()), Match.new(orig => "aaa", from => 1, to => 2, ast => Any, list => ().list, hash => EnumMap.new()), Match.new(orig => "aaa", from => 2, to => 3, ast => Any, li…

[14:06] <cognominal> that's better

[14:07] <cognominal> sounds like some wiring is missing to make m:g// work but that the bulk of the work has been done

[14:08] <FROGGS> go make that wiring :P

[14:09] <cognominal> :)

[14:09] <moritz> cognominal, FROGGS: http://perlgeek.de/blog-en/perl-6/three-functions-of-smartmatch.html explains why it can't be done in the current setup of smartmatchin

[14:09] <cognominal> moritz++

[14:10] * FROGGS reads

[14:12] *** fernandocorrea left
[14:17] *** JimmyZ joined
[14:18] *** benabik left
[14:19] * [Coke] hurls http://boingboing.net/2012/08/29/t-shirt-dunkin-donuts-vs-du.html for rjbs

[14:27] <moritz> https://github.com/perl6/specs/issues/23 # input welcome

[14:30] <FROGGS> ya, my first thought was the dot too

[14:31] <tadzik> input'd

[14:32] <FROGGS> thats pretty unsafe, isnt it?

[14:33] <tadzik> hm

[14:33] <moritz> my concerns with the dot is that it'll lead to people writing things like require "./$filename"  just to ensure there's a dot in it

[14:33] <moritz> and then it'll fail for absolute paths

[14:35] <jnthn> require 'ThisIsAPath'.IO; # ?

[14:35] <colomon> you can always add /./ in the middle of a path, no?

[14:35] <tadzik> jnthn: +1

[14:36] <colomon> isn't there a quoting operator for paths?

[14:36] <moritz> jnthn: .path, not .IO. Otherwise +1

[14:36] * colomon thinks jnthn is definitely on the right trail...

[14:37] <tadzik> bah, I accidentally my comment

[14:38] <moritz> should I delete mine too?

[14:38] <tadzik> I put it below

[14:40] *** bluescreen10 joined
[14:42] *** nnunley joined
[14:42] *** erkan left
[14:43] *** erkan joined
[14:43] *** erkan left
[14:43] *** erkan joined
[14:46] *** grondilu left
[14:48] *** ObseLeTe left
[14:49] *** kaur left
[14:56] *** cggoebel left
[15:00] <FROGGS> damn

[15:01] <FROGGS> I reject my pull request since now does exactly what I wanted time to do

[15:01] <FROGGS> nr: say now

[15:01] <p6eval> niecza v21-1-ga8aa70b: OUTPUT«Instant.new(...)␤»

[15:01] <p6eval> ..rakudo 231137: OUTPUT«Instant:1346425317.946087␤»

[15:02] *** cggoebel joined
[15:02] <tadzik> but shouldn't time do the floating point per spec?

[15:03] *** fernandocorrea joined
[15:03] <FROGGS> see this: https://github.com/perl6/specs/blob/master/S32-setting-library/Temporal.pod

[15:03] <FROGGS> I read older specs before, these doesnt tell you what it returns

[15:03] <FROGGS> the one I posted does

[15:04] <FROGGS> so niecza does it wrong

[15:05] <[Coke]> nr: say now.WHAT

[15:05] <p6eval> rakudo 231137, niecza v21-1-ga8aa70b: OUTPUT«Instant()␤»

[15:05] <[Coke]> they both return an instant. what's the problem?

[15:06] <FROGGS> niecza gives you time as a Num, but it should be Int

[15:06] <FROGGS> nr: say time.WHAT

[15:06] <p6eval> niecza v21-1-ga8aa70b: OUTPUT«Num()␤»

[15:06] <p6eval> ..rakudo 231137: OUTPUT«Int()␤»

[15:06] *** wamba joined
[15:07] <FROGGS> n: print now

[15:07] <p6eval> niecza v21-1-ga8aa70b: OUTPUT«Instant()<instance>»

[15:07] <FROGGS> how do I get it to print the seconds?

[15:08] *** kaleem left
[15:11] <[Coke]> n: print +now

[15:11] <p6eval> niecza v21-1-ga8aa70b: OUTPUT«Unhandled exception: Cannot use value like Instant as a number␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting line 293 (Any.Numeric @ 6) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /tmp/IDKozpItew line 1 (mainline @ 3)…

[15:12] *** fernandocorrea left
[15:12] <[Coke]> n: print now.^methods

[15:12] <p6eval> niecza v21-1-ga8aa70b: OUTPUT«Unhandled exception: Unable to resolve method methods in type ClassHOW␤  at /tmp/0N57h0OCnx line 1 (mainline @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4138 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4139 (module-CORE @ 571) ␤  at …

[15:12] <[Coke]> n: print now.HOW.methods

[15:12] <p6eval> niecza v21-1-ga8aa70b: OUTPUT«Unhandled exception: Unable to resolve method methods in type ClassHOW␤  at /tmp/NWSUGOwRz8 line 1 (mainline @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4138 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4139 (module-CORE @ 571) ␤  at …

[15:14] <JimmyZ> r: say now.^methods

[15:14] <p6eval> rakudo 231137: OUTPUT«new from-posix to-posix Bridge Num Int Rat abs sign conj sqrt rand sin asin cos acos tan atan atan2 sec asec cosec acosec cotan acotan sinh asinh cosh acosh tanh atanh sech asech cosech acosech cotanh acotanh floor ceiling round unpolar cis Complex log exp truncate…

[15:15] <FROGGS> n: say now.Num

[15:15] <p6eval> niecza v21-1-ga8aa70b: OUTPUT«Unhandled exception: Unable to resolve method Num in type Instant␤  at /tmp/IcT1nSebtS line 1 (mainline @ 4) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4138 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4139 (module-CORE @ 571) ␤  at /home…

[15:16] <[Coke]> n: say now.to-posix

[15:16] <p6eval> niecza v21-1-ga8aa70b: OUTPUT«1346426171.3581679 False␤»

[15:16] <[Coke]> niecza source: boot/lib/CORE.setting -> "class Instant"

[15:22] *** kaare_ joined
[15:26] *** thou joined
[15:27] *** JimmyZ left
[15:31] *** hoelzro is now known as hoelzro|away

[15:32] <kresike> bye folks

[15:32] *** kresike left
[15:33] <pmichaud> good morning, #perl6

[15:33] <FROGGS> hi

[15:33] *** JimmyZ joined
[15:33] <[Coke]> pmichaud: hio

[15:39] *** stopbit left
[15:39] *** stopbit joined
[15:42] *** cggoebel left
[15:47] *** cggoebel joined
[15:52] *** gongyiliao left
[15:56] <moritz> \o pmichaud 

[15:58] <japhb> moritz, does doc.perl6.org have any facility for CGI?

[15:58] <jnthn> hi, pmichaud o/

[15:58] <jnthn> hope your trip back went fine

[16:02] <pmichaud> it did... was just long

[16:04] *** JimmyZ left
[16:05] <jnthn> *nod*

[16:09] <[Coke]> pmichaud: ah, that's why your schedule has seemed a little off this week!

[16:10] *** birdwindupbird left
[16:10] <pmichaud> [Coke]: yes; I just got back from .eu last night

[16:13] <[Coke]> \o/

[16:14] <pmichaud> anyway, I'm afk, lunch

[16:17] *** mucker joined
[16:18] *** fernandocorrea joined
[16:20] <japhb> tadzik, ping

[16:23] *** leont joined
[16:27] <japhb> Open question: How much stylistic similarity do we want between perl6.org and its subdomains?  There's a scale there from "styled independently" through "share a common base style, but tweaked for each subdomain" to "use a single, unified style sheet".  Also, what about related domains, like the sites for each implementation?  Note BTW that I am *NOT* assuming perl6.org's current design will remain unchanged (in fact, it will have to chang

[16:27] <japhb> e somewhat to accomodate changes like snippets on the front page).

[16:28] <japhb> For example, one might say that the main perl6.org remains playful and inviting, while doc.perl6.org goes more sober and efficient, but they share similar fonts, borders, etc.

[16:28] <tadzik> japhb: pong\

[16:29] <japhb> tadzik, Is it expected that C< > doesn't work in Pod table cells?

[16:29] <japhb> I'm wondering if it's being parsed wrong, or being rendered wrong.

[16:30] <tadzik> japhb: no, it's not parsed right

[16:30] <tadzik> known bug

[16:30] <japhb> Ah, OK, thank you.

[16:30] * japhb wonders what to do for a workaround ... hmmm.

[16:30] <japhb> Is that going to be true of any inline markup in a table?

[16:32] <tadzik> that should be fixed

[16:32] <tadzik> I just dunno how do it sanely

[16:33] *** wk_ joined
[16:39] *** mucker left
[16:40] <jnthn> r: class A { has $.a; has @.a; }

[16:40] <p6eval> rakudo 231137: OUTPUT«===SORRY!===␤Two or more attributes declared that both want an accessor method 'a'␤»

[16:40] *** jeffreykegler joined
[16:41] *** mucker joined
[16:42] *** mucker left
[16:42] <[Coke]> HIGHLANDER ATTRIBUTES!

[16:43] <dalek> doc: f1eb292 | (Geoffrey Broadwell)++ | htmlify.pl:

[16:43] <dalek> doc: Minor regularization of status messages from htmlify.pl

[16:43] <dalek> doc: review: https://github.com/perl6/doc/commit/f1eb292313

[16:43] *** mucker joined
[16:44] <sorear> japhb: I want a maximum of stylistic consistency, it will help to make perl6.org feel less like a link farm to the end user

[16:45] *** daxim left
[16:48] <japhb> sorear, you mean because all of the subdomains and related domains will look like parts of the whole, thus making it feel like one big website instead of several smaller ones?

[16:48] <sorear> yes

[16:49] *** mucker left
[16:49] <japhb> sorear, OK, thank you.

[16:49] *** mucker joined
[16:50] *** mucker left
[16:51] *** mucker joined
[16:51] *** wk_ left
[16:52] <japhb> tadzik, Is there a workaround for Pod verbatim blocks getting split at the first line without non-whitespace?  I thought at first it might be splitting on the first empty line, or the first line with less whitespace than the current indent, but adding whitespace to empty lines did not help.  :-( 

[16:53] <tadzik> oh hm

[16:53] <tadzik> you can probably go for =begin code, =end code

[16:54] <japhb> OK, will try

[16:57] <tadzik> I have a feeling that PARROT_ARGS in Makefile not worky

[16:58] *** replore_ joined
[16:59] *** dakkar left
[16:59] *** lichtkind joined
[17:01] <moritz> japhb: common theme, but tweaked per sub domain

[17:01] <japhb> tadzik, Great, =begin code works

[17:01] <tadzik> jnthn: I CAN HAS Unrecognized nqp:: opcode 'nqp::ishash' at line 41, near " {\n       "

[17:01] <tadzik> when compiling rakudo on toqast

[17:01] <tadzik> japhb: good

[17:01] <japhb> moritz, what about related domains, like Rakudo's?

[17:02] <jnthn> tadzik: Are you compiling the nqpqast branch of Rakudo?

[17:02] <tadzik> jnthn: aye

[17:02] <jnthn> And latest nqp/toqast?

[17:02] <moritz> japhb: re CGI, we have a full apache installation, and can make anything happen that doesn't eat too much memory

[17:02] *** jlaire left
[17:03] *** erkan left
[17:03] <tadzik> jnthn: yep, freshly

[17:03] <moritz> japhb: related domains... no idea about rakudo.org, probably depends on what kind of style we can offer for it. In the end pmichaud++ decides about it

[17:03] <jnthn> tadzik: Oddness...it builds fine here with both of those.

[17:03] <japhb> tadzik, C<< > >> Seems to not DTRT.  Known bug, or should I use something else?

[17:03] <tadzik> japhb: yep, NYI

[17:03] <tadzik> quite high on my list tho

[17:03] <moritz> C<< >> NYI is known

[17:04] <jnthn> tadzik: Can you check what revisions you are on in each branch, and then give me the dtailed backtrace?

[17:04] * moritz too slow

[17:04] <japhb> tadzik, moritz, OK, thank you.

[17:04] <jnthn> tadzik: I recognize the error but it looks like the one you'd get from building rakudo/nqpqast with nqp/master

[17:04] <japhb> tadzik, when you do that, could you also make French quotes work too?

[17:05] *** erkan joined
[17:05] *** erkan left
[17:05] *** erkan joined
[17:05] <tadzik> jnthn: probably

[17:05] <tadzik> jnthn: ...you didn't merge nqp/toqast with nqp/master?

[17:06] <tadzik> that'll explain it :)

[17:06] <moritz> jnthn: iirc I got that error in a test file in nqp on nqp/toqat

[17:06] <tadzik> also the fact that tests passes

[17:06] <tadzik> and that it didn't segfault :)

[17:07] <jnthn> tadzik: no, not yet ;-)

[17:07] <jnthn> moritz: Right, that also :)

[17:07] <jnthn> I de-pir::-ified some of the tests

[17:07] <jnthn> but nqp::ishash was not supported by pre-QAST NQP.

[17:08] *** BlueT_ left
[17:08] <dalek> nqp/toqast: a94c294 | jnthn++ | src/NQP/Actions.pm:

[17:08] <dalek> nqp/toqast: Fix an $/ handling issue, which fixes two more of the Rakudo spectest file regressions.

[17:08] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/a94c2944cb

[17:09] <dalek> rakudo/nqpqast: 44f06cf | jnthn++ | src/Perl6/Grammar.pm:

[17:09] <dalek> rakudo/nqpqast: Update a workaround for a bug (that needs a proper fix).

[17:09] <dalek> rakudo/nqpqast: review: https://github.com/rakudo/rakudo/commit/44f06cf0cf

[17:09] <dalek> rakudo/nqpqast: 6c8ef80 | jnthn++ | src/Perl6/Metamodel/AttributeContainer.pm:

[17:09] <dalek> rakudo/nqpqast: Fix subtly buggy code that used to work for entirely the wrong reason. Deals with another regression.

[17:09] <dalek> rakudo/nqpqast: review: https://github.com/rakudo/rakudo/commit/6c8ef80eb3

[17:09] *** BlueT_ joined
[17:09] *** jlaire joined
[17:10] <japhb> moritz, Did I miss your response on my question of CGI on doc.perl6.org?  Also, what about www.perl6.org?

[17:11] <moritz> 19:02 < moritz> japhb: re CGI, we have a full apache installation, and can make  anything happen that doesn't eat too much memory

[17:11] <japhb> moritz, I had a feeling I'd missed it!

[17:11] <moritz> and is reasonable to maintain etc

[17:11] <japhb> Thank you.  OK, is there a cgi-bin already?

[17:11] <moritz> no

[17:11] <moritz> what are you planning?

[17:12] *** Liz_ joined
[17:14] <japhb> moritz, At the moment I was mostly determining my constraints ... but the first problems I was thinking about were: server-side doc search (for non-JS users), smart(er) guesses about which doc to show for non-exact matches, server-side backing for code snippet display, etc.

[17:14] <moritz> japhb: great, those all sound like worthwhile goals

[17:15] *** Liz_ is now known as lizmat

[17:18] <felher> Can a Pod formatting code block contain other Pod blocks (besides other formatting codes?)

[17:18] <tadzik> er

[17:18] <tadzik> Spec used to say that

[17:18] <moritz> I think it's insane

[17:18] <tadzik> ISTR that we removed that because insanity :)

[17:19] <moritz> instead we should have a way to apply formatter-like modifiers to blocks

[17:19] <moritz> =begin :I ... =end :I

[17:19] <moritz> to make an all-italic block

[17:19] <tadzik> yeah, that was the conclusion I think :)

[17:20] <felher> okay. So formatting codes used to be able to contain anything but it was changed to be more sane? :)

[17:20] <moritz> felher: the more sane option was not to implement that part (during gsoc at least)

[17:20] <felher> moritz: ah, i see. Okay :)

[17:27] *** jeffreykegler left
[17:28] <arnsholt> japhb: Re: scrollback, a thorough stress-test of Zavolaj would be awesome

[17:29] <arnsholt> Let, the bugreports begin! =)

[17:31] <[Coke]> I am creeped out that someone is asking about a cgi-bin in 2012. :P

[17:31] *** cognominal left
[17:31] <japhb> arnsholt, heh.  Well, I don't know if *I* will be writing that code (dang $day_job ...), but I agree it's quite worthy.  :-)

[17:31] <frettled> [Coke]: why? :)

[17:32] * frettled is a bit surprised at the directory separation thingy, but whatever.

[17:32] <japhb> [Coke], what would you prefer, that I convince moritz to host a Mojolicious instance?  :-)

[17:32] <japhb> frettled, ?

[17:32] <[Coke]> japhb: yes, I'd prefer that.

[17:33] <[Coke]> the perl6 one, preferentially. ;)

[17:33] <japhb> [Coke], sadly he did say he wanted low memory usage ... :/

[17:34] <frettled> japhb: separating into a directory named cgi-bin is a bit unnecessary in this century, but it is rather quaint

[17:35] <moritz> japhb: I think mojoclicious might be fine

[17:35] <japhb> Well, my apologies to moritz++ that I misread.  I had definitely gotten the feeling that old school was desired.

[17:35] <moritz> japhb: I just don't want to run 5 rakudo instances in parallel, or something like that

[17:36] <moritz> old scholld is not necessary. Maintainable and not too wasteful on resources is needed

[17:36] <moritz> *school

[17:36] <japhb> Well OK then.  That makes things surprisingly easier.  :-)

[17:37] * japhb takes a step back to consider a much wider range of possible architectures.

[17:38] <arnsholt> japhb: I'd be happy to help out with some of the Zavolaj hacking. But yeah, dang $work getting in the way =)

[17:38] <[Coke]> I'd be happy with some perl5 mojo in the mean time, and would be happy to contribute code, and help convert to 6mojo when possible.

[17:38] *** BlueT_ left
[17:38] <__sri> what's the state of non-blocking I/O? :)

[17:38] * japhb is >.< that 6mojo is not easy at this point, but waddyagonnado besides keep hacking ...?

[17:39] <leont> __sri: see MuEvent

[17:39] <__sri> MuEvent is unusable

[17:39] <leont> It's very limited by Parrot

[17:40] <__sri> polling every socket individually just doesn't work

[17:40] * leont agrees, it's just that some interfacing with a c library is going to be required to do this well

[17:40] <leont> libuv may be a good target

[17:40] * __sri nods

[17:41] * japhb has been reading the libuv docs over the last few days with that in mind

[17:41] <__sri> if rakudo had really cheap threads we could also get away with blocking I/O

[17:42] <japhb> Anyone know the state of the threads merge in Parrot?  Last I heard it was "soon"

[17:42] <leont> Yeah, but I'm having the impression parrot threads are rather similar in costs to perl 5 threads

[17:42] <__sri> eeep

[17:43] <leont> They're still interpreter threads

[17:44] <leont> japhb: ask nine on #parrot, he's doing that work

[17:46] *** BlueT_ joined
[17:47] <tadzik> jnthn: not my fault \o/

[17:47] <tadzik> wanna see a patch that fixes those tests?

[17:48] <tadzik> https://gist.github.com/3556432 :)

[17:53] <jnthn> tadzik: Oh, I fixed it in the NQP patch a few moments ago

[17:53] <jnthn> japhb: I got a build of libuv done on my laptop at the hackathon and started reading through the docs also.

[17:53] *** BlueT_ left
[17:53] <japhb> jnthn, excellent

[17:53] <jnthn> And sketched a little code. Didn't get anything interesting running just yet.

[17:54] *** cognominal joined
[17:55] <japhb> whiteknight in #parrot says that the initial threads implementation should merge on Tuesday. They expect to then work on tuning it, but that (given that it is a hybrid tasks/threads implementation), they should be able to get medium-to-light virtual threads spread across several OS threads.

[17:59] <colomon> jnthn: Any notion how hard it would be to implement "lift"?  It would be very handy for Math::Polynomial...  

[18:01] <jnthn> colomon: Maybe not too bad. I guess we have CALLER:: support

[18:01] <colomon> jnthn: who do I have to bribe?  ;)

[18:01] <pmichaud> back from lunch

[18:01] <jnthn> Bribe Pm! ;)

[18:02] <pmichaud> anyone have any comments on the rc3 star candidate before I start publishing it?

[18:02] <jnthn> pmichaud: I could try a build of it on this box if you wish.

[18:02] <[Coke]> it should be blue.

[18:02] <pmichaud> jnthn: that would be helpful.  I'm about to build the .msi here on my box;.

[18:02] <pmichaud> *box.

[18:03] <jnthn> pmichaud: url?

[18:03] <colomon> [Coke]: but should it be nasally-fitted?

[18:03] <pmichaud> http://pmichaud.com/sandbox/rakudo-star-2012.08-rc3.tar.gz

[18:03] *** GlitchMr left
[18:04] <[Coke]> colomon++∞

[18:05] <jnthn> pmichaud: Kicked off a build

[18:06] *** BlueT_ joined
[18:12] <jnthn> pmichaud: With --gen-parrot it build an NQP and Parrot fine and also told me to next run "nmake"

[18:12] <jnthn> pmichaud: However, during Configure it did also emit:

[18:12] <jnthn> 'make' is not recognized as an internal or external command,

[18:12] <jnthn> operable program or batch file.

[18:12] <pmichaud> oh.

[18:12] <jnthn> It's harmless almost certainly.

[18:12] <jnthn> Just a tiny bit distracging.

[18:12] * pmichaud checks.

[18:12] <jnthn> *distracting

[18:13] *** lichtkind left
[18:15] <pmichaud> I'll go ahead and fix that now.

[18:15] <jnthn> heh, the QAST NQP seems to have fixed a bug that in turn hid a bug in the Rakudo grammar :)

[18:15] *** BlueT_ left
[18:15] *** thou left
[18:16] <jnthn> And the fix was the copy-pasting from STD :D

[18:16] *** BlueT_ joined
[18:16] *** thou joined
[18:18] <dalek> rakudo/nqpqast: f962cf8 | jnthn++ | src/Perl6/Grammar.pm:

[18:18] <dalek> rakudo/nqpqast: Fix $< parsing (just replace what we had before with what STD has). Fixes the S05 failures.

[18:18] <dalek> rakudo/nqpqast: review: https://github.com/rakudo/rakudo/commit/f962cf8fd9

[18:18] <jnthn> pmichaud: Ah, a real fail:

[18:18] <jnthn> Cannot chmod 755 modules/rakudo-debugger/perl6-debug.exe:No such file or directo

[18:18] <jnthn> ry at C:/Perl64/lib/ExtUtils/Command.pm line 274.

[18:18] <jnthn> NMAKE : fatal error U1077: 'C:\Perl64\bin\perl.exe' : return code '0x2'

[18:19] <jnthn> Stop.

[18:19] <pmichaud> okay.

[18:19] <pmichaud> did it not build?

[18:19] <jnthn> It build

[18:20] <jnthn> er, hm

[18:20] <jnthn> It ran pbc_to_exe

[18:21] <pmichaud> I'm building on my box too so maybe I'll find the error here as well.

[18:22] <mucker> ok, i have rakudo compiled and running. now, how do i run the test suite(roast) using rakudo ?

[18:22] <jnthn> mucker: make spectest

[18:22] <pmichaud> or make "rakudo-spectest" if using a star distribution.

[18:22] <mucker> is the process same for niecenza ?

[18:23] <colomon> mucker: yes, make spectest

[18:23] <mucker> thnkx

[18:23] <jnthn> pmichaud: I can't find the .pir and .pbc, let alone the .exe

[18:23] <pmichaud> jnthn: for rakudo-debugger?

[18:24] <jnthn> yeah

[18:24] <pmichaud> could be that my make rules aren't windows-aware

[18:24] <pmichaud> looking.

[18:24] <jnthn> pmichaud: Trying "nmake" again does nothing

[18:24] <pmichaud> that's commonly true

[18:25] <jnthn> And nmake clean tries to use "make"

[18:25] <pmichaud> repeating "nmake" often doesn't do anything, because we don't have every file tracked in the makefile (and doing so would be a huge pain)

[18:25] <jnthn> (maybe related to the issue earlier)

[18:25] <pmichaud> I fixed the nmake clean bug already.  :-)

[18:25] <jnthn> ah, makes sense.

[18:25] <jnthn> ok, nice

[18:26] *** mucker left
[18:26] <dalek> star: c4268e0 | pmichaud++ | tools/ (2 files):

[18:26] <dalek> star: Replace some 'make' with '$(MAKE)'  (jnthn++)

[18:26] <dalek> star: review: https://github.com/rakudo/star/commit/c4268e0178

[18:27] <pmichaud> jnthn: you could try "nmake modules-install" and see if it attempts the rakudo-debugger build again.

[18:27] <pmichaud> (I ended up putting the debugger as a module, for a variety of reasons.)

[18:27] *** lichtkind joined
[18:29] <jnthn> it's running

[18:31] <jnthn> pmichaud: hmm, I don't see it being built again.

[18:31] <pmichaud> okay, I'll try here and see what I can come up with.

[18:32] <jnthn> pmichaud: Oh,hm

[18:32] <jnthn> pmichaud: And it does try to build modules/rakudo-debugger/lib/Debugger/UI/CommandLine.pm

[18:32] <jnthn> Before ANSI::TermColor is built

[18:32] <pmichaud> yes, it'll build the libs, but the rakudo debugger binary is a separate step

[18:33] <jnthn> but it builds the lib too early

[18:33] <jnthn> Oh

[18:33] <jnthn> Watching how fast it claims to have built it...I can't believe it really did so

[18:33] <jnthn> My suspicion is that it fails silently

[18:34] <pmichaud> make 'nmake perl6-debug-install'

[18:34] <pmichaud> s/make/maybe/

[18:34] <pmichaud> now that my brain is waking up, I remember that modules-install only installs the libs, but doesn't compile the executable

[18:34] <jnthn> Also failed silently.

[18:34] <jnthn> OK

[18:34] <tadzik> jnthn: huh, hm

[18:35] <jnthn> It still tries to build the lib too early though.

[18:35] <pmichaud> what is "too early" in this case?

[18:36] <jnthn> Before Term::ANSIColor, which it depends on.

[18:36] <pmichaud> Term::ANSIColor is supposed to be built long before rakudo-debugger

[18:36] <pmichaud> it's #6 in the modules/MODULES.txt file

[18:36] <pmichaud> whereas rakudo-debugger is last

[18:37] <jnthn> It's odd

[18:37] <jnthn> It build the rakudo-debugger executable last

[18:37] <pmichaud> that's normal.

[18:37] <jnthn> As in, the NQP bit

[18:37] <pmichaud> that's normal.

[18:37] <jnthn> But it builds the thing in lib/ first

[18:37] <jnthn> LIke, as part of module-install.

[18:37] <pmichaud> that's correct.

[18:38] <jnthn> Yes, by first I mean, before any other module.

[18:38] <pmichaud> okay, that's odd.

[18:38] <pmichaud> you mean, it does rakudo-debugger/lib before any other module?

[18:38] <jnthn> Correct

[18:38] <jnthn> After the docs.

[18:38] <pmichaud> using what make target?

[18:38] <jnthn> But before NativeCall

[18:38] <jnthn> It did it with nmake install when I tried that originally

[18:39] <jnthn> And it does it when I nmake modules-install

[18:39] *** BlueT_ left
[18:39] *** cggoebel left
[18:39] <pmichaud> is nmake perhaps trying to parallelize the build?

[18:39] <jnthn> Shouldn't be.

[18:40] <jnthn> Seems not.

[18:40] <pmichaud> it all seems to be working fine for me here (using gmake)

[18:40] <jnthn> What does the output look like for you when you make modules-install?

[18:41] <pmichaud> doing that now

[18:41] <jnthn> hm, I also get:

[18:41] <jnthn> Can't stat modules/#/lib: No such file or directory at tools/build/module-install.pl line 21

[18:41] <jnthn> AT some point during modules-install :)

[18:43] <pmichaud> okay, so make modules-install for me

[18:43] <pmichaud> 1.  cd rakudo && make install   (installs perl6.exe and modules from rakudo compiler)

[18:44] <pmichaud> 2. == Installing 'ufo'

[18:44] <pmichaud> 3.  Errors about installing '#'

[18:44] <pmichaud> == Instaling 'zavolaj'

[18:44] <jnthn> https://gist.github.com/3557195

[18:44] <jnthn> That's what I get

[18:44] <jnthn> Notice something really odd happens

[18:45] <pmichaud> note that Term::ANSIColor is installed on line 62 of that output.

[18:46] <jnthn> huh

[18:46] <jnthn> then later on it tries to do everything again

[18:46] <pmichaud> ...?

[18:46] <jnthn> that top bit of output scross by really fast

[18:46] <pmichaud> tries to do everything again?

[18:46] <pmichaud> what line?

[18:46] <jnthn> See from line 282 onwards

[18:47] <pmichaud> that's not installing everything again -- that's precompiling the installed modules.

[18:47] *** cggoebel joined
[18:47] <jnthn> oh!

[18:47] *** BlueT_ joined
[18:47] <jnthn> jnthn--

[18:48] <jnthn> OK, then it seems it is doing the right thing with modules

[18:48] <pmichaud> there could be a message there saying "precompiling installed modules" though -- that would help.  :)

[18:49] <jnthn> Apparently. ;-)

[18:49] <pmichaud> can you do the equivalent of   make modules/rakudo-debugger/perl6-debug.exe ?

[18:50] <pmichaud> (I've since added a 'perl6-debug' target, but it's not in the rc3 tarball.)

[18:50] <pmichaud> or you can just do 'make perl6-debug-install'

[18:52] <skids> r: sub a ($b --> Int) { fail("oops") unless $b == 2; $b; }; a(2).say; a(1);

[18:52] <p6eval> rakudo 231137: OUTPUT«2␤Type check failed for return value; expected 'Int' but got 'Failure'␤  in sub a at /tmp/PknV_q94S4:1␤  in block  at /tmp/PknV_q94S4:1␤␤»

[18:52] <skids> That seems to be new with latest tarball.

[18:52] <skids> (since 07 star)

[18:52] <moritz> skids: yes, it's new that type constraints with --> are honored

[18:52] <pmichaud> but fail should bypass a type constraint

[18:52] <moritz> previously only 'returns' was honored

[18:54] <jnthn> pmichaud: trying it

[18:54] <skids> Also I have a few files where I've got a bunch of messy and probably wrong export directives, which ran under 07 star.  Now they give: Method 'scope' not found for invocant of class 'QAST::Op'

[18:54] <pmichaud> so the   --> Int   listed above is a rakudobug

[18:55] <moritz> pmichaud: it is, and known

[18:55] <moritz> (RT'ed)

[18:55] *** BlueT_ left
[18:55] <pmichaud> moritz++

[18:55] <skids> Crunched on time to golf it tho.

[18:55] <pmichaud> the -->  Int bug is not a good regression to have, though :-(

[18:56] *** BlueT_ joined
[18:56] <skids> would not be as bad if --> Int|Failure worked.

[18:56] <moritz> pmichaud: note that before --> AnyType was just ignored

[18:57] <pmichaud> moritz: I note that, yes.

[18:57] <pmichaud> but having correct code that previously "worked"  (didn't crash)   now crash is a regression.

[18:58] *** replore_ left
[19:00] <jnthn> Yeah, one of those "bug hiding a bug" things.

[19:01] <pmichaud> well, it's more like an incomplete implementation of --> Type

[19:02] <moritz> more like an incomplete implementation of fail(), if you ask me

[19:02] <jnthn> It's probably an incompleteness in the return type check handling.

[19:02] <jnthn> --> used to be totally ignored

[19:02] <jnthn> Now it's applied, it has the exact same bug that "returns" has.

[19:03] <skids> r: our $foo::bar is export; # I don't know if this is nonsensical but it used to not bail out.

[19:03] <p6eval> rakudo 231137: OUTPUT«===SORRY!===␤Method 'scope' not found for invocant of class 'QAST::Op'␤»

[19:03] <jnthn> I'm...not sure that's valid, in the same way my $foo::bar is dubious.

[19:03] <jnthn> But yeah, it should not fail that way

[19:03] <moritz> r: our $foo::bar

[19:03] <p6eval> rakudo 231137: OUTPUT«===SORRY!===␤Method 'scope' not found for invocant of class 'QAST::Op'␤»

[19:03] <jnthn> I dunno what it used to do... :)

[19:04] <sorear> n: our $foo::bar is export # curious

[19:04] <p6eval> niecza v21-1-ga8aa70b: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Trait export not available on variables at /tmp/abdyJzy2Kt line 1 (EOF):␤------> [32mour $foo::bar is export # curious[33m⏏[31m<EOL>[0m␤␤:: syntax is only valid when referencing variables, not when defining them. at /tmp/…

[19:04] <sorear> heh, NYI masks any possible bug

[19:04] <jnthn> No, it emits the :: syntax note afterwards.

[19:04] <jnthn> I suspect Rakudo should do the same.

[19:05] <moritz> elsif $twigil ne '*' { $past.scope('lexcial') } # that's the code path that dies

[19:05] *** BlueT_ left
[19:05] <pmichaud> anyone know the RT bug for the return type check fail fail?

[19:05] <jnthn> pmichaud: OK, I'm confused

[19:05] <moritz> pmichaud: I'll try to find it

[19:05] <jnthn> pmichaud: It tries to build the nqp-debug.nqp into PIR

[19:06] <jnthn> And seems to silenlty fail to do so from within make

[19:06] <jnthn> *nmake

[19:06] <jnthn> But if I copy-paste the command it says it runs...it compiles it to PIR.

[19:06] <pmichaud> jnthn: can you nopaste some output?

[19:06] <jnthn> https://gist.github.com/3557511 is the relevant build log

[19:07] <tadzik> jnthn: yep, the tests pass now

[19:07] <jnthn> tadzik: Did you do a spectest run?

[19:08] <tadzik> jnthn: it's still ongoing, but it fixed this Pod issues

[19:08] <jnthn> tadzik: OK

[19:08] <jnthn> pmichaud: Does the build "cd" at some point inside of the makefile?

[19:08] <pmichaud> jnthn: it's not creating modules/rakudo-debugger/perl6-debug.pir ?

[19:08] <jnthn> No

[19:08] <skids> .oO(ah, "is export" is extraneous.)

[19:08] <jnthn> pmichaud: But if I run the command manually it does create one.

[19:08] <moritz> pmichaud: https://rt.perl.org/rt3//Ticket/Display.html?id=64990

[19:09] <pmichaud> moritz++  # thanks

[19:09] <moritz> oops, seems it's marked as 'resolved'

[19:09] <jnthn> pmichaud: But I noticed the paths are relative, thus why I'm pondering if it's a cwd fail

[19:09] <pmichaud> jnthn: yes, the makefile does 'cd' at a few points

[19:10] <pmichaud> but if it wasn't working, I'd expect 'cannot find ...'  errors as opposed to silent fails

[19:10] <skids> Anyway, time to start the long weekend, where's my bottle o rum?  Good luck on the release all!

[19:10] <jnthn> pmichaud: same

[19:10] <jnthn> pmichaud: Another data point: the ufo and panda copying appears to have worked out

[19:11] <pmichaud> jnthn: yeah, that leads me to believe that we're in the correct cwd

[19:11] <jnthn> same

[19:11] <pmichaud> think the / vs \ is an issue?

[19:12] <jnthn> Maybe, but when I copy-paste the exact command there without changing the slashes, it does execute and creates the .pir file

[19:12] <pmichaud> are the other files above being precompiled to .pir?  Those commands also use / instead of \

[19:13] *** BlueT_ joined
[19:14] *** pochi joined
[19:14] <jnthn> Yeah; looking in C:/consulting/rstar-rc/rakudo-star-2012.08/install/lib/parrot/4.6.0/languages/perl6/lib/ I see plenty of pre-compiled .pir files

[19:16] *** birdwindupbird joined
[19:16] *** flussence left
[19:16] <pmichaud> hmmphs.

[19:16] <jnthn> Where's the thing that builds rakudo-debugger?

[19:16] <jnthn> or tries to...

[19:16] <pmichaud> it's the Makefile that gets generated by Configure.pl

[19:16] <pmichaud> source is tools/build/Makefile.in

[19:17] *** flussence joined
[19:18] <pmichaud> follow perl6-debug-install in the Makefile

[19:20] * jnthn tries getting it to spit out the cwd, just in case

[19:20] <jnthn> but it seems a stretch

[19:20] <pmichaud> anyway, it's building fine for me.

[19:20] <jnthn> yeah, cwd looks fine

[19:21] <pmichaud> maybe some odd characters in the makefile?

[19:21] <pmichaud> I'm kinda grasping at straws :)

[19:22] <jnthn> yeah, me too

[19:22] <pmichaud> perhaps try eliminating the continuation line ?

[19:22] <jnthn> It's really odd.

[19:22] <pmichaud> on the nqp.exe line

[19:22] <[Coke]> do a diff on the 2 generated makefiles?

[19:24] <pmichaud> r:  sub abc() returns Int { 3.5 };  my $x = abc();  say 'alive';

[19:24] <p6eval> rakudo 231137: OUTPUT«Type check failed for return value; expected 'Int' but got 'Rat'␤  in block  at /tmp/1TE1XyShlH:1␤␤»

[19:24] * pmichaud files rakudobug

[19:25] *** ivan`` left
[19:25] <jnthn> pmichaud: ?

[19:25] <pmichaud> S02:1363:

[19:25] <pmichaud> (In fact, the attempt to

[19:25] <pmichaud> return a value that doesn't match the return constraint will internally

[19:25] <pmichaud> call C<fail>, and that failure will be returned according to standard

[19:25] <pmichaud> C<fail> policy, which is dependent on the preferences of the caller.)

[19:26] <jnthn> wtf :/

[19:26] *** crazedpsyc left
[19:26] <moritz> wtf.

[19:26] *** hoelzro|away left
[19:26] <pmichaud> that sounds about right to me, though.

[19:26] <[Coke]> so that shouldn't die unless you say $x ?

[19:26] <pmichaud> or otherwise try to use $x in a way that causes the exception to be thrown.

[19:26] <jnthn> That's inconsistent with parameter passing's type checking...

[19:26] *** cotto left
[19:26] *** jtpalmer left
[19:26] *** patspam left
[19:26] <moritz> pmichaud: it might be, but it's very bad to switch the behavior until we have better support for failure propagation and blowup

[19:26] <[Coke]> That could really be a compile time failure there.

[19:27] <jnthn> What if we're "returns"-ing a native?

[19:28] <pmichaud> in the case of a native, I suspect it's okay to die immediately.

[19:28] <jnthn> Nowhere else does a type constraint not being met cause a Failure rather than an immediate exception.

[19:29] <jnthn> I don't immediately see why this case deserves to be the exception to the rule.

[19:29] *** BlueT_ left
[19:29] <jnthn> Unless there's some other rule that it not giving back a Failure would be an exception to...

[19:31] <jnthn> pmichaud: Eliminating the continuation line didn't help. Quoting the arg to vmlibs didnt' either.

[19:31] <pmichaud> jnthn: I'm at a loss then :-/

[19:32] <jnthn> pmichaud: me too

[19:32] <jnthn> I'd not hold the relesae for it

[19:32] <jnthn> Especially given we produce MSIs and most Windows users will go for those.

[19:32] <pmichaud> okay.  I have some other changes, so a new rc will be forthcoming soon.

[19:34] <pmichaud> r:  sub abc() returns Int { my $r = 3.5  };  my $x = abc();  say 'alive';

[19:34] <p6eval> rakudo 231137: OUTPUT«Type check failed for return value; expected 'Int' but got 'Rat'␤  in sub abc at /tmp/ndFsrYzcB_:1␤  in block  at /tmp/ndFsrYzcB_:1␤␤»

[19:34] <pmichaud> r:  sub abc() returns Int { my $r = 3.5; $r  };  my $x = abc();  say 'alive';

[19:34] <p6eval> rakudo 231137: OUTPUT«Type check failed for return value; expected 'Int' but got 'Rat'␤  in sub abc at /tmp/P8uacuh4gB:1␤  in block  at /tmp/P8uacuh4gB:1␤␤»

[19:35] <pmichaud> afk, kid pickup

[19:37] *** BlueT_ joined
[19:44] * TimToady is finally back home, after an extra night's stay at MSP courtesy of Delta

[19:44] <phenny> TimToady: 29 Aug 01:03Z <diakopter> ask TimToady should .codes return the original number of codes as inputted, or the number of codes it will output when it's outputted as NFC+marks?

[19:44] <phenny> TimToady: 29 Aug 01:06Z <diakopter> ask TimToady or some other formula I can't imagine at the moment? :)

[19:44] <phenny> TimToady: 29 Aug 01:22Z <diakopter> tell TimToady sorear answered it; see the log..

[19:44] <diakopter> Delta+-

[19:44] <moritz> welcome back, TimToady 

[19:44] <[Coke]> welcome back, TimToady++

[19:44] <TimToady> well, it wasn't really Delta's fault, but the security in Amsterdam...

[19:45] <jnthn> Ouch :/

[19:45] <TimToady> after we we all packed in a ready to go, they decided they couldn't decide whether a certain door had been left unlocked, and made us all get off the plane to get rescanned.

[19:46] <TimToady> hmm, my power supply is making funny crackling sounds

[19:46] <TimToady> maybe it didn't like 220 volts...

[19:46] <[Coke]> Oy.

[19:46] <TimToady> so anyway, the resulting 2 1/2 hour delay caused us to miss our connection yesterday

[19:46] <jnthn> :(

[19:46] <TimToady> and of course the motel's WiFi didn't work...

[19:46] <moritz> :(

[19:47] <moritz> TimToady: it's even 230 V these days

[19:47] <TimToady> but we're back home \o/

[19:47] <colomon> \o/

[19:48] <jnthn> nqp: my @x := nqp::split('::', 'A::B'); say(@x);

[19:48] <p6eval> nqp: OUTPUT«[ "A", "B" ]␤»

[19:49] <jnthn> nqp: my @x := nqp::split('::', 'A::B'); say(pir::typeof__SP(@x));

[19:49] <p6eval> nqp: OUTPUT«ResizableStringArray␤»

[19:49] <jnthn> nqp: my @x := nqp::split('::', 'A::B'); say(+@x);

[19:49] <p6eval> nqp: OUTPUT«2␤»

[19:49] <diakopter> parrot leak?

[19:50] *** kaare_ left
[19:50] <jnthn> diakopter: it's NQP :)

[19:50] <jnthn> I didn't expect it to stringifythat way

[19:50] <jnthn> *that

[19:51] <[Coke]> jnthn: yah.

[19:51] <sorear> huh.  apparently FRA is actually busier than TXL, it seemed quite the other way around when I was there

[19:52] *** wk_ joined
[19:54] <jnthn> sorear: FRA is rather large, so even if there are more people there, it may feel less crowded.

[19:56] <jnthn> The kast times I've been at FRA, the check-in area has felt almost deserted...

[19:56] <jnthn> *last

[19:56] <moritz> FRA is the biggest German airport

[19:56] <jnthn> Security felt busier though ;)

[19:58] <sorear> moritz: yeah, I was just looking at wikipedia's list of busiest passenger airports, after first looking up "where in the world is MSP"

[19:58] <moritz> and, where is it? :-)

[19:58] <sorear> so, LHR, ORD, LAX, FRA, I've been at four of them in the last two week

[19:58] *** cggoebel left
[19:58] <sorear> moritz: minneapolis-st.paul, north central USA

[19:58] <TimToady> and you survived!

[19:59] <TimToady> we saved about $500 each flying into LUX instead of FRA

[19:59] <sorear> well I flew into LUX because that's where woolfy wanted to pick me up ...

[20:00] <dalek> doc: c386ae4 | moritz++ | lib/Pod/ (5 files):

[20:00] <dalek> doc: start to document Pod classes

[20:00] <dalek> doc: review: https://github.com/perl6/doc/commit/c386ae4351

[20:00] <jnthn> Eww, LHR... :)

[20:01] * moritz isn't too fond of that either

[20:01] <sorear> jnthn: agreed

[20:01] *** scottdware joined
[20:02] * jnthn wasn't especially amused with OSL yesterday, mind.

[20:02] <sorear> ORD wasn't too bad.  land, 5 minute dash on foot to my destination plane .5km away or so, board just before it left

[20:03] <jnthn> I guess it's a nice airport overall, but making people doing a tight transfer hurry through a packed duty free shop is annoying.

[20:03] <diakopter> sorear: nice :)

[20:03] <diakopter> (that you made it)

[20:03] <sorear> not the best transfer, but I couldn't have done it at all in LHR or TXL (they both insist on rescreening connecting passengers)

[20:03] *** ivan`` joined
[20:03] *** cggoebel joined
[20:04] *** nnunley left
[20:04] <scottdware> hey perl6'ers! just a quick ? any of you guys using perl6 regularly for "production"

[20:04] <scottdware> such as in your day-to-day scripts/programs, etc.

[20:04] <pmichaud> back again

[20:04] <moritz> scottdware: I use it almost daily for small tasks

[20:05] <moritz> (and so do many other of the "core" folks)

[20:05] <moritz> and sirrobert is using it in his business

[20:05] <dalek> nqp/toqast: c07af7a | jnthn++ | src/ops/nqp.ops:

[20:05] <dalek> nqp/toqast: RSA should also report true in nqp::islist, otherwise the result of split does not count as a list, which caused some breakage.

[20:05] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/c07af7a4a5

[20:05] <pmichaud> TimToady: welcome back

[20:05] <colomon> scottdware: I use it routinely for generating sheet music.  often for small tasks for $work.  and I'm currently considering doing a medium-sized $work project in it.

[20:05] <scottdware> moritz: cool, thanks!

[20:05] <pmichaud> back from kid pickup

[20:05] <jnthn> scottdware: I've used it at a $client for some small scripts. 

[20:06] <scottdware> what is sirrobert's business, can you say?

[20:06] *** birdwindupbird left
[20:06] <scottdware> i really love what is being done with the language, and think that its awesome!

[20:06] <moritz> scottdware: no, either he didn't say, or I forgot, sorry :(

[20:06] <jnthn> OK, I now put out latest nqp/toqast and rakudo/nqpqast for general spectesting and also a module test run.

[20:06] <jnthn> spectests look good here.

[20:07] <moritz> jnthn: btw last I looked, line numbers in NQP error messages were one off (one too large)

[20:07] <jnthn> moritz: Is that a new fail?

[20:07] * moritz starts a build

[20:08] <moritz> jnthn: not new in the nqp/toqast sense

[20:08] <moritz> iirc

[20:08] <jnthn> ok, thanks

[20:08] *** scottdware left
[20:09] <moritz>  /home/moritz/p6/rakudo/install/bin/parrot --include=src/stage1 -o src/stage1/ModuleLoader.pbc \ src/stage1/gen/module_loader.pir

[20:09] <moritz> make: *** [src/stage1/nqpmo.pbc] Segmentation fault

[20:09] <moritz> oh wait

[20:09] <moritz> it's the nqpmo step that segfaults

[20:09] <moritz> parallel make just confused the order

[20:10] <[Coke]> is rakudo/nqppast smart enough to pull the right nqp with --gen-parrot ?

[20:10] <moritz> no

[20:10] * [Coke] really hates it when || make gets borked. :|

[20:10] <moritz> [Coke]: it's not the parallel make that's borked

[20:10] <moritz> [Coke]: rather it's a build step that fails

[20:10] <moritz> and parallel make made be believe it was a different step that failed

[20:10] <jnthn> [Coke]: Just made it so.

[20:10] <dalek> rakudo/nqpqast: 9c1534d | jnthn++ | tools/build/NQP_REVISION:

[20:10] <dalek> rakudo/nqpqast: Update NQP_REVISION to ease testing.

[20:10] <dalek> rakudo/nqpqast: review: https://github.com/rakudo/rakudo/commit/9c1534d3ac

[20:11] *** SamuraiJack_ left
[20:12] <dalek> star: f28d3a8 | pmichaud++ | tools/build/Makefile.in:

[20:12] <dalek> star: Add a perl6-debug target to the Makefile.

[20:12] <dalek> star: review: https://github.com/rakudo/star/commit/f28d3a8b51

[20:12] <dalek> star: 30f8f6b | pmichaud++ | tools/build/ (2 files):

[20:12] <dalek> star: Add better progress messages to module installation.

[20:12] <dalek> star: review: https://github.com/rakudo/star/commit/30f8f6b8f8

[20:12] <moritz> jnthn: https://gist.github.com/3558304

[20:12] <jnthn> moritz: hmmmmm.

[20:13] *** Moukeddar joined
[20:13] <moritz> somehow I have the suspicion it's the hash in the serialization thing that weeds out duplicates

[20:13] <jnthn> Right

[20:13] <jnthn> Well, that's where it fails at least

[20:15] <pmichaud> rc4 now at http://pmichaud.com/sandbox/rakudo-star-2012.08-rc4.tar.gz

[20:18] <sirrobert> moose has things like 'after' and 'before' to hook into method execution.  Does p6 have similar?

[20:18] <moritz> sirrobert: there's Routine.wrap

[20:18] <sirrobert> moritz: great, thanks

[20:20] <[Coke]> jnthn: invoke() not implemented in class '$'

[20:20] <jnthn> ah shit...

[20:20] <jnthn> What the hell is that about.

[20:20] <[Coke]> (OS X 10.7.3)

[20:20] <jnthn> And why does it only affect NQP.

[20:20] <jnthn> And not Rakudo.

[20:21] <moritz> [Coke]: is that reproducable?

[20:21] <jnthn> How much RAM do each of you have?

[20:21] <[Coke]> https://gist.github.com/3558426

[20:22] <moritz> jnthn: that was on a machine with 4GB

[20:22] <[Coke]> 4096MB

[20:22] <[Coke]> a lot of which is in use, of course.

[20:22] <jnthn> yeah, I'm pondering how it affects GC

[20:22] <[Coke]> moritz: git clean'ing and trying again.

[20:26] * jnthn lies to Parrot about how much RAM he has to see if that'll reproduce it here

[20:26] *** crazed- joined
[20:27] <jnthn> aha!

[20:27] *** crazed- is now known as crazedpsyc

[20:27] *** cotto joined
[20:28] <jnthn> Yes, I can make it explode in interesting ways here now

[20:28] <[Coke]> yes, I can duplicate it.

[20:31] <pmichaud> looks like I'll need a rc5

[20:31] <sorear> sirrobert: Routine.wrap is not a replacement for Moose's before/after, sadly

[20:31] <sirrobert> no?

[20:32] <sorear> no, Routine.wrap modifies subs in place while before/after/around is a principled form of overriding

[20:32] <sirrobert> it looks like Method::Wrap (or whatever) from p5

[20:32] <sirrobert> ok

[20:32] *** cggoebel left
[20:32] <sorear> if you want to use before/after in p6, you'll need to do it yourself: method foo($x,$y) { callsame() * 2 }

[20:32] <sorear> callsame/nextsame and the saner way we do contexts make this much easier to get right than in p5

[20:33] <sorear> which eliminates much of the need for method modifiers ... on classes

[20:33] <sorear> but there is currently nothing in the p6 spec which can replace method modifiers on roles

[20:33] <sirrobert> hmm ok 

[20:34] <jnthn> pmichaud: rc5 for?

[20:34] <jnthn> pmichaud: The segv?

[20:35] <dalek> star: 0cb73f2 | pmichaud++ | / (2 files):

[20:35] <dalek> star: Add 'configclean' target to handle cleanup from Configure.pl.

[20:35] <dalek> star: review: https://github.com/rakudo/star/commit/0cb73f2bab

[20:35] <pmichaud> jnthn: the "make clean" at the end of Configure.pl

[20:35] <jnthn> ah

[20:35] <jnthn> I think I may have found the NQP SEGV.

[20:35] <pmichaud> jnthn: I don't have any fix for the segfault, unless we want to re-issue a nqp release

[20:35] * jnthn smacks self

[20:35] <jnthn> pmichaud: If it's what I think it is, then the patch will be pickable into the release.

[20:36] <jnthn> (Visual Studio Debugger)++

[20:37] *** Moukeddar left
[20:37] <sirrobert> ok, gotta head out --wave

[20:37] *** sirrobert left
[20:37] <jnthn> Also the nature of the problem explains why the issue didn't show up in Rakudo.

[20:38] *** cggoebel joined
[20:38] <moritz> now I'm really curious.

[20:39] *** rob__ joined
[20:39] *** rob__ is now known as hoelzro

[20:39] <dalek> nqp/toqast: c0fbe4d | jnthn++ | src/6model/reprs/KnowHOWREPR.c:

[20:39] <dalek> nqp/toqast: Add missing mark in KnowHOWREPR that could lead to segfaults and other corruption.

[20:39] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/c0fbe4d73f

[20:39] <moritz> fwiw the star RC4 looks quite good so far

[20:39] *** hoelzro is now known as hoelzro|away

[20:39] <jnthn> We don't really write knowhow's in Rakudo, we already bootstrapped beyond that point.

[20:39] *** telex left
[20:39] <pmichaud> (i.e., ..."pickable into the release"?)

[20:39] <pmichaud> jnthn: should I hold off on star release for possible patch?

[20:39] <jnthn> pmichaud: c0fbe4d helps, it seems

[20:40] <moritz> Testing modules/panda...

[20:40] <moritz> t/panda/builder.t .... Missing or wrong version of dependency 'src/stage2/QRegex.nqp'

[20:40] <moritz> in the RC-4

[20:40] *** telex joined
[20:40] <jnthn> pmichaud: Done multiple rebuilds with that patch where it previously failed and things look good.

[20:41] <jnthn> moritz, [Coke]: Please give it another try.

[20:41] <moritz> jnthn: already rebuilding

[20:41] <jnthn> Thanks.

[20:41] <jnthn> Dang, wish I'd figured out how to reproduce it earlier.

[20:42] <pmichaud> jnthn: c0fbe4d  is only in the toqast branch?

[20:42] <jnthn> pmichaud: yeah

[20:42] <jnthn> it can be cherry-picked

[20:42] <pmichaud> so, cherry-pick c0fbe4d into master, issue a new nqp release?

[20:43] <moritz> cherry-pick the release into 2012.08

[20:43] <jnthn> pmichaud: You can do that, or you can just patch the Star tarball directly. Whichever you prefer.

[20:43] <pmichaud> if I patch the Star tarball, there's really no history of the fact that it was patched.

[20:43] *** leont left
[20:43] <pmichaud> not sure that's important.

[20:44] <pmichaud> I suppose I can rebuild the 'patch' infrastructure I once had for a previous release.

[20:44] * jnthn finds that hard to call

[20:44] <moritz> just make a new nqp release

[20:44] <pmichaud> so, checkout 2012.08, apply patch, make 2012.08.1 release?

[20:44] <moritz> +1

[20:45] <jnthn> Curious fact: if I tell Parrot that I have 1 GB or RAM rather than the 16GB I actually have, the build of Rakudo's CORE.setting totals up with 250MB or so less memory usage.

[20:45] <moritz> you don't even need to make a new compiler release of rakudo

[20:45] <jnthn> However, it takes 10s longer.

[20:45] <jnthn> er, 12s

[20:45] <pmichaud> jnthn: that's not curious.  parrot sets the size of its gc pool based on the amount of memory it thinks you have

[20:45] <moritz> since you can depend on specific nqp versions in star

[20:46] <jnthn> pmichaud: I knew that bit, just surprised that the total usage came out quite a bit less.

[20:46] <moritz> jnthn: nqp build succeeded here, testing rakudo now

[20:46] <jnthn> \o/

[20:47] *** fglock left
[20:47] * jnthn crosses his fingers that the issue [Coke]++ saw is also gone

[20:47] <pmichaud> should I make a new compiler release of rakudo that loads nqp 2012.08.1, though?

[20:47] <pmichaud> otherwise it'll grab 2012.08 and we get errors.

[20:47] <moritz> someone can do that after the star release

[20:48] <jnthn> pmichaud: My feeling is that most people either grab * or follow Git.

[20:48] <jnthn> But that may well be off

[20:48] <pmichaud> likely true.

[20:48] <pmichaud> okay.

[20:48] <moritz> I'd just really love to see 2012.08 release in 2012.08 :-)

[20:48] <pmichaud> patching nqp.

[20:48] <pmichaud> oh, I'm sure the 2012.08 release will be in 2012.08

[20:48] <pmichaud> I still have 8 hrs here.

[20:48] <jnthn> ...in some timezone :P

[20:48] <jnthn> :D

[20:48] <pmichaud> it's even possible it'll happen in 2012.08 utc

[20:49] <pmichaud> (likely, in fact, since I have 3 hrs for that)

[20:50] <pmichaud> cherry-picked, now building and testing

[20:50] <pmichaud> I should also build/test on my notebook, since that's wehre I was getting the segfaults earlier

[20:51] <[Coke]> jnthn: testing now

[20:51] <pmichaud> okay, by checking out 2012.08 I'm in detached head.  Will a tag be enough to preserve the commit history so I can recover it?

[20:51] <pmichaud> or do we need to keep a branch?

[20:52] <moritz> tag is enough

[20:52] <jnthn> tag will do it

[20:52] <pmichaud> okay.

[20:52] <jnthn> It's detached because you can't commit to a tag.

[20:52] <[Coke]> aw, you can in subversion!

[20:53] <jnthn> That was NOT a feature. :P

[20:53] <pmichaud> is there a readme or file I should change in nqp where we can explain why the .1 release?

[20:53] <pmichaud> we don't have a ChangeLog or equivalent file, nor announcements.

[20:54] <jnthn> We have neither of those.

[20:54] <pmichaud> (I'm fine if we don't explain it, I think... just curious if anyone knows of a good place for the explanation)

[20:54] <jnthn> Not for now, at least.

[20:54] <cognominal>         my $patrx := $pat ~~ Code ?? $pat !! / $pat: /;  # what is the meaning of the colon in this code?

[20:54] <pmichaud> which colon?

[20:54] <pmichaud> (there are two)

[20:55] <pmichaud> the colon in the regex disables backtracking

[20:55] <cognominal> ok, thx

[20:56] <dalek> std: b759d67 | larry++ | / (4 files):

[20:56] <dalek> std: viv+STD_P5 now parses all of viv

[20:56] <dalek> std: review: https://github.com/perl6/std/commit/b759d67357

[20:56] <pmichaud> wow!  TimToady++

[20:56] <sorear> TimToady++ \o/

[20:56] <moritz> \o/

[20:58] <jnthn> wow! :D

[20:58] <jnthn> TimToady++

[20:58] <lizmat> TimToady++

[20:58] <lizmat> :-)

[20:59] <TimToady> though I cheated by fixing a few things in viv, like removing the one indirect object :)

[20:59] <TimToady> and some duplicate package names that STD is pickier about than perl5 is

[20:59] <moritz> but viv does use heredocs

[20:59] <TimToady> abundantly :)

[20:59] <TimToady> including ones without quotes

[21:00] <TimToady> those parse now

[21:00] <pmichaud> created nqp-2012.08.1 tarball, testing it now.

[21:00] <TimToady> it now treats <<EOT as <<"EOT"

[21:01] <moritz> jnthn: failing tests in t/spec/integration/error-reporting.rakudo

[21:01] <TimToady> and I'm sure there are loads of bug-compatibilities that I haven't covered yet...

[21:01] *** fernandocorrea left
[21:01] * lizmat has a warm fuzzy feeling again ;-)

[21:01] *** stopbit left
[21:01] <jnthn> moritz: Just that one?

[21:01] <jnthn> moritz: Argh, it's a #icu test.

[21:02] <moritz> jnthn: yes, just that one

[21:02] *** stopbit joined
[21:02] *** jtpalmer joined
[21:02] <moritz> jnthn: but the failures don't look ICU-y

[21:03] <jnthn> moritz: no, but that's the reason I don't see the errors

[21:03] <moritz> http://perlpunks.de/paste/show/5041268e.7402.22b

[21:03] <jnthn> moritz: No ICU build

[21:03] <TimToady> so it might be more accurate to say that viv thinks it parses viv :)

[21:03] <jnthn> moritz: hmmmmm.

[21:03] <lizmat> fwiw, I'm looking at installing ICO on OSX and not liking the experience one bit

[21:03] <diakopter> TimToady: the '->(' you added in STD_P5 - can you put a space inside that?

[21:04] <lizmat> s/ICO/ICU

[21:04] <jnthn> lizmat: Once upon a time Parrot bundled ICU. I spent ages getting it to build on Windows. Then they debundled it. I don't think I ever managed to build with ICU since.

[21:04] <TimToady> that would be one of the bug compatability modes I spoke of :)

[21:04] <moritz> jnthn: try:  ./perl6 -e 'use v6; class A { has $.x is rw }; A.new.x(42)'

[21:04] <[Coke]> jnthn: invoke() not implemented in class '-5119310890791185874'

[21:04] <diakopter> eval: my $a = sub { print $_[0] }; $a-> (3)

[21:05] <buubot_backup> diakopter: 31

[21:05] <moritz> it spits out four warnings

[21:05] <jnthn> [Coke]: Wait, is that with latest NQP?

[21:05] <moritz> and then think it's a runtime error

[21:05] <TimToady> I think we'll probably reimplement most of ICU soon anyway...

[21:05] <jnthn> [Coke]: I didn't bump NQP_REVISION again after the patch...

[21:05] <jnthn> TimToady: Same ;)

[21:05] <[Coke]> jnthn: ARGH.

[21:05] <[Coke]> no, it was with latest rakudo. ;)

[21:06] <moritz> latest rakudo doesn't have that patch yet

[21:06] <jnthn> moritz: s/runtime/compile time/?

[21:06] <moritz> because the patch was only in the nqp/toqast branch

[21:06] <moritz> jnthn: erm, yes

[21:06] <jnthn> moritz: e.g. it includes the SORRY when it shouldn't?

[21:06] <jnthn> hm

[21:06] <[Coke]> moritz: I'm IN that branch.

[21:06] <moritz> oh

[21:06] <pmichaud> nqp tarball passed

[21:07] <dalek> rakudo/nqpqast: b79e158 | jnthn++ | tools/build/NQP_REVISION:

[21:07] <dalek> rakudo/nqpqast: Another revision bump.

[21:07] <dalek> rakudo/nqpqast: review: https://github.com/rakudo/rakudo/commit/b79e1588b3

[21:07] <jnthn> [Coke]: ^^

[21:07] <jnthn> moritz: I'm guessing something odd is going on with backtrace printing.

[21:08] <moritz> jnthn: that's likely

[21:08] <lizmat> wrt "- >", not allowing that in p5 on p6 would not be a big thing in my book

[21:08] * pmichaud tests rakudo 2012.08 using new nqp tarball

[21:08] <moritz> my $ x;

[21:08] <jnthn> moritz: oh...I see something right away

[21:08] * pmichaud wonders about a "std5:" target for p6eval :)

[21:09] <jnthn>                             nqp::join(';', $bt[$_]<sub>.get_namespace.get_name),

[21:09] <jnthn>                             'nqp;HLL;Compiler'

[21:09] <jnthn> moritz: NQP doesn't emit Parrot namespace directives any more.

[21:09] <moritz> oh

[21:09] <TimToady> std: use v5; / [a-z] /

[21:09] <p6eval> std d93fffe: OUTPUT«ok 00:00 52m␤»

[21:09] <pmichaud> or that.

[21:10] <sorear> std: use v5; @ _

[21:10] <p6eval> std d93fffe: OUTPUT«[31m===[0mSORRY![31m===[0m␤Confused at /tmp/ZBuYlaBoPm line 1:␤------> [32muse v5; @ [33m⏏[31m_[0m␤    expecting any of:␤   p5infix␤        statement modifier␤Parse failed␤FAILED 00:00 52m␤»

[21:10] * flussence wonders if anyone's ever made a serious attempt to spec-ify p5

[21:10] <TimToady> you'll note the caveat about bug compatibility

[21:10] <jnthn> std: use v5; / [[] /

[21:10] <p6eval> std d93fffe: OUTPUT«[31m===[0mSORRY![31m===[0m␤Couldn't find terminator ]] at /tmp/GZOrbqm6WG line 1 (EOF):␤------> [32muse v5; / [[] /[33m⏏[31m<EOL>[0m␤Parse failed␤FAILED 00:00 52m␤»

[21:10] <jnthn> ;-)

[21:10] <TimToady> jnthn: that's fixed in the latest

[21:11] <moritz> flussence: the perl5docs come as close as anything, I think

[21:11] <jnthn> TimToady: oh...I looked at it and thought it wasn't

[21:11] <jnthn> (as in, read the diff)

[21:11] <jnthn> I musta missed something.

[21:12] <flussence> oh right... I forgot how thorough the docs are :)

[21:12] * moritz -> sleep

[21:12] <diakopter> std: use v5.14; / [a-z] /

[21:12] <TimToady> it's quantified with +, so it requires at least one charspec

[21:12] <p6eval> std d93fffe: OUTPUT«ok 00:00 52m␤»

[21:12] <dalek> rakudo/nqpqast: 119716f | jnthn++ | src/core/Exception.pm:

[21:12] <dalek> rakudo/nqpqast: Fix is_runtime to unbust backtrace stuff in some cases.

[21:12] <dalek> rakudo/nqpqast: review: https://github.com/rakudo/rakudo/commit/119716f349

[21:12] <jnthn> moritz: ^^ should do it, guess I find out tomorrow ;-)

[21:12] <jnthn> It helped with the -e line you gave me anyway :)

[21:12] <jnthn> Sleep well :)

[21:13] <jnthn> eval /[]/

[21:13] <buubot_backup> jnthn: ERROR: Unmatched [ in regex; marked by <-- HERE in m/[ <-- HERE ]/ at (eval 20) line 1. 

[21:13] <jnthn> ah, and the empty one is invalid.

[21:14] <TimToady> it even accepts / [^[a-z-] /

[21:14] <sorear> what about []] ?

[21:14] <TimToady> that too

[21:15] <TimToady> what it isn't smart about is any backslash longer than .

[21:15] * jnthn will have to compare it for what he did for Rakudo's m:P5/.../

[21:15] <TimToady> so \xff will feyl

[21:15] <sorear> (?{ print STDERR "foo" }) hehehe

[21:15] <jnthn> Ah, I did handle that bit :)

[21:15] <pmichaud> jnthn: is the 119716f commit something I need to worry about for the 2012.08.1 nqp release?

[21:15] * sorear sneaks an indirect object into a regex to toy with TimToady

[21:15] <jnthn> pmichaud: repo?

[21:16] <jnthn> pmichaud: oh, the one I just did

[21:16] <jnthn> pmichaud: No

[21:16] <pmichaud> rakudo/nqpqast above.

[21:16] <pmichaud> okay, just checking.

[21:16] <jnthn> pmichaud: It's a fix required to nqp/toqast.

[21:16] <diakopter> eval: use v5; / [^a--] /

[21:16] <buubot_backup> diakopter: ERROR: Invalid [] range "a--" in regex; marked by <-- HERE in m/ [^a-- <-- HERE ] / at (eval 20) line 1. 

[21:16] <pmichaud> I'm spectesting rakudo 2012.08 now with nqp 2012.08.1

[21:16] <sorear> eval: / (?{ print STDERR "foo" }) /

[21:16] <buubot_backup> sorear: No output.

[21:16] <pmichaud> so far looks reasonable.

[21:16] <sorear> eval: / (?{ print STDERR "foo" @ }) /

[21:16] <buubot_backup> sorear: ERROR: syntax error at (re_eval 21) line 2, near ""foo" @  ;" Compilation failed in regexp at (eval 20) line 1. 

[21:16] <jnthn> pmichaud: OK. Glad the segv got patched ahead of this release. :)

[21:16] <pmichaud> yeah, me too.

[21:16] <jnthn> Well, the Star.

[21:17] <TimToady> eval: / [^ --] /

[21:17] <buubot_backup> TimToady: No output.

[21:17] <jnthn> I'd struggled to reproduce it here before, which made it a real pain to figure out...

[21:17] <TimToady> diakopter: I suspect it doesn't like that a comes after -

[21:17] <diakopter> std: use v5; / [^a--] /

[21:17] <p6eval> std d93fffe: OUTPUT«ok 00:00 52m␤»

[21:18] <TimToady> still the old std I suspect, unless someone has rebuilt it

[21:18] <diakopter> std: use v5; / [---] /

[21:18] <p6eval> std d93fffe: OUTPUT«ok 00:00 52m␤»

[21:18] <sorear> new std has a hash startingwith b

[21:18] <diakopter> eval: use v5; / [---] /

[21:18] <buubot_backup> diakopter: No output.

[21:18] <[Coke]> jnthn: now building rakudo, thanks.

[21:19] <pmichaud> spectests pass with nqp-2012.08.1, pushing/publishing

[21:20] <pmichaud> https://gist.github.com/3559196   # huh?!?!

[21:21] <pmichaud> where's that 2012.11 tag coming from?

[21:21] <sorear> check your reflogs?

[21:21] <sorear> find out exactly when it was created

[21:21] <flussence> I have it locally too

[21:22] <flussence> aha

[21:22] <sorear> I don't

[21:22] <flussence> the date on it is 2011-12-22

[21:23] <flussence> guess it's just a typo

[21:23] <TimToady> anyway, to do cclass correctly probably entails copying over the cc role from STD, which postdates the original copy of STD_P5

[21:23] <pmichaud> I don't know how to check the reflogs for tag creation

[21:23] <pmichaud> but, more importantly, I want to get rid of it.

[21:23] <flussence> `git show 2012.11`, `git tag -d 2012.11`, lemme figure out how to push tag deletions...

[21:24] <FROGGS> git push --tags?

[21:24] <pmichaud> I thought I had already deleted it before, though.

[21:24] <pmichaud> that's why I'm surprised to see it come up again.

[21:25] <flussence> FROGGS: not sure if it needs special syntax like for deleting branches remotely

[21:25] <pmichaud> pmichaud@kiwi:~/p6/nqp$ git push origin :refs/tags/2012.11

[21:25] <flussence> well, now I know :)

[21:25] <FROGGS> right

[21:25] <pmichaud> okay, it's now gone from github, at least.

[21:25] <FROGGS> ;o)

[21:25] <pmichaud> hopefully it won't show up again.

[21:26] <TimToady> nap &

[21:27] <pmichaud> 2012.08.1 now released.

[21:27] <jnthn> \o/

[21:27] <jnthn> pmichaud++

[21:27] <pmichaud> now to build a rc5 candidate

[21:28] <dalek> star: c53748c | pmichaud++ | tools/star/Makefile:

[21:28] <dalek> star: Bump bundled nqp version to 2012.08.1 .

[21:28] <dalek> star: review: https://github.com/rakudo/star/commit/c53748cf69

[21:29] <[Coke]> jnthn: built. 

[21:29] <masak> morning, #perl6

[21:30] <masak> ooh, a star is born. pmichaud++

[21:31] <masak> oh wait. we're still on rc5.

[21:32] <pmichaud> I'm about to do rc5, then test, then release.

[21:32] <masak> nice.

[21:33] <pmichaud> http://pmichaud.com/sandbox/rakudo-star-2012.08-rc5.tar.gz

[21:33] <jnthn> [Coke]: Great :)

[21:41] *** bluescreen10 left
[21:44] <pmichaud> nqp just built on all of my platforms w/o segfaults

[21:44] <jnthn> yay

[21:44] <pmichaud> so, hopefully things are all good now :)

[21:47] *** MayDaniel left
[21:54] * pmichaud has 2 hrs until 2359 utc

[21:55] <diakopter> TimToady: NFC specifies that a series of "orphaned" combining marks leading a string be left alone.. do you want those to combine to a synthetic, or leave them alone in case the string is appended to another, possibly forming a combinable sequence?

[21:57] <dalek> star: c7cd324 | pmichaud++ | tools/build/module-install.pl:

[21:57] <dalek> star: Skip blank lines and comment lines in input to module-install.pl.

[21:57] <dalek> star: review: https://github.com/rakudo/star/commit/c7cd32438b

[21:58] *** Guest9874 joined
[21:59] <Guest9874> hello

[21:59] <diakopter> Guest9874: howdy

[22:00] <Guest9874> m super and u?

[22:00] <diakopter> 3 o'clock and all's well

[22:01] *** nuba joined
[22:02] <masak> no pains or aches anywhere. mood: happy.

[22:04] *** Guest9874 left
[22:06] *** stopbit left
[22:12] <pjcj> any qr/.*/ => sub { template "404" };  seems to do for 404 what error_template does for 500, but it seems that there should be a not_found_template or something

[22:13] <pjcj> or am I barking up the wrong tree?

[22:13] <sorear> qr/.*/ is Perl 5 syntax

[22:13] <pjcj> ha, sorry, wrong channel

[22:13] <sorear> masak: happy masak is best :D

[22:17] <masak> \o/

[22:21] *** wamba left
[22:24] * lizmat wishes pmichaud strength in getting rakudo * out in time

[22:25] <lizmat> sleep &

[22:25] <masak> oh right. new month.

[22:26] <pmichaud> jnthn: ping

[22:27] <jnthn> pongmichaud

[22:27] <pmichaud> when I run perl6-debug from a dos cmd prompt window, I get the escape sequences instead of colors.  Should I set something differently?

[22:28] <jnthn> pmichaud: For the demos I was running it in another shell.

[22:28] <pmichaud> okay.  I suspect that will be a faq for this release then.

[22:28] <diakopter> what shell?

[22:28] <jnthn> ansicon

[22:28] <pmichaud> (just so we're prepared for it)

[22:28] <jnthn> yeah

[22:29] <jnthn> https://github.com/adoxa/ansicon/downloads

[22:29] <pmichaud> okay, I think I have the star tarball and .msi ready to publish -- any last blockers before I do that?

[22:29] <jnthn> I wanna work out how Git makes it work on the normal console

[22:29] <diakopter> windows 8 smartscreen blocked that app

[22:29] <jnthn> diakopter: How...unsmart 

[22:30] <jnthn> what is smartscreen? :)

[22:30] <pmichaud> it's just windows being "smarter than you" again.  :-P

[22:30] <jnthn> Every release, there's more crap to disable... :-)

[22:30] <diakopter> http://www.ghacks.net/2012/08/24/windows-8-smartscreen-filter-reporting-back-to-microsoft/

[22:31] <jnthn> heh

[22:31] <jnthn> Anyway, I should figure out a better way

[22:31] <jnthn> And make a module that does the Right Thing.

[22:32] <diakopter> EBADSHELL

[22:38] <pmichaud> star tarball and .msi published to http://github.com/rakudo/star/downloads

[22:39] <jnthn> pmichaud++

[22:39] <diakopter> oops, smartscreen blocked that .msi too

[22:39] <jnthn> smartscreen--

[22:39] <diakopter> because it's not signed?

[22:39] <jnthn> Guess I'll sticked with Win7 :)

[22:39] <jnthn> diakopter: What does "blocked" mean?

[22:40] <jnthn> Asks if you really want to install it?

[22:40] <diakopter> full-screen darkened error, nope, no option to run it anyway

[22:40] <jnthn> wat. :/

[22:40] <diakopter> "Windows protected your PC"

[22:41] <jnthn> Is it an IE thing or a Windows thing?

[22:41] <diakopter> Windows SmartScreen prevented an unrecognized app from starting. Running this app might put your PC at risk. Then a link for More info, which says: Publisher: Unknown Publisher

[22:42] <diakopter> oh wait. there is a Run anyway button

[22:42] <diakopter> still, that error could be very scary

[22:45] <pmichaud> oops

[22:45] <pmichaud> need to create a new one; the announcement is wrong about Bailador.

[22:45] * pmichaud does that.

[22:46] <diakopter> pmichaud: the .msi doesn't appear to be signed. is there a way for you to do that?

[22:46] <diakopter> I bet that would make smartscreen like it more

[22:47] <pmichaud> diakopter: I have no clue about windows signing.

[22:47] <jnthn> Not automatically

[22:47] <jnthn> And signing costs.

[22:47] <jnthn> http://www.hanselman.com/blog/UsingCodeSigningCertificatesToSignDownloadedMSIsAndBuildReputationWithIE9SmartScreen.aspx

[22:48] <pmichaud> and there's only so far that I'm willing to go in the name of bringing freedom to those who select products that limit freedom.

[22:48] <jnthn> Indeed.

[22:48] <pmichaud> the whole idea that everyone needs to check with M$ before installing a package... well, I disagree with that.

[22:48] <jnthn> Same.

[22:49] <jnthn> If somebody else wants to go through the cost/trouble of building a distribution that deals with these issues, fine, but it's not somewhere I feel like spending resources.

[22:49] <jnthn> Well, that's why we have separate compiler and distribution releases.

[22:50] <jnthn> Really though, fuck Microsoft for this one. :/

[22:50] <diakopter> Adam signs his Strawberry Perl .msi

[22:51] <jnthn> diakopter: Then there's hope somebody will make a signed MSI for Rakudo some day. :)

[22:51] <diakopter> "strawberryperl.com - Open Source Developer"

[22:51] <diakopter> [email@hidden.address]
[22:51] <diakopter> a Certum Level III certificate

[22:52] <diakopter> .. I thought it was adam..

[22:52] <pmichaud> diakopter: I'm not saying I won't do signing.  I'm saying I don't know how, and that I'm not inclined to do a lot of research on it.  I already spent days figuring out how to create the .msi in the first place.

[22:53] <pmichaud> if someone else will point me to a quick-and-easy signing resource, I'm all for it.

[22:53] <jnthn> pmichaud: The resource I just linked to shows it's anything but quick and easy :(

[22:53] <diakopter> I'll get a cert

[22:53] <pmichaud> jnthn: yes, I know.  the same was true for putting together the .msi in the first place.

[22:54] <diakopter> "The actual signing, once the cert shows up is not too hard."

[22:54] <diakopter> (from that page)

[22:54] <diakopter> a one liner

[22:54] <jnthn> Getting the cert seems to involve more effort than for me to get a Swedish ID card. Something's weird. :)

[22:54] <dalek> star: 9727c86 | pmichaud++ | docs/announce/2012.08:

[22:54] <dalek> star: Remove "Bailador not working" entry from announcement.

[22:54] <dalek> star: review: https://github.com/rakudo/star/commit/9727c8655c

[22:54] <jnthn> Anyways, sleep time for me.

[22:56] <pmichaud> I'm not sure I want to sign things using someone else's cert, fwiw; I want to make sure I know the details behind the cert.

[22:56] <masak> 'night, jnthn, #perl6

[22:57] <diakopter> pmichaud: I meant a new cert.. is that good enough?

[22:57] <pmichaud> depends on how the cert is registered, I suspect.

[23:01] <sorear> if we want to go through the trouble of getting code signing set up, it seems like it would be a lot better to have 'The Perl Foundation' rather than 'Matthew Wilson'

[23:01] <diakopter> :) yeah

[23:02] <diakopter> I bet we can do it

[23:04] <sorear> fwiw, Apple has set up their own semimandatory code signing system for mac os 10.8

[23:04] <diakopter> besides, it appears most of the code signing cert providers won't register one to an individual

[23:05] * sorear wonders how happy code signining people are with bundling of 3rd party code like is done in Star

[23:05] <sorear> hopefully they won't insist on certs for PaFo and all our module authors

[23:07] <dalek> star: ba342ac | pmichaud++ | docs/announce/2012.08:

[23:07] <dalek> star: More release announcement updates; fix some obsolete text.

[23:07] <dalek> star: review: https://github.com/rakudo/star/commit/ba342ac4dc

[23:07] <dalek> star: f6ef640 | pmichaud++ | tools/star/release-guide.pod:

[23:07] <dalek> star: Typo fixes in release-guide.pod.

[23:07] <dalek> star: review: https://github.com/rakudo/star/commit/f6ef640fc1

[23:09] *** fgomez left
[23:11] <pmichaud> sorear: yes, that was my thought -- something like "Rakudo" or "TPF" is better than "person who bought a certificate"  :-)

[23:12] <pmichaud> TPF might have an issue with signing for third-party code, though.  So I'm not exactly sure what umbrella it should go under.

[23:12] <sorear> afaik Rakudo is not a legal entity

[23:13] <sorear> well, you're already signing for third-party code, the CLA is not an ownership assignment

[23:13] <diakopter> I bet we could get one with perl6.org in the title

[23:13] <pmichaud> Rakudo Star includes code that doesn't come from a CLA.

[23:13] <pmichaud> and TPF would likely feel more comfortable about third-party code that comes via CLA.  I meant code that isn't via CLA.

[23:13] <sorear> does stuff get bundled into star without first being signed off on by PaFo or you?

[23:14] <sorear> (does it include an unreviewed ecosystem dump?)

[23:14] <pmichaud> sure, most of the modules aren't via CLA

[23:14] <pmichaud> heck, even nqp itself isn't via CLA

[23:15] <sorear> I think then I am not quite understanding the constraints

[23:15] <sorear> I was thinking this is a matter of "what if star contains bona fide malware, who do we fire?"

[23:16] <pmichaud> that's not an issue I was thinking of, no.

[23:16] <pmichaud> besides that, there's no "fire" involved except in a community sense -- there aren't employees involved here

[23:18] <diakopter> if an incident occurred, more stringent controls would be set up; that's all

[23:19] <sorear> this whole discussion is moot without a TPF representative.

[23:19] <sorear> [Coke]: Who should we ping?

[23:22] <pmichaud> I'm not sure I _want_ to go through TPF, so it's not something I want to be pushing them about yet.

[23:23] *** yarp joined
[23:23] <diakopter> chatting with DigiCert.. they will sell a cert only to orgs registered with the IRS

[23:24] <pmichaud> registering with the IRS is no big deal; I have two already.

[23:24] <sorear> diakopter: will they do DBAs or does it have to be "The Yet Another Foundation"?

[23:25] <sorear> I beleive that's the primary IRS name of TPF

[23:28] <diakopter> Yet Another Society

[23:29] *** benabik joined
[23:33] *** fgomez joined
[23:47] <lichtkind> masak: 

[23:50] *** scottdware joined
[23:52] *** scottdware left
