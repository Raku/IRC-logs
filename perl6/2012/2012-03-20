[00:02] *** shinobicl___ joined
[00:05] <sorear> moritz: ping

[00:27] *** havenn joined
[00:35] *** localhost left
[00:36] *** localhost joined
[00:40] *** Kruppe joined
[00:44] *** havenn left
[00:55] *** havenn joined
[00:55] *** preflex left
[00:56] *** preflex_ joined
[00:56] *** preflex_ is now known as preflex

[01:05] *** wolfman2000 joined
[01:05] *** envi_ left
[01:14] *** havenn left
[01:14] *** scott_ joined
[01:14] *** scott_ is now known as Guest92472

[01:15] *** shinobicl___ left
[01:22] *** whiteknight left
[01:27] <colomon> sorear: \o

[01:27] <sorear> o/ colomon

[01:40] *** alester left
[01:41] *** fgomez left
[01:52] *** sporous left
[01:52] *** sporous joined
[01:55] *** Chillance left
[02:08] *** Trashlord left
[02:09] *** Trashlord joined
[02:22] *** cbk1090 joined
[02:26] *** xinming left
[02:37] *** odoacre left
[02:43] *** xinming joined
[02:45] *** geekosaur left
[02:46] *** geekosaur joined
[02:48] *** geekosaur left
[02:49] *** geekosaur joined
[02:51] *** odoacre joined
[03:29] *** tokuhiro_ joined
[03:31] *** tokuhiro_ left
[03:31] *** tokuhir__ joined
[03:33] *** jaldhar joined
[03:35] *** leprevost joined
[03:36] *** tokuhir__ left
[03:39] *** shinobicl___ joined
[03:40] *** sftp_ left
[03:54] *** orafu left
[03:54] *** orafu joined
[04:02] *** skids left
[04:35] *** envi_ joined
[04:37] *** slavik1 left
[04:39] *** shinobicl___ left
[04:49] *** wolfman2000 left
[04:59] *** leprevost left
[05:18] *** Khisanth left
[05:28] *** kaleem joined
[05:33] *** Kruppe left
[05:39] *** Khisanth joined
[05:43] *** envi_ left
[05:47] *** birdwindupbird joined
[05:57] *** birdwind1pbird joined
[06:03] *** pernatiy joined
[06:04] *** mucker joined
[06:11] *** NamelessTee joined
[06:12] *** mdupont joined
[06:24] <moritz> sorear: pong

[06:26] <moritz> Juerd: rakudo needs about 1.3G RAM to build. So the VM should maybe have 1.5G or so

[06:29] <moritz> that's the biggest requirement, I think

[06:30] <sorear> o/ moritz

[06:31] <sorear> moritz: what I wanted to tell you, diakopter seems to have emailed

[06:32] <moritz> sorear: that host04 will be shut down

[06:32] <moritz> yes, I've received that email too

[06:32] <moritz> which is why I'm talking with Juerd++ about moving stuff to feather3

[06:33] <sorear> diakopter told me on IRC; email is not quite working for me atm

[06:33] <sorear> I need to get out of this tuit black hole

[06:34] <sorear> I am not going to get a new computer while I'm behind on schoolwork :|

[06:36] *** pernatiy left
[06:44] *** tokuhiro_ joined
[06:56] *** birdwind1pbird left
[06:57] *** NamelessTee left
[07:33] <tadzik> good morning #perl6

[07:35] *** birdwind1pbird joined
[07:39] <masak> dobre poranek, #perl6

[07:47] <tadzik> dobry poranek :)

[07:47] <tadzik> and "drodzy tadzik", would actually be "drogi tadziku", or something along

[07:56] *** mzgcz joined
[07:57] *** birdwind1pbird left
[08:00] *** havenn joined
[08:00] <masak> hm... biernik?

[08:01] <masak> or celownik?

[08:02] <masak> I mean, where does the "-u" in "tadziku" come from?

[08:02] <moritz> from the alphabet!j

[08:02] <tadzik> hm

[08:02] <tadzik> biernik is the one about "Tę" :)

[08:02] <moritz> s/j$//

[08:03] <tadzik> masak: it's wołacz

[08:03] <masak> oh!

[08:03] <tadzik> like "oh you"

[08:03] <masak> rightright

[08:03] <tadzik> it sounds the same in miejscownik

[08:03] <masak> I'm not used to wołacz, I think.

[08:03] <tadzik> it's also tadziku, but like in "o tadziku", "about tadzik"

[08:04] <moritz> masak: fwiw on Sunday I got another game by the makes of "Zoff im Zoo"

[08:04] <masak> ooh

[08:04] <tadzik> I remember how it primary school wołacz sounded the most weird

[08:04] <tadzik> oh, nice

[08:04] <moritz> masak: this one is about filling Noah's Ark with animals...

[08:04] <tadzik> btw, every person I've met so far loves Zoff im Zoo :)

[08:04] <moritz> masak: in a way that the ark doesn't capsize, and the animals don't eat each other etc.

[08:05] <masak> moritz: nice!

[08:05] <moritz> and then the animals have to have compatible climate zones

[08:05] <moritz> and shy animals won't enter cabins where there's a predator next to them

[08:05] <moritz> and such fun

[08:05] <masak> tadzik: I expected "tadziku" to be celownik, but it makes sense that it is wołacz. it wouldn't make much sense if t'were miejscownik :)

[08:06] <moritz> it's a bit overwhelming at first, but the second run is quite fun

[08:06] <tadzik> masak: celownik is the "I'm looking at", with questions "komu? czemu?". The answer to komu, czemu is naturally "tadzikowi"

[08:07] *** am0c joined
[08:09] <masak> naturally. :)

[08:09] <masak> yeah, that's how celownik works in most languages. it's like a "secondary object" thing.

[08:10] <tadzik> do you know the trick with questions?

[08:10] <tadzik> probably, yes

[08:10] <masak> is it specially cased in some way?

[08:10] <masak> Russian specially cases negative questions.

[08:11] <tadzik> no, I mean the questions, helpers to przypadki

[08:11] <tadzik> as with "komu? czemu?"

[08:11] <bonsaikitten> chinese just tags the statement with "ma"

[08:11] <bonsaikitten> very simple and elegant :)

[08:12] <masak> bonsaikitten: well, that's one way they do it :)

[08:12] <masak> tadzik: I think I get the principle, yes. I don't know the exact words in Polish, though.

[08:12] <bonsaikitten> masak: right, language is never that mathematically clean

[08:13] <masak> bonsaikitten: of all the natural language grammars though, Mandarin has the closest to mathematical elegance that I've encountered.

[08:13] <tadzik> masak: I wouldn't remember what was behind separate przypadki if I didn't remember the questions :) I'll write a table for you

[08:13] <masak> haha

[08:13] <bonsaikitten> masak: only overshadowed by the homophomes and ambiguity in all other parts ...

[08:14] <bonsaikitten> sometimes I have the feeling that most chinese don't understand each other at all

[08:14] <masak> :)

[08:14] <masak> homophones are inevitable in such a crowded phoneme space.

[08:14] <masak> the trick to being understood is to make sure you're saying things that've been said ten thousand times before. :P

[08:15] <tadzik> masak: oh, see http://pl.wikipedia.org/wiki/Przypadek#Przypadki_w_j.C4.99zyku_polskim

[08:15] <bonsaikitten> masak: or write them down

[08:15] <bonsaikitten> (haha, so funny)

[08:16] *** pmurias joined
[08:16] <masak> ;)

[08:17] <masak> tadzik: once you start learning more case-based languages, each przypadek takes on its own life, and you won't need to "Kogo? Czego?" as much, I think.

[08:18] <tadzik> masak: maybe

[08:18] <masak> like, I have a clear sense of what "biernik" is and what its function is, regardless of language. (but in my head, I usually call it "the accusative")

[08:18] <tadzik> akkusativ

[08:18] <tadzik> that rings a bell

[08:19] * moritz accuses masak of akkusativ

[08:19] * masak feels accursed

[08:20] <masak> oh, and if you *really* want to get to the bottom with how grammars work, study a constructed language.

[08:20] <bonsaikitten> knowing multiple languages helps, but it makes it very hard to focus at times

[08:20] <tadzik> "Oslo Perl Monger's first hackathon in 2012"

[08:20] <bonsaikitten> I hate it when I remember a word I need in three other languages :\

[08:20] <tadzik> so there'll be like, three more this year alone? :)

[08:21] <tadzik> oh, I usually just let the english word slip through when I forget a polish word

[08:21] <masak> bonsaikitten: yeah. there's research showing that bilinguals have two language engines constantly running in their brains, and it trips them up sometimes. but recent research also shows that it does so in a good way. :) makes you stop and reflect.

[08:21] <tadzik> especially since I sometimes don't know the polish equivalent, or the meaning in polish

[08:22] <bonsaikitten> masak: indeed, and it makes it easy to pick up new languages, but it's getting crowded in my head

[08:22] <masak> I love living in a crowded head.

[08:22] <tadzik> do clones live all in one head?

[08:22] <moritz> what do your clones think about that?

[08:22] <moritz> :-)

[08:23] <tadzik> :)

[08:23] <sorear> masak: does it matter how early you learn the languages?

[08:23] <bonsaikitten> sorear: not as much as people claim

[08:23] <bonsaikitten> with age you get slower in changing/adapting, but that's mostly a function of training

[08:23] <masak> sorear: well, I learned Mandarin at 25 just in case it matters. :) but I've seen pensiners learn new languages, so...

[08:24] <masak> pensioners*

[08:24] <masak> retirees. whatever. :)

[08:24] <bonsaikitten> masak: I'm 30 and just started learning it

[08:24] <dalek> roast: 2023f06 | moritz++ | S04-phasers/pre-post.t:

[08:24] <dalek> roast: test blockless PRE and POST

[08:24] <dalek> roast: review: https://github.com/perl6/roast/commit/2023f06895

[08:25] * sorear wants to learn mandarin someday

[08:25] <masak> bonsaikitten: hey, 我也是30岁的！

[08:26] <bonsaikitten> masak: I can't read much yet

[08:26] <masak> sorear: I think you'll like it.

[08:26] <sorear> something about being as old as the Earth?

[08:26] <bonsaikitten> masak: ah. are you in China?

[08:26] <masak> bonsaikitten: "I too am 30 years old"

[08:26] <masak> bonsaikitten: no, southern Sweden.

[08:26] <sorear> I wonder what the metaphor of 也 is there

[08:27] <masak> sorear: "also".

[08:27] *** fglock joined
[08:27] <masak> I don't know the etymology of that one offhand.

[08:27] <sorear> masak: is that the same character that jp glosses as /earth/?

[08:27] <bonsaikitten> masak: interesting choice :)

[08:28] <masak> sorear: you're probably thinking of 地 for "earth/soil".

[08:28] <sorear> hmm, apparently not

[08:29] <sorear> right.

[08:29] <masak> sorear: note, identical sound component, but the radical/meaning component in 地 is (fittingly) "earth".

[08:31] * sorear has not quite mastered the character set.

[08:31] <fglock> pmurias: nice! #tests

[08:31] <sorear> o/ fglock 

[08:32] <pmurias> fglock: hi

[08:33] <fglock> o/

[08:33] * sorear ---> sleep

[08:33] * fglock wake up

[08:38] <pmurias> fglock: the way small numbers are now stringified is a bit of a guess as i only found a description of it on perlmonks and it wasn't clear from the perl5 source that it's always like that

[08:42] <fglock> pmurias: it looks good; we can add more tests later

[08:42] <fglock> (adding more context tests now)

[08:46] *** mj41_nb joined
[08:47] <pmurias> offical or custom ones?

[08:48] <masak> 'night, sorear. dream of mastering the entire character set.

[08:49] <fglock> adding custom tests - the official ones are too general, I can't test specific features

[08:54] <fglock> now let's try to make the test pass

[08:55] * pmurias has to go some extremely boring networking classes at uni which consist of staring a the screen waiting (with no internet access) for others to type some commands

[08:55] *** pmurias left
[08:56] <moritz> bring your own laptop and do some perl 6 coding :-)

[08:58] <moritz> r: ENTER { say 1 }

[08:58] <p6eval> rakudo b2505b: OUTPUT«1␤»

[08:58] <moritz> r: KEEP { say 1 }

[08:58] <p6eval> rakudo b2505b: OUTPUT«1␤»

[08:58] <moritz> r: UNDO { say 1 }

[08:58] <p6eval> rakudo b2505b:  ( no output )

[08:58] <moritz> r: UNDO { say 'undone' }; die 'foo'

[08:58] <p6eval> rakudo b2505b:  ( no output )

[08:58] <moritz> that doesn't look right :/

[08:59] * masak submits rakudobug

[09:00] <masak> expected output: 'undone␤foo at blablabla'

[09:00] *** tokuhiro_ left
[09:00] <moritz> r: do { UNDO say "undone"; die "foo" }

[09:00] <p6eval> rakudo b2505b: OUTPUT«foo␤  in block <anon> at /tmp/zh8VsY8sVT:1␤␤»

[09:00] *** tokuhiro_ joined
[09:00] <moritz> r: try do { UNDO say "undone"; die "foo" }

[09:00] <p6eval> rakudo b2505b: OUTPUT«undone␤»

[09:00] <moritz> n: do { UNDO say "undone"; die "foo" }

[09:00] <p6eval> niecza v15-4-g1f35f89: OUTPUT«undone␤Unhandled exception: foo␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /tmp/Md7BlPOAh4 line 1 (ANON @ 1) ␤  at /tmp/Md7BlPOAh4 line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 3838 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.se…

[09:02] <masak> r: try { UNDO say "undone"; die "foo" }

[09:02] <p6eval> rakudo b2505b: OUTPUT«undone␤»

[09:05] *** tokuhiro_ left
[09:22] *** jerome_ left
[09:30] *** sunnavy_ joined
[09:30] *** sunnavy_ left
[09:34] *** jerome_ joined
[09:45] *** dakkar joined
[09:45] <masak> r: { UNDO say "undone"; fail }; say "alive"

[09:45] <p6eval> rakudo b2505b: OUTPUT«alive␤»

[09:45] <masak> :/

[09:46] <masak> r: sub foo { UNDO say "undone"; fail }; foo; say "alive"

[09:46] <p6eval> rakudo b2505b: OUTPUT«alive␤»

[09:46] <moritz> n: sub foo { UNDO say "undone"; fail }; foo; say "alive"

[09:46] <p6eval> niecza v15-4-g1f35f89: OUTPUT«===SORRY!===␤␤Undeclared routine:␤      'fail' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1362 (die @ 3) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 33) ␤  at /home…

[09:56] *** arnsholt_ is now known as arnsholt

[10:07] *** conntrack left
[10:07] *** mzgcz left
[10:07] <masak> someone solves the preschooler problem by feeding it into an OLS regression: http://www.cerebralmastication.com/2012/03/solving-easy-problems-the-hard-way/

[10:07] *** daxim joined
[10:10] <arnsholt> "There. I’m as smart as a preschooler. And I have code to prove it." =D

[10:11] *** tokuhiro_ joined
[10:13] <moritz> though of course it requires to first know (or guess) that the frequencies of the digits are important, not their position

[10:14] <bbkr> what's the difference between "$d where { !$d.defined }" and Any:U in signature?

[10:14] <moritz> the latter is probably more expensive

[10:15] <moritz> erm, other way round

[10:15] <bbkr> Any:U is 40% faster in benchmarks

[10:15] <moritz> the where-block is slower

[10:15] <moritz> but semantically they should be the same

[10:16] *** Guest92472 left
[10:16] <masak> so :U and :D target .defined, not .DEFINITE?

[10:16] <bbkr> https://github.com/moritz/json/blob/nom/lib/JSON/Tiny.pm#L45 - this can be optimized then :)

[10:16] <dalek> rakudo/nom: d76065e | moritz++ | src/core/Exception.pm:

[10:16] <dalek> rakudo/nom: fix typo

[10:16] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d76065e777

[10:17] <moritz> bbkr: already is, in branch 'master'

[10:17] <moritz> I should probably delete the 'nom' branch

[10:18] <moritz> done.

[10:18] <bbkr> indeed it is optimized. moritz++

[10:19] <moritz> bbkr: but your question helped me find a typo in the rakudo sources :-)

[10:19] <moritz> I did an  ack 'where.*defined'

[10:19] <moritz> and an error message showed up, and I noticed it was a typo/grammaro :-)

[10:19] <bbkr> :)

[10:23] <masak> bbkr++

[10:32] *** tokuhiro_ left
[10:33] *** tokuhiro_ joined
[10:36] *** tarch joined
[10:37] *** tokuhiro_ left
[10:42] *** havenn left
[10:47] <masak> r: my $o = class {}; role W[$s] { method q { say $s; nextsame } }; ((((((($o but W["wrapper?"]) but W["great"]) but W["a"]) but W["become"]) but W["wanna"]) but W["you"]) but W["so"]).q

[10:47] <p6eval> rakudo d76065: OUTPUT«so␤you␤wanna␤become␤a␤great␤wrapper?␤»

[10:47] <masak> \o/

[10:48] <masak> infix:<but> is the OO decorator's dream come true.

[10:50] <arnsholt> That's pretty awesome! =D

[10:51] *** jt__ joined
[10:53] <masak> I think that use is a seed for a talk in itself.

[10:53] <masak> consider the great uses OO decoration could be put to in a graphical-primitives framework, or a windowing system.

[10:54] <masak> the mind boggles.

[10:54] <jt__> r: say "=" x -5

[10:54] <p6eval> rakudo d76065: OUTPUT«␤»

[10:54] <moritz> I'd caution against overusing that pattern

[10:55] <moritz> I think it makes control flow hard to follow

[10:55] <arnsholt> Quite. There's some nifty potential for obfus there

[10:55] <moritz> and the objects hard to introspect

[10:56] <arnsholt> On the other hand, I think I might steal that one for a JAP6H sigline

[10:56] <jt__> r: say "=" x 5

[10:56] <p6eval> rakudo d76065: OUTPUT«=====␤»

[10:56] * moritz ponders updating the starry obfu

[10:56] <jt__> r: say "=" x 0

[10:56] <p6eval> rakudo d76065: OUTPUT«␤»

[10:59] <masak> r: role W[$s] { method q { say $s; nextsame } }; ([but] class {}, W["hacker"], W["6"], W["Perl"], W["another"], W["just"]).q

[10:59] <p6eval> rakudo d76065: OUTPUT«just␤another␤Perl␤6␤hacker␤»

[10:59] <masak> \o/

[11:00] <arnsholt> Ok, I'm gonna steal that one instead =D

[11:00] <moritz> r: role W[$s] { method q { say $s; nextsame } }; ([but] class {}, <Just another Perl 6 hacker>.reverse.map: {W[$_]}).q

[11:00] <p6eval> rakudo d76065: OUTPUT«Just␤another␤Perl␤6␤hacker␤»

[11:01] <arnsholt> r: role W[$s] { method q { say $s; nextsame } }; ([but] class {}, W["hacker"], W["Perl6"], W["another"], W["just"]).q

[11:01] <p6eval> rakudo d76065: OUTPUT«just␤another␤Perl6␤hacker␤»

[11:02] <arnsholt> Whee. Let's see how my colleagues respond to this one =D

[11:02] <masak> mwhaha

[11:02] <moritz> std: [xx] 3

[11:02] <p6eval> std 1ad3292: OUTPUT«ok 00:01 109m␤»

[11:03] <moritz> it's not too diffy?

[11:03] <arnsholt> One of the professors replied with C-x C-s to my old one (:wq)

[11:04] <masak> :P

[11:05] <masak> moritz: infix:<xx> doesn't feel diffy to me.

[11:05] <masak> it accepts a list and produces a list.

[11:05] <moritz> hm right

[11:05] <moritz> std: [x] 3

[11:05] <p6eval> std 1ad3292: OUTPUT«ok 00:01 109m␤»

[11:05] <masak> same deal there.

[11:07] <masak> the 'diffy' label is for things like infix:<lt>, that absorb not-necessarily-booleans and emit booleans.

[11:08] *** benabik left
[11:08] <masak> oddly, STD.pm6 places the whole 'structural infix' category, of which infix:<but> is a part, under the 'diffy label'.

[11:08] *** bacek left
[11:09] <masak> I can see it for all the others in that category: 'does', '<=>', 'cmp', 'leg', '..', but not for 'but'.

[11:16] <colomon> Just reading http://news.ycombinator.com/item?id=3728670 and thinking that almost everything he lists is actually shorter in p6...

[11:17] * colomon can't remember the last time he thought about using chomp....

[11:26] *** NamelessTee joined
[11:29] *** tokuhiro_ joined
[11:30] <masak> I think about using chomp whenever I use Perl 5, which is quite often. :)

[11:30] <masak> when I can get away with it, I use variations of 'perl -l', though.

[11:40] *** mucker left
[11:57] *** grondilu joined
[11:57] <grondilu> on planetsix.perl.org there is an article from the future!!  (April, 14th 2012)

[12:00] *** benabik joined
[12:06] <flussence> stumped on something: I've got a module that exports subs and I'm trying to split those into smaller modules and just have one top-level module that imports them all. Problem is neither rakudo nor niecza support `use :EXPORT`. Is there any other way to do that right now?

[12:08] <flussence> I suppose making them roles would work, but they make more sense as standalone modules...

[12:26] *** havenn joined
[12:28] <moritz> r: my &foo is export = &join;

[12:28] <p6eval> rakudo d76065:  ( no output )

[12:28] <moritz> flussence: maybe you can cheat with something like that

[12:28] *** NamelessTee left
[12:29] *** tokuhir__ joined
[12:30] *** Guest18067 joined
[12:30] *** abercrombie left
[12:30] *** jt__ left
[12:31] *** tokuhiro_ left
[12:31] *** [Coke] left
[12:32] *** [Coke]_ joined
[12:32] <masak> grondilu: yeah. sorry about that.

[12:32] <masak> there's also arnsholt's popular piece "No such pipe, or this pipe has been deleted"

[12:33] <masak> which I first took to be a scathing criticism of Super Mario Bros, but it turns out it's a Yahoo snafu of some sort.

[12:35] <moritz> r: https://gist.github.com/2134734

[12:35] <p6eval> rakudo d76065: OUTPUT«Just another Perl»

[12:35] <moritz> that's the updated version of the Starry Obfu

[12:36] <tadzik> oh my

[12:38] <masak> mojose. moritz++

[12:39] <moritz> there were two changes that broke the old one

[12:39] <moritz> fist it assumed that .map was eager

[12:39] <moritz> and the second is that (* + *) used to generate an arity-1 closure

[12:39] <moritz> that's why the xx.count is now necessary

[12:40] <masak> ah. the second one I had guessed.

[12:40] <moritz> the first one is the reason for adding a + in front

[12:40] <moritz> though maybe ~ would have more style

[12:40] *** lcc joined
[12:41] <lcc> is perl6 going to be a completely different yet similar language to perl 5? will they coexist side by side?

[12:41] <moritz> it's not going to, it already is

[12:41] <moritz> and yes, they do coexist, and will continue to

[12:41] <moritz> though we hope to also integrate them

[12:41] *** att_ left
[12:42] *** lcc left
[12:42] *** bluescreen10 joined
[12:43] <masak> the specification phase of Perl 6 -- the part where questions could legitimately start with "is Perl 6 going to..." -- ended in late 2004.

[12:43] <grondilu> r:  say reduce 1/*+*, 2 xx 10, 1; # A cool way to write sqrt2 (continuous fractions are cool :-)  )

[12:43] <p6eval> rakudo d76065: OUTPUT«1.41421355164605␤»

[12:43] <daxim> too informative == scary

[12:43] <masak> probably, yes.

[12:43] <daxim> so no more spec changes? I don't believe it

[12:44] <masak> I didn't say that.

[12:44] <moritz> r: sub infix:<c> { 1 / $^a * $^b }; say [c] 2 xx 10

[12:44] <p6eval> rakudo d76065: OUTPUT«1␤»

[12:44] <daxim> it sounded so

[12:44] *** envi_ joined
[12:44] *** zhutingting joined
[12:44] <moritz> r: sub infix:<c> { 1 / $^a + $^b }; say [c] 2 xx 10

[12:44] <p6eval> rakudo d76065: OUTPUT«2.41421362489487␤»

[12:44] <daxim> do you mean that the essential part of the spec was done by 2004?

[12:44] <masak> S01..S06, S09..S13 were created by 2004.

[12:44] <moritz> r: sub infix:<c> { 1 / $^a + $^b }; say [c] 1, 2 xx 10

[12:44] <p6eval> rakudo d76065: OUTPUT«2.41421349985132␤»

[12:45] <moritz> r: sub infix:<c> { 1 / $^a + $^b }; say [c] 2 xx 10, 1

[12:45] <p6eval> rakudo d76065: OUTPUT«1.41421355164605␤»

[12:45] *** preflex left
[12:45] *** preflex_ joined
[12:45] <masak> after that, they have been *refined*, and sometimes significantly changed or revised, but we haven't changed goals or anything like that.

[12:45] *** preflex_ is now known as preflex

[12:45] <masak> we're still trying to create the language outlined in those synopses.

[12:45] <moritz> daxim: the time where earth-changing proposals were likely to be accepted is over

[12:46] <masak> interestingly, just as that phase closed, Pugs got going.

[12:46] *** domidumont left
[12:46] <masak> maybe Pugs was in some sense inevitable.

[12:46] <daxim> what if masak figures out that the harder part of macros can't be done, and it is better dropped like that other feature (I can't remember now)?

[12:46] <masak> class-level PRE/POST?

[12:46] <masak> er, method-level PRE/POST?

[12:47] <moritz> for example just the other day there was a post on parrot-dev calling for Perl 6 to be "parallel by default". That mostly provoked a small chuckle here

[12:47] <daxim> drawing a blank on that one

[12:47] <masak> let me know if you remember which feature :)

[12:47] <moritz> want()?

[12:47] <masak> anyway, answering your question:

[12:47] <daxim> yes, I think it was want()

[12:47] <masak> want simply didn't fit in once we thought of MMD hard enough.

[12:48] <masak> there can't be a universe with both want() and our kind of MMD.

[12:48] <masak> anyway, answering your question:

[12:48] <masak> (1) I'm certain there will be surprises wrt macros. they're underspec'd.

[12:48] *** Teratogen joined
[12:48] <Teratogen> greetings and felicitations

[12:49] <masak> o/

[12:49] <Teratogen> hi masak

[12:49] *** domidumont joined
[12:49] <masak> (2) I don't see any obstacles, other than things being generally non-trivial, ahead. and I've been thinking a lot about macros in Rakudo in the last 6 months.

[12:49] <zhutingting> rakudo: say [+] 1..100

[12:49] <p6eval> rakudo d76065: OUTPUT«5050␤»

[12:50] <moritz> (3) there are already languages that have macros quite similar to what Perl 6 wants

[12:50] <moritz> (there wasn't any language that had want() *and* multi dispatch)

[12:50] <masak> in fact, what's positive about nom and the recent refactors, is that they make the vision we have for macros eminently doable. it's almost as if those refactors had macros in mind. (which I don't think they did.)

[12:52] <masak> this last detail points to a larger trend, which I think may become a bigger influence in the design as we go along: it seems that we are increasingly finding deep interrelations between previously unrelated parts of the Perl 6 design.

[12:53] <masak> it's as if patterns emerge, and we can choose to capitalize on them to make the design simpler and more consistent.

[12:53] <masak> things that go against such emerging patterns are in danger of becoming scrapped. the method-level PRE/POST were like that.

[12:54] <masak> macros, on the other hand, show many of the same interactions with parsing and fixups as parametric roles do. which makes me very hopeful.

[12:54] <moritz> although it's sometimes disappointing, we confine ourselves to the possible :-)

[12:55] <masak> I'm willing to settle with the unbelievably awesome. :)

[12:57] <moritz> that sometimes mean that we rip out features that just aren't possible, or don't make sense

[12:57] * geekosaur would not say "scrapped" there, so much as "set aside until the way they fit in becomes visible"

[12:59] *** xinming left
[13:01] *** xinming joined
[13:02] <masak> fair enough.

[13:02] <moritz> well, for want() we know it's not computable. You can accuse me of lacking vision, but I don't see how that's ever going to change

[13:03] <masak> and for method PRE/POST it didn't adhere to normal lexical scoping rules, which sounds rather tame but is actually pretty damning.

[13:04] <masak> I'd say it rather indicates that we wanted something else, not that particular feature :)

[13:05] <geekosaur> I guess i"m looking at it at a more meta level; I'm seeing them both as concepts which are not workable as is but which can serve as placeholders until we figure out what we *really* want

[13:06] <geekosaur> so, really the same thing looked at differently

[13:06] <moritz> we have that, in the case of want

[13:06] <moritz> (objects that can do different things based on the context they are used in)

[13:06] <masak> and jnthn quickly provided a way to do PRE/POST submethods through the metaclass.

[13:07] <masak> and TheDamian suggested a way to do DbC, though it hasn't been tried yet.

[13:09] <masak> my point is that we're now clearly living in the third age. 2000-2004 was the Age of Spec. 2005-2011(+-1) was the Age of Implementation. the transition is fuzzy, but we're now increasingly living in the Age of Product.

[13:10] <PerlJam> masak++ quite so!

[13:10] <masak> coming to terms with living under new circumstances is hard, even for us.

[13:10] <moritz> though I haven't quite grokked yet (or forgotten) how the traits-based solution to DbC solves the scoping problem

[13:11] <masak> it's not just about telling confuzzled newbies "it's not 'Perl 6 will be', it's 'Perl 6 is'", we have to fully make that transition ourselves, too.

[13:12] <moritz> I wonder if p6l can ever make that transition

[13:13] <masak> that's probably mostly up to us.

[13:13] *** havenn left
[13:13] <masak> arguably its main goal -- a general platform for the discussion about the design of Perl 6 -- has largely come to pass.

[13:14] <moritz> well, we still need such a platform, but on a quit different level

[13:14] <arnsholt> moritz: I think the decree "the spec as of revision deadbeef" is Perl 6.0.0 might shake up that, when it comes =)

[13:15] <moritz> arnsholt: I dearly hope so

[13:15] <PerlJam> arnsholt: Who makes said decree?

[13:15] <PerlJam> arnsholt: and how do we get him to do so?  ;)

[13:15] <arnsholt> TimToady, I'd assume

[13:16] <moritz> aye

[13:16] <masak> fwiw, this is one of my favorite moments on p6l -- the meeting between the Idealists and the Pragmatists: http://www.mail-archive.com/perl6-language@perl.org/msg32926.html

[13:16] <moritz> and we get him to do it by presenting an awesome compiler and ask "CAN HAZ P6 PULEZE?"

[13:16] <arnsholt> And we know how to make him do it: Iterate on and implement the spec until all parts have been explored enough ;)

[13:18] <moritz> masak: yes, that's epic

[13:19] *** tyatpi joined
[13:20] * PerlJam starts writing the patch for a base-4 notation

[13:20] <PerlJam> (another base-4 notation I shoudl say)

[13:21] *** att_ joined
[13:21] <masak> I believe interesting, constructive discussions could (and probably should) still take place on p6l. we still have stuff to figure out in the vicinity of slangs, I'm sure.

[13:22] <PerlJam> Perl 6 -- a programming language that you can tell jokes in.

[13:23] <moritz> but how do we tell them that we are *not* after hand-waving ideas?

[13:23] <masak> lead by example? start every email with "As you know in Rakudo [...] <running code>"

[13:23] <fglock> pmurias: t/op/splice.t pass

[13:26] <PerlJam> For all the people using Perl 6, it seems perl6-users doesn't get enough traffic.

[13:27] <PerlJam> but I guess if no one is using it "for real" or "in production" it doesn't count?

[13:29] <masak> maybe p6u would have more traffic if IRC didn't absorb much of it.

[13:31] <PerlJam> Did any of you see Ovid's "kickin' it old school" post?  http://blogs.perl.org/users/ovid/2012/03/kickin-it-old-school.html

[13:32] *** kaleem left
[13:32] <daxim> I've seen it.

[13:32] <PerlJam> I remember reading Byte and Home Computer Magazine and getting some book with BASIC programs in them so that I could type those programs in and modify and extend them.

[13:32] <PerlJam> Where are the equivalent publications of today?

[13:32] <daxim> they died around 1999

[13:33] *** kaleem joined
[13:33] *** sftp joined
[13:33] <moritz> you can now copy&paste code from blogs

[13:36] *** pmurias joined
[13:38] <PerlJam> I think my conceptualization of "Using Perl 6" has changed  (or whatever book would fill that niche)

[13:38] <PerlJam> Currently it's kind of an exposition of Perl 6 features.  I  think we need something that more akin to "BASIC Computer Games" -- here's a collection of neat things you can do with Perl 6

[13:39] <masak> PerlJam: "BASIC Computer Games" was on my mind when I wrote the 30 June blog posts last summer.

[13:39] <PerlJam> (rosettacode leans this way but its idea of "neat things" isn't quite broad enough for the general population)

[13:40] <masak> PerlJam: I've put them in a github repo to edit them into book form, but I haven't gotten around to the actual editing. maybe next June. :)

[13:40] <masak> I believe it would be quite a nice book.

[13:40] <masak> even as a PDF.

[13:42] <masak> in fact, http://www.atariarchives.org/basicgames/showpage.php?page=106 and http://www.atariarchives.org/basicgames/showpage.php?page=44 both ended up in the June blogging.

[13:42] <PerlJam> "From zero to adventure in 30 days"  ;)

[13:42] <masak> and I didn't even know those were online nowadays. that's awesome.

[13:43] <masak> oh, and http://www.atariarchives.org/basicgames/showpage.php?page=80 too, I guess.

[13:45] *** xinming left
[13:48] <PerlJam> masak: looking over your repo, I'd say it would make a good book.   But one thing that bothers me is that some of the articles are still in terms of "Perl 6 feature" rather than "Something neat that you can do that just happens to use the feature"   (if that makes enough sense)

[13:48] *** Trashlord left
[13:49] <masak> PerlJam: it does. I'll keep that in mind when editing.

[13:49] <PerlJam> Those early BASIC books weren't about loops or arrays or whatever, they were about games and finance and home automation and whatever

[13:49] <masak> yes, exactly.

[13:51] <masak> someone asked on Twitter a while back "What should go in a programming cheat sheet for children?"

[13:52] <masak> I replied "Children don't care about conditionals and loops. They want to draw graphics on the screen, play sounds and melodies, and make the computer behave in cool ways."

[13:52] <masak> or something to that effect in the span of 140 characters.

[13:52] <PerlJam> "Wonder"

[13:53] <PerlJam> The hook that got me programming was a small thing:  I typed some stuff in, and the computer did something.   It didn't much matter what it did, just that I was able to affect change in the small universe of the computer.

[13:54] <PerlJam> IT was a bonus that I could program graphics or music or a speech synthesizer or some LEDs or whatever

[13:54] <huf> it's pretty much the one of two ways you can be a real life mage

[13:54] <huf> and the only way to do it if you arent very good with people

[13:54] <jnthn> The UNDO not firing when unwinding the stack due to an exception is just an NYI, I think.

[13:54] <masak> Programming is the sufficiently advanced magic in the world that's increasingly indistinguishable from magic.

[13:55] <huf> (programming and being in command of a large organizations are the only two ways i can think that simple thought can change the world)

[13:55] <masak> s/magic/technology/

[13:55] <jnthn> I don't recall explicitly making it work, and I can see it not "just falling out" of what I did.

[13:55] <masak> jnthn: what about UNDO when calling exit() ? :)

[13:56] <jnthn> No idea.

[13:56] *** skids joined
[13:56] <jnthn> Most phasers don't do the right thing if you explicitly exit right now.

[13:56] <jnthn> ENDs don't run, for example.

[13:56] <masak> right.

[13:57] *** xinming joined
[14:02] <moritz> any volunteers for the rakudo release on Thursday?

[14:03] *** Su-Shee joined
[14:03] <Su-Shee> hi all.

[14:03] <moritz> \o Su-Shee 

[14:03] <timotimo> moritz: will this be the first rakudo release with bs?

[14:03] <moritz> timotimo: I think so

[14:04] <jnthn> Yes.

[14:04] <timotimo> that's cool

[14:04] <moritz> timotimo: do you want to do the release?

[14:04] <grondilu> "bs"??

[14:04] <moritz> it's not hard, just following instructions; and you can ask here when something's not clear

[14:04] <timotimo> sorry, no. i'm swamped with uni exam learning and only occasionally dare to check out irc :|

[14:04] <moritz> grondilu: "bounded serialization"

[14:04] <grondilu> oh, ok

[14:04] <moritz> timotimo: quite understandable

[14:05] <masak> I'm ready to do the release. I'd prefer it if someone new did it.

[14:05] <masak> hi, Su-Shee 

[14:06] <timotimo> will rakudo (or perl6 if that's something to put into the spec) get something like pyc files? that is pre-serialized versions of the code? so that, for instance, if i have a BEGIN block that's pure, or maybe a couple of constants, they can be read directly instead of being constructed at startup/use time?

[14:07] <moritz> yes

[14:07] <moritz> currently you have the option to precompile modules do PIR

[14:07] <moritz> but we're not very happy with that

[14:07] *** s1n left
[14:07] <moritz> in the long run, we want rakudo to manage the compilation cache

[14:08] <PerlJam> timotimo: that's not a future-tense sort of thing even; it's available now

[14:08] <jnthn> moritz: Probably in the medium run :)

[14:08] <jnthn> moritz: It's a continual pain point.

[14:08] <lumi__> So I set up nightly smolder for Rakudo, but it doesn't seem to pick up the parrot revision (it's sent as "1", I think, for some reason)

[14:09] <timotimo> cool

[14:10] <benabik> parrot_revision is a fossil from the days of SVN.  parrot_config git_describe or sha1 are the way to get the version now.

[14:10] *** xinming left
[14:10] *** xinming joined
[14:10] <moritz> yep, we need to fix the Makefile for that

[14:12] *** snearch joined
[14:13] *** Vespakoen joined
[14:15] <grondilu> r: sub CF($x is copy) { gather loop { take my $a = $x.floor; last if $x == $a; $x = 1/($x - $a) } }; say CF(<100/13>)

[14:15] <p6eval> rakudo d76065: OUTPUT«Method 'eager' not found for invocant of class 'Integer'␤  in sub coro at src/gen/CORE.setting:4793␤  in method reify at src/gen/CORE.setting:4774␤  in method reify at src/gen/CORE.setting:4545␤  in method reify at src/gen/CORE.setting:4545␤  in method gimme at src…

[14:15] <grondilu> this used to work, didn't it?

[14:15] *** slavik1 joined
[14:16] <moritz> yes

[14:16] <moritz> a workaround is   gather while True { ... }   iirc

[14:16] <grondilu> ok

[14:17] <moritz> though note that rakudo never had smart <...> literals

[14:17] <moritz> so you'd need to write it as CF(100/13) 

[14:17] <grondilu> r: say (<1/3> + 1).perl

[14:17] <p6eval> rakudo d76065: OUTPUT«4/3␤»

[14:17] <grondilu> ?

[14:17] <moritz> oh

[14:17] <moritz> wow

[14:17] <grondilu> :)

[14:18] <moritz> I'm really behind

[14:18] <moritz> nom: say <1/3>.perl

[14:18] <p6eval> rakudo d76065: OUTPUT«"1/3"␤»

[14:18] <moritz> hm

[14:18] <grondilu> cool, huh?

[14:18] <moritz> nom: say <1/3>.WHAT

[14:18] <p6eval> rakudo d76065: OUTPUT«Str()␤»

[14:18] <moritz> that's not quite right

[14:18] <masak> something fishy going on here.

[14:18] <masak> maybe the numification works...

[14:18] <moritz> still better than I thought it was

[14:18] <masak> ...but nothing else.

[14:18] <grondilu> r: say eval(<1/3>).WHAT

[14:18] <p6eval> rakudo d76065: OUTPUT«Rat()␤»

[14:18] <moritz> nom: say '1/3'.Numerc.perl

[14:18] <p6eval> rakudo d76065: OUTPUT«Method 'Numerc' not found for invocant of class 'Str'␤  in block <anon> at /tmp/iZ_yoXOuna:1␤␤»

[14:18] <moritz> nom: say '1/3'.Numeric.perl

[14:18] <p6eval> rakudo d76065: OUTPUT«1/3␤»

[14:18] <masak> nom: say +<1/3>

[14:18] <p6eval> rakudo d76065: OUTPUT«0.333333333333333␤»

[14:19] <masak> yes, that's it.

[14:19] <moritz> yep, .Numeric is smarter than <>

[14:19] <mikemol> PerlJam: RC's idea of 'neat things' isn't sufficiently broad, IMO. Create tasks for what you'd like to see. Some folks will probably get in a huff at first, but things usually settle.

[14:19] <grondilu> perl6: say <1/3>.WHAT

[14:19] <p6eval> niecza v15-4-g1f35f89: OUTPUT«Rat()␤»

[14:19] <p6eval> ..pugs: OUTPUT«Str␤»

[14:19] <p6eval> ..rakudo d76065: OUTPUT«Str()␤»

[14:20] <PerlJam> Anyone going to http://emerginglangs.com/ ?

[14:20] <PerlJam> Perl 6 is still "emerging" isn't it?  :)

[14:20] <mikemol> I haven't been able to be as active on RC as I'd like these past several months, so I haven't been able to participate in the discussions which have led the site to take a strong purist flavor recently.

[14:20] * mikemol checks to see if he has an ebuild of it

[14:21] <mikemol> Mm. Masked.

[14:23] <PerlJam> mikemol: We'll see if I can muster enough activation energy to fire  :)

[14:25] <mikemol> I tried writing an automaton task ages ago, but it didn't really pan out. Only a couple examples. Too complex, I suppose.

[14:26] <masak> PerlJam: http://irclog.perlgeek.de/perl6/2010-04-29#i_2276062

[14:29] <PerlJam> masak: a) that was when emeringlangs was a OSCON track rather than at StrangeLoop and b) from some perspective, Perl is perhaps a *re*emerging language and c) I asked because I don't expect that everyone has the same opinions as TimToady nor do I expect everyone to kowtow to his opinion   :-)

[14:31] <dalek> rakudo/nom: 704a215 | moritz++ | tools/build/Makefile.in:

[14:31] <dalek> rakudo/nom: try to fix parrot revision reporting for smolder submissions. lumi++

[14:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/704a215c83

[14:31] <moritz> lumi__: please re-try with that patch, at your convenience

[14:32] <mikemol> PerlJam: http://rosettacode.org/wiki/Remote_agent

[14:33] <masak> PerlJam: for what it's worth, I don't think Perl 6 is an emerging language. I'd rather think of it as established and fairly mature.

[14:33] <grondilu> perl6 "fairly mature"??   That's too much.

[14:34] <PerlJam> masak: Ruby was fairly mature when it "emerged" due to Rails and other such technology

[14:34] *** JimmyZ joined
[14:35] <PerlJam> masak: Haskell was *really* mature when it emerged as a high-performance language

[14:35] <mikemol> Haskell takes a long time to emerge. I noticed this when I needed to emerge bzr...

[14:36] <PerlJam> masak: to quote the signup form for emerging langs:  "What compiler techniques, parser tricks, VM optimizations, or syntactical wizardry do you want to hear about?"  That sounds like it's right up Perl 6's alley

[14:36] <PerlJam> grondilu: If that's too much, what would be just enough?

[14:37] *** Chillance joined
[14:38] <grondilu> I don't know, but right now there are just too many features and libraries missing.  IMHO

[14:38] <Su-Shee> PerlJam: I wondered why Perl 6 isn't in emerging languages too, because if I consider the list of languages of last year.. it's about the new-feature-ness and new-capabilities and all. at least that was my impression.

[14:38] <PerlJam> Su-Shee: exactly!

[14:39] *** kaleem left
[14:40] <PerlJam> masak: besides ... I think we shouldn't pass up any opportunity to expose Perl 6 to new audiences  (we just have to make sure to set expectations appropriately)

[14:40] <masak> PerlJam: you might be right.

[14:43] <jnthn> Time for a long bus journey &

[14:43] *** tyatpi left
[14:44] *** leprevost joined
[14:45] <Su-Shee> PerlJam: expectations appropriately? I'd say no other language has this kind of builtin grammar handling, the new regexes, the way "strings" are handled and so on. 

[14:47] <PerlJam> Su-Shee: We don't want to accidently give the expectation that Perl 6 has everything that Perl 5 has (yet) because  that will leave people frustrated that there's no CPAN

[14:47] <PerlJam> (for instance)

[14:48] *** grondilu left
[14:48] <PerlJam> We have a programming language with multiple implementations in play.

[14:48] <PerlJam> It works.   It's awesome.  There are still some things to be done.

[14:49] *** tokuhir__ left
[14:50] <Su-Shee> PerlJam: if I remember correctly those are all base, builtin features. ;) also, none of the emerging language has anything even remotely cpanish.

[14:51] <Su-Shee> PerlJam: it's about the features and capabilities.

[14:59] *** PacoAir joined
[15:00] *** zhutingting left
[15:03] *** NamelessTee joined
[15:04] <awwaiid> I still don't get why all languages don't have a CPAN-alike. Or even better, why they don't just start sticking their modules on CPAN.

[15:04] <moritz> because CPAN would object :-)

[15:05] *** havenn joined
[15:05] *** bluescreen10 left
[15:05] <awwaiid> think so? heh

[15:06] *** JimmyZ left
[15:06] <PerlJam> awwaiid: many languages *do* have a CPAN-alike ... they're just not as mature as CPAN yet, so they all seem a little backwards in some way

[15:07] <PerlJam> gems, cabal, pear, etc

[15:07] * Su-Shee collided with ri/rdoc yesterday because I silently expected all gems to have something like perldoc. ;)

[15:07] <Su-Shee> hackage, npm..

[15:07] <Su-Shee> pip..

[15:09] *** tarch left
[15:11] <awwaiid> cran

[15:12] *** fgomez joined
[15:13] <masak> CTAN. I'm guessing that was the first C?AN.

[15:14] <PerlJam> masak: AFAIK, yes

[15:15] *** shinobicl joined
[15:18] <masak> Wikipedia lists both JSAN (js) and CCAN (C) as descendants of the CPAN architecture.

[15:18] <geekosaur> yes, CPAN was specifically named and modeled after CTAN in its beginning (d*mn that's an old memory...)(

[15:19] <PerlJam> knuth++

[15:19] <arnsholt> Also, lamport++

[15:20] *** bluescreen10 joined
[15:24] <masak> lamport?

[15:25] <arnsholt> Leslie Lamport is the guy who made LaTeX

[15:26] <PerlJam> and a nice book on LaTeX too IIRC

[15:26] <arnsholt> TeX itself is quite low-level, and the LaTeX macros build on top of that to let you do better (more semantic markup) code

[15:26] <masak> arnsholt: oh! I thought the name sounded familiar.

[15:26] <arnsholt> He's also done CS research in concurrency

[15:26] <masak> apparently, there was once a CJAN (Java).

[15:26] <masak> arnsholt: is he the Lamport of "Lamport timestamps"?

[15:27] <arnsholt> Quite possibly

[15:28] <arnsholt> According to Wikipedia it's distributed systems, so timestamps are probably relevant

[15:28] <arnsholt> IIRC he also proved that it's impossible to hide the distributedness of a distributed system

[15:32] *** fgomez is now known as fgomez_

[15:32] *** fgomez_ left
[15:34] * masak wonders if the "La" in "LaTeX" is short for "Lamport"

[15:36] <geekosaur> I think so, yes

[15:48] *** Patterner left
[15:48] *** fgomez joined
[15:51] *** Psyche^ joined
[15:51] *** Psyche^ is now known as Patterner

[15:53] *** preflex_ joined
[15:53] *** preflex left
[15:53] *** preflex_ is now known as preflex

[15:54] *** Trashlord joined
[16:04] *** att_ left
[16:25] *** skipper joined
[16:28] *** havenn left
[16:35] *** fglock left
[16:46] *** mucker joined
[16:51] *** skipper left
[16:56] * masak decommutes

[16:57] *** birdwindupbird left
[16:58] *** fgomez left
[16:58] *** fgomez joined
[17:10] *** Vespakoen left
[17:18] <frettled> masak: have you been decommutative?  :)   (any plans for the hackathon in a month?)

[17:25] *** snearch left
[17:25] *** mucker left
[17:27] <sorear> good * #perl6

[17:27] <moritz> \o sorear 

[17:28] *** wolfman2000 joined
[17:29] *** Teratogen left
[17:33] *** icwiener joined
[17:34] <sorear> o/ moritz 

[17:35] *** att_ joined
[17:35] <colomon> o/

[17:39] *** kaare_ joined
[17:44] *** wolfman2000 left
[17:45] *** pmurias left
[17:48] *** mj41_nb left
[17:52] <tadzik> 'evening

[17:53] <sorear> o/ tadzik

[17:57] *** dakkar left
[18:01] *** envi_ left
[18:07] *** havenn joined
[18:11] <moritz> lol I blug: http://perlgeek.de/blog-en/perl-6/2012-upcoming-p6-hackathon.html (sjn, feel hilighted :-)

[18:12] <tadzik> oh, I wanted to blog too

[18:13] <moritz> t gv öwww÷0p3~

[18:13] <tadzik> oh, hello Ronja!

[18:14] <moritz> Ronja also discovered Ctrl+Z :-)

[18:14] <sorear> moritz++

[18:14] <sorear> :(

[18:14] *** mj41_nb joined
[18:14] <sorear> I see Ronja has discovered the joy of umlauts

[18:15] *** Cactapus joined
[18:16] * moritz doesn't even know how to produce ÷ on his keyboard :-)

[18:16] <benabik> Opt-/ on a Mac

[18:17] <tadzik> heck, I wouldn't know how to produce an Opt on my keyboard :)

[18:17] <geekosaur> opt on a mac is alt on pcs

[18:17] <benabik> But Alt-/ is unlikely to do anything useful.  :-D

[18:18] <tadzik> I think my colemak mixes everything up anyway :)

[18:18] <tadzik> Alt-/ is ¿ here

[18:18] *** Su-Shee_ joined
[18:18] <daxim> AltGr+Shift+.

[18:18] <daxim> I win

[18:18] *** Su-Shee left
[18:18] <geekosaur> (possibly altgr, depending on keyboard; macs kinda act like you always have an international keyboard configured, whereas linux and windows tend to default to US-only configs)

[18:18] *** Su-Shee_ is now known as Su-Shee

[18:19] <tadzik> ÷

[18:19] <tadzik> indeed!

[18:21] <daxim> my favourite lightning talk is about input methods.  on one slide I show the quadruple assignment of each key in X.org/xkb

[18:21] <doy> it's also compose - :

[18:21] <doy> ÷

[18:21] <daxim> proper typographic quotation characters are available on the last row

[18:22] *** fgomez left
[18:22] * tadzik discovers ≈

[18:22] <daxim> »«„“”‚‘’›‹

[18:23] <daxim> compose is of course the killer feature (doy++), that's what the talk is actually about

[18:24] <Cactapus> Question, if I have no prior experience with perl 5 or 6, and am interested in picking them both up, would it be more worthwhile for me to plan a small project to wet my feet, or jump right into reading documentation, bug reports, and deigns plans and looking for places where I can contribute to the community?

[18:24] <daxim> nothing beats practice, i.e. reading and writing code

[18:25] <sorear> a project is necessary.

[18:25] <Cactapus> I imagine looking for the source of bugs would give me a good understanding of the languages

[18:25] <moritz> well, much of the compilers are written in Perl 6

[18:25] <sorear> 「there are lots of nice quotes around U+3000」

[18:25] <moritz> so you need an understanding of the language to get an understanding of the language that way :-)

[18:26] <tadzik> I usually find reading a short book or two a nice solution for the bootstraping problem

[18:26] <sorear> meh, perl 6 is an algol descendant, all algol descendants are the same

[18:27] <moritz> that's also an approach to the bootstrapping problem :-)

[18:27] <sorear> now, J, *that* you have to learn before you can read it

[18:27] <Cactapus> Any recomendations on literature? For a project I was planning on fooling around with protein structure databases

[18:27] <sorear> woah, a bioperl person?  we need one of those here!

[18:27] <flussence> error messages can teach you a lot, go cause a few of those :)

[18:27] <moritz> Cactapus: "Using Perl 6". And hang around here, and ask questions

[18:27] <sorear> welcome, Cactapus

[18:28] <flussence> (perl5 also has 'use diagnostics;' which turns errors into multi-paragraph explanations)

[18:28] <Cactapus> I only know about bioperl, and want to make use of it; I wouldn't call myself a bioperl person just yet

[18:29] <Cactapus> And thanks for the welcome

[18:31] <tadzik> flussence: it'd be a nice thing to have in PErl 6

[18:31] <tadzik> should be quite doable now that we have proper exceptions

[18:32] <Cactapus> I already downloaded 'Using Pearl 6' but I don't have my usb cable with me to throw the portable version onto my reader =\

[18:32] *** havenn left
[18:32] <tadzik> oh, I did create a .mobi version once, if you're interested

[18:33] *** havenn joined
[18:33] <Cactapus> The .mobi is already up there

[18:33] <Cactapus> On github

[18:33] <tadzik> ok, cool

[18:34] <tadzik> it has a plenty of downloads too, I can see

[18:34] <sorear> you could... use a PC pdf reader?

[18:35] <tadzik> I can imagine how one owning  proper reader would not like to read anything from a PC screen

[18:35] <Cactapus> Yeah, I could; but the thought of reading off a screen with my contacts is making me lean to finishing up some work then going outside and enjoying the weather instead heh

[18:35] <Cactapus> contacts in*

[18:36] <Cactapus> I'll just download it when I get home for future commutes

[18:36] *** pernatiy joined
[18:37] <flussence> .oO( if it's the future, why is my desktop screen the same dpi it was 15 years ago? )

[18:38] <Cactapus> Because of the current technological limits on the size of light emitting technology?

[18:39] <Cactapus> Well more like economical and practical

[18:39] <Cactapus> economic*

[18:40] <flussence> I guess. Maybe now that DACs are falling out of use on video cards they'll start moving forward again...

[18:40] <Cactapus> Speaking of impractical things with a niche market, I caught myself fanasizing about having a laptop marketed towards coders who want to work outside

[18:41] <Cactapus> It would have a fairly minimal specs, with almost no graphics power, but decent RAM and a good number of small, efficient cores for multithreading

[18:42] <Cactapus> The screen would be e ink and have a horrible refresh rate

[18:42] <Cactapus> But the battery would last weeks of constant use

[18:42] <Su-Shee> yeah that's totally the way to go for web developers, gui developers etc.. ;) 

[18:42] <benabik> e ink sounds like it would be horrible for typing.  type-type-type, wait... type-type, wait...

[18:43] <Cactapus> You don't touch type?

[18:43] <benabik> A screen from Pixel Qi would work.

[18:43] <flussence> benabik: I've used desktops that run like that, so at least I'll have some practice :)

[18:43] <benabik> I do touch type...  I watch what appears on the screen instead of my fingers.

[18:43] <Cactapus> True

[18:43] <sorear> "horrible refresh rate" usually means >1ms

[18:43] <Cactapus> Would take some getting used to, but I can get by with looking at my fingers

[18:44] <Cactapus> This refresh rate would be more like 500ms lol

[18:44] <tadzik> yeah

[18:44] <Cactapus> When I said horrible, I meant it

[18:44] <sorear> I'm ircing on a VPS 3000mi away with remote echo ssh

[18:45] <benabik> That's why I mentioned Pixel Qi.  It's pretty low power and effective in sun and indoors.

[18:45] <Cactapus> Sounds like an exercise in frustration

[18:45] *** bluescreen10 left
[18:46] <Cactapus> Yeah, it's the Qi looks interesting; good call

[18:46] <Cactapus> the*

[18:46] <sorear> Cactapus: it's less frustrating than putting up with being disconnected every few hours by Cox

[18:47] <sorear> which has recently run an ad campaign claiming to be the best in the USA - if true, I'm leaving the country ASAP

[18:48] <Cactapus> sorear: That's funny, taking an ad campain to be the truth :P

[18:48] <tadzik> hah

[18:48] <sorear> *if* true

[18:48] <Cactapus> Caught the 'if', just wanted to make my joke

[18:49] <tadzik> that still sounds a bit like "if I had meteor storms in Poland I'll move someplace else", given my experiences with ISPs vs their ads :)

[18:50] <Cactapus> So does anyone have experience owning something from Pixel Qi?

[18:50] <sorear> Not I.

[18:52] <doy> http://blog.fsck.com/2010/07/pixel-qi.html

[18:56] <Cactapus> Hmm $200 for the 10.1" screen. I was looking to pickup a netbook to code on, and this would be perfect

[18:56] <Cactapus> Now I just need to read reviews of netbooks to find something that suits my needs

[18:57] *** FACEFOX joined
[18:58] *** bluescreen10 joined
[19:00] *** ponbiki joined
[19:00] *** fglock joined
[19:02] <sorear> o/ fglock 

[19:03] <fglock> sorear: o/

[19:04] <shinobicl> The HP Mini is not the most cheap netbook but the keyboard is very comfortable

[19:05] <shinobicl> the most comfortable of all the netbooks i've used

[19:08] *** ksi joined
[19:09] <doy> i'm a big fan of my samsung nb30 (which supposedly works great with the pixel qi screen), but i don't think they make them anymore

[19:11] *** daxim left
[19:15] *** snearch joined
[19:16] *** birdwindupbird joined
[19:18] <Cactapus> I'm looking for something with a good keyboard, battery life; netbooks all come with practically the same proccessors nowadays don't this? How easy are ram and disk drives to replace on netbooks? Never owned one

[19:19] *** bluescreen10 left
[19:19] <flussence> I've got an old Asus, it just uses a standard 2.5" SATA drive. RAM is probably standard too but I haven't messed with it

[19:20] <Cactapus> I was thinking of throwing on a low capacity SSD on it, since I won't use it for anything but coding and the net

[19:21] <Cactapus> I think a hybrid drive would be pointless, since it would be slightly slower than a solo SSD and give me more capacity than I would need

[19:22] <flussence> this one gets about 4h with an SSD, but it's one of the original Atoms with the crap power-hungry chipset. I guess the tech's improved a lot since then...

[19:22] <Cactapus> Yikes, I hope so

[19:23] <flussence> (I think the numbers were something like 2W for the CPU, 10 for the northbridge chip...)

[19:24] <Cactapus> I'm not familiar with the ballpark for atom size CPU power draws, nor the capacity of their batteries

[19:24] *** havenn left
[19:29] *** havenn joined
[19:30] <benabik> The Makezine Pixel Qi forum is saying 13-14 hours with the Samsung N210/N220.  Wish I had a spare few hundred dollars to put one together.

[19:34] <Cactapus> Been saving up for a laptop replacement, and I don't see the need for a full sized laptop so I'm in a position to spend well on a quality netbook.

[19:35] <Cactapus> 13 hours is impressive

[19:35] <doy> i get ~16 hours on my thinkpad x220

[19:35] <doy> it's a bit more expensive than a netbook though

[19:35] <doy> (:

[19:35] *** havenn left
[19:36] <benabik> A bit bigger too, which helps with battery life.

[19:36] <Su-Shee> doy: seriously 16 hours? I'm sold.

[19:37] <doy> Su-Shee: if you don't run x, turn off the wifi, dim the screen, and don't use the processor too much, it gets around 20

[19:37] *** havenn joined
[19:37] <doy> i'm a pretty huge fan

[19:38] <Su-Shee> doy: I sleep 8 of 24 hours. I really really don't need more than 16 hours :)

[19:38] *** snearch left
[19:38] <doy> (:

[19:38] <Cactapus> How's the screen look outdoors?

[19:39] <Cactapus> ~1300 for a laptop with a decent sized SSD, proccessor and a battery like that is pretty reasonable

[19:39] <Su-Shee> doy: x220 - what kind of graphic's chip?

[19:39] <doy> haven't actually tried using it outdoors yet, but it's a fairly nice lcd that gets pretty bright

[19:39] <doy> so i imagine it'd be at least usable

[19:39] *** ponbiki left
[19:40] <doy> 00:02.0 VGA compatible controller: Intel Corporation 2nd Generation Core Processor Family Integrated Graphics Controller (rev 09)

[19:40] <Su-Shee> I don't care for the price, I buy a new notebook because they're getting too old and slow and not upgradable anymore every 5 years or so...

[19:41] <Cactapus> Don't care about the price, or don't care for the price?

[19:41] <Su-Shee> about probably. ;)

[19:46] <Cactapus> Hmm it gives you the option of 2 different AC adaptors, don't think I've seen a battery that can be charged at different watt ratings before

[19:46] <Cactapus> Guess it charges faster at 90 than 65

[19:47] * japhb sees Basic Computer Games in the backlog ...

[19:47] *** havenn left
[19:47] <Cactapus> (says both are for North, or Latin American outlets)

[19:47] <japhb> Man it's cool to see those scanned in -- I actually have both BCG and MBCG on my shelf.  :-)

[19:47] <doy> yeah

[19:48] <doy> it's really not incredibly worth it, it charges plenty fast at 65

[19:49] *** havenn joined
[19:50] <Cactapus> The difference in price is $0 so I'd say it could be worth it =P Also I've never used mobile broadband before, I'm guessing you need a subscription to the service from a provider?

[19:50] <doy> yeah

[19:52] <doy> (and the difference in size/weight between the 65W and 90W power supply is non-negligible, which is something to keep in mind)

[19:52] <Cactapus> This is true, I hate bulky adaptors

[19:53] <Cactapus> Is there anything horribly wrong with the default wifi adaptor? I can't imagine a reason to want to pay more for something that offers the same features and functionality

[19:55] <Su-Shee> probably the range/frequency wether you can use it internationally?

[19:57] <doy> yeah, i have no idea

[20:04] *** libertyprime left
[20:05] <Cactapus> Hmm quite the investment, but having a quiality laptop with that much battery life... tempting

[20:06] *** libertyprime joined
[20:11] * masak comes into focus

[20:14] <masak> frettled: haven't thought as far ahead as the hackathon yet... but since I won't have to give a talk, I'll probably be less procrastinational and more available than usual. :)

[20:14] *** fgomez joined
[20:14] <masak> I second moritz++' predilection to be available for whatever the group decides on.

[20:16] <masak> Cactapus: also, hi. welcome.

[20:17] <frettled> masak++, moritz++ - very good :)

[20:17] <masak> is a "Cactapus" a really thorny octopus, or a many-limbed cactus? :)

[20:17] <flussence> a hedgehog that goes meow

[20:17] *** sjn left
[20:18] <Cactapus> The former; imagine a green, thick-limbed octupus with thorns instead of suckers 

[20:20] <masak> and yet, we won't hesitate to hug you.

[20:20] <masak> that's how crazy we are here.

[20:21] <Cactapus> Well, a warm welcome is always appreciated; so long as a path to the nearest exit remains unobstructed

[20:21] <masak> we even believe in multiple exits.

[20:22] <geekosaur> there is more than one way to escape it?

[20:22] <masak> sub fac($n) { return 1 if $n < 2; return $n * fac $n - 1 } # two exits

[20:23] <Cactapus> Instead of releasing a cloud of ink, like it's ocean dwelling cousin, the cactapus fills the air with a sense of existential dread when provoked. This often confuses the would-be pursuer long enough for a hasty escape

[20:23] <masak> convenient.

[20:23] <Cactapus> It's an evolved response to stress

[20:24] <masak> but what if we're immune to existential dread? like, have you ever sustained years of hearing "so, when is Perl 6 gonna be released?" :)

[20:25] <gfldex> then one could become a Cactapus-hunter

[20:25] <masak> oh no don't hurt our new cactapus

[20:25] <gfldex> that's rather unlikely tho

[20:25] *** lichtkind joined
[20:26] <masak> lichtkind! \o/

[20:27] *** NamelessTee left
[20:27] <tadzik> oh, a Teeworlds player

[20:28] <masak> Teeworlds players are never alone. :)

[20:30] <Cactapus> Well one could always hunt me and try to find a buyer, but how would you ever be able to negotiate a deal where both parties end up satisfied when you know that it's impossible to understand another human being on a fundemental, absolute, level?

[20:30] <Cactapus> Easier just to drink your troubles away and forget the idea.

[20:30] *** thou joined
[20:30] <masak> I think this is the beginning of a long Cactapus-#perl6 friendship :)

[20:31] <gfldex> we have yet to face a human immune to existential dread

[20:31] <masak> Cactapus: somehow you remind me of lue, an irregular regular here :)

[20:31] *** nn joined
[20:31] <gfldex> imagine you just woke up in a hotel room while you think to be at home

[20:31] <masak> nn: oh hai

[20:31] *** nn is now known as sjn

[20:31] <flussence> perl6: module A { sub I is export { say 1 }; }; module C { use A :EXPORT; }; module B { use C; }; B::I(); # one-line version of the problem I had earlier: how can I get from A to B? The less hacks the better :)

[20:32] <sjn> \o/

[20:32] <p6eval> niecza v15-4-g1f35f89: OUTPUT«===SORRY!===␤␤'use' with arguments NYI at /tmp/UuduR5wUiZ line 1:␤------> t { say 1 }; }; module C { use A :EXPORT⏏; }; module B { use C; }; B::I(); # one-␤␤Unhandled exception: Unable to locate module C in @path␤  at /h…

[20:32] <p6eval> ..rakudo 704a21: OUTPUT«===SORRY!===␤arglist case of use not yet implemented. Sorry. ␤at /tmp/aAx2ncIuHg:1␤»

[20:32] <p6eval> ..pugs: OUTPUT«pugs: *** No such subroutine: "&require_A"␤    at /tmp/Z0AD37YBXY line 1, column 1␤»

[20:32] <masak> oh, a disguised sjn ;)

[20:32] <gfldex> the brief moment when you realise the bathroom door is in the wrong spot is a bit like existential dread

[20:32] *** birdwindupbird left
[20:32] <masak> gfldex: no, that's "disorientation" :)

[20:32] <gfldex> that's the point

[20:32] <gfldex> how can you hunt anything while being disorientated?

[20:33] <masak> I dunno, I usually go to the store and buy pre-hunted.

[20:34] <Cactapus> Is lue as dashingly good-looking as I? If so then I can see the resemblance to this hypothetical person.

[20:34] <Cactapus> And yes, that moment where you realize you have to play detective for the next few hours is often quite worrying

[20:41] <masak> I haven't met lue in person, but I picture him more-than-average dashing, in a cape and a cowboy hat, riding a humpback whale into the sunset.

[20:42] <masak> he's the one among us who makes sure the rest of us are up-to-date on Dr Who and Death Stars.

[20:44] <Cactapus> Sounds pretty par-for-course on IRC to be honest

[20:45] <Cactapus> Interesting imagrey though

[20:45] <masak> we're not a par-for-course channel.

[20:46] <Cactapus> How so? In that stuff actually gets done here =P?

[20:46] <masak> partly that.

[20:46] <masak> but *cough* jnthn is on vacation right now *cough*

[20:46] <masak> evalbot rebuild army of highly trained ninja bots

[20:47] <lichtkind> masak: hai

[20:47] <masak> heh, teasing p6eval stopped working? :)

[20:47] <masak> evalbot rebuild nom

[20:47] <p6eval> OK (started asynchronously)

[20:47] <dalek> Rebuild of nom complete.

[20:47] <masak> seemingly.

[20:48] <lichtkind> masak: i now really do work daily on tablets

[20:48] <benabik> Someone tightened the rebuild regex recently.

[20:48] <masak> spoilsports. :)

[20:48] <benabik> It's still odd that two different bots give the status of the rebuild.

[20:48] <benabik> ...  Also, it rebuilt nom really quickly

[20:48] <masak> yeah, that's eerie.

[20:49] <masak> benabik: if it was just an empty pull and a null make, it could actually be correct.

[20:49] <Cactapus> They're conspiring

[20:49] <benabik> masak: True.

[20:49] *** NamelessTee joined
[20:49] <masak> phenny: en zh "are you bots conspiring against us humans?"?

[20:49] <phenny> masak: "你是机器人对我们人类的阴谋吗？" (en to zh, translate.google.com)

[20:51] <masak> Cactapus: so, have you written any Perl 6 yet?

[20:52] <Cactapus> Yeah, actually I built a perl6 to C++ interpreter in the 2 hours I've been here

[20:52] <masak> from scratch, or the one that already exists? :)

[20:52] <Cactapus> Na,NaNa, I'm slowly working through some comp theory exercises; life of a lowly undergrad

[20:52] <masak> ooh CS undergrad!

[20:54] <Cactapus> Yep, good times

[20:54] <tadzik> not bad indeed :)

[20:54] <colomon> I was going to say "I remember those days," but on reflection, I'm not sure I do.  That was a long time ago for me...

[20:55] <Cactapus> You can remember the gist of those times

[20:56] <Cactapus> Also for the record, the reason I'm interested in bioperl is because I'm in bioinformatics

[20:56] <benabik> Gist didn't exist in those times for me.  :-D

[20:56] *** am0c left
[20:56] <Cactapus> I couldn't decide between biochem and comp sci, so I did the reasonable thing and took both

[20:56] <masak> Cactapus: I'm an almost-graduated bioinformatician.

[20:57] <Cactapus> Awesome, undragrad, or grad school?

[20:57] <Cactapus> undergrad*

[20:57] <masak> undergrad. I'm something like three exams away from my degree.

[20:58] <Cactapus> I'm just finishing up my second year come april

[20:58] <masak> nice.

[20:58] <Cactapus> You got grad school plans, or work/other lined up?

[20:59] <Cactapus> I don't think I'm set on staying in acadamia past this degree tbh

[21:00] <masak> I already got sucked away into a career. so there is some doubt whether I'll actually get to those last few exams.

[21:00] <masak> not working with anything bioinformatics-y, fwiw. but still very nice $dayjob.

[21:02] <Cactapus> Can't negotiate with your boss to keep things slow until you get your degree? Would be a shame to miss out after all that effort. Any advice on getting sucked up in a career out of undergrad?

[21:03] <masak> well, I'll try to sneak in a bit of coursework -- it's just that I know it'll be non-trivial to make things work out.

[21:04] <lichtkind> hej we have fresh meat :)

[21:04] <tadzik> being a working undergrad I only can give you un-advice ;)

[21:04] <lichtkind> tadzik: sheersa

[21:04] <tadzik> heyo lichtkind 

[21:04] <benabik> tadzik: "Don't do what I did"?

[21:04] <masak> the advice, obviously, would be to do the graduation first, and the career later. :)

[21:04] <masak> doing what tadzik does (and what I did, too) -- working while doing studies -- is perfectly fine.

[21:05] <tadzik> benabik: no, I'm quite happy with the situation

[21:05] <tadzik> fwiw I'm working only part-time and I do hope to finish my studies without slips

[21:10] *** skids left
[21:23] <Cactapus> Oh right, THAT's what my body is bugging me about; a lack of sustenance 

[21:23] <Cactapus> Off to get some food before my 3 hours comp orginization lecture B-)

[21:23] <Cactapus> Who's ready to learn about cpu architecture? I am!

[21:24] *** Cactapus left
[21:25] *** fglock left
[21:26] <masak> come back soon!

[21:29] *** pmurias joined
[21:36] *** Plastic_Chicken joined
[21:43] *** havenn left
[21:45] *** fgomez left
[21:46] *** fgomez joined
[21:46] *** kcwu left
[21:48] <japhb> OK, after going off and looping in the off moments of a couple days doing profile/analyze/micro-optimize, I have a few conclusions: 1. It's not too hard to cut a percent or two out of the time for 'panda list'. 2. After that, it gets WAY harder to find low-hanging fruit just from profile data. 3. Rakudo spends a lot of effort on laziness.  4. Some way to fast-path non-lazy lists (especially smallish ones) would make a massive difference to

[21:48] <japhb>  overall runtime.

[21:52] *** y3llow left
[21:52] <japhb> BTW, #3 above (effort spent on laziness) comes in a startling variety of forms.

[21:52] *** bruges_ left
[21:55] <japhb> Oh, and #5: A surprising amount of profile time for some simple multi-methods goes to the proto.  I'm not sure where to look to see where that time actually goes.

[21:56] <masak> optimizing away laziness where it isn't used anyway sounds like something that needs doing, yes.

[21:56] <lichtkind> is the maybe block modifier gone?

[22:01] <masak> the what? 'maybe block modifier'?

[22:01] *** norn joined
[22:03] *** ksi left
[22:05] *** Plastic_Chicken left
[22:07] *** icwiener left
[22:07] *** icwiener joined
[22:08] *** havenn joined
[22:08] <lichtkind> there was a time it existed

[22:09] <lichtkind> i took it from synopses

[22:09] <lichtkind> but didnt found any traces now

[22:09] <lichtkind> so i delete it

[22:15] <lichtkind> already 5th item i loose

[22:15] <lichtkind> so i never get 1000

[22:16] *** icwiener left
[22:16] *** icwiener joined
[22:19] *** FACEFOX left
[22:20] <masak> lichtkind: `git log | grep maybe` gives three hits, neither of which is a block modifier.

[22:21] <masak> but I confess to being intrigued -- let me know if you find that it actually existed in the synopses at some point.

[22:23] <lichtkind> it surely was so but i started in 2005 or so

[22:23] <benabik> I find an old old reference to it in cd15db8 "Perl6::Spec::Concurrency: Update nomenclature."

[22:24] <lichtkind> i dont even know when i wrote this

[22:24] <benabik> "The C<maybe> statement causes a checkpoint to be made for C<defer> for each block in the C<maybe> chain, creating an alternate execution path to be followed when a C<defer> is done."

[22:24] <masak> oh.

[22:24] <lichtkind> benabik: but its no longer in repo?

[22:25] <benabik> lichtkind: I don't think so.

[22:25] <masak> well, consider those bits to have been never more than liquidly spec'd.

[22:25] <lichtkind> thanks, but i already deleted

[22:25] <masak> those were probably part of the Pugs concurrency plans.

[22:25] <benabik> I think so.

[22:25] *** FACEFOX joined
[22:27] <benabik> Actually, it's still in the spec..

[22:27] <lichtkind> http://www.perlfoundation.org/perl6/index.cgi?perl_6_index_tablet

[22:27] *** FACEFOX left
[22:27] <benabik> S17:365

[22:28] <lichtkind> defer i have also in

[22:28] <lichtkind> as long its not implemented i dont worry

[22:29] <lichtkind> i never thought it would be soo much work :)

[22:32] <masak> oh wow, liz helped write S17? cool!

[22:32] <masak> hey, maybe is still in S17! :)

[22:32] <masak> (and defer, too)

[22:33] <benabik> I think it just hasn't been modified since the commit I found.

[22:34] <benabik> `git log -S` is your friend

[22:35] *** lichtkind left
[22:35] *** whiteknight joined
[22:36] *** norn left
[22:38] *** pmurias left
[22:39] *** lichtkind joined
[22:40] *** y3llow joined
[22:40] *** kcwu joined
[22:40] *** bruges joined
[22:42] *** y3llow left
[22:43] *** y3llow joined
[22:44] *** kaare_ left
[22:49] *** benabik left
[22:52] *** FACEFOX joined
[22:53] *** pix3ls joined
[22:54] *** pix3ls left
[22:55] <masak> ah, yes.

[22:55] <masak> 'night, #perl6

[23:01] <lichtkind> good night

[23:05] *** skipper joined
[23:07] *** havenn left
[23:08] *** lichtkind left
[23:16] *** LOGICUS joined
[23:18] *** plobsing left
[23:19] *** att_ left
[23:20] *** plobsing joined
[23:21] *** LOGICUS left
[23:24] *** PacoAir left
[23:33] *** NamelessTee left
[23:35] *** leprevost left
[23:44] *** mj41_nb left
