[00:01] *** Circlepuller_ joined
[00:01] *** ptl left
[00:03] *** Circlepuller left
[00:06] *** Circlepuller joined
[00:06] *** Circlepuller_ left
[00:07] *** spider-mario left
[00:08] *** spider-mario joined
[00:11] *** ptl joined
[00:11] *** ptl left
[00:11] *** ptl joined
[00:16] *** ptl left
[00:19] *** fridim_ left
[00:20] *** gongyiliao left
[00:23] *** Woodi joined
[00:26] *** ptl joined
[00:26] *** ptl left
[00:26] *** ptl joined
[00:29] *** jeffreykegler left
[00:31] *** ptl left
[00:32] *** ptl joined
[00:32] *** ptl left
[00:32] *** ptl joined
[00:33] *** am0c joined
[00:37] *** ptl left
[00:42] *** Woodi left
[00:47] *** ptl joined
[00:47] *** ptl left
[00:47] *** ptl joined
[00:47] *** spider-mario left
[00:48] *** gongyiliao joined
[00:48] *** Woodi joined
[00:52] *** ptl left
[00:53] *** Circlepuller_ joined
[00:56] *** Circlepuller__ joined
[00:57] *** Circlepuller left
[00:58] *** Circlepuller_ left
[00:59] *** Woodi left
[01:02] *** ptl joined
[01:02] *** ptl left
[01:02] *** ptl joined
[01:06] *** scott__ joined
[01:07] *** ptl left
[01:07] *** tokuhiro_ joined
[01:08] *** ptl joined
[01:08] *** ptl left
[01:08] *** ptl joined
[01:11] *** FROGGS left
[01:13] *** ptl left
[01:13] *** tokuhiro_ left
[01:23] *** ptl joined
[01:23] *** ptl left
[01:23] *** ptl joined
[01:24] *** FROGGS joined
[01:27] *** ptl left
[01:29] *** ptl joined
[01:33] *** gongyiliao left
[01:33] *** ptl left
[01:33] *** tokuhiro_ joined
[01:34] *** hypolin joined
[01:34] *** ptl joined
[01:34] *** ptl left
[01:34] *** ptl joined
[01:35] *** gongyiliao joined
[01:38] *** woosley left
[01:39] *** ptl left
[01:39] *** jeffreykegler joined
[01:49] *** ptl joined
[01:49] *** ptl left
[01:49] *** ptl joined
[01:53] *** Woodi joined
[01:54] *** thou left
[01:54] *** ptl left
[01:55] *** am0c left
[01:56] *** simcop2387 left
[01:58] *** gongyiliao left
[01:59] *** simcop2387 joined
[02:04] *** ptl joined
[02:04] *** ptl left
[02:04] *** ptl joined
[02:09] *** ptl left
[02:19] *** tokuhiro_ left
[02:20] *** ptl joined
[02:24] *** ptl left
[02:27] *** ptl joined
[02:27] *** ptl left
[02:27] *** ptl joined
[02:32] *** ptl left
[02:42] *** ObseLeTe left
[02:42] *** ptl joined
[02:42] *** ptl left
[02:42] *** ptl joined
[02:47] *** ptl left
[02:57] *** ptl joined
[02:57] *** ptl left
[02:57] *** ptl joined
[02:59] *** lateau joined
[03:02] *** ptl left
[03:09] <DrEeevil> http://trac.parrot.org/languages/browser/pheme/trunk <-- looks like a few things broken on the parrot trac, who to bug for it?

[03:11] <moritz> DrEeevil: trac is being phased out, all the interesting things have been migrated to github

[03:11] <DrEeevil> ah, makes sense

[03:11] *** simcop2387 left
[03:11] <DrEeevil> I guess one should update the wiki then

[03:12] <moritz> I guess one should, yes

[03:12] <DrEeevil> btw, are there any parrot languages outside of rakudo that are maintained and in any way useful?

[03:13] *** ptl joined
[03:13] <moritz> winxed is

[03:13] *** simcop2387 joined
[03:17] *** ptl left
[03:19] *** ptl joined
[03:19] *** ptl left
[03:19] *** ptl joined
[03:21] <DrEeevil> hrm, if only the winxed website worked ...

[03:23] <benabik> There is https://github.com/NotFound/winxed

[03:24] *** ptl left
[03:24] <DrEeevil> thanks benabik

[03:24] <benabik> Although if you have a modern-ish Parrot, it is included.

[03:25] <benabik> And whiteknight has some of the best documentation for it: http://whiteknight.github.com/Rosella/winxed/index.html

[03:25] <benabik> (Although I tend to just poke around the source)

[03:26] <DrEeevil> ah indeed

[03:27] <moritz> google and ddg don't link to winxed.org, which probably means it's been down for a while :(

[03:29] *** dayangkun joined
[03:34] <DrEeevil> oh well. I thought I could have fun packaging some parrot runtime languages, but apparently there's nothing serious there

[03:34] * DrEeevil needs another weekend project ;)

[03:35] *** mucker left
[03:35] *** ptl joined
[03:35] *** ptl left
[03:35] *** ptl joined
[03:40] *** sftp left
[03:40] *** ptl left
[03:50] *** ptl joined
[03:50] *** ptl left
[03:50] *** ptl joined
[03:55] *** ptl left
[03:57] *** skids left
[04:02] *** risou joined
[04:06] *** ptl joined
[04:10] *** ptl left
[04:12] *** ptl joined
[04:12] *** ptl left
[04:12] *** ptl joined
[04:17] *** ptl left
[04:28] *** ptl joined
[04:29] *** fgomez joined
[04:31] *** jeffreykegler left
[04:32] *** ptl left
[04:34] *** ptl joined
[04:34] *** ptl left
[04:34] *** ptl joined
[04:39] *** ptl left
[04:41] *** ptl joined
[04:41] *** ptl left
[04:41] *** ptl joined
[04:46] *** ptl left
[04:47] *** xinming left
[04:48] *** xinming joined
[04:57] *** ptl joined
[05:01] *** ptl left
[05:02] *** bruges left
[05:04] *** ptl joined
[05:08] *** ptl left
[05:10] *** ptl joined
[05:10] *** ptl left
[05:10] *** ptl joined
[05:15] *** ptl left
[05:17] *** masak joined
[05:18] <masak> morning, #perl6

[05:20] *** popl left
[05:21] *** spacebat left
[05:21] *** spacebat joined
[05:22] *** mathw left
[05:22] *** mathw joined
[05:23] *** mhasch left
[05:26] *** ptl joined
[05:30] *** ptl left
[05:32] *** ptl joined
[05:32] *** ptl left
[05:32] *** ptl joined
[05:37] *** ptl left
[05:45] <moritz> good morning, masak 

[05:48] *** ptl joined
[05:48] *** ptl left
[05:48] *** ptl joined
[05:48] <moritz> good morning, *

[05:53] *** wtw joined
[05:53] *** ptl left
[05:58] * masak commutes

[06:02] *** masak left
[06:03] *** ptl joined
[06:03] *** ptl left
[06:03] *** ptl joined
[06:07] *** Circlepuller joined
[06:07] <cosimo> morning

[06:08] *** ptl left
[06:09] *** Circlepuller__ left
[06:11] *** SamuraiJack joined
[06:18] *** ptl joined
[06:18] *** ptl left
[06:18] *** ptl joined
[06:23] *** ptl left
[06:23] *** FROGGS left
[06:28] *** flexibeast left
[06:34] *** ptl joined
[06:34] *** ptl left
[06:34] *** ptl joined
[06:39] *** ptl left
[06:48] <tadzik> good morning

[06:49] *** ptl joined
[06:49] *** ptl left
[06:49] *** ptl joined
[06:54] *** ptl left
[06:59] *** dayangkun left
[07:01] *** desertm4x joined
[07:04] *** ptl joined
[07:04] *** ptl left
[07:04] *** ptl joined
[07:05] *** FROGGS joined
[07:09] *** ptl left
[07:10] *** FROGGS left
[07:14] *** brrt joined
[07:14] *** flexibeast joined
[07:14] *** bruges joined
[07:14] *** brrt left
[07:17] *** fgomez left
[07:18] *** fgomez joined
[07:19] *** fridim_ joined
[07:20] *** ptl joined
[07:20] *** ptl left
[07:20] *** ptl joined
[07:25] *** ptl left
[07:29] * AccessDenied hmm

[07:29] <pmichaud> good morning, #perl6

[07:31] *** kresike joined
[07:31] <kresike> good morning all you happy perl6 people

[07:35] <moritz> good am, pm

[07:35] <moritz> good morning kresike, AccessDenied, tadzik, cosimo, *

[07:35] <kresike> hello moritz o/

[07:35] *** ptl joined
[07:35] *** ptl left
[07:35] *** ptl joined
[07:37] <pmichaud> moritz++ tadzik++ # Rakudo 2012.08 release

[07:38] *** hoelzro|away is now known as hoelzro

[07:39] *** ptl left
[07:42] *** ptl joined
[07:42] *** ptl left
[07:42] *** ptl joined
[07:44] <pmichaud> did I hear somewhere that there was going to be another "This week in Perl 6" series, or am I hallucinating again?

[07:44] *** leont joined
[07:45] <moritz> dunno. The previous one was on reddit, by raiph++

[07:47] *** ptl left
[07:51] *** thou joined
[07:57] *** ptl joined
[07:59] <DrEeevil> gentoo packages already up to date :)

[07:59] <DrEeevil> gotta love upstreams that release stuff that actually works

[08:00] <moritz> DrEeevil: you mean, with rakudo 2012.08?

[08:00] <DrEeevil> yup

[08:00] <DrEeevil> there were some test failures around parrot 4.2 / 4.3, but since then it's been boring and just working nicely

[08:01] <moritz> boring is good :-)

[08:02] *** ptl left
[08:12] <DrEeevil> yes, I wish more upstreams understood that

[08:13] *** ptl joined
[08:13] *** ptl left
[08:13] *** ptl joined
[08:15] <moritz> it seems that rakudo's Makefile uses ./$(PERL6_EXE) for precompiling modules

[08:15] <moritz> and since jnthn++ isn't constantly shouting at us, it must work on windows too

[08:15] <moritz> so that's how I can fix the NQP build

[08:15] <moritz> good to know :-)

[08:15] <pmichaud> I'm fine with using ./$(NQP_EXE) for the NQP build

[08:16] <pmichaud> there are other places in the nqp build that use ./$(NQP_EXE) as well.

[08:16] <moritz> I didn't find those places when skimming it yesterday

[08:16] <moritz> and I though we just always used the PBCs

[08:16] <pmichaud> well, might be only one other place.  I did see one.

[08:16] <pmichaud> ..."used the PBCs"?

[08:17] <moritz> parrot $(STAGE1PBC) whatever

[08:17] <pmichaud> for the bootstrapping build, yes, we tend to use the PBCs.

[08:17] <pmichaud> but at the end we should get a EXE, and then use that to generate the other library components

[08:18] *** ptl left
[08:18] <pmichaud> ...keeping in mind that I've never fully reviewed the build process jnthn++ put into place for nqp :)

[08:18] *** Psyche^ joined
[08:19] <moritz> well, it has one very important property: it works :-)

[08:19] <moritz> testing a local patch now that re-enables building the p5regex stuff

[08:19] <pmichaud> Indeed, which is why I haven't really worried about it too much.

[08:22] *** Patterner left
[08:22] *** Psyche^ is now known as Patterner

[08:26] <dalek> nqp: 8fac254 | moritz++ | tools/build/Makefile.in:

[08:26] <dalek> nqp: [build] fix building of p5regex components on non-windows. Re-include it in the default target

[08:26] *** fgomez left
[08:26] <dalek> nqp: review: https://github.com/perl6/nqp/commit/8fac254a08

[08:26] *** fgomez joined
[08:28] *** ptl joined
[08:28] *** ptl left
[08:28] *** ptl joined
[08:33] *** ptl left
[08:35] *** ptl joined
[08:35] *** ptl left
[08:35] *** ptl joined
[08:40] *** ptl left
[08:42] *** brrt joined
[08:48] <jnthn> morning

[08:48] <brrt> \o jnthn

[08:48] <moritz> mrnng, jnthn 

[08:49] *** bbkr joined
[08:49] <jnthn> pmichaud: The build process (with the 3 stages) is largely yours. :)

[08:49] <pmichaud> well, it doesn't look much like mine :)

[08:49] <jnthn> It's had quite a lot added to it :)

[08:50] <jnthn> But it still has a PIR stage0, which is used to build stage1, which is used to build stage2. 

[08:50] <pmichaud> and it seems to unrolled/refactored in a few places that I think I would've factored differently.

[08:50] <pmichaud> still, as moritz++ says, it does have the undeniable feature of *working*, and that's what we care about :)

[08:51] *** ptl joined
[08:51] <pmichaud> clearly I don't find the current code to be an issue, otherwise I'd have refactored it already :)

[08:51] <jnthn> I'm sure it could be better in places; it's when people think they can make it faster that I get scared, since that'd break the bootstrappy-ness :)

[08:52] <moritz> well

[08:52] <moritz> there are steps that could be broken up into substeps

[08:52] <jnthn> (As in, you need to build all the stages in order, and within each stage there are orderings)

[08:52] <moritz> which wouldn't break anything if dependencies were added properly

[08:52] <pmichaud> I've found that breaking into substeps makes the Makefile much harder to understand, not easier.

[08:53] <pmichaud> A lot of people do suggest breaking the steps up, but that just increases the number of rules and dependencies without improving readability or performance.

[08:53] <jnthn> Also, the substeps tend to be concatenate source, compile to PIR, assemble PIR to bytecode

[08:53] <jnthn> All of which are ordered

[08:53] <pmichaud> correct

[08:53] <pmichaud> and none of which are worth preserving as an intermediate step

[08:54] <jnthn> right

[08:54] <jnthn> Anyway, I'd rather we keep at as it is for now.

[08:54] <jnthn> For one because I presently understand very well how it works. :)

[08:54] <pmichaud> I don't think there's any real push for a refactor.  But we do need to fix it so that the p5regex part doesn't break the rakudo build.  :-P

[08:54] <jnthn> Once I'm done with moving NQP over to QAST, my need to understand it so well decreases, so we can refactor. ;-)

[08:54] <moritz> pmichaud: already done

[08:54] <jnthn> It...breaks the Rakudo build?

[08:55] <pmichaud> moritz++

[08:55] <jnthn> Worked for me :S

[08:55] <pmichaud> jnthn: yes, because you're on a Windows platform.

[08:55] <moritz> jnthn: it used $(NQP_EXE) instead of ./$(NQP_EXE)

[08:55] <jnthn> oh...

[08:55] <moritz> jnthn: which broke nqp build on linux

[08:55] *** ptl left
[08:55] <jnthn> Yeah, I can see that. D'oh.

[08:55] <moritz> jnthn: so I've disabled the step for the release

[08:55] <moritz> jnthn: because yesterday I didn't have the wits to fix it

[08:55] <jnthn> At least it wasn't a spaces/tabs issue :)

[08:55] <pmichaud> lol

[08:55] <moritz> after a night's sleep, the fix was obvious

[08:56] <jnthn> :)

[08:56] <moritz> just hope it didn't break it on windows (but it really shouldn't :-)

[08:56] <jnthn> It won't.

[08:56] <jnthn> .\nqp.exe is fine on Windows.

[08:56] <moritz> it's ./nqp.exe

[08:56] <moritz> but we also use ./perl6.exe in rakudo's Makefile.in

[08:57] <jnthn> Yes, but the slashes are re-written.

[08:57] <moritz> oh, ok

[08:57] <arnsholt> Modern Windowses understand both / and \ as directory separators, no?

[08:57] *** fhelmberger joined
[08:57] <jnthn> arnsholt: When it feels like it, yes, When it doesn't feel like it, no. :)

[08:57] <moritz> arnsholt: perl on windows does

[08:57] <arnsholt> *sigh* Always something, isn't there

[08:57] <arnsholt> But rewriting works as well =)

[08:57] *** ptl joined
[08:57] *** ptl left
[08:57] *** ptl joined
[08:58] <jnthn> I suspect we can merge the p5rx branch in Rakudo now the release is done.

[08:58] <moritz> yes. And bump NQP_REVISION to one after the release.

[08:58] <arnsholt> Make is pretty insane, speaking of. I've been writing a fair amount of it lately for my projects

[08:59] <jnthn> Yeah. I've various errands and $dayjob bits to do in my one day at home this week, but will set off a build/spectest run of it now.

[08:59] <moritz> arnsholt: news at 11

[08:59] <moritz> :-)

[09:00] *** wooden left
[09:02] *** ptl left
[09:02] <pmichaud> btw, for those who suffered through the heat in Frankfurt this week, today is overcast and the temperature is 18C.  Go figure. 

[09:02] <jnthn> Grr

[09:03] <huf> effects of global swarming? :)

[09:04] <pmichaud> I'm afk for a bit

[09:04] *** ptl joined
[09:04] *** ptl left
[09:04] *** ptl joined
[09:05] <arnsholt> moritz: Indeed. Crazy powerful too, though, once you wrap your head around it

[09:09] *** ptl left
[09:12] *** sivoais left
[09:16] <dalek> rakudo/nom: 1431c3e | jonathan++ | src/Perl6/ (2 files):

[09:16] <dalek> rakudo/nom: Wire the :P5 adverb up to use P5Regex. Doesnm't support much yet, but makes it accessible from Rakudo. A simple check of it worked.

[09:16] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1431c3e7a0

[09:16] <dalek> rakudo/nom: ca7637a | jnthn++ | src/Perl6/ (2 files):

[09:16] <dalek> rakudo/nom: Merge remote-tracking branch 'origin/p5rx' into nom

[09:16] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ca7637a954

[09:16] <dalek> rakudo/nom: c2c23a3 | jnthn++ | tools/build/NQP_REVISION:

[09:16] <dalek> rakudo/nom: Bump to an NQP revision with P5Regex.

[09:16] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c2c23a3a70

[09:20] *** ptl joined
[09:20] *** xinming_ joined
[09:23] *** xinming left
[09:23] *** thou left
[09:24] *** ptl left
[09:26] *** ptl joined
[09:26] *** ptl left
[09:26] *** ptl joined
[09:31] *** ptl left
[09:37] *** sivoais joined
[09:42] *** ptl joined
[09:42] *** ptl left
[09:42] *** ptl joined
[09:43] *** lateau left
[09:45] *** lateau joined
[09:47] *** ptl left
[09:57] *** ptl joined
[09:57] *** ptl left
[09:57] *** ptl joined
[10:02] *** ptl left
[10:03] *** hypolin left
[10:06] *** scott__ left
[10:10] *** GlitchMr joined
[10:13] *** ptl joined
[10:13] *** gongyiliao joined
[10:14] *** dayangkun joined
[10:16] *** daxim joined
[10:17] *** ptl left
[10:19] *** ptl joined
[10:19] *** ptl left
[10:19] *** ptl joined
[10:20] *** dayangkun left
[10:22] *** p6rd joined
[10:24] *** ptl left
[10:24] *** integral left
[10:25] *** smash left
[10:25] *** integral joined
[10:25] *** integral left
[10:25] *** integral joined
[10:25] *** smash joined
[10:29] *** am0c joined
[10:35] *** ptl joined
[10:35] *** ptl left
[10:35] *** ptl joined
[10:39] *** ptl left
[10:39] *** birdwindupbird joined
[10:40] *** birdwindupbird left
[10:41] *** birdwindupbird joined
[10:41] *** MayDaniel joined
[10:42] *** ptl joined
[10:42] *** ptl left
[10:42] *** ptl joined
[10:46] *** ptl left
[10:48] *** lateau left
[10:49] *** jeffreykegler joined
[10:49] *** ptl joined
[10:49] *** ptl left
[10:49] *** ptl joined
[10:52] <tadzik> Poland! \o/

[10:52] <jnthn> :)

[10:53] * jnthn is temporarily in Sweden :)

[10:53] *** fridim_ left
[10:53] <jnthn> Most immediately felt benefit: internets everywhere, thanks to 3G :)

[10:54] <tadzik> ohyes

[10:54] <tadzik> and cheap

[10:54] <tadzik> not like 5€./h on FRA

[10:54] *** ptl left
[10:54] <jnthn> heh, yeah

[10:54] *** leont left
[10:55] <kresike> you guys seem to be showing a slight .net addiction :)

[10:56] *** AccessDenied is now known as KohYahHwee

[10:56] *** leont joined
[10:57] *** gongyiliao left
[10:59] *** GlitchMr left
[11:00] *** JimmyZ joined
[11:02] *** brrt left
[11:02] * JimmyZ never goes to other country ;)

[11:04] *** ptl joined
[11:04] *** ptl left
[11:04] *** ptl joined
[11:08] *** GlitchMr joined
[11:08] * pmichaud finally has a chance to unpack in Frankfu.... hey, wait a minute.

[11:08] <pmichaud> :-(

[11:09] *** ptl left
[11:13] <sjn> Parcel.unpack?

[11:15] <pmichaud> something like that, yes.  

[11:16] *** spider-mario joined
[11:17] *** jeffreykegler left
[11:19] *** ptl joined
[11:19] *** ptl left
[11:19] *** ptl joined
[11:23] *** fgomez left
[11:24] *** ptl left
[11:35] *** ptl joined
[11:38] *** FROGGS joined
[11:39] *** ptl left
[11:41] *** ptl joined
[11:41] *** ptl left
[11:41] *** ptl joined
[11:46] *** ptl left
[11:47] <dalek> rakudo/nom: f830ef4 | moritz++ | src/ (2 files):

[11:47] <dalek> rakudo/nom: include the role name in the error for X::Syntax::Augment::Role

[11:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f830ef4b89

[11:47] *** cognominal joined
[11:51] <dalek> doc: b06e890 | moritz++ | lib/X/Syntax/Augment/ (2 files):

[11:51] <dalek> doc: document two error classes related to "augment"

[11:51] <dalek> doc: review: https://github.com/perl6/doc/commit/b06e89026c

[11:52] <FROGGS> moritz: is the X:: namespace for exceptions?

[11:52] <moritz> FROGGS: yes

[11:52] <FROGGS> cool, thanks

[11:53] *** mhasch joined
[11:54] <dalek> specs: 771d505 | moritz++ | S32-setting-library/Exception.pod:

[11:54] <dalek> specs: [S32::Exception] improve error message for X::Syntax::Augment::Role

[11:54] <dalek> specs: review: https://github.com/perl6/specs/commit/771d5050f6

[11:55] <mhasch> o/ #perl6

[11:55] <moritz> \o mhasch 

[11:55] <mhasch> I was just wondering...

[11:56] *** FROGGS left
[11:56] *** mst joined
[11:56] *** ObseLeTe joined
[11:56] <mst> got you, you horrible little gremlin

[11:56] <mhasch> If I translated my module Math::Polynomial from perl5 to perl6, what should I call it?

[11:56] <mst> the postgres instance on the dev box had eaten all the swap

[11:56] <mst> pmichaud: mystery solved, I hope, confirmation to follow

[11:57] <moritz> mhasch: maybe Math::Polynomial?

[11:57] *** ptl joined
[11:57] *** ptl left
[11:57] *** ptl joined
[11:57] <moritz> mhasch: or are you unhappy with the name?

[11:58] <mhasch> I know there is this mechanism for modules of different authors sharing a name, but it does not strike me as particularly elegant.

[11:58] <moritz> different authors?

[11:58] <moritz> you said it was your own module

[11:59] <moritz> and it is *always* clear if a perl 5 or a Perl 6 module is being loaded

[12:00] <mhasch> Well, I maintain M::P on CPAN, but colomon has a M::P on modules.perl6.org.

[12:00] <moritz> ah, now we're getting somewhere

[12:00] <moritz> that was the part I was missing

[12:01] <moritz> maybe just call it Polynomial?

[12:01] <colomon> I'd be happy to remove mine from the ecosystem as soon as there's an improved version to replace it with.  

[12:02] <mhasch> Or we might take it as an opportunity to work together on an even better one :-)

[12:02] *** ptl left
[12:02] <colomon> I'm game.

[12:04] <colomon> mhasch: what's your github id?

[12:04] <mhasch> colomon: You got a deal, then.  I'll probably fork yours on github as soon as i find a tuit round enough.

[12:04] <colomon> send me your id and I'll just make you a contributor to the current repo

[12:05] * colomon is also incredibly short on tuits today -- need to be ready to teach two traditional music workshops by noon, have the house clean enough for company by 4, and get some $work done as well.

[12:05] <mhasch> I am mhasch on github

[12:08] <dalek> rakudo/nom: 7e1a6b8 | moritz++ | src/core/Exception.pm:

[12:08] <dalek> rakudo/nom: make X::Temporal a role

[12:08] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7e1a6b85b5

[12:08] <dalek> specs: 331a251 | moritz++ | S32-setting-library/Exception.pod:

[12:08] <dalek> specs: [S32::Exception] make X::Temporal a role

[12:08] <dalek> specs: review: https://github.com/perl6/specs/commit/331a251bbe

[12:12] *** ptl joined
[12:12] *** ptl left
[12:12] *** ptl joined
[12:15] <pmichaud> hmmm, packing for .no has been a lot easier than packing for .de.  I guess that's because I have a net loss of 5 t-shirts :)

[12:15] <pmichaud> mst: (build problems)  win, glad you found the solution

[12:15] <moritz> wow. I usually have a net gain of 2..5 t-shirts per conference :-)

[12:16] <pmichaud> yes, but I brought eight yapc-perl6 shirts and gave away seven :)

[12:16] <jnthn> (those t-shirts)++

[12:16] <frettled> pics? :)

[12:17] <jnthn> Mine is currently in the wash so I can wear it at the hackathon in .no :)

[12:17] <mhasch> pmichaud: did you post your design somewhere for us to print

[12:17] <pmichaud> I forgot to take pics

[12:17] <pmichaud> I'm going to post the design shortly

[12:17] <jnthn> I hope that it will be acceptable hackathon wear. :P

[12:17] *** ptl left
[12:17] <moritz> jnthn: :-)

[12:17] <pmichaud> mhasch: did you want with or without yapc::europe text?  I've been thinking of just posting the design w/o the text

[12:18] <pmichaud> jnthn: I'm sure it will be acceptable hackathon wear.  I should've given you my shirt to wash so I could wear one also :)

[12:18] <mst> pmichaud: also, the ./perl6 --setting=NULL --optimize=3 --target=pir --stagestats stage

[12:18] <mhasch> With the yapc text will be just fine, to go with my official yapc one.

[12:18] <mst> pmichaud: took about 1.6Gb according to top M

[12:18] <pmichaud> mst: that's about right

[12:18] <mst> pmichaud: the rest seemed pretty gentle

[12:18] <moritz> huh, I thought it was more like 1.2 or 1.3G these days

[12:18] <mst> pmichaud: I mention this as a datapoint towards the "make compilation work inside 1Gb" goal you mentioned having

[12:18] <pmichaud> moritz: he's still using the 2012.07 star release, I think

[12:19] <moritz> oh.

[12:19] <mst> I am

[12:19] *** desertm4x left
[12:19] <mst> that's what jnthn told me to use

[12:19] <pmichaud> the 2012.08 release (coming in the next 4 days) should use around 1.2Gb or less

[12:19] <mst> sweet

[12:19] <moritz> mst: it's allright. Somhow my brain has managed to label that as "distant past" :-)

[12:20] <pmichaud> and when I make my cursor changes, we should be much closer to 1.0Gb

[12:20] <frettled> jnthn: I should think it is acceptable.  Regrettably, I won't see you there, but I'm sure sjn++ will ensure pics are taken.

[12:20] <jnthn> I've probably got some other things that I can do to pull us below that mark in the next one also.

[12:20] <pmichaud> frettled: I have the pics of shirts before they were given away.

[12:20] <frettled> pmichaud: oooh!

[12:20] <pmichaud> and I'm sure there are lots of pics of p6 shirts somewhere

[12:21] *** ObseLeTe left
[12:21] <dalek> Perlito: 3f74ed5 | (Flavio S. Glock)++ | / (3 files):

[12:21] <dalek> Perlito: Perlito5 - fix a problem parsing empty statements in modules ("use" bug)

[12:21] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/3f74ed5172

[12:22] <mhasch> Was the * variant of the shirt also your making, pmichaud?

[12:23] <pmichaud> mhasch: yes.  I felt TimToady++ deserved a special shirt.

[12:26] <pmichaud> shirt photo #1: http://pmichaud.com/sandbox/img_4213.jpg

[12:27] <frettled> Butterfly onion beer/milkshake, I'm not sure I can solve the riddle.

[12:27] <pmichaud> it helps to see the original yapceu shirts

[12:27] <pmichaud> here are the original shirts that the conference provided:  http://blogs.perl.org/users/yapceurope_2012/2012/08/the-conference-t-shirts.html

[12:27] *** ptl joined
[12:27] *** ptl left
[12:27] *** ptl joined
[12:29] <pmichaud> note how all of the conference-provided shirts say "Perl 5" on them.  So these shirts were intended to be a counter to that :)

[12:29] <mhasch> jnthn: somehow the $howmany stitches person failed to show up on the conference, so we will never know what garments she would have you adorned with.

[12:31] <dalek> rakudo/nom: 3188aee | moritz++ | src/core/ (2 files):

[12:31] <dalek> rakudo/nom: improve X::Temporal::Truncation: report invocant, not just the class

[12:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3188aee381

[12:32] *** ptl left
[12:32] *** Carolyn joined
[12:32] <Carolyn> hola

[12:32] <moritz> hello Carolyn 

[12:33] <frettled> pmichaud: hum, cathedral onion gin&tonic?

[12:33] <Carolyn> hola

[12:33] <frettled> pmichaud: very nice tees, those P6 ones.

[12:33] <frettled> and they got better with context :D

[12:33] <frettled> pmichaud: does TimToady's spell P* or something like that?

[12:33] <mhasch> Frankfurt town hall, onion, empty ebbelwoi glass

[12:33] <Carolyn> +_-

[12:34] <frettled> mhasch: aha!

[12:34] *** Carolyn left
[12:34] *** c1sung_ joined
[12:34] <mhasch> vs. amelia rendered in low resolution, onion, filled glass

[12:35] <pmichaud> actually, "filled glass" is "beer mug", since Perl 6 wouldn't exist without beer.

[12:36] <pmichaud> many Perl 6 contributors simply convert beer into code

[12:36] <mhasch> Indeed.

[12:36] *** SamuraiJack_ joined
[12:36] <jnthn> .oO( good job beer is a renewable resource )

[12:37] <dalek> doc: 4839ea0 | moritz++ | lib/X/Temporal (2 files):

[12:37] <dalek> doc: start to document Temporal errors

[12:37] <dalek> doc: review: https://github.com/perl6/doc/commit/4839ea091b

[12:37] *** topo__ joined
[12:38] <pmichaud> yeah, the frankfurt town hall outline reminded me of a low-resolution mountainscape.

[12:38] *** Woodi left
[12:38] <pmichaud> so I did a low-resolution camelia.  I'm very happy with how that turned out :)

[12:40] <mhasch> It was brilliant :-)

[12:40] *** colomon_ joined
[12:41] *** cggoebel joined
[12:41] *** wooden joined
[12:41] *** wooden left
[12:41] *** wooden joined
[12:42] *** SamuraiJack left
[12:42] *** ggoebel left
[12:42] *** colomon left
[12:42] *** topo left
[12:42] *** cosimo left
[12:42] *** c1sung left
[12:42] *** colomon_ is now known as colomon

[12:42] <mhasch> To me the low-res pic conveyed the message that our pet project is not quite finished yet, but one can see a good draft version.

[12:43] *** ptl joined
[12:43] *** ptl left
[12:43] *** ptl joined
[12:44] *** Woodi joined
[12:45] *** atrodo joined
[12:45] *** cosimo joined
[12:46] <dalek> roast: bff406d | moritz++ | S32-exceptions/misc.t:

[12:46] <dalek> roast: update some exception tests

[12:46] <dalek> roast: review: https://github.com/perl6/roast/commit/bff406d570

[12:46] <moritz> hey, I have another idea: composable t-shirt design

[12:46] <moritz> those three boxes are perfect for providing a number of logos

[12:47] <pmichaud> indeed, they are :)

[12:47] <moritz> (camelia, onion, moose, beer, *, ...)

[12:47] <moritz> now offer an online shop where you can click together which three you want in which order

[12:47] <pmichaud> I'll host a set of already-created icons, at least.

[12:47] <pmichaud> we can then make more :)

[12:48] *** ptl left
[12:48] <frettled> \o/ pmichaud++

[12:48] <mhasch> We could render a big number with individual pixels as icon boxes

[12:48] <frettled> SVG FTW

[12:49] <pmichaud> I'm afk for a bit

[12:52] *** REPLeffect left
[12:52] *** krunen left
[12:53] *** REPLeffect joined
[12:53] *** krunen joined
[13:00] <__sri> how come there are no book quotes and funny TimToady comments in the rakudo source?

[13:00] * __sri is disappointed :(

[13:01] <mhasch> __sri: patches welcome

[13:01] *** fgomez joined
[13:01] <moritz> I find those in the mojo sources a bit distracting

[13:01] <__sri> :o

[13:02] *** hoelzro is now known as hoelzro|away

[13:07] * moritz commutes &

[13:07] *** fgomez left
[13:08] *** gongyiliao joined
[13:08] <kresike> bye

[13:08] *** kresike left
[13:11] <[Coke]> __sri: read pugs source instead.

[13:12] <[Coke]> lots of tolkein in there.

[13:15] *** hoelzro|away is now known as hoelzro

[13:16] <__sri> \o/

[13:18] *** skids joined
[13:20] <__sri> i kinda like reading the rakudo source, but it's so sterile

[13:22] <__sri> method names like slurp and spurt feel almost out of place

[13:22] *** FROGGS joined
[13:23] *** masak joined
[13:24] <[Coke]> new version of http://search.cpan.org/~dconway/Perl6-Perldoc-0.000008/ released recently.

[13:25] *** lblume joined
[13:27] *** stopbit joined
[13:27] *** MayDaniel left
[13:32] *** MayDaniel joined
[13:33] *** literal left
[13:33] *** literal joined
[13:33] *** groky joined
[13:35] <FROGGS> arnsholt: the changes you currently make for NativeCall (sized ints for example), is it somewhere accessable on github?

[13:36] <FROGGS> I'ld like to fiddle around a bit, maybe we can collaborate

[13:38] <arnsholt> Lemme check

[13:39] <arnsholt> The branch is here: https://github.com/perl6/nqp/tree/dyncall-sized-num

[13:39] <FROGGS> ahh, was looking in the zavolaj project

[13:39] <FROGGS> thanks

[13:41] *** gongyiliao left
[13:41] *** gongyiliao joined
[13:47] <arnsholt> Yeah, that's a bit confusing at first

[13:47] <arnsholt> Most of the code is actually in NQP

[13:47] <arnsholt> Zavolaj is just exposing the functionality in a better way

[13:50] <dalek> perl6-roast-data: f9d8271 | coke++ | / (3 files):

[13:50] <dalek> perl6-roast-data: today

[13:50] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/f9d82715f1

[13:51] <[Coke]> looks like those rakudo issues are not transitory.

[13:52] * moritz clones the repo

[13:52] <[Coke]> there were 23002 passes a few days ago, but 22578 today.

[13:53] <[Coke]> no real new failures to account for 400+ tests... were some files commented out of t/spectest.data, maybe? wonder if I'm getting a build issue...

[13:54] <moritz> [Coke]: S32-exceptions/misc.rakudo seems to have aborted early

[13:54] <moritz> [Coke]: I might have forgotten to push some changes to it

[13:54] <jnthn> misc.t has over 400 tests in it

[13:54] <jnthn> If it aborts really early, it alone can account for the loss

[13:55] <moritz> S32-exceptions/misc.rakudo passed 14 unplanned test(s)

[13:55] <[Coke]> it says "passed 14 unplanned tests" in the summary, though.

[13:55] <[Coke]> odd.

[13:55] <moritz> that means it ran 14 tests, and aborted then

[13:55] <moritz> because it doesn't declare a plan upfront

[13:55] <[Coke]> that's an unhelpful phrasing.

[13:56] <moritz> it is.

[13:56] <[Coke]> double checked my rakudo test checkout, no changes in there blocking a pull --rebase, so that's ok on my end, I think.

[13:57] <moritz> [Coke]: when is the rakudo test run? (which time of day)

[14:00] <[Coke]> noon EST

[14:00] <[Coke]> well, pugs at noon, then niecza, then rakudo.

[14:02] <moritz> if it's really the exceptions tests, I am confident that it comes out as a flat line again as soon as I stop hacking up the error messages again

[14:02] <moritz> (which means, when I'm done documenting them :-)

[14:03] *** fhelmberger left
[14:03] <moritz> as long as I'm doing it, sometimes rakudo and the tests go out of sync

[14:03] *** cognominal left
[14:04] *** cognominal joined
[14:06] *** erkan left
[14:06] *** erkan joined
[14:06] *** erkan left
[14:06] *** erkan joined
[14:08] *** dayangkun joined
[14:08] *** stopbit left
[14:09] *** stopbit joined
[14:15] *** daxim left
[14:22] <[Coke]> ok. Just wanted to make sure I raised the flag, sounds like you have it under control.

[14:24] *** dayangkun left
[14:25] *** wtw left
[14:37] *** raiph joined
[14:37] <spider-mario> p6: if 0 but role {method Bool {.defined}} -> $x {say $x}

[14:37] <p6eval> rakudo 3188ae, niecza v19-37-g0567c61:  ( no output )

[14:37] <spider-mario> my Rakudo says Nil

[14:37] <spider-mario> oh, I getit.

[14:37] <spider-mario> sorry.

[14:38] <spider-mario> that’s because

[14:38] <spider-mario> > if False {say 'Hello'}

[14:38] <spider-mario> Nil

[14:38] <moritz> ==> Bootstrapping Panda

[14:38] <moritz> Unable to parse object, couldn't find final '}'

[14:39] <PerlJam> spider-mario: are you trying to start some obfuscated perl 6?

[14:40] <moritz> anybody else has problems bootstrapping panda?

[14:40] <[Coke]> tadzik: did you end up with a mu/net hybrid that works?

[14:41] *** am0c left
[14:41] *** am0c joined
[14:42] <moritz> that's newest rakudo

[14:45] <dalek> doc: c145248 | moritz++ | lib/X/ControlFlow (2 files):

[14:45] <dalek> doc: X::ControlFlow{,::Return}

[14:45] <dalek> doc: review: https://github.com/perl6/doc/commit/c14524866d

[14:50] *** am0c left
[14:52] <sirrobert> so, I don't think I can demo this here, but I found a small oddity in eval.  Here are the two code snippets that would demonstrate it

[14:52] <sirrobert> say { a => {a => 1} b => {b => 2}, };

[14:52] <sirrobert> say eval slurp 'file.txt';

[14:52] <sirrobert> if 'file.txt' contains the (badly formed) hash from the first line, the two 'says' do different things

[14:52] <sirrobert> the output is different

[14:53] <sirrobert> so put in file.txt:  { a => {a => 1} b => {b => 2}, }

[14:53] <moritz> r: say { a => {a => 1} b => {b => 2}, };

[14:53] <p6eval> rakudo 3188ae: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2, near "a => {a =>"␤»

[14:53] <moritz> sirrobert: I get the same parse error both times

[14:53] <sirrobert> I was creating test fixtures and noticed this because some files that have "expected return values" had a badly formed hash (missing , after the first pair)

[14:53] <raiph> p6rd next

[14:54] <moritz> p6rd: next

[14:54] <p6rd> niecza 2012-08-27, parrot 2012-09-18, rakudo 2012-09-20

[14:54] <moritz> raiph: needs that colon

[14:54] <sirrobert> here, let me put up a gist ...

[14:55] <raiph> moritz: ah. thanks.  

[14:56] <raiph> moritz: i guess p6rd reports the compiler release dates, so not R*, right?

[14:56] <moritz> raiph: that's correct, since the R* release dates aren't so fixed

[14:58] <sirrobert> moritz: https://gist.github.com/3451664

[14:59] *** thelazydeveloper joined
[14:59] <sirrobert> moritz:  refresh the gist for a new comment that may be helpful

[15:02] <moritz> sirrobert: ah, I see the difference. The newline.

[15:02] <sirrobert> yeah.  The thing I noticed first was that the eval output gave me a hash... but with only one element

[15:02] <sirrobert> one sub-hash

[15:02] <sirrobert> which seemed super weird =)

[15:02] <moritz> sirrobert: that's because ; is optional at }\n

[15:03] <moritz> sirrobert: so it's actually a block of two statements

[15:03] <moritz> sirrobert: and in the case of the eval, it's in sink context, and executed immediately

[15:03] <sirrobert> so it creates a kv pair...

[15:03] <sirrobert> then creates another kv pair

[15:03] <moritz> sirrobert: whereas in the case of  say { ... }, it doesn't execute the block

[15:03] <sirrobert> then the outer block does an implicit return

[15:03] <sirrobert> ok

[15:04] <sirrobert> is there anything to be done there, or is it more of a Perl 6 Circus Freak

[15:04] <sirrobert> ?

[15:05] <moritz> well, you could find another pair of bracketing characters in ASCII that we could use for hashs vs. blocks :-)

[15:05] <sirrobert> heh

[15:05] <sirrobert> Let's use ...     {{{{~~{{  }}~~}}}}

[15:05] <sirrobert> heh

[15:06] <sirrobert> I once maintained a project (whug) that had different semantics for :::, ::::, and :::::

[15:06] <sirrobert> (in a data file)

[15:06] <sirrobert> what a nightmare.

[15:09] <arnsholt> Mmmmm. Tasty

[15:09] *** JimmyZ left
[15:12] *** tokuhiro_ joined
[15:12] <[Coke]> r: say {{{{~~{{  }}~~}}}}

[15:12] <p6eval> rakudo 3188ae: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2, near "~~{{  }}~~"␤»

[15:15] <masak> morning, #perl6.

[15:15] <dalek> star: d403141 | moritz++ | / (3 files):

[15:15] <dalek> star: bump some versions

[15:15] <dalek> star: 

[15:15] <dalek> star: also reduce memory numbers in README a bit

[15:15] <dalek> star: review: https://github.com/rakudo/star/commit/d4031414bf

[15:16] <moritz> \o masak 

[15:23] <raiph> does an R* release always use the current monthly compiler release? e.g. will the compiler in the upcoming R* have the P5 regex adverb wired up to the P5Regex stuff jnthn just did? 

[15:23] <moritz> raiph: that one was merged after the release

[15:24] <moritz> raiph: and so far we've always used the latest compiler for a R* release, but it might change in future

[15:24] <jnthn> raiph: No, I deliberately merged it after the release

[15:24] <jnthn> So it'll be in the R* in September.

[15:24] <raiph> ok. makes sense. thanks.

[15:24] <jnthn> It's really not ready for the prime time yet

[15:24] <jnthn> It's a starting point from where I hope by the next September release we can have something fairly complete/compliant.

[15:25] <[Coke]> jnthn: I'm hurt that you'd go after traditionally pugs-only spec tests. ;)

[15:29] <jnthn> [Coke]: That hadn't occurred to me. :)

[15:31] <japhb> moritz, still having panda issues?

[15:31] <moritz> japhb: yes

[15:31] <japhb> What platform?

[15:31] <moritz> japhb: linux

[15:31] <japhb> Latest Rakudo and Panda?

[15:32] <moritz> [Coke]: actually one of the previous Rakudo incarnations (alpha or Bejing, I'm not quite sure which) had fairly many passing p5regex tests

[15:32] <pmichaud> alpha

[15:32] <pmichaud> and yes, lack of p5 regexes is a regression from alpha

[15:33] * japhb wonders when Rakudo will achieve being fully a superset of all non-deprecated features

[15:33] <japhb> (of previous incarnations)

[15:34] <japhb> moritz, Are you using latest git Rakudo and Panda?

[15:34] <moritz> japhb: yes

[15:34] * japhb is trying to find out what exactly he needs to recreate, since compiling is so slow here ...

[15:34] <pmichaud> japhb: I don't know; and that's a bit less interesting to me than the question of "what features are we missing that people really need"

[15:35] <dalek> doc: 7c7b472 | moritz++ | lib/X/Method/NotFound.pod:

[15:35] <dalek> doc: X::Method::NotFound

[15:35] <dalek> doc: review: https://github.com/perl6/doc/commit/7c7b472ed4

[15:35] <japhb> pmichaud, My apologies if that came out as a complaint, it wasn't.  It really was just idle curiosity.  :-)

[15:35] <pmichaud> i.e., I'd rather put tuits into things that I know people need now, rather than restoring a feature that we once had but isn't really needed

[15:35] <japhb> sure, sure.

[15:35] <pmichaud> I didn't take it as a complaint, no -- just wanted to clarify my view of priority :)

[15:35] <japhb> heh

[15:36] <japhb> OK, moritz, will compile a fresh Rakudo and see what I can see

[15:36] <moritz> it looks like a parse error from JSON

[15:38] <japhb> Hmm, nothing new to pull for panda, so the projects.json.bootstrap didn't change since the last time I was in there ...

[15:39] <japhb> moritz, are you doing bootstrap.pl or rebootstrap.pl?

[15:39] <moritz> japhb: bootstrap.pl

[15:39] <japhb> Did you get a backtrace?

[15:40] <moritz> I did, just a sec

[15:41] <moritz> https://gist.github.com/3452108

[15:42] <japhb> Well harumph.

[15:43] <japhb> So it's not bootstrap.pl that's failing, it's panda, and relatively early on, too.

[15:43] * japhb mentally chews that cud

[15:44] <pmichaud> did macros make it into the 2012.08 release?

[15:44] <moritz> no

[15:44] <moritz> at least not unquotes

[15:45] *** ComWT joined
[15:45] <dalek> star: c3ff618 | pmichaud++ | skel/docs/announce/2012.08:

[15:45] <dalek> star: Add a draft announcement for R* 2012.08.

[15:45] <dalek> star: review: https://github.com/rakudo/star/commit/c3ff618225

[15:45] *** alester joined
[15:45] <japhb> Wait, that can't be right ... panda:83 is the if %*ENV<PANDA_DEFAULT_OPTS> { block

[15:45] *** hoelzro is now known as hoelzro|away

[15:46] <moritz> unless it fetches a different panda from somewhere

[15:47] <japhb> moritz, where would it come from?  I mean, bootstrap.pl doesn't pull anything from anywhere ... in fact, it goes through some effort to be offline-only

[15:47] *** ComWT left
[15:47] <moritz> fwiw there's no projects.json in ~/.panda/

[15:48] <japhb> moritz, yeah, last line of bootstrap.pl nukes the temporary one installed there, so that the next (user-executed) run of panda will refetch from the net

[15:49] <japhb> In your panda checkout, what do you get for `git describe --always --dirty`  ?

[15:49] <moritz> 506a8f7

[15:50] <japhb> WTH?

[15:50] <moritz> what's wrong with that?

[15:50] <japhb> And you ran the bootstrap as 'cd working-dir; ./bootstrap.pl' ?

[15:51] <moritz> cd ~/p6/panda; perl6 bootstrap.pl

[15:51] <japhb> Nothing's wrong with that.  The 'WTH?' was that I was figuring that something had to be out of sync in order to get an insane line number in the backtrace.  :-(

[15:54] *** cognominal left
[15:54] *** cognominal joined
[15:55] <raiph> i intend to do some sort of p6 news post on a regular basis. i'd like some feedback on this. (more)

[15:55] *** jaldhar left
[15:57] <japhb> moritz, The thing that is confusing me is that even though we appear have the same checkout of panda, the only place a method new is called in bin/panda is at line 97.  The line '83' in the backtrace is not even close.

[15:57] <japhb> raiph: My feedback: YES, PLEASE.

[15:58] <raiph> heh. sorry, distracted in RL for a moment. more in a mo

[15:58] <japhb> japhb, And later in the trace, from-json gets called online 62 of Ecosystem.pm, not 59 (the latter line is just a closing brace).

[15:59] <moritz> japhb: I also have ~/.perl6/bin/panda which calls .new on line 73

[15:59] <japhb> So either the backtracer and/or annotations are really off, or ...?

[15:59] <FROGGS> raiph: I will read it

[16:00] <raiph> as a strawmanish thing, i did a reddit post last week. i got several things wrong. it didn't go down well.

[16:00] <moritz> japhb: I have no clue

[16:00] <japhb> moritz, That's still not 83.  Do you have more than just those two 'panda' programs around anywhere?

[16:00] <raiph> (http://www.reddit.com/r/perl/comments/ygplc/perl6_highlights_week_ending_20120818_dedicated/)

[16:00] <moritz> japhb: I've recently fiddled a bit with exception classes, but those should not touch the backtrace printer

[16:01] * pmichaud reads the reddit post

[16:01] <moritz> locate tells me I also have a panda in /opt/rakudo-star-2012.07/bin/panda

[16:01] <japhb> moritz, right, all I saw you commit were changes to the exceptions themselves (and converting one class to a role?)

[16:02] <japhb> moritz, where's the .new in that panda?

[16:02] * japhb wonders if perl6 perversely tries finding the script in the path before trying ./<script>

[16:03] <japhb> er, PATH I mean

[16:03] <pmichaud> raiph: what parts "didn't go down well" for you?

[16:04] <moritz> japhb: the .new call is lines 70..75

[16:04] <FROGGS> raiph: I like it, its way more better than just checking the commits for all these repos

[16:04] <japhb> Hmmm, so not even that one matches

[16:05] <japhb> Yay, current rakudo finally compiled; now running a ./rebootstrap.pl

[16:05] <raiph> well, first, compare the voting w/ other p6 posts. 76% liked it. p6 reunification post. 100% liked it. 

[16:06] <japhb> Oooooh, blew up for me too, but very different last line. (bin/panda:101) and Ecosystem.pm line (:62)

[16:06] *** tokuhiro_ left
[16:06] <japhb> Something changed in QRegex that broke the local copy of JSON::Tiny in ext/ in the panda tree?

[16:06] <raiph> saying "dedicated to piers" led several people to think piers had passed away. (i won't use those words again!)

[16:06] <japhb> (That's to the question of why it broke now, when it didn't break a few days ago)

[16:07] <moritz> the only recently-ish regex commit I can find is   Fix double-quoted strings used in regexes; they now interpolate their conten

[16:08] <moritz> (in rakudo)

[16:08] <japhb> As to the question of backtrace lines ... in the two differences, my numbers make sense according to the checked-out files, and yours seem off for some reason.  :-/

[16:08] <japhb> Humm, lemme check JSON::Tiny

[16:09] <pmichaud> raiph: yeah, the "dedicated to piers" part was just a misword; but that's bound to happen from time to time.

[16:09] <raiph> and there were a few other things. i can fix the ones i know about and then iterate. so that's ok. my concerns/questions are...

[16:09] <moritz> japhb: now I get more sensible error messages too

[16:09] *** odoacre left
[16:09] <moritz> erm, line numbers

[16:09] <moritz> after deleting /opt/rakudo-star-2012.07/

[16:09] *** odoacre joined
[16:09] <japhb> That's ... strange.

[16:09] <moritz> which totally isn't in $PATH

[16:10] <japhb> Very, very strange.

[16:10] <moritz> indeed

[16:10] * pmichaud awaits raiph's concerns/questions

[16:12] *** Circlepuller left
[16:12] *** Circlepuller joined
[16:12] <japhb> moritz, Hmmm, " is used bare n a couple places in JSON::Tiny::Grammar, and a couple other places backslashed.  Maybe meaning of unbackslashed quote within character class accidentally changed?

[16:12] <japhb> *bare in a

[16:12] <raiph> i had called it a summary of #perl6, cuz, for the most part, that's what i can know. if i call it "this week in Perl 6" or whatever, well, that feels different

[16:13] <moritz> japhb: the moritz/json repo has some small diffs to the one bundled with panda

[16:13] <moritz> mostly related to whitespace handling

[16:13] <japhb> moritz, resync required?

[16:13] <raiph> i had done it as a reddit post. perhaps i should be posting elsewhere, and posting a link to reddit.

[16:13] <dalek> panda: 8459527 | moritz++ | ext/JSON__Tiny/lib/JSON/Tiny (2 files):

[16:13] <dalek> panda: [ext/JSON] sync from upstream

[16:13] <dalek> panda: review: https://github.com/tadzik/panda/commit/8459527287

[16:13] <[Coke]> only other perl6 stuff I'm aware of is the mailing lists (dead), the bug trackers (summarized in changelogs), twitter, and planet perl6 blog aggregator

[16:13] * japhb pulls

[16:14] <moritz> now I get much further

[16:14] <moritz> maybe it even works

[16:14] <pmichaud> I think "summary of #perl6" is fine.  It's an accurate description, and any other Perl 6 news from outside #perl6 is likely to make it here so it'd get appropriate mention.

[16:14] <[Coke]> raiph: if you post it in a blog, we can add it to planet perl6.

[16:14] <moritz> pmichaud: did any <.ws> changes make it into the rakudo or nqp release?

[16:14] <FROGGS> raiph: no one will blame you if you forget to post about something in your summary

[16:14] <pmichaud> raiph: if you don't have a blog already in mind, I might suggest blogs.perl.org

[16:14] <raiph> i had posted things as "small" as someone adding a slideshow; i think that overly dilutes the likes of jnthn's debugger. 

[16:14] *** thou joined
[16:15] <[Coke]> summaries suck to do, IME. I did them for parrot for a while and it was just overwhelming at the time.

[16:15] <moritz> raiph: maybe group by "importance" rather than by day

[16:15] <pmichaud> moritz: they did not.  I had expected to have the :sigspace stuff in the 2012.08 release... but then the spec changed.

[16:15] <[Coke]> raiph++

[16:15] <japhb> moritz, Oh yeah, working better here too.

[16:15] <japhb> moritz, Why were those changes required?

[16:15] <moritz> raiph: larger scale changes (like the debugger) first, smaller ones later

[16:15] <moritz> japhb: I have no idea

[16:16] <moritz> japhb: I did them in preparation of nqp + rakudo branches that haven't landed yet

[16:16] *** jeffreykegler joined
[16:16] <pmichaud> going by day is easier for the author, however.  I'd suggest a "major items" section at the top, and then "by day" for everything else.

[16:16] <moritz> well, I'm fine the current mode, just reponding to raiph++'s concerns

[16:17] <FROGGS> raiph: ya, like having topics? compiler, grammar, modules, dunno

[16:17] <moritz> (oh and I'm with ++ staying on IRC, and not using ++ in the summary; that seemed to have put off some folks too)

[16:17] <pmichaud> I agree there as well.

[16:18] <pmichaud> raiph:  any other concerns?  or can I start with a summary of my reactions?  ;-)

[16:19] *** cognominal left
[16:20] <raiph> part of the reason i'm doing them is because i've been reading all the #perl6 logs for nearly a year now (after following #perl6 loosely for years, and mailing lists before that)

[16:20] <japhb> moritz, OK, I just completed a full './rebootstrap.pl', so panda itself + a few installed projects.

[16:20] <raiph> so i may as well summarize what i've read

[16:20] <moritz> japhb: bootstrap worked here too

[16:20] <pmichaud> raiph: okay, so here are my thoughts

[16:20] <moritz> but now

[16:20] <moritz> $ panda install Pod::To::HTML

[16:20] <moritz> Segmentation fault

[16:20] <raiph> pmichaud: one last thing.

[16:21] * pmichaud waits.

[16:21] <tadzik> [Coke]: yes, it was working

[16:21] <tadzik> see my spam last night :)

[16:21] *** larks left
[16:22] <japhb> moritz, I'm glad the bootstrap is working again, but I'm concerned that 1) The presence of R* broke line number annotations somehow, and 2) those JSON::Tiny fixes were needed for it not to explode.  Oh, and now 3) that you're getting a segfault.  :-(

[16:22] <raiph> i think i need to be clear on a target audience. obvious ones being those currently doing p6 things vs those not. i could even do two summaries.

[16:22] <raiph> ok. done for a mo. ;)

[16:22] <pmichaud> okay, here are my reactions, in no particular order

[16:22] <pmichaud> 1.  upon reading the reddit summary, my first thought is  "\o/"

[16:22] <pmichaud> I think it's really cool and useful.

[16:22] <pmichaud> I'd like to see more of them.

[16:22] * japhb is ./rebootstrap.pl'ing for a second time just to make sure nothing broke with that, before trying installing another module (I already have Pod::To::HTML installed)

[16:23] <pmichaud> 2.  Reddit isn't at all my favorite forum, though.  I'd like to see it as a blog that can be aggregated into Planet Perl 6, ironman, and the like.

[16:23] <pmichaud> I suggest blogs.perl.org as a possibility; other blog sites are of course an option as well.

[16:24] <tadzik> japhb: what's cooking?

[16:24] <tadzik> we still have the bootstrap fail on windowd

[16:24] <moritz> nom!

[16:24] * moritz now cleans out his entire install dir

[16:24] <moritz> and rebuilds  a parrot, nqp and rakudo from scratch

[16:25] <pmichaud> 3.  I really like the format of the summary -- it's easy to follow.  I would add a "major news" section at the top to highlight anything you think deserve mention over-and-above its normal place in the chronology

[16:25] <japhb> tadzik, Something in latest Rakudo broke the JSON::Tiny snapshot that was in panda; moritz++ merged in upstream changes, and that worked again.  But now moritz is seeing a segfault that so far I am not.

[16:25] <tadzik> argh :(

[16:26] <moritz> do we have a debug mode for panda?

[16:26] <pmichaud> 4.  Everyone I know that has done summaries before cites the amount of work required and ultimate burnout.  I'm extremely happy to have you do summaries and hope you will continue them, but at some point we might want to address burnout in a manner similar to how we handle releases and advent posts.

[16:27] <japhb> tadzik, however we've seen that something appears very fishy on moritz's system (resulting in weird backtrace line number errors), so it may just be something weird on his box (which I assume is why he's blowing his stuff away and starting again with scratch builds)

[16:27] <pmichaud> i.e., when you start to tire, and as the patterns have been established, perhaps we can have people commit to doing specific weeks of the summary

[16:27] <japhb> moritz, debug mode in what sense?

[16:27] <pmichaud> the format you've developed here seems to be conducive to that approach, too -- it's just a bullet list of things that happened with some extra small commentary when appropriate.

[16:28] <raiph> . o O ( wonders how folk do that italicized "listening" thing )

[16:28] <pmichaud> overall, I find the post to be useful and hope you (and perhaps #perl6) can find a way to make sure it's continued.

[16:29] <pmichaud> anyway, those are my thoughts.  raiph++ raiph++

[16:29] <japhb> tadzik, Do you have a backtrace of the bootstrap fail on Windows?  I'm happy to apply some 1950's debugging (look at the error and the source and think REALLY HARD)

[16:29] <tadzik> moritz: what would you expect of such mode?

[16:29] <tadzik> japhb: yes, lemee find it

[16:30] <japhb> raiph, I want to second everything pmichaud said, with the one quibble in #2 that after you post it to a blog, go ahead and link that blog on reddit (as someone mentioned earlier)

[16:30] <pmichaud> japhb++   # I meant to say "and link to reddit" but forgot.

[16:30] <japhb> raiph, are you talking about the /me command in IRC as in '/me is listening'?

[16:31] * raiph feels gratitude

[16:31] <tadzik> japhb: https://gist.github.com/3452578

[16:31] <raiph> japhb: thanks

[16:31] <tadzik> that's from 22.08

[16:31] <japhb> raiph, no problem!

[16:32] <japhb> tadzik, Heh, I bet the real error is in line #4 of that error message.  Now to find the brain fail in the source ...

[16:33] <japhb> raiph, In a nod to IRC, I suppose, several IM systems recognize that as well.  :-)

[16:33] <tadzik> I wonder if that's something DESTDIR-y

[16:33] <tadzik> anyway, my proposal is as so

[16:33] <tadzik> I'm going to move all we have in panda/master to panda/devel, modulo backporting the JSON update

[16:33] <japhb> tadzik, was that reboostrap or just bootstrap that failed?

[16:34] <raiph> thanks for feedback. my comments on pmichaud's 4 points.

[16:34] <tadzik> japhb: just bootstrap I think

[16:34] <tadzik> then we never touch master unless any("it's broken", "we've proven devel branch to work on windows at least 11 times")

[16:35] <japhb> LOL

[16:35] <tadzik> does that sound sane?

[16:37] <japhb> I don't have a problem with that as long as someone actually steps up to doing the testing on Windows in a somewhat decent timeframe; I don't want to lose all interest in working on panda (which is fun and I think useful) because my changes rot in devel for too long.

[16:37] <tadzik> sure thing

[16:37] <tadzik> I'll try again to setup a working env on windows next week

[16:37] <japhb> Excellent.

[16:38] <raiph> pmichaud: 1. ("\o/"). i was going to critique your response but i think that might be misunderstood, so let me move on to point 2...

[16:39] *** am0c joined
[16:40] <japhb> tadzik, I think I found the problem.

[16:40] <raiph> 2. i'll switch to a blog. preferably blogs.perl.org. 

[16:40] <tadzik> [Coke]: https://github.com/tadzik/Net--IRC contains a drop of my yesterdays' hacking

[16:40] <tadzik> japhb: oh, whaft's that?

[16:40] <raiph> and link to it in reddit as japhb suggested

[16:41] <japhb> Line 22 of bootstrap.pl.  I forgot to check for a destdir in Windows format.

[16:41] *** fgomez joined
[16:41] <moritz> japhb, tadzik: I just want much more diagnostic output in debug mode

[16:42] <raiph> 3. i'll do a major news (summary summary) at the top. then start each item with a tag or two (per FROGGS)

[16:42] * japhb is testing that his local fix doesn't break linux

[16:44] * tadzik is back

[16:44] <tadzik> I accidentally stepped on the power switch. 1 hour of sleep strikes again

[16:45] <tadzik> japhb: oh, that may be it, yes

[16:45] <japhb> My feeling of nervousness when writing P6 regexen is slowly giving way to a feeling of happiness.  :-)

[16:46] <tadzik> hehe :)

[16:46] *** bbkr left
[16:47] <[Coke]> tadzik: that repo fails "make test"

[16:47] <tadzik> wow, there are tests? P>

[16:47] <tadzik> :P

[16:47] <tadzik> I had no idea

[16:47] <[Coke]> oh! there are no tests in your repo. that would cause a failure, I bet. ;)

[16:47] <tadzik> no, there are no tests there

[16:48] <tadzik> panda considers that a success :)

[16:48] <tadzik> [Coke]: side effect which I observed on that MuEvent integration is that connecting to freenode tends to freeze for a couple of minutes

[16:48] <tadzik> not sure on what's the cause

[16:48] <raiph> 4. i'm very aware of the issue of burnout. i've got ideas of how to reduce that. (more)

[16:49] <tadzik> but it usually helps if you ncat localhost 1337 to it and poke it with some random data

[16:49] <dalek> panda: 43b3ca8 | (Geoffrey Broadwell)++ | bootstrap.pl:

[16:49] <dalek> panda: Attempted fix for Windows bootstrap problem

[16:49] <dalek> panda: review: https://github.com/tadzik/panda/commit/43b3ca83cc

[16:49] <tadzik> hm, that looks a bit magical :)

[16:50] <japhb> tadzik, successfully rebootstrapped once with the fix, and the next run seems to be going fine, so pushed it for your perusal

[16:50] <tadzik> sure

[16:50] <japhb> tadzik, How else do you say "rooted at the top of a filesystem" in Windows?

[16:50] <[Coke]> tadzik: I installed that version, ran my stupid bot, and now it doesn't connect at all, it seems. program exits without staying in the N::B::I loop

[16:50] <tadzik> I have no eye deer

[16:50] <tadzik> I've spent 2 hours trying to compile rakudo on windows and ended up with unbootable machine

[16:50] <tadzik> don't ask _me_ :P

[16:51] <raiph> pmichaud: (and others) for this week i started a gist: https://gist.github.com/3408683

[16:51] <japhb> I mean, I suppose this might break if someone was trying to install to a UNC path.  Sheesh.  I suppose we need to check for a leading double backslash as well.  :-(

[16:51] <tadzik> [Coke]: hmm, is that possible that Freenodebot.pl is loading some ::Ping module which I forgot to commit?

[16:51] <raiph> i've been updating that as i go along. a couple things could help me.

[16:52] <tadzik> [Coke]: yes I did, maybe that causes the exit somhow

[16:52] <tadzik> stupid me

[16:52] <raiph> 1. if someone thinks an item should be considered for the summary, type an irc line with "[tag]" at the start.

[16:53] <[Coke]> raiph: looks like mj41's charts are just the top 2 compilers.

[16:53] <japhb> raiph: Is that 'tag' literal or metasyntactic?

[16:53] <raiph> 2. if someone thinks the draft summary in the gist needs to change, add a comment to the gist. 

[16:53] <benabik> If it's metasyntactic, we'll end up with a lot of lines tagged Coke.  ;-)

[16:54] <japhb> benabik, nicely put

[16:54] <tadzik> haha

[16:54] <raiph> japhb: meta

[16:54] <benabik> People will think we have a corporate sponsor.

[16:54] <tadzik> :D

[16:54] <japhb> heh

[16:54] *** yangyong joined
[16:54] <tadzik> and let's hope they mean the drink...

[16:55] <pmichaud> I'd guess literal, and perhaps "[summary]" is worthy.

[16:55] <japhb> tadzik, the drink in original formula.

[16:55] <pmichaud> alternatively, we could pick an uncommon term that would be easy to search for in the irc logs

[16:55] <[Coke]> tadzik: http://feather.perl6.nl/~coke/cj.txt - that worked with the original N:I:B

[16:55] <pmichaud> (since perlgeek.de's search doesn't like non-word searches)

[16:56] <raiph> benabik: i'm going to be reading or at least skimming the log, so Coke won't be the biggest topic... 

[16:56] <japhb> tadzik, did you want me to add the check for UNC path in destdir?

[16:56] <tadzik> [Coke]: ...but the code's commented out

[16:56] <raiph> and i'm only going to pay attention to [tag] at the start of a line

[16:56] *** yangyong left
[16:56] <tadzik> japhb: I don't know what UNC is :)

[16:56] <tadzik> I'm happy with whatever unbreaks windows bootstrap

[16:57] <japhb> tadzik, It's how Windows boxen refer to unmounted network drives.

[16:57] <japhb> \\server\share\file_path

[16:57] <[Coke]> tadzik: yes, but now it doesn't even connect and do the Help thing.

[16:57] <tadzik> even if it was to be skipping DESTDIR handling completely for now; let's gets stuff back to working state again, I'll try to make it right when I have a windows env

[16:57] <tadzik> [Coke]: does it hang or eit?

[16:57] <pmichaud> raiph: might I suggest having a github repo for all of the summaries, rather than gists?

[16:58] <[Coke]> it just says Connecting to irc.freenode.net on port 6667

[16:58] <tadzik> if the former, does it hang during the MOTD stage when you debug => True?

[16:58] <[Coke]> and then exits.

[16:58] <tadzik> oh

[16:58] <raiph> [Coke]: top 3 -> 2. thanks

[16:58] <[Coke]> 0 exit status

[16:58] <pmichaud> raiph: then we can just hand out commitbits.  Or the repo could even be in the perl6 github account.

[16:58] <tadzik> [Coke]: I'll recheck stuff when I get access to all("my regular box", "the internet")

[16:58] <raiph> pmichaud: you might, did, and i will do.

[16:58] <raiph> or you will do and add me?

[16:59] <tadzik> [Coke]: ooooh, yes

[16:59] <[Coke]> tadzik: thanks, sir.

[16:59] <tadzik> I know, I broke .run() :P

[16:59] *** bluescreen10 joined
[16:59] <pmichaud> raiph: do you want to limit commitbits or spread them out liberally?

[16:59] <tadzik> I made it setup MuEvent events, but it doesn't actually run anything

[16:59] <[Coke]> tadzik: oooh, what?

[16:59] <tadzik> so you have a chance to setup other things

[16:59] <pmichaud> normally we just set repos to "anyone with a perl6 commitbit can commit..."

[16:59] <tadzik> it'd work if you add MuEvent::run() at the very end

[16:59] <[Coke]> tadzik: ah. should I use Muevent's run, then?

[17:00] <tadzik> [Coke]: both

[17:00] <tadzik> sorry for that :P

[17:00] <tadzik> I was just trying to make it work at all, so it now looks illogical

[17:00] <tadzik> Spock would not be pleased

[17:00] *** erkan left
[17:00] <tadzik> [Coke]: the commited Freenodebot.pl does it the "right" way; $bot.run() and then MuEvent::run()

[17:01] <raiph> pmichaud: i'd say liberal

[17:01] <pmichaud> raiph: yeah, me too.  any idea what to call the repo?

[17:01] <tadzik> the trick is that I made $bot.run() not actually run anything :)

[17:01] *** sftp joined
[17:01] <tadzik> I'll fix it later

[17:02] <japhb> tadzik, I've got an idea for "less magical", give me a sec to try it.

[17:02] <pmichaud> perl6/summary, perhaps?

[17:02] <pmichaud> perl6/reports ?

[17:02] <raiph> is a # allowed in the name? (presumably not)

[17:02] <pmichaud> probably not

[17:03] <tadzik> no, I think not

[17:03] <pmichaud> if we do perl6/reports, we might have reports from more than just #perl6 channel summaries

[17:03] <[Coke]> Definitely seeing the delay in getting into the channel..

[17:03] <tadzik> yeah

[17:03] <tadzik> does it help if you poke it?

[17:03] <tadzik> oh, that only works in freenodebot

[17:04] <tadzik> it listens on a socket on 1337 so you can talk on the channel

[17:04] <pmichaud> I think I like perl6/reports for now.  Perhaps it can be a repo for some of Coke++'s compiler comparisons, or other reports/statistics that we decide to start accumulating.

[17:04] <tadzik> and for some reason when you start doing that during the delay it usually gets through it

[17:04] <raiph> how about summaries (plural)

[17:04] *** birdwindupbird left
[17:04] <raiph> reports works too

[17:05] <pmichaud> I prefer reports; you get to make the final decision.  :-)

[17:05] <raiph> reports is it

[17:06] <raiph> (i've been wanting to fit [Coke]++'s reports in somehow)

[17:06] <[Coke]> tadzik: thank you thank you. I now have a timed event running, and the irc bot responding to things also.

[17:07] <tadzik> nice!

[17:07] <tadzik> awesome

[17:07] <pmichaud> https://github.com/perl6/reports  

[17:07] <tadzik> I wonder what causes those weird delays

[17:07] <pmichaud> perl6 team has push+pull rights to the repo

[17:08] <pmichaud> raiph++

[17:08] <tadzik> is that a freenode timeout of some sort, when it notices that we don't respond fast enough?

[17:08] <pmichaud> tadzik++ Coke++  # bot bot

[17:09] <pmichaud> I'm afk for a moment

[17:10] * [Coke] stares at https://github.com/TiMBuS/Net--IRC/blob/master/lib/Net/IRC/Modules/unsmith

[17:10] *** SamuraiJack__ joined
[17:13] *** SamuraiJack_ left
[17:14] <[Coke]> tadzik: sorry to bug ya: any idea how to send a message out of the blue without responding to anything?

[17:15] <[Coke]>         Net::IRC::Event.new().msg("eek", "#botttest");

[17:16] <[Coke]> (that's as close as I've gotten yet.) Still digging.

[17:16] *** fgomez left
[17:19] <sirrobert> is there a succinct way to get a random element from a list?

[17:19] <pmichaud> @list.pick

[17:19] <sirrobert> ah, nice

[17:19] <pmichaud> also   @list.pick(3)   # grab 3 elements at random from @list, w/o replacement

[17:20] <sirrobert> huh, very cool

[17:20] <moritz> http://doc.perl6.org/type/List#pick

[17:20] <pmichaud> took me a minute to come up with the url :-)

[17:20] <pmichaud> we need a bot that can take   "doc List.pick"  and convert it to the url.  :-)

[17:21] <sirrobert> I keep forgetting to look in List for stuff

[17:21] <sirrobert> pmichaud++

[17:21] <tadzik> [Coke]: ah, yes

[17:21] <moritz> http://doc.perl6.org/pick also works

[17:21] <pmichaud> I tried http://doc.perl6.org/List.pick and it didn't work for me yet.  :-/

[17:21] <raiph> tadzik: "weird delays" bufferbloat? http://www.chizang.net/alex/blog/2012/07/24/bufferbloat-for-the-impatient/

[17:21] <moritz> it's just one click more away

[17:21] <tadzik> [Coke]: I added some copypasta in my fork, so you can do $bot.sendmsg()

[17:21] <tadzik> see the Freenodebot.pl in my repo

[17:21] <pmichaud> The requested URL /List.pick was not found on this server.

[17:22] <pmichaud> anyway, fixable later.

[17:22] <pmichaud> too many other things on my stack to work on it now :)

[17:22] <pmichaud> should I file an issue ticket for it?

[17:22] <moritz> yes please

[17:22] <dalek> panda: 20030ec | (Geoffrey Broadwell)++ | bootstrap.pl:

[17:22] <dalek> panda: More Win32 bootstrap compatibility work: now with UNC support and less repetition

[17:22] <dalek> panda: review: https://github.com/tadzik/panda/commit/20030ec099

[17:23] <japhb> OK, tadzik: I think that's the one to either find is working on Win32, or move to devel.

[17:23] <japhb> jnthn, ping

[17:25] <[Coke]> tadzik++ again!

[17:27] <tadzik> :)

[17:28] <moritz> today's autopun: https://twitter.com/mhorsfall/status/236980390173224960

[17:28] <moritz> well, it's borderline

[17:28] <moritz> probably not a real autopun

[17:28] <[Coke]> tadzik: you are missing the Ping module, it seems.

[17:29] <tadzik> yes

[17:29] <tadzik> I'll push it soonish

[17:30] <[Coke]> hurm. No such method 'sendmsg' for invocant of type 'Net::IRC::Bot'

[17:32] *** cognominal joined
[17:32] <pmichaud> https://github.com/perl6/doc/issues/5

[17:34] <benabik> i<3Bex

[17:34] <benabik> Oooooops

[17:34] * benabik changes his computer passwords...

[17:34] <tadzik> :>

[17:36] <tadzik> [Coke]: Ping.pm pushed

[17:37] <moritz> tadzik: have you already looked at sub pod-gist in perl6/doc's htmlify.pl?

[17:37] <moritz> *nudge*

[17:37] <tadzik> oh, noes, did not

[17:37] <tadzik> will do

[17:37] <tadzik> [Coke]: huh, indeed, I broke this sendmsg() somehow. Does it work for you?

[17:38] *** cognominal left
[17:39] <[Coke]> no, I got the error I mentioned. will repull and try again.

[17:39] <tadzik> I'll fix it and push

[17:40] <tadzik> and maybe give run() some sane name

[17:40] *** tadzikbot joined
[17:40] <tadzikbot> Oh, I can talk again!

[17:40] <tadzik> :ping

[17:40] <tadzikbot> tadzik: pong

[17:40] <tadzik> good boy

[17:40] *** tadzikbot left
[17:41] <tadzik> [Coke]: pushed

[17:41] <tadzik> there are a couple of things in the API that I don't quite like

[17:41] <tadzik> maybe I could write a port of a8bot to Perl 6

[17:46] *** jeffreykegler left
[17:47] <sirrobert> r: sprintf('%s', 'foo');

[17:47] <p6eval> rakudo 3188ae:  ( no output )

[17:47] <sirrobert> r: sprintf ('%s', 'foo');

[17:47] <p6eval> rakudo 3188ae: OUTPUT«Null PMC access in get_string()␤  in sub sprintf at src/gen/CORE.setting:2106␤  in block  at /tmp/gSomnINKaG:1␤␤»

[17:47] <dalek> panda: 45e2dd9 | tadzik++ | rebootstrap.pl:

[17:47] <dalek> panda: Add a friendly message to rebootstrap.pl

[17:47] <dalek> panda: review: https://github.com/tadzik/panda/commit/45e2dd9f4b

[17:49] *** crab2313 joined
[17:52] <tadzik> moritz: ooh, it's awesome :)

[17:53] <[Coke]> tadzik++

[17:53] <tadzik> moritz: it doesn't like Tables though

[17:54] <moritz> tadzik: ah yes, that's missing

[17:54] <tadzik> I don't get part of it though

[17:54] <tadzik> line #51 in htmlify

[17:54] <tadzik> why would $c have an indent methnod?

[17:55] <moritz> I assume that if it's not a Pod::Block, it's a Str

[17:55] <tadzik> or Table there's Array

[17:56] <moritz> that was the part I was missing

[17:56] <tadzik> .Str.indent makes it okay

[17:56] <moritz> +1 to that then

[17:56] <tadzik> well, okay-ish

[17:57] <tadzik> https://gist.github.com/3453518

[17:57] <tadzik> it loses some table column aligning

[17:57] <tadzik> maybe let's turn it into .perl of Array[Str]

[17:58] <moritz> if $c ~~  Array { $c>>.Str.perl }  ?

[17:59] <tadzik> plus indentation, and yes, should be good

[18:00] <tadzik> yeah, looks good

[18:00] <tadzik> https://gist.github.com/3453570

[18:00] <tadzik> nicely done, moritz++

[18:01] <moritz> nr: my ($a, $b) = < a b >; say "/type/$a#$b"

[18:01] <p6eval> rakudo 3188ae: OUTPUT«===SORRY!===␤Confused␤at /tmp/eRN4VCfR7r:1␤»

[18:01] <p6eval> ..niecza v19-37-g0567c61: OUTPUT«/type/a#b␤»

[18:01] <moritz> that one is annoying

[18:02] <moritz> nr: my ($a, $b) = < a b >; say "/type/$a#{$b}"

[18:02] <p6eval> rakudo 3188ae: OUTPUT«===SORRY!===␤Confused␤at /tmp/2MlXuw8R35:1␤»

[18:02] <p6eval> ..niecza v19-37-g0567c61: OUTPUT«/type/a#b␤»

[18:02] <moritz> nr: my ($a, $b) = < a b >; say "/type/{$a}#$b"

[18:02] <p6eval> rakudo 3188ae, niecza v19-37-g0567c61: OUTPUT«/type/a#b␤»

[18:02] <pmichaud> I suppose I should fetch some dinner... bbl

[18:03] *** cognominal joined
[18:13] <dalek> rakudo/nom: 5ceefd9 | tadzik++ | src/core/Pod.pm:

[18:13] <dalek> rakudo/nom: Improve Pod::Block stringification, moritz++

[18:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5ceefd94e1

[18:14] *** raiph left
[18:15] <moritz> doc.perl6.org is now 6M images and 7M HTML

[18:15] <tadzik> wow

[18:16] <moritz> much of that is duplicated though

[18:16] <dalek> doc: 44661e7 | moritz++ | htmlify.pl:

[18:16] <dalek> doc: [htmlify] write files in Class.method format

[18:16] <dalek> doc: 

[18:16] <dalek> doc: Closes #5.

[18:16] <dalek> doc: review: https://github.com/perl6/doc/commit/44661e74a3

[18:16] <moritz> you can reach List.pick as /pick /List.pick /routine/pick and /type/List#pick

[18:20] <[Coke]> 14:20 < cjbot> @guhoqik tweeted 'Perl 6 Essentials (Paperback): Perl 6  Essentials is a sneak-preview of Perl 6, the widely-anticipated  rewrite of... http://t.co/wdzfeXCg'

[18:21] <[Coke]> \o/

[18:22] *** am0c left
[18:24] <tadzik> woo'

[18:24] <tadzik> is that like, Perl6-running?

[18:24] <[Coke]> I don't know what that means.

[18:25] *** larks joined
[18:26] *** larks left
[18:26] *** larks joined
[18:29] <diakopter> [Coke]: I'm confused.

[18:29] <diakopter> why tweet that

[18:29] *** jevin left
[18:30] <diakopter> it was published 9 years ago

[18:30] <[Coke]> diakopter: the point was not that someone tweeted that particular tweet, but that my cjbot (running on rakudo) was able to find that out and tell IRC.

[18:30] <diakopter> ohhh

[18:30] <diakopter> I haven't seen cjbot

[18:31] <[Coke]> yah, he's not baked yet.

[18:31] <[Coke]> tadzik++ just got me all the pieces I need. the glue works, now I need to smarten him up slightly.

[18:31] <tadzik> [Coke]: that was what I meant; if the bot is Perl6-driven

[18:31] *** jevin joined
[18:33] <tadzik> I'm particularly curious how you made https://github.com/TiMBuS/Net--IRC/blob/master/lib/Net/IRC/Modules/Twitter.pm work :)

[18:33] <[Coke]> tadzik: by ignoring it completely. I didn't realize it existed.

[18:33] <tadzik> :)

[18:34] <[Coke]> I'm doing a LWP::Simple pull against the API.

[18:34] <tadzik> awesome

[18:40] *** hoelzro|away is now known as hoelzro

[18:41] *** hoelzro is now known as hoelzro|away

[18:42] * [Coke] looks at tadzik's URL. .. yah, wow, that would have been hard.

[18:55] *** birdwindupbird joined
[19:00] *** cjbot joined
[19:00] * [Coke] crosses his fingers.

[19:01] <[Coke]> feel free to boot him if we think this is too noisy.

[19:01] <cjbot> @prinrusalv tweeted 'Perl 6 Now: The Core Ideas Illustrated With Perl 5 (Expert's Voice in Open Source) (Paperback): This book is a g... http://t.co/mJFKOF2R'

[19:02] <cjbot> @guhoqik tweeted 'Perl 6 Essentials (Paperback): Perl 6 Essentials is a sneak-preview of Perl 6, the widely-anticipated rewrite of... http://t.co/wdzfeXCg'

[19:02] <[Coke]> ... and that's up to the last tweet. hopefully any new ones will correctly fill in, no more than one every thirty seconds.

[19:02] <benabik> Speaks up anytime someone on Twitter mentions "Perl 6"?

[19:03] <[Coke]> or one of a few hash tags.

[19:03] *** GlitchMr left
[19:06] <[Coke]> https://github.com/coke/cjbot

[19:08] <[Coke]> benabik: criteria (preencoded because I'm the wrong kind of lazy) on line 11

[19:08] <[Coke]> cjbot: help

[19:08] <cjbot> Run by Coke, I relay tweets about Perl 6.

[19:08] <benabik> [Coke]: Saw that.

[19:08] <benabik> Coke++

[19:12] <FROGGS> can somebody help me with classes and namespaces? I wanna have a class within a namespace, but putting this class in a module or package doesnt help. $object.WHAT doent report the namespace...

[19:13] <moritz> FROGGS: is that a problem?

[19:14] <moritz> if you write   class A::B { }, then .WHAT returns A::B

[19:14] <sirrobert> module Foo;  class Foo::Bar;

[19:14] *** stopbit left
[19:14] <moritz> if you write package A { class B { } }, then .WHAT reports B

[19:14] *** stopbit joined
[19:14] <moritz> so you can just pick the notation that suits your needs better

[19:15] <FROGGS> moritz: funny thing, I was sure I tried prepending the namespace and it didnt compile... now it works, thanks!

[19:15] <FROGGS> that was easy ;o)

[19:16] <sirrobert> how can I export an enum?  enum E <A B C>;

[19:16] <sirrobert> rather, the symbols A B C above

[19:18] <moritz> I fear that's NYI

[19:18] *** Moukeddar joined
[19:18] <sirrobert> ok, no problemo =)

[19:18] <benabik> constant A = E::A #?

[19:18] <moritz> r: module A { enum E is export <a b c>  }; import A; say E;

[19:18] <p6eval> rakudo 5ceefd: OUTPUT«E()␤»

[19:18] <moritz> r: module A { enum E is export <a b c>  }; import A; say a;

[19:18] <p6eval> rakudo 5ceefd: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&a' called (line 1)␤»

[19:18] <moritz> r: module A { enum E is export <a b c>  }; import A; say E::a;

[19:18] <p6eval> rakudo 5ceefd: OUTPUT«a␤»

[19:19] *** crab2313 left
[19:19] <sirrobert> I'll export a set of dummy methods that will act the same, and switch over when available

[19:21] <masak> sirrobert++ # workarounditude

[19:22] <masak> but you probably meant s/functions/methods/

[19:22] <sirrobert> heh =)

[19:22] * masak idly wonders if there's something difficult blocking export of enums

[19:22] <sirrobert> s/methods/functions/?

[19:22] <moritz> yes, that way

[19:22] <masak> sirrobert: this is how tired I am currently.

[19:22] <sirrobert> does "functions" mean something in p6 currently?

[19:22] <masak> can't even s/// in the right direction.

[19:22] <masak> sirrobert: sure. subroutines.

[19:23] <sirrobert> masak: heh nod.  my wife got "Band Hero" last night and we rocked out with the kids 'til late =)

[19:23] <masak> r: sub foo { say "OH HAI function" }; foo

[19:23] <p6eval> rakudo 5ceefd: OUTPUT«OH HAI function␤»

[19:23] <sirrobert> masak:  ah, I usually mean "functions" in the general sense of portable code

[19:23] <masak> r: class A { method foo { say "OH HAI method" } }; A.new.foo

[19:23] <p6eval> rakudo 5ceefd: OUTPUT«OH HAI method␤»

[19:23] *** bbkr joined
[19:23] <masak> sirrobert: sure. but you wrote "methods", which is the more specific form.

[19:23] *** snearch joined
[19:23] <sirrobert> ohhh, yeah

[19:24] <sirrobert> righto =)

[19:24] <masak> if you go deep enough into the internals of Perl 6, functions and methods are the same kind of thing.

[19:25] <sirrobert> hey quick question (tangent)

[19:25] <sirrobert> aside from actual code contribution, what is the most helpful way to contribute to the core development?

[19:25] <sirrobert> money?

[19:25] <masak> r: class A { our method foo { say "I can be lifted out of my context and called on other things" } }; my &bar = &A::foo; bar( A.new )

[19:25] <p6eval> rakudo 5ceefd: OUTPUT«I can be lifted out of my context and called on other things␤»

[19:26] <masak> sirrobert: we have a bigger lack of tuits than of money, considering.

[19:26] <sirrobert> fair enough

[19:26] <sirrobert> so man hours

[19:26] <masak> sirrobert: we need brains, so that we can plug them into the big Perl 6 project machine.

[19:26] <moritz> sirrobert: feedback

[19:26] <masak> like the Matrix.

[19:26] <sirrobert> masak: heh

[19:26] <sirrobert> moritz: via ?

[19:26] <moritz> #perl6 :-)

[19:26] <sirrobert> heh ok 

[19:26] <moritz> sirrobert: you're already doing it

[19:27] <sirrobert> fwiw, we're close to a commercial release of our product with a p6 component.

[19:27] <sirrobert> ~1mo.

[19:27] <moritz> \o/

[19:27] <sirrobert> I've found it pretty easy to develop with so far

[19:27] <sirrobert> (big thanks to all of you =)

[19:28] <moritz> (re money, currently the main benefit would be funding travel to meetups)

[19:28] <sirrobert> ok

[19:28] *** thou left
[19:28] <sirrobert> I guess more modules in the ecosystem might help indirectly

[19:28] <sirrobert> getting more people using it

[19:28] <moritz> they do

[19:29] <FROGGS> thats why I to get SDL there ;o)

[19:29] <FROGGS> (a working one)

[19:29] <sirrobert> FROGGS:  SDL?

[19:29] <FROGGS> graphics and input output stuff

[19:29] <FROGGS> to make games for example

[19:29] <sirrobert> ahhh 

[19:29] <sirrobert> cool

[19:31] <moritz> sirrobert: http://rakudo.org/how-to-help/ fwiw

[19:31] <masak> sirrobert: (re T minus ~1mo to commercial release) wow.

[19:31] <sirrobert> moritz: nice, thanks

[19:31] <moritz> the list on top isn't specific to rakudo

[19:31] *** KohYahHwee left
[19:31] <sirrobert> masak: it's mostly p6 and lisp

[19:31] <sirrobert> fun stuff

[19:33] <masak> cool.

[19:34] <sirrobert> the cool part is that we're ending up with a smaller codebase

[19:34] <masak> :)

[19:34] * masak .oO( because making it larger just doesn't work... ) :P

[19:34] <sirrobert> partially due to conceptual refactoring for elegance, but partially because those two languages in particular are proving to be really smooth in our problem space

[19:34] <masak> yay

[19:35] <moritz> masak: re exporting enums, I don't think it's hard per se... (more)

[19:35] <moritz> masak: but enum elements have a tendency not to throw redecaration errors

[19:35] <moritz> nr: constant a = 42; enum Foo <c b a>; say a

[19:36] <p6eval> niecza v19-37-g0567c61: OUTPUT«===SORRY!===␤␤Illegal redeclaration of symbol 'a' (see line 1) at /tmp/iM04yOuwvU line 1:␤------> constant a = 42; enum Foo <c b a>⏏; say a␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.sett…

[19:36] <p6eval> ..rakudo 5ceefd: OUTPUT«a␤»

[19:36] <moritz> heh

[19:36] <moritz> I would have expected that to say 42

[19:36] <moritz> anyway, that's difficult to do right with exportation

[19:37] <moritz> because in the current setup, there's an export and an import step

[19:37] <moritz> and the export step doesn't know about the import list yet, so it can't be sensitive to this kind of thing

[19:37] <[Coke]> ugh. I can't leave cjbot running. he's chewing 96% of CPU on feather.

[19:37] <moritz> and at the import step, we have lost the information if it's a "soft" or a "hard" export

[19:38] <moritz> [Coke]: add a few sleeps (and disable them in debug mode)?

[19:38] <[Coke]> moritz: what sleeps, it's using MuEvent.

[19:38] <moritz> oh, hum.

[19:38] <moritz> [Coke]: ignore me

[19:38] * [Coke] wonders if disabling debug mode will help.

[19:38] <japhb> sirrobert, re: money, I suspect the money -> value function is not smooth. There's a step at "enough to get some more people to hackathon/conference", there's a step at "help a core person justify time on a hard problem", and there's a step at "make Perl 6 a $day_job for some core person".

[19:39] <masak> japhb: nice way to describe it.

[19:39] <sirrobert> japhb: that makes sense.  when there's a critical mass of brains involved, that will smooth out

[19:39] *** cjbot left
[19:40] * moritz would love to make his living with p6

[19:40] <japhb> DITTO THAT

[19:40] <sirrobert> =)

[19:40] * japhb works here in order to justify making that happen at $day_job some day.  :-)

[19:42] <moritz> without a familiy, I'd take higher risks to make that happen (something part-time startup-y)

[19:42] <japhb> ditto that, too.

[19:42] <sirrobert> that's what I did =)

[19:43] <japhb> Family really changes the risk equation

[19:43] <sirrobert> japhb: yeah; they have to be all-in too

[19:43] <jnthn> japhb: pong

[19:43] <sirrobert> japh: thankfully my kids (4) are too young to care =)

[19:43] *** popl joined
[19:43] <__sri> moritz: a Typesafe for perl6? :)

[19:43] <japhb> sirrobert, wow.  Color me doubly impressed.

[19:44] <sirrobert> mostly it means minimal "personal interests" to make sure to have an ok balance

[19:45] <japhb> jnthn, I was wondering if I could convince you to try pulling a current panda and running reboostrap.pl on your Windows box.  Apparently I broke it a couple days ago, I've put in what I hope is a fix, but have no way to test.

[19:45] <tadzik> [Coke]: woah, awesome! [Coke]++

[19:45] * arnsholt is starting to like tmux

[19:45] <moritz> __sri: yes :-)

[19:45] * masak read that as "* arnsholt is starting to like tux"

[19:45] <japhb> arnsholt, on its own merits, or compared to screen?

[19:46] <arnsholt> Compared to screen I guess, since it's what it replaced

[19:46] <jnthn> japhb: Yes, though not tonight; I need to pack and get an early night due to 5am airport trip.

[19:46] <arnsholt> Mostly because I now can have vertical splits (yay!) and a configuration file and documentation that isn't utterly inscrutable

[19:46] <jnthn> Well, get up at 5am...

[19:46] <japhb> Ah.  What do you like about tmux that screen did not give you?

[19:47] <jnthn> japhb: Anyway, hackathoning for the coming days, so I'll find time. :) Bother me if I manage to forget :)

[19:47] <japhb> jnthn, Oh, no problem (re: not tonight), and ++jnthn for finding time during hackathon.  ;-)

[19:47] <tadzik> a-ha, MuEvent put to practical use. Awesome!

[19:48] <arnsholt> japhb: Mostly the vertical splits, really

[19:48] <tadzik> I like having WM to do that :)

[19:48] *** adu joined
[19:48] <japhb> arnsholt, hmmm.  Vertical splits are a tad less useful for me, because the only time I tend to want that is when I'm using my editor--which already does screen splitting.  :-)

[19:48] <arnsholt> (Also the fact that it seems that screen's source code is so scarily spaghettied up that it makes people run away screaming)

[19:48] <tadzik> and I still prefer gvim to vim, for some mysterious reason

[19:49] <arnsholt> Yeah, most of the time vim's vertical splits are enough

[19:49] <moritz> tadzik: me too

[19:49] <japhb> Also, I got really great use out of screen -x on a second monitor to have two monitors looking at different sessions in the same screen

[19:49] <arnsholt> But occasionally I really want vim on one side and a manpage on the other

[19:49] <tadzik> same

[19:49] <moritz> tadzik: mostly because the default color screen and font sizes are friendlier, I suppose

[19:49] <tadzik> or vim here, running env there

[19:49] <[Coke]> tadzik: it was awesome until I noted the near 100% cpu usage and shut him down. :)

[19:50] <arnsholt> Yeah, I've done the screen -x thing a bit, but didn't quite like it

[19:50] <tadzik> [Coke]: oh, haha, I know why :P

[19:50] <tadzik> MuEvent just keeps running

[19:50] <tadzik> and running

[19:50] <arnsholt> I prefer terminal vim for some reason

[19:50] <tadzik> "is it time? No? Ok"

[19:50] <tadzik> "how about now?"

[19:50] <arnsholt> Probably because almost everything I do these days is terminal-mediated anyways

[19:51] <tadzik> [Coke]: an easy workaround is to add an idle event which will do sleep(30) or so

[19:51] <sirrobert> arnsholt: me too

[19:51] <[Coke]> tadzik, moritz: ah! moritz was right! ;)

[19:51] <arnsholt> Oh, and another perk of moving to tmux is that I now have mostly-similar bindings in tmux and vim for window manipulation ^_^

[19:51] * japhb often gets fumble-fingered trying to keep straight the hotkeys for changing: window within emacs, session within screen, virtual desktop within GNOME, TTY within Linux, ...

[19:52] <tadzik> good that our sleep() is not a loop :P

[19:52] <moritz> nr: enum A <b c>; say A ~~  Enumeration

[19:52] <p6eval> rakudo 5ceefd: OUTPUT«False␤»

[19:52] <p6eval> ..niecza v19-37-g0567c61: OUTPUT«===SORRY!===␤␤Undeclared name:␤        'Enumeration' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1402 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 37) ␤  at …

[19:53] *** gongyiliao left
[19:53] <arnsholt> japhb: Yeah, I fixed that now. Now I just have to keep straight whether I want to navigate withing tmux or within vim instead =)

[19:53] <arnsholt> C-W Left and C-A Left

[19:53] <moritz> nr: enum A <b c>; say A.^mro, A.^roles

[19:53] <p6eval> niecza v19-37-g0567c61: OUTPUT«Unhandled exception: Unable to resolve method mro in type ClassHOW␤  at /tmp/klSspzutY5 line 1 (mainline @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4137 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4138 (module-CORE @ 571) ␤  at /ho…

[19:53] <p6eval> ..rakudo 5ceefd: OUTPUT«No such method 'roles' for invocant of type 'Perl6::Metamodel::EnumHOW'␤  in block  at /tmp/H7QmozdTj2:1␤␤»

[19:53] <tadzik> I wonder what smart event loops do

[19:53] <moritz> r: enum A <b c>; say A.^mro

[19:53] <p6eval> rakudo 5ceefd: OUTPUT«A() Int() Cool() Any() Mu()␤»

[19:54] <moritz> jnthn: in multi dispatch, how do I define a candidate for enums?

[19:54] <tadzik> I think that crons actually calculate stuff like "oh, next event in 3 hours? Ok, sleep for 3 hours"

[19:54] <arnsholt> tadzik: I think they do something like select(2) to block until something happens

[19:54] <tadzik> hmm

[19:54] <moritz> now that zavolaj has callbacks, you could make bindings to libev or ev

[19:54] <tadzik> so if something happens select() wakes it up

[19:55] <tadzik> and if not, we just sleep for however long we want to

[19:55] <moritz> (maybe)

[19:55] <arnsholt> Apparently there's something called poll(2) as well

[19:55] <tadzik> we have that

[19:55] <tadzik> but only for one socket at a time

[19:55] <__sri> moritz: make it libuv

[19:55] <tadzik> which is a bit, bleh

[19:55] <sirrobert> I think someone said this before, but are heredocs in?

[19:55] <tadzik> nope

[19:55] <sirrobert> ok

[19:55] <tadzik> not in Rakudo at least

[19:55] <masak> Niecza has'em.

[19:55] <sirrobert> ok

[19:56] <sirrobert> it hardly matters since newlines in a "" don't warn or die.

[19:56] <sirrobert> at least, for my uses =)

[19:56] <__sri> https://github.com/joyent/libuv # the holy grail of cross platform event loops

[19:56] <moritz> they are nasty to do, from a parser writer's POV

[19:56] <sirrobert> moritz: makes sense

[19:56] <moritz> __sri: I'm looking at uv.h now to see how easy/hard it would be create bindings

[19:57] <japhb> __sri, does it manage to keep libev's performance?

[19:57] <__sri> i believe all I/O in Rust is based on libuv

[19:57] <__sri> japhb: it uses libev

[19:57] <__sri> but also has a windows IOCP layer

[19:57] <japhb> __sri, I meant, does it lose that performance edge in the process of putting more layers on top?

[19:58] <__sri> nope

[19:58] <japhb> (That's a curiosity -- it wouldn't matter for Rakudo right now, the event lib isn't the performance limitation -- I just wanted to know in general)

[19:58] <japhb> Ah, cool.

[19:59] <arnsholt> Feel free to create Zavolaj issues for things that block bindings for stuff =)

[19:59] <__sri> but it is a lot more

[19:59] <arnsholt> I have some kind of fuzzy of stuff I want to do, but issues from actual people would be great

[20:01] *** skids left
[20:01] <moritz> from a quick glance it doesn't look nasty

[20:01] <moritz> (from a native call POV)

[20:01] <__sri> japhb: it's basically your entire I/O layer if you want it to be, from non-blocking DNS async I/O emulation for filesystem operations

[20:01] <__sri> *+to

[20:01] <japhb> arnsholt, do you think Zavolaj is far enough along to try OpenGL/GLU/GLUT/etc. bindings?

[20:02] * japhb wonders if he really wants to bite off that gigantic project all over again ....

[20:02] <arnsholt> I have no idea, TBH

[20:02] <arnsholt> I mean, we have most (but not all) the pieces required for "normal" C data

[20:02] <arnsholt> Structs of stuff, arrays of stuff, plain data

[20:03] <moritz> fwiw I think you can make pretty much everything work if you are willing to write some C glue code

[20:03] <japhb> It was interesting to do once (for parrot), but the callbacks were painful and wrong, and the missing bits stayed missing until after I lost interest.  :-/

[20:03] <japhb> Hmmm

[20:03] <moritz> for example if you need access to variables, you write a pair of small C functions, one for getting, one for setting the value

[20:03] <__sri> multiple languages already use libuv as their I/O layer, it's a pretty safe bet ;)

[20:03] <japhb> __sri, oh?  Which langs?

[20:03] <__sri> Rust for example

[20:03] <moritz> node

[20:04] <__sri> right

[20:04] <arnsholt> The big things missing, AFAIK, are: sized thingummies in structs and arrays (probably the biggest missing piece), flattened arrays in structs (though that can be hacked around), and global variables

[20:04] <__sri> it's the foundation of node.js

[20:04] * arnsholt goes to add issues for those last two

[20:04] <japhb> It does have an active commit history, with what appears to be two active core committers.

[20:05] <__sri> joyent pays an army of people to work on it

[20:05] <__sri> top folks that worked on solaris before

[20:05] <masak> 'night, #perl6

[20:05] <tadzik> arnsholt: last time I was missing something it was openssl/SHA1 returning unsigned long *

[20:05] <tadzik> or maybe I just didn't know how to use that

[20:05] <japhb> __sri, OK, I'm starting to be impressed.  ;-)

[20:05] <tadzik> good knight masak

[20:06] *** cjbot joined
[20:06] <japhb> good night masak

[20:06] <sirrobert> wave masak

[20:06] <arnsholt> tadzik: Oh, that's another one. But you can hack around it by making it return CArray[Int]

[20:06] <[Coke]> ok. cjbot is back, tadzik++, moritz++

[20:07] <FROGGS> arnsholt: will I be able to pass a subroutine to a c func that takes it as a callback?

[20:07] <arnsholt> (Same hack as moritz++ figured out for handling int* arguments to functions)

[20:07] <arnsholt> FROGGS: YES!

[20:07] <__sri> japhb: microsoft also pays a few people to maintain the IOCP stuff ;)

[20:07] <arnsholt> (I'm a bit proud of that one =)

[20:07] <FROGGS> arnsholt: but it is not done yet, is it?

[20:08] <arnsholt> FROGGS: No docs, ATM, but take a look at the tests in Zavolaj. Called $number-callbacks.{c,t}

[20:08] <FROGGS> wow

[20:08] <arnsholt> Hmm. Thought we merged that one

[20:08] <arnsholt> Lemme check

[20:08] <__sri> microsoft really wanted to get node.js on their azure cloud, and libuv benefits heavily from that

[20:08] <arnsholt> Yup. t/08-callbacks.{t,c}

[20:08] <japhb> __sri, OK, that's another big plus.  One of the things that cemented jQuery for me at all $day_jobs was knowing that Microsoft used it, so I need not care about IE compatibility getting broken and no one noticing.

[20:09] <__sri> japhb: and the best, microsoft has no say in the design, they just make it run with IOCP ;p

[20:09] <japhb> heh

[20:10] <FROGGS> arnsholt: ya I see, thats pretty f... awesome... now I just  need to get all the things working to actually test that ;o)

[20:10] <arnsholt> Thanks. I'm pretty pleased with how that turned out, in the end

[20:10] <FROGGS> ya, you can

[20:10] <FROGGS> the handling is pretty cool actually

[20:11] <arnsholt> It's almost entirely untested (save for the tests I pointed you at) so I wouldn't be surprised if you find bugs

[20:11] <arnsholt> Yeah, libdyncallback turned out to be pretty awesome

[20:11] <arnsholt> The people making that are the impressive ones, really. I just figured out how to plug into their interfaces =)

[20:12] <FROGGS> if I would count the hours I debugged that callback stuff for perl5+libSDL... So I could imagine that not everything will work out of the box

[20:12] <arnsholt> (I took the liberty of changin the title of your bug report BTW, to match the underlying problem)

[20:12] <moritz> FROGGS: was there any kind of library support for callbacks in p5?

[20:12] <FROGGS> plain xs

[20:13] *** stopbit_ joined
[20:13] *** stopbit left
[20:13] <moritz> that sounds... painfull

[20:13] <FROGGS> well, its C, so not _that_ painful

[20:13] <tadzik> arnsholt: I have a feeling that doesn't quite work right

[20:13] <FROGGS> the biggest problem was (and is sometimes) the context

[20:13] <tadzik> https://gist.github.com/3455158

[20:14] <cjbot> @nogoodnickleft tweeted 'My wishlist for #perl6 modules now contains support for writing PDF or djvu (see http://t.co/1Lm90lAQ ) documents. And typesetting :-)'

[20:14] <tadzik> \o/

[20:15] <[Coke]> holy crap it worked. ;)

[20:15] <tadzik> arnsholt: it's supposed to return 20 bytes, but whether I use CArray[int] or CArray[int8], makes no different

[20:15] <tadzik> s/t$/ce/

[20:15] <arnsholt> tadzik: Hmm. Remind me: how many bytes in a SHA-1 hash, and what's the signature of the function

[20:15] <moritz> [Coke]++

[20:15] <arnsholt> Right, then you definitely don't want to loop up to 20

[20:16] <[Coke]> very frustrating getting started, but now that I have a dev area working, and tadzik doing all the heavy lifting, I'm happy. ;)

[20:16] <arnsholt> *sigh* In reality, this is sort of the sized-int thing again

[20:17] <[Coke]> I had a bot written for an irc-like services years ago. planning on porting some of the less noisy features over from there as well.

[20:17] <[Coke]> (https://github.com/coke/tigerlily/tree/master/extensions/CJ/command)

[20:17] <tadzik> arnsholt: http://www.openssl.org/docs/crypto/sha.html

[20:18] <arnsholt> tadzik: Right. So, CArray[int] corresponds to int* in C. AFAICT, sizeof(int) is 4 on both 32 and 64-bit x86

[20:18] <tadzik> SHA-1 (Secure Hash Algorithm) is a cryptographic hash function with a 160 bit output.

[20:18] <tadzik> ok, how about int8?

[20:18] <arnsholt> So, if you loop up to 5, it should work

[20:18] <arnsholt> int8 will silently do not what you want

[20:18] <tadzik> ok

[20:18] <tadzik> so I have to turn into bytestream somehow

[20:18] <arnsholt> Bah, bollocks

[20:19] <arnsholt> There's another thing

[20:19] <arnsholt> Getting from an array will read a Parrot INTVAL* from it, which I'm gonna bet is 8-byte on 64-bit and 4-byte on 32-bit

[20:19] <tadzik> ergh

[20:20] <arnsholt> Yeah, sized members are kinda important

[20:20] <moritz> in theory Buf would be a good fit for a char[20]

[20:20] <arnsholt> We only really handle the sizes correctly when passed to/returned from functions

[20:20] <japhb> Yeah, I think lack of sized arrays would block OpenGL

[20:21] <arnsholt> It's what I'm working on ATM, if it's any consolation

[20:21] *** Moukeddar left
[20:21] <japhb> arnsholt, oh, no worries.  Gives me a good excuse not to feel guilty about not doing it.  ;-)

[20:21] <arnsholt> tadzik: This is work-aroundable if you're happy having a not-very-portable module for the time being

[20:21] <arnsholt> japhb: I'll remember to nag at you when I merge the branch, then =D

[20:22] <japhb> D'oh!  I had to reveal my true reasoning, didn't I?  :-)

[20:22] <arnsholt> ^_^

[20:25] *** cjbot left
[20:26] *** birdwindupbird left
[20:28] *** colomon left
[20:28] *** thou joined
[20:30] *** cjbot joined
[20:33] *** colomon joined
[20:34] <dalek> doc: aaf33eb | moritz++ | lib/X/Str/Numeric.pod:

[20:34] <dalek> doc: X::Str::Numeric

[20:34] <dalek> doc: review: https://github.com/perl6/doc/commit/aaf33eb8a9

[20:37] <dalek> doc: 9388689 | moritz++ | lib/X/OutOfRange.pod:

[20:37] <dalek> doc: X::OutOfRange

[20:37] <dalek> doc: review: https://github.com/perl6/doc/commit/93886890f7

[20:54] <thou> o/

[20:58] *** snearch left
[21:01] *** cjbot left
[21:05] <__sri> btw. if anyone wants to work on a libuv binding this is a pretty good read http://nikhilm.github.com/uvbook/index.html

[21:07] <__sri> and of course the perl5 binding ;) https://github.com/typester/p5-UV

[21:08] <jnthn> ooh

[21:08] * jnthn may be tempted to do that during the coming hackathon

[21:08] <__sri> \o/

[21:08] <jnthn> (Just read that libuv should build easily on Windows. :))

[21:12] <dalek> zavolaj: 3228da6 | moritz++ | lib/NativeCall.pm6:

[21:12] <dalek> zavolaj: add export tags

[21:12] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/3228da6dee

[21:13] <felher> when will be the next hackathon?

[21:15] <jnthn> Tomorrow :)

[21:15] *** adu left
[21:18] *** SamuraiJack__ left
[21:27] *** flexibeast left
[21:27] <FROGGS> arnsholt, jnthn: I can now play wave-files using NativeCall and when my music stops the callback is called ;o)

[21:28] *** skyface joined
[21:28] <FROGGS> we took ages to get this to work with perl5 and xs, its just like minutes using p6+NativeCall

[21:28] <jnthn> Geez, the last language I did that in was Visual Basic 5 :D

[21:28] <jnthn> FROGGS++

[21:28] <dalek> doc: d6df57c | moritz++ | lib/X/Syntax/UnlessElse.pod:

[21:28] <dalek> doc: X::Syntax::UnlessElse

[21:28] <dalek> doc: review: https://github.com/perl6/doc/commit/d6df57c501

[21:28] <dalek> doc: f3085f0 | moritz++ | lib/X/OutOfRange.pod:

[21:28] <dalek> doc: [X::OutOfRange] add example

[21:28] <dalek> doc: review: https://github.com/perl6/doc/commit/f3085f04c5

[21:29] *** lblume left
[21:29] <jnthn> Hm, or was it VB6... :)

[21:30] <arnsholt> FROGGS: Cool!

[21:30] <FROGGS> it is

[21:30] <arnsholt> jnthn: I've opened two issues on Zavolaj, BTW

[21:30] <FROGGS> and it is so simple

[21:31] <felher> jnthn: tomorrow? Good to know ... :)

[21:31] <jnthn> arnsholt: I saw :)

[21:31] <moritz> n: #`

[21:31] <p6eval> niecza v19-37-g0567c61: OUTPUT«===SORRY!===␤␤Opening bracket is required for #` comment at /tmp/hKKZymLJNl line 1 (EOF):␤------> #`⏏<EOL>␤␤Parse failed␤␤»

[21:31] <arnsholt> Both of them are a bit design-y in nature, so any thoughts you might have are much appreaciated

[21:31] *** skyface left
[21:31] <jnthn> felher: Yeah. I gotta get up at 5am for the flight. And my body currently things the usual time to go to sleep is about 2am... I won't be having much sleep tonight :)

[21:31] <jnthn> *thinks

[21:31] <jnthn> arnsholt: I noticed; they're on my mental stack :)

[21:32] <arnsholt> Awesome!

[21:32] <arnsholt> Neither are pressing, so time isn't an issue

[21:32] <jnthn> *nod*

[21:32] <felher> jnthn: yeah, seems so :) Where is the hackathon? 

[21:32] <jnthn> Near Stavanger.

[21:32] <moritz> .no

[21:32] <jnthn> .yes

[21:32] <felher> .maybe

[21:32] <moritz> .doubtful

[21:32] <dalek> doc: 350fb56 | moritz++ | lib/X/Syntax/Comment/Embedded.pod:

[21:32] <dalek> doc: X::Syntax::Comment::Embedded

[21:32] <dalek> doc: review: https://github.com/perl6/doc/commit/350fb56ff6

[21:33] <moritz> nr: my @00

[21:33] <p6eval> rakudo 5ceefd: OUTPUT«===SORRY!===␤Cannot declare a numeric variable␤at /tmp/M6CRdtPRk4:1␤»

[21:33] <p6eval> ..niecza v19-37-g0567c61: OUTPUT«===SORRY!===␤␤Cannot declare a numeric variable at /tmp/jU0lx2tifZ line 1 (EOF):␤------> my @00⏏<EOL>␤␤Parse failed␤␤»

[21:33] <felher> jnthn: well, it at least shouldn't be that hot there :)

[21:33] <jnthn> Indeed \o/

[21:36] <moritz> nr: class A { has $.0 }

[21:36] <p6eval> niecza v19-37-g0567c61: OUTPUT«===SORRY!===␤␤Two terms in a row at /tmp/U2TIx5pjHE line 1:␤------> class A { has $⏏.0 }␤␤Parse failed␤␤»

[21:36] <p6eval> ..rakudo 5ceefd: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2, near "has $.0 }"␤»

[21:36] <moritz> that could throw the same error

[21:37] <jnthn> Yeah, the twigil stops it parsing that way

[21:37] <jnthn> p6: $!0

[21:37] <p6eval> niecza v19-37-g0567c61: OUTPUT«===SORRY!===␤␤Non-declarative sigil is missing its name at /tmp/7qeJrzfW8o line 1:␤------> <BOL>⏏$!0␤␤Confused at /tmp/7qeJrzfW8o line 1:␤------> <BOL>⏏$!0␤␤Parse failed␤␤»

[21:37] <p6eval> ..rakudo 5ceefd: OUTPUT«===SORRY!===␤Confused␤at /tmp/4qNmHpKseI:1␤»

[21:37] <jnthn> std: $!0

[21:37] <p6eval> std 235f71b: OUTPUT«===SORRY!===␤Non-declarative sigil is missing its name at /tmp/68yd6AQsld line 1:␤------> <BOL>⏏$!0␤Use of uninitialized value $first in string eq at STD.pm line 66735.␤Use of uninitialized value $first in string lt at STD.pm line…

[21:38] <dalek> doc: 10c196a | moritz++ | lib/X/Syntax/Variable/Numeric.pod:

[21:38] <dalek> doc: X::Syntax::Variable::Numeric

[21:38] <dalek> doc: review: https://github.com/perl6/doc/commit/10c196a600

[21:38] <dalek> doc: 71855fd | moritz++ | lib/X/Syntax/Variable/Match.pod:

[21:38] <dalek> doc: X::Syntax::Variable::Match

[21:38] <dalek> doc: review: https://github.com/perl6/doc/commit/71855fd835

[21:40] <dalek> doc: bb3688e | moritz++ | lib/X/Syntax/Signature/InvocantMarker.pod:

[21:40] <dalek> doc: X::Syntax::Signature::InvocantMarker

[21:40] <dalek> doc: review: https://github.com/perl6/doc/commit/bb3688e940

[21:40] *** flexibeast joined
[21:42] <moritz> O(20) error classes to go

[21:43] <FROGGS> arnsholt: my code is at https://github.com/PerlGameDev/SDL6/tree/froggs

[21:43] <FROGGS> I've got a problem though

[21:44] <FROGGS> I dont know why line 27 is failing: https://github.com/PerlGameDev/SDL6/blob/froggs/t/mixer-channels.t

[21:44] * felher is a now a Big-O-Notation-Wizard: O(1) error classes to go. ;)

[21:45] <felher> Well, in Big-O-Notation, going from O(20) to O(1) doesn't require much magic :D

[21:46] <moritz> felher: no, just work :-)

[21:52] <felher> moritz: well, what i wanted to say is that O(20) = O(1), but thats just nitpicking and going with the mathematical definition.

[21:52] <felher> in essence, i din't say anything useful :)

[21:53] *** bbkr left
[21:54] <felher> And what i really wanted to say is: moritz++ for doing all the p6doc work :)

[21:58] *** stopbit_ left
[22:01] *** alester left
[22:03] *** adu joined
[22:04] *** bluescreen10 left
[22:05] *** sirrobert left
[22:07] *** sirrobert joined
[22:24] <jnthn> 'night, #perl6

[22:24] <diakopter> o/

[22:27] <felher> o/ jnthn 

[22:29] *** leont left
[22:30] <[Coke]> cjbot keeps dying with:

[22:30] <[Coke]> ERROR :Closing Link: feather.perl6.nl (Ping timeout: 276 seconds)

[22:34] <felher> 'night, #perl6

[22:34] <[Coke]> i assume this is particular to the muevent version of netircbot.

[22:35] <[Coke]> night.

[22:36] <diakopter> maybe he just never tested the case of leaving it uneventful past the freenode irc timeout

[22:36] *** cjbot joined
[22:37] <diakopter> cjbot: byte me

[22:47] *** adu left
[22:48] <diakopter> cjbot is quiet

[22:48] <[Coke]> He's a platypus. They don't do much.

[22:50] <japhb> Unless he's wearing a fedora.  Then he's a superspy.

[22:52] *** Tedd1 left
[23:05] *** fgomez joined
[23:10] *** kst left
[23:10] *** kst` joined
[23:11] *** whiteknight joined
[23:12] <FROGGS> gnight pals

[23:12] *** FROGGS left
[23:15] *** MayDaniel left
[23:15] *** cjbot left
[23:19] *** skyface joined
[23:20] <skyface> hi all

[23:20] *** skyface left
[23:26] *** spider-mario left
[23:27] *** Circlepuller_ joined
[23:29] *** Circlepuller left
[23:29] *** Circlepuller_ left
[23:30] *** Circlepuller joined
[23:36] *** fgomez left
[23:36] *** nebuchadnezzar left
[23:40] *** Circlepuller_ joined
[23:42] *** Circlepuller left
