[00:06] <mikemol> Looking into it.

[00:24] *** fgomez left
[00:38] *** fgomez joined
[00:51] *** LordV joined
[00:51] *** LordV is now known as LordVorp

[00:57] <skids> r: sub a ($f) { (1,2,3).map: { return $_ } }; a(1).say

[00:57] <p6eval> rakudo d171b9: OUTPUT«Attempt to return outside of any Routine␤  in block  at src/gen/CORE.setting:428␤  in block  at /tmp/5Oez7_hnSf:1␤␤»

[01:04] *** terrence joined
[01:10] *** bapa left
[01:15] *** jaldhar joined
[01:15] *** jaldhar left
[01:16] *** jaldhar joined
[01:28] *** jaldhar left
[01:31] *** jaldhar joined
[01:41] *** jaldhar left
[01:42] *** Targen joined
[01:43] *** tokuhiro_ joined
[01:44] *** FROGGS_ joined
[01:45] *** jaldhar joined
[01:46] *** flightrecorder left
[01:48] *** FROGGS left
[01:48] *** flightrecorder joined
[01:54] *** PacoAir left
[02:00] *** popl joined
[02:16] *** Targen left
[02:24] *** flightrecorder left
[02:26] *** FROGGS_ left
[02:27] *** orafu left
[02:27] *** flightrecorder joined
[02:27] *** orafu joined
[02:27] <grondilu> r: my @a = <foo bar>; any(@a) ~~ /foo/;

[02:27] <p6eval> rakudo d171b9: OUTPUT«This type cannot unbox to a native string␤  in any  at src/gen/BOOTSTRAP.pm:99␤  in any !cursor_init at src/stage2/QRegex.nqp:497␤  in method ACCEPTS at src/gen/CORE.setting:10179␤  in block  at /tmp/FzXN1R6FXg:1␤␤»

[02:27] <grondilu> rn: my @a = <foo bar>; any(@a) ~~ /foo/;

[02:28] <p6eval> niecza v22-14-g136ddcf:  ( no output )

[02:28] <p6eval> ..rakudo d171b9: OUTPUT«This type cannot unbox to a native string␤  in any  at src/gen/BOOTSTRAP.pm:99␤  in any !cursor_init at src/stage2/QRegex.nqp:497␤  in method ACCEPTS at src/gen/CORE.setting:10179␤  in block  at /tmp/uYja_cZ82Z:1␤␤»

[02:29] *** FROGGS joined
[02:30] <grondilu> rn: my @a = <foo bar>; so any(@a).match: /foo/;

[02:30] <p6eval> rakudo d171b9, niecza v22-14-g136ddcf:  ( no output )

[02:40] *** colomon left
[02:47] <grondilu> rn: "foo" ~~ / <*foo> /;

[02:47] <p6eval> rakudo d171b9: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix / instead␤at /tmp/faznXKLVVF:1␤»

[02:47] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«===SORRY!===␤␤Action method assertion:sym<*> not yet implemented at /tmp/ypDSqnco39 line 1:␤------> "foo" ~~ / <*foo⏏> /;␤␤Unhandled exception: Unable to resolve method oplift in type Any␤  at /home/p6eval/niecza/src/Rx…

[02:48] <grondilu> NYI in rakudo either, I guess.

[02:49] *** terrence left
[03:14] <sorear> o/

[03:16] <japhb> o/

[03:18] <grondilu> rn: my $x = "abcd"; say ([\,] $x.comb)».join;

[03:18] <p6eval> rakudo d171b9, niecza v22-14-g136ddcf: OUTPUT«a a b a b c a b c d␤»

[03:18] * grondilu was expecting a ab abc abcd

[03:19] <grondilu> rn: my $x = "abcd"; say ([\,] $x.comb)».join.perl;

[03:19] <p6eval> niecza v22-14-g136ddcf: OUTPUT«["a", "a", "b", "a", "b", "c", "a", "b", "c", "d"].list␤»

[03:19] <p6eval> ..rakudo d171b9: OUTPUT«("a", "a", "b", "a", "b", "c", "a", "b", "c", "d")␤»

[03:20] <grondilu> rn: say .join for [\,] "abcd".comb;

[03:20] <p6eval> rakudo d171b9, niecza v22-14-g136ddcf: OUTPUT«a␤a␤b␤a␤b␤c␤a␤b␤c␤d␤»

[03:31] *** sizz_ is now known as sizz

[03:32] *** benabik joined
[03:42] <grondilu> rn: say .join for lol [\,] "abcd".comb;

[03:42] <p6eval> niecza v22-14-g136ddcf: OUTPUT«===SORRY!===␤␤Undeclared routine:␤     'lol' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1437 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 37) ␤  at /home…

[03:42] <p6eval> ..rakudo d171b9: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&lol' called (line 1)␤»

[03:42] <grondilu> rn: say .join for LoL [\,] "abcd".comb;

[03:42] <p6eval> rakudo d171b9: OUTPUT«===SORRY!===␤Confused␤at /tmp/OZpsRFG0PQ:1␤»

[03:42] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«===SORRY!===␤␤Undeclared name:␤        'LoL' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1437 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 37) ␤  at /home/p6…

[03:51] <grondilu> rn: .say for [\~] "abcd".comb;

[03:51] <p6eval> rakudo d171b9, niecza v22-14-g136ddcf: OUTPUT«a␤ab␤abc␤abcd␤»

[03:51] <grondilu> yes :)

[03:58] *** colomon joined
[04:04] *** jaldhar left
[04:21] *** telex left
[04:22] *** telex joined
[04:29] *** Targen joined
[04:33] *** telex left
[04:35] *** benabik left
[04:36] *** benabik joined
[04:38] *** telex joined
[04:45] *** benabik left
[04:46] *** adu joined
[04:47] *** benabik joined
[04:50] *** Exodist joined
[04:56] *** popl left
[05:01] *** hash_table left
[05:12] *** Entonian joined
[05:16] *** araujo left
[05:22] *** mucker joined
[05:22] *** kaare_ joined
[05:26] *** tokuhiro_ left
[05:30] *** popl joined
[05:31] *** Targen left
[05:32] *** Entonian left
[05:41] <TimToady> sorear: my recollection is that undef predated += autovivishness by quite a bit

[05:42] *** Targen joined
[05:42] <TimToady> well, ++ autoviv, += probably came later

[06:03] *** kaare_ left
[06:04] *** olii joined
[06:07] *** olii left
[06:11] *** SamuraiJack joined
[06:40] *** azawawi joined
[06:44] *** adu left
[07:13] *** SamuraiJack left
[07:17] *** aharoni joined
[07:22] *** fgomez left
[07:24] *** bbkr joined
[07:25] *** tokuhiro_ joined
[07:26] <azawawi> hmmm, modules.perl6.org is not displaying any module

[07:27] <azawawi> i think it is related to Github API rate limiting

[07:29] *** popl left
[07:30] <moritz> https://raw.github.com/azawawi/farabi6/master/META.info

[07:30] <moritz> Use of uninitialized value in concatenation (.) or string at lib/P6Project/Info.pm line 72. 

[07:30] <moritz> Not an ARRAY reference at lib/P6Project/Hosts/Github.pm line 69.

[07:30] <moritz> that's the tail of the output from running the updating script

[07:33] <moritz> oh indeed

[07:33] <moritz> $VAR1 = {

[07:33] <moritz>           'message' => 'API Rate Limit Exceeded for 193.200.132.142'

[07:33] <moritz>         };

[07:34] <moritz> so

[07:35] <moritz> github limits to 60 unauthenticated requests per hour

[07:35] <moritz> so we need to authenticate requests

[07:38] <dalek> rakudo/nom: b866287 | moritz++ | src/Perl6/Grammar.pm:

[07:38] <dalek> rakudo/nom: RT #115356: redeclaring a class as a role

[07:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b866287671

[07:38] <dalek> roast: b73c13b | moritz++ | S32-exceptions/misc.t:

[07:38] <dalek> roast: RT #115356, redeclaration of class as a role

[07:38] <dalek> roast: review: https://github.com/perl6/roast/commit/b73c13bd9b

[07:39] <moritz> phenny: tell jnthn please check commit b866287, I'm not sure if the nqp::can is the best way to identify if $*PACKAGE is a role or not

[07:39] <phenny> moritz: I'll pass that on when jnthn is around.

[07:52] *** Khisanth left
[07:52] *** Khisanth joined
[08:06] <azawawi> star: say "<a href".quotemeta;

[08:06] <p6eval> star 2012.07: OUTPUT«No such method 'quotemeta' for invocant of type 'Str'␤  in block <anon> at /tmp/ut1KXLluvv:1␤␤»

[08:06] <azawawi> star: say quotemeta("<a href");

[08:06] <p6eval> star 2012.07: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&quotemeta' called (line 1)␤»

[08:07] <azawawi> hmmm

[08:07] <azawawi> niecza: say quotemeta("<a href");

[08:07] <p6eval> niecza v22-14-g136ddcf: OUTPUT«===SORRY!===␤␤Undeclared routine:␤     'quotemeta' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1437 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 37) ␤  at…

[08:11] <azawawi> so what does Perl 6 use to escape regexes...?

[08:12] *** mucker left
[08:18] <azawawi> star: say "<a href".escaped;

[08:18] <p6eval> star 2012.07: OUTPUT«No such method 'escaped' for invocant of type 'Str'␤  in block <anon> at /tmp/O6a6ljOVUu:1␤␤»

[08:18] <azawawi> star: say "<a href".perl;

[08:18] <p6eval> star 2012.07: OUTPUT«"<a href"␤»

[08:20] <azawawi> moritz: ping

[08:23] *** tokuhiro_ left
[08:24] <sorear> azawawi: if you need to escape regexes in perl 6 you're probably doing it wrong, but .perl will work

[08:25] <sorear> n: say "<a href=foo>" ~~ eval('/' ~ "<a href".perl ~ '/')

[08:25] <p6eval> niecza v22-14-g136ddcf: OUTPUT«#<match from(0) to(7) text(<a href) pos([].list) named({}.hash)>␤»

[08:26] <azawawi> so no quotemeta right?

[08:26] <sorear> no quotemeta.  why?

[08:26] <sorear> n: say "<a href".subst(/\W/,"\\$/",:g)

[08:26] <p6eval> niecza v22-14-g136ddcf: OUTPUT«Use of uninitialized value in string context␤  at /home/p6eval/niecza/lib/CORE.setting line 1295 (warn @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 266 (Mu.Str @ 15) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.settin…

[08:27] <azawawi> i was confused since it was here https://github.com/perl6/roast/blob/master/S32-str/quotemeta.t

[08:27] <sorear> n: say "<a href".subst(/\W/,{"\\$/"},:g)

[08:27] <p6eval> niecza v22-14-g136ddcf: OUTPUT«\<a\ href␤»

[08:28] <sorear> azawawi: that's a blatant fossil.  ignore it.

[08:28] <sorear> would have been nice if you had started out mentioning that...

[08:28] <sorear> sleep&

[08:29] <sorear> I sound grumpy, sorry about that

[08:29] <azawawi> sorear: thx and good night

[08:39] *** preflex left
[08:44] <masak> morning, #perl6

[08:44] <phenny> masak: 19 Oct 22:29Z <diakopter> tell masak  r: say -> {YOU_ARE_HERE}

[08:44] <phenny> masak: 19 Oct 22:30Z <diakopter> tell masak  r: say DOC BEGIN { 4 };

[08:45] <masak> r: say -> {YOU_ARE_HERE}

[08:45] <p6eval> rakudo b86628: OUTPUT«(signal SEGV)»

[08:45] * masak submits rakudobug

[08:45] <masak> r: say DOC BEGIN { 4 };

[08:45] <p6eval> rakudo b86628: OUTPUT«===SORRY!===␤Method 'flat' not found for invocant of class 'NQPMu'␤»

[08:45] * masak submits rakudobug

[08:45] <masak> r: say {YOU_ARE_HERE}

[08:45] <p6eval> rakudo b86628: OUTPUT«1␤»

[08:46] <masak> r: say -> $x {YOU_ARE_HERE}

[08:46] <p6eval> rakudo b86628: OUTPUT«(signal SEGV)»

[08:46] <azawawi> masak: morning

[08:53] <azawawi> masak: any idea why modules.perl.org is not displaying any modules?

[08:54] *** GlitchMr joined
[08:57] <moritz> azawawi: you said it yourself earlier

[08:58] <moritz> http://irclog.perlgeek.de/perl6/2012-10-20#i_6081839

[08:58] <azawawi> yeah but im not 100% sure

[08:58] <moritz> well, I am

[08:59] <azawawi> cool

[08:59] <azawawi> Since i added Farabi6 as the last entry, i thought i broke it somehow

[08:59] *** mucker joined
[09:00] <moritz> so, somebody need to patch P6Project::Hosts::Github to use the github API with authentication

[09:01] <azawawi> The 60 vs 5000 rate limit is so limiting :)

[09:01] <GlitchMr> https://github.com/perl6/perl6.org/blob/master/robots.txt

[09:01] <GlitchMr> http://perl6.org/robots.txt

[09:01] <GlitchMr> Perfect - wrong directory ;-)

[09:03] <dalek> perl6.org: 3d5f4ca | GlitchMr++ | / (2 files):

[09:03] <dalek> perl6.org: Move robots.txt to correct directory.

[09:03] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/3d5f4ca496

[09:04] <felher> good morning, #perl6

[09:06] *** gootle joined
[09:09] *** azawawi left
[09:09] <dalek> perl6.org: ba3555f | GlitchMr++ | source/style.css:

[09:09] <dalek> perl6.org: Make boxes on main page sligthly higher.

[09:09] <dalek> perl6.org: 

[09:09] <dalek> perl6.org: Without that change, documentation box is too higher and text overflows

[09:09] <dalek> perl6.org: the box when font is rather wide, like DejaVu Sans, used on many open-

[09:09] <dalek> perl6.org: source systems that aren't Android.

[09:09] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/ba3555fd3f

[09:09] <GlitchMr> too high*

[09:09] <GlitchMr> lol

[09:09] <GlitchMr> sorry

[09:11] <GlitchMr> php -S 0:8080 is so useful for testing perl6.org...

[09:12] <moritz> I don't understand how the github API authentication works

[09:13] <moritz> I can register a new app, and then I get a client id and a client secret

[09:14] <moritz> but http://developer.github.com/v3/#authentication talks about an OAUTH token, not a client id or a client secret

[09:14] <moritz> how do I get the token?

[09:15] <masak> moritz: maybe ask on #github?

[09:17] <huf> you can turn those two into an oauth token

[09:26] <huf> huh, it's unclear to me too now :D

[09:30] *** flightrecorder left
[09:30] *** FROGGS left
[09:35] <moritz> oh

[09:35] <moritz> a POST request to https://api.github.com/authorizations, with basic authentication and  {} as POST body

[09:36] <huf> but that's with a user's auth creds, right?

[09:36] <huf> no app id/secret in play

[09:36] <moritz> right, which is why I'm a bit surprised how it works

[09:36] <huf> so the token you get is good for all apps provided the scopes match?

[09:36] <huf> i'd have expected it to be only valid for the one app you auth for the user

[09:37] <huf> but couldnt find anything on that in the docs

[09:38] <masak> by the way, POST requests have a body; do GET requests have a body, too? I thought they didn't, but a course participant yesterday said they do, and so now I'm unsure.

[09:38] <moritz> I don't think they do

[09:39] <masak> what would be an authoritative source for such an answer? the HTTP spec?

[09:39] <moritz> http://stackoverflow.com/questions/978061/http-get-with-request-body

[09:39] <moritz> seems the HTTP spec doesn't forbid it

[09:40] <masak> huh.

[09:40] <huf> i think most servers wont wait for the body though

[09:40] <masak> "I would suggest avoiding it simply because people don't expect things to work that way". this is essentially what I ended up saying in the course.

[09:41] *** mucker left
[09:41] <masak> "The Robustness Principle is flawed. If you are liberal in what you accept, you will get crap, if you have any success in terms of adoption, just because you accept crap." heh.

[09:42] <masak> yeah, that's something that's always bothered me about Postel's Law.

[09:45] <moritz> the recent breakage of modules.perl6.org showcases a side of Perl 6 development that I really don't like

[09:46] <moritz> some volunteers come up with (increasingly complicated) systems for our infrastructure

[09:46] <moritz> and then it breaks

[09:46] <moritz> and then it stays broken for a few months, unless I fix it

[09:46] *** spider-mario joined
[09:47] <moritz> and then I look at the code, and see that it uses 2 spaces indention

[09:47] <moritz> and I want to run away screaming

[09:47] <masak> :/

[09:47] <masak> I can agree with the problem description.

[09:48] <masak> as for the last bit, I don't think anyone would blame you if you started by making a formatting commit.

[09:50] <masak> as for the rest, if the Perl 6 community ever becomes dependent of a single competent individual coming in and fixing broken infrastructure, we're doomed.

[09:51] <moritz> it would be curious what happened if I didn't do anything on our infrastructure for a year or so

[09:51] <masak> in the Perl 5 community, they have the a dedicated channel for PAUSE/CPAN infrastructure discussion, whose name escapes me for the moment.

[09:51] <moritz> #toolchain? perl-modules?

[09:51] <masak> moritz: volunteers generally gravitate to the fun stuff, I guess. or sometimes they, like me, have a very specific obsession which makes work seem to have zero cost.

[09:52] <masak> but no-one wants to clean the bathroom.

[09:59] <masak> I've always been more focused on the "how can we scale kindness" question for a growing community. it now strikes me that "how can we scale taking responsibility for the boring stuff" question is important too.

[10:00] <masak> failure at the first one will mean people leaving the community because "people there are assholes". failure at the second one will mean people leaving the community because "nothing works".

[10:03] *** azawawi joined
[10:06] <moritz> $ perl -wE 'use Mojo::UserAgent; my $ua = Mojo::UserAgent->new; say $ua->get("https://raw.github.com/perl6/ecosystem/master/META.list")->res->body'

[10:06] <moritz> why does this print the empty line?

[10:06] <moritz> the URL works in the browser

[10:07] <masak> check if there was some error message?

[10:07] <azawawi> moritz: IO::Socket::SSL not installed

[10:07] <masak> r: class A { has A $.a }; say A.new.a

[10:07] <moritz> meh, why does Mojo::UserAgent fail silently WHEN A FUCKING MODULE IT NEEDS IS MISSING?

[10:07] <p6eval> rakudo b86628: OUTPUT«A()␤»

[10:08] * masak hugs moritz 

[10:08] <azawawi> moritz: lol... i had that same question in #mojo

[10:08] <azawawi> moritz: while working on Farabi on Mojo...

[10:08] <masak> moritz: the Android framework is similarly surprising sometimes.

[10:08] * moritz is close to throwing this junk out of the windows

[10:08] <Hor|zon> masak: the second one will naturally be solved once it stops people doing the fun stuff, the first one can stand for decades untouched

[10:08] <moritz> seriously, __sri should know better

[10:08] <Hor|zon> masak: plus, the second one is still somehow more fun than the first one

[10:09] <masak> moritz: HTTP access silently fails until you flip a switch in the manifest file.

[10:10] <masak> moritz: if I were in a snarky mood, I would say "ultimately, it's because Mojo doesn't *have* any dependencies :P"

[10:10] <moritz> ... unless it does

[10:10] <azawawi> yeah

[10:10] <masak> right.

[10:13] <moritz> https://raw.github.com/sirrobert/Semantic-Versioning/master/META.info has no name, skipping!

[10:13] <moritz> phenny: tell sirrobert https://raw.github.com/sirrobert/Semantic-Versioning/master/META.info has a space in "name ":, that's no good

[10:13] <phenny> moritz: I'll pass that on when sirrobert is around.

[10:15] * masak ponders if we should be more strict somewhere in parsing META.info files

[10:16] <moritz> we are

[10:16] <moritz> it's just that we don't have a proper feedback channel if something doesn't work right

[10:16] <moritz> Cannot open '/logos/JSON_RPC.png' for writing: No such file or directory at lib/P6Project.pm line 50.

[10:17] <masak> it was the feedback channel I was thinking of.

[10:18] <masak> maybe we could have a 'strictbot' that jumped out and said "a-HA!" when someone submitted something invalid.

[10:18] * masak only semi-serious

[10:18] <moritz> well, it could comment on the commit that added the invalid META.info to the ecosystem

[10:20] *** Chillance joined
[10:21] <masak> aye.

[10:22] <moritz> open my $f, '>', $self->output_dir . $filename or die "Cannot open '$filename' for writing: $!";

[10:22] <moritz> does anybody else see the "fun"?

[10:23] <masak> 'use autodie;'

[10:23] <masak> or perhaps 'use autodie qw(open close);', rather.

[10:24] <moritz> make_path($output_dir, { mode => 0755 }) unless -e "$output_dir/logos";

[10:24] <moritz> so, that creates $output_dir

[10:24] <moritz> but $output_dir/logos still isn'T there

[10:24] <masak> hm.

[10:25] <moritz> that's why I can't write to /tmp/mp6/logos/JSON_RPG.png, even though it says it tries to write to /logos/JSON_RPC.png

[10:25] <masak> so it creates $output_dir but not $output_dir/logos?

[10:25] <moritz> correct

[10:25] <masak> sounds like an omission.

[10:31] *** Chillance left
[10:32] *** Chillance joined
[10:38] <azawawi> so far im liking Perl 6

[10:39] <azawawi> the bad part is the reimplement-everything even http POST :)

[10:40] <azawawi> im working on getting rosetta code Perl example into Farabi so one can experiment and learn Perl 6 right away

[10:40] <azawawi> the error checking is going to use viv

[10:40] *** tokuhiro_ joined
[10:40] <azawawi> the runtime is going to be user specified... niecza or rakudo... that is

[10:41] <azawawi> and since farabi is a web-based editor, we can also use Perlito 6

[10:42] <dalek> modules.perl6.org: d0861c3 | moritz++ | web/lib/P6Project (3 files):

[10:42] <dalek> modules.perl6.org: [web] indent code 4 spaces. No functional changes.

[10:42] <dalek> modules.perl6.org: 

[10:42] <dalek> modules.perl6.org: I usually do not like pure formatting commits, but if I am to maintain

[10:42] <dalek> modules.perl6.org: this code (and it seems it does, since it is broken, and nobody else

[10:42] <dalek> modules.perl6.org: fixed it), I'd rather have sane indention than run screaming in circles.

[10:42] <dalek> modules.perl6.org: Running screaming in circles decreases the contact time between me and

[10:42] <dalek> modules.perl6.org: keyboard and monitor, making debugging harder.

[10:42] <dalek> modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/d0861c33a4

[10:42] <dalek> modules.perl6.org: 66258ba | moritz++ | web/lib/P6Project/Hosts/Github.pm:

[10:42] <dalek> modules.perl6.org: Use github token for authentication

[10:42] <dalek> modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/66258ba7b1

[10:42] <dalek> modules.perl6.org: c95de60 | moritz++ | web/ (3 files):

[10:42] <dalek> modules.perl6.org: several robustness improvements

[10:43] *** fglock joined
[10:46] <moritz> http://modules.perl6.org/ is back, and my blood pressure a bit higher than before

[10:46] <azawawi> moritz+=

[10:46] <azawawi> moritz++ :)

[10:52] <moritz> Invalid source-url found: https://github.com/perlpilot/p6-File-Temp.git

[10:52] <moritz> Invalid json found at: https://raw.github.com/ajs/perl6-log/master/META.info

[10:52] <moritz> Invalid source-url found: [email@hidden.address]
[10:56] *** araujo joined
[10:56] *** araujo left
[10:56] *** araujo joined
[11:02] *** rindolf joined
[11:03] *** preflex joined
[11:06] *** Su-Shee_ joined
[11:09] *** aharoni left
[11:09] *** Su-Shee left
[11:13] *** tokuhiro_ left
[11:23] *** MayDaniel joined
[11:32] <jnthn> ohhai

[11:32] <phenny> jnthn: 07:39Z <moritz> tell jnthn please check commit b866287, I'm not sure if the nqp::can is the best way to identify if $*PACKAGE is a role or not

[11:33] <moritz> oh hai

[11:33] <moritz> or more to the point, what a better way would be

[11:34] *** azawawi left
[11:35] *** thebAR joined
[11:43] *** tokuhiro_ joined
[11:45] <jnthn> moritz: Hm, feels like it should be done with some archetypes value.

[11:46] <jnthn> moritz: This is OK for now, I'll ponder it a bit

[11:47] <moritz> .oO( panda it )

[12:04] *** domidumont joined
[12:05] *** preflex left
[12:06] *** preflex joined
[12:07] *** jaldhar joined
[12:09] *** nebuchad` joined
[12:10] *** bonsaikitten left
[12:10] *** steven_ left
[12:10] *** nebuchadnezzar left
[12:10] *** SHODAN left
[12:11] *** SHODAN joined
[12:11] *** bonsaikitten joined
[12:11] *** nebuchad` is now known as nebuchadnezzar

[12:12] *** steven joined
[12:16] *** nebuchadnezzar left
[12:20] *** pjcj left
[12:20] *** pjcj joined
[12:30] *** nebuchadnezzar joined
[12:34] *** domidumont left
[12:35] *** domidumont joined
[12:42] *** jaldhar left
[12:44] *** sctt joined
[12:50] *** pmurias_ joined
[12:50] *** pmurias_ left
[12:50] *** pmurias joined
[12:50] <pmurias> hi

[12:50] <pmurias> jnthn: does postfix:<++> make sense in nqp?

[12:50] <pmurias> jnthn: my $x := 1;$x++ seems incorrect

[12:51] <moritz> nqp: my $x := 1; $x++; say $x

[12:51] <p6eval> nqp: OUTPUT«Confused at line 2, near "say $x"␤current instr.: 'panic' pc 20353 (src/stage2/gen/NQPHLL.pir:7408) (src/stage2/gen/NQPHLL.pm:324)␤»

[12:51] <moritz> nqp: my $x := 1; $x++; say($x)

[12:51] <p6eval> nqp: OUTPUT«2␤»

[12:51] <moritz> nqp: my $x := 1; $x++; say($x++)

[12:51] <p6eval> nqp: OUTPUT«2␤»

[12:51] <moritz> pmurias: incorrect in what way?

[12:52] <moritz> (yes, the RW semantics are a bit off, it's macro-ish in nqp)

[12:52] <pmurias> moritz: that it modifies and inmutable value

[12:52] <pmurias> perl6: my $x := 1;$x++;

[12:52] <p6eval> rakudo b86628: OUTPUT«Cannot assign to a non-container␤  in sub postfix:<++> at src/gen/CORE.setting:2883␤  in block  at /tmp/2ne0orcYhp:1␤␤»

[12:52] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«Unhandled exception: Writing to readonly scalar␤  at /tmp/m2bHZjYIlh line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4215 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4216 (module-CORE @ 579) ␤  at /home/p6eval/niecza/li…

[12:54] <pmurias> moritz: assuming we are trying to keep nqp a subset

[12:57] <pmurias> moritz: $x++ seems to mean $x := $x + 1 in nqp as opposed to $x = $x + 1;

[12:57] <moritz> pmurias: right

[12:57] <moritz> but it can't mean $x = $x + 1 in nqp, because there's no assignment

[12:58] <moritz> pmurias: jnthn and pmichaud discussed removing ++, but in the end it was used quite often, and is convenient, and easy to cheat on. So it was kept.

[13:01] <jnthn> Yeah, we re-write it to $x = $x + 1

[13:01] *** preflex left
[13:01] <jnthn> er

[13:01] <jnthn> :=

[13:01] <jnthn> Well, so long as we have a "use nqp" somewhere it can be fine ;)

[13:02] <jnthn> Since that can just import a macro postfix:<++>($x) { quasi { {{{$x}}} := {{{$x]}} + 1 } } or so

[13:02] <pmurias> it's easy to implement in nqp-js, it just seems suprising

[13:02] <jnthn> pmurias: I did try to kill it.

[13:03] <jnthn> pmurias: I don't mind writing $x := $x + 1. But @other did. So we did the easy hack :)

[13:03] <pmurias> @other = (pmichaud)? ;)

[13:03] <jnthn> I think pmichaud was also speaking for other NQP users :)

[13:04] *** Psyche^ joined
[13:04] * moritz kinda likes ++

[13:05] <moritz> r: multi sub trait_mod:<is>(|c) { say c.perl }; class A is NoSuchType { }

[13:05] <p6eval> rakudo b86628: OUTPUT«===SORRY!===␤Method 'perl' not found for invocant of class 'A'␤at /tmp/0KyCAB2fuU:1␤»

[13:05] <moritz> r: multi sub trait_mod:<is>(|c) { say c.hash.perl }; class A is NoSuchType { }

[13:05] <p6eval> rakudo b86628: OUTPUT«EnumMap.new("NoSuchType", Bool::True, )␤»

[13:06] <moritz> r: multi sub trait_mod:<is>(|c) { say c.hash.perl }; class A is Int { }

[13:06] <p6eval> rakudo b86628:  ( no output )

[13:06] <moritz> r: class A is NoSuchType { }

[13:06] <p6eval> rakudo b86628: OUTPUT«===SORRY!===␤Cannot call 'trait_mod:<is>'; none of these signatures match:␤:(Mu:U $child, Mu:U $parent)␤:(Attribute:D $attr, :rw(:$rw)!)␤:(Attribute:D $attr, :readonly(:$readonly)!)␤:(Attribute:D $attr, :box_target(:$box_target)!)␤:(Routine:D $r, :rw(:$rw)!)␤:(Rout…

[13:07] <moritz> jnthn: I wonder how to awesomify that error message; should it be a trait_mod:<is> multi that generates it, or should it be generated before we even call the trait?

[13:07] *** Patterner left
[13:07] *** Psyche^ is now known as Patterner

[13:08] <jnthn> moritz: I'm worried that it would not be considered looser than the other named candidates...

[13:09] <moritz> jnthn: and I'm worried that we reuse traitmod<is> for catch-all type (inheritance) and legitimate uses where no type is predeclared (is rw, is export)

[13:10] <moritz> which makes it a bit tricky to produce good error messages *and* keep all the flexibility

[13:10] <moritz> Moose learned that lesson long ago, separating 'is' from 'isa'

[13:10] <jnthn> moritz: I was pondering just re-writing the exception.

[13:11] <jnthn> When we report the failure from trait_mod:<is>, just use a heuristic.

[13:11] <moritz> (and with "a bit tricky" I mean "impossible to get right, the best you can do is add some heuristics)

[13:11] <jnthn> Agree it can't be better than heuristic.

[13:13] <moritz> jnthn: I'm always worried about catching the exception and rethrowing, when the same exception type can easily be caused by somwhere within a (user-supplied) trait

[13:15] *** SamuraiJack joined
[13:21] *** Moukeddar joined
[13:25] *** mucker joined
[13:27] <masak> hey people! jnthn and I are having a Perl 6 "porting" hackathon today! :D

[13:27] <moritz> \o/

[13:27] <masak> it has two purposes:

[13:28] <masak> (1) port some module or other to Perl 6

[13:28] <masak> (2) try a bottle of port I bought a while ago :)

[13:28] <moritz> :-)

[13:28] <masak> I will try to provide updates as we progress.

[13:28] <Moukeddar> good luck guys :)

[13:28] <moritz> so, any ideas yet what module(s) to portß

[13:29] <masak> yes.

[13:29] <moritz> s/ß/?/

[13:29] <masak> we settled on JSON::Path.

[13:30] <masak> https://metacpan.org/module/JSON::Path

[13:30] <moritz> about 400 lines of code

[13:30] <masak> Moukeddar: thanks! so far, the module is approachable and the port is sweet. :)

[13:30] <masak> moritz: yeah, should be doable in an afternoon.

[13:30] <jnthn> The ported code should be sweet too :D

[13:30] <Moukeddar> it's been a while and i really miss you guys here :)

[13:30] <Hor|zon> someone should screencast / record porting a Perl 5 module to Perl 6

[13:31] <Hor|zon> kind of like Larry's presentation

[13:31] <masak> Moukeddar: you should come by more often.

[13:31] <Hor|zon> that would be awesome

[13:31] <Moukeddar> i lost internet access due to cable issues -_- 

[13:31] <moritz> masak: and you can ste^Wtake inspiration from the existing tests

[13:31] <Moukeddar> but i'm back now

[13:32] <moritz> afaict the module isn't specific to JSON at all

[13:32] <moritz> it just seems to limit itself to data structures mappable to JSON

[13:33] <masak> moritz: inspiration: that's exactly what I'm doing. I'm copying the tests and converting them.

[13:33] <Moukeddar> guys, a quick question, i my resume, should i add only the languages i'm "good" at or any language i had a little experience with ?

[13:33] <masak> moritz: JSON-specific: we thought so too at first.

[13:33] <masak> moritz: but it does a little from_json conversion, actually.

[13:33] <Moukeddar> masak, your "inspiration" seems familiar lol 

[13:34] *** hash_table joined
[13:34] <masak> Moukeddar: the résumé question is hard to answer. I guess part of the answer is what you could expect to answer if during an interview you were asked about the language.

[13:35] <Hor|zon> Moukeddar: I just add the ones I'm fairly good at, then tweak it and add the *others* based on the job

[13:35] <masak> mostly I would put into the résumé things I feel very at home with.

[13:35] <Moukeddar> i see, so i should play on the safe side :)

[13:35] <masak> but Hor|zon's take is a good one, too.

[13:36] <Moukeddar> it's not a job, jut internship (that's what you call it, right ? ) 

[13:36] <Hor|zon> internship? add everything

[13:36] <masak> :D

[13:37] <Moukeddar> lol , alright 

[13:37] <Hor|zon> even Microsoft Access :D

[13:37] <Moukeddar> well that's awkward, i did add it 

[13:38] <pmurias> jnthn: ++, and -- are now implemented in nqp-js (along with the rest of test 13)

[13:38] <Hor|zon> hahaha, you'll be surprised how many _crazy_ companies use access for important stuff

[13:39] <moritz> I know of a whole CRM and billing systems for medical doctors written in access and VBA

[13:39] <moritz> *system

[13:39] <jnthn> pmurias: nice :)

[13:39] <Moukeddar> indeed, i'm applying for internship inside the international university of Al-Akhawayn

[13:40] <Hor|zon> that's different, hospitals and doctors surgeries are just really good at getting ripped off by consultants, that's why they're on access, probably using windows 98 still

[13:40] *** PacoAir joined
[13:40] <Hor|zon> even though the project isn't *that* old

[13:40] *** cognominal joined
[13:40] * masak feels bad for never, ever having heard of Al-Akhawayn

[13:41] <moritz> '

[13:41] <masak> it's Arabic for "the Akhawayn" :P

[13:42] <masak> actually, it's s'posed to be written جامعة الأخوين

[13:42] <masak> (with apologies for all IRC clients out there that don't do RTL properly...)

[13:42] <moritz> it's all white boxes to me

[13:42] <moritz> but looks pretty in the browser :-)

[13:42] * Hor|zon kisses irssi, screen, sshd, the whole chain

[13:42] <Moukeddar> i have an uncle who is a dentist, he's getting ripped , the management application he uses is pretty basic, yet he pays loads of money for it and it's maintainance

[13:43] <Hor|zon> works here :)

[13:43] <Moukeddar> masak, it's located in Ifrane, Morocco 

[13:43] <Moukeddar> that's what i wrote in my C.V

[13:43] <Moukeddar> http://pastebin.com/9jCgqB8r

[13:45] <Hor|zon> no Perl?

[13:45] *** Moukeddar left
[13:45] *** aharoni_ joined
[13:45] *** Moukeddar joined
[13:45] <Moukeddar> i'm not good at it, i just toy around with it

[13:46] <Moukeddar> and like you said, only add what you feel you're good at, no ? don't want to get cornered during the interview

[13:47] <masak> you should learn Perl, it's good for future job prospects ;)

[13:47] <masak> plus, you get to spend more time with us :)

[13:47] <Hor|zon> eheh, fair enough :)

[13:48] <Moukeddar> that's the up-side of learning perl, the #perl6 guys ^_^

[13:48] <Moukeddar> so, what do you think about what i wrote there?

[13:50] *** aharoni_ is now known as aharoni

[13:50] <cognominal> "Merise"! Welcome to french bureaucracy

[13:51] <Moukeddar> cognominal, got that right \m/

[13:51] <Hor|zon> Moukeddar: looks good, I would usually try and add some adjective indicating level to most skills, or years of experience in parens

[13:51] <Hor|zon> but you don't necessarily have to

[13:52] <Hor|zon> for the short compact format you have, looks good

[13:52] <Hor|zon> CVs are hard

[13:52] <Moukeddar> Hor|zon, it's under the categorie of "Competences", which means : "what i'm good at" lol 

[13:52] <Moukeddar> i'll be back, lunch :)

[13:54] <Hor|zon> brill idea

[13:54] * Hor|zon hunts for food

[13:58] *** hoelzro|away is now known as hoelzro

[13:59] <masak> "Unsupported use of -> as postfix;  in Perl 6 please use either . to call a method, or whitespace to delimit a pointy block"

[13:59] <masak> \o/

[13:59] <masak> rakudo++

[13:59] <masak> rn: my $a; $a->some_method; say "alive"

[13:59] <p6eval> rakudo b86628: OUTPUT«===SORRY!===␤Unsupported use of -> as postfix;  in Perl 6 please use either . to call a method, or whitespace to delimit a pointy block␤at /tmp/tk3CkoC1ft:1␤»

[13:59] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«===SORRY!===␤␤Unsupported use of -> as postfix; in Perl 6 please use either . to call a method, or whitespace to delimit a pointy block at /tmp/YFR5UgSKhS line 1:␤------> my $a; $a->⏏some_method; say "alive"␤␤Parse fail…

[14:00] <masak> \o/

[14:00] <masak> niecza++

[14:00] <masak> turns out this is quite useful when porting code from Perl 5 to Perl 6...

[14:02] *** skids left
[14:04] <tadzik> does your porting consist of copying the code and then translating it piece by piece?>

[14:06] <masak> well, that's how I've been doing the tests so far.

[14:06] <masak> but it seems to me jnthn is taking a more conservative route.

[14:06] <Moukeddar> TDD port ?

[14:06] <masak> involving something called "thinking", apparently.

[14:07] * Moukeddar thinks masak is an automated code translator 

[14:07] <masak> a masak is an automaton that turns port wine into ported code.

[14:08] * Moukeddar was thinking masak's running on Cafeine

[14:10] <masak> nah, caffeine makes me not sleep at night, and it doesn't make me more efficient in the daytime :)

[14:10] <Hor|zon> some good port on the other hand...

[14:10] <Moukeddar> i agree, so, wine is a better substance ?

[14:11] <Hor|zon> I prefer whiskey with Perl

[14:11] <jnthn> I'm certainly not wining about this port...

[14:11] <Hor|zon> haha, never miss a chance for a pun

[14:12] <Hor|zon> wasn't a bad pun to be honest, beter than I have come to expect from you lot

[14:12] <Moukeddar> oh you guys

[14:12] <Moukeddar> how about some Tea ?

[14:13] <Hor|zon> now that was more the Perl level of pun

[14:13] <Hor|zon> :P

[14:15] <Hor|zon> TPF needs to give a pun of the year award

[14:15] <masak> Hor|zon: are you saying you've come to expect bad puns from our lot?

[14:16] * masak .oO( not that there's anything wrong with that. some of my best friends are bad puns. )

[14:16] *** preflex joined
[14:16] <Hor|zon> masak: no, I wouldn't dream of it

[14:17] <masak> ;)

[14:17] * Moukeddar thinks masak was pretty intimidating 

[14:20] <masak> it is not my intent to intimidate.

[14:20] *** aharoni left
[14:21] <Hor|zon> he has always been a bully, that masak

[14:21] <masak> moritz: how went the github authentication thing? did you get stuck at some point? is there some way we can help?

[14:22] <Moukeddar> here's my CV

[14:22] <Moukeddar> http://www.filedropper.com/cv_2

[14:22] <Moukeddar> pardon me, it's french

[14:22] <masak> heh :)

[14:22] <masak> we pardon your French. :P

[14:23] <Moukeddar> i don't like the fact that it has to be french

[14:23] * masak reads it with `strings`

[14:23] <masak> oh, Moukeddar is your last name? didn't know that.

[14:24] <Moukeddar> yes it is, and i still haven't found what it means lol

[14:24] <masak> looks nice.

[14:25] <Hor|zon> a one page CV! my Boss would hire you on the spot

[14:25] <masak> heh.

[14:25] <Moukeddar> lazy boss ?

[14:26] <Moukeddar> but seriously, i just got started :)

[14:26] <Hor|zon> which boss isn't?

[14:26] <Hor|zon> they're all lazy and impulsive

[14:26] * masak .oO( because generalization is generally wrong, except when it's about bosses )

[14:27] <Hor|zon> true stories

[14:27] <Moukeddar> you mean Horror stories 

[14:27] *** colomon left
[14:27] *** bro_grammer joined
[14:28] *** sizz_ joined
[14:28] <moritz> masak: I succeed with the github authentication stuff. Which is why modules.perl6.org is non-empty again :-)

[14:28] *** hash_table left
[14:29] *** sizz left
[14:29] <moritz> part of the problem is that oauth seems to mix authorization and authentication, and I didn't want to read the documentation on authorization, since I only wanted to authenticate :-)

[14:29] <moritz> s/is/was/

[14:30] <masak> moritz++

[14:31] *** xinming_ is now known as xinming

[14:34] <masak> heh, just got bitten by https://github.com/moritz/json/issues/7 :)

[14:39] *** cognominal left
[14:40] <jnthn> Just processed our first JSONPath expression and got an answer

[14:41] <moritz> masak: I tried to fix it in the grammar, and somehow didn't have much luck

[14:41] *** thebAR left
[14:42] <masak> moritz: I just pushed a fix.

[14:42] <masak> hope you think it's OK.

[14:43] * moritz hopes so too :-)

[14:43] <masak> hm, I didn't contribute a test. I should do that, too.

[14:44] <moritz> wait a second

[14:44] <moritz> I found that the parsing tests are too lenient

[14:44] <masak> oh?

[14:45] * masak holds writing a test for now

[14:45] <moritz> they basically do a lives_ok {JSON::Tiny::Grammar.parse($t)}

[14:45] <moritz> which is mostly fine, because most parsefails cause an exception

[14:45] <moritz> but this particular one did not

[14:46] <moritz> pushed

[14:46] <masak> oh!

[14:47] <moritz> ... and a test fails.

[14:47] <masak> pulled.

[14:47] <moritz> oh, because it doesn't use from_json, but grammar.parse

[14:47] <moritz> which doesn't call .trim

[14:47] <masak> ah.

[14:48] * masak leaves that to moritz to fix

[14:49] <moritz> yes, I will

[14:50] <moritz> I just don't understand why it's so hard to fix in the grammar

[14:51] <moritz> if leaving and trailing whitespaces are problem, why doesn't \s* at the start and end of TOP fix it?

[14:51] <moritz> adding it *and* switching it from rule to token fixed it

[14:51] * moritz flabbergasted

[14:56] *** jaldhar joined
[14:57] *** mucker left
[14:57] *** hoelzro is now known as hoelzro|away

[15:00] <moritz> masak: I've pushed a "proper" fix, though it doesn't make much difference right now

[15:01] <masak> ok :)

[15:02] <masak> I agree with the reason not to do it with .trim, fwiw. moritz++

[15:02] *** mucker joined
[15:04] <masak> moritz: :actions($a)

[15:04] <masak> ...missing an excellent opportunity to do :$actions... :)

[15:04] <masak> nitpick, I know.

[15:05] *** birdwindupbird joined
[15:06] <masak> also, whenever you mention '#7' from a commit message, Github will automatically link that whole commit message to the appropriate issue.

[15:09] <moritz> that's some of the magic I'm not yet used to.

[15:09] <moritz> I wonder if we should do the same at $work, with our git repos and the OTRS installation

[15:09] <masak> I even did 'Closes #7.' from the commit message, and I didn't have to go close the issue myself.

[15:10] *** sctt left
[15:16] <moritz> http://caml.inria.fr/pub/docs/oreilly-book/html/book-ora004.html looks quite good

[15:18] *** mucker left
[15:18] <masak> O'Caml in general seems interesting.

[15:19] <masak> um, apparently it's "OCaml".

[15:20] <moritz> it takes time to get use to statements being terminated by double semicolon

[15:20] <geekosaur> they dropped the ' at some point, yes

[15:25] *** ivan`` left
[15:27] *** ivan`` joined
[15:28] <masak> r: my &twice = -> &c { &c(); &c() }; twice { say "lol I can do things twice" }

[15:28] <p6eval> rakudo b86628: OUTPUT«lol I can do things twice␤lol I can do things twice␤»

[15:28] *** cognominal joined
[15:35] *** raiph left
[15:35] *** raiph joined
[15:43] *** tokuhiro_ left
[15:43] *** tokuhiro_ joined
[15:48] *** tokuhiro_ left
[15:48] *** bapa joined
[15:51] <masak> another finding: tawny port wine works well with: (a) cheese, (b) quality chocolate.

[15:52] *** bapa left
[15:52] *** bapa joined
[15:53] <jnthn> And...make some-closure in action methods that build up a tree of closures is a neat pattern :)

[15:54] <masak> definitely.

[15:54] *** wamba joined
[16:03] *** bapa left
[16:03] *** thou joined
[16:04] *** bapa joined
[16:06] *** MayDaniel_ joined
[16:08] *** MayDaniel left
[16:09] *** bapa left
[16:10] *** kaare_ joined
[16:11] *** bapa joined
[16:14] *** CharellKing joined
[16:19] *** SamuraiJack left
[16:20] *** SamuraiJack joined
[16:22] *** pochi joined
[16:22] *** benabik left
[16:22] <CharellKing> Hello, everyone, I'm a new-comer

[16:22] *** bapa left
[16:23] *** thou left
[16:24] *** SamuraiJack_ joined
[16:24] <Moukeddar> o/ CharellKing, here you'll find the most friendly room on the entire IRC

[16:24] *** SamuraiJack left
[16:24] <TimToady> CharellKing: what are your interests?

[16:25] <CharellKing> I'm a software developer

[16:26] <CharellKing> My interests is reading, basketball,music

[16:26] *** hash_table joined
[16:27] <CharellKing> I want to find some jobs here

[16:27] <CharellKing> maybe when I am free

[16:27] <masak> CharellKing: welcome! we already like you :)

[16:27] *** bapa joined
[16:28] <CharellKing> very good

[16:28] *** bro_grammer_ joined
[16:28] <masak> rn: say "$_ says hi too!" for <Niecza Rakudo>.pick(*)

[16:28] <p6eval> rakudo b86628, niecza v22-14-g136ddcf: OUTPUT«Niecza says hi too!␤Rakudo says hi too!␤»

[16:28] <CharellKing> I'm from China

[16:29] <masak> CharellKing: 非常好！

[16:29] <CharellKing> so it's 0:29

[16:29] <masak> yes, it is :)

[16:29] <CharellKing> you are chinese

[16:29] <masak> 不。

[16:30] <CharellKing> 那你是哪个国家，还懂中文

[16:30] *** bro_grammer left
[16:30] <masak> 我是瑞典人。

[16:30] *** hash_table left
[16:31] <masak> always happy so surprise someone by knowing some Chinese. :P

[16:31] *** bapa left
[16:31] <CharellKing> hah

[16:32] <masak> actually, Mandarin reminds me of FP languages in various ways.

[16:33] *** birdwindupbird left
[16:33] <CharellKing> you have been china

[16:33] *** am0c left
[16:34] *** bapa joined
[16:35] <masak> CharellKing: yeah. 两次。

[16:35] <rindolf> CharellKing: welcome aboard.

[16:40] <raiph> CharellKing: Which computer language(s) do you use as a software developer?

[16:40] <CharellKing> C/C++

[16:41] <CharellKing> perl 

[16:41] <raiph> CharellKing: And how did you hear about Perl 6?

[16:41] <rindolf> CharellKing: do you mean you use C++ with some C paradigms?

[16:41] <raiph> Ah.

[16:42] <CharellKing> some it news

[16:42] <CharellKing> i hear about perl6

[16:42] <CharellKing> you can search cn.beta in google

[16:43] <CharellKing> this website are some comments of IT' news

[16:45] <CharellKing> C/C++ means C and C++

[16:45] * jnthn gave a Perl 6 talk or two in Beijing last summer :)

[16:46] <raiph> CharellKing: reading now

[16:46] <CharellKing> music

[16:46] <CharellKing> mozart

[16:46] <CharellKing> I love a book

[16:46] <CharellKing> out of control

[16:48] <sorear> good * #perl6

[16:49] <masak> sorear: 'night

[16:49] <masak> er. morning, I mean :)

[16:49] <raiph> sorear: goodnight

[16:50] <raiph> CharellKing: Kevin Kelly?

[16:50] <CharellKing> yes

[16:50] <CharellKing> this book is very good

[16:50] <jnthn> 'night, sorear  :D

[16:50] <masak> this madness has to stop... :P

[16:50] * masak likes Kevin Kelly

[16:50] <CharellKing> translate into chinese by network

[16:50] <sorear> welcome CharellKing

[16:50] <masak> network++

[16:51] <sorear> is this some kind of Searle thing? :/

[16:51] <raiph> CharellKing: Nearly 20 years old but still a great book, imo.

[16:51] <CharellKing> yes

[16:52] <sorear> CharellKing: are you Chinese?

[16:52] <CharellKing> yes

[16:52] <CharellKing> so I speak english, not so cool

[16:54] <CharellKing> do more reading ,stay angry, stay foolish

[16:54] <raiph> CharellKing: hope you don't mind the barrage of questions... how long have you coded in C/C++, how long in Perl, and what sort of application?

[16:54] <CharellKing> C/C++ 4 years

[16:54] <CharellKing> perl  begin

[16:55] <sorear> CharellKing: welcome

[16:55] <CharellKing> now I'm in a department of chinese telcome

[16:55] <CharellKing> telecom

[16:57] <masak> <sorear> is this some kind of Searle thing? :/

[16:57] <masak> if I understand you correctly, yes.

[16:57] <masak> one of the Harry Potter books was translated in its entirety within 48 hours in China.

[16:58] <CharellKing> yes

[16:58] <CharellKing> harry potter are famous in chinese

[16:58] <CharellKing> especially children

[17:00] <raiph> masak: if you understand sorear, does "some kind of Searle thing" refer to this dialog, or Kevin Kelly's book? (I sure don't see how the latter applies)

[17:01] <masak> oh, I thought it applied to the Harry Potter translation.

[17:01] <raiph> sorear: ?

[17:01] <sorear> raiph: glancing reference to https://en.wikipedia.org/wiki/Chinese_room

[17:02] <masak> that's what I thought.

[17:03] <masak> well, the Harry Potter translation was essentially a human map-reduce, so it's not such a bad comparison.

[17:04] <masak> I always found the Chinese room objection to be... inadequate.

[17:06] <sorear> agreed

[17:06] <raiph> masak: to say the least. which imo is an appropriate response to searle.

[17:07] <masak> he seems to be arguing against intelligence emerging out of symbol handling.

[17:08] <masak> if that were true, we'd all be in trouble :)

[17:08] <masak> s/that/that criticism/

[17:11] *** Moukeddar left
[17:17] *** bapa left
[17:23] *** Administrator joined
[17:23] *** Administrator is now known as Guest76573

[17:23] <raiph> masak: Would you/jnthn be willing to comment on http://irclog.perlgeek.de/perl6/2012-10-18#i_6074232 ?

[17:23] *** pmurias left
[17:24] *** CharellKing left
[17:26] <masak> raiph: the past 7 years have made me cautious to commit to any factual claim on how much of Perl 6 we currently implement.

[17:26] <masak> raiph: and in the end, that's not what matters. what matters is how awesome we can be in the eyes of users.

[17:26] <masak> how much we can help them get shit done without getting in the way.

[17:27] <raiph> masak: OK. Thanks.

[17:28] *** domidumont left
[17:28] *** grondilu left
[17:29] *** Guest76573 left
[17:33] *** hash_table joined
[17:33] *** SamuraiJack_ left
[17:34] *** CharellKing joined
[17:34] *** bro_grammer_ left
[17:36] <CharellKing> How many people of this community

[17:39] <masak> depends what you mean.

[17:40] *** rindolf left
[17:40] *** rindolf joined
[17:40] <jnthn> Port update: the bottle is empty! /o\ But the Perl 5 module we're porting has 3 of the 4 .t files fully passing, and the other one is half way \o/

[17:41] <masak> \o/

[17:41] <masak> (where'd all the port go?) :P

[17:41] <jnthn> I dunno o.O

[17:41] <jnthn> :)

[17:42] <masak> :)

[17:44] <jnthn> dinner &

[17:44] <CharellKing> sleep

[17:44] <CharellKing> it's time to sleep

[17:46] <arnsholt> masak/raiph: I think it might be an uncomputable function, like Kolmogorov complexity =)

[17:46] <arnsholt> We can say that more stuff is implemented now than a year ago, but exact quantification is next to impossible

[17:47] *** SamuraiJack__ joined
[17:47] *** mathw left
[17:48] *** mathw joined
[17:51] *** CharellKing_ joined
[17:52] *** CharellKing left
[17:52] *** CharellKing_ left
[17:54] *** azawawi joined
[17:55] *** CharellKing joined
[18:09] <diakopter> r: sub foo(:$bar:) { }; foo($_)

[18:09] <p6eval> rakudo b86628: OUTPUT«Lexical 'self' not found␤  in sub foo at /tmp/LuI50NAfuN:1␤  in block  at /tmp/LuI50NAfuN:1␤␤»

[18:09] <diakopter> masak: bug?

[18:15] *** fgomez joined
[18:22] <diakopter> r: class A { method foo(:%*bar: *@bar ) { say @bar.perl } }; A.new.foo(bar=>{ab=>3})

[18:22] <p6eval> rakudo b86628: OUTPUT«Array.new(A.new())␤»

[18:22] <diakopter> jnthn: is this DWIM?

[18:25] <diakopter> r: sub foo($.a1213) { }

[18:25] <p6eval> rakudo b86628:  ( no output )

[18:25] <diakopter> masak: bug? shouldn't accept twigil . imho

[18:26] <CharellKing> perl6 has learning document?

[18:28] <diakopter> masak: nm on last; I now see attributive parameter

[18:37] *** CharellKing left
[18:43] *** wamba left
[18:44] *** MikeFair_ joined
[18:46] <raiph> CharellKing: http://irclog.perlgeek.de/perl6/today # Making a point to the channel in more ways than one

[18:47] <moritz> jnthn, masak: how goes/went the porting?

[18:59] *** wamba joined
[19:00] <diakopter> does anyone know what this line does in rakudo's Grammar.pm?  [ [ ':'?'(' <signature> ')'] | <trait> ]*

[19:00] <diakopter> in rule regex_def

[19:01] <diakopter> er, I mean, what does the : mean

[19:01] <rindolf> diakopter: it looks like a string.

[19:02] <diakopter> _._.

[19:02] <gfldex> diakopter: do you got a line number?

[19:02] <diakopter> 1948

[19:03] <moritz> diakopter: glancing over the actions, it seems to be ignored

[19:03] *** azawawi left
[19:03] <diakopter> ok

[19:03] <diakopter> I wonder what it's supposed to mean

[19:03] <moritz> I'd look at STD.pm6 and see if it's used in there

[19:04] <moritz> ie (regex|token|rule) <identifier>:( 

[19:05] <diakopter> rn: grammar A { regex TOP{ }; }; say A.parse("a")

[19:05] <p6eval> rakudo b86628: OUTPUT«｢｣␤␤»

[19:05] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«===SORRY!===␤␤Null pattern not allowed at /tmp/1lADCqsytz line 1:␤------> grammar A { regex TOP{ ⏏}; }; say A.parse("a")␤␤Parse failed␤␤»

[19:05] <diakopter> rakudobug? shouldn't allow null pattern

[19:05] <moritz> known

[19:06] <diakopter> k

[19:06] <moritz> rn: grammar A { regex TOP:() { a } }; say A.parse('a')

[19:06] <p6eval> niecza v22-14-g136ddcf: OUTPUT«===SORRY!===␤␤Action method fakesignature not yet implemented at /tmp/nY_678wOHd line 1:␤------> grammar A { regex TOP:(⏏) { a } }; say A.parse('a')␤␤Use of uninitialized value in string context␤  at /home/p6eval/niecza…

[19:06] <p6eval> ..rakudo b86628: OUTPUT«No such method 'TOP' for invocant of type 'A'␤  in method parse at src/gen/CORE.setting:10166␤  in block  at /tmp/fWVxYnmX0g:1␤␤»

[19:06] <moritz> hm, seems to become part of the name

[19:07] <diakopter> rn: grammar A { regex TOP:():():():() { a }; }; say A.parse("a")

[19:07] <p6eval> rakudo b86628: OUTPUT«No such method 'TOP' for invocant of type 'A'␤  in method parse at src/gen/CORE.setting:10166␤  in block  at /tmp/rT5tBHIiu8:1␤␤»

[19:07] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«===SORRY!===␤␤Action method fakesignature not yet implemented at /tmp/niylEa1BZp line 1:␤------> grammar A { regex TOP:(⏏):():():() { a }; }; say A.parse("a")␤␤Action method fakesignature not yet implemented at /tmp/niy…

[19:07] <moritz> r: grammar A { regex a:() { a } }; say A.parse('a', :rule<a:()>)

[19:08] <p6eval> rakudo b86628: OUTPUT«No such method 'a:()' for invocant of type 'A'␤  in method parse at src/gen/CORE.setting:10166␤  in block  at /tmp/I2JL14tqJR:1␤␤»

[19:08] *** flightrecorder joined
[19:08] <moritz> r: grammar A { regex a:() { a } }; say A.^methods

[19:08] <p6eval> rakudo b86628: OUTPUT«No such method 'gist' for invocant of type 'NQPRoutine'␤  in method gist at src/gen/CORE.setting:4837␤  in sub say at src/gen/CORE.setting:7266␤  in block  at /tmp/RwxRzQq9ha:1␤␤»

[19:08] <moritz> r: grammar A { regex a:() { a } }; say A.^methods.map: *.name

[19:08] <diakopter> r: grammar A { regex a:() { a } }; say A.parse('a', :rule<a:>)

[19:08] <p6eval> rakudo b86628: OUTPUT«No such method 'name' for invocant of type 'NQPRoutine'␤  in block  at /tmp/hMGAf0Przf:1␤␤»

[19:08] <p6eval> rakudo b86628: OUTPUT«｢a｣␤␤»

[19:08] <diakopter> that's a leaky error

[19:24] *** MikeFair_ left
[19:29] *** MikeFair_ joined
[19:41] <dalek> perl6-bench: 1911a88 | (Geoffrey Broadwell)++ | / (2 files):

[19:41] <dalek> perl6-bench: First bits of Perl 6-based bench porcelain

[19:41] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/1911a88026

[19:41] <dalek> perl6-bench: b1d60f5 | (Geoffrey Broadwell)++ | bench:

[19:41] <dalek> perl6-bench: Make clean and realclean look and act similarly

[19:41] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/b1d60f5ed9

[19:45] <masak> arnsholt: that's a seriously depressing view of the matter :P

[19:50] <masak> "when will you be ready?" -- "um... undecidable."

[19:50] <masak> "we'll let you know when we can know." :P

[19:51] <moritz> that's why the two most important questions are "what can you do today?" and "what's still missing?"

[19:53] <masak> aye.

[19:59] *** mucker joined
[20:02] *** mucker left
[20:11] <arnsholt> masak: True. A bit different from what I intended, I guess =)

[20:11] *** GlitchMr left
[20:11] <masak> :)

[20:12] <arnsholt> Mal apropos, when's a good time for me to visit you guys in Malmö?

[20:14] *** CharellKing joined
[20:16] *** CharellKing left
[20:17] <masak> r: .say for { a => 1, b => 2 }

[20:17] <p6eval> rakudo b86628: OUTPUT«("a" => 1, "b" => 2).hash␤»

[20:17] <masak> shouldn't flatten, right?

[20:17] <masak> r: .say for gather take do given 1 { default { { a => 1, b => 2 } } }

[20:17] <p6eval> rakudo b86628: OUTPUT«"a" => 1␤"b" => 2␤»

[20:17] <masak> also shouldn't flatten, methinks.

[20:17] <masak> and yet it... does.

[20:18] <jnthn> If you remove the default?

[20:18] <masak> r: .say for gather take do given 1 { when 1 { { a => 1, b => 2 } } }

[20:18] <p6eval> rakudo b86628: OUTPUT«"a" => 1␤"b" => 2␤»

[20:18] <masak> r: .say for gather take do given 1 { { a => 1, b => 2 } }

[20:18] <p6eval> rakudo b86628: OUTPUT«("a" => 1, "b" => 2).hash␤»

[20:18] <masak> either a 'when' or a 'default' is required for the bug to appear.

[20:18] <masak> so, it's related to 'succeed'?

[20:19] *** cognominal left
[20:20] * masak submits rakudobug

[20:20] <masak> arnsholt: just stop by anytime.

[20:21] <jnthn> Preferably when we're not away ;)

[20:22] *** fgomez left
[20:25] *** cognominal joined
[20:26] *** flightrecorder left
[20:27] *** SamuraiJack__ left
[20:33] *** arlinius left
[20:33] <arnsholt> jnthn: Hence my asking =)

[20:34] <arnsholt> Anyways, I'm going to bed now, but end of next week or sometime the week after that work for you?

[20:34] <jnthn> Something like that.

[20:35] *** Araq joined
[20:35] <arnsholt> Cool!

[20:37] <masak> looking forward to meeting you, arnsholt.

[20:38] <masak> all tests pass! \o/

[20:39] <jnthn> Porting hackathon successful \o/

[20:39] <masak> yay

[20:39] *** fgomez joined
[20:43] <diakopter> masak: did you see the two hilites above

[20:43] <diakopter> masak: er, one for you

[20:43] <diakopter> one for jnhtn

[20:43] <diakopter> jnthn

[20:44] <Araq> fyi http://www.parrot.org/languages lists 3 languages: "winxed"  -- deadlink for me;  "lua" -- last commit 5 months ago

[20:45] <jnthn> Araq: Probably more useful to let folks on #parrot know :)

[20:46] <jnthn> diakopter: yes, what you're trying makes little sense, but it does produce an internal error

[20:46] *** cognominal left
[20:46] <Araq> forgot how to join #parrot

[20:50] *** kaare_ left
[20:51] *** cognominal joined
[20:52] <dalek> ecosystem: 8990776 | jonathan++ | META.list:

[20:52] <dalek> ecosystem: Add JSON::Path.

[20:52] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/8990776b34

[21:10] *** armitage811 joined
[21:12] *** armitage811 left
[21:13] *** DASDSAD joined
[21:14] *** pmurias joined
[21:14] <pmurias> are there any benchmarks for nqp?

[21:27] *** DASDSAD is now known as Black_Beret

[21:28] *** jaldhar left
[21:28] *** Black_Beret left
[21:28] *** Black_Beret joined
[21:30] *** MikeFair__ joined
[21:30] *** MikeFair_ left
[21:33] <japhb> pmurias: I'm working on common benchmarks for Perl 5, NQP, and Perl 6 in japhb/perl6-bench

[21:37] *** Black_Beret left
[21:37] *** asasAS joined
[21:39] *** wamba left
[21:40] <dalek> perl6-bench: a062490 | (Geoffrey Broadwell)++ | bench:

[21:40] <dalek> perl6-bench: Add clone/checkout of component HEAD from local bare repo; add fetch command to fetch new commits to bare repos; stub build command

[21:40] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/a062490813

[21:40] <dalek> perl6-bench: db94102 | (Geoffrey Broadwell)++ | components.json:

[21:40] <dalek> perl6-bench: Add niecza to components.json

[21:40] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/db94102db6

[21:41] *** arlinius joined
[21:50] *** aindilis left
[21:50] *** aindilis joined
[21:51] *** armitage81 joined
[21:54] *** asasAS left
[21:54] *** armitage81 left
[21:54] *** asasAS joined
[21:57] *** asasAS is now known as armitage81

[21:57] *** armitage81 left
[21:57] *** armitage81 joined
[21:58] *** armitage81 left
[21:58] *** asasAS joined
[21:59] *** asasAS is now known as armitage81

[21:59] *** armitage81 left
[21:59] *** armitage81 joined
[22:18] *** xinming_ joined
[22:21] *** xinming left
[22:35] *** grondilu joined
[22:35] <grondilu> rn: say 1 .. ^'foo'.chars;

[22:36] <p6eval> rakudo b86628, niecza v22-14-g136ddcf: OUTPUT«1..3␤»

[22:36] <grondilu> rn: say ^'foo'.chars;

[22:36] <p6eval> rakudo b86628, niecza v22-14-g136ddcf: OUTPUT«0..^3␤»

[22:36] <grondilu> rn: say eager 1 .. ^'foo'.chars;

[22:36] <p6eval> rakudo b86628: OUTPUT«1 2 3␤»

[22:36] <p6eval> ..niecza v22-14-g136ddcf: OUTPUT«===SORRY!===␤␤Undeclared routine:␤     'eager' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1437 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 37) ␤  at /ho…

[22:36] <grondilu> r: say eager ^'foo'.chars;

[22:36] <p6eval> rakudo b86628: OUTPUT«0 1 2␤»

[22:38] <grondilu> r: say eager 1 .. ^'foo'.chars;

[22:38] <p6eval> rakudo b86628: OUTPUT«1 2 3␤»

[22:38] * grondilu was expecting 1 2

[22:38] <grondilu> r: say eager 1 .. 'foo'.chars;

[22:38] <p6eval> rakudo b86628: OUTPUT«1 2 3␤»

[22:39] <jnthn> r: say eager 1 ..^ 'foo'.chars;

[22:39] <p6eval> rakudo b86628: OUTPUT«1 2␤»

[22:39] <jnthn> Careful where you put the space ;)

[22:39] <grondilu> oh yeah

[22:39] <grondilu> thanks

[22:42] <grondilu> this makes me think of something funny.

[22:42] *** nebuchad` joined
[22:43] <grondilu> r: sub infix:<^..^>($a, $b) { $a-1 ^..^ $b }; say 1 ^..^ 10;  # funny-looking operator :)

[22:43] <p6eval> rakudo b86628: OUTPUT«maximum recursion depth exceeded␤current instr.: 'print_exception' pc 89042 (src/gen/CORE.setting.pir:42605) (src/gen/CORE.setting:9055)␤called from Sub 'infix:<->' pc 52504 (src/gen/CORE.setting.pir:25276) (src/gen/CORE.setting:2910)␤called from Sub 'infix:<^..^>'…

[22:43] <grondilu> r: sub infix:<^..^>($a, $b) { $a-1 ..^ $b }; say 1 ^..^ 10;  # funny-looking operator :)

[22:43] *** nebuchadnezzar left
[22:43] <p6eval> rakudo b86628: OUTPUT«0..^10␤»

[22:43] *** nebuchad` is now known as nebuchadnezzar

[22:48] <pmurias> jnthn: how do you deal with nqp spitting out extremely long error stacktraces?

[22:49] <jnthn> pmurias: What do you mean "deal with"?

[22:49] <jnthn> pmurias: I just cope... 

[22:49] <jnthn> For parse errors it'd be good to do something shorter, I think.

[22:50] <jnthn> But it never bothers me enough to work on it.

[22:50] <pmurias> so you just scroll the terminal

[22:50] * pmurias is writing a wrapper ;)

[22:51] <jnthn> :)

[22:51] <pmurias> the nqp ops also work on Perl 6 scalars?

[22:52] <pmurias> like add_n?

[22:53] <pmurias> s/work/can accept/

[22:54] *** pmurias left
[22:54] *** pmurias joined
[22:55] <jnthn> No

[22:56] <jnthn> Well, I guess it *can* work but it's not the right way.

[22:57] <jnthn> They work on native floats.

[22:57] <pmurias> the proper question is do I have to make them work on containers in nqp?

[22:57] <jnthn> No

[22:57] <jnthn> NQP itself doesn't have any scalar containers.

[22:58] <jnthn> The container spec stuff is mostly to cope with Perl 6 objects that escape into NQP land.

[22:58] <pmurias> "container spec stuff" = ?

[22:59] <jnthn> A type can be flagged as "this is a scalar container"

[22:59] <jnthn> Many things automatically strip them off.

[23:00] <jnthn> Time for some sleep &

[23:00] * pmurias should got to sleep too&

[23:00] <pmurias> g'night

[23:00] *** pmurias left
[23:01] <diakopter> rn: my \o=1;        \o\  |o| <o> |o|  /o/

[23:01] <p6eval> rakudo b86628, niecza v22-14-g136ddcf:  ( no output )

[23:01] *** spider-mario left
[23:07] *** Araq left
[23:10] <felher> :D

[23:14] <sjn> \o

[23:20] *** rindolf left
[23:21] <cognominal> grondilu, what is the meaning of you nick. it sounds francophone to me? but you are in an american time zone?

[23:35] *** RandalSchwartz joined
[23:36] <RandalSchwartz> I forget... is this channel also for rakudo help?

[23:36] <cognominal> yes. anything perl6 goes here.

[23:36] <RandalSchwartz> for the past few weeks, I've been unable to build rakudo from git

[23:36] <RandalSchwartz> fails during init::manifest

[23:36] <RandalSchwartz> is there some magical thing I should do differently?

[23:37] *** MayDaniel_ left
[23:37] <cognominal> RandalSchwartz, git clean?

[23:37] <RandalSchwartz> I've even tried cleaning it back to just the git checkout

[23:37] * [Coke] waves

[23:37] <RandalSchwartz> yes I've done that

[23:38] <[Coke]> RandalSchwartz: how are you trying to build rakudo?

[23:38] <RandalSchwartz> I have 2012.10-1-gb866287

[23:38] <RandalSchwartz> perl Configure.pl --gen-parrot

[23:38] <RandalSchwartz> fails there

[23:38] <RandalSchwartz> very early

[23:38] <[Coke]> and is this straight rakudo or Rakudo * ?

[23:39] <[Coke]> also, try "perl Configure.pl --gen-nqp --gen-parrot" (and also try removing the parrot directory if it's already there.)

[23:39] <RandalSchwartz> ... git://github.com/rakudo/rakudo.git

[23:39] <[Coke]> ok. that's just the compiler, as opposed to the star distribution. (which is fine and good)

[23:39] <RandalSchwartz> OK - trying the addition of --gen-nqp

[23:40] <RandalSchwartz> nope.  still fail

[23:40] <cognominal> with RandalSchwartz around, I suddenly ponders about the quality of my passwords.

[23:40] <RandalSchwartz> ... step init::manifest failed: no result returned at Configure.pl line 76

[23:40] <[Coke]> did it checkout a fresh copy of parrot?

[23:40] <diakopter> I haven't seen anyone report that before

[23:40] <[Coke]> or is it reusing an existing parrot/ directory in your rakudo checkout?

[23:41] <RandalSchwartz> git clean doesn't blow the parrot?

[23:41] <RandalSchwartz> and boy, out of context... :)

[23:41] <RandalSchwartz> git clean -dfx removes parrot

[23:41] <RandalSchwartz> so I've been starting with a clean one there

[23:41] <[Coke]> ok.

[23:41] <[Coke]> what OS, OOC?

[23:41] <[Coke]> and what version of perl5?

[23:41] <diakopter> minix

[23:42] <RandalSchwartz> yes - it fetchs and configs parrot

[23:42] <RandalSchwartz> 5.12.4

[23:42] <RandalSchwartz> Darwin Locohost.local 11.4.0 Darwin Kernel Version 11.4.0: Mon Apr  9 19:32:15 PDT 2012; root:xnu-1699.26.8~1/RELEASE_X86_64 x86_64

[23:42] <[Coke]> you may be the first person to try to run parrot on minix. :)

[23:42] <RandalSchwartz> i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.1.00)

[23:42] <RandalSchwartz> anything else?

[23:42] <diakopter> it was a joke...

[23:43] <[Coke]> oh, I didn't even see who answered the question. whoops.

[23:43] <[Coke]> diakopter++

[23:43] <RandalSchwartz> ahh - I see an error message now: Check MANIFEST...No such file: tools/dev/pbc_to_exe.pir

[23:43] <RandalSchwartz> why isn't that there? :(

[23:43] <[Coke]> if you're on darwin, what does sw_vers say?

[23:43] <RandalSchwartz> that's from the Parrot config

[23:43] <RandalSchwartz> and that's why it's aborting

[23:44] <[Coke]> oh! what branch of rakudo are you on?

[23:44] <RandalSchwartz> so it's a MANIFEST problem

[23:44] <RandalSchwartz> original/nom

[23:44] <RandalSchwartz> is that the problem? :)

[23:45] <RandalSchwartz> that's been working for months

[23:45] <[Coke]> no, nom is our master.

[23:45] <[Coke]> so that's right.

[23:45] <[Coke]> what SHA is your parrot checkout on?

[23:45] <RandalSchwartz> ... oh - let me ju

[23:45] <RandalSchwartz> hold on

[23:45] <RandalSchwartz> 210ad264c4e3e2da03209f71

[23:45] <RandalSchwartz> and change :)

[23:46] <sorear> o hai merlyn

[23:46] <RandalSchwartz> looks like last commit was may 15 there

[23:46] <diakopter> urp

[23:46] <RandalSchwartz> from git://github.com/parrot/parrot.git

[23:46] <[Coke]> looks like it's the 4.4.0 release, which sounds about right given current issues with parrot.

[23:47] <[Coke]> (there are some readline issues which caused us to stay on an older release.)

[23:47] <RandalSchwartz> so are other people building this every day?

[23:47] <RandalSchwartz> because mine stopped building a few weeks ago

[23:47] <RandalSchwartz> maybe I can bisect to find when

[23:47] <RandalSchwartz> but I didn't save the last good commit :(

[23:47] <[Coke]> I'm sure jnthn & moritz are, yah.

[23:47] <RandalSchwartz> oh wait... I did.

[23:48] <RandalSchwartz> last good build - commit 9af8f20d65443b1b288a950854fd80473510c3ce

[23:48] <RandalSchwartz> sep 27

[23:48] <[Coke]> I just built that parrot standalone on my osx 10.7.3 box fine.

[23:48] <RandalSchwartz> so I coudl try bisecting from there

[23:48] <[Coke]> and if I look, that file is there.

[23:48] <[Coke]> tools/dev/pbc_to_exe.pir, that is.

[23:49] <RandalSchwartz> missing for me.

[23:49] * RandalSchwartz shrugs

[23:49] <[Coke]> what does "git st" say?

[23:49] <[Coke]> (in the parrot checkout)

[23:49] <RandalSchwartz> must be an alias for you

[23:49] <[Coke]> (for me, at 210ad26, it's there)

[23:49] <RandalSchwartz> do you mean git status?

[23:49] <[Coke]> er, status

[23:49] <RandalSchwartz> heh - #deleted:    tools/dev/pbc_to_exe.pir

[23:50] <RandalSchwartz> something deleted it since checkout :)

[23:50] <[Coke]> sorry, it's such an awesome alias, everyone should use it! :)

[23:50] <[Coke]> well, that's not kosher.

[23:50] <[Coke]> but if you git reset --hard HEAD, you can probably try the rakudo configure step again.

[23:51] <[Coke]> if it sees parrot is already checked out, it should play nice.

[23:51] <RandalSchwartz> yeah, that worked

[23:51] <RandalSchwartz> so something in the "initial checkout of parrot" smashes that file

[23:51] <RandalSchwartz> werido

[23:52] <[Coke]> I've not heard of anyone else suffering that issue. weeeeird.

[23:52] <RandalSchwartz> can you reproduce by removing parrot?

[23:52] <RandalSchwartz> or is it going to forever be just me? :)

[23:53] <[Coke]> well, hope this means you can play with rakudo more. Have fun.

[23:53] <RandalSchwartz> yeah - I've been staring at things since YAPC

[23:53] <[Coke]> I can try, sure.

[23:53] <[Coke]> I'm at b866287.

[23:54] *** xinming_ left
[23:54] <[Coke]> git clean -xdf doesn't remove parrot here, btw.

[23:54] <RandalSchwartz> ok, that's strang

[23:54] <RandalSchwartz> strange

[23:54] <RandalSchwartz> maybe I have a new git :)

[23:54] <[Coke]> double checking that...

[23:55] <RandalSchwartz> I track git.git too :)

[23:55] *** xinming joined
[23:56] <[Coke]> ugh. this is going to be painfully slow over the wifi here.

[23:56] <RandalSchwartz> comcast business at this bar... better speeds than comcast at the apartment. :)

[23:57] <RandalSchwartz> "I don't often torrent, but when I do, it's at Pyzano's Bar and Grill"

[23:57] <RandalSchwartz> 35 down 8 up

[23:57] <[Coke]> I am just hanging out waiting for a kid to be ready, my wifi find was the local mcd's. I wish I had found a bar with wifi!

[23:57] <[Coke]> ugh. still haven't finished checking out nqp.

[23:58] <RandalSchwartz> the build is definitely getting further along

[23:58] <[Coke]> tell you what - if this happens to you again, open a bug a [email@hidden.address] and I promise to check it when I'm home.

[23:58] <RandalSchwartz> yeah thanks

[23:58] <[Coke]> (on fast wifi)

[23:58] <RandalSchwartz> but at least I know the workaround now

[23:58] <RandalSchwartz> appreciate your input

[23:58] <[Coke]> yup. glad to get you playing with perl6. (you especially :)

