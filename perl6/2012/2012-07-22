[00:00] <dalek> doc: 02886c1 | raiph++ | lib/glossary.pod:

[00:00] <dalek> doc: delete extraneous space

[00:00] <dalek> doc: review: https://github.com/perl6/doc/commit/02886c137b

[00:00] <dalek> doc: 7179ca6 | Matthew++ | lib/glossary.pod:

[00:00] <dalek> doc: Merge pull request #3 from raiph/patch-1

[00:00] <dalek> doc: 

[00:00] <dalek> doc: delete extraneous space

[00:00] <dalek> doc: review: https://github.com/perl6/doc/commit/7179ca6bdd

[00:02] <raiph> gfldex: the article u linked provides a very complex path in comparison to the trivial thing i did

[00:03] *** kurahaupo left
[00:04] <raiph> i just went to the repo, picked a file, clicked edit, edited, wrote change comment, clicked save. done.

[00:06] <raiph> lue++ gfldex++

[00:08] <benabik> github makes these things easy

[00:16] *** crab2313 left
[00:17] *** crab2313 joined
[00:20] <gfldex> was toqast merged tonight?

[00:20] <gfldex> or is my brain running at halve speed? :)

[00:21] <timotimo> wasn't toqast at 7/11 steps two days ago?

[00:22] <gfldex> it feels like startup speed went up quite a bit

[00:22] <timotimo> on my end, toqast isn't merged into nom yet

[00:28] *** mucker left
[00:29] <timotimo> oh, actually it was step 9 of 11

[00:29] <timotimo> http://6guts.wordpress.com/2012/07/20/the-rakudo-move-to-qast-progressing-nicely/ <- i guess you have already read this

[00:35] <dalek> roast: 89bfdc5 | (Solomon Foster)++ | S05-interpolation/regex-in-variable.t:

[00:35] <dalek> roast: Remove extraneous | from a Niecza skip line.

[00:35] <dalek> roast: review: https://github.com/perl6/roast/commit/89bfdc5389

[00:35] <dalek> roast: 18f3c2b | (Solomon Foster)++ | packages/Test/Util.pm:

[00:35] <dalek> roast: Add #OK to silence Niecza warning.

[00:35] <dalek> roast: review: https://github.com/perl6/roast/commit/18f3c2bdb2

[00:50] *** cognominal left
[00:50] *** cognominal joined
[00:56] *** cognominal left
[00:57] *** cognominal joined
[01:06] <[Coke]> +# 07/21/2012 - rakudo++ (22933); niecza (89.76%); pugs (40.14%)

[01:07] <raiph> benabik: and especially if you don't know git. with the web ui i just used u don't have to know anything other than create an account, go to an url, navigate to the file to change, click edit, edit in an ok editor, write a change comment, click save.

[01:08] <raiph> benabik: no need to have a clue about git, version control, forks, pull requests, etc., etc.

[01:09] <raiph> s/ in an ok editor//

[01:25] *** crab2313 left
[01:26] *** colomon left
[01:29] *** adu joined
[01:32] *** fridim_ joined
[01:37] *** fridim_ left
[01:38] *** benabik left
[01:40] *** raiph left
[01:43] *** benabik joined
[01:45] *** whiteknight joined
[01:45] *** whiteknight is now known as Guest47123

[01:46] *** simcop2387 left
[01:49] *** simcop2387 joined
[01:54] *** larks joined
[02:02] *** robinsmidsrod left
[02:02] *** colomon joined
[02:07] *** robinsmidsrod joined
[02:07] *** xdbr__ left
[02:11] *** orafu left
[02:11] *** orafu joined
[02:22] *** drbean left
[02:24] *** drbean joined
[02:27] *** jerome left
[02:34] *** Guest47123 left
[02:36] *** Psyche^ joined
[02:37] *** drbean left
[02:39] *** PacoAir left
[02:39] * araujo tests if perl6 (nqp) already compiles

[02:40] *** jerome joined
[02:40] *** drbean joined
[02:40] *** Patterner left
[02:40] *** Psyche^ is now known as Patterner

[02:44] *** jerome left
[02:52] *** drbean left
[02:54] *** kurahaupo joined
[02:54] *** drbean joined
[02:58] *** kurahaupo left
[03:07] *** drbean left
[03:08] *** drbean joined
[03:21] *** drbean left
[03:23] *** drbean joined
[03:29] *** drbean left
[03:35] *** drbean joined
[03:39] *** Chillance left
[03:46] *** drbean left
[03:47] *** drbean joined
[03:48] *** tokuhiro_ left
[04:00] *** drbean left
[04:01] *** kaare_ joined
[04:03] *** drbean joined
[04:03] *** mucker joined
[04:15] *** drbean left
[04:15] *** drbean joined
[04:17] *** preflex left
[04:20] *** preflex joined
[04:29] *** drbean left
[04:30] *** drbean joined
[04:42] *** cognominal_ joined
[04:43] *** drbean left
[04:43] *** cognominal left
[04:44] *** drbean joined
[04:55] *** icwiener joined
[05:05] *** mucker left
[05:33] *** cognominal_ left
[05:33] *** orafu left
[05:33] *** larks left
[05:33] *** lue left
[05:33] *** phenny left
[05:33] *** sivoais left
[05:33] *** aloha left
[05:33] *** mikemol left
[05:33] *** [Coke] left
[05:33] *** _jaldhar left
[05:33] *** huf left
[05:33] *** alvis left
[05:33] *** Woodi left
[05:33] *** sirrobert left
[05:33] *** FireFly left
[05:33] *** Pleiades` left
[05:33] *** aindilis left
[05:33] *** plobsing left
[05:33] *** dalek left
[05:33] *** mattp_ left
[05:33] *** Bucciarati left
[05:33] *** BlueT_ left
[05:33] *** sjohnson left
[05:33] *** renormalist left
[05:33] *** pmichaud left
[05:33] *** jfried left
[05:33] *** crazedpsyc left
[05:33] *** erkan left
[05:33] *** pyrimidine left
[05:33] *** zb left
[05:33] *** sorear left
[05:33] *** shachaf left
[05:33] *** lumi_ left
[05:33] *** Exodist left
[05:33] *** c1sung left
[05:33] *** baest left
[05:33] *** Tene left
[05:33] *** pnu left
[05:33] *** preflex left
[05:33] *** adu left
[05:33] *** cotto left
[05:33] *** mtk left
[05:33] *** skids left
[05:33] *** fgomez left
[05:33] *** mikec_ left
[05:33] *** prammer left
[05:33] *** ranguard_ left
[05:33] *** Util_ left
[05:33] *** eiro_ left
[05:33] *** DarthGandalf left
[05:33] *** eiro left
[05:33] *** sjn left
[05:33] *** Khisanth left
[05:33] *** patspam left
[05:33] *** snarkyboojum left
[05:33] *** szbalint left
[05:33] *** `patch` left
[05:33] *** drbean left
[05:33] *** awwaiid_ left
[05:33] *** jevin_ left
[05:33] *** mathw left
[05:33] *** jnthn left
[05:33] *** REPLeffect left
[05:33] *** PerlJam left
[05:33] *** ingy left
[05:33] *** silug left
[05:33] *** gfldex left
[05:33] *** kst left
[05:33] *** araujo left
[05:33] *** stepnem left
[05:33] *** Grrrr left
[05:33] *** cxreg left
[05:33] *** icwiener left
[05:33] *** kaare_ left
[05:33] *** colomon left
[05:33] *** sporous left
[05:33] *** buubot_backup left
[05:33] *** estrai_ left
[05:33] *** arnsholt left
[05:33] *** hoelzro|away left
[05:33] *** HarryS left
[05:33] *** [particle] left
[05:33] *** jlaire left
[05:33] *** kcwu_ left
[05:33] *** au left
[05:33] *** jtpalmer left
[05:33] *** odoacre left
[05:33] *** hanekomu left
[05:33] *** Patterner left
[05:33] *** xinming left
[05:33] *** cosimo left
[05:33] *** betterworld left
[05:33] *** libertyprime left
[05:33] *** ponbiki left
[05:33] *** itz left
[05:33] *** lestrrat left
[05:33] *** robinsmidsrod left
[05:33] *** simcop2387 left
[05:33] *** benabik left
[05:33] *** Ex left
[05:33] *** broquaint left
[05:33] *** telex left
[05:33] *** BooK_ left
[05:33] *** Timbus left
[05:33] *** sudokode left
[05:33] *** daniel-s left
[05:33] *** Celelibi left
[05:33] *** geekosaur left
[05:33] *** cj left
[05:33] *** flussence left
[05:33] *** rurban left
[05:33] *** Ulti left
[05:33] *** dju left
[05:33] *** Vlavv left
[05:33] *** pochi left
[05:33] *** thelazydeveloper left
[05:33] *** masak left
[05:33] *** SHODAN left
[05:33] *** yeltzooo7 left
[05:33] *** PZt left
[05:33] *** BinGOs left
[05:33] *** nebuchadnezzar left
[05:33] *** rafl left
[05:33] *** avar left
[05:33] *** ruoso left
[05:33] *** bruges_ left
[05:34] *** _ilbot left
[05:34] *** ggoebel left
[05:34] *** apejens left
[05:34] *** Seganku left
[05:34] *** _sri left
[05:39] *** mucker joined
[05:39] *** drbean joined
[05:39] *** preflex joined
[05:39] *** adu joined
[05:39] *** cotto joined
[05:39] *** mtk joined
[05:39] *** skids joined
[05:39] *** fgomez joined
[05:39] *** erkan joined
[05:39] *** mikec_ joined
[05:39] *** silug joined
[05:39] *** prammer joined
[05:39] *** pyrimidine joined
[05:39] *** Khisanth joined
[05:39] *** patspam joined
[05:39] *** zb joined
[05:39] *** jevin_ joined
[05:39] *** ranguard_ joined
[05:39] *** snarkyboojum joined
[05:39] *** sorear joined
[05:39] *** Util_ joined
[05:39] *** awwaiid_ joined
[05:39] *** shachaf joined
[05:39] *** crazedpsyc joined
[05:39] *** jfried joined
[05:39] *** pmichaud joined
[05:39] *** renormalist joined
[05:39] *** sjohnson joined
[05:39] *** mathw joined
[05:39] *** jnthn joined
[05:39] *** lumi_ joined
[05:39] *** gfldex joined
[05:39] *** kst joined
[05:39] *** pnu joined
[05:39] *** Tene joined
[05:39] *** baest joined
[05:39] *** c1sung joined
[05:39] *** Exodist joined
[05:39] *** araujo joined
[05:39] *** REPLeffect joined
[05:39] *** stepnem joined
[05:39] *** eiro_ joined
[05:39] *** DarthGandalf joined
[05:39] *** Grrrr joined
[05:39] *** sjn joined
[05:39] *** PerlJam joined
[05:39] *** eiro joined
[05:39] *** Yappocall joined
[05:39] *** sunnavy joined
[05:39] *** hugme joined
[05:39] *** krunen joined
[05:39] *** ashleydev joined
[05:39] *** felher joined
[05:39] *** japhb joined
[05:39] *** revdiablo joined
[05:39] *** Helios joined
[05:39] *** Maddingue joined
[05:39] *** mj41 joined
[05:39] *** lorn joined
[05:39] *** frettled joined
[05:39] *** mhasch joined
[05:39] *** Gothmog_ joined
[05:39] *** ingy joined
[05:39] *** szbalint joined
[05:39] *** `patch` joined
[05:39] *** cxreg joined
[05:39] *** kornbluth.freenode.net sets mode: +v hugme

[05:40] *** sjohnson left
[05:40] *** renormalist left
[05:40] *** pmichaud left
[05:40] *** jfried left
[05:40] *** crazedpsyc left
[05:40] *** mucker left
[05:40] *** erkan left
[05:40] *** pyrimidine left
[05:40] *** zb left
[05:40] *** sorear left
[05:40] *** shachaf left
[05:40] *** lumi_ left
[05:40] *** Exodist left
[05:40] *** c1sung left
[05:40] *** baest left
[05:40] *** Tene left
[05:40] *** pnu left
[05:40] *** preflex left
[05:40] *** adu left
[05:40] *** cotto left
[05:40] *** mtk left
[05:40] *** skids left
[05:40] *** fgomez left
[05:40] *** mikec_ left
[05:40] *** prammer left
[05:40] *** ranguard_ left
[05:40] *** Util_ left
[05:40] *** eiro_ left
[05:40] *** DarthGandalf left
[05:40] *** eiro left
[05:40] *** sjn left
[05:40] *** ashleydev left
[05:40] *** krunen left
[05:40] *** hugme left
[05:40] *** sunnavy left
[05:40] *** Yappocall left
[05:40] *** Khisanth left
[05:40] *** patspam left
[05:40] *** snarkyboojum left
[05:40] *** lorn left
[05:40] *** szbalint left
[05:40] *** `patch` left
[05:40] *** drbean left
[05:40] *** frettled left
[05:40] *** mhasch left
[05:40] *** Gothmog_ left
[05:40] *** awwaiid_ left
[05:40] *** jevin_ left
[05:40] *** mathw left
[05:40] *** jnthn left
[05:40] *** REPLeffect left
[05:40] *** PerlJam left
[05:40] *** mj41 left
[05:40] *** ingy left
[05:40] *** silug left
[05:40] *** gfldex left
[05:40] *** kst left
[05:40] *** araujo left
[05:40] *** stepnem left
[05:40] *** Grrrr left
[05:40] *** felher left
[05:40] *** japhb left
[05:40] *** revdiablo left
[05:40] *** Helios left
[05:40] *** Maddingue left
[05:40] *** cxreg left
[05:40] *** mucker joined
[05:40] *** drbean joined
[05:40] *** preflex joined
[05:40] *** adu joined
[05:40] *** cotto joined
[05:40] *** mtk joined
[05:40] *** skids joined
[05:40] *** fgomez joined
[05:40] *** erkan joined
[05:40] *** mikec_ joined
[05:40] *** silug joined
[05:40] *** prammer joined
[05:40] *** pyrimidine joined
[05:40] *** Khisanth joined
[05:40] *** patspam joined
[05:40] *** zb joined
[05:40] *** jevin_ joined
[05:40] *** ranguard_ joined
[05:40] *** snarkyboojum joined
[05:40] *** sorear joined
[05:40] *** Util_ joined
[05:40] *** awwaiid_ joined
[05:40] *** shachaf joined
[05:40] *** crazedpsyc joined
[05:40] *** jfried joined
[05:40] *** pmichaud joined
[05:40] *** renormalist joined
[05:40] *** sjohnson joined
[05:40] *** mathw joined
[05:40] *** jnthn joined
[05:40] *** lumi_ joined
[05:40] *** gfldex joined
[05:40] *** kst joined
[05:40] *** pnu joined
[05:40] *** Tene joined
[05:40] *** baest joined
[05:40] *** c1sung joined
[05:40] *** Exodist joined
[05:40] *** araujo joined
[05:40] *** REPLeffect joined
[05:40] *** stepnem joined
[05:40] *** eiro_ joined
[05:40] *** DarthGandalf joined
[05:40] *** Grrrr joined
[05:40] *** sjn joined
[05:40] *** PerlJam joined
[05:40] *** eiro joined
[05:40] *** cxreg joined
[05:40] *** `patch` joined
[05:40] *** szbalint joined
[05:40] *** ingy joined
[05:40] *** Gothmog_ joined
[05:40] *** mhasch joined
[05:40] *** frettled joined
[05:40] *** lorn joined
[05:40] *** mj41 joined
[05:40] *** Maddingue joined
[05:40] *** Helios joined
[05:40] *** revdiablo joined
[05:40] *** japhb joined
[05:40] *** felher joined
[05:40] *** ashleydev joined
[05:40] *** krunen joined
[05:40] *** hugme joined
[05:40] *** sunnavy joined
[05:40] *** Yappocall joined
[05:40] *** kornbluth.freenode.net sets mode: +v hugme

[05:41] *** kcwu_ joined
[05:41] *** au joined
[05:41] *** jtpalmer joined
[05:41] *** odoacre joined
[05:41] *** hanekomu joined
[05:41] *** rjbs joined
[05:41] *** Juerd joined
[05:41] *** takesako_ joined
[05:41] *** literal joined
[05:41] *** diakopter joined
[05:41] *** clkao joined
[05:41] *** simcop2387 joined
[05:41] *** benabik joined
[05:41] *** Ex joined
[05:41] *** broquaint joined
[05:41] *** telex joined
[05:41] *** BooK_ joined
[05:41] *** Timbus joined
[05:41] *** sudokode joined
[05:41] *** rurban joined
[05:41] *** Celelibi joined
[05:41] *** geekosaur joined
[05:41] *** cj joined
[05:41] *** flussence joined
[05:41] *** carlin joined
[05:41] *** pjcj joined
[05:41] *** charsbar____ joined
[05:41] *** Ulti joined
[05:41] *** dju joined
[05:41] *** cognominal_ joined
[05:41] *** orafu joined
[05:41] *** larks joined
[05:41] *** lue joined
[05:41] *** phenny joined
[05:41] *** sivoais joined
[05:41] *** aloha joined
[05:41] *** mikemol joined
[05:41] *** daniel-s joined
[05:41] *** icwiener joined
[05:41] *** kaare_ joined
[05:41] *** colomon joined
[05:41] *** sporous joined
[05:41] *** buubot_backup joined
[05:41] *** estrai_ joined
[05:41] *** arnsholt joined
[05:41] *** hoelzro|away joined
[05:41] *** HarryS joined
[05:41] *** [particle] joined
[05:41] *** jlaire joined
[05:41] *** integral joined
[05:41] *** Vlavv joined
[05:41] *** pochi joined
[05:41] *** thelazydeveloper joined
[05:41] *** masak joined
[05:41] *** SHODAN joined
[05:41] *** yeltzooo7 joined
[05:41] *** ruoso joined
[05:41] *** Seganku joined
[05:41] *** bruges_ joined
[05:41] *** _ilbot joined
[05:41] *** ggoebel joined
[05:41] *** apejens joined
[05:41] *** LoRe joined
[05:41] *** _sri joined
[05:42] *** Patterner joined
[05:42] *** xinming joined
[05:42] *** cosimo joined
[05:42] *** betterworld joined
[05:42] *** libertyprime joined
[05:42] *** ponbiki joined
[05:42] *** itz joined
[05:42] *** lestrrat joined
[05:42] *** nuba joined
[05:42] *** p6eval joined
[05:42] *** kornbluth.freenode.net sets mode: +v p6eval

[05:42] *** PZt joined
[05:42] *** BinGOs joined
[05:42] *** nebuchadnezzar joined
[05:42] *** rafl joined
[05:42] *** eternaleye joined
[05:42] *** TimToady joined
[05:42] *** avar joined
[05:42] *** [Coke] joined
[05:42] *** _jaldhar joined
[05:42] *** huf joined
[05:42] *** alvis joined
[05:42] *** Woodi joined
[05:42] *** sirrobert joined
[05:42] *** FireFly joined
[05:42] *** Pleiades` joined
[05:42] *** aindilis joined
[05:42] *** plobsing joined
[05:42] *** dalek joined
[05:42] *** mattp_ joined
[05:42] *** Bucciarati joined
[05:42] *** mjflick joined
[05:42] *** tadzik joined
[05:42] *** BlueT_ joined
[05:42] *** kornbluth.freenode.net sets mode: +v dalek

[05:43] *** HarryS left
[05:44] <moritz> \o

[05:44] *** HarryS joined
[05:45] *** daniel-s left
[05:49] *** daniel-s joined
[05:52] *** robinsmidsrod joined
[05:52] <moritz> phenny: tell raiph that he now has direct commit access to perl6/doc on github. Welcome!

[05:52] <phenny> moritz: I'll pass that on when raiph is around.

[05:58] <adu> \p

[05:58] <adu> o/

[06:00] *** daniel-s left
[06:00] *** daniel-s joined
[06:08] *** JimmyZ_ joined
[06:08] <JimmyZ_> good afternoon

[06:09] <JimmyZ_> clear

[06:17] <moritz> good clear afternon, JimmyZ_ 

[06:18] <dalek> doc/type-graph: 28f5a6c | (Geoffrey Broadwell)++ | type-graph.txt:

[06:18] <dalek> doc/type-graph: First snapshot: human- and computer-parseable map of Perl6's type graph

[06:18] <dalek> doc/type-graph: review: https://github.com/perl6/doc/commit/28f5a6c8e5

[06:19] <japhb> *yawn*

[06:19] <japhb> Good *, all

[06:20] <moritz> japhb: my approach would have been to parse the graph out of the .pod files

[06:25] <moritz> but yours i probably easier to get started with

[06:27] <JimmyZ_> \o

[06:31] <japhb> moritz, I thought about that, but figured A) this method would likely be more complete for a while yet, and B) after I finish cleaning the raw data, the next stage of my plan may require a fair amount of hand-tuning anyway.

[06:33] <japhb> I plan to feed the massaged data to graphviz to produce not just an overall visualization of the type graph, but also type-specific ones that show just the relevant parts, so the mini-map images can be inserted into the HTML docs.

[06:34] <Tene> very nice

[06:34] <japhb> The hand-tuning will come in the form of layout hints, node coloring, etc. to make it more intuitive.

[06:35] <japhb> Tene, Glad to know my idea seems sane to someone *else*.  ;-)

[06:37] <japhb> BTW, anyone interested in reviewing/sanity-checking the current snapshot data is most welcome to do so.  :-)

[06:38] *** mucker left
[06:42] <moritz> at some point we need the data in htmlify

[06:43] *** birdwindupbird joined
[06:43] <moritz> so that we can generate HTML files with methods from superclasses and roles

[06:45] *** kaare_ left
[06:47] *** muixirt joined
[06:47] <muixirt> good morning

[06:50] <japhb> moritz, agreed

[06:50] <japhb> OK, time for me to trundle off to slumber.

[06:50] <japhb> Night, all.

[06:50] <moritz> night japhb 

[06:50] <japhb> &

[07:00] *** SamuraiJack joined
[07:04] *** GlitchMr joined
[07:10] *** DarthGandalf left
[07:11] *** DarthGandalf joined
[07:22] *** thelazydeveloper left
[07:49] *** JimmyZ_ left
[08:07] *** MayDaniel joined
[08:11] *** mucker joined
[08:26] *** birdwindupbird left
[08:26] *** birdwind1pbird joined
[08:26] *** adu left
[08:42] *** birdwind1pbird left
[08:49] <dalek> doc: 28f5a6c | (Geoffrey Broadwell)++ | type-graph.txt:

[08:49] <dalek> doc: First snapshot: human- and computer-parseable map of Perl6's type graph

[08:49] <dalek> doc: review: https://github.com/perl6/doc/commit/28f5a6c8e5

[08:49] <dalek> doc: e1eaa4c | moritz++ | / (2 files):

[08:49] <dalek> doc: add Perl6::TypeGraph, wihch reads type-graph.txt and constructs a -- you have already guessed it -- type graph

[08:49] <dalek> doc: review: https://github.com/perl6/doc/commit/e1eaa4c5cc

[08:50] <GlitchMr> perl6: say AST.new ~~ Mu

[08:50] <p6eval> niecza v19-13-g442e075: OUTPUT«===SORRY!===␤␤Undeclared name:␤        'AST' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1402 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_unit @ 37) ␤  at /home/p6…

[08:50] <p6eval> ..rakudo 5b56cf: OUTPUT«True␤»

[08:51] <GlitchMr> Why "AST" doesn't expand anything?

[08:52] *** JimmyZ_ joined
[08:55] <moritz> what should it expand to?

[08:55] <GlitchMr> I don't know, but it looks that AST is Mu

[08:55] <GlitchMr> But perhaps it's because rakudo

[08:56] <moritz> well, any type is Mu

[08:56] <GlitchMr> It also seems that AST is Any

[08:56] <moritz> there#s no contradiction there, since Any ~~ Mu

[08:57] <moritz> s/'#'/'/

[08:58] <GlitchMr> perl6: /[]/

[08:58] <p6eval> rakudo 5b56cf: OUTPUT«===SORRY!===␤Unrecognized regex metacharacter ] (must be quoted to match literally) at line 2, near "/"␤»

[08:58] <p6eval> ..niecza v19-13-g442e075: OUTPUT«===SORRY!===␤␤Null pattern not allowed at /tmp/3DR3cs5YlW line 1:␤------> /[⏏]/␤␤Parse failed␤␤»

[08:59] <GlitchMr> std: /[]/

[08:59] <p6eval> std 3b49ac8: OUTPUT«===SORRY!===␤Null pattern not allowed at /tmp/3nhfgzahuu line 1:␤------> /[⏏]/␤    expecting regex atom␤Parse failed␤FAILED 00:00 41m␤»

[08:59] <GlitchMr> I guess that rakudo could have better error message, but whatever

[08:59] <moritz> known NYI

[09:01] <masak> lol good morning, #perl6

[09:01] <masak> well, mid-antenoon.

[09:01] <moritz> lolitsmasak!

[09:02] * moritz has waffels with bjørnebær for breakfast

[09:04] <masak> whoa.

[09:05] * masak bolts to the store to buy björnbär

[09:08] *** colomon left
[09:11] <GlitchMr> sub postfix:<¶>($a) { "$a\n" }

[09:11] <GlitchMr> I have feeling I abuse mutable Perl 6 grammar

[09:13] <GlitchMr> But I guess it's not as bad as infix:[] thing I've done once

[09:22] <moritz> masak: visit me, and we'll make waffles together. And I'm sure we'll find some tasty fruits or berries too :-)

[09:23] <moritz> and whipped cream, or vanilla ice cream

[09:23] *** MayDaniel left
[09:25] * moritz adds free wifi and macro discussions to sweaten the deal

[09:27] *** JimmyZ_ left
[09:28] * moritz is a bit proud of https://github.com/perl6/doc/commit/e1eaa4c5cc6a2cab24a4d656419cdda8243d1f63 -- not much code to nice effect

[09:28] *** fgomez left
[09:34] <moritz> next step: MRO computation

[09:34] *** sergot joined
[09:34] <sergot> hi o/

[09:35] <moritz> \o sergot 

[09:43] *** fridim_ joined
[09:44] *** MayDaniel joined
[09:48] *** kaare_ joined
[10:01] <jnthn> ohhai o/

[10:10] <jnthn> moritz: (MRO) there's an NQP implementation of C3 handy

[10:10] <jnthn> moritz: src/Perl6/Metamodel/C3MRO.pm

[10:10] <moritz> jnthn: yes, I'm looking at that right now

[10:10] <jnthn> ah :)

[10:11] *** cognominal_ left
[10:11] *** cognominal_ joined
[10:26] *** whiteknight joined
[10:27] *** whiteknight is now known as Guest16694

[10:27] <moritz> r: for [1, 2], [3, 4] -> @a { .say for @a }

[10:27] <p6eval> rakudo 5b56cf: OUTPUT«1␤2␤3␤4␤»

[10:27] *** zby_home_ joined
[10:30] <moritz> r: my @b = [1, 2], [3, 4]; for @b -> @a { .say for @a unless @a =:= @b[0] }

[10:30] <p6eval> rakudo 5b56cf: OUTPUT«===SORRY!===␤Missing block␤at /tmp/gMMtwpPqyx:1␤»

[10:31] <moritz> r: my @b = [1, 2], [3, 4]; for @b -> @a { unless @a =:= @b[0] { .say for @a } }

[10:31] <p6eval> rakudo 5b56cf: OUTPUT«1␤2␤3␤4␤»

[10:31] <moritz> hm, that part doesn't work that easily in p6, it seems

[10:34] *** pupoque joined
[10:39] *** tokuhiro_ joined
[10:46] *** pmurias joined
[10:47] <jnthn> r: my @b = [1, 2], [3, 4]; for @b -> $a { unless $a =:= @b[0] { .say for @a } }

[10:47] <p6eval> rakudo 5b56cf: OUTPUT«===SORRY!===␤Variable @a is not declared␤at /tmp/f2Omg_LZ8O:1␤»

[10:47] <jnthn> r: my @b = [1, 2], [3, 4]; for @b -> $a { unless $a =:= @b[0] { .say for @$a } }

[10:47] <p6eval> rakudo 5b56cf: OUTPUT«1␤2␤3␤4␤»

[10:47] <jnthn> r: my @b = [1, 2], [3, 4]; for @b -> $a { unless $a === @b[0] { .say for @$a } }

[10:47] <p6eval> rakudo 5b56cf: OUTPUT«3␤4␤»

[10:48] <moritz> r: say Str.^mro

[10:48] <p6eval> rakudo 5b56cf: OUTPUT«Str() Cool() Any() Mu()␤»

[10:50] <moritz> r: say Match.^mro

[10:50] <p6eval> rakudo 5b56cf: OUTPUT«Match() Capture() Cool() Any() Mu()␤»

[10:51] *** cognominal__ joined
[10:52] <dalek> doc: b81241b | moritz++ | / (2 files):

[10:52] <dalek> doc: port C3 linearization from nqp

[10:52] <dalek> doc: review: https://github.com/perl6/doc/commit/b81241b119

[10:53] <moritz> Match seems to be about the only class in core that uses MI

[10:54] *** cognominal_ left
[10:54] <moritz> so, not many test cases

[10:55] *** xinming left
[10:55] *** xinming joined
[10:59] <dalek> doc: 791b30a | moritz++ | lib/Perl6/Type (2 files):

[10:59] <dalek> doc: move Type to a separate file, re-style it as Perl6::Type

[10:59] <dalek> doc: review: https://github.com/perl6/doc/commit/791b30a0f1

[11:23] *** JimmyZ joined
[11:24] <JimmyZ> what does TypeGraph do ?

[11:25] <moritz> JimmyZ: computes method resolution order for classes

[11:26] <moritz> JimmyZ: the goal is to create HTML pages for a class which contains method from superclasses and roles

[11:26] <JimmyZ> got it, that's great

[11:27] <moritz> it's going be some work :/

[11:28] <jnthn> moritz++ # working on things that need some work

[11:29] <dalek> nqp/toqast: f6a5c44 | jnthn++ | src/QAST/Compiler.nqp:

[11:29] <dalek> nqp/toqast: Fix a couple of small code-gen bugs.

[11:29] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/f6a5c44d55

[11:29] <dalek> nqp/toqast: 9133c44 | jnthn++ | src/QAST/Compiler.nqp:

[11:29] <dalek> nqp/toqast: Fix to unicode string handling.

[11:29] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/9133c4425a

[11:29] <moritz> windows-- just ejected a CD I was copying from (and I didn't tell it to eject it), and then complained that the device isn't ready for reading

[11:29] <jnthn> o.O

[11:29] <jnthn> fail

[11:30] *** crab2313 joined
[11:31] *** crab2313 left
[11:32] <moritz> oh "good" old windows XP

[11:32] *** crab2313 joined
[11:32] <moritz> if a windows explorer window dies, the window manager itself dies

[11:35] *** mucker left
[11:36] *** PacoAir joined
[11:43] *** icwiener left
[11:47] *** seldon joined
[11:48] *** GlitchMr left
[11:57] *** crab2313 left
[12:02] *** tokuhiro_ left
[12:08] *** MayDaniel left
[12:16] <masak> of course. it's "integrated", it's good for you.

[12:17] <jnthn> Of course, who'd want to work with a system where everything was derivative...

[12:17] <benabik> My favorite part was always that the graphics toolkit was part of the kernel, so bad calls could bring down the entire system.

[12:19] *** aindilis left
[12:23] <dalek> nqp/toqast: e106957 | jnthn++ | src/QAST/Compiler.nqp:

[12:23] <dalek> nqp/toqast: Restore capture_lex on block entry.

[12:23] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/e106957f4b

[12:23] <dalek> rakudo/toqast: b2e068f | jnthn++ | src/core/Regex.pm:

[12:23] <dalek> rakudo/toqast: Fix a pirop sig that led to invalid code gen.

[12:23] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/b2e068f972

[12:23] <dalek> rakudo/toqast: cb9e7de | jnthn++ | src/QPerl6/Actions.pm:

[12:23] <dalek> rakudo/toqast: Fix rather over-eager whatever currying (it was currying stuff like $a ?? * !! $b).

[12:23] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/cb9e7de8e7

[12:23] <jnthn> Seems I now have a QAST-compiled CORE.setting that vaguely works.

[12:25] <masak> \o/

[12:25] * masak pulls recent stuffs and rebuilds

[12:25] <jnthn> Well, you don't get that without a lot of knowing what to do.

[12:25] <masak> I just want to re-run the spectests.

[12:25] <masak> I plan to address the failing macros tests now.

[12:26] <jnthn> Right, but they won't run with the QAST-compiled CORE.setting yet

[12:26] <jnthn> Which is fine, just saying. :)

[12:28] <masak> rightright

[12:29] *** aindilis joined
[12:29] <masak> aindilis: hi.

[12:30] <masak> oh, that was a re-join.

[12:35] <jnthn> Spectesting with the QAST-compiled CORE.setting looks fairly good. A few issues.

[12:36] <moritz> $ ack '\bPAST(?!::QAST)' src/QPerl6/|wc -l

[12:36] <moritz> 64

[12:38] <masak> kudos for even remembering the look-ahead syntax of Perl 5 regexes...

[12:38] <masak> I never do. have to 'perldoc perlre' *every* time.

[12:38] <jnthn> moritz: Note that the bottom of Actions has a bunch of PAST::Node usages that stay for the time being too.

[12:38] <jnthn> (the regex section)

[12:39] <moritz> masak: negative look-ahead is the only one I remember reliably

[12:40] <moritz> oh, and it seems much of that is commented out

[12:40] <jnthn> wtf, chmod hangs :)

[12:40] <moritz> $ ack '^[^#]*\bPAST(?!::QAST)' src/QPerl6/|wc -l

[12:40] <moritz> 33

[12:41] <jnthn> ah, exception related...

[12:44] *** drbean left
[12:44] *** MayDaniel joined
[12:44] *** drbean joined
[12:46] <timotimo> how hard will it be for rakudo to use type information/native types to run "as fast as C"? or how long will i have to wait until thath appens?

[12:46] * masak .oO( mnemonic for negative look-ahead in Perl 5: '?!' is like the end of 'wtf?!', what you'd say if you found the thing there )

[12:47] <masak> timotimo: question is so vague as to be almost meaningless.

[12:47] <timotimo> that's what i feared :|

[12:47] <masak> timotimo: http://www.perl.com/pub/2001/06/27/ctoperl.html

[12:47] *** MayDaniel left
[12:48] <masak> funnily enough, that article ends by referring to the Perl 6 design.

[12:50] <jnthn> timotimo: It's difficult from many angles. Using native type info to generate better code is possible; we do that to a limited extent already in Rakudo. That's the kind of code that a JIT compiler can actually do quite a bit with, but Parrot has no JIT, so it'd seem being on a VM that has one is a pre-req for starting to get that sorta code faster. Even then I suspect it'd not be "as fast as C".

[12:51] <masak> Occaml people sometimes boast that their code is faster than C because they do so much good type inference.

[12:52] <timotimo> my int @a is dim(1000); - reminds me of basic :)

[12:53] *** pupoque left
[12:53] <timotimo> hm, i suppose i'm spoiled by pypy in this regard, which comes with a pretty impressive jit

[12:53] <JimmyZ> timotimo: Parrot has a plan to get a jit too :)

[12:54] <timotimo> JimmyZ: do you have a guess how long it'll take until the first bits of jitted code would run properly?

[12:56] <JimmyZ> timotimo: I'm sure It'll take a long time until somebodies continue coding to it

[12:57] <timotimo> :|

[13:02] <timotimo> is thorough type analysis of perl6 programs feasible?

[13:03] <timotimo> i've looked at friends who do coq and agda with a bit of envy. i don't understand much of it, but would i be able to do similar checking of type constraints etc. in perl6?

[13:05] <timotimo> i don't even know if what i'm asking makes any sense

[13:08] <jnthn> Perl 6 is gradually typed, meaning that the compiler will do what it can with the information you give it. It may be able to make extra inferences also.

[13:08] <moritz> but there are certain type errors it can (almost?) never complain about

[13:09] <moritz> like  sub f(MyT $x) { $x.mymethod ]

[13:09] <moritz> erm

[13:09] <moritz> like  sub f(MyT $x) { $x.mymethod }

[13:09] <moritz> is valid even if MyT doesn't define a 'mymethod'

[13:09] <timotimo> right, because you could put a subtype in there

[13:09] <timotimo> or maybe an instance got a role on it

[13:09] <moritz> correct

[13:10] <jnthn> Yeah, method dispatch is very late bound.

[13:10] <moritz> though one might toy with the idea of a pragma that makes that warn at compile time

[13:10] <timotimo> i'd very much like such a thing

[13:11] <timotimo> i'll probably have to spend more time unit testing anyway, but i think it would be a great help

[13:11] <timotimo> if my interpreter (or any analysis program) explodes in my face rather than my code exploding in the end user's face, i consider that a win

[13:13] <moritz> well, Perl 6 is better suited for static analysis than many other dynamic languagues, but it's still a dynamic-ish language

[13:13] <moritz> r: sub f(Int $x) { }; my Str $a; f($a)

[13:13] <p6eval> rakudo 5b56cf: OUTPUT«===SORRY!===␤CHECK FAILED:␤Calling 'f' will never work with argument types (Str) (line 1)␤    Expected: :(Int $x)␤»

[13:18] *** JimmyZ_ joined
[13:20] *** JimmyZ left
[13:20] *** JimmyZ_ is now known as JimmyZ

[13:20] *** fridim_ left
[13:31] <masak> r: macro foo { my $x = "OH HAI"; quasi { $x } }; my $result = foo; say $result

[13:31] <p6eval> rakudo 5b56cf: OUTPUT«OH HAI␤»

[13:31] <masak> jnthn: the above is what fails on the toqast branch currently.

[13:32] <masak> (hm, we don't have toqast wired up to p6eval yet, do we? is it worth bothering to do that, or is the merge very soon?)

[13:32] <jnthn> Probably a week or so away.

[13:32] <masak> might be worth it, then.

[13:32] <masak> I could do it if moritz++ or someone reminds me where stuff is.

[13:32] <jnthn> Well, to me that's "soon" :)

[13:32] *** thelazydeveloper joined
[13:32] <masak> I meant like tomorrow or something.

[13:33] <masak> jnthn: getting 'Cannot assign a non-Perl 6 value to a Perl 6 container'. assuming that's to $result, because to $x seems harmless.

[13:33] <masak> r: macro foo { say 'before'; my $x = "OH HAI"; say 'after'; quasi { $x } }; my $result = foo; say $result

[13:33] <p6eval> rakudo 5b56cf: OUTPUT«before␤after␤OH HAI␤»

[13:33] <masak> er :)

[13:34] <masak> oh yes, of course.

[13:34] <masak> 'after' in the test file (t/spec/S06-macros/macros-d1.rakudo) happens long before the tests even run.

[13:34] <masak> and the tests run up until number 6.

[13:34] <moritz> masak: on feather1, you need to run 'su - p6eval' to get into the right user account, then set up a directory there that builds rakudo-on-toqast

[13:35] <moritz> (and you need root privs to do that,, which I can give you, if you don't have them already)

[13:38] <masak> jnthn: since this worked before toqast, I'm assuming the error is to be found in the generated QAST. am I thinking right?

[13:39] <jnthn> masak: That or a mistake in the bits of Actions.pm that related to macro/AST handling.

[13:39] <jnthn> s/AST/quasi/

[13:40] <masak> oh, ok. I'll start looking there, then.

[13:40] <jnthn> masak: There's a thingy in World too that does those lexical fixups

[13:40] <masak> ah, yes.

[13:41] <dalek> rakudo/toqast: e242a9a | jnthn++ | src/QPerl6/Actions.pm:

[13:41] <dalek> rakudo/toqast: Re-implement handling of exceptions thrown inside exception handlers.

[13:41] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/e242a9a571

[13:42] <jnthn> OK, it seems make spectest now doesn't hang when we build CORE.setting using QAST. So I think it's time to eliminate qperl6.

[13:42] <masak> yay

[13:49] <moritz> masak: remember --ll-exception

[13:49] <moritz> might or might not be useful for you

[13:50] *** JimmyZ left
[13:52] *** JimmyZ_ joined
[13:58] <moritz> nqp::isnull(foo) returns 1

[13:59] *** JimmyZ__ joined
[13:59] *** JimmyZ_ left
[14:01] <masak> moritz: thanks for the reminder.

[14:03] *** Ex left
[14:03] <dalek> rakudo/toqast: feda23a | jnthn++ | / (17 files):

[14:03] <dalek> rakudo/toqast: Fold QPerl6::* back into Perl6::*, thus eliminating qperl6. This means that the perl6 that is now built is using QAST, as is the setting, test run, etc.

[14:03] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/feda23a2c3

[14:06] <jnthn> Now to merge latest nom changes into toqast. :)

[14:07] <moritz> is the branch now far enough that the remaining test failures are due to missing new patches?

[14:07] *** fgomez joined
[14:08] <moritz> jnthn: I hope you know about git-rerere

[14:08] <moritz> git config --global rerere.enabled 1

[14:08] <moritz> and then all your merge conflict resolutions will be recorded automatically

[14:09] <moritz> and replayed when you need to do the same merge again

[14:09] *** fgomez left
[14:09] *** fgomez joined
[14:11] <moritz> make: *** No rule to make target `src/Perl6/Ops.pm', needed by `blib/Perl6/Ops.pbc'.  Stop

[14:12] *** Chillance joined
[14:12] <jnthn> Did you re-configure?

[14:12] <jnthn> Or did I screw it up somehow?

[14:13] * jnthn is a little surprised it would fail in such a way elsewhere and work for him...

[14:13] <jnthn> moritz: Hm, I didn't know about that...though only two files had conflicts.

[14:13] <moritz> jnthn: you just didn't commit src/Perl6/Ops.pm I guess

[14:13] <moritz> erm, git add I mean

[14:13] <jnthn> oh...

[14:14] <moritz> thought the build doesn't care what's under version control

[14:14] <moritz> +though

[14:14] <jnthn> hmm...so why it doesn't show up as missing in my git status :/

[14:14] <jnthn> s/missing/untracked/

[14:14] <moritz> so it succeed on your machine

[14:14] <jnthn> yeah, makes sense.

[14:15] <moritz> over-eager gitignore maybe?

[14:19] *** nightlord joined
[14:19] <jnthn> Hmm, I tossed some stuff from it that seemed redundant/possible, but no help

[14:20] <moritz> the Perl6/*

[14:20] <moritz> line looks suspicious to me

[14:20] <jnthn> Yeah

[14:20] <jnthn> I removed that.

[14:21] * jnthn tests the merge

[14:27] <jnthn> Hmm. Just merging latest in gets 274 more tests

[14:27] * masak learns about the "${home}" syntax in Perl 5 -- again

[14:27] <masak> that feels so wrong, but I can see the use for it :)

[14:28] <dalek> Heuristic branch merge: pushed 87 commits to rakudo/toqast by jnthn

[14:28] <moritz> eval: my $ x = 3; $x

[14:28] <buubot_backup> moritz: 3

[14:28] <moritz> eval: my $x = 3; $ x

[14:28] <buubot_backup> moritz: 3

[14:28] <moritz> eval: my $x = 3; "$ x"

[14:28] <buubot_backup> moritz: 3

[14:28] <moritz> eval: my $x = 3; "$ {x}"

[14:28] <buubot_backup> moritz: 3

[14:29] <moritz> eval: my $x = 3; "$ {x }"

[14:29] <buubot_backup> moritz: 3

[14:29] <moritz> eval: my $x = 3; "$ { x }"

[14:29] <buubot_backup> moritz: 3

[14:29] <timotimo> eval is perl5?

[14:29] <buubot_backup> timotimo: ERROR: Search pattern not terminated or ternary operator parsed as search pattern at (eval 20) line 1. 

[14:29] <timotimo> heh. right.

[14:29] <moritz> timotimo: yes

[14:30] <jnthn> moritz: Should have the missing file now.

[14:31] <muixirt> eval: say (1+2)/3

[14:31] <buubot_backup> muixirt: ERROR: Undefined subroutine &main::say called at (eval 20) line 1. 

[14:31] <muixirt> eval: print (1+2)/3

[14:31] <buubot_backup> muixirt: 30.333333333333333

[14:32] <timotimo> huh. how does that work?

[14:32] <muixirt> eval: (print (1+2))/3

[14:32] <buubot_backup> muixirt: 30.333333333333333

[14:33] <moritz> timotimo: the 0.3333333333 is the return value of the expression

[14:33] <moritz> print returns 1

[14:36] <timotimo> oooh, that's amusing

[14:38] <moritz> first test failure in toqast is t/spec/S02-types/native.t

[14:38] <moritz> that's much better than before

[14:39] <jnthn> Yeah

[14:39] <jnthn> The overall failure list is fairly small by now.

[14:40] <jnthn> There's some triage to go yet.

[14:40] <jnthn> But it's not a crazy amount.

[14:40] <masak> (not crazy)++

[14:43] *** benabik left
[14:50] <masak> jnthn: will toqast be 'make install'able later today? I might wait setting p6eval up until then. easier; less changing the build scripts.

[14:51] <jnthn> masak: Should be already.

[14:52] <jnthn> masak: oh, maybe needs an addition to the Makefile to copy the new Ops.pbc

[14:52] <jnthn> I'd be surprised if it needs any more than that.

[14:55] <masak> yay

[14:56] <masak> this always amused me:

[14:56] <masak> eval: print 04.5

[14:56] <buubot_backup> masak: 451

[14:56] <masak> eval: 04.5

[14:56] <buubot_backup> masak: 45

[14:57] <masak> eval: 044.5

[14:57] <buubot_backup> masak: 365

[14:57] <masak> now *that*'s high-end crazy :)

[14:57] *** GlitchMr joined
[14:57] <masak> nr: say 0o44.5

[14:57] <p6eval> niecza v19-13-g442e075: OUTPUT«===SORRY!===␤␤Two terms in a row at /tmp/o_PpuKJVeg line 1:␤------> say 0o44⏏.5␤␤Parse failed␤␤»

[14:58] <p6eval> ..rakudo 5b56cf: OUTPUT«===SORRY!===␤Confused␤at /tmp/r5m45JgVSc:1␤»

[14:58] <masak> std: 0o44.5

[14:58] <p6eval> std 3b49ac8: OUTPUT«===SORRY!===␤Confused at /tmp/byXo8hORkm line 1:␤------> 0o44.⏏5␤    expecting any of:␤        dotty method or postfix␤        postcircumfix␤  postfix_prefix_meta_operator␤   postop␤Parse failed␤FAILED 00:00 41m␤»

[14:58] <masak> fairy nuff.

[14:58] <masak> octal literals are only for integers.

[14:58] <masak> (and that's what happens in the Perl 5 case, too. guess what '.' also means in Perl 5.)

[14:58] * masak grins

[14:58] <timotimo> concatenation?

[14:59] <timotimo> if anyone ever uses that in production, wow.

[14:59] <masak> right.

[14:59] <dalek> rakudo/toqast: db138e7 | jnthn++ | src/core/Mu.pm:

[14:59] <dalek> rakudo/toqast: Fix a proto's signature.

[14:59] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/db138e78cf

[15:00] <dalek> nqp/toqast: ca9306c | jnthn++ | src/QAST/Operations.nqp:

[15:00] <dalek> nqp/toqast: Fix 2-arg rindex, thus fixing the rindex test failures in Rakudo.

[15:00] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/ca9306c7ff

[15:02] *** GlitchMr left
[15:14] *** SamuraiJack left
[15:14] *** nightlord left
[15:16] *** SamuraiJack joined
[15:19] <felher> nom: .say for (<a b> Z <1 2>)

[15:19] <p6eval> rakudo 5b56cf: OUTPUT«a␤1␤b␤2␤»

[15:19] <felher> nom: .say for (<a b> Z <1 2>).tree

[15:19] <p6eval> rakudo 5b56cf: OUTPUT«Not enough positional parameters passed; got 1 but expected between 3 and 4␤  in method new at src/gen/CORE.setting:5022␤  in method tree at src/gen/CORE.setting:5278␤  in block <anon> at /tmp/h_PuKBUYXL:1␤␤»

[15:19] <felher> nom: .say for (<a b> Z <1 2>).lol

[15:19] <p6eval> rakudo 5b56cf: OUTPUT«ListIter.new()␤»

[15:20] <felher> How do i get 'a' and '1' the first iteration and 'b' and '2' the second iteration? It seems i keep forgetting that :/

[15:21] <moritz> r: for <a b> Z <1 2> -> $a, $b { say "$a, $b" }

[15:21] <p6eval> rakudo 5b56cf: OUTPUT«a, 1␤b, 2␤»

[15:25] *** JimmyZ__ left
[15:28] <felher> moritz: yeah, i know that. But i want them in one variable. So that i can pass them to other functions via |$var, and not via $var1, $var2, $var3, $var4.

[15:28] <dalek> nqp/toqast: bfbf20a | jnthn++ | src/QRegex/NFA.nqp:

[15:28] <dalek> nqp/toqast: Get NFA builder to recognize/handler qastnode.

[15:28] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/bfbf20ac43

[15:28] <jnthn> walk &

[15:29] *** Ex joined
[15:29] <moritz> r: .say for (<a b> Z <1 2>).tree

[15:29] <p6eval> rakudo 5b56cf: OUTPUT«Not enough positional parameters passed; got 1 but expected between 3 and 4␤  in method new at src/gen/CORE.setting:5022␤  in method tree at src/gen/CORE.setting:5278␤  in block <anon> at /tmp/PSfccntYeY:1␤␤»

[15:30] *** benabik joined
[15:30] <moritz> that looks like a regression in .tree

[15:33] <moritz> still no accepted perl 6 talks at YAPC::EU :(

[15:34] <felher> moritz: okay. I'll wait until that is fixed, than. Thanks :)

[15:44] <felher> Well, maybe i can fix it myself instead of waiting for someone to fix it. But wouldn't have too much faith in that. :)

[15:45] *** sander_ joined
[15:46] <sander_> hi everybody

[15:46] <felher> o/

[15:46] <pmurias> moritz: the accepted list is not yet final?

[15:47] * pmurias doesn't imply it is

[15:47] <moritz> pmurias: well, http://act.yapc.eu/ye2012/news/881 sounds like the accepted list would be final by second-to-last friday

[15:53] <moritz> felher: spectesting a fix now

[15:54] <sander_> compiled the recent version of rakudo star. Now I can run scripts only when I pass the absolute path to perl6, otherwise it says "Error while reading from file: Unable to open filehandle from path '$ARG'"

[15:54] <sander_> i.e. the absolute path of the script

[15:55] <sander_> even perl6 ./numerize.p6 doesn't work

[15:55] <moritz> sander_: did you run 'make install' ?

[15:56] <felher> moritz++ :)

[15:57] <sander_> yes, but then I moved the install dir to another location and created a symlink from orig. in-memory /tmp location to the new

[15:57] <sander_> guess I have to compile anew, right?

[15:58] <moritz> sander_: you might have to, rakudo and parrot aren't relocatable

[15:59] <moritz> but you can give a --prefix= at configure-time

[15:59] <sander_> that was my idea too but thought a symlink will do

[15:59] <felher> moritz: oh, the problem is $flattens, which got introduced earlier this month, right?

[16:00] *** crab2313 joined
[16:00] <moritz> felher: no, the problem was that MapIter.new now wants positional arguments, used to be named args

[16:00] <felher> moritz: ah, okay. :)

[16:00] <moritz> felher: i guess pmichaud++'s last list refactoring changed that

[16:00] <moritz> and that we didn't have enough test coverage to catch the .tree case

[16:01] <dalek> rakudo/nom: d0dc2d3 | moritz++ | src/core/IO/Socket/INET.pm:

[16:01] <dalek> rakudo/nom: explicitly set encoding on sockets

[16:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d0dc2d33d0

[16:01] <dalek> rakudo/nom: e09fbe6 | moritz++ | src/core/IO/Socket/INET.pm:

[16:01] <dalek> rakudo/nom: Merge remote branch 'remotes/origin/parrot-iocleanup1' into nom

[16:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e09fbe6870

[16:01] <dalek> rakudo/nom: cd31947 | moritz++ | src/core/List.pm:

[16:01] <dalek> rakudo/nom: fix List.tree

[16:01] <dalek> rakudo/nom: 

[16:01] <dalek> rakudo/nom: it got broken by the last API change of MapIter.new

[16:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cd31947243

[16:01] <moritz> oops, I didn't mean to push that all

[16:02] <dalek> rakudo/nom: 6db12d6 | moritz++ | src/core/IO/Socket/INET.pm:

[16:02] <dalek> rakudo/nom: Revert "Merge remote branch 'remotes/origin/parrot-iocleanup1' into nom"

[16:02] <dalek> rakudo/nom: 

[16:02] <dalek> rakudo/nom: This reverts commit e09fbe68707707004d1111dba7b0b6fb9e100541, reversing

[16:02] <dalek> rakudo/nom: changes made to 5b56cfcf9286e70b9a77a73369b80ad98ad10786.

[16:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6db12d6e97

[16:02] <moritz> moritz--

[16:05] *** GlitchMr joined
[16:05] *** fridim_ joined
[16:07] <moritz> felher: fixed

[16:07] <felher> \o/ moritz: thanks :)

[16:08] <dalek> roast: eec04b7 | moritz++ | S02-lists/tree.t:

[16:08] <dalek> roast: test iteration for parcel-of-parcel.tree

[16:08] <dalek> roast: review: https://github.com/perl6/roast/commit/eec04b7a6c

[16:10] <felher> moritz: why did you only fix the first two tree methods? The third seems to still use named arguments instead of positionals?

[16:11] <moritz> felher: oh, I didn't spot that

[16:14] <felher> :)

[16:23] *** itz left
[16:26] *** MayDaniel_ joined
[16:27] <sander_> moritz: compiled rakudo star anew (having deleted really everything prior to that) -- error persists

[16:35] *** vmspb joined
[16:36] <sander_> unless I absolutize either the path to perl6 interpreter or to the script to be run I get the following error

[16:36] <sander_> Error while reading from file: Unable to open filehandle from path 'numerize.p6' current instr.: 'nqp;HLL;Compiler;_block2002' pc 35779 (src/stage2/gen/NQPHLL.pir:15079) (src/stage2/gen/NQPHLL.pm:1438)

[16:36] <sander_> [...]

[16:41] *** Guest16694 left
[16:41] <sander_> my 'perl6' command was

[16:41] <sander_> #!/bin/sh

[16:41] *** whiteknight joined
[16:42] <sander_> cd ~/D/programing/rakudo-star/install/bin

[16:42] *** whiteknight is now known as Guest62034

[16:42] <sander_> ./perl $@

[16:42] <masak> './perl6', surely?

[16:42] *** fridim_ left
[16:43] <sander_> yes, masak, typo

[16:43] <sander_> but now I changed the sh script to

[16:43] <sander_> ~/D/programing/rakudo-star/install/bin/perl6 $@

[16:43] <sander_> and now it works

[16:45] <sander_> so I wonder if my perl6 interpreter, i.e. the very ELF binary, has problems with being started from its location

[16:55] <moritz> sander_: no

[16:55] <moritz> sander_: the problem is that if you 'cd' in the script, then the relative paths to the script stops working

[16:59] *** proller_ joined
[16:59] *** proller joined
[16:59] <sander_> oh

[16:59] *** proller left
[17:02] *** xinming left
[17:03] *** xinming joined
[17:03] <dalek> rakudo/nom: 3ac8c77 | moritz++ | src/core/List.pm:

[17:03] <dalek> rakudo/nom: fix another misuse of MapIter.new, felher++

[17:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3ac8c77fd7

[17:04] <felher> :)

[17:18] <moritz> .oO( it would be a fehler to spell felher fehler )

[17:18] <moritz> phenny: de en "fehler"?

[17:18] <phenny> moritz: "error" (de to en, translate.google.com)

[17:19] <felher> moritz: indeed :)

[17:19] <masak> FEHL.

[17:23] <sander_> moritz: thx, what a noob mistake

[17:25] <sander_> n8 or tschüss ...

[17:26] *** sander_ left
[17:26] *** rurban left
[17:27] *** rurban joined
[17:27] <masak> heh, 'n8'.

[17:28] <masak> nr: sub german_for($number) { <null eins zwei drei vier fünf sechs sieben acht neun zehn>[$number] }; say "n", german_for 8

[17:28] <p6eval> rakudo 3ac8c7, niecza v19-13-g442e075: OUTPUT«nacht␤»

[17:31] <moritz> except that it's 'zwo' instead of 'zwei' where I come from :-)

[17:31] <masak> I remember.

[17:33] *** proller_ left
[17:49] <dalek> rakudo/toqast: bec9a8e | jnthn++ | tools/build/Makefile.in:

[17:49] <dalek> rakudo/toqast: Install the new Perl6::Ops PBC.

[17:49] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/bec9a8e269

[17:51] *** quietfanatic joined
[17:55] <japhb> moritz, thank you for all the type graph work!

[17:55] <japhb> And you should be proud ... you whipped that out pretty darn quickly, and it's still (quite) good code.  :-)

[17:56] * japhb has so far absorbed the parser, and is about to start reading the MRO code

[17:57] <masak> what "type graph work" is this? it sounds interesting.

[18:00] <japhb> masak, see commits in perl6/doc over the last half day or so.

[18:00] <japhb> moritz++ # oops, forgot.  ;-)

[18:00] *** rurban left
[18:02] <masak> oh, ok.

[18:02] *** rurban joined
[18:08] <moritz> I think the next step is a topo sort 

[18:09] <moritz> so that traversal of the .pod files can be done in Mu-first order

[18:10] *** snearch joined
[18:10] <moritz> masak, that's your speciality, no? :-)

[18:10] <masak> 呵呵

[18:11] * masak .oO( "ask him over there, he's the one knows how to do it." )

[18:12] <jnthn> moritz: If you know the MRO length of all the things you can always cheat and just do them in increasing order of MRO length... :)

[18:12] <jnthn> iiuc what you're dong, anyway

[18:12] <jnthn> *doing

[18:13] <moritz> jnthn: I'm not sure about the MRO for roles

[18:14] <masak> here's how you do a topo sort: DFS down the graph. as you *go back up*, the first time you see every node, emit it.

[18:14] <moritz> so, post-order traversal

[18:15] <quietfanatic> If you have to do that every time you dispatch, you're gonna get slow code.

[18:15] <tadzik> hello #perl6

[18:15] * quietfanatic is jumping into a conversation he knows nothing about again

[18:15] <jnthn> moritz: roles don't show up in the MRO because we don't visit them during method resolution :)

[18:16] <moritz> jnthn: yes, but I need to sort them too

[18:16] <jnthn> quietfanatic: Relax, the conversation is about p6doc :)

[18:16] <quietfanatic> aaah

[18:16] <moritz> to determine in which order to process the docs

[18:16] <jnthn> moritz: OK, then just considering MRO won't cut it :)

[18:16] <jnthn> hi tadzik 

[18:16] <quietfanatic> Okay.  Generally you don't have to process docs as part of a function dispatch mechanism :)

[18:17] <masak> tadzik! \o/

[18:18] <moritz> I need to handle the 'Any' default somehow

[18:24] <dalek> doc: 008d651 | moritz++ | / (2 files):

[18:24] <dalek> doc: add Any as default superclass

[18:24] <dalek> doc: review: https://github.com/perl6/doc/commit/008d651108

[18:44] <dalek> evalbot: e1d7f66 | masak++ | / (2 files):

[18:44] <dalek> evalbot: added 'toqast' target

[18:44] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/e1d7f6613e

[18:45] <masak> evalbot control restart

[18:45] *** p6eval left
[18:45] *** p6eval joined
[18:45] *** ChanServ sets mode: +v p6eval

[18:45] <jnthn> toqast: say "no, not toast"

[18:46] <masak> hm.

[18:46] <masak> oh!

[18:46] * masak pulls server-side

[18:47] <masak> evalbot control restart

[18:47] *** p6eval left
[18:47] *** p6eval joined
[18:47] *** ChanServ sets mode: +v p6eval

[18:47] <jnthn> toqast: say "no, not toast"

[18:47] <flussence> toqast: pizza?

[18:48] <masak> sigh :)

[18:48] <masak> I'm new at this, apparently.

[18:48] <masak> moritz: halp!

[18:53] <sorear> good * #perl6

[18:53] <masak> r: say "this still works, I hope."

[18:53] <p6eval> rakudo 3ac8c7: OUTPUT«this still works, I hope.␤»

[18:53] <masak> phew.

[18:53] <masak> sorear! \o/

[18:53] <jnthn> o/ sorear 

[18:55] <dalek> evalbot: ff944c6 | masak++ | sync.pl:

[18:55] <dalek> evalbot: updated sync.pl with toqast

[18:55] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/ff944c68ca

[18:55] * sorear tries to log in to feather3's p6eval screen, fails

[18:56] *** p6eval left
[18:56] *** p6eval joined
[18:56] *** ChanServ sets mode: +v p6eval

[18:56] <moritz> sorear: a 'git pull' would have been enough :-)

[18:56] <moritz> toqast: say 1

[18:56] <moritz> r: say 1

[18:57] <p6eval> rakudo 3ac8c7: OUTPUT«1␤»

[18:57] <masak> moritz: I think I did everything by the book. feel free to review it if you have time.

[18:58] <moritz> masak: why did you change rakudo's safe mode from RESTRICTED back to SAFE?

[18:58] <masak> I did no such thing.

[18:58] <moritz> oh

[18:58] <moritz> I might have read the diff wrong

[18:59] <masak> no, https://github.com/perl6/evalbot/commit/e1d7f6613e61c47e3691d1b058ee609851d4634f does look worrying.

[18:59] <moritz> masak: looks like you accidentally reverted some older commits :(

[19:00] <masak> here's what I did. I made a commit as p6eval, realized I was the wrong user, copied things over to my own home directory on feather, and committed there.

[19:00] <masak> seems so, yes.

[19:00] <moritz> oh yes

[19:00] <masak> I'll straighten things out immediately.

[19:00] <moritz> copying stuff is how you get an old state into your sources

[19:00] <masak> right.

[19:00] <dalek> evalbot: c03db41 | masak++ | / (2 files):

[19:00] <dalek> evalbot: Revert "added 'toqast' target"

[19:00] <dalek> evalbot: 

[19:00] <dalek> evalbot: This reverts commit e1d7f6613e61c47e3691d1b058ee609851d4634f.

[19:00] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/c03db412ea

[19:02] <dalek> nqp/toqast: 4f9fa15 | jnthn++ | src/QAST/ (2 files):

[19:02] <dalek> nqp/toqast: Fix if/unless with pointy blocks taking the condition as an argument.

[19:02] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/4f9fa15062

[19:02] <dalek> nqp/toqast: 69b0f82 | jnthn++ | src/QAST/Operations.nqp:

[19:02] <dalek> nqp/toqast: while and until with pointy.

[19:02] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/69b0f8255c

[19:02] <dalek> rakudo/toqast: 709b09f | jnthn++ | src/core/Numeric.pm:

[19:02] <dalek> rakudo/toqast: Correct another wrong proto.

[19:02] <dalek> rakudo/toqast: review: https://github.com/rakudo/rakudo/commit/709b09fda9

[19:03] <dalek> evalbot: 7222a04 | masak++ | / (2 files):

[19:03] <dalek> evalbot: added 'toqast' target

[19:03] <dalek> evalbot: 

[19:03] <dalek> evalbot: This time with correctness.

[19:03] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/7222a04a03

[19:04] <masak> evalbot control restart

[19:04] *** p6eval left
[19:04] *** p6eval joined
[19:04] *** ChanServ sets mode: +v p6eval

[19:04] <masak> r: say "OH HAI"

[19:05] <moritz> the first execution always takes ages

[19:05] <moritz> I have no idea why

[19:05] *** p6eval left
[19:05] * masak .oO( the bot is cold and needs to warm up )

[19:05] <moritz> r: say 1

[19:05] *** p6eval joined
[19:05] *** ChanServ sets mode: +v p6eval

[19:05] <moritz> t: say 1

[19:05] <moritz> cat: /home/p6eval/toqast-inst/rakudo-revision: No such file or directory

[19:06] <masak> there was when I checked. hm.

[19:06] *** kaare_ left
[19:06] <p6eval> toqast : OUTPUT«Can't exec "./toqast-inst/bin/perl6": No such file or directory at lib/EvalbotExecuter.pm line 200.␤exec (./toqast-inst/bin/perl6 --setting=RESTRICTED /tmp/7xwHaMw8Nz) failed: No such file or directory␤Lost connection to server irc.freenode.org.␤»

[19:06] *** GlitchMr left
[19:06] *** p6eval left
[19:06] <masak> $ toqast-inst/bin/perl6 -e 'say "OH HAI"'

[19:06] <masak> OH HAI

[19:07] <masak> wrong CWD?

[19:07] <moritz> that's feather 1

[19:07] <moritz> t: say 1

[19:07] *** p6eval joined
[19:07] *** ChanServ sets mode: +v p6eval

[19:08] <masak> "that's feather 1"? are there more feathers I should have been aware of when making this addition? :/

[19:08] <moritz> masak: that's what sync.pl is about

[19:08] *** nodmonkey joined
[19:08] <moritz> masak: there are three virtual maschines on the same physical host

[19:09] <masak> ah.

[19:09] <moritz> masak: the feather you usually log in to is feather1. It's where we build the compilers for p6eval 

[19:09] <moritz> and p6eval runs on feather3

[19:09] <masak> I see.

[19:09] <moritz> so sync.pl rsync's stuff over

[19:09] <moritz> r: say 'OH HAI'

[19:09] <p6eval> rakudo 3ac8c7: OUTPUT«OH HAI␤»

[19:09] <masak> I didn't run sync.pl

[19:09] <moritz> t: say 'me too'

[19:09] <p6eval> toqast bec9a8: OUTPUT«./toqast-inst/bin/perl6: error while loading shared libraries: libparrot.so.4.5.0: cannot open shared object file: No such file or directory␤»

[19:09] <masak> clearly something is building, though.

[19:09] <moritz> masak: which parrot does toqast-inst use?

[19:09] <moritz> I ran it

[19:10] <moritz> and build.pl runs it

[19:10] <crab2313>  /quit

[19:10] *** crab2313 left
[19:11] <masak> moritz: same parrot as nom uses.

[19:11] <masak> I didn't change it in any way.

[19:11] <moritz> masak: so --with-parrot and separate --prefix did work in the end?

[19:13] <masak> no, I added a 'cp -r' to the end of rebuild-toqast.pl

[19:13] <jnthn> Uhm. How has Buf.setbuf ever worked?

[19:13] <jnthn> *subbuf

[19:13] <jnthn> It creates a new byte buffer with a string in instead of a byte buffer.

[19:14] <moritz> masak: parrot isn't relocatable

[19:14] <jnthn> Oh...maybe because QAST knows to box to a Perl 6 Str, not a Parrot String, and Parrot String implements elements...

[19:15] <masak> moritz: the toqast/bin/perl6 executable works from the ~ dir of p6eval.

[19:15] <moritz> masak: that's all fine, but it doesn't work when rsync'ed over to feather3

[19:16] <moritz> jnthn: it just needs a conversion from parrot binary String to ByteBuffer

[19:16] <moritz> jnthn: like infix:<~>(Buf, Buf) does it

[19:17] <moritz> jnthn: want me to patch it?

[19:17] <jnthn> moritz: Trying a patch now.

[19:17] <jnthn> moritz: Was mostly wondering how on earth we got away with it more than how to patch it :)

[19:17] <masak> moritz: I take your word for it. so clearly I did something wrong in setting up all this. I am at a loss how to fix it, unfortunately.

[19:18] <moritz> masak: compile another parrot for toqast-inst{1,2}/

[19:21] <masak> how?

[19:21] <jnthn> For anybody wanting to help with toqast: I know why repeat.t is busted and know the three leftover S05 fails are all the same root cause. Analysis/golfing/fixes for any of the other remaining failures is most welcome.

[19:22] <moritz> masak: git clone parrot; perl Configure --prefix=$prefix --optimize && make install

[19:23] <masak> ah, as part of rebuild-toqast.pl?

[19:23] <moritz> yes

[19:23] * masak does it

[19:23] *** UncleFester6 joined
[19:23] <moritz> (not the git cloning, just the git pulling, if ncessary)

[19:25] <masak> ok.

[19:26] *** daxim joined
[19:26] <UncleFester6> r: our @a; say @a.perl; our %h; say %h.perl

[19:26] <p6eval> rakudo 3ac8c7: OUTPUT«Any␤Any␤»

[19:27] <UncleFester6> r: our @a =()

[19:27] <p6eval> rakudo 3ac8c7: OUTPUT«No such method 'STORE' for invocant of type 'Any'␤  in block <anon> at /tmp/LpfyDUlKRB:1␤␤»

[19:27] <moritz> UncleFester6: known problem :(

[19:27] <UncleFester6> r: our %h = ()

[19:27] <p6eval> rakudo 3ac8c7: OUTPUT«No such method 'STORE' for invocant of type 'Any'␤  in block <anon> at /tmp/GAorSSASi2:1␤␤»

[19:28] <UncleFester6> moritz: this is the basis, I think of RT 102876 - if there is another relevant ticket maybe they should be merged

[19:28] <dalek> evalbot: 974082c | masak++ | build-scripts/rebuild-toqast.pl:

[19:28] <dalek> evalbot: instructions to rebuild parrot for toqast

[19:28] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/974082caed

[19:28] <dalek> doc: e7b836c | moritz++ | / (2 files):

[19:28] <dalek> doc: topological sorting of types

[19:28] <dalek> doc: review: https://github.com/perl6/doc/commit/e7b836cd5f

[19:28] <masak> evalbot control restart

[19:28] *** p6eval left
[19:28] *** p6eval joined
[19:28] *** ChanServ sets mode: +v p6eval

[19:28] <moritz> you only need to restart evalbot for actual code changes to the bot

[19:28] <masak> I need to focus on crypt now, unfortunately.

[19:29] <masak> ok.

[19:29] <moritz> t: say 1

[19:29] <p6eval> toqast bec9a8: OUTPUT«./toqast-inst/bin/perl6: error while loading shared libraries: libparrot.so.4.5.0: cannot open shared object file: No such file or directory␤»

[19:34] <dalek> evalbot: 9906490 | moritz++ | build-scripts/rebuild-toqast.pl:

[19:34] <dalek> evalbot: [toqast rebuild] list form of system() does not interpret shell meta chars

[19:34] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/9906490430

[19:42] *** birdwindupbird joined
[19:46] <moritz> /home/p6eval/toqast/install/bin/nqp --vmlibs=perl6_group,perl6_ops  --target=pir --output=src/gen/perl6-actions.pir --encoding=utf8 \ src/Perl6/Actions.pm

[19:46] <moritz> Null PMC access in find_method('operations')

[19:47] <UncleFester6> moritz: the other ticket is 100560 and neither of the tickets note that 'our @a; say @a.perl' gives any which seems useful to mention.

[19:47] <jnthn> The Rakudo toqast branch also needs the toqast branch of NQP

[19:48] <moritz> jnthn: I know. evalbot needs to know too :/

[19:50] <moritz> UncleFester6: yes, seems useful to add

[19:54] <UncleFester6> r: our @a; my $x = shift @a;

[19:54] <p6eval> rakudo 3ac8c7: OUTPUT«Cannot call 'shift'; none of these signatures match:␤:(@a)␤␤  in block <anon> at /tmp/KwEJ4wnr8k:1␤␤»

[19:54] <UncleFester6> r: my @a; my $x = shift @a;

[19:54] <p6eval> rakudo 3ac8c7:  ( no output )

[19:55] <UncleFester6> r: our @a; @a[3] = 12;

[19:55] <p6eval> rakudo 3ac8c7:  ( no output )

[19:55] <UncleFester6> that's ok  ...

[19:57] <UncleFester6> based on that last example with shift I propose merging 100560 and 102876 and adding the shift example ... I don't think I can do it ...

[19:57] *** fridim_ joined
[19:59] <moritz> masak: oh

[20:00] <moritz> masak: the problem might be the cp -r instead of changing the symlink

[20:01] <masak> :/

[20:01] <masak> well, I never got --prefix to work.

[20:01] <masak> no idea why.

[20:02] <moritz> because the bird's prefix was at odds with the one you gave to Configure.pl

[20:02] <masak> hm.

[20:03] <moritz> how about we screw this complicated setup, and do a simple compile without a custom prefix, and rsync it all over?

[20:04] *** snearch left
[20:04] <moritz> the two-install-dirs-setup was from the times where we built the cmopiler on the same machine as we ran evalbot

[20:04] <moritz> now rsync does the snapshotting for us

[20:06] <masak> sounds fine to me.

[20:06] <masak> sorry for messing it up in the first place.

[20:06] <masak> it looked easy, but it was complicated.

[20:06] <moritz> no problem

[20:06] <moritz> that's true for a lot of problems :-)

[20:07] <masak> :)

[20:11] <dalek> evalbot: 978c680 | moritz++ | / (2 files):

[20:11] <dalek> evalbot: simplfy toqast rebuild

[20:11] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/978c680231

[20:14] <dalek> evalbot: 92190fc | moritz++ | build-scripts/rebuild-toqast.pl:

[20:14] <dalek> evalbot: [toqast] fix thinko

[20:14] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/92190fc819

[20:16] <dalek> evalbot: 1ebd56b | moritz++ | / (2 files):

[20:16] <dalek> evalbot: more thinkos

[20:16] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/1ebd56bdfa

[20:17] *** bruges joined
[20:19] *** bruges_ left
[20:23] *** SamuraiJack left
[20:24] <moritz> evalbot control restart

[20:24] *** p6eval left
[20:24] *** p6eval joined
[20:24] *** ChanServ sets mode: +v p6eval

[20:26] *** crab2313 joined
[20:28] *** nodmonkey left
[20:30] *** crab2313 left
[20:31] *** crab2313 joined
[20:32] *** birdwindupbird left
[20:33] *** daxim left
[20:35] <UncleFester6> r: our (@a)

[20:35] <p6eval> rakudo 3ac8c7: OUTPUT«use of uninitialized value of type Mu in string context  in any <anon> at src/gen/BOOTSTRAP.pm:104␤␤use of uninitialized value of type Mu in string context  in any <anon> at src/gen/BOOTSTRAP.pm:104␤␤===SORRY!===␤error:imcc:Multiple declarations of lexical '@a'␤␤   i…

[20:35] <UncleFester6> known bug but golf

[20:37] <jnthn> UncleFester6++

[20:38] <jnthn> Add to ticket; once I get toqast landed I'll make a pass over this our scoping stuff

[20:38] <moritz> t: say 3

[20:38] <p6eval> toqast : OUTPUT«3␤»

[20:38] <moritz> toqast: say 'loliamhere'

[20:38] <p6eval> toqast : OUTPUT«loliamhere␤»

[20:39] <jnthn> r: sub foo(Int $a) { CATCH { say "oops" } }; foo(~"lol")

[20:39] <p6eval> rakudo 3ac8c7: OUTPUT«oops␤Nominal type check failed for parameter '$a'; expected Int but got Str instead␤  in sub foo at /tmp/z7VxGgBXGV:1␤  in block <anon> at /tmp/z7VxGgBXGV:1␤␤»

[20:39] <jnthn> t: sub foo(Int $a) { CATCH { say "oops" } }; foo(~"lol")

[20:39] <p6eval> toqast : OUTPUT«Nominal type check failed for parameter '$a'; expected Int but got Str instead␤␤»

[20:39] <jnthn> Well, that's one thing fixed in toqast :)

[20:40] <tadzik> \o/

[20:41] <jnthn> masak++, moritz++ for setting this up. It'll be useful in the coming days as spectests and module space are triaged. :)

[20:41] <masak> moritz++ \o/

[20:41] <masak> t: macro foo { my $a = "it's us, the space puppies!"; quasi { $a } }; my $result = foo; say $result

[20:41] <p6eval> toqast : OUTPUT«Cannot assign a non-Perl 6 value to a Perl 6 container␤␤»

[20:42] <masak> jnthn: there, that's what I wanted to show :P

[20:42] <jnthn> t: macro foo { my $a = "it's us, the space puppies!"; quasi { $a} }; say foo.WHAT

[20:42] <p6eval> toqast : OUTPUT«Can only use get_what on a SixModelObject␤␤»

[20:42] <jnthn> Well, there's another clue. :)

[20:42] <jnthn> t: macro foo { my $a = "it's us, the space puppies!"; quasi { $a} }; say DUMP(foo)

[20:42] <p6eval> toqast : OUTPUT«(null)␤»

[20:43] <jnthn> t: say (quasi { 1 }).WHAT

[20:43] <p6eval> toqast : OUTPUT«AST()␤»

[20:43] <jnthn> Hm, not so obvious then :)

[20:44] <jnthn> t: macro foo { my $a = "it's us, the space puppies!"; quasi { $a} }; say nqp::isnull(foo)

[20:44] <p6eval> toqast : OUTPUT«No such method 'gist' for invocant of type 'Integer'␤␤»

[20:44] <jnthn> t: macro foo { my $a = "it's us, the space puppies!"; quasi { $a} }; say nqp::p6box_i(nqp::isnull(foo))

[20:44] <p6eval> toqast : OUTPUT«1␤»

[20:44] <masak> something goes wrong in the macro application?

[20:45] <jnthn> Guessing so

[20:47] <masak> then I'll know where to look.

[20:49] *** crab2313 left
[20:53] *** Johnson joined
[20:53] *** Johnson is now known as Guest69361

[21:00] <tadzik> eww, no Perl 6 talks on the YAPC?

[21:10] <lue> hello world o/

[21:11] *** Guest69361 left
[21:12] <jnthn> tadzik: I've not had mine accepted or rejected yet.

[21:13] <tadzik> hello lue!

[21:14] * tadzik checks how toqast awesome got over the weekend

[21:20] *** seldon left
[21:22] *** MayDaniel_ left
[21:25] *** pupoque joined
[21:29] *** kurahaupo joined
[21:33] *** thelazydeveloper left
[21:48] <UncleFester6> r: our $a = 12; { our $a =2;}; say $a

[21:48] <p6eval> rakudo 3ac8c7: OUTPUT«2␤»

[21:48] <masak> aye.

[21:48] <UncleFester6> looking at RT 111284  and wondering if this isn't redeclaration

[21:48] <masak> it's never redeclaration if it's in another scope.

[21:49] <tadzik> suddenly, I have a feeling that I should stop using any sort of real name and real connection on the internet

[21:49] <UncleFester6> but it kept the value from the inner scope after that scope is gone.  Was it really declared in a different scope?

[21:50] <masak> tadzik: why?

[21:50] <tadzik> I mean, LinkedIn guesses people you may know, from, I don't know, your company, your gmail contacts, their gmail contacts, facepalm, whatever

[21:50] <masak> UncleFester6: before we go any further, do you know what 'our' variables are?

[21:50] <tadzik> and it's quite well at figuring out people

[21:50] <tadzik> to the point that it just listed one of the bartenders I know in "People you may know"

[21:50] <tadzik> How on earth does it know that

[21:51] <tadzik> makes me want to crawl under my bed and change my name and face

[21:51] <masak> tadzik: people will buy your privacy by the kilo whether you're selling it or not. welcome to the 21st century.

[21:51] <UncleFester6> masak: my knowledge is based on perl5 but if you still think I am heading in the wrong direction I will take your word for it for now

[21:51] <masak> UncleFester6: I didn't mean to discourage you, just to gauge your knowledge.

[21:52] <masak> UncleFester6: basically, 'our' = 'my' + storage in package scope.

[21:52] <masak> if that makes any sense.

[21:53] <UncleFester6> in my example weren't both our declarations in the same package scope?

[21:53] <masak> yes, correct.

[21:53] <masak> that's why it overwrote the 12.

[21:53] <UncleFester6> overwrite is fine.  allowing the redeclaration is what I found confusing ...

[21:54] <UncleFester6> r: our $a; our $a

[21:54] <p6eval> rakudo 3ac8c7: OUTPUT«===SORRY!===␤Redeclaration of symbol $a␤at /tmp/riUERDeBje:1␤»

[21:57] <UncleFester6> Interesting in perl5  even with strict 'our $a; our $a' is allowed.

[21:58] <UncleFester6> warnings catches it though

[22:00] <lue> std: our $a; our $a;

[22:00] <p6eval> std 3b49ac8: OUTPUT«ok 00:00 41m␤»

[22:01] *** moukeddar joined
[22:01] <benabik> r: our $a; our $a

[22:01] <p6eval> rakudo 3ac8c7: OUTPUT«===SORRY!===␤Redeclaration of symbol $a␤at /tmp/KyPq1bELiX:1␤»

[22:01] <UncleFester6> perl5 with strict + warnings complains about my original example

[22:01] <lue> hm. Seems there's a bug in rakudo.

[22:08] *** PacoAir left
[22:11] <gfldex> i'm toying around with my own implementation for search in doc

[22:11] <gfldex> i'm making great progress: Firefox had a problem and crashed. We'll try to restore your tabs and windows when it restarts.

[22:12] <lue> r: class A { state $b; };

[22:12] <p6eval> rakudo 3ac8c7: OUTPUT«(signal SEGV)»

[22:13] <lue> should I file in RT or in Github issues?

[22:13] <benabik> rakudo does bugs in RT

[22:13] <benabik> Yeah, Rakudo doesn't even have gh issues enabled.

[22:13] <masak> lue: nice!

[22:13] <masak> lue: are you submitting it, or shall I?

[22:13] <lue> thought so (there was talk of moving a while ago, so I wasn't sure).

[22:13] *** MayDaniel joined
[22:13] <lue> masak: you could if you want, it's been a while since I've used RT :)

[22:13] <masak> oh, you're submitting it. good.

[22:14] <masak> oh, ok.

[22:14] <masak> I'll do it, then.

[22:14] <benabik> lue: There's been resistance to upgrading RT, much less moving somewhere else.

[22:14] <lue> .oO(who am I to deprive masakbot of his life's purpose?)

[22:14] <masak> benabik: I believe that was me, yes :)

[22:14] <lue> benabik: yeah, I remember that part of the discussion too :)

[22:14] * masak submits rakudobug

[22:17] *** sergot left
[22:19] <lue> masak: actually, that "hm. seems there's a bug" line was for mishandling our $a; our $a; above :) [ unless it's std that's wrong here ]

[22:22] <masak> lue: I don't know. for once I agree with Rakudo.

[22:22] <masak> r: my $a; my $a

[22:22] <p6eval> rakudo 3ac8c7: OUTPUT«===SORRY!===␤Redeclaration of symbol $a␤at /tmp/BFy2EKcS3p:1␤»

[22:22] <benabik> n: our $a; our $a

[22:22] <p6eval> niecza v19-13-g442e075: OUTPUT«Potential difficulties:␤  Useless redeclaration of variable $a (see line 1) at /tmp/bQjhMFTpYD line 1 (EOF):␤------> our $a; our $a⏏<EOL>␤␤»

[22:22] <masak> though the spec says that that should be OK, IIRC.

[22:22] <lue> std: my $a; my $a;

[22:22] <p6eval> std 3b49ac8: OUTPUT«Potential difficulties:␤  Useless redeclaration of variable $a (see line 1) at /tmp/eE2NODalG8 line 1:␤------> my $a; my $a⏏;␤ok 00:00 41m␤»

[22:22] <lue> std: our $a; our $a;

[22:22] <p6eval> std 3b49ac8: OUTPUT«ok 00:00 41m␤»

[22:23] <lue> I personally can't see the reason for allowing redeclaration of our variables (unless there's some package-scoping-related scenario I'm not thinking of)

[22:23] <masak> lol, I blogged! \o/ http://strangelyconsistent.org/blog/july-22-2012-playing-the-hanoi-game

[22:26] <UncleFester6> lue: I still think that there should be consistency with below

[22:26] <UncleFester6> r:our $a = 12; { our $a =2;}; say $a

[22:26] <UncleFester6> r: our $a = 12; { our $a =2;}; say $a

[22:26] <p6eval> rakudo 3ac8c7: OUTPUT«2␤»

[22:26] <masak> there *is* consistency.

[22:26] <lue> masak++ good post

[22:27] <masak> r: my $a = 12; { my $a = 2 }; say $a

[22:27] <p6eval> rakudo 3ac8c7: OUTPUT«12␤»

[22:27] <masak> neither the 'my' or the 'our' variant is a redeclaration.

[22:28] <UncleFester6> in perl5 with strict and warnings my example is identified as a redeclaration just like 'our $a; our $a'

[22:29] <lue>     our $a; our $a;    still seems... interesting (unless, again, there's a good reason for allowing this but not    my $a; my $a;    )

[22:29] <masak> UncleFester6: well, Perl 5 has slightly different semantics for 'our'.

[22:29] <masak> eval: { our $a = 12 }; $a

[22:29] <buubot_backup> masak: 12

[22:30] <masak> r: { our $a = 12 }; say $a

[22:30] <p6eval> rakudo 3ac8c7: OUTPUT«===SORRY!===␤Variable $a is not declared␤at /tmp/48NluKkbrV:1␤»

[22:30] <UncleFester6> have to go for now sorry ...

[22:34] <masak> o/

[22:43] *** vmspb left
[22:46] <lue> I'm very interested in taking Adventure::Engine for a spin after July :)

[22:46] <masak> \o/

[22:47] * lue wonders how hard it would be to implement a "hamster wheel" room...

[22:48] *** moukeddar left
[22:51] *** cognominal__ left
[22:51] *** cognominal__ joined
[22:54] *** moukeddar joined
[22:55] <tadzik> Files=683, Tests=24822, 1332 wallclock secs

[22:55] <tadzik> that's qast

[22:56] <tadzik> if panda runs, I'm trying emmentaler

[22:59] *** moukeddar left
[23:00] *** fridim_ left
[23:00] <tadzik> yep, panda runs

[23:01] <masak> \o/

[23:01] <tadzik> I have a feeling it's slightly faster, but there's a high chance that it's just my imagination :)

[23:02] <masak> no, it's slightly faster. the Q in QAST is more aerodynamic than the P in PAST.

[23:02] <tadzik> true

[23:02] <timotimo> the little wiggly thing on the Q is actually what the QAST uses to move forwards

[23:02] <tadzik> and it has a spoiler, which makes it look faster too

[23:02] <tadzik> oh, that can't be it

[23:02] <timotimo> no? not like bacteria?

[23:02] *** muixirt left
[23:03] <tadzik> that'd be a snail-type movement then, no?

[23:03] <tadzik> doesn't fit :)

[23:03] <masak> I voted for using a D, which has great lift power, too. but people thought that idea was really DAST.

[23:03] <masak> timotimo: flagellae.

[23:03] <masak> phenny: "flagellum"?

[23:04] <phenny> masak: "flagellum" (en to en, translate.google.com)

[23:04] <tadzik> phenny: "dast"?

[23:04] <phenny> tadzik: "dast" (de to en, translate.google.com)

[23:04] <tadzik> phenny: en pl "dast"?

[23:04] <phenny> tadzik: "Dast" (en to pl, translate.google.com)

[23:04] <masak> hm, plural appears to be "flagella".

[23:04] <timotimo> masak: thanks, i just looked it up on wikipedia, too :)

[23:04] <masak> Intelligent-Design people love flagella. or did a few years ago, at least.

[23:05] <timotimo> they did?

[23:05] <timotimo> didn't notice any of that

[23:05] <timotimo> don't really know if i should give them any more of my time ...

[23:05] <masak> probably not.

[23:06] <masak> well, unless you happen to like being frustrated.

[23:06] <timotimo> sure it can be amusing every once in a while, when they come up with crocoducks or claim monkeys still existing disproves evolution, but then you notice that those people are quite a big and powerful (or at least very vocal) group in 'merica and then you just get sad

[23:06] <sorear> masak: "whip" (classical latin to en, sorear)

[23:06] <tadzik> this is when "catholic poland" suddenly feels *so* sane...

[23:07] <lue> wasn't their argument that it (flagella) couldn't have come in a simpler, earlier form, ∴ !evolution?

[23:07] <timotimo> it seems many arguments they make are quite a lot like that, yeah

[23:07] <sorear> basically, eys

[23:07] <tadzik> this is also when I'm close to coming up with arguments which make people hate me, so I guess I'd just shut up for a while :)

[23:08] <sorear> and it's unfalsifiable since flagella don't leave fossils!

[23:08] * sorear hugs tadzik

[23:08] <lue> (but then a scientist came along and proved its earlier form was as a stinger of sorts. It was part of a court case, at least what I'm thinking of)

[23:08] <tadzik> sorear: thanks, I feel better

[23:09] <jnthn> tadzik: (panda works) yay!

[23:10] <jnthn> tadzik: Will be happy to see how the cheese holds up.

[23:10] <tadzik> yeah, the smoketests seem to be going along nicely so far

[23:10] <tadzik> well, NativeCall doesn't work, for one

[23:10] <timotimo> https://en.wikipedia.org/wiki/Evolution_of_flagella <- this article suggests a former version of the flagellum might have been used to inject toxin into other cells, so you are probably remembering correctly, lue 

[23:11] <timotimo> and with this, i'm done with intelligent design for today

[23:11] <jnthn> tadzik: There's still some spectests that fail too; it's entirely possible NativeCall relies on one of them.

[23:11] *** cognominal__ left
[23:11] <tadzik> could be

[23:11] *** cognominal__ joined
[23:11] <jnthn> tadzik: Alternatively, it may rely on recent arnsholt++ work not merged from nqp master into toqast, perhaps.

[23:11] <jnthn> (Didn't check if there is any.)

[23:11] <lue> (watched a video about it a case with that as a part of it in class long ago) The scientist came to court with a somewhat-taken-apart mousetrap as a tie clip as an analogy

[23:12] <lue> (I'm done with ID too now)

[23:12] <benabik> My biggest argument against intelligent design is that most biological design doesn't seem too intelligent.  :-D

[23:12] <tadzik> :P

[23:12] <tadzik> I mean, fingers on feet! Gah!

[23:13] <quietfanatic> Hey, my feetgers are very useful sometimes.

[23:13] *** crab2313 joined
[23:15] <tadzik> they lift furniture sometimes, but they usually don't

[23:16] <lue> .oO(that whole caffeine isn't good for you thing was a bit of a slip-up :P)

[23:18] <timotimo> everything in the universe is trying to kill us!

[23:18] <masak> 'night, #perl6

[23:18] <timotimo> 'night masak :)

[23:19] *** zby_home_ left
[23:19] <tadzik> 'night

[23:19] <tadzik> good knight masak

[23:27] <tadzik> 49 modules ok, 57 not ok (106 total)

[23:27] <tadzik> Testing took 25 minutes and 36 seconds

[23:28] <tadzik> uploaded to http://tjs.azalayah.net/index.html

[23:28] <tadzik> so about 5 regressions

[23:30] <jnthn> tadzik: Do you know which are the regressions? (more)

[23:31] <jnthn> I suspect if one is NativeCall, anything that depends on it will also be regressed.

[23:32] <jnthn> tadzik: I count 4 modules that say they failed because of a dependency on NativeCall.

[23:32] <jnthn> tadzik: Those + native call = 5. That's...surprisingly good if true.

[23:38] <tadzik> URI also fails

[23:38] <tadzik> and thus LWP and Bailador

[23:39] *** MayDaniel left
[23:40] <tadzik> I need a tool that'll do the diff between two results.json

[23:41] <tadzik> I'll tackle that tomorrow

[23:41] <tadzik> or maybe today

[23:41] <jnthn> tadzik: Great, thanks.

[23:41] <tadzik> well, the tea is still warm anyway

[23:41] <jnthn> tadzik: URI is regex heavy and we have 3 test fails in S05.

[23:41] <tadzik> the bad part is that I don't think I've saved the old results.json

[23:41] <tadzik> I'll rebuild and re-run then

[23:42] *** tokuhiro_ joined
[23:42] <jnthn> tadzik: OK. I'm gonna sleep soon; feel free to gist me the failure modes of NativeCall and URI or triage it a bit...it may boil down to one of the failing spectests though.

[23:43] <jnthn> The majority of things being OK is very good news.

[23:43] *** crab2313 left
[23:47] <timotimo> lue: http://www.youtube.com/watch?v=8wOKuFu217E <- this would be a video about the flagellum and the mousetrap tie clip, from NOVA

[23:54] <jnthn> 'night, #perl6

[23:55] <tadzik> good knight jnthn 

[23:57] *** crab2313 joined
[23:57] *** lichtkind joined
[23:58] <lichtkind> woot #perl6

