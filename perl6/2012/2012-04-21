[00:02] <dalek> tablets: fbba0e7 | (Herbert Breunung)++ | docs/ (3 files):

[00:02] <dalek> tablets: more coherent formating of code snippets

[00:02] <dalek> tablets: review: https://github.com/perl6/tablets/commit/fbba0e7598

[00:03] *** vlixes left
[00:08] *** whiteknight joined
[00:08] *** japhb_ left
[00:38] <lichtkind> good night

[00:38] *** lichtkind left
[00:40] *** mspaulding left
[00:41] *** pmurias_ left
[00:51] *** buubot_backup joined
[00:59] *** replore left
[01:05] *** replore_ joined
[01:07] *** jaldhar joined
[01:07] <dalek> tablets: 5042d4d | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[01:07] <dalek> tablets: typo in double caret op anchor

[01:07] <dalek> tablets: review: https://github.com/perl6/tablets/commit/5042d4d240

[01:15] *** Quann_Quan joined
[01:15] *** Quann_Quan left
[01:28] *** FACEFOX joined
[01:37] *** FACEFOX-DOT-COM joined
[01:38] *** replore_ left
[01:42] *** edwinorc joined
[01:45] <edwinorc> Hi, I just ran the perl6 rosetta code for Levenshtein distance ( http://rosettacode.org/wiki/Levenshtein_distance#Perl_6 ) in rakudo

[01:45] <edwinorc> But I get the error Cannot assign to a non-container   in sub levenshtein_distance at assn1-Q4.p6:6

[01:46] <edwinorc> is that a known thing?

[01:47] <edwinorc> assn1-Q4.p6 is the name of the file I was running it in

[01:53] <edwinorc>  rakudo:  my @a;  @a[0][1] = 'X';  say @a.perl;

[01:53] <p6eval> rakudo 45ef4e: OUTPUT«Array.new([Any, "X"])␤»

[01:53] <edwinorc> ah maybe it's just my build :)

[01:53] <geekosaur> I think that may have just been fixed (but not quite in time for the latest release)?  autovivification had been broken for sometime

[01:54] <edwinorc> yeah I was just looking at logs from march I think it has been fixed

[01:54] <edwinorc> just in the last few days

[01:54] <dalek> tablets: f55c003 | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[01:54] <dalek> tablets: fixing special var links (have to have same case as item they link to now)

[01:54] <dalek> tablets: review: https://github.com/perl6/tablets/commit/f55c003ebc

[02:05] *** whiteknight left
[02:07] *** machine1 joined
[02:14] *** PacoAir_ joined
[02:14] *** PacoAir left
[02:14] *** PacoAir_ is now known as PacoAir

[02:27] <dalek> tablets: 541c06a | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[02:27] <dalek> tablets: small format tidy

[02:27] <dalek> tablets: review: https://github.com/perl6/tablets/commit/541c06a56b

[02:27] <dalek> tablets: 459e572 | (Herbert Breunung)++ | docs/appendix- (2 files):

[02:27] <dalek> tablets: more small fixes

[02:27] <dalek> tablets: review: https://github.com/perl6/tablets/commit/459e57246f

[02:35] <dalek> tablets: d130d6b | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[02:35] <dalek> tablets: still fixing format typos and stting links

[02:35] <dalek> tablets: review: https://github.com/perl6/tablets/commit/d130d6b65b

[02:37] *** JimmyZ_ joined
[02:37] *** Chillance left
[02:37] *** JimmyZ_ left
[02:46] *** skids joined
[02:51] *** PacoAir left
[02:55] *** orafu left
[02:55] *** orafu joined
[02:56] *** benabik left
[02:59] *** benabik joined
[03:06] *** daemon joined
[03:07] *** daemon left
[03:08] *** daemon joined
[03:37] *** edwinorc left
[03:43] *** tokuhirom joined
[03:52] *** Khisanth joined
[04:04] *** thelazydeveloper left
[04:32] *** nif left
[04:48] *** mucker joined
[05:22] *** kaare_ joined
[06:07] *** GlitchMr joined
[06:17] <moritz> \o

[06:17] <phenny> moritz: 20 Apr 23:34Z <lichtkind> tell moritz i rewrote the html generator in perl and it does more now, please let the cron start this

[06:17] <dalek> rakudo/nom: 498508b | moritz++ | docs/ROADMAP:

[06:17] <dalek> rakudo/nom: [roadmap] :exhaustive is done

[06:17] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/498508bd8c

[06:19] *** mucker left
[06:22] <moritz> phenny: tell lichtkind the cronjob now runs build-html.pl

[06:22] <phenny> moritz: I'll pass that on when lichtkind is around.

[06:26] *** plobsing left
[06:37] *** tokuhirom left
[06:39] *** tokuhiro_ joined
[06:41] <pmichaud> good morning, #perl6

[06:44] <dalek> features: 89540de | pmichaud++ | features.json:

[06:44] <dalek> features: Add autovivification as a Rakudo feature.

[06:44] <dalek> features: review: https://github.com/perl6/features/commit/89540dee6d

[06:45] *** tokuhiro_ left
[06:50] <dalek> perl6.org: e411374 | pmichaud++ | source/compilers/index.html:

[06:50] <dalek> perl6.org: Rakudo's setting library is now in the 'nom' branch, not 'master'.

[06:50] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/e411374393

[07:07] *** jaffa4 joined
[07:07] *** derrazo_ joined
[07:14] <moritz> good am, pm

[07:27] *** plobsing joined
[07:44] *** tokuhiro4 left
[07:46] *** cognominal left
[07:50] *** nwc10 left
[07:59] *** daniel-s_ joined
[08:02] *** daniel-s left
[08:03] *** cognominal joined
[08:06] *** tokuhiro4 joined
[08:07] *** cognominal_ joined
[08:10] *** cognominal left
[08:19] *** agentzh joined
[08:21] <dalek> nqp: 655049e | jonathan++ | src/QRegex/Cursor.nqp:

[08:21] <dalek> nqp: Make !LITERAL support getting a flag to match cAsE InSenSitiVE.

[08:21] <dalek> nqp: review: https://github.com/perl6/nqp/commit/655049ef54

[08:23] <dalek> rakudo/nom: 5ec18cd | jonathan++ | / (3 files):

[08:23] <dalek> rakudo/nom: Make /:i $foo/ match the interpolated variable case-insensitively.

[08:23] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5ec18cd4be

[08:24] <jnthn> pmichaud: https://rt.perl.org/rt3/Ticket/Display.html?id=76500

[08:27] <moritz> b: my $x = 'Foo'; say 'foo' ~~ /:i $x/

[08:27] <p6eval> b 922500: OUTPUT«␤»

[08:31] *** fsergot joined
[08:31] *** nif joined
[08:34] *** nif left
[08:52] <dalek> features: 6af5339 | jonathan++ | features.json:

[08:52] <dalek> features: Now have CORE, SETTING and UNIT.

[08:52] <dalek> features: review: https://github.com/perl6/features/commit/6af5339152

[08:55] <pmichaud> jnthn: locally (with icu):

[08:55] <pmichaud> > my $x = 'XYZ';  say 'xyz' ~~ /:i $x/;

[08:55] <pmichaud> => <xyz>

[08:55] <jnthn> pmichaud: yay :)

[08:55] <pmichaud> trying without icu now

[08:56] <jnthn> pmichaud: OK. Will tag the ticket testneeded

[08:56] <pmichaud> n:   say (1|2|3).Str

[08:56] <p6eval> niecza v16-23-gaa61ed5: OUTPUT«any(1, 2, 3)␤»

[08:57] <pmichaud> r:  say (1|2|3).Str

[08:57] <p6eval> rakudo 498508: OUTPUT«any(1, 2, 3)␤»

[08:57] <pmichaud> r: print 1|2|3

[08:57] <p6eval> rakudo 498508: OUTPUT«This type cannot unbox to a native string␤  in method print at src/gen/CORE.setting:6666␤  in sub print at src/gen/CORE.setting:6537␤  in block <anon> at /tmp/ZhORcYdOry:1␤␤»

[08:57] <moritz> r: say (1|2|3).Str.WHAT

[08:57] <p6eval> rakudo 498508: OUTPUT«Junction()␤»

[08:58] <pmichaud> n:  say (1|2|3).Str.WHAT

[08:58] <p6eval> niecza v16-23-gaa61ed5: OUTPUT«Str()␤»

[08:59] <moritz> r: say Mu.Str

[08:59] <p6eval> rakudo 498508: OUTPUT«use of uninitialized value of type Mu in string context  in method Str at src/gen/CORE.setting:667␤␤␤»

[08:59] <moritz> n: say Mu.Str

[08:59] <p6eval> niecza v16-23-gaa61ed5: OUTPUT«Use of uninitialized value in string context␤  at /home/p6eval/niecza/lib/CORE.setting line 1224 (warn @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 235 (Mu.Str @ 10) ␤  at /tmp/ilVnXiP2ya line 1 (mainline @ 2) ␤  at /home/p6eval/niecza/lib/CORE.set…

[09:02] <dalek> rakudo/nom: 507e7f6 | jonathan++ | src/core/Mu.pm:

[09:02] <dalek> rakudo/nom: Dispatchers should not decontainerize the return value.

[09:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/507e7f694b

[09:12] <jnthn> pmichaud: auto-viv ticket: https://rt.perl.org/rt3/Ticket/Display.html?id=84000

[09:12] <jnthn> pmichaud: Doesn't seem quite closable yet...

[09:13] *** NamelessTee joined
[09:16] *** jferrero joined
[09:20] *** tokuhirom joined
[09:25] *** plobsing left
[09:28] <moritz> r: role A[::X] { method a(::?CLASS:D: ) { }; class B does A[A] { }; B.new.a

[09:28] <p6eval> rakudo 507e7f: OUTPUT«===SORRY!===␤None of the parametric role variants for 'A' matched the arguments supplied.␤Cannot call ''; none of these signatures match:␤␤»

[09:29] <moritz> r: role A[::X] { method a(::?CLASS:D: ) { }; class B does A[Int] { }; B.new.a

[09:29] <p6eval> rakudo 507e7f: OUTPUT«===SORRY!===␤None of the parametric role variants for 'A' matched the arguments supplied.␤Cannot call ''; none of these signatures match:␤␤»

[09:29] <moritz> r: role A[$] { method a(::?CLASS:D: ) { }; class B does A[Int] { }; B.new.a

[09:29] <p6eval> rakudo 507e7f: OUTPUT«===SORRY!===␤None of the parametric role variants for 'A' matched the arguments supplied.␤Cannot call ''; none of these signatures match:␤␤»

[09:29] <moritz> erm, what?

[09:32] <jnthn> r: role A[$] { method a(::?CLASS:D: ) { }; class B does A[Int] { }

[09:32] <p6eval> rakudo 507e7f: OUTPUT«===SORRY!===␤None of the parametric role variants for 'A' matched the arguments supplied.␤Cannot call ''; none of these signatures match:␤␤»

[09:32] <jnthn> oh

[09:33] <jnthn> missing 

[09:33] <jnthn> }

[09:33] <moritz> r: role A[::X] { method a(::?CLASS:D: ) { }}; class B does A[Int] { }; B.new.a

[09:33] <p6eval> rakudo 507e7f:  ( no output )

[09:33] <moritz> r: role A[::X] { method a(::?CLASS:D: ) { }}; class B does A[Int] { }; B.a

[09:33] <p6eval> rakudo 507e7f: OUTPUT«Parameter '' requires an instance, but a type object was passed␤  in method a at /tmp/2XHBWAsUQK:1␤  in block <anon> at /tmp/2XHBWAsUQK:1␤␤»

[09:33] <moritz> \o/

[09:41] <dalek> rakudo/nom: 48c8394 | jonathan++ | src/core/control.pm:

[09:41] <dalek> rakudo/nom: Don't explode when a :lang passed to eval doesn't locate a compiler.

[09:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/48c8394be3

[10:00] *** libertyprime joined
[10:01] <moritz> r: sub f is rw { [1, 2, 3 ] }; .say for f

[10:01] <p6eval> rakudo 507e7f: OUTPUT«1 2 3␤»

[10:01] <moritz> r: sub f  { [1, 2, 3 ] }; .say for f

[10:01] <p6eval> rakudo 507e7f: OUTPUT«1 2 3␤»

[10:03] <pmichaud> > my $x = 'XYZ'; say 'xyz' ~~ /:i $x/

[10:03] <pmichaud> => <xyz>

[10:03] <pmichaud> jnthn:  running w/o icu:

[10:03] <pmichaud> > my $x = 'XYZ'; say 'xyz' ~~ /:i $x/

[10:03] <pmichaud> => <xyz>

[10:03] <jnthn> pmichaud++

[10:03] <jnthn> pmichaud: Works for the non-variable case too?

[10:04] *** JimmyZ joined
[10:04] <dalek> roast: 50b3dbc | moritz++ | S05-match/capturing-contexts.t:

[10:04] <dalek> roast: untodo a now passing test

[10:04] <dalek> roast: review: https://github.com/perl6/roast/commit/50b3dbca10

[10:10] <dalek> nqp: 232518c | pmichaud++ | src/QRegex/Cursor.nqp:

[10:10] <dalek> nqp: Enable case-insensitive literal interpolation for systems w/o ICU.

[10:10] <dalek> nqp: review: https://github.com/perl6/nqp/commit/232518cf66

[10:10] *** infosophy joined
[10:13] * masak is at the hackathon, having a great time

[10:13] <masak> looking out the Window over Oslo, I feel on top of the world ;)

[10:16] *** whiteknight joined
[10:16] <dalek> nqp: a88d0b8 | jonathan++ | src/6model/reprs/CArray.c:

[10:16] <dalek> nqp: Serialize/deserialize CArray representation's REPR data. Should fix pre-compilation of things that use CArray based types.

[10:16] <dalek> nqp: review: https://github.com/perl6/nqp/commit/a88d0b8870

[10:17] *** spider-mario joined
[10:17] <jnthn> moritz: ^^ should help

[10:17] <jnthn> Note you'll need to re-compile

[10:22] *** xenu left
[10:22] *** xenu joined
[10:23] <dalek> nqp: b83d81f | pmichaud++ | src/QRegex/Cursor.nqp:

[10:23] <dalek> nqp: Add the parts of the previous commit that apparently weren't commited.

[10:23] <dalek> nqp: So now we can do case-insensitive literal interpolation.

[10:23] <dalek> nqp: review: https://github.com/perl6/nqp/commit/b83d81fbd7

[10:25] *** aindilis joined
[10:27] *** plobsing joined
[10:32] *** birdwindupbird joined
[10:35] <dalek> rakudo/nom: 1917a7a | jonathan++ | t (2 files):

[10:35] <dalek> rakudo/nom: Set PERL6LIB in the harness, which unbusts running spectest on Windows.

[10:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1917a7a2ba

[10:36] *** araujo joined
[10:36] *** araujo left
[10:36] *** araujo joined
[10:41] *** mdcw` joined
[10:42] *** localhost left
[10:42] <mdcw`> hello

[10:42] <moritz> hi

[10:42] <dalek> rakudo/nom: 5511d03 | moritz++ | tools/autounfudge.pl:

[10:42] <dalek> rakudo/nom: autounfudge needs PERL6LIB=lib too

[10:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5511d03dbd

[10:43] *** cotto joined
[10:45] *** NamelessTee left
[10:47] *** localhost joined
[10:49] <dalek> nqp/qbootstrap: d6e4019 | pmichaud++ | Configure.pl:

[10:49] <dalek> nqp/qbootstrap: Add --parrot-option to Configure.pl.

[10:49] <dalek> nqp/qbootstrap: review: https://github.com/perl6/nqp/commit/d6e4019f00

[10:49] <dalek> nqp: 05b65e9 | pmichaud++ | Configure.pl:

[10:49] <dalek> nqp: Add --parrot-option flags to Configure.pl.

[10:49] <dalek> nqp: review: https://github.com/perl6/nqp/commit/05b65e90f0

[10:50] *** nebuchadnezzar joined
[10:54] *** brrt joined
[10:54] <tadzik> dalek didn't report it, but perl6 --doc=HTML etc now DWYM

[10:54] <jnthn> oh

[10:54] <jnthn> *ooh

[10:54] <jnthn> tadzik++

[10:55] <moritz> tadzik++, dalek--

[10:56] *** machine1 left
[11:05] <masak> r: say Match.^methods

[11:05] <p6eval> rakudo 48c839: OUTPUT«prematch postmatch caps chunks make Str Numeric Bool ACCEPTS perl gist <anon> <anon> <anon> <anon> <anon> at_key at_pos hash list elems Capture FLATTENABLE_LIST FLATTENABLE_HASH pairs values keys kv gist Str Numeric perl BUILD␤»

[11:06] *** machine1 joined
[11:06] <masak> r: "hohohoooo!" ~~ /[<!before '<'> .]+/; say ~$/

[11:06] <p6eval> rakudo 48c839: OUTPUT«hohohoooo!␤»

[11:08] * imarcusthis waves

[11:09] <imarcusthis> in a slow sine.

[11:10] <moritz> _/-\_

[11:11] <moritz> my wave has a bit of high frequency components too :-)

[11:11] <moritz> maybe I should just wave after FFT

[11:11] <moritz> ___|___

[11:11] <moritz> there, perfect sine wave :-)

[11:12] <pmichaud> ...rod logic?

[11:12] <imarcusthis> pmichaud++

[11:12] *** eiro joined
[11:13] <imarcusthis> cloning parrot takes a while.

[11:14] *** brrt left
[11:14] <jnthn> They have a lot of history...

[11:14] <moritz> parrot speaks your language, where "your" changes a lot over time :-)

[11:14] <masak> it's a Parrot. it has a lot to say.

[11:15] <imarcusthis> masak: I thought they mostly repeat what you say.

[11:16] <moritz> well, they repeat your words, but they can communicate with them

[11:17] *** harukomoto joined
[11:17] <imarcusthis> I see rakudo star is still lacking non-blocking io and parallelism?

[11:17] <imarcusthis> did you consider libdispatch / gcd for threading?

[11:17] <moritz> well, the problem with threading is that it needs to come from the VM

[11:17] <jnthn> I thought tadzik had some stuff on non-blocking IO

[11:18] <moritz> yes, a bit

[11:18] <imarcusthis> jnthn: I was only referring to http://rakudo.org/2012/02/28/rakudo-star-2012-02-released/ - things may have changed since february.

[11:18] <imarcusthis> well, almost march :)

[11:18] <tadzik> imarcusthis: there is tiny bit of infrastructure for async io

[11:18] <imarcusthis> tadzik: neat

[11:19] <tadzik> imarcusthis: see http://ttjjss.wordpress.com/2012/04/02/asynchronous-http-in-perl-6/ for example

[11:19] * imarcusthis is building nom atm

[11:19] <dalek> tablets: e145278 | (Herbert Breunung)++ | docs/appendix-a-index.txt:

[11:19] <dalek> tablets: false set braces in flat()

[11:19] <dalek> tablets: review: https://github.com/perl6/tablets/commit/e145278d2d

[11:19] <imarcusthis> let's hope my single-fan mbp won't overheat :)

[11:19] <imarcusthis> tadzik: thanks for the url

[11:19] * masak .oO( fans of Perl 6 )

[11:20] <jnthn> imarcusthis: yeah, I suspect we haven't included the stuff tadzik++ has been doing on that in a nom relesae yet

[11:20] <tadzik> imarcusthis: you can also look at https://github.com/tadzik/MuEvent

[11:20] <tadzik> jnthn: you mean Star release?

[11:20] <imarcusthis> I mean github branch, btw

[11:20] <jnthn> tadzik: yes :)

[11:20] <imarcusthis> (assumed nom was master, as it was checked out by default in the clone)

[11:21] <jnthn> imarcusthis: yes, it is

[11:21] *** benabik left
[11:21] *** noam_ left
[11:21] *** fgomez left
[11:21] *** lumi_ left
[11:21] *** cosimo left
[11:21] *** broquaint left
[11:22] *** lichtkind joined
[11:24] <lichtkind> moritz: HAI

[11:24] <phenny> lichtkind: 06:22Z <moritz> tell lichtkind the cronjob now runs build-html.pl

[11:24] <lichtkind> moritz: thanks

[11:28] *** benabik joined
[11:28] *** noam_ joined
[11:28] *** fgomez joined
[11:28] *** lumi_ joined
[11:28] *** cosimo joined
[11:28] *** broquaint joined
[11:29] <masak> nom: say Cool.can("comb").^name

[11:29] <p6eval> rakudo 626ef2: OUTPUT«Parcel␤»

[11:29] <masak> nom: say Cool.can("comb")[0].^name

[11:29] <p6eval> rakudo 626ef2: OUTPUT«Method␤»

[11:29] <masak> nom: say Cool.can("comb")[0].signature

[11:29] <p6eval> rakudo 626ef2: OUTPUT«:(Cool , Any , Mu %_!)␤»

[11:29] <masak> well, thanks for nuttin' :P

[11:30] * masak goes looking at the source

[11:30] *** derrazo_ left
[11:33] <dalek> rakudo/nom: 271d219 | jonathan++ | src/core/Pair.pm:

[11:33] <dalek> rakudo/nom: Correct a bogus contextualization.

[11:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/271d2193c8

[11:33] <dalek> rakudo/nom: 94ae635 | jonathan++ | src/core/EnumMap.pm:

[11:33] <dalek> rakudo/nom: %h.hash should not make a new hash, just return identify.

[11:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/94ae63536a

[11:33] <dalek> rakudo/nom: fa1ca28 | jonathan++ | src/core/Mu.pm:

[11:33] <dalek> rakudo/nom: The identify .item should not decontainerize.

[11:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fa1ca283bb

[11:33] <dalek> rakudo/nom: 6ef66c9 | jonathan++ | src/Perl6/Actions.pm:

[11:33] <dalek> rakudo/nom: $.foo, @.foo and %.foo should contextualize appropriately.

[11:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6ef66c9521

[11:34] <dalek> tablets: 5168fd8 | (Herbert Breunung)++ | docs/appendix- (2 files):

[11:34] <dalek> tablets: added . as prefix for nonecapturing subrules

[11:34] <dalek> tablets: review: https://github.com/perl6/tablets/commit/5168fd8091

[11:39] *** NamelessTee joined
[11:58] <tadzik> phenny: ask sorear any ideas why dalek is not reporting my rakudo commits?

[11:58] <phenny> tadzik: I'll pass that on when sorear is around.

[12:00] <masak> r: "foo" ~~ /foo/; say $/.text

[12:00] <p6eval> rakudo 626ef2: OUTPUT«Method 'text' not found for invocant of class 'Match'␤  in block <anon> at /tmp/u18UxXtvTe:1␤␤»

[12:00] <masak> r: grammar G { regex TOP { { "foo" ~~ /foo/; say $/.text } } }; G.parse("")

[12:00] <p6eval> rakudo 626ef2: OUTPUT«Error while creating error string: Method 'message' not found for invocant of class 'Any'␤»

[12:00] <masak> moritz: ^

[12:08] * imarcusthis ponders improving perl6 --help

[12:09] <tadzik> well volunteered!

[12:09] <imarcusthis> seems to me it should emit something more similar to man perl6

[12:09] <imarcusthis> tadzik: indeed, I even made a branch

[12:09] <tadzik> awesome

[12:12] <moritz> r: 'a' ~~ /a/; $/.text

[12:12] <p6eval> rakudo 626ef2: OUTPUT«Method 'text' not found for invocant of class 'Match'␤  in block <anon> at /tmp/0s7Be9x65G:1␤␤»

[12:12] <moritz> r: "foo" ~~ /foo/; say $/.text

[12:12] <p6eval> rakudo 6ef66c: OUTPUT«Error while creating error string: Method 'message' not found for invocant of class 'Any'␤»

[12:12] <moritz> r: "foo" ~~ /foo/; $/.text

[12:12] <p6eval> rakudo 6ef66c: OUTPUT«Error while creating error string: Method 'message' not found for invocant of class 'Any'␤»

[12:13] *** fgomez left
[12:13] <moritz> huh. Why does it need "foo" to fail at erroring?

[12:14] <jnthn> r: "bar" ~~ /bar/; say $/.text

[12:14] <p6eval> rakudo 6ef66c: OUTPUT«Error while creating error string: Method 'message' not found for invocant of class 'Any'␤»

[12:14] <jnthn> A bar will do too

[12:15] <masak> wtf

[12:15] <masak> r: "bar" ~~ /bar/; $/.text

[12:15] <p6eval> rakudo 6ef66c: OUTPUT«Error while creating error string: Method 'message' not found for invocant of class 'Any'␤»

[12:15] <moritz> r: 'ab' ~~ /ab/; $/.text

[12:15] <p6eval> rakudo 6ef66c: OUTPUT«Error while creating error string: Method 'message' not found for invocant of class 'Any'␤»

[12:16] <moritz> r: 'ab' ~~ /a/; $/.text

[12:16] <p6eval> rakudo 6ef66c: OUTPUT«Error while creating error string: Method 'message' not found for invocant of class 'Any'␤»

[12:16] <moritz> r: 'a' ~~ /a/; $/.text

[12:16] <p6eval> rakudo 6ef66c: OUTPUT«Error while creating error string: Method 'message' not found for invocant of class 'Any'␤»

[12:16] <moritz> oh, it recompiled rakudo inbetween

[12:16] <masak> r: my $s = "it escapes things like & for you! &, &, &!"; $s ~~ s:g['&'] = '&amp;'; say $s

[12:16] <p6eval> rakudo 6ef66c: OUTPUT«it escapes things like &amp; for you! &amp;, &amp;, &amp;!␤»

[12:16] <masak> that's just *so cool*.

[12:16] <masak> I can't really get over how cool that is.

[12:17] <moritz> my first execution used rakudo 626ef2, the later ones 6ef66c

[12:17] <masak> moritz++

[12:17] <sjn> pmichaud: I've dumped some of my thoughts on yesterday's crazy discussion on http://code.foo.no/ :)

[12:24] *** plobsing left
[12:26] * imarcusthis has been hacking on perl6 for 10 minutes, and is already ready for a drink.

[12:26] <imarcusthis> no heredocs? wat

[12:26] <tadzik> not yet :)

[12:27] <imarcusthis> what about __DATA__ ?

[12:28] <JimmyZ> no 

[12:28] <imarcusthis> how do you output multiple lines of text then? a bunch of say lines? :)

[12:28] <tadzik> or just stick \n in a string :)

[12:29] <tadzik> maybe just 'say "' <newline newline newline> '";'

[12:30] <imarcusthis> starting to$!usage := $!usage ~ "    $_\n";

[12:30] <tadzik> naah, don't

[12:30] <imarcusthis> is this because you don't have anything like $foo .= ?

[12:30] <tadzik> imarcusthis: how about just https://gist.github.com/2436884 ?

[12:30] <tadzik> imarcusthis: there's ~= for that

[12:30] <imarcusthis> tadzik: that's great actually

[12:31] <JimmyZ> .= ? it's not php 

[12:31] <tadzik> it's not Perl 5 either :)

[12:31] *** Teratogen joined
[12:31] <imarcusthis> JimmyZ: perl -lE'$_="foo";$_ .=" bar"; say $_'  

[12:33] * JimmyZ did not know perl much .....

[12:33] <JimmyZ> perl 5

[12:34] <imarcusthis> Alas, poor Yorick.

[12:35] <imarcusthis> btw, how come this doesn't throw an error: "perl6 -Ilib example.pl"

[12:36] <imarcusthis> it doesn't seem to modify the include path either

[12:36] <tadzik> imarcusthis: it's just that -I is NYI

[12:36] <tadzik> imarcusthis: you can use PERL6LIB=lib perl6 example.pl

[12:37] <tadzik> should be quite implementable, I think

[12:37] <imarcusthis> tadzik: just -I throws an error about "No such option"

[12:37] <tadzik> correct

[12:37] <tadzik> there is no such option :)

[12:37] <imarcusthis> tadzik: so why doesn't -Ilib throw the same error_

[12:39] <imarcusthis> anyways, MuEvent runs here now. yay

[12:39] <imarcusthis> It does seem like it is bored too :)

[12:42] <dalek> rakudo/nom: 7c97944 | jonathan++ | src/Perl6/ (2 files):

[12:42] <dalek> rakudo/nom: Fix combination of state declarator and list assignment.

[12:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7c97944a21

[12:42] <tadzik> imarcusthis: hmm, no eye deer :)

[12:42] <tadzik> I guess -Ilib doesn't play well with HLL::Compiler, which accepts either -I or --Ilib

[12:42] <imarcusthis> a blind deer!

[12:43] <tadzik> that's why it's different

[12:43] <tadzik> it should be quite possible to implement -I=lib, if we have a way to setenv() from nqp

[12:43] <tadzik> and then it probably won't be windows-friendly again :)

[12:44] <imarcusthis> https://gist.github.com/2436933

[12:45] <masak> r: my $value = "foo"; my $string = "I have a foo under my bed, foo!"; $string ~~ s:g/<$value>/ = "bar"; say $string

[12:45] <p6eval> rakudo 6ef66c: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix = instead at line 1, near " \"bar\"; sa"␤»

[12:45] <masak> r: my $value = "foo"; my $string = "I have a foo under my bed, foo!"; $string ~~ s:g[<$value>] = "bar"; say $string

[12:45] <p6eval> rakudo 6ef66c: OUTPUT«I have a bar under my bed, bar!␤»

[12:45] <masak> \o/

[12:47] <JimmyZ> how to explain it?

[12:47] <imarcusthis> JimmyZ: masak has a bar under his bed.

[12:48] <JimmyZ> hmm, How it works 

[12:50] <tadzik> imarcusthis: cool!

[12:50] <tadzik> imarcusthis: however, that's nqp, not perl6, right?

[12:50] <tadzik> (the file)

[12:50] <JimmyZ> r: my $value = "foo";  $_ = "I have a foo under my bed, foo!";  s:g[<$value>]  = "bar"; say $_

[12:50] <p6eval> rakudo 6ef66c: OUTPUT«I have a bar under my bed, bar!␤»

[12:51] <imarcusthis> tadzik: yes. It was the only place I found the output in the perl6 source dir, so I assumed it got it from nqp

[12:52] <tadzik> hm

[12:52] <tadzik> imarcusthis: let me take a look at this

[12:53] <tadzik> imarcusthis: okay, I got this. In nqp, see src/HLL/Compiler.pm, line 299

[12:53] <tadzik> it says: self.usage($program-name) if %adverbs<help>  || %adverbs<h>;

[12:54] <tadzik> so what you need to do is to redefine method usage() in Perl6/Compiler.nqp (I think)

[12:54] <imarcusthis> tadzik: yeah, that is the file I'm working on.

[12:54] *** thelazydeveloper joined
[12:54] <dalek> rakudo/nom: 754e4a0 | moritz++ | src/core/Backtrace.pm:

[12:54] <dalek> rakudo/nom: succeed in creating error message much more often

[12:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/754e4a052b

[12:54] <imarcusthis> tadzik: can't they just use the same text?

[12:54] <tadzik> imarcusthis: well, now you made everything that uses HLL::Compiler print help for Rakudo Perl 6

[12:55] *** fglock joined
[12:55] <imarcusthis> tadzik: I see.

[12:55] <tadzik> and what you really want is just to make Rakudo act differently than the default

[12:55] <moritz> note that you can add a method to src/Perl6/Compiler.nqp

[12:56] <moritz> which inherits from HLL::Compiler

[12:56] <imarcusthis> yupp

[12:56] <imarcusthis> I'm doing that now

[12:56] <tadzik> great, imarcusthis++

[12:56] *** Patterner left
[12:57] <masak> r: my $s = "siht si yrev gnitseretni"; $s ~~ s:g[(\w+)] = (my $c = $0; $c.flip.uc); say $s

[12:57] <p6eval> rakudo 6ef66c: OUTPUT«THIS IS VERY INTERESTING␤»

[13:02] <masak> TimToady: BEGIN inside a quasi -- runs at quasi-parse, or at quasi-apply?

[13:03] <masak> TimToady: there are arguments for either. quasi-parse is "as early as possible". quasi-apply is where the BEGIN block would fire if we assume that the quasi isn't "concrete code" until it gets applied in some actual code.

[13:04] *** Psyche^ joined
[13:04] *** Psyche^ is now known as Patterner

[13:06] <tadzik> r: %*ENV<FOO> = "bar"; shell 'echo foo $FOO'

[13:06] <p6eval> rakudo 6ef66c: OUTPUT«Error while creating error string: Method 'message' not found for invocant of class 'Any'␤»

[13:06] <tadzik> evalbot rebuild nom

[13:06] <p6eval> OK (started asynchronously)

[13:06] <masak> evalbot rebuild my entire secret robot army

[13:07] *** sftp left
[13:08] <moritz> tadzik: it says it does that, but it doesn't actually :(

[13:09] <tadzik> I see

[13:09] <Teratogen> good morning

[13:10] <masak> Teratogen! \o/

[13:10] <Teratogen> masak!

[13:13] <masak> we're in Oslo, doing a hackathon!

[13:14] <tadzik> \o/

[13:15] <tadzik> if anyone's looking for an LHF: https://github.com/tadzik/perl6-File-Tools/blob/master/lib/Shell/Command.pm#L25

[13:15] <tadzik> as in: implementing rm_rf would be nice and easy and helpful to me :)

[13:15] <Teratogen> I hear Norwegian chicks are hawt!

[13:15] *** lichtkind_ joined
[13:16] <tadzik> I see no chicks :(

[13:16] <masak> Teratogen: we're currently discussing whether to kickban you. please behave.

[13:16] <Teratogen> now what did I do?

[13:18] *** lichtkind left
[13:18] *** lichtkind_ is now known as lichtkind

[13:19] <imarcusthis> Teratogen: you implied perl6 hackers care about girls. (ick)

[13:19] <imarcusthis> >D

[13:19] *** bjarneh joined
[13:19] <tadzik> well, I think what masak meant is that what you say may offend some women, which we would really not want

[13:20] <tadzik> (correct me if I'm wrong)

[13:23] <imarcusthis> Isn't that a compliment to norwegian women? 

[13:24] <moritz> some women might take it as such; others might take it as reducing their value to sexuality

[13:24] * imarcusthis has realized he has to be a feminist, with a second daughter on the way.

[13:24] <tadzik> imarcusthis: I would read it as such, but it's not me who gets offended eventually

[13:26] <masak> r: sub foo($t) { $t ~~ s:g[foo] = "bar" }; grammar G { regex TOP { { my $s = "OH HAI, foo!"; foo($s) } } }; G.parse("")

[13:26] <p6eval> rakudo 754e4a: OUTPUT«Error while creating error string: Method 'message' not found for invocant of class 'Any'␤»

[13:26] <masak> moritz: ^

[13:26] *** plobsing joined
[13:28] <masak> Teratogen's utterance was offensive against Norwegian poultry.

[13:28] *** isBEKaml joined
[13:30] <isBEKaml> Hello, #perl6! What's going on Hakkathon? :)

[13:31] <masak> isBEKaml! \o/

[13:31] <isBEKaml> yo, masak! you at hackathon too?

[13:31] <masak> aye

[13:31] <imarcusthis> masak: yes. our poultry is very cold, and lacks creature comforts.

[13:32] <jnthn> Wait, what, now I'm confused...is Norwegian poultry hot or cold?

[13:32] <masak> imarcusthis: I think this is a problem in many places.

[13:32] <jnthn> .oO( Guess it depends if you cook it )

[13:32] <isBEKaml> jnthn: I think you're in for a frigid meal. ;)

[13:33] <dalek> rakudo/nom: 096cf7d | (Marcus Ramberg)++ | src/Perl6/Compiler.nqp:

[13:33] <dalek> rakudo/nom: Better help for perl6 binary

[13:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/096cf7da81

[13:33] <dalek> rakudo/nom: b1f5835 | moritz++ | src/Perl6/Compiler.nqp:

[13:33] <dalek> rakudo/nom: Merge pull request #61 from marcusramberg/improve_help

[13:33] <dalek> rakudo/nom: 

[13:33] <dalek> rakudo/nom: Better help for perl6 binary

[13:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b1f5835670

[13:37] *** NamelessTee left
[13:39] *** BigBear joined
[13:49] <TimToady> masak: maybe means we need two phasers there

[13:49] <masak> nnnnnnnaaaaarrrghh

[13:49] <jnthn> QBEGIN

[13:50] <pmichaud> QBEGIN!

[13:50] <moritz> QBEGIN!

[13:50] * masak explodes

[13:50] * TimToady has admittedly had no coffee yet

[13:50] <pmichaud> hacking has now ceased in Oslo due to uncontrollable fits of laughter.

[13:50] <pmichaud> and also concern that TimToady++ might be serious :)

[13:51] <moritz> TimToady: I had the same answer to masak++ when he asked his question in RL :-)

[13:51] * TimToady <-- glad to be of entertainment value at least

[13:52] <masak> I think that QBEGIN is a bad idea until we have use cases for both possible semantics.

[13:53] *** icwiener joined
[13:53] <masak> until then, BEGIN will mean whatever is most convenient for whoever implements macros in Rakudo ;)

[13:53] <TimToady> in a sense {{{}}} is running QBEGINishly already

[13:53] *** grondilu joined
[13:54] * TimToady goes to get caffiene to see whether that's a stupid notion

[13:54] <dalek> rakudo/nom: 501e401 | jonathan++ | src/Perl6/ (2 files):

[13:54] <dalek> rakudo/nom: Fix constant initializers that include a block.

[13:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/501e401988

[13:56] <dalek> nqp: b6a9303 | pmichaud++ | / (3 files):

[13:56] <dalek> nqp: Bump PARROT_REVISION to get latest Parrot upcase/downcase improvements for non-ICU environments.

[13:56] <dalek> nqp: Also back out extra transcoding step for case-insensitive interpolations.

[13:56] <dalek> nqp: review: https://github.com/perl6/nqp/commit/b6a9303f66

[13:56] <moritz> hugme: add torehaug to mberends

[13:56] <hugme> moritz: You need to register with freenode first

[13:57] <moritz> hugme: add torehaug to MiniDBI

[13:57] * hugme hugs torehaug. Welcome to MiniDBI!

[13:59] *** whiteknight left
[14:01] *** isBEKaml left
[14:01] *** isBEKaml joined
[14:02] <imarcusthis> tadzik: I have another improvement suggestion, for --doc - http://pastie.textmate.org/private/tcklbs6slheb2at8u9yqsa 

[14:02] *** PacoAir joined
[14:02] <imarcusthis> tadzik: unless it's crack-fueled, could you point me towards a good place to start looking at implementing this?

[14:03] <tadzik> imarcusthis: looks cool

[14:03] <pmichaud> ...is that valid Perl 6?

[14:04] <tadzik> pmichaud: what do you mean?

[14:04] <pmichaud> the use of the colons to denote docs (I think)

[14:05] *** icwiener left
[14:05] <imarcusthis> pmichaud: you mean #= ?

[14:05] *** icwiener joined
[14:05] <tadzik> imarcusthis: look at https://github.com/rakudo/rakudo/blob/nom/lib/Pod/To/Text.pm#L73

[14:06] <tadzik> imarcusthis: add a few \n there and you're done :)

[14:06] <pmichaud> nm... I was looking at the output and thinking it was source

[14:06] <pmichaud> tadzik++ # for setting me straight

[14:06] <tadzik> imarcusthis: you may need to do s/\s/\n/ in $_.signature somewhat

[14:06] <pmichaud> and yes, it looks very cool

[14:06] <jnthn> cd ..

[14:06] <jnthn> oop

[14:06] <tadzik> (that's where the subroutine parameters stringification comes from)

[14:06] <imarcusthis> tadzik: great, thanks. :)

[14:06] <tadzik> imarcusthis: I really like it, it makes output much more readable

[14:07] *** NamelessTee joined
[14:07] <tadzik> ohh, you mean to remove Any as well?

[14:07] <tadzik> and a bit more mangling as I see

[14:07] <imarcusthis> yes

[14:08] <moritz> the signature printing improvements would need to go into src/core/Paremeter.pm method perl

[14:08] <tadzik> can't say I disapprove :) although you may need to reimplement .signature more than just regex-modify it after that

[14:08] <tadzik> indeed

[14:08] <imarcusthis> remove Any, remove the ':', rewrite :foo(:$foo)' as :$foo

[14:08] <dalek> rakudo/nom: 59b31b6 | pmichaud++ | tools/build/NQP_REVISION:

[14:08] <dalek> rakudo/nom: Bump NQP_REVISION to get latest case-insensitive improvements for non-icu environments.

[14:08] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/59b31b6365

[14:08] <moritz> and other parts (error messages, for example) would benefit from an improved Parameter.perl too

[14:09] <imarcusthis> cool

[14:09] <tadzik> imarcusthis: erm, remove which ':'? The very leading one?>

[14:09] <imarcusthis> tadzik: no, the one I replace with \n

[14:09] <tadzik> oh, sure

[14:10] <tadzik> but that's just Pod::To::Text, no Signature.perl itself

[14:10] <tadzik> but it's a good idea indeed

[14:13] <dalek> nqp: 7cd7557 | pmichaud++ | tools/build/PARROT_REVISION:

[14:13] <dalek> nqp: Revert PARROT_REVISION to released version; I was a little too eager with the previous bump.

[14:13] <dalek> nqp: 

[14:13] <dalek> nqp: We can bump PARROT_REVISION later (e.g., after the R* release).

[14:13] <dalek> nqp: Using the older PARROT_REVISION means that non-ICU users won't

[14:13] <dalek> nqp: get the Parrot improvements, but we'll still be able to make

[14:13] <dalek> nqp: releases based on latest Parrot.

[14:13] <dalek> nqp: review: https://github.com/perl6/nqp/commit/7cd7557b5d

[14:14] *** harukomoto left
[14:14] *** isBEKaml left
[14:19] <dalek> nqp: ac3e430 | jonathan++ | src/6model/reprs/CArray.c:

[14:19] <dalek> nqp: Need to be lazier about calling fill_repr_data in CArray; last patch made things a bit too eager.

[14:19] <dalek> nqp: review: https://github.com/perl6/nqp/commit/ac3e4307eb

[14:21] <tadzik> generated using 2 small scripts: http://tjs.azalayah.net/new.html

[14:21] <tadzik> masak: you may happen to like this :)

[14:22] <jnthn> сырsly awesome! tadzik++

[14:22] <tadzik> :)

[14:22] <masak> tadzik++

[14:22] *** Chillance joined
[14:26] <dalek> perl6-examples: ab8c861 | (Filip Sergot)++ | best-of-rosettacode/hailstone-sequence.pl:

[14:26] <dalek> perl6-examples: best-of-rosettacode/hailstone-sequence.pl

[14:26] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/ab8c861be8

[14:30] <dalek> perl6-examples: bef4145 | (Filip Sergot)++ | best-of-rosettacode/hailstone-sequence.pl:

[14:30] <dalek> perl6-examples: best-of-rosettacode/hailstone-sequence.pl

[14:30] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/bef4145f0e

[14:33] *** grondilu left
[14:33] <pmichaud> I'm wondering if we should make --stagestats a permanent part of the core.setting compilation step

[14:34] <pmichaud> It would help to show progress as that (very long) step is taking place

[14:35] <imarcusthis> pmichaud: sounds useful to me.

[14:36] <imarcusthis> either that or make it really fast ;-)

[14:36] <pmichaud> well, the second would be better, yes.  But it's taking us a long time to make it really fast.  :)

[14:37] <jnthn> It's not really fast now, but it's faster than it was. :)

[14:37] <jnthn> I'm curious about the proportions.

[14:37] * imarcusthis has been waiting for it to complete for this entire conversation =)

[14:37] <jnthn> (how much time we spend in each stage)

[14:38] <pmichaud> most of it is still in "parse"  (which is really "parse" + "create ast" + "BEGIN" + ... )

[14:39] <jnthn> pmichaud: Well, a lot of it was in the later stages, before we got bs.

[14:39] <jnthn> (Because we used to make twice as many PAST nodes and thus POST nodes)

[14:39] <dalek> rakudo/nom: 0d3220f | pmichaud++ | tools/build/Makefile.in:

[14:39] <dalek> rakudo/nom: Make --stagestats a permanent part of the setting compilation, to provide a progress indicator of sorts.

[14:39] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0d3220fb78

[14:40] <dalek> nqp: 09bf632 | jonathan++ | src/6model/reprs/CStruct.c:

[14:40] <dalek> nqp: Do just enough to make sure serializing modules that declare something with the CStruct REPR should not go awry.

[14:40] <dalek> nqp: review: https://github.com/perl6/nqp/commit/09bf632c1a

[14:40] *** icwiener left
[14:41] *** icwiener joined
[14:41] *** mucker joined
[14:41] <mucker> o/ #perl6

[14:41] <tadzik> hello

[14:42] <dalek> rakudo/nom: 06d40a0 | moritz++ | src/core/ (2 files):

[14:42] <dalek> rakudo/nom: Make backtrace printing more robust

[14:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/06d40a0196

[14:42] <icwiener> Hi.

[14:43] <JimmyZ> aloha

[14:43] <masak> r: my $m; $m max= 42 => 5

[14:43] <p6eval> rakudo 501e40: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \$v, Mu %_!)␤␤  in method Numeric at src/gen/CORE.setting:648␤  in sub infix:<==> at src/gen/CORE.setting:2384␤  in sub infix:<cmp> at src/gen/CORE.setting:1256␤  in method max at src/gen/CORE.setting:10…

[14:44] <fsergot> Is there any solution masak? :)

[14:45] <masak> r: +(42 => 5)

[14:45] <p6eval> rakudo 501e40: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \$v, Mu %_!)␤␤  in method Numeric at src/gen/CORE.setting:648␤  in sub prefix:<+> at src/gen/CORE.setting:2192␤  in block <anon> at /tmp/7uPTpOZ4vF:1␤␤»

[14:45] <moritz> r: my $m = (-Inf) => (-Inf); $m max= 42 => 5; say $m

[14:45] <p6eval> rakudo 501e40: OUTPUT«42 => 5␤»

[14:45] <masak> oh, it's even simpler.

[14:45] <masak> moritz: right, there it doesn't numify :)

[14:46] <masak> but... why would max= numify?

[14:46] <moritz> yes. "Doctor, it hurts when I numify my pairs" :-)

[14:46] <masak> yes.

[14:46] <masak> fsergot++

[14:46] * masak submits rakudobug

[14:46] <icwiener> I want to include a small test file into one of my test cases. I found "Q :to 'EOT'" for that but when I try to run the test, it complains that "Colons may not be used to delimit quoting constructs". Is the info on http://www.perlfoundation.org/perl6/index.cgi?perl_6_basics_tablet#heredocs wrong or do I miss something here?

[14:47] <moritz> icwiener: heredocs simply aren't implemented in Rakudo

[14:47] <pmichaud> r:  my $m;  say $m max (42 => 5)

[14:47] <p6eval> rakudo 501e40: OUTPUT«42 => 5␤»

[14:48] <moritz> icwiener: it tries to parse it as  Q<delimiter>...<delimiter>, and then complains that : isn't a valid <delimiter>

[14:48] <icwiener> moritz: Oh, that explains it. :)

[14:48] <pmichaud> r:  my $m;  $m max= (42 => 5)

[14:48] <p6eval> rakudo 501e40: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \$v, Mu %_!)␤␤  in method Numeric at src/gen/CORE.setting:648␤  in sub infix:<==> at src/gen/CORE.setting:2384␤  in sub infix:<cmp> at src/gen/CORE.setting:1256␤  in method max at src/gen/CORE.setting:10…

[14:48] <icwiener> icwiener: Yep, makes sense.

[14:49] <icwiener> icwiener: So I guess I fill in the content line-wise, then?

[14:49] <imarcusthis> wow, make spits out a lot of warnings now :)

[14:49] <pmichaud> you can always do   Q{   }

[14:49] <imarcusthis> feels much faster!

[14:49] <pmichaud> or qq{   }

[14:49] <icwiener> pmichaud: reading...

[14:50] <pmichaud> r:  say qq{{  this is a string with curlies } that can span multiple lines }}

[14:50] <p6eval> rakudo 501e40: OUTPUT«  this is a string with curlies } that can span multiple lines ␤»

[14:51] <dalek> perl6-examples: 7f7a7c5 | (Filip Sergot)++ | best-of-rosettacode/hailstone-sequence.pl:

[14:51] <dalek> perl6-examples: hailstone-sequence.pl works.

[14:51] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/7f7a7c5550

[14:59] <icwiener> pmichaud: But I have to account for stuff that looks like variable names, right?

[14:59] <pmichaud> if you use qq, yes.

[14:59] <pmichaud> but you can use q{{ }}  if you want to avoid that

[14:59] *** nif joined
[14:59] <pmichaud> r:  say q{{ This has $var names in it }}

[14:59] <p6eval> rakudo 501e40: OUTPUT« This has $var names in it ␤»

[14:59] <JimmyZ> how Perlito/src6 is executed?

[14:59] <JimmyZ> by using rakudo?

[15:00] <masak> I believe it's bootstrapping.

[15:00] <icwiener> pmichaud: Cool, thanks. :)

[15:01] <JimmyZ> I don't know how to run Perlito/src6 ..

[15:05] *** nif left
[15:07] <dalek> rakudo/nom: c89ce89 | moritz++ | src/core/Backtrace.pm:

[15:07] <dalek> rakudo/nom: finally fix masak++'s example of failed error reporting

[15:07] <dalek> rakudo/nom: 

[15:07] <dalek> rakudo/nom: also use .DEFINITE instead of .defined

[15:07] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c89ce89a91

[15:08] *** nif joined
[15:09] *** fsergot left
[15:09] <tadzik> r: "Everything's fine \o/"

[15:09] <p6eval> rakudo 501e40: OUTPUT«===SORRY!===␤Unrecognized backslash sequence: '\o' at line 1, near "/\""␤»

[15:09] <tadzik> hehe

[15:09] *** nif left
[15:10] *** nif joined
[15:12] <moritz> r: say -Inf max 'foo'

[15:12] <p6eval> rakudo 501e40: OUTPUT«foo␤»

[15:12] <moritz> r: say -Inf max 'ZZZ'

[15:12] <p6eval> rakudo 501e40: OUTPUT«ZZZ␤»

[15:12] <moritz> r: say -Inf max 5 => 5

[15:12] <p6eval> rakudo 501e40: OUTPUT«5 => 5␤»

[15:12] <masak> r: say (-Inf) but (+Inf) # hee hee

[15:12] <p6eval> rakudo 501e40: OUTPUT«-Inf␤»

[15:13] <moritz> masak: that just installs a .Num method that return +Inf, or so

[15:13] *** agentzh left
[15:13] <moritz> r: say ((-Inf) but Inf).Num

[15:13] <p6eval> rakudo 501e40: OUTPUT«Inf␤»

[15:13] <pmichaud> r: say -Inf cmp 42 => 5;

[15:13] <infosophy> what is an idiomatic way of creating a temporary file for testing file statistics? (modification time etc.)

[15:13] <p6eval> rakudo 501e40: OUTPUT«-1 => 5␤»

[15:13] <pmichaud> r: say -Inf cmp (42 => 5);

[15:13] <p6eval> rakudo 501e40: OUTPUT«-1␤»

[15:14] <masak> infosophy: moritz will know more, but...

[15:14] <masak> infosophy: I think there are a few cases like this in the spectests already.

[15:14] <pmichaud> say &infix:<cmp>(-Inf, (42=>5))

[15:14] <masak> there should be a bit of prior art.

[15:14] <pmichaud> r: say &infix:<cmp>(-Inf, (42=>5))

[15:14] <p6eval> rakudo 501e40: OUTPUT«-1␤»

[15:14] *** nif left
[15:14] <moritz> infosophy: currently we just attach $*PID to a temp file name which is specific to that test file

[15:14] <pmichaud> say (&infix:<max>(), (42=>5)).max

[15:14] <pmichaud> r: say (&infix:<max>(), (42=>5)).max

[15:14] <p6eval> rakudo 501e40: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \$v, Mu %_!)␤␤  in method Numeric at src/gen/CORE.setting:648␤  in sub infix:<==> at src/gen/CORE.setting:2384␤  in sub infix:<cmp> at src/gen/CORE.setting:1256␤  in method max at src/gen/CORE.setting:10…

[15:15] <pmichaud> r: say &infix:<max>()

[15:15] <p6eval> rakudo 501e40: OUTPUT«-Inf␤»

[15:15] <moritz> ie a t/03-stats.t would create a temp file  't-03-stats-tmp-' ~ $*PID ~ '.temp'   or so

[15:15] <moritz> wait, we call them temp-03-stats-$*PID.temp

[15:15] <moritz> but the name doesn't matter much

[15:15] <infosophy> moritz: gotcha. I'll look for it in the spectests.

[15:16] <moritz> it's just a good idea to have some hint about which test file it creates

[15:16] <moritz> so if they are left behind, you know where to investigate

[15:17] <infosophy> yup. I'll go by the prior art to see where the files are placed (and what cleanup is performed)

[15:17] <moritz> the cleanup is just   try unlink $temp-filename;

[15:22] <pmichaud> r: say &infix:<cmp>(-Inf, (42 => 5))

[15:22] <p6eval> rakudo c89ce8: OUTPUT«-1␤»

[15:22] <pmichaud> r: say &infix:<cmp>((42 => 5), -Inf)

[15:22] <p6eval> rakudo c89ce8: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \$v, Mu %_!)␤␤  in method Numeric at src/gen/CORE.setting:648␤  in sub infix:<==> at src/gen/CORE.setting:2384␤  in sub infix:<cmp> at src/gen/CORE.setting:1256␤  in block <anon> at /tmp/cljmG63PB1:1␤␤»…

[15:22] <imarcusthis> re doc, this is what I have now : https://gist.github.com/2437709

[15:23] <mucker> JimmyZ: I think, this is how bootstrapping works. First you use rakudo to compile src6. But within src6 itself there is a translater for perl6 to perl5. So after the initial rakudo bit, we no longer need rakudo. After getting the first compiler using rakudo, I beleive, fglock generated used it to generate the perl6 to perl5 compiler. It's get's really hairy after that because if new perl5 compiler can be used to parse perl6 too ! You can see the util-perl5 

[15:23] <mucker> directory to see the bootstraping procedure 

[15:23] <tadzik> imarcusthis: awesome!

[15:23] <moritz> imarcusthis++

[15:23] <moritz> there's still a tiny problem

[15:23] <tadzik> imarcusthis: not doing \n inside parameter list after all?

[15:23] <imarcusthis> not sure how I can reformat the whitespace in the method signatures, maybe just use a subst in the pod.

[15:23] <moritz> Callable &cb   actually means a Callable (implied by the &) which returns a Callable

[15:23] <tadzik> imarcusthis: well, how did you modify them?

[15:24] *** sergot joined
[15:24] <fglock> hi

[15:24] <phenny> fglock: 20 Apr 23:51Z <japhb_> tell fglock rc-forest-fire now works with perlito5.pl, and quite quickly too.  However, for perlito5.js, it gets through the compile but dies at runtime (after printing the starting map) with this error: Warning: TypeError: Object [object Object] has no method 'next'

[15:24] <phenny> fglock: 20 Apr 23:54Z <japhb_> tell fglock And you might have thought it succeeded too fast to see because you supplied no arguments telling it forest size and iteration count.  The tested command is:   node perlito5.js -Isrc5/lib /path/to/perl6-bench/perl5/rc-forest-fire 30 20 100

[15:24] <phenny> fglock: 20 Apr 23:55Z <japhb_> tell fglock er ... "30 20 10"

[15:24] <imarcusthis> moritz: you mean it should drop Callable as well because it's already implied by '&'?

[15:25] <imarcusthis> tadzik: I'm not modifying the list yet, just the individual elements.

[15:25] <mucker> fglock :)

[15:25] <moritz>  imarcusthis yes

[15:25] <moritz> imarcusthis: as well as 'Positional' for @ and 'Assocative' for %

[15:26] *** xinming_ left
[15:27] <dalek> nqp/toqast: 29da48d | jonathan++ | / (3 files):

[15:27] <dalek> nqp/toqast: Stub in QAST::Block and QAST::Stmts.

[15:27] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/29da48de2b

[15:27] <fglock> re bootstrap, the initial bootstrap was done by translating p6 to p5 by hand

[15:27] <tadzik> imarcusthis: I see

[15:27] <tadzik> imarcusthis: so digging in Parameter.pm, right?

[15:28] <imarcusthis> tadzik: yes

[15:28] <tadzik> cool

[15:28] <tadzik> fglock: Knuth style ;)

[15:28] <mucker> fglock: wicked

[15:29] <masak> https://github.com/petdance/vim-perl

[15:29] <dalek> perl6-examples: 80e1d29 | (Filip Sergot)++ | other/combinations.pl:

[15:29] <dalek> perl6-examples: masak++ \'s combinations solution.

[15:29] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/80e1d29915

[15:31] <fglock> the original file was called iterator_engine, there is a copy in feather at /home/fglock/iterator_engine

[15:32] <fglock> there is a long README and a TODO list :)

[15:33] <dalek> perl6-examples: 9a1be5b | (Filip Sergot)++ | README:

[15:33] <dalek> perl6-examples: Added other dir.

[15:33] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/9a1be5bf65

[15:34] <fglock> "2006-02-26: - working Perl 6 compiler - about 100 lines of code are now written in perl6" - that's 6 years ago

[15:36] <imarcusthis> re hot norwegian chicks - http://www.youtube.com/watch?v=d-N9daqANcw&feature=g-vrec&context=G2ed613aRVAAAAAAAAAg

[15:37] <fglock> re running src6 - README-perlito6 has instructions on how to transform src6 into runnable code (p5, python, or js)

[15:38] <fglock> src6 should eventually be runnable by rakudo or niecza, I think

[15:40] <jaffa4> fglock: do you accept some advice?

[15:41] <fglock> yes, please

[15:41] <fglock> re no method 'next': probably because next LABEL is not implemented yet in js

[15:46] <tadzik> new, more descriptive contents on http://tjs.azalayah.net/new.html Does anyone have any ideas which boxes should end up being yellow rather than red?

[15:48] *** Psyche^ joined
[15:51] *** Patterner left
[15:51] *** Psyche^ is now known as Patterner

[15:51] <fglock> jaffa4: what is the advice?

[15:51] <jaffa4> private window?

[15:52] <imarcusthis> Hmm, seems there is no $SIG_ELEM_CALLABLE_SIGIL

[15:52] <jaffa4> fglock: can you see what?

[15:53] <jaffa4> what -> that

[15:54] <fglock> no, let me login using irssi

[15:55] *** fglock left
[15:55] *** fglock_ joined
[15:55] <imarcusthis> moritz: seems you cannot check for '&' sigil in Parameter.pm at the moment.

[15:56] <dalek> ecosystem: cc1b79f | (Filip Sergot)++ | META.list:

[15:56] <dalek> ecosystem: Text::Markdown

[15:56] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/cc1b79fd06

[15:56] <moritz> imarcusthis: wow, indeed

[15:56] *** zhangkaizhao joined
[15:56] <imarcusthis> moritz: guess it would have to be added to World.pm

[15:56] *** zhangkaizhao left
[15:57] <moritz> imarcusthis: maybe you can use   self.name.substr(0, 1) eq '&'

[15:57] *** zhangkaizhao joined
[15:57] <moritz> imarcusthis: though it's something we should discuss with jnthn++ at some point

[15:57] *** fglock_ left
[15:57] *** icwiener left
[15:57] <moritz> it feels oddly asymmetric, but maybe there's a good reason ($, % and @ muck with itemness, & does not)

[15:58] *** zhangkaizhao left
[15:58] *** fglock joined
[15:58] <fglock> jaffa4: can you try again

[15:59] *** zhangkaizhao joined
[16:07] <dalek> perl6-examples: bd9bf92 | (Salve J. Nilsen)++ | / (4 files):

[16:07] <dalek> perl6-examples: Two new niecza-only examples from fsergot++

[16:07] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/bd9bf92653

[16:07] <dalek> perl6-examples: af51ac7 | (Salve J. Nilsen)++ | / (3 files):

[16:07] <dalek> perl6-examples: Merge remote-tracking branch 'origin/master'

[16:07] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/af51ac7e36

[16:20] *** machine1 left
[16:23] *** jaffa4 left
[16:26] *** machine1 joined
[16:27] *** sirhc joined
[16:28] *** tokuhirom left
[16:28] *** tokuhirom joined
[16:33] *** tokuhirom left
[16:34] <krunen> Pizza is served!

[16:35] <tadzik> \o/

[16:36] <cognominal_> bon apétit

[16:37] <cognominal_> G grand. a petit   # pun

[16:40] *** vlixes joined
[16:42] <cognominal_> what is a OwnedHash?

[16:43] *** birdwindupbird left
[16:47] *** icwiener joined
[16:48] *** fod joined
[16:52] *** JimmyZ left
[16:53] *** fod left
[16:54] <tadzik> haha

[16:54] <tadzik> 3rd time this question is asked :)

[16:54] <tadzik> http://irclog.perlgeek.de/perl6/2012-04-20#i_5470326

[16:54] <tadzik> cognominal_: ^

[16:55] <cognominal_> sorry, I failed to backlog even if I watch the patch comming by

[16:55] <tadzik> seen colomon?

[16:55] <aloha> colomon was last seen in #perl6 1 days ago saying "Ulti: I think so.  (Not my area, but if no one else is answering...)".

[16:56] <cognominal_> tadzik++

[16:56] <tadzik> phenny: tell colomon Math::Polynomial hangs on one of its tests

[16:56] <phenny> tadzik: I'll pass that on when colomon is around.

[16:56] <colomon> ?

[16:56] <phenny> colomon: 16:56Z <tadzik> tell colomon Math::Polynomial hangs on one of its tests

[16:56] <tadzik> hah

[16:57] <colomon> which compiler?

[16:57] * masak .oO( Yapsi )

[16:58] <tadzik> colomon: Rakudo

[16:59] <colomon> k

[17:01] <masak> pizza++

[17:02] *** icwiener left
[17:02] *** icwiener joined
[17:03] *** icwiener left
[17:03] *** icwiener joined
[17:09] *** jaffa4 joined
[17:10] *** brrt joined
[17:12] <pmichaud> > my $m;  $m max= 42 => 5;  say $m

[17:12] <pmichaud> 42 => 5

[17:13] <pmichaud> masak: ^^

[17:13] <moritz> \o/

[17:15] <masak> \o/

[17:19] <jnthn> ETOOMUCHPIZZA

[17:19] * jnthn feels like a leaning tower of pizza now

[17:20] <jaffa4> too much pizza no good

[17:20] <jnthn> oh, it was good ;)

[17:20] <jaffa4> to your health

[17:21] <jnthn> I'll live :)

[17:21] <jnthn> .oO( famous last wrods )

[17:21] <moritz> you'll die, like all of us :-)

[17:21] <tadzik> PerlJam: in Grammar-Profiler-Simple META.info source-url is broken

[17:21] <jaffa4> with stomach burn

[17:21] <jnthn> moritz: :P

[17:23] <cognominal_> jnthn will die, but thanks to moritz with a clean stacktrace.

[17:23] <masak> X::IO::Pizza

[17:24] <moritz> masak: I hope it's only X::I::Pizza :-)

[17:24] <masak> it's IO even when you're only doing I :P

[17:24] <dalek> roast: d9d5118 | pmichaud++ | S32-list/sort.t:

[17:24] <dalek> roast: [S32]: Re-fudge some sort tests with latest infix:<cmp> fixes.

[17:24] <dalek> roast: review: https://github.com/perl6/roast/commit/d9d5118b6c

[17:24] <dalek> rakudo/nom: 120e95d | pmichaud++ | src/core/Any.pm:

[17:24] <dalek> rakudo/nom: Fix &infix:<cmp>(Any,Any) to use value identity for Inf/-Inf instead of numeric identity.

[17:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/120e95d537

[17:25] <jnthn> r: say 647 - 83

[17:25] <p6eval> rakudo c89ce8: OUTPUT«564␤»

[17:27] <masak> "QBEGIN" reminded me of http://en.wikipedia.org/wiki/Q*bert

[17:28] <tadzik> seen supernovus?

[17:28] <aloha> supernovus was last seen in #perl6 80 days 17 hours ago saying "No code link yet. I just finished abandoning my Garden template language, which was a monstrosity. So, I'm starting from scratch for this project (currently using the very unoriginal name of Template6)".

[17:30] <masak> seen Memento?

[17:30] <aloha> Sorry, I haven't seen Memento.

[17:30] <tadzik> aloha: shame on you, it's a cool movie

[17:30] * masak .oO( but we saw it yesterday! )

[17:31] <moritz> sjn: got the confirmation mail. Thanks!

[17:32] <jaffa4> I have not seen Memonto either

[17:34] <masak> jaffa4: yes, but... have you seen Memento?

[17:34] <jaffa4> same answer I did not spell it correctly

[17:34] <masak> oh, I didn't even see the typo :)

[17:36] *** sftp joined
[17:41] <sjn> moritz: yay!

[17:46] <jaffa4> how to upload stuff to panda?

[17:46] *** bjarneh left
[17:47] <tadzik> jaffa4: you mean the module repository?

[17:47] <jaffa4> exactly

[17:47] <tadzik> oh, we have docs for that. Hold on...

[17:47] <tadzik> http://wiki.perl6.org/Create%20and%20Distribute%20Modules

[17:47] <moritz> they are hopefully linked on modules.perl6.org :-)

[17:47] <tadzik> jaffa4: basically, you need a META.info, a git repo, and someone with write access to perl6/ecosystem

[17:51] <jaffa4> How do I know if I have access to it?

[17:51] <tadzik> jaffa4: https://github.com/perl6/ecosystem where it says HTTP and Git-read-only, does it also say SSH?

[17:51] <tadzik> if it does, then you have it

[17:51] <tadzik> imarcusthis: I think there's a bug in your branch

[17:51] <tadzik> sub _block1685(): Event-driven programming in Perl 6

[17:51] <tadzik> I think it used to say "module MuEvent: bla bla bla"

[17:52] <infosophy> am I using the wrong syntax for chmod? chmod 0o000, 'temp-16-filehandles-filestat-39884.temp' 

[17:52] <imarcusthis> tadzik: sweet :)

[17:52] <tadzik> oh wait

[17:52] <infosophy> Undefined routine '&chmod' called (line 1)

[17:52] <imarcusthis> tadzik: it does say module Muevent here

[17:52] <imarcusthis> still

[17:52] <tadzik> it looks like I'm still using the old branch or something

[17:52] <moritz> infosophy: currently only available as a method

[17:52] <tadzik> must be wrong on mi side, hold on

[17:52] <infosophy> On IO?

[17:52] <moritz> infosophy: so $filename.IO.chmod(0o000)

[17:52] <moritz> yes

[17:52] <infosophy> thx

[17:53] <masak> right. I only see the method form.

[17:53] <tadzik> argh. I did git fetch, but not git checkout :)

[17:53] <imarcusthis> :D

[17:53] <masak> maybe the sub form should exist by spec, but I don't see it in Rakudo.

[17:53] *** pernatiy joined
[17:53] <infosophy> got fooled by S16-filehandles/chmod.t

[17:53] <tadzik> anyway, let me review it on your machine :)

[17:53] * frettled got fooled as well

[17:53] <moritz> infosophy: we don't run that test file at the moment

[17:53] <frettled> …which is not quite so much to brag about.

[17:54] <masak> infosophy: t/spectest.data contains the files Rakudo runs.

[17:54] <jaffa4> tadzik: ok

[17:55] <krunen> sjn: 3160.38

[18:09] *** brrt left
[18:10] <masak> oh wow -- http://myusuf3.github.com/octogit/

[18:10] <masak> I'm a user of this from now on.

[18:11] <masak> sjn: http://perlcabal.org/syn/

[18:18] <Ulti> masak can you accept pull requests to the github repo with that?

[18:20] <dalek> perl6-examples: 0c9beca | (Filip Sergot)++ | best-of-rosettacode/TODO:

[18:20] <dalek> perl6-examples: 3 new examples.

[18:20] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/0c9beca427

[18:20] <sergot> sjn: ping :)

[18:21] *** birdwindupbird joined
[18:22] *** mucker left
[18:23] <masak> Ulti: doesn't look it.

[18:27] <sorear> good * #perlt6

[18:27] <phenny> sorear: 11:58Z <tadzik> ask sorear any ideas why dalek is not reporting my rakudo commits?

[18:28] <masak> sorear! \o/

[18:30] <pmichaud> r: say (:a<42> cmp Inf)

[18:30] <p6eval> rakudo 120e95: OUTPUT«-1␤»

[18:30] <pmichaud> r: say (:a<42> cmp -Inf)

[18:30] <p6eval> rakudo 120e95: OUTPUT«1␤»

[18:30] <pmichaud> r: say (-Inf cmp :a<42>)

[18:30] <p6eval> rakudo 120e95: OUTPUT«-1␤»

[18:30] <pmichaud> r: say (Inf cmp :a<42>)

[18:30] <p6eval> rakudo 120e95: OUTPUT«1␤»

[18:31] <sorear> tadzik: ping

[18:40] <frettled> r: my $x="foo"; say "What it is: " ~ $x.WHAT;

[18:40] <p6eval> rakudo 120e95: OUTPUT«use of uninitialized value of type Str in string context  in method Str at src/gen/CORE.setting:670␤␤What it is: ␤»

[18:40] <frettled> but:

[18:41] <frettled> r: my $x="foo"; my $y=$x.WHAT; say $y;

[18:41] <p6eval> rakudo 120e95: OUTPUT«Str()␤»

[18:41] <frettled> r: my $x="foo"; my $y=$x.WHAT; say $y ~ " is what it is";

[18:41] <p6eval> rakudo 120e95: OUTPUT«use of uninitialized value of type Str in string context  in method Str at src/gen/CORE.setting:670␤␤ is what it is␤»

[18:45] <moritz> precompiled MiniDBD::mysql works \o/

[18:48] <jnthn> OMG FINALLY \O/

[18:48] <dalek> nqp/toqast: 3ccdf9e | jonathan++ | / (11 files):

[18:48] <dalek> nqp/toqast: Get the various QAST nodes we have stubbed in and start to fill some of them out.

[18:48] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/3ccdf9eeea

[18:49] <tadzik> sorear: pong

[18:50] <sorear> tadzik: how do you commit to rakudo?

[18:50] <tadzik> sorear: git push

[18:51] <tadzik> well, commit

[18:51] <frettled> hm

[18:51] <sorear> to what repo?

[18:51] <tadzik> rakudo/rakudo, nom branch

[18:51] <frettled> r: my $x="foo"; say "What it is: " ~ $x.WHAT.perl;

[18:51] <p6eval> rakudo 120e95: OUTPUT«What it is: Str␤»

[18:51] <frettled> Now that works.

[18:51] <sorear> I would guess that maybe nobody updated the push address for rakudo

[18:51] <tadzik> for example https://github.com/rakudo/rakudo/commit/626ef2a8fe6

[18:51] <sorear> can you use the Admin tab?

[18:51] <tadzik> sorear: it reports everyone else, just not me

[18:51] <tadzik> nope

[18:51] <moritz> sorear: but other rakudo commits are reported fine

[18:52] <sorear> wha

[18:52] <tadzik> aye

[18:52] <tadzik> the only special thing about me is the "ś" in my name, maybe that affects something

[18:53] <sorear> .oO( You could try removing that and see what happens )

[18:53] <tadzik> yeah, well

[18:54] * masak dubs tadzik "Teddy"

[18:54] <masak> did it help? :)

[18:54] <tadzik> tail amputation

[18:54] <sorear> tadzik: when did you push your last comitt?

[18:54] <colomon> r: say Str.WHAT

[18:54] <p6eval> rakudo 120e95: OUTPUT«Str()␤»

[18:54] <tadzik> sorear: 8 hours ago

[18:54] <colomon> r: say ~Str

[18:54] <p6eval> rakudo 120e95: OUTPUT«use of uninitialized value of type Str in string context  in method Str at src/gen/CORE.setting:670␤␤␤»

[18:55] <colomon> r: say Str.WHAT.perl

[18:55] <p6eval> rakudo 120e95: OUTPUT«Str␤»

[18:55] <colomon> r: class X { }; say X.new.WHAT.perl

[18:55] <p6eval> rakudo 120e95: OUTPUT«X␤»

[18:55] <colomon> r: class Y::X { }; say Y::X.new.WHAT.perl

[18:55] <p6eval> rakudo 120e95: OUTPUT«Y::X␤»

[18:55] <colomon> :\

[18:59] <sorear> tadzik: github doesn't seem to have sent dalek *any* push packets containing the string doc=HTML

[18:59] <sorear> I haven't a clue

[19:00] <tadzik> huh

[19:00] <tadzik> so maybe github's failing with my name

[19:00] <tadzik> hold on, I'll be pushing imarcusthis' commits in a minute

[19:02] <dalek> rakudo/nom: 9b16150 | (Marcus Ramberg)++ | / (2 files):

[19:02] <dalek> rakudo/nom: Reformat --doc output

[19:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9b161509c6

[19:02] <dalek> rakudo/nom: 43445e5 | (Marcus Ramberg)++ | / (2 files):

[19:02] <dalek> rakudo/nom: Fix method stringification in Pod::To::Text, fix slurpy star in Parameter.perl

[19:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/43445e515e

[19:02] <dalek> rakudo/nom: 21325bb | (Marcus Ramberg)++ | src/core/Parameter.pm:

[19:02] <dalek> rakudo/nom: Remove typo in paramter and cleanup

[19:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/21325bb2cd

[19:02] <tadzik> yeah, must be my name

[19:02] * masak hugs tadzik's "ś"

[19:03] <masak> ś: don't ever change. you're beautiful just the way you are.

[19:03] <colomon> r: say Str.WHAT.WHAT

[19:03] <p6eval> rakudo 120e95: OUTPUT«Str()␤»

[19:03] <colomon> r: say Str

[19:03] <p6eval> rakudo 120e95: OUTPUT«Str()␤»

[19:03] <tadzik> r: say .WHAT.WHAT.WHAT for "what was that word young man!?"

[19:03] <p6eval> rakudo 120e95: OUTPUT«Str()␤»

[19:04] <masak> r: sub the { @_ }; class Butt {}; .WHAT.WHAT given the Butt

[19:04] <p6eval> rakudo 120e95:  ( no output )

[19:05] <colomon> r: class X { method perl() { self.WHAT; }; };  say X.perl

[19:05] <p6eval> rakudo 120e95: OUTPUT«X()␤»

[19:05] *** geistteufel joined
[19:05] <colomon> r: class X { method perl() { self.WHAT.perl; }; };  say X.perl

[19:05] <colomon> n: class X { method perl() { self.WHAT.perl; }; };  say X.perl

[19:05] <colomon> guess it's consistent.

[19:06] <p6eval> rakudo 120e95: OUTPUT«(timeout)»

[19:06] <p6eval> niecza v16-23-gaa61ed5: OUTPUT«(timeout)»

[19:06] <tadzik> http://myusuf3.github.com/octogit/ looks cool

[19:07] <frettled> colomon: fun, eh?

[19:07] <colomon> frettled: that used to work fine in Rakudo.  Now it's an infinite loop.

[19:08] <colomon> tadzik: Math::Polynomial should work fine now.

[19:08] <tadzik> colomon++, great

[19:08] <tadzik> we can now automagically smoketest ALL THE MODULES :)

[19:09] <colomon> \o/

[19:10] <colomon> what are you using?

[19:10] <tadzik> colomon: http://tjs.azalayah.net/new.html is generated using a single perl 6 script :)

[19:10] <masak> tadzik++!

[19:10] <tadzik> I'll push it to the panda repo right away

[19:10] <colomon> OMG, the graphic is fantastic!

[19:10] <tadzik> oh, those are outdated a bit

[19:11] <tadzik> (not the graphics)

[19:11] <frettled> is that shopped?  ;)

[19:12] <tadzik> no, not at all

[19:12] <tadzik> list updated

[19:12] <masak> no, he actually has wings on his head.

[19:12] <dalek> rakudo/nom: cf19ce4 | moritz++ | / (2 files):

[19:12] <dalek> rakudo/nom: update docs/running.pod and perl6 --help output

[19:12] <dalek> rakudo/nom: 

[19:12] <dalek> rakudo/nom: --ll-backtrace is now --ll-exception. Add --profile

[19:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cf19ce4f97

[19:12] <tadzik> like, where do I get photoshop for linux? :)

[19:12] <moritz> gimpshopped!

[19:12] <tadzik> shush!

[19:12] <tadzik> it's original!

[19:12] <tadzik> (genuine?)

[19:13] <colomon> tadzik: now you need to have it smoke under both Rakudo and Niecza...

[19:13] <dalek> rakudo/nom: edf2e0d | (Geir Amdal)++ | src/core/IO.pm:

[19:13] <dalek> rakudo/nom: added stat times (modified/changed/accessed) for IO

[19:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/edf2e0d5d7

[19:13] <dalek> rakudo/nom: 631d8ab | moritz++ | src/core/IO.pm:

[19:13] <dalek> rakudo/nom: Merge pull request #63 from gam/nom

[19:13] <dalek> rakudo/nom: 

[19:13] <dalek> rakudo/nom: added stat times (modified/changed/accessed) for IO

[19:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/631d8abe26

[19:13] <tadzik> colomon: colomon that's a single-line change if Panda can run on niecz

[19:13] <tadzik> -a

[19:14] <colomon> ooooo

[19:14] <sorear> Whose head is that?

[19:14] <tadzik> Camelia's

[19:14] <tadzik> :)

[19:14] <frettled> Tadzelia

[19:14] <tadzik> spunky little brother

[19:15] <masak> but still carrying the high ideals.

[19:15] <sorear> My super-sensitive decision procedures think that head is more likely to belong to a human than a butterfly.

[19:15] <frettled> What's the spectest for that?

[19:15] <masak> tadzik: now where was that picture with the man with the expression? :)

[19:16] <dalek> rakudo/nom: d7b76d9 | moritz++ | tools/build/NQP_REVISION:

[19:16] <dalek> rakudo/nom: bump NQP revision

[19:16] <dalek> rakudo/nom: 

[19:16] <dalek> rakudo/nom: now MiniDBD::mysql finally works with precompiled modules.

[19:16] <dalek> rakudo/nom: Time to celabrate!

[19:16] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d7b76d9b20

[19:16] <masak> tadzik: "you don't say?"

[19:16] <masak> :)

[19:16] <tadzik> :)

[19:17] <sorear> colomon: my gut told me grammars should be anchored on both ends.  I guess spec compatibility requires removing the right anchor?

[19:17] <frettled> n: my $x="foo"; say "What it is: " ~ $x.WHAT;

[19:17] <p6eval> niecza v16-23-gaa61ed5: OUTPUT«What it is: ␤»

[19:18] <colomon> sorear: I don't really know.  Both ways make above equal amounts of sense to me.

[19:18] <colomon> sorear: well, I might even prefer your way.

[19:18] <frettled> n: my $x="foo"; say $x.WHAT;

[19:18] <p6eval> niecza v16-23-gaa61ed5: OUTPUT«Str()␤»

[19:18] <colomon> sorear: but some of the old ABC tests assumed the Rakudo way.

[19:19] <frettled> n: my $x="foo"; say $x.WHAT.perl ~ " what";

[19:19] <p6eval> niecza v16-23-gaa61ed5: OUTPUT«Str what␤»

[19:23] <dalek> nqp/toqast: fdba789 | jonathan++ | src/QAST/Op.nqp:

[19:23] <dalek> nqp/toqast: We'll just spell pasttype as op now. Now that'll save some keystrokes...

[19:23] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/fdba78924c

[19:23] <dalek> nqp/toqast: 6b5c556 | jonathan++ | src/QAST/ (2 files):

[19:23] <dalek> nqp/toqast: Fill out QAST::Var and QAST::Block a little.

[19:23] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/6b5c556e7c

[19:25] <masak> today sergot++ and I published two modules: Text::Markdown, which does simple Markdown parsing (italics, bold, inline code, paragraphs), and Sambal, which builds a PDF presentation using a simple DSL-y syntax. Sambal has Text::Markdown as a dependency, so you can format your text with Markdown.

[19:25] <jnthn> najs

[19:25] <jnthn> masak++, sergot++

[19:25] <moritz> masak++, sergot++

[19:25] <jnthn> Are they on modules.perl6.org>

[19:25] <masak> here's the general idea for Sambal: https://gist.github.com/2173720

[19:26] <masak> Text::Markdown is on there. Sambal will be soon.

[19:26] <sorear> What happened to fsergot?

[19:27] <jnthn> .oO( Decided to "f" off )

[19:27] <tadzik> oh, he changed his name for the 3rd time :)

[19:27] <masak> sergot reports that the nick change was due to pronunciation considerations.

[19:27] <tadzik> it's like with my ś

[19:27] <moritz> decided to dynamically typecast? :-)

[19:27] <masak> but ś is so easy to pronounce...

[19:27] <tadzik> heh. Hearing people saying tad-zik makes me see why people have issues with nie-cza

[19:28] <masak> yeah!

[19:28] <masak> both are dead easy to pronounce.

[19:28] <moritz> so easy that you drop dead if you try? :-)

[19:28] <tadzik> it's that people literally say 'dz' rather than the sound-y thing, like in "dź"

[19:30] <moritz> r: say $*VM.elems

[19:30] <p6eval> rakudo 21325b: OUTPUT«2␤»

[19:30] <moritz> r: say $*VM.keys

[19:30] <p6eval> rakudo 21325b: OUTPUT«name config␤»

[19:31] *** PacoAir left
[19:33] *** PacoAir joined
[19:34] <dalek> perl6-examples: fdeb067 | (Filip Sergot)++ | best-of-rosettacode/TODO:

[19:34] <dalek> perl6-examples: New examples in TODO list.

[19:34] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/fdeb067bb5

[19:34] <frettled> tadzik: and now you know why my nick is "frettled" and not "jingvoldstad" or somesuch ;)

[19:35] <tadzik> heh, right :)

[19:35] <masak> jingvoldwhat?

[19:36] <frettled> Mnemonic: Ing(en) vold i stad(en), which works in several Scandinavian languages.

[19:36] <frettled> …got English outnumbered by at least three to one!

[19:36] <masak> :D

[19:36] <sergot> sjn: ping

[19:37] <sjn> ping

[19:37] <sjn> oops.

[19:37] <sjn> pong

[19:37] *** PacoAir left
[19:37] <frettled> Oh dear, you know the example code you're looking at is slightly old when it sayd:

[19:37] <frettled> says

[19:37] <frettled> ./pugs -e "say 1+1"; # 2

[19:37] *** PacoAir joined
[19:37] <masak> p: say 1+1

[19:37] <p6eval> pugs: OUTPUT«2␤»

[19:37] <jnthn> r: say 1 + 1

[19:37] <p6eval> rakudo 21325b: OUTPUT«2␤»

[19:37] <masak> frettled: no, that's still so. :)

[19:38] <jnthn> Still works :)

[19:38] <frettled> I was thinking more that it naturally assumed ./pugs over ./perl6

[19:39] <colomon> The following step can take a long time, please be patient.

[19:39] <colomon> ./perl6 --setting=NULL --optimize=3 --target=pir --stagestats --output=src/gen/CORE.setting.pir src/gen/CORE.setting

[19:39] <colomon> make: *** [CORE.setting.pbc] Segmentation fault

[19:39] <colomon> :(

[19:39] <moritz> phenny: "ingen vold i staden"?

[19:39] <phenny> moritz: "no vold in the city" (sv to en, translate.google.com)

[19:39] <moritz> phenny: no en "vold"?

[19:39] <phenny> moritz: "violence" (no to en, translate.google.com)

[19:39] <tadzik> colomon: sooner that you'd expect! :)

[19:40] <masak> phenny: no en "ingen vold i staden"?

[19:40] <phenny> masak: "no violence instead" (no to en, translate.google.com)

[19:40] <frettled> ouch

[19:40] <masak> Google Translate needs to learn Norwegian properly.

[19:43] * moritz too

[19:46] <krunen> phenny: no en "ingen vold i stedet"?

[19:46] <phenny> krunen: "no violence instead" (no to en, translate.google.com)

[19:48] <frettled> Hmm.

[19:48] <frettled> Am I correct in guessing that in order to get the output of .WHAT, I need to use .WHAT.gist?

[19:48] <masak> phenny: sv en "inget våld i städet"?

[19:48] <phenny> masak: "no violence in the anvil" (sv to en, translate.google.com)

[19:48] <masak> :D

[19:49] <masak> the anvil appreciates not being beaten up, for once.

[19:58] *** daemon left
[20:00] *** GlitchMr left
[20:03] <frettled> n: my $x="foo"; say $x.WHAT.gist ~ ' what what';

[20:03] <p6eval> niecza v16-23-gaa61ed5: OUTPUT«Str() what what␤»

[20:03] <frettled> r: my $x="foo"; say $x.WHAT.gist ~ ' what what';

[20:03] <p6eval> rakudo 21325b: OUTPUT«Str() what what␤»

[20:04] <frettled> So I suppose I could substitute .WHAT.gist for nearly every use of .WHAT in https://github.com/perl6/perl6-examples/blob/af51ac7e362fd2e082f14e318e51adde0fb7e751/cookbook/01strings/01-00introduction.pl

[20:05] <frettled> pugs: my $x="foo"; say $x.WHAT.gist ~ ' what what';

[20:05] <p6eval> pugs: OUTPUT«Str what what␤»

[20:05] <frettled> pugs: my $x="foo"; say $x.WHAT ~ ' what what';

[20:05] <p6eval> pugs: OUTPUT«Str what what␤»

[20:05] <frettled> hrm.

[20:05] <frettled> not quite, should probably use .WHAT.perl, but that feels wrong sortof

[20:06] <masak> p6: say Str.^name

[20:06] <p6eval> pugs, rakudo 21325b, niecza v16-23-gaa61ed5: OUTPUT«Str␤»

[20:06] <masak> frettled: ^^

[20:06] <frettled> aha

[20:06] <masak> simpler :)

[20:06] <frettled> p6: my $x="foo"; say $x.^name ~ ' what what';

[20:06] <p6eval> pugs, rakudo 21325b, niecza v16-23-gaa61ed5: OUTPUT«Str what what␤»

[20:06] <frettled> excellentium, masak++

[20:06] *** harukomoto joined
[20:07] <moritz> r: say 'WHAT?'.^name

[20:07] <p6eval> rakudo 21325b: OUTPUT«Str␤»

[20:07] <masak> also, don't concatenate arguments of a say :) we premature optimizers get fidgety :)

[20:07] *** jaffa4 left
[20:08] <dalek> perl6-examples: e6f1005 | (Salve J. Nilsen)++ | best-of-rosettacode/ (6 files):

[20:08] <dalek> perl6-examples: Update pot and add v6 requirements

[20:08] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/e6f1005ce3

[20:08] <dalek> perl6-examples: 38cded4 | (Salve J. Nilsen)++ | best-of-rosettacode/TODO:

[20:08] <dalek> perl6-examples: Merge remote-tracking branch 'origin/master'

[20:08] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/38cded4f51

[20:09] *** daemon joined
[20:10] <sergot> sjn++

[20:10] <frettled> masak: why not?

[20:11] <masak> frettled: because `say "foo", "bar", "baz"` and `say "foo" ~ "bar" ~ "baz"` look the same on the screen, but the latter allocates less memory and is faster.

[20:11] <masak> er, the former, I mean.

[20:12] <frettled> aha

[20:12] <frettled> I'll amend the examples for that as well, then.

[20:12] <masak> \o/ ++frettled

[20:13] <jnthn> i'D HOPE that the second gets constant folded soon though :)

[20:15] <dalek> perl6-examples: 441c07f | (Filip Sergot)++ | best-of-rosettacode/TODO:

[20:15] <dalek> perl6-examples: bug...

[20:15] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/441c07f440

[20:15] <jnthn> multi postfix:<++>("foo") { "bar" }

[20:15] <masak> :P

[20:15] <tadzik> r: multi postfix:<++>("foo") { "bar" } say "foo"++

[20:15] <masak> nom: multi postfix:<++>("foo") { "bar" }; say "foo"++

[20:15] <p6eval> rakudo d7b76d: OUTPUT«===SORRY!===␤Confused␤at /tmp/bOXeactxs8:1␤»

[20:15] <p6eval> rakudo d7b76d: OUTPUT«bar␤»

[20:15] <masak> \o/

[20:16] <moritz> r: class FooStr is Str { method succ() { self.index('foo').defined ?? self.subst(:g, 'foo', 'bar') !! nextsame } }; my $s = nqp::box('somefoo', FooStr); $s++; say $s

[20:16] <p6eval> rakudo d7b76d: OUTPUT«===SORRY!===␤Unrecognized nqp:: opcode 'nqp::box' at line 1, near "; $s++; sa"␤»

[20:16] <moritz> r: class FooStr is Str { method succ() { self.index('foo').defined ?? self.subst(:g, 'foo', 'bar') !! nextsame } }; my $s = nqp::box_s('somefoo', FooStr); $s++; say $s

[20:16] <p6eval> rakudo d7b76d: OUTPUT«somebar␤»

[20:16] <frettled> gazonk.foo

[20:17] <moritz> r: class FooStr is Str { method succ() { self.index('foo').defined ?? self.subst(:g, 'foo', 'bar') !! nextsame } }; my $s = FooStr.new('foobar'); $s++; say $s

[20:17] <p6eval> rakudo d7b76d: OUTPUT«Default constructor only takes named arguments␤  in method new at src/gen/CORE.setting:560␤  in block <anon> at /tmp/lwGylcl_Sy:1␤␤»

[20:23] *** kaare_ left
[20:25] <krunen> masak: say "foo"~"bar" may be faster if using unbuffered io over RFC1149

[20:27] <masak> krunen: :D

[20:27] *** bruges left
[20:27] <masak> I had a feeling which RFC that would be even before I looked...

[20:28] <tadzik> oh, this one

[20:28] <tadzik> ...I suppose

[20:28] *** birdwindupbird left
[20:29] *** bruges joined
[20:31] <moritz> http://perlgeek.de/blog-en/perl-6/2012-oslo-hackathon-report.html # I blug

[20:34] <sergot> moritz++

[20:35] <dalek> roast: 6e66bc7 | moritz++ | S04-declarations/state.t:

[20:35] <dalek> roast: unfudge passing TODO tests

[20:35] <dalek> roast: review: https://github.com/perl6/roast/commit/6e66bc7c4e

[20:35] <masak> moritz++

[20:35] *** cggoebel left
[20:36] *** cggoebel joined
[20:36] <dalek> perl6-examples: 99e14ad | (Salve J. Nilsen)++ | best-of-rosettacode/ (6 files):

[20:36] <dalek> perl6-examples: Update titles, add use v6, fix links, add pod

[20:36] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/99e14ad690

[20:36] <dalek> perl6-examples: 6f30b8e | (Salve J. Nilsen)++ | best-of-rosettacode/TODO:

[20:36] <dalek> perl6-examples: Merge remote-tracking branch 'origin/master'

[20:36] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/6f30b8ecf1

[20:39] <pmichaud> What version of Perl should we indicate that Rakudo implements  (i.e., in  $*PERL<ver>) ?

[20:39] *** vlixes left
[20:40] <tadzik> r: say "6.0.0".prev

[20:40] <p6eval> rakudo d7b76d: OUTPUT«Method 'prev' not found for invocant of class 'Str'␤  in block <anon> at /tmp/vEtkBcc9Nk:1␤␤»

[20:40] <jnthn> 6.0ish

[20:40] <jnthn> ;)

[20:41] *** geistteufel left
[20:41] <pmichaud> r: say "6.0.0".pred

[20:41] <p6eval> rakudo d7b76d: OUTPUT«5.0.0␤»

[20:42] <pmichaud> Ummm..... *no*.

[20:42] *** geistteufel joined
[20:43] <dalek> perl6-examples: 48cd5de | (Salve J. Nilsen)++ | best-of-rosettacode/README:

[20:43] <dalek> perl6-examples: Say few words about what this directory is about

[20:43] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/48cd5de8a0

[20:43] <masak> pmichaud++ # :D

[20:43] <sjn> r: say v6.0.0.pred; # :)

[20:43] <p6eval> rakudo d7b76d: OUTPUT«===SORRY!===␤Confused␤at /tmp/t2DL0RdGWe:1␤»

[20:44] <sjn> r: say "v6.0.0".pred; # :-o

[20:44] <p6eval> rakudo d7b76d: OUTPUT«v5.0.0␤»

[20:44] <sjn> meh

[20:45] <pmichaud> yes, seems like we need to implement the Version type  (src/core/Version.pm)

[20:47] <dalek> perl6-examples: 889f983 | (Filip Sergot)++ | best-of-rosettacode/balanced-brackets.pl:

[20:47] <dalek> perl6-examples: balanced-brakets.pl

[20:47] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/889f983003

[20:47] <dalek> perl6-examples: f8abe2c | (Filip Sergot)++ | best-of-rosettacode/ (7 files):

[20:47] <dalek> perl6-examples: Merge branch 'master' of github.com:perl6/perl6-examples

[20:47] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/f8abe2c8f1

[20:48] *** simcop2387 joined
[20:51] <dalek> perl6-examples: 4d613ec | (Jan Ingvoldstad)++ | cookbook/01strings/01-00introduction.pl:

[20:51] <dalek> perl6-examples: Replaced "pugs" with "perl6"

[20:51] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/4d613ec521

[20:51] <dalek> perl6-examples: 38621c4 | (Jan Ingvoldstad)++ | cookbook/01strings/01-00introduction.pl:

[20:51] <dalek> perl6-examples: Replaced erroneous use of .WHAT with .^name, also replaced concatenation of say's arguments with comma-separated list (currently better practice due to performance). Cleaned up minor whitespace thingies in the same examples.

[20:51] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/38621c4464

[20:51] <dalek> perl6-examples: c7658f1 | (Jan Ingvoldstad)++ | cookbook/01strings/01-00introduction.pl:

[20:51] <dalek> perl6-examples: Rearranged things a bit, changed examples for concatenation and display, and tried to re-categorize a bit

[20:51] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/c7658f1b19

[20:51] <dalek> perl6-examples: 86ca520 | (Jan Ingvoldstad)++ | best-of-rosettacode/ (10 files):

[20:51] <dalek> perl6-examples: Merge branch 'master' of github.com:perl6/perl6-examples

[20:51] <dalek> perl6-examples: review: https://github.com/perl6/perl6-examples/commit/86ca52011e

[20:52] <tadzik> can you think of any way how I could print $?USAGE from actions.pm?

[20:52] *** nif joined
[20:52] <tadzik> ($*W.symbol_lookup(['$?USAGE'], $/) gives me a Capture[0xfoo

[20:53] <dalek> rakudo/nom: 5d7626b | pmichaud++ | / (3 files):

[20:53] <dalek> rakudo/nom: Revise $*PERL variable a bit.

[20:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5d7626bee2

[20:53] *** nif is now known as manners

[20:53] <pmichaud> 5d7626b isn't exactly what we discussed here in Oslo;  I left the compiler information as $*PERL<compiler>  for now instead of creating a $*COMPILER variable.

[20:53] <jnthn> tadzik: You're confusing symbol_lookup and find_symbol, I think.

[20:54] <frettled> jnthn: 6.0ish would be nice, except that version compare would show it as always greater than 6.0.$whatever :)

[20:55] <frettled> .oO(Would 6.0.-ish work?)

[20:56] <tadzik> jnthn: mebbe :) I just saw that Actions.pm uses symbol_lookup in lots of places when it looks up $?CLASS

[20:57] <jnthn> tadzik: That means "generate code to do the lookup"

[20:57] <tadzik> okay

[20:57] <tadzik> so I could past::call that, si?

[20:57] <jnthn> find_symbol gives you the actual looked up value

[20:57] <jnthn> tadzik: call it?

[20:58] <jnthn> tadzik: Isn't $?USAGE the tring message?

[20:58] <jnthn> *string

[20:58] <tadzik> it's a String, yes

[20:58] <tadzik> but it's in Main.pm as my $?USAGE=gen-usage()

[20:58] <jnthn> ah

[20:58] <tadzik> so it's lazy-ish?

[20:58] <pmichaud> actually, 6.0ish would be treated like 6.0.ish.  Perhaps 6.0.0ish would work, though.

[20:58] <jnthn> What are you trying to do with it?

[20:58] <pmichaud> 6.0.0 would end up sorting after 6.0.0ish

[20:58] <tadzik> jnthn: say it 

[20:58] <pmichaud> (at least if I'm reading S02 correctly)

[20:58] <jnthn> tadzik: When?

[20:58] <tadzik> like, Past::Op(:pasttype<call> :name<&say>)

[20:59] <tadzik> jnthn: in DOC INIT

[20:59] <jnthn> oh

[20:59] <frettled> pmichaud: hmm, that breaks with version parsing in other thingies than Perl 6, heh :)

[20:59] *** harukomoto left
[20:59] <jnthn> PAST::Op.new(:pasttype('call'), :name('&say'), ...the symbol lookup...)

[20:59] <tadzik> right

[20:59] <jnthn> should do it

[21:00] <pmichaud> > say $*PERL<compiler>.perl

[21:00] <pmichaud> {"name" => "rakudo", "ver" => "2012.04-42-g5d7626b", "release-number" => "51", "build-date" => "2012-04-21T20:47:05Z", "codename" => "Brazos Valley"}

[21:00] <dalek> nqp/toqast: d16bf96 | jonathan++ | src/QAST/Compiler.nqp:

[21:00] <dalek> nqp/toqast: Start sketching out compilation of some more of the nodes in QAST::Compiler.

[21:00] <dalek> nqp/toqast: review: https://github.com/perl6/nqp/commit/d16bf964de

[21:00] <tadzik> pmichaud: cool

[21:01] <tadzik> jnthn: bah, that gives me Could not find symbol '$?USAGE'

[21:01] <tadzik> whereas it works then I do say($*W.find...(...)) in Actions.pm

[21:01] <jnthn> :S

[21:01] <tadzik> my face exactly

[21:01] <jnthn> tadzik: are you doing it too late?

[21:01] <frettled> pmichaud++ - nice!

[21:01] <tadzik> hrm, no eye deer

[21:01] <jnthn> Like, after $*UNIT was popped off in comp_unit

[21:02] <tadzik> it's in a new lexpad, but not much else I suppose

[21:02] <tadzik> okay, paste coming

[21:03] <tadzik> jnthn: https://gist.github.com/2439577

[21:04] <pmichaud> r: sub xyz( :f($foo) ) { ... };  say &xyz.signature.perl

[21:04] <p6eval> rakudo d7b76d: OUTPUT«:($foo)␤»

[21:04] <pmichaud> ^^^ that's a regression

[21:04] *** harukomoto joined
[21:11] <sorear> pmichaud: so I'm thinking that at least for consistency's sake it would be best to remove Niecza's automatic end anchor in Grammar.parse

[21:12] <masak> huh? why?

[21:12] <masak> I feel I've missed the beginning of this discussion.

[21:12] * masak backlogs

[21:12] <pmichaud> or to see if we can get Rakudo to add it, if that feature is still spec (and deserving to be spec)

[21:13] <tadzik> pmichaud: https://github.com/rakudo/rakudo/commit/9b161509c6a0a63f2c24620dd9207733adb2698d#L1L153

[21:15] <sorear> masak: there isn't really a beginning, it's been going on forever ;)

[21:15] <sorear> I think the spec is silent

[21:15] <sorear> to me, it's self-evident that a grammar should match the entire input, not some prefix

[21:16] <sorear> to other people, including ones who write tests for roast and ones who implement Rakudo, it's the other way

[21:16] <pmichaud> the spec is not completely silent

[21:16] <masak> sorear: IMHU Rakudo simply doesn't do it yet.

[21:16] <sorear> imh..u?

[21:16] <pmichaud> smart matching against a regex, token, or rule (directly) causes both ends to be anchored

[21:16] <geekosaur> understanding?

[21:17] <pmichaud> i.e.,   'abc' ~~ regex { \w+ }  is supposed to have implicit anchors, per spec

[21:17] <masak> yes, "understanding".

[21:18] <masak> to me, the question has always been "where does this extra anchoring magic reside?". I guess the answer is "in .parse"

[21:18] <pmichaud> I think the spec is somewhat silent on Grammar.parse

[21:18] *** ens joined
[21:19] *** fglock left
[21:19] *** manners left
[21:20] <pmichaud> certainly I think there needs to be a way to do .parse that doesn't force anchoring

[21:20] <pmichaud> otherwise you simply end up with "failed match", or you have to make sure your regex includes something like .*

[21:21] *** manners joined
[21:22] <masak> what's the value of a s/// expression?

[21:23] <masak> p6: $_ = '[[[][]][]]'; say s/'[]'//

[21:23] <p6eval> rakudo 5d7626: OUTPUT«[[[]][]]␤»

[21:23] <p6eval> ..pugs: OUTPUT«<Subst>␤»

[21:23] <p6eval> ..niecza v16-23-gaa61ed5: OUTPUT«True␤»

[21:23] <masak> *lol*

[21:24] <masak> fwiw, I'm with Niecza until I get more of the backstory here.

[21:32] <pmichaud> after reading S05, I'm with Niecza also

[21:33] *** Trashlord left
[21:33] <masak> TimToady: does a s/// expression evaluate to a boolean representing True iff it matched?

[21:35] <pmichaud> afk here -- time to close down hackathon for the night

[21:35] <pmichaud> more hacking tomorrow!

[21:36] <TimToady> a s/// should return the number of times it matched, I think, which without :g is 0 or 1

[21:36] *** Trashlord joined
[21:36] <TimToady> but it doesn't need to be a Bool

[21:37] *** manners left
[21:37] *** vlixes joined
[21:38] <masak> ooh

[21:38] <masak> yes, that's probably even better.

[21:38] <TimToady> and there's prior art :)

[21:39] <masak> p5? :)

[21:39] <TimToady> and 4, and 3...

[21:41] <jnthn> pmichaud says that .subst, which s/// uses, doesn't give us the number of matches, or even if anything matched

[21:41] <TimToady> well, he should stop saying that :)

[21:41] <masak> and there are recent rumors that pmichaud is not susceptible to torment any more... :)

[21:41] <jnthn> "see, I told you!"

[21:42] <jnthn> Pm wants to know if there's anything else he should stop saying :P

[21:42] <masak> the room just got colder...

[21:43] * masak sleep &

[21:43] <jnthn> indeed

[21:43] <jnthn> 'nighty night o/

[21:43] <TimToady> hypothermia?

[21:43] <sergot> o/

[21:43] *** sergot left
[21:45] *** NamelessTee left
[21:52] *** NamelessTee joined
[22:20] *** zhangkaizhao left
[22:22] *** PacoAir left
[22:30] *** brrt joined
[22:31] *** datums_nb joined
[22:31] *** NamelessTee left
[22:40] <pmichaud> back at hotel :)

[22:41] *** datums_nb left
[22:49] *** brrt left
[22:57] *** harukomoto left
[23:03] *** harukomoto joined
[23:03] *** fgomez joined
[23:03] *** fgomez left
[23:03] *** fgomez joined
[23:24] <sorear> yay.

[23:51] *** icwiener left
