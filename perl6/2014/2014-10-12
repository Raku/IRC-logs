[00:14] *** Hor|zon joined
[00:19] *** Hor|zon left
[00:19] *** araujo joined
[00:25] * [Coke] waves as he catches up, briefly, with scrollback.

[00:33] <arnsholt> Wow.

[00:33] <arnsholt> Compiling NQP and Rakudo with Moar for the first time

[00:34] <arnsholt> That's... a LOT faster than Parrot and JVM used to be

[00:34] <arnsholt> Very speed, such quick

[00:40] <colomon> yup.  :)

[00:40] *** uvtc left
[00:41] <[Coke]> ho, arnsholt 

[00:42] <colomon> \o

[00:47] <arnsholt> o/

[00:48] <arnsholt> Way too long since I've done anything Perl 6-y

[00:48] <colomon> building rakudo-m is a good first step.

[00:48] <arnsholt> Indeed

[00:51] <colomon> though I tried building it on a 2001 iMac with 256 MB ram this week, and gave up after 72 hours.

[00:51] <colomon> :)

[00:53] <colomon> With the latest PowerPC Linux on it, it's actually seems to be surprisingly useful machine, but it really can't handle Rakudo levels of memory usage.

[00:53] <colomon> s/it's/it/

[00:54] <arnsholt> =D

[01:01] *** woolfy left
[01:02] *** woolfy joined
[01:14] *** Sqirrel left
[01:15] *** Sqirrel joined
[01:17] *** xenoterracide joined
[01:20] *** kurahaupo joined
[01:35] *** anaeem1 joined
[01:39] *** anaeem1 left
[01:45] *** xenoterracide left
[01:45] *** xenoterracide joined
[02:06] *** xenoterracide_ joined
[02:08] *** xenoterracide left
[02:15] *** Hor|zon joined
[02:20] *** Hor|zon left
[02:25] *** colomon left
[02:26] *** colomon joined
[02:37] <BenGoldberg> jnthn, A question about OO::Monitors Conditions: which conventional function is meet-condition more like: cond_signal or cond_broadcast?

[02:39] <BenGoldberg> If it's like cond_broadcast, and wakes up all waiting threads, then that can be inefficient.  If it's like cond_signal, and wakes up one waiting thread, then the BoundedQueue example has a race condition in it.

[02:45] *** chenryn joined
[02:47] *** chenryn left
[02:48] *** bjz left
[02:50] *** chenryn joined
[02:52] *** noganex_ joined
[02:54] *** noganex left
[02:54] *** chenryn left
[02:56] *** chenryn joined
[03:00] *** chenryn left
[03:04] *** chenryn joined
[03:10] *** chenryn left
[03:12] *** chenryn joined
[03:17] *** chenryn left
[03:36] *** flaviusb joined
[03:40] *** BenGoldberg left
[03:52] *** _slade_ left
[03:58] *** bob_spoonmongler left
[04:06] *** bjz joined
[04:09] *** jack_rabbit joined
[04:16] *** Hor|zon joined
[04:21] *** Hor|zon left
[04:25] *** kaare_ joined
[04:45] *** Sqirrel left
[04:45] *** ggoebel1111117 joined
[04:46] <japhb> .tell BenGoldberg if you're thinking of take-task(), I asked about that after the talk, and jnthn++ explained that it was smarter than he initially let on -- meet-condition sets the condition *without* releasing the method lock, which only gets released at actual method exit, which is when other threads can notice the condition was met.

[04:46] <yoleaux> japhb: I'll pass your message to BenGoldberg.

[04:49] *** ggoebel1111116 left
[04:52] *** _slade_ joined
[04:54] <japhb> .tell timotimo My plan for getting to the hackathon venue is to take the train from the main station near us to Salzburg Aigen, which is the stop just past the venue, and then backtrack a couple blocks on foot.

[04:54] <yoleaux> japhb: I'll pass your message to timotimo.

[04:55] <japhb> .tell timotimo Takes about 11 minutes according to the schedule, running every half hour at :21 and :51 it looks like.

[04:55] <yoleaux> japhb: I'll pass your message to timotimo.

[05:13] *** Sqirrel joined
[05:15] *** anaeem1_ joined
[05:21] <moritz> \o

[05:34] *** Sqirrel left
[05:34] <mauke> I'm going to try the bus

[05:45] *** Sqirrel joined
[05:54] <FROGGS> peteretep: I am at a hackathon in two hours... will that be okay for you?

[06:17] *** Hor|zon joined
[06:20] *** flaviusb left
[06:22] *** Hor|zon left
[06:24] <peteretep> FROGGS: I'll be here all year, whenever is convenient :-)

[06:28] *** rindolf joined
[06:29] *** anaeem1_ left
[06:30] *** pepl joined
[06:38] *** notfix is now known as xfix

[06:43] <FROGGS> peteretep: :o)

[06:43] <TimToady> std: 1 >>=>> 2

[06:43] <camelia> std f214dca: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Missing << or >> at /tmp/hFRzOH5Q4i line 1:‚ê§------> [32m1 >>=>[33m‚èè[31m> 2[0m‚ê§    expecting infix_circumfix_meta_operator‚ê§Parse failed‚ê§FAILED 00:01 139m‚ê§¬ª

[06:43] <nine> anyone at the Plainbruecke need a ride to the hackathon?

[06:43] <TimToady> std: 1 ¬ª=¬ª 2

[06:43] <camelia> std f214dca: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Cannot hyper with = because list assignment operators are too fiddly at /tmp/aF2eN7HL6o line 1:‚ê§------> [32m1 ¬ª=¬ª[33m‚èè[31m 2[0m‚ê§Check failed‚ê§FAILED 00:01 140m‚ê§¬ª

[06:44] <japhb> Next train leaving Salzburg Hbf. to Salzburg Aigen is at 9:21.  If you enter the station from the Forum-1 shopping center side, tickets are partway into the main hallway, on the right.  2.50 one way, or 5.50 round trip.  I'm not sure why round trip costs more than double, but whatever ...

[06:44] <TimToady> well, the syntax works

[06:44] <TimToady> maybe they think you might come back not on Sunday

[06:45] <dalek> doc: a57f595 | moritz++ | lib/Language/regexes.pod:

[06:45] <dalek> doc: [regexes] Anchors

[06:45] <dalek> doc: 

[06:45] <dalek> doc: at least some of them

[06:45] <dalek> doc: review: https://github.com/perl6/doc/commit/a57f59510f

[06:46] *** leont joined
[06:47] <japhb> Anyone happen to know what the 'Hbf.' stands for in 'Salzburg Hbf.'?

[06:47] <moritz> japhb: "main railway station"

[06:47] *** jack_rabbit left
[06:48] <moritz> Hauptbahnhof

[06:48] <peteretep> The High House of Hoff

[06:48] <japhb> Ah, OK, I had a feeling it was something like that

[06:49] *** FROGGS_ joined
[06:49] <FROGGS_> japhb: it is common (in germany at least) that a round trip costs more than two one way tickets

[06:49] <FROGGS_> a round trip is often an 24 hours tickets and is about a factor of 2.2 of a one way ticket

[06:50] *** FROGGS left
[06:50] <japhb> That's so odd.

[06:50] * japhb shrugs

[06:51] <FROGGS_> std: eval ""; EVAL ""

[06:51] * japhb is from the land of "Supersize for just 30 cents more!" ... increasing your purchase is almost always a savings.

[06:51] <camelia> std f214dca: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Undeclared name:‚ê§    'EVAL' used at line 1‚ê§Check failed‚ê§FAILED 00:06 139m‚ê§¬ª

[06:51] <moritz> well, often there aren't really round trip tickets, just time-limited tickets

[06:51] *** mauke left
[06:51] <leont> Morning

[06:51] <moritz> and it's an advantage if you want to take more than two rides

[06:51] <japhb> Time limited?  Meaning, I could keep traveling around for those 24 hours?

[06:52] <japhb> Ah, OK, that makes sense.

[06:52] <moritz> yes

[06:52] <moritz> (though of course I don't know what your ticket actually says, that's just my experience with public transport systems in .de, .at and uk)

[06:56] *** FROGGS_ left
[06:56] *** xenoterracide_ left
[06:56] <dalek> doc: 09d7e13 | moritz++ | lib/Language/regexes.pod:

[06:56] <dalek> doc: [regexes] fix markup

[06:56] <dalek> doc: review: https://github.com/perl6/doc/commit/09d7e1316c

[06:58] *** anaeem1_ joined
[06:58] <japhb> I'd totally believe it, and the few words I've translated from the ticket tend to support that theory.

[06:59] *** gfldex joined
[07:05] <timotimo> o/

[07:05] <yoleaux> 04:54Z <japhb> timotimo: My plan for getting to the hackathon venue is to take the train from the main station near us to Salzburg Aigen, which is the stop just past the venue, and then backtrack a couple blocks on foot.

[07:05] <yoleaux> 04:55Z <japhb> timotimo: Takes about 11 minutes according to the schedule, running every half hour at :21 and :51 it looks like.

[07:12] <timotimo> maybe i'll spend some time trying to "properly" jit the nativecallinvoke op on moarvm

[07:12] <timotimo> it's probably not terribly difficult, just a lot of work

[07:12] *** flaviusb joined
[07:13] *** darutoko joined
[07:13] <timotimo> also, performance analysis will be "why the fuck is this fast" rather than "why the fuck is this slow" today

[07:17] *** leont left
[07:23] * moritz tries to runs perl6/doc's htmlify.p6 with --profile

[07:25] <moritz> first shutting down all browsers and MUAs to save memory

[07:26] <moritz> 3 minutes in, we're at 630M virt memory

[07:26] <moritz> not too bad

[07:27] <dalek> doc: a21764b | moritz++ | lib/Language/regexes.pod:

[07:27] <dalek> doc: fix word-o

[07:27] <dalek> doc: review: https://github.com/perl6/doc/commit/a21764bfcc

[07:30] <moritz> m: say 'abc'.index('b').^name

[07:30] <camelia> rakudo-moar b6c6ae: OUTPUT¬´Int‚ê§¬ª

[07:30] <moritz> profiler terminated with "Killed"

[07:37] *** leont joined
[07:37] <dalek> nqp: 98e6cf4 | moritz++ | t/nqp/59-nqpop.t:

[07:37] <dalek> nqp: tests for nqp::index with three arguments

[07:37] <dalek> nqp: 

[07:37] <dalek> nqp: partially stolen/adapted from roast

[07:37] <dalek> nqp: review: https://github.com/perl6/nqp/commit/98e6cf4527

[07:38] *** _slade_ left
[07:39] *** bjz left
[07:39] <moritz> is it normal that rakudo on moarvm wants to allocate a chunk of 160MB?

[07:48] *** JimmyZ joined
[07:50] *** leont left
[08:02] *** woolfy left
[08:02] *** lizmat left
[08:03] <dalek> doc: 0e96ce1 | moritz++ | htmlify.p6:

[08:03] <dalek> doc: [htmlify] add --sparse option to process only some files

[08:03] <dalek> doc: 

[08:03] <dalek> doc: useful for profilingy htmlify

[08:03] <dalek> doc: review: https://github.com/perl6/doc/commit/0e96ce1f80

[08:03] <moritz> even with --sparse=20 (process only 1/20th of all .pod files), htmlify.p6 with --profile OOMs (on 3GB RAM)

[08:05] <moritz> dies even with --sparse=30

[08:06] <moritz> I'm now wondering if the problem is not actually with the runtime/memory requirements of the program, but with the profiler itself

[08:06] <timotimo> aye

[08:06] <japhb> moritz: How many files does --sparse=30 actually process?

[08:06] <timotimo> try my branch?

[08:06] <moritz> japhb: 6 type files, 2 language files

[08:07] <moritz> timotimo: which branch?

[08:07] *** mauke joined
[08:07] <japhb> IIRC for Devel::NYTProf, Tim had to gzip the profile data stream in order to scale, so we may need to do the same.

[08:10] *** rindolf left
[08:13] *** oetiker left
[08:14] *** oetiker joined
[08:17] <japhb> I'm beginning to think perl6-stress would share so much code with perl6-bench, that it's better if I extend the functionality of perl6-bench to support stress testing, record failure outputs, and so on.

[08:18] *** timbunce_ joined
[08:18] *** Hor|zon joined
[08:19] * TimToady finally back up at hackathon

[08:19] * timbunce_ waves

[08:19] *** azawawi joined
[08:20] *** bjz joined
[08:20] <azawawi> hi everyone

[08:21] *** slavik left
[08:22] <japhb> o/ azawawi 

[08:23] *** Hor|zon left
[08:24] <mauke> http://i.imgur.com/JU4nhCp.gif

[08:26] *** lizmat joined
[08:27] <jnthn> hackathon \o/

[08:29] <nine> jnthn: want to see the weirdest bug ever?

[08:30] *** pepl left
[08:31] <jnthn> nine: I'm sure I'll have seen worse before :P

[08:32] *** flaviusb left
[08:33] *** Ven joined
[08:33] * azawawi starts profiling File::Find slowness

[08:33] <moritz> like a segfault that happens only during presentations? :-)

[08:34] *** slavik joined
[08:35] <nine> moritz: no that's strange but I'm sure there's some reasonable explanation

[08:35] <azawawi> moritz: same here... i tried farabi6 on my machine... everything ok... i deploy it on feather.perl6.nl... boom :)

[08:35] <timbunce_> What's the status of https://github.com/perl6/book ?

[08:35] <timbunce_> (Only 1 commit since 2012)

[08:35] <timotimo> moritz: now i'm at the venue and i can help you again

[08:35] <nine> moritz: the one I've now is t//callables.t failing with a panic: MUTEX_LOCK _only_ when run from make test from within vim.

[08:36] <pmichaud> good morning #perl6, from the hackathon

[08:37] * lizmat waves from NCM as well

[08:37] <pmichaud> timbunce_: I suspect the book is very out of date

[08:37] <japhb> o/ all

[08:38] <timbunce_> pmichaud: seems to be a common problem with perl6 stuff :/

[08:38] <dalek> doc: eb46cc2 | Mouq++ | lib/Language/objects.pod:

[08:38] <dalek> doc: Fix formattos

[08:38] <dalek> doc: review: https://github.com/perl6/doc/commit/eb46cc24de

[08:39] <pmichaud> timbunce_: alas, yes.

[08:39] <timbunce_> perl6.org points to http://perl6.org/getting-started/ which points to http://github.com/perl6/book/downloads

[08:39] <japhb> timbunce_: Well, at least the previous documentation projects.  Though moritz, Mouq, etc. seem to be pushing hard on the current one

[08:39] <timbunce_> japhb: what's "the current one"?

[08:39] <timotimo> moritz: finite_callgraph_depth

[08:39] *** jungreuc joined
[08:40] <azawawi> why is ListIter.reify called 156834 for 789 files in this find-file test script http://pastebin.com/vFZr8it6 ? :)

[08:40] <nine> timotimo: doc.perl6.org

[08:41] <jnthn> azawawi: To ensure it performs awfully, apparently...

[08:41] <Ven> :(

[08:41] <azawawi> jnthn: :)

[08:41] *** brrt joined
[08:41] <mauke> for posix compliance

[08:41] <brrt> o/ proud #perl6 hackers

[08:42] <pmichaud> azawawi: how many times would you expect it to be called?

[08:42] <timotimo> nine: huh?

[08:42] <nine> timbunce_: doc.perl6.org

[08:42] <nine> timotimo: sorry wrong autocomplete

[08:42] <timotimo> OK :)

[08:43] *** leont joined
[08:43] <japhb> timbunce_: The doc project that you see commits in channel for

[08:43] <lizmat> moritz: trying to do a profile run now

[08:44] <pmichaud> my commit yesterday to syn_index.html hasn't propagated to the web site  :-/

[08:44] <azawawi> pmichaud: the test folder has 1159 directories and/or files. 789 files.

[08:44] <lizmat> moritz: Writing type graph images to html/images/ ...

[08:44] <lizmat> dot command failed! (did you install Graphviz?)

[08:44] <lizmat> is this a panda dependency?

[08:44] *** FROGGS joined
[08:44] <japhb> lizmat: It's the thing that turns .dot files into .svg

[08:44] <timotimo> it's a native thing

[08:44] <pmichaud> azawawi: A ListIter will be used for every list (and intermediate list) used

[08:45] <timotimo> we can't depend on native packages properly ;(

[08:45] <azawawi> pmichaud: i see

[08:45] <pmichaud> and there are a lot of those in Perl 6

[08:45] <timotimo> .o( though it would be cool )

[08:47] <japhb> timotimo: Annoying that every packaging system has its own naming conventions, so that even if we did have native dependencies, it would be a combinatoric pain to add the package dependencies to all of our module distros.

[08:47] <timotimo> aye.

[08:47] <japhb> OTOH, we could at least *detect* that e.g. particular binaries are not in the path, or that C/C++ headers do or do not exist.

[08:48] <timotimo> that is true; however:

[08:48] <timotimo> many package systems have a "what package provides this file?" command

[08:48] <timotimo> yum provides, apt-file search, ...

[08:48] <FROGGS> japhb: well, usually you would specify what lib/tool you want and the packaging should pick the dist that provides it

[08:48] <timotimo> if we find one or more of these package managers, we can at least make proper suggestions

[08:48] <FROGGS> japhb: you do not keep a list of .deb packages for examples

[08:48] <FROGGS> -s

[08:48] <nine> jnthn: I can reproduce it using kate instead of vim. Removing anything (even the superfluous "use NativeCall;") from the test script hides the bug again.

[08:49] <japhb> FROGGS: Fair enough -- are you considering teaching panda about that proper command in each of N packaging systems (not saying this is a bad idea, trying to understand your meaning)

[08:49] <japhb> (That was to timotimo as well, of course)

[08:49] <FROGGS> japhb: I'm not sure if that might be within panda... I am more hoping that packagers would make use of that information

[08:50] <FROGGS> (debian, suse, whatever)-packagers

[08:50] <jnthn> When I profile File::Find here, I see that 73% of the time is spent in cannon-cat

[08:50] <Ven> m: role F[::T] { method f { say T } }; F["foo".tc].f

[08:50] <camelia> rakudo-moar b6c6ae: OUTPUT¬´(Str)‚ê§¬ª

[08:50] <japhb> FROGGS: How would they make use of that information?

[08:50] <Ven> mmh..

[08:50] <azawawi> jnthn: I am trying to simplify the use of --profile by making it a farabi6 menu option to open the profile*.html directory in a second tab

[08:50] <jnthn> Which in turn spends a huge amount of itme in subst

[08:50] <Ven> I'm stupid...

[08:50] <japhb> Oh!  You mean when they package some given module?

[08:50] <FROGGS> japhb: they would now on what lib your dist depends

[08:50] <FROGGS> and can set the dependencies right

[08:51] <azawawi> jnthn: is there an option for --profile to be in some format (e.g. json)?

[08:51] *** brrt left
[08:51] <FROGGS> so we get rid of all of the Alien:: dists that compile C libraries for you so you can be sure that C library is there

[08:51] <japhb> FROGGS: OK, I see what you mean.  I don't think this is awesome enough though, because that depends on OS distros packaging all the Perl 6 modules people care about, rather than us being able to make suggestions even for unpackaged Perl 6 modules

[08:51] <FROGGS> though, having plugins in panda for each OS distro that can install libs/tools for you would be sweet

[08:52] <FROGGS> this could also be maintained my OS distro authors

[08:52] <FROGGS> japhb: true

[08:52] <TimToady> it's kinda weird that in the operator docs, the set operators are "from" the Texas versions of the operators, which are probably less explanatory than the actual set operators (for those who know Sets/Bags)

[08:52] <japhb> Yes, this is closer to what I want

[08:54] <nine> FROGGS: one feature I've always wanted in cpan was that it should first try to install a distro package and only if that's not available install something from cpan

[08:54] <jnthn> azawawi: Not at the moment

[08:55] <jnthn> azawawi: Though if we can figure a way to convey that's what we want (or other profiler settings) then we can get it to do that easily

[08:55] <jnthn> Since at the moment it generates a JSON blob and then sticks it into the HTML.

[08:55] <FROGGS> nine: interesting idea

[08:55] <jnthn> Could even env-var it...

[08:55] <lizmat> moritz: doing doc still, below 1G still...

[08:56] * jnthn looks at !canon-cat on Windows and despairs a bit over how much work it's doing.

[08:57] *** pmurias joined
[08:58] <Ven> m: role F[::T $a] { method f { say $a } }; F["foo".tc].f

[08:58] <camelia> rakudo-moar b6c6ae: OUTPUT¬´Foo‚ê§¬ª

[08:58] <Ven> must've been fixed at some point... Because it crashes here.

[08:58] <Ven> ooh, I'm just redefining it -.- ...

[08:58] <pmurias> why would adding package dependencies lead to combinatorical pain? 

[08:59] <lizmat> moritz: processing complete, now clocking at ~ 6GB

[08:59] <azawawi> is there an online video or article to show how to use profiler results? what to ignore? what to focus on? as an perl 6 application programmer that is.

[09:00] *** Mso150 left
[09:00] <moritz> azawawi: I mostly do two things: check the Routines tab, and sort by exclusive time; look if there are any routines gobbling up the majority of time

[09:01] <moritz> azawawi: if not, I sort again by inclusive time, and scroll down to where the numbers become significantly less than 100%, and see if there are any routines involved that are not part of the normal startup procedure

[09:02] *** anaeem1_ left
[09:02] <lizmat> moritz: still busy at 11 minutes, still around 6GB

[09:02] *** mmcleric joined
[09:03] <moritz> lizmat: if you manage to get a profile, please upload it somewhere

[09:03] <lizmat> that's the plan...  :-)

[09:03] <Ven> m: role A[::T] { subset _t of T; method x { _t } }; say A[Int].x # ??

[09:03] <camelia> rakudo-moar b6c6ae: OUTPUT¬´Cannot type check against type variable T‚ê§  in any type_check at src/gen/m-Metamodel.nqp:297‚ê§  in any type_check at src/gen/m-Metamodel.nqp:2821‚ê§  in block <unit> at /tmp/apyiNeLQsy:1‚ê§‚ê§¬ª

[09:04] <timotimo> moritz: if your call graph is big, the profiler will end up creating a gigantic data structure inside nqp code and then recurses around to build a json string from that

[09:04] <Ven> Not sure what's going on here :D. Sorry I'm trying fun stuff again.

[09:04] <timotimo> even for "regular" runs, the json ends up like 15mb easily

[09:04] <timotimo> sometimes 100

[09:04] <timotimo> you're probably reaching the point where the string is 160 mb big?

[09:04] <japhb> pmurias: Because of all the different OS distros, with different package managers, with different package names in different OS versions, and so forth.

[09:04] <Ven> m: role A[::T] { subset _t of T; method x { _t } }; say A[Int].perl # ?? again

[09:04] <camelia> rakudo-moar b6c6ae: OUTPUT¬´A[Int]‚ê§¬ª

[09:05] <Ven> m: role A[::T] { subset _t of T; method x { _t } }; say A[Int].x.perl # ?? again

[09:05] <camelia> rakudo-moar b6c6ae: OUTPUT¬´No such method 'perl' for invocant of type '_t'‚ê§  in block <unit> at /tmp/OpZeBAuyps:1‚ê§‚ê§¬ª

[09:05] <timotimo> japhb: supporting at least rpm and dpkg would be simple enough (well, really it'd be yum, dnf and (an optional feature of) apt-get)

[09:05] <japhb> pmurias: The suggestion to just use the package manager's facility for looking up package by file/lib name turns it into a much more tractable problem.

[09:05] <japhb> "an optional feature of"?

[09:05] <timotimo> japhb: if we don't find any of these methods we know about, we can still just say "sorry, we were expecting to find blahblah.so, but we couldn't. please figure out how to install that"

[09:05] *** isBEKaml joined
[09:06] <japhb> True, I'm just trying to aim high before we start compromising

[09:06] <dalek> perl6.org: 816f003 | timbo++ | README.md:

[09:06] <dalek> perl6.org: add hint: cpanm App::Mowyw Text::VimColor

[09:06] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/816f003556

[09:06] <dalek> perl6.org: d5ab2ae | timbo++ | README.md:

[09:06] <dalek> perl6.org: add link for how to enter a non-breaking space

[09:06] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/d5ab2aebcf

[09:06] <timotimo> i'm not sure if apt-file is available on any given apt system

[09:06] <japhb> (Don't design for LTA, I mean)

[09:06] <timotimo> ah

[09:06] <japhb> Great, we just make apt-file a dependency on Debian variants!  :-)

[09:07] <timotimo> it seems like tat'd be a pluggable design and you could i ntheory install more modules :P

[09:07] <moritz> apt-file is not part of a standard installation

[09:07] <moritz> and it needs an 'apt-file update' (like, recently)

[09:07] <timotimo> actually, the distribution could be asked to ship a custom perl6 module that knows stuff about the package management solution that is in use

[09:07] <timotimo> moritz: yup; on yum/dnf that happens automatically whenever you use it

[09:07] *** m_athias joined
[09:07] *** m_athias left
[09:08] <timotimo> also, there's this "packagekit" thing on linux; i don't know how widespread it is and if it gives access to a "what package(s) provide this file?" feature easily

[09:08] <japhb> moritz: If you're already installing new packages, you can usually assume the person has access to a package repo, and it's fairly edge case for that not to include being able to run apt-file update

[09:08] <japhb> (Note: I simplified that logic a bit from what's in my head.)

[09:09] <pmichaud> what is nqp::handle ?

[09:09] <timotimo> pmichaud: it's for exception handlers i believe

[09:09] <timotimo> japhb: there's a lot of people who want to install stuff "inside their home" or "for each project separately"

[09:10] *** m_athias joined
[09:11] <japhb> Ah abspath, my old enemy ...

[09:11] <Ven> darkness, darkness. my odl friend 

[09:11] <Ven> s/odl/old/

[09:12] <japhb> "I've come to talk with you again"

[09:14] <japhb> timotimo: From the apt-file info: "You can also run 'apt-file update' as

[09:14] <japhb> normal user to use a cache in the user's home directory."

[09:14] <timotimo> oooh

[09:14] <timotimo> tthat's not bad

[09:14] <timotimo> yum/dnf provides will also let a regular user fetch updated data

[09:15] <japhb> We have a winning path forward, methinks

[09:16] <timotimo> yays

[09:16] <nine> jnthn: running in gdb makes the bug go away, too. So it is a Heisenbug indeed.

[09:17] *** dalek left
[09:17] <timotimo> i hope nobody minds that i took off my shoes :P

[09:17] *** dalek joined
[09:17] *** ChanServ sets mode: +v dalek

[09:17] *** pepl joined
[09:17] *** rmgk_ joined
[09:17] *** rmgk left
[09:17] *** rmgk_ is now known as rmgk

[09:17] * moritz doesn't mind, at least :-)

[09:18] <timotimo> :D

[09:18] <timotimo> thanks

[09:18] *** anaeem1_ joined
[09:18] <dalek> std: bd22b5c | (Tobias Leich)++ | / (2 files):

[09:18] <dalek> std: rename built-in "eval" to "EVAL"

[09:18] <dalek> std: review: https://github.com/perl6/std/commit/bd22b5c08f

[09:19] <nine> Taking off shoes is allowed? Excellent!

[09:19] <FROGGS>  /o\

[09:19] <timotimo> i'll just claim i started that trend

[09:19] *** Juerd left
[09:20] *** Juerd joined
[09:20] *** PerlJam left
[09:21] <pmurias> japhb: combining both those methods seems best

[09:22] <pmurias> so if an exact package name is specified use that, if not we can improvise

[09:23] <timotimo> aye

[09:23] *** anaeem1_ left
[09:24] <japhb> pmurias: So that each perl 6 module distro would include a list of depended-on binaries/libs/other files, and then a map of OS + package manager to possibly sufficient packages?

[09:24] <japhb> Hmmm, some of the files will be named differently on different OSen

[09:24] <timotimo> the names are usually the same, but not the paths

[09:25] <timotimo> like fedora moving everything to /usr or something like that

[09:25] <japhb> timotimo: except on windows.  And for OS X, libraries

[09:25] <timotimo> we are supporting windows?!

[09:25] <timotimo> fuck that, i'm outta here.

[09:25] <timotimo> :P

[09:25] *** PerlJam joined
[09:26] <FROGGS> timotimo: we need to support windows since you took off your shoes :P

[09:27] <nine> Probably good to know: rpm supports capabilities. So for example on openSUSE one can do zypper install 'perl(Foo::Bar)' and it installs the perl-Foo-Bar package

[09:27] <timotimo> damn it, i foiled my own plans again

[09:27] <lizmat> moritz: still going strong at 33 mins :-)

[09:29] <pmurias> japhb: yes

[09:30] *** mauke_ joined
[09:30] *** lizmat_ joined
[09:30] *** timbunce__ joined
[09:30] *** ncm17seminar joined
[09:30] *** ncm17seminar left
[09:30] *** jungreuc left
[09:30] *** mauke left
[09:31] *** lizmat__ joined
[09:31] *** timbunce_ left
[09:31] *** leont left
[09:31] *** woolfy joined
[09:31] *** Ven left
[09:32] *** lizmat left
[09:33] *** mauke_ is now known as mauke

[09:35] *** lizmat_ left
[09:36] *** Ven joined
[09:37] <sjn> d3zPERad0

[09:37] <sjn> yeah

[09:37] <sjn> dammit

[09:37] <moritz> another password to change :-)

[09:37] <japhb> Heh

[09:38] <japhb> Good choice of references, though

[09:38] *** spider-mario joined
[09:38] *** spider-mario left
[09:38] <japhb> nine: Ah yes, I remember using that at a CentOS shop.

[09:41] *** denis_boyun_ joined
[09:42] *** spider-mario joined
[09:42] <Ven> m: say Hash[Str].perl

[09:42] <camelia> rakudo-moar b6c6ae: OUTPUT¬´Hash[Str]‚ê§¬ª

[09:42] <Ven> m: say Hash[Str, Int].perl

[09:42] <camelia> rakudo-moar b6c6ae: OUTPUT¬´Hash[Str,Int]‚ê§¬ª

[09:43] <Ven> m: sub parse(Str $txt --> :(Hash[Str, Str] --> Str)) is export { return Nil }

[09:43] <camelia> rakudo-moar b6c6ae: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/NvSNXGa3XY‚ê§Missing block‚ê§at /tmp/NvSNXGa3XY:1‚ê§------> [32msub parse(Str $txt --> [33m‚èè[31m:(Hash[Str, Str] --> Str)) is export { r[0m‚ê§    expecting any of:‚ê§        statement list‚ê§ ‚Ä¶¬ª

[09:43] *** leont joined
[09:44] <dalek> rakudo/nom: 5bb0d46 | (Elizabeth Mattijsen)++ | src/core/IO/Path.pm:

[09:44] <dalek> rakudo/nom: .IO on IO::Path is now a noop for performance

[09:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5bb0d46321

[09:44] <isBEKaml> .u 263a

[09:44] <yoleaux> U+263A WHITE SMILING FACE [So] (‚ò∫)

[09:45] <dalek> perl6.org: be5929a | timbo++ | source/index.html:

[09:45] <dalek> perl6.org: Add 'Getting started' to Documentation panel. Remove 'Using Perl 6' book link.

[09:45] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/be5929af05

[09:45] <dalek> perl6.org: ba47496 | timbo++ | source/documentation/index.html:

[09:45] <dalek> perl6.org: Put Advent calendar links in reverse order. Clean up "Using Perl 6" link.

[09:45] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/ba47496161

[09:45] *** kurahaupo left
[09:45] <isBEKaml> is "Using Perl 6" dead?

[09:45] <sjn> moritz: yeah, I really liked that password too :-|

[09:45] <moritz> isBEKaml: mostly

[09:45] <timotimo> pretty much, but you can resurrect it if youl ike, isBEKaml 

[09:45] <moritz> isBEKaml: I'm trying to salvage the remains for doc.perl6.org

[09:46] * sjn thinks the book project is very much worth salvaging

[09:46] <timotimo> m: sub parse(Str $txt) returns :(Hash[Str, Str] --> Str) is export { return Nil }

[09:46] <camelia> rakudo-moar b6c6ae: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/OOPmmKsh52‚ê§Missing block‚ê§at /tmp/OOPmmKsh52:1‚ê§------> [32msub parse(Str $txt) returns [33m‚èè[31m:(Hash[Str, Str] --> Str) is export { re[0m‚ê§    expecting any of:‚ê§        statement lis‚Ä¶¬ª

[09:46] <isBEKaml> moritz: ah, so all effort is now directed at doc.perl6.org?

[09:46] <timotimo> m: sub parse(Str $txt) returns &:(Hash[Str, Str] --> Str) is export { return Nil }

[09:46] <camelia> rakudo-moar b6c6ae: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/lLElVwc0as‚ê§Missing block‚ê§at /tmp/lLElVwc0as:1‚ê§------> [32msub parse(Str $txt) returns [33m‚èè[31m&:(Hash[Str, Str] --> Str) is export { r[0m‚ê§    expecting any of:‚ê§        statement lis‚Ä¶¬ª

[09:46] <moritz> isBEKaml: s/all/moritz's/

[09:47] <isBEKaml> moritz: I wanted to say "all doc efforts" but I'm not too good at English today. :-)

[09:48] <moritz> I can't speak for all doc efforts either

[09:48] <moritz> I think lichtkind++ occasionally still works on his tablets thingy

[09:48] <lizmat__> moritz: seems profile is reaching the end: memory use dropped < 2GB

[09:48] *** lizmat__ is now known as lizmat

[09:48] <isBEKaml> moritz: well, I don't see any other documentation for perl6 [except the "kid of light" ]

[09:48] <Ven> TimToady: are we supposed to be able to use signatures as return types?

[09:50] <isBEKaml> moritz: I wanted to ask - do we have a reference point for doc tablets anywhere? Any prior work showcasing knowledge in the form of "tablets"?

[09:50] <isBEKaml> lichtkind: ^^

[09:51] <moritz> no use hilighting lichtkind when he's not on the channel :-)

[09:51] <Ven> isBEKaml: if you're looking for something more akin to a tutorial ‚Äì which, I think, are what the tablets are ‚Äì you might be interested in learnxinyminutes.com/docs/perl6/

[09:51] <Ven> :P

[09:52] <isBEKaml> moritz: well, I'm just surprised that I typed his nick correctly. :-)

[09:52] <Ven> m: class A { method PARAMETERIZE_TYPE(|c) { say "Hey"; }}; say A[Int, Int, Str]

[09:52] <camelia> rakudo-moar b6c6ae: OUTPUT¬´Hey‚ê§True‚ê§¬ª

[09:52] <Ven> ooh :-). Is that specced somewhere? considered implementation details?

[09:52] <isBEKaml> Ven: LXYM == tablets? My question is about prior work than details. :-)

[09:53] <Ven> isBEKaml: not the same, no. But I think same idea

[09:53] <timbunce__> Is rakudobrew the recommended way to install rakudo (at least on *nix)? It's not mentioned on http://rakudo.org/how-to-get-rakudo/

[09:54] * sjn likes rakudobrew

[09:55] * isBEKaml is on windows, so nothing to do with brewing

[09:55] *** Sqirrel left
[09:55] <moritz> timbunce__: there is no one recommended way. If you follow rakudo from a distance, the monthly releases might be recommended. If you hack on rakudo primarily, you use git. If you hack on modules, but often have to update rakudo, rakudobrew is easiest

[09:57] <Ven> moritz: I'm next to somebody who's stuck because he used the release

[09:57] <Ven> and now he can't use panda

[09:57] <isBEKaml> Ven: that's the main usecase for rakudobrew, IIRC. 

[09:58] <isBEKaml> ISTR tadzik++ writing a script to help him with panda issues. That later turned into rakudobrew

[09:58] *** Sqirrel joined
[09:59] <moritz> Ven: then using the star release helps, it comes with a working panda

[09:59] <Ven> not as fun :-)

[10:00] <isBEKaml> Heh. by "the release", I read it as "Star"

[10:02] <timbunce__> moritz: umm, so what should http://perl6.org/getting-started/ recommend? I'll add some wording along those lines for now.

[10:03] <moritz> timbunce__: rakudo star

[10:04] <timbunce__> moritz: ok.

[10:06] <tadzik> rakudobrew is mostly a tribal knowledge at this point

[10:08] <timbunce__> Can rakudobrew + panda be used to get the same set of modules installed as rakudo star? Is there an easy way to do that (like a 'bundle')?

[10:09] <xiaomiao> if you use gentoo you have updated packages anyway ;)

[10:09] <moritz> xiaomiao: ... if oyu actually update

[10:09] <moritz> *you

[10:09] <xiaomiao> moritz: well duh

[10:09] <xiaomiao> I would kinda recommend updating to get up to date packages

[10:09] <pmichaud> also observing from a distance... I wonder if rakudobrew might be useful as a distribution

[10:10] <moritz> xiaomiao: I've seen enough out-of-date systems of all kinds to find that worth mentioning

[10:11] <isBEKaml> moritz: that's true - that's also why I found it funny to see people scrambling to update all their machines/servers after "shellshock"

[10:11] <xiaomiao> moritz: whenever I get access to a centos box the first thing I do is punch it 3-5 years forward

[10:11] <xiaomiao> just 20 minutes ago I did about 3 years of updates on a machine that was installed and then "ignored"

[10:12] <tadzik> timbunce__: there's a Task::Star module

[10:13] *** mmcleric left
[10:13] <timbunce__> tadzik: great. Is that what R* actually uses when the distro is being built? (so it's kept in sync)

[10:13] <isBEKaml> tadzik: I just noticed it - is it manually updated? :O

[10:13] <tadzik> timbunce__: no, it's not synchronized in any other way that me patching Task::Star every now and then :(

[10:14] <tadzik> to my defense, star module list doesn't change all that often :)

[10:15] <dalek> doc: 3780c14 | moritz++ | lib/Language/ (2 files):

[10:15] <dalek> doc: [regexes] document some best practices

[10:15] <dalek> doc: review: https://github.com/perl6/doc/commit/3780c1446f

[10:15] <timbunce__> tadzik: could you update the README in the rakudobrew and panda repos to add "panda install Task::Star" as an example? (I could send pull requests if you'd prefer)

[10:17] <tadzik> timbunce__: I don't see why not :)

[10:18] <timbunce__> tadzik: sweet, thanks.

[10:19] *** Hor|zon joined
[10:20] *** Ven left
[10:24] *** Hor|zon left
[10:24] *** virtualsue joined
[10:24] <pepl> timbunce__: the blog entry from pedro regarding messaging you mentioned at yesterday was https://www.simplicidade.org/notes/archives/2014/08/messaging.html - right?

[10:26] <timbunce__> pepl: yes, that's a great, detailed, "voice of experience" post.

[10:28] <dalek> panda: 5dc45a9 | tadzik++ | README.md:

[10:28] <dalek> panda: Use Task::Star as a usage example

[10:28] <dalek> panda: review: https://github.com/tadzik/panda/commit/5dc45a90ed

[10:28] <tadzik> timbunce__: there you go :)

[10:31] <pepl> https://photos-3.dropbox.com/t/1/AAD6t5Ki3XXSbbRBYJ-G04rBZiEitpO86dFc0vKHLY4TCg/12/35813734/jpeg/32x32/3/1413115200/0/2/IMG_1200.JPG/z9VqvMOgu9-3MYGmjMxNqsdQTqTGML27IiSuu_h0MFo%2C9NWN08bFTZJdfjMYDYTMdKHknMBHrMDhq7_0pDRcoHs?size=1024x768 # TimToady cowboy pose :-)

[10:32] *** denis_boyun_ left
[10:33] *** ribasushi left
[10:38] *** isBEKaml left
[10:44] <virtualsue> is there a hackathon irc channel?

[10:44] <virtualsue> (for austrian perl workshop attendees and friends)

[10:45] <mephinet> besides #perl6 and #austria.pm ?

[10:46] <virtualsue> hey if this is it, cool. just checking

[10:47] <azawawi> moritz: thanks for the advice regarding the --profile output. Will use it next time. moritz++ jnthn++

[10:47] *** cognome left
[10:47] *** erkan left
[10:49] *** erkan joined
[10:49] *** erkan left
[10:49] *** erkan joined
[10:52] <timbunce__> tadzik++

[10:52] <moritz> lizmat: did you get a profile html by now?

[10:52] <moritz> azawawi: you're welcome

[10:53] <timbunce__> panda install Digest::MD5 failed with t/perl5-compat.t ... No subtests run - known problem?

[10:53] *** anaeem1_ joined
[10:54] <itz> perl6 --help claims " Output from --profile can be visualized by kcachegrind."

[10:54] <moritz> timbunce__: I can reproduce it; seems to be a new one

[10:55] <moritz> itz: that's the old parrot profiling thingy; I guess we shoul update the help message

[10:56] *** virtualsue left
[10:57] <azawawi> do we have a Perl 6 module to Test HTTP routes?

[10:57] <japhb> moritz: lizmat is chatting with jnthn, pmichaud, timotimo, and nwc10, all AFK.

[10:59] <timbunce__> Any reason Task::Star isn't listed on http://modules.perl6.org ?

[11:00] *** colomon left
[11:01] *** ghostlines joined
[11:02] <tadzik> that's news to me

[11:02] *** colomon joined
[11:02] <tadzik> timbunce__: it is for me

[11:02] <itz> Salzburg airport has good wifi BTW :)

[11:03] <timbunce__> Gah. The page load stalled and I thought it had finished. Sorry.

[11:05] <moritz> timbunce__: fixed at https://github.com/cosimo/perl6-digest-md5/pull/8

[11:07] *** noganex_ left
[11:07] *** Ven joined
[11:08] <itz> I have a v minor * pull request at https://github.com/rakudo/star/pull/39 if anyone is able to look at it?

[11:10] <dalek> star: e2c9f4d | (Steve Mynott)++ | tools/build/Makefile.in:

[11:10] <dalek> star: add p6doc-index to build -f data file for p6doc

[11:10] <dalek> star: review: https://github.com/rakudo/star/commit/e2c9f4db07

[11:10] <dalek> star: 9dca1ca | moritz++ | tools/build/Makefile.in:

[11:10] <dalek> star: Merge pull request #39 from stmuk/master

[11:10] <dalek> star: 

[11:10] <dalek> star: add p6doc-index to build -f data file for p6doc

[11:10] <dalek> star: review: https://github.com/rakudo/star/commit/9dca1ca8f6

[11:11] <timbunce__> moritz: thanks

[11:11] <moritz> itz: commit bit sent your way

[11:13] <itz> thanis

[11:13] <itz> err thanks even

[11:13] *** mauke_ joined
[11:14] *** mauke left
[11:14] <timotimo> o/

[11:15] *** pepl left
[11:15] *** kurahaupo joined
[11:16] *** ghostlines left
[11:16] <timbunce__> The perl6.org/getting-started page suggests "Ask Perl 6 questions on perlmonks" - should it? I see that perlmonks isn't mentioned on the perl6.org/community page. Should it be?

[11:19] *** noganex joined
[11:19] <TimToady> Ven: you're supposed to be able to declare an "out" parameter for the return value, but that's not implemented

[11:19] <TimToady> but presumably a parameter can submatch a signature

[11:19] <TimToady> not sure what that would mean in a return parameter

[11:20] *** mauke_ is now known as mauke

[11:20] <TimToady> std: sub foo ($a,$b --> True) {...}

[11:20] <camelia> std bd22b5c: OUTPUT¬´(timeout)¬ª

[11:21] *** ghostlines joined
[11:21] *** flaviusb joined
[11:25] <japhb> moritz: lizmat has returned  :-)

[11:25] <lizmat> moritz: still running after 2.5 hours

[11:25] <colomon> how is the day going at APW?

[11:25] <lizmat> memory usage now flipping between 1.5GB and 9GB within seconds

[11:27] *** anaeem1_ left
[11:28] <Ven> std: sub foo(Str $ --> :(Hash[Str] --> Str)) {}

[11:28] <japhb> colomon: Pretty well.  Lots of people hacking and/or discussing

[11:28] <camelia> std bd22b5c: OUTPUT¬´ok 00:01 148m‚ê§¬ª

[11:28] <Ven> TimToady: right, it's just ENOTIMPLEMENTED

[11:29] <colomon> \o/

[11:29] <colomon> discussing hacking, I hope.  ;)

[11:29] <japhb> colomon: Mostly.  A little SF discussion as well.  :-)

[11:29] <Ven> I have two people trying out perl6 besides me

[11:29] <japhb> Ven: \o/

[11:29] <colomon> japhb: :)

[11:31] <dalek> perl6.org: 19f092c | timbo++ | source/getting-started/index.html:

[11:31] <dalek> perl6.org: Refer to Rakudo Star as distro+modules, remove mention of parrot.

[11:31] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/19f092cd4b

[11:31] <dalek> perl6.org: 7864ca3 | timbo++ | source/getting-started/index.html:

[11:31] <dalek> perl6.org: Change github perl6/book/downloads link to /documentation

[11:31] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/7864ca34df

[11:31] <dalek> perl6.org: bf85273 | timbo++ | source/getting-started/index.html:

[11:31] <dalek> perl6.org: Change rt.perl.org link to refer directly to perl6 bug queue

[11:31] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/bf85273d50

[11:31] <dalek> perl6.org: f10e3e7 | timbo++ | source/getting-started/index.html:

[11:31] <dalek> perl6.org: Replace dead http://planetsix.perl.org/ link with http://pl6anet.org/

[11:31] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/f10e3e7e72

[11:31] <dalek> perl6.org: 4a4c618 | timbo++ | source/getting-started/index.html:

[11:31] <dalek> perl6.org: Remove perlmonks.org link as we already have a /community page link

[11:31] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/4a4c618e65

[11:31] <Ven> timbotimbo \o/

[11:31] <TimToady> Ven: that sig is starting to look suspiciously like Haskell...

[11:31] <Ven> TimToady: sorry? :P

[11:31] <Ven> *g*

[11:32] <TimToady> multiple --> for currying and such

[11:32] <Ven> can I do --> --> ?

[11:32] <Ven> :P

[11:39] <lizmat> moritz: ok, if it doesn't finish after 3 CPU hours, I'm going to kill it as the resulting file is too large to be useful anyway

[11:39] <lizmat> what would be a suggested setting to try it again, then?

[11:44] *** ghostlines left
[11:45] <colomon> Zlib and SSL modules started failing overnight.  :\

[11:45] <moritz> lizmat: --sparse=10 

[11:45] <moritz> lizmat: as an option to htmlify,p6

[11:45] *** brrt joined
[11:45] <lizmat> gotcha

[11:48] *** kurahaupo left
[11:49] *** ghostlines joined
[11:49] <lizmat> restarted

[11:52] <lizmat> processing complete, I guess it's now working on the profile

[11:53] *** bbkr joined
[11:58] <brrt> bartolin: wrt 112678 - where is this behavior specced?

[11:58] *** bjz left
[11:59] *** kurahaupo joined
[12:00] *** pepl joined
[12:02] *** kaare_ left
[12:06] <dalek> specs: 03b0723 | pmichaud++ | S05-regex.pod:

[12:06] <dalek> specs: [S05]:  Based on #apw2014 discussion, mark PEG tiebreaker #5 as conjectural.

[12:06] <dalek> specs: review: https://github.com/perl6/specs/commit/03b0723ac8

[12:19] *** ghostlines left
[12:20] *** Hor|zon joined
[12:23] <pmichaud> Instead of  Supply.interval(1), I wonder if it's worth considering   (1..*).supply(:interval(1))

[12:23] <pmichaud> that would also enable things like

[12:24] <pmichaud> (1,2,4 ... *).supply    # provide powers-of-two at 1 second intervals

[12:24] <pmichaud> lines().supply    # read lines from a file 

[12:24] <pmichaud> etc.

[12:24] * pmichaud is reading S17.  :-)

[12:25] *** Hor|zon left
[12:26] *** rurban joined
[12:29] <mephinet> $base_path.IO.watch.act consumes 100% cpu on my machine...

[12:30] <japhb> mephinet: Which backend?

[12:30] * masak rezzes

[12:30] * masak backlogs, heavily

[12:30] <mephinet> moarvm

[12:30] <JimmyZ> known issue.

[12:30] * japhb listens to the sound effect of masak rezzing in

[12:30] <mephinet> JimmyZ: ok, thanks

[12:31] *** cognome joined
[12:31] <masak> I was gone. this is the first time I've been wanting to use the term "disruptive", in a *good* way, of my family, on my apartment. wow.

[12:31] <masak> they came. they saw. they IKEA'd.

[12:33] <dalek> Inline-Python: ef75a9f | nine++ | / (9 files):

[12:33] <dalek> Inline-Python: Implement initialization of Python and eval without return values.

[12:33] <dalek> Inline-Python: review: https://github.com/niner/Inline-Python/commit/ef75a9f0cf

[12:36] <timbunce__> Is Blizkost (mentioned on perl6.org/compilers) dead now we have Inline::Perl5?

[12:37] * masak thinks "no"

[12:39] <masak> though likely it will find much less use, perhaps?

[12:39] <Ven> ooh inline::python

[12:40] <masak> anyway, Inline::Perl5 should probably be mentioned instead of Blizkost.

[12:40] <masak> wiw, Inline::Python.

[12:40] <masak> wow*

[12:40] * Ven goes to nine to glance over his shoulder :o)

[12:40] <masak> it's almost as if the old Parrot dream is coming true...

[12:40] <dalek> perl6.org: 3ab06f6 | timbo++ | source/getting-started/involved.html:

[12:40] <dalek> perl6.org: Minor tweaks to getting-started/involved

[12:40] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/3ab06f6639

[12:40] <dalek> perl6.org: ff74ec0 | timbo++ | source/community/index.html:

[12:40] <dalek> perl6.org: Minor tweaks to community/index

[12:40] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/ff74ec082d

[12:40] <dalek> perl6.org: 3bf0553 | timbo++ | source/compilers/index.html:

[12:40] <dalek> perl6.org: Switch Compilers list from ul to dt. Add Inline::Perl5 to Supplementals.

[12:40] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/3bf0553873

[12:40] <masak> "one VM, all languages"

[12:40] <Ven> hehe.

[12:40] <Ven> well that's cheating but :P

[12:41] <masak> troo

[12:41] <masak> but we can do less cheating gradually

[12:41] <masak> and in the meantime, it'll still teach us stuff

[12:41] *** bjz joined
[12:41] <masak> like how to exchange rich objects across the rift

[12:41] *** colomon left
[12:41] <JimmyZ> yeah, since we have toy php/ruby compilers on nqp

[12:41] <JimmyZ> :)

[12:43] <dalek> nqp: 3047e97 | TimToady++ | src/QRegex/Cursor.nqp:

[12:43] *** laben joined
[12:43] <dalek> nqp: AND fates with 0xffffffff, prep for longest-lits

[12:43] <dalek> nqp: review: https://github.com/perl6/nqp/commit/3047e975d2

[12:43] <timbunce__> perl6.org/compilers has a link to "Rakudo's setting library" with no further description. Can someone give me a sentence or two to describe it?

[12:44] <laben> hello #perl6'ers, are you hackaton'ing?

[12:46] *** colomon joined
[12:46] <laben> FROGGS++: i used your pull req for Digest::MD5 to fix it and make it run

[12:47] <FROGGS> ohh, that sounds good :o)

[12:48] *** chenryn joined
[12:48] <laben> i am backlogging now, but today was especially active ;P

[12:50] <japhb> laben: *hackhackhack*

[12:50] *** Sqirrel left
[12:51] * masak .oO( hacktive )

[12:51] <laben> wow, nine++, inline python seems very interesting

[12:51] <laben> gonna try to build it now

[12:52] <japhb> timbunce__: A Perl 6 setting defines all of the classes, routines, and terms available when your script starts -- in Perl 5 parlance, it's roughly all the things you can see in perlfunc, perlop, etc.

[12:52] <timbunce__> japhb++

[12:53] <laben> nine: which python version does your module require?

[12:53] <japhb> There are different settings for default use, restricted (for unsafe environments, like camelia), etc.

[12:54] <timotimo> are spec tests supposed to be clean at the moment?

[12:54] <masak> aren't they supposed to be clean always?

[12:54] <timotimo> well, yeah

[12:54] <timotimo> er, i meant:

[12:54] <timotimo> with a normal rakudo on master, should i expect it to pass all everythings?

[12:55] <timotimo> because right now i see a few fails :(

[12:55] <japhb> Well, we known S17 tests are flakey (which is why I'm working on extending perl6-bench to support stress tests that we can use to root out said flakiness), but I'm not sure about anything else.

[12:55] <japhb> *we know

[12:55] <masak> timotimo: without knowing more, I would say "yes, you should".

[12:55] <timotimo> :)

[12:56] <masak> and all errors should be reported somewhere centrally, and ideally flagged up and investigated.

[12:56] <timotimo> i'm seeing too many fails, i shall build a clean master rakudo

[12:56] <timotimo> oh, i should remove that debug say statement from the middle of rakudo's bootstrap %)

[12:56] <japhb> That would probably help.  :-)

[12:56] <masak> oops :)

[12:57] <timotimo> "expected 'blah' but got 'DEBUGblahDEBUGDEBUG'"

[12:57] <masak> DEBUGlolDEBUG

[12:57] <laben> whoa, a single .pm file blows up to a 3.2MB .moarvm file, how is this even possible?

[13:01] <masak> pmurias: http://irclog.perlgeek.de/perl6/2014-10-10#i_9487876 -- very yes!

[13:02] <timotimo> spec tests look much better this time

[13:02] <mephinet> Another beginner's perl5 question: which module to use for http access? LWP::Simple?

[13:02] <tadzik> HTTP::UserAgent

[13:02] <timotimo> we actually have one that's a bit better

[13:02] <timotimo> yes, that one

[13:02] <timotimo> ohai tadzik :)

[13:02] <tadzik> ohai :)

[13:02] <timotimo> have you checked out my super awesome game yet?

[13:02] *** chenryn left
[13:03] <mephinet> tadzik: thanks!

[13:03] <tadzik> timotimo: no, I only heard of the lightning talk :)

[13:04] <colomon> timotimo: looked to me like I'd need to install cairo to try it?

[13:04] <tadzik> timotimo: where do I find it?

[13:05] <timotimo> that's right

[13:05] <rurban> Updated parrot profiles for improved utf8_substr handling: https://github.com/parrot/parrot/issues/1097

[13:06] <jnthn> timbunce__: I'd say Blizkost is pretty dead

[13:06] <timotimo> sadly won't be easy on a mac ;(

[13:06] <timotimo> tadzik, colomon: https://github.com/timo/gtk_cairo_shooter

[13:07] <timotimo> arrow keys left/right and space bar

[13:07] <dalek> perl6.org: 397ba99 | timbo++ | source/compilers/index.html:

[13:07] <dalek> perl6.org: Add note on NQP, and description for Settings to /compilers

[13:07] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/397ba99349

[13:07] <timbunce__> jnthn: the page now says "(Mostly superseded by Inline::Perl5.)" - or will when updated next

[13:07] <colomon> timotimo: I already had that page open in my browser

[13:07] <jnthn> timbunce__: OK. But given I don't think it even works against current Rakudo, it's probably dead. There's no reason to resurect it because Inline::Perl5 works, and does more.

[13:07] <timotimo> i had some local changes to moarvm that made trigonometry explode

[13:07] <timotimo> but other than that ...

[13:08] <timbunce__> jnthn: ok, I'll remove it

[13:08] <jnthn> timbunce__: Thanks.

[13:08] * colomon decides he might as well try it to verify he doesn't have everything needed to make it work.  

[13:09] * colomon is pretty sure GTk::Simple is not going to work

[13:09] <laben> nine: i tried Inline::Python and it seems to work only with Python 2, is that correct?

[13:09] <colomon> and it doesn't

[13:11] <nwc10> good *, #perl6

[13:12] <masak> nwc10! \o/ UGT to you, sir!

[13:12] * masak .oO( 'tis the season for universal greetings, and a good will towards all )

[13:14] *** kjs_ joined
[13:14] *** rurban left
[13:15] *** lizmat left
[13:16] *** Sqirrel joined
[13:17] <timotimo> merry christmas, nwc10!

[13:17] <masak> and a happy new year!

[13:17] <JimmyZ> Stage parse      :  67.588 # moar on my thinkpad ...

[13:18] <masak> m: say "Is It Christmas?" ~~ * # in Perl 6, any time is Christmas...

[13:18] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´True‚ê§¬ª

[13:18] <masak> \o/

[13:18] <nwc10> It's Christmas in Heaven | There's great films on TV | The Sound of Music twice an hour

[13:18] <mauke> m: say *

[13:18] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´*‚ê§¬ª

[13:18] <mauke> well then

[13:18] <nwc10> it's vaguely appropriate :-)

[13:18] <masak> what-*ever*

[13:19] * masak rolls his eyes

[13:19] <mauke> *,*

[13:25] <brrt> anybody with special experience knows how to negate a floating point on x86-64

[13:26] <tadzik> hmm, I seem to be missing libgobject-2.0 for GTK::Simple, weird

[13:27] *** chenryn joined
[13:28] <timotimo> may be the wrong name

[13:28] <tadzik> I have glib2.0-dev installed alright

[13:28] *** chenryn left
[13:28] <timotimo> you don't need the -dev for the .so

[13:28] <timotimo> brrt: i've tried that, too

[13:29] *** meguli joined
[13:29] <timotimo> my attempt was like xor the xmm0 with xmm0, then subtract the number from thar

[13:29] <timotimo> that*

[13:29] <masak> updated https://rt.perl.org/Ticket/Display.html?id=118867 -- forgot to cc p6-c.

[13:29] *** meguli left
[13:29] <nwc10> masak: only confusion is that it's very very sunny in Salzberg

[13:30] <nwc10> I can't spell Salzburg, oops

[13:30] <masak> "You might say that positive lookaheads are opaque to LTM, but negative lookaheads are transparent to LTM." -- this is now my favorite sentence in all of the spec^Wsynopses.

[13:30] *** chenryn joined
[13:30] <masak> very poetic.

[13:31] *** isBEKaml joined
[13:33] *** guru joined
[13:33] *** guru is now known as Guest14253

[13:34] <Ven> masak: I've actually been trying to convince FROGGS to plug v5 into nine's I::P5, actually :D

[13:35] *** colomon left
[13:36] <pmurias> Ven: how do you want it plugged?

[13:36] <Ven> pmurias: actions class calling inline::p5

[13:36] *** Guest14253 is now known as ajr_

[13:36] <masak> yeah, I don't understand either :)

[13:36] *** kjs_ left
[13:37] <Ven> so you have BOTH v5's "nice" syntax, and i::p5 usefulness

[13:37] <masak> I think I know too little about how Inline::Perl5 works to see the beauty of your proposal.

[13:37] <Ven> well, inline::p5 forces you to do stuff like $i5.use('...') and stuff.

[13:38] <Ven> if we could do what I think we can, we would have {use v5; use Module;}

[13:38] <masak> aha

[13:38] <masak> yes, then I can see the charm

[13:39] <Ven> I just decided what I was going to hack on, basically :P

[13:39] <brrt> it's annoying

[13:39] * brrt afk for a bit

[13:39] *** brrt left
[13:39] <Ven> erm, I was trying to base off what you did, masak, in your indented-stuff parsing, but I just threw it out because it can't work while parsing :P

[13:39] <Ven> but FROGGS++ helped me think through that. Recursion is the key! :P

[13:39] <masak> yeah

[13:40] <masak> Ven: I've been re-thinking the indent stuff, but I haven't written up the rethink as a module.

[13:40] <masak> if I did, that new module would probably replace the old one.

[13:40] <Ven> masak: so now, I have rule line($indent = 0)

[13:40] <Ven> and it tries to parse $indent+1 lines

[13:41] <masak> oki

[13:41] <masak> sounds rather nice :)

[13:41] <Ven> yes. Also, in your case, you get the indented stuff "after" the "current line". Which I don't want - I want it as a children list

[13:42] <masak> aha.

[13:42] <masak> yeah.

[13:42] <masak> would be nice to extract these new learnings into a module. :)

[13:43] <masak> maybe we can collaborate on that at some point?

[13:43] <Ven> just come tomorrow :P

[13:43] <Ven> sorry. I'll try to work on that tomorrow, and report back

[13:44] <masak> cool.

[13:45] <masak> consider the Text::Indented namespace to be yours if you have ideas that can reach longer than what's currently there :)

[13:54] <moritz> m: my regex ws { b+ }; given 'abba' { say so m:r/a a/ }

[13:54] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´False‚ê§¬ª

[13:54] <moritz> m: grammar A { regex ws { b+ }; token rule TOP {a a}}; say A.parse('abba')

[13:54] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/0KK3ncBtgL‚ê§Malformed regex‚ê§at /tmp/0KK3ncBtgL:1‚ê§------> [32mgrammar A { regex ws { b+ }; token rule [33m‚èè[31mTOP {a a}}; say A.parse('abba')[0m‚ê§    expecting any of:‚ê§        statemen‚Ä¶¬ª

[13:55] <moritz> m: grammar A { regex ws { b+ }; rule TOP {a a}}; say A.parse('abba')

[13:55] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´ÔΩ¢abbaÔΩ£‚ê§‚ê§¬ª

[13:55] *** kaare_ joined
[13:55] *** mauke left
[13:55] *** mauke_ joined
[13:57] *** ribasushi joined
[13:58] *** kjs_ joined
[14:01] *** isBEKaml left
[14:01] *** mauke_ is now known as mauke

[14:02] <dalek> Inline-Python: dac3ee9 | nine++ | / (4 files):

[14:02] <dalek> Inline-Python: Implement conversion of Python integer to Int

[14:02] <dalek> Inline-Python: review: https://github.com/niner/Inline-Python/commit/dac3ee954e

[14:03] *** isBEKaml joined
[14:03] <nine> laben: quite possible. That reminds me that I should update my local Perl 5 Inline::Python to the current version which supports Python 3 already... 

[14:04] *** chenryn left
[14:04] *** zakharyas joined
[14:04] <mephinet> m: IO::Path.new(:basename("foo"), :directory("/bar")).path

[14:04] <camelia> rakudo-moar 5bb0d4: ( no output )

[14:05] <mephinet> m: say IO::Path.new(:basename("foo"), :directory("/bar")).path

[14:05] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´foo‚ê§¬ª

[14:05] <mephinet> m: say IO::Path.new(:basename("foo"), :directory("/bar")).Str

[14:05] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´foo‚ê§¬ª

[14:06] <mephinet> ^ shouldn't this return /bar/foo, according to http://doc.perl6.org/type/IO%3A%3APath#method_Str

[14:06] *** chenryn joined
[14:07] <moritz> mephinet: I think the spec changed recently, and doc.perl6.org hasn't caught up :(

[14:08] <mephinet> ok, so I'll take a look into the source, maybe I'll figure out a way to get what I want...

[14:08] <moritz> m: say IO::Path.new(:basename("foo"), :directory("/bar"))

[14:08] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´"/home/p6eval/foo".IO‚ê§¬ª

[14:08] <moritz> mephinet: abspath, I think

[14:09] <moritz> m: say IO::Path.new(:basename("foo"), :directory("/bar")).abspath

[14:09] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´/home/p6eval/foo‚ê§¬ª

[14:09] *** kjs_ left
[14:11] <dalek> doc: 9c96bbc | moritz++ | lib/Type/IO/Path.pod:

[14:11] <dalek> doc: document abspath

[14:11] <dalek> doc: review: https://github.com/perl6/doc/commit/9c96bbc883

[14:16] *** colomon joined
[14:16] *** go|dfish left
[14:19] <laben> nine: basically if i change configure.pl6 to use python2 instead of python (which is python3 on my system) everything works as inteded, while using py3 it gives warnings while compiling pyhelper.c and then cannot find the resulting .so file for the tests

[14:21] *** Hor|zon joined
[14:22] <laben> if i define a sub or a method as multi, i need to use multi for every definition and not only the first, right?

[14:22] <moritz> laben: right

[14:23] <laben> can i have a mutli submethod BUILD?

[14:23] <laben> multi*

[14:24] <moritz> I have no idea if multi submethods are supported

[14:24] <moritz> m: class A { multi submethod x() { 1 }; multi submethod x(Int) { 2 } }; say A.x; say A.x(42)

[14:24] <laben> ok, so i would need to make a multi new and then a signle BUILD. that is fine, right?

[14:24] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´1‚ê§2‚ê§¬ª

[14:25] <moritz> laben: seems to work

[14:26] *** Hor|zon left
[14:30] <timotimo> why is a "rotor" method specced for Supply, but not for Iterables in general? 

[14:30] <moritz> what does it do?

[14:31] <mephinet> moritz: so abspath doesn't do the trick as well, right?

[14:31] <moritz> mephinet: what do you want to get?

[14:32] <mephinet> I think /foo/bar would be the correct result for IO::Path.new(:basename("foo"), :directory("/bar"))

[14:32] <mephinet> ah, /bar/foo

[14:33] <laben> mephinet: try changing $*CWD

[14:34] <moritz> m: say IO::Path.new(:basename("foo"), :directory("/bar")).abspath

[14:34] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´/home/p6eval/foo‚ê§¬ª

[14:34] <laben> mephinet: afaik there should be a CWD parameter for IO::Path

[14:34] *** lizmat joined
[14:34] <moritz> huh, that feels wrong

[14:34] <moritz> where's the directory gone?

[14:35] <moritz> oh, it's now called dirname

[14:35] <pmichaud> (rotor method)  I was remarking to lizmat+jnthn that some of the Supply methods need renaming or reconsideration

[14:36] <mephinet> ah, the name of the parameter changed, and :directory is ignored now!

[14:36] <isBEKaml> Hello, pmichaud - good to see you here. How's life back? :-)

[14:36] <mephinet> moritz, laben: thanks

[14:36] <pmichaud> isBEKaml: life is good... not sure it's "back" yet but I'm hopeful.  :)

[14:37] <masak> then we're hopeful too!

[14:37] <isBEKaml> pmichaud: so's hope. :-)

[14:38] <laben> is it normal that the object.new function silently ignores unrequired named parameters while complaining for unrequired positionals?

[14:39] <masak> laben: yes

[14:39] <masak> laben: not just the .new method -- all methods work like that.

[14:39] <masak> laben: for details, see "Interface consistency" in S12.

[14:40] <laben> masak: thanks, i'll read that now, but is there a profound reason?

[14:40] <moritz> yes

[14:40] <isBEKaml> masak: "Interface consistency" -- why do I get the feeling that it's AMOP all over? :-)

[14:40] <masak> laben: the profound reason is what you're about to read :)

[14:40] <masak> isBEKaml: AMOP?

[14:41] <isBEKaml> masak: Kiczales, Gregor et al

[14:41] * masak .oO( Asynchronous Matter Of Programming )

[14:41] <laben> masak: i mean, why there isn't a slurpy array? what's the reason for not having that?

[14:41] <masak> isBEKaml: Aspect-Oriented Programming?

[14:41] <isBEKaml> masak: Art of MOP

[14:41] <masak> oh, oh.

[14:41] <masak> right.

[14:42] <masak> yes, I see it now :)

[14:42] <masak> isBEKaml: I think it's a little bit less deep than that, actually.

[14:42] <timotimo> m: say "banana".comb.rotor(3, 1).perl

[14:42] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´($("b", "a", "n"), $("n", "a", "n"), $("n", "a")).list‚ê§¬ª

[14:42] <timotimo> m: say "banana".comb.rotor(4, 1).perl

[14:42] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´($("b", "a", "n", "a"), $("a", "n", "a")).list‚ê§¬ª

[14:42] <masak> isBEKaml: it's just safe-guarding OO extensibility.

[14:42] <timotimo> why does it produce a two-element list in the n=3 case and a 3-element list in the n=4 case?

[14:42] <masak> isBEKaml: in class-space, not meta-space.

[14:42] <timotimo> just me not understanding rotor, or a bug in rotor?

[14:43] <isBEKaml> masak: I recently had the time to read through some of AMOP and it dawned on me that some of p6's OO design were taken from AMOP. 

[14:43] <dalek> doc: 7d9684d | moritz++ | lib/Type/IO/Path.pod:

[14:43] <dalek> doc: [IO::Path] Track method/attribute name changes

[14:43] <dalek> doc: review: https://github.com/perl6/doc/commit/7d9684d838

[14:43] <isBEKaml> masak: for eg., multi-methods (called overloads in Java,C# land) are exactly called that in AMOP, along with their callnext, callsame conventions. 

[14:43] <moritz> isBEKaml: no surprise here, there isn't much else documentation on MOPs

[14:44] <masak> jnthn++ read AMOP while implementing 6model.

[14:44] <isBEKaml> moritz: it shouldn't have surprised me, but it did. 

[14:44] *** spider-mario left
[14:45] <dalek> rakudo/nom: ddc85c1 | (Elizabeth Mattijsen)++ | src/core/IO/Path.pm:

[14:45] <dalek> rakudo/nom: Make IO::Path.new(:directory) work (again)

[14:45] <dalek> rakudo/nom: 

[14:45] <dalek> rakudo/nom: It's all in which the candidates are listed.

[14:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ddc85c1cd9

[14:51] *** azawawi left
[14:52] <Ven> .oO( the king is dead, long live the king ) # want array

[14:53] <moritz> Ven: though Perl 6 would call it 'wantlist', because we try to learn from p5's mistakes :-)

[14:53] <Ven> :P. it's actually for sink, here.

[14:54] * moritz speculates that Ven listens to some discussathon

[14:54] <timotimo> i figured it out

[14:54] <Ven> pm, larry and jonathan talking together :P

[14:54] <moritz> Ven: that can be fascinating :-)

[14:55] <dalek> doc: 5a36ec6 | moritz++ | lib/Language/regexes.pod:

[14:55] <dalek> doc: [regexes] elaborate a bit on whitespace parsing

[14:55] <dalek> doc: review: https://github.com/perl6/doc/commit/5a36ec680d

[14:55] <timotimo> i was actually looking for .rotor(3, 2) and .rotor(4, 3)

[14:55] <pmichaud> TimToady:  https://rt.perl.org/Public/Bug/Display.html?id=113026

[14:55] <Ven> moritz: yeah. I actually (almost) convinced larry to unspec something :-P

[14:55] <moritz> ^^ sombody please look at the commit above, if it's somewhat understandable, and not total BS

[14:56] <timotimo> Ven: that's unspectacular

[14:56] <Ven> huehuehue.

[14:56] <masak> nice. just found https://glyph.twistedmatrix.com/2008/06/data-in-garbage-out.html which makes very much the same point I made in http://strangelyconsistent.org/blog/its-just-a-tree-silly -- but quite differently.

[14:56] *** erkan left
[14:57] <FROGGS> m: my num $x = "42e2"; say($x)

[14:57] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´This type cannot unbox to a native number‚ê§  in block <unit> at /tmp/OwVuoLl3_a:1‚ê§‚ê§¬ª

[14:57] <FROGGS> m: my num $x = nqp::unbox_s("42e2"); say($x)

[14:57] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´4200‚ê§¬ª

[14:57] <jnthn> m: class A { BEGIN {say A.^name } }

[14:57] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´===SORRY!===‚ê§No such method 'dispatch:<.^>' for invocant of type 'A'‚ê§¬ª

[14:58] <Ven> moritz: this is a hard issue

[14:58] *** erkan joined
[14:58] <Ven> moritz: actually, I feel very confident now :P

[14:59] <b2gills> m: my num $x = "42e2".Num; say($x)

[14:59] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´4200‚ê§¬ª

[14:59] <b2gills> m: (enum ( :a(1), <b> )).perl.say # Fixed by https://github.com/rakudo/rakudo/pull/321/

[14:59] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´EnumMap.new("a", 1, "b", 0, )‚ê§¬ª

[15:00] <FROGGS> moritz: is that a typo? https://github.com/perl6/doc/commit/5a36ec680d#diff-043ca2b19e92cdfbc89a961581d54408R923

[15:00] *** nbrown joined
[15:00] *** anaeem1 joined
[15:00] <moritz> FROGGS: looks like a vim-o :-)

[15:01] <FROGGS> :o)

[15:01] <moritz> FROGGS++

[15:01] <dalek> doc: 430aed8 | moritz++ | lib/Language/regexes.pod:

[15:01] <dalek> doc: fix vim-o

[15:01] <dalek> doc: review: https://github.com/perl6/doc/commit/430aed8042

[15:01] <Ven> hehehe

[15:03] <isBEKaml> moritz: "unwildly"?

[15:03] <mauke> unwidely

[15:03] *** anaeem1 left
[15:03] <masak> pmichaud: +1 on http://irclog.perlgeek.de/perl6/2014-10-11#i_9490121

[15:03] <isBEKaml> oh, FROGGS++ already pointed that out

[15:04] <masak> pmichaud: in fact, there's a transcript from a SoTO 2000 somewhere which agrees quite spot-on with that view.

[15:04] <isBEKaml> mauke: unwieldy - having to spell sucks. 

[15:05] <masak> unweirdee

[15:06] *** xenoterracide_ joined
[15:07] <masak> ooh, new jnthn++ talk slides in the backlog!

[15:09] <mephinet> m: say $*TMPDIR

[15:09] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´"/tmp".IO‚ê§¬ª

[15:10] <mephinet> $ perl6 -e 'say $*TMPDIR'

[15:10] <mephinet> returns the current directory on my rakudobrew'ed perl6, instead of $TMPDIR...

[15:10] <Ven> ^ confirming. And it seems weird. It doesn't work on his machine, but it does work on mine. Might be because I have a mac...

[15:11] <masak> please rakudobug-submit it, with all pertinent info.

[15:11] <mephinet> masak: ok, will do

[15:12] <FROGGS> mephinet: it checks if /tmp is writeable and will fall back to CWD if not

[15:13] <isBEKaml> FROGGS: that's weird, /tmp should be world-writable, right?

[15:13] <mephinet> my /tmp is writable, though...

[15:13] <lizmat> moritz: in the end I had a 180MB JSON file, with a lot of Inf% and NaN%

[15:13] <Ven> ^ its tmp is writable

[15:13] <lizmat> and the reify's and the gimme's had been eating it all

[15:13] <Ven> his*

[15:13] <Ven> sorry :(

[15:14] <isBEKaml> Ven: Get out of Austria, fast! Their German is messing with you. :P

[15:14] <Ven> isBEKaml: it is. So I'm speaking in french :P

[15:14] *** pepl1 joined
[15:14] <moritz> lizmat: sad, but not too surprising

[15:14] <lizmat> indeed...

[15:15] *** chenryn left
[15:15] * moritz wonder whether to way for GLR

[15:15] <moritz> *wait

[15:15] <moritz> and whatever I do, I should wait until after sleep

[15:15] <FROGGS> m: my $io; say first( { .defined && ($io = .IO).all: <d r w x> }, %*ENV<TMPDIR>, '/tmp') ?? $io !! IO::Path.new(".");

[15:15] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´"/tmp".IO‚ê§¬ª

[15:15] <FROGGS> mephinet: what does that do on your box?

[15:16] <dalek> Inline-Python: 48251a5 | nine++ | / (3 files):

[15:16] <dalek> Inline-Python: Convert (Unicode) strings from Python to Perl 6

[15:16] <dalek> Inline-Python: review: https://github.com/niner/Inline-Python/commit/48251a5554

[15:16] <Ven> moritz: wait for what?

[15:16] <Ven> nine: should have embedded PyPy :PPP

[15:16] <pmurias> we now have an Inline-Python?

[15:16] <Ven> pmurias: looks like it!

[15:16] <Ven> .oO( Inline::PHP ‚Äì so you can write perl6 instead! ) 

[15:16] <FROGGS> >.<

[15:17] <FROGGS> Inline::PHP4 - just because!

[15:17] <japhb> Inline-Haskell -- so you can reimplement Pugs from the outside-in.

[15:17] <nine> Ven: go ahead ;)

[15:17] <Ven> hahaha :P

[15:18] *** chenryn joined
[15:18] <mephinet> FROGGS: the CWD. I guess I have an idea why...

[15:18] <pmurias> no no, that's all backwards we want a PHP backend not the ability to use PHP code

[15:18] <mephinet> I'm using mod_tmpdir

[15:18] <Ven> pmurias: huehuehue

[15:18] <mephinet> which sets $TMPDIR to a directory with reduced permissions

[15:18] <mephinet> $ ll -d $TMPDIR

[15:18] <mephinet> drwxrwx--T 5 root philipp 4096 Oct 12 17:18 /tmp/.private/philipp

[15:18] *** zakharyas left
[15:18] <FROGGS> mephinet: all your fault :P

[15:19] <isBEKaml> all with setuid bits? :-)

[15:19] <FROGGS> though...

[15:19] <FROGGS> it should still take /tmp as I understand it

[15:20] <FROGGS> m: %*ENV<TMPDIR> = 'FOOOOO'; my $io; say first( { .defined && ($io = .IO).all: <d r w x> }, %*ENV<TMPDIR>, '/tmp') ?? $io !! IO::Path.new(".");

[15:20] <FROGGS> wait for it...

[15:20] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´(timeout)¬ª

[15:20] <FROGGS> :/

[15:20] <FROGGS> m: %*ENV<TMPDIR> = 'FOOOOO'; my $io; say first( { .defined && ($io = .IO).all: <d r w x> }, %*ENV<TMPDIR>, '/tmp') ?? $io !! IO::Path.new(".");

[15:20] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´Unknown test d‚ê§  in method all at src/gen/m-CORE.setting:15641‚ê§  in block <unit> at /tmp/4nNBiVINlK:1‚ê§‚ê§¬ª

[15:20] <FROGGS> ohh

[15:21] <FROGGS> ahh, it is not supposed to be a string perhaps?

[15:22] *** go|dfish joined
[15:22] <mephinet> fun fact: 

[15:22] <mephinet> $ perl6 -e "say '/tmp'.IO.all(<d r w x>)"

[15:22] <mephinet> True

[15:22] <mephinet> so it ever seems to evaluate it on /tmp...

[15:23] <FROGGS> yeah

[15:23] *** go|dfish left
[15:23] *** isBEKaml left
[15:23] <FROGGS> m: say first( { .defined }, %*ENV<TMPDIR>, '/tmp')

[15:24] <camelia> rakudo-moar 5bb0d4: OUTPUT¬´(timeout)¬ª

[15:25] *** rindolf joined
[15:26] <mephinet> masak: another beginner's question, sorry: where do I find rakudobug-submit? neither find nor google gives me a link...

[15:27] *** go|dfish joined
[15:27] <FROGGS> mephinet: see http://rakudo.org/tickets/

[15:27] <FROGGS> "New tickets can be created by sending email to [email@hidden.address]
[15:27] <FROGGS> it doesn't say it but please describe the bug in the email :P

[15:28] *** Brian_ joined
[15:28] <mephinet> :)

[15:30] <lizmat> FROGGS mephinet : so what is the problem?

[15:30] <FROGGS> TMPDIR=FOO perl6 -e 'say first( { .defined && ($io = .IO).all: <d r w x> }, %*ENV<TMPDIR>, "/tmp")'

[15:30] <FROGGS> Unknown test d

[15:30] <FROGGS>   in method all at src/gen/m-CORE.setting:15641

[15:30] <FROGGS> that is one problem... testing a fix already

[15:32] <pmichaud> mephinet: there's also information about submitting bug reports in the README file, under "Reporting Bugs".   http://github.com/rakudo/rakudo

[15:33] <pmichaud> I'm going to take the text from the README and put it into the "how-to-help" page on rakudo.org

[15:33] <pmichaud> and maybe the tickets page

[15:34] <FROGGS> "tickets" could perhaps be replaced with "report a bug"?

[15:35] <FROGGS> because, as a newbie I am not interested in other tickets, and as a pro I know that I find information about tickets on a "report a bug" page

[15:35] <pmichaud> you mean in the url?  the menu entry already says "Bug tracker"

[15:37] <pmichaud> updated page:  http://rakudo.org/tickets/

[15:39] <pmichaud> comments/fixes welcome

[15:41] <pmichaud> Now also referenced on http://rakudo.org/how-to-help/ .

[15:42] *** JimmyZ left
[15:44] *** kjs_ joined
[15:46] *** wollmers joined
[15:50] <timbunce__> https://github.com/perl6/ye-olde now exists. Any comments on the description in the README? /cc pmichaud 

[15:50] <nine> Wow, I discovered a trivial endless loop in Rakudo: "Test".encode("utf-8") eq "Test"; # eats all my RAM

[15:50] <moritz> probably even easier: Buf.new(1) eq 'Test'

[15:51] <nine> moritz: true

[15:51] *** mauke left
[15:52] *** mauke joined
[15:53] <timotimo> nine: yes, known ;(

[15:53] <timotimo> Buf does not do Stringy, but .Stringy on it returns self

[15:54] <timotimo> "it's not a stringy yet, i should call .Stringy on it and try again"

[15:54] <timotimo> for ever.

[15:54] <FROGGS> also: Buf.new(1) ~ Any

[15:55] <moritz> if Buf isn't stringy. .Stringy shouldn't return itself

[15:56] <timotimo> that's right

[15:57] <dalek> rakudo/nom: 1c89f21 | (Elizabeth Mattijsen)++ | src/core/IO/ (4 files):

[15:57] <dalek> rakudo/nom: No longer use IO::Path.all internally

[15:57] <dalek> rakudo/nom: 

[15:57] <dalek> rakudo/nom: It is under investigation

[15:57] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1c89f21dcb

[15:58] <wollmers> m:"o\x[307,323]".comb.elems

[15:58] *** ghostlin_ joined
[15:58] *** molaf joined
[15:59] <wollmers> m: "o\x[307,323]".comb.elems.say

[15:59] <camelia> rakudo-moar ddc85c: OUTPUT¬´3‚ê§¬ª

[15:59] *** nbrown left
[15:59] <wollmers> m: "o\x[307,323]".NFC.comb.elems.say

[15:59] <camelia> rakudo-moar ddc85c: OUTPUT¬´No such method 'NFC' for invocant of type 'Str'‚ê§  in block <unit> at /tmp/owatvKJQdN:1‚ê§‚ê§¬ª

[15:59] *** Akagi201 left
[16:00] *** Akagi201 joined
[16:00] <jnthn> Buf.Stringy should probably call Buf.Str

[16:00] *** xenoterracide_ left
[16:01] <pmichaud> timbunce__: perhaps a note in the README that it's primarily for tracking issues outside of the "perl6.org" domain (since things inside perl6.org already have their own trackers)

[16:01] <pmichaud> m: $fh = open("README.md"); say $fh.lines[1]; 

[16:01] <camelia> rakudo-moar ddc85c: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/QueTa39BEB‚ê§Variable '$fh' is not declared‚ê§at /tmp/QueTa39BEB:1‚ê§------> [32m$fh[33m‚èè[31m = open("README.md"); say $fh.lines[1];[0m‚ê§    expecting any of:‚ê§        postfix‚ê§¬ª

[16:01] <timbunce__> pmichaud: will do

[16:01] <pmichaud> m: my $fh = open("README.md"); say $fh.lines[1]; 

[16:01] <camelia> rakudo-moar ddc85c: OUTPUT¬´open is disallowed in restricted setting‚ê§  in sub restricted at src/RESTRICTED.setting:1‚ê§  in sub open at src/RESTRICTED.setting:5‚ê§  in block <unit> at /tmp/XhLn4mt8cL:1‚ê§‚ê§¬ª

[16:02] *** Brian_ left
[16:02] <pmichaud> m: my $fh = IO::Handle.new; $fh.open("README.md"); say $fh.lines[1];

[16:02] <camelia> rakudo-moar ddc85c: OUTPUT¬´IO::Handle is disallowed in restricted setting‚ê§  in sub restricted at src/RESTRICTED.setting:1‚ê§  in method new at src/RESTRICTED.setting:21‚ê§  in block <unit> at /tmp/IeKbk6dBBN:1‚ê§‚ê§¬ª

[16:05] <pmichaud> lizmat: apparent bug in IO::Handle.lines ->   https://gist.github.com/pmichaud/55a0a1543a4fd8a17d7c

[16:06] *** xenoterracide_ joined
[16:06] <pmichaud> now updated

[16:06] *** laben left
[16:08] <pmichaud> actually, I'll file an RT for it

[16:10] *** Brian_ joined
[16:11] <Ven> m: say (rand xx 5 xx 5).lol.perl # is xx a listop?

[16:11] <camelia> rakudo-moar ddc85c: OUTPUT¬´(0.0642102317242874e0, 0.0495805551982834e0, 0.601856287867469e0, 0.144757372978787e0, 0.895204040012804e0, 0.125387435322411e0, 0.764568587119958e0, 0.516667731366473e0, 0.107924606073753e0, 0.0918279826121361e0, 0.680850739676986e0, 0.209667421292075e0, ‚Ä¶¬ª

[16:12] *** denis_boyun joined
[16:14] <dalek> perl6-bench/stress: 70fb97c | (Geoffrey Broadwell)++ | timeall:

[16:14] <dalek> perl6-bench/stress: Add diagnose_capture() to provide a unified way to diagnose failures in test runs

[16:14] <dalek> perl6-bench/stress: review: https://github.com/japhb/perl6-bench/commit/70fb97c22c

[16:14] <dalek> perl6-bench/stress: aeb0b94 | (Geoffrey Broadwell)++ | timeall:

[16:14] <dalek> perl6-bench/stress: Add comments to make explicit why some callers of run_tests() or time_all_compilers() catch exceptions, and some don't

[16:14] <dalek> perl6-bench/stress: review: https://github.com/japhb/perl6-bench/commit/aeb0b94e84

[16:14] <dalek> perl6-bench/stress: 6e83296 | (Geoffrey Broadwell)++ | timeall:

[16:14] <dalek> perl6-bench/stress: Allow tests to specify expected output, in string or code form, and accept it in time_command()

[16:14] <dalek> perl6-bench/stress: review: https://github.com/japhb/perl6-bench/commit/6e83296688

[16:14] <dalek> perl6-bench/stress: 5d533f5 | (Geoffrey Broadwell)++ | timeall:

[16:14] <dalek> perl6-bench/stress: Pass expected output down to time_command()

[16:14] <dalek> perl6-bench/stress: review: https://github.com/japhb/perl6-bench/commit/5d533f5266

[16:14] <dalek> perl6-bench/stress: 3bfdc41 | (Geoffrey Broadwell)++ | timeall:

[16:14] <dalek> perl6-bench/stress: Switch over to new protocol between time_all_compilers() and time_command(), including saving much more data about output and failure modes in per-run info hashes.  This protocol (using run_info->{failed} instead of returning undef on command failure) will need to be extended outwards from time_all_compilers(), but I expect that this will end up with a lot of fallout.

[16:14] <dalek> perl6-bench/stress: review: https://github.com/japhb/perl6-bench/commit/3bfdc41a5b

[16:14] <TimToady> m: say (rand xx 5).WHAT

[16:14] *** Brian_ left
[16:14] <camelia> rakudo-moar ddc85c: OUTPUT¬´(List)‚ê§¬ª

[16:15] <TimToady> m: say ((rand xx 5,) xx 5).lol.perl

[16:15] <camelia> rakudo-moar ddc85c: OUTPUT¬´(0.250623387102813e0, 0.364574042722242e0, 0.183950671379639e0, 0.612407072111445e0, 0.224575850296392e0, 0.789507832757076e0, 0.266554080399324e0, 0.950510703068462e0, 0.243425708359133e0, 0.879783949838789e0, 0.295875280090971e0, 0.633518496207426e0, 0.0‚Ä¶¬ª

[16:15] <TimToady> hmm

[16:15] <TimToady> m: say ($(rand xx 5) xx 5).lol.perl

[16:15] <camelia> rakudo-moar ddc85c: OUTPUT¬´((0.687789098937428e0, 0.719752262978069e0, 0.361492053221057e0, 0.106446581925366e0, 0.463905165471245e0).list.item, (0.412227644493526e0, 0.465935163848347e0, 0.311609330704693e0, 0.755184648739908e0, 0.649097251200573e0).list.item, (0.390846034978007e0,‚Ä¶¬ª

[16:17] *** denis_boyun left
[16:18] <Ven> you don't even need to .lol it with $

[16:18] *** carlin left
[16:19] <TimToady> nodnod

[16:19] <pmichaud> TimToady: that looks like https://rt.perl.org/Ticket/Display.html?id=111732

[16:20] *** kjs_ left
[16:20] <dalek> rakudo/nom: 94240b4 | (Elizabeth Mattijsen)++ | src/core/IO/Path.pm:

[16:20] <dalek> rakudo/nom: Fix scoping issue in IO::Path.all

[16:20] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/94240b4383

[16:21] <TimToady> p6: say (<[ ]> xx 10).pick(*).join

[16:22] <timbunce__> Should http://perl6.org/documentation/ still link to "Perl 6 and Parrot Essentials, 2nd Edition" ?

[16:22] <camelia> rakudo-{parrot,moar} ddc85c: OUTPUT¬´(timeout)¬ª

[16:22] <moritz> timbunce__: not at all

[16:22] <jnthn> timbunce__: NO

[16:22] <pmichaud> timbunce__: *NO*

[16:22] *** Hor|zon joined
[16:24] <dalek> Inline-Python: 166a22d | nine++ | / (3 files):

[16:24] <dalek> Inline-Python: Implement py_call_function

[16:24] <dalek> Inline-Python: review: https://github.com/niner/Inline-Python/commit/166a22da67

[16:25] <FROGGS> TimToady: that timeout seems to be camelia's fault or its machine

[16:26] *** azawawi joined
[16:26] <FROGGS> moritz: camelia is pretty fast on my box

[16:26] *** Hor|zon left
[16:27] *** imposter joined
[16:27] <TimToady> m: say ((rand xx 5) xx 5).perl

[16:27] <lizmat> pmichaud: updated your gist: https://gist.github.com/pmichaud/55a0a1543a4fd8a17d7c

[16:27] <imposter> rakudo-moar 2014.09: OUTPUT¬´(0.0310884127605645e0, 0.660766453018269e0, 0.222059717292611e0, 0.76852232757651e0, 0.916799572589194e0, 0.146701245041585e0, 0.426901957902756e0, 0.963070996038028e0, 0.379452569336337e0, 0.789460871364036e0, 0.925418507178525e0, 0.643406883121996e0, 0.‚Ä¶¬ª

[16:27] <camelia> rakudo-moar ddc85c: OUTPUT¬´(0.872175174192954e0, 0.923336869843819e0, 0.337603871343798e0, 0.471658131760216e0, 0.800031543606972e0, 0.986673184885854e0, 0.0945058406411434e0, 0.244543695323723e0, 0.456548935105693e0, 0.733398096115551e0, 0.437349330347718e0, 0.0344160607203751e0, 0‚Ä¶¬ª

[16:27] <lizmat> it seems that somehow $!ins is lagging

[16:27] <FROGGS> *g*

[16:27] <TimToady> m: say ((rand xx 5,) xx 5).perl

[16:27] <imposter> rakudo-moar 2014.09: OUTPUT¬´(((0.806250669165479e0, 0.478034538430306e0, 0.261319162204952e0, 0.661066718161828e0, 0.461030326837538e0).list,), ((0.490496888137333e0, 0.910621916309711e0, 0.113735491344386e0, 0.133590354692456e0, 0.862641049113965e0).list,), ((0.887862349062371e0, 0‚Ä¶¬ª

[16:27] <camelia> rakudo-moar ddc85c: OUTPUT¬´(((0.503282017910519e0, 0.844880026717003e0, 0.384680062350277e0, 0.300549716379671e0, 0.276662202886109e0).list,), ((0.0791750576180236e0, 0.0814673635548483e0, 0.242698199200667e0, 0.460314611683186e0, 0.330456774253125e0).list,), ((0.101111935154391e0, ‚Ä¶¬ª

[16:27] <FROGGS> see, my imposter is faster :o)

[16:27] *** imposter left
[16:27] <lizmat> but I have no idea how to make that better

[16:28] *** denis_boyun_ joined
[16:28] *** kjs_ joined
[16:28] <lizmat> the increment is *immediately* after the "take"

[16:28] *** xenoterracide_ left
[16:29] <TimToady> m: say ((rand xx 5) xx 5).elems

[16:29] <camelia> rakudo-moar ddc85c: OUTPUT¬´25‚ê§¬ª

[16:29] <lizmat> I guess I could do it just before the take, but after we know we have a line

[16:29] <TimToady> m: say (('a' xx 5) xx 5).elems

[16:29] <camelia> rakudo-moar ddc85c: OUTPUT¬´5‚ê§¬ª

[16:29] <TimToady> m: say (('a' xx 5) xx 5)[0].WHAT

[16:29] <camelia> rakudo-moar ddc85c: OUTPUT¬´(Parcel)‚ê§¬ª

[16:30] <pmichaud> m:  (('a' xx 5) xx 5).perl

[16:30] <camelia> rakudo-moar ddc85c: ( no output )

[16:30] <pmichaud> m:  (('a' xx 5) xx 5).perl.say

[16:30] <camelia> rakudo-moar ddc85c: OUTPUT¬´(("a", "a", "a", "a", "a"), ("a", "a", "a", "a", "a"), ("a", "a", "a", "a", "a"), ("a", "a", "a", "a", "a"), ("a", "a", "a", "a", "a")).list‚ê§¬ª

[16:30] <pmichaud> m:  (('a' xx 5).perl)

[16:30] <camelia> rakudo-moar ddc85c: ( no output )

[16:30] <pmichaud> m:  (('a' xx 5).perl.say)

[16:30] <camelia> rakudo-moar ddc85c: OUTPUT¬´("a", "a", "a", "a", "a")‚ê§¬ª

[16:31] <pmichaud> m:  my $a = 'a'; (($a xx 5).perl.say)

[16:31] <camelia> rakudo-moar ddc85c: OUTPUT¬´("a", "a", "a", "a", "a").list‚ê§¬ª

[16:33] *** Akagi201_ joined
[16:33] <dalek> rakudo/nom: 7f8d176 | (Elizabeth Mattijsen)++ | src/core/IO/Handle.pm:

[16:33] <dalek> rakudo/nom: Make sure $!ins is up to date, pmichaud++

[16:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7f8d176d30

[16:35] <timbunce__> Is https://github.com/hinrik/grok/ worth linking to from http://perl6.org/documentation/ ?

[16:36] <pmichaud> timbunce__: my initial impression is "no", since I followed the link and don't know what it is :)

[16:36] <timbunce__> :)

[16:37] *** kjs_ left
[16:37] <timbunce__> Same question for https://metacpan.org/pod/Perl6::Doc

[16:37] <pmichaud> I'd maybe feel differently if the github repo had a README and didn't start with a broken link :)

[16:37] *** Akagi201 left
[16:38] *** kjs_ joined
[16:38] *** zakharyas joined
[16:39] <pmichaud> m:  my $a = 'a'; (($a xx 5) xx 5).perl.say

[16:39] <camelia> rakudo-moar ddc85c: OUTPUT¬´("a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a").list‚ê§¬ª

[16:40] <dalek> Inline-Python: fbcae47 | nine++ | / (3 files):

[16:40] <dalek> Inline-Python: Support int parameters for Python functions

[16:40] <dalek> Inline-Python: review: https://github.com/niner/Inline-Python/commit/fbcae479c1

[16:41] <japhb> Go nine, Go nine ...

[16:43] <nine> It is a hackathon after all...even on the way home ;)

[16:43] <pmichaud> my $a = 'a'; (($a xx 3) xx 2).perl.say

[16:43] <pmichaud> m:  my $a = 'a'; (($a xx 3) xx 2).perl.say

[16:43] <camelia> rakudo-moar 1c89f2: OUTPUT¬´("a", "a", "a", "a", "a", "a").list‚ê§¬ª

[16:44] <pmichaud> I believe the above should've produced (("a", "a", "a").list, ("a", "a", "a").list).list

[16:44] <pmichaud> I think that's the only consistent answer.

[16:46] <jnthn> m: say (*.^name eq 'NC').WHAT

[16:46] <camelia> rakudo-moar 1c89f2: OUTPUT¬´(WhateverCode)‚ê§¬ª

[16:47] *** woolfy left
[16:47] *** woolfy1 joined
[16:47] <dalek> perl6.org: c675cbc | timbo++ | source/compilers/index.html:

[16:47] <dalek> perl6.org: Remove mention of Blizkost

[16:47] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/c675cbc4ae

[16:47] <dalek> perl6.org: b2b65c2 | timbo++ | source/documentation/index.html:

[16:47] <dalek> perl6.org: /documentation: remove books section, curate the Miscellaneous section

[16:47] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/b2b65c25ba

[16:47] <pmichaud> m: my $a = 'a'; (($a, $a++) xx 3) xx 2).perl.say

[16:47] <camelia> rakudo-moar 1c89f2: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/UgjfO1uUQW‚ê§Unexpected closing bracket‚ê§at /tmp/UgjfO1uUQW:1‚ê§------> [32mmy $a = 'a'; (($a, $a++) xx 3) xx 2[33m‚èè[31m).perl.say[0m‚ê§¬ª

[16:47] <pmichaud> m: my $a = 'a'; ((($a, $a++) xx 3) xx 2).perl.say

[16:47] <camelia> rakudo-moar 1c89f2: OUTPUT¬´(("g", "a"), ("g", "b"), ("g", "c"), ("g", "d"), ("g", "e"), ("g", "f")).list‚ê§¬ª

[16:48] *** zakharyas left
[16:48] <dalek> Inline-Python: 0cf56f3 | nine++ | / (3 files):

[16:48] <dalek> Inline-Python: Support string parameters of Python functions

[16:48] <dalek> Inline-Python: review: https://github.com/niner/Inline-Python/commit/0cf56f320b

[16:49] <moritz> that is... creative

[16:49] *** ajr_ left
[16:49] <moritz> oh

[16:49] <pmichaud> that should've been   ((("g", "a"), ("g", "b"), ("g", "c")).list, (("g", "d"), ("g", "e"), ("g", "f")).list).list

[16:49] <moritz> because $a returns the container

[16:49] <moritz> and $a++ a value

[16:49] <pmichaud> TimToady: agree/disagree?  

[16:49] <FROGGS> does it make sense to write these things down as tests?

[16:50] <pmichaud> FROGGS: yes, there's also an RT ticket about it

[16:51] <pmichaud> my interpretation is also consistent with what is currently written about infix:<xx> in S03

[16:51] <nine> 

[16:51] <timbunce__> http://perl6.org/specification/ links to http://www.dlugosz.com/Perl6/ and bills it as ``Incomplete "Perl 6 Rigorous Technical Specification'' - worth keeping?

[16:51] *** colomon left
[16:51] *** woolfy1 left
[16:52] *** wollmers left
[16:52] <moritz> timbunce__: IMHO not; work has stalled, and it's very incomplete

[16:52] *** colomon joined
[16:52] <dalek> Inline-Python: 0149c6a | nine++ | / (2 files):

[16:52] <dalek> Inline-Python: Support return values of Python functions

[16:52] <dalek> Inline-Python: review: https://github.com/niner/Inline-Python/commit/0149c6a0e0

[16:53] <tadzik> Perl World Is Not Enough, starring nine++

[16:54] *** colomon left
[16:54] <pmichaud> does that make nine++ into "009"?  

[16:54] <moritz> one Perl 6 to Rule Them All

[16:54] *** kjs_ left
[16:54] *** ghostlin_ left
[16:56] *** Ven left
[16:56] *** molaf left
[16:56] <timbunce__> Any suggestions for this to add (or remove) from http://perl6.org/fun/ ?

[16:57] *** pepl1 left
[16:59] *** virtualsue joined
[17:01] *** timbunce__ left
[17:01] <dalek> perl6.org: b465807 | moritz++ | includes/menu-nav:

[17:01] <dalek> perl6.org: fix duplicate menu item key

[17:01] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/b4658076cc

[17:01] <dalek> rakudo/nom: 5a0810e | jonathan++ | src/ (3 files):

[17:01] <dalek> rakudo/nom: Stop [does|but] Foo(arg) relying on punning.

[17:01] <dalek> rakudo/nom: 

[17:01] <dalek> rakudo/nom: Should be a bit more efficient, both out of not needing the pun and

[17:01] <dalek> rakudo/nom: by a bit less fiddling in general.

[17:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5a0810efea

[17:01] <dalek> rakudo/nom: 0d1ab23 | jonathan++ | src/vm/ (3 files):

[17:01] <dalek> rakudo/nom: Add a way to register de-sugars cross-VM.

[17:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0d1ab23c47

[17:02] *** Mso150 joined
[17:03] <timotimo> AFK for noms

[17:04] *** leont left
[17:04] *** lizmat left
[17:05] *** mauke left
[17:06] <moritz> somehow jnthn++'s commit looks like there's some awesome follow-up planned :-)

[17:10] <gtodd> for punning or for sugar :-)

[17:10] <pmurias> jnthn: desugars++ # I have recently found myself copy & pasting desugar ops and thinking that we need to avoid duplication at some point

[17:10] <gtodd> I thought puns were just ways to use "-pn" style oneliners

[17:11] <gtodd> but I guess it has to do with roles classes

[17:11] <gtodd> etc

[17:21] *** flaviusb left
[17:24] *** anaeem1_ joined
[17:24] <gtodd> hmm was there ever a collection of/blog post about perl6 -pn oneliners that mimicked unix tools  perl6 -pe '.=indent(4)' # perl6 -pe '.=flip'  # ...  etc

[17:25] *** ghostlin_ joined
[17:26] *** ghostli__ joined
[17:29] *** chenryn left
[17:30] *** ghostlin_ left
[17:43] *** denis_boyun_ left
[17:46] *** molaf joined
[17:49] *** xfix is now known as notfix

[17:50] <itz> http://www.parrot.org/content/what-nfg-why-you-want-parrot-have-it

[17:50] <itz> ^^ is this still true

[17:53] *** immortal joined
[17:54] *** uvtc joined
[17:55] *** erkan left
[18:07] *** anaeem1_ left
[18:07] *** anaeem1 joined
[18:09] <itz> http://docs.parrot.org/parrot/latest/html/docs/pdds/pdd28_strings.pod.html 

[18:10] <itz> this seems to have a good n00b NFG intro (unless I'm missing more recent stuff?)

[18:23] <nine> itz: NFG is on the very short list of things really needed before a 6.0

[18:23] *** Hor|zon joined
[18:23] *** anaeem___ joined
[18:24] *** anaeem___ left
[18:24] <itz> sure .. I was just looking for simple introductions

[18:24] *** anaeem1_ joined
[18:24] <itz> in order to understand what it actually is

[18:25] <b2gills> my $a = 'a'; $a = $a xx 1; # doesn't finish until there is no ram left

[18:27] *** anaeem1 left
[18:28] *** Hor|zon left
[18:38] *** darutoko left
[18:43] <dalek> Inline-Python: f737340 | nine++ | / (3 files):

[18:43] <dalek> Inline-Python: Support passing arrays from Python to Perl 6

[18:43] <dalek> Inline-Python: review: https://github.com/niner/Inline-Python/commit/f73734032f

[18:47] <azawawi> hi #perl6

[18:48] * azawawi is working profile file download in farabi6 after --profile is invoked

[18:50] <dalek> Inline-Python: d3fa12b | nine++ | / (3 files):

[18:50] <dalek> Inline-Python: Don't leak items of arrays converted from Python to Perl 6

[18:50] <dalek> Inline-Python: review: https://github.com/niner/Inline-Python/commit/d3fa12b00c

[18:57] <pmurias> it would be awesome if Perl 6 managed to meld Python and Perl 5 cultures ;)

[18:58] <masak> what, unreadable *and* haughty? :P

[18:58] *** kjs_ joined
[18:58] * masak instantly regrets propagating two myths

[19:01] *** Mso150 left
[19:02] *** Mso150 joined
[19:07] *** mlilenium_ joined
[19:07] *** mlilenium_ left
[19:08] *** kjs_ left
[19:16] * pmurias is doing ruby koans for uni

[19:17] <pmurias> we should have something like that for Perl 6

[19:17] *** _slade_ joined
[19:18] <pmurias> a Perl 6 tutorial where you fill in placeholders like is ..., 'Hello '~'World';

[19:19] *** pepl1 joined
[19:20] *** uvtc left
[19:28] *** pepl1 left
[19:32] *** Mso150 left
[19:33] *** Mso150 joined
[19:35] <azawawi> http://pbrd.co/1o6Pgzt  # farabi6 with simple profiling support :)

[19:37] *** kjs_ joined
[19:38] *** Mso150 left
[19:38] <masak> jnthn++ # http://jnthn.net/papers/2014-apw-objects-concurrency.pdf -- nice

[19:39] * azawawi reads it

[19:40] *** Mso150 joined
[19:40] <masak> jnthn: kudos for not having the word "mailbox" in the explanation of actors ;)

[19:40] <masak> or "inbox"

[19:40] <azawawi> jnthn++

[19:44] <b2gills> Playing with v5 it would be nice if `package ...;

[19:47] <azawawi> masak: any idea how to test HTTP::Easy http methods?

[19:48] <b2gills> Playing with v5 it would be nice if `package <ident>; use v? 5 [ \. | \b ]` would force v5 symantics

[19:48] <masak> azawawi: I'm sorry, I'd need a bit more context. the general answer tends to be to mock things in some way, though.

[19:48] <b2gills> Then I wouldn't have to edit Perl6::Form, and many other Perl5 modules designed to work with 5.008

[19:49] <azawawi> masak: so basically Controller.new and test against it

[19:49] <masak> wow, when I created LSM in https://github.com/rakudo/rakudo/blob/fbac819ea68dfa0ca45c08018c971b1efd8ef587/src/core/Str.pm the consensus was that it would be replaced by a "real" solution (auto-generated grammars) in the fullness of time. but that code is still alive.

[19:51] <masak> azawawi: don't know enough about the code base, but probably, yes. remember that you can subclass/replace things, as long as you fulfill the protocol.

[19:51] <azawawi> masak: i see thanks

[19:51] *** kaare_ left
[20:00] *** immortal left
[20:00] *** virtualsue left
[20:00] *** Alina-malina left
[20:00] *** mattp_ left
[20:00] *** zoosha left
[20:00] *** Alula left
[20:00] *** broquaint joined
[20:01] *** virtualsue joined
[20:01] *** mattp_ joined
[20:01] *** erkan joined
[20:01] *** erkan left
[20:01] *** erkan joined
[20:02] *** Alina-malina joined
[20:05] *** zoosha joined
[20:06] *** Alula joined
[20:06] * masak gets to https://github.com/jnthn/oo-monitors/blob/master/lib/OO/Monitors.pm#L91 and gets very happy :>

[20:06] <masak> this language is so awesome!

[20:07] <masak> I can just add whole declarative keywords, and have them tie into a metaclass! o.O

[20:07] <masak> jnthn++ # that module

[20:07] <masak> jnthn++ # EXPORTHOW::DECLARE

[20:09] *** kjs_ left
[20:13] <moritz> m: my $HOW := (grammar { }).HOW; my $g := $HOW.new_type(); $HOW.compose($g); $g.new

[20:13] <camelia> rakudo-moar 0d1ab2: OUTPUT¬´P6opaque: must compose before allocating‚ê§  in method bless at src/gen/m-CORE.setting:939‚ê§  in method new at src/gen/m-CORE.setting:923‚ê§  in block <unit> at /tmp/zrjKFtwvF7:1‚ê§‚ê§¬ª

[20:13] <moritz> what am I doing wrong here?

[20:16] <moritz> I mean, the compose call is right there

[20:19] *** daxim_ left
[20:21] *** kjs_ joined
[20:21] <masak> moritz: it's thrown from https://github.com/MoarVM/MoarVM/blob/master/src/6model/reprs/P6opaque.c#L95 , fwiw.

[20:21] <moritz> oh, I see th eproblem

[20:21] <masak> which means that st->size must be 0

[20:21] <moritz> $HOW is not the same as $g.HOW

[20:21] <masak> aha.

[20:21] <moritz> oh, because it's an instance of the metaclass

[20:22] <moritz> not the metaclass itself

[20:22] *** Mso150 left
[20:23] <masak> it's the grammar's metaobject, not the class (type object) same

[20:23] <masak> of same*

[20:24] *** Hor|zon joined
[20:25] <masak> still not completely backlogged :)

[20:25] <masak> 'night, #perl6

[20:25] <azawawi> https://github.com/azawawi/farabi6/issues/33   # Panda module search next :)

[20:25] <azawawi> masak: night

[20:27] *** kjs_ left
[20:27] <moritz> https://gist.github.com/moritz/730031f70a2e2df686df this doesn't work :(

[20:28] <moritz> it prints Any, not a Match.gist

[20:29] <moritz> is there anything missing for adding the candidates to the proto?

[20:29] *** Hor|zon left
[20:29] *** virtualsue left
[20:35] *** kjs_ joined
[20:43] *** pepl1 joined
[20:44] *** kjs_ left
[20:46] *** pepl left
[20:47] *** kjs_ joined
[20:58] *** rindolf left
[21:00] *** sivoais left
[21:05] *** colomon joined
[21:06] <timotimo> good evening

[21:07] <azawawi> timotimo: hi :)

[21:07] *** lizmat joined
[21:09] *** gfldex left
[21:10] *** Ven joined
[21:10] <azawawi> http://pbrd.co/1xHzMlv  # Initial UI for panda-based module search

[21:12] <timotimo> nwc10: http://youtu.be/VVhYT36s6D8 - this is the train that lays tracks

[21:12] <FROGGS> masak: you should know by now that provisorilies live a very long time :o)   (about your comment about LSM)

[21:13] <nwc10> timotimo: yes,I made it back (Thanks)

[21:13] <timotimo> azawawi: that page hasn't been able to serve a picture to me yet

[21:13] <nwc10> (for the link)

[21:13] <timotimo> you also made it back thanks to me! :P

[21:13] <nwc10> jnthn: there are at least *2* places where the trolleybuses have level crossings with the electrified railways

[21:14] <nwc10> and also, I was confused about how many trolleybus routes are this way

[21:14] <nwc10> timotimo: yes - knowing which was the correct stop helped a lot. Even if I chose to get off at the wrong one. I would nothave got that right without you

[21:14] <timotimo> i wasn't actually serious :S

[21:15] <timotimo> but i'm glad i could be of help :)

[21:15] <azawawi> timotimo: what browser are you using btw?

[21:15] <timotimo> that's chrome

[21:15] <timotimo> let me try firefox

[21:16] <timotimo> that works

[21:16] <timotimo> good point

[21:16] * nwc10 goesto bed

[21:17] <timotimo> i really dig the new look

[21:17] * timotimo ingests an aspirin

[21:21] * azawawi shutting down & :)

[21:22] <timotimo> gnite azawawi 

[21:22] <azawawi> timotimo: if you have the time, please install it and let me know if you have any suggestions. Feedback is more than welcome

[21:22] <azawawi> timotimo: panda update && panda install Farabi

[21:22] <timotimo> does it have non-panda dependencies at all?

[21:22] <azawawi> timotimo: panda update && panda install Farabi6 # :)

[21:23] <timotimo> cool :)

[21:23] <timotimo> i definitely will try it

[21:23] *** leont joined
[21:25] <azawawi> timotimo: thanks

[21:26] * azawawi sleep &

[21:26] <timotimo> "fetching farabi, wait half an hour, please" :S

[21:28] *** kjs_ left
[21:28] <timotimo> ah, a full codemirror

[21:30] *** azawawi left
[21:31] <timotimo> farabi.js is not found in /home/timo/perl6/install/bin/languages/perl6/site/lib/Farabi6/files/assets

[21:31] <timotimo> this seems like it's looking in a very wrong place

[21:32] *** awwaiid joined
[21:32] *** molaf left
[21:36] *** azawawi joined
[21:37] <azawawi> timotimo: hmmm what's your $*EXECUTABLE ?

[21:37] <timotimo> "/home/timo/perl6/install/bin/perl6".IO

[21:37] *** Alula left
[21:38] <timotimo> (should that still be an .IO? after all liz did?

[21:38] <azawawi> timotimo: and you may need the latest rakudo. It is faster than 2014.09 in JSON decoding/encoding

[21:38] *** Alula joined
[21:38] <azawawi> timotimo: perl6 --version ?

[21:41] <timotimo> This is perl6 version 2014.09-187-gddc85c1 built on MoarVM version 2014.09-32-gdb725c2

[21:43] * azawawi builds a new rakudo

[21:45] <azawawi> strange https://github.com/azawawi/farabi6/blob/master/lib/Farabi6.pm6#L32 should do it

[21:45] *** sivoais joined
[21:45] *** kjs_ joined
[21:45] <azawawi> timotimo: where did you run farabi6 from? what's the working directory?

[21:45] <timotimo> oh, so you chop off the last 3

[21:46] <timotimo> just in ~

[21:46] *** kjs_ left
[21:46] <timotimo> timo@schmetterling ~> perl6-m -e 'my @dirs = $*SPEC.splitdir($*EXECUTABLE); say @dirs[0..*-3]'

[21:46] <timotimo>  home timo perl6 install

[21:47] <azawawi> timotimo: find . -name farabi.js

[21:49] <timotimo> ./perl6/install/languages/perl6/site/lib/Farabi6/files/assets/farabi.js

[21:49] <timotimo> so it *should* work like that

[21:52] *** ghostli__ left
[21:53] <azawawi> timotimo: /home/timo/perl6/install/***bin***/language‚Äãs/perl6/site/lib/Farabi6/files/assets   ... it is not backing one level

[21:54] <azawawi> timotimo: try it the code in https://github.com/azawawi/farabi6/blob/master/lib/Farabi6.pm6#L32 in perl6 repl

[21:54] <timotimo> i have

[21:54] <timotimo> and i gave you the result up there :)

[21:55] <azawawi> yeah sleepy :)

[21:55] <azawawi> what about $*SPEC.catdir( @dirs[0..*-3], 'languages', 'perl6', 'site', 'lib', 'Farabi6', 'files' );   ?

[21:56] <azawawi> i smell a bug in catdir

[21:56] <timotimo> a sec.

[21:57] <timotimo> home/timo/perl6/install/languages/perl6/site/lib/Farabi6/files

[21:57] <timotimo> it could be $*EXECUTABLE is the .pm file when it's run from there?

[21:57] <timotimo> oh

[21:57] <timotimo> or maybe it compile-time-evaluates it?

[21:57] <timotimo> just to troll us?

[21:58] <azawawi> lol

[22:00] <timotimo> i'm very tired

[22:00] <timotimo> i'm going to bed

[22:00] <azawawi> very strange it didnt happen before lol

[22:00] <azawawi> me 2

[22:00] <b2gills> timotimo: correction that video is of a machine that replaces "sleepers" on a high speed track

[22:00] *** [Sno] left
[22:00] *** [Sno] joined
[22:00] <azawawi> timotimo: thanks for trying it out... Maybe a faulty rakudo or a panda rebootstrap....

[22:01] <azawawi> timotimo: :)

[22:01] <azawawi> timotimo: night

[22:01] *** [Sno] left
[22:01] *** virtualsue joined
[22:01] * azawawi sleep for real & :)

[22:01] *** azawawi left
[22:02] *** [Sno] joined
[22:03] <timotimo> b2gills: oh cool. can you tell me more about that?

[22:06] <b2gills> timotimo: Placing rails is much more hands-on as it requires either welding high speed rails together, or bolting lower speed rails together.

[22:09] <b2gills> timotimo: It's possible that they could use the machine to place rails, but it would need actual tires on the front.

[22:11] *** Ven left
[22:11] <timotimo> oh

[22:11] <timotimo> OK

[22:11] <timotimo> thanks for clearing that up

[22:11] <timotimo> and now i'm going to bed

[22:11] <timotimo> and tomorrow i will try to figure out how to get farabi to work

[22:11] *** Mso150 joined
[22:12] <b2gills> timotimo: or tracks https://www.youtube.com/watch?v=huBiCqoBVPg#t=43

[22:12] *** PZt left
[22:14] *** PZt joined
[22:14] *** kurahaupo left
[22:15] <b2gills> timotimo: better view after about two minutes in:  https://www.youtube.com/watch?v=huBiCqoBVPg#t=145

[22:17] *** anaeem1_ left
[22:20] *** [Sno] left
[22:21] *** [Sno]_ joined
[22:21] *** anaeem1_ joined
[22:21] *** pepl1 left
[22:24] *** BenGoldberg joined
[22:25] *** Hor|zon joined
[22:28] *** anaeem1_ left
[22:29] <virtualsue> dear apple, sometimes you kinda suck. love me

[22:29] *** Psyche^ joined
[22:30] *** Hor|zon left
[22:31] *** anaeem1_ joined
[22:31] <virtualsue> i suppose i‚Äôve always manually installed git before. got ‚ÄúAgreeing to the Xcode/iOS license requires admin privileges, please re-run as root via sudo.‚Äù message when i tried using git on this newish laptop just now when trying to install rakudobrew :-/

[22:32] * virtualsue installs git locally and wanders to apple support forum to complain

[22:33] *** Psyche^_ left
[22:43] *** virtualsue left
[22:50] *** anaeem1_ left
[22:56] *** erdic left
[22:56] *** erdic joined
[22:58] *** xenoterracide_ joined
[22:59] *** pmurias left
[23:00] *** leont left
[23:13] *** Mso150 left
[23:22] *** bjz left
[23:23] *** kurahaupo joined
[23:24] *** xenoterracide_ left
[23:27] *** ilbot3 left
[23:31] *** moritz joined
[23:31] *** ilbot3 joined
[23:35] *** ilbot3 left
[23:39] *** ilbot3 joined
[23:41] *** ilbot3 left
[23:41] *** moritz left
[23:45] *** ilbot3 joined
[23:46] *** moritz joined
[23:57] *** colomon left
