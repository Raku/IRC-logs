[00:12] *** btyler joined
[00:32] *** bjz joined
[00:32] *** thou left
[00:33] *** logie_ joined
[00:38] *** bjz left
[00:57] *** xenoterracide_ left
[01:05] *** FROGGS left
[01:11] *** kid51 joined
[01:13] *** klapperl_ joined
[01:14] *** xenoterracide_ joined
[01:17] *** klapperl left
[01:18] *** FROGGS joined
[01:22] *** kid51 left
[01:30] *** clkao joined
[01:39] *** BenGoldberg left
[01:43] <japhb_> Also, is there any project right now that builds each commit, runs all tests, installs panda, installs modules, runs their tests, etc. and then eventually tells you if the current Rakudo build is good on one or more backends and platforms?

[01:43] <japhb_> s/Also, is/Is/

[01:43] <japhb_> I seem to recall that's what Ementaller was supposed to be, though that's a fuzzy memory ....

[01:45] *** fhelmberger joined
[01:45] <japhb_> I'm basically looking for "reinstall locally on green builds", so I can stay mostly up to date, but not worry about bad rebuilds.  Basically I want the 'debian testing' of Rakudo, where nom could be considered 'debian sid/unstable'

[01:46] *** igorsutton left
[01:47] <[Coke]> japhb_: no one is doing that, no.

[01:49] *** fhelmberger left
[01:53] <japhb_> [Coke]: What pieces do we already have?  I know you do a daily build and spectest for the various compiler/backend combos.  Is anyone doing any automated testing of Star or some portion of the ecosystem?

[01:55] *** Su-Shee_ joined
[01:58] *** Su-Shee left
[02:01] *** logie_ left
[02:08] <[Coke]> I'm also testing star daily, yes.

[02:09] <[Coke]> I am in the middle of making it test rakudo * on non parrot vms, will probably hit early next week.

[02:10] *** logie_ joined
[02:14] *** hoverboard joined
[02:15] *** SevenWolf left
[02:15] *** logie_ left
[02:15] *** logie_ joined
[02:17] *** Timbus left
[02:17] *** hoverboard is now known as moistcherry

[02:21] <japhb_> Oooh, [Coke]++

[02:21] <japhb_> Actually, that gets us pretty close, doesn't it?

[02:22] <japhb_> I guess that depends on whether Star uses Panda to do its installs these days ....

[02:22] *** Timbus joined
[02:32] *** moistcherry is now known as cholby

[02:36] *** bjz joined
[02:39] *** clkaoud left
[02:41] *** bjz left
[02:43] *** clkaoud joined
[02:43] <colomon> japhb_: I've done a bit of fiddling with emmentaler and jvm / moar.  Unfortunately, at the moment emmentaler is painfully slow on jvm and crashes completely on moar.

[02:49] <colomon> (mind, I don't think it's emmentaler itself that's slow on jvm; rather it appears to be compiling modules that is really slow.)

[02:50] <colomon> afk # sleep

[02:51] *** ashleydev joined
[03:05] *** SamuraiJack__ joined
[03:06] *** xenoterracide_ left
[03:06] *** xenoterracide_ joined
[03:07] *** cholby left
[03:08] *** FROGGS left
[03:37] <japhb_> colomon: Hmmm, that's too bad.

[03:38] *** thou joined
[03:38] *** logie_ left
[03:39] *** Timbus left
[03:40] *** Timbus joined
[03:40] *** xragnar_ joined
[03:40] *** xragnar left
[03:40] *** xragnar_ is now known as xragnar

[03:41] *** xenoterracide_ left
[03:44] *** ssutch left
[03:44] *** ssutch joined
[03:48] *** xfix left
[03:50] *** xfix joined
[03:53] *** SevenWolf joined
[03:56] *** bjz joined
[03:59] *** bjz left
[03:59] *** bjz joined
[04:17] *** ggoebel111115 left
[04:18] *** ggoebel111115 joined
[05:19] <TimToady> maybe we should write a cross-compiler from moarvm to jvm :D

[05:22] *** btyler left
[05:25] <sergot_> for people in Poznan: today hackathon is at the same place that plpw - you can find more info here: http://act.yapc.eu/plpw2014/

[05:25] <sergot_> morning o/ btw 

[05:26] *** denis_boyun_ joined
[05:38] <tadzik> bleh, internet at home is at 60% packet loss... good thing I'm leaving for Poznan soon

[05:40] <TimToady> when the internet has fast lanes, you'll be able to lose packets even faster

[05:44] *** [Sno] left
[05:44] <tadzik> can't wait :)

[05:45] *** denis_boyun_ left
[05:46] *** fhelmberger joined
[05:50] *** fhelmberger left
[05:51] *** [Sno] joined
[05:55] *** chenryn left
[06:00] <tadzik> oh, it's back \o/

[06:19] *** hoverboard joined
[06:36] *** rindolf joined
[06:36] *** zakharyas joined
[06:36] *** PZt joined
[06:38] *** chenryn joined
[06:45] *** darutoko joined
[06:47] *** igorsutton joined
[06:52] *** dmol joined
[07:15] *** bcode_ joined
[07:23] *** anaeem1_ joined
[07:23] <nwc10> dear experts at the hackathon. Currenty when I make spectest on x86_64 Linux, some fail. Please could they all pass, or be skipped?

[07:24] *** hoverboard left
[07:24] *** kaleem joined
[07:25] *** jnthn_ joined
[07:27] *** thou left
[07:27] *** xiaomiao left
[07:27] *** Grimnir_ joined
[07:28] *** bonsaikitten joined
[07:28] *** yoleaux joined
[07:28] *** ChanServ sets mode: +v yoleaux

[07:33] <lizmat> experts are not at the hackathon yet, but are about to move there  :-)

[07:34] <lizmat> back in a few &

[07:34] *** lizmat left
[07:54] * tadzik on rails o/

[07:54] *** SevenWolf left
[07:55] *** SevenWolf joined
[07:56] *** fhelmberger joined
[08:00] <Woodi> hallo :)

[08:01] <Woodi> Happy Hackatons !

[08:01] <Woodi> do Perl6 needs Memory Model or somethink ? :)

[08:03] <Woodi> tadzik: is it possible to have office apps construction kit as side-effect of toying with SDL ?

[08:03] *** xenoterracide_ joined
[08:03] <masak> interesting message on p6u.

[08:03] <masak> (about "does Perl 6 have a way of ensuring method overrides?")

[08:04] <masak> I know it has it for roles, but I haven't seen a similar mechanism for classes and inheritance.

[08:05] <Woodi> methods "overrides" ? not overloading ?

[08:08] *** lizmat joined
[08:09] <masak> that's what he asked about; see the message :)

[08:10] <masak> I know how to do method overloading; just use "multi" on stuff.

[08:10] <masak> it even works across an inheritance hierarchy.

[08:10] *** jnthn_ is now known as jnthn

[08:11] <jnthn> Woodi: Certainly needs some think :P

[08:11] *** xenoterracide_ left
[08:11] <jnthn> Woodi: But yeah, will need to write up memory model. It's on my todo list at some point... :)

[08:11] * masak .oO( the missing think )

[08:11] <jnthn> o/ masak

[08:11] <masak> jnthn \o

[08:11] <tadzik> Woodi: you could write sort of a gui toolkit on top of it, I guess

[08:12] <masak> I would join you for the hackathon today, but I'm busy teaching...

[08:12] <jnthn> masak: Method overrides? All dispatches are virtual... :)

[08:12] <masak> I know, I know.

[08:12] <tadzik> but it's probably more reasonable to just use gtk or something

[08:12] <masak> but that's not what he's asking about.

[08:12] <masak> see the message.

[08:12] <jnthn> OK...link?

[08:19] <masak> http://www.nntp.perl.org/group/perl.perl6.users/2014/05/msg1755.html

[08:21] *** daxim left
[08:21] *** daxim joined
[08:23] <jnthn> masak: Not build in, but doable as module that assd an "is override" trait

[08:23] <jnthn> uh...adds

[08:27] * masak .oO( Not At All Freudian )

[08:34] <moritz> jnthn: I've tried to implement such a trait yesterday

[08:34] <moritz> jnthn: twice, in fact

[08:35] <moritz> jnthn: my first attempt was a trait  is-declared-in(RoleName)

[08:35] <moritz> jnthn: but it seems that method traits can't receive arguments (yet?)

[08:35] <masak> hm, do you have to specify the role?

[08:35] <masak> seems a bit over-specific.

[08:35] <moritz> jnthn: second attempt was to omit the argument, and walk the superclasses and roles

[08:36] <moritz> jnthn: but that failed, because at trait run time, the class isn't composed, and thus those lists aren't available

[08:36] <jnthn> r: multi trait_mod:<is>(&r, :$omg!) { say $omg }; sub foo is omg(42) { }

[08:36] <camelia> rakudo-{parrot,jvm,moar} 2e4961: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Can't use unknown trait 'is omg' in a sub declaration.␤at /tmp/tmpfile:1␤------> ␤    expecting any of:␤        rw parcel hidden_from_backtrace␤        pure default …»

[08:36] <masak> so maybe delay the check until class composition time?

[08:37] <moritz> masak: how do I do that in a trait?

[08:37] <masak> maybe it's not possible.

[08:37] <masak> I heard mumblings about a COMPOSE phaser a while ago...

[08:37] <moritz> m: multi trait_mod:<is>(&r, :$omg!, |c) { say $omg; say c.perl }; sub foo is omg(42) { }

[08:37] <camelia> rakudo-moar 2e4961: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/D0CIDeU58D␤Can't use unknown trait 'is omg' in a sub declaration.␤at /tmp/D0CIDeU58D:1␤------> ␤    expecting any of:␤        rw parcel hidden_from_backtrace␤        pure default DEPRECA…»

[08:38] <jnthn> r: multi trait_mod:<is>(&r, $arg, :$omg!) { say $arg }; sub foo is omg(42) { }

[08:38] <camelia> rakudo-{parrot,jvm,moar} 2e4961: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Can't use unknown trait 'is omg' in a sub declaration.␤at /tmp/tmpfile:1␤------> ␤    expecting any of:␤        rw parcel hidden_from_backtrace␤        pure default …»

[08:38] <jnthn> grr, shoulda m

[08:38] <jnthn> hmm, wtf..

[08:38] <moritz> m: multi trait_mod:<is>(Routine:D $r :$omg!, |c) { say $omg; say c.perl }; sub foo is omg(42) { }

[08:38] <camelia> rakudo-moar 2e4961: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/K7IHNH7xCY␤Variable '$omg' is not declared␤at /tmp/K7IHNH7xCY:1␤------> [32mmulti trait_mod:<is>(Routine:D $r :$omg[33m⏏[31m!, |c) { say $omg; say c.perl }; sub foo[0m␤»

[08:38] <moritz> m: multi trait_mod:<is>(Routine:D $r, :$omg!, |c) { say $omg; say c.perl }; sub foo is omg(42) { }

[08:38] <camelia> rakudo-moar 2e4961: OUTPUT«42␤Capture.new()␤»

[08:38] <moritz> oh

[08:38] <moritz> I expected an extra argument

[08:40] <moritz> https://gist.github.com/moritz/2c6ed01eef0029dabdeb works now

[08:41] *** SevenWolf left
[08:42] *** woolfy1 joined
[08:45] <moritz> it wouldn't hurt to have compose-time hooks in ClassHOW

[08:45] <masak> \o/

[08:45] <masak> moritz: ship it!

[08:45] <masak> (and I agree about compose-time hooks)

[08:46] <masak> actually, hooks in as many places as possible :)

[08:46] <masak> everywhere it makes sense

[08:46] <masak> moritz: s/mimi/mimic/ in the gist title

[08:47] <jnthn> Typically I have written a meta-object and overridden compose and callsame'd to the usual one

[08:50] <moritz> masak: typo-fixed

[08:52] <masak> moritz++

[08:52] <moritz> ... and e-mail shipped :-)

[08:53] <dalek> rakudo/nom: b700214 | (Elizabeth Mattijsen)++ | src/core/Bag.pm:

[08:53] <dalek> rakudo/nom: Make Bag.WHICH on demand and remove old cruft

[08:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b70021447e

[08:53] *** Su-Shee_ is now known as Su-Shee

[08:54] *** woosley left
[08:55] <masak> "Feel inspired :-)" \o/

[08:56] <moritz> and the actual implementation is about 4 LOC

[08:56] <moritz> would be a bit more with proper typed exceptions

[08:57] <moritz> jnthn: if I were to go the way of custom meta class that overrides .compose, could I make the class use that metaclass from within the trait?

[08:58] *** woosley joined
[08:58] <tadzik> moritz++

[09:02] <tadzik> Woodi: btw, I think Gtk::Simple is already in the module ecosystem somewhere, or at least on github

[09:02] <lizmat> moritz: now, to put this in a module, would adding "is export" to the trait mode be enough?

[09:03] <moritz> lizmat: I think so

[09:03] <moritz> lizmat: well, and I'd need some docs :-)

[09:04] <tadzik> and tests. Sounds like a nice hackathon task for a newcomer :)

[09:06] *** woosley left
[09:06] <nwc10> Mmmm, possibly PEBKAC

[09:07] <nwc10> a.k.a. as git pull

[09:07] <nwc10> or, failure to be on "this week"

[09:07] *** pecastro joined
[09:09] <masak> ok, I checked out the hackathon in the next room

[09:09] <masak> I approve :)

[09:09] <masak> hackathon++

[09:09] <nwc10> they have beer?

[09:09] <jnthn> masak: hah, you managed to drop by in the one moemnt I wasn't there :P

[09:09] <masak> jnthn: it's the masak-jnthn exclusion principle!

[09:10] <jnthn> moritz: No, typically your module just exports the meta-class along with the trait...

[09:10] <masak> jnthn: have you ever seen them in the same room? suspricious, huh?

[09:10] <nwc10> I can't remember if I'd read this before, but I re-read it today, and it feels an interesting analsys of the problems of migrating:  http://blog.startifact.com/posts/python-2-gravity.html

[09:10] <jnthn> masak: No, I've never seen myself in a room with you... :P

[09:10] <masak> :P

[09:11] <masak> nwc10: will read later.

[09:12] <nwc10> the IRC channel mentioned at the end is logged here: http://chat-logs.dcpython.org/channel/python2.8

[09:12] <nwc10> related blog I found from the log is here: http://regebro.wordpress.com/2014/01/23/the-potential-for-a-python-2-8/

[09:17] <dalek> rakudo/nom: 94bd372 | (Elizabeth Mattijsen)++ | src/core/Mix.pm:

[09:17] <dalek> rakudo/nom: Make sure Mix.WHICH is value based, and on demand

[09:17] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/94bd372614

[09:17] *** woolfy1 left
[09:29] *** lizmat left
[09:30] *** lizmat joined
[09:35] *** denis_boyun joined
[09:35] *** woolfy joined
[09:36] *** FROGGS joined
[09:36] *** plobsing left
[09:57] <Woodi> tadzik: I was thinking about SDL framework becouse thes days everything started to look Metro-like, even Qt. all that old-school buttons are missing ;)  

[09:57] <Woodi> http://techgage.com/viewimg/?img=/articles/adobe/lightroom_4/adobe_lightroom_4_01.jpg&desc=Adobe%20Lightroom%204

[09:58] <Woodi> and SDL is light and portable

[10:05] *** daniel-s_ joined
[10:10] <tadzik> well, you can style qt all you want, I think :) But it should be possible to write a windowing toolkit in SDL, sure

[10:11] <tadzik> I'll probably need to do it myself at some point too, even for simple things like achievement popups :P

[10:38] *** Sqirrel joined
[10:40] <timotimo> i believe steam actually uses sdl for their UI drawing needs

[10:41] <tadzik> some of them, maybe, but a lot of it is HTML and JS

[10:41] <tadzik> and you can style it with css and whatnot

[10:44] <timotimo> they embed a webkit, yeah

[10:44] <timotimo> but the stuff around it, i believe, is being rendered by qt

[10:44] <timotimo> well, software rendering anyway.

[10:44] <lizmat> lunch&

[10:45] <tadzik> oh, there's beer festival here

[10:45] <tadzik> lizmat: where are you going?

[10:45] <tadzik> I'll be at the venue in 15 minutes or so

[11:02] *** kurahaupo joined
[11:06] *** kurahaupo left
[11:06] *** kurahaupo joined
[11:12] *** SamuraiJack__ left
[11:17] *** liztormato joined
[11:18] <liztormato> .oO( tadzik has arrived at lunch )

[11:18] *** liztormato left
[11:26] *** virtualsue_ joined
[11:39] *** felher joined
[11:54] *** virtualsue_ left
[12:01] *** rindolf left
[12:02] <dalek> nqp: 6a7aa4b | jonathan++ | src/NQP/Optimizer.nqp:

[12:02] <dalek> nqp: Make sure we callstatic the NQPCORE.setting subs.

[12:02] <dalek> nqp: review: https://github.com/perl6/nqp/commit/6a7aa4b6f8

[12:04] *** bcode_ is now known as bcode

[12:06] *** thou joined
[12:10] *** thou left
[12:13] *** bluescreen10 joined
[12:21] <dalek> Heuristic branch merge: pushed 460 commits to rakudo/eleven by lizmat

[12:21] <nwc10> does the hackathon dissolve into dinner at some point this evening?

[12:22] <FROGGS> I hope so

[12:22] <FROGGS> the plan is not to starve but to survive until tomorrow

[12:23] <moritz> starving doesn't sound like -Ofun

[12:23] <tadzik> heheh, I have two pull requests with indentical patches :)

[12:24] <tadzik> and they're from the same day

[12:24] <dalek> panda: d47e254 | (Ben Tyler)++ | lib/Panda/Common.pm:

[12:24] <dalek> panda: Track change in $*VM name access

[12:24] <dalek> panda: review: https://github.com/tadzik/panda/commit/d47e254575

[12:24] <dalek> panda: 05af361 | tadzik++ | lib/Panda/Common.pm:

[12:24] <dalek> panda: Merge pull request #81 from kanatohodets/master

[12:24] <dalek> panda: 

[12:24] <dalek> panda: Track change in $*VM name access

[12:24] <dalek> panda: review: https://github.com/tadzik/panda/commit/05af361478

[12:26] <dalek> rakudo/nom: f57749e | (Elizabeth Mattijsen)++ | src/core/Str.pm:

[12:26] <dalek> rakudo/nom: Fix deprecation inside CORE

[12:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f57749e23a

[12:30] <colomon> I thought the plan was to wait a bit on that fix, to maintain support for older Rakudos?

[12:32] *** bgalek joined
[12:32] <colomon> tadzik: ^^

[12:32] * colomon had been pondering solutions involving $*VM.?name ...

[12:33] <tadzik> colomon: oh, I tagged panda a commit before, so people with older rakudos can check it out

[12:33] <colomon> tadzik++

[12:33] <tadzik> see https://github.com/tadzik/panda/releases

[12:41] *** logie_ joined
[12:41] *** xenoterracide_ joined
[12:44] *** rindolf joined
[12:45] *** rindolf left
[12:50] *** rindolf joined
[12:51] *** guru joined
[12:51] *** guru is now known as Guest40431

[12:51] *** Guest40431 is now known as ajr_

[12:53] <dalek> rakudo/eleven: 2c73b2a | (Elizabeth Mattijsen)++ | src/core/ (2 files):

[12:53] <dalek> rakudo/eleven: Fix some more deprecations

[12:53] <dalek> rakudo/eleven: review: https://github.com/rakudo/rakudo/commit/2c73b2a68a

[12:55] *** anaeem1_ left
[12:56] *** woolfy1 joined
[12:59] *** woolfy left
[13:02] *** daniel-s_ left
[13:04] *** daniel-s_ joined
[13:07] *** xenoterracide_ left
[13:27] <dalek> rakudo/eleven: 5090deb | (Elizabeth Mattijsen)++ | src/core/CompUnitRepo/Local/Installation.pm:

[13:27] <dalek> rakudo/eleven: Tweaks

[13:27] <dalek> rakudo/eleven: review: https://github.com/rakudo/rakudo/commit/5090deb319

[13:29] <colomon> lizmat: did you mean for those last changes to go to rakudo/eleven instead of nom?

[13:29] <lizmat> yes

[13:29] <lizmat> preparing stuff for merge..  :-)

[13:30] <lizmat> eleven bitrotted a bit since March

[13:30] <[Coke]> (√(-shit))²

[13:33] *** brrt joined
[13:39] <[Coke]> "shit just got real" was the tagline I saw on that. :)

[13:39] <tadzik> :D

[13:40] <sjn> isn't that strictly "shit isn't imaginary any more now?" :)

[13:41] <sjn> I think I see something more there...

[13:41] *** bgalek left
[13:41] <sjn> you start out with shit, which everyone knows isn't good. it's a negative word

[13:41] <dalek> specs: ce1aeac | (Elizabeth Mattijsen)++ | S28-special-names.pod:

[13:41] <dalek> specs: Spec $*VM.precomp-ext

[13:41] <dalek> specs: review: https://github.com/perl6/specs/commit/ce1aeaca76

[13:42] <sjn> then you say "no, /this/ shit isn't negative, we're making it positive by negating it!"

[13:42] <sjn> but there's a problem!

[13:42] <sjn> everyone knows that the root of positive shit is imaginary

[13:43] <sjn> unless you're a square. :)

[13:43] <tadzik> . o O ( this discussion is full of shit )

[13:43] <sjn> if you put this imaginary positive shit in a square, everything just becomes nice :)

[13:44] <sjn> real good shit, in other words

[13:45] <sjn> so what's the point with this story?

[13:45] <sjn> if you want to make real good shit, you need imagination. :)

[13:45] *** geekosaur left
[13:45] *** mhasch left
[13:45] *** ribasushi left
[13:46] *** Ulti joined
[13:46] *** Grrrr joined
[13:46] <brrt> bloody netsplts

[13:46] *** JimmyZ joined
[13:46] *** lee_ joined
[13:46] *** baest joined
[13:46] *** awwaiid joined
[13:46] *** jercos joined
[13:46] *** jtpalmer joined
[13:46] *** telex left
[13:46] *** Exodist joined
[13:46] *** stux joined
[13:46] *** geekosaur joined
[13:46] *** slavik joined
[13:46] <dalek> specs: 0852ee7 | (Elizabeth Mattijsen)++ | S28-special-names.pod:

[13:47] <dalek> specs: Spec $*VM.precomp-target

[13:47] <dalek> specs: review: https://github.com/perl6/specs/commit/0852ee718a

[13:47] *** rindolf left
[13:47] *** mtj joined
[13:47] *** breinbaas joined
[13:48] *** telex joined
[13:49] *** ribasushi joined
[13:51] *** kaleem left
[13:55] *** btyler joined
[13:58] <dalek> rakudo/nom: 8aa5c73 | (Elizabeth Mattijsen)++ | src/core/VM.pm:

[13:58] <dalek> rakudo/nom: Implement $*VM.precomp-(ext|target)

[13:58] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8aa5c7309d

[13:58] <dalek> zavolaj/tadzik/deprecations: 53317e5 | tadzik++ | / (2 files):

[13:58] <dalek> zavolaj/tadzik/deprecations: Get rid of deprecation messages

[13:58] <dalek> zavolaj/tadzik/deprecations: review: https://github.com/jnthn/zavolaj/commit/53317e5249

[13:59] <tadzik> so this fixes zavolaj on new rakudos, but breaks it on old rakudos

[13:59] <dalek> rakudo/eleven: f57749e | (Elizabeth Mattijsen)++ | src/core/Str.pm:

[13:59] <dalek> rakudo/eleven: Fix deprecation inside CORE

[13:59] <dalek> rakudo/eleven: review: https://github.com/rakudo/rakudo/commit/f57749e23a

[13:59] <dalek> rakudo/eleven: 8aa5c73 | (Elizabeth Mattijsen)++ | src/core/VM.pm:

[13:59] <dalek> rakudo/eleven: Implement $*VM.precomp-(ext|target)

[13:59] <dalek> rakudo/eleven: review: https://github.com/rakudo/rakudo/commit/8aa5c7309d

[13:59] <dalek> rakudo/eleven: 2e87d47 | (Elizabeth Mattijsen)++ | src/core/VM.pm:

[13:59] <dalek> rakudo/eleven: Merge branch 'nom' of https://github.com/rakudo/rakudo into eleven

[13:59] <dalek> rakudo/eleven: review: https://github.com/rakudo/rakudo/commit/2e87d47721

[13:59] <tadzik> regarding $*VM<name> vs $*VM.name etc

[14:03] <[Coke]> tons of modules complaining about Please use $*VM.name instead.

[14:03] <tadzik> yep, I fixed two

[14:04] <dalek> rakudo/loop_labels_test: 876bb54 | (Tobias Leich)++ | src/core/ (2 files):

[14:04] <dalek> rakudo/loop_labels_test: implement labeled for loops on parrot

[14:04] <dalek> rakudo/loop_labels_test: review: https://github.com/rakudo/rakudo/commit/876bb54634

[14:11] *** fhelmberger left
[14:12] *** bjz left
[14:13] *** anaeem1 joined
[14:15] <dalek> specs: 14fb9cb | (Elizabeth Mattijsen)++ | S99-glossary.pod:

[14:15] <dalek> specs: Some new lemma's: RC UGT

[14:15] <dalek> specs: review: https://github.com/perl6/specs/commit/14fb9cb1ba

[14:18] <lizmat> note to self: next time, don't deprecate things immediately ?

[14:19] <tadzik> well, it would happen at some point anyway

[14:19] *** thou joined
[14:24] *** sctt joined
[14:28] *** xenoterracide joined
[14:31] *** rurban joined
[14:31] *** treehug88 joined
[14:35] <dalek> nqp/loop_labels: 1655e4e | (Tobias Leich)++ | src/vm/jvm/ (3 files):

[14:35] <dalek> nqp/loop_labels: pass the label obj around instead of its addr

[14:35] <dalek> nqp/loop_labels: review: https://github.com/perl6/nqp/commit/1655e4e807

[14:36] <dalek> nqp/loop_labels: eafcab0 | jnthn++ | src/vm/moar/QAST/QASTOperationsMAST.nqp:

[14:36] <dalek> nqp/loop_labels: Start using new getlexstatic_o op.

[14:36] <dalek> nqp/loop_labels: review: https://github.com/perl6/nqp/commit/eafcab0214

[14:36] <dalek> nqp/loop_labels: 43fbe2b | jnthn++ | src/NQP/Optimizer.nqp:

[14:36] <dalek> nqp/loop_labels: Fix NQP analysis of when callstatic is valid.

[14:36] *** xusia left
[14:36] *** dalek joined
[14:36] *** ChanServ sets mode: +v dalek

[14:38] *** pochi_ left
[14:39] *** sctt left
[14:39] * [Coke] wonders if it's worth caching the repos for star/parrot/moar etc. on star when I have to grab all the modules over the interwebs anyway.

[14:39] <[Coke]> (er, on the daily star)

[14:40] <tadzik> jnthn: Unhandled exception: Bytecode stream corrupt (missing magic string)

[14:40] <tadzik> that's what I got from gdb, outside of gdb it just says "segfault"

[14:42] *** xenoterracide left
[14:43] *** pochi joined
[14:45] <jnthn> tadzik: wow...

[14:45] <jnthn> That's really corrupt....

[14:46] <jnthn> Tht's the very first thing it reads in the file

[14:46] <tadzik> :)

[14:46] <tadzik> it must be really confused

[14:46] <tadzik> yeah

[14:46] <Woodi> zavolaj ? I thinked it evolved into Native Calls... and no such module on p6.org...

[14:47] <timotimo> zavolaj is the name of the repository

[14:47] <tadzik> yeah, it's binamual

[14:47] <timotimo> NativeCall is the name of the module

[14:47] <Woodi> ah, it's repo name

[14:48] *** molaf joined
[14:50] *** xenoterracide joined
[14:55] <dalek> rakudo/eleven: 6a81129 | (Elizabeth Mattijsen)++ | src/Perl6/ModuleLoader.nqp:

[14:55] <dalek> rakudo/eleven: Performance debugging tweak

[14:55] <dalek> rakudo/eleven: review: https://github.com/rakudo/rakudo/commit/6a81129ef4

[14:55] <dalek> rakudo/eleven: 90fdd07 | (Elizabeth Mattijsen)++ | src/core/CompUnitRepo.pm:

[14:55] <dalek> rakudo/eleven: Use $*VM.precomp-ext

[14:55] <dalek> rakudo/eleven: review: https://github.com/rakudo/rakudo/commit/90fdd070d5

[14:58] <timotimo> can we theoretically do something about the proxy being used in CArray?

[14:58] *** igorsutton left
[14:58] <timotimo> now that we have assign_pos, for example?

[14:59] *** igorsutton joined
[14:59] <jnthn> Yes

[14:59] <jnthn> But for native arrays we should be able to do even better I guess...

[15:00] <masak> nwc10: really interesting post, http://blog.startifact.com/posts/python-2-gravity.html

[15:00] <masak> nwc10: I thought the "gravity" metaphor wouldn't hold up -- but it does, amazingly.

[15:04] *** igorsutton left
[15:07] <dalek> nqp: 96ef351 | jonathan++ | src/NQP/Optimizer.nqp:

[15:07] <dalek> nqp: Can also lower $_.

[15:07] <dalek> nqp: 

[15:07] <dalek> nqp: Before, this earned us a SEGV in the Rakudo setting compile, but now

[15:07] <dalek> nqp: that issue is fixed, we can do this optimization.

[15:07] <dalek> nqp: review: https://github.com/perl6/nqp/commit/96ef351c8b

[15:07] <timotimo> oh yay! :)

[15:09] <masak> is "lower" a technical term?

[15:09] <masak> also, what about $! ? :)

[15:09] <timotimo> lower from a lexical to a local

[15:10] <timotimo> might want an entry in S99

[15:13] <timotimo> jnthn: which multi candidates should i implement for assign_pos? pos, assigner == int, int / Int, int / int, Int / Int, Int?

[15:14] <masak> ah, that makes sense. timotimo++

[15:15] *** FROGGS left
[15:15] *** molaf_ joined
[15:16] *** daniel-s_ left
[15:17] *** denis_boyun left
[15:18] <brrt> (interesting post about py2 / py3)

[15:18] *** molaf left
[15:20] <jnthn> timotimo: Could work out

[15:21] <nwc10> it seems to keep coming back to the point/problem that existing end user codebases don't get re-written. They get replaced.

[15:22] *** FROGGS joined
[15:23] *** plobsing joined
[15:23] <brrt> or!

[15:26] <masak> nwc10: Rule 1 about community-wide backwards-incompatible upgrade: you can't upgrade the community.

[15:26] <PerlJam> masak: does that mean we're ... the replacements?!?

[15:27] <nwc10> you need a better carrot

[15:27] <nwc10> sticks don't work

[15:27] <masak> carrot's don't work either.

[15:27] <PerlJam> neither carrots nor sticks work

[15:27] <masak> nothing works.

[15:27] <masak> see Rule 1.

[15:28] <PerlJam> desire (self-impulse) works.  If you're not "self", you can't affect much change.

[15:28] <nwc10> OK, I was meaning, make something sufficiently better that people will want to move it

[15:28] <nwc10> move to it

[15:28] <nwc10> but, in any non-trivial setup, that move wont' be a flag day

[15:29] <PerlJam> .oO( ergo, we need more trivial setups  ;)

[15:29] *** FROGGS left
[15:29] <masak> nwc10: I teach Python these days. my clients are squarely in 2.7, because their code is. some still use Python 2.6. (mostly by accident, not so much by intent.)

[15:29] <masak> nwc10: we offer to give the course using Python 3 as basis. so far, no corporate client has taken that bait. they want Python 2.x

[15:29] <TimToady> if those durn language designers would only get it right in the first place...

[15:30] <nwc10> TimToady: yeah, the pesky Rule 2 getout

[15:30] <TimToady> ...then we could all be programming in Lisp :)

[15:31] <masak> nwc10: Perl course -- same deal, except even more so. the most promising I've had is one group that were so happy about the three days they got so far, that they clamored for the final "Perl 6" section at the end of the course. but I don't think they'll be doing any Perl 6 development at work.

[15:31] <TimToady> oh wait...

[15:31] *** rindolf joined
[15:31] <nwc10> masak: no-one sane is claiming that Perl 6 is production ready yet (even if the concurrency stuff is already good enough to make it useful for some tasks)

[15:31] *** FROGGS joined
[15:31] <nwc10> whereas Python 3.1 was

[15:31] *** plobsing left
[15:32] <masak> *nod*

[15:32] <PerlJam> People still keep waiting for this magical perl 6.0.0 release before even *thinking* about using Perl 6 for anything.

[15:32] <[Coke]> To sell it here, I need a web stack that works with Oracle, preferably java, adequate docs, and commercial support.

[15:32] <masak> well, fwiw, I don't consider "production-ready" to be a single global Bool.

[15:32] <masak> which is another way of saying that I am probably insane, at least here and there, for certain uses.

[15:33] <[Coke]> (and if you have to just meet adobe's level of support for coldfusion, that's not hard. :P)

[15:33] <masak> [Coke]: interesting.

[15:34] <masak> [Coke]: having a potential end user is an enticing prospect.

[15:34] <masak> [Coke]: maybe we should meet up sometime (preferably on IRC) and talk requirements?

[15:35] <PerlJam> What, exactly, was Ian Hague's insterest in Perl 6? Was there some project in the future that wanted it?  Or just general, "I think this is the future, so I'm gonig to support it"?

[15:37] <nwc10> I believe the latter. In that he wanted to give something back, and did so, very generously

[15:38] * PerlJam was hoping for another "end user" that wasn't on #perl6  :(

[15:39] <[Coke]> masak: sure.

[15:40] <[Coke]> I also have one project that is doing a lot of text generation that I'd love to be able to switch to a threaded perl6.

[15:42] *** brrt left
[15:45] *** zakharyas left
[15:47] *** chenryn left
[15:48] <dalek> specs: abb8d13 | (Elizabeth Mattijsen)++ | S28-special-names.pod:

[15:48] <dalek> specs: Small typos fix

[15:48] <dalek> specs: review: https://github.com/perl6/specs/commit/abb8d135fa

[15:48] *** chenryn joined
[15:50] <[Coke]> (REPR: Null, cs = 0) - someone just opened a ticket with this. check out #81060 also.

[15:50] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=81060

[15:58] <dalek> specs: 9294dd4 | (Elizabeth Mattijsen)++ | S28-special-names.pod:

[15:58] <dalek> specs: Spec $?PERL/$*PERL and the Perl class

[15:58] <dalek> specs: review: https://github.com/perl6/specs/commit/9294dd4c79

[16:00] *** anaeem1 left
[16:02] *** donaldh joined
[16:03] *** lizmat left
[16:04] *** anaeem1_ joined
[16:04] *** woolfy1 left
[16:05] <dalek> rakudo-star-daily: 2c5ab39 | coke++ | / (2 files):

[16:05] <dalek> rakudo-star-daily: grab copies of repos to work with locally

[16:05] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/2c5ab39ac2

[16:05] <dalek> rakudo-star-daily: c85f012 | coke++ | / (2 files):

[16:05] <dalek> rakudo-star-daily: move script to bin dir

[16:05] *** FROGGS left
[16:05] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/c85f0124e8

[16:05] <dalek> rakudo-star-daily: 86b7004 | coke++ | bin/ (2 files):

[16:05] <dalek> rakudo-star-daily: Begin to use local repos.

[16:05] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/86b7004f01

[16:05] <dalek> rakudo-star-daily: f71fdf1 | coke++ | bin/star.sh:

[16:05] <dalek> rakudo-star-daily: use parrot-latest, not parrot-recommended

[16:05] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/f71fdf1e79

[16:05] <dalek> rakudo-star-daily: 556da35 | coke++ | bin/star.sh:

[16:05] <dalek> rakudo-star-daily: Don't conflict with parrot's VERSION

[16:05] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/556da35f10

[16:05] <dalek> rakudo-star-daily: df86539 | coke++ | log/ (5 files):

[16:05] <dalek> rakudo-star-daily: today (automated commit)

[16:05] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/df86539242

[16:06] <[Coke]> ^^ ok, we're now using parrot-latest, not parrot-recommended for the daily star testing. should let us know sooner of any issues.

[16:06] <dalek> nqp: a438ec8 | jonathan++ | src/NQP/Optimizer.nqp:

[16:06] <dalek> nqp: Optimize simple 'for' loops.

[16:06] <dalek> nqp: 

[16:06] <dalek> nqp: Can avoid a lot of block invocations in some cases, making things a

[16:06] <dalek> nqp: bit cheaper.

[16:06] <dalek> nqp: review: https://github.com/perl6/nqp/commit/a438ec8b70

[16:06] <donaldh> nqp-m: my $ok := 1; try { nqp::die($ok); $ok := 0; }; nqp::say($ok);

[16:06] <jnthn> That should be another little saving on CORE.setting compilation (and other things)

[16:06] <camelia> nqp-moarvm: OUTPUT«␤»

[16:06] <donaldh> nqp-m: my $ok := 1; try { nqp::die($ok); $ok := 0; 1 }; nqp::say($ok);

[16:06] <camelia> nqp-moarvm: OUTPUT«1␤»

[16:07] <donaldh> something weird with nqp-m try blocks ^^^

[16:11] *** xenoterracide left
[16:12] *** brrt joined
[16:13] *** denis_boyun joined
[16:26] *** Psyche^ joined
[16:28] <donaldh> nqp-m: my $ok := 1; try { nqp::die($ok); $ok := 0; 1 }; nqp::say($ok);

[16:28] <camelia> nqp-moarvm: OUTPUT«1␤»

[16:28] <donaldh> nqp-p: my $ok := 1; try { nqp::die($ok); $ok := 0; }; nqp::say($ok);

[16:28] <camelia> nqp-parrot: OUTPUT«1␤»

[16:28] <donaldh> nqp-j: my $ok := 1; try { nqp::die($ok); $ok := 0; }; nqp::say($ok);

[16:28] <camelia> nqp-jvm: OUTPUT«(signal )#␤# There is insufficient memory for the Java Runtime Environment to continue.␤# pthread_getattr_np␤# An error report file with more information is saved as:␤# /home/p6eval/hs_err_pid29070.log␤»

[16:30] *** Psyche^_ left
[16:40] *** pecastro left
[16:41] *** virtualsue joined
[16:43] <donaldh> oh, latest nqp commit is broken on JVM backend.

[16:44] *** bluescreen10 left
[16:45] *** hoverboard joined
[16:48] *** kurahaupo left
[16:49] *** cosimo left
[16:52] *** guru joined
[16:52] *** xenoterracide joined
[16:52] *** guru is now known as Guest74878

[16:53] *** ajr_ left
[16:53] *** Guest74878 is now known as ajr_

[16:54] <donaldh> P6opaque representation does not implement elems 

[16:54] <donaldh> in commit a438ec8b70

[17:05] *** cosimo joined
[17:08] *** ajr_ left
[17:08] <dalek> nqp: 0ea245b | (Donald Hunter)++ | src/vm/jvm/ (2 files):

[17:08] <dalek> nqp: Added nqp::seekfh on JVM.

[17:08] <dalek> nqp: review: https://github.com/perl6/nqp/commit/0ea245be66

[17:08] <dalek> nqp: d4c8ae3 | (Donald Hunter)++ | src/vm/parrot/QAST/Operations.nqp:

[17:08] <dalek> nqp: Added nqp::seekfh, nqp::readfh on parrot backend.

[17:08] <dalek> nqp: review: https://github.com/perl6/nqp/commit/d4c8ae3519

[17:08] <dalek> nqp: 616e461 | (Donald Hunter)++ | t/nqp/19-file-ops.t:

[17:08] <dalek> nqp: Add tests for seekfh.

[17:08] <dalek> nqp: review: https://github.com/perl6/nqp/commit/616e4613ff

[17:08] <dalek> nqp: 53eae59 | (Donald Hunter)++ | src/vm/jvm/runtime/org/perl6/nqp/io/FileHandle.java:

[17:08] <dalek> nqp: Fix seekfh failures on JVM backend.

[17:08] <dalek> nqp: review: https://github.com/perl6/nqp/commit/53eae596cd

[17:09] <dalek> nqp: 612cf2d | (Donald Hunter)++ | src/vm/jvm/runtime/org/perl6/nqp/sixmodel/reprs/P6OpaqueBaseInstance.java:

[17:09] <dalek> nqp: Add elems to P6opaque.

[17:09] <dalek> nqp: review: https://github.com/perl6/nqp/commit/612cf2dd53

[17:12] <thou> masak: my experience is that it's mainly lib compatibility that keeps people away from python3. I think we're closing in on that state for perl6 (a ways off yet, true, but I'm impressed w/ the progress).

[17:15] <vendethiel> o/

[17:18] *** Rotwang joined
[17:19] *** [Sno] left
[17:21] *** [Sno] joined
[17:23] *** virtualsue left
[17:25] *** skids left
[17:27] *** brrt left
[17:28] *** treehug8_ joined
[17:30] *** treehug88 left
[17:31] *** treehug88 joined
[17:32] *** treehug8_ left
[17:32] *** segomos joined
[17:33] *** ggoebel111115 left
[17:45] *** kurahaupo joined
[17:45] *** guru joined
[17:46] *** guru is now known as Guest6669

[17:46] *** Guest6669 is now known as ajr_

[17:47] *** xenoterracide left
[17:47] *** donaldh left
[17:47] *** xenoterracide joined
[17:49] <japhb> .ask lizmat In spec commit 9294dd4c7945be95b56ee991532abaa608917cb5, why just a build-date at Date precision?  Why not a DateTime?

[17:49] <yoleaux> japhb: I'll pass your message to lizmat.

[17:49] *** xalbo joined
[17:50] <timotimo> jnthn: that for optimization looks very clever!

[17:51] <timotimo> let the other parts of the optimizer see if it can inline if we can replace decl with param and if it didn't turn out to work (or be necessary or whatever), we just turn it right back

[17:55] <japhb> timotimo: reverse param and decl in your description  :-)  But yeah, that's a cool idea -- kindof speculative optimization

[18:11] <timotimo> uh yes

[18:13] *** rurban left
[18:16] <timotimo> i wonder if it'd be possible to do something very similar on top of rakudo rather than nqp

[18:17] *** hoverboard left
[18:17] <timotimo> if we know lots of stuff, a for ^10 { } could become as cheap as a loop

[18:18] <japhb> Anyone have any idea of the intent of https://github.com/rakudo/rakudo/blob/nom/src/core/Str.pm#L1186-1189 ?  I have several ideas of what the author was intending to write, but none of my explanations so far allow the code to be WAI.

[18:18] *** hoverboard joined
[18:19] <timotimo> japhb: if you want a cheap performance win there, foo | bar | baz is optimized, whereas any(<foo bar baz>) is not

[18:19] <timotimo> but i don't think this function is used in anything hot

[18:21] <japhb> timotimo: Fair enough, but in this case, I just can't see the code as being *correct*.  But since I'm slowly recovering from something that makes my brain very fuzzy, I'm compensating by assuming a much greater likelihood that I'm just missing something obvious.

[18:24] *** REPLeffect left
[18:24] <timotimo> ah

[18:24] <timotimo> i didn't even look into it much :)

[18:25] <vendethiel> (is `is override` gonna make it into the core ? seems like something people might want)

[18:25] <timotimo> m: say "0x99".Numeric;

[18:25] <camelia> rakudo-moar 8aa5c7: OUTPUT«153␤»

[18:26] <timotimo> the <= is indeed weird.

[18:27] *** hoverboard left
[18:27] <timotimo> okay, i have no idea what that code is supposed to exactly do under which circumstances and what is considered correct input

[18:28] <japhb> timotimo: Yeah, that's pretty much where I was with it.

[18:28] <japhb> And since I wrote Str.Numeric, it was making me question my sanity.

[18:29] *** hummeleB1 joined
[18:29] *** REPLeffect joined
[18:30] <timotimo> ah! :)

[18:31] <nwc10> TimToady: I'm not sure about the need for a liquid nitrogen overclocked ARM $whatever

[18:32] <nwc10> (something with MOAR RAM would be fine)

[18:32] <nwc10> acutally, right now, I'm blocking on a single thread on x86_64

[18:32] <nwc10> because I'm insisting on building with ASAN and assertions

[18:32] *** ssutch left
[18:32] <nwc10> and I've not figured out how to get MOAR's Configure.pl to build with the optimiser *and* assertions

[18:33] <nwc10> the single thread is the Rakudo setting

[18:33] <nwc10> but NQP's build doesn't paralleise much either

[18:33] <nwc10> parallel tests for the win

[18:38] *** [particle] left
[18:41] *** hummeleB1 left
[18:48] *** rurban joined
[18:50] *** molaf_ left
[18:59] *** backlash_jack joined
[18:59] *** darutoko left
[19:00] <backlash_jack> hey guys, can anyone tell me how to contact nwc10 from this post http://p6weekly.wordpress.com/2014/05/12/2014-19-moar-spesh-portability-cpan-space-invaders/ ?

[19:01] <backlash_jack> [so i can send him some MIPS hardware]

[19:01] <dalek> rakudo/nom: 6413980 | (Geoffrey Broadwell)++ | src/core/Temporal.pm:

[19:01] <dalek> rakudo/nom: Fix incorrect order of operations in sleep-timer()

[19:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/64139808a7

[19:02] <japhb> backlash_jack: He watches this channel.

[19:02] <btyler> backlash_jack: nwc10 is often active in this channel, he was last around about 30 minutes ago. I imagine you'll see him soon

[19:02] <backlash_jack> ok, i'll just idle until then ;)

[19:02] <btyler> (also, cool!)

[19:03] <timotimo> backlash_jack: cool!

[19:04] *** logie_ left
[19:05] *** ssutch joined
[19:06] *** ssutch_ joined
[19:06] *** rindolf left
[19:06] <backlash_jack> hrm, maybe i shouldn't idle with the web client

[19:06] <backlash_jack> i'll be back later though

[19:07] <backlash_jack> later guys

[19:07] *** backlash_jack left
[19:09] *** xenoterracide_ joined
[19:09] *** ssutch left
[19:10] *** xenoterracide_ left
[19:11] *** xenoterracide__ joined
[19:12] *** xenoterracide left
[19:18] *** ssutch_ left
[19:18] *** dwarring joined
[19:20] *** liztormato joined
[19:21] <liztormato> .tell japhb DateTime sounds fine to me. I guess I got distracted by the attribute name

[19:21] <yoleaux> liztormato: I'll pass your message to japhb.

[19:21] *** liztormato left
[19:28] *** SevenWolf joined
[19:32] *** ssutch joined
[19:33] *** treehug88 left
[19:35] *** SamuraiJack__ joined
[19:45] *** [particle] joined
[19:52] *** [particle] left
[19:59] *** [particle] joined
[20:02] *** itz joined
[20:10] <dalek> roast: eeac0ec | (David Warring [email@hidden.address] | integration/advent2013-day19.t:

[20:10] <dalek> roast: disable test which should be using tap_ok Test::Tap

[20:10] <dalek> roast: review: https://github.com/perl6/roast/commit/eeac0ec990

[20:12] *** fhelmberger joined
[20:13] <dalek> roast: 7e38376 | (David Warring [email@hidden.address] | integration/advent2010-day14.t:

[20:13] <dalek> roast: adding 2010 advent day 14

[20:13] <dalek> roast: review: https://github.com/perl6/roast/commit/7e38376e9a

[20:15] *** SamuraiJack__ left
[20:16] *** fhelmberger left
[20:20] *** molaf joined
[20:24] *** [particle] left
[20:24] *** [particle] joined
[20:26] *** backlash_jack joined
[20:26] <backlash_jack> re

[20:36] *** Rotwang left
[20:38] <dalek> rakudo-star-daily: 60a9995 | coke++ | / (11 files):

[20:38] <dalek> rakudo-star-daily: start keeping backend-specific logs

[20:38] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/60a99958bd

[20:38] <dalek> rakudo-star-daily: 9fde22f | coke++ | log/parrot- (5 files):

[20:38] <dalek> rakudo-star-daily: today (automated commit)

[20:38] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/9fde22f249

[20:40] *** anaeem1_ left
[20:44] *** itz left
[20:48] *** molaf left
[20:51] *** treehug88 joined
[20:52] *** ssutch left
[20:58] *** rurban left
[21:10] *** Alula left
[21:11] *** Alula joined
[21:14] *** rurban joined
[21:18] *** mhasch joined
[21:19] *** rurban left
[21:22] *** treehug8_ joined
[21:24] *** treehug88 left
[21:27] *** rurban joined
[21:33] <thou> backlash_jack: you can use the bot to .tell nwc10 something whenever they are next active

[21:34] *** denis_boyun left
[21:36] <backlash_jack> awesome thanks

[21:36] <backlash_jack> which bot tho?

[21:36] <geekosaur> just use .tell

[21:37] <japhb> .tell backlash_jack Like this

[21:37] <yoleaux> japhb: I'll pass your message to backlash_jack.

[21:37] <yoleaux> 19:21Z <liztormato> japhb: DateTime sounds fine to me. I guess I got distracted by the attribute name

[21:37] <backlash_jack> does it go out to the channel?  i'd rather not have my work email address on the internet

[21:37] <yoleaux> 21:37Z <japhb> backlash_jack: Like this

[21:37] <japhb> You can /msg yoleaux the command

[21:38] <geekosaur> but you can't prevent it from being read back in public...

[21:38] <backlash_jack> i'll just wait then

[21:38] <japhb> But yeah, the problem is that when yoleaux notices him come back, it will speak publicly anyway.  :-(

[21:38] <backlash_jack> i know, i have been on irc before ;)

[21:39] <japhb> You can .tell nwc10 to contact you when he's back, that will at least let him know you're waiting before he slogs through the backlog

[21:39] <japhb> backlash_jack: There's no reason a bot couldn't notice that you sent a message privately, and pass it on privately ... this one just doesn't.  :-/

[21:39] <backlash_jack> it's ok, i'm patient, also at work and not going anywhere

[21:39] <japhb> he

[21:40] <backlash_jack> i used to run a bot in #punk years ago

[21:41] <timotimo> the proxies for store in CArray return self rather than the assignee; is that correct?

[21:41] *** BenGoldberg joined
[21:42] <timotimo> oh wait

[21:42] <timotimo> the self in there most probably refers to the proxy, not the CArray

[21:42] *** rurban left
[21:45] *** thilp joined
[21:50] <timotimo> jnthn: https://github.com/jnthn/zavolaj/pull/40 would appreciate a hint if this is correct or should be changed

[21:55] *** [Sno] left
[21:55] *** [Sno] joined
[21:57] <timotimo> bbl

[22:05] *** bbkr_ joined
[22:09] *** oetiker left
[22:09] <thou> on occasion, something inside and something outside seem unusually connected; like deja vu's persuasive illusion, a tangential conversation or a brief series of moments seems compellingly relevant. tell backslash_jack Like this. I'll pass your message. Oh, it sounds fine to me, I guess I got distracted. Like this. You can message the command, but you can't prevent it from being done with in public. You're not

[22:09] <thou> in control. I'll just wait, then. I know, I have been here before. #punk

[22:10] <thou> the self in there most probably refers to the proxy

[22:11] <thou> is it all, really, poetry; and I'm mostly blind?

[22:13] *** rurban joined
[22:13] <backlash_jack> omg i'm caught in a markov chain

[22:16] *** rurban1 joined
[22:16] *** lizmat joined
[22:17] *** rurban left
[22:19] *** donaldh joined
[22:20] *** woolfy joined
[22:21] <tadzik> http://blogs.perl.org/users/ovid/2014/05/automatic-variable-highlighting-in-vim.html wow, this is awesome :)

[22:22] <jnthn> timotimo: Well, may want num candidates too

[22:22] <jnthn> timotimo: but looks sane

[22:22] *** rurban1 left
[22:27] *** FROGGS joined
[22:29] *** woolfy left
[22:29] *** woolfy joined
[22:35] *** geekosaur left
[22:35] *** bcode left
[22:35] *** xfix left
[22:35] *** Juerd left
[22:35] *** sorear left
[22:35] *** cooper left
[22:35] *** ivan`` left
[22:35] *** erdic left
[22:35] *** yogan_ left
[22:35] *** tokuhirom left
[22:35] *** risou left
[22:35] *** REPLeffect left
[22:35] *** simcop2387 left
[22:35] *** bowtie left
[22:35] *** xalbo left
[22:35] *** geekosaur joined
[22:35] *** bcode joined
[22:35] *** xfix joined
[22:35] *** Juerd joined
[22:35] *** sorear joined
[22:35] *** cooper joined
[22:35] *** timotimo joined
[22:35] *** rurban_ joined
[22:35] *** atrodo joined
[22:35] *** flussence joined
[22:35] *** erdic joined
[22:35] *** yogan_ joined
[22:35] *** tokuhirom joined
[22:35] *** risou joined
[22:35] *** ivan`` joined
[22:35] *** ivan`` left
[22:35] *** ivan`` joined
[22:36] *** REPLeffect joined
[22:36] *** xalbo joined
[22:36] *** simcop2387 joined
[22:36] *** bowtie joined
[22:36] *** TimToady joined
[22:36] *** sunnavy joined
[22:36] *** camelia joined
[22:36] *** apejens joined
[22:36] *** tadzik joined
[22:36] *** Util joined
[22:36] *** lestrrat joined
[22:36] *** raydiak joined
[22:36] *** morgan.freenode.net sets mode: +v camelia

[22:36] *** ivan`` left
[22:36] *** ivan`` joined
[22:39] <lizmat> m: gather { await start { take 42 } }  # jnthn: golfed threaded gather/take pb

[22:39] <yoleaux> 17:49Z <japhb> lizmat: In spec commit 9294dd4c7945be95b56ee991532abaa608917cb5, why just a build-date at Date precision?  Why not a DateTime?

[22:39] <camelia> rakudo-moar 641398: OUTPUT«Unhandled exception: No exception handler located for take␤   at <unknown>:1  (/home/p6eval/rakudo-inst-1/languages/perl6/runtime/CORE.setting.moarvm:throw:4294967295)␤ from src/gen/m-CORE.setting:18257  (/home/p6eval/rakudo-inst-1/languages/perl6/runt…»

[22:40] <jnthn> lizmat: That's arguably an issue, but not the one that bothers me.

[22:41] <jnthn> m: await do for 1..4 { gather { .take for 1..10 } }

[22:41] <camelia> rakudo-moar 641398: ( no output )

[22:41] <jnthn> m: say await do for 1..4 { gather { .take for 1..10 } }

[22:41] <vendethiel> dammit

[22:41] <camelia> rakudo-moar 641398: OUTPUT«(timeout)»

[22:41] <dalek> specs: 013a6e0 | (Elizabeth Mattijsen)++ | S28-special-names.pod:

[22:41] <dalek> specs: Build-date is a DateTime, japhb++

[22:41] <dalek> specs: review: https://github.com/perl6/specs/commit/013a6e0f6b

[22:41] <vendethiel> I went back to ST (home) after working with emacs all week ... I keep hitting ctrl-x T_T

[22:41] <donaldh> https://github.com/rakudo/rakudo/pull/269 Start removing backend specifics in IO.pm

[22:41] <jnthn> m: .say for await do for 1..4 { gather { .take for 1..10 } }

[22:41] <camelia> rakudo-moar 641398: OUTPUT«(timeout)»

[22:42] <jnthn> hmm

[22:42] <lizmat> jnthn: there is no start in there, so what are you awaiting?

[22:44] *** kurahaupo left
[22:45] <lizmat> good UST, #perl6

[22:45] <lizmat> sleep&

[22:47] <vendethiel> uh, doesn't use lib '.' work ?

[22:47] <backlash_jack> there's an emacs plugin for ST that lets you use ctrl-x

[22:47] <vendethiel> backlash_jack: I just used emacs beause I had the computer for one week and didn't want to install everything for only one week

[22:48] <vendethiel> not because I find it the best :)

[22:48] <backlash_jack> i woulda used alpine lol

[22:48] <backlash_jack> if i had to switch for a week, anyway

[22:49] <backlash_jack> once i went to a job interview and the asked me if i was familiar with the 'six' editor

[22:49] <vendethiel> well, I had used emacs (for maybe 3 months) but I really didn't like it so went back to ST

[22:49] <backlash_jack> and i was like "umm, no, i've actually never heard for that one."

[22:49] <backlash_jack> so after it was over i realized that they meant 'vi'

[22:50] <backlash_jack> and i was all :q!

[22:50] <vendethiel> o_o

[22:50] <huf> six... ;D

[22:51] <backlash_jack> i'm absolutely dependent on emacs auto-indent, and i don't think that feature is coming to any other editors anytime soon

[22:51] <vendethiel> oh, there are certainly ST plugins for that

[22:51] <backlash_jack> that work the same as emacs?

[22:51] <vendethiel> well, I can't actually judge them. First time I talked about linux's V system, I said V as the letter ¬¬

[22:51] <vendethiel> I think I've seen a plugin that does

[22:52] <backlash_jack> so, if you forget a semicolon or something, your indenting gets screwed up?

[22:52] <vendethiel> like in emacs, i guess

[22:52] <backlash_jack> the main reason i never learned python very well was my dependence on emacs knowing perl ;)

[22:53] <vendethiel> { "keys": ["f12"], "command": "reindent"} <- pretty limited tho

[22:53] <backlash_jack> i like ST, but i only use it in windows.

[22:53] <vendethiel> you have to select the line. I guess you could make a macro ...

[22:53] <vendethiel> oh right : { "keys": ["ctrl+k+d"], "command": "reindent" , "args": {"single_line": false}}

[22:54] <backlash_jack> i had some config setting that let you move forward and backward with the tab  or shift tab,

[22:54] <backlash_jack> but it's just not the same.  emacs is reading what you type

[22:54] <vendethiel> yeah, and sometimes I have to indent manually because it can't quite figure out what I'm doing

[22:54] <vendethiel> esp. with `if ();`

[22:55] *** LordVorp joined
[22:55] *** woolfy left
[22:56] *** woolfy joined
[23:00] *** donaldh left
[23:01] <timotimo> jnthn: num candidates for the Int CArray?

[23:01] <vendethiel> m: my $a; for (^15) { LAST $a = $_; last if $_ > 5; }; say $a;

[23:01] <camelia> rakudo-moar 641398: OUTPUT«Cannot call method 'gist' on a null object␤  in sub say at src/gen/m-CORE.setting:13622␤  in block  at /tmp/gMAO9lFuvq:1␤␤»

[23:02] <vendethiel> mh.

[23:03] *** rurban joined
[23:04] *** rurban left
[23:05] <vendethiel> m: my $a; for (^15) { LAST { $a = $_; }; .say; last if $_ > 5; }; say $a;

[23:05] <camelia> rakudo-moar 641398: OUTPUT«0␤1␤2␤3␤4␤5␤6␤6␤»

[23:05] <vendethiel> nice~

[23:05] *** xenoterracide__ left
[23:06] *** rurban joined
[23:14] <jnthn> timotimo: no, the Num one

[23:14] <jnthn> Where bindattr_n is used

[23:15] <jnthn> m: .say for await do for 1..4 { start { gather { .take for 1..10 } } }

[23:15] <camelia> rakudo-moar 641398: OUTPUT«(signal )1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤Unhandled exception in code scheduled on thread 139833294665472␤Unhandled exception in code scheduled on thread 139833286272768␤1␤2␤This type does not support positional operations␤  in method rei…»

[23:15] <jnthn> lizmat: Thanks :)

[23:15] <jnthn> lizmat: It's almost as if I drank a few nice beers this evening :P

[23:17] *** rurban left
[23:18] *** ssutch joined
[23:19] *** ssutch left
[23:26] *** backlash_jack left
[23:28] *** dmol left
[23:36] *** thou left
[23:43] *** SevenWolf left
[23:55] <timotimo> i thought i added those

[23:55] <timotimo> i gotta run now, though

[23:55] <timotimo> ttyl :)

[23:56] *** ajr_ left
[23:56] *** backlash_jack joined
