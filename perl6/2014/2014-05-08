[00:00] *** berekuk left
[00:01] *** Guest27600 left
[00:02] *** anaeem1 left
[00:10] *** pippo left
[00:21] *** lvfjf left
[00:27] *** fhelmberger joined
[00:32] *** fhelmberger left
[00:42] *** lvfjf joined
[00:51] *** Su-Shee left
[00:52] *** Timbus left
[00:53] *** Timbus joined
[00:53] *** Su-Shee joined
[00:56] *** logie left
[01:04] *** hoverboard joined
[01:08] *** Su-Shee_ joined
[01:09] *** jnap left
[01:11] *** Su-Shee left
[01:16] *** bjz joined
[01:18] *** FROGGS_ joined
[01:19] *** lvfjf left
[01:20] *** Sqirrel left
[01:21] *** FROGGS left
[01:22] *** klapperl_ joined
[01:25] *** klapperl left
[01:31] <TimToady> skids++

[01:39] *** Timbus left
[01:39] *** Timbus joined
[01:46] <thou> I'm making a tool to recursively clone module dependencies into a directory. I have a start, but I feel the grammar is still a bit clumsy. In particular, the actions for the pkginfo and info regexes are awkward. Is there a better way to write them?  https://gist.github.com/softmoth/3bc7bd31ca65a5f7b3df

[01:46] *** Sqirrel joined
[01:56] *** raiph joined
[01:59] <d^_^b> http://paste.scsys.co.uk/368160 having issues building nqp for the jvm

[02:02] <raiph> d^_^b: looks like you need to specify a memory option with more memory.

[02:02] <raiph> have you built it successfully before?

[02:05] <d^_^b> raiph: would that be an option for passed to the configure script? nope

[02:06] <raiph> searching clogs atm for the right reference

[02:08] *** jnap joined
[02:09] *** hoverboard is now known as moistcherry

[02:10] *** moistcherry is now known as hoverboard

[02:10] *** jnap1 joined
[02:10] *** anaeem1_ joined
[02:12] *** jnap left
[02:14] *** anaeem1_ left
[02:15] *** jnap1 left
[02:15] <d^_^b> raiph: I think I found what fixes it.

[02:15] <d^_^b> testing now

[02:15] <raiph> cool, hadn't yet found what i was looking for

[02:16] <d^_^b> it is in the readme.md actually

[02:16] <d^_^b> :D

[02:17] <raiph> heh

[02:17] <d^_^b> -Xms500m -Xmx2g as options passed to java

[02:17] <d^_^b> well tried that but that didn't work

[02:20] *** donaldh left
[02:20] <d^_^b> well I editted the nqp-j but I don't know if I did it right.

[02:21] <d^_^b> http://paste.scsys.co.uk/368179

[02:23] <raiph> here's the best I've found from #perl6:

[02:23] <raiph> http://irclog.perlgeek.de/perl6/2013-11-02#i_7803667

[02:24] <raiph> http://irclog.perlgeek.de/perl6/2014-04-23#i_8629112

[02:25] *** rurban joined
[02:25] *** donaldh joined
[02:28] <raiph> did you still get an out of heap space error when using -Xms1000m ?

[02:28] <raiph> d^_^b: ^^

[02:28] <d^_^b> yup

[02:30] <raiph> is this while trying to build the new rakudo star?

[02:30] <d^_^b> well I edited the file, but I don't see the commands being passed.

[02:32] *** rurban left
[02:35] *** molaf joined
[02:46] *** kurahaupo left
[02:46] *** plobsing joined
[02:53] *** araujo left
[02:54] *** xinming_ joined
[02:57] *** xinming left
[03:05] *** xinming_ left
[03:06] *** molaf left
[03:11] *** jnap joined
[03:12] *** jnap1 joined
[03:12] *** jnap left
[03:12] *** xinming joined
[03:12] *** hoverboard left
[03:13] *** jnap1 left
[03:13] *** jnap joined
[03:18] *** jnap left
[03:23] *** jnap joined
[03:25] *** Alula left
[03:26] *** adu joined
[03:32] *** rurban joined
[03:36] *** Alula joined
[03:37] *** rurban left
[03:46] *** jnap left
[04:04] *** hoverboard joined
[04:18] *** anaeem1 joined
[04:22] *** dwoldrich joined
[04:23] *** hoverboard left
[04:26] *** hoverboard joined
[04:27] *** Rotwang joined
[04:27] *** aindilis left
[04:28] *** fhelmberger joined
[04:29] *** aindilis joined
[04:32] *** fhelmberger left
[04:34] *** rurban joined
[04:38] *** rurban left
[04:39] *** hoverboard left
[04:43] *** rurban joined
[04:44] *** Rotwang left
[04:46] *** sftp left
[04:46] *** sftp_ joined
[04:47] *** rurban left
[04:48] *** SamuraiJack_ joined
[04:59] *** sftp joined
[05:00] *** sftp_ left
[05:01] *** raiph left
[05:12] *** bjz_ joined
[05:13] *** bjz left
[05:24] *** kaare_ joined
[05:25] *** sftp left
[05:25] *** sftp joined
[05:33] *** adu left
[05:44] *** rurban joined
[05:48] *** rurban left
[06:05] *** BenGoldberg left
[06:11] *** FROGGS_ left
[06:44] *** rurban joined
[06:48] *** rurban left
[06:55] *** FROGGS joined
[06:57] *** kaleem joined
[06:59] *** thou left
[07:08] *** rindolf joined
[07:12] *** darutoko joined
[07:12] *** vendethiel left
[07:13] *** vendethiel joined
[07:14] *** zakharyas joined
[07:19] *** dwoldrich left
[07:23] *** igorsutton joined
[07:23] *** rindolf left
[07:27] *** domidumont joined
[07:37] *** virtualsue joined
[07:38] *** fhelmberger joined
[07:40] *** denis_boyun_ joined
[07:40] <timotimo> d^_^b: you most probably need to change it in your Makefile or even the Makefile.in from the tools/build/ folder

[07:41] <dalek> roast: 0ab4c71 | (Elizabeth Mattijsen)++ | S17-supply/classify.t:

[07:41] <dalek> roast: Also test Supply.classify( @mapper )

[07:41] <dalek> roast: review: https://github.com/perl6/roast/commit/0ab4c71f26

[07:45] <timotimo> otherwise the makefile will say "hey this file is out of date! i'll update it real quick"

[07:45] <timotimo> or something like that

[07:47] *** rurban joined
[07:51] *** rurban left
[07:51] *** berekuk joined
[07:57] *** Su-Shee_ is now known as Su-Shee

[08:01] <timotimo> tadzik: i'm a bit annoyed that there's no good single repository from where i can grab steroids and improve upon it

[08:02] <timotimo> and there's no history :(

[08:03] <tadzik> timotimo: there's github.com/tadzik/steroids now

[08:03] <tadzik> that's the newest iteration

[08:03] <tadzik> I know, I screwed up a little

[08:06] <timotimo> :)

[08:07] <FROGGS> tadzik: you are bad! and you should feel bad!  # http://6gvts.wordpress.com/

[08:08] <FROGGS> I still love that site :o)

[08:11] <tadzik> :D

[08:11] <tadzik> the existence of this website is amusing a bit

[08:12] <tadzik> ABOUT

[08:12] <tadzik> You probably suck.

[08:12] <FROGGS> *g*

[08:12] <tadzik> meh, I expected at least a dog

[08:12] <tadzik> * doge

[08:13] <FROGGS> hmm, translation for "doge" is "Doge"... not very helpful

[08:14] <lizmat> "the chief magistrate of Venice or Genoa."

[08:14] <lizmat> ?

[08:15] <FROGGS> ha! there is an easter egg about "doge meme" on youtube :D

[08:15] <FROGGS> but I see now that this is meant: https://www.google.de/search?q=doge+meme

[08:17] *** berekuk left
[08:18] *** cognominal__ left
[08:19] <tadzik> yes, I'm a fan

[08:19] <tadzik> our office is full of those :D

[08:20] <FROGGS>  /o\

[08:21] <tadzik> some of them hand-drawn

[08:22] <tadzik> https://i.imgur.com/uK5SJOH.jpg

[08:24] <FROGGS> -.-

[08:24] <FROGGS> :P

[08:24] <FROGGS> I only have that on my office door http://hezik.nl/wp-content/uploads/2012/03/ssh.jpg

[08:25] <tadzik> :D

[08:26] <tadzik> we have http://images.fineartamerica.com/images-medium-large/you-cant-afford-to-miss-either-christopher-purcell.jpg, but with "FIX EVERY COMPILER WARNING" at the bottom

[08:26] <timotimo> tadzik: btw, $k eq any("Up", "Space") is much less optimized in rakudo than $k eq "Up" | "Space" is

[08:27] <tadzik> oh, good to know

[08:27] <timotimo> though really it should be doable to see that it's a list of constant strings and thus "non-dangerous"

[08:27] <timotimo> and the same optimization could perhaps kick in here, too

[08:28] <timotimo> m: say Int(5.7)

[08:28] <camelia> rakudo-moar bd518a: OUTPUT«5␤»

[08:28] <timotimo> oh, duh.

[08:29] <FROGGS> *g*

[08:29] <FROGGS> add 0.5 :o)

[08:29] *** rindolf joined
[08:32] <timotimo> i was about to say "i didn't know this exists!"

[08:32] <timotimo> but i suppose it isn't that surprising

[08:36] <vendethiel> m: class A { has $!a; submethod BUILD($!a = 5) {}; method p { say $!a; } }; A.new.p

[08:36] <camelia> rakudo-moar bd518a: OUTPUT«5␤»

[08:36] <vendethiel> tadzik: couldn't you use that here ? https://github.com/tadzik/steroids/commit/1c22c7ed70eb568d8bccf17a283aa16c00787715#diff-e4be71a98c39c3d70a4da794277d5b79R17

[08:39] *** denis_boyun_ left
[08:40] <tadzik> oh, I could :)

[08:41] *** denis_boyun joined
[08:41] * vendethiel PRs

[08:42] <tadzik> I don't quite trust BUILD generally

[08:42] <tadzik> it's weird

[08:42] <vendethiel> why are you using nqp::bindattr ?

[08:43] <vendethiel> (in add_state)

[08:43] <FROGGS> is it a CStruct?

[08:43] <tadzik> I probably have to

[08:43] <tadzik> :>

[08:43] <tadzik> if it works on all backends without it, then my fault

[08:44] <vendethiel> probably so

[08:44] <vendethiel> (that it's a CStruct, not that it's your fault, that is ..)

[08:44] <tadzik> I may have just been wrong though

[08:44] <tadzik> the thing being assigned (bound) is a cstruct, yes

[08:44] <FROGGS> has Mu $!game;

[08:45] <FROGGS> I guess that bindattr is sane here

[08:46] <vendethiel> I had to do a SDL game for school in C, and it was a bit painful. Animation abstractions seems good..

[08:47] <tadzik> they're a joy to use :)

[08:47] <tadzik> (for me)

[08:47] <vendethiel> Yeah, though the game I did was a map-based RPG, so maybe I'll create a class for a scrolling map

[08:48] *** rurban joined
[08:48] <vendethiel> with some nice DSL to create the map itself, maybe ?

[08:48] <tadzik> aww yiss

[08:49] <tadzik> the map could be loadable from a JSON-y thingy perhaps

[08:49] <tadzik> in the other game I did a fun map, hold on

[08:49] <vendethiel> tadzik: https://github.com/Nami-Doc/midgar/blob/master/map.txt that's how I did it in C :P

[08:49] <FROGGS> I've got a top secret P5 thingy laying around about 2d maps and stuff... (secret of mana like)

[08:49] <tadzik> https://github.com/tadzik/mario/blob/master/level

[08:49] <vendethiel> hahaha

[08:49] <tadzik> then somewhere else there's a mapping: s is sky, B is brick, g is grass

[08:49] <vendethiel> I guess we did the same thing :>

[08:49] <vendethiel> except I just read the size

[08:49] <tadzik> lol

[08:50] <FROGGS> I wrote a proper map editor :P

[08:50] <FROGGS> with a palette of the tiles etc

[08:50] <tadzik> nice :)

[08:50] <vendethiel> FROGGS: don't get me wrong - I did so too : https://github.com/Nami-Doc/midgar/tree/master/tools/mapcreator

[08:50] <tadzik> I didn't :O

[08:50] <FROGGS> and the game is SDL+box2d+P5

[08:50] <tadzik> anyway, I think maps are fine this way, then before you write the editor you can use a text editor :P

[08:51] <tadzik> dialogues, thoguh, are probably better off with a DSL

[08:51] <tadzik> because some of dialouge options want to be conditional, depending on quest status, items etc

[08:51] <FROGGS> tadzik: I created a map editor to attach properties to tiles, like triggers

[08:51] <tadzik> nice

[08:51] <FROGGS> so you can stand before a sign and get its message displayed

[08:52] <FROGGS> damnit, now I want to work on that instead :/

[08:52] *** rurban left
[08:52] <tadzik> FROGGS: http://static.comicvine.com/uploads/original/11112/111123482/3581810-5080587534-Yup.%2B.jpg

[08:52] <FROGGS> *g*

[08:53] <tadzik> so basically my plan was, after being done with gamestates (which means submitting a proper bugreport for nativecall/moar), to start building nice stuff on top of the foundation that there is

[08:53] <tadzik> a nice menu generator, a thingy for tiled maps etc

[08:53] <tadzik> if somebody jumped on it, that'd be super awesome

[08:58] *** anaeem1 left
[08:58] *** anaeem1_ joined
[09:00] <vendethiel> tadzik: I'll probably try the tiled map thingie

[09:00] <tadzik> vendethiel: \o/

[09:02] *** denis_boyun left
[09:04] *** plobsing left
[09:08] <vendethiel> tadzik: is there something in steroids to deal with spritemaps ?

[09:08] <timotimo> not yet, no

[09:08] <vendethiel> tadzik: since I used that : https://github.com/Nami-Doc/midgar/blob/master/res/pokesprites.jpg

[09:08] <tadzik> vendethiel: yes

[09:08] <tadzik> well, to some extend

[09:08] <vendethiel> with my hackingly hack : https://github.com/Nami-Doc/midgar/blob/master/sprite.c#L12

[09:09] <tadzik> ok, no then :)

[09:09] <timotimo> yikes.

[09:09] <vendethiel> timotimo: you know you like it

[09:10] <tadzik> what is supported is things like this: https://github.com/tadzik/steroids/blob/master/assets/invader.png

[09:10] <timotimo> i once made something fun where i arbitrarily defined that all sprites are equally sized and i put a list of names into the comment field of the svg, which ended up in the png as a comment and then i could load the png and at the same time parse out the comment tag to get the names

[09:10] <timotimo> oh, you have support for animated stuff?

[09:10] <tadzik> you tell steroids "there's images in there, 48x32", and it figures out how many are there and how to divide that

[09:10] <tadzik> yes

[09:11] <vendethiel> it "figures out" ? I see "Int $framecnt"

[09:12] <tadzik> ok, maybe it doesn't figure it out :D

[09:12] <tadzik> oh yes, it can't really

[09:12] <tadzik> because in that example there's 7 of them, not like the size would indicate

[09:12] <vendethiel> yeah, for the empty case

[09:12] <tadzik> so you do self.load_spritesheet('invader', 'assets/invader.png', 72, 32, 7);

[09:12] <tadzik> and then you can animate that or whatnot

[09:13] <FROGGS> I know player sprites where you have 4 columns for the four walking directions

[09:13] <tadzik> yes

[09:13] <FROGGS> and the animations are the rows...

[09:14] <tadzik> you can specify which frames go for an animation

[09:14] <tadzik> so: self.add_animation($!player, 3..8, 200, True); or something

[09:14] <FROGGS> that is what P5's SDLx::Sprite::Animated also allows I think

[09:14] <tadzik> that's frames from 3 to 8, every 200ms, looped

[09:15] <FROGGS> ohh, that will be nice in P6

[09:15] <tadzik> it already is :)

[09:15] <FROGGS> you can supply a range like that, or a list if the source image is not ordered well

[09:15] <FROGGS> :o)

[09:15] <tadzik> exactly

[09:15] <FROGGS> yeah, I have to play with it

[09:15] <timotimo> someone on twitter objected to the periodic table of the operators :\

[09:15] <timotimo> i kinda like it

[09:18] <vendethiel> still 8 hours before age of mythology EX is playable :\

[09:19] <tadzik> oh, today is d-day too :D

[09:21] <vendethiel> "project steroids not found in the ecosystem"

[09:21] <tadzik> it's knot

[09:21] <tadzik> I don't think it should be there (yet)

[09:22] <vendethiel> how can I depend on it if it's not here ?

[09:22] <tadzik> download it to your project directory, the lib/

[09:26] <vendethiel> ew :(

[09:29] <FROGGS> vendethiel: it will break your code anyway when it is in that early state... so better but a snapshot into lib/ as tadzik++ said

[09:29] <vendethiel> sure, I expect stuff pre-1.0 to break

[09:48] <tadzik> yeah, I break stuff all the time now

[09:48] <tadzik> I realize my mistakes :)

[09:49] <tadzik> it may be fun to try running Through the window on the latest engine

[09:49] *** rurban joined
[09:50] *** dmol joined
[09:51] *** denis_boyun joined
[09:53] *** rurban left
[10:13] <Woodi> m: $t = Supply.interval(1).tap(&say);

[10:13] <camelia> rakudo-moar bd518a: OUTPUT«===SORRY!=== Error while compiling /tmp/jp6A9Pd61C␤Variable '$t' is not declared␤at /tmp/jp6A9Pd61C:1␤------> $t⏏ = Supply.interval(1).tap(&say);␤    expecting any of:␤        postfix␤»

[10:14] <Woodi> m: my $t = Supply.interval(1).tap(&say);

[10:14] <camelia> rakudo-moar bd518a: ( no output )

[10:14] <timotimo> Woodi: these interval taps won't keep your application alive

[10:15] <timotimo> m: my $t = Supply.interval(1).tap(&say); sleep 5;

[10:15] <camelia> rakudo-moar bd518a: OUTPUT«0␤1␤2␤3␤4␤5␤»

[10:15] <timotimo> m: my $t = Supply.interval(0.1).tap(&say); sleep 1; $t.close; sleep 1;

[10:15] <camelia> rakudo-moar bd518a: OUTPUT«0␤1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤»

[10:22] <Woodi> timotimo: right, good to know. but I was just checking moar for .interval - start.04 saya NYI...

[10:23] *** rindolf left
[10:24] <jnthn> yes, 2014.04 didn't have the async bits

[10:25] <Woodi> anyway, I think API is a bit strange for publish/subscribe service... sending something while getting with .more(...) is strange...

[10:26] <Woodi> I expecting Supplies are inter-threads pipes and one end is producing things...

[10:26] <jnthn> No

[10:26] <Woodi> my thinkins is degenerated (case) ? :)

[10:27] <jnthn> In fact, when you more something, it keeps to the same thread unless it has to.

[10:27] <jnthn> uh, unless it has to change

[10:27] *** SamuraiJack_ left
[10:27] <jnthn> It's just setting up a pipeline that values can be pushed through asynchronously.

[10:27] *** SamuraiJack_ joined
[10:29] <timotimo> Woodi: what you're thinking of is probably Channels.

[10:29] <Woodi> hmm, .more isn't receiving end ?

[10:31] <timotimo> nope

[10:31] <timotimo> you use .more to "send" a value

[10:31] <timotimo> and the recipients get invoked, so there is no ".receive" or similar

[10:33] <Woodi> hmm :)

[10:33] <timotimo> but i think there is a coercer from a supply to a channel

[10:34] <jnthn> Think of it like a lazy list, but instead of the thing at the end pulling the next value through the pipeline of maps/greps etc, instead the asynchronously produced values are pushed through that pipeline to the tapper at the end.

[10:36] <Woodi> probably my brain is damaged with (light lecture of) flow based programming and I want to have many stages of data processing everywhere...

[10:37] <Woodi> so Supplies just construct parallel receivers ?

[10:39] <Woodi> nvm, I have .Net book with reactive chapter, will consult it...

[10:42] <timotimo> not parallel

[10:42] <timotimo> unless you specifically make it multi-threaded the tappers will just be called in order

[10:46] *** baest_ joined
[10:50] *** rurban joined
[10:50] *** gfldex_ joined
[10:51] *** robins joined
[10:51] *** lee__ joined
[10:51] *** huf_ joined
[10:53] *** mtj_- joined
[10:54] *** rurban left
[10:55] *** mtj_ left
[10:55] *** gfldex left
[10:55] *** baest left
[10:55] *** huf left
[10:55] *** robinsmidsrod left
[11:02] *** bonsaikitten joined
[11:03] *** kaare__ joined
[11:08] *** telex left
[11:08] *** telex joined
[11:10] *** denis_boyun left
[11:14] *** kivutar left
[11:19] *** baest_ is now known as baest

[11:20] *** grep0r left
[11:21] <Woodi> btw. some loops are implemented via map and in some Advent post I read map is implemented with gather. still is ? becouse lastly someon say gather is slow...

[11:21] <FROGGS> map is implemented using MapIter

[11:22] <Woodi> looking...

[11:23] *** kaare_ left
[11:23] *** xiaomiao left
[11:23] *** wbill left
[11:23] *** [particle]1 left
[11:25] *** grep0r joined
[11:27] <Woodi> looks nqp::while or even assembly code :)

[11:28] <jnthn> MapIter itself is quite hand-optimized.

[11:39] *** kaare__ is now known as kaare_

[11:42] *** [particle] joined
[11:44] *** wbill joined
[11:47] *** denis_boyun joined
[11:54] *** tgt joined
[11:59] <lizmat> m: my @m = ( $(), $(1,) ); .WHAT.say for @m

[11:59] <camelia> rakudo-moar bd518a: OUTPUT«(Str)␤(Parcel)␤»

[12:00] <lizmat> So how *do* I get an empty parcel into an array ?

[12:00] <moritz> ().item

[12:00] <moritz> $() is special-cased to go into $/

[12:00] <lizmat> aha....  ok

[12:01] <lizmat> moritz++

[12:02] <lizmat> oddly enough, this doesn't work either:

[12:02] <lizmat> m: my @m = ( Parcel.new, Parcel.new.item ); .WHAT.say for @m

[12:02] <camelia> rakudo-moar bd518a: OUTPUT«(Parcel)␤»

[12:03] <lizmat> m: my @m = (Parcel.new); say @m.elems'

[12:03] <camelia> rakudo-moar bd518a: OUTPUT«===SORRY!=== Error while compiling /tmp/mkWHclIavZ␤Two terms in a row␤at /tmp/mkWHclIavZ:1␤------> my @m = (Parcel.new); say @m.elems⏏'␤    expecting any of:␤        method arguments␤        postfix␤    …»

[12:03] <lizmat> m: my @m = (Parcel.new); say @m.elems

[12:03] <camelia> rakudo-moar bd518a: OUTPUT«0␤»

[12:03] <lizmat> was a bit of a WAT to me

[12:03] *** skids left
[12:04] *** pnu left
[12:04] *** ggherdov_ left
[12:04] *** flussence left
[12:04] *** _sri left
[12:08] <FROGGS> m: my @m = ( $(,), $(1,) ); .WHAT.say for @m

[12:08] <camelia> rakudo-moar bd518a: OUTPUT«===SORRY!=== Error while compiling /tmp/FzwAhigGCp␤Preceding context expects a term, but found infix , instead␤at /tmp/FzwAhigGCp:1␤------> my @m = ( $(,⏏), $(1,) ); .WHAT.say for @m␤»

[12:08] <FROGGS> >.<

[12:13] <jnthn> lizmat: Parcel.new makes you a *flattening* Parcel

[12:14] <jnthn> Like Array.new does with Array

[12:14] <lizmat> so you would need Parcel.new.item

[12:14] <jnthn> m: my @m = ( Parcel.new, Parcel.new.item ); say @m.elems

[12:14] <camelia> rakudo-moar bd518a: OUTPUT«1␤»

[12:14] *** robins is now known as robinsmidsrod

[12:14] <jnthn> There, the Parcel.new flattened away as expected, and the .item'd one remained.

[12:15] <lizmat> I guess my main comfusion came from $() not being Parcel.new.item

[12:15] <jnthn> so yes, .item

[12:15] <jnthn> Ah, yeah...that's a...curious discontinuity I'm not entirely sure pulls its weight.

[12:16] <jnthn> r: say $(,).WHAT # curious

[12:16] <camelia> rakudo-{parrot,jvm,moar} bd518a: OUTPUT«===SORRY!=== Error while compiling /tmp/tmpfile␤Preceding context expects a term, but found infix , instead␤at /tmp/tmpfile:1␤------> say $(,⏏).WHAT # curious␤»

[12:16] <jnthn> ah, of course :)

[12:16] <moritz> r: say $( ).WHAT

[12:16] <camelia> rakudo-{parrot,jvm,moar} bd518a: OUTPUT«(Parcel)␤»

[12:16] <jnthn> oh my :)

[12:16] <jnthn> r: my @a = $( ), $( ); say @a.elems

[12:16] <camelia> rakudo-{parrot,jvm,moar} bd518a: OUTPUT«2␤»

[12:16] <jnthn> hehe :)

[12:17] <lizmat> wow, that whitespace sensitive ?

[12:17] <jnthn> I'm...not quite sure $() and $( ) meaning a different thing is quite what the spec had in mind... :)

[12:17] <lizmat> m: my @m = ($( )); say @m[0].WHAT

[12:17] <camelia> rakudo-moar bd518a: OUTPUT«(Parcel)␤»

[12:18] <lizmat> so it even doesn't flatten with the space

[12:18] *** pnu joined
[12:18] *** ggherdov_ joined
[12:18] *** flussence joined
[12:18] *** _sri joined
[12:18] <jnthn> Right, that's what my .elems thing showed above

[12:18] <FROGGS> jnthn: I'm sure I asked TimToady about '$()'/'$( )' before implemented only '$()' as the shortcut for $/.ast

[12:19] *** ggherdov_ left
[12:19] <jnthn> FROGGS: Yeah; but this makes me wonder if $() as a shortcut for $/.ast is really wise.

[12:19] <FROGGS> jnthn: I liked the idea when I implemented it :o)

[12:19] <FROGGS> I'm not so sure anymore though

[12:20] *** ggherdov_ joined
[12:21] <vendethiel> it does look surprising :-)

[12:23] <lizmat> it was quite a bit of a WAT for me :-)

[12:26] *** rurban joined
[12:32] <masak> hi-from-a-train, #perl6

[12:34] <nwc10> good moving, masak

[12:34] <lizmat> .oO( he could be standing still )

[12:35] <lizmat> masak: o/

[12:35] <jnthn> lizmat: Given he's probably on a train in Sweden, it could well be the case :P

[12:36] <masak> surprisingly, the train is moving. forwards, even.

[12:36] <nwc10> jnthn: the trains in Sweden are happy reminders of home? :-)

[12:36] <colomon> jvm issue blogged: http://justrakudoit.wordpress.com/2014/05/08/jvm-weirdness/

[12:36] <lizmat> masak: that's just a matter of orientation

[12:37] <colomon> I wonder how many of the 30+ JVM-only module fails are because of this issue?

[12:37] <lizmat> masak: is it going in the right direction?

[12:37] <masak> lizmat: yes, because "away from work, towards home" is inherently right.

[12:38] <jnthn> lizmat: It's going "in the direction of travel" :)

[12:38] <jnthn> (Context: all announcements like "the platform will be on the left" are always qualified with "in the direction of travel" - 'cus apparently that's not obvious :))

[12:38] <dalek> rakudo-star-daily: fe49b71 | coke++ | log/ (5 files):

[12:38] <dalek> rakudo-star-daily: today (automated commit)

[12:38] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/fe49b719df

[12:38] <dalek> rakudo-star-daily: 52fdef8 | coke++ | log/ (5 files):

[12:38] <dalek> rakudo-star-daily: today (automated commit)

[12:38] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/52fdef814c

[12:39] <dalek> perl6-roast-data: 3542cca | coke++ | / (4 files):

[12:39] <dalek> perl6-roast-data: today (automated commit)

[12:39] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/3542cca5e9

[12:41] <dalek> rakudo/nom: 286ead8 | (Elizabeth Mattijsen)++ | src/core/Supply (2 files):

[12:41] <dalek> rakudo/nom: Implement Supply.categorize

[12:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/286ead8721

[12:41] <dalek> roast: d3aaaf2 | (Elizabeth Mattijsen)++ | S17-supply/categorize.t:

[12:41] <dalek> roast: Add tests for Supply.categorize

[12:41] <dalek> roast: review: https://github.com/perl6/roast/commit/d3aaaf2a41

[12:42] <masak> I hate that qualification. it turns an already unambiguous phrase into a longer but no less ambiguous one.

[12:43] <lizmat> like it would be clear from a stationary train what the direction of travel is supposed to be, right?

[12:43] <jnthn> Me too (this is the end of the sentence).

[12:43] <Woodi> it's still better then a voice from megaphone announcing: Train from Koluszek to Koluszek... wtf I'm talking!!??

[12:43] <jnthn> I don't know what they do it (it's a pondering).

[12:43] *** kaleem left
[12:44] *** rindolf joined
[12:47] * masak just found https://en.wikipedia.org/wiki/Fumblerules and thinks jnthn would like those :)

[12:47] <dalek> specs: a375266 | (Elizabeth Mattijsen)++ | S17-concurrency.pod:

[12:47] <dalek> specs: Spec Supply.categorize

[12:47] <dalek> specs: review: https://github.com/perl6/specs/commit/a3752662e6

[12:50] <dalek> rakudo/nom: 3ba24fc | (Elizabeth Mattijsen)++ | t/spectest.data:

[12:50] <dalek> rakudo/nom: Make sure we test Supply.categorize

[12:50] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3ba24fc9d9

[12:50] <dalek> rakudo/nom: e64f6ef | (Elizabeth Mattijsen)++ | docs/ChangeLog:

[12:50] <dalek> rakudo/nom: Announce Supply.(classify|categorize)

[12:50] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e64f6ef067

[12:51] <jnthn> rules for...fumbles? :P

[12:51] * jnthn looks

[12:51] <lizmat> als: Muphry's law: https://en.wikipedia.org/wiki/Muphry%27s_law

[12:51] <jnthn> hah :)

[12:52] <jnthn> .oO( Don't accidentally verbs. )

[12:53] *** anaeem1_ left
[12:53] *** domidumont left
[12:54] <lizmat> and don't stop mid

[12:55] *** LLamaRider joined
[12:55] * lizmat stops messing with Supplies for now

[12:56] <lizmat> unless someone tells me I forgot / broke something

[12:56] <jnthn> Put a article in a right place.

[12:56] <jnthn> colomon: I think that the issue is that something is going on with importing symbols, meaning ABC::Note is accidentally considered a sub call, not a type name, which leads to the error you see.

[12:58] <lizmat> j: $_ = IO::Path; say "foo" when IO::Path

[12:58] <camelia> rakudo-jvm bd518a: OUTPUT«foo␤»

[12:59] <lizmat> j: $_ = Test; say "foo" when Test

[12:59] <camelia> rakudo-jvm bd518a: OUTPUT«===SORRY!=== Error while compiling /tmp/SbxGnZqpXB␤Undeclared name:␤    Test used at line 1␤␤»

[12:59] <lizmat> j: $_ = Test; say "foo" when Test; use Test

[12:59] <camelia> rakudo-jvm bd518a: OUTPUT«===SORRY!=== Error while compiling /tmp/JsE0mQbo3n␤Undeclared name:␤    Test used at line 1␤␤»

[13:00] <lizmat> m: $_ = Test; say "foo" when Test; use Test

[13:00] <camelia> rakudo-moar bd518a: OUTPUT«===SORRY!=== Error while compiling /tmp/2oBaJywLqc␤Undeclared name:␤    Test used at line 1␤␤»

[13:00] <jnthn> lizmat: I suspect you need a more complex import chain to make it happen

[13:00] <lizmat> j: use Test; $_ = Test; say "foo" when Test

[13:00] <camelia> rakudo-jvm bd518a: OUTPUT«foo␤»

[13:01] <jnthn> lizmat: And probably nested packages

[13:01] <lizmat> yes, probably  :-(

[13:12] <colomon> jnthn: right, I figured it must be something like that.

[13:14] *** guru joined
[13:14] *** guru is now known as Guest22736

[13:14] *** Guest22736 is now known as ajr_

[13:15] <colomon> jnthn: just wanted to make sure this was on people's radar.  :)

[13:15] *** logie_ joined
[13:21] *** logie_ left
[13:31] *** bluescreen10 joined
[13:32] *** bluescreen100 joined
[13:33] <dalek> rakudo/nom: 6a97d13 | (Elizabeth Mattijsen)++ | src/core/Parcel.pm:

[13:33] <dalek> rakudo/nom: Emphasize specialness of "$( )" vs "$()"

[13:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6a97d13fce

[13:33] *** rurban left
[13:33] <Woodi> hmm, 'exit 0' is heavy op probably :)

[13:36] *** bluescreen10 left
[13:48] *** tgt left
[13:48] * masak looks at http://6gvts.wordpress.com/ and feels a strange sense of pride

[13:48] <masak> hm, do I boost the google juice of that site every time I link to it in the backlog?

[13:49] <jnthn> hahaha...

[13:49] <jnthn> You know you're doing something right when your blog ends up with a parody version of itself :P

[13:50] <masak> with Zoidberg, even!

[13:50] <nwc10> is the parody going to get any new posts?

[13:50] <masak> jnthn: be sure to check the "About" section.

[13:50] <masak> nwc10: one can hope.

[13:50] <masak> nwc10: but it'll be hard to top :)

[13:50] <jnthn> :D

[13:53] *** kaare_ left
[13:55] *** dwarring left
[13:56] *** btyler joined
[13:56] *** rurban joined
[13:56] *** jnap joined
[13:58] *** huf_ is now known as huf

[14:00] *** rurban left
[14:04] *** rurban joined
[14:05] *** rurban1 joined
[14:07] *** araujo joined
[14:07] *** araujo left
[14:07] *** araujo joined
[14:08] *** rurban left
[14:10] *** rurban1 left
[14:10] <dalek> specs: 5262e8c | (Elizabeth Mattijsen)++ | S02-bits.pod:

[14:10] <dalek> specs: Add paragraph about the Empty Parcel.

[14:10] <dalek> specs: review: https://github.com/perl6/specs/commit/5262e8c161

[14:12] <lizmat> afk for a bit&

[14:12] <vendethiel> (do we really want that $() meaning $.made ?)

[14:13] *** logie_ joined
[14:13] <vendethiel> I think there's a small typo, as well

[14:13] <dalek> specs: 7e406c5 | Nami-Doc++ | S02-bits.pod:

[14:13] <dalek> specs: Fix typo : `$.made` -> `$/.made`

[14:13] <dalek> specs: review: https://github.com/perl6/specs/commit/7e406c51ad

[14:13] <vendethiel> oh whoops

[14:13] <vendethiel> i meant to submit a PR ...

[14:14] <lizmat> well, I'd be surprised about the typo, as it was copy n pasted

[14:14] <vendethiel> lizmat: isn't that a typo ?

[14:14] <lizmat> isn't $.made short for $/.made ?

[14:15] *** xenoterracide joined
[14:15] <vendethiel> m: class A { has $.made; p { 'a' ~~ /a/; say $.made; } }; A.new.p;

[14:15] <camelia> rakudo-moar e64f6e: OUTPUT«===SORRY!=== Error while compiling /tmp/I27hxPE4g7␤Variable $.made used where no 'self' is available␤at /tmp/I27hxPE4g7:1␤------> { has $.made; p { 'a' ~~ /a/; say $.made⏏; } }; A.new.p;␤    expecting any of:…»

[14:15] *** treehug88 joined
[14:15] <vendethiel> m: class A { has $.made; method p { 'a' ~~ /a/; say $.made; } }; A.new.p;

[14:15] <camelia> rakudo-moar e64f6e: OUTPUT«(Any)␤»

[14:15] <vendethiel> lizmat: I don't think so. That'd be really, really, really surprising

[14:16] <lizmat> then the typo is in there twice

[14:16] <vendethiel> is it ?

[14:16] <vendethiel> oh, I see it now

[14:17] <dalek> specs: f5d616e | (Elizabeth Mattijsen)++ | S02-bits.pod:

[14:17] <dalek> specs: Fix typo spotted by vendethiel++

[14:17] <dalek> specs: review: https://github.com/perl6/specs/commit/f5d616ea59

[14:17] *** rurban joined
[14:17] *** thou joined
[14:18] <dalek> rakudo/nom: 86db16f | (Elizabeth Mattijsen)++ | src/core/Parcel.pm:

[14:18] <dalek> rakudo/nom: Fix typo spotted by vendethiel++

[14:18] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/86db16f93b

[14:19] <lizmat> really afk now&

[14:20] *** donaldh left
[14:25] *** donaldh joined
[14:36] *** Alina-malina left
[14:37] *** Alina-malina joined
[14:39] *** hoverboard joined
[14:40] *** jnap left
[14:40] *** LLamaRider left
[14:41] *** jnap joined
[14:41] *** kaleem joined
[14:53] *** sqirrel_ joined
[14:57] *** kaare_ joined
[14:58] *** xenoterracide left
[14:58] *** xenoterracide_ joined
[15:02] *** hoverboard left
[15:03] *** denis_boyun left
[15:08] *** skids joined
[15:12] *** lvfjf joined
[15:13] *** guru joined
[15:14] *** guru is now known as Guest73746

[15:14] *** timotimo left
[15:17] *** ajr_ left
[15:21] *** bjz_ left
[15:22] <FROGGS> jnthn: it looks like I am making progress with labels in nqp-j

[15:24] <jnthn> \o/

[15:24] <jnthn> FROGGS++

[15:24] * jnthn is slowly moving forward with the tricky spesh work too

[15:25] <FROGGS> jnthn++ # :o)

[15:29] *** igorsutton left
[15:30] *** igorsutton joined
[15:31] *** plobsing joined
[15:32] *** fhelmberger left
[15:33] *** igorsutton left
[15:33] *** igorsutton joined
[15:35] <[Coke]> (warehouse 13)++

[15:37] *** igorsutton left
[15:38] *** igorsutton joined
[15:38] *** zakharyas left
[15:38] <masak> [Coke]: it amuses me a bit that Wikipiedia has a category named "Fictional government investigations of the paranormal" :)

[15:41] *** lvfjf left
[15:42] *** igorsutton left
[15:43] <[Coke]> ok, now rakudo.parrot is failing 205 tests..

[15:44] <[Coke]> jvm: integration/advent2013-day19.t aborted 6 test(s)

[15:44] <[Coke]> parrot is failing a ton of things in S32-temporal now.

[15:44] <[Coke]> esp: S32-temporal/calendar.t aborted 126 test(s)

[15:44] <[Coke]>     'plan *;' could become 'plan 20;' in S03-smartmatch/signature-signature.rakudo.parrot

[15:45] *** raiph joined
[15:51] <dalek> roast: 04ed716 | masak++ | S03-smartmatch/signature-signature.t:

[15:51] <dalek> roast: [S03-smartmatch/signature-signature.t] 'plan 20;'

[15:51] <dalek> roast: 

[15:51] <dalek> roast: Instead of 'plan *;'. Coke++

[15:51] <dalek> roast: review: https://github.com/perl6/roast/commit/04ed716d62

[15:51] *** kaleem left
[15:58] <masak> [Coke]: on Rakudo Moar, S32-temporal/calendar.t flags up 43 potential difficulties, all related to leading zeros not indicating octal.

[15:58] <masak> easy cage cleaning task for someone: either remove them, or insert #OK everywhere.

[15:58] <masak> m: say 03

[15:58] <camelia> rakudo-moar 86db16: OUTPUT«Potential difficulties:␤    Leading 0 does not indicate octal in Perl 6; please use 0o3 if you mean that␤    at /tmp/sVsC6g6giP:1␤    ------> say 03⏏<EOL>␤    Leading 0 does not indicate octal in Perl 6; please use 0o3 if you m…»

[15:58] <masak> m: say 03 #OK

[15:58] <camelia> rakudo-moar 86db16: OUTPUT«Potential difficulties:␤    Leading 0 does not indicate octal in Perl 6; please use 0o3 if you mean that␤    at /tmp/gKJxllOp8i:1␤    ------> say 03⏏ #OK␤    Leading 0 does not indicate octal in Perl 6; please use 0o3 if you me…»

[15:59] <masak> oh, Rakudo doesn't honor #OK :/

[15:59] <masak> then I recommend their removal.

[16:01] *** sqirrel_ left
[16:02] *** xenoterracide__ joined
[16:02] <[Coke]> masak: those warnings have been there since Day 0.

[16:03] <[Coke]> I've complained about them before, and they were (i think intentionally) not removed.

[16:03] *** xenoterracide_ left
[16:04] <masak> ok. who am I to disagree with someone's insistence that a test spew a lot of useless output? :)

[16:05] *** [Sno] joined
[16:12] *** FROGGS left
[16:13] *** sqirrel_ joined
[16:15] *** eternaleye left
[16:16] *** Khisanth left
[16:17] *** Rotwang joined
[16:17] <[Coke]> did someone recently change those tests or the temporal handling in r-p?

[16:18] <hoelzro> [Coke]: we were talking about time vs now the other day

[16:18] <hoelzro> I don't know if someone changed it

[16:18] <PerlJam> m: say 01;

[16:18] <camelia> rakudo-moar 86db16: OUTPUT«Potential difficulties:␤    Leading 0 does not indicate octal in Perl 6; please use 0o1 if you mean that␤    at /tmp/5VyuKnExNs:1␤    ------> say 01⏏;␤    Leading 0 does not indicate octal in Perl 6; please use 0o1 if you mean …»

[16:18] <PerlJam> Why does it output the warning twice?

[16:19] *** eternaleye joined
[16:20] <vendethiel> PerlJam: because there's two numbers, duh :P

[16:21] <TimToady> maybe someone wanted to make it twice as irritating in hopes it would be removed?

[16:24] <PerlJam> I was thinking it was because of backtracking in the grammar but I don't see it.

[16:24] <TimToady> p6: say 01; #OK octal

[16:24] <camelia> niecza v24-109-g48a8de3: OUTPUT«1␤»

[16:24] <camelia> ..rakudo-jvm 86db16: OUTPUT«(timeout)»

[16:24] <camelia> ..rakudo-{parrot,moar} 86db16: OUTPUT«Potential difficulties:␤    Leading 0 does not indicate octal in Perl 6; please use 0o1 if you mean that␤    at /tmp/tmpfile:1␤    ------> say 01⏏; #OK octal␤    Leading 0 does not indicate octal in Perl 6; please use …»

[16:25] <PerlJam> r-j timed out?!?

[16:25] <TimToady> not fast enough to do it twice :P

[16:26] <TimToady> n: say 01; #OK division

[16:26] <camelia> niecza v24-109-g48a8de3: OUTPUT«Potential difficulties:␤  Leading 0 does not indicate octal in Perl 6; please use 0o1 if you mean that at /tmp/vTHqq4tLhd line 1:␤------> say 01⏏; #OK division␤␤1␤»

[16:26] *** Psyche^_ joined
[16:29] *** Khisanth joined
[16:30] *** Psyche^ left
[16:33] *** dmol left
[16:36] *** domidumont joined
[16:37] *** domidumont left
[16:38] *** FROGGS joined
[16:38] *** dmol joined
[16:40] *** domidumont joined
[16:41] *** eternaleye left
[16:47] *** eternaleye joined
[16:49] <PerlJam> maybe rakudo implements <!!{ ... }> in a way that causes it to execute twice?  (there are two !, right?  :)

[16:49] <PerlJam> er, I guess that'd be NQP

[16:50] *** telex left
[16:51] *** politico joined
[16:51] *** sqirrel_ left
[16:51] *** politico left
[16:52] *** telex joined
[16:56] <TimToady> could be, actually

[16:56] <TimToady> since <{...}> is evaling regex code, maybe <!!{...}> is evaling by (false) analogy, which is should just call the closure

[16:56] <TimToady> *when

[16:57] <TimToady> *it

[16:57] *** Guest73746 left
[16:57] <TimToady> what's wrong with my brane, that I think "when it" and type "which is"?

[16:57] *** virtualsue left
[16:58] <TimToady> maybe I'm evaling something when I should call a closure...

[16:58] <PerlJam> I tried a simple test in nqp and couldn't get it to execute twice.

[16:59] *** domidumont left
[16:59] <TimToady> yes, well, it wouldn't really explain the double warning either, I suppose

[16:59] <TimToady> we need something that parses twice

[17:00] <flussence> .oO( this slowness in the p6 syntax highlighting is forcing me to become better at vim... )

[17:00] <TimToady> maybe I should, like, actually look at the code, or someth'n

[17:00] <TimToady> nah...

[17:01] <PerlJam> TimToady: src/Perl6/Grammar.nqp  line 2908  :)

[17:04] <PerlJam> https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Grammar.nqp#L2908  (if that lowers the barrier to looking)

[17:19] <TimToady> well, not really, since I've been doing recursive searches since long before 'ack' was written :P

[17:19] <TimToady> I just wish I could train my fingers to 'make m-install' instead of 'make install'

[17:20] <TimToady> or get it to use multiple cores without me sayin' -j3 or so

[17:20] <TimToady> though it did give me a chance to backlog a bit more...

[17:22] *** zakharyas joined
[17:24] <btyler> flussence: heh, same here :) my usual "scroll scroll scroll-->word jump" habits don't work so well

[17:24] <TimToady> it's calling into the integer rule twice for some reason

[17:24] <TimToady> it's not internal to the integer rule

[17:25] * TimToady hopes if we find this bug the compiler will run twice as fast :D

[17:25] * TimToady actually thinks we'd see a lot more duplication if that were so...

[17:30] <PerlJam> maybe dec_number or rad_number somehow eventually calls integer (but again, I don't see it)  rad_number calls radint which calls integer, but only after it's parsed a '<' in rad_number

[17:32] <TimToady> here's your clue

[17:32] <TimToady> m: 01i

[17:32] <camelia> rakudo-moar 86db16: OUTPUT«Potential difficulties:␤    Leading 0 does not indicate octal in Perl 6; please use 0o1 if you mean that␤    at /tmp/V3a1ub9NSD:1␤    ------> 01⏏i␤»

[17:32] <TimToady> it's complex backtracking

[17:32] *** fhelmberger joined
[17:33] <TimToady> 01 doesn't find the i, so tries again with <integer>

[17:34] <TimToady> obviously complex is not including the i in the LTM, though that seems to be the intent

[17:34] <TimToady> so <complex> and <integer> are tied, <complex> runs first and fails

[17:34] <PerlJam> ah

[17:35] <PerlJam> does the '\\'? in complex stop the LTM?

[17:35] <TimToady> it's possible std and/or niecza deal with this sort of thing simply by de-duping the warnings

[17:36] <TimToady> or the re-collection after the [] in <integer>

[17:36] <TimToady> we tend to give up on LTM at that point because the possibilities explode

[17:37] *** fhelmberger left
[17:37] <TimToady> well, on this one, it's possible that we should simply not even look for the i anymore, and rely on constant folding instead

[17:38] <TimToady> it's really kinda bogus to hardwire a postfix there, since someone could add a prefix tighter than i

[17:38] <TimToady> that's why we have <1i> instead as a literal syntax

[17:39] <TimToady> I wonder what happens if we simply delete the rule...

[17:43] <TimToady> yup, deleting number:complex fixes the double warning; spectesting

[17:44] *** kurahaupo joined
[17:49] <TimToady> to answer you question, I don't think a ? term will stop LTM, but I think the end of [a|b|c] will, since [a|b|c] [d|e|f] ... [x|y|z] has 3 ** N possibilities, where N is the number of alternations

[17:49] *** kurahaupo left
[17:51] <TimToady> though a regular language might handle that okay, I suppose

[17:51] <TimToady> so maybe it's not an issue these days

[17:51] <TimToady> anyway, neither of those was the issue here

[17:52] <PerlJam> TimToady++

[17:52] <TimToady> so no double speedups on parsing programs, alas, unless your program was all non-complex numbers

[17:54] <PerlJam> But you halved the number of warnings from S32-temporal/calendar.t

[17:54] <PerlJam> :)

[17:55] <PerlJam> or ... will halve

[17:58] *** kurahaupo joined
[17:59] *** isBEKaml joined
[18:01] *** raiph left
[18:02] <[Coke]> will halve halved

[18:02] <[Coke]> if I was going to do it, we could say

[18:02] <[Coke]> will will halve halved!

[18:03] <PerlJam> heh

[18:04] <PerlJam> [Coke]: btw, I was on a flight to New Orleans on Sat. and I sat behind a guy who strongly reminded me of you.  Same height/build and same 'hair cut'  :)

[18:06] <PerlJam> (of course I may be goind a little crazy as I saw someone at the grocery store who at first from slightly behind at 3/4 view looked like lizmat to me)

[18:06] <PerlJam> s/goind/going/

[18:06] * lizmat can confirm she was not there

[18:06] <[Coke]> WE ARE ALL AROUND YOU

[18:06] *** guru joined
[18:06] <colomon> AND WE ARE FOLLOWING YOU

[18:06] <dalek> rakudo/nom: 362f3fd | TimToady++ | src/Perl6/Grammar.nqp:

[18:06] <dalek> rakudo/nom: remove bogus literal complex rule

[18:06] <dalek> rakudo/nom: 

[18:06] <dalek> rakudo/nom: We should not have a special literal rule for 42i, for several reasons:

[18:06] <dalek> rakudo/nom: First, it's incorrect in the face of language extensibility, since

[18:06] <dalek> rakudo/nom: someone could add a different affix that overrides i in either

[18:06] <dalek> rakudo/nom: precedence or semantics.  Second, the rule was incorrect anyway, since

[18:06] <dalek> rakudo/nom: it didn't check for a word boundary after the i.  Third, we can and

[18:06] <dalek> rakudo/nom: should rely on constant folding these days to reduce 42i to a literal

[18:07] <dalek> rakudo/nom: value when it's appropriate (and refrain from doing so when it's not).

[18:07] <dalek> rakudo/nom: Fourth, a literal complex ought to be written with angles anyway,

[18:07] <dalek> rakudo/nom: if you don't want the constant folder to get involved.  That's why

[18:07] <dalek> rakudo/nom: that construct is there.  Fifth, this fixes the double warning on

[18:07] <dalek> rakudo/nom: (non)-octals beginning with 0, since the complex rule was calling the

[18:07] <dalek> rakudo/nom: integer rule and then backtracking in the absence of an i.

[18:07] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/362f3fddbb

[18:07] *** guru is now known as ajr_

[18:07] <PerlJam> maybe everyone has a doppelgänger in Texas?

[18:07] <PerlJam> (except for the people that already live here, we have doppelgängers elsewhere)

[18:08] <lizmat> ah, but only in ASCII  :-)

[18:10] <TimToady> hah, if I change my name in the local repository to my nick, it comes through here :)

[18:11] <TimToady> so I'm no longer my own double, except maybe in Texas

[18:12] <TimToady> m: say 42ior43

[18:12] <camelia> rakudo-moar 86db16: OUTPUT«===SORRY!=== Error while compiling /tmp/XryjrdWrLL␤Confused␤at /tmp/XryjrdWrLL:1␤------> say 42i⏏or43␤    expecting any of:␤        whitespace␤»

[18:13] <colomon> lizmat: right, in Texas they're doppelga:ngers

[18:13] <TimToady> okay, I guess <ws> catches it

[18:14] *** Su-Shee left
[18:15] *** Su-Shee joined
[18:15] <[Coke]> PerlJam: uh, my doppelgänger in texas was me.

[18:17] <TimToady> you can say that again

[18:17] <FROGGS> jnthn: that is what I have about labels in nqp-j: https://gist.github.com/FROGGS/5f4dd9417cecc972a5ad

[18:18] <PerlJam> [Coke]: You were sitting in front of me on a flight from Dallas to  New Orleans?

[18:18] <[Coke]> maaaaaybe.

[18:19] *** timo joined
[18:20] <[Coke]> I'm not willing to rule it out, especially after having just listened to: http://pseudopod.org/2013/09/06/pseudopod-350-the-bungalow-house/

[18:20] *** timo is now known as Guest70110

[18:20] <FROGGS> jnthn: I do a $ATHROW when the handler got an exception for another label, but it just seems to explode rather then to look for another (outer) handler

[18:26] <FROGGS> hmmmm, perhaps I should put my stuff in another unwind_check...

[18:27] *** thou left
[18:27] *** Guest70110 is now known as timotimo

[18:28] *** itz2 joined
[18:28] *** isBEKaml left
[18:30] <jnthn> FROGGS: Is it a vm exception? May need a higher level Ops.rethrow then?

[18:30] <FROGGS> jnthn: no, it is a unwindexception that carries a vmex in the result

[18:31] <FROGGS> the explosion also states: Exception in thread "main" org.perl6.nqp.runtime.UnwindException

[18:31] <FROGGS> but I am refactoring the label stuff into unwind_check now... I think that will be cleaner

[18:32] <masak> today's mini-challenge: from bash, what's the golfiest way to chop the first line off a given text file?

[18:32] <masak> you can use anything you want: perl6, Perl 5, awk, sed, tail...

[18:32] <jnthn> FROGGS: But wait...an unwindexception has a particular target, iirc?

[18:33] <geekosaur> sed 1d

[18:33] <FROGGS> jnthn: yes... do I need to update that? O.o

[18:34] <jnthn> FROGGS: So if you rethrow it...the target won't match

[18:34] <FROGGS> hmmmm

[18:34] <jnthn> FROGGS: Well no, I just think you want to grab the vmexception out of it

[18:34] <jnthn> FROGGS: And them do a high-level rethrow

[18:34] <FROGGS> okay

[18:35] <FROGGS> and this the origin was a higher level op also, I might get an unwind exception back later

[18:35] <FROGGS> s/this/since/

[18:35] <FROGGS> s/op/ex/

[18:35] <FROGGS> gorram!

[18:37] <[Coke]> masak: https://github.com/coke/perl6-roast-data/blob/master/bin/doit#L1 does it

[18:38] <[Coke]> I like sed 1d, though. :)

[18:40] *** lvfjf joined
[18:41] <masak> [Coke]: `sed 1d` is a really good start. it doesn't write back to the file, tho'.

[18:43] <masak> Perl 6 question: have variables `my ($class, $message) = "C", "hi";`, how do I generate (through the MOP) `class C { method message { "hi" } }` ?

[18:45] <timotimo> if nobody gives you a satisfactory answer quickly enough, have a look at my ADT module

[18:45] <timotimo> :)

[18:46] <PerlJam> masak: just use a macro!  ;)

[18:46] <timotimo> :(

[18:46] <[Coke]> masak: sed -i\  1d <filename>

[18:47] <masak> PerlJam: :P

[18:47] <masak> [Coke]++

[18:48] <jnthn> m: my ($class, $message) = 'C', 'hi'; my $c = Metamodel::ClassHOW.new_type(:name($class)); $c.HOW.add_method($c, 'message', anon method message() { $message }); $c.HOW.compose($c); $c.message

[18:48] <camelia> rakudo-moar 362f3f: OUTPUT«(signal )»

[18:48] <jnthn> uh..

[18:48] <[Coke]> jnthn: nice!

[18:48] <jnthn> That worked first time locally.

[18:48] *** molaf joined
[18:49] <jnthn> m: say 'alive?'

[18:49] <camelia> rakudo-moar 362f3f: OUTPUT«alive?␤»

[18:49] <jnthn> hmm

[18:49] <jnthn> r: my ($class, $message) = 'C', 'hi'; my $c = Metamodel::ClassHOW.new_type(:name($class)); $c.HOW.add_method($c, 'message', anon method message() { $message }); $c.HOW.compose($c); $c.message

[18:50] <camelia> rakudo-jvm 362f3f: OUTPUT«(timeout)»

[18:50] <camelia> ..rakudo-parrot 362f3f: OUTPUT«Nominal type check failed for parameter '$expected'; expected Any but got Mu instead␤  in block  at /tmp/tmpfile:1␤␤»

[18:50] <camelia> ..rakudo-moar 362f3f: OUTPUT«(signal )»

[18:50] * jnthn wonders why on earth that works locally, but not here...

[18:52] <masak> why 'anon method'?

[18:52] <masak> oh, I see why.

[18:52] <masak> it acts as a kind of quoting mechanism.

[18:52] <jnthn> yeah

[18:52] <jnthn> uh...it explodes if I put it in a file. what.

[18:53] <masak> "Bus error" here.

[18:53] <moritz> "Cannot invoke this object (REPR: Null, cs = 0)" (with not qutie the same code

[18:54] <masak> did I just, um, uncover some kind of bug? or something?

[18:54] <masak> :)

[18:54] <masak> I'm kind of new at this.

[18:54] <masak> oh wait.

[18:54] <masak> mine said "hi" and then "Bus error".

[18:54] <masak> that's good, right?

[18:55] * masak hopes "Bus error" has nothing to do with "Bus number"

[18:55] <moritz> m: https://gist.github.com/moritz/1f58e20a98d7b0f5219d

[18:55] <camelia> rakudo-moar 362f3f: OUTPUT«gist not found»

[18:56] <moritz> not the message I was hoping for :(

[18:56] *** SamuraiJack_ left
[18:57] <timotimo> aye, it doesn't like private gists unfortunately

[18:57] <moritz> can I pulicify a gist?

[18:57] <timotimo> oof

[18:57] <timotimo> dunno

[18:58] <moritz> m: my ($classname, $message) = ('C', 'hi'); my $class := 1.HOW.new_type(:name($classname)); $class.^add_method('message', anon method message() { $message });

[18:58] <camelia> rakudo-moar 362f3f: OUTPUT«Cannot invoke this object (REPR: Null, cs = 0)␤  in block  at /tmp/pqCI2HXXZR:1␤␤»

[18:59] <FROGGS> m: my ($classname, $message) = ('C', 'hi'); my $class := 1.HOW.new_type(:name($classname)); $class.HOW.add_method('message', anon method message() { $message });

[18:59] <camelia> rakudo-moar 362f3f: OUTPUT«Not enough positional parameters passed; got 3 but expected 4␤  in any add_method at src/gen/m-Metamodel.nqp:404␤  in block  at /tmp/jz3At_r9q0:1␤␤»

[19:00] <timotimo> i think you need to pass in the class with add_method, too

[19:00] <FROGGS> m: my ($classname, $message) = ('C', 'hi'); my $class := 1.HOW.new_type(:name($classname)); $class.HOW.add_method($class, 'message', anon method message() { $message });

[19:00] <camelia> rakudo-moar 362f3f: ( no output )

[19:00] <timotimo> if you use .HOW

[19:00] <FROGGS> the .^ seems borken

[19:00] <timotimo> hm, maybe because it's not composed yet?

[19:06] <moritz> ah right, .^ just dispatches to a method in Mu in rakudo

[19:06] <moritz> I wonder if that's kosher

[19:06] *** dwarring joined
[19:06] <moritz> now it works for me

[19:11] <masak> moritz: you can't publicify a gist, but anyone you share the URL with can see it.

[19:11] <masak> oh! apparently not camelia...

[19:14] <moritz> maybe she needs glasses

[19:14] <moritz> (or classes? :-)

[19:19] *** SamuraiJack_ joined
[19:21] *** itz2 left
[19:32] *** anaeem1 joined
[19:34] *** darutoko left
[19:35] *** molaf left
[19:38] *** grep0r left
[19:40] *** SamuraiJack_ left
[19:46] *** grep0r joined
[19:50] <masak> 'night, #perl6

[19:50] <colomon> \o

[19:53] <retupmoca> colomon: is there a public link to your ecosystem smoke tests?

[19:59] *** domidumont joined
[20:03] *** Vlavv left
[20:10] *** domidumont left
[20:13] *** igorsutton joined
[20:14] *** lvfjf left
[20:15] *** rindolf left
[20:16] *** Vlavv joined
[20:18] *** kaare_ left
[20:20] *** anaeem1 left
[20:21] *** anaeem1 joined
[20:22] *** Rotwang left
[20:22] *** anaeem1 left
[20:22] *** anaeem1__ joined
[20:27] *** rurban left
[20:28] *** domidumont joined
[20:30] *** thou joined
[20:32] *** rurban joined
[20:35] *** rurban1 joined
[20:35] <thou> m: my $s = "abc/def/ghi.jkl".subst(rx/ ^ .* '/' (.*) '.jkl' ? /, {"GOT ($0)"}); $s.say;

[20:35] <camelia> rakudo-moar 362f3f: OUTPUT«GOT (ghi.jkl)␤»

[20:36] <thou> m: my $s = "abc/def/ghi.jkl".subst(rx/ ^ .* '/' (.*?) '.jkl' ? /, {"GOT ($0)"}); $s.say;

[20:36] <camelia> rakudo-moar 362f3f: OUTPUT«GOT ()ghi.jkl␤»

[20:37] *** rurban left
[20:43] *** igorsutton left
[20:44] *** zakharyas left
[20:44] *** grep0r left
[20:48] *** grep0r joined
[20:49] *** domidumont left
[20:50] *** BenGoldberg joined
[21:08] *** bluescreen100 left
[21:10] <thou> The REPL doesn't handle this case of subst with closure, but it seems to work fine in a script. Is this a known issue with the REPL (moar)?  http://pastie.org/9157118

[21:14] <geekosaur> that looks familiar-ish? recent report that the repl is not handling the second one properly

[21:25] <retupmoca> yes, .subst doesn't set $/ properly in the REPL

[21:27] <FROGGS> ohh, and I know why...

[21:28] <FROGGS> every line is in its own scope, due to EVAL

[21:28] <retupmoca> iirc, last time I looked at it nqp::getlexcaller couldn't find '$/'

[21:28] <FROGGS> and .subst looks a few caller frames to find the $/

[21:28] <FROGGS> and in case of an EVALd line, it is one caller too few/less

[21:30] <retupmoca> note that the very first REPL line you enter will set $/ properly

[21:32] *** rurban1 left
[21:33] *** fhelmberger joined
[21:34] *** berekuk joined
[21:34] <FROGGS> yeah

[21:34] *** hoverboard joined
[21:37] *** rurban joined
[21:38] *** fhelmberger left
[21:41] *** rurban left
[21:47] *** virtualsue joined
[21:51] *** anaeem1__ left
[21:51] <itz> the Czech Act Site list of talks seems to be broken

[21:51] <itz> (which I mention in the hope that someone here might know about it)

[21:52] *** nnunley joined
[21:53] <jnthn> Hmm...so it is

[21:54] <jnthn> Guess I could email the organizatorka I've been in contact with... :)

[21:56] <jnthn> itz: done

[21:57] <colomon> retupmoca: http://75.134.170.198:3001/report

[21:57] <itz> cool we may even find there was someone working on it currently :)

[21:58] <FROGGS> something happened in the last three days

[22:01] *** berekuk left
[22:01] *** berekuk joined
[22:05] *** anaeem1_ joined
[22:06] *** rurban joined
[22:06] <retupmoca> colomon: is that perl6-p ooc?

[22:10] *** anaeem1_ left
[22:12] <colomon> retupmoca: that's the parrot results, yes.

[22:17] *** aindilis left
[22:18] *** virtualsue left
[22:29] *** hoverboard is now known as moistcherry

[22:32] *** moistcherry is now known as hoverboard

[22:42] <thou> OK, another bug (I think), with subst and $/ in closure:  http://pastie.org/9157367

[22:42] <thou> If it's inside a for loop, it doesn't get $0 in the closure.

[22:42] <timotimo> aye, i think $/ in subst is b0rked :(

[22:43] <thou> s[foo (.*) bar] = "$0" doesn't work right either

[22:44] <thou> OK.

[22:53] *** xenoterracide__ left
[22:59] *** jnap left
[23:02] *** berekuk left
[23:08] *** berekuk joined
[23:09] *** sftp left
[23:09] *** sftp joined
[23:13] *** hoverboard left
[23:14] <thou> tadzik: I think panda's .work should be renamed to .panda-work or something to avoid accidentally removing a non-panda .work dir.

[23:14] *** rurban left
[23:15] <timotimo> +1

[23:18] *** berekuk left
[23:22] <thou> OK, my p6 module dependency clone tool works: http://pastie.org/9157490

[23:22] <thou> Not sure if it'd be useful for anyone else....

[23:23] <timotimo> ah, good, you're not doing it with a big grammar any more to parse panda's output :)

[23:23] <thou> no, i knew that was stupid, just was having fun practicing w/ grammars

[23:24] <timotimo> ah, good :)

[23:25] <thou> OK, good night, #perl6.

[23:30] *** thou left
[23:31] *** timotimo left
[23:31] *** timo joined
[23:32] *** timo is now known as Guest45876

[23:32] *** Guest45876 left
[23:32] *** timo1 joined
[23:32] *** timo1 is now known as timotimo

[23:34] *** rurban joined
[23:34] *** ajr_ left
[23:34] *** timotimo left
[23:35] *** timo1 joined
[23:35] *** timo1 is now known as timotimo

[23:36] <flussence> aagh... that's the first time I've had to kill -9 _vim_...

[23:37] <timotimo> perl6 syntax highlighting again? ;)

[23:38] <flussence> mispasted a few lines of ascii table in without doing a :syn off first :(

[23:39] <timotimo> ouch :)

[23:40] <flussence> (at this point I'm starting to wonder if a perl6-based vim clone would run faster...)

[23:40] <timotimo> lolnope

[23:41] <timotimo> jnthn says profiles say we spend too much time in the multi-dispatch cache, so the newest spesh features are working towards doing spesh-time MD :)

[23:41] <timotimo> though i don't think that'll make parsing much faster

[23:41] <timotimo> it would be pretty cool if perl6 regexes/rules were blazing fast

[23:43] <flussence> they feel like they're within an order of magnitude of vim's now, at least (and p6's are readable :)

[23:44] <timotimo> hah

[23:47] *** treehug88 left
[23:47] *** Vlavv left
[23:48] *** treehug88 joined
[23:48] *** treehug88 left
[23:58] *** xragnar_ joined
[23:58] *** xragnar left
[23:58] *** xragnar_ is now known as xragnar

