[00:00] *** jnap left
[00:02] *** airdisa left
[00:06] *** berekuk left
[00:24] *** btyler left
[00:36] <lue> Why is there a perl6-debug-p.exe in my /usr/local? (It's an ELF, just named funny)

[00:37] <jnthn> No idea...sounds like an accident in the Makefile-Parrot.in additions I did today.

[00:37] *** hoverboard joined
[00:38] <jnthn> ah yeah

[00:38] <jnthn> darn :)

[00:38] <lue> no worries, I just mv'd it :)

[00:39] <dalek> rakudo/nom: 1bd1ca3 | jnthn++ | tools/build/Makefile-Parrot.in:

[00:39] <dalek> rakudo/nom: Use $(EXE) macro, not hard-coded .exe.

[00:39] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1bd1ca30d3

[00:39] <jnthn> Didn't try it, but pretty sure it's right :)

[00:39] <jnthn> lue++

[00:40] <lue> jnthn: I much prefer having a lead developer who accidentally does windows-isms on occasion, than having no lead developer provide Windows support :)

[00:44] <lue> jnthn: so you know, I still get a segfault on my pod 5-to-6 script in perl6-debug-m "This is perl6 version  built on MoarVM version 2014.01-224-g10580a0". debug-p and debug-j work fine though.

[00:47] <jnthn> lue: OK. If you can get a backtrace out of gdb or something, that'd may help.

[00:47] <jnthn> For now, though, I need to go and sleep :)

[00:47] <jnthn> 'night, #perl6

[00:48] <lue> jnthn: https://gist.github.com/lue/68248a2d8370f6506b7c :)

[00:48] <timotimo> lue: backtraces from moarvm are easy, just print dump_backtrace(tc)

[00:48] <lue> ♞ jnthn o/

[00:49] <lue> timotimo: in gdb? That just causes moar segfaults :P

[00:49] <lue> and I can't use a literal "tc"

[00:49] <timotimo> ... huh?

[00:50] <timotimo> well, you've got to be in a frame where "tc" is available

[00:50] *** dayangkun left
[00:50] *** dayangkun joined
[00:51] <lue> print tc  fails in every frame. Do I need to turn on some sort of debug flag in MVM compilation?

[00:52] *** xenoterracide left
[00:53] <timotimo> yeah, print tc isn't right 

[00:53] <timotimo> --debug=3 is the best you can do in configure.pl

[00:54] <lue> can I recompile just Moar, or would --debug=3 require recompiling nqp and rakudo too?

[00:57] *** btyler joined
[00:58] *** hoverboard left
[01:00] <dalek> rakudo/pod-code-allow: c940e3f | Mouq++ | src/Perl6/ (2 files):

[01:00] <dalek> rakudo/pod-code-allow: Make sure =code and =for code take newlines and spaces

[01:00] <dalek> rakudo/pod-code-allow: review: https://github.com/rakudo/rakudo/commit/c940e3f1c9

[01:00] <Mouq> That took **way** to long to get right

[01:01] <Mouq> BUT

[01:01] <Mouq> I'd say this is about merge-ready

[01:02] *** skids joined
[01:03] <lue> Mouq: what does "Make sure =code and =for code take newlines and spaces" do?

[01:04] <Mouq> The newlines and spaces were being thrown away by the actions

[01:04] <Mouq> Because the default mode for the parser is to put consecutive lines together

[01:04] <Mouq> That's the main thing I've been fighting against in this branch

[01:05] <lue> oh, I see. I was thinking blank lines for some reason

[01:05] *** thou left
[01:06] <Mouq> lue: In hindsight I probably should have done a more descriptive message, but I finally made certain it worked right and went YES! COMMIT, PUSH, DONE, BABY

[01:07] <lue> :)

[01:07] <dalek> Heuristic branch merge: pushed 20 commits to rakudo/pod-code-allow by Mouq

[01:08] *** slavik left
[01:10] *** denis_boyun left
[01:11] *** xinming left
[01:12] * Mouq spectests and gets dinner

[01:12] *** xinming joined
[01:22] <BenGoldberg> Could anyone tell me what this error means:

[01:22] <BenGoldberg> r: my $x = 0; say sort { $x ^= @_.elems ?? Less !! More }, 1 .. 10

[01:22] <camelia> rakudo-jvm 1d2c43: OUTPUT«This representation can not unbox to a native int␤  in method sort at gen/jvm/CORE.setting:7905␤  in sub sort at gen/jvm/CORE.setting:1854␤  in sub sort at gen/jvm/CORE.setting:1851␤  in block  at /tmp/tmpfile:1␤␤»

[01:22] <camelia> ..rakudo-moar 1d2c43: OUTPUT«cannot numify this␤  in any  at src/vm/moar/Perl6/Ops.nqp:340␤  in any  at src/vm/moar/Perl6/Ops.nqp:327␤  in any p6sort at src/vm/moar/Perl6/Ops.nqp:324␤  in method sort at src/gen/m-CORE.setting:7905␤  in sub sort at src/gen/m-CORE.setting:1854…»

[01:22] <camelia> ..rakudo-parrot 1d2c43: OUTPUT«This type cannot unbox to a native integer␤  in any  at gen/parrot/BOOTSTRAP.nqp:95␤  in method sort at gen/parrot/CORE.setting:7925␤  in sub sort at gen/parrot/CORE.setting:1858␤  in sub sort at gen/parrot/CORE.setting:1855␤  in block  at /tmp…»

[01:23] <BenGoldberg> n: my $x = 0; say sort { $x ^= @_.elems ?? Less !! More }, 1 .. 10

[01:23] <camelia> niecza v24-109-g48a8de3: OUTPUT«(timeout)»

[01:26] *** colomon left
[01:27] <Mouq> BenGoldberg: I think it means Rakudobug :)

[01:28] *** bigboy_sonoma joined
[01:29] <Mouq> r: my $x = 0; say sort { $x ^= +@_ ?? Less !! More }, 1 .. 10

[01:29] <camelia> rakudo-jvm 1d2c43: OUTPUT«This representation can not unbox to a native int␤  in method sort at gen/jvm/CORE.setting:7905␤  in sub sort at gen/jvm/CORE.setting:1854␤  in sub sort at gen/jvm/CORE.setting:1851␤  in block  at /tmp/tmpfile:1␤␤»

[01:29] <camelia> ..rakudo-moar 1d2c43: OUTPUT«cannot numify this␤  in any  at src/vm/moar/Perl6/Ops.nqp:340␤  in any  at src/vm/moar/Perl6/Ops.nqp:327␤  in any p6sort at src/vm/moar/Perl6/Ops.nqp:324␤  in method sort at src/gen/m-CORE.setting:7905␤  in sub sort at src/gen/m-CORE.setting:1854…»

[01:29] <camelia> ..rakudo-parrot 1d2c43: OUTPUT«This type cannot unbox to a native integer␤  in any  at gen/parrot/BOOTSTRAP.nqp:95␤  in method sort at gen/parrot/CORE.setting:7925␤  in sub sort at gen/parrot/CORE.setting:1858␤  in sub sort at gen/parrot/CORE.setting:1855␤  in block  at /tmp…»

[01:29] <Mouq> r: my $x = 0; say sort { $x ^= $_ ?? Less !! More }, 1 .. 10

[01:29] <camelia> rakudo-parrot 1d2c43, rakudo-jvm 1d2c43, rakudo-moar 1d2c43: OUTPUT«1 2 3 4 5 6 7 8 9 10␤»

[01:30] * Mouq isn't really sure what sort { $x ^= +@_ ?? Less !! More } is supposed to do

[01:30] <BenGoldberg> rn: my $x = 0; say sort { $x ^= 1 ?? Less !! More }, 1 .. 10

[01:30] <camelia> niecza v24-109-g48a8de3: OUTPUT«(timeout)»

[01:30] <camelia> ..rakudo-parrot 1d2c43, rakudo-jvm 1d2c43, rakudo-moar 1d2c43: OUTPUT«1 2 3 4 5 6 7 8 9 10␤»

[01:31] *** bigboy_sonoma left
[01:32] <BenGoldberg> I expect @_ (used as an integer) to produce the same value (2) each time.  Which would cause $x to change back and forth between 0 and 2.

[01:32] <Mouq> Alas, a spectest vail in S26 :( to be expected

[01:32] *** rifkin left
[01:33] *** hoverboard joined
[01:33] <BenGoldberg> Aha, parens needed:

[01:33] <BenGoldberg> rn: my $x = 0; say sort { ($x ^= 1) ?? Less !! More }, 1 .. 10

[01:33] <TimToady> what is the point of a one() junction there?

[01:33] <camelia> niecza v24-109-g48a8de3: OUTPUT«Stack overflow: IP: 0x503212, fault addr: (nil)␤Stacktrace:␤  at Niecza.Kernel.UnboxAny<T> (Niecza.P6any) <0x0002b>␤  <...>␤  at Niecza.CtxJunctionBool.Get (Niecza.Variable) <0x00117>␤  at Niecza.CtxJunctionBool.Get (Niecza.Variable) <0x0025…»

[01:33] <camelia> ..rakudo-parrot 1bd1ca, rakudo-jvm 1bd1ca, rakudo-moar 1bd1ca: OUTPUT«1 3 5 7 9 2 4 6 8 10␤»

[01:34] <pmichaud> I was wondering that also.  -)

[01:34] <pmichaud> why do my smileys all seem to start missing characters lately?  (/me checks keyboard and fingers)

[01:34] <BenGoldberg> Basically, I wanted to write a particular type of japh, but dicovered a bug, instead.

[01:35] <BenGoldberg> niecza should not have a stack overflow just because someone passes an unstable comparator to sort.

[01:35] <Mouq> r: my $x = 0; say sort { ($x ^= +@_) ?? Less !! More }, 1 .. 10

[01:35] <camelia> rakudo-jvm 1bd1ca: OUTPUT«2 4 7 9 6 5 8 10 3 1␤»

[01:35] <camelia> ..rakudo-moar 1bd1ca: OUTPUT«5 9 4 10 8 1 6 3 7 2␤»

[01:35] <camelia> ..rakudo-parrot 1bd1ca: OUTPUT«8 7 9 10 1 6 5 3 2 4␤»

[01:36] <Mouq> Uh. hm

[01:36] <Mouq> r: my $x = 0; say sort { ($x ^= +@_) ?? Less !! More }, 1 .. 10

[01:36] <camelia> rakudo-jvm 1bd1ca: OUTPUT«2 4 7 9 6 5 8 10 3 1␤»

[01:36] <camelia> ..rakudo-moar 1bd1ca: OUTPUT«5 9 4 10 8 1 6 3 7 2␤»

[01:36] <camelia> ..rakudo-parrot 1bd1ca: OUTPUT«8 7 9 10 1 6 5 3 2 4␤»

[01:36] <TimToady> r: my $x = 0; $x ^= 2; say $x.perl

[01:36] <camelia> rakudo-parrot 1bd1ca, rakudo-jvm 1bd1ca, rakudo-moar 1bd1ca: OUTPUT«one(0, 2)␤»

[01:36] <Mouq> I guess each is allowed to use its own sort algorith

[01:36] <Mouq> m

[01:36] <TimToady> r: my $x = 0; $x ^= 2; $x ^= 2; say $x.perl

[01:36] <camelia> rakudo-parrot 1bd1ca, rakudo-jvm 1bd1ca, rakudo-moar 1bd1ca: OUTPUT«one(one(0, 2), 2)␤»

[01:37] <TimToady> would be much for efficient to use +^=

[01:38] <TimToady> s/for/more/

[01:38] <BenGoldberg> r: say 1 +^ 3

[01:38] <camelia> rakudo-parrot 1bd1ca, rakudo-jvm 1bd1ca, rakudo-moar 1bd1ca: OUTPUT«2␤»

[01:38] <BenGoldberg> rn: my $x = 0; say sort { ($x +^= 1) ?? Less !! More }, 1 .. 10

[01:38] <camelia> rakudo-parrot 1bd1ca, rakudo-jvm 1bd1ca, rakudo-moar 1bd1ca: OUTPUT«1 3 5 7 9 2 4 6 8 10␤»

[01:38] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«1 2 3 4 5 6 7 8 9 10␤»

[01:39] <BenGoldberg> rn: say sort { ((state $) +^= 1) ?? Less !! More }, 1 .. 10

[01:39] <camelia> rakudo-parrot 1bd1ca, rakudo-jvm 1bd1ca, rakudo-moar 1bd1ca: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Unsupported use of $) variable; in Perl 6 please use $*EGID␤at /tmp/tmpfile:1␤------> [32msay sort { ((state $)[33m⏏[31m +^= 1) ?? Less !!…»

[01:39] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«Use of uninitialized value in numeric context␤  at /home/p6eval/niecza/lib/CORE.setting line 1389 (warn @ 5) ␤  at /home/p6eval/niecza/lib/CORE.setting line 301 (Any.Numeric @ 8) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /tmp/tmpfile line…»

[01:39] *** colomon joined
[01:39] <pmichaud> not to mention that   one(one(one(one(0,2), 2), 2), 2)   ends up being false

[01:39] <pmichaud> oh, maybe not.

[01:39] <pmichaud> hrm.

[01:39] <TimToady> well, if you're trying to get it to alternate, that's good

[01:39] <BenGoldberg> rn: say sort { ((state $x = 0) +^= 1) ?? Less !! More }, 1 .. 10

[01:39] <camelia> niecza v24-109-g48a8de3: OUTPUT«Potential difficulties:␤  $x is declared but not used at /tmp/tmpfile line 1:␤------> [32msay sort { ((state [33m⏏[31m$x = 0) +^= 1) ?? Less !! More }, 1 .. 1[0m␤␤1 2 3 4 5 6 7 8 9 10␤»

[01:39] <camelia> ..rakudo-parrot 1bd1ca, rakudo-jvm 1bd1ca, rakudo-moar 1bd1ca: OUTPUT«1 3 5 7 9 2 4 6 8 10␤»

[01:40] <pmichaud> r: say ?one(one(one(0,2), 2), 2)

[01:40] <camelia> rakudo-parrot 1bd1ca, rakudo-jvm 1bd1ca, rakudo-moar 1bd1ca: OUTPUT«True␤»

[01:40] <pmichaud> okay

[01:40] <pmichaud> yes, alternating, but also ickily inefficient

[01:42] <dalek> rakudo/pod-code-allow: ef5d59c | Mouq++ | src/Perl6/Actions.nqp:

[01:42] <dalek> rakudo/pod-code-allow: Missed paragraph_raw -> paragraph_comment

[01:42] <dalek> rakudo/pod-code-allow: review: https://github.com/rakudo/rakudo/commit/ef5d59c3dc

[01:43] <BenGoldberg> I've always thought that using | and & for superpositions, and +| and +& for bitwise operators, wasn't the best decision...  I'm more likely to want bitwise operators than superpositions in my code

[01:43] <TimToady> yer weird

[01:43] <Mouq> lol

[01:43] * BenGoldberg likes being weird, thank you very much :)

[01:44] <Mouq> weird++

[01:45] <pmichaud> I think that     if ($x == 2 | 3 | 7 | 11) { ... }    # a bit more likely

[01:45] <BenGoldberg> Anyone coming to perl6 from... lots and lots of languages (perl, /^c.*/i, /java(?script)/, ...), is going to expect |, &, and ^, to do bitwise operations.

[01:45] <pmichaud> ...and they'll be wrong.  :)

[01:46] * BenGoldberg wondered what happened to the principle of least surprise.

[01:46] <Mouq> BenGoldberg: I personally like the fact that +|, +&, etc. are clearly numerical

[01:46] <Mouq> BenGoldberg: And I find this consistency to be the least surprising way to do it, once the rule is learned

[01:47] <BenGoldberg> r: say "a" ~| "b"

[01:47] <camelia> rakudo-parrot 1bd1ca, rakudo-jvm 1bd1ca, rakudo-moar 1bd1ca: OUTPUT«c␤»

[01:47] <pmichaud> we still have principle of least surprise... but sometimes it's important to not do things "the way they've always been done" if that's clearly counterproductive.  Besides, we're not aiming only at existing programmers, we're also aiming at people-who-don't-yet-program

[01:47] <TimToady> It's impossible to surprise everyone leastly.

[01:48] <pmichaud> TimToady: somehow that doesn't surprise me.  :)

[01:48] <dalek> rakudo/nom: 0bc8fb7 | Mouq++ | src/Perl6/Grammar.nqp:

[01:48] <dalek> rakudo/nom: Separate =code etc. from =comment in grammar

[01:48] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0bc8fb7844

[01:48] <dalek> rakudo/nom: 39308e5 | Mouq++ | src/Perl6/ (3 files):

[01:48] <dalek> rakudo/nom: Mostly working Pod code block refactor

[01:48] *** dalek left
[01:48] <Mouq> sorry dalek :(

[01:49] *** dalek joined
[01:49] *** ChanServ sets mode: +v dalek

[01:50] *** treehug88 left
[01:57] <BenGoldberg> r: print 'JSuosrtt  ahnaoctkheerr, '.comb.sort( { ((state $ = 0) +^= 1) ?? Less !! More } )

[01:57] <camelia> rakudo-parrot 1bd1ca, rakudo-jvm 1bd1ca, rakudo-moar 1bd1ca: OUTPUT«Just another Sort hacker,»

[01:57] <BenGoldberg> :)

[01:58] <Mouq> \o/ cool!

[02:00] <dalek> specs: 3d80107 | Mouq++ | S26-documentation.pod:

[02:00] <dalek> specs: Fix ASCII graph formatting

[02:00] <dalek> specs: 

[02:00] <dalek> specs: The Pod parser correctly removed the begining indentation from the

[02:00] <dalek> specs: outputted graph. Adding '=code' makes it explicit that we don't want

[02:00] <dalek> specs: this to happen

[02:00] <dalek> specs: review: https://github.com/perl6/specs/commit/3d80107ddb

[02:01] * Mouq wonders if 'outputted' is grammatikal

[02:01] <BenGoldberg> Generated?

[02:01] <Mouq> BenGoldberg: Probably would have been a wiser choise

[02:01] <Mouq> -_-

[02:01] <Mouq> choice

[02:04] <BenGoldberg> rn: for ( 1 ) { print (state $ = True) ^= False }

[02:04] <BenGoldberg> Nieczabug?

[02:04] <camelia> niecza v24-109-g48a8de3: OUTPUT«(timeout)»

[02:04] <camelia> ..rakudo-parrot 1bd1ca, rakudo-jvm 1bd1ca, rakudo-moar 1bd1ca: OUTPUT«one(Bool::True, Bool::False)»

[02:06] *** benabik joined
[02:07] *** slavik joined
[02:16] *** kurahaupo_mobile left
[02:21] *** Sqirrel left
[02:21] *** Sqirrel joined
[02:25] <Mouq> I promised someone I would look in to something...

[02:27] <Mouq> Oh, tables! good thing I'm already doing that

[02:28] <Mouq> http://irclog.perlgeek.de/perl6/2014-02-19#i_8311340 The problem is that tables are complicated :P

[02:43] <dalek> rakudo/nom: 33c19c7 | Mouq++ | docs/ChangeLog:

[02:43] <dalek> rakudo/nom: :allow is now merged, add this back to ChangeLog

[02:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/33c19c7c8b

[02:52] *** daxim left
[03:06] *** daxim joined
[03:09] *** rurban joined
[03:10] <lue> Mouq: is that =code required to fix the graph, or just to preserve indentation? 'Cos requiring explicit code block to de-break the graph still feels Wrong™ to me.

[03:12] *** rurban left
[03:13] *** rurban joined
[03:14] * lue could easily see someone putting a method declaration in an implicit code block, interjecting with para-like paragraphs, and expecting it to Just Work.

[03:16] *** PZt left
[03:16] *** rurban1 joined
[03:18] *** rurban left
[03:23] <lue> Mouq: tables _are_ complicated :) Emacs' org-mode has a separate minor mode devoted to table stuff, for instance

[03:25] <Mouq> lue: Sorry, was AFK

[03:27] <lue> Mouq: no worries

[03:27] <Mouq> lue: When you indent in a normal pod section, it begins a code block. The problem was that the first line sets the indentation level

[03:28] <lue> Yeah, I figured that a long time ago. Funny thing is, lesser indent levels seem to change that supposed indent level.

[03:28] <lue> (As evidenced by the text graph's boxes making subsequent indentation sane again)

[03:29] <lue> It'd be nice if indentation worked more on "least-indented line" than on "first indented line", but I imagine that's very difficult to do.

[03:29] *** kst` joined
[03:29] <lue> (And S26 doesn't mention anything specific about how implicit code blocks are to be indented)

[03:30] <Mouq> lue: That's because each time its indented wrong, that line gets re-parsed as a new block of code

[03:30] <Mouq> *not re-parsed

[03:30] <Mouq> but

[03:30] *** kst left
[03:30] <Mouq> it enters the same rule again

[03:31] <lue> yeah, that would make sense

[03:31] *** PZt joined
[03:32] * lue fears the better method of "least-indented line" gets into multi-pass parsing territory :(

[03:33] <Mouq> "A code block may be implicitly specified as one or more lines of text, each of which starts with a whitespace character at the block's virtual left margin. The implicit code block is then terminated by a blank line."

[03:33] <Mouq> "An indented Pod block is considered to have a virtual left margin, determined by the indentation of its opening delimiter."

[03:34] <Mouq> lue: So it is spec. Whether the spec should be changed is, as always, up for debate :)

[03:35] <Mouq> lue: And the thing with tables is that they actually are essentially parsed twice

[03:35] <lue> Mouq: that doesn't actually say anything; it only talks about the block containing the implicit code block, and implicit blocks don't have opening delimiters.

[03:35] <Mouq> Hm

[03:36] <Mouq> I took "virtual left margin" to be specifying a very specific thing

[03:36] <lue> There's the possibility of doing it like heredocs, only instead of an ending string, we go until a blank line, and instead of going off the ender's indent, we go off the least-indented line.

[03:38] <Mouq> lue: Oh? I thought heredocs used the same rule

[03:38] <Mouq> Huh

[03:38] <lue> Mouq: heredoc indentation is based off the ending delimiter's indent. So if a q:to/EOF/'s EOF is indented with four space, the "virtual left margin" (so to speak) of the heredoc is 4 spaces in.

[03:39] <Mouq> Ohh, that's right

[03:41] <Mouq> lue: Well.. I'm not convinced it needs changing, but if you do, the code to change is at src/Perl6/Grammar.nqp:L562

[03:42] <lue> Yeah, I kinda had a feeling I should be the one to fix it :D

[03:42] <Mouq> *and maybe src/Perl6/Actions.nqp:L675 too depending on how it gets done

[03:43] <lue> To be fair, the spec doesn't actually specify how to handle implicit code blocks, so any way is equally right atm. I'd like more input on how it should work first :)

[03:44] <Mouq> lue: You do have the advantage that TheDamian apparently thought the graph should be displayed right as it was, though I still think it was formatting bug

[03:46] <TimToady> code blocks are a bit different from heredocs, insofar as most modern languages will have a minimum indentation at the start of a block, but you can't really predict what will be in a heredoc

[03:46] <lue> Cool, didn't know that :) Still would like to make sure from others (esp. TimToady) ... oh hey look!

[03:47] <lue> TimToady: Was curious if you think implicit code blocks should not break indentation like that, or if you think someone with that problem should switch to explicit by that point.

[03:47] <TimToady> and, to be frank, we optimized code blocks more for Perl code than for Fortran :)

[03:48] <TimToady> one could always throw in a no-break space at the start to force it

[03:49] <TimToady> assuming we don't count that as part of the indent

[03:49] <Mouq> Z<>?

[03:49] <lue> Mouq: that'd require an :allow, which requires an explicit block :) [i think]

[03:49] <TimToady> you'd have to allow it, and it'd throw off the indent

[03:49] <Mouq> lue: Yeah

[03:49] <Mouq> TimToady: Yeah

[03:49] <Mouq> Yeah.

[03:50] <TimToady> :)

[03:50] <lue> TimToady: my idea for a workaround (were I writing a pod doc) involves a lone period on the first non-blank column, one line before the actual code

[03:50] * Mouq goes back to trying to comprehend $<pod_string> and how it could be re-parsed for tables…

[03:51] <lue> By the way, I only brought up heredocs as the "most similar" thing to code blocks, at least in terms of how I'd prefer they be handled :)

[03:51] <Mouq> Oh, wait, just don't build it... build its contents by hand....

[03:52] <lue> TimToady: "You can also give the option a value of zero, ... For example, to specify a block of code that should appear without its usual nesting:" <-- does this mean all code blocks have an implicit nesting of :nested(«int where * > 0») ?

[03:53] * TimToady hasn't read the spec there in a while

[03:54] * TimToady shouldn't do design while he has pneumonia, either

[03:55] <lue> :(

[03:55] *** Sqirrel left
[03:57] *** Sqirrel joined
[03:57] <Mouq> This Pod stuff really needs to be done in Perl 6, not NQP…

[04:04] <Mouq> Does the perl6 that does syn/ get updated?

[04:10] <lue> Perl5 is doing syn/, I have something designed to eventually replace it though

[04:10] <lue> https://github.com/lue/synopsis-generator

[04:10] *** molaf left
[04:10] <Mouq> lue: I mean whatever perl6 generates S26 :)

[04:10] <lue> The Pod6 synopses currently have to be hand-generated

[04:11] <Mouq> Oh? Ok

[04:11] <Mouq> Thank you

[04:11] <lue> No-one's generated S15 yet, for instance.

[04:11] * lue &

[04:15] *** xenoterracide joined
[04:26] <Mouq> nqp: say('' ~~ str)

[04:26] <camelia> nqp-moarvm: OUTPUT«Cannot find method 'ACCEPTS': no method cache and no .^find_method␤   at /tmp/tmpfile:1  (<ephemeral file>::25)␤ from gen/moar/stage2/NQPHLL.nqp:1090  (/home/p6eval/rakudo-inst-1/languages/nqp/lib/NQPHLL.moarvm::94)␤ from gen/moar/stage2/NQPHLL.nqp:1076  (/h…»

[04:26] <camelia> ..nqp-parrot: OUTPUT«No method cache and no find_method method in meta-object␤current instr.: '' pc 48 ((file unknown):69150712) (/tmp/tmpfile:1)␤»

[04:26] <camelia> ..nqp-jvm: OUTPUT«java.lang.NullPointerException␤  in  (/tmp/tmpfile:1)␤  in  (gen/jvm/stage2/NQPHLL.nqp:1099)␤  in eval (gen/jvm/stage2/NQPHLL.nqp:1085)␤  in evalfiles (gen/jvm/stage2/NQPHLL.nqp:1291)␤  in command_eval (gen/jvm/stage2/NQPHLL.nqp:1195)␤  in command_line (g…»

[04:26] <Mouq> nqp: say(''.WHAT)

[04:26] <camelia> nqp-parrot: OUTPUT«Can only use get_what on a SixModelObject␤current instr.: '' pc 43 ((file unknown):51005000) (/tmp/tmpfile:1)␤»

[04:26] <camelia> ..nqp-moarvm, nqp-jvm: OUTPUT«␤»

[04:27] <Mouq> nqp: say(nqp::isstr('')) #ah-hah

[04:27] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«1␤»

[04:27] <Mouq> nqp: say(nqp::isstr(nqp::join('',[])))

[04:27] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«1␤»

[04:38] <dalek> roast: 2ff24c0 | Mouq++ | S26-documentation/09-configuration.t:

[04:38] <dalek> roast: Add slightly better :begin code :allow test

[04:38] <dalek> roast: review: https://github.com/perl6/roast/commit/2ff24c018b

[04:52] *** kurahaupo_mobile joined
[04:57] *** skids left
[05:02] *** PZt left
[05:04] *** btyler left
[05:12] <Mouq> nqp: say(nqp::isstr(['']))

[05:12] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«0␤»

[05:15] *** xenoterracide left
[05:20] *** thou joined
[05:22] <Mouq> nqp: my @a = ['a','b','c']; given @a[1] -> $foo { $foo := 'q' }; for @a { say($_) }

[05:22] <camelia> nqp-jvm: OUTPUT«Assignment ("=") not supported in NQP, use ":=" instead at line 2, near " ['a','b',"␤  in panic (gen/jvm/stage2/NQPHLL.nqp:378)␤  in infix:sym<=> (gen/jvm/stage2/NQP.nqp)␤  in !protoregex (gen/jvm/stage2/QRegex.nqp:784)␤  in infix (gen/jvm/stage2/NQPHLL.nqp)…»

[05:22] <camelia> ..nqp-parrot: OUTPUT«Assignment ("=") not supported in NQP, use ":=" instead at line 2, near " ['a','b',"␤current instr.: 'panic' pc 15934 (gen/parrot/stage2/NQPHLL.pir:5941) (gen/parrot/stage2/NQPHLL.nqp:425)␤»

[05:22] <camelia> ..nqp-moarvm: OUTPUT«Assignment ("=") not supported in NQP, use ":=" instead at line 2, near " ['a','b',"␤   at gen/moar/stage2/NQPHLL.nqp:369  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/NQPHLL.moarvm:panic:120)␤ from <unknown>:1  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/n…»

[05:22] <Mouq> nqp: my @a := ['a','b','c']; given @a[1] -> $foo { $foo := 'q' }; for @a { say($_) }

[05:22] *** [Sno] left
[05:22] <camelia> nqp-parrot: OUTPUT«Confused at line 2, near "given @a[1"␤current instr.: 'panic' pc 15934 (gen/parrot/stage2/NQPHLL.pir:5941) (gen/parrot/stage2/NQPHLL.nqp:425)␤»

[05:22] <camelia> ..nqp-jvm: OUTPUT«Confused at line 2, near "given @a[1"␤  in panic (gen/jvm/stage2/NQPHLL.nqp:378)␤  in comp_unit (gen/jvm/stage2/NQP.nqp:922)␤  in TOP (gen/jvm/stage2/NQP.nqp:820)␤  in parse (gen/jvm/stage2/QRegex.nqp:1290)␤  in parse (gen/jvm/stage2/NQPHLL.nqp:1377)␤  in…»

[05:22] <camelia> ..nqp-moarvm: OUTPUT«Confused at line 2, near "given @a[1"␤   at gen/moar/stage2/NQPHLL.nqp:369  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/NQPHLL.moarvm:panic:120)␤ from gen/moar/stage2/NQP.nqp:917  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/nqp.moarvm:comp_unit:346)␤ fro…»

[05:23] <Mouq> I take it NQP doesn't have given

[05:23] <Mouq> nqp: my @a := ['a','b','c']; my $foo := @a[1]; $foo := 'q'; for @a { say($_) }

[05:23] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«a␤b␤c␤»

[05:26] <PerlJam> Mouq: nqp does have multi method dispatch, which can be like "given" if you squint :)

[05:29] *** pdcawley left
[05:32] <Mouq> PerlJam: Heh, I'm just not sure of how I'm limited in NQP

[05:32] *** pdcawley joined
[05:33] <Mouq> nqp: call-reg(/abcd/); sub call-reg($r) { say('hijkabcdefg' ~~ $r) } # for example?

[05:33] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«abcd␤»

[05:33] <Mouq> Yay!

[05:35] *** kaleem joined
[05:39] *** eternaleye left
[05:40] *** SamuraiJack joined
[05:50] *** eternaleye joined
[05:52] *** xenoterracide joined
[05:53] *** eternaleye left
[05:54] *** eternaleye joined
[05:55] *** darutoko joined
[05:57] *** zby_home_ joined
[05:57] *** cibs joined
[05:57] *** inahandizha joined
[05:57] *** rjbs left
[05:58] *** rjbs joined
[05:58] <inahandizha> http://VisitsToMoney.com/index.php?refId=386970

[05:58] *** inahandizha left
[05:58] <Mouq> nice to meet you too, inahandizha

[06:04] *** kaleem left
[06:15] <lue> r: say "A" ~~ /\d?/; say $/.so; say $/.defined;

[06:15] <camelia> rakudo-parrot 33c19c, rakudo-jvm 33c19c, rakudo-moar 33c19c: OUTPUT«｢｣␤␤True␤True␤»

[06:15] <lue> I understand why this is, but it feels *so* wrong.

[06:16] <PerlJam> * has the same "problem"

[06:16] *** JimmyZ left
[06:16] <TimToady> particularly when scanning for something that starts x*

[06:17] <TimToady> and there's an x later in the string

[06:17] *** Mouq left
[06:17] <TimToady> but leftmost beats longest

[06:17] *** JimmyZ joined
[06:18] <lue> Is there a reason why we can't treat an empty match like an empty string, that is its truthiness is false?

[06:18] <PerlJam> But the match succeeded!

[06:18] <pmichaud> you can always do   ?~$/  or (~$/).so

[06:19] <TimToady> so you think a match of 0 should also be false? :)

[06:19] <pmichaud> r: say "A" ~~ /\d?/;  say ?~$/;

[06:19] <camelia> rakudo-parrot 33c19c, rakudo-jvm 33c19c, rakudo-moar 33c19c: OUTPUT«｢｣␤␤False␤»

[06:19] <pmichaud> or something like that.

[06:19] <TimToady> why put the ? if you don't mean it?

[06:19] <lue> Yeah, I went with $/.Str.chars

[06:20] <lue> TimToady: POD's =over, and how the number to indent defaults to 4

[06:20] <pmichaud> r: "A" ~~ /\d/;  say $/.so;   

[06:20] <camelia> rakudo-parrot 33c19c, rakudo-jvm 33c19c, rakudo-moar 33c19c: OUTPUT«False␤»

[06:21] <PerlJam> lue: where does the truthity come into play?

[06:21] *** denis_boyun joined
[06:21] <lue> Originally I tried something akin to $<indent> // 4 , if that helps

[06:23] *** dmol joined
[06:24] <pmichaud> camelia: say Nil.defined;

[06:24] <pmichaud> er

[06:24] <pmichaud> wrong command

[06:25] * pmichaud reads latest S05 updates

[06:25] <lue> PerlJam: My POD converter for the moment blindly converts =over <number> to =begin pod :nested(<number>) , and =over defaults to a <number> of 4. So when I write in the Pod6 replacement, I need to test if I actually got that optional match.

[06:26] <pmichaud> new S05 says that the ?-quant produces Nil on a failed match

[06:26] <pmichaud> and that can be tested using //

[06:27] <pmichaud> r: "A" ~~ /(\d)?/;  say $[0].defined;

[06:27] <camelia> rakudo-parrot 33c19c, rakudo-jvm 33c19c, rakudo-moar 33c19c: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Unsupported use of $[ variable; in Perl 6 please use user-defined array indices␤at /tmp/tmpfile:1␤------> [32m"A" ~~ /(\d)?/;  say [33m⏏[3…»

[06:27] <pmichaud> r: "A" ~~ /(\d)?/;  say $0.defined;

[06:27] <camelia> rakudo-parrot 33c19c, rakudo-jvm 33c19c, rakudo-moar 33c19c: OUTPUT«False␤»

[06:27] <pmichaud> r: "A" ~~ /(\d)?/;  say $0 // 4;

[06:27] <camelia> rakudo-parrot 33c19c, rakudo-jvm 33c19c, rakudo-moar 33c19c: OUTPUT«4␤»

[06:28] <pmichaud> seems correct to me.

[06:29] <lue> r: "A" ~~ /$<indent>=[\d+]?/;  say $<indent> // 4;

[06:29] <camelia> rakudo-parrot 33c19c, rakudo-jvm 33c19c, rakudo-moar 33c19c: OUTPUT«｢｣␤␤»

[06:29] <lue> r: "A" ~~ /$<indent>=[\d+]?/;  say $<indent>[0] // 4; # o.o?

[06:29] <pmichaud> r: "A" ~~ /$<indent>=(\d+)?/;  say $<indent> // 4;

[06:29] <camelia> rakudo-parrot 33c19c, rakudo-jvm 33c19c, rakudo-moar 33c19c: OUTPUT«4␤»

[06:31] <lue> I'd've thought () would require that [0], not [] ...

[06:31] <pmichaud> there's a subtle difference between using [...] and (...) for submatches

[06:31] *** dmol left
[06:32] <TimToady> I'd'a thought that the $<indent>= erases that distinction

[06:32] <pmichaud> in particular, [...] produces a substring match, which always succeeds

[06:33] <pmichaud>    / $<foo>=[abc]* / creates a single match object containing all of the abc's

[06:33] *** bjz left
[06:33] <pmichaud> the quantifier acts on the brackets before the aliasing... i.e., it's like   / $<foo>=([abc]*) /

[06:33] <moritz> \o

[06:34] <lue> o/

[06:34] <pmichaud> directly define in S05... :-)

[06:34] <pmichaud> *defined

[06:35] <lue> pmichaud: that feels a bit weird, but admittedly I haven't read S05 :)

[06:35] <pmichaud> From S05:  "Note, however, that a set of quantified non-capturing brackets always returns a single Match object which contains only the complete substring that was matched by the full set of repetitions of the brackets ..."

[06:37] <TimToady> right, I forgot we put that in

[06:37] <pmichaud> anyway,  / $<indent>=(\d+)? /   does exactly what you want here

[06:37] <pmichaud> it causes   $<indent> to be Nil (undefined) if no digits are found

[06:38] <pmichaud> there's no [0] required because ? doesn't produce an array of matches

[06:38] <lue> pmichaud: for some reason, I expect $<rule>=() to create a $<rule>[0] that I have to check, which is why I always go for =[]

[06:38] <pmichaud> it's an alias, so no.

[06:38] <pmichaud> () produces a subrule match, which would go into $0 if it weren't aliased

[06:39] <pmichaud> to get  $<rule>[0] you'd do    $<rule>=((...))

[06:40] <pmichaud> anyway,   brackets nearly always means  "give me the characters matched, no submatches"

[06:40] <pmichaud> parens means "createa  new match that can have submatches"

[06:41] <pmichaud> in particular,  with   / $<rule>=[ abc (def) ghi ] /   there won't be a $<rule>[0]

[06:41] <lue> pmichaud: OK, I think my problem is seeing $<rule>= as an inline regex rule { }, I'll try to remember it as a change in destination instead :)

[06:41] *** xenoterracide left
[06:41] <pmichaud> $<rule>=( )   would be the inline regex rule.

[06:48] *** hoverboard left
[06:48] <pmichaud> afk, sleep

[06:49] *** [Sno] joined
[06:51] <lue> My POD converter isn't perfect, but it hopefully gets rid of some of the tedium of conversion :) Everything from here involves cleverer stuff.

[06:53] *** rurban1 left
[07:00] *** rurban joined
[07:06] *** bjz joined
[07:09] *** zby_home_ left
[07:16] *** FROGGS joined
[07:20] *** kurahaupo_mobile left
[07:20] *** BenGoldberg left
[07:32] *** PZt joined
[07:37] *** _thou joined
[07:38] *** thou left
[07:38] *** dmol joined
[07:49] *** _thou left
[07:50] *** berekuk joined
[07:56] *** Mouq joined
[08:00] *** Mouq left
[08:06] *** Ven joined
[08:11] *** berekuk left
[08:22] *** pecastro left
[08:28] *** crab2313 joined
[08:28] *** virtualsue joined
[08:44] *** sqirrel_ joined
[08:45] *** crab2313 left
[08:45] *** crab2313 joined
[08:53] *** bjz left
[08:54] *** denis_boyun left
[08:56] *** aindilis left
[08:58] *** dmol left
[08:58] *** Ven left
[09:10] *** dalek left
[09:10] *** dalek joined
[09:10] *** ChanServ sets mode: +v dalek

[09:12] *** dmol joined
[09:14] *** aindilis joined
[09:16] <jnthn> morning o/

[09:27] <nwc10> \o

[09:28] *** dakkar joined
[09:36] *** kaleem joined
[09:38] *** rurban left
[09:38] <FROGGS> o(

[09:38] <FROGGS> o/

[09:38] <FROGGS> -.-

[09:38] <moritz> )o(

[09:40] *** fhelmberger joined
[09:44] *** Mouq joined
[09:44] <gfldex> moritz: thank you for making we whistle http://www.youtube.com/watch?v=wbWOVfY-rxU

[09:49] *** Mouq left
[09:52] <moritz> gfldex: 10 hours long? :-)

[09:52] <gfldex> all 10 hours of it

[09:52] <gfldex> actually, the shart version is banned in germany

[09:52] <gfldex> on youtube that is

[09:53] <gfldex> we are allowed to whistle the short version

[09:53] *** sqirrel_ left
[09:57] *** rindolf joined
[09:58] *** dakkar left
[09:59] *** pecastro joined
[10:01] *** dakkar joined
[10:18] *** salv0 joined
[10:28] *** woosley joined
[10:31] <timotimo> o/

[10:31] *** woosley left
[10:31] <timotimo> yawntimo is yawn

[10:31] *** zakharyas joined
[10:39] <timotimo> corecatcher: still not allowed to message you

[10:43] <timotimo> tell Mouq https://gist.github.com/timo/6132249

[10:44] <timotimo> how do i do that again?

[10:47] *** crab2313 left
[11:04] <timotimo> i think it's time to start with the release process

[11:09] <timotimo> did we decide against doing release names last time? :P

[11:09] <timotimo> well, if nobody has any decent idea, i'll just selfishly call it Karlsruhe.pm

[11:10] <FROGGS> +1

[11:14] *** zakharyas left
[11:21] <timotimo> so the wording for the for loops should be "statementlist level", not "statement-level", right?

[11:22] <jnthn> Probably, yes

[11:22] <timotimo> i'll change that in the changelog, too

[11:23] <jnthn> +1

[11:26] * timotimo builds cpanm

[11:26] <timotimo> or rather: sets up

[11:28] <timotimo> ... i don't have a cpanm binary any more o_O

[11:32] *** rindolf left
[11:32] *** Mouq joined
[11:33] <timotimo> tai2utc says This program should next be run in February.

[11:33] <timotimo> but it *is* february

[11:34] *** mtk left
[11:34] <tadzik> maybe it's not february enough

[11:34] <timotimo> mhh

[11:34] <timotimo> february is just not evenly distributed this year

[11:36] *** Mouq left
[11:37] *** mtk joined
[11:38] <dalek> rakudo/nom: 77ffb02 | (Timo Paulssen)++ | docs/ (2 files):

[11:38] <dalek> rakudo/nom: draft a release announcement

[11:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/77ffb026e4

[11:42] <timotimo> hm, how do i formulate that i've been annoying my local .pm group with perl6 at every meeting so far? :P

[11:44] *** rindolf joined
[11:45] <dalek> rakudo/nom: d10eb8a | (Timo Paulssen)++ | docs/announce/2014.02.md:

[11:45] <dalek> rakudo/nom: short explanation for the codename.

[11:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d10eb8a1c1

[11:46] <timotimo> time to cut the nqp release

[11:48] <jnthn> timotimo: You have Geoffrey Broadwell and Geoff Broadwell in the "who contributed"

[11:48] <timotimo> thanks

[11:48] <jnthn> timotimo: Also maybe capitalize Rakudo and MoarVM

[11:48] <timotimo> done

[11:49] <jnthn> And maybe "to MoarVM backend"

[11:49] <jnthn> Since that's the bit specific to Rakudo :)

[11:50] <jnthn> For the debugger could be worth mentioning the consequence of the change (can be used on all backends)

[11:50] <timotimo> ah, right

[11:51] <dalek> rakudo/nom: 861d38e | (Timo Paulssen)++ | docs/announce/2014.02.md:

[11:51] <dalek> rakudo/nom: announcement fixes, jnthn++

[11:51] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/861d38eea9

[11:56] <timotimo> should the changelog of rakudo say that panda now works on moarvm? (the full changelog, that is)

[12:01] <dalek> nqp: c6a69a1 | (Timo Paulssen)++ | tools/build/ (2 files):

[12:01] <dalek> nqp: bump moar and parrot

[12:01] <dalek> nqp: review: https://github.com/perl6/nqp/commit/c6a69a1511

[12:01] <dalek> nqp: 82e2b76 | (Timo Paulssen)++ | VERSION:

[12:01] <dalek> nqp: bump the nqp version

[12:01] <dalek> nqp: review: https://github.com/perl6/nqp/commit/82e2b76b3e

[12:03] <timotimo> building an nqp with parrot and moar from a completely clean directory

[12:10] *** kaleem left
[12:11] *** aborazmeh joined
[12:11] *** kaleem joined
[12:16] *** salv0 left
[12:19] *** bjz joined
[12:21] <timotimo> nqp built and tested successfully on all three backends

[12:22] <timotimo> testing the tarball now

[12:26] *** aborazmeh left
[12:26] <timotimo> make -j4 install aborts a few times with some ... job pipe read error thingie from make

[12:26] <timotimo> make[1]: *** read jobs pipe: Invalid argument.  Stop.

[12:31] *** telex left
[12:32] *** telex joined
[12:44] <timotimo> http://t.h8.lv/nqp-2014.02.tar.gz   ←  if someone could be so kind

[12:46] <dalek> rakudo/nom: 974171e | (Timo Paulssen)++ | tools/build/NQP_REVISION:

[12:46] <dalek> rakudo/nom: [release] bump NQP revision

[12:46] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/974171e878

[12:46] <dalek> rakudo/nom: 2be58d0 | (Timo Paulssen)++ | VERSION:

[12:46] <dalek> rakudo/nom: [release] bump VERSION

[12:46] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2be58d0090

[12:46] <timotimo> building rakudo in a clean environment

[12:51] *** hoverboard joined
[12:57] *** dmol1 joined
[12:57] *** dmol left
[13:02] *** kbaker joined
[13:08] *** SamuraiJack left
[13:09] *** dmol1 left
[13:09] *** dmol joined
[13:14] <timotimo> the stresstest rule has gone from the makefile, may want to reintroduce it to depend on the *-stresstests

[13:14] *** salv0 joined
[13:17] *** zakharyas joined
[13:21] <timotimo> one potential problem is: how do i properly fudge the jvm spectests?

[13:21] <timotimo> i don't really think running every test file one by one manually would be a good idea >_>

[13:21] <moritz> why would you want to do that anyway?

[13:21] <moritz> you run a spectest with TEST_JOBS=1

[13:21] <moritz> then you get a list of failing tests

[13:22] <timotimo> i still get "no subtests run" from that

[13:22] <moritz> eeks

[13:22] <moritz> timotimo: want me to run them?

[13:23] <timotimo> r: my class Priv { method x { self!foo } }; Priv.x

[13:23] <timotimo> you could do that

[13:23] <camelia> rakudo-jvm 861d38: OUTPUT«(timeout)»

[13:23] <camelia> ..rakudo-parrot 861d38, rakudo-moar 861d38: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤No such private method 'foo' for invocant of type 'Priv'␤at /tmp/tmpfile:1␤------> [32mmy class Priv { method x { self![33m⏏[31mfoo } }; Priv.x[0m␤»

[13:23] <timotimo> the thing is if we're going to make a rakudo star release this month, the spectests ought to be fudged

[13:24] * moritz builds

[13:24] <timotimo> so that a potential "customer" can differentiate between "problem on my machine" and "problem with rakudo-jvm in general"

[13:24] <moritz> timotimo: is nativecall good enough for a JVM R*?

[13:24] <timotimo> i don't think this really should say '!foo', if it says "private method 'foo'"

[13:24] <timotimo> i think it ought to

[13:25] <moritz> and: who hammers the R* build system in place to support precompilation of modules for perl6-j?

[13:25] <timotimo> ah ...

[13:26] <timotimo> someone called "(unknown yet)"

[13:26] <timotimo> according to the star release guide

[13:26] *** dmol left
[13:26] <moritz> you can't expect that from somebody who just signed up als release manager

[13:26] *** dmol joined
[13:27] <timotimo> agreed.

[13:27] <timotimo> so no rakudo jvm star this month. that's fine then

[13:27] <timotimo> no need to make extra sure jvm spectests are clean - at least not for the moment

[13:28] <moritz> I'm not saying it can't (or won't) be done

[13:28] <moritz> just that an R*-j release isn't automatic

[13:29] <timotimo> that's right

[13:29] <timotimo> so should we take extra care about jvm's spectests?

[13:29] <masak> good afternoon, gentlebots.

[13:29] <timotimo> hello masak!

[13:29] <masak> ...and, um, humans too, I guess.

[13:29] <tadzik> hey ey

[13:30] *** benabik left
[13:30] <jnthn> timotimo: Take care of them in the event we manage the r-j release

[13:31] <jnthn> timotimo: Much of the work needed will involve changes in places we need to do them for r-m too...

[13:31] <timotimo> so the rakudo release i'm doing right now is basically a parrot-based release?

[13:32] <moritz> no

[13:32] <jnthn> timotimo: No, the compiler release supports all 3 

[13:32] <moritz> exactly

[13:32] <timotimo> so what's "the r-j release"? :)

[13:32] <moritz> R*-j

[13:32] <moritz> not R-j

[13:32] <jnthn> timotimo: As in, a Star that also works

[13:32] <jnthn> With JVM

[13:32] <timotimo> ah

[13:32] <timotimo> that makes more sense

[13:32] <jnthn> moritz++ # knows what I meant to say :)

[13:33] <moritz> currently, the R* release can build perl6-j, but not the modules precompiled as .jar

[13:33] <masak> oh, today is release day, right?

[13:33] <timotimo> we want to have nicer precompilation factoring in the future anyway

[13:33] <masak> exciting!

[13:34] <masak> oh, and lurkers -- my offer still stands: someone pick March, and I'll pick April.

[13:34] *** SamuraiJack joined
[13:34] <dalek> rakudo/nom: 00252db | (Timo Paulssen)++ | docs/release_guide.pod:

[13:34] <dalek> rakudo/nom: little fixes to release guide

[13:34] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/00252dbf19

[13:35] <timotimo> i has a tarball and i am going to test it

[13:35] * moritz 's j-spectest is in S05 now

[13:36] <timotimo> feel free to test it along with me: http://t.h8.lv/rakudo-2014.02.tar.gz

[13:36] <tadzik> masak: once in a lifetime deal! I'm in

[13:36] *** rurban joined
[13:36] <timotimo> release one, get one free!

[13:36] <timotimo> (you gotta release one to get one free)

[13:37] *** kbaker left
[13:39] <masak> tadzik: that's the spirit.

[13:39] * masak makes it so

[13:40] * moritz builds and tests the tarball too

[13:40] <dalek> rakudo/nom: f42ac95 | masak++ | docs/release_guide.pod:

[13:40] <dalek> rakudo/nom: [docs/release_guide.pod] we're signing up!

[13:40] <dalek> rakudo/nom: 

[13:40] <dalek> rakudo/nom: tadzik++ gets March, and I get April. nice.

[13:40] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f42ac95d13

[13:41] * timotimo updates the INSTALLING.txt to reflect current truths

[13:42] <nwc10> ah yes. "Bananas are marsupials! Cars run on gravy! Salmon live in trees and eat pencils! Reform in South Africa is on the way"

[13:42] <nwc10> from a Spitting Image sketch

[13:43] <nwc10> the previous line being IIRC "my fellow South Africans, the time has come for me to tell you the truth"

[13:43] *** ajr joined
[13:44] *** ajr is now known as Guest34595

[13:44] <masak> nwc10: this was in relation to... what, exactly? :)

[13:44] *** Guest34595 is now known as ajr_

[13:44] <moritz> to "current thruths", I'd guess

[13:44] <nwc10> yes, the lines being read by the puppet for PW Botha

[13:45] <timotimo> is one gig of ram still sufficient to do a full rakudo + parrot + nqp build?

[13:45] <nwc10> this dates it

[13:45] *** SamuraiJack left
[13:45] <moritz> timotimo: no

[13:45] <nwc10> timotimo: a better answer probably depends on 32 or 64 bit

[13:45] * masak .oO( the gig is up )

[13:46] <nwc10> however, let's have a test

[13:46] <moritz> timotimo: needed at least 1.5G or more last I tried (on 64bit)

[13:46] <masak> at *least* 1.5G *or more*? wow! :P

[13:46] *** kaare__ left
[13:46] <jnthn> :P

[13:46] <nwc10> I was going to test the answer for MoarVM on a 32 bit system

[13:46] <jnthn> Moar is sub-gig even on 64-bit last I checked :)

[13:47] <timotimo> is spectest_smolder still a thing?

[13:48] <moritz> maybe my information is outdated

[13:48] *** SamuraiJack joined
[13:48] <moritz> oh, and it depends on your total memory

[13:48] <moritz> like, if you have 4GB, and set a ulimit of 1.5GB virtual memory, it won't be enough

[13:48] <moritz> because parrot uses the total available memory to tune its GC, or something

[13:49] <timotimo> ah!

[13:50] <timotimo> http://smolder.parrot.org/app/projects/smoke_reports/5 <- seems to be down

[13:50] <timotimo> should i just remove the section about the smolder from INSTALLING.txt?

[13:51] *** [Sno]_ joined
[13:51] *** d4l3k_ joined
[13:51] * timotimo puts in a reference to perl6-roast-data instead

[13:52] *** sorear_ joined
[13:52] *** takesako__ joined
[13:52] *** JimmyZ_ joined
[13:53] *** TimToady_ joined
[13:53] *** rjbs- joined
[13:53] *** pecastro_ joined
[13:53] *** obra_ joined
[13:56] <nwc10> OK, I just hit swap building MoarVM with 2 jobs on a 512M machine

[13:57] <d4l3k_> rakudo/nom: c062718 | (Timo Paulssen)++ | / (2 files):

[13:57] <d4l3k_> rakudo/nom: bring README and INSTALL.txt up to date

[13:57] <d4l3k_> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c062718076

[13:57] <timotimo> please review: ^

[13:58] <moritz> timotimo: http://perlpunks.de/paste/show/530609eb.278a.236 my j-spectest output from git (not your tarball), revision Plano-134-g2be58d0

[13:59] <timotimo> well, the TODO passed's i could probably "fix" :)

[13:59] *** mtj_- joined
[13:59] <timotimo> doesn't look terribly bad, to be honest.

[13:59] *** pecastro left
[13:59] *** dalek left
[13:59] *** PZt left
[13:59] *** [Sno] left
[13:59] *** JimmyZ left
[13:59] *** rjbs left
[13:59] *** felher left
[13:59] *** brother left
[13:59] *** zakalwe left
[13:59] *** __sri left
[13:59] *** takesako_ left
[13:59] *** sorear left
[13:59] *** TimToady left
[13:59] *** obra left
[13:59] *** mtj_ left
[13:59] *** [Sno]_ is now known as [Sno]

[14:00] *** d4l3k_ is now known as dalek

[14:01] <timotimo> oh, the smolder is still up

[14:01] <timotimo> the last run was on 09/27/13

[14:01] <timotimo> so ... that's 2009, right?

[14:01] <timotimo> or is it 2013?

[14:01] <timotimo> or is it 1927?

[14:01] <timotimo> fuck dates! >:(

[14:02] <timotimo> well, it gives internal server errors when clicking on the details button

[14:02] <nwc10> well, silly ambiguous mixed endian dates.

[14:02] <timotimo> so i'll just claim it doesn't exist any more

[14:02] <timotimo> or rather: not claim it exists

[14:02] <nwc10> it's obviously the 9th day of the 27th month of mumble13

[14:04] *** rurban left
[14:04] *** pdcawley left
[14:06] *** felher joined
[14:06] <moritz> timotimo: why not fudge the failures?

[14:06] *** pdcawley joined
[14:08] *** zakharyas left
[14:09] *** brother joined
[14:09] *** __sri joined
[14:09] *** zamolxes joined
[14:10] *** xenoterracide joined
[14:11] *** notjack joined
[14:11] <timotimo> the perl6-roast-data repository may want to get a How to Help -> rakudo.moarvm section written by someone ... :)

[14:11] <timotimo> huh

[14:11] <timotimo> i get TTIAR in t/spec/S02-types/baghash.rakudo.parrot

[14:11] <timotimo> and mixhash.t and sethash.t

[14:11] <timotimo> seems like there ought to be a : after that sort call

[14:11] <timotimo> er ...

[14:12] <moritz> timotimo: what revision are you on?

[14:12] <moritz> in t/spec/ that is

[14:13] <dalek> roast: 0905696 | (Timo Paulssen)++ | S02-types/ (3 files):

[14:13] <dalek> roast: fix *hash sorting stuff.

[14:13] <dalek> roast: review: https://github.com/perl6/roast/commit/0905696a35

[14:13] <dalek> roast: 8f634c4 | (Timo Paulssen)++ | S32-exceptions/misc.t:

[14:13] <dalek> roast: the private method doesn't need to have ! in its name.

[14:13] <dalek> roast: review: https://github.com/perl6/roast/commit/8f634c4cd7

[14:14] <jnthn> nwc10: Building *MoarVM* itself?! Or Rakudo on...

[14:14] *** immortal joined
[14:14] *** immortal left
[14:14] *** immortal joined
[14:15] <nwc10> MoarVM

[14:15] <nwc10> done nqp now without swap

[14:15] <jnthn> Whoa

[14:15] <timotimo> please verify that this is correct: ^

[14:15] <timotimo> ... wait for it ...

[14:15] <nwc10> actually, wasn't at HEAD, so pulled to HEAD

[14:15] <timotimo> i made a commit to spec, seems like dalek doesn't care

[14:15] <timotimo> not spect

[14:15] <timotimo> roast.

[14:16] <nwc10> turned swap off and on to get the 28k of swap used down to 0

[14:16] <nwc10> and now chugging away

[14:16] <nwc10> this is an 8 year old laptop with 512K of RAM

[14:16] <jnthn> I hope you mean MB? :)

[14:16] <nwc10> er yes

[14:17] <nwc10> last I tried, I could just get blead to build on 16Mb of RAM and 96Mb of swap

[14:17] <timotimo> "blead"?

[14:17] <FROGGS> Perl 5 HEAD

[14:17] <timotimo> ah

[14:17] *** erkan left
[14:17] <nwc10> Perl 5 is to blead as Rakudo is to nom

[14:20] *** brother left
[14:20] *** __sri left
[14:20] *** zamolxes left
[14:20] <timotimo> 8f634c4cd787a3135726b6b57cc97fa5d71bd2dc - this is my roast commit now, just as dalek showed

[14:20] <timotimo> also, why was i the only one for which these tests failed?

[14:24] <nwc10> the setting hits swap

[14:25] <jnthn> Nice that it takes until the setting to do so, though :)

[14:25] <nwc10> Peak was

[14:25] <nwc10>  r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa

[14:25] <nwc10>  0  3 130524   5532    124  27552 2130 3421  2262  3422  280  357  1  2  0 97

[14:26] <nwc10> so 512M RAM plus just over 128M of swap

[14:26] <nwc10> (this thing does have an X login session up, but I'm ssh-ing in to it)

[14:26] *** colomon_ joined
[14:27] <nwc10> so I think it's fair to say we need about 640M to build Rakudo for MoarVM on a 32 bit system

[14:27] *** colomon left
[14:27] *** colomon_ is now known as colomon

[14:27] *** fhelmberger left
[14:29] *** treehug88 joined
[14:29] *** sftp_ joined
[14:29] *** kbaker joined
[14:30] *** sorear joined
[14:30] *** dmol1 joined
[14:30] *** ajr__ joined
[14:30] *** erkan joined
[14:30] *** Ulti joined
[14:30] *** erkan left
[14:30] *** erkan joined
[14:31] <Ulti> hmm has this channel grown in size recently?

[14:31] *** dagurval joined
[14:31] *** integral_ joined
[14:31] <jnthn> YES AND IN VOLUME

[14:32] *** Colby` joined
[14:32] * jnthn hasn't been watching the numbers, but I know backlogging when I disappear fro a while feels like it's getting harder... :)

[14:32] *** tadzik1 joined
[14:32] <masak> 194 nicks.

[14:33] <masak> we've been fluctuating slightly below 200 nicks for years.

[14:33] <masak> to the point where I'm wondering if there's a hard limit around 200 for some reason.

[14:33] *** Shozan joined
[14:33] <masak> that said, there can certainly be more active users recently.

[14:33] *** brother joined
[14:33] *** __sri joined
[14:33] *** zamolxes joined
[14:33] <Ulti> jnthn: yeah I vanished for a while to stop procrastinating from finishing my thesis and it feels a lot bigger around here only after a month

[14:34] <Ulti> masak: orly

[14:34] *** rurban joined
[14:34] <Ulti> maybe its just I haven't gone and come back to see the numbers

[14:35] <masak> ya rly.

[14:35] *** clkao_ joined
[14:35] <masak> it was ~200 way back in the Pugs era.

[14:38] *** rylinaux left
[14:38] *** ilbot3 left
[14:38] *** dagurval_ left
[14:38] *** sorear_ left
[14:38] *** dmol left
[14:38] *** integral left
[14:38] *** sftp left
[14:38] *** ajr_ left
[14:38] *** immortal left
[14:38] *** SHODAN left
[14:38] *** tadzik left
[14:38] *** camelia left
[14:38] *** Pleiades` left
[14:38] *** clkao left
[14:38] *** Colby` is now known as Pleiades`

[14:39] *** ilbot3 joined
[14:39] *** camelia joined
[14:39] *** skids joined
[14:40] *** ChanServ sets mode: +v camelia

[14:43] *** rylinaux joined
[14:43] *** rylinaux left
[14:44] *** rylinaux joined
[14:44] *** Shozan is now known as SHODAN

[14:45] *** btyler joined
[14:48] <dalek> rakudo-star-daily: 8246b14 | coke++ | log/ (5 files):

[14:48] <dalek> rakudo-star-daily: today (automated commit)

[14:48] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/8246b145ae

[14:50] *** treehug88 left
[14:51] *** fhelmberger joined
[14:52] *** fhelmberger left
[14:52] <hoelzro> good *, #perl6

[14:53] *** colomon left
[14:57] *** _thou joined
[14:58] *** johnmilton joined
[14:59] *** hoverboard left
[15:00] *** fhelmberger joined
[15:01] *** fhelmberger left
[15:04] *** mavcunha joined
[15:04] *** fhelmberger joined
[15:07] *** dmol1 left
[15:09] *** colomon joined
[15:09] <colomon> o/

[15:13] <[Coke]> +1 to making the spectests run clean. We haven't had a single backend with a clean roast in some time.

[15:14] <[Coke]> ideally, each impl. should only be dirty one day before getting a clean run (or at least new failures) the next day

[15:15] *** mavcunha left
[15:18] *** treehug88 joined
[15:22] *** fhelmberger left
[15:24] *** PZt joined
[15:24] *** fhelmberger joined
[15:25] *** tadzik1 is now known as tadzik

[15:25] <[Coke]> hoelzro: if you are not able to close p6 tickets in RT, ping me.

[15:27] <hoelzro> [Coke]: trying it now

[15:28] <hoelzro> is there a way to filter RT tickets by reporter?

[15:29] <FROGGS> there is a custom query thingy

[15:29] <FROGGS> I think you have to "edit" the current search query

[15:29] <hoelzro> I found that, but it wasn't clear on how to filter by reporter to me

[15:30] <FROGGS> https://rt.perl.org/Search/Results.html?Format=%27%20%20%20%3Cb%3E%3Ca%20href%3D%22%2Frt3%2FTicket%2FDisplay.html%3Fid%3D__id__%22%3E__id__%3C%2Fa%3E%3C%2Fb%3E%2FTITLE%3A%23%27%2C%0A%27%3Cb%3E%3Ca%20href%3D%22%2Frt3%2FTicket%2FDisplay.html%3Fid%3D__id__%22%3E__Subject__%3C%2Fa%3E%3C%2Fb%3E%2FTITLE%3ASubject%27%2C%0A%27__Status__%27%2C%0A%27__QueueName__%27%2C%0A%27__OwnerName__%27%2C%0A%27__Priority__%27%2C%0A%27__NEWLINE__%27%2C%0A%27%27%2C%

[15:30] <FROGGS> 0A%27%3Csmall%3E__Requestors__%3C%2Fsmall%3E%27%2C%0A%27%3Csmall%3E__CreatedRelative__%3C%2Fsmall%3E%27%2C%0A%27%3Csmall%3E__ToldRelative__%3C%2Fsmall%3E%27%2C%0A%27%3Csmall%3E__LastUpdatedRelative__%3C%2Fsmall%3E%27%2C%0A%27%3Csmall%3E__TimeLeft__%3C%2Fsmall%3E%27&Order=DESC|ASC|ASC|ASC&OrderBy=id|||&Query=Queue%20%3D%20%27perl6%27%20AND%20%28%20%20Status%20%3D%20%27new%27%20OR%20Status%20%3D%20%27open%27%20OR%20Status%20%3D%20%27stalled%27%

[15:30] <FROGGS> 20%29%20AND%20Requestor.EmailAddress%20LIKE%20%27froggs%27&RowsPerPage=100&SavedChartSearchId=new&SavedSearchId=new

[15:30] <timotimo> … huh

[15:30] <FROGGS> ohh /o\

[15:30] <FROGGS> well, I searched for: client email contains "froggs"

[15:30] <moritz> enterprise URLs!

[15:30] <hoelzro> o_O

[15:31] <FROGGS> https://rt.perl.org/Search/Results.html?Format='   <b><a href[...] <--- I dunno why somebody does that

[15:31] <hoelzro> k, there we go

[15:31] <hoelzro> thanks FROGGS 

[15:31] <FROGGS> yw

[15:31] <timotimo> could someone verify that my changes to readme and install are okay, as well as the changes to roast?

[15:33] <hoelzro> ok, I can close tickets! \o/

[15:34] <FROGGS> timotimo: give me a few minutes

[15:34] *** hoverboard joined
[15:36] *** fhelmberger left
[15:37] *** PZt left
[15:38] <[Coke]> hoelzro++

[15:38] <[Coke]> FYI, rakudo is currently at 735 open tickets. Oldest ticket was opened 5 years ago.

[15:39] <[Coke]> s/open/new and open/

[15:41] *** fhelmberger joined
[15:42] *** fhelmberger left
[15:44] *** fhelmberger joined
[15:45] <[Coke]> Opened a ticket to add VM as a field to RT for perl6 tickets.

[15:48] <TimToady_> which VM did you classify that under? :P

[15:48] *** benabik joined
[15:49] <FROGGS> timotimo++ # README/INSTALL updates

[15:50] <nwc10> Is Rakudo now complete enough that Star on JVM is possible?

[15:50] *** molaf joined
[15:50] <moritz> nwc10: nobody really knows

[15:50] * hoelzro should run his moar-support script on perl6-j

[15:50] <hoelzro> I'll do that later today, maybe

[15:51] <hoelzro> maybe I should automate that

[15:51] <FROGGS> timotimo: and the roast changes seem to be sane too

[15:51] *** PZt joined
[15:52] <timotimo> i'm not 100% convinced on the sorting of the kv

[15:52] <timotimo> does it surely not flatten?

[15:52] <nwc10> hoelzro: even a manual run for the JVM would be excellent

[15:52] *** bjz_ joined
[15:52] *** bjz left
[15:52] <hoelzro> nwc10: I'll start it in a few minutes

[15:53] <hoelzro> my battery is low, and I don't want to provoke it =/

[15:53] *** fhelmberger left
[15:53] <nwc10> cool, thanks

[15:53] *** xfix left
[15:53] <nwc10> OK, parrot just hit swap during its tests

[15:53] <japhb> timotimo: I only scanned the README changes, but I did notice one oddness -- an apparently reversed git command at the end.

[15:53] <tadzik> NativeCall still fails tests for me on jvm

[15:54] <tadzik> https://gist.github.com/tadzik/9115094

[15:54] *** treehug88 left
[15:54] *** fhelmberger joined
[15:54] <timotimo> japhb: ah, should format-patch get origin/nom..HEAD?

[15:54] <timotimo> yeah, that does make more sense

[15:55] <japhb> yeah

[15:55] *** xfix joined
[15:55] <jnthn> Just origin/nom will do, no?

[15:55] <dalek> rakudo/nom: 6f8bd8b | (Timo Paulssen)++ | README:

[15:55] <dalek> rakudo/nom: format-patch fix, japhb++

[15:55] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6f8bd8b600

[15:55] <nwc10> I thought that arnsholt thought that it worked 100%. At least on his machine

[15:56] <tadzik> yeah, my bug looks linux-specific

[15:57] *** dmol joined
[15:59] <[Coke]> I'm happy to make peschwa a bugadmin so they can close their own tickets.

[15:59] * nwc10 tests on Linux

[16:00] <nwc10> a big Linux machine. Not the laptop

[16:08] *** kivutar joined
[16:08] *** fhelmberger left
[16:11] *** FROGGS left
[16:12] *** mavcunha joined
[16:16] *** treehug88 joined
[16:16] *** kivutar left
[16:16] <timotimo> http://t.h8.lv/rakudo-2014.02.tar.gz updated with a new tarball

[16:16] <timotimo> please2test

[16:22] *** mavcunha left
[16:28] *** [Sno] left
[16:28] <dalek> rakudo/nom: 9d0eb58 | (Timo Paulssen)++ | docs/release_guide.pod:

[16:28] <dalek> rakudo/nom: list this month's release at the bottom

[16:28] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9d0eb58826

[16:31] <timotimo> [Coke]++ pschwa++ # RT cleanup and tests and stuff

[16:33] <[Coke]> 731 tickets left - 31 of which are marked testneeded, and just need someone who can write (or cut and paste) perl6 code.

[16:33] <timotimo> corecatcher: ^

[16:33] *** molaf_ joined
[16:34] <timotimo> i think when my stresstest goes through, i'll tag the version and ask for someone to upload the tarball to rakudo.org

[16:36] *** molaf left
[16:42] <timotimo> Result: PASS

[16:42] *** fhelmberger joined
[16:43] <timotimo> tag'd

[16:43] <hoelzro> \o/

[16:43] <hoelzro> timotimo++

[16:44] <timotimo> http://t.h8.lv/rakudo-2014.02.tar.gz <- still the same tarball as half an hour ago. please upload it to rakudo.org, someone

[16:47] *** xenoterracide left
[16:49] <jnthn> concert &

[16:50] *** FROGGS joined
[16:51] <timotimo> tadzik? moritz?

[16:52] *** fhelmberger left
[16:52] *** hoverboard left
[16:53] *** kaleem left
[16:54] <timotimo> PerlJam: or you perhaps? :)

[16:54] <PerlJam> me what?

[16:54] * PerlJam reads

[16:55] <PerlJam> oh, sure. hold on.

[16:55] <timotimo> cool, thanks! :)

[16:55] <timotimo> 37a90cc0edae8035ef44de51146903edf2d6fc75  rakudo-2014.02.tar.gz  ← sha1sum to verify

[16:56] *** bluescreen10 joined
[16:58] <PerlJam> timotimo: done.

[16:58] <timotimo> excellent!

[16:58] <timotimo> i'll send the email

[16:59] *** hoverboard joined
[16:59] <hoelzro> I think the JVM * module tests will have to wait

[17:00] <hoelzro> they didn't finish in time, and I have to get going

[17:00] <hoelzro> I'll upload them later

[17:01] <timotimo> thank you, hoelzro 

[17:01] <hoelzro> happy to help =)

[17:03] <TimToady_> http://rosettacode.org/wiki/Maximum_triangle_path_sum#Perl_6

[17:03] * TimToady_ wishes [Z+]= worked

[17:03] <hoelzro> why is PSGI in rakudo-star/modules twice?

[17:04] *** TimToady_ is now known as TimToady

[17:05] <timotimo> hm. does last.rotate allow to go from one end of the triangle to the other in "one step"?

[17:05] <TimToady> the Z throws away the extra value

[17:05] <timotimo> ah!

[17:05] <timotimo> helpful!

[17:05] <TimToady> the Z+, actually

[17:06] *** eternaleye left
[17:07] *** fhelmberger joined
[17:09] <[Coke]> Hey, anyone who has an open grant (hague or otherwise), please consider writing up a status report.

[17:09] <masak> noted.

[17:10] <timotimo> what if i have a rant?

[17:10] <[Coke]> Please consider writing up a blog post

[17:10] <timotimo> :P

[17:11] *** mavcunha joined
[17:11] *** mavcunha left
[17:12] <masak> [Coke]: short version: aside from $work being overwhelming lately and me wanting to finish up p6cc2012, the macros grant is first in line. my next step, before digging into the D3 milestone of it, is to triage all the now-open RT tickets having to do with macros and quasis, some of which I know how to fix.

[17:12] <notjack> what if I have an ant?

[17:12] <masak> TimToady: any compelling language reason [Z+]= shouldn't work?

[17:12] <TimToady> it's just a bug

[17:12] *** fhelmberger left
[17:12] *** eternaleye joined
[17:13] <masak> niecza: my @a = 1, 2, 3; @a [Z+]= @a; say @a.perl

[17:13] <camelia> niecza v24-109-g48a8de3: OUTPUT«[2, 4, 6].list␤»

[17:13] <masak> \o/

[17:13] <masak> rakudo: my @a = 1, 2, 3; @a [Z+]= @a; say @a.perl

[17:13] <camelia> rakudo-jvm 6f8bd8: OUTPUT«(timeout)»

[17:13] <camelia> ..rakudo-parrot 6f8bd8, rakudo-moar 6f8bd8: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Preceding context expects a term, but found infix = instead␤at /tmp/tmpfile:1␤------> [32mmy @a = 1, 2, 3; @a [Z+]=[33m⏏[31m @a; say @a.perl[0m␤»

[17:13] <masak> I see.

[17:13] <timotimo>  /o\

[17:13] <masak> is that rakudobugged?

[17:13] <timotimo> also, could someone power-cycle rakudo-jvm? :\

[17:13] <timotimo> evalbot control restart

[17:13] *** camelia left
[17:13] <timotimo> i can do it! \o/

[17:13] <TimToady> I've certainly brought it up before

[17:14] <TimToady> don't recall if it got officiated

[17:14] *** camelia joined
[17:15] <TimToady> n: my @a = 1, 2, 3; @a Z+= @a; say @a.perl

[17:15] *** ChanServ sets mode: +v camelia

[17:15] <camelia> niecza v24-109-g48a8de3: OUTPUT«[2, 4, 6].list␤»

[17:15] <TimToady> n: my @a = 1, 2, 3; @a Z[+=] @a; say @a.perl

[17:15] <camelia> niecza v24-109-g48a8de3: OUTPUT«[2, 4, 6].list␤»

[17:15] <TimToady> note it works either way :)

[17:16] <TimToady> the latter form is accepted by rakudo, but doesn't have the semantics correct

[17:16] <TimToady> p: my @a = 1, 2, 3; @a Z[+=] @a; say @a.perl

[17:16] <camelia> rakudo-parrot 6f8bd8: OUTPUT«Array.new(1, 2, 3)␤»

[17:17] *** SamuraiJack left
[17:21] <segomos> n: my @a = 1,2,3; my @b = 1,2,3,4; @a Z+= @b; say @a.perl;

[17:21] <camelia> niecza v24-109-g48a8de3: OUTPUT«[2, 4, 6].list␤»

[17:24] *** mavcunha joined
[17:29] <PerlJam> perl6

[17:29] <PerlJam> oops

[17:30] <[Coke]> we have tickets open regarding opensolaris. Looks like OS was shut down by oracle in 2010. Can we safely reject these tickets? (if not, can someone with opensolaris volunteer to fix them?)

[17:32] <[Coke]> ah, bbkr is one step ahead of me, in 2011.

[17:32] <[Coke]> bbkr++

[17:32] <geekosaur> opensolaris /per se/ is dead, illumos is still at least twitching (see also omnios, smartos)

[17:33] <[Coke]> I'll close those tickets in a day or two unless someone here objects.

[17:33] *** hoverboard left
[17:34] * geekosaur is actually standing up an omnios server here, but it's not likely to be running perl6 (or much of anything else beyond the server functions)

[17:34] <[Coke]> perl6: BEGIN { a() }

[17:35] <camelia> rakudo-moar 9d0eb5: OUTPUT«===SORRY!===␤Cannot invoke null object␤»

[17:35] <camelia> ..rakudo-jvm 9d0eb5: OUTPUT«===SORRY!===␤java.lang.NullPointerException␤»

[17:35] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Undeclared routine:␤    'a' used at line 1␤␤Unhandled exception: System.NullReferenceException: Object reference not set to an instance of an object␤  at Niecza.StashCursor.Core (System.String key, Boolean fina…»

[17:35] <camelia> ..rakudo-parrot 9d0eb5: OUTPUT«===SORRY!===␤Could not find sub &a␤»

[17:37] <TimToady> added an FP version to http://rosettacode.org/wiki/Maximum_triangle_path_sum#Perl_6

[17:37] <[Coke]> perl6: a()

[17:37] <camelia> niecza v24-109-g48a8de3: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Undeclared routine:␤    'a' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 (die @ 5) ␤  at /home/p6eval/niecza/src/STD.pm6 line 1147 (P6.comp_uni…»

[17:37] <camelia> ..rakudo-parrot 9d0eb5, rakudo-jvm 9d0eb5, rakudo-moar 9d0eb5: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Undeclared routine:␤    a used at line 1␤␤»

[17:38] <[Coke]> niecza++ (RT #81502)

[17:38] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=81502

[17:39] *** Adriaaan joined
[17:40] <[Coke]> p: say ord.Cool #RT #114014

[17:40] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=114014

[17:40] <camelia> rakudo-parrot 9d0eb5: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/LfGjr1KqtY␤Calling 'ord' requires arguments␤    Expected: :(Cool $s)␤at /tmp/LfGjr1KqtY:1␤------> [32msay [33m⏏[31mord.Cool #RT #114014[0m␤»

[17:40] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=114014

[17:40] <[Coke]> synopsebot: you should ignore other bots, maybe.

[17:44] *** xenoterracide joined
[17:44] *** ajr__ left
[17:44] *** ajr_ joined
[17:44] *** ajr_ left
[17:44] *** arnsholt joined
[17:45] *** clkao_ is now known as clkao

[17:46] <TimToady> it's funny, I have pneumonia, and I'm coughing my lungs out, but I can still program, even if I'm an idiot in all other ways... :)

[17:46] *** molaf_ left
[17:48] <[Coke]> You might want to check your bias filters, there.

[17:48] <[Coke]> (the big p sucks. Get well soon. :| )

[17:49] *** vendethiel joined
[17:57] *** dakkar left
[17:57] *** mavcunha left
[18:00] *** colomon left
[18:00] *** virtualsue left
[18:01] *** grondilu joined
[18:02] <grondilu> TimToady: doesn't "open($filename).lines" make more sense than "slurp($filename).lines"?

[18:02] *** pecastro_ left
[18:04] *** kurahaupo_mobile joined
[18:08] *** SamuraiJack joined
[18:11] *** [Sno] joined
[18:15] <TimToady> slurp closes it again :)

[18:15] *** tgt joined
[18:18] *** hoverboard joined
[18:20] <TimToady> added a right-assoc solution

[18:21] <[Coke]> TimToady: is there a bug queue for STD?

[18:22] <TimToady> just git issues

[18:22] *** colomon joined
[18:22] <TimToady> well, and a Todo file in my directory that I mostly ignore :)

[18:22] <nwc10> TimToady: tarball works on "my" machine for all 3 backends

[18:22] <[Coke]> er, right, better question: is it ok to put std bugs in the github issue queue. :)

[18:22] <[Coke]> k.

[18:22] <TimToady> sure

[18:23] <[Coke]> There are several RTs that are "rakudo does this wrong and so does STD"

[18:23] <[Coke]> and I'm sure the rakudo response is "very dangerous - you go first"

[18:24] <TimToady> well, I can't really fix anything that depends on having a real compiler

[18:24] <TimToady> in that sense, niecza++ is a better example of what STD should be these days

[18:26] <nwc10> er naughty tab key

[18:26] <nwc10> ^timotimo

[18:28] *** rindolf left
[18:31] *** rindolf joined
[18:34] <timotimo> nwc10: thank you :)

[18:34] *** Vlavv left
[18:35] <timotimo> should i run some benchmarks? hmm.

[18:35] <timotimo> i guess i could

[18:40] *** tgt left
[18:44] *** berekuk joined
[18:45] <nwc10> swap, om nom nom

[18:46] *** SamuraiJack left
[18:46] *** Vlavv joined
[18:48] *** tgt joined
[18:55] *** hoverboard left
[18:57] <hoelzro> I have returned

[18:57] <hoelzro> JVM * module status: https://gist.github.com/hoelzro/9120694

[19:02] *** darutoko left
[19:04] *** ajr_ joined
[19:17] *** FROGGS left
[19:22] *** pecastro joined
[19:26] <arnsholt> hoelzro: Oh, those NativeCall failures are fixable

[19:26] <arnsholt> (Sort of)

[19:27] <arnsholt> Getting the command-line to compile on JVM is hard, so we punt on that

[19:28] <arnsholt> Have to run the tests with Parrot first (that compiles things) then JVM

[19:28] *** rindolf left
[19:29] <nwc10> peak swap building Rakduo on the same machine with parrot: 498460

[19:30] <nwc10> er no, sorry, 504488

[19:30] <nwc10> so need about 1G for Rakudo with parrot, but 640M for Moar

[19:31] <hoelzro> arnsholt: compiles what things?

[19:31] <arnsholt> The libs with the C code of the tests

[19:32] <hoelzro> ah ha

[19:32] <arnsholt> Part of the tests are in C (since we're testing calling out to C, after all =)

[19:32] <hoelzro> makes sense =)

[19:32] <hoelzro> is it easy to fix so that you don't need to use Parrot first?

[19:33] *** Sqirrel left
[19:33] <arnsholt> Not AFAIK

[19:33] *** Sqirrel joined
[19:34] <colomon> do it at module build, maybe?

[19:36] <[Coke]> Eventually we'll need to not require parrot to do JVM stuff, I think.

[19:37] <[Coke]> (even if it means pulling in some compiler detection into rakudo and then using that to drive the backends instead of letting the backends discover things)

[19:39] <arnsholt> Yeah

[19:39] <arnsholt> The problem is figuring out how to compile things

[19:41] <[Coke]> hard problem, your workaround seems fine for now. :)

[19:41] <[Coke]> https://rt.perl.org/Ticket/Display.html?id=121071

[19:41] <[Coke]> note that Custmo fields now says: "VM: Parrot"

[19:41] <[Coke]> *Custom

[19:42] <[Coke]> Anyone wants to help bugadmin, adding that to tickets where it's explicitly stated would be great.

[19:42] <arnsholt> Yeah, on Parrot we just pull it out of $*VM

[19:44] <[Coke]> right now VM is a select-one field. I can probably have it changed to multiselect if we find we need it

[19:46] *** notjack left
[19:59] *** rurban left
[20:01] *** rurban joined
[20:03] *** shinobicl joined
[20:03] *** colomon left
[20:03] *** mavcunha joined
[20:04] *** shinobicl left
[20:04] *** shinobicl joined
[20:06] *** shinobicl left
[20:07] *** shinobicl joined
[20:07] <shinobicl> hi all!

[20:08] <moritz> timotimo++ # rakudo release

[20:08] <moritz> hi shinobicl 

[20:08] <shinobicl> i'm looking for a perl6 example using REST, is there such a thing yet?

[20:08] <masak> shinobicl: don't think so.

[20:09] *** kaare__ joined
[20:12] <[Coke]> shinobicl: you looking for a client or server side example?

[20:12] *** shinobicl left
[20:13] *** kaare__ left
[20:14] *** kaare__ joined
[20:14] <timotimo> moritz: thanks

[20:15] <timotimo> i'm benchmarking 2014.01 vs 2014.02 now on moar and parrot

[20:16] *** shinobicl joined
[20:17] <shinobicl> masak: i'm guessing a XML serializer/deserializer is needed first, right?

[20:17] <shinobicl> i would like to try writing one, if there is no such thing yet

[20:17] <moritz> REST works fine with JSON too

[20:18] <masak> yeah, XML is not a strict requirement.

[20:18] <masak> and we already have JSON.

[20:18] <shinobicl> JSON::Unmarshall, right?

[20:19] <moritz> JSON::Tiny

[20:19] *** kaare__ left
[20:20] *** mavcunha left
[20:21] *** shinobicl left
[20:23] <timotimo> we have exemel, i'm not entirely sure what kinds of stuffs it can do

[20:23] *** shinobicl joined
[20:24] <dalek> star: 43245f3 | moritz++ | / (17 files):

[20:24] <dalek> star: Remove modules/perl6-psgi

[20:24] <dalek> star: 

[20:24] <dalek> star: it is a duplicate of modules/PSGI. hoelzro++

[20:24] <dalek> star: review: https://github.com/rakudo/star/commit/43245f3afd

[20:24] *** mavcunha joined
[20:24] <moritz> oh, and that commit also bumped several module versions

[20:26] *** shinobicl left
[20:26] <dalek> star: 83d6a65 | moritz++ | modules/Perl6-MIME-Base64:

[20:26] <dalek> star: reset MIME::Base64 revision

[20:26] <dalek> star: review: https://github.com/rakudo/star/commit/83d6a65059

[20:27] *** shinobicl joined
[20:27] <shinobicl> another question: in java there are @Annotations, what could be the equivalent in perl6 for that?

[20:29] *** shinobicl left
[20:29] *** shinobicl joined
[20:29] *** shinobicl left
[20:29] *** shinobicl joined
[20:31] *** shinobicl left
[20:32] <[Coke]> you can use POD6 for custom annotations, I think. You can also add "is deprecated", though I'm not sure if you can add random ones like "is frobnosticable" without pre-defining them somehow.

[20:34] <hoelzro> is annotated('Annotation')?

[20:34] <hoelzro> you could easily create a module that adds something like that

[20:35] *** kaare__ joined
[20:35] *** shinobicl joined
[20:35] *** kaare__ is now known as kaare_

[20:37] *** shinobicl left
[20:38] <[Coke]> in java, those annotations have some function. I think we have a few others besides "is deprecated" spec'd.

[20:39] <hoelzro> you can't just add adhoc annotations in Java, iirc

[20:39] <hoelzro> you have to have defined them with an @interface declaration

[20:39] <hoelzro> in Java, @SuppressWarnings is builtin, along with @Override and a few others

[20:40] <hoelzro> I think method traits are the closest thing that Perl 6 offers

[20:40] <timotimo> all you need for an annotation is a sub trait_mod:<annotated>(...)

[20:40] *** shinobicl joined
[20:40] <shinobicl> i think that maybe traits is the appropiate construct to add metadata, but it bothers me a little that "is" is used also for inheritance

[20:40] <shinobicl> (add metadata as @Annotations does in java)

[20:41] <PerlJam> shinobicl: you could create an alias for "is" that uses a word that makes you feel better about it  :)

[20:41] <timotimo> i don't have a big problem with "is" being for both subclassing and trait applying

[20:41] *** Timbus left
[20:42] <[Coke]> r: class deprecated { method eek() is deprecated {} }

[20:42] <camelia> rakudo-moar 9d0eb5: OUTPUT«use of uninitialized value of type Any in string context␤Unhandled exception: No exception handler located for warn␤   at <unknown>:1  (/home/p6eval/rakudo-inst-1/languages/perl6/runtime/CORE.setting.moarvm:print_exception:4294967295)␤ from src/gen/m…»

[20:42] <camelia> ..rakudo-parrot 9d0eb5: OUTPUT«use of uninitialized value of type Any in string context  in any  at src/Perl6/World.nqp:1661␤␤use of uninitialized value of type Any in string context␤[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Can't use unknown trait 'is …»

[20:42] <camelia> ..rakudo-jvm 9d0eb5: OUTPUT«use of uninitialized value of type Any in string context␤Unhandled exception: use of uninitialized value of type Any in string context␤  in warn (gen/jvm/CORE.setting:677)␤  in warn (gen/jvm/CORE.setting:673)␤  in Str (gen/jvm/CORE.setting:1023)␤ …»

[20:44] <[Coke]> pretty sure I wrote that wrong.

[20:44] *** shinobicl left
[20:45] <[Coke]> p: class DEPRECATED { method eek() is DEPRECATED {} }

[20:45] <camelia> rakudo-parrot 9d0eb5: OUTPUT«use of uninitialized value of type Any in string context  in any  at src/Perl6/World.nqp:1661␤␤use of uninitialized value of type Any in string context␤[31m===[0mSORRY![31m===[0m Error while compiling /tmp/JwDH2frZ3O␤Can't use unknown trait '…»

[20:45] *** mavcunha left
[20:45] <[Coke]> I think that should probably work, or give a better error message.

[20:47] *** mavcunha joined
[20:47] <hoelzro> has anyone considered shipping a script that uses rlwrap to wrap the real perl6 executable as perl6?

[20:48] <hoelzro> it's frustating that the arrow keys don't DWIM

[20:48] <masak> hoelzro: it does if you have the right thing installed, IIRC.

[20:49] <PerlJam> yep.

[20:49] <PerlJam> Arrow keys work for me on my laptop

[20:49] <PerlJam> (but not my desktop and I've been too lazy to figure out what I needed to fix it)

[20:49] <moritz> for parrot, you need libreadline-dev installed

[20:50] <timotimo> it even says so in the INSTALL.txt :P

[20:50] <moritz> but who reads those files anyway?

[20:50] <hoelzro> oh, really?

[20:50] * PerlJam has libreadline-dev (but hasn't used a parrot-based rakudo in a while)

[20:50] <hoelzro> what about for JVM/moar?

[20:51] <moritz> works here in perl6-j

[20:51] *** pdcawley_ joined
[20:51] <moritz> and iirc moar also has something readliny

[20:51] *** mavcunha left
[20:52] <timotimo> it has now?

[20:52] <timotimo> rlwrap has your back in any case :)

[20:52] <timotimo> except in gdb

[20:52] *** pdcawley left
[20:53] *** Timbus joined
[20:54] *** colomon joined
[20:54] *** shinobicl joined
[20:55] <shinobicl> in my last java project we had this class declaration: @XmlRootElement @XmlType @Entity @Table public class AtributoMap extends AtributoCollection implements Serializable, Cloneable, Iterable<Atributo> 

[20:56] <shinobicl> i perl6, that would be something like: class AtributoMap is XmlRootElement is XmlType is Entity is Table is AtributoCollection does Serializable does Cloneable does Iterable[Atributo]

[20:57] <shinobicl> i kind of liked the way in which annotations came before starting to declare the class and its dependencies.

[20:58] *** bluescreen10 left
[20:58] <shinobicl> i know, is more about style than functionality, but i just wanted to illustrate my point

[21:00] *** shinobicl left
[21:00] *** pecastro_ joined
[21:00] *** espadrine joined
[21:04] *** brother left
[21:04] *** __sri left
[21:04] *** zamolxes left
[21:05] *** pecastro left
[21:05] *** vendethiel left
[21:05] *** xfix left
[21:05] *** takesako__ left
[21:05] *** grondilu left
[21:05] *** rylinaux left
[21:05] *** cibs left
[21:05] *** ggherdov left
[21:05] *** djanatyn left
[21:05] *** mattp__ left
[21:05] *** silug_ left
[21:05] *** yakudza left
[21:05] *** japhb left
[21:05] *** FOAD left
[21:05] *** yogan left
[21:05] *** hoelzro left
[21:05] *** cxreg left
[21:05] *** anocelot left
[21:05] *** simcop2387 left
[21:05] *** ruoso left
[21:05] *** ashleydev left
[21:05] *** ribasushi left
[21:05] *** japhb_ left
[21:05] *** pnu_ left
[21:05] *** rurban_ left
[21:05] *** DrEeevil left
[21:05] *** Grrrr left
[21:05] *** rom1504 left
[21:05] *** raydiak left
[21:05] *** yoleaux left
[21:05] *** dylanwh left
[21:05] *** perigrin left
[21:05] *** avuserow2 left
[21:05] *** segomos left
[21:05] *** robinsmidsrod left
[21:05] *** timotimo left
[21:05] *** tokuhirom left
[21:05] *** vendethiel joined
[21:05] *** rom1504 joined
[21:05] *** raydiak joined
[21:05] *** yoleaux joined
[21:05] *** dylanwh joined
[21:05] *** tokuhirom joined
[21:05] *** perigrin joined
[21:05] *** avuserow2 joined
[21:05] *** robinsmidsrod joined
[21:05] *** segomos joined
[21:05] *** timotimo joined
[21:05] *** hobana.freenode.net sets mode: +v yoleaux

[21:06] *** ggherdov joined
[21:06] *** djanatyn joined
[21:06] *** mattp__ joined
[21:06] *** silug_ joined
[21:06] *** yakudza joined
[21:06] *** japhb joined
[21:06] *** FOAD joined
[21:06] *** yogan joined
[21:06] *** hoelzro joined
[21:06] *** cxreg joined
[21:06] *** xfix- joined
[21:06] *** grondilu joined
[21:06] *** rylinaux joined
[21:08] *** anocelot joined
[21:08] *** simcop2387 joined
[21:08] *** ruoso joined
[21:08] *** ashleydev joined
[21:08] *** ribasushi joined
[21:08] *** japhb_ joined
[21:08] *** pnu_ joined
[21:08] *** rurban_ joined
[21:08] *** DrEeevil joined
[21:08] *** Grrrr joined
[21:08] *** lestrrat joined
[21:08] *** DrEeevil left
[21:08] *** bonsaikitten joined
[21:14] *** takesako__ joined
[21:14] *** brother joined
[21:14] *** __sri joined
[21:14] *** zamolxes joined
[21:16] *** shinobicl joined
[21:18] *** shinobicl left
[21:19] *** ggherdov left
[21:21] *** ggherdov joined
[21:21] *** DrEeevil joined
[21:24] *** yogan_ joined
[21:24] *** grondilu_ joined
[21:26] *** bonsaikitten left
[21:28] *** cxreg2 joined
[21:29] *** corecatcher left
[21:30] *** cooper left
[21:30] *** FOAD_ joined
[21:31] *** corecatcher joined
[21:32] *** japhb__ joined
[21:32] *** hoelzro_ joined
[21:32] *** cooper joined
[21:32] *** cooper left
[21:32] *** cooper joined
[21:32] *** yogan left
[21:33] *** tgt left
[21:33] *** djanatyn1 joined
[21:33] *** tgt joined
[21:36] *** rylinaux left
[21:39] *** djanatyn left
[21:39] *** djanatyn1 is now known as djanatyn

[21:39] *** grondilu left
[21:39] *** anocelot left
[21:40] *** simcop2387 left
[21:40] *** ruoso left
[21:40] *** ashleydev left
[21:40] *** ribasushi left
[21:40] *** japhb_ left
[21:40] *** pnu_ left
[21:40] *** rurban_ left
[21:40] *** Grrrr left
[21:40] *** lestrrat left
[21:40] *** rylinaux joined
[21:40] *** rylinaux left
[21:40] *** rylinaux joined
[21:40] *** xfix- left
[21:40] *** rylinaux left
[21:40] *** xfix joined
[21:40] *** mattp__ left
[21:40] *** silug_ left
[21:40] *** yakudza left
[21:40] *** japhb left
[21:40] *** FOAD left
[21:40] *** hoelzro left
[21:40] *** cxreg left
[21:40] *** FOAD_ is now known as FOAD

[21:43] *** tgt left
[21:44] *** tgt joined
[21:44] *** silug_ joined
[21:46] *** xfix left
[21:47] *** FOAD left
[21:48] *** FOAD joined
[22:03] *** ilogger2 joined
[22:03] *** ChanServ sets mode: +v ilogger2

[22:03] *** johnmilton joined
[22:06] *** dbrock__ joined
[22:06] *** xfix joined
[22:06] *** cibs joined
[22:06] *** yakudza joined
[22:06] *** anocelot joined
[22:06] *** simcop2387 joined
[22:06] *** ruoso joined
[22:06] *** ashleydev joined
[22:06] *** ribasushi joined
[22:06] *** japhb_ joined
[22:06] *** pnu_ joined
[22:06] *** rurban_ joined
[22:06] *** Grrrr joined
[22:06] *** lestrrat joined
[22:16] <timotimo> r: my @pieces = "foo::baz"; my @params = <ver nqp mvm>; my %foo; %foo<test>{@params} = @pieces; say %foo.perl;

[22:17] <camelia> rakudo-jvm 9d0eb5: OUTPUT«("test" => {"nqp" => Any, "ver" => "foo::baz", "mvm" => Any}).hash␤»

[22:17] <camelia> ..rakudo-parrot 9d0eb5, rakudo-moar 9d0eb5: OUTPUT«("test" => {"ver" => "foo::baz", "nqp" => Any, "mvm" => Any}).hash␤»

[22:20] <timotimo> http://t.h8.lv/p6bench/2014-02-20-nqp.html

[22:20] <timotimo> http://t.h8.lv/p6bench/2014-02-20-rakudo.html

[22:20] <timotimo> benched something for yous :)

[22:27] *** xfix left
[22:27] *** yakudza left
[22:27] *** cibs left
[22:27] <timotimo> r: my @pieces = "foo::baz".split(":"); my @params = <ver nqp mvm>; my %foo; %foo<test>{@params} = @pieces; say %foo.perl;

[22:27] <camelia> rakudo-jvm 9d0eb5: OUTPUT«("test" => {"nqp" => "", "ver" => "foo", "mvm" => "baz"}).hash␤»

[22:27] <camelia> ..rakudo-parrot 9d0eb5, rakudo-moar 9d0eb5: OUTPUT«("test" => {"ver" => "foo", "nqp" => "", "mvm" => "baz"}).hash␤»

[22:28] <timotimo> r: my @pieces = "foo:bar".split(":"); my @params = <ver nqp mvm>; my %foo; %foo<test>{@params} = @pieces; say %foo.perl;

[22:28] <camelia> rakudo-parrot 9d0eb5, rakudo-moar 9d0eb5: OUTPUT«("test" => {"ver" => "foo", "nqp" => "bar", "mvm" => Any}).hash␤»

[22:28] <camelia> ..rakudo-jvm 9d0eb5: OUTPUT«("test" => {"nqp" => "bar", "ver" => "foo", "mvm" => Any}).hash␤»

[22:28] <timotimo> r: my @pieces = "foo".split(":"); my @params = <ver nqp mvm>; my %foo; %foo<test>{@params} = @pieces; say %foo.perl;

[22:28] <camelia> rakudo-jvm 9d0eb5: OUTPUT«("test" => {"nqp" => Any, "ver" => "foo", "mvm" => Any}).hash␤»

[22:28] <camelia> ..rakudo-parrot 9d0eb5, rakudo-moar 9d0eb5: OUTPUT«("test" => {"ver" => "foo", "nqp" => Any, "mvm" => Any}).hash␤»

[22:28] *** broquain1 joined
[22:31] *** sorear joined
[22:31] *** Mouq joined
[22:32] <TimToady> Mouq: o/  you off school this week?

[22:33] *** dbrock__ left
[22:33] *** anocelot left
[22:33] *** simcop2387 left
[22:33] *** ruoso left
[22:33] *** ashleydev left
[22:33] *** ribasushi left
[22:33] *** japhb_ left
[22:33] *** pnu_ left
[22:33] *** rurban_ left
[22:33] *** Grrrr left
[22:33] *** lestrrat left
[22:33] *** BenGoldberg joined
[22:33] <TimToady> rotten net weather

[22:35] <geekosaur> some kiddie's probably ddosing freenode again

[22:35] <Mouq> TimToady: o/ Yeah, certainly tonight; I have a ton of stuff I need to do work on tonight in addition to just coming back from the first track practice this year

[22:35] <Mouq> also

[22:36] <Mouq> timotimo: \o/ for the grammar for pod tables

[22:36] *** dbrock__ joined
[22:36] *** lestrrat joined
[22:36] *** Grrrr joined
[22:36] *** rurban_ joined
[22:36] *** pnu_ joined
[22:36] *** japhb_ joined
[22:36] *** ribasushi joined
[22:36] *** ashleydev joined
[22:36] *** ruoso joined
[22:36] *** simcop2387 joined
[22:36] *** anocelot joined
[22:36] *** xfix joined
[22:36] *** cibs joined
[22:36] *** yakudza joined
[22:36] <timotimo> i hope you can do something at all with it

[22:37] <timotimo> it's not really a drop-in replacement ;)

[22:37] <Mouq> timotimo: Does it work?

[22:37] <Mouq> timotimo: perl6

[22:37] <timotimo> it runs exactly like shown ;)

[22:37] <timotimo> or at least it used to :)

[22:37] <Mouq> r: https://gist.github.com/timo/6132249

[22:38] <camelia> rakudo-parrot 9d0eb5, rakudo-jvm 9d0eb5, rakudo-moar 9d0eb5: ( no output )

[22:38] <timotimo> oh, huh

[22:38] <Mouq> lemme try locally

[22:39] <Mouq> -_- I need to rebuild

[22:40] <Mouq> But it looks good :)

[22:40] <timotimo> thanks :)

[22:40] <BenGoldberg> rn: print (state $ = True) ^ False;

[22:40] <camelia> rakudo-parrot 9d0eb5, rakudo-jvm 9d0eb5, rakudo-moar 9d0eb5, niecza v24-109-g48a8de3: OUTPUT«one(Bool::True, Bool::False)»

[22:40] <BenGoldberg> rn: print (state $ = True) ^= False;

[22:40] <camelia> niecza v24-109-g48a8de3: OUTPUT«(timeout)»

[22:40] <camelia> ..rakudo-parrot 9d0eb5, rakudo-jvm 9d0eb5, rakudo-moar 9d0eb5: OUTPUT«one(Bool::True, Bool::False)»

[22:42] *** Yappo__________5 joined
[22:43] <TimToady> rn: print (state $ = True) ?^= False;

[22:43] <camelia> rakudo-parrot 9d0eb5, rakudo-jvm 9d0eb5, rakudo-moar 9d0eb5, niecza v24-109-g48a8de3: OUTPUT«True»

[22:43] <TimToady> rn: print (state $ = True) ?^= True;

[22:43] <camelia> rakudo-parrot 9d0eb5, rakudo-jvm 9d0eb5, rakudo-moar 9d0eb5, niecza v24-109-g48a8de3: OUTPUT«False»

[22:44] <BenGoldberg> It's superposition specific, I think

[22:45] <BenGoldberg> rn: print (state $ = True) & False;

[22:45] <camelia> rakudo-parrot 9d0eb5, rakudo-jvm 9d0eb5, rakudo-moar 9d0eb5, niecza v24-109-g48a8de3: OUTPUT«all(Bool::True, Bool::False)»

[22:45] <BenGoldberg> rn: print (state $ = True) &= False;

[22:45] <TimToady> rn: print (state $ = True) ^^= True;

[22:45] <camelia> niecza v24-109-g48a8de3: OUTPUT«(timeout)»

[22:45] <camelia> ..rakudo-parrot 9d0eb5, rakudo-jvm 9d0eb5, rakudo-moar 9d0eb5: OUTPUT«all(Bool::True, Bool::False)»

[22:45] <camelia> niecza v24-109-g48a8de3: OUTPUT«Unhandled exception: System.NullReferenceException: Object reference not set to an instance of an object␤  at Niecza.StashCursor.Core (System.String key, Boolean final, Niecza.StashCursor& sc, Niecza.Variable& v, Niecza.Variable bind_to) [0x00000] i…»

[22:45] <camelia> ..rakudo-parrot 9d0eb5: OUTPUT«use of uninitialized value of type Any in string context  in block  at /tmp/tmpfile:1␤␤»

[22:45] <camelia> ..rakudo-jvm 9d0eb5, rakudo-moar 9d0eb5: OUTPUT«use of uninitialized value of type Any in string context␤»

[22:45] *** mavcunha joined
[22:46] *** dbrock__ left
[22:46] *** anocelot left
[22:46] *** simcop2387 left
[22:46] *** ruoso left
[22:46] *** ashleydev left
[22:46] *** ribasushi left
[22:46] *** japhb_ left
[22:46] *** pnu_ left
[22:46] *** rurban_ left
[22:46] *** Grrrr left
[22:46] *** lestrrat left
[22:46] *** cibs left
[22:47] *** dbrock__ joined
[22:47] *** lestrrat joined
[22:47] *** Grrrr joined
[22:47] *** rurban_ joined
[22:47] *** pnu_ joined
[22:47] *** japhb_ joined
[22:47] *** ribasushi joined
[22:47] *** ashleydev joined
[22:47] *** ruoso joined
[22:47] *** simcop2387 joined
[22:47] *** anocelot joined
[22:47] *** cibs joined
[22:47] <lue> what pod table grammar?

[22:47] *** brother joined
[22:47] <Mouq> lue: https://gist.github.com/timo/6132249

[22:48] <lue> ooh, wonder if it works on the type of tables I make (see S15)

[22:51] *** integral joined
[22:52] <Mouq> lue: It looks like the current Pod parser doesn't even do your tables right :(

[22:53] <Mouq> lue: The one(s?) that's boxed

[22:53] <lue> yeah, that's how I do table usually.

[22:53] <lue> *tables

[22:54] <Mouq> Also, I don't think it handles +'s at row-column intersections

[22:54] <lue> I don't think so either.

[22:54] <Mouq> *perl6 does, I mean timotimo++'s code

[22:54] *** telex joined
[22:54] <Mouq> *perl6 does, from knowing the code, not because I've actually tried it :/

[22:57] <Mouq> Yup, it works fine with perl6 once the borders are removed

[22:57] <lue> Sample from my last generation of S15:

[22:57] <lue>  <tr>

[22:57] <lue> <td>|------------+-------+--------+--------|</td>

[22:57] <lue> </tr>

[23:00] <Mouq> Yup... I guess detecting if it's boxed shouldn't be too hard, but...

[23:00] *** berekuk joined
[23:01] <Mouq> There's already so many ways to write tables. The current code to re-parse them is kind of a mess, just because that's kind of the way is has to be with its approach

[23:02] <lue> There are many ways to text tables; I doubt the code considers box-drawing characters :)

[23:05] <TimToady> how hard can it be?

[23:05] <arnsholt> At a guess, PhD-level computer vision project? =)

[23:06] <TimToady> we've already earned about 500 PhDs in here, what's one more?

[23:06] <lue> .oO(Perl 7 will include a new language on the braid: Table)

[23:07] <Mouq> lue: You mean Table will include Perl 6 on its language braid

[23:08] *** mavcunha left
[23:10] <japhb__> Anyone have any experience using a cloud platform (e.g. AWS, Azure, App Engine) from a not-officially-supported language?

[23:12] <japhb__> (I would assume Perl has this distinction for at least some of the cloud platforms, which is why I ask this community ....)

[23:16] <Mouq> *Perl 7

[23:16] * Mouq -> bed, needs to get functional

[23:17] *** hoverboard joined
[23:19] *** Quom joined
[23:20] <timotimo> i think my code shouldn't need to care about intersections between cells

[23:20] *** Quom left
[23:21] *** Mouq left
[23:22] *** hoverboard left
[23:25] *** mattp__ joined
[23:29] *** bonsaikitten joined
[23:31] *** grep0r left
[23:40] *** grep0r joined
[23:45] *** mavcunha joined
[23:51] *** sftp joined
