[00:20] *** btyler joined
[00:20] *** sftp left
[00:21] *** sftp joined
[00:28] <japhb> What copyright do people generally use for talks here?  I was thinking the current international version of cc-by-sa.

[00:35] *** hoverboard left
[00:41] *** rurban joined
[00:45] *** rurban left
[00:56] *** jnap left
[00:57] *** dayangkun joined
[01:09] *** kurahaupo left
[01:13] *** FROGGS_ joined
[01:16] *** FROGGS left
[01:27] *** jnap joined
[01:32] *** jnap left
[01:38] *** rurban joined
[01:44] *** djanatyn left
[01:44] *** djanatyn joined
[01:54] *** klapperl_ joined
[01:56] *** Su-Shee_ joined
[01:57] *** Su-Shee left
[01:57] *** klapperl left
[02:25] *** pdcawley left
[02:26] *** pdcawley joined
[02:28] *** jnap joined
[02:29] *** hoverboard joined
[02:30] *** rurban left
[02:32] *** jnap left
[02:33] *** rurban joined
[02:36] *** xragnar_ joined
[02:36] *** xragnar left
[02:36] *** xragnar_ is now known as xragnar

[02:37] *** btyler left
[02:55] <colomon> hmmm

[03:03] *** kaleem joined
[03:10] <colomon> tadzik: when rakudobrew's call to rakudo's make install fails with the stupid meaningless copying error at the end, it doesn't call panda rebootstrap like it is supposed to

[03:10] <colomon> looking at the source, I'm not really sure why

[03:20] *** araujo left
[03:27] *** clkao joined
[03:28] *** jnap joined
[03:33] *** jnap left
[03:38] *** slavik joined
[03:38] *** hoverboard is now known as moistcherry

[04:05] *** kaare_ joined
[04:08] *** SamuraiJack joined
[04:13] *** anaeem1 joined
[04:15] <japhb> rakudo-jvm build fail: https://gist.github.com/anonymous/11361622

[04:15] <japhb> Huh, hadn't realized I wasn't logged in on that box.

[04:16] *** moistcherry is now known as hoverboard

[04:17] <japhb> That's Oracle 32-bit JDK, shared build tree.  I see a segfault in an earlier file on 64-bit OpenJDK, separate build tree.  But in both cases, starting from fresh trees, NQP seems to build fine, but Rakudo build dies early.

[04:29] *** jnap joined
[04:34] *** jnap left
[04:40] *** kaleem left
[04:41] *** kaleem joined
[04:41] *** kaleem left
[04:43] *** hoverboard left
[04:46] *** kaare_ left
[04:48] *** hoverboard joined
[04:50] *** ClarusCogitatio left
[04:51] *** ClarusCogitatio joined
[05:11] *** kaare_ joined
[05:14] *** ClarusCogitatio left
[05:19] *** ClarusCogitatio joined
[05:21] <FROGGS_> japhb: I am not sure but I think Java(TM) 1.7.0_21 is too old, IIRC a version >= 1.7.0__24 was needed

[05:28] <raydiak> would be nice if configure complained about that

[05:29] <FROGGS_> true

[05:30] <FROGGS_> jnthn: might remember the needed version?

[05:30] <FROGGS_> bbl

[05:30] *** FROGGS_ left
[05:30] *** jnap joined
[05:32] *** ClarusCogitatio left
[05:32] *** [Sno] left
[05:35] *** jnap left
[05:36] *** rurban left
[05:42] *** ClarusCogitatio joined
[05:47] *** ClarusCogitatio left
[05:48] <japhb> .tell FROGGS Oh, eww.  Thanks for letting me know.  It seemed strange no one else was hitting it.

[05:48] <yoleaux> japhb: I'll pass your message to FROGGS.

[05:48] <japhb> raydiak: Oh, definitely.

[05:52] *** ClarusCogitatio joined
[05:52] <japhb> raydiak: Just in case I haven't mentioned it, thank you for all your contributions to perl6-bench.  Looks like good stuff.  :-)

[05:53] *** ClarusCogitatio left
[05:53] <raydiak> japhb: you're welcome :) will still get back to those details you noticed like the tooltip sticking, too

[05:56] *** Mouq left
[05:56] *** ClarusCogitatio joined
[06:03] *** dayangkun left
[06:03] *** ClarusCogitatio left
[06:06] *** rurban joined
[06:09] *** ClarusCogitatio joined
[06:10] *** ClarusCogitatio left
[06:10] *** ClarusCogitatio joined
[06:10] *** ClarusCogitatio left
[06:10] *** ClarusCogitatio joined
[06:11] *** rurban left
[06:11] *** ClarusCogitatio left
[06:12] *** ClarusCogitatio joined
[06:15] *** jjjjjjjj joined
[06:18] *** SamuraiJack left
[06:30] *** darutoko joined
[06:31] *** jnap joined
[06:33] *** hoverboard left
[06:36] *** jnap left
[06:38] *** hoverboard joined
[06:42] *** FROGGS joined
[06:48] *** xinming_ left
[06:49] *** xinming_ joined
[06:51] *** hoverboard left
[06:53] *** [Sno] joined
[07:01] *** Mouq joined
[07:03] *** dayangkun joined
[07:05] *** Mouq left
[07:06] *** zakharyas joined
[07:06] *** kurahaupo joined
[07:09] *** rurban joined
[07:12] *** kurahaupo left
[07:12] *** jjjjjjjj left
[07:13] *** rurban left
[07:16] *** nhayashi left
[07:21] *** nhayashi joined
[07:24] *** igorsutton joined
[07:32] *** jnap joined
[07:32] *** kurahaupo_mobile joined
[07:34] *** Su-Shee_ is now known as Su-Shee

[07:35] <Su-Shee> good morning everyone.

[07:35] <FROGGS> morning Su-Shee 

[07:35] <yoleaux> 05:48Z <japhb> FROGGS: Oh, eww.  Thanks for letting me know.  It seemed strange no one else was hitting it.

[07:35] <moritz> good morning Su-Shee, *

[07:36] *** jnap left
[07:39] *** kurahaupo_mobile left
[07:39] *** ivanshmakov left
[08:03] *** pdcawley left
[08:03] *** dmol joined
[08:05] *** pdcawley joined
[08:06] <timotimo> o/

[08:06] *** pecastro left
[08:08] <FROGGS> o/

[08:10] *** rurban joined
[08:12] *** spider-mario joined
[08:14] *** rurban left
[08:27] *** SamuraiJack joined
[08:32] *** jnap joined
[08:33] *** denis_boyun_ joined
[08:37] *** jnap left
[08:49] *** Mouq joined
[08:54] *** Mouq left
[09:00] *** kaleem joined
[09:04] <sergot> o/

[09:04] *** denis_boyun_ left
[09:05] *** kaleem left
[09:11] *** rurban joined
[09:11] *** araujo joined
[09:11] *** araujo left
[09:11] *** araujo joined
[09:14] *** pecastro joined
[09:15] *** rurban left
[09:20] *** rindolf joined
[09:33] *** jnap joined
[09:38] *** jnap left
[09:39] *** jnap joined
[09:44] *** jnap left
[09:49] *** denis_boyun_ joined
[09:53] * lizmat waits a bit before she can see good localtime afternoon

[09:54] <lizmat> *say

[09:54] <lizmat> grrr....  waking up late is difficult  :-)

[09:55] *** woosley left
[09:58] <FROGGS> :o)

[09:58] <woolfy> it's still early...  ehrm...  not afternoon yet

[10:00] *** dayangkun left
[10:10] *** fhelmberger joined
[10:11] *** rurban joined
[10:13] *** woosley joined
[10:15] *** rurban left
[10:24] <dalek> roast: 5967271 | (Elizabeth Mattijsen)++ | / (13 files):

[10:24] <dalek> roast: Add tests for on demand/live state of Supply

[10:24] <dalek> roast: review: https://github.com/perl6/roast/commit/596727119d

[10:25] <jnthn> lizmat: Getting up late isn't so hard, but yeah, waking up is another matter :)

[10:28] *** kurahaupo joined
[10:30] *** woosley left
[10:51] *** Mouq joined
[10:57] *** Mouq left
[11:04] <tadzik> colomon: probably because of autodie or something? Hard to sya

[11:10] <colomon> yeah, I was wondering about that.  OH!  p5, not p6.  Right.

[11:12] *** rurban joined
[11:16] *** rurban left
[11:26] * lizmat is suffering from a braino while trying to implement Supply.Promise and gives up for now

[11:35] <jnthn> method Promise() { my $l = Lock.new; my $p = Promise.new; my $v = $p.vow; my $t = self.tap(-> \val { $l.protect({ if $p.status == Planned { $v.keep(val);  $t.close() } }); }, done => $v.break("No value received"), quit => -> \ex { ...similar to more code but .break }); $p }

[11:37] *** fhelmberger left
[11:40] * lizmat takes it from there, jnthn++

[11:41] *** jnap joined
[11:42] *** colomon left
[11:45] *** jnap left
[11:46] <timotimo> okay, let's see what i ought to mention in this week's report

[11:46] *** skids left
[11:46] <jnthn> back to teaching :)

[11:46] <FROGGS> I only played around with labels :/

[11:47] <timotimo> well, you implemented them for nqp-m

[11:47] <timotimo> that's good enough to be mentioned :)

[11:47] <timotimo> i should definitely link to jnthn's slides, but sadly the recordings haven't popped up yet

[11:49] <timotimo> loads of supply tests from lizmat and a few implementations as well

[11:49] <FROGGS> yeah, this usually takes a while

[11:49] * lizmat is checking on an ETA

[11:50] <timotimo> -p and -pe were fixed, which i should mention

[11:50] <lizmat> timotimo: I seem to recall jnthn implemented some stuff and gave a presentation  :-)

[11:50] <timotimo> yes, i'm definitely going to mention that

[11:51] <lizmat> $ perl6 -e '42.Supply.Promise.result.say'

[11:51] <lizmat> 42

[11:51] <lizmat> jnthn++

[11:52] <lizmat> $ perl6 -e '().Supply.Promise.result.say'

[11:52] <lizmat> No value received

[11:52] <lizmat> :-)

[11:53] *** fhelmberger joined
[11:58] *** btyler joined
[12:00] <tadzik> nice! :)

[12:00] <tadzik> lizmat++

[12:00] <timotimo> strawberries :3

[12:01] *** dayangkun joined
[12:04] *** colomon joined
[12:08] <lizmat> no definite ETA on video of NLPW just yet, definitely not this week :-(

[12:08] <timotimo> okay, thank you for asking :)

[12:10] <timotimo> FROGGS: can you quickly describe for me what the problem with moarvm's eof thing was?

[12:10] <timotimo> was it the infinite number of errors when hitting ctrl-d?

[12:11] <FROGGS> timotimo: https://github.com/MoarVM/MoarVM/commits?author=FROGGS

[12:11] <FROGGS> there were two issues

[12:11] <FROGGS> one about stating a filedescriptor when we have no filename, and the other one was about following symlinks

[12:12] <timotimo> yes, i was wondering how to explain the first one

[12:12] <FROGGS>  stat file descriptor in eof() when filename is unset …

[12:12] <FROGGS> This can happen when we get a file redirected, and therefor open it via

[12:12] <FROGGS> MVM_file_handle_from_fd instead of MVM_file_open_fh.

[12:12] <timotimo> i've read that and it doesn't help me too much :)

[12:12] <FROGGS> when we do: perl6-m -e 'say lines' < foo.txt

[12:12] <timotimo> i'd like to describe a "common" symptom

[12:12] <FROGGS> we get a file descriptor only

[12:12] <timotimo> okay, that's exactly what i was looking for :)

[12:13] *** rurban joined
[12:15] <timotimo> anything happening in branches i may not know about?

[12:16] <FROGGS> timotimo: not from my side

[12:17] *** rurban left
[12:27] <timotimo> https://p6weekly.wordpress.com/?p=150&shareadraft=535e492511fde - feel free to review and suggest additions, i'll be AFK for a bit first

[12:27] *** daniel-s_ joined
[12:28] *** rom1504 left
[12:28] *** xenoterracide joined
[12:31] <dalek> rakudo-star-daily: c419461 | coke++ | log/ (5 files):

[12:31] <dalek> rakudo-star-daily: today (automated commit)

[12:31] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/c41946138e

[12:31] <dalek> perl6-roast-data: 911424e | coke++ | / (6 files):

[12:31] <dalek> perl6-roast-data: today (automated commit)

[12:31] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/911424e11f

[12:31] <colomon> so, I'm trying to look into the "make: write error" message I get so often from building perl6-m on my MBP.  I just hacked the generated Makefile to test where the error is occuring, and it is *after* the last line of the m-runner-default-install.  As I read it, that's also after m-install runs, so I don't see what could possibly be executing to cause that...

[12:36] <lizmat> colomon: empirically, I only see this error when it needed to recompile any nqp files

[12:36] <btyler> timotimo: perhaps just a little more detail on some of the cool supply-related things?

[12:36] <[Coke]> colomon: when I tried to run make with the debug flag to track that down, *make* started segfaulting.

[12:37] <[Coke]> Someone suggested it had to do with redirecting output.

[12:38] <colomon> segmentation fault duplicated.  sigh

[12:39] <colomon> [Coke]: the segfault or the error message?

[12:39] *** Mouq joined
[12:41] <[Coke]> the error message. the segfault makes me think that OS X make is buggy

[12:41] <[Coke]> (and that perhaps that bugginess is the problem, not our build file)

[12:41] <colomon> there certainly are no obvious visible problems with the makefile

[12:41] <[Coke]> I am tempted to install gmake with ports and use that. :|

[12:42] *** jnap joined
[12:44] *** colomon left
[12:44] *** Mouq left
[12:46] *** jnap left
[12:47] <jnthn> timotimo: looks good at a quick glance through

[12:54] *** anaeem1 left
[12:56] *** anaeem1_ joined
[13:00] *** anaeem1_ left
[13:01] *** rurban joined
[13:02] *** telex left
[13:04] *** telex joined
[13:05] *** kaare_ left
[13:05] *** skids joined
[13:05] *** xenoterracide left
[13:06] *** colomon joined
[13:07] <colomon> [Coke]: I'm worried trying to use a different make than perl 5 did will cause a different batch of problems here...

[13:08] * colomon already has gmake installed, it turns out....

[13:09] <dalek> rakudo/nom: 1717d57 | (Elizabeth Mattijsen)++ | src/core/Supply.pm:

[13:09] <dalek> rakudo/nom: Add Supply.Promise, channeling from jnthn++

[13:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1717d57787

[13:10] <colomon> [Coke]: "gmake: write error"

[13:12] <colomon> and it's definitely gmake installed by ports

[13:12] <colomon> and it frakking seg faults in the same place

[13:12] <[Coke]> O_o

[13:13] <colomon> it's definitely a different executable -- it's 3.82 versus 3.81 for make

[13:14] * colomon ponders building 4.0 by hand

[13:18] <lizmat> jnthn: from a code simplification perspective, only those methods that have a class in them that "does Supply"

[13:18] <lizmat> jnthn: really need to live in SupplyOperations, but others don't, right ?

[13:27] <moritz> oh, fun. At $work we have a customer database, including a pseudo customer for the company itself, and all infrastructural services are associated with that self-customer

[13:27] <moritz> today, sombody managed to accidentally rename that self-customer

[13:28] <moritz> (before, it was unchanged since its creation 21 years ago)

[13:29] <moritz> "what could possibly go wrong" applies in full measure :-)

[13:30] * lizmat is reminded of a "test" hotel located at the head office of Booking

[13:30] <lizmat> that should have always been disabled, but evidently wasn't when guests where starting to show up at the head office asking for their room :-)

[13:30] <moritz> lol

[13:32] <moritz> guess the rooms had interesting prices :-)

[13:32] <lizmat> yup  :-)

[13:39] <[Coke]> perl 6 alert found this: http://cyberuniverses.com/perl6-modules/

[13:42] *** guru joined
[13:42] *** guru is now known as Guest13715

[13:42] <moritz> given that http://cyberuniverses.com/pray/ seems to be raydiak++'s cool rendering project, I'd guess that URL is his sandbox version of modules.perl6.org :-)

[13:43] *** Guest13715 is now known as ajr_

[13:47] <cognominal> pray, eat and write code, love   :)

[13:49] <[Coke]> moritz: aye. I'm just happy the google alert found something other than the ir clogs.

[13:54] *** jnap joined
[13:55] <colomon> how do you eat code?

[13:56] *** rurban left
[13:56] *** anaeem1_ joined
[13:57] *** jnap left
[13:58] <dalek> specs: 89aa2ca | (Elizabeth Mattijsen)++ | S17-concurrency.pod:

[13:58] <dalek> specs: Spec Supply.(start|schedule-on), channeling jnthn++

[13:58] <dalek> specs: review: https://github.com/perl6/specs/commit/89aa2ca8e4

[14:01] *** kaare_ joined
[14:02] <colomon> [Coke], lizmat: freshly built make 4.0 still gets the write error  :\

[14:02] <colomon> and the segfault

[14:02] <lizmat> but if you do a make install immediately again, it works, no?

[14:03] *** darutoko- joined
[14:03] <colomon> lizmat: probably

[14:04] <colomon> as far as I can tell, EVERYTHING is successful the first time, the error message comes after the work of the install is 100% complete

[14:04] <lizmat> ah, so it is technically not even needed ?

[14:04] <colomon> as far as I can tell

[14:05] <colomon> the problem is that the error screws up rakudobrew

[14:05] *** BenGoldberg joined
[14:06] <colomon> it's hardly a catastrophe, it just makes rakudobrew less awesome on OS X

[14:06] *** darutoko left
[14:08] *** logie joined
[14:09] <woolfy> Pictures of last weekend's Dutch Perl Workshop (with jnthn and lizmat and others): https://www.flickr.com/photos/wendyga/sets/72157644383486661/

[14:09] *** daniel-s_ left
[14:10] *** rurban joined
[14:11] <lizmat> Camelia up to spec: https://www.flickr.com/photos/wendyga/14026625866/in/set-72157644383486661

[14:14] <Woodi> heja everyone :)

[14:14] <vendethiel> o/, *

[14:15] <Woodi> r: grammar words { token TOP { \w+ % [\h?] }};  say words.parse("abc def ghi");

[14:15] <camelia> rakudo-{parrot,jvm,moar} c15415: OUTPUT«｢abc def ghi｣␤␤»

[14:15] <Woodi> is that ok >

[14:15] <Woodi> ?

[14:16] *** daniel-s_ joined
[14:17] *** xinming__ joined
[14:18] <jnthn> lizmat: yes, that's why they are in SupplyOperations

[14:18] <lizmat> ok, then I'll move the ones that don't need to be there to Supply.pm, ok?

[14:18] <jnthn> wfm, I think

[14:18] <jnthn> but I'm brainfried and will need to help folks debug multi-threaded programs with locks now :)

[14:19] <FROGGS> m: grammar words { token TOP { [$<word>=\w+]+ % [\h?] }};  say words.parse("abc def ghi"); # Woodi: kinda

[14:19] <camelia> rakudo-moar c15415: OUTPUT«｢abc def ghi｣␤ word => ｢abc｣␤ word => ｢def｣␤ word => ｢ghi｣␤␤»

[14:19] <lizmat> :-)

[14:19] <Woodi> so, ok ? :)

[14:20] *** xinming_ left
[14:21] <lizmat> jnthn: isn't that whole role problem down to the fact that:

[14:21] <lizmat> m: role A { method a { say $?ROLE } }; A.new.a  # works

[14:21] <camelia> rakudo-moar c15415: OUTPUT«(A)␤»

[14:22] <lizmat> and 

[14:22] <lizmat> m: role A { method a { BEGIN say $?ROLE } }; A.new.a  # does not work

[14:22] *** xinming_ joined
[14:22] <camelia> rakudo-moar c15415: OUTPUT«===SORRY!===␤Could not instantiate role 'A':␤Cannot invoke this object (REPR: P6opaque, cs = 0)␤»

[14:22] <lizmat> because maybe otherwise you could say someting like:

[14:22] <lizmat> m: role A {  class Foo does $?ROLE {} }

[14:22] <camelia> rakudo-moar c15415: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/HkPYMAkQlC␤Unable to parse class definition␤at /tmp/HkPYMAkQlC:1␤------> [32mrole A {  class Foo does [33m⏏[31m$?ROLE {} }[0m␤    expecting any of:␤        statement list␤        p…»

[14:23] <lizmat> std: role A {  class Foo does $?ROLE {} }

[14:23] <camelia> std ec3d853: OUTPUT«[31m===[0mSORRY![31m===[0m␤Invalid role name at /tmp/GFZDvD1LVz line 1:␤------> [32mrole A {  class Foo does [33m⏏[31m$?ROLE {} }[0m␤    expecting typename␤Parse failed␤FAILED 00:01 122m␤»

[14:23] <jnthn> lizmat: um, but classes are built at BEGIN time :)

[14:23] <jnthn> It's a bit more involved than that, though

[14:23] <lizmat> ah, duh, of course

[14:23] <jnthn> It's that you have to invoke the role's body block

[14:23] <jnthn> it's like doing

[14:23] <jnthn> sub foo() { BEGIN foo() } :)

[14:24] <lizmat> gotcha

[14:24] <jnthn> One of those "wish it weren't that way, but one-pass stuff means it likely has to be" things.

[14:24] *** xinming__ left
[14:27] *** ClarusCogitatio left
[14:27] *** Mouq joined
[14:28] <lizmat> one would almost wish for a Promise, that would compile the classes inside the role after the role has been composed

[14:28] *** ClarusCogitatio joined
[14:28] *** jnap joined
[14:29] *** pdcawley left
[14:31] *** bluescreen10 joined
[14:32] *** Mouq left
[14:33] <jnthn> lizmat: I...wha...my head hurts. :P

[14:33] <lizmat> :-)

[14:42] <moritz> role A { ... ; LEAVE { class B does A { ... } } }

[14:43] <jnthn> LEAVE is also runtime :P

[14:43] <moritz> .oO( BEGINLEAVE )

[14:43] <jnthn> You're the first person I've seen declare a class in a LEAVE block, though :P

[14:43] <lizmat> wasn't COMPOSE supposed to do something like this ?

[14:44] *** jnap1 joined
[14:44] <lizmat> S12:2551

[14:44] <synopsebot> Link: http://perlcabal.org/syn/S12.html#line_2551

[14:44] <lizmat> no, actually S04:1420

[14:44] <synopsebot> Link: http://perlcabal.org/syn/S04.html#line_1420

[14:45] <lizmat> and that's also at the wrong time, according to spec  :-)

[14:45] *** jnap left
[14:47] *** ClarusCogitatio left
[14:52] *** ClarusCogitatio joined
[14:54] *** ClarusCogitatio left
[14:55] <dalek> rakudo/nom: 12338e6 | (Elizabeth Mattijsen)++ | src/core/Supply (2 files):

[14:55] <dalek> rakudo/nom: Migrate methods from SupplyOperations to Supply

[14:55] <dalek> rakudo/nom: 

[14:55] <dalek> rakudo/nom: Many of these are not creating inner classes that "does Supply", so they can

[14:55] <dalek> rakudo/nom: live inside the Supply role proper, thereby eliminating a layer of indirection.

[14:55] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/12338e6dc3

[14:55] *** ClarusCogitatio joined
[14:58] <tadzik> hehe, on this pic from NLPW mst looks like a giant: http://i.imgur.com/9qnE814.jpg

[14:58] <tadzik> "what is this? A laptop for ants?"

[14:59] *** treehug88 joined
[15:00] <FROGGS> he looks like a skinny hagrid, aye :o)

[15:03] <jnthn> well, there's today's class done.

[15:05] <lizmat> jnthn++

[15:05] <jnthn> Nice group. And I like teaching concurrency :)

[15:07] *** shabble joined
[15:07] *** shabble left
[15:07] *** shabble joined
[15:07] *** denis_boyun_ left
[15:07] <jnthn> hotel &

[15:07] <lizmat> and concurrently, as you taught several people on several channels

[15:09] *** shabble left
[15:12] <dalek> rakudo/nom: e75fd4a | (Elizabeth Mattijsen)++ | src/core/SupplyOperations.pm:

[15:12] <dalek> rakudo/nom: Esthetics: $s -> $source, :source($s) -> :$source

[15:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e75fd4a9ab

[15:12] *** plobsing left
[15:14] *** treehug8_ joined
[15:14] *** bluescreen100 joined
[15:16] *** treehug88 left
[15:18] *** bluescreen10 left
[15:19] <timotimo> post published

[15:19] *** raiph joined
[15:20] <lizmat> timotimo++

[15:21] *** donaldh joined
[15:21] *** SamuraiJack left
[15:22] *** kurahaupo left
[15:26] *** [Sno] left
[15:26] *** igorsutton left
[15:27] <japhb> timotimo: Thank you again for doing p6weekly.  On weeks that I'm caught up, it serves as good reminders; on weeks I'm way behind (like this one) it helps me get a good idea what I've missed.  And you're doing a damn good job of it (I've seen weekly #perl6 summaries come and go, and yours is excellent).

[15:27] *** igorsutton joined
[15:28] <FROGGS> timotimo++

[15:28] <japhb> timotimo++ # quite

[15:29] <japhb> timotimo: Can you change the stylesheet so that unvisited links are a bit more obvious?  (If it seems obvious now, it may be my color blindness is the issue.)  Sometimes I have to roll over all the text to see what I can click on.

[15:30] <japhb> Checking now, it looks like visited v. unvisited doesn't matter.  They're both very hard for me to see.

[15:31] *** hoverboard joined
[15:31] *** igorsutton left
[15:36] *** Callum joined
[15:36] <lizmat> m: say 1 ~~ Duration   # wonders how we can make that True

[15:36] <camelia> rakudo-moar 1717d5: OUTPUT«False␤»

[15:37] *** zakharyas left
[15:37] <vendethiel> m: 1 does Duration; say 1 ~~ Duration; # don't hit me, please

[15:37] <camelia> rakudo-moar 1717d5: OUTPUT«Cannot mix in non-composable type Duration into object of type Int␤  in sub infix:<does> at src/gen/m-CORE.setting:16755␤  in block  at /tmp/fjICy51Hgd:1␤␤»

[15:37] <dalek> rakudo/nom: 165bb97 | (Elizabeth Mattijsen)++ | src/core/SupplyOperations.pm:

[15:37] <dalek> rakudo/nom: Add noop handling to Supply.(stable|delay)

[15:37] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/165bb97059

[15:38] <BenGoldberg> m: 1 but Duration;

[15:38] <camelia> rakudo-moar 1717d5: OUTPUT«Cannot mix in non-composable type Duration into object of type Int␤  in sub infix:<but> at src/gen/m-CORE.setting:16782␤  in block  at /tmp/4J0B6Ww1fJ:1␤␤»

[15:38] <lizmat> vendethiel: it's more about subs/methods taking a Duration, and allowing specification like delay(1)

[15:39] <vendethiel> lizmat: I'm just kidding :-)

[15:39] <BenGoldberg> m: say Duration(1)

[15:39] <camelia> rakudo-moar 1717d5: OUTPUT«Cannot find method 'Duration'␤  in block  at /tmp/za0oRMS3FN:1␤␤»

[15:39] <BenGoldberg> m: say 1.Duration

[15:39] <camelia> rakudo-moar 1717d5: OUTPUT«No such method 'Duration' for invocant of type 'Int'␤  in block  at /tmp/Kdxm0vflbY:1␤␤»

[15:39] <BenGoldberg> m: say Duration.new(1)

[15:39] <camelia> rakudo-moar 1717d5: OUTPUT«1␤»

[15:40] *** Callum left
[15:40] <dalek> roast: 2db6b29 | (Elizabeth Mattijsen)++ | S17-supply/delay.t:

[15:40] <dalek> roast: Add tests for Supply.delay

[15:40] <dalek> roast: 

[15:40] <dalek> roast: We seem to have a problem with the ThreadPool scheduler case :-(

[15:40] <dalek> roast: review: https://github.com/perl6/roast/commit/2db6b29a24

[15:41] <BenGoldberg> If all else fails, make those subs into multisubs, with one version taking Duration, and another version taking Int, wrapping the Int in a Duration, and calling the other version.

[15:41] <dalek> rakudo/nom: 50b69ee | (Elizabeth Mattijsen)++ | t/spectest.data:

[15:41] <dalek> rakudo/nom: Add testing of Supply.delay

[15:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/50b69eeabe

[15:41] <lizmat> BenGoldberg: yes, but it feels to me that anything that takes a Duration, should also be taking "1"

[15:42] <lizmat> so making multis is a workaround in my view

[15:42] <TimToady> that is not how type systems work

[15:42] <yoleaux> 27 Apr 2014 17:27Z <raiph> TimToady: is timotimo's approach sufficient to mean no need for non-consuming |args? ^^ http://irclog.perlgeek.de/perl6/2014-04-27#i_8644698

[15:42] <BenGoldberg> That's why I said, "If all else fails" ;)

[15:43] <TimToady> how do you know the 1 doesn't mean 1 turtle, or 1 megaparsec, or 1 element in the array?

[15:43] <BenGoldberg> How about have the subs take Duration|Int?

[15:43] *** guru joined
[15:43] <TimToady> if that's your intent, that's what Duration() is supposed to do

[15:43] *** guru is now known as Guest11760

[15:44] <BenGoldberg> The more important thing, I think, is that if there's one version of a sub which takes a duration, and another which takes a epoch time, does an int get turned into a duration or a time?

[15:44] <TimToady> but coercion types are not yet implemented

[15:44] <TimToady> type systems cannot read yourmind

[15:45] *** ajr_ left
[15:45] <lizmat> S02:1487 seems to indicate that you *are* allowed to just specify a real to a sub

[15:45] <synopsebot> Link: http://perlcabal.org/syn/S02.html#line_1487

[15:46] <lizmat> I guess this would mean multis in your view, TimToady ?

[15:46] <lizmat> and not some magic that would accept 1 as a Duration?

[15:46] <TimToady> currently, yes, until coercion types like Duration(Real) are implemented

[15:47] <BenGoldberg> How about another solution: Create a small handful of postfix operators, "millisecond", "second", "minute", etc, which take Ints and return Durations, so that a person can pass "1 second" to a sub which wants a duration.

[15:47] <timotimo> japhb, raiph, thank you :)

[15:47] *** Guest11760 is now known as ajr_

[15:47] <lizmat> BenGoldberg: this was actually discussed at the NLPW  :-)

[15:47] <timotimo> unfortunately i don't have access to the stylesheet, i'd have to either pay $bignum money, set up my own wordpress (and expose my server to oodles of attacks) or change the theme completely

[15:47] <lizmat> but I'm not sure how TimToady would feel about that

[15:49] <TimToady> 1\mille\second

[15:50] <timotimo> raiph, japhb: i changed to a different theme that ought to be a bit more readable

[15:53] <lizmat> m: say 2i; say 2 i'

[15:53] <camelia> rakudo-moar 12338e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/KWc7hOIxHB␤Two terms in a row␤at /tmp/KWc7hOIxHB:1␤------> [32msay 2i; say 2 [33m⏏[31mi'[0m␤    expecting any of:␤        postfix␤        infix stopper␤        infix or meta-infi…»

[15:53] <lizmat> m: say 2i'

[15:53] <camelia> rakudo-moar 12338e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/vNclXmCgNm␤Two terms in a row␤at /tmp/vNclXmCgNm:1␤------> [32msay 2i[33m⏏[31m'[0m␤    expecting any of:␤        postfix␤        infix stopper␤        infix or meta-infix␤     …»

[15:54] <lizmat> so why is "2 i" TTIAR?   is that a rakudobug?

[15:58] <FROGGS> lizmat: remove that single quote

[15:58] <FROGGS> bbiab

[15:59] <moritz> m: say 2 i

[15:59] <camelia> rakudo-moar 12338e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/1NS8ddxDmr␤Two terms in a row␤at /tmp/1NS8ddxDmr:1␤------> [32msay 2 [33m⏏[31mi[0m␤    expecting any of:␤        postfix␤        infix stopper␤        infix or meta-infix␤     …»

[15:59] <moritz> m: say (my $) ++

[15:59] <camelia> rakudo-moar 12338e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/UIGLtPKLgZ␤Unsupported use of $) variable; in Perl 6 please use $*EGID␤at /tmp/UIGLtPKLgZ:1␤------> [32msay (my $)[33m⏏[31m ++[0m␤»

[15:59] <moritz> my: say $_ ++

[16:00] <moritz> m: say $_ ++

[16:00] <camelia> rakudo-moar 12338e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/9MWkQtzQ_e␤Two terms in a row␤at /tmp/9MWkQtzQ_e:1␤------> [32msay $_ ++[33m⏏[31m<EOL>[0m␤    expecting any of:␤        postfix␤        infix stopper␤        infix or meta-infix…»

[16:00] <lizmat> ok, gotcha  :-)

[16:00] <moritz> lizmat: no whitespace allowed between term and postfix

[16:00] <lizmat> make sense if you're a little more awake  :-)

[16:04] *** FROGGS left
[16:08] <dalek> rakudo/nom: 3f74909 | (Elizabeth Mattijsen)++ | src/core/Supply (2 files):

[16:08] <dalek> rakudo/nom: Supply.schedule_on -> schedule-on (Perl6ish++)

[16:08] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3f7490917b

[16:09] <lizmat> jnthn: ^^^  this probably breaks your presentation

[16:09] <BenGoldberg> m: say (my $ )++

[16:09] <camelia> rakudo-moar 12338e: OUTPUT«0␤»

[16:10] * vendethiel would really like a `use noperl5` :(

[16:10] <moritz> std: say (my $)++

[16:10] <camelia> std ec3d853: OUTPUT«ok 00:01 126m␤»

[16:11] <BenGoldberg> r: say 2i

[16:11] <camelia> rakudo-jvm 12338e: OUTPUT«(timeout)»

[16:11] <camelia> ..rakudo-{parrot,moar} 12338e: OUTPUT«0+2i␤»

[16:12] * BenGoldberg attempts to apply boot to jakudo's rear end.

[16:16] *** Mouq joined
[16:16] *** ajr_ left
[16:18] *** ajr joined
[16:18] *** ajr is now known as Guest30438

[16:19] *** donaldh left
[16:19] *** pecastro left
[16:19] *** Guest30438 is now known as ajr_

[16:19] *** FROGGS joined
[16:20] *** Mouq left
[16:21] <jnthn> lizmat: I...don't know if I like htat.

[16:21] <jnthn> *that

[16:22] <jnthn> We've tended not to use - in setting methods...

[16:23] <FROGGS> m: say 2\ i

[16:23] <camelia> rakudo-moar 12338e: OUTPUT«0+2i␤»

[16:23] <japhb> jnthn: Just read your 2014-nlpw-reactive talk (thanks timotimo++ for linking to it).  It's really impressive, even for you.  Halfway through I was getting ready to ask you if I could adapt some of the examples for the "make the hard things possible" section of my talk-in-progress.  By the end, I was thinking "Now I'm going to have to find a new hard thing, because this makes hard things *easy*."

[16:24] *** vaskozl left
[16:25] <japhb> Speaking of which ... what is the license on example code from your talks?

[16:25] <jnthn> japhb: Well, they're the things that sound easy until you try to do them.

[16:25] *** anaeem1_ left
[16:25] <jnthn> japhb: And most ways to do them hurt.]

[16:25] <japhb> True.  :-/

[16:26] <jnthn> I don't think "wait for this to be unchanged for a second" is a hard concept.

[16:26] <jnthn> If you don't a non-programmer about it, they'd probably grok it rather quickly and then wonder why it's a big deal :)

[16:27] <jnthn> s/don't/told/

[16:27] <japhb> True, but for an at least somewhat experienced programmer, the mind reels.

[16:27] <jnthn> The code...hm, this talk actually resulted in a suffcient amount that it probably does want a license rather than just "fair use" :)

[16:28] *** raiph left
[16:30] *** raiph joined
[16:31] <jnthn> japhb: https://github.com/jnthn/perl6-reactive-samples now has a license.

[16:32] <jnthn> Lemme know if you need anything more than that.

[16:32] <japhb> Nah, that's good.

[16:32] <jnthn> k :)

[16:32] <jnthn> Have fun :)

[16:33] <japhb> Thx

[16:33] *** [Sno] joined
[16:33] <jnthn> lizmat: On the Duration thing - I think multi candidates that take them and delegate to the number-taking ones make sense.

[16:34] <jnthn> Hm, I think that suggestion agrees with what TimToady said... :)

[16:41] <colomon> lizmat++ # passed me on her number of commits to rakudo!

[16:41] *** anaeem1 joined
[16:41] *** vaskozl joined
[16:43] <japhb> jnthn: Do you happen to know why r-j requires a newer JDK than 1.7.0_21 to build?  What bug are we triggering?

[16:44] <woolfy> (lizmat is 'afk' for the moment)

[16:45] <colomon> woolfy: give her a hug from me.

[16:46] <woolfy> colomon: will do

[16:47] <jnthn> japhb: Hm, I boild on 1.7.0_21 at home, I *think*. Or maybe it's one later.

[16:47] <colomon> so… if I run make in valgrind, no memory errors detected, no error message from make, and everything appears to have worked correctly.  (this on OS X)

[16:47] <colomon> woolfy++

[16:47] <jnthn> japhb: But it basically boils down to, "invokedynamic sucks on earlier JVMs", typically. :(

[16:47] *** fhelmberger left
[16:51] <BenGoldberg> Is there any workaround for lack of working invokedynamic?  Even a horribly slow (but correctly functioning) workaround might be acceptable, if only to show that it's doable.

[16:52] <jnthn> BenGoldberg: The "workaround" is to use a new enough JVM.

[16:53] <jnthn> BenGoldberg: We're onto JDK8 now, and discussing problems in >20-update old JDK7.

[16:53] <jnthn> BenGoldberg: I'm inclined to let time solve us this one. :)

[16:53] <jnthn> Given we don't exactly have an epic abundance of resources.

[16:53] <raiph> timotimo++ # weekly news and switch to theme that makes links pop

[16:53] <BenGoldberg> Fair enough :)

[16:55] <jnthn> Granted it's annoying that the old ones may be what's packaged, but givne that Java 8 seems to have some stuff that might make me find the language tolerable, I hope 8 will be swiftly packaged and upgraded to :)

[16:55] <dalek> specs: 4a114b7 | (Elizabeth Mattijsen)++ | S17-concurrency.pod:

[16:55] <dalek> specs: s/schedule-on/schedule_on

[16:55] <dalek> specs: review: https://github.com/perl6/specs/commit/4a114b7c27

[16:56] <jnthn> Phew, now we're back to is-prime being the only exception I can remember I have to remember ;)

[16:56] <dalek> rakudo/nom: ab7b1fe | (Elizabeth Mattijsen)++ | src/core/Supply (2 files):

[16:56] <dalek> rakudo/nom: Revert "Supply.schedule_on -> schedule-on (Perl6ish++)"

[16:56] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ab7b1fed8b

[16:57] <lizmat> :-)

[16:57] <lizmat> cycling&

[16:57] <jnthn> enjoy :)

[16:57] <tadzik> hmm, why don't we like schedule-on?

[16:57] <japhb> Why _?

[16:57] <japhb> jinx

[17:00] <jnthn> japhb: There's nothing else anywhere in the concurrency stuff that I know of that uses - over _, so it'd be a bit of a surprise to find an odd one out..

[17:00] <japhb> Oh sure, I meant in the larger sense of "Why should we choose _ over - anywhere in the standard sub/method names?"

[17:01] <jnthn> japhb: Ah. I was mostly just going for consistency with things we already have more than having any particular preference.

[17:02] <woolfy> colomon++  :  hug done  :-)

[17:02] <colomon> woolfy: thank you.  :)

[17:09] *** molaf joined
[17:12] *** rurban left
[17:16] *** ajr_ left
[17:20] *** denis_boyun joined
[17:22] <jnthn> dinner &

[17:26] <[Coke]> I would tend to prefer - over _ but have no desire to go through that deprecation phase.

[17:29] <TimToady> .oO("We can't fix that--we already have five users!")

[17:30] <[Coke]> Didn't say shouldn't, said I didn't want to. :)

[17:31] *** rurban joined
[17:31] * TimToady didn't say anything at all

[17:32] <japhb> At least now we have a nice way to deprecate, notify users, and still keep things working.

[17:34] <[Coke]> japhb: aye, definitely doable.

[17:36] *** sftp left
[17:38] *** sftp joined
[17:40] *** darutoko joined
[17:43] *** darutoko- left
[17:44] *** darutoko- joined
[17:45] *** kurahaupo joined
[17:45] *** guru joined
[17:45] *** guru is now known as ajr_

[17:46] *** politico joined
[17:46] *** politico left
[17:47] *** darutoko left
[17:55] *** denis_boyun left
[17:55] *** denis_boyun joined
[18:04] *** Mouq joined
[18:09] *** Mouq left
[18:10] <dalek> nqp/loop_labels: e76f290 | (Tobias Leich)++ | src/vm/moar/QAST/QASTOperationsMAST.nqp:

[18:10] <dalek> nqp/loop_labels: replace op throwlabel by throwdyn for labels

[18:10] <dalek> nqp/loop_labels: review: https://github.com/perl6/nqp/commit/e76f290d77

[18:11] <dalek> rakudo/loop_labels_test: ed78569 | (Tobias Leich)++ | src/ (4 files):

[18:11] <dalek> rakudo/loop_labels_test: test for supporting loop labels

[18:11] <dalek> rakudo/loop_labels_test: review: https://github.com/rakudo/rakudo/commit/ed78569122

[18:14] *** hoverboard left
[18:16] *** go|dfish left
[18:20] *** go|dfish joined
[18:22] *** rindolf left
[18:22] *** eiro left
[18:23] *** darutoko joined
[18:24] *** eiro joined
[18:24] *** darutoko- left
[18:27] *** go|dfish left
[18:32] *** go|dfish joined
[18:32] *** anaeem1 left
[18:32] *** anaeem1 joined
[18:33] *** Rotwang joined
[18:33] <Rotwang> druga transza tez przyszla?

[18:33] *** anaeem1 left
[18:34] *** anaeem1 joined
[18:36] *** darutoko- joined
[18:37] *** anaeem1 left
[18:37] *** anaeem1 joined
[18:37] *** darutoko left
[18:43] *** darutoko- left
[18:45] *** eiro left
[18:46] *** eiro joined
[18:47] * masak .oO( waiting for the druga transza to drop... )

[18:51] <nwc10> Google Translate was unable to make sense of Rotwang's line form e

[18:51] <nwc10> me

[18:58] <Rotwang> wrong window, heh [;

[18:59] <FROGGS> Rotwang: so you are selling drugs on the other window?

[18:59] <masak> nwc10: oh? it gave me something like "is a second instalment on the way?"

[19:00] <jnthn> I can deal with z after s just fine. After c and d is ok too. But after r? :D

[19:00] <nwc10> masak: yes, strange, for me it wouldn't translate druga

[19:01] * jnthn guesses it's either "other", "second", or some case declension of "friend" :)

[19:01] <masak> jnthn: it's just a /ʐ/

[19:01] <jnthn> Also I guess rz may be like the Czech ř, but I never learned how to say that...

[19:01] <jnthn> masak: Oh...

[19:01] <masak> jnthn: you probably know it as ż

[19:01] <jnthn> aha :)

[19:02] <masak> or, hm, ř

[19:02] <jnthn> I'm a dire critic of writing that "rz" :P

[19:02] <masak> :P

[19:02] <masak> as long as you don't pronounce it with an acute accent, it's fine...

[19:02] <FROGGS> that seems to be the right moment to *groan*

[19:03] <masak> *gřoan*

[19:03] <jnthn> Seems I've made my mark... :)

[19:03] <nwc10> caron everyone, like nothing happened...

[19:04] <FROGGS> nwc10: btw, somehow I can't build moar with clang :/

[19:04] <nwc10> oh mmm, odd. I've not tried that

[19:04] <nwc10> mmm, "my" machine has clang version 3.0 (tags/RELEASE_30/final)

[19:04] <FROGGS> perl Configure.pl --compiler=clang

[19:04] <FROGGS> Configuring native build environment ................... OK

[19:04] <FROGGS>     probing whether your compiler thinks that it is gcc  Can't compile simple gcc probe, so something is badly wrong at build/probe.pm line 92.

[19:04] * jnthn burries the háček

[19:05] <FROGGS> Debian clang version 3.2-7ubuntu1 (tags/RELEASE_32/final) (based on LLVM 3.2)

[19:06] * masak .oO( MJD burritos the monad )

[19:06] <nwc10> FROGGS: I don't know if there's a good way to diagnose that, other than removing the  >$devnull 2>&1 from build/probe.pm

[19:07] <FROGGS> In file included from try.c:1:

[19:07] <FROGGS> /usr/include/stdlib.h:32:10: fatal error: 'stddef.h' file not found

[19:08] <FROGGS> ahh, so clang has not the right include paths built in?

[19:10] *** Alina-malina left
[19:13] <nwc10> no good idea, but that seems to be a particularly impressive error

[19:15] <FROGGS> *g*

[19:20] *** Alina-malina joined
[19:21] *** hoverboard joined
[19:22] <raydiak> * *, * o/

[19:23] <vendethiel> do you speak smurf, raydiak?

[19:24] <raydiak> *!

[19:25] <raydiak> erm, good afternoon, that is :)

[19:25] <FROGGS> nwc10: adding -I/usr/lib/llvm-3.2/lib/clang/3.2/include seems to help

[19:25] <raydiak> jnthn: do you know the exact minimum required java version for nqp and rakudo on jvm?

[19:25] <masak> m: sub term:<*> { "smurf" }; say *

[19:25] <camelia> rakudo-moar ab7b1f: OUTPUT«*␤»

[19:25] <masak> dang.

[19:25] <vendethiel> welp.

[19:25] <vendethiel> that's a bit surprising

[19:25] <colomon> m: say *

[19:25] <camelia> rakudo-moar ab7b1f: OUTPUT«*␤»

[19:26] <vendethiel> that's a bit *less* surprising now

[19:26] <masak> any reason I can't override *?

[19:26] <vendethiel> m: sub term:<+> { "smurf" }; say +

[19:26] <camelia> rakudo-moar ab7b1f: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/Zb6DKCSMbu␤Confused␤at /tmp/Zb6DKCSMbu:1␤------> [32msub term:<+> { "smurf" }; say +[33m⏏[31m<EOL>[0m␤    expecting any of:␤        argument list␤        prefix or term␤        p…»

[19:26] <vendethiel> I guess it has to exist

[19:26] <masak> aww.

[19:27] <masak> vendethiel: never heard of such a rule.

[19:27] <vendethiel> "technically has to"

[19:29] <raiph> A 'use Grammar::Generative' (copy of https://raw.githubusercontent.com/jnthn/grammar-generative/master/lib/Grammar/Generative.pm6) gets me a "Merging GLOBAL symbols failed: duplicate definition of symbol &EXPORT". FROGGS, jnthn, anyone, know what I need to do?

[19:32] <FROGGS> raiph: can you strip the 'our' of the 'our sub EXPORT'? does that help

[19:32] <FROGGS> ?

[19:33] *** hoverboard is now known as moistcherry

[19:33] * jnthn confuses raydiak's greeting with a crontab

[19:33] *** molaf_ joined
[19:34] <jnthn> raydiak: No, I don't know the exact minimum. I know 7.0.21 or so at home works...and I had "fun" with things below that.

[19:34] <raydiak> jnthn: just thought it'd be nice if configure checked the java version

[19:35] <jnthn> raiph: Whoa, I thought that module caused blindness to all who looked... :)

[19:36] <jnthn> Agree with FROGGS though, the "our" is probably bad.

[19:36] <raiph> FROGGS++ # yet another of your many fixes in one guess, thanks :)

[19:36] <FROGGS> \o/

[19:36] *** molaf left
[19:37] <jnthn> whoa, that code...

[19:39] <raiph> jnthn: i'm having a lot of fun working with grammars and the debugger :)

[19:39] *** Rotwang left
[19:41] <jnthn> The mutiple mutually recursive use of gather/take. The fact that the only comment in the most hundred lines of it is "# Bit of a cheat...". A variable named $submatchish. A class called "grammar". And mixing in to the importing language's actions. 

[19:41] <jnthn> *most complicated

[19:42] <jnthn> I either should or shouldn't be allowed to write code when suffering depression :P

[19:42] <masak> ...mutually recursive...? o.O

[19:42] <vendethiel> .oO(mutually depressive)

[19:43] <FROGGS> hehe

[19:45] <jnthn> masak: method compile, in class Generator

[19:47] <jnthn> The one-line implementation of co-LTM is also somewhat entertaining :)

[19:47] <jnthn> .take for @possibles.sort(-*.chars);

[19:48] <masak> :)

[19:49] <masak> that's so co!

[19:49] * [Coke] hugs jnthn++

[19:50] * masak hugs jnthn++

[19:50] <jnthn> [Coke]: Well, I wrote it quite a lot of months ago. I'm kinda better these days. :)

[19:50] <jnthn> On average, at least.

[19:52] *** Mouq joined
[19:53] <jnthn> Mouq! \o/

[19:53] <masak> Mouq! \o/

[19:54] *** igorsutton joined
[19:55] <masak> igorsutton: greetings.

[19:55] <igorsutton> masak:hi

[19:57] *** Mouq left
[19:57] <masak> ...earthling.

[19:57] *** igorsutton left
[19:57] <masak> :/

[19:58] <raiph> FROGGS: I'm considering options for the output of the CPAN/MIRRORED_BY parse

[19:58] <jnthn> .oO( Playing the role of channel alien: the leading way to make folks feel welcome! )

[19:58] <FROGGS> raiph: what options?

[19:59] <raiph> FROGGS: raw parse tree? some cleaner data structure? JSON?

[19:59] <masak> jnthn: I didn't mean to alienate him!

[20:01] <raiph> FROGGS: also, you presumably want just the subset of mirrors that have P6 code on them

[20:01] <raiph> FROGGS: and presumably the idea is that MIRROR_BY includes the metadata to indicate that

[20:01] *** anaeem___ joined
[20:02] <FROGGS> raiph: this file just needs to be turned into a list or hashes or so, we will not gain the knowledge what mirrors do provide P6 stuff in future

[20:02] <FROGGS> raiph: I do not think we can change the information of MIRRORED.BY at all

[20:03] *** anaeem1 left
[20:04] <FROGGS> raiph: it really is about parsing the given file, not to create the file with information we'd like to have in there

[20:11] <raydiak> raiph: I roughed out a crude version for fun, dunno if it's any use but figured I'd share: https://gist.github.com/raydiak/11382643

[20:14] <raiph> FROGGS: I realize it's just about parsing, not changing it

[20:15] <FROGGS> raiph: exactly, we get this file from servers of the cpan network

[20:15] *** denis_boyun left
[20:15] <FROGGS> and since we want to connect to them, we need to know what mirrors are there, to let the user pick nearest neighbours

[20:17] <raiph> FROGGS: I was assuming at least one of the 250+ mirrors would choose to not mirror P6 stuff

[20:18] <FROGGS> raiph: that might be possible that they set up their rsync to drop /Perl6/, but there is no intention to write that down to that file

[20:18] <FROGGS> so we won't know

[20:21] *** vaskozl left
[20:24] <lizmat> let's not assume /Perl6/ is dropped

[20:24] <lizmat> it would require action from the mirror admins

[20:24] <lizmat> and most mirrors are really low maintenance afaik

[20:24] <FROGGS> lizmat: yes, I also assume that they do not really care what is in the tar.gz, and therefore not actively blocck Perl6

[20:25] <FROGGS> because, there is no reason to do so, it is not like we will upload terrabytes of dists soon

[20:26] <FROGGS> that reminds me that I'm still waiting for a reply from andk :/

[20:29] *** igorsutton joined
[20:30] <raiph> FROGGS: your simple version will inevitably be faster than the code I've created

[20:30] <raiph> (a grammar, and warnings about syntax changes, so takes order of a second to run)

[20:30] *** denis_boyun_ joined
[20:31] *** kurahaupo left
[20:31] *** sftp left
[20:31] <woolfy> I mention to lizmat that a new neighbour to the sun is discovered: a brown dwarf, the coldest star sofar ever discovered, at 7,2 lightyears distance...  her reaction: "cool"   (  http://www.iflscience.com/space/coldest-known-star-discovered-close-our-system )

[20:32] *** dmol left
[20:32] *** dmol joined
[20:33] *** igorsutton left
[20:34] <BenGoldberg> One of these days, scientists will rename Saturn from being a planet to being some some sort of dwarf start -- that'll be really close ;)

[20:36] *** Alula_ left
[20:37] *** Alula_ joined
[20:37] <dalek> specs: 85d112f | (Elizabeth Mattijsen)++ | S32-setting-library/Containers.pod:

[20:37] <dalek> specs: Spec List.(grep-index|first-index|first-rindex)

[20:37] <dalek> specs: review: https://github.com/perl6/specs/commit/85d112f4aa

[20:40] <geekosaur> unlikely, although it's still an open question whether what they found is brown dwarf or planet

[20:42] <geekosaur> (the cutoff is something like 13x Jupiter's mass; unless we find some really wild physics somewhere that will rewrite a lot more than just the definition of planet, it's unlikely to shrink)

[20:43] *** rurban left
[20:49] *** kaare_ left
[20:51] *** sftp joined
[20:53] *** labster left
[20:55] *** igorsutton joined
[20:57] <dalek> roast: 73c090c | (Elizabeth Mattijsen)++ | packages/Test/Tap.pm:

[20:57] <dalek> roast: Spaceo in conditional text

[20:57] <dalek> roast: review: https://github.com/perl6/roast/commit/73c090ca0a

[20:57] <dalek> roast: f3f563b | (Elizabeth Mattijsen)++ | S17-supply/stable.t:

[20:57] <dalek> roast: Add simple tests for Supply.stable

[20:57] <dalek> roast: 

[20:57] <dalek> roast: Unfortunately, some of them fail, so there is more work to be done

[20:57] <dalek> roast: review: https://github.com/perl6/roast/commit/f3f563ba95

[20:58] <lizmat> jnthn: ^^^ seems there is something wrong in Supply.stable, and its derivative Supply.delay

[21:02] *** dayangkun left
[21:04] *** anaeem___ left
[21:04] *** anaeem1 joined
[21:04] *** anaeem1 left
[21:05] *** skids left
[21:07] <jnthn> .oO( stability is integral to delay... )

[21:07] <jnthn> lizmat: What fails, exactly?

[21:07] <jnthn> I'm...uh...a bit surprised to see that being tested on currentthreadscheduler

[21:07] <lizmat> the timing related things

[21:08] <lizmat> feels like the timer is not started

[21:08] <lizmat> well, delay and stable are the first ones that fail with CurrentThreadScheduler

[21:08] <lizmat> so maybe I shouldn't test with that scheduler in those tests ?

[21:09] <lizmat> actually, delay *works* with CurrentThreadScheduler

[21:09] <jnthn> Does CurrentThreadScheduler know what to do with :in and :every?

[21:09] <jnthn> if it does, I suspect it may immediately block

[21:10] <lizmat> but it's the ThreadPoolScheduler case I'm worried about really

[21:13] *** pecastro joined
[21:15] *** spider-mario left
[21:16] <japhb> How does one resolve links (., .., and soft links) in a path?  I'm finding that when I call a script with an up-and-over path like '../tools/foo', and then try to manipulate $PROGRAM_NAME.path to e.g. find the project root, I get insane responses.  And .absolute, .cleanup, IO::Spec.canonpath, etc. don't fix it.

[21:17] *** dayangkun joined
[21:17] <masak> japhb: I have a feeling you're in "no-ones ever tried that" territory.

[21:17] <masak> no-one's

[21:17] <masak> *

[21:17] <japhb> D'oh!

[21:28] *** moistcherry is now known as hoverboard

[21:29] *** igorsutton left
[21:29] *** daniel-s_ left
[21:38] <lizmat> r: my @list = (1..10); my @result = grep-index {$_ % 2}, @list; say @result

[21:38] <camelia> rakudo-{parrot,jvm,moar} ab7b1f: OUTPUT«9 9 9 9 9␤»

[21:38] <lizmat> r: my @list = (1..10); say grep-index {$_ % 2}, @list;

[21:38] <camelia> rakudo-{parrot,jvm,moar} ab7b1f: OUTPUT«0 2 4 6 8␤»

[21:38] *** denis_boyun_ left
[21:39] <lizmat> jnthn: ^^^ feels like a bug to me

[21:40] *** Mouq joined
[21:41] <lizmat> when storing into an array, it is by reference apparently (the highest value of the index)

[21:41] *** sftp left
[21:41] <lizmat> otherwise it is by value

[21:41] <lizmat> perhaps some optimization kicking in when it shouldn't?

[21:42] <masak> yes, that feels like a bug.

[21:42] <geekosaur> (when you store into the array, the array stores also into you?)

[21:42] <masak> you can't step down into the same array twice.

[21:43] *** labster joined
[21:43] *** sftp joined
[21:43] <jnthn> lizmat: Looks like a bug, but I wonder what it's in...

[21:43] <jnthn> grep-index is the new thing...

[21:43] <lizmat> fixed by prefixing a +

[21:43] *** rurban joined
[21:44] <dalek> rakudo/nom: 3a69624 | (Elizabeth Mattijsen)++ | src/core/Any.pm:

[21:44] <dalek> rakudo/nom: Make grep-index work when returning into an array

[21:44] <dalek> rakudo/nom: 

[21:44] <dalek> rakudo/nom: This feels like a work around for some obscure scoping issue.

[21:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3a69624db6

[21:45] *** Mouq left
[21:47] <dalek> roast: 5f2eb65 | (Elizabeth Mattijsen)++ | S32-list/grep-index.t:

[21:47] <dalek> roast: Add tests for grep-index

[21:47] <dalek> roast: review: https://github.com/perl6/roast/commit/5f2eb65c9c

[21:48] <jnthn> lizmat: Will have to look at the two tomorrow...

[21:48] *** rurban left
[21:48] <lizmat> ok

[21:48] <lizmat> about to sleep& myself as well  :-)

[21:48] <jnthn> Tired now...had to hack up some web cache stuffs for make smooth tomorrow's exercises :)

[21:53] <dalek> rakudo/nom: dfd343d | (Elizabeth Mattijsen)++ | t/spectest.data:

[21:53] <dalek> rakudo/nom: Add Supply.stable and grep-index tests

[21:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/dfd343de64

[21:54] <lizmat> and with that I have nothing further to commit today

[21:54] <lizmat> gnight, #perl6!

[21:54] <jnthn> 'night, lizmat++

[21:55] *** sftp left
[21:55] *** sftp joined
[21:58] <masak> 'night, lizmat++

[22:01] *** go|dfish left
[22:05] <timotimo> i wonder fi $index += 1 would change the behavior

[22:10] *** sftp left
[22:11] *** rurban joined
[22:13] *** Mouq joined
[22:13] *** go|dfish joined
[22:16] *** rurban left
[22:19] <raiph> m: my @a = ^1000; sub foo ($a) { for @a.kv -> $l, $p { if $p > $a { return } } }; foo(1000); say now - INIT now

[22:19] <camelia> rakudo-moar ab7b1f: OUTPUT«0.36347707␤»

[22:21] <jnthn> 'night, #perl6

[22:21] <timotimo> gnite jnthn!

[22:21] <timotimo> good luck with your teachings tomorrow :)

[22:21] <timotimo> raiph: wow, for a loop that just does 1k iterations, that's pretty slow :\

[22:22] <dalek> rakudo/loop_labels_test: a08ae07 | (Tobias Leich)++ | src/ (2 files):

[22:22] <dalek> rakudo/loop_labels_test: add method Label.gist, .redo and .next

[22:22] <dalek> rakudo/loop_labels_test: 

[22:22] <dalek> rakudo/loop_labels_test: Label.gist looks like this (with colors):

[22:22] <dalek> rakudo/loop_labels_test: perl6-m -e 'my $x; my $y; BAR: while $x++ < 2 { }; say BAR'

[22:22] <dalek> rakudo/loop_labels_test: Label<BAR>(at -e:1, 'my $x; my $y; ⏏BAR:while $x++ < 2 { };')

[22:22] <dalek> rakudo/loop_labels_test: review: https://github.com/rakudo/rakudo/commit/a08ae07e65

[22:23] <FROGGS> gnight jnthn 

[22:23] <FROGGS> and gnight #perl6 (again)

[22:23] <timotimo> wow

[22:23] <timotimo> gnite froggs :)

[22:23] <FROGGS> :o)

[22:23] <raiph> \o jnthn, FROGGS

[22:26] <raiph> timotimo: didn't mean that to be in channel, but running a 200 line program under the debugger runs 100X slower with a breakpoint on line 1

[22:26] <raiph> and it's the line_of sub which is basically the loop I was testing

[22:26] <timotimo> line_of should be cached, no?

[22:27] *** skids joined
[22:28] <raiph> i don't yet think a cache is what's needed

[22:28] *** sftp joined
[22:28] *** ajr_ left
[22:28] <masak> 'night, #perl6

[22:29] <timotimo> i may be thinking of something else

[22:30] * timotimo is heading to bed as well

[22:30] <timotimo> or am i headed to a bad-ass well?

[22:30] <timotimo> i can't decipher this handwriting!

[22:33] <raiph> good night departing p6ers

[22:34] *** bluescreen100 left
[22:37] *** arturo` joined
[22:38] *** Mouq left
[22:44] *** btyler left
[22:47] *** hoverboard left
[22:49] *** raiph left
[22:53] *** hoverboard joined
[23:10] *** dmol left
[23:12] *** rurban joined
[23:12] *** sftp left
[23:12] *** hoverboard left
[23:12] *** sftp joined
[23:16] *** rurban left
[23:24] *** sftp left
[23:24] *** sftp joined
[23:29] *** sftp left
[23:30] *** sftp joined
[23:35] *** sftp left
[23:35] *** treehug8_ left
[23:39] *** sftp joined
[23:42] *** sftp left
[23:48] *** sftp joined
