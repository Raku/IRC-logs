[00:05] *** FROGGS[tab] left
[00:07] *** spider-mario left
[00:20] *** koo6 joined
[00:27] *** atroxaper joined
[00:32] *** atroxaper left
[00:35] *** gfldex left
[00:50] *** gfldex joined
[00:57] * raydiak sees moritz++'s .assuming commit, and wishes again that .assuming skipped positionals w/* as spec^Wdesigned

[00:57] <yoleaux> 25 Dec 2014 11:21Z <FROGGS> raydiak: https://github.com/rakudo/rakudo/commit/50ff378fb8b3390614fbe28b3b97028daabc548f

[00:58] <raydiak> oh cool

[01:00] <raydiak> m: class Foo { method bar ($a) {say $a} }; my &bar = Foo.^lookup('bar').assuming: Foo; bar "Merry Christmas"

[01:00] <camelia> rakudo-moar 8e5c5e: OUTPUT«Merry Christmas␤»

[01:00] *** Rounin left
[01:03] *** jack_rabbit joined
[01:14] *** jack_rabbit left
[01:27] *** KCL_ joined
[01:30] *** KCL left
[01:30] *** beastd left
[01:31] *** profan joined
[01:32] *** skids joined
[01:38] *** awoodland left
[01:51] *** vike1 left
[01:56] *** vike joined
[02:07] *** koo6 left
[02:18] *** atroxaper joined
[02:19] <BenGoldberg> m: (^100).pick(*).map: { start { sleep $_; .say } }

[02:19] <camelia> rakudo-moar 8e5c5e: OUTPUT«Could not spawn thread: errorcode -1␤»

[02:20] *** rmgk_ joined
[02:20] *** rmgk left
[02:20] *** rmgk_ is now known as rmgk

[02:20] <BenGoldberg> r: Scalar.new = 5

[02:20] <camelia> rakudo-parrot 8e5c5e: OUTPUT«(signal SEGV)»

[02:20] <camelia> ..rakudo-moar 8e5c5e: OUTPUT«Cannot call method 'BUILDALL' on a null object␤  in method bless at src/gen/m-CORE.setting:952␤  in method new at src/gen/m-CORE.setting:941␤  in block <unit> at /tmp/tmpfile:1␤␤»

[02:22] *** atroxaper left
[02:24] <BenGoldberg> r: my $x = 0;my \x = Proxy.new: FETCH => { $x++; say "[$x]"; return $x };say x; say "DONE"

[02:24] <camelia> rakudo-parrot 8e5c5e: OUTPUT«[1]␤No such method 'postcircumfix:<( )>' for invocant of type 'Int'␤  in any  at gen/parrot/BOOTSTRAP.nqp:1712␤  in sub say at gen/parrot/CORE.setting:16531␤  in block <unit> at /tmp/tmpfile:1␤␤»

[02:24] <camelia> ..rakudo-moar 8e5c5e: OUTPUT«[1]␤Cannot invoke object with invocation handler in this context␤  in sub say at src/gen/m-CORE.setting:16623␤  in block <unit> at /tmp/tmpfile:1␤␤»

[02:28] *** [particle]1 joined
[02:29] *** nebuchad` joined
[02:32] *** grim_ joined
[02:32] *** BooK joined
[02:32] *** mr-fooba_ joined
[02:33] <BenGoldberg> nqp-j: nqp::const::asdfwerty

[02:33] <camelia> nqp-jvm: OUTPUT«(signal ABRT)»

[02:33] <BenGoldberg> nqp-j: nqp::const::asdfwerty

[02:33] <camelia> nqp-jvm: OUTPUT«(signal ABRT)»

[02:33] <BenGoldberg> nqp-j: nqp::const::asdfwerty

[02:33] <camelia> nqp-jvm: OUTPUT«(signal ABRT)*** Error in `java': double free or corruption (!prev): 0x00007f8da401a9f0 ***␤»

[02:34] *** telex left
[02:34] *** telex joined
[02:36] <BenGoldberg> nqp-j: say(nqp::mod_i(3,3))

[02:36] <camelia> nqp-jvm: OUTPUT«(signal ABRT)*** Error in `java': double free or corruption (!prev): 0x00007f6ecc01a9f0 ***␤[thread 140113920362240 also had an error]␤»

[02:38] <BenGoldberg> nqp-m: say(fc("Moar"))

[02:38] <camelia> nqp-moarvm: OUTPUT«Cannot invoke null object␤   at /tmp/TIy6VkfInS:1  (<ephemeral file>:<mainline>:25)␤ from gen/moar/stage2/NQPHLL.nqp:1239  (/home/camelia/rakudo-inst-1/languages/nqp/lib/NQPHLL.moarvm:eval:172)␤ from gen/moar/stage2/NQPHLL.nqp:1432  (/home/camelia/rakudo-ins…»

[02:38] <BenGoldberg> nqp: say(fc("Moar"))

[02:38] <camelia> nqp-moarvm: OUTPUT«Cannot invoke null object␤   at /tmp/tmpfile:1  (<ephemeral file>:<mainline>:25)␤ from gen/moar/stage2/NQPHLL.nqp:1239  (/home/camelia/rakudo-inst-1/languages/nqp/lib/NQPHLL.moarvm:eval:172)␤ from gen/moar/stage2/NQPHLL.nqp:1432  (/home/camelia/rakudo-inst-1…»

[02:38] <camelia> ..nqp-jvm: OUTPUT«(signal ABRT)*** Error in `java': double free or corruption (!prev): 0x00007fc35001a9f0 ***␤*** Error in `java': double free or corruption (fasttop): 0x00007fc350009810 ***␤# There is insufficient memory for the Java Runtime Environment to continue.␤# pthread_g…»

[02:38] <camelia> ..nqp-parrot: OUTPUT«Could not find sub &fc␤current instr.: '<mainline>' pc 46 ((file unknown):38) (/tmp/tmpfile:1)␤»

[02:40] *** yubimusubi joined
[02:43] *** go|dfish1 joined
[02:49] *** mr-foobar left
[02:49] *** nebuchadnezzar left
[02:49] *** go|dfish left
[02:49] *** BooK_ left
[02:49] *** [particle] left
[02:49] *** ka05 left
[02:49] *** Possum left
[02:53] <skids> So I tried Net::SSH2 via Inline::Perl5 and ran into a snag.  Can't do <$ssh_handle> in perl6 and a Net::SSH2::Channel  P5Obj's .read($buf,$count) method does not alter buf.  Wonder if there is a different way to invoke a read on a P5Object that is an IO.

[03:09] <skids> aha. .READLINE from the tie interface works. \o/

[03:23] *** Ben_Goldberg joined
[03:26] *** BenGoldberg left
[03:43] *** atroxaper joined
[03:43] *** Mso150 joined
[03:46] *** Ben_Goldberg left
[03:50] *** noganex joined
[03:50] *** xinming_ left
[03:51] *** Mso150 left
[03:51] *** vendethiel left
[03:52] *** xinming joined
[03:53] *** vendethiel joined
[03:53] *** noganex_ left
[03:57] *** araujo left
[04:03] *** araujo joined
[04:14] *** sirdancealot joined
[04:38] *** autark joined
[05:12] *** yeahnoob joined
[05:14] *** atroxaper left
[05:15] *** atroxaper joined
[05:16] *** atroxaper left
[05:21] *** sirdancealot left
[05:24] *** sjdy521 joined
[05:24] <sjdy521> ada

[05:25] *** KCL_ left
[05:25] *** vendethiel left
[05:26] *** vendethiel joined
[05:27] *** sjdy521 left
[05:37] *** yeahnoob left
[05:40] *** sirdancealot joined
[05:51] *** mr-fooba_ left
[05:56] *** isBEKaml joined
[06:07] *** mr-foobar joined
[06:17] *** autark left
[06:23] <raydiak> since it isn't quite over in my time zone...merry christmas to all, and to all a good night o/

[06:24] *** isBEKaml left
[06:36] *** sirdancealot left
[06:38] *** kaleem joined
[06:56] *** frew joined
[07:03] *** mr-foobar left
[07:03] *** adu joined
[07:07] *** [Sno] left
[07:30] *** risou is now known as risou_awy

[07:39] *** mickcy_ca joined
[07:43] *** kaare_ joined
[07:57] *** anaeem1 joined
[07:57] *** anaeem1 left
[07:58] *** anaeem1_ joined
[08:00] *** go|dfish1 is now known as go|dfish

[08:04] *** dayangkun joined
[08:05] *** dayangkun left
[08:09] *** xfix joined
[08:14] *** gfldex left
[08:18] <mickcy_ca> Does anyone have any idea of a timeline for the Conjectular stuff, and the "not reviewed properly" stuff in http://design.perl6.org/S32/IO.html will be completed?

[08:21] *** FROGGS[tab] joined
[08:21] *** darutoko joined
[08:22] *** isBEKaml joined
[08:27] <FROGGS[tab]> mickcy_ca: lizmat++ is working hard on file io... you can ask her

[08:27] <mickcy_ca> A assume that lizmat++ is not on line here right now.

[08:30] *** mickcy_ca left
[08:30] *** mickcy_ca joined
[08:31] <mickcy_ca> lismat: I am wondering if you have any idea as to a timeline for http://design.perl6.org/S32/IO.html conjectural and "not reviewed properly" items.

[08:32] <moritz>  \o

[08:32] <moritz> timelines in #perl6 land are usually "when we get around to it"

[08:33] <mickcy_ca> moritz: I kind of figured that ... was just wondering if anyone had a round-tuit for pipes and sockets

[08:34] <FROGGS[tab]> I did something for pipes recently... but I did not review S32

[08:35] <mickcy_ca> Curious, what was done?

[08:36] <mickcy_ca> I may find it useful for a Perl 6 port I am doing.

[08:39] <moritz> seems like pipe was fixed on the parrot backend

[08:42] *** Akagi201_ joined
[08:42] *** Akagi201 left
[08:47] *** adu left
[08:48] *** virtualsue joined
[09:00] *** isBEKaml left
[09:14] *** vendethiel left
[09:16] *** vendethiel joined
[09:20] *** telex left
[09:21] *** Mso150 joined
[09:21] *** dj_goku left
[09:22] *** telex joined
[09:27] *** rindolf joined
[09:30] *** dj_goku joined
[09:30] *** dj_goku left
[09:30] *** dj_goku joined
[09:34] <mickcy_ca> moritz:  Sorry went away for a bit, is pipe a built in function?

[09:34] <FROGGS[tab]> yeah, it was about passing cwd and our env hash dowm the pipe :o)

[09:34] <mickcy_ca> Ah.

[09:35] <FROGGS[tab]> and that we get the status code of the child process or so

[09:36] <FROGGS[tab]> and something about the filehandles we want to read from

[09:38] <mickcy_ca> Curious, do you know how to create a Unix Domain Socket?

[09:38] <mickcy_ca> From within Perl 6

[09:41] <moritz> mickcy_ca: pipe is both a sub and a method on IO::Path

[09:46] *** isBEKaml joined
[09:47] *** virtualsue left
[09:49] *** dj_goku_ joined
[09:49] *** dj_goku left
[09:51] *** rurban joined
[09:58] *** [Sno] joined
[09:59] *** zakharyas joined
[10:03] *** andreoss joined
[10:05] <mickcy_ca> moritz:  Been reading advent ... Is .pipe an improvement upon the issue that I was having yesterday?  Refresh, pipe opens interfering with File::Find, even though no execution path leads to the statement.

[10:05] <andreoss> perl6-m's repl doesn't work with TERM=dumb 

[10:06] <andreoss> repl with any other backend works 

[10:06] <moritz> mickcy_ca: no idea

[10:06] <mickcy_ca> <sigh>

[10:08] <andreoss> without supporting TERM=dumb perl6-m repl cannot be used inside emacs properly 

[10:09] <mickcy_ca> About Unix Domain Sockets ... I have been doing some reading in S32, and have been left wanting about what I can actually do with them.  IO :: Socket :: INET seems to implement IP networking through sockets, but IO :: Socket itself is a role.  Would I be able to implement my own class that just deals with raw data?

[10:10] <mickcy_ca> andreoss:  That explains why blocking happens on open, but not why the code interferes with File::Find when the open is not even called.

[10:10] <moritz> mickcy_ca: yes; you could probably use NativeCall to call the C functions you need to create the socket

[10:11] <mickcy_ca> YAY, more reading.

[10:12] *** isBEKaml left
[10:13] *** isBEKaml joined
[10:13] <mickcy_ca> moritz: Do you know if zavlolaj is part of the current Rakudo?

[10:14] <moritz> mickcy_ca: it's not; you can install it with panda

[10:14] <mickcy_ca> Ok.

[10:14] <moritz> mickcy_ca: or use rakudo star (though thta's kinda out of date), which bundles it

[10:15] <mickcy_ca> Would rather be on bleeding edge for up-to-date features and discussion on what really works NOW that need to use panda.

[10:15] <mickcy_ca> I mean, not need to use panda.

[10:23] *** vendethiel left
[10:28] <dalek> doc: d73ca23 | moritz++ | lib/Type/Supply.pod:

[10:28] <dalek> doc: Add some examples to Supply methods documentation

[10:28] <dalek> doc: review: https://github.com/perl6/doc/commit/d73ca23acf

[10:29] *** vendethiel joined
[10:29] *** spider-mario joined
[10:30] *** anaeem___ joined
[10:32] *** anaeem1_ left
[10:33] <Timbus> mickcy_ca, the Socket::INET module was written to simply expose parrot's already-existing socket capabilities to rakudo. the idiot who wrote it was not thinking of a 'real', robust solution which would involve proper bindings to the c sockets library

[10:34] <Timbus> if someone were to make nativecall bindings to such a library.. that would be pretty neat

[10:34] *** hekmek joined
[10:35] <mickcy_ca> That would be awesome ... better than pretty neat.

[10:36] <mickcy_ca> Unfortunately, I have not programmed in C since college ... many moons ago.  

[10:36] <dalek> star: ac97143 | moritz++ | docs/announce/2014.12.md:

[10:36] <dalek> star: 2014.12 draft release announcement

[10:36] <dalek> star: review: https://github.com/rakudo/star/commit/ac97143587

[10:37] <xfix> Perl 6 is neat, but the reality is that people still use COBOL.

[10:37] <moritz> "many moons ago", muhaha

[10:37] <mickcy_ca> LOLOLOLOL

[10:39] <xfix> For example, I checked sample high school exit exam from IT (yeah, I'm still in high school). It has tasks like "count number of distinct character in text s, and return the result r" (also, the task says to assume r < 100).

[10:39] *** anaeem___ left
[10:39] <xfix> You can write the solution in C, C++, Java, or Pascal. The sample solution has obvious buffer overflow, and uses O(N^2) algorithm.

[10:40] <masak> good antenoon, #perl6

[10:40] <xfix> When in Perl 6, I could just write $r = +$s.comb.Set

[10:41] <moritz> \o masak 

[10:41] <moritz> feedback on https://github.com/rakudo/star/blob/master/docs/announce/2014.12.md very welcome

[10:42] <xfix> (oh, and the sample solution assumes that everything fits in 8-bit)

[10:43] <xfix> I don't understand the point of those stupid exams that don't really require anything.

[10:43] *** zakharyas left
[10:45] <mickcy_ca> There is really no point to them, except to test your state of mind at the time of the exam.  They do nothing to examine any possibility of future retainment of said knowledge.

[10:45] <moritz> xfix: for somebody who never programmed before, they are a real hurdle

[10:45] *** Mso150 left
[10:45] <mickcy_ca> moritz: if somebody has never driven before ... same problem.

[10:46] <xfix> They aren't mandatory...

[10:46] <mickcy_ca> Shouldn't take the exam if not prepared.

[10:48] <mickcy_ca> moriz: The announcement looks fine ... can't comment on the content though.

[10:48] <isBEKaml> moritz: s/Varios/Various/

[10:49] <isBEKaml> moritz: I'm not sure about this one - we still have $*DISTRO and $*KERNEL, right?

[10:50] <dalek> star: 576754e | moritz++ | docs/announce/2014.12.md:

[10:50] <dalek> star: fix typo in announcement, isBEKaml++

[10:50] <dalek> star: review: https://github.com/rakudo/star/commit/576754e5b5

[10:50] <moritz> m: say $*DISTRO.name

[10:50] <camelia> rakudo-moar 8e5c5e: OUTPUT«opensuse␤»

[10:50] <mickcy_ca> what is meant by " 'for' remains as it is n"

[10:51] <mickcy_ca> "slurping rest from handle" -> slurping the rest from the handl

[10:51] <mickcy_ca> handle ...

[10:52] <Timbus> i assume that's meant to read:  'for' remains as it is now

[10:52] <xfix> Also, why limit to C, C++, Java, and Pascal.

[10:52] <xfix> Not everybody wants to write code like http://codepad.org/MuOKmHox

[10:52] <dalek> star: 6bfb316 | moritz++ | docs/announce/2014.12.md:

[10:52] <dalek> star: Fix more typos, mickcy_ca++

[10:52] <dalek> star: review: https://github.com/rakudo/star/commit/6bfb316bf7

[10:52] <xfix> When I can just r = len(set(s))

[10:56] <isBEKaml> moritz: maybe it's just me - I read `map` as a function and `Map` as a Key-value data structure. Perhaps it'd be better to say .map when you mean the function and Map for the structure...

[10:56] <isBEKaml> moritz: in the point of 'for' as an alias for 'map'

[10:57] <moritz> isBEKaml: that's why the line begins with "Method"

[10:57] <isBEKaml> moritz: also, since this is a Star release - maybe you could add some notes about new modules added?

[10:57] <moritz> to make it clear that it's not a data structure

[10:57] <moritz> isBEKaml: no new modules added

[10:58] <moritz> isBEKaml: and since module authors usually don't keep changelogs, I can't comment on changes in the modules :(

[10:58] <isBEKaml> moritz: ah, modules.perl6.org repo? :-)

[10:58] *** bjz joined
[10:59] <isBEKaml> moritz: I don't want to add more work to release maintainers if it's not worth the cost. 

[11:02] <isBEKaml> moritz++ # Star release

[11:04] <dalek> json: f21c417 | moritz++ | lib/JSON/Tiny.pm:

[11:04] <dalek> json: Change .map to .for for forward compatibility

[11:04] <dalek> json: review: https://github.com/moritz/json/commit/f21c417951

[11:05] *** isBEKaml left
[11:08] <mickcy_ca> Good night all ...

[11:09] *** mickcy_ca left
[11:11] *** virtualsue joined
[11:26] <vendethiel> moritz++#star

[11:27] <xfix> https://gist.github.com/xfix/734b904b95c2052c50b2

[11:27] <xfix> Those are module changes for Rakudo Star.

[11:32] <moritz> xfix: thanks!

[11:33] <xfix> Feel free to include important parts, or something.

[11:34] *** nebuchad` is now known as nebuchadnezzar

[11:34] <xfix> In Rakudo Star 2014.09 displays help like "panda update -- Display information about specified modules".

[11:34] <xfix> Which is wrong description (it's intended to be a definition of "info", not "update").

[11:35] *** dakkar joined
[11:35] <moritz> looks correct in 2014.12

[11:36] <dalek> star: bb488b7 | moritz++ | docs/announce/2014.12.md:

[11:36] <dalek> star: Include modules changelog, xfix++

[11:36] <dalek> star: review: https://github.com/rakudo/star/commit/bb488b7903

[11:37] <xfix> "library names"

[11:37] <xfix> Sorry, I just fixed that 2 minutes ago.

[11:37] <xfix> (although, I believe there are other misspellings as well)

[11:37] <xfix> (oh well, I don't really know English)

[11:38] <dalek> star: 43e6655 | moritz++ | docs/announce/2014.12.md:

[11:38] <dalek> star: typo, xfix++

[11:38] <dalek> star: review: https://github.com/rakudo/star/commit/43e6655082

[11:38] * moritz neither

[11:38] <xfix> There were also some fixes for Rakudo (depreciation notices), but considering they didn't exist in 2014.09, it doesn't matter.

[11:40] <dalek> star: b8f06b8 | moritz++ | docs/announce/2014.12.md:

[11:40] <dalek> star: Mention an incompatible change

[11:40] <dalek> star: review: https://github.com/rakudo/star/commit/b8f06b8fd8

[11:43] <xfix> moritz, by the way, have you got my hack.p6c.org application I sent by e-mail?

[11:44] <moritz> xfix: no, my email account is currently inaccessible; please use [email@hidden.address] for now

[11:44] <moritz> xfix: and sorry for the hassle

[11:44] <xfix> Oh, okay.

[11:45] <xfix> I sent it to [email@hidden.address] so I guess that's why.

[11:46] <xfix> moritz, sent

[11:47] <xfix> Also, I just realized those packages aren't for Debian Testing.

[11:47] <xfix> Oh well, I can compile fish myself anyway.

[11:50] *** kaleem left
[11:52] <moritz> xfix: I haven't got a mail from you yet

[11:52] <moritz> *gotten

[11:52] <xfix> Oh, right, I again put the wrong e-mail

[11:52] <xfix> Argh.

[11:52] <xfix> I sent two mails to wrong e-mail.

[11:53] <xfix> sorry for spam

[11:53] <xfix> moritz, ok, now it should be sent

[11:53] <xfix> I apologize for the issue.

[11:56] <moritz> xfix: account added, have fun!

[11:57] <xfix> Thanks.

[11:57] <xfix> Connected.

[11:57] <xfix> Now I wonder...

[11:58] <xfix> Hm, connected with screen and irssi and default settings, and I see Camelia.

[11:59] <moritz> somtimes, Unicode isn't hard :-)

[12:00] <xfix> With LANG=C, I see >>?<<.

[12:00] <xfix> But with any reasonable LANG, I see Camelia.

[12:00] <xfix> I wonder what issue masak is seeing. (gonna check PuTTy with Cygwin, often this particular SSH client causes problems)

[12:02] <xfix> Right, and PuTTy requires private key files in its odd format.

[12:02] <moritz> puttydefaults defaults to some legacy encoding, iirc

[12:02] <xfix> Yes, I know.

[12:03] <xfix> But I see Camelia in irssi as well.

[12:03] <xfix> Without changing sets (huh?).

[12:05] <xfix> Hm, PuTTy now defaults to UTF-8.

[12:07] <xfix> When forcing ISO-8859-1, I get Â»Ã¶Â«

[12:07] <moritz> \o/

[12:07] *** hekmek left
[12:07] <xfix> Hm, strange...

[12:10] <xfix> I wonder where the LC variables come from. I know that they come from SSH session, but what if they aren't defined (will run ssh now without environment set).

[12:11] <xfix> env -i ssh hack.p6c.org

[12:11] *** risou_awy is now known as risou

[12:12] <xfix> There is /etc/profile, but it says nothing about LANG.

[12:13] <xfix> /etc/default/locale. Ok.

[12:14] <xfix> The only thing I can think of is LC_ALL, but why anyone would set it?

[12:16] <xfix> (and LC_MESSAGE, I guess)

[12:17] <xfix> export LC_ALL=en_US.UTF-8

[12:17] <xfix> Right...

[12:18] <xfix> That explains everything.

[12:23] *** BenGoldberg joined
[12:23] <xfix> The server has five locales defined - C, C.UTF-8, de_DE.UTF-8, en_US.UTF-8, and POSIX.

[12:23] *** virtualsue left
[12:24] <xfix> While the old server has 827 locales defined... fun?

[12:25] <xfix> masak, can you run "screen", and in "locale", and paste the output somewhere? I think something odd is going on with environment variables.

[12:25] <xfix> in screen "locale"*

[12:41] *** sergot left
[12:43] *** sergot joined
[12:43] <masak> xfix: https://gist.github.com/masak/c1ec1b34aad88b5d51c1

[12:44] <xfix> And here we have the issue.

[12:44] <xfix> nb_NO.UTF-8 locale is not installed on hack.p6c.org.

[12:44] <xfix> So, either those have to be replaced, or moritz has to install nb_NO.UTF-8.

[12:45] <timotimo> shouldn't we mention non-blocking i/o to be in progress for moar and jvm, too?

[12:45] * timotimo is currently editing the announcement anyway

[12:45] <moritz> sure

[12:46] <moritz> masak: nb_NO.UTF-8 locale generated

[12:46] <timotimo> was that "sure" for me?

[12:46] <moritz> timotimo: sure :-)

[12:46] <timotimo> just wanted to make sure

[12:47] <xfix> masak, if it doesn't work, restart irssi and screen.

[12:48] <timotimo> is the "some module tests fail" part of the JVM version still true?

[12:50] <dalek> star: 1df8fdf | timo++ | docs/announce/2014.12.md:

[12:50] <dalek> star: tiny changes to the announcement

[12:50] <dalek> star: review: https://github.com/rakudo/star/commit/1df8fdfa27

[12:50] *** sergot left
[12:50] *** sergot_ joined
[12:51] *** sergot_ is now known as sergot

[12:52] <xfix> Hm, no perl6 binary on a server.

[12:52] <moritz> xfix: https://github.com/perl6/infrastructure-doc/blob/master/hosts/hack.p6c.org.pod#rakudobrew

[12:53] <xfix> Ok, neat.

[12:53] <xfix> Shouldn't it be in /etc/profile.d?

[12:53] <moritz> we even have documentation; you'd just have to read it :-)

[12:53] <moritz> no

[12:53] <moritz> since many users want to compiler their own, it would be potentially harmful to have it in the default path

[12:53] <xfix> ok

[12:54] <xfix> Why is .rakudobrew-bash a hidden script?

[12:54] <moritz> timotimo: I'm now testing star-j build

[12:54] *** BenGoldberg left
[12:55] <moritz> xfix: mostly inspired by the rakudobrew documentation using .rakudobrew as the default path

[12:55] <xfix> It's intended to be used by users, so IMO it shouldn't have a dot (although, considering that people may already use it, it's probably a good idea to make a link)

[12:56] *** masak left
[12:57] *** masak joined
[12:57] <masak> \o/

[12:57] <masak> xfix++

[12:57] <moritz> xfix: linkified

[12:57] <masak> ☺ ☺ ☺ ☺ ☺ ☺ \☺/

[12:57] <masak> oh, that's nice.

[13:00] <timotimo> it seems like indirect method calls are still marked - on the feature matrix

[13:01] * timotimo edits

[13:01] <moritz> also a good test to see if updating the feature matrix works from cron

[13:01] <timotimo> oh, could it be that's not about "new Blurb: 1, 2, 3"?

[13:03] <moritz> it's about that, yes

[13:03] <timotimo> m: my $mn = "say"; my $num = 100; $num."$mn"();

[13:03] <camelia> rakudo-moar 8e5c5e: OUTPUT«100␤»

[13:03] <timotimo> that also works, though

[13:04] <dalek> features: 2de106f | timo++ | features.json:

[13:04] <dalek> features: indirect method calls (a la new Foo: 1, 2, 3) work

[13:04] <dalek> features: review: https://github.com/perl6/features/commit/2de106fad6

[13:04] <xfix> https://github.com/perl6/infrastructure-doc/pull/1

[13:04] <vendethiel> m: sub infix:<<"->">>($a, $b) { $a."$b"; } ; say 5->"succ";

[13:04] <camelia> rakudo-moar 8e5c5e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/Or9wKoyvzL␤Quoted method name requires parenthesized arguments. If you meant to concatenate two strings, use '~'.␤at /tmp/Or9wKoyvzL:1␤------> [32msub infix:<<"->">>($a, $b) { $a."$b"[33m⏏…»

[13:04] <xfix> (not sure why I don't have access to infrastructure-doc repository, but whatever)

[13:05] <vendethiel> m: sub infix:<<"->">>($a, $b) { $a."$b"(); } ; say 5->"succ";

[13:05] <camelia> rakudo-moar 8e5c5e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/DMzthByVoa␤Unsupported use of -> as postfix; in Perl 6 please use either . to call a method, or whitespace to delimit a pointy block␤at /tmp/DMzthByVoa:1␤------> [32m<"->">>($a, $b) { $a."$b"…»

[13:05] <vendethiel> :(

[13:06] <dalek> infrastructure-doc: db019f6 | (Konrad Borowski)++ | hosts/hack.p6c.org.pod:

[13:06] <dalek> infrastructure-doc: Mention the updated rakudobrew-bash path.

[13:06] <dalek> infrastructure-doc: review: https://github.com/perl6/infrastructure-doc/commit/db019f6eaf

[13:06] <dalek> infrastructure-doc: ec7f273 | moritz++ | hosts/hack.p6c.org.pod:

[13:06] <dalek> infrastructure-doc: Merge pull request #1 from xfix/patch-1

[13:06] <dalek> infrastructure-doc: 

[13:06] <dalek> infrastructure-doc: Mention the updated rakudobrew-bash path.

[13:06] <dalek> infrastructure-doc: review: https://github.com/perl6/infrastructure-doc/commit/ec7f273071

[13:07] <xfix> Also, resource limits. Neat, I remember how often did the build process freeze taking lots of memory making the server unusable, and had to be restarted. I understand that you are expected to use `ulimit`, but it only helps before it happens.

[13:07] <vendethiel> m: sub infix:<<"->>">>($a, $b) { $a."$b"(); } ; say 5->>"succ";

[13:07] <camelia> rakudo-moar 8e5c5e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/QCMAJF8dWz␤Unsupported use of -> as postfix; in Perl 6 please use either . to call a method, or whitespace to delimit a pointy block␤at /tmp/QCMAJF8dWz:1␤------> [32m"->>">>($a, $b) { $a."$b"…»

[13:07] <vendethiel> well.

[13:08] <moritz> xfix: you should also have direct push access to the infrastructure-doc repo

[13:08] <xfix> Thanks.

[13:08] <timotimo> vendethiel: are you sure you want " inside the <<?

[13:08] <vendethiel> no.

[13:08] <vendethiel> m: sub infix:<< -> >>($a, $b) { $a."$b"(); } ; say 5->"succ";

[13:08] <timotimo> m: sub infix:<<< ->> >>>($a, $b) { $a."$b"(); } ; say 5->>"succ";

[13:08] <camelia> rakudo-moar 8e5c5e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/folc1zP8PU␤Unsupported use of -> as postfix; in Perl 6 please use either . to call a method, or whitespace to delimit a pointy block␤at /tmp/folc1zP8PU:1␤------> [32m< -> >>($a, $b) { $a."$b"…»

[13:08] <camelia> rakudo-moar 8e5c5e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/xy8yoKJSbs␤Missing block␤at /tmp/xy8yoKJSbs:1␤------> [32msub infix:<<< ->> [33m⏏[31m>>>($a, $b) { $a."$b"(); } ; say 5->>"su[0m␤»

[13:08] <xfix> m: sub infix:["->>"]($a, $b) { $a."$b"(); } ; say 5->>"succ";

[13:08] <camelia> rakudo-moar 8e5c5e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/KMjyyZbem4␤Colon pair value '"->>"' too complex to use in name␤at /tmp/KMjyyZbem4:1␤------> [32msub infix:["->>"][33m⏏[31m($a, $b) { $a."$b"(); } ; say 5->>"succ"[0m␤»

[13:08] <xfix> Too complex?

[13:09] <timotimo> m: sub infix:<['->']($a, $b) { $a."$b"(); } ; say 5->"succ";

[13:09] <camelia> rakudo-moar 8e5c5e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/GMP7TUO8aG␤Missing block␤at /tmp/GMP7TUO8aG:1␤------> [32msub infix:<['->[33m⏏[31m']($a, $b) { $a."$b"(); } ; say 5->"succ[0m␤»

[13:09] <timotimo> m: sub infix:['->']($a, $b) { $a."$b"(); } ; say 5->"succ";

[13:09] <camelia> rakudo-moar 8e5c5e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/puhOcHVdZJ␤Colon pair value ''->'' too complex to use in name␤at /tmp/puhOcHVdZJ:1␤------> [32msub infix:['->'][33m⏏[31m($a, $b) { $a."$b"(); } ; say 5->"succ";[0m␤»

[13:09] <timotimo> hm.

[13:09] <xfix> m: sub infix:«->>»($a, $b) { $a."$b"(); } ; say 5->>"succ";

[13:09] <camelia> rakudo-moar 8e5c5e: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/zyW0EokQNr␤Unsupported use of -> as postfix; in Perl 6 please use either . to call a method, or whitespace to delimit a pointy block␤at /tmp/zyW0EokQNr:1␤------> [32mx:«->>»($a, $b) { $a."$…»

[13:09] <xfix> m: sub infix:«->>»($a, $b) { $a."$b"(); } ; say [->>] 5, "succ";

[13:09] <camelia> rakudo-moar 8e5c5e: OUTPUT«6␤»

[13:09] <vendethiel> ooooh

[13:09] <vendethiel> m: sub infix:<< -> >>($a, $b) { $a."$b"(); } ; say [->] 5, "succ";

[13:10] <camelia> rakudo-moar 8e5c5e: OUTPUT«6␤»

[13:10] <xfix> Hm, so the -> rule triggers before ->>, even with LTM for some reason.

[13:10] <vendethiel> nice :D

[13:10] <xfix> Probably a bug.

[13:11] <dalek> star: 36cc147 | moritz++ | modules/svg-plot:

[13:11] <dalek> star: Update to newer SVG::Plot

[13:11] <dalek> star: review: https://github.com/rakudo/star/commit/36cc147e62

[13:13] <raydiak> \o g'mornin butterflies, camels, etc...

[13:13] <xfix> \o raydiak

[13:13] <moritz> good morning, raydiak lambdafly

[13:14] <xfix> 20GB of RAM and 1TB of hard drive space feels so huge compared to old 3.5GB of RAM and 100GB of hard drive space.

[13:15] <xfix> (we currently use 710MB of RAM, excluding memory cache)

[13:17] <moritz> we are lucky to have so many and so generous donors

[13:17] <xfix> Yes...

[13:17] <raydiak> aye, /me was looking at prices on a server like that

[13:17] *** gfldex joined
[13:17] <xfix> Even buying 4GB of RAM server costs (I have 1GB of RAM on my own server that is used for stuff).

[13:18] <moritz> raydiak: that one was O(2k EUR)

[13:18] <raydiak> I have half a gig on my vps, but the ssd handles swapping okay to make up for it

[13:18] <raydiak> yep...a bit outside my price range atm :)

[13:19] <xfix> 2k EUR is definitely way too much for me ;-). But that's probably because I'm still a student.

[13:19] <raydiak> oh moritz...this lambdafly can haz hack.p6c.org account?

[13:20] <moritz> raydiak: sure; what username do you want?

[13:20] <xfix> Will have to go now.

[13:20] *** xfix left
[13:20] <raydiak> moritz: can I have "x"?

[13:20] <raydiak> \o xfix

[13:20] <raydiak> alternatively, raydiak works fine :)

[13:21] <moritz> raydiak: I'm not thrilled by 'x' as a user name, so I'll go with raydiak 

[13:21] <raydiak> understandable

[13:23] *** kjs_ joined
[13:24] <raydiak> passwd: Authentication token manipulation error

[13:24] <raydiak> passwd: password unchanged

[13:24] <moritz> huh

[13:25] <moritz> raydiak: that means you entered the old password incorrectly

[13:25] <raydiak> m) right...5 AM here

[13:32] <andreoss> m: my $x := lazy {sleep 1; 10}

[13:32] <camelia> rakudo-moar 8e5c5e: ( no output )

[13:32] <andreoss> why it takes time?

[13:33] <andreoss> why isn't sleep call deferred?  

[13:35] <andreoss> s/:=/=/

[13:35] <moritz> andreoss: it's called start { }

[13:35] <moritz> m: my $before = now; start { sleep 2 }; say now - $before

[13:35] <camelia> rakudo-moar 8e5c5e: OUTPUT«0.0075080␤»

[13:36] <andreoss> moritz: start is a Promise, i want just lazy evaluation (i want to defer evaluation until i need this $x )

[13:37] <moritz> andreoss: and that's what a Promise gives you, just call .result when you need it

[13:37] <moritz> andreoss: doing stuff lazily just in a scalar doesn't work out

[13:38] <moritz> andreoss: because the asignment type-checks, and the type check needs a value, for one

[13:38] <andreoss> moritz: Promise will start a thread as I know

[13:39] <andreoss> m: my @x := lazy { gather for 1..10 {sleep $_; $_} } 

[13:39] <andreoss> neither works 

[13:39] <camelia> rakudo-moar 8e5c5e: OUTPUT«(timeout)»

[13:39] <moritz> gather already is lazy

[13:40] <moritz> m: my @x := do gather for 1..10 {sleep $_; take $_}; say 'here'

[13:40] <camelia> rakudo-moar 8e5c5e: OUTPUT«here␤»

[13:41] <andreoss> m: my @x := do gather for 1..10 {sleep $_; take $_}; 

[13:41] <andreoss> why timeout?

[13:41] <camelia> rakudo-moar 8e5c5e: OUTPUT«(timeout)»

[13:42] <moritz> andreoss: probably something tries to use the return value of your program

[13:42] <moritz> oh

[13:42] <moritz> it's called in sink context, but badly :(

[13:45] <andreoss> i'm trying this stuff in repl, having a second statement on the line somehow prevents eager evaluation 

[13:45] <moritz> andreoss: the "P" part of the REPL is to blame here

[13:46] <moritz> andreoss: to print the return value, it has to evaluate it

[13:47] <moritz> http://roaringbitmap.org/ something to use for char classes in regexes?

[13:47] *** araujo left
[13:48] <andreoss> moritz: it should print something else than  

[13:50] <andreoss> no lazy scalars in perl6?  

[13:51] <raydiak> perl6 -e (no repl) does the same thing...perhaps the return value of the last statement in the program is used for the exit code, in that case

[13:52] <FROGGS_> unlikely

[13:53] <raydiak> then it's pretty clearly broken 

[13:54] <FROGGS_> m: my @x := gather for 1..10 {sleep $_; take $_};

[13:54] <camelia> rakudo-moar 8e5c5e: OUTPUT«(timeout)»

[13:55] <raydiak> but

[13:55] <raydiak> m: my @x := gather for 1..10 {sleep $_; take $_}; say 0

[13:55] <camelia> rakudo-moar 8e5c5e: OUTPUT«0␤»

[13:55] <raydiak> but then 

[13:55] <raydiak> m: lazy my @x := gather for 1..10 {sleep $_; take $_}; say 0

[13:55] <camelia> rakudo-moar 8e5c5e: OUTPUT«(timeout)»

[13:56] <vendethiel> raydiak: I think our "lazy" does not do much atm

[13:56] <raydiak> vendethiel: it's clearly doing something here...just the opposite of what is expected

[13:56] <moritz> lazy is just for lists

[13:57] <raydiak> yeah I know I'm using it wrong, that's kinda beside the highly mysterious point, no?

[13:57] <andreoss> btw why no lazy scalars? 

[13:57] <moritz> andreoss: I tried to explain earlier

[13:58] <moritz> http://irclog.perlgeek.de/perl6/2014-12-26#i_9854857

[13:58] <andreoss> moritz: but haskell type-checks too

[14:01] *** kjs_ left
[14:01] <andreoss> ok. seems i get it 

[14:01] <moritz> andreoss: at compile time, yes. Perl 6 must do it at run time

[14:02] <andreoss> i guess though it could be done via some Lazy class, like my Lazy[Int] @x = ... 

[14:03] <andreoss> s/@x/$x/

[14:05] *** andreoss left
[14:17] *** andreoss joined
[14:17] *** andreoss left
[14:18] <timotimo> unless someone updated the feature comparison matrix manually, the cron job seems to work

[14:19] <timotimo> can someone comment on "Precedence and associativity of new operators

[14:19] <timotimo> " where the footnote is "still some bugs"?

[14:19] *** araujo joined
[14:19] <timotimo> and also the "andthen" and "orelse" footnote "missing exception semantics" is (IIRC) wrong

[14:19] *** xfix joined
[14:20] <timotimo> also, i'd suggest we put a proper footnote onto the +/- of LoL, since we have some LoL support nowadays, even some multi-dimensional-array slicing

[14:21] <xfix> Hm, lazy strings.

[14:21] <xfix> I think that slurp could use lazy strings, but anything else?

[14:22] <moritz> xfix: the main application is reegx matching against streams

[14:22] <xfix> With mmap, slurp could be lazy.

[14:23] *** Rounin joined
[14:27] <moritz> not from STDIN

[14:28] <xfix> Yes, STDIN is an issue.

[14:28] <moritz> but the bigger issue is really that the grammar engine assumes it knows the length of the input string

[14:29] <moritz> which is very incomatible with streaming

[14:32] <xfix> How to represent size_t in Zavolaj?

[14:33] <moritz> int iirc

[14:33] <xfix> uint, ok

[14:38] *** vendethiel left
[14:40] <xfix> How can I define ... function?

[14:40] <xfix> int open(const char *path, int oflag, ...);

[14:41] *** vendethiel joined
[14:42] <FROGGS[tab]> look at zavolaj's readme and examples or tests

[14:43] <xfix> Eh, open won't help me much.

[14:44] <xfix> It needs constants from fcntl.h.

[14:44] <xfix> Perl 5 has them in https://metacpan.org/pod/Fcntl

[14:44] <xfix> And int open() is sysopen function.

[14:45] <xfix> Or I guess, POSIX::open.

[14:45] <xfix> I need POSIX::open in order to implement low level mmap.

[14:47] <xfix> (how else I would get value of O_RDONLY)

[14:47] <moritz> by copinyg it from the source

[14:47] <xfix> Great, but various operating systems have different O_RDONLY.

[14:47] <moritz> or by writing a small C lib that has a function that returns it

[14:47] <xfix> I guess.

[14:47] <xfix> It's probably better to write C wrapper anyway.

[14:48] <moritz> see Inline::Perl5 for an example that such stuff

[14:48] <xfix> How can I make a Perl 6 package that compiles C code?

[14:48] <moritz> see Inline::Perl5 for an example that such stuff

[14:48] <xfix> ok

[14:49] <xfix> Which depends on LibraryMake.

[14:49] <xfix> https://github.com/retupmoca/P6-LibraryMake/

[14:49] <xfix> ok

[14:50] <moritz> which does much of the hard work

[14:54] <moritz> URI::DefaultPort::scheme_port gives a Null Pointer access on the JVM

[14:55] <moritz> and lots of things depend on that (like all the LWP::Simple tests)

[14:57] <moritz> man, testing stuff on r-j is painfully slow

[15:03] *** vendethiel left
[15:04] *** vendethiel joined
[15:05] *** khisanth_ joined
[15:07] *** Khisanth left
[15:08] <moritz> http://moritz.faui2k3.org/tmp/rakudo-star-2014.12.tar.gz # release preview

[15:09] *** guru joined
[15:10] *** dakkar left
[15:11] *** salv0 left
