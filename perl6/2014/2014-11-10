[00:00] *** beastd left
[00:01] <timotimo> FROGGS++ # for seeing it through to the end

[00:09] <colomon> FROGGS++ indeed!

[00:09] <colomon> timotimo: any progress on the ABC-triggered bug?

[00:19] *** chenryn left
[00:26] *** araujo left
[00:27] *** exixt_ is now known as exixt

[00:28] *** araujo joined
[00:44] *** grondilu left
[00:52] *** espadrine_ left
[00:56] *** kurahaupo1 left
[01:00] *** kurahaupo joined
[01:01] <timotimo> no, sadly not

[01:02] <timotimo> i haven't spent more time on it, to be honest

[01:09] *** mirjam left
[01:20] *** chenryn joined
[01:25] *** chenryn left
[01:31] *** gtodd joined
[01:35] *** xenoterracide joined
[01:41] <timotimo> .tell FROGGS to remind me to ask a favor of you tomorrow 

[01:41] <yoleaux> timotimo: I'll pass your message to FROGGS.

[01:52] *** gtodd left
[01:57] *** virtualsue left
[02:09] *** araujo left
[02:14] *** jerrycheung joined
[02:28] *** KCL joined
[02:31] *** KCL_ left
[02:44] *** ilbot3 left
[02:46] *** ilbot3 joined
[02:50] *** kurahaupo left
[02:51] *** kurahaupo joined
[02:57] *** Ben_Goldberg joined
[02:57] *** BenGoldberg left
[02:57] *** Ben_Goldberg is now known as BenGoldberg

[03:01] *** tinyblak joined
[03:08] *** thou joined
[03:10] *** chenryn joined
[03:16] *** thou left
[03:22] *** Mso150 joined
[03:31] *** xenoterracide left
[03:48] *** PZt joined
[03:49] *** jack_rabbit joined
[03:49] *** Mso150 left
[03:58] *** raiph left
[03:58] *** leont left
[04:01] *** rmgk_ joined
[04:01] *** rmgk is now known as Guest17433

[04:01] *** Guest17433 left
[04:01] *** rmgk_ is now known as rmgk

[04:06] *** telex left
[04:08] *** telex joined
[04:15] *** kaleem joined
[04:22] *** chenryn left
[04:26] *** chenryn joined
[04:32] *** thou joined
[04:37] *** hightower4 left
[04:37] *** Alula joined
[04:40] *** thou left
[04:46] *** kaleem left
[04:46] *** kaleem joined
[04:49] *** [particle]1 joined
[04:50] *** [particle] left
[04:57] *** xtreak joined
[05:03] *** kaleem left
[05:09] *** hightower4 joined
[05:11] *** chenryn left
[05:16] *** xtreak left
[05:20] *** BenGoldberg left
[05:23] *** kaleem joined
[05:23] *** chenryn joined
[05:24] *** kaleem left
[05:30] *** kurahaupo left
[06:14] *** JimmyZ joined
[06:14] <JimmyZ> .tell masak https://github.com/papers-we-love/papers-we-love/tree/master/macros

[06:14] <yoleaux> JimmyZ: I'll pass your message to masak.

[06:16] *** jfredett joined
[06:24] *** bjz joined
[06:28] *** immortal left
[06:29] *** erkan joined
[06:30] *** erkan left
[06:30] *** erkan joined
[06:45] *** kaleem joined
[06:54] *** JimmyZ left
[07:03] *** tinyblak left
[07:03] *** tinyblak joined
[07:04] <dalek> perl6-bench: 1122f8b | (Geoffrey Broadwell)++ | microbenchmarks.pl:

[07:04] <dalek> perl6-bench: Start adding output and expected routines to microbenchmarks

[07:04] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/1122f8b53e

[07:08] *** kaare_ joined
[07:09] *** [Sno] left
[07:09] *** FROGGS[mobile] joined
[07:09] *** jerrycheung left
[07:09] <FROGGS[mobile]> o/

[07:10] <FROGGS[mobile]> timotimo: what do you need?

[07:12] *** tinyblak left
[07:12] *** jfredett left
[07:13] *** tinyblak joined
[07:15] <peteretep> lizmat: Nice to meet you on Saturday!

[07:23] *** FROGGS joined
[07:28] *** gfldex joined
[07:29] <FROGGS> .

[07:29] <yoleaux> 01:41Z <timotimo> FROGGS: to remind me to ask a favor of you tomorrow

[07:34] *** gfldex left
[07:39] *** JimmyZ joined
[07:42] *** tinyblak left
[07:42] *** tinyblak joined
[07:51] <masak> morning, #perl6

[07:51] <yoleaux> 06:14Z <JimmyZ> masak: https://github.com/papers-we-love/papers-we-love/tree/master/macros

[07:52] <masak> thank-you

[07:52] <masak> adding to @pile-of-articles

[07:55] <moritz> http://www.glendix.org/ plan 9 userspace for linux

[07:57] <dalek> roast: 82914ab | TimToady++ | S02-literals/char-by-number.t:

[07:57] <dalek> roast: "\01" is not illegal, just doesn't dwym

[07:57] <dalek> roast: review: https://github.com/perl6/roast/commit/82914abc5e

[07:57] <dalek> roast: f50f63d | TimToady++ | S02-literals/listquote.t:

[07:57] <dalek> roast: should test for ComplexStr too

[07:57] <dalek> roast: review: https://github.com/perl6/roast/commit/f50f63d5d6

[08:08] *** pecastro left
[08:11] *** tinyblak left
[08:12] *** tinyblak joined
[08:14] *** FROGGS[mobile] left
[08:15] *** darutoko joined
[08:17] *** tinyblak_ joined
[08:21] *** tinyblak left
[08:22] <lizmat> good *, #perl6

[08:23] * lizmat survived LPW and associated touristing and shopping  :-)

[08:24] <masak> oh, it's the LPW time of year? nice.

[08:24] <lizmat> I think the question most asked was, whether TimToady's announcement was for real or not

[08:24] <masak> we're all wondering that.

[08:24] <nwc10> lizmat: and the car survived the trip back, with the inevitable haul of books?

[08:24] <lizmat> and the amazed look on everybody's face, when I told them it was real  :-)

[08:25] * masak .oO( TimTrollay )

[08:25] <lizmat> nwc10: mostly CD's this time, but also some books

[08:26] <lizmat> oddly enough, TimToady's announcement does not seem to have made it to the Perl Weekly yet

[08:26] * JimmyZ wonders what status the GLR is

[08:27] <lizmat> JimmyZ is not alone

[08:30] <moritz> pmichaud: is there anything I can do to help with GLR?

[08:31] <lizmat> peteretep: it was good to see you as well!

[08:33] <FROGGS> lizmat: when you have time (and are in a good mood :P), then we should talk about IO::* on windows

[08:33] <lizmat> now would be good

[08:33] <FROGGS> ohh, okay

[08:33] <FROGGS> well, it is broken on windows atm

[08:34] <FROGGS> because chdir and friends do not handle backslashes as dir-seps anymore, which we talked about

[08:34] <FROGGS> but.... $*CWD and dir() do spit out backslashes

[08:35] *** Mso150 joined
[08:35] <lizmat> ok, that's a migration issue I hadn't thought about  yet...

[08:36] <lizmat> which makes it important I move forward asap  :-)

[08:36] <FROGGS> :o)

[08:36] <lizmat> or maybe return chdir() back to it's former logic

[08:36] <lizmat> hmmm....

[08:36] <FROGGS> I'll happily test things for you, or try stuff as a pre-commit hook

[08:37] <lizmat> the problem is that the complete move forward still breaks panda in a very hard to debug way  :-(

[08:39] <FROGGS> really?

[08:39] <FROGGS> hmmm

[08:39] <FROGGS> I can probably help with that too

[08:39] <FROGGS> (if you put your changes in a rakudo branch for example)

[08:40] <lizmat> :-)

[08:45] *** Mso150 left
[08:47] *** molaf__ joined
[08:50] *** Mso150 joined
[08:50] *** molaf_ left
[08:51] *** virtualsue joined
[08:52] *** Alula left
[08:53] *** mirjam joined
[08:54] *** mirjam is now known as rurban

[09:08] *** jack_rabbit left
[09:12] *** amalia joined
[09:13] *** dakkar joined
[09:16] *** [Sno] joined
[09:18] *** ugator joined
[09:22] <masak> FROGGS++ lizmat++

[09:24] *** exixt is now known as exixt_

[09:33] *** anaeem1 joined
[09:34] *** anaeem1 left
[09:52] *** espadrine_ joined
[09:56] *** virtualsue left
[10:02] *** pecastro joined
[10:02] *** JimmyZ left
[10:09] *** ghostlines joined
[10:24] *** TuxCM left
[10:37] *** TuxCM joined
[10:39] *** kurahaupo joined
[10:41] *** n0body_ left
[10:41] *** sqirrel_ joined
[10:43] *** amalia left
[10:47] <timotimo> o/

[10:49] <lizmat> timotimo \o

[10:54] *** virtualsue joined
[11:04] *** ggoebel111111115 joined
[11:06] *** kurahaupo left
[11:06] *** ggoebel111111114 left
[11:14] *** rindolf joined
[11:21] *** kurahaupo joined
[11:28] *** Alula joined
[11:31] <lizmat> hmmm..... interesting way of losing information:

[11:31] <lizmat> m: LEAVE die 2; die 1 #  where is the info about die #1 ?

[11:31] <camelia> rakudo-moar 72703b: OUTPUT«2␤  in block <unit> at /tmp/qwRosv31pU:1␤␤»

[11:32] <timotimo> m: LEAVE die 2; die 1; CATCH { default { say $_ } }

[11:32] <camelia> rakudo-moar 72703b: OUTPUT«2␤  in block <unit> at /tmp/5nMjofQwda:1␤␤»

[11:32] <timotimo> m: { LEAVE die 2; die 1; CATCH { default { say $_ } } } CATCH { default { say $_ } }

[11:32] <camelia> rakudo-moar 72703b: OUTPUT«===SORRY!=== Error while compiling /tmp/JQ57KXf6Uj␤Two terms in a row␤at /tmp/JQ57KXf6Uj:1␤------> ; die 1; CATCH { default { say $_ } } } ⏏CATCH { default { say $_ } }␤    expecting any of:␤        postfix…»

[11:32] <timotimo> m: { LEAVE die 2; die 1; CATCH { default { say $_ } } }; CATCH { default { say $_ } }

[11:32] <camelia> rakudo-moar 72703b: OUTPUT«1␤  in block <unit> at /tmp/P0VUJqE0sL:1␤␤2␤  in block  at /tmp/P0VUJqE0sL:1␤  in block <unit> at /tmp/P0VUJqE0sL:1␤␤»

[11:33] <timotimo> interesting result

[11:33] *** Mso150 left
[11:36] <lizmat> yeah, of course this can be handled ad-hoc

[11:36] <lizmat> but if you have LEAVE code in a block, and you call a module that deep in its bowels does a die, and as a result of that, the LEAVE will also die

[11:37] <lizmat> you never find out what happened deep inside the module

[11:37] <lizmat> I think that's what bugging wrt to panda / File::Find

[11:37] <timotimo> but then the LEAVE is your own problem, no?

[11:37] <lizmat> yes, it is  :-)

[11:37] <timotimo> ah, then i seem to be understanding correctly

[11:38] *** daxim joined
[11:38] <timotimo> i agree that panda swallowing error information everywhere is annoying

[11:38] <FROGGS> I still think that you have to care about such a situation by yourself

[11:38] <lizmat> but it can be very confusing...  as the reason why the code in the LEAVE is failing, could be caused internally

[11:39] <FROGGS> one could argue that LEAVE is only for leaving "normally", but I don't know if that has a design smell or not

[11:39] <lizmat> no, no

[11:39] <lizmat> that's not what I meant

[11:39] <lizmat> but I do think we need to have a way to preserve the "inner" stacktrace

[11:39] <timotimo> for leaving normally, there's KEEP

[11:39] <timotimo> and UNDO for the explicit case of leaving with error

[11:40] <lizmat> as in, we should never drop stack traces

[11:40] <lizmat> something I think we need to think about, specifically wrt to phasers that are called upon exit states, like LEAVE, NEXT, LAST, END  etc

[11:43] *** chenryn left
[11:46] *** leont joined
[11:47] <Juerd> moritz: Note that the end of the year is not a hard deadline

[11:48] *** bowtie_ left
[11:48] <Juerd> moritz: Also, is the 350 euro all that's needed? I'll cough up a significant bit then. It's much less than I would have spent on keeping the current feather.

[11:49] *** bowtie joined
[11:49] *** bowtie is now known as Guest56800

[11:49] <dalek> nqp/openpipe: d74d5c5 | (Tobias Leich)++ | tools/build/PARROT_REVISION:

[11:49] <dalek> nqp/openpipe: bump parrot rev for a GC fix, rurban++

[11:49] <dalek> nqp/openpipe: review: https://github.com/perl6/nqp/commit/d74d5c5d31

[11:49] <dalek> nqp/openpipe: 12f9f84 | (Arne Skjærholt)++ | docs/ops.markdown:

[11:49] <dalek> nqp/openpipe: Document control QAST op.

[11:49] <dalek> nqp/openpipe: review: https://github.com/perl6/nqp/commit/12f9f845ef

[11:49] <dalek> nqp/openpipe: ee2ca3a | (Tobias Leich)++ | src/vm/parrot/ (25 files):

[11:49] <dalek> nqp/openpipe: silence most warning when building on parrot, fixes #198

[11:49] <dalek> nqp/openpipe: review: https://github.com/perl6/nqp/commit/ee2ca3aac6

[11:49] <dalek> nqp/openpipe: c0bc3d9 | (Tobias Leich)++ | / (27 files):

[11:49] <dalek> nqp/openpipe: Merge branch 'master' of github.com:perl6/nqp into openpipe

[11:49] <dalek> nqp/openpipe: review: https://github.com/perl6/nqp/commit/c0bc3d975a

[11:52] *** kaleem left
[11:53] *** Guest56800 left
[11:53] *** sqirrel_ left
[11:55] *** bowtie_ joined
[11:56] <timotimo> looking for some more suggestions for the weekly

[11:56] <timotimo> http://p6weekly.wordpress.com/?p=255&shareadraft=5460a7e54dbec

[11:56] <moritz> Juerd: we're aiming for a bit beefier hardware, and I have various pledges for donations already

[11:56] <moritz> Juerd: and it's good that it's not a hard deadline, 'cause it might take some time

[11:58] <nwc10> timotimo: if you want to add some humour, you might want to add a footnote after the GLR, NSA and NFG acronyms something like "Any resemblance to real TLAs, living or dead, is purely coincidental."

[11:59] <masak> :)

[11:59] * timotimo would have to look up two of the three to figure out what they could stand for

[12:00] <nwc10> I don't think that there's a "real" definition for GLR

[12:00] <nwc10> but the usual meaning of NFG is quite inappropriately rude, and NSA quite inappropriately out of context

[12:01] <nwc10> (although the NSA would probably disagree, as I'd guess that they view themselves as always in scope)

[12:02] <nwc10> timotimo: I can't spot anything *constructive* to suggest :-)

[12:02] <timotimo> hah

[12:03] <timotimo> that sounds like you're barely holding back your insults :D

[12:03] <nwc10> I was only intending to insult my previous suggestion

[12:03] <timotimo> all right then

[12:06] *** JimmyZ joined
[12:18] *** brrt joined
[12:20] *** sqirrel_ joined
[12:20] <jnthn> timotimo: LPG to me

[12:21] <timotimo> i'm adding even more, though! :)

[12:23] <JimmyZ> LPG?

[12:23] <timotimo> "looks pretty good"

[12:23] <timotimo> (is my guess)

[12:24] <lizmat> just wondering: in File::Find, is checkrules part of the external API ?

[12:26] <brrt> \o

[12:26] <brrt> liquified propane gas

[12:27] <FROGGS> does somebody here know how to please such a warning?

[12:27] <FROGGS> nqp_ops.c: In function ‘quicksort’:

[12:27] <FROGGS> nqp_ops.c:171:1: warning: stack usage is 1512 bytes [-Wstack-usage=]

[12:27] <brrt> what.. why would that be wrong?

[12:27] <timotimo> because smaller stacks are better stacks

[12:27] <brrt> i'd think by splitting stuff over multiple functions

[12:28] <FROGGS> splitting up quicksort? hehe, no, that's out of my reach :P

[12:28] * brrt not sure if sarcasm or not

[12:28] <FROGGS> no sarcasm involved

[12:29] <brrt> hmmm

[12:29] <FROGGS> https://github.com/perl6/nqp/blob/master/src/vm/parrot/ops/nqp.ops#L101

[12:30] <FROGGS> ohh, I think my openpipe port works O.o

[12:31] <FROGGS> I am shocked

[12:31] <brrt> well, you allocate 100 'begin' integers (400 bytes at least), 100 'end' integers, that shouldn't be a problem unless intval is 64 bits wide

[12:31] <brrt> which i'd expect given this is perl6

[12:31] <FROGGS> it is 64bits, aye

[12:32] <timotimo> so that quicksort would support arrays with how many elements exactly? :)

[12:32] *** tinyblak joined
[12:32] <brrt> note that 100 levels of recursion deep is either a sign of a pathological case or 2^100 ints deep

[12:32] <brrt> also.. why u no use qsort()

[12:32] <FROGGS> timotimo did that, it is all his fault!

[12:33] <timotimo> oh crap, they found it out!

[12:33] * timotimo hides, quickly

[12:33] <brrt> only data can ever going to convince me the function call overhead will kill usb :-)

[12:33] <brrt> :-D

[12:33] <brrt> s/usb/us/

[12:33] <FROGGS> it is also funny with 'usb' :D

[12:33] <FROGGS> sort of

[12:33] <timotimo> there's no overhead to "allocating" 100 64bit integers on the stack

[12:34] <brrt> no

[12:34] <brrt> it is an OK solution

[12:34] <brrt> this will not be called recursively

[12:34] <timotimo> correct

[12:34] *** tinyblak_ left
[12:35] <brrt> HOWEVER i think this will fail for a pre-sorted array because it always pick the left element for the pivot

[12:35] <timotimo> selecting a pivot is A Hard Problem™

[12:36] <brrt> yes, and it is adequately solved by randomisation :-)

[12:36] <timotimo> i agree

[12:37] <FROGGS> we have the very same quicksort in MoarVM... does it make sense to replace it with qsort and benchmark it?

[12:37] <brrt> i think it does

[12:37] <brrt> but that's just, like, my opinion dude

[12:37] <FROGGS> hehe

[12:37] <masak> I know some algorithms that flip the sorting strategy in the middle if the array turns out to be "mostly sorted".

[12:37] <FROGGS> GO OUT OF THAT CHANNEL!!11 NO OPINIONS HERE DUDE!!11

[12:38] <brrt> really? that seems.. tricky

[12:38] <masak> I think the Java API's sort does that.

[12:38] <brrt> and edge-case-vulnerable

[12:38] * timotimo does something unspeakable to brrt's carpet

[12:38] <timotimo> there's TimSort, which was invented by a python person

[12:38] <masak> and they do it that way because that's what fell out of profiling.

[12:38] <timotimo> it's pretty clever about sorted subsequences or something like that

[12:38] *** tinyblak left
[12:39] *** tinyblak joined
[12:39] <rurban> the stack access should fit into the L0 cache

[12:39] <rurban> so >256 is excessive

[12:40] <brrt> L0 cache is that small?

[12:40] <timotimo> l0 is very small

[12:40] <brrt> i see

[12:40] <rurban> depends on the processors.

[12:40] <timotimo> hmm. not entirely sure how small it is in my system

[12:41] <rurban> but my rule of thumb is stack < 256 or < 1024 occasionally

[12:41] <rurban> wordsize of course, not bytes

[12:42] <leont> Yeah, I was surprised by that too

[12:43] <rurban> parrot even emits emits a warning on overlarge stack sizes with —cage

[12:46] <brrt> well, even if your pseudostack would fit into l0 cache, that doesn't mean your sorted array will, so even then i'm not seeing the benefit yet

[12:46] *** kaleem joined
[12:46] <brrt> or rather, the worry

[12:50] *** denis_boyun_ joined
[12:55] *** bowtie_ left
[12:57] *** guru joined
[12:57] *** guru is now known as Guest15635

[12:57] *** rindolf left
[12:57] *** bowtie joined
[12:58] *** bowtie is now known as Guest22439

[13:00] *** sqirrel_ left
[13:02] *** Guest15635 is now known as ajr_

[13:05] *** tinyblak left
[13:06] <lizmat> so do we have a way to exit a process pronto *without* running any LEAVE / END / whatever blocks ?

[13:06] <lizmat> similar to p5's POSIX::exit0() ?

[13:07] <brrt> signal(getpid(), 9) :-P

[13:07] <lizmat> hehe

[13:07] <lizmat> Hmmm... nqp::exit()?

[13:08] <moritz> from an email that pledges a donation for the server: "BTW, do you know of a consultant that can assist us with a few debian server details: hot cloning, exim4 and spamassassin?"

[13:09] <moritz> if anybody wants to do such things, please tell me

[13:10] <lizmat> m: END say "hello world"; exit

[13:10] <camelia> rakudo-moar 72703b: OUTPUT«hello world␤»

[13:10] <lizmat> m: END say "hello world"; nqp::exit(0)

[13:10] <camelia> rakudo-moar 72703b: ( no output )

[13:17] <leont> brrt: you mean kill instead of signal ;-)

[13:17] *** kurahaupo left
[13:17] <brrt> leont - you're quite right

[13:20] <masak> m: END say "OH BAI"; exit # clearly an END block can't say "hello world" :P

[13:20] <camelia> rakudo-moar 72703b: OUTPUT«OH BAI␤»

[13:24] *** fhelmberger joined
[13:26] *** tinyblak joined
[13:27] <masak> but nqp::exit() feels like exactly the low-enough layer to trigger an immediate exit that doesn't go via LEAVE/END phasers.

[13:27] *** woolfy left
[13:27] *** woolfy1 joined
[13:29] <jnthn> The quicksort in question is only ever used for LTM fates

[13:29] *** Guest22439 left
[13:29] <jnthn> Given it's mostly shuffling, a bubble sort may even be mroe effective...

[13:31] <jnthn> About L0 cache, it's a darn *cache*, so what matters is what memory you access, not how much is allocated. So whining about oversized stack frames is stupid.

[13:31] <jnthn> You have to know something about the usage pattern to know if it's a problem.

[13:32] *** bowtie joined
[13:32] *** bowtie is now known as Guest19656

[13:34] <brrt> LTM?

[13:34] <jnthn> Longest token matching

[13:35] <brrt> ah

[13:35] <brrt> hmm

[13:35] <brrt> then changing to qsort might make a differenc

[13:35] <brrt> e

[13:53] *** zakharyas joined
[14:02] *** jfredett joined
[14:18] *** gtodd joined
[14:20] *** araujo joined
[14:22] *** xenoterracide joined
[14:25] *** kaleem_ joined
[14:28] *** kaleem left
[14:28] *** KCL_ joined
[14:30] *** telex left
[14:31] *** KCL left
[14:32] *** telex joined
[14:34] *** raiph joined
[14:40] *** Guest19656 left
[14:41] *** xenoterracide left
[14:42] *** bowtie joined
[14:42] *** bowtie is now known as Guest65241

[14:44] <rurban> We have a problem with nqp lstat vs stat. parrot uses POSIX lstat, nqp thinks that stat should perform lstat with STAT_ISLNK

[14:44] <rurban> moar and jvm should use lstat for symlinks

[14:45] <rurban> or use a different symlink check

[14:46] *** zakharyas left
[14:49] <Juerd> moritz: What's the total amount you're aiming for?

[14:52] *** Alula left
[14:54] *** Alula joined
[14:57] <moritz> Juerd: there are several options I'm considering right now. The highest would be new hardware for 1900EUR

[14:57] <moritz> Juerd: though other folks are currently investigating if a company that's rather friendly to Perl developers has spare, used hardware that we could get cheaper, and with more power

[14:57] *** ajr_ left
[14:59] <moritz> Juerd: so I'd say once we know if it'll actually be new hardware, I'll tell you (and the rest of the world), and then you can make an informed decision about donating

[14:59] *** guru joined
[14:59] *** guru is now known as Guest73764

[15:00] *** Guest73764 is now known as ajr_

[15:01] *** thou joined
[15:01] <moritz> and after szabgab++ mentioned my article in Perl Weekly, there has been a second wave of pledges

[15:02] <pmichaud> good morning, #perl6

[15:02] <moritz> \o pmichaud 

[15:02] * TuxCM reminds the p6 people there is a (very slow) HP-UX machine at their disposal, might they want to use that

[15:02] <FROGGS> hi pmichaud 

[15:03] * TuxCM reminds FROGGS about Tuxic :P

[15:03] <FROGGS> *g*

[15:03] <FROGGS> yeah...

[15:03] <FROGGS> have to do that

[15:03] <nwc10> good *, Pm

[15:03] <lizmat> pmichaud o/

[15:04] *** [Sno] left
[15:04] <FROGGS> TuxCM: I'd like to get MoarVM+nqp+rakudo tor un on that box...

[15:04] <FROGGS> to run*

[15:05] <TuxCM> send a mail with your id_rsa.pub and the required logname to h dot merijn at procura dot nl

[15:05] <nwc10> FROGGS: I might have a patch to get MoarVM slightly further than it is currently on HP-UX

[15:05] <FROGGS> nwc10: I'll happily accept it :o)

[15:05] <nwc10> but the next thing that I hit was the build system for one of the embedded deps

[15:06] <nwc10> FROGGS: Offhand I don't know where it is. IIRC it's to do with not busting the length limits on pre-processor macros

[15:06] <nwc10> the static inline detection code should (bloody) work on HP/UX and AIX (because I tested it)

[15:06] <FROGGS> ohh, okay

[15:06] <TuxCM> nwc10, HP-UX 10.20 is *not* a target for MoarVM I presume

[15:07] <nwc10> TuxCM: I think the answer is "oh $deity no"

[15:07] <TuxCM> then there are options to set the limit on macro space

[15:07] <nwc10> I'm still attempting to get $real_life back down to size

[15:07] <TuxCM> (not supported on 10.20)

[15:08] <TuxCM> lemme check if I can find those options

[15:08] <nwc10> TuxCM: there was a much easier way to fix it. It was the MVM_ROOT macro, which is just a shortcut for other code

[15:08] <nwc10> please don't look, it wasn't needed

[15:08] * TuxCM stops searching

[15:08] <nwc10> and IIRC it's also needed for xlc

[15:08] <TuxCM> xlc--

[15:08] <nwc10> but

[15:08] <nwc10> xlc++ # if you code works on xlc, it probbaly works everywhere

[15:09] <TuxCM> and it is not xlc that is buggy, it is the preprocessor it uses

[15:09] <moritz> one would think that writing a preprocessor would be much easier to get right than writing a C compiler

[15:09] <nwc10> oh yes, *that* one (the processor)

[15:09] <nwc10> IIRC it managed to mis-substitute macro parameters

[15:10] <TuxCM> it is not ansi-compliant

[15:10] <TuxCM> IIRC ^\s+define\s+foo(a,b)\s+... is misinterpreted

[15:11] <TuxCM> IIRC ^\s+#define\s+foo(a,b)\s+... is misinterpreted

[15:11] <TuxCM> or ^\s+#\s+define\s+foo(a,b)\s+... 

[15:14] *** gtodd left
[15:29] <dalek> rakudo/nom: 7ecf691 | (Elizabeth Mattijsen)++ | src/core/IO.pm:

[15:29] <dalek> rakudo/nom: Fix problem with MAKE-ROOT

[15:29] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7ecf691c00

[15:31] *** Diederich-away is now known as Diederich

[15:33] *** Guest65241 left
[15:35] *** bowtie joined
[15:35] *** bowtie is now known as Guest67324

[15:36] *** mirjam joined
[15:38] *** rurban left
[15:38] <peteretep> I am trying to understand https://github.com/rakudo-p5/v5/ at a high level

[15:38] <peteretep> How does it get around the fact that Perl "can't be parsed", in terms of barewords and sub signatures?

[15:40] <hoelzro> morning #perl6

[15:40] <moritz> peteretep: it can't be parsed without being executed. v5 also executed it, just like perl5 does

[15:40] <moritz> \o hoelzro 

[15:40] <peteretep> moritz: OK, that makes sense

[15:41] *** mirjam left
[15:41] *** rurban joined
[15:45] *** JimmyZ left
[15:48] *** sqirrel_ joined
[15:49] *** bjz_ joined
[15:49] *** bjz left
[15:49] *** treehug88 joined
[15:50] *** kaleem_ left
[15:51] *** kaleem joined
[15:52] *** kaleem left
[15:57] <dalek> nqp/openpipe: 4818829 | (Tobias Leich)++ | / (5 files):

[15:57] <dalek> nqp/openpipe: add working openpipe op for nqp on parrot on linux

[15:57] <dalek> nqp/openpipe: 

[15:57] <dalek> nqp/openpipe: That means that we have openpipe on all platforms/backends except

[15:57] <dalek> nqp/openpipe: for parrot on windows.

[15:57] <dalek> nqp/openpipe: review: https://github.com/perl6/nqp/commit/4818829d33

[15:59] *** gtodd joined
[15:59] *** bjz_ left
[15:59] <lizmat> timotimo++ for weekly

[16:00] *** bjz joined
[16:02] <hoelzro> indeed

[16:02] <hoelzro> timotimo++

[16:04] <FROGGS> nice article

[16:04] <FROGGS> timotimo++

[16:08] <dalek> perl6-roast-data: 94bcb86 | coke++ | / (5 files):

[16:08] <dalek> perl6-roast-data: today (automated commit)

[16:08] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/94bcb86f96

[16:10] <moritz> timotimo++ indeed

[16:10] <moritz> timotimo: would you mind including a link to http://perlgeek.de/blog-en/perl-6/2014-community-server-funding.html

[16:10] <dalek> nqp/parrot-lstat: d5f7c98 | rurban++ | / (3 files):

[16:10] <dalek> nqp/parrot-lstat: support lstat for symlinks on parrot

[16:10] <dalek> nqp/parrot-lstat: 

[16:10] <dalek> nqp/parrot-lstat: requires the parrot fix for GH #1129

[16:10] <dalek> nqp/parrot-lstat: review: https://github.com/perl6/nqp/commit/d5f7c98e37

[16:13] *** ghostlines left
[16:14] <[Coke]> the parrot macport is currently at 3.3.0; no one has complained about a lack of updates there. If someone wants to own the macport and provide builds, let me know.

[16:15] <rurban> I am a macports user, but apparently never needed it

[16:15] <rurban> do you have register there somehow?

[16:16] <rurban> I'm not strong with tcl

[16:16] <rurban> rakudo would be important there, with the 3 backend variants

[16:19] *** denis_boyun_ left
[16:19] <rurban> A parallel test target for nqp would also be nice (prove -j4)

[16:20] <FROGGS> TEST_JOBS=4 should do

[16:20] <rurban> hmm, didn't work for me

[16:20] <rurban> works fine on parrot though

[16:22] <FROGGS> make -j4 p-test

[16:22] <FROGGS> prove -r --exec "./nqp-p --vmlibs=nqp_dyncall_ops" t/nqp t/parrot t/hll t/qregex t/p5regex t/qast t/serialization t/nativecall

[16:22] <FROGGS> it just swallows the -j

[16:22] <FROGGS> but you could use the prove command directly as a workaround

[16:22] <rurban> yes, did that.

[16:23] <rurban> but I'll forget about it, and parallel is so much faster

[16:23] <FROGGS> true

[16:30] <[Coke]> (parrot macport) - whoops, meant to ask in #parrot.

[16:32] <FROGGS> sigh

[16:32] <FROGGS> now I've got openpipe working perl6-p on linux... and now sending the report segfauls

[16:33] <FROGGS> segfaults*

[16:33] <japhb> timotimo: The branch I merged was called 'stress', not 'stresstest'

[16:33] <FROGGS> again in 0x00007ffff2e3f582 in Rakudo_cont_is_rw_scalar (interp=interp@entry=0x610060, check=0x109dbb88) at container.c:203

[16:33] <FROGGS> 203	    if (IS_CONCRETE(check) && STABLE(check)->WHAT == scalar_type) {

[16:35] <dalek> rakudo/openpipe: e5ae2e7 | (Tobias Leich)++ | src/core/IO/Handle.pm:

[16:35] <dalek> rakudo/openpipe: unfudge open("rp") on parrot

[16:35] <dalek> rakudo/openpipe: review: https://github.com/rakudo/rakudo/commit/e5ae2e7306

[16:36] *** brrt left
[16:41] <FROGGS> okay, this line: my $buf = Buf.new(self.to-json.ords);

[16:42] <FROGGS> fails with: Unmarshallable foreign language value passed for parameter '$value'

[16:45] *** tinyblak left
[16:46] *** anaeem1 joined
[16:46] *** tinyblak joined
[16:47] *** rurban left
[16:47] *** rurban joined
[16:49] *** [Sno] joined
[16:49] <PerlJam> greetings!

[16:50] <hoelzro> o/ PerlJam 

[16:50] <FROGGS> hi PerlJam 

[16:50] *** tinyblak left
[16:51] <FROGGS> perl6-p: say $*VM

[16:51] <FROGGS> p: say $*VM

[16:51] <camelia> rakudo-parrot 7ecf69: OUTPUT«parrot (6.9.0)␤»

[16:52] <FROGGS> p: say $*VM.perl

[16:52] <camelia> rakudo-parrot 7ecf69: OUTPUT«VM.new(config => {"perldoc" => "/home/camelia/perl5/perlbrew/perls/perl-5.20.1/bin/perldoc", "i_syssysctl" => "define", "nvsize" => "8", "has_core_nci_thunks" => "1", "optimize" => "-O2", "intvalmin" => "LONG_MIN", "has_glut" => "4", "nv" => "double", "h…»

[16:52] <FROGGS> p: say $*PERL.perl

[16:52] <camelia> rakudo-parrot 7ecf69: OUTPUT«Perl.new(compiler => Compiler.new(release => "", build-date => DateTime.new(year => 2014, month => 11, day => 10, hour => 16, minute => 17, second => 1), codename => "", name => "rakudo", auth => "The Perl Foundation", version => Version.new('2014.10.97.…»

[16:52] <FROGGS> p: say $*KERNEL.perl

[16:52] <camelia> rakudo-parrot 7ecf69: OUTPUT«Kernel.new(release => "#1 SMP Fri May 31 20:21:23 UTC 2013 (97c14ba)", name => "linux", auth => "unknown", version => Version.new('1.SMP.Fri.May.31.20.21.23.UTC.2013.97.c.14.ba'), signature => Blob, desc => Str)␤»

[16:52] <FROGGS> p: say $*DISTRO.perl

[16:52] <camelia> rakudo-parrot 7ecf69: OUTPUT«Distro.new(release => "3.7.10-1.16-default", is-win => Bool::False, path-sep => ":", name => "linux", auth => "unknown", version => Version.new('3.7.10.1.16.default'), signature => Blob, desc => Str)␤»

[16:54] *** lucs left
[16:54] <jdv79> are there any good resources, aside from src diving, to learn about slangs.  i don't get most of how Tuxic works.

[16:54] <FROGGS> jdv79: slangs are pretty new actually

[16:54] *** spider-mario joined
[16:55] <FROGGS> so we are exploring how they could work atm

[16:55] <FROGGS> I try to make it user friendly these days, but it is not yet the case

[16:56] <jdv79> new in concept or in implementation?  i could have sworn i read about them years ago.

[16:56] <FROGGS> implementation

[16:56] <FROGGS> I can explain later how you can create a slang today

[16:56] <tony-o> coffeeperl 

[16:56] <masak> \o

[16:56] <FROGGS> but I've got to move home in a few minutes

[16:56] <tony-o> (gags self)

[16:57] <jdv79> that would be great.  maybe a line by line of Tuxic for dummies.

[16:57] <masak> tony-o: because you've always wanted to indent your Perl and avoid declaring variables?

[16:57] <jdv79> good luck with that

[16:57] <tony-o> masak: hahaha

[16:57] <masak> I'll take that as a "no".

[16:58] <tony-o> i have good indenting and always declare :-), just not a fan of coffee script

[16:58] *** ajr_ left
[16:58] *** guru joined
[16:59] *** guru is now known as Guest3106

[16:59] *** Guest3106 is now known as ajr_

[17:00] *** sqirrel_ left
[17:00] <tony-o> it has some cool tricks but it prints out some ugly JS

[17:00] <nine> I'm looking for someone who is doing or wants to do a port of a serious module from P5 to P6. Doesn't have to be something major like Dancer but shouldn't be something trivial either. mohawk++ has volunteered to convert any lessons learned into some real good documentation.

[17:00] <dalek> mu: dd41d2a | duff++ | misc/perl6advent-2014/ (2 files):

[17:01] <dalek> mu: Start on Advent 2014

[17:01] <dalek> mu: review: https://github.com/perl6/mu/commit/dd41d2af54

[17:01] <tony-o> nine: of a serious module?

[17:01] <FROGGS> "No such method 'gist' for invocant of type 'NQPLexPad'" - I fear there is something strange going on still

[17:01] <PerlJam> tony-o: no Acme modules ;)

[17:01] <FROGGS> nine: XML::LibXML?

[17:01] <nine> tony-o: in essence something large enough to allow a good number of lessons to be learned

[17:01] <PerlJam> nine: got any candidates?

[17:02] *** kaleem joined
[17:02] <FROGGS> nine: and then XML::Compile?

[17:02] <FROGGS> brb

[17:02] *** FROGGS left
[17:02] <masak> nine: do https://github.com/jnthn/json-path and http://strangelyconsistent.org/blog/sweet-ports count?

[17:02] <tony-o> FROGGS: i thought you were working on xml-libxml 

[17:03] <nine> PerlJam: me, no. Should probably be something the porter wants/needs herself for motivation. If I want to use some P5 module in P6, I make sure Inline::Perl5 can do it. Seems like a better way for me to invest my energy.

[17:03] <PerlJam> nine: btw, do you have an account for perl6advent.wordpress.com  ?

[17:04] <nine> PerlJam: not that I'm aware of, no.

[17:04] <nine> masak: hard to say as I'm just the in-between guy here, but I guess he had something larger in mind.

[17:05] *** FROGGS[mobile] joined
[17:05] <nine> FROGGS: XML::LibXML sounds like something every language needs and is something quite substantial.

[17:05] <PerlJam> nine: Are you willing to write something for this year's Perl 6 Advent Calendar?  (If so, tell me an email address I can send an invite to)

[17:06] <jnthn> The JSON::Path port is one that very nicely illustrates the power of some Perl 6 things

[17:06] <jnthn> It came out radically different.

[17:06] <masak> and the power of some lambda-based programming, too.

[17:07] <jnthn> ayez

[17:07] <tony-o> jnthn: i was just reading JSON::Path, it looks really cool

[17:07] <PerlJam> masak/jnthn:   Sounds like good fodder for Advent!  :)

[17:07] <masak> basically, you can build entire programs dynamically, if you know how to plug your lambdas together.

[17:07] <PerlJam> (I know it's early yet, but I thought I'd start mentioning it to get people thinking about advent)

[17:07] <jnthn> I have some slides on it somewhere too

[17:07] <masak> PerlJam++

[17:07] <nine> PerlJam: willing yes. But I don't think I'll have the time. Will spend the next three weeks trying to inflate my master's thesis by another 15 pages just to satisfy some arbitrary size criteria for acceptance :/

[17:08] <PerlJam> nine: you don't have to write anything big or involved.  You could just quickly illustrate Inline::Perl5 for instance.   IT doesn't have to take loads of time.

[17:08] <jnthn> ah, yeah, it's in http://jnthn.net/papers/2013-apw-lessons.pdf

[17:09] <jnthn> Which is a talk I only gave once, but really deserves giving another time...

[17:10] <nine> jnthn: that talk is one of the absolutely most useful talks I've ever seen

[17:11] <nine> PerlJam: what would be the time frame?

[17:11] <PerlJam> Is anyone working on a DBIC-like thing for P6 yet?

[17:12] *** rindolf joined
[17:12] <PerlJam> nine: produce one (or more) articles at your convenience sometime between Dec 1 and Dec 24 (inclusive)   :)  You could write something up now if you wanted and publish it on one of those days.

[17:13] <PerlJam> nine: See https://github.com/perl6/mu/tree/master/misc/perl6advent-2014  for the schedule and some ideas for topics  

[17:13] <jnthn> +1 to an Inline::Perl5 one. Since a lot of advent readers are not close followers of what happens the rest of the year in Perl 6, it doesn't have to be anything advanced. Using the examples presented in the Inline::Perl5 talk would and some words around them would probably cut it. :)

[17:13] *** anaeem1 left
[17:13] <tony-o> PerlJam: which part? i wrote something on dbiish that is not at all like the dbix::class stuff

[17:14] <tony-o> it's loose and good for prototyping but i wouldn't use it for a real productive system unless you're super lazy and don't care for your job

[17:14] <nine> Ok, I'll see what I can do :) December should be a bit more quiet already.

[17:15] <PerlJam> tony-o: any of it.  I was curious if ORMish things have cropped up on anybody's radar yet

[17:15] <tony-o> PerlJam: https://github.com/tony-o/perl6-db-orm-quicky

[17:15] <PerlJam> nine: send me your email address and I'll get you an invite so you can contribute

[17:17] <moritz> PerlJam: too late, I already invited nine++

[17:17] <nine> In Perl 6 we could finally have an ORM with LINQ like query syntax...

[17:17] <PerlJam> moritz++

[17:17] <tony-o> PerlJam: i think i have a pretty good/similar searching mechanism as DBIC

[17:17] <PerlJam> tony-o: do *you* have an account for the advent calendar? :)

[17:17] <tony-o> PerlJam: i don't 

[17:17] <nine> I seem to be doing something wrong. I was looking for a volunteer and somehow ended up volunteering myself.

[17:18] <tony-o> nine: lol.

[17:18] <moritz> tony-o: same game, /msg somebody (PerlJam or me) an email address, you'll get an invitation

[17:18] *** anaeem1_ joined
[17:19] *** [Sno] left
[17:20] <tony-o> i need to read what you asked nine to do real quick

[17:21] <moritz> tony-o: write an article about someting Perl 6-related for the perl 6 advent calendar

[17:21] <FROGGS[mobile]> GIVE US YOUR FIRST BORN REAL QUICK11!!

[17:21] <tony-o> is it just going on a blog?

[17:21] <tony-o> FROGGS[mobile]: lol

[17:21] <PerlJam> tony-o: Look at https://github.com/perl6/mu/blob/master/misc/perl6advent-2014/topic-brainstorming for some ideas of what to write  (if you have commit access to perl6/mu, feel free to add your own ideas too)

[17:22] <PerlJam> tony-o: look at http://perl6advent.wordpress.com/ to get an idea of past advent articles size and shape :)

[17:23] <colomon> oh, 2014 Advent planning started?

[17:23] *** gfldex joined
[17:24] <PerlJam> colomon: aye.

[17:25] <PerlJam> at least I'm starting to remind people about it.

[17:25] *** pecastro left
[17:25] <colomon> PerlJam++

[17:30] <dalek> perl6-bench: 57fa5f1 | (Geoffrey Broadwell)++ | microbenchmarks.pl:

[17:30] <dalek> perl6-bench: Add output and expected subs to three more microbenchmarks

[17:30] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/57fa5f1ea5

[17:31] *** rindolf left
[17:31] <japhb> timotimo: The above ^^ commit should help you with the infinilooping while_pushme benchmark.  Please let me know if it does not.

[17:35] *** fhelmberger left
[17:38] *** bjz left
[17:38] *** bjz joined
[17:40] *** rindolf joined
[17:41] <tony-o> PerlJam: was that what you were looking for or something more substantial? re: orm

[17:43] <PerlJam> tony-o: that'll do, thanks.  :)   I was mostly just curious, but now you've given me a toy to play with  ;)

[17:44] <tony-o> PerlJam: i imagine there is some things you'll run into with querying that could be extended more

[17:44] <tony-o> nine: do you have an example of a good implementation of LINQ?

[17:44] <tony-o> ABAP ?

[17:44] *** virtualsue left
[17:45] *** panchiniak joined
[17:46] *** [Sno] joined
[17:49] *** panchiniak left
[17:49] *** panchiniak joined
[17:51] *** panchiniak left
[17:52] *** kaleem left
[17:54] *** Sqirrel left
[17:54] *** denis_boyun joined
[17:59] <dalek> rakudo/nom: cb1b1c5 | (Elizabeth Mattijsen)++ | src/core/IO.pm:

[17:59] <dalek> rakudo/nom: Fix issues with MAKE-CLEAN-PARTS

[17:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cb1b1c547c

[18:01] *** denis_boyun left
[18:03] *** rurban left
[18:03] <dalek> doc: b8d0d4d | (Steve Mynott)++ | lib/Type/Date.pod:

[18:03] <dalek> doc: truncated-to args as spec and code

[18:03] <dalek> doc: review: https://github.com/perl6/doc/commit/b8d0d4d55a

[18:06] <vendethiel> o/,#perl6

[18:09] *** dakkar left
[18:12] *** denis_boyun_ joined
[18:12] *** FROGGS joined
[18:13] *** ajr_ left
[18:15] *** guru joined
[18:15] *** guru is now known as ajr_

[18:18] *** ajr_ left
[18:19] *** anaeem1_ left
[18:20] *** exixt_ is now known as exixt

[18:22] *** Alina-malina left
[18:27] *** felher_ is now known as felher

[18:29] *** immortal joined
[18:30] <TimToady> tweaking qsort in LTM won't make much difference, given compiling the setting gives a preponderance of 0 or 1 fates *total*, with occasional 2's, which might or might not be the same length (didn't measure that)

[18:31] <FROGGS> k

[18:31] <FROGGS> so I leave it as it is

[18:31] *** erkan left
[18:31] <TimToady> excessive numbers of fates does not seem to be a problem, at least for parsing Perl 6

[18:31] <TimToady> I'm sure pathalogical cases could be generated

[18:31] <TimToady> *patho

[18:32] *** leont left
[18:33] <TimToady> probably the 2's are different lengths, given the longer one is a keyword requiring a whitespace, and the shorter is <identifier> or so

[18:34] <TimToady> might have better luck cutting down the size of the NFA table, which is just a flat array of int64s right now, with lots of wasted bits and probable cache misses

[18:35] <TimToady> or taking the parallel nfa and doing state set caching DFA, like grep does

[18:36] <TimToady> or maybe just cache the state set of the first characters, which probably cuts the first pass way down

[18:36] <TimToady> since most keywords are disjunct in the first char

[18:37] <TimToady> (you can tell I've been thinking about this some while getting over my "flu-like symptoms")

[18:38] *** Alina-malina joined
[18:39] <FROGGS> yeah, and I have problems to follow :o)

[18:40] <cxreg> is there any replacement for planeteria yet?

[18:40] *** espadrine_ left
[18:40] *** zakharyas joined
[18:40] <lizmat> going interstellar for a bit&

[18:41] <TimToady> pl6anet.org

[18:41] <cxreg> TimToady++

[18:44] <Diederich> lizmat: amazing, fantastic movie

[18:44] <Diederich> though it won't be for everyone

[18:51] *** guru joined
[18:51] *** japhb left
[18:51] *** guru is now known as Guest67310

[18:51] *** anaeem1_ joined
[18:51] *** Guest67310 is now known as ajr_

[18:54] *** anaeem1_ left
[18:55] <masak> jnthn++ # http://jnthn.net/papers/2013-apw-lessons.pdf

[18:56] *** anaeem1_ joined
[18:58] *** eternaleye left
[19:03] *** eternaleye joined
[19:05] *** cognominal left
[19:06] *** thou left
[19:14] *** japhb joined
[19:15] *** Mso150 joined
[19:17] *** ugator left
[19:19] *** FROGGS[mobile] left
[19:20] <dalek> roast: 5d89b28 | usev6++ | S19-command-line/dash-e.t:

[19:20] <dalek> roast: Unfudge passing tests for Parrot on Mac OS X

[19:20] <dalek> roast: review: https://github.com/perl6/roast/commit/5d89b2877e

[19:22] <dalek> Perlito: aabebb0 | (Flavio S. Glock)++ | misc/typeglob/dumper.pl:

[19:22] <dalek> Perlito: misc - dumper script tweak

[19:22] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/aabebb0fec

[19:23] *** Sqirrel joined
[19:23] <nwc10> itz: You're aware that the top link on http://pl6anet.org/ is to http://p6weekly.wordpress.com/2014/11/10/2014-45-perl%25e2%2580%25af6-gets-a-release-year/  which is a 404 ?

[19:23] <nwc10> itz: something has got double URL encoded

[19:25] *** ugator joined
[19:29] <nwc10> something seeming to be U+202F

[19:40] <ugexe> the perl6-most-wanted module list seems outdated. if i were to go through it and remove items how should I treat WIP? For example: under algorithms Levenshtein is marked as WIP although it is complete, but other items like Config::INI i dont really know enough to determine completeness. 

[19:40] <masak> m: say chr(0x202F)

[19:40] <camelia> rakudo-moar cb1b1c: OUTPUT« ␤»

[19:41] <masak> ugexe: (a) even a partial update is better than no update at all. (b) feel free to ask here for specific statuses -- maybe someone knows.

[19:41] <masak> also, ++ugexe

[19:42] <vendethiel> masak, any reason you switched to prefix increment these days?

[19:43] <PerlJam> vendethiel: prefix:<++> is appropriate for work that will be done in the future IMHO 

[19:43] <PerlJam> :)

[19:43] <masak> what PerlJam++ said.

[19:43] <vendethiel> That's... an interesting view

[19:43] <PerlJam> It's just a normal pun

[19:44] <masak> as far as I know, that's a "standard" that evolved here on #perl6.

[19:44] <masak> but my view is limited.

[19:44] <vendethiel> Interestingly, I don't think I've seen it before

[19:48] <FROGGS> hmmm, I've seen that before somewhere:

[19:48] <FROGGS> ===SORRY!=== Error while compiling lib/Cache/Memcached.pm

[19:48] <FROGGS> Unsupported use of /i; in Perl 6 please use :i

[19:48] <FROGGS> at lib/Cache/Memcached.pm:479

[19:48] <FROGGS> ------>         $ip ~~ s:g [ \[ | \] ] = '' i⏏f $ip.defined;

[19:48] <FROGGS> m: my $foo = ""; $foo ~~ s:g [ \[ | \] ] = '' if $foo.defined

[19:48] <camelia> rakudo-moar cb1b1c: OUTPUT«===SORRY!=== Error while compiling /tmp/3RGHPjSBid␤Unsupported use of /i; in Perl 6 please use :i␤at /tmp/3RGHPjSBid:1␤------> foo = ""; $foo ~~ s:g [ \[ | \] ] = '' i⏏f $foo.defined␤»

[19:49] <FROGGS> std: my $foo = ""; $foo ~~ s:g [ \[ | \] ] = '' if $foo.defined

[19:49] *** camelia left
[19:49] <FROGGS> hmpf

[19:50] *** camelia joined
[19:51] *** rindolf left
[19:51] <camelia> std : OUTPUT«Can't chdir to '/home/camelia/std/snap': No such file or directory at lib/EvalbotExecuter.pm line 166.␤    EvalbotExecuter::_auto_execute(HASH(0x1c009c8), "my \$foo = \"\"; \$foo ~~ s:g [ \\[ | \\] ] = '' if \$foo.defined", GLOB(0x7e30ae0), "/tmp/H1ieJ8I0fq", "std") call…»

[19:51] *** ChanServ sets mode: +v camelia

[19:53] <PerlJam> FROGGS: maybe change old_rx_mods to look for a word boundary after the character class since it's comparing against single characters anyway.

[19:54] <PerlJam> (Is it a bug that we don't look for repeated modifiers?)

[19:54] *** thou joined
[19:55] <masak> FROGGS: ooh -- can I rakubmit that one?

[19:55] <FROGGS> masak: surely :o)

[19:55] * masak does

[19:55] <FROGGS> ++masak :P

[19:58] <masak> https://rt.perl.org/Ticket/Display.html?id=123168

[19:59] <FROGGS> masak++

[19:59] <masak> :)

[20:00] <FROGGS> hopefully I can close it in a bit

[20:00] <TimToady> maybe check for <?terminator> there

[20:01] <FROGGS> -        <.old_rx_mods>?

[20:01] <FROGGS> +        [ <?{ $<sibble><infixish> }> || <.old_rx_mods>? ]

[20:01] <TimToady> or rather, <!terminator>

[20:01] <TimToady> m: s/foo/bar/ if 42;

[20:01] <camelia> rakudo-moar cb1b1c: ( no output )

[20:01] <TimToady> m: s/foo/bar/if 42;

[20:01] <camelia> rakudo-moar cb1b1c: OUTPUT«===SORRY!=== Error while compiling /tmp/kOi4w6idgX␤Unsupported use of /i; in Perl 6 please use :i␤at /tmp/kOi4w6idgX:1␤------> s/foo/bar/i⏏f 42;␤»

[20:02] *** anaeem1_ left
[20:02] <FROGGS> I hope we don't want to make that one work :o)

[20:02] <TimToady> I guess the space is not eaten in that case

[20:02] <j4janicej> hot damn i'm tired

[20:03] *** anaeem1_ joined
[20:03] <FROGGS> j4janicej: you're not at work hopefully?

[20:03] <PerlJam> also, should we even check for old regex mods on the assignment form of s/// ?  It's unlikely that a P5 person would make that mistake in that context IMHO

[20:03] <j4janicej> FROGGS: egh, no

[20:03] <TimToady> well, hopefully nobody wants to use postfix:<i> on s/// :

[20:03] <FROGGS> j4janicej: well then, off to bed :P

[20:03] <TimToady> :)

[20:04] <j4janicej> TimToady: yo

[20:05] *** grondilu joined
[20:08] <dalek> rakudo/nom: cd6da9a | (Tobias Leich)++ | src/Perl6/Grammar.nqp:

[20:08] <dalek> rakudo/nom: fix parsing of s{}="" plus statement mod if

[20:08] <dalek> rakudo/nom: 

[20:08] <dalek> rakudo/nom: We should not check for old regex modifiers (/i) when we have the assignment form of a substitution.

[20:08] <dalek> rakudo/nom: Fixes RT #123168.

[20:08] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cd6da9a7f8

[20:08] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=123168

[20:08] <masak> FROGGS++

[20:08] <dalek> Perlito: 24a46f3 | (Flavio S. Glock)++ | misc/typeglob/dumper.pl:

[20:08] <dalek> Perlito: misc - dumper script tweak

[20:08] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/24a46f39b5

[20:14] <dalek> roast: f5e132d | (Tobias Leich)++ | S05-substitution/subst.t:

[20:14] <dalek> roast: RT #123168, test parsing of s{}="" if ....

[20:14] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=123168

[20:14] <dalek> roast: review: https://github.com/perl6/roast/commit/f5e132dce7

[20:15] *** zakharyas left
[20:17] *** virtualsue joined
[20:19] *** darutoko left
[20:21] <tony-o> FROGGS: are you doing libxml?

[20:21] *** exixt is now known as exixt_

[20:21] <FROGGS> tony-o: yes

[20:21] *** pecastro joined
[20:25] <timotimo> updated the weekly post a bit: added the link to moritz' article on server donations, changed the permalink (naughty me!) and something else i forgot about

[20:30] <FROGGS> [Tux]: done: https://github.com/FROGGS/p6-Slang-Tuxic

[20:31] <FROGGS> [Tux]: though you will see that you have to add many (otherwise not needed) parenthesis to let it DWYM

[20:32] <FROGGS> [Tux]: like this is wrong: is (42.fmt: '-%d-'), '-42-', 'foo.bar: baz';

[20:32] <FROGGS> [Tux]: so I have to do this, which is ugly: is( (42.fmt: '-%d-'), '-42-', 'foo.bar: baz');

[20:33] <masak> feels just like Perl 5.

[20:33] <FROGGS> yeah :S

[20:33] <colomon> why does that need the extra parens?

[20:34] <FROGGS> colomon: because that slangs allows whitespace after identifiers

[20:34] *** zakharyas joined
[20:34] <FROGGS> (in sub and method calls)

[20:34] <masak> it works for method calls too now?

[20:34] <FROGGS> yes

[20:34] <masak> FROGGS++!

[20:35] <colomon> oh!  the first way is equivalent to is(42.fmt: '-%d-') … other stuff ?

[20:35] <dalek> specs: 36aa886 | usev6++ | S32-setting-library/Exception.pod:

[20:35] <dalek> specs: [S32::Exception] Add X::Regex::SolitaryQuantifier

[20:35] <dalek> specs: review: https://github.com/perl6/specs/commit/36aa886fdb

[20:35] <FROGGS> I just had to copy&pase token methodop, add a \s* before <args>, and remove the :dba (because only nqp can handle it)

[20:35] <FROGGS> colomon: aye

[20:35] <colomon> FROGGS: gotcha

[20:42] *** kurahaupo joined
[20:44] *** telex left
[20:44] <FROGGS> m: say "abcd" ~~ m/[abc]**{5}/

[20:44] <camelia> rakudo-moar cb1b1c: OUTPUT«False␤»

[20:44] <FROGGS> m: say "abcabcabcabcabcd" ~~ m/[abc]**{5}/

[20:44] <camelia> rakudo-moar cb1b1c: OUTPUT«｢abcabcabcabcabc｣␤␤»

[20:44] <FROGGS> m: say "abcabcabcabcabcabcd" ~~ m/[abc]**{5}/

[20:44] <camelia> rakudo-moar cb1b1c: OUTPUT«｢abcabcabcabcabc｣␤␤»

[20:46] <nine> tony-o: I'd say it's done quite well in C#

[20:46] *** telex joined
[20:48] <tony-o> nine: that syntax looks pretty doable in p6 already, is it DB agnostic?  i'm not familiar with linq and haven't written anything in c# for 4 years

[20:48] <masak> LINQ is db-agnostic, yes.

[20:48] <vendethiel> you mean LINQ-to-sql is?

[20:49] <masak> yes, I guess so.

[20:49] <dalek> doc: 05e18c9 | usev6++ | / (2 files):

[20:49] <dalek> doc: Add exception X::Syntax::Regex::SolitaryQuantifier

[20:49] <dalek> doc: review: https://github.com/perl6/doc/commit/05e18c9064

[20:50] <tony-o> nine: have you used ABAP's version of that? (is that considered LINQ?)

[20:51] *** zakharyas left
[20:55] <moritz> I have a problem with htmlify.p6 in doc/perl6

[20:55] <moritz> it dies with "dot command failed! (did you install Graphviz?)"

[20:55] <moritz> it runs the command dot -Tsvg -ohtml/images/type-graph-Mu.svg /tmp/p6-doc-graphviz-2801

[20:56] <moritz> when I run that command myself, it works fine, with exit status zero

[20:56] <moritz> any idea why it might fail?

[20:56] <nine> tony-o: no, never seen any ABAP

[20:57] <FROGGS> moritz: dot is not in PATH when invoked the failing way?

[20:57] <moritz> https://github.com/perl6/doc/blob/master/lib/Perl6/TypeGraph/Viz.pm#L96 that's the line that fails

[20:57] *** rurban joined
[20:58] <masak> 'night, #perl6

[20:58] <FROGGS> gnight masak 

[20:58] <moritz> FROGGS: it should, since it's in PATH when I invoke it form the same shell

[20:58] <FROGGS> hmmm

[21:01] <FROGGS> moritz: does it load the precompiled version of Perl6/TypeGraph/Viz.pm?

[21:01] <moritz> FROGGS: there is no precompiled version, afaict

[21:01] <FROGGS> okay

[21:02] * moritz does the next obvious step and say()s the return value of run()

[21:02] *** cognominal joined
[21:02] <FROGGS> maybe add this before the call to run: run "which", "dot" or die "huh"

[21:02] <FROGGS> ;

[21:03] <moritz> Proc::Status.new(exit => -1, pid => Any, signal => 244)

[21:04] *** Mso150 left
[21:04] *** espadrine_ joined
[21:05] <FROGGS> maybe run it under shell() to get an error message printed

[21:05] <FROGGS> jdv79: you are still there?

[21:06] *** Mso150 joined
[21:10] *** ghostlines joined
[21:13] <moritz> FROGGS: shell 'which dot' says  /usr/bin/dot

[21:13] <moritz> FROGGS: but run 'which', 'dot' says ./usr/bin/dot

[21:14] <FROGGS> moritz: it does not do that on my box

[21:14] <FROGGS> perl6-m -e 'run "which", "dot"'

[21:14] <FROGGS> /usr/bin/dot

[21:15] <moritz> FROGGS: oh wait, maybe the dot comes from the progress report somewhere else

[21:21] *** kaare_ left
[21:27] *** raiph left
[21:28] <FROGGS> the bug that pops up in Rakudo_cont_is_rw_scalar is nasty

[21:30] <itz> nwc10: thanks .. I blame Daveorg's perlanet software :) I'll look into a p6weekly workaround

[21:31] <jdv79> FROGGS: what?

[21:31] <FROGGS> jdv79: you wanted to talk about slangs

[21:32] <timotimo> itz: i changed the permalink, the rss feed should have the new (and working) url

[21:32] <jdv79> i was looking for info on them, yes.

[21:32] <jdv79> as someone that has a very basic knowledge of perl 6 and related i found the Tuxic code intriguing.

[21:33] <itz> timotimo: ah yes thanks

[21:33] <jdv79> maybe a line by line explanation of how that file works in the context of someone that knows very little perl 6 would help more than just me...

[21:34] <FROGGS> k

[21:34] <cognominal> I don't understand the point of atkeyish in Tuxic?  Why atkeyish($/, 'identifier') instead of $/<identifier> ?

[21:35] <jdv79> see:)

[21:35] <FROGGS> cognominal: because $/ is an NQPMath

[21:35] <FROGGS> since Perl6::Grammar is written in nqp

[21:36] <FROGGS> jdv79: first you must know that grammars in perl6 (or nqp) are class like... they have methods (tokens, rules, and normal methods) and all other stuff

[21:36] <cognominal> Ok. FROGGS++

[21:36] <FROGGS> they can inherit from another grammar, and can also do roles

[21:37] <FROGGS> and like how we can mix in a role into an object of a certain class, we can do that with our grammar

[21:37] <FROGGS> so, the entire logic of Slang::Tuxic is in an EXPORT sub

[21:37] <cognominal> I can't wait the day when Perl 6 will be written in Perl 6 instead of nqp

[21:38] <jdv79> i thought the point of nqp was that it was intentionally not full Perl 6

[21:38] <FROGGS> and that is because when you use a module (like Slang::Tuxic), the Perl6 grammar will parse your use statement, and call the EXPORT sub from inside the Perl6 grammar

[21:39] <FROGGS> to retrieve the symbols that it would make available to your program

[21:39] <FROGGS> jdv79: that's correct

[21:39] <FROGGS> nqp is our toolchain to build the guts of compilers like rakudo

[21:40] <cognominal> jv79, yes, it is necessary to boot full Perl 6 but it causse all sort of problems at the frontier, like the necessity of atkeyish in Tuxic

[21:40] *** ghostlines left
[21:40] <FROGGS> back to my explanation... when the Perl6::Grammar calls the EXPORT sub, all its innards (like dynamic variables) are available inside the EXPORT sub

[21:40] <FROGGS> that might be by accident, but, who cares :O

[21:41] <FROGGS> err, :P

[21:41] <dalek> doc: ee0ea36 | moritz++ | lib/Type/Date.pod:

[21:41] <dalek> doc: fix truncated-to signature

[21:41] <dalek> doc: review: https://github.com/perl6/doc/commit/ee0ea36c41

[21:41] <jdv79> FROGGS: where is EXPORT doc'ed?  i did some grepping and didn't see it.

[21:42] <FROGGS> good question

[21:42] <cognominal> jdv79, in S11 and S12

[21:43] <timotimo> FROGGS: what parts are missing until we can have multiple versions of the same module loaded properly?

[21:43] <jdv79> ah

[21:43] <jdv79> thanks

[21:44] <FROGGS> timotimo: this is already possible, you just need to put a CompUnitRepo::Local::Installation into your %*CUSTOM_LIB<site>

[21:45] *** kshannon left
[21:45] <FROGGS> jdv79: so, we can access the current grammar in our EXPORT sub, can mix into it (to replace/add methods), and that grammar will stay active after our EXPORT finishes

[21:45] <FROGGS> that's it

[21:45] *** bjz left
[21:45] *** thou left
[21:46] *** bjz joined
[21:47] *** kshannon joined
[21:47] <TuxCM> FROGGS, mail sent. (and beauty is in the eye of the beholder)

[21:47] <jdv79> thanks.  and what parts of slangs are you thinking about changing?

[21:47] <FROGGS> TuxCM: *g*, true, very true :o)

[21:47] * TuxCM thinks «function( arg, arg );» is extremely ugly

[21:47] *** cibs left
[21:47] *** cibs joined
[21:48] <FROGGS> jdv79: ohh, no idea... I'll continue with v5, but I have no ideas what else could be interesting

[21:48] *** Mso150 left
[21:48] *** Mso150 joined
[21:50] <jdv79> I was wondering what you meant by "I try to make it user friendly these days, but it is not yet the case"

[21:50] <timotimo> FROGGS: could you please write a short example of having two versions of a module in use in the same process?

[21:50] <tony-o> FROGGS: are you saying it's possible to load the perl6 grammar or am i lazy reading?

[21:51] <timotimo> "you just have to" is not close enough to a working example for me :P

[21:51] <FROGGS> jdv79: v5 is a totally different approach btw, it does not mix into the current language (Perl 6), but replaces it entirely for a given scope

[21:51] <FROGGS> tony-o: only in an EXPORT sub, but yes

[21:52] <FROGGS> jdv79: I want to provide a helper module (called Slangy) that let you write slangs more easily, without knowing any nqp

[21:52] <FROGGS> timotimo: gimme a sec or two

[21:52] <timotimo> cool, thanks :)

[21:52] *** anaeem1_ left
[21:52] <tony-o> FROGGS: how would i call that up to parse a file?

[21:52] <cognominal> FROGGS, what is the purpose of the keyword slang if neither Tuxic nor V5 use it?

[21:53] <tony-o> i know you're inundated with other questions but i don't have time for  perl6::tidy because of that piece of the job :-)

[21:53] <FROGGS> cognominal: the purpose will be to add sugar, helper methods and sane defaults

[21:53] <FROGGS> cognominal: but it is not there yet

[21:54] <cognominal> ok, FROGGS++

[21:54] <TuxCM> ===SORRY!=== Error while compiling test-t.pl

[21:54] <TuxCM> Unsupported use of -> as postfix; in Perl 6 please use either . to call a method, or whitespace to delimit a pointy block

[21:54] <TuxCM> at test-t.pl:103

[21:54] <TuxCM> ------>         for (@ch.kv ->⏏ $i, Str $chunk) {

[21:54] <TuxCM>     expecting any of:

[21:54] <FROGGS> tony-o: you should be able to call .parse on it

[21:54] <TuxCM>         postfix

[21:55] <TuxCM>         dotty method or postfix

[21:55] <tony-o> FROGGS: how do i actually load the grammar?

[21:55] <FROGGS> tony-o: it already is in %*LANG<MAIN> in your EXPORT sub

[21:56] <FROGGS> TuxCM: we can try to turn it around and not allow whitespace after a sub or method name, but to allow whitespace before an arglist...

[21:56] <FROGGS> TuxCM: but I'm not sure this will out

[21:57] * TuxCM => $HOME

[21:57] <TuxCM> HAVE FUN!

[21:57] <FROGGS> TuxCM: looks like I need more tests... will add that one

[22:00] <FROGGS> TuxCM: please pull

[22:02] <tony-o> FROGGS: i get an error if i try to use %*LANG<MAIN> in an exported sub ..

[22:02] <FROGGS> tony-o: not an exported sub, an EXPORT sub

[22:02] <tony-o> oh!

[22:02] <FROGGS> like this: https://github.com/FROGGS/p6-Slang-Tuxic/blob/master/lib/Slang/Tuxic.pm#L1

[22:06] *** Timbus left
[22:07] *** Timbus joined
[22:09] *** virtualsue left
[22:15] <dalek> Heuristic branch merge: pushed 47 commits to panda/eleven by FROGGS

[22:21] * lizmat is back on Earth

[22:23] <dalek> rakudo/nom: 10543b3 | (Tobias Leich)++ | src/core/CompUnitRepo/Local/Installation.pm:

[22:23] <dalek> rakudo/nom: make filemtime more friendly for to-json

[22:23] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/10543b3998

[22:25] *** Mso150 left
[22:36] <lizmat> I just had the oddest error when running a spectest (which it completely aborted:

[22:36] <lizmat> ===(   27697;177  13/60  0/?  0/?  0/?  0/?  0/?   1/35  0/? )==========Can't use an undefined value as an ARRAY reference at /usr/local/lib/perl5/5.20.0/TAP/Parser/Multiplexer.pm line 138.

[22:36] <lizmat> make: *** [m-spectest] Error 9

[22:37] <lizmat> anybody seen anything like that before? leont?

[22:37] <FROGGS> I've not seen that yet

[22:37] *** thou joined
[22:41] *** thou left
[22:44] <lizmat> I never seen it before either

[22:44] <lizmat> *'ve

[22:45] *** spider-mario left
[22:53] <tadzik> computer, messages

[22:53] <yoleaux> 7 Nov 2014 18:04Z <azawawi> tadzik: it would be nice to have bin/script => bin/script.bat in win32 environment. This is one of the things that prevents the inclusion of farabi6 in Task::Star

[22:53] <tadzik> hmm

[22:58] *** bjz left
[23:01] *** leont joined
[23:05] <japhb> .oO( "OK, IRC ..." )

[23:17] <timotimo> hm. a github issue doesn't get reopened when i add a comment to it

[23:18] *** Guest67324 left
[23:19] <vendethiel> no, you have to reopen it manually

[23:19] *** denis_boyun_ left
[23:20] *** bowtie joined
[23:20] *** bowtie is now known as Guest95034

[23:22] *** ugator left
[23:24] <timotimo> there was no button

[23:24] <FROGGS> O.o

[23:24] <timotimo> seems like only the project owners & contributors are allowed

[23:32] *** thou joined
[23:34] *** treehug88 left
[23:34] *** rurban left
[23:35] *** kurahaupo left
[23:44] *** gfldex left
[23:49] *** leont left
[23:50] <FROGGS> timotimo: the CompUnitRepo::Local::Installation seems to have bitrotted, I hope to get it into a good shape until tomorrow evening

[23:55] <japhb> .oO( But then after that, I'm going to let it fall apart again. )

[23:58] <FROGGS> ohh, it seems to do...

[23:58] <timotimo> that's good. thank you!

