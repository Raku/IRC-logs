[00:00] *** xenoterracide left
[00:00] *** xenoterracide_ joined
[00:03] <[Coke]> masak: is there a way to use macros to conditionally add an attribute to a class?

[00:04] <timotimo> I would use the MOP for that, honestly :(

[00:04] <masak> same.

[00:04] *** MikeFair_ left
[00:04] <masak> [Coke]: it would be easier to discuss around a piece of code, I think.

[00:04] <[Coke]> then I'll just reply to the list and you can take it from there. :)

[00:05] <[Coke]> (someone on p6-u went private on a thread, I just noticed)

[00:05] <timotimo> happens to the best of us :)

[00:05] *** xenoterracide_ left
[00:11] <jnthn> 'night, folks

[00:11] <diakopter> 'nite J

[00:11] <timotimo> good night, jnthn!

[00:12] <[Coke]> ~~

[00:12] <jnthn> Will be mostly offline for weekend; back home and with Perl 6 tuits on Monday :)

[00:12] <jnthn> o/

[00:12] <[Coke]> jnthn++

[00:19] *** thou left
[00:20] <japhb_> [Coke]: What's the r-m % currently?

[00:21] <raydiak> and does it crunch numbers faster than JVM? :)

[00:22] <japhb_> raydiak, For native types in heavy loops, I'd be surprised if it did -- the JVM jit is really good at that.

[00:22] <raydiak> I won't hold my breath, then...but not using native types

[00:23] <japhb_> And Moar doesn't have a jit yet.  It needs to be working fully correctly before we start turning broken code into ASM ops.  ;-)

[00:23] <japhb_> OK, then my #1 optimization tip will probably be: "native types in arrays, not HLL types in hashes"

[00:24] <timotimo> i was thinking maybe we could get a specialized low-level hash for strings going?

[00:24] <timotimo> as in string keys to string values

[00:24] <raydiak> when I tried to use native types a couple months ago, I ran into NYI roadblocks

[00:25] <japhb_> timotimo: What's the use case for specializing just that particular mapping?

[00:25] <timotimo> our native type arrays are, i believe, not thoroughly awesome yet

[00:25] <timotimo> japhb_: not that sure

[00:25] <timotimo> we may have some of those internally

[00:25] <timotimo> perhaps it makes more sense to specialize just string keys

[00:25] <timotimo> and make trie-like structures or red-black-trees with those

[00:26] <japhb_> BTW, did all the known bugs of Rakudo pre-allocating very large arrays get fixed?

[00:27] <timotimo> i don't think i know about those?

[00:27] <raydiak> r: my int $a = 1; my int $b = 2; say ($a+$b).perl;

[00:27] <camelia> rakudo-parrot e32249, rakudo-jvm e32249: OUTPUT«3␤»

[00:27] <timotimo> there was a fix to the for iterator to not create huge arrays all the time

[00:27] <japhb_> The 100_000 length array one was the first example I remember.

[00:28] <japhb_> But then there was discussion of reducing the default size of hashes to 4 (or 8?) entries too, and some other such that I forget the details of.

[00:30] <japhb_> There's something for your GC torture, nwc10: Check how many words (or even bytes) in fromspace are 0.  That would give us a rough idea of how much we're overallocating for our actual usage.

[00:30] <japhb_> That plus a histogram of allocation request sizes would go a long way.

[00:31] <japhb_> Hmmm, IIRC MoarVM's GC is type-exact -- so we can actually have a histogram of allocated structures as well.

[00:34] <[Coke]> still waiting for today's jvm run to finish, japhb_ 

[00:35] <[Coke]> JVM is at S32-str/ords.t

[00:35] <japhb_> [Coke], Ah OK, gotcha.  Thought my question just got lost in the chaos.  :-)

[00:40] <timotimo> hm. actually, we could build a python plugin to gdb to create the histogram

[00:41] *** benabik left
[00:47] *** laidback_01 joined
[00:52] *** PacoAir left
[00:55] *** arcterus joined
[01:05] <timotimo> hm. actually ...

[01:05] *** spider-mario left
[01:05] <timotimo> rakudo.moarvm may take much longer for stage mast than rakudo.parrot does for stage post/pir, but after that follows a compilation process to .pbc that takes quite a while, too

[01:05] <timotimo> so it may not even be terribly surprising that moar takes so long for that part

[01:11] *** beastd left
[01:11] <timotimo> hm

[01:12] <timotimo> what is the meaning of ; inside call parens?

[01:12] <timotimo> r: sub da(*@a, *%b) { say @a; say %b }; da(1, 2, 3; 4, 5, 6); da(:foo(1), :bar(2); :a<b>, :c<d>);

[01:12] <camelia> rakudo-parrot e32249, rakudo-jvm e32249: OUTPUT«1 2 3 4 5 6␤().hash␤␤().hash␤»

[01:12] <timotimo> r: sub da(*@a, *%b) { say @a; say %b }; da(1, 2, 3; 4, 5, 6); da(:foo(1), :bar(2), :a<b>, :c<d>);

[01:12] <camelia> rakudo-parrot e32249: OUTPUT«1 2 3 4 5 6␤().hash␤␤("foo" => 1, "bar" => 2, "a" => "b", "c" => "d").hash␤»

[01:12] <camelia> ..rakudo-jvm e32249: OUTPUT«1 2 3 4 5 6␤().hash␤␤("c" => "d", "a" => "b", "foo" => 1, "bar" => 2).hash␤»

[01:12] <timotimo> huh!

[01:13] <timotimo> is that a bug? that it doesn't pass any nameds in the second run if there's a ; in there?

[01:15] *** thundergnat joined
[01:16] *** laidback_01 left
[01:17] <thundergnat> r: my @n = <John Doe Dick Harry Harry Doe Doe Harry Doe John>; say @n.Bag.invert.sort.reverse».value;

[01:17] <preflex>  thundergnat: you have 1 new message. '/msg preflex messages' to read it.

[01:17] <camelia> rakudo-parrot e32249, rakudo-jvm e32249: OUTPUT«Doe Harry John Dick␤»

[01:18] <thundergnat> ^^ xfix (or GlitchMr )

[01:20] <timotimo> oh, that's cool! :)

[01:20] <timotimo> thundergnat++

[01:24] <japhb> raydiak: There's a syntax error in lib/Pray/Geometry/Object.pm6 on line 197 in the version you pushed: 'is copy' shouldn't be used for a call (as opposed to declaration).  I'm assuming you have that fixed locally and forgot to push it?  :-)

[01:26] <timotimo> i'm beginning to think that a whitelisting compiler that makes sure that no harmful code is executed would be a good thing to have included in rakudo itself

[01:26] <timotimo> to allow things like safely checking the syntax of code, for example

[01:29] *** Mouq left
[01:35] <dalek> perl6-roast-data: 74f6ae9 | coke++ | / (5 files):

[01:35] <dalek> perl6-roast-data: today (automated commit)

[01:35] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/74f6ae91b4

[01:35] <[Coke]> +rakudo.moar,2014-01-04,73.33%,14e7659,20866,7437,392,966,29162,28494,

[01:36] <timotimo> \o/

[01:36] <[Coke]> (I didn't bother re-running it. we're already a few more past that for tomorrow's run)

[01:36] <colomon> moar's up to 73% already?!?!!!

[01:38] <[Coke]> colomon: niecza's at 75.00 . :(

[01:38] <timotimo> :\

[01:40] * grondilu is impressed by the 73% :)

[01:40] * colomon also

[01:43] *** espadrine left
[01:44] *** espadrine joined
[01:54] *** Mouq joined
[02:05] <timotimo> timo@kischde ~/build/rakudo (git)-[nom] % ./perl6-p -e 'sub output_args(*%a) { say %a }; output_args(:foo(1):bar(2):baz<abc>,:a(1):b(2):c(3))' 

[02:05] <timotimo> ("foo" => 1, "a" => 1, "baz" => "abc", "b" => 2, "c" => 3).hash

[02:05] <timotimo> r: sub output_args(*%a) { say %a }; output_args(:foo(1):bar(2):baz<abc>,:a(1):b(2):c(3))

[02:05] <camelia> rakudo-parrot e32249: OUTPUT«("foo" => 1, "a" => 1).hash␤»

[02:05] <camelia> ..rakudo-jvm e32249: OUTPUT«("a" => 1, "foo" => 1).hash␤»

[02:14] *** mtk left
[02:14] *** mtk0 left
[02:16] <raydiak> japhb: I've no idea where that came from, but thank you! fix pushed

[02:17] <raydiak> oh, now I see: that's apparenty something I *never* tested, as indicated by the comment above that method :P

[02:18] *** mtk joined
[02:21] *** mtk left
[02:22] *** abnorman left
[02:22] *** mtk joined
[02:25] *** espadrine left
[02:34] *** colomon left
[02:38] *** benabik joined
[02:41] *** abnorman joined
[02:44] *** grondilu_ joined
[02:47] *** grondilu left
[02:50] *** thundergnat left
[02:54] *** grondilu_ left
[03:01] *** ssutch left
[03:03] *** Quom joined
[03:03] <BenGoldberg> r: say "Happy "~'ߞ'.ord

[03:03] <camelia> rakudo-parrot e32249, rakudo-jvm e32249: OUTPUT«Happy 2014␤»

[03:04] *** abnorman left
[03:07] <Quom> So, I've never been able to compile Rakudo on MoarVM. I get the error: Undefined symbols for architecture x86_64:␤  "_MVM_6model_add_container_config", referenced from:␤      _Rakudo_containers_setup in container.o…

[03:08] <Quom> on Mac OS X 10.9.1, nqp passes all spectests

[03:08] <Quom> *nqp-m

[03:10] <BenGoldberg> I think I might have missed part of the discussion... are you cross-compiling Rakudo, with MoarVM as the target, or (if you've already cross-compiled) trying to bootstrap using the Rakudo that you've already built on M?

[03:10] <Quom> ....

[03:10] *** ssutch joined
[03:11] <BenGoldberg> Or am I just confused?

[03:11] <Quom> I don't know.

[03:11] <[Coke]> BenGoldberg: rakudo-moar is working for most people. no cross compiling.

[03:11] <BenGoldberg> Oh, ok :)

[03:12] * BenGoldberg was confused ;)

[03:13] <Quom> I got the error using my usual seperate directories `make install`ing everything to /usr/local, and eventually tried making a new rakudo directory in a different location and simply `--gen-moar`ing

[03:13] <Quom> s:3st/e/a/

[03:14] <[Coke]> Quom: are you using hte moar-support branch?

[03:14] <Quom> yes

[03:14] <[Coke]> (of rakudo)

[03:14] <Quom> yup

[03:15] <[Coke]> with --gen-nqp=master and --gen-moar=master --backends=moar ?

[03:15] <Quom> I can try that

[03:16] <[Coke]> otherwise you might be settling for an older version of nqp/master - we're not quite there with making sure we have the right deps.

[03:16] <Quom> I simply used `perl Configure.pl --backends=moar --gen-moar` the last time I tried

[03:16] <[Coke]> er, of nqp/moar

[03:17] <Quom> okay, but it wasn't working using sister directories for each of the projects that were all updated to lastest commit whenever I would try

[03:18] <[Coke]> ah.

[03:18] <[Coke]> then probably a real bug.

[03:18] *** newbie_Perl6 joined
[03:19] <Quom> Hm. I'll file an issue if this isn't something that's been come across before

[03:20] *** Mouq left
[03:20] *** Quom is now known as Mouq

[03:22] <Mouq> do I...

[03:22] <Mouq> is this a MoarVM bug?

[03:26] *** berekuk joined
[03:28] <newbie_Perl6> NOW in Perl 6, <alpha> is <[a..z A..Z _]>, [S05]line2025, If I dislike it ( I want <alpha> is just <[a..z A..Z]>), what can I do?

[03:29] <Mouq> just use <[a..zA..Z]>?

[03:29] <Mouq> or define a token alpha { <[a..zA..Z]>+ }

[03:30] <lue> r: say "_" ~~ /<alpha>/; say "_" ~~ /<alpha-[_]>/

[03:30] <camelia> rakudo-jvm e32249: OUTPUT«===SORRY!=== Error while compiling /tmp/FVaH62fuNq␤Unable to parse expression in metachar:sym<assert>; couldn't find final '>' ␤at /tmp/FVaH62fuNq:1␤------> say "_" ~~ /<alpha>/; say "_" ~~ /<alpha⏏-[_]>/␤    e…»

[03:30] <camelia> ..rakudo-parrot e32249: OUTPUT«===SORRY!=== Error while compiling /tmp/VwpdjUiXIs␤Unable to parse expression in metachar:sym<assert>; couldn't find final '>' ␤at /tmp/VwpdjUiXIs:1␤------> say "_" ~~ /<alpha>/; say "_" ~~ /<alpha⏏-[_]>/␤  …»

[03:30] <Mouq> newbie_Perl6: what are you using <alpha> for?

[03:30] <Mouq> r: say "_" ~~ /<alpha>/; say "_" ~~ /<+alpha-[_]>/

[03:30] <camelia> rakudo-parrot e32249, rakudo-jvm e32249: OUTPUT«｢_｣␤ alpha => ｢_｣␤␤Nil␤»

[03:31] <Mouq> \o/

[03:34] <Mouq> I really don't know where to make this issue. I think I'll just wait until someone who can shed some light on it comes on.

[03:34] <newbie_Perl6> Please look at [S05]line2139,line2384, and many others

[03:36] <newbie_Perl6> I think there are sometime, in Perl 6, <alpha> is just <[a..z A..Z]>

[03:37] <Mouq> S05:2139 #I'm lazy

[03:37] <synopsebot> Link: http://perlcabal.org/syn/S05.html#line_2139

[03:38] <Mouq> newbie_Perl6: I see what you mean, the spec isn't self consistent. it seems to be saying that it is <[a..zA..Z]>

[03:38] <newbie_Perl6> yes

[03:38] <lue> newbie_Perl6: <alpha> is supposed to include _ . Code examples trying [<alpha>|\_] are being redundant :)

[03:38] <Mouq> I misunderstood what you meant, I think

[03:39] <lue> oh wait, not \_, just _

[03:40] <Mouq> lue: yeah, because _ matches <alpha> :D

[03:40] *** jnap left
[03:40] * Mouq &

[03:41] <newbie_Perl6> <lue>, i know that

[03:44] <newbie_Perl6> traditionally, [[:alpha:]] is [a-zA-Z]

[03:45] <newbie_Perl6> My english is bad, I can't express myself, sorry.

[03:49] <newbie_Perl6> thank you, Mouq and lue!

[03:49] <lue> you're welcome :)

[03:53] *** newbie_Perl6 left
[03:54] <dalek> specs: ec84459 | lue++ | S05-regex.pod:

[03:54] <dalek> specs: [S05] Fix redundant [<alpha>|_] examples.

[03:54] <dalek> specs: 

[03:54] <dalek> specs: In addition to being redundant, they carry the unfortunate implication

[03:54] <dalek> specs: that <alpha> does not match underscore, which it in fact does. The

[03:54] <dalek> specs: underscore has been replaced with \- (match a hyphen) in these

[03:54] <dalek> specs: situations. newbie_Perl6++ for noticing.

[03:54] <dalek> specs: review: https://github.com/perl6/specs/commit/ec844594bf

[03:56] *** atroxaper joined
[04:00] *** brother left
[04:00] *** smash left
[04:00] *** integral joined
[04:00] *** integral left
[04:00] *** integral joined
[04:00] *** smash joined
[04:00] *** brother joined
[04:03] *** berekuk left
[04:03] <Mouq> r: say moose* ~~ 'mooseee' #I think I may have broken this during sigspace stuff

[04:03] <camelia> rakudo-parrot e32249: OUTPUT«===SORRY!=== Error while compiling /tmp/lkVLi1rUny␤Undeclared routine:␤    moose used at line 1. Did you mean '&close'?␤␤»

[04:03] <camelia> ..rakudo-jvm e32249: OUTPUT«===SORRY!=== Error while compiling /tmp/pAfOoNeNTr␤Undeclared routine:␤    moose used at line 1. Did you mean '&close'?␤␤»

[04:03] <Mouq> oops

[04:04] <Mouq> r: say 'mooseee' ~~ /moose*/

[04:04] <camelia> rakudo-parrot e32249, rakudo-jvm e32249: OUTPUT«｢mooseee｣␤␤»

[04:04] <Mouq> oh! nope! *whew*

[04:07] *** smash left
[04:07] *** integral left
[04:08] *** smash joined
[04:08] *** integral joined
[04:11] *** jnap joined
[04:11] *** rurban1 joined
[04:16] *** jnap left
[04:30] *** newbie_Perl6 joined
[04:39] *** preflex left
[04:41] *** preflex joined
[04:41] *** ChanServ sets mode: +v preflex

[04:50] *** dmol joined
[04:52] *** newbie_Perl6 left
[04:55] *** newbie_Perl6 joined
[04:57] *** newbie_Perl6 left
[05:11] *** jnap joined
[05:16] *** jnap left
[05:17] *** Entonian joined
[05:18] *** dmol left
[05:19] *** Entonian left
[05:24] *** newbie_Perl6 joined
[05:30] <dalek> specs: c358c19 | lue++ | S05-regex.pod:

[05:30] <dalek> specs: [S05] Remove redundant word

[05:30] <dalek> specs: review: https://github.com/perl6/specs/commit/c358c192b6

[05:32] *** newbie_Perl6 left
[05:33] *** rurban1 left
[05:33] *** atroxaper left
[05:40] *** Mouq left
[05:44] *** BenGoldberg left
[06:54] <diakopter> winter-- weather--

[06:58] <[Coke]> -6.7ºF here.

[06:59] * [Coke] writes a new script for processing the moar file to more handily segregate files by error condition.

[07:09] *** abnorman joined
[07:13] *** jnap joined
[07:18] *** jnap left
[07:18] *** usernotexists joined
[07:22] *** darutoko joined
[07:56] *** gcole left
[07:59] *** colomon joined
[08:07] *** dmol joined
[08:14] *** jnap joined
[08:18] *** jnap left
[08:24] *** pmurias joined
[08:34] <masak> r: sub to-celsius($fahrenheit) { return my $celsius = ($fahrenheit - 32) * 5/9 }; say "{to-celsius($fahrenheit)}ºC here."

[08:34] <camelia> rakudo-parrot e32249: OUTPUT«===SORRY!=== Error while compiling /tmp/sjdYLBxt0d␤Variable '$fahrenheit' is not declared␤at /tmp/sjdYLBxt0d:1␤------> 2) * 5/9 }; say "{to-celsius($fahrenheit⏏)}ºC here."␤    expecting any of:␤        po…»

[08:34] <camelia> ..rakudo-jvm e32249: OUTPUT«===SORRY!=== Error while compiling /tmp/g0mgKMIVeK␤Variable '$fahrenheit' is not declared␤at /tmp/g0mgKMIVeK:1␤------> 2) * 5/9 }; say "{to-celsius($fahrenheit⏏)}ºC here."␤    expecting any of:␤        postf…»

[08:34] <masak> r: sub to-celsius($fahrenheit) { return my $celsius = ($fahrenheit - 32) * 5/9 }; say "{to-celsius(-6.7)}ºC here."

[08:34] <camelia> rakudo-parrot e32249, rakudo-jvm e32249: OUTPUT«-21.5ºC here.␤»

[08:34] <masak> wow.

[08:42] *** PacoAir joined
[08:53] <moritz> that is quite some temperature.

[09:10] *** brother left
[09:10] *** ivanshmakov left
[09:10] *** xinming left
[09:10] *** baest left
[09:10] *** bonsaikitten left
[09:10] *** lue left
[09:10] *** cooper left
[09:10] *** mcglk left
[09:10] *** Juerd left
[09:10] *** synopsebot left
[09:10] *** SHODAN left
[09:10] *** Timbus left
[09:10] *** dagurval_ left
[09:10] *** arnsholt left
[09:10] *** abnorman left
[09:10] *** [Keith] left
[09:10] *** _ilbot left
[09:10] *** Khisanth left
[09:10] *** Pleiades` left
[09:10] *** krunen left
[09:10] *** hoelzro left
[09:10] *** Celelibi left
[09:10] *** zamolxes left
[09:10] *** integral left
[09:10] *** arcterus left
[09:10] *** wtw left
[09:10] *** clkao_ left
[09:10] *** slavik left
[09:10] *** scottp left
[09:10] *** araujo left
[09:10] *** autumn left
[09:10] *** Gothmog_ left
[09:10] *** grep0r left
[09:10] *** corecatcher left
[09:10] *** avar left
[09:10] *** mtk left
[09:10] *** broquaint left
[09:10] *** samebchase left
[09:10] *** dwarring left
[09:10] *** PacoAir left
[09:10] *** woolfy left
[09:10] *** djanatyn left
[09:10] *** BooK left
[09:10] *** prammer left
[09:10] *** revdiablo left
[09:10] *** ggoebel left
[09:10] *** jnthn left
[09:10] *** ponbiki left
[09:10] *** clsn__ left
[09:10] *** nwc10 left
[09:10] *** odoacre left
[09:10] *** robinsmidsrod left
[09:10] *** Rix left
[09:10] *** dmol left
[09:10] *** pmichaud left
[09:10] *** Util left
[09:10] *** masak left
[09:10] *** Tene left
[09:10] *** cognominal left
[09:10] *** eternaleye left
[09:10] *** breinbaas left
[09:10] *** [particle] left
[09:10] *** lestrrat left
[09:10] *** darutoko left
[09:10] *** smash left
[09:10] *** FROGGS left
[09:10] *** awwaiid_ left
[09:10] *** sivoais left
[09:10] *** cotto left
[09:10] *** colomon left
[09:10] *** usernotexists left
[09:10] *** silug left
[09:10] *** aindilis left
[09:10] *** kaare_ left
[09:10] *** PZt left
[09:10] *** markov left
[09:10] *** yeltzooo left
[09:10] *** atta left
[09:10] *** rjbs left
[09:10] *** perigrin left
[09:10] *** daxim left
[09:10] *** nebuchadnezzar left
[09:10] *** daniel-s_ left
[09:10] *** pdcawley left
[09:10] *** zakalwe left
[09:10] *** genehack left
[09:10] *** sftp left
[09:10] *** telex left
[09:10] *** itz_ left
[09:10] *** pmurias left
[09:10] *** ssutch left
[09:10] *** benabik left
[09:10] *** Grimnir_ left
[09:10] *** Bucciarati left
[09:10] *** sitaktif left
[09:10] *** jlaire left
[09:10] *** kst` left
[09:10] *** Psyche^_ left
[09:10] *** raiph left
[09:10] *** [Coke] left
[09:10] *** hugme left
[09:10] *** dalek left
[09:10] *** PerlJam left
[09:10] *** felipe left
[09:10] *** retupmoca left
[09:10] *** dagurval left
[09:10] *** FOAD left
[09:16] *** sjn left
[09:16] *** logie left
[09:16] *** pochi left
[09:16] *** kshannon left
[09:16] *** kshannon_ joined
[09:16] *** Alina-malina left
[09:17] *** Celelibi joined
[09:21] *** retupmoca joined
[09:21] *** Psyche^ joined
[09:22] *** dalek joined
[09:22] *** dmol joined
[09:22] *** pmichaud joined
[09:22] *** Util joined
[09:22] *** masak joined
[09:22] *** Tene joined
[09:22] *** cognominal joined
[09:22] *** eternaleye joined
[09:22] *** breinbaas joined
[09:22] *** [particle] joined
[09:22] *** lestrrat joined
[09:25] *** geekosaur joined
[09:28] *** mattp__ joined
[09:28] *** ribasushi joined
[09:28] *** felipe joined
[09:28] *** hugme joined
[09:28] *** raiph joined
[09:28] *** kst` joined
[09:28] *** Woodi joined
[09:28] *** wtw joined
[09:28] *** corecatcher joined
[09:28] *** pochi joined
[09:28] *** integral joined
[09:28] *** arcterus joined
[09:28] *** slavik joined
[09:28] *** araujo joined
[09:28] *** autumn joined
[09:28] *** Gothmog_ joined
[09:28] *** grep0r joined
[09:28] *** dickson.freenode.net sets mode: +v hugme

[09:29] *** [Keith] joined
[09:29] *** _ilbot joined
[09:29] *** Khisanth joined
[09:29] *** Pleiades` joined
[09:29] *** krunen joined
[09:29] *** hoelzro joined
[09:29] *** zamolxes joined
[09:29] *** clkao joined
[09:29] *** PerlJam joined
[09:29] *** pmurias joined
[09:29] *** ssutch joined
[09:29] *** benabik joined
[09:29] *** Grimnir_ joined
[09:29] *** Bucciarati joined
[09:29] *** sitaktif joined
[09:29] *** jlaire joined
[09:29] *** Biohazard joined
[09:29] *** c1sung joined
[09:29] *** risou_awy joined
[09:29] *** JimmyZ joined
[09:29] *** japhb joined
[09:30] *** sjn joined
[09:30] *** mohij joined
[09:30] *** dagurval joined
[09:30] *** Alina-malina joined
[09:30] *** logie joined
[09:30] *** PacoAir joined
[09:30] *** woolfy joined
[09:30] *** djanatyn joined
[09:30] *** BooK joined
[09:30] *** prammer joined
[09:30] *** revdiablo joined
[09:30] *** ggoebel joined
[09:30] *** jnthn joined
[09:30] *** ponbiki joined
[09:30] *** clsn__ joined
[09:30] *** nwc10 joined
[09:30] *** odoacre joined
[09:30] *** robinsmidsrod joined
[09:30] *** Rix joined
[09:30] *** LordVorp joined
[09:30] *** huf joined
[09:30] *** clkao is now known as 14WABRR17

[09:31] *** arcterus left
[09:31] *** avar joined
[09:31] *** _sri joined
[09:31] *** rafl joined
[09:31] *** flussence joined
[09:31] *** Maddingue joined
[09:31] *** segomos_ joined
[09:31] *** TimToady joined
[09:31] *** torbjorn joined
[09:31] *** brother joined
[09:31] *** ivanshmakov joined
[09:31] *** xinming joined
[09:31] *** baest joined
[09:31] *** lue joined
[09:31] *** cooper joined
[09:31] *** mcglk joined
[09:31] *** Juerd joined
[09:31] *** synopsebot joined
[09:31] *** daxim joined
[09:31] *** nebuchadnezzar joined
[09:31] *** daniel-s_ joined
[09:31] *** pdcawley joined
[09:31] *** zakalwe joined
[09:31] *** genehack joined
[09:31] *** sftp joined
[09:31] *** telex joined
[09:31] *** itz_ joined
[09:31] *** moritz joined
[09:31] *** rhr_ joined
[09:31] *** mtj_ joined
[09:31] *** cxreg joined
[09:31] *** sergot joined
[09:31] *** mathw joined
[09:32] *** apejens joined
[09:32] *** darutoko joined
[09:32] *** smash joined
[09:32] *** FROGGS joined
[09:32] *** awwaiid_ joined
[09:32] *** sivoais joined
[09:32] *** cotto joined
[09:32] *** BinGOs joined
[09:32] *** dwarring joined
[09:32] *** telex left
[09:32] *** xinming left
[09:32] *** FOAD joined
[09:32] *** telex joined
[09:32] <FROGGS> Unexpected closing bracket at t/spec/op/attrs.v5:303 ------> FY_CODE_ATTRIBUTES { $proto = $_[1]; _: ⏏}

[09:33] <FROGGS> what is that even? (note the .v5)

[09:34] * moritz has never heard of a t/spec/op

[09:34] <masak> r: macro m($code) { quasi { {{{$code}}} } }; class A { m(has $.x is rw) }; say A.new(:x('OH HAI')).x

[09:34] <camelia> rakudo-parrot e32249, rakudo-jvm e32249: OUTPUT«OH HAI␤»

[09:34] <moritz> FROGGS: some untracked files in your roast?

[09:34] *** bonsaikitten joined
[09:34] * masak replies to the p6u email

[09:35] *** SHODAN joined
[09:35] *** Timbus joined
[09:35] *** dagurval_ joined
[09:35] *** arnsholt joined
[09:35] *** mcglk left
[09:36] <FROGGS> moritz: no no, that is a test file in v5

[09:36] <FROGGS> I just wander what _: should be in Perl 5... a label?

[09:36] *** hoverboard joined
[09:38] <moritz>  I think so

[09:38] *** mcglk joined
[09:39] <masak> gee, it feels good to have a slightly advanced macro actually *work* :P

[09:44] *** [Coke] joined
[09:44] *** mtk joined
[09:44] *** broquaint joined
[09:44] *** samebchase joined
[09:44] *** raydiak joined
[09:44] *** tadzik joined
[09:44] *** ashleydev joined
[09:46] <masak> r: my %h; macro attr($key, $val) { quasi { %h{ {{{$key}}} } = {{{$val}}} } }; attr("x", "OH HAI"); say %h<x>

[09:46] <camelia> rakudo-jvm e32249: OUTPUT«java.lang.ArrayIndexOutOfBoundsException: 7␤␤»

[09:46] <camelia> ..rakudo-parrot e32249: OUTPUT«(Any)␤»

[09:46] <masak> huh!

[09:46] <masak> r: my %h; macro attr($key, $val) { quasi { %h{ {{{$key}}} } = {{{$val}}} } }; attr("x", "OH HAI"); BEGIN { say %h<x> }

[09:46] <camelia> rakudo-jvm e32249: OUTPUT«(Any)␤java.lang.ArrayIndexOutOfBoundsException␤␤»

[09:46] <camelia> ..rakudo-parrot e32249: OUTPUT«(Any)␤»

[09:46] <masak> bleh.

[09:46] <masak> anyway, I think I know what's going on.

[09:48] <masak> the assignment happens to a %h in the static lexpad.

[09:48] <masak> not sure how to get at that %h to show it, though.

[09:48] <masak> oh, hold on.

[09:49] <masak> r: my %h; macro attr($key, $val) { quasi { %h{ {{{$key}}} } = {{{$val}}} } }; macro diag { quasi { say %h<x> } }; attr("x", "OH HAI"); diag;

[09:49] <camelia> rakudo-jvm e32249: OUTPUT«java.lang.ArrayIndexOutOfBoundsException␤␤»

[09:49] <camelia> ..rakudo-parrot e32249: OUTPUT«OH HAI␤»

[09:49] <masak> there we go.

[09:49] <masak> to be perfectly honest, I'm not even 100% sure this behavior is *wrong*.

[09:50] <masak> (because the runtime %h doesn't exist by the point the macro is invoked)

[09:50] <masak> it's closure semantics, basically.

[09:50] * masak submits rakudobug about %h being the static one, Justin Case

[09:51] * masak submits rakudobug about Rakudo JVM AIOOBE-ing

[09:53] *** tomaw joined
[09:53] *** colomon joined
[09:53] *** usernotexists joined
[09:53] *** silug joined
[09:53] *** aindilis joined
[09:53] *** kaare_ joined
[09:53] *** PZt joined
[09:53] *** markov joined
[09:53] *** yeltzooo joined
[09:53] *** atta joined
[09:53] *** rjbs joined
[09:53] *** perigrin joined
[09:53] *** diakopter joined
[09:53] *** jtpalmer joined
[09:53] *** sunnavy joined
[09:53] *** obra joined
[09:53] *** Grrrr joined
[09:53] *** mls joined
[09:53] *** eiro joined
[09:53] *** d^_^b joined
[09:53] *** cosimo joined
[09:53] *** Lorn joined
[09:54] *** hoverboard left
[09:54] *** ChanServ sets mode: +v dalek

[09:54] *** hoverboard joined
[09:54] <masak> j: say "do you java.lang.ArrayIndexOutOfBoundsException on everything?"

[09:54] <camelia> rakudo-jvm e32249: OUTPUT«do you java.lang.ArrayIndexOutOfBoundsException on everything?␤»

[09:55] *** hoverboard is now known as Guest91996

[09:55] <masak> j: macro m {}; say "alive"

[09:55] <camelia> rakudo-jvm e32249: OUTPUT«alive␤»

[09:55] <masak> j: macro m { quasi {} }; say "alive"

[09:55] <camelia> rakudo-jvm e32249: OUTPUT«alive␤»

[09:55] *** bonsaikitten is now known as Guest95056

[09:55] <masak> j: macro m($c) { quasi {} }; say "alive"

[09:55] <camelia> rakudo-jvm e32249: OUTPUT«alive␤»

[09:55] <masak> j: macro m($c) { quasi { {{{$c}}} } }; say "alive"

[09:55] *** Guest95056 left
[09:55] <camelia> rakudo-jvm e32249: OUTPUT«alive␤»

[09:55] <masak> j: macro m($c) { quasi { {{{$c}}} } }; say m "alive"

[09:55] <camelia> rakudo-jvm e32249: OUTPUT«Cannot call 'match'; none of these signatures match:␤:(Cool:D : $target, *%adverbs)␤  in any  at gen/jvm/BOOTSTRAP.nqp:1201␤␤»

[09:55] <masak> eh. huh.

[09:55] <masak> oh. m

[09:56] <masak> j: macro id($c) { quasi { {{{$c}}} } }; say id "alive"

[09:56] <camelia> rakudo-jvm e32249: OUTPUT«alive␤»

[09:56] <masak> j: my %h; macro st($c) { quasi { %h<foo> = {{{$c}}} } }; say st "alive"

[09:56] <camelia> rakudo-jvm e32249: OUTPUT«java.lang.ArrayIndexOutOfBoundsException␤␤»

[09:56] <masak> ok, it's the %h

[09:57] *** Guest91996 left
[09:57] *** Guest91996 joined
[09:57] *** Guest91996 is now known as hoverboard

[09:58] <masak> j: my $v; macro st($c) { quasi { $v = {{{$c}}} } }; say st "alive"

[09:58] <camelia> rakudo-jvm e32249: OUTPUT«java.lang.ArrayIndexOutOfBoundsException␤␤»

[09:58] <masak> or any variable, for that matter.

[09:58] *** bonsaikitten joined
[09:58] <masak> probably some OUTER not set up correctly.

[10:04] *** xinming joined
[10:10] *** Rotwang joined
[10:15] *** jnap joined
[10:16] <masak> hehe, lizmat++ added "HN'd" into the glossary :)

[10:17] <masak> feels like there's a point where things aren't lexicalized, but just derived using a productive rule...

[10:20] *** jnap left
[10:21] <masak> ("ack'd", "action'd", "adverb'd", "afk'd", "Any'd", "API'd", "Apocalypse'd", "AST'd", "attribute'd", "auth'd", "autopun'd", "backlog'd"...)

[10:22] * FROGGS .oO( masakbot'd )

[10:22] <masak> :P'd

[10:30] <masak> &

[10:38] *** espadrine joined
[10:45] *** eetuleinonen joined
[10:49] *** eetuleinonen left
[10:49] *** ceel joined
[10:50] *** kurahaupo_mobile joined
[10:52] *** rindolf joined
[10:57] *** ceel left
[11:06] *** denisboyun joined
[11:06] *** slavik left
[11:10] *** slavik joined
[11:16] *** jnap joined
[11:21] *** jnap left
[11:25] <moritz> masak: on reading your blog post, I'm wonder if maybe the initial value for a run-time variable should be taken from the static variable

[11:25] <moritz> though that might lead to all kinds of over-sharing issues

[11:27] *** spider-mario joined
[11:28] *** spider-mario left
[11:30] *** spider-mario joined
[11:31] *** colomon left
[11:31] *** denisboyun left
[11:40] *** hoverboard left
[11:50] *** denis_boyun joined
[11:53] *** berekuk joined
[12:08] *** colomon joined
[12:09] *** [Sno] joined
[12:12] *** [Sno] left
[12:13] *** berekuk left
[12:17] *** jnap joined
[12:22] *** jnap left
[12:27] *** denis_boyun__ joined
[12:28] *** denis_boyun left
[12:45] *** usernotexists left
[12:45] *** raiph left
[13:09] *** rurban1 joined
[13:12] *** HaraldJoerg joined
[13:14] *** berekuk joined
[13:18] *** jnap joined
[13:22] *** jnap left
[13:25] *** berekuk left
[13:30] <masak> moritz: hm.

[13:31] <masak> moritz: did you mean 'on reading your email', or did you actually go back to an old blog post -- if so, which one? :)

[13:34] <FROGGS> yeah, I was hoping that you've blogged :o)

[13:36] <masak> I might still do that.

[13:36] <masak> in fact...

[13:36] * masak starts writing something

[13:36] <FROGGS> \o/

[13:37] <FROGGS> ++masak

[13:38] <masak> p: my $x; role R { method foo { say $x } }; class C does R {}; $x = "OH HAI"; C.new.foo

[13:38] <camelia> rakudo-parrot e32249: OUTPUT«OH HAI␤»

[13:39] <masak> this situation is very close to the one finanalyst found with macros.

[13:39] <masak> but unlike it, it Does The Right Thing (from the user's perspective).

[13:39] <masak> let's step through it in slow motion:

[13:40] <masak> 1. Role R is created. As part of that, R.foo gets an OUTER chain. Pointing to the static mainline, because that's all that exists at that point. so $x is the static version.

[13:40] <masak> 2. Class C composes in R. $x in .foo is still bound wrongly.

[13:40] <masak> 3. Program runtime begins.

[13:41] <masak> 4. <MAGIC HAPPENS>

[13:41] <masak> 5. The (live/runtime) $x is assigned "OH HAI"

[13:41] <masak> 6. C.new.foo is called, and somehow it gets ahold of the *live* $x

[13:42] <masak> kinda similar, right?

[13:42] <masak> roles have a step 4, and macros (currently) don't.

[13:43] *** berekuk joined
[13:44] <masak> moritz: come to think of it, I think that's a saner solution than "take the initial value from the static variable".

[13:46] *** berekuk left
[13:46] <masak> I *think* https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Actions.nqp#L1878 is setting up for step 4 in Rakudo.

[13:48] <timotimo> o/

[13:50] <masak> \o

[13:51] <FROGGS> -o

[13:54] * timotimo is going to be responsible for many changelog entries for rakudo this month :3

[13:55] *** berekuk joined
[13:56] <FROGGS> O.o

[13:57] <FROGGS> what are you up to?

[13:57] <timotimo> well, i'm already responsible for 2 entries out of 5 this month

[13:57] <timotimo> and i'm about to make rakudo parse chains of adverbs in arglists properly

[13:58] <FROGGS> bah, I just make something up and add it :P

[13:58] <moritz> masak: yes, I meant email, not blog

[13:58] <FROGGS> timotimo: cool! you mentioned it last night I think

[13:59] * timotimo is always happy when there's a big changelog

[13:59] <FROGGS> ohh yeah :o)

[13:59] <FROGGS> I'd like to add "implemented loop labels"

[14:00] *** atroxaper joined
[14:00] <masak> oh, so I'm the release man this month :)

[14:01] <masak> next month is vacant -- who wants to do it?

[14:01] <timotimo> masak: i think i ought to do one by now

[14:05] <masak> oh yes.

[14:05] <timotimo> this is for rakudo, not star. right?

[14:07] <masak> right.

[14:09] <timotimo> i'm even well prepared for being a releaser as my keyboard has the ✔✘ symbols on it

[14:09] <timotimo> (shift and numpad-7 and numpad-8)

[14:09] <timotimo> as well as ♦♥♠♣ :)

[14:10] *** daniel-s_ left
[14:11] *** berekuk left
[14:13] <dalek> rakudo/nom: d773e28 | masak++ | docs/release_guide.pod:

[14:13] <dalek> rakudo/nom: volunteer timotimo++ for Feb release

[14:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d773e287e0

[14:13] <masak> there. it is done.

[14:13] <timotimo> good :)

[14:15] <moritz> masak++ timotimo++

[14:15] <masak> r: my $x; BEGIN $x = 42; say $x

[14:15] <camelia> rakudo-parrot e32249, rakudo-jvm e32249: OUTPUT«42␤»

[14:16] <masak> why does this one not print '(Any)'?

[14:16] <timotimo> "Currently Star is on a monthly release cycle; we expect to slow down to quarterly releases again sometime in 2013."

[14:17] <timotimo> i don't see a list of volunteers for future star releases in star/tools/star/release-guide.pod :\

[14:18] <tadzik> if you put me there, I won't unput myself :)

[14:18] <tadzik> unless it's tomorrow

[14:18] <timotimo> it doesn't seem to even have a section, that's what i meant

[14:18] <timotimo> nah, not that soon

[14:18] <timotimo> it's still about 2 weeks until the rakudo release itself

[14:18] *** jnap joined
[14:19] <masak> r: our &bar; sub foo { my $x; our sub bar { say $x } }; bar

[14:19] <camelia> rakudo-parrot e32249, rakudo-jvm e32249: OUTPUT«(Any)␤»

[14:19] <masak> is there a way to write the above without the 'our &bar;' ?

[14:19] <dalek> star: 2d7332c | moritz++ | tools/star/release-guide.pod:

[14:19] <dalek> star: sign up tadzik++ for the January Star release

[14:19] <dalek> star: review: https://github.com/rakudo/star/commit/2d7332c5e1

[14:20] *** zakharyas joined
[14:20] <masak> moritz++ tadzik++

[14:20] <timotimo> ah, that's what it looks like

[14:20] *** rindolf left
[14:20] <moritz> r: sub foo { my $x; our sub bar { say $x }; OUR::bar()

[14:20] <camelia> rakudo-jvm e32249: OUTPUT«===SORRY!=== Error while compiling /tmp/ikCH3RfAPe␤Unable to parse expression in block; couldn't find final '}' ␤at /tmp/ikCH3RfAPe:1␤------> y $x; our sub bar { say $x }; OUR::bar()⏏<EOL>␤    expecting any of:…»

[14:20] <camelia> ..rakudo-parrot e32249: OUTPUT«===SORRY!=== Error while compiling /tmp/vz4x8q1Obd␤Unable to parse expression in block; couldn't find final '}' ␤at /tmp/vz4x8q1Obd:1␤------> y $x; our sub bar { say $x }; OUR::bar()⏏<EOL>␤    expecting any …»

[14:20] <moritz> r: sub foo { my $x; our sub bar { say $x } }; OUR::bar()

[14:20] <camelia> rakudo-jvm e32249: OUTPUT«No such method 'Any' for invocant of type 'Parcel'␤  in any  at gen/jvm/BOOTSTRAP.nqp:1658␤␤»

[14:20] <camelia> ..rakudo-parrot e32249: OUTPUT«No such method 'Any' for invocant of type 'Parcel'␤  in any  at gen/parrot/BOOTSTRAP.nqp:1680␤  in any  at gen/parrot/BOOTSTRAP.nqp:1674␤  in any  at gen/parrot/BOOTSTRAP.nqp:1669␤  in block  at /tmp/n49D1ccP3q:1␤␤»

[14:20] <masak> :/

[14:21] <moritz> p: sub foo { my $x = 42; our sub bar { say $x } }; OUR::bar()

[14:21] <camelia> rakudo-parrot e32249: OUTPUT«No such method 'Any' for invocant of type 'Parcel'␤  in any  at gen/parrot/BOOTSTRAP.nqp:1680␤  in any  at gen/parrot/BOOTSTRAP.nqp:1674␤  in any  at gen/parrot/BOOTSTRAP.nqp:1669␤  in block  at /tmp/Vw99OAilw5:1␤␤»

[14:21] <moritz> p: sub foo { my $x = 42; our sub bar { say $x } }; &OUR::bar()

[14:21] <camelia> rakudo-parrot e32249: OUTPUT«(Any)␤»

[14:21] <moritz> p: say &OUR::bar()

[14:21] <camelia> rakudo-parrot e32249: OUTPUT«No such method 'Any' for invocant of type 'Parcel'␤  in any  at gen/parrot/BOOTSTRAP.nqp:1680␤  in any  at gen/parrot/BOOTSTRAP.nqp:1674␤  in any  at gen/parrot/BOOTSTRAP.nqp:1669␤  in block  at /tmp/71H0ckjqc1:1␤␤»

[14:21] <masak> p: class C { method foo { my $x = 42; method bar { say $x } } }; C.bar

[14:21] <camelia> rakudo-parrot e32249: OUTPUT«(Any)␤»

[14:21] <moritz> anyway, that error mesage is LTA

[14:22] <masak> Yo dawg, I heard you like methods.

[14:22] <moritz> p: module Bla; sub foo { my $x = 42; our sub bar { say $x } }; Bla::bar()

[14:22] <camelia> rakudo-parrot e32249: OUTPUT«(Any)␤»

[14:22] * timotimo spectests his changes for adverbs

[14:22] * masak submits LTA error message

[14:22] <timotimo> i'll probably have to build a few more tests, though

[14:23] *** jnap left
[14:24] <timotimo> t/spec/S03-operators/adverbial-modifiers.rakudo.parrot .......... Dubious, test returned 1 (wstat 256, 0x100)

[14:24] <timotimo> Failed 18/42 subtests  (4 TODO tests unexpectedly succeeded)

[14:24] <timotimo> that's good *and* bad :)

[14:25] *** 14WABRR17 is now known as clkao_

[14:28] *** HaraldJoerg left
[14:28] <arnsholt> Well, if the 4 passing TODOs are the things you wanted to implement, it's mostly good I suppose

[14:28] <arnsholt> Now you just (FSVO of just) have to figure out why the other tests fail =)

[14:29] <timotimo> wow, so many failures :(

[14:29] *** tomaw left
[14:29] *** tomaw joined
[14:30] <moritz> "it's just array and hash indexing, what could go wrong?"

[14:30] <masak> p: sub fac($N) { $N ?? fac($N - 1) * $N !! 1 }; say fac 6

[14:30] <camelia> rakudo-parrot e32249: OUTPUT«720␤»

[14:32] *** raiph joined
[14:33] *** jnap joined
[14:35] *** PacoAir_ joined
[14:35] *** PacoAir left
[14:35] *** PacoAir_ is now known as PacoAir

[14:36] <timotimo> my approach to the problem may be wrong

[14:39] <masak> r: for 1..3 -> $n { role R { method foo { say $n } } }; class C does R {}; C.new.foo

[14:39] <camelia> rakudo-parrot e32249, rakudo-jvm e32249: OUTPUT«3␤»

[14:40] <masak> I see. interesting.

[14:46] <masak> r: role R { method foo {}; R.foo }

[14:46] <camelia> rakudo-parrot e32249: OUTPUT«(timeout)»

[14:46] <camelia> ..rakudo-jvm e32249: OUTPUT«Unhandled exception: java.lang.StackOverflowError␤  in  (gen/jvm/Metamodel.nqp:2162)␤  in  (gen/jvm/Metamodel.nqp:2462)␤  in  (gen/jvm/Metamodel.nqp:2458)␤  in  (gen/jvm/Metamodel.nqp:2456)␤  in  (gen/jvm/Metamodel.nqp:1374)␤  in  (gen/jvm/Metam…»

[14:46] * masak submits rakudobug

[14:46] <masak> also,

[14:46] <masak> r: role R { method foo {}; BEGIN R.foo }

[14:46] <camelia> rakudo-parrot e32249, rakudo-jvm e32249: OUTPUT«===SORRY!===␤None of the parametric role variants for 'R' matched the arguments supplied.␤Cannot call ''; none of these signatures match:␤»

[14:47] <masak> but I guess this one is easier to accept.

[14:49] *** zakharyas left
[15:00] *** atroxaper left
[15:14] *** rurban1 left
[15:14] *** rindolf joined
[15:21] *** rindolf left
[15:29] *** rindolf joined
[15:41] *** beastd joined
[15:41] <masak> lol, I blogged! \o/ http://strangelyconsistent.org/blog/lexpads-and-why-roles-need-fixups

[15:42] <geekosaur> blolg?

[15:46] <masak> blolg'd.

[15:50] *** rindolf left
[15:52] <arnsholt> masak++

[15:52] <arnsholt> Oh, and the Bayesian tweet made perfect sense to me =)

[15:52] *** dalek left
[15:53] *** dalek joined
[15:53] *** ChanServ sets mode: +v dalek

[15:55] *** kaare_ left
[15:56] *** rindolf joined
[15:57] *** mtk left
[15:57] <masak> :)

[15:58] *** Psyche^_ joined
[16:00] *** jnap left
[16:01] *** jnap joined
[16:02] *** Psyche^ left
[16:03] *** rindolf left
[16:17] *** mtk joined
[16:20] <[Coke]> masak: (email) *facepalm* d'oh.

[16:21] *** ajr joined
[16:21] <nwc10> itz_: it's not clear to me whether in all the discussion prompted by that blog post, anyone has proposed anything they are competant and willing to do, to try to address the migration problems that he lays bare.

[16:21] *** ajr is now known as Guest55815

[16:21] <nwc10> (not that I'm implying that it's either obvious or easy to change anything)

[16:21] *** Guest55815 is now known as ajr_

[16:21] <[Coke]> masak: Didn't. Even. See that.

[16:22] <nwc10> nor do I think it appropriate or constructive to suggest anything, given that *I* am neither competant nor willing to help, with what is a sticky awkward and unfortunate situation.

[16:22] <nwc10> as a side effect, I did find *this*, which is interesting: http://lucumr.pocoo.org/2013/7/2/the-updated-guide-to-unicode/

[16:23] <nwc10> particularly http://lucumr.pocoo.org/2013/7/2/the-updated-guide-to-unicode/#unicode-is-hard

[16:26] *** FOAD left
[16:26] *** FOAD joined
[16:28] <arnsholt> nwc10: I'm a bit suspicious of several of the suggestions in that last section

[16:28] <arnsholt> 1 and 4 in particular

[16:29] <nwc10> yes, the Python 2.x approach is messy, as it causes runtime, data-driven exceptions

[16:29] <nwc10> and I suspect that (4) is the wrong solution to a valid problem

[16:30] <nwc10> (or a pair of valid problems - that OS interfaces might return filenames, etc, that aren't in the encoding that you thought you were dealing with

[16:30] *** denis_boyun__ left
[16:30] <nwc10> and that one about headers not being in ISO-8859-1, as per various specs, but in UTF-8)

[16:31] <timotimo> oh yay

[16:31] <timotimo> my refinement of my code makes almost all test failures go away \o/

[16:31] <nwc10> agree, oh yay

[16:31] <nwc10> oh, actual yay

[16:31] <nwc10> not scarcasm yay

[16:31] <nwc10> yay \o/

[16:32] <timotimo> actually. the remaining test failures came from files cluttering my rakudo folder

[16:32] <timotimo> so all i'm left with is passing TODOs and no failures \o/

[16:32] <arnsholt> Cool!

[16:33] <timotimo> on that topic, S32-io/copy.t uses the deprecated IO::Handle.copy method

[16:48] <timotimo> i think perl6 could use a module just like python's "webbrowser" or "browser" or what it's called

[16:48] * timotimo is probably going to hack this up tonight

[16:51] *** rindolf joined
[16:51] <FROGGS> timotimo: what does it do?

[16:51] <timotimo> look it up :)

[16:51] <FROGGS> meh

[16:51] <timotimo> among other things, open a web browser in a clever manner

[16:51] <FROGGS> I'm lazy

[16:51] <FROGGS> ahh

[16:51] <timotimo> bbl

[16:57] *** zakharyas joined
[16:59] *** denis_boyun joined
[17:04] *** usernotexists joined
[17:20] <masak> [Coke]: the strings? I missed it, too.

[17:24] *** Alina-malina left
[17:24] *** Alina-malina joined
[17:25] *** Rotwang left
[17:27] <timotimo> would that be Web::Browser? Desktop::Browser::Launch?

[17:34] <arnsholt> I'd say Web::Browser

[17:34] *** jnap left
[17:34] <arnsholt> Don't need to nest -that- deep. It's not Java, after all =)

[17:36] <timotimo> hah

[17:36] <timotimo> well, Web::Browser may be a module that *implements* a web browser ;)

[17:39] <timotimo> i got the feeling that my extra code makes stage parse significantly slower

[17:39] <timotimo> i may need to do something about that before i merge into nom

[17:40] <timotimo> do dynamic variables from inside tokens/rules persist into the action method or is it called separately from one layer lower?

[17:41] <arnsholt> IIRC a contextual should be visible in the action method, even when declared in the rule

[17:41] <timotimo> r: grammar Foo { token TOP { :my $*test = "hi"␤ hey } }; class FooAct { method TOP { say $*test } }; Foo.parse("hey", :actions(FooAct.new));

[17:41] <camelia> rakudo-jvm d773e2: OUTPUT«===SORRY!=== Error while compiling /tmp/mjfBD_yX6j␤Unrecognized regex modifier :my␤at /tmp/mjfBD_yX6j:2␤------>  ⏏hey } }; class FooAct { method TOP { say␤    expecting any of:␤        postfix␤        infix…»

[17:41] <camelia> ..rakudo-parrot d773e2: OUTPUT«===SORRY!=== Error while compiling /tmp/Uu8746H_ZN␤Unrecognized regex modifier :my␤at /tmp/Uu8746H_ZN:2␤------>  ⏏hey } }; class FooAct { method TOP { say␤    expecting any of:␤        postfix␤        in…»

[17:41] <timotimo> ... er?

[17:41] <timotimo> is that nqp only?

[17:41] <timotimo> nqp: grammar Foo { token TOP { :my $*test := "hi"␤ hey } }; class FooAct { method TOP { say $*test } }; Foo.parse("hey", :actions(FooAct.new));

[17:41] <camelia> nqp-jvm: OUTPUT«Unrecognized regex modifier :my at line 2, near " $*test :="␤  in panic (gen/jvm/stage2/NQPHLL.nqp:379)␤  in  (gen/jvm/stage2/NQPP6QRegex.nqp:389)␤  in mod_ident:sym<oops> (gen/jvm/stage2/NQPP6QRegex.nqp:389)␤  in !protoregex (gen/jvm/stage2/QRegex.nqp:756)…»

[17:41] <camelia> ..nqp-parrot: OUTPUT«Unrecognized regex modifier :my at line 2, near " $*test :="␤current instr.: 'panic' pc 15975 (gen/parrot/stage2/NQPHLL.pir:5955) (gen/parrot/stage2/NQPHLL.nqp:426)␤»

[17:41] <camelia> ..nqp-moarvm: OUTPUT«Unrecognized regex modifier :my at line 2, near " $*test :="␤panic␤»

[17:42] <arnsholt> No, that should work in Rakudo as well, I think...

[17:42] <timotimo> isn't that how i do it?

[17:42] <arnsholt> Oh

[17:42] <arnsholt> Missing a semicolon

[17:42] <timotimo> ah! :)

[17:42] <arnsholt>  r: grammar Foo { token TOP { :my $*test = "hi"; hey } }; class FooAct { method TOP { say $*test } }; Foo.parse("hey", :actions(FooAct.new));

[17:42] <camelia> rakudo-parrot d773e2: OUTPUT«Too many positional parameters passed; got 2 but expected 1␤  in method TOP at /tmp/RvTaH_x7N5:1␤  in any !reduce at gen/parrot/stage2/QRegex.nqp:724␤  in any !cursor_pass at gen/parrot/stage2/QRegex.nqp:686␤  in regex TOP at /tmp/RvTaH_x7N5:1␤…»

[17:42] <camelia> ..rakudo-jvm d773e2: OUTPUT«Too many positional parameters passed; got 2 but expected 1␤  in any !reduce at gen/jvm/stage2/QRegex.nqp:724␤  in any !cursor_pass at gen/jvm/stage2/QRegex.nqp:686␤  in method parse at gen/jvm/CORE.setting:12415␤␤»

[17:42] <timotimo> er, yes

[17:42] <timotimo> TOP($/)

[17:42] <arnsholt> Oh, right =D

[17:42] <arnsholt>  r: grammar Foo { token TOP { :my $*test = "hi"; hey } }; class FooAct { method TOP($/) { say $*test } }; Foo.parse("hey", :actions(FooAct.new));

[17:42] <camelia> rakudo-parrot d773e2, rakudo-jvm d773e2: OUTPUT«hi␤»

[17:43] <timotimo> great!

[17:43] <timotimo> that'll make things significantly easier

[17:53] <timotimo> hm. i can't seem to get the good performance back :|

[18:00] <timotimo> at least i didn't break any other tests

[18:03] <dalek> rakudo/nom: 88b5ddf | (Timo Paulssen)++ | src/Perl6/ (2 files):

[18:03] <dalek> rakudo/nom: find chained adverbs and combine them into named args

[18:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/88b5ddf1c8

[18:03] <dalek> rakudo/nom: e5268be | (Timo Paulssen)++ | docs/ChangeLog:

[18:03] <dalek> rakudo/nom: proudly add another changelog entry

[18:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e5268be184

[18:27] *** yogan left
[18:29] *** abnorman joined
[18:39] *** Mouq joined
[18:45] <raiph> timotimo: why +$/.list == in one place, +($/.list) == in another?

[18:45] *** slavik left
[18:50] *** bonsaikitten left
[18:50] *** bonsaikitten joined
[18:52] *** darutoko left
[18:54] *** slavik joined
[18:59] <timotimo> it may have been +@(...) before

[19:06] *** w0rm_x joined
[19:10] *** berekuk joined
[19:12] *** usernotexists left
[19:14] *** berekuk left
[19:15] *** ssutch left
[19:16] *** berekuk joined
[19:17] <timotimo> so ... what to do now? :)

[19:18] <FROGGS> fix all the bugs?

[19:19] <timotimo> :\

[19:20] <FROGGS> *g*

[19:26] *** kivutar joined
[19:36] <timotimo> WARNING  root: emcc: cannot find library "m"

[19:36] <timotimo> WARNING  root: emcc: cannot find library "pthread"

[19:36] <timotimo> WARNING  root: emcc: cannot find library "rt"

[19:36] <timotimo> WARNING  root: emcc: cannot find library "dl"

[19:36] <timotimo> :\

[19:39] <FROGGS> O.o

[19:39] <FROGGS> what

[19:39] <FROGGS> have

[19:39] <FROGGS> you 

[19:39] <FROGGS> don?

[19:39] <FROGGS> +e

[19:39] <timotimo> you know what emcc is? :)

[19:39] * moritz has no idea

[19:39] *** yogan joined
[19:40] <timotimo> emscripten :)

[19:40] <FROGGS> ahh

[19:40] <benabik> I was going to guess Eastern Maine Community College.

[19:41] <timotimo> i'll need to teach libuv to not build networking support it seems

[19:45] <pmurias> timotimo: you are compiling moarvm to javascript?

[19:45] <timotimo> i'll probably be easily discouraged if something doesn't work immediately

[19:46] <timotimo> like libuv needing linux networking stuff

[19:46] *** zakharyas left
[19:47] <moritz> implement IP-over-DOM :-)

[19:47] <timotimo> m)

[19:48] <timotimo> i'd much rather have a moarvm that does hardly any I/O at all

[19:49] <timotimo> especially since i'll need to have some way to give it the .moarvm files etc etc

[19:52] *** xenoterracide_ joined
[19:55] <timotimo> WARNING  root: emcc: cannot find library "m"

[19:55] <timotimo> WARNING  root: emcc: cannot find library "pthread"

[19:55] <timotimo> WARNING  root: emcc: cannot find library "rt"

[19:55] <timotimo> WARNING  root: emcc: cannot find library "dl"

[19:55] <timotimo> er, wrong

[19:55] <timotimo> 3rdparty/libuv/src/unix/linux-core.c:52:11: fatal error: 'linux/if_packet.h' file not found

[19:56] <timotimo> maybe all i need to do is move the headers somewhere i can find them?

[19:56] <Mouq> o/

[19:57] <timotimo> but it's in /usr/include

[19:57] <Mouq> I made a gist of the output I get trying to make Rakudo on MoarVM: https://gist.github.com/Mouq/8259841

[19:57] <timotimo> why would emcc not look there?

[19:57] <Mouq> Since I'm not sure where to put an issue/bug report

[19:58] <timotimo> huh

[19:58] <timotimo> make realclean?

[19:58] *** rindolf left
[19:59] <Mouq> timotimo: me? Sure, just tried that, fails with the same error. This happens even if I create a new rakudo directory and use --gen-moar

[19:59] <timotimo> weird!

[19:59] <FROGGS> MacOSX!

[20:00] <timotimo> huh.

[20:01] *** xenoterracide_ left
[20:01] <[Coke]> r: "eek"; "ook"

[20:01] <camelia> rakudo-parrot e5268b, rakudo-jvm e5268b: OUTPUT«WARNINGS:␤Useless use of constant string "eek" in sink context (line 1)␤»

[20:03] * timotimo gives up for the moment

[20:03] <timotimo> pmurias: how's your progress with rakudo-js? :)

[20:08] *** xenoterracide joined
[20:17] *** hoverboard joined
[20:22] *** w0rm_x left
[20:23] *** hoverboard left
[20:24] *** hoverboard joined
[20:26] <timotimo> so ... where do i start with my shared memory experiments?

[20:26] <timotimo> moarvm seems like a good target to start with dP

[20:26] <timotimo> :P

[20:28] <FROGGS> is that like the Bord's hive? :o)

[20:28] <FROGGS> Borg*

[20:31] <timotimo> hehe

[20:33] <timotimo> i may not need to do terribl ymuch

[20:33] <timotimo> i can probably take most of the stuff from MVMArray and change everything that tries to realloc or something

[20:33] *** raiph left
[20:34] *** jeffreykegler joined
[20:38] *** kurahaupo_mobile left
[20:52] *** Mouq left
[20:54] *** dagurval_ left
[21:00] *** denis_boyun left
[21:11] *** kst`` joined
[21:13] *** kst` left
[21:19] *** berekuk left
[21:20] *** kst`` is now known as kst

[21:21] *** Mouq joined
[21:28] *** jeffreykegler left
[21:35] <pmurias> timotimo: I haven't touched perl6/rakudo-js in a while, hopefully I'll get back to work on that soon

[21:36] <timotimo> sounds good :)

[21:40] *** hoverboard left
[21:45] <nwc10> pmurias: you got network to your room?

[21:45] *** hoverboard joined
[21:53] *** Rotwang joined
[21:54] *** ajr_ left
[22:01] *** berekuk joined
[22:03] *** kurahaupo_mobile joined
[22:07] *** denis_boyun joined
[22:09] *** telex left
[22:10] *** kurahaupo_mobile left
[22:12] *** telex joined
[22:13] <timotimo> how do you feel about having a compiler for nqp and a compiler for perl6 inside rakudo/nqp that will accept a whitelist of ops/subs/methods?

[22:14] <timotimo> i'm not sure if i want to have the hassle of maintaining that "out of tree"

[22:14] <timotimo> although, it may be easier than i think

[22:14] <timotimo> i'm just not sure how to get at these compilers from inside rakudo

[22:18] *** Mouq left
[22:25] <diakopter> timotimo: use the & trick :D

[22:25] <diakopter> (inject hooks as ops)

[22:25] <timotimo> ... huh?

[22:26] *** kaare_ joined
[22:27] *** daniel-s_ joined
[22:28] *** unclefester2 joined
[22:28] <pmurias> nwc10: yes

[22:29] <unclefester2> r: pack "S*", "a".encode("UTF-16")

[22:29] <camelia> rakudo-jvm e5268b: OUTPUT«Cannot call 'Real'; none of these signatures match:␤:(Mu:U \v: Mu *%_)␤  in any  at gen/jvm/BOOTSTRAP.nqp:1201␤  in sub hyper at gen/jvm/CORE.setting:16503␤  in block  at gen/jvm/CORE.setting:16470␤  in block  at gen/jvm/CORE.setting:5317␤  in s…»

[22:29] <camelia> ..rakudo-parrot e5268b: OUTPUT«Cannot call 'Real'; none of these signatures match:␤:(Mu:U \v: Mu *%_)␤  in any  at gen/parrot/BOOTSTRAP.nqp:1218␤  in any  at gen/parrot/BOOTSTRAP.nqp:1209␤  in method Real at gen/parrot/CORE.setting:1002␤  in sub infix:<%> at gen/parrot/CORE.…»

[22:30] <unclefester2> r: pack "S", "a".encode("UTF-16")

[22:30] <camelia> rakudo-jvm e5268b: OUTPUT«Cannot call 'Real'; none of these signatures match:␤:(Mu:U \v: Mu *%_)␤  in any  at gen/jvm/BOOTSTRAP.nqp:1201␤  in sub hyper at gen/jvm/CORE.setting:16503␤  in block  at gen/jvm/CORE.setting:16470␤  in block  at gen/jvm/CORE.setting:5317␤  in s…»

[22:30] <camelia> ..rakudo-parrot e5268b: OUTPUT«Cannot call 'Real'; none of these signatures match:␤:(Mu:U \v: Mu *%_)␤  in any  at gen/parrot/BOOTSTRAP.nqp:1218␤  in any  at gen/parrot/BOOTSTRAP.nqp:1209␤  in method Real at gen/parrot/CORE.setting:1002␤  in sub infix:<%> at gen/parrot/CORE.…»

[22:30] <pmurias> nwc10: why do you ask?

[22:33] <pmurias> nwc10: ah, I have seen the backlog

[22:33] *** kurahaupo_mobile joined
[22:35] <FROGGS> r: unpack "S*", "a".encode("UTF-16")

[22:35] <camelia> rakudo-jvm e5268b: OUTPUT«===SORRY!=== Error while compiling /tmp/OElBgjpR_x␤Undeclared routine:␤    unpack used at line 1. Did you mean '&pack'?␤␤»

[22:35] <camelia> ..rakudo-parrot e5268b: OUTPUT«===SORRY!=== Error while compiling /tmp/FRjXUKoUTP␤Undeclared routine:␤    unpack used at line 1. Did you mean '&pack'?␤␤»

[22:35] <FROGGS> meh

[22:35] <FROGGS> unclefester2: pack takes numbers and produces a buf

[22:35] <FROGGS> p: say pack "S*", 42

[22:35] <camelia> rakudo-parrot e5268b: OUTPUT«Buf:0x<2a 00>␤»

[22:36] <unclefester2> the UTF-16 encoding of the string should return an a buf array of 16 bit numbers

[22:37] <FROGGS> p: say "a".encode("UTF-16").perl

[22:37] <camelia> rakudo-parrot e5268b: OUTPUT«utf16.new(97)␤»

[22:37] <FROGGS> p: say "a".encode("UTF-16").list

[22:37] <camelia> rakudo-parrot e5268b: OUTPUT«97␤»

[22:38] <FROGGS> p: say pack "S*", "a".encode("UTF-16").list

[22:38] <camelia> rakudo-parrot e5268b: OUTPUT«Buf:0x<61 00>␤»

[22:38] <FROGGS> unclefester2: there you go

[22:38] *** kurahaupo_mobile left
[22:38] <unclefester2> thanks - that helps ...

[22:39] <unclefester2> LTA message maybe

[22:39] <FROGGS> at least not very helpful, yes

[22:41] *** kurahaupo_mobile joined
[22:43] <unclefester2> r: pack "S*", "ab".encode("UTF-16")

[22:44] <camelia> rakudo-jvm e5268b: OUTPUT«Cannot call 'Real'; none of these signatures match:␤:(Mu:U \v: Mu *%_)␤  in any  at gen/jvm/BOOTSTRAP.nqp:1201␤  in sub hyper at gen/jvm/CORE.setting:16503␤  in block  at gen/jvm/CORE.setting:16470␤  in block  at gen/jvm/CORE.setting:5317␤  in s…»

[22:44] <camelia> ..rakudo-parrot e5268b: OUTPUT«Cannot call 'Real'; none of these signatures match:␤:(Mu:U \v: Mu *%_)␤  in any  at gen/parrot/BOOTSTRAP.nqp:1218␤  in any  at gen/parrot/BOOTSTRAP.nqp:1209␤  in method Real at gen/parrot/CORE.setting:1002␤  in sub infix:<%> at gen/parrot/CORE.…»

[22:44] *** hoverboard left
[22:44] <unclefester2> r: pack "S*", "ab".encode("UTF-16").list

[22:44] <camelia> rakudo-parrot e5268b, rakudo-jvm e5268b: ( no output )

[22:44] <unclefester2> r: my $b = pack "S*", "ab".encode("UTF-16").list; say $b

[22:44] <camelia> rakudo-parrot e5268b, rakudo-jvm e5268b: OUTPUT«Buf:0x<61 00>␤»

[22:44] *** hoverboard joined
[22:44] <unclefester2> r: my $b = pack "SS", "ab".encode("UTF-16").list; say $b

[22:44] <camelia> rakudo-parrot e5268b, rakudo-jvm e5268b: OUTPUT«Buf:0x<61 00 62 00>␤»

[22:45] *** Mouq joined
[22:45] <FROGGS> r: my $b = pack "S*", |"ab".encode("UTF-16").list; say $b

[22:45] <camelia> rakudo-parrot e5268b, rakudo-jvm e5268b: OUTPUT«Buf:0x<61 00>␤»

[22:46] <FROGGS> weird

[22:47] *** espadrine left
[22:48] *** espadrine joined
[22:50] *** hoverboard is now known as hovercraft

[22:51] *** hovercraft is now known as hoverboard

[22:58] *** rightfold joined
[22:58] <rightfold> Good morning.

[23:01] *** rightfold left
[23:02] <[Coke]> ~~

[23:10] *** Mouq left
[23:16] *** dmol left
[23:17] *** denis_boyun left
[23:18] *** spider-mario left
[23:30] *** hoverboard left
[23:32] *** nnunley joined
[23:35] *** dmol joined
[23:36] *** dmol left
[23:43] *** espadrine left
[23:43] *** berekuk left
[23:44] *** espadrine joined
[23:48] <dalek> rakudo/moar-support: 9b4b4c4 | (Tobias Leich)++ | tools/build/Makefile-Moar.in:

[23:48] <dalek> rakudo/moar-support: create dirs we want to use, diakopter++

[23:48] <dalek> rakudo/moar-support: review: https://github.com/rakudo/rakudo/commit/9b4b4c4895

[23:52] *** mohij left
