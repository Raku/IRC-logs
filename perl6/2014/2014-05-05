[00:00] *** lvfjf left
[00:00] *** lvfjf joined
[00:03] *** jnap left
[00:06] *** benabik joined
[00:06] *** lvfjf left
[00:09] <colomon> is the rakudo build failing right now?>

[00:09] <colomon> (on parrot)

[00:15] *** MilkmanD1n is now known as MilkmanDan

[00:15] *** logie left
[00:16] *** logie joined
[00:16] *** aindilis left
[00:19] *** aindilis joined
[00:23] <colomon> rakudobrew builds moar for me just fine, but parrot looks like it goes into an infinite recursion or something‚Ä¶ errors stretching all the way through my scrollback buffer

[00:25] *** lvfjf joined
[00:26] <benabik> heh

[00:26] <benabik> Yes.

[00:26] <benabik> An optimization broke the Parrot build.  I posted the breaking commit back in the clogs.

[00:27] <benabik> 1775172: ‚ÄúVarious return typecheck/decont optimizations.‚Äù

[00:27] <colomon> benabik++

[00:28] *** anaeem1_ left
[00:29] *** anaeem1 joined
[00:32] <colomon> huh.  was there no response at all to your report?

[00:33] <benabik> No.  Odd hour of the night, and I‚Äôm pretty busy at the moment so haven‚Äôt followed up.

[00:34] <colomon> moar and JVM both build fine.

[00:36] <colomon> if I'd been paying attention to me smoke test results, I'd have noticed the bug days ago ‚Ä¶ it hasn't built a new Rakudo successfully since that patch.

[00:46] *** hoverboard left
[00:50] *** lvfjf left
[00:51] *** rurban joined
[00:55] *** rurban left
[00:59] *** FROGGS_ joined
[01:00] *** jnap joined
[01:00] *** lvfjf joined
[01:02] *** FROGGS left
[01:04] *** dayangkun joined
[01:04] *** jnap left
[01:07] *** hoverboard joined
[01:15] *** Su-Shee left
[01:17] *** Su-Shee joined
[01:23] *** virtualsue left
[01:31] *** BenGoldberg left
[01:41] <skids> r: role A [ :$a = 1, :$b = $a ] { say $a ~ $b }; role B does A[ :a(2) ] { }; class C does B[ ] { }; class D does A[ :a(3) ] { };

[01:41] <camelia> rakudo-moar fd5f8e: OUTPUT¬´22‚ê§32‚ê§¬ª

[01:41] *** lvfjf left
[01:41] <camelia> ..rakudo-parrot fd5f8e: OUTPUT¬´22‚ê§33‚ê§¬ª

[01:41] <camelia> ..rakudo-jvm fd5f8e: OUTPUT¬´Unhandled exception: Failed to load config.properties‚ê§  in  (gen/jvm/stage2/NQPHLL.nqp:8)‚ê§  in  (gen/jvm/stage2/NQPHLL.nqp:8)‚ê§  in  (gen/jvm/stage2/NQPHLL.nqp)‚ê§  in  (src/vm/jvm/ModuleLoader.nqp:78)‚ê§  in load_module (src/vm/jvm/ModuleLoader.nqp:60‚Ä¶¬ª

[01:42] *** lvfjf joined
[01:46] *** Mouq left
[01:48] *** klapperl left
[01:50] *** klapperl joined
[01:51] *** rurban joined
[01:57] *** rurban left
[02:00] *** jnap joined
[02:03] *** FROGGS_ left
[02:05] *** jnap left
[02:12] * grondilu wrote http://rosettacode.org/wiki/Window_creation/X11#Perl_6

[02:14] *** xenoterracide joined
[02:16] *** rurban joined
[02:16] *** rurban left
[02:16] *** FROGGS_ joined
[02:20] *** donaldh left
[02:24] *** donaldh joined
[02:26] *** hoverboard left
[02:30] *** hoverboard joined
[02:33] *** btyler left
[02:35] *** araujo left
[02:46] *** btyler joined
[02:47] *** rurban joined
[02:49] *** rurban1 joined
[02:51] *** rurban left
[02:54] *** rurban1 left
[02:56] <colomon> wow, installing DateTime::TimeZone on JVM incredibly slow?

[03:01] *** jnap joined
[03:04] *** kaare_ joined
[03:06] *** jnap left
[03:15] *** REPLeffect left
[03:15] *** xenoterracide left
[03:18] *** anaeem1 left
[03:18] *** xenoterracide joined
[03:25] *** lvfjf left
[03:25] *** Alula left
[03:25] *** Mouq joined
[03:30] *** Mouq left
[03:36] *** Alula joined
[03:36] *** lvfjf joined
[03:39] *** REPLeffect joined
[03:41] *** xenoterracide left
[03:54] *** dayangkun left
[03:55] *** cibs joined
[03:56] *** hoverboard left
[04:00] *** lvfjf left
[04:00] *** lvfjf joined
[04:02] *** jnap joined
[04:03] *** lvfjf left
[04:06] *** jnap left
[04:07] *** dayangkun joined
[04:08] *** hoelzro left
[04:10] *** hoelzro joined
[04:12] *** neuronaut is now known as physixer

[04:13] *** physixer left
[04:15] *** btyler left
[04:18] *** kaare_ left
[04:25] *** denis_boyun_ joined
[04:28] *** Alina-malina left
[04:31] *** denis_boyun_ left
[04:45] *** hoverboard joined
[04:49] *** kaare_ joined
[04:50] *** SamuraiJack joined
[04:51] *** rurban joined
[04:55] *** xinming_ joined
[04:56] *** rurban left
[04:58] *** xinming left
[05:03] *** jnap joined
[05:03] *** hoverboard left
[05:05] *** hoverboard joined
[05:08] *** jnap left
[05:13] *** Mouq joined
[05:13] *** kaleem joined
[05:18] *** Mouq left
[05:24] *** Alina-malina joined
[05:24] *** anaeem1 joined
[05:30] *** telex left
[05:32] *** telex joined
[05:35] *** grep0r left
[05:39] *** grep0r joined
[05:44] *** hoverboard left
[05:55] *** rurban joined
[05:59] *** SamuraiJack_ joined
[05:59] *** SamuraiJack left
[05:59] *** rurban left
[06:03] *** jnap joined
[06:06] <dalek> ecosystem: 22ad485 | duff++ | META.list:

[06:06] <dalek> ecosystem: Add Git::Wrapper

[06:06] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/22ad4859fd

[06:08] *** jnap left
[06:09] <sergot> morning o/

[06:13] *** FROGGS_ left
[06:19] <masak> morning

[06:21] <thou> m: "ab" ~~ m/(.)(.)/; say $/.keys.perl;

[06:21] <camelia> rakudo-moar fd5f8e: OUTPUT¬´(0, 1, "").list‚ê§¬ª

[06:22] <thou> Patch to fix that, is it good?  ^ https://pastee.org/99sdf

[06:22] <masak> m: "ab" ~~ m/(.)(.)/; say $/<>

[06:22] <camelia> rakudo-moar fd5f8e: OUTPUT¬´ÔΩ¢abÔΩ£‚ê§ 0 => ÔΩ¢aÔΩ£‚ê§ 1 => ÔΩ¢bÔΩ£‚ê§‚ê§¬ª

[06:23] <thou> m: "ab" ~~ m/(.)(.)/; say $/{''}.perl

[06:23] <masak> thou: I guess it's good if it passes the spectests :)

[06:23] <camelia> rakudo-moar fd5f8e: OUTPUT¬´[]‚ê§¬ª

[06:23] <masak> oh, right.

[06:23] <masak> zen slices.

[06:23] <masak> a more interesting question is "what is that empty string key doing there in the first place, so that we have to delete it?"

[06:24] *** darutoko joined
[06:25] <thou> I may have misread things, but it seems to be that %caps{''} := $count is used to track some state during sub capnames()

[06:29] <thou> ... I guess at the very least P5Regex/Actions shold be modified, too ....  I'll run tests, heading to bed now. :-)

[06:30] <masak> thou++

[06:46] *** FROGGS joined
[06:48] <dalek> specs: 37196f6 | (Tim Smith)++ | S05-regex.pod:

[06:48] <dalek> specs: Fix example: $/.keys list keys start from 0, not 1

[06:48] <dalek> specs: review: https://github.com/perl6/specs/commit/37196f6118

[07:00] *** igorsutton joined
[07:01] *** Mouq joined
[07:04] <sergot> m: say [] ~~ Array;

[07:04] <camelia> rakudo-moar fd5f8e: OUTPUT¬´True‚ê§¬ª

[07:04] <sergot> m: say <1 2> ~~ Array;

[07:04] <camelia> rakudo-moar fd5f8e: OUTPUT¬´False‚ê§¬ª

[07:04] <sergot> m: say <> ~~ Array;

[07:04] <camelia> rakudo-moar fd5f8e: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/IaGJXVhR_H‚ê§Unsupported use of <>; in Perl 6 please use lines() to read input, ('') to represent a null string or () to represent an empty list‚ê§at /tmp/IaGJXVhR_H:1‚ê§------> [32msay <[33m‚èè[‚Ä¶¬ª

[07:04] *** jnap joined
[07:05] <sergot> m: say <1 2>.WHAT

[07:05] <camelia> rakudo-moar fd5f8e: OUTPUT¬´(Parcel)‚ê§¬ª

[07:05] <sergot> m: say [] ~~ Parcel;

[07:05] <camelia> rakudo-moar fd5f8e: OUTPUT¬´False‚ê§¬ª

[07:05] <sergot> m: say [].WHAT

[07:05] <camelia> rakudo-moar fd5f8e: OUTPUT¬´(Array)‚ê§¬ª

[07:06] <sergot> m: say (1,2).WHAT

[07:06] <camelia> rakudo-moar fd5f8e: OUTPUT¬´(Parcel)‚ê§¬ª

[07:06] *** Mouq left
[07:09] *** jnap left
[07:19] *** hummeleBop joined
[07:20] <masak> ooh -- the above gives me an idea for a useful library function:

[07:20] <masak> "most relevant common ancestor"

[07:20] <masak> you pass in Array and Parcel, and you get out... whatever most significant type those two have in common.

[07:20] <masak> m: say Array.^mro

[07:21] <camelia> rakudo-moar fd5f8e: OUTPUT¬´(Array) (List) (Iterable) (Cool) (Any) (Mu)‚ê§¬ª

[07:21] <masak> m: say Parcel.^mro

[07:21] <camelia> rakudo-moar fd5f8e: OUTPUT¬´(Parcel) (Cool) (Any) (Mu)‚ê§¬ª

[07:21] <masak> hm. appears to be Cool. in this case.

[07:21] <masak> why aren't Parcels Iterable?

[07:21] <moritz> why is Iterable a class?

[07:22] <masak> :)

[07:23] <masak> is there a way to ask a class "what roles did you (and your ancestors) mix in?"

[07:23] <masak> m: say Array.^roles

[07:23] <camelia> rakudo-moar fd5f8e: OUTPUT¬´(Positional)‚ê§¬ª

[07:23] <masak> oh, gotcha.

[07:24] <masak> m: say Parcel.^roles

[07:24] <camelia> rakudo-moar fd5f8e: OUTPUT¬´(Positional)‚ê§¬ª

[07:24] <masak> well, It Can Be Done.

[07:25] <lizmat> good *, #perl6!

[07:26] <lizmat> .tell Mouq should List.rotor(1,0) not be just { self } ?

[07:26] <yoleaux> lizmat: I'll pass your message to Mouq.

[07:26] <lizmat> .tell Mouq and could you also transmogrify the S17-supply/rotor.t tests to handle List.rotor ?

[07:26] <yoleaux> lizmat: I'll pass your message to Mouq.

[07:28] <masak> mornin', lizmat 

[07:28] <lizmat> masak o/

[07:28] <moritz> \o masak, lizmat, *

[07:28] <masak> ahoy, moritz 

[07:28] <lizmat> moritz o/

[07:29] <lizmat> sergot: are we still on for a pre PLPW perl 6 hackathon?

[07:42] *** bjz left
[07:43] * lizmat is wondering whether this boilerplate "my $cmp = $by.arity == 2 ?? $by !! { $by($^a) cmp $by($^b) }" shouldn't be a function

[07:44] <lizmat> something like:

[07:45] <lizmat> sub BY2 (&by = &infix:<cmp>) { $by.arity == 2 ?? $by !! { $by($^a) cmp $by($^b) }

[07:45] <lizmat> and sigs like min could then be:

[07:45] *** hummeleBop left
[07:46] <lizmat> hmmm... not in the sig :-(

[07:46] <lizmat> grrr

[07:59] <arnsholt> o/

[08:03] <FROGGS> o/

[08:04] *** dmol joined
[08:05] *** jnap joined
[08:06] <masak> lizmat: sounds like a step in the right direction.

[08:07] <masak> lizmat: if I may bikeshed the name, I'd have it as just 'BY', though.

[08:07] <lizmat> :-)

[08:08] <masak> (unless there's a BY1 or BY3 hiding in there somewhere)

[08:08] <lizmat> hehe... will look

[08:09] *** jnap left
[08:11] *** rindolf joined
[08:15] <dalek> specs: 2ac69b9 | (Elizabeth Mattijsen)++ | S17-concurrency.pod:

[08:15] <dalek> specs: Spec Supply.(min|max)

[08:15] <dalek> specs: review: https://github.com/perl6/specs/commit/2ac69b9521

[08:27] <dalek> rakudo/nom: 3613faa | (Elizabeth Mattijsen)++ | / (2 files):

[08:27] <dalek> rakudo/nom: Implement Supply.(min|max) and test them

[08:27] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3613faa1ae

[08:32] *** denis_boyun_ joined
[08:40] *** fhelmberger joined
[08:50] *** zakharyas joined
[08:51] <timotimo> .o(and it should be &by every time, or $by every time, rather than a mixture of both ;) )

[08:53] <sergot> lizmat: what do you mean? :)

[08:56] *** rurban joined
[08:59] <lizmat> timotimo: yes, but the idea was clear, eh?

[08:59] <lizmat> sergot: I was under the impression we would have a Perl6 hackathon before the PLPW in Poznan

[09:00] <lizmat> I didn't hear anything about it anymore, so I started wondering  :-)

[09:00] <lizmat> fwiw, woolfy and me will be in Poznan from Wed evening

[09:01] *** rurban left
[09:01] <woolfy> lizmat means we will drive by car on wednesday, May 14, to Poznan.

[09:02] *** rindolf left
[09:06] *** jnap joined
[09:06] *** denis_boyun_ left
[09:08] <sergot> lizmat: sounds great!

[09:08] <sergot> I'm in ! :)

[09:08] <lizmat> well, we do need a place, right ?

[09:10] *** jnap left
[09:10] <sergot> That's right. I can check if there's a place in company I work in.

[09:11] <sergot> lizmat: how many participants do you expect?

[09:12] <lizmat> good question: I understand jnthn and FROGGS could make it there on the Friday

[09:12] <sergot> I have never heard about this I think, so there are some questions.

[09:12] <lizmat> tadzik hopefully :-)

[09:13] <lizmat> sure..  :)

[09:13] <sergot> How would it look like? How long would it last? and so on.. :)

[09:14] <FROGGS> I'll be there on friday afternoon/evening, yes

[09:14] <lizmat> well, Fri evening would be social time, right?

[09:14] <sergot> Right.

[09:15] <FROGGS> I hope so :o)

[09:15] <lizmat> I was thinking from about 10am forward until social time on Fri ?

[09:15] <lizmat> there would be at least me  :-)

[09:15] <FROGGS> hmmm

[09:16] <FROGGS> sergot: if you can make up a nice place, I try to be there at lunchtime

[09:16] <sergot> I must talk with guys here to find out if we can do this in the venue. :)

[09:17] <sergot> So I'll know in about 2 hrs

[09:17] <lizmat> ok, otherwise: it seems woolfy and me have an apartment in Poznan for the duration

[09:17] <lizmat> so if small enough, we could have it there as well

[09:19] <sergot> Give me a sec. ;)

[09:22] <lizmat> sure, we still have more than a week :-)

[09:27] <grondilu> r: subset foo of int; sub f(foo $x) { say $x }; f my int $ = 43;

[09:27] <camelia> rakudo-{parrot,moar} fd5f8e: OUTPUT¬´Constraint type check failed for parameter '$x'‚ê§  in sub f at /tmp/tmpfile:1‚ê§  in block  at /tmp/tmpfile:1‚ê§‚ê§¬ª

[09:27] <camelia> ..rakudo-jvm fd5f8e: OUTPUT¬´Unhandled exception: Failed to load config.properties‚ê§  in  (gen/jvm/stage2/NQPHLL.nqp:8)‚ê§  in  (gen/jvm/stage2/NQPHLL.nqp:8)‚ê§  in  (gen/jvm/stage2/NQPHLL.nqp)‚ê§  in  (src/vm/jvm/ModuleLoader.nqp:78)‚ê§  in load_module (src/vm/jvm/ModuleLoader.nqp:60‚Ä¶¬ª

[09:27] <grondilu> r: subset foo of Int; sub f(foo $x) { say $x }; f my Int $ = 43;

[09:27] <camelia> rakudo-jvm fd5f8e: OUTPUT¬´Unhandled exception: Failed to load config.properties‚ê§  in  (gen/jvm/stage2/NQPHLL.nqp:8)‚ê§  in  (gen/jvm/stage2/NQPHLL.nqp:8)‚ê§  in  (gen/jvm/stage2/NQPHLL.nqp)‚ê§  in  (src/vm/jvm/ModuleLoader.nqp:78)‚ê§  in load_module (src/vm/jvm/ModuleLoader.nqp:60‚Ä¶¬ª

[09:27] <camelia> ..rakudo-{parrot,moar} fd5f8e: OUTPUT¬´43‚ê§¬ª

[09:28] * lizmat just had an idea:

[09:30] <lizmat> what if camelia would post a gist if the output is not the same for all backaned, and post a link to that gist on the channel?

[09:30] <lizmat> *backends

[09:33] <FROGGS> +1

[09:33] <FROGGS> at least when it hits the '‚Ä¶'

[09:33] <lizmat> yup, good point

[09:41] *** spider-mario joined
[09:42] <timotimo> the gist could then also contain the command in a second gist, and a link back to the clogs perhaps?

[09:43] <FROGGS> +10

[09:43] <FROGGS> :D

[09:43] <FROGGS> and then it will to decide if it was in line with the spec and create a ticket in such a case :P

[09:45] <timotimo> hah

[09:46] <timotimo> maybe we'd want to create our own little site for that whole thing?

[09:46] <timotimo> it could also incorporate these little hashtags raiph suggested

[09:47] <FROGGS> but that sounds bigger, and will not be there soonish - at least that is my expectation

[09:47] <FROGGS> baby steps, aka using gist now would help here I think

[09:47] <lizmat> I was just thinking of ways to make #perl6 more palatable to more people  :-)

[09:53] <timotimo> right.

[09:53] <Woodi> hallo :)

[09:53] <timotimo> lizmat: i heard from multiple people by now that the amount of text is a bit overwhelming to many

[09:53] <Woodi> camelia could paste into #perl6.+ maybe ?

[09:53] <timotimo> and i admit that sometimes when i backlog, i skip over large portions of chatlog if there's mostly evaluations :P

[09:56] <raydiak> .tell tadzik tried through the window again on a recent moar, and it runs playably on my craptop; might have tried jvm last time...figured you'd want to know its not as grim as it seemed

[09:56] <yoleaux> raydiak: I'll pass your message to tadzik.

[10:00] <timotimo> moarvm doesn't yet have a spesh function for the CStruct repr, so maybe at some point it could optimize accesses to CStruct repr'd classes; jnthn said it's "complicated", so i'm probably not the one to do it any time soon :P

[10:02] <FROGGS> timotimo: but it sounds very valuable

[10:02] <FROGGS> because, what is a fast C-lib when you have a bottleneck right before it?

[10:03] <timotimo> well, the question is what exactly is to be gained

[10:03] <FROGGS> and often you can't abstract accesses to structures away

[10:03] <timotimo> my brain is kinda tired still

[10:04] <timotimo> at least the repr op get_attribute can take a hint parameter

[10:04] <timotimo> hm. the try_get_slot does a linear search through the mapping

[10:05] <timotimo> er, no

[10:05] <FROGGS> we need simple but realistic use cases

[10:05] <FROGGS> (and the profiler)

[10:05] <timotimo> it linear-scans to find the right class

[10:05] <timotimo> yes, i suppose we do.

[10:05] <timotimo> the p6bench suite doesn't have any benchmarks incorporating NativeCall.

[10:05] <FROGGS> I was hoping that you would step up and work on the profiler :o)

[10:06] <FROGGS> that's why I highlighted you the other day

[10:06] <timotimo> aye, i saw it and thought about it

[10:06] <timotimo> but it seems kinda scary

[10:07] *** jnap joined
[10:07] <timotimo> i think i need a nap. y'all still have time to do stuff that i can include in the weekly :)

[10:07] *** zakharyas left
[10:08] <FROGGS> ohh, the weekly, yes

[10:09] <FROGGS> timotimo: about labels: done for perl6-m/nqp-m, done for perl6-p/nqp-p, in the works for nqp-j (and afterwards perl6-j)

[10:09] <FROGGS> that is all I have :/

[10:11] *** jnap left
[10:13] <Woodi> tadzik: is it possible to add bullet sprite and wait for collision event(s) somehow ?

[10:16] *** virtualsue joined
[10:23] <FROGGS> If I had more time I'd port Alien::Box2D and Box2D to Perl 6 :/

[10:25] <Woodi> m: my %d = < 1 a 2 b 3 c 4 d 22 p 31 z >;  my $ds = 2; my $de = 4;  say %d{ %d.keys.grep( { $ds <= $_ <= $de } ) };

[10:25] <camelia> rakudo-moar fd5f8e: OUTPUT¬´b c d‚ê§¬ª

[10:25] <Woodi> is maybe some shortcut for that ?

[10:26] <sergot> lizmat: ok, we have a room (for ~ 10 people) near the venue

[10:26] <lizmat> sergot: excellent news!

[10:26] <sergot> it's a room just near plpw's room :)

[10:26] <FROGGS> cool!

[10:27] <Woodi> sergot: Allegro is organizing that event ?

[10:27] <sergot> Woodi: Poznan Perl Mongers is the main organizator, they are just our sponsor and a partner.

[10:27] <Woodi> vnice anyway :)

[10:28] <sergot> But, we can say they organize it too :)

[10:28] <dalek> specs: 082012d | (Elizabeth Mattijsen)++ | S17-concurrency.pod:

[10:28] <dalek> specs: Spec Supply.elems

[10:28] <dalek> specs: review: https://github.com/perl6/specs/commit/082012d644

[10:28] <dalek> roast: b9490bf | (Elizabeth Mattijsen)++ | S17-supply/elems.t:

[10:28] <dalek> roast: Add tests for Supply.elems

[10:28] <dalek> roast: review: https://github.com/perl6/roast/commit/b9490bf4d6

[10:28] *** chenryn joined
[10:30] *** dayangkun left
[10:30] <FROGGS> Woodi: 

[10:30] <FROGGS> m: my %d = < 1 a 2 b 3 c 4 d 22 p 31 z >;  my $ds = 2; my $de = 4;  say %d{ $ds..$de };

[10:30] <camelia> rakudo-moar fd5f8e: OUTPUT¬´b c d‚ê§¬ª

[10:31] <Woodi> hmm, so I builded some additional layer ?

[10:31] <FROGGS> yeah, kind of

[10:32] <Woodi> thou: FROGGS++ :)

[10:32] <FROGGS> :o)

[10:32] <Woodi> grr # layers

[10:34] <dalek> rakudo/nom: aa668e8 | (Elizabeth Mattijsen)++ | docs/ChangeLog:

[10:34] <dalek> rakudo/nom: Mention Supply.(min|max|elems)

[10:34] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/aa668e8f4b

[10:34] <dalek> rakudo/nom: 87a4e64 | (Elizabeth Mattijsen)++ | / (2 files):

[10:34] <dalek> rakudo/nom: Implement Supply.elems, make sure we test it

[10:34] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/87a4e64982

[10:36] <Woodi> hmm, it adds Any for non-existing keys

[10:38] <lizmat> Woodi: try adding :v

[10:38] <lizmat> that should filter out the non-existing keys

[10:39] <Woodi> works ! thanx :)

[10:40] <lizmat> S02:2468

[10:40] <synopsebot> Link: http://perlcabal.org/syn/S02.html#line_2468

[10:42] <Woodi> difference with orginal wordy try is one space so say somehow sees skipped element ?

[10:47] <lizmat> Woodi: I'm not sure I follow you?

[10:48] <lizmat> want to know the keys that are *not* in there ?

[10:50] <woolfy> sergot++ for organising workshop & for hackathon-room    \o/

[10:51] <Woodi> lizmat: example:  http://pastebin.com/Vmb16sm1

[10:52] <Woodi> a bit strange 'say' sees something in place of filtered elements

[10:52] <Woodi> bat let's see if it's a problem or not

[10:53] <lizmat> and with :v ?

[10:53] <lizmat> I'm not sure I understand what the problem is

[10:55] * lizmat admires the design on this cover: http://akamaicovers.oreilly.com/images/9780470414637/lrg.jpg

[10:55] <Woodi> line with space in front is with :v. I imagine %h{ some list/range } :v  returns list of keys so I wonder why say sees invisible elements

[10:56] <Woodi> s/keys/values/

[10:56] <lizmat> aha, so you're saying :v is returning an extra element ?

[10:56] <Woodi> tested only with 'say' so far :)

[10:56] <Woodi> checking

[10:56] <lizmat> could you check .elems on the result and tell  whether that is ok?

[11:01] <Woodi> m: my %d = < 1 a 2 b 4 d 22 p 31 z >;  my $ds = 2; my $de = 4;  say %d{ $ds..$de } :v;

[11:01] <camelia> rakudo-moar fd5f8e: OUTPUT¬´b  d‚ê§¬ª

[11:02] <Woodi> probably filtered elements are returned as undefined

[11:03] *** rindolf joined
[11:04] <masak> is it still a fair description to say that type inference is "planned for Perl 6"? https://en.wikipedia.org/wiki/Type_inference

[11:05] <masak> to what extent does Rakudo already do type inference?

[11:07] <moritz> afaict it does type propagation, and inspecting return types of subroutines that it can resolve at compile time

[11:07] *** jnap joined
[11:07] <masak> oki

[11:07] <moritz> but in Perl 6, type inference is strictly an optimization

[11:07] <moritz> not a language feature

[11:07] <masak> right.

[11:08] <moritz> because you can always just leave out the type completely

[11:08] <masak> so maybe the sentence should simply be removed from that article.

[11:10] <moritz> +1

[11:11] <Woodi> my %d = < 1 a 2 b 4 d 22 p 31 z >;  my $ds = 2; my $de = 4;  for %d{ $ds..$de } :v -> $a { say $a };

[11:11] <Woodi> m: my %d = < 1 a 2 b 4 d 22 p 31 z >;  my $ds = 2; my $de = 4;  for %d{ $ds..$de } :v -> $a { say $a };

[11:11] <camelia> rakudo-moar fd5f8e: OUTPUT¬´b‚ê§d‚ê§¬ª

[11:12] *** jnap left
[11:14] <lizmat> m: my %h = (a => 1); say (%h{<a b c>}:v).elems

[11:14] <camelia> rakudo-moar fd5f8e: OUTPUT¬´1‚ê§¬ª

[11:14] <lizmat> Woodi: not sure what you're seeong

[11:15] <lizmat> m: my %h = (a => 1); for %h{<a b c>}:v { say 1 }

[11:15] <camelia> rakudo-moar fd5f8e: OUTPUT¬´1‚ê§¬ª

[11:16] <Woodi> lizmat: I expected "b d", not "b  d" in example above.

[11:17] <lizmat> "b  d" being a newline between the b and the d ?

[11:17] <lizmat> but you're doing 2 say's

[11:17] <timotimo> does the :v apply if you have a space in front, too?

[11:17] *** virtualsue left
[11:18] <lizmat> yes, afaik

[11:18] <timotimo> m: my %d = < 1 a 2 b 4 d 22 p 31 z >;  my $ds = 2; my $de = 4;  say (%d{ $ds..$de } :v).perl;

[11:18] <camelia> rakudo-moar fd5f8e: OUTPUT¬´("b", (), "d")‚ê§¬ª

[11:18] <timotimo> ah. empty list

[11:18] <lizmat> mmmm

[11:18] <lizmat> intriguing

[11:19] <Woodi> m: my %d = < 1 a 2 b 4 d 22 p 31 z >;  my $ds = 2; my $de = 4;  say %d{ $ds..$de } :v; my @a = %d{ $ds..$de } :v; say @a;

[11:19] <camelia> rakudo-moar fd5f8e: OUTPUT¬´b  d‚ê§b d‚ê§¬ª

[11:20] <lizmat> not sure if that's a bug

[11:20] <lizmat> TimToady ^^^

[11:20] <sergot> m: my %h = <1 a 2 b>; say (%h{5}).perl;

[11:20] <camelia> rakudo-moar fd5f8e: OUTPUT¬´Any‚ê§¬ª

[11:20] <sergot> m: my %h = <1 a 2 b>; say (%h{1..5}).perl;

[11:20] <camelia> rakudo-moar fd5f8e: OUTPUT¬´("a", "b", Any, Any, Any)‚ê§¬ª

[11:21] <sergot> m: my %h = <1 a 2 b>; say (%h{1..5} :v).perl;

[11:21] <camelia> rakudo-moar fd5f8e: OUTPUT¬´("a", "b", (), (), ())‚ê§¬ª

[11:21] <moritz> I guess it should return an explicit Nil in there

[11:21] <moritz> and the Nil shouldn't flatten out to ()

[11:21] <lizmat> hmmm

[11:21] <moritz> known not-up-to-date-spec-ness

[11:21] <lizmat> I seem to recall that () is the only way, as Nil currently doesn't flatten to nothing?

[11:22] <moritz> m: say (Nil, Nil).flat.perl

[11:22] <camelia> rakudo-moar fd5f8e: OUTPUT¬´().list‚ê§¬ª

[11:22] <moritz> it flattens to nothing.

[11:22] <lizmat> hmmm... ok

[11:22] * lizmat goes mucking about in src/core/Any

[11:28] <lizmat> $ perl6 -e 'my %h = (a => 1); say (%h{<a b c>} :v).perl'

[11:28] <lizmat> (1,)

[11:28] <lizmat> that looks better

[11:29] <Woodi> on moar:  (1, (), ())

[11:33] *** rindolf left
[11:33] <lizmat> yes, s/()/Nil/ causes some breakage in spectest

[11:33] <lizmat> investigating

[11:33] <moritz> lizmat: maybe wait for clarification from TimToady++

[11:35] <lizmat> S02:491

[11:35] <synopsebot> Link: http://perlcabal.org/syn/S02.html#line_491

[11:36] <lizmat> so s/()/Nil is not the answer

[11:39] <lizmat> actually, thinking about it, one could argue that "say" is wrong

[11:39] <lizmat> or basic interpolation

[11:39] <Woodi> "Nil value represents the absence of a value where there should be one, so it does not disappear in list context,* but relies on something downstream to catch it* or blow up" - 'for' and array assigment catch it, 'say' not 

[11:39] <lizmat> as .elems and for do the right thing

[11:41] <lizmat> I wonder whether the problem isn't really in "nqp::p6argvmarray()"

[11:42] <Woodi> can :v just skip over nonexistent values, pls ?  ooO(hmm, but how to skip above nothing...)

[11:44] <lizmat> :v does that

[11:45] <lizmat> it's just that if you "say" the result, you still see an artefact of that skipping

[11:45] <lizmat> my %h = (a => 1); say (%h{<a b c>} :v).elems  # only 1 element, not 3!

[11:46] <lizmat> m: my %h = (a => 1); say (%h{<a b c>} :v).elems  # only 1 element, not 3!

[11:46] <camelia> rakudo-moar fd5f8e: OUTPUT¬´1‚ê§¬ª

[11:46] <Woodi> for what such Nil-the-non-exsisted could be usefull ?

[11:46] <lizmat> wel, e.g. with first(), to indicate nothing was found

[11:47] <Woodi> but if nothing is found then result container should be empty :)

[11:47] <moritz> Woodi: depends on the method

[11:47] <moritz> Woodi: grep returns lists; it makes sense to return an empty list there

[11:47] <moritz> Woodi: first returns an item; it doesn't make as much sense there

[11:48] *** colomon left
[11:51] <Woodi> can we introduce some out-of-band communication for 'return' ? something like ANSI control sequences... ;)

[11:52] <Woodi> would be great in C :)

[11:54] *** skids left
[11:56] <sergot> m: say (Any, (), Any, ()).elems;

[11:56] <camelia> rakudo-moar fd5f8e: OUTPUT¬´2‚ê§¬ª

[11:57] *** lvfjf joined
[12:00] *** denis_boyun_ joined
[12:02] *** rurban joined
[12:06] *** colomon joined
[12:06] *** rurban left
[12:08] <timotimo> will the rakudo star release for this month make it out the door in the next ~hour?

[12:08] *** jnap joined
[12:10] <lizmat> afaik jnthn is teaching

[12:10] <lizmat> so ETA would be tonight at the earliest, I would think

[12:11] <Woodi> hmm, extending Bool class could be a pain - it have 0s and 1s hardcoded all over it ;)

[12:11] <timotimo> OK

[12:12] *** jnap left
[12:15] <moritz> you're not supposed to mokey-patch Bool :-)

[12:16] <FROGGS> IIRC someone just needs to upload the tarball and spread the world

[12:20] *** kaleem left
[12:22] *** kaleem joined
[12:23] <dalek> specs: e5079f8 | (Elizabeth Mattijsen)++ | S17-concurrency.pod:

[12:23] <dalek> specs: Spec Supply.minmax

[12:23] <dalek> specs: review: https://github.com/perl6/specs/commit/e5079f8f19

[12:34] *** darutoko left
[12:34] <dalek> rakudo-star-daily: b83ae29 | coke++ | log/ (4 files):

[12:34] <dalek> rakudo-star-daily: today (automated commit)

[12:34] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/b83ae29f9a

[12:34] <dalek> perl6-roast-data: 97c8c48 | coke++ | / (6 files):

[12:34] <dalek> perl6-roast-data: today (automated commit)

[12:34] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/97c8c48766

[12:36] *** xenoterracide joined
[12:37] <sergot> $ perl6 -e 'say ("a" x 1073741824).perl'

[12:37] <sergot> Segmentation fault (core dumped)

[12:37] <sergot> is it known?

[12:37] <FROGGS> not sure

[12:40] <lizmat> do you have 10G of RAM ?

[12:40] <lizmat> ah, 1G

[12:40] <lizmat> but still

[12:41] <masak> failure mode could be better, even if Rakudo ends up not being able to do it.

[12:41] <masak> sergot: feel free to submit a rakudobug.

[12:41] <sergot> Mem:          3858

[12:41] <[Coke]> (parrot broken) yes, still broken

[12:41] <sergot> $ perl6 -e 'say ("a" x 1073741825).perl'

[12:41] <sergot> repeat count > 1073741824 arbitrarily unsupported...

[12:41] <sergot> This is perl6 version 2014.04-169-gbeba99f built on MoarVM version 2014.04-49-gaa7bbef

[12:42] <masak> heh.

[12:42] <timotimo> sergot: we're currently forcing every string to use 32bit for every character

[12:42] <timotimo> on moarvm

[12:42] <sergot> oh

[12:42] * masak .oO( where's Rakudo for your billion-string repetition use case? ) :P

[12:43] * masak .oO( clearly not ready for release! )

[12:43] <[Coke]> in the daily runs, 18b7e2e was the first failing commit.

[12:44] <[Coke]> 72f5b96 was the last one that worked before that.

[12:46] *** colomon left
[12:47] <timotimo> lizmat: see #moarvm; should .roll() return an item instead of a list?

[12:48] *** grondilu left
[12:53] <sergot> m: my @a = (1); my @b = (2); say @a + @b; say @b + @a

[12:53] <camelia> rakudo-moar fd5f8e: OUTPUT¬´2‚ê§2‚ê§¬ª

[12:53] <sergot> Why 2 twice? ;)

[12:53] <masak> sergot: because addition is on numbers.

[12:53] <masak> sergot: not on lists.

[12:53] <timotimo> http://p6weekly.wordpress.com/?p=155&shareadraft=536789c53b3a9 - i hope i'm missing a few things :)

[12:53] <masak> sergot: (we talked about this) :)

[12:53] *** rurban joined
[12:54] <masak> sergot: so infix:<+> numifies first (list length; two 1s), and then adds the numbers.

[12:54] <sergot> masak: I know, but I'm just curious what does this "2" mean.

[12:54] <sergot> Ok, it's clear now

[12:54] <FROGGS> m: my @a = (1); my @b = (2); say @a (+) @b; say @b (+) @a

[12:54] <masak> that the combined length of those lists is 2.

[12:54] <camelia> rakudo-moar fd5f8e: OUTPUT¬´bag(1, 2)‚ê§bag(2, 1)‚ê§¬ª

[12:54] <masak> no matter which order you add them.

[12:55] <sergot> masak: right, I should have known that.

[12:56] <sergot> m: say (1).WHAT;

[12:56] <camelia> rakudo-moar fd5f8e: OUTPUT¬´(Int)‚ê§¬ª

[12:57] <masak> it's because you put them into arrays that they act like that.

[12:57] <masak> m: my @a = 42; say +@a

[12:58] <camelia> rakudo-moar fd5f8e: OUTPUT¬´1‚ê§¬ª

[13:00] <sergot> thanks masak++, it's clear now :)

[13:02] *** igorsutton left
[13:03] *** igorsutton joined
[13:03] <masak> tadzik++ # rakudobrew, which I somehow wasn't really aware of until now

[13:05] *** skids joined
[13:07] *** igorsutton left
[13:09] *** jnap joined
[13:09] <timotimo> did my sharedraft link get noticed? :P

[13:10] *** SamuraiJack_ left
[13:10] * masak notices

[13:10] <lizmat> timotimo: s/especially// ?

[13:11] <masak> timotimo: inconsistent 'jnthn'/'Jnthn' at the start of list items.

[13:11] <timotimo> i suppose that's fair :)

[13:11] <timotimo> fixed both

[13:11] <timotimo> i would like additions to the list, mostly :P

[13:12] <masak> timotimo: the blog post you're referring to is from Feb 2013...

[13:12] <timotimo> oh, the holy grail or utopia one?

[13:12] <lizmat> masak: but we only found out about it this week, no?

[13:12] <masak> I think I've seen it flash by before, actually.

[13:12] <timotimo> wow, i didn't even know

[13:12] <masak> timotimo: I'm not 100% we should mention Parrot failing in a weekly report. maybe after it's been fixed?

[13:13] <timotimo> mhh

[13:13] *** jnap left
[13:14] <lizmat> masak: which might mean we never mention Parrot again ?

[13:14] <timotimo> psst

[13:15] <lizmat> :-)

[13:15] <timotimo> parrot's not dead yet

[13:15] *** xenoterracide left
[13:15] <timotimo> hoelzro: o/

[13:15] <FROGGS> I am looking at that parrot issue right now

[13:15] <timotimo> sounds good

[13:15] *** kaare_ left
[13:18] <masak> FROGGS++

[13:19] *** colomon joined
[13:23] <rurban> which parrot issue?

[13:24] <masak> rakudo doesn't build, apparently.

[13:24] <masak> see http://justrakudoit.wordpress.com/2014/05/05/rakudobrew/

[13:25] <FROGGS> rurban: not parrot's fault

[13:26] <rurban> interesting fail

[13:27] <timotimo> rurban: do you have something for me to report in the weekly? about parrot?

[13:28] <colomon> m: my $mix = (a => 3, b =>2).Mix; say $mix.roll.perl

[13:28] <camelia> rakudo-moar fd5f8e: OUTPUT¬´("a",).list‚ê§¬ª

[13:28] <colomon> m: say (1..6).roll.perl

[13:28] <camelia> rakudo-moar fd5f8e: OUTPUT¬´6‚ê§¬ª

[13:28] <rurban> should have been caught by my rakudo buildbot also, but wasn't

[13:28] <colomon> m: say (1..6).roll(2).perl

[13:28] <camelia> rakudo-moar fd5f8e: OUTPUT¬´(1, 2).list‚ê§¬ª

[13:28] <rurban> timotimo: just that GSOC started with optimizing the handling of GC write barriers 

[13:28] * colomon is happy to declare that a bug

[13:29] <rurban> we expect only minor performance improvements (one less nested function call in every method or vtable call)

[13:30] <colomon> rurban: the rakudo build fail does not appear to be parrot's fault, it just is limited to the parrot version of rakudo

[13:31] <masak> colomon: that does seem pretty inconsistent, yes. either it should be lists/parcels all the time, or items for all .roll calls.

[13:31] <dalek> rakudo/nom: f579a0a | (Elizabeth Mattijsen)++ | src/core/Mixy.pm:

[13:31] <dalek> rakudo/nom: Fix listiness of Mixy.roll, as reported by colomon++

[13:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f579a0a7b3

[13:31] <rurban> colomon: yes, I saw. I still have a rakudo buildbot which should have caught it, but it was dead.

[13:31] <masak> lizmat++

[13:31] <timotimo> rurban: that's part of the optimization for method signatures gsoc project?

[13:31] <rurban> yes

[13:31] <timotimo> i can mention that, thanks!

[13:31] <colomon> lizmat++  \o/

[13:31] <rurban> thank you :)

[13:32] <masak> m: say (1..6).roll(1).perl

[13:32] <camelia> rakudo-moar fd5f8e: OUTPUT¬´1‚ê§¬ª

[13:32] <lizmat> m: (a=>10,b=>20).Mix.roll.perl.say

[13:32] <camelia> rakudo-moar fd5f8e: OUTPUT¬´("b",).list‚ê§¬ª

[13:32] <lizmat> masak ^^^

[13:32] <lizmat> only for Mixes

[13:33] *** igorsutton joined
[13:34] <colomon> lizmat++ # Mixes are perfect for what I'm doing

[13:35] <lizmat> colomon: yw  :-)

[13:37] *** igorsutton left
[13:37] <masak> lizmat: yes, I was just testing the list case when 1 was explicitly passed in.

[13:38] *** btyler joined
[13:39] *** bluescreen10 joined
[13:40] <[Coke]> FROGGS++

[13:41] <dalek> rakudo/nom: b5ee59f | (Elizabeth Mattijsen)++ | / (3 files):

[13:41] <dalek> rakudo/nom: Implement Supply.minmax, test and announce it

[13:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b5ee59f6e7

[13:42] * colomon cannot begin to say how awesome it is to find a bug in your code, realize your code is correct and the compiler is wrong, and have the compiler fixed within the hour.  :)

[13:44] <timotimo> tadzik: got anything i can already link to for your game stuff?

[13:45] *** igorsutton joined
[13:45] <timotimo> colomon: i'd prefer less compiler bugs, tbh :)

[13:46] <timotimo> well ... post publish'd

[13:47] <colomon> timotimo: sure, less compiler bugs is a great goal.

[13:47] <FROGGS> timotimo++

[13:48] <colomon> timotimo++

[13:48] *** rindolf joined
[13:49] <dalek> rakudo/nom: 049c431 | (Elizabeth Mattijsen)++ | src/core/List.pm:

[13:49] <dalek> rakudo/nom: De-TAB

[13:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/049c43103f

[13:49] <lizmat> timotimo++  :-)

[13:53] *** lvfjf_ joined
[13:54] *** lvfjf left
[13:54] *** lvfjf_ left
[13:55] *** lvfjf joined
[13:56] <lizmat> ETA on NLPW videos: not this week :-(

[13:57] <[Coke]> hey, lizmat.

[13:58] <lizmat> [Coke] /o

[13:59] <masak> ooh, there'll be NLPW videos? that's great news!

[13:59] *** rurban left
[14:00] <timotimo> not this week either? :(

[14:01] <[Coke]> /home/coke/sandbox/perl6-roast-data/rakudo.jvm/t/spec/fudge: No such test file 't/spec/S17-supply/max.t'

[14:01] <[Coke]> /home/coke/sandbox/perl6-roast-data/rakudo.jvm/t/spec/fudge: No such test file 't/spec/S17-supply/min.t'

[14:01] <lizmat> the video guy is on holiday :-(

[14:01] *** kaleem left
[14:01] <timotimo> ah, ok

[14:01] *** rurban joined
[14:01] *** guru joined
[14:01] <lizmat> [Coke] have you pulled roast ?

[14:01] *** guru is now known as ajr_

[14:03] <FROGGS> lizmat: mix.t/min.t missing here: https://github.com/perl6/roast/tree/master/S17-supply

[14:03] <FROGGS> err, max.t/min.t

[14:04] <lizmat> oops

[14:05] *** rurban1 joined
[14:05] <dalek> roast: 20fd106 | (Elizabeth Mattijsen)++ | S17-supply/m (3 files):

[14:05] <dalek> roast: Add tests for Supply.(min|max|minmax)

[14:05] <dalek> roast: review: https://github.com/perl6/roast/commit/20fd10639b

[14:05] <lizmat> [Coke] did you pull roast ?  :-)

[14:06] <lizmat> oO( pompedipompedipom )

[14:06] *** daniel-s joined
[14:06] *** rurban left
[14:06] <FROGGS> *g*

[14:06] * lizmat whistles as if nothing happened

[14:06] <FROGGS> lizmat: hmm, weird, as if it was there already :P

[14:06] <lizmat> for some definition of there, that would be true  :-)

[14:07] *** jnap joined
[14:08] *** jnap left
[14:10] *** jnap joined
[14:11] *** daniel-s left
[14:11] <dalek> rakudo/nom: cba80b6 | (Elizabeth Mattijsen)++ | src/core/ (3 files):

[14:11] <dalek> rakudo/nom: More de-TABbing

[14:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cba80b6134

[14:12] <lizmat> cycling&

[14:12] *** LLamaRider joined
[14:14] *** xenoterracide joined
[14:17] *** lvfjf left
[14:20] *** donaldh left
[14:25] *** donaldh joined
[14:26] *** LLamaRider left
[14:28] *** woolfy left
[14:29] *** ribasushi joined
[14:30] <btyler> m: (1, 2, 3)>>++; #LTA error compared to r-j

[14:30] <camelia> rakudo-moar fd5f8e: OUTPUT¬´No such method 'STORE' for invocant of type 'Int'‚ê§  in sub postfix:<++> at src/gen/m-CORE.setting:4556‚ê§  in sub flatmap at src/gen/m-CORE.setting:17410‚ê§  in sub METAOP_HYPER_POSTFIX at src/gen/m-CORE.setting:17313‚ê§  in block  at /tmp/FBEwBDG4Hg:1‚Ä¶¬ª

[14:30] *** woolfy joined
[14:31] <btyler> j: (1, 2, 3)>>++;

[14:31] <camelia> rakudo-jvm fd5f8e: OUTPUT¬´Unhandled exception: Failed to load config.properties‚ê§  in  (gen/jvm/stage2/NQPHLL.nqp:8)‚ê§  in  (gen/jvm/stage2/NQPHLL.nqp:8)‚ê§  in  (gen/jvm/stage2/NQPHLL.nqp)‚ê§  in  (src/vm/jvm/ModuleLoader.nqp:78)‚ê§  in load_module (src/vm/jvm/ModuleLoader.nqp:60‚Ä¶¬ª

[14:31] <btyler> whoops

[14:31] <btyler> well, r-j gave me "can't modify immutable value", which is rather clearer than the r-m message

[14:31] *** darutoko joined
[14:32] <masak> btyler: agreed. maybe submit a rakudobug?

[14:36] <hoelzro> morning #perl6

[14:39] *** anaeem1 left
[14:40] *** dayangkun joined
[14:40] <moritz> masak: there's already a bug report, and failing tests, for that error message

[14:41] <btyler> oh, I should have read the test file further, sorry for the noise

[14:47] *** treehug88 joined
[14:51] *** bluescreen100 joined
[14:52] *** bluescreen__ joined
[14:53] *** jnap1 joined
[14:53] *** bluescreen10 left
[14:54] *** jnap left
[14:55] <masak> oh

[14:55] *** bjz joined
[14:56] *** bluescreen100 left
[14:57] *** bluescreen__ left
[14:59] <dalek> specs: 59480b5 | (Timo Paulssen)++ | S17-concurrency.pod:

[14:59] <dalek> specs: fix formatting of a text paragraph

[14:59] <dalek> specs: review: https://github.com/perl6/specs/commit/59480b5e67

[14:59] <hoelzro> o/ timotimo 

[15:00] <hoelzro> I started up a repo on GH for keeping syntax highlighting/editor support in one place; anyone want a commit bit?

[15:00] * timotimo saw it :)

[15:00] <colomon> hoelzro++

[15:04] <colomon> lolibloggedagain: http://justrakudoit.wordpress.com/2014/05/05/tune-reminder/

[15:08] <timotimo> colomon: isn't a mix with "higher status levels" giving you those tunes more often?

[15:08] <timotimo> oh!

[15:08] <timotimo> there was code that was scrolled off to the side

[15:08] <colomon> timotimo: no, the mix is weighted via 1 / 2 ** $status

[15:08] <colomon> yeah, wordpress is awkward that way

[15:08] <timotimo> 'tis

[15:11] * colomon just realized he still remembers how to play both parts of the Flying Reel, but doesn't remember how many times each is repeated.  :\

[15:12] *** kaare_ joined
[15:16] *** denis_boyun_ left
[15:19] <tadzik> timotimo: not really, it's not quite ready

[15:19] <yoleaux> 09:56Z <raydiak> tadzik: tried through the window again on a recent moar, and it runs playably on my craptop; might have tried jvm last time...figured you'd want to know its not as grim as it seemed

[15:19] *** lvfjf joined
[15:19] <tadzik> raydiak: yay! \o/

[15:19] <tadzik> timotimo: I wanted this one to have menus and all that, but it seems that bugs will stop me :/

[15:20] <dalek> rakudo/nom: fb27b44 | (Tobias Leich)++ | src/Perl6/Optimizer.nqp:

[15:20] <dalek> rakudo/nom: unbust parrot build

[15:20] <dalek> rakudo/nom: 

[15:20] <dalek> rakudo/nom: There are two problems popping up as shown in the comment. Sadly I am

[15:20] <dalek> rakudo/nom: unable to provide a fix so I just unbreak the build by commenting out

[15:20] <dalek> rakudo/nom: the triggering code.

[15:20] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fb27b4402e

[15:20] <tadzik> but I at least want to add explosions, I found some nice sprites :o

[15:20] <tadzik> timotimo: you could link to the prereleased code though

[15:21] *** FROGGS left
[15:22] <timotimo> huh, menus?

[15:23] <timotimo> tadzik: https://github.com/tadzik/rakudobrew/pull/7 pls2mrg?

[15:24] <tadzik> timotimo: merg'd

[15:24] <tadzik> timotimo: yeah, like "Play, Instructions, Exit"

[15:24] <tadzik> and it goes to the menu when you win/lose, instead of closing the game

[15:24] <timotimo> mhm

[15:24] <timotimo> sdl2 has font rendering for us now? :)

[15:24] *** igorsutton left
[15:24] <timotimo> or do we need sdl_ttf for that?

[15:24] <tadzik> if not, then sdl2_ttf surely does

[15:25] <tadzik> I was thinking of just cheating and using pngs... :P

[15:25] *** igorsutton joined
[15:25] <tadzik> then I don't have to include a font and worry about its license

[15:25] <timotimo> hah

[15:25] <timotimo> aye.

[15:26] <tadzik> but yeah, brokens

[15:26] <tadzik> it's probably not brokens on parrot, but parrot inbearably slow

[15:26] <timotimo> sad to hear it

[15:27] <tadzik> so I may just ship it later today with no menus

[15:27] <tadzik> but I want to add them explosions :o

[15:27] <tadzik> I could workaround the bug, it'd just be a little bit annoying

[15:27] <timotimo> if you make sure it's compatible with rakudo star moar ... :P

[15:28] <tadzik> heh

[15:28] <masak> FROGGS++

[15:28] <colomon> Done, parrot-HEAD built  \o/

[15:29] *** igorsutton left
[15:29] <colomon> FROGGS++

[15:31] *** plobsing left
[15:38] *** treehug8_ joined
[15:41] *** treehug88 left
[15:41] * jnthn back

[15:42] *** hoverboard joined
[15:42] <jnthn> Hm, I think that patch shouldn't have commented it out, but instead check if we're on Parrot with an "if" and just done tried the opt.

[15:43] *** treehug88 joined
[15:43] *** bjz left
[15:43] *** Bryanstein left
[15:44] *** treehug8_ left
[15:46] *** fhelmberger left
[15:54] *** dmol left
[16:00] <jnthn> Is there anybody about with a rakudo.org upload key? My laptop does not, apparently, have one. :/

[16:00] <jnthn> If so, http://jnthn.net/tmp/rakudo-star-2014.04.tar.gz is the thing to upload

[16:01] *** FROGGS joined
[16:01] *** dmol joined
[16:02] * [Coke] checks.

[16:03] <FROGGS> jnthn: Perl6::Optimizer is not under fudge's control

[16:03] <FROGGS> so I was unable to #?if that out

[16:05] <[Coke]> jnthn: uploaded, I think.

[16:05] <FROGGS> timotimo / tadzik: about font rendering... at some point you might want to support pango

[16:05] <[Coke]> jnthn++

[16:06] *** BenGoldberg joined
[16:06] <FROGGS> yes, it is available at http://rakudo.org/downloads/star/rakudo-star-2014.04.tar.gz

[16:08] *** rurban1 left
[16:09] <tadzik> [Coke]++

[16:09] <[Coke]> it was pretty much the least I could do! ;)

[16:10] <tadzik> FROGGS: probbly, yeah

[16:13] <FROGGS> damn, we need cpantesters so much!

[16:18] *** Rotwang joined
[16:18] *** orevdiabl left
[16:18] *** revdiablo joined
[16:19] *** dwarring left
[16:21] <TimToady> :v is not supposed to return anything for missing elements; returning either () or Nil would be wrong

[16:22] *** lvfjf left
[16:30] *** anaeem1 joined
[16:32] <PerlJam> m: say $*OUT: "hi";  # Is this supposed to work or am I just mis-remembering something basic?

[16:32] *** ajr_ left
[16:32] <camelia> rakudo-moar fd5f8e: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/bVZcaSG_7L‚ê§Two terms in a row‚ê§at /tmp/bVZcaSG_7L:1‚ê§------> [32msay $*OUT[33m‚èè[31m: "hi";  # Is this supposed to work or a[0m‚ê§    expecting any of:‚ê§        postfix‚ê§        infix sto‚Ä¶¬ª

[16:33] <benabik> m: print $*OUT: ‚Äòhi‚Äô

[16:33] <camelia> rakudo-moar fd5f8e: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/3_3FPsAtkK‚ê§Two terms in a row‚ê§at /tmp/3_3FPsAtkK:1‚ê§------> [32mprint $*OUT[33m‚èè[31m: ‚Äòhi‚Äô[0m‚ê§    expecting any of:‚ê§        postfix‚ê§        infix stopper‚ê§        infix or meta‚Ä¶¬ª

[16:33] *** guru joined
[16:33] <TimToady> rakudo doesn't parse that yet

[16:34] <benabik> Erm, no, that‚Äôs basically the same thing you did.  Whoops.

[16:34] *** guru is now known as Guest8753

[16:34] *** Guest8753 is now known as ajr_

[16:34] <benabik> std: say $*OUT: ‚Äòhi‚Äô

[16:34] <camelia> std ec3d853: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Confused at /tmp/U5EBrXIZGm line 1:‚ê§------> [32msay $*OUT: [33m‚èè[31m‚Äòhi‚Äô[0m‚ê§    expecting any of:‚ê§       feed_separator‚ê§ infix or meta-infix‚ê§    infixed function‚ê§       statement modifier loop‚ê§Parse failed‚ê§FAILED 00:01 ‚Ä¶¬ª

[16:34] <PerlJam> Then I guess I was misremembering that rakudo did parse it.

[16:34] <TimToady> um, those aren't ASCII quotes

[16:35] <TimToady> std: say $*OUT: 'hi'

[16:35] <camelia> std ec3d853: OUTPUT¬´ok 00:01 125m‚ê§¬ª

[16:35] <benabik> Is OS X mucking with my quotes now?

[16:35] <TimToady> something is

[16:36] <benabik> std: 'a' # fixed?

[16:36] <camelia> std ec3d853: OUTPUT¬´ok 00:01 121m‚ê§¬ª

[16:36] <TimToady> we may have to break down and allow fancy quotes if this becomes more of a problem

[16:37] <TimToady> and things like ‚Ä¶ too

[16:37] *** hoverboard left
[16:37] <PerlJam> I have no desire for fancy quotes, but I've occasionally wondered why ‚Ä¶ didn't work.

[16:37] * TimToady blames dwimmy telephones for changing people's expectations

[16:39] <BenGoldberg> m: say qëtestí

[16:39] <camelia> rakudo-moar fd5f8e: OUTPUT¬´test‚ê§¬ª

[16:40] <BenGoldberg> m: $*OUT.say 'hi';

[16:40] <TimToady> it wouldn't be hard to support them, it's just a bit more bloat

[16:40] <camelia> rakudo-moar fb27b4: OUTPUT¬´[31m===[0mSORRY![31m===[0m Error while compiling /tmp/T7w4Xi_D7K‚ê§Two terms in a row‚ê§at /tmp/T7w4Xi_D7K:1‚ê§------> [32m$*OUT.say [33m‚èè[31m'hi';[0m‚ê§    expecting any of:‚ê§        method arguments‚ê§        postfix‚ê§        infix stopper‚ê§‚Ä¶¬ª

[16:41] <PerlJam> btw, is there a way to make !!! a little more dwimmy?  (I always tend to use it like so:  has $.foo = !!! 'foo is required';   # And I'd like to not have to type that message all the time.

[16:41] <PerlJam> BenGoldberg: you need the : or parens

[16:41] <BenGoldberg> m: $*OUT.say: 'hi';

[16:41] <camelia> rakudo-moar fb27b4: OUTPUT¬´hi‚ê§¬ª

[16:41] * vendethiel thinks that the object target specifier use of : is confusing

[16:41] <PerlJam> vendethiel: confusing how?

[16:42] <vendethiel> $*OUT.say: <= the : denotes the call

[16:42] <vendethiel> say $*OUT: the : denotes the receiver

[16:42] <TimToady> std: has $.foo = !!!;

[16:42] <camelia> std ec3d853: OUTPUT¬´Potential difficulties:‚ê§  'has' declaration outside of class at /tmp/7Z1WF23XpE line 1:‚ê§------> [32mhas[33m‚èè[31m $.foo = !!!;[0m‚ê§ok 00:01 123m‚ê§¬ª

[16:42] <TimToady> std is fine with leaving out the message

[16:45] <PerlJam> yeah, but I want which attribute is required to still be output.  fail, fail with warning, and die aren't quite dwimmy enough without some other introspective information.  (I find anyway)

[16:45] *** hoverboard joined
[16:46] <PerlJam> I guess that's more of a compiler issue than a spec issue though

[16:46] <TimToady> it would certainly be possible to make the message dwimmier, it's just a smop

[16:47] <PerlJam> I guess I'll have to look at it when I have some time and see if I can't make it better.

[16:49] *** rurban joined
[16:50] *** rurban1 joined
[16:51] <FROGGS> PerlJam: FYI, it is not a typed exception yet 

[16:52] <FROGGS> so that would be the first step, throw a X::Stub or similar

[16:52] <PerlJam> aye

[16:53] <FROGGS> currently it is just: rakudo/src/Perl6/Actions.nqp:4182:            $past.push($*W.add_string_constant('Stub code executed'));

[16:54] *** rurban left
[16:54] *** ajr_ left
[16:58] <TimToady> that's not the fundamental problem; regardless of type, the exception needs to know what the user was intending to stub, so in this case it needs to know that we're in the initializer of a declarator

[16:59] <TimToady> and that's more of a lexical issue than a dynamic issue

[16:59] *** daemon joined
[16:59] *** Botje joined
[16:59] *** Botje left
[16:59] *** Martin90 joined
[16:59] *** daemon left
[17:00] <Martin90> Hello, what are the changes in perl 6 in comparsion to perl 5 ?

[17:00] <PerlJam> Martin90: lots of things

[17:00] <PerlJam> Martin90: why do you ask? 

[17:01] <Martin90> I am just curious of news in perl 6

[17:01] <jnthn> FROGGS: Yeah, but we can check at runtime... nqp::getcomp('perl6').backend.name

[17:01] <Martin90> is there any sable version ?

[17:01] <Martin90> stable*

[17:01] <hoelzro> Martin90: rakudo is fairly stable

[17:01] <PerlJam> Martin90: what do *you* mean by stable?

[17:01] <hoelzro> and it's just getting better

[17:01] <Martin90> I've heard about it, what it means "rakudo" ?

[17:02] <hoelzro> rakudo is one implementation of Perl 6

[17:02] <PerlJam> Martin90: Rakudo is a Perl 6 compiler

[17:02] <BenGoldberg> perl6 is definited by the specification.

[17:02] <hoelzro> originally targetting Parrot, but it now targets Parrot, the JVM, and MoarVM

[17:02] <hoelzro> MoarVM is the new Perl 6 awesome sauce

[17:02] <Martin90> I've heard that perl 6 is able to produce exacutable code, true ?

[17:03] <hoelzro> better described as a VM that's designed specifically for Perl 6 (more accurately, the Six Model Object system)

[17:03] <BenGoldberg> There are a couple different implementations of that specification.  There's the Rakudo implementation (with three different backends), and the Niecza implementation (which targets .net/mono)

[17:04] <PerlJam> Martin90: Depends on what you mean by 'executable code'  :-)  But, the answer is probably "no" for what you mean.

[17:04] <Martin90> like .exe ?

[17:04] <Martin90> on windows 

[17:04] <tadzik> that even perl 5 can do, if you put the perl compiler in that exe

[17:04] <jnthn> [Coke]: Thanks for uploading!

[17:05] <tadzik> you can do that with every language if you are clever enough

[17:05] <Martin90> true ;)

[17:05] <tadzik> so, did you mean: produce machine code?

[17:05] <Martin90> but the key factor is "speed" of it

[17:05] * BenGoldberg ponders a befunge executable ;)

[17:05] <Martin90> yes machine code

[17:05] <PerlJam> jnthn: Are you putting the release announcement on rakudo.org?  (I was going to point Martin90 at rakudo.org and noticed it's still announcing March's release)

[17:06] <tadzik> no, it cannot produce machine code

[17:06] <Martin90> Where can I find full list of changes from perl 5 to 6 ?

[17:06] <tadzik> and producing machine code wouldn't really make it fast by itself

[17:06] <TimToady> we should have a JIT by end of summer though

[17:06] <hoelzro> I'd say it's unlikely for a Perl 6 implementation to produce machine code in the future, but we may get some very nice JITing in the future

[17:06] <BenGoldberg> Well, if you use Rakudo with the jvm backend, and your computer uses java bytecode as it's native machine code... ;)

[17:06] <hoelzro> Martin90: it's probably best to just read about Perl 6 itself; there are so many changes that a diff might not help

[17:06] <tadzik> dynamic languages tend to fare better when they're dynamically optimized, rather than being compiled upfront

[17:06] <Martin90> Where can I find full list of changes from perl 5 to 6 ?

[17:07] <PerlJam> Martin90: start reading at perl6.org.  Particularly the synopses

[17:07] <tadzik> or the "Perl 5 to 6" articles

[17:07] <PerlJam> Martin90: You could say that everything changed but the spirit

[17:07] <tadzik> they might be a bit dated, but they're a nice introduction

[17:08] <Martin90> perlJam what could you pelase provide linke to this synopis 

[17:08] <Martin90> ?

[17:08] <PerlJam> Martin90: if you'd like to compare perl5 code against perl6 code, checkout rosettacode.org

[17:08] <tadzik> it's on perl6.org

[17:08] <PerlJam> Martin90: what tadzik said

[17:08] <PerlJam> (there's also a link to rosettacode on perl6.org too)

[17:09] * [Coke] looks at http://rosettacode.org/wiki/Sieve_of_Eratosthenes#Perl and thinks that might be a little too many ways to do it.

[17:10] <Martin90> ok thanks ;)

[17:10] <jnthn> PerlJam: Yeah, working on posting that right now :)

[17:10] <Martin90> And the most important quetion 

[17:10] <Martin90> how looks the performance comparsion between perl 5 and 6 ?

[17:11] <PerlJam> Martin90: Depends on which compiler you use and which features you exercise.

[17:11] <TimToady> short answer: not as bad as it used to

[17:11] <Martin90> in favor ?

[17:11] <tadzik> also short answer: not too good :)

[17:12] <PerlJam> Martin90: Currently the Rakudo compiler is slower, but has the ability to get faster :)

[17:12] <tadzik> real world example: a 60fps space invaders with 100 collision checks per frame is basically pushing the limits of rakudo's speed

[17:12] <Martin90> haha, nice answer ;)

[17:13] <Martin90> what is your generaln impression of perl 6 ?

[17:13] * TimToady likes it

[17:13] <Martin90> syntax speed etc

[17:13] <PerlJam> heh

[17:13] <PerlJam> Martin90: if you're looking for speed, you probably don't want to use any of the perl6 compilers yet.

[17:13] <jnthn> Perl 6 always feels very refactorable to me. It's easy to evolve code from one form to another.

[17:14] <PerlJam> Martin90: (You realize that you're talking to the people that use and hack on perl6 all the time, right?)

[17:15] <Martin90>  refactorable  ?

[17:16] <Martin90> PerlJam, rather yes, am I wring ?

[17:16] <Martin90> wrong*

[17:16] <tadzik> I'd say "yes", but it might not be the answer you're looking for :)

[17:16] *** rurban1 left
[17:16] <tadzik> it makes sense to ask us, but we're also slightly biased

[17:17] <tadzik> Martin90: I think, performance or not, that it's worth to try Perl 6 out, even if you won't end up using it

[17:17] <Martin90> heh, what you mean by biased ?

[17:17] <tadzik> it has some nice ideas in it, and will certainly teach you something new about programming in general

[17:17] <PerlJam> Martin90: The best thing to do, if you want to get a feel for Perl 6, is to install a compiler and use it.

[17:17] * TimToady perceives that Martin90 is not a native English speaker

[17:17] <tadzik> biased as in, we put a lot of effort into it ourselves, so our opinion may be a bit off compared to what the outsiders would say

[17:17] <Martin90> PerlJam right ;)

[17:18] <Martin90> but what you feel will perl 6 push perl 5 out in next two years ?

[17:18] <PerlJam> Martin90: Perl 5 isn't going anywhere for a long time.

[17:18] <vendethiel> well, if you want to compare language X and Y, I don't think the best idea is too ask somebody who used both

[17:18] <tadzik> I don't think anything will push Perl 5 out in the next 20 years :)

[17:18] <vendethiel> it's probably better to ask people working on X and people working on Y :-)

[17:18] <jnthn> PerlJam: http://rakudo.org/2014/05/05/announce-rakudo-star-release-2014-04/

[17:19] <BenGoldberg> There is still perl4 code out there, in use today.

[17:19] <PerlJam> jnthn++

[17:19] * BenGoldberg feels sorry for the poor fellows who have to maintain it ;)

[17:19] <PerlJam> Martin90: see rakudo.org  :)

[17:20] <Martin90> do you know who is in developers teem for perl 6 ?

[17:20] <tadzik> we are :o

[17:20] <PerlJam> Martin90: us!

[17:20] <vendethiel> people in this channel :p

[17:20] <Martin90> Lary Wall ? ;)

[17:20] <BenGoldberg> Surprisingly, no

[17:20] <tadzik> he's here somewhere to

[17:20] <PerlJam> no?

[17:20] <vendethiel> Unsurprisingly, no :p

[17:20] <tadzik> too

[17:20] <nwc10> BenGoldberg: your information is now out of date

[17:21] <Martin90> I ve heard Randal Shwartz is there

[17:21] *** Pleiades` left
[17:21] <PerlJam> I've never seen Randal here.

[17:21] <tadzik> M<TAB> says he's not

[17:21] <nwc10> BenGoldberg: but only fairly recently, and not massively wrong either.

[17:21] <BenGoldberg> Ahh

[17:21] <PerlJam> In fact, I've seen him more on #git than #perl even.

[17:22] *** arnsholt joined
[17:23] *** Pleiades` joined
[17:23] <Martin90> right

[17:23] <Martin90> Damin conway works on perl 6 ?

[17:23] <Martin90> any info aut there ;)

[17:24] <Martin90> out*

[17:24] <PerlJam> huh ... looks like merlyn was here once last year (and earlier too)

[17:24] *** ajr joined
[17:24] *** ajr is now known as Guest47120

[17:25] <hoelzro> Martin90: Damian used to be pretty involved, but I think that he has other priorities these days

[17:25] <hoelzro> suffice to say, anyone who's seriously contributing (and a few cheerleaders like myself ;) ) are here

[17:25] <PerlJam> He's still touring and giving Perl 6 presentations

[17:25] <tadzik> I know for a fact that he offers his guidance when you ask him how to interpret the specs he wrote :D

[17:26] <hoelzro> heh

[17:27] <PerlJam> Martin90: anyway, install Rakudo and play with it.  You'll find there's lots of neat stuff in the language.

[17:28] <Martin90> PerlJam, I am going to do that ;)

[17:28] <hoelzro> there's a Perl 6 book online

[17:28] <hoelzro> but it's something like 2 years out of date, I think?

[17:28] <jnthn> Sent the R* announce to the mailing lists too.

[17:28] <tadzik> it is

[17:28] <hoelzro> someone should bring it up to speed

[17:28] <jnthn> If anybody wants to do the Wikipedia updates, feel free...I need dinner :)

[17:29] <TimToady> the main difference between Perl 5 and Perl 6 is that Perl 6 fixes most of the problems mentioned in the 361 RFCs that people came up with in 2000

[17:29] <PerlJam> jnthn++ get some food!  :)

[17:29] <hoelzro> I noticed when I read it long ago that it skimped on some of the more advanced features as well

[17:29] <Martin90> Why is see perl 6 always connected with parrot ?

[17:29] <PerlJam> hoelzro: well volunteered!  ;)

[17:30] <PerlJam> Martin90: because parrot was originally designed as the VM that Perl 6 would use.

[17:30] <jnthn> bbl &

[17:30] <Martin90> I always see perl 6 and parrot in  articles 

[17:30] <hoelzro> PerlJam: I would if I had time =)

[17:30] <hoelzro> I might get a round to it one day

[17:30] <hoelzro> but if I did, I would need a proofreader with better Perl 6 fu than I

[17:30] <PerlJam> hoelzro: woolfy and lizmat have *bunches* of round tuits if you need some :)

[17:30] <Martin90> I see but do we really need V for perl ?

[17:30] <Martin90> VM*

[17:30] <colomon> ==> Fetching IUP

[17:30] <colomon> ==> Building IUP

[17:31] <colomon> No such method 'stage' for invocant of type 'X::Parameter::InvalidType'

[17:31] <colomon>   in sub gen-result-failure at ./smoker:11

[17:31] <colomon>   in sub MAIN at ./smoker:53

[17:31] <hoelzro> I have a tendency to talk big about Perl 6 projects, but never get around to them =/

[17:31] <colomon>   in block  at ./smoker:4

[17:31] <[Coke]> Martin90: spoken like someone who has never hacked on the perl 5 core! ;)

[17:31] <colomon> Both parrot and jvm smoke tests die there ATM.

[17:31] <TimToady> Martin90: for a long time people treated them as synonymous, but parrot evolved into a VM for many languages, and Perl 6 evolved into a langauge for many VMs, so the visions diverged

[17:31] <[Coke]> going forward, you're more like to see rakudo tied to moarvm, not parrot. (though it will continue to target parrot for the foreseable future)

[17:32] <Martin90> Coke, yo uare right in some way ;) Why you are poke in pler core ;)

[17:33] <PerlJam> hoelzro: yeah, I know the feeling.  There's always lots to do, it's hard to do them all.

[17:33] <Martin90> TimToady, hanks ;)

[17:33] <Martin90> thanks

[17:33] <PerlJam> hoelzro: though, last night I did something I'd been meaning to do, I got started on https://github.com/perlpilot/p6-Git-Wrapper

[17:34] <hoelzro> oh, nice!

[17:34] <hoelzro> I started on the perl6-syntax repo myself =)

[17:34] <PerlJam> it's not nice yet, but it's workable for simple needs.

[17:34] <hoelzro> so I'm finally getting around to some Perl 6-y things

[17:34] *** Guest47120 is now known as ajr_

[17:35] *** Martin90 left
[17:36] *** rurban joined
[17:37] <FROGGS> colomon: dunno if this open PR would help: https://github.com/mrhdias/perl6-IUP/pulls

[17:38] <colomon> FROGGS: I dunno, it failed gracefully up until sometime this month....

[17:38] <retupmoca> I was looking at making IUP use LibraryMake a couple weeks back, but I'm not sure how to install the C library on my system :/

[17:44] <PerlJam> What's the little S11 crossed out on the panda icons on modules.perl6.org supposed to signify exactly?

[17:45] <benabik> That they don't conform to S11?

[17:45] <PerlJam> yeah, but what does that *mean*?

[17:46] <PerlJam> or, how is conformance determined?

[17:46] <retupmoca> whether the META.info has a 'provides' line

[17:49] <PerlJam> so ... S11 doesn't contain the word "provides" and S22 says that it must be META6.json and that "

[17:49] <PerlJam> "provides" is optional

[17:50] <FROGGS> PerlJam: yes, there was a redesign in March, and we need to catch up

[17:51] <PerlJam> oh, that would explain my confusion.   I hadn't really noticed the S11 designations before, so I assumed they were part of the "redesign"

[17:51] <FROGGS> we're are currently working on the cpan.org indexer, and when that is in place, the S11 icon thingy will change anyway

[17:51] <FROGGS> no, the icon you see was introduced in december

[17:52] <PerlJam> panda has made me look at modules.perl6.org less than I once did  :-)

[17:52] <PerlJam> panda++

[17:52] *** Alula left
[17:54] *** kaleem joined
[17:58] *** btyler left
[17:59] *** treehug8_ joined
[18:00] <masak> aww, missed a Martin90! :)

[18:00] <masak> others++ # good job

[18:01] <TimToady> obviously he loves Perl if he has a .pl extension on his network address :)

[18:01] *** treehug88 left
[18:02] <FROGGS> yeah, I wanted to mention the PLPW but then he vanished :/

[18:02] *** kaleem left
[18:02] <FROGGS> because there is much Perl 6 going on

[18:04] <vendethiel> there is :-)

[18:05] *** treehug88 joined
[18:05] *** Alula joined
[18:05] *** btyler joined
[18:06] *** treehug8_ left
[18:07] <TimToady> some people think there's too much going on, but that's a nice problem to have

[18:07] <vendethiel> TimToady: as a beginner/newcomer, that doesn't seem like a problem ! :)

[18:09] *** Sqirrel joined
[18:20] <timotimo> when will we remove "non-blocking I/O" from the "not quite there yet" feature list in the rakudo star announcements?

[18:22] * tadzik is now officially going to yapc::eu

[18:28] <colomon> tadzik++

[18:30] *** araujo joined
[18:30] *** araujo left
[18:30] *** araujo joined
[18:32] <FROGGS> damn, we still have that nqp-m Win32 x86 problem... "MAST::Local index out of range"

[18:33] <nwc10> when/how does that happen?

[18:33] <nwc10> the error message could do with improving - I feel that it should also show the two values used in the comparison that causes the failure

[18:34] <nwc10> and also, the two places that currently have that same message should differ

[18:34] <FROGGS> nwc10: Building NQP ...

[18:34] <FROGGS> C:\Perl\bin\perl.exe Configure.pl --prefix=C:\rakudo --backends=moar --make-install

[18:34] <FROGGS> Found C:\rakudo/bin/moar.exe version 2014.04, which is new enough.

[18:34] <FROGGS> Cleaning up ...

[18:34] <FROGGS> Microsoft (R) Program Maintenance Utility, Version 10.00.30319.01

[18:34] <FROGGS> Copyright (C) Microsoft Corporation. Alle Rechte vorbehalten.

[18:34] <FROGGS> Microsoft (R) Program Maintenance Utility, Version 10.00.30319.01

[18:34] <FROGGS> Copyright (C) Microsoft Corporation. Alle Rechte vorbehalten.

[18:34] <FROGGS>         C:\Perl\bin\perl.exe -MExtUtils::Command -e mkpath gen\moar\stage1\gen

[18:34] <FROGGS>         C:\Perl\bin\perl.exe tools\build\gen-cat.pl moar src\how\Archetypes.nqp src\how\RoleToRoleApplier.nqp  src\how\NQPConcreteRoleHOW.nqp src\how\RoleToClassApplier.n

[18:34] <FROGGS> qp  src\how\NQPCurriedRoleHOW.nqp src\how\NQPParametricRoleHOW.nqp  src\how\NQPClassHOW.nqp src\how\NQPNativeHOW.nqp  src\how\NQPAttribute.nqp src\how\NQPModuleHOW.nqp  s

[18:34] <FROGGS> rc\how\EXPORTHOW.nqp > gen\moar\stage1\nqpmo.nqp

[18:34] <FROGGS>         C:\rakudo\bin\moar --libpath=src\vm\moar\stage0 src\vm\moar\stage0\nqp.moarvm --bootstrap --setting=NULL --no-regex-lib --target=mbc  --output=gen\moar\stage1\nqp

[18:34] <dalek> specs: 2cdc917 | (Elizabeth Mattijsen)++ | S17-concurrency.pod:

[18:34] <dalek> specs: Spec Supply.reduce

[18:34] <dalek> specs: review: https://github.com/perl6/specs/commit/2cdc91761e

[18:34] <benabik> ~.~

[18:34] <FROGGS> mo.moarvm gen\moar\stage1\nqpmo.nqp

[18:34] <FROGGS> MAST::Local index out of range

[18:34] <FROGGS>    at gen/moar/stage2/QAST.nqp:4818  (src\vm\moar\stage0/QAST.moarvm:assemble_to_file:19)

[18:34] <FROGGS>  from gen/moar/stage2/NQPHLL.nqp:61  (src\vm\moar\stage0/NQPHLL.moarvm:mbc:61)

[18:34] <FROGGS>  from gen/moar/stage2/NQPHLL.nqp:1327  (src\vm\moar\stage0/NQPHLL.moarvm::79)

[18:34] <FROGGS>  from gen/moar/stage2/NQPHLL.nqp:1315  (src\vm\moar\stage0/NQPHLL.moarvm:compile:164)

[18:34] <FROGGS>  from gen/moar/stage2/NQPHLL.nqp:1073  (src\vm\moar\stage0/NQPHLL.moarvm:eval:53)

[18:34] <nwc10> OK, I don't see it on x86 linux, which is curious

[18:34] <FROGGS>  from gen/moar/stage2/NQPHLL.nqp:1282  (src\vm\moar\stage0/NQPHLL.moarvm:evalfiles:105)

[18:34] <FROGGS>  from gen/moar/stage2/NQPHLL.nqp:1212  (src\vm\moar\stage0/NQPHLL.moarvm:command_eval:292)

[18:34] <FROGGS>  from gen/moar/stage2/NQPHLL.nqp:1161  (src\vm\moar\stage0/NQPHLL.moarvm:command_line:122)

[18:34] <FROGGS>  from gen/moar/stage2/NQP.nqp:3697  (src\vm\moar\stage0\nqp.moarvm:MAIN:18)

[18:34] <FROGGS>  from gen/moar/stage2/NQP.nqp:3692  (src\vm\moar\stage0\nqp.moarvm::335)

[18:34] <nwc10> and presuambly not on jnthn's machine, which is 64 bit?

[18:34] <FROGGS>  from <unknown>:1  (src\vm\moar\stage0\nqp.moarvm::8)

[18:34] <FROGGS>  

[18:34] <FROGGS> damn!

[18:35] <FROGGS> https://gist.github.com/FROGGS/ed7f3e4455c33669f58b

[18:35] <FROGGS> I'm sorry √≥.√≤

[18:35] <FROGGS> I don't see that on my 64bit Win7 either

[18:35] <FROGGS> I just built a rakudo-star msi for parrot backend and wanted to do the same for moar

[18:37] <vendethiel> damn spam

[18:37] *** denis_boyun_ joined
[18:37] <Woodi> heh, I was just compiling moar on debian and wondering... Microsoft (R)... What is going on ??

[18:38] <Woodi> FROGGS: np :)

[18:38] <nwc10> FROGGS: can you fake it by compiling the MoarVM "byte"code on a different system, and just running the tests on Win32?

[18:39] <FROGGS> nwc10: hmmm, good question

[18:41] <FROGGS> I can also try to copy over my moar binary, and use that to build nqp

[18:41] <FROGGS> ... on a x64

[18:48] *** molaf joined
[18:49] <nwc10> FROGGS: hangon, is that the first thing that NQP tries to build?

[18:50] <FROGGS> yes, and that is weird, see:

[18:50] <FROGGS> src\mast\compiler.c:753 MAST::Local index out of range 0 >= 1

[18:50] <FROGGS> it thinks that 0 >= 1

[18:51] *** darutoko left
[18:51] <nwc10> you edited it to show more diagnostics?

[18:51] <FROGGS> yes

[18:51] <FROGGS> DIE(vm, "%s:%d MAST::Local index out of range %d >= %d", __FILE__, __LINE__, l->index, ws->cur_frame->num_locals);

[18:51] <nwc10> did you use the correct format strings?

[18:51] <nwc10> oh, no you didn't

[18:51] <FROGGS> ohh?

[18:51] <nwc10> l->index is MVMint64

[18:51] <FROGGS> %ld then, right?

[18:51] <nwc10> I've been staring at that code most of Sunday. :-)

[18:51] <nwc10> %lld

[18:52] <FROGGS> k

[18:52] <nwc10> actually, %llu

[18:52] <nwc10> and I would add that there is quite some inconsistency about what's 64 bit and what's 32 bit

[18:52] <nwc10> but that's way down in the list of "things to see to"

[18:54] <FROGGS> src\mast\compiler.c:753 MAST::Local index out of range 4294967296 >= 43

[18:54] <FROGGS> :/

[18:54] <nwc10> Oh, I've seen *that* one

[18:55] <nwc10> OK, not quite that one

[18:57] *** dwarring joined
[18:58] <nwc10> I mailed you 2 patches, which probably won't solve it

[18:58] <nwc10> I'm still playing at breaking stuff

[18:58] <FROGGS> cool, trying...

[18:59] <nwc10> if they do fix it, I wonder what broke it and when

[19:06] * [Coke] rages at this SQL that goes exponential if I try to union one.more.thing.

[19:07] <PerlJam> [Coke]: missing index?

[19:07] <nwc10> "it will be fixed in the next version of MySQL" :-)

[19:08] <[Coke]> it's Oracle. I have 3 subqueries defined as "with ..."; not sure there's a place to -put- an index.

[19:09] <[Coke]> cost (via explain plan) when it's zippy is 348; cost when it's evil is only 367. :P

[19:10] <PerlJam> you've discovered oracles' magic constant!

[19:10] <FROGGS> nwc10: it continues!

[19:11] <nwc10> FROGGS: oh, *interesting*

[19:11] <nwc10> so, I wonder what point it broke.

[19:11] *** anaeem1 left
[19:12] <nwc10> Pi takes 12 or so minutes to build MoarVM, and I don't know if it ever worked on ARM, so I don't want to try to bisect

[19:13] <benabik> bisect does require having a known good point.  :-D

[19:13] *** virtualsue joined
[19:13] <PerlJam> nwc10: no cross compiler?

[19:13] <nwc10> so, yes, my question is if anyone had tried to build NQP on MoarVM on Win32 before

[19:14] <nwc10> PerlJam: is MoarVM cross compilable? Who knows

[19:14] <nwc10> also no known good start point

[19:14] <FROGGS> nwc10: that it does not work for windows x86 is a fact for long time now... (long for the lifetime of moarvm at least)

[19:14] <nwc10> 15 isn't *insanely* slow actually. It's the non good point

[19:14] <nwc10> FROGGS: I thought that it was just the Nativecall. It was actually much earlier? The NQP stuff?

[19:15] <nwc10> given that it's taking 8 or so hours for stage mast

[19:15] <nwc10> I'm prepared to wait for the Pi to finish natively

[19:15] <FROGGS> I know that the build was already broken when JimmyZ++ actively worked on implementing the IO ops

[19:15] <nwc10> OK. Interesting

[19:15] <nwc10> did I accidentally fix it for Win32 too?

[19:16] <FROGGS> :o)

[19:16] <FROGGS> I'm in rakudo's state mast now

[19:16] <FROGGS> it build

[19:16] <nwc10> Said patches are arguably ready to go in, but I was going to lob them to the list when I'd stressed them a bit more on x86 and x86_64 linux

[19:16] <nwc10> the Pi is in the NQP tests with unsigned chars

[19:16] <nwc10> (ie no funky flags)

[19:17] <dalek> rakudo/nom: 9995d08 | (Elizabeth Mattijsen)++ | / (3 files):

[19:17] <dalek> rakudo/nom: Implement Supply.reduce, test and announce it

[19:17] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9995d08a6c

[19:17] <dalek> roast: 6b01eb2 | (Elizabeth Mattijsen)++ | S17-supply/reduce.t:

[19:17] <dalek> roast: Add tests for Supply.reduce

[19:17] <dalek> roast: review: https://github.com/perl6/roast/commit/6b01eb29fd

[19:19] *** treehug88 left
[19:19] *** brrt joined
[19:21] <dalek> roast: 91bbf6e | (Elizabeth Mattijsen)++ | S17-supply/reduce.t:

[19:21] <dalek> roast: Make (+) do the coercing

[19:21] <dalek> roast: review: https://github.com/perl6/roast/commit/91bbf6e164

[19:25] *** treehug88 joined
[19:34] *** anaeem1 joined
[19:38] *** molaf_ joined
[19:41] *** molaf left
[19:42] <dalek> rakudo/nom: 709f630 | (Elizabeth Mattijsen)++ | src/core/Any.pm:

[19:42] <dalek> rakudo/nom: Remove () from :v:k:kv:p: hash/array slices

[19:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/709f630bec

[19:42] <lizmat> m: ({a => 1}<a b c>:v).perl.say

[19:42] <camelia> rakudo-moar fb27b4: OUTPUT¬´(1, (), ())‚ê§¬ª

[19:43] <lizmat> $ perl6 -e '({a => 1}<a b c>:v).perl.say'

[19:43] <lizmat> (1,)

[19:44] <lizmat> sergot: ^^^

[19:56] <BenGoldberg> n: ({a => 1}<a b c>:v).perl.say

[19:56] <camelia> niecza v24-109-g48a8de3: OUTPUT¬´Unhandled exception: Excess arguments to KERNEL Hash.postcircumfix:<{ }>, unused named v‚ê§  at <unknown> line 0 (KERNEL Hash.postcircumfix:<{ }> @ 1) ‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 186 (postcircumfix:<{ }> @ 5) ‚ê§  at /tmp/SGN2cpc‚Ä¶¬ª

[19:57] <FROGGS> :/

[19:57] <FROGGS> Unhandled exception: java.lang.StackOverflowError when building Perl6::Action on Win32 x86

[19:59] <lizmat> BenGoldberg: niecza doesn't do array/hash slice adverbs afaik

[19:59] * BenGoldberg realizes that. :)

[20:04] <cognominal__> just did a small pull request : https://github.com/perl6/nqp/pull/168

[20:05] <dalek> nqp: 03349b2 | (St√©phane Payrard)++ | src/QRegex/Cursor.nqp:

[20:05] <dalek> nqp: Fixing --target=parse on nqp

[20:05] <dalek> nqp: 

[20:05] <dalek> nqp: Was working fine on rakudo

[20:05] <dalek> nqp: review: https://github.com/perl6/nqp/commit/03349b24bc

[20:05] <dalek> nqp: 0d764f8 | (Tobias Leich)++ | src/QRegex/Cursor.nqp:

[20:05] <dalek> nqp: Merge pull request #168 from cognominal/master

[20:05] <dalek> nqp: 

[20:05] <dalek> nqp: Fixing --target=parse on nqp

[20:05] <dalek> nqp: review: https://github.com/perl6/nqp/commit/0d764f8e65

[20:05] <FROGGS> cognominal++

[20:05] *** molaf_ left
[20:07] <cognominal__> FROGGS++ # thanks

[20:08] *** kaare_ left
[20:12] <dalek> perl6-roast-data: f894557 | coke++ | / (6 files):

[20:12] <dalek> perl6-roast-data: today (automated commit)

[20:12] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/f894557d0e

[20:13] <[Coke]> growing number of supply failures for jvm & moar.

[20:13] <lizmat> also on moar ?

[20:13] * lizmat looks

[20:14] <[Coke]> https://github.com/coke/perl6-roast-data/blob/master/log/rakudo.jvm_summary.out#L2306

[20:14] <[Coke]> https://github.com/coke/perl6-roast-data/blob/master/log/rakudo.moar_summary.out#L2288

[20:14] <FROGGS> rakudo star release candiates for windows (as msi):

[20:14] <FROGGS> http://froggs.de/perl6/rakudo-star-2014.04-moar.msi    (7.5MB)

[20:14] <FROGGS> http://froggs.de/perl6/rakudo-star-2014.04-parrot.msi (17.3MB)

[20:14] <FROGGS> please test

[20:15] *** BenGoldberg left
[20:15] <lizmat> moar's errors seem to be watch_path frragilness

[20:16] <lizmat> the jvm errors are interesting

[20:16] <FROGGS> ahh, the rakudo@parrot checkout is like 10 hours old

[20:16] <lizmat> j: class A { method a (A:D:) {...} }; A.a

[20:17] <camelia> rakudo-jvm fb27b4: OUTPUT¬´(timeout)¬ª

[20:17] <lizmat> j: class A { method a (A:D:) {...} }; A.new.a

[20:17] <camelia> rakudo-jvm fb27b4: OUTPUT¬´Unhandled exception: Stub code executed‚ê§  in throw (gen/jvm/CORE.setting:11226)‚ê§  in sink (gen/jvm/CORE.setting:12664)‚ê§  in MAIN (gen/jvm/main.nqp:47)‚ê§  in  (gen/jvm/main.nqp:41)‚ê§  in  (gen/jvm/main.nqp)‚ê§‚ê§¬ª

[20:17] <lizmat> j: class A { method a (A:D:) {...} }; A.a

[20:17] <camelia> rakudo-jvm fb27b4: OUTPUT¬´Unhandled exception: Stub code executed‚ê§  in throw (gen/jvm/CORE.setting:11226)‚ê§  in sink (gen/jvm/CORE.setting:12664)‚ê§  in MAIN (gen/jvm/main.nqp:47)‚ê§  in  (gen/jvm/main.nqp:41)‚ê§  in  (gen/jvm/main.nqp)‚ê§‚ê§¬ª

[20:17] <lizmat> m: class A { method a (A:D:) {...} }; A.a

[20:17] <camelia> rakudo-moar fb27b4: OUTPUT¬´Invocant requires an instance, but a type object was passed‚ê§  in method a at /tmp/UtLTPYwwWR:1‚ê§  in block  at /tmp/UtLTPYwwWR:1‚ê§‚ê§¬ª

[20:17] <lizmat> jvm is wrong in this respect

[20:18] <lizmat> ergo: D: doesn't work in signatures on jvm

[20:18] <lizmat> I will mark those tests as "todo" for jvm

[20:18] <benabik> D: indeed.

[20:20] <jnthn> lizmat: Whoa...how on earth did hat not get noticed agaes ago...

[20:20] <lizmat> I have no idea ... :-(

[20:22] *** btyler left
[20:23] <lizmat> seems (TypeName:D:) works

[20:23] <lizmat> but (TypeName:D $self:) does not

[20:23] <moritz> that'd explain it

[20:23] <lizmat> e.g. method do(Supply:D $self: &side_effect) {

[20:23] <jnthn> wat...

[20:24] <lizmat> eh?

[20:24] <lizmat> did I do something wrong ?

[20:24] <moritz> j: say 42

[20:24] <camelia> rakudo-jvm fb27b4: OUTPUT¬´42‚ê§¬ª

[20:25] <moritz> j: class A { method a (A:D:) { 42 }; method b(A:D $self:) { 23 } }; say A.a; say A.b

[20:25] <camelia> rakudo-jvm fb27b4: OUTPUT¬´42‚ê§23‚ê§¬ª

[20:25] <jnthn> lizmat: No, the bug...

[20:25] <moritz> seems to work in neither case

[20:26] <dalek> roast: cd68374 | (David Warring [email@hidden.address] | integration/advent2012-day14.t:

[20:26] <dalek> roast: created RT ticket for fudged test

[20:26] <dalek> roast: review: https://github.com/perl6/roast/commit/cd68374c85

[20:29] *** user23 joined
[20:29] *** user23 left
[20:32] <FROGGS> j: class A { method a (A:D:) { say nqp::isconcrete(self) }; method b(A:D $self:) { say nqp::isconcrete($self) } }; A.a; A.b

[20:32] <camelia> rakudo-jvm fb27b4: OUTPUT¬´0‚ê§0‚ê§¬ª

[20:33] *** Rotwang left
[20:33] <dalek> rakudo/nom: 4cd39b9 | (Tobias Leich)++ | src/Perl6/Optimizer.nqp:

[20:33] <dalek> rakudo/nom: disable specific optimization only on parrot, jnthn++

[20:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4cd39b95ea

[20:33] <jnthn> FROGGS++

[20:45] <dalek> roast: 0128a9b | (Elizabeth Mattijsen)++ | S17-supply/ (19 files):

[20:45] <dalek> roast: Fudge (A:D $self:) signature related for JVM

[20:45] <dalek> roast: review: https://github.com/perl6/roast/commit/0128a9b19c

[20:45] <lizmat> *tests

[20:47] *** btyler joined
[20:52] *** rurban left
[20:52] *** rindolf left
[21:00] *** jnap1 left
[21:00] *** dayangkun left
[21:02] <PerlJam> m: class C { has @.a; }; my $a = C.new( :a<a b c d> ); my $b = $a.clone; $b.a.[2] = "foo"; say $a; say $b

[21:02] <camelia> rakudo-moar 709f63: OUTPUT¬´C.new(a => Array.new("a", "b", "foo", "d"))‚ê§C.new(a => Array.new("a", "b", "foo", "d"))‚ê§¬ª

[21:03] <PerlJam> How do I clone properly so that $a and $b are independent of each other?

[21:03] <jnthn> PerlJam: Write a method clone in your class

[21:04] <jnthn> It's just a method; if the default doesn't work for you, you can do something else.

[21:04] <PerlJam> there's no deepclone or anything?

[21:04] <jnthn> No. That's tricky enough it's for modules, imo.

[21:04] <PerlJam> okie.  Thanks.

[21:04] <jnthn> I think that's been the conclusion when this has come up before, anyway, and it makes sense to me.

[21:05] *** skids left
[21:07] <jnthn> Note in this case you can probably get away with method clone() { nextwith(a => @a.clone) } or so

[21:15] *** eMBee joined
[21:16] *** dayangkun joined
[21:22] *** rurban joined
[21:28] *** rurban left
[21:28] <dalek> rakudo/nom: f374d87 | (Elizabeth Mattijsen)++ | src/core/Supply.pm:

[21:28] <dalek> rakudo/nom: If Supply in on() is live, the resulting is also

[21:28] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f374d871dc

[21:29] <benabik> But what if the Supply in on() is Memorex?

[21:30] *** anaeem1 left
[21:30] <lizmat> only if all Supplies in on()n are Memorex, is the resulting supply a Memorex

[21:30] * lizmat needs eleep

[21:30] <lizmat> so, gnight #perl6!

[21:31] <benabik> But how do you tell the difference?  ;-)

[21:31] <benabik> 'night

[21:40] *** ivanshmakov left
[21:43] *** ivanshmakov joined
[21:44] <woolfy> nwc10++ (and many more ++) for pioneering Perl 6 on Raspberry Pi.  Wow.

[21:46] <timotimo> for when seeing one letter per second on a desktop isn't slow enough for you just yet

[21:53] <hoelzro> so I can't believe this, but I found a task at my job where I can finish faster in Perl 6 than any other language =)

[21:53] <hoelzro> (at least if I could get this thing working right)

[21:53] <hoelzro> can anyone give me a hand on this:

[21:53] <hoelzro> perl6 -n -e 'BEGIN { my $max = 0 }; $max max= .chars.say; END { $max.say }'

[21:54] <hoelzro> I can't figure out how to declare $max once but have it referred to within the loop implied by -n

[21:55] <PerlJam> maybe you want to use a state var instead?

[21:55] <hoelzro> ahhhh

[21:55] <hoelzro> good call

[21:59] <PerlJam> It would be interesting if you could do something like  perl6 -e 'my $max = 0'  -n -e '$max max= .chars; END { $max.say }'

[22:03] <hoelzro> that would be nice

[22:04] <hoelzro> -e is supposed to imply 'no strict' though, rigth?

[22:04] <hoelzro> *right

[22:05] <PerlJam> I think so.  But I doubt it's implemented.

[22:06] <hoelzro> same here

[22:06] *** [particle]1 joined
[22:07] *** [particle] left
[22:13] *** BenGoldberg joined
[22:14] *** skids joined
[22:20] *** treehug88 left
[22:20] <cognominal__> r: [42,666]¬ª.say

[22:20] <camelia> rakudo-jvm 4cd39b: OUTPUT¬´(timeout)¬ª

[22:20] <camelia> ..rakudo-{parrot,moar} 4cd39b: OUTPUT¬´666‚ê§42‚ê§¬ª

[22:21] *** cooper left
[22:22] <thou> hoelzro: state works; so does: ls -1 | perl6 -n -e 'BEGIN { our $max = 0 }; our $max += 1; END { say "Max: $max"; };'

[22:23] <thou> hmm, for that particular case, my works, too: ls -1 | perl6 -n -e 'my $max += 1; END { say "Max: $max"; };'

[22:24] <thou> Not sure why...

[22:24] *** BenGoldberg left
[22:24] *** denis_boyun_ left
[22:25] <timotimo> oh, that's interesting

[22:25] <timotimo> have it give you --target=ast and/or --target=optimize

[22:28] *** BenGoldberg joined
[22:30] *** cooper joined
[22:36] *** rurban joined
[22:38] <segomos>    666

[22:41] *** brrt left
[22:49] *** cooper left
[22:54] *** colomon left
[22:56] *** xenoterracide left
[22:56] <thou> timotimo: Was that (--target=ast) directed at me (re my $max)?

[22:59] <thou> By the way, I'm unable to get j-spectest to complete. I get somewhere into S06-* and almost all tests result in "No subtests run". I have plenty of RAM available on the system, but the java proc is using 2.6G or so RAM, maybe it's got some leak and hits a resource limit?

[23:00] *** spider-mario left
[23:00] *** cooper joined
[23:00] <thou> Anyone else have that? I'm on OS X 10.9.2, java 1.7.0_55 64-bit

[23:09] *** colomon joined
[23:21] *** gfldex left
[23:28] *** xenoterracide joined
[23:34] *** telex left
[23:36] *** telex joined
[23:39] *** dmol left
[23:39] *** skids left
[23:41] <colomon> Cannot add breakpoint to unknown file 'Mu.pm'

[23:41] <colomon> darn

[23:47] *** rurban left
[23:48] *** xenoterracide left
[23:50] *** gfldex joined
[23:57] *** skids joined
[23:58] *** xragnar_ joined
[23:58] *** xragnar is now known as Guest12708

[23:58] *** Guest12708 left
[23:58] *** xragnar_ is now known as xragnar

