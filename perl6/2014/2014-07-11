[00:01] *** atroxaper left
[00:06] *** thou left
[00:08] *** eternaleye left
[00:10] *** psch left
[00:19] *** BenGoldberg joined
[00:19] *** eternaleye joined
[00:19] *** rn__ joined
[00:33] *** jack_rabbit joined
[00:34] *** eternaleye left
[00:39] *** eternaleye joined
[00:45] *** rn__ left
[00:54] *** kivutar left
[01:00] *** kivutar joined
[01:01] *** thou joined
[01:04] *** xenoterracide__ joined
[01:05] *** thou left
[01:18] *** hoverboard joined
[01:21] *** hoverboard left
[01:27] *** Celelibi left
[01:27] *** Grimnir_ left
[01:27] *** jlaire left
[01:27] *** yoleaux left
[01:27] *** jdv79 left
[01:27] *** ivan`` left
[01:27] *** PZt left
[01:27] *** silug left
[01:27] *** obra_ left
[01:27] *** clkao left
[01:27] *** flussence left
[01:27] *** japhb left
[01:27] *** ribasushi left
[01:27] *** xfix left
[01:27] *** camelia left
[01:27] *** cxreg left
[01:27] *** atrodo left
[01:27] *** sorear left
[01:27] *** timotimo left
[01:27] *** tokuhirom left
[01:27] *** ashleydev left
[01:27] *** pnu left
[01:27] *** eternaleye left
[01:27] *** jack_rabbit left
[01:27] *** c1sung left
[01:27] *** SevenWolf left
[01:27] *** telex left
[01:27] *** xragnar left
[01:27] *** felipe left
[01:27] *** cooper_ left
[01:27] *** mr-foobar left
[01:27] *** arnsholt left
[01:27] *** pecastro left
[01:27] *** mathw left
[01:27] *** sivoais left
[01:27] *** Khisanth left
[01:27] *** ingy left
[01:27] *** sergot left
[01:27] *** Timbus left
[01:27] *** betterworld left
[01:27] *** retupmoca left
[01:27] *** rhr_ left
[01:27] *** PotatoGim left
[01:27] *** mtj left
[01:27] *** mtj_ left
[01:27] *** thilp left
[01:27] *** anocelot left
[01:27] *** PerlJam left
[01:27] *** Alina-malina left
[01:27] *** xinming_ left
[01:27] *** mhasch left
[01:27] *** zengargoyle left
[01:27] *** itz__ left
[01:27] *** atta left
[01:27] *** slavik left
[01:27] *** eiro left
[01:27] *** FOAD left
[01:27] *** FROGGS left
[01:27] *** ggoebel111118 left
[01:27] *** fhelmberger left
[01:27] *** synopsebot left
[01:27] *** [Coke] left
[01:27] *** Maddingue left
[01:27] *** smash left
[01:27] *** haroldwu_ left
[01:27] *** xenoterracide__ left
[01:27] *** jnap left
[01:27] *** Rix left
[01:27] *** SHODAN left
[01:27] *** araujo left
[01:27] *** cognominal left
[01:27] *** simcop2387 left
[01:27] *** dalek left
[01:27] *** woolfy1 left
[01:27] *** yeltzooo left
[01:27] *** breinbaas left
[01:27] *** kst left
[01:27] *** tempire left
[01:27] *** BinGOs left
[01:27] *** mst left
[01:27] *** masak_grr left
[01:27] *** geekosaur left
[01:27] *** [Sno] left
[01:27] *** _slade left
[01:27] *** BooK left
[01:27] *** Grrrr left
[01:27] *** jercos left
[01:27] *** diakopter left
[01:27] *** xiaomiao left
[01:27] *** kivutar left
[01:27] *** mls left
[01:27] *** go|dfish left
[01:27] *** charsbar_______2 left
[01:27] *** daxim left
[01:27] *** sftp left
[01:27] *** salv0 left
[01:27] *** xusia left
[01:27] *** ilbot3 left
[01:27] *** avuserow left
[01:27] *** Tene left
[01:27] *** sunnavy_ left
[01:27] *** mattp_ left
[01:27] *** Alula_ left
[01:27] *** BenGoldberg left
[01:27] *** sjn left
[01:27] *** DarthGandalf left
[01:27] *** moritz left
[01:27] *** Ulti left
[01:27] *** fabio__ left
[01:27] *** rurban left
[01:27] *** mikegrb left
[01:27] *** noganex left
[01:27] *** ponbiki left
[01:27] *** klapperl left
[01:27] *** ivanshmakov left
[01:27] *** lestrrat left
[01:27] *** bowtie left
[01:30] *** ivan`` joined
[01:30] *** PZt joined
[01:30] *** silug joined
[01:30] *** obra_ joined
[01:30] *** clkao joined
[01:30] *** flussence joined
[01:30] *** japhb joined
[01:30] *** ribasushi joined
[01:30] *** xfix joined
[01:30] *** camelia joined
[01:30] *** cxreg joined
[01:30] *** atrodo joined
[01:30] *** sorear joined
[01:30] *** tokuhirom joined
[01:30] *** timotimo joined
[01:30] *** ashleydev joined
[01:30] *** pnu joined
[01:30] *** morgan.freenode.net sets mode: +v camelia

[01:33] *** Gothmog_ left
[01:33] *** kshannon left
[01:38] *** stux joined
[01:47] *** atroxaper joined
[01:53] *** atroxaper left
[01:56] *** rGeoffrey left
[01:58] *** rjbs joined
[01:58] *** Bucciarati joined
[01:58] *** mattp_ joined
[01:58] *** sunnavy_ joined
[01:58] *** Tene joined
[01:58] *** avuserow joined
[01:58] *** ilbot3 joined
[01:58] *** xusia joined
[01:58] *** Alula_ joined
[01:58] *** salv0 joined
[01:58] *** sftp joined
[01:58] *** daxim joined
[01:58] *** charsbar_______2 joined
[01:58] *** mls joined
[01:58] *** go|dfish joined
[01:58] *** kivutar joined
[01:58] *** lee_ joined
[01:58] *** yakudza joined
[01:58] *** gtodd joined
[01:58] *** hugme joined
[01:58] *** Exodist joined
[01:58] *** muraiki joined
[01:58] *** labster joined
[01:58] *** cotto joined
[01:58] *** lizmat joined
[01:58] *** Possum joined
[01:58] *** bowtie joined
[01:58] *** lestrrat joined
[01:58] *** ivanshmakov joined
[01:58] *** ponbiki joined
[01:58] *** noganex joined
[01:58] *** mikegrb joined
[01:58] *** rurban joined
[01:58] *** fabio__ joined
[01:58] *** Ulti joined
[01:58] *** moritz joined
[01:58] *** DarthGandalf joined
[01:58] *** sjn joined
[01:58] *** BenGoldberg joined
[01:58] *** dayangkun joined
[01:58] *** brother joined
[01:58] *** zamolxes joined
[01:58] *** risou_ joined
[01:58] *** epochbell joined
[01:58] *** yogan joined
[01:58] *** ggherdov joined
[01:58] *** bcode joined
[01:58] *** morgan.freenode.net sets mode: +v hugme

[01:58] *** erdic joined
[01:58] *** Rounin joined
[01:58] *** colomon_ joined
[01:58] *** pochi joined
[01:58] *** integral joined
[01:58] *** _sri joined
[01:58] *** huf joined
[01:58] *** haroldwu_ joined
[01:58] *** smash joined
[01:58] *** Maddingue joined
[01:58] *** [Coke] joined
[01:58] *** synopsebot joined
[01:58] *** fhelmberger joined
[01:58] *** ggoebel111118 joined
[01:58] *** FOAD joined
[01:58] *** tempire joined
[01:58] *** nickpatch joined
[01:58] *** amkrankruleuen joined
[01:58] *** Mouq joined
[01:58] *** takesako joined
[01:58] *** kst joined
[01:58] *** breinbaas joined
[01:58] *** yeltzooo joined
[01:58] *** woolfy1 joined
[01:58] *** dalek joined
[01:58] *** simcop2387 joined
[01:58] *** cognominal joined
[01:58] *** araujo joined
[01:58] *** SHODAN joined
[01:58] *** jnap joined
[01:58] *** xenoterracide__ joined
[01:58] *** thilp joined
[01:58] *** anocelot joined
[01:58] *** PerlJam joined
[01:58] *** Alina-malina joined
[01:58] *** xinming_ joined
[01:58] *** mhasch joined
[01:58] *** zengargoyle joined
[01:58] *** itz__ joined
[01:58] *** atta joined
[01:58] *** slavik joined
[01:58] *** revdiablo joined
[01:58] *** eiro joined
[01:58] *** morgan.freenode.net sets mode: +v dalek

[02:03] *** Celelibi joined
[02:03] *** Grimnir_ joined
[02:03] *** jlaire joined
[02:03] *** jdv79 joined
[02:03] *** yoleaux joined
[02:03] *** morgan.freenode.net sets mode: +v yoleaux

[02:03] *** cibs joined
[02:04] *** rGeoffrey joined
[02:04] *** klapperl joined
[02:04] *** Rix joined
[02:04] *** eternaleye joined
[02:04] *** jack_rabbit joined
[02:04] *** c1sung joined
[02:04] *** SevenWolf joined
[02:04] *** telex joined
[02:04] *** jack_rabbit left
[02:04] *** telex left
[02:05] *** telex joined
[02:05] *** jeffreykegler joined
[02:05] *** BinGOs joined
[02:05] *** masak_grr joined
[02:05] *** mst joined
[02:05] *** geekosaur joined
[02:05] *** [Sno] joined
[02:05] *** BooK joined
[02:05] *** Grrrr joined
[02:05] *** jercos joined
[02:05] *** diakopter joined
[02:05] *** nwc10 joined
[02:05] *** jtpalmer_ joined
[02:05] *** isacloud___ joined
[02:05] *** clkaoud joined
[02:05] *** Woodi_ joined
[02:05] *** djanatyn joined
[02:05] *** krunen joined
[02:05] *** vendethiel joined
[02:05] *** segomos joined
[02:05] *** xiaomiao joined
[02:05] *** jnthn joined
[02:05] *** hoelzro joined
[02:05] *** Juerd joined
[02:05] *** Pleiades` joined
[02:05] *** baest joined
[02:06] *** FROGGS joined
[02:06] *** Gothmog_ joined
[02:06] *** xragnar joined
[02:06] *** felipe joined
[02:06] *** cooper_ joined
[02:06] *** mr-foobar joined
[02:08] *** kshannon joined
[02:08] *** arnsholt joined
[02:08] *** pecastro joined
[02:08] *** mathw joined
[02:08] *** sivoais joined
[02:08] *** Khisanth joined
[02:08] *** ingy joined
[02:08] *** sergot joined
[02:08] *** Timbus joined
[02:08] *** betterworld joined
[02:08] *** retupmoca joined
[02:08] *** rhr_ joined
[02:08] *** PotatoGim joined
[02:08] *** mtj joined
[02:08] *** mtj_ joined
[02:08] *** Psyche^ joined
[02:08] *** lue joined
[02:09] *** zamolxes left
[02:09] *** chenryn joined
[02:12] *** jnap left
[02:14] *** telex left
[02:15] *** noganex left
[02:16] *** jeffreykegler left
[02:16] *** telex joined
[02:19] *** Rix left
[02:19] *** Rix joined
[02:20] *** hoverboard joined
[02:20] *** jack_rabbit joined
[02:20] *** noganex joined
[02:21] *** ClarusCogitatio joined
[02:21] *** Akagi201 joined
[02:23] *** zamolxes joined
[02:26] *** BenGoldberg left
[02:44] *** chenryn left
[02:44] *** cooper_ left
[02:47] *** troydm joined
[02:47] *** cooper_ joined
[02:48] *** avar joined
[02:48] *** avar left
[02:48] *** avar joined
[02:48] *** wtw joined
[02:49] *** eMBee joined
[02:50] *** thou joined
[02:55] *** thou left
[03:08] *** chenryn joined
[03:11] *** _slade joined
[03:18] *** chenryn left
[03:18] *** kaare_ joined
[03:23] *** donghongbo joined
[03:24] *** atroxaper joined
[03:27] *** isBEKaml_mobile joined
[03:30] *** chenryn joined
[03:31] *** chenryn left
[03:48] *** fabio__ left
[03:48] *** fabio__ joined
[03:51] *** SamuraiJack_ joined
[04:00] *** donghongbo left
[04:02] *** chenryn joined
[04:02] *** cognominal left
[04:07] <atroxaper> Hello, #perl6 !

[04:07] <yoleaux> 10 Jul 2014 21:09Z <Mouq> atroxaper: Do you expect Pod::SAX to supercede the current Pod::To::HTML? I ask simply because I don't want to be doing work on something else when someone is working on a better solution. Right now my focus with Pod::To::HTML is readibility and encapsulation/thread safety. We should co-ordinate efforts :)

[04:11] *** kaare_ left
[04:11] *** chenryn left
[04:12] *** isBEKaml_mobile left
[04:13] <atroxaper> .tell Mouq Actually I hope my solution would be better than current Pod::To::HTML. I would like you to look at my Pod::SAX and current Pod::SAX::Goes::HTML at https://github.com/atroxaper/Pod-SAX

[04:13] <yoleaux> atroxaper: I'll pass your message to Mouq.

[04:22] *** SamuraiJack_ left
[04:23] *** xenoterracide__ left
[04:26] *** kaleem joined
[04:26] *** estrabd joined
[04:26] *** _slade left
[04:30] *** _slade joined
[04:36] *** kaare_ joined
[04:37] *** gfldex joined
[04:38] *** _slade left
[04:38] *** thou joined
[04:40] *** [Sno] left
[04:43] *** thou left
[04:51] *** kaleem left
[04:53] *** kaleem joined
[05:02] *** atroxaper left
[05:02] *** Artea joined
[05:07] *** chenryn joined
[05:08] *** atroxaper joined
[05:17] *** chenryn left
[05:21] *** SevenWolf left
[05:24] *** dayangkun left
[05:24] *** kaleem left
[05:38] *** anaeem1_ joined
[05:45] *** itz_ joined
[05:55] *** kweetal joined
[06:00] *** SamuraiJack_ joined
[06:01] *** virtualsue joined
[06:04] *** [Sno] joined
[06:05] *** SevenWolf joined
[06:17] *** chenryn joined
[06:22] *** chenryn left
[06:26] *** thou joined
[06:31] *** thou left
[06:32] *** virtualsue left
[06:39] *** denis_boyun joined
[06:42] *** nebuchadnezzar joined
[06:46] *** flight16 joined
[06:47] <sergot> o/

[06:49] *** dayangkun joined
[06:56] *** denis_boyun___ joined
[06:57] *** denis_boyun left
[07:00] <atroxaper> sergot: o/

[07:01] *** chenryn joined
[07:08] *** denis_boyun___ left
[07:10] *** dmol joined
[07:10] *** chenryn left
[07:15] *** cono joined
[07:16] *** cono left
[07:23] <sergot> m: "a".encode('iso-8859-1');

[07:23] <camelia> rakudo-moar 2c957f: ( no output )

[07:23] <sergot> m: "a".encode('iso-8859-2');

[07:23] <camelia> rakudo-moar 2c957f: OUTPUT«Unknown string encoding: 'iso-8859-2'␤  in method encode at src/gen/m-CORE.setting:6528␤  in block  at /tmp/5p7E_sqsej:1␤␤»

[07:24] <sergot> Why do we not have iso-8859-2? :)

[07:25] *** zakharyas joined
[07:25] *** hoverboard left
[07:28] *** Alina-malina left
[07:30] *** Alina-malina joined
[07:31] *** itz_ left
[07:36] *** virtualsue joined
[07:41] *** robinsmidsrod joined
[07:41] *** chenryn joined
[07:43] *** pdcawley joined
[07:46] *** chenryn left
[07:47] *** SevenWolf left
[07:52] *** teodozjan joined
[07:53] *** chenryn joined
[07:54] *** pecastro left
[08:04] *** jack_rabbit left
[08:04] *** jack_rabbit joined
[08:07] *** darutoko joined
[08:08] *** SamuraiJack joined
[08:09] *** darutoko- joined
[08:12] *** darutoko left
[08:15] *** thou joined
[08:19] *** thou left
[08:19] *** chenryn left
[08:25] *** kivutar left
[08:26] *** igorsutton_ joined
[08:30] *** l30n1du5 joined
[08:30] *** l30n1du5 left
[08:30] *** l30n1du5 joined
[08:30] *** l30n1du5 left
[08:30] *** l30n1du5 joined
[08:30] *** l30n1du5 left
[08:31] *** l30n1du5 joined
[08:31] <zengargoyle> #perl6 should start taking on http://www.reddit.com/r/dailyprogrammer/ challenges...

[08:32] *** spider-mario joined
[08:33] *** virtualsue left
[08:36] *** darutoko joined
[08:36] *** dakkar joined
[08:38] *** SamuraiJack left
[08:39] *** darutoko- left
[08:42] *** dmol left
[08:45] *** teodozjan left
[08:45] *** teodozjan joined
[08:45] *** l30n1du5 left
[09:00] *** pecastro joined
[09:01] *** Alina-malina left
[09:02] *** Alina-malina joined
[09:09] <masak_grr> good antenoon, #perl6

[09:09] *** masak_grr is now known as masak

[09:09] *** masak is now known as Guest29091

[09:10] *** Guest29091 is now known as masak_grr

[09:10] *** broquaint joined
[09:10] <atroxaper> masak_grr: hello!

[09:10] *** chenryn joined
[09:11] <FROGGS> hello Guest29091, welcome to #perl6 :P

[09:12] <masak_grr> thank you. so, when will Perl6 be released?

[09:12] <atroxaper> masak_grr: xDD

[09:12] <nwc10> when it's ready. And not before, in case people get food poisoning.

[09:12] <masak_grr> I mean, when is it good enough so that people like me who just do drive-by questions on a channel and then never show up again would want to use it?

[09:13] <masak_grr> no, I mean, when is it ready for *production*? that rigorously defined term that's the same for everybody and that I obviously don't need to define any further?

[09:13] <masak_grr> when are you going to make an actual release?

[09:16] *** SamuraiJack_ left
[09:17] <jack_rabbit> whenever you deem it stable enough to use in production.

[09:17] <jack_rabbit> I use it sometimes. It's fun.

[09:18] <jack_rabbit> Let your business people do their "risk management and mitigation"

[09:22] *** flight16 left
[09:23] *** virtualsue joined
[09:25] <zengargoyle> a.k.a. "get rid of that crackpot!"

[09:27] <masak_grr> jack_rabbit: nonono, I don't mean a subjective notion of "ready for production". I mean the obvious *objective* notion. you know, when it's ready.

[09:27] *** chenryn left
[09:27] <masak_grr> the point (if it ever comes) where the Perl6 peeps step back and say "OK, we're done. it's ready now" -- and they are *right*, for once.

[09:28] <masak_grr> I've been waiting for 27 years for this. in the meantime, I use Ruby, which is practically Perl 6 anyway.

[09:29] <nwc10> apart from the scoping rules?

[09:30] <masak_grr> Ruby operates under the principle of "least surprise", which means that its scoping rules are, by definition, perfect.

[09:30] *** masak_grr is now known as masak

[09:31] <masak> ok. _grr suffix gone. I'll stop trolling now. ;)

[09:34] <jack_rabbit> I guess I'd defer to nwc10's "when it's ready. And not before, in case people get food poisoning."

[09:34] <masak> (my actual views on the matter are the same as always. there's important work to do, and jnthn++ FROGGS++ timotimo++ moritz++ sergot++ japhb++ colomon++ [Coke]++ lizmat++ woolfy++ others++ for doing it. much remains. when we get macros and slangs in place, we'll have something really nice.)

[09:34] <masak> I'm sure I missed more than I included. TimToady++, for example.

[09:34] <masak> tadzik++

[09:35] <masak> brrt++

[09:35] <atroxaper> If my code has 'say @arr.perl' then all works well. If 'say @arr' or without say, then code 139 on Rukudo Parrot...

[09:36] <nwc10> r: my @arr = <like this>; say @arr

[09:36] <camelia> rakudo-jvm 2c957f: OUTPUT«(timeout)»

[09:36] <camelia> ..rakudo-{parrot,moar} 2c957f: OUTPUT«like this␤»

[09:37] <atroxaper> No. I mean in case of my code)

[09:37] <nwc10> mmm, you've cut it down as far as it will go?

[09:37] <nwc10> r: 1

[09:37] <camelia> rakudo-{parrot,jvm,moar} 2c957f: ( no output )

[09:37] <nwc10> r: say "Hi"

[09:37] <camelia> rakudo-{parrot,jvm,moar} 2c957f: OUTPUT«Hi␤»

[09:37] <nwc10> r: my @arr = <like this>;

[09:37] <camelia> rakudo-{parrot,jvm,moar} 2c957f: ( no output )

[09:38] <nwc10> r: my @arr = <like this>; say @arr

[09:38] <camelia> rakudo-{parrot,jvm,moar} 2c957f: OUTPUT«like this␤»

[09:38] <nwc10> JVM is now warm?

[09:40] <jack_rabbit> :) looks like it.

[09:41] <jack_rabbit> it's amazing how much of a difference a warm VM makes.

[09:47] *** Psyche^_ joined
[09:48] *** mr-foobar left
[09:48] *** mr-foobar joined
[09:51] *** Psyche^ left
[09:53] <lizmat> .oO( happiness is a warm VM )

[09:56] <jack_rabbit> :)

[09:58] *** atroxaper left
[10:03] *** thou joined
[10:04] *** igorsutton_ left
[10:07] *** thou left
[10:10] *** xinming joined
[10:11] <dalek> rakudo/nom: 8a0a8f9 | (Elizabeth Mattijsen)++ | src/core/Supply.pm:

[10:11] <dalek> rakudo/nom: Seems removing the paused functionality regresses

[10:11] <dalek> rakudo/nom: 

[10:11] <dalek> rakudo/nom: Specifically the classify/categorize tests.  Guess I need to fix those first

[10:11] <dalek> rakudo/nom: before removing this functionality.  On the other hand, I don't really see

[10:11] <dalek> rakudo/nom: how I can do that just yet.  So reverting.

[10:11] <dalek> rakudo/nom: 

[10:11] <dalek> rakudo/nom: This reverts commit 592a2edf4c4bf6196a73715382a95999ebeafced.

[10:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8a0a8f99b7

[10:12] *** kivutar joined
[10:12] *** xinming_ left
[10:19] *** jack_rabbit left
[10:21] <zengargoyle> can you get a junction to unjunction? like getting: max 1, 2|3, 2; to be 3 and not any(2,3)

[10:22] * woolfy1 never did anything for Perl 6 other than marketing and some money, I never uploaded a patch or whatever...

[10:22] * woolfy1 wrote a couple of lines of code of Perl 6 Rakudo...  but that was at the NQP-course by jnthn in Frankfurt last year...

[10:23] <woolfy1> masak++ for trolling though

[10:25] <zengargoyle> or turning [1|2, 2] into [1,2],[2,2]

[10:27] <timotimo> zengargoyle: if you want that, you shouldn't be using junctions

[10:28] *** chenryn joined
[10:28] <zengargoyle> was afraid of that. :(  trying to do Ace => 1|11

[10:31] <lizmat> technically, it would be trivial to create a method that would return all the constituent values of a Junction

[10:31] <timotimo> yes

[10:31] <dalek> rakudo/nom: 67ad387 | (Andrew Egeler)++ | src/core/SupplyOperations.pm:

[10:31] <dalek> rakudo/nom: Attempt to fix SupplyOperation wrongness (take 2)

[10:31] <dalek> rakudo/nom: 

[10:31] <dalek> rakudo/nom: Each source_tap now only passes messages on to that one client tap, not

[10:31] <dalek> rakudo/nom: all of them.

[10:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/67ad387425

[10:31] <dalek> rakudo/nom: 87dcd11 | lizmat++ | src/core/SupplyOperations.pm:

[10:31] <dalek> rakudo/nom: Merge pull request #287 from retupmoca/nom

[10:31] <dalek> rakudo/nom: 

[10:31] <timotimo> zengargoyle: what does your use case look like in a more big-picture way?

[10:31] <dalek> rakudo/nom: Attempt to fix SupplyOperation wrongness (take 2)

[10:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/87dcd11386

[10:33] *** chenryn left
[10:33] <zengargoyle> http://www.reddit.com/r/dailyprogrammer/comments/29zut0/772014_challenge_170_easy_blackjack_checker/

[10:33] <zengargoyle> Alice => 1|11, 10

[10:34] <masak> woolfy1: I won't let you undersell your contribution just because it's on the community side of things. woolfy++!

[10:34] *** FROGGS left
[10:34] <zengargoyle> Bob => 3, 6, 7

[10:34] <zengargoyle> max == 21

[10:35] <zengargoyle> blah, blah, blah

[10:35] <zengargoyle> find the max hand <=21, then find hands that have total==max to find winners.

[10:36] *** kaleem joined
[10:37] <timotimo> i don't know if this explanation will help you, but basically passing a junction as a parameter to any sub or method that is restricted Any (or more specific) will cause that sub or method to be called once for each value in the junction and the result values will be collected back into a junction

[10:42] *** dayangkun left
[10:52] *** mr-foobar left
[10:52] *** mr-foobar joined
[10:52] <masak> (and Any is the default for parameters)

[10:56] *** Alina-malina left
[11:00] *** chenryn joined
[11:05] *** chenryn left
[11:09] <timotimo> that's right. except for pointy blocks iirc

[11:09] <timotimo> m: (-> $a { }).signature

[11:09] <camelia> rakudo-moar 2c957f: ( no output )

[11:09] <timotimo> m: (-> $a { }).signature.say

[11:09] <camelia> rakudo-moar 2c957f: OUTPUT«:($a)␤»

[11:09] <timotimo> m: (-> $a { }).signature.perl.say

[11:09] <camelia> rakudo-moar 2c957f: OUTPUT«:($a)␤»

[11:09] <timotimo> m: (-> $a { }).signature.parameters[0].perl.say

[11:09] <camelia> rakudo-moar 2c957f: OUTPUT«No such method 'parameters' for invocant of type 'Signature'␤  in block  at /tmp/SXmZKvtDE0:1␤␤»

[11:09] <timotimo> m: (-> $a { }).signature.arguments[0].perl.say

[11:09] <camelia> rakudo-moar 2c957f: OUTPUT«No such method 'arguments' for invocant of type 'Signature'␤  in block  at /tmp/11_NFrcR92:1␤␤»

[11:10] <timotimo> m: (-> $a { }).signature.^methods.say

[11:10] <camelia> rakudo-moar 2c957f: OUTPUT«<anon> <anon> <anon> <anon> arity count params returns ACCEPTS perl␤»

[11:10] <timotimo> m: (-> $a { }).signature.params[0].perl.say

[11:10] <camelia> rakudo-moar 2c957f: OUTPUT«$a␤»

[11:10] <timotimo> m: (-> $a { }).signature.params[0].^methods.say

[11:10] <camelia> rakudo-moar 2c957f: OUTPUT«<anon> <anon> <anon> <anon> <anon> <anon> <anon> name constraint_list constraints type named named_names positional slurpy optional parcel capture rw copy readonly invocant default type_captures sub_signature ACCEPTS perl␤»

[11:11] <timotimo> m: (-> $a { }).signature.params[0].constraint_list.perl.say

[11:11] <camelia> rakudo-moar 2c957f: OUTPUT«()␤»

[11:11] *** Alina-malina joined
[11:11] <timotimo> m: (-> $a { }).signature.params[0].constraints.perl.say

[11:11] <camelia> rakudo-moar 2c957f: OUTPUT«all()␤»

[11:11] <timotimo> ...

[11:11] <timotimo> how do i even ...

[11:11] <timotimo> m: (-> Any $a { }).signature.perl.say

[11:11] <camelia> rakudo-moar 2c957f: OUTPUT«:(Any $a)␤»

[11:11] <timotimo> m: (-> Mu $a { }).signature.perl.say

[11:12] <camelia> rakudo-moar 2c957f: OUTPUT«:($a)␤»

[11:12] <timotimo> i suppose there we go.

[11:12] <timotimo> m: (-> $a { say "executed" }(1|2))

[11:12] <camelia> rakudo-moar 2c957f: OUTPUT«executed␤»

[11:12] <timotimo> m: (-> Any $a { say "executed" }(1|2))

[11:12] <camelia> rakudo-moar 2c957f: OUTPUT«executed␤executed␤»

[11:12] <timotimo> m: (*.say)(1|2)

[11:12] <camelia> rakudo-moar 2c957f: OUTPUT«any(1, 2)␤»

[11:12] <timotimo> WhateverCode takes Mu, too

[11:13] <timotimo> hm, actually ...

[11:13] <timotimo> m: (* + 5)(1|2).say

[11:13] <camelia> rakudo-moar 2c957f: OUTPUT«any(6, 7)␤»

[11:13] <timotimo> m: (* + 5).signature.say

[11:13] <camelia> rakudo-moar 2c957f: ( no output )

[11:14] <timotimo> m: my Mu &c = (* + 5); &c.signature.say

[11:14] <camelia> rakudo-moar 2c957f: OUTPUT«Type check failed in assignment to '&c'; expected 'Callable[Mu]' but got 'WhateverCode'␤  in block  at /tmp/dLIEGk7q30:1␤␤»

[11:14] <timotimo> m: my &c = (* + 5); &c.signature.say

[11:14] <camelia> rakudo-moar 2c957f: OUTPUT«:($whatevercode_arg_1 is parcel)␤»

[11:14] <timotimo> that's Mu, too

[11:15] *** kaare_ left
[11:16] *** Ven joined
[11:17] <masak> if I want to augment a class and *override* a method, how do I avoid the error message "Package 'X' already has a Method 'y' (did you mean to declare a multi-method?)" ?

[11:17] <Ven> masak: does :P ?

[11:17] <Ven> m: class A { method foo { 1 } }; A does role { method foo { 2 } }; say A.new.foo

[11:17] <timotimo> masak: i think you can put a new proto in

[11:17] <camelia> rakudo-moar 2c957f: OUTPUT«Cannot use 'does' operator with a type object.␤  in sub infix:<does> at src/gen/m-CORE.setting:16985␤  in block  at /tmp/WnesD667Q4:1␤␤»

[11:17] <Ven> :(

[11:18] <zengargoyle> isn't there some sort of 'supercedes' thing?

[11:18] *** virtualsue left
[11:19] <masak> zengargoyle: yes, but that replaces the whole class. I only want to replace a method.

[11:19] <masak> suggestion: 'augment' complaining about this is a bug. (it wasn't always thus, and it was nicer when the error didn't happen)

[11:19] <Ven> you want to monkey patch the class, basically.

[11:19] *** virtualsue joined
[11:19] <masak> Ven: yes, that's what 'augment' and MONKEY_TYPING are for.

[11:19] <Ven> can you not use augment w/o monkey typing ?

[11:19] *** teodozjan_ joined
[11:19] <Ven> I guess

[11:20] <timotimo> i don't think you can - or ought to be allowed to

[11:20] <zengargoyle> can you just wrap the method?

[11:20] <masak> no, you can't.

[11:20] <timotimo> replacing a class in a lexical context is another thing, though

[11:20] <Ven> m: augment Str {} # testing error msg

[11:20] <camelia> rakudo-moar 2c957f: OUTPUT«===SORRY!===␤Type 'Str' is not declared. Did you mean 'str'?␤at /tmp/p4HHtCKZRW:1␤------> augment Str ⏏{} # testing error msg␤Malformed augment␤at /tmp/p4HHtCKZRW:1␤------> augment Str ⏏{}…»

[11:20] <masak> zengargoyle: interesting suggestion -- I'll try.

[11:20] <Ven> oh?

[11:20] <timotimo> oh, whoopsie

[11:21] <timotimo> the parser runs into a fail with Str and assumes the fail was due to Str not existing ...

[11:21] <timotimo> is what i think it did

[11:21] <Ven> m: augment class Str {} # testing error msg

[11:21] <camelia> rakudo-moar 2c957f: OUTPUT«===SORRY!=== Error while compiling /tmp/I_esLQB7U1␤augment not allowed without 'use MONKEY_TYPING'␤at /tmp/I_esLQB7U1:1␤------> augment class Str ⏏{} # testing error msg␤    expecting any of:␤        scoped …»

[11:21] <Ven> timotimo: think so

[11:21] <timotimo> er ... huh?

[11:21] <Ven> huh huh ?

[11:22] <timotimo> why is the error message so different if there's a "class" in the middle?

[11:22] <Ven> because of what you said ?

[11:22] <timotimo> oh?

[11:22] <timotimo> but should it even try to match a <typo_typename> there?

[11:22] <Ven> w/o class the parser fails to parse it and thinks there's no such class, when really it just couldn't parse w/o the class ?

[11:23] <Ven> the "class" (literal, I mean)

[11:23] *** teodozjan left
[11:23] <jnthn> masak: If we supported it, you would put supercede on the method.

[11:23] <yoleaux> 10 Jul 2014 23:38Z <retupmoca> jnthn: I tried to kill the SupplyOperation bug again: https://github.com/rakudo/rakudo/pull/287

[11:23] <timotimo> well, the way this works is there's a token "typo_typename" that matches something that looks like a typename and if it matches suggests things that have similar names

[11:23] <timotimo> it's put after a || that usually has a <typename> on the lhs

[11:23] <jnthn> masak: It's not a bug that it complains about redefinition inside of an augment.

[11:24] <timotimo> jnthn: my suggestion with putting a new proto into the role is wrong, then?

[11:24] <masak> jnthn: I'd be fine with putting supersede (sic) on the method.

[11:24] <jnthn> Well, if I understand what masak wants, it's to augment a class and *replace* a method

[11:25] <masak> *nod*

[11:25] <jnthn> masak: bah, I hate that word because I can never remember how to spell it. :/

[11:25] <masak> it's spelled wrong, period :P

[11:25] <masak> what's that trait that makes a candidate win?

[11:25] <masak> like !important in CSS

[11:25] <jnthn> is default

[11:25] <Ven> is important :P ?

[11:25] <masak> thanks

[11:26] <masak> using that made things work.

[11:26] <Ven> my $masak is important

[11:26] <timotimo> oh? is default? seems useful, i should remember that

[11:26] <masak> but of course using that is also *WRONG*

[11:26] <jnthn> "Supercede has occurred as a spelling variant of supersede since the 17th century, and it is common in current published writing."

[11:26] <masak> I mean, beyond the fact that MONKEY_TYPING and augment is suspect, too.

[11:26] <jnthn> Bah. :)

[11:26] <timotimo> right; because there isn't really a second candidate that you want to have in the candidate list ...

[11:26] <Ven> is it actually supersede or supercede ?

[11:27] <masak> Ven: supersede

[11:27] <timotimo> how does "is default" work, semantically? is it there to have a winner if two candidates have identical signatures?

[11:27] <Ven> There Is More Than One Way To Spell It.

[11:27] <masak> timotimo: something like that

[11:27] <Ven> but what if ... they both are default ?

[11:27] <timotimo> i wish "something like that" would work in programming :P

[11:27] <Ven> m: sub a { 5 }; sub a is default { 6} ; say a;

[11:28] <camelia> rakudo-moar 2c957f: OUTPUT«===SORRY!=== Error while compiling /tmp/Qiqs_MM2Ld␤Redeclaration of routine a␤at /tmp/Qiqs_MM2Ld:1␤------> sub a { 5 }; sub a is default { 6}⏏ ; say a;␤    expecting any of:␤        postfix␤        stateme…»

[11:28] <timotimo> though i suppose that's how we got to PHP ...

[11:28] <masak> timotimo: see S12:1221

[11:28] <synopsebot> Link: http://perlcabal.org/syn/S12.html#line_1221

[11:28] <Ven> m: multi a { 5 }; multi a is default { 6} ; say a;

[11:28] <camelia> rakudo-moar 2c957f: OUTPUT«6␤»

[11:28] <Ven> m: multi a is default { 5 }; multi a is default { 6} ; say a;

[11:28] <camelia> rakudo-moar 2c957f: OUTPUT«Ambiguous call to 'a'; these signatures all match:␤:()␤:()␤  in sub a at /tmp/rn2aZM0_jF:1␤  in block  at /tmp/rn2aZM0_jF:1␤␤»

[11:28] <jnthn> Ven: http://en.wiktionary.org/wiki/supercede has some info on the history of supercede vs supersede

[11:29] <Ven> Should the "is default" be noted in the signature ?

[11:29] <jnthn> No, it's nothing to do with the signature, it's about the sub.

[11:30] <Ven> True.

[11:30] <Ven> the same that a multi isn't seen in the signature

[11:31] <jnthn> Implementation wise, "is default" is handled right at the end of the multi-dispatch logic. It says "oh dear, I have more than one candidate", and before it reports an error it checks if one of them is marked "is default"

[11:31] <Ven> (and only one of them :P)

[11:31] <jnthn> I'm not sure it takes that much care :)

[11:32] <Ven> jnthn: if it didn't, it'd probably just take the first is default variant, which it doesn't

[11:32] <Ven> well, I have absolutely no clue, soo :)

[11:33] <jnthn> oh, it does care :)

[11:33] <jnthn> https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Metamodel/BOOTSTRAP.nqp#L2079

[11:34] <jnthn> heh, well, sort of :)

[11:34] <jnthn> A well-placed "last" in there would probably make it more robust :)

[11:36] <masak> +1

[11:36] <masak> (and a spectest)

[11:44] *** virtualsue left
[11:51] *** thou joined
[11:53] *** mr-foobar left
[11:54] <dalek> ecosystem: e4c678a | masak++ | META.list:

[11:54] <dalek> ecosystem: add Data::Pretty

[11:54] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/e4c678a033

[11:54] <masak> ladies and gentlebots.

[11:54] <masak> I present you with Data::Pretty.

[11:54] <masak> https://github.com/masak/data-pretty

[11:55] *** thou left
[11:55] <masak> by the way, there are two failing tests right now in the module. I don't feel savvy enough to fix them. it's probably not that difficult, but help from someone who knows Rakudo/nqp internals better than I do would be greatly appreciated.

[11:56] * Ven just has been invited to "ladies who code paris"

[11:56] <Ven> I appreciate the sentiment, but ...

[11:56] <masak> :)

[11:56] <Ven> I don't code :x

[11:57] *** mr-foobar joined
[12:00] <masak> Ven: if I may ask, what do you do?

[12:01] *** chenryn joined
[12:01] <masak> pushed v0.0.2 of Data::Pretty, which also handles regexes :)

[12:04] <Ven> masak: I joke around

[12:04] <masak> ah.

[12:04] <masak> sounds like a nice line of work :P

[12:04] <woolfy1> fwoolfy

[12:04] <Ven> but I'd really love to do something instead of coding. Which really shows that, even in my mind, developer is not a nice job to have.

[12:05] <woolfy1> oops

[12:05] <Ven> (or maybe it's just because I don't think very highly of fellows web developers ...)

[12:05] <lizmat> Ven: writing a book, is that coding?

[12:05] *** chenryn left
[12:06] <Ven> lizmat: speaking on IRC, is that philosophing :) ?

[12:07] <lizmat> wishful thinking?

[12:08] <Ven> lizmat: desilusional one, I'd say :P

[12:08] <dalek> roast: 6dfefc4 | (Elizabeth Mattijsen)++ | S22-package-format/local.t:

[12:08] <dalek> roast: Some more CompUnit tests

[12:08] <dalek> roast: review: https://github.com/perl6/roast/commit/6dfefc4da6

[12:08] <dalek> roast: 669ec1f | (Elizabeth Mattijsen)++ | S17-supply/ (2 files):

[12:08] <dalek> roast: Some more S17-supply tests, more to come

[12:08] <dalek> roast: review: https://github.com/perl6/roast/commit/669ec1f235

[12:08] <lizmat> :-(

[12:08] * Ven thinks these words have a pretty nice ring to it, but they're probably barely english

[12:09] <lizmat> franglais will also work here, maybe

[12:10] <teodozjan_> hi, i have a little question about phasers, they are documented that INIT is being executed on runtime but this is true only for one file project. If i have multiple file project ale imported classess are executed during compilation? This ends in funny results if I forget about this

[12:11] <lizmat> teodozjan_: could you supply a test case ?

[12:11] <masak> yes, an example, please?

[12:11] <teodozjan_> the compiling one or general?

[12:12] <jnthn> They are run at module load time, after the module has been compiled, but before the module's mainline has been run

[12:12] <jnthn> and modules are loaded immediately upon a "use" statement

[12:13] <lizmat> cycling&

[12:13] <teodozjan_> https://gist.github.com/teodozjan/97f5322b601f760ccea8

[12:14] *** jnap joined
[12:16] <teodozjan_> even though i added INIT

[12:16] <teodozjan_> https://github.com/teodozjan/lacuna-cookbuk/blob/dd6c68c268b79e4b061ce4847bddf8cb97bd8592/lib/LacunaCookbuk/Model/Empire.pm

[12:17] <[Coke]> masak++ #data::purty

[12:17] <jnthn> teodozjan_: Yes, that's running at the point I'd expect, though I'm a little disappointed the debugger didn't place you inside the INIT phaser...

[12:18] <Ven> .oO( Data::Purr )

[12:18] *** cognominal joined
[12:19] <gtodd> did -->   my %h = { … }  work once upon a time?

[12:20] <gtodd> I did not know it well and so will not be able to miss it  :)

[12:20] <teodozjan_> jnthn: this means that initializing attributes in place is not good practice if it leaves some side effects like creating directory

[12:22] <Timbus> gtodd, it.. did. does it not anymore?

[12:22] <Timbus> m: my %h = { a => 1, b => 2 }; say %h.perl

[12:22] <gtodd> just reading p6weekly.org

[12:22] <camelia> rakudo-moar 87dcd1: OUTPUT«("a" => 1, "b" => 2).hash␤Saw 1 call to deprecated code during execution.␤================================================================================␤%h = itemized hash called at:␤  /tmp/7gjBYxsAc_, line 1␤Please use %h = %(itemized hash) in…»

[12:22] <gtodd> I mean http://p6weekly.wordpress.com/

[12:22] <Timbus> ooo

[12:23] <jnthn> The problem was that my @a = [1,2,3] clearly treats the array on the LHS as an item, giving an array of array... And { ... } flattening away was rather inconsistent with that.

[12:24] <[Coke]> rakudo has < 900 fudges that are not "RT, NYI, unspecced". whee. 

[12:24] <Timbus> yeah i noticed that a week or so ago, because i thought @a = [] was valid

[12:24] <Timbus> then when i was corrected, the %h = {} thing was a bit odd.

[12:24] <jnthn> Well, it is valid, it just doesn't mean @a = () :)

[12:25] <Timbus> i'd kinda prefer if it was alloweed. is there any reason @a = [] behaves the way it does? too much special casing?

[12:25] <gtodd> in pumpkin perl  one has to learn about %hash = ( 'thing1' => '1' ,  'thing2' => '2') versus %hash = { 'thing1' => '1' ,  'thing2' => '2'}  :-)

[12:25] <gtodd> my %h = { … }   would've scared me if I had known ...

[12:26] <Timbus> it only seems scary from a perl 5 standpoint, imo

[12:27] <gtodd> @a = []   is an AoA with one element? 

[12:27] <jnthn> Timbus: Because [...] and {...} should simply never flatten in an assignment.

[12:27] <jnthn> gtodd: yes

[12:27] <gtodd> %h = { }  is a hash with errmm .... ok stop now :-)

[12:28] *** chenryn joined
[12:29] <Ven> 2,9s/^#/ <- I can see why people like vim, tbh.

[12:29] <jnthn> teodozjan_: Having modules do side-effects merely by loading them is probably best avoided in general, yes. I'd much rather a design where the top level instructs the module "do X"...

[12:30] <Ven> [Coke]: oh, really ? That's great :)

[12:30] <Ven> m: my @a = [1, 2]; say @a.perl;

[12:30] <camelia> rakudo-moar 87dcd1: OUTPUT«Array.new([1, 2])␤»

[12:31] <teodozjan_> jnthn: Maybe I spend too much time in java but I didn't expect that compiler will execute method in attribute initilizer during compilation :)

[12:31] <Timbus> hm. i don't see it as flattening when you are assigning it. i guess the plot thickens when you are assigning to elements within other elements. idk

[12:32] <[Coke]> m: subset MyInt of Int where True; my MyInt $x = 5; $x = Nil;  say $x.WHAT;

[12:32] <camelia> rakudo-moar 87dcd1: OUTPUT«(MyInt)␤»

[12:32] <[Coke]> There is a test that checking that $x === Int there.

[12:33] <[Coke]> I could see ~~ Int...

[12:34] <teodozjan_> jnthn: especially that this didn't cause cannot invoke null object on parrot but on moar smells somewhat related

[12:34] <jnthn> [Coke]: Yes, that test seems very dubious to me.

[12:34] <gtodd> " < 900 fudges "  wow ... they are disappearing at a faster rate?

[12:34] <jnthn> I'd expect it to hold MyInt. It would be crazy for $x to hold Int there, because an Int type object is never true.

[12:35] <jnthn> So it'd mean the variable holding something that doesn't meet the type constraint on it...

[12:35] <jnthn> Should be === MyInt I guess.

[12:37] <timotimo> jnthn: would we be putting a spesh function pointer into MVMContainerSpec that would work like the speshes for REPRs?

[12:37] <timotimo> like, emit a sp_trivialdecont operation that simply accesses a pointer at an offset or something like that?

[12:38] <timotimo> oh, this ought to have been #moarvm

[12:38] *** kaare_ joined
[12:39] *** guru joined
[12:39] *** guru is now known as ajr_

[12:40] <jnthn> teodozjan_: Module load time - and thus running the body of the module - is triggered the first time it's used. It does allow various powerful things, but yes, it'll be a surprise if you have a strict compile-time/runtime separation view of the world, as one has in Java.

[12:41] *** sftp_ joined
[12:43] <teodozjan_> jnthn: After a month shootin myslef in foot I start understanding that :) but anyway parrot takes it totally different than moar 

[12:43] *** sftp left
[12:43] *** sftp_ is now known as sftp

[12:44] *** lelf joined
[12:49] <jnthn> teodozjan_: Yes, that discrepancy is a bug

[12:50] <dalek> ecosystem: 57451ae | sergot++ | META.list:

[12:50] <dalek> ecosystem: OpenSSL bindings module added

[12:50] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/57451ae578

[13:00] *** molaf joined
[13:02] *** chenryn left
[13:03] *** fhelmberger left
[13:07] *** chenryn joined
[13:07] <masak> jnthn: a reported one?

[13:07] <jnthn> Not sure.

[13:08] <masak> is there a minimal example?

[13:13] <Ven> Only a month of shooting yourself in the foot ? You're quite good ;)

[13:16] <Ven> do we have any mail libraries ? *goes to check our lil' cpany*

[13:17] *** chenryn left
[13:19] <timotimo> i think we have something that handles mail headers?

[13:19] <timotimo> but i could be wrong about that

[13:20] <Ven> yeah. I was more looking forward something that could *receive*, but I guess I'll first try to do it in ruby because I need it in ruby :P

[13:21] <timotimo> receive mails? oh god, the pain ...

[13:21] <timotimo> or did you mean retrieve? like POP3 or IMAP?

[13:21] *** bluescreen10 joined
[13:21] *** molaf left
[13:22] <Ven> timotimo: first retrieve, then at some point receive.

[13:22] *** anaeem1_ left
[13:22] <timotimo> you know receiving mails is basically the worst thing imaginable?

[13:23] <timotimo> well, at least configuring mail servers is said to be a terrible pain

[13:24] *** SamuraiJack joined
[13:25] <teodozjan_> Ven: I didn't know how to load gun earlier ;)

[13:25] <Ven> what's gun ?

[13:25] *** SamuraiJack_ joined
[13:27] <masak> &mkdir doesn't seem to complain for directories that already exist. bug?

[13:27] <masak> Ven: the tool with which to shoot yourself in the foot.

[13:27] <Ven> masak: oh. How do you use it ?

[13:28] <masak> Ven: http://howto-pages.org/shootfoot.php

[13:29] <Ven> thankies.

[13:30] <Ven> There should be a Perl 6 one "you wait for a compiler to be advanced enough to do it, and retire before you can actually shoot yourself in the foot" :D

[13:32] * masak (proudly) shoots himself in the foot daily with an advanced Perl 6 compiler

[13:32] <masak> so speak for yourself :)

[13:32] <Ven> can't handle a little irony, eh ? :)

[13:33] * Ven shoots itself often enough with his perl 6 in prod, sooo

[13:33] <masak> clearly the same person who trolled his own channel earlier today pretending to be a clueless outsider troll can't handle a little irony, noooo :P

[13:34] <nwc10> masak: are you in urgent need of a weekend?

[13:34] <Ven> aren't we all. Hey, 3 days weekend !

[13:34] <nwc10> 3? your mileage seems to be varying

[13:34] <masak> nwc10: oh, do I have the appearance of needing one? :/ I just have more time today to fool around than usual...

[13:34] * masak is having a Perl 6 day today

[13:34] <nwc10> aha

[13:35] * masak is actually writing Perl 6 right now

[13:35] <nwc10> oooh

[13:35] <Ven> It's france, we don't work very much.

[13:35] * masak .oO( that "strikes" me as plausible )

[13:37] <nwc10> OK, I can't quite work out a dual language pun

[13:37] <nwc10> but in the process of failing to, why is http://en.wiktionary.org/wiki/gr%C3%A8ve a grave accent, but http://en.wiktionary.org/wiki/gr%C3%A9viste an accute accent?

[13:38] * masak .oO( the strike itself is resisiting, but all the participants are active? ) :P

[13:38] <Ven> nwc10: because french. happens all the time ...

[13:38] <nwc10> ah OK.

[13:39] <masak> Ven: I thought French was the ultimate paragon of logic and clarity!

[13:39] <Ven> masak: I bet you did ..

[13:39] * Ven really hates french as a lang

[13:39] <timotimo> masak: luckily, writing "I'm actually writing Perl 6 right now" is an act of "writing Perl 6" :3

[13:39] <masak> timotimo: oh, you noticed.

[13:40] *** thou joined
[13:42] *** chenryn joined
[13:44] *** dmol joined
[13:44] *** thou left
[13:46] <colomon_> I think most of the new module failures from the last two days are because eval finally went away.

[13:47] * Ven now wants to see EVAL away :P

[13:52] *** chenryn left
[13:55] <retupmoca> Ven: I have IMAP and POP3 modules written. SMTP too, but only client-side

[13:55] <retupmoca> Ven: as well as Email::MIME

[14:04] <masak> wow, :i is really amazingly slow.

[14:04] <masak> I'm measuring a ~35x slowdown with it.

[14:05] <colomon_> :(

[14:06] *** btyler joined
[14:07] <colomon_> PerlJam: Benchmark and File::Temp are failing because of eval -> EVAL.

[14:08] <colomon_> masak: ditto for Yarn

[14:10] * masak removes Yarn from ecosystem

[14:12] <dalek> ecosystem: fef9a4e | masak++ | META.list:

[14:12] <dalek> ecosystem: remove yarn

[14:12] <dalek> ecosystem: 

[14:12] <dalek> ecosystem: Not maintained, and not very interesting anymore.

[14:12] <dalek> ecosystem: 

[14:12] <dalek> ecosystem: See zblog instead. :)

[14:12] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/fef9a4e673

[14:12] * PerlJam pushes some updates

[14:12] *** thou joined
[14:13] <[Coke]> lizmat: so apparently, no, six months was not enough time for, say, PerlJam. :P :)

[14:14] *** bluescreen100 joined
[14:14] *** bluescreen100 left
[14:14] *** bluescreen10 left
[14:14] *** bluescreen10 joined
[14:17] * Ven has a lot of cool ideas of projects using perl 6, but ... they all involve web

[14:18] * masak wonders how far pmurias++ got with his JS backend, and if something from that project can be salvaged and resumed

[14:19] <Ven> masak: it has a lot of PIR, sadly

[14:19] <masak> aww :/

[14:19] <Ven> (I didn't mean "web" in "perl 6 as an alt-js" -- just in case)

[14:19] <masak> no, I get that.

[14:19] *** treehug88 joined
[14:19] *** teodozjan_ left
[14:19] <masak> but many of *my* plans would involve generating JS from Perl 6.

[14:20] <Ven> lots of stuff we can't quite compile :P

[14:20] <Ven> and lots of stuff we can just cheat about :D

[14:20] <jnthn> masak: (:i) any chance of a small benchmark? :)

[14:20] <masak> as a matter of fact, yes.

[14:21] <[Coke]> well, jnthn could probably do rakudo -js in about 2 weeks, given previous performance and improved porting tools!

[14:21] <masak> m: say +("flubb" x 1000).comb(/u/); say now - BEGIN now

[14:21] <camelia> rakudo-moar 87dcd1: OUTPUT«1000␤0.16337649␤»

[14:21] <masak> m: say +("flubb" x 1000).comb(/:i u/); say now - BEGIN now

[14:21] <camelia> rakudo-moar 87dcd1: OUTPUT«1000␤0.81209080␤»

[14:21] <masak> it gets worse for larger values of 1000.

[14:21] <btyler> Ven: nqp-js has a lot of pir? are you sure that isn't just the pir that's in nqp to begin with? he forked perl6/nqp to start with

[14:22] <Ven> btyler: erm, I checked pretty early on in my p6-learning-experience, will recheck

[14:22] <btyler> Ven: I don't see any PIR in this subdir: https://github.com/pmurias/nqp-js/tree/master/src/vm/js :)

[14:23] *** zen_gargoyle joined
[14:24] <Ven> btyler: https://github.com/pmurias/nqp-js/blob/master/src/vm/js/HLL/Backend.nqp#L72 :P

[14:25] *** SamuraiJack left
[14:25] <PerlJam> shouldn't that just be nqp::istype or something anyway? :)

[14:25] <Ven> there are some 'pir' here and there

[14:25] <btyler> Ven: ok, fair, missed a few lines. still, hardly such an amount as to present an obstacle from working on it

[14:26] <btyler> an obstacle to, even

[14:26] *** [Sno] left
[14:26] <Ven> Yeah, I probably misread some of these files as being of the rakudo-js project :)

[14:26] <masak> insight: the dark side of the coin of memoization is memory leakage -- and doing memoization without considering life cycles is some degree of irresponsible.

[14:27] <Ven> masak: that's specialization in general :P

[14:27] <jnthn> May also simply be that at the time there was no nqp:: alternative, and that nowadays there is...

[14:28] *** kaleem left
[14:29] <colomon_> [Coke]: me neither, I had to fix two of my modules this morning.

[14:31] <colomon_> [Coke]: also supernovus, it appears

[14:31] <colomon_> hmm: /Users/colomon/.rakudobrew/bin/perl6: line 2: 40745 Segmentation fault: 11  /Users/colomon/.rakudobrew/moar-HEAD/install/bin/perl6 "$@"

[14:38] *** cooper_ left
[14:38] *** cooper_ joined
[14:38] *** cooper- joined
[14:45] <hoelzro> morning #perl6

[14:46] <masak> hoelzro! \o/

[14:46] <hoelzro> o/ masak!

[14:50] <gtodd> hmm would it be accurate to say there are  "Java based" languages   and there are languages that "run on the JVM" and that they are very different ...

[14:51] <masak> gtodd: I think so.

[14:51] <gtodd> scala seems "like java" but jruby and rakudo-j (and clojure !) are not like java

[14:51] <gtodd> well I think scala is like java ... :-)

[14:51] <masak> gtodd: I mean, to some extent C# is "Java-based", but it doesn't run on the JVM as far as I know.

[14:51] <gtodd> maybe I just mean strongly typed or something

[14:52] <jnthn> C# also evolved a lot faster :)

[14:52] <gtodd> haha

[14:52] <gtodd> more money and fear involved

[14:52] <gtodd> :)

[14:52] <masak> well, I admire the direction in which C# has evolved.

[14:53] <masak> I think Microsoft Research is largely to thank for that.

[14:53] <jnthn> *nod*

[14:53] <jnthn> They got a lot of things right.

[14:53] <gtodd> I guess there's even more languages the run on .NET ...

[14:54] * gtodd always mixes up misuses  C# .NET CLR etc

[14:55] <dalek> rakudo/spesh_decont_contspec: e9c4921 | (Timo Paulssen)++ | src/vm/moar/ops/container.c:

[14:55] <dalek> rakudo/spesh_decont_contspec: teach Rakudo_Scalar how to spesh.

[14:55] <dalek> rakudo/spesh_decont_contspec: review: https://github.com/rakudo/rakudo/commit/e9c4921677

[14:55] <cognominal> how far behind is mono?

[14:56] <gtodd> anyway ... a thing a perl5 person might notice or see as different better new is that perl6 can haz "Types"  ... (whee!)  but someone using scala might just see it as a way of using/accessing java/jvm with cleaner syntax

[14:56] *** _slade joined
[14:56] *** fabio__ left
[14:57] * TimToady gets to have a second emergency eye surgery today; well, not the second one today, the second one this week

[14:58] * sjn hopes it goes well

[14:58] <TimToady> sprouted another retinal detachment night before last, and another last night, but I was able to use the existing bubble (of sulfur hexafloride!) to stabilize my eye temporarily

[14:58] <retupmoca> TimToady: best of luck

[14:59] <TimToady> they're going to do a vitrectomy this time, to take away my jelly and replace it with something they can see through :)

[14:59] <masak> best wishes, TimToady.

[15:00] * Ven disagrees that java is "strongly typed"

[15:00] <gtodd> only asking because sometimes people list all the languages they know and I see java scala groovy ...   and I wonder about adding [ ] around parts of the list :)

[15:00] * [Coke] hopes TimToady can see through it also!

[15:00] * [Coke] wonders if not-strongly-typed java is a 7 or 8 thing.

[15:01] <jnthn> TimToady: Hope all goes to plan...and your retina gets better at staying attached...

[15:01] <TimToady> depending on whether they put in the two-week gas or the eight-week gas, I may not be able to fly to Bulgaria and Japan

[15:01] * Ven notices that TimToady is jelly

[15:01] <Ven> :(

[15:02] <gtodd> TimToady: 8-]   take care of yourself!  Maybe use skype :)

[15:04] <hoelzro> best of luck TimToady 

[15:05] <gtodd> [Coke]: I don't know java or java history that well but it does seem like a more recent thing

[15:05] <nwc10> TimToady: are you going to OSCON or not? (I assume that that's driving, not flying, but it's not clear if even "being driven" is compatible with your current "interesting times")

[15:06] <nwc10> and yes, I hope it goes well

[15:06] <TimToady> OSCON is up in the air too, though I can potentially at least drive there, if I avoid mountain ranges

[15:07] <TimToady> but it's also not clear that I should go that far from my eye doctors at this point

[15:07] <TimToady> we'll see how it goes

[15:07] <gtodd> is it an ai rpressure thing or a don't move your eyes around too much thing?

[15:07] <TimToady> air pressure, or more precisely, sulfur hexafloride pressure :)

[15:08] <TimToady> or whatever gas they use next time

[15:08] <gtodd> ahah that sums it up .. heh  "don't go that far from my eye doctor" thing

[15:08] <gtodd> wow

[15:08] *** liztormato joined
[15:08] <TimToady> it's up to doctors by now :)

[15:09] <liztormato> TimToady: Best wishes from woolfy, elbeho and me

[15:09] <TimToady> so far I've had six doctors looking in my eye since Sunday

[15:09] <TimToady> three at UCLA, and three up here at home

[15:10] <liztormato> That's quite a set of eyes to look at your eyes

[15:10] <TimToady> this all started with a PVD a week ago

[15:10] <TimToady> which is benign unless it tears your retina

[15:11] <TimToady> apparently mine tore in three places

[15:11] *** lelf left
[15:11] <TimToady> unfortunately a PVD tends to fill up your eye with all kind of floaters large and small, which make it hard to see the tears

[15:12] <liztormato> http://www.rnib.org.uk/eye-health-eye-conditions-z-eye-conditions/posterior-vitreous-detachment

[15:12] * masak found https://en.wikipedia.org/wiki/Posterior_vitreous_detachment

[15:12] <TimToady> I had one a year or so ago, but it was not a problem

[15:13] <TimToady> well, except for the floaters...

[15:14] <TimToady> after today I should not have that problem again, at least in that eye

[15:20] *** zakharyas left
[15:24] *** liztormato left
[15:28] <TimToady> s/floride/fluoride/ I guess

[15:35] *** Timbus left
[15:36] <timotimo> TimToady: i hope all goes according to plan from now on and you'll recover swiftly!

[15:38] *** Timbus joined
[15:52] *** hoverboard joined
[15:53] *** zen_gargoyle left
[15:55] *** ajr_ left
[15:57] *** guru joined
[15:57] *** guru is now known as ajr_

[16:01] *** Akagi201 left
[16:02] *** Akagi201 joined
[16:03] *** raiph joined
[16:05] <hoelzro> this is probably a stupid question, but is it possible to get a variable's container (so that I can ask it what type it is)

[16:06] *** atroxaper joined
[16:06] *** Akagi201 left
[16:06] <atroxaper> Evening, #perl6 !

[16:09] <atroxaper> I cant imagin why Parrot throws SIGSEGV... If I push say "-" in random place then all is ok.

[16:10] *** darutoko- joined
[16:10] *** denis_boyun_ joined
[16:10] <masak> hoelzro: .VAR is supposed to do that.

[16:10] <masak> m: my $a = 42; say $a.VAR

[16:10] <camelia> rakudo-moar 87dcd1: OUTPUT«42␤»

[16:11] <masak> m: my $a = 42; say $a.VAR.^name

[16:11] <camelia> rakudo-moar 87dcd1: OUTPUT«Int␤»

[16:11] <masak> but, hm.

[16:11] *** Ven left
[16:11] <hoelzro> ahhhh

[16:11] <masak> it doesn't seem to do what I expect.

[16:11] <japhb_> TimToady: Best wishes on a good and speedy recovery.  Also, it's hard for me to think of 'sulfur hexafluoride' without thinking 'poison hexapoison'.  But then sodium chloride, so ...

[16:12] <hoelzro> that's kind of odd

[16:12] <hoelzro> but it's working for me

[16:13] <hoelzro> m: my $a = 42; say $a.VAR.of.WHAT

[16:13] <camelia> rakudo-moar 87dcd1: OUTPUT«(Mu)␤»

[16:13] *** darutoko left
[16:13] * [Coke] belatedly wishes TimToady g'luck.

[16:14] <[Coke]> if you can reliably segfault parrot: 1) make sure you're using the latest version of rakudo; 2) run it through gdb or something to get a stacktrace 3) open a ticket, please.

[16:14] <[Coke]> er, atroxaper ^^

[16:15] <jnthn> m: my $a = 42; say $a.VAR.WHAT

[16:15] <camelia> rakudo-moar 87dcd1: OUTPUT«(Scalar)␤»

[16:15] <jnthn> m: my $a = 42; say $a.VAR.name

[16:15] <camelia> rakudo-moar 87dcd1: OUTPUT«$a␤»

[16:15] <atroxaper> [Coke]: I'm interested in point 2. How? :)

[16:16] <jnthn> m: my Int $a = 42; say $a.VAR.of # the type

[16:16] <camelia> rakudo-moar 87dcd1: OUTPUT«(Int)␤»

[16:17] <[Coke]> atroxaper: what OS?

[16:17] <[Coke]> if not-windows, do you have gdb installed?

[16:17] <atroxaper> [Coke]: os x

[16:17] <[Coke]> try "$ gdb ./perl6"

[16:18] <[Coke]> "> run /path/to/exploding/script.p6"

[16:18] <[Coke]> wait until it explodes.

[16:18] <[Coke]> "> bt"

[16:18] <[Coke]> gist that so we can see if you have enough info there. Might have to rebuilding r-p with debugging symbols enabled.

[16:19] <atroxaper> [Coke]: ok. I'll try

[16:19] <[Coke]> atroxaper++

[16:19] <dalek> rakudo-star-daily: 8e8376c | coke++ | log/ (14 files):

[16:19] <dalek> rakudo-star-daily: today (automated commit)

[16:19] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/8e8376cd80

[16:19] <dalek> perl6-roast-data: 4cc469a | coke++ | / (4 files):

[16:19] <dalek> perl6-roast-data: today (automated commit)

[16:19] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/4cc469a7d2

[16:20] <[Coke]> lots of %(itemized hash) deprecations in the R*.

[16:20] <[Coke]> modules/jsonrpc failing on parrot

[16:20] <[Coke]> ; ... this is all in the daily runs of the other thing now, yes?

[16:24] <masak> the other thing? do you mean emmabot?

[16:25] <[Coke]> there is a website that was showing all build issues/test failures, etc...

[16:25] *** FROGGS joined
[16:25] <masak> oh!

[16:25] <[Coke]> mumble:8080

[16:25] *** BenGoldberg joined
[16:25] <[Coke]> .seen au

[16:25] *** ajr_ left
[16:25] <yoleaux> I haven't seen au around.

[16:26] <[Coke]> ^^ I'm going to shut off Pugs on the daily runs, I think.

[16:26] <[Coke]> It's just too crufty, and no one wants to own it.

[16:26] <masak> +1

[16:27] <[Coke]> niecza I may make another effort to fudge with a bunch of generic "todo" fudges.

[16:29] <masak> Niecza is probably also not a moving target these days -- but of course, getting spectest results from it might still be interesting.

[16:31] <[Coke]> it is more likely someone might do a small commit here or there to track a change, I think.

[16:33] <dalek> perl6-roast-data: 6c41218 | coke++ | bin/ (2 files):

[16:33] <dalek> perl6-roast-data: Stop running Pugs every day.

[16:33] <dalek> perl6-roast-data: 

[16:33] <dalek> perl6-roast-data: No one is maintaining it, no real change

[16:33] <dalek> perl6-roast-data: in months.

[16:33] <dalek> perl6-roast-data: 

[16:33] <dalek> perl6-roast-data: Thanks for getting us started!  au++ (lots of others++)

[16:33] <dalek> perl6-roast-data: 

[16:33] <dalek> perl6-roast-data: Adios. (We'll leave the last log and the data

[16:33] <dalek> perl6-roast-data: in the daily tracker, but remove the runner)

[16:33] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/6c41218378

[16:34] <[Coke]> Step 2 of that, which is more permanent, is to remove all the pugs fudges from roast.

[16:36] *** atroxaper left
[16:37] *** [Sno] joined
[16:38] *** atroxaper joined
[16:45] <masak> even that is fairly reversible thanks to Git.

[16:47] <[Coke]> Troo.

[16:53] <atroxaper> With one Rakudo-Parrot version is the last?

[16:53] <atroxaper> This is perl6 version 2014.06-12-ga7b4cba built on parrot 6.5.0 revision RELEASE_6_5_0

[16:55] <FROGGS> atroxaper: you see the revision of the latest commit on the right of the topmost entry: https://github.com/rakudo/rakudo/commits/nom

[16:55] <raiph> m: slurp.subst( / \N*? (\w+) \n { say $0} /, $0, :g) # this seems to work

[16:55] <camelia> rakudo-moar 87dcd1: OUTPUT«｢nGall｣␤␤｢luí｣␤␤｢chúl｣␤␤｢féin｣␤␤｢gnéill｣␤␤｢stór｣␤␤｢mór｣␤␤»

[16:56] <raiph> m: slurp.subst( / \N*? (\w+) \n /, $0, :g).say # but this doesn't; what am I doing wrong?

[16:56] <camelia> rakudo-moar 87dcd1: OUTPUT«Agus dhá chéad slán ag an Eireagal ard ina stua os cionn caor is coll;␤I mo dhiaidh bhí gleanntáin ghlas’ Ghaoth Dobhair, is beag nár bhris mo chroí.␤␤Ní miste dom ’ rá le brón ’s le crá gur frasach a shíl mise siúl;␤Go Meiriceá…»

[16:56] <FROGGS> so when you see 87dcd11386 there, it would be represented as YYYY-MM-nr-g<commit id>

[16:56] <FROGGS> m: slurp.subst( / \N*? (\w+) \n /, { $0 }, :g).say

[16:56] <camelia> rakudo-moar 87dcd1: OUTPUT«nGallAgus dhá chéad slán ag an Eireagal ard ina stua os cionn caor is coll;␤luíI mo dhiaidh bhí gleanntáin ghlas’ Ghaoth Dobhair, is beag nár bhris mo chroí.␤␤chúlNí miste dom ’ rá le brón ’s le crá gur frasach a shíl mise siúl;…»

[16:57] <FROGGS> ahh

[16:57] <FROGGS> raiph: I think :g in the subst method for is broken

[16:57] <FROGGS> it will work in the non method version

[16:58] <raiph> m: subst(slurp, / \N*? (\w+) \n { say $0} /, $0, :g).say

[16:58] <camelia> rakudo-moar 87dcd1: OUTPUT«===SORRY!=== Error while compiling /tmp/TDwM6EQepj␤Undeclared routine:␤    subst used at line 1. Did you mean 'substr'?␤␤»

[16:59] *** kivutar left
[17:00] <atroxaper> FROGGS: it is funny that i can't find my current's version commit :) git log ga7b4cba -> nothing

[17:01] *** dakkar left
[17:01] <FROGGS> atroxaper: strip the leading g

[17:01] <FROGGS> m: my $t = slurp; ($t ~~ s:g/ \N*? (\w+) \n { say $0} /$0/).say # raiph

[17:01] <camelia> rakudo-moar 87dcd1: OUTPUT«｢nGall｣␤␤｢luí｣␤␤｢chúl｣␤␤｢féin｣␤␤｢gnéill｣␤␤｢stór｣␤␤｢mór｣␤␤True␤»

[17:02] <dalek> roast/S26-WHY: 709b077 | (Rob Hoelz)++ | S26-TODO:

[17:02] <dalek> roast/S26-WHY: Add note about indent for declarative blocks

[17:02] <dalek> roast/S26-WHY: review: https://github.com/perl6/roast/commit/709b077628

[17:03] <atroxaper> FROGGS: oh.. Thanks!

[17:03] <FROGGS> m: my $t = slurp; ($t ~~ s:g[ \N*? (\w+) \n { say $0} ] = 42).say; say $t

[17:03] <camelia> rakudo-moar 87dcd1: OUTPUT«｢nGall｣␤␤｢luí｣␤␤｢chúl｣␤␤｢féin｣␤␤｢gnéill｣␤␤｢stór｣␤␤｢mór｣␤␤True␤42Agus dhá chéad slán ag an Eireagal ard ina stua os cionn caor is coll;␤42I mo dhiaidh bhí gleanntáin ghlas’ Ghaoth Dobh…»

[17:12] <atroxaper> FROGGS: sorry, but what is 'nr' in release version format?

[17:13] <japhb> atroxaper, number of commits since the tag

[17:14] <japhb> atroxaper, because you're really seeing the result of `git describe`

[17:14] <japhb> I personally use `git describe --always --dirty`, IIRC

[17:15] <japhb> (It's wrapped up in something else)

[17:15] *** raiph left
[17:16] <atroxaper> japhb: oh. I see.

[17:26] <FROGGS> atroxaper: so you know you are 12 patches ahead of the 2014.06 release

[17:27] <atroxaper> FROGGS: yes. I see. I updated just now. I my sigsegv has gone :) And now I have a couple of deprecated calls.

[17:28] <FROGGS> atroxaper: yes, that sounds about right :o)

[17:28] *** itz_ joined
[17:28] *** Akagi201 joined
[17:28] *** pecastro left
[17:29] *** raiph joined
[17:31] *** emilper joined
[17:33] *** Akagi201 left
[17:33] *** takesako_ joined
[17:34] *** tempire_ joined
[17:35] *** amkrankr1leuen joined
[17:35] *** btyler_ joined
[17:36] *** d4l3k_ joined
[17:36] *** bluescreen100 joined
[17:37] *** Akagi201 joined
[17:38] *** Mouq_ joined
[17:38] *** hoverboard is now known as moistcherry

[17:39] *** itz_ left
[17:39] *** zamolxes_ joined
[17:39] <atroxaper> m: my @a = 1,2,3; say @a.WHAT;

[17:39] <camelia> rakudo-moar 87dcd1: OUTPUT«(Array)␤»

[17:39] *** robins joined
[17:39] *** breinbaa1 joined
[17:40] <atroxaper> ok

[17:40] *** FOAD left
[17:41] *** denis_boyun_ left
[17:41] *** bluescreen10 left
[17:41] *** btyler left
[17:41] *** robinsmidsrod left
[17:41] *** zamolxes left
[17:41] *** SHODAN left
[17:41] *** araujo left
[17:41] *** simcop2387 left
[17:41] *** dalek left
[17:41] *** woolfy1 left
[17:41] *** yeltzooo left
[17:41] *** breinbaas left
[17:41] *** kst left
[17:41] *** takesako left
[17:41] *** Mouq left
[17:41] *** amkrankruleuen left
[17:41] *** nickpatch left
[17:41] *** tempire left
[17:42] *** simcop2387_ joined
[17:42] *** d4l3k_ is now known as dalek

[17:42] *** SHODAN joined
[17:42] *** simcop2387_ is now known as simcop2387

[17:43] *** Akagi201 left
[17:46] *** yeltzooo joined
[17:47] *** Akagi201 joined
[17:47] *** araujo joined
[17:47] *** nickpatch joined
[17:49] <hoelzro> when does 2014.07 go out, again? the 17th, iirc?

[17:49] *** rGeoffrey_ joined
[17:51] *** rGeoffrey left
[17:51] *** woolfy joined
[17:51] *** rGeoffrey_ is now known as rGeoffrey

[17:52] *** Akagi201 left
[17:52] <PerlJam> hoelzro: aye.  07-17

[17:53] <hoelzro> I better mosey with the S26 stuff, then =)

[17:54] *** kaleem joined
[17:56] *** Akagi201 joined
[17:58] <atroxaper> I overcame my deprecated calls... But i have a new issue :) https://gist.github.com/atroxaper/ad0714f011f32fd8cbd9

[17:58] <emilper> perl6: use IO::Socket::INET;

[17:58] <camelia> rakudo-moar 87dcd1: OUTPUT«===SORRY!===␤Could not find IO::Socket::INET in any of: /home/p6eval/rakudo-inst-2/languages/perl6/lib, /home/p6eval/rakudo-inst-2/languages/perl6␤»

[17:58] <camelia> ..rakudo-jvm 87dcd1: OUTPUT«===SORRY!===␤Could not find IO::Socket::INET in any of: /home/p6eval/rakudo-inst-1/languages/perl6/runtime, /home/p6eval/rakudo-inst-1/languages/perl6/lib, /home/p6eval/rakudo-inst-1/languages/nqp/lib, /home/p6eval/rakudo-inst-1/languages/perl6/lib, /home…»

[17:58] <camelia> ..rakudo-parrot 87dcd1: OUTPUT«===SORRY!===␤Could not find IO::Socket::INET in any of: /home/p6eval/rakudo-inst-2/lib/parrot/6.5.0-devel/languages/perl6/lib, /home/p6eval/rakudo-inst-2/lib/parrot/6.5.0-devel/languages/perl6␤»

[17:58] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«Unhandled exception: System.Exception: Unable to locate module IO::Socket::INET in /home/p6eval/niecza/lib /home/p6eval/niecza /home/p6eval/.config/niecza␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 (die @ 5) ␤  at /home/p6eval/niecza…»

[17:59] <atroxaper> if i use just '$anchor."{$name}"() = %args{$name};' than in case $name eq '%storage' then i have a message about deprecated call and should write  %storage = %(itemized)

[18:00] <atroxaper> I mean I am forced to write a type of left argument, but I dont know it.

[18:00] *** Akagi201 left
[18:00] <atroxaper> I can to find out the type of left argument, but I think it is dirty...

[18:07] *** Rotwang joined
[18:09] *** kaleem left
[18:15] *** lelf joined
[18:15] *** psch joined
[18:16] <psch> hi #perl6 o/

[18:16] <psch> https://github.com/rakudo/rakudo/pull/284 # now rebased and does-what-it-should 

[18:16] <atroxaper> psch: Hi!

[18:17] <psch> if i can't i'd like to defer spectests to someone with a beefier machine; moar alone runs for about 30 minutes or more here with two jobs

[18:18] <psch> hey atroxaper :)

[18:22] * psch starts building all backends and spectesting them anyway, because waiting two hours before someone else runs them in 1/5th of the time when it could be finished by then is not really efficient.

[18:24] <dalek> rakudo/spesh_decont_contspec: 3c02865 | (Timo Paulssen)++ | src/vm/moar/ops/container.c:

[18:24] <dalek> rakudo/spesh_decont_contspec: gotta subtract the header's size from the offset

[18:24] <dalek> rakudo/spesh_decont_contspec: review: https://github.com/rakudo/rakudo/commit/3c0286513c

[18:26] <rjbs> woolfy: When we were in Lyon, I had some of your jenever.  Today, I bought a bottle of the kind of gin that is considered a "missing link" between genever and London gin!

[18:26] <rjbs> woolfy: http://en.wikipedia.org/wiki/Old_Tom_Gin

[18:26] <nwc10> mmm, gin

[18:26] <rjbs> (I got it after a powerful endorsement by [particle].)

[18:27] <rjbs> (So this really is on topic for #perl6!)

[18:27] <TimToady> you just have to find some way to tie it to linguistics

[18:27] <rjbs> Speaking of drinking and language, today I was trying to find the origin of the meaning "stand you a drink" for stand.

[18:28] <rjbs> It was verb definition #61 (!) of "stand" in OED, but gave no origination.

[18:30] *** moistcherry is now known as hoverboard

[18:30] <japhb> I somehow expected "Speak of drinking and language," to be followed by increasingly unreadable gibberish ....

[18:31] <PerlJam> japhb: maybe that's why rjbs can't find the origin of that phrase.

[18:34] <atroxaper> i've created a bug report https://rt.perl.org/Ticket/Display.html?id=122274. I still have SIGSEGV

[18:34] *** robins is now known as robinsmidsrod

[18:37] <Mouq_> RE: http://irclog.perlgeek.de/perl6/2014-07-11#i_9009278

[18:37] <Mouq_> You need / \N*? (\w+) \n {} /

[18:38] <Mouq_> I believe...

[18:38] <Mouq_> But the {} is supposed to create $/

[18:38] <atroxaper> Mouq_: Hello!

[18:38] <atroxaper> Mouq_: did you see Pod::SAX code?

[18:38] *** lelf left
[18:42] *** guru joined
[18:42] *** guru is now known as Guest3070

[18:43] *** Guest3070 is now known as ajr_

[18:44] *** bluescreen__ joined
[18:46] *** itz_ joined
[18:46] *** bluescreen10 joined
[18:46] <Mouq_> atroxaper: Hi! :) I did get a chance to look at it a little. I imagine there's gotta be a cleaner syntactic way to write Pod::SAX::Goes::HTML

[18:47] <japhb> Goes?

[18:48] *** bluescreen100 left
[18:48] *** BenGoldberg left
[18:48] <Mouq_> (I'd just name it Pod::To::HTML)

[18:48] *** bluescreen__ left
[18:48] <atroxaper> Mouq_: Do you imagine some concrete syntactic way?

[18:49] <Mouq_> m: say (4, 5) ~~ sub ($, $) { True }.signature

[18:49] <camelia> rakudo-moar 87dcd1: OUTPUT«True␤»

[18:49] <Mouq_> m: say (4, 5) ~~ :($, $)

[18:49] <camelia> rakudo-moar 87dcd1: OUTPUT«True␤»

[18:49] <Mouq_> m: say (4, 5) ~~ :(4, 5)

[18:49] <camelia> rakudo-moar 87dcd1: OUTPUT«True␤»

[18:49] <Mouq_> m: say (4, 5) ~~ :(4, 6)

[18:49] <camelia> rakudo-moar 87dcd1: OUTPUT«False␤»

[18:49] <Mouq_> ^^ There's one way to clean it up a little; instead of using sub (...) { True } everywhere, use :(...)

[18:51] <atroxaper> Mouq_: Hmm... ok. What else? :)

[18:52] <atroxaper> Mouq_: Do you like a general idea of start, in, stop callbacks and post calls of anchors?

[18:55] <Mouq_> Honestly, I really didn't at first, but I can see how it would be quite extensible.

[18:56] *** molaf joined
[18:56] <Mouq_> So yes :)

[18:56] *** hoverboard is now known as moistcherry

[18:57] <Mouq_> If you wanted, you could rewrite all the sub (:@draft, :@meta, etc) { }, as blocks that have @:draft, @:meta, etc, not sure if that would increase or decrease readibility; it's just that the same signatures appear over and over again

[18:58] <Mouq_> (@:draft is like @^draft, but named instead of positional)

[18:58] <Mouq_> m: { @:draft.say }( :draft[1,2,3] )

[18:58] <camelia> rakudo-moar 87dcd1: OUTPUT«1 2 3␤»

[18:59] <atroxaper> Ohh... I thought about repetitive signature... I don't like it too.

[19:01] <atroxaper> But how can I find out which named arguments uses in each concrete block?

[19:01] <atroxaper> I use a signature for that in my current realization. or you think that I don't check arguments and put it all?

[19:01] <Mouq_> There also doesn't seem to be a case where you're not just pushing to @draft; maybe make it avaible (since I see where it could be useful to manipulate directly) but maybe just have whatever the block returns be pushed onto @draft?

[19:02] <Mouq_> m: { @:draft.say }( :draft[1,2,3], :passed-anyway )

[19:02] <camelia> rakudo-moar 87dcd1: OUTPUT«Unexpected named parameter 'passed-anyway' passed␤  in block  at /tmp/eYqF7779kW:1␤␤»

[19:02] <Mouq_> aww, what?

[19:02] <Mouq_> m: sub { @:draft.say }( :draft[1,2,3], :passed-anyway )

[19:02] <camelia> rakudo-moar 87dcd1: OUTPUT«Unexpected named parameter 'passed-anyway' passed␤  in sub  at /tmp/Jznfd2tjsD:1␤  in block  at /tmp/Jznfd2tjsD:1␤␤»

[19:02] <Mouq_> That's annoying

[19:02] <Mouq_> m: say { @:draft.say }.signature

[19:02] <camelia> rakudo-moar 87dcd1: OUTPUT«:(:draft(@draft)!)␤»

[19:03] <Mouq_> ^^ Looks like the sig is still introspecable, though. I don't think you'd have to change anything in the backend for that

[19:03] <Mouq_> *introspectable

[19:04] <atroxaper> Mouq_: oh... that is great!

[19:04] <jnthn> psch: Looked over your latest PR and I'm happy with it. I guess your spectest run is some way along now...lemme know how it works out :)

[19:05] <atroxaper> Mouq_: about @draft. I'm not prefer to push returns value to @draft. I thought, if sub return False, then we call the next sub if it exists.

[19:06] <psch> jnthn: i'm S04 for jvm; parrot and moar come after that... :)

[19:07] <jnthn> k

[19:07] <jnthn> I'm here all evening... :)

[19:07] <atroxaper> Evening... I have 2am already.

[19:08] <Mouq_> if @returned { push @draft, @returned } else { call-the-next-sub } ?

[19:09] <Mouq_> You could also return Nil and say if defined @returned, though I'm still just postulating

[19:09] <Mouq_> It may be better to just push to @draft

[19:11] *** kaare_ left
[19:12] <atroxaper> Mouq_: And then we remove each :@draft in signature, but add "my @returned;" in third part of code :)

[19:12] <atroxaper> Mouq_: But there will less code in any way. You are right.

[19:15] <atroxaper> Mouq_: Now I'm going to finish with Pod::To::HTML and its tests. And after that refactor the solution.

[19:16] <atroxaper> Mouq_: it's so sad that i have SIGSEGV on one of my test of Pod::To::HTML on Parrot.

[19:17] *** darutoko- left
[19:19] *** fabio__ joined
[19:20] <atroxaper> Ok. nights, #perl6 !

[19:20] <Mouq_> atroxaper: What about having @*draft be a dynamic variable, and having a sub append (*@args) { push @*drafts, @args } ?

[19:20] <Mouq_> atroxaper: g'night!

[19:21] <atroxaper> Mouq_: mmm.... I didn't understand...

[19:21] <atroxaper> Mmmm.

[19:21] <atroxaper> Mouq_: Good idea!

[19:21] <atroxaper> Mouq_: I would say, Great idea! :)

[19:23] <atroxaper> Mouq_: But... I thinks that I don't understand fully xD

[19:25] <atroxaper> Mouq_: I need to read about dynamic variable! I'm going to do so tomorrow. Nights!

[19:25] <Mouq_> atroxaper: Haha, sorry. in !visit or somewhere higher on the call chain, define a my @*draft := self.draft. Dynamically scoped variables are to all the functions that are called in the scope of the variable, so the subs in Pod::SAX::Goes::HTML could just push to @*draft

[19:25] <atroxaper> ...

[19:26] <Mouq_> atroxaper: Sorry, I tend to come and go from the computer

[19:26] <atroxaper> Mouq_: yes! Great Idea!

[19:26] <Mouq_> atroxaper: Haha, ok :) 'nighty

[19:26] <atroxaper> Mouq_: you too :-)

[19:28] *** atroxaper left
[19:29] *** treehug88 left
[19:30] <dalek> rakudo/spesh_decont_contspec: deef0e3 | (Timo Paulssen)++ | src/vm/moar/ops/container.c:

[19:30] <dalek> rakudo/spesh_decont_contspec: it helps to have your piece of memory for yourself.

[19:30] <dalek> rakudo/spesh_decont_contspec: review: https://github.com/rakudo/rakudo/commit/deef0e308c

[19:31] *** Alina-malina left
[19:33] *** fabio__ left
[19:35] *** BenGoldberg joined
[19:36] *** Akagi201 joined
[19:36] *** SamuraiJack_ left
[19:41] <dalek> ecosystem: 4a96e8b | (David Warring)++ | META.list:

[19:41] <dalek> ecosystem: Renamed a couple of repositories

[19:41] <dalek> ecosystem: 

[19:41] <dalek> ecosystem: perl6-CSS-Language => perl6-CSS-Module

[19:41] <dalek> ecosystem: PDF-Grammar => perl6-CSS-Grammar

[19:41] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/4a96e8b311

[19:41] *** Akagi201 left
[19:42] <psch> apparently i still had the non-solution in my nqp-j for the missing outer...

[19:43] <psch> also -Xmx3000m for perl6-eval-server isn't great for 32bit machines :)

[19:43] * psch restarts spectests

[19:44] *** mst left
[19:44] *** mst joined
[19:45] *** Akagi201 joined
[19:45] <dalek> nqp: efba64d | (Timo Paulssen)++ | tools/build/MOAR_REVISION:

[19:45] <dalek> nqp: bump moar revision to get bigger ContainerSpec

[19:45] <dalek> nqp: review: https://github.com/perl6/nqp/commit/efba64d556

[19:46] <dalek> rakudo/nom: e9c4921 | (Timo Paulssen)++ | src/vm/moar/ops/container.c:

[19:46] <dalek> rakudo/nom: teach Rakudo_Scalar how to spesh.

[19:46] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e9c4921677

[19:46] <dalek> rakudo/nom: 3c02865 | (Timo Paulssen)++ | src/vm/moar/ops/container.c:

[19:46] <dalek> rakudo/nom: gotta subtract the header's size from the offset

[19:46] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3c0286513c

[19:46] <dalek> rakudo/nom: deef0e3 | (Timo Paulssen)++ | src/vm/moar/ops/container.c:

[19:46] <dalek> rakudo/nom: it helps to have your piece of memory for yourself.

[19:46] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/deef0e308c

[19:46] <dalek> rakudo/nom: e83c5a3 | (Timo Paulssen)++ | tools/build/NQP_REVISION:

[19:46] <dalek> rakudo/nom: bump NQP to get bigger ContainerSpec

[19:46] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e83c5a3c03

[19:47] <timotimo> this ought to make the jit a bunch happier

[19:49] *** fabio__ joined
[19:49] *** Akagi201 left
[19:49] <fabio__> lhi

[19:49] <fabio__> hi

[19:49] <timotimo> hello there :)

[19:50] <fabio__> :)

[19:50] *** fabio__ left
[19:50] <timotimo> that was a short visit :(

[19:51] *** Alula_ left
[19:51] *** Alula_ joined
[19:55] *** _slade left
[20:04] *** pippo joined
[20:07] <pippo> .tell TimToady I hope all goes well with your eyes. Best wishes.

[20:07] <yoleaux> pippo: I'll pass your message to TimToady.

[20:07] *** pippo left
[20:10] <dalek> roast: 75b7b15 | coke++ | S02-types/nil.t:

[20:10] <dalek> roast: Fix busted test; Should use declared type.

[20:10] <dalek> roast: 

[20:10] <dalek> roast: jnthn++

[20:10] <dalek> roast: review: https://github.com/perl6/roast/commit/75b7b15219

[20:10] <dalek> roast: 05d8a73 | coke++ | .gitignore:

[20:10] <dalek> roast: To ignore your tmpfiles, use local global gitconf

[20:10] <dalek> roast: review: https://github.com/perl6/roast/commit/05d8a731fe

[20:10] <dalek> roast: fcf62f1 | coke++ | / (301 files):

[20:10] <dalek> roast: Remove any Pugs fudges

[20:10] <dalek> roast: 

[20:10] <dalek> roast: * or pugs-specific comments

[20:10] <dalek> roast: * one pugs-specific test file

[20:10] <dalek> roast: 

[20:10] <masak> [Coke]++

[20:11] <jnthn> ooh, I go for a walk and lots of commits happen

[20:11] <jnthn> I should go for more walks.

[20:11] <masak> we all should.

[20:11] <[Coke]> dalek gave up: ended with "Thanks for getting us started!"

[20:11] <[Coke]> "so say we all

[20:12] <nwc10> if we all went for walks at the same time, would it still work?

[20:12] <nwc10> are there commit faries who only come out when no-one is logging?

[20:12] *** Akagi201 joined
[20:14] <masak> stranger things have happened

[20:16] *** Akagi201 left
[20:21] *** Akagi201 joined
[20:23] <itz__> does moar work OK with clang?

[20:24] <vendethiel> lots of warning iirc

[20:24] <[Coke]> .tell colomon_ https://github.com/sorear/niecza/issues/191

[20:24] <yoleaux> [Coke]: I'll pass your message to colomon_.

[20:25] <jnthn> Yes, not heard any reports of it not working. Just that, while we're warning-free on gcc and msvc, clang likes to warn about everything imaginable. :)

[20:26] *** Akagi201 left
[20:29] *** atroxaper joined
[20:30] *** Akagi201 joined
[20:33] <BenGoldberg> That's why it's called "clang"... it's so noisy ;)

[20:33] *** cognominal left
[20:34] *** cognominal joined
[20:34] *** atroxaper left
[20:35] *** Akagi201 left
[20:39] <japhb> BenGoldberg, "clang" always makes me think of brutish warrior types -- like a name you'd give an ogre.

[20:40] *** Akagi201 joined
[20:44] *** Akagi201 left
[20:49] *** Akagi201 joined
[20:52] *** moistcherry is now known as hoverboard

[20:52] <BenGoldberg> . o O (Clang the conquerer?)

[20:53] *** Akagi201 left
[20:55] <[Coke]> should roast prefer 4-space indents and no tabs?

[20:55] <[Coke]> (if so, bunch of LH formatting fruit)

[20:55] <dalek> roast: 830b276 | coke++ | S12-attributes/delegation.t:

[20:55] <dalek> roast: remove commented out "cannot work" test

[20:55] <dalek> roast: 

[20:55] <dalek> roast: (marked so by pmichaud++)

[20:55] <dalek> roast: review: https://github.com/perl6/roast/commit/830b2764b2

[20:57] *** cibs left
[20:58] *** Akagi201 joined
[20:59] *** cibs joined
[21:00] <timotimo> i usually dislike changing only formatting in commits as it makes git blame pretty much useless

[21:01] <[Coke]> you can still follow the trail to find out who the original editor was.

[21:01] <[Coke]> I dislike it when people commit the wrong formatting!

[21:01] <timotimo> fair enough

[21:02] <timotimo> i suppose it'd take way too long if commits would only fix formatting local to other changes, eh?

[21:02] <[Coke]> but not enough to try to reformat things. (I got to the point where I saw how many tabs were in the source, cried, and then stopped)

[21:02] *** Akagi201 left
[21:02] <masak> there should be a formatting-impervious git blame.

[21:02] <[Coke]> I officially have no problem with formatting only commits, as long as the message is explicit.

[21:02] <timotimo> japhb: you think it'd be a good idea to add a "rakudo-moar-jit" and "nqp-moar-jit" component to bench that puts --enable-jit into the --moar-options?

[21:03] <[Coke]> masak: git is already making stuff up to get from one revision to the next, so that should be doable, yes. :)

[21:03] *** BenGoldberg left
[21:03] <[Coke]> (e.g. when you duplicate/edit a file at the same time.)

[21:03] <Mouq_> ack "\t" | wc -l -> 1908

[21:04] <cognominal> japbh: is it dangerous to cling to clang?

[21:04] <masak> [Coke]: right. Git has kind of opened my eyes to how much info can actually be recreated after the fact. it's a counterintuitive but good design.

[21:05] <[Coke]> Mouq_: not all of them can be converted to spaces without analysis.

[21:07] *** Akagi201 joined
[21:07] *** anaeem1 joined
[21:09] <japhb> timotimo, yes, an {nqp,rakudo}-moar-jit seems useful.  I guess it depends on how soon JIT merges.  Because it might be worth it to have {nqp,rakudo}-moar-nojit.  But then you get into -noopt and other combinations as well.

[21:10] <timotimo> yeah :(

[21:10] <japhb> cognominal: If clang is wearing spiked armor or flea-infested skins, then yes.  :-)

[21:10] <timotimo> maybe we're going to wait with the jit-merge until gsoc has finished? though the official docs also encourage merging in contributions swiftly throughout the GSoC

[21:11] <jnthn> I'm aiming we'll include it in 2014.08

[21:11] <timotimo> that sounds good!

[21:11] <japhb> I'll call that a birthday present.  :-)

[21:11] *** Akagi201 left
[21:12] *** emilper left
[21:12] <[Coke]> to about 8 of us.

[21:12] <timotimo> hmpf. i'll have to add --moar-option to the configures of rakudo and nqp it seems

[21:12] <timotimo> wrong. nqp already has that

[21:15] <jnthn> It's not so much about "is GSoC done"; it's more "are the big pieces in place" and "is it doing OK with spectests and ecosystem"

[21:16] <jnthn> A merge a bit after 2014.07 gives us time to be happy that's the case.

[21:16] *** telex left
[21:16] *** Akagi201 joined
[21:16] <Mouq_> Does the jit slow down start-up noticeably?

[21:18] *** telex joined
[21:20] <Mouq_> std: q \  /  \  /  \  /  q  \  /  \  /  \  

[21:20] <camelia> std 0f2049c: OUTPUT«ok 00:01 123m␤»

[21:21] *** Akagi201 left
[21:22] <jnthn> Mouq_: Didn't measure, but probably not a lot, given it only JITs hot things, and producing machine code instead of specialized bytecode is only so much more work...

[21:22] <Mouq_> jnthn: Ok, cool :)

[21:22] *** BenGoldberg joined
[21:23] <Mouq_> jnthn: Thank you

[21:26] <jnthn> Getting too quiet here...

[21:26] <dalek> rakudo/nom: e0cbe53 | jnthn++ | src/vm/moar/Perl6/Ops.nqp:

[21:26] <dalek> rakudo/nom: Fix a .DEFINITE code-gen bug.

[21:26] <dalek> rakudo/nom: 

[21:26] <dalek> rakudo/nom: Should not blindly re-use registers that may belong to locals.

[21:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e0cbe53008

[21:26] *** dalek left
[21:27] <jnthn> ...so I merged lex2loc

[21:28] *** dalek joined
[21:28] <dalek> rakudo/nom: 14eedae | jnthn++ | src/vm/moar/ops/container.c:

[21:28] <dalek> rakudo/nom: Fix MSVC build.

[21:28] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/14eedaefb8

[21:28] *** ChanServ sets mode: +v dalek

[21:28] <timotimo> jnthn: nice :)

[21:31] <jnthn> Note that it's not that aggressive yet.

[21:31] <jnthn> It only does it for parameters and things that we bind to upon initialization.

[21:31] <timotimo> oh, i suppose that's all right

[21:31] <jnthn> Well, it's a good start :)

[21:32] <timotimo> at least the jit can work with lexicals by now, so having lexicals at all isn't going to make it bail any more afaict

[21:33] *** raiph left
[21:34] *** molaf left
[21:35] <dalek> rakudo/nom: 1f05e14 | (Timo Paulssen)++ | Configure.pl:

[21:35] <dalek> rakudo/nom: expose --moar-option in Configure.pl

[21:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1f05e14e7f

[21:35] <timotimo> this ought to be enough, right?

[21:35] *** _slade joined
[21:38] <jnthn> timotimo: Right.

[21:43] *** ivanshmakov is now known as ivanshmakov|RST

[21:45] *** _slade left
[21:46] <timotimo> it's a bit annoying to massage local commits into perl6-bench :\

[21:49] <vendethiel> .oO( I see you take good take of your commits )

[21:49] <timotimo> %)

[21:49] *** SevenWolf joined
[21:49] <vendethiel> care*. dammit

[21:49] *** ivanshmakov joined
[21:53] <timotimo> huh.

[21:53] <timotimo> i git clone the moarvm/moarvm.git which has my jit-merged branch in it manually and git checkout jit-merged works

[21:53] <timotimo> but when i clone it via the configure.pl with --gen-moar=jit-merged it doesn't work

[21:54] <timotimo> oh!

[21:54] <timotimo> japhb: --gen-moar clones a MoarVM into nqp/, but perl6-bench clones moarvm into ./

[21:55] *** anaeem1 left
[21:55] <timotimo> oh, suddenly it works much better :)

[21:56] <japhb> That sounds like someone did a copy-pasta from nqp-moar to rakudo-moar in the components build instructions.

[21:56] <japhb> Care to fix, SVP?

[21:56] *** ivanshmakov left
[21:56] *** ivanshmakov joined
[21:56] <timotimo> i'm fixing it

[21:56] <japhb> Thanks!

[21:57] *** ivanshmakov|RST left
[21:58] <japhb> timotimo, What did you mean by "it's a bit annoying to massage local commits into perl6-bench"?

[21:59] <timotimo> that was before i figured out that perl6-bench was hitting up github for each moarvm checkout

[21:59] <timotimo> and i got frustrated at trying to get my local "jit-merged" branch in there

[22:01] <dalek> perl6-bench: d8d5301 | (Timo Paulssen)++ | components.json:

[22:01] <dalek> perl6-bench: Configure.pl --gen-moar puts a moarvm under nqp/MoarVM, not moarvm.

[22:01] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/d8d5301d53

[22:01] <japhb> Ah.  Yeah, it's a major design feature that `bench setup` and `bench fetch` should be the only things doing network pulls (except for niecza, which I can't do much about, sadly).

[22:01] <japhb> And breaking that was :-(

[22:03] <japhb> timotimo++ for noticing and fixing it

[22:04] <timotimo> going to run a benchmark with rakudo-moar-jit now :)

[22:05] <timotimo> and a jitless rakudo-moar to compare it against

[22:05] <timotimo> this is going to be interesting :)

[22:05] <jnthn> timotimo: Given it can't JIT extops yet and just about everything in Rakudo contains one... :)

[22:05] <japhb> I bet you'll see a bigger difference with the respective nqp's.

[22:05] <timotimo> i suspect it'll be quite visible where OSR and the jit accepts the code and where either bails

[22:05] <timotimo> jnthn: oh damn! i forgot about that :(

[22:05] <jnthn> What japhb said though; at this point the NQPs may come out more itneresting.

[22:07] <timotimo> okay, i'll do those instead

[22:10] <masak> 'night, #perl6

[22:10] *** Akagi201 joined
[22:13] *** anaeem1_ joined
[22:15] <timotimo> japhb: got an idea how to make moarvm not need to hit the 'ternets for the submodules it includes?

[22:15] *** Akagi201 left
[22:15] <japhb> timotimo, thinking

[22:15] *** atroxaper joined
[22:16] <timotimo> Configure.pl of moarvm could be taught a "reuse-submodule-repositories" option or something

[22:17] <japhb> timotimo, I think it is possible by cloning into the proper 3rdparty/ subdirs and using `git submodule` carefully.

[22:18] <japhb> With a little experimentation, we ought to be able to come up with the magic sequence of clones and submodule commands so it Just Works.

[22:19] *** atroxaper left
[22:20] <japhb> Do any of the submodules recurse?

[22:20] <timotimo> right ... yay :|

[22:20] *** Akagi201 joined
[22:22] <japhb> I can try later, but if you want to try now, I'd do this:  1. Add each submodule as a component.  2.  `bench setup` to get the new components.  3. Try changing the rules for moarvm to clone them into the right 3rdparty directories before running configure.  4. Check if this Just Worked.  If not, we can try something else.  :-)

[22:22] *** Mouq_ left
[22:23] *** bluescreen100 joined
[22:23] <japhb> timotimo, and you can find the proper submodule clone locations from .gitmodules in the moarvm root.

[22:24] *** Mouq joined
[22:24] <timotimo> i can try that later, i'll put up the nqp comparison benchmarks first, though

[22:24] *** Akagi201 left
[22:26] *** bluescreen10 left
[22:27] *** ajr_ left
[22:29] <timotimo> http://t.h8.lv/p6bench/2014-07-12-nqp-jit.html and http://t.h8.lv/p6bench/2014-07-12-nqp-jit-ignored.html

[22:29] <timotimo> it seems like spesh and/or the jit bail on every of those

[22:29] <timotimo> japhb: i think i'll do the submodule pre-cloning stuff tomorrow rather than today and go get some rest

[22:29] *** jnap left
[22:30] *** jnap joined
[22:30] *** bluescreen10 joined
[22:31] <japhb> timotimo, Sleep well!

[22:31] <timotimo> will try :)

[22:34] *** _slade joined
[22:39] *** btyler_ left
[22:53] *** itz_ left
[22:55] *** rGeoffrey_ joined
[22:55] *** Rotwang left
[22:57] *** rurban1 joined
[22:58] *** rGeoffrey left
[22:58] *** rGeoffrey_ is now known as rGeoffrey

[23:02] *** kurahaupo joined
[23:02] *** jnap left
[23:08] *** dmol left
[23:12] *** anaeem1_ left
[23:14] *** Akagi201 joined
[23:19] *** Akagi201 left
[23:23] *** Akagi201 joined
[23:24] <woolfy> rjbs: thanks for the link and the info.  Next time I'm in the UK, I will ask for a Old Tom gin at the bar.  Or ask for a small bottle in a liquor shop.

[23:26] <woolfy> rjbs: next time we meet, I have to bring some super-old Dutch jenever.  I got a bottle of XO, and it almost tastes like old whisky.

[23:26] <woolfy> This is of course nothing related to Perl 6.  Sorry.

[23:27] * vendethiel is pretty sure beer is related to P6, at that point

[23:27] *** spider-mario left
[23:28] <woolfy> This is not about beer...  :-)

[23:28] *** Akagi201 left
[23:30] <vendethiel> drinks, still

[23:30] *** rurban1 left
[23:31] <woolfy> Indeed.

[23:32] *** Akagi201 joined
[23:33] <jnthn> Yeah, on topic... :P

[23:33] * jnthn almost froze his beer today while trying to cool it sufficiently...

[23:35] <woolfy> TimToady: we will try to tie as many things to linquistics, just to make you happy!  Dutch for beer is bier, German word is Bier.  French is bière.  It is all delicious, or lekker, or lecker, or bon.

[23:36] <woolfy> Ow, something Perl 6 related...

[23:37] <woolfy> Our French friend elbeho is visiting us in Echt.  He is now the 5th official board member of the YAPC Europe Foundation (congratulations are in place!), he is now officially listed at the Chamber of Commerce.

[23:37] <woolfy> And of course we have been drinking several types of beer with him...  but that's not the point, even though it was very nice.

[23:37] *** Akagi201 left
[23:38] <woolfy> I've shown him the book jnthn made about NQP (jnthn++) and the booklet that came with the course in april this year about Perl 6 by Damian Conway.  elbeho was very interested and decided he has to look into Perl 6 and try it out.

[23:38] <woolfy> Yay.

[23:38] <vendethiel> woolfy: mind asking him if he has a timeline for fpw2014 videos :P ?

[23:38] <woolfy> (now off to bed)(good night all)

[23:39] <woolfy> vendethiel: I will do that when we all wake up...  (hips)

[23:39] <vendethiel> thankies

[23:40] * psch just realized that (*****) is a valid closure

[23:41] <psch> std: say (*****)(<1 2 3>, 4)

[23:41] <camelia> std 0f2049c: OUTPUT«ok 00:01 128m␤»

[23:41] <psch> note sure if it's ** ** * or ** * **; not even sure it has to start with **

[23:41] <cognominal> elbeho++ woolfy++ lizmat++

[23:41] <psch> Whatever^n...

[23:42] *** Akagi201 joined
[23:42] <jnthn> psch: LTM menas it'll be ** if there's a choice

[23:43] <psch> jnthn: right. that includes the second set? i.e. if i wanted to multiple multidimensional Whatevers i'd have to have the parens? (disregarding the obvious cause for confusion without any spaces)

[23:43] <psch> err, spaces

[23:43] <psch> not parens

[23:44] <jnthn> Oh, I forgot about ** 

[23:44] <jnthn> Hmm :)

[23:44] <jnthn> m: say (*****)(<1 2 3>, 4)

[23:44] <camelia> rakudo-moar 1f05e1: OUTPUT«===SORRY!=== Error while compiling /tmp/qoXdp7mKab␤HyperWhatever (**) not yet implemented. Sorry. ␤at /tmp/qoXdp7mKab:1␤------> say (**⏏***)(<1 2 3>, 4)␤»

[23:44] <psch> as an aside, j-spectest is somewhere in t/integration

[23:44] <jnthn> Yeah, LTM wants ** as a term first.

[23:44] <vendethiel> Hyper* power hyper* ?

[23:45] <psch> vendethiel: right, (******) is valid too

[23:45] <vendethiel> .oO( when I thought I couldn't care less of whatever, the hyper one came to be ... )

[23:45] <psch> there's the line noise again... :)

[23:45] <vendethiel> you misspelled "perl" :P

[23:46] *** Akagi201 left
[23:47] <jnthn> Whatever can be really nice

[23:47] <vendethiel> it indeed can. I don't quite remember what hyper is supposed to do ...

[23:47] *** xragnar_ joined
[23:47] <jnthn> .map(*.name), .grep(*.type eq 'stout'), etc.

[23:47] *** xragnar is now known as Guest43495

[23:47] *** Guest43495 left
[23:47] *** xragnar_ is now known as xragnar

[23:47] <jnthn> No, me either... :)

[23:48] <psch> S02: "[HyperWhatever] is generally understood to be a multidimension form of * when that makes sense."

[23:48] <psch> i don't know how to figure out the line numbers :)

[23:48] <vendethiel> I love the "when that makes sense" part :D.

[23:48] <vendethiel> "put it there, if it makes sense"

[23:49] <flussence> .oO( "**()" means "generate the code I'm thinking of" )

[23:49] <psch> the examples explain it away as "-> *@x { map { $x { ... } }"

[23:49] <psch> where '...' is not the operator with the same name :)

[23:50] <flussence> "..." means "someone else, write the code I'm thinking of" :)

[23:50] <vendethiel> "..." has a pretty convoluted meaning ...

[23:51] *** Akagi201 joined
[23:51] <jnthn> The spec saying things like, "when it makes sense", is what makes working on a Perl 6 compiler so easy... :P

[23:52] <vendethiel> "so, uh, about the sense you were talking about earlier"...

[23:52] * vendethiel imagines TimToady with a greyed beard thinking of riddles to add in the spec :P

[23:52] <jnthn> "I decided it makes sense on a Tuesday"

[23:52] <psch> "don't care anymore--just shoot me"

[23:52] <psch> i have to say though, it seems rather understandable to me

[23:53] <psch> the HyperWhatever as it's spec'd, that is

[23:53] <psch> of course trying to use it might show more

[23:53] <jnthn> We just don't have so much multi-dim stuff around yet...

[23:53] <jnthn> It's one of the things I'm getting tired of us not having, though... :)

[23:54] <vendethiel> and when jnthn gets tired of something ... the ++ fear !

[23:54] <jnthn> Well, it means it's gradually climbing its way to the top of my "stuff I should work on" list

[23:55] * vendethiel hopes that list is shrinking

[23:55] *** Akagi201 left
[23:55] * vendethiel doesn't do much to help it shrink, though ...

[23:56] <psch> https://gist.github.com/peschwa/2b05db181f37ea55d458 # j-spectest results

[23:57] <psch> it doesn't look good, but i don't know if i can savely blame 32bit and -Xmx1800

[23:57] <psch> *safely

[23:58] <jnthn> psch: I doubt those fails are related to your patch

[23:58] <psch> the random "Missing or wrong version of dependency" really surprised me

[23:58] <jnthn> Yes, that is odd

[23:59] *** kweetal left
[23:59] <jnthn> Though the test probably is shelling out somewhere...

[23:59] <jnthn> But still

