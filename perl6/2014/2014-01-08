[00:04] *** mtk left
[00:06] *** thou left
[00:11] *** johnmilton left
[00:17] *** ajr_ left
[00:33] *** lizmat joined
[00:34] *** mavcunha left
[00:37] *** mavcunha joined
[00:47] *** berekuk left
[00:47] *** pecastro left
[00:47] *** btyler left
[00:48] <diakopter> the backlog tonight

[00:48] *** berekuk joined
[00:53] <[Coke]> japhb__: you about?

[00:53] <japhb__> [Coke], yes.  Currently servicing three (3) requests, plus four (4) queued.

[00:57] <[Coke]> one more: I want to clone rakudo locally, then when I need to test it, fetch updates, and clone a local copy. help on options to git appreciated.

[01:02] <japhb__> [Coke]: Roger that, give me a sec.

[01:03] *** jnap left
[01:03] <jnthn> [Coke]: cd /path/to/main/repo; git fetch; cd /path/to/workspace; rm -rf the-clone; git clone /path/to/main/repo the-clone # or so

[01:04] <jnthn> japhb__++ may be a cuter solution though :)

[01:06] <[Coke]> ah, so you're not using a mirror or a bare copy anywhere in there?

[01:08] <avuserow> [Coke]: you might be interested in git-new-workdir from the contrib directory of git.git: http://nuclearsquid.com/writings/git-new-workdir/

[01:08] <jnthn> [Coke]: /path/to/main/repo can be bare

[01:09] <jnthn> Haven't played with the mirroring stuff

[01:09] <jnthn> Though I suspect it is gonna land in one of the $dayjob git courses at some point so I'd better figure it out :)

[01:10] <[Coke]> I'll still with regular for now. Danke.

[01:10] <[Coke]> *stick

[01:10] <jnthn> pzh

[01:10] <jnthn> ok, time or some rest :)

[01:10] <jnthn> *for

[01:10] * jnthn hopes he actually manages to sleep tonight...

[01:10] <jnthn> &

[01:12] *** abnorman left
[01:12] *** berekuk left
[01:13] <japhb__> [Coke], I created a share directory, cloned parrot, nqp, and rakudo normally under that directory, and then use: https://gist.github.com/japhb/8309906

[01:13] <japhb__> My apologies for slow response ...

[01:14] *** Pleiades` left
[01:17] *** rindolf left
[01:20] *** berekuk joined
[01:23] *** Pleiades` joined
[01:30] <japhb__> [Coke], jnthn: IIRC, the reason perl6-bench does --mirror clones for the main repos had to do with working with multiple branches and detached HEADs.  Using normal clones for the main repos didn't work sanely in that case.  The (much more careful) clone and update code used in perl6-bench starts here:  https://github.com/japhb/perl6-bench/blob/master/bench#L35

[01:31] <japhb__> (That function and the next)

[01:31] <[Coke]> I'll try the simplest thing and see if it works.

[01:31] <japhb__> er, (That function and the next couple especially -- setup, fetch, and extract )

[01:34] *** hoverboard is now known as overflowing[_]

[01:35] <[Coke]> I wonder, if I manually put a copy of nqp/moar/parrot/whatever in place, if rakudo's configure.pl is still going to try to do a git pull

[01:36] <japhb__> It won't try to clone, but ISTR it will fetch and then checkout a particular rev.

[01:42] *** pmurias left
[01:42] *** berekuk left
[01:43] *** berekuk joined
[01:47] <[Coke]> working so far. Pugs is a mess, I think I need to kill it. :|

[01:48] <diakopter> to be fair, it was working ok on feather

[01:48] <dalek> nqp: e264d33 | diakopter++ | / (3 files):

[01:48] <dalek> nqp: add serialization tests for moar

[01:48] <dalek> nqp: review: https://github.com/perl6/nqp/commit/e264d33d3d

[01:49] <diakopter> uhm.  s/serialization/continuation/

[01:49] <diakopter> .oO( what as I working on again? )

[01:52] <[Coke]> ah, yes. I blame diakopter, then!

[01:53] <[Coke]> seriously, though, I am even less a haskell hacker than I am the other kinds. it needs some love.

[01:54] *** berekuk left
[01:54] <[Coke]> any particular reason that we check things out in "nqp,parrot", but "nqp,nqp/MoarVM" ?

[01:54] <japhb__> hugme: hug Pugs

[01:54] * hugme hugs Pugs

[01:55] *** berekuk joined
[01:55] *** Vlavv__ left
[01:57] <[Coke]> japhb__: only problem seems to be trying to clone and checkout a branch.

[01:57] <[Coke]> ... and Im getting kicked out. back laters.

[01:58] *** overflowing[_] left
[01:59] *** ssutch_ joined
[01:59] *** sorear_ left
[01:59] *** ssutch left
[02:01] *** xinming_ joined
[02:04] *** jnap joined
[02:04] *** xinming left
[02:05] *** berekuk left
[02:06] *** berekuk joined
[02:07] *** Timbus left
[02:08] *** jnap left
[02:09] *** Vlavv__ joined
[02:09] *** Timbus joined
[02:11] *** sorear joined
[02:13] *** Timbus left
[02:17] *** berekuk left
[02:18] *** berekuk joined
[02:21] <[Coke]> ... and --mirror does what I want here.

[02:23] *** Timbus joined
[02:26] <japhb__> [Coke], I suspect that eventually you'll end up converging on the way that perl6-bench does it, because that was pretty much arrived at via painful debugging ... but I completely understand not wanting to jump from zero to there.

[02:27] <[Coke]> not sure if you're also doing this, but I rebuild from scratch every day and don't install outside the build dir.

[02:28] *** berekuk left
[02:29] *** berekuk joined
[02:30] <[Coke]> huh. rakudo.jvm checks out a tag instead of leaving nqp at master.

[02:30] *** jnap joined
[02:39] <japhb> [Coke]: Same here (rebuild from scratch and don't install outside build dir).  The latter is part of why the update-rakudo is somewhat baroque -- it finds the current nom HEAD, locally clones a separate copy of Rakudo for each backend into rakudo-<git revision>, then clones the dependencies in each of them, builds them, bootstraps panda and some basic modules into them, and then finally if all went well swizzles rakudo-parrot and rakudo-jvm symlinks -- which all m

[02:40] <diakopter> which all m

[02:40] *** berekuk left
[02:41] *** berekuk joined
[02:41] <japhb> "which all my other aliases and scripts refer to."

[02:51] *** Alina-malina left
[02:52] <dalek> perl6-roast-data: 6bfd71b | coke++ | bin/moarborts.p5:

[02:52] <dalek> perl6-roast-data: Add moarborts one-shot script

[02:52] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/6bfd71b8e3

[02:52] <dalek> perl6-roast-data: 08bfae7 | coke++ | .gitignore:

[02:52] <dalek> perl6-roast-data: ignore this file that we create with the cron job.

[02:52] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/08bfae779e

[02:52] <dalek> perl6-roast-data: d805a37 | coke++ | / (8 files):

[02:52] <dalek> perl6-roast-data: Keep -one- copy of each repo needed

[02:52] <dalek> perl6-roast-data: 

[02:52] <dalek> perl6-roast-data: When building, first fetch once per repo,

[02:52] <dalek> perl6-roast-data: then clone locally.

[02:52] <dalek> perl6-roast-data: 

[02:52] <dalek> perl6-roast-data: japhb++ for inspiration

[02:52] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/d805a37403

[02:53] <[Coke]> well, there's a first pass that seems to do ok. haven't done a full run yet, but all the pieces seem ok. also cleaned up a few other things.

[02:54] <[Coke]> ... and NOW I remember the last thing I wanted to do.

[02:56] <diakopter> :)

[02:57] *** Exodist left
[02:57] *** FROGGS[mobile] left
[02:57] *** FROGGS[mobile] joined
[02:57] *** berekuk left
[02:58] *** berekuk joined
[02:58] <dalek> perl6-roast-data: 4392d52 | coke++ | bin/niecza.sh:

[02:58] <dalek> perl6-roast-data: fix niecza clone

[02:58] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/4392d52baa

[02:58] <dalek> perl6-roast-data: f277fb6 | coke++ | bin/ (5 files):

[02:58] <dalek> perl6-roast-data: treat roast like all the other repos.

[02:58] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/f277fb62ef

[02:59] * [Coke] kicks this off now to see if it survives, and will check in later.

[02:59] <[Coke]> ~~ japhb++

[03:01] *** fgomez joined
[03:08] *** overflowing[_] joined
[03:08] *** berekuk left
[03:09] *** berekuk joined
[03:10] *** overflowing[_] is now known as hoverboard

[03:20] *** berekuk left
[03:20] *** berekuk joined
[03:21] *** fgomez left
[03:25] *** fgomez joined
[03:27] *** mavcunha left
[03:30] *** laidback_01_ joined
[03:30] *** laidback_01 left
[03:31] *** berekuk left
[03:32] *** berekuk joined
[03:34] *** ssutch_ left
[03:36] *** laidback_01_ left
[03:36] *** laidback_01 joined
[03:42] *** berekuk left
[03:43] *** berekuk joined
[03:51] *** jnap left
[03:52] <[Coke]> [A

[03:54] *** berekuk left
[03:55] *** berekuk joined
[03:57] *** V_S_C joined
[03:59] <V_S_C> @tadzik sorry, that was almost 2am my time, & I was sleepy..

[04:04] *** Celelibi_ is now known as Celelibi

[04:06] *** berekuk left
[04:06] *** berekuk joined
[04:07] *** hoverboard left
[04:12] *** finanalyst left
[04:17] *** berekuk left
[04:18] *** berekuk joined
[04:20] *** cognominal left
[04:20] *** cognominal joined
[04:22] *** jnap joined
[04:26] *** jnap left
[04:28] *** berekuk left
[04:29] *** berekuk joined
[04:35] *** preflex left
[04:35] *** preflex joined
[04:36] *** ChanServ sets mode: +v preflex

[04:40] *** berekuk left
[04:41] *** berekuk joined
[04:51] *** berekuk left
[04:52] *** berekuk joined
[04:52] *** FROGGS left
[04:57] *** V_S_C left
[05:02] *** berekuk left
[05:03] *** abnorman joined
[05:03] *** berekuk joined
[05:04] *** Exodist joined
[05:10] *** FROGGS joined
[05:14] *** berekuk left
[05:15] *** berekuk joined
[05:20] *** aindilis joined
[05:23] *** jnap joined
[05:23] *** [Sno] left
[05:26] *** berekuk left
[05:27] *** berekuk joined
[05:27] *** jnap left
[05:31] *** thou joined
[05:31] *** Exodist left
[05:38] *** berekuk left
[05:38] *** berekuk joined
[05:42] *** Exodist joined
[05:45] *** atroxaper joined
[05:49] *** berekuk left
[05:50] *** berekuk joined
[06:01] *** berekuk left
[06:02] *** berekuk joined
[06:05] *** mcglk joined
[06:05] *** Alina-malina joined
[06:06] *** atrodo left
[06:07] *** dylanwh left
[06:13] *** berekuk left
[06:14] *** berekuk joined
[06:19] *** mcglk left
[06:21] *** mcglk joined
[06:24] *** berekuk left
[06:25] *** berekuk joined
[06:27] *** grep0r left
[06:29] *** grep0r joined
[06:30] <moritz> \o

[06:31] *** darutoko joined
[06:35] *** berekuk left
[06:36] <raydiak> o/

[06:36] *** berekuk joined
[06:38] *** [Sno] joined
[06:47] *** aindilis left
[06:47] *** berekuk left
[06:48] *** berekuk joined
[06:52] *** berekuk left
[06:53] *** berekuk joined
[06:53] *** BenGoldberg left
[06:55] *** fgomez left
[06:58] *** ruoso left
[06:58] *** ruoso joined
[06:59] *** berekuk left
[06:59] *** berekuk joined
[07:00] *** thou left
[07:01] *** atrodo joined
[07:02] *** dylanwh joined
[07:02] *** FROGGS[mobile] left
[07:02] *** FROGGS[mobile] joined
[07:07] *** sftp left
[07:08] *** sftp joined
[07:10] *** berekuk left
[07:10] *** berekuk joined
[07:13] *** xinming_ left
[07:14] *** xinming joined
[07:14] *** cognominal left
[07:15] *** cognominal joined
[07:16] *** c1sung left
[07:16] *** walklan joined
[07:17] *** walklan left
[07:18] *** c1sung joined
[07:20] *** walklan joined
[07:21] *** berekuk left
[07:21] *** walklan left
[07:21] *** berekuk joined
[07:24] *** jnap joined
[07:29] *** jnap left
[07:32] *** berekuk left
[07:33] *** berekuk joined
[07:36] *** hummeleBop joined
[07:37] *** FROGGS left
[07:39] *** V_S_C joined
[07:41] *** V_S_C left
[07:43] *** berekuk left
[07:44] *** berekuk joined
[07:45] *** kaleem joined
[07:46] *** baest_ is now known as baest

[07:53] *** FROGGS joined
[07:53] *** darutoko left
[07:55] *** berekuk left
[07:56] *** berekuk joined
[08:01] *** labster left
[08:01] *** labster joined
[08:02] *** zakharyas joined
[08:06] *** berekuk left
[08:07] *** berekuk joined
[08:09] *** dayangkun left
[08:17] *** berekuk left
[08:18] *** berekuk joined
[08:21] *** dayangkun joined
[08:25] *** SamuraiJack_ joined
[08:25] *** jnap joined
[08:26] *** FROGGS[mobile] left
[08:26] *** FROGGS[mobile] joined
[08:29] *** berekuk left
[08:29] *** jnap left
[08:30] *** berekuk joined
[08:41] *** berekuk left
[08:42] *** berekuk joined
[08:47] *** xinming_ joined
[08:49] *** xinming left
[08:50] *** sqirrel joined
[08:52] *** berekuk left
[08:53] *** berekuk joined
[08:59] *** sqirrel left
[09:01] *** sqirrel joined
[09:03] *** berekuk left
[09:07] *** berekuk joined
[09:15] *** berekuk left
[09:16] *** berekuk joined
[09:17] *** fhelmberger joined
[09:19] *** darutoko joined
[09:26] *** jnap joined
[09:27] *** berekuk left
[09:28] *** kivutar joined
[09:28] *** berekuk joined
[09:31] *** jnap left
[09:32] *** SamuraiJack__ joined
[09:34] *** SamuraiJack_ left
[09:38] *** berekuk left
[09:39] *** berekuk joined
[09:40] *** pecastro joined
[09:41] *** kaleem left
[09:42] *** kaleem joined
[09:42] *** dakkar joined
[09:43] *** finanalyst joined
[09:44] *** pecastro left
[09:44] *** pecastro joined
[09:50] *** berekuk left
[09:51] *** berekuk joined
[09:56] *** FROGGS[mobile] left
[09:56] *** FROGGS[mobile] joined
[10:02] *** berekuk left
[10:02] *** FROGGS[mobile] left
[10:02] *** berekuk joined
[10:03] *** kivutar left
[10:07] *** V_S_C joined
[10:08] *** SamuraiJack__ left
[10:11] <V_S_C> @tadzik today I tried starting with rakudo-star-2013.09.tar.gz

[10:12] <V_S_C> As the stack trace was too long for command prompt

[10:12] <tadzik> did it make a difference?

[10:12] <tadzik> uh

[10:12] <V_S_C> I tried reinstalling panda

[10:13] <tadzik> well, Rakudo Star should have panda included

[10:13] <V_S_C> & got the same stack trace as yesterday with similar numbers at the end of lines

[10:13] <tadzik> no need to install it again

[10:13] *** berekuk left
[10:13] <V_S_C> yes it did

[10:13] <tadzik> I've never seen an error like you showed yesterday, I've no idea where it might come from

[10:14] *** berekuk joined
[10:14] <V_S_C> Is there some link outlining manual modules usage

[10:15] <tadzik> you can install them with ufo

[10:15] <tadzik> ufo should be bundled with rakudo star as well

[10:15] <V_S_C> Maybe I can share my toolchain details so rakudo team might know

[10:16] <V_S_C> I'm using ActiveState Perl 64 bit on Windows 2008R2

[10:16] <V_S_C> & the Visual Studio Express Edition

[10:17] *** spider-mario joined
[10:17] <V_S_C> VS2013 x64 Cross Tools Command Prompt

[10:17] <tadzik> I've absolutely zero experience with windows, sorry

[10:17] <tadzik> but I know at least 3 people in here who might know something :)

[10:18] <V_S_C> thats alrite

[10:18] <V_S_C> cause I learnt scripting on bash but the resources I got are MS

[10:19] <V_S_C> & its one more reason I'm interested in PERL

[10:19] <V_S_C> I dont know anything about PowerShell :)

[10:20] <V_S_C> I tried using rakudo * pre-built binary

[10:21] <V_S_C> but it didnt have ICU

[10:21] <V_S_C> so panda install FastCGI said no ICU installed

[10:21] <V_S_C> thats why I built it on my own

[10:22] <V_S_C> I know some C++

[10:24] *** berekuk left
[10:25] *** berekuk joined
[10:26] *** jnap joined
[10:26] *** rindolf joined
[10:29] <hoelzro> morning #perl6

[10:31] *** jnap left
[10:34] <V_S_C> the stack trace from the included Panda was too long.

[10:35] *** daniel-s_ joined
[10:36] *** berekuk left
[10:36] *** berekuk joined
[10:47] *** berekuk left
[10:48] *** berekuk joined
[10:54] <V_S_C> @tadzik kindly follow up with the 3 persons. I'll check-in before calling it a day. From my time-zone I can only stay-in on the inactive hours here.

[10:55] <V_S_C> For now I'm starting with just copying files to the respective directories..

[10:56] *** V_S_C left
[11:02] <masak> noon, #perl6

[11:04] *** kaleem left
[11:05] *** kaleem joined
[11:20] *** salv0 joined
[11:26] *** berekuk left
[11:27] *** jnap joined
[11:32] *** jnap left
[11:43] *** mavcunha joined
[11:43] *** berekuk joined
[11:43] *** usernotexists joined
[11:52] *** AW3i joined
[11:52] *** berekuk left
[11:52] *** AW3i left
[11:53] *** berekuk joined
[11:59] *** AW3i joined
[12:06] *** berekuk left
[12:08] *** berekuk joined
[12:13] *** Woodi left
[12:26] *** sqirrel left
[12:28] *** jnap joined
[12:29] *** berekuk left
[12:30] *** berekuk joined
[12:33] *** jnap left
[12:34] *** berekuk left
[12:37] *** berekuk joined
[12:49] *** berekuk left
[12:50] *** berekuk joined
[12:50] *** denis_boyun joined
[12:56] *** AW3i left
[13:00] *** AW3i joined
[13:03] *** berekuk left
[13:04] *** berekuk joined
[13:08] *** kbaker joined
[13:15] *** berekuk left
[13:15] *** berekuk joined
[13:15] <moritz> noon+2h, #perl6 :-)

[13:21] <masak> n+2h, moritz 

[13:23] <diakopter> n+

[13:23] <tadzik> n++

[13:23] <diakopter> n++++

[13:24] <diakopter> nhh

[13:26] <dalek> perl6-roast-data: e8a1465 | coke++ | bin/cull:

[13:26] <dalek> perl6-roast-data: Track log directory change

[13:26] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/e8a1465aa2

[13:26] *** berekuk left
[13:27] *** berekuk joined
[13:29] *** jnap joined
[13:30] *** daniel-s_ left
[13:30] *** kaleem left
[13:33] *** jnap left
[13:38] *** Piers left
[13:46] *** PacoAir joined
[14:00] <[Coke]> [A

[14:05] *** Alina-malina left
[14:07] *** Alina-malina joined
[14:15] *** kivutar joined
[14:17] *** AW3i left
[14:18] *** berekuk left
[14:36] <dalek> nqp: 74d93ae | (Tobias Leich)++ | t/qregex/rx_metachars:

[14:36] <dalek> nqp: strip U+180e from \s tests (Mongolian Vowel Separator)

[14:36] <dalek> nqp: review: https://github.com/perl6/nqp/commit/74d93aeb6d

[14:37] *** FROGGS left
[14:39] *** notjack joined
[14:39] *** jnap joined
[14:40] *** zakharyas left
[14:40] *** dylanwh left
[14:40] *** atrodo left
[14:40] *** abnorman left
[14:40] *** preflex left
[14:43] *** zakharyas joined
[14:43] *** dylanwh joined
[14:43] *** atrodo joined
[14:43] *** abnorman joined
[14:43] *** preflex joined
[14:43] *** dickson.freenode.net sets mode: +v preflex

[14:47] *** Guest65081 left
[15:04] *** ajr joined
[15:04] *** ajr is now known as Guest89375

[15:04] *** Guest89375 is now known as ajr_

[15:05] *** btyler joined
[15:07] *** bluescreen10 joined
[15:23] <masak> FROGGS: so -- wait -- \x180e is in both \h and \v, but *not* in \s ?

[15:24] <masak> (or did you mean to remove it from \h and \v as well?)

[15:24] <masak> actually, two things surprise me here:

[15:24] <masak> (a) I thought \s was the union of \h and \v (but now \x180e is in the latter two but not in the former)

[15:25] <masak> (b) I thought \h and \v were disjoint (but I see \x180e in both)

[15:26] *** kaleem joined
[15:27] <notjack> does Larry do SOTO anymore?

[15:28] *** thou joined
[15:28] *** [Sno] left
[15:29] <masak> yes.

[15:30] <notjack> The latest I can find is '07 - where are the newer ones archived?

[15:30] <notjack> or, in particular, is there one for last year?

[15:33] *** treehug88 joined
[15:33] <masak> yes.

[15:33] <masak> but I don't believe they've been archived for a while.

[15:33] *** logie__ left
[15:34] <masak> archiving is subject to someone's volunteering to archive it...

[15:34] *** denis_boyun_ joined
[15:35] *** grondilu left
[15:35] *** denis_boyun left
[15:36] *** logie_ joined
[15:38] <[Coke]> so... every rakudo test that is todo'd or skipped should have an RT, aye?

[15:38] <notjack> that's sad

[15:38] <[Coke]> don't be sad, be a volunteer!

[15:38] <masak> notjack: so, I'll count on you recording the SOTO for 2014, then?

[15:38] <[Coke]> then you'll be too tired to be sad. :P

[15:38] <[Coke]> but yes, it's sad.

[15:39] <notjack> no, I'm too sad to volunteer.  

[15:39] * notjack curls up in a ball

[15:39] <btyler> I think the 2013 edition is on youtube? it was given at a yapc, right?

[15:40] *** fhelmberger left
[15:41] <notjack> just searched YouTube for "yapc state of the onion 2013".  Got "The Velociraptor of Christmas Future".  Not what I was looking for, but seems apt.

[15:42] <masak> notjack: mst tends to give "state of the velociraptor" talks on YAPCs.

[15:42] <masak> mst++, I mean.

[15:43] *** FROGGS joined
[15:43] <masak> notjack: at least part of the reason for him doing so is filling in the visionary/guiding-light vacuum left as Larry started focusing more on Perl 6 than Perl 5.

[15:43] <masak> FROGGS: http://irclog.perlgeek.de/perl6/2014-01-08#i_8091728

[15:44] <FROGGS> masak: correct

[15:45] <FROGGS> that is why I asked (in #moarvm) how I am supposed to handle that

[15:46] <masak> FROGGS++

[15:46] *** grondilu joined
[15:46] <masak> I missed that.

[15:46] <FROGGS> jnthn said it would be okay for nqp to just make the test pass, but not for roast

[15:46] <FROGGS> so, that thing is not whitespace anymore but has zero width

[15:46] <notjack> picking a velociraptor as a colophon is a positive indicator that he's crazy enough to do the job

[15:46] <FROGGS> see http://www.unicode.org/L2/L2013/13004-vowel-sep-change.pdf

[15:47] <benabik> .oO( colomon's a velociraptor? ...  oh, coloPHon )

[15:48] <[Coke]> for roast, I think the right answer is to either:

[15:48] <[Coke]> 1) make the tests work for -any- version of unicode implementation in the wild might use, as long as they're "real unicode"

[15:49] <[Coke]> 2) conditionalize the tests based on which version of unicode a given implementation is providing.

[15:49] <colomon> benabik: pretty sure I'm too big to be a velociraptor

[15:49] *** berekuk joined
[15:49] <[Coke]> (perl6-roast-data)... getting those intermediate git repos setup was far less satisfying than I hoped. (it's all hidden behind a cron job that already takes forever. :P)

[15:54] *** berekuk left
[15:58] *** Psyche^ joined
[16:03] *** finanalyst left
[16:03] *** Psyche^_ left
[16:06] * FROGGS waits for a new aborts.md to appear :o)

[16:13] *** REPLeffect joined
[16:16] *** atroxaper left
[16:17] *** Piers_ joined
[16:34] *** kaleem left
[16:34] <[Coke]> sooon.

[16:36] <[Coke]> S29...

[16:37] <[Coke]> S32...

[16:37] <FROGGS> :o)

[16:38] *** [Sno] joined
[16:39] <masak> this is so exciting!!!

[16:40] <FROGGS> it is

[16:41] <diakopter> notjack: I can confirm they removed the camera from the tripod before Larry gave the soto this year at oscon

[16:42] <diakopter> er, last year now I suppose

[16:44] <masak> but only to get closeups of Larry, right? :)

[16:45] *** berekuk joined
[16:45] *** zakharyas left
[16:45] <diakopter> I looked around but didn't see anyone holding up a camera

[16:46] <masak> aww :/

[16:46] <diakopter> (and my phone was dead) :(

[16:46] <diakopter> it was mostly a repeat of yapc though

[16:47] <[Coke]> FROGGS: ... but now I have to head to lunch. You'll get it after I get back. :)

[16:47] <diakopter> (both na and eu)

[16:47] <FROGGS> [Coke]: have a nice one :o)

[16:47] <diakopter> er. maybe I'm wrong on similarity to yapc eu/na. my memory is poor.

[16:48] <diakopter> notjack: http://www.youtube.com/watch?v=tTbVPb-NhLU

[16:50] <arnsholt> Hmm. The Catalan numbers grow O(n!), don't they?

[16:55] <arnsholt> And I guess n^(n-2) is O(n^n), but what is the relation of that to O(n!)?

[16:55] <arnsholt> masak: You happen to know this off-hand?

[16:56] *** berekuk left
[16:56] <masak> hm.

[16:57] <masak> feels like n^n would win, but I'm not sure.

[16:57] <arnsholt> Yeah, I'm not sure either

[16:57] <arnsholt> Doesn't matter though

[16:58] <arnsholt> Both of them are bad enuogh that I can say that enumerating that many options is intractable =)

[16:58] <benabik> I think 2^n < n! < n^n

[16:58] <masak> well, now you've made me interested :)

[16:58] <masak> what benabik said.

[16:59] <masak> &

[16:59] *** Piers_ is now known as pdcawley

[16:59] <arnsholt> Well, the Catalan numbers I get as the number of possible parse trees for a sentence when using a CFG

[17:00] <benabik> 2! = 2, 2^2 = 4.  n! = n (n-1)!, n^n = n (n-1)^n = n (n-1) (n-1)^(n-1)

[17:00] <arnsholt> n^(n-2) is the number of parses using a different notion of syntax, where the words are nodes and the parse is a directed tree over the nodes

[17:01] <arnsholt> Right, right. So n^n grows faster

[17:16] <notjack> n^n grows faster than n! and 2^n because n^n ~~ n*n*n*n ... and n! ~~ n*(n-1)*(n-2)... 2^n ~~ 2*2*2*2

[17:16] *** salv0 left
[17:17] *** berekuk joined
[17:17] *** mohij joined
[17:18] <arnsholt> notjack: Durr. That is of course the simplest argument. Cheers!

[17:18] <arnsholt> notjack++

[17:19] *** berekuk left
[17:36] <notjack> how would one express n^n / n! in point-free p6?

[17:37] * moritz doesn't even know what point-free means

[17:38] <notjack> the OEIS says the quotient grows as exp(pi * (2*n + 1/3) )

[17:38] <notjack> without variables

[17:38] *** berekuk joined
[17:38] <moritz> but parameters are allowed?

[17:38] <moritz> $N ** $N / ([+] .. $N)

[17:38] <notjack> parameters are just bound varialbes

[17:38] <moritz> $N ** $N / ([+] 1 .. $N)

[17:39] *** locsmif joined
[17:39] <moritz> parameters are also read-only by default

[17:39] <notjack> oh yeah, p6 doesn't have ! ... so that it can have a bunchb of tutorials bragging how easy it is to implement ! in p6 ;)

[17:40] <notjack> what's the perlbot's name?

[17:40] *** berekuk left
[17:40] <moritz> though of course the implementation of reduction contains variables

[17:40] <moritz> p: given 8 { say $_ ** $_ / ([*] 1 .. $_) }

[17:40] <camelia> rakudo-parrot 8a486a: OUTPUT«416.101587␤»

[17:40] <notjack> r: sub {^n ** ^n / ([+] 1..^n)} 10

[17:40] <camelia> rakudo-jvm 8a486a: OUTPUT«===SORRY!=== Error while compiling /tmp/KPt2piUns9␤HyperWhatever (**) not yet implemented. Sorry. ␤at /tmp/KPt2piUns9:1␤------> sub {^n **⏏ ^n / ([+] 1..^n)} 10␤»

[17:40] <camelia> ..rakudo-parrot 8a486a: OUTPUT«===SORRY!=== Error while compiling /tmp/zl0NwDqTgz␤HyperWhatever (**) not yet implemented. Sorry. ␤at /tmp/zl0NwDqTgz:1␤------> sub {^n **⏏ ^n / ([+] 1..^n)} 10␤»

[17:40] <notjack> oh, given is neat

[17:41] <notjack> how is that different from a sub invocation?

[17:41] <notjack> I guess you don't actually write sub...

[17:41] <moritz> correct

[17:41] <notjack> a subliminal sub

[17:41] <moritz> it's just a block

[17:42] <moritz> so it's not named, and immediately invoked, and transpared to return

[17:43] *** pecastro left
[17:43] <notjack> r: given chance {$_/2;}

[17:43] <camelia> rakudo-parrot 8a486a: OUTPUT«===SORRY!=== Error while compiling /tmp/QK5ZSMKlwv␤Missing block␤at /tmp/QK5ZSMKlwv:1␤------> given chance {$_/2;}⏏<EOL>␤    expecting any of:␤        postfix␤        statement end␤        statement mo…»

[17:43] <camelia> ..rakudo-jvm 8a486a: OUTPUT«===SORRY!=== Error while compiling /tmp/j8Sb8t1mvy␤Missing block␤at /tmp/j8Sb8t1mvy:1␤------> given chance {$_/2;}⏏<EOL>␤    expecting any of:␤        postfix␤        statement end␤        statement modif…»

[17:43] <notjack> perl won't give me half a chance :(

[17:43] <masak> if I'm allowed to use $_, I can write it in point-free.

[17:44] <notjack> you just did, didn't you?

[17:44] <notjack> or rather moritz++ did

[17:44] <masak> oh, yes.

[17:44] <masak> moritz++

[17:44] * masak fades out again

[17:44] <notjack> I was thinking more along the lines of a fork in J, a-la ^~ % !

[17:46] * moritz doesn't J

[17:47] <notjack> http://www.jsoftware.com/zippy.gif

[17:48] <notjack> ^~ means n^n (in general, infix_operator~ x means x infix_operator x)

[17:48] <moritz> :-)

[17:48] <notjack> the fork then means (^~ x) % (! x)

[17:48] <notjack> except you don't need the x....

[17:49] <moritz> that kinda appeals to me

[17:50] *** mcglk left
[17:50] <notjack> I'm sure it can be done rather simply with a grammar

[17:50] <notjack> J's parser table only contains 9 rules and 2 exceptions

[17:51] <notjack> I've made the attempt a couple times over the years as p6 has matured

[17:51] <notjack> but never made much progress

[17:51] <notjack> How's p6's current performance over arrays?

[17:52] <moritz> rakudo's: not good

[17:52] <moritz> niecza's is much better

[17:52] *** SamuraiJack__ joined
[17:52] <timotimo> playing with nqp-level arrays should be much faster, though, so if you implement your J compiler in nqp, maye it'll have acceptable speed

[17:52] <timotimo> well, the compiler doesn't have to be in nqp, but the runtime could. or directly in QAST

[17:53] <notjack> s/compiler/interpreter/

[17:53] *** berekuk joined
[17:53] <moritz> yes, NQP is much faster

[17:53] <notjack> I think it'd be sig. work to get acceptable performance, because I'd have to reimplement arrays

[17:54] <timotimo> oh?

[17:54] <timotimo> is nqp::list not good for your purposes?

[17:54] <notjack> J's fundamental datatype is [number_of_dimensions,[array of dimension lengths],[ravel of value array]]

[17:54] <timotimo> a ravel is a flattened array?

[17:54] <notjack> i.e. it's rectilinear/orthotopic

[17:55] <timotimo> i don't know either of those words :D

[17:55] <notjack> J doesn't do the sub-array or ragged-array thing

[17:55] <notjack> uh, rectangular... but more so

[17:55] <notjack> yes, a ravel is a flattened array

[17:55] <timotimo> in my imagination, something that's more so than a rectangle is a square :\

[17:55] <notjack> haha

[17:56] <notjack> it's an N-dimensional rectangle

[17:56] <timotimo> ah

[17:56] <timotimo> so a line, rectangle, block, ...

[17:56] <notjack> sub-lists must all have the same length

[17:56] <notjack> as must their sub-lists

[17:56] <notjack> yes

[17:56] <timotimo> what's the english mathematical term for the block shape again?

[17:56] <notjack> prism?

[17:56] <timotimo> hm, not quite what i thought of

[17:56] <grondilu> parallelipiped

[17:57] <timotimo> unless you limit it to "a prism of a rectangle"

[17:57] <notjack> I thought that was a sleeping walrus...

[17:57] <timotimo> grondilu: that doesn't have to have 90 degree angles in the corners, does it?

[17:57] <timotimo> i thought the parallelpiped is the 3d version of a parallelogram

[17:57] <grondilu> timotimo: oops indeed

[17:57] <timotimo> :)

[17:57] <notjack> orthotope

[17:57] <notjack> adjective: orthotopic

[17:58] <timotimo> ah, so that's exactly the thing you said before

[17:58] * timotimo only had german math class

[17:58] <notjack> yes; I thought you meant specifically 3D

[17:58] <notjack> (line, rectangle, 3d-prism-block-thing, 4d-thing)

[17:58] <timotimo> ah!

[17:59] *** dakkar left
[17:59] *** SamuraiJack joined
[17:59] <timotimo> "Cuboid", says wikipedia

[17:59] *** zakharyas joined
[18:00] *** SamuraiJack__ left
[18:00] <grondilu> yep, found it as well.  It's also called "rectangular parallelepiped".  I was not far then.

[18:01] <notjack> that sounds like a very uncomfortable walrus

[18:01] <notjack> shades of bonsai kitten

[18:02] <timotimo> yup :)

[18:03] *** berekuk left
[18:04] <notjack> I think "bonsai walrus" is the first thing I've googled in a decade that didn't result in an exact image of what I was googling for

[18:05] *** berekuk joined
[18:06] *** spider-mario left
[18:09] *** ajr_ left
[18:11] *** jnap left
[18:12] *** mcglk joined
[18:15] *** labster left
[18:17] *** berekuk left
[18:18] *** berekuk joined
[18:18] *** usernotexists left
[18:22] *** beastd joined
[18:27] *** jnap joined
[18:27] *** zakharyas left
[18:28] *** SamuraiJack left
[18:34] *** sqirrel joined
[18:40] *** labster joined
[18:42] *** hoverboard joined
[18:45] *** hummeleBop left
[18:46] *** berekuk left
[18:46] *** treehug88 left
[18:47] *** treehug88 joined
[18:50] *** pecastro joined
[18:51] *** darutoko left
[18:51] *** berekuk joined
[18:56] *** berekuk left
[18:57] *** berekuk joined
[19:01] *** berekuk left
[19:05] <masak> interesting. http://jlongster.com/Stop-Writing-JavaScript-Compilers--Make-Macros-Instead

[19:06] * masak likes the way to define macros

[19:06] * masak (slightly) dislikes the solution to hygiene

[19:08] <segomos_> masak: thanks for the link

[19:10] *** hoverboard is now known as baller

[19:16] *** ajr joined
[19:17] *** ajr is now known as Guest36368

[19:17] *** Guest36368 is now known as ajr_

[19:18] *** baller is now known as hoverboard

[19:19] * PerlJam reads to find out how hygiene is accomplished in js

[19:20] *** hoverboard is now known as baller

[19:22] *** baller is now known as hoverboard

[19:24] *** dmol left
[19:25] *** dmol joined
[19:35] <moritz> masak: interesting link, thanks for sharing

[19:39] *** ssutch joined
[19:53] *** ivanshmakov left
[19:55] *** Rotwang joined
[20:00] *** abnorman left
[20:07] <masak> there's a HN discussion too: https://news.ycombinator.com/item?id=7025261

[20:15] *** abnorman joined
[20:17] *** espadrine left
[20:19] *** hoelzro left
[20:19] *** hoelzro joined
[20:24] *** mohij left
[20:26] *** LordVorp joined
[20:30] *** hoverboard left
[20:32] *** mohij joined
[20:38] * masak finds himself wanting a hybrid of 'rename' and 'git mv'... :/

[20:39] <moritz> masak: patch rename to accept an option for a different rename command

[20:39] <moritz> masak: so that you can call rename -c 'git mv' 's/a/X/' *

[20:40] <dalek> rakudo/moar-support: 9333da3 | jnthn++ | src/core/GatherIter.pm:

[20:40] <dalek> rakudo/moar-support: Make gather properly lazy, using continuations.

[20:40] <dalek> rakudo/moar-support: 

[20:40] <dalek> rakudo/moar-support: This eliminates the cheating implementation we've used so far.

[20:40] <dalek> rakudo/moar-support: review: https://github.com/rakudo/rakudo/commit/9333da3346

[20:43] <[Coke]> nice.

[20:44] <[Coke]> From reading that it looks like the fix was "do stuff in nqp". :)

[20:45] <dalek> nqp: 624dae2 | jnthn++ | t/moar/01-continuations.t:

[20:45] <dalek> nqp: Todo two continuation tests on Moar.

[20:45] <dalek> nqp: 

[20:45] <dalek> nqp: Would be good to look into them at some point, but they don't cover

[20:45] <dalek> nqp: things that Rakudo depends on for gather/take.

[20:45] <dalek> nqp: review: https://github.com/perl6/nqp/commit/624dae2b50

[20:45] <jnthn> [Coke]: Well, it was also "implement continuations in Moar" :)

[20:45] <jnthn> Which is what I've worked on last night / today.

[20:49] <raydiak> r: my $t = now; for 1..1e4 {}; say now - $t;

[20:49] <camelia> rakudo-jvm 8a486a: OUTPUT«0.798␤»

[20:49] <camelia> ..rakudo-parrot 8a486a: OUTPUT«2.6250796␤»

[20:49] <raydiak> wish my machine performed like that :P

[20:52] <raydiak> anyone know what kind of box the eval bot runs on?

[20:52] *** rindolf left
[20:53] <moritz> raydiak: dual core box from digital ocean

[20:54] <moritz> 2GHz 64bit CPU

[20:55] <raydiak> so it's not a VPS?

[20:55] *** cxreg2 is now known as cxreg

[20:55] <moritz>  /proc/cpuinfo says: model name      : QEMU Virtual CPU version 1.0

[20:55] <raydiak> mine is DO also, but the $5/mo plan, and I get about 20% of that performance :)

[20:56] <FROGGS> my timings: :j(1.465), :r(1.2681967), :m(20.565718) # Intel(R) Core(TM) i5-3320M CPU @ 2.60GHz

[20:56] <raydiak> thanks guys...data points are exactly what I was looking for :)

[20:57] <moritz> 21s on moar on my laptop

[20:57] *** sqirrel left
[20:57] * moritz doesn't have perl-j or -p built atm

[20:57] <FROGGS> awww, shame on you! :P

[20:58] <jnthn> Timing stuff on Rakudo on Moar at the moment is going to yield mostly awful results thanks to the binder stuff being slow-pathed...

[20:58] <FROGGS> sure sure

[20:58] <jnthn> That's the first thing I'll work on once we get spectest in shape. :)

[20:58] <moritz> masak: if you want to patch rename, it's in this distribution: https://metacpan.org/pod/release/RMBARKER/File-Rename-0.20/rename.PL

[20:58] <raydiak> I was wondering what was making the new Pray preview I'm working on so slow...lo and behold, it's not the string concat on JVM, but the time required to run the loop itself

[20:59] <raydiak> (even if it's empty)

[20:59] <FROGGS> I hope nobody thinks that this is The High Performance Build of MoarVM (TM)

[20:59] <moritz> raydiak: try  loop (my int $x = 0; $x < $limit; $x = $x + 1) { ... }  instead of for (1..$limit) { }

[21:00] <moritz> raydiak: should be 5x or 10x faster

[21:01] <raydiak> moritz++: you've saved the day!

[21:01] <moritz> raydiak: don't take my word, measure :-)

[21:01] *** pecastro left
[21:02] <raydiak> moritz: did before I responded :)

[21:02] *** dayangkun left
[21:03] <[Coke]> jnthn: spectest in shape: what percentage counts for that?

[21:04] <jnthn> [Coke]: > 99% :)

[21:05] <jnthn> bbi20

[21:11] *** notjack left
[21:11] <[Coke]> jnthn: I assume that it won't count if I switch r.jvm to use the eval server and it dies again. :)

[21:12] *** samebchase left
[21:14] *** ivanshmakov joined
[21:17] *** dayangkun joined
[21:19] *** kivutar left
[21:19] *** panchiniak joined
[21:28] *** pecastro joined
[21:32] *** stevan_ left
[21:33] *** kivutar joined
[21:35] <jnthn> [Coke]: That's cheating :P

[21:35] <[Coke]> figured. :)

[21:36] <[Coke]> tonight, I'll see if it's magically working, but won't switch it back if not.

[21:36] <[Coke]> is there a theoretical improvement we can make to startup time? 

[21:36] <jnthn> Now it doesn't have to compile Test.pm every time, it *may* be better...

[21:37] <jnthn> I'd imagine there's things we can do, but I'd need to go profiling to know where the big costs are.

[21:37] *** ssutch left
[21:43] *** berekuk joined
[21:44] <[Coke]> it's really not much better (probably drowned out over sheer # of spec tests)

[21:44] <[Coke]> s/not much/ ... more like it doesn't feel much better, I'm just eyeballing it as the log scrolls by

[21:46] *** berekuk left
[21:48] *** berekuk joined
[21:50] *** panchiniak left
[21:50] <itz> I did notice calculating PI was an order of magnitude slower on moar than parrot :)

[21:50] <[Coke]> *sadface*

[21:54] *** beastd left
[21:54] <jnthn> Not surprising at this point

[21:55] <FROGGS> umm, status.github.com says "We're investigating reports of outages across GitHub and Gist."

[21:56] *** treehug88 left
[21:58] <masak> it's a bloody outage!

[21:58] <FROGGS> I know taht!

[21:59] *** treehug88 joined
[22:02] <nwc10> jnthn: why isn't it surprising that Moar is slower than Parrot for calculating Pi? It's not obvious to me.

[22:03] <masak> Parrot has been calculating pi for years :)

[22:04] <jnthn> nwc10: Every signature bind goes through a torturous slow path at the moment.

[22:04] <itz> 1. make it work 2. make it work fast I suppose

[22:04] <jnthn> nwc10: Since the sig binder is used for everything, and on MoarVM it was only really sane to write it in NQP

[22:05] <jnthn> nwc10: So basically, we're interpreting a hot-path primitive doing lots of work, even for the simple cases.

[22:05] <masak> (with no JIT)

[22:06] <jnthn> nwc10: I suspect we'd be a couple of weeks behind where we are now if I'd not gone this "get stuff done first" route...

[22:06] <jnthn> *done

[22:06] <nwc10> OK. Thanks. That was a much more comprehensive answer than I expected

[22:06] <jnthn> Anyway, it's the first thing I'll tend to once we're in the 99% spectest range.

[22:06] <nwc10> and I agree

[22:07] <jnthn> Also, MoarVM itself has had relatively little profiling. :)

[22:08] * jnthn is looking forward to the performance work, but would much rather do it with spectest looking good, to find mistakes :)

[22:08] <masak> jnthn++ # GTD-first development

[22:08] <nwc10> I think you're right to concentrace on getting the spectest sane first

[22:08] <nwc10> so that others can work on Star

[22:08] <nwc10> while you work on speed

[22:08] <nwc10> or curry and Imperial stout, or whatever is important.

[22:09] * nwc10 assumes that creating the Imperial Stout is actually outsourced.

[22:09] <jnthn> Yes, I'm hopeful that things like Panda, sockets, etc. will be picked up by others.

[22:13] <FROGGS> perl -E 'say Foo->isa("Bar"); say "alive"' # alive <-- that is ridiculous

[22:16] *** treehug88 left
[22:24] *** kbaker left
[22:26] *** berekuk left
[22:26] <masak> FROGGS: what is?

[22:27] <masak> FROGGS: the delegation to UNIVERSAL?

[22:29] *** berekuk joined
[22:31] <rurban> I got: fork no memory error at github before they changed the response. So a process went rogue caused by their DNS outage

[22:32] <rurban> But should be faster than the PAUSE repair (harddisc exchange)

[22:32] *** Rotwang left
[22:33] *** xinming_ left
[22:36] <masak> ouch.

[22:38] *** ajr_ left
[22:42] *** dmol left
[22:46] <jnthn> Seems github is back :)

[22:47] *** grondilu left
[22:47] *** kaare_ joined
[22:47] *** kaare_ left
[22:47] *** kaare_ joined
[22:47] <masak> website, yes.

[22:47] <masak> repository storage, no.

[22:48] *** zakharyas joined
[22:51] <jnthn> ah

[22:51] * jnthn blug: http://6guts.wordpress.com/2014/01/08/a-rakudo-on-moarvm-update/

[22:51] <masak> jnthn++

[22:52] <japhb> Ditto that.  :-)

[22:52] * jnthn happily notes that "segmentation fault" does not show up in the latest https://gist.github.com/coke/8250608/

[22:52] * jnthn hopes it stays that way :)

[22:54] * masak .oO( just catch SIGSEGV and handle it somehow ) :P

[23:00] <masak> 'night, #perl6

[23:01] *** mohij left
[23:02] <japhb> o/ masak

[23:05] *** cognominal left
[23:06] *** cognominal joined
[23:09] <[Coke]> jnthn++ blug

[23:09] *** zakharyas left
[23:09] <[Coke]> rakudo.moar,2014-01-08,93.40%,9a340b1,26576,1750,603,1440,30368,28495,

[23:10] <japhb> Anyone want to take bets on when 95% and 99% will be crossed?

[23:13] *** ssutch joined
[23:14] <jnthn> r: say (26576 / 93.4 * 95) - 26576

[23:14] <camelia> rakudo-parrot 8a486a, rakudo-jvm 8a486a: OUTPUT«455.263383␤»

[23:18] <jnthn> I think some of the "killed due to slow" ones will be better tomorrow; the gather/take cheat reified 1000 elements whether they were needed or not, which made some tests that only needed a few things take ages.

[23:25] <[Coke]> sweet. once I test this jvm eval server stuff, I'll do another run.

[23:26] <jnthn> I got stuff to do tomorrow, so will be away until late afternoon, I expect

[23:28] *** krunen left
[23:29] *** krunen joined
[23:29] *** bluescreen10 left
[23:30] <[Coke]> NOOOOOO

[23:30] <[Coke]> jnthn, don't you love us? ;)

[23:30] *** denis_boyun_ left
[23:31] *** BenGoldberg joined
[23:31] <jnthn> :P

[23:32] <jnthn> Well, I can at least say that I'd *rather* be here than doing tomorrow's errands. :)

[23:33] <[Coke]> hugme: hug jnthn 

[23:33] * hugme hugs jnthn

[23:34] <[Coke]> hugme: hug hugs, hugging.

[23:34] * hugme hugs hugs,

[23:38] *** pecastro left
[23:41] <jnthn> Time for some rest...'night o/

[23:41] <japhb__> o/ jnthn!

[23:41] *** grep0r left
[23:42] *** grep0r joined
[23:50] *** abnorman left
[23:55] *** kivutar left
