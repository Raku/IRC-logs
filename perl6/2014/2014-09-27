[00:02] <dalek> ecosystem: 1bae927 | coke++ | META.list:

[00:02] <dalek> ecosystem: Temporarily bump perl6-GD to my fork

[00:02] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/1bae927685

[00:04] <j4jackj> i'm addicted to caffeine.

[00:05] <j4jackj> at least it isn't an opiate, but as you know, caffeine is dependence forming. i honestly don't remember the last time i tried to stop and succeeded.

[00:05] * [Coke] drinks a Coke Zero.

[00:05] <[Coke]> it's also got documented benefits. :)

[00:06] <j4jackj> [Coke]: I assume you mean caffeine

[00:06] *** Mso150_l left
[00:06] *** Mso150_l_x joined
[00:06] <j4jackj> It's got documented benefits, but it has made my life shit in that the few people I can sympathise with about addiction are addicted to some of the worst drugs (H, crack, crank, etc)

[00:07] <j4jackj> It's largely a case of "I don't want to be in this shitty position"

[00:07] <j4jackj> All addictions have a documented harm to society. Mine, caffeine, is fulfilled in ways that make my mum cringe -> harm to society

[00:08] *** rindolf left
[00:08] <j4jackj> wat

[00:10] <tony-o> i had caffeine withdrawal in the desert during weapons training, that wasn't fun

[00:13] *** retupmoca left
[00:15] <tony-o> i went blind for 6 hours or so

[00:18] * leont knows a perl hacker who uses powder caffeine, typically won't get out of bed before it has kicked in

[00:22] <j4jackj> tony-o: suriesly?

[00:24] <tony-o> j4jackj: yea

[00:25] <j4jackj> tony-o: did you explain to your dictatorial idiotic overlords that you were suffering from caffeine withdrawals

[00:25] <tony-o> they gave me two big caffeine pills and i was fine for the rest of the 5 months

[00:25] <tony-o> j4jackj: i didn't know what was going on

[00:25] <j4jackj> lawl

[00:25] <tony-o> i was awake inside but i went blind relatively quickly and then slowly lost motor skills and they took me to a corpsman who gave me two caffeine pills

[00:26] <j4jackj> tony-o: that... isn't caffeine withdrawal

[00:26] <j4jackj> sounds like you were doing craq

[00:26] <tony-o> definitely wasn't doing that

[00:27] <tony-o> you have me a little paranoid now

[00:27] <j4jackj> why?

[00:27] <j4jackj> sounds like someone spiked something

[00:28] <j4jackj> tony-o: so, was everything blurred, or was your vision a nothingness?

[00:28] <tony-o> it went through blurry to nothingness

[00:29] <tony-o> as far as i could tell, i was up 18 hours usually over the course of nights

[00:29] <j4jackj> sleep deprivation

[00:29] <tony-o> and there isn't much light in a desert

[00:29] <j4jackj> you shouldn't have been in the army

[00:29] <tony-o> i was in the Marine Corps, i was fine aside from the one time

[00:32] *** xragnar is now known as rmgk

[00:34] <tony-o> moritz: any reason you stopped working on MiniDBI ?

[00:35] *** prevost left
[00:43] *** Mso150_l_x left
[00:43] *** Mso150_l_x_g joined
[00:44] *** crncosta left
[00:45] *** colomon joined
[01:01] *** colomon left
[01:03] *** FROGGS_ joined
[01:05] *** AndChat-458964 left
[01:06] *** FROGGS left
[01:07] *** colomon joined
[01:14] *** xenoterracide joined
[01:18] *** Ben_Goldberg joined
[01:18] *** BenGoldberg left
[01:18] *** Ben_Goldberg is now known as BenGoldberg

[01:18] *** leont left
[01:18] *** colomon left
[01:20] *** Sqirrel joined
[01:23] *** erkan left
[01:25] *** erkan joined
[01:37] *** pnu_ left
[01:37] *** ggherdov___ left
[01:37] *** isacloud______ left
[01:39] *** ggoebel111117 joined
[01:43] *** PZt joined
[01:56] *** ssutch_ left
[02:05] *** zeropool joined
[02:11] *** noganex_ joined
[02:14] *** noganex left
[02:34] *** yeahnoob joined
[02:38] *** mst joined
[02:47] * TimToady now in Rayville, LA

[02:49] <TimToady> and we were never in TX, missed by about 20 feet, since the highway from NM to OK just barely misses the panhandle of TX

[02:49] <TimToady> but we saw the cornfield in the northeast corner of TX...

[02:50] <TimToady> (of the panhandle, that is)

[02:51] <TimToady> saw the Ozarks today, tomorrow will attempt the Natchez Trace, but may be a madhouse

[02:52] <TimToady> er, nw corner of the panhandle, that is

[02:57] *** ssutch joined
[03:01] *** ssutch left
[03:09] *** jerrycheung left
[03:11] *** yeahnoob left
[03:11] *** ssutch joined
[03:16] *** ssutch left
[03:49] *** yeahnoob joined
[03:56] *** mberends left
[03:58] <jnthn> Hello, #perl6

[03:59] *** mberends joined
[04:11] *** kurahaupo joined
[04:11] *** kurahaupo left
[04:18] *** ssutch joined
[04:20] *** BenGoldberg left
[04:23] *** ssutch left
[04:24] *** erkan left
[04:26] *** ggherdov___ joined
[04:26] *** isacloud______ joined
[04:28] *** pnu_ joined
[04:30] *** tinyblak_ left
[04:32] *** lumimies joined
[04:41] *** xinming joined
[05:18] <moritz> tony-o: superceeded by DBIish

[05:19] *** ssutch joined
[05:23] *** ssutch left
[05:34] *** ilogger2 joined
[05:34] *** ChanServ sets mode: +v ilogger2

[05:45] *** bjz joined
[06:07] *** kaare_ joined
[06:09] *** virtualsue joined
[06:10] *** xenoterracide joined
[06:31] *** SamuraiJack joined
[06:37] <timotimo> o/

[06:37] <timotimo> hey jnthn, you're up late ... or early?

[06:38] <jnthn> timotimo: It's early afternoon here :)

[06:38] <timotimo> oh

[06:38] <jnthn> I got up pretty late today, though

[06:38] <timotimo> i'm quite bad at intuition for timezones

[06:39] <jnthn> weekend = catch up on sleep :)

[06:39] <timotimo> so ... shellshock reminded me that things like rakudo shouldn't introduce terrible security vulnerabilities into programs running on top of it

[06:40] <timotimo> i don't think we've ever done much in the way of security auditing, right?

[06:40] *** ssutch joined
[06:41] *** xenoterracide left
[06:41] <dalek> rakudo/nom: 4da10b4 | jonathan++ | src/core/Kernel.pm:

[06:41] <dalek> rakudo/nom: Fix $*KERNEL.name on Windows.

[06:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4da10b4884

[06:41] <dalek> rakudo/nom: 1986a6c | jonathan++ | src/core/Kernel.pm:

[06:41] <dalek> rakudo/nom: Fix return type violation in $*KERNEL.signals.

[06:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1986a6cc7c

[06:43] <jnthn> timotimo: Haven't done much in that way, no

[06:43] <itz> eurobsdcon streams up if anyone is interested

[06:43] <timotimo> anything obvious we may be doing wrong at the moment?

[06:44] <moritz> timotimo: regex interpolation uses EVAL, iirc

[06:44] <jnthn> timotimo: We haven't taken sufficiently good care over hash randomization yet

[06:44] <moritz> timotimo: yes, grep for EVAL src/core/Cursor.pm

[06:45] <jnthn> timotimo: As I understand it, Perl 5 has done a great job there, so the knowledge exists in the Perl community on this stuff. :)

[06:48] *** tinyblak joined
[06:51] <timotimo> sounds good

[06:51] *** darutoko joined
[06:51] *** tinyblak_ joined
[06:51] <timotimo> but these people still need to be won over ;)

[06:53] *** tinyblak left
[06:56] <jnthn> m: say "",qx/kill -l/.words;

[06:56] <camelia> rakudo-moar 1613b0: OUTPUT«qx, qqx is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting:1␤  in sub QX at src/RESTRICTED.setting:9␤  in block <unit> at /tmp/KTBZIza7E1:1␤␤»

[06:56] <jnthn> grmbl

[06:56] <jnthn> star: say "",qx/kill -l/.words;

[06:56] <camelia> star-m 2014.08: OUTPUT«qx, qqx is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting:1␤  in sub QX at src/RESTRICTED.setting:9␤  in block  at /tmp/tmpfile:1␤␤»

[06:56] <camelia> ..star-p 2014.08: OUTPUT«./bin/perl6-p: error while loading shared libraries: libicuuc.so.48: cannot open shared object file: No such file or directory␤»

[06:57] <timotimo> :\

[06:57] <jnthn> Damn our security... :)

[06:57] <moritz> I get

[06:57] <moritz> 0 HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM 16 CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH IO PWR SYS 32 33 RTMIN RTMIN+1 RTMIN+2 RTMIN+3 RTMIN+4 RTMIN+5 RTMIN+6 RTMIN+7 RTMIN+8 RTMIN+9 RTMIN+10 RTMIN+11 RTMIN+12 RTMIN+13 RTMIN+14 RTMIN+15 RTMAX-14 RTMAX-13 RTMAX-12 RTMAX-11 RTMAX-10 RTMAX-9 RTMAX-8 RTMAX-7 RTMAX-6 RTMAX-5 RTMAX-4 RTMAX-3 RTMAX-2 RTMAX-1 RTMAX

[06:58] <jnthn> hmm

[06:59] <moritz>  1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL       5) SIGTRAP

[06:59] *** mberends joined
[06:59] <moritz> that's what kill -l looks like

[07:03] <jnthn> Cool, seems I've got kernel.t fails on Windows cleared up

[07:05] *** virtualsue left
[07:05] <dalek> rakudo/nom: 0ee8ce2 | jonathan++ | src/core/Kernel.pm:

[07:05] <dalek> rakudo/nom: Fix $*KERNEL.signals on Windows.

[07:05] <dalek> rakudo/nom: 

[07:05] <dalek> rakudo/nom: Means that we now pass kernel.t - or at least all the unfudged tests -

[07:05] <dalek> rakudo/nom: on Windows too.

[07:05] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0ee8ce25ff

[07:09] <dalek> roast: f9c7e3c | jonathan++ | integration/advent2010-day03.t:

[07:09] <dalek> roast: Make tests robust to Windows paths.

[07:09] <dalek> roast: review: https://github.com/perl6/roast/commit/f9c7e3c784

[07:10] *** virtualsue joined
[07:11] *** spider-mario joined
[07:14] <dalek> roast: daa28fd | jonathan++ | integration/advent2012-day23.t:

[07:14] <dalek> roast: Make test robust to Windows line endings.

[07:14] <dalek> roast: review: https://github.com/perl6/roast/commit/daa28fd29c

[07:18] <jnthn> Is it just me, or can integration\advent2012-day06.t only pass when make install was alreayd run?

[07:19] *** sqirrel__ joined
[07:19] <jnthn> oh, no...it should work. Hmm

[07:34] <FROGGS_> [Coke]: *I* have a Perl 6 available when doing a star release... and normal ppl don't do releases

[07:35] <FROGGS_> [Coke]: Is there a way to get a Perl 6 on your box?

[07:43] *** gfldex joined
[07:46] *** SamuraiJack_ joined
[07:46] *** SamuraiJack left
[07:56] *** sqirrel__ left
[08:00] *** tinyblak_ left
[08:00] *** ssutch left
[08:09] *** retupmoca joined
[08:22] *** ab5tract joined
[08:26] <ab5tract> FROGGS_: i can build, install, and load XML::LibXML, but when i try to instantiate an object of that class i get this error: 'Malformed UTF-8 at line 1 col 1'

[08:28] <ab5tract> the jvm probably has an equivalent XML parser, but I haven't seen any 'NativeCall-style' examples for perl6-j yet

[08:40] *** rindolf joined
[08:40] <rindolf> Hi all.

[08:53] <masak> m: sub hi { say $^something }; hi all

[08:53] <camelia> rakudo-moar 0ee8ce: OUTPUT«===SORRY!=== Error while compiling /tmp/vDTix_vIBE␤The 'all' listop may not be called without arguments (please use () or whitespace to clarify)␤at /tmp/vDTix_vIBE:1␤------> sub hi { say $^something }; hi all⏏<EOL>…»

[08:53] <masak> m: sub hi { say $^something }; hi all()

[08:53] <camelia> rakudo-moar 0ee8ce: ( no output )

[08:54] <masak> rindolf: no output ;)

[08:54] <rindolf> masak: what a bunch of line noise camelia emitted.

[08:54] <rindolf> masak: what's up?

[08:55] <rindolf> It's a great day to die.

[08:55] <masak> I'd rather live to evaluate another day.

[08:56] <rindolf> masak: heh, that's not what I meant by "dying".

[08:56] <rindolf> masak: I meant something like "lose an argument", "Become offended", "Change your mind", "Become convinced", etc.

[09:01] <moritz> none of them are remotely like dying, IMHO

[09:01] <nine> Does anyone here know a bit about XS?

[09:01] <moritz> though people more attached to their opinions might feel differently

[09:02] <moritz> nine: only that it's supposed to be horrible :-)

[09:02] *** kurahaupo joined
[09:02] <nine> I golfed my Inline::Perl5 problem down to pure Perl 5/C. Just posted the question to #perl, but I don't have high hopes of getting help...

[09:03] <moritz> nine: you can try asking on perlmonks

[09:04] <virtualsue> stackoverflow is my favourite

[09:04] <virtualsue> post it somewhere less ephemeral. 

[09:05] <moritz> and then maybe post the link in #p5p, there are some folks there who know XS, I hope :-)

[09:05] *** DarthGandalf joined
[09:06] <nine> Ok, signing up to stackoverflow. Thanks for the suggestions!

[09:06] <virtualsue> i haven’t look at it since 2007 but i might be able to dredge it back up

[09:06] <virtualsue> xs that is

[09:06] <nine> The following test program segfaults in S_mg_findext_flags: https://gist.github.com/niner/493268db5ba449caef49

[09:06] <nine> When I change "zero" to "main::zero" it works. Does anyone see something obviously wrong in my program?

[09:08] <lizmat> nine: nothing I can see, but then my only XS experience has been a 3 line function

[09:08] <nine> lizmat: thanks for having a look anyway.

[09:09] *** dalek joined
[09:09] *** ChanServ sets mode: +v dalek

[09:10] *** telex joined
[09:23] <danaj_> nine: there is a #xs channel on irc.perl.org.  There are some very knowledgeable people there, including bulk88 who is often online.

[09:24] <virtualsue> i still find it surprising that this channel isn’t on irc.perl.org

[09:24] <masak> virtualsue: historical reasons.

[09:25] <masak> virtualsue: I think it was created here by the pugs people in early 2005?

[09:26] <moritz> my back-imported logs go back to Feb 2005

[09:26] <masak> yeah, just checked :)

[09:26] <masak> <feb> autrijus: you're welcome

[09:26] <virtualsue> i don’t doubt that. none of that answers ‘why’, but it’s not important

[09:26] <masak> ^ first IRC-logged thing ever

[09:27] <masak> virtualsue: true, it doesn't.

[09:28] <lizmat> perhaps freenode had better connectivity in TW then?

[09:28] <moritz> virtualsue: pugs came from the haskell comunity, which was based in freenode

[09:28] <masak> oh, that probably factored into it, yes.

[09:28] <moritz> also, breaking out of the echo chamber

[09:29] <masak> in some weird hard-to-pin-down way, it feels oddly appropriate that #perl6 is off irc.perl.org

[09:29] <ab5tract> it was also a "tough time for the Perliverse" (or so it seemed to me at the time)

[09:29] <masak> I say that as someone who thinks that Perl 5 and Perl 6 are not all that different.

[09:29] *** tinyblak joined
[09:30] <masak> I honestly was not aware of the "tough time" thing until around the time Perl 5.10 came out.

[09:31] <ab5tract> well, it makes it much easier for the curious bystander on freenode to '/j #perl6' without connecting to another irc server

[09:31] <ab5tract> maybe "much easier" is a stretch, but for the lazy folks like me ... ;)

[09:32] * moritz wonders if there's a federation plugin for popular IRC servers that makes it possible to mirror IRC channels between different networks

[09:34] <ab5tract> masak: i'm not sure i could pin down when i noticed it... even the initial RFCs for Perl 6 caused a bit of a stir.. but it's also around the time where p5 seemed to cross some arbitrary threshold of 'pariah' in the web development community

[09:35] <bonsaikitten> which is quite confusing

[09:35] <bonsaikitten> I'd rather have some shoddy perl than php :)

[09:36] <masak> yeah, it's odd.

[09:36] <masak> unfortunately, it makes no difference that we here in the echo chamber know this.

[09:36] <ab5tract> bonsaikitten: good point, but i think PHP is where all the folks programming the code that gave p5 a bad rap went when p5 became unfashionable :)

[09:36] <ab5tract> we should map the effects of this herd

[09:36] <bonsaikitten> ab5tract: and sadly they never stopped stapling together things with anger

[09:37] <Rounin> I suppose Perl has become famous for being hard to read

[09:37] <Rounin> The other thing is that when you use a random web server, PHP is already installed

[09:37] <Rounin> I use PHP on my web page for that very reason... Just chuck it in a folder and it starts up

[09:37] <bonsaikitten> Rounin: which flavour of php?

[09:38] <Rounin> Whatever flavour is installed

[09:38] <bonsaikitten> not like they are compatible ... sigh :)

[09:38] <ab5tract> there were a lot of initial efforts strung together with a decade of technical debt.. in p5 that started at a much younger version.. so there were a lot of complete rewrites initiated in languages where programmer output would be, shall we say, more predictable?

[09:38] <Rounin> That being said, I've been here and there on IRC, and Perl seems to have the best community

[09:39] <masak> "best community" is not a safeguard against irrelevance, though.

[09:39] <masak> I mean, it's nice and all.

[09:39] <Rounin> True... One of the other places I hang is #d

[09:39] <Rounin> A very nice language if relevance isn't your criterion though :)

[09:39] <bonsaikitten> perl has sanity

[09:39] <masak> oh, I always imagined the #d community would be nice :)

[09:40] <bonsaikitten> cpan is still by far the most engineered package mangling system for a language

[09:40] <ab5tract> i have really high hopes for what Perl 6 can do for Perl

[09:40] <bonsaikitten> I can't figure out why no one wants to learn from that :(

[09:40] <Rounin> It is quite nice, and still small enough that everybody talks to everybody

[09:40] <Rounin> There's no steering committee with 4 tiers, hehe

[09:41] <masak> ab5tract: for two YAPC::EUs in a row now, I've felt "wow, this thing that we [Perl 6] are doing... it actually matters. and it's starting to show results now, significant ones that can't be had on the p5 VM."

[09:41] <ab5tract> i like how Larry described it in his talk a yapc-year or two ago

[09:42] <ab5tract> of perl programmers as a culture ("forgiving of mistakes.. you've been living with some of my mistakes for 20 years now") :)

[09:42] <Rounin> :)

[09:42] <ab5tract> masak: indeed

[09:42] <masak> notably async/parallel/concurrent and JIT/spesh.

[09:42] <ab5tract> the rapid bootstrapping onto VMs

[09:42] <ab5tract> ... that's not something many languages have "launced" with

[09:42] <ab5tract> *launched

[09:43] <ab5tract> not that Rakudo is not already 'shipping', I mean Perl 6 is already a mature language in terms of years

[09:43] <masak> it took some years of trying, and some generations of compilers, to be fair.

[09:44] <ab5tract> masak: very true. but that is also a point: how many other languages have had 13 years of learning on those terms? before "launch", i mean

[09:45] <ab5tract> and please take "launch" here to mean that ineffible moment where some demo or project comes out that forces people to pause for a moment and take stock 

[09:45] <nine> OTOH Perl 6 is in a rather unique position to take its time, because Perl 5 is still good enough to earn real money. And it's still evolving. But it can never evolve to a point to make Perl 6 obsolete :)

[09:45] <ab5tract> nine: well said! :)

[09:46] <bonsaikitten> I appreciate both for what they do

[09:49] <masak> yeah, we keep complaining about the state of the two communities a lot. but I think we have it quite good, actually.

[09:52] <ab5tract> Rakudo is getting to the point where it can really show it's more undeniable strengths against p5

[09:52] <ab5tract> NativeCall vs XS, for instance

[09:52] <nine> note to self: never call a method "one"

[09:53] <ab5tract> the "OH HAI I LIKEZ THIS VM" backend swappability for another

[09:53] <ab5tract> and finally: concurrency :)

[09:54] <ab5tract> not just that it's done, but how it is done, mind you

[09:54] <moritz> nine: I hate it how it we pollute the Any methodspace

[09:55] <moritz> m: say Any.^methods.elems

[09:55] <camelia> rakudo-moar 0ee8ce: OUTPUT«69␤»

[09:55] <moritz> m: say Any.^methods.map(*.name).uniq.sort

[09:55] <camelia> rakudo-moar 0ee8ce: OUTPUT«ACCEPTS Array Bag BagHash FLATTENABLE_HASH FLATTENABLE_LIST KeyBag KeySet Mix MixHash Parcel Set SetHash Supply all any assign_key assign_pos at_key at_pos bind_key categorize classify combinations deepmap delete delete_key delete_pos duckmap eager elems e…»

[09:55] <nine> moritz: and just a couple weeks ago I complained loudly that Python does not allow you to call a method "if", "and" or "not" :)

[09:56] <masak> ah yes, languages with keywords... :)

[09:56] <moritz> nine: well, Perl 6 does allow you to override those methods

[09:56] <nine> Even the Python documentation says that this restriction is just to make writing the parser easier...

[09:57] <ab5tract> nine: btw, when a p5 object is converted to a p6 one, does $obj.^methods work on it as expected?

[09:58] <moritz> ab5tract: nope, it works through fallbacks

[09:58] <ab5tract> makes sense, but damn.. that would have been a killer feature

[09:58] <nine> virtualsue: I found the source of my problem. It's really a plain Perl problem actually. I'm calling a method on a Perl6::Object. This method then calls a function called "zero". But even in plain Perl, perl would look for this function in the current package, which is Perl6::Object.

[09:58] <ab5tract> nine++

[09:59] <nine> ab5tract: if the P5 object is based on Moose/Class::MOP, one could probably hook up the MOPs...

[09:59] <nine> Which just leaves me with the worse: *** Error in `/data/home/nine/install/rakudo/install/bin/moar': munmap_chunk(): invalid pointer: 0x00007fffb80cf820 ***

[09:59] *** mberends left
[10:00] <nine> I got the other problem when trying to golf down this one because I have no idea at all where this is coming from...

[10:01] <ab5tract> true. that would be cool indeed, for going forward. but if it could work on classic classes.. that would be some useful, new functionality that Inline::Perl5 would provide over regular p5 :)

[10:02] <ab5tract> i've never delved too far into the module/class metaprogramming available to p5

[10:03] <ab5tract> but ruby spoiled me on objects that can't express themselves clearly :)

[10:04] *** mberends joined
[10:08] *** erkan joined
[10:08] *** erkan left
[10:08] *** erkan joined
[10:25] *** gfldex left
[10:40] <nine> Oh, seems like the MoarVM crash occurs when I'm trying to call a non-existing P5 method (typo'ed). So I just have to improve error handling.

[10:40] <lizmat> nice one: "Method 'item' not found for invocant of class 'IO::Spec::Unix'"

[10:41] <lizmat> m: say IO::Spec::Unix.^mro

[10:41] <camelia> rakudo-moar 0ee8ce: OUTPUT«(IO::Spec::Unix) (Any) (Mu)␤»

[10:41] <lizmat> Mu has a 'method item'

[10:41] <lizmat> of course, this happens during startup  :-(

[10:46] *** tinyblak left
[10:46] <lizmat> after adding a 'method item { self } to IO::Spec::Unix:

[10:46] <lizmat> No such method 'dispatch:<.^>' for invocant of type 'IO::Spec::Unix'

[10:46] <lizmat> I think I have a sick puppy  :-(

[10:56] *** firefish5000 joined
[11:11] *** kurahaupo left
[11:11] *** ghostlin_ joined
[11:14] *** ghostlin_ left
[11:22] *** kurahaupo joined
[11:26] <lizmat> afk for the rest of the day&

[11:44] *** kurahaupo left
[11:51] *** firefish5000 left
[11:51] *** nbrown joined
[11:56] *** leont joined
[11:56] *** nbrown left
[12:01] *** prevost joined
[12:02] *** virtualsue left
[12:17] <nine> Python 3: threat or menace? http://lwn.net/Articles/613403/

[12:19] *** tomaw- left
[12:23] <rindolf> Where's fglock?

[12:23] <rindolf> nine: lwn.net is always too TL;DRy.

[12:24] <rindolf> nine: https://twitter.com/shlomif/status/504931822757638144

[12:24] <rindolf> well, their newswire is fine.

[12:30] *** nbrown joined
[12:34] *** nbrown left
[12:42] *** nbrown joined
[12:45] *** pmurias joined
[12:45] <pmurias> rindolf: fglock is very rarely on irc

[12:48] <rindolf> pmurias: ah, that sucks.

[12:48] <rindolf> pmurias: he's been neglecting Perlito.

[12:48] *** nbrown left
[12:48] <pmurias> rindolf: he's working on Perlito5

[12:51] <pmurias> by neglecting you mean he hasn't been commiting as often nowdays?

[12:53] *** sqirrel__ joined
[12:54] <pmurias> jnthn: ping

[12:54] <rindolf> pmurias: well, there's a serious bug I reported that was open for months without activity.

[12:55] <rindolf> pmurias: and i'd like to use Perlito to convert https://metacpan.org/release/Games-Solitaire-Verify to JS.

[13:22] *** tinyblak joined
[13:28] *** clkao joined
[13:30] *** sqirrel__ left
[13:33] *** kaare_ left
[13:33] *** nbrown joined
[13:34] *** rurban joined
[13:36] <moritz> and it can't be worked around?

[13:37] *** vendethiel- joined
[13:40] *** nbrown left
[13:42] *** shlomif joined
[13:43] *** kaare_ joined
[13:43] *** rindolf left
[13:45] *** shlomif is now known as rindolf

[13:50] *** rurban left
[14:00] *** rurban joined
[14:04] *** rurban left
[14:13] *** tinyblak left
[14:15] *** zakharyas joined
[14:30] *** sqirrel__ joined
[14:31] *** prevost left
[14:36] *** nbrown joined
[14:41] *** nbrown left
[14:41] *** MilkmanDan joined
[14:41] *** MilkmanDan left
[14:41] *** MilkmanDan joined
[14:48] *** tinyblak joined
[14:51] *** ruoso joined
[14:51] <jnthn> pmurias: pong

[14:51] *** erkan left
[14:54] *** tinyblak left
[14:57] *** Ven joined
[14:59] *** gfldex joined
[15:02] *** tinyblak joined
[15:04] <nine> This is getting ridiculous. I can golf down my problem inside the application to a couple lines of code that show that there's clearly something wrong with Inline::Perl5. But doing the same in a test just plain works.

[15:05] *** tinyblak left
[15:05] *** pmurias left
[15:05] <dalek> roast: 534e79d | jonathan++ | S22-package-format/local.t:

[15:05] <dalek> roast: Make a path comparision work out on Windows.

[15:05] <dalek> roast: review: https://github.com/perl6/roast/commit/534e79dc0c

[15:07] <nine> jnthn: why does / as separator work in the previous lines, but not on the one you changed?

[15:08] *** pmurias joined
[15:09] <jnthn> nine: Because the others aren't used to do a comparison

[15:10] <jnthn> The spectest has become increasingly noisy on Windows... :(

[15:12] <pmurias> jnthn: if the serialized context caching is disabled what will happen? (I'm working on compiling both to js & moar now)

[15:13] <Ven> er, can we escape a space other than `\ `? (in regexps)

[15:13] <nine> jnthn: just wondering because $srcsrc clearly now contains both / and \. But if the test works now, I guess that's ok.

[15:14] <pmurias> jnthn: would it be ok to add some op/way to get the contents of the serialized cache?

[15:16] <jnthn> Ven: I normally quote them

[15:16] <jnthn> nine: Yeah, the test does pass with it...

[15:16] <Ven> jnthn: can you do that in character classes?

[15:17] <Ven> sorry I'm not really being clear

[15:17] <jnthn> Ven: Well, you didn't ask that :P

[15:17] <Ven> :_

[15:17] <jnthn> In char classes, I think \  is the righ tway

[15:17] <jnthn> I can't think of a neater one off hand, at least...

[15:18] <jnthn> pmurias: It's not really caching so much as being able to store the binary data more efficiently in the moarvm bytecode file

[15:19] <jnthn> pmurias: I thought you had a trick for getting the serialized bytecode?

[15:21] <FROGGS_> ab5tract: can you run the t/00* and t/01* test?

[15:24] <FROGGS_> ab5tract: I bet the error you get happens when we unpack an xmlParserContext C struct into a Perl 6 object... because this struct has several char* members

[15:24] <FROGGS_> jnthn: what am I supposed to do today?

[15:29] <jnthn> FROGGS: I dunno, what's -Ofun? Maybe make nativecall more robust on 32-bit, or figure out how we can export size_t and similar as aliases to the appropriate Perl 6 sized type...

[15:30] <FROGGS> hmmm, that sounds -Ouseful enough to tackle (again)

[15:30] <jnthn> Or make MAIN_HELPER only generate USAGE if we need it, since it's a major cost in the forest fire benchmark so far as I can se

[15:30] <jnthn> *see

[15:30] <pmurias> if storing the data inefficently won't break anything I could just use my hack

[15:31] <jnthn> At least, on smaller ieration counts

[15:31] <FROGGS> ohh, that sounds like a nice task

[15:31] <jnthn> Or implement no strict for -e

[15:31] <jnthn> Or implement val() :)

[15:32] <FROGGS> jnthn: I had implement no strict already :o)

[15:32] <jnthn> Oh?

[15:32] <FROGGS> you said it might be the wrong approach...

[15:32] <jnthn> m: no strict; $a = 'omg I did not know!'; say $a

[15:32] <camelia> rakudo-moar 0ee8ce: OUTPUT«===SORRY!=== Error while compiling /tmp/FHidUpZgAZ␤Variable '$a' is not declared␤at /tmp/FHidUpZgAZ:1␤------> no strict; $a⏏ = 'omg I did not know!'; say $a␤    expecting any of:␤        postfix␤»

[15:32] <FROGGS> jnthn: https://gist.github.com/FROGGS/6f8989611659551dae1f

[15:32] *** tinyblak joined
[15:32] * jnthn looks

[15:35] <jnthn> Hmm

[15:35] <jnthn> Does the spec say somewhere what scope they should have?

[15:35] <FROGGS> I dunno

[15:36] <FROGGS> but I can try to find out

[15:36] <jnthn> OK. 'cus I'm trying to figure out what else I might have objected to :)

[15:36] <jnthn> oh...

[15:37] *** nbrown joined
[15:37] <jnthn> It seems to do things in Grammar that looks more like it beongs in Actions...

[15:37] <FROGGS> like adhoc-declaring the variable?

[15:37] <jnthn> Yeah

[15:37] <jnthn> Well, it feels odd doing AST-building in the grammar is all

[15:37] <jnthn> In Actions and World it's OK

[15:38] <jnthn> The stuff in if !$*STRICT { ... } would feel cleaner to me as an auto_declare(...) method call on $*W

[15:38] <FROGGS> yeah, makes sense

[15:39] <jnthn> I think that and the "is package the righ tdefualt" (quite possibly) are all I have though...

[15:39] <FROGGS> ossum!

[15:39] <FROGGS> will report back :o)

[15:41] *** nbrown left
[15:41] <jnthn> It appears Perl 5 goes for package scope

[15:42] <FROGGS> aye

[15:44] <jnthn> And I can't find any spec declaration that says something else

[15:45] <jnthn> So, by "5 semantics as fallback" I'll happily accept package scope being used by the patch. :)

[15:45] <jnthn> So, just the refactor and I think that can go in.

[15:45] *** ssutch joined
[15:46] *** xenoterracide joined
[15:46] <FROGGS> \o/

[15:48] <Ven> m: my @array; @array[0..2] = <a b c>; say @array.perl

[15:48] <camelia> rakudo-moar 0ee8ce: OUTPUT«Array.new()␤»

[15:48] <jnthn> Did tr/// get done?

[15:48] <Ven> Not sure why I get an empty array.

[15:48] <jnthn> m: my $omg = 'bear'; $omg ~~ tr/a/e/; say $omg

[15:48] <camelia> rakudo-moar 0ee8ce: OUTPUT«beer␤»

[15:49] <FROGGS> jnthn: I think so

[15:49] <Ven> m: my @array = ^10; @array[0..2] = <a b c>; say @array.perl

[15:49] <camelia> rakudo-moar 0ee8ce: OUTPUT«Array.new("a", "b", "c", 3, 4, 5, 6, 7, 8, 9)␤»

[15:49] <Ven> sooo, I kinda need the slots to be "pre-allocated" to assign them?

[15:49] <jnthn> FROGGS: Ok; it's listed as undone in le ROADMAP

[15:49] <FROGGS> m: my $omg = 'bear'; say $omg ~~ tr/a/e/; say $omg

[15:49] <camelia> rakudo-moar 0ee8ce: OUTPUT«StrDistance.new(before => "bear", after => "beer")␤beer␤»

[15:49] <jnthn> Ven: I'm a bit surprised by that.

[15:49] <Ven> glad to know it :D/

[15:49] <jnthn> Oh, right, I even remember talking about StrDistance

[15:50] <dalek> rakudo/nom: 4d02272 | jonathan++ | docs/ROADMAP:

[15:50] <dalek> rakudo/nom: Remove tr///; it's been done.

[15:50] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4d02272e04

[15:51] <jnthn> FROGGS: There's a "no strict" item in ROADMAP you get to remove later on too ;)

[15:51] <FROGGS> nice :D

[15:52] <timotimo> oh, no strict is actually going to happen?

[15:52] <FROGGS> timotimo: surely

[15:52] <FROGGS> we do whatever our master asks for :o)

[15:53] <dalek> rakudo/nom: ec60114 | jonathan++ | docs/ROADMAP:

[15:53] <dalek> rakudo/nom: Remove a couple of static optimizer tasks.

[15:53] <dalek> rakudo/nom: 

[15:53] <dalek> rakudo/nom: These are better handled by dynamic optimization, and indeed already

[15:53] <dalek> rakudo/nom: are by inlining on MoarVM (thanks to spesh) and the JVM (thanks to

[15:53] <dalek> rakudo/nom: invokedynamic). Thus they are not Rakudo codebase tasks.

[15:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ec60114b79

[15:54] <FROGGS> when we can keep that tempo we'll reach 1.0 this evening!

[15:54] <FROGGS> go go go /o/

[15:55] <jnthn> I noe there is this one:

[15:55] <jnthn> *note

[15:55] <jnthn> 1 ***   basic Perl 5 interop (use, eval, etc.)

[15:55] <Ven> jnthn: do I count this behavior (array assign) as a bug, or is it spcced somewhere?

[15:56] <jnthn> Ven: Looks buggy to me

[15:56] <timotimo> i noe, right?

[15:56] <jnthn> :P

[15:57] <jnthn> Anyway, somebody who has been keeping up with the Inline::Perl5 progress better than I have may want to update ROADMAP in light of it

[15:57] <jnthn> Did Inline::Perl5 make it into the latest Star release?

[15:57] <jnthn> Fine if not, but we might like to get it into the next one :)

[15:58] <jnthn> Also, if anybody has any objects to --enable-jit becoming the MoarVM default within the next couple of days, plesae let me know.

[15:58] <jnthn> *objections

[15:58] <FROGGS> +1

[15:58] <Ven> so long it doesn't break hell loose when p5 is not installed :)

[15:58] <jnthn> Good job I'm IRCing and not coding with this error rate... :)

[15:58] <jnthn> Ven: Good point :)

[15:59] <jnthn> Ven: Though "may not build right even if p5 is installed" is more likely something we need to be robust in the face of...

[15:59] <timotimo> yes please have --enable-jit be the default :)

[16:00] <jnthn> OK, if nobody has objected by the time the weekend is over, then either I'll do it or anybody else can feel free to beat me do it. 

[16:01] <nine> Are there other modules with C parts in Star?

[16:01] <Ven> So, uh, any code example with labeled loops?

[16:01] <Ven> the spec has very little of those.

[16:02] <Ven> LABEL.next? where do I put the label?

[16:02] *** liztormato joined
[16:02] <FROGGS> jnthn: about the USAGE... I just replaced it by a proxy and before 60 invocations of a script having a MAIN took 30.7s, now it takes 30.0s... is that what you would do too?

[16:02] <FROGGS> jnthn: it generates the usage only once of course

[16:03] <jnthn> FROGGS: Well, I saw if I perl6-m --profile forest-fire.p6 16 16 5, then generating usage was a notable part of it

[16:03] <liztormato> Wrt to "no strict". Do we have a generic lexical pragma framework?

[16:03] <FROGGS> k, will check

[16:03] <jnthn> FROGGS: So I'd try looking at it that way

[16:04] <liztormato> Or is each pragma going to do its own thing?

[16:04] <FROGGS> also, it does some magic to get the basename of $*PROGRAM_NAME... we can do better now

[16:05] <FROGGS> liztormato: for no/use strict we'd put a dynami variable in the parser, so it would be lexically scoped for that reason

[16:06] <FROGGS> maybe we could find a generic approach

[16:06] *** travis-ci joined
[16:06] <travis-ci> [travis-ci] Rakudo build errored. Jonathan Worthington 'Remove a couple of static optimizer tasks.

[16:06] <travis-ci> [travis-ci] http://travis-ci.org/rakudo/rakudo/builds/36439555 https://github.com/rakudo/rakudo/compare/4d02272e0487...ec60114b7983

[16:06] *** travis-ci left
[16:06] <FROGGS> bad jnthn! :P

[16:06] <liztormato> Disk full I bet

[16:07] <FROGGS> "No output has been received in the last 10 minutes, this potentially indicates a stalled build or something wrong with the build itself.

[16:07] <FROGGS> The build has been terminated"

[16:07] <liztormato> But jnthn only changed some docs?

[16:08] <FROGGS> yeah, it got stuck in nqp

[16:08] <FROGGS> I guess their VM is broken

[16:10] *** zakharyas left
[16:10] *** tinyblak left
[16:11] <jnthn> ohnejs what have I done... o.O

[16:11] <jnthn> :)

[16:11] <jnthn> liztormato: On pragmas, I suspect the COMPILING namespace will come into it somehwat, and/or macros...

[16:12] <jnthn> liztormato: For now we can hardcode the ones we immediately need by spec.

[16:12] <FROGGS> jnthn:  MAIN_HELPER is 0.05%/0.4ms inclusive time

[16:13] <nine> Where is the difference between $self = $Perl6::ObjectCreator->create(__PACKAGE__, $self); return $self;  and return $Perl6::ObjectCreator->create(__PACKAGE__, $self); ??? And no it's not context.

[16:13] <jnthn> FROGGS: o.O

[16:13] <FROGGS> jnthn: before my patch

[16:14] <FROGGS> now it is 0.04%/0.33ms :o)

[16:14] <jnthn> FROGGS: Search for gen-usage in the profile

[16:14] <jnthn> FROGGS: On routines tab

[16:15] <FROGGS> 0.01%/0.09ms inclusive time, before my patch

[16:15] <FROGGS> I am running perl6-bench's perl6-m --profile perl6/rc-forest-fire 16 16 5

[16:16] <jnthn> Same

[16:16] <jnthn> gen-usage is 22.5% inclusive here

[16:16] <FROGGS> O.o

[16:16] <jnthn> oh wtf

[16:17] <FROGGS> I can post my profiles

[16:17] <jnthn> If you look at call graph and inside gen-usage, how costly is strip_path_prefix for you?

[16:17] <jnthn> 171.27ms here o.O

[16:17] *** SamuraiJack_ left
[16:17] *** SamuraiJack joined
[16:17] <jnthn> what the heck is that doing...

[16:18] <FROGGS> 0.01%

[16:18] <jnthn> OK...

[16:19] <FROGGS> http://froggs.de/perl6/profile-unmodified.html

[16:19] <FROGGS> that's nom without any changes

[16:19] <jnthn> Stripping is expensive on Windows, evidently...

[16:19] <FROGGS> I can fix that... and I will test it on windows too

[16:20] <liztormato> Is it IO::Spec related?

[16:20] <FROGGS> liztormato: sort of

[16:21] <liztormato> Cause I'm sure that will get some more attention from me soon

[16:22] <FROGGS> jnthn: we could use $*PROGRAM.basename instead of the strip_path_thingy

[16:22] <FROGGS> liztormato++

[16:23] <jnthn> OK :)

[16:23] <jnthn> I leave it in the two of you's capable hands :)

[16:24] <jnthn> I was hoping for a nice perl6-bench win from it for forest fire; alas, it will only show up on my (or other Windows) runs

[16:24] <liztormato> Atm basename first splits into 3 parts and then returns one of them

[16:24] <jnthn> otoh, it seems like Windows is the place where Moar compares best against Perl 5, so it can be strategic to fix this. ;)

[16:25] *** ssutch left
[16:27] <jnthn> (Also to fix our compiler flags off Windows too, perhaps. ;))

[16:28] <jnthn> (Unless the issue is that something about Perl 5 means MSVC doesn't do so well with it as on GCC, Clang, etc...)

[16:28] <FROGGS> I don't get that about the compiler flags

[16:28] <FROGGS> hmm

[16:29] <jnthn> FROGGS: Well, it's just a bit surprising that when I do perl6-bench on Windows against Perl 5, I tend to be seeing better numbers than folks doing perl6-bench runs on Linux.

[16:30] <jnthn> And it's not just that something is up with the Perl 5 that perl6-bench builds; I get the same figures out of activestate builds.

[16:31] <FROGGS> could also be an issue with activeperl

[16:32] <jnthn> True. Could also be that Moar *has* had a lot of C-level profiing done on Windows, and tweaks applied as a result of that.

[16:33] <liztormato> Afp&

[16:34] *** liztormato left
[16:37] *** nbrown joined
[16:39] *** ssutch joined
[16:40] <FROGGS> jnthn: might be more likely :o)

[16:42] *** nbrown left
[16:44] *** raydiak left
[16:45] *** ab5tract left
[16:50] *** sqirrel__ left
[16:51] <FROGGS> jnthn: I can't reproduce your USAGE weirdness on windows :/

[16:54] *** Ven left
[16:55] <FROGGS> jnthn: http://froggs.de/perl6/rcff-windows.html

[16:58] *** zakharyas joined
[17:03] *** MikeFair joined
[17:09] *** Pebbles joined
[17:10] *** Pebbles left
[17:17] *** Ven joined
[17:30] *** PerlJam joined
[17:31] *** [Coke] joined
[17:31] *** exodist_ joined
[17:33] *** Tene_ joined
[17:33] *** Tene_ left
[17:33] *** Tene_ joined
[17:33] <Ven> A: for ^10 { A.last } 

[17:33] <Ven> m: A: for ^10 { A.last } 

[17:34] <camelia> rakudo-moar ec6011: OUTPUT«(timeout)»

[17:34] <Ven> uh-oh.

[17:34] <Ven> m: A: while 1 { last }

[17:34] <Ven> ^ this segfaults here

[17:34] <camelia> rakudo-moar ec6011: OUTPUT«(timeout)»

[17:34] <moritz> m: A: for ^10 { say "inside the loop"; last A }; say "done"

[17:34] <camelia> rakudo-moar ec6011: OUTPUT«(timeout)»

[17:34] <Ven> moritz: can you confirm both my snippets don't segfault for you?

[17:35] <nine> Will Rakudo always prefer loading a .pm6 over a .pm with similiar name?

[17:36] <moritz> Ven: ./perl6-m -e 'A: for ^10 { A.last }'  neither segfaults nor loops for me

[17:36] <Ven> I'll try to pull.

[17:36] <moritz> and the   while 1 { last }   is fine too

[17:36] <moritz> This is perl6 version 2014.09-50-g5d8eebf built on MoarVM version 2014.09-3-g182085e

[17:36] <Ven> eh. but my p6 is what, 2 weeks old :/

[17:37] <Ven> (my rakudo, I mean)

[17:37] *** SamuraiJack left
[17:37] *** xenoterracide left
[17:37] *** Tene left
[17:37] *** ingy left
[17:37] *** renormalist left
[17:37] *** Exodist left
[17:37] *** carlin left
[17:37] *** lestrrat left
[17:37] *** revdiablo left
[17:37] *** coffeeyy_ left
[17:37] *** Possum left
[17:37] *** smash left
[17:37] *** jkg left
[17:37] *** Ulti left
[17:37] *** dg left
[17:37] *** exodist_ is now known as Exodist

[17:37] *** dalek left
[17:37] <Ven> get split'!

[17:38] *** dalek joined
[17:38] *** ChanServ sets mode: +v dalek

[17:39] <FROGGS> nine: yes

[17:39] *** kurahaupo joined
[17:39] <nine> FROGGS: cool :) Otherwise I'd probably have to use a lib6 directory for Perl 6 modules.

[17:42] <Ven> moritz: still segfaults here. "A: while 1 { last }" I mean.

[17:42] <Ven> This is perl6 version 2014.09-60-gec60114 built on MoarVM version 2014.09-1-g699360b

[17:43] <Ven> in fine, any kind of label usage makes it segfault

[17:46] *** masak_ joined
[17:46] *** SamuraiJack joined
[17:46] *** xenoterracide joined
[17:46] *** pmichaud joined
[17:46] *** synopsebot joined
[17:46] *** stux|RC-only joined
[17:46] *** Gothmog_ joined
[17:46] *** Guest8332 joined
[17:46] *** ClarusCogitatio joined
[17:46] *** Maddingue joined
[17:46] *** zoosha_ joined
[17:46] *** ingy joined
[17:46] *** renormalist joined
[17:46] *** carlin joined
[17:46] *** lestrrat joined
[17:46] *** jkg joined
[17:46] *** revdiablo joined
[17:46] *** coffeeyy_ joined
[17:46] *** Possum joined
[17:46] *** smash joined
[17:46] *** Ulti joined
[17:46] *** dg joined
[17:46] *** hugme joined
[17:46] *** ChanServ sets mode: +v hugme

[17:46] *** telex left
[17:48] *** simcop2387 joined
[17:48] *** simcop2387 left
[17:48] *** simcop2387 joined
[17:48] *** telex joined
[17:50] *** camelia joined
[17:51] *** Mso150 joined
[17:51] <moritz> m: my Int @a = 1, 2, 3;

[17:51] *** ChanServ sets mode: +v camelia

[17:51] <camelia> rakudo-moar ec6011: OUTPUT«(timeout)»

[17:52] <vendethiel-> m: say "camelia o/"

[17:52] <camelia> rakudo-moar ec6011: OUTPUT«camelia o/␤»

[17:53] *** tinyblak joined
[17:55] <vendethiel-> m: say 1

[17:55] <camelia> rakudo-moar ec6011: OUTPUT«1␤»

[17:55] <vendethiel-> m: A: while 1 { last }

[17:55] <camelia> rakudo-moar ec6011: ( no output )

[17:55] <vendethiel-> m: A: for 1 { last }

[17:55] <camelia> rakudo-moar ec6011: ( no output )

[17:56] <vendethiel-> wtf?

[18:03] *** dwarring joined
[18:07] *** tinyblak left
[18:07] *** tinyblak joined
[18:09] <timotimo> o/

[18:10] <vendethiel-> \o

[18:12] *** ifim joined
[18:12] *** ugexe joined
[18:13] *** tinyblak left
[18:14] *** tinyblak joined
[18:14] *** ssutch left
[18:15] <Ven> in my tutorial, I say that "array start with @"

[18:15] <Ven> that's utterly wrong. That should be "lists"

[18:16] <Ven> Is there a list of every call that doesn't flatten?

[18:16] <Ven> I don't want to put "some calls" :(

[18:17] <Ven> # Lists flatten. That means that a nested list, when gone through, will act as a shallow one

[18:17] <Ven> is that correct, both p6-wise and english-wise? :o)

[18:20] *** SamuraiJack_ joined
[18:21] *** SamuraiJack left
[18:22] *** Alina-malina joined
[18:27] <moritz> lists don't flatten; context flattens

[18:27] <moritz> context flattens lists, or doesn't

[18:28] *** itz joined
[18:35] *** Ven left
[18:36] *** Ven joined
[18:37] <Ven> moritz: that looks like nitpicking tho :)

[18:37] <Ven> also, more people getting bitten by the `$a = 1, 2, 3`

[18:39] *** virtualsue joined
[18:42] *** MikeFair left
[18:44] *** Ven left
[18:49] *** Ven joined
[19:01] *** darutoko left
[19:03] *** Mso150 left
[19:04] *** Mso150 joined
[19:12] *** kaare_ left
[19:13] <Ven> moritz: "list context flattens list" reads pretty weird :/

[19:14] <moritz> Ven: sorry, I'm not a wordsmith, just a lowly p6 wannabe-hacker

[19:14] <Ven> did you take my last remark poorly? if so, I'm sorry

[19:14] <moritz> no

[19:14] <Ven> that wasn't the idea. I'm just looking for something rather brieve but still comprehensible

[19:15] <moritz> just telling you that I don't know how to express it better while keeping correctness

[19:15] <Ven> Well, I'm ready to sacrifice a bit of correctness for clarity

[19:15] <Ven> I think you always need to over-simplify when explaining concepts

[19:16] <Ven> m: say (1, 2, (3, (4, 5))).elems

[19:16] <Ven> should be 3.

[19:18] <camelia> rakudo-moar ec6011: OUTPUT«(timeout)»

[19:18] <Ven> eh.

[19:18] <Ven> m: say (1, 2, (3, (4, 5))).elems

[19:18] <camelia> rakudo-moar ec6011: OUTPUT«3␤»

[19:18] <Ven> right. Thanks, camelia

[19:22] <leont> Is there any way to capture a look-ahead?

[19:22] <Ven> leont: don't think so, that's why it's a look-ahead :P

[19:22] <Ven> moritz: "[] is a shortcut for $()" is that "true"?

[19:22] <Ven> Does it matter if it's not 100% correct?

[19:22] <FROGGS> leont: with lexicals

[19:23] <FROGGS> leont: I mean, you can stick something in a lexical inside of the look-ahead

[19:23] <moritz> Ven: it's about 80% correct

[19:23] <leont> Yuck

[19:23] <moritz> Ven: $(...) and [...] both produce a scalar, though [] always returns a mutable array

[19:23] <leont> Then again, I could rewrite this not to need the lookahead

[19:23] <FROGGS> which is ugly of course, and possibly problematic when your rule is called as a look-ahead too

[19:24] <Ven> moritz: Right. Is the mutable VS immutable part the only difference :)?

[19:24] <Ven> I can brush over that...

[19:24] *** davido__ joined
[19:25] <FROGGS> leont: there is a rule of thumb that an non alphanumeric character as the first one in a assertion tells it to not capture

[19:25] <FROGGS> like: <?foo> <!foo> <.foo>

[19:26] <leont> It makes sense, but also makes my life more complicated right now :-/

[19:27] <FROGGS> I know that feeling :/

[19:29] <moritz> Ven: no. $(...) just gives you the thing inside the parens, packed in an item. So the type stays the same. [] always create a new Array object

[19:29] <Ven> oh, uhm, right.

[19:31] <moritz> so basically they are only the same from the flattening/non-flattening perspective

[19:33] <vendethiel-> okay, thanks for bearing with me here :-).

[19:39] <vendethiel-> I think I can explain it *correctly*/.

[19:48] <dalek> nqp-js: 4c59811 | (Pawel Murias)++ | src/vm/moar/QAST/QASTCompilerMAST.nqp:

[19:48] <dalek> nqp-js: Refactor the serialization of serialization context in the MoarVM backend.

[19:48] <dalek> nqp-js: 

[19:48] <dalek> nqp-js: It makes it easier to monkey patch that part when cross-compiling.

[19:48] <dalek> nqp-js: review: https://github.com/pmurias/nqp-js/commit/4c5981159e

[19:50] <pmurias> jnthn: would merging 4c59811 into the main nqp be acceptable?

[19:56] <Ven> moritz:  the only parcel VS list difference (for the user) is the immutability, right?

[19:56] <Ven> When is it a parcel? Only when it's not assigned?

[20:00] <moritz> Ven: also, Lists are lazy, parcels (in rakudo) aren't

[20:00] <Ven> is that by spec?

[20:00] <timotimo> aren't parcels meant to be eager by spec?

[20:00] <timotimo> except i suppose you can put multiple lazy lists into a parcel?

[20:00] <Ven> :-'

[20:00] <timotimo> that'd have to be itemized

[20:00] <timotimo> otherwise the , operator would want to flatten them, right?

[20:01] <Ven> I, uh, don't talk about LoL now, and probably not going to do so for a while

[20:01] <Ven> Still, I don't want the tutorial to be over 2k lines :/

[20:01] <Ven> I think the grammars and regexp stuff would warrant by itself another tutorial

[20:03] <timotimo> :)

[20:04] *** tinyblak left
[20:07] *** kurahaupo is now known as meeeeeeee

[20:09] *** meeeeeeee is now known as kurahaupo

[20:09] *** rindolf left
[20:10] *** rmgk_ joined
[20:10] *** rmgk_ is now known as rmgk

[20:11] <dalek> rakudo-star-daily: 8660454 | coke++ | log/MoarVM-version.log:

[20:11] <dalek> rakudo-star-daily: today (automated commit)

[20:11] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/8660454802

[20:11] <dalek> rakudo-star-daily: 3113bc6 | coke++ | log/MoarVM-version.log:

[20:11] <dalek> rakudo-star-daily: today (automated commit)

[20:11] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/3113bc68e3

[20:11] <dalek> perl6-roast-data: 6bf78c9 | coke++ | / (5 files):

[20:11] <dalek> perl6-roast-data: today (automated commit)

[20:11] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/6bf78c967d

[20:12] <[Coke]> moar, moar-jit, parrot, 1 failure. jvm: 9

[20:12] <[Coke]> S03-operators/misc.t aborted 1 test(s) on all 4 backends.

[20:15] <[Coke]> (but it runs fine on rakudo-moar-jit latest on my mac)

[20:16] <[Coke]> I updated ecosystem. how long until panda sees the new list?

[20:17] *** SamuraiJack_ left
[20:18] *** H2O1 joined
[20:18] <tadzik> [Coke]: try 'panda update' now :)

[20:20] *** H2O1 left
[20:32] *** vendethiel joined
[20:32] *** bjz left
[20:33] *** vendethiel- left
[20:33] *** brother joined
[20:33] *** bjz joined
[20:34] *** noganex joined
[20:34] *** danaj_ joined
[20:36] <j4jackj> kzzk

[20:36] <grondilu> btw panda --help swaps describtions of 'list' and 'update'

[20:36] <j4jackj> lol grondilu 

[20:37] <grondilu> *description

[20:37] <grondilu> (jeez my spelling is getting terrible lately)

[20:38] *** sunnavy_ joined
[20:38] *** ponbiki joined
[20:38] *** avuserow joined
[20:38] *** kurahaupo left
[20:39] *** Woodi joined
[20:39] *** ponbiki is now known as Guest33542

[20:40] *** salv0 joined
[20:42] *** njmurphy joined
[20:42] *** Akagi201_ joined
[20:43] *** brother| joined
[20:43] *** rjbs- joined
[20:43] *** dagurval joined
[20:43] *** betterworld joined
[20:43] *** rmgk_ joined
[20:43] *** rmgk left
[20:43] *** rmgk_ is now known as rmgk

[20:43] *** cxreg2 joined
[20:43] *** retupmoc1 joined
[20:43] *** sergot_ joined
[20:43] *** Psyche^ joined
[20:44] *** retupmoca left
[20:44] *** brother left
[20:44] *** Juerd joined
[20:45] *** _slade_ joined
[20:49] <dalek> rakudo/lax: 4f6fde2 | (Tobias Leich)++ | src/Perl6/ (3 files):

[20:49] <dalek> rakudo/lax: implement "no strict"

[20:49] <dalek> rakudo/lax: review: https://github.com/rakudo/rakudo/commit/4f6fde262f

[20:52] <tadzik> :o

[20:52] <vendethiel> FROGGS++ #sloppy code :P

[20:54] <FROGGS> :P

[21:02] *** bartolin joined
[21:03] <bartolin> Hi, #perl6

[21:04] <bartolin> [Coke]: The aborted test in S03-operators/misc.t was my failure: I deleted a test and forgot to update the plan. moritz++ fixed that yesterday (but probably too late for your runs).

[21:10] *** colomon joined
[21:11] *** kurahaupo joined
[21:12] <danaj_> I was happy to see one of the RosettaCode tasks that indicated "this test takes a couple hours to run" now takes ~20 seconds with perl6-m.

[21:17] <vendethiel> oooh I still havn't talked of any :o)

[21:17] <vendethiel> and junctions in general. And auto-threading

[21:22] *** virtualsue left
[21:51] *** btyler joined
[21:56] *** slavik joined
[21:59] *** virtualsue joined
[21:59] *** _slade_ left
[22:02] *** zakharyas left
[22:06] *** slavik left
[22:10] *** slavik joined
[22:15] *** BenGoldberg joined
[22:15] *** BenGoldberg left
[22:17] *** BenGoldberg joined
[22:19] *** kurahaupo_ joined
[22:20] *** kurahaupo left
[22:22] *** _slade_ joined
[22:23] *** kurahaupo_ is now known as kurahaupo

[22:24] *** bartolin left
[22:25] *** mberends left
[22:27] *** mberends joined
[22:28] *** lue joined
[22:37] *** xenoterracide left
[22:39] *** xenoterracide joined
[22:42] *** erkan joined
[22:42] *** erkan left
[22:42] *** erkan joined
[22:48] *** gfldex left
[22:50] *** Mso150 left
[22:56] *** ggoebel111118 joined
[23:05] *** Mso150 joined
[23:09] *** spider-mario left
[23:10] *** xenoterracide left
[23:22] *** Mouq joined
[23:23] <Mouq> OSX: perl6 -e'</usr/share/dict/words>.IO.open.get.say'

[23:23] <Mouq> Failed to stat in filehandle: no such file or directory

[23:23] <Mouq> Which is weird, 'cause it seems to work fine for other {sym,hard}links

[23:24] <Mouq> Ahhh, only when in the same directory as the link, though!

[23:24] <Mouq> cd /usr/share/dict

[23:24] <Mouq> perl6 -e'</usr/share/dict/words>.IO.open.get.say'

[23:24] <Mouq> A

[23:28] *** Mouq left
[23:30] *** virtualsue left
[23:35] *** Ven left
[23:50] <danaj_> Mouq: I noticed that a few weeks ago on my Fedora machine and also thought it was strange.

[23:52] *** xenoterracide joined
