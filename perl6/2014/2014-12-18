[00:01] *** virtualsue left
[00:04] *** Ugator left
[00:05] *** BenGoldberg left
[00:06] *** BenGoldberg joined
[00:07] <brrt> ehm, who maintains the perl6 advent blog?

[00:07] <brrt> https://gist.github.com/bdw/3f3928bed9428fa386cb <- blog entry for today

[00:15] *** moritz left
[00:16] *** moritz joined
[00:16] *** bcode left
[00:16] *** smash left
[00:16] *** smash joined
[00:17] *** bcode joined
[00:17] *** pyrimidi_ joined
[00:18] *** pyrimidi_ is now known as pyrimidine_

[00:18] <pyrimidine_> Ulti++ # getting an O'Reilly tweet

[00:20] <vendethiel> ooh, amazing, brrt! I said I should contribute some to moarvm, nice start

[00:21] <brrt> (tweets ftw :-))

[00:21] *** ka05 joined
[00:21] <brrt> well, if it helps recruit people to moarvm, then i've succeeded :-)

[00:21] <brrt> but i don't know how to post it on the perl6advent blog (i don't have credentials for it, for one)

[00:22] <brrt> but whoever does has my full permission to post it and make changes

[00:30] *** pyrimidine_ left
[00:31] *** ab5tract joined
[00:39] *** BenGoldberg left
[00:40] *** BenGoldberg joined
[00:44] *** BenGoldberg left
[00:45] *** BenGoldberg joined
[00:47] *** BenGoldberg left
[00:47] *** BenGoldberg joined
[00:54] <colomon> brrt: what's your e-mail?

[00:56] <raiph> I've added a comment to brrt++'s gist with typo corrections

[00:57] *** BenGoldberg left
[00:57] *** BenGoldberg joined
[00:58] <brrt> thanks raiph :-)

[00:58] <brrt> colomon: sent via pm

[00:59] <brrt> raiph: fixed

[01:04] <colomon> brrt: sorry, got distracted by Michigan coaching news.  ;)

[01:05] <colomon> brrt: you should have an invitation to join p6 advent waiting in your e-mail.  

[01:10] <brrt> np :-)

[01:22] *** labster left
[01:24] *** Brian joined
[01:25] *** Brian is now known as Guest63206

[01:27] <brrt> http://perl6advent.wordpress.com/?p=2733&preview=true

[01:28] <brrt> i've scheduled it for two hours from now

[01:28] <brrt> and i'm going to sleep

[01:28] <brrt> see y'all tomorrow

[01:28] *** brrt left
[01:43] *** prime left
[01:46] *** konsolebox joined
[01:50] *** Guest63206 left
[01:54] *** chenryn joined
[02:04] *** doublelel joined
[02:06] *** grettis_ left
[02:06] *** BenGoldberg left
[02:06] *** BenGoldberg joined
[02:11] *** abraxxa1 joined
[02:12] <abraxxa1> is www.perl6.org moved to the new server currently? it shows the wrong page...

[02:13] *** abraxxa1 is now known as abraxxa_home

[02:14] *** atroxaper joined
[02:17] *** rmgk_ joined
[02:17] *** rmgk is now known as Guest76406

[02:17] *** rmgk_ is now known as rmgk

[02:19] *** atroxaper left
[02:21] *** Guest76406 left
[02:25] <TimToady> indeed it does

[02:31] *** BenGoldberg left
[02:32] *** BenGoldberg joined
[02:34] *** _4d47 left
[02:34] *** telex left
[02:36] *** telex joined
[02:40] *** vendethiel left
[02:40] *** doublelel left
[02:43] *** vendethiel joined
[02:43] *** prime joined
[02:47] *** ab5tract left
[02:49] *** BenGoldberg left
[02:49] *** BenGoldberg joined
[02:51] *** terrencehan joined
[02:52] *** doublelel joined
[02:58] <timotimo> i changed the title to start with "Day 18:" and put it into the 2014 category

[02:59] <timotimo> i hope i didn't break it just by opening it in the wordpress editor

[03:00] <colomon> brrt++

[03:02] <timotimo> damn

[03:02] <timotimo> if i had been there, i could have told brrt how to run the graph spesh tool

[03:02] <timotimo> (all it needs is for you to run update_ops.pl)

[03:03] *** noganex joined
[03:03] <timotimo> but it also tells you to in the comment at the beginning of the script :S

[03:03] <abraxxa_home> i'm trying to compile rakudo with clang and found https://www.mail-archive.com/perl6-internals@perl.org/msg45189.html

[03:03] <abraxxa_home> but it seems the option to pass the compiler and linker has changed

[03:04] <abraxxa_home> is this a --parrot-option ?

[03:05] <timotimo> i wonder if it'd be disrespectful to write a little in-line comment about that?

[03:06] *** noganex_ left
[03:06] *** BenGoldberg left
[03:07] *** terrencehan left
[03:09] *** jack_rabbit joined
[03:12] <abraxxa_home> seems to be --moar-option='--compiler clang'

[03:13] <timotimo> right, we're suggesting people build with MoarVM by default nowadays

[03:13] <timotimo> moarvm doesn't accept parrot options :)

[03:15] <abraxxa_home> it's --compiler=clang, seems the help screen is slightly wrong there

[03:16] *** Mso150 joined
[03:16] <timotimo> oh, could be

[03:16] * timotimo doesn't know much about the build system

[03:17] <abraxxa_home> i've added a moar-clang option to my rakudobrew

[03:20] <abraxxa_home> clang warns a *lot*

[03:21] <timotimo> yes :(

[03:23] <abraxxa_home> but it builds fine

[03:23] <abraxxa_home> as the all the perl6.org websites including modules.perl6.org doesn't work I can't install modules using panda

[03:33] <timotimo> ooooh

[03:37] <abraxxa_home> did you not know that?

[03:37] <abraxxa_home> maybe a vhost misconfiguration of apache

[03:38] <timotimo> i didn't know that

[03:38] <timotimo> i'm looking at www.p6c.org now (from the inside) and seeing a few difficulties

[03:38] <abraxxa_home> all those urls go to Perl 6 Design Documents

[03:38] <timotimo> yes

[03:38] <timotimo> all the sites-enabled/ files aren't added to git, for example

[03:40] <abraxxa_home> symlinks?

[03:40] <abraxxa_home> are you running Debian?

[03:40] <timotimo> this is a debian system, aye

[03:40] <abraxxa_home> yeah, i've read the posts about the new server

[03:40] <abraxxa_home> tried to come up with one at work too

[03:41] <timotimo> which mod exactly would apache want to make the sites-enabled subdir work?

[03:42] <abraxxa_home> no mod, the main config file just includes all those files

[03:42] <timotimo> mhm

[03:42] <abraxxa_home> most Debian packages are configured that way

[03:42] <abraxxa_home> even sudo since version 7

[03:43] <timotimo> ok

[03:43] <timotimo> in that case i don't really see what could be wrong :(

[03:43] <abraxxa_home> check the main config file if the sites-enabled dir is really included

[03:43] <abraxxa_home> and file permissions

[03:43] <abraxxa_home> dir perms too

[03:44] * JimmyZ can take a look if he has permissions

[03:45] <abraxxa_home> check the startup log for errors

[03:45] <timotimo> the folders are r-x for others, the files are r-- for others

[03:45] <timotimo> should work

[03:46] *** atroxaper joined
[03:47] <raiph> did you guys see http://irclog.perlgeek.de/perl6/2014-12-17#i_9821281?

[03:48] <timotimo> is VirtualHost *:80 really correct?

[03:48] <JimmyZ> yeah

[03:48] <raiph> also, i just emailed Audrey (re perl6.org issues)

[03:48] <abraxxa_home> yes

[03:48] <abraxxa_home> the server name should be configured for each vhost though

[03:49] <abraxxa_home> the VirtualHost directive just tells it to do routing by hostname

[03:49] <JimmyZ> I don't know how au's action affects perl6.org

[03:49] <JimmyZ> :)

[03:50] <raiph> JimmyZ: did you see the dns change in my clog link?

[03:50] <abraxxa_home> $ host modules.perl6.org

[03:50] <abraxxa_home> modules.perl6.org has address 213.95.82.53

[03:50] <abraxxa_home> is that what it should be?

[03:50] <JimmyZ> raiph: yeah

[03:50] <timotimo> the ServerName is configured, as are multiple ServerAlias directives

[03:51] <timotimo> er, configs? options?

[03:51] <abraxxa_home> https://httpd.apache.org/docs/2.4/en/vhosts/name-based.html

[03:51] *** Mso150 left
[03:52] <abraxxa_home> timotimo: i'd reload apache and check the logs

[03:53] <timotimo> i've reloaded it; which log file shoul di check?

[03:53] <JimmyZ> /var/log/apache* ?

[03:53] *** atroxaper left
[03:54] <timotimo> yeah, not much to see there

[03:54] <abraxxa_home> can you see my request coming from 62.178.122.70?

[03:55] <abraxxa_home> should have served modules.perl6.org

[03:55] <timotimo> no accesses for 18th dec for modulse.perl6.org

[03:56] <abraxxa_home> does httpd.conf include the sites-enabled dir?

[03:56] <timotimo> your ip shows up in design.perl6.org, though

[03:56] <abraxxa_home> where is that vhost configured?

[03:57] <abraxxa_home> in one of the sites-enabled files or the main httpd.conf?

[03:57] <timotimo> yes, it does

[03:57] <JimmyZ> it looks like perlcabal.org has bad configure...

[03:57] <raiph> fwiw http://testers.perl6.org/ works

[03:57] <JimmyZ> which make other configures fail

[03:57] <abraxxa_home> JimmyZ: it redirects to http://perl6.org/ which also serves the same, wrong site as modules.perl6.org

[03:58] <timotimo> oh

[03:58] <timotimo> i think i know what's going on?

[03:58] <JimmyZ> abraxxa_home: yeah

[03:58] <abraxxa_home> $ host testers.perl6.org

[03:58] <abraxxa_home> testers.perl6.org has address 85.25.222.109

[03:58] <JimmyZ> testers.perl6.org is different server

[03:58] <timotimo> the virtualhosts for design and perlcabal have ip addresses

[03:58] <timotimo> the others just have *

[03:58] <timotimo> does that make them more specific, and thus prefered in the first step of VHost resolvment?

[03:59] <JimmyZ> yeah, that is what it looks like

[03:59] <timotimo> gimme a sec.

[03:59] <abraxxa_home> i remember i had that problem when i was using apache (switched to nginx years ago)

[03:59] <abraxxa_home> maybe something with IPv6 enabled

[03:59] *** noganex_ joined
[03:59] <timotimo> that's it

[04:00] <timotimo> please try it on your end

[04:00] <abraxxa_home> the apache docs say: Name-based virtual hosts for the best-matching set of  <virtualhost>s are processed      in the order they appear in the configuration.

[04:00] <JimmyZ> so perlcabal.org host's configure is bad

[04:00] <JimmyZ> Is it?

[04:00] <abraxxa_home> YAY!

[04:00] <timotimo> abraxxa_home: yes, but only after IP-based virtual hosts have been processed

[04:00] <timotimo> It is important to recognize that the first step in name-based virtual host resolution is IP-based resolution. Name-based virtual host resolution only chooses the most appropriate name-based virtual host after narrowing down the candidates to the best IP-based match. Using a wildcard (*) for the IP address in all of the VirtualHost directives makes this IP-based mapping irrelevant.

[04:01] <abraxxa_home> got it

[04:01] *** xinming left
[04:01] <abraxxa_home> i'd recommend using * everywhere IF all sites should be accessible by all IPs only by their names

[04:01] <timotimo> yeah

[04:01] <abraxxa_home> then i had the same problem because it also occurred when mixing the two

[04:02] <timotimo> moritz will have had some reason to have that in there; maybe it was copypasted from the previous config where these sites lived on separate servers

[04:02] *** noganex left
[04:02] <abraxxa_home> so why do i now get Could not find Shell::Command in any of: /home/abraxxa/.rakudobrew/moar-clang-2014.11/install/languages/perl6/lib, /home/abraxxa/.rakudobrew/moar-clang-2014.11/install/languages/perl6

[04:03] <abraxxa_home> ah, forgot to run rakudobrew build panda for the clang build, panda still found in path?

[04:05] <abraxxa_home> is there a useful benchmark for Perl6 so I can compare the gcc with the clang build?

[04:05] *** rurban joined
[04:05] <timotimo> we have perl6-bench, but there's not really a single benchmark that'd give you a good coverage of "everything"

[04:06] <abraxxa_home> perl 6 test suite?

[04:07] <abraxxa_home> both builds fail NativeCall t/08-callbacks.t

[04:07] <timotimo> 32bit?

[04:07] <abraxxa_home> 64bit Ubuntu 14.10

[04:08] <abraxxa_home> where does panda extract the modules to run the tests?

[04:10] <abraxxa_home> it's test 3: *** Error in `/home/abraxxa/.rakudobrew/moar-2014.11/install/bin/moar': free(): invalid pointer: 0x00007ff23dfb0a58 ***

[04:10] <abraxxa_home> Aborted (core dumped)

[04:12] <timotimo> in a .work folder

[04:12] <abraxxa_home> ~/.panda-work

[04:12] <abraxxa_home> found out using panda look

[04:14] <abraxxa_home> default os compiler different from Perl 6 compiler maybe?

[04:14] <abraxxa_home> but then the regular moar build should succeed at least

[04:16] <abraxxa_home> clang fails with *** Error in `/home/abraxxa/.rakudobrew/moar-clang-2014.11/install/bin/moar': munmap_chunk(): invalid pointer: 0x00007fbe1e322a78 ***

[04:16] <abraxxa_home> i try to get some sleep

[04:16] <abraxxa_home> for whatever reason I wasn't able to today...

[04:19] *** xinming joined
[04:19] <timotimo> gnite!

[04:20] <abraxxa_home> thanks!

[04:21] <abraxxa_home> have to do some dbic support ;)

[04:25] *** perlpilot joined
[04:25] *** dj_goku joined
[04:31] *** perlpilot left
[04:32] *** abraxxa_home left
[04:35] *** rurban left
[04:39] *** erkan left
[04:42] *** erkan joined
[04:46] *** erkan left
[04:49] *** raiph left
[04:50] *** jack_rabbit left
[04:53] *** vendethiel left
[04:54] *** vendethiel joined
[04:55] *** tinyblak joined
[04:59] *** chenryn left
[05:03] *** kaare_ joined
[05:03] *** jack_rabbit joined
[05:03] *** anaeem1_ joined
[05:04] *** anaeem1_ left
[05:04] *** anaeem1_ joined
[05:06] *** KCL_ joined
[05:15] *** vendethiel left
[05:19] *** vendethiel joined
[05:22] *** aborazmeh joined
[05:31] *** chenryn joined
[05:38] *** anaeem1__ joined
[05:39] *** anaeem1__ left
[05:39] *** anaeem1_ left
[05:39] *** anaeem1 joined
[05:46] *** Chillance joined
[05:47] *** Chillance left
[05:59] *** kaare_ left
[06:08] *** [Sno] left
[06:18] *** nige joined
[06:21] *** kaare_ joined
[06:30] *** chenryn left
[06:31] *** torbjorn left
[06:31] *** aborazmeh left
[06:32] *** torbjorn joined
[06:32] *** daxim left
[06:32] *** molaf left
[06:32] *** daxim joined
[06:33] *** molaf joined
[06:41] *** konsolebox left
[06:55] *** chenryn joined
[07:04] *** mr-foobar left
[07:08] *** hekmek joined
[07:09] *** bjz joined
[07:09] *** atroxaper joined
[07:14] *** atroxaper left
[07:32] *** Woodi joined
[07:33] *** jack_rabbit left
[07:43] *** [Sno] joined
[07:46] *** jack_rabbit joined
[07:49] *** Woodi left
[07:49] *** Woodi joined
[07:50] *** FROGGS joined
[07:57] <moritz> \o

[07:59] <nwc10> o/

[07:59] <moritz> timotimo: the reason behind the odd virtualhost config was that I wanted separate IPv6 addresses for the separate vhosts

[08:00] <moritz> timotimo: I know it can be made to work, I just need to be more diligent testing it

[08:00] <moritz> timotimo: thanks for fixing it!

[08:00] <moritz> timotimo++

[08:00] <moritz> (increased bus number)++

[08:02] *** anaeem1 left
[08:02] *** anaeem1 joined
[08:04] *** zakharyas joined
[08:07] <JimmyZ> \o/

[08:12] *** darutoko joined
[08:13] *** brrt joined
[08:13] <brrt> timotitmo++ :-)

[08:14] <brrt> (not my best day in typing names)

[08:14] <brrt> timotimo++

[08:15] <moritz> brrt: use tab completion for nick names :-)

[08:17] *** hekmek left
[08:17] <brrt> (does that work in erc :-o)

[08:20] *** nige left
[08:22] <moritz> brrt: I've never used erc, but I'd be surprised if it didn't

[08:22] <brrt> it does :-)

[08:23] *** brrt left
[08:23] *** brrt joined
[08:24] *** Alina-malina left
[08:25] *** Alina-malina joined
[08:31] *** rindolf joined
[08:34] *** KCL_ left
[08:35] *** [particle]1 left
[08:48] *** jack_rabbit left
[08:52] <mathw> good $localtime o/

[08:53] *** ptc_p6 joined
[08:56] *** atroxaper joined
[08:57] *** Isp-sec joined
[08:57] <mathw> SpaceX are going to test out landing the first stage of a Falcon 9 on a 300x100ft barge on their next launch

[08:57] <mathw> that is pretty damned awesome

[08:57] <mathw> if they can do it

[08:57] <mathw> they reckon it's only got a 50% chance of success though

[08:57] *** virtualsue joined
[08:59] *** jack_rabbit joined
[09:00] *** ptc_p6 left
[09:01] *** ptc_p6 joined
[09:01] <mathw> woops

[09:01] <mathw> that was all in the wrong channel, I apologise

[09:02] *** atroxaper left
[09:02] <FROGGS> mathw: np, many people here are interested in that :o)

[09:04] *** virtualsue left
[09:09] *** molaf_ joined
[09:10] <lizmat> good *, #perl6!

[09:10] <yoleaux> 17 Dec 2014 22:08Z <jnthn> lizmat: I'll take care of the MoarVM release early afternoon; hope that fits well if your relesae planning...

[09:11] <lizmat> related PSA: I will start the release process in about 4 hours from now

[09:11] *** molaf left
[09:12] * lizmat backlogs

[09:13] <brrt> \o lizmat

[09:13] <lizmat> brrt o/

[09:13] <lizmat> brrt++ # nice blogpost

[09:14] *** jack_rabbit_ joined
[09:14] * moritz should read

[09:15] *** [particle] joined
[09:15] <dalek> rakudo/nom: 0385d0f | lizmat++ | docs/ChangeLog:

[09:15] <dalek> rakudo/nom: ChangeLog tweaks

[09:15] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0385d0f1dc

[09:17] *** jack_rabbit left
[09:18] *** rurban joined
[09:18] <dalek> rakudo/nom: c6d87c3 | lizmat++ | docs/release_guide.pod:

[09:18] <dalek> rakudo/nom: This month's release will be called 'Cologne'

[09:18] <dalek> rakudo/nom: 

[09:18] <dalek> rakudo/nom: In appreciation of this week's very successful Niederrhein.PM meeting.

[09:18] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c6d87c3498

[09:20] *** bjz_ joined
[09:20] *** bjz left
[09:26] <brrt> thanks :-)

[09:28] *** denis_boyun_ joined
[09:29] *** dakkar joined
[09:31] *** fhelmberger joined
[09:34] <lizmat> afk for a few hours&

[09:34] *** brrt left
[09:34] *** brrt joined
[09:39] *** mvuets joined
[09:40] *** virtualsue joined
[09:43] <tadzik> mathw: this is the most right channel for that that I know of

[09:43] <tadzik> #perl6 is all about rocket launches :)

[09:48] *** virtualsue left
[09:51] *** pecastro joined
[09:56] <mathw> Rocket.new(size => Size::ReallyReallyBig);

[10:06] *** tinyblak_ joined
[10:08] *** denis_boyun_ left
[10:10] *** tinyblak left
[10:10] *** spider-mario joined
[10:11] *** spider-mario left
[10:12] *** spider-mario joined
[10:19] *** jack_rabbit_ left
[10:24] *** xinming left
[10:25] *** xinming joined
[10:30] *** atroxaper joined
[10:31] *** tinyblak_ left
[10:31] *** tinyblak joined
[10:33] *** telex left
[10:34] *** tinyblak_ joined
[10:34] *** telex joined
[10:36] *** tinyblak_ left
[10:36] *** khisanth_ joined
[10:36] *** atroxaper left
[10:36] *** tinyblak_ joined
[10:37] *** tinybla__ joined
[10:37] *** tinyblak left
[10:38] *** Khisanth left
[10:40] *** tinyblak_ left
[10:43] *** jack_rabbit_ joined
[10:48] *** virtualsue joined
[10:50] <masak> good noon, #perl6

[10:51] <masak> brrt++ # http://perl6advent.wordpress.com/2014/12/18/moarvm-internals-for-the-brave-and-curious/

[10:51] *** ssqq joined
[10:51] <masak> who wants to do tomorrow? we have a free slot.

[10:51] * masak pictures someone reading this and going "oh, it's my turn! time to volunteer!"

[10:52] <brrt> thanks masak :-)

[10:52] <ssqq> nqp-m: ok((?nqp::getlex("&say") == 1), "&say is global routine");

[10:52] <camelia> nqp-moarvm: OUTPUT«ok 1 - &say is global routine␤»

[10:53] <brrt> although 215 mov instructions in such a simple routine... that shocked me, really

[10:53] <ssqq> nqp-m: my $sub-name := '&say'; ok((?nqp::getlex($sub-name) == 1), "&say is global routine");

[10:53] <camelia> nqp-moarvm: OUTPUT«expected QAST constant; didn't get one␤   at gen/moar/stage2/QAST.nqp:5402  (/home/camelia/rakudo-inst-2/languages/nqp/lib/QAST.moarvm:as_mast_constant:6)␤ from gen/moar/stage2/QAST.nqp:5390  (/home/camelia/rakudo-inst-2/languages/nqp/lib/QAST.moarvm:as_mast_c…»

[10:58] *** chenryn left
[11:03] *** jack_rabbit_ left
[11:06] <hahainternet> o/ masak 

[11:12] *** ab5tract joined
[11:18] <masak> ahoj.

[11:19] <masak> more specifically, we have four slots to fill before the Advent calendar is complete.

[11:19] *** Isp-sec left
[11:19] <masak> I could maybe do one more, but I'd like to see two more slots filled in first... :)

[11:20] <masak> as usual, it would be kind of nice to have something a little extra for the 24 slot.

[11:28] *** Ugator joined
[11:28] *** jack_rabbit_ joined
[11:31] *** ab5tract left
[11:34] *** atroxaper joined
[11:34] *** bjz_ left
[11:35] *** bjz joined
[11:38] *** atroxaper left
[11:39] *** rurban left
[11:44] *** denis_boyun joined
[11:56] <dalek> rakudo/nom: 1c88e82 | lizmat++ | docs/ChangeLog:

[11:56] <dalek> rakudo/nom: Mention fixing of OS X flakiness

[11:56] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1c88e82b7a

[11:56] <moritz> masak: I'm considering doing a sleepsort for day 23

[11:57] <moritz> masak: 'cause we've had sorting stuff on two 23rd days before

[11:57] *** andreos joined
[11:58] <lizmat> lunch&

[12:00] *** perturbation joined
[12:03] <andreos> how to apply a function to an array as it were a list of arguments? 

[12:04] <masak> moritz: go for it! :)

[12:04] <masak> andreos: f(|@array)

[12:04] <andreos> m: sub first($car, *@cdr){$car}; say first( | "asdfgh".comb)

[12:04] <camelia> rakudo-moar c6d87c: OUTPUT«a␤»

[12:04] <andreos> thanks

[12:08] *** ab5tract joined
[12:22] *** jack_rabbit_ is now known as jack_rabbit

[12:30] *** ab5tract left
[12:36] *** ssqq left
[12:36] *** ssqq joined
[12:48] *** pdcawley joined
[12:50] *** rurban joined
[12:57] *** atroxaper joined
[13:01] <jnthn> Afternoon, #perl6

[13:01] <hahainternet> hey jnthn 

[13:01] <moritz> \o

[13:02] <hahainternet> bringing up a topic from a few days ago, did any progress get made regarding unions/fixed allocs in nativecall? i still haven't had chance to go through the nqp pdf and learn the infrastructure well enough to be of any use

[13:03] *** atroxaper left
[13:04] *** atroxaper joined
[13:05] <nwc10> good UGT heresy, jnthn

[13:08] <dalek> mu: 1ce52da | lizmat++ | misc/perl6advent-2014/schedule:

[13:08] <dalek> mu: Add title of brrt's post

[13:08] <dalek> mu: review: https://github.com/perl6/mu/commit/1ce52dac06

[13:09] <dalek> rakudo/nom: 2698598 | lizmat++ | src/core/Mu.pm:

[13:09] <dalek> rakudo/nom: Remove support for bless *, deprecated 1 year ago

[13:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/269859856b

[13:13] <dalek> rakudo/nom: a71ed88 | jnthn++ | docs/ChangeLog:

[13:13] <dalek> rakudo/nom: Some missing ChangeLog entries.

[13:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a71ed88749

[13:14] <lizmat> jnthn: the {} zen slice listifies, according to the code ?

[13:16] <jnthn> I thought we said .hash?

[13:16] <jnthn> *sigh*

[13:16] <lizmat> well, when I tried that, I got quite a few spectest failures

[13:16] <jnthn> arrgh

[13:16] <lizmat> let me double check that again in a mo

[13:16] <jnthn> Well, .list is certainly wrong

[13:16] <jnthn> That's worse than it wsa before.

[13:17] <jnthn> So we should back that out if we can't .hash.

[13:17] <lizmat> ok, will do

[13:18] *** Rounin joined
[13:18] <jnthn> lismat++

[13:18] <jnthn> uh, lizmat

[13:19] <jnthn> This train internet is so crappy today Im typing blind half the time... :/

[13:19] <dalek> rakudo/nom: e84b99a | lizmat++ | docs/release_guide.pod:

[13:19] <dalek> rakudo/nom: Add a step about removing DEPRECATED code

[13:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e84b99ab5d

[13:20] <jnthn> Will work on MoarVM release.

[13:20] <lizmat> ok, cool  :-)

[13:21] *** anaeem1 left
[13:25] *** aborazmeh joined
[13:25] *** aborazmeh left
[13:25] *** aborazmeh joined
[13:29] *** perturbation left
[13:30] <m_athias> jnthn: https://mosh.mit.edu/ makes that a waaaay better

[13:30] *** andreos left
[13:32] <jnthn> m_athias: ooh, nice... I should give it a try :)

[13:33] <colomon> Net::DNS and Net::XMPP failed tests overnight.  

[13:34] *** ssqq left
[13:36] <lizmat> jnthn: with {} returning SELF.hash, I get errors in t/spec/S32-str/numeric.t

[13:36] <lizmat> m: my $str = ":10<8_>"; +$str

[13:36] <camelia> rakudo-moar 1c88e8: OUTPUT«Unhandled exception: Cannot convert string to number: malformed ':10' style radix number, expecting '>' after the body in ':10<8⏏_>' (indicated by ⏏)␤   at <unknown>:1  (/home/camelia/rakudo-inst-1/languages/perl6/runtime/CORE.setting.moarvm:throw:42…»

[13:36] <lizmat> becomes:

[13:36] <lizmat> Odd number of elements found where hash initializer expected

[13:37] <jnthn> That looks like a failure in constructing the error message...

[13:37] <jnthn> Oh, or maybe we're losing a container?

[13:37] <lizmat> not sure yet

[13:37] <lizmat> it's a rather large test file  :-)

[13:38] <jnthn> What happens if we do:

[13:39] <nwc10> jnthn: maybe if the train stood still, the internet would get better? :-)

[13:39] <jnthn> multi sub postcircumfix:<{ }>( \SELF ) is rw { SELF.hash }

[13:39] <jnthn> multi sub postcircumfix:<{ }>(Associative \SELF ) is rw { SELF }

[13:40] <lizmat> trying

[13:40] *** Alina-malina left
[13:41] *** Alina-malina joined
[13:43] <abraxxa> tadzik: are you interessted in a patch for rakudobrew that lets you set the compiler for moar?

[13:44] <tadzik> abraxxa: I'd rather have something generic that gets passed along to Configure.pl

[13:44] <tadzik> so one can make that --moar-option=different-compiler or whatever

[13:44] <lizmat> jnthn: same errors in that test

[13:44] <lizmat> running full spectest now

[13:44] <abraxxa> tadzik: i did it by cloning moar to moar-clang in line 24

[13:45] <abraxxa> i wanted a generic, additional option first but then realized its moar specific

[13:45] <tadzik> well, rakudo's Configure.pl manages to have backend specific options

[13:46] <tadzik> we could get away with something like --configure-opts

[13:46] <abraxxa> when multiple impls are brewed you should be able to pass different things to them..

[13:46] <tadzik> that too

[13:47] <tadzik> but rakudo's Configure.pl is capable of that, afaik

[13:47] <tadzik> there's --moar-option, --parrot-option...

[13:48] <abraxxa> yeah, so rakudobrew should be able to pass different things to them

[13:48] <tadzik> I don't think rakudo breaks if you don --backends=moar --parrot-option=foo

[13:48] <abraxxa> ah, i see

[13:48] <tadzik> s/don/do/

[13:48] <lizmat> jnthn: more breakage that way

[13:48] <tadzik> if it does, I'm willing to go and change that :P

[13:48] <tadzik> but I don't see why it would

[13:49] <lizmat> looks like I need to specify candidates for all named parameters as well: Unexpected named parameter 'exists' passed

[13:49] <tadzik> so: I don't think that rakudobrew should be concerned as to how to pass different options to different backends

[13:49] <tadzik> just have rakudo do it

[13:49] <abraxxa> ok

[13:49] <abraxxa> clone + github pull request?

[13:50] <tadzik> yes please :)

[13:50] <abraxxa> s/clone/fork/

[13:50] <tadzik> I might be slow to respond, feel free to bother me here

[13:50] <lizmat> m: my %h; %h{}:exists  # jnthn: fails now

[13:50] <camelia> rakudo-moar 1c88e8: ( no output )

[13:50] * [Coke] double checks, and the release in jan occurs the week before work travel. whew.

[13:51] <jnthn> :exists on a zen slice?!

[13:51] <jnthn> But yeah...dammit, the Associative beats the :exists.

[13:51] <jnthn> Just back out the .list for now, and the ChangeLog entry then. We'll have to take it in the next release.

[13:53] <lizmat> ok

[13:54] <dalek> rakudo/nom: 1b0e064 | lizmat++ | src/core/hash_slice.pm:

[13:54] <dalek> rakudo/nom: Revert "Make foo[] and foo{} consistent"

[13:54] <dalek> rakudo/nom: 

[13:54] <dalek> rakudo/nom: We will need to revisit that for a future release.

[13:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1b0e0642cd

[14:02] <abraxxa> tadzik: can we please use a module for cli arg handling?

[14:03] <tadzik> abraxxa: I'd much rather not :|

[14:03] <tadzik> oh, unless it's core

[14:03] <abraxxa> is there one? i just looked in 5.20.1 but can't find one

[14:03] <masak> doesn't Perl 6 already have quite a lot of arg handling in the language?

[14:03] <abraxxa> i thought one very old is core, don't remember its name

[14:03] <abraxxa> masak: i uses perl 5 to build perl 6

[14:04] <masak> I see.

[14:04] <tadzik> abraxxa: "Getopt::Long was first released with perl 5"

[14:05] <abraxxa> so why isn't it listed here? https://metacpan.org/release/perl

[14:05] <abraxxa> the corelist is a lie!

[14:05] <Ulti> m: say !???

[14:05] <camelia> rakudo-moar 1c88e8: OUTPUT«Stub code executed  in block <unit> at /tmp/56EnEzsE7K:1␤␤True␤»

[14:07] <Ulti> m: my $var = !!???????; say $var.uc;

[14:07] <camelia> rakudo-moar 1c88e8: OUTPUT«===SORRY!=== Error while compiling /tmp/tK8Fs1anto␤Two terms in a row␤at /tmp/tK8Fs1anto:1␤------> my $var = !!???????⏏; say $var.uc;␤    expecting any of:␤        argument list␤        postfix␤        i…»

[14:07] <Ulti> m: my $var = !!???; say $var.uc;

[14:07] <camelia> rakudo-moar 1c88e8: OUTPUT«Stub code executed  in block <unit> at /tmp/0neLrfGtlV:1␤␤FALSE␤»

[14:07] <Ulti> heh there is some weird stuff around there

[14:07] <Ulti> I'm guessing the last ?? are a ternary

[14:08] <Ulti> which is why it doesnt like the stub

[14:08] <lizmat> m: !!!!   # similar issue

[14:08] <camelia> rakudo-moar 1c88e8: OUTPUT«===SORRY!=== Error while compiling /tmp/z9XzkdGBnH␤Negation metaoperator not followed by valid infix␤at /tmp/z9XzkdGBnH:1␤------> !!!!⏏   # similar issue␤    expecting any of:␤        argument list␤       …»

[14:08] <lizmat> m: say !!!!   # similar issue

[14:08] <camelia> rakudo-moar 1c88e8: OUTPUT«===SORRY!=== Error while compiling /tmp/foUqmZtV8x␤Negation metaoperator not followed by valid infix␤at /tmp/foUqmZtV8x:1␤------> say !!!!⏏   # similar issue␤    expecting any of:␤        argument list␤   …»

[14:09] *** sven_123_ joined
[14:12] *** sven_123_ left
[14:16] <lizmat> jnthn: re: 19f661f3b4092548cd64284c52f2609af3057b43

[14:16] <lizmat> wouldn't it make sense to add a method to Mu with that list of names, and call that

[14:16] <lizmat> and thus make it overridable for a class ?

[14:18] <lizmat> TimToady: I guess 5a06ace5c5c458a78313e32d7235e428486bbe23 is really an API change, so should be emphasized in the release message ?

[14:19] <lizmat> jnthn: re, 7432d6202ede8569cac13ecbfae78afafc915fa4 , wouldn't that be worthy of a advent post ?

[14:23] <abraxxa> tadzik: can the dirname of the installed rakuda be set with rakudobrew?

[14:23] <tadzik> abraxxa: nope

[14:23] <tadzik> maybe it should be :)

[14:24] <abraxxa> would it be easier to extend perlbrew?

[14:24] <tadzik> I don't think so

[14:24] <abraxxa> i'm not very happy with my code but it works

[14:24] <tadzik> I once looked into making a plenv plugin, but it looked like more trouble than it was worth

[14:24] <abraxxa> the error messages are a bit misleading, talk about gcc although i requested clang

[14:24] <jnthn> lizmat: (method on Mu), no, that feels like mixing levels to me...

[14:24] <abraxxa> probing whether your compiler thinks that it is gcc  Can't compile simple gcc probe, so something is badly wrong at build/probe.pm line 92.

[14:27] <jnthn> lizmat: Dunno about a post on that...I mean, it's quite esoteric. :)

[14:27] <lizmat> well, it could serve as documentation, as the documentation atm is quite minimal  :-)

[14:27] <moritz> documentation belongs on doc.perl6.org

[14:27] *** raiph joined
[14:27] <masak> hard to argue with that.

[14:28] <lizmat> moritz: I meant, until we have documentation  :-)

[14:28] <lizmat> and it would be a bit more hard core than most of the other advent posts  :-)

[14:28] <lizmat> but maybe too hard core  :-)

[14:28] <jnthn> Yeah, it's also a question of when I'd have time to write it.

[14:29] <abraxxa> tadzik: you may look now https://github.com/abraxxa/rakudobrew/commit/709af0e795e79000b99351baa7a87bba27c73d11

[14:29] <abraxxa> the previous commit is a whitespace cleanup that will be in the pull request as well

[14:29] <jnthn> Today was my last day of teaching. Tomorrow I need to take care of some christmas shopping and prep for travel to UK. Saturday I'm traveling there. And I'm so exhausted from the last weeks the first thing I'll probably do is get sick. :/

[14:29] <abraxxa> tadzik: i have a meeting now, will read the scrollback afterwards

[14:30] <masak> jnthn: I suggest you skip over getting sick this year.

[14:30] <lizmat> jnthn: ok, gotcha

[14:30] *** FROGGS left
[14:30] <lizmat> masak: that's not how that works, unfortunately

[14:30] <lizmat> :-(

[14:30] <masak> hey, it was just a suggestion :P

[14:30] <jnthn> masak: I never plan to, it's just a depressingly common pattern. The tireder I am when I go for Christmas break, the more likely I am to quickly catch something or other.

[14:31] <abraxxa> it's a usual pattern that the body backs down when the stress goes away

[14:31] <jnthn> Right.

[14:32] <moritz> abraxxa: aye; my father used to have problems with his teeth each summer vacation for several years in a row

[14:32] *** spider-mario left
[14:32] *** anaeem1 joined
[14:33] <masak> it's not so strange, I think. stress keeps you going.

[14:33] <masak> evo devo explanations are fraught, I guess. but maybe stress helped people survive. and when they were safe, they slowed down and got sick.

[14:34] <masak> people who managed to suspend getting sick were more fit and spread through the gene pool.

[14:35] <moritz> it makes a lot of sense if you think of being sick as "maintenance downtime"

[14:35] <lizmat> "health" debt

[14:35] <moritz> but classic medicine teaches us it's all those bad viruses and bacteria that make us sick, and that's kinda an incompatible view

[14:35] <moritz> lizmat: aye

[14:35] <masak> it's probably a mix of that, and the fact that parasites always win.

[14:36] <masak> that is, the body can hold them off, but it's a losing battle.

[14:36] <lizmat> also: meeting people you haven't seen in a while, means new germs  :-)

[14:36] <masak> also, winter. means recycling stale indoor air.

[14:36] <jnthn> Yeah, 'cus people can't hack the cold, dammit. :P

[14:37] <lizmat> personally, I notice this when meeting people with young kids (fresh kindergarten germs!) who I haven't seen for a while  :-)

[14:37] <masak> kids are excellent disease vectors.

[14:39] <brrt> thing about stress is, we know from various sources that it is 'bad', but it is one of these long-term-biology things that we can't quite get our head arround

[14:40] <brrt> otherwise, winter being sickness season is mostly people recycling stale air yeah :-)

[14:40] *** aborazmeh left
[14:41] <Ulti> can someone explain what's going on here

[14:42] <Ulti> m: say !!1

[14:42] <camelia> rakudo-moar 1b0e06: OUTPUT«True␤»

[14:42] <Ulti> m: say !!!1

[14:42] <camelia> rakudo-moar 1b0e06: OUTPUT«===SORRY!=== Error while compiling /tmp/4FKXCtEKkW␤Two terms in a row␤at /tmp/4FKXCtEKkW:1␤------> say !!!⏏1␤    expecting any of:␤        argument list␤        postfix␤        infix stopper␤        in…»

[14:42] <masak> that one's correct.

[14:42] <Ulti> why can you do two lots of negation but not more?

[14:42] <masak> because `!!!` is a term.

[14:42] <jnthn> !!! parsers as a term

[14:42] <masak> m: say !!(!1)

[14:42] <camelia> rakudo-moar 1b0e06: OUTPUT«False␤»

[14:42] <masak> m: say !! !1

[14:42] <camelia> rakudo-moar 1b0e06: OUTPUT«False␤»

[14:42] <masak> m: say ! ! ! 1

[14:42] <camelia> rakudo-moar 1b0e06: OUTPUT«False␤»

[14:42] <Ulti> wait so what is !!!  ?

[14:43] <masak> m: !!! "argh!"

[14:43] <camelia> rakudo-moar 1b0e06: OUTPUT«argh!␤  in block <unit> at /tmp/B9YH6N1R8a:1␤␤»

[14:43] <masak> a synonym of "die"

[14:43] <Ulti> o___O

[14:43] <jnthn> m: omg!!!

[14:43] <camelia> rakudo-moar 1b0e06: OUTPUT«===SORRY!=== Error while compiling /tmp/O1mLZCcGGv␤Two terms in a row␤at /tmp/O1mLZCcGGv:1␤------> omg⏏!!!␤    expecting any of:␤        argument list␤        postfix␤        infix stopper␤        infi…»

[14:43] <jnthn> Aww :)

[14:43] <jnthn> m: omg !!!

[14:43] <camelia> rakudo-moar 1b0e06: OUTPUT«===SORRY!=== Error while compiling /tmp/8XuV8hG_7y␤Undeclared routine:␤    omg used at line 1␤␤»

[14:43] <Ulti> and ???

[14:43] <Ulti> ?

[14:43] <jnthn> hah :0

[14:43] <jnthn> :)

[14:43] <jnthn> Ulti: !!! means "die", ??? means "warn", ... means "fail"

[14:43] <Ulti> aha

[14:43] <jnthn> Different levels of stubbiness

[14:44] <JimmyZ> m: ...

[14:44] <camelia> rakudo-moar 1b0e06: OUTPUT«Unhandled exception: Stub code executed␤   at <unknown>:1  (/home/camelia/rakudo-inst-2/languages/perl6/runtime/CORE.setting.moarvm:throw:4294967295)␤ from src/gen/m-CORE.setting:13847  (/home/camelia/rakudo-inst-2/languages/perl6/runtime/CORE.setting.…»

[14:44] <JimmyZ> m: !!!

[14:44] <camelia> rakudo-moar 1b0e06: OUTPUT«Stub code executed␤  in block <unit> at /tmp/kBkNhKngqx:1␤␤»

[14:44] <masak> <!!! ??? ...> isn't particularly strangely consistent with anything else.

[14:45] <Ulti> so who ordered !!! and ???

[14:45] <masak> except perhaps very loosely in that I agree with the respective urgencies of those three punctuation marks.

[14:45] *** FROGGS joined
[14:45] <Ulti> given ?? !! is a thing too that is some serious semantic overload

[14:45] <masak> Ulti: welcome to Perl 6.

[14:45] <Ulti> ;___;

[14:45] <masak> we have Serious Semantic Overload Syndrome.

[14:45] <masak> :D

[14:45] <lizmat> well, fwiw, I would think that most people would use ...

[14:46] <Ulti> it's especially confusing when the warn is evaluated as false

[14:46] <lizmat> and that you actually wouldn't really need !!! and ???

[14:46] <masak> I'd like to recommend https://skillsmatter.com/skillscasts/6088-the-worst-programming-language-ever to people who enjoy deadpan reverse psychology crossed with language design.

[14:46] *** ptc_p6 left
[14:46] <Ulti> masak: thats how I got to this point :D

[14:47] <Ulti> I was just replying to someone on the reddit comments for that talk who called out Perl 6

[14:47] <Ulti> but I think I mostly agree with them :P

[14:47] <masak> lizmat: I only use `...`. and only in roles that I want to act a bit like interfaces.

[14:47] <JimmyZ> m: ??!!!

[14:47] <camelia> rakudo-moar 1b0e06: OUTPUT«Stub code executed␤  in block <unit> at /tmp/AoU5KvFgk6:1␤␤»

[14:47] <JimmyZ> std: ??!!!

[14:47] <camelia> std 76ccee1: OUTPUT«===SORRY!===␤Expecting a term, but found either infix ?? or redundant prefix ?␤  (to suppress this message, please use space between ? ?) at /tmp/pjvwTWB7xC line 1:␤------> ??⏏!!!␤Parse failed␤FAILED 00:00 135m␤»

[14:47] <Ulti> m: !!???

[14:47] <camelia> rakudo-moar 1b0e06: OUTPUT«Stub code executed  in block <unit> at /tmp/Dt5fAinAj1:1␤␤»

[14:47] <JimmyZ> look, LTA

[14:47] *** oetiker left
[14:48] <masak> I think the best part of the above video was that the presenter got cut off at the end, shouting: "PLEASE DON'T WRITE A CO" :P

[14:48] <Ulti> m: say "wow" unless !!???

[14:48] <camelia> rakudo-moar 1b0e06: OUTPUT«Stub code executed  in block <unit> at /tmp/iKxRpctn2b:1␤␤wow␤»

[14:48] *** oetiker joined
[14:48] <dalek> rakudo/nom: 3d390fb | lizmat++ | src/core/Distro.pm:

[14:48] <dalek> rakudo/nom: Make sure we always have a $*DISTRO.release

[14:48] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3d390fb6fe

[14:49] <Ulti> masak lol, the language looked almost reasonable just like all awful languages :) its reasonable enough to actually use for real but make devs cry

[14:50] <Ulti> the problem with every programming language is that regardless of how high level you are, you still have to talk on the computers terms about what you want

[14:52] <masak> Ulti: you should have a look at Haskell. :)

[14:53] <jnthn> masak: So he can talk on mathematicians terms instead? :P

[14:54] <masak> well, it's a counterexample, is my point.

[14:54] <dalek> rakudo/nom: 57faf7a | lizmat++ | docs/ChangeLog:

[14:54] <dalek> rakudo/nom: Remove mention of {} change (there is none yet)

[14:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/57faf7ad9f

[15:01] *** doublelel left
[15:02] *** kaare_ left
[15:18] *** doublelel joined
[15:20] *** PZt left
[15:22] *** FROGGS left
[15:26] *** virtualsue left
[15:26] <dalek> rakudo/nom: f8267f2 | lizmat++ | src/core/Str.pm:

[15:26] <dalek> rakudo/nom: Streamline :nth(*-1)

[15:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f8267f2460

[15:26] *** virtualsue joined
[15:29] *** kaare_ joined
[15:32] <Ulti> masak all that happens with really different languages is they attempt to simulate a different computer and then get you to write for that instead :P

[15:32] <Ulti> PROLOG being a good example

[15:33] <masak> yes. probably the "imperative" execution model is the only really intuitive one to humans. do this, then do that.

[15:34] <masak> but declarative sublanguages will always have a place in specific domains. that includes Prolog.

[15:34] <masak> includes things like Forth and Haskell as well.

[15:34] <brrt> that is so counterintuitive, and i'm not sure if it doesn't include some 'survivor bias'

[15:35] <brrt> as in, everybody who could grok imperative became a programmer, and those who could not did not

[15:35] * vendethiel backlogs again

[15:35] <masak> brrt: I'm not sure that weakens the argument in any way.

[15:35] <masak> brrt: "X is just intuitive because the survivors consider it intuitive" -- well, yeah.

[15:36] <masak> same reason sunsets are beautiful, I guess.

[15:36] <brrt> well, the counterargument is that because computer languages are imperative people who would've liked another paradigm better (declarative) have already left

[15:37] <brrt> i'm not saying that it's true. i like my imperative programs

[15:37] <masak> there is still hope, though. my argument only goes for what becomes mainstream and the main slang.

[15:37] <masak> as I pointed out, there is still room for more exotic runtime models at the fringes.

[15:38] <masak> and that's something to cherish and exploit.

[15:38] <brrt> and embrace and assimilate if you're perl

[15:38] <brrt> :-)

[15:38] <geekosaur> there is some anecdata for beginners finding declarative languages easier to comprehend than imperative; I'm not aware of any serious exploration of that, though

[15:39] <masak> geekosaur: would be interesting to find one.

[15:39] <masak> I mean, an evo devo explanation for *that* would be that imperative looks like stories by the campfire.

[15:39] <Ulti> I dont get why prolog isnt more popular in robotics, it makes writing control systems quite natural human(X) :- dontkill(X)

[15:40] <masak> "and then they did a GO TO and handled the exceptional condition!"

[15:40] <geekosaur> Ulti: prolog doesn't compile down to embedded processors well

[15:40] *** raiph left
[15:40] <Ulti> it could if the embedded processor could execute prolog :P

[15:40] <geekosaur> there's also the usual problem with real time control vs. garbage collection

[15:41] <rurban> more the exponential nature of backtracking

[15:41] <geekosaur> that too, yes

[15:41] <rurban> new-style SMT solvers are usually better than prolog

[15:42] <geekosaur> "real time" is the real constraint, in any case

[15:42] <rurban> like z3

[15:42] *** FROGGS joined
[15:42] <geekosaur> with memory usage still something of a close second

[15:43] * brrt wonders what masak expands evo devo to

[15:43] <rurban> I'm thinking to add a solver into p2 core (minisat), because I'd need it for compiler optimizations anyway

[15:44] <rurban> but simple prolog|ml like declarative matchers and unifiers don't need that much, and are expressible with simple = or =~ and varioables on the rhs

[15:44] <dalek> nqp: 4394713 | lizmat++ | tools/build/MOAR_REVISION:

[15:44] <dalek> nqp: Bump MOAR_REVISION to release 2014.12

[15:44] <dalek> nqp: review: https://github.com/perl6/nqp/commit/439471306f

[15:45] <rurban> and _ on the lhs

[15:46] *** treehug88 joined
[15:48] <brrt> (mosh is udp based. that's clever)

[15:50] <abraxxa> tadzik: if the code is ok i'll send the pull request

[15:50] *** raiph joined
[15:54] <hoelzro> morning #perl6

[15:55] <lizmat> hoelzro o/

[15:56] <brrt> \o hoelzro

[15:57] <hoelzro> o/ lizmat, brrt 

[16:00] <hoelzro> m: class Foo {} ; my $f = Foo.new; say $f[0]

[16:00] <camelia> rakudo-moar 57faf7: OUTPUT«Foo.new()␤»

[16:00] <hoelzro> when did that start behaving that way?

[16:01] <PerlJam> which part?

[16:01] <PerlJam> m: class Foo {} ; my $f = Foo.new; say $f;

[16:01] <camelia> rakudo-moar 57faf7: OUTPUT«Foo.new()␤»

[16:02] <PerlJam> m: class Foo {} ; my $f = Foo.new; say $f[0][0][0];

[16:02] <camelia> rakudo-moar 57faf7: OUTPUT«Foo.new()␤»

[16:02] <TuxCM> YOU DID VERY WELL THIS MONTH: (tiny flood)

[16:02] <TuxCM>                     i686      i686      x68_64   x68_64   x68_64

[16:02] <TuxCM>                     20141007  20141014  20141105 20141111 20141218

[16:02] <TuxCM> ------------------  -------- --------- --------- -------- --------

[16:02] <TuxCM> Text::CSV::Easy_XS     0.022     0.021     0.037    0.018    0.020

[16:02] <TuxCM> Text::CSV::Easy_PP     0.018     0.022     0.028    0.016    0.033

[16:02] <TuxCM> Text::CSV_XS           0.038     0.039     0.046    0.039    0.042

[16:02] <TuxCM> Text::CSV_PP           0.651     0.535     0.533    0.516    0.534

[16:02] <TuxCM> Pegex::CSV             1.947     1.420     1.387    1.371    1.401

[16:02] <TuxCM> csv.pl                12.543     8.437     9.152    9.130    8.195

[16:02] <TuxCM> test.pl              256.985   201.621    71.847   72.221   58.765

[16:02] <TuxCM> test-t.pl              -         -         -       72.024   58.673

[16:02] <TuxCM> the last three are perl6

[16:02] <TuxCM> note the drop from 257 to 58 seconds! amazing

[16:04] <masak> :)

[16:04] *** abraxxa left
[16:04] <hoelzro> PerlJam: why does postcircumfix:<[ ]> work on a non-Positional?

[16:04] <masak> brrt: https://en.wikipedia.org/wiki/Evolutionary_developmental_biology

[16:04] *** Sqirrel left
[16:06] <dalek> rakudo/nom: 4dfc29f | lizmat++ | docs/ChangeLog:

[16:06] <dalek> rakudo/nom: Some more ChangeLog updates

[16:06] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4dfc29f4a7

[16:07] *** FROGGS left
[16:07] <PerlJam> hoelzro: we've treated an item as a "list of 1" for quite a while now.  As to why, I'm not sure I can explain it right off.

[16:08] <hoelzro> see, my @list = $item makes sense to me

[16:08] <hoelzro> $item[0] does not

[16:08] <hoelzro> and I feel that the former has been valid for as long as I remember, but the latter is more recent

[16:08] <lizmat> hoelzro: not only [0] works always, you can call .end on anytthing

[16:09] <lizmat> m: say 42.end

[16:09] <camelia> rakudo-moar 57faf7: OUTPUT«0␤»

[16:09] <lizmat> so you can always do something like:

[16:09] <lizmat> m: my $a = 42; for 0 .. $a.end { say $a[$_] }

[16:09] <camelia> rakudo-moar 57faf7: OUTPUT«42␤»

[16:10] <hoelzro> that seems...odd to me

[16:11] <dalek> rakudo/nom: d01c70d | lizmat++ | docs/ChangeLog:

[16:11] <dalek> rakudo/nom: Mention we have more signals on Moar

[16:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d01c70def2

[16:11] <lizmat> hoelzro: if $a is returned from a sub, maybe it becomes clearer?

[16:12] *** gtodd joined
[16:14] <brrt> ah thanks :-)

[16:14] <brrt> i thought something like that

[16:16] <hoelzro> lizmat: well, if I'm returning from a sub, and I'm assigning to a positional container, I expect the item to be assigned to $container[0]

[16:17] <hoelzro> I just don't know of a circumstance where $a[0] is useful to have if $a isn't a Positional

[16:18] *** mr-foobar joined
[16:18] <lizmat> m: my @a=^10; say @a[0].WHAT; say @a[0,1].WHAT

[16:18] <camelia> rakudo-moar 57faf7: OUTPUT«(Int)␤(Parcel)␤»

[16:19] <lizmat> m: my @i = 0; my @a=^10; say @a[@i].WHAT

[16:19] <camelia> rakudo-moar 57faf7: OUTPUT«(Parcel)␤»

[16:21] *** brrt left
[16:22] <dalek> rakudo/nom: bfbef0b | lizmat++ | docs/announce/2014.12.md:

[16:22] <dalek> rakudo/nom: Add 2014.12 announcement

[16:22] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/bfbef0b5c7

[16:22] <lizmat> ^^^ comments welcome!

[16:24] <dalek> nqp: b7c3fd9 | lizmat++ | VERSION:

[16:24] <dalek> nqp: bump VERSION to 2014.12

[16:24] <dalek> nqp: review: https://github.com/perl6/nqp/commit/b7c3fd9e1f

[16:24] *** hekmek joined
[16:25] *** denis_boyun left
[16:27] <hoelzro> lizmat++ # release

[16:29] *** jluis left
[16:31] *** zakharyas left
[16:32] *** atroxaper left
[16:37] *** virtualsue left
[16:40] <PerlJam> lizmat:  should the announcement have a link to parrot.org too?  I don't know if we've ever done that before, but it struck me as odd that we'd have a link for moarvm and not one for parrot

[16:41] <lizmat> good point, will add

[16:50] *** virtualsue joined
[16:52] <lizmat> ok, I'm not getting NQP built from a tar-file:

[16:53] <lizmat> In file included from 3rdparty/libuv/include/uv-unix.h:55:

[16:53] <lizmat> 3rdparty/libuv/include/uv-darwin.h:26:11: fatal error: 'mach/mach.h' file not

[16:53] <lizmat>       found

[16:53] <lizmat> # include <mach/mach.h>

[16:53] <lizmat> oddly enough, there is no 3rdparty/libuv directory

[16:54] <lizmat> this seems to be a feature of Xcode 6.1.1  

[16:55] <rurban> on darwin?

[16:55] <lizmat> yup

[16:55] <Woodi> hallo today :)

[16:56] <rurban> libuv's configure normally catches those include path for me, macport gcc and xcode cc

[16:56] <lizmat> also for Xcode 6.1.1 ?

[16:57] * geekosaur wonders if precompiled headers are in use somewhere

[16:57] <japhb> lizmat: Has 2014.12 already been cut, or still in progress?

[16:58] <lizmat> the VERSION has been updated, but not yet tagged

[16:58] <japhb> OK, thanks

[16:58] <rurban> cannot try now, my wife has my laptop

[16:58] <lizmat> japhb: any suggestions ?

[17:00] <japhb> lizmat: suggestions for what?  The Xcode problem?  (Because I know almost zero about Xcode, except that my little bit of interaction with it was not a positive experience).

[17:00] <lizmat> ah, ok

[17:00] <lizmat> found a solution: adding a symlink in Moarvm/3rdparty/libuv/include to /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/usr/include/mach

[17:01] <Woodi> some days ago I was in our family bakery's office and was thinking about that imperative vs declarative languages - do being declarative means that on some low level there need to be programmed imperative actions have something done ? and then: knoc*knock There is no sugar...  -- was this a "declarative" approach to a problem ? 

[17:04] <masak> Woodi: "declarative" to me means that you write a specification, not instructions. it's kind of defined by what it isn't.

[17:07] <Woodi> so html is declarative... but still something need to render it and on some level imperative things are executing ?

[17:08] <masak> I'm not sure HTML qualifies in the first place. not if we're talking programming languages. HTML is markup.

[17:09] <masak> a good example might be the class/has/method/submethod keywords in Perl 6. they're declarative: they're a specification of a class, not instructions on how to put the class together.

[17:09] *** virtualsue left
[17:09] <masak> SQL might qualify as declarative as well.

[17:10] *** doublelel left
[17:10] <masak> still no takers for tomorrow's advent post?

[17:12] <masak> many of the APIs for promises are declarative. they free you of the minutia of handling things in sequential order, and can turn "pyramids of doom" into nice linear structures.

[17:12] <dalek> nqp: 8de8f7b | lizmat++ | README.pod:

[17:12] <dalek> nqp: Add my fix to building on OS X

[17:12] <dalek> nqp: 

[17:12] <dalek> nqp: In the hope it will be helpful.  I don't see another fix yet.  And I'm

[17:12] <dalek> nqp: apparently the only person suffering from this (so far)

[17:12] <dalek> nqp: review: https://github.com/perl6/nqp/commit/8de8f7b090

[17:13] <masak> that's a curious case, because these declarative APIs are found in the middle of an imperative language.

[17:13] <lizmat> masak: I'm too busy with the release

[17:13] <masak> lizmat: I understand completely. I was thinking somebody who isn't releasing Rakudo today ;)

[17:15] *** dj_goku left
[17:16] <lizmat> I have a NQP release tarball ready to upload

[17:16] <lizmat> can someone do that ?

[17:20] <dalek> rakudo/nom: 412e5f5 | lizmat++ | tools/build/NQP_REVISION:

[17:20] <dalek> rakudo/nom: [release] bump NQP revision

[17:20] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/412e5f5e7f

[17:20] *** mvuets left
[17:20] <dalek> rakudo/nom: 76eb31b | lizmat++ | VERSION:

[17:20] <dalek> rakudo/nom: [release] bump VERSION

[17:20] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/76eb31b45d

[17:23] <masak> PerlJam, moritz: ping

[17:23] <Woodi> lizmat: is it R* maybe ?

[17:23] <masak> ^ can either of you upload a tarball for lizmat?

[17:23] <masak> Woodi: no, just R.

[17:24] <lizmat> but since we have fixed the OS X flakiness, maybe we should do a R* again  :-)

[17:24] <lizmat> but after this

[17:24] <lizmat> :-)

[17:24] * Woodi just arrive home and now wondering: Is pressing Play on cd-player is imperative ?

[17:25] *** ab5tract joined
[17:25] <lizmat> .oO( it is if the player is functional ? )

[17:26] <Woodi> lizmat: just after last R* was nice performance in R, if my memory is correct... would be nice to have one

[17:27] <Woodi> it do play songs, if you ask about that :)

[17:28] <Woodi> bot how would look like declarative cd-player ? here are buttons and CD. EOD. ? :)

[17:29] *** njmurphy left
[17:30] <Woodi> ow, another one... few days ago I found that Freenet is part of Dark Net! scary...

[17:30] <Woodi> Freenode I mean

[17:32] *** khisanth_ is now known as Khisanth

[17:32] *** sorear left
[17:33] *** atroxaper joined
[17:33] *** sorear joined
[17:34] <dalek> rakudo/nom: 1f301e6 | lizmat++ | docs/announce/2014.12.md:

[17:34] <dalek> rakudo/nom: Add reference to parrot.org, PerlJam++

[17:34] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1f301e6c6f

[17:38] <dalek> rakudo/nom: e487d72 | lizmat++ | docs/announce/2014.12.md:

[17:38] <dalek> rakudo/nom: Add troubleshooting section

[17:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e487d722da

[17:38] <masak> I seem to be able to do an advent blog post tomorrow.

[17:39] <masak> but I would prefer it if someone else signed up. then my promise kicks in and I can do day-after-tomorrow.

[17:40] <lizmat> dinner&

[17:41] <masak> either way, I can work on a draft tonight.

[17:41] *** atroxaper left
[17:45] *** fhelmberger left
[17:45] <moritz> masak: ping

[17:45] <moritz> masak: erm, pong

[17:46] <masak> lizmat would like to upload an nqp.

[17:47] *** telex left
[17:47] <moritz> then she should do that :-)

[17:48] <moritz> there's an ssh pubkey [email@hidden.address] in the upload user

[17:48] <masak> ooh

[17:48] *** telex joined
[17:48] <masak> :)

[17:48] <masak> moritz, strict but fair BOFH :P

[17:49] <moritz> masak: as is an cmasak@gm... key

[17:49] <moritz> I mean, I can upload it too, when I know where the tarball is

[17:49] <moritz> or add more keys

[17:52] <masak> seems lizmat is away for dinner right now. I guess she had missed (as I did) that there are pubkeys in the upload user ;)

[17:53] <dalek> nqp: e089718 | moritz++ | docs/release_guide.pod:

[17:53] <dalek> nqp: release guide: update the list of known uploaders

[17:53] <dalek> nqp: review: https://github.com/perl6/nqp/commit/e08971890b

[17:54] <dalek> nqp: e3dcf53 | moritz++ | docs/release_guide.pod:

[17:54] <dalek> nqp: Oops, no need to list FROGGS twice

[17:54] <dalek> nqp: review: https://github.com/perl6/nqp/commit/e3dcf53515

[17:55] <dalek> rakudo/nom: 0a12e17 | moritz++ | docs/release_guide.pod:

[17:55] <dalek> rakudo/nom: release guide: update list of known uploaders

[17:55] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0a12e17b6b

[17:57] *** tinybla__ left
[17:58] *** tinyblak joined
[17:58] *** anaeem1 left
[17:59] *** ptc_p6 joined
[18:00] *** anaeem1_ joined
[18:00] *** dakkar left
[18:00] *** tinyblak left
[18:01] *** tinyblak joined
[18:04] *** rurban left
[18:06] *** anaeem1_ left
[18:07] *** anaeem1_ joined
[18:07] *** anaeem1_ left
[18:07] *** ab5tract left
[18:09] *** grettis joined
[18:19] *** virtualsue joined
[18:24] *** tinyblak left
[18:24] *** tinyblak joined
[18:26] *** dylanwh joined
[18:27] *** lucas_ joined
[18:27] <lucas_> release day! \o/

[18:27] <lucas_> I like updating my tarballs. Thanks in advance!

[18:29] *** lucas_ left
[18:40] *** atroxaper joined
[18:45] *** mvuets joined
[18:45] *** atroxaper left
[18:50] *** denis_boyun joined
[18:58] *** denis_boyun left
[18:59] *** DarthGandalf left
[18:59] *** treehug88 left
[18:59] <PerlJam> masak: pong.  If lizmat has issues uploading, I'll be aroundish and able to upload (FYI)

[19:00] <masak> good, good

[19:00] <masak> moritz informs me it should be no problem. we'll see.

[19:02] *** DarthGandalf joined
[19:02] *** zakharyas joined
[19:02] *** treehug88 joined
[19:06] *** raiph left
[19:07] <lizmat> thanks PerlJam++ for uploading NQP

[19:07] <masak> he hasn't yet.

[19:07] <lizmat> I think he has ?

[19:08] <masak> ok, but not as far as I know :)

[19:08] <masak> moritz (in the backlog) says you already have the ackles for it, though.

[19:08] <lizmat> yes, server side

[19:08] <lizmat> client side, I have some keychain issues  :-(

[19:08] <lizmat> don't want to try fixing that tonight

[19:08] <masak> lizmat: http://irclog.perlgeek.de/perl6/2014-12-18#i_9825720

[19:09] *** raiph joined
[19:09] <PerlJam> masak: http://rakudo.org/downloads/nqp/nqp-2014.12.tar.gz  # now you know  :)

[19:09] <lizmat> masak: yeah, I know... but when trying to do the scp, it fails

[19:09] <masak> oki

[19:10] <masak> PerlJam++

[19:10] <masak> m: sub f1 { say "first"; False }; sub f2 { say "sekkind"; True }; say f1() && f2()

[19:10] <camelia> rakudo-moar 0a12e1: OUTPUT«first␤False␤»

[19:10] <masak> m: sub f1 { say "first"; False }; sub f2 { say "sekkind"; True }; f1() && f2()

[19:10] <camelia> rakudo-moar 0a12e1: OUTPUT«first␤»

[19:10] <masak> m: sub f1 { say "first"; False }; sub f2 { say "sekkind"; True }; f1() ?& f2()

[19:10] <camelia> rakudo-moar 0a12e1: OUTPUT«first␤sekkind␤»

[19:10] * masak thought so

[19:11] <masak> m: sub f1 { say "first"; False }; sub f2 { say "sekkind"; True }; f1() & f2()

[19:11] <camelia> rakudo-moar 0a12e1: OUTPUT«first␤sekkind␤»

[19:14] * lizmat is now testing the rakudo tar ball

[19:16] <masak> S03:2530 says this about `and`: "In list context forces a false return to mean C<()>."

[19:16] <synopsebot> Link: http://perlcabal.org/syn/S03.html#line_2530

[19:16] <masak> what does that mean in Perl 6, "in list context"?

[19:16] <masak> is it a fossil?

[19:17] <masak> m: sub f1 { say "first"; fail }; sub f2 { say "sekkind" }; f1() andthen f2()

[19:17] <camelia> rakudo-moar 0a12e1: OUTPUT«first␤»

[19:19] <lizmat> masak: feels like a fossil to me

[19:19] * masak removes

[19:19] <lizmat> at least the wording

[19:20] <masak> eech, the phrase 'list context' occurs 26 times in S03.

[19:23] <[Coke]> are there any kinds of contexts left in perl6 that aren't just notional?

[19:23] <lizmat> 88 times in total in synopses

[19:23] <masak> [Coke]: good question.

[19:24] <masak> not in the literal Perl 5 sense, I think.

[19:24] *** virtualsue left
[19:25] <masak> wow, S03 postulates a statement_control:<ACCEPTS> macro -- I don't recall seeing that before.

[19:25] <[Coke]> I hear "sink context" a lot... and that might actually be right, since I think we are checking to see if the return value is used or not. (or, is it different from void context? Iunno)

[19:25] <PerlJam> 90 if you count the two occurences where it's "List context" rather than "list context" 

[19:25] <masak> ...but it's textual :/

[19:25] <PerlJam> Just for grins: https://gist.github.com/perlpilot/7ed197a4167cc1e4b40f

[19:26] <lizmat> .oO( that gives quite some context )

[19:27] * masak .oO( Perl 6 is often in lol context, but sometimes the jokes fall in flat context )

[19:27] <lizmat> .oO( I haz a sinking feeling )

[19:27] <masak> amazing we don't have a "troll context" yet.

[19:27] <PerlJam> I'm slightly amazed that we have 7 occurences of "flat context"

[19:28] <masak> m: sub f1 { say "first"; False }; sub f2 { say "sekkind"; False }; f1() R&& f2()

[19:28] <camelia> rakudo-moar 0a12e1: OUTPUT«sekkind␤first␤»

[19:28] <masak> && loses its short-circuiting if you R it?

[19:28] <PerlJam> apparently

[19:29] <masak> is that spec, or just an accident?

[19:29] <masak> TimToady: ^

[19:29] <lizmat> away while stresstests run their course&

[19:29] <masak> lizmat++ # avoiding stress

[19:30] <PerlJam> lizmat: if you're going jogging, that would have been the perfect phrase to use  ;)

[19:31] *** spider-mario joined
[19:31] <masak> I see S03 talking about ops losing their short-circuiting behavior when []'d. but nothing about if they're R'd.

[19:36] <PerlJam> m: sub f1 { say "first"; False }; sub f2 { say "sekkind"; False }; f1() RR&& f2()

[19:36] <camelia> rakudo-moar 0a12e1: OUTPUT«first␤sekkind␤»

[19:39] <bartolin> masak: do you think it's worth to adjust two (currently not working) examples from the perl6 book? there were two RT tickets in october and I made a PR to adjust the examples: https://github.com/perl6/book/pull/82

[19:42] <masak> bartolin: by all means, merge any improvements.

[19:43] <dalek> book: c27d240 | usev6++ | src/subs-n-sigs.pod:

[19:43] <dalek> book: Fix example in 4.8 Unpacking

[19:43] <dalek> book: Discovered by 宋文泰 in https://rt.perl.org/Ticket/Display.html?id=122917

[19:43] <dalek> book: review: https://github.com/perl6/book/commit/c27d240cf0

[19:43] *** dalek left
[19:43] *** tinyblak left
[19:43] *** atroxaper joined
[19:44] *** tinyblak joined
[19:44] <bartolin> thanks, masak++

[19:44] *** dalek joined
[19:44] *** ChanServ sets mode: +v dalek

[19:44] <masak> bartolin++

[19:45] <masak> m: say 1 [&atan] 1

[19:45] <camelia> rakudo-moar 0a12e1: OUTPUT«Too many positionals passed; expected 1 argument but got 2␤  in sub atan at src/gen/m-CORE.setting:4451␤  in block <unit> at /tmp/G9FDyLqyu8:1␤␤»

[19:45] <masak> m: say 1 [&atan2] 1

[19:45] <camelia> rakudo-moar 0a12e1: OUTPUT«0.785398163397448␤»

[19:45] <bartolin> also moritz++ ;-)

[19:46] *** [Sno] left
[19:47] *** FlipBill joined
[19:47] *** [Sno] joined
[19:48] <bartolin> I've got another question: is there a preferred way to write test for the REPL? I've seen quite a few tickets which are about a specific behaviour when using the REPL -- and most of them are lacking tests.

[19:49] <masak> advent post draft provisional name: "Snow white and the seven conditionals"

[19:49] *** atroxaper left
[19:55] <bartolin> btw: I really enjoy reading the advent posts. @advent-bloggers»++

[19:55] <masak> if only there were more...

[20:00] *** tinyblak_ joined
[20:04] *** tinyblak left
[20:10] *** rindolf left
[20:15] *** beastd joined
[20:15] <dalek> roast: d91bcc4 | usev6++ | S03-metaops/hyper.t:

[20:15] <dalek> roast: Remove duplicate test for unary postfix hyper operator

[20:15] <dalek> roast: review: https://github.com/perl6/roast/commit/d91bcc4e1b

[20:18] *** woolfy left
[20:21] *** Isp-sec joined
[20:21] *** [Sno] left
[20:22] *** zakharyas left
[20:24] *** woolfy joined
[20:27] <lizmat> PerlJam++ for uploading the tarball

[20:27] <lizmat> mail with announcement sent

[20:28] <masak> lizmat++

[20:28] *** darutoko left
[20:29] <moritz> lizmat: do you need another ssh key added on the rakudo.org server?

[20:29] <lizmat> moritz: tomorrow, after I upgraded to Yosemite

[20:29] <lizmat> if that's ok with you  :-

[20:29] <lizmat> )

[20:30] *** bcode left
[20:30] *** tinyblak_ left
[20:31] *** bcode joined
[20:32] <moritz> lizmat: it is

[20:32] <lizmat> WP entry updated

[20:34] <dalek> rakudo/nom: 30edf7f | lizmat++ | docs/announce/2014.12.md:

[20:34] <dalek> rakudo/nom: Fix oops so that we can copy next announce

[20:34] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/30edf7faa2

[20:34] <lizmat> everybody have the appropriate amount of fun!

[20:35] <lizmat> http://rakudo.org/downloads/rakudo/rakudo-2014.12.tar.gz   # download the tarball

[20:35] <bartolin> lizmat++

[20:37] *** jack_rabbit left
[20:42] *** bcode left
[20:42] * lizmat hopes to see someone pick up a R* release soon

[20:42] *** bcode joined
[20:43] <dalek> Heuristic branch merge: pushed 27 commits to rakudo/newio by lizmat

[20:55] *** mvuets left
[20:56] <masak> advent blog post draft underway.

[20:57] *** night0x joined
[20:57] <night0x> hello

[20:58] <masak> hi, night0x 

[20:58] <night0x> where should I start to learn perl6

[20:59] <masak> "Begin at the beginning," the King said gravely, "and go on till you come to the end: then stop."

[20:59] <night0x> okay

[20:59] <masak> night0x: have you seen the book?

[21:00] <night0x> no

[21:00] <masak> http://github.com/perl6/book

[21:00] <night0x> what's that?

[21:00] <masak> it's an (unfinished) book about Perl 6.

[21:00] <masak> there's also http://doc.perl6.org/

[21:00] <masak> and http://perl6advent.wordpress.com/

[21:01] <raydiak> http://perl6.org/documentation/ has a lot of good links too

[21:01] <masak> and http://perlgeek.de/blog-en/perl-6/

[21:01] <masak> those are all good starting points.

[21:02] <night0x> Oh, thks

[21:02] <masak> oh, and http://learnxinyminutes.com/docs/perl6/

[21:02] <masak> last but not least, we're here, warm-blooded, and ready to help with any questions you might have.

[21:03] * masak winks: 😉

[21:03] <night0x> it's so nice of you :)

[21:04] <masak> don't mention it.

[21:04] <masak> good luck learning about Perl 6, and stop by often! :D

[21:04] * vendethiel winks as well

[21:05] <vendethiel> Ha, damn, I forgot to push my revisions to the learnx.

[21:05] <masak> masak => 😉 😉 <== vendethiel 

[21:05] <night0x> I found there are several VMs for perl6. How to choice?

[21:05] <night0x> any suggestions?

[21:05] <masak> choose moarvm.

[21:05] <masak> unless your boss is forcing you to use JVM.

[21:06] <vendethiel> masak: why'd I get two arrows :P?

[21:07] <masak> I ran out of the short type of arrow.

[21:07] <moritz> what's a proper way to do a one-time, concurrency-friendly sleep?

[21:08] <lizmat> sleep(1) ?

[21:08] <masak> if `sleep` isn't concurrency-friendly, then something is wrong with it.

[21:08] <moritz> isn't there a .delay or .interval or so?

[21:09] <vendethiel> masak: do you have a good idea for a possible p6advent I might do?

[21:09] <dalek> perl6.org: 0c1a66b | raydiak++ | source/documentation/index.html:

[21:09] <dalek> perl6.org: Add 2014 advent calendar link to /documentation

[21:09] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/0c1a66b03c

[21:10] <lizmat> moritz: what's wrong with sleep(1) ?

[21:10] <moritz> lizmat: does sleep block the current thread?

[21:10] <masak> if it doesn't, then something is wrong with it.

[21:11] <lizmat> internallu, it calls nqp::sleep

[21:11] *** kaare_ left
[21:11] <lizmat> I assume that knows what to do on Moar to be conc friendly

[21:13] *** erdic left
[21:13] <jnthn> I'm pretty sure nqp::sleep delegates fairly directly to the system call.

[21:14] *** night0x left
[21:14] <jnthn> It will block a thread. That's not always good. The easy way to say "do something a bit in the future" is like Promise.in(10).then({ do_stuff })

[21:14] *** hekmek left
[21:15] <jnthn> But if blocking the thread is fine, then use sleep. :)

[21:17] *** shgdfgdfhg joined
[21:17] <shgdfgdfhg> atta oing

[21:17] <shgdfgdfhg> hay

[21:17] * lizmat is off to have an appropriate amount of fun

[21:17] <shgdfgdfhg> how do i do that

[21:17] <shgdfgdfhg> how

[21:18] * masak hovers over the "kick" button

[21:18] <shgdfgdfhg> nm moar'

[21:18] <shgdfgdfhg> no shit

[21:18] <jnthn> lizmat++ # release

[21:18] *** shgdfgdfhg left
[21:20] <PerlJam> lizmat++ every once in a while you should have a wildly inappropriate amount of fun too  :)

[21:21] *** erdic joined
[21:22] <woolfy> Fun means this time, one or more episodes of the tv-series Bones, with fresh tea, and maybe some 16-year old whisky, and some nougat.  Yoohoo.

[21:22] <woolfy> lizmat+= for good ideas...

[21:22] <woolfy> :-)

[21:23] <jnthn> woolfy: += needs a term to the right... :P

[21:23] <jnthn> .oO( lizmat+=Inf )

[21:23] <PerlJam> heh

[21:24] <bartolin> . o O ( lizmat+=2014.12 )

[21:24] <woolfy> darn, should have been lizmat++ 

[21:24] <woolfy> but eternal lizmat without eternal woolfy is no fun...

[21:25] <PerlJam> woolfy: So ... when are you going to do a release?  :)

[21:31] *** ptc_p61 joined
[21:32] *** ptc_p6 left
[21:35] <dalek> mu: c632207 | moritz++ | misc/perl6advent-2014/schedule:

[21:35] <dalek> mu: Advent: Claim day 23 (Sleepsort)

[21:35] <dalek> mu: review: https://github.com/perl6/mu/commit/c63220790f

[21:36] <timotimo> hm, we didn't have sleep sort in the advent calendar yet?

[21:36] <moritz> grep -i sleep misc/perl6advent-20*/schedule # didn't turn up anything

[21:37] *** atroxaper joined
[21:38] <timotimo> OK :)

[21:38] <moritz> also did a quick search on the website, nothing

[21:39] <masak> Scheduled for

[21:39] <masak> 12/19/2014 0:01

[21:40] <masak> advent post scheduled for tomorrow.

[21:40] <moritz> masak: please add it to the schedule in mu

[21:40] <masak> sure.

[21:40] <masak> I'm not saving your bacon again on Saturday, #perl6! you will have to find someone else.

[21:41] <moritz> masak++

[21:41] <dalek> mu: b113141 | masak++ | misc/perl6advent-2014/schedule:

[21:41] <dalek> mu: [schedule] add myself for tomorrow

[21:41] <dalek> mu: review: https://github.com/perl6/mu/commit/b113141998

[21:42] <masak> the post is in Wordpress, in the usual place. feel free to review and give early feedback.

[21:42] <moritz> ok, I have the code that I want to write about for day 23

[21:43] *** atroxaper left
[21:44] *** gfldex joined
[21:48] *** night0x joined
[21:50] *** night0x left
[21:52] *** night0x joined
[21:52] <masak> LOL! my http://www.amazon.com/Let-Over-Lambda-Doug-Hoyte/dp/1435712757 has arrived!

[21:53] <vendethiel> niice :)

[21:54] <masak> macros, here I come!

[21:55] <masak> 'night, #perl6

[21:57] *** [Sno] joined
[22:01] *** spider-mario left
[22:02] *** ptc_p61 left
[22:02] *** spider-mario joined
[22:09] *** pmurias joined
[22:09] <pmurias> hi

[22:19] *** ab5tract joined
[22:21] <timotimo> moritz: are we planning to get https working for p6c.org?

[22:27] <gtodd> LOL

[22:42] *** ab5tract left
[22:49] *** colomon left
[22:49] *** Isp-sec left
[22:51] *** colomon joined
[22:55] *** night0x left
[22:57] *** Rounin left
[22:58] *** treehug8_ joined
[23:01] *** aborazmeh joined
[23:02] *** gfldex_ joined
[23:02] *** pmurias_ joined
[23:02] *** jepeway joined
[23:03] *** gfldex left
[23:03] *** pmurias left
[23:03] *** japhb left
[23:03] *** treehug88 left
[23:03] *** erdic left
[23:03] *** erdic_ joined
[23:04] *** erdic_ is now known as erdic

[23:07] *** treehug8_ left
[23:09] *** japhb joined
[23:16] *** aborazmeh left
[23:23] *** hekmek joined
[23:28] *** atroxaper joined
[23:35] *** atroxaper left
[23:37] *** spider-mario left
[23:37] *** beastd left
[23:49] *** virtualsue joined
[23:51] *** jepeway left
[23:53] *** virtualsue left
[23:54] *** telex left
[23:56] *** telex joined
