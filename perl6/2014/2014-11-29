[00:00] <[Coke]> (assuming you are invoking the sql multiple times)

[00:00] <dalek> perl6-roast-data: a5d71dc | coke++ | / (5 files):

[00:00] <dalek> perl6-roast-data: today (automated commit)

[00:00] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/a5d71dcaf7

[00:14] *** denis_boyun_ left
[00:16] *** ajr_ left
[00:20] <[Coke]> jnthn++ finding one of the OSX bugs.

[00:22] <colomon> \o/

[00:24] *** KCL_ joined
[00:27] *** KCL left
[00:42] *** kurahaupo1 left
[00:44] *** BenGoldberg joined
[00:46] *** telex left
[00:47] *** guru joined
[00:47] *** guru is now known as ajr_

[00:48] *** telex joined
[00:48] *** woshty left
[00:50] *** kjs_ joined
[00:51] *** Mouq joined
[00:56] *** ajr_ left
[00:57] *** guru joined
[00:58] *** guru is now known as Guest15347

[00:58] *** Guest15347 is now known as ajr_

[01:01] *** adu joined
[01:03] *** woshty joined
[01:05] *** adu left
[01:13] *** teak1010 joined
[01:16] *** kjs_ left
[01:18] *** Mouq left
[01:23] *** ajr_ left
[01:37] <timotimo> o/

[01:46] *** adu joined
[01:46] <timotimo> ah, indeed

[01:46] <timotimo> i'm glad jnthn spotted that terrible little annoying buglet

[01:46] <timotimo> but alas ... there's more to slay up ahead

[01:51] *** prime left
[01:51] <adu> hi timotimo 

[01:53] <timotimo> hello adu

[01:54] <adu> how goes?

[01:54] <timotimo> i'm all right, but motivation and productivity seem to have reached a local minimum

[01:55] <adu> sounds like thanksgiving

[01:55] <timotimo> i'ven't celebrated that in a long time

[01:55] <adu> I usually work on WORK during the holidays, but this time I'm researching XQuery (and eXistDB)

[01:56] <timotimo> i don't know what XQuery is

[01:56] <adu> its an XML thing

[01:57] <timotimo> i know XPath at least :)

[01:58] <adu> there are 2 standardized XML "programming" lanugages: XSLT and XQuery, they're Turing-equivalent, but implementing XQuery in XSLT would probably take a million LOC, whereas implementing XSLT in XQuery would probably take 1 LOC

[01:58] <adu> XPath is a subset of XQuery

[01:58] <timotimo> ah, OK

[01:59] <timotimo> i have had the fortune(?) to never have to play with XSLD

[01:59] <timotimo> SXLT

[01:59] <timotimo> XSLT*

[01:59] <adu> don't, it's a bad choice for programming, which is what most people NEED it for, but they would never admit it to themselves

[02:01] <adu> s/it/XSLT/

[02:02] *** Mouq joined
[02:03] <timotimo> hm.

[02:03] <timotimo> i'd like to build an android app that gains me a tiny but constant stream of money that exponentially grows in popularity

[02:04] <adu> timotimo: PhoneGap.

[02:05] <timotimo> i'm not terribly fond of html actually

[02:05] <timotimo> i haven't had a proper go at it in a long time, though

[02:07] <adu> the money making scheme is just: (1) find client (2) make prototype website (3) use PhoneGap to make Android app (4) show client until happy (5) make money

[02:07] <adu> I thought HTML was the new English

[02:08] <adu> I mean ... my grandma knows HTML, my parents know HTML ...

[02:10] <adu> timotimo: a great place to start is H5BP

[02:13] *** BenGoldberg left
[02:19] <timotimo> what is that?

[02:23] *** BenGoldberg joined
[02:30] *** rurban left
[02:31] <hobbs> http://html5boilerplate.com/ presumably

[02:31] <timotimo> oh, interesting

[02:31] <timotimo> most stuff i've been whipping up has been with bootstrap

[02:32] <timotimo> i was hoping i could get into html5responsiveboilerstrap.js

[02:46] *** Khisanth left
[02:48] *** Khisanth joined
[02:52] *** araujo left
[02:52] *** beastd left
[02:56] *** prime joined
[02:59] *** prime left
[03:06] *** rurban joined
[03:17] *** noganex joined
[03:20] *** noganex_ left
[03:33] *** Akagi201 left
[03:34] *** Akagi201 joined
[03:38] *** raiph joined
[03:58] *** adu left
[04:00] *** fhelmberger joined
[04:04] *** fhelmberger left
[04:12] *** rurban left
[04:22] *** gfldex joined
[04:26] *** rurban joined
[04:45] <flussence> 9 ;)

[04:46] <flussence> .oO( I remember the weirdest details... )

[04:46] <hobbs> 9 is 4 + 5!

[05:18] *** rurban left
[05:19] *** teak1010 left
[05:40] *** BenGoldberg left
[05:43] *** gfldex left
[06:03] *** kurahaupo left
[06:06] *** kurahaupo joined
[06:14] *** Mouq left
[06:16] *** raiph left
[06:23] *** raiph joined
[06:26] *** Hor|zon_ joined
[06:28] *** sven_123_ joined
[06:30] *** mathw_ joined
[06:31] *** zoosha_ joined
[06:34] *** mr-foobar left
[06:37] *** Alina-malina left
[06:37] *** lue left
[06:37] *** hugme left
[06:37] *** sven_123 left
[06:37] *** zoosha left
[06:37] *** Hor|zon left
[06:37] *** mathw left
[06:37] *** Alina-malina joined
[06:39] *** hugme joined
[06:39] *** ChanServ sets mode: +v hugme

[06:39] *** lue joined
[07:08] *** anaeem1_ joined
[07:09] *** anaeem1_ left
[07:10] *** Akagi201 left
[07:10] *** Akagi201 joined
[07:15] *** Akagi201 left
[07:29] *** Mso150_p left
[07:42] *** Mso150_p joined
[07:47] *** darutoko joined
[07:49] *** raiph left
[07:54] *** Akagi201 joined
[08:00] *** Mouq joined
[08:39] *** Alina-malina left
[08:39] *** Alina-malina joined
[08:42] *** lizmat joined
[08:45] * lizmat drops a pin

[08:46] <raydiak> careful, someone might step on that...

[08:46] * lizmat picks up the pin

[08:46] *** synopsebot left
[08:46] *** tadzik left
[08:59] *** ptc_p6 joined
[09:03] <bartolin> FWIW, today I had clean spectests on Moar, JVM and Parrot (running on FreeBSD 10.0): https://github.com/usev6/perl6-roast-data/blob/master/perl6_pass_rates.csv

[09:11] *** smls joined
[09:12] <smls> o/

[09:14] *** spider-mario joined
[09:16] <moritz> \o

[09:17] *** bjz joined
[09:18] <smls> Do you by any chance know if the «.new-from-pairs» method in the Setty/Baggy/Mixy roles is official puplic API, or just a Rakudo implementation detail?

[09:18] *** PerlJam left
[09:18] <smls> It's not mentioned in the specs.

[09:19] <smls> In Rakudo, the default .Set coercer is implemented in terms of it, and it can also be called directly.

[09:20] *** gfldex joined
[09:23] *** rurban joined
[09:33] *** vukcrni left
[09:36] *** pmurias_ joined
[09:36] *** pmurias_ left
[09:36] *** pmurias joined
[09:37] <pmurias> jnthn: what does the usecompileehllconfig op do?

[09:37] *** vukcrni joined
[09:42] *** mvuets joined
[09:52] <lizmat> smls: please consider it an implementation detail subject to change without notice

[09:52] <smls> ok

[09:52] <lizmat> so please use .Set, which *is* part of the documented API

[09:55] *** virtualsue joined
[09:56] *** KCL_ left
[09:58] *** KCL_ joined
[09:59] *** Juerd left
[10:05] <pmurias> is there a way to get the object from a compiled .moarvm file if I know the object id and serialization context handle?

[10:05] *** hugme left
[10:07] *** pmichaud left
[10:07] *** Util left
[10:07] *** masak left
[10:07] *** sergot left
[10:07] *** [Coke] left
[10:07] *** woolfy joined
[10:08] *** dalek left
[10:10] <itz> masak++ # new post

[10:25] *** anaeem1_ joined
[10:33] *** hugme joined
[10:33] *** ChanServ sets mode: +v hugme

[10:36] <lizmat> does anybody know what happened to dalek this time ?

[10:39] *** Alina-malina left
[10:45] *** mvuets left
[10:48] *** Mso150_p left
[10:49] *** Juerd joined
[10:50] <lizmat> Juerd: could it be that feather is in problems again?

[10:50] *** Alina-malina joined
[10:51] <Juerd> lizmat: Yea. Brand new server, installed last week, had a double disk crash :(

[10:51] <lizmat> :-(

[10:51] <Juerd> Two SSDs that were in RAID 1 vanished from the bus, roughly an hour apart

[10:51] * lizmat prefers DOA over this

[10:52] *** anaeem1_ left
[10:52] <Juerd> They're dead, not recognised by any of the three systems I tried them in.

[10:52] <lizmat> that's really shit

[10:52] *** anaeem1 joined
[10:53] <Juerd> Yes, especially because they were used for writeback caching and had some 10 MB of dirty data on them. Not much, but someone is bound to run into missing or otherwise broken data.

[10:53] <Juerd> Probably a year from now.

[10:57] *** anaeem1 left
[11:00] *** mvuets joined
[11:03] <lizmat> m: class A { has int $.a; method BUILD(:$!a) {} }; A.new(a=>1)   # do we have a ticket number for this yet ?

[11:03] <camelia> rakudo-moar 28cfa0: OUTPUT«Cannot modify an immutable int␤  in method BUILD at /tmp/OO0_3ySwks:1␤  in method BUILDALL at src/gen/m-CORE.setting:961␤  in method bless at src/gen/m-CORE.setting:944␤  in method new at src/gen/m-CORE.setting:928␤  in block <unit> at /tmp/OO0_3…»

[11:04] <itz> http://24pullrequests.com/

[11:05] <itz> is perl6 or rakudo part of this? I don't seem to be able to search just view all

[11:08] *** Isp-sec joined
[11:09] <itz> oh there a tag cloud

[11:13] <Mouq> oi, it's .new-from-pairs now? No wonder I couldn't do .new-fp anymore. Would've been nice to have had a longer deprecration cycle on that one :/

[11:13] <Mouq> (Wrt Setty/Baggy/Mixy)

[11:14] *** gfldex left
[11:14] <lizmat> Mouq: it was not part of the published API afaik, so no deprecation cycle...

[11:14] <lizmat> and BTW, I did that almost a year ago already, if I remember correctly

[11:15] *** denis_boyun_ joined
[11:16] <itz> I added 4 projects to 24pullrequests

[11:16] <lizmat> hmmm... apparently not...   more like 6 weeks ago

[11:17] <Mouq> Haha, alright

[11:18] <lizmat> how time flies  ...

[11:24] *** Mouq left
[11:30] *** Mouq joined
[11:32] <jnthn> ...or doesn't, apparently :P

[11:32] <jnthn> Afternoon, #perl6

[11:33] <lizmat> jnthn o/

[11:33] <jnthn> "X is not in the spec" will not, sadly, mean folks won't discover/use it...

[11:33] <jnthn> Especially given the introspection features we have...

[11:34] <lizmat> well, I guess we should add a "official API" trait to the stuff we consider to be official API

[11:34] <jnthn> Or just make private the things we don't :)

[11:36] <arnsholt> That too. But I think at least some API documentation should be part of the spec

[11:36] <lizmat> hmmm... then if we forget to do that for something, it is all of a sudden public

[11:36] <arnsholt> In light of my recent kvetching over the Python spec =)

[11:37] <lizmat> I'd rather have it the other way around

[11:37] <jnthn> lizmat: My point was more that our userbase is going to want us hold us to de facto public, not de jure public. :)

[11:37] <jnthn> *to want to

[11:43] *** denis_boyun_ left
[11:43] <Mouq> masak++ # I missed the new post!

[11:47] * arnsholt digs into the Rakudo code

[11:47] <arnsholt> Let's see if I can't figure out how this setting stuff works

[11:49] <arnsholt> Oh, wait. There's setting stuff in NQP too. That's probably easier to follow

[11:49] *** JimmyZ_ joined
[11:57] <jnthn> Yes, it will be :)

[11:57] <jnthn> And I think common bits are factored out into some things in HLL::Actions, so you can re-use them a bit.

[11:59] <arnsholt> Oh, awesome!

[11:59] <lizmat> jnthn: nqp::getstdin gives you a PIO with a REPR MVMOSHandle, right ?

[12:00] <lizmat> brb&

[12:01] <jnthn> lizmat: On MoarVM, yes

[12:01] <lizmat> ok, just double checking  :-)

[12:01] <jnthn> lizmat: In general, you should not assume anything about such a handle besides that you can use it with other fh-taking nqp:: ops.

[12:02] <lizmat> yes, I was just refactoring opening STDIN and friends

[12:02] <arnsholt> jnthn: Oh, and a follow-up question from a few days ago: What does :blocktype immediatestatic and declarationstatic mean? They're not documented in docs/qast.markdown

[12:02] <lizmat> and it started complaining about the PIO not being an MVMOSHandle

[12:02] <lizmat> so I wanted to be sure  :-)

[12:04] <jnthn> lizmat: Yes, the way it informs you of your mistake is platform specific, but the mistake will have cross-platform effects ;)

[12:04] <lizmat> yup

[12:04] <jnthn> arnsholt: It means "don't emit any closure-taking code"

[12:04] <jnthn> arnsholt: Generally because you're going to manage it yourself or the thing is never a closure.

[12:05] <arnsholt> Aha. So for example the blocks I emit for a for loop could be declarationstatic, since it'll never exist outside of its lexical scope?

[12:06] <jnthn> No, it's not that simple

[12:06] <jnthn> It cares about seeing the right outer things

[12:06] <jnthn> I presume, anyway.

[12:06] <arnsholt> Yeah. So a *static doesn't have an outer at all?

[12:07] <jnthn> def foo:; omg = 'so implicit'; for syntax in i_cannot_remember_python:; print omg

[12:07] <jnthn> It has an outer, but it is equal to the last outer that ran

[12:08] <arnsholt> The last outer that ran?

[12:08] <jnthn> In that snippet I just wrote, if you had that running recursively for for two threads, then whoever entered foo second would have their `omg` seen.

[12:08] <arnsholt> Oh!

[12:09] <jnthn> And the first would suddenly come to see a different outer

[12:09] <jnthn> Yes, thus hwy it's rarely what you want ;)

[12:09] <jnthn> *why

[12:09] <arnsholt> I can see that now. Thanks =

[12:09] <arnsholt> =)

[12:11] <mvuets> hello there! i have a question here (-: what would be a recommended getaway rakudo backend for a complete newbie?

[12:12] <colomon> moar

[12:14] *** tadzik joined
[12:15] *** synopsebot joined
[12:15] *** psch joined
[12:16] <psch> good *, #perl6

[12:16] <colomon> o/

[12:19] <psch> colomon \o

[12:19] <[Tux]> ==> Reinstalling

[12:19] <[Tux]> Could not download module metadata: Failed to connect: connection refused

[12:19] <[Tux]>   in method update at lib/Panda/Ecosystem.pm:91

[12:21] <lizmat> [Tux]: feather is down after a double SDD crash

[12:21] <lizmat> Juerd is working on it afaik

[12:21] <lizmat> *SSD

[12:21] <[Tux]> ok

[12:24] *** KCL joined
[12:25] <tadzik> [Tux]: I picked it up just a few minutes ago

[12:26] <tadzik> [Tux]: should be okay now

[12:26] <tadzik> if it's still up that is, I decided to move my irc session elsewhere

[12:26] <tadzik> botsnack!

[12:26] <tadzik> hm

[12:27] <tadzik> synopsebot: botsnack!

[12:27] <psch> botsnack might be matched with /^botsnack$/

[12:27] <psch> botsnack

[12:27] <psch> oh

[12:27] <psch> or

[12:27] <psch> it's not here

[12:27] <tadzik> $args->{body} eq 'synopsebot: botsnack!'

[12:27] *** KCL_ left
[12:27] <tadzik> no idea why it's broken

[12:28] <psch> it's here, i should have checked /names :/

[12:29] <tadzik> yeah, it's just broken for some reason

[12:29] <psch> S99:botsnack

[12:29] <synopsebot> Link: http://perlcabal.org/syn/S99.html#botsnack

[12:29] <psch> hm

[12:29] <tadzik> hah

[12:29] *** virtualsue left
[12:32] <psch> jnthn: i'm understanding this correctly that i need to override createAdaptorMethod, am i not?  i have a feeling i'm running into some kind of circularity there though

[12:33] <psch> jnthn: as in, i have to defer the visitation of the code for the methods until i know which ones i want to treat as multis to have the dispatch logic inside the CompilationUnit, but i need to have created the CompilationUnit before i can see all methods i want to treat as multis

[12:35] <psch> oh, i could override createAdaptor instead of createAdaptorMethod and run a first-pass through the methods to determine multis by their descriptor

[12:42] *** JimmyZ_ is now known as JimmyZ

[12:43] <arnsholt> jnthn: Looking at NQP::Compiler, I see that MAIN has to be @ARGS on Parrot/Moar, but *@ARGS on JVM. Is that a bug of some kind?

[12:43] <jnthn> arnsholt: Yeah...

[12:43] *** erkan left
[12:44] <jnthn> psch: I don't quite remember how it works, but that sounds about right...

[12:44] <jnthn> psch: That is, locate the things, then do the building.

[12:45] *** ptc_p6 left
[12:45] <arnsholt> jnthn: Is it related to something already in the issue queue, or something else?

[12:46] *** ptc_p6 joined
[12:47] <jnthn> arnsholt: Not sure if it's in the issue queue...I can't remember what it is, it was quite a while ago...

[12:47] <jnthn> arnsholt: I think I was like "argh, just hack it and worry about it later" :)

[12:49] <jnthn> It may be a bug in interaction of :main and slurpy stuff

[12:52] <arnsholt> I'll add an issue for it. Doesn't look like it's there

[12:53] <arnsholt> And it's JVM that's buggy, right? =)

[13:00] <jnthn> arnsholt: Well, we should probably follow what Perl 6's MAIN does, which is takes *@ARGS if there are many

[13:00] <jnthn> That'd suggest NQP-JVM is the one in the right here.

[13:00] <jnthn> bbiab

[13:01] <arnsholt> Cool

[13:03] *** Lasse_ joined
[13:03] <pmurias> arnsholt: I think that's a case of "Just #ifdef it on parrot to avoid having to deal with it as much as possible"

[13:04] *** kurahaupo left
[13:05] *** girlperlie joined
[13:05] *** girlperlie left
[13:05] <arnsholt> Moar follows Parrot on this one, actually =)

[13:10] <lizmat> alas, no clean spectest for me still... :-(

[13:11] <timotimo> how close to clean is it for you?

[13:11] <lizmat> trying a complete clean build again first

[13:12] <lizmat> 2 random files failing: t/spec/S32-array/end.t and t/spec/S32-array/push.t 

[13:12] <lizmat> are ok on their own

[13:13] <lizmat> fwiw, I just pushed the NQP_REVISION bump

[13:17] <jnthn> Well, 2 is a lot better than a dozen.

[13:19] <jnthn> lizmat: What was the failure mode? 

[13:23] <pmurias> jnthn: is there a way to dump some info about an object in nqp without guessing what it is?

[13:24] *** anaeem1 joined
[13:24] <jnthn> pmurias: Well, you can $obj.HOW.name($obj) on pretty much anything in MoarVM.

[13:29] <pmurias> it turns out my problems are being caused by some VMArray using a STable from the compiler setting

[13:31] <pmurias> and the --bootstrap flag solves them for reasons I don't fully understand ;)

[13:31] <jnthn> ;)

[13:32] <jnthn> I suspect I'd have to read as much code to re-understand it and explain it, as you would to figure it out... :)

[13:32] <jnthn> I remember thinking while writing it, "I'm SO glad Rakudo is not a bootstrapping compiler, only NQP is" :)

[13:33] *** Guest97404 left
[13:36] *** bowtie joined
[13:36] *** bowtie is now known as Guest40300

[13:38] *** denis_boyun_ joined
[13:39] *** anaeem1 left
[13:39] *** anaeem1 joined
[13:40] *** kjs_ joined
[13:40] *** ptc_p6 left
[13:46] <Mouq> lizmat: What is IO::Dup short for?

[13:47] *** telex left
[13:48] <jnthn> How about you?

[13:48] <jnthn> oops

[13:48] <jnthn> ww

[13:48] <jnthn> Mouq: I'd guess duplicate or something...

[13:48] *** telex joined
[13:49] <lizmat> well, I guess it would be an objectification of man dup 5

[13:50] <lizmat> and another consumer of the PIO role

[13:59] *** prime joined
[13:59] *** prime left
[13:59] *** prime joined
[14:01] *** kjs_ left
[14:09] *** denis_boyun_ left
[14:10] *** Mouq left
[14:10] *** anaeem1 left
[14:12] *** denis_boyun_ joined
[14:14] *** rindolf joined
[14:18] <smls> "MixHash [... ] Keys with fractional weights are deleted if they go to 0.", according to spec

[14:18] <smls> What does "go to 0" mean here?

[14:20] <moritz> is assigned a 0 value

[14:21] <smls> ok

[14:22] <lizmat> 	 m: my $m = (a => pi).MixHash; say $m.perl; $m<a>=0; say $m.perl

[14:22] <camelia> rakudo-moar f3390f: OUTPUT«("a"=>3.14159265358979).MixHash␤().MixHash␤»

[14:22] <smls> right, just like Set/Bag

[14:23] <smls> I just wondered for a moment there, if "goes to 0" refers to something complicated with infinite fractions or limits... :)

[14:23] *** denis_boyun_ left
[14:24] <moritz> Stage mast       : Unknown constant 'SIG_QUIT'

[14:24] <lizmat> whenever the condition $value == 0 is true, it will be deleted

[14:24] <lizmat> which backend ?

[14:24] <moritz> moar

[14:24] <lizmat> which OS?

[14:24] <moritz> I ran Configure.pl, it didn't complain about NQP being too old

[14:25] <lizmat> I guess that's the reason I always nuke my install dir  :-)

[14:25] <moritz> huh

[14:25] <moritz> $ cat tools/build/NQP_REVISION 

[14:25] <moritz> 2014.11-27-g3254b59

[14:25] <moritz> $ ./install/bin/nqp-m --version

[14:25] <moritz> This is nqp version 2014.10-33-g86f1841 built on MoarVM version 2014.11

[14:26] <moritz> wth doesn't it complain about it being too old?

[14:26] <lizmat> if it is because I did something wrong, please let me know

[14:26] <moritz> sounds like a Configure.pl bug

[14:29] <smls> In Rakudo: role Mixy does Baggy, and role Baggy does QuantHash

[14:29] <smls> In S32/Containers: «role QuantHash[::T, $default = Any] does Mixy does Associative {...}»

[14:30] <lizmat> smls: the spec says use QuantHash

[14:30] <smls> use for what?

[14:31] <lizmat> however, currently private attributes defined in a role that is consumed in another role, are not visible in the class that consumes that role

[14:31] <lizmat> that's why we have the rather strange order of Sets/Bags/Mixes atm

[14:31] <smls> I was pointing out the inconsistency between Rakudo and spec, of which role does which

[14:31] <lizmat> yes, it is not up to spec wrt to roles it should use

[14:31] <smls> oh, so it's a temporary thing?

[14:32] <lizmat> it *should* be up to spec wrt to functionality

[14:32] *** Alina-malina left
[14:32] *** kjs_ joined
[14:32] <smls> but on p6doc we show type graphs as well...

[14:33] <smls> (currently, based on Rakudo.)

[14:33] *** Alina-malina joined
[14:35] <moritz> dalek, lazy bastard, where are you?

[14:36] *** raiph joined
[14:36] *** dalek joined
[14:36] *** ChanServ sets mode: +v dalek

[14:38] *** Alina-malina left
[14:39] *** kjs_ left
[14:40] *** spider-mario left
[14:42] *** anaeem1_ joined
[14:43] <dalek> doc: 77dda07 | Mouq++ | lib/Language/operators.pod:

[14:43] <dalek> doc: Missed in last commit: add dumb example for .Foo::bar

[14:43] <dalek> doc: 

[14:43] <dalek> doc: Something more in-depth would be better, but this at least shows the

[14:43] <dalek> doc: syntax of the op.

[14:43] <dalek> doc: review: https://github.com/perl6/doc/commit/77dda0722c

[14:46] <smls> Mouq: 'does Bar' should be 'is Bar' in that commit.

[14:46] *** anaeem1_ left
[14:47] <smls> or alternatively, 'class Bar' ---> 'role Bar'

[14:48] *** Alina-malina joined
[15:02] *** spider-mario joined
[15:06] *** araujo joined
[15:12] *** brrt joined
[15:18] <raiph> hi brrt, please see http://stackoverflow.com/questions/27178599/how-to-compile-perl6-file-to-exe

[15:18] <yoleaux> 23 Nov 2014 11:14Z <nine> raiph: thanks. Of course there'll always be edge cases that need some workarounds. But from my practice using  Perl 5's Inline::Python I can say, that there are always workarounds and most code does just fine

[15:22] <arnsholt> "While looking for 'SNAKE.setting.moarvm': no such file or directory" that's a step in the right direction at least =D

[15:23] *** Akagi201_ joined
[15:26] *** Akagi201 left
[15:28] <timotimo> brrt: i'd be interested in a status update on the static moar binary generator thingie

[15:39] *** kjs_ joined
[15:39] *** brrt left
[15:44] *** zakharyas joined
[15:50] <arnsholt> jnthn: ping?

[15:54] <smls> m: .say for SetHash(5).pick.perl, SetHash().pick.perl, SetHash(5).grab.perl, SetHash().grab.perl

[15:54] <camelia> rakudo-moar c11b2a: OUTPUT«5␤Nil␤(5,).list␤().list␤»

[15:54] <smls> lizmat: ^ What's with grab (but not pick) list-ifying its return value?

[15:58] <timotimo> TimToady: should i invest a bit of time into building a "NFA to graphviz" tool?

[16:01] <psch> m: .say for SetHash(1..5).pick(2).perl, SetHash(1..5).grab(2).perl 

[16:01] <camelia> rakudo-moar c11b2a: OUTPUT«(2, 5).list␤(3, 1).list␤»

[16:03] *** masak joined
[16:03] <masak> aloha, #perl6

[16:03] <psch> hi masak \o

[16:04] <masak> feather did another reboot?

[16:05] <psch> masak: http://irclog.perlgeek.de/perl6/2014-11-29#i_9735384

[16:06] *** kjs_ left
[16:08] <jnthn> arnsholt: I'm here now

[16:09] <jnthn> raiph: Short answer is "there's not a way to do that yet", and --target=mast is just a debugging aid, so it's really not a suitable thing to use.

[16:09] <arnsholt> jnthn: I think the setting stuff is mostly there, but when it runs the fixup to set the outer on the compiled thing, it looks like getcurhllsym("ModuleLoader") returns null

[16:10] <arnsholt> OTOH, looks like it's working in the World code

[16:10] <arnsholt> I guess it's not running in the right HLL, but I'm not entirely sure what's causing it

[16:10] <arnsholt> That's set by the CompUnit's :hll, right?

[16:11] <jnthn> Yes

[16:11] <jnthn> Also, do you have a module loader?

[16:11] <jnthn> NQP iirc emits code to loadbytecode one.

[16:11] <timotimo> hm. would it make sense to somehow visualize the contents of the serialized blob as a graph or html page of some kind?

[16:11] <jnthn> I suspect you can crib its one initially.

[16:11] <arnsholt> Aha. That's probably it

[16:12] *** zakharyas left
[16:12] <jnthn> You can do a gethllsym('nqp', 'ModuleLoader') to grab it even if you're in the other hll

[16:12] <arnsholt> I do have a ModuleLoader class, but I guess my World might actually be getting NQP's ModuleLoader

[16:15] *** prime left
[16:20] *** zakharyas joined
[16:27] *** Grrrrrrr joined
[16:27] *** Grrrrrrr left
[16:30] <dalek> snake: 8d2700e | (Arne Skjærholt)++ | / (7 files):

[16:30] <dalek> snake: Initial setting implementation.

[16:30] <dalek> snake: review: https://github.com/arnsholt/snake/commit/8d2700e1f2

[16:30] <arnsholt> jnthn++ # Halp

[16:32] <masak> setting? you mean __builtin__, right?

[16:33] <arnsholt> Yeah

[16:33] <arnsholt> Not actually accessible through that name yet though

[16:34] <arnsholt> Although now that you mention it, that's probably the correct way to do it once modules are implemented

[16:34] <arnsholt> Just implicitly load and import all the stuff from the builtins module

[16:36] <masak> I think so.

[16:38] <arnsholt> Although wrapping stuff in the lexical scope of __builtins__ might avoid a bit of computation on startup. Hard to tell a priori

[16:38] <arnsholt> Anyways, that requires a fair chunk of infrastructure I don't have yet

[16:40] *** JimmyZ left
[16:40] *** ggoebel111111113 left
[16:52] *** Lasse_ left
[16:57] <dalek> rakudo/newio: b78a931 | (Elizabeth Mattijsen)++ | src/core/ (2 files):

[16:57] <dalek> rakudo/newio: Move STDIN/OUT/ERR init to a more logical place

[16:57] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/b78a9314ac

[16:57] <dalek> rakudo/newio: 1db1c24 | (Elizabeth Mattijsen)++ | src/core/ (2 files):

[16:57] <dalek> rakudo/newio: $*ARGFILES initialization in a more logical place

[16:57] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/1db1c24bbc

[16:58] <dalek> rakudo/newio: c11b2a7 | moritz++ | Configure.pl:

[16:58] <dalek> rakudo/newio: Configure.pl: Complain if nqp-m is too old

[16:58] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/c11b2a7f43

[16:58] <dalek> rakudo/newio: 0b64cc4 | (Elizabeth Mattijsen)++ | Configure.pl:

[16:58] <dalek> rakudo/newio: Merge branch 'nom' into newio

[16:58] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/0b64cc4299

[17:21] <raydiak> o/

[17:23] *** mr-foobar joined
[17:26] <ugexe> did feather change dns settings again? im getting Connection Refused on one specific machine now for nickl@localhost:~/perl6/panda$ perl6 -e 'IO::Socket::INET.new(:host<feather.perl6.nl>, :port(3000))'

[17:27] <dalek> rakudo/newio: 3be8fcd | (Elizabeth Mattijsen)++ | src/core/PIO.pm:

[17:27] <dalek> rakudo/newio: Streamline IO::ArgFiles.get

[17:27] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/3be8fcd553

[17:27] <dalek> rakudo/newio: 17e652f | (Elizabeth Mattijsen)++ | src/core/Str.pm:

[17:27] <dalek> rakudo/newio: Str.path should make an IOU, not an IO::Path

[17:27] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/17e652f1a8

[17:28] <moritz> ugexe: might be an ipv6 problem

[17:29] <ugexe> moritz: any hints on how i can tell? my sysadmin skills are lacking

[17:30] <tony-o> ugexe: there is no ipv6 on that box, i have it disabled

[17:30] <tony-o> oh that's on your machine

[17:30] <ugexe> the problem isnt on that box

[17:31] <moritz> ugexe: as root, try   echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6

[17:31] <moritz> ugexe: that will disable IPv6

[17:32] <moritz> ugexe: if it works afterwards, you know it's really the rakudo ipv6 bug

[17:32] <tony-o> any help with Unhandled exception: When invoking is_bindable, Provided outer frame 0x7fb7ae4c0be0 (MVMStaticFrame bind_one_param) does not match expected static frame type 0x7fb7ae4c09a0 (MVMStaticFrame ) ?

[17:33] <ugexe> connection till refused

[17:33] <ugexe> still

[17:33] <moritz> huh

[17:33] <moritz> ugexe: any firewall in the way?

[17:34] <ugexe> i have iptables setup. but ive been able to connect fine for the last couple days

[17:34] <ugexe> ive been working on panda and wonder if i somehow tripped some fail2ban type deal? 

[17:34] <moritz> I get the same error from panda

[17:34] <moritz> but nmap shows the port as open

[17:35] <ugexe> m: IO::Socket::INET.new(:host<feather.perl6.nl>, :port(3000));

[17:35] <camelia> rakudo-moar c11b2a: OUTPUT«Failed to connect: connection refused␤  in method initialize at src/gen/m-CORE.setting:22518␤  in method new at src/gen/m-CORE.setting:22502␤  in block <unit> at /tmp/0ERLnFfkDT:1␤␤»

[17:36] *** BenGoldberg joined
[17:36] <moritz> ok, now nmap shows the port as closed

[17:36] <ugexe> yeah now its not working on other machines (when it was ~15 minutes ago)

[17:36] * raydiak gets same from his web browser even

[17:36] <moritz> seems that server process died

[17:38] <tony-o> full dump for MVMStaticFrame error is here: https://gist.github.com/tony-o/6de78fe91379a2501415

[17:40] <dalek> roast: 4d13580 | (Elizabeth Mattijsen)++ | S10-packages/basic.t:

[17:40] <dalek> roast: s/.path.directory/.IO.dirname/

[17:40] <dalek> roast: review: https://github.com/perl6/roast/commit/4d135805f4

[17:43] *** dwarring joined
[17:45] <TimToady> timotimo: NFA graph might be interesting, though dunno how useful, unless to motivate someone to implement DFA

[17:46] <TimToady> speaking of implementing DFA, why does the NFA never remove epsilons from the NFA, except over and over again in the results

[17:46] <TimToady> seems like it'd be more efficient to guarantee there are no epsilons, and then we wouldn't have to check for them at NFA run time

[17:47] <TimToady> and also, coincidentally, make the NFA readier for DFAish caching

[17:48] *** gfldex joined
[17:48] <TimToady> I guess it's just a DTSTTCPW.

[17:49] <mvuets> i cannot get panda working: feather.perl6.nl:3000 refuses connections

[17:49] <mvuets> is it down for someone else?

[17:50] <ugexe> m: IO::Socket::INET.new(:host<feather.perl6.nl>, :port(3000));

[17:50] <camelia> rakudo-moar c11b2a: OUTPUT«Failed to connect: connection refused␤  in method initialize at src/gen/m-CORE.setting:22518␤  in method new at src/gen/m-CORE.setting:22502␤  in block <unit> at /tmp/2Ba4oymwvJ:1␤␤»

[17:50] <raydiak> mvuets: yes, it's down for the moment

[17:52] *** FROGGS_ joined
[17:53] <mvuets> is there a mirror by chance?

[17:54] <raydiak> mvuets: not that I know of, but you could d/l a module from github via links on http://modules.perl6.org/, then install locally w/"panda install ." in the module's dir, I believe

[17:55] *** Sqirrel left
[17:56] *** FROGGS left
[17:56] <mvuets> ah, good idea!

[17:57] <ugexe> you might have to use panda-install, as panda install now does Panda::Reporter.new( :$bone ).submit; which may not work without internet

[17:57] <psch> it submits without the env var?

[17:59] *** cognominal joined
[17:59] <psch> ah, it always calls &Reporter::submit but &submit has if %ENV<PANDA_SUBMIT_TESTREPORTS> { #`[[ submitting happens here ]] } 

[17:59] <ugexe> oh, so yeah if its not set it should be fine

[18:00] *** anaeem1 joined
[18:00] <psch> i think cpandatesters lives on a different host as well, but i'm not sure about that

[18:02] <mvuets> do you happen to know what generates that projects.json?

[18:03] <ugexe> if you used panda recently you should have a current projects file

[18:03] *** perltricks joined
[18:04] <mvuets> sadly not, i just got it

[18:04] *** anaeem1 left
[18:04] <colomon> mvuets: what's your e-mail?  (send message privately if you want)

[18:05] <colomon> or heck, wait a moment

[18:06] <perltricks> hey y'all. This 1 liner's Syntax is OK: perl6 -ce 'state %l;.say if ++%l{$_}==2'

[18:06] <perltricks> but this one hangs: perl6 -MTest -e 'plan 1;is q:x{perl6 -ce q/state %l;.say if ++%l{$_}==2/ example.txt}, "Syntax OK\n";'

[18:06] <perltricks> any idea why?

[18:08] <perltricks> simpler version: perl6 -MTest -e 'plan 1;is q:x{perl6 -ce "state %l;.say if ++%l{$_}==2"}, "Syntax OK\n";'

[18:09] <colomon> mvuets: https://gist.github.com/colomon/a16b64f27f10010afed3

[18:09] <dalek> ecosystem: 3ea5b89 | (David Warring)++ | META.list:

[18:09] <dalek> ecosystem: Added CSS::Writer

[18:09] <dalek> ecosystem: 

[18:09] <dalek> ecosystem: Reserializes AST data, as produced by CSS::Grammar etc

[18:09] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/3ea5b8908a

[18:09] <colomon> mvuets: that's from midnight EST or so

[18:10] <dalek> rakudo/newio: 873e88a | (Elizabeth Mattijsen)++ | src/core/IO/Local.pm:

[18:10] <dalek> rakudo/newio: Add obsolete .directory for API consistency

[18:10] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/873e88a118

[18:10] <dalek> rakudo/newio: fd1ee99 | (Elizabeth Mattijsen)++ | src/core/IOU.pm:

[18:10] <dalek> rakudo/newio: Allow "foo".IO.open/mkdir if "foo" doesn't exist

[18:10] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/fd1ee997f0

[18:10] <dalek> rakudo/newio: c4d1f1f | (Elizabeth Mattijsen)++ | src/core/io_operators.pm:

[18:10] <dalek> rakudo/newio: Make mkdir() work again

[18:10] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/c4d1f1ffc8

[18:10] *** xiaozeng joined
[18:11] <mvuets> colomon: sweet, thanks!

[18:12] <xiaozeng> what's going on here 

[18:14] <lizmat> xiaozeng: welcome, we're working on perl 6 here

[18:14] <xiaozeng> What can I do to help

[18:15] *** woolfy left
[18:15] *** Mso150_p joined
[18:17] <xiaozeng> May i join you, or where can i get to know more?

[18:19] <lizmat> xiaozeng: you probably should start with http://learnxinyminutes.com/docs/perl6/ or so

[18:19] *** sftp left
[18:19] <lizmat> that should be a good introduction into perl 6

[18:20] <mvuets> xiaozeng: another nice page you may want to check out: http://perl6.org/getting-started/

[18:21] <dalek> rakudo/newio: 21731f5 | (Elizabeth Mattijsen)++ | src/core/PIO.pm:

[18:21] <dalek> rakudo/newio: Apparent "bin" means don't set encoding

[18:21] <dalek> rakudo/newio: 

[18:21] <dalek> rakudo/newio: Rather than "binary".  Wonder if it's possible of needed to be able to change

[18:21] <dalek> rakudo/newio: the encoding of a PIO during its lifetime.  If it should be possible, I don't

[18:21] <dalek> rakudo/newio: think we can revert to "binary" at the moment.

[18:21] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/21731f5955

[18:22] <xiaozeng> thanks : )

[18:23] *** SevenWolf joined
[18:28] *** j4janicej left
[18:28] *** lizmat left
[18:28] *** j4jackj joined
[18:30] *** j4jackj is now known as j4janicej

[18:30] *** sftp joined
[18:31] *** xiaozeng left
[18:32] *** perltricks left
[18:32] <dalek> rakudo/nom: 62c092f | (Elizabeth Mattijsen)++ | src/core/IO/Notification.pm:

[18:32] <dalek> rakudo/nom: Fix deprecated Supply.more (to .emit)

[18:32] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/62c092fc73

[18:34] <dalek> roast: ab7cddd | (Elizabeth Cholet)++ | S17-supply/watch_path.t:

[18:34] <dalek> roast: Fixed deprecated "uniq" to "unique".

[18:34] <dalek> roast: review: https://github.com/perl6/roast/commit/ab7cdddcb3

[18:34] <dalek> roast: 8167450 | lizmat++ | S17-supply/watch_path.t:

[18:34] <dalek> roast: Merge pull request #50 from zrusilla/master

[18:34] <dalek> roast: 

[18:34] <dalek> roast: Fixed deprecated "uniq" to "unique".

[18:34] <dalek> roast: review: https://github.com/perl6/roast/commit/8167450130

[18:36] *** lizmat joined
[18:38] *** vike left
[18:40] <dalek> roast: 98d86f1 | (Elizabeth Mattijsen)++ | S32-io/io-path-unix.t:

[18:40] <dalek> roast: Fix obsolete .directory -> .dirname

[18:40] <dalek> roast: review: https://github.com/perl6/roast/commit/98d86f1185

[18:43] <dalek> rakudo/newio: 62c092f | (Elizabeth Mattijsen)++ | src/core/IO/Notification.pm:

[18:43] <dalek> rakudo/newio: Fix deprecated Supply.more (to .emit)

[18:43] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/62c092fc73

[18:43] <dalek> rakudo/newio: f4496d2 | (Elizabeth Mattijsen)++ | src/core/IO/Notification.pm:

[18:43] <dalek> rakudo/newio: Merge branch 'nom' into newio

[18:43] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/f4496d2b88

[18:43] *** vike joined
[18:45] *** ilbot3 left
[18:46] *** ilbot3 joined
[18:47] <mvuets> cosimo: ping

[18:51] *** lizmat left
[18:51] *** denis_boyun_ joined
[18:56] *** Khisanth left
[18:58] *** Khisanth joined
[18:58] *** adu joined
[18:59] *** adu left
[19:08] *** psch left
[19:10] <dalek> snake: 5bc1c25 | (Arne Skjærholt)++ | t/ (2 files):

[19:10] <dalek> snake: Remove most nqp::op use from test files.

[19:10] <dalek> snake: review: https://github.com/arnsholt/snake/commit/5bc1c251af

[19:11] *** prime joined
[19:31] <mvuets> is META.info obsolete in favor of META6.json?

[19:32] *** denis_boyun_ left
[19:35] *** guru joined
[19:35] *** guru is now known as Guest38251

[19:36] <dalek> perl6.org: 65b9998 | raydiak++ | source/style.css:

[19:36] <dalek> perl6.org: Fix broken nav styling

[19:36] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/65b9998e60

[19:36] *** Guest38251 is now known as ajr_

[19:36] *** ajr_ left
[19:43] *** anaeem1_ joined
[19:43] *** mullagain left
[19:46] *** perltricks joined
[19:49] *** SevenWolf left
[19:49] *** perturbation joined
[19:50] *** anaeem1_ left
[19:52] *** anaeem1_ joined
[19:57] *** kjs_ joined
[19:57] *** kjs_ left
[19:58] *** kjs_ joined
[19:58] <raydiak> is anyone with the proper access trying to get feather.perl6.nl:3000 back up?

[19:59] <FROGGS_> raydiak: only tadzik can do that

[19:59] <raydiak> ah

[20:02] *** smls left
[20:04] *** rindolf left
[20:07] <masak> what depends on feather.perl6.nl:3000 being available?

[20:07] <moritz> panda install

[20:07] *** zakharyas left
[20:08] <moritz> ok, I've restarted the app

[20:08] <moritz> (which involves logging in as tadzik, which is why I don't like doing it)

[20:08] <colomon> … installing panda, or installing modules using panda?

[20:09] <moritz> colomon: the latter

[20:09] *** darutoko left
[20:09] <colomon> huh.  I thought module installation just used your local projects.json and github or wherever.

[20:09] <masak> is it wise to tie something as common as panda install to something as seemingly fragile as feather.perl6.nl:3000 ?

[20:10] <moritz> masak: nope; the plan is to make it a "proper" service

[20:10] <moritz> masak: at least that's my plan as soon as I have the new server

[20:11] <moritz> (and run it on port 80, so that fewer firewalls complain)

[20:11] <FROGGS_> +1

[20:11] * colomon wonders if it might be possible to have a backup on github or something.

[20:11] *** KCL left
[20:11] <moritz> but I won't invest more time on that on the old feather

[20:14] *** anaeem1_ left
[20:14] *** anaeem1_ joined
[20:17] <hoelzro> o/ mvuets 

[20:17] <hoelzro> good to see a familiar face here =)

[20:19] <dalek> nqp: 0cf0677 | TimToady++ | src/QRegex/ (2 files):

[20:19] <dalek> nqp: enforce invariant of correct # of NFA fates

[20:19] <dalek> nqp: 

[20:19] <dalek> nqp: The mergesubstates method now always guarantees that states[0] has a

[20:19] <dalek> nqp: size reflecting the number of fates used by this NFA.  Previously it

[20:20] <dalek> nqp: relied on its caller to set the fates list, and since /@array/ didn't

[20:20] <dalek> nqp: do that (oops), the fate count was off, resulting in reallocations

[20:20] <dalek> nqp: in the NFA engine.  Since alternatives just use the fate numbers

[20:20] <dalek> nqp: directly, they no longer have to set the fates.  Protoregexes, on

[20:20] <dalek> nqp: the other hand, still override the fate number with rxname, but now

[20:20] <dalek> nqp: do so by setting it after mergesubstates sets it to the number.

[20:20] <dalek> nqp: review: https://github.com/perl6/nqp/commit/0cf0677507

[20:20] *** colomon left
[20:20] <masak> TimToady++

[20:21] <FROGGS_> that sounds nice indeed

[20:21] *** anaeem1__ joined
[20:21] <TimToady> you just like it because I used the word "invariant" :P

[20:22] *** anaeem1_ left
[20:22] <TimToady> and while it sounds great to avoid reallocations, only the /@array/ construct was actually doing it :)

[20:23] <FROGGS_> I like it because it fixes an oops :o)

[20:26] * masak .oO( de-oopsing )

[20:28] <masak> speaking of nothing: when a class A keeps calling into class B in a way that makes you feel that logic isn't properly encapsulated in B but has leaked into A, what design principle is broken, or does that kind of code smell have a name?

[20:28] * moritz liked it because it was a detailed commit message (and saves allocations)

[20:30] <dalek> perl6.org: cef6e11 | raydiak++ | source/ (2 files):

[20:30] <dalek> perl6.org: Fix broken layout in /documentation

[20:30] <dalek> perl6.org: 

[20:30] <dalek> perl6.org: Also rearrange box colors to compensate for layout changes

[20:30] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/cef6e113a6

[20:37] <arnsholt> Argh! Contextual, y u no contextualize!

[20:39] *** Mso150_p_l joined
[20:40] *** Mso150_p left
[20:43] *** kjs_ left
[20:50] *** anaeem1__ left
[20:50] *** anaeem1 joined
[20:54] *** Sqirrel joined
[20:55] <dalek> doc: 300883d | (Rob Hoelz)++ | lib/Type/List.pod:

[20:55] <dalek> doc: Document grep-index

[20:55] <dalek> doc: review: https://github.com/perl6/doc/commit/300883de5e

[20:55] <dalek> doc: 7fe985f | (Rob Hoelz)++ | lib/Type/List.pod:

[20:55] <dalek> doc: Document first-index

[20:55] <dalek> doc: review: https://github.com/perl6/doc/commit/7fe985fbb4

[20:55] <dalek> doc: b28737d | (Rob Hoelz)++ | lib/Type/List.pod:

[20:55] <dalek> doc: Document last-index

[20:55] <dalek> doc: review: https://github.com/perl6/doc/commit/b28737db1e

[20:55] *** anaeem1 left
[20:58] <timotimo> o/

[20:58] <dalek> snake: 9680eaf | (Arne Skjærholt)++ | src/Snake/Grammar.nqp:

[20:58] <dalek> snake: Allow unlimited whitespace inside enclosures.

[20:58] <dalek> snake: review: https://github.com/arnsholt/snake/commit/9680eaf467

[20:58] <arnsholt> \o

[21:03] *** Mso150_p_l left
[21:03] *** Mso150_p_l joined
[21:04] *** raiph left
[21:20] <moritz> hoelzro++ # docs

[21:21] *** kaare_ left
[21:22] *** adu joined
[21:39] <timotimo> panda refuses to work if it can't connect to the metadata server? >_<

[21:39] <timotimo> like, it won't even install packages locally?

[21:40] <masak> :/

[21:40] <timotimo> in that case, i'll ufo it up :)

[21:41] *** raiph joined
[21:41] <timotimo> ufo has some deprecations in it

[21:41] <masak> haven't used ufo myself in a while.

[21:41] *** raiph left
[21:42] <masak> compilation is so fast now.

[21:44] <ugexe> you can still hit the url directly

[21:44] <ugexe> http://feather.perl6.nl:3000/projects.json

[21:44] <timotimo> i can?

[21:49] <arnsholt> masak: Yeah, rebuilding NQP after a year off was a bit of a revelation...

[21:51] *** perltricks left
[21:52] <raydiak> timotimo: no, you couldn't :) but moritz++ fixed it for us, all should work normally again

[21:52] <timotimo> oh

[21:53] <timotimo> it doesn't work for me

[21:53] <ugexe> yeah, i can access it through a browser on my desktop but not on another machine through panda

[21:53] <raydiak> hm...works here, now, even via panda

[21:54] <ugexe> m: IO::Socket::INET.new(:host<feather.perl6.nl>, :port(3000));

[21:54] <camelia> rakudo-moar 62c092: OUTPUT«Failed to connect: connection refused␤  in method initialize at src/gen/m-CORE.setting:22518␤  in method new at src/gen/m-CORE.setting:22502␤  in block <unit> at /tmp/D4WneolcE0:1␤␤»

[21:55] <raydiak> panda also working from my server

[21:56] <timotimo> ah, must be because the browser falls back to ipv4 if it gets a connection refused from the port over v6

[21:56] <raydiak> oh right, the ipv6 thing

[22:00] <ugexe> m: IO::Socket::INET.new(:host<193.200.132.131>, :port(3000));

[22:00] <camelia> rakudo-moar 62c092: OUTPUT«Failed to connect: host is unreachable␤  in method initialize at src/gen/m-CORE.setting:22518␤  in method new at src/gen/m-CORE.setting:22502␤  in block <unit> at /tmp/ksDXWgsvqd:1␤␤»

[22:00] <ugexe> wrong ip

[22:00] <ugexe> m: IO::Socket::INET.new(:host<193.200.132.135>, :port(3000));

[22:00] <camelia> rakudo-moar 62c092: ( no output )

[22:01] <mvuets> hoelzro: o hai! (-:

[22:02] *** lizmat joined
[22:02] *** rurban left
[22:02] *** kurahaupo joined
[22:03] <timotimo> i can't build GTK::Simple any more: No STable at index 47

[22:07] <timotimo> damn, has been broken in the smoke test reports for a while now

[22:08] <timotimo> and on cpandatesters, too :(

[22:08] <masak> 'night, #perl6

[22:08] <timotimo> gnite masak

[22:09] <lizmat> gnight masak 

[22:10] <hoelzro> mvuets: playing with Perl 6?

[22:10] <timotimo> i'm still not satisfied with the performance of my shooter game on top of sdl2 :(

[22:21] <raydiak> timotimo: but this one runs good on my computers :)

[22:21] *** adu left
[22:27] *** [Coke] joined
[22:36] <raydiak> timotimo: of course by "this one" I mean example.pl in SDL2::Raw, which I assume is not the current state of your actual sdl shooter...???...

[22:40] <raydiak> wow...windows on our media box failed updates and miraculously still boots...

[22:43] <mvuets> hoelzro: yes - for the first time since 2009 (-:

[22:45] <mvuets> speaking of which - i want to be helpful. so i tried to install Task::Star and it failed because LWP::Simple tests would not pass

[22:46] <mvuets> the test in question relies on a server script which is gone

[22:47] <mvuets> hence a call returns Nil, and a next call on the returned object, presumably, dies

[22:48] <[Coke]> $ panda install LWP::Simple

[22:48] <[Coke]> Segmentation fault: 11

[22:48] <[Coke]> ... huh

[22:48] * hobbs also wants to be doing something useful for/with perl6

[22:48] <mvuets> not sure, maybe it isn't Nil: No such method 'match' for invocant of type 'Any'

[22:49] <mvuets> so i wanted to fix the test and i wasn't sure how. would very appreciate any input so i could fix it

[22:49] <[Coke]> mvuets: can you open an issue here: https://github.com/cosimo/perl6-lwp-simple/issues ?

[22:49] <arnsholt> With Perl 6 is intrinsically useful for Perl 6, at this stage, IMO

[22:49] <arnsholt> Also, you may very well run into a bug or something that lets you contribute directly as well

[22:49] <bartolin> m: 1, 2 ... 4, 6 ... 8, 10   ## there seems to be something wrong with chained sequence operators

[22:49] <camelia> rakudo-moar 62c092: ( no output )

[22:49] <[Coke]> if you want to supply a fix, I'd fork that repo and issue a pull request when done.

[22:50] <bartolin> m: say 1, 2 ... 4, 6 ... 8, 10   ## there seems to be something wrong with chained sequence operators

[22:50] <camelia> rakudo-moar 62c092: OUTPUT«1 2 3 4 6 8␤»

[22:50] <hobbs> oh hi arnsholt :)

[22:50] <mvuets> [Coke]: that's what i aim for, actually

[22:50] <[Coke]> m: say 1, (2...4), (6...8), 10

[22:50] <camelia> rakudo-moar 62c092: OUTPUT«12 3 46 7 810␤»

[22:50] <mvuets> arnsholt: that's kinda my hope as well (-:

[22:50] <[Coke]> bartolin: I suspect your 8,10 is the RHS of that last seq.

[22:51] <[Coke]> which test is the failing one?

[22:51] <[Coke]> (mv)

[22:51] <mvuets> t/custom-headers-and-content.t

[22:51] <bartolin> [Coke]: mom

[22:52] <[Coke]> mvuets: ok. Step one, ping FROGGS_ to see if he can fix the server.

[22:52] *** telex left
[22:52] <bartolin> [Coke]: actually it's a skipped test in S03-sequence/misc.t

[22:52] <[Coke]> step 2, we shouldn't rely on something outside the ecosystem there.

[22:53] <bartolin> [Coke]: but there also is this example in S03:

[22:53] <FROGGS_> [Coke]: what's up?

[22:53] <bartolin> m: say 1, *+1 ... { $_ == 9 }, 10, *+10  ... { $_ ==  90 }, 100, *+100 ... { $_ == 900 }

[22:53] <camelia> rakudo-moar 62c092: OUTPUT«use of uninitialized value of type Nil in numeric context  in block <unit> at /tmp/Beh76NAMxB:1␤␤1 2 3 4 5 6 7 8 False False False False False False False False False False False False False False False False False False False False False False False F…»

[22:53] <[Coke]> FROGGS_: see https://github.com/cosimo/perl6-lwp-simple/blob/master/t/custom-headers-and-content.t

[22:53] <FROGGS_> ups

[22:53] <[Coke]> it points at a froggs.de URL that is dying.

[22:54] *** telex joined
[22:54] <raydiak> but what about https://github.com/cosimo/perl6-lwp-simple/blob/master/t/custom-headers-and-content.t#L11 >

[22:54] <raydiak> ?

[22:55] <bartolin> m: say 1, 2 ... * > 3, 6

[22:55] <camelia> rakudo-moar 62c092: OUTPUT«1 2 3 4 6␤»

[22:55] <bartolin> m: say 1, 2 ... * > 3, 6 ... 10

[22:55] <camelia> rakudo-moar 62c092: OUTPUT«Too few positionals passed; expected 1 argument but got 0␤  in block <unit> at /tmp/89Sg_IwM_r:1␤␤»

[22:55] <bartolin> m: say 1, 2 ... { $_ > 3 }, 6

[22:55] <camelia> rakudo-moar 62c092: OUTPUT«1 2 3 4 6␤»

[22:55] <bartolin> m: say 1, 2 ... { $_ > 3 }, 6 ... 10

[22:55] <camelia> rakudo-moar 62c092: OUTPUT«use of uninitialized value of type Nil in numeric context  in block <unit> at /tmp/41i58xbXxW:1␤␤1 2 3 False False False False False False False False False False False False False False False False False False False False False False False False False…»

[22:56] <bartolin> I think, I should open a ticket for that ..

[22:56] <FROGGS_> [Coke]: I fixed http://froggs.de/cgi-bin/test/test.cgi

[22:58] <mvuets> FROGGS_++

[22:58] <[Coke]> the skip was there in case the site didn't respond; if it's responding now, it shouldn't skip.

[22:58] <mvuets> you broke my use case q-:

[22:59] <FROGGS_> mvuets: my server had a hardware failure and it got moved... apparently not without a hickup :o)

[23:01] <raydiak> obviously I don't understand the details of testing semantics, but wasn't the skip there so if the server had a hiccup, things *wouldn't* break?

[23:01] <FROGGS_> raydiak: I bet the code just dies before reaching that point

[23:02] <mvuets> where does Test.pm come from?

[23:02] <mvuets> rakudo?

[23:03] <raydiak> FROGGS_: no the weirdest thing is that it's complaining about the call to match on L13 *after* that test should have skipped at L11

[23:04] <FROGGS_> :/

[23:04] <FROGGS_> mvuets: aye

[23:06] <raydiak> FROGGS_: but then it goes on to say 1 passed (0 okay, 1 skipped)...and then at the end it complains 'no plan in tap output blah blah'

[23:06] <raydiak> so color me confused :)

[23:06] <FROGGS_> hehe

[23:06] <FROGGS_> yeah

[23:11] *** colomon joined
[23:13] <hobbs> sounds like: it printed a skip, then it died, and it was a plan-at-the-end TAP document so when the plan didn't come out the whole thing was malformed

[23:14] <hobbs> skipping 1/1 is okay, skipping 1/? is a fail :)

[23:15] <tony-o> timotimo: btyler: got timeout working on http-async, i know timotimo wants 'keep-alive' to work better, btyler anything you're angling for?

[23:15] <tony-o> by work better i mean actually be handled properly

[23:17] * bartolin submitted RT #123329 wrt chained sequence operators

[23:17] * synopsebot Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=123329

[23:18] <mvuets> hobbs: sounds right! that ok() would be indeed skipped if evaluation of one of its arguments didn't die

[23:19] * mvuets just realized Test.pm is a part of language specification - neat!

[23:19] <mvuets> S24 reads: The skip() function is called instead of the some tests (usually because they would die), and emits $count SKIP markers in the TAP output.

[23:25] <mvuets> btw that test still fails, but due to some other reason now.

[23:26] *** Isp-sec left
[23:26] <mvuets> http://paste.scsys.co.uk/448715 does it look very lame?

[23:29] <raydiak> mvuets: looks great, and now I understand why I was confused too :)

[23:30] *** prime left
[23:31] <dalek> rakudo/newio: e84fb7e | (Elizabeth Mattijsen)++ | src/core/IO.pm:

[23:31] <dalek> rakudo/newio: Fix CHANGE-DIR (don't make an IO::Path)

[23:31] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/e84fb7e37b

[23:31] <dalek> rakudo/newio: 7ed1673 | (Elizabeth Mattijsen)++ | src/core/IOU.pm:

[23:31] <dalek> rakudo/newio: Some whitespace fixes

[23:31] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/7ed16731ee

[23:31] <dalek> rakudo/newio: 4697967 | (Elizabeth Mattijsen)++ | src/core/io_operators.pm:

[23:31] <dalek> rakudo/newio: Make use of primitives without IO::Path

[23:31] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/46979672d1

[23:33] <lizmat> and on that thought, I'm calling it a night

[23:33] *** lizmat left
[23:34] <Juerd> -

[23:34] <Juerd> s/-//

[23:35] <raydiak> FROGGS_: that test.cgi just seems to print out a few env vars from the server...is supposed to be a json-rpc service providing an 'echo' method

[23:36] <FROGGS_> hmmm

[23:40] <FROGGS_> raydiak: can you test it now?

[23:41] <mvuets> i have a trivial patch (single char typo) for perl6/specs. how do i send it? what's the preferred way?

[23:41] <raydiak> FROGGS_: works like a charm :)

[23:41] <FROGGS_> raydiak: \o/

[23:41] <mvuets> FROGGS_: works here too!

[23:41] <FROGGS_> mvuets: a pull request

[23:41] <mvuets> ok

[23:43] *** spider-mario left
[23:53] *** rmgk_ joined
[23:53] *** rmgk is now known as Guest25135

[23:53] *** rmgk_ is now known as rmgk

[23:54] *** Guest25135 left
[23:56] *** cognominal left
[23:57] <raydiak> mvuets++: feel free to submit a PR for your LWP::Simple patch as well

[23:59] <mvuets> raydiak: will do with pleasure after some rest - i am used to make stupid commits when sleepy

