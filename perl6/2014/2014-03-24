[00:00] *** eternaleye left
[00:00] <tadzik> :)

[00:00] <tadzik> maybe I should add a tl;dr at the top

[00:00] <tadzik> I wrote a lot of boring stuff in there too, some people may just give up

[00:01] <tadzik> but then again, those people probably won't have the patience to write a game either :P

[00:01] <timotimo> aye

[00:01] <timotimo> games are hard

[00:01] <tadzik> I played the most hilarous board game today

[00:01] <tadzik> I wonder if it's in english too, so I can show you

[00:02] <tadzik> http://boardgamegeek.com/boardgame/71021/evolution-the-origin-of-species this

[00:02] <ssutch_> i've wanted to make games my whole life, but have been too busy paying the bills and spending my ambition elsewhere

[00:03] <timotimo> not enough ambition spent on Perl 6 recently :P

[00:03] <ssutch_> timotimo: agreed

[00:04] <ssutch_> i am inspired by games like thomas was alone

[00:04] <timotimo> that's a beautiful game

[00:04] <tadzik> it's pretty fun

[00:04] <timotimo> that's the kind of game you can't just hack up in your garage, though

[00:04] <timotimo> you need a professional voice actor with such a surly voice

[00:05] <ssutch_> true

[00:05] *** eternaleye joined
[00:06] <timotimo> though i've been told time and time again i have a nice voice

[00:10] *** rindolf left
[00:14] *** Sqirrel left
[00:14] *** Sqirrel joined
[00:18] *** Sqirrel left
[00:20] *** kivutar left
[00:25] *** kivutar joined
[00:36] *** Sqirrel joined
[00:40] *** Sqirrel left
[00:41] *** Sqirrel joined
[00:46] *** kivutar left
[00:57] *** thou left
[01:01] *** Sqirrel left
[01:02] *** Sqirrel joined
[01:08] *** dayangkun joined
[01:16] *** Sqirrel left
[01:17] *** Sqirrel joined
[01:51] *** Sqirrel left
[01:52] *** Sqirrel joined
[01:57] *** Sqirrel left
[02:08] *** xenoterracide left
[02:11] <JimmyZ> .tell tadzik I updated lastest MoarVM and still got segfault

[02:11] <yoleaux> JimmyZ: I'll pass your message to tadzik.

[02:14] *** Sqirrel joined
[02:14] <BenGoldberg> p: sub infix:<oof> is assoc('list') { $^a + $^b }; say [Roof] 1..4

[02:14] <camelia> rakudo-parrot ffa572: OUTPUT«Too many positional parameters passed; got 4 but expected 2␤  in block  at gen/parrot/CORE.setting:17009␤  in sub  at gen/parrot/CORE.setting:17151␤  in block  at /tmp/NarMS2B2c_:1␤␤»

[02:16] <BenGoldberg> std: for ( 1 .. 2 ) { (state $) ^= 42 }

[02:16] <camelia> std 09dda5b: OUTPUT«ok 00:01 128m␤»

[02:16] <BenGoldberg> p: for ( 1 .. 2 ) { (state $) ^= 42 }

[02:16] <camelia> rakudo-parrot ffa572: OUTPUT«===SORRY!=== Error while compiling /tmp/658dH691Kb␤Unsupported use of $) variable; in Perl 6 please use $*EGID␤at /tmp/658dH691Kb:1␤------> for ( 1 .. 2 ) { (state $)⏏ ^= 42 }␤»

[02:20] <BenGoldberg> p6: my $y; for ( 1 .. 2 ) { $y := (state $ ) ^= 42 }; 0;

[02:20] <camelia> rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572, niecza v24-109-g48a8de3: ( no output )

[02:20] <BenGoldberg> p6: my $y; for ( 1 .. 2 ) { $y := (state $ ) ^= 42 }; print 'alive';

[02:20] <camelia> rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572, niecza v24-109-g48a8de3: OUTPUT«alive»

[02:20] <BenGoldberg> p6: my $y; for ( 1 .. 2 ) { $y := (state $ ) ^= 42 }; print $y;

[02:20] <camelia> niecza v24-109-g48a8de3: OUTPUT«(timeout)»

[02:20] <camelia> ..rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572: OUTPUT«one(one(one(), 42), 42)»

[02:21] <BenGoldberg> p6: my $y; for ( 1 .. 2 ) { $y := (state $ ) ^= 42 }; print so $y;

[02:21] <camelia> niecza v24-109-g48a8de3: OUTPUT«Stack overflow: IP: 0x50322a, fault addr: (nil)␤Stacktrace:␤  at Niecza.Kernel.UnboxAny<T> (Niecza.P6any) <0x0002b>␤  <...>␤  at Niecza.CtxJunctionBool.Get (Niecza.Variable) <0x00117>␤  at Niecza.CtxJunctionBool.Get (Niecza.Variable) <0x0025…»

[02:21] <camelia> ..rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572: OUTPUT«False»

[02:23] *** Sqirrel left
[02:25] *** xragnar_ joined
[02:25] *** xragnar is now known as Guest45972

[02:25] *** Guest45972 left
[02:25] *** xragnar_ is now known as xragnar

[02:40] *** woosley joined
[02:45] *** Sqirrel joined
[02:46] *** klapperl left
[02:48] *** klapperl joined
[02:50] *** Sqirrel left
[02:50] *** FROGGS left
[02:50] *** Sqirrel joined
[02:54] *** hoverboard joined
[03:00] *** Sqirrel left
[03:02] *** Sqirrel joined
[03:03] *** FROGGS joined
[03:10] *** Sqirrel left
[03:13] *** Sqirrel joined
[03:14] *** xenoterracide joined
[03:20] *** Sqirrel left
[03:21] *** Sqirrel joined
[03:58] *** ssutch_ left
[04:00] *** Sqirrel left
[04:02] *** Sqirrel joined
[04:07] *** logie_ left
[04:11] *** Sqirrel left
[04:13] *** Sqirrel joined
[04:15] <dalek> roast: feff03c | (David Warring [email@hidden.address] | integration/advent2013-day12.t:

[04:15] <dalek> roast: adding advent 2013 day 12

[04:15] <dalek> roast: review: https://github.com/perl6/roast/commit/feff03c0b8

[04:17] *** Sqirrel left
[04:31] *** BenGoldberg left
[04:32] *** logie_ joined
[04:34] *** Sqirrel joined
[04:40] *** rurban1 left
[04:59] *** ssutch_ joined
[05:00] *** kaare_ joined
[05:04] *** ssutch_ left
[05:10] *** rurban1 joined
[05:12] *** rurban2 joined
[05:15] *** rurban1 left
[05:16] *** rurban2 left
[05:18] *** araujo left
[05:24] *** bjz left
[05:24] *** bjz joined
[05:26] *** xenoterracide left
[05:29] *** hoverboard left
[05:38] *** Sqirrel left
[05:39] *** Sqirrel joined
[05:53] *** Sqirrel left
[05:54] *** Sqirrel_ joined
[05:54] *** logie_ left
[06:02] *** dayangkun left
[06:04] *** kaare_ left
[06:19] *** darutoko joined
[06:30] *** kaare_ joined
[06:33] *** kaleem joined
[06:39] *** [Sno] joined
[06:48] *** kurahaupo joined
[06:49] *** ssutch_ joined
[06:49] *** dayangkun joined
[06:53] *** ssutch_ left
[06:57] *** lustlife joined
[06:57] *** lustlife left
[07:05] *** kurahaupo left
[07:05] *** yakudza joined
[07:13] *** rurban1 joined
[07:16] *** brrt joined
[07:18] *** bjz_ joined
[07:18] *** rurban1 left
[07:18] *** xragnar_ joined
[07:18] *** xragnar left
[07:18] *** xragnar_ is now known as xragnar

[07:19] *** telex left
[07:19] *** telex joined
[07:19] *** hugme left
[07:19] *** dmol joined
[07:19] *** klapperl left
[07:19] *** sjn left
[07:19] *** dayangkun left
[07:19] *** dayangkun_ joined
[07:19] *** yves__ left
[07:19] *** yves__ joined
[07:20] *** klapperl joined
[07:20] *** sjn joined
[07:21] *** bjz left
[07:25] *** woosley left
[07:27] *** lustlife joined
[07:27] *** woosley joined
[07:34] *** ribasushi joined
[07:36] *** hugme joined
[07:36] *** ChanServ sets mode: +v hugme

[07:39] *** bjz_ left
[07:44] *** bjz joined
[07:48] <masak> mornin, #perl6

[07:50] *** ssutch_ joined
[07:50] <brrt> hi masak

[07:55] *** ssutch_ left
[08:09] *** zakharyas joined
[08:14] <nwc10> good *, #perl6

[08:14] *** rurban1 joined
[08:19] *** rurban1 left
[08:36] *** pdcawley joined
[08:37] *** rindolf joined
[08:37] <FROGGS> moin

[08:40] *** fhelmberger joined
[08:43] <sergot_> morning

[08:43] *** sergot_ is now known as sergot

[08:45] <sergot> o/

[08:48] <FROGGS> hi sergot 

[08:49] <cosimo> simula67: i'll take a look, thanks

[08:49] <cosimo> (it's been ages since I last touched perl6 code, unfortunately)

[08:50] *** ssutch_ joined
[08:52] *** terrencehan joined
[08:52] *** pecastro_ left
[08:53] <JimmyZ> jimmy@jimmy-virtual-machine ~/panda $ ../MoarVM/install/bin/perl6-m bootstrap.pl 

[08:53] <JimmyZ> ==> Bootstrapping Panda

[08:53] <JimmyZ> /bin/sh: 1: perl6-m: not found

[08:53] <JimmyZ> ==> Please make sure that /home/jimmy/MoarVM/install/languages/perl6/site/bin is in your PATH

[08:53] <JimmyZ> jimmy@jimmy-virtual-machine ~/panda $ ls ../MoarVM/install/languages/perl6/site/

[08:53] <JimmyZ> panda

[08:54] <JimmyZ> .tell tadzik ^^

[08:54] <yoleaux> JimmyZ: I'll pass your message to tadzik.

[08:54] *** ssutch_ left
[08:56] <FROGGS> ohh

[08:57] *** rindolf left
[08:58] *** toebu left
[09:08] *** darutoko left
[09:13] *** aborazmeh joined
[09:15] *** rurban1 joined
[09:17] *** rurban2 joined
[09:19] *** rindolf joined
[09:20] *** rurban1 left
[09:21] *** rurban2 left
[09:26] *** kurahaupo joined
[09:33] *** darutoko joined
[09:35] *** Ven joined
[09:38] *** Alina-malina left
[09:47] <tadzik> oh

[09:47] <yoleaux> 02:11Z <JimmyZ> tadzik: I updated lastest MoarVM and still got segfault

[09:47] <yoleaux> 08:54Z <JimmyZ> tadzik: ^^

[09:47] <tadzik> should be an easy-ish fix, I'll open myself a bug

[09:47] <tadzik> JimmyZ++

[09:48] <JimmyZ> tadzik: one is about the game,  another one is about panda :P

[09:48] <tadzik> JimmyZ: well, I can't reproduce the one with the game

[09:48] <tadzik> JimmyZ: can you get a backtrace maybe?

[09:51] *** ssutch_ joined
[09:56] *** ssutch_ left
[10:00] *** Mouq left
[10:01] <JimmyZ> tadzik: I don't get it yet, maybe tomorrow

[10:02] *** Alina-malina joined
[10:03] *** aborazmeh left
[10:05] *** iolympian joined
[10:05] *** aborazmeh joined
[10:06] <FROGGS> hmmm, I think for modules with backend specific code it would be handy to have pragma "if"

[10:09] <colomon> +1

[10:12] <FROGGS> the Perl 5 version is just about a few lines, and I guess it could be the same for Perl 5

[10:12] <FROGGS> err, s/5$/6/

[10:13] *** pecastro joined
[10:17] <colomon> r: say $*VM

[10:17] <camelia> rakudo-jvm ffa572: OUTPUT«("name" => "jvm", "config" => {"runtime.jars" => "/home/p6eval/rakudo-inst-2/languages/nqp/runtime/asm-4.1.jar:/home/p6eval/rakudo-inst-2/languages/nqp/runtime/asm-tree-4.1.jar:/home/p6eval/rakudo-inst-2/languages/nqp/runtime/jline-1.0.jar:/home/p6eval/raku…»

[10:17] <camelia> ..rakudo-parrot ffa572: OUTPUT«("name" => "parrot", "config" => {"git_describe" => "RELEASE_6_1_0", "sha1" => "23928872782b93dff5b0a62749442cdb3c2fed81", "a" => ".a", "ar" => "ar", "ar_extra" => "", "ar_out" => "", "archname" => "x86_64-linux-gnu-thread-multi", "arflags" => "cr", "as"…»

[10:17] <camelia> ..rakudo-moar ffa572: OUTPUT«("name" => "moar", "config" => {"ccoptiflags" => "-O1 -DNDEBUG", "uvrule" => "\$(AR) \$(ARFLAGS) \$\@ \$(UV_LINUX)", "tomobjects" => "3rdparty/libtommath/bn_error.o 3rdparty/libtommath/bn_fast_mp_invmod.o 3rdparty/libtommath/bn_fast_mp_montgomery_reduce.o …»

[10:17] *** rurban1 joined
[10:18] <colomon> … I guess that might be enough for most of the things I was thinking of.

[10:21] *** salv0 left
[10:22] *** rurban1 left
[10:23] *** salv0 joined
[10:25] *** dayangkun_ left
[10:25] *** rindolf left
[10:36] *** Alula left
[10:37] *** Alula joined
[10:40] <colomon> m: say "," x 4

[10:40] <camelia> rakudo-moar ffa572: OUTPUT«,,,,␤»

[10:45] *** mls_ is now known as mls

[10:52] *** ssutch_ joined
[10:53] *** woosley left
[10:55] *** rindolf joined
[10:56] *** ssutch_ left
[11:02] *** SamuraiJack_ joined
[11:03] *** salv0 left
[11:11] *** terrencehan left
[11:13] *** Ven left
[11:18] *** salv0 joined
[11:18] <colomon> m: say "+1".Int

[11:18] <camelia> rakudo-moar ffa572: OUTPUT«1␤»

[11:18] *** rurban1 joined
[11:23] *** rurban1 left
[11:35] <lizmat> r: say $*VM<name>

[11:35] <camelia> rakudo-moar ffa572: OUTPUT«moar␤»

[11:35] <camelia> ..rakudo-jvm ffa572: OUTPUT«jvm␤»

[11:35] <camelia> ..rakudo-parrot ffa572: OUTPUT«parrot␤»

[11:36] <lizmat> r: say $*VM.WHAT

[11:36] <camelia> rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572: OUTPUT«(Hash)␤»

[11:36] * lizmat wonders whether that shouldn't be encapsulated in some object

[11:36] *** brrt left
[11:38] *** bash_ joined
[11:41] *** dmol left
[11:43] *** bash_ left
[11:47] *** colomon left
[11:53] *** ssutch_ joined
[11:55] <FROGGS> lizmat: in case it will offer more than name=>value pairs or lists, yes

[11:56] <FROGGS> but until then a hash is all we need

[11:56] *** woolfy1 joined
[11:56] *** woolfy left
[11:56] *** skids left
[11:57] <lizmat> as long as the object supports postcircumfix {}, I guess

[11:57] <lizmat> otoh, I'm reminded ot how DBI's tied hashes exploded  :-(

[11:57] *** ssutch_ left
[11:58] <timotimo> today is the last chance to get some exciting things into the weekly :P

[11:58] <FROGGS> hehe

[11:58] <timotimo> well, at least this week's weekly

[11:58] <FROGGS> timotimo: I am busy writing slides, so do not expect anything from me :o)

[11:58] * lizmat is also busy writing slides

[11:59] <timotimo> slides are good, too

[11:59] <FROGGS> I only have done like 33% :/

[11:59] <timotimo> i don't even have any slides :(

[11:59] * lizmat has some more time available then FROGGS, as she only has to present hers on Mon 31 March

[12:00] <FROGGS> I have to give the talks in about 45 hours

[12:02] <timotimo> and i'll be attending :P

[12:03] <lizmat> as will I  :-)

[12:03] <FROGGS> *g*

[12:03] <timotimo> good timesn

[12:03] <timotimo> er.

[12:03] <lizmat> unfortunately, I won't be able to attend all of GPW

[12:03] <FROGGS> yeah, I will attend all of it this year it seems

[12:03] <lizmat> I have some other sad obligations to fulfill on late Thursday / Friday

[12:04] <FROGGS> yeah :(

[12:10] *** aborazmeh left
[12:10] <lizmat> has jnthn merged the concurrency branch into nom already ?

[12:11] <FROGGS> no, I've not seen it

[12:13] <timotimo> he has not

[12:13] <FROGGS> yeah, rakudo's moar-conc is 28 commits ahead

[12:13] <timotimo> there's still a nasty concurrent GC bug where "work" gets lost

[12:13] <timotimo> which, in my imagination, would lead to a bunch of objects getting removed, because they were not scanned

[12:14] <timotimo> it doesn't happen very often, aiui

[12:14] <timotimo> i think something like perf ought to help debug something like that, fwiw

[12:14] *** iolympian left
[12:14] <timotimo> perf can record and replay the scheduling decisions made for a given thread or the whole system

[12:14] <timotimo> so you can turn a nondeterministic bug that depends on exact scheduling into a 100% reproducible test case that you can debug over and over again

[12:14] <timotimo> i don't know the details, though

[12:15] *** pecastro left
[12:15] <timotimo> http://lwn.net/Articles/353295/

[12:16] <timotimo> it may not be exactly what i was advertising after all

[12:16] <timotimo> "using simulated threads"

[12:17] <timotimo> however, this was 2009

[12:17] <timotimo> maybe it has advanced significantly since then

[12:18] <timotimo> i've got a friend who may know about it; not sure if he's AFK at the moment or not

[12:19] *** rurban1 joined
[12:24] *** rurban1 left
[12:31] *** colomon joined
[12:40] <[Coke]>  feather1 is at 90% of disk usage.

[12:40] *** kbaker joined
[12:42] <timotimo> the alot of disk usage

[12:43] <[Coke]> tried to run throughthewindows with a just-built rakudo-moar. installed rakudo-moar... get the error "Could not find NativeCall"....

[12:43] <colomon> TimToady: .Hash is supposed to coerce to Hash, right?  instead of .hash?

[12:44] <colomon> [Coke]: right, I installed panda and used that to install NativeCall.  and it all worked!

[12:45] *** colomon left
[12:50] <lizmat> colomon: rakudo only has .hash at the moment, not .Hash

[12:51] *** dayangkun joined
[12:54] *** ssutch_ joined
[12:54] <lizmat> it has .Array though

[12:55] <lizmat> I'm not sure what the reasoning for having .hash and not .Hash is / has been

[12:55] <FROGGS> is .Array the same as .list?

[12:55] <lizmat> r: say 1.Array.WHAT

[12:55] <camelia> rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572: OUTPUT«(Array)␤»

[12:55] <lizmat> r: say 1.list.WHAT

[12:55] <camelia> rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572: OUTPUT«(List)␤»

[12:55] <FROGGS> how obvious *g*

[12:56] <lizmat> Array makes an Array, list makes a List

[12:56] <lizmat> r: say 1.List.WHAT

[12:56] <camelia> rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572: OUTPUT«No such method 'List' for invocant of type 'Int'␤  in block  at /tmp/tmpfile:1␤␤»

[12:56] *** iolympian joined
[12:58] *** iolympian left
[12:58] *** ssutch_ left
[13:00] *** pecastro joined
[13:01] *** denisboyun joined
[13:03] *** guru joined
[13:03] *** guru is now known as Guest30489

[13:03] *** Guest30489 is now known as ajr_

[13:06] *** [Sno] left
[13:06] <[Coke]> colomon: oh, whoops, I had assumed it was bundled for some reason that eludes me.

[13:08] *** SamuraiJack_ left
[13:08] <[Coke]> is panda smart enough at this point to deal with multiple installed backends?

[13:09] <lizmat> good question: I assume, like with perl 5, it is the executor running panda that determines what the version / backend is

[13:09] <[Coke]> lizmat: that would make sense. Danke.

[13:10] *** iolympian joined
[13:12] *** colomon joined
[13:12] <[Coke]> Building panda (Warning: this may take a while)

[13:17] *** iolympian left
[13:18] *** skids joined
[13:20] *** rurban1 joined
[13:24] *** rurban1 left
[13:25] *** [Sno] joined
[13:26] <[Coke]> looks like panda installs a single binary, so I'm not sure it will work if you run it with multiple rakudos.

[13:26] <[Coke]> (old panda used to end up in parrot/PARROT_REV, current panda seems more global)

[13:27] <[Coke]> nativecall warning on a lot of tests: t/03-simple-returns.t .. /bin/sh: PREFIX: command not found

[13:29] *** kivutar joined
[13:29] <[Coke]> ah well. got as far as it complaining about not being able to open ./sdlwrapperlib.dylib - can't install libsdl via ports on this mac for some reason.

[13:30] *** simcop2387 joined
[13:32] <[Coke]> (tried installing SDL via libsdl.org, still can't find SDL.h

[13:34] * [Coke] gives up for now.

[13:34] *** lustlife left
[13:35] *** lustlife joined
[13:40] *** lustlife left
[13:41] *** molaf joined
[13:43] *** kaleem left
[13:51] *** salv0 left
[13:52] *** lustlife joined
[13:53] * jnthn waves from Vienna airport, which not only has free wifi, but also a place to sit comfortably with a laptop and plug it in!

[13:53] <jnthn> Dammit, why can't Copenhagen learn from this.

[13:54] * [Coke] wonders if he can get someone in NY to hire jnthn so he can complain about the local airport!

[13:54] *** ssutch_ joined
[13:58] <jnthn> Convincing me to take a job outside Europe would be quite a challenge. :)

[13:59] *** ssutch_ left
[14:03] <jnthn> timotimo: It's a parallel GC bug, not a concurrent one. We don't have a concurrent GC. Thank heavens... :)

[14:04] *** btyler joined
[14:05] <lizmat> jnthn: even if they would have decent beer ?

[14:05] <moritz> wouldn't it be awesoem to have the GC run in a separate thread? :-)

[14:06] *** rurban1 joined
[14:06] <timotimo> oh i meant that

[14:06] *** salv0 joined
[14:08] * [Coke] is reminded, he discovered a pretty good (to him) porter this weekend... which his wife liked, so he swapped with her. Coke needs to go back and get more of that porter. :)

[14:08] *** bluescreen10 joined
[14:09] *** logie_ joined
[14:09] * lizmat assumes porter is a beer ?  and not a person porting code ?

[14:10] <jnthn> moritz: Depends.

[14:10] <moritz> or maybe even in several separate threads

[14:10] <jnthn> moritz: For interactive applications, yes, as you can get pause times really low

[14:10] <jnthn> moritz: For non-interactive/server ones, not really, as you have lower throughput typically than stop-the-world.

[14:13] *** zakharyas left
[14:14] <jnthn> lizmat: Yes, a porter is a kind of dark beer.

[14:14] <jnthn> lizmat: Beer is only *one* factor :P

[14:15] *** thou joined
[14:18] *** jnap joined
[14:18] <nwc10> jnthn: just curious - what's your external IP?

[14:18] <nwc10> eg from http://www.whatismyip.com/

[14:19] <nwc10> hunting IP addresses for test purposes :-)

[14:20] <lizmat> nwc10: 80.100.131.131  but the site got the location all wrong  :-)

[14:20] <jnthn> nwc10: 193.43.158.234

[14:21] <nwc10> thanks

[14:21] * jnthn waits to get packeted...

[14:21] <jnthn> :P

[14:21] *** FROGGS left
[14:23] <timotimo> how long until the daily roast, [Coke]?

[14:24] <nwc10> jnthn: awesome. It actually is useful. It doesn't have a City associated with it in our lookup system

[14:24] <nwc10> I didn't expect life to be that easy :-)

[14:25] *** salv0 left
[14:26] *** zakharyas joined
[14:34] *** kaare_ left
[14:36] *** zakharyas left
[14:37] *** FROGGS joined
[14:42] *** jnap left
[14:44] *** salv0 joined
[14:44] <dalek> rakudo-star-daily: e71320b | coke++ | log/ (5 files):

[14:44] <dalek> rakudo-star-daily: today (automated commit)

[14:44] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/e71320b663

[14:44] <dalek> rakudo-star-daily: 830ca37 | coke++ | log/ (5 files):

[14:44] <dalek> rakudo-star-daily: today (automated commit)

[14:44] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/830ca3785b

[14:44] <dalek> perl6-roast-data: 45b19fa | coke++ | perl6_pass_rates.csv:

[14:44] <dalek> perl6-roast-data: today (automated commit)

[14:44] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/45b19fa0fa

[14:44] <[Coke]> timotimo: there's yesterday's.

[14:44] <timotimo> thanks :)

[14:45] <[Coke]> today's is up to S05 on the jvm, which is the last impl to run.

[14:45] <timotimo> oke :)

[14:46] <[Coke]> want them faster? I need to setup the JVM to run tests through the eval server again. (and hopefully it will JustWork™)

[14:47] <timotimo> nah, i don't need them that bad

[14:47] <timotimo> i'll just procrastinate writing the p6weekly post some more :)

[14:47] <timotimo> i'd love for the number of failing tests to go down on moar :\

[14:48] <jnthn> Well, the PR I just merged claims to get rid of a few more.

[14:48] <timotimo> the ones in ord_and_chr i suppose?

[14:49] <[Coke]> jnthn: when did it merge?

[14:49] <timotimo> hmm, quite a few exceptions failures

[14:49] <timotimo> [Coke]: 5 minutes ago

[14:49] <[Coke]> here's today's moar run: "total",     29203,    50,   579,  1326, 31158, 28960

[14:49] <FROGGS> still 50 :/

[14:50] <[Coke]> so, tomorrow, then.

[14:50] <timotimo> yeah

[14:50] <jnthn> [Coke]: like 2 minutes ago :)

[14:50] <jnthn> timotimo: yes

[14:50] <timotimo> jnthn: have you looked at that already?

[14:50] <jnthn> timotimo: the exceptions ones are mostly NYIs

[14:50] <lizmat> don't we need a version bump to see those changes ?

[14:50] <jnthn> timotimo: Looked at what?

[14:50] <timotimo> lizmat: doesn't coke run against master?

[14:50] <timotimo> jnthn: the exception failures

[14:50] <timotimo> probably just a case of creating a type dexception instead of mvm_exception_throw_adhoc

[14:50] <jnthn> timotimo: No, but as I said, they're just places where we didn't write the code to throw a typed exception yet.

[14:50] *** zakharyas joined
[14:51] <lizmat> timotimo: I have no idea

[14:51] <timotimo> should be an easy thing to do for me right now :)

[14:51] <timotimo> should be lots of stealable code nearby

[14:51] *** jnap joined
[14:51] <FROGGS> [Coke]++ is smoking rakudo HEAD and the specified versions of nqp/moar/parrot

[14:52] <jnthn> timotimo: yes, shouldn't be hard.

[14:52] <[Coke]> timotimo: not explicitly, but I do run with a fresh nqp checkout that is pre-fetched, so we should get it implicitly.

[14:52] <[Coke]> ... or froggs could be right. :)

[14:53] <[Coke]> I think FROGGS is right - not explicit, so get the last specified version.

[14:53] <[Coke]> e.g. rakudo.moar's nqp is: 21a89d7

[14:53] <FROGGS> https://github.com/coke/perl6-roast-data/blob/master/bin/rakudo.moar.sh

[14:53] <[Coke]> (which is 2014.03). FROGGS++ for remembering what I did better than I did. :)

[14:53] <FROGGS> *g*

[14:54] <timotimo> [Coke]: sounds good; but i suppose we still need to bump moar then :)

[14:54] <[Coke]> timotimo: aye.

[14:54] <[Coke]> (this is as oppposed to the rakudo-star-daily one, which gets master for everything but parrot, IIRC.)

[14:55] *** ssutch_ joined
[14:57] *** kurahaupo left
[14:57] <timotimo> jnthn: where should i look to find how to throw a typed exception properly from inside the perl6_ops.c?

[14:57] <timotimo> would that be get_thrower?

[14:58] <jnthn> get_thrower, yeah.

[15:00] *** ssutch_ left
[15:00] * [Coke] gets a headhunter bite off of -parrot-

[15:00] <[Coke]> weird.

[15:02] * jnthn wonders if that's the same headhunter bite he got off MoarVM/Rakudo today :)

[15:03] *** kst joined
[15:05] *** hoelzro_ is now known as hoelzro

[15:06] <hoelzro> morning #perl6!

[15:06] <FROGGS> hi hoelzro 

[15:06] *** araujo joined
[15:06] <hoelzro> timotimo: I haven't had a chance to look at it yet (still waiting on internet at home =/), but I should get a chance soon

[15:06] <hoelzro> ahoy FROGGS 

[15:07] <timotimo> which "it" is that exactly?

[15:09] <hoelzro> timotimo: the kate syntax file

[15:09] <timotimo> oh

[15:09] <hoelzro> you messaged me on like Saturday =)

[15:09] <timotimo> i see :)

[15:09] <timotimo> why would you have to wait for internets at home? :P

[15:09] <timotimo> isn't that the right exercise to do when you're out of internets?

[15:09] <hoelzro> heh

[15:09] <hoelzro> well, I need to install things at home to be able to work on the syntax stuff )

[15:10] <hoelzro> also, no internet time is usually good for getting misc. housework done

[15:10] <hoelzro> since I have nothing better to do

[15:11] <timotimo> OK :)

[15:15] *** xenoterracide joined
[15:17] <timotimo> didn't someone fix the bug with pack "mA"?

[15:18] <timotimo> or rather, the test?

[15:18] <FROGGS> timotimo: me

[15:18] <FROGGS> it was "mÄ"

[15:19] <timotimo> i forgot to re-fudge :)

[15:19] <FROGGS> ahh

[15:19] <FROGGS> :o)

[15:21] <colomon> what's the current status of web frameworks on rakudo?

[15:22] *** ajr_ left
[15:24] <lizmat> what do you mean with web framework?  Plack? Dancer? Catalyst?

[15:25] <colomon> Dancer or Catalyst, that sort of thing

[15:25] <colomon> Bailador.

[15:25] <colomon> but I don't know if it's up-to-date?

[15:25] <colomon> it is passing all tests.

[15:26] <lizmat> then it is up to date to some extent, I would guess  :-)

[15:26] <colomon> lizmat: that might mean it doesn't actually have any tests.  ;0

[15:26] <colomon> ;)

[15:27] <lizmat> ah, eh, hmmmm

[15:27] *** jnap1 joined
[15:28] *** Sqirrel_ left
[15:28] *** jnap left
[15:30] *** guru joined
[15:30] *** guru is now known as Guest53214

[15:31] *** Sqirrel joined
[15:32] *** kaleem joined
[15:33] *** cognominal left
[15:33] *** cognominal joined
[15:35] <timotimo> hmm. i'm changing a wrong exception type to an X::AdHoc with the right message

[15:35] <timotimo> is that an improvement? :P

[15:35] <jnthn> No, that happens automagically, I think... :)

[15:39] <timotimo> jnthn: how will we teach the binder on moar to do typed exceptions? currently we have the $error[0] = "a string message" "solution". can we just put a typed exception into that instead of a string?

[15:39] <tadzik> Bailador has some tests :)

[15:39] <tadzik> that means it's working to at least some extent

[15:39] <colomon> tadzik: Just installed it using panda

[15:39] <jnthn> timotimo: We could if we teach the thing that consumes it whant to do, yes

[15:40] <tadzik> nice

[15:40] <timotimo> sounds easy enough. i'd like to do it if you'll accept that code :)

[15:40] <jnthn> have a crack at it.

[15:41] *** [Sno] left
[15:43] <jnthn> flight &

[15:44] <timotimo> well, it looks like it just calls nqp::die($error[0])

[15:44] <timotimo> i'm not sure i'll even have to teach it about typed exceptions especially

[15:45] <timotimo> r: try nqp::die(X::Item.new(aggregate => "cow", index => 1)); say $!.WHAT; say $!;

[15:45] <camelia> rakudo-moar ffa572: OUTPUT«(X::AdHoc)␤This type cannot unbox to a native string␤  in block  at /tmp/tmpfile:1␤␤»

[15:45] <camelia> ..rakudo-parrot ffa572: OUTPUT«(X::AdHoc)␤Cannot index Str with 1␤  in block  at /tmp/tmpfile:1␤␤»

[15:45] <camelia> ..rakudo-jvm ffa572: OUTPUT«(X::AdHoc)␤This representation can not unbox to a native str␤  in block  at /tmp/tmpfile:1␤␤»

[15:45] <timotimo> oh, i was wrong.

[15:45] <timotimo> r: try nqp::throw(X::Item.new(aggregate => "cow", index => 1)); say $!.WHAT; say $!;

[15:45] <camelia> rakudo-parrot ffa572: OUTPUT«(X::AdHoc)␤Not a throwable object␤  in block  at /tmp/tmpfile:1␤␤»

[15:45] <camelia> ..rakudo-moar ffa572: OUTPUT«(X::AdHoc)␤Can only throw an exception object␤  in block  at /tmp/tmpfile:1␤␤»

[15:45] <camelia> ..rakudo-jvm ffa572: OUTPUT«(X::AdHoc)␤throw needs an object with VMException representation␤  in block  at /tmp/tmpfile:1␤␤»

[15:45] <timotimo> okay, that's much more low-level

[15:45] <timotimo> but i suppose i can just create the object and .throw it

[15:46] <timotimo> hm, though, being in the BOOTSTRAP.nqp, i'll probably have to have some magic to look up the actual classes

[15:46] *** kivutar left
[15:47] *** kaare_ joined
[15:56] *** ssutch_ joined
[15:57] *** sqirrel_ joined
[16:00] *** ssutch_ left
[16:00] <colomon> Bailador working on my Mac, tadzik++

[16:02] <tadzik> nice!

[16:06] <timotimo> but can it do websockets?

[16:06] <tadzik> nope

[16:06] <tadzik> well volunteered! P:

[16:06] <timotimo> i don't even know how that works.

[16:07] <PerlJam> sri does  ;>

[16:07] <PerlJam> (or just copy what mojo does)

[16:08] <tadzik> I think it's an upgrade from regular sockets

[16:08] <btyler> tadzik: I grabbed ThroughTheWindow on my mac, it worked without anything special. runs very smooth (or did for about 1009 pixels :)

[16:08] <tadzik> so, a layer over (under?)

[16:08] <tadzik> btyler: awesome, thanks :)

[16:08] <tadzik> btyler: did you like it?

[16:08] <btyler> its a lovely little game. I certainly did that as a kid in the car

[16:09] *** fhelmberger left
[16:12] <hoelzro> tadzik++

[16:13] *** denisboyun left
[16:17] <tadzik> glad to hear that :)

[16:17] *** kaleem left
[16:23] *** dmol joined
[16:28] * lizmat wonders whether "coccoon" is just the American spelling of "cocoon"

[16:28] <lizmat> or do I miss some other joke with "coccoon" ?

[16:28] *** Sqirrel left
[16:28] <hoelzro> lizmat: doesn't look familiar to me =/

[16:29] <lizmat> so, just a misspelling, right?

[16:29] <hoelzro> probably

[16:30] <lizmat> thanks, was afraid I missed some pop culture reference

[16:30] <lizmat> but even the movie is spelled "Cocoon"

[16:30] <tadzik> Racoon

[16:30] <geekosaur> just one of those words that gets misspelled a lot

[16:32] *** Sqirrel joined
[16:34] * colomon tends to get confused about which letters are doubled and which are not in words like that.

[16:34] <geekosaur> you just gotta remember it, there's no actual rules :/

[16:34] <geekosaur> english are weird

[16:34] <geekosaur> (well, there are rules, they just have so many exceptions that they might as well not exist)

[16:35] *** molaf_ joined
[16:35] *** molaf left
[16:37] *** SamuraiJack_ joined
[16:38] *** zakharyas left
[16:39] <tadzik> colomon++ # improving bailador

[16:40] <lizmat> cycling&

[16:42] *** telex left
[16:42] <colomon> tadzik: I needed it so it didn't conflict with my Dancer instance on my Linux box.  :)  (That would be the smoke test results page.)

[16:44] *** telex joined
[16:45] <[Coke]> lunch break - anyone have a suggestion on how to get sdl working on os x 10.9 with nativecall? (specifically TTW's build)

[16:46] *** kivutar joined
[16:46] <colomon> [Coke]: I got it working (on 10.8) by building sdl from source.  then everything was groovy

[16:47] <[Coke]> colomon: I tried installing libsdl via ports (boom) and via libsdl.org (whiff) - if I change the sniffer to use sdl-config instead of sdl2-config, I get further into the build... but then it dies (version mismatch, I assume?)

[16:48] <[Coke]> ... weird. the sdl-config is giving me a macports one...

[16:49] <btyler> [Coke]: I got it working on 10.9 with zero hassle, just 'brew install sdl2'

[16:49] <btyler> and 'panda install NativeCall'

[16:49] <[Coke]> I assume brew is some hip new replacement for port ?

[16:49] <btyler> yeah, essentially

[16:50] <btyler> homebrew. keeps everything in /usr/local so you don't need to install stuff as root

[16:50] * [Coke] realizes he was literally installing 'libsdl' not 'libsdl2', and tries that.

[16:51] *** larks left
[16:51] *** larks joined
[16:52] <geekosaur> brew is the macports alternative for people who hate seatbelts

[16:52] <hoelzro> and like driving in the fastlane =P

[16:52] <geekosaur> violates security, generally written without any error checking, naturally people love it to death

[16:52] <geekosaur> yes, it;s really fast until it trashes you

[16:52] <geekosaur> enjoy it

[16:52] <hoelzro> I happen to agree

[16:53] <hoelzro> I have a love/hate relationship with brew

[16:53] <btyler> I'm just an uninformed user, but it has worked well for my needs

[16:53] <btyler> haven't used/tried macports

[16:53] <hoelzro> and the sad thing is, people look at it and say "why can't all Linux package managers be like this?"

[16:53] <hoelzro> it works 95% of the time

[16:53] <hoelzro> but it breaks stuff a *lot*

[16:53] <hoelzro> at least it has for me

[16:54] <tadzik> hrm, so why do people miss it on linux?

[16:54] <tadzik> I like basically every linux package manager I ever used

[16:54] <geekosaur> because linuc package managers enforce rules, while homebrew doesn't give a flying fuck abotu rules

[16:54] <geekosaur> so it's easy and fast and painless right up until it screws you hard

[16:55] <hoelzro> I think that people like the fact that they can submit PRs for package formulae

[16:55] <hoelzro> which by itself isn't a bad idea

[16:55] <hoelzro> but there's no review process

[16:55] <hoelzro> it's anarchy

[16:55] <tadzik> :o wwatt

[16:55] <tadzik> so you install a package, and hope no one put malware in there 10 seconds ago?

[16:55] <geekosaur> pretty much

[16:56] <[Coke]> hoelzro: so, it's cpan?

[16:56] <hoelzro> bah dum tssssh

[16:56] <[Coke]> :)

[16:56] *** ssutch_ joined
[16:57] <geekosaur> so over in #haskell there's one person who used to strongly recommend homebrew, to the extent of immediately jumping on and insulting anyone who dared to mention macports

[16:58] <geekosaur> over the past 2 months, he's had to help people untangle problems with the recommended ghc brew recipe

[16:58] <geekosaur> he's stopped recommending homebrew

[17:00] * [Coke] ignores the weird warning at the end of installing libsdl2, and is able to play the game!

[17:00] <tadzik> yay :)

[17:01] <colomon> \o/

[17:01] *** ssutch_ left
[17:01] <retupmoca> .tell jnthn I golfed my Compress::Zlib::Raw compilation issue from the other day: https://gist.github.com/retupmoca/9744166 - I have not tested to see if this is NativeCall specific

[17:01] <yoleaux> retupmoca: I'll pass your message to jnthn.

[17:01] <vendethiel> geekosaur: homebrew has had problems with haskell for a very long time ...

[17:01] <[Coke]> tadzik: when i was a kid, I imagined it was spiderman. made it easier to explain why he was jumping from building to building. :)

[17:01] <tadzik> ah :)

[17:02] <tadzik> I was mostly driving through countryside

[17:02] <[Coke]> speaking of haskell, anyone want to help me get pugs working on the new roast box?

[17:02] <tadzik> well, being driven :P

[17:02] <tadzik> but everyone imagined something similar: ain't that something cool

[17:02] * colomon mostly read on car trips of significant length

[17:03] <tadzik> I was getting carsick when I read. I maybe still do, but I play it safe and don't try

[17:03] <tadzik> now I mostly sleep, when I'm supposed to keep the driver awake :P

[17:03] *** raydiak joined
[17:05] <timotimo> out of lack of need for self-preservation? :P

[17:06] <timotimo> i should start with the p6weekly post, actually

[17:07] *** Guest53214 left
[17:08] <colomon> Installing Bailador from a local directory 'Bailador'

[17:08] <colomon> hmmm

[17:11] *** kurahaupo joined
[17:21] *** Alula left
[17:21] *** BenGoldberg joined
[17:24] *** Rotwang joined
[17:24] *** Rotwang left
[17:24] *** Rotwang joined
[17:26] <timotimo> not too many changes to report for the weekly, i'm afraid

[17:26] <timotimo> or am i missing something?

[17:29] <timotimo> do we have a star release manager for this month yet?

[17:31] <timotimo> oh, we didn't bump the parrot version for this month's release

[17:34] *** Alula joined
[17:35] <dalek> perl6-roast-data: 371b329 | coke++ | / (6 files):

[17:35] <dalek> perl6-roast-data: today (automated commit)

[17:35] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/371b329782

[17:35] *** SamuraiJack_ left
[17:35] *** SamuraiJack joined
[17:36] <tadzik> colomon: if there's a local dir with a maching name, panda will install from there

[17:36] <tadzik> I should maybe change that

[17:36] <colomon> It's a great feature for testing, I guess.

[17:37] <colomon> but it's really important to know that it's there.  ;)

[17:37] <tadzik> it should probably be more explicit though

[17:37] <tadzik> like, require ./Bailador

[17:37] <PerlJam> tadzik: +1

[17:37] *** guru joined
[17:37] <tadzik> yay, new bug

[17:37] <PerlJam> As long as that doesn't affect "panda install ."

[17:37] <timotimo> or installing a module named "."

[17:37] *** guru is now known as Guest71490

[17:38] *** Guest71490 is now known as ajr_

[17:39] <tadzik> oh yes, 'install .' is a common usecase

[17:39] <tadzik> even bootstrap relies on that

[17:40] <PerlJam> tadzik++

[17:46] *** denisboyun joined
[17:48] <timotimo> hm, the lead moar has over jvm isn't all unicode database, is it?

[17:49] *** hoverboard joined
[17:49] <simula67> hi

[17:49] *** rindolf left
[17:51] <timotimo> greetings, simula67 

[17:51] <simula67> Is there any windows graphical text editor ( like Notepad++ ) with syntax highlighting for Perl 6 ?

[17:52] <timotimo> is GVim an acceptable candidate?

[17:55] <simula67> I need to try that again. Last time I tried it I remember it did not allow copy pasting to and from other apps

[17:55] *** IllvilJa left
[17:55] <simula67> might as well use plain vim in that case

[17:57] *** ssutch_ joined
[17:58] <raydiak> simula67: gvim does allow access to the os clipboard, it just doesn't use it as the default one for its copy/paste

[17:59] <retupmoca> simula67: are you familier with vim registers? On my linux machine, the * and + registers sync to my clipboard

[18:00] <raydiak> simula67: if you put "set clipboard=unnamed" in your _vimrc, it'll use the os clipboard by default

[18:01] *** ssutch_ left
[18:01] *** denis_boyun__ joined
[18:02] *** denisboyun left
[18:04] <simula67> raydiak: thanks, i will try that when i switch to windows. I need a way to hack on this while at work :)

[18:07] <raydiak> simula67: works on linux and mac too :) (except w/.vimrc instead of _vimrc)

[18:10] <simula67> Pacman gives me this :: gvim and vim are in conflict. Remove vim? [y/N] n

[18:10] <raydiak> gvim package under arch provides both console and gui vim, iirc

[18:14] *** sqirrel_ left
[18:15] <raydiak> yes, gvim provides vim (just checked)...though fwiw, you don't need gvim to use the clipboard

[18:18] <tadzik> timotimo: it seems like the font changes after the 2nd paragraph of p6weekly

[18:19] <simula67> raydiak: yes, i just installed it. looks good. let me try on windows as well. thanks

[18:20] <raydiak> simula67: under linux you might need to use unnamedplus instead of unnamed, depending on which clipboard/cut buffer you use. you're welcome and good luck

[18:20] <tadzik> timotimo++ # nice post

[18:21] <tadzik> timotimo: mind linking to the blog? People might not know who the tadzik fellow is

[18:23] *** btyler left
[18:25] *** rindolf joined
[18:26] *** IllvilJa joined
[18:28] *** btyler joined
[18:36] <hoelzro> timotimo: wrt that syntax highlighting bug you found, it seems that y is being recognized as a keyword

[18:41] *** zakharyas joined
[18:49] *** SamuraiJack left
[18:52] *** btyler left
[18:52] <vendethiel> for GSoC, who decides on who's in / who's out ?

[18:52] <tadzik> org mentors

[18:53] <tadzik> to some extent, at least. They're given a number of slots by google, and are to fill them to best of their abilities

[18:53] <vendethiel> oh, so I could've a chance actually

[18:56] *** ssutch_ joined
[18:59] *** darutoko left
[19:06] <timotimo> tadzik: but i linked to your blog

[19:06] * [Coke] wonders if we could autogen https://github.com/vim-perl/vim-perl/blob/master/syntax/perl6.vim from STD.p6

[19:06] <tadzik> ah, it's just visible on hover :) ok

[19:07] <timotimo> wtf, why is it all the stuf bold?

[19:07] <hoelzro> [Coke]: that's not a bad idea

[19:07] <hoelzro> hell, autogen pygments + perl6.vim + perl6-kate

[19:07] * hoelzro .oO( Perl6 Cate? )

[19:09] *** MrMeek joined
[19:13] <BenGoldberg> std: sub infix:<ow> is assoc('list') { $^a + $^b }; say [Row] 1..4

[19:13] <camelia> std 09dda5b: OUTPUT«ok 00:01 130m␤»

[19:14] <vendethiel> r: 0 R 1

[19:14] <camelia> rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572: OUTPUT«===SORRY!=== Error while compiling /tmp/tmpfile␤Two terms in a row␤at /tmp/tmpfile:1␤------> 0 R⏏ 1␤    expecting any of:␤        postfix␤        infix stopper␤  …»

[19:14] *** Alina-malina left
[19:14] *** Alina-malina joined
[19:14] *** Alina-malina left
[19:14] *** Alina-malina joined
[19:14] <vendethiel> r: 0..2 R+ 3..5

[19:15] <camelia> rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572: OUTPUT«===SORRY!=== Error while compiling /tmp/tmpfile␤Operators '..' and '..' are non-associative and require parenthesis␤at /tmp/tmpfile:1␤------> 0..2 R+ 3.⏏.5␤    expectin…»

[19:15] <vendethiel> r: say (0..2) R+ (3..5)

[19:15] <camelia> rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572: OUTPUT«6␤»

[19:15] <vendethiel> I don't even know what does this do :P

[19:15] <BenGoldberg> The R meta-operator reverses the arguments to the operator it's attached to

[19:15] <BenGoldberg> r: say 5 r/ 3

[19:16] <camelia> rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572: OUTPUT«===SORRY!=== Error while compiling /tmp/tmpfile␤Two terms in a row␤at /tmp/tmpfile:1␤------> say 5 ⏏r/ 3␤    expecting any of:␤        postfix␤        infix stopper…»

[19:16] <BenGoldberg> r: say 5 R/ 3

[19:16] <camelia> rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572: OUTPUT«0.6␤»

[19:16] * jnthn gets home

[19:16] <yoleaux> 17:01Z <retupmoca> jnthn: I golfed my Compress::Zlib::Raw compilation issue from the other day: https://gist.github.com/retupmoca/9744166 - I have not tested to see if this is NativeCall specific

[19:16] <BenGoldberg> r: sub infix:<ow> is assoc('list') { $^a + $^b }; say [Row] 1..4

[19:16] <camelia> rakudo-parrot ffa572: OUTPUT«Too many positional parameters passed; got 4 but expected 2␤  in block  at gen/parrot/CORE.setting:17009␤  in sub  at gen/parrot/CORE.setting:17151␤  in block  at /tmp/tmpfile:1␤␤»

[19:16] <camelia> ..rakudo-moar ffa572: OUTPUT«Too many positional parameters passed; got 4 but expected 2␤  in block  at src/gen/m-CORE.setting:16808␤  in sub  at src/gen/m-CORE.setting:16950␤  in block  at /tmp/tmpfile:1␤␤»

[19:16] <camelia> ..rakudo-jvm ffa572: OUTPUT«Too many positional parameters passed; got 4 but expected 2␤  in block  at gen/jvm/CORE.setting:16754␤  in sub  at gen/jvm/CORE.setting:16896␤  in block  at /tmp/tmpfile:1␤␤»

[19:16] <FROGGS> vendethiel: you have submitted a GSoC application?

[19:16] *** zakharyas left
[19:17] <vendethiel> FROGGS: no, I havn't, because I thought only google decided (basically randomly) and I'm never lucky

[19:18] <[Coke]> next time talk to us!

[19:18] <FROGGS> no, the mentors are supposed to vote the proposals up/down, and then the top X are taken (where X is number of slots we got)

[19:19] <FROGGS> actually mentors + org admins

[19:19] <vendethiel> Well, is it too late already ?

[19:19] <FROGGS> yes

[19:19] <FROGGS> deadline was on friday

[19:19] <vendethiel> Oh,really? Gotta tell a friend then, he's still getting messages from a mentor

[19:20] <FROGGS> vendethiel: btw, you can still pick a topic and we do the mentoring, you just won't get payed :o)

[19:21] <vendethiel> FROGGS, I can't, it needs to be official for my school to count it

[19:21] <FROGGS> you can do it just for fun and profit, err, fun and learning perhaps :o)

[19:22] <vendethiel> I have 8 months to do a 6-month internship, I've been told that "GSoC might be okay but not long enough" so I'd have had to find something else on the side, but everything they have internally is 6-8 months

[19:22] <[Coke]> if you want to set it up as an independent study or something, I'm sure you could find a mentor to work with you.

[19:22] <[Coke]> or get your advisor to join the community. :)

[19:22] <vendethiel> Yeah, though I can't really do it in GSoC's period of time because I'll be very busy with said internship

[19:23] <vendethiel> well, I'm not that introverted not to participate in a big open source project (I love it), I just don't really know where to start and, as everybody, I have a limited free time

[19:24] <vendethiel> although I've seen "low-hanging fruits" in p6weekly by timotimo++ ?

[19:24] *** sqirrel_ joined
[19:27] <timotimo> once, aye

[19:30] <vendethiel> that's a good incentive

[19:30] <vendethiel> (is that the good word for it ? eh)

[19:30] <colomon> vendethiel: just trying to write code in p6 can be really useful.  or at least, it seems like I turn up some sort of compiler issue every time I do…. ;)

[19:31] <vendethiel> colomon: to try and code what ?

[19:31] <colomon> vendethiel: whatever catches your fancy!

[19:31] <vendethiel> colomon: nothing does, that's my problem

[19:31] <vendethiel> up to the point I'm thinking of making a "Programming Ideas" website ...

[19:32] <colomon> vendethiel: maybe you should go back to the classics.  program "hunt the wumpus" or something.

[19:32] * vendethiel googles

[19:32] *** spider-mario joined
[19:33] <vendethiel> I already did a game of life, but that kind of stuff is not ... "real-lify", you don't really hit problems

[19:33] <vendethiel> though, is there an ascii-based-games framework for perl6 yet ?

[19:34] *** btyler joined
[19:35] *** jnap1 left
[19:35] *** jnap joined
[19:36] <FROGGS> vendethiel: perhaps this? https://github.com/masak/Adventure-Engine

[19:36] <vendethiel> haha, so that's not a project either

[19:37] <FROGGS> vendethiel: why don't you improve it or do your own and just get some ideas?

[19:38] <vendethiel> I don't feel like it's interesting to do it on my own

[19:38] <FROGGS> bah

[19:38] <FROGGS> :P

[19:38] <vendethiel> I can do "on my own" project ideas, but framework I prefer to leave state of the art

[19:39] <FROGGS> well, it sounds more like choosing between making state of the art in distant future or producing something smaller in near future

[19:40] *** sivoais joined
[19:41] <vendethiel> FROGGS, yeah, I know

[19:42] <vendethiel> it's just that it feels "distant"

[19:47] * lizmat is back from cycling

[19:48] *** bluescreen10 left
[19:48] <lizmat> timotimo++ # weekly update

[19:49] <timotimo> the primary property of this week's update is that it's weekly :|

[19:52] <dalek> specs: a30bb46 | jonathan++ | S22-package-format.pod:

[19:52] <dalek> specs: Minor language tweaks.

[19:52] <dalek> specs: review: https://github.com/perl6/specs/commit/a30bb465cd

[19:53] <lizmat> jnthn++

[19:54] <jnthn> Here are a few other things that crossed my mind as I read it: https://gist.github.com/jnthn/9747719

[19:55] <lizmat> jnthn: wrt to emulates: the way I see it, is that if compunit Foo emulates Bar, it will install an alias

[19:55] <lizmat> that will cause loading of compunit Bar to become a noop

[19:55] <lizmat> no more and no less

[19:56] <lizmat> module Foo will need to make sure it is otherwise compatible

[19:56] <lizmat> e.g. by exporting the same subs / providing the same method API

[19:59] *** molaf__ joined
[20:00] <lizmat> jnthn: does that make sense?

[20:00] <lizmat> wrt to development of CompUnit / CompUnitRepo

[20:00] <FROGGS> jnthn: the production readiness is a problem for installed dists, yes

[20:00] <lizmat> the idea is that a developer has a CompUnitRepo::Local as its first @INC entry

[20:01] <FROGGS> not for dists in your dev environment though, since we only care about names (like in provides) there, but not about auth, ver, or production state

[20:01] <lizmat> that special version will use the current compunit load semantics where the requested name directly maps to a directory/filename

[20:01] <lizmat> *without* looking at auth / ver

[20:02] <FROGGS> yeah, like we do for rakudo/nqp things

[20:02] *** molaf_ left
[20:02] <jnthn> lizmat: Ah, so emulates just means "yes, I herby confirm that the module does the right things to implement the other thing"? OK, then I'm comfortable.

[20:02] <lizmat> the CompUnitRepo API accepts a compunit name to be searched

[20:02] <FROGGS> these are bound to a filesystem lookup

[20:02] <jnthn> s/implement/provide a compatible implementation of/

[20:02] <lizmat> jnthn: indeed

[20:03] <FROGGS> but as I said, the installed non-production dists need some pondering

[20:03] <lizmat> wrt to "production" / "not production": the way I see that

[20:04] <lizmat> is that a "not production" distribution will never be returned by a recommendation manager

[20:04] <jnthn> lizmat: Does -Ilib count as installing a CompUnitRepo::Local?

[20:04] <lizmat> yes, that's the idea

[20:04] <FROGGS> jnthn: yes

[20:04] <jnthn> OK, that makes sense.

[20:04] <lizmat> so, "not production" is a barrier against automatic installation / update

[20:05] <FROGGS> lizmat: what about smokers, that pick up recent releases and test them? these should smoke non-production stuff as well

[20:05] <lizmat> but it is *not* a barrier against specific installation

[20:05] <FROGGS> and other ppl might want to have bleading edge too

[20:05] <lizmat> it's just as with the -TRIAL now in Perl 5 distributions

[20:05] <lizmat> it will never appear on the module list, so it won't be used for automatic updates

[20:05] <FROGGS> lizmat: but how do I say that I want latest Foo::Bar, even a dev version?

[20:06] <FROGGS> say I have it already installed

[20:06] <FROGGS> and then?

[20:06] <FROGGS> how does my use statement look like?

[20:06] <lizmat> .oO( pondering )

[20:06] <FROGGS> it is tricky

[20:06] <FROGGS> smokers will prefer an env var, but common users probably not

[20:06] *** kurahaupo left
[20:07] <lizmat> the use statement, in that context, is only sensitive to version

[20:07] <jnthn> lizmat: Ah, so production is reifying a convention (though from the other angle) that has already appeared in the Perl 5 community?

[20:07] <lizmat> yes

[20:07] <lizmat> that was my idea

[20:07] <jnthn> lizmat: That makes me more comfortable with its existence.

[20:07] <FROGGS> jnthn: I did that often

[20:07] <lizmat> a dev version has a different version number

[20:08] <lizmat> the "production" flag is only applicable to installers

[20:08] <jnthn> lizmat: I was a little worried it might be a solution looking for a problem, but trusted that you'd have a better grasp on the set of problems out there than I do ;)

[20:08] <lizmat> an installer has the option of installing "production" distributions only

[20:08] <FROGGS> I released SDL 2.540 stable, and then 2.541_1 to 2.541_9 as dev releases to hunt down bugs, and then rereleased the _9 as next stable

[20:09] <lizmat> or install non-production distributions also

[20:09] <FROGGS> ohh, »the "production" flag is only applicable to installers«, interesting idea

[20:09] <lizmat> the "use" statement only knows about what's installed

[20:09] <FROGGS> sure

[20:10] <lizmat> and what's installed really is determined how CompUnitRepo's handle requests for compunits

[20:10] *** rindolf left
[20:10] <lizmat> I could envision a CompUnitRepo::Cloud

[20:10] <FROGGS> so when I choose to install Foo-0.1-TRIAL, it will later be considered like stable releases in use statements

[20:10] <lizmat> that would just download any module ad-hoc without even really installing

[20:11] <lizmat> FROGGS: yes, that's my idea

[20:11] <FROGGS> lizmat: I like it

[20:11] <lizmat> of course, during runtime, you can introspect the distriibution info and find out whether the code is actually production ready

[20:13] <lizmat> jnthn: does that answer your questions?

[20:13] <jnthn> lizmat: Yes, sufficiently well. :)

[20:14] <jnthn> lizmat: I suspect implementation and usage will give some clarity too :)

[20:14] <lizmat> hoping to find time for that after I get back from Cluj

[20:15] <FROGGS> I will also have more time for implementing latest changes after gpw

[20:16] <FROGGS> would be awesome to get the CPAN indexer ready soonish, I guess that is the next thing I tackle when my slides are in a good state

[20:16] <segomos> FROGGS: a CPAN indexer?

[20:16] <lizmat> way cool

[20:16] <FROGGS> segomos: yes

[20:16] <segomos> i'd be interested in building it.. in perl6 or ? and for what purpose?

[20:16] <lizmat> yes, we're going to have Perl 6 distributions on CPAN soon  :-)

[20:16] <FROGGS> segomos: in the first step it just records all Perl 6 releases, so we can plug panda to CPAN

[20:17] <FROGGS> segomos: in the PAUSE code (Perl 5)

[20:17] <lizmat> .oO( with a very strong Perl 4 odour )

[20:17] <FROGGS> if you say so :o)

[20:18] <lizmat> 20+ year old code has that smell  :-)

[20:18] <FROGGS> true

[20:18] <segomos> how are you differentiating perl6 on CPAN?

[20:18] * lizmat is glad she doesn't have to maintain her Perl code of 20 years ago

[20:18] <lizmat> segomos: it's all in S22

[20:18] <segomos> i will read s22 then

[20:19] <FROGGS> segomos: the release tarball must contain a META6.json, and then it is put in a Perl6/ subdir in your author's directory

[20:19] <lizmat> basically, PAUSE checks whether there is a META6.json file in the distribution

[20:19] <lizmat> what FROGGS says  :-)

[20:19] <FROGGS> and then a Perl 6 indexer carries on, instead of the Perl 5 one which handles namespace right very very strightly

[20:19] <FROGGS> rights*

[20:20] <FROGGS> ownership, even

[20:20] <segomos> i'll read it, it sounds like something i'd contribute to

[20:21] <FROGGS> segomos: the problem/task is not that difficult, but the codebase is

[20:21] <lizmat> and there is no dev environment

[20:21] <lizmat> and we don't want to break Perl 5 distribution uploads to CPAN  :-)

[20:22] <FROGGS> true, very true

[20:22] <segomos> i need to learn how to get the information from CPAN too, i'll read a little and come back and ask some more questions

[20:22] <FROGGS> that is where we hook in: https://github.com/andk/pause/blob/master/lib/PAUSE/mldistwatch.pm#L455

[20:23] <FROGGS> segomos: the idea is to create a huge json blurb by a cron job, containing basic distribution information from the META6.json files

[20:23] <segomos> the most i've looked at cpan is 'cpanm <module>' and that's pretty much my total interaction with it

[20:23] *** rurban1 left
[20:23] <lue> FROGGS: how long has that # XXX been there? :)

[20:24] <FROGGS> lue: FROGGS 3 days ago

[20:24] <FROGGS> let indexing for Perl6 be a noop 

[20:25] <[Coke]> oooh, cf regex support \b! my day is made!

[20:26] *** ssutch__ joined
[20:26] <FROGGS> PCRE FTW!

[20:27] <timotimo> jnthn: what does your tuit supply look like while the gpw happens?

[20:28] *** rurban1 joined
[20:28] <dalek> specs: 4591626 | (Elizabeth Mattijsen)++ | S22-package-format.pod:

[20:28] <dalek> specs: Some clarifications, after questions from jnthn++

[20:28] <dalek> specs: review: https://github.com/perl6/specs/commit/459162649f

[20:29] *** ssutch_ left
[20:38] <hoelzro> wrt using STD.pm6 to generate syntax files, what did you have in mind? introspecting it to find certain keywords, or...?

[20:42] <tadzik> I was offline for the last 1.5 hours :o

[20:42] <tadzik> and didn't even notice

[20:42] <lizmat> and you thought we were quiet  :-)

[20:42] <tadzik> yes!

[20:42] <lizmat> well, I have been for many weeks, but not today  :-)

[20:43] *** Sqirrel left
[20:46] *** ssutch__ left
[20:46] <timotimo> tadzik: i really missed you!

[20:47] <jnthn> timotimo: I should have some during the next week.

[20:47] <timotimo> sounds good

[20:48] <timotimo> can you tell me how to get the exception classes into the BOOTSTRAP.nqp for the binder to use?

[20:48] <jnthn> You don't

[20:48] <jnthn> You install things to create such exceptions in P6EX or so

[20:49] <jnthn> Search for X::Multi::NoMatch for an example

[20:49] <jnthn> But here you'd have it construct the exception and return it, rather than actually throw it.

[20:49] <timotimo> ah, looks simple

[20:50] <timotimo> and then i call .throw on it when it's time to go explodey-plode?

[20:50] <jnthn> And have the text fallback for the "compiling th esetting" case.

[20:50] <jnthn> Yeah

[20:50] <jnthn> You can use nqp::isstr to see if you have a string one, and if not then you know to .throw

[20:51] <timotimo> so if nqp::isstr($error[0]) { nqp::die(...

[20:51] <timotimo> yeah

[20:51] <timotimo> i was about to write that, but i got distracted by Firefly on the telly :)

[20:59] <colomon> You can't take the sky from me.

[21:02] *** dayangkun left
[21:03] <timotimo> r: sub test(int $foo) { }; my str $test = "hi"; test($test);

[21:03] <camelia> rakudo-parrot ffa572, rakudo-moar ffa572: OUTPUT«===SORRY!=== Error while compiling /tmp/tmpfile␤Calling 'test' will never work with argument types (str)␤    Expected: :(int $foo)␤at /tmp/tmpfile:1␤------> est(int $foo) { }; my str $test = "hi"; …»

[21:03] <camelia> ..rakudo-jvm ffa572: OUTPUT«java.lang.ClassCastException: java.lang.String cannot be cast to org.perl6.nqp.sixmodel.SixModelObject␤  in sub test at /tmp/tmpfile:1␤  in block  at /tmp/tmpfile:1␤␤»

[21:03] <timotimo> oh, well.

[21:03] <timotimo> don't need to turn that into a typed exception if it won't ever fly in the binder

[21:03] <jnthn> Um...wat, jvm? :)

[21:04] <jnthn> Well, on Parrot and Moar it successfully ges it at compile time.

[21:04] <timotimo> right

[21:05] *** sqirrel_ left
[21:06] <timotimo> i don't seem to find typed exceptions for most things the binder would complain about >_>

[21:10] <timotimo> actually ... i kind of see none

[21:12] <jnthn> Yeah, the binder isn't very typed-execptioned

[21:12] *** LLamaRider joined
[21:13] <LLamaRider> lue: I just came to your P6 type hierarchy repo, while searching for a pretty dependency graph of the built-in type/class system. Did anything come of that?

[21:13] <lue> LLamaRider: the perl6/doc repo does a much better job of having a typegraph :)

[21:14] <LLamaRider> does that mean a graph exists in there and your repo is obsolete?

[21:14] <LLamaRider> I will do some digging then

[21:15] *** cognominal left
[21:16] <LLamaRider> oh there are nice graphs on the individual class pages, cool!

[21:16] * lue afk

[21:16] <timotimo> where is that repository?

[21:17] <timotimo> may want to take it down if it's outdated or update it

[21:17] <FROGGS> https://github.com/lue/Perl-6-Type-Hierarchy

[21:17] <LLamaRider> this is lue's repo: https://github.com/lue/Perl-6-Type-Hierarchy

[21:18] <LLamaRider> http://doc.perl6.org/images/ is exactly what I was dreaming of, though it is missing a large image of everything

[21:19] <FROGGS> m: say ObjAt

[21:19] <camelia> rakudo-moar ffa572: OUTPUT«(ObjAt)␤»

[21:19] <FROGGS> what is that?

[21:19] <timotimo> what, where?

[21:19] *** dayangkun joined
[21:20] <lizmat> it's a type ?

[21:20] <FROGGS> n: say ObjAt

[21:20] <camelia> niecza v24-109-g48a8de3: OUTPUT«(ObjAt)␤»

[21:20] <FROGGS> seems so...

[21:20] <FROGGS> seen the .svg of it and now I wonder what it does

[21:20] <FROGGS> m: say ObjAt.^methods

[21:20] <camelia> rakudo-moar ffa572: OUTPUT«WHICH Str gist␤»

[21:20] <lizmat> it's declared in BOOTSTRAP

[21:20] <tadzik> can someone read my "rakudo on android" comment (http://ttjjss.wordpress.com/2014/03/23/perl-6-on-steroids-through-the-window/#comment-302) and see if I got it mostly right?

[21:21] <jnthn> Specified in S02 I think.

[21:21] <jnthn> Related to boject hashing.

[21:22] <FROGGS> tadzik: sounds about right to me, but what do I know :o)

[21:22] <tadzik> :P

[21:22] *** guru joined
[21:22] <tadzik> FROGGS: I don't think I get your comment on panda bug

[21:22] *** ajr_ left
[21:22] <FROGGS> humm?

[21:22] <tadzik> https://github.com/tadzik/panda/issues/73

[21:22] *** guru is now known as Guest24017

[21:22] <lizmat> S02:620

[21:22] <synopsebot> Link: http://perlcabal.org/syn/S02.html#line_620

[21:22] <lizmat> oops: S02:640

[21:22] <synopsebot> Link: http://perlcabal.org/syn/S02.html#line_640

[21:23] *** cognominal joined
[21:23] *** Guest24017 is now known as ajr_

[21:23] <FROGGS> tadzik: well, the solution would be to put an absolute path in the installed scripts, right?

[21:24] <tadzik> I think the problem in the bug is happening much sooner

[21:24] <FROGGS> lizmat: thanks

[21:24] <tadzik> panda, when it's bootstraping panda, runs 'perl6 ./bin/panda da da da yada'

[21:24] <jnthn> tadzik: I think Android runs Dvalik

[21:24] <tadzik> fsvo perl6

[21:24] <jnthn> tadzik: Not a JVM

[21:24] <FROGGS> tadzik: ahh, troo

[21:24] <jnthn> tadzik: So the question is when JSR292 gets implemented in Dvalik

[21:24] <timotimo> X::TypeCheck::Binding doesn't have a slot for the name of the bound thing

[21:24] <tadzik> and that vo perl6 is wrong :P

[21:25] <jnthn> https://bitbucket.org/jpilliet/android-292 is some work towards that

[21:25] <tadzik> jnthn: Dalvik :)

[21:25] <timotimo> the current AdHoc does tell which name was bound

[21:25] <jnthn> oh wwow :)

[21:25] <tadzik> well, I wrote "android jvm implementation", isn't that what dalvik is?

[21:26] <geekosaur> not exactly

[21:26] <geekosaur> there's a step in building an android program that translates jvm bytecode to dalvik bytecode

[21:26] <jnthn> Not quite. It runs something other than JVM bytecode, but JVM bytecode can easily be turned into that, as I understand it.

[21:26] <timotimo> except if you use invokedynamic

[21:26] <tadzik> aha

[21:27] <tadzik> I'll just say "Dalvik (Android's VM)"

[21:27] <geekosaur> also it seems recent android has an experimental new runtime in it (you can access via developer mode, but there are a lot of nasty warnings on using it)

[21:27] <FROGGS> a usable rakudo on android would be a killer... but I guess we are not that near as we would hope :o)

[21:28] <hoelzro> dalvik doesn't support invokedynamic =(

[21:28] <tadzik> uh, I overworkedout

[21:28] <FROGGS> what about ubuntu phone thingy? has somebody such a phone?

[21:28] *** skids left
[21:29] <timotimo> how do i proceed?

[21:29] *** dmol left
[21:29] *** jnap1 joined
[21:29] <tadzik> was it ever released, in an installable state?

[21:30] <tadzik> oh, I can probably try running rakudo-moar on my n900 :)

[21:30] <FROGGS> yes, you can download it for two phone models

[21:30] <tadzik> hoelzro can try running it on Jolla

[21:30] <hoelzro> hmm

[21:30] *** jnap left
[21:30] <FROGGS> timotimo: the problem is that you would have to extend X::TypeCheck::Binding?

[21:30] <hoelzro> that's a cool idea

[21:31] <hoelzro> no reason I couldn't

[21:31] <tadzik> linking to QML may be a bit of a pain

[21:31] <tadzik> I know Go needed to get a C++-nativecall to do that

[21:32] <hoelzro> =(

[21:32] <hoelzro> Go has a C++ nativecall?

[21:32] <timotimo> ok 623 - right exception type (X::TypeCheck::Binding)

[21:32] <timotimo> yay

[21:32] <timotimo> FROGGS: i think i could do that, aye

[21:32] <timotimo> maybe with just an optional parameter?

[21:32] <FROGGS> timotimo++

[21:32] <FROGGS> why not, yes

[21:33] <FROGGS> there are other exceptions that have an optional attribute and therefor two different messages

[21:33] <tadzik> hoelzro: yeah

[21:33] <FROGGS> (like with suggestions)

[21:33] <tadzik> since 1.something

[21:34] <hoelzro> I wonder how they pull that off...

[21:34] <tadzik> and now it can use qml and things

[21:34] <tadzik> wait

[21:34] <tadzik> I have a gif just for that

[21:34] <FROGGS> a C++ nativecall meme?

[21:34] <tadzik> http://goo.gl/WxAgDl

[21:35] <tadzik> it speaks in your head, even

[21:35] <FROGGS> hehehe

[21:35] <FROGGS> tadzik++

[21:36] <FROGGS> that might be a response I could give at the gpw on wednesday *g*

[21:36] *** kaare_ left
[21:36] <tadzik> gifs work quite well on presentations

[21:37] <tadzik> I tried :P

[21:37] <FROGGS> I just need a rediculous shirt

[21:39] <timotimo> ./perl6-m -e 'my class A {}; (-> &c, $m { A.new()(); CATCH { default { $m } } } )(A, "")'

[21:39] <timotimo> Type check failed in binding &c; expected 'Callable' but got 'A'

[21:40] <masak> heh, I remember that one :)

[21:40] <masak> it used to blow up horribly.

[21:41] <masak> managed to Null PMC access on the $m not being properly initialized because the CATCH caught the type mismatch error.

[21:41] <timotimo> ouch

[21:41] <masak> in the *middle of the signature binding*.

[21:41] <timotimo> well, at least we get the name of the parameter on moar now

[21:42] <timotimo> moar is getting better than the other backends day by day :P

[21:42] <masak> better yet; we don't get a Null PMC access anymore :)

[21:42] <masak> timotimo: which RT # was that, ooc?

[21:42] <timotimo> no clue

[21:43] <masak> where di you get the code from?

[21:43] <masak> did*

[21:43] <jnthn> I think that one mighta been fixed all the way back in the PAST -> QAST transition.

[21:44] <masak> I did a talk about it last summer, but it might've been fixed by then.

[21:44] <jnthn> Which killed PAST::Handler in favor of nqp::handle

[21:44] <jnthn> In which case we're talking a couple of years ago.

[21:47] <dalek> rakudo/nom: aa99985 | (Timo Paulssen)++ | src/vm/moar/ops/perl6_ops.c:

[21:47] <dalek> rakudo/nom: turn an adhoc into X::ControlFlow::Return

[21:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/aa99985e4d

[21:47] <dalek> rakudo/nom: af8d426 | (Timo Paulssen)++ | src/ (2 files):

[21:47] <dalek> rakudo/nom: teach the moarvm binder X::TypeCheck::Binding and X:: in general

[21:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/af8d426a8a

[21:47] <timotimo> anything wrong with that? :)

[21:48] * lizmat pulls and spectests

[21:48] <timotimo> thank you, liz

[21:51] <masak> ah, found it: https://rt.perl.org/Ticket/Display.html?id=114134

[21:53] <lizmat> timotimo: hmm seems to hang in spectest, rerunning without parallel testing

[21:54] <lizmat> timotimo: hangs on t/spec/S02-literals/listquote.rakudo.moar ..................... 1/23

[21:54] <timotimo> er ... huh?

[21:54] <timotimo> did i accidentally push something i didn't mean to?

[21:55] *** ajr_ left
[21:55] <timotimo> i don't think i did

[21:57] <lizmat> testing again without your changes

[21:57] *** kbaker left
[21:59] <[Coke]> so, rakudo-jvm craps out for me when running the roast suite still. Can someone else try it on their machine to see if they can dup it? I can step you through how to do it.

[21:59] *** ajr joined
[22:00] *** ajr is now known as Guest99590

[22:00] *** Guest99590 is now known as ajr_

[22:00] <[Coke]> (er, using the eval server)

[22:00] <lizmat> timotimo: should I be able to run without your last commit ?

[22:01] <[Coke]> starts aborting as of S10-packages/basic.rakudo.jvm

[22:02] <[Coke]> not sure if that particular test file is doing it, or if it's just exhausted. :)

[22:04] *** lustlife left
[22:04] <timotimo> hm, the very last one?

[22:04] <timotimo> i think it should work with the commit before this one

[22:05] <timotimo> it *does* seem to hang, wtf?

[22:05] *** Rotwang left
[22:06] <FROGGS> rm -rf install ?

[22:06] <lizmat> feels like an exception being thrown while throwing the exception

[22:06] <FROGGS> ohh

[22:06] <lizmat> e.g. because it can't find the exception ?

[22:07] <lizmat> timotimo: trying again without the last commit

[22:13] *** cognominal left
[22:13] <lizmat> timotimo: tests ok without the last commit

[22:15] <timotimo> weeeeird

[22:15] <timotimo> i'll review it over and over

[22:16] <lizmat> timotimo: in the first else, you're referring to %ex, but if that nqp::gethllsym failed, that wouldn't work, no?

[22:16] <timotimo> that's why i nqp::isnull it

[22:17] <lizmat> but if it *is* nwp::isnull, how can you refer to it in the else ?

[22:17] <lizmat> $error[0] := nqp::atkey(%ex, 'X::TypeCheck::Binding...

[22:17] <timotimo> er

[22:17] <timotimo> i think i forgot to ! it :)

[22:17] <jnthn> That's !good... 

[22:17] <timotimo> er

[22:17] <timotimo> no, if it's not nqp::isnull, the else will fire

[22:18] <lizmat> hmmm... guess I read it wrong  :-)

[22:19] <timotimo> am i infinilooping by causing the binder to fail when it's trying to report a bind fail?

[22:20] <lizmat> feels like something like that

[22:20] <lizmat> been through many of those while working on the setting

[22:20] *** Rotwang joined
[22:22] *** denis_boyun__ left
[22:23] <lizmat> looking at the diff, it can only be the "$error[0] := nqp::atkey(%ex, 'X::TypeCheck::Binding"

[22:23] <lizmat> or the "@error[0].throw();"

[22:24] <lizmat> since the other code paths are basically the old situation

[22:25] <lizmat> could nqp::isstr be false when it really is a string?

[22:25] <lizmat> so that it tries to throw a string ?

[22:25] * lizmat goes back to writing slides

[22:27] <lizmat> fwiw: in spectestiing, it seems to hang on:

[22:27] <lizmat> ok( ?((1 | 3) < 3), '(...) < 3 no parsefail');

[22:28] * lizmat goes really back to writing slides

[22:31] *** REPLeffect joined
[22:34] <lizmat> timotimo: seems that $error[0] := nqp::atkey(%ex, 'X::TypeCheck::Binding')($oval.WHAT, $nom_type.WHAT, $varname); is throwing an exception

[22:34] *** spider-mario left
[22:35] *** hoverboard left
[22:35] <jnthn> lizmat: On...JVM?

[22:35] <lizmat> no, on Moar

[22:35] <jnthn> Ah, OK

[22:35] <jnthn> Carry on :)

[22:35] <jnthn> (The NQP-implemented binder ain't used on JVM...)

[22:38] <masak> 'night, #perl6

[22:39] <lizmat> night masak 

[22:43] <lizmat> timotimo: feels to me it is in the use of .WHAT

[22:45] <timotimo> huh, something like "can only call .WHAT on a sixmodelobject? except this is moarvm where it should work :)

[22:46] *** colomon left
[22:46] <lizmat> changing it to: $error[0] := nqp::atkey(%ex, 'X::TypeCheck::Binding')($oval.HOW.name($oval), $nom_type.HOW.name($nom_type), $varname);

[22:46] *** LLamaRider left
[22:46] <lizmat> makes it not hang anymore, but bomb out the test with:

[22:46] <lizmat> Type check failed in binding $a; expected 'Str' but got 'Str'

[22:46] <lizmat>   in sub infix:<<> at src/gen/m-CORE.setting:4129

[22:46] *** colomon joined
[22:51] <lizmat> which is: proto infix:«<»($a?, $b?) is pure   { * }

[22:51] <lizmat> so that explains the $a

[22:54] * lizmat stops with debugging and slide writing and calls it a day

[22:56] <lizmat> gnight, #perl6!

[22:57] *** btyler left
[22:59] <lizmat> timotimo: final thought for the day: could it be that the throwing now also breaks out of any other exception catching?

[23:00] <lizmat> I couldn't otherwise explain the failure in t/spec/S02-literals/listquote.t, test #6

[23:00] <lizmat> sleep&

[23:02] *** grondilu joined
[23:02] <grondilu> r: say sqrt sqrt abs cos pi/2   # was expecting zero

[23:02] <camelia> rakudo-parrot ffa572, rakudo-moar ffa572: OUTPUT«8.84596494520137e-05␤»

[23:02] <camelia> ..rakudo-jvm ffa572: OUTPUT«8.845964945201365E-5␤»

[23:02] *** skids joined
[23:04] <grondilu> (well I guess that would be asking a lot numerically)

[23:04] *** Rotwang left
[23:08] * grondilu defines a half_pi role and make a multi case return zero in that case.

[23:10] <grondilu> r: role half_pi {}; multi r(half_pi) { 0 }; multi r(t) { sqrt sqrt abs cos t }; say r($_) for 0, pi/4, pi/2 but half_pi

[23:11] <camelia> rakudo-parrot ffa572, rakudo-jvm ffa572, rakudo-moar ffa572: OUTPUT«===SORRY!=== Error while compiling /tmp/tmpfile␤Invalid typename 't' in parameter declaration.␤at /tmp/tmpfile:1␤------> pi {}; multi r(half_pi) { 0 }; multi r(t⏏) { sqrt sqr…»

[23:11] <grondilu> r: role half_pi {}; multi r(half_pi) { 0 }; multi r(\t) { sqrt sqrt abs cos t }; say r($_) for 0, pi/4, pi/2 but half_pi

[23:11] <camelia> rakudo-parrot ffa572, rakudo-moar ffa572: OUTPUT«1␤0.917004043204671␤0␤»

[23:11] <camelia> ..rakudo-jvm ffa572: OUTPUT«1␤0.9170040432046712␤0␤»

[23:16] <grondilu> I wonder if it would not be opportunate to define a pi role so that cos(pi) and similar return exact values.

[23:20] *** hoverboard joined
[23:20] <TimToady> seems more like a units type

[23:20] <yoleaux> 23 Mar 2014 19:16Z <Mouq> TimToady: Should :q be able to escape its starter? This is the same as asking if, e.g. "< \< >" should produce "<" or "\<", considering that "< < >" is a syntax error

[23:20] <yoleaux> 23 Mar 2014 19:42Z <Mouq> TimToady: And is "In addition, the double angles allow for comments beginning with #. These comments work exactly like ordinary comments in Perl code" still valid and just NYI?

[23:22] <TimToady> .tell Mouq yeah, should probably allow :q to \ an opener, and if double angles allow #, it's more because that's how shells work than how Perl works :)

[23:22] <yoleaux> TimToady: I'll pass your message to Mouq.

[23:29] *** kivutar left
[23:37] *** kivutar joined
[23:43] *** skids left
[23:48] *** hoverboard left
[23:57] *** skids joined
[23:58] <skids> r: role A { }; role B does A { }; class C does B { }; C.^roles.say; C.^roles(:all).say;

[23:58] <camelia> rakudo-jvm ffa572, rakudo-moar ffa572: OUTPUT«(B)␤(B)␤»

[23:58] <camelia> ..rakudo-parrot ffa572: OUTPUT«(B)␤too many named arguments: 1 passed, 0 used␤  in any roles at gen/parrot/Metamodel.nqp:2585␤  in block  at /tmp/tmpfile:1␤␤»

