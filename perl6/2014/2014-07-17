[00:03] *** jnap left
[00:04] *** molaf left
[00:06] *** jnap joined
[00:12] *** dayangkun joined
[00:22] *** BenGoldberg left
[00:27] *** jnap left
[00:29] *** btyler left
[00:29] *** hoverboard left
[00:29] *** hoverboard joined
[00:31] *** jnap joined
[00:40] *** BenGoldberg joined
[00:43] <hoelzro> safe travels lizmat

[00:43] *** Akagi201 joined
[00:47] *** Akagi201 left
[00:48] *** xenoterracide_ joined
[01:03] *** baest left
[01:05] *** BenGoldberg left
[01:07] *** baest joined
[01:18] *** slavik joined
[01:26] *** FROGGS_ joined
[01:27] *** Sqirrel_ joined
[01:29] *** Sqirrel left
[01:31] *** FROGGS__ left
[01:35] *** nbrown joined
[01:36] *** klapperl joined
[01:39] *** klapperl_ left
[01:43] <dalek> roast/S26-WHY: c89e17c | (Rob Hoelz)++ | S26-documentation/why-leading.t:

[01:43] <dalek> roast/S26-WHY: Name WHEREFORE tests

[01:43] <dalek> roast/S26-WHY: review: https://github.com/perl6/roast/commit/c89e17c8d5

[01:43] <dalek> roast/S26-WHY: 9194bd1 | (Rob Hoelz)++ | S26-TODO:

[01:43] <dalek> roast/S26-WHY: Notes?

[01:43] <dalek> roast/S26-WHY: review: https://github.com/perl6/roast/commit/9194bd1d29

[01:43] <dalek> roast/S26-WHY: dd2f54e | (Rob Hoelz)++ | S26-documentation/why-leading.t:

[01:43] <dalek> roast/S26-WHY: Fix up WHEREFORE tests

[01:43] <dalek> roast/S26-WHY: review: https://github.com/perl6/roast/commit/dd2f54e8e9

[01:46] *** nbrown left
[01:47] *** slavik left
[01:47] *** jnap left
[01:59] *** chenryn joined
[02:00] *** oJustDust joined
[02:01] *** thou left
[02:02] *** slavik joined
[02:16] *** kweetal left
[02:17] *** Akagi201 joined
[02:17] <dalek> perl6-bench: 998e4b5 | (Geoffrey Broadwell)++ | analyze:

[02:17] <dalek> perl6-bench: Tune and simplify noise avoidance in analyze

[02:17] <dalek> perl6-bench: 

[02:17] <dalek> perl6-bench: The previous formula was strangely complex (why use twice an

[02:17] <dalek> perl6-bench: arbitrary number as the threshold, instead of just doubling the

[02:17] <dalek> perl6-bench: arbitrary number and using that?) and also as jnthn++ discovered

[02:17] <dalek> perl6-bench: too conservative (still too much noise on some platforms).  Drop

[02:17] <dalek> perl6-bench: the 2x multiplier and increase the min_time value by 10x for an

[02:17] <dalek> perl6-bench: effective 5x threshold increase overall.

[02:17] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/998e4b5a98

[02:18] *** noganex_ joined
[02:20] *** noganex left
[02:34] *** thou joined
[02:39] <dalek> roast: 5754fb2 | coke++ | S03-operators/bit.t:

[02:39] <dalek> roast: parrot fudge recent failure RT #122310

[02:39] <dalek> roast: review: https://github.com/perl6/roast/commit/5754fb2614

[02:39] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=122310

[02:53] *** lelf` left
[02:58] *** thou left
[02:59] <[Coke]> how can I fudge a throws_like? if one of the 2 sub tests fails, the test fails. if I todo the test, I get a todo passes.

[03:00] <[Coke]> (if you know the answer, please fudge the throws like for #114134 in S32-exceptions/misc.t for parrot only. :)

[03:00] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=114134

[03:00] <dalek> roast: 7b94f55 | coke++ | S04-phasers/init.t:

[03:00] <dalek> roast: parrot fudge recent failure RT #122311

[03:00] <dalek> roast: review: https://github.com/perl6/roast/commit/7b94f555c3

[03:00] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=122311

[03:04] *** hoverboard left
[03:05] *** oJustDust left
[03:06] *** thou joined
[03:06] <dalek> roast: 8032fc0 | coke++ | S06-routine-modifiers/lvalue-subroutines.t:

[03:06] <dalek> roast: parrot fudge recent failure RT #122313

[03:06] <dalek> roast: review: https://github.com/perl6/roast/commit/8032fc0451

[03:06] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=122313

[03:08] *** FROGGS[mobile] left
[03:09] <[Coke]> It would be great if someone with a copy of rakudo.jvm could fudge the remaining test failures for the release coming up. (I cannot build rakudo.jvm... until I get my new 16G laptop, muahahahah)

[03:11] *** molaf joined
[03:15] *** molaf left
[03:15] *** FROGGS[mobile] joined
[03:16] *** kaare__ joined
[03:18] *** rurban1 joined
[03:29] *** kaleem joined
[03:39] *** kaleem left
[03:40] <hoelzro> [Coke]: I'll give it a look

[03:41] *** SevenWolf left
[03:42] <hoelzro> [Coke]: umm...how exactly does one fudge test failures? =D

[03:46] * hoelzro looks at [Coke]'s commits

[03:57] <dalek> roast/S26-WHY: 3e4bba0 | (Rob Hoelz)++ | S26-documentation/why-trailing.t:

[03:57] <dalek> roast/S26-WHY: Add WHEREFORE tests for trailing comments

[03:57] <dalek> roast/S26-WHY: review: https://github.com/perl6/roast/commit/3e4bba09bf

[03:57] <dalek> roast/S26-WHY: ac7bc2f | (Rob Hoelz)++ | S26-documentation/why-both.t:

[03:57] <dalek> roast/S26-WHY: Add WHEREFORE tests to why-both

[03:57] <dalek> roast/S26-WHY: review: https://github.com/perl6/roast/commit/ac7bc2f97e

[03:57] <dalek> roast/S26-WHY: 55b8914 | (Rob Hoelz)++ | S26-documentation/why-both.t:

[03:57] <dalek> roast/S26-WHY: Cover classes and methods for why-both

[03:57] <dalek> roast/S26-WHY: review: https://github.com/perl6/roast/commit/55b8914861

[03:57] <dalek> roast/S26-WHY: 8da43b1 | (Rob Hoelz)++ | S26-TODO:

[03:57] <dalek> roast/S26-WHY: Remove WHEREFORE from TODO list

[03:57] <dalek> roast/S26-WHY: review: https://github.com/perl6/roast/commit/8da43b161c

[04:03] *** hoverboard joined
[04:05] *** woolfy left
[04:06] *** kaare__ left
[04:06] *** anaeem1_ joined
[04:07] <dalek> roast/S26-WHY: 8a378a1 | (Rob Hoelz)++ | S26-documentation/why- (3 files):

[04:07] <dalek> roast/S26-WHY: Make sure trailing comments on parameters only affect that param

[04:07] <dalek> roast/S26-WHY: review: https://github.com/perl6/roast/commit/8a378a1c64

[04:12] *** chenryn left
[04:21] *** PotatoGim joined
[04:22] <hoelzro> I see the test failures, but I don't know which I should fudge and which I should leave be

[04:22] <hoelzro> I'll ask again when the Europeans are up!

[04:28] <dalek> perl6-bench: 36f0d5e | (Geoffrey Broadwell)++ | microbenchmarks.pl:

[04:28] <dalek> perl6-bench: Add int -> str conversion + non-constant concat tests

[04:28] <dalek> perl6-bench: 

[04:28] <dalek> perl6-bench: This not only tests performance of int -> str conversion (a common

[04:28] <dalek> perl6-bench: operation), but allows the testing of concatenation with non-constant

[04:28] <dalek> perl6-bench: terms (because jnthn++ recently optimized the constant case, which

[04:28] <dalek> perl6-bench: is a valuable common case for users, but testing only the constant

[04:28] <dalek> perl6-bench: variant skews overall performance results).

[04:28] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/36f0d5e07a

[04:36] *** chenryn joined
[04:38] *** kaare__ joined
[04:47] *** chenryn left
[04:56] *** xenoterracide_ left
[05:02] *** chenryn joined
[05:02] *** rurban1 left
[05:05] *** gfldex joined
[05:13] *** kaare__ is now known as kaare_

[05:19] *** thou left
[05:25] *** [Sno] left
[05:33] *** rurban1 joined
[05:39] *** iziguio joined
[05:40] *** iziguio left
[05:40] *** nbrown joined
[05:44] *** nbrown left
[05:46] *** hoverboard is now known as moistcherry

[05:49] <masak> morning, #perl6

[05:53] *** rurban1 left
[05:59] *** labster left
[06:04] *** moistcherry is now known as hoverboard

[06:05] *** chenryn left
[06:06] *** nbrown joined
[06:06] *** chenryn joined
[06:06] *** denis_boyun_ joined
[06:10] <sergot> o/

[06:10] <sergot> morning

[06:10] *** nbrown left
[06:11] *** kweetal joined
[06:17] <Timbus> oh, shifting from an empty list is an exception in perl 6

[06:24] <Timbus> oh. okay, its just a fail object that i was mishandling. eh

[06:25] *** hoverboard is now known as siriustar

[06:27] *** labster joined
[06:29] <dalek> perl6-bench: 1766bbb | (Geoffrey Broadwell)++ | microbenchmarks.pl:

[06:29] <dalek> perl6-bench: Add split_string_{constant,regex} tests

[06:29] <dalek> perl6-bench: 

[06:29] <dalek> perl6-bench: Add tests for splitting a long string using a constant string and a

[06:29] <dalek> perl6-bench: simple regex.  Also fix trim_string's work estimate to match the O(n**2)

[06:29] <dalek> perl6-bench: estimates used for the split tests.

[06:29] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/1766bbb929

[06:29] *** baest_ joined
[06:30] *** telex left
[06:30] *** vendethiel- joined
[06:30] *** ggoebel111119 joined
[06:31] *** [particle] joined
[06:31] *** c1sung_ joined
[06:31] *** denis_boyun__ joined
[06:32] *** telex joined
[06:33] *** zamolxes joined
[06:33] *** japhb__ joined
[06:33] *** Ulti_ joined
[06:33] *** amkrankr1leuen joined
[06:33] *** ponbiki_ joined
[06:33] *** klapperl_ joined
[06:34] *** zamolxes_ left
[06:34] *** c1sung left
[06:34] *** noganex_ left
[06:34] *** baest left
[06:34] *** daxim left
[06:34] *** ggoebel111118 left
[06:34] *** amkrankruleuen left
[06:34] *** dayangkun left
[06:34] *** eternaleye left
[06:34] *** Shozan joined
[06:34] *** Guest9785 left
[06:34] *** felipe left
[06:34] *** pecastro left
[06:34] *** vendethiel left
[06:34] *** ponbiki left
[06:34] *** japhb left
[06:34] *** Ulti left
[06:34] *** [particle]1 left
[06:34] *** denis_boyun_ left
[06:34] *** klapperl left
[06:34] *** jack_rabbit left
[06:34] *** xragnar left
[06:34] *** SHODAN left
[06:34] *** pecastro joined
[06:34] *** bowtie joined
[06:34] *** xragnar joined
[06:34] *** daxim joined
[06:35] *** dayangkun joined
[06:35] *** siriustar is now known as hovercraft

[06:35] *** eternaleye joined
[06:35] *** jack_rabbit joined
[06:39] *** brrt joined
[06:41] *** nbrown joined
[06:44] *** ssutch_ left
[06:52] *** cooper_ left
[06:53] *** hovercraft left
[06:54] *** kaleem joined
[06:54] *** nbrown left
[06:55] *** thou joined
[07:00] *** thou left
[07:03] *** SamuraiJack_ joined
[07:03] *** cooper_ joined
[07:06] *** cooper- joined
[07:10] *** darutoko joined
[07:13] *** baest_ is now known as baest

[07:16] *** Sqirrel_ left
[07:19] *** [Sno] joined
[07:20] *** jack_rabbit left
[07:21] *** chenryn left
[07:24] *** Akagi201 left
[07:25] *** Akagi201 joined
[07:26] *** noganex joined
[07:28] *** Akagi201_ joined
[07:31] *** Akagi201 left
[07:40] *** jack_rabbit joined
[07:46] *** ssutch_ joined
[07:47] *** FROGGS_ is now known as FROGGS

[07:48] *** virtualsue joined
[07:49] *** pecastro left
[07:50] *** ssutch_ left
[07:51] *** liztormato joined
[07:51] *** fhelmberger joined
[07:51] *** brrt left
[07:51] *** brrt joined
[07:52] *** rurban1 joined
[07:52] * liztormato has boarded and should see you all on the other side of the pond

[07:52] *** liztormato left
[07:54] *** jack_rabbit left
[07:55] *** chenryn joined
[07:55] *** fhelmberger left
[07:56] *** rurban1 left
[08:00] *** ssutch_ joined
[08:05] *** ssutch_ left
[08:13] <sergot> m: say buf8.new("Ł".encode);

[08:13] <camelia> rakudo-moar 9e15cc: OUTPUT«Buf:0x<c5 81>␤»

[08:13] <sergot> m: say buf8.new("L".encode);

[08:13] <camelia> rakudo-moar 9e15cc: OUTPUT«Buf:0x<4c>␤»

[08:14] *** kweetal left
[08:27] *** dakkar joined
[08:36] <moritz> m: say "Ł".perl

[08:36] <camelia> rakudo-moar 9e15cc: OUTPUT«"Ł"␤»

[08:36] <moritz> m: say "Ł".encode.perl

[08:36] <camelia> rakudo-moar 9e15cc: OUTPUT«utf8.new(197, 129)␤»

[08:37] <moritz> m: say "Ł".encode

[08:37] <camelia> rakudo-moar 9e15cc: OUTPUT«Buf:0x<c5 81>␤»

[08:38] *** cognominal left
[08:44] *** thou joined
[08:46] *** dmol joined
[08:47] *** klaas-janstol joined
[08:49] *** thou left
[08:49] *** klaas-janstol left
[08:52] *** pecastro joined
[08:53] *** rurban1 joined
[08:53] *** brrt left
[08:57] *** rurban1 left
[09:01] *** ssutch_ joined
[09:02] <dalek> ecosystem: 752af38 | sergot++ | META.list:

[09:02] <dalek> ecosystem: Encode added

[09:02] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/752af38e7d

[09:05] *** ssutch_ left
[09:06] *** fhelmberger joined
[09:08] *** spider-mario joined
[09:20] *** dakkar left
[09:22] *** sftp left
[09:27] *** donaldh joined
[09:28] *** brrt joined
[09:28] *** dakkar joined
[09:29] *** jack_rabbit joined
[09:32] *** denis_boyun__ left
[09:34] *** virtualsue left
[09:35] *** denis_boyun_ joined
[09:36] *** sjn_ joined
[09:38] *** jack_rabbit left
[09:44] *** chenryn_ joined
[09:44] *** chenryn left
[09:45] *** Timbus left
[09:46] *** Timbus joined
[09:51] *** tgt joined
[09:53] *** lelf joined
[09:54] *** rurban1 joined
[09:58] *** chenryn_ left
[10:00] *** rurban1 left
[10:00] *** Akagi201_ left
[10:02] *** ssutch_ joined
[10:04] <ren1us> apparently if you run qqx{perl6} from the interpreter, it hangs so hard that even ctrl+C does nothing.

[10:05] *** cognominal joined
[10:06] *** chenryn_ joined
[10:06] *** ssutch_ left
[10:08] <moritz> well, it tries to read from STDIN

[10:10] <ren1us> i can see why it's misbehaving, but i feel like then going on to disregard what's essentially a de-facto kill signal in the original stdin is a bit much, even though that particular scenario is dirty in its own right

[10:16] *** chenryn_ left
[10:32] *** thou joined
[10:37] *** thou left
[10:39] *** brrt left
[10:42] *** chenryn_ joined
[10:46] *** carlin joined
[10:46] *** spider-mario left
[10:48] *** SamuraiJack_ left
[10:51] <moritz> ren1us: agreed

[10:51] *** SamuraiJack joined
[10:52] *** donaldh left
[10:52] *** nbrown joined
[10:57] *** nbrown left
[10:57] *** rurban1 joined
[10:59] *** spider-mario joined
[11:01] *** rurban1 left
[11:03] *** ssutch_ joined
[11:07] *** ssutch_ left
[11:17] *** chenryn_ left
[11:18] *** chenryn_ joined
[11:24] <eiro> hello #perl6

[11:25] <moritz> eiro/

[11:29] <masak> \eiro

[11:31] *** virtualsue joined
[11:34] <carlin> if a MoarVM change will affect how perl6 code works, should that be mentioned in rakudo's changelog?

[11:34] <carlin> specifically file creation operations now give default permissions of 0666

[11:34] <carlin> whereas in the previous release they were given something bizzare like 4777

[11:34] * masak thinks it should

[11:34] <hoelzro> morning #perl6

[11:43] <masak> ahojelzro \o

[11:46] <carlin> https://github.com/rakudo/rakudo/pull/290/files # pull req updating ChangeLog

[11:47] <dalek> rakudo/nom: b2e65d8 | Carlin++ | docs/ChangeLog:

[11:47] <dalek> rakudo/nom: Update ChangeLog with DateTime and file changes

[11:47] <dalek> rakudo/nom: 

[11:47] <dalek> rakudo/nom: DateTime.new was changed

[11:47] <dalek> rakudo/nom: MoarVM change affects file creation permissions

[11:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b2e65d8278

[11:47] <dalek> rakudo/nom: b62d3e9 | moritz++ | docs/ChangeLog:

[11:47] <dalek> rakudo/nom: Merge pull request #290 from carbin/patch-1

[11:47] <dalek> rakudo/nom: 

[11:47] <dalek> rakudo/nom: Update ChangeLog with DateTime and file changes

[11:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b62d3e9bed

[11:49] <timotimo> the changelog should say something about tr///

[11:49] <masak> well volunteered!

[11:50] <timotimo> not sure how to spell the change, though

[11:50] <carlin> moritz++ # thanks :)

[11:50] <hoelzro> does fudging still need to be done for the JVM?

[11:51] *** chenryn_ left
[11:51] <dalek> rakudo/nom: 2cf53c7 | timo++ | docs/ChangeLog:

[11:51] <dalek> rakudo/nom: mention tr/// by psch++

[11:51] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2cf53c7fdf

[11:52] <eiro> is there a way to write something like "match as many <attr> as possible, no matter the LTM rule" ?

[11:52] <eiro> https://github.com/eiro/p6-lab/blob/master/sexml.p6

[11:53] <timotimo> please be more specific?

[11:53] <eiro> i'm working on this and the pb is <content>* can match the same than <attr>* 

[11:53] <eiro> (line 6)

[11:53] <betterworld> maybe if you use "regex" instead of token and rule

[11:54] <eiro> so my attributes are slurped in the <content> match

[11:55] <eiro> betterworld, worth :) because the :lang{fr} is slurped 

[11:55] <timotimo> token is like regex, except :ratchet, rule is like token except :sigspace

[11:55] <timotimo> eiro: maybe you want to have data have <!before ':'>?

[11:56] *** tgt left
[11:56] *** anaeem1_ left
[11:56] * eiro dive back in the doc. thanks for the clue, timotimo 

[11:57] <betterworld> timotimo: yeah, so without :ratchet there will be more backtracking, which seems to be what eiro asked for :)

[11:57] *** carlin left
[11:57] <timotimo> that could help, aye

[11:57] *** carlin joined
[11:57] *** rurban1 joined
[11:59] * eiro really have to understand backtracking control

[11:59] <moritz> more backtracking is rarely the right answer

[12:00] <moritz> the right answer is usually to factor out common prefixes into a single rule

[12:01] <eiro> the problem here is that data can accept almost everything

[12:01] <eiro> (as prefix)

[12:02] *** rurban1 left
[12:02] <timotimo> except ':' :)

[12:02] *** mr-foobar left
[12:03] *** mr-foobar joined
[12:03] *** ssutch_ joined
[12:04] <moritz> so, <-[:]>* ?

[12:05] <timotimo> i think only the very first character mustn't be a :

[12:05] <moritz> or possibly <-[:]>*?

[12:05] <moritz> or <-[:]>.*?

[12:05] <timotimo> it seems like the data begins with [':' <ident>] % [\s+]

[12:06] <timotimo> er, i mean

[12:06] <timotimo> before the data, you want to match*

[12:08] *** FROGGS[mobile] left
[12:08] <moritz> missing quantifier?

[12:08] *** ssutch_ left
[12:08] <moritz> on the LHR of the %

[12:08] <eiro> right! actually  ':'\S | <-[:]> 

[12:09] <eiro> ooh... i'm reading the timotimo's subrule 

[12:09] *** thou joined
[12:11] *** spider-mario left
[12:15] *** jnap joined
[12:16] *** spider-mario joined
[12:17] *** carlin left
[12:18] <masak> .u >

[12:18] <yoleaux> U+003E GREATER-THAN SIGN [Sm] (>)

[12:21] <hoelzro> wow, spectests take a long time on the JVM

[12:22] *** Alina-malina joined
[12:30] <sergot> .u ½

[12:30] <yoleaux> U+00BD VULGAR FRACTION ONE HALF [No] (½)

[12:30] <sergot> .u ¾

[12:30] <yoleaux> U+00BE VULGAR FRACTION THREE QUARTERS [No] (¾)

[12:31] <jnthn> Those numbers. They're so tasteless.

[12:32] <hoelzro> is there any reason that GrammarHOW is not Documenting?  I feel like a Grammar should also be able to have a WHY

[12:33] <jnthn> hoelzro: It is, by inheriting from ClassHOW, iirc.

[12:33] <masak> jnthn: you probably know this, but that sense of "vulgar" essentially means "common" ;)

[12:33] *** anaeem1 joined
[12:34] <timotimo> so "vulgar speech" is distasteful because it's used by the "common folk" who are, of course, plebian, uneducated and in general not to be spoken to except for by your underlings?

[12:35] *** Alina-malina left
[12:36] *** Alina-malina joined
[12:36] <jnthn> No shit.

[12:36] *** xenoterracide_ joined
[12:36] <jnthn> Of course, by now I'm looking up the etymology of vulgar fraction... :)

[12:36] <arnsholt> In Latin, "vulgus" is "the crowd" or "the masses" =)

[12:37] <jnthn> Ah... "Vulgar turned up first in English in the fourteenth century and then referred to something that was in common or general use or something customary or done as a matter of everyday practice. There was nothing disapproving about it."

[12:37] <timotimo> ah

[12:37] * masak enjoyed http://blog.plover.com/prog/perl/barewords-setup.html and its follow-up

[12:38] <jnthn> And wasn't until the 17th century it started to take on the other meaning.

[12:38] <masak> jnthn: similarly, a lot of plants have "vulgaris" in their name, not because they are bad, but because they are common.

[12:39] *** Urgoster joined
[12:39] <Urgoster> perl6: say 3;

[12:40] <camelia> rakudo-jvm 2cf53c: OUTPUT«(timeout)»

[12:40] <camelia> ..rakudo-{parrot,moar} 2cf53c, niecza v24-109-g48a8de3: OUTPUT«3␤»

[12:41] *** Ven joined
[12:42] *** Urgoster left
[12:42] <Ven> o/

[12:47] *** kaare_ left
[12:52] <hoelzro> jnthn: oh, really?

[12:52] <hoelzro> hmm

[12:52] <hoelzro> oh, I think I understand why my documentating code doesn't work for it, then

[12:52] <hoelzro> does nqp::getattr respect inheritance?

[12:52] <timotimo> you always have to supply the class that initially declared the attribute

[12:52] <timotimo> thus, the answer is Mu :)

[12:53] <hoelzro> ah ha

[12:53] <hoelzro> bummer

[12:53] <hoelzro> but that's why my thing doesn't work for grammars

[12:53] <timotimo> huh?

[12:54] <jnthn> Why are you doing getattr?

[12:54] <timotimo> if you nqp::getattr($the_thing, ClassHOW, '$!why') should work even if $the_thing is a GrammarHOW

[12:54] <hoelzro> hang on, I'll pull up the code

[12:54] <jnthn> Don't violate encapsulation of meta-objects; add a method.

[12:54] <timotimo> mhm

[12:55] <hoelzro> https://github.com/hoelzro/rakudo/blob/S26-WHY/src/Perl6/Actions.nqp#L2081

[12:55] <hoelzro> hmm

[12:56] <hoelzro> I'm sure this branch will undergo some rigorous criticism once I'm done with it =)

[12:56] <timotimo> that'll just mean your next branch will be better :3

[12:56] <jnthn> yeah, add a method, don't getattr it

[12:58] *** rurban1 joined
[12:58] <hoelzro> ok

[12:58] <hoelzro> I'll do that

[13:03] *** anaeem1 left
[13:04] *** rurban1 left
[13:04] *** ssutch_ joined
[13:08] *** ssutch_ left
[13:09] <Ven> should [] only accept operators that are monoids ?

[13:10] <Ven> (in [+], [*]. to have the monoid's zero element)

[13:11] <Ven> m: say [//] 0, 1, 2;

[13:11] <camelia> rakudo-moar 2cf53c: OUTPUT«0␤»

[13:11] <Ven> m: say [//] ();

[13:11] <camelia> rakudo-moar 2cf53c: OUTPUT«(Any)␤»

[13:12] *** guru joined
[13:12] *** guru is now known as Guest64031

[13:12] *** Guest64031 is now known as ajr_

[13:18] <Ven> Now I'm wondering. Is perl 6 a racket dialect, or is racket a perl 6 slang ?

[13:19] <Ven> .oO( #lang perl6, and now watch the world burn ) (sorry, I'm doing some racket macros/templates, and they look really cool, and I wonder in what sense could we bring them on for p6)

[13:20] * [Coke] sits on a presentation about AWS and wonders if we could be taking advantage.

[13:22] *** rurban1 joined
[13:22] <timotimo> amazon web services?

[13:27] *** carlin joined
[13:28] <moritz> Awesome Web Shit?

[13:33] <masak> Applications With Snowmen?

[13:35] <jnthn> Asteroids With Snowmen? :)

[13:36] <moritz> Altruists With Swords? :-)

[13:36] * jnthn still counts the comet/snowman thing as one of his favorite Rakudo parsing bugs :)

[13:38] * masak .oO( benefit humanity with your swords, altruists! )

[13:38] * Ven kinda WATs, but doesn't mind the snowmen

[13:38] <Ven> ok, google was accurate

[13:44] *** thou left
[13:45] <arnsholt> How did that parsing bug happen though?

[13:45] <arnsholt> Some kind of Unicode-bug, I suppose?

[13:47] *** brrt joined
[13:48] <jnthn> I think so :)

[13:48] *** btyler joined
[13:50] *** xenoterracide_ left
[13:50] <Ven> .oO( I've fixed so many bugs, I can't even remember what the snowmen did )

[13:52] <masak> mostly the snowmen act as comic relief for the main plot with the two sisters.

[13:57] <masak> srsly though, I don't think the snowman-comet parsing bug ever got an explanation. at least I never heard one.

[13:57] <masak> it also didn't really get a specific fix -- an older parsing engine just got swapped for a newer one.

[13:57] <PerlJam> masak: let it go, man.  Let it go.

[13:57] <masak> :P

[13:58] <carlin> it's one of things where you're better off not knowing

[13:58] *** bluescreen10 joined
[13:59] <masak> I dunno. at least it would have made for an interesting blog post :)

[14:03] *** itz__ joined
[14:03] *** kaleem left
[14:04] *** sjn_ left
[14:05] *** itz_ left
[14:05] *** ssutch_ joined
[14:05] *** [Sno] left
[14:05] <muraiki> Ven: yeah, racket macros are really nice

[14:07] <muraiki> here's a neat article about creating a text adventure DSL using syntax-rule: http://cacm.acm.org/magazines/2012/1/144809-creating-languages-in-racket/fulltext

[14:07] <Ven> s#langs :P

[14:08] <PerlJam> Hmm ... that feels very familiar.

[14:08] <PerlJam> almost masakish. :)

[14:09] <masak> ok, that piqued my interest.

[14:09] * masak looks

[14:09] *** ssutch_ left
[14:10] *** lelf left
[14:14] *** denis_boyun_ left
[14:15] *** denis_boyun_ joined
[14:16] *** kaare_ joined
[14:16] <Ven> muraiki++ # helping me to get masak++ to get a look ;)

[14:17] <muraiki> :D

[14:22] *** ssutch_ joined
[14:22] *** brrt left
[14:23] *** guru joined
[14:24] *** lelf joined
[14:24] *** guru is now known as Guest28288

[14:29] <hoelzro> I think the reason I avoided methods for my S26 stuff is I didn't want to "contaminate" the meta object API

[14:30] <hoelzro> is there a way to remove methods on meta objects before handing control over to the script/repl?

[14:31] *** ajr_ left
[14:31] <jnthn> hoelzro: That's the wrong way to see it.

[14:31] <jnthn> hoelzro: The point of having a meta-object API is that you can programatically construct the things the compiler constructs.

[14:32] <hoelzro> oh

[14:32] <hoelzro> I see

[14:32] <hoelzro> that...makes a lot of sense, actually

[14:32] <hoelzro> I wonder, then

[14:32] <hoelzro> if instead of explicitly fixing the WHEREFORE for a WHY

[14:32] <hoelzro> I should fix it in the WHY accessor

[14:33] <hoelzro> because if a user were told, "oh yeah, you have to call obj.fix_wherefore", that would be kind of dumb.

[14:34] <Ven> I can define a lazy function macro in racket in 7 lines. Let's try with p6 now ..

[14:34] <jnthn> I'm not intimately familiar with the problem you're working on, but it sounds like a better design to have it that way :)

[14:36] *** xinming_ left
[14:36] <hoelzro> jnthn: I'm just fixing up Rakudo to comply with S26

[14:38] <Ven> Well, I'm not sure macros in their current state can do what I'd like them to, hmm.

[14:39] <PerlJam> Ven: careful ... you might accidentally volunteer to fix them  ;)

[14:39] <Ven> PerlJam: I'd probably do it, if I were in holidays, and had more free time on my hands.

[14:40] <Ven> well, I can write a `lazy` sub easily enough and `my &a =` it, but it's not really the same,.

[14:42] *** xinming joined
[14:44] *** Alula_ left
[14:48] *** pochi left
[14:49] *** brrt joined
[14:49] *** brrt left
[14:49] *** treehug88 joined
[14:50] *** Alula_ joined
[14:53] *** cognominal__ joined
[14:53] *** darutoko- joined
[14:54] *** virtualsue_ joined
[14:56] *** jnap left
[14:56] *** jnap joined
[14:58] *** cooper__ joined
[14:58] *** SHODAN joined
[15:02] *** xinming left
[15:02] *** Timbus left
[15:02] *** bowtie left
[15:02] *** Shozan left
[15:02] *** virtualsue left
[15:02] *** cognominal left
[15:02] *** dmol left
[15:02] *** darutoko left
[15:02] *** cooper_ left
[15:02] *** eternaleye left
[15:02] *** virtualsue_ is now known as virtualsue

[15:03] *** Timbus joined
[15:04] *** chenryn_ joined
[15:04] *** xinming joined
[15:05] *** eternaleye joined
[15:06] *** denis_boyun_ left
[15:07] *** bowtie joined
[15:07] *** dmol joined
[15:09] *** chenryn_ left
[15:13] *** Guest28288 left
[15:14] *** guru joined
[15:14] *** guru left
[15:16] *** kaleem joined
[15:18] *** tgt joined
[15:25] *** tgt left
[15:32] <FROGGS> everybody: please update the changelog if needed! today is release day

[15:34] <hoelzro> \o/

[15:34] <hoelzro> FROGGS: do the upcoming changes to #= merit mention?

[15:34] <FROGGS> hmmmm

[15:35] <FROGGS> can we put it in when we know what happened to #=? :o)

[15:35] <hoelzro> I'm hoping to have them ready for 2014.08

[15:35] <hoelzro> #= means "leading doc" at the moment

[15:35] <hoelzro> it's changing to mean "trailing doc"

[15:35] <hoelzro> "use #| if you want leading docs"

[15:36] <FROGGS> let's do that when it is done, so ppl an play with it... okay?

[15:36] <PerlJam> that seems backwards to me btw.

[15:36] <FROGGS> we usually do not mention upcoming changes

[15:36] <PerlJam> at least huffman-wise

[15:37] <PerlJam> (or maybe I just like #= more then #| :)

[15:38] <carlin> japhb_ recommended a couple of days ago that it be mentioned in the changelogs as a deprecation warning

[15:39] <hoelzro> ok

[15:39] <FROGGS> is something already deprecated?

[15:39] <hoelzro> someone recommended mentioning it a few days, so I thought I'd bring it up

[15:40] <PerlJam> IF it generates a deprecation warning, that might deserve a mention.

[15:40] <FROGGS> because I don't like to announce something that might change a little due to upcoming discussions

[15:40] <PerlJam> If it doesn't, then I'd save it to the next release

[15:40] <PerlJam> (just MHO)

[15:40] <FROGGS> PerlJam: mine too

[15:41] <hoelzro> should we make it generate one for 2014.07?

[15:41] *** sftp joined
[15:41] <hoelzro> speaking of discussions, should I mention this on perl6-compilers?

[15:42] <PerlJam> hoelzro: first off ... how?  The construct will still exist, just that its semantics will change.  How do you "deprecate" semantics?

[15:42] <hoelzro> I always assumed it would be ok, since it would be updating Rakudo to be in line with the spec

[15:42] <hoelzro> hmm

[15:42] <hoelzro> good point

[15:48] *** Ven left
[15:49] *** dayangkun left
[15:50] *** kaleem left
[15:51] *** anaeem1 joined
[16:08] *** fhelmberger left
[16:11] *** thou joined
[16:14] *** xinming left
[16:15] *** xinming joined
[16:18] *** noganex left
[16:20] *** btyler left
[16:22] *** btyler joined
[16:24] *** anaeem1__ joined
[16:26] *** anaeem1 left
[16:33] *** pecastro left
[16:34] *** carlin left
[16:37] *** noganex joined
[16:42] <japhb_> Re: #= deprecation, my concern was mostly that we've been using it and producing sample code with the current usage for a while.  Which means that I suspect a fair number of people may have USAGE info that points to the wrong multis after the change, and that will surprise people.

[16:42] <japhb_> (I know I will.)

[16:47] *** carlin joined
[16:53] *** molaf joined
[16:54] *** felipe joined
[16:54] *** dakkar left
[17:00] *** hoverboard joined
[17:04] *** census joined
[17:06] *** thou left
[17:07] *** thou joined
[17:10] *** wolfram_ joined
[17:13] <wolfram_> Please hlep me -- what perl version was it that changed the meaning of 'print(two + two == five ? "true" : "false")' in the 17th century? (http://irclog.perlgeek.de/perl6/2014-07-17#i_9038417)

[17:14] <huf> :D

[17:14] <huf> wolfram_: wait, is that a serious question?

[17:15] *** xinming_ joined
[17:15] <wolfram_> Only if you can provide firsthand experience from that time :-)

[17:16] *** virtualsue left
[17:16] <huf> i've been alive for millions of years dude

[17:17] <wolfram_> (Couldn't resist to mogrify from useless lurker to useless contributor for that...)

[17:18] *** xinming left
[17:18] *** wolfram_ left
[17:21] *** lelf left
[17:24] *** nbrown joined
[17:25] <dalek> roast: 32ca69c | (Tobias Leich)++ | S32-io/IO-Socket-Async.t:

[17:25] <dalek> roast: mark flapping test as TODO

[17:25] <dalek> roast: review: https://github.com/perl6/roast/commit/32ca69cdbb

[17:26] *** muraiki left
[17:28] <timotimo> dalek: that'll turn an OK/NOT OK test into an OK #TODO/NOT OK #TODO test 

[17:28] <timotimo> er... i meant FROGGS -^

[17:28] <timotimo> is that an improvement?

[17:29] <FROGGS> timotimo: the spectest does not fail now, so I'd say yes

[17:29] *** Sqirrel joined
[17:29] *** nbrown left
[17:29] *** pochi joined
[17:29] <timotimo> OK

[17:29] *** rurban1 left
[17:31] *** muraiki joined
[17:32] <timotimo> walk &

[17:37] *** rurban1 joined
[17:39] *** hoverboard is now known as moistcherry

[17:47] *** census left
[17:52] <[Coke]> TODOing flapping tests is not helpful.

[17:52] <[Coke]> also: do not fudge tests without a ticket if possible.

[17:52] <masak> +1

[17:53] <masak> maybe flapping tests should be isolated/quarantined into their own directory instead?

[17:53] <[Coke]> here's why it's not helpful. what happens when this test passes for someone - shoudl they untodo it?

[17:53] <[Coke]> How can they tell if it's fixed, or if it flapped?

[17:53] <FROGGS> tadzik / moritz / colomon / xfix: https://github.com/tadzik/Bailador/pull/11 # please merge in case you have commit bit

[17:55] <FROGGS> [Coke]: at least on my box that test passes like four times out of five, so one can see that there is something going on...

[17:55] <FROGGS> what I don't like about skipping them (with a ticket), is that they just are ticketed and forgotten then

[17:56] <FROGGS> TAP has no proper way to mark something flapping, so I am not sure what is better than TODO-ing it

[17:57] *** spider-mario left
[17:57] <dalek> specs: 635fb4c | coke++ | S99-glossary.pod:

[17:57] <dalek> specs: Define "flap"

[17:57] <dalek> specs: review: https://github.com/perl6/specs/commit/635fb4cb62

[17:57] <[Coke]> FROGGS: you leave it open, and mark it with a ticket.

[17:57] <masak> FROGGS: we don't need to mark it up with TAP. we can mark it up any way we want.

[17:58] <FROGGS> [Coke]: what do you mean by 'leave it open', what is 'it' in this sentence?

[17:58] <[Coke]> "ticketed and forgotten" - better to be ticketed and fudged and forgotten than just fudged and forgotten. (there are nearly 900 fudges for rakudo that are not ticketed, "unspecced", or "NYI" at the moment)

[17:58] <[Coke]> do not fudge the test.

[17:59] <[Coke]> either skip it, or leave it running. 

[17:59] <FROGGS> [Coke]: I will not release with failing spectests

[17:59] <[Coke]> in either case, it needs a ticket.

[17:59] <FROGGS> I am about to ticket it right now

[17:59] <[Coke]> then skip it. I don't want a release with passing todos.

[17:59] <FROGGS> k

[18:00] <[Coke]> "all tests pass " >> "some todo'd tests pass" >> "any test failed"

[18:01] <[Coke]> Should continue to include "flap" somewhere in the fudge directive so it's not blindly auto-unfudged later.

[18:01] <[Coke]> FROGGS++

[18:02] *** thou left
[18:03] <masak> consensus++

[18:03] *** Isp-sec joined
[18:03] <dalek> rakudo-star-daily: 0cb7ef5 | coke++ | log/ (14 files):

[18:03] <dalek> rakudo-star-daily: today (automated commit)

[18:03] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/0cb7ef58b9

[18:03] <dalek> perl6-roast-data: 1e09f7d | coke++ | / (5 files):

[18:03] <dalek> perl6-roast-data: today (automated commit)

[18:03] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/1e09f7dcd2

[18:04] <[Coke]> I see 21 JVM failures, 28 moar failures (you skipped bytes_suppy - echo server failed on the daily run today), and list/uniq aborted 26 tests.

[18:05] <[Coke]> there is one failure in parrot which is a leftover question I had from yesterday: how do you todo a -subtest-

[18:05] <[Coke]> 2 subests, one failing: todo the test, you get a todo passed; leave it alone, you get a failure.

[18:06] <[Coke]> I hate to skip it, but it seems the cleanest answer.

[18:08] <dalek> roast: 121df26 | (Tobias Leich)++ | S32-io/IO-Socket-Async.t:

[18:08] <dalek> roast: skip flapping test, see RT #122318

[18:08] <dalek> roast: review: https://github.com/perl6/roast/commit/121df26f48

[18:08] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=122318

[18:09] *** [Sno] joined
[18:10] <FROGGS> okay, star-m also passes here

[18:10] <FROGGS> star-p seems problematic

[18:11] <[Coke]> S32-io/IO-Socket-Async.t 4 - Echo server

[18:11] <[Coke]> S32-io/IO-Socket-Async.t 6 - bytes_supply

[18:11] <[Coke]> S32-list/uniq.t aborted 26 test(s)

[18:11] <[Coke]> those are the failures in the daily run, fwiw.

[18:11] <FROGGS> yeah

[18:12] <FROGGS> I've not seen these fails (except IO-Async #6) on my box

[18:12] <[Coke]> (for moar)

[18:12] <timotimo> i ended up not really walking much. instead i got to pet a kittehs tummeh

[18:13] <FROGGS> timotimo: a what?

[18:14] <[Coke]> FROGGS: http://cutearoo.com/wp-content/uploads/2011/07/Kitten5.jpg

[18:14] *** spider-mario joined
[18:14] <FROGGS> what is a tummeh?

[18:15] <[Coke]> "tummy"

[18:15] * masak guesses "stomach"

[18:15] <nwc10> I think tummeh is to ketteh as tummy is to kitten

[18:15] <[Coke]> yes, that

[18:18] *** aoseki joined
[18:18] <FROGGS> ahh :o)

[18:18] <FROGGS> well yes, that's certainly better than walking :o)

[18:19] * [Coke] needs to write a jabber bot, and wonders if he could finagle it to be in perl6.

[18:19] *** SamuraiJack left
[18:19] <huf> you mean welkehng?

[18:19] *** SamuraiJack joined
[18:20] *** akaseki left
[18:20] *** rindolf left
[18:21] <retupmoca> [Coke]: I have a Net::XMPP module that should handle the basics (theoretically), although it doesn't handle roster/contacts for you at all

[18:21] <retupmoca> [Coke]: I'd be happy to develop it more if you open issues for features/bugs

[18:22] <retupmoca> it'll even support TLS as soon as I figure out how to upgrade a standard socket to a SSL/TLS connection

[18:24] *** Alina-malina left
[18:27] *** SamuraiJack left
[18:30] <[Coke]> secure connection might be required; checking...

[18:31] <retupmoca> secure connection can be done if the server supports the old-style ssl connection in addition to STARTTLS

[18:31] <retupmoca> I just don't know how to do STARTTLS with the current OpenSSL bindings

[18:31] <[Coke]> config.setSASLAuthenticationEnabled(true); // all the info I have at the moment.

[18:36] *** guru joined
[18:36] *** guru is now known as Guest7598

[18:37] *** Guest7598 is now known as ajr_

[18:38] *** treehug88 left
[18:41] <retupmoca> sasl is separate from SSL

[18:41] <retupmoca> I think Net::XMPP only supports one SASL method right now, though

[18:42] <retupmoca> don't know what methods your server supports

[18:49] <[Coke]> me neither; I had a java bot that just connected and echo'd, that's dea now, need to figure out what happened.

[18:55] *** sjn left
[18:56] *** darutoko- left
[19:01] *** Alina-malina joined
[19:01] <carlin> there are some failing tests in S32-temporal/local.t but they won't automatically run on most systems

[19:03] <FROGGS> m: say nqp::gethllsym('perl6', 'P6EX');

[19:03] <camelia> rakudo-moar 2cf53c: OUTPUT«("X::Assignment::RO" => sub (Any $typename = { ... }) { #`(Sub+{<anon>}|139948762856144) ... }, "X::ControlFlow::Return" => sub () { #`(Sub+{<anon>}|139948762855928) ... }, "X::Multi::Ambiguous" => sub (Any $dispatcher, @ambiguous) { #`(Sub+{<anon>}|139948…»

[19:03] <FROGGS> p: say nqp::gethllsym('perl6', 'P6EX');

[19:03] <camelia> rakudo-parrot 2cf53c: OUTPUT«("X::Assignment::RO" => sub (Any $typename = { ... }) { #`(Sub+{<anon>}|1956344805137267409) ... }, "X::ControlFlow::Return" => sub () { #`(Sub+{<anon>}|1956344805143578829) ... }, "X::Multi::Ambiguous" => sub (Any $dispatcher, @ambiguous) { #`(Sub+{<ano…»

[19:03] <FROGGS> hmmm....

[19:07] <[Coke]> carlin: thanks for the reminder.

[19:07] *** thou joined
[19:08] *** virtualsue joined
[19:09] <[Coke]> ah, that's not an env var, that's an evil hardcoded linux only hack.

[19:09] *** ssutch_ left
[19:09] *** dwarring joined
[19:10] *** treehug88 joined
[19:11] <[Coke]> carlin - it would be nice if you could open a ticket reminding us to make those tests a little more amenable to actually getting run.

[19:12] *** kaiserpathos joined
[19:16] *** virtualsue left
[19:20] *** virtualsue joined
[19:28] *** Ven joined
[19:30] *** Ven left
[19:35] <[Coke]> .seen donaldh

[19:35] <yoleaux> I saw donaldh 4 Jul 2014 14:16Z in #perl6: * donaldh imagines some kind of temporal instability

[19:35] <[Coke]> .ask donaldh - can you add some notes to the README for perl6-eclipse-plugin about how to install it in eclipse?

[19:35] <yoleaux> [Coke]: I'll pass your message to donaldh.

[19:40] *** pecastro joined
[19:46] <[Coke]> retupmoca: do you support connecting via an http proxy?

[19:47] <retupmoca> [Coke]: Not directly; but you can pass in an already connected socket and it'll use that

[19:48] <retupmoca> [Coke]: If you're using a SOCKS proxy, there's a Net::SOCKS module I've built that you can use to make a socket to pass in

[19:51] <vendethiel-> .seen pmichaud

[19:51] <yoleaux> I saw pmichaud 19 Jun 2014 22:06Z in #perl6: <pmichaud> moving there

[19:55] *** Ven joined
[19:56] *** moistcherry is now known as hoverboard

[20:01] *** anaeem1__ left
[20:03] * retupmoca just realized he hasn't written any tests or docs for Net::XMPP

[20:03] <retupmoca> I suppose that's the first thing I should improve

[20:03] *** pochi left
[20:03] *** anaeem1 joined
[20:04] *** wtw left
[20:09] *** virtualsue left
[20:12] <dalek> roast: 7ab6b34 | (David Warring [email@hidden.address] | integration/advent2011-day24.t:

[20:12] <dalek> roast: adding advent 2011 day 24

[20:12] <dalek> roast: review: https://github.com/perl6/roast/commit/7ab6b3400e

[20:13] *** pecastro left
[20:16] *** pecastro joined
[20:22] *** gfldex left
[20:27] *** nbrown joined
[20:31] *** nbrown left
[20:33] *** Ven left
[20:34] *** kaare_ left
[20:38] <dalek> roast: f271d8c | (David Warring [email@hidden.address] | integration/advent2011-day24.t:

[20:38] <dalek> roast: fixed TAP

[20:38] <dalek> roast: review: https://github.com/perl6/roast/commit/f271d8c484

[20:39] <TimToady> well, I am now allowed to read a little, so I can at least drop in and say "hi"

[20:39] <yoleaux> 11 Jul 2014 20:07Z <pippo> TimToady: I hope all goes well with your eyes. Best wishes.

[20:41] <FROGGS> TimToady: hi :o)

[20:41] <masak> hi TimToady 

[20:41] <FROGGS> TimToady: did it went well?

[20:41] *** Ven joined
[20:43] <TimToady> pretty well, I ended up with three different detachments, so they just riveted my retina all the way around, and it seems to be holding nicely

[20:43] <[Coke]> TimToady: Eye can't believe you didn't pun that up.

[20:43] <TimToady> I see...

[20:43] *** Ven left
[20:43] <[Coke]> hugme: hug TimToady 

[20:43] * hugme hugs TimToady

[20:43] * FROGGS groans a little... but smiles

[20:44] <TimToady> the only bad news is that I apparently have some nerve damage to part of my macula, which may or may not recover

[20:44] <FROGGS> eww

[20:44] <FROGGS> that means your eyesight is LTA?

[20:45] <timotimo> TimToady: o/

[20:45] <timotimo> hope you're getting better soon!

[20:45] <TimToady> so I have a spot right below my fovea (as I view it) that's looks kind of like a leech, with its tail extending over to my optic disk where the nerve comes in

[20:45] <FROGGS> or does that mean that it is exhausting to read/look?

[20:45] <FROGGS> ahh

[20:45] <TimToady> They told me not to read for the first week

[20:45] <TimToady> didn't want things sloshing around too much

[20:46] <[Coke]> we can probably find an intern to ready you the backscroll...

[20:46] <jnap> best of luck TimToady, my best friend has been losing his eyesight for the past 10 years in drips and drabs, and all I ca say is that its great we live in an era of affordable large and bright monitors

[20:46] <FROGGS> yeah... understandable

[20:46] <TimToady> inside is currently about 70% gas and 30% water

[20:46] <TimToady> jnap: well, fortunately I still have a good eye too :)

[20:47] <TimToady> I think I'd still be able to read with the bad eye if I look below the line

[20:47] <jnap> that will help, just is a nice excuse to always make other people drive

[20:47] *** lelf joined
[20:47] <TimToady> but can't tell anything refractive currently, since air and water are so different

[20:47] <[Coke]> TimToady: OOOH, do you have an eye patch?

[20:47] <TimToady> well, it's "air", with some percentage of perfluro propane

[20:48] <TimToady> I did the first few nights :)

[20:48] *** daxim left
[20:48] <TimToady> so, Aye!!!

[20:48] *** thou left
[20:48] <TimToady> jnap: well, actually, I like to dirve

[20:48] <TimToady> er, drive

[20:48] * TimToady blames his bad eye :)

[20:49] <TimToady> looks straight down is odd because it's sloshy

[20:49] <TimToady> since that's where the puddle is

[20:50] <masak> tonight's little group theory fun: https://gist.github.com/masak/0c4496b90e2aebf98062

[20:50] <TimToady> oh, and also my iris seems to be stick open for now, probably just overdid on the atropine,

[20:50] <masak> I have a very weird effect wherein the last block in that gist doesn't seem to run. the rest works fine, though.

[20:50] <TimToady> but the cool thing about is that I don't have PERL :)

[20:50] <TimToady> (Pupils Equal and Reactive to Light)

[20:52] <dalek> rakudo/nom: 2647500 | (Tobias Leich)++ | src/vm/parrot/guts/bind.c:

[20:52] <dalek> rakudo/nom: [parrot] throw typed exeption X::TypeCheck::Binding

[20:52] <dalek> rakudo/nom: 

[20:52] <dalek> rakudo/nom: Only JVM throws still an X::AdHoc.

[20:52] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2647500744

[20:53] <FROGGS> PERL doesn't sound as if it was a bad thing

[20:54] <TimToady> it's a good thing, but I ain't got it at the moment

[20:54] <FROGGS> ahh

[20:55] <TimToady> I think I got an extra dose of atropine because a different doctor looked at my eye earlier in the day of the surgery

[20:55] <TimToady> so it might stay that way another week

[20:56] *** wtw joined
[20:56] <TimToady> is likely to get better though, unlike the other neuropathy, which I deem to be permanent probably, but then I'll be happily surprised if it isn't :)

[20:57] <TimToady> maybe I can be a guinea pig for retinal regeneration someday, which would be cool

[20:58] *** vendethiel- left
[20:59] <segomos> what do you have?

[20:59] <segomos> or why were they looking at your eye?

[21:00] * TimToady had two emergency eye surgeries last week

[21:00] <TimToady> multiply detached retina

[21:00] <TimToady> (no apparent cause, other than just my bad eye getting worse...)

[21:00] <segomos> ouch

[21:01] <segomos> was it repaired aside from the atropine OD?

[21:01] <TimToady> they saved most of my retina, but the side effect of surgery is the blind spot below my fovea, about 8° high and about 20° wide

[21:01] *** virtualsue joined
[21:01] *** thou joined
[21:02] <TimToady> could have been from any number of reasons

[21:02] *** mr-foobar left
[21:03] <TimToady> a yanked nerve either before or during reattachment, or a misfired laser shot, or blockage of a blood vessel, or just optical nerve damage from pressure variations

[21:03] <TimToady> I'm sure the doctor can think of another ten or twenty possible reasons

[21:03] <segomos> i had a guy that worked for me that had some kind of spindle problem and he sees a big floating "psychedelic spot" in the middle of his vision until that eye eventually goes blind. i hope your spot goes away, i know his causes him a lot of stress

[21:04] <TimToady> mine is quite unlikely to get worse, since it's likely one-shot damage

[21:05] <TimToady> they're actually more worried about my cornea now, since it greatly increases the chance of rejection of my transplant to have immune cells crawling all over the place, and my eye is obviously rather enflamed still

[21:05] <segomos> sorry to hear, vision is the only good sensory item i have left :-(

[21:05] <TimToady> er, inflamed

[21:06] <segomos> how long did they say until it's gone?

[21:06] <segomos> or until they know

[21:06] <huf> even if this all goes to shit and you end up a pirate, you'll still have one functioning eye, right?

[21:06] <TimToady> until the inflammation is gone?  it's already getting better

[21:06] <TimToady> but my cornea Dr wants me to keep putting steroids in my eye for a month

[21:06] <segomos> right or left 

[21:07] *** hoverboard left
[21:07] <TimToady> my right is the unlucky one

[21:07] <TimToady> the left on has only had a cataract

[21:08] <TimToady> so now I've pretty much had something go wrong with every part of my right eye; I guess the rear of my eye was feeling left out, so it popped both the retina and optic nerve to catch up to the front of my eye

[21:09] <masak> if anyone could confirm that the last block of https://gist.github.com/masak/0c4496b90e2aebf98062 indeed doesn't execute for them either, that'd help -- kthx

[21:09] <huf> you could still develop a rocky horror picture show midnight screening in the middle...

[21:09] <huf> that could be distracting

[21:09] <TimToady> but the parts of my macula that didn't suffer nerve damage were also spared from the detachment, so I should have some fine vision on the upper side of my macula

[21:10] <masak> I don't see why it wouldn't, but it doesn't here. or rather, it runs until the if statement, and then just disappears.

[21:10] <masak> I think we have a runtime bug of some kind.

[21:10] <TimToady> the detached parts still seem to have some vision too, though time will tell how much comes back

[21:11] <TimToady> well, I've probably overdone already for a first session of reading, so I'll go rest more, and find another audio book (just finish Citizen of the Galaxy by RAH)

[21:11] <TimToady> afk &

[21:13] <segomos> masak:   which p6?

[21:13] *** Isp-sec left
[21:15] <masak> segomos: https://gist.github.com/masak/0c4496b90e2aebf98062

[21:16] <segomos> i've update yours, i ran it with moar and jvm

[21:16] <segomos> i updated your gist*  with the output of both -m and -j

[21:17] <masak> huh.

[21:17] <masak> mine doesn't hang, it exits.

[21:17] <segomos> i'm building most recent moar/jvm right now, i'm about 2 weeks behind i think

[21:18] <masak> I'm on 2014.06-62-gc55942f.

[21:18] <masak> m: say "you?"

[21:18] <camelia> rakudo-moar 2cf53c: OUTPUT«you?␤»

[21:18] <masak> ok, so I'm not on latest either.

[21:18] *** kaiserpathos left
[21:18] <segomos> 014.06-17-gf2060ea

[21:20] <masak> ok, by inserting print statements everywhere, I now conclude that the code just disappears somewhere in the innermost `for` loop in &isometric. it enters an iteration, but then just disappears into nothing.

[21:20] <masak> I think I have a live bug here; I'll try to golf it.

[21:22] * masak rebuilds his Rakudo first

[21:23] <segomos> i'm still 'make'ing 

[21:24] <masak> did we have a Rakudo release today? I haven't been following 100% -- maybe I missed when the release happened?

[21:25] <masak> FROGGS?

[21:25] <FROGGS> masak: it is today, aye

[21:25] <masak> ah, but not released yet.

[21:25] <FROGGS> I am trying to fix one last thing before cutting the release

[21:26] <masak> ah; ok.

[21:27] <masak> good news: the program runs much better on latest Rakudo :)

[21:27] <masak> I don't think it hangs -- it just runs for very long.

[21:29] <segomos> how did you build so quickly?

[21:29] <segomos> or did you just do rakudo?

[21:29] <masak> brand new laptop. SSD. :)

[21:30] <masak> no, all of it. I `git clean -xdf`'d first.

[21:30] <segomos> ahh i have a macbook pro with ssd that is just slow i guess :)

[21:30] <segomos> your switches are faster than mine

[21:30] *** akaseki joined
[21:32] *** ariden__ joined
[21:32] *** aoseki left
[21:34] *** akaseki left
[21:35] <segomos> masak: what run time are you looking at?

[21:35] <masak> ooh, it finish'd.

[21:35] <segomos> i've had one running for 4 or 5 minutes

[21:35] <masak> yeah, it takes long.

[21:35] <segomos> ok

[21:35] <masak> there's an O(N!) in there.

[21:36] <segomos> ah

[21:36] * masak runs again and times his

[21:36] <masak> anyway, everything works. najs.

[21:36] <segomos> must optimize!

[21:36] <masak> yeah -- suggestions welcome :)

[21:36] <segomos> (kidding)

[21:36] <masak> probably something can be improved in my algorithms.

[21:36] <segomos> not really sure what this thing is doing

[21:37] <masak> it's checking whether groups are isomorphic to each other.

[21:37] <segomos> i just didn't see any `rm` or `deltree` type stuff

[21:37] <masak> it does so "the hard way".

[21:37] <segomos> ahh ic

[21:44] <dalek> rakudo/nom: 1b01e7a | (Tobias Leich)++ | src/vm/jvm/runtime/org/perl6/rakudo/Binder.java:

[21:44] <dalek> rakudo/nom: [jvm] throw typed exception X::TypeCheck::Binding

[21:44] <dalek> rakudo/nom: 

[21:44] <dalek> rakudo/nom: That means we have this now on all backends.

[21:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1b01e7aff7

[21:44] *** spider-mario left
[21:44] <masak> segomos: 8 minutes, 35 seconds.

[21:45] <segomos> i'm timing mine now too

[21:55] <masak> m: say [*] 2..8

[21:55] <camelia> rakudo-moar 264750: OUTPUT«40320␤»

[21:55] <masak> that's the number of iterations the second block runs.

[21:56] *** pecastro left
[21:56] <segomos> 9:52 for me

[21:56] <masak> oh, better than I feared.

[21:58] <segomos> i'm just impatient

[21:59] <masak> :)

[21:59] <segomos> wonder how well http::server::async works now

[21:59] <dalek> rakudo/nom: 960f2a2 | (Tobias Leich)++ | docs/ChangeLog:

[21:59] <dalek> rakudo/nom: more changelogs entries for 2014.07

[21:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/960f2a27f2

[22:01] <dalek> rakudo/nom: 18a496b | (Tobias Leich)++ | docs/ChangeLog:

[22:01] <dalek> rakudo/nom: adjust wording of required parrot version

[22:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/18a496b396

[22:01] *** rurban1 left
[22:02] *** thou left
[22:02] *** ssutch_ joined
[22:05] *** xragnar_ joined
[22:05] *** xragnar is now known as Guest38774

[22:05] *** Guest38774 left
[22:05] *** xragnar_ is now known as xragnar

[22:05] *** hoverboard joined
[22:05] *** thou joined
[22:06] *** ssutch_ left
[22:13] <dalek> rakudo/nom: df269df | (Tobias Leich)++ | docs/announce/2014.07.md:

[22:13] <dalek> rakudo/nom: add announcement for 2014.07

[22:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/df269df1e7

[22:13] <dalek> rakudo/nom: 6a2ab39 | (Tobias Leich)++ | docs/release_guide.pod:

[22:13] <dalek> rakudo/nom: move current release downwards

[22:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6a2ab39352

[22:13] <masak> \o/

[22:15] *** virtualsue left
[22:16] *** anaeem1 left
[22:18] <dalek> nqp: d181feb | (Tobias Leich)++ | / (2 files):

[22:18] <dalek> nqp: bump VERSION to 2014.07

[22:18] <dalek> nqp: review: https://github.com/perl6/nqp/commit/d181feb0e7

[22:23] <thou> FROGGS++ # Thanks for the release!

[22:23] <FROGGS> not yet done :o)

[22:23] <masak> it ain't over until the fat Wikipedia article sings.

[22:23] <thou> :)

[22:24] <thou> Let's say I'm cheering, distractedly, from the sidelines.

[22:25] *** rurban1 joined
[22:28] *** ajr_ left
[22:29] * masak cheers, too

[22:29] <masak> FROGGS: good luck with le release.

[22:29] *** rurban1 left
[22:29] <masak> 'night, #perl6

[22:31] *** telex left
[22:32] *** telex joined
[22:35] *** lizmat joined
[22:36] * lizmat arrived in Portland uneventfully, rather differently from another flight leaving from Amsterdam around the same time :-(

[22:37] *** rurban1 joined
[22:37] *** lelf left
[22:42] *** bluescreen10 left
[22:43] <timotimo> oh, the NativeCall bugfix that makes callbacks to different closures over the same code work properly is still missing on jvm and parrot, isn't it?

[22:45] <FROGGS> I know nothing about such a fix

[22:46] <timotimo> c511cb7

[22:47] <timotimo> https://github.com/MoarVM/MoarVM/commit/c511cb7

[22:47] *** btyler left
[22:48] <FROGGS> ahh, interesting

[22:50] *** cibs left
[22:50] *** cibs joined
[22:50] *** dwarring left
[22:51] *** dwarring joined
[22:51] *** lizmat left
[22:51] *** cognominal__ left
[22:51] *** ClarusCogitatio left
[22:51] *** go|dfish left
[22:51] *** charsbar_______2 left
[22:51] *** xusia left
[22:51] *** sunnavy_ left
[22:51] *** mattp_ left
[22:51] *** Bucciarati left
[22:51] *** rjbs left
[22:51] *** eMBee left
[22:51] *** Alula_ left
[22:52] *** [Sno] left
[22:52] *** muraiki left
[22:52] *** noganex left
[22:52] *** eternaleye left
[22:52] *** jnap left
[22:52] *** itz__ left
[22:52] *** Ulti_ left
[22:52] *** zamolxes left
[22:52] *** labster left
[22:52] *** stux|RC-only left
[22:52] *** yogan left
[22:52] *** nhayashi left
[22:52] *** broquaint left
[22:52] *** firnsy left
[22:52] *** simcop2387 left
[22:52] *** tempire_ left
[22:52] *** kshannon left
[22:52] *** arnsholt left
[22:52] *** mathw left
[22:52] *** ingy left
[22:52] *** sergot left
[22:52] *** betterworld left
[22:52] *** retupmoca left
[22:52] *** rhr_ left
[22:52] *** mtj left
[22:52] *** mtj_ left
[22:53] *** [Sno] joined
[22:53] *** muraiki joined
[22:53] *** noganex joined
[22:53] *** eternaleye joined
[22:53] *** jnap joined
[22:53] *** itz__ joined
[22:53] *** Ulti_ joined
[22:53] *** zamolxes joined
[22:53] *** labster joined
[22:53] *** stux|RC-only joined
[22:53] *** yogan joined
[22:53] *** nhayashi joined
[22:53] *** broquaint joined
[22:53] *** firnsy joined
[22:53] *** simcop2387 joined
[22:53] *** tempire_ joined
[22:53] *** kshannon joined
[22:53] *** arnsholt joined
[22:53] *** mathw joined
[22:53] *** ingy joined
[22:53] *** sergot joined
[22:53] *** betterworld joined
[22:53] *** retupmoca joined
[22:53] *** rhr_ joined
[22:53] *** mtj joined
[22:53] *** mtj_ joined
[22:53] *** eternaleye left
[22:53] *** lizmat joined
[22:53] *** cognominal__ joined
[22:53] *** Alula_ joined
[22:53] *** eMBee joined
[22:53] *** ClarusCogitatio joined
[22:53] *** go|dfish joined
[22:53] *** charsbar_______2 joined
[22:53] *** xusia joined
[22:53] *** sunnavy_ joined
[22:53] *** mattp_ joined
[22:53] *** Bucciarati joined
[22:53] *** rjbs joined
[22:53] *** eternaleye joined
[22:53] *** SevenWolf joined
[22:54] *** Celelibi left
[22:54] *** Grimnir_ left
[22:54] *** jlaire left
[22:54] *** yoleaux left
[22:54] *** ClarusCogitatio left
[22:54] *** Celelibi joined
[22:54] *** Grimnir_ joined
[22:54] *** jlaire joined
[22:54] *** yoleaux joined
[22:54] *** morgan.freenode.net sets mode: +v yoleaux

[22:54] *** amkrankr1leuen left
[22:54] *** kurahaupo left
[22:54] *** ren1us left
[22:54] *** gtodd left
[22:54] *** bcode left
[22:54] *** Tene left
[22:54] *** dylanwh left
[22:54] *** Mouq left
[22:54] *** colomon left
[22:54] *** rurban left
[22:54] *** mikegrb left
[22:54] *** lestrrat left
[22:54] *** Possum left
[22:54] *** cotto left
[22:54] *** Exodist left
[22:54] *** yakudza left
[22:54] *** lee_ left
[22:54] *** cooper- is now known as cooper

[22:54] *** cooper left
[22:54] *** cooper joined
[22:54] *** ClarusCogitatio_ joined
[22:54] *** cooper is now known as 23LAA2D7E

[22:55] *** ponbiki_ left
[22:55] *** PotatoGim left
[22:55] *** ilbot3 left
[22:55] *** lue left
[22:55] *** hugme left
[22:55] *** estrabd left
[22:55] *** mls left
[22:55] *** avuserow left
[22:55] *** Gothmog_ left
[22:55] *** ribasushi left
[22:55] *** ivanshmakov left
[22:55] *** nickpatch left
[22:55] *** synopsebot left
[22:55] *** [Coke] left
[22:55] *** Maddingue left
[22:55] *** smash left
[22:55] *** haroldwu left
[22:55] *** huf left
[22:55] *** _sri left
[22:55] *** integral left
[22:55] *** erdic left
[22:55] *** amkrankr1leuen joined
[22:55] *** kurahaupo joined
[22:55] *** ren1us joined
[22:55] *** gtodd joined
[22:55] *** bcode joined
[22:55] *** Tene joined
[22:55] *** dylanwh joined
[22:55] *** Mouq joined
[22:55] *** colomon joined
[22:55] *** rurban joined
[22:55] *** mikegrb joined
[22:55] *** lestrrat joined
[22:55] *** Possum joined
[22:55] *** cotto joined
[22:55] *** Exodist joined
[22:55] *** yakudza joined
[22:55] *** lee_ joined
[22:55] *** bcode left
[22:56] *** ponbiki_ joined
[22:56] *** PotatoGim joined
[22:56] *** ilbot3 joined
[22:56] *** lue joined
[22:56] *** hugme joined
[22:56] *** estrabd joined
[22:56] *** mls joined
[22:56] *** avuserow joined
[22:56] *** Gothmog_ joined
[22:56] *** ribasushi joined
[22:56] *** ivanshmakov joined
[22:56] *** nickpatch joined
[22:56] *** synopsebot joined
[22:56] *** [Coke] joined
[22:56] *** Maddingue joined
[22:56] *** smash joined
[22:56] *** haroldwu joined
[22:56] *** huf joined
[22:56] *** _sri joined
[22:56] *** integral joined
[22:56] *** erdic joined
[22:56] *** morgan.freenode.net sets mode: +v hugme

[22:56] *** bcode joined
[22:57] *** epochbel1 joined
[22:57] *** ivanshmakov left
[22:57] *** bcode left
[22:58] *** Woodi_ joined
[22:58] *** bcode_ joined
[23:00] *** Woodi left
[23:00] *** epochbell left
[23:00] *** bcode_ is now known as bcode

[23:01] *** ivanshmakov joined
[23:02] <dalek> rakudo/nom: fb07f82 | (Tobias Leich)++ | tools/build/NQP_REVISION:

[23:02] <dalek> rakudo/nom: [release] bump NQP revision

[23:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fb07f824b1

[23:02] *** treehug88 left
[23:02] <dalek> rakudo/nom: f24e0eb | (Tobias Leich)++ | VERSION:

[23:02] <dalek> rakudo/nom: [release] bump VERSION

[23:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f24e0eb64b

[23:03] *** ssutch_ joined
[23:06] *** woolfy joined
[23:07] *** ssutch_ left
[23:11] <dalek> rakudo/nom: 0aaba7e | (Elizabeth Mattijsen)++ | t/spectest.data:

[23:11] <dalek> rakudo/nom: Add some more advent tests

[23:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0aaba7e03f

[23:13] <FROGGS> I am going to continue tomorrow with the release process, I do not want to make mistakes just because I almost fall asleep

[23:15] *** cogno joined
[23:16] *** cogno is now known as Guest20108

[23:18] *** thou left
[23:18] <Guest20108> Reading the backlog. I note that the conversation between Mäsak and jhntn is not for the vulgum pecus

[23:18] *** rurban1 left
[23:20] *** woolfy left
[23:20] *** woolfy joined
[23:22] *** Guest20108 left
[23:25] *** woolfy left
[23:25] *** woolfy joined
[23:38] *** rurban1 joined
[23:43] *** rurban1 left
[23:49] *** rurban1 joined
[23:53] *** rurban1 left
[23:56] *** rurban1 joined
[23:57] *** jack_rabbit joined
