[00:07] *** Akagi201 joined
[00:12] *** Akagi201 left
[00:13] *** virtualsue left
[00:18] * [Coke] waves from... Iowa

[00:22] *** risou is now known as risou_awy

[00:22] *** risou_awy is now known as risou

[00:36] *** dmol left
[00:38] *** ivanshmakov left
[00:38] *** ivanshmakov joined
[00:38] <colomon> Writing lib/Math/ThreeD/Vec3.pm...done

[00:38] <colomon> Writing lib/Math/ThreeD/Mat44.pm...Segmentation fault (core dumped)

[00:38] <colomon> (that's in a parrakudo smoke)

[01:03] *** Grrrr joined
[01:04] *** woosley left
[01:08] *** woosley joined
[01:13] *** Su-Shee_ joined
[01:13] *** Sqirrel_ joined
[01:16] *** Sqirrel left
[01:16] *** Su-Shee left
[01:17] *** telex left
[01:17] *** klapperl joined
[01:18] *** telex joined
[01:20] *** klapperl_ left
[01:22] *** raiph left
[01:24] *** thou left
[01:43] *** btyler joined
[01:47] *** lucas joined
[01:57] *** uniejo joined
[02:07] *** ponbiki left
[02:10] *** thou joined
[02:13] <lucas> Hello, I made a little toy to help me run my implementations:

[02:13] <lucas> https://gist.github.com/lucasbuchala/a12a00824e9920fc4369

[02:15] *** ponbiki joined
[02:15] *** ponbiki is now known as Guest67868

[02:16] *** kshannon_ joined
[02:17] *** hoverboard joined
[02:17] *** kshannon left
[02:20] *** lucas left
[02:33] *** noganex_ joined
[02:35] *** Akagi201 joined
[02:36] *** noganex left
[02:39] *** Akagi201_ joined
[02:41] *** Akagi201 left
[02:45] *** akagi201 joined
[02:50] *** zengargo1le joined
[02:52] *** zengargoyle left
[02:54] *** cognominal__ joined
[02:57] *** cognominal left
[02:58] <dalek> perl6-bench: 8dc1c34 | (Geoffrey Broadwell)++ | minibenchmarks.pl:

[02:58] <dalek> perl6-bench: Reduce initial SCALE for rc-self-describing-numbers

[02:58] <dalek> perl6-bench: 

[02:58] <dalek> perl6-bench: Rakudo handles this benchmark so slowly that this one test was

[02:58] <dalek> perl6-bench: easily dominating testing time.

[02:58] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/8dc1c3463a

[02:58] <dalek> perl6-bench: 8b08ec7 | (Geoffrey Broadwell)++ | / (4 files):

[02:58] <dalek> perl6-bench: Add rc-dragon-curve minibenchmark

[02:58] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/8b08ec7a71

[02:58] <dalek> perl6-bench: 6547ae8 | (Geoffrey Broadwell)++ | / (4 files):

[02:58] <dalek> perl6-bench: Add rc-9-billion-names minibenchmark

[02:58] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/6547ae8575

[03:09] *** uniejo left
[03:12] *** molaf_ left
[03:21] *** atroxaper joined
[03:26] *** kaare_ joined
[03:31] *** atroxaper left
[03:34] *** atroxaper joined
[03:47] *** btyler left
[03:52] *** atroxaper left
[03:52] *** atroxaper joined
[03:55] *** raiph joined
[03:57] *** atroxaper left
[03:58] *** atroxaper joined
[04:00] *** atroxaper left
[04:00] *** atroxaper joined
[04:04] *** atroxaper left
[04:06] *** rindolf joined
[04:08] *** eMBee joined
[04:08] *** [Sno] left
[04:14] *** felher left
[04:14] *** kaare_ left
[04:28] *** lizmat left
[04:29] *** woolfy left
[04:30] *** woolfy joined
[04:30] *** lizmat joined
[04:37] *** kaare_ joined
[04:48] *** BenGoldberg left
[04:51] *** atroxaper joined
[04:52] <dalek> Net--IRC: fb2cb3f | (Jarrod Funnell)++ | lib/Net/IRC/ (6 files):

[04:52] <dalek> Net--IRC: Merge the fixes from my commandhandler branch

[04:52] <dalek> Net--IRC: review: https://github.com/TiMBuS/Net--IRC/commit/fb2cb3fb30

[04:52] <dalek> Net--IRC/new-handler: c24efc1 | (Jarrod Funnell)++ | lib/Net/IRC/ (3 files):

[04:52] <dalek> Net--IRC/new-handler: Add events for quit/part. Clean up  defaulthandler's user tracking

[04:52] <dalek> Net--IRC/new-handler: review: https://github.com/TiMBuS/Net--IRC/commit/c24efc13cd

[05:00] *** mr-foobar left
[05:01] *** vendethiel left
[05:11] *** donaldh joined
[05:12] *** gfldex joined
[05:16] <atroxaper> Good morning, #perl6 !

[05:20] <donaldh> o/ atroxaper

[05:20] <atroxaper> donaldh: o/

[05:24] <atroxaper> I heed to use some string-template system. I mean 'Insert to string value by <%= key %>'. I think I can use some regex to find <%= ... %>. But how can I find all that pieces?

[05:25] <moritz> atroxaper: how about using one of the several template engiens found on modules.perl6.org?

[05:26] <moritz> or else, use a global match

[05:26] <moritz> m:g/.../, or $str.match(:g, $regex)

[05:27] *** raiph left
[05:27] <atroxaper> Yes! Global search. Thank you.

[05:28] <atroxaper> I didn't think to find existent template system. But I'm going to look at them.

[05:37] *** donaldh left
[05:43] *** mr-foobar joined
[05:46] <atroxaper> My panda didn't install module for Rakudo Parrot, but did for MoarVM and JVM?

[05:48] <atroxaper> I have perl6 like perl6-m

[05:54] *** atroxaper left
[05:56] *** brrt joined
[05:57] *** [Sno] joined
[06:00] *** REPLeffect joined
[06:01] *** mr-foobar left
[06:01] *** atroxaper joined
[06:11] *** mr-foobar joined
[06:13] *** denis_boyun_ joined
[06:15] *** mr-fooba_ joined
[06:16] *** mr-foobar left
[06:21] <timotimo> check that your $PATH is pointing at the correct perl6 perhaps?

[06:21] <timotimo> and the correct panda binary as well; especially try head (which panda)

[06:23] <atroxaper> $PATH is pointing to all perl6-* and perl6. perl6 -> perl6-m

[06:26] <timotimo> and the hashbang of the panda command?

[06:28] <atroxaper> #!/usr/bin/env perl6

[06:28] <timotimo> can youexplain your problem a bit more?

[06:29] *** erdic left
[06:29] *** erdic joined
[06:30] <atroxaper> I have installed Template::Mojo by panda install. And now if I write 'use Template::Mojo' and run per6-p I see that perl6 can't find that module. But perl6-m and -j works well.

[06:30] <timotimo> er ... panda should install it for only one of your perl6s

[06:31] <atroxaper> And how can I install it for another?

[06:31] <timotimo> the best approach is probably using rakudobrew, you can "rakudobrew switch" very easily

[06:31] *** dayangkun joined
[06:32] <atroxaper> Really? Where can I read about that?

[06:32] <timotimo> hmm, good question; the repository with it is in tadzik/rakudobrew

[06:33] <atroxaper> Yes. I found it. Reading ;)

[06:34] <timotimo> we should quite possibly propagate information about rakudobrew closer to perl6.org and rakudo.org

[06:35] <atroxaper> It would be great! 

[06:40] *** Sqirrel_ left
[06:43] *** mr-foobar joined
[06:46] *** mr-fooba_ left
[06:47] *** pdcawley left
[06:50] *** pdcawley joined
[06:52] *** thou left
[06:52] *** thou joined
[06:53] *** atroxaper left
[06:54] *** atroxaper joined
[06:58] *** zakharyas joined
[06:58] *** atroxaper left
[06:59] *** atroxaper joined
[07:04] *** hoverboard left
[07:06] *** woolfy left
[07:07] *** lizmat left
[07:07] *** lizmat joined
[07:11] *** atroxaper left
[07:11] *** atroxaper joined
[07:13] <moritz> possibly a line on modules.perl6.org

[07:13] <moritz> and rakudo.org, yes

[07:13] <moritz> maybe also mention it in rakudo's README

[07:15] *** fhelmberger joined
[07:16] *** atroxaper left
[07:20] *** FROGGS joined
[07:20] *** woolfy joined
[07:22] *** Maddingu1 is now known as Maddingue

[07:27] *** atroxaper joined
[07:34] *** atroxaper left
[07:35] *** atroxaper joined
[07:39] *** atroxaper_ joined
[07:40] *** atroxaper left
[07:40] *** atroxaper_ left
[07:41] *** atroxaper joined
[07:44] *** lizmat_ joined
[07:44] *** thou left
[07:45] *** atroxaper left
[07:46] *** lizmat left
[07:46] *** atroxaper joined
[07:48] *** dmol joined
[07:52] *** mr-foobar left
[07:54] *** donaldh joined
[07:55] *** mr-foobar joined
[07:56] *** pecastro left
[08:00] *** kaleem joined
[08:07] * tadzik blushes

[08:08] <FROGGS> hi tadzik 

[08:11] *** Su-Shee_ is now known as Su-Shee

[08:25] *** dakkar joined
[08:34] *** salv0 left
[08:34] *** salv0 joined
[08:35] *** felher joined
[08:45] *** chenryn joined
[08:48] *** chenryn left
[08:51] *** spider-mario joined
[08:53] *** denis_boyun_ left
[08:54] *** [1]chenryn joined
[08:54] *** virtualsue joined
[08:55] *** chenryn joined
[08:55] *** [1]chenryn left
[09:01] <atroxaper> I'he tried to install Rakudos with rakudobrew and I think it would be better to clone repositories with flag --depth, isn't it?

[09:01] *** thou joined
[09:02] <FROGGS> tadzik: that is for you --^

[09:05] *** thou left
[09:14] <tadzik> oh, maybe

[09:15] <tadzik> I never saw a problem with not doing that

[09:15] <moritz> it just downloads more stuff

[09:16] <moritz> you just can't do much with a shallow clone (a bit better in newer git versions)

[09:19] *** donaldh left
[09:19] <atroxaper> tadzik: moritz: I just clone nqp three times :) And i thought that using --depth can allow to install all three backends faster in first time.

[09:21] <atroxaper> And that change don't require lots modification in rakudobrew.

[09:23] *** chenryn left
[09:23] <atroxaper> tadzik: btw how can I uninstall panda? I have installed in by bootstrap. And now I install all by rakudobrew but panda runs from previous path.

[09:24] <tadzik> atroxaper: oh, manually :/

[09:24] <tadzik> remove .rakudobrew/<backend>/panda probably

[09:25] <atroxaper> tadzik: no. Panda that I've installed by bootstrap.pl )

[09:25] <moritz> atroxaper: maybe --reference <path-to-existing-repo> would be even faster

[09:25] <moritz> git clone --reference <path> # that one

[09:26] <tadzik> ah

[09:26] *** Guest67868 is now known as ponbiki

[09:26] <tadzik> atroxaper: well, it got installed to wherever your rakudo was, probably

[09:26] <tadzik> 'which panda' will tell you

[09:26] <moritz> it then obtains objects from the reference repo

[09:27] *** pecastro joined
[09:27] <atroxaper> moritz: yes! It would be best!

[09:32] <atroxaper> tadzik: if I remove panda from that path (which panda) then '> panda' said that can't find panda) Maybe there is some system variable with path to perl6?

[09:33] *** mst joined
[09:33] <mst> WHY WAS I NOT ALREADY IN HERE

[09:33] <tadzik> I don't know a thing about your system variables :)

[09:33] * mst pokes his IRC config with a stick

[09:33] <tadzik> poke it with a large trout

[09:33] <mst> I already am a large trout, evidently that didn't help

[09:34] <tadzik> troo

[09:35] *** denis_boyun joined
[09:36] <atroxaper> tadzik: oh... sorry. I commented a part of my PATH variable in bash_profile. But forget about " ". Thank you :)

[09:38] <tadzik> :) You're welcome

[09:38] <FROGGS> mst: you missed all the fun in here :o)

[09:39] <mst> FROGGS: I owe Liz and Wendy some cpantesters work

[09:39] <FROGGS> ohh, nice!

[09:40] <mst> FROGGS: I did Rakudo::Star on CPAN, now it's time to do it again, properly

[09:40] <FROGGS> that reminds me that I wanted to write/port CPAN::Report::Metabase::Mumble in the very near future

[09:40] <mst> FROGGS: also, Wendy stranded me in Schiphol for twenty four hours so I believe she volunteered to play secretary in response; she'll find that out tomorrow :)

[09:40] <FROGGS> *g*

[09:41] <FROGGS> mst: so is that about smoking the rakudo installation process?

[09:42] <mst> FROGGS: and also making it installable as a cpan module

[09:42] <FROGGS> ohh, even nicer :o)

[09:42] <mst> I did it with rakudo already

[09:42] <mst> just nobody doing release management ever used my work

[09:43] <mst> so this time, I redo it with instructions for stupid people

[09:43] <mst> (yes, I'm being an asshole, I'm drunk and tired :)

[09:43] *** mr-fooba_ joined
[09:43] <FROGGS> :o)

[09:44] <FROGGS> your accent compensates all that :o)

[09:44] <FROGGS> (at least according to $wife)

[09:45] *** mr-foobar left
[09:46] <FROGGS> hmmm, there is stuff out there I didn't know: https://metacpan.org/source/MAGNOLIA/Enbld-0.7038/lib/Enbld/Definition/Rakudostar.pm

[09:49] <mst> I had to remove the old Rakudo::Star because it turns out it had package statements in common with core perl and was breaking the indices ;)

[09:55] <FROGGS> ewww

[09:55] *** virtualsue left
[09:57] *** brrt left
[10:06] *** mr-fooba_ left
[10:06] *** mr-foobar joined
[10:08] *** atroxaper left
[10:08] *** atroxaper joined
[10:13] *** atroxaper left
[10:16] *** mr-foobar left
[10:17] *** atroxaper joined
[10:20] *** brrt joined
[10:24] *** mr-foobar joined
[10:27] <atroxaper> tadzik++ for rakudobrew

[10:28] <woolfy> I stranded mst on schiphol for 24 hours?  I seem to be a very bad person...  In that case, I maybe should indeed play secretary for mst...

[10:29] <woolfy> Of course I have no idea wht mst means. hen?  When? WHEN???

[10:30] *** chenryn joined
[10:30] <dalek> Net--IRC/new-handler: d413f30 | (Jarrod Funnell)++ | lib/Net/IRC/Event.pm:

[10:30] <dalek> Net--IRC/new-handler: Whoops. s/ident/username/

[10:30] <dalek> Net--IRC/new-handler: review: https://github.com/TiMBuS/Net--IRC/commit/d413f302f0

[10:38] <woolfy> But he will tell me today, so I will be prepared to be ashamed.

[10:49] *** thou joined
[10:54] *** thou left
[10:59] *** brrt left
[11:13] *** atroxaper left
[11:14] *** atroxaper joined
[11:18] *** uniejo joined
[11:18] *** atroxaper left
[11:24] *** zengargoyle joined
[11:27] *** zengargo1le left
[11:28] *** Sqirrel joined
[11:44] *** kaleem left
[11:46] *** colomon left
[11:59] *** mr-foobar left
[11:59] *** lucas__ joined
[12:02] *** pdcawley left
[12:04] *** colomon joined
[12:08] *** uniejo left
[12:09] *** atroxaper joined
[12:15] *** pdcawley joined
[12:17] *** mr-foobar joined
[12:20] *** jnap joined
[12:21] *** uniejo joined
[12:27] *** silug left
[12:27] *** uniejo left
[12:27] *** guru joined
[12:27] *** ennio joined
[12:28] *** uniejo joined
[12:28] *** guru is now known as Guest86392

[12:28] *** Guest86392 is now known as ajr_

[12:28] *** atroxaper left
[12:29] *** atroxaper joined
[12:31] *** woolfy left
[12:31] *** ennio left
[12:32] *** chenryn left
[12:32] *** lizmat_ left
[12:34] *** atroxaper left
[12:36] *** Vlavv left
[12:38] *** thou joined
[12:39] <lucas__> Hello channel!

[12:39] <FROGGS> hi lucas__ 

[12:39] <lucas__> I'm trying to get my head around type constraints. Can you help me determine if the following statment is false or true? "You can only use type constraints in my/state/has declarations and in routine signatures; You can't use it with our and constant declarations and pointy blocks parameters." Did I get it right or wrong?

[12:40] *** lizmat joined
[12:42] *** thou left
[12:43] <FROGGS> m: -> Int $x { say $x }(42)

[12:43] <camelia> rakudo-moar a7b4cb: OUTPUT«42␤»

[12:43] <FROGGS> m: -> Int $x { say $x }("a")

[12:43] <camelia> rakudo-moar a7b4cb: OUTPUT«Type check failed in binding $x; expected 'Int' but got 'Str'␤  in block  at /tmp/P4VdNRTYAX:1␤␤»

[12:43] <FROGGS> lucas__: so it works in pointies

[12:44] *** virtualsue joined
[12:44] *** pdcawley left
[12:45] *** colomon left
[12:46] *** raiph joined
[12:47] <FROGGS> m: constant Int x = 42;

[12:47] <camelia> rakudo-moar a7b4cb: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/9R9w25wpCc␤Missing initializer on constant declaration␤at /tmp/9R9w25wpCc:1␤------> [32mconstant Int [33m⏏[31mx = 42;[0m␤    expecting any of:␤        statement list␤        prefix…»

[12:47] *** pdcawley joined
[12:47] <FROGGS> okay, that makes sense

[12:47] <lucas__> FROGGS: it is good it work in pointy blocks :)

[12:48] <FROGGS> "You can only use type constraints in my/state/has declarations and in routine signatures (including pointy blocks); You can't use it with our and constant declarations."

[12:48] <FROGGS> lucas__: pointy blocks are almost identical to subroutines

[12:48] *** Vlavv joined
[12:48] <FROGGS> the only difference is that a return falls through

[12:48] <lucas__> I was thinking more like "constant Int $x = 42;" But I agree it makes a strange sense to type a constant.

[12:49] <FROGGS> m: constant $x = 42;

[12:49] <camelia> rakudo-moar a7b4cb: ( no output )

[12:49] <FROGGS> m: constant Int $x = 42;

[12:49] <camelia> rakudo-moar a7b4cb: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/ZooPqXgHdm␤Missing initializer on constant declaration␤at /tmp/ZooPqXgHdm:1␤------> [32mconstant Int [33m⏏[31m$x = 42;[0m␤    expecting any of:␤        statement list␤        prefi…»

[12:49] <FROGGS> it wants to parse a name (or variable), so a type that looks like a name confuses it

[12:50] *** uniejo left
[12:51] <lucas__> yes, S03 says constants can't be used with signatures, because constant declarations already declare names in "type" space.

[12:52] <lucas__> I guess only "our" scoped variable remains...

[12:52] *** lizmat left
[12:53] *** brrt joined
[12:53] *** kaare_ left
[12:57] *** lizmat joined
[12:57] *** uniejo joined
[12:59] <FROGGS> timotimo: http://blog.yapcna.org/2014/06/23/yapc-is-streaming-live-on-youtube/

[13:02] *** MilkmanDan left
[13:03] *** MilkmanDan joined
[13:05] *** lizmat left
[13:10] *** FROGGS left
[13:12] *** psch joined
[13:12] <psch> hi #perl6

[13:13] *** uniejo left
[13:17] <brrt> hi psch

[13:18] *** uniejo joined
[13:19] *** jnthn left
[13:20] *** jnthn joined
[13:20] <psch> hi brrt

[13:20] <brrt> how is it? :-)

[13:22] <psch> i'm poking at Actions.nqp to try and figure out how to make tr/// actually work

[13:23] <psch> fwiu, in smart-match context tr/// has to set its lhs to the result of .trans with the tr/// arguments as par, but return the number of changed or deleted characters

[13:23] <psch> so to compare the before and after i have to store the original lhs to the smart match somewhere; i think i have figured out how to do that now

[13:24] <brrt> ok.. cool :-)

[13:25] <psch> what are you up to?

[13:31] *** mr-foobar left
[13:33] *** uniejo left
[13:39] <brrt> i'm working on a bug in moarvm

[13:39] <brrt> basically, 'inline and jit doesn't work together very well yet'

[13:40] <brrt> jnthn++ has already suggested the right solution

[13:44] <psch> sounds a bit more involved than what i'm doing :)

[13:45] *** dmol left
[13:45] <brrt> no, not really :-)

[13:45] <brrt> just another language :-)

[13:45] *** btyler joined
[13:45] <psch> i had had a look at something in moar recently, but got stuck in a spot where FROGGS got stuck as well; that combined with my lack of understand of moar and low confidence in my c knowledge made me put that aside

[13:46] <brrt> what did you want to fix? maybe i can help out

[13:46] <psch> that something was P6int without an explicit nativesize not having the right bitsize

[13:46] <brrt> hmmm

[13:46] <psch> i.e. on a 32bit machine 'my int $x' instantiates a P6int with 64bit, which is not to spec

[13:46] <brrt> what would be the 'right' bitsize according to you?

[13:46] <brrt> hmm

[13:46] <psch> or rather, it doesn't limit to 32bit

[13:47] <brrt> i believe its according to moarvm implementation, yes :-)

[13:47] <brrt> in nqp, my int $x makes a true native int, and those are always 64 bit wide in moarvm, basically because all registers are 64 bits wide

[13:48] <brrt> yes, that is a pain point on 32 bits, no, we're very unlikely to ever fix that :-)

[13:49] <brrt> that is to say

[13:49] <brrt> i kind of know how to fix that

[13:49] <brrt> but i don't think we should

[13:50] *** FROGGS joined
[13:50] <psch> to be fair, the one point where i noticed it being a real issue is with NativeCall, i.e. the test suite tests non-specific int against long, which works on 64bit and fails on 32bit arch 

[13:50] <brrt> hmmm

[13:50] <psch> but then, interfacing with c code without explicit bit sizes for int is probably a bit not-so-great anyway

[13:50] <brrt> ok, i see

[13:51] <brrt> hmm, indeed

[13:52] <brrt> i don't actually know how nativecall works, but i kind of imagine it being a pain on 32 bit

[13:52] <brrt> what with the many different ABI's

[13:52] <FROGGS> on the other hand you want to make it as easy as possible for the user

[13:52] *** bluescreen10 joined
[13:52] <FROGGS> so we need to make that tests pass on 32bit, without modifying the test

[13:53] *** uniejo joined
[13:53] <brrt> hmmm

[13:53] <moritz> do we have all of int, int32, int64 available for nativecall?

[13:54] <brrt> i don't know about nativecall :-)

[13:54] <FROGGS> moritz: yes

[13:54] *** kaare_ joined
[13:55] <brrt> does explicitly passing int32 make nativecall do the right thing?

[13:55] <brrt> i.e.

[13:55] <FROGGS> the test is about unpacking a C struct with a long inside using a class that has an Int attribute

[13:55] <FROGGS> err, int

[13:55] <FROGGS> brrt: yes

[13:55] <brrt> hmmm

[13:55] <FROGGS> only on 32bit of course

[13:55] <brrt> hhow... wait,

[13:55] <brrt> is long 32 bit on 32 bit platforms?

[13:55] *** thou joined
[13:56] <FROGGS> for all to read: https://github.com/jnthn/zavolaj/issues/37

[13:56] <FROGGS> brrt: yes, according to Perl -V

[13:56] <brrt> o

[13:56] <FROGGS> ö

[13:57] <brrt> hmm

[13:57] <brrt> i suppose that treating int as int32 depending on platform is correct

[13:59] <FROGGS> yes, but trying to do it that way makes it explode

[13:59] <FROGGS> so, I guess I did something stupid or missed something

[14:01] <FROGGS> that is from my ubuntu 14.04 x86 VM: intsize=4, longsize=4, ptrsize=4, doublesize=8, byteorder=12345678

[14:01] <FROGGS> my host: intsize=4, longsize=8, ptrsize=8, doublesize=8, byteorder=12345678

[14:01] *** nebuchadnezzar left
[14:02] <brrt> hmmm

[14:03] <brrt> sorry, can't really help you right now

[14:05] *** dayangkun left
[14:05] <FROGGS> LIVE: https://www.youtube.com/user/yapcna/featured

[14:05] <FROGGS> ARRRGGG! Live Streaming ist wegen Rechteproblemen in Deutschland leider nicht möglich. 

[14:06] <psch> FROGGS: yup :)

[14:06] <FROGGS> >.<

[14:08] <FROGGS> that sucks

[14:08] <psch> well there is proxtube

[14:09] <PerlJam> someone should move a mic closer to TimToady or turn up the volume or something.

[14:10] *** newbie_Perl6 joined
[14:11] <psch> hm, there's no way for me to leverage the existing levenshtein implementation in World for comparing the tr/// result with the original input, is there?

[14:11] <FROGGS> psch++ # love you! :D

[14:11] <psch> FROGGS: you're welcome :)

[14:12] *** newbie_Perl6_ joined
[14:12] *** prevost joined
[14:14] *** newbie_Perl6 left
[14:15] <newbie_Perl6_> Can I get information about Regex? (something in pseudocode, for example)

[14:15] <newbie_Perl6_> token alpha / <[a..z]> /                ----->   alpha.self = (Regex.CharacterClass, ).List

[14:15] <newbie_Perl6_> rule expr / <alpha>+ \+ <alpha>+ /      ----->   expr.self = (alpha.TokenPlus, '+'.Str, alpha.TokenPlus).List

[14:15] <newbie_Perl6_> rule array / '[' <digit>* %% ',' ']' /  ----->   array.self = ('['.Str, digit.SeperatorPlus(','), ']'.Str).List

[14:15] <moritz> newbie_Perl6_: no, they aren't introspectable

[14:16] <cognominal__> too bad we can't see the slides.

[14:16] <newbie_Perl6_> I think it's useful~~~

[14:16] *** uniejo left
[14:18] *** kaleem joined
[14:18] *** colomon joined
[14:20] *** newbie_Perl6 joined
[14:20] <newbie_Perl6> how about an introspectable regex?

[14:20] *** newbie_Perl6_ left
[14:21] <moritz> newbie_Perl6: if you prototype one, maybe it'll be specced

[14:21] <PerlJam> newbie_Perl6: what you mentioned earlier looks more like the AST than what I would call introspection.

[14:23] <colomon> TimToady is on youtube live!

[14:23] <colomon> https://www.youtube.com/watch?v=mxLIQxSda0E

[14:24] *** newbie_Perl6 left
[14:25] *** newbie_Perl6 joined
[14:26] <newbie_Perl6> Hello PerlJam, what's a introspectable regex? some idea?

[14:26] *** ajr_ left
[14:27] *** guru joined
[14:27] *** guru is now known as Guest86031

[14:27] *** treehug88 joined
[14:28] *** kurahaupo joined
[14:28] *** Guest86031 is now known as ajr_

[14:28] *** ajr_ left
[14:29] <newbie_Perl6> Hello moritz. I just think it's a cool thing, but the implemetation is too hard for me.

[14:30] *** ajr joined
[14:30] *** ajr is now known as Guest63362

[14:30] *** Guest63362 is now known as ajr_

[14:30] *** atroxaper joined
[14:31] <hoelzro> morning #perl6

[14:31] *** dmol joined
[14:32] <moritz> newbie_Perl6: you could try, and ask for help when you get stuck

[14:32] <PerlJam> hoelzro: greetings

[14:32] <moritz> newbie_Perl6: I also think it's cool, but it's way down my priorities list

[14:33] <psch> hi hoelzro 

[14:33] <lucas__> anyone watching larry live? what kind of vim script is he using? :D

[14:33] <colomon> am watching, no idea about the vim

[14:33] <PerlJam> TimToady's talk mentions several principles that we've seen before, but I get the feeling that an update (or perhaps an addendum) to the Perl 6 Design Principles document is in order

[14:33] *** newbie_Perl6 left
[14:34] *** newbie_Perl6 joined
[14:35] *** atroxaper left
[14:36] <newbie_Perl6> moritz: I will try.

[14:37] <PerlJam> newbie_Perl6++ trying is good.

[14:37] <newbie_Perl6> If someone interested in it too, please try it too.

[14:38] <newbie_Perl6> PerlJam, some intereting idea?

[14:39] <hoelzro> so I tried creating a custom RoleHOW to monitor the "closing" of a class, but it seems that specialize/compose are called on declaration, and add_method on the classHOW is called afterwards

[14:39] *** newbie_Perl6_ joined
[14:39] <hoelzro> (I'm trying to create some postconditions for consumers of my role)

[14:40] <newbie_Perl6_> sorry, bad internet connection

[14:40] *** newbie_Perl6_ left
[14:42] *** newbie_Perl6 left
[14:44] <hoelzro> also, I couldn't figure out how to change the class/role HOW objects from within the same file; I had to create another file and use EXPORTHOW.  If someone could guide me on how to do that, that would be great =)

[14:46] *** dmol1 joined
[14:46] *** dmol left
[14:48] *** uniejo joined
[14:53] *** uniejo left
[14:53] *** uniejo joined
[14:55] <colomon> hmm, what to watch next from YAPC?

[14:55] <lucas__> colomon: thanks for sharing the link!

[14:56] <colomon> you're welcome

[14:58] *** denis_boyun left
[14:58] *** denis_boyun joined
[15:01] *** nebuchad` joined
[15:02] <cognominal__> TimToady decided not to unwrap the christmas presents today. These presents are future, or unevenly distributed.

[15:02] *** nebuchad` is now known as nebuchadnezzar

[15:05] <FROGGS> TimToady++ # anyway :o)

[15:06] <FROGGS> I enjoyed the talk

[15:07] <cognominal__> yes, it opened a window to his thought process.

[15:08] *** denis_boyun left
[15:08] <jnthn> For regex introspective stuff, my https://github.com/jnthn/grammar-generative does evil to actually capture the AST produced as they parse.

[15:08] *** kurahaupo left
[15:09] <moritz> .tell newbiew_Perl6 about https://github.com/jnthn/grammar-generative

[15:09] <yoleaux> moritz: I'll pass your message to newbiew_Perl6.

[15:09] <jnthn> I don't know if (a) the code still works, and (b) if it's comprehensible. :)

[15:09] <jnthn> And (c) if I understand it any more :P

[15:12] <jnthn> hoelzro: When I want to do stuff at compose time I just replace ClassHOW with something that has a method compose($obj { ...checks/stuff... callsame(); post-compose stuff }

[15:12] <jnthn> With that subclassing ClassHOW of course.

[15:13] <hoelzro> jnthn: right, but then users of my library would have to use that ClassHOW that I've built

[15:13] <dalek> rakudo-star-daily: e8442a6 | coke++ | log/ (13 files):

[15:13] <dalek> rakudo-star-daily: today (automated commit)

[15:13] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/e8442a696a

[15:13] <dalek> perl6-roast-data: 48aec67 | coke++ | / (5 files):

[15:13] <dalek> perl6-roast-data: today (automated commit)

[15:13] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/48aec67e72

[15:13] <jnthn> And...the other way they have to use the RoleHOW you built?

[15:13] <hoelzro> jnthn: this is what I have in mind: https://gist.github.com/hoelzro/d552753137568ac5285c

[15:13] <hoelzro> well, apps consume the App::Subcommander role

[15:13] <hoelzro> so I have control over the latter

[15:14] <hoelzro> so I figured I could detect with a custom RoleHOW when the role is composed into a class

[15:14] <[Coke]> rakudo moar tested clean today; jvm & parrot still have one failing test file.

[15:14] <hoelzro> unfortunately, that happens too early for my checking code to make any sense

[15:14] <jnthn> Oh.

[15:15] <hoelzro> if you need more explanation, I'm happy to give it =)

[15:15] *** uniejo left
[15:15] <hoelzro> I would just like duplicate subcommands to be detected at compile time

[15:15] <jnthn> I think I see the problem; need to look at the code to think of a solution...

[15:15] <jnthn> (the metamodel code

[15:15] <hoelzro> ah ha

[15:15] <jnthn> )

[15:16] <hoelzro> I spent a bit of time looking at it yesterday; I'm sure you'll be able to come up with something

[15:16] <hoelzro> I think that I may just have to use a ClassHOW and have users subclass App::Subcommander

[15:16] <jnthn> Yeah. Not least 'cus I can extend the thing if it isn't up to your use case :P

[15:16] <hoelzro> rather than make it a role

[15:17] <jnthn> anyway, back to hotel &

[15:25] *** virtualsue left
[15:27] <TimToady> m: my Int constant x = 42; say x

[15:27] <camelia> rakudo-moar a7b4cb: OUTPUT«42␤»

[15:27] <TimToady> m: constant x of Int = 42; say x

[15:27] <camelia> rakudo-moar a7b4cb: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/kEdFtpLoDN␤Unexpected named parameter 'SYMBOL' passed␤at /tmp/kEdFtpLoDN:1␤------> ␤»

[15:27] <btyler> TimToady++ # learned about z. in vim :)

[15:27] <TimToady> std: constant x of Int = 42; say x

[15:27] <camelia> std 0f2049c: OUTPUT«ok 00:01 122m␤»

[15:27] *** uniejo joined
[15:28] <TimToady> rakudobug I guess

[15:28] <TimToady> btyler: I'm glad someone learned something from it :)

[15:29] <TimToady> I only covered about 15 of the 56 principles I had available, but I suppose it was unrealistic to think I could get to most of 'em

[15:31] * TimToady was lucky to just finish reading all the RFCs last night

[15:31] <colomon> TimToady++

[15:32] <TimToady> they're quite amazing in spots :)

[15:32] <TimToady> both ++ly and --ly

[15:34] *** zakharyas left
[15:37] *** logie joined
[15:37] *** uniejo left
[15:40] *** [Sno] left
[15:43] *** dmol1 left
[15:43] *** dmol joined
[15:43] *** uniejo joined
[15:44] *** dayangkun joined
[15:47] *** atroxaper joined
[15:47] *** dayangkun left
[15:47] *** dayangkun joined
[15:52] *** fhelmberger left
[15:52] <masak> good afternoon, #perl6

[15:53] <atroxaper> masak: o/

[15:53] <psch> hi masak 

[15:54] *** uniejo left
[15:55] <jnthn> masak: afternoon? It's pretty much evening :P

[15:56] <masak> ...four minutes left of the afternoon :P

[15:56] <TimToady> still antenoon :P

[15:57] *** kaleem left
[15:57] *** araujo joined
[15:57] <PerlJam> Still another hour of morning here. :)

[15:58] <PerlJam> woolfy broke it!

[15:58] <TimToady> ayup, woolfy++

[15:59] <TimToady> testing-to-destruction++

[16:00] *** Ven joined
[16:00] * Ven is watching woolfy++ live

[16:00] *** brrt left
[16:01] <TimToady> lunch &

[16:04] <dalek> perl6-bench: 5a159b3 | (Geoffrey Broadwell)++ | minibenchmarks.pl:

[16:04] <dalek> perl6-bench: Add curated tags for minibenchmarks

[16:04] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/5a159b33d5

[16:06] *** logie left
[16:15] <Ven> TimToady++'s talk was a bit more for p5ers

[16:15] *** troydm joined
[16:16] <troydm> hey all! I've just installed rakudo wth parrot and it takes 4-5 seconds just to start perl6 executable, why is it so slow?

[16:17] <colomon> troydm: errr…. good question?  I just tried it on my Linux box, and it was definitely under 1 second.

[16:17] <colomon> I expect JVM to be that slow, but not Parrot

[16:19] <troydm> http://lpaste.net/530134410415046656

[16:20] <colomon> troydm: thats .465 seconds "real" for me.  what sort of machine are you running on?

[16:20] <Ven> troydm: can you perl6 -v, please :P ?

[16:20] <troydm> This is perl6 version 2014.04 built on parrot 6.1.0 revision 0

[16:21] <troydm> gtg be back in 30 mins

[16:25] *** Akagi201_ left
[16:27] *** Ven left
[16:27] *** ajr_ left
[16:27] *** guru joined
[16:28] *** guru is now known as Guest85594

[16:28] *** Guest85594 is now known as ajr_

[16:31] *** ajr_ left
[16:34] *** prevost left
[16:35] <thou> TimToady++  # Inspiring an incredibly fun community

[16:39] *** sjn_ joined
[16:45] <atroxaper> While using role a can define method with { ... }. But can I define method with ( ... ) and { ... } also?

[16:46] <jnthn> As in, with a signature?

[16:46] <atroxaper> I'm going to pass arguments my introspection to some method. I just want to force customer of role to implement some method with some arguments.

[16:46] <atroxaper> by introspection*

[16:47] <jnthn> Oh

[16:47] <jnthn> It doesn't try and enforce a signature match

[16:47] <jnthn> At present, anyway.

[16:47] <masak> TimToady++ # not giving up through X years of second system syndrome

[16:48] *** Rotwang joined
[16:48] <atroxaper> jnthn: ok. I will find another way maybe.

[16:49] *** xdoctor joined
[16:54] *** atroxaper left
[16:55] *** atroxaper joined
[16:56] *** thilp joined
[16:59] *** atroxaper left
[16:59] *** rje__ joined
[17:00] *** xinming_ left
[17:02] *** xinming joined
[17:02] *** mr-foobar joined
[17:02] *** dakkar left
[17:07] *** kaleem joined
[17:08] <troydm> so I'm back, guys why is perl6 parrot so slow on startup?

[17:10] *** dmol left
[17:10] <psch> troydm: as colomon asked, what kind of machine are you running on?

[17:10] <timotimo> perl6 parrot should start up fairly quickly, the times where it took a second are long gone

[17:13] *** pecastro left
[17:14] *** virtualsue joined
[17:17] *** raiph left
[17:18] *** sjn_ left
[17:19] *** sjn_ joined
[17:21] *** carlin joined
[17:21] <troydm> psch: virtual machine on virtualbox

[17:21] *** kaleem left
[17:21] <troydm> psch: it takes 8 seconds to load perl6 on my virtual machine

[17:22] <psch> i have a similar setup, running a debian vm on a win7 host; i get ~1.5s real for -e'say "Hello"' on parrot perl6

[17:22] <troydm> and other languages/interpreters work fast

[17:22] <troydm> I've compiled rakudo on this machine

[17:22] <timotimo> even when the cache has warmed up?

[17:23] <troydm> yes

[17:23] *** sjn_ left
[17:26] *** Akagi201_ joined
[17:29] <psch> for reference, a laptop i have here runs moar -e'say "Hello"' in about 2.7 real; parrot is about 3 times slower i seem to recall timotimo++ said in his talk

[17:29] <psch> that laptop is a old 2.2ghz single core though

[17:29] *** uniejo joined
[17:30] *** uniejo left
[17:31] *** Akagi201_ left
[17:34] <timotimo> my talk?

[17:35] <psch> yeah, you showed benchmarks at gpn, didnt you

[17:35] <psch> i watched the first half hour yesterday before going to bed

[17:35] *** uniejo joined
[17:35] <psch> maybe that's why i misremembered it, if i did that :P

[17:44] *** itz joined
[17:47] *** uniejo left
[17:50] *** dmol joined
[17:51] *** carlin left
[17:52] *** carlin joined
[17:52] *** fhelmberger joined
[17:54] <PerlJam> Did doy just say Rust is similar to Perl 6?!?  ;)

[17:55] *** atroxaper joined
[17:56] *** fhelmberger left
[17:56] <moritz> if you look hard enough, you find some similarities

[17:57] <moritz> like, both are still in flux

[17:57] <moritz> both aren't widely adopted yet

[17:57] <moritz> ... and that's about where the similarities end :-)

[18:00] *** atroxaper left
[18:00] *** treehug88 left
[18:00] <colomon> lizmat++ is talking on my computer!

[18:02] <colomon> okay, lizmat is breaking up on my computer.  feed is very choppy

[18:03] *** Akagi201_ joined
[18:03] <PerlJam> colomon: It's probably because I switched to watching lizmat  ;)

[18:03] <PerlJam> (But the feed is smooth for me)

[18:03] <moritz> sounds like your computers are connected.

[18:04] <colomon> stop sucking down all the bits!@!!!!!

[18:04] * moritz will work from $home tomorrow, with public transport on strike, and family sick

[18:05] <colomon> moritz: :(

[18:05] <moritz> colomon: at least my employer doesn't complain, that's worth something

[18:05] <colomon> sick family is never fun, though.

[18:05] <PerlJam> (moritz's employer)++

[18:05] <moritz> colomon: aye

[18:06] <colomon> lizmat has stopped breaking up.  yay!

[18:06] <PerlJam> What's with all of the mirrors in all of the rooms?   Are they trying to make the rooms look bigger?

[18:07] *** Akagi201_ left
[18:07] <moritz> or afraid of vampires?

[18:07] <timotimo> psch: i didn't know you knew german :)

[18:08] <PerlJam> It's Florida ... who ever heard of vampires visiting Florida?

[18:12] <psch> timotimo: german is, in fact, my first language :)

[18:13] <timotimo> ah!

[18:17] <colomon> CLDR, eh?

[18:17] * colomon is watching patch++ now

[18:19] * itz watchs timtoady on http://www.perl6.org/archive/rfc/28.html

[18:23] *** uniejo joined
[18:23] *** uniejo left
[18:24] <itz> hmmm no lizmat sound 

[18:24] <PerlJam> itz: In that talk he also called out one of my RFCs http://www.perl6.org/archive/rfc/114.html as rejected  :)

[18:24] *** sjohnson joined
[18:27] *** [Sno] joined
[18:27] <itz> ah sound now

[18:28] <masak> PerlJam: wow, you submitted four of them.

[18:29] <colomon> PerlJam++

[18:29] <masak> and cognominal++ two.

[18:30] <PerlJam> masak: I did?  I only remember a couple.

[18:30] <masak> well, it depends on what exactly "maintainer" means on http://www.perl6.org/archive/rfc/by-group.html

[18:33] <PerlJam> Ah ... I apparently wanted to gie ALLCAPS subroutine names back to the end-users by proposing a way to signify special subs.

[18:37] *** lizmat joined
[18:39] *** uniejo joined
[18:39] *** bowtie left
[18:43] <masak> special subs, as in phasers?

[18:44] <PerlJam> aye

[18:44] *** hoverboard joined
[18:44] *** logie joined
[18:45] *** lizmat left
[18:47] *** uniejo left
[18:47] *** rje__ left
[18:48] *** bowtie joined
[18:48] *** brrt joined
[18:51] *** lizmat joined
[18:52] *** guru joined
[18:52] *** guru is now known as Guest9650

[18:53] *** Guest9650 is now known as ajr_

[18:55] *** oetiker left
[18:55] *** oetiker joined
[18:55] *** uniejo joined
[18:57] *** uniejo left
[18:57] *** uniejo joined
[19:07] *** beastd joined
[19:09] *** uniejo left
[19:10] *** atroxaper joined
[19:14] *** ajr_ left
[19:15] *** atroxaper left
[19:16] *** REPLeffect left
[19:20] *** logie left
[19:20] *** logie joined
[19:22] <lizmat> good *, #perl6!

[19:22] <lizmat> do we actually have an idea how to implement "goto" in rakudo / moar ?

[19:22] <psch> hi lizmat 

[19:22] <lizmat> psch o/

[19:23] *** telex left
[19:23] <masak> hm, I remember discussing `goto` with someone recently.

[19:23] <masak> was it you, FROGGS?

[19:24] *** telex joined
[19:24] <FROGGS> masak: possible

[19:25] <FROGGS> goto shouldn't be that hard to implement in moar me thinks

[19:26] <FROGGS> it is like unwinding after an exception happened to the spot right after the exception happened

[19:26] *** xragnar_ joined
[19:26] *** xragnar is now known as Guest65932

[19:26] *** xragnar_ is now known as xragnar

[19:26] <lizmat> so it's just a SMOP ?

[19:27] <FROGGS> so the goto label stores its "pc" (p-something counter), and then we just unwind to it using nqp::unwind perhaps

[19:27] <lizmat> *program* ?

[19:27] <FROGGS> "perhaps" :o)

[19:28] *** Guest65932 left
[19:28] *** dwarring joined
[19:29] <moritz> I think the PC stands for "politically correct" register :-)

[19:29] <lizmat> :-)

[19:29] <FROGGS> hehe

[19:29] <lizmat> moritz o/

[19:30] <FROGGS> "Perl 6 has P.C. built-in" - that fits :o)

[19:30] *** Sqirrel left
[19:30] *** uniejo joined
[19:31] *** logie left
[19:31] *** kivutar left
[19:34] <masak> I have an idea that I can't quite express yet.

[19:35] <masak> it may turn into one of my YAPC::EU talk proposals.

[19:35] <masak> the idea is something like "a macro toolkit for building control flow has an API that looks stackless, regardless of actual underlying implementation"

[19:36] <FROGGS> what a nice short catching title :P

[19:36] <moritz> s/has/as/ ?

[19:37] <masak> moritz: no, 'has'

[19:38] *** fab1an joined
[19:38] <masak> as in, the idea is that a toolkit (invariably?) *has* such an API.

[19:38] <lizmat> s/has/which has/ ?

[19:38] <masak> you keep wanting my idea to be a noun phrase! :P

[19:38] *** ajr joined
[19:38] *** pecastro joined
[19:38] * [Coke] is nearly at Worthington, Minnesota.

[19:38] *** ajr is now known as Guest73366

[19:39] <lizmat> choo choo!

[19:39] *** Guest73366 is now known as ajr_

[19:39] * lizmat assumes [Coke] is on a train

[19:40] <fab1an> Hi there. I am trying to connect to an sqlite db. Using DBIish.connect('SQLite') command i need to add an database name. Does anyone knows how?

[19:40] <moritz> fab1an: didn't we have that topic, like, yesterday?

[19:41] <fab1an> yap. i am working on an example for the readme.

[19:41] * moritz wates far too much time on http://dhmholley.co.uk/civclicker.html building a zombie-only empire

[19:41] *** virtualsue left
[19:42] <moritz> fab1an: did you get it working from looking at the test code?

[19:43] <[Coke]> lizmat: nope. the wife is driving us across country in a rented car.

[19:43] <lizmat> ah, your support human (as Chip Salzenberg explained to me today)

[19:43] <lizmat> :-)

[19:45] <fab1an> unfortunately no. copy pasting the connection steps to the repl does not work,

[19:46] *** cc joined
[19:46] <[Coke]> hee.

[19:46] *** cc is now known as Guest6627

[19:46] <[Coke]> Hey, tell chip I said hi!

[19:47] <moritz> sm: use DBIish; my $dbh = DBIish.connect( 'SQLite', :database<camelia.sqlite3> ); say $dbh.prepare('SELECT abs(4)').fetchrow.perl

[19:47] <camelia> star-m 2014.04: OUTPUT«Cannot locate native library 'libsqlite3.so'␤  in method postcircumfix:<( )> at /home/p6eval/star-2014.04/languages/perl6/lib/NativeCall.pm6:127␤  in method connect at /home/p6eval/star-2014.04/languages/perl6/lib/DBDish/SQLite.pm6:221␤  in method connec…»

[19:48] <moritz> fab1an: how does it not work?

[19:49] <moritz> sm: use DBIish; my $dbh = DBIish.connect( 'SQLite', :database<camelia.sqlite3> ); say $dbh.prepare('SELECT abs(4)').fetchrow.perl

[19:49] <camelia> star-m 2014.04: OUTPUT«fetchrow_array without prior execute␤  in method fetchrow at /home/p6eval/star-2014.04/languages/perl6/lib/DBDish/SQLite.pm6:136␤  in block  at /tmp/XCrF0Z6Nit:1␤␤»

[19:49] *** uniejo left
[19:50] <moritz> sm: use DBIish; my $dbh = DBIish.connect( 'SQLite', :database<camelia.sqlite3> ); my $sth = $dbh.prepare('SELECT abs(4)'); $sth.execute; say $sth.fetchrow.perl

[19:50] <camelia> star-m 2014.04: OUTPUT«Array.new("4")␤»

[19:50] *** Guest6627 left
[19:50] <moritz> fab1an: working example produced right there for you

[19:50] *** lizmat left
[19:51] <fab1an> i am trying it... and it works. :-)

[19:52] <fab1an> what is this construct: :database<camelia.sqlite3>?

[19:52] *** uniejo joined
[19:52] <masak> fab1an: it's a pair.

[19:52] <masak> fab1an: where the key is a string.

[19:53] <masak> er, value*

[19:53] <masak> though the key is a string, too :)

[19:53] <masak> fab1an: it means 'database' => 'camelia.sqlite3'

[19:53] <moritz> short form of database => 'camelia.sqlite3'

[19:53] * [Coke] uploads one of the worthington shots, though this is not the best one:

[19:53] <[Coke]> http://feather.perl6.nl/~coke/worthington.jpg

[19:53] <moritz> masak: without the quotes around the key (that wouldn't be a named arg)

[19:53] <fab1an> ahh ok.

[19:55] <fab1an> i will add an example script with a short description to the readme. i think this will help other trying to use DBIish.

[19:55] <moritz> ++fab1an

[19:56] <[Coke]> crap, anyone II might of visited perl wise on the west coast is probably on the EAST coast. :)

[19:58] *** btyler left
[19:59] *** REPLeffect joined
[20:00] <masak> moritz: ah, right.

[20:00] *** lizmat joined
[20:01] <[Coke]> gah. *might have

[20:02] *** logie joined
[20:03] *** fab1an left
[20:03] <FROGGS> lizmat: about the goto SMOP.... goto is just that ugly that it is not even on my TODO :o)

[20:04] <lizmat> ah, ok  

[20:04] * lizmat makes mental note

[20:04] *** erkan left
[20:05] *** btyler joined
[20:06] * FROGGS is still fighting Archive::Tar...

[20:06] <FROGGS> which also has at least one goto

[20:07] *** carlin left
[20:07] <lizmat> can you get around it (no punt intended)

[20:07] <lizmat> *pun

[20:08] <FROGGS> I guess a loop and a redo will do

[20:08] <brrt> whats wrong with goto?

[20:09] <FROGGS> yes, it is only one label and the goto's come afterwards in the same sub

[20:09] <FROGGS> brrt: you often can't see the label, so you cannot see where it jumps to

[20:10] <lizmat> brrt: it needs to go looking up the stack for it at runtime

[20:10] <lizmat> at least in p5  :-)

[20:10] * brrt would be trolling if he suggested to get a bigger screen (or smaller letters or better glasses)

[20:10] <brrt> what

[20:10] <brrt> up the... what

[20:11] <lizmat> call stack

[20:11] <brrt> i'm kidding, though, but, look up on the stack? how even

[20:11] <FROGGS> in our case the label is just a lexical, like we redo a loop atm

[20:11] <brrt> ahaa

[20:11] <brrt> the very late binding thing :-) 

[20:11] <psch> wrt "can't see the label": zf* when on the label in vim should let you see it... :)

[20:12] <FROGGS> the label would be in the call chain... hmmm

[20:13] <brrt> i'm still struggling to imagine a case wherein the goto label would be dynamically bound

[20:13] <brrt> oh, i know one case

[20:13] <brrt> exceptions

[20:14] *** virtualsue joined
[20:15] <psch> anyway, tr/// now just needs actual code to compute the distance instead of just doing &infix:<ne> on the original lhs and the result and escape sequences

[20:15] <psch> the latter is what i've been trying the last few hours, and it's enough for today 

[20:15] <psch> so, good night #perl6 o/

[20:15] *** psch left
[20:15] <lizmat> good night Psyche^_ 

[20:16] <lizmat> .oO( not fast enough :-)

[20:17] *** kivutar joined
[20:21] *** hoverboard is now known as moistcherry

[20:26] <lucas__> p6: sub foo is export(:a, :b, :c) {}; say "alive";

[20:26] <camelia> niecza v24-109-g48a8de3: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Export tags NYI at /tmp/tmpfile line 1:␤------> [32msub foo is export(:a, :b, :c) [33m⏏[31m{}; say "alive";[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line …»

[20:26] <camelia> ..rakudo-{parrot,jvm,moar} a7b4cb: OUTPUT«alive␤»

[20:26] <lucas__> p6: sub foo is export(:a :b :c) {}; say "alive";

[20:26] <camelia> niecza v24-109-g48a8de3: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Multi colonpair syntax not yet understood at /tmp/tmpfile line 1:␤------> [32msub foo is export(:a :b :c[33m⏏[31m) {}; say "alive";[0m␤␤Export tags NYI at /tmp/tmpfile line 1:␤------> [32msub foo is e…»

[20:26] <camelia> ..rakudo-{parrot,jvm,moar} a7b4cb: OUTPUT«alive␤»

[20:26] <lucas__> commas are optional in export lists?

[20:27] <lucas__> or maybe I didn't get pair syntax right

[20:28] <lucas__> std: sub foo is export(:a, :b, :c) {}

[20:28] <camelia> std 0f2049c: OUTPUT«ok 00:01 127m␤»

[20:28] <lucas__> std: sub foo is export(:a :b :c) {}

[20:28] <camelia> std 0f2049c: OUTPUT«ok 00:01 125m␤»

[20:30] *** lizmat left
[20:34] *** brrt left
[20:39] *** itz left
[20:40] *** cibs left
[20:42] *** virtualsue left
[20:48] *** uniejo left
[20:48] *** bluescreen100 joined
[20:49] *** bluescreen__ joined
[20:52] *** bluescreen10 left
[20:52] *** bluescreen100 left
[20:52] *** uniejo joined
[20:56] *** bluescreen__ left
[20:57] *** kaare_ left
[20:59] *** erdic left
[21:00] *** erdic joined
[21:02] *** moistcherry is now known as hovercraft

[21:02] *** jnap left
[21:02] *** uniejo left
[21:04] *** cibs joined
[21:06] *** hovercraft is now known as siriustar

[21:08] <masak> 'night, #perl6

[21:09] <FROGGS> gnight masak 

[21:12] *** atroxaper joined
[21:16] *** atroxaper left
[21:20] *** uniejo joined
[21:27] *** uniejo left
[21:32] *** lue left
[21:33] *** lue joined
[21:33] *** slavik joined
[21:40] *** lucas__ left
[21:46] *** logie left
[21:51] *** uniejo joined
[21:52] *** uniejo left
[21:53] *** fhelmberger joined
[21:57] *** fhelmberger left
[21:59] *** uniejo joined
[22:01] *** siriustar is now known as hoverboard

[22:11] *** uniejo left
[22:26] *** beastd left
[22:46] *** FROGGS left
[22:46] *** spider-mario left
[22:52] *** FROGGS joined
[22:58] *** kivutar left
[23:02] *** Kirkkaf joined
[23:03] *** nickf_mt joined
[23:05] <Kirkkaf> Hello, can someone provide some guidance on whether I should begin my journey with Perl 5 or 6? I am require to learn Perl to further my career but have never really done any serious programming.

[23:09] <japhb_> Kirkkaf, What do you mean when you say you are required "to learn Perl to further my career"?  Are you working in a group that does a lot of Perl already?  If so, you probably want to learn the same one they are using, which is most likely a Perl 5.

[23:11] <japhb_> If you were just told "Learn a Perl, it's good for your brain", then your choice is more open.  We tend to believe Perl 6 is pretty good for your brain, but it is not bulletproof, hardened, and ready for large-scale high-volume deployments yet.  (We are still working on a few final features, as well as heavily working on optimization, bug squashing, and shaving off the sharp bits of edge cases.)

[23:13] <nickf_mt> So, quick question...  Looking to get started playing with Perl 6...  I note the perl6 book on github was last updated in 2012...  Would this still be a useful resource to start with, or should I look at more current online tutorials/refs?

[23:13] *** atroxaper joined
[23:14] *** BenGoldberg joined
[23:17] <Kirkkaf> japhb_, my company is writing alot of Perl but the version was not specified so I guess I will have to get the details but are the two very different in design?

[23:17] *** atroxaper left
[23:17] <japhb_> Kirkkaf, Yes, Perl 6 is a completely new language, more of a sister language than a version increment.

[23:19] <japhb_> Perl 6 includes a large number of features that couldn't reasonably be retrofitted into Perl 5 due to backwards-compatibility constraints in the Perl 5 community.

[23:19] <japhb_> So Perl 6 takes advantage of the compatibility break to include some amazing new features.

[23:21] *** dmol left
[23:21] <japhb_> nickf_mt, What kinds of things are you interested in learning?

[23:21] *** FROGGS left
[23:22] <japhb_> Note that I've not read the GitHub Perl 6 book, as I joined the community before it was written.

[23:25] <nickf_mt> hrm... didn't have a lot of specifics in mind, just looking to play with a new language.  I guess I'll probably be wanting to interface with databases, use regex if I use it at work down the line

[23:25] <nickf_mt> maybe output excel files.  (working through the cpa exam atm, starting as a tax accountant in september)

[23:27] *** gfldex left
[23:29] <nickf_mt> Any idea how much the language itself has changed in the last 2 years?  As opposed to ironing out implementation/performance issues

[23:33] <japhb_> nickf_mt, You'll definitely want to learn about Grammars.  jnthn++ has a good talk on this: http://jnthn.net/papers/2014-fosdem-perl6-today.pdf

[23:34] *** Kirkkaf left
[23:34] <nickf_mt> excellent, thank you.  downloading :)

[23:35] <japhb_> As for language changes, there have been changes in the concurrency design, an expansion of Rakudo to multiple backends that had some knock-on effects as we learned more, a fleshing out (and implementation) of the more advanced module ecosystem design, and so on.

[23:36] <japhb_> The core language hasn't changed much, just gotten smoother, less buggy, faster, and so on.

[23:36] <japhb_> Oh, there have also been improvements in I/O, especially with the creation of the async I/O model.

[23:36] <japhb_> (I'm sure there are more that I am forgetting off the top of my head.)

[23:38] <nickf_mt> ok... so sounds like I should plan on looking elsewhere once I get past the very basics, unless they update that book :)

[23:39] <nickf_mt> given my large block of freetime to really dig in will be August though, I shan't count on that happening

[23:41] <nickf_mt> Oh, sounds like the rest of the family's home.  Thanks for the info, japhb .  See y'all next time I have a little downtime!

[23:41] <japhb_> nickf_mt, The channel is quite helpful too, and most active from about 8 AM to midnight in the European timezones (others are available in Asia and Americas, but fewer of us at any given time).

[23:41] <japhb_> nickf_mt, Enjoy!

[23:42] <nickf_mt> alrighty, thanks again!

[23:42] *** nickf_mt left
[23:44] *** Akagi201_ joined
[23:59] *** rindolf left
