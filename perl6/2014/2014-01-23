[00:01] <FROGGS> wow, what a mess

[00:02] <diakopter> BenGoldberg: no, it's just the amount of significant digits provided in the code for pi

[00:02] <FROGGS> BenGoldberg: if a certain precision of pi is specced, then it could be a n nieczabug

[00:18] *** cognominal left
[00:20] *** Ben_Goldberg joined
[00:22] *** BenGoldberg left
[00:23] <TimToady> n: say pi

[00:23] <camelia> niecza v24-109-g48a8de3: OUTPUT«3.1415926535897931␤»

[00:23] <TimToady> n: say pi.WHAT

[00:23] <camelia> niecza v24-109-g48a8de3: OUTPUT«Num()␤»

[00:29] <TimToady> well, nobody has done http://perlcabal.org/syn/S02.html#Allomorphic_Rats yet

[00:30] <timotimo> yeah :(

[00:32] <jnthn> timotimo: Weren't you looking for what to do next? ;)

[00:32] <timotimo> enh :|

[00:32] *** benabik left
[00:32] <timotimo> for that i'd need to get the multiple inheritance thing going, no?

[00:32] <jnthn> Well, we already ahve multiple inheritance

[00:32] <jnthn> And RatStr is the easy case

[00:33] <jnthn> 'cus Rat doesn't have weird boxing stuff going on.

[00:33] <timotimo> oh

[00:33] <timotimo> well, that's fair

[00:33] <timotimo> i don't think i'll get it in time for this release though.

[00:33] <jnthn> uh, box target I mean.

[00:33] <jnthn> That's fine :)

[00:33] <jnthn> I'm happy enough if not too many more things land before the release :)

[00:37] <timotimo> bitbucket has "sign in with github" and an "import ssh keys from github" button

[00:38] <timotimo> also, there's a "clone from github" button

[00:38] <FROGGS> nqp-m -e 'say("ABCabc123" ~~ /<+[C..Z]+:gc<Ll>>+/)'

[00:38] <FROGGS> Cabc

[00:38] <diakopter> timotimo: that's cool

[00:39] <FROGGS> I might add this after release... (I need to codegen for parrot and jvm)

[00:40] <timotimo> what exactly did you fix there?

[00:40] <timotimo> oh, now i get it, it's inside the < ... >

[00:40] <timotimo> the :gc

[00:42] <FROGGS> right

[00:43] <FROGGS> a colonpair, in theory

[00:45] *** stevan_ joined
[00:47] <lue> I just realized some people may want "use encoding" to specify the code file's encoding, not the encoding they wish to handle text in :/ . Something to mull over while I'm afk.

[00:47] <diakopter> http://www.developermedia.com/wp-content/uploads/2014/01/Developer-Media-Tech-Trends-Research-Results-Summary-1H2014.pdf

[00:47] <diakopter> 2nd page

[00:49] *** jnap left
[00:50] <jnthn> diakopter: So...C is dead? :)

[00:51] <diakopter> no.. this was a survey about technologies

[00:52] <jnthn> The graph is a curious mix 

[00:52] *** benabik joined
[00:53] <diakopter> (Java's not on there, but Eclipse is)

[00:53] <Mouq> diakopter: I'm trying to find what the survey was, though. It could've just been a form of names wich checkboxed next to them

[00:54] <diakopter> it's at the bottom

[00:54] <diakopter> yeah, seems the case

[00:54] <Mouq> *names with checkboxes

[00:54] <diakopter> (the form

[00:54] <diakopter> )

[00:54] <diakopter> 441 self-selected respondents mostly from among visitors to codeproject, which is very much .net/web centric

[01:00] <jnthn> I got some survey recently that was so hip it didn't list any of the technologies I work with day to day aside from JavaScript :)

[01:11] *** grondilu joined
[01:12] * grondilu sees on https://github.com/coke/perl6-roast-data/blob/master/perl6_pass_rates.csv that moar has taken the lead?!   Great news!

[01:13] <benabik> I wonder why JVM regressed so much?

[01:13] <FROGGS> grondilu: due to the fact that I messed up a huge test file for parrot and jvm

[01:13] <benabik> FROGGS: let us have this moment.  ;-)

[01:13] <FROGGS> everything is back to normal tomorrow :o)

[01:13] <FROGGS> moar is then somewhere at >99%

[01:15] <grondilu> ahh, ok.

[01:20] *** jnap joined
[01:24] *** jnap left
[01:38] *** jnap joined
[01:44] *** benabik left
[01:53] *** psch left
[01:56] *** xinming_ joined
[01:59] *** btyler left
[02:00] *** xinming left
[02:06] *** FROGGS[mobile] left
[02:09] *** grondilu left
[02:13] *** araujo joined
[02:33] *** rhr_ left
[02:39] *** rhr joined
[02:44] *** benabik joined
[03:04] <dalek> perl6.org: 5aabea9 | coke++ | source/index.html:

[03:04] <dalek> perl6.org: mention MoarVM

[03:04] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/5aabea92be

[03:07] <[Coke]> hope that's not premature.

[03:16] <clsn> p6: say <a b c>.WHAT; say <a <b> c>.WHAT;

[03:16] <camelia> rakudo-parrot c5ca99, rakudo-jvm c5ca99, rakudo-moar c5ca99: OUTPUT«(Parcel)␤(List)␤»

[03:16] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«(Parcel)␤(Parcel)␤»

[03:17] <clsn> Why Parcel and List I wonder.

[03:17] *** bjz left
[03:17] *** bjz joined
[03:19] <clsn> p6: say qw[a b c].perl; say qw[a [b] c].perl;

[03:19] <camelia> niecza v24-109-g48a8de3: OUTPUT«("a", "b", "c")␤("a", "[b]", "c")␤»

[03:19] <camelia> ..rakudo-parrot c5ca99, rakudo-jvm c5ca99, rakudo-moar c5ca99: OUTPUT«("a", "b", "c")␤("a", "[b]", "c").list␤»

[03:19] <clsn> It's having the (nested) delimiters in the qw.  Makes it a list and not a parcel for some reason.

[03:28] *** Alula left
[03:31] *** Alula joined
[03:39] *** mtj_ left
[03:43] <clsn> p6: say rand.Rat.perl; say (9.5).Rat.perl

[03:43] <camelia> rakudo-parrot c5ca99: OUTPUT«<659/1208>␤9.5␤»

[03:43] <camelia> ..rakudo-moar c5ca99: OUTPUT«<375/922>␤9.5␤»

[03:43] <camelia> ..rakudo-jvm c5ca99: OUTPUT«<53/1564>␤9.5␤»

[03:43] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«<450/769>␤9.5␤»

[03:44] <clsn> Wonder why the two Rats get two different .perls (one with / and one as decimal).  And the one with num/den shouldn't have <>, since that's not the perl input that produces them, right?  I should probably take some of these little LHFs one of these days.

[03:46] <geekosaur> Rat-s are specced with both those behaviors, IIRC

[03:53] *** Biohazard left
[03:56] *** Biohazard joined
[03:57] <diakopter> TimToady: you seen this? https://github.com/tokuhirom/PSR

[03:58] <diakopter> not to mention this https://github.com/tokuhirom/rockre

[04:02] *** thou left
[04:03] *** Biohazard left
[04:05] *** Biohazard joined
[04:25] *** SamuraiJack joined
[04:26] *** Khisanth left
[04:33] *** dayangkun joined
[04:39] *** Khisanth joined
[04:43] *** kaleem joined
[04:46] *** alester joined
[04:47] *** kaleem_ joined
[04:49] *** kaleem left
[05:07] <Ben_Goldberg> p6: my $r = pi.Rat; say $r.perl, $r, pi;

[05:07] <camelia> niecza v24-109-g48a8de3: OUTPUT«<355/113>3.1415933.1415926535897931␤»

[05:07] <camelia> ..rakudo-jvm c5ca99: OUTPUT«<355/113>3.1415933.141592653589793␤»

[05:07] <camelia> ..rakudo-parrot c5ca99: OUTPUT«<355/113>3.1415933.14159265358979␤»

[05:07] <camelia> ..rakudo-moar c5ca99: OUTPUT«<355/113>3.1415933.141593␤»

[05:08] * Ben_Goldberg wonders why conversion from Num to Rat truncates so much

[05:08] <Ben_Goldberg> p6: my $r = 3.1415926535897931.Rat; say $r.perl, $r, $r.denominator;

[05:08] <camelia> rakudo-parrot c5ca99, rakudo-jvm c5ca99, rakudo-moar c5ca99, niecza v24-109-g48a8de3: OUTPUT«3.14159265358979313.141592653589793110000000000000000␤»

[05:08] <Ben_Goldberg> p6: my $r = 3.1415926535897931.Rat; say join ' ', $r.perl, $r, $r.denominator;

[05:09] <camelia> rakudo-parrot c5ca99, rakudo-jvm c5ca99, rakudo-moar c5ca99, niecza v24-109-g48a8de3: OUTPUT«3.1415926535897931 3.1415926535897931 10000000000000000␤»

[05:09] <Ben_Goldberg> p6: my $r = 3.1415926535897931.Num.Rat; say join ' ', $r.perl, $r, $r.denominator;

[05:09] <camelia> rakudo-parrot c5ca99, rakudo-jvm c5ca99, rakudo-moar c5ca99, niecza v24-109-g48a8de3: OUTPUT«<355/113> 3.141593 113␤»

[05:09] *** alester left
[05:12] <TimToady> diakopter: gee, viv converts P6 grammars into P5 grammars

[05:18] *** Ben_Goldberg left
[05:20] *** jnap left
[05:27] *** [Sno] left
[05:41] *** jeffreykegler joined
[05:49] <Mouq> It's gonna look messed up until I drastically change the structure, but I think http://mouq.github.io/feast at least *looks* cool even the tables break sometimes and there's a lot of possible functionality missing

[05:50] *** jnap joined
[05:53] <Mouq> The name is meh, it's just what I used when I started working on it

[06:01] *** zby_home_ joined
[06:01] *** jnap left
[06:04] *** bjz left
[06:04] *** bjz joined
[06:06] *** bjz left
[06:18] *** jeffreykegler left
[06:24] *** dayangkun left
[06:32] *** [Sno] joined
[06:37] *** dayangkun joined
[06:44] <moritz> diakopter: it's not a matter of file size

[06:45] *** AW3i joined
[06:56] *** odoacre left
[07:34] *** FROGGS left
[07:46] *** Mouq left
[07:47] *** daniel-s joined
[07:47] *** daniel-s left
[07:53] *** ivanshmakov joined
[07:59] *** jnap joined
[08:03] *** jnap left
[08:09] *** Mouq joined
[08:14] *** zakharyas joined
[08:15] *** silug left
[08:22] *** FROGGS joined
[08:22] *** ribasushi left
[08:25] *** ribasushi joined
[08:25] *** LLamaRider joined
[08:26] *** silug joined
[08:35] *** pdcawley joined
[08:39] *** daniel-s joined
[08:41] *** Khisanth left
[08:42] *** Khisanth joined
[08:54] *** darutoko joined
[08:55] *** bjz joined
[09:00] *** jnap joined
[09:03] *** Mouq left
[09:04] *** jnap left
[09:06] *** Khisanth left
[09:06] *** araujo left
[09:06] *** stevan_ left
[09:06] <FROGGS> rakudo HEAD fail: https://gist.github.com/FROGGS/9677dc12d5a6cd38f73b

[09:07] *** araujo joined
[09:07] <moritz> eeks

[09:11] *** Khisanth joined
[09:11] *** stevan_ joined
[09:11] *** drin_m left
[09:13] *** Khisanth left
[09:13] *** stevan_ left
[09:14] *** Khisanth joined
[09:14] *** pdcawley left
[09:14] *** stevan_ joined
[09:14] *** AW3i left
[09:15] *** Vlavv` left
[09:23] *** AW3i joined
[09:23] *** dmol joined
[09:26] *** dakkar joined
[09:28] *** Vlavv` joined
[09:30] <FROGGS> lue: about 'use encoding', I'd think that you would pass it like 'use Foo:enc<ucs2>' if you mean "modules" and 'use encoding "ucs2"' for strings/IO in your scope

[09:35] *** pecastro joined
[09:52] <hoelzro> morning #perl6

[09:54] <FROGGS> o/(

[09:54] <moritz> \o hoelzro 

[09:54] <FROGGS> -(

[09:54] <FROGGS> ^--- sad cyclops

[09:55] <tadzik> http://i.imgur.com/9jLBEsh.gif

[09:56] <tadzik> somehow it seemed related

[09:56] <FROGGS> O.<

[09:57] <FROGGS> tadzik: you are coming to Poznań too? :D

[09:57] <tadzik> FROGGS: sure :)

[09:57] <FROGGS> \o/

[09:57] <tadzik> yay, meetup!

[09:57] <FROGGS> sad that we have to wait until may :/

[09:57] <FROGGS> yeah

[09:58] <FROGGS> and it is awesome, it is just a bit more than 2.5 hours from berlin by train

[09:58] <tadzik> I wonder how far from Warsaw by train..

[09:58] <FROGGS> (though, I need about an hour from south berlin to that station)

[09:58] <tadzik> yeah, it can be 2.5 hours too :)

[09:59] <hoelzro> tadzik: where is that gif from?

[09:59] <FROGGS> tadzik: 16 hours and one minute

[09:59] <tadzik> hoelzro: uh, from the internet? P

[09:59] <tadzik> hoelzro: I saw it on reddit a while back, and was able to google it just now

[09:59] <hoelzro> ah ha

[09:59] <hoelzro> I thought it may have been a bug from a game or something =P

[09:59] <tadzik> sth like  "james bond opening get down gif"

[10:00] <tadzik> it is a bug from a game :)

[10:00] <FROGGS> lol, google says you travel via frankfurt >.<

[10:00] *** fhelmberger joined
[10:00] <tadzik> FROGGS: 16 hours what? :o

[10:00] <FROGGS> from warsaw to poznań

[10:00] <FROGGS> (via frankfurt for some reason)

[10:00] <tadzik> hoelzro: https://www.youtube.com/watch?v=DzwFpzdO3DY

[10:01] *** jnap joined
[10:01] <hoelzro> what the hell

[10:01] <tadzik> it has a knowyourmeme article

[10:01] * hoelzro looks

[10:02] <tadzik> FROGGS: surely not Frankfur Am Mein?

[10:02] *** Mouq joined
[10:02] <FROGGS> tadzik: no, Frankfurt (Oder), at least

[10:02] <tadzik> but why 16 hours :o

[10:03] <tadzik> with a 14 hour wait?

[10:03] <FROGGS> warsaw to frankfurt is about 7 hours it seems

[10:03] <tadzik> oh!

[10:03] <tadzik> I didn't look at google :)

[10:04] <FROGGS> I don't know otehr pages to look for trains outside of germany :o)

[10:04] <tadzik> :)

[10:04] <FROGGS> my connections shows up pretty accurate though

[10:04] <tadzik> pkp.pl is the only train webpage I ever neded

[10:04] <tadzik> it's a valley of tears sometimes, but it can be nice

[10:05] <tadzik> last time I was going to Kraków, and Geothe instutute left free books inside the train

[10:05] <FROGGS> well, I've got the problem that I cant read it :/

[10:05] *** jnap left
[10:05] *** grondilu joined
[10:05] <tadzik> like a preview books, and I can bring it to the Geothe Institute and get a full-sized book of a German author

[10:05] <FROGGS> a bit like matrix... the blue or the red button?

[10:05] <tadzik> hehe

[10:05] <grondilu> p6: say pi.FatRat.perl

[10:05] <camelia> rakudo-parrot c5ca99, rakudo-jvm c5ca99, rakudo-moar c5ca99: OUTPUT«FatRat.new(355, 113)␤»

[10:05] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«FatRat.new(884279719003555, 281474976710656)␤»

[10:05] <tadzik> FROGGS: the green one :P

[10:05] <tadzik> http://www.rozklad-pkp.pl/bin/query.exe/pn? is what you care about

[10:06] <tadzik> it's pretty confusing though, even in Polish

[10:06] <FROGGS> ha, that is the same software as we use in berlin it seems :o)

[10:06] <tadzik> the main page also says: Recommended: Train Delays

[10:07] *** Mouq left
[10:07] <tadzik> I don't think that people riding a train for 24 hours instead of 3 appreciate the humour

[10:07] <FROGGS> ohh dear... I will bug you about train station namen in may then, okay?

[10:07] <tadzik> sure

[10:07] <FROGGS> names*

[10:07] <tadzik> you're most likely interested in Poznań Główny

[10:08] <FROGGS> it is rediculous that Poznań does not show up when you type Poznan

[10:09] <FROGGS> at least to me

[10:09] <tadzik> haha

[10:09] <tadzik> indeed

[10:09] <tadzik> try "pozna" :P

[10:09] <FROGGS> that worked, yes

[10:10] <dalek> nqp: be6a8f1 | jnthn++ | t (2 files):

[10:10] <dalek> nqp: Bump to Moar 2014.01 in readiness for release.

[10:10] <dalek> nqp: review: https://github.com/perl6/nqp/commit/be6a8f1403

[10:11] *** AW3i left
[10:20] *** erkan joined
[10:20] *** erkan left
[10:20] *** erkan joined
[10:29] *** sqirrel joined
[10:33] <sergot> masak: [Coke]: I meant passwords on others sites, if you have the same. :)

[10:41] *** denisboyun joined
[11:01] *** jnap joined
[11:06] *** jnap left
[11:09] *** daniel-s left
[11:14] <timotimo> o/

[11:20] <FROGGS> o/

[11:23] <dalek> roast: 67c03a7 | (Tobias Leich)++ | / (2 files):

[11:23] <dalek> roast: adjust expectation after off-by-one was fixed

[11:23] <dalek> roast: review: https://github.com/perl6/roast/commit/67c03a7a9c

[11:33] *** mtj_ joined
[11:33] *** mavcunha joined
[11:35] *** erkan left
[11:37] *** erkan joined
[11:50] *** Mouq joined
[11:55] *** Mouq left
[12:02] *** jnap joined
[12:07] *** jnap left
[12:12] <[Coke]> sergot++

[12:22] *** atroxaper joined
[12:37] *** atroxaper left
[12:37] *** atroxaper joined
[12:43] *** atroxaper left
[12:45] *** atroxaper joined
[12:50] *** kaleem_ left
[12:59] *** rindolf joined
[13:02] *** kaleem joined
[13:03] *** jnap joined
[13:04] <FROGGS> only one worrying this left:

[13:04] <FROGGS> t/spec/S32-io/IO-Socket-INET.t                                (Wstat: 0 Tests: 41 Failed: 21)

[13:04] <FROGGS>   Failed tests:  1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23

[13:04] <FROGGS>                 25, 27, 29, 31-32, 34, 36, 38, 40

[13:04] <timotimo> that's for moarvm?

[13:04] <FROGGS> no

[13:04] <FROGGS> parrot

[13:04] <timotimo> oh!

[13:04] <timotimo> that's not good

[13:04] <FROGGS> I know

[13:05] <jnthn> FROGGS: Does this show up in the daily runs?

[13:05] <FROGGS> jnthn: yes, since I fixed the test file yesterday

[13:05] <FROGGS> it was skipped

[13:05] <jnthn> Oh, darn...

[13:06] <FROGGS> yeah

[13:06] <FROGGS> it was meant to be skipped for jvm, but was skipped for all ... for five months

[13:07] <jnthn> So we have no idea when it started failing :(

[13:07] <FROGGS> correct

[13:08] <jnthn> otoh, if sockets were actually busted then we'd probably have heard about it...iirc, Panda relies on them to obtain its stuff. 

[13:08] *** jnap left
[13:08] <moritz> and people have been developing Net::IRC

[13:08] <jnthn> Busted as in "don't work at all"

[13:08] <jnthn> Right

[13:08] <jnthn> Doesn't mean nothing is wrong, though.

[13:08] <colomon> jnthn: last I looked, panda just called curl (or something like that)

[13:08] *** yves joined
[13:09] <FROGGS> it times out I think

[13:09] <FROGGS> but just started now

[13:09] <colomon> hmmm, Panda does have one call to IO::Socket

[13:10] <colomon> IO::Socket::INET

[13:11] <jnthn> my $s = IO::Socket::INET.new(:host<feather.perl6.nl>, :port(3000));

[13:11] <jnthn> yeah

[13:11] <jnthn> it's using it to get the module list

[13:11] * colomon is trying it now, but pandabrew insisted on rebootstraping, so it may take a while

[13:12] <colomon> also, I think I'm running it on JVM at the moment.  ;)

[13:13] <colomon> um

[13:15] <FROGGS> not ok 1 - [44s] echo server and client

[13:15] <FROGGS> #      got: '===SORRY!===

[13:15] <FROGGS> # Could not find symbol '&INET'

[13:15] <FROGGS> # (timeout)

[13:15] <FROGGS> I am not sure I understand that

[13:16] <FROGGS> r: say IO::Socket::INET

[13:16] <colomon> I can confirm that rakudo parrot panda updated projects.json I my machine just now without apparent issue

[13:16] <camelia> rakudo-moar c5ca99: OUTPUT«===SORRY!===␤Could not find symbol '&INET'␤»

[13:16] <camelia> ..rakudo-parrot c5ca99, rakudo-jvm c5ca99: OUTPUT«(IO::Socket::INET)␤»

[13:16] <FROGGS> aha

[13:17] <jnthn> No sockets in Moar yet

[13:18] <FROGGS> I know, but the TAP I pasted is from perl6-p

[13:19] <jnthn> FROGGS: Is it accidentally invokving a perl6 (that happens to be perl6-m) at some point?

[13:19] <FROGGS> >.<

[13:19] <FROGGS> jnthn++

[13:20] <FROGGS> but my configure line was: perl Configure.pl --backends=parrot,jvm,moar --prefix=../nqp/install && make install

[13:22] <FROGGS> k, now it is only a timeout

[13:22] <jnthn> Does it timeout on JVM too?

[13:22] <jnthn> (I know it's skipped, but if you try to run it...)

[13:24] <FROGGS> yes, but it invokes ./perl6 anyway... I fixing that

[13:27] <FROGGS> jvm does work now, at least the first test

[13:27] <jnthn> k

[13:27] <FROGGS> p: say $*EXECUTABLE_NAME.path.absolute

[13:27] <jnthn> I seem to remember something about timeouts...

[13:27] <camelia> rakudo-parrot c5ca99: OUTPUT«IO::Path</home/p6eval/rakudo-inst/bin/perl6-p>␤»

[13:27] <FROGGS> j: say $*EXECUTABLE_NAME.path.absolute

[13:27] <camelia> rakudo-jvm c5ca99: OUTPUT«IO::Path</home/p6eval_eval/perl6-j>␤»

[13:28] <FROGGS> assum

[13:29] <FROGGS> and now it does not time out for parrot?

[13:29] <FROGGS> the answer came in 3s

[13:29] *** skids left
[13:31] <jnthn> What did you change?

[13:31] <FROGGS> just gave it the right binary name

[13:31] <FROGGS> but I think the moar runner was to blame

[13:31] <jnthn> ah

[13:31] <jnthn> k

[13:32] <jnthn> So now we're clean?

[13:32] <FROGGS> not sure yet

[13:32] <FROGGS> in roast there is that: https://github.com/coke/perl6-roast-data/blob/master/log/rakudo.parrot_summary.out#L2582

[13:33] *** sqirrel left
[13:33] <FROGGS> yeah, test 40 fails here too

[13:36] <dalek> roast: 0faa8bb | (Tobias Leich)++ | S32-io/IO-Socket-INET. (3 files):

[13:36] <dalek> roast: use correct executable for running client/server

[13:36] <dalek> roast: review: https://github.com/perl6/roast/commit/0faa8bba68

[13:38] *** Mouq joined
[13:43] *** Mouq left
[13:43] <dalek> roast: 8f066b8 | (Tobias Leich)++ | S32-io/IO-Socket-INET.t:

[13:43] <dalek> roast: correctly interpolate executable name

[13:43] <dalek> roast: review: https://github.com/perl6/roast/commit/8f066b8ea5

[13:50] <FROGGS> gah, test 40 fails not because the binary data differs, no, one of them is a Buf[uint8] and the other one is a Buf

[13:51] <dalek> roast: 2620680 | (Tobias Leich)++ | S32-io/IO-Socket-INET.pl:

[13:51] <dalek> roast: just check for the contained data

[13:51] <dalek> roast: review: https://github.com/perl6/roast/commit/2620680ef9

[13:51] <FROGGS> jnthn: spectest clean sir

[13:51] <colomon> FROGGS++

[13:51] <FROGGS> (p-spectest taht is)

[13:51] <[Coke]> IWBNI MAIN() would tell you the types of arguments when you make a mistake. (declare that MAIN takes an Int arg, but give it a string - it will show you the usage, but won't mention Int vs. Str)

[13:52] <[Coke]> FROGGS++ cleaning up my mess.

[13:52] <moritz> so, all clear for masak++ doing the release today? :-)

[13:53] <FROGGS> moritz: well, doing a j-spectest now

[13:53] <jnthn> FROGGS++ # awesome

[13:53] <moritz> now is a good time to add entries to docs/ChangeLog

[13:53] *** araujo left
[13:53] <jnthn> Indeed.

[13:53] <FROGGS> t/spec/S02-magicals/env.rakudo.jvm ........................... Failed 1/17 subtests

[13:53] <jnthn> The MoarVM monthly tarball is already cut for masak too :)

[13:54] <moritz> is it uploaded somewhere?

[13:54] *** araujo joined
[13:54] *** araujo left
[13:54] *** araujo joined
[13:54] <jnthn> moritz: http://jnthn.net/MoarVM/MoarVM-2014.01.tar.gz

[13:54] <moritz> \o/

[13:54] <[Coke]> there have been jvm failures for several weeks.

[13:55] <jnthn> moritz: I'm planning to get a site up at moarvm.org and then have it there in a bit

[13:55] <dalek> rakudo/nom: 64e6517 | moritz++ | docs/ChangeLog:

[13:55] <dalek> rakudo/nom: add a ChangeLog entry

[13:55] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/64e65172a5

[13:55] <jnthn> Started on that last night, but it got to 3am and I wanted to sleep. And got $dayjob things to do at the moment 

[13:56] <moritz> FROGGS: have you written any spectests for <alias=:alpha> etc. ?

[13:56] <FROGGS> moritz: yes

[13:56] <moritz> \o/

[13:56] <moritz> FROGGS++

[13:56] <FROGGS> moritz: just grep for "foo" and "bar" in t/spec :P

[13:57] <moritz> :-)

[13:57] <moritz> t/spec$ git grep --word foo|wc -l

[13:57] <moritz> 2632

[13:57] <moritz> bar has only 1239 hits

[13:59] <FROGGS> m-runner-default: $(M_RUNNER)

[13:59] <FROGGS> 	$(CP) $(M_RUNNER) perl6

[13:59] <FROGGS> that should have a $(BAT) or so, right?

[13:59] <dalek> rakudo/nom: c2967a0 | jnthn++ | docs/ChangeLog:

[13:59] <dalek> rakudo/nom: A few more ChangeLog entries.

[13:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c2967a0a1c

[13:59] <moritz> FROGGS: yes, I think so

[13:59] <jnthn> FROGGS: Yes, think so

[13:59] * jnthn makes a cup of tea and gets back to course writing

[14:00] <FROGGS> ahh, it has a @runner_suffix@ in the Makefile.in, nvm then

[14:04] *** jnap joined
[14:08] *** jnap left
[14:11] *** kbaker joined
[14:18] *** mtk joined
[14:20] *** woolfy left
[14:24] *** sqirrel joined
[14:34] *** bluescreen10 joined
[14:39] *** telex left
[14:40] *** telex joined
[14:40] *** immortal joined
[14:40] *** immortal left
[14:40] *** immortal joined
[14:42] *** erkan left
[14:46] *** rindolf left
[14:49] *** rindolf joined
[14:54] *** sctt joined
[14:56] *** btyler joined
[14:57] *** bluescreen100 joined
[14:58] *** sctt left
[15:01] *** bluescreen10 left
[15:03] *** skids joined
[15:04] *** jnap joined
[15:11] * nwc10 forgets - who is doing the release today?

[15:11] <nwc10> oh, scrollback implies masak

[15:11] <jnthn> el sengor masak

[15:12] <jnthn> Maybe starting on it in a couple of hours, I guess

[15:14] *** kaare__ left
[15:14] *** kaare__ joined
[15:19] *** kaare__ left
[15:25] *** sqirrel left
[15:25] *** FROGGS left
[15:27] *** Mouq joined
[15:32] *** Mouq left
[15:34] <[Coke]> r: say 1,2…9

[15:34] <camelia> rakudo-parrot c2967a, rakudo-jvm c2967a, rakudo-moar c2967a: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Two terms in a row␤at /tmp/tmpfile:1␤------> [32msay 1,2[33m⏏[31m…9[0m␤    expecting any of:␤        postfix␤        infix stoppe…»

[15:34] <[Coke]> is that something we can module?

[15:34] <[Coke]> (or should we add a non texas variety?)

[15:36] <jnthn> module imo

[15:39] <colomon> is that the unicode … ?

[15:43] <jnthn> .u …

[15:43] <yoleaux> U+2026 HORIZONTAL ELLIPSIS [Po] (…)

[15:46] <[Coke]> just wondering how we'd provide that... as an infix?

[15:47] <[Coke]> r: sub infix<<…>> {$a...$b} ; say 1,2…10

[15:47] <camelia> rakudo-parrot c2967a, rakudo-jvm c2967a, rakudo-moar c2967a: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Missing block␤at /tmp/tmpfile:1␤------> [32msub infix[33m⏏[31m<<…>> {$a...$b} ; say 1,2…10[0m␤    expecting any of:␤        state…»

[15:47] <[Coke]> r: sub infix<<…>> {$^a...$^b} ; say 1,2…10

[15:47] <camelia> rakudo-parrot c2967a, rakudo-jvm c2967a, rakudo-moar c2967a: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Missing block␤at /tmp/tmpfile:1␤------> [32msub infix[33m⏏[31m<<…>> {$^a...$^b} ; say 1,2…10[0m␤    expecting any of:␤        sta…»

[15:48] <PerlJam> r:  sub infix:<…> { $^a...$^b };  say 1,2…10

[15:48] <camelia> rakudo-parrot c2967a, rakudo-jvm c2967a, rakudo-moar c2967a: OUTPUT«12 3 4 5 6 7 8 9 10␤»

[15:49] <PerlJam> (note the relative precedence)

[15:50] <PerlJam> IS there a doc somewhere that explains the rationale behind having some unicode+texas ops and not others ?

[15:50] * skids was thinking of doing a module that mapped most existing core ops to most appropriate unicode

[15:51] <skids> Mainly just to provide a place for people to argue about which ones were most appropriate.

[15:51] <skids> Though IIRC 'is tighter'/'is equiv'/etc are NYI.

[15:51] <moritz> PerlJam: the "core" Unicode operators are all in the Latin-1 range

[15:52] <moritz> skids: I think they are implemented

[15:52] <moritz> PerlJam: only the set operators fall out of that schema

[15:54] <PerlJam> moritz: Aye, but is that "the" answer.  (I honestly never gave it much thought until now).

[15:54] <skids> r: sub infix:<⊶> (\a, \b) is equiv(&infix<^..>) { \a ^.. \b }; .say for 1 ⊶ 5;

[15:54] *** araujo left
[15:54] <camelia> rakudo-parrot c2967a, rakudo-jvm c2967a, rakudo-moar c2967a: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Can't use unknown trait 'is equiv' in a sub+{precedence} declaration.␤at /tmp/tmpfile:1␤------> ␤    expecting any of:␤        rw parcel hi…»

[15:54] <PerlJam> (i.e., when people ask why we don't have … and →, what do we say?)

[15:55] <colomon> I'm in favor of … if for no better reason that my IRC client seems to decide to substitute it when I type three .

[15:58] *** Psyche^_ joined
[16:00] *** FROGGS joined
[16:00] <colomon> well, and it would be a Bad Thing to let people define it to mean something else.

[16:00] <FROGGS> *brrrr*, it is pretty damn cold on a bike these days

[16:00] <Juerd> colomon: That means you'd have to predefine all the right arrows...

[16:00] <colomon> (I mean, I guess we would allow it anyway, but having it default to the right thing seems sensible)

[16:01] <Juerd> I think that any character that is not present on any standard keyboard layout, should not be used :)

[16:01] <colomon> p6 wildly disagrees with you on that one.

[16:01] <Juerd> I know

[16:01] * PerlJam doesn't see any guillemets on his keyboard

[16:02] <Juerd> PerlJam: They are on some standard keyboard layouts though.

[16:02] <Juerd> (Yes, there is a → on my keyboard, but that's a cursor key :))

[16:02] *** Psyche^ left
[16:03] <nwc10> I have a ⌘ key, but if I press it nothing seems to happen :-)

[16:03] <nwc10> to be fair, I also have a ⏏ which does do something.

[16:04] <PerlJam> Juerd: maybe if programming langauges start using unicode more, the "standard keyboard layouts" will start including unicode characters

[16:06] <skids> I think it's important to keep most of the non-typable characters out of the core distro as a warning that they should only be used in domain-specific devel environments, but also to stake claim to some obvious ones so they don't get abused.  Thus, module.

[16:06] <skids> (One module to bind them all)

[16:07] <Juerd> PerlJam: Well, tbh I've just mappend compose + arrow to their respective symbols 

[16:07] <skids> But as to what to name it, that's where I'm hung.

[16:07] <PerlJam> heh, I was just thinking about remapping some of my keys too :)

[16:07] <Juerd> So typing → is now 2 keystrokes, one less than ->.

[16:07] *** zby_home_ left
[16:08] <Juerd> So does Perl 6 support ≥ and such?

[16:09] <skids> No I think you can still count them on two hands, including the set operators.

[16:09] <Juerd> Two hands... that's 0..1023 :)

[16:09] <skids> Kindercounting. :-)

[16:10] <skids> And it's 3**10 if you use trinary with bent knuckles.

[16:13] *** [Sno] left
[16:13] <colomon> to me, the interesting distinction between … and → is that the former really looks like the ASCII version, while the latter does not.  At least in the font I'm using, I'd never confuse the latter, and really can't tell the difference between the former.

[16:13] *** treehug88 joined
[16:14] *** rindolf left
[16:14] <skids> Problem with any arrow is there are tens of nearly identical options.

[16:15] <Juerd> In my terminals, … looks like one character whereas ... looks like 3 :)

[16:15] <colomon> Juerd: in mine, they look almost exactly the same.  The latter is slightly darker, but that's it.  and that's only easy to compare because you put them both on the same line.

[16:16] <Juerd> http://juerd.nl/i/e110ad53785506342d9c8285eb4a711b.png

[16:17] <skids> xchat-gnome looks like what colomon is seeing.

[16:20] *** zakharyas left
[16:20] <colomon>  http://harmonyware.com/pictures/dots.png

[16:21] <FROGGS> that is why I use a fixed-width font :o)

[16:23] <skids> FROGGS: I bet you even have (setq show-trailing-whitespace t) in your .emacsrc, you snob :-)

[16:23] <FROGGS> skids: I am using SciTe, but yes, it shows whitespace :P

[16:24] *** zby_home_ joined
[16:27] <FROGGS> maybe I am too german to tolerate tab/spaces mixups

[16:30] *** atroxaper left
[16:41] <PerlJam> FROGGS: what does being german have to do with tab/spaces mixups?

[16:41] <PerlJam> FROGGS: and does this affect the number of german python programmers?

[16:42] <skids> .oO(ALLCAPS programming language)

[16:42] <FROGGS> PerlJam: I'd say germans tend to be picky of that kind of stuff

[16:43] <FROGGS> PerlJam: for example we have like ten times more road signs than ppl living here... we like it when everything is ordered well

[16:44] <PerlJam> interesting.

[16:45] <skids> I'd have to get out and walk to read that many road signs.

[16:45] *** bluescreen100 left
[16:45] <PerlJam> you made me think of a trip to Mexico I made about 10 years ago though.  There were road signs all over the place.  The problem was that they were small and not at eye-level, so you really had to look around to see them  (and most locals seemed to just ignore them anyway)

[16:47] *** bluescreen10 joined
[16:48] <FROGGS> sad, I can't find the pic...

[16:49] <FROGGS> but I'Ve seen one near a forest

[16:49] <FROGGS> and there was a street and a walkway through the forst

[16:49] <FROGGS> forest*

[16:49] <FROGGS> and another walkway in parallel to the street

[16:50] <FROGGS> where the walkways met where at least 30 road signs

[16:50] <skids> Here we just paint colored rectangles on trees and hope some high school kids don't go and mess with it.

[16:51] <timotimo> should we reword the changelog entry for moar to read ">99%" already?

[16:52] <jnthn> timotimo: Yeah, go for it. :)

[16:52] <jnthn> timotimo: We were 100% yesterday :P

[16:52] <dalek> rakudo/nom: 0e89264 | timo++ | docs/ChangeLog:

[16:52] <dalek> rakudo/nom: rakudo-moar actually has >99% now

[16:52] <dalek> rakudo/nom: 

[16:52] <dalek> rakudo/nom: edited with no small amount of pride

[16:52] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0e8926436f

[16:55] <colomon> \o?

[16:55] <colomon> \o/

[16:55] <colomon> \o? is really the kind of day I'm having

[17:03] *** denisboyun left
[17:05] <dalek> rakudo-star-daily: 0ab14e7 | coke++ | log/ (5 files):

[17:05] <dalek> rakudo-star-daily: today (automated commit)

[17:05] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/0ab14e7051

[17:06] <timotimo> tadzik: you didn't have a look at the warnings in the panda tests :(

[17:07] *** panchiniak joined
[17:08] <jnthn> timotimo: There's time for it before the month's Star release still

[17:13] <moritz> which tests does moar pass that the JVM doesn't?

[17:14] <timotimo> the test of time.

[17:14] <jnthn> Probably some Unicode related things also

[17:15] <jnthn> We don't do NFG yet, but we don't have UTF-16 brain damage either.

[17:15] *** Mouq joined
[17:17] <timotimo> what exactly is the 32 bit integer representation we have? does it cover all and for realsies all unicode characters ever?

[17:18] <jnthn> It's basically UTF-32 at the moment. But note they're signed; we'll use negatives for NFG

[17:18] <jnthn> It does cover all the Unicode *codepoints* ever.

[17:18] <jnthn> Character is a much fuzzier notion.

[17:18] <timotimo> ah, of course

[17:19] <FROGGS> the terms are described in the first 50 pages of the unicode spec btw :o)

[17:20] *** Mouq left
[17:20] <[Coke]> someone wants to write some p5 to help out star, it'd be nice if the 'make modules-test' actually had a single harness rather than one per module.

[17:21] *** djanatyn left
[17:21] *** djanatyn joined
[17:22] *** ajr joined
[17:23] *** ajr is now known as Guest31072

[17:23] *** Guest31072 is now known as ajr_

[17:25] <timotimo> jnthn: fwiw, the async file class still has a nasty bug in which it closes the $PIO and later tries to boolify it, which doesn't give back false for a closed file descriptor

[17:25] <timotimo> and i don't know how to properly set the boolification spec.

[17:26] *** Tene left
[17:26] *** kaleem left
[17:26] *** Tene joined
[17:27] *** djanatyn left
[17:27] *** djanatyn joined
[17:27] <jnthn> timotimo: oh, hmm

[17:28] <timotimo> despite spending lots of time on moarvm this month, the rakudo team has collected a sizable amount of changes visible to every perl6 user; i'm very happy

[17:29] *** djanatyn left
[17:29] *** djanatyn joined
[17:30] <moritz> well, there is overlap between the moar and rakudo teams, but also some folks that work on just one them

[17:31] <jnthn> Some significant improvements on JVM also.

[17:31] <[Coke]> also I ate a donut.

[17:31] <timotimo> does the usage of a single classloader for all classes warrant a changelog entry?

[17:31] <timotimo> that was for all P6Opaque, right?

[17:31] <jnthn> timotimo: Did that actually go in yet?

[17:32] <timotimo> i should have a look

[17:32] <jnthn> ah yes, seems so

[17:32] <jnthn> 6ee48136a

[17:32] <[Coke]> r: "Moar is at {100*28656/28786} of parrot today."

[17:33] <camelia> rakudo-parrot 0e8926, rakudo-jvm 0e8926, rakudo-moar 0e8926: ( no output )

[17:33] <[Coke]> r: say "Moar is at {100*28656/28786} of parrot today."

[17:33] <camelia> rakudo-parrot 0e8926, rakudo-jvm 0e8926, rakudo-moar 0e8926: OUTPUT«Moar is at 99.548392 of parrot today.␤»

[17:33] <timotimo> Only use a single ByteClassLoader, attached to the GlobalContext. got in

[17:33] <[Coke]> is there -ever- a case where the three rakudos will be running different versions?

[17:33] <jnthn> timotimo: Mark it as JVM specific in Changeog

[17:33] <[Coke]> (and if so, can we only report the hash once in cases where it's the same?)

[17:33] <timotimo> [Coke]: i had been working on a script that would compress this text down to a readable but succint format in all cases

[17:33] <colomon> 99.5%?!  \o/

[17:33] <jnthn> [Coke]: I think that they are built/deployed at different times

[17:34] <jnthn> colomon: That's against Parrot, not against JVM...

[17:34] <timotimo> jnthn: did anybody check if it actually makes a big difference in anything?

[17:34] <colomon> oh

[17:34] <jnthn> timotimo: Well, it made a differnce in that arnsholt++ could unbust stuff

[17:34] <timotimo> :D

[17:34] <jnthn> timotimo: Ohh!!! Of course, we must mention NativeCall on JVM should work much better now in the ChangeLog too!

[17:34] <PerlJam> one of these days it'll be "Moar is at 102.23434% of parrot today"  :)

[17:35] <[Coke]> timotimo: danke.

[17:35] <timotimo> [Coke]: but i've been writing it in perl6, because that's all i know :P

[17:35] <timotimo> someone will have to port it for me

[17:36] <[Coke]> timotimo: can't we guarantee that we always have a working perl6 about? ;)

[17:36] <timotimo> who knows :)

[17:36] <[Coke]> but yah, someone can port it.

[17:37] <dalek> rakudo/nom: 4850a74 | timo++ | docs/ChangeLog:

[17:37] <dalek> rakudo/nom: a few more JVM changelog entries

[17:37] <dalek> rakudo/nom: 

[17:37] <dalek> rakudo/nom: arnsholt++ is to thank for these

[17:37] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4850a74ae6

[17:44] *** psch joined
[17:45] *** fhelmberger left
[17:47] *** djanatyn left
[17:48] *** djanatyn joined
[17:50] *** immortal left
[17:50] *** erkan joined
[17:50] *** erkan left
[17:50] *** erkan joined
[17:54] <timotimo> i've found something where perl6-m runs fine and perl6-p double-frees :)

[17:55] <jnthn> .oO( bug free )

[17:55] *** dakkar left
[17:56] <timotimo> rakudo: my $foo = 0 but ""; say $foo ~ " hey!"

[17:56] *** FROGGS[mobile] joined
[17:56] <camelia> rakudo-parrot 0e8926, rakudo-jvm 0e8926, rakudo-moar 0e8926: OUTPUT« hey!␤»

[17:57] <timotimo> hm.

[17:57] <masak> evening, #perl6

[17:57] <TimToady> one would expect ~ to prefer the stringy bits

[17:58] <psch> hi masak, hi #perl6 

[17:58] <timotimo> yes, it does in this example, but locally i have a fail that i need to golf

[17:58] <psch> (or the other way around..?)

[17:59] <timotimo> r: class Test { has $.prefix = 0 but ""; has $.postfix = 0 but "" }; given Test.new { say .prefix ~ " - " ~ .postfix }

[17:59] *** rindolf joined
[17:59] <masak> I had this idea that I would cut a Rakudo release tonight. what do you think of that, #perl6?

[17:59] <camelia> rakudo-parrot 0e8926, rakudo-jvm 0e8926, rakudo-moar 0e8926: OUTPUT« - ␤»

[17:59] <timotimo> masak: i think that would be splendid

[17:59] <masak> in fact, I'm planning to cut a Rakudo release *while on a train*.

[17:59] <grondilu> rakudo: my $foo = 0 but ""; say $foo ~~ " hey!"

[17:59] <camelia> rakudo-parrot 0e8926, rakudo-jvm 0e8926, rakudo-moar 0e8926: OUTPUT«False␤»

[17:59] <geekosaur> rolling release? :p

[17:59] * masak .oO( :P

[17:59] <masak> )

[18:00] <masak> yeah, it's continuous delivery.

[18:00] <jnthn> Rakudo on Rails?

[18:00] <timotimo> ah, i know what i've done wrong

[18:00] * masak .oO( Perl 6 on Pails )

[18:00] <timotimo> i've been initialising the attributes when calling the constructor

[18:00] <timotimo> and *then* i put in default values

[18:03] *** stevan_ left
[18:10] *** immortal joined
[18:10] <masak> hm, so what should we name this release...

[18:11] <PerlJam> Fred

[18:11] <TimToady> Three Musketeers

[18:11] *** erkan left
[18:11] * PerlJam wishes we would do away with the names as that ends up being the hardest part of releasing  :)

[18:12] <TimToady> Three Stooges

[18:12] <TimToady> Three Blind Mice

[18:12] <TimToady> Three Little Pigs

[18:12] <TimToady> the latter is pretty accurate :)

[18:12] <timotimo> but it's two-thousand and *four*!

[18:13] <TimToady> .oO( off by 10 error? )

[18:13] <PerlJam> TimToady: which one has the house of bricks?

[18:15] <TimToady> well, if we go with Musketeers, rakudo can be D'Artagnan, the 4th musketter

[18:15] <TimToady> *teer

[18:17] <TimToady> Triple Play

[18:18] <TimToady> But Wait, There's Moar

[18:18] <jnthn> Just don't call it "Three Way" and we're all good...

[18:18] <PerlJam> trifecta!

[18:18] <masak> ok, how about "HongKong"?

[18:19] <TimToady> PerlJam: that's not bad

[18:20] <jnthn> Are there any place names with a 3 in them, if we want to pretend there's a Pm group there? :)

[18:20] <TimToady> especially if we don't commit to whether the "*fecta" part refers more to "per" or "de"

[18:20] * masak .oO( one country, two systems, three backends )

[18:21] <TimToady> I sure there must be a city somewhere with 三 in its name

[18:21] <masak> yes, but does it have a .pm group? :)

[18:22] <jnthn> masak: I'm not sure that's stopped us choosing cities before ;)

[18:22] <TimToady> Three Rivers Stadium is in Pittsburgh, fwiw

[18:23] *** rindolf left
[18:23] <masak> ok, I'll leave you to settle this. if I hear a convincing argument for a city, I can change from HongKong to something else.

[18:23] <jnthn> There are multiple cities called Trinity, it turns out.

[18:23] <timotimo> are there three of them?

[18:24] <jnthn> At least 4

[18:24] <benabik> Some of them need to go.

[18:24] <benabik> ;-)

[18:24] <TimToady> why "HongKong"?

[18:25] <jnthn> benabik: Well, Trinity, TX shows up on Google maps with a winter storm warning, so there's hope ;)

[18:25] <PerlJam> TimToady: hopefully the *fecta part is more "in" or "per" than "de"  :)

[18:26] *** btyler_ joined
[18:26] *** ponbiki left
[18:26] *** btyler_ left
[18:27] <TimToady> maybe we should name it Plano because that implies at least three dimensions

[18:27] <jnthn> oooh!

[18:27] <PerlJam> +1

[18:27] <jnthn> TimToady++

[18:27] <dalek> rakudo/nom: c6739ec | masak++ | docs/announce/2014.01.md:

[18:27] <dalek> rakudo/nom: [docs/announce/2014.01.md] added

[18:27] <dalek> rakudo/nom: 

[18:27] <dalek> rakudo/nom: Still need to fill in changes in this release, and contributors.

[18:27] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c6739ecdc0

[18:27] <masak> ok, Plano it is.

[18:27] <masak> hold on, changing.

[18:29] *** btyler left
[18:29] <dalek> rakudo/nom: d32e089 | masak++ | docs/announce/2014.01.md:

[18:29] <dalek> rakudo/nom: [docs/announce/2014.01.md] code name "Plano"

[18:29] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d32e0891f1

[18:31] <dalek> rakudo/nom: 3ecf7ee | masak++ | README:

[18:31] <dalek> rakudo/nom: [README] update copyright year

[18:31] <dalek> rakudo/nom: 

[18:31] <dalek> rakudo/nom: It's 2014! The year of Perl 6 on the desktop, surely.

[18:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3ecf7ee3bd

[18:32] * jnthn adds "make Rakudo Star MSI install a desktop icon" to his todo list, to make sure it is so

[18:32] *** SamuraiJack left
[18:32] <timotimo> do we have a proper icon?

[18:32] <timotimo> just camelia?

[18:33] <timotimo> once we have rakudo-star JVM, we can even ship a little gui with the repl

[18:33] <timotimo> and perhaps a gui for panda, too

[18:35] *** ponbiki joined
[18:35] *** ponbiki is now known as Guest63085

[18:36] <timotimo> it might be time to write a perl6-highlighter in perl6 for that repl :P

[18:37] <masak> Use of uninitialized value $lines[0] in pattern match (m//) at tools/update-tai-utc.pl line 18.

[18:37] <masak> still getting this error message, like, a million times.

[18:37] <masak> *sigh* -- can I just assume there were no leap seconds this month?

[18:38] <jnthn> Well, see ftp://hpiers.obspm.fr/iers/bul/bulc/TimeSteps.history

[18:38] <jnthn> Last entry on there is for 2012 Jul 1

[18:39] *** jeffreykegler joined
[18:39] <masak> looks like the ChangeLog has been properly kept up to date. timotimo++ jnthn++ moritz++ 

[18:39] * TimToady thinks they should just install a few leap-minutes every 1000 years or so

[18:40] <masak> someone is very welcome to find out what's wrong with tools/update-tai-utc.pl

[18:41] <jnthn> Well, it looks for this:

[18:41] <jnthn> shift @lines until $lines[0] =~ /\A 1972  Jul\.   1/;

[18:41] <jnthn> But the line it's looking for now reads:

[18:42] <dalek> rakudo/nom: 2d29ae5 | masak++ | docs/announce/2014.01.md:

[18:42] <dalek> rakudo/nom: [docs/announce/2014.01.md] contributors

[18:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2d29ae56bb

[18:42] <jnthn> oh...just like that.

[18:42] <TimToady> wow, that's different :)

[18:42] <jnthn> \A is start of this...

[18:42] <jnthn> argh

[18:42] <jnthn> strart of *string*?

[18:42] <masak> yep.

[18:43] * jnthn wonders why not ^ :)

[18:43] <raydiak> b/c ^ is start of line :)

[18:43] <TimToady> because someone might put /m on it someday :)

[18:43] * PerlJam doesn't get any such message when he runs tools/update-tai-utc.pl

[18:44] <TimToady> and then it would be misleading, despite still working right :)

[18:44] <jnthn> rylinaux: Only with the m modifier... :)

[18:44] <timotimo> masak: "Timo Paulssen" and "timotimo" is a dupe

[18:45] <jnthn> I always found the naming of the s and m modifiers fun to explain. "s makes . match *m*ultiple lines, while m makes ^ and $ refer to a *s*ingle line" :)

[18:46] <jnthn> In .Net they're spelled SingleLine and MultiLine or so and it once took me 10 minutes to convince somebody that yes, they really did want the one called SingleLine in order to make . match over multiple lines...

[18:46] <TimToady> m makes ^ and $ match multiple times in a multi-line string; s treats the multi-line string as a single line

[18:46] <jnthn> TimToady: Yeah, that's the correct interpretation. It's just easy to guess or mis-remember the other one, I guess. 

[18:46] <TimToady> or if you prefer, 's' makes it use string semantics rather than line semantics

[18:47] <dalek> rakudo/nom: f81a636 | masak++ | docs/announce/2014.01.md:

[18:47] <dalek> rakudo/nom: [docs/announce/2014.01.md] some changes

[18:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f81a636fa4

[18:47] <TimToady> but yeah, the whole thing is a bad thunk

[18:47] <raydiak> (oh and good morning all)

[18:48] <timotimo> hullo raydiak :)

[18:48] <dalek> rakudo/nom: a489283 | masak++ | docs/announce/2014.01.md:

[18:48] <dalek> rakudo/nom: [docs/announce/2014.01.md] de-dupe timotimo

[18:48] <dalek> rakudo/nom: 

[18:48] <dalek> rakudo/nom: timotimo++ (or was it Timo Paulssen?) for pointing it out.

[18:48] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a4892839cd

[18:48] <masak> raydiak: \o

[18:48] <jnthn> masak: The other one I'd call out in there is the fixing of the JVM stack overflow bug

[18:48] <jnthn> masak: It was one that was easily run into and a real pain.

[18:48] <timotimo> oh yes definitely

[18:49] <masak> jn	ok, will do.

[18:49] <raydiak> [Coke]: re single test harness, do you mean just calling prove once with all the module test dirs passed to it?

[18:49] <jnthn> afk for a bit

[18:49] <dalek> rakudo/nom: c0c6a6b | masak++ | docs/announce/2014.01.md:

[18:49] <dalek> rakudo/nom: [docs/announce/2014.01.md] include SO JVM bug

[18:49] <dalek> rakudo/nom: 

[18:49] <dalek> rakudo/nom: By popular demand.

[18:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c0c6a6bade

[18:51] * TimToady should contribute someday... :)

[18:51] <dalek> rakudo/nom: a365a23 | duff++ | CREDITS:

[18:51] <dalek> rakudo/nom: Add another alias for timo

[18:51] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a365a235f9

[18:52] <timotimo> oh good call

[18:53] <dalek> rakudo/nom: bbbebb3 | masak++ | docs/release_guide.pod:

[18:53] <dalek> rakudo/nom: [docs/release_guide.pod] update release dates/names

[18:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/bbbebb3bab

[18:54] <masak> down the call stack I slide. time for the NQP release process.

[18:55] * masak .oO( two release processes for the price of one! )

[18:55] <timotimo> how so?

[18:55] <PerlJam> the rakudo release isn't going to mention moar yet?

[18:55] <timotimo> at least not the rakudo star release ...

[18:56] <masak> PerlJam: forgiveness > permission

[18:56] <masak> feel free to come up with sump'n.

[18:56] <masak> by the rule outlined in NQP's step 1, I should *not* update the PARROT_REVISION.

[18:57] <dalek> nqp: 283f8f2 | masak++ | VERSION:

[18:57] <dalek> nqp: bump VERSION to 2014.01

[18:57] <dalek> nqp: review: https://github.com/perl6/nqp/commit/283f8f2f9d

[18:57] <timotimo> i think it's supposed to give us regex test passes

[18:59] *** treehug88 left
[18:59] <masak> well, I'm just following the (very clear) instructions.

[18:59] <timotimo> sure, i'm not complaining

[19:00] *** darutoko left
[19:01] *** treehug88 joined
[19:02] *** rindolf joined
[19:03] *** woolfy joined
[19:03] *** Mouq joined
[19:04] *** LLamaRider left
[19:06] *** Ayiko joined
[19:07] *** Mouq left
[19:14] *** btyler joined
[19:14] <pmichaud> FWIW, DFW.pm hasn't been picked for a release name yet.  :)

[19:15] <masak> pmichaud: maybe add it to the release guide for next time? :)

[19:15] <jnthn> In the first para, "Rakudo is an implementation of Perl 6 on the Parrot Virtual Machine and the Java Virtual Machine." May want to tweak that. ;) Or I'll do it after shopping if nobody beats me to it. :)

[19:15] <jnthn> bbi15

[19:16] <raydiak> how about this: "We've worked extra-hard this month to offer you a world-exclusive special. Starting right here, right now, Rakudo supports revolutionary MoarVM technology. That's right, folks! You get not one, not two, but *three* rakudo backends for the low, low price of FREEEEEEEE! Download now! Offer only valid while supplies last."

[19:16] <masak> I don't think I will be able to upload things. I don't have the SSH keys on this machine.

[19:16] <masak> maybe someone can help me with that?

[19:16] <masak> raydiak: "...except in Nebraska!" *wide eyes*

[19:17] *** stevan_ joined
[19:17] *** panchiniak left
[19:17] <pmichaud> I'm not sure we want two Texas cities in back-to-back releases... but yes, I'll add DFW to the list.

[19:17] <psch> r: $_ = "aa"; .++.say while 1; # RT99732

[19:18] <camelia> rakudo-moar 4850a7: OUTPUT«(timeout)aa␤ab␤ac␤ad␤ae␤af␤ag␤ah␤ai␤aj␤ak␤al␤am␤an␤ao␤ap␤aq␤ar␤as␤at␤au␤av␤aw␤ax␤ay␤az␤ba␤bb␤bc␤bd␤be␤bf␤bg␤bh␤bi␤bj␤bk␤bl␤bm␤bn␤bo␤bp␤bq␤br␤bs␤bt␤bu␤bv␤bw␤bx…»

[19:18] <camelia> ..rakudo-jvm 4850a7: OUTPUT«(timeout)aa␤ab␤ac␤ad␤ae␤af␤ag␤ah␤ai␤aj␤ak␤al␤am␤an␤ao␤ap␤aq␤ar␤as␤at␤au␤av␤aw␤ax␤ay␤az␤ba␤bb␤bc␤bd␤be␤bf␤bg␤bh␤bi␤bj␤bk␤bl␤bm␤bn␤bo␤bp␤bq␤br␤bs␤bt␤bu␤bv␤bw␤bx…»

[19:18] <camelia> ..rakudo-parrot 4850a7: OUTPUT«(timeout)aa␤ab␤ac␤ad␤ae␤af␤ag␤ah␤ai␤aj␤ak␤al␤am␤an␤ao␤ap␤aq␤ar␤as␤at␤au␤av␤aw␤ax␤ay␤az␤ba␤bb␤bc␤bd␤be␤bf␤bg␤bh␤bi␤bj␤bk␤bl␤bm␤bn␤bo␤bp␤bq␤br␤bs␤bt␤bu␤bv␤bw␤…»

[19:19] <dalek> rakudo/nom: e7280d0 | duff++ | docs/announce/2014.01.md:

[19:19] <dalek> rakudo/nom: Add more Moar to release announcement

[19:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e7280d019f

[19:19] <timotimo> psch: if you put a space after the RT, you'll get a link for all of us in the chat, too: # RT 99732

[19:19] <timotimo> actually: RT #99732

[19:19] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=99732

[19:19] <psch> timotimo: last time i did it with a # befo... yes

[19:19] <PerlJam> Someone vet the Moar stuff I just added

[19:19] <psch> i forgot this time

[19:20] <psch> my point being: this seems fixed, at least if the $_ semantic inside the while is corrent

[19:20] <psch> *correct

[19:20] <timotimo> PerlJam: i'd suggest using moarvm.org instead of the long github link

[19:20] <timotimo> especially as that's currently a redirect to github

[19:20] <pmichaud> It's a little weird that footnote [^2] comes before [^1].

[19:21] <timotimo> oh hey pm :)

[19:21] * masak vets

[19:22] <timotimo> i'm glad you got a codename suggestion for next month's release already; that way i won't have such a hard time :P

[19:22] <[Coke]> raydiak: I think you need 1) a list of .t files across modules, 2) a script that prove can use that will say "oh, this .t is in *this* module, I'll chdir there...".

[19:22] <pmichaud> I don't follow the "Plano implies three dimensions" reference, though.

[19:22] <pmichaud> s/reference/meme/ #whatever

[19:22] <masak> PerlJam: looks good.

[19:23] <[Coke]> plane is 2, I get that far...

[19:23] <masak> I'm not sure there is more to it than that.

[19:23] <masak> a plane is usually embedded in a 3-space, I guess...

[19:23] *** btyler left
[19:24] <dalek> rakudo/nom: 0a9e40e | duff++ | docs/announce/2014.01.md:

[19:24] <dalek> rakudo/nom: reorder footnotes and use moarvm.org

[19:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0a9e40edb2

[19:24] <pmichaud> change text to "because Rakudo now exists in multiple dimensions"  maybe?

[19:24] <PerlJam> how about we paste in the IRC discussion from earlier and say "Plano" was *waaaay* better than "Three Blind Mice"  :)

[19:24] <masak> :)

[19:24] <pmichaud> PerlJam: +1

[19:24] <pmichaud> maybe as a footnote / postscript

[19:24] <psch> there's 11 american Planos and 1 croatian Plano and the digit sum of 12 is 3...?

[19:25] <pmichaud> well, I'm only familiar with the Plano I live in :)

[19:25] <[Coke]> I don't think we need to 'splain it.

[19:25] <pmichaud> Maybe also put in a note saying that we're looking for pm group names to use in future releases.  :)

[19:26] <pmichaud> *Or*, perhaps this is the point at which we adopt an entirely new naming scheme.

[19:26] <PerlJam> pmichaud: +1 to that!

[19:26] <pmichaud> since we're now multi-backend with n>2

[19:26] <PerlJam> (new naming scheme)

[19:26] <moritz> how about simply dropping the naming scheme?

[19:26] <timotimo> moritz: i'll have a short script that'll prepare strings for all combinations of backends that'll be minimized; you'd have to run it once for each rebuild. it's in p6. is that acceptable?

[19:26] <PerlJam> moritz: And that's even better IMHO

[19:27] *** tgt joined
[19:27] <moritz> timotimo: prepare strings? what strings?

[19:27] <moritz> timotimo: I feel I'm missing a bit of context here

[19:27] <pmichaud> We could also keep the names but drop the explanation.

[19:27] <timotimo> rakudo-{parrot, jvm, moar} c8ec1d

[19:27] <timotimo> for example

[19:27] <dalek> rakudo/nom: f4b0fb4 | masak++ | docs/announce/2014.01.md:

[19:27] <dalek> rakudo/nom: [docs/announce/2014.01.md] explain "Plano" better

[19:27] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f4b0fb4f8d

[19:28] <masak> pmichaud, PerlJam: ^

[19:28] <timotimo> instead of rakudo-parrot c8ec1d, rakudo-jvm c8ec1d, rakudo-moar c8ec1d

[19:28] <masak> didn't go with the footnote/postscript idea. this feels better. I could still change it, though.

[19:28] <pmichaud> release manager gets to decide :)

[19:28] <[Coke]> my 2¢: I hate release names.

[19:29] <timotimo> i don't care much about them

[19:29] <pmichaud> proposed release name:  "Coke hates release names."

[19:29] * PerlJam reiterates ...

[19:29] <PerlJam> * PerlJam wishes we would do away with the names as that ends up being the hardest part of releasing  :)

[19:29] <pmichaud> It is good to be able to talk about previous milestone releases, though... e.g., "Beijing"

[19:30] <benabik> Perhaps we should just start naming releases after people who hate release names.

[19:30] <masak> I like the release names.

[19:30] <masak> I don't mind looking for a pm group and a rationale.

[19:30] <masak> it bonds us together somewhat.

[19:30] <PerlJam> pmichaud: but being able to say the 2011.07 release gives more information

[19:31] <pmichaud> PerlJam: yes, if I can remember that date.

[19:31] <lue> same goes for the release name :)

[19:31] <PerlJam> If it's significant, you'll remember it :)

[19:31] <pmichaud> It's much easier for me to remember Beijing than to remember 2011.08 (and wonder if it really was 2011.08 or 2011.07 or 2012.08 or ...)

[19:31] <PerlJam> Or maybe *only* name significant releases?

[19:31] <pmichaud> We don't always know a-priori which ones are significant.

[19:32] <PerlJam> Well, mostly we get to decide if we think they will be.

[19:32] <PerlJam> and if they become so after-the-fact, we can post-name it.

[19:33] <pmichaud> I'm with masak++ ... I like having the names.  I don't know that we need to continue with .pm groups, but there are bound to be more for a while yet.

[19:33] <PerlJam> masak: re bonding ... is that like a shared pain?  :)

[19:35] <masak> PerlJam: heh.

[19:36] <lue> We could just use a random town name picker in the future :)

[19:36] <masak> angularjs has pretty cool release names. they look generated.

[19:36] <PerlJam> "What do you want to name the release?"  "I dunno, what do *you* want to name the release?"

[19:36] <masak> we shouldn't copy them straight off, but it's an idea for the future.

[19:37] <lue> .oO(Relase #87 "Frotzlexity")

[19:37] <PerlJam> maybe we just pick a name and vet it here with whoever is around and go with it.  No "scheme"

[19:38] <geekosaur> generate random syllables

[19:38] <benabik> Train a Markov chain with the #perl6 backlog.

[19:39] <psch> SORRY

[19:39] <pmichaud> use the #perl6 backlog but strip out common words.

[19:39] <pmichaud> leaving only the weird words as potential names.

[19:39] <skids> Pick a city from Middle Earth and pretend there was a Perl con there.

[19:39] <pmichaud> "Whipuptitude" and "Manipulexity" ought to be release names somewhere.  :-)

[19:40] <PerlJam> skids: why do we have to pretend?  ;)

[19:40] <timotimo> i think whipuptitude is for when NativeCall is on all three backends (or four at that point?) and manipulexity when we have everything for macros

[19:40] <PerlJam> timotimo: sounds good to me.

[19:40] <lue> timotimo: I like that.

[19:40] <skids> Because actually having a BOF session with the elven delegates about unicode representations of their alphabet would be hard.

[19:41] *** tgt left
[19:41] <skids> And forget the dwaves and their runish hyperoperators.  They are just cantankorous.

[19:44] <lue> I don't think we'll get to talk to the dwarves. They still haven't pulled the lever to the drawbridge :/

[19:44] <pmichaud> hah!

[19:44] <pmichaud> This month's release should be "TimToady"

[19:44] <pmichaud> since we now really do have more than one way to do it :-)

[19:45] <pmichaud> (can also use TMTOWTDI to avoid the nick pun)

[19:45] <benabik> There's more than two ways to do it?

[19:45] <pmichaud> TimTwody

[19:46] <masak> we should ask quietfanatic to change to that nick :P

[19:46] <PerlJam> heh

[19:47] <pmichaud> I'm afk -- more housework and prep for later.  

[19:48] <pmichaud> I'm okay with adjusting the naming scheme by consensus

[19:48] <pmichaud> bbl

[19:49] <skids> .oO(If Apple can get away with it...)

[19:49] <masak> I think we can adjust the naming scheme, but we should do it at some major shift into a "new era" for Rakudo.

[19:49] <moritz> moar areas?

[19:49] <PerlJam> like the introduction of a new VM?

[19:49] <jnthn> The point when we've a multi-backend star, maybe...

[19:49] <timotimo> introduction of rakudo into the browser? ;)

[19:50] <masak> jnthn: yes, maybe.

[19:50] <timotimo> that'd be fine by me, jnthn 

[19:50] <timotimo> how likely is february moar star? :)

[19:50] <timotimo> because february jvm star sounds quite likely

[19:50] <jnthn> Dunno. I've no idea how bad the ecosystem looks on Moar so far.

[19:50] <moritz> does moar have nativecall?

[19:50] <jnthn> I know we've work to do on NativeCall. The debugger shouldn't be hard.

[19:50] <timotimo> moritz: arnsholt noted it'd mostly be copy-pasting from parrot

[19:51] <jnthn> moritz: Well, we've got dyncall into the build; not sure how far along the REPRs are, but we can...what timotimo said :)

[19:51] <PerlJam> Still sounds more like April to me (for moar R*)

[19:51] <timotimo> oh, really?

[19:51] <timotimo> well, sockets  will be big, too

[19:51] <jnthn> I may take on sockets when I do the Moar IO do-over

[19:51] <jnthn> I'll put in the async IO and I want to get async sockets in too.

[19:52] <jnthn> With an API that works on Moar and JVM.

[19:52] <jnthn> s/may/almsot certainly will/

[19:53] <timotimo> that sounds lovely

[19:57] *** tgt joined
[19:57] *** treehug88 left
[19:59] *** treehug88 joined
[20:00] *** Rotwang joined
[20:02] <FROGGS> .u ARMENIAN DRAM SIGN

[20:02] <yoleaux> U+058F ARMENIAN DRAM SIGN [Sc] (֏)

[20:06] *** locsmif joined
[20:06] <masak> ok, the NQP release can now be found at http://masak.org/carl/tmp/nqp-2014.01.tar.gz -- could I ask for someone's help (pmichaud? jnthn? tadzik? moritz? PerlJam?) to upload it to the real place?

[20:06] <masak> (I don't currently have the SSH key)

[20:07] <masak> besides the uploading step, this concludes the NQP release process. back to the Rakudo release process.

[20:07] *** denisboyun joined
[20:07] <timotimo> ✔ NQP Release prepared

[20:09] *** rindolf left
[20:11] *** tgt left
[20:12] <PerlJam> masak: uploaded.

[20:13] <dalek> rakudo/nom: 560d347 | masak++ | tools/build/NQP_REVISION:

[20:13] <dalek> rakudo/nom: [release] bump NQP revision

[20:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/560d34731e

[20:13] <dalek> rakudo/nom: 2834f75 | masak++ | VERSION:

[20:13] <dalek> rakudo/nom: [release] bump VERSION

[20:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2834f75169

[20:13] <masak> PerlJam++

[20:14] <masak> PerlJam: hope you're around for the Rakudo .tar.gz in an hour or so ;)

[20:14] *** Mouq joined
[20:15] <masak> there's no 'realclean' target in the Makefile.

[20:15] <masak> docs/release_guide.pod:162 expects there to be one.

[20:16] <PerlJam> huh, the 2014.01 release of nqp is about 100K smaller than the 2013.12 release.  Until now we've had steady growth.

[20:16] <masak> interesting.

[20:17] <timotimo> very cool! :)

[20:17] <timotimo> the stage0s may have shrunken

[20:17] <timotimo> i think since last month we got rid of base64 in the moarvm stage0s

[20:18] <masak> oh!

[20:18] <PerlJam> masak: Are you sure there's no "realclean"?  I've got one.

[20:20] <PerlJam> (well ... I had one until I ran "make realclean"  ;)

[20:20] *** crazedpsyc left
[20:20] <skids> now that's clean!

[20:21] <timotimo> :D

[20:21] * psch .oO( sub undo { ::undo := Nil } )

[20:21] <psch> huh, could that actually work? obviously not like that

[20:22] <psch> r: sub foo { &OUTER::foo := sub { 1 } }; foo.say; foo.say # seems like it?

[20:22] <camelia> rakudo-parrot bbbebb, rakudo-jvm bbbebb, rakudo-moar bbbebb: OUTPUT«sub() { ... }␤1␤»

[20:23] * psch realizes more and more how little he actually knows about perl6

[20:24] <masak> psch: what are you trying to accomplish?

[20:24] *** crazedpsyc joined
[20:24] <psch> masak: i was just thinking, seeing as realclean removes it self, if perl6 can have a function that undefined itself

[20:24] <psch> which apparently it can

[20:25] <psch> s/it self/itself/

[20:25] <psch> but i might misunderstand camelia here, explainations welcome :)

[20:27] *** denisboyun left
[20:28] <timotimo> huh, here moar seems to have gotten stuck trying to get .combinations

[20:28] <masak> psch: no, seems you got it right.

[20:28] <masak> psch: but I'm kinda surprised that works.

[20:28] *** japhb__ left
[20:28] <masak> wonder how that interacts with optimizations.

[20:29] *** japhb left
[20:29] <jnthn> I think it's a bug that it works

[20:29] <jnthn> The optimizer woulda been free to inline it

[20:30] *** FROGGS[mobile] left
[20:30] <lue> jnthn: that might be considered an optimizer bug in that case, were it to happen :)

[20:30] <jnthn> lue: No, buy spec the optimier is allowed to inline it.

[20:31] <jnthn> *by

[20:31] <jnthn> If you want to suppress inlining you need to say "use soft;" or so

[20:31] <lue> or perl6 --optimize=0 , right?

[20:32] <jnthn> Well, you could do that too, but that means you're depending on everybody running your code with --optimize=0

[20:32] <jnthn> Not to mention giving up every other optimization.

[20:32] <masak> Perl 6 is already fairly geared towards static subroutines, which is why it's surprising that it works.

[20:32] <lue> oh, I thought 'use soft' would mean the same thing

[20:33] <timotimo> obviously there's a bit more performance to had that way?

[20:33] <jnthn> lue: No, use soft just gives up some things

[20:34] <timotimo> r: print "a" for ([<a>], [<b>], [<c>], [<a b>], [<b c>], [<a c>], [<a b c>]).combinations

[20:34] <camelia> rakudo-parrot f4b0fb, rakudo-jvm f4b0fb: OUTPUT«No such method 'combinations' for invocant of type 'Parcel'␤  in block  at /tmp/tmpfile:1␤␤»

[20:34] <camelia> ..rakudo-moar f4b0fb: OUTPUT«Cannot find method 'combinations'␤  in block  at /tmp/tmpfile:1␤␤»

[20:34] <timotimo> r: print "a" for ([<a>], [<b>], [<c>], [<a b>], [<b c>], [<a c>], [<a b c>]).list.combinations

[20:34] <camelia> rakudo-parrot f4b0fb, rakudo-jvm f4b0fb, rakudo-moar f4b0fb: OUTPUT«aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa»

[20:35] <timotimo> r: my %foo{Any}; %foo{$_} = 1  for ([<a>], [<b>], [<c>], [<a b>], [<b c>], [<a c>], [<a b c>]); print "a" for %foo.keys.combinations

[20:35] <camelia> rakudo-parrot f4b0fb, rakudo-jvm f4b0fb, rakudo-moar f4b0fb: OUTPUT«aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa»

[20:35] <PerlJam> masak: are you updating the release guide to talk about jvm or moar?  It still seems highly parrot-centric

[20:35] <timotimo> so ... what am i doing wrong locally?

[20:35] <PerlJam> (maybe that's best to do after the release)

[20:35] <timotimo> maybe i'll just have to get the newest version or something

[20:38] *** stevan_ left
[20:44] *** immortal left
[20:45] <masak> PerlJam: yeah, I'm not updating it now.

[20:45] <masak> just pointing out points where it doesn't work.

[20:46] <masak> make: *** No rule to make target `stresstest'.  Stop.

[20:46] <masak> there's a p-stresstest

[20:48] <PerlJam> p-stresstest only exists if you've listed parrot as one of the backends

[20:49] *** jeffreykegler left
[20:49] <masak> I suppose I must have, at some point.

[20:49] <masak> as in --backends=parrot

[20:50] <masak> so yeah, the build instructions are not in sync with reality.

[20:50] <masak> I suggest fixing after release.

[20:51] <PerlJam> yep, sounds sane

[20:51] <PerlJam> masak++  :)

[20:52] *** zby_home_ left
[20:57] <diakopter> wut happened in kiev

[20:57] <masak> diakopter: lots of fire and protest.

[20:57] <masak> and strife :(

[21:01] <colomon> :(

[21:02] *** dayangkun left
[21:04] <masak> govt there is calling the demonstrators terrorists.

[21:04] <locsmif> not just there

[21:06] <diakopter> sry for OT

[21:09] <colomon> doesn't seem to have made the headlines on CNN.com?  :\

[21:09] <psch> colomon: click "International"

[21:09] * colomon is sure Justin Bieber's legal status is vastly more important.  

[21:09] <psch> it was there at least

[21:10] <psch> not sure if it still is

[21:10] <PerlJam> colomon: if you want real news, you need to read bbc.com.

[21:10] <colomon> PerlJam: honestly, I don't much want real news.  or the crap cnn.com covers.

[21:10] <tadzik> I watched an episode of DS9 yesterday, about a military guy taking over the entire earth because of a terrorist threat. To make it more relevant, a name "Snowden" occured in the episode

[21:11] <colomon> psch: if you click "Ukraine" at the top, you get there.

[21:11] <itz_> is there any short cut to build all backends at once?

[21:11] <timotimo> prn: say "hello"

[21:11] <timotimo> itz_: of course, --backend=parrot,jvm,moar --gen-moar --gen-parrot

[21:11] <timotimo> perl6: say "hello"

[21:11] <camelia> rakudo-parrot f4b0fb, rakudo-jvm f4b0fb, rakudo-moar f4b0fb, niecza v24-109-g48a8de3: OUTPUT«hello␤»

[21:11] <colomon> Bieber still more prominent. 

[21:12] <itz_> I was thinking of --backend=all :)

[21:12] <itz_> lazy

[21:12] <tadzik> well volunteered :P

[21:12] * psch .oO( --everything )

[21:12] <moritz> itz_: shouldn't be hard for you to patch :-)

[21:12] <lue> .oO( perl Configure.pl --* )

[21:12] <itz_> :)

[21:13] <psch> lue: that would clash with shell expansion, wouldn't it?

[21:13] <lue> whatever.

[21:13] <jnthn> Is that "my eyes are closed 'cus it's snowing"?

[21:13] <PerlJam> itz_: I would suggest using some special designation for things that aren't real VMs  either ALL CAPS or some symbology.

[21:14] <TimToady> just type * at the command line

[21:14] <TimToady> it *might* run Configure.pl

[21:14] <PerlJam> lue: was that an intentional pun?  :)

[21:14] <lue> PerlJam: yes, of course :)

[21:14] <jnthn> Yeah, if you do --backend=all, then somebody will go and make an allvm :)

[21:14] *** Rix left
[21:14] <lue> $ perl6 -e 'say @*ARGS.perl' --*

[21:14] <lue> Array.new("--*")

[21:14] <tadzik> mostvm

[21:15] <lue> Apparently it doesn't hurt. Hm.

[21:15] <jnthn> OK, I have some time for Perl stuffs...what to do...

[21:15] <tadzik> starts up on moar, and warms up jvm just in case

[21:15] <diakopter> jnthn: specializer/ :)

[21:15] <lue> Apparently, putting a dash in front of the asterisk stops shell expansion. So we could have perl Configure.pl --*  :)

[21:15] <jnthn> diakopter: but SSA haaarrd :P

[21:16] <TimToady> though in my nom directory it ends up printing out the 12 days of Christmas, since 12days sorts first :)

[21:16] <diakopter> do it in reverse then

[21:16] <timotimo> jnthn: write a small amount of code to subclass JavaBootInterop inside rakudo and give me that so i can continue my work? :)

[21:16] <jnthn> timotimo: uh...we already have a subclass of JavaBootInterop in Rakudo?

[21:16] <jnthn> timotimo: src\vm\jvm\runtime\org\perl6\rakudo\RakudoJavaInterop.java

[21:17] <timotimo> last time i tried that it didn't seem to want to work

[21:17] <timotimo> is it hooked up to an nqp:: op?

[21:17] <TimToady> btw, http://rosettacode.org/wiki/Fractran#Perl_6 fails under moar for some reason

[21:17] <jnthn> timotimo: Hm, good question...

[21:17] <jnthn> timotimo: It's used when you say "use such.enterprise:from<java>;"

[21:18] <timotimo> ah. hum.

[21:18] <timotimo> that'll be a good hint

[21:18] <jnthn> timotimo: ah, nqp::jvmrakudointerop()

[21:19] <jnthn> TimToady: Explodes, or wrong answer?

[21:19] <TimToady> wrong answer, 2 15 15 15 15 15 15 15 15 15 15 15...

[21:19] <timotimo> i think our % operator with rats may still be busted in some kind of way?

[21:19] <FROGGS> TimToady: on my box too

[21:19] <FROGGS> and it hangs after that

[21:19] <TimToady> well, you have to ^C it

[21:19] <TimToady> the final loop is over 0..* :)

[21:20] <FROGGS> gah

[21:20] <FROGGS> :o)

[21:20] <TimToady> which, by the way, I couldn't write as .say for FT2

[21:20] <TimToady> because for some reason it tries to calculate the entire sequence first...

[21:20] <[Coke]> r: my int $a = 2**50;

[21:20] <camelia> rakudo-jvm f4b0fb, rakudo-moar f4b0fb: ( no output )

[21:20] <camelia> ..rakudo-parrot f4b0fb: OUTPUT«===SORRY!===␤Error while compiling op bind: Cannot infer type from '1125899906842624'␤»

[21:21] <[Coke]> masak: ^^

[21:22] <TimToady> but I suspect the latter is just for loops not being correctly lazy

[21:22] <jnthn> TimToady: I'm suspecting it tries to batch it

[21:22] <jnthn> TimToady: Unconditionally

[21:22] <masak> [Coke]: ugh. feel free to report.

[21:22] <TimToady> yes, well, it'll take a while to generate the first 100000 members of *that* sequence...

[21:23] <jnthn> yes ;)

[21:23] <itz_>      if (defined $options{backends}) {

[21:23] <itz_> +        $options{backends} = join ",",keys %known_backends if $options{backends} eq 'ALL';

[21:23] * TimToady wonders what we could do about overbatching...

[21:24] <jnthn> TimToady: I think Pm may well have thought this one through a bit.

[21:24] <jnthn> TimToady: Not that more thinking from you isn't also a good idea ;)

[21:24] <TimToady> give or take a negative here or there

[21:24] *** ggoebel1112 left
[21:26] *** ggoebel1112 joined
[21:26] <TimToady> but if it were just batching, why wouldn't it do the same for FT2[$_]?

[21:26] * jnthn reproduces the ft bug locally...

[21:27] <jnthn> TimToady: I think it's MapIter that batches

[21:27] <jnthn> TimToady: oh, but you have a map...hm

[21:27] * FROGGS realizes that he does not understand that code

[21:27] <TimToady> well, that bit of the code is grondilu++'s

[21:28] <jnthn> TimToady: Me either, I'm just gonna try and make it work :P

[21:28] <jnthn> uh, FROGGS 

[21:28] <timotimo> FROGGS: why? it seems understandable to me :P

[21:28] <FROGGS> timotimo: maybe I am lacking some sort of CS degree? I dunno

[21:28] <timotimo> hah :)

[21:29] <timotimo> r: say 16.msb; say 16.lsb;

[21:29] <camelia> rakudo-parrot f4b0fb, rakudo-jvm f4b0fb, rakudo-moar f4b0fb: OUTPUT«4␤4␤»

[21:29] <FROGGS> what does  map (* * n).narrow, LIST ?

[21:29] <timotimo> that's pretty handy!

[21:29] <timotimo> well, * * n is the whatevercode that multiplies with n

[21:29] <timotimo> and narrow is our method to try to get the narrowest numeral type for the number

[21:30] <timotimo> r: .perl.say for 10.0, 10.0.narrow, 10.0e, 10.0e.narrow;

[21:30] <TimToady> also, I'm pretty sure that .lsb == .msb is not going to be the most efficient way to detect a power of two

[21:30] <camelia> rakudo-parrot f4b0fb, rakudo-jvm f4b0fb, rakudo-moar f4b0fb: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Confused␤at /tmp/tmpfile:1␤------> [32m.perl.say for 10.0, 10.0.narrow, 10.0[33m⏏[31me, 10.0e.narrow;[0m␤    expecting any of:␤      …»

[21:30] <timotimo> TimToady: i remember some really neat trick from the hacker's delight; i think you have to xor it with the number itself - 1 or something

[21:30] <masak> darn, train will arrive soon, and I'm still just stresstesting S12...

[21:30] <timotimo> so 100000 xor 011111?

[21:30] <timotimo> that's not quite it, though

[21:31] *** Rix joined
[21:31] <TimToady> well, I tried +& and looked for 0, but that doesn't work

[21:31] *** locsmif left
[21:31] <timotimo> oh, that was my next thought

[21:32] <jnthn> masak: Why do the delays never happen when you wnat them...

[21:32] <TimToady> oh, maybe the precedence is wrong

[21:32] <timotimo> that would probably be it

[21:32] <FROGGS> ahh, I think I understand...

[21:32] <timotimo> r: say 16 +& 15

[21:32] <masak> jnthn: hey, don't jinx my train in the last 10 minutes! :P

[21:32] <camelia> rakudo-parrot f4b0fb, rakudo-jvm f4b0fb, rakudo-moar f4b0fb: OUTPUT«0␤»

[21:32] <timotimo> r: say 16 +& 16 - 1

[21:32] <camelia> rakudo-parrot f4b0fb, rakudo-jvm f4b0fb, rakudo-moar f4b0fb: OUTPUT«15␤»

[21:32] <timotimo> yup, it's the precedence.

[21:32] <jnthn> r: sub x(\n) { say (^5).map: (* * n).narrow }; .&x for ^2

[21:32] <camelia> rakudo-moar f4b0fb: OUTPUT«0 0 0 0 0␤0 0 0 0 0␤»

[21:32] <camelia> ..rakudo-parrot f4b0fb, rakudo-jvm f4b0fb: OUTPUT«0 0 0 0 0␤0 1 2 3 4␤»

[21:33] <TimToady> yeah, it was precedence

[21:34] <jnthn> ah...nested whatever curries don't correctly nested their closures...

[21:34] <jnthn> Which we must mystically get away with on other backends

[21:34] <jnthn> No doubt at some performance cost.

[21:34] <grondilu> TimToady: to detect a power of two you can test whether the logarithm in base 2 is integer

[21:35] <jnthn> Moar just get's 'em wrong so there's no choice but to fix it properly... :)

[21:35] <FROGGS> ahh, I love that when jnthn++ says these sentences :o)

[21:35] <timotimo> oh, huh

[21:35] <timotimo> FROGGS: now there's something i realise i don't understand :)

[21:35] <masak> detrain &

[21:35] <FROGGS> timotimo: do tell :o)

[21:35] <timotimo> how exactly moar fails there. what the closure nesting stuff means

[21:35] <jnthn> timotimo: I think you worked on whatever_curry recently? :)

[21:35] <timotimo> yes, i did

[21:36] <timotimo> that's what makes me scratch my head even more :P

[21:36] <jnthn> timotimo: I'm almost certain you didn't introduce the issue though, I think it predates it...

[21:36] <jnthn> timotimo: Can you explain what the chain stuff is doing?

[21:36] <timotimo> i only changed whatever handling if there's a chain

[21:36] *** Guest1338 joined
[21:36] <grondilu> an other way would be .base(2) ~~ /^10*$/

[21:37] <TimToady> I suspect the AND method is the fastest

[21:37] <colomon> grondilu: if you've got an Int, you can detect powers of 2 with !($n +& ($n - 1))

[21:37] <timotimo> well, it remembers all the arguments to the operator, remembering exactly which ones were whatever-arguments, if it's a chain so that one level up if it finds such a chained whatevercode it can flatten it out properly

[21:37] <colomon> … which someone already posted back there

[21:37] <grondilu> oh, ok

[21:38] <TimToady> and, in fact, the RC entry is already updated for

[21:38] * colomon needed this for ABC

[21:39] <jnthn> timotimo: Yeah, I think I see it

[21:40] * TimToady thinks about shouting "First bug!"

[21:40] *** dayangkun joined
[21:42] <[Coke]> anyone care to volunteer to give feedback on a "what's perl6" presentation to a handful of p5 folks?

[21:43] <timotimo> i'll volunteer to look at it :P

[21:44] <TimToady> should we have lower standards because it's only a handful?

[21:44] <tadzik> we're a handful too :)

[21:44] <TimToady> quite a handful

[21:44] <hoelzro> I would look

[21:45] <TimToady> what is Perl 6, anyway?

[21:45] <tadzik> I'd happily welcome a second handful

[21:45] * moritz would love to know that too

[21:45] <psch> a DWIM-y pile of *..?

[21:46] <FROGGS> nah, it is the last language one learns :o)

[21:46] <tadzik> then you just tolerate the rest :P

[21:46] <FROGGS> yeah...

[21:46] <TimToady> It'll either kill you or cure you...

[21:46] * psch is painfully reminded of all those accidentally omitted returns at $phpdayjob

[21:47] <FROGGS> psch: exactly

[21:47] <FROGGS> but there are worse things out there...

[21:47] <[Coke]> (lower standard) yes.!

[21:47] <FROGGS> my colleagues hack to hack ABAP!

[21:47] <PerlJam> Perl 6 is kind of like a FPGA only the "gates" are way more powerful

[21:47] <diakopter> -_+

[21:47] <TimToady> other than the field, the gates, and the array, that's pretty accurate

[21:48] <hoelzro> [Coke]: are you going to show 1..* examples of cross pollination between Perl 5 and Perl 6?

[21:48] <PerlJam> :-P

[21:48] <diakopter> field lol

[21:48] <[Coke]> well, smartmatch was the first one that came to mind. :P

[21:48] <hoelzro> heh

[21:48] <TimToady> alas, that one didn't work out so well

[21:48] <PerlJam> yeah, it's always good to start off with a bad example :)

[21:48] <hoelzro> I'm thinking use feature qw(say state); use Moose

[21:49] <[Coke]> but yes, specifics are good.

[21:49] <tadzik> it's a kind of a... field

[21:49] <TimToady>  // worked out better

[21:49] *** araujo joined
[21:49] *** bluescreen10 left
[21:49] *** bluescreen10 joined
[21:49] <TimToady> and maybe some of the parameter backports

[21:50] <skids> r: say not !0 +& !-1 # 0 is not a power of 2 :-)

[21:50] <camelia> rakudo-parrot 2834f7, rakudo-jvm 2834f7, rakudo-moar 2834f7: OUTPUT«True␤»

[21:51] <TimToady> where'd those extra !s come from?

[21:51] <[Coke]> timotimo++ convinced me: https://docs.google.com/presentation/d/1lsga8bGQK0r0v0OCv0Iw360nCWu3MCgpWTTjROXohNQ/edit?usp=sharing is the link, anyone can comment.

[21:51] <[Coke]> GAH. I see the hordes joining.

[21:51] <colomon> skids: it's 2** -Inf   ;)

[21:52] <[Coke]> HAHAHA. I love anonymous llama and anonymous chinchilla.

[21:52] *** mavcunha left
[21:52] <jnthn> TimToady: Is this the right (start of the) output: 2 15 825 725 1925 2275 425 390 330 290 770 910 170

[21:52] <[Coke]> I only have 30m. so there are things that are intentionally brief.

[21:53] <TimToady> jnthn: yes

[21:53] <skids> oh. duh.  well anyway It was just pedantry.

[21:53] <jnthn> TimToady: good :)

[21:54] <PerlJam> [Coke]: on slide 11: "In Perl 5, you have a limited # of types."  I'm not sure that's true or what you mean by that.

[21:54] <colomon> [Coke]: page 14, what's the last line got to do with it?

[21:54] <diakopter> pedantrics

[21:54] <skids> diakopter++ for meta-pedantrics

[21:55] <jnthn> [Coke]: On 8, not sure if worth calling out that NQP is a subset of Perl 6 ideal for compiler writing, to give an idea of what subset

[21:56] <jnthn> [Coke]: In the "everything is an object" on 10, I tend to express that as "Everything can be treated as an object" these days

[21:57] <TimToady> (4/6).Rat # (stringifies via Num)    <-- I don't think this is true

[21:57] <jnthn> [Coke]: On 13, I'd put { ... } there rather than the ; after the signature; it confused me at first

[21:57] <TimToady> also, why .Rat something that already is

[21:57] <[Coke]> PerlJam: I was thinking: scalar, array, hash, glob (and a few others)

[21:58] <[Coke]> jnthn: updated 8 & 10.

[21:59] <TimToady> assigning 2**70 to an int ought to blow up, not produce 0

[21:59] <PerlJam> [Coke]: I'd probably differentiate via Perl 5 - type systems on CPAN,  Perl 6 - built-in type system.  (or something like that)

[22:00] <TimToady> slide 15, superstitious semicolons

[22:00] <psch> [Coke]: i feel slide 25 should be somewhere before 24, maybe right before 21. you're introducing sub infix:<hi> before mentioning sub *fix:*

[22:00] <TimToady> a rule is a method, really, not a sub

[22:00] *** treehug88 left
[22:01] <TimToady> and the comparison to lex/yacc is kinda wrong

[22:01] <[Coke]> TimToady: removed the comment.

[22:01] <[Coke]> colomon: last line is showing you can invoke via locals with the same name as the params.

[22:01] <dalek> rakudo/nom: 75f0284 | jnthn++ | src/Perl6/Actions.nqp:

[22:01] <dalek> rakudo/nom: Fix code-gen of nested whatever curries.

[22:01] <dalek> rakudo/nom: 

[22:01] <dalek> rakudo/nom: Makes this construct work on MoarVM, and may be more efficient on

[22:01] <dalek> rakudo/nom: other backends.

[22:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/75f0284857

[22:02] *** treehug88 joined
[22:02] <dalek> rakudo/nom: fa1e956 | moritz++ | Configure.pl:

[22:02] <dalek> rakudo/nom: [Configure] --backends=all, itz_++

[22:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fa1e956a01

[22:02] <[Coke]> TimToady: leftover .Rat removed. CNP issue, I thin.

[22:02] <jnthn> TimToady: 75f0284 should fix it 

[22:02] <timotimo> jnthn: will that still make it into our current release?

[22:02] <jnthn> timotimo: Doubt it.

[22:02] <PerlJam> [Coke]: slide 16 also seems out of place (or is an opportunity for more context wrt Grammars and Regex)

[22:02] <timotimo> OK

[22:03] <jnthn> timotimo: I think masak may have already tagged it

[22:03] <[Coke]> PerlJam: wanted to mention rules. will really not have time to delve into them.

[22:03] <jnthn> timotimo: Or at least, be spectesting what he intends to tag/release.

[22:03] <PerlJam> [Coke]: okie.

[22:03] <timotimo> right.

[22:03] <timotimo> fair enough

[22:03] * timotimo is always on the bleeding edge anyway :)

[22:03] <jnthn> Just means we've got our first ChangeLog entry for next month :P

[22:03] <timotimo> oh, btw. a person from karlsruhe.pm is going to make sure soon that debian will have all dependencies of moarvm packaged properly

[22:03] <PerlJam> [Coke]: how much time will you have?  (I've been thinking either you've got lots of time or you're going to cover alot of stuff in a short time)

[22:04] <jnthn> timotimo: oh, cool :)

[22:06] <[Coke]> PerlJam: 30m

[22:06] <PerlJam> [Coke]: on slide 20, the juxtaposition of ^20 and a list that goes from 1 to 20 weirds me out  :)

[22:06] <timotimo> oh, whoops :)

[22:06] <[Coke]> PerlJam: yah, but then I can talk briefly about 0-indexing.

[22:07] <TimToady> slide 23, comment should start at 0, not 1

[22:08] <timotimo> [Coke]: for syntax highlighting, would you prefer shades of gray or colors?

[22:08] <[Coke]> TimToady: fixed.

[22:08] <[Coke]> timotimo: never used the projector at this place. something contrasty.

[22:09] <[Coke]> ... I feel compelled to add a note about the community now. :)

[22:09] <PerlJam> [Coke]: do you want to mention Z and S on slide 24?

[22:10] <timotimo> colors actually don't look good on white background i don't think

[22:10] *** Guest1338 left
[22:10] <timotimo> boldface looks bad, too

[22:12] *** panchiniak joined
[22:12] <TimToady> Z maybe, but S is probably not worth mentioning

[22:12] <grondilu> this thing on google docs when we can see other people editing a document in real time is pretty cool.  I wish github would do that.

[22:12] <[Coke]> timotimo: should I change the background color?

[22:12] <timotimo> [Coke]: only if you want to :)

[22:12] <[Coke]> PerlJam: Sure.

[22:12] <PerlJam> S is obscure, but maybe that's why it needs to be mentioned ;)

[22:12] <TimToady> not in an overview

[22:12] *** japhb joined
[22:13] <timotimo> i'm actually not sure how to do the coloring without doing it by hand

[22:13] <PerlJam> I dunno ... I'd at least say "and some other cool meta-ops are ..."

[22:13] <TimToady> much more important to get the bikeshed the right color

[22:13] <PerlJam> and then "for more information, check out the synopses"

[22:14] <PerlJam> [Coke]: oh, you should have a slide with some useful links

[22:14] <timotimo> i'm not sure about "parsed to QAST (NQP)", actually

[22:14] <PerlJam> or maybe just "Everything is linked from perl6.org"

[22:15] <[Coke]> PerlJam: added urls on #30

[22:15] <PerlJam> yeah, I see that now :)

[22:15] <[Coke]> timotimo: would a gray work?

[22:16] <PerlJam> I was thinking you could put the slide with links last so that you could leave it up during any question/answer period

[22:17] * masak is back online

[22:17] <masak> up to S32 now.

[22:17] <PerlJam> [Coke]++

[22:17] *** kbaker left
[22:18] <[Coke]> perljam: good point.

[22:18] <TimToady> needs a camelia, to flush out the patriarchs

[22:19] <masak> jnthn--'s jinx made the train stop completely :/

[22:20] *** treehug88 left
[22:20] <jnthn> masak: ...what?!

[22:20] <jnthn> masak: fail...did it break down?

[22:21] *** skids left
[22:21] <TimToady> oh, there's a camelia at the beginning

[22:21] <[Coke]> TimToady: I gotcher back.

[22:22] <PerlJam> There's enough white space on each slide that a small camelia could appear on every one.  :)

[22:22] <diakopter> r: »ö«'

[22:22] <[Coke]> the meeting is in about an hour, btw. thanks for the last minute feedback, MOST appreciated.

[22:22] <camelia> rakudo-jvm 2834f7: OUTPUT«(timeout)»

[22:22] <camelia> ..rakudo-parrot 2834f7, rakudo-moar 2834f7: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Bogus statement␤at /tmp/tmpfile:1␤------> [32m<BOL>[33m⏏[31m»ö«'[0m␤    expecting any of:␤        statement list␤        prefix or term␤        p…»

[22:22] <masak> jnthn: it stopped in le middle of nowhere, because there was only one usable track, and other trains got precedence.

[22:22] <jnthn> masak: d'oh

[22:22] <timotimo> [Coke]: you're very welcome :)

[22:22] <diakopter> heh jvm timeout

[22:22] <masak> jnthn: SJ...

[22:23] <jnthn> Shouldn't Jinx....

[22:23] *** treehug88 joined
[22:23] <jnthn> Shaln't Journey

[22:23] <[Coke]> PerlJam: done.

[22:24] <diakopter> Slight Jolt

[22:25] *** woolfy1 joined
[22:25] *** woolfy left
[22:26] <PerlJam> [Coke]: heh, now the first slide looks a little odd with 2 Camelias  :)

[22:27] <timotimo> [Coke]: i made a copy to try out the dark theme with code "highlighting"

[22:27] <[Coke]> timotimo++

[22:27] *** BenGoldberg joined
[22:28] <[Coke]> PerlJam: how about now?

[22:28] <timotimo> [Coke]: have a look and see if i should continue working on it

[22:28] <PerlJam> better.

[22:28] <timotimo> it should be shared to you, too

[22:28] *** airdisa joined
[22:29] <[Coke]> timotimo: I'm not sure. anyone else have luck with white on black presentations with projectors of dubious origin?

[22:30] <timotimo> worst case if it don't look right, switch over to the other copy :)

[22:30] <[Coke]> ok. there have been some changes since you forked, I think.

[22:30] <masak> ok, I'm on the integration tests now.

[22:30] <[Coke]> masak++ #release work

[22:30] *** btyler joined
[22:30] <[Coke]> masak: oh! what number release is this?

[22:31] <masak> read the release announcement! :P

[22:31] <masak> (#72)

[22:31] <PerlJam> [Coke]: Good luck and have fun with your presentation

[22:31] <jnthn> [Coke]: Hope it goes well!

[22:32] <masak> [Coke]: good luck!

[22:32] <[Coke]> masak: added note about 72 releases.

[22:32] <[Coke]> r: say 72 / 12

[22:32] <camelia> rakudo-jvm 2834f7: OUTPUT«(timeout)»

[22:32] <camelia> ..rakudo-parrot 2834f7, rakudo-moar 2834f7: OUTPUT«6␤»

[22:32] <masak> Result: PASS

[22:34] <[Coke]> meeting is here: http://www.techvalleycenterofgravity.com/

[22:34] <masak> Rakudo tarball now available at http://masak.org/carl/tmp/rakudo-2014.01.tar.gz -- PerlJam, still there? ready for another upload? :)

[22:34] <dalek> rakudo/nom: 79079be | (Pepe Schwarz)++ | src/ (2 files):

[22:34] <dalek> rakudo/nom: Added X::TypeCheck::Argument and means for the Optimizer to throw typed exceptions.

[22:34] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/79079be902

[22:34] <dalek> rakudo/nom: 6c83d6c | jnthn++ | src/Perl6/Optimizer.nqp:

[22:34] <dalek> rakudo/nom: Correct private method exception construction.

[22:34] <dalek> rakudo/nom: 

[22:34] <dalek> rakudo/nom: Also remove "not sure how to get it" note; you can get it with:

[22:34] <dalek> rakudo/nom:     class A { trusts GLOBAL; }; A!A::nope();

[22:34] <dalek> rakudo/nom: But only with --optimize=3 at present.

[22:34] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6c83d6c08c

[22:34] <dalek> rakudo/nom: 743ebf7 | jnthn++ | src/Perl6/Optimizer.nqp:

[22:34] <dalek> rakudo/nom: Replace comment with better explanation.

[22:34] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/743ebf710e

[22:34] <timotimo> my glob this is strenuous :P

[22:34] <masak> arrrgh!

[22:34] <masak> who *commits* during release engineering!?

[22:35] <PerlJam> masak: aye, I'll upload it

[22:35] <diakopter> let alone pushes

[22:35] <jnthn> masak: Somebody who knows the release engineer is (a) using git, and (b) knows how to make a branch :P

[22:35] <masak> yo, I'm going to tag the commit I tested/tarballed, just so you know.

[22:35] <masak> for all I care, your commits are post-release.

[22:36] <masak> you shoulda made 'em yesterday.

[22:36] <PerlJam> masak: uploaded.

[22:36] <jnthn> masak: Oh, I fully expected these to go into the Feb release. :)

[22:37] <jnthn> masak: Everything I wanted in the release, I landed *yesterday*. :)

[22:37] <masak> PerlJam: thank you!

[22:37] <masak> jnthn: ok, we are in agreement, then.

[22:37] <PerlJam> It's all about the teamwork!  :)

[22:37] <[Coke]> jnthn++ masak++

[22:37] <[Coke]> PerlJam: what's gonna work?

[22:37] <[Coke]> PerlJam: TEEEEEAMWORK

[22:38] <masak> p6c email sent.

[22:39] <masak> proceeding to defile Wikipedia.

[22:39] <PerlJam> masak++  thanks for being release manager :)

[22:39] * PerlJam now wanders off to get some food

[22:39] <BenGoldberg> p6: say pi.Rat.denominator

[22:39] <masak> whoever released December forgot to update the Wikipedia article...

[22:39] <psch> jnthn: should i update the PR for roast with test cases for X::Method::NotFoud(:private)?

[22:39] <camelia> rakudo-jvm 2834f7: OUTPUT«(timeout)»

[22:39] <camelia> ..rakudo-parrot 2834f7, rakudo-moar 2834f7, niecza v24-109-g48a8de3: OUTPUT«113␤»

[22:40] <BenGoldberg> Why is that number so small, rather than being close to 2**64 or whatever?

[22:40] <psch> *NotFound 

[22:40] <jnthn> psch: Well, thing is that it's a level 3 (off by default) opt at the moment, but given we're post-release...let's make it a level 2 provided it spectests

[22:41] <jnthn> psch: And then yes, a test would be great

[22:41] <jnthn> psch: Do you have a roast commit bit?

[22:41] <jnthn> psch: I can give you one so you don't need to go thorugh the pull request mechanism there...

[22:41] <psch> jnthn: no, i do not

[22:41] <masak> Wikipedia updated.

[22:41] <masak> standing down release status.

[22:41] <masak> feel free to, I dunno, start *committing to rakudo/nom* again... :P

[22:42] * masak celebrates with the appropriate amount of going to bed

[22:42] <masak> 'night, #perl6

[22:42] <diakopter> o/

[22:42] <jnthn> masak: 'night o/

[22:43] <jnthn> masak++ # release

[22:43] <jnthn> psch: You do now

[22:43] *** kaare__ joined
[22:44] <[Coke]> timotimo: made sure all the text was in sync enough.

[22:44] <psch> jnthn: so i'll close the PR and push my changes myself i assume

[22:44] <jnthn> psch: plesae

[22:44] <jnthn> psch: I'll let you know about the NotFound thingy in a moment

[22:44] <psch> i'll do that, thanks

[22:49] * [Coke] heads to the locale.

[22:50] <jnthn> psch: haha :) When I turn on the opt, it realizes one of the method calls in S12-methods/private.t can never possible work at compile time.

[22:50] <jnthn> psch: And so refuses to compile the test :)

[22:50] <jnthn> psch: Can I leave updating the test to use eval and look for the typed exception to you?

[22:51] <dalek> rakudo/nom: 717a008 | jnthn++ | src/Perl6/Optimizer.nqp:

[22:51] <dalek> rakudo/nom: Add private method devirtualizing to default opts.

[22:51] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/717a0083cc

[22:51] <timotimo> [Coke]: how much time do i have left? :)

[22:51] *** bluescreen10 left
[22:52] <jnthn> timotimo: I think none, given [Coke] just left... :)

[22:52] <psch> jnthn: i'll have a look at S12-methods/private.t, although i won't promise i can figure it out; i'll get back to you

[22:52] <timotimo> oh no!

[22:52] <timotimo> but he has the internets

[22:52] <jnthn> timotimo: oh, true :)

[22:53] <jnthn> psch: Lemme know if you have trouble; I think it wants to become a throws_like and move the code into an eval or something.

[22:54] <jnthn> clsn: Is https://github.com/rakudo/rakudo/pull/235 ready for me to try/review? Or was the fail I found still to fix?

[22:56] <psch> jnthn: afair he commented on PR 237 that he fixed it

[22:56] * psch still has to rebuild from fiddling with <.unsp>

[22:57] <jnthn> psch: oh, thanks.

[22:57] <psch> no problem, i got it per mail after all... :)

[22:58] <timotimo> done

[22:58] <timotimo> yay, coke put a thank you onto the last slide for me %)

[22:58] <timotimo> that was fun

[23:03] *** araujo left
[23:03] *** araujo joined
[23:03] <timotimo> https://docs.google.com/presentation/d/1dkndiHaCEHwVS0UFqO4h63liTSz2zi6ay7d-p7Uey0E/edit?usp=sharing ← this is the one with colors :)

[23:05] *** tgt joined
[23:06] *** Rotwang left
[23:07] *** mavcunha joined
[23:10] *** tgt left
[23:13] <dalek> rakudo/nom: 5527210 | (Mark Shoulson)++ | src/core/ (2 files):

[23:13] <dalek> rakudo/nom: Fix Parameter.perl and do Signature smart-matching.

[23:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5527210368

[23:13] <dalek> rakudo/nom: 574613b | (Mark Shoulson)++ | src/core/Signature.pm:

[23:13] <dalek> rakudo/nom: Catch another case of Signature matching with slurpies.

[23:13] *** dalek left
[23:14] *** dalek joined
[23:14] *** ChanServ sets mode: +v dalek

[23:14] <jnthn> There's two pull requests down :)

[23:15] <timotimo> clsn++ # signature work :)

[23:15] <timotimo> i'm thinking about making introspection easier all the way down by giving gist and perl methods to the BootstrapFoobar classes

[23:15] <jnthn> Indeed

[23:15] <psch> oh boy, i just now notice the extend of my git-mess

[23:16] <psch> i can't push a rebase of rakudo/nom into my own nom because there's a patch missing that doesn't introduce difference... or something like that

[23:16] <jnthn> timotimo: I'd rather not

[23:16] <timotimo> jnthn: fair enough. bloat reasons?

[23:16] <psch> but seeing as everything i have is merge i can just trash my fork and fork again, right?

[23:16] <psch> *merged

[23:16] <jnthn> psch: Yes

[23:16] <BenGoldberg> p6: Rat.new((pi * 2**59).Int, 2**59).denominator.say;

[23:17] <camelia> rakudo-parrot fa1e95, rakudo-jvm fa1e95, rakudo-moar fa1e95, niecza v24-109-g48a8de3: OUTPUT«281474976710656␤»

[23:17] <BenGoldberg> p6: Rat.new((pi * 2**60).Int, 2**60).denominator.say;

[23:17] <timotimo> also, you can just make a new branch at those "borked" commits and they'll never be lost

[23:17] <camelia> rakudo-parrot fa1e95, rakudo-moar fa1e95, niecza v24-109-g48a8de3: OUTPUT«281474976710656␤»

[23:17] <camelia> ..rakudo-jvm fa1e95: OUTPUT«288230376151711744␤»

[23:17] * BenGoldberg doesn't get why jakudo's output is different there.

[23:18] <jnthn> timotimo: That and you can't easily get at such things unless you go meta-programming at least a level deep anyway.

[23:18] <psch> timotimo: the problem is i reverted my commit that should have gone into a branch in nom, and now i cant merge upstream that has that commit into my nom

[23:18] <jnthn> timotimo: All the things you get through .HOW on a Perl 6 object have a .perl and .gist, for example.

[23:18] <timotimo> psch: then git reset --hard nom origin/nom

[23:19] <psch> timotimo: that might have worked, i nuked it already though

[23:19] <lue> BenGoldberg: different math libs, I'm guessing

[23:19] *** jeffreykegler joined
[23:19] *** Mouq left
[23:19] <psch> the problem i had happened when pushing into my fork, in any case, i got a 'rejected' because my HEAD was behind

[23:19] <timotimo> oh

[23:19] <timotimo> then push -f it :)

[23:20] <psch> ...right, that exists

[23:20] <BenGoldberg> The docs for Rat, at http://doc.perl6.org/type/Rat, say that the denominator is supposed to be a UInt64.  It ought to be able to hold values up to 2**63 with no problem.

[23:20] <timotimo> BenGoldberg: i think currently it's falsely implemented as Int64 instead

[23:20] <BenGoldberg> Even so, funny things happening at 2**60 is odd

[23:21] <timotimo> oh, right

[23:21] * psch only readily uses -f on rm $dirwithsubdirs, which might actually the worst readily use of -f possible

[23:21] <psch> s/y t/y be t/

[23:23] <BenGoldberg> p: say 281474976710656.log / 2.log

[23:23] <camelia> rakudo-parrot fa1e95: OUTPUT«48␤»

[23:23] <grondilu> perl6: Rat.new(1, 2**60).denominator.say;

[23:23] <camelia> rakudo-parrot fa1e95, rakudo-jvm fa1e95, rakudo-moar fa1e95, niecza v24-109-g48a8de3: OUTPUT«1152921504606846976␤»

[23:23] <grondilu> perl6: Rat.new(3**20, 2**60).denominator.say;

[23:23] <camelia> rakudo-parrot fa1e95, rakudo-jvm fa1e95, rakudo-moar fa1e95, niecza v24-109-g48a8de3: OUTPUT«1152921504606846976␤»

[23:23] <lue> That reminds me. TimToady: UInt64 looks to me to be unnecessary. There was a discussion here a couple days back on it.

[23:24] <grondilu> perl6: say (pi*2**60).Int;

[23:24] <camelia> rakudo-jvm fa1e95: OUTPUT«3622009729038561300␤»

[23:24] <camelia> ..rakudo-parrot fa1e95, rakudo-moar fa1e95, niecza v24-109-g48a8de3: OUTPUT«3622009729038561280␤»

[23:25] <grondilu> BenGoldberg: I think that's your explanation.  The difference is in the numerator, not in the denominator.

[23:26] <grondilu> but it appears in the denominator after simplification of the fraction.

[23:26] <grondilu> perl6: say (pi*2**59).Int;

[23:26] <camelia> rakudo-parrot fa1e95, rakudo-jvm fa1e95, rakudo-moar fa1e95, niecza v24-109-g48a8de3: OUTPUT«1811004864519280640␤»

[23:27] <grondilu> see?  all rakudos agree with pi*2**59, but not with pi*2**60

[23:28] <grondilu> which is related with the different ways they store the pi constant, I guess.

[23:28] <lue> p6: say pi

[23:28] <camelia> rakudo-jvm fa1e95: OUTPUT«3.141592653589793␤»

[23:28] <camelia> ..rakudo-parrot fa1e95: OUTPUT«3.14159265358979␤»

[23:28] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«3.1415926535897931␤»

[23:28] <camelia> ..rakudo-moar fa1e95: OUTPUT«3.141593␤»

[23:28] <jnthn> r: say pi.WHAT

[23:28] <camelia> rakudo-parrot fa1e95, rakudo-jvm fa1e95, rakudo-moar fa1e95: OUTPUT«(Num)␤»

[23:28] <timotimo> i can see which slide coke is on :D

[23:29] <BenGoldberg> perl6: say pi - 3.141592653589793

[23:29] <camelia> rakudo-parrot fa1e95, rakudo-jvm fa1e95, rakudo-moar fa1e95, niecza v24-109-g48a8de3: OUTPUT«0␤»

[23:29] <timotimo> at least i think that's what i'm seeing

[23:29] <lue> p: say π

[23:29] <camelia> rakudo-parrot fa1e95: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/HJgZ8TFYRC␤Undeclared routine:␤    π used at line 1␤␤»

[23:29] <BenGoldberg> perl6: say pi - 3.14159265

[23:29] <camelia> niecza v24-109-g48a8de3: OUTPUT«3.5897929073769319E-09␤»

[23:29] <camelia> ..rakudo-jvm fa1e95: OUTPUT«3.589792907376932E-9␤»

[23:29] <camelia> ..rakudo-parrot fa1e95: OUTPUT«3.58979290737693e-09␤»

[23:29] <camelia> ..rakudo-moar fa1e95: OUTPUT«0␤»

[23:29] <BenGoldberg> perl6: say pi - 3.14159265.Num

[23:29] <camelia> niecza v24-109-g48a8de3: OUTPUT«3.5897929073769319E-09␤»

[23:29] <camelia> ..rakudo-jvm fa1e95: OUTPUT«3.589792907376932E-9␤»

[23:29] <camelia> ..rakudo-parrot fa1e95: OUTPUT«3.58979290737693e-09␤»

[23:29] <camelia> ..rakudo-moar fa1e95: OUTPUT«0␤»

[23:30] <grondilu> p6: say (pi - 3.14159265)/pi

[23:30] <camelia> rakudo-parrot fa1e95: OUTPUT«1.14266657177053e-09␤»

[23:30] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«1.1426665717705302E-09␤»

[23:30] <camelia> ..rakudo-jvm fa1e95: OUTPUT«1.1426665717705302E-9␤»

[23:30] <camelia> ..rakudo-moar fa1e95: OUTPUT«0␤»

[23:30] <BenGoldberg> perl6: say (pi - 3.14159265) * 1e9

[23:30] <camelia> rakudo-moar fa1e95: OUTPUT«3.589793␤»

[23:30] <camelia> ..rakudo-jvm fa1e95: OUTPUT«3.589792907376932␤»

[23:30] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«3.5897929073769319␤»

[23:30] <camelia> ..rakudo-parrot fa1e95: OUTPUT«3.58979290737693␤»

[23:31] * BenGoldberg is annoyed at how few significant digits moar prints out by default. Sadly, it's not specced to anything in particular, yet

[23:31] <grondilu> m: say pi.perl

[23:31] <camelia> rakudo-moar 717a00: OUTPUT«3.141593e0␤»

[23:33] <BenGoldberg> One would think that Num.perl would print out a long enough decimal representation that .Num-ing the string could reconstruct a value equal to the original Num, within one or two bits.

[23:33] *** dmol left
[23:34] <psch> m: my $x = 0.12345678910; $x.perl.say

[23:34] <camelia> rakudo-moar 717a00: OUTPUT«0.1234567891␤»

[23:34] <lue> BenGoldberg: what makes you say it doesn't?

[23:35] <psch> i think this more about how many significant digits are present in the implementation

[23:35] <BenGoldberg> If moar, internally, had tiny floats for Num, then:

[23:36] <BenGoldberg> perl6: say (pi - 3.14159265) * 1e9

[23:36] <colomon> BenGoldberg: pi is a Num, I believe

[23:36] <camelia> rakudo-moar 717a00: OUTPUT«3.589793␤»

[23:36] <camelia> ..rakudo-jvm 717a00: OUTPUT«3.589792907376932␤»

[23:36] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«3.5897929073769319␤»

[23:36] <camelia> ..rakudo-parrot 717a00: OUTPUT«3.58979290737693␤»

[23:36] <colomon> p: say pi.WHAT

[23:36] <camelia> rakudo-parrot 717a00: OUTPUT«(Num)␤»

[23:36] <BenGoldberg> ... would produce a zero for moar, instead of 3.58793

[23:37] <colomon> r: say pi.perl

[23:37] <camelia> rakudo-moar 717a00: OUTPUT«3.141593e0␤»

[23:37] <camelia> ..rakudo-jvm 717a00: OUTPUT«3.141592653589793e0␤»

[23:37] <camelia> ..rakudo-parrot 717a00: OUTPUT«3.14159265358979e0␤»

[23:37] <colomon> though yeah, that's a moar-bug

[23:37] <lue> m: say pi; say pi - 3.14159265; say (pi - 3.14159265) * 1e9

[23:37] <camelia> rakudo-moar 717a00: OUTPUT«3.141593␤0␤3.589793␤»

[23:37] <colomon> r: say (1/3).Num.perl

[23:37] <camelia> rakudo-moar 717a00: OUTPUT«0.333333e0␤»

[23:37] <camelia> ..rakudo-jvm 717a00: OUTPUT«0.3333333333333333e0␤»

[23:37] <camelia> ..rakudo-parrot 717a00: OUTPUT«0.333333333333333e0␤»

[23:37] <lue> That second number should not be zero.

[23:39] <BenGoldberg> perl6: my $p = (pi - 3.14159265); say $p.gist, ' ', $p.perl, ' ', $p.fmt('%.15f')

[23:39] <camelia> niecza v24-109-g48a8de3: OUTPUT«3.5897929073769319E-09 3.5897929073769319E-09 0.000000003589793␤»

[23:39] <camelia> ..rakudo-moar 717a00: OUTPUT«0 0e0 0.000000003589793␤»

[23:39] <camelia> ..rakudo-parrot 717a00: OUTPUT«3.58979290737693e-09 3.58979290737693e-09 0.000000003589790␤»

[23:39] <camelia> ..rakudo-jvm 717a00: OUTPUT«3.589792907376932E-9 3.589792907376932E-9 0.000000003589793␤»

[23:40] <timotimo> google docs does show coke on the first slide constantly apparently

[23:40] <psch> 30 minutes camelia :)

[23:41] <BenGoldberg> perl6: my $p = (pi - 3.14159265); say $p.fmt('%.15e')

[23:41] <camelia> rakudo-parrot 717a00: OUTPUT«3.589792907376930e-09␤»

[23:41] <camelia> ..rakudo-jvm 717a00, rakudo-moar 717a00: OUTPUT«3.589792907376932e-09␤»

[23:41] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«3.589792907376932e-009␤»

[23:41] <timotimo> :D

[23:41] <timotimo> now coke dropped off the 'net

[23:41] <jnthn> BenGoldberg: Got a MoarVM patch coming up that gives us some more digits.

[23:42] * colomon will stop searching through the NQP source trying to figure out where that code is.

[23:42] <BenGoldberg> perl6: my $p = (pi - 3.14159265358979290737693); say $p.fmt('%.15e')

[23:42] <camelia> niecza v24-109-g48a8de3: OUTPUT«4.440892098500626e-016␤»

[23:42] <camelia> ..rakudo-parrot 717a00: OUTPUT«4.440892098500630e-16␤»

[23:42] <camelia> ..rakudo-moar 717a00: OUTPUT«4.440892098500626e-16␤»

[23:42] <camelia> ..rakudo-jvm 717a00: OUTPUT«0.000000000000000e+00␤»

[23:44] <BenGoldberg> perl6: my $p = (pi - 3.14159265358979290737693444089209850062); say $p.fmt('%.15e')

[23:44] <camelia> rakudo-parrot 717a00, rakudo-jvm 717a00, rakudo-moar 717a00: OUTPUT«0.000000000000000e+00␤»

[23:44] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«0.000000000000000e+000␤»

[23:44] <BenGoldberg> :)

[23:45] <BenGoldberg> I think that perl6 should define pi to be 3.14159265358979290737693444089209850062, as a Rat ;)

[23:46] * BenGoldberg is only slightly joking

[23:46] <colomon> BenGoldberg: that's too precise for a Rat, isn't it?

[23:46] <timotimo> the question is: what do you use pi for normally and how well do rats work in that case?

[23:46] <colomon> FatRat, now...

[23:46] <timotimo> do our trigonometric operations handle rats well?

[23:47] <BenGoldberg> r: say 3.14159265358979290737693444089209850062.nude

[23:47] <camelia> rakudo-parrot 717a00, rakudo-jvm 717a00, rakudo-moar 717a00: OUTPUT«157079632679489645368846722044604925031 50000000000000000000000000000000000000␤»

[23:47] <raydiak> why use so many digits if the last 2/3rds are wrong? :)

[23:47] <BenGoldberg> r: say pi.Rat.nude

[23:47] <camelia> rakudo-parrot 717a00, rakudo-jvm 717a00, rakudo-moar 717a00: OUTPUT«355 113␤»

[23:48] <lue> I think we should define a π :)

[23:48] <BenGoldberg> r: say pi.Rat.Num.fmt("%.30e")

[23:48] <camelia> rakudo-jvm 717a00: OUTPUT«3.00000000001.415929203539825E29e+00␤»

[23:48] <camelia> ..rakudo-parrot 717a00: OUTPUT«3.000000000001.4159292035398e+29e+00␤»

[23:48] <camelia> ..rakudo-moar 717a00: OUTPUT«3.000000000009223391921479614464e+00␤»

[23:48] <BenGoldberg> r: say pi.Rat.Num.fmt("%.15e")

[23:48] <camelia> rakudo-jvm 717a00, rakudo-moar 717a00: OUTPUT«3.141592920353983e+00␤»

[23:48] <camelia> ..rakudo-parrot 717a00: OUTPUT«3.141592920353980e+00␤»

[23:48] <jnthn> BenGoldberg: MoarVM HEAD has the patch now. :)

[23:49] <timotimo> great! :)

[23:49] <colomon> jnthn++

[23:49] <BenGoldberg> r: say (pi - pi.Rat.Num).fmt("%.15e")

[23:49] <camelia> rakudo-parrot 717a00: OUTPUT«-2.667641894049670e-07␤»

[23:49] <camelia> ..rakudo-jvm 717a00, rakudo-moar 717a00: OUTPUT«-2.667641894049666e-07␤»

[23:49] <jnthn> Also one spectest fail went away thanks to it :)

[23:50] <timotimo> jnthn: you could draft up a prototype for the re-structured optimizer perhaps?

[23:50] *** grondilu_ joined
[23:50] *** ajr_ left
[23:51] <jnthn> timotimo: Perhaps, though I think there's a few more pressing things than that.

[23:52] <timotimo> sure

[23:52] <timotimo> you were asking for things to do, so i just grabbed that off the top of my head :)

[23:52] <jnthn> timotimo: Well, there's plenty to do, I'm just kinda tired today after staying up quite late working on Moar release today, so was looking for LHF :)

[23:53] <timotimo> heh. that's absolutely fair

[23:54] *** grondilu left
[23:55] <jnthn> If anybody is looking to take a fairly manageable task off my list: bring the perl6-debug frontend (not the Perl 6 UI module, just the perl6-debug program itself) into the Rakudo repo and get it so we build it on all 3 backends, generating and installing a fakeexecutable on Parrot and a runner on Moar and JVM.

[23:55] <grondilu_> pi has no unversally accepted numeric approximation, so honestly I'm not even sure it's a good idea to put one in the core.  If we do, we might as well put one that is voluntarliy not too accurate.  Like constant pi = <355/113>.

[23:56] <lue> 22/7 is the conventional fractional form of pi :)

[23:56] <jnthn> Bonus: you most likely get to be the person to thank for us having perl6-debug on MoarVM :)

[23:57] <lue> jnthn: "not the Perl 6 UI module"  what do you mean by that? Is there a GUI I missed?

[23:57] *** grondilu_ is now known as grondilu

[23:58] *** denisboyun joined
[23:58] <jnthn> lue: The debugger is broken up into a small NQP program that inserts debug hooks into AST, and a larger Perl 6 module that subscribes to them and does the actual user interaction.

[23:58] *** grondilu left
[23:58] *** grondilu joined
[23:58] <timotimo> jnthn: how do we feel about loading .moarvm files from any kind of archive, compressed or otherwise?

[23:58] <jnthn> lue:It's a command line interface at the moment. The design is such that we can build other ones.

[23:58] <jnthn> timotimo: Negative.

[23:58] <jnthn> timotimo: Ruins mmap

[23:59] <lue> ah, so you want the debugger hooks in rakudo, but not the specific CUI program used for 'perl6-debug' ?

[23:59] <timotimo> then we should just make sure to make the moarvm files small-ish :3

[23:59] <jnthn> timotimo: Well, the integer thing in the serialization blob may be a big win.

[23:59] <timotimo> right. only in the serialized blob though, yes?

[23:59] <jnthn> lue: Well, perl6-debug is the thing I want brought in.

[23:59] <jnthn> timotimo: right

