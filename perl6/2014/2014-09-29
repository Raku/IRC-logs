[00:04] *** bjz left
[00:08] *** yeahnoob joined
[00:10] *** virtualsue left
[00:11] *** virtualsue joined
[00:20] *** telex left
[00:21] *** raiph left
[00:22] *** telex joined
[00:23] *** vendethiel left
[00:23] *** nebuchadnezzar joined
[00:23] *** vendethiel joined
[00:24] *** raiph joined
[00:24] <dalek> roast: dfd7d76 | (Solomon Foster)++ | S03-operators/bag.t:

[00:24] <dalek> roast: New bag tests, fudged appropriately.

[00:24] <dalek> roast: review: https://github.com/perl6/roast/commit/dfd7d76c8c

[00:29] *** firnsy joined
[00:29] *** firnsy left
[00:29] *** firnsy joined
[00:33] *** dayangkun joined
[00:34] *** dayangkun left
[00:40] *** yeahnoob left
[00:41] *** ggoebel111119 left
[01:04] *** virtualsue left
[01:08] * TimToady now in Lexington, VA

[01:09] *** yeahnoob joined
[01:09] <gtodd> camelia: m: $_ = "python3"; tr/python3/ perl6/; .say;

[01:10] <camelia> gtodd: rakudo-moar 502241: OUTPUT«(timeout)»

[01:11] <TimToady> m: say "hi"

[01:11] <camelia> rakudo-moar 502241: OUTPUT«hi␤»

[01:11] <TimToady> m: $_ = "python3"; tr/python3/ perl6/; .say;

[01:12] <camelia> rakudo-moar 502241: OUTPUT«(timeout)»

[01:14] *** Mso150 joined
[01:20] *** ggoebel111117 joined
[01:43] <BenGoldberg> n: $_ = "python3"; tr/python3/ perl6/; .say;

[01:44] <camelia> niecza : OUTPUT«Cannot open assembly './run/Niecza.exe': No such file or directory.␤»

[01:44] <BenGoldberg> P: $_ = "python3"; tr/python3/ perl6/; .say;

[01:44] <camelia> pugs: OUTPUT«/home/p6eval/.cabal/bin/pugs: error while loading shared libraries: libperl.so.5.14: cannot open shared object file: No such file or directory␤»

[01:44] <BenGoldberg> j: $_ = "python3"; tr/python3/ perl6/; .say;

[01:44] <camelia> rakudo-jvm 502241: OUTPUT«Can't call method "syswrite" on an undefined value at /home/p6eval/jvm-rakudo/eval-client.pl line 32.␤»

[01:44] <BenGoldberg> p: $_ = "python3"; tr/python3/ perl6/; .say;

[01:44] <camelia> rakudo-parrot 502241: OUTPUT« perl6 ␤»

[01:45] <TimToady> hmm, why space?

[01:46] *** leont left
[01:46] <BenGoldberg> Well, the leading space in the output is due to the space here: / perl6/, however the trailing space is a bit odd.

[01:47] *** kyun joined
[01:48] <TimToady> p5 would do " perl66"

[01:49] *** Mso150 left
[02:09] *** noganex joined
[02:12] *** noganex_ left
[02:21] <j4jackj> TimToady: are there any Perl6 implementations written in Perl5?

[02:23] *** chenryn joined
[02:34] *** raiph left
[02:45] <BenGoldberg> j4jackj, Perlito compiles perl6 to perl5.

[02:45] <j4jackj> k

[02:46] <yeahnoob> Why Perl 6 is not backend on LLVM? My very old question when I first heard about Perl 6.

[02:46] <BenGoldberg> yeahnoob, If you want to write an LLVM backend for perl6, you are free to do so.

[02:50] <yeahnoob> For a noob, i have no such powerful knowledge and skills for now...so

[02:52] <bonsaikitten> so start learning

[02:54] *** immortal left
[03:01] <tony-o> p: $_ = "python3"; tr/python3/ perl6/; .print

[03:02] <camelia> rakudo-parrot 502241: OUTPUT«(timeout)»

[03:02] <tony-o> p: $_ = "python3"; tr/python3/ perl6/; .print;

[03:02] <camelia> rakudo-parrot 502241: OUTPUT«(timeout)»

[03:02] <tony-o> weird timeouts on eval bot

[03:08] *** molaf joined
[03:11] <yeahnoob> Yes Sir. Learning on my way...

[03:12] <yeahnoob> p: $_ = "python3"; tr/python3/ perl6/; .print;

[03:12] <camelia> rakudo-parrot 502241: OUTPUT«(timeout)»

[03:13] <yeahnoob> m: $_ = "python3"; tr/python3/ perl6/; .print;

[03:13] <camelia> rakudo-moar 502241: OUTPUT« perl6 »

[03:14] <yeahnoob> Maybe they are tweaking the Bot-server.

[03:14] *** avuserow left
[03:16] *** erkan joined
[03:19] *** molaf left
[03:19] <kyun> Well done, the rakudo star update to 2014.09

[03:42] *** chenryn left
[04:12] *** chenryn joined
[04:17] *** chenryn left
[04:18] *** anaeem1_ joined
[04:33] *** BenGoldberg left
[04:40] *** SamuraiJack_ joined
[05:16] *** mberends left
[05:45] *** avuserow joined
[05:50] *** kaleem joined
[05:50] *** rindolf joined
[05:55] *** jack_rabbit left
[06:13] *** ecocode joined
[06:20] <sergot_> morning o/

[06:21] *** chenryn joined
[06:25] <kyun> Good afternoon.

[06:25] *** dayangkun joined
[06:40] *** rindolf left
[06:41] *** SamuraiJack_ left
[06:44] *** rindolf joined
[06:48] *** atroxaper joined
[06:49] <atroxaper> Hello, #perl6 !

[06:58] *** FROGGS joined
[07:01] *** virtualsue joined
[07:04] *** zakharyas joined
[07:12] *** erkan left
[07:16] *** Mso150 joined
[07:19] *** darutoko joined
[07:24] *** dayangkun left
[07:28] *** _slade_ left
[07:49] *** odc joined
[07:50] *** darutoko- joined
[07:54] *** darutoko left
[07:58] *** denis_boyun_ joined
[08:04] *** fhelmberger joined
[08:06] *** amkrankruleuen joined
[08:06] *** fhelmberger left
[08:11] *** virtualsue left
[08:31] *** dakkar joined
[08:48] *** kaare_ joined
[08:58] *** mberends joined
[09:03] *** erkan joined
[09:03] *** erkan left
[09:03] *** erkan joined
[09:04] *** Mso150 left
[09:05] *** ghostlines joined
[09:06] <lizmat> good *, #perl6!

[09:07] <dalek> roast: 2f5ef2a | (Elizabeth Mattijsen)++ | S02-types/WHICH.t:

[09:07] <dalek> roast: Remove 4 classes to be removed

[09:07] <dalek> roast: review: https://github.com/perl6/roast/commit/2f5ef2aa78

[09:15] *** virtualsue joined
[09:15] *** denis_boyun_ left
[09:16] *** ggherdov___ joined
[09:17] <yeahnoob> m: my $t=localtime; say "Good ",$t; 

[09:17] <camelia> rakudo-moar 502241: OUTPUT«===SORRY!=== Error while compiling /tmp/XwdjQuW54H␤Undeclared routine:␤    localtime used at line 1␤␤»

[09:17] *** denis_boyun joined
[09:17] <yeahnoob> m: my $t=DateTime.new(now); say "Good ",$t;

[09:17] <camelia> rakudo-moar 502241: OUTPUT«Good 2014-09-29T09:17:11Z␤»

[09:17] *** pecastro joined
[09:17] <lizmat> it appears $*PROGRAM_NAME is a P5ism

[09:18] * lizmat thinks she's going to deprecate it

[09:22] *** brrt joined
[09:23] <yeahnoob> m: my $t=DateTime.new(now); $t=$t.in-timezone($*TZ); say "Good Time & Time Again, ",$t;

[09:23] <camelia> rakudo-moar 502241: OUTPUT«Good Time & Time Again, 2014-09-29T05:23:21-0400␤»

[09:26] *** yeahnoob left
[09:33] <FROGGS> .u arrow

[09:33] <yoleaux> 28 Sep 2014 21:19Z <lizmat> FROGGS: seems the 5daa5de broke the parrot build

[09:33] <yoleaux> U+02C2 MODIFIER LETTER LEFT ARROWHEAD [Sk] (˂)

[09:33] <yoleaux> U+02C3 MODIFIER LETTER RIGHT ARROWHEAD [Sk] (˃)

[09:33] <yoleaux> U+02C4 MODIFIER LETTER UP ARROWHEAD [Sk] (˄)

[09:33] <FROGGS> eww

[09:38] *** bjz joined
[09:39] <lizmat> FROGGS: yeah, that was quite a big commit, so I have not been looking at a solution yet  :-(

[09:39] <FROGGS> no problem... I'll fix it

[09:42] *** denis_boyun left
[09:45] <FROGGS> lizmat: your last label Patch will break my panda :o(

[09:45] <FROGGS> looks like it need to find a third way :/

[09:46] <FROGGS> ahh, perhaps I already know how...

[09:49] <dalek> specs: 51bf410 | (Elizabeth Mattijsen)++ | S32-setting-library/IO.pod:

[09:49] <dalek> specs: chmod/unlink() return files changed/removed

[09:49] <dalek> specs: review: https://github.com/perl6/specs/commit/51bf410b68

[09:51] <lizmat> FROGGS: the one that unbroke the JVM build ?

[09:52] <FROGGS> lizmat: yeah

[09:53] <FROGGS> problem seems to be that we get an IO::Path outside of the setting

[09:54] <lizmat> that shouldn't be a problem ??

[09:57] <FROGGS> well, you just can't p6box_s and IO::Path

[09:59] <lizmat> hmmm/... so where does $?FILES become an IO::Path then ?

[10:00] <FROGGS> m: say nqp::getlexdyn('$?FILES')

[10:00] <camelia> rakudo-moar 502241: OUTPUT«/tmp/jE8B_GmN5f␤»

[10:00] *** kyun left
[10:00] <FROGGS> m: sub foo { say nqp::getlexdyn('$?FILES') }; foo

[10:00] <camelia> rakudo-moar 502241: OUTPUT«/tmp/lMczF189L4␤»

[10:00] <FROGGS> hmmm, maybe in a procompiled module or so?

[10:01] <FROGGS> because that is where it exploded... after precompiling Archive::Tar, when running its tests

[10:07] *** virtualsue left
[10:09] <lizmat> hmmmm...  well, $?FILES should be precompiled and frozen

[10:09] <lizmat> maybe the serializer / deserializer cannot handle IO::Path ?

[10:10] <lizmat> where does that live anyway ?

[10:11] <FROGGS> probably here:

[10:11] <FROGGS> rakudo/src/gen/ModuleLoader.nqp:264:                my $?FILES   := %chosen<pm>;

[10:12] <lizmat> aha, I think I know where that get's set

[10:13] <lizmat> could you try:

[10:13] <lizmat> -                  $candi<provides>{$module_name}<pm><file>;

[10:13] <lizmat> +                  ~$candi<provides>{$module_name}<pm><file>;

[10:13] <lizmat> in src/core/CompUnit.pm ?

[10:14] <lizmat> line 100

[10:19] *** virtualsue joined
[10:20] <FROGGS> yeah, will try that in a bit

[10:22] <FROGGS> I'll fix parrot first

[10:30] <dalek> specs: 9131eb7 | (Elizabeth Mattijsen)++ | S32-setting-library/IO.pod:

[10:30] <dalek> specs: Add mode parameter to mkdir()/.mkdir

[10:30] <dalek> specs: review: https://github.com/perl6/specs/commit/9131eb773a

[10:33] *** cosimo joined
[10:39] *** denis_boyun joined
[10:40] *** cosimo left
[10:43] *** atroxaper left
[10:44] *** atroxaper joined
[10:47] *** tharvesh joined
[10:51] *** tharvesh left
[10:57] *** atroxaper left
[10:57] *** atroxaper_ joined
[10:58] <timotimo> o/

[11:01] <lizmat> timotimo o/

[11:05] <timotimo> meh

[11:05] <timotimo> i wanted to play overgod (for old time's sake or something) and it segfaults at startup .. i can install the separate debuginfo package, but all it shows is "<optimized out>"

[11:07] *** xinming joined
[11:08] <nine> timotimo: that means that the value probably is in some CPU register

[11:08] <brrt> timotimo o/

[11:09] *** virtualsue left
[11:12] <timotimo> nine: yeah, but that doesn't help me figure out how a null pointer gets its way into the src argument of some blitting function >_<

[11:14] *** sqirrel__ joined
[11:18] *** virtualsue joined
[11:19] *** sqirrel__ left
[11:23] *** chenryn left
[11:32] *** atroxaper_ left
[11:32] *** atroxaper joined
[11:39] *** cosimo joined
[11:43] *** leont joined
[11:50] *** prevost joined
[11:50] *** colomon left
[11:53] *** colomon joined
[11:53] *** chenryn joined
[11:54] <dalek> rakudo/nom: 17db5ce | (Tobias Leich)++ | src/Perl6/Grammar.nqp:

[11:54] <dalek> rakudo/nom: unbreak parrot build

[11:54] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/17db5cea3f

[11:55] *** telex left
[11:56] *** telex joined
[11:59] *** rindolf left
[12:10] *** rindolf joined
[12:11] <lizmat> FROGGS: that line seems rather essential?

[12:14] *** yeahnoob joined
[12:15] <timotimo> is a \ at the end of a line always acceptable in the repl to give a new line of input?

[12:15] <timotimo> as in: if i'm inside a string literal, will that work as expected? + all edge cases i may not have thought about

[12:16] <dalek> perl6-roast-data: 076a6ed | coke++ | / (5 files):

[12:16] <dalek> perl6-roast-data: today (automated commit)

[12:16] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/076a6ed078

[12:17] <[Coke]> ^^ yesterday

[12:18] <lizmat> timotimo: I think that could only work if the REPL would always execute *all* lines entered from scratch

[12:19] <lizmat> with perhaps $*OUT and $*ERR localized to dev/null in all but the last line

[12:20] <timotimo> er, what?

[12:21] <timotimo> oh, no, the repl has a little piece of code in it that'll ask for another line if the last one ended in a backslash

[12:22] *** araujo joined
[12:22] *** araujo left
[12:22] *** araujo joined
[12:28] *** rindolf left
[12:34] <dalek> roast: bf164e1 | (Elizabeth Mattijsen)++ | S02-types/WHICH.t:

[12:34] <dalek> roast: Argh, we need these classes (for now at least)

[12:34] <dalek> roast: 

[12:34] <dalek> roast: This reverts commit 2f5ef2aa78e28cfaac8edb1f5d61dfb99a12c7d7.

[12:34] <dalek> roast: review: https://github.com/perl6/roast/commit/bf164e16b2

[12:34] <timotimo> m: say 1, 1, *+* ... *

[12:34] <camelia> rakudo-moar 17db5c: OUTPUT«1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 70140873…»

[12:35] *** chenryn left
[12:38] *** rindolf joined
[12:43] *** chenryn joined
[12:46] <lizmat> m: sub a(:$*SPEC) { say $SPEC }; a   # hoped this would say IO::Spec::Unix

[12:46] <camelia> rakudo-moar 17db5c: OUTPUT«===SORRY!=== Error while compiling /tmp/Rz1bA_y4vB␤Variable '$SPEC' is not declared␤at /tmp/Rz1bA_y4vB:1␤------> sub a(:$*SPEC) { say $SPEC⏏ }; a   # hoped this would say IO::Spec:␤    expecting any of:␤    …»

[12:46] <lizmat> hmmm... -e discrepancy  :-)  

[12:47] <lizmat> would it make sense to have :$*SPEC be a shortcut for :SPEC($*SPEC) ?

[12:49] *** chenryn left
[12:54] *** rindolf left
[13:05] <FROGGS> lizmat: sort of, it is meant to make $*STRICT available in EVALs but it does not work correctly with this line on moar either

[13:05] *** anaeem1_ left
[13:05] <dalek> rakudo-star-daily: 2b8a039 | coke++ | log/MoarVM-version.log:

[13:05] <dalek> rakudo-star-daily: today (automated commit)

[13:05] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/2b8a039d20

[13:06] <FROGGS> lizmat: yes, because "SPEC" is the name # :$*SPEC be a shortcut for :SPEC($*SPEC)

[13:06] <jnthn> m: sub a(:$foo) { say $foo }; my $*foo = 42; a(:$*foo)

[13:06] <camelia> rakudo-moar 17db5c: OUTPUT«42␤»

[13:06] <jnthn> Already works, no? :)

[13:06] <FROGGS> jnthn: bah, just because you did it right! :P

[13:07] <FROGGS> m: sub a(:$foo) { say $foo }; a(:$<foo>)

[13:07] <camelia> rakudo-moar 17db5c: OUTPUT«Nil␤»

[13:08] *** rindolf joined
[13:11] <jnthn> m: 'abc' ~~ /$<foo>=[\w+]/; sub a(:$foo) { say $foo }; a(:$<foo>)

[13:11] <camelia> rakudo-moar 17db5c: OUTPUT«｢abc｣␤␤»

[13:11] <jnthn> ;)

[13:11] *** kaare_ left
[13:12] <FROGGS> jnthn: btw, we could take a look at your USAGE thingy again when you've time

[13:15] <jnthn> FROGGS: Did you manage to reproduce it at all?

[13:16] <FROGGS> jnthn: no, that's the point :/

[13:16] <jnthn> urgh

[13:16] <FROGGS> I see that 'print' is pretty expensive on windows but that's kinda expected

[13:16] <jnthn> Let me grab latest and produce another profile, then upload it, then at least we can check it's not just me misreading something...

[13:17] <timotimo> yeah, it has to go through the spoon or what it's called

[13:17] <FROGGS> (given the suckiness of cmd.exe)

[13:17] <timotimo> and then through a parallel port cable

[13:17] <jnthn> There Is No Spoon :P

[13:17] <timotimo> what if LPT1 isn't even connected?

[13:17] <timotimo> you can't detect that!

[13:17] <FROGGS> well, *I* can, at least locally

[13:18] <FROGGS> jnthn: that's my profile: http://froggs.de/perl6/rcff-windows.html

[13:18] <jnthn> Yeah, I saw that one

[13:18] <jnthn> oh wait, I have your other one open

[13:18] *** atroxaper left
[13:19] <FROGGS> that one is the only profile on windows I've shared

[13:19] <jnthn> yeah, it musta been a non-Windows one then

[13:20] <gtodd> FROGGS: re: "Memory allocation failed; could not allocate 32 bytes"   I though I got that error with panda only ... but it has disappeared again mysteriously  maybe it's hardware or sunspots

[13:20] <jnthn> Of course, it's taking ages to load, because first we need to make sure it doesn't talk about falun gong, hong kong democracy, and so forth... :/

[13:21] <timotimo> ;(

[13:21] <jnthn> 2 days until I have non-stupid Internet again :)

[13:21] <gtodd> m: $_ = "python3"; tr/python3/ perl6/; .say;

[13:21] <camelia> rakudo-moar 17db5c: OUTPUT« perl6 ␤»

[13:21] <FROGGS> gtodd: ohh, that might be a more general issue (on your box) rather then a problem in v5's grammar

[13:21] <gtodd> m: my $coding = "python3"; $coding.=trans(python3 => perl6); $coding.say ;

[13:21] <camelia> rakudo-moar 17db5c: OUTPUT«===SORRY!=== Error while compiling /tmp/3zdIi4vUcI␤Undeclared routine:␤    perl6 used at line 1␤␤»

[13:22] <FROGGS> gtodd: nice try :o)

[13:22] <gtodd> can we use tr/// on lexicals ?

[13:22] <gtodd> m: my $coding = "python3"; $coding.=trans("python3" =>" perl6"); $coding.say ;

[13:22] <camelia> rakudo-moar 17db5c: OUTPUT« perl6 ␤»

[13:22] <FROGGS> m: my $c = "python3"; $c ~~ tr/python3/ perl6/; $c.say;

[13:22] <camelia> rakudo-moar 17db5c: OUTPUT« perl6 ␤»

[13:23] <timotimo> m: say " perl6".chars; say "python3".chars

[13:23] <camelia> rakudo-moar 17db5c: OUTPUT«6␤7␤»

[13:23] <FROGGS> m: my $c = "python3"; say $c ~~ tr/python3/ perl6/;

[13:23] <camelia> rakudo-moar 17db5c: OUTPUT«StrDistance.new(before => "python3", after => " perl6 ")␤»

[13:23] <gtodd> ah ok 

[13:23] <timotimo> m: my $a = "abcdefghijklmnop"; $a ~~ tr/abcdefgh/1234/; say $a

[13:23] <camelia> rakudo-moar 17db5c: OUTPUT«12341234ijklmnop␤»

[13:23] <timotimo> that's why it puts a space there

[13:23] <grondilu> m: my num $ = 1.Num;  # this works

[13:23] <camelia> rakudo-moar 17db5c: ( no output )

[13:23] <grondilu> m: my num @ = 1.Num;  # this doesn't?

[13:23] <camelia> rakudo-moar 17db5c: OUTPUT«Cannot modify an immutable Num␤  in block <unit> at /tmp/k1ZEvlSnCn:1␤␤»

[13:24] <gtodd> m: my $coding = "python3"; $coding.= tr/python3/ perl6/ ; $coding.say ;

[13:24] <camelia> rakudo-moar 17db5c: OUTPUT«===SORRY!=== Error while compiling /tmp/cEE7Fv0uNP␤Bogus statement␤at /tmp/cEE7Fv0uNP:1␤------> "python3"; $coding.= tr/python3/ perl6/ ⏏; $coding.say ;␤    expecting any of:␤        argument list␤        …»

[13:24] <gtodd> oops

[13:24] <gtodd> ok ~~

[13:25] <FROGGS> .= is for methods

[13:25] <jnthn> FROGGS: Did you do 10 iterations or 5?

[13:25] <FROGGS> jnthn: 5

[13:25] <jnthn> FROGGS: Even if your one, 10.46% is spent in gen-usage

[13:25] * grondilu thinks there is "trans" for a method version of "tr"

[13:25] <jnthn> (in

[13:26] <jnthn> FROGGS: Maybe not in it directly, but in things it does

[13:26] <timotimo> gtodd: did you see what i ran up there?

[13:26] <FROGGS> jnthn: where do I have to look?

[13:26] <gtodd> yeah ... 

[13:26] <timotimo> :)

[13:26] <grondilu> m: say "foo".trans: /foo/ => "bar"

[13:26] <camelia> rakudo-moar 17db5c: OUTPUT«bar␤»

[13:26] <jnthn> FROGGS: On routines tab on the one you just linked me, search for gen-usage

[13:26] <FROGGS> ohh

[13:26] * FROGGS facepalm

[13:27] <jnthn> m)

[13:27] <FROGGS> well, perhaps it makes sense to read it that way :o)

[13:27] <gtodd> timotimo: so far I'm think p6's tr/// is smarter than perl5 tr// but you have to use ~~

[13:27] <timotimo> if you tr without ~~, it'll just apply to $_

[13:27] <jnthn> FROGGS: Inclusive means "time spent between entering gen-usage and leaving gen-usage, including the things it calls"

[13:28] <FROGGS> jnthn: yeah, I understand now

[13:28] <gtodd> I'm also thinking  p6 is like crack ....

[13:28] <jnthn> I note that strip_path_prefi, right below it, is 10.29%

[13:28] <FROGGS> jnthn: I'll have a look at that this evening

[13:28] <timotimo> but crack is bad

[13:28] <jnthn> And the call graph shows that gen-usage calls that

[13:28] <gtodd> ok "crack" is the wrong word ....  "kale" once you start using it it's hard to not have it with every meal

[13:29] <jnthn> FROGGS: OK, cool. So do you need me to upload my one? :)

[13:29] <timotimo> i don't know what kale is :S

[13:29] <FROGGS> jnthn: no, thanks :o)

[13:29] <jnthn> timotimo: Maybe it's a word for beer in some language... :)

[13:29] <timotimo> hah :D

[13:29] <gtodd> it's like arugula salad .. hard to eat iceberg lettuce after that :-)

[13:30] <timotimo> a friend let me try a "creamy root beer" thingie ...

[13:30] <timotimo> like, imported from the americas

[13:30] <timotimo> it tasted like mouthwater

[13:30] <timotimo> he left it here, because he didn't want it

[13:30] <timotimo> i don't want to finish it, either

[13:30] <gtodd> heheh

[13:31] <timotimo> "blue sky natural soda"

[13:31] <timotimo> "made with real sugar"

[13:31] <gtodd> ?

[13:31] <gtodd> heh

[13:31] <timotimo> "creamy root beer"

[13:32] * gtodd searched for p6's tr/// docs .... 

[13:32] <gtodd> really I did 

[13:32] <timotimo> for many things there's not really docs ... but the specs are always there :\

[13:33] <gtodd> http://perl6advent.wordpress.com/2010/12/21/day-21-transliteration-and-beyond/  did not have the bit about tr/// hmm could add it there as a comment :-D

[13:34] <jnthn> timotimo: That sounds...no like beer :P

[13:34] <jnthn> *not

[13:34] <timotimo> yeah, i don't consider this beer at all

[13:36] <gtodd> would be nice to have a bot we could tell to set aside the above $X lines somewhere as possible rough docs  ....  or maybe use yoleaux .tell docmunger to write a paragraph using the above 10 lines"  ...

[13:37] <timotimo> teh what now?

[13:37] <gtodd> haha

[13:37] <FROGGS> a bot taking the irc logs and stick it in the docs?

[13:37] <FROGGS> O.o

[13:38] <timotimo> oh?

[13:38] <timotimo> well, that won't really give a prose-like kind of thing

[13:38] <gtodd> heheh  not official docs ... I often find stuff in the irc logs that is helpful  ... 

[13:38] <timotimo> it should instead generate a markov chain from the lines

[13:38] <timotimo> and generate a book and sell it on amazon based on that

[13:38] <gtodd> hahaha

[13:38] <gtodd> $kaching!

[13:39] <moritz> hey, I have the data already

[13:39] <FROGGS> let's sell moritz for $$$!! /o/

[13:40] <FROGGS> :P

[13:40] <timotimo> don't sell the cow if you can still milk it!

[13:40] <FROGGS> ohh, very true

[13:40] <gtodd> heheh ...  #perl has GumbyBrain ... who I'm sure is very wealthy :-)

[13:42] <gtodd> I was just cutting and pasting stuff into a text file when an example explanation was helpful and memorable and using POD markup to make it "grepable"

[13:43] <gtodd> it worked great until I lost that disk :-)

[13:45] <FROGGS> :o)

[13:45] <gtodd> and there's something beautiful about using bots in clouds for niceness  instead of evil

[13:46] <gtodd> bots  have a bad rep in the "mainsteam media"  ...  :)

[13:47] <moritz> hugme: hug mainstream

[13:47] * hugme hugs mainstream

[13:48] <timotimo> hugme: hug hug

[13:48] * hugme hugs hug

[13:48] <timotimo> hugme: hug hugs

[13:48] * hugme hugs hugs

[13:50] <PerlJam> "mainstream media" is stupid too.

[13:51] <PerlJam> I heard the term "hackathon" in a TV show last night, but it was being used as something that "evil hackers" do

[13:51] <timotimo> wat ... srsly?

[13:51] <timotimo> there was this time when fox news (or something similar) reported about github

[13:52] <FROGGS> I guess these hackers wired their own telephone line to their line-out or something...

[13:52] <lizmat> those commie programmers!

[13:53] *** kaleem left
[13:53] *** raiph joined
[13:53] *** rindolf left
[13:55] <dalek> rakudo/nom: 1f4ca04 | (Tobias Leich)++ | src/core/CompUnit (2 files):

[13:55] <dalek> rakudo/nom: stringify CU candidates that can become $?FILES

[13:55] <dalek> rakudo/nom: 

[13:55] <dalek> rakudo/nom: When we let slip an IO::Path into $?FILES the Label.new code will explode. Beware.

[13:55] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1f4ca0458d

[13:55] <FROGGS> uh, lizmat++

[13:57] <Woodi> hi today :)

[13:57] <raiph> gtodd: vaguely similar idea: https://questhub.io/realm/perl/quest/53516384bbd0beef19000022

[13:58] <lizmat> any Cygwin people here?  would C:\\foo be a path that you could get on Cygwin ?

[13:58] <FROGGS> hi Woodi 

[13:59] <lizmat> I *thought* it hid all of that in a unix-like access to filesystems ?

[13:59] <colomon> lizmat: I think it's spelled something like /cygwin/C/foo there

[13:59] <FROGGS> lizmat: I deleted my cygwin like four hours ago :o(

[13:59] *** atroxaper joined
[13:59] *** rindolf joined
[13:59] <colomon> sorry, /cygdrive/C

[14:00] * colomon isn't sure how old the cygwin on his Windows Vista box is, though...

[14:00] <lizmat> so a test like "my $path = IO::Path::Cygwin.new('C:foo\\\\bar\\');" is bogus

[14:01] <colomon> well, I suppose IO::Path::Cygwin might be smart enough to translate

[14:01] <colomon> but 

[14:01] <colomon> ls C:

[14:01] <lizmat> it isn't

[14:01] <lizmat> hence my question...  :-)

[14:01] <colomon> ls: cannot access C:: No such file or directory

[14:02] <lizmat> colomon++  thanks for the reality check

[14:02] <colomon> lizmat: aren't you defining it right now?  :)

[14:02] <Woodi> I'm thinking and thinking and I think that "mainstream media" don't know what 'bots' are... droids, drones, viruses @ Co, yes...  but if "gamers media" counts as mainstream then yes :)  or maybe I lack some references... or we talking about is shadow-o-bot-net ? :)

[14:02] <lizmat> colomon: well, I'm trying to get the code to be like the spec

[14:02] <lizmat> and suddenly tests start to fail  :-)

[14:02] <colomon> lizmat: and you're rewriting the spec, no?  :)

[14:03] <lizmat> well, I would say generalizing

[14:03] <lizmat> on the outside not a lot would change

[14:03] <lizmat> API's mostly stay the same

[14:03] <lizmat> "foo".IO.e still works  :-)

[14:04] <gtodd> raiph: nice :-)

[14:04] <lizmat> even though underneath it creates an IO::Path rather than an IO::Handle

[14:04] <lizmat> "bar".IO.lines still works, and even closes the handle  :-)

[14:09] *** prevost left
[14:20] *** mberends left
[14:21] *** anaeem1 joined
[14:27] *** Guest33157 left
[14:30] *** kaare_ joined
[14:30] *** zoosha_ left
[14:30] <Woodi> lizmat: I think that IO::Path things are word-y, ppls probably will just want to have: open("/some/string"), etc., something that just work...

[14:31] <lizmat> Woodi: don't despair, open() will continue to work

[14:32] *** kaleem joined
[14:33] <Woodi> lizmat: it is not despair :) just lazines, maybe not good one but kind of natural, IMO

[14:35] *** H2O1 joined
[14:35] <lizmat> we'll cater for the lazy ones as well  :-)

[14:36] *** H2O1 left
[14:36] <Woodi> btw. I managed to upload redis corrections to github, hope they are "corrections" ;)  https://github.com/slunski/perl6-redis.git

[14:36] *** bowtie joined
[14:36] *** bowtie is now known as Guest71734

[14:36] <Woodi> lizmat: probably I just lazy and don't know current API in spec :) I will check it before talkoing more...

[14:37] <hoelzro> o/ perl6

[14:38] <lizmat> hoelzro o\

[14:40] *** rindolf left
[14:42] *** rindolf joined
[14:47] *** kaleem left
[14:49] <dalek> rakudo/nom: a6af28f | (Elizabeth Mattijsen)++ | src/core/IO/Spec/ (3 files):

[14:49] <dalek> rakudo/nom: Use "dirname" instead of "directory"

[14:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a6af28f101

[14:49] <dalek> rakudo/nom: 4191d07 | (Elizabeth Mattijsen)++ | src/core/IO/ (3 files):

[14:49] <dalek> rakudo/nom: Implement IO::Spec.dirname (instead of .directory)

[14:49] <dalek> rakudo/nom: 

[14:49] <dalek> rakudo/nom: .directory will still work, but is deprecated

[14:49] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4191d078e0

[14:50] <FROGGS> lizmat++

[14:50] *** Hor|zon joined
[14:51] <dalek> roast: a0bf974 | (Elizabeth Mattijsen)++ | S32-io/io-spec- (3 files):

[14:51] <dalek> roast: Bring IO::Spec tests up to spec wrt 'dirname'

[14:51] <dalek> roast: review: https://github.com/perl6/roast/commit/a0bf974ed7

[15:02] <dalek> specs: c4a4fc1 | (Elizabeth Mattijsen)++ | S32-setting-library/IO.pod:

[15:02] <dalek> specs: Some more s/directory/dirname/

[15:02] <dalek> specs: review: https://github.com/perl6/specs/commit/c4a4fc1d07

[15:02] <dalek> specs: a8dd445 | (Elizabeth Mattijsen)++ | S32-setting-library/IO.pod:

[15:02] <dalek> specs: Add paragraph about IO::Path subclasses

[15:02] <dalek> specs: review: https://github.com/perl6/specs/commit/a8dd44580d

[15:05] *** zoosha joined
[15:10] *** Hor|zon left
[15:16] *** Guest71734 left
[15:16] *** bowtie_ joined
[15:16] *** jerrycheung joined
[15:17] *** jerrycheung left
[15:18] *** Hor|zon joined
[15:24] *** Hor|zon left
[15:25] *** Hor|zon joined
[15:27] *** brrt left
[15:30] *** denis_boyun left
[15:31] * gtodd is a bit slow ... 

[15:32] <dalek> rakudo/nom: 658409a | (Tobias Leich)++ | src/core/Main.pm:

[15:32] <dalek> rakudo/nom: optimize $?USAGE

[15:32] <dalek> rakudo/nom: 

[15:32] <dalek> rakudo/nom: We only generate the USAGE message in case we need it, and then the new code only

[15:32] <dalek> rakudo/nom: takes .13s where the old code took .75s (on windows)

[15:32] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/658409a7e8

[15:33] *** bowtie_ left
[15:34] *** bowtie joined
[15:35] *** bowtie is now known as Guest25531

[15:35] *** zakharyas left
[15:35] <gtodd> when we do this -->  my $code = "perl5"; say $code ~~ tr/perl5/perl6/;  (i.e. the ~~ with tr/// instead of the method .trans)  is that using the "infix ~~ " ... i.e. is it the smart match in another guise ?? 

[15:35] <gtodd> since smartmatch ~~ aliases stuff to $_ and checks  ACCEPT(S_) etc etc

[15:35] *** raiph left
[15:36] *** ecocode left
[15:39] *** FROGGS left
[15:40] *** ghostlines left
[15:43] *** Guest25531 left
[15:45] *** bowtie_ joined
[15:48] <gtodd> errm ACCEPTS($_)

[15:50] *** Hor|zon left
[15:53] *** jerrycheung joined
[15:54] *** FROGGS joined
[15:54] *** jerrycheung left
[15:54] *** bowtie_ left
[15:55] *** bowtie_ joined
[15:57] *** yeahnoob left
[16:00] *** psch joined
[16:02] <psch> gtodd: saw your question in the clog.  in nom $ ~~ tr/// currently doesn't call .ACCEPTS, because StrDistance doesn't implement an ACCEPTS method yet.

[16:02] <psch> m: StrDistance.^methods.say

[16:02] <camelia> rakudo-moar 4191d0: OUTPUT«Bool Numeric Int <anon> <anon>␤»

[16:03] <psch> i have opened a PR, but iirc it hasn't been discussed yet, probably because i didn't ask anyone to look at it :)

[16:04] <psch> gtodd: basically, .ACCEPTS is for creating the boolean value that &infix:<~~> returns, afaiu.  $ ~~ s/// and $ ~~ tr/// currently are both special-cased.

[16:06] <psch> gtodd: https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Actions.nqp#L4925 in case you haven't found it yet.

[16:06] *** rindolf left
[16:07] *** bowtie_ left
[16:10] *** bowtie_ joined
[16:14] *** bowtie_ left
[16:15] <psch> m: $_ = "abc"; say so s:g/x/u/; 

[16:16] *** anaeem1 left
[16:16] *** Hor|zon joined
[16:16] *** anaeem1_ joined
[16:16] <gtodd> psch: thanks

[16:16] <camelia> rakudo-moar 4191d0: OUTPUT«(timeout)»

[16:17] *** anaeem1_ left
[16:19] *** bowtie_ joined
[16:20] *** atroxaper left
[16:21] *** atroxaper joined
[16:21] <gtodd> camelia: say "hi" unless 0;  # :-D

[16:22] <gtodd> ... camelia is cocooning again 

[16:25] <gtodd> RT #122810

[16:25] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=122810

[16:26] *** atroxaper left
[16:26] <gtodd> that reminds me ... I opened that PR ... then wrote a test (probably wrong or unecessary) and committed it to roast somewhere

[16:26] <gtodd> and then closed the PR

[16:26] *** bowtie_ left
[16:27] <gtodd> the test then disappeared from current roast or was moved/edited - it was written in a way that encouraged editing :)

[16:28] <gtodd> I really only wrote the test because jnthn fixed the issue but said  tests are preferred for closing PRs :-|

[16:32] *** Mso150 joined
[16:32] *** bowtie joined
[16:33] *** bowtie is now known as Guest75651

[16:33] <gtodd> (and to learn a bit about the bug->PR->test workflow) ... anyway, I left the bug closed since TTTT I wasn't sure where or if it belonged  - it seemed more MoarVMish maybe I should stick a link to it in Moar's github issues

[16:35] <[Coke]> there isn't a hard policy, but rakudo-moar bugs probably still belong in RT, but you -could- bug them in MoarVM/MoarVM on github...

[16:35] <[Coke]> I imagine the latter as "bugs in the VM". ... of course, there is no standalone VM stuff, it's all through perl.

[16:39] *** virtualsue left
[16:40] *** Guest75651 left
[16:40] *** bowtie_ joined
[16:45] *** firefish5000 joined
[16:47] *** bowtie_ left
[16:47] *** anaeem1 joined
[16:53] *** bowtie_ joined
[16:54] *** jack_rabbit joined
[16:55] *** Hor|zon left
[16:56] *** dakkar left
[16:58] *** Hor|zon joined
[17:07] *** gfldex joined
[17:15] <pmichaud> good morning, #perl6

[17:15] <FROGGS> hi pmichaud!

[17:16] <tony-o> FROGGS: did removing the .dylib|.so in DBIish Pg work in linux?  

[17:16] <FROGGS> tony-o: yes

[17:18] <vendethiel> o/, #perl6

[17:18] <colomon> \o

[17:21] <lizmat> pmichaud o/

[17:22] *** atroxaper joined
[17:25] <timotimo> o/ pmichaud 

[17:27] *** atroxaper left
[17:28] *** spider-mario joined
[17:33] *** leont left
[17:36] *** bowtie_ left
[17:38] *** erkan left
[17:39] *** pecastro left
[17:39] *** bowtie joined
[17:39] *** bowtie is now known as Guest2662

[17:39] *** erkan joined
[17:42] *** mberends joined
[17:50] *** Guest2662 left
[17:50] *** bowtie_ joined
[17:52] *** araujo left
[17:57] *** anaeem1 left
[18:00] *** virtualsue joined
[18:01] *** Ven joined
[18:02] *** anaeem1_ joined
[18:07] *** anaeem1_ left
[18:08] *** Hor|zon left
[18:17] <lizmat> I have a giant commit that is getting larger and larger, but which isn't spectest clean

[18:18] <lizmat> but I'd like to get it out there to more quickly find out if I'm breaking other stuff as well

[18:19] <lizmat> should I commit to nom or not?

[18:19] <lizmat> putting in a branch is not really a fix either...  

[18:20] <lizmat> opinions anyone?

[18:25] <FROGGS> branch

[18:26] <[Coke]> pmichaud: hio.

[18:29] <PerlJam> lizmat: if you want people to try it but are concerned about breaking stuff, a branch sounds like the right thing.  (You just have to "advertise" the branch a little bit)

[18:34] *** renormalist left
[18:35] <dalek> panda/CPAN: 407089a | (Tobias Leich)++ | ext/HTTP__UserAgent:

[18:35] <dalek> panda/CPAN: updated HTTP::UserAgent

[18:35] <dalek> panda/CPAN: review: https://github.com/tadzik/panda/commit/407089a2f6

[18:36] *** Ven left
[18:36] <FROGGS> lizmat: to let travis build it you would need to call it smoke-me-foobar

[18:37] <lizmat> well, I know it builds  :-)

[18:37] <lizmat> well, on moar  :-)

[18:37] <FROGGS> on your box ... :o)

[18:37] <lizmat> true

[18:37] *** H2O1 joined
[18:37] <FROGGS> how big is the spectest impact? would you be able to fix All The Things in a reasonable timeframe?

[18:38] <lizmat> matter of days max

[18:38] <FROGGS> that really sounds like a branch would be the best

[18:39] <[Coke]> please no one ever intentionally break spectest for days.

[18:39] <lizmat> okokokok  :-)

[18:39] <[Coke]> I will allow "inadvertently for one commit" but not much more. :P

[18:39] * colomon has been trying to be good with his latest roast commits…

[18:40] *** H2O1 left
[18:40] *** Ven joined
[18:40] *** psch left
[18:47] <dalek> panda/CPAN: 548a938 | (Tobias Leich)++ | lib/Panda/Fetcher.pm:

[18:47] <dalek> panda/CPAN: use UA.get instead of getstore() for binary data

[18:47] <dalek> panda/CPAN: 

[18:47] <dalek> panda/CPAN: getstore() is meant to work for text, so is not ideal for fetching .gz files

[18:47] <dalek> panda/CPAN: review: https://github.com/tadzik/panda/commit/548a938c29

[18:48] *** anaeem1 joined
[18:48] *** telex left
[18:48] <PerlJam> why does getstore care about the disposition of the data it's downloading and writing to a file?

[18:49] <FROGGS> that works again now: panda --cpan --github search native # https://gist.github.com/FROGGS/4e97e0d8db94df7b3713

[18:50] *** renormalist joined
[18:50] <FROGGS> PerlJam: I dunno

[18:50] *** telex joined
[18:52] <FROGGS> I'm going to work on `panda --cpan install NativeCall` now, which requires a working gzslurp.... we'll see

[18:53] *** anaeem1 left
[18:59] <vendethiel> FROGGS++ :-)

[18:59] <FROGGS> :o)

[19:00] * vendethiel made a list of everything he still wants to talk about the learnxiny, and now thinks about doing a perl6 talk about those instead

[19:00] <FROGGS> yeah, sounds good

[19:02] *** brrt joined
[19:03] *** Mso150_g joined
[19:03] *** Mso150 left
[19:06] *** darutoko- left
[19:06] *** ivanshmakov joined
[19:09] *** denis_boyun_ joined
[19:11] *** bartolin joined
[19:20] *** beastd joined
[19:25] <gtodd> FROGGS: does panda self update a la cpanm ?

[19:26] <gtodd> I use rebootstrap.pl

[19:26] <gtodd> but if there is a better way ...

[19:27] <FROGGS> you can install panda via panda, yes, that should work

[19:27] <gtodd> :)

[19:28] <FROGGS> yeah, panda works quite well fortunately :o)

[19:30] <gtodd> I don't see the --cpan --github switches so I should update :)

[19:30] <dalek> rakudo/nom: fb6a7ba | usev6++ | src/core/ (3 files):

[19:30] <dalek> rakudo/nom: Extend DISTRO and KERNEL for OpenBSD and NetBSD

[19:30] <dalek> rakudo/nom: (and some aspects of FreeBSD)

[19:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fb6a7baefe

[19:30] <dalek> rakudo/nom: 264eafb | (Tobias Leich)++ | src/core/ (3 files):

[19:30] <dalek> rakudo/nom: Merge pull request #314 from usev6/nom

[19:30] <dalek> rakudo/nom: 

[19:30] <dalek> rakudo/nom: Extend DISTRO and KERNEL for OpenBSD and NetBSD

[19:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/264eafb426

[19:32] <gtodd> vendethiel:  for no good reason I'm trying to make the learnxiny code samples into a perl6 script I can exec to produce errm the html page ... :-P not quite literate programming yet but I'm getting there !

[19:34] <vendethiel> gtodd: how, good luck :)

[19:40] <[Coke]> is perl6-bench reporting on rakudo-jvm?

[19:40] <nine> I guess we care about compatibility to Windows, don't we?

[19:40] <[Coke]> (any slowdowns lately?)

[19:40] <[Coke]> nine: yes.

[19:40] <nine> darn

[19:41] <[Coke]> (assuming you mean "run on windows")

[19:41] <nine> So what do I do if I need unistd.h in p5helper.c to get the environ variable to pass to PERL_SYS_INIT3?

[19:42] <moritz> nine: do you need to do that? or is it enough to call PERL_SYS_INIT without the env?

[19:43] <moritz> also, perlembed has this example:

[19:43] <moritz>      int main(int argc, char **argv, char **env)

[19:43] <moritz>      {

[19:43] <moritz>             PERL_SYS_INIT3(&argc,&argv,&env);

[19:43] <nine> moritz: currently I pass NULL for argv and env, but carlin++ found that this breaks on openBSD

[19:44] <nine> Better question: is there a way to get at argc, argv and env?

[19:44] <moritz> nine: yes, but PERL_SYS_INIT (no trailing 3) doesn't need an env

[19:44] <moritz> also, that perlembed example suggest that you might get get env from the signature of main

[19:44] <FROGGS> nine: look at how it is solved in MoarVM

[19:44] <moritz> no idea how portable that is

[19:45] *** Psyche^ joined
[19:46] <nine> oh, I didn't know there was a PERL_SYS_INIT without the 3. perlembed doesn't mention it, but perlapi does and it has exactly the same description as the other version

[19:48] <moritz> I left a comment on the commit in carlin's pull request

[19:49] *** Psyche^_ left
[19:50] <nine> Seems like %ENV works just fine in P5 with PERL_SYS_INIT

[19:50] *** bowtie_ left
[19:50] <moritz> p5 probably knows how to access the ENV :-)

[19:51] <nine> Also I guess it would be more safe to make argc and argv global variables. Who knows what PERL_SYS_INIT does with those pointers...

[19:53] * [Coke] has an Albany.pm meeting tonight.

[19:53] *** bowtie joined
[19:53] *** bowtie is now known as Guest23430

[19:54] <[Coke]> https://github.com/japhb/perl6-bench is just source, yes? do we have pretty pictures hosted?

[19:55] <[Coke]> japhb: is "./bench quickstart" expected to work with an $http_proxy set?

[19:55] *** avuserow left
[19:58] <dalek> panda/CPAN: 30e2a79 | (Tobias Leich)++ | ext/Archive__Tar/lib/Archive/Tar (2 files):

[19:58] <dalek> panda/CPAN: unbreak Arhive::Tar

[19:58] <dalek> panda/CPAN: review: https://github.com/tadzik/panda/commit/30e2a79b44

[19:58] <dalek> panda/CPAN: 0f57540 | (Tobias Leich)++ | lib/Panda/Fetcher.pm:

[19:58] <dalek> panda/CPAN: remove debug output

[19:58] <dalek> panda/CPAN: review: https://github.com/tadzik/panda/commit/0f57540396

[20:00] <FROGGS> it almost seems as if one could install stuff from CPAN now O.o

[20:01] *** araujo joined
[20:01] *** araujo left
[20:01] *** araujo joined
[20:01] <nine> Interesting: the only platform where PERL_SYS_INIT3 actually does anything with env is OS2. All other platforms map directly to PERL_SYS_INIT (which uses argc, argv for checking for taint mode)

[20:01] *** avuserow joined
[20:02] *** kjs_ joined
[20:04] <[Coke]> the jvm run is usually done hours ago. it's on S12.

[20:04] *** Hor|zon joined
[20:05] <dalek> Inline-Perl5: fd041ae | Carlin++ | p5helper.c:

[20:05] <dalek> Inline-Perl5: Fix segv calling Perl_sys_init3 on some platforms

[20:05] <dalek> Inline-Perl5: 

[20:05] <dalek> Inline-Perl5: eg. OpenBSD

[20:05] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/fd041ae66f

[20:05] <dalek> Inline-Perl5: 18877ee | Carlin++ | p5helper.c:

[20:05] <dalek> Inline-Perl5: do not pass env parameter

[20:05] <dalek> Inline-Perl5: 

[20:05] <dalek> Inline-Perl5: per suggestion by moritz++

[20:05] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/18877eed10

[20:05] <dalek> Inline-Perl5: 37ce3ad | niner++ | p5helper.c:

[20:05] <dalek> Inline-Perl5: Merge pull request #7 from carbin/stop-segv-on-obsd

[20:05] <dalek> Inline-Perl5: 

[20:06] <dalek> Inline-Perl5: Fix segv calling Perl_sys_init3 on some platforms

[20:06] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/37ce3addd9

[20:09] <nine> carlin: from reading the P5 source code, I'd say it's not dependend on platform but if perl is compiled with its own malloc or not. But many thanks for fixing my bug :)

[20:09] *** Hor|zon left
[20:10] *** rmgk_ joined
[20:10] *** rmgk is now known as Guest26726

[20:10] *** Guest26726 left
[20:10] *** rmgk_ is now known as rmgk

[20:12] *** gfldex left
[20:15] <carlin> nine: ah, that would explain it

[20:16] *** ggoebel111117 left
[20:21] *** Mso150_g left
[20:22] *** Hor|zon joined
[20:23] *** immortal joined
[20:24] *** [Sno] joined
[20:26] *** erkan left
[20:27] *** Hor|zon left
[20:29] *** kaare_ left
[20:31] *** FROGGS left
[20:35] *** erkan joined
[20:37] *** immortal left
[20:38] *** wk joined
[20:40] <wk> Hi!

[20:40] <wk> What happened with :replace argument to the .pick?

[20:41] <wk> .pick docs does not mention it (http://doc.perl6.org/routine/pick)

[20:41] <yoleaux> wk: You must provide at least two options.

[20:41] <colomon> wk: I believe that's now the .roll method

[20:42] <colomon> m: say (1..10).pick(20)

[20:42] *** zeropool joined
[20:42] <wk> and i tried (1..6).pick(10, :replace);

[20:42] <camelia> rakudo-moar 658409: OUTPUT«8 1 4 6 5 10 2 3 7 9␤»

[20:42] <colomon> m: say (1..10).roll(20)

[20:42] <camelia> rakudo-moar 658409: OUTPUT«7 2 5 5 6 5 2 5 10 8 6 9 9 7 5 7 4 2 3 9␤»

[20:42] <wk> got just 6 

[20:42] <wk> colomon: ok, i'll look for it

[20:42] <colomon> right, :replace is gone.

[20:43] *** prevost joined
[20:43] <wk> colomon: did not found any indication for that, just that .grab does not have it anymore

[20:44] <colomon> wk: where are you looking?

[20:46] <wk> colomon: googled for "perl6 pick replace", got only results telling it should work 

[20:46] *** molaf joined
[20:47] <bartolin> speaking of .pick: The following happened on a netbsd box:

[20:47] <bartolin> perl6-p -e 'say (1..2).roll(20)'

[20:47] <bartolin> 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

[20:47] <bartolin> (could be 2 2 2 ... as well)

[20:48] <bartolin> with (1..3) it looks better:

[20:48] <bartolin> 2 2 1 3 1 3 1 1 3 3 2 1 3 1 1 3 2 3 2 3

[20:48] <carlin> bartolin: the BSDs have a broken rand() implementation

[20:48] <carlin> MoarVM uses arc4random() there by default

[20:48] <lizmat> bartolin: probably a rand() issue

[20:48] <carlin> I guess parrot doesn't

[20:48] <lizmat> m: $ perl6 -Mstrict -e1

[20:48] <lizmat> ===SORRY!===

[20:48] <lizmat> Could not find strict in any of:

[20:48] <colomon> wk: huh, when I do that google search, the first result is a spectest which clearly indicates :replace is an error, and the third result is the actual commit to the spec that changed pick :replace to roll.

[20:49] <colomon> the second result is an old blog post which is no longer corrent.  :(

[20:49] <bartolin> Ah! Thanks.

[20:49] <camelia> rakudo-moar 264eaf: OUTPUT«(timeout)»

[20:49] <colomon> not sure if I meant current or correct there….

[20:49] <lizmat> M: class A { has Str $a; $a = "" }  # segfaults for me

[20:50] <lizmat> m: class A { has Str $a; $a = "" } 

[20:50] <camelia> rakudo-moar 264eaf: OUTPUT«(timeout)»

[20:53] *** immortal joined
[20:53] <wk> colomon: thank you for clearing things! have you thoughts, why this functionality was deprecated(moved to roll)?

[20:54] <wk> i got the example from from the same 2009 advent calender

[20:55] *** erkan left
[20:56] <bartolin> carlin: Do you also have an idea why "1**Inf" gives "NaN" on said netbsd box? (happens with Moar and Parrot) Could that also be a OS specific thing?

[20:57] <bartolin> m: say 1**Inf

[20:57] <camelia> rakudo-moar 264eaf: OUTPUT«(timeout)»

[20:57] <carlin> bartolin: no idea, sorry

[20:58] <colomon> wk: discussion is on this day, I think: http://irclog.perlgeek.de/perl6/2010-09-15

[20:58] <bartolin> carlin: Thanks anyway! ;-)

[20:58] <wk> colomon: thank you

[20:59] <colomon> wk: maybe?  That's around the time the change was made, anyway.

[21:00] *** atroxaper joined
[21:01] <carlin> 1**Inf = 1 on Linux, FreeBSD and OpenBSD. NetBSD is the odd-one-out there

[21:03] *** erkan joined
[21:03] *** erkan left
[21:03] *** erkan joined
[21:04] *** spider-mario left
[21:04] *** atroxaper left
[21:05] *** Hor|zon joined
[21:05] <hoelzro> 2014.09 docker image is up on registry.hub.docker.com

[21:05] *** immortal left
[21:05] <wk> colomon: seems right discussion

[21:08] <bartolin> carlin: in 2013-06 someone reported a failing test for 1**Inf == 1 on OpenBSD (RT #85750). But with a current version (5.5) the test runs fine.

[21:08] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=85750

[21:09] *** ab5tract joined
[21:10] *** ggoebel111117 joined
[21:11] *** Hor|zon left
[21:12] <bartolin> hoelzro++ (I played a tiny bit with the 2014.08 image)

[21:12] <colomon> wk: yeah, here's where the discussion starts

[21:12] <colomon> http://irclog.perlgeek.de/perl6/2010-09-15#i_2829483

[21:12] <hoelzro> awesome =)

[21:13] *** kjs_ left
[21:15] *** Ven left
[21:15] <colomon> wk: you can really see the language design process at work.  :)

[21:22] *** molaf left
[21:26] *** beastd left
[21:28] *** lichtkind joined
[21:30] *** bartolin left
[21:34] *** BenGoldberg joined
[21:35] *** lichtkind left
[21:36] <wk> colomon: took about hour to find right term and minutes to implement it ;9

[21:37] *** SamuraiJack_ joined
[21:43] <colomon> wk: :)

[21:46] *** SamuraiJack_ left
[21:50] * TimToady now in Reading, PA

[21:52] *** brrt left
[21:53] <ab5tract> TimToady: what brings you to Pennsylvania?

[21:56] <wk> i am a bit lost in docs.perl6.org, where to look for switch (given/when) syntax, for example?

[21:58] <wk> search does not suggest anything, and browsing did not helped too.

[21:58] *** leont joined
[22:00] <ab5tract> wk: i had luck with google and/or duckduckgo. that syntax has been pretty solid for a while.

[22:02] *** SamuraiJack_ joined
[22:04] <ab5tract> you get to do anything that the smart match operator provides for you, basically

[22:05] <wk> ab5tract: thank you

[22:05] <wk> actually, i had 2 goal:

[22:05] <wk> 1. better understand docs.perl6.org

[22:06] <wk> 2. to have sure, how to use succeed/proceed with when

[22:14] <japhb> botsnack

[22:14] <japhb> Ah, saw a channel highlight, thought someone had tried to reach me

[22:14] * japhb scrolls back ...

[22:15] *** SamuraiJack_ left
[22:16] <TimToady> ab5tract: taking my son's car to him, after he switched jobs from CA to NJ

[22:21] <japhb> [Coke]: Yes, nqp-jvm and rakudo-jvm can be timed by perl6-bench (this is determined by entries in components.json and compilers.pl)

[22:21] <japhb> [Coke]: However, I myself haven't been timing them recently because the brutal startup time makes *-jvm testing REALLY SLOW

[22:22] <japhb> [Coke]: I'm not sure what you mean about the project being "just source" unless you mean "Is there an official awfy clone using perl6-bench?" in which case I'm not aware of any, though timotimo seems to be keeping his up.

[22:23] <timotimo> oh?

[22:23] <timotimo> what am i doing?

[22:24] <ab5tract> TimToady: Road trip!

[22:25] <TimToady> yup, we've been taking all the scenic routes

[22:26] <japhb> timotimo: Keeping your perl6-bench runs posted

[22:27] <carlin> nine: on OpenBSD a sub with an empty return; hangs. p5_av_top_index should be -1 but is 4294967295, something unsigned that should be signed?

[22:28] <japhb> [Coke]: It looks like two https URLs slipped into components.json; I'll have to fix that.  http_proxy shouldn'e be involved at all normally.

[22:29] *** anaeem1_ joined
[22:29] *** anaeem1_ left
[22:30] <ab5tract> TimToady: I grew up in southeast PA, which is why I got curious.

[22:31] <TimToady> on my 60th birthday, I hit my 50th state

[22:31] <TimToady> obviously I'm missing ten years somewhere...

[22:32] <timotimo> japhb: aye, i'm posting them semi-regularly

[22:32] <timotimo> i should probably build a small perl6 script that keeps my benchmark files synced and generates a pretty index.html from it

[22:37] <ab5tract> which state was your 50th, TimToady?

[22:37] <TimToady> Alabama, on the Natchez Trace

[22:39] *** j4jackj joined
[22:39] *** virtualsue left
[22:39] <TimToady> hadn't been in OK, LA, MS, or AL before this trip

[22:39] <TimToady> or AR

[22:39] *** j4jackj is now known as Guest61593

[22:40] *** zeropool left
[22:40] *** bjz left
[22:41] *** Guest61593 is now known as j4jackj

[22:42] <carlin> .tell nine on OpenBSD a sub with an empty return; hangs. p5_av_top_index should return -1 with an empty return; but is returning 4294967295. Something somewhere unsigned that should be signed?

[22:42] <yoleaux> carlin: I'll pass your message to nine.

[22:43] <woolfy> TimToady: happy birthday, bit belated, but still, hope it was nice!

[22:44] <[Coke]> japhb: I must use an http proxy. 

[22:44] <[Coke]> (at work)

[22:45] <[Coke]> whether it's https or not

[22:49] *** atroxaper joined
[22:53] <ab5tract> TimToady: nice work! That's a lot of travel

[22:53] <dalek> specs: bbfa780 | (Elizabeth Mattijsen)++ | S32-setting-library/IO.pod:

[22:53] <dalek> specs: IO::Path.absolute takes an optional base parameter

[22:53] <dalek> specs: review: https://github.com/perl6/specs/commit/bbfa780876

[22:53] *** atroxaper left
[22:54] <japhb> timotimo: Yes, up to date benchmark index sounds like a very good idea indeed.

[22:55] <japhb> [Coke]: But you can use git+ssh, yes?

[22:56] <dalek> perl6-bench: 6c0b86e | (Geoffrey Broadwell)++ | components.json:

[22:56] <dalek> perl6-bench: Fix a couple repo URLs that got set to https accidentally

[22:56] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/6c0b86e74f

[22:57] <japhb> timotimo: Is there a p6weekly planned for this week?

[22:58] *** immortal joined
[22:58] <japhb> Yes, belated Happy Birthday, TimToady!  :-)

[23:00] *** erkan left
[23:04] <timotimo> oh 

[23:05] <timotimo> yes, i wanted to do it. then i took a really long nap and went out with friends and forgot all about it >_<

[23:05] <timotimo> i'll drive home soon, which will be the point when i'll be able to put a bit of work into that again

[23:07] *** Hor|zon joined
[23:09] <japhb> Ah, OK.  Excellent.  :-)

[23:12] *** Hor|zon left
[23:14] * lizmat goes to sleep&

[23:16] <[Coke]> f

[23:17] <[Coke]> ww

[23:18] *** rjbs- is now known as rjbs

[23:19] <timotimo> i haven't even started the research phase for the weekly >_<

[23:19] <timotimo> i just wrote a bit of preface text ...

[23:19] <timotimo> anyway, AFK

[23:28] *** denis_boyun_ left
[23:28] <tony-o>    got the orm resizing columns automagically

[23:28] <tony-o> oops

[23:32] *** firnsy left
[23:39] *** firnsy joined
