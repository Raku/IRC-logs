[00:01] <[Coke]> m: say uniname("\xa0");

[00:01] <camelia> rakudo-moar b25b86: OUTPUT«NO-BREAK SPACE␤»

[00:03] *** raiph left
[00:06] <dalek> roast: e1043b1 | coke++ | S02-literals/listquote-whitespace.t:

[00:06] <dalek> roast: Add RT for this issue

[00:06] <dalek> roast: review: https://github.com/perl6/roast/commit/e1043b1e74

[00:17] *** kweetal left
[00:21] <[Coke]> m: sub foo($a, $b); my $siglist = :($a, $b); say foo.signature.perl; say $siglist.perl;

[00:21] <camelia> rakudo-moar b25b86: OUTPUT«===SORRY!=== Error while compiling /tmp/BUQ8FpR0nM␤Missing block␤at /tmp/BUQ8FpR0nM:1␤------> sub foo($a, $b)⏏; my $siglist = :($a, $b); say foo.signa␤    expecting any of:␤        statement list␤        p…»

[00:21] <ggoebel111118> lizmat: will precompiled code support multiple versions of the same *.pm6? If so, are you planning to stuff the version in the path, filename, ...?

[00:22] <[Coke]> m: sub foo($a, $b) {}; my $siglist = :($a, $b); say foo.signature.perl; say $siglist.perl;

[00:22] <camelia> rakudo-moar b25b86: OUTPUT«===SORRY!=== Error while compiling /tmp/OonYvfgZS1␤Calling 'foo' requires arguments (if you meant to operate on $_, please use .foo or use an explicit invocant or argument)␤    Expected: :(Any $a, Any $b)␤at /tmp/OonYvfgZS1:1␤----…»

[00:22] <synopsebot> Link: http://perlcabal.org/syn/S1.html#line_1

[00:23] <[Coke]> m: sub foo($a, $b) {}; my $siglist = :($a, $b); say &foo.signature.perl; say $siglist.perl;

[00:23] <camelia> rakudo-moar b25b86: OUTPUT«:(Any $a, Any $b)␤:($a, $b)␤»

[00:24] <[Coke]> m: my $siglist = :(Any $a); say $siglist.perl;

[00:24] <camelia> rakudo-moar b25b86: OUTPUT«:(Any $a)␤»

[00:25] *** pmurias left
[00:27] *** nbrown left
[00:28] <[Coke]> m: say ....perl;

[00:28] <camelia> rakudo-moar b25b86: OUTPUT«Unhandled exception: Stub code executed␤   at <unknown>:1  (/home/p6eval/rakudo-inst-1/languages/perl6/runtime/CORE.setting.moarvm:throw:4294967295)␤ from src/gen/m-CORE.setting:12866  (/home/p6eval/rakudo-inst-1/languages/perl6/runtime/CORE.setting.mo…»

[00:45] *** hoverboard joined
[00:46] *** hoverboard left
[00:46] *** water joined
[00:46] *** water is now known as hoverboard

[00:53] <dalek> roast: c184227 | coke++ | S02-names-vars/perl.t:

[00:53] <dalek> roast: narrow fudge, add a ticket #

[00:53] <dalek> roast: review: https://github.com/perl6/roast/commit/c184227524

[00:58] *** nbrown joined
[00:59] <zengargoyle> m: sub foo { -> { say "woot" } }; my $f = foo(); $f.();

[00:59] <camelia> rakudo-moar b25b86: OUTPUT«woot␤»

[01:00] *** thou left
[01:00] <zengargoyle> m: sub foo { { say "woot" } }; my $f = foo(); $f.();

[01:00] <camelia> rakudo-moar b25b86: OUTPUT«woot␤Cannot find method 'postcircumfix:<( )>'␤  in block  at /tmp/QE2_omSnJm:1␤␤»

[01:01] <[Coke]> m: say foo().WHAT; my $a; sub foo() { $a++ }

[01:01] <camelia> rakudo-moar b25b86: OUTPUT«(Int)␤»

[01:01] <zengargoyle> another difference between bare { ... } and -> { ... }, bare is subject to immediate execution (or something like that)

[01:01] <[Coke]> m: say foo(); my $a; sub foo() { $a++ }

[01:01] <camelia> rakudo-moar b25b86: OUTPUT«0␤»

[01:01] <[Coke]> m: use Test; nok foo().defined; my $a; sub foo() { $a++ }

[01:01] <camelia> rakudo-moar b25b86: OUTPUT«not ok 1 - ␤»

[01:01] <[Coke]> m: use Test; is foo().defined; my $a; sub foo() { $a++ }

[01:01] <camelia> rakudo-moar b25b86: OUTPUT«Cannot call 'is'; none of these signatures match:␤:($got, $expected, Any $desc = { ... })␤  in sub is at lib/Test.pm:89␤  in block  at /tmp/piPuyFJhMS:1␤␤»

[01:02] <zengargoyle> m: sub foo { return { say "woot" } }; my $f = foo(); $f.();

[01:02] <camelia> rakudo-moar b25b86: OUTPUT«woot␤»

[01:04] *** dayangkun joined
[01:05] *** nbrown left
[01:07] <[Coke]> the nok.*defined tests in S02-names-vars/variables-and-packages.t marked as nom regressions are dodgy.

[01:11] *** thou joined
[01:12] *** Celelibi left
[01:15] *** dayangkun left
[01:16] *** dayangkun joined
[01:16] *** nbrown joined
[01:17] *** Celelibi joined
[01:21] *** nbrown left
[01:22] *** Celelibi left
[01:25] *** aaa joined
[01:25] *** aaa left
[01:28] *** Celelibi joined
[01:32] *** FROGGS_ joined
[01:36] *** FROGGS left
[01:39] *** klapperl_ joined
[01:41] *** gfldex joined
[01:43] *** klapperl left
[01:46] <dalek> perl6-bench: 20a741a | (Geoffrey Broadwell)++ | analyze:

[01:46] <dalek> perl6-bench: Skip noise timings when analyzing

[01:46] <dalek> perl6-bench: 

[01:46] <dalek> perl6-bench: Timing data that is barely above the ignore values (startup and

[01:46] <dalek> perl6-bench: compile times) is essentially noise and leads to junk values on

[01:46] <dalek> perl6-bench: the left side of plots, and more annoyingly, screws up peak rates

[01:46] <dalek> perl6-bench: used in many places.  Just skip these for the greater good.

[01:46] <dalek> perl6-bench: 

[01:46] <dalek> perl6-bench: This has the annoying side effect of making enough of the left

[01:46] <dalek> perl6-bench: side of plots for very fast compilers disappear that there may

[01:46] <dalek> perl6-bench: end up being no vertical alignment at all of the plots of fast

[01:46] <dalek> perl6-bench: and slow compilers, but the trends generally remain clear.

[01:46] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/20a741aa6a

[01:52] *** Celelibi left
[01:55] *** dayangkun left
[01:57] *** dayangkun joined
[01:58] *** dayangkun left
[01:58] *** araujo left
[01:59] *** dayangkun joined
[02:02] *** dayangkun left
[02:03] *** dayangkun joined
[02:09] *** noganex_ joined
[02:12] *** noganex left
[02:15] *** _Slade_ left
[02:23] *** nbrown joined
[02:28] <grondilu> sub foo { $_ }; say foo(4);

[02:28] <grondilu> r: sub foo { $_ }; say foo(4);

[02:28] <camelia> rakudo-{parrot,jvm,moar} b25b86: OUTPUT«===SORRY!=== Error while compiling /tmp/tmpfile␤Calling 'foo' will never work with argument types (int)␤    Expected: :()␤at /tmp/tmpfile:1␤------> sub foo { $_ }; say ⏏foo(4);␤»

[02:29] * grondilu thought that was ok :/

[02:29] <grondilu> eval: sub foo { $_ }; print foo(4);

[02:29] <grondilu> perl5: sub foo { $_ }; print foo(4);

[02:32] *** hoverboard left
[02:32] *** hoverboard joined
[02:33] * grondilu was trying http://rosettacode.org/wiki/Evolutionary_algorithm#Perl_6 and noticed it failed with a weird error message

[02:33] <grondilu> Internal error: zeroed target thread ID in work pass

[02:33] <grondilu> shell returned 17

[02:33] <grondilu> This is perl6 version 2014.06-118-gb25b868 built on MoarVM version 2014.06-63-g0fb638b

[02:35] <grondilu> the error appears undeterministic, though, as the same program is currently running and has not failed again yet

[02:40] *** Akagi201 joined
[02:47] *** nbrown left
[02:50] *** nbrown joined
[02:54] *** dayangkun left
[02:57] *** hoverboard left
[02:58] *** hoverboard joined
[03:08] *** xenoterracide_ joined
[03:08] *** _Slade_ joined
[03:10] *** xenoterracide left
[03:10] *** hoverboard left
[03:11] *** hoverboard joined
[03:16] *** dayangkun joined
[03:16] *** dayangkun left
[03:20] *** grondilu left
[03:21] *** estrabd joined
[03:30] *** nbrown left
[03:33] *** cibs left
[03:35] *** atroxaper joined
[03:45] *** BenGoldberg left
[04:00] *** kaare_ joined
[04:03] *** cibs joined
[04:07] *** anaeem1_ joined
[04:08] *** khisanth_ joined
[04:08] *** Khisanth left
[04:08] *** hoverboard is now known as moistcherry

[04:08] *** raiph joined
[04:11] *** xenoterracide_ left
[04:18] <dalek> ecosystem: da0c574 | (Andrew Egeler)++ | META.list:

[04:18] <dalek> ecosystem: Add Net::AMQP

[04:18] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/da0c574f7e

[04:24] *** atroxaper left
[04:25] *** atroxaper joined
[04:28] *** atroxaper left
[04:29] *** atroxaper joined
[04:31] *** nys left
[04:32] *** raiph left
[04:50] *** kaare_ left
[04:55] *** Akagi201 left
[04:55] *** Akagi201 joined
[04:56] *** atroxaper left
[04:57] *** atroxaper joined
[05:00] *** moistcherry is now known as hoverboard

[05:01] *** atroxaper left
[05:03] <masak> morning, #perl6

[05:04] *** Akagi201_ joined
[05:06] *** Akagi201 left
[05:12] *** kaare_ joined
[05:20] *** raiph joined
[05:46] *** atroxaper joined
[05:48] *** atroxaper left
[05:55] *** atroxaper joined
[06:01] *** atroxaper left
[06:01] *** atroxaper joined
[06:04] *** FROGGS_ left
[06:06] *** atroxaper left
[06:07] *** _Slade_ left
[06:07] <dalek> perl6-bench: 962bb49 | (Geoffrey Broadwell)++ | perl6/parse-json:

[06:07] <dalek> perl6-bench: Revert perl6/parse-json Niecza cross-compat hack that no longer works on Rakudo

[06:07] <dalek> perl6-bench: review: https://github.com/japhb/perl6-bench/commit/962bb49e43

[06:10] *** _Slade_ joined
[06:12] <sergot> morning o/

[06:14] *** _Slade_ left
[06:15] *** virtualsue joined
[06:15] *** _Slade_ joined
[06:19] *** SamuraiJack_ joined
[06:25] *** Isp-sec joined
[06:26] *** thou left
[06:30] *** _Slade_ left
[06:31] *** [Sno] left
[06:32] *** virtualsue left
[06:34] *** atroxaper joined
[06:35] *** atroxaper left
[06:36] *** atroxaper joined
[06:47] *** FROGGS joined
[06:53] *** dayangkun joined
[06:56] *** kweetal joined
[07:05] *** thistusooa joined
[07:05] *** dayangkun left
[07:06] *** raiph left
[07:06] *** zakharyas joined
[07:13] *** atroxaper left
[07:18] *** PotatoGim joined
[07:25] *** atroxaper joined
[07:28] *** dayangkun joined
[07:29] *** atroxaper left
[07:29] *** atroxaper joined
[07:31] *** FROGGS left
[07:33] *** atroxaper left
[07:35] <moritz> we have Net::AMQP for perl6? \o/

[07:39] <moritz> oh, and good morning all

[07:40] <moritz> I want a central place to document our infrastructure

[07:41] <moritz> on which host each service runs, as what user, what steps to do to start them

[07:41] <moritz> does that belong into the 'ecosystem' repo? or a separate 'infrastructure' repo?

[07:43] *** pecastro_ left
[07:48] *** telex left
[07:50] *** telex joined
[07:53] *** dayangkun_ joined
[07:57] *** dayangkun left
[08:00] *** thou joined
[08:03] *** [Sno] joined
[08:03] *** atroxaper joined
[08:03] *** atroxaper left
[08:04] *** atroxaper joined
[08:05] *** thou left
[08:08] *** atroxaper left
[08:10] *** atroxaper joined
[08:13] *** darutoko joined
[08:15] *** hoverboard left
[08:16] *** dmol joined
[08:30] *** dakkar joined
[08:44] *** kaleem joined
[08:47] *** ppabian joined
[08:49] *** thistuso- joined
[08:52] *** thistusooa left
[08:52] *** atroxaper left
[08:53] *** atroxaper joined
[08:56] *** ivanshmakov left
[08:56] *** ivanshmakov joined
[08:56] *** Ulti left
[08:57] *** Ulti joined
[08:57] *** xragnar left
[08:57] *** bowtie left
[08:59] *** xragnar joined
[09:00] *** Rounin left
[09:02] *** moritz left
[09:03] *** Rounin joined
[09:03] *** bowtie joined
[09:04] *** moritz joined
[09:05] *** broquaint left
[09:05] *** broquaint joined
[09:12] *** kurahaupo joined
[09:17] *** fhelmberger joined
[09:17] *** fhelmberger left
[09:17] *** fhelmberger joined
[09:18] <timotimo> japhb: glad to see you work on perl6-bench again nowadays :)

[09:18] <timotimo> to be honest, benchmarking is also much more fun recently than it used to be :)

[09:18] <timotimo> seeing nqp so close to perl5 and in microbenchmarks even surpassing it is a nice touch :)

[09:19] *** virtualsue joined
[09:27] *** lizmat left
[09:27] *** lizmat joined
[09:28] *** fhelmberger_ joined
[09:29] *** nebuchad` joined
[09:30] *** fhelmberger left
[09:30] *** hugme left
[09:31] *** sftp left
[09:31] *** nebuchadnezzar left
[09:31] *** pecastro joined
[09:32] *** hugme joined
[09:32] *** ChanServ sets mode: +v hugme

[09:33] *** sftp joined
[09:39] *** Isp-sec left
[09:47] *** Psyche^_ joined
[09:48] *** thou joined
[09:52] *** Psyche^ left
[09:53] *** thou left
[10:02] *** nebuchad` is now known as nebuchadnezzar

[10:05] *** fhelmberger_ left
[10:05] *** fhelmberger joined
[10:06] *** pdcawley left
[10:08] *** FROGGS joined
[10:10] *** kweetal left
[10:12] *** dayangkun_ left
[10:12] *** pdcawley joined
[10:36] *** ren1us left
[10:37] *** ren1us joined
[10:38] <betterworld> r: ["x".trans(x=>"1"), "x".trans("x"=>"1")]

[10:39] <camelia> rakudo-{parrot,jvm,moar} b25b86: ( no output )

[10:39] <betterworld> why does trans need double quotes to work?

[10:39] <FROGGS> m: say ["x".trans(x=>"1"), "x".trans("x"=>"1")]

[10:39] <camelia> rakudo-moar b25b86: OUTPUT«x 1␤»

[10:39] <betterworld> thank you :)

[10:40] <vendethiel> it's a named parameter in the first case ?

[10:40] <jnthn> In the second case you're passing a named parameter x.

[10:40] *** Ven joined
[10:41] <FROGGS> m: say ["x".trans(x=>"1"), "y".trans(y=>"1")]

[10:41] <camelia> rakudo-moar b25b86: OUTPUT«x y␤»

[10:41] <jnthn> oops, in the *first* csae

[10:41] <jnthn> Rather than a Pair.

[10:41] <vendethiel> m: "x".trans((x => "1")) # this is really, really, really confusing

[10:41] <camelia> rakudo-moar b25b86: ( no output )

[10:42] <vendethiel> m: say "x".trans((x => "1")) # eh

[10:42] <camelia> rakudo-moar b25b86: OUTPUT«1␤»

[10:42] <betterworld> hm, ok. I was confused since (x=>"1").perl and ("x"=>"1").perl evaluates to the same thing

[10:42] <jnthn> Extra parens have always been the way to disambiguate that...

[10:42] <vendethiel> that doesn't make it less confusing

[10:42] <jnthn> betterworld: Yes, but that is outside of an argument lsit.

[10:43] <jnthn> vendethiel: Some things you just have to learn.

[10:43] <betterworld> thanks

[10:43] *** FROGGS left
[10:43] <jnthn> Note that the tr/// syntax should now work also; I know it was done/imrproved recently.

[10:43] <vendethiel> well, obviously, but learning something by heart doesn't make it "perfect" :o)

[10:43] <jnthn> May work out neater.

[10:43] <vendethiel> it has its reasons, of course

[10:45] <vendethiel> just like flattening, this is something we need to explain the rules of early on so that people don't get confused by it

[10:46] *** psch joined
[10:46] <psch> hi #perl6 \o

[10:47] *** rindolf joined
[10:48] <betterworld> yes, I think I have read about those rules, but might have forgotten the details

[10:49] *** thou joined
[10:54] *** thou left
[10:58] <ppabian> hi. Who wants to adopt MongoDB driver and BSON repos? I'm not using this technology anymore and MongoDB module lost track with protocol changes and Rakudo compatibility back in 2012. If they won't be adopted I'll take them off from ecosystem list by the end of the week.

[10:58] *** ppabian is now known as bbkr

[11:11] *** xinming joined
[11:14] *** xinming_ left
[11:17] *** Ven left
[11:18] *** skids left
[11:28] *** brrt joined
[11:36] *** atroxaper left
[11:36] *** atroxaper joined
[11:41] *** atroxaper left
[11:42] *** kaare_ left
[11:42] <hoelzro> morning #perl6

[11:42] <colomon_> \o

[11:47] <hoelzro> so for my work on S26 stuff, I'm trying to add a stupid-simple class to hold WHY stuff

[11:47] <hoelzro> I added WHY.pm to src/core, with the contents 'my class WHY { ... }' (with the intent of filling out the rest later)

[11:47] <hoelzro> I also added src/core/WHY.pm to a/tools/build/Makefile-Moar.in

[11:47] <hoelzro> and now, when I try to build Rakudo, it seems to lock up!  Is there anything else I should be doing?

[11:54] *** anaeem1_ left
[11:59] <vendethiel> .oO( don't ask WHY it doesn't work ... )

[12:03] *** brrt left
[12:04] *** pdcawley left
[12:05] *** DarthGandalf left
[12:06] *** zakharyas left
[12:07] *** Rounin left
[12:08] *** pdcawley joined
[12:09] *** zakharyas joined
[12:10] <jnthn> m: my class WHY { ... }

[12:10] <camelia> rakudo-moar b25b86: OUTPUT«===SORRY!=== Error while compiling /tmp/WpyY_v9XIJ␤The following packages were stubbed but not defined:␤    WHY␤at /tmp/WpyY_v9XIJ:1␤------> my class WHY { ... }⏏<EOL>␤    expecting any of:␤        argumen…»

[12:10] <jnthn> It should be showing you that error...

[12:11] <hoelzro> jnthn: hmm...it didn't

[12:11] <hoelzro> I also tried with the class filled out with two basic attrs

[12:12] *** DarthGandalf joined
[12:13] <hoelzro> ok, now it worked...

[12:13] <hoelzro> when I did the filled out class definition and a my class WHY { ... } in src/core/traits.pm

[12:13] * hoelzro shrugs

[12:15] *** Celelibi joined
[12:16] *** Rounin joined
[12:16] <vendethiel> if I have a foo.pm with `class Foo::A;` and in another file, I `use Foo::A;`, I should be able to `A.new` later down in that file, right ?

[12:16] *** Ven joined
[12:17] <hoelzro> vendethiel: I think you would have to 'use foo'

[12:17] <vendethiel> I'm also doing that (I have use Foo; use Foo::A;)

[12:20] <hoelzro> alright

[12:20] <hoelzro> wait, is it foo.pm or Foo.pm?

[12:21] <vendethiel> Foo.pm6

[12:21] <jnthn> vendethiel: Not unless you marked the class "is export"

[12:21] <jnthn> vendethiel: Otherwise needs fully qualifying.

[12:21] <vendethiel> okay; so I do have to mark the class is export

[12:26] <vendethiel> uh, didnt quite work.

[12:26] <vendethiel> (is `class A is export;` valid ?)

[12:28] *** jnap joined
[12:29] <vendethiel> uh; oh.

[12:30] <Ven> m: my $a; for ^5 { LAST { $a = $_; }; last if $_ == 3; }; say $a

[12:30] <camelia> rakudo-moar b25b86: OUTPUT«3␤»

[12:32] <Ven> m: my Str $a; for <foo bar baz> { LAST { $a = $_; }; last if $_ eq 'bar'; }; say $a

[12:32] <camelia> rakudo-moar b25b86: OUTPUT«bar␤»

[12:34] <timotimo> can't you also import Foo::A in that case? 

[12:34] *** PotatoGim left
[12:34] <Ven> for some reason, my LAST isn't being run.

[12:34] <Ven> (is that something that was broken not too long ago and got fixed ?)

[12:38] *** thou joined
[12:40] * Ven pulls

[12:40] *** mr-foobar left
[12:40] <dalek> rakudo-star-daily: 0f6ff7b | coke++ | log/ (13 files):

[12:40] <dalek> rakudo-star-daily: today (automated commit)

[12:40] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/0f6ff7b643

[12:40] *** mr-foobar joined
[12:42] *** thou left
[12:43] *** atroxaper joined
[12:54] *** dayangkun joined
[12:55] *** guru joined
[12:55] *** guru is now known as Guest29547

[12:56] <Ven> OH !

[12:56] <Ven> m: my Str $a; my @a = do for "foo bar baz".split(" ") { LAST { $a = $_; }; last if $_ eq 'bar'; $_ }; say @a.perl, $a

[12:56] <camelia> rakudo-moar b25b86: OUTPUT«Array.new("foo")(Str)␤»

[12:57] <hoelzro> commute &

[12:57] <Ven> this doesn't work, but this does :

[12:57] <Ven> m: my Str $a; my @a = do for <foo bar baz> { LAST { $a = $_; }; last if $_ eq 'bar'; $_ }; say @a.perl, $a

[12:57] <camelia> rakudo-moar b25b86: OUTPUT«Array.new("foo")bar␤»

[12:57] <Ven> And I don't understand why at all.

[12:59] *** anaeem1 joined
[12:59] *** Guest29547 is now known as ajr_

[12:59] *** kaare_ joined
[13:05] *** anaeem1 left
[13:07] *** Ven left
[13:09] *** Ven joined
[13:10] <timotimo> oh wow, the negativity of r/programming

[13:11] <timotimo> the difference between my echo chamber and their echo chamber is pretty drastic

[13:11] <Ven> timotimo: next you'll be noticing hackernews is full of bigots :P

[13:13] <vendethiel> does anyone have a clue on what's happening above ?

[13:13] <timotimo> oh, i haven't looked at Hater News in a long time now

[13:14] <timotimo> m: my Str $a; my @a = do for <foo bar baz> -> $_ is copy { LAST { $a = $_; }; last if $_ eq 'bar'; $_ }; say @a.perl; say $a;

[13:15] <camelia> rakudo-moar b25b86: OUTPUT«Array.new("foo")␤bar␤»

[13:15] <timotimo> ^- could this be it?

[13:15] <Ven> it works with <> but not with .split

[13:16] <Ven> well, might be why.

[13:16] <Ven> m: my Str $a; my @a = do for "foo bar baz".split(" ")  <-> $_ { LAST { $a = $_; }; last if $_ eq 'bar'; $_ }; say @a.perl, $a

[13:16] <camelia> rakudo-moar b25b86: OUTPUT«Array.new("foo")(Str)␤»

[13:16] <Ven> m: my Str $a; my @a = do for "foo bar baz".split(" ")  { LAST { $a = ~$_; }; last if $_ eq 'bar'; $_ }; say @a.perl, $a

[13:16] <camelia> rakudo-moar b25b86: OUTPUT«Array.new("foo")(Str)␤»

[13:20] <timotimo> in one case you don't get containers or something?

[13:21] <timotimo> m: for "foo bar baz".words { say nqp::iscont($_) }

[13:21] <camelia> rakudo-moar b25b86: OUTPUT«0␤0␤0␤»

[13:21] <timotimo> m: for "foo bar baz".words -> $_ { say nqp::iscont($_) }

[13:21] <camelia> rakudo-moar b25b86: OUTPUT«1␤1␤1␤»

[13:21] <timotimo> m: for "foo bar baz".words <-> $_ { say nqp::iscont($_) }

[13:21] <camelia> rakudo-moar b25b86: OUTPUT«0␤0␤0␤»

[13:21] <timotimo> m: for "foo bar baz".words -> $_ is rw { say nqp::iscont($_) }

[13:21] <camelia> rakudo-moar b25b86: OUTPUT«0␤0␤0␤»

[13:21] <timotimo> m: for <foo bar baz> { say nqp::iscont($_) }

[13:21] <camelia> rakudo-moar b25b86: OUTPUT«0␤0␤0␤»

[13:21] <timotimo> m: for [<foo bar baz>] { say nqp::iscont($_) }

[13:21] <camelia> rakudo-moar b25b86: OUTPUT«1␤»

[13:21] <timotimo> er, oops :)

[13:22] <timotimo> m: for @[<foo bar baz>] { say nqp::iscont($_) }

[13:22] <camelia> rakudo-moar b25b86: OUTPUT«===SORRY!=== Error while compiling /tmp/uQG0TY9a6E␤Unsupported use of @[ variable␤at /tmp/uQG0TY9a6E:1␤------> for ⏏@[<foo bar baz>] { say nqp::iscont($_) }␤    expecting any of:␤        statement list␤   …»

[13:22] <timotimo> m: for @([<foo bar baz>]) { say nqp::iscont($_) }

[13:22] <camelia> rakudo-moar b25b86: OUTPUT«1␤1␤1␤»

[13:22] <timotimo> .o( how many differend kinds of parens can we put in there? :D )

[13:23] * Ven WATs

[13:23] <Ven> that works on 2014.03-p, btw (on my windows)

[13:24] <psch> m: ("foo bar baz".split: ' ').perl.say; <foo bar baz>.perl.say 

[13:24] <camelia> rakudo-moar b25b86: OUTPUT«("foo", "bar", "baz").list␤("foo", "bar", "baz")␤»

[13:24] <psch> m: my Str $a; my @a = do for <foo bar baz>.list -> $_ is copy { LAST { $a = $_; }; last if $_ eq 'bar'; $_ }; say @a.perl; say $a;

[13:24] <camelia> rakudo-moar b25b86: OUTPUT«Array.new("foo")␤bar␤»

[13:25] <psch> m: my Str $a; my @a = do for <foo bar baz>.list { LAST { $a = $_; }; last if $_ eq 'bar'; $_ }; say @a.perl; say $a;

[13:25] <camelia> rakudo-moar b25b86: OUTPUT«Array.new("foo")␤bar␤»

[13:25] <Ven> it works with <>. It doesn't with .split

[13:25] <psch> i was wondering if the .list breaks it, apparently not

[13:26] <jnthn> It'll be some silly bug somewhere...

[13:26] <jnthn> Probably in MapIter

[13:26] <jnthn> Where it decides whether to run LAST

[13:26] * Ven found a bug, for once

[13:27] <psch> m: my Str $a; my @a = do for "foo bar baz" { LAST { $a = 1; }; last if $_ eq 'bar'; $_ }; say @a.perl; say $a; # ...?

[13:27] <camelia> rakudo-moar b25b86: OUTPUT«Type check failed in assignment to '$a'; expected 'Str' but got 'Int'␤  in block  at /tmp/1RRTWKlDj1:1␤␤»

[13:27] <psch> ah split

[13:27] <psch> m: my Str $a; my @a = do for "foo bar baz".split(" ") { LAST { $a = 1; }; last if $_ eq 'bar'; $_ }; say @a.perl; say $a; # ...?

[13:27] <camelia> rakudo-moar b25b86: OUTPUT«Array.new("foo")␤(Str)␤»

[13:28] <Ven> no no, it doesn't LAST.

[13:28] <Ven> I tried to put a `say something` in the LAST to try it, and it wouldn't print it

[13:32] *** carlin joined
[13:33] *** Akagi201_ left
[13:33] <timotimo> that'd be a bug then

[13:40] <[Coke]> anyone know where to find the rule that covers the list processing in "my @a = <a b c>" ?

[13:41] <sergot> "I wrote a tool called SQLrillex. When you run it, it drops all databases."

[13:42] <moritz> today, I managed to a SQL UPDATE on a prod database where I forgot the WHERE clause

[13:42] <moritz> *to do

[13:42] *** brrt joined
[13:43] <[Coke]> hopefully no commit?

[13:43] <moritz> [Coke]: it didn't run inside a transaction

[13:43] <moritz> [Coke]: but, it was "only" case folding, and in a table that doesn't change so often

[13:43] *** spider-mario joined
[13:44] <moritz> [Coke]: so I let the admins restore that table from backup, with a different name, and updated the old data into the prod table

[13:44] <[Coke]> \o/ish

[13:44] <moritz> [Coke]: no harm done, it seems, just 30 minutes of stress

[13:45] <moritz> yes, could have been much worse

[13:45] <moritz> still, I shouldn't log in to feather today :-)

[13:47] <timotimo> more transactions for everybody!

[13:47] * Ven did the same once, but it was on a table managing how much money users had. *shrugs*

[13:50] * [Coke] accidentally dropped all the master NIS+ tables once. That was a fun recovery. (In the time before LDAP!)

[13:51] *** Akagi201 joined
[13:54] <rindolf> moritz: wow, scary story about that SQL query.

[13:54] <zengargoyle> lol sergot

[13:55] <timotimo> rindolf: "scary story about an SQL query" invokes imagery of people sitting around a campfire shining the flashlight onto their faces from below :D

[13:55] <rindolf> timotimo: heh.

[13:56] <rindolf> timotimo: it was a dark and stormy night, and I had to write... COBOL!

[13:57] <Ven> "let me tell you a story. The first time I try to read the source of phpBB. The time where I, for the first time, witnessed the horror of 7-level deep subqueries !"

[13:58] * rindolf runs away screaming from Ven.

[13:58] <sergot> Sounds like Dance of death

[13:58] * rindolf wants his mommy.

[13:58] <sergot> Iron Maiden I meant

[13:58] <rindolf> TimToady: here?

[13:59] <timotimo> rindolf: perhaps still occupied with his occulus

[13:59] <zengargoyle> Skrillex drop == Transformer taking a dump

[13:59] <PerlJam> rindolf: I imagine that a) it's a little early for TimToady and b) he's still recovering from eye difficulties

[14:01] *** PZt left
[14:02] <atroxaper> Hello, #perl6 !

[14:02] <yoleaux> 12 Jul 2014 23:54Z <Mouq> atroxaper: https://github.com/atroxaper/Pod-SAX/pull/1

[14:04] <rindolf> PerlJam: ah, OK.

[14:04] <rindolf> lwall is approaching 60.

[14:05] *** thou joined
[14:06] <Ven> (is the bug I "reported" earlier already on the tracker, or should it be rakudobugged ?)

[14:08] <sergot> atroxaper: o/

[14:08] <atroxaper> sergot: o/

[14:09] <Ven> "could not find module Sprockets::File to import module from" well yeah, it's a class

[14:10] *** colomon_ left
[14:11] <Ven> class `Foo::Bar is export;` doesn't export `Bar` by itself in files `use`-ing `Foo::Bar`, it seems

[14:13] *** sexyme27 joined
[14:13] <sexyme27> err hello

[14:26] *** DarthGandalf left
[14:30] *** colomon joined
[14:31] *** sexyme27 left
[14:32] <Ven> looks like I really have no idea how the module system works or how to use it

[14:33] *** DarthGandalf joined
[14:34] <Ven> "could not file symbol file" even using the fully-qualified name

[14:34] <Ven> or should the `use`s be outside of the `class` ?

[14:35] *** kaleem left
[14:40] *** woolfy left
[14:43] *** psch left
[14:45] *** woolfy joined
[14:47] <Ven> ooh ... It's because I'm `use`-ing from inside a class;

[14:49] *** lelf joined
[14:54] *** treehug88 joined
[14:57] *** guru joined
[14:57] *** ajr_ left
[14:58] *** guru is now known as Guest57865

[14:58] *** Guest57865 is now known as ajr_

[14:59] *** dayangkun left
[15:00] *** virtualsue left
[15:00] *** virtualsue_ joined
[15:02] *** Ven left
[15:07] *** brrt left
[15:11] *** atroxaper left
[15:11] *** atroxaper joined
[15:15] *** atroxaper left
[15:17] *** Akagi201_ joined
[15:18] <timotimo> satnav is hard sometimes

[15:18] <timotimo> ended up nowhere near a train station first, then ended up at the wrong train station and then almost drove to *another* wrong train station

[15:18] <timotimo> fortunately i had the presence of mind to ask google maps rather than apple maps for the "main station" and it worked immediately

[15:19] <timotimo> at least now i'll get some fresh air and crazy loud announcements before i get going

[15:19] <timotimo> and i'll be posting the weekly from this train station or the train likely

[15:19] *** Akagi201 left
[15:21] *** user6 joined
[15:21] *** atroxaper joined
[15:24] *** user6 left
[15:25] *** atroxaper left
[15:29] *** lelf left
[15:29] *** zakharyas left
[15:38] *** kaleem joined
[15:43] *** nebuchadnezzar left
[15:46] *** user6 joined
[15:53] *** kaiserpathos joined
[16:02] *** [Sno] left
[16:04] *** atroxaper joined
[16:08] *** bowtie left
[16:08] *** hoverboard joined
[16:08] *** bowtie joined
[16:09] *** bowtie is now known as Guest9785

[16:11] <atroxaper> sergot++. There is about your post and your work!

[16:14] <sergot> atroxaper++: thanks :)

[16:14] <sergot> glad you like it

[16:14] <sergot> :)

[16:15] *** pecastro left
[16:16] <timotimo> http://p6weekly.wordpress.com/?p=195&shareadraft=53c4023fea471 - please feel free to point out anything that's missing or is inaccurate

[16:16] *** virtualsue_ left
[16:16] <timotimo> oh, i should really point out that raiph collected a whole bunch of things for me

[16:17] *** virtualsue joined
[16:17] <carlin> timotimo: "Will Coleda wrked"

[16:17] <japhb_> wrking: It's like working, only more compressed.

[16:19] *** araujo joined
[16:19] *** araujo left
[16:19] *** araujo joined
[16:19] *** nebuchadnezzar joined
[16:21] *** molaf joined
[16:21] <[Coke]> Note: no actual wrking may have occurred.

[16:23] <timotimo> :)

[16:23] <[Coke]> (seirously, my name was on something I don't remember doing. :)

[16:24] <timotimo> oh?

[16:24] <timotimo> well, okay. good thing i asked :p

[16:24] <timotimo> which part did you not do?

[16:24] <timotimo> you threw out pugs from the daily runs, i remember that much

[16:26] <[Coke]> oh, is this new stuff? I meant last week. :)

[16:26] <[Coke]> "did maintenance work on the host that runs our evalbot and such" - I killed a process I accidentally left running. not worth doc'ing.

[16:27] <timotimo> %)

[16:27] <timotimo> ok

[16:30] <timotimo> http://p6weekly.wordpress.com/?p=195&shareadraft=53c40599002df - newest daft draft

[16:32] *** atroxaper left
[16:32] *** atroxaper joined
[16:33] *** user6 left
[16:33] *** Isp-sec joined
[16:36] *** atroxaper left
[16:45] *** brrt joined
[16:46] *** kaiserpathos left
[16:50] *** SamuraiJack joined
[16:53] *** dakkar left
[16:55] *** SamuraiJack left
[16:57] *** guru joined
[16:57] *** ajr_ left
[16:58] *** guru is now known as Guest90071

[16:58] *** Guest90071 is now known as ajr_

[16:58] <timotimo> no complaints?

[16:59] <timotimo> or did nobody look? :P

[17:03] <retupmoca> timotimo: I added a new module Net::AMQP

[17:03] *** atroxaper joined
[17:03] <timotimo> oh, what's AMQP?

[17:03] <timotimo> something from amazon?

[17:03] <retupmoca> used to interface with rabbitmq: http://www.rabbitmq.com/

[17:04] <timotimo> "a message queue protocol"? :)

[17:04] <retupmoca> http://en.wikipedia.org/wiki/Advanced_Message_Queuing_Protocol

[17:05] <timotimo> okay, with that i could publish, i think

[17:05] <retupmoca> Net::AMQP only does AMQP version 0.9.1, because that's what rabbitmq supports

[17:06] <retupmoca> if it's too specialized to publish, that's fine too :)

[17:06] <timotimo> ah, my formulation may be wrong, in that case

[17:06] <timotimo> retupmoca added a module for interfacing with RabbitMQ to the ecosystem, called Net::AMQP.

[17:06] <timotimo> that's what i wrote

[17:06] <retupmoca> oh, that works nicely

[17:07] <timotimo> if you already know about rabbitmq and amqp, it'll be obvious to you

[17:07] <timotimo> thanks for the input and thanks for your work, too! retupmoca++

[17:08] <nebuchadnezzar> hello, I planned to do something like http://paste.debian.net/109707/ to start using pkg-config, but I wonder if it's a good idea to keep the compatible code, any hints?

[17:09] *** atroxaper left
[17:10] *** brrt left
[17:17] <timotimo> pkg-config sounds like a good idea to use

[17:26] *** virtualsue left
[17:37] *** Rotwang joined
[17:41] *** brrt joined
[17:43] *** brrt left
[17:44] *** brrt joined
[17:52] *** _Slade_ joined
[17:53] *** ajr_ left
[17:56] *** prevost joined
[17:57] *** Ven joined
[17:58] *** carlin left
[17:59] <timotimo> yay i has internets again

[18:03] <Rotwang> cannot be denied

[18:05] *** kweetal joined
[18:10] <dalek> perl6-roast-data: 70227a1 | coke++ | / (5 files):

[18:10] <dalek> perl6-roast-data: today (automated commit)

[18:10] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/70227a1fce

[18:21] *** FROGGS joined
[18:22] <nebuchadnezzar> timotimo: should I $(error) if it's not available or use some hardcoded compatibility PATH?

[18:22] <[Coke]> r: ssay printf('%e', Inf);

[18:23] <[Coke]> r: say printf('%e', Inf);

[18:23] <camelia> rakudo-{parrot,jvm,moar} b25b86: OUTPUT«===SORRY!=== Error while compiling /tmp/tmpfile␤Undeclared routine:␤    ssay used at line 1. Did you mean 'say'?␤␤»

[18:23] <camelia> rakudo-jvm b25b86: OUTPUT«java.lang.NumberFormatException␤␤»

[18:23] <camelia> ..rakudo-moar b25b86: OUTPUT«-9223372036854775808.78e+18e-9.22337203685478e+18True␤»

[18:23] <camelia> ..rakudo-parrot b25b86: OUTPUT«9223372036854775808.000NaNe+InfTrue␤»

[18:24] <timotimo> nebuchadnezzar: i have no idea about such things ;(

[18:24] *** kaleem left
[18:25] *** teodozjan joined
[18:26] <teodozjan> hi, is http://perlcabal.org/~coke/roast/ alive? google leads to it :D when I look for perl6 roast chart 

[18:26] <timotimo> seems thoroughly outdated

[18:26] <timotimo> [Coke]: will you turn that into a redirect or revive it or something?

[18:28] <[Coke]> That's not a public URL, no.

[18:28] <[Coke]> (was something I put up on feather briefly, not intended to live)

[18:29] <[Coke]> I don't rightly remember what it was.

[18:29] <[Coke]> do you have an archived copy? ;)

[18:29] <teodozjan> [Coke] in internet everthing seems public, at least when google finds it :)

[18:30] <teodozjan> result varies on browser, in chrome its chart with no data

[18:30] <dalek> roast: 41866eb | coke++ | S32-str/sprintf.t:

[18:30] <dalek> roast: reference RT; narrow fudge scope

[18:30] <dalek> roast: review: https://github.com/perl6/roast/commit/41866eba61

[18:31] <teodozjan> in ffox its nothin 

[18:32] *** Ven left
[18:32] *** carlin joined
[18:37] *** dwarring joined
[18:42] *** emilper joined
[18:43] *** Ven joined
[18:43] *** pdcawley left
[18:44] *** pdcawley joined
[18:47] *** _Slade_ left
[18:48] *** Akagi201_ left
[18:48] *** carlin left
[18:48] *** Akagi201 joined
[18:49] *** carlin joined
[18:52] *** SamuraiJack_ left
[18:53] *** Akagi201 left
[18:58] *** rurban1 joined
[19:00] <Ven> what's the most common way to share test helpers ?

[19:01] <FROGGS> put a module into t/lib and use it

[19:01] <Ven> I guess :o)

[19:02] *** PZt joined
[19:03] <FROGGS> zavolaj (NativeCall) does it for example

[19:04] *** prevost left
[19:06] *** atroxaper joined
[19:07] *** SamuraiJack_ joined
[19:10] <dwarring> r: https://gist.github.com/dwarring/13cdf1f047b3e085f4c2

[19:10] <camelia> rakudo-{parrot,jvm,moar} b25b86: OUTPUT«gist not found»

[19:11] *** atroxaper left
[19:11] * Ven is getting "cannot find symbols" error all over the place

[19:12] <Ven> what zavolaj doesn't do, however, is to `use` modules

[19:13] * dwarring trying to run a gist

[19:13] <FROGGS> it uses its CompileTestLib or what it is called

[19:13] <Ven> yeah. but CompileTestLib doesn't use any module

[19:13] <FROGGS> ahh, okay, true

[19:14] *** spider-mario left
[19:15] <Ven> duh. I was only getting the error because I renamed the file(I tried to use dashes in filename) but then forgot to :tabnew to the new file ._.

[19:16] <Ven> I still don't understand why everything fails when I `use` inside of a module/class

[19:16] *** SamuraiJack_ left
[19:16] <Ven> is it "scoped" ?

[19:17] *** [Sno] joined
[19:17] <colomon> yes, use is scoped

[19:18] <colomon> m: { use Test; is True; }; is True;

[19:18] <camelia> rakudo-moar b25b86: OUTPUT«===SORRY!=== Error while compiling /tmp/MVJumozZWY␤Undeclared routine:␤    is used at line 1␤␤»

[19:19] <colomon> m: { use Test; is True; }; 

[19:19] <camelia> rakudo-moar b25b86: OUTPUT«===SORRY!=== Error while compiling /tmp/LYfhopYAXH␤Calling 'is' will never work with argument types (Bool)␤    Expected any of:     :($got, $expected, Any $desc = { ... })␤at /tmp/LYfhopYAXH:1␤------> { use Test; ⏏[31…»

[19:19] <Ven> not what I mean.

[19:19] <colomon> m: { use Test; ok True; }; 

[19:19] <camelia> rakudo-moar b25b86: OUTPUT«ok 1 - ␤»

[19:19] <colomon> m: { use Test; ok True; };  ok True;

[19:19] <camelia> rakudo-moar b25b86: OUTPUT«===SORRY!=== Error while compiling /tmp/J2ueq63VUC␤Undeclared routine:␤    ok used at line 1. Did you mean 'on'?␤␤»

[19:19] <Ven> `use A::B; module A::C; A::B.new` has a different behavior than `module A::C; use A::B; A::B.new;`

[19:19] <Ven> The first one works, the second one fails

[19:20] *** kurahaupo left
[19:21] <FROGGS> A gets stubbed in both cases... dunno why there is a difference

[19:22] <colomon> Ven: I think they do have different meaning.  what is the different behavior?

[19:22] <Ven> colomon: can't find symbol B in the second case.

[19:23] <carlin> dwarring: camelia running gists has been broken for a while :(

[19:23] <dwarring> carlin: thanks!!

[19:24] <dwarring> i found what I wanted anyway

[19:25] <colomon> FROGGS, Ven: huh.  if you say module A::C; use A::B, do you now have A::C::A::B  ?

[19:25] <Ven> I'd expect to have A::B.

[19:25] <dwarring> this is already covered by a fudged test in S06-traits/precedence.t

[19:26] <dwarring> it's a NYI

[19:26] <FROGGS> colomon: dont, think so... `module A::C; module A::B { }` should give you both, A::C::A::B, and A::B as a shortcut

[19:26] <FROGGS> colomon: but not for a use statement

[19:30] <Ven> NIY is an answer too :)

[19:31] <Ven> NYI, even

[19:32] <jnthn> .oO( The knights who say NYI )

[19:32] *** Alula_ left
[19:33] <Ven> .oO( I DEMAND A ... FUDGE ! )

[19:33] *** Alula_ joined
[19:35] *** dalek left
[19:35] *** treehug88 left
[19:36] <[Coke]> dwarring: who were you talking ato about the fudged test? (doesn't appear to be the use/module one)

[19:36] *** dalek joined
[19:36] *** ChanServ sets mode: +v dalek

[19:40] <dwarring> [Coke]: I was thinking https://github.com/perl6/roast/blob/master/S06-traits/precedence.t#L19

[19:41] <dwarring> that's a prefix however, where my case is an infix

[19:41] <dwarring> hmmm

[19:44] <dwarring> [Coke]: I am comparing against https://gist.github.com/dwarring/13cdf1f047b3e085f4c2#file-gistfile1-txt

[19:45] <mr-foobar> TimToady: https://en.wikipedia.org/wiki/Perlin_noise 

[19:47] *** prevost joined
[19:47] *** beastd joined
[19:48] <jnthn> hah, I read that as "Perl line noise"...

[19:48] <mr-foobar> and it got an academy award :P

[19:49] <timotimo> %)

[19:49] <jnthn> Challenge: implement the algorithm using as few chars matched by \w as possible :D

[19:51] <timotimo> can you do it in the shape of a kitten?

[19:51] <mr-foobar> ROFL

[19:51] *** darutoko left
[19:53] <mr-foobar> that's trivial, you want me to inflate a balloon as well, don't you ?

[19:53] *** rindolf left
[19:54] <dwarring> [Coke]: It's not just ignoring the precedence, its also ignoring scoping

[19:54] <timotimo> :3

[19:55] <dwarring> will add a couple more tests

[19:57] *** teodozjan left
[19:57] <Ven> using prove with perl6 is just supposed to be `prove perl6` ? If I run "prove help", I get an error about a missing script wrapper.

[19:57] <hoelzro> Ven: prove --exec perl6 is what I do

[19:57] <Ven> thankies :)

[19:58] * Ven guessed -e would work

[20:02] <hoelzro> I believe it will

[20:04] *** guru joined
[20:04] <cxreg> is it too late to suggest that perl 6 reject operators that involve unbalanced braces?  o.o

[20:04] *** guru is now known as Guest26347

[20:04] *** Guest26347 is now known as ajr_

[20:05] <jnthn> m: sub infix:<(()>($a, $b) { $a ~ $b }; say 'y' (() 'es'

[20:05] *** matija left
[20:05] <camelia> rakudo-moar b25b86: OUTPUT«yes␤»

[20:06] *** matija joined
[20:06] *** matija left
[20:06] *** matija joined
[20:07] *** matija left
[20:07] *** matija joined
[20:08] <jnthn> (It's actually TimToady's call really... :))

[20:08] *** matija left
[20:08] *** `matija joined
[20:08] *** Ven left
[20:09] <lizmat> Is there something that can be done about this:

[20:09] <lizmat> $ ./perl6-m -e1

[20:09] <lizmat> $ cd t

[20:09] <lizmat> $ ../perl6-m -e1

[20:09] <lizmat> Unhandled exception: failed to load library 'dynext/libperl6_ops_moar.dylib'

[20:09] <lizmat>    at <unknown>:1  (/Users/liz/Github/rakudo.moar/perl6.moarvm::303)

[20:09] <timotimo> lizmat: make install :)

[20:10] <timotimo> and use the one from install/bin/

[20:10] <lizmat> ok, and how does that work with "make spectest" ?

[20:10] <dalek> roast: 725f534 | coke++ | S02-names-vars/variables-and-packages.t:

[20:10] <dalek> roast: remove stale comment

[20:10] <dalek> roast: review: https://github.com/perl6/roast/commit/725f53447c

[20:10] <dalek> roast: 81ce684 | coke++ | / (10 files):

[20:10] <dalek> roast: standardize on RT #, not URL

[20:10] <dalek> roast: review: https://github.com/perl6/roast/commit/81ce684643

[20:10] <jnthn> It doesn't. I'd try to avoid the problem by noting chdir'ing in the middle of the tests, as a first resort...

[20:10] <lizmat> because doing a "cd foo" in a test file, make shelling out to $EXECUTABLE_NAME not work

[20:11] *** Ven joined
[20:11] <lizmat> feels like I'm fixing the wrong thing there

[20:11] <lizmat> surely, someone will want to to a chdir sometime and a shell() afterwards ?

[20:12] <jnthn> Yes, but they'll surely have make install'd too

[20:12] <lizmat> well, fwiw, I *did* do make install

[20:12] <jnthn> OK, then you need to drop the .. too...

[20:12] <lizmat> but I guess we want the spectest not work on an installed

[20:12] <lizmat> perl6

[20:13] <jnthn> The usual sequence is make, make test, make install... :)

[20:13] <jnthn> well, s/test/spectest/ in this case

[20:13] <lizmat> ok, no chdir and shell($EXECUTABLE_NAME) in a test script

[20:13] <jnthn> I think that's the easiest way, otherwise we're in for quite a yak shave...

[20:13] <lizmat> gotcha

[20:14] <jnthn> Invoking the installed one should work from any directory

[20:17] *** treehug88 joined
[20:18] <dalek> roast: 1a09b7e | (Elizabeth Mattijsen)++ | S22-package-format/local.t:

[20:18] <dalek> roast: Fix test by not changing dir

[20:18] <dalek> roast: 

[20:18] <dalek> roast: Apparently, during spectesting, it is not wise to both do a chdir() *and*

[20:18] <dalek> roast: a shell($*EXECUTABLE_NAME)

[20:18] <dalek> roast: review: https://github.com/perl6/roast/commit/1a09b7e378

[20:20] *** jeffreykegler joined
[20:21] <dwarring> [Coke]: typo in my gist - rakudo precedence is fine

[20:22] * dwarring scoping that is

[20:24] *** kurahaupo joined
[20:25] <[Coke]> whew.

[20:30] <Ven> I'm going to parse a file that'll contain directives (like `= foo`), and keep everything else intact, and I wonder if I should match the directive regexp and replace in the string, or if I should make a grammar and keep bits I didn't parse

[20:30] <Ven> I guess that match and replace will be far more efficient, though ..

[20:34] *** prevost left
[20:41] *** hoverboard left
[20:45] *** japhb left
[20:45] *** japhb_ left
[20:48] *** brrt left
[20:50] *** woolfy1 joined
[20:51] *** woolfy left
[20:52] *** Ven left
[20:53] *** vendethiel left
[20:56] *** virtualsue joined
[21:04] *** gfldex left
[21:05] *** hoverboard joined
[21:07] *** atroxaper joined
[21:09] <jlaire> the link to S15.html is a 404 here http://perlcabal.org/syn/

[21:09] <jlaire> link to raw pod works though, I can read that :)

[21:12] *** atroxaper left
[21:17] *** jeffreykegler left
[21:24] *** kurahaupo left
[21:26] <dalek> roast: 934d956 | jnthn++ | S16-filehandles/io.t:

[21:26] <dalek> roast: Add a missing .close that Windows needs.

[21:26] <dalek> roast: review: https://github.com/perl6/roast/commit/934d95610d

[21:28] *** japhb joined
[21:28] *** japhb left
[21:33] *** Rotwang left
[21:38] *** carlin left
[21:43] *** japhb joined
[21:46] *** japhb_ joined
[21:46] *** japhb left
[21:47] *** japhb joined
[21:51] *** Akagi201 joined
[21:56] *** Akagi201 left
[21:56] *** rurban1 left
[21:58] *** kaare_ left
[22:00] *** emilper left
[22:01] *** Isp-sec left
[22:05] *** xragnar left
[22:08] *** xragnar joined
[22:10] *** virtualsue left
[22:12] *** rurban1 joined
[22:14] *** treehug88 left
[22:23] *** jnap1 joined
[22:24] *** jnap left
[22:25] *** pecastro joined
[22:30] *** beastd left
[22:44] *** japhb left
[22:45] *** japhb joined
[22:52] *** Akagi201 joined
[22:57] *** Akagi201 left
[23:04] *** dalek left
[23:04] *** dalek joined
[23:04] *** ChanServ sets mode: +v dalek

[23:05] *** xragnar left
[23:06] *** xragnar joined
[23:06] *** xenoterracide_ joined
[23:09] *** atroxaper joined
[23:10] <dalek> nqp: d838af4 | jnthn++ | tools/build/MOAR_REVISION:

[23:10] <dalek> nqp: Bump to latest MoarVM; string/spesh improvements.

[23:10] <dalek> nqp: review: https://github.com/perl6/nqp/commit/d838af4ee0

[23:12] <dalek> rakudo/nom: 7360274 | jnthn++ | tools/build/NQP_REVISION:

[23:12] <dalek> rakudo/nom: Bump NQP_REVISION for Moar string improvements.

[23:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7360274032

[23:13] *** atroxaper left
[23:24] *** rurban1 left
[23:29] *** rurban1 joined
[23:33] *** ajr_ left
[23:37] *** colomon left
[23:37] *** BenGoldberg joined
[23:51] *** molaf left
[23:53] *** Akagi201 joined
[23:56] *** noganex_ left
[23:57] *** Akagi201 left
