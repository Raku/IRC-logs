[00:00] *** [particle] joined
[00:00] *** kjs_ left
[00:07] *** ajr_ left
[00:08] *** kurahaupo1 left
[00:09] *** kurahaupo1 joined
[00:11] *** kurahaupo1 left
[00:11] *** kurahaupo1 joined
[00:12] *** kurahaupo1 left
[00:13] *** Alina-malina joined
[00:28] *** jluis left
[00:38] *** Mso150 joined
[00:41] *** vendethiel left
[00:43] *** espadrine_ left
[00:51] *** BenGoldberg joined
[00:52] *** exixt_ is now known as exixt

[00:56] *** vendethiel joined
[01:00] *** dayangkun joined
[01:10] *** bjz left
[01:10] *** bjz_ joined
[01:22] *** dayangkun left
[01:22] *** jimmy_ joined
[01:23] *** jimmy_ is now known as JimmyZ

[01:27] <moritz> prime: it's just a minimal version

[01:34] *** Mso150 left
[01:48] *** KCL_ joined
[01:52] *** hagiri joined
[01:52] <hagiri> TimToady, hello man

[01:52] <hagiri> =)

[01:52] <hagiri> hello all

[01:52] <hagiri> ^^

[01:52] *** zakharyas joined
[01:55] *** xinming_ joined
[01:58] *** xinming left
[02:15] <japhb> hagiri: You have arrived during the "Europe is sleeping" lull.  It's not totally silent in here during that time, but it can be pretty quiet.

[02:18] * moritz corrects it to "Europe, except where small children keep the parents awake" :-)

[02:18] <hagiri> japhb, hehehe

[02:18] <hagiri> kkk

[02:19] *** KCL joined
[02:22] *** KCL_ left
[02:23] *** vendethiel left
[02:26] *** vendethiel joined
[02:27] *** chenryn joined
[02:38] <japhb> moritz: You know, I was actually thinking of that, but didn't want to jinx you.  :-)

[02:39] *** adu joined
[02:41] *** hagiri left
[02:49] *** vendethiel left
[02:51] *** vendethiel joined
[03:00] *** bjz_ left
[03:00] *** raiph left
[03:06] *** ghostlines joined
[03:14] *** ghostlines left
[03:24] *** kurahaupo left
[03:27] *** bjz joined
[03:35] *** vendethiel left
[03:38] *** vendethiel joined
[03:41] *** bjz_ joined
[03:45] *** bjz left
[04:06] *** rmgk_ joined
[04:06] *** rmgk left
[04:06] *** rmgk_ is now known as rmgk

[04:09] *** kaare_ joined
[04:13] *** chenryn left
[04:18] *** chenryn joined
[04:33] *** chenryn left
[04:37] *** kjs_ joined
[04:47] *** vendethiel left
[04:58] *** vendethiel joined
[05:00] *** KCL_ joined
[05:03] *** KCL left
[05:05] *** adu left
[05:08] *** KCL joined
[05:09] *** KCL_ left
[05:13] *** labster left
[05:13] *** labster joined
[05:14] *** labster left
[05:18] *** vendethiel left
[05:21] *** kaare_ left
[05:26] *** vendethiel joined
[05:36] *** salparadise joined
[05:43] *** chenryn joined
[05:45] *** kaare_ joined
[05:48] *** BenGoldberg left
[05:49] *** bjz joined
[05:50] *** bjz_ left
[05:50] *** vendethiel left
[05:54] *** vendethiel joined
[05:59] *** adu joined
[06:07] *** kjs_ left
[06:17] *** vendethiel left
[06:23] *** chenryn left
[06:34] *** vendethiel joined
[06:37] *** gfldex joined
[06:39] *** dayangkun joined
[06:39] *** dayangkun left
[06:40] *** chenryn joined
[06:52] *** adu left
[06:56] *** vendethiel left
[06:56] *** anaeem1 joined
[06:59] *** kaleem joined
[07:09] *** FROGGS joined
[07:10] *** FROGGS left
[07:13] *** labster joined
[07:18] *** jfredett left
[07:22] *** xenowoolfy joined
[07:25] *** xenowoolfy left
[07:27] *** vendethiel joined
[07:33] *** bjz left
[07:33] *** kaleem left
[07:35] *** hypolin joined
[07:35] *** hypolin left
[07:36] *** eclipse left
[07:38] *** eclipse joined
[07:38] *** blackbolt joined
[07:43] *** chenryn left
[07:46] *** zakharyas left
[07:48] *** chenryn joined
[07:49] *** bjz joined
[07:50] *** vendethiel left
[07:50] *** darutoko joined
[07:51] *** JimmyZ left
[07:53] *** JimmyZ joined
[07:54] *** vendethiel joined
[07:54] *** FROGGS joined
[08:03] *** Mso150 joined
[08:13] *** rindolf joined
[08:14] *** vendethiel left
[08:15] *** gfldex left
[08:17] *** sqirrel_ joined
[08:27] *** rurban joined
[08:27] *** telex left
[08:28] *** telex joined
[08:34] *** virtualsue joined
[08:37] *** vendethiel joined
[08:40] *** rindolf left
[08:47] *** JimmyZ left
[08:49] *** JimmyZ joined
[08:55] *** kurahaupo joined
[08:57] *** vendethiel left
[08:59] *** Mso150 left
[09:00] *** vendethiel joined
[09:08] *** netstar left
[09:11] <breinbaas> Hi.  What's the way in perl6 to time things?  Is there a thing like Time::HiRes ?

[09:11] <raydiak> m: say now

[09:11] <camelia> rakudo-moar 7191e4: OUTPUT«Instant:1416561144.379447␤»

[09:12] <JimmyZ> breinbaas: https://github.com/tony-o/perl6-bench/

[09:12] <breinbaas> thanks

[09:13] <moritz> breinbaas: the built-in 'now' term already supports sub-second resolution

[09:13] <moritz> JimmyZ: isn't the most active repo the japhb/perl6-bench one?

[09:14] *** jack_rabbit left
[09:14] <JimmyZ> moritz: I think they are different things, the former is a module

[09:19] <breinbaas> after installing a module, is there a thing like perldoc?

[09:20] <breinbaas> perldoc Bench

[09:20] <JimmyZ> don't know, but there is exmaples and readme

[09:21] <breinbaas> ok, I can read the github page of course

[09:21] *** zakharyas joined
[09:27] *** brrt joined
[09:27] *** virtualsue left
[09:29] *** abraxxa joined
[09:34] <sergot> hi o/

[09:38] *** kaleem joined
[09:42] *** zakharyas left
[09:44] *** vendethiel left
[09:46] *** vendethiel joined
[09:47] *** itz_ joined
[09:50] *** itz left
[09:52] *** espadrine_ joined
[09:57] *** fhelmberger joined
[09:59] *** sqirrel_ left
[10:04] *** anaeem1__ joined
[10:05] *** cosimo_ is now known as cosimo

[10:07] *** eternaleye left
[10:07] *** anaeem1 left
[10:08] *** vendethiel left
[10:10] *** vendethiel joined
[10:10] <masak> evening, #perl6

[10:10] <arnsholt> Morning =)

[10:10] *** eternaleye joined
[10:11] <arnsholt> Or antenoon, rather

[10:11] <arnsholt> Not really morning at 11

[10:15] *** virtualsue joined
[10:16] *** virtualsue left
[10:16] *** abraxxa left
[10:19] <brrt> \o masak

[10:19] <brrt> again in asia?

[10:19] <brrt> or nz

[10:19] <brrt> or where?

[10:19] <masak> .cn

[10:19] <brrt> ah

[10:19] *** aborazmeh joined
[10:20] * brrt wants to hit the manager responsible for xcode's clang

[10:21] *** JimmyZ left
[10:22] *** virtualsue joined
[10:28] <arnsholt> brrt: What's wrong with it?

[10:30] <brrt> it doesn't come with memorysanitizer or addresssanitizer

[10:30] <arnsholt> Oh, that's annoying

[10:31] *** vendethiel left
[10:33] *** labster left
[10:34] <rurban> macport clang neither

[10:35] <rurban> but easy to compile your own

[10:36] <rurban> oh, macport actually can do it: port info clang-3.5

[10:36] <rurban> port install clang-3.5 +analyzer

[10:38] *** exixt is now known as exixt_

[10:40] *** anaeem1__ left
[10:41] <brrt> hmm /me has brew 

[10:41] <brrt> and i'm not entirely willing to upset that yet

[10:41] *** anaeem1_ joined
[10:55] <jnthn> evening, #perl6 :)

[10:55] <arnsholt> o/

[10:56] *** ghostlines joined
[10:57] <dalek> snake: 94f5928 | (Arne Skjærholt)++ | src/Snake/ (2 files):

[10:57] <dalek> snake: Implement pass statement.

[10:57] <dalek> snake: review: https://github.com/arnsholt/snake/commit/94f5928f71

[10:57] <dalek> snake: ab62836 | (Arne Skjærholt)++ | src/Snake/ (2 files):

[10:57] <dalek> snake: Implement returning from functions.

[10:57] <dalek> snake: review: https://github.com/arnsholt/snake/commit/ab628369f8

[10:57] <jnthn> Snake! Snake! Oooh, it's a snake!

[10:58] <jnthn> arnsholt++

[10:58] <arnsholt> Thanks =)

[10:58] <arnsholt> I'm not sure I really need lexotic to handle return in Python, but it was easier to crib NQP's return logic than to figure out how to do it properly =)

[10:59] <jnthn> Yeah, I suspect you don't need it either...but it's fine for now I guess :)

[10:59] <jnthn> I mean, if it works... :)

[10:59] <arnsholt> Yup

[10:59] <arnsholt> Speaking of: Does QAST expose goto and labels directly?

[11:00] <jnthn> Not goto. Labels...not sure, FROGGS++ did those :)

[11:01] *** vendethiel joined
[11:01] <arnsholt> That's the obvious way to do Python's return

[11:01] <arnsholt> A local result variable and just goto the end of the function on return

[11:01] <jnthn> Well, a "leave" QAST op for leaving the current block is the even easier way :)

[11:02] <jnthn> Then it'd be QAST::Op.new( :op('leave'), $retval_qast )

[11:02] *** denis_boyun_ joined
[11:02] <arnsholt> I guess, but the current QAST block isn't always the function block though

[11:02] <jnthn> Oh?

[11:02] <jnthn> I thought you could compile Python so it was...

[11:02] <arnsholt> Not ATM at least

[11:03] <arnsholt> I generate new blocks for for loops

[11:03] <jnthn> ok

[11:03] <jnthn> ah

[11:03] <jnthn> yeah...

[11:03] <arnsholt> Which I think I have to, because of variable assignment shenanigans

[11:04] <jnthn> *nod*

[11:04] <jnthn> Then the lexotic way is the easiest 

[11:04] <jnthn> And since it's used in NQP and Rakudo it's relatively well optimized.

[11:04] <arnsholt> That's true too

[11:04] *** chenryn left
[11:09] *** ghostlines left
[11:13] *** bjz left
[11:21] *** vendethiel left
[11:22] *** bjz joined
[11:24] *** ibo2perl6 joined
[11:25] *** brrt left
[11:25] *** vendethiel joined
[11:26] <ibo2perl6> o/ 

[11:27] *** sqirrel_ joined
[11:29] *** ibo2perl6 left
[11:31] *** hepmee joined
[11:31] <hepmee> hi

[11:31] <hepmee> i have problem with connection to db2, someone can help me?

[11:35] <hepmee> i have this script http://pastebin.com/cnL4jNuW

[11:37] <hepmee> and i get this error: DBI connect('S634E05A:S634E05A:8471','fiel',...) failed: [IBM][CLI Driver] CLI0124E  Valore argomento non valido. SQLSTATE=HY009 at spiel.pl line 22.

[11:45] *** Ugator joined
[11:45] <moritz> hepmee: welcome to #perl6. I fear you're off-topic here

[11:45] <moritz> hepmee: unless Perl 6 now has a db2 backend that I don't know about yet

[11:47] *** vendethiel left
[11:49] *** vendethiel joined
[11:55] *** rindolf joined
[11:58] <hepmee> ok i have 5.16 

[12:04] <colomon> huh, a few interesting new failures overnight: http://host08.perl6.com:8080/report

[12:10] *** vendethiel left
[12:12] *** vendethiel joined
[12:16] *** rindolf left
[12:19] <timotimo> o/

[12:32] *** labster joined
[12:33] *** vendethiel left
[12:36] *** xtreak joined
[12:42] *** sqirrel_ left
[12:47] <blackbolt> how can i install GTK::Simple? In the tests I get a problem with "libgtk-3.so"

[12:48] <timotimo> hi

[12:48] <timotimo> that's my module

[12:48] <xtreak> perl6: say round(5e+33)

[12:48] <camelia> rakudo-moar 7191e4: OUTPUT«-9223372036854775808␤»

[12:48] <camelia> ..rakudo-parrot 7191e4: OUTPUT«4999999999999999727876154935214080␤»

[12:48] <timotimo> sorry about that, getting the right library name in place can get tricky if you want to be cross-platform

[12:48] <timotimo> blackbolt: you do have gtk3 installed, yes?

[12:49] <blackbolt> yes

[12:49] <blackbolt> with gnome

[12:49] <xtreak> Long numbers being rounded off gives negative numbers. Is it a bug that I can report in MoarVM?

[12:50] <timotimo> blackbolt: can you find out what your gtk3 .so files are called?

[12:50] <blackbolt> timotimo: i am new here, how can i do that?

[12:50] *** vendethiel joined
[12:51] <timotimo> try "locate libgtk-3" in a terminal

[12:51] <timotimo> what linux distribution is this?

[12:51] <blackbolt> ubuntu

[12:51] <timotimo> OK, i don't have a ubuntu system handy

[12:52] <timotimo> on my fedora system these files are /usr/lib64/libgtk-3.so, /usr/lib64/libgtk-3.so.0 and /usr/lib64/libgtk-3.so.0.1000.9

[12:53] *** anaeem1_ left
[12:54] *** blackbolt left
[12:54] <arnsholt> My Ubuntu machine has /usr/lib/x86_64-linux-gnu/libgtk-3.so

[12:54] <arnsholt> xtreak: That certainly looks like a bug!

[12:55] <timotimo> m: say $*VM.config<dll>

[12:55] <camelia> rakudo-moar 7191e4: OUTPUT«lib%s.so␤»

[12:55] *** blackbolt joined
[12:55] <timotimo> hm.

[12:55] <xtreak> I reported it at https://github.com/MoarVM/MoarVM/issues/157

[12:55] <blackbolt> timotimo: i got dc. libs are in /usr/lib/x86_64-linux-gnu/libgtk-3.so.0 /usr/lib/x86_64-linux-gnu/libgtk-3.so.0.400.2

[12:56] <geekosaur> you need a -dev package

[12:56] <timotimo> why would you need the -dev package to get the regular .so symlink?

[12:56] <geekosaur> the unversioned .so name is used at compile time

[12:56] <timotimo> oh!

[12:56] <timotimo> that's an explanation i've been missing for a *long* time

[12:56] <geekosaur> nd mebeds the versioned name in the shared bject table

[12:57] <geekosaur> the idea is you can have multiple runtime versions, while selecting one as a compile time version

[12:57] <geekosaur> since you cant have multiple compile time versions without multiple prefixes

[12:57] <arnsholt> Oh! Didn't know that

[12:57] <arnsholt> Very useful knowledge!

[12:57] <arnsholt> geekosaur++

[12:59] <geekosaur> since things like gnome tend to change a lot even between minor versions, you need something like that to be able to continue to use older programs. (you can also understand this as "gnome sucks at maintaining backward compatibility")

[13:00] <geekosaur> (although gnome is far from the worst offender. openssl pre-1.0 didn[t even pretend to maintain backward compat)

[13:01] *** kaleem left
[13:01] <xiaomiao> geekosaur: "backwards compatibility sucks at keeping up with us awesome people" 

[13:01] *** kaleem joined
[13:02] * xiaomiao doesn't like this 'agile' development style of constant failure

[13:02] *** haroldwu left
[13:03] *** haroldwu joined
[13:04] <timotimo> ldconfig -p gives a complete listing of libraries and their candidates

[13:04] <timotimo> we may want to teach zavolaj to use that feature

[13:04] <blackbolt> Problem with GTK::Simple solved. libgtk-3-dev help me

[13:06] <timotimo> great! i'll keep that in mind for the future

[13:06] <timotimo> thanks also to geekosaur :)

[13:07] <timotimo> blackbolt: i'd welcome any feedback about GTK::Simple, like missing feature or weird API or stuff

[13:09] *** oetiker left
[13:10] <timotimo> i kind of "burnt out" a tiny bit on adding new features to GTK::Simple

[13:10] <timotimo> i forced myself to add new features by coming up with use cases and making that work

[13:11] <timotimo> and also i'm hoping someone will build something that can work with gobject introspection

[13:11] *** oetiker joined
[13:12] <blackbolt> timotimo: This is my beginning with Perl 6, i need to create simple program with GUI

[13:12] *** jluis joined
[13:13] <timotimo> OK

[13:13] <timotimo> feel free to ask many questions

[13:13] *** vendethiel left
[13:13] <blackbolt> thanks

[13:15] *** vendethiel joined
[13:15] *** chenryn joined
[13:20] *** jluis left
[13:22] *** [Sno] left
[13:23] *** guru joined
[13:23] *** guru is now known as Guest76753

[13:23] *** Guest76753 is now known as ajr_

[13:32] *** lucas_ joined
[13:35] <lucas_> S06 says "The want function is gone". Did a "want" function exist before? Should it say "wantarray"?

[13:35] <timotimo> oh, that may be, yes

[13:37] <lucas_> timotimo: Thanks. I'll change later, ok?

[13:37] <moritz> lucas_: yes, there was a 'want' function at some point, as a replacement for wantarray

[13:37] <lucas_> moritz: Oh, thanks, I didn't know that

[13:37] <timotimo> oh, interesting

[13:38] <timotimo> shows what i know :)

[13:39] <blackbolt> timotimo, is there any tutorial to gtk::simple ?

[13:39] <timotimo> there's only the example programs in examples/

[13:39] <lucas_> When I read "The foo feature is gone..." I think about P5 comparison, since P6 design should just change without any notice, right?

[13:39] <FROGGS> lucas_: why?

[13:40] <timotimo> i was assuming, that "want" was refering to an in-perl5-replacement for wantarray

[13:40] <FROGGS> why should the P6 design change without any notice?

[13:40] <moritz> lucas_: that's not how people think who have been doing Perl 6 for a few years :-)

[13:40] <timotimo> hehe.

[13:40] <moritz> lucas_: but I wouldn't object to it saying "The want/wantarray functions are gone"

[13:40] *** espadrine_ left
[13:41] <moritz> lucas_: if that makes it any clearer for you

[13:41] <moritz> or "both the 'wantarray' function, and it's successor 'want', are gone"

[13:41] <lucas_> FROGGS, moritz: :) otherwise all P6 design decisions from the past should be documented.

[13:41] <lucas_> .. in the specs.

[13:42] <moritz> lucas_: maybe just those that attract much attention from the wider community

[13:42] <FROGGS> design documents*

[13:42] <lucas_> yes

[13:44] *** xtreak left
[13:44] *** aborazmeh left
[13:45] *** sqirrel_ joined
[13:52] *** exixt_ is now known as exixt

[13:52] *** exixt is now known as exixt_

[13:57] *** kaare_ left
[13:59] *** rindolf joined
[14:01] *** zakharyas joined
[14:02] *** punter joined
[14:08] *** jfredett joined
[14:12] *** rindolf left
[14:15] *** Spot_ left
[14:16] *** Spot_ joined
[14:17] *** anaeem1_ joined
[14:18] *** zakharyas left
[14:20] *** rindolf joined
[14:21] *** zakharyas joined
[14:22] *** exixt_ is now known as exixt

[14:23] *** hepmee left
[14:23] *** exixt is now known as exixt_

[14:26] *** pecastro left
[14:28] *** kaleem left
[14:41] *** sqirrel_ left
[14:41] *** atta left
[14:43] *** vendethiel left
[14:49] *** virtualsue left
[14:51] *** kjs_ joined
[14:53] *** vendethiel joined
[14:56] *** kjs_ left
[14:57] *** blackbolt left
[14:59] *** virtualsue joined
[15:01] *** anaeem1_ left
[15:01] *** KCL left
[15:02] *** anaeem1_ joined
[15:02] *** atta joined
[15:06] *** anaeem1_ left
[15:07] *** chenryn left
[15:08] *** atta left
[15:08] *** KCL_ joined
[15:15] *** vendethiel left
[15:17] <PerlJam> lizmat++  (release)

[15:17] *** vendethiel joined
[15:31] *** kaare_ joined
[15:32] *** zakharyas left
[15:35] *** anaeem1_ joined
[15:42] *** atta joined
[15:42] <masak> lizmat++

[15:51] *** exixt_ is now known as exixt

[15:57] *** treehug88 joined
[15:59] *** treehug88 left
[16:01] *** treehug88 joined
[16:02] *** treehug88 left
[16:02] *** treehug88 joined
[16:03] *** fhelmberger left
[16:03] *** fhelmberger joined
[16:04] *** bjz left
[16:04] *** kaleem joined
[16:04] *** bjz joined
[16:05] *** adu joined
[16:08] *** fhelmberger left
[16:09] *** adu left
[16:11] *** denis_boyun_ left
[16:23] *** kaleem left
[16:23] *** lucas_ left
[16:23] *** adu joined
[16:25] *** FROGGS left
[16:28] <japhb> Use case: I have a bunch of classes and roles, all working together to implement a subsystem, and to fit within the larger system, they have rather long name prefixes, e.g. Some::Really::Long::Prefix::Subsystem::Foo.  Within the subsystem, I want to save the typing and noise and just use Foo (or at worst Subsystem::Foo).

[16:29] <japhb> What's the right way to do this?  Wrap every compunit in the subsystem with module Some::Really::Long::Prefix::Subsystem { ... } ?

[16:29] <japhb> And if so, how do I properly import between them, so that I load the compunits properly, and can still use the short names?

[16:30] *** kaleem joined
[16:30] <japhb> (And of course, is the intended method for doing this actually implemented in Rakudo yet?)

[16:31] <lizmat> japhb: NYI

[16:31] *** telex left
[16:31] <lizmat> use ShortName:name<Very::Long::Name>;

[16:32] *** kaleem left
[16:32] <lizmat> S11:525

[16:32] <synopsebot> Link: http://perlcabal.org/syn/S11.html#line_525

[16:32] <lizmat> in there it is used to load different versions of a module in the same scope

[16:32] *** telex joined
[16:32] <lizmat> but there is no reason why that wouldn't work for just creating a shorter name

[16:32] *** Sqirrel left
[16:33] <masak> japhb: constant Short = Some::Really::Long::Prefix::Subsystem

[16:33] <masak> and yes, it works in Rakudo today.

[16:34] <lizmat> m: class A::B::C::D::E {}; constant F = A::B::C::D::E; say F.new

[16:34] <camelia> rakudo-moar 7191e4: OUTPUT«A::B::C::D::E.new()␤»

[16:34] <masak> m: class Some::Really::Long::Prefix::Subsystem {}; constant Short = Some::Really::Long::Prefix::Subsystem; say Short.^name

[16:34] <camelia> rakudo-moar 7191e4: OUTPUT«Some::Really::Long::Prefix::Subsystem␤»

[16:34] <lizmat> masak++

[16:34] <masak> discovered this pattern in 2011 while tinkering with Web.pm ;)

[16:39] *** bjz left
[16:39] *** bjz joined
[16:47] <dalek> nqp: 9da30c6 | jonathan++ | tools/build/MOAR_REVISION:

[16:47] <dalek> nqp: Get MoarVM with [ceil|floor]_n fixes.

[16:47] <dalek> nqp: review: https://github.com/perl6/nqp/commit/9da30c6a9e

[16:47] <japhb> Yeah, I've used the constant trick.  But that feels rather hackish, and the NYI use magic that lizmat referred to helps with imports, but doesn't really have the feel of "all these compunits are in some sense in the same namespace, so just use names relative to that namespace in here"

[16:48] *** FROGGS joined
[16:48] <dalek> rakudo/nom: 0c89d51 | jonathan++ | tools/build/NQP_REVISION:

[16:48] <dalek> rakudo/nom: Bump NQP_REVISION for Moar nqp::[ceil|floor]_n fix

[16:48] <dalek> rakudo/nom: 

[16:48] <dalek> rakudo/nom: Fixes bug reported in .round.

[16:48] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0c89d511da

[16:49] <dalek> roast: fe21439 | jonathan++ | S32-num/rounders.t:

[16:49] <dalek> roast: Test for round issue on MoarVM (issue 157).

[16:49] <dalek> roast: review: https://github.com/perl6/roast/commit/fe2143922b

[16:49] <japhb> jnthn: After that floor_n fix, what's the intended way of saying "floor this Real to an Int" or "ceil this Real to Int"?  .floor.Int?

[16:50] *** sqirrel_ joined
[16:51] <FROGGS> o/

[16:52] <jnthn> japhb: Yes, which is how it was on other backends; Moar was inconsistent here.

[16:53] <jnthn> Finally...stout and a useful commit from me. It's been a while. :/

[16:53] <TimToady> japhb: \o/ for both

[16:53] <TimToady> er, jnthn

[16:53] <jnthn> And...ah shit...I gotta get up in 5 hours for medium length flight followed by long flight... :/

[16:53] <FROGGS> jnthn: I'm happy that you are 'back' :o)

[16:53] <jnthn> Can we PLEASE get supersonic air travel back? :)

[16:54] <TimToady> japhb: so something like use prefix Long::Prefix::Name; use Short; ?

[16:54] <jnthn> Anyways, I'm in Europe for the rest of the year.

[16:54] <jnthn> After this little journey back there :)

[16:54] <jnthn> So the tuit supply should mostly improve from here :)

[16:54] <FROGGS> jnthn: hah! that means I can force you to review my stuff :P

[16:54] <jnthn> Yeah, remind me once I'm back.

[16:55] <FROGGS> will do

[16:55] <jnthn> I've gotta do some prep for a course on tue/Wed that I'm teaching fo the first time...

[16:55] <jnthn> But after that, it's just familiar stuff for the rest of the year :)

[16:55] <jnthn> And that's only Java stuff...and tbh, there's really not a lot of Java to know :P

[16:55] <lizmat> fwiw, from Thu / Sun I'll be at the -p2 hackathon in Lyon with hopefully a lot of tuits

[16:56] <jnthn> Cool :)

[16:56] <TimToady> jnthn: except for the, "Oh, don't use that library anymore, use this one now"

[16:56] <jnthn> TimToady: 300 MVC frameworks can't be wrong!

[16:56] * jnthn normally gets out of teaching Java stuff :)

[16:56] <TimToady> just don't get into it :)

[16:57] <jnthn> I tried claiming "I don't know Java", but inconveniently I happen to have done much of the Rakudo JVM port, so... :P

[16:57] <japhb> TimToady: Well, if you're going to offer such nice syntactic relief, I'm happy to accept.  But I more wondered if there was already an intended WTDI.

[16:58] <TimToady> we hadn't take the system of modules into account when we designed :name

[16:58] <japhb> (And that particular syntactic relief above makes me wonder how you 'escape' to specify a full name to something outside the subsystem, such as utility classes)

[16:58] <TimToady> no prefix;  :)

[16:58] *** travis-ci joined
[16:58] <travis-ci> Rakudo build failed. Jonathan Worthington 'Bump NQP_REVISION for Moar nqp::[ceil|floor]_n fix

[16:58] <travis-ci> http://travis-ci.org/rakudo/rakudo/builds/41733931 https://github.com/rakudo/rakudo/compare/7191e4937efe...0c89d511da16

[16:58] *** travis-ci left
[16:58] <japhb> Heh

[16:58] <jnthn> ...uh?

[16:58] <jnthn> :/

[16:59] <jnthn> "Works on my machine"

[16:59] <TimToady> travis is easily upset

[17:00] <jnthn> Oh ffs, some the travis-ci page wnats seems kinda blocked :/

[17:00] <japhb> Huh?

[17:00] <jnthn> I really hope Chian's rise doesn't go much further. I do NOT want the rest of the world to look this way :/

[17:00] <japhb> Oh, gotcha.

[17:00] <jnthn> japhb: Typically, various CDNs are great-firewalled :/

[17:00] <japhb> yeah, sigh

[17:01] <jnthn> japhb: So any site that uses it for their JavaScript or CSS ends up getting busted :/

[17:01] <japhb> ssh tunnel?

[17:01] <jnthn> Yeah, I have one when I need it. :)

[17:01] <jnthn> It just makes things even more crazy slow.

[17:01] <japhb> I bet.

[17:01] <jnthn> So I only turn it on when I need it.

[17:01] <jnthn> Hm, it's the NQP build that failed...

[17:02] <japhb> & # bus stop

[17:02] * jnthn tries to figure out which thingy to click to get the log :)

[17:02] <TimToady> At Frame 255, Instruction 72, op 'floor_n', operand 0, MAST::Local of wrong type (4) specified; expected 6

[17:02] <masak> travis-ci is petty-burgeouis, and must be blocked!

[17:02] <tony-o> masak: ?

[17:02] <masak> 'night, #perl6 :)

[17:03] <jnthn> TimToady: Is that from travis, or you get it also?

[17:03] <TimToady> local

[17:03] <jnthn> :S

[17:03] <jnthn> So...why didn't I get it...

[17:04] <jnthn> oh...'cus I didn't make clean

[17:04] <jnthn> d'oh

[17:05] * [Coke] belatedly kicks off today's daily run.

[17:05] <TimToady> [Coke]: at the moment nqp-moar doesn't compile

[17:06] <FROGGS> hmmm

[17:06] <jnthn> Fix probably about to land, though...

[17:07] <[Coke]> TimToady: daily runs use recommended versions, so hopefully not a problem.

[17:07] <TimToady> "It comes in recommended versions?!?"

[17:08] <jnthn> [Coke]: No, I bumped those, 'cus it worked locally, 'cus I did something wrong... :/

[17:08] <TimToady> it's the end of the world as we know it, and I feel fine...

[17:08] <FROGGS> *g*

[17:08] * jnthn blames 2 days of teaching while jetlagged :P

[17:09] <FROGGS> "are we there yet?"

[17:09] <ugexe> after bouncing some emails back and forth with travis support they encouraged me to open a support ticket about perl6 support. if anyone has anything to add the github issue can be found here: https://github.com/travis-ci/travis-ci/issues/2978

[17:09] <jnthn> (for my fail, not for the end of the world...somebody else can be to blame for that one :P)

[17:10] <dalek> nqp: c885c04 | jonathan++ | src/vm/moar/stage0/ (11 files):

[17:10] <dalek> nqp: Update stage0 for MoarVM, for op change.

[17:10] <dalek> nqp: review: https://github.com/perl6/nqp/commit/c885c047b2

[17:11] <[Coke]> building moar right now, we'll see if nqp barfs. if so, I'll stop and redo

[17:11] <TimToady> npq-moar now compiles

[17:11] *** punter left
[17:12] <dalek> rakudo/nom: 5850d0a | jonathan++ | tools/build/NQP_REVISION:

[17:12] <dalek> rakudo/nom: Get fixed NQP Moar.

[17:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5850d0ae93

[17:12] <FROGGS> nqp built fine here

[17:12] <jnthn> Hopefully that does it.

[17:12] * jnthn sticks his commit bit in the suitcase :)

[17:12] <[Coke]> starting over...

[17:12] <TimToady> and nom

[17:12] <FROGGS> :o)

[17:14] * TimToady has come too far to start over...

[17:14] <FROGGS> TimToady: Perl 7 FTW!!11

[17:15] <jnthn> OK, I guess I better sleep. Or tomorrow I'll be like....plane...gate...what... :)

[17:15] <jnthn> 'night

[17:15] <FROGGS> yesterday I looked the commits I did at the beginning of last year... and it is strange to see what needed to be done back then, and what our problems/todos are today

[17:15] <TimToady> o/

[17:16] <FROGGS> it is a huge jump in quality, that's for sure

[17:16] <FROGGS> gnight jnthn

[17:18] * osfameron puts in a request to go with work to FOSDEM...

[17:21] *** travis-ci joined
[17:21] <travis-ci> NQP build passed. Jonathan Worthington 'Update stage0 for MoarVM, for op change.'

[17:21] <travis-ci> http://travis-ci.org/perl6/nqp/builds/41736136 https://github.com/perl6/nqp/compare/9da30c6a9eac...c885c047b280

[17:21] *** travis-ci left
[17:22] *** ajr joined
[17:22] *** ajr_ left
[17:23] *** ajr is now known as Guest2949

[17:23] *** Guest2949 is now known as ajr_

[17:24] *** pmichaud joined
[17:24] <pmichaud> good morning, #perl6

[17:24] <tadzik> pmichaud! \o/

[17:24] <yoleaux> 20 Nov 2014 16:10Z <PerlJam> tadzik: https://github.com/tadzik/synopsebot/pull/3

[17:24] <[Coke]> now running. lots of deprecated calls going by...

[17:24] <[Coke]> pmichaud, welcome back.

[17:24] <pmichaud> Glad to be back.  

[17:24] <[Coke]> Did you see you're on the hook for a 2015 release? ;)

[17:24] <pmichaud> I did not.

[17:24] * pmichaud looks.

[17:25] <[Coke]> (of 6.0, not of a rakudo compiler)

[17:25] <pmichaud> oh, that!

[17:25] <pmichaud> I did see that there's talk of a 6.0.0 release, yes.  

[17:25] <colomon> pmichaud, o/

[17:25] <pmichaud> I didn't know I'm on the hook for it, though. :)

[17:25] <FROGGS> hi pmichaud 

[17:26] *** travis-ci joined
[17:26] <travis-ci> Rakudo build passed. Jonathan Worthington 'Get fixed NQP Moar.'

[17:26] <travis-ci> http://travis-ci.org/rakudo/rakudo/builds/41736316 https://github.com/rakudo/rakudo/compare/0c89d511da16...5850d0ae9380

[17:26] *** travis-ci left
[17:26] <pmichaud> Anyway, 6.0.0 release in 2015 sounds fine to me.

[17:27] <[Coke]> pmichaud: well, there's 3 big things left on the todo list, and when last we say you, you were thinking about one of them. :)

[17:27] *** anaeem1_ left
[17:27] <pmichaud> Oh, I agree that I'm currently on the hook for GLR.

[17:27] <pmichaud> My current plan is to work on it fairly extensively next week.

[17:28] <pmichaud> I've pretty much reserved next week for that, in keeping with my blogpost on GLR stuff :)

[17:28] <colomon> \o/

[17:32] * TimToady is still working on the longest literal stuff in NFA; alternatives don't quite calculate it right for transitive alternations

[17:33] <pmichaud> Good luck with that.  :)

[17:34] <TimToady> well, I tried doing it in the mergesubstates, but it really needs to be done at the node->nfa translation level to make sure alternatives with different longlits end up with different fates

[17:34] <TimToady> assuming we keep it attached to the fate

[17:35] <TimToady> well, and to make sure we're looking at the correct alternative's literals

[17:36] <TimToady> there seems to be some cross-clobbering of literal lengths going on with the current approach, anyway

[17:36] <[Coke]> question about the release: I don't know if this was discussed anywhere, but are we going to call a moarvm-only 6.0.0 release ok? do we need/expect/want parity on java/parrot?

[17:37] <[Coke]> Or will we go with something like the feature list we have now, codified in the release docs?

[17:37] <TimToady> moarvm for sure, jvm a solid maybe, parrot unlikely for full 6.0 blessing as it stands now

[17:37] <FROGGS> +1 for rakudo@moarvm being the only one that implements most of 6.0.0 and therefore will be called a Perl 6 compliant compiler

[17:37] <TimToady> well, it'll be defined by the tests, not by fiat :)

[17:37] <pmichaud> to me a bigger question is:  by 6.0.0 release are we referring to spec, compiler, or both simultaneously?

[17:38] <TimToady> a specified set of tests, and and compiler that passes them

[17:38] <TimToady> *a

[17:38] <FROGGS> both go hands in hands

[17:38] <pmichaud> I'm fine with there being only one compiler that passes the suite.

[17:38] <FROGGS> because you don't really know that the tests are correct until you actually run them

[17:38] <TimToady> at some point we go through our current tests and mark those that are post-6.0

[17:38] <[Coke]> hell, if we're going by tests, we probably have more work to do there than we do on the compiler.

[17:39] <FROGGS> [Coke]: can you explain that?

[17:39] <TimToady> I don't expect the test suite to be perfect before 6.0 comes out

[17:39] <[Coke]> TimToady: I imagine we'd do that in git. "tag, these are the 6.0.0 tests"

[17:39] <pmichaud> please, not a git tag

[17:39] <[Coke]> FROGGS: do you think the spectest suite covers everything we intend the spec to cover at this point?

[17:39] <pmichaud> I proposed in salzburg that it be an actual extraction.

[17:39] <[Coke]> pmichaud: why not? how else would you mark them?

[17:40] <[Coke]> ... which we'd extract from git based on the tag.

[17:40] <FROGGS> [Coke]: tests tend to never cover anything really

[17:40] <TimToady> we'd like to freeze a set  of tests with no fudging

[17:40] <pmichaud> [Coke]: because the current roast suite contains tests that aren't 6.0.0

[17:40] <[Coke]> also, not everyone was in salzburg, nor were there minutes. :0

[17:40] <[Coke]> er, :)

[17:40] <[Coke]> pmichaud: then we fix that.

[17:40] <pmichaud> we don't want to eliminate those tests either

[17:40] <[Coke]> you already have to fix it to do the extraction. let's fix it in our version control system.

[17:40] <pmichaud> because they're post-6.0.0

[17:40] <pmichaud> no, I proposed we simply have a set of 6.0.0 fudge markers.

[17:41] <pmichaud> then we run fudge on roast to produce the (extracted) 6.0.0 tests

[17:41] <pmichaud> and then commit that somewhere.

[17:41] <[Coke]> FROGGS: which is a problem if that's our spec declaration.

[17:41] <TimToady> trickiest bit is making sure the plan is correct

[17:41] *** exixt is now known as exixt_

[17:41] <[Coke]> pmichaud: if you're marking the tests with a fudge marker, then combine that with a git tag. 

[17:41] <pmichaud> I have no problem with the fudging simply marking a set of tests as "skipped: not 6.0.0"

[17:41] <FROGGS> [Coke]: I wanted to say that tests are never enough nor perfect, you just have to be happy with it or tweak it so you think they are okay

[17:42] <pmichaud> [Coke]: I'm not saying we can't have a 6.0.0 tag, I'm saying that a 6.0.0 tag is not sufficient nor should it be the primary marker

[17:42] <japhb> ugexe++ # Pushing for official Travis support for Rakudo

[17:43] *** virtualsue left
[17:43] * TimToady thinks he would prefer to see a branch for each nailed-down version of the tests

[17:43] <pmichaud> I'm okay with a branch, also.

[17:43] <[Coke]> FROGGS: I think we've established that "happy" is not one of my resting states. I'm agreeing. I'm saying that we are missing more tests to mark edge cases or behavior that is "same as perl5 so we didn't document it" (or, unfudging tests that are in there but not passing) than we have new compiler code to write.

[17:43] <pmichaud> but it needs to be something that is easy to generate from roast

[17:43] <pmichaud> without a lot of hand-tweaking

[17:44] <TimToady> we have a few more tests than Perl 1 came with :)

[17:44] <FROGGS> [Coke]: correct... I think we agreed on a extensive review of roast :o)

[17:44] *** ajr_ left
[17:45] <[Coke]> FROGGS: you and I just now? or in salzburg?

[17:45] <TimToady> it's in the air :)

[17:45] *** raiph joined
[17:45] <pmichaud> at this stage, I primarily would like to see agreement (or an official Rule #1 declaration) that the test suite defines the "official spec".  After that, I'd like us to have a (set of?) online meeting(s) to get general agreement about what is in 6.0.0 and what isn't.

[17:46] <pmichaud> *then* I think we should focus on the exact mechanism by which we produce the 6.0.0 test suite.

[17:46] <FROGGS> [Coke]: not now... I expect there will be some discussion synopsis by synopsis where tests will be marked and cleaned up

[17:46] <FROGGS> pmichaud: +1 +1 +1

[17:49] *** ajr_ joined
[17:49] <TimToady> there are two main corners we'd like not to paint ourselves into: 1) can't implement in 2015, or 2) commits us to a coarse from which we cannot evolve in the direction we eventually want to go

[17:50] <TimToady> 2 is the primary motivation for GLR, NSA, and NFG

[17:50] <TimToady> is also why I'm playing with longlit right now to make sure it isn't a big mistake

[17:51] *** sqirrel__ joined
[17:51] <pmichaud> Perhaps a good first-step would be to have people identify any parts of the synopses they feel should not be in the 6.0.0 spec, either because of #1 or #2

[17:51] *** FROGGS_ joined
[17:52] <pmichaud> for example, I'm still uncomfortable with commiting much of IO to 6.0.0

[17:52] <pmichaud> (because it's just gone through some major revisions)

[17:52] <TimToady> we saw how well that worked out for Java >.<

[17:53] <pmichaud> well, I could be persuaded to change my mind as we get a little farther along

[17:53] <TimToady> no, I'm agreeing

[17:53] <TimToady> we'd like to avoid Flavor of the Week Syndrome in IO

[17:53] <pmichaud> exactly.

[17:54] <TimToady> same goes for GUI

[17:54] <TimToady> I guess it's usually Flavor of the Month, at last in ice cream...

[17:54] <TimToady> *least

[17:55] *** sqirrel_ left
[17:55] *** FROGGS left
[17:55] <TimToady> at least at B&R...

[17:56] <TimToady> at least in the US...

[17:56] <pmichaud> It's been a long time since I've had any flavor other than "Pralines 'n Cream" at B&R

[18:02] <timotimo> our sockets are still pretty deficient... 

[18:02] <timotimo> last I saw we did not have udp

[18:02] <timotimo> not to mention raw sockets or stuff like that 

[18:03] <pmichaud> next week I think I'll spend a little time organizing a spreadsheet or document where we can tally features w.r.t. 6.0.0 spec

[18:04] <timotimo> ideally we would also offer advanced stuff like tcp fast open somehow 

[18:06] *** KCL_ left
[18:10] <TimToady> ideally everything is both perfectly integrated and perfectly decoupled :P

[18:12] <pmichaud> I have to go prepare for my seminar tomorrow; bbl

[18:16] *** itz_ is now known as itz

[18:28] *** ajr_ left
[18:29] *** vendethiel left
[18:30] <gtodd> http://www.newyorker.com/magazine/2014/11/24/programmers-price   merry Xmas :-)

[18:33] <gtodd> TimToady: integration and decoupling - an admirable goal ...  like the EU or Canadian federalism 

[18:33] <gtodd> :)

[18:34] *** vendethiel joined
[18:34] <dalek> ecosystem: adb8184 | tony-o++ | META.list:

[18:34] <dalek> ecosystem: Slang::SQL

[18:34] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/adb81848fd

[18:35] <gtodd> it would be cool if perl6 had a good,  preferred, cross platform, easy to use (or leave out) GUI ... that was not Tk :-P

[18:37] <nine> gtodd: you mean Qt?

[18:37] <gtodd> hehe :-)  no ...  SDL!! besides a toolkit GUI is going to be "the web" ... some used in house, eat own dog food, ECMAscript library and HTML5 :-P

[18:38] <woolfy> pmichaud++ [Coke]++ FROGGS++ TimToady++  for nice discussion of Perl 6.0.0 (very clarifying)

[18:38] <gtodd> just commenting on TimToady's flavour of month warning 

[18:38] <moritz> lizmat++ # release

[18:41] *** sqirrel__ left
[18:48] <salparadise> so to get perl6 running on OS X  I need to first install Rakudo, or is that all I need?

[18:48] <salparadise> oh sweet

[18:48] <salparadise> brew search raku                                                                                                                                                                                                              ~

[18:48] <salparadise> rakudo-starbrew search raku                                                                                                                                                                                                              ~

[18:49] <salparadise> sorry

[18:51] *** kaare__ joined
[18:53] *** Ugator1 joined
[18:53] *** kaare_ left
[18:55] *** Mso150 joined
[18:55] *** Ugator left
[18:55] <salparadise> so 'say' is a method for string object (perl6 -e '"HI".say') but it is not listed here (perl6 -e 'say "".^methods();'), how does that work?

[18:55] <salparadise> (just started playing with perl6) 

[18:57] *** smls joined
[18:58] <TimToady> m: say "".^methods

[18:58] <camelia> rakudo-moar 5850d0: OUTPUT«WHY BUILD Int Num chomp chop substr pred succ match ords samecase samespace trim-leading trim-trailing trim encode wordcase trans indent codes path unival univals WHICH Bool Str Stringy DUMP ACCEPTS Numeric gist perl comb subst lines split words␤»

[18:58] <TimToady> m: say "".^methods(:all)

[18:58] <camelia> rakudo-moar 5850d0: OUTPUT«WHY BUILD Int Num chomp chop substr pred succ match ords samecase samespace trim-leading trim-trailing trim encode wordcase trans indent codes path unival univals WHICH Bool Str Stringy DUMP ACCEPTS Numeric gist perl comb subst lines split words abs conj s…»

[18:59] <[Coke]> oh, right, lizmat++ for release.

[18:59] <TimToady> by default, you only get the methods that are not "universal"

[18:59] <[Coke]> btw, TimToady, I found us a new six-related logo:

[18:59] <TimToady> flags over Texas?

[18:59] <[Coke]> http://imgur.com/gallery/ijaaG (very very slightly nsfw)

[19:00] *** Tekk_` is now known as Tekk_

[19:01] <TimToady> my daughter used to stick up three fingers, and say "Read between the lines."

[19:02] <salparadise> TimToady: I see, so "say" is a method for all objects (Universal) ?

[19:03] <lizmat> m: say Any.^methods

[19:03] <camelia> rakudo-moar 5850d0: OUTPUT«infinite exists_key exists_pos delete_key delete_pos list flat eager hash Parcel elems end squish rotor reverse sort values keys kv pairs reduce combinations permutations unique uniq pick roll classify categorize lol map for flatmap duckmap deepmap tree Ar…»

[19:03] <TimToady> m: say Cool.^methods

[19:03] <camelia> rakudo-moar 5850d0: OUTPUT«abs conj sqrt sign rand sin asin cos acos tan atan atan2 sec asec cosec acosec cotan acotan sinh asinh cosh acosh tanh atanh sech asech cosech acosech cotanh acotanh cis log exp round roots log10 unpolar floor ceiling truncate chars codes fmt substr uc lc …»

[19:03] <TimToady> m: say Mu.^methods

[19:03] <camelia> rakudo-moar 5850d0: OUTPUT«ACCEPTS WHERE WHICH take WHY set_why Bool so not defined new CREATE bless BUILDALL BUILD_LEAST_DERIVED Numeric Real Str Stringy item say print note gist perl DUMP DUMP-PIECES DUMP-OBJECT-ATTRS isa does can clone Capture Method+{<anon>}.new() dispatch:<::> …»

[19:04] <TimToady> so in Mu, the Most Universal

[19:04] <woolfy> say no more, say no more...

[19:04] <salparadise> I see, I like what I see, thanks!

[19:05] <smls> TimToady: What order are the methods listed in? It's neither random, nor alphabetical.

[19:05] *** guru joined
[19:06] <lizmat> .oO( maybe we should have a Str and Num candidate for .grep )

[19:06] *** guru is now known as Guest21949

[19:06] <lizmat> Cool.^methods.grep("say")

[19:06] *** Guest21949 is now known as ajr_

[19:06] <TimToady> smls: I suspect it's unordered like the keys of a hash

[19:07] <TimToady> m: .say for ''.can('say')

[19:07] <camelia> rakudo-moar 5850d0: OUTPUT«say␤»

[19:07] <TimToady> m: .signature.say for ''.can('say')

[19:07] <camelia> rakudo-moar 5850d0: OUTPUT«:(Mu: Any |)␤»

[19:07] <TimToady> m: .signature.say for 42.can('say')

[19:07] <camelia> rakudo-moar 5850d0: OUTPUT«:(Mu: Any |)␤»

[19:08] <TimToady> m: .signature.say for 42.can('floor')

[19:08] <camelia> rakudo-moar 5850d0: OUTPUT«:(Int:D: *%_)␤:(Cool: *%_)␤»

[19:08] * TimToady is kinda starting to like this language too :)

[19:09] <smls> :P

[19:10] <smls> lizmat: a Str candidate for grep wouldn't help in this case, because you need to call .name or .gist to get a method's name; .Str does not work...

[19:10] <smls> m: say Mu.^methods.grep(*.name eq 'say')

[19:10] <camelia> rakudo-moar 5850d0: OUTPUT«say␤»

[19:12] *** Ugator1 left
[19:12] <smls> m: say Mu.^methods.grep(*.name ~~ /^s/)

[19:12] <camelia> rakudo-moar 5850d0: OUTPUT«Code object coerced to string (please use .gist or .perl to do that)  in any !cursor_init at gen/moar/stage2/QRegex.nqp:628␤␤␤»

[19:13] <smls> ^^ Why does ~~ not participate in WhateverCode closures?

[19:15] <TimToady> because it does other stuff with *, same reason .. doesn't

[19:15] <smls> What stuff does it do with * on the left-hand-side?

[19:16] <TimToady> m: say *.foo ~~ WhateverCode

[19:16] <camelia> rakudo-moar 5850d0: OUTPUT«True␤»

[19:16] <TimToady> and it's kinda related to why so and not don't autothread junctions

[19:17] <TimToady> you have to have some functions that are stoppers

[19:17] *** jluis joined
[19:17] <TimToady> otherwise it's turtles xx *

[19:17] *** vendethiel left
[19:18] <smls> well, closing parenthesis are always available as stoppers...

[19:19] <smls> hm, no that's actually not true

[19:20] <TimToady> whatevers generally only stop dwimming when passed as an argument to something

[19:20] <TimToady> and in the case of ~~, the lhs is really an argument to .ACCEPTS

[19:20] *** vendethiel joined
[19:20] <smls> fair enough

[19:22] *** jluis left
[19:22] <TimToady> but yeah, it's always a bit arbitrary where you put the circularity saws, and other limits of dwimmery

[19:22] * TimToady fondly remembers when we cut down the rules for placeholders from about 8 rules to 1

[19:23] <nebuchadnezzar> Hello

[19:23] <TimToady> though in fact we cheat ever so slightly on $_, and don't count it as a placeholder inside blocks that can take no args, such as hash subscripts

[19:23] <TimToady> or string interpolations

[19:24] <TimToady> nebuchadnezzar: hi, been a while

[19:24] <nebuchadnezzar> yes

[19:25] <PerlJam> TimToady: you knew him when he was king?!?  Damian was right about you!  ;)

[19:26] <nebuchadnezzar> I have a stupid question, is there a may to have some kind of self-documentation, like in emacs, I start an interactive shell and ask documentation of objects, methods...

[19:27] <TimToady> we have the mechanism in place, but not all the docs attached yet

[19:27] <hoelzro> golfed code and issue created for colomon's ABC issue: https://rt.perl.org/Ticket/Display.html?id=123272&results=b86868580a3e48bcd3d889d99465b26a

[19:28] <nebuchadnezzar> TimToady: I just see the .WHY

[19:28] <TimToady> we do have some docs generated already from signatures and such

[19:29] <nebuchadnezzar> TimToady: where can I find examples to get my hands on it?

[19:29] <salparadise> nebuchadnezzar: I was just looking here for instrospection http://doc.perl6.org/language/objects#Meta-Object_Programming_and_Introspection

[19:30] <nebuchadnezzar> I'm reading http://doc.perl6.org/language/mop

[19:31] <colomon> hoelzro++ # never expected someone to manage to golf that down

[19:31] <hoelzro> colomon: don't thank me until you look at the "golfed" version =/

[19:31] <hoelzro> it's still quite large, and makes no sense

[19:31] <hoelzro> but it's a start

[19:34] <lizmat> FWIW, I'm pretty sure it has something to do with things leaking into precomp versions that shouldn't

[19:34] <lizmat> and/or things that do not get out of precomp properly

[19:34] <lizmat> this is also what is breaking panda with @*INC being populated lazily

[19:35] <lizmat> (I think)

[19:36] <moritz> lizmat: did you get around to record the 'git clean -xdn' output in the different build dirs?

[19:36] <lizmat> moritz: no, I haven't

[19:36] <lizmat> but I also didn't do the git clean yet, will do so now

[19:37] <lizmat> from nqp, right?

[19:37] <lizmat> or rakudo?

[19:37] <moritz> lizmat: both rakudo and nqp

[19:38] *** jluis joined
[19:39] <hoelzro> lizmat: that seems like a reasonable guess

[19:41] <lizmat> moritz: rakudo cleans: https://gist.github.com/lizmat/2107975f24e40f1e99c1

[19:43] *** vendethiel left
[19:43] <lizmat> moritz: nqp cleans: https://gist.github.com/lizmat/e17b39a6dfc0dcd56689

[19:43] <dalek> perl6-roast-data: d49814f | coke++ | / (5 files):

[19:43] <dalek> perl6-roast-data: today (automated commit)

[19:43] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/d49814f08b

[19:43] <lizmat> moritz: is that what you expected?

[19:43] <moritz> lizmat: yes, thank you

[19:43] <lizmat> the nqp.parrot one seems to include stuff that is not needed

[19:44] *** woolfy left
[19:44] <[Coke]> jvm: 19 failures; moar-jit: 728, moar-nojit: 10; parrot: 11

[19:45] *** vendethiel joined
[19:45] *** woolfy joined
[19:47] <FROGGS_> 728 -.-

[19:47] <[Coke]> welcome to OS X. :(

[19:48] <FROGGS_> :/

[19:48] *** rindolf left
[19:49] <moritz> lizmat: it seems that the moar checkout had lots of parrot stuff in it

[19:50] *** ajr_ left
[19:51] *** ajr joined
[19:51] *** ajr is now known as Guest8962

[19:51] <lizmat> moritz: nqp or rakudo ?

[19:51] *** Guest8962 is now known as ajr_

[19:51] <moritz> lizmat: rakudo

[19:52] <dalek> Inline-Python: 5acf624 | nine++ | / (3 files):

[19:52] <dalek> Inline-Python: Allow passing Perl 6 object safely through Python space

[19:52] <dalek> Inline-Python: 

[19:52] <dalek> Inline-Python: We can now pass Perl 6 objects to Python functions and get them back unharmed.

[19:52] <dalek> Inline-Python: review: https://github.com/niner/Inline-Python/commit/5acf624ced

[19:52] <lizmat> that could well be: that checkout started life as a multi-backend version

[19:52] <[Coke]> ah. some of these failures are because deprecation warnings are checking for single deprecations, but there are extra deprecations everywhere.

[19:52] <nine> Feels good to be committing again :)

[19:52] <lizmat> nine++

[19:52] <[Coke]> so we're getting "saw 2..." instead of "saw 1..."

[19:52] <lizmat> [Coke]: is there an easy way for me to check for those ?

[19:53] <TimToady> nine: you planning to be bug compatible with the GIL :)

[19:53] <[Coke]> in S02-types/deprecations.t

[19:53] <[Coke]> reduce the amount of exact match, and figure out what text is the minimum, do a regexp?

[19:53] <moritz> TimToady: many pythonians consider the GIL a feature

[19:54] <lizmat> [Coke]: for those tests, the texts should match exactly

[19:54] <nine> TimToady: sadly CPython does not support multiplicity. So I cannot do the trick of running multiple Python interpreters in multiple Perl 6 threads ;)

[19:54] *** sqirrel__ joined
[19:54] <lizmat> if not, they either need to be fixed, or the deprecation adapted

[19:54] <[Coke]> lizmat: given that the core setting has deprecations in it now, all those bets are off, I think.

[19:55] <lizmat> the core shouldn't complain about its own deprecations: they should be fixed  :-)

[19:55] <[Coke]> m: my $line = $?LINE; Decrease;

[19:55] <camelia> rakudo-moar 5850d0: OUTPUT«Saw 1 call to deprecated code during execution.␤================================================================================␤Sub Decrease (from GLOBAL) called at:␤  /tmp/5lfIPHXq6u, line 1␤Deprecated since v2013.11, will be removed with release…»

[19:56] <lizmat> argh, forgot to remove that one...

[19:56] <lizmat> better do that right away

[19:58] <hoelzro> are sub foo(--> Int) { ... } and sub foo() returns Int { ... } semantically equivalent

[19:58] <hoelzro> ?

[19:59] <moritz> yes

[19:59] <[Coke]> lizmat: also: S02-types/isDEPRECATED.t :: not ok 2 - right deprecation for a()

[20:00] <hoelzro> (also, can … be used instead of ...?)

[20:00] <hoelzro> ok, thanks moritz 

[20:00] *** darutoko left
[20:07] <nine> Cool! Just opened my first Qt window in Perl6 using Inline::Python and PyQt4.

[20:07] <lizmat> nine++

[20:07] <woolfy> nine++

[20:08] *** ajr_ left
[20:11] *** beastd joined
[20:11] *** BenGoldberg joined
[20:12] *** guru joined
[20:13] *** guru is now known as Guest64275

[20:19] *** Guest64275 left
[20:20] <dalek> roast: 0db5a86 | (Elizabeth Mattijsen)++ | S02-types/deprecations.t:

[20:20] <dalek> roast: Remove tests for Increase/Decrease depreciation

[20:20] <dalek> roast: review: https://github.com/perl6/roast/commit/0db5a863c8

[20:20] <[Coke]> weird: Bump NQP_REVISION for Moar nqp::[ceil|floor]_n fix is shown as the first bad commit breaking integration/advent2011-day10.t ... but my bisect never rebuilt nqp...

[20:20] <[Coke]> is that the brokenness from earlier in the day, I wonder.

[20:23] *** beastd|2 joined
[20:23] *** beastd left
[20:26] <dalek> rakudo/nom: b059a8a | (Elizabeth Mattijsen)++ | src/core/Order.pm:

[20:26] <dalek> rakudo/nom: Remove Increase/Decrease

[20:26] <dalek> rakudo/nom: 

[20:26] <dalek> rakudo/nom: They were deprecated for over a year now.

[20:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b059a8ab69

[20:28] <PerlJam> nine: Should Python's None map to Any, or should it really be Nil?  None is supposed to represent that absense of value and that very much sounds like Nil to me. 

[20:28] <PerlJam> s/that/the/

[20:29] <nine> PerlJam: I've always seen None as the exact equivalent to Perl 5's undef.

[20:30] *** raiph left
[20:31] <nine> >>> a = [None]

[20:31] <nine> >>> len(a)

[20:31] <nine> 1

[20:31] <PerlJam> nine: Then, maybe it should be Mu rather than Any.

[20:32] <PerlJam> nine: see S02:1340

[20:32] <synopsebot> Link: http://perlcabal.org/syn/S02.html#line_1340

[20:32] <dalek> rakudo/nom: a75337b | (Elizabeth Mattijsen)++ | src/core/CompUnit.pm:

[20:32] <dalek> rakudo/nom: Fix internal deprecation message

[20:32] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a75337bd65

[20:33] <nine> PerlJam: then the same should be true for undef <-> Mu in Inline::Perl5

[20:33] <nine> instead of undef <-> Any

[20:34] <PerlJam> aye, I guess I just didn't notice it in Inline::Perl5 for some reason

[20:34] <TimToady> the absence of a value should really be Nil, but we haven't fixed its interpolating to () in a list yet

[20:35] <nine> Neither Python's None, nor Perl 5's undef interpolate to () in lists, so Nil seems definitely wrong to me.

[20:36] <TimToady> it's not supposed to interpolate to () in lists

[20:36] *** ajr_ joined
[20:36] <moritz> m: say 1 for Nil

[20:36] <camelia> rakudo-moar 5850d0: ( no output )

[20:36] <moritz> I guess it's not that easy to fix :(

[20:37] <TimToady> but these days Mu is more like the mother of all concepts, not the absence of a value

[20:37] <moritz> fwiw when I'd use undef in p5, I tend to use Any in p6

[20:38] <nine> Oh, have to start cooking right now. Girlfriend's coming home in < 30 minutes

[20:38] <TimToady> you'd think it was a friday or somethin'

[20:49] <dalek> panda: 1184fef | (Elizabeth Mattijsen)++ | / (6 files):

[20:49] <dalek> panda: Fix deprecations

[20:49] <dalek> panda: review: https://github.com/tadzik/panda/commit/1184fef82e

[20:50] <lizmat> panda should be free of deprecation messages now

[20:50] <lizmat> please let me know if you see any nonetheless

[20:52] <btyler> I'm seeing deprecation messages from inside m-CORE.setting about path; I did 'make clean/realclean' for moar, nqp, and rakudo and built everything over again, but they're still popping up. am I missing an important step? all repos are at HEAD

[20:53] <moritz> btyler: sounds like a bug

[20:53] <[Coke]> I thought liz -just- fixed that.

[20:53] <[Coke]> do you have a75337b ?

[20:54] <btyler> which repo?

[20:54] <moritz> rakudo

[20:54] <moritz> from 20min ago

[20:54] <btyler> oh bingo, yeah, I guess I just was unlucky enough to pull before that got fixed :)

[20:57] <itz> I see no panda  deprecation messages now

[20:57] <itz> as opposed to "quite a few" before ;)

[20:58] *** anaeem1 joined
[20:59] *** anaeem1 left
[20:59] <lizmat> sorry, but had to wait until the release before I could fix those

[20:59] *** anaeem1 joined
[20:59] <btyler> great! no more deprecation warnings. liz++

[21:00] <btyler> booked my fosdem lodging today, looking forward to meeting some p6 folks

[21:00] <lizmat> btyler++  :-)

[21:00] <lizmat> .oO( note to self: need to fix lodging as well )

[21:02] *** Mso150 left
[21:03] *** adu left
[21:03] *** anaeem1__ joined
[21:03] *** anaeem1 left
[21:05] *** sqirrel__ left
[21:09] *** kaare__ left
[21:13] *** KCL_ joined
[21:14] <dalek> rakudo/nom: 849e3c1 | (Elizabeth Mattijsen)++ | docs/ChangeLog:

[21:14] <dalek> rakudo/nom: Mention demise of Increase/Decrease

[21:14] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/849e3c1ccf

[21:15] *** treehug88 left
[21:19] *** anaeem1__ left
[21:21] *** treehug88 joined
[21:21] *** treehug88 left
[21:22] *** treehug88 joined
[21:22] *** Diederich joined
[21:28] <[Coke]> seems like the generation of perl6 should depend on the core setting finishing.

[21:29] <[Coke]> (otherwise you end up with a ./perl6 that dies really quick)

[21:29] <[Coke]> s/end up/could end up/

[21:29] <dalek> rakudo/nom: 96b9a86 | (Tobias Leich)++ | src/Perl6/Actions.nqp:

[21:29] <dalek> rakudo/nom: compile EXPORT::ALL to EXPORT::<ALL>

[21:29] <dalek> rakudo/nom: 

[21:29] <dalek> rakudo/nom: This has the benefit that it does not blow up anymore. Resolves RT #118501.

[21:29] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/96b9a86548

[21:29] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=118501

[21:30] <timotimo> "the benefit"

[21:30] <timotimo> %)

[21:30] <FROGGS_> what?

[21:31] <FROGGS_> m: say EXPORT::ALL

[21:31] <camelia> rakudo-moar a75337: OUTPUT«Could not find symbol '&ALL'␤  in method <anon> at src/gen/m-CORE.setting:13777␤  in any find_method_fallback at src/gen/m-Metamodel.nqp:2725␤  in any find_method at src/gen/m-Metamodel.nqp:988␤  in block <unit> at /tmp/CpJp2nW_Wz:1␤␤»

[21:31] <FROGGS_> m: say EXPORT::ALL::

[21:31] <camelia> rakudo-moar a75337: OUTPUT«Could not find symbol '&ALL'␤  in method <anon> at src/gen/m-CORE.setting:13777␤  in any find_method_fallback at src/gen/m-Metamodel.nqp:2725␤  in any find_method at src/gen/m-Metamodel.nqp:988␤  in block <unit> at /tmp/z64XXtLy_c:1␤␤»

[21:31] <FROGGS_> both will do something sane in a bit

[21:32] <dalek> panda: 59f88e4 | timo++ | bin/redpanda:

[21:32] <dalek> panda: redpanda needs to have a hashbang

[21:32] <dalek> panda: 

[21:32] <dalek> panda: because it gets installed via bin/

[21:32] <dalek> panda: review: https://github.com/tadzik/panda/commit/59f88e4137

[21:36] <japhb> I forget, what's redpanda?

[21:37] <dalek> roast: b33ad00 | (Tobias Leich)++ | S11-modules/export.t:

[21:37] <dalek> roast: RT #118501 add tests for EXPORT::ALL

[21:37] <dalek> roast: review: https://github.com/perl6/roast/commit/b33ad00eb6

[21:37] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=118501

[21:37] <timotimo> i have no idea

[21:37] <timotimo> all i know is i can't run it %)

[21:39] <dalek> panda: 0be4b82 | (Elizabeth Mattijsen)++ | TODO:

[21:39] <dalek> panda: Mention magic incantation for updating submodules

[21:39] <dalek> panda: review: https://github.com/tadzik/panda/commit/0be4b82a19

[21:45] *** Ugator joined
[21:48] <Diederich> ~~~

[21:51] *** smls left
[21:52] <dalek> rakudo/newio: 0c89d51 | jonathan++ | tools/build/NQP_REVISION:

[21:52] <dalek> rakudo/newio: Bump NQP_REVISION for Moar nqp::[ceil|floor]_n fix

[21:52] <dalek> rakudo/newio: 

[21:52] <dalek> rakudo/newio: Fixes bug reported in .round.

[21:52] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/0c89d511da

[21:52] <dalek> rakudo/newio: 5850d0a | jonathan++ | tools/build/NQP_REVISION:

[21:52] <dalek> rakudo/newio: Get fixed NQP Moar.

[21:52] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/5850d0ae93

[21:52] <dalek> rakudo/newio: b059a8a | (Elizabeth Mattijsen)++ | src/core/Order.pm:

[21:52] <dalek> rakudo/newio: Remove Increase/Decrease

[21:52] <dalek> rakudo/newio: 

[21:52] <dalek> rakudo/newio: They were deprecated for over a year now.

[21:52] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/b059a8ab69

[21:52] <dalek> rakudo/newio: a75337b | (Elizabeth Mattijsen)++ | src/core/CompUnit.pm:

[21:52] <dalek> rakudo/newio: Fix internal deprecation message

[21:52] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/a75337bd65

[21:52] <dalek> rakudo/newio: 849e3c1 | (Elizabeth Mattijsen)++ | docs/ChangeLog:

[21:52] <dalek> rakudo/newio: Mention demise of Increase/Decrease

[21:52] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/849e3c1ccf

[21:52] <dalek> rakudo/newio: 96b9a86 | (Tobias Leich)++ | src/Perl6/Actions.nqp:

[21:53] <dalek> rakudo/newio: compile EXPORT::ALL to EXPORT::<ALL>

[21:53] <dalek> rakudo/newio: 

[21:53] <dalek> rakudo/newio: This has the benefit that it does not blow up anymore. Resolves RT #118501.

[21:53] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=118501

[21:53] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/96b9a86548

[21:53] <dalek> rakudo/newio: e90a169 | (Elizabeth Mattijsen)++ | / (5 files):

[21:53] <dalek> rakudo/newio: Merge branch 'nom' into newio

[21:53] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/e90a169da7

[21:57] *** awwaiid left
[22:05] <FROGGS_> TimToady: can you please judge? https://rt.perl.org/Ticket/Display.html?id=123216

[22:05] <FROGGS_> m: say EXPORT::ALL

[22:05] <camelia> rakudo-moar a75337: OUTPUT«Could not find symbol '&ALL'␤  in method <anon> at src/gen/m-CORE.setting:13777␤  in any find_method_fallback at src/gen/m-Metamodel.nqp:2725␤  in any find_method at src/gen/m-Metamodel.nqp:988␤  in block <unit> at /tmp/YGzRAQfvZ6:1␤␤»

[22:06] <lizmat> FROGGS_: I'm still getting that at HEAD

[22:06] <FROGGS_> O.o

[22:07] <FROGGS_> lizmat: ohh, it pops into existance when you actually export something >.<

[22:07] <FROGGS_> $ perl6-m -e 'sub a is export { "r_a" }; say EXPORT::ALL::'

[22:07] <FROGGS_> "\&a" => sub a () { #`(Sub|97921928) ... }

[22:07] <FROGGS_> m: sub a is export { "r_a" }; say EXPORT::ALL::

[22:07] <camelia> rakudo-moar a75337: OUTPUT«===SORRY!===␤Object of type ALL in QAST::WVal, but not in SC␤»

[22:07] <FROGGS_> m: sub a is export { "r_a" }; say EXPORT::ALL

[22:07] <camelia> rakudo-moar a75337: OUTPUT«===SORRY!===␤Object of type ALL in QAST::WVal, but not in SC␤»

[22:08] <dalek> rakudo/nom: 113ede5 | (Elizabeth Mattijsen)++ | / (4 files):

[22:08] <dalek> rakudo/nom: Introduce placeholder IOU.pm

[22:08] <dalek> rakudo/nom: 

[22:08] <dalek> rakudo/nom: To facilitate switching between nom and newio branches

[22:08] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/113ede59cb

[22:08] <FROGGS_> so, for that case only sadly

[22:08] <FROGGS_> well okay, it says "Could not find symbol '&ALL'", which is okayish

[22:09] <FROGGS_> perl6-m -e 'sub a is export(:blörg) { "r_a" }; say EXPORT::blörg::'

[22:09] <FROGGS_> "\&a" => sub a () { #`(Sub|74795960) ... }

[22:10] <lizmat> FROGGS_: BTW, on JVM, the original sub and the one in EXPORT have different .WHICHes

[22:10] <lizmat> any idea where that is coming from ?

[22:10] *** adu joined
[22:11] <FROGGS_> yes, hold on

[22:11] <FROGGS_> lizmat: from that commit: https://github.com/rakudo/rakudo/commit/393acf095d

[22:11] <FROGGS_> I tried to get to the bottom of that yesterday, but failed

[22:12] <FROGGS_> because it is sooo slooooooow

[22:14] <lizmat> I know the feeling having done the release yesterday

[22:15] *** adu left
[22:16] <FROGGS_> yeah

[22:16] <FROGGS_> :/

[22:16] *** adu joined
[22:21] *** adu left
[22:24] *** beastd|2 is now known as beastd

[22:30] <bartolin> FROGGS_: when you commented on RT #123216: where you aware of RT #116244? both fail with the same error message

[22:30] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=123216

[22:31] <FROGGS_> it is the same issue, aye

[22:31] <tony-o> how often is panda's module list cached for me to update, or is it immediate?

[22:32] <bartolin> aha, that's what I wanted to hear ;-) FROGGS_++

[22:32] <FROGGS_> bartolin: I combined them, thanks :o)

[22:32] <FROGGS_> bartolin++ # you are awesome

[22:35] *** esaym153 left
[22:35] <bartolin> oh, thanks. just trying to adept to the standard of #perl6 ;-)

[22:36] *** jluis left
[22:39] <FROGGS_> *g*

[22:39] <FROGGS_> gnight

[22:40] <lizmat> good night, FROGGS_ !

[22:40] <bartolin> o/

[22:47] *** esaym153 joined
[22:52] *** Mso150 joined
[23:07] <dalek> rakudo/newio: 113ede5 | (Elizabeth Mattijsen)++ | / (4 files):

[23:07] <dalek> rakudo/newio: Introduce placeholder IOU.pm

[23:07] <dalek> rakudo/newio: 

[23:07] <dalek> rakudo/newio: To facilitate switching between nom and newio branches

[23:07] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/113ede59cb

[23:07] <dalek> rakudo/newio: 42c7c32 | (Elizabeth Mattijsen)++ | / (4 files):

[23:07] <dalek> rakudo/newio: Merge branch 'nom' into newio

[23:07] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/42c7c325cd

[23:07] <dalek> rakudo/newio: 4539bdd | (Elizabeth Mattijsen)++ | src/core/IOU.pm:

[23:07] <dalek> rakudo/newio: Initial setup of IOU.pm

[23:07] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/4539bdd08b

[23:08] *** vendethiel left
[23:08] <lizmat> on that note, /me goes to sleep

[23:08] <lizmat> good night, #perl6!

[23:08] <lizmat> &

[23:09] <colomon> o/

[23:12] *** vendethiel joined
[23:38] *** sivoais left
[23:40] *** treehug88 left
[23:48] *** telex left
[23:50] *** telex joined
[23:54] *** Ugator left
[23:55] *** rurban left
