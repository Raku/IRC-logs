[00:06] *** colomon left
[00:07] *** colomon joined
[00:09] *** hoverboard left
[00:20] *** colomon left
[00:28] *** Araq joined
[00:29] *** Araq left
[00:34] *** colomon joined
[00:57] *** baest_ left
[01:02] <retupmoca> If I want to connect to mysql, should I be using MiniDBI or DBIish?

[01:06] <retupmoca> looks like DBIish

[01:09] *** baest joined
[01:14] *** baest left
[01:14] *** baest joined
[01:15] *** iolympian joined
[01:16] *** iolympian left
[01:26] <dalek> DBIish: 054bf43 | (Andrew Egeler)++ | lib/DBDish/mysql.pm6:

[01:26] <dalek> DBIish: Fix compile (for moarvm at least)

[01:26] <dalek> DBIish: 

[01:26] <dalek> DBIish: Rakudo on MoarVM was refusing to compile CArray[Int], as Int isn't a

[01:26] <dalek> DBIish: native type.

[01:27] <dalek> DBIish: review: https://github.com/perl6/DBIish/commit/054bf4371a

[01:27] <dalek> DBIish: c9c012d | (Andrew Egeler)++ | lib/DBDish/mysql.pm6:

[01:27] <dalek> DBIish: Merge pull request #2 from retupmoca/master

[01:27] <dalek> DBIish: 

[01:27] <dalek> DBIish: Fix compile (for moarvm at least)

[01:27] <dalek> DBIish: review: https://github.com/perl6/DBIish/commit/c9c012d0d9

[01:27] <retupmoca> ^-- forgot I had commitbit >.>

[01:27] *** MrMeek left
[01:31] *** MrMeek joined
[01:59] *** xenoterracide left
[02:02] *** jnap left
[02:02] *** jnap1 joined
[02:07] *** lustlife joined
[02:12] *** woosley joined
[02:13] *** telex left
[02:14] *** telex joined
[02:23] *** thou left
[02:28] *** xragnar_ joined
[02:28] *** xragnar is now known as Guest27429

[02:28] *** Guest27429 left
[02:28] *** xragnar_ is now known as xragnar

[02:40] *** jnap1 left
[02:41] *** bjz left
[02:42] *** FROGGS_ joined
[02:44] *** FROGGS left
[02:44] *** Sqirrel left
[02:52] *** skids left
[02:56] *** klapperl left
[02:58] *** klapperl joined
[03:01] *** Sqirrel joined
[04:08] *** raiph left
[04:09] *** donk joined
[04:22] *** xenoterracide joined
[04:47] *** bjz joined
[04:48] *** BenGoldberg left
[04:57] *** Sqirrel left
[04:58] *** FROGGS_ left
[05:01] *** kaare_ joined
[05:24] *** labster_ joined
[05:27] *** labster left
[05:27] *** labster_ is now known as labster

[05:27] *** logie_ left
[05:27] *** [Sno] left
[05:28] *** jercos joined
[05:39] *** aborazmeh joined
[05:44] *** aborazmeh left
[05:54] *** kaare_ left
[05:58] *** fhelmberger joined
[06:06] * simula67 is still hunting the bailador problem which now seem to be in HTTP::Easy http://postimg.org/image/gngfi80bj/full/

[06:10] *** FROGGS joined
[06:10] <FROGGS> hi from a train!

[06:10] <FROGGS> retupmoca++

[06:13] *** dmol joined
[06:15] *** kaleem joined
[06:16] *** FROGGS left
[06:18] *** kaare_ joined
[06:24] *** xenoterracide left
[06:25] <simula67> Is that a rakudo bug ? It treats "\r\n" as line terminator when I said use "\r\n\r\n". No special case seems to be mentioned here : https://github.com/perl6/specs/blob/master/S32-setting-library/IO.pod#input-line-separator

[06:32] *** REPLeffect joined
[06:36] *** molaf joined
[06:42] *** FROGGS joined
[06:53] *** FROGGS left
[07:03] *** lizmat left
[07:07] *** FROGGS joined
[07:16] *** FROGGS left
[07:41] *** [Sno] joined
[08:07] *** zakharyas joined
[08:22] *** darutoko joined
[08:23] <sergot> morning #perl6 :)

[08:25] <moritz> \o sergot, *

[08:35] *** SamuraiJack joined
[08:39] *** SamuraiJack left
[08:40] *** SamuraiJack joined
[08:47] <moritz> j: say 42

[08:47] <camelia> rakudo-jvm 15ece8: OUTPUT«42␤»

[08:49] *** lizmat joined
[08:52] *** lizmat_ joined
[08:55] *** lizmat left
[08:56] <lizmat_> good *, #perl6, from the German Perl Workshop in Hanover

[08:57] <moritz> \o lizmat_ 

[08:57] *** lizmat_ is now known as lizmat

[09:07] *** denis_boyun joined
[09:13] <lizmat> FROGGS has arrived   :-)

[09:19] *** lizmat left
[09:19] <nwc10> with a /16 network.

[09:26] <corecatcher> good morning

[09:32] *** lizmat joined
[09:33] <corecatcher> with a very stable network

[09:38] *** fhelmberger left
[09:42] *** dayangkun left
[09:42] *** dakkar joined
[09:43] *** fhelmberger joined
[09:52] <nwc10> sometimes stable :-/

[09:52] *** bbkr left
[09:55] <dalek> zavolaj: 7489ec0 | (Andrew Egeler)++ | / (2 files):

[09:55] <dalek> zavolaj: Fix library extension guessing for MoarVM

[09:55] <dalek> zavolaj: 

[09:55] <dalek> zavolaj: Without this patch, is native('libfoo') would try and load libfoolib.so

[09:55] <dalek> zavolaj: instead of libfoo.so

[09:55] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/7489ec0374

[09:55] <dalek> zavolaj: 7f7c849 | jonathan++ | / (2 files):

[09:55] <dalek> zavolaj: Merge pull request #32 from retupmoca/master

[09:55] <dalek> zavolaj: 

[09:55] <dalek> zavolaj: Fix library extension guessing for MoarVM

[09:55] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/7f7c84988c

[09:56] *** kivutar joined
[10:01] *** lizmat left
[10:01] *** lizmat joined
[10:03] *** lizmat left
[10:13] *** woosley left
[10:19] *** kivutar left
[10:21] *** jlaire left
[10:22] *** kurahaupo joined
[10:24] *** lizmat joined
[10:28] *** jlaire joined
[10:28] *** slavik left
[10:29] *** Rix joined
[10:36] *** denis_boyun left
[10:42] *** slavik joined
[10:48] *** lizmat left
[10:50] *** Rix left
[10:59] *** Rix joined
[11:01] *** SamuraiJack left
[11:06] *** AW3i joined
[11:07] *** rindolf joined
[11:16] *** iolympian joined
[11:25] *** iolympian left
[11:30] *** SamuraiJack joined
[11:35] *** bjz left
[11:35] *** bjz joined
[11:41] *** denisboyun joined
[11:52] *** wall joined
[12:10] *** lizmat joined
[12:10] *** xenoterracide joined
[12:11] *** wall left
[12:28] *** SamuraiJack left
[12:34] *** skids joined
[12:42] *** FROGGS joined
[12:43] <FROGGS> timotimo: ping

[12:44] *** lizmat left
[12:44] *** lizmat joined
[13:03] <[Coke]> bah. I didn't get back to checking the late java run, so the new run started already, which means we'll miss a day. ah well.

[13:03] *** kbaker joined
[13:03] <lizmat> poep happens

[13:04] <[Coke]> ja

[13:05] *** guru joined
[13:05] *** guru is now known as Guest9949

[13:06] *** Guest9949 is now known as ajr_

[13:14] *** woolfy joined
[13:14] *** woolfy left
[13:19] <FROGGS> TimToady: you can haz tickets: https://github.com/perl6/std/issues/7 :P

[13:19] *** Sqirrel joined
[13:24] <FROGGS> Program received signal SIGSEGV, Segmentation fault.

[13:24] <FROGGS> 0x00007ffff588a96b in p6listitems (tc=0x603500) at src/vm/moar/ops/perl6_ops.c:284

[13:24] <FROGGS> 284	        if (!items || !IS_CONCRETE(items) || REPR(items)->ID != MVM_REPR_ID_MVMArray) {

[13:25] <FROGGS> bt full at: https://gist.github.com/FROGGS/fa6338946ce510420d3a

[13:26] * jnthn gets curious with v5 is using p6listitems...

[13:26] <jnthn> *why

[13:26] <FROGGS> (gdb) p *items

[13:26] <FROGGS> $3 = {header = {owner = 0, flags = 0, size = 0, sc_forward_u = {forwarder = 0x0, sc = 0x0, st = 0x0}}, st = 0x0}

[13:26] <FROGGS> I dunno

[13:27] <FROGGS> let me check

[13:27] <jnthn> Hm, curious error

[13:28] <jnthn> I wonder if it's trying to de-ref the null sentinel or something...but that shoudln't have flags = 0.

[13:28] <FROGGS> seems to happen in P5each: https://github.com/rakudo-p5/v5/blob/master/lib/Perl5/Terms.pm#L388

[13:29] * lizmat wonders what this means:

[13:29] <lizmat> r: say (More | Less).list.pick

[13:29] <camelia> rakudo-moar 15ece8: OUTPUT«any(Less, More)␤»

[13:29] <camelia> ..rakudo-jvm 15ece8: OUTPUT«any(Less, Less)␤»

[13:29] <camelia> ..rakudo-parrot 15ece8: OUTPUT«any(Same, Less)␤»

[13:29] <lizmat> r: say (More | Less).list.pick

[13:30] <camelia> rakudo-jvm 15ece8: OUTPUT«any(Less, More)␤»

[13:30] <camelia> ..rakudo-moar 15ece8: OUTPUT«any(More, Same)␤»

[13:30] <camelia> ..rakudo-parrot 15ece8: OUTPUT«any(Less, Same)␤»

[13:30] *** dayangkun joined
[13:30] <FROGGS> Same?

[13:30] <jnthn> lizmat: It auto-threads the method call I imagine.

[13:30] <FROGGS> r: say Less

[13:30] <jnthn> lizmat: So calls .pick on each item in the Junction.

[13:31] <camelia> rakudo-parrot 15ece8, rakudo-jvm 15ece8, rakudo-moar 15ece8: OUTPUT«Less␤»

[13:31] <jnthn> r: say More.pick;

[13:31] <camelia> rakudo-jvm 15ece8, rakudo-moar 15ece8: OUTPUT«Same␤»

[13:31] <camelia> ..rakudo-parrot 15ece8: OUTPUT«More␤»

[13:31] <lizmat> aha

[13:31] <FROGGS> ahh

[13:31] <FROGGS> weird

[13:31] <jnthn> And pick on an enum type picks one of the enum

[13:31] <lizmat> I didn't know that

[13:31] <jnthn> And since the method is defined ont he type object, it applies to the elements too.

[13:31] <FROGGS> m: say True.pick

[13:31] <camelia> rakudo-moar 15ece8: OUTPUT«Invocant requires a type object, but an object instance was passed␤  in method pick at src/gen/m-CORE.setting:3793␤  in block  at /tmp/I_9IQaO_JJ:1␤␤»

[13:32] <jnthn> r: enum Options < Fast Cheap Good >; say Options.pick(2)

[13:32] <camelia> rakudo-jvm 15ece8: OUTPUT«Good Cheap␤»

[13:32] <camelia> ..rakudo-parrot 15ece8, rakudo-moar 15ece8: OUTPUT«Cheap Good␤»

[13:32] <FROGGS> r: enum Options < Fast Cheap Good >; say Fast.pick(2)

[13:32] <jnthn> ...well yeah, noen of them are fast :P

[13:32] <camelia> rakudo-parrot 15ece8: OUTPUT«Fast Cheap␤»

[13:32] <camelia> ..rakudo-moar 15ece8: OUTPUT«Good Cheap␤»

[13:32] <camelia> ..rakudo-jvm 15ece8: OUTPUT«Good Fast␤»

[13:32] <jnthn> lol

[13:32] <FROGGS> that is a weird behaviour

[13:33] <jnthn> Well, methods - unless you do something special - exist on a type and its instances

[13:33] <jnthn> And enum elemnets are simply instances of the enumeration type.

[13:33] <FROGGS> yeah...

[13:33] <jnthn> If we want to spec soemthing different we can...it just means making pick in Enumeration be a multi that does something different on the instances than one the type object.

[13:33] <FROGGS> r: enum Options < Fast Cheap Good >; say Fast ~~ Cheap

[13:34] <camelia> rakudo-parrot 15ece8, rakudo-jvm 15ece8, rakudo-moar 15ece8: OUTPUT«False␤»

[13:34] <jnthn> ACCEPTS is already doing that. :)

[13:34] <FROGGS> which is *very* good :o)

[13:34] <jnthn> I don't mind if pick ends up that way too, though I'm curious...

[13:35] <jnthn> r: say List.pick

[13:35] <camelia> rakudo-parrot 15ece8, rakudo-jvm 15ece8, rakudo-moar 15ece8: OUTPUT«Nil␤»

[13:35] <lizmat> r: enum Options < Fast Cheap Good >; say Options.pick(2)  # this I understand

[13:35] <jnthn> Hm :)

[13:35] <camelia> rakudo-jvm 15ece8: OUTPUT«Fast Cheap␤»

[13:35] <camelia> ..rakudo-parrot 15ece8: OUTPUT«Good Cheap␤»

[13:35] <camelia> ..rakudo-moar 15ece8: OUTPUT«Fast Good␤»

[13:35] *** daniel-s joined
[13:35] <lizmat> r: enum Options < Fast Cheap Good >; say Fast.pick  # this I don't

[13:35] <camelia> rakudo-moar 15ece8: OUTPUT«Good␤»

[13:35] <camelia> ..rakudo-parrot 15ece8, rakudo-jvm 15ece8: OUTPUT«Cheap␤»

[13:35] <jnthn> lizmat: I think you do understand.

[13:35] <lizmat> it feels wrong

[13:36] <jnthn> r: class Foo { method m() { say self } }; Foo.m; Foo.new.m; # it's exactly this.

[13:36] <lizmat> I see an enum as an item

[13:36] <camelia> rakudo-parrot 15ece8, rakudo-jvm 15ece8, rakudo-moar 15ece8: OUTPUT«(Foo)␤Foo.new()␤»

[13:37] <lizmat> and a .pick on an item, would always return the item

[13:37] <lizmat> hmmm....

[13:37] <jnthn> lizmat: As I said, we can decalre pick on enums as a multi and make that happen.

[13:37] <lizmat> I see how this can be done

[13:38] *** kaleem left
[13:38] <jnthn> lizmat: But then you force folks who do the current behavior to have to write Fast.WHAT.pick

[13:38] <lizmat> I'm trying to see if / why TimToady  would like to see the current behaviour

[13:38] <jnthn> lizmat: Which of course looks silly when you've a literal, but maybe less so if you'd the thing in a variable.

[13:38] <jnthn> lizmat: I don't feel strongly anyway. Just explaining why it behaves the way it does today.

[13:39] <lizmat> gotcha

[13:39] <jnthn> r: 4.pick.say

[13:39] <camelia> rakudo-parrot 15ece8, rakudo-jvm 15ece8, rakudo-moar 15ece8: OUTPUT«4␤»

[13:39] <jnthn> r: 4.pick(2).say

[13:39] <camelia> rakudo-parrot 15ece8, rakudo-jvm 15ece8, rakudo-moar 15ece8: OUTPUT«4␤»

[13:39] <jnthn> r: 4.roll(2).say

[13:39] <camelia> rakudo-parrot 15ece8, rakudo-jvm 15ece8, rakudo-moar 15ece8: OUTPUT«4 4␤»

[13:39] <jnthn> There's an expensive way to say 4 xx 2 :)

[13:40] <jnthn> Anyway, yeah, I can see what you're arguing for. I think it's reasonable.

[13:40] <jnthn> r: List.pick(2).say

[13:40] <camelia> rakudo-parrot 15ece8, rakudo-jvm 15ece8, rakudo-moar 15ece8: OUTPUT«Nil␤»

[13:40] <jnthn> r: List.roll(2).say

[13:40] <camelia> rakudo-jvm 15ece8: OUTPUT«Cannot look up attributes in a type object␤  in method roll at gen/jvm/CORE.setting:7956␤  in block  at /tmp/tmpfile:1␤␤»

[13:40] <camelia> ..rakudo-parrot 15ece8: OUTPUT«Cannot look up attributes in a type object␤  in method roll at gen/parrot/CORE.setting:7976␤  in block  at /tmp/tmpfile:1␤␤»

[13:40] <camelia> ..rakudo-moar 15ece8: OUTPUT«Cannot look up attributes in a type object␤  in method roll at src/gen/m-CORE.setting:8013␤  in block  at /tmp/tmpfile:1␤␤»

[13:40] <FROGGS>  /o\

[13:41] <jnthn> Might want to see what sematnics we want out of those two along the way. :)

[13:41] <lizmat> indeed

[13:41] <jnthn> There's a weird thing going on there

[13:41] <lizmat> yup

[13:42] <jnthn> With non-Enum types we'd like to see the type object as an item and instances a list of things to pick from

[13:42] <jnthn> With Enum types we'd like to see the type object as having a source of things to pick from and an instance being a 1-item list :)

[13:43] <jnthn> If masak was here he might say something category-theoretic at this point :P

[13:43] <lizmat> hehe

[13:43] <lizmat> but yes, that makes sense to *me*

[13:44] <jnthn> Yeah, it's a DWIM, just not sure if we're missing a lurking WAT :)

[13:46] <FROGGS> jnthn: btw, "REPR(items)->ID" explodes

[13:46] <jnthn> It's gonna if all the stuff in there is le null...

[13:47] <FROGGS> jnthn: some of 'em are zeros :o)

[13:49] <FROGGS> jnthn: so we want to check if STABLE(items) is trueish before trying to accessing REPR?

[13:50] <jnthn> FROGGS: No, that's hiding the problem.

[13:50] <FROGGS> hmmm, I was fearing that

[13:50] <jnthn> FROGGS: I thought it might be that you were hitting the ass_null in P6opaque.

[13:50] <jnthn> Alas...

[13:50] <jnthn> ass_null->header.flags = MVM_CF_TYPE_OBJECT;

[13:51] <jnthn> So IS_CONCRETE should should come out true.

[13:51] <FROGGS> ahh

[13:51] <jnthn> And you should never end up looking into REPR(items)

[13:51] <FROGGS> p IS_CONCRETE(items)

[13:51] <FROGGS> $5 = 1

[13:51] <FROGGS> O.o

[13:51] <jnthn> Right, so I doubt it's that.

[13:52] <jnthn> Well, objects are born with their flags 0.

[13:52] <FROGGS> ahh well, it checks for !IS_CONCRETE(items)

[13:52] <jnthn> It's the cheapest thing.

[13:52] <FROGGS> yeah

[13:52] <jnthn> For the commonest case.

[13:52] <jnthn> Anyway, ugh.

[13:53] <jnthn> d2

[13:53] <jnthn> uh, ww

[13:54] <FROGGS> hehe, jnthn is playing chess while debugging rakudo and supporting liz

[13:54] * lizmat hugs jnthn, good vi(m) user

[13:54] <jnthn> Both wrong :P

[13:54] <jnthn> "d2" means "compile and show the slides for day 2 of the course I'm currently working on" :)

[13:55] <FROGGS> aha

[13:55] <FROGGS> weird anyway :o)

[13:55] *** btyler joined
[13:56] *** xenoterracide left
[13:58] *** kbaker left
[14:00] *** kbaker joined
[14:05] <timotimo> meeeeeeeh, i overslept to the max

[14:06] <jnthn> Does that mean you didn't manage to get on a train, or slept through getting off one?

[14:06] <timotimo> i'm feeling very groggy ~_~

[14:06] <tadzik> happy timo

[14:06] <timotimo> i didn't manage to get on a train, or out of bed at all

[14:11] *** thou joined
[14:13] <timotimo> okay, might as well skip gpw ~_~

[14:13] <timotimo> i'll be with you in spirit

[14:13] <tadzik> aww

[14:13] <tadzik> that kind of overslept :(

[14:14] <FROGGS> timotimo: wth?

[14:14] <FROGGS> timotimo: well, my talk got recorded :o)

[14:14] <FROGGS> talks*

[14:14] <timotimo> yay \o/

[14:18] *** kaare_ left
[14:18] *** treehug88 joined
[14:18] *** treehug88 left
[14:21] *** dayangkun is now known as dayangkun_afk

[14:22] *** logie joined
[14:24] * lizmat was looking forward to finally settle the debt she has to timotimo 

[14:24] <lizmat> :-(

[14:24] <timotimo> i feel a bit dumb now

[14:25] <lizmat> don't, when you sleep this late, you need it

[14:26] <lizmat> (been there, do it regularly :-)

[14:26] <FROGGS> jnthn: it is some sort of heisenbug... when I strip comments, the segfaults goes away

[14:26] <timotimo> i wish i would at least feel somewhat refreshed >_>

[14:26] <FROGGS> segfault*

[14:28] *** treehug88 joined
[14:31] <retupmoca> DBIish on moarvm goes from passing tests to failing tests when I precompile DBDish.pm6

[14:31] *** jnap joined
[14:32] <retupmoca> which is interesting, since that file only contains a couple of roles

[14:35] *** xenoterracide joined
[14:36] *** jnap1 joined
[14:38] *** jnap left
[14:39] <jnthn> I thought I fix the roles pre-comp thing already :/

[14:39] <jnthn> *fixed

[14:39] *** daniel-s left
[14:40] <jnthn> And as usual with pre-comp, nobody seems to want to learn how stuff works there, so they all bottleneck on me fixing them :/

[14:40] <timotimo> where exactly does one have to look at to figure out what could be wrong?

[14:40] <jnthn> timotimo: Typically, it's just a lot of golfing.

[14:41] <jnthn> timotimo: Most golfed pre-comp things I get actually go further...

[14:41] <jnthn> timotimo: At that point it's then either some SC write barrier issue, or some fixup related issue.

[14:42] <timotimo> i forget what exactly SC write barriers are for again

[14:42] <jnthn> Well, augment is the easiest construct to consider

[14:42] <FROGGS> jnthn: I know about an URI precomp bug you fixed

[14:42] <moritz> jnthn: maybe you'll have to do a "hunt down precomp bugs" online workshop. I'll certainly attend :-)

[14:42] <retupmoca> FWIW, my nativecall precomp issue seems to be related to roles in some way: https://gist.github.com/retupmoca/9744166

[14:42] <jnthn> FROGGS: I fixed a nativecall related one too.

[14:42] <timotimo> ah, SC WB's are about repossession?

[14:42] <jnthn> timotimo: Exactly

[14:42] <jnthn> timotimo: Hitting the WB is the trigger for it.

[14:43] <timotimo> what is the nature of such a WB?

[14:44] <jnthn> They're placed in various ops that write

[14:44] <timotimo> i mean, what objects does the "call" operate on, where is the information stored?

[14:44] <jnthn> And check if obj->header.sc is set, and if so know you're writing to an SC-owned object

[14:45] <jnthn> This then goes and looks a bit further and checks it the currently compiling SC is the one owning the object (in which case, we're fine) or not (in which case, repossession)

[14:45] <jnthn> The code in Moar do to it is quite well commented.

[14:45] <jnthn> But I dunno if that's the issue in this case.

[14:47] <jnthn> (as in, not all pre-comp issues are SC-barrier related)

[14:48] <timotimo> OK

[14:48] <timotimo> is there a macro or function that does everything necessary?

[14:50] <jnthn> MVM_SC_WB_OBJ and MVM_SC_WB_ST

[14:51] <timotimo> ah, one for STables, one for Objects

[14:51] <timotimo> seems easy enough

[14:51] *** treehug88 left
[14:51] <timotimo> most of these seem to be placed in the interp.c, that seems like a good choice

[14:52] <jnthn> The other piece of the puzzle is to understand the various things going on in HLL::World and thus Perl6::World with regard to building up SCs.

[14:52] <jnthn> And also post-deserialize fixup actions

[14:53] <timotimo> that's mostly declarations of classes and subs that are to end up in serialized storage (constants, too, right?) and things that modify existing objects, like mixins, subclassing(?)?

[14:54] <jnthn> Sorta..

[14:54] <jnthn> It's the way objects get added into SCs, at lesat.

[14:57] * corecatcher slaps timotimo 

[14:59] <timotimo> :[

[14:59] <corecatcher> you abandonded us?

[14:59] <corecatcher> :D

[14:59] <timotimo> not entirely by choice :|

[15:02] <timotimo> corecatcher: i'll be there for you on IM/IRC, though

[15:03] <timotimo> yesterday i talked a bit with the creator of Nimrod

[15:03] <timotimo> Araq, he's been on this very channel a few times in the past

[15:06] *** guru joined
[15:06] *** guru is now known as Guest35392

[15:09] <jnthn> meeting &

[15:09] *** ajr_ left
[15:10] <vendethiel> timotimo: Nimrod looks cool !

[15:10] <vendethiel> it uses a bit too much blocks (and it's still pretty buggy) but I'm definitely looking at it, too

[15:13] *** hummeleB1 joined
[15:18] *** vendethiel left
[15:21] *** vendethiel joined
[15:25] *** Timbus left
[15:27] *** cognominal left
[15:27] *** cognominal joined
[15:38] *** xenoterracide left
[15:41] *** kaare_ joined
[15:45] *** rindolf left
[15:55] *** kurahaupo left
[15:56] *** Timbus joined
[16:02] *** [Sno] left
[16:06] *** denisboyun left
[16:06] *** treehug88 joined
[16:08] *** fhelmberger left
[16:26] *** lizmat_ joined
[16:28] <timotimo> hmm. maybe the output of viv would be a good source of info for an IDE code model thingie

[16:28] *** kaleem joined
[16:29] *** lizmat left
[16:29] *** kurahaupo joined
[16:30] <FROGGS> lizmat_: please tell wendy that my forks and me are working now in a cheap cafe

[16:30] <FROGGS> so we won't be around later

[16:30] *** kurahaupo_mobile joined
[16:31] <tadzik> my forks

[16:31] <tadzik> this has so many meanings

[16:32] <tadzik> folks, repo forks, actual eating forks

[16:33] <timotimo> does the STD.pm CORE.setting need lots and lots of updates? or has it been kept up to date recently?

[16:33] *** kurahaupo left
[16:34] <FROGGS> tadzik: they are actual eating forks atm

[16:34] <tadzik> :)

[16:35] <nwc10> and there was me thinking it was FROGGS TNG

[16:37] <FROGGS> *g*

[16:37] <FROGGS> well, only the bigger one is TNG

[16:38] <lizmat_> FROGGS: will do

[16:38] *** lizmat_ is now known as lizmat

[16:38] <FROGGS> nwc10: you'll see #3 when it is 2 weeks old in sofia :o)

[16:38] <nwc10> in the flesh? (that imlpies efficient passport issuance)

[16:39] <FROGGS> in the what?

[16:39] <FROGGS> well, the plan is to ome with wife and all kids

[16:39] <FROGGS> come*

[16:40] <timotimo> FROGGS: will there be FROGGS JJ-Abrahms re-imagining with lots of lensflares?

[16:40] <tadzik> nooo

[16:40] <tadzik> Jar-Jar Abrams

[16:40] <FROGGS> timotimo: no, there is only one lensflare :o)

[16:40] <timotimo> :D

[16:40] *** kaleem left
[16:41] *** zakharyas left
[16:45] * moritz comes with lenzflares

[16:46] *** colomon left
[16:46] <timotimo> :D

[16:46] <FROGGS> moritz: would be nice to finally meet you :o)

[16:47] <moritz> FROGGS: aye. If you're ever in the Nürnberg area, just drop by :-)

[16:47] *** colomon joined
[16:47] <timotimo> FROGGS: if you come to the nürnberg area, notify me, too. maybe i'll find an opportunity to come by, too

[16:47] <FROGGS> moritz: unlikely, but I will tell you then :o)

[16:48] <timotimo> nürnberg is so much closer to karlsruhe than hannover is ... :|

[16:49] <moritz> google maps say 2.5h between Nürnberg and Karlsruhe

[16:50] <moritz> and a around 4h by train

[16:51] * moritz still wants to do a German p6 mini hackathon eventually

[16:52] <timotimo> huh. there seems to be no good direct connection from Ka to Nrmbrg

[16:52] <timotimo> still, it's about 2h less than to hannover

[16:52] <timotimo> (and also much cheaper)

[16:54] <nwc10> Nürnberg is about 5 hours on the train from Vienna

[16:55] <nwc10> or shoult that sentance be Nürnberg,Wien or Nuremberg/Vienna? :-)

[16:55] <timotimo> :)

[16:55] <moritz> nwc10: "yes" :-)

[16:56] <moritz> Nürnberg,Wien or Nuremberg,Vienna

[16:56] <nwc10> I can't spell.

[16:56] <timotimo> i cant sell

[16:56] <tadzik> Norymberga, Wiedeń. Easy

[16:59] <nwc10> I still like the obfuscation the Hungarians use: http://hu.wikipedia.org/wiki/B%C3%A9cs

[17:00] <moritz> yes, that's impressive

[17:01] *** Guest35392 left
[17:02] <huf> is it an obfuscation of vienna?

[17:02] <huf> also serbians/croatians seem to use be'cs of some form :)

[17:07] <lizmat> moritz: re P6 hackathon, woolfy and I are considering organising a hackathon after the YAPC::EU, or otherwise in July

[17:07] <moritz> lizmat: \o/

[17:08] <timotimo> how hard would it be to teach STD to output XML instead of YAML?

[17:08] <lizmat> signing off for this evenings social

[17:08] <moritz> I'm just afraid I'm not as willing to travel with small kids as others here

[17:08] <lizmat> will check backlog later

[17:08] *** lizmat left
[17:13] *** AW3i left
[17:20] *** AW3i joined
[17:30] *** denisboyun joined
[17:30] *** kurahaupo_mobile left
[17:32] *** kurahaupo joined
[17:34] *** iolympian1 joined
[17:34] *** iolympian1 left
[17:39] *** virtualsue joined
[17:40] *** kurahaupo left
[17:40] <FROGGS> timotimo: how does STD output YAML?

[17:40] *** kurahaupo joined
[17:40] *** xenoterracide joined
[17:40] <timotimo> -y

[17:40] <timotimo> oh, you probably mean "using what lib%

[17:41] <timotimo> YAML::XS apparently

[17:43] *** guru joined
[17:43] *** guru is now known as Guest27559

[17:43] *** Guest27559 is now known as ajr_

[17:44] <FROGGS> timotimo: no, I meant the -y

[17:48] *** [Sno] joined
[17:49] *** SamuraiJack joined
[17:54] *** ajr_ left
[17:56] *** ajr joined
[17:56] *** ajr is now known as Guest55634

[17:56] *** Guest55634 is now known as ajr_

[18:13] *** kurahaupo left
[18:14] *** dakkar left
[18:20] <moritz> timotimo: iirc the problem is that STD doesn't output a tree, but an acyclic graph, and XML has no standard serialization for that

[18:21] *** ssutch_ joined
[18:22] *** Sqirrel left
[18:27] *** molaf left
[18:31] *** xenoterracide left
[18:52] *** zby_home joined
[18:52] *** SamuraiJack left
[18:53] *** Araq joined
[18:54] <Araq> timotimo: just fyi I got the train

[18:55] *** xenoterracide joined
[19:01] *** treehug88 left
[19:03] *** treehug88 joined
[19:05] *** treehug8_ joined
[19:05] *** skids left
[19:05] *** skids joined
[19:08] *** treehug88 left
[19:12] *** darutoko left
[19:19] <[Coke]> quiet on here today.

[19:21] <dalek> rakudo-star-daily: 6da38fa | coke++ | log/ (5 files):

[19:21] <dalek> rakudo-star-daily: today (automated commit)

[19:21] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/6da38fa02b

[19:21] <dalek> perl6-roast-data: 9fde962 | coke++ | / (4 files):

[19:21] <dalek> perl6-roast-data: today (automated commit)

[19:21] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/9fde962ec1

[19:27] <[Coke]> only rakudo.parrot has a clean test run.

[19:27] <[Coke]> moar's at the state where we can fudge things and open RTs for them.

[19:28] <[Coke]> (ditto JVM)

[19:34] *** btyler left
[19:45] <vendethiel> mmh ?

[19:46] <vendethiel> [Coke]: what's RT ?

[19:52] *** btyler joined
[19:53] <[Coke]> http://rt.perl.org/ - rakudo's bug tracker.

[19:53] <[Coke]> "Request Tracker"

[19:53] <[Coke]> to open a ticket, email [email@hidden.address]
[20:02] <timotimo> Araq: how could you possibly have caught that train?

[20:02] <timotimo> was it massively late? :)

[20:05] *** raiph joined
[20:09] *** FOAD joined
[20:13] *** adi_ joined
[20:21] *** rindolf joined
[20:21] <raiph> FROGGS, lizmat: http://blog.versioneye.com/2014/01/15/which-programming-language-has-the-best-package-manager/ # nice 2014 roundup

[20:22] *** telex left
[20:24] *** telex joined
[20:24] <vendethiel> the only time it's signed, it's actually typo-ed "singed" haha 

[20:27] *** zeleiadi joined
[20:29] <vendethiel> but it's definitely an interesting point - no scripting language manager has signed packages

[20:30] <timotimo> i think it would be nice if we could have that, for example based on git tags

[20:30] <timotimo> they are cryptographically nice

[20:34] *** stevan_ left
[20:43] *** mathw joined
[20:46] *** hummeleB1 left
[20:47] *** zby_home left
[20:47] * moritz thought he saw PGP/gpg signatures for distributions on CPAN

[20:50] <Araq> timotimo: turns out I can't read my hand writing and the train left at 22:07 instead of 22:04 :-)

[20:51] *** BenGoldberg joined
[20:55] <jnthn> evening o/

[20:56] <moritz> Araq: better than the other way round :-)

[20:56] <moritz> \o jnthn, *

[20:58] *** PZt left
[21:01] *** raiph left
[21:04] *** dayangkun_afk left
[21:07] *** skids left
[21:12] *** BenGoldberg left
[21:16] *** bjz left
[21:17] *** dayangkun_afk joined
[21:23] *** kurahaupo joined
[21:24] *** btyler left
[21:24] <timotimo> sounds good!

[21:24] <timotimo> Araq: btw, i didn't have time to tell you about it yesterday, but i think i can clear up some of your confusion WRT sigils

[21:24] *** adi_ left
[21:25] <Araq> go ahead

[21:25] <timotimo> i may be interrupted by Zero-K in a few minutes again ;)

[21:25] <timotimo> the sigils are mostly about "interface"

[21:25] <timotimo> there's also a big difference between "scalar context" in p5 and p6

[21:26] <timotimo> my $foo = @my_list;  # this no longer gives you the number of elements in @my_list. instead, it gives you a "reference" to the list that will not flatten by default

[21:26] <PerlJam> I know ... I'm always trying to use +@foo in P5 these days.

[21:26] <timotimo> the "item context" thing that you get with $ is quite nice, because it means that if the programmer sees "for $foo, $bar { ... }" they will know it's exactly two iterations

[21:26] <PerlJam> :)

[21:27] <timotimo> and with an @, you can get things that'll flatten out in iterations and such

[21:27] *** treehug88 joined
[21:27] *** zeleiadi left
[21:27] <timotimo> new game's about to start

[21:29] *** hoverboard joined
[21:29] <Araq> tbh these arguments about how the programmer "easily sees" things in a dynamic language never make any sense to me

[21:29] <timotimo> :D

[21:29] *** dmol left
[21:29] *** treehug8_ left
[21:30] <Araq> it's also often completely arbitrary "oh look, I can see I passed an output parameter at callsite. sweet!"

[21:30] <Araq> I just move the mouse over the function call to get all the information I need ...

[21:34] *** treehug88 left
[21:43] *** ajr_ left
[21:50] *** treehug88 joined
[21:50] *** treehug88 left
[21:51] *** treehug88 joined
[21:54] *** BenGoldberg joined
[22:00] *** treehug88 left
[22:01] *** kbaker left
[22:03] *** lustlife left
[22:15] <[Coke]> m: say (26+10)*6

[22:15] <camelia> rakudo-moar 15ece8: OUTPUT«216␤»

[22:15] <[Coke]> m: say (26+10)**6

[22:15] <camelia> rakudo-moar 15ece8: OUTPUT«2176782336␤»

[22:16] *** kaare_ left
[22:19] *** skids joined
[22:30] *** skids left
[22:32] *** stevan_ joined
[22:33] *** virtualsue left
[22:34] *** skids joined
[22:53] *** bjz joined
[23:03] <segomos> m: say (26*10)**6 * (26*10)*6;

[23:03] <camelia> rakudo-moar 15ece8: OUTPUT«481908610560000000␤»

[23:05] *** stevan_ left
[23:09] *** kurahaupo left
[23:09] *** xenoterracide left
[23:20] *** hoverboard left
[23:20] *** kivutar joined
[23:21] *** Alina-malina left
[23:24] *** Alina-malina joined
[23:31] *** bjz_ joined
[23:32] *** bjz left
[23:38] *** kivutar left
[23:43] *** AW3i left
[23:57] *** thou left
