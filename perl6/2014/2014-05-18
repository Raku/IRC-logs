[00:13] *** hoverboard left
[00:14] *** BenGoldberg joined
[00:16] *** fhelmberger joined
[00:20] *** fhelmberger left
[00:22] <dalek> perl6-roast-data: d6c0fbf | coke++ | / (6 files):

[00:22] <dalek> perl6-roast-data: today (automated commit)

[00:22] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/d6c0fbf913

[00:22] <dalek> perl6-roast-data: d38223d | coke++ | / (6 files):

[00:22] <dalek> perl6-roast-data: today (automated commit)

[00:22] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/d38223dd37

[00:24] *** rurban joined
[00:29] *** rurban left
[00:32] *** dj_goku joined
[00:55] *** hoverboard joined
[01:00] *** Sqirrel_ joined
[01:01] *** Sqirrel left
[01:06] *** hoverboard is now known as numberoneman

[01:10] *** Marverick joined
[01:10] *** Marverick left
[01:11] *** klapperl_ joined
[01:12] *** numberoneman is now known as MISTERAMERICA

[01:15] *** klapperl left
[01:27] *** rurban joined
[01:31] *** rurban left
[01:39] *** MISTERAMERICA is now known as hoverboard

[01:54] *** Su-Shee_ joined
[01:57] *** Su-Shee left
[02:01] *** BenGoldberg left
[02:01] *** Sqirrel_ left
[02:17] *** Sqirrel joined
[02:28] *** rurban joined
[02:33] *** rurban left
[03:03] *** chenryn left
[03:11] *** rurban joined
[03:32] *** hoverboard left
[03:40] *** xragnar_ joined
[03:40] *** xragnar is now known as Guest49660

[03:40] *** Guest49660 left
[03:40] *** xragnar_ is now known as xragnar

[03:40] *** atroxaper joined
[03:44] *** rindolf joined
[03:53] *** SamuraiJack__ joined
[03:59] *** kurahaupo joined
[04:02] *** kurahaupo_mobile joined
[04:02] *** kurahaupo left
[04:02] *** SamuraiJack__ left
[04:02] *** kurahaupo_mobile is now known as kurahaupo

[04:03] *** kurahaupo left
[04:04] *** atroxaper left
[04:07] *** kurahaupo_mobile joined
[04:07] *** bjz_ joined
[04:07] *** bjz left
[04:08] *** REPLeffect left
[04:08] *** kurahaupo__ joined
[04:11] *** bjz joined
[04:11] *** kurahaupo_mobile left
[04:13] *** bjz_ left
[04:20] *** darutoko joined
[04:28] *** dayangkun joined
[04:34] *** xenoterracide__ joined
[04:45] *** rindolf left
[04:53] *** kurahaupo__ left
[04:57] *** darutoko left
[04:58] *** hoverboard joined
[05:03] *** dayangkun left
[05:07] *** hoverboard is now known as moistcherry

[05:37] *** darutoko joined
[05:39] <masak> morning, #perl6

[05:49] <FROGGS> morning

[06:07] *** rurban left
[06:19] *** takesako_____ left
[06:22] *** takesako_____ joined
[06:24] *** zby_home_ joined
[06:28] *** xenoterracide__ left
[06:42] *** berekuk left
[06:44] *** moistcherry left
[07:00] *** zby_home_ left
[07:06] *** anaeem1 joined
[07:06] *** anaeem1 left
[07:07] *** anaeem1 joined
[07:07] *** rurban joined
[07:08] *** denis_boyun_ joined
[07:08] *** anaeem1__ joined
[07:09] *** anaeem1 left
[07:12] *** rurban left
[07:19] *** xinming left
[07:32] *** kaare_ joined
[07:39] *** rurban joined
[07:41] *** kurahaupo joined
[07:43] *** rurban left
[07:47] *** lizmat left
[07:47] *** kst` is now known as kst

[07:48] *** isBEKaml joined
[07:50] *** kivutar joined
[07:53] *** FROGGS left
[07:59] *** lizmat joined
[08:00] <jnthn> morning, #perl6

[08:04] <lizmat> good UGT, #perl6!

[08:04] <lizmat> from the PLPW

[08:08] *** FROGGS joined
[08:08] <nwc10> good UGT, *

[08:09] <nwc10> please could someone be fixing the test count in the failing NQP test

[08:09] <nwc10> s/53/54/ IIRC

[08:09] <sergot_> morning ! o/

[08:09] <nwc10> t/nqp/19-file-ops.t

[08:10] <FROGGS> I am about to

[08:10] <FROGGS> t/nqp/19-file-ops.t                 (Wstat: 0 Tests: 54 Failed: 2)

[08:10] <FROGGS>   Failed tests:  36, 54

[08:10] <nwc10> they all pass for me, but then the wrong test count correctly causes the test to fail

[08:11] <dalek> nqp: 65e4e41 | (Tobias Leich)++ | t/nqp/19-file-ops.t:

[08:11] <dalek> nqp: fix test plan, nwc10++

[08:11] <dalek> nqp: review: https://github.com/perl6/nqp/commit/65e4e4143f

[08:12] <FROGGS> hmmm, 36 still fails :/

[08:14] *** plobsing left
[08:15] <nwc10> works on "my" machine. Not sure why

[08:17] *** molaf_ left
[08:17] *** fhelmberger joined
[08:18] *** matt____ joined
[08:19] *** matt____ left
[08:21] *** fhelmberger left
[08:23] *** denis_boyun___ joined
[08:23] *** denis_boyun_ left
[08:26] *** Su-Shee_ is now known as Su-Shee

[08:29] *** vendethiel joined
[08:31] *** isBEKaml left
[08:35] *** btyler left
[08:36] *** woolfy joined
[08:37] <woolfy> Just did my presentation on marketing Perl for the  Polish Perl Workshop.  117 slides in 20 minutes (10 seconds per slide).  Went well.  Liz said I was just a bit hyper.  :-)

[08:37] <woolfy> I mentioned Perl 6 several times.

[08:38] <sergot_> woolfy: that was really motivating!!! \o/

[08:39] <woolfy> Thanks...   was it?  really?

[08:39] <sergot_> it was :)

[08:39] <woolfy> \o/

[08:40] <tadzik> yeah, it was great :)

[08:40] <woolfy> Hehe, sergot asked me to not mention his name.  Of course I did mention his name.  D'oh.

[08:40] <tadzik> I now have 40-ish slides for 20 minutes

[08:40] <tadzik> that should be fine :)

[08:41] <lizmat> tadzik: and a live demo?

[08:41] <sergot_> You have very interesting stuff there tadzik.

[08:41] <woolfy> tadzik: maybe you will fall asleep halfway?  We will keep you awake!!!

[08:41] *** molaf joined
[08:41] <tadzik> lizmat: yeah, there'll be a short live demo

[08:41] *** rurban joined
[08:41] <tadzik> but some of the slides are just the pictures of The Good, The Bad and The Ugly

[08:41] <tadzik> and memes

[08:42] <sergot_> tadzik: with xbox cotroller I hope :)

[08:42] <tadzik> of course :)

[08:42] <lizmat> memememememememememememememememememe (beaker impression)

[08:42] <lizmat> .oO( isn't one troller enough? )

[08:45] *** rurban left
[09:04] *** kaare__ joined
[09:07] *** Rotwang joined
[09:07] *** kaare_ left
[09:10] *** telex left
[09:12] *** anaeem1__ left
[09:12] *** telex joined
[09:13] *** anaeem1 joined
[09:13] *** vike left
[09:13] <tadzik> TIL: entering "gode" instead of "doge" in google images in unpleasant

[09:14] *** vike joined
[09:16] <vendethiel> tadzik: french says sorry

[09:16] *** SevenWolf left
[09:17] *** anaeem1 left
[09:18] *** anaeem1 joined
[09:20] <tadzik> oooh

[09:20] <tadzik> this explains so many things

[09:29] *** anaeem1 left
[09:35] *** denis_boyun___ left
[09:35] *** spider-mario joined
[09:36] *** bbkr_ joined
[09:37] *** bbkr_ left
[09:37] *** bbkr_ joined
[09:42] *** rurban joined
[09:45] *** spider-mario left
[09:47] *** rurban left
[09:49] *** spider-mario joined
[09:55] <FROGGS> jnthn: I hit a spesh bug, and I think that is the one tadzik++ already have seen

[09:55] <FROGGS> instead of throwing this: Missing or wrong version of dependency 'src/Perl6/Grammar.nqp'

[09:56] <FROGGS> I get a segfault in: MVM_interp_run (tc=tc@entry=0x6035e0, initial_invoke=initial_invoke@entry=0x7ffff7a03222 <toplevel_initial_invoke>, invoke_data=<optimized out>)

[09:56] <FROGGS>     at src/core/interp.c:4292

[09:56] <FROGGS> 4292	                if (IS_CONCRETE(check) && STABLE(check) == want_c) {

[09:56] <FROGGS> (check is NULL)

[09:57] <jnthn> Are you using MoarVM HEAD?

[09:58] <tadzik> oh yes, that's what I was getting too

[09:58] <FROGGS> jnthn: yes

[09:58] <jnthn> OK

[09:58] <jnthn> I assume you weren't doing the Panda install?

[09:58] <FROGGS> weird is, I made clean in v5, but still get this

[09:58] <FROGGS> jnthn: no panda involved

[09:59] <FROGGS> so I am removing my Perl5/ in install..

[09:59] <jnthn> ah, ok

[10:00] *** dalek left
[10:01] *** dalek joined
[10:01] *** ChanServ sets mode: +v dalek

[10:01] <FROGGS> yeah, it continues now.... so is MoarVM+spesh messing with --libpath? should be very unlikely

[10:02] <FROGGS> Error while compiling op setcodeobj: QAST::Block with cuid cuid_1_1400407321.74398 has not appeared

[10:02] <FROGGS> make: *** [lib/Perl5/if.moarvm] Fehler 1

[10:02] <FROGGS> :o(

[10:03] <FROGGS> so, that seems to come from something that changed in rakduo/nqp/moarvm since This is perl6 version 2014.04-36-g87a6833 built on MoarVM version 2014.04-11-g4749729 

[10:03] <jnthn> oh, so that wasn't a regression introduced by my attempted refactors after all?

[10:04] <nwc10> bisect!

[10:04] <FROGGS> jnthn: at least does not look like...

[10:04] <FROGGS> but wait, I was able to build that yesternight

[10:04] <nwc10> (it is not obvious to me how to automate a reliable bisect of the threesome)

[10:05] <FROGGS> to me neither

[10:05] <nwc10> as moarvm is supposed to be backwards compatible, and also nqp, I think the start is to hold moarvm and nqp constant and attempt earlier rakudo revisions until a good point is found

[10:05] <nwc10> then keep rakudo and moarvm constant and bisect nqp

[10:06] <nwc10> and then moarvm

[10:10] *** xinming joined
[10:12] <FROGGS> jnthn: stripping '$*ACTIONS := %*LANG<Perl5-actions>;' from Perl5.nqp triggers the setcodeobj problem

[10:14] *** dmol left
[10:15] *** dmol joined
[10:34] *** takesako_____ left
[10:44] *** rurban joined
[10:47] *** kaare__ is now known as kaare_

[10:48] *** denis_boyun_ joined
[10:49] *** rurban left
[10:49] *** takesako_____ joined
[10:53] <masak> hm, I think we shouldn't start with the question "what's the percentage of *all* the CPAN modules that are pure?"

[10:55] * FROGGS .oO( 0%? )

[10:56] <FROGGS> shouldn't?

[10:56] <masak> maybe start with the smaller question "how do the dependency trees look for these popular modules (like DBIx::Class, Moose, Mojolicious, App-cpanminus, Plack)?"

[10:56] * masak just found https://metacpan.org/lab/dependencies?module=Moose

[10:57] <masak> "(...Moo, DateTime, Dist-Zilla, Dancer, App-perlbrew, Try-Tiny, Catalyst, Test-Simple...)"

[10:57] <FROGGS> yeah

[10:58] <masak> I'm picturing the resulting graphs. they're pretty.

[10:58] <masak> yes, I will do this.

[10:58] <masak> tadzik++ # "We're good at libraries, but not at products"

[10:59] <FROGGS> masak: http://deps.cpantesters.org/?module=DBIx%3A%3AClass

[10:59] <masak> FROGGS++

[11:00] <woolfy> PLPW is heavy with Perl 6...

[11:00] <masak> \o/

[11:03] *** Sqirrel left
[11:04] <masak> ooh -- http://deps.cpantesters.org/static/purity.html

[11:04] <masak> so deps.cpantesters.org can already show this information.

[11:05] <masak> http://deps.cpantesters.org/?module=Moose&pureperl=1

[11:14] <moritz> \o

[11:15] <lizmat> moritz o/

[11:16] <masak> moritz! \o/

[11:16] <masak> moritz: we just saw tadzik demo Space Invaders!

[11:16] <masak> er, tadzik++

[11:17] <moritz> tadzik++

[11:19] <FROGGS> hi moritz 

[11:20] <masak> "we are not a spam company. [...] we send over 1e8 emails per day." :P

[11:20] <flussence> good *, * :)

[11:24] <masak> *, flussence 

[11:24] <masak> huh -- the hackathon topic list has only Perl 6 things.

[11:24] <dalek> rakudo/nom: 4ea6b62 | (Elizabeth Mattijsen)++ | docs/ChangeLog:

[11:24] <dalek> rakudo/nom: Mention optimizations in grep/first and friends

[11:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4ea6b623d4

[11:26] <tadzik> :)

[11:27] <flussence> I've made a nice, self-contained, readable, installable... nondeterministic threading crash :D

[11:28] <flussence> (try running `TEST_CORPUS_THREADED=1 panda install Test-Corpus` if you have nothing better to do :)

[11:30] <flussence> (but be warned one of the failure modes is eating all your memory)

[11:35] <jnthn> om nom nom memory

[11:35] <tadzik> Sterods slides uploaded http://feather.perl6.nl/~tjs/talks/plpw14/

[11:36] <masak> suggestion: move throws_like from Test::Util to Test

[11:36] <vendethiel> tadzik++ 

[11:36] *** pippo joined
[11:43] *** takesako_____ left
[11:46] <flussence> tadzik++

[11:46] *** rurban joined
[11:51] *** rurban left
[11:53] *** nnunley_ joined
[11:55] *** nnunley left
[11:59] *** takesako_____ joined
[12:02] <nwc10> FROGGS: ooh, curious. On "my" other machine: not ok 36 - seekfh with invalid whence fails

[12:03] <nwc10> (passes on x86_64 Linux, fails on pp64 Linux)

[12:10] <FROGGS> hmmm

[12:10] <FROGGS> weird

[12:10] <colomon> tadzik++ # slides

[12:19] <masak> moritz: would you be fine with moving throws_like into Test.pm ?

[12:19] <masak> huh. Test::Util isn't on http://modules.perl6.org/

[12:20] <masak> oh, it's in t/spec!

[12:21] *** berekuk joined
[12:22] <masak> colomon: Test::Junkie could probably be updated to use jnthn++'s new IO::Notification stuff.

[12:23] <masak> (removing the sleep .5 in the core of the module)

[12:23] <colomon> intended for [Coke] ?

[12:23] * colomon tries to remember if he ever had anything to do with Test::Junkie

[12:23] *** kurahaupo left
[12:27] <masak> colomon: https://github.com/colomon/Test-Junkie/

[12:28] *** takesako_____ left
[12:29] *** kaare_ left
[12:37] <colomon> ah, yes, before we got the idea of moving modules that desperately needed a bug fix to perl6 ownership.  :)

[12:37] <colomon> does IO::Notification work everywhere?

[12:40] <masak> dunno

[12:40] <jnthn> colomon: On MoarVM we use the libuv abstractions for it, which should work in a range of place,s though htere rae quickr

[12:40] <jnthn> s

[12:40] <jnthn> there are quirks

[12:40] <jnthn> oops

[12:40] <colomon> by everywhere, I meant, moar, jvm, parrot

[12:40] <masak> hm, is there a way to indicate "import module M, and also pass all of its exports along as exports from this module"?

[12:41] <jnthn> colomon: oh

[12:41] <jnthn> colomon: No, then just Moar.

[12:41] <lizmat> r: use lib "t/spec/packages"; use Test::Tap; ok 1

[12:41] <camelia> rakudo-moar 4ea6b6: OUTPUT«===SORRY!===␤Could not find Test::Tap in any of: t/spec/packages, /home/p6eval/.perl6/2014.04-261-g4ea6b62/lib, /home/p6eval/rakudo-inst-1/languages/perl6/site/lib, /home/p6eval/rakudo-inst-1/languages/perl6/vendor/lib, /home/p6eval/rakudo-inst-1/languag…»

[12:41] <camelia> ..rakudo-jvm 4ea6b6: OUTPUT«(timeout)»

[12:41] <camelia> ..rakudo-parrot 4ea6b6: OUTPUT«===SORRY!===␤Could not find Test::Tap in any of: t/spec/packages, /home/p6eval/.perl6/2014.04-261-g4ea6b62/lib, /home/p6eval/rakudo-inst-1/lib/parrot/6.1.0-devel/languages/perl6/site/lib, /home/p6eval/rakudo-inst-1/lib/parrot/6.1.0-devel/languages/perl…»

[12:41] <jnthn> colomon: None of the async stuff works on Parrot

[12:41] <jnthn> colomon: We can do it on JVM, but not yet ported, afaik

[12:43] *** atroxaper joined
[12:44] *** takesako_____ joined
[12:44] *** xenoterracide__ joined
[12:44] <colomon> p6: say $*VM.name

[12:44] <camelia> rakudo-moar 4ea6b6: OUTPUT«moar␤»

[12:44] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«Unhandled exception: Unable to resolve method name in type Any␤  at /tmp/tmpfile line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4595 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 4596 (module-CORE @ 576) ␤  …»

[12:44] <camelia> ..rakudo-jvm 4ea6b6: OUTPUT«jvm␤»

[12:44] <camelia> ..rakudo-parrot 4ea6b6: OUTPUT«parrot␤»

[12:45] <colomon> so we can easily do VM specific code now...

[12:46] <masak> r: say "Hi from a $*VM VM!"

[12:46] <camelia> rakudo-jvm 4ea6b6: OUTPUT«Hi from a jvm VM!␤»

[12:46] <camelia> ..rakudo-moar 4ea6b6: OUTPUT«Hi from a moar VM!␤»

[12:46] <camelia> ..rakudo-parrot 4ea6b6: OUTPUT«Hi from a parrot VM!␤»

[12:46] <masak> :D

[12:48] *** rurban joined
[12:49] * vendethiel would really use labels here :)

[12:51] <lizmat> r: say $*PERL.perl

[12:51] <camelia> rakudo-jvm 4ea6b6: OUTPUT«{"name" => "rakudo", "compiler" => {"build-date" => "2014-05-18T12:12:02Z", "name" => "rakudo", "codename" => "", "ver" => "2014.04-261-g4ea6b62", "release-number" => ""}}␤»

[12:51] <camelia> ..rakudo-moar 4ea6b6: OUTPUT«{"compiler" => {"ver" => "2014.04-261-g4ea6b62", "codename" => "", "build-date" => "2014-05-18T12:21:04Z", "release-number" => "", "name" => "rakudo"}, "name" => "rakudo"}␤»

[12:51] <camelia> ..rakudo-parrot 4ea6b6: OUTPUT«{"name" => "rakudo", "compiler" => {"release-number" => "", "build-date" => "2014-05-18T12:27:00Z", "codename" => "", "ver" => "2014.04-261-g4ea6b62", "name" => "rakudo"}}␤»

[12:51] <lizmat> for some reason, the current implementation of $*PERL has a compiler sub-hash (object)

[12:52] *** atroxaper left
[12:52] <lizmat> is that something we want to keep?   or should the fields in $*PERL<compiler> be moved up one level?

[12:52] <lizmat> (like I specced yesterday)

[12:53] *** rurban left
[12:55] *** atroxaper joined
[12:56] <masak> lizmat: well, $*PERL<compiler><ver> feels kinda different from $*PERL<ver>...

[12:57] <jnthn> yeah, it's language spec version vs. rakudo version

[12:57] *** rurban joined
[12:57] <masak> lizmat: spec/S17-OLD.pod has been sitting still and doing nothing since the day I resurrected it, on 2013-11-03. can I remove it now?

[12:59] <dalek> specs: ecfddec | masak++ | S17-concurrency.pod:

[12:59] <dalek> specs: [S17] spec :expires named for .uniq

[12:59] <dalek> specs: review: https://github.com/perl6/specs/commit/ecfddece39

[12:59] *** atroxaper left
[13:00] <masak> lizmat: the spec for uniq/squish makes it seem that the :expires named has 1 second as a default, but the Rakudo implementation shows that that's not the case. can I change the spec to look like 1 is not the default?

[13:01] <jnthn> masak: yeah, I don't think having a default there is useful

[13:01] *** denis_boyun_ left
[13:03] * moritz back from celbrating 200 years Norway

[13:07] <masak> happy 200 years without Sweden, Norway! \o/

[13:07] <masak> jnthn: oh -- there's nothing to fix. the thing in the spec is just a usage example.

[13:11] <jnthn> oh :)

[13:11] *** BenGoldberg joined
[13:11] <moritz> masak: if it confused you, maybe it'll confuse others too

[13:13] <masak> moritz: maybe.

[13:13] *** takesako_____ left
[13:13] <masak> moritz: I'm just used to S32 giving signatures, I think.

[13:13] <masak> lizmat++ # teaching people Perl 6

[13:14] <dalek> specs: 94cb8d8 | masak++ | S17-concurrency.pod:

[13:14] <dalek> specs: [S17] improve the description of squish/uniq :expires

[13:14] <dalek> specs: review: https://github.com/perl6/specs/commit/94cb8d8b1b

[13:17] *** kivutar left
[13:17] <masak> how was it again -- can I match a named argument against a positional parameter?

[13:17] <masak> and under what conditions?

[13:17] <tadzik> r: [0..2, 2..0].perl.say # that's... unexpected

[13:17] <camelia> rakudo-{parrot,jvm,moar} 4ea6b6: OUTPUT«[0, 1, 2]␤»

[13:18] <masak> tadzik: no, it's not.

[13:18] <masak> tadzik: backwards ranges are *empty*. that's a *feature*. ;)

[13:19] <masak> r: say [0..2, reverse 0..2].perl

[13:19] <jnthn> use le sequence operator if you want to go the other way

[13:19] <camelia> rakudo-{parrot,jvm,moar} 4ea6b6: OUTPUT«[0, 1, 2, 2, 1, 0]␤»

[13:19] <jnthn> r: say 2...0

[13:19] <camelia> rakudo-{parrot,jvm,moar} 4ea6b6: OUTPUT«2 1 0␤»

[13:19] <masak> tadzik: if this is surprising to you, you haven't felt the pain of accidentally reversing a range and having it contain things.

[13:19] <tadzik> oh

[13:20] <tadzik> alrighty

[13:22] <masak> m: sub numcmp ($x, $y) { return $x <=> $y }; say numcmp(x=>2, y=>7)

[13:22] <camelia> rakudo-moar 4ea6b6: OUTPUT«Not enough positional parameters passed; got 0 but expected 2␤  in sub numcmp at /tmp/UNnhoXhp6N:1␤  in block  at /tmp/UNnhoXhp6N:1␤␤»

[13:22] <moritz> we got rid of that feature.

[13:22] <masak> ladies and gentlebots, we have either a spec fossil, or a fairly serious NYI.

[13:22] <moritz> spec fossil

[13:22] <masak> moritz: right, so fossil.

[13:22] * masak removes it

[13:22] <moritz> it used to be a feature, but was removed

[13:23] <masak> there's a guy sitting next to me who was very disappointed that he couldn't get this example to run. :/

[13:24] <moritz> tell him to put a : before the parameters

[13:24] <moritz> and that $x and $y are lexicals, and thus *private*, including the am^Hname

[13:24] <dalek> specs: 25eb879 | masak++ | S06-routines.pod:

[13:24] <dalek> specs: [S06] remove fossil

[13:24] <dalek> specs: 

[13:24] <dalek> specs: We no longer map named arguments to positional parameters.

[13:24] <dalek> specs: review: https://github.com/perl6/specs/commit/25eb879f36

[13:24] <moritz> s/am//

[13:25] <jnthn> Yeah, that decision dates back some years now...certainly fossil

[13:26] <masak> *nod*

[13:26] *** berekuk left
[13:28] *** woolfy left
[13:28] *** woolfy1 joined
[13:28] *** takesako_____ joined
[13:29] <masak> guy next to me solved it with multis, the named multi delegating to the positional one.

[13:29] *** berekuk joined
[13:30] <masak> but he's also disappointed. in his opinion, S06 was right before I removed the fossil :)

[13:30] <masak> the best I can offer him is a maybe-future module that restores the old behavior, but that's not much consolation now.

[13:30] <masak> (he seems to have a Python background, and Python does the named-to-positional mapping)

[13:30] *** BenGoldberg left
[13:31] <jnthn> It works great until you improve/correct a parameter name, release a new version of your module, and then find you broke folk's code...

[13:32] <jnthn> *folk's

[13:33] <masak> aye.

[13:33] <masak> jnthn: I remember us walking along a Russian river and discussing this :)

[13:41] *** Sqirrel joined
[13:41] <jnthn> aye

[13:43] <masak> grrr

[13:43] <jnthn> ?

[13:43] <masak> turns out .squish(:expires) is hard to write tests for.

[13:43] <jnthn> I'll bet

[13:43] <masak> because it's so *boring*

[13:43] <jnthn> We could use a TestScheduler

[13:43] * masak tries again, in a better mood :)

[13:44] <masak> jnthn: I'll get to the TestScheduler, I promise.

[13:44] <masak> after I implement .squish(:expires)

[13:45] <masak> yes, that works better.

[13:45] <masak> turns out I only need two tests.

[13:45] <jnthn> No, no, you supply it, not promise it :P

[13:49] *** kaare_ joined
[13:51] *** btyler joined
[13:54] <masak> m: say get

[13:54] <camelia> rakudo-moar 4ea6b6: OUTPUT«There were three men came out of the West␤»

[13:54] <masak> m: say get(2)

[13:54] <camelia> rakudo-moar 4ea6b6: OUTPUT«No such method 'get' for invocant of type 'Int'␤  in sub get at src/gen/m-CORE.setting:14233␤  in block  at /tmp/kt24kd3jSJ:1␤␤»

[13:55] <masak> m: my @lines := gather { take get; take get; take get }; say "OH HAI"; say @lines.elems

[13:55] <camelia> rakudo-moar 4ea6b6: OUTPUT«OH HAI␤3␤»

[13:57] <masak> guy-next-to-me just ran into the fact that lines() isn't lazy :/

[13:57] <masak> https://rt.perl.org/Public/Bug/Display.html?id=112716

[13:57] <masak> but he wrote a gather which a loop in it, and he seems happy.

[13:57] <jnthn> masak: huh, TimToady fixed that quite a while ago, I thought...

[13:58] <moritz> masak: https://gist.github.com/moritz/08274d7e01ef4ff2c244 for the guy next to you

[13:59] <moritz> how to write a primitive binder, part 1 :-)

[14:00] <jnthn> m: for lines() { say $*IN.ins }

[14:00] <camelia> rakudo-moar 4ea6b6: OUTPUT«0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤0␤»

[14:00] <jnthn> Hm

[14:00] <moritz> $*ARGS, not $*IN

[14:00] <moritz> m: for lines() { say $*ARGS.ins }

[14:00] <camelia> rakudo-moar 4ea6b6: OUTPUT«===SORRY!===␤Dynamic variable $*ARGS not found␤»

[14:00] <moritz> m: for lines() { say $*ARGFILES.ins }

[14:00] <camelia> rakudo-moar 4ea6b6: OUTPUT«1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤11␤12␤13␤14␤15␤16␤17␤18␤19␤20␤21␤22␤23␤24␤25␤26␤27␤28␤29␤30␤31␤32␤33␤34␤35␤36␤37␤38␤39␤40␤41␤42␤43␤44␤45␤46␤47␤48␤49␤»

[14:01] <jnthn> Ah, yes

[14:01] <jnthn> masak: And perl6-m -e ".say for lines()" works and would not if it weren't lazy

[14:01] <jnthn> masak: So I suspect some other misunderstanding

[14:01] *** raiph joined
[14:01] <moritz> or ancient-ish rakudo version

[14:02] <masak> m: class C { has $.foo }; .say for C.^attributes

[14:02] <camelia> rakudo-moar 4ea6b6: OUTPUT«Mu $!foo␤»

[14:02] <masak> jnthn: the guy ran some process thing and saw that it read all the lines of the file up front.

[14:03] <masak> jnthn: do you have a good example of creating an attribute dynamically through the MOP?

[14:03] *** guru joined
[14:03] <masak> I'm talking to dexter++, by the way :)

[14:03] *** guru is now known as Guest68265

[14:03] *** Guest68265 is now known as ajr_

[14:06] <jnthn> masak: Yes, thus why I'm asking what was done ;)

[14:06] <jnthn> Remember assignment is mostly eager

[14:06] <jnthn> masak: timo's ADT module may well do that

[14:08] <masak> oh right, that's where it was.

[14:09] <masak> jnthn: the code was `my @w := $fh.lines`

[14:10] <masak> timotimo++ # ADT

[14:13] <jnthn> masak: I still don't see the issue

[14:13] <jnthn> >perl6-m -e "my $fh = open('README.md'); my @b := $fh.lines; say $fh.ins; say @b[0]; say $fh.ins"

[14:13] <jnthn> 0

[14:13] <jnthn> # Rakudo Perl 6

[14:13] <jnthn> 1

[14:13] <jnthn> masak: How did he ascertain it read ahead?

[14:14] <masak> jnthn: strace

[14:14] <masak> jnthn: you can come over here and look if you want :)

[14:16] <masak> (he did.)

[14:16] *** atroxaper joined
[14:18] *** fhelmberger joined
[14:18] <masak> ...turns out it was a sinking issue with the last statement of the program.

[14:20] *** darutoko- joined
[14:21] *** atroxaper left
[14:21] *** skids joined
[14:22] *** fhelmberger left
[14:23] *** darutoko left
[14:25] *** zakharyas joined
[14:28] <vendethiel> moritz++ # cool gist

[14:30] *** ggoebel111115 joined
[14:32] <dalek> nqp: b85f70e | (Tobias Leich)++ | tools/build/MOAR_REVISION:

[14:32] <dalek> nqp: bump moar rev for bigint fixes

[14:32] <dalek> nqp: review: https://github.com/perl6/nqp/commit/b85f70eda9

[14:33] *** bbkr_ left
[14:35] *** kaare_ left
[14:35] <dalek> rakudo/nom: 70ca03e | (Tobias Leich)++ | tools/build/NQP_REVISION:

[14:35] <dalek> rakudo/nom: bump nqp/moar rev for bigint fixes

[14:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/70ca03edeb

[14:38] <vendethiel> FROGGS: will that make a huge difference ?

[14:44] *** spider-mario left
[14:44] <dalek> roast: a4f8732 | (Tobias Leich)++ | S32-num/rat.t:

[14:44] <dalek> roast: unfudge test about bigints, RT 121527

[14:44] <dalek> roast: review: https://github.com/perl6/roast/commit/a4f873212e

[14:45] <masak> moritz: yes, cool gist. I think it went mostly unappreciated in this case, though :)

[14:45] *** btyler left
[14:46] <FROGGS> vendethiel: fixing a bug always makes a difference :o)

[14:46] <vendethiel> definitely underappreciated!

[14:48] <moritz> The Underappreciated 10-Minute Hack!

[14:49] <moritz> FROGGS++

[14:49] <dalek> rakudo/eleven: 8bb2c46 | (Tobias Leich)++ | src/core/terms.pm:

[14:49] <dalek> rakudo/eleven: assign to PROCESS.WHO instead of bind, so we can "temp" things

[14:49] <dalek> rakudo/eleven: review: https://github.com/rakudo/rakudo/commit/8bb2c46ade

[14:50] <dalek> rakudo/nom: 834a415 | (Tobias Leich)++ | src/core/terms.pm:

[14:51] <dalek> rakudo/nom: assign to PROCESS.WHO instead of bind, so we can "temp" things

[14:51] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/834a4152ff

[14:51] <FROGGS> more free karma \o/

[14:53] *** Alina-malina joined
[14:55] <masak> hm, Heroku seems to have undocumented support for Perl 5.

[14:55] <dalek> panda/depends: bdbe638 | (Tobias Leich)++ | lib/Panda/Bundler.pm:

[14:55] <dalek> panda/depends: do not try to jsonify match objects

[14:55] <dalek> panda/depends: review: https://github.com/tadzik/panda/commit/bdbe6389ac

[14:59] <masak> I would like to do Perl 6 in Heroku, but I'm not 100% sure where to start. still researching :)

[14:59] *** raiph left
[15:00] *** takesako_____ left
[15:03] <masak> aha.

[15:04] <masak> we need to be a "Third-Party Buildpack". https://devcenter.heroku.com/articles/third-party-buildpacks

[15:04] <masak> miyagawa++ # for the Perl 5 buildpack

[15:05] <masak> so it seems that the proximal goal is to create such a buildpack for Rakudo Moar.

[15:07] *** xenoterracide__ left
[15:07] <jnthn> yay :)

[15:08] <masak> wow, this looks pretty easy, actually.

[15:09] *** Pleiades` joined
[15:11] <masak> mainly need to write a setup script like this one: https://github.com/miyagawa/heroku-buildpack-perl/blob/master/bin/compile

[15:12] <masak> and one can try it out using `heroku create myapp --buildpack https://github.com/some/buildpack.git` while experimenting.

[15:12] <masak> yep, this feels eminently doable.

[15:13] <lizmat> hmmm... seems #118601 is fixed  :-)

[15:13] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=118601

[15:14] <dalek> roast: 064ab9a | (Elizabeth Mattijsen)++ | S32-str/sprintf.t:

[15:14] <dalek> roast: Unfudge #118601 test

[15:14] <dalek> roast: review: https://github.com/perl6/roast/commit/064ab9abf9

[15:14] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=118601

[15:16] *** takesako_____ joined
[15:16] *** molaf_ joined
[15:17] <dalek> roast: 09d0bc5 | (Tobias Leich)++ | S01-perl-5-integration/basic.t:

[15:17] <dalek> roast: skip code that tries to "use v5"

[15:17] <dalek> roast: review: https://github.com/perl6/roast/commit/09d0bc559b

[15:19] *** molaf left
[15:20] *** nebuchadnezzar left
[15:20] <tadzik> somebody claimed today that you can't fork more than 7 times in rakudo or it will crash. I checked. I can run 10000 forked rakudo processes and generate a load of 3600 without crashing :)

[15:21] <flussence> were they using an OS without a real fork()? :)

[15:22] <dalek> rakudo/nom: 3216e73 | (Tobias Leich)++ | src/Perl6/ (2 files):

[15:22] <dalek> rakudo/nom: allow to switch to Perl 5 module by switching to a foreign statementlist

[15:22] <dalek> rakudo/nom: 

[15:22] <dalek> rakudo/nom: This makes "use v5" work, though this is not the ideal patch for slangs

[15:22] <dalek> rakudo/nom: implemented in Perl 6 itself. We only do it this way for now to have

[15:22] <dalek> rakudo/nom: something at all. jnthn++ for reviewing

[15:22] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3216e7334a

[15:22] <tadzik> maybe :)

[15:23] <masak> rn: say sprintf "%x %x", 301281685344656640, 301281685344656669

[15:23] <camelia> rakudo-moar 4ea6b6: OUTPUT«42e5e18b84c9d00 42e5e18b84c9d00␤»

[15:23] <camelia> ..rakudo-{parrot,jvm} 4ea6b6, niecza v24-109-g48a8de3: OUTPUT«42e5e18b84c9d00 42e5e18b84c9d1d␤»

[15:24] <masak> lizmat: doesn't look fixed on moar :/

[15:25] <lizmat> does the test file "S32-str/sprintf.t" work for you ?

[15:25] <moritz> masak: note that camelia's rakudo version doesn't yet include FROGGS++'s patch

[15:26] <FROGGS> true

[15:26] <lizmat> I pulled, rebuild from scratch and got a TODO passed on that file

[15:26] <lizmat> that's all I know  :-)

[15:26] *** nebuchadnezzar joined
[15:27] <FROGGS> perl6-m -e 'say sprintf "%x %x", 301281685344656640, 301281685344656669'42e5e18b84c9d00 42e5e18b84c9d1d

[15:27] <FROGGS> LF missing, but yeah, one get the idea :o)

[15:28] <masak> ok, FROGGS++ lizmat++ then :)

[15:29] *** atroxaper joined
[15:34] *** atroxaper left
[15:46] *** takesako_____ left
[15:51] <woolfy1> What?  What?  says lizmat.  Answer from jnthn: huh?  oh...  hmmm...  What?  What?   to which lizmat responds: exactly, "WHAT???"

[15:51] <woolfy1> WAT?

[15:51] <woolfy1> lizmat told me I should say "WAT?"

[15:52] <tadzik> I'd like some kind of DESTROY :/

[15:52] <woolfy1> sergot_ listens to all this and smiles (what else can you do)

[15:53] <woolfy1> but we have chocolate cookies

[15:53] <sergot_> Yes, we have! :)

[15:53] *** kaare_ joined
[15:53] <woolfy1> tadzik: I can walk over to you and destroy you, if you really want!

[15:54] <tadzik> woolfy1: can I hire you? I have a lot of objects that need destroying at semi-random moments :)

[15:55] <woolfy1> Hmm. I am offered a job at destroying tadzik's notebook, than he tells me I also should destroy the notebooks of FROGGS and jnthn and lizmat and sergot

[15:57] <tadzik> why do you think yours is safe :o

[15:57] <tadzik> captain sinking with her ship, or something?

[16:01] *** woolfy1 left
[16:01] *** takesako_____ joined
[16:01] *** lizmat left
[16:02] *** lizmat joined
[16:02] <masak> wow, cool. http://evening-atoll-4752.herokuapp.com/ -- my first Heroku app deployed.

[16:02] <masak> it's kinda cool to have something be deployed on `git push`.

[16:02] <masak> (disappointment warning: this is Ruby/Sinatra, not Perl 6)

[16:02] <jnthn> aww :P

[16:02] <masak> :)

[16:03] <masak> but I don't believe the step to Perl 6 will be that big.

[16:03] *** FROGGS left
[16:03] <jnthn> .oO( To be Frank, I'm disappoint... :P )

[16:03] <masak> need to have it install Moar, nqp, Rakudo, panda, and Bailador.

[16:03] *** woolfy joined
[16:04] *** hoverboard joined
[16:06] <xfix> std: null

[16:06] <camelia> std ec3d853: OUTPUT«===SORRY!===␤Undeclared routine:␤ 'null' used at line 1␤Check failed␤FAILED 00:01 120m␤»

[16:06] <xfix> std: NULL

[16:06] <camelia> std ec3d853: OUTPUT«===SORRY!===␤Undeclared name:␤    'NULL' used at line 1␤Check failed␤FAILED 00:01 120m␤»

[16:07] <xfix> Hm, I wonder, could it be possible to have a special error for null?

[16:07] *** tgt joined
[16:08] <tadzik> why?

[16:08] <tadzik> it is an undeclared name :)

[16:09] <masak> xfix: why do you feel the need for a special error?

[16:09] * vendethiel just crashed his perl5 by typing (-v)

[16:10] <xfix> std: undef

[16:10] <camelia> std ec3d853: OUTPUT«===SORRY!===␤Unsupported use of undef as a value; in Perl 6 please use something more specific:␤  an undefined type object such as Any or Int,␤   :!defined as a matcher,␤        Any:U as a type constraint,␤    Nil as the absense of an expected valu…»

[16:10] <xfix> Because undef has a special error.

[16:11] <masak> yes. because undef has a history in Perl 5.

[16:11] <masak> NULL and null don't.

[16:11] <xfix> std: if (True) { } else if (False) {}

[16:11] <camelia> std ec3d853: OUTPUT«===SORRY!===␤Please use 'elsif' at /tmp/JYhJLEy2BT line 1:␤------> if (True) { } else if ⏏(False) {}␤Confused at /tmp/JYhJLEy2BT line 1:␤------> if (True) { } else if ⏏(False) {}␤    expecting …»

[16:11] <xfix> else if doesn't exist in Perl 5.

[16:12] <tadzik> heh

[16:12] <xfix> I personally think that errors should help moving from other languages.

[16:12] <flussence> p5: ping

[16:12] <flussence> eval ping

[16:12] <flussence> eval: ping?

[16:12] <vendethiel> ENOP5

[16:13] <flussence> :(

[16:13] <moritz> p5eval is down due to lack of hardware by its maintainer, I've heard

[16:13] <masak> xfix: drop it. there's no use case for someone coming from another language and being confused because Perl 6 doesn't have a custom error message for it. :)

[16:14] *** mtk0 joined
[16:14] *** FROGGS joined
[16:14] *** mtk0 left
[16:15] <xfix> std: <?php phpinfo(); ?>

[16:15] <camelia> std ec3d853: OUTPUT«ok 00:01 121m␤»

[16:15] <xfix> Hm, I guess this helps with polyglots.

[16:16] <xfix> (if someone is crazy enough to make polyglot with PHP)

[16:17] <flussence> std: <!DOCTYPE HTML 2.0> <P/Hello world/>

[16:17] <camelia> std ec3d853: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix > instead at /tmp/PNotHxzXjj line 1:␤------> <!DOCTYPE HTML 2.0> <P/Hello world/⏏>␤Undeclared name:␤    'P' used at line 1␤Undeclared routine:␤ 'world' …»

[16:17] <flussence> ack, caught...

[16:17] <xfix> You probably meant <P/Hello world/

[16:17] <xfix> If you want to use SHORTTAGS.

[16:17] <flussence> it's been a while since I actually wrote SGML...

[16:18] <flussence> std: <foo/bar/>

[16:18] <camelia> std ec3d853: OUTPUT«ok 00:01 121m␤»

[16:18] <flussence> std: <foo/bar baz/>

[16:18] <camelia> std ec3d853: OUTPUT«ok 00:01 121m␤»

[16:19] <flussence> LTA ttiar error?

[16:19] <flussence> std: <foo> <bar>

[16:19] <camelia> std ec3d853: OUTPUT«===SORRY!===␤Bogus term at /tmp/drCGnGo7EH line 1 (EOF):␤------> <foo> <bar>⏏<EOL>␤Undeclared routine:␤        'bar' used at line 1␤Parse failed␤FAILED 00:01 123m␤»

[16:19] <flussence> r: <foo> <bar>

[16:20] <masak> flussence: no, because the second '<' is read as an operator.

[16:20] <camelia> rakudo-jvm 834a41: OUTPUT«(timeout)»

[16:20] <camelia> ..rakudo-{parrot,moar} 834a41: OUTPUT«===SORRY!=== Error while compiling /tmp/tmpfile␤Two terms in a row␤at /tmp/tmpfile:1␤------> <foo> <bar>⏏<EOL>␤    expecting any of:␤        argument list␤        postfix␤        infix stopper…»

[16:20] <flussence> r-pm gets it :)

[16:20] <masak> don't really know how.

[16:21] <vendethiel> LTM ?

[16:21] <moritz> LTM, I guess

[16:21] <vendethiel> *the magical word*

[16:21] <moritz> there's a 'term' infix for generating the error message

[16:21] * masak waves the magical LTM explanation

[16:21] <flussence> r-m: <foo> < bar>

[16:21] <camelia> rakudo-moar 834a41: OUTPUT«===SORRY!=== Error while compiling /tmp/6hQZJjKlcH␤Two terms in a row␤at /tmp/6hQZJjKlcH:1␤------> <foo> < bar>⏏<EOL>␤    expecting any of:␤        argument list␤        postfix␤        infix stopper␤ …»

[16:21] <moritz> and it parses more than the infix operator itself

[16:21] <xfix> flussence: Also, you are probably aware of that, but practically to HTML web browser (no, W3C Validator is not web browser) implements SGML SHORTTAG.

[16:22] <xfix> (well, technically emacs-w3 supports SGML SHORTTAG, but that's all)

[16:22] <flussence> I wonder if that Amaya thing does it "correctly"...

[16:23] <xfix> No.

[16:24] <xfix> Even W3C doesn't care.

[16:24] <xfix> Also, these days many browsers implement HTML5 parsing, which forbids SGML SHORTTAG support.

[16:25] <xfix> And SGML SHORTTAG support is incompatible with XHTML1 Appendix C, which recommends using syntax like <br /> (with SGML SHORTTAG support, it's parsed as <br>&gt;).

[16:26] *** Psyche^_ joined
[16:27] <FROGGS> m: class Foo { method bar { my regex baz { . }; "a" ~~ /<baz>/ } }; say Foo.bar

[16:27] <camelia> rakudo-moar 834a41: OUTPUT«Type check failed in binding <anon>; expected 'Foo' but got 'Cursor'␤  in regex baz at /tmp/DSUtikOSXt:1␤  in method INDRULE at src/gen/m-CORE.setting:13063␤  in method ACCEPTS at src/gen/m-CORE.setting:13136␤  in method bar at /tmp/DSUtikOSXt:1␤…»

[16:27] <FROGGS> why?? ó.ò

[16:27] *** itz joined
[16:27] <jnthn> It probably took the surrounding class as the cursor type for the regex...

[16:28] <xfix> Appendix C shouldn't have been written IMO. It allows writting XHTML with text/html, which is just wrong. And this HTML is invalid HTML that just happens to work in many web browsers.

[16:28] <jnthn> I guess for my scoped ones it maybe should not do that.

[16:30] *** Psyche^ left
[16:32] <xfix> It also annoys me that Perl 6 website claims to be XHTML from doctype, but sends itself as text/html, and if it would be parsed as actual XHTML, the browser would simply fail to parse the website.

[16:33] *** ajr_ left
[16:34] <dalek> specs: b7de316 | (Elizabeth Mattijsen)++ | S28-special-names.pod:

[16:34] <dalek> specs: More precisely spec $?PERL / $*PERL

[16:34] <dalek> specs: review: https://github.com/perl6/specs/commit/b7de316d28

[16:34] *** anaeem1_ joined
[16:34] <moritz> xfix: you're welcome to implement content negotiation that serves it as application/xml+xhtml if the browser accepts it

[16:35] <xfix> That's not the thing.

[16:35] <moritz> that's exactly the thing.

[16:35] <xfix> The website uses &nbsp;, and none of browsers load entities for XML documents.

[16:35] <xfix> The validator may claim that &nbsp; is valid, but browsers won't download DTD just to get entities.

[16:36] <moritz> you can only serve xhtml with the proper content-type, because $older_browsers

[16:36] <moritz> xfix: so what?

[16:36] <moritz> xfix: they have integrated the (now immutable) DTD into the html parser

[16:36] <moritz> that's a valid optimization.

[16:37] <dalek> rakudo/nom: 0a6c98c | (Elizabeth Mattijsen)++ | / (7 files):

[16:37] <dalek> rakudo/nom: Properly implement $*PERL according to spec

[16:37] <dalek> rakudo/nom: 

[16:37] <dalek> rakudo/nom: This introduces the Perl and Compiler classes

[16:37] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0a6c98c05d

[16:37] <xfix> Hm, ok.

[16:37] <xfix> Well, I guess I confused it with something else.

[16:39] *** SamuraiJack__ joined
[16:39] <xfix> <link rel="icon" href="/favicon.ico" type="favicon.ico" />

[16:39] <xfix> There is also that.

[16:39] <xfix> type="favicon.ico" is not valid relation type, but XHTML validator depends on DTD which cannot tell that.

[16:39] <moritz> wha' abou' it?

[16:39] <xfix> Not that this causes parse errors, but it's still invalid XHTML.

[16:40] <moritz> what's invalid?

[16:40] <xfix> type="favicon.ico"

[16:40] <moritz> what's invalid?

[16:40] *** woolfy left
[16:40] <xfix> favicon.ico is not MIME type.

[16:41] <dalek> rakudo/nom: 0a2f0cd | (Elizabeth Mattijsen)++ | docs/ChangeLog:

[16:41] <dalek> rakudo/nom: Mention $*PERL upgrade

[16:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0a2f0cd95b

[16:41] <moritz> and the DTD say it must be?

[16:42] <xfix> CDATA

[16:42] <xfix> Which means anything.

[16:42] <dalek> rakudo/nom: 57a08ad | (Tobias Leich)++ | src/Perl6/Actions.nqp:

[16:42] <dalek> rakudo/nom: fix my scoped regexes in classes

[16:42] <dalek> rakudo/nom: 

[16:42] <dalek> rakudo/nom: Regexes tried to install itself into the class, and then exploded by getting a Cursor instead

[16:42] <dalek> rakudo/nom: of the type of the class.

[16:42] *** beastd joined
[16:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/57a08ad7c6

[16:44] <moritz> so, what's invalid?

[16:45] <xfix> http://www.w3.org/TR/html401/struct/links.html#adef-type-A

[16:45] <dalek> roast: 6fac9f4 | (Elizabeth Mattijsen)++ | S17-supply/interval.t:

[16:45] <dalek> roast: We're using Perl 6 here!

[16:45] <dalek> roast: review: https://github.com/perl6/roast/commit/6fac9f488f

[16:45] *** colomon left
[16:46] *** SamuraiJack__ left
[16:46] *** SamuraiJack__ joined
[16:46] <xfix> Proper MIME types have `/` character. For example, `text/html`.

[16:46] <flussence> I'll be travelling for the next 4h or so; I'll go through and WHATWG-HTMLify the source in the meantime to fix any lingering problems :)

[16:46] <itz> is there any sort of beer meeting on Monday in Prague?  I don't see anything on the website apart from a food event on the Tuesday night

[16:47] <moritz> xfix: "This attribute gives an advisory hint as to the content type of the content available at the link target address." doesn't say it must be a content type

[16:47] <jnthn> itz: I didn't see anything on the website either

[16:47] <moritz> xfix: only that it provides a hint towards the content type

[16:48] <xfix> 21<moritz>21 xfix: "This attribute gives an advisory hint as to the content type of the content available at the link target address." doesn't say it must be a content type

[16:48] <xfix> As for definition of "advisory hint", it means that it doesn't have to be specified, not that you may write anything here.

[16:48] *** SamuraiJack__ left
[16:49] <moritz> xfix: where is that defined?

[16:49] *** FROGGS left
[16:50] <xfix> http://www.w3.org/TR/html401/types.html#type-content-type

[16:50] <moritz> I read "advisory" as "the UA shouldn't consider it definitive, but rather use it only to decide whether to download the resource, and take the content type from that second request as definitive"

[16:51] <xfix> To be honest, DTD defines it as  %ContentType;, except  %ContentType; is alias for CDATA.

[16:51] <xfix> Anyway, I wonder, would it be possible to move from XHTML sent as text/html to HTML5 for Perl 6 webpage?

[16:52] <moritz> it's a spec. If the spec wants it to be a content type, it could just state clearly that it needs to be a content type

[16:52] <jnthn> dinner &

[16:52] <moritz> since it doesn't, authors have some liberties

[16:52] <moritz> xfix: what would be the benefit?

[16:52] *** lizmat left
[16:54] <xfix> Sure, if you think this way, let's all write <META http-equiv="Content-Type" content="I don't know">.

[16:54] <moritz> if the content type is the main concern, fix the content type

[16:54] <xfix> DTD allows that.

[16:55] *** hoverboard is now known as moistcherry

[16:55] *** IllvilJa joined
[16:58] *** moistcherry is now known as hoverboard

[16:59] <dalek> perl6.org: a763f62 | (Konrad Borowski)++ | includes/header:

[16:59] <dalek> perl6.org: Remove type="favicon.ico"

[16:59] <dalek> perl6.org: 

[16:59] <dalek> perl6.org: It's not valid according to XHTML standard, and doesn't mean anything.

[16:59] <dalek> perl6.org: Therefore, it can be easily removed.

[16:59] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/a763f627ab

[16:59] *** IllvilJa left
[16:59] <xfix> karma Konrad Borowski

[17:00] <moritz> xfix: that's not quite true. If user agents understand it, it has value.

[17:00] <xfix> Yes, it's represented in DOM.

[17:00] <moritz> and no, the xhtml standard does not forbid it.

[17:00] <xfix> But it doesn't mean anything.

[17:00] <moritz> it means whatever the communication partners agree on that it means

[17:01] <xfix> Well, XHTML expects content type here (according to DTD). While it's true that %ContentType is aliased to CDATA, it's still content type.

[17:01] * moritz gives up

[17:01] <dalek> perl6.org: 3f0dcf6 | flussence++ | includes/header:

[17:01] <dalek> perl6.org: Change doctype to WHATWG-HTML

[17:01] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/3f0dcf65d6

[17:01] <dalek> perl6.org: 5993415 | flussence++ | includes/header:

[17:01] <dalek> perl6.org: Fix cosmetic errors in <head>

[17:01] <dalek> perl6.org: 

[17:01] <dalek> perl6.org:   - Add correct mime type to favicon <link>

[17:01] <dalek> perl6.org:   - Remove redundant <style> type attribute

[17:01] <dalek> perl6.org:   - Fix a template variable name typo (but it was unused anyway)

[17:01] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/599341528d

[17:01] * flussence &

[17:02] <xfix> <link rel="icon" href="/favicon.ico" type="favicon.ico" />

[17:02] <xfix> At this point I wonder why I even bother.

[17:02] <xfix> favicon.ico is not MIME type.

[17:03] <dalek> perl6.org: 75b4f5d | flussence++ | includes/header:

[17:03] <dalek> perl6.org: Fix duplicate line typo

[17:03] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/75b4f5de0b

[17:09] <xfix> On 25/Dec/2010, Perl 6 website had 4636 unique visits. Interesting...

[17:10] *** lizmat joined
[17:10] *** colomon joined
[17:11] *** IllvilJa joined
[17:12] *** hoverboard is now known as WalterHeisenberg

[17:12] *** WalterHeisenberg is now known as hoverboard

[17:12] <masak> dinner &

[17:19] *** molaf_ left
[17:20] <dalek> perl6.org: acea17d | (Konrad Borowski)++ | source/index.html:

[17:20] <dalek> perl6.org: Use alt which accurately describes download image

[17:20] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/acea17daff

[17:25] *** HiriB joined
[17:26] *** zakharyas left
[17:31] *** takesako_____ left
[17:32] *** HiriB left
[17:46] *** itz left
[17:46] *** takesako_____ joined
[17:53] *** hoverboard left
[17:54] *** berekuk left
[17:55] *** amkrankruleuen joined
[17:55] *** rurban left
[18:00] *** anaeem1_ left
[18:14] *** plobsing joined
[18:37] *** takesako_____ left
[18:44] *** anaeem1 joined
[18:45] *** itz joined
[18:48] *** molaf joined
[18:50] *** darutoko- left
[18:51] *** anaeem1 left
[18:51] *** takesako_____ joined
[18:55] *** takesako_____ left
[19:04] *** prevost joined
[19:10] *** takesako_____ joined
[19:15] *** xilixy joined
[19:15] *** xilixy left
[19:21] <timotimo> much hackathon?

[19:21] <tadzik> timotimo: http://feather.perl6.nl/~tjs/talks/plpw14/#/16

[19:22] <tadzik> hackathon's over; I'm on the train home, everyone else is dinnering afaik

[19:23] *** berekuk joined
[19:29] *** anaeem1 joined
[19:30] *** prevost left
[19:34] *** anaeem1 left
[19:35] *** bjz_ joined
[19:35] *** bjz left
[19:42] *** denis_boyun joined
[19:49] *** berekuk left
[19:51] <timotimo> i take it the conference is over as well?

[19:51] <timotimo> i spent the day renovating the future apartment of friends

[19:52] <tadzik> yes, it's over

[19:52] <tadzik> it was really good

[19:52] <tadzik> better than the last year's PLPW

[19:52] <tadzik> we're evolving \o/

[19:52] <timotimo> way cool :)

[19:53] <tadzik> and a new PM group has formed and volunteered to organize the next year's workshop in Gdańsk

[19:53] <timotimo> we started out thinking we'd be replacing the wallpaper in one room and paint over the existing wallpaper in all other rooms

[19:53] <tadzik> so, awesome :)

[19:53] <timotimo> now we've taken the wallpaper off of the walls in three different rooms and one room is still to be done

[19:53] <tadzik> and the steroids talk was well received, I like that :)

[19:53] <timotimo> yays :)

[19:53] <timotimo> moar is only going to get better for stuff :)

[19:54] <tadzik> it is getting better all the time :)

[19:54] <tadzik> so, no wallpaper after all? :)

[19:55] <timotimo> we're only keeping half of the kitchen and three quarters of the bedroom and we are not doing any of the ceilings

[19:56] <timotimo> it would have been over really quickly if the wallpaper would have come off in one layer

[19:56] <tadzik> :D

[19:56] <timotimo> but there was quite a lot of residue we had to remove "manually" with spatulas

[19:56] <timotimo> and the people who did the renovation last time(s) weren't very good at it

[19:56] <timotimo> there were many WTF per hour

[19:56] <tadzik> sounds like an extra layer of abstraction has been solving problems before :)

[19:57] <timotimo> yeah, at least one party was contempt with just painting over the existing layer

[19:57] <timotimo> in some parts it seemed like there were three layers of (distinct) paint

[19:57] <timotimo> and there was wallpaper and paint behind the radiators

[19:57] <tadzik> well, that was your initial plan too :)

[19:58] <timotimo> you're right. we got a spark of sanity, though

[19:58] <timotimo> also, in the kitchen there was actually a layer of paint below the wallpaper

[19:58] <timotimo> which is just ... wtf?

[19:58] <tadzik> so, soemone was content with just wallpapering over the existing paint :P

[19:58] <tadzik> so, the apartment is a bit bigger now, no? :P

[19:59] <timotimo> aye, we've certainly won a few cubic centimeters

[19:59] <timotimo> but the paint that was under the wallpaper had been applied directly to the wall

[20:01] <timotimo> you know anchor bolts, right?

[20:01] <timotimo> what do you do with them if you no longer need the hole the screw used to be in?

[20:02] <timotimo> apparently someone thought it would be a great idea to leave the anchor bolts in and fill them with filling mass stuff

[20:02] <tadzik> uh

[20:02] <tadzik> well, I just leave them be, I'll probably want to hang something in the future

[20:02] <tadzik> and they don't look all that bad, at least in the quantity that I have them

[20:02] <timotimo> you have hundreds? :)

[20:03] <tadzik> no, I may have like, 10 ;)

[20:03] <timotimo> OK

[20:03] <timotimo> well, at least you wouldn't leave them in and fill them up with putty

[20:03] <tadzik> nah

[20:03] <timotimo> you'd keep them or pull them out before filling the hole

[20:03] <tadzik> unless I wanted to hide them from a landloard or something

[20:03] <timotimo> anyway, i'm going to take a shower and unwind my stack at the local hackspace

[20:03] <timotimo> that makes no sense :)

[20:04] <tadzik> well, you'd still want to pull them out probably :)

[20:04] <tadzik> unless they were stuck or something, I dunno

[20:04] <tadzik> the idea of being forbidden from keeping a dog by a landlord is insane enough to me

[20:04] <tadzik> and having it written down in a contract that a gecko is okay

[20:07] *** dwarring joined
[20:15] *** xenoterracide__ joined
[20:19] *** fhelmberger joined
[20:23] *** kaare_ left
[20:23] *** fhelmberger left
[20:24] *** itz left
[20:25] <timotimo> %)

[20:29] <awwaiid> are hyper-operators (allowed to) run in parallel if the implementation wants?

[20:29] <skids> As long as the results are ordered correctly.

[20:29] <skids> Side effects need not be ordered.

[20:30] <awwaiid> cool. that is the programmer's problem for depending on side-effects in such a world, eh?

[20:31] <skids> Well, it's the programmer's fault for relying on side-effect ordering when the specification says you cannot.

[20:32] <skids> I don't generally hate on side effects to the extent that the heavy FP folks do, personally.

[20:33] <timotimo> m: (1, 2, 3, 4, 5, 6)>>.&say

[20:33] <camelia> rakudo-moar 57a08a: OUTPUT«6␤4␤2␤5␤3␤1␤»

[20:34] <timotimo> we actually shuffle around the values if you do a hyperop, even though we don't parallelize yet

[20:35] <timotimo> just to make extra sure the programmer doesn't rely on the ordering

[20:35] <timotimo> though it is still deterministic in our implementation

[20:38] <awwaiid> timotimo: why did you do &say instead of (1,2,3,4)>>.say ?

[20:39] <timotimo> oh

[20:39] <timotimo> i forgot there's a say method :)

[20:39] <timotimo> you can .& any sub in scope

[20:39] <awwaiid> I can do 3.^methods, but I don't see "+" as a method -- is there a way to see that through introspection?

[20:39] <awwaiid> I'm going to give a talk or two on perl6 and I'm brushing up :)

[20:39] <skids> + is a sub.

[20:39] <timotimo> you can go through SETTING::.pairs

[20:43] <skids> or &infix:<+>.candidates.say if you already know the name.

[20:45] * skids tries to fathom how to go about debugging a moar "inconsistent bind result"

[20:46] <timotimo> well, if you go through the SETTING::.pairs (or is it CORE::?) you can look at the signatures and find anything that matches your type or parent types

[20:46] <skids> timitimo: SETTING::.pairs worked for me.

[20:48] <awwaiid> what do I do with SETTING::.pairs? I see some stuff about Mu that isn't too helpful

[20:49] <awwaiid> I like that &infix:<+>.candidates.say, it's pretty interesting

[20:49] <skids> .oO(HOWTO curried introspection)

[20:50] <awwaiid> &infix:<+>.candidates>>.perl>>.say even :)

[20:50] *** berekuk joined
[20:52] <awwaiid> I like to know some of this basic introspection stuff, makes it easier to poke around on the REPL without looking at documentation or source :)

[20:53] <dwarring> r: &infix:<+>.candidates>>.perl>>.say

[20:53] <camelia> rakudo-parrot 57a08a: OUTPUT«sub infix:<+> (Int:D $x, Date:D $d) { #`(Sub|-6805760002719140261) ... }␤sub infix:<+> (Duration:D $a, Duration:D $b) { #`(Sub|-6805760002719122110) ... }␤sub infix:<+> (Duration:D $a, Real $b) { #`(Sub|-6805760002719105715) ... }␤sub infix:<+> (In…»

[20:53] <camelia> ..rakudo-jvm 57a08a: OUTPUT«sub infix:<+> (Int:D $x, Date:D $d) { #`(Sub|780530416) ... }␤sub infix:<+> (Duration:D $a, Duration:D $b) { #`(Sub|2044305003) ... }␤sub infix:<+> (Duration:D $a, Real $b) { #`(Sub|1107153240) ... }␤sub infix:<+> (Instant:D $a, Duration:D $b) { #`(Su…»

[20:53] <camelia> ..rakudo-moar 57a08a: OUTPUT«sub infix:<+> (Int:D $x, Date:D $d) { #`(Sub|72812848) ... }␤sub infix:<+> (Duration:D $a, Duration:D $b) { #`(Sub|72570432) ... }␤sub infix:<+> (Duration:D $a, Real $b) { #`(Sub|72570144) ... }␤sub infix:<+> (Instant:D $a, Duration:D $b) { #`(Sub|72…»

[20:57] <skids> m: &infix:<+>.assuming(3).candidates.say # ?

[20:57] <camelia> rakudo-moar 57a08a: OUTPUT«sub CURRIED (*@pos, *%named) { #`(Sub|140328309456552) ... }␤»

[20:58] *** Rotwang left
[21:01] <dwarring> r: &infix:<+>.candidates>>.signature>>.say

[21:01] <camelia> rakudo-{parrot,jvm,moar} 57a08a: OUTPUT«:(Int:D $x, Date:D $d)␤:(Duration:D $a, Duration:D $b)␤:(Duration:D $a, Real $b)␤:(Instant:D $a, Duration:D $b)␤:(Instant:D $a, Real:D $b)␤:(Complex:D \a, Real \b --> Complex)␤:(Int \a, Rational \b)␤:(Rational \a, Rational \b)␤…»

[21:02] *** john3213 joined
[21:04] * skids wonders at the '&bark:(Dog)' syntax in S06 priming section.

[21:07] *** john3213 left
[21:11] <skids> I can too adverb that.  Stop being such an adverb! :-)

[21:12] <awwaiid> hah

[21:13] *** Vlavv left
[21:15] <awwaiid> what is Int:D ?

[21:15] <skids> A defined Int.

[21:16] <skids> As opposed to Int:U which onli matches (Int) (and children classes)

[21:16] <awwaiid> interesting. Is ':' part of the name directly, or does ':D' mean 'defined-thing' always?

[21:16] <awwaiid> (feel free to link me somewhere if this is documented)

[21:16] <skids> I think that syntax is in signatures only.

[21:18] <awwaiid> ah

[21:19] <skids> http://perlcabal.org/syn/S12.html#Abstract_vs_Concrete_types

[21:20] <skids> So I guess there is more to it than signatures.

[21:23] <timotimo> (a happy int)

[21:24] * vendethiel still thinks :D should be the default, if :_ exists

[21:24] <timotimo> :_?

[21:25] <timotimo> oh, i see

[21:26] *** Vlavv joined
[21:28] <timotimo> In standard Perl 6, Int is generally assumed to mean Int:_, except for invocants, where the default is Int:D. - that's not how rakudo does it

[21:29] <skids> m: 3.new(:VALUE(2)).say # case in point.

[21:29] <camelia> rakudo-moar 57a08a: OUTPUT«0␤»

[21:30] <timotimo> that's not what i meant, though

[21:31] <timotimo> you can call any method on the type object as long as they don't try to $

[21:31] <timotimo> access $! variables

[21:45] <timotimo> jnthn, can i reach you at the moment?

[21:50] <skids> Oddly, FROGGS++ patch for bigint literals fixes rakudo but not nqp, unless something got strangely hosed with my builds.

[22:00] *** hoverboard joined
[22:13] *** Psyche^_ left
[22:13] *** nnunley_ left
[22:13] *** telex left
[22:13] *** araujo left
[22:13] *** bjz_ left
[22:13] *** mhasch left
[22:13] *** ribasushi left
[22:13] *** lee_ left
[22:13] *** JimmyZ left
[22:13] *** felher left
[22:13] *** sftp left
[22:13] *** robinsmidsrod left
[22:13] *** djanatyn left
[22:13] *** tgt left
[22:13] *** Alina-malina left
[22:13] *** kst left
[22:13] *** thilp left
[22:13] *** jtpalmer left
[22:13] *** ggherdov left
[22:13] *** lue left
[22:13] *** Gothmog_ left
[22:13] *** Rounin left
[22:13] *** broquaint left
[22:13] *** [Coke] left
[22:13] *** synopsebot left
[22:13] *** sjohnson left
[22:13] *** crazedpsyc left
[22:13] *** cosimo left
[22:13] *** slavik left
[22:13] *** daxim left
[22:13] *** clkao left
[22:13] *** labster left
[22:13] *** anocelot left
[22:13] *** felipe left
[22:13] *** BooK left
[22:13] *** BinGOs left
[22:13] *** charsbar_______2 left
[22:13] *** dwarring left
[22:13] *** Vlavv left
[22:13] *** lizmat left
[22:13] *** [Sno] left
[22:13] *** jnthn left
[22:13] *** isacloud__ left
[22:13] *** pnu left
[22:13] *** sjn left
[22:13] *** rhr left
[22:13] *** Alula left
[22:13] *** hoverboard left
[22:13] *** denis_boyun left
[22:13] *** takesako_____ left
[22:13] *** colomon left
[22:13] *** beastd left
[22:13] *** vendethiel left
[22:13] *** LordVorp left
[22:13] *** dj_goku left
[22:13] *** xenoterracide__ left
[22:13] *** plobsing left
[22:13] *** Pleiades` left
[22:13] *** ggoebel111115 left
[22:13] *** Sqirrel left
[22:13] *** pippo left
[22:13] *** dmol left
[22:13] *** vike left
[22:13] *** oetiker left
[22:13] *** Grrrr left
[22:13] *** ashleydev left
[22:13] *** clkaoud left
[22:13] *** gfldex left
[22:13] *** revdiablo left
[22:13] *** mtj left
[22:13] *** jercos left
[22:13] *** awwaiid left
[22:13] *** Exodist left
[22:13] *** yoleaux left
[22:13] *** Grimnir_ left
[22:13] *** ivanshmakov left
[22:13] *** mathw left
[22:13] *** aindilis left
[22:13] *** yeltzooo left
[22:13] *** amkrankruleuen left
[22:13] *** baest left
[22:13] *** salv0 left
[22:19] *** camelia is now known as 64MAAITRZ

[22:19] *** sergot_ is now known as 17SAADFTQ

[22:20] *** huf joined
[22:20] *** sergot_ joined
[22:20] *** lizmat joined
[22:20] *** camelia joined
[22:20] *** Vlavv joined
[22:20] *** xenoterracide__ joined
[22:20] *** dwarring joined
[22:20] *** denis_boyun joined
[22:20] *** bjz_ joined
[22:20] *** takesako_____ joined
[22:20] *** plobsing joined
[22:20] *** colomon joined
[22:20] *** beastd joined
[22:20] *** Psyche^_ joined
[22:20] *** tgt joined
[22:20] *** Pleiades` joined
[22:20] *** Alina-malina joined
[22:20] *** ggoebel111115 joined
[22:20] *** Sqirrel joined
[22:20] *** nnunley_ joined
[22:20] *** pippo joined
[22:20] *** dmol joined
[22:20] *** vike joined
[22:20] *** telex joined
[22:20] *** vendethiel joined
[22:20] *** dj_goku joined
[22:20] *** kst joined
[22:20] *** araujo joined
[22:20] *** [Sno] joined
[22:20] *** oetiker joined
[22:20] *** Alula joined
[22:20] *** LordVorp joined
[22:20] *** thilp joined
[22:20] *** mhasch joined
[22:20] *** cosimo joined
[22:20] *** ribasushi joined
[22:20] *** mtj joined
[22:20] *** slavik joined
[22:20] *** Exodist joined
[22:20] *** jtpalmer joined
[22:20] *** jercos joined
[22:20] *** awwaiid joined
[22:20] *** baest joined
[22:20] *** lee_ joined
[22:20] *** JimmyZ joined
[22:20] *** Grrrr joined
[22:20] *** felher joined
[22:20] *** morgan.freenode.net sets mode: +v camelia

[22:20] *** daxim joined
[22:20] *** yoleaux joined
[22:20] *** Grimnir_ joined
[22:20] *** jnthn joined
[22:20] *** ashleydev joined
[22:20] *** clkaoud joined
[22:20] *** clkao joined
[22:20] *** ggherdov joined
[22:20] *** isacloud__ joined
[22:20] *** sftp joined
[22:20] *** pnu joined
[22:20] *** sjn joined
[22:20] *** mathw joined
[22:20] *** rhr joined
[22:20] *** labster joined
[22:20] *** salv0 joined
[22:20] *** robinsmidsrod joined
[22:20] *** gfldex joined
[22:20] *** aindilis joined
[22:20] *** lue joined
[22:20] *** anocelot joined
[22:20] *** kshannon joined
[22:20] *** eternaleye joined
[22:20] *** smash joined
[22:20] *** bbkr joined
[22:20] *** yakudza joined
[22:20] *** Woodi joined
[22:20] *** jlaire joined
[22:20] *** hoelzro joined
[22:20] *** cotto joined
[22:20] *** japhb joined
[22:20] *** Maddingue joined
[22:20] *** mls joined
[22:20] *** renormalist joined
[22:20] *** arnsholt joined
[22:20] *** atta joined
[22:20] *** SHODAN joined
[22:20] *** _sri joined
[22:20] *** firnsy joined
[22:20] *** sivoais joined
[22:20] *** askz joined
[22:20] *** retupmoca joined
[22:20] *** Rix joined
[22:20] *** avuserow1 joined
[22:20] *** zamolxes joined
[22:20] *** mtj_- joined
[22:20] *** eMBee joined
[22:20] *** morgan.freenode.net sets mode: +v yoleaux

[22:20] *** integral joined
[22:20] *** tobiasvl joined
[22:20] *** avar joined
[22:20] *** ilbot3 joined
[22:20] *** Gothmog_ joined
[22:20] *** revdiablo joined
[22:20] *** yeltzooo joined
[22:20] *** djanatyn joined
[22:20] *** felipe joined
[22:20] *** Rounin joined
[22:20] *** crazedpsyc joined
[22:20] *** sjohnson joined
[22:20] *** synopsebot joined
[22:20] *** [Coke] joined
[22:20] *** broquaint joined
[22:20] *** charsbar_______2 joined
[22:20] *** BinGOs joined
[22:20] *** BooK joined
[22:20] *** moritz joined
[22:20] *** ingy joined
[22:20] *** pmichaud joined
[22:20] *** d^_^b joined
[22:20] *** mattp__ joined
[22:20] *** hugme joined
[22:20] *** obra joined
[22:20] *** larks joined
[22:20] *** Celelibi joined
[22:20] *** dylanwh joined
[22:20] *** masak joined
[22:20] *** DarthGandalf joined
[22:20] *** perigrin joined
[22:20] *** brother joined
[22:20] *** Bucciarati joined
[22:20] *** Tene joined
[22:20] *** effbiai joined
[22:20] *** eiro joined
[22:20] *** haroldwu joined
[22:20] *** cxreg joined
[22:20] *** PerlJam joined
[22:20] *** ponbiki joined
[22:20] *** MilkmanDan joined
[22:20] *** amkrankruleuen joined
[22:20] *** frettled joined
[22:20] *** morgan.freenode.net sets mode: +v hugme

[22:20] *** nwc10_ joined
[22:20] *** ivanshma` joined
[22:20] *** tgt left
[22:20] *** zacts_ joined
[22:20] *** 17SAADFTQ left
[22:20] *** breinbaas left
[22:20] *** beastd left
[22:21] *** FROGGS joined
[22:23] *** zacts left
[22:23] *** breinbaas joined
[22:24] <dalek> rakudo/nom: 4a8eb3d | (Elizabeth Mattijsen)++ | src/core/ (2 files):

[22:24] <dalek> rakudo/nom: Fix advent test fail caused by grep optimization

[22:24] <dalek> rakudo/nom: 

[22:24] <dalek> rakudo/nom: MMD candidates for grep and friends where selected on Callable and Regex,

[22:24] <dalek> rakudo/nom: instead of the more correct Callable:D and Regex:D.  This caused grep

[22:24] <dalek> rakudo/nom: expecting to smartmatch on Callable type to fail.

[22:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4a8eb3debf

[22:25] *** woolfy joined
[22:25] *** molaf left
[22:27] *** LLamaRider joined
[22:29] *** LLamaRider left
[22:31] <timotimo> i don't know enough about the innards of Array.pm to build a proper assign_pos for the typed arrays

[22:31] <timotimo> what is p6bindattrinvres for, for example?

[22:31] *** thou joined
[22:33] *** BenGoldberg joined
[22:34] <timotimo> for assign_pos, i'll always have to create a container with p6scalarfromdesc?

[22:40] <dalek> perl6-roast-data: 69cb7d5 | coke++ | / (6 files):

[22:40] <dalek> perl6-roast-data: today (automated commit)

[22:40] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/69cb7d5067

[22:45] <timotimo> well, it seems like i can just copy the way the supertype's assign_pos works

[22:45] <timotimo> though in that case it may already have that implementation inherited from Array itself

[22:48] *** woolfy left
[22:50] *** lizmat left
[22:50] <timotimo> p6: my Int @foo; say @foo.WHAT;

[22:50] <64MAAITRZ> rakudo-{parrot,jvm,moar} 57a08a: OUTPUT«(Array[Int])␤»

[22:50] <64MAAITRZ> ..niecza v24-109-g48a8de3: OUTPUT«Rebuild in progress␤»

[22:50] <camelia> rakudo-{parrot,moar} 57a08a: OUTPUT«(Array[Int])␤»

[22:50] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«(Array)␤»

[22:50] <camelia> ..rakudo-jvm 57a08a: OUTPUT«Rebuild in progress␤»

[22:50] <timotimo> p6: my int @foo; say @foo.WHAT;

[22:50] <64MAAITRZ> rakudo-{parrot,jvm,moar} 57a08a: OUTPUT«(Int)␤»

[22:50] <64MAAITRZ> ..niecza v24-109-g48a8de3: OUTPUT«===SORRY!===␤␤Malformed my at /tmp/tmpfile line 1:␤------> my⏏ int @foo; say @foo.WHAT;␤␤Parse failed␤␤»

[22:50] <camelia> rakudo-{parrot,jvm,moar} 57a08a: OUTPUT«(Int)␤»

[22:50] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«===SORRY!===␤␤Malformed my at /tmp/tmpfile line 1:␤------> my⏏ int @foo; say @foo.WHAT;␤␤Parse failed␤␤»

[22:50] <timotimo> LTA error, IMHO

[22:58] <dalek> perl6.org: ae390ec | flussence++ | / (16 files):

[22:58] <dalek> perl6.org: Replace LHF anon divs with semantic counterparts

[22:58] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/ae390ec81f

[22:58] <flussence> (couldn't find anything else to nitpick :( )

[22:59] <flussence> (did remember to test IE8, don't panic)

[22:59] <timotimo> cool :)

[23:00] <timotimo> can we get a meta generator and generation date+time?

[23:01] *** lizmat joined
[23:03] *** denis_boyun left
[23:08] *** woolfy joined
[23:08] <timotimo> flussence: http://perl6.org/about/ - do you see the "if you want to contribute" text getting split into two pieces, one of which is located in an awkward spot near the top?

[23:08] <timotimo> http://perl6.org/documentation/ - holy fuck, this looks b0rked

[23:08] <timotimo> oh, full refresh fixed it

[23:08] <timotimo> never mind in that case

[23:09] *** FROGGS left
[23:10] *** woolfy left
[23:11] *** woolfy joined
[23:12] <flussence> yeah, that's the one downside

[23:12] <flussence> the files are static, so they get cached "properly" :)

[23:12] <timotimo> aye

[23:12] *** woolfy left
[23:12] *** woolfy joined
[23:17] <dalek> perl6.org: 628cfa8 | flussence++ | README.md:

[23:17] <dalek> perl6.org: Fix indents so code block renders correctly

[23:17] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/628cfa8aea

[23:17] *** hoverboard joined
[23:19] *** bonsaikitten left
[23:21] *** xiaomiao joined
[23:26] *** pippo left
[23:26] *** zacts_ is now known as zacts

[23:26] *** woolfy left
[23:27] *** woolfy joined
[23:28] *** zacts left
[23:29] <tadzik> wow, Poznaniers are still drinking :D

[23:38] *** jsn_ joined
[23:40] <jsn_> (sorry for the off-topic spam: new AI project) https://drive.google.com/folderview?id=0BxOraO_JvOXkeTgyLXQ2dmRHYkU&usp=sharing

[23:45] *** jsn_ left
[23:47] *** woolfy left
[23:48] *** hoverboard left
