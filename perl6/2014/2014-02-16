[00:00] *** spider-mario joined
[00:01] *** dmol left
[00:02] *** araujo joined
[00:02] *** berekuk left
[00:11] *** spider-mario left
[00:14] *** sftp_ joined
[00:15] *** sftp left
[00:16] <jnthn> *sigh* a bunch of Windows batch file learnings later... 

[00:17] <TimToady> my condolences

[00:17] <TimToady> maybe you should've written it in Perl :P

[00:18] <jnthn> :P

[00:20] <timotimo> if only at spectest time we had some kind of perl 6 interpreter available ...

[00:22] <jnthn> OK, now (at least on my box) the socket tests don't hang. And all but 6 pass.

[00:24] *** BenGoldberg joined
[00:24] <dalek> roast: 9d9bc71 | jnthn++ | S32-io/IO-Socket-INET. (2 files):

[00:24] <dalek> roast: Fixes socket tests on Moar on Windows.

[00:24] <dalek> roast: review: https://github.com/perl6/roast/commit/9d9bc71691

[00:25] <dalek> rakudo-star-daily: 8dc3a7f | coke++ | log/ (5 files):

[00:25] <dalek> rakudo-star-daily: today (automated commit)

[00:25] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/8dc3a7f0fd

[00:25] <dalek> perl6-roast-data: b524262 | coke++ | / (3 files):

[00:25] <dalek> perl6-roast-data: today (automated commit)

[00:25] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/b5242624bc

[00:34] *** beastd left
[00:51] *** Rotwang left
[01:00] <japhb> .tell smls That mockup looks really good.  Aside from my general feeling that the green has been a bit too chartreuse for a while, I think it's excellent work.  +1 to make it so.

[01:00] <yoleaux> japhb: I'll pass your message to smls.

[01:01] <jnthn> japhb: You've got server sockets in Moar now too

[01:09] <dalek> nqp: 84497ec | jnthn++ | / (2 files):

[01:09] <dalek> nqp: Get Moar with server sockets; map setinputlinesep.

[01:09] <dalek> nqp: review: https://github.com/perl6/nqp/commit/84497ec55c

[01:10] *** pippo joined
[01:11] <dalek> rakudo/nom: d9c8083 | jnthn++ | src/core/IO/Socket.pm:

[01:11] <dalek> rakudo/nom: Fix recv with no length specified.

[01:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d9c8083420

[01:11] <dalek> rakudo/nom: 7f0cc2b | jnthn++ | / (2 files):

[01:11] <dalek> rakudo/nom: Bump to Moar and NQP with server socket bits.

[01:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7f0cc2bbb6

[01:14] <pippo> r: my $s = 'ooooooooooooooo'; $s ~~ s/o+/o/; say $s;

[01:14] <yoleaux> 12 Feb 2014 08:17Z <FROGGS> pippo: Yeah, I was fearing that running the loop would cause this... So we possible would just need to root it, but my gut feeling says that this issue is part of a bigger problem

[01:14] <camelia> rakudo-parrot f35ca0, rakudo-jvm f35ca0, rakudo-moar f35ca0: OUTPUT«o␤»

[01:14] *** grondilu joined
[01:16] <pippo> r: my $s = "ooooooooooooooo"; $s ~~ s/o+/o/; say $s;

[01:16] <camelia> rakudo-parrot f35ca0, rakudo-jvm f35ca0, rakudo-moar f35ca0: OUTPUT«o␤»

[01:17] <pippo> r: my $s = "Hellooooooooooooooo"; $s ~~ s/o+/o/; say $s;

[01:17] <camelia> rakudo-parrot f35ca0, rakudo-jvm f35ca0, rakudo-moar f35ca0: OUTPUT«Hello␤»

[01:20] <pippo> On my latest git of JVM and Moar running my $s = "Hellooooooooooooooo"; $s ~~ s/o+/o/; say $s; gives Hellooooooooooooooo!!

[01:21] <jnthn> Hm

[01:21] <jnthn> I have a HEAD MoarVM Rakudo here and...

[01:21] <jnthn> > my $s = "Hellooooooooooooooo"; $s ~~ s/o+/o/; say $s;

[01:22] <jnthn> Hello

[01:25] <pippo> jnthn: use the RPL and do it once. Then up arrow and enter to repeat. What do you get?

[01:27] <jnthn> pippo: Just did it ten times; Hello consistently.

[01:29] <pippo> r: my $s = 'Helloooooooooooooooo'; $s ~~ s/o+/o/; say $s; my $s = 'Helloooooooooooooooo'; $s ~~ s/o+/o/; say $s;

[01:29] <camelia> rakudo-parrot f35ca0, rakudo-jvm f35ca0, rakudo-moar f35ca0: OUTPUT«Potential difficulties:␤    Redeclaration of symbol $s␤    at /tmp/tmpfile:1␤    ------> oooooooo'; $s ~~ s/o+/o/; say $s; my $s ⏏= 'Helloooooooooooooooo'; $s ~~ s/o+/o/;␤Hello␤Hello␤»

[01:31] <[Coke]> right. REPL is more forgiving about redeclarations, IIRC.

[01:32] <pippo> jnthn: do not know why but here it does not work the second time in the REPL. Strange... I'll recompile from a fresh git... Thank you and good night. 

[01:33] <jnthn> Yeah, sleep is a good idea :)

[01:34] <jnthn> 'night, #perl6

[01:34] *** pippo left
[01:34] <masak> 'night, jnthn

[01:58] *** woolfy joined
[02:24] *** Mouq joined
[02:24] <Mouq> perl6: say -1 +> 1

[02:24] <camelia> rakudo-parrot f35ca0, rakudo-jvm f35ca0, rakudo-moar f35ca0, niecza v24-109-g48a8de3: OUTPUT«-1␤»

[02:25] <Mouq> perl6: say -100 +> 1

[02:25] <camelia> rakudo-parrot f35ca0, rakudo-jvm f35ca0, rakudo-moar f35ca0, niecza v24-109-g48a8de3: OUTPUT«-50␤»

[02:34] <TimToady> grondilu: I disagree with your last change; qu was intended to be for the users as much as for the module writer

[02:35] <TimToady> like the 'set' or 'bag' helpers

[02:36] <lue> TimToady: qu?

[02:37] <TimToady> http://rosettacode.org/mw/index.php?title=Quaternion_type&curid=7858&diff=176481&oldid=176469&rcid=206201

[02:38] <TimToady> why force the user to say Quaternion.new()

[02:40] <TimToady> I just suspect that if you're doing a few Quaternions, you're doing a lot of 'em

[02:42] * lue imagines Quaternion.new() has arguments for it that are similar to those of the *_cast<> family in C++

[02:46] *** FROGGS_ joined
[02:50] *** FROGGS left
[02:54] <Mouq> Hey, #perl6, any ideas for shortening this? https://codegolf.stackexchange.com/questions/20995/#21006

[02:54] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=21006

[02:59] *** hoverboard joined
[02:59] <TimToady> use lsb or msb?

[03:01] <Mouq> TimToady: ...yes. Yes. That would probably be a good idea -_-

[03:01] <Mouq> TimToady: Thank you

[03:03] *** cognominal left
[03:03] *** cognominal joined
[03:05] <TimToady> r: say 0.msb

[03:05] <camelia> rakudo-parrot 7f0cc2, rakudo-jvm 7f0cc2, rakudo-moar 7f0cc2: OUTPUT«Nil␤»

[03:05] <TimToady> r: say -1.msb

[03:05] <camelia> rakudo-parrot 7f0cc2, rakudo-jvm 7f0cc2, rakudo-moar 7f0cc2: OUTPUT«0␤»

[03:06] <TimToady> r: say -1.lsb

[03:06] <camelia> rakudo-parrot 7f0cc2, rakudo-jvm 7f0cc2, rakudo-moar 7f0cc2: OUTPUT«0␤»

[03:07] <grondilu> TimToady: I thought this would make it more analogous to Complex.

[03:08] <grondilu> the standard way to create a complex is to either use Complex.new or the i suffix.

[03:08] <grondilu> so as soon as we have the j and k suffixes, we don't need qu

[03:09] <lue> grondilu: there's no literal for Quaternions defined, unlike Complex's <1+2i> . qu() seems to be close to what we want in that case.

[03:15] <Mouq> TimToady: Actually, I thought .lsb or .msb would make everything easier, but it seems to be less helpful than I'd hoped

[03:16] *** hoverboard left
[03:17] *** dbrock left
[03:17] <TimToady> if the idea is to treat it as always unsigned, maybe +& with 2^64-1 or so first?

[03:17] <TimToady> well, % 2**64 might be shorter

[03:18] <grondilu> lue: there's no quaternion literal, but since the task defines j and k postfixes, there are algebraic expressions such as 1+2i+3j, which is arguably very close to a quaternion literal.  

[03:18] *** dbrock__ joined
[03:19] <lue> yeah, though I suspect there's a reason TimToady didn't think constant folding was good enough :)

[03:19] <grondilu> fine, I'll change back the task.  

[03:20] <grondilu> does it have to be a multi, though?

[03:20] <Mouq> TimToady: Hrm.. The OP seems to be saying it should be signed, but wasn't very specific. I think I'm simply going to remove my answer for now

[03:23] <timotimo> do we have something like "is there a character available to be read" on moarvm? or a kind of select?

[03:23] <timotimo> for file handles and such

[03:30] <timotimo> i kind of think IO::Handle should have something like that. or maybe a getc that doesn't block or something like that

[04:06] *** colomon joined
[05:12] <Mouq> I doubt I'll complete this, so here: https://gist.github.com/Mouq/9029616

[05:15] <Mouq> I had a solution that was correct, of course, but it wasn't as much fun as this version

[05:30] *** hoverboard joined
[05:30] *** kurahaupo_mobile joined
[05:40] *** kurahaupo_mobile left
[05:46] *** slavik1 left
[05:46] *** Khisanth left
[06:00] *** Khisanth joined
[06:26] *** Mouq left
[06:29] *** BenGoldberg left
[06:41] <moritz> \o

[06:59] <moritz> m: say Int.^parents

[06:59] <camelia> rakudo-moar 7f0cc2: OUTPUT«␤»

[06:59] <moritz> huh?

[06:59] <moritz> m: say Int.^parents(:all)

[06:59] <camelia> rakudo-moar 7f0cc2: OUTPUT«(Cool) (Any) (Mu)␤»

[06:59] <moritz> oh

[06:59] <moritz> m: say Int.^parents(:all, :tree)

[06:59] <camelia> rakudo-moar 7f0cc2: OUTPUT«(Cool) (Any) (Mu)␤»

[06:59] <moritz> m: say Int.^parents(:all, :tree).perl

[06:59] <camelia> rakudo-moar 7f0cc2: OUTPUT«([Cool, [Any, [Mu]]],)␤»

[07:08] *** hoverboard is now known as moistcherry

[07:11] *** zby_home_ joined
[07:18] *** moistcherry is now known as hoverboard

[07:19] <dalek> doc: 0d938ff | moritz++ | lib/objects.pod:

[07:19] <dalek> doc: Add some links

[07:19] <dalek> doc: review: https://github.com/perl6/doc/commit/0d938ffd79

[07:19] <dalek> doc: 861e01f | moritz++ | lib/objects.pod:

[07:19] <dalek> doc: MOP: can, parents

[07:19] <dalek> doc: review: https://github.com/perl6/doc/commit/861e01fcee

[07:19] <dalek> doc: cbe2e65 | moritz++ | lib/objects.pod:

[07:19] <dalek> doc: MOP: mention that .^methods actually returns a list of method objects

[07:19] <dalek> doc: review: https://github.com/perl6/doc/commit/cbe2e65a15

[07:24] *** hoverboard left
[07:35] *** SamuraiJack joined
[07:38] <FROGGS_> good morning

[07:41] <moritz> good morning FROGGS_ 

[07:46] *** SamuraiJack left
[07:46] *** darutoko joined
[07:48] <FROGGS_> huh, perl6-m IO-Socket-INET.t only fails test 34 and 36 on linux...

[08:00] <moritz> t/spec/S32-io/IO-Socket-INET.t                              (Wstat: 0 Tests: 41 Failed: 21)

[08:00] <moritz>   Failed tests:  1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23

[08:00] <moritz>                 25, 27, 29, 31-32, 34, 36, 38, 40

[08:00] <moritz> that what I get (also linux)

[08:00] <moritz> oh

[08:00] <moritz> my rakudo is too old

[08:00] <moritz> never mind

[08:14] *** berekuk joined
[08:30] *** Zaydon joined
[08:41] *** dmol joined
[08:45] *** FROGGS_ left
[09:00] *** FROGGS_ joined
[09:06] *** thou left
[09:11] *** dmol left
[09:12] *** molaf joined
[09:19] *** berekuk left
[09:23] <FROGGS_> the IO-Socket-INET.t would pass if we'd loop in IO::Socket.read like we do for jvm, but I leave it untouched because I am not sure how jnthn++ wants it to happen

[09:23] *** rindolf joined
[09:34] *** berekuk joined
[09:41] <grondilu> linux here.  IO-Socket-INET.t passes all but 34 ane 35.  FWW

[09:41] <grondilu> s/ane/and

[09:41] <grondilu> (with perl6-m, that is)

[09:42] <FROGGS_> mine failed 34 and 36

[09:43] *** Rotwang joined
[09:43] <FROGGS_> easy to fix though

[09:44] <grondilu> details: https://gist.github.com/grondilu/9031858

[09:44] <grondilu> oh sory, that was 34 nd 36 indeed

[09:44] <FROGGS_> yeah, that matches

[09:51] *** darutoko- joined
[09:53] *** denis_boyun joined
[09:54] *** darutoko left
[09:58] *** darutoko joined
[09:59] *** SamuraiJack joined
[09:59] <[Sno]> I heard from liz at niederrhein.pm that there is a MoarVM "released" and a rakudo-star based on it?

[10:00] <[Sno]> is that early early adopter (I don't find something on http://rakudo.org/)

[10:01] *** darutoko- left
[10:02] <FROGGS_> [Sno]: the module installer does not work yet on moar, and there should be nativecall support to support DBIish module

[10:03] <FROGGS_> [Sno]: so you can build rakudo on moar, but you can't play well with modules yet

[10:03] *** lizmat joined
[10:05] <[Sno]> thanks - that I probably don't package this version :)

[10:05] *** lizmat left
[10:05] *** lizmat joined
[10:22] <masak> antenoon, #perl6

[10:23] <FROGGS_> hi masak 

[10:26] *** Adriaaan joined
[10:33] *** crab2313 joined
[10:34] *** darutoko- joined
[10:35] * timotimo hunts moar memory wastage

[10:37] *** darutoko left
[10:45] * timotimo is confused by MVMString

[10:45] <FROGGS_> ===CONFUSED===

[10:55] <timotimo> either this is wrong, or i just can't make sense out of it.

[10:57] <timotimo> it seems like the string comparison code will only work if one of the two strings is a 32bit string and the other is an 8bit string

[10:57] <timotimo> in both directions, but not when both of them are the same type

[10:57] <timotimo> wtf :(

[10:58] *** Adriaaan left
[10:59] <timotimo> i think i'll lie down again >_<

[10:59] <timotimo> https://github.com/MoarVM/MoarVM/blob/master/src/strings/ops.c#L184 ← in the mean time ... whhhaaaaa??

[11:04] *** virtualsue joined
[11:23] *** virtualsue left
[11:24] *** virtualsue joined
[11:30] <moritz> ok, I can reproduce that the socket tests 34 and 36 fail on linux

[11:31] <moritz> http://perlpunks.de/paste/show/5300a184.6d9a.1a3

[11:38] <jnthn> moritz: They fail on Windows too.

[11:39] <jnthn> moritz: I wanted to do some research to see if they're kosher...

[11:41] *** Adriaaan joined
[11:43] <FROGGS_> jnthn: well, it is just that one requested something bigger than chunksize, no?

[11:44] <moritz> just ftr, they pass on the JVM

[11:44] <jnthn> recv on Linux appears to take a MSG_WAITALL flag that determines if it shuld wait for enough data to satisfy the amount requested, or block until connection close. The open group have the same explanation.

[11:44] <moritz> not sure if that means anything

[11:44] <jnthn> recv in Perl 5 also takes flags

[11:45] <jnthn> Presumably one of them would be MSG_WAITALL too

[11:45] <jnthn> The thing is that some use cases really don't want to block

[11:45] <FROGGS_> yeah

[11:46] <jnthn> You'd like to .recv and get what's there

[11:46] <jnthn> Not hang around waiting.

[11:48] <FROGGS_> but I don't wanna get a chunk either when there is already more

[11:50] <moritz> maybe we should really expose those flags to the user

[11:51] <jnthn> In the test, the server *deliberately* sleeps for a second between sending each packet.

[11:51] <jnthn> There's certainly not "already more" :)

[11:52] *** Rotwang left
[11:52] <jnthn> Well, currently we have this:

[11:52] <jnthn> method recv (Cool $chars = $Inf, :$bin? = False) {

[11:53] <jnthn> We could make it so a plain .recv means "give me back the next packat worth's of data"

[11:53] *** molaf left
[11:54] <jnthn> And if you .recv($chars) (which is really .recv($bytes) in :bin mode) then that's your "I really want that amount" indicator

[11:55] <FROGGS_> +1

[11:56] <jnthn> Oh, the test in question uses .read also...

[11:57] <jnthn> So maybe it's just read that should get the "wait" semantics?

[11:58] <jnthn> Lemme try that.

[11:59] <jnthn> yeah, that makes it pass :)

[12:01] <dalek> rakudo/nom: 385ae4e | jnthn++ | src/core/IO/Socket.pm:

[12:01] <dalek> rakudo/nom: Make read have wait semantics, like elsewhere.

[12:01] <dalek> rakudo/nom: 

[12:01] <dalek> rakudo/nom: Unbusts the last failing sockets tests on Moar.

[12:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/385ae4efbc

[12:02] <FROGGS_> jnthn: umm, I think there should be an #?if !parrot instead

[12:02] <jnthn> oh, darn

[12:03] <dalek> rakudo/nom: 230a54b | jnthn++ | src/core/IO/Socket.pm:

[12:03] <dalek> rakudo/nom: Fix conditional comp mess-up; FROGGS++.

[12:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/230a54b533

[12:04] <vendethiel> a few typo I noticed in S05/6, where to pr ?

[12:06] <jnthn> vendethiel: perl6/specs repo 

[12:06] <vendethiel> seems like I can't do it from gh web interface

[12:13] *** newbie_Perl6_ joined
[12:21] <newbie_Perl6_> I have some ideas, some suggestions. Change the regex modifiers :i to :C, :m to :M. Use the negative meaning of uppercase letters, just as the negative meaning of \D, \W etc.

[12:26] <nwc10> are the spectest percentages going to look better this evening?

[12:27] <jnthn> nwc10: Should do, due to passing socket tests :)

[12:28] *** spider-mario joined
[12:29] <jnthn> newbie_Perl6_: Even if that is a good idea (I'm not sure, :i and :m are culturally well engrained, and :c has a meaning unrelated to case), it's probably a bit late to be changing things like that.

[12:30] <newbie_Perl6_> Thank you for your reply.

[12:31] <newbie_Perl6_> I think,:ignorecase and :ignoremark have some kind of negative meaning.

[12:31] <jnthn> Well, with colonpairs the negation syntax is :!foo 

[12:32] <newbie_Perl6_> Understanded.

[12:33] <jnthn> I tend to see the things you put before regexes as tweaks to the default semantics, though.

[12:38] <newbie_Perl6_> I just think, :m as the acronym of :ignoremark, :c as the acronym of :ignorecase, but :c already uses as the acronym of :continue.

[12:38] *** virtualsue left
[12:38] <newbie_Perl6_> I have not some deep meaning.

[12:40] <grondilu> well done guys

[12:40] <grondilu> $ prove -e perl6-m t/spec/S32-io/IO-Socket-INET.t

[12:40] <grondilu> t/spec/S32-io/IO-Socket-INET.t .. ok

[12:40] <grondilu> All tests successful.

[12:40] <jnthn> phew :)

[12:40] <jnthn> grondilu: Linux? Or something else?

[12:41] <grondilu> linux

[12:41] <jnthn> k

[12:41] * jnthn hops an OSX user will pop up with a positive/negative at some point :)

[12:42] <jnthn> uh, hopes

[12:46] *** kivutar joined
[12:47] *** crab2313 left
[12:51] <vendethiel> damn, does somebody have http://ftp.heanet.ie/mirrors/fosdem-video/2014/K3201/Saturday/Perl_6_what_can_you_do_today.webm with a little better mic maybe ?

[12:53] *** colomon left
[12:53] *** sqirrel_ joined
[12:56] <nwc10> jnthn: 34 and 36 fail. I don't have time to investigate - I am required to go out and feed the ducks: http://paste.scsys.co.uk/306601

[12:56] *** berekuk left
[12:56] *** crab2314 joined
[12:57] *** crab2314 left
[12:57] <nwc10> that was OS X. Specifically Snow Leopard

[12:57] <jnthn> nwc10: That was the failure mode before my Rakudo commit a few moments ago.

[12:57] <jnthn> (On Windows and Linux also.)

[12:57] <jnthn> Are you at HEAD?

[12:58] *** crab2313 joined
[13:01] *** berekuk joined
[13:02] *** dmol joined
[13:08] *** pippo joined
[13:10] <pippo> vendethiel: look here http://irclog.perlgeek.de/perl6/2014-02-08#i_8253359

[13:11] <pippo> vendethiel: the beginning is not good but afterwards it improoves very much.

[13:11] <vendethiel> pippo: erm. thanks. Not sure how you got my call, but I'll thank the internet gods

[13:24] *** newbie_Perl6_ left
[13:27] *** virtualsue joined
[13:45] <grondilu> fg

[13:45] <grondilu> ah wrong terminal, sorry

[13:46] *** SamuraiJack left
[13:50] *** darutoko joined
[13:52] *** darutoko- left
[13:57] *** zakharyas joined
[13:59] *** daniel-s_ joined
[14:01] *** berekuk left
[14:05] *** crab2313 left
[14:19] *** denis_boyun left
[14:25] *** daniel-s_ left
[14:27] *** ajr joined
[14:27] *** ajr is now known as Guest45158

[14:28] *** Guest45158 is now known as ajr_

[14:32] *** arnsholt joined
[14:33] <moritz> http://www.oracle.com/technetwork/articles/java/jf14-date-time-2125367.html

[14:39] *** sqirrel_ left
[14:42] *** SamuraiJack joined
[14:42] *** darutoko- joined
[14:45] *** darutoko left
[14:57] *** johnmilton joined
[15:03] <masak> moritz: interesting reading.

[15:03] <masak> moritz: reminds me of zefram's talk last YAPC::EU.

[15:03] * timotimo gets a little bit frustrated with moarvm for the moment

[15:06] *** xinming left
[15:08] *** xinming joined
[15:18] *** berekuk joined
[15:25] *** crab2313 joined
[15:26] *** beastd joined
[15:26] <masak> wow, some people really like inheritance: http://stackoverflow.com/questions/21692193/why-not-inherit-from-listt

[15:28] <masak> I think the confusion behind that SO question is connected to a certain kind of thinking about how OO "should" behave.

[15:28] <masak> (a kind of thinking that I no longer subscribe to)

[15:28] <moritz> masak: in my early OO days my thoughts were quite similar

[15:29] <moritz> (partially because nobody taught me better, and I didn't really know why my own class designs went wrong so spectacularly)

[15:29] <masak> maybe a person *has* to start learning OO (and modeling) from that direction, I dunno.

[15:29] <masak> or maybe just a small number of people get it right from the start.

[15:29] <masak> I'd like to find a name for the kind of thinko that leads to that kind of SO question.

[15:30] <masak> something like "real-world modeling over-attachment".

[15:30] <masak> but that doesn't abbreviate nicely :)

[15:30] <moritz> I think a good reason is that many OO books don't include many examples for good design

[15:30] <moritz> which is no surprise if you start with class Dog is Mammal { ... }

[15:31] <timotimo> heh.

[15:31] <masak> yeah, coming up with good examples is hard.

[15:31] <moritz> I noticed :-)

[15:31] <masak> even books that are good tend to, somewhere, contain an *apology* of the form "I know this is oversimplified, but I had to pare things down significantly because it's a book and because I want to show principles, not make a real-world example"

[15:32] *** berekuk left
[15:32] <arnsholt> Teaching is really hard

[15:32] <jnthn> In one course I wrote there was some inheritance...but by the end of the course it'd been refactored into composition...

[15:32] <masak> well, I'm coming around strongly to the idea that there are two disjunct forms of teaching.

[15:33] <masak> there's "lies to children"/"it's simple, look"

[15:33] <masak> and there's "explanations to grownups"/"let me tell you the gory details"

[15:33] *** clsn left
[15:33] *** zby_home_ left
[15:34] *** berekuk joined
[15:34] <masak> I tend to keep that distinction in mind when developing Beginner-level and Intermediate-level courses at Edument.

[15:35] * moritz is pretty bad at beginner-level teaching

[15:35] <masak> top answer at HN has an interesting point, as well: "Do you want to be able to pass in Team for every function that currently asks for List<T>? Because that is what you are stating through the act of subclassing."

[15:38] *** berekuk left
[15:38] <nwc10> jnthn: I thought that I was on HEAD, but clearly I wasn't as I am now and they all pass

[15:39] *** rindolf left
[15:39] <FROGGS_> cool!

[15:39] <FROGGS_> so win32, linux and mac is fine :o)

[15:40] <timotimo> \o/

[15:54] *** spider-mario left
[15:55] *** dmol left
[15:58] *** darutoko joined
[15:58] *** molaf joined
[16:01] *** darutoko- left
[16:02] *** clsn joined
[16:03] *** Psyche^ left
[16:04] *** kaare_ left
[16:04] *** Psyche^ joined
[16:06] <ajr_> One of the problems of teaching is knowing the subject too well. Passing from "Unconscious Incompetence" (not knowing what you don't know), through "Conscious Incompetence", (knowing what you don't know), to "Conscious Competence" (knowing what you know), to "Uncoscious Competence", (being able to do it without thinking), we forget what was difficult in the first stages.

[16:07] *** crab2313 left
[16:07] <timotimo> aye.

[16:08] <ajr_> There's an optimum level of competence for a teacher, which I suspect is just slightly ahead of the students.

[16:09] <ajr_> Sometimes, of course, the students contribute to the teacher's knowledge. (See Feynman on the subject.)

[16:10] *** thou joined
[16:15] *** berekuk joined
[16:17] <masak> ajr_: I think it's simply important to be able to remember, in sufficient detail, what it was like not to know the subject matter.

[16:18] <arnsholt> Yeah. That's really hard though

[16:19] <ajr_> Right. That's not so hard if you learned the subject recently, (and had some difficulties doing so), but there's such a  state as being too good at it.

[16:19] <timotimo> .o(amnesia: a teacher for pigs)

[16:20] *** raiph joined
[16:23] *** Adriaaan left
[16:25] *** newbie_Perl6 joined
[16:26] *** thou left
[16:27] *** thou joined
[16:29] <moritz> well, if the teacher isn't ahead far enough of the students, she might share the same confusion as the students

[16:30] <moritz> which is one of the reasons that students flock around the luminaries in a field

[16:31] *** molaf_ joined
[16:31] *** berekuk left
[16:34] *** molaf left
[16:36] *** dalek left
[16:36] *** d4l3k_ joined
[16:37] *** d4l3k_ is now known as dalek

[16:37] *** newbie_Perl6 left
[16:39] <masak> swapping between the teachers and students' point of view carries some of the highest rewards for me when I'm teaching. it's extremely tiring, but also satisfying.

[16:39] <masak> it's a rare privilege to be allowed write access to people's brains :>

[16:40] <moritz> w 17

[16:40] <moritz> sorry, forgot that slash :)

[16:41] <timotimo> moritz: you should try weechat, you can hit alt-j 1 7 instead of typing /w 17

[16:41] <masak> :)

[16:41] * masak should try weechat too

[16:41] <raiph> I'd say recent brain science increasingly supports the supposedly disproven notion that many fundamental dichotomies of human experience, including distinctions in teaching/learning modalities like lies/details, fairly directly correspond to the distinct perspectives and interwoven contributions to consciousness of folks' left and right cerebral he

[16:41] <raiph> mispheres

[16:41] <timotimo> raiph: i have no idea how to interpret that piece of knowledge

[16:41] <moritz> timotimo: esc+u also works in irssi; I just don't always use that feature

[16:41] <timotimo> moritz: yeah, but that takes away the whole second row of keys on your keyboard :P

[16:42] <raiph> timotimo: I suspect that's your left hemisphere balking :)

[16:42] <moritz> raiph: what does that mean?

[16:42] <timotimo> :D

[16:43] <hoelzro> timotimo: done anything with the Qt creator highlighting yet?

[16:44] *** zakharyas left
[16:45] <raiph> classic example from, I think, the late 80s: lady has her corpus collosum cut; asked "is your left hand numb?"; is shown 'yes' and 'no'; asked to point to correct answer; what happened? her left and right arms fought; which won and why?

[16:45] <arnsholt> Oooh, the Object types corresponding to Java's native number types all inherit from a single superclass \o/

[16:45] <arnsholt> That's one annoying switch block I don't have to write

[16:47] *** Ven left
[16:48] <masak> raiph: I'm reminded of Julian Jaynes's "Bicameral Mind" theory.

[16:49] <masak> raiph: http://blog.plover.com/brain/Jaynes.html

[16:50] <ajr_> "The Bicameral Mind" was fascinating, but it seemed too recent and too fast for such a profound change.

[16:50] <geekosaur> the naïve one was disproven. the reality turns out to be a lot more complex (unsurprisingly) and brain hemisphere does play into it... but not the way the naïve one claims

[16:53] *** berekuk joined
[16:53] <ajr_> When teaching a new topic, it's important to relate it to something the student already knows, (if possible).

[16:53] <raiph> jayne's theory was incredibly speculative, contains major errors and appeared in the 60s.

[16:54] <raiph> ajr_: there's a core issue -- what someone knows and whether they know they know.

[16:54] <raiph> ajr_: does Joe know he saw a saw? http://www.youtube.com/watch?v=aCv4K5aStdU

[16:55] <ajr_> It's impossible to process a completely new experience; it has to be repeated to be comprehensible. That's why it's much easier to teach a third programming language than a first one.

[16:56] <ajr_> raiph: yes, and also the form in which one knows it. Try communicating a physical skill verbally; you'll almost certainly omit some very important features.. 

[16:58] *** zby_home_ joined
[16:58] <moritz> masak: that link is fascinating; I could never have gotten the idea that so much culture could have been created without consciousness

[16:59] <masak> yeah, it's a wacky idea.

[17:00] *** [Sno]_ joined
[17:02] *** sftp joined
[17:02] *** Adriaaan joined
[17:03] <raiph> michael gazzaniga (main guy in video I linked) is a very well respected brain scientist; his stuff is about excellent science driven by experimental evidence rather than highly speculative stuff like jaynes' (not saying to what degree I think Jaynes is wrong, right, crazy, or whatever, just that there's much more solid science on this topic which i

[17:03] <raiph> s not wacky)

[17:03] *** sunnavy_ joined
[17:04] *** dagurval_ joined
[17:05] <masak> *nod*

[17:05] *** berekuk left
[17:07] <raiph> masak: have you read TMAHE? http://www.iainmcgilchrist.com/comments.asp#content

[17:07] <timotimo> hoelzro: what does "anything" mean in this case?

[17:08] <hoelzro> timotimo: any work whatsoever =)

[17:08] *** grondilu left
[17:08] *** sftp_ left
[17:08] *** [Sno] left
[17:08] *** dagurval left
[17:08] *** sunnavy left
[17:08] *** jercos left
[17:08] *** daxim left
[17:08] *** [Sno]_ is now known as [Sno]

[17:08] <timotimo> didn't you see my stuff i posted yesterday? :)

[17:08] <timotimo> http://i.imgur.com/1pCDtco.png?1

[17:08] <timotimo> https://github.com/timo/perl6-kate-syntax

[17:09] *** grondilu joined
[17:09] <hoelzro> no, I hadn't!

[17:09] <hoelzro> very nice!

[17:10] <timotimo> feel free to finish my work

[17:10] <timotimo> it's super crappy at the moment :)

[17:10] <hoelzro> timotimo: I can't make any promises; the next week or two will be hectic

[17:10] <hoelzro> but I'll take an invite to the quest =)

[17:10] *** jercos joined
[17:11] <timotimo> \o/

[17:11] *** Psyche^ left
[17:12] *** Psyche^ joined
[17:13] <arnsholt> jnthn: How heavy-weight are CallSiteDescriptors? Better to create one for a callback type and reuse it, or just create new ones for each invocation?

[17:13] <masak> raiph: I hadn't, but it's now on my wish list.

[17:14] <jnthn> arnsholt: Not too bad, but I'd still re-use it.

[17:14] <jnthn> arnsholt: Unless it's a real pain to do so.

[17:14] <arnsholt> Nah, the callback handler oboject carries around a fair chunk of state already, so that's not a problem

[17:15] *** daxim joined
[17:17] * moritz subscribes to MJD's blog

[17:20] <raiph> masak: 12 minute version: http://www.youtube.com/watch?v=dFs9WO2B8uI

[17:32] *** ajr_ left
[17:33] *** ajr joined
[17:33] *** ajr is now known as ajr_

[17:55] *** molaf_ left
[17:58] <hoelzro> timotimo: I like the way you grab the operator list

[17:58] *** berekuk joined
[17:58] <timotimo> :)

[17:58] <timotimo> i was like "nope, not going to do this by hand"

[17:58] *** berekuk left
[17:59] <hoelzro> =)

[18:02] <hoelzro> that syntax file is actually pretty simple

[18:03] <hoelzro> bravo kate folk

[18:04] <timotimo> it may be simple, but i had a hard time wrapping my head around how it exactly operates

[18:04] <timotimo> anyway, i'm glad you're enjoying it! makes it easier for you to finish my shoddy work :)

[18:07] <hoelzro> heh

[18:07] *** fridim_ joined
[18:07] <hoelzro> "hoelzro: director of syntax highlighting"

[18:07] <timotimo> :D

[18:07] <timotimo> has a certain ring to it, doesn't it

[18:10] <tadzik> Grammar, Lights, Actions!

[18:15] * moritz wonders if somebody has hacked avar's twitter account

[18:17] <timotimo> who is that?

[18:17] <moritz> a perl hacker who used to be active in Perl 6 community as well

[18:17] *** spider-mario joined
[18:18] * moritz always feels that the question who somebody is actually deserves a 2-hour explanation

[18:18] <avar> moritz: I think I just hacked my own account.

[18:18] <tadzik> :)

[18:18] <moritz> avar: do explain

[18:19] <avar> I was uploading some skiing videos from this week: https://www.youtube.com/playlist?feature=edit_ok&list=PLStqrm3-3tOOxRYaZZtIttmcGh9NHiny1

[18:19] <avar> Apparently I don't understand social thingies and my youtube is bound to my twittertube

[18:19] <avar> Although I guess I could use it for that spam, not like I use it for anything else :)

[18:19] <moritz> avar: if it's any consolation, I wouldn't have expected that either

[18:21] <tadzik> FROGGS_: ooooh. I just saw 20bd2341081207 on panda/moar-support

[18:21] <tadzik> it explains _so_ _many_ _things_ :)

[18:22] <avar> moritz: If you want to follow me on twitter my alter-ego is much more exciting so far: https://twitter.com/_IcelandMan

[18:22] <tadzik> oh, nevermind

[18:22] <tadzik> I misread it

[18:23] * avar beams away

[18:23] <tadzik> HOLY BATMAN

[18:23] <tadzik> panda is so crazy fast on moarvm, it may actually make using it pleasant rather than painful

[18:23] <tadzik> copying files is still slow tho

[18:25] *** berekuk joined
[18:25] <timotimo> how do we copy files, ooc?

[18:25] <timotimo> shouldn't the operating system do the heavy lifting for us?

[18:25] <timotimo> and is panda actually contacting the server to get the project list?

[18:26] <tadzik> hard to say, as bootstrap fails with STable deserialisation conflict

[18:26] <timotimo> if it's relying on wget or some local cache to be pre-socket-moar-compatible, that may cause a bunch of fastness

[18:26] <tadzik> it's all using IO.copy, in a file-find loop

[18:26] <tadzik> and for some reason that's annoyingly slow

[18:26] <tadzik> although the bug with copying the entire .git/ may still be there...

[18:26] <timotimo> hehe.

[18:27] <timotimo> yeah, many small files.

[18:27] *** ajr joined
[18:27] *** ajr_ left
[18:27] *** ajr is now known as Guest12994

[18:29] *** grondilu left
[18:37] <raydiak> morning

[18:37] <yoleaux> 15 Feb 2014 22:19Z <smls> raydiak: I've made some mockups showing how I think the structure and design of doc.perl6.org could be improved further: http://imgur.com/a/y1dHo -- What do you think?

[18:40] <raydiak> .tell smls I think you did an awesome job, though I also would consider a different book icon.  also, the colors are still up in the air, so feel free to play more with them. many people don't like the current combinations, and I'm not very sold on them myself. make sure you get moritz++'s input too. smls++!

[18:40] <yoleaux> raydiak: I'll pass your message to smls.

[18:41] <benabik> smls++

[18:41] <timotimo> \o/

[18:41] <raydiak> .tell smls as for the structure, layout, etc, my first impression is that it is quite well-considered :)

[18:42] <yoleaux> raydiak: I'll pass your message to smls.

[18:49] <raydiak> ugh. is winter over yet? :P

[18:49] <benabik> Yes, south of the equator.

[18:49] <gfldex> it was 10C here in germany ther whole day

[18:49] *** berekuk left
[18:50] *** kivutar left
[18:50] <raydiak> a week or so ago it was about -25C here, counting wind chill

[18:51] <gfldex> the total amount of cold on the planet seams to have a limit

[18:51] <raydiak> I can only hope

[18:53] <raydiak> weather permitting, several times a week I usually drive to the edge of town and run around in the hills and trees and jump off big rocks like a wild animal. it's part of what keeps me sane. being cooped up sitting in a chair all day *really* starts to wear on me by the end of the cold season

[18:54] <timotimo> like an animal? that sounds like fun

[18:54] <raydiak> it is, quite. basically freerunning out in the woods

[18:55] <raydiak> other times I balance on fallen trees and practice martial arts, or just walk peacefully and appreciate the immense amount of plant and animal life I'm surrounded by

[18:55] <timotimo> :3

[18:57] * raydiak has a viable exit plan for the zombie apocalypse :)

[18:57] *** Guest12994 left
[18:57] <arnsholt> raydiak: Cross-country skiing is a good way to get out and about in the cold season

[18:57] <arnsholt> Perhaps not that well suited to running like an animal, though =)

[18:57] *** darutoko left
[18:58] <raydiak> I'd love to try skiing some day...and snowboarding, and a bunch of other things

[18:58] <raydiak> but for now I'm constrained to activities which are free or nearly so

[18:58] *** ajr_ joined
[19:00] <raydiak> also really need to look for more clients or a traditional job, once weather permits

[19:01] <raydiak> guess I'm whiny today :)

[19:04] *** telex left
[19:05] <timotimo> https://gist.github.com/timo/41d9eb48aea43a48d35a - happy scrolling

[19:06] *** dmol joined
[19:06] *** telex joined
[19:09] <raydiak> http://p6doc.cyberuniverses.com/ # does this arrangement of colors look better than what is currently on doc.perl6.org?

[19:11] <timotimo> i think so

[19:12] <raydiak> it still has the green next to the yellow, but now it's on the footer instead, which I kinda want less contrast around anyway, and the header is blue like perl6.org's home page

[19:13] *** Sqirrel joined
[19:13] *** ajr_ left
[19:15] <FROGGS_> hmmm, I like the footer but not the header :/

[19:16] *** ajr joined
[19:17] *** denis_boyun joined
[19:17] *** ajr is now known as Guest37510

[19:18] <raydiak> FROGGS_: did you like the green header more? or neither one?

[19:19] <FROGGS_> I like the the green header but not the three bars it had

[19:19] <raydiak> three bars?

[19:19] <FROGGS_> in the preview where there was that book on the left

[19:19] <raydiak> oh, that was smls' mockup...none of that actually exists yet, I'm just working on getting the colors right still

[19:20] <FROGGS_> yeah... I like it but I think it could be a bit "cleaner" http://imgur.com/a/y1dHo

[19:21] <raydiak> it looks like he just went with the colors we have live right now and focused on the layout and structure, which is probably not the colors we will have in the end

[19:21] *** Guest37510 left
[19:21] *** rindolf joined
[19:21] <FROGGS_> I love that camelia watermark and the overall layout in his mockup though

[19:23] <raydiak> yep, it looks a lot more like a real website

[19:23] <FROGGS_> exactly

[19:27] <raydiak> I'm basically just cleaning and tweaking today (the things I said I'd do yesterday), so I can have this step taken care of, and just take it easy for a few days...burning myself out, RL is getting stressful

[19:28] <raydiak> clear my head, and come back fresh :)

[19:28] <FROGGS_> that sounds like a good plan :o)

[19:28] <lue> FROGGS_: is it possible that the header and main box border are messing you up because complementary colors?

[19:28] *** berekuk joined
[19:29] <FROGGS_> lue: I think it is just that kind of blue that does not look right to me

[19:30] *** berekuk left
[19:30] <lue> I don't mind that blue, though it looks... interesting next to the yellow. Perhaps switching the colors of the main box and footer box?

[19:31] <raydiak> lue: you think the green border would look okay next to the blue header?

[19:31] <lue> .oO(Web Design: where bikeshedding is the only thing to do.)

[19:31] <raiph> masak: The Master and His Emissary Introduction chapter is online: http://www.iainmcgilchrist.com/The_Master_and_his_Emissary_by_McGilchrist.pdf

[19:31] <lue> raydiak: let me check before confirming :)

[19:31] <raydiak> ha ha :)

[19:32] *** fgfgh joined
[19:32] <fgfgh> how to install perl 6

[19:32] <raydiak> lue: I changed the css so you can just change the classes "red", "blue", etc on each of the boxes in dev tools/firebug/whatever

[19:32] <raydiak> got tired of all the copy and pasting hex codes all over the place

[19:32] <timotimo> fgfgh: the easiest way is to download the rakudo star tarball from rakudo.org if you're on linux or mac, or the .msi if you're on windows

[19:33] *** Rotwang joined
[19:33] <fgfgh> Thanks i will try now

[19:33] <timotimo> the readme in the source tarball will tell you to run perl Configure.pl --gen-nqp or something similar and that should get you started right away

[19:33] *** berekuk joined
[19:33] *** fgfgh left
[19:34] *** beastd left
[19:34] <lue> raydiak: see for yourself: http://i.imgur.com/MaYMTGS.png

[19:34] *** SamuraiJack left
[19:35] <raydiak> oh, that does seem to work..."cool and pleasant" is the feel, at least for me

[19:35] *** berekuk left
[19:36] <lue> And the footer box below would take on the yellows presumably

[19:36] *** zakharyas joined
[19:37] <raydiak> htmlify is running while I take a few minutes break; should update on my server in 5 or 6 minutes

[19:41] *** berekuk joined
[19:41] *** berekuk left
[19:43] <hoelzro> raydiak++

[19:43] <hoelzro> lue: I like that a lot

[19:46] *** berekuk joined
[19:48] *** Celelibi joined
[19:48] <raydiak> yeah, I'd consider that an improvement for sure

[19:50] <raydiak> still looking for somewhere I could add a little contrasty accent toward the top, but as we move toward better navigation and organization along the lines of smls' ideas, that will solve itself

[19:50] <raydiak> just putting camelia on there will help a lot

[19:50] <timotimo> sounds likely

[19:54] <raydiak> anyone know where can I find the sources for camelia? I assume there's an svg or something

[19:56] <timotimo> in perl6/mu

[19:56] <timotimo> "most unexpected"

[19:57] <lue> raydiak: https://github.com/perl6/mu/tree/master/misc  <-- camelia.*

[19:57] <moritz> raydiak: perl6/evalbot

[19:57] <moritz> oh, you didn't mean the bot :-)

[19:57] <raydiak> ah, awesome, thanks

[19:58] <arnsholt> Progress!

[19:58] <raydiak> actually, I had wondered about the bot at other times, too, so good to know

[19:58] <timotimo> arnsholt: oooh, do tell! :D

[19:59] <arnsholt> 7 passing callback tests on JVM, out of 9

[19:59] <timotimo> \o/

[19:59] *** hoverboard joined
[19:59] <timotimo> how's your tuit supply look like the rest of the week?

[19:59] <timotimo> Rakudo Coffeecup this month? :3

[20:00] *** denis_boyun left
[20:00] *** denisboyun joined
[20:05] <raydiak> I notice the camelia svg lacks the ™ seen on perl6.org...is that critical?

[20:06] <lue> raydiak: https://github.com/perl6/mu/blob/master/misc/camelia.txt

[20:06] <lue> second paragraph

[20:06] <raydiak> footnote it is :)

[20:08] <arnsholt> HAHA!

[20:10] <benabik> »ö«™ ?

[20:11] <moritz> benabik: »ö« is an icon, not our main logo :-)

[20:17] <jnthn> arnsholt: Pass all the things? :)

[20:19] <arnsholt> Yeah, all the callback tests pass now

[20:19] <arnsholt> But some unexpected breakage in the cstruct tests

[20:19] <arnsholt> There we go. Wasn't a regression introduced by the callback stuff

[20:22] * arnsholt goes to put the kettle on

[20:24] <tadzik> arnsholt: :D

[20:24] <tadzik> arnsholt: that's awesome!

[20:24] <jnthn> arnsholt++

[20:24] <tadzik> arnsholt++

[20:25] <timotimo> arnsholt++

[20:25] <lue> arnsholt++

[20:25] <masak> arnsholt++

[20:25] <moritz> arnsholt++

[20:25] <dalek> zavolaj: d58590f | (Arne Skjærholt)++ | t/05-arrays.t:

[20:25] <dalek> zavolaj: Use concrete value when testing CArray[OpaquePointer].

[20:25] <dalek> zavolaj: 

[20:25] <dalek> zavolaj: This uncovers some missing functionality in on JVM the old code missed.

[20:25] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/d58590f0a0

[20:25] <dalek> zavolaj: dc75c36 | (Arne Skjærholt)++ | lib/NativeCall.pm6:

[20:25] <dalek> zavolaj: Properly decont in typed CArray STORE/FETCH.

[20:25] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/dc75c36e61

[20:25] <dalek> zavolaj: 2f3cfad | (Arne Skjærholt)++ | lib/NativeCall.pm6:

[20:25] <dalek> zavolaj: Store return type object for callbacks.

[20:25] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/2f3cfad9c5

[20:27] *** Zaydon left
[20:28] *** raiph left
[20:28] <FROGGS_> arnsholt++ # sorry, I am late

[20:33] <arnsholt> Such karma, much happy, wow. =)

[20:34] <moritz> dogecallbacks!

[20:34] *** hoverboard left
[20:35] *** BenGoldberg joined
[20:39] *** BenGoldberg left
[20:40] <dalek> nqp: 8c67bb1 | (Arne Skjærholt)++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/NativeCallOps.java:

[20:40] <dalek> nqp: Make better use of ExceptionHandling.dieInternal() in NativeCallOps.

[20:40] <dalek> nqp: review: https://github.com/perl6/nqp/commit/8c67bb10a4

[20:40] <dalek> nqp: dc7d396 | (Arne Skjærholt)++ | src/vm/jvm/runtime/org/perl6/nqp/sixmodel/reprs/CStruct.java:

[20:40] <dalek> nqp: Better commenting of code-gen in CStruct.java.

[20:40] <dalek> nqp: review: https://github.com/perl6/nqp/commit/dc7d396d7c

[20:40] <dalek> nqp: baf1a11 | (Arne Skjærholt)++ | src/vm/jvm/runtime/org/perl6/nqp/ (3 files):

[20:40] <dalek> nqp: Implement NativeCall callbacks on JVM.

[20:40] <dalek> nqp: 

[20:41] <dalek> nqp: This passes the NativeCall test suite, so it should be pretty functional. No

[20:41] <dalek> nqp: doubt there are bugs lurking though.

[20:41] <dalek> nqp: 

[20:41] <dalek> nqp: With this, the only missing pieces for NativeCall on JVM are CArray of

[20:41] <dalek> nqp: pointer-valued classes, and the nqp::nativecallrefresh op.

[20:41] *** hoverboard joined
[20:43] *** BenGoldberg joined
[20:51] * jnthn wonders if DBIish now works on JVM :)

[20:52] <arnsholt> Worth giving a shot

[20:52] <arnsholt> Might block on the missing CArray stuff though

[21:11] *** zakharyas left
[21:12] *** kivutar joined
[21:12] *** benabik left
[21:14] *** virtualsue left
[21:22] *** virtualsue joined
[21:48] *** beastd joined
[21:48] *** kaare_ joined
[21:50] *** benabik joined
[21:59] *** tgt joined
[22:05] *** hoverboard left
[22:06] *** rindolf left
[22:10] *** spider-mario left
[22:20] *** zby_home_ left
[22:24] *** kbaker joined
[22:27] *** Mouq joined
[22:28] *** LLamaRider joined
[22:28] <LLamaRider> o/ #perl folks! Is there an estimate as to when Panda will support MoarVM?

[22:35] *** Adriaaan left
[22:38] *** tgt left
[22:38] *** tgt joined
[22:41] *** LLamaRider left
[22:42] *** dmol left
[22:51] <tadzik> it almost does

[22:51] <tadzik> on the moar-support branch

[22:51] <tadzik> it's blazingly fast =)

[22:52] <tadzik> but there's a deserialisation bug that keeps it from truly working

[22:57] <Mouq> r: .permutations.say for (^3).combinations(2)

[22:57] <camelia> rakudo-moar 230a54: OUTPUT«Cannot call 'postcircumfix:<[ ]>'; none of these signatures match:␤:(Any \SELF, int $pos)␤:(Any \SELF, int $pos, :BIND($BIND)!)␤:(Any \SELF, int $pos, Any :SINK($SINK)!, *%other)␤:(Any \SELF, int $pos, Any :delete($delete)!, *%other)␤:(Any \SELF,…»

[22:57] <camelia> ..rakudo-parrot 230a54, rakudo-jvm 230a54: OUTPUT«0 1 1 0␤0 2 2 0␤1 2 2 1␤»

[22:58] <jnthn> tadzik: I'm working on it. I'll have it nailed soon :)

[22:58] <Mouq> I don't know what RM's problem is here

[22:58] <jnthn> Mouq: Me either; didn't get to look at that one yet.

[22:58] <Mouq> r: .perl.say for (^3).combinations(2)

[22:58] <camelia> rakudo-parrot 230a54, rakudo-jvm 230a54, rakudo-moar 230a54: OUTPUT«[0, 1]␤[0, 2]␤[1, 2]␤»

[22:59] <Mouq> r: .permutations.WHAT.say for (^3).combinations(2)

[22:59] <camelia> rakudo-parrot 230a54, rakudo-jvm 230a54, rakudo-moar 230a54: OUTPUT«(List)␤(List)␤(List)␤»

[23:00] *** tgt left
[23:01] <dalek> nqp: 8181f81 | (Arne Skjærholt)++ | src/vm/jvm/runtime/org/perl6/nqp/sixmodel/reprs/CArray (2 files):

[23:01] <dalek> nqp: Implement remaining cases of CArray.

[23:01] <dalek> nqp: 

[23:01] <dalek> nqp: All that's remaining for JVM NativeCall now is nqp::nativecallrefresh.

[23:01] <dalek> nqp: review: https://github.com/perl6/nqp/commit/8181f81c06

[23:04] *** hoverboard joined
[23:08] *** PZt left
[23:11] <tadzik> jnthn: awesome :)

[23:13] *** kurahaupo joined
[23:28] *** crab2313 joined
[23:29] <dalek> nqp: 81e634a | (Arne Skjærholt)++ | src/vm/jvm/runtime/org/perl6/nqp/runtime/NativeCallOps.java:

[23:29] <dalek> nqp: Make NativeCallOps.toJNAType handle type objects gracefully.

[23:29] <dalek> nqp: review: https://github.com/perl6/nqp/commit/81e634a596

[23:29] *** johnmilton left
[23:31] *** arnsholt left
[23:31] <dalek> zavolaj: 291e6b9 | (Arne Skjærholt)++ | t/07-writebarrier.t:

[23:31] <dalek> zavolaj: Correct wording of a test description.

[23:31] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/291e6b9d61

[23:35] *** pippo left
[23:35] *** denisboyun left
[23:36] <lue> tadzik: is it just me, or is Shell::Command's cp() horrendously slow?

[23:38] <lue> Oh wait, it might not be cp() after all

[23:40] *** crab2313 left
[23:41] <lue> I'm pretty sure File::Find's find() is more likely (using the :dir and :name adverbs there)

[23:46] <dalek> rakudo-star-daily: 0cddf76 | coke++ | log/ (5 files):

[23:46] <dalek> rakudo-star-daily: today (automated commit)

[23:46] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/0cddf76d69

[23:46] <dalek> perl6-roast-data: 276ce9f | coke++ | / (4 files):

[23:46] <dalek> perl6-roast-data: today (automated commit)

[23:46] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/276ce9f617

[23:47] *** kivutar left
[23:48] *** Rotwang left
[23:48] *** beastd left
[23:51] <japhb> lue: Last time I went deep down that path, I found it was ultimately canon_path that was killing performance for a lot of operations that need to work with directories and paths.

[23:51] <japhb> s/deep down that path/deep down that rabbit hole/

[23:51] <lue> that's not in File/Find.pm though

[23:51] <japhb> lue: Are you sure it isn't implicitely *used* by File::Find?

[23:52] <japhb> It was surprising how many operations on paths eventually ended up there.

[23:52] <lue> Unless it's an NQP function or something, no.

[23:52] *** berekuk left
[23:53] <lue> I'm going to replace find() with a terribly platform-dependent version for the time being, because the performance hit is impossible to function with.

[23:53] <tadzik> lue: hm. It may be

[23:53] <tadzik> maybe it's worth looking into

[23:55] <tadzik> it's seems there's a lot work involved in getting paths right; I wonder if we can find something that'll be right-enough

[23:56] <lue> That's just great; apparently qx and qqx are broken :(

[23:56] <tadzik> :o

[23:57] *** Sqirrel left
[23:58] *** Sqirrel joined
[23:58] <raydiak> may be entirely unrelated, but run doesn't work for me, while shell does...wonder if something is partially broken in that area

[23:58] *** kbaker left
[23:59] <lue> r: qx'find . -name *pod';

[23:59] <camelia> rakudo-parrot 230a54, rakudo-jvm 230a54, rakudo-moar 230a54: OUTPUT«===SORRY!=== Error while compiling /tmp/tmpfile␤Unsupported use of . to concatenate strings; in Perl 6 please use ~␤at /tmp/tmpfile:1␤------> qx'find . ⏏-name *pod';␤»

[23:59] <Mouq> raydiak, lue: On latest MoarVM? Wasn't this something addressed very recently?

[23:59] <lue> nope, general rakudo

[23:59] <lue> r: qx/find . -name *pod/;

[23:59] <camelia> rakudo-jvm 230a54: ( no output )

[23:59] <camelia> ..rakudo-parrot 230a54, rakudo-moar 230a54: OUTPUT«qx, qqx is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting:2␤  in sub QX at src/RESTRICTED.setting:9␤  in block  at /tmp/tmpfile:1␤␤»

