[00:00] *** erdic left
[00:00] *** erdic joined
[00:00] * dwarring  trying ^add_fallback from advent 2013 day 09 - http://perl6advent.wordpress.com/2013/12/09/day-09-hashes-and-pairs/

[00:00] *** ggoebel11114 joined
[00:01] <dwarring> should work on parrot

[00:01] *** Bucciarati joined
[00:01] *** ilbot3 joined
[00:02] *** _daniel-s__ joined
[00:02] *** retupmoca joined
[00:02] *** awwaiid joined
[00:02] *** fridim__ joined
[00:02] *** skids joined
[00:02] *** Colby` joined
[00:03] <timotimo> aye, needs a use Test.

[00:04] *** itz_ joined
[00:05] *** Ulti joined
[00:06] *** FOAD__ joined
[00:07] *** _daniel-s__ left
[00:07] <jnthn> There'll be some hardening work to come, but on my box I just got a fully passing NativeCall test suite run on Moar.

[00:07] *** rurban is now known as 1JTAAPZT9

[00:07] *** Juerd is now known as 6JTAAAJ92

[00:07] *** dalek is now known as 6JTAACZH1

[00:07] *** dalek joined
[00:07] *** Juerd joined
[00:07] *** LAATEXG joined
[00:07] *** sbauer joined
[00:07] *** SHODAN joined
[00:07] *** felher joined
[00:07] *** thilp joined
[00:07] *** LAATEAL joined
[00:07] *** vendethiel joined
[00:07] *** tokuhirom joined
[00:07] *** rurban joined
[00:07] *** arnsholt joined
[00:07] *** takesako___ joined
[00:07] *** dylanwh joined
[00:07] *** atrodo joined
[00:07] *** ChanServ sets mode: +v dalek

[00:07] <TimToady> \o/

[00:07] *** exodist_ joined
[00:07] <dwarring> About to add day 08 tests. I'll fudge it for now

[00:07] *** _daniel-s__ joined
[00:07] *** LAATEXG joined
[00:07] *** yogan_ joined
[00:08] * dwarring s/08/09/

[00:08] *** felher is now known as Guest50791

[00:08] *** SHODAN is now known as Guest4053

[00:09] *** Guest50791 left
[00:10] *** 6JTAACZH1 left
[00:10] *** __sri left
[00:10] *** pnu left
[00:10] *** Khisanth left
[00:10] *** Pleiades` left
[00:10] *** dalek is now known as 23LAATE5Q

[00:10] *** daniel-s__ left
[00:10] *** Shozan left
[00:10] *** retupmoc1 left
[00:10] *** itz left
[00:10] *** Exodist left
[00:10] *** 6JTAAAJ92 left
[00:10] *** clkao_ left
[00:10] *** hoelzro left
[00:10] *** Ulti_ left
[00:10] *** [Sno] left
[00:10] *** FOAD left
[00:10] *** yogan left
[00:10] *** gfldex_ left
[00:10] *** _sri joined
[00:10] *** FROGGS_ joined
[00:10] *** Colby` is now known as Pleiades`

[00:10] *** FOAD__ is now known as FOAD

[00:11] *** hoelzro joined
[00:12] *** daniel-s joined
[00:12] *** thilp_ joined
[00:12] *** bionoid joined
[00:12] *** thilp left
[00:12] *** FROGGS_ left
[00:13] *** felher_ joined
[00:13] *** _daniel-s__ left
[00:13] *** thilp_ is now known as thilp

[00:13] *** clkao joined
[00:13] *** Vlavv joined
[00:13] *** yoleaux joined
[00:13] *** tadzik joined
[00:13] *** barjavel.freenode.net sets mode: +v yoleaux

[00:13] *** denisboyun left
[00:14] *** dalek joined
[00:14] *** ChanServ sets mode: +v dalek

[00:14] *** Khisanth joined
[00:15] *** 23LAATE5Q left
[00:16] *** rurban left
[00:17] <dalek> roast: 3182fbd | (David Warring [email@hidden.address] | integration/advent2013-day09.t:

[00:17] <dalek> roast: adding advent 2013 day 09

[00:17] <dalek> roast: review: https://github.com/perl6/roast/commit/3182fbdfb2

[00:19] *** xinming_ joined
[00:21] *** erdic left
[00:22] *** tokuhirom left
[00:22] *** tokuhirom joined
[00:22] *** dmol left
[00:23] *** sbauer_ joined
[00:23] *** skids left
[00:24] <TimToady> dwarring: 3 doesn't look like a caddr to me, it looks like a cddr

[00:25] <TimToady> or a cddar

[00:25] *** SHODAN joined
[00:26] *** tokuhirom_ joined
[00:26] *** tokuhirom left
[00:26] *** Juerd left
[00:26] *** sbauer left
[00:26] *** Guest4053 left
[00:26] *** vendethiel left
[00:26] *** arnsholt left
[00:26] *** takesako___ left
[00:26] *** dylanwh left
[00:26] *** atrodo left
[00:26] *** vendethiel joined
[00:26] <TimToady> or have I forgotten how those guys work?

[00:26] *** tokuhirom_ is now known as tokuhirom

[00:27] *** erdic joined
[00:27] * dwarring had just blindly cut and pasted

[00:28] <TimToady> in any case, it doesn't have a nice failure mode

[00:30] *** rurban joined
[00:31] *** pnu joined
[00:34] *** tarak__ joined
[00:35] *** tarak__ is now known as ShqiponjaH

[00:35] *** Juerd joined
[00:35] *** arnsholt joined
[00:35] *** takesako___ joined
[00:35] *** dylanwh joined
[00:35] *** atrodo joined
[00:35] *** ShqiponjaH left
[00:36] <TimToady> I guess I'm remembering them backwards

[00:37] *** bionoid__ joined
[00:37] *** daniel-s left
[00:37] *** tarak_ joined
[00:37] *** _sri left
[00:37] *** tarak_ left
[00:37] *** _sri joined
[00:37] *** bionoid left
[00:37] *** gfldex joined
[00:38] <TimToady> the problem is that the match $0 is true even when it matches the null string

[00:38] *** MadHatter1987 joined
[00:39] <TimToady> masak: ^^ with regard to your add_fallback in advent 2013-09

[00:39] <TimToady> needs to be $0 ne '' or so

[00:40] *** daniel-s joined
[00:41] *** Shozan joined
[00:41] <dalek> roast: b13f601 | larry++ | integration/advent2013-day09.t:

[00:41] <dalek> roast: fix caddr fallback test

[00:41] <dalek> roast: 

[00:41] <dalek> roast: $0 is always true because (<[ad]>*) always matches, needs $0 ne ''

[00:41] <dalek> roast: review: https://github.com/perl6/roast/commit/b13f6014e2

[00:42] <MadHatter1987> knock knock

[00:43] <dalek> roast: 831ac2a | larry++ | integration/advent2013-day09.t:

[00:43] <dalek> roast: remove fudge for caddr test

[00:43] <dalek> roast: review: https://github.com/perl6/roast/commit/831ac2a085

[00:43] <dwarring> TimToady++

[00:44] *** SHODAN left
[00:44] *** sbauer_ left
[00:44] *** xinming_ left
[00:44] *** clkao left
[00:50] *** xinming_ joined
[00:51] *** daniel-s left
[01:01] *** clkao joined
[01:06] *** sbauer joined
[01:07] <MadHatter1987> anyone ?

[01:11] <TimToady> anyone who?

[01:12] <PerlJam> MadHatter1987: not just *anyone*!

[01:12] <TimToady> anytwo, apparently

[01:13] *** 1JTAAPZT9 left
[01:14] <MadHatter1987> :D

[01:14] <MadHatter1987> what I meant was "is anyone around ?"

[01:15] <MadHatter1987> so i'm a perl coder 

[01:15] <MadHatter1987> was snooping around 

[01:16] <MadHatter1987> hoping if anyone around here had implemented AI in perl

[01:16] *** erdic left
[01:16] <PerlJam> MadHatter1987: For Perl 5, there are some AI modules on CPAN.

[01:16] *** erdic joined
[01:16] <MadHatter1987> was more interested in the implementation 

[01:17] <MadHatter1987> i used to C# 

[01:17] <MadHatter1987> and it had quite of support for AI modules 

[01:17] <MadHatter1987> but in perl I cant find anything interesting around 

[01:17] <MadHatter1987> AI related 

[01:18] <PerlJam> MadHatter1987: so ... perhaps I should mention that this channel is for Perl 6 which is a different language than Perl 5.

[01:18] <PerlJam> MadHatter1987: but in any case, there are modules on CPAN and you can read their code (for Perl 5)

[01:19] <MadHatter1987> well I wasnt seeing any discussions so I thought on asking around 

[01:19] <MadHatter1987> well thnx anyway 

[01:37] *** Rotwang1 left
[01:37] *** MadHatter1987 left
[01:42] *** thilp_ joined
[01:45] *** gfldex left
[01:45] *** _sri left
[01:45] *** felher_ left
[01:45] *** thilp left
[01:45] *** hoelzro left
[01:45] *** hoelzro joined
[01:51] *** hoverboard joined
[01:52] *** _sri joined
[01:53] *** gfldex joined
[02:00] *** pecastro left
[02:06] *** klapperl joined
[02:09] *** klapperl_ left
[02:12] *** hoverboard is now known as charliesheen

[02:12] *** charliesheen is now known as hoverboard

[02:20] <hoelzro> I don't mean to hate on the good folks at GH, but I found this PR interesting: https://github.com/github/linguist/pull/748

[02:20] <hoelzro> seldom does one find good commentary on the Internet =)

[02:23] *** Mouq joined
[02:40] <TimToady> .oO(maybe we should use a .m extension for moar... :)

[02:41] <lue> also could use .m for Mu, a.k.a. "every document" :P

[02:51] *** Mouq left
[03:00] *** colomon joined
[03:26] *** bjz left
[03:34] *** Ben_Goldberg is now known as BenGoldberg

[03:39] *** bjz joined
[03:39] *** uvtc joined
[03:40] <uvtc> Has much changed of late in the state of the art of syntax highlighting Perl 6 code? Any new syntax highlighters available recently?

[03:41] <lue> GitHub has a highlighter now, don't know of much else.

[03:43] <uvtc> Using Xfce, I just checked mousepad, and it seems to use libgtksourceview.

[03:44] <uvtc> thanks, lue

[03:54] *** kurahaupo joined
[03:58] *** xragnar left
[04:02] *** hoverboard left
[04:04] *** xragnar joined
[04:07] *** hoverboard joined
[04:09] *** felher_ joined
[04:10] <uvtc> Hm. Looks like there's substantial [docs for creating a Kate syntax highlighting file](http://docs.kde.org/development/en/applications/kate/highlight.html). They even start out with a Perl 5 example. :)

[04:10] <hoelzro> uvtc: we have a start on a Kate file

[04:10] * lue should really get back to his emacs mode for Perl 6, at least to unbreak it :P

[04:11] * hoelzro should work on Perl 6 for Vim =/

[04:12] <uvtc> I was just installing Kate (er, KWrite) now just to see what the editor looks like. apt-get is grabbing a lot of packages.

[04:13] <uvtc> Hi, hoelzro. I remember you were doing something with Perl 6 syntax highlighting.

[04:13] <hoelzro> yeah, I wrote the pygments highlighter

[04:13] <lue> uvtc: wild guess: you've not installed anything KDE-based before, have you? :)

[04:14] <uvtc> lue, no, never. :) Running Ubuntu + Xfce here, but switching to Debian Testing this weekend, so I thought, "what the heck, pull in the kde hoards and have a look before starting from scratch again." :)

[04:17] <uvtc> Nice thing about a Kate highlighter is that it would then trickle down into Pandoc (markdown processor with syntax HL via kate SH definition files).

[04:17] <hoelzro> and Qt creator

[04:18] <hoelzro> my life is just about to stabilize, so I intend to help on that front once it has =)

[04:18] <uvtc> hoelzro, could you point me to the start on a Kate SL def file? I'm not seeing it at github.com/perl6/

[04:18] <uvtc> .

[04:18] <hoelzro> hang on

[04:18] <hoelzro> lemme find it

[04:18] <hoelzro> uvtc: https://github.com/timo/perl6-kate-syntax

[04:19] <uvtc> Oh, wow. It's looking pretty substantial already. Thanks for the link, hoelzro.

[04:19] <hoelzro> np

[04:19] <hoelzro> thank timotimo for the work =)

[04:21] <uvtc> ++timotimo

[04:24] *** ggoebel11114 left
[04:29] <uvtc> Hm. Looks like the rather disused Perl 6 wiki has fallen into disrepair (well, wiki.perl6.org rendering without any styles on my system).

[04:29] *** ggoebel11114 joined
[04:31] <uvtc> moritz, I've made backups of my "mostly harmless docs" that were started there. I have no qualms if you'd like to remove the site until a hero appears who is willing to maintain a wiki.

[04:31] <lue> I know I can use &foo.assuming to prime some parameters, but I don't see a way to re-prime parameters :( [e.g. &foo.assuming(:dbg).assuming(:!dbg), which doesn't DWIM]

[04:32] <uvtc> Personally though, in general, of late, I've found wikis to be not as useful as I'd hoped.

[04:33] <lue> (except for keeping a separate hash of unprimed functions, but that feels like something I shouldn't have to do...)

[04:37] <uvtc> Is phenny still around? <http://perl6.org/community/irc> indicates yes.

[04:38] <lue> http://perl6.org/community/irc would be wrong then :)

[04:38] <lue> wow, that list is old, it's talking about nqp-rx

[04:38] <uvtc> Oh, replaced by yoleaux?

[04:39] <lue> yep, I'll go update that list unless someone else is already on it.

[04:40] <uvtc> .tell moritz <http://irclog.perlgeek.de/perl6/2014-03-15#i_8439991>

[04:40] <yoleaux> uvtc: I'll pass your message to moritz.

[04:41] *** ggoebel11115 joined
[04:42] *** araujo left
[04:43] *** ggoebel11114 left
[04:44] <uvtc> *hordes !

[04:45] <uvtc> hoelzro, glad to hear about life stabilization. That's a nice thing. :)

[04:46] <hoelzro> yeah, tell me about it! =)

[04:49] <dalek> perl6.org: 92b3739 | lue++ | source/community/irc.html:

[04:49] <dalek> perl6.org: Update the list of bots on #perl6

[04:49] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/92b37390e8

[04:50] <uvtc> Built Rakudo+Moar a couple of days ago. Was pleased to find that it starts up and runs little scripts in under a half a second (0.4s)!

[05:02] *** fridim__ left
[05:04] *** hoverboard left
[05:09] <uvtc> When trying to run <http://rosettacode.org/wiki/Colour_bars/Display#Perl_6>, Rakudo-Moar tells me about the "my @colors" line: "This type cannot unbox to a native integer".

[05:14] *** uvtc left
[05:30] *** kaare__ joined
[05:36] <moritz> .tell uvtc I've disabled wiki.perl6.org

[05:36] <yoleaux> moritz: I'll pass your message to uvtc.

[05:36] <yoleaux> 04:40Z <uvtc> moritz: <http://irclog.perlgeek.de/perl6/2014-03-15#i_8439991>

[05:50] *** darutoko joined
[06:01] *** kaare__ left
[06:01] *** BenGoldberg left
[06:04] <avuserow> is HTTP::Client the current preferred web library for Rakudo? I'm wanting to play around with it, ideally on MoarVM

[06:19] *** _thou left
[06:19] *** pnu left
[06:20] *** isacloud left
[06:22] *** vincent22 joined
[06:22] *** vincent22 left
[06:37] *** isacloud_ joined
[06:43] *** clkao left
[06:44] *** [Sno] joined
[06:44] *** clkao joined
[06:45] *** kurahaupo left
[07:26] *** [Sno] left
[07:37] *** pnu joined
[07:52] *** bjz left
[07:52] *** bionoid__ is now known as bionoid

[07:57] *** [Sno] joined
[07:59] *** FROGGS joined
[07:59] *** bionoid left
[08:00] *** bjz joined
[08:25] <vendethiel> So, apparently, perl sometimes makes the imgur frontpage ... http://imgur.com/gallery/yDV6s

[08:30] <jercos> I have it on reasonable authority that PHP makes the imgur frontpage.

[08:30] <jercos> Most of the other pages too.

[08:40] *** bjz_ joined
[08:42] *** bjz_ left
[08:42] *** bjz_ joined
[08:42] *** [Sno] left
[08:43] *** bjz left
[08:47] <nwc10> jnthn++ # nativecall

[08:47] <nwc10> and who is going to try DBIish?

[08:47] *** colors joined
[08:47] *** colors is now known as vincent21

[09:01] <FROGGS> I am still working on CPANish, so... :o9)

[09:01] <FROGGS> -9

[09:07] <nwc10> FROGGS++ # working on stuff

[09:14] *** mls joined
[09:21] *** woolfy joined
[09:21] *** daniel-s joined
[09:27] *** clkao left
[09:28] *** clkao joined
[09:30] *** xinming_ left
[09:32] *** xinming_ joined
[09:33] *** pdcawley left
[09:38] *** kurahaupo joined
[09:43] <masak> antenoon, #perl6

[09:45] *** denis_boyun joined
[09:49] *** dmol joined
[10:21] *** aindilis left
[10:22] *** lizmat joined
[10:22] *** aindilis joined
[10:27] *** lizmat left
[10:27] *** lizmat joined
[10:28] *** pmurias joined
[10:30] <pmurias> hoelzro: do you think it would be possible to generate all the different highlighters from a general highlighter description?

[10:32] *** lizmat left
[10:36] *** lizmat joined
[10:37] *** kurahaupo left
[11:01] *** ggherdov_ left
[11:01] *** ggherdov_ joined
[11:01] *** ggherdov_ left
[11:01] *** ggherdov_ joined
[11:02] *** ggherdov_ is now known as ggherdov

[11:04] *** vincent21 left
[11:09] <dalek> nqp: f13dca0 | (Arne Skjærholt)++ | tools/build/gen-jvm-properties.pl:

[11:09] <dalek> nqp: Add some more information about how to compile things for JVM.

[11:09] <dalek> nqp: 

[11:09] <dalek> nqp: Hopefully this'll let NativeCall with the JVM backend compile libs on Windows

[11:09] <dalek> nqp: platforms.

[11:09] <dalek> nqp: review: https://github.com/perl6/nqp/commit/f13dca0e0f

[11:09] <dalek> zavolaj: 9975032 | (Arne Skjærholt)++ | t/CompileTestLib.pm:

[11:09] <dalek> zavolaj: Try to make library compilation more robust on Windows JVM backend.

[11:09] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/99750322a8

[11:10] *** xenoterracide left
[11:11] <arnsholt> jnthn: I'm hoping that pair of commits lets us compile libs on the JVM-Windows pair

[11:28] <colomon> \o/

[11:28] *** woolfy left
[11:30] <jnthn> arnsholt: Testing.

[11:40] *** lizmat left
[11:42] *** lizmat joined
[11:42] <dalek> rakudo/eleven: a0a5990 | lue++ | src/core/ (2 files):

[11:42] <dalek> rakudo/eleven: Rename .ast to .made, as per S05.

[11:42] <dalek> rakudo/eleven: 

[11:42] <dalek> rakudo/eleven: The .ast method is still around, though now it's deprecated.

[11:42] <dalek> rakudo/eleven: review: https://github.com/rakudo/rakudo/commit/a0a5990853

[11:42] *** dalek left
[11:42] *** woolfy joined
[11:42] *** dalek joined
[11:42] *** ChanServ sets mode: +v dalek

[11:43] <timotimo> lue: not deprecated!

[11:43] * timotimo is opinionated

[11:43] <JimmyZ> 3 days ago..

[11:43] <timotimo> it has been undeprecated

[11:43] <JimmyZ> if you see url ...

[11:44] <jnthn> w and t. The keys are like, right next...oh...

[11:44] <timotimo> oh

[11:44] <jnthn> Hm, that patch does depreate it though.

[11:45] <jnthn> OK, I declare we're not deprecating it until after the 2014.03 release.

[11:45] <dalek> specs: 70f396a | (Elizabeth Mattijsen)++ | S11-modules.pod:

[11:45] <dalek> specs: Introduction of "supersedes" and "superseded_by"

[11:45] <dalek> specs: 

[11:45] <dalek> specs: And some other minor clarifications.

[11:45] <dalek> specs: review: https://github.com/perl6/specs/commit/70f396ae06

[11:45] <jnthn> Whatever the spec says.

[11:45] <jnthn> Just out of ecosystem consideration and how close we are to the monthly release.

[11:46] <lizmat> +1

[11:46] <timotimo> aye

[11:46] <jnthn> Oh, that patch went into a branch, anyways, though :)

[11:46] <timotimo> yes

[11:46] <JimmyZ> it's a merge ...

[11:46] <jnthn> ah... :)

[11:47] <FROGGS> soo much confusion... should I feel sorrow? :o)

[11:47] <JimmyZ> and dalek exited

[11:47] <jnthn> And indeed, nom has it undeprecated

[11:47] <jnthn> So, good :)

[11:47] <jnthn> Keep calm and continue hacking :P

[11:47] <JimmyZ> :O

[11:49] *** dmol left
[11:49] <jnthn> arnsholt: Doesn't seem to work out :(

[11:49] <jnthn> arnsholt: Investigating.

[11:49] <timotimo> m: my @colors = map -> $r, $g, $b { Buf.new: ($r, $g, $b) xx 16 div 8 }, 0, 0, 0, 255, 0, 0; say @colors;

[11:49] <camelia> rakudo-moar a2db06: OUTPUT«This type cannot unbox to a native integer␤  in method new at src/gen/m-CORE.setting:5164␤  in method new at src/gen/m-CORE.setting:5154␤  in any  at src/gen/m-Metamodel.nqp:1403␤  in block  at /tmp/GtIRhXNHHf:1␤␤»

[11:49] <jnthn> arnsholt: oh, wait

[11:49] <timotimo> m: my @colors = map -> $r, $g, $b { Buf.new: ($r, $g, $b) xx (16 div 8) }, 0, 0, 0, 255, 0, 0; say @colors;

[11:49] <camelia> rakudo-moar a2db06: OUTPUT«This type cannot unbox to a native integer␤  in method new at src/gen/m-CORE.setting:5164␤  in method new at src/gen/m-CORE.setting:5154␤  in any  at src/gen/m-Metamodel.nqp:1403␤  in block  at /tmp/PJaC80S63_:1␤␤»

[11:49] *** Rotwang1 joined
[11:49] <timotimo> m: Buf.new: (1, 2, 3) xx 2

[11:49] <camelia> rakudo-moar a2db06: OUTPUT«This type cannot unbox to a native integer␤  in method new at src/gen/m-CORE.setting:5164␤  in method new at src/gen/m-CORE.setting:5154␤  in any  at src/gen/m-Metamodel.nqp:1403␤  in block  at /tmp/FSN3HwxKg_:1␤␤»

[11:49] <timotimo> m: Buf.new: (1, 2, 3)

[11:49] <camelia> rakudo-moar a2db06: ( no output )

[11:50] <timotimo> m: Buf.new: 1 xx 10

[11:50] <camelia> rakudo-moar a2db06: ( no output )

[11:50] <timotimo> m: Buf.new: (1, 2) xx 10

[11:50] <camelia> rakudo-moar a2db06: OUTPUT«This type cannot unbox to a native integer␤  in method new at src/gen/m-CORE.setting:5164␤  in method new at src/gen/m-CORE.setting:5154␤  in any  at src/gen/m-Metamodel.nqp:1403␤  in block  at /tmp/sD_bs46M9V:1␤␤»

[11:50] <timotimo> p: Buf.new: (1, 2) xx 10

[11:50] <camelia> rakudo-parrot a2db06: OUTPUT«This type cannot unbox to a native integer␤  in method new at gen/parrot/CORE.setting:5168␤  in method new at gen/parrot/CORE.setting:5158␤  in any  at gen/parrot/Metamodel.nqp:1481␤  in block  at /tmp/96yeoY8J4d:1␤␤»

[11:50] <timotimo> oh, that's not a moar-only bug then

[11:50] <timotimo> http://rosettacode.org/wiki/Colour_bars/Display#Perl_6 ← talking about this

[11:50] <jnthn> arnsholt: I forgot to pull the nativecall repo. It works \o/

[11:55] *** Shozan is now known as SHODAN

[11:57] <dalek> zavolaj: 115d5ce | jnthn++ | t/01-argless.c:

[11:57] <dalek> zavolaj: Emit missing newline after a test.

[11:57] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/115d5ce799

[12:04] *** pippo joined
[12:06] *** rindolf joined
[12:22] *** isBEKaml joined
[12:25] *** isBEKaml left
[12:32] *** pippo left
[12:36] *** rindolf left
[12:39] <dalek> panda/depends: 8346347 | (Tobias Leich)++ | lib/Panda/ (2 files):

[12:39] <dalek> panda/depends: switch to META6.json, and fix depends/provides

[12:39] <dalek> panda/depends: review: https://github.com/tadzik/panda/commit/834634795b

[12:39] *** vincent22 joined
[12:49] <dalek> specs: f901166 | (Elizabeth Mattijsen)++ | S22-package-format (2 files):

[12:49] <dalek> specs: We want to keep S22 in its 5 year old incarnation around for now

[12:49] <dalek> specs: review: https://github.com/perl6/specs/commit/f901166125

[12:57] *** xinming__ joined
[13:00] *** xinming_ left
[13:16] *** thilp_ is now known as thilp

[13:31] *** pecastro joined
[13:36] *** pecastro left
[13:37] <masak> timotimo: I think you're expecting too much flattening from Perl 6's signatures.

[13:38] *** pecastro joined
[13:40] <timotimo> masak: well, the original author of that code seems to expect that :)

[13:44] <masak> :)

[13:44] <masak> maybe I'm wrong. maybe the thing after the colon isn't actually a signature, but a general expression.

[13:45] <timotimo> hmm. the : *does* turn it into a listop precedence thing

[13:45] <masak> right.

[13:45] <timotimo> but i don't think it should automatically do something like |(...) for the expression

[13:45] <timotimo> that could lead to extraordinarily big WATs in my expectation

[13:52] <timotimo> well, i put a |( ... ) there and now it works, i think i should edit that rc code.

[13:54] <timotimo> hm. this could be using a buf8

[13:55] <timotimo> interesting. turning that buf into a Buf[int8] makes it neither faster nor save any memory (maxrss of course) on moar

[13:56] <timotimo> well, that may be because there's only 8 of them

[13:58] *** tgt joined
[13:58] <pmurias> what is rakudo/eleven?

[14:02] <timotimo> it's for packaging things related to the new S11 synopsis

[14:06] <timotimo> surely, by now eqat is in the stage0 for all our nqp backends?

[14:08] <timotimo> *weird*. our parrot stage0 doesn't have it?

[14:08] <FROGGS> well, was there a reason to bump it lately?

[14:10] <timotimo> in the last 4 months? :)

[14:10] <FROGGS> well, yeah :o)

[14:10] <timotimo> apparently not!

[14:10] <FROGGS> see

[14:10] <timotimo> last bump there was 5 months ago

[14:10] <FROGGS> :/

[14:10] <timotimo> ah well.

[14:10] <timotimo> i have a quest that says "implement and use eqat on all backends"

[14:11] <timotimo> but that's not a good reason to introduce another ~megabyte of download to nqp

[14:11] <retupmoca> apparently the new moarvm nativecall blows up when precompiled

[14:11] <retupmoca> all tests pass if I don't precompile, but when I do I get 'Missing deserialize_stable_size'

[14:11] <timotimo> ah. jnthn has already suspected that would happen

[14:15] <jnthn> Yeah, I was sure a bunch of those were gonna be unported so far.

[14:18] <jnthn> timotimo: Buf is a buf8 by default

[14:21] <timotimo> oh!

[14:23] <arnsholt> jnthn: Hooray!

[14:24] *** skids joined
[14:33] <moritz> timotimo: remeber that 2048 game? it lets you continue after you win, and now I managed to get to the 4096

[14:33] <moritz> hiscore 59612

[14:33] <timotimo> oh wow.

[14:33] <colomon> moritz++

[14:33] <timotimo> get back to work ;)))

[14:33] <timotimo> also, did you see 2048-3d?

[14:34] * colomon covers his ears with his hands and goes "la la la" so he can't hear more

[14:34] <moritz> timotimo: no, I didn't

[14:37] *** zakharyas joined
[14:46] *** woolfy left
[14:47] <hoelzro> pmurias: I wish =(

[14:47] <hoelzro> probably not, though

[14:47] <hoelzro> well, we could generate some of the features 

[14:47] <hoelzro> like list of builtins, classes, etc

[14:47] <timotimo> aye, those are kind of easy

[14:47] *** woolfy joined
[14:48] <timotimo> i even put the generation code into my kate definition files :)

[14:48] <hoelzro> but for example, the pygments highlighter uses actual Python code to parse some more complicated constructions

[14:48] <hoelzro> which, afaict, most highlighters don't even allow

[14:49] <jnthn> retupmoca: Latest Moar supports pre-comp

[14:50] <hoelzro> jnthn: you've been working on native call on moar, right?

[14:50] <jnthn> hoelzro: A little...

[14:50] <hoelzro> is that support just in Moar? or in NQP as well?

[14:51] <jnthn> hoelzro: Code is almost all in Moar, in NQP there's really just op mappings.

[14:51] <hoelzro> but you haven't pushed up the op mappings at all?

[14:51] <jnthn> hoelzro: No, they're there. Here, I get a fully passing NativeCall.pm too.

[14:51] <hoelzro> hmm

[14:51] <hoelzro> I can't get mine to work =/

[14:51] <jnthn> hoelzro: Didn't bump NQP_REVISION or MOAR_REVISION yet.

[14:51] <hoelzro> maybe I'm using too old of an NQP

[14:51] <jnthn> hoelzro: You need bleeding edge of everything.

[14:51] <hoelzro> I'm just trying to play with it =)

[14:52] <hoelzro> oooooh

[14:52] <hoelzro> that's why

[14:52] *** daniel-s left
[14:52] <jnthn> I'll bump stuff soon. It's just that things went yesterday from passing 2 test files to passing all 8 :)

[14:52] <hoelzro> wooooooooo

[14:52] <hoelzro> jnthn++

[14:52] <jnthn> And figured I'd do a final bump when the dust settles :)

[14:52] <colomon> \o/

[14:53] <JimmyZ> Are you going to rewrite CStruct compose? :)

[14:53] <jnthn> JimmyZ: I maybe "should" but I really can't be bothered right now :)

[14:53] <jnthn> JimmyZ: If you fancy taking it on, feel free.

[14:54] <jnthn> I'm going to start looking at Star.

[14:54] <jnthn> I'll make a branch to work on getting Star multi-backend aware.

[14:54] <JimmyZ> jnthn: I just want to Apply https://gist.github.com/zhuomingliang/9541251 

[14:54] <JimmyZ> :P

[14:55] <jnthn> JimmyZ: Oh, that looks like a simple cleanup

[14:55] <JimmyZ> yeah

[14:55] <jnthn> There's still a nasty bug though.

[14:55] <jnthn> attr_iter = (MVMIter *)MVM_iter(tc, attributes);

[14:55] <jnthn> That allocates

[14:55] <jnthn> There's no reason to use it afaict

[14:56] <jnthn> Just grab elems and then do a normal for loop

[14:57] <JimmyZ> oh, I was porting the orig code...

[14:57] *** daniel-s joined
[14:58] <jnthn> I suspect we get away with more on Parrot 'cus it never moves objects.

[14:58] <JimmyZ> My patch just re-orders the code to avoid MVMROOT current_class var

[15:02] <jnthn> Yeah. But the rooting is missing that MVM_iter requires

[15:03] *** lizmat left
[15:03] *** fridim__ joined
[15:03] *** woolfy left
[15:05] <hoelzro> anyone mind +1'ing this PR to linguist that improves Perl 6 detection?

[15:05] <hoelzro> https://github.com/github/linguist/pull/900

[15:06] <masak> wow, the first comment ever that perfectly straddles spam and non-spam such that I can't immediately tell.

[15:06] <masak> it's a comment for http://perl6advent.wordpress.com/2013/12/02/day-02-the-humble-type-object/

[15:06] <masak> the text is "Hi all just started programming with the ruby programming language so I'm quite a bit of a newcommer!

[15:06] <masak> But yet have found your websiye very motivating and instructive.

[15:06] <masak> Many thanks!"

[15:07] <masak> and the URL is http://learn-programming-quickly.blogspot.co.uk/2014/01/learn-ruby-programming-easy-way.html

[15:07] *** woolfy joined
[15:07] *** xinming_ joined
[15:07] <masak> the text makes me think it's genuine; the URL makes me think it's spam.

[15:07] <skids> I'm lost among all the github icons.  How do I +1 a PR?

[15:07] <masak> oh and the URL is linked up with the text "Kids programming". I don't know enough about Wordpress to tell whether that's actually the user name or something.

[15:08] <moritz> skids: you write +1, I'd guess :-)

[15:09] <skids> Oh, I thought there was actually a voting system :-)

[15:09] *** xinming__ left
[15:10] *** brrt joined
[15:11] <timotimo> skids: i think it's :+1

[15:11] <timotimo> at least all the icons start with : and you get a little "autocompleter"

[15:11] <timotimo> :+1:

[15:11] *** lizmat joined
[15:12] *** molaf joined
[15:15] <skids> Got it eventually.  I feel so old.

[15:16] *** guru joined
[15:16] *** guru is now known as Guest2974

[15:16] *** Guest2974 is now known as ajr_

[15:16] *** isBEKaml joined
[15:17] <hoelzro> thanks JimmyZ, skids 

[15:17] *** brrt left
[15:18] <masak> release week next week.

[15:18] <masak> ++tadzik

[15:18] <masak> anyone want to nab the release manager role for May? there are still openings.

[15:18] <hoelzro> tadzik++

[15:19] *** [Sno] joined
[15:19] <dalek> star/tristar: da40b10 | jnthn++ | tools/star/Makefile:

[15:19] <dalek> star/tristar: Initial Makefile updates to include MoarVM.

[15:19] <dalek> star/tristar: 

[15:19] <dalek> star/tristar: Untested, may need tweaks, but should be about right.

[15:19] <dalek> star/tristar: review: https://github.com/rakudo/star/commit/da40b102fc

[15:19] <dalek> star/tristar: 361d740 | jnthn++ | tools/star/release-guide.pod:

[15:19] <dalek> star/tristar: Some release guide updates.

[15:19] <dalek> star/tristar: review: https://github.com/rakudo/star/commit/361d740537

[15:20] <isBEKaml> :wq

[15:20] * hugme hugs isBEKaml, good vi(m) user!

[15:20] *** M_o_C joined
[15:22] * jnthn will be submitting talks for Dutch/Polish/Czech Perl workshops soon. If there's any topics anyone attending would especially like to hear me talk about, feel free to say so :)

[15:23] *** M_o_C_ joined
[15:24] *** skids left
[15:24] *** daniel-s left
[15:25] *** M_o_C left
[15:26] *** daniel-s joined
[15:26] *** M_o_C__ joined
[15:27] *** M_o_C_ left
[15:29] *** tgt left
[15:30] *** _thou joined
[15:31] *** M_o_C joined
[15:31] *** M_o_C__ left
[15:33] *** M_o_C left
[15:36] *** M_o_C joined
[15:37] <dalek> specs: 3d55709 | (Elizabeth Mattijsen)++ | S (2 files):

[15:37] <dalek> specs: Restart S22, move appropriate stuff in from S11

[15:37] <dalek> specs: review: https://github.com/perl6/specs/commit/3d55709fc3

[15:39] *** M_o_C_ joined
[15:39] *** M_o_C_ left
[15:41] *** M_o_C left
[15:49] *** dmol joined
[15:51] <masak> jnthn: I'd like to hear more about category theory...

[15:51] <masak> :P

[15:52] <masak> random insight from http://www.youtube.com/watch?v=jScLjUlLTLI -- technologies that don't restrict you too much (i.e. more Perl than Python) tend to spawn "Best Practices"-style cottage industries

[15:53] <Juerd> The great thing about best practices is that they evolved from a lot of experience

[15:54] <masak> putting on my Python hat, though, I could make the same case for the restrictions/opinions built into the language.

[15:55] <masak> I'm by no means a Python expert. but half of the time I feel hemmed in by some "we know better" decisions; the other half of the time I kind of admire it.

[15:57] * TimToady hems and haws

[15:57] <FROGGS> TimToady: howdy!

[15:57] *** fridim__ left
[15:57] <jnthn> masak: I wsa hoping folks would pick topics I knew about :P

[15:58] <masak> jnthn: just introduce yourself as a co-expert on category theory! :P

[15:58] <jnthn> :D

[15:58] * masak .oO( In Soviet Russia, category theory reverses YOU! )

[15:59] <dalek> specs: cc3524b | (Elizabeth Mattijsen)++ | S22-package-format.pod:

[15:59] <dalek> specs: Tweaks, make examples more in line with each other

[15:59] <dalek> specs: review: https://github.com/perl6/specs/commit/cc3524bea1

[16:00] * lizmat hopes that TimToady and masak have time to look at the new S22 spec

[16:01] <lizmat> (or anybody else, really, specifically people with packaging backgrounds)

[16:01] <lizmat> to make sure that I'm on the right track

[16:01] <jnthn> .oO( In Putin theory, YOU reverse to Soviet Russia... )

[16:02] <lizmat> .oO( stop Putin fear in our hearts )

[16:05] <masak> next random thought, also based on the same video: if you're more opinionated, that's a kind of giant's shoulders that the community can stand on. contrariwise, flexibility is "broad" but not "tall".

[16:06] <masak> also, interestingly, in that talk the (Ember) speakers keep defining themselves in terms of Angular. a bit like Python people have defined themselves in terms of and distanced themselves from Perl.

[16:07] <masak> "So if you're ready to stop going it alone, and joining a community that values making the right way feel right -- use Ember. You won't regret it."

[16:07] <masak> yep. Ember is now officially the Python of JavaScript web frameworks.

[16:07] *** xenoterracide joined
[16:11] *** woolfy left
[16:11] <jnthn> Hmm...what...

[16:12] <jnthn> So the Star build script claims it will download an NQP/Parrot, but also bundles them?

[16:12] *** woolfy joined
[16:14] <masak> sounds a bit redundant.

[16:15] <TimToady> you can say that again

[16:17] * jnthn is very confused

[16:17] <dalek> specs: c7aab52 | (Elizabeth Mattijsen)++ | S22-package-format.pod:

[16:17] <dalek> specs: Add optional "authors" tag to META6.json

[16:17] <dalek> specs: review: https://github.com/perl6/specs/commit/c7aab52b47

[16:19] *** dwarring left
[16:19] <sjn> lizmat: http://pad.hackeriet.no/p/p6-deploy

[16:19] <dalek> star/tristar: 31977c5 | Jonathan++ | Configure.pl:

[16:19] <dalek> star/tristar: Add --gen-moar option to Configure.pl.

[16:19] <dalek> star/tristar: review: https://github.com/rakudo/star/commit/31977c5ae3

[16:21] * TimToady wonders if "mitsuboshi" is a word in japanese...

[16:21] <isBEKaml> what's tristar?

[16:21] <TimToady> * with three backends, presumably

[16:22] <isBEKaml> Ah.

[16:28] <dalek> star/tristar: 07094e4 | jnthn++ | README.star:

[16:28] <dalek> star/tristar: Update an outdated URL.

[16:28] <dalek> star/tristar: review: https://github.com/rakudo/star/commit/07094e4f09

[16:28] <dalek> star/tristar: 79a6cbd | jnthn++ | .gitignore:

[16:28] <dalek> star/tristar: Update .gitignore.

[16:28] <dalek> star/tristar: review: https://github.com/rakudo/star/commit/79a6cbdd7e

[16:28] <jnthn> My attempt to get us a Star to have 3 backends, which will probably need to be re-done afterwards, because I'm awful at making build systems, but that's still less awful than it not being worked on.

[16:30] * TimToady is reminded of himself + rakudo for some reason

[16:30] *** telex left
[16:30] *** Mouq joined
[16:30] <jnthn> Well, I didn't work on the Rakudo one, which you can mostly be glad of.

[16:31] <TimToady> see the comments in metaops/flatmap for an example of my nqp coding skilz

[16:32] *** denis_boyun left
[16:32] *** telex joined
[16:32] <jnthn> nqp::if(Mu

[16:33] <jnthn> Taht's basically "if false"

[16:33] <jnthn> Meaning it'll only ever execute the first branch...

[16:33] <TimToady> yes, but it blue op if I tried to simplify it

[16:34] <TimToady> so obviously my mental model was wrong sumhau

[16:34] <jnthn> hm, odd

[16:35] <TimToady> there's some "Oh obviously you have to change that X to a Y in that case" that I'm not cognizent of yet

[16:35] <dalek> specs: e9913fd | (Elizabeth Mattijsen)++ | S22-package-format.pod:

[16:35] <dalek> specs: Introduce "license" tag in META6.json

[16:35] <dalek> specs: review: https://github.com/perl6/specs/commit/e9913fdf37

[16:36] *** kurahaupo joined
[16:37] *** raiph joined
[16:37] <jnthn> I'm also not entirely sure how to try out the Star module build without having releases cut, which is a pain in so far as I wanted to fix blockers...

[16:40] <pmurias> masak: looking at the ember website aren't they more ruby on rails then python?

[16:43] <lizmat> this just on perl-qa: [17:36:25] GumbyNET7	 CPAN Upload: Test-Ignore-Me-0.001 by FROGGS http://metacpan.org/release/FROGGS/Test-Ignore-Me-0.001

[16:44] <lizmat> the first (unsuccessful) Perl 6 module distribution upload to CPAN

[16:44] <TimToady> EYOUDIDN'TIGNOREME!!!!

[16:44] <lizmat> actually, the upload should be ok

[16:44] <lizmat> the indexing was still attempted, when it shouldn't have been  :-(

[16:45] <TimToady> hopefully it really gummed up the works :D

[16:45] <lizmat> rjbs and Andreas are looking at it   :-)

[16:45] <FROGGS> no, the indexing bit is not yet patched, but the upload itself should go into a different directory, and that failed

[16:46] <lizmat> .oO( version 0.01, there is room for improvement  :-)

[16:46] <TimToady> FROGGS++ for being an Agent of Change

[16:46] <FROGGS> hehe

[16:48] <masak> pmurias: I think arguably Ruby is opinionated in sort of the same way as Python. they're just... less explicit about it, perhaps?

[16:48] <masak> I could very well be wrong.

[16:48] <TimToady> they just have a different one way to do it :)

[16:49] <isBEKaml> masak: Ruby is hipster crowd, they SHOULDN'T be opinionated. :P

[16:49] <masak> isBEKaml! \o/

[16:49] <isBEKaml> hello, masak

[16:51] <dalek> star/tristar: 7e41622 | jnthn++ | tools/build/Makefile.in:

[16:51] <dalek> star/tristar: The Rakudo debugger binary is built by Rakudo now.

[16:51] <dalek> star/tristar: 

[16:51] <dalek> star/tristar: Don't need to handle it specially in Star any more.

[16:51] <dalek> star/tristar: review: https://github.com/rakudo/star/commit/7e4162201d

[16:51] <japhb__> jnthn: Have you bumped the version files for Moar and NQP?  dalek gets knocked off so often, it's hard to tell -- and I was about to kick off one of my Build All The Things scripts.  (Wouldn't want to get to the end and find out it was pre-NativeCall-awesomeness.)

[16:53] <TimToady> Bump All the Things!

[16:56] <jnthn> japhb__: No, I didn't yet.

[16:56] <jnthn> japhb__: Though I probably could now.

[16:56] <jnthn> japhb__: Given I fixed the pre-comp thingy...

[16:57] <japhb__> jnthn: Ah, very good.

[16:58] <jnthn> Lemme do it now...

[16:59] <dalek> specs: c7c81c9 | (Elizabeth Mattijsen)++ | S22-package-format.pod:

[16:59] <dalek> specs: Elaborate in "support" tag in META6.json

[16:59] <dalek> specs: review: https://github.com/perl6/specs/commit/c7c81c97ed

[16:59] * TimToady thinks Buf.new should be flattening its args like any self-respecting slurpy

[16:59] <TimToady> it's a naturally flat structure

[17:04] * TimToady has been watching too much anime lately, and thinks the N in N'th is crying because of the spurious apostrophe

[17:06] <dalek> nqp: d5ec544 | (Elizabeth Mattijsen)++ | README.pod:

[17:06] <dalek> nqp: Mention --gen-moar as a parameter

[17:06] <dalek> nqp: review: https://github.com/perl6/nqp/commit/d5ec544aa9

[17:06] <dalek> nqp: 04ffa12 | (Elizabeth Mattijsen)++ | README.pod:

[17:06] <dalek> nqp: Change copyright to 2014

[17:06] <dalek> nqp: review: https://github.com/perl6/nqp/commit/04ffa122be

[17:07] <japhb__> TimToady: Or maybe just embarrassed?

[17:07] <TimToady> it's embarrassin', I'm opinin'

[17:10] <dalek> nqp: 83c0d27 | jnthn++ | tools/build/MOAR_REVISION:

[17:10] <dalek> nqp: Bump MOAR_REVISION for native call support.

[17:10] <dalek> nqp: review: https://github.com/perl6/nqp/commit/83c0d27fc1

[17:12] <dalek> rakudo/nom: a24091e | jnthn++ | tools/build/NQP_REVISION:

[17:12] <dalek> rakudo/nom: Bump to an NQP with native call improvements.

[17:12] <dalek> rakudo/nom: 

[17:12] <dalek> rakudo/nom: Both MoarVM support, and JVM improvements.

[17:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a24091ee38

[17:13] <isBEKaml> we should have a bum pall

[17:13] * lizmat pulls, builds and spectests

[17:13] <isBEKaml> to bump 'em off one by one. 

[17:15] <TimToady> masak: Best Practices cultures fighting with You Can't Even Think Wrong Thoughts cultures have been with us at least from the time of Athens and Sparta :)

[17:16] <arnsholt> TimToady: "This! Is! Python!"? =)

[17:16] <isBEKaml> Or "Tell me about it." (I'm Socrates and my wife just poured bucketful of water on me)

[17:20] <masak> TimToady: now there's a YAPC talk right there.

[17:21] <masak> TimToady: anyway, I'm not taking sides. much. I still like Perl a lot, even when I'm letting the Python-think get to me. :)

[17:21] <masak> TimToady: also, it's interesting to note that we are sorta-kinda saying, with Perl 6, "we're *still* leaning towards the flexible end of the spectrum... but some things are worth being opinionated about, at least by default"

[17:21] <japhb__> TimToady: Not knowing my ancient Athenian history that well -- am I correct in assuming BP was Sparta and YCETWT was Athens?

[17:22] <TimToady> quite the opposite, in my estimation

[17:22] <TimToady> it was the athenians that were always arguing with each other :)

[17:23] *** kurahaupo left
[17:23] <jnthn> So somehow the Star build thing magically finds the bundled Parrot and NQP.

[17:24] <TimToady> so maybe Perl 6 is more like Rome, where there's a great deal of flexibility within the constraints of the law :)

[17:24] <TimToady> but it's a long learning curve to citizenship

[17:25] *** isBEKaml left
[17:27] <TimToady> and if your province gets too uppity, we'll just absorb you :)

[17:29] <rjbs> Today was a great day with a high-stress ending!  PAUSE function should return shortly…

[17:30] <TimToady> obviously the name PAUSE is appropriate here :)

[17:34] *** kurahaupo joined
[17:35] <dalek> star/tristar: e17b584 | jnthn++ | tools/lib/NQP/Configure.pm:

[17:35] <dalek> star/tristar: Some Configure.pm updates for Moar.

[17:35] <dalek> star/tristar: review: https://github.com/rakudo/star/commit/e17b584ab9

[17:38] <dalek> star/tristar: ee1d52e | jnthn++ | tools/lib/NQP/Configure.pm:

[17:38] <dalek> star/tristar: Fix syntax error.

[17:38] <dalek> star/tristar: review: https://github.com/rakudo/star/commit/ee1d52e8c9

[17:42] <lizmat> teardown of day 3 of QA Hackathon&

[17:42] *** lizmat left
[17:43] *** kurahaupo left
[17:44] *** woolfy left
[17:46] *** [Sno] left
[17:48] *** [Sno] joined
[17:48] *** kurahaupo joined
[17:48] <dalek> star/tristar: db73a21 | jnthn++ | / (2 files):

[17:48] <dalek> star/tristar: Try to get --gen-moar working.

[17:48] <dalek> star/tristar: review: https://github.com/rakudo/star/commit/db73a21ffa

[17:49] *** [Sno] left
[17:49] *** bjz_ left
[17:56] <dalek> star/tristar: 1525fbe | jnthn++ | tools/lib/NQP/Configure.pm:

[17:56] <dalek> star/tristar: Another try at Moar, to not fetch from Git.

[17:56] <dalek> star/tristar: review: https://github.com/rakudo/star/commit/1525fbee85

[18:01] *** FROGGS left
[18:06] <timotimo> so, who would like to do "spec work" for the "variables directly accessible in NativeCall" bit?

[18:06] <timotimo> ISTR jnthn said something about the "native var is rw" thing being closely related?

[18:10] *** Vendethiel- joined
[18:11] *** vendethiel left
[18:15] *** Rotwang1 left
[18:15] <dalek> star/tristar: d6042a6 | jnthn++ | tools/lib/NQP/Configure.pm:

[18:15] <dalek> star/tristar: Shut up an error and get a working --gen-moar.

[18:15] <dalek> star/tristar: review: https://github.com/rakudo/star/commit/d6042a6795

[18:16] <jnthn> It's built a Moar and is now working on NQP...

[18:17] *** FROGGS joined
[18:17] <timotimo> \o/

[18:17] <jnthn> But that's just the first bit :/

[18:18] *** kurahaupo left
[18:18] *** kurahaupo joined
[18:18] <jnthn> Makefile.in is all a bit Parrot specific.

[18:19] <arnsholt> timotimo: Yeah, it's essentially the same problem, from memory: containers on natively typed variables

[18:21] <dalek> star/tristar: 16df539 | jnthn++ | tools/build/Makefile.in:

[18:21] <dalek> star/tristar: Remove unused symbols.

[18:21] <dalek> star/tristar: review: https://github.com/rakudo/star/commit/16df5398e6

[18:25] *** pecastro left
[18:27] *** kurahaupo left
[18:28] <lue> .oO(https://en.wikipedia.org/wiki/Tristar_64)

[18:29] *** zakharyas left
[18:30] *** hoverboard joined
[18:34] <timotimo> fair enough on that case.

[18:36] <timotimo> after the tristar, do we make moar's spectests clean? :P

[18:36] <timotimo> so that i can compare changes against a known state instead of running the thing twice?

[18:36] *** kurahaupo joined
[18:39] *** pecastro joined
[18:40] <jnthn> timotimo: Anybody can work on doing that, provided they add RTs as they fudge

[18:43] <timotimo> ah

[18:43] <timotimo> maybe i've found my thing for the evening

[18:43] *** FROGGS left
[18:44] <masak> hey #perl6, can I discuss a talk idea with you? Czech Perl Workshop, which I *may* be going to, has this theme "Future Perl". I want to do something like "I code Perl 5 and Perl 6, and the way I code in one language affects the way I code in the other".

[18:44] <masak> would you come to such a talk? what, in particular, would you like to hear about?

[18:44] <masak> also, what should the talk title be? :)

[18:44] *** pecastro left
[18:45] <timotimo> that seems like an interesting idea

[18:45] <timotimo> something with entanglement

[18:46] *** pecastro joined
[18:47] *** darutoko left
[18:50] <masak> "The future is entangled"

[18:51] <masak> it's like, I'm so used to p6 that when I code in p5, I tend to use a lot of p6 patterns.

[18:51] <masak> almost coding in a kind of wishful thinking mode, or coding towards a p6 ideal.

[18:51] *** pecastro left
[18:52] <masak> sometimes that makes inherently p5 solutions take me completely off guard, like with http://strangelyconsistent.org/blog/speed-up-by-a-factor-of-6-million

[18:55] <masak> wow. both of those RT tickets are still open.

[18:55] <masak> r: say "foooo" ~~ /^ f o ** 4 $/

[18:55] <camelia> rakudo-parrot a24091, rakudo-jvm a24091, rakudo-moar a24091: OUTPUT«｢foooo｣␤␤»

[18:55] <masak> r: my $l = 4; say "foooo" ~~ /^ f o ** $l $/

[18:55] <camelia> rakudo-parrot a24091, rakudo-jvm a24091, rakudo-moar a24091: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Quantifier quantifies nothing␤at /tmp/tmpfile:1␤------> [32mmy $l = 4; say "foooo" ~~ /^ f o ** [33m⏏[31m$l $/[0m␤    expecting any of:…»

[18:55] <timotimo> yes, we still can't do ** $foo :(

[18:56] <masak> :/

[18:56] <masak> r: my $l = 3; say "x" x 10 ~~ / x ** {$l} /

[18:56] <camelia> rakudo-parrot a24091, rakudo-jvm a24091, rakudo-moar a24091: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Block case of ** quantifier not yet implemented␤at /tmp/tmpfile:1␤------> [32mmy $l = 3; say "x" x 10 ~~ / x ** [33m⏏[31m{$l} /[0m␤    …»

[18:56] <masak> :/ ** {$l}

[18:56] <lue> Is there some sort of .reassuming thing I can use for functions? I specifically would like to toggle a binary named parameter. (There's always keeping an un-primed version of the function around, but I'd rather not)

[18:57] <masak> lue: would recomment keeping the un-primed version around.

[18:57] <Mouq> std: my $l = 4; say "foooo" ~~ /^ f o ** $l $/

[18:57] <camelia> std 09dda5b: OUTPUT«Potential difficulties:␤  Unsupported use of atom ** $l  as separator; nowadays please use atom +% $l  at /tmp/ay4dEwlNuz line 1:␤------> [32mmy $l = 4; say "foooo" ~~ /^ f o ** $l [33m⏏[31m$/[0m␤ok 00:01 127m␤»

[18:57] <masak> lue: before I had finished reading your question, that's what came to mind.

[18:58] <masak> Mouq: that's a "wound" due to spec shifting over time.

[18:58] <timotimo> how about a role for that method that keeps the original around and replaces .assuming to call .assuming on the original instead?

[18:58] <Mouq> n: my $l = 4; say "foooo" ~~ /^ f o ** $l $/

[18:58] <camelia> niecza v24-109-g48a8de3: OUTPUT«Potential difficulties:␤  Unsupported use of atom ** $l as separator; nowadays please use atom+ % $l at /tmp/wQSWbMGRfw line 1:␤------> [32mmy $l = 4; say "foooo" ~~ /^ f o ** $l[33m⏏[31m $/[0m␤␤Nil␤»

[18:58] <timotimo> role UnmodifiedVersion[&foo] { ... } ?

[18:58] <lue> masak: yeah, I was kinda hoping I wouldn't need to keep two copies of each function around :) [though the original list can probably just bind to the functions instead of assigning]

[18:59] <Mouq> Someone else should really fix that :P

[18:59] <Mouq> ** {$l}

[18:59] <masak> I understand why it's hard.

[18:59] <masak> it's where (static) state machines meet (runtime) variables.

[19:00] *** kurahaupo left
[19:00] <Mouq> masak: I've been doing <{"thing**$l"}> when I need it

[19:00] *** kurahaupo joined
[19:01] <masak> Mouq: hm.

[19:01] <masak> Mouq: do you mean "thing" xx $l ?

[19:02] * Mouq is very very happy to see Star and  and packaging getting love, though

[19:02] <Mouq> s/  / NativeCall/

[19:03] <lue> masak: <{}> turns its contents into a regex

[19:03] <Mouq> masak: I don't remember why I used it before, but I believe it was for something like <{"thing**3..{$some calc}"}>

[19:04] *** kurahaupo left
[19:05] <Mouq> [jnthn, lizmat, FROGGS, JimmyZ, arnsholt]>>++

[19:05] * Mouq hopes he didn't miss anyone, probably did

[19:06] * Mouq must go, though. o/

[19:06] *** Mouq left
[19:16] *** kurahaupo joined
[19:18] <timotimo> masak: are you going to revisit your t4 code for performance?

[19:20] <timotimo> and, i suppose, idiomaticity?

[19:21] *** kurahaupo left
[19:21] *** kurahaupo joined
[19:26] *** kurahaupo left
[19:26] *** kurahaupo joined
[19:27] *** zakharyas joined
[19:32] <moritz> and idiocy? :-)

[19:33] <lue> This talk of t4 reminds of a blog post I need to get around to putting up :)

[19:38] <jnthn> moritz: I've got a little further with multi-backend Star. I've reached Makefile.in. Had you pondered what to do with it at all?

[19:38] <jnthn> moritz: Would a Makefile-JVM.in etc approach make sense here, as in Rakudo?

[19:45] *** spider-mario joined
[19:56] *** rurban1 joined
[20:08] *** kurahaupo left
[20:09] *** vincent22 left
[20:09] <masak> today's autopun spotting: https://twitter.com/thereaIbanksy/status/444649256545026048

[20:10] *** kurahaupo joined
[20:10] <masak> lue: oh! right. Mouq++

[20:10] <masak> timotimo: yes, I imagine I will.

[20:10] <masak> still looking for someone to do an ironman thing with, by the way.

[20:10] <masak> that would help me get back to blogging again, I think.

[20:12] <jnthn> masak: Just make a rule that you can only drink Yeti after blogging :P

[20:13] <masak> heh.

[20:13] <masak> no, I need something more competitive.

[20:14] *** raiph left
[20:23] <timotimo> nqp: my $foo = "hello there"; my $bar = "hello there"; say($foo =:= $bar); $bar := ~$bar; say($foo =:= $bar);

[20:23] <camelia> nqp-parrot: OUTPUT«Assignment ("=") not supported in NQP, use ":=" instead at line 2, near " \"hello th"␤current instr.: 'panic' pc 15934 (gen/parrot/stage2/NQPHLL.pir:5941) (gen/parrot/stage2/NQPHLL.nqp:425)␤»

[20:23] <camelia> ..nqp-moarvm: OUTPUT«Assignment ("=") not supported in NQP, use ":=" instead at line 2, near " \"hello th"␤   at gen/moar/stage2/NQPHLL.nqp:369  (/home/p6eval/rakudo-inst-1/languages/nqp/lib/NQPHLL.moarvm:panic:120)␤ from <unknown>:1  (/home/p6eval/rakudo-inst-1/languages/nqp/lib/…»

[20:23] <camelia> ..nqp-jvm: OUTPUT«Assignment ("=") not supported in NQP, use ":=" instead at line 2, near " \"hello th"␤  in panic (gen/jvm/stage2/NQPHLL.nqp:378)␤  in infix:sym<=> (gen/jvm/stage2/NQP.nqp)␤  in !protoregex (gen/jvm/stage2/QRegex.nqp:784)␤  in infix (gen/jvm/stage2/NQPHLL.nqp)…»

[20:23] <timotimo> nqp: my $foo := "hello there"; my $bar := "hello there"; say($foo =:= $bar); $bar := ~$bar; say($foo =:= $bar);

[20:23] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«0␤0␤»

[20:24] <timotimo> nqp: my $foo := "hello there"; my $bar := $foo; say($foo =:= $bar); $bar := ~$bar; say($foo =:= $bar);

[20:24] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«1␤0␤»

[20:25] <timotimo> aaw.

[20:31] <arnsholt> jnthn: JAST::Method, many method, very code, wow.

[20:37] <timotimo> yay, i segfault nqp

[20:39] <timotimo> the empty string is a poor replacement for every string in the whole program.

[20:39] <arnsholt> Much impress, very achieve!

[20:41] <jnthn> arnsholt: Yes, that's the worst one in a sense :)

[20:42] <arnsholt> A lot of attributes, at any rate

[20:42] <arnsholt> I'm reconstituting (or maybe deconstituting is a better term =) the JAST nodes into Java classes for the direct compilation of JAST

[20:44] <arnsholt> jnthn: Incidentally, Ops.getlex("JAST::Thingy", tc) is TRT to do to get at the SixModelObject for the JAST::Thingy, right?

[20:44] <arnsholt> timotimo: I'd've never guessed! =D

[20:46] <jnthn> arnsholt: Um...not really

[20:46] <jnthn> arnsholt: On Moar we pass the node types in.

[20:46] <jnthn> arnsholt: Into the tree to bytecode thing I mean

[20:46] <jnthn> Hash of name to node type

[20:47] <arnsholt> Ah, right

[20:47] <arnsholt> So the compile ops have to take an argument with the name-to-type lookup hash

[20:47] <jnthn> yeah

[20:48] * arnsholt adds a TODO to the code

[20:49] *** kurahaupo left
[20:51] <timotimo> is there a reason to believe that $*W may not be set to something at some point?

[20:52] <jnthn> Well, before the point in...hm...TOP? Or comp_unit? 

[20:52] <jnthn> It's declared in one of the two

[20:52] <jnthn> Pretty early

[20:53] <timotimo> mhm

[20:53] *** rindolf joined
[20:53] *** ajr_ left
[20:54] <timotimo> it seems like i'm being called from the term rule's action

[20:54] <jnthn> During stage parse?

[20:54] <timotimo> yes, i think so

[20:55] <timotimo> aye.

[20:55] <timotimo> the only way i can imagine $*W.intern($foo) instead of $foo to fail is that $*W is null or something

[20:55] <timotimo> oh, duh

[20:55] <jnthn> Could fail on the inside... :)

[20:55] <timotimo> er, i don't actually have to set the has %!interned_strings to anything, right?

[20:55] <timotimo> not if you replace the whole body with return $str

[20:56] <jnthn> timotimo: Yes, you need to initialize it in BUILD

[20:56] <jnthn> NQP's initialization stuff is not so clever as Rakudo's... 

[20:56] <timotimo> that may make a difference then :)

[20:57] * jnthn chuckles at the bottom variable name currently initialized in there :)

[20:58] <timotimo> code_ref_blocks?

[21:01] <jnthn> oh are you in HLL::World or Perl6::World? :)

[21:03] *** molaf left
[21:05] <jnthn> arnsholt: ohbtw, myself and masak will be about in Oslo on Monday evening, if you're free and want to take a jar...

[21:06] *** rurban1 left
[21:07] <arnsholt> jnthn: Oh, that sounds great!

[21:07] <masak> arnsholt: what jnthn said. :)

[21:08] <jnthn> We can have a "NativeCall runs on all the things" celebratory beer!

[21:08] <arnsholt> Oh, indeed!

[21:09] <arnsholt> What're your plans for dinner, BTW?

[21:09] <arnsholt> I think I promised jnthn that I'd show him one of the better Indian places, last time he was here

[21:10] <jnthn> arnsholt: We'll need to eat.

[21:11] <arnsholt> That specific, eh?

[21:11] <arnsholt> Anyways, gimme a prod if you wanna grab something together. I can probably think of a place or two =)

[21:11] <jnthn> arnsholt: That was a "we didn't make plans and so are open to having dinner" :)

[21:12] *** M_o_C joined
[21:12] <jnthn> An Indian works very well for me. But that's always the case :)

[21:12] <jnthn> I suspect masak would like it too.

[21:15] <arnsholt> Spiffy

[21:16] *** cognominal__ left
[21:16] *** zakharyas left
[21:16] *** rurban1 joined
[21:21] *** rurban1 left
[21:21] *** cognominal joined
[21:23] *** cognominal left
[21:23] *** cognominal joined
[21:34] *** bjz joined
[22:00] *** M_o_C left
[22:14] *** rindolf left
[22:18] *** araujo joined
[22:20] <dalek> Heuristic branch merge: pushed 20 commits to nqp/moar-conc by jnthn

[22:20] <dalek> rakudo/moar-conc: a0a5990 | lue++ | src/core/ (2 files):

[22:20] <dalek> rakudo/moar-conc: Rename .ast to .made, as per S05.

[22:20] <dalek> rakudo/moar-conc: 

[22:20] <dalek> rakudo/moar-conc: The .ast method is still around, though now it's deprecated.

[22:20] <dalek> rakudo/moar-conc: review: https://github.com/rakudo/rakudo/commit/a0a5990853

[22:20] *** dalek left
[22:21] *** dalek joined
[22:21] *** ChanServ sets mode: +v dalek

[22:29] *** [Sno] joined
[22:42] <dalek> ecosystem: f652b00 | (Andrew Egeler)++ | META.list:

[22:42] <dalek> ecosystem: Add Compress::Zlib::Raw

[22:42] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/f652b00a41

[22:48] *** hoverboard left
[22:53] *** xenoterracide left
[22:56] *** kurahaupo joined
[22:58] *** klapperl left
[23:00] *** klapperl joined
[23:00] *** xenoterracide joined
[23:05] *** spider-mario left
[23:06] *** Psyche^_ joined
[23:08] *** kania joined
[23:10] *** Psyche^ left
[23:11] <kania> Hello, I need some help, I made a program for a class exercise ...

[23:11] *** hoverboard joined
[23:13] <timotimo> oooh, Perl 6 class?

[23:14] <kania> of course timotimo

[23:14] <timotimo> okay

[23:14] <timotimo> elaborate please?

[23:15] <kania> ok... exercise is to fill political Car with 4 each, there are two different political parties, can get 2 of each party, or 4 only one

[23:16] <kania> I've done it and run, it works, but not always

[23:17] <kania> also when it ends (I have since finished the 10 cars) shows the threads that have been active :/

[23:18] <kania> and do not know what I'm doing wrong, I guess it will close some light, but I can not find is wrong

[23:18] <timotimo> huh? what's a political car?

[23:18] <kania> mmm sorry... one car with four politics

[23:18] <kania> yes?

[23:18] <timotimo> ah, ok

[23:19] <timotimo> without seeing any code, i cannot know what's wrong

[23:19] *** dmol left
[23:19] <kania> wait please one moment I up the code

[23:21] <kania> http://pastebin.com/3wbyu1h3

[23:21] <timotimo> oh, but that's perl 5 and not perl 6 :(

[23:21] <kania> :s

[23:21] <timotimo> i'm one of the few who can't do any perl 5, only perl 6, sorry

[23:22] <kania> thank you for read me

[23:22] *** kania left
[23:25] *** BenGoldberg joined
[23:34] *** clkao left
[23:36] *** clkao joined
[23:38] <lue> .oO(Nothing like something breaking that's apparently ungolfable. Grrrr)

[23:40] *** rurban1 joined
[23:48] <lue> Well, turns out it was just a typo in the test file :/

[23:49] <timotimo> ouch

[23:50] <lue> though I did encounter a real problem that was masked by both the typo and my use of submethod BUILD:

[23:50] <lue> r: class C { has $.a = False; method new(:$a) { self.bless(:$a) } }; say C.new.a;

[23:50] <camelia> rakudo-parrot a24091, rakudo-jvm a24091, rakudo-moar a24091: OUTPUT«(Any)␤»

[23:51] <jnthn> You provided a value for it, so the default won't apply.

[23:51] <lue> the only way to make that work is to say new(:$a = False), afaik

[23:52] <lue> jnthn: yeah, I realize why it doesn't work, I just don't agree with it :) binary adverbs are binary enough I feel...

[23:52] <lue> *aren't binary enough

[23:53] <jnthn> Any way I can think of right off to change that feel likely to cause other kinds of fun...

[23:53] <jnthn> I mean, the check could be "is the attribute defined"

[23:54] <jnthn> But then you can't construct an object and deliberately put a type object in an attr...

[23:54] * lue tries to find that "coercion" typing thing

[23:54] * jnthn figures he'll get some rest :)

[23:54] <lue> r: class C { has $.a = False; method new(Any(Bool) :$a) { self.bless(:$a) } }; say C.new.a;

[23:54] <jnthn> 'night, #perl6

[23:54] <camelia> rakudo-parrot a24091, rakudo-jvm a24091, rakudo-moar a24091: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤coercive type declarations not yet implemented. Sorry. ␤at /tmp/tmpfile:1␤------> [32m { has $.a = False; method new(Any(Bool)[33m⏏[31m :$…»

[23:54] <lue> ♞ jnthn o/

[23:54] <lue> n: class C { has $.a = False; method new(Any(Bool) :$a) { self.bless(:$a) } }; say C.new.a;

[23:54] <camelia> niecza v24-109-g48a8de3: OUTPUT«(Any)␤»

[23:55] <lue> n: class C { has $.a = False; method new(Bool(Any) :$a) { self.bless(:$a) } }; say C.new.a;

[23:55] <camelia> niecza v24-109-g48a8de3: OUTPUT«(Bool)␤»

[23:56] <lue> nope, guess you have to = False (or some MMD with methods lacking the adverb)

[23:58] <lue> jnthn: I can imagine there'd be problems by changing things around. This is just one of those corner cases where flags shouldn't be quite the same as adverbs, is all :)

