[00:18] *** rurban joined
[00:24] *** rurban left
[00:39] *** robinsmidsrod left
[00:40] *** robinsmidsrod joined
[00:43] *** [particle] joined
[00:43] *** [particle]1 left
[00:43] *** awwaiid left
[00:43] *** awwaiid joined
[00:45] *** BenGoldberg joined
[00:46] *** sunnavy left
[00:49] *** [particle]1 joined
[00:50] *** daniel-s__ joined
[00:50] *** daniel-s_ left
[00:51] *** arnsholt_ joined
[00:51] *** [particle] left
[00:51] *** thou left
[00:51] *** yakudza left
[00:51] *** arnsholt left
[00:51] *** renormalist left
[00:51] *** renormalist joined
[00:51] *** molaf_ left
[00:51] *** yakudzo joined
[00:51] *** thou joined
[00:52] *** molaf_ joined
[00:52] *** sunnavy joined
[00:59] *** daniel-s__ left
[01:00] *** btyler joined
[01:02] *** daniel-s__ joined
[01:02] *** thou left
[01:03] *** dayangkun joined
[01:07] *** Su-Shee left
[01:07] *** telex left
[01:08] *** dayangkun left
[01:08] *** Su-Shee joined
[01:08] *** telex joined
[01:10] *** FROGGS_ joined
[01:13] *** Sqirrel left
[01:14] *** FROGGS left
[01:17] *** klapperl_ joined
[01:19] *** woosley joined
[01:20] *** klapperl left
[01:21] *** rurban joined
[01:23] *** daniel-s__ left
[01:24] *** daniel-s__ joined
[01:26] *** rurban left
[01:28] *** dayangkun joined
[01:29] *** daniel-s__ left
[01:29] *** _daniel-s__ joined
[01:30] *** Sqirrel joined
[01:35] *** _daniel-s__ left
[01:35] *** _daniel-s__ joined
[01:39] *** dayangkun left
[01:41] *** dayangkun joined
[01:41] *** daniel-s joined
[01:45] *** dayangkun left
[01:45] *** _daniel-s__ left
[01:46] *** molaf_ left
[01:48] *** Gruber joined
[01:48] *** ssutch_ joined
[01:48] *** labster_ joined
[01:51] *** mls_ joined
[01:51] *** nhayashi left
[01:51] *** ssutch left
[01:51] *** krunen left
[01:51] *** huf left
[01:51] *** TimToady left
[01:51] *** grep0r left
[01:51] *** Khisanth left
[01:51] *** simcop2387 left
[01:51] *** TimToady joined
[01:51] *** Khisanth joined
[01:51] *** araujo left
[01:51] *** jercos joined
[01:51] *** lee__ left
[01:52] *** simcop2387 joined
[01:52] *** krunen joined
[01:52] *** nwc10 joined
[01:52] *** chenryn joined
[01:52] *** labster left
[01:52] *** Maddingue left
[01:52] *** yoleaux left
[01:52] *** Maddingue joined
[01:52] *** bowtie left
[01:52] *** mls left
[01:52] *** daxim left
[01:52] *** eternaleye left
[01:52] *** jtpalmer left
[01:52] *** go|dfish left
[01:52] *** japhb left
[01:52] *** japhb_ joined
[01:52] *** jtpalmer_ joined
[01:52] *** labster_ is now known as labster

[01:52] *** lee_ joined
[01:52] *** huf joined
[01:55] *** bowtie joined
[01:56] *** grep0r joined
[01:56] *** nhayashi joined
[02:00] *** eternaleye joined
[02:02] *** gtodd left
[02:03] *** dayangkun joined
[02:03] *** daxim joined
[02:03] *** cotto joined
[02:04] *** go|dfish joined
[02:07] *** xenoterracide joined
[02:08] *** araujo joined
[02:08] *** araujo left
[02:08] *** araujo joined
[02:12] *** daniel-s left
[02:12] *** daniel-s_ joined
[02:13] *** eternaleye left
[02:23] *** rurban joined
[02:25] <lue> on latest perl6-m, the test for panda all say "No subtests run"

[02:26] *** sorear joined
[02:29] *** rurban left
[03:08] *** aindilis joined
[03:13] *** rurban joined
[03:15] *** rurban left
[03:16] *** xenoterracide left
[03:20] *** hoelzro left
[03:21] *** atrodo left
[03:34] *** xragnar left
[03:38] *** grep0r left
[03:40] *** xragnar joined
[03:43] *** grep0r joined
[03:46] *** rurban joined
[03:47] *** btyler left
[03:49] *** rurban1 joined
[03:50] *** hoverboard joined
[03:50] *** rurban left
[03:51] *** thou joined
[03:53] *** rurban1 left
[03:54] *** ssutch_ left
[03:55] *** ssutch joined
[03:56] *** yoleaux joined
[03:56] *** ChanServ sets mode: +v yoleaux

[03:59] *** grep0r left
[04:02] *** kaare_ joined
[04:03] *** grep0r joined
[04:18] *** hoelzro joined
[04:19] *** atrodo joined
[04:19] *** BenGoldberg left
[04:23] *** daniel-s_ left
[04:23] *** daniel-s_ joined
[04:28] *** SevenWolf joined
[04:28] <TimToady> p6: say (1, 2, 3, 4) ~~ 3..10; say (1, 2, 3, 4, 5) ~~ 1..4;

[04:28] *** daniel-s__ joined
[04:29] <camelia> rakudo-{parrot,jvm,moar} b8567c: OUTPUT«False␤True␤»

[04:29] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«False␤False␤»

[04:29] *** daniel-s_ left
[04:29] <TimToady> I think those should be True False

[04:30] <TimToady> numeric range on the right should be testing range against +LHS

[04:30] *** anaeem1_ joined
[04:32] <TimToady> I guess there's a bit more dwimmery in the table than that, hmm...

[04:33] <TimToady>     Any       Range     in generic range        [!after] X.min,$_,X.max (etc.)

[04:34] <TimToady> not sure I buy that, looks like a refugee from symmetrical smartmatch

[04:36] <TimToady> oh, it's X.min, which is the range min, not the array min

[04:36] <TimToady> in fact, by that rule it would fail, since integers are not commensurate with parcels

[04:36] <TimToady> but I'd argue that a numeric range should coerce the left to numeric

[04:37] <TimToady> m: say (1,2,3,4,5) cmp 42

[04:37] <camelia> rakudo-moar b8567c: OUTPUT«Less␤»

[04:37] <TimToady> m: say (1,2,3,4,5) cmp 4

[04:37] <camelia> rakudo-moar b8567c: OUTPUT«Less␤»

[04:38] <TimToady> hmm, looks like it's doing element-by-element comparison, treating the right as a single element

[04:38] <TimToady> m: say (1,2,3,4,5) ~~ 5

[04:38] <camelia> rakudo-moar b8567c: OUTPUT«True␤»

[04:38] <TimToady> m: say (1,2,3,4,5) ~~ 5..5

[04:38] <camelia> rakudo-moar b8567c: OUTPUT«False␤»

[04:39] <TimToady> that seems completely bogus to me

[04:43] <TimToady> m: say +(1,2,3,4,5) ~~ 5..5

[04:43] <camelia> rakudo-moar b8567c: OUTPUT«True␤»

[04:44] <TimToady> that's the semantics it oughta have

[04:45] <TimToady> not turn the right side into a list

[04:50] *** rurban joined
[04:53] *** kaare_ left
[04:55] *** rurban left
[05:08] *** hoverboard left
[05:10] *** slavik1 left
[05:22] *** kaare_ joined
[05:23] *** raiph left
[05:23] *** raiph joined
[05:27] *** cooper- is now known as cooper

[05:27] *** cooper left
[05:27] *** cooper joined
[05:30] *** SamuraiJack_ joined
[05:35] *** dayangkun left
[05:48] <dalek> specs: 6672de4 | TimToady++ | S03-operators.pod:

[05:48] <dalek> specs: range smartmatch coerces when real or stringy

[05:48] <dalek> specs: review: https://github.com/perl6/specs/commit/6672de406d

[05:49] <TimToady> see also S03:3500

[05:49] <synopsebot> Link: http://perlcabal.org/syn/S03.html#line_3500

[05:52] *** rurban joined
[05:59] *** rurban left
[06:05] *** thou left
[06:06] *** jlaire left
[06:06] *** jlaire joined
[06:11] *** daniel-s__ left
[06:11] *** daniel-s__ joined
[06:12] *** araujo left
[06:17] *** FROGGS_ left
[06:21] *** Alina-malina left
[06:25] *** dayangkun joined
[06:26] *** darutoko joined
[06:36] <sergot> morning o/

[06:42] *** FROGGS joined
[06:45] *** zakharyas joined
[06:49] *** kaleem joined
[06:52] <jnthn> morning o/

[06:52] <FROGGS> morning

[06:55] *** rurban joined
[06:57] *** igorsutton__ joined
[06:59] *** raiph left
[07:00] *** yakudza joined
[07:01] *** rurban left
[07:14] *** dmol joined
[07:16] *** Alina-malina joined
[07:19] *** darutoko- joined
[07:22] *** darutoko left
[07:23] *** Woodi left
[07:29] *** daniel-s__ left
[07:29] *** daniel-s__ joined
[07:34] *** berekuk joined
[07:35] *** daniel-s__ left
[07:35] *** daniel-s__ joined
[07:44] *** hummeleB1 joined
[07:58] *** rurban joined
[08:02] *** rurban left
[08:06] *** SevenWolf left
[08:12] *** _daniel-s__ joined
[08:12] *** daniel-s__ left
[08:13] *** scumdog joined
[08:17] *** _daniel-s__ left
[08:18] *** _daniel-s__ joined
[08:24] <FROGGS> m: say $*OS

[08:24] <camelia> rakudo-moar b8567c: OUTPUT«linux␤Saw 1 call to deprecated code during execution.␤================================================================================␤$*OS called at:␤  /tmp/QDDWMAQIHr, line 1␤Please use $*DISTRO.OS instead.␤-----------------------------------…»

[08:24] <FROGGS> m: say $*DISTRO.OS

[08:24] <camelia> rakudo-moar b8567c: OUTPUT«===SORRY!===␤Dynamic variable $*DISTRO not found␤»

[08:24] <FROGGS> .tell lizmat does it make sense to point somebody from $*OS to $*DISTRO.OS when we do not yet have $*DISTRO?

[08:24] <yoleaux> FROGGS: I'll pass your message to lizmat.

[08:25] <lizmat> good *, #perl 6

[08:25] <yoleaux> 08:24Z <FROGGS> lizmat: does it make sense to point somebody from $*OS to $*DISTRO.OS when we do not yet have $*DISTRO?

[08:25] <FROGGS> morning lizmat :o)

[08:25] <lizmat> wel, maybe not  :-)

[08:25] <lizmat> it was more a proof of concept of deprecation of a *variable* rather than a sub or method

[08:26] <FROGGS> we should at least wire $*DISTRO.OS up soonish

[08:26] <lizmat> yes, that was my plan for today

[08:27] <FROGGS> lizmat++

[08:27] <FROGGS> my plan for today is a very nice one

[08:27] <FROGGS> can't wait for $dayjob being done

[08:27] *** scumdog left
[08:28] *** berekuk left
[08:32] <lizmat> FROGGS++   # as a measure of support

[08:43] *** dakkar joined
[08:59] *** rurban joined
[09:02] *** igorsutton__ left
[09:03] *** igorsutton__ joined
[09:05] *** rurban left
[09:06] *** Woodi joined
[09:18] *** pecastro joined
[09:19] *** yakudza left
[09:19] *** yakudzo left
[09:23] *** SamuraiJack__ joined
[09:27] *** SamuraiJack_ left
[09:28] *** thou joined
[09:29] <timotimo> http://p6weekly.wordpress.com/?p=160&shareadraft=5370947573439 - feel free to point out anything i have missed

[09:30] <timotimo> FROGGS: since last week, how much did loop-labels move forward?

[09:31] <nwc10> timotimo: Linux or linux? :-)

[09:31] <timotimo> i think i'll just remove mention of linux from there

[09:31] <timotimo> because ... what other operating system runs on those architectures anyway? :P

[09:32] <nwc10> timotimo: you could say "tested on Linux"

[09:32] <timotimo> that being said, i wonder if we can run on haiku and beos

[09:32] <nwc10> I think that that would be helpful and accudate

[09:32] <nwc10> accurate

[09:32] <nwc10> like I can type

[09:32] <timotimo> i mention it once at the end now

[09:32] <timotimo> instead of three times

[09:32] *** thou left
[09:32] <nwc10> better than my suggestion

[09:33] <lizmat> timotimo: maybe mention dwarring adding more tests from advent posts ?

[09:33] <timotimo> ah, of course!

[09:36] <lizmat> I also fixed filtering of array/hash slices

[09:36] <lizmat> non-existing keys would return an empty list, instead of nothing

[09:36] <timotimo> ah, right

[09:36] <FROGGS> timotimo: AFAICS perl6-p passes its tests, perl6-m and perl6-j need a little adjusted (right now I store the Label's mem address, which is bogus when the Label moves in GC)

[09:37] <timotimo> ah

[09:37] <timotimo> yes, that's not a good idea there :)

[09:37] <FROGGS> so I need to keep the label object itself, but that should be pretty easy

[09:37] <timotimo> aye

[09:37] <timotimo> after that everything should work fine? :D

[09:38] <FROGGS> MONDAY: I expect that we have labels merged until next MONDAY

[09:38] <FROGGS> yes, I need to put in more tests though :o)

[09:39] <FROGGS> cpan will also get a lot of attention this week, I hope that I have the PR about the indexer ready until PLPW

[09:39] <FROGGS> so, weekend

[09:39] <timotimo> ah, plpw is this weekend

[09:39] <timotimo> i should probably point that out

[09:39] <FROGGS> yeah

[09:40] <lizmat> timotimo: and the CZPW is two days *after* PLPW

[09:40] <lizmat> also the *first* CZPW

[09:41] <timotimo> oh, nice

[09:41] <timotimo> there'll be perl6 stuff on czpw, too?

[09:41] <lizmat> jnthn, lichtkind and lizmat will be giving presentations, afaik

[09:42] <timotimo> ah, nice

[09:42] <timotimo> who's going to present at the plpw except tadzik?

[09:42] <FROGGS> timotimo: http://act.yapc.eu/plpw2014/schedule

[09:42] <FROGGS> timotimo++ # great blög

[09:42] <lizmat> and masak

[09:44] <lizmat> at PLPW: FROGGS, masak, jnthn, lizmat, woolfy

[09:45] *** MAANX81 joined
[09:46] <timotimo> found the right links to look at

[09:47] *** _daniel-s__ left
[09:47] <timotimo> http://p6weekly.wordpress.com/?p=160&shareadraft=537098b18ceae - new draft

[09:48] *** _daniel-s__ joined
[09:49] *** yakudza joined
[09:49] <nwc10> timotimo: s/monday/Monday/

[09:50] <lizmat> did we add http://brrt-to-the-future.blogspot.de already to sixplanet ?

[09:55] *** virtualsue joined
[10:01] *** Gruber is now known as Grrrr

[10:03] *** rurban joined
[10:06] <sergot> timotimo: tadzik will give a talk during plpw too :)

[10:06] <tadzik> yep, but the question was "except tadzik" :P

[10:08] <sergot> oh, right, why so? :)

[10:09] *** rurban left
[10:09] <tadzik> I assume timo knew about me already :P

[10:09] <tadzik> but I don't seem to be included in the blogpost

[10:09] <sergot> that's why I wrote about you :P

[10:10] <tadzik> :)

[10:16] *** zakharyas left
[10:28] <sergot> lizmat: regarding to our Friday hackathon, can we invite some "new" people?

[10:29] <lizmat> depends on what they expect

[10:29] <lizmat> if they expect to be helped with installing Perl 6

[10:30] <lizmat> not so much, if they already have Perl 6 installed, and have tried to write code already

[10:30] <lizmat> I think more so  :-)

[10:30] *** dayangkun left
[10:30] <sergot> ok, great :)

[10:31] <lizmat> the Perl 6 hackathon in Kiev sort of went awry in the sense that there were too many newbies

[10:31] <lizmat> maybe we need a separate "upgrade to Perl 6" event in the future

[10:32] <lizmat> raiph++ moritz++ for not giving up on perlmonk

[10:32] <lizmat> s

[10:33] <apejens> trying to install rakudo-star via homebrew failed: https://gist.github.com/omega/a2362e8e9156d3c17dad

[10:35] <nwc10> lizmat: agree with your assessment of Kiev's hackathon

[10:38] <sergot> lizmat: ok, so we have place, we have people, we have everything, looking forward. :)

[10:38] * lizmat as well

[10:38] <FROGGS> apejens: do you have an nqp-j in PATH by any chance?

[10:39] <apejens> FROGGS: nope

[10:42] *** ssutch left
[10:43] *** ssutch joined
[10:44] *** benabik left
[10:45] <FROGGS> apejens: is there a way to tell it to build rakudo-star-2014.04 by any chance?

[10:46] <apejens> FROGGS: well, I can edit the brew I guess and try :P I moved on to my next brew install, but will try once that is done :p

[10:47] <FROGGS> k

[10:48] <FROGGS> I never tried brew but I know that the chance to build for jvm backend is better for 2014.04

[10:48] <FROGGS> apejens: ahh, what is your java version btw?

[10:49] <apejens> 1.7.0_25 it says

[10:49] <apejens> I guess I can skip the jvm backend as well :P

[10:54] <apejens> trying 2014.04 now

[10:58] <apejens> FROGGS: different error at least :P make: *** [gen/jvm/stage1/QAST.jar] Error 1

[10:59] <apejens> forgot to run with verbose

[10:59] <FROGGS> hmmm :/

[10:59] <FROGGS> build for the MoarVM backend, if you don't deal with large texts or with async servers...

[11:00] <apejens> I don't really deal with anything, was gonna try the games from https://github.com/tadzik/steroids

[11:01] <tadzik> ha. Then you have to go moarvm :)

[11:01] <FROGGS> apejens: then you probably want MoarVM, as it is the fastest for this

[11:01] <tadzik> parrot may be fast enough, if you have a CPU from 2020 or so

[11:01] <tadzik> and jvm has a dealbreaking nativecall bug

[11:01] <apejens> ok :P

[11:02] <apejens> it runs out of heap space btw, thats what breaks building jvm

[11:02] <tadzik> ouch

[11:02] <tadzik> argh, chromium on aura is so horrible

[11:09] *** ssdfsdf joined
[11:12] *** ssdfsdf left
[11:12] <apejens> seg fault this time

[11:13] <apejens> ahh well, office aircon is off, time to head home

[11:17] <tadzik> oh, segfault?

[11:25] *** dmol left
[11:32] *** prevost joined
[11:34] <timotimo> added tadzik and can now publish, i think

[11:36] *** Colby` joined
[11:37] *** skids left
[11:38] *** Pleiades` left
[11:38] *** Colby` is now known as Pleiades`

[11:50] *** kurahaupo joined
[11:55] * lizmat just did a spectest with parrot: Files=816, Tests=30831, 430 wallclock secs ( 9.53 usr  4.10 sys + 2955.84 cusr 245.47 csys = 3214.94 CPU)

[11:55] *** Pleiades` left
[11:55] <lizmat> twice as long as Moar, twice as much CPU and 1800 tests less

[11:56] *** igorsutton__ left
[11:57] <dalek> rakudo/nom: f26787c | (Elizabeth Mattijsen)++ | src/core/Deprecations.pm:

[11:57] <dalek> rakudo/nom: Make it possible to obsolete variables elsewhere

[11:57] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f26787ce50

[11:57] <dalek> rakudo/nom: c1bd713 | (Elizabeth Mattijsen)++ | README.md:

[11:57] <dalek> rakudo/nom: Show building with Moar as first option

[11:57] <dalek> rakudo/nom: 

[11:57] <dalek> rakudo/nom: Since we now have a Rakudo* that supports Moar, I think it is time.

[11:57] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c1bd713335

[11:58] *** arnsholt_ is now known as arnsholt

[11:58] *** bbkr joined
[11:58] *** igorsutton joined
[12:02] *** Pleiades` joined
[12:02] *** btyler joined
[12:05] <dalek> rakudo/nom: 4555386 | (Elizabeth Mattijsen)++ | / (4 files):

[12:05] <dalek> rakudo/nom: Initial implementation of $*DISTRO

[12:05] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4555386e9e

[12:06] *** zakharyas joined
[12:16] <dalek> rakudo/nom: 967f9c8 | (Elizabeth Mattijsen)++ | src/core/signals.pm:

[12:16] <dalek> rakudo/nom: Simplify signal() with $*DISTRO.signals

[12:16] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/967f9c8715

[12:23] *** daniel-s joined
[12:23] *** _daniel-s__ left
[12:26] *** virtualsue left
[12:29] *** virtualsue joined
[12:30] *** ssutch left
[12:31] <retupmoca> tadzik: I made Task::Star work: https://github.com/tadzik/Task-Star/pull/2

[12:31] *** ssutch joined
[12:32] <lizmat> vendethiel: re http://irclog.perlgeek.de/perl6/2014-05-10#i_8704094 , is that the invocation to send a signal to a process?  Or is that the invocation to get the list of available signals ?

[12:33] *** kaleem left
[12:33] *** mls_ is now known as mls

[12:34] <tadzik> retupmoca: awesome, thanks!

[12:35] <dalek> rakudo/nom: c4f8f02 | (Elizabeth Mattijsen)++ | src/core/distro.pm:

[12:35] <dalek> rakudo/nom: $*DISTRO.OS->.name (as per spec), introduce is-win

[12:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c4f8f02bce

[12:50] <dalek> rakudo/nom: 081ad6d | (Elizabeth Mattijsen)++ | src/core/distro.pm:

[12:50] <dalek> rakudo/nom: Make $*DISTRO.is-win a bit better

[12:50] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/081ad6d5da

[12:51] *** rindolf joined
[12:54] *** anaeem1_ left
[12:54] *** anaeem1_ joined
[12:54] *** anaeem1_ left
[12:55] <lizmat> r: $*OSVER # wtf?  no spec, same as $*OS ?

[12:55] <camelia> rakudo-jvm 455538: OUTPUT«(timeout)»

[12:55] <camelia> ..rakudo-{parrot,moar} 455538: ( no output )

[12:55] <lizmat> r: say $*OSVER # wtf?  no spec, same as $*OS ?

[12:55] <camelia> rakudo-jvm 455538: OUTPUT«3.8.0-19-generic␤»

[12:55] <camelia> ..rakudo-{parrot,moar} 455538: OUTPUT«linux␤»

[12:56] <lizmat> r: say $*OS, $*OSVER # wtf?  no spec, same as $*OS ?

[12:56] <camelia> rakudo-jvm 455538: OUTPUT«Linux3.8.0-19-generic␤Saw 1 call to deprecated code during execution.␤================================================================================␤$*OS called at:␤  /tmp/tmpfile, line 1␤Please use $*DISTRO.OS instead.␤-----------------------…»

[12:56] <camelia> ..rakudo-{parrot,moar} 455538: OUTPUT«linuxlinux␤Saw 1 call to deprecated code during execution.␤================================================================================␤$*OS called at:␤  /tmp/tmpfile, line 1␤Please use $*DISTRO.OS instead.␤------------------------…»

[12:56] *** dayangkun joined
[12:57] *** dayangkun left
[12:57] *** dayangkun joined
[13:02] <dalek> rakudo/nom: f4b62f3 | (Elizabeth Mattijsen)++ | src/core/distro.pm:

[13:02] <dalek> rakudo/nom: Deprecate $*OSVER, introduce $*DISTRO.version

[13:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f4b62f367d

[13:04] *** thou joined
[13:05] *** kaare_ left
[13:09] *** thou left
[13:09] *** geekosaur left
[13:10] *** geekosaur joined
[13:10] * [Coke] gives up trying to get steroids to work on the mac and gets back to work.

[13:10] *** guru joined
[13:10] *** guru is now known as Guest53168

[13:11] <lizmat> :w

[13:12] <lizmat> [Coke]: does this ring a bell: my $osnames = lc any <darwin linux freebsd MSWin32 mingw msys...

[13:12] *** Guest53168 left
[13:12] <lizmat> it's from t/spec/S02-magicals/config.t

[13:13] <lizmat> I was wondering whether that list actually belongs in $*VM

[13:14] *** SamuraiJack joined
[13:14] *** ajr joined
[13:14] <btyler> [Coke]: yeah, the key bit for 'make install' still points to a path on tadzik's box...however! I got it going pretty quickly with minimal pain: (assuming SDL2/ttf/image installed): Configure.pl --> make -f Makefile.sdlwrapper --> make install --> ignore the error it outputs (about not being able to install steroids to your p6 lib, because it points to tadzik's box) and ./SpaceInvaders

[13:15] *** ajr is now known as Guest84148

[13:15] *** Guest84148 is now known as ajr_

[13:17] *** SamuraiJack__ left
[13:18] *** Khisanth left
[13:21] <tadzik> wow, I didn't even know there's a 'make install' there :

[13:21] <tadzik> :D

[13:21] <tadzik> the README didn't mention it, why did you folks run it :P

[13:23] *** SamuraiJack left
[13:23] <[Coke]> btyler: make -f Makefile.sdlwrapper dies.

[13:23] <[Coke]> need to point it at my SDL libs.

[13:24] <[Coke]> (need to make Configure.pl smart enough to use sdl-config, I think)

[13:27] <[Coke]> oh. there's already a call to sdl2-config?

[13:27] <tadzik> yes

[13:28] <tadzik> I will gladly accept any patches to Configure.pl that can make OSX work as intended

[13:28] <[Coke]> sdlwrapper.c:3:10: fatal error: 'SDL_ttf.h' file not found

[13:28] <arnsholt> tadzik: You're on the HN front page! =D

[13:28] <[Coke]> I assumed it wasn't found because it wasn't probing, but it is.

[13:28] <tadzik> arnsholt: holy batman :D

[13:28] <arnsholt> http://ttjjss.wordpress.com/2014/05/11/new-game-space-invaders/

[13:29] <tadzik> its popularity is stunning

[13:29] <tadzik> headline of perl weekly, tweeted by brian d foy, now HN

[13:29] <tadzik> blog is hitting its all-time record in views per day

[13:31] *** Khisanth joined
[13:31] <[Coke]> tadzik: do I need something other than libsdl2 @2.0.3_0 and libsdl2_image @2.0.0_1 ?

[13:32] *** treehug88 joined
[13:32] *** molaf joined
[13:33] <tadzik> [Coke]: sdl2_ttf

[13:33] *** schogen joined
[13:34] <[Coke]> oh, you mean like it says in the readme? :)

[13:35] <tadzik> yeah, that :P

[13:36] <[Coke]> ok, installing that broke kcachegrind, but I think fixed this issue. :)

[13:37] <[Coke]> Can not bind non-existent attribute '$!h'

[13:37] <[Coke]> which then  EXC_BAD_ACCESS (SIGSEGV)'d moar.

[13:37] <[Coke]> ^^

[13:37] <tadzik> :(

[13:37] <tadzik> is that a recent rakudo/moar?

[13:38] <[Coke]> This is perl6 version 2014.03.01-128-gaeda9d0 built on MoarVM version 2014.03-201-gf7ddc7e

[13:38] <[Coke]> so, not moldy, but not fresh

[13:38] <[Coke]> I'll try again with a fresh one later. :)

[13:38] <[Coke]> tadzik++

[13:39] *** rurban joined
[13:40] <tadzik> it probably shouldn't be happening anyway

[13:51] <dalek> roast: 3076c69 | (Elizabeth Mattijsen)++ | S02-types/deprecations.t:

[13:51] <dalek> roast: Add test for $*OSVER deprecation

[13:51] <dalek> roast: review: https://github.com/perl6/roast/commit/3076c69de2

[13:51] <dalek> roast: b6f69e6 | (Elizabeth Mattijsen)++ | / (13 files):

[13:51] <dalek> roast: s/$*OS/$*DISTRO.name where tested by Rakudo

[13:51] <dalek> roast: review: https://github.com/perl6/roast/commit/b6f69e682e

[13:51] *** smash joined
[14:02] *** bluescreen10 joined
[14:03] *** ajr_ left
[14:03] *** guru joined
[14:03] *** anaeem1 joined
[14:03] *** guru is now known as Guest64614

[14:04] *** Guest64614 is now known as ajr_

[14:07] *** xenoterracide joined
[14:07] *** thou joined
[14:12] *** plobsing left
[14:13] *** virtualsue left
[14:13] <dalek> rakudo/nom: 8f76741 | (Elizabeth Mattijsen)++ | src/core/distro.pm:

[14:13] <dalek> rakudo/nom: Add Distr.(Str|gist)

[14:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8f767413b3

[14:14] *** kaare_ joined
[14:15] *** ajr_ left
[14:19] *** jnap joined
[14:19] *** araujo joined
[14:21] *** ajr joined
[14:21] *** ajr is now known as Guest27312

[14:24] <tadzik> hehe. 2000 visitors on the blog and counting. I think the internet is amused that you can use Perl 6 for practical stuff. A good thing :)

[14:24] <lizmat> tadzik++

[14:26] <JimmyZ> https://github.com/gaorongchao/Perl6/tree/master/Using_perl6 # Chinese version :P

[14:26] <tadzik> wow, nice :)

[14:28] <btyler> anyone having panda bootstrap/rebootstrap fail? I've been rebootstrapping as part of my little rakudo-brew-alike script that runs every morning, but it failed testing panda, saying that it couldn't find it (and install/languages/perl6/site/bin wasn't in the search path?)

[14:28] <JimmyZ> moritz: http://bbs.chinaunix.net/thread-4137901-1-1.html Perl 5 to 6 Chinese Version :P

[14:28] <btyler> potentially related, I ufo'd panda, and 'make install' dies with a segfault (latest moar/nqp/rakudo as of 30 minutes ago) on compiling lib/Panda/Builder.pm

[14:28] <tadzik> :o

[14:29] <JimmyZ> Using Perl 6 online one: http://bbs.chinaunix.net/thread-4132588-1-1.html

[14:29] <tadzik> I'll goan update my rakudo, let's see if I can reproduce this

[14:29] <JimmyZ> # Chinese verion, I mean

[14:29] <lizmat> btyler: fwiw, I'm seeing segfaults in spectest on OS X since yesterday

[14:29] <btyler> just let me know what info would be helpful

[14:29] <btyler> ok

[14:29] <btyler> also on OSX here

[14:30] <lizmat> I'm waiting for the next merge of jnthn / timotimo 's work on Moar before really complaining  :-)

[14:30] <tadzik> me too :)

[14:30] <lizmat> it's not release time just yet :-)

[14:30] <tadzik> With Steroids I'm struggling to make rakudo look slow; they're trying to speed it up, and they keep winning the race

[14:31] <timotimo> oh no!

[14:31] <timotimo> what did we do wrong again?

[14:31] <lizmat> wish I could tell you

[14:32] <lizmat> but latest Makudo isn't as stable

[14:32] <tadzik> things don't explode for me so far, however I'm on moar from MOAR_REVISIONS

[14:32] <lizmat> seeing segfaults at compile time

[14:32] <lizmat> that used to be legit compile time errors

[14:34] <lizmat> but I got the impression several things are in the pipeline from Moar again, so I'm not pursuing finding out how and what at the moment

[14:35] <tadzik> I suppose spesh may be a bit over-eager optimizing things

[14:35] <dalek> rakudo-star-daily: 3ff0410 | coke++ | log/ (5 files):

[14:35] <dalek> rakudo-star-daily: today (automated commit)

[14:35] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/3ff04101b0

[14:35] <dalek> perl6-roast-data: 95c25ee | coke++ | / (6 files):

[14:35] <dalek> perl6-roast-data: today (automated commit)

[14:35] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/95c25ee170

[14:36] <tadzik> spaceinvaders segfaulted for me, until I recompiled all the .moarvm files

[14:36] <tadzik> then it works fine

[14:36] *** daniel-s left
[14:36] <[Coke]> (still hundreds of failures in rakudo.parrot and rakudo.jvm)

[14:37] <[Coke]> (as of yesterday)

[14:37] <[Coke]> :(

[14:37] <woolfy1> tadzik ++ for http://ttjjss.wordpress.com/2014/05/11/new-game-space-invaders/    !!wow!!

[14:38] <tadzik> :)

[14:38] <tadzik> I think I should've maybe added some highscores, instructions and all, make it a proper game instead of an engine showcase

[14:38] <tadzik> but it seems exciting enough :)

[14:39] <woolfy1> tadzik: I am quite sure that you will do that sometime in the near future...

[14:39] * lizmat suddenly represses the urge to re-implement "slot"

[14:39] <tadzik> woolfy1: surely :)

[14:39] *** daniel-s joined
[14:40] <woolfy1> :-)

[14:40] <tadzik> I'll need at least one proper, full-blown game for PLPW, I might just add more stuff to Space Invaders, looking at how famous they became today :)

[14:40] <woolfy1> (games are way too addictive to me, please don't make it too much fun to play)

[14:40] <tadzik> I'll try :P

[14:41] <tadzik> I'm wasting so much time on gaems myself that it's amazing to me how I get anything done

[14:41] <tadzik> but, time you enjoy wasting is said to be not wasted

[14:42] <jnthn> Is the MOAR_REVISION Rakudo more stable than the one with HEAD?

[14:42] <tadzik> I'm on MOAR_REVISION, and I didn't notice any instability yet

[14:42] <jnthn> ok

[14:42] <jnthn> that corresponds to the initial spesh_trace merge; some other things landed after it.

[14:43] <Ulti> when panda installs where are tests run from, the t/ directory?

[14:43] <lizmat> tadzik: but you're not on OS X, right?

[14:43] <jnthn> Would be helpful if those seeing issues could let me know if you're on HEAD or MOAR_REVISION.

[14:43] * lizmat on MOAR_REVISION

[14:43] <jnthn> lizmat: Do you have the Panda issues?

[14:43] <tadzik> lizmat: nope

[14:43] <tadzik> Ulti: yes

[14:44] * tadzik installs Task::Star to torment rakudo a little

[14:45] <JimmyZ>         E:\OpenSource\MoarVM\install\bin\moar --libpath=src\vm\moar\stage0 src\v

[14:45] <JimmyZ> m\moar\stage0\nqp.moarvm --bootstrap --setting=NULL --no-regex-lib --target=mbc

[14:45] <JimmyZ>  --output=gen\moar\stage1\nqpmo.moarvm gen\moar\stage1\nqpmo.nqp

[14:45] <JimmyZ> NMAKE : fatal error U1077: “E:\OpenSource\MoarVM\install\bin\moar.EXE”: 返回代

[14:45] <btyler> I'm on HEAD

[14:45] <JimmyZ> 码“0xc0000005”

[14:45] <JimmyZ> return code 

[14:45] <jnthn> Well, that certainly didn't happen for me.

[14:46] <JimmyZ> maybe another x86 problem? :P

[14:46] <jnthn> Maybe.

[14:46] <jnthn> But recent if so.

[14:46] *** daniel-s left
[14:47] *** daniel-s joined
[14:47] <jnthn> Anyway, for those seeing segfaults, doing debug builds and supplying gdb backtraces might help me find it.

[14:47] <timotimo> .o( you can ufo panda?! )

[14:47] <jnthn> Patches to fix it even more welcome :P

[14:48] <JimmyZ> It will be an easy fix if it's not about spech or gc :P

[14:48] <JimmyZ> spesh

[14:48] <jnthn> spesh isn't always hard to fix.

[14:48] <jnthn> The last SEGV somebody found in a spesh/gc interation, I had fixed in < an hour of looking.

[14:48] <jnthn> *interaction

[14:49] <btyler> jnthn: ok, I'll try to get a backtrace later today. patch unlikely unless it turns out to be a one character kind of thing :)

[14:49] <btyler> (the C chops, they are lacking...)

[14:49] <jnthn> btyler: Thanks

[14:50] <JimmyZ> hmm, I forgot how to add debug info to moar.dll

[14:50] <jnthn>  /pdb:$@.pdb

[14:55] *** adu joined
[14:59] <dalek> Perlito: 55c3f9f | (Flavio S. Glock)++ | t5/01-perlito/500-regex-escape.t:

[14:59] <dalek> Perlito: Perlito5 - add regex test

[14:59] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/55c3f9f102

[15:08] *** xenoterracide left
[15:08] *** xenoterracide joined
[15:10] *** molaf left
[15:13] *** molaf joined
[15:15] <dalek> rakudo/nom: 65f75fb | (Elizabeth Mattijsen)++ | / (4 files):

[15:15] <dalek> rakudo/nom: Implement $*VM as an object with methods, per spec

[15:15] <dalek> rakudo/nom: 

[15:15] <dalek> rakudo/nom: Mark $*VM<name|config> as DEPRECATED

[15:15] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/65f75fb765

[15:20] <hoelzro> tadzik++ # space invaders/post

[15:21] *** bjz left
[15:22] *** igorsutton left
[15:22] *** igorsutton joined
[15:26] <lizmat> fwiw, I'm not seeing any segfaults in the spectest with MVM_SPESH_DISABLE=1

[15:27] <lizmat> with spesh: Files=870, Tests=32653, 217 wallclock secs ( 8.17 usr  4.15 sys + 1351.02 cusr 158.28 csys = 1521.62 CPU)

[15:27] *** igorsutton left
[15:27] <lizmat> spesh disabled: Files=870, Tests=32670, 209 wallclock secs ( 8.27 usr  3.98 sys + 1292.98 cusr 143.84 csys = 1449.07 CPU)

[15:34] *** hoverboard joined
[15:35] *** spider-mario joined
[15:35] *** rurban_ joined
[15:36] *** dmol joined
[15:51] *** eternaleye joined
[15:52] *** FROGGS left
[16:00] *** telex left
[16:02] <lizmat> cycling&

[16:02] *** kaleem joined
[16:07] *** schogen left
[16:10] *** zakharyas left
[16:16] *** daniel-s left
[16:16] *** daniel-s joined
[16:18] <timotimo> rakudo-moar seems about 3x faster at spesh_diff than rakudo-parrot, even though it does a fair amount of string joining

[16:20] *** dwarring left
[16:20] *** telex joined
[16:21] <timotimo> p6: 1.765.fmt("% 3.2f").say

[16:21] <camelia> rakudo-jvm 8f7674: OUTPUT«(timeout)»

[16:21] <camelia> ..rakudo-{parrot,moar} 8f7674: OUTPUT«1.77␤»

[16:21] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«Unhandled exception: invalid format specifier␤  at /home/p6eval/niecza/lib/CORE.setting line 1403 (sprintf @ 4) ␤  at /home/p6eval/niecza/lib/CORE.setting line 750 (Cool.fmt @ 4) ␤  at /tmp/tmpfile line 1 (mainline @ 3) ␤  at /home/p6eval/niec…»

[16:21] <timotimo> isn't that supposed to put spaces before the 1?

[16:22] <timotimo> p6: 1.765.fmt("%03.2f").say

[16:22] <camelia> rakudo-{parrot,jvm,moar} 8f7674, niecza v24-109-g48a8de3: OUTPUT«1.77␤»

[16:22] <timotimo> and that's supposed to pad to the left with zeroes?

[16:22] <PerlJam> p6: 1.765.fmt("%05.2f").say

[16:23] <camelia> rakudo-{parrot,jvm,moar} 8f7674, niecza v24-109-g48a8de3: OUTPUT«01.77␤»

[16:23] <PerlJam> your field width wasn't wide enough to be padded with 0

[16:23] <timotimo> oh! that's for the whole thing, then?

[16:24] <PerlJam> yes

[16:24] <timotimo> that explains it, PerlJam++

[16:24] *** pecastro left
[16:25] *** adu left
[16:26] *** Psyche^ joined
[16:28] *** kaleem left
[16:30] *** Psyche^_ left
[16:32] *** FROGGS joined
[16:37] *** denis_boyun joined
[16:37] <TimToady> it is not clear to me that putting "distro" in front of "os" makes "os" any less ambiguous

[16:38] *** prevost left
[16:42] * TimToady is very tempted to ban "OS" like we banned "length"

[16:44] <TimToady> if linux is the kernel, and ubuntu is the distro, what is the OS?

[16:45] <TimToady> if it's some intermediate idea, we must define it

[16:45] <TimToady> or drop it

[16:45] <masak> +1

[16:45] <masak> (hi, #perl6)

[16:46] <PerlJam> TimToady: +1

[16:46] <TimToady> it does not help that "linux" is terribly overloaded to mean "any distro built on top of a linux kernel"

[16:47] *** daniel-s_ joined
[16:47] *** daniel-s left
[16:47] <Ulti> GNU/Linux 

[16:47] <dakkar> do you also need ABI, libc or whatever, and so on? "x86_64-pc-linux-gnu" and the like?

[16:48] <TimToady> GNU/Linux is neither a distro nor a kernel

[16:48] <geekosaur> ...and then there's the question of where debian kfreebsd fits

[16:48] * dakkar lacks a bit of context, speaks anyway

[16:48] <Ulti> TimToady: no its a family of operating systems

[16:48] <Ulti> like Microsoft Windows is

[16:48] <TimToady> well, there's also $*ARCH, but in a sense the kernel is also a virtual machine

[16:49] *** kurahaupo left
[16:49] <Ulti> a giant hash of POSIX compatibility would be more useful :P

[16:49] <TimToady> Ulti: it's a very loose family, insofar as it merely means "some subset of the tools come from GNU"

[16:49] <Ulti> yeah

[16:50] <Ulti> GNU only say GNU/Linux because GNU/Hurd is trying to be a thing

[16:50] <PerlJam> Ulti: %*ALL-THE-STUFF-YOU-NORMALLY-WOULD-PROBE-FOR

[16:52] <Ulti> I think architecture should list the instruction set too :P just in case, and have a built in ontology so that we all know what instructions we are talking about cross CPU

[16:52] <Ulti> (maybe joking)

[16:52] <TimToady> well, that's more like $*ARCH

[16:53] <TimToady> but yeah, one of the things I noticed way back when I first wrote a Configure script for rn was that we needed to test each feature, not rely on names of systems

[16:53] <Ulti> usually when people are checking this sort of thing its a more specific feature they care about rather than the actual operating system, like a lot of people assume GNU tools if the kernel is Linux which is not a given at all

[16:54] <TimToady> right, you can have a linux that is clang and bsd tools

[16:55] *** dakkar left
[16:56] <Ulti> and OSX which changes its mind every release on what versions of things are used and where they are kept

[16:56] <TimToady> but naming all the features is just as much of a fuzzball as trying to straighten out all the contextual names

[16:57] *** liztormato joined
[16:57] <TimToady> of the two, the feature-based approach is less fragile, but requires more upfront maintenance

[16:58] <TimToady> naming systems foists the work off on the people who later discover that $*SYSNAME is too blunt an ax

[16:58] <Ulti> also what happens in Cygwin

[16:58] <Ulti> is that an OS?

[16:59] <TimToady> but portability to not-yet-existent systems is enhanced by a feature-based approach

[16:59] <liztormato> TimToady: Fwiw. I already committed $*DISTRO.name in favor of .OS

[17:00] <TimToady> that would be a negative favor, but okay

[17:01] <TimToady> (just saying a native English speaker would use "in favor of" the other way around)

[17:01] *** treehug8_ joined
[17:01] <liztormato> Hehe. Ok

[17:01] <TimToady> but your English is still much better than my Dutch :)

[17:02] <liztormato> I have patches ready for $*kERNEL.name and .arch

[17:02] <TimToady> why .arch if $*ARCH is speccced?

[17:03] <liztormato> Ah. Good question. No particular reason. Will follow spec :-)

[17:03] <TimToady> (which is, of course, open for negotiation, as long as we're revising the whole taxonomy of contexts)

[17:03] *** treehug88 left
[17:04] *** Rotwang joined
[17:04] <liztormato> I guess my main reason was that it was easier to fetch the info on demand

[17:05] <TimToady> of course, cpu architectures are also so very simple to classify... :/

[17:05] <liztormato>   uname -p if i recall

[17:05] *** Guest27312 left
[17:06] <geekosaur> ahahah

[17:06] <geekosaur> uname values and flags are far from usefully standardized

[17:06] <geekosaur> posix says one thing, everyone itnerprets it their own way and the result is chaos

[17:06] <geekosaur> (moreover posix refuses to even touch some thigs that would be quite useful if standardized)

[17:06] <liztormato> My point was that I wanted to create a framework

[17:07] <liztormato> Food&

[17:09] <[Coke]> .u 1F595

[17:09] <yoleaux> No characters found

[17:09] <TimToady> posix is in the category of names that guarantee of certain minimum levels of api support, a feature bundle, as it were

[17:10] <nwc10> $ uname -p

[17:10] <nwc10> uname: illegal option -- p

[17:10] <nwc10> usage: uname [-amnrsvil] [-S nodename]

[17:10] <TimToady> the C programming interface is much richer than that, depending on what libaries are guaranteed by your distro name and your additional downloads

[17:10] <nwc10> (been round that maze just a couple of days ago)

[17:11] <liztormato> nwc10: On linux an darwin inly, atm

[17:12] <TimToady> someone should invent a URL-equivalent for feature dependencies

[17:12] <nwc10> $ uname -p

[17:12] <nwc10> unknown

[17:12] <nwc10> $ uname -s

[17:12] <nwc10> Linux

[17:12] <nwc10> :-)

[17:13] <nwc10> The "illegal option -- p" was from HP/UX

[17:13] <nwc10> And it says:

[17:13] <nwc10> $ uname -m

[17:13] <nwc10> 9000/800

[17:13] <nwc10> soooo helpful.

[17:15] <nwc10> The joyful bit of POSIX I discovered today was hcreate and friends: http://pubs.opengroup.org/onlinepubs/009695299/functions/hcreate.html

[17:15] <nwc10> not threadsafe

[17:16] <nwc10> nothing is sane. :-(

[17:18] *** timotimo left
[17:23] <geekosaur> yes, ancient chunks of system v libc that got standardized for no good reason

[17:23] *** molaf left
[17:24] <geekosaur> I am currently quite down on POSIX; turns out they took some stuff they standardized early on for the shell spec and dropped it, so scripts written "to POSIX spec" are no longer guaranteed to work on "POSIX compliant" systems

[17:24] *** liztormato_ joined
[17:25] <geekosaur> way to state openly that you're all about getting as many vendors signed on as possible, at the expense of being in any way useful, dear POSIX

[17:25] *** hummeleB1 left
[17:26] *** liztormato__ joined
[17:26] *** liztormato left
[17:27] *** hoverboard left
[17:27] *** liztormato joined
[17:29] *** liztormato_ left
[17:30] *** liztormato__ left
[17:42] <vendethiel> o/

[17:43] <vendethiel> lizmat: I'm not sure what taskkill sends, I think it just crashes the PID

[17:45] <FROGGS> when I need something about distro/os/whatever it is mostly about:

[17:45] <FROGGS> a) is it unixoid or windowsish?

[17:46] <FROGGS> b) what is the distribution and version? (like openbsd 5.5, to go insane with -pthread)

[17:46] <FROGGS> c) is it a 32 or 64 bit machine

[17:46] <FROGGS> maybe we need our very own model of all these things

[17:47] <FROGGS> so that we only have properties that are really are unique properties, and not things that almost mean something but are off to 10 to 20%

[17:47] <liztormato> That's what I'm going for

[17:48] *** jnap left
[17:48] <FROGGS> so I think $*DIST.name and .ver and perhaps .auth is the easiest one

[17:48] <FROGGS> the others are more questionable

[17:49] <liztormato> I saw a lot of adhoc knowledge in the spectest that I wanted to gather at a central place

[17:50] *** jnap joined
[17:54] <liztormato> More cycling&

[17:54] *** liztormato left
[17:57] *** rindolf left
[18:00] *** berekuk joined
[18:00] *** rindolf joined
[18:04] *** kPhone joined
[18:06] <kPhone> Seen au

[18:07] *** timo joined
[18:07] *** test joined
[18:07] <kPhone> seen camelia 

[18:07] *** timo is now known as Guest70323

[18:07] *** test is now known as Guest86162

[18:09] *** isBEKaml joined
[18:09] *** berekuk left
[18:10] *** berekuk joined
[18:12] *** Guest70323 is now known as timotimo

[18:14] *** treehug88 joined
[18:15] *** isBEKaml left
[18:16] *** treehug8_ left
[18:17] <FROGGS> .seen kPhone

[18:17] <yoleaux> I saw kPhone 18:07Z in #perl6: <kPhone> seen camelia

[18:18] *** Guest86162 left
[18:23] <retupmoca> panda on moarvm looks broken

[18:24] <FROGGS> :/

[18:24] <retupmoca> boostrap gives a lot of 'No subtests run'

[18:25] <retupmoca> MVM_SPESH_DISABLE bootstrap gives a few 'Attempt to read past end of string heap (index 9109510)' as well

[18:25] <retupmoca> jnthn, timotimo: ^

[18:25] *** spider-mario left
[18:25] <timotimo> oh shit.

[18:26] <retupmoca> This is perl6 version 2014.04-230-g65f75fb built on MoarVM version 2014.04-129-g024b994

[18:27] *** brrt joined
[18:28] <tadzik> is that the MOAR_REVISION revision?

[18:29] <retupmoca> HEAD

[18:30] <retupmoca> I build on master/master/nom normally

[18:37] <btyler> likewise, same issue as retupmoca (mentioned it this morning, haven't had time to get a debug moar/gdb going)

[18:46] <lizmat> TimToady: I can't find $*ARCH specced anywhere?

[18:47] <dalek> rakudo/nom: 7e5cf89 | (Elizabeth Mattijsen)++ | src/core/ (2 files):

[18:47] <dalek> rakudo/nom: .version -> .ver for *$VM, $*DISTRO

[18:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7e5cf897c0

[18:47] <dalek> rakudo/nom: 26ddce2 | (Elizabeth Mattijsen)++ | / (4 files):

[18:47] <dalek> rakudo/nom: NEW! $*KERNEL name,ver,release,hardware,arch

[18:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/26ddce2363

[18:47] *** dwarring joined
[18:48] <lizmat> please note that at this stage, $*KERNEL is an empty framework waiting for specific OS dependent info to be implemented

[18:48] *** jnap left
[18:49] *** jnap joined
[18:50] *** rurban1 joined
[18:52] *** REPLeffect joined
[18:52] *** rurban left
[18:53] <timotimo> i'm still looking for feedback for adding a trait "is subcommand" that tells the autogenerated main to put an argument that's decorated with it before all nameds in the usage message

[18:53] <timotimo> as in: multi MAIN("foobar" is subcommand, $arg, $arg2, :$foo, :$bar)

[18:53] <timotimo> or maybe multi MAIN(...) is subcommand("foobar") or something like that

[18:54] <PerlJam> timotimo: what sort of feedback?  (+1 from me btw)

[18:54] <timotimo> or only "is subcommand" to make the first positional be "the subcommand"

[18:54] <moritz> timotimo: IMHO that stretches the signature analogy a bit too far

[18:54] <timotimo> feedback as in: +1, -1, suggestions for what it really should be called and where it should be put

[18:54] <moritz> timotimo: in the case of command lines, there are typically arguments for the command and the subcommand

[18:54] <moritz> s/arguments/options/

[18:55] <timotimo> oh, hm.

[18:55] <moritz> timotimo: but in signatures, all named args share the same namesapce

[18:55] <moritz> git --git-dir=/tmp/foo log -p

[18:55] <timotimo> i'd just like to have a way to make the usage of p6bench less stupid

[18:56] <moritz> write a command line parsing module that supports subcommands?

[18:56] *** spider-mario joined
[18:56] <timotimo> mhh

[18:57] <timotimo> but that'd be *work*! :(

[18:57] <moritz> or if you need many args, write config files instead

[18:57] *** rurban1 left
[18:58] *** slavik joined
[18:59] *** rurban joined
[18:59] <timotimo> i was going to write a TUI frontend at some point to ease usage

[18:59] <timotimo> since you have to throw around revision numbers and stuff all the time

[19:02] *** rurban1 joined
[19:03] *** rurban left
[19:05] <hoelzro> .

[19:05] <hoelzro> oops

[19:10] *** igorsutton joined
[19:11] *** darutoko- left
[19:15] *** hoverboard joined
[19:16] <timotimo> .~

[19:18] <dalek> perl6-roast-data: c2362cc | coke++ | / (6 files):

[19:18] <dalek> perl6-roast-data: today (automated commit)

[19:18] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/c2362cc8d1

[19:18] *** telex left
[19:19] <[Coke]> java now has nearly -300- failures.

[19:19] <[Coke]> moar more than doubled up to 32.

[19:19] <[Coke]> parrot holding steady around 200

[19:21] <[Coke]> moar/java are failing in S17. parrot is still failing in S32-temporal

[19:21] *** telex joined
[19:26] <[Coke]> yay, found the root cause of most of the java failures...

[19:28] <dalek> rakudo/nom: dd8ff2f | (Elizabeth Mattijsen)++ | src/core/kernel.pm:

[19:28] <dalek> rakudo/nom: Introduce $*KERNEL.bits (either 32 or 64 for now)

[19:28] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/dd8ff2f2bb

[19:28] <dalek> rakudo/nom: e2c9ba5 | (Elizabeth Mattijsen)++ | src/core/ (2 files):

[19:28] <dalek> rakudo/nom: Add some intro commentaries

[19:28] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e2c9ba583f

[19:28] <dalek> rakudo/nom: e282938 | (Elizabeth Mattijsen)++ | src/core/kernel.pm:

[19:28] <dalek> rakudo/nom: $*KERNEL.bits probably better depends on .hardware

[19:28] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e2829387a2

[19:31] * lizmat hopes [Coke] is working on a patch

[19:31] *** molaf joined
[19:32] <FROGGS> [Coke]: do tell!

[19:32] *** kPhone left
[19:35] <dalek> specs: ec4ff99 | (Elizabeth Mattijsen)++ | S28-special-names.pod:

[19:35] <dalek> specs: We're not going to have a %*INC

[19:35] <dalek> specs: review: https://github.com/perl6/specs/commit/ec4ff99570

[19:36] *** hoverboard is now known as DCC

[19:36] * masak .oO( throw it down the inc-well )

[19:36] *** DCC is now known as hoverboard

[19:39] <moritz> is that a quantum inc well?

[19:39] <[Coke]> S17-supply/categorize.t and S17-supply/classify.t have an invalid fudge line of:

[19:40] <[Coke]> #?rakudo.jvm todo 3 "D: doesn't work in signatures"

[19:40] <[Coke]> ^^ not even needed, since java passes all those tests.

[19:40] <[Coke]> that brings java in line with moar.

[19:40] <[Coke]> if someone could fix those up, I'd appreciate it.

[19:41] <lizmat> [Coke]: will do

[19:42] <lizmat> TimToady: re S28:137, shouldn't that be a role rather than a class ?

[19:42] <synopsebot> Link: http://perlcabal.org/syn/S28.html#line_137

[19:44] <TimToady> probably

[19:44] <[Coke]> (the fudge line is invalid because it's supposed to be "3 todo" not "todo 3", btw.)

[19:44] <TimToady> though Application is kind of a lousy name for it

[19:45] <TimToady> it's more like an uniquely identified entity

[19:45] <TimToady> http://rosettacode.org/wiki/Order_disjoint_list_items#Perl_6

[19:46] <TimToady> this RC task made me sad that $bag{$key}-- blows up if the key isn't in the bag

[19:46] <TimToady> seems like it would be nicer if -- would just do nothing and return false if the key isn't in a set or bag

[19:46] <vendethiel> that seems surprising to me

[19:47] <vendethiel> m: my %h; say %h<a>

[19:47] <camelia> rakudo-moar 26ddce: OUTPUT«(Any)␤»

[19:47] <vendethiel> mmh

[19:47] <lizmat> vendethiel: bags are only hashes to some level

[19:48] <TimToady> in particular this line: (bag{$_} && bag{$_}-- ?? N.shift !! $_ for M)

[19:48] <lizmat> TimToady: S02:1697 needs changing then

[19:48] <synopsebot> Link: http://perlcabal.org/syn/S02.html#line_1697

[19:50] <TimToady> m: my $b = <a b c>.BagHash; say $b<d>-- // 0

[19:50] <camelia> rakudo-moar 26ddce: OUTPUT«===SORRY!===␤Could not find symbol '&Return'␤»

[19:50] <lizmat> yes, that's odd, looking at that now

[19:51] <TimToady> p6: my $b = <a b c>.BagHash; say $b<d>-- // 0

[19:51] <camelia> rakudo-parrot 26ddce: OUTPUT«Could not find symbol '&Return'␤  in method <anon> at gen/parrot/CORE.setting:12684␤  in any  at gen/parrot/Metamodel.nqp:2710␤  in any find_method_fallback at gen/parrot/Metamodel.nqp:2698␤  in any find_method at gen/parrot/Metamodel.nqp:949␤ …»

[19:51] <camelia> ..rakudo-moar 26ddce: OUTPUT«===SORRY!===␤Could not find symbol '&Return'␤»

[19:51] <camelia> ..rakudo-jvm 26ddce: OUTPUT«Could not find symbol '&Return'␤  in method <anon> at gen/jvm/CORE.setting:12661␤  in any  at gen/jvm/Metamodel.nqp:2627␤  in any find_method_fallback at gen/jvm/Metamodel.nqp:2626␤  in any find_method at gen/jvm/Metamodel.nqp:948␤  in any  at gen…»

[19:51] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«0␤»

[19:51] <TimToady> niecza++

[19:52] <TimToady> rakudobug--

[19:53] <lizmat> but but, niecza is *not* according to spec

[19:53] <lizmat> or is it?

[19:53] <TimToady> it returns a failure, which is undefined, I imagine

[19:54] <TimToady> failures do not throw exception when evaluated in defined or boolean context

[19:54] <lizmat> n: my $b = <a b c>.BagHash; say ($b<d>--).WHAT

[19:54] <TimToady> in fact, I ought to just be able to evaluate the result in the ??!!

[19:54] <camelia> niecza v24-109-g48a8de3: OUTPUT«(Int)␤»

[19:55] <TimToady> should perhaps be Nil, but whatevs

[19:55] *** anaeem1__ joined
[19:56] *** anaeem1 left
[19:57] <TimToady> anyway, that solution is already spectacularly short compared to the other languages (except J, of course), but it's shame it has to do the lookup twice currently

[19:57] <TimToady> well, and the error message in question is way LTA

[19:57] <lizmat> that's because there is an error in the error message

[20:00] *** rindolf left
[20:00] <dalek> specs: 058fc44 | TimToady++ | S02-bits.pod:

[20:00] <dalek> specs: s/Failure/undefined/ for decrement on sets/bags

[20:00] <dalek> specs: review: https://github.com/perl6/specs/commit/058fc44f8a

[20:00] <TimToady> failure is overkill for something that will be used frequently for set/bag membership

[20:00] <lizmat> TimToady: would Nil work also?

[20:01] <TimToady> Nil tends to screw up the type system a bit

[20:01] <lizmat> so just Int then?

[20:02] <TimToady> well, Bool on sets

[20:02] <lizmat> indeed

[20:02] *** rindolf joined
[20:02] <TimToady> m: my %a; say %a<nonesuch>

[20:02] <camelia> rakudo-moar 26ddce: OUTPUT«(Any)␤»

[20:02] <TimToady> that seems consistent

[20:03] *** bluescreen10 left
[20:03] <lizmat> hmmm on SetHash , -- would give False, I guess?

[20:03] <lizmat> not Bool?

[20:05] <TimToady> well, False is the default when subscripting, but I think Bool indicates the attempt to decrement from False, which is more undefined than False

[20:06] <TimToady> similarly, there's a difference between removing the last element from a bag and trying to remove one that isn't there

[20:07] *** molaf left
[20:07] <TimToady> so an undefined value is more appropriate than 0 (the default) would be, in the case of an active decrement

[20:07] <TimToady> a mere failed subscript would return 0 or False, of course

[20:08] <TimToady> with postfix -- it doesn't much matter, but maybe it matters more with prefix --

[20:08] <TimToady> where a 0 means you just removed the last one, and (Int) means there wasn't one to remove in the first place

[20:10] <lizmat> ok

[20:10] <TimToady> so you could reasonably write: my $remaining = --$bag{$key} // die "There isn't a $key in that bag!"

[20:10] *** kaare_ left
[20:11] <TimToady> oh goodness, lunch forgot to happen

[20:11] *** berekuk left
[20:11] *** berekuk joined
[20:12] <masak> m: my $b = False; $b--; say $b

[20:12] <camelia> rakudo-moar 26ddce: OUTPUT«False␤»

[20:12] <masak> m: say False.pred

[20:12] <camelia> rakudo-moar 26ddce: OUTPUT«False␤»

[20:18] <TimToady> yes, well, there is thta

[20:18] <TimToady> *that

[20:19] <TimToady> I suppose one could think of bags as counted in a set of integers that cannot go negative

[20:20] <lizmat> uints?

[20:20] <lizmat> Natural?

[20:20] <TimToady> not suggesting it has to be implemented that way

[20:22] <lizmat> ok

[20:25] *** rindolf left
[20:30] *** IllvilJa joined
[20:38] *** molaf joined
[20:39] <lizmat> grr... Proxy doesn't seem to be implemented correctly

[20:39] *** virtualsue joined
[20:40] *** ssutch left
[20:40] *** ssutch joined
[20:44] <lue> anyone else unable to bootstrap panda lately?

[20:46] *** berekuk left
[20:53] *** Rotwang left
[20:53] *** hoverboard is now known as moistcherry

[20:57] <btyler> lue: yeah, I think timotimo++ identified the offending lines in moar

[21:02] *** spider-mario left
[21:03] <lizmat> https://gist.github.com/lizmat/7f7ecc7fdbd4152c9932  Proxy.FETCH being called *EIGHT* times for a simple access ??

[21:03] <lizmat> jnthn: ^^^  huh?

[21:05] <jnthn> lizmat: Well, you've probably hit the worst case there...

[21:05] <jnthn> for one the multi-dispatcher won't have got its caches primed yet, I guess...

[21:05] <jnthn> So the ++ may well be hitting that

[21:05] <jnthn> Oh...

[21:05] <jnthn> Worse

[21:06] <jnthn> Proxy can't hit the cache.

[21:06] <lizmat> it's very easy to have it do it many, many times more

[21:06] <jnthn> Because the cache can't run code.

[21:07] <lizmat> I'm not sure how Proxy is supposed to work, as it is definitely not up to spec

[21:07] <jnthn> So I suspect it's going to the proto, then through the multi-dispatcher, etc.

[21:07] <lizmat> but why would it call Fetch everytime ?

[21:07] <jnthn> The problem with Proxy is this: decont is generally cheap and side-effect free

[21:07] <jnthn> How can it *not* call fetch every time?

[21:07] *** brrt left
[21:08] <jnthn> If you're passing a containerized thing off to a bunch of things that need the value within it, then each one is going to have to obtain the value

[21:08] <jnthn> That's done by fetch

[21:09] <dalek> roast: 63a9cb3 | (Elizabeth Mattijsen)++ | S17-supply/c (2 files):

[21:09] <dalek> roast: Unfudge faulty fudges, colomon++

[21:09] <dalek> roast: review: https://github.com/perl6/roast/commit/63a9cb3e1c

[21:10] <lizmat> sorry, I'm not seeing it

[21:11] <lizmat> even $a<b> does 8 FETCHes, without doing an increment or decrement or whatever

[21:13] *** molaf left
[21:15] *** igorsutton left
[21:15] *** rurban1 left
[21:16] *** igorsutton joined
[21:17] <jnthn> lizmat: Made the best way to grok it is to take a look at how often decont shows up in the bytecode. Every time something needs to do a type check on a value in a container, there's a decont. Every time you call a method on something in a container, there's at decont. Every time the thing is put into self, there's a decont to get it and bind it into self. Just from those second two, calling a method on something will always need to decont at least twice.

[21:19] <lizmat> all I can say is: wow, Proxy is *really* expensive

[21:19] <jnthn> And say almost certainly is calling print, which may well in turn call a lower level thing.

[21:19] <jnthn> Yeah, it will be.

[21:19] <lizmat> so, is there another way to implement ++ and -- on BagHashes ?

[21:19] <lizmat> (and SetHashes and MixHashes) ?

[21:19] <jnthn> Well, given I don't know what it's meant to do... :)

[21:20] <lizmat> basically the same as on a hash

[21:20] <masak> as someone who reaches for Proxy sometimes, I'm sort of assuming/expecting it to be expensive. so is tie-ing in Perl 5, I guess.

[21:20] <masak> 'night, #perl6

[21:20] <jnthn> Yeah, Proxy is really rather hard to optimize...

[21:20] <colomon> colomon?++

[21:20] <colomon> lizmat: ?

[21:20] <lizmat> in Perl 5, FETCH is only called once when needed

[21:21] <lizmat> Oops, I meant [Coke]++

[21:22] <jnthn> You're acting like we're calling it just for the hell of it :/

[21:22] <jnthn> Please, take some time to understand the container model.

[21:23] <lizmat> I'm just very unhappily surprised

[21:23] <lizmat> I guess I should  :-)

[21:23] <jnthn> As for a solution, maybe if it's like how hashes work, then the WHENCE mechanism hashes uses - which is far cheaper - could help.

[21:23] <lizmat> anyway, the way Proxy currently works, I cannot make it return Int / Bool on -- on a non-existing key

[21:24] <jnthn> About the Panda issue: I have it reproduced here. 

[21:26] <jnthn> Unfortunately, it's not proving easy to hunt down when things got broken... :(

[21:32] *** rurban joined
[21:37] *** daniel-s_ left
[21:37] *** rurban left
[21:37] *** daniel-s__ joined
[21:41] *** _daniel-s__ joined
[21:42] *** daniel-s__ left
[21:46] *** rurban joined
[21:50] *** rurban left
[21:54] <lizmat> jnthn: how about this idea: have BagHash return a special BagValue object

[21:55] <lizmat> and create candidates for postcircumfix ++ and -- for BagValue objects ?

[21:56] *** moistcherry left
[21:59] <jnthn> lizmat: Sounds workable

[22:01] <dalek> rakudo/nom: 3583767 | (Elizabeth Mattijsen)++ | src/core/BagHash.pm:

[22:01] <dalek> rakudo/nom: Quick fix for change at S02:1698

[22:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3583767516

[22:01] <synopsebot> Link: http://perlcabal.org/syn/S02.html#line_1698

[22:01] <lizmat> TimToady: RC example should work with this

[22:02] <jnthn> Panda appears not to work all the way back at 29c5c9d9 :(

[22:03] <lizmat> that's in moar / nqp ?  not in rakudo or?

[22:04] <jnthn> That's a moar sha1

[22:04] <jnthn> Indicating the point of the spesh_trace merge

[22:05] *** jnap left
[22:05] <jnthn> Thing is it breaks with MVM_SPESH_DISABLE=1

[22:06] <btyler> jnthn: that'd correspond to my fuzzy check -- I do a master/master/nom/panda rebootstrap most weekday mornings EST, and nothing jumped out at me on friday

[22:06] <btyler> (as in, rebuild everything from head and then panda rebootstrap)

[22:07] <jnthn> It's going to take some effort to work out exactly what is to blame.

[22:07] <jnthn> Since I'll also have to recreate NQP builds at the appropriate commits also

[22:08] <jnthn> And I'm too tired to do that tonight.

[22:08] <btyler> is that something that could be automated? I ran into the same problem trying to bisect a few minutes ago. seems like a script could keep things in sync as you moved forward/back on whichever axis (moar/nqp/rakudo) is interesting

[22:09] <btyler> I was just going by rough date, though

[22:09] *** igorsutton left
[22:11] <jnthn> Well, building d6a554f in Moar against an NQP pre-lexopts merge would be one itnersting data point

[22:12] <jnthn> As would building abaec70 in Moar with where lexopts was before it was sync'd with master of NQP I guess

[22:13] <jnthn> 2395d29 would also be an interesting one to try.

[22:13] <jnthn> Anyway, I should sleep...really tired :(

[22:17] *** _daniel-s__ left
[22:18] *** _daniel-s__ joined
[22:20] *** moistcherry joined
[22:21] *** virtualsue left
[22:23] <lizmat> gnight jnthn!  and thanks for all the help!   jnthn++

[22:24] <dalek> roast: 90be507 | (David Warring [email@hidden.address] | integration/advent2013-day19.t:

[22:24] <dalek> roast: removed cruft

[22:24] <dalek> roast: review: https://github.com/perl6/roast/commit/90be50739a

[22:32] *** xenoterracide left
[22:36] *** btyler left
[22:37] *** moistcherry is now known as hoverboard

[22:41] *** skids joined
[22:44] *** treehug88 left
[22:46] *** _daniel-s__ left
[22:46] *** _daniel-s__ joined
[22:47] *** rurban joined
[22:49] *** rurban1 joined
[22:51] *** rurban left
[22:55] *** hoverboard left
[22:59] *** xenoterracide joined
[23:11] *** anaeem1__ left
[23:11] *** btyler joined
[23:12] *** xenoterracide left
[23:22] *** rurban1 left
[23:23] *** BenGoldberg joined
[23:24] *** denis_boyun left
[23:25] *** guru joined
[23:25] *** guru is now known as Guest54627

[23:26] *** Guest54627 is now known as ajr_

[23:30] <TimToady> lizmat: I would think the lists of available signals would be determined by the kernel, not by the distro

[23:30] <lizmat> so $*KERNEL.signals instead of $*DISTRO.signals ?

[23:31] <TimToady> Ubuntu has no opinion on signals, but the syscall to Linux sure does

[23:32] <lizmat> BTW, making BagHash<unknown_key>-- return Int, is proving to be quite a lot of extra code  :-(

[23:32] <lizmat> I'm not sure it is all worth it

[23:33] *** rurban joined
[23:33] *** hoverboard joined
[23:33] *** xinming_ joined
[23:34] <TimToady> maybe there's a simpler way to do it

[23:34] <lizmat> https://gist.github.com/lizmat/80b8c5b3a02f8a742c0c   work so far

[23:35] *** rurban left
[23:36] <TimToady> m: say Int.pred

[23:36] <camelia> rakudo-moar 358376: OUTPUT«Invocant requires an instance, but a type object was passed␤  in method Bridge at src/gen/m-CORE.setting:4495␤  in sub infix:<-> at src/gen/m-CORE.setting:4394␤  in method pred at src/gen/m-CORE.setting:4038␤  in block  at /tmp/ruYZXLkgL3:1␤␤»

[23:36] *** xinming left
[23:38] * TimToady wonders what the fallout of defining .succ/.pred on type objects to be transparent

[23:39] *** btyler left
[23:39] <TimToady> ...would be

[23:39] <lizmat> Any.pred( self ) ?

[23:39] <TimToady> it's an idea

[23:40] <TimToady> dunno if it's a good one

[23:40] <lizmat> will try that tomorrow maybe

[23:40] <lizmat> will be on the road most of tomorrow

[23:40] <TimToady> safe drivin'

[23:42] <dalek> rakudo/nom: 9fa1db5 | (Elizabeth Mattijsen)++ | src/core/ (3 files):

[23:42] <dalek> rakudo/nom: $*KERNEL.signals instead of $*DISTRO.signals

[23:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9fa1db5aea

[23:43] <lizmat> and with that, I've reached my commit limit for today

[23:43] <lizmat> gnight, #perl6!

[23:51] <colomon> o/

[23:53] <colomon> $*VM<config> called at:

[23:53] <colomon>   lib/NativeCall.pm6, lines 116,120

[23:53] <colomon> Please use $*VM.config instead.

[23:53] <colomon> hmmm...

[23:54] *** _daniel-s__ left
[23:54] *** _daniel-s__ joined
[23:58] *** dwarring left
