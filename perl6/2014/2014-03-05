[00:02] <Mouq> Hm. Exactly fc2a6e632efa? It would be useful to know when it did work

[00:02] <cxreg> "The reduction metaoperator now recognizes operators with list infix precedence" # IRTA "redaction metaoperator"

[00:03] *** cognominal left
[00:03] *** cognominal joined
[00:03] *** cognominal left
[00:03] *** cognominal joined
[00:19] *** FOAD joined
[00:20] *** denis_boyun left
[00:24] <lue> r: say uniprop("☃", "na"); # should be eqv. to uniname("☃")

[00:24] <camelia> rakudo-parrot 02329b: OUTPUT«uniprop NYI on parrot backend␤  in sub uniprop at gen/parrot/CORE.setting:6757␤  in block  at /tmp/tmpfile:1␤␤»

[00:24] <camelia> ..rakudo-moar 02329b: OUTPUT«1.1␤»

[00:24] <camelia> ..rakudo-jvm 02329b: OUTPUT«uniprop NYI on jvm backend␤  in sub uniprop at gen/jvm/CORE.setting:6753␤  in block  at /tmp/tmpfile:1␤␤»

[00:25] * Mouq doesn't completely understand these uni* things except uniname

[00:27] <lue> Mouq: S15 update explaining the ones TimToady made up incoming :)

[00:28] <BenGoldberg> uniprop, presumably, basically asks, for unicode string "Foo", what is it's "Bar" property.  The "na" property is short for "name", I believe.

[00:28] <lue> indeed. "Name" returns 0, as does "na1" and "Unicode_1_Name"

[00:28] <Mouq> lue: Cool :)

[00:28] <lue> "na" for some reason returns 1.1

[00:29] <Mouq> m: say uniname("☃")

[00:29] <camelia> rakudo-moar 02329b: OUTPUT«SNOWMAN␤»

[00:29] *** btyler left
[00:29] * Mouq &

[00:29] <BenGoldberg> say uniname("\c[PILE OF POO]")

[00:29] <BenGoldberg> r: say uniname("\c[PILE OF POO]")

[00:29] <camelia> rakudo-jvm 02329b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Unrecognized character name PILE OF POO␤at /tmp/tmpfile:1␤------> [32msay uniname("\c[PILE OF POO[33m⏏[31m]")[0m␤»

[00:29] <camelia> ..rakudo-parrot 02329b: OUTPUT«uniname NYI on parrot backend␤  in sub uniname at gen/parrot/CORE.setting:6756␤  in block  at /tmp/tmpfile:1␤␤»

[00:29] <camelia> ..rakudo-moar 02329b: OUTPUT«PILE OF POO␤»

[00:29] <dalek> specs: 3384acd | lue++ | S15-unicode.pod:

[00:29] <dalek> specs: [S15] Refine meaning of uniprop, add unimatch, unival, unibool

[00:29] <dalek> specs: 

[00:29] <dalek> specs: An S15 updated informed by an implementation? Madness!

[00:29] <dalek> specs: review: https://github.com/perl6/specs/commit/3384acd31a

[00:32] <BenGoldberg> How useful is it that property names ("na", "na1", "Unicode_1-Name", etc) be strings?  Wouldn't an Enum be a better interaface?

[00:34] <lue> BenGoldberg: enumerations, at least in my view, should be limited to the values of E-type properties. No other property value types, nor properties.

[00:34] <BenGoldberg> In particular, it would allow most misspellings to be caught at compile time.

[00:35] <lue> besides, there are variations in spelling that the consortium doesn't consider significant (e.g., IIRC, "na1" and "nA1" are equivalent)

[00:38] <Mouq> ...why.

[00:38] <Mouq> also lue++

[00:39] <lue> why what?

[00:40] <Mouq> »"na1" and "nA1"«

[00:40] <Mouq> or is that just a general rule?

[00:41] <lue> a general rule, not a special case :)  Unicode_1_Name and uNICODE1nAME are also equivalent, if memory serves.

[00:41] <Mouq> Ohh, ok, cool

[00:44] <Mouq> It would be easiest just to standardize on e.g. wordcase, if that doesn't break anything

[00:44] <Mouq> and collapse <[_-]>

[00:44] <Mouq> but I know virtually nothing about this :P

[00:44] <segomos> finally got perl6 on moar .. this is p cool

[00:44] <Mouq> *standardize as in wordcase input like "na"

[00:45] <Mouq> segomos: Yup :)

[00:45] <lue> I don't know if _ and - collapse, actually

[00:46] <lue> Mouq: there's nothing against internally normalizing property names before sending them off, I just don't want to enforce particular spellings on the enduser when Unicode has no such rules.

[00:47] <Mouq> lue: I agree

[00:48] <lue> Mouq: see http://www.unicode.org/Public/UCD/latest/ucd/PropertyAliases.txt  , "# Loose matching should be applied ..."

[00:57] <Mouq> m: say uniprop('(','bmg')

[00:57] <camelia> rakudo-moar 02329b: OUTPUT«0029␤»

[01:00] * Mouq needs to read http://www.unicode.org/reports/tr44/ in the first place

[01:05] *** spider-mario left
[01:12] <Mouq> nqp: my @named := [15,42]; sub foo (:$named) {say($_) for $named}; foo(:@named)

[01:12] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«15␤42␤»

[01:12] <Mouq> Coool

[01:15] *** rurban left
[01:15] *** redhands joined
[01:16] <redhands> perl6: say 3;

[01:16] <camelia> rakudo-parrot 02329b, rakudo-jvm 02329b, rakudo-moar 02329b, niecza v24-109-g48a8de3: OUTPUT«3␤»

[01:17] <dalek> roast: a7ff499 | lue++ | S15-string (6 files):

[01:17] <dalek> roast: S15-strings/ -> S15-string-types/

[01:17] <dalek> roast: 

[01:17] <dalek> roast: "strings" is far too vague and general to be a meaningful directory name

[01:17] <dalek> roast: :) .

[01:17] <dalek> roast: review: https://github.com/perl6/roast/commit/a7ff499cb6

[01:17] <dalek> roast: ece1435 | lue++ | S15-unicode-information/uniname.t:

[01:17] <dalek> roast: Add tests for uniname()

[01:17] <dalek> roast: review: https://github.com/perl6/roast/commit/ece1435486

[01:17] <Mouq> Heh

[01:17] <Mouq> lue__

[01:17] <Mouq> lue++

[01:18] <Mouq> lue^^

[01:18] * Mouq raisin it to the roof

[01:18] <lue> apparently _ and ^ aren't considered to create word boundaries by my client, for highlighting purposes :)

[01:19] * lue afk

[01:33] <Mouq> p6: say 'lue__' ~~ /lue»/

[01:33] <camelia> rakudo-parrot 02329b, rakudo-jvm 02329b, rakudo-moar 02329b, niecza v24-109-g48a8de3: OUTPUT«Nil␤»

[01:33] <Mouq> p6: say 'lue^^' ~~ /lue»/

[01:33] <camelia> rakudo-parrot 02329b, rakudo-jvm 02329b, rakudo-moar 02329b, niecza v24-109-g48a8de3: OUTPUT«｢lue｣␤␤»

[01:37] *** __thou left
[01:46] *** bluescreen10 left
[01:47] *** flussence joined
[01:48] *** __thou joined
[01:48] *** redhands left
[01:52] *** tgt joined
[01:52] * Mouq almost has E<> working like he wants

[01:53] <grondilu> r: constant @a = map {$_}, <foo bar>; constant @b = @a xx 2; say ~@b

[01:54] <camelia> rakudo-parrot 02329b: OUTPUT«foo bar foo bar␤»

[01:54] <camelia> ..rakudo-jvm 02329b, rakudo-moar 02329b: OUTPUT«␤»

[01:54] <grondilu> r: constant @a = map {$_}, <foo bar>; constant @b = @a; say ~@b

[01:54] <camelia> rakudo-parrot 02329b, rakudo-jvm 02329b, rakudo-moar 02329b: OUTPUT«foo bar␤»

[01:54] <grondilu> r: constant @a = <foo bar>; constant @b = @a xx 2; say ~@b

[01:55] <camelia> rakudo-parrot 02329b, rakudo-jvm 02329b, rakudo-moar 02329b: OUTPUT«foo bar foo bar␤»

[01:55] <Mouq> "Cannot invoke this object (REPR: P6opaque, cs = 0)" That's a new one for me..

[01:56] *** fridim__ left
[01:57] *** tgt left
[02:05] <Mouq> nqp: my %a := { a=>[1],b=>[2] }; say($a<b>[0])

[02:05] <camelia> nqp-parrot: OUTPUT«Use of undeclared variable '$a' at line 2, near "<b>[0])"␤current instr.: 'panic' pc 15934 (gen/parrot/stage2/NQPHLL.pir:5941) (gen/parrot/stage2/NQPHLL.nqp:425)␤»

[02:05] <camelia> ..nqp-jvm: OUTPUT«Use of undeclared variable '$a' at line 2, near "<b>[0])"␤  in panic (gen/jvm/stage2/NQPHLL.nqp:378)␤  in  (gen/jvm/stage2/NQP.nqp:2379)␤  in  (gen/jvm/stage2/NQP.nqp:2370)␤  in variable (gen/jvm/stage2/NQP.nqp:2301)␤  in !reduce (gen/jvm/stage2/QRegex.nqp:…»

[02:05] <camelia> ..nqp-moarvm: OUTPUT«Use of undeclared variable '$a' at line 2, near "<b>[0])"␤   at gen/moar/stage2/NQPHLL.nqp:369  (/home/p6eval/rakudo-inst-1/languages/nqp/lib/NQPHLL.moarvm:panic:120)␤ from gen/moar/stage2/NQP.nqp:2374  (/home/p6eval/rakudo-inst-1/languages/nqp/lib/nqp.moarvm:…»

[02:05] <Mouq> nqp: my %a := { a=>[1],b=>[2] }; say(%a<b>[0])

[02:05] <camelia> nqp-jvm: OUTPUT«CodeRef representation does not implement at_key_boxed␤  in  (/tmp/tmpfile:1)␤  in  (gen/jvm/stage2/NQPHLL.nqp:1099)␤  in eval (gen/jvm/stage2/NQPHLL.nqp:1085)␤  in evalfiles (gen/jvm/stage2/NQPHLL.nqp:1291)␤  in command_eval (gen/jvm/stage2/NQPHLL.nqp:1195…»

[02:05] <camelia> ..nqp-parrot: OUTPUT«get_pmc_keyed() not implemented in class 'Sub'␤current instr.: '' pc 65 ((file unknown):51) (/tmp/tmpfile:1)␤»

[02:05] <camelia> ..nqp-moarvm: OUTPUT«This representation (MVMCode) does not support associative access␤   at /tmp/tmpfile:1  (<ephemeral file>::26)␤ from gen/moar/stage2/NQPHLL.nqp:1090  (/home/p6eval/rakudo-inst-1/languages/nqp/lib/NQPHLL.moarvm::94)␤ from gen/moar/stage2/NQPHLL.nqp:1076  (/ho…»

[02:05] <Mouq> nqp: my %a := a=>[1],b=>[2]; say(%a<b>[0])

[02:05] <camelia> nqp-parrot: OUTPUT«1␤»

[02:05] <camelia> ..nqp-moarvm: OUTPUT«This representation (VMArray) does not support associative access␤   at /tmp/tmpfile:1  (<ephemeral file>::40)␤ from gen/moar/stage2/NQPHLL.nqp:1090  (/home/p6eval/rakudo-inst-1/languages/nqp/lib/NQPHLL.moarvm::94)␤ from gen/moar/stage2/NQPHLL.nqp:1076  (/ho…»

[02:05] <camelia> ..nqp-jvm: OUTPUT«VMArray representation does not implement at_key_boxed␤  in  (/tmp/tmpfile:1)␤  in  (gen/jvm/stage2/NQPHLL.nqp:1099)␤  in eval (gen/jvm/stage2/NQPHLL.nqp:1085)␤  in evalfiles (gen/jvm/stage2/NQPHLL.nqp:1291)␤  in command_eval (gen/jvm/stage2/NQPHLL.nqp:1195…»

[02:07] *** __thou left
[02:07] * Mouq is more disappointed with this than he wishes to describe....

[02:09] <Mouq> nqp: my %a; %a{$_} := $_.value for "a"=>[1],b=>[2]; say(%a<b>[0])

[02:09] <camelia> nqp-parrot: OUTPUT«Assignment ("=") not supported in NQP, use ":=" instead at line 2, near ">[1],b=>[2"␤current instr.: 'panic' pc 15934 (gen/parrot/stage2/NQPHLL.pir:5941) (gen/parrot/stage2/NQPHLL.nqp:425)␤»

[02:09] <camelia> ..nqp-moarvm: OUTPUT«Assignment ("=") not supported in NQP, use ":=" instead at line 2, near ">[1],b=>[2"␤   at gen/moar/stage2/NQPHLL.nqp:369  (/home/p6eval/rakudo-inst-1/languages/nqp/lib/NQPHLL.moarvm:panic:120)␤ from <unknown>:1  (/home/p6eval/rakudo-inst-1/languages/nqp/lib/n…»

[02:09] <camelia> ..nqp-jvm: OUTPUT«Assignment ("=") not supported in NQP, use ":=" instead at line 2, near ">[1],b=>[2"␤  in panic (gen/jvm/stage2/NQPHLL.nqp:378)␤  in infix:sym<=> (gen/jvm/stage2/NQP.nqp)␤  in !protoregex (gen/jvm/stage2/QRegex.nqp:784)␤  in infix (gen/jvm/stage2/NQPHLL.nqp)…»

[02:09] <Mouq> nqp: my %a; %a{$_.key} := $_.value for a=>[1],b=>[2]; say(%a<b>[0])

[02:09] <camelia> nqp-jvm: OUTPUT«Method 'key' not found for invocant of class 'NQPArray'␤  in  (/tmp/tmpfile:1)␤  in  (/tmp/tmpfile:1)␤  in  (gen/jvm/stage2/NQPHLL.nqp:1099)␤  in eval (gen/jvm/stage2/NQPHLL.nqp:1085)␤  in evalfiles (gen/jvm/stage2/NQPHLL.nqp:1291)␤  in command_eval (gen/…»

[02:09] <camelia> ..nqp-parrot: OUTPUT«Method 'key' not found for invocant of class 'QRPA'␤current instr.: '' pc 229 ((file unknown):117) (/tmp/tmpfile:1)␤»

[02:09] <camelia> ..nqp-moarvm: OUTPUT«Cannot find method 'key'␤   at /tmp/tmpfile:1  (<ephemeral file>::8)␤ from /tmp/tmpfile:1  (<ephemeral file>::47)␤ from gen/moar/stage2/NQPHLL.nqp:1090  (/home/p6eval/rakudo-inst-1/languages/nqp/lib/NQPHLL.moarvm::94)␤ from gen/moar/stage2/NQPHLL.nqp:1076 …»

[02:09] *** fridim__ joined
[02:11] <Mouq> nqp: my %a; for "a",[1],"b",[2] ->$k,$v{ %a{$k} := $v }; say(%a<b>[0])

[02:11] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«2␤»

[02:11] <Mouq> That's a good enough work-aroun

[02:11] <Mouq> d

[02:11] <TimToady> .oO( Not Quite Productive :)

[02:11] <Mouq> :)

[02:13] *** woosley joined
[02:22] <Mouq> TIMTOTDIAOOTWINQP

[02:23] <Mouq> *TIMTOWTDIAOOWINQP

[02:23] <Mouq> Looks good though

[02:25] <Mouq> Just need to fix Pod::To::Text to support it...

[02:26] <Mouq> perl6 --doc -e'=pod E<SNOWMAN;95;ntilde>'

[02:26] <Mouq> ☃_ñ

[02:27] *** Sqirrel left
[02:28] *** Sqirrel joined
[02:33] *** klapperl left
[02:34] *** __thou joined
[02:35] <dalek> rakudo/nom: eff1c27 | Mouq++ | / (4 files):

[02:35] <dalek> rakudo/nom: Do E<> properly.

[02:35] <dalek> rakudo/nom: 

[02:35] <dalek> rakudo/nom: The @contents should contain the actual sequences, with the actual codes

[02:35] <dalek> rakudo/nom: used in the E<> being stored correspondingly in @meta in case the Pod

[02:35] <dalek> rakudo/nom: formatter needs it

[02:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/eff1c27b79

[02:35] *** klapperl joined
[02:37] <Mouq> (Also pushed to Pod::To::HTML)

[02:38] *** kaare__ joined
[02:38] <dalek> perl6-roast-data: 532ad2e | coke++ | / (6 files):

[02:38] <dalek> perl6-roast-data: today (automated commit)

[02:38] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/532ad2eadc

[02:38] <Mouq> [Coke]++

[02:39] <Mouq> I'll fix the formatting code tests

[02:41] *** kaare_ left
[02:49] *** FOAD left
[02:50] <dalek> roast: ac4bb81 | Mouq++ | S26-documentation/08-formattingcodes.t:

[02:50] <dalek> roast: Use latest formatting code semantics

[02:50] <dalek> roast: review: https://github.com/perl6/roast/commit/ac4bb81435

[02:51] <[Coke]> ok. we should be back to daily runs. they're going to run later in the day.

[02:51] <Mouq> \o/

[02:53] *** tgt joined
[02:55] *** __thou left
[02:57] *** tgt left
[03:02] *** FOAD joined
[03:07] <dalek> rakudo/nom: 3c97ad6 | Mouq++ | src/Perl6/Grammar.nqp:

[03:07] <dalek> rakudo/nom: Don't panic on bad Pod formatting

[03:07] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3c97ad623c

[03:08] <Mouq> lue: You should be able to generate S26 again without modifications

[03:08] <Mouq> As in, I was able to do that

[03:12] <[Coke]> moritz: any idea how to fix this:

[03:12] <[Coke]> pugs: user error ((0,"this version of PCRE is compiled without UTF support"))

[03:12] <camelia> pugs: OUTPUT«*** No such subroutine: "&user"␤    at /tmp/nwJKpSVo4T line 1, column 1 - line 2, column 1␤»

[03:14] *** skids left
[03:15] <dalek> perl6-roast-data: 7922c11 | coke++ | / (2 files):

[03:15] <dalek> perl6-roast-data: Very slight improvement to pugs

[03:15] <dalek> perl6-roast-data: 

[03:15] <dalek> perl6-roast-data: (needed to setup cabal on the new box)

[03:15] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/7922c110f1

[03:16] <lue> uh-oh: "java.lang.NoClassDefFoundError: org/objectweb/asm/tree/MethodNode"

[03:18] <lue> This happens immediately after "/usr/local/bin/nqp-j --target=jar --output=blib/Perl6/Pod.jar --encoding=utf8 \

[03:18] <lue>     src/Perl6/Pod.nqp"

[03:20] <Mouq> ...O.o

[03:21] <Mouq> That's my fault, but... I'm not sure what's going wrong

[03:22] *** grondilu left
[03:30] <Mouq> :| I get it too

[03:33] <dalek> nqp: 4809918 | larry++ | / (2 files):

[03:33] <dalek> nqp: bump MOAR rev

[03:33] <dalek> nqp: review: https://github.com/perl6/nqp/commit/4809918a28

[03:34] <lue> .oO(all aboard the bisect train!)

[03:34] <Mouq> nqp: class A { my %x; for 1,2,3,4 { %x{$_} := 42 }; }

[03:34] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: ( no output )

[03:34] <Mouq> lue: It's my penultimate commit

[03:35] <lue> Mouq: I figure, I just want to confirm for myself :) [also, bisect practice, don't get to do it often]

[03:35] <Mouq> https://github.com/rakudo/rakudo/commit/eff1c2

[03:35] <dalek> rakudo/nom: b1b1d52 | larry++ | src/core/Str.pm:

[03:35] <dalek> rakudo/nom: refactor uniprops with better caching

[03:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b1b1d52aee

[03:35] <dalek> rakudo/nom: 87399b9 | larry++ | tools/build/NQP_REVISION:

[03:35] <dalek> rakudo/nom: bump NQP rev

[03:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/87399b9527

[03:35] <Mouq> lue: k :) I'll see if I can figue out what's going on

[03:41] <lue> Mouq: it's definitely something to do with your huge list of entities.

[03:45] <Mouq> lue: I tried getting around it some other way, but it only works if I remove almost all the entities from the list -_-

[03:46] <lue> Mouq: could you possibly assign the list to a @var and then iterate over that? Would make the for loop look nicer :)

[03:48] <Mouq> lue: Didn't help :/

[03:49] <lue> (Note: if it's impossible/too difficult to get E<> handling working correctly within rakudo, then it's OK for some Pod::Entities module to handle it. I only ever didn't like the idea of every converter module needing to write its own handlers.)

[03:51] <Mouq> lue: Looks like it's the only practical choice

[03:52] <Mouq> I'm just going to remove it for now

[03:52] <lue> Yeah. I'm not too concerned with relegating to modules; POD apparently has such helpers for it, and Pod::To::HTML wants a treewalker helper module too :)

[03:54] *** tgt joined
[03:56] <dalek> rakudo/nom: beeafc1 | Mouq++ | src/Perl6/ (2 files):

[03:56] <dalek> rakudo/nom: HTML entities list made JVM fail make install. removing

[03:56] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/beeafc12fe

[03:56] <Mouq> So. That's the quick fix.

[03:56] <Mouq> I'm seriously out of tuits to do it right :/

[03:57] *** boks joined
[03:57] <boks> hi guys

[03:57] <Mouq> o/ boks

[03:58] <lue> Mouq: I'm perfectly fine if we defer E<> handling to some external module.

[03:58] *** tgt left
[03:59] <dalek> rakudo/nom: fa46c8e | Mouq++ | src/Perl6/Actions.nqp:

[03:59] <dalek> rakudo/nom: Put parsed number from E<> into @.meta

[03:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fa46c8e50d

[03:59] <Mouq> lue: Well there ^^

[04:00] <boks> ei guys do you have any available links to share for sybase perl materials

[04:00] *** molaf joined
[04:00] <Mouq> boks: Like this? http://perl6.org/documentation/ :)

[04:01] <lue> Mouq: that collapses 0x, 0o, etc. into a number, but nothing else, right?

[04:01] <Mouq> lue: Yup

[04:01] <lue> "nothing else" wrt before attempting to handle E<>, that is.

[04:02] <Mouq> So you can reinstate what Pod::To::HTML used to do, just use @.meta instead of @.contents

[04:02] <Mouq> If that makes sense.

[04:02] <Mouq> I need to go..

[04:02] <Mouq> o/ #perl6

[04:11] <boks> ei guys, i need your inputs. how do you study perl? how things motivated you to learn perl quickly. kinda hard to absorb perl coz i'm not in a programming side i'm more on administration side.

[04:11] *** jnap left
[04:11] *** Mouq left
[04:23] *** woosley left
[04:25] *** woosley joined
[04:26] *** woosley left
[04:26] *** woosley joined
[04:34] *** __thou joined
[04:42] *** jnap joined
[04:47] *** jnap left
[04:47] <Timbus> boks, it sounds like you are probably looking for perl 5 material, not perl 6.

[04:48] <Timbus> also to answer your question, i guess 'make something with it' is the best advice I can personally give.

[04:54] <boks> do we have channel for perl5?

[04:55] *** tgt joined
[04:58] <Timbus> well, #perl has nearly 600 people in it. but i think there's a separate irc/channel for specifically learning perl

[04:59] <Timbus> ask around :)

[04:59] *** tgt left
[05:03] <masak> good early morning, #perl6

[05:04] <masak> boks: on the irc.perl.org server, there's #perl-help

[05:11] *** cxreg joined
[05:22] *** [Sno] left
[05:25] *** telex left
[05:26] *** telex joined
[05:30] <moritz> good morning

[05:30] <moritz> [Coke]: no idea, sorry

[05:36] *** fridim__ left
[05:42] *** jnap joined
[05:46] *** BenGoldberg left
[05:47] *** jnap left
[05:55] *** tgt joined
[05:59] *** tgt left
[06:17] *** xinming_ joined
[06:17] *** xinming left
[06:18] *** go|dfish left
[06:20] *** go|dfish joined
[06:31] <TimToady> m: say 'A'.&uniprop-bool('Any')  # oddly, this works locally

[06:31] <camelia> rakudo-moar fa46c8: OUTPUT«(signal SEGV)»

[06:32] <TimToady> something must be different in how it was compiled

[06:37] *** [Sno] joined
[06:43] *** jnap joined
[06:48] *** jnap left
[06:49] *** colomon left
[06:56] *** tgt joined
[07:00] *** tgt left
[07:20] *** tgt joined
[07:23] *** tgt left
[07:23] *** xinming joined
[07:26] *** xinming_ left
[07:27] *** FROGGS joined
[07:35] *** woosley left
[07:35] *** woosley joined
[07:40] *** woosley left
[07:40] *** woosley joined
[07:44] *** jnap joined
[07:44] *** woosley left
[07:44] *** woosley joined
[07:48] *** jnap left
[07:50] *** Rotwang joined
[07:59] *** kaare__ is now known as kaare_

[08:02] *** darutoko joined
[08:05] *** zakharyas joined
[08:05] *** JimmyZ_ joined
[08:05] *** perigrin_ joined
[08:07] *** colomon joined
[08:08] *** kaleem joined
[08:11] *** klapperl left
[08:11] *** salv0 left
[08:11] *** Alina-malina left
[08:11] *** vendethiel left
[08:11] *** pdcawley left
[08:11] *** itz left
[08:11] *** JimmyZ left
[08:11] *** perigrin left
[08:11] *** FROGGS left
[08:11] *** Sqirrel left
[08:11] *** gfldex left
[08:11] *** camelia left
[08:11] *** dayangkun left
[08:11] *** aindilis left
[08:11] *** wooden left
[08:11] *** Alina-malina joined
[08:11] *** __thou left
[08:11] *** vendethiel joined
[08:21] *** tgt joined
[08:23] *** salv0 joined
[08:23] *** tgt left
[08:24] *** virtualsue joined
[08:26] *** nebuchadnezzar joined
[08:27] *** woosley left
[08:28] *** woosley1 joined
[08:33] *** arnsholt left
[08:43] *** pdcawley joined
[08:44] *** Rotwang left
[08:45] *** jnap joined
[08:49] *** jnap left
[08:52] *** itz joined
[08:53] *** boks left
[09:01] *** dmol joined
[09:01] *** wooden joined
[09:01] *** aindilis joined
[09:01] *** dayangkun joined
[09:01] *** camelia joined
[09:01] *** gfldex joined
[09:01] *** Sqirrel joined
[09:01] *** klapperl_ joined
[09:01] *** FROGGS joined
[09:01] *** barjavel.freenode.net sets mode: +v camelia

[09:02] *** woosley joined
[09:03] *** kbaker joined
[09:03] *** isacloud_ left
[09:04] *** woosley left
[09:05] *** isacloud__ joined
[09:05] *** isacloud__ left
[09:05] *** isacloud__ joined
[09:05] *** isacloud__ is now known as isacloud_

[09:06] *** woosley joined
[09:06] *** woosley1 left
[09:10] *** woosley1 joined
[09:11] *** JimmyZ_ is now known as JimmyZ

[09:12] *** JimmyZ left
[09:12] *** JimmyZ joined
[09:12] *** woosley left
[09:12] *** Adriaaan joined
[09:16] <timotimo> nqp: my @things := ["foo", [1], "bar", [2], "baz", [1, 2, 3]]; my %test := nqp::hash(|@things); say(%test<baz>[0]); say(%test<baz>[1]); say(%test<foo>);

[09:17] <camelia> nqp-jvm: OUTPUT«Method 'type' not found for invocant of class 'NQPMu'␤  in coerce (gen/jvm/stage2/QAST.nqp:4191)␤  in as_jast (gen/jvm/stage2/QAST.nqp:2974)␤  in  (gen/jvm/stage2/QAST.nqp:3771)␤  in compile_all_the_stmts (gen/jvm/stage2/QAST.nqp:3759)␤  in as_jast (gen/jvm…»

[09:17] <camelia> ..nqp-parrot: OUTPUT«Error while compiling op hash (source text: "nqp::hash(|@things)"): Unknown QAST node type NQPMu␤current instr.: '' pc 57002 (gen/parrot/stage2/QAST.pir:21033) (gen/parrot/stage2/QAST.nqp:3629)␤»

[09:17] <camelia> ..nqp-moarvm: OUTPUT«Error while compiling op hash (source text: "nqp::hash(|@things)"): Iteration past end of iterator␤   at gen/moar/stage2/QAST.nqp:4471  (/home/p6eval/rakudo-inst-1/languages/nqp/lib/QAST.moarvm::17)␤ from gen/moar/stage2/QAST.nqp:4470  (/home/p6eval/rakudo-ins…»

[09:17] <timotimo> oh, whoops :)

[09:17] <timotimo> nqp is ticklish

[09:29] *** kurahaupo_mobile joined
[09:30] *** Adriaaan left
[09:32] *** rindolf joined
[09:34] *** woosley joined
[09:34] *** woosley1 left
[09:39] *** woosley left
[09:41] *** woosley joined
[09:45] *** jnap joined
[09:50] *** jnap left
[09:52] *** kurahaupo_mobile left
[09:54] *** dakkar joined
[09:55] *** kurahaupo_mobile joined
[09:55] *** kurahaupo_mobile left
[10:05] *** Pleiades` left
[10:11] *** Pleiades` joined
[10:29] *** woosley left
[10:35] *** dakkar left
[10:43] *** arnsholt joined
[10:46] *** jnap joined
[10:49] <Probably_Tadzik> Juerd: ping

[10:50] *** jnap left
[10:52] *** xinming left
[10:54] <FROGGS> an imposter! kill it!

[10:55] <timotimo> to be honest, as long as the imposter-tadzik does the same cool work as the original tadzik, i wouldn't mind keeping them around

[10:56] <timotimo> at least they're somewhat up front about the (possibility of) imposterization

[10:58] <Probably_Tadzik> :)

[10:58] *** xinming joined
[10:59] <FROGGS> I even start to like the new one better :o)

[11:11] *** xenoterracide left
[11:26] *** sftp left
[11:27] *** sftp joined
[11:31] <arnsholt> Probably_Tadzik: How slow was your asteroids thing on JVM?

[11:32] <arnsholt> (Or not slow, as the case may be)

[11:32] <arnsholt> I've been reading a bit about invokedynamic and there might be some speedups to be had there

[11:32] *** denisboyun joined
[11:33] <timotimo> what's the name for the kind of typing we have? optional typing? incremental typing?

[11:34] * colomon 's overnight smoke run was seriously messed up.  :\

[11:35] *** sftp left
[11:40] <Probably_Tadzik> arnsholt: frankly, it feels about as fast as the C verison :)

[11:41] <Probably_Tadzik> I just played it until almost-winning, and there was only one noticable GC pause

[11:42] <timotimo> almost-winning meaning that the win condition is NYI? ;)

[11:42] *** virtualsue left
[11:42] *** aindilis left
[11:43] <Probably_Tadzik> hard to say, I never reached it :P

[11:43] *** tadzik1 joined
[11:43] <tadzik1> ...great, even weirder nickname

[11:43] <tadzik1> timotimo: hard to say, I never reached it :P

[11:43] <tadzik1> also, the typing is called Gradual afaik

[11:43] *** sftp joined
[11:43] *** d4l3k_ joined
[11:45] *** aindilis` joined
[11:45] *** dalek left
[11:45] *** Probably_Tadzik left
[11:46] *** d4l3k_ is now known as dalek

[11:47] *** jnap joined
[11:49] *** Adriaaan joined
[11:49] *** nebuchad` joined
[11:51] <timotimo> :D

[11:51] * timotimo is afk for a bit

[11:51] <timotimo> probably_tadzik should update his weechat.

[11:51] *** sivoais_ joined
[11:51] *** jnap left
[11:51] *** pochi joined
[11:52] *** Adriaaan left
[11:52] *** nwc10_ joined
[11:52] *** ruoso joined
[11:53] *** zamolxes joined
[11:54] *** arnsholt_ joined
[11:56] *** nebuchadnezzar left
[11:56] *** timotimo left
[11:56] *** go|dfish left
[11:56] *** japhb_ left
[11:56] *** arnsholt left
[11:56] *** timotimo joined
[11:57] *** ggherdov joined
[11:57] *** japhb joined
[12:00] <moritz> ... probably.

[12:02] *** spider-mario joined
[12:06] *** bjz left
[12:07] *** bjz joined
[12:07] <timotimo> yes, i just remembered that while taking a shower

[12:07] <timotimo> hm. what disconnected me?

[12:07] <FROGGS> some sort of netsplit

[12:07] <timotimo> irc: reading data on socket: error -9 A TLS packet with unexpected length was received.

[12:07] <lizmat> g

[12:07] <timotimo> o_O

[12:08] <lizmat> ra

[12:08] <lizmat> dua

[12:08] <lizmat> l ty

[12:08] <lizmat> ping

[12:08] <FROGGS> lizmat: all is well? :o)

[12:08] <lizmat> yes, just busy offline

[12:09] <FROGGS> yeah, me too these days :/

[12:09] <lizmat> glad to see the channel is busy

[12:09] <timotimo> hey lizmat, nice to see you :)

[12:09] <lizmat> and the commits flowing in

[12:09] <timotimo> yes, you saw TimToady contributing lots of things during the last days? :D

[12:09] <lizmat> TimToady++

[12:11] <jnthn> o/ lizmat  :)

[12:12] <lizmat> jnthn, FROGGS, timotimo  o/

[12:13] * jnthn also hasn't had much Perl 6 time for a little while...

[12:13] <timotimo> o/ jnthn 

[12:13] <jnthn> Things will be back to normal from Friday evening / this weekend, though :)

[12:14] * lizmat will also get back to rakudo in preparation for the QA hackathon in Lyon next week

[12:15] <jnthn> This weekend I'll look into serialization issues on Moar that block some modules.

[12:15] <jnthn> And then get back to moar-conc.

[12:15] * lizmat is looking forward to doing conc on moar

[12:16] * lizmat is looking forward to doing conc on moar

[12:17] <FROGGS> ++jnthn :o)

[12:20] <timotimo> m: say "i'm looking forward to doing concurrency".comb.pick(*).join("")

[12:20] <camelia> rakudo-moar fa46c8: OUTPUT«nctmnoknroir dieo alfgcur gy'o wrdic noo␤»

[12:20] <jnthn> noo!

[12:21] <moritz> timotimo: fwiw '' is the default for .join

[12:21] <timotimo> oh good point

[12:26] *** tgt joined
[12:30] *** xenoterracide joined
[12:35] <colomon> lizmat++

[12:39] *** xenoterracide left
[12:40] <lizmat> colomon o/

[12:40] <lizmat> afk again&

[12:46] *** cognominal left
[12:46] *** cognominal joined
[12:48] *** dayangkun left
[12:48] *** jnap joined
[12:48] <tadzik1> moritz, ping

[12:49] <moritz> tadzik1: pong

[12:50] <tadzik1> moritz: do you have root access on feather1?

[12:50] <moritz> tadzik1: aye

[12:50] <tadzik1> could you help me regain access to my account?

[12:50] <tadzik1> neither the password nor the ssh key works

[12:50] <moritz> tadzik1: should I set a new password and send it by email?

[12:51] *** dayangkun joined
[12:51] <tadzik1> moritz: let's see if that works

[12:51] <moritz> tadzik1: also, what's your login? there doesn't seem to be a 'tadzik'

[12:51] <tadzik1> it's tjs

[12:51] <tadzik1> I've no idea why I'd suddenly lose access, weird

[12:52] <moritz> tadzik1: mail sent

[12:52] <moritz> tadzik1: if it doesn't work, please bother me again

[12:52] *** jnap left
[12:53] *** Sqirrel left
[12:54] <tadzik1> moritz: nope, doesn't let me in :/

[12:54] <moritz> tadzik1: seems your login shell was lost during the upgrade

[12:55] <tadzik1> uh

[12:55] <moritz> sorry about that

[12:55] * moritz installs zsh again

[12:56] *** pecastro left
[12:57] <moritz> urks, lots of unconfigured packages on feather...

[12:57] *** pecastro joined
[12:59] <moritz> tadzik1: done, please try again

[13:01] *** xinming left
[13:07] *** tgt left
[13:07] *** tgt_ joined
[13:24] <tadzik> hooray

[13:24] *** tadzik1 left
[13:24] <tadzik> moritz++

[13:25] <timotimo> greetings original tadzik 

[13:26] <tadzik> The Original Tadzik

[13:27] *** sisar joined
[13:27] <moritz> The Original Tadzik, Formerly Known As tadzik

[13:29] <sisar> i once came across a website which listed design flaws, or things people dislike about a programming language. It had a lot of programming language in the list. For the life of me, I can't remember the name of the website, and google did not help. Does anyone by chance knows what I'm talking about ?

[13:31] <moritz> my memory only comes up with the C++ FQA, but that's C++ only

[13:36] <sisar> hmm

[13:38] * FROGGS .oO( To boldly go where no tadzik has gone before )

[13:44] <moritz> .oO( Probably Tadzik = Just Tadzik | Nothing )

[13:44] *** xinming joined
[13:47] <hoelzro> timotimo++ # weekly post

[13:47] <hoelzro> sad to see that that precomp bug is still present =(

[13:47] <moritz> hoelzro: jnthn said he'll look into it on the weekend

[13:47] <hoelzro> \o/

[13:48] <moritz> (the one on moarvm, that is)

[13:48] *** jnap joined
[13:49] <hoelzro> right

[13:49] <hoelzro> if I had to wager a guess

[13:49] <hoelzro> I'd guess it's in the NQP ModuleLoader

[13:49] <hoelzro> because it occurs on the JVM as well

[13:50] <hoelzro> and I'm betting there's some copy pasting between the two impls

[13:50] *** jnap left
[13:50] *** jnap1 joined
[13:51] *** go|dfish joined
[13:54] *** tgt_ left
[14:04] *** nebuchad` is now known as nebuchadnezzar

[14:05] *** kaare_ left
[14:06] *** PZt left
[14:13] *** guru joined
[14:13] *** guru is now known as Guest61973

[14:14] *** Guest61973 is now known as ajr_

[14:16] *** xragnar_ joined
[14:16] *** xragnar is now known as Guest20324

[14:16] *** Guest20324 left
[14:16] *** xragnar_ is now known as xragnar

[14:19] *** PZt joined
[14:20] *** PZt left
[14:21] *** skids joined
[14:21] *** PZt joined
[14:25] <xfix> sisar, https://wiki.theory.org/YourLanguageSucks

[14:25] <xfix> This?

[14:28] <sisar> xfix: hmm, interesting. But the site I remember had a different interface. I wonder if the site changed interface.

[14:28] <sisar> xfix: thanks, by the way :-)

[14:33] <xfix> "hashes don't stay in order like they do in most other languages"

[14:33] <xfix> I just decided to reread this website

[14:33] <xfix> uh

[14:33] *** hoverboard joined
[14:34] <xfix> Who would depend on hash order?

[14:34] <jnthn> I'm not sure that's true of "most languages" at all...

[14:34] <xfix> Yeah, that too.

[14:34] <xfix> The only language I can think of is PHP, and possibly JavaScript (but only in current implementations, not specification).

[14:34] *** fridim__ joined
[14:35] <xfix> (and in JS, many implementations break the order when you have numeric keys)

[14:35] <xfix> (I'm almost sure that ordered keys in JS are just a compatibility feature)

[14:43] <moritz> what about lua?

[14:49] *** sisar left
[14:58] *** __thou joined
[15:02] *** btyler joined
[15:13] <vendethiel> "Perl is worse than Python because people wanted it worse. Larry Wall, 14 Oct 1998"

[15:15] *** treehug88 joined
[15:16] *** kaleem left
[15:16] *** kaleem joined
[15:17] <timotimo> xfix o/

[15:20] *** virtualsue joined
[15:21] *** xinming left
[15:29] *** kaleem left
[15:30] <timotimo> do you like my blog? :)

[15:31] *** dmol left
[15:33] *** xinming joined
[15:40] *** arnsholt_ left
[15:40] *** siruf joined
[15:42] *** genehack joined
[15:44] *** genehack left
[15:49] *** dayangkun left
[15:50] *** grondilu joined
[15:51] * grondilu can't compile rakudo on MoarVM.  fails during configure.

[15:51] * grondilu tries again to show you the error message

[15:51] <FROGGS> k

[15:53] <PerlJam> I tried compiling a little while ago and got a failure too.

[15:54] <PerlJam> It didn't like \« in a regex in src/Perl6/World.nqp.   I need to use '«' for it to compile

[15:54] <PerlJam> oh, sorry, it was », not «

[15:54] <PerlJam> line 2507

[15:54] <grondilu> http://paste.siduction.org/20140305155437

[15:55] <grondilu> "Whitespace character is not allowed as a delimiter at line 1555, near "«==»   { <""

[15:56] <PerlJam> huh ... that's very similar to the error I got.

[15:56] <moritz> PerlJam: so rakudo needs patching?

[15:56] <PerlJam> hold on a sec, I'll paste the error I got

[15:56] <PerlJam> https://gist.github.com/perlpilot/9369982

[15:57] <PerlJam> moritz: perhaps?  \» worked before, but now fails.  Not sure why.

[15:57] <PerlJam> Seems like there's some problem parsing » characters

[15:58] <moritz> locale-dependent Unicode/encoding fuckup?

[15:58] <FROGGS> nqp: say(nqp::iscclass(nqp::const::CCLASS_WHITESPACE, '«==»', 0))

[15:58] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«0␤»

[15:59] <FROGGS> nqp: say(nqp::iscclass(nqp::const::CCLASS_WHITESPACE, '«==»', 1))

[15:59] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«0␤»

[15:59] <FROGGS> hmmm

[15:59] <FROGGS> grondilu: is one of the two true on your box?

[16:00] * PerlJam -> conference call &

[16:01] <FROGGS> nqp-m: say(nqp::iscclass(nqp::const::CCLASS_WHITESPACE, 'sym«==»', 0)) # grondilu: please test this

[16:01] <camelia> nqp-moarvm: OUTPUT«0␤»

[16:01] <FROGGS> hmmm, if you had a nqp-m ... :/

[16:02] <FROGGS> nqp-m: say(nqp::ord('sym«==»'))

[16:02] <camelia> nqp-moarvm: OUTPUT«115␤»

[16:03] <grondilu> FROGGS: hang on

[16:04] <grondilu> not sure how to run nqp now :/

[16:05] <grondilu> ok, got it

[16:06] <grondilu> $ nqp-m -e 'say(nqp::iscclass(nqp::const::CCLASS_WHITESPACE, '«==»', 0))'

[16:06] <grondilu> 0

[16:06] <grondilu> $ nqp-m -e 'say(nqp::iscclass(nqp::const::CCLASS_WHITESPACE, '«==»', 1))'

[16:06] <grondilu> 0

[16:06] *** dayangkun joined
[16:06] <FROGGS> and this? say(nqp::iscclass(nqp::const::CCLASS_WHITESPACE, 'sym«==»', 0))

[16:07] *** denisboyun left
[16:07] *** xragnar left
[16:07] <grondilu> $ nqp-m -e 'say(nqp::iscclass(nqp::const::CCLASS_WHITESPACE, 'sym«==»', 0))'

[16:07] <grondilu> 0

[16:07] <TimToady> m: say '«==»' ~~ /<space>/

[16:07] <FROGGS> weird

[16:07] <camelia> rakudo-moar fa46c8: OUTPUT«Nil␤»

[16:08] <TimToady> m: say '«==»' ~~ /\s/

[16:08] <camelia> rakudo-moar fa46c8: OUTPUT«Nil␤»

[16:08] <moritz> well, if it thought any of that was whitespace, it wouldn't have build

[16:11] *** [Sno] left
[16:11] *** xragnar joined
[16:22] *** xinming left
[16:22] *** xinming joined
[16:24] <dalek> nqp: e882556 | (Tobias Leich)++ | src/HLL/Grammar.nqp:

[16:24] <dalek> nqp: improve error message about not allowed delims

[16:24] <dalek> nqp: review: https://github.com/perl6/nqp/commit/e882556845

[16:24] <dalek> rakudo/nom: 4345b6a | (Tobias Leich)++ | tools/build/NQP_REVISION:

[16:24] <dalek> rakudo/nom: bump nqp revision for error message improvement

[16:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4345b6ab62

[16:25] <FROGGS> grondilu: can you try that and paste the error message?

[16:25] <TimToady> I'm wondering whether we're somehow running into a signed vs unsigned character problem

[16:26] * PerlJam is back

[16:27] <grondilu> FROGGS: what do you want me to try exactly?

[16:27] <PerlJam> TimToady: I was thinking perhaps it was a character/byte problem.  Like something is getting out of sync when reading characters and interprets » as bytes

[16:27] <FROGGS> grondilu: just pull and build until it crashes

[16:27] <PerlJam> Dunno though, that was just a guess when I first noticed the problem

[16:28] <TimToady> though with the current code in MVM_string_is_cclass, it would not explain weird latin-1 behavior unless it was to not recognize ws in the latin-1 range; a negative cp would force all of latin1 to return false for WHITESPACE

[16:29] <jnthn> If there's anything going on latin1 wise, it'll have gone wrong way earlier (like, in the latin-1 decoder)

[16:29] <TimToady> otherwise, it'd pull it from the unicode tables, which is the likelier spot for a failure at the point

[16:29] <grondilu> ok

[16:29] <TimToady> *this point

[16:29] <jnthn> Because by the time you've an MVMString, it's turned the latin-1 into the NFG-ish thing.

[16:29] <jnthn> And since we don't really NFG yet, there should simply never be a negative at present...

[16:30] <TimToady> but I should check for that and carp there

[16:30] <TimToady> since nobody should be calling that code with an NFG char

[16:30] <TimToady> (of a negative persuasion)

[16:36] <TimToady> still, my money is on the generated tables somehow

[16:36] <TimToady> though everyone should have the same tables, at any given version

[16:37] *** hoverboard left
[16:38] *** hoverboard joined
[16:40] *** dmol joined
[16:44] *** molaf left
[16:45] <grondilu> FROGGS: http://paste.siduction.org/20140305164433  # pretty much the same as before I think

[16:47] *** sivoais_ is now known as sivoais

[16:48] *** sivoais left
[16:48] *** sivoais joined
[16:48] <TimToady> I wonder if it's really complaining about the ws after the »

[16:51] <TimToady> is this with the most recent version?

[16:52] *** xinming left
[16:52] <TimToady> oh, yeah, reading backlog, so nm

[16:53] *** jnap1 left
[16:53] *** xinming joined
[16:54] *** arnsholt joined
[16:56] *** molaf joined
[16:56] <TimToady> are you doing --gen-moar or --gen-moar=master?

[16:57] <TimToady> that is, what's your Configure line?

[16:57] <timotimo> jnthn: are you going to be tuited tomorrow?

[16:57] <grondilu> $ perl Configure.pl --gen-{nqp,moar} --backends=moar

[16:58] <TimToady> so no =master

[16:58] <TimToady> lemme try that

[16:58] *** xinming_ joined
[16:59] *** xinming left
[16:59] *** zakharyas left
[16:59] <jnthn> timotimo: No, 'fraid not.

[17:00] <jnthn> timotimo: Will be Friday evening at earliest. Depends how tired I am.

[17:00] <FROGGS> grondilu: you are not using HEAD

[17:01] <TimToady> should be close to HEAD, I bumped last night

[17:01] <FROGGS> the current msg should be like: Whitespace character (0x73) is not allowed as a delimiter at ...

[17:02] <timotimo> jnthn: that's okay. do you have suggestions for what i could do to feel useful? ;)

[17:02] <timotimo> except finish up the block inlining code

[17:03] *** bowtie left
[17:03] *** xinming joined
[17:03] *** xinming_ left
[17:04] <TimToady> FROGGS: I see no such message in my nqp stages

[17:04] <TimToady> (that include the char)

[17:05] <FROGGS> TimToady: I pushed that 40min ago

[17:05] <TimToady> ah, so I see

[17:05] <FROGGS> so we know what char is exploded on grondilu's box

[17:05] <TimToady> but it's in the stage0, so is that gonna help?

[17:06] <FROGGS> ohh, hmmm

[17:07] *** bluescreen10 joined
[17:07] <TimToady> I just did the headless configure and it built fine

[17:07] <TimToady> but that's after rm -rf install nqp

[17:07] <TimToady> grondilu: how violently did you clean up the previous version?

[17:08] <TimToady> or anyone else who's repro'd this?

[17:08] <FROGGS> it built fine for me too, without rm -rf'ing anything

[17:09] *** kurahaupo_mobile joined
[17:10] *** bowtie joined
[17:10] <PerlJam> I didn't nuke the nqp dir before I did my build, but I did a git clean -dxf

[17:13] * TimToady grumbles about error messages that say "near"

[17:16] *** jnap joined
[17:17] *** hoverboard left
[17:17] <TimToady> I guess it's really at stage1

[17:19] <TimToady> I note that that is the first occurance of « in the file

[17:28] <grondilu> TimToady: I did not clean it at all.  I thought it was automatic.

[17:28] * grondilu removes the install dir

[17:29] <timotimo> i seem to think my apartment gets cleaned automatically, too. that would explain why it's so dirty :P

[17:29] *** [Sno] joined
[17:30] <grondilu> well, now that you mentio it, I do remember that removing install and blib are required from times to times. 

[17:32] *** kbaker left
[17:34] <TimToady> in this case, removing nqp/ might be necessary

[17:34] * colomon rebooted the server and reran the smoke test, and we're back to the same state as yesterday, except someone++ fixed CSS::Grammar.

[17:38] *** hoverboard joined
[17:38] *** hoverboard is now known as Guest96733

[17:39] *** virtualsue left
[17:39] <grondilu> well, the build failed again, despite the fact that I had removed blib and install.  Did I forget something?

[17:40] <grondilu> .oO( mabe nqp )

[17:40] * grondilu emoves nqp

[17:42] *** Guest96733 left
[17:42] *** Guest96733 joined
[17:42] *** Guest96733 is now known as hoverboard

[17:42] <masak> "emove" should totally be a word.

[17:43] <itz_> yeah its odd "make clean" doesn't rm npq

[17:43] <itz_> maybe it should

[17:44] <masak> itz_: is there a "make realclean" -- there used to be one that did that.

[17:44] <moritz> nope

[17:44] <moritz> 'make realclean' also cleans out the Makefile

[17:44] *** kurahaupo_mobile left
[17:44] <timotimo> it really shouldn't - except if you --gen-nqp'd

[17:44] <moritz> but not NQP, which is a different project

[17:49] <itz_> I meant the "clean" target in the nqp Makefile

[17:49] <itz_> which doesn't rm nqp .. maybe there should be a realclean like rakudo and MoarVM which does rm nqp

[17:50] <grondilu> hum... got the error again.

[17:51] <FROGGS> :(

[17:52] *** ajr_ left
[17:53] *** guru joined
[17:53] <TimToady> did it include did it include the hex code in the error message this time?

[17:54] *** guru is now known as Guest71724

[17:54] *** Guest71724 is now known as ajr_

[17:55] <grondilu> TimToady: not sure what hex code you're talking about.  Here is the error message:  http://paste.siduction.org/20140305175524

[17:57] <TimToady> no, it didn't, probably because it's using the old stage 0 to try to compile the stage 1

[17:58] <grondilu> isn't the old stage zero in nqp/MoarVM?  If so, since I did remove it, why doesn't it get updated to the latest?

[17:58] *** ajr_ left
[17:59] <FROGGS> grondilu: no, stage0 is in nqp

[18:00] <TimToady> what kind of a machine are you running on?  which OS?

[18:01] <grondilu> Linux redkey 3.13-3.towo-siduction-686 #1 SMP PREEMPT Fri Feb 14 13:57:25 UTC 2014 i686 GNU/Linux

[18:02] <TimToady> so little-endian

[18:02] <grondilu> indeed

[18:03] <TimToady> any special locale settings?

[18:05] <dalek> nqp: 90f2864 | larry++ | tools/build/MOAR_REVISION:

[18:05] <dalek> nqp: bump MOAR to get negative char test

[18:05] <dalek> nqp: review: https://github.com/perl6/nqp/commit/90f2864f5a

[18:06] <TimToady> m: say "«==»".encode("utf-8").decode("latin-1")

[18:06] <camelia> rakudo-moar fa46c8: OUTPUT«Can not decode a utf-8 buffer as if it were latin-1␤  in method decode at src/gen/m-CORE.setting:5355␤  in block  at /tmp/m0mews4FLi:1␤␤»

[18:06] <TimToady> !!!

[18:07] <masak> hee

[18:07] <jnthn> .encode('utf-8') returns a utf8, not a generic Buf.

[18:07] <jnthn> And it's "smart enough" to "help" you not decode it wrongly...

[18:08] <masak> :/

[18:08] <jnthn> Made sense at the itme I worte it that way :P

[18:08] <jnthn> detrain &

[18:08] <TimToady> m: say Buf.new("«==»".encode("utf-8")[]).decode("latin-1")

[18:08] <camelia> rakudo-moar fa46c8: OUTPUT«Â«==Â»␤»

[18:08] <masak> \o/

[18:08] <pmichaud> good afternoon, #perl6

[18:09] <masak> pmichaud! \o/

[18:09] <TimToady> it would be complaining about a spurious » if it were taking Â as the delimiter

[18:10] *** tgt joined
[18:15] *** treehug8_ joined
[18:16] <dalek> rakudo/nom: 5d084b8 | larry++ | tools/build/NQP_REVISION:

[18:16] <dalek> rakudo/nom: bump nqp to propagate negative char check to nom

[18:16] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5d084b83e3

[18:17] <TimToady> so it seems like it has to be a CCLASS_WHITESPACE issue, not an encoding issue

[18:17] *** treehug88 left
[18:18] <TimToady> but it seems to be an issue in the stage0 compiler

[18:29] *** Rotwang joined
[18:30] * grondilu is back

[18:31] <TimToady> which, at the time, was purely using MVM_UNICODE_PROPERTY_WHITE_SPACE, so shouldn't have any locale dependencies, nor should it vary from machine to machine

[18:33] <TimToady> grondilu: is this a 32-bit machine?

[18:33] <TimToady> or 64?

[18:33] <grondilu> 32

[18:33] <TimToady> there's a difference

[18:34] <grondilu> (it's an intel 686, so 32 bits)

[18:35] <TimToady> I've noticed some confusion in some of the opcodes where oplist/interp thinks there are 64-bit args and the C code says MVMint32 for the type

[18:35] <TimToady> so maybe something of that nature is messing up

[18:36] * TimToady doesn't know what moar does with a C MVMint32 that gets mapped to a .i64 arg in interp.c

[18:38] <TimToady> well, MVMCodepoint32

[18:45] <[Coke]> ahahahaha. "oh, Maybe I'll bump up the daily runs on the new box to start now instead of whenever I kicked them off yesterday, slow move them earlier in the day."

[18:45] <[Coke]> Login to the box. crontab -l. date. ... oh. only have to wait 13 seconds.... there.

[18:46] <FROGGS> :o)

[18:46] *** laidback_01 left
[18:47] <[Coke]> now only like 4-5 hours to get the result!

[18:49] <TimToady> but the codepoint for testing whitespace doesn't suffer any 32/64 skew that I can see offhand, unless someone changed how characters are pulled out of strings at an offset

[18:52] *** guru joined
[18:52] *** guru is now known as Guest74452

[18:52] *** Guest74452 is now known as ajr_

[18:53] <TimToady> if somehow the semantics of MVM_string_get_codepoint_at changed, that might have a version skew effect

[18:55] <TimToady> m: say 'A'.&uniprop-bool('Any')

[18:55] <camelia> rakudo-moar 4345b6: OUTPUT«(signal SEGV)»

[18:55] <TimToady> I keep wondering if that's a 32-bit problem too

[18:55] <TimToady> is camelia running on 32-bits?

[18:57] *** yoleaux left
[18:57] <TimToady> p: say $*VM<config><archname>

[18:58] <camelia> rakudo-parrot 4345b6: OUTPUT«x86_64-linux-gnu-thread-multi␤»

[18:58] <TimToady> well, so much for that theory :)

[19:01] <TimToady> but I don't see any 32/64 version skew in the codepath down to MVM_string_is_cclass

[19:01] *** hoelzro joined
[19:01] *** jtpalmer joined
[19:01] <TimToady> nothing changed in those signatures

[19:01] *** retupmoca joined
[19:01] <FROGGS> I've got an ubuntu 12.04 x86

[19:01] <FROGGS> I can perhaps test it on that box

[19:02] *** atrodo joined
[19:02] <TimToady> that seems like the best plan at this point; I don't think I have a 32-bit handy

[19:02] <FROGGS> ohh, I love VM's that boot within 3s

[19:03] *** yoleaux joined
[19:03] *** ChanServ sets mode: +v yoleaux

[19:03] <TimToady> I'll look through unicode_db.c's types to see if there's anything that may be assuming 64-bit

[19:05] *** ivan`` joined
[19:05] *** tchoury joined
[19:06] <FROGGS> src/core/interp.c: In Funktion »MVM_interp_run«:

[19:06] <FROGGS> src/core/interp.c:2106:42: Warnung: Typkonvertierung von Zeiger auf Ganzzahl anderer Breite [-Wpointer-to-int-cast]

[19:07] <FROGGS> it is in GERMAN!! but maybe you understand it :o)

[19:08] <FROGGS> hmmm, but that is op getwhere

[19:08] *** darutoko left
[19:11] <TimToady> which looks like it is intentionally casting a pointer to an integer

[19:12] <TimToady> a 32-bit pointer should fit into a 64-bit integer though

[19:12] <FROGGS> yeah, true

[19:12] <TimToady> I don't suppose there are 32-bit machines with busted 64-bit integer support?

[19:12] <FROGGS> nqp built fine

[19:12] <TimToady> huh

[19:13] <FROGGS> but rakudo assplodes:

[19:13] <FROGGS> /home/froggs/dev/nqp/bin/nqp-m --target=mbc --output=blib/Perl6/World.moarvm --encoding=utf8 \

[19:13] <FROGGS> 	    src/Perl6/World.nqp

[19:13] <FROGGS> No unspace allowed in regex; if you meant to match the literal character, please enclose in single quotes ('»') or use a backslashed form like \xbb at line 2507, near "/ {\n      "

[19:14] <TimToady> is this with HEAD?

[19:14] <FROGGS> I cloned it just now

[19:15] <TimToady> maybe it thinks n is a space?

[19:15] <FROGGS> all three repos

[19:15] <TimToady> or misses, and gets the space after?

[19:15] <FROGGS> or it thinks / is a backslash

[19:15] <TimToady> or that

[19:16] <FROGGS> that is the line: if $next ~~ /\)|\]|\}|\»/ 

[19:16] <TimToady> you didn't change anything regarding the semantics of string offsets somehow?

[19:16] <FROGGS> no

[19:17] <FROGGS> maybe it is timotimo string optimization?

[19:17] <FROGGS> timotimo++'s*

[19:17] <TimToady> maybe

[19:17] <TimToady> but why did it wait till rakudo this time, if it's the same bug?

[19:18] <FROGGS> dunno

[19:18] <FROGGS> weird is that » is involved in both cases

[19:20] <TimToady> ja

[19:22] <FROGGS> ahh, that "('»')" is not an example, it is the thing it is complaining about

[19:22] <TimToady> yes

[19:22] <TimToady> it a less than LTA message :)

[19:22] <FROGGS> so again it thinks that this thingy is whitespace

[19:22] <TimToady> yeah

[19:24] <TimToady> the current code hardwires spaces under '~', maybe we should hardwire everything up to 0xff

[19:25] *** Sqirrel joined
[19:26] <TimToady> w: .ord.base(16).say if /\s/ for "\x0"..."\xff"

[19:27] <TimToady> umm

[19:28] <TimToady> oh, duh

[19:28] <masak> 'w:' ?

[19:28] <FROGGS> w:

[19:28] <FROGGS> hehe

[19:28] <TimToady> m: .ord.base(16).say if /\s/ for "\x0"..."\xff"

[19:28] <camelia> rakudo-moar 4345b6: OUTPUT«9␤A␤B␤C␤D␤20␤85␤A0␤»

[19:28] <TimToady> lysdexics are us

[19:28] <FROGGS> that is upsido down then :o)

[19:29] <FROGGS> m: say "»".ord

[19:29] <camelia> rakudo-moar 4345b6: OUTPUT«187␤»

[19:29] <FROGGS> m: say "»".ord - 128

[19:29] <camelia> rakudo-moar 4345b6: OUTPUT«59␤»

[19:29] <TimToady> it's ubsipe pown

[19:30] <TimToady> m: .ord.base(16).say if /<:space/ for "\x0"..."\xff"

[19:30] <camelia> rakudo-moar 4345b6: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/bJd42q3w0T␤Unable to parse expression in metachar:sym<assert>; couldn't find final '>' ␤at /tmp/bJd42q3w0T:1␤------> [32m.ord.base(16).say if /<:space[33m⏏[31m/ for "\x0"..."\xff"[0m␤ …»

[19:30] <TimToady> m: .ord.base(16).say if /<:space>/ for "\x0"..."\xff"

[19:30] <camelia> rakudo-moar 4345b6: OUTPUT«20␤»

[19:30] <TimToady> m: .ord.base(16).say if /<:whitespace>/ for "\x0"..."\xff"

[19:30] <camelia> rakudo-moar 4345b6: OUTPUT«9␤A␤B␤C␤D␤20␤85␤A0␤»

[19:31] <TimToady> m: .ord.base(16).say if /<space>/ for "\x0"..."\xff"

[19:31] <camelia> rakudo-moar 4345b6: OUTPUT«9␤A␤B␤C␤D␤20␤85␤A0␤»

[19:31] *** aindilis` left
[19:32] <FROGGS> nqp-m -e 'say( "»" ~~ /\»/ )'

[19:32] <FROGGS> No unspace allowed in regex; if you meant to match the literal character, ...

[19:32] <geekosaur> I would ask if the problem is perhaps deeper, like \ is taken only as an unspace introducer

[19:32] <FROGGS> nqp-m: say( "»" ~~ /\»/ )

[19:32] <camelia> nqp-moarvm: OUTPUT«»␤»

[19:32] <geekosaur> like, oh, that

[19:32] <FROGGS> weee ud

[19:33] <TimToady> nqp-m: say( "»" ~~ /'»'/ )

[19:33] <camelia> nqp-moarvm: OUTPUT«»␤»

[19:33] <FROGGS> my bet is this commit: https://github.com/perl6/nqp/commit/8aab2120a12e77498111e2e7078c05dd618d25b5

[19:33] <FROGGS> though it does not make sense

[19:34] <FROGGS> nqp-m -e 'say( "»" ~~ /"»"/ )'

[19:34] <FROGGS> »

[19:34] <TimToady> nqp-m: say( "»" ~~ /\s/ )

[19:34] <camelia> nqp-moarvm: OUTPUT«Substring length (-4) cannot be negative␤   at gen/moar/stage2/QRegex.nqp:1155  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/QRegex.moarvm:Str:23)␤ from gen/moar/stage2/NQPCORE.setting:674  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/NQPCORE.setting.moarvm:…»

[19:34] <TimToady> say what

[19:35] <TimToady> that looks like String Offset damage

[19:35] <TimToady> so I think our bug is in pulling the wrong character out to match

[19:35] <FROGGS> that -4 is about a failed match

[19:35] <FROGGS> nqp-m: say( "a" ~~ /b/ )

[19:35] <camelia> nqp-moarvm: OUTPUT«Substring length (-3) cannot be negative␤   at gen/moar/stage2/QRegex.nqp:1155  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/QRegex.moarvm:Str:23)␤ from gen/moar/stage2/NQPCORE.setting:674  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/NQPCORE.setting.moarvm:…»

[19:36] <FROGGS> kinda

[19:36] <FROGGS> nqp-m: say( "a" ~~ /bb/ )

[19:36] <camelia> nqp-moarvm: OUTPUT«Substring length (-3) cannot be negative␤   at gen/moar/stage2/QRegex.nqp:1155  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/QRegex.moarvm:Str:23)␤ from gen/moar/stage2/NQPCORE.setting:674  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/NQPCORE.setting.moarvm:…»

[19:36] <TimToady> nqp-m: say( "     »     " ~~ /<?before '»'>\s/ )

[19:36] <camelia> nqp-moarvm: OUTPUT«Substring length (-14) cannot be negative␤   at gen/moar/stage2/QRegex.nqp:1155  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/QRegex.moarvm:Str:23)␤ from gen/moar/stage2/NQPCORE.setting:674  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/NQPCORE.setting.moarvm…»

[19:37] <moritz> nqp-m: my $m := 'a' ~~ /bb/; say($m.from); say($m.to);

[19:37] <camelia> nqp-moarvm: OUTPUT«0␤-3␤»

[19:37] <moritz> nqp-m: my $m := 'a' ~~ /bb/; say($m.from); say($m.to); say($m.Str)

[19:37] <camelia> nqp-moarvm: OUTPUT«Substring length (-3) cannot be negative␤   at gen/moar/stage2/QRegex.nqp:1155  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/QRegex.moarvm:Str:23)␤ from /tmp/vY4FdcFWVY:1  (<ephemeral file>::83)␤ from gen/moar/stage2/NQPHLL.nqp:1091  (/home/p6eval/rakudo-in…»

[19:37] <moritz> so it's only .Str that's broken (at least in this example)?

[19:37] <FROGGS> moritz: yes

[19:38] <FROGGS> parrot is igno^\Wtolerant about that

[19:38] <FROGGS> nqp: say( "     »     " ~~ /<?before '»'>\s/ )

[19:38] <moritz> but probably not by substringing, but rather by special-casing

[19:38] <camelia> nqp-moarvm: OUTPUT«Substring length (-14) cannot be negative␤   at gen/moar/stage2/QRegex.nqp:1155  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/QRegex.moarvm:Str:23)␤ from gen/moar/stage2/NQPCORE.setting:674  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/NQPCORE.setting.moarvm…»

[19:38] <camelia> ..nqp-jvm, nqp-parrot: OUTPUT«␤»

[19:38] <TimToady> is something in moar not checking for negatives where it should?

[19:39] <FROGGS> nqp: my $m := 'a' ~~ /bb/; say($m.from); say($m.to);

[19:39] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«0␤-3␤»

[19:39] <moritz> TimToady: I'd say Match.Str

[19:39] <FROGGS> nqp: my $m := 'a' ~~ /bb/; say($m.from); say($m.to); say($m.Bool)

[19:39] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«0␤-3␤0␤»

[19:39] <TimToady> something that could influence the \s test for «==»?

[19:40] * TimToady needs brane nutrients

[19:40] <FROGGS> perhaps we have to check that: https://github.com/perl6/nqp/blob/master/src/vm/moar/QAST/QASTRegexCompilerMAST.nqp#L990

[19:41] <FROGGS> (because I've written it)

[19:43] <FROGGS> nqp: say( "»" ~~ /\W/ )

[19:43] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«»␤»

[19:43] *** ruthless joined
[19:44] <timotimo> oh, did my optimizations break something again?

[19:44] <FROGGS> timotimo: dunno, was just a wild guess

[19:44] <timotimo> i hope it proves untrue

[19:44] <moritz> try the build step with --optimize=off?

[19:44] <TimToady> there seems to be some problem with « or » matching on 32-bit machines

[19:44] <FROGGS> k

[19:45] <FROGGS> moritz: does not help

[19:46] <FROGGS> timotimo: is there a way to turn off the optimization in moar?

[19:46] <timotimo> you'll have to comment it out, or put  false && into the if statement or something

[19:46] <timotimo> in src/string/ops.c in MVM_flatten_strings

[19:46] <timotimo> the one that has memcpy stuff in it

[19:46] <FROGGS> k

[19:48] <FROGGS> no, still fails

[19:49] <timotimo> yay

[19:49] <TimToady> nqp: say( "»" ~~ /\w/ )

[19:49] *** nwc10_ is now known as nwc10

[19:49] <camelia> nqp-moarvm: OUTPUT«Substring length (-4) cannot be negative␤   at gen/moar/stage2/QRegex.nqp:1155  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/QRegex.moarvm:Str:23)␤ from gen/moar/stage2/NQPCORE.setting:674  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/NQPCORE.setting.moarvm:…»

[19:49] <camelia> ..nqp-jvm, nqp-parrot: OUTPUT«␤»

[19:50] <TimToady> nqp: my $m := '»' ~~ /\W/; say($m.from); say($m.to); say($m.Bool)

[19:51] <camelia> nqp-jvm: OUTPUT«(timeout)»

[19:51] <camelia> ..nqp-moarvm, nqp-parrot: OUTPUT«0␤1␤1␤»

[19:51] <FROGGS> same on my x86 box

[19:54] <timotimo> m: "🗻⛽">>.&uniname.say

[19:54] <camelia> rakudo-moar 4345b6: OUTPUT«MOUNT FUJI␤»

[19:54] <timotimo> oh, wrong

[19:54] <timotimo> m: "🗻⛽".comb>>.&uniname.say

[19:54] <camelia> rakudo-moar 4345b6: OUTPUT«MOUNT FUJI FUEL PUMP␤»

[19:54] <timotimo> m: "🐉🗻⛽".comb>>.&uniname.say

[19:54] <camelia> rakudo-moar 4345b6: OUTPUT«DRAGON MOUNT FUJI FUEL PUMP␤»

[19:54] <TimToady> nqp: my $m := '»' ~~ /\s/; say($m.from); say($m.to); say($m.Bool)

[19:55] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«1␤-3␤0␤»

[19:56] <tadzik> what

[19:56] <tadzik> Those might just start being my favourite absurd unicode characters

[19:56] <tadzik> ah, these are 3 charcters :(

[19:56] <tadzik> I thought DRAGON MOUNT FUJI FUEL PUMP is a single one

[19:57] <TimToady> nqp: my $m := '»' ~~ /<space>/; say($m.from); say($m.to); say($m.Bool)

[19:57] <camelia> nqp-jvm: OUTPUT«(timeout)»

[19:57] <camelia> ..nqp-moarvm, nqp-parrot: OUTPUT«1␤-3␤0␤»

[19:57] *** Zaydon joined
[19:57] <TimToady> and a new game is born, spelling things with uninames

[19:58] <timotimo> :3

[19:58] <vendethiel> tadzik: well, having a mount fuji character isn't really useful though :o)

[19:58] *** Guest94499 joined
[19:58] <Guest94499> تحذير

[19:58] <Guest94499>              warning          you may be  watched     

[19:58] <Guest94499>   do   usa & israel   use  the internet ( youtube, facebook, twitter, chat rooms,skype,ect...)to collect informations,,,,can we call that spying ?

[19:58] <Guest94499> do they record&analyse everything you type????

[19:58] <Guest94499> why they ask for ur name,age,gender,occupation,place of work,ur mobile number.............ect, can they use these informations harming you?!!  

[19:58] <Guest94499>                                        warning          you may be  watched     

[19:58] <Guest94499>   do   usa & israel   use  the internet ( youtube, facebook, twitter, chat rooms,skype,ect...)to collect informations,,,,can we call that spying ?

[19:58] <Guest94499> do they record&analyse everything you type????

[19:58] <Guest94499> why they ask for ur name,age,gender,occupation,place of work,ur mobile number.............ect, can they use these informations harming you?!!

[19:58] <Guest94499> warning          you may be  watched     

[19:58] <Guest94499>   do   usa & israel   use  the internet ( youtube, facebook, twitter, chat rooms,skype,ect...)to collect informations,,,,can we call that spying ?

[19:58] <Guest94499> do they record&analyse everything you type????

[19:58] <Guest94499> why they ask for ur name,age,gender,occupation,place of work,ur mobile number.............ect, can they use these informations harming you?!!

[19:58] <Guest94499> warning          you may be  watched     

[19:58] *** Guest94499 left
[19:58] <FROGGS> um

[19:58] <vendethiel> well.

[19:58] <FROGGS> that escalated quickly

[19:58] *** Guest94499 joined
[19:59] *** ChanServ sets mode: +o moritz

[19:59] <FROGGS> hehe

[19:59] *** moritz sets mode: +b *!*m@41.153.216.*

[19:59] *** Guest94499 was kicked by moritz (Guest94499))
[19:59] *** moritz sets mode: -o moritz

[20:01] <vendethiel> hehe++

[20:02] <vendethiel> moritz: do you know how the configuration option not to auto-op is called ? I was looking for it the other day, couldnt find it

[20:03] <moritz> vendethiel: dunno, not auto-opping is default

[20:03] <vendethiel> moritz: ah, might be default on freenode, I see

[20:03] <geekosaur> nickserv defaults to opping you on channel join if you have op access

[20:03] <geekosaur> nickserv "help set noop"

[20:04] <vendethiel> geekosaur++ # "set noop", thanks, I'll take note

[20:04] <geekosaur> (well, maybe more recently created accounts default to it turned off; mine certainly did not)

[20:06] <timotimo> hmm

[20:06] <timotimo> r: use noop;

[20:06] <camelia> rakudo-jvm 5d084b: OUTPUT«(timeout)»

[20:06] <camelia> ..rakudo-parrot 5d084b: OUTPUT«===SORRY!===␤Could not find noop in any of: /home/p6eval/rakudo-inst-1/lib/parrot/6.1.0-devel/languages/perl6/site/lib, /home/p6eval/rakudo-inst-1/lib/parrot/6.1.0-devel/languages/perl6/vendor/lib, /home/p6eval/rakudo-inst-1/lib/parrot/6.1.0-devel/lang…»

[20:06] <camelia> ..rakudo-moar 5d084b: OUTPUT«===SORRY!===␤Could not find noop in any of: /home/p6eval/rakudo-inst-1/languages/perl6/site/lib, /home/p6eval/rakudo-inst-1/languages/perl6/vendor/lib, /home/p6eval/rakudo-inst-1/languages/perl6/lib, /home/p6eval/.perl6/2014.02-68-g5d084b8/lib␤»

[20:06] *** tchoury left
[20:07] *** telex left
[20:08] <TimToady> m: say "\e•≬⧧🌀⛓"».&uniname

[20:08] <camelia> rakudo-moar 5d084b: OUTPUT«ESCAPE␤»

[20:08] *** telex joined
[20:08] <TimToady> m: say "\e•≬⧧🌀⛓"».ords».&uniname

[20:08] <camelia> rakudo-moar 5d084b: OUTPUT«ESCAPE BULLET BETWEEN THERMODYNAMIC CYCLONE CHAINS␤»

[20:09] <FROGGS> hehe

[20:09] <vendethiel> say "•≬⧧🌀⛓"».ords».&uniname

[20:09] <vendethiel> m: say "•≬⧧🌀⛓"».ords».&uniname

[20:09] <camelia> rakudo-moar 5d084b: OUTPUT«BULLET BETWEEN THERMODYNAMIC CYCLONE CHAINS␤»

[20:09] <timotimo> m)

[20:10] <vendethiel> TimToady++

[20:10] *** kurahaupo_mobile joined
[20:11] <vendethiel> TimToady: idea : what unicode poetry

[20:11] <FROGGS> TimToady: I am going to bisect moarvm now, seems to be between 2014.02 and HEAD

[20:11] <timotimo> unihaikode

[20:11] <vendethiel> timotimo++

[20:11] <lue> FROGGS: what issue are you looking for?

[20:12] <TimToady> m: say "⊨🍄👸👘"».ords».&uniname

[20:12] <camelia> rakudo-moar 5d084b: OUTPUT«TRUE MUSHROOM PRINCESS KIMONO␤»

[20:12] <FROGGS> lue: this: nqp-m -e '/\»/'

[20:12] <FROGGS> Unspace not allowed in regex at line 2, near "/"

[20:12] <lue> ah, OK

[20:14] <TimToady> but apparently only on 32-bit machines

[20:16] <TimToady> m: say "\cX💣\cG"».ords».&uniname

[20:16] <camelia> rakudo-moar 5d084b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/25INwcMLAZ␤'X' is not a valid number␤at /tmp/25INwcMLAZ:1␤------> [32msay "\cX[33m⏏[31m💣\cG"».ords».&uniname[0m␤»

[20:18] <tadzik> vendethiel: well, I think it's more useful than FRONT FACING BABY CHICK

[20:19] <FROGGS> 26e596f1f0127e3ab3b6c694f922e4df602761e8 is the first bad commit

[20:19] <FROGGS> only fetch char once for built-in cclasses

[20:19] <TimToady> m: say "\x18💣\x7"».ords».&uniname

[20:19] <camelia> rakudo-moar 5d084b: OUTPUT«CANCEL BOMB BELL␤»

[20:20] <TimToady> hmm, so it's my fault after all :)

[20:20] <tadzik> I remember a channel where people were kicked if they joined and didn't say Hi =>

[20:20] <tadzik> or a Hi equivalent

[20:20] <FROGGS> TimToady: of course, you were the only active hacker :o)

[20:21] <vendethiel> tadzik: and the hardcore version of this channel had r9k bot activated?

[20:21] <tadzik> I'm not familiar with r9k bot

[20:22] <vendethiel> tadzik: you're only allowed to say a sentence one time. I believe it was initiated on xkcd's irc

[20:22] <tadzik> heh

[20:22] <FROGGS> p: say '»' < '~'

[20:22] <camelia> rakudo-parrot 5d084b: OUTPUT«Cannot call 'Real'; none of these signatures match:␤:(Mu:U \v: *%_)␤  in any  at gen/parrot/BOOTSTRAP.nqp:1219␤  in any  at gen/parrot/BOOTSTRAP.nqp:1210␤  in method Real at gen/parrot/CORE.setting:1032␤  in method Real at gen/parrot/CORE.setti…»

[20:22] <tadzik> I have a weechat plugin that does that in a hardcore way

[20:22] <FROGGS> p: say '»'.ord < '~'.ord

[20:22] <camelia> rakudo-parrot 5d084b: OUTPUT«False␤»

[20:22] <tadzik> you know those people who press return instead of every other space?

[20:22] *** xenoterracide joined
[20:24] <masak> who would

[20:24] <masak> ever do

[20:24] <masak> such a

[20:24] <masak> thing?

[20:26] <tadzik> way too many people :)

[20:26] <tadzik> https://gist.github.com/tadzik/9375874, if you ever feel a need for such thing :P

[20:31] <vendethiel> tadzik: I know I do that :(

[20:33] <FROGGS> m: say '~'.ord

[20:33] <camelia> rakudo-moar 5d084b: OUTPUT«126␤»

[20:33] <FROGGS> m: say '»'.ord

[20:33] <camelia> rakudo-moar 5d084b: OUTPUT«187␤»

[20:34] <FROGGS> TimToady: cp in your patch when checking for WHITESPACE is never 187

[20:36] <TimToady> interesting

[20:36] <TimToady> so the problem is uphill and not downhill from there

[20:37] <tadzik> vendethiel: now you have a plugin to do that for you :D

[20:38] <tadzik> but you have to write it all in one line in order to use it, so it's kind of a therapy :P

[20:38] <FROGGS> it almost looks like as if it checks the \ instead of the »

[20:38] <vendethiel> tadzik: I don't have perl5 installed

[20:38] <TimToady> the old MVM_string_offset_has_unicode_property_value used MVM_string_get_codepoint_at_unchecked, but this code uses MVM_string_get_codepoint_at

[20:38] <TimToady> could that make a difference?

[20:38] <vendethiel> (and I don't use weechat :p)

[20:39] <FROGGS> I am going to check

[20:39] <FROGGS> the string is /\»/, and the offset is 1 btw

[20:39] <TimToady> er, nocheck rather

[20:39] <TimToady> that sounds right

[20:40] <FROGGS> but should I see the backslash in a C string?

[20:40] <TimToady> the only difference bounds checking, I think

[20:41] <TimToady> why wouldn't you see a backslash?

[20:43] <tadzik> heh

[20:43] <FROGGS> hmmm

[20:44] <PerlJam> FROGGS: what value does cp have if not 187?  Is it 92?

[20:45] <FROGGS> the last one before the exception is 92, yes

[20:46] <PerlJam> an offset of 0 should give 92 (that's the \ character)

[20:46] *** hoverboard is now known as lovetsunami

[20:47] *** bluescreen10 left
[20:47] <FROGGS> the string has the slashes of the regex too

[20:47] <FROGGS> so offset 1 would be the backslash

[20:48] <PerlJam> oh!  I thought those were meta purely for quoting.

[20:48] *** lovetsunami is now known as hoverboard

[20:48] <PerlJam> then somehow the offset if borked?

[20:48] <PerlJam> s/if/is/

[20:48] <FROGGS> no, it needs to check the backslash too perhaps

[20:49] <TimToady> well, maybe just a skip-ws test in the regex compiler, but if so, what tests for \<ws>?

[20:50] <FROGGS>     token backslash:sym<unsp> {

[20:50] <FROGGS>         [\s|'#'] {}

[20:50] <TimToady> I think that's later.  you're still just looking for non-significant ws in the regex to find the \, I think

[20:51] <TimToady> after all, / \» / is also valid

[20:51] <TimToady> unless the ordinary ws skipper is calling unsp

[20:52] <TimToady> do you know that we've actually entered the unsp rule?

[20:55] <FROGGS> it shows up in the backtrace

[20:56] <FROGGS> but this might even be because we did not run the correct rule

[20:57] *** kaare__ joined
[20:59] *** Zaydon left
[21:03] *** dayangkun left
[21:05] <rurban_> parrot's Configure.PL --optimize is now recommended again. I just fixed the outstanding PPC floating point optimizer bug

[21:10] <FROGGS> that is still turned on by default

[21:16] *** dayangkun joined
[21:18] <FROGGS> TimToady: the old check MVM_unicode_codepoint_has_property_value(tc, cp, MVM_UNICODE_PROPERTY_WHITE_SPACE, 1) returned true for cp 92

[21:22] <FROGGS> no, wait

[21:25] <FROGGS> okay, these two things which are meant to do the same do infact different things:

[21:25] <FROGGS> 			MVM_unicode_codepoint_has_property_value(tc, cp, MVM_UNICODE_PROPERTY_WHITE_SPACE, 1),

[21:25] <FROGGS> 			MVM_string_offset_has_unicode_property_value(tc, s, offset, MVM_UNICODE_PROPERTY_WHITE_SPACE, 1)

[21:25] <masak> 'night, #perl6

[21:25] <FROGGS> gnight masak 

[21:29] <TimToady> but the latter is just a wrapper around the former, and doesn't appear to do anything weird

[21:30] <TimToady> the parameter types look consistent to me

[21:31] * FROGGS cries

[21:31] <FROGGS> why does a printf statement hide the error?

[21:31] <TimToady> threading?

[21:32] <TimToady> sensitive dependence on GC status?

[21:32] <jnthn> If you're in master, not moar-conc, there's certainly only gonna be one thread...

[21:32] <TimToady> it's just master

[21:32] <FROGGS> okay, casting the return value of MVM_string_offset_has_unicode_property_value to int does unhide the error again

[21:33] *** panchiniak joined
[21:34] *** stevan_ left
[21:34] *** bluescreen10 joined
[21:34] <TimToady> aha, looks like MVM_unicode_codepoint_has_property_value is missing from a .h file

[21:34] <TimToady> so maybe defaulting to int?

[21:35] <FROGGS> ohh

[21:35] <TimToady> which is different on a 32

[21:35] <FROGGS> yeah, I'm going to test that

[21:37] <TimToady> patch posted

[21:38] <FROGGS> that seems to do it!

[21:38] <FROGGS> TimToady++ # \o/

[21:39] <dalek> nqp: 0a80816 | larry++ | tools/build/MOAR_REVISION:

[21:39] <dalek> nqp: bump moar

[21:39] <dalek> nqp: review: https://github.com/perl6/nqp/commit/0a80816e4c

[21:40] <dalek> rakudo/nom: f492fb8 | larry++ | tools/build/NQP_REVISION:

[21:40] <dalek> rakudo/nom: bump nqp

[21:40] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f492fb8132

[21:40] <FROGGS> what a blunder... I am never going to be a C pro

[21:41] <TimToady> yes, well, we see how small seemingly dwimmy decisions at the start (let's just default the return type to int) can come back to bite you over and over

[21:41] <TimToady> that's why we're so strict about return types in Perl...oh wait...

[21:41] <FROGGS> and that is where I love Perl :o)

[21:41] <FROGGS> bah :P

[21:42] <TimToady> protip: when adding a function to a .c, add it to the .h too, unless it's static

[21:42] <FROGGS> well yes, I usually did that

[21:42] * TimToady wonders if he's made that blunder elsewhere in the last week

[21:43] <FROGGS> and I remember that we already had this issue half a year ago

[21:43] <FROGGS> sad that my brane didn't tell me

[21:43] <TimToady> actually, I know I've made that mistake elsewhere, because it caused issues until I rectified it, but I guess I misse3d one

[21:44] <FROGGS> 70.9s for stage parse of a 32bit in a virtual box is quite nice :o)

[21:44] <FROGGS> perl6-m installed

[21:45] *** Rotwang left
[21:45] <FROGGS> on a*

[21:46] *** aindilis joined
[21:46] <timotimo> why aren't we running our C stuff with a warning for that?

[21:46] <TimToady> grondilu: we think we may have fixed your issue

[21:46] <FROGGS> also pippo and lue I think

[21:47] <timotimo> don't we have -Wall, mister Wall?

[21:48] <FROGGS> *g*

[21:48] <FROGGS> we'd need a +Wall though

[21:49] <timotimo> Wall all the things!

[21:49] *** daniel-s_ joined
[21:49] * PerlJam reads scrollback

[21:50] *** xenoterracide left
[21:50] <FROGGS> nah, just pull and make :o)

[21:50] <PerlJam> I'm on it! :)

[21:51] <PerlJam> C's little foibles have caused so much grief over the years.  It's a wonder people still use it!   ;)

[21:51] <TimToady> m: say "\x18🚑℟"».ords».&uniname

[21:51] <camelia> rakudo-moar 5d084b: OUTPUT«CANCEL AMBULANCE RESPONSE␤»

[21:52] <TimToady> n: say "\cX".ord

[21:52] <camelia> niecza v24-109-g48a8de3: OUTPUT«24␤»

[21:52] <TimToady> r: say "\cX".ord

[21:52] <camelia> rakudo-parrot 5d084b, rakudo-jvm 5d084b, rakudo-moar 5d084b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤'X' is not a valid number␤at /tmp/tmpfile:1␤------> [32msay "\cX[33m⏏[31m".ord[0m␤»

[21:52] <TimToady> rakudobug

[21:53] <[Coke]> TimToady: I just saw a spec test that was specifically testing to insure that what followed \c was a number.

[21:53] <timotimo> that awkward moment when you look at an X and wonder if it's just an uppercase X or some strange unicode glyph

[21:54] *** hoverboard is now known as stankyfunk

[21:54] <lue> [Coke]: but, what about one-word unicode names? Sounds like a weird test to me.

[21:54] <timotimo> OH!

[21:54] *** BenGoldberg joined
[21:54] <timotimo> nodyn!

[21:55] <timotimo> you can run node.js applications on JVM

[21:55] * [Coke] digs for it, but doesn't see it, and chalks it up to this cold.

[21:55] <timotimo> so we can get rakudo onto the JVM in two exciting ways!

[21:56] <FROGGS> hrhr

[21:56] <FROGGS> err

[21:56] <FROGGS> hehe

[21:56] <[Coke]> # RT #83952

[21:56] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=83952

[21:56] <[Coke]> there we go. feel free to fix that test if needed.

[21:56] <[Coke]> nqp: "\cla"

[21:56] <camelia> nqp-moarvm: OUTPUT«Unrecognized \c character at line 2, near "la\""␤   at gen/moar/stage2/NQPHLL.nqp:369  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/NQPHLL.moarvm:panic:120)␤ from <unknown>:1  (/home/p6eval/rakudo-inst-2/languages/nqp/lib/NQPHLL.moarvm:charspec:366)␤ from <…»

[21:56] <camelia> ..nqp-jvm: OUTPUT«Unrecognized \c character at line 2, near "la\""␤  in panic (gen/jvm/stage2/NQPHLL.nqp:378)␤  in charspec (gen/jvm/stage2/NQPHLL.nqp)␤  in quote_escape:sym<chr> (gen/jvm/stage2/NQPHLL.nqp)␤  in !protoregex (gen/jvm/stage2/QRegex.nqp:784)␤  in quote_escape (…»

[21:56] <camelia> ..nqp-parrot: OUTPUT«Unrecognized \c character at line 2, near "la\""␤current instr.: 'panic' pc 15934 (gen/parrot/stage2/NQPHLL.pir:5941) (gen/parrot/stage2/NQPHLL.nqp:425)␤»

[21:57] <[Coke]> p6: "\cla"

[21:57] <camelia> rakudo-parrot 5d084b, rakudo-jvm 5d084b, rakudo-moar 5d084b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Unrecognized \c character␤at /tmp/tmpfile:1␤------> [32m"\c[33m⏏[31mla"[0m␤    expecting any of:␤        statement list␤        pre…»

[21:57] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Unrecognized \c character at /tmp/tmpfile line 1:␤------> [32m"\c[33m⏏[31mla"[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 1502 (die @ 5) ␤  at /home/p…»

[21:57] <lue> I don't even know:

[21:57] <lue> ===SORRY!===

[21:57] <lue> Error while compiling op if (source text: "$backlinks {\n        my $didReplace; # save time by not rewriting unchanged files\n        my $curf..."): Iteration past end of iterator

[21:58] <lue> (running the command    perl6-m -Ilib syngen.p6 --synopses=../specs --outdir=html --backlinks=../roast    in my synopsis generator)

[21:59] <timotimo> somewhere in the code for "if" in the qast compiler there must be some iteration code that b0rks

[21:59] <timotimo> maybe the optimizer is destroying the qast tree?

[22:01] <lue> -j and -p work, so it's moar specific.

[22:01] <lue> perl6-m --optimize=0  didn't help :(

[22:02] <dalek> nqp: 65cf12e | larry++ | tools/build/MOAR_REVISION:

[22:02] <dalek> nqp: bump moar some moar, sigh

[22:02] <dalek> nqp: review: https://github.com/perl6/nqp/commit/65cf12e5f0

[22:03] <FROGGS> lue: try --optimize=off

[22:04] <dalek> rakudo/nom: b6fed1a | larry++ | tools/build/NQP_REVISION:

[22:04] <dalek> rakudo/nom: bump, bump, bumpity, bump

[22:04] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b6fed1a696

[22:04] <FROGGS> timotimo: that makes a different, right?

[22:04] <lue> FROGGS: nope :/

[22:04] <FROGGS> k :o(

[22:05] <timotimo> -0 should also make a difference, but --off will make an even bigger difference

[22:05] <FROGGS> that wants golfing down then I fear

[22:05] <timotimo> if it doesn't change anything, it means it's not my fault :)

[22:05] <lue> FROGGS, timotimo:    https://gist.github.com/lue/2d85ada3a258d22669c0

[22:05] <timotimo> that also means i've contributed hardly anything besides optimizations, and that makes me a bit sad :|

[22:05] <PerlJam> timotimo: why sad?!?  That's *awesome*  :)

[22:06] <FROGGS> lue: is $backlinks an array?

[22:06] <lue> FROGGS: no, it's a commandline option

[22:06] <FROGGS> ahh, I see

[22:07] <timotimo> PerlJam: it's not exactly bringing perl 6 much closer to "production readiness" so far ;)

[22:08] <lue> (I have no clue how I would golf this, and bisecting would be slooow (unless I could cheat and use -I~/.perl6/lib instead of reinstalling modules with panda all the time, then it could possibly be a bit faster)

[22:08] <PerlJam> timotimo: of course ... having inavertently become the "optimization pumpking" for Perl 6, you'll then be the blame receptacle for why it's so slow. 

[22:08] <FROGGS> lue: just comment out stuff until the problem vanishes

[22:09] <lue> it dies on a simple "if $backlinks" statment, I don't know what I would comment out aside from the conditional :/

[22:09] <timotimo> hahaha

[22:09] <lue> I commented out the if conditional, and I get a less descriptive error out of it:    Error while compiling op call: Iteration past end of iterator

[22:09] <FROGGS> lue: well, then provide your few lines in a gist or so

[22:10] <timotimo> someone really needs to push me so that i finish the block inlining and cascading lexical-to-local transformation finally

[22:10] <FROGGS> hmmm

[22:10] <timotimo> i think all i need to succeed in that is a rubber duckie :)

[22:11] <FROGGS> timotimo: I wanna see that done until the weekend! ò.ó

[22:11] <lue> Commenting out the for statement works! Which is unfortunate, 'cos that's kinda necessary.

[22:11] <FROGGS> lue: can you paste your code?

[22:11] <lue> here's the offending loop: https://github.com/lue/synopsis-generator/blob/master/syngen.p6#L137

[22:11] <timotimo> FROGGS: pff. i don't need pressure, i need assistance ;)

[22:11] <FROGGS> timotimo: damn :o)

[22:11] *** skids left
[22:12] <FROGGS> lue: it still explodes when you comment out the stuff inside the loop?

[22:13] <lue> FROGGS: no, when I comment out the entire loop (with the help of embedded comments), it runs. Unfortunately that's not an actual solution.

[22:13] <FROGGS> lue: no, I mean just to comment out the content of the loop

[22:14] <lue> Commenting out the stuff in the loop (making for an empty loop) works, so something in there is breaking.

[22:14] <FROGGS> k

[22:14] <FROGGS> that is what I wanted to hear

[22:15] <lue> O, I think I can guess where the break is happening.

[22:15] <FROGGS> r: my $foobar = ''; $foobar.=subst(/"<p>"\x10FFFB(<-[􏿼]>+)\x10FFFC(<-[􏿽]>+)\x10FFFD"</p>"/, {q:c:to/EOBL/}, :g);␤x␤EOBL␤

[22:15] <camelia> rakudo-parrot 5d084b, rakudo-jvm 5d084b: ( no output )

[22:15] <camelia> ..rakudo-moar 5d084b: OUTPUT«===SORRY!===␤Error while compiling op call: Iteration past end of iterator␤»

[22:16] <lue> yep, https://github.com/lue/synopsis-generator/blob/master/syngen.p6#L142

[22:16] <lue> r: say "\x10FFFC" ~~ /􏿼/

[22:16] <camelia> rakudo-jvm 5d084b: OUTPUT«Unhandled exception: java.nio.charset.MalformedInputException: Input length = 1␤  in print_exception (gen/jvm/CORE.setting:11097)␤  in <anon> (gen/jvm/CORE.setting:11139)␤  in command_eval (gen/jvm/stage2/NQPHLL.nqp:1230)␤  in command_eval (src/Perl…»

[22:16] <camelia> ..rakudo-parrot 5d084b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Unrecognized regex metacharacter 􏿼 (must be quoted to match literally)␤at /tmp/tmpfile:1␤------> [32msay "\x10FFFC" ~~ /[33m⏏[31m􏿼/[0m␤    expecting any of:␤        p…»

[22:16] <camelia> ..rakudo-moar 5d084b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Null regex not allowed␤at /tmp/tmpfile:1␤------> [32msay "\x10FFFC" ~~ /􏿼/[33m⏏[31m<EOL>[0m␤»

[22:16] <FROGGS> r: my $foobar = ''; $foobar = $foobar.subst(/"<p>"\x10FFFB(<-[􏿼]>+)\x10FFFC(<-[􏿽]>+)\x10FFFD"</p>"/, {q:c:to/EOBL/}, :g);␤x␤EOBL␤

[22:16] <camelia> rakudo-parrot 5d084b, rakudo-jvm 5d084b: ( no output )

[22:16] <camelia> ..rakudo-moar 5d084b: OUTPUT«===SORRY!===␤Error while compiling op call: Iteration past end of iterator␤»

[22:17] <lue> r: say "\x10FFFC" ~~ /\x10FFFC/

[22:17] <camelia> rakudo-parrot 5d084b, rakudo-jvm 5d084b, rakudo-moar 5d084b: OUTPUT«｢􏿼｣␤␤»

[22:17] <lue> r: say "\x10FFFC" ~~ /\􏿼/

[22:17] <camelia> rakudo-jvm 5d084b: OUTPUT«Unhandled exception: java.nio.charset.MalformedInputException: Input length = 1␤  in print_exception (gen/jvm/CORE.setting:11097)␤  in <anon> (gen/jvm/CORE.setting:11139)␤  in command_eval (gen/jvm/stage2/NQPHLL.nqp:1230)␤  in command_eval (src/Perl…»

[22:17] <camelia> ..rakudo-parrot 5d084b: OUTPUT«｢􏿼｣␤␤»

[22:17] <camelia> ..rakudo-moar 5d084b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤No unspace allowed in regex; if you meant to match the literal character, please enclose in single quotes ('􏿼') or use a backslashed form like \x10fffc␤at /tmp/tmpfile:1␤------> [3…»

[22:17] <FROGGS> m: my $foobar = ''; $foobar = $foobar.subst(/a/, {q:c:to/EOBL/}, :g);␤x␤EOBL␤

[22:17] <camelia> rakudo-moar 5d084b: ( no output )

[22:17] <FROGGS> m: my $foobar = ''; $foobar = $foobar.subst(/"<p>"\x10FFFB(<-[􏿼]>+)\x10FFFC(<-[􏿽]>+)\x10FFFD"</p>"/, '', :g);␤

[22:17] <camelia> rakudo-moar 5d084b: OUTPUT«===SORRY!===␤Error while compiling op call: Iteration past end of iterator␤»

[22:17] <lue> FROGGS: it's the line above that that causes the failure, so it's to do with weird characters in the regex.

[22:18] <lue> r: say "A" ~~ /<-[􏿼]>/

[22:18] <camelia> rakudo-parrot 5d084b, rakudo-jvm 5d084b: OUTPUT«｢A｣␤␤»

[22:18] <camelia> ..rakudo-moar 5d084b: OUTPUT«===SORRY!===␤Error while compiling op call: Iteration past end of iterator␤»

[22:18] <FROGGS> lue++

[22:18] *** rindolf left
[22:18] <FROGGS> r: say "A" ~~ /<![􏿼]>/

[22:18] <camelia> rakudo-parrot 5d084b, rakudo-jvm 5d084b: OUTPUT«｢｣␤␤»

[22:18] <camelia> ..rakudo-moar 5d084b: OUTPUT«===SORRY!===␤Error while compiling op call: Iteration past end of iterator␤»

[22:18] <lue> r: say "􏿼" ~~ /\􏿼/  # this breaks on JVM and Moar too

[22:18] <camelia> rakudo-jvm 5d084b: OUTPUT«Unhandled exception: java.nio.charset.MalformedInputException: Input length = 1␤  in print_exception (gen/jvm/CORE.setting:11097)␤  in <anon> (gen/jvm/CORE.setting:11139)␤  in command_eval (gen/jvm/stage2/NQPHLL.nqp:1230)␤  in command_eval (src/Perl…»

[22:18] <camelia> ..rakudo-parrot 5d084b: OUTPUT«｢􏿼｣␤␤»

[22:18] <camelia> ..rakudo-moar 5d084b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤No unspace allowed in regex; if you meant to match the literal character, please enclose in single quotes ('􏿼') or use a backslashed form like \x10fffc␤at /tmp/tmpfile:1␤------> [3…»

[22:19] * PerlJam wonders if that rules out TimToady breakage ;)

[22:19] <lue> JVM is probably the fault of the JVM, but moar is just being weird there. parrot++

[22:20] <FROGGS> r: say "􏿼" ~~ /<!before 􏿼>/

[22:20] <camelia> rakudo-jvm 5d084b: OUTPUT«Unhandled exception: java.nio.charset.MalformedInputException: Input length = 1␤  in print_exception (gen/jvm/CORE.setting:11097)␤  in <anon> (gen/jvm/CORE.setting:11139)␤  in command_eval (gen/jvm/stage2/NQPHLL.nqp:1230)␤  in command_eval (src/Perl…»

[22:20] <camelia> ..rakudo-moar 5d084b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Null regex not allowed␤at /tmp/tmpfile:1␤------> [32msay "􏿼" ~~ /<!before 􏿼[33m⏏[31m>/[0m␤    expecting any of:␤        postfix␤        infix stopper␤        infix …»

[22:20] <camelia> ..rakudo-parrot 5d084b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Unrecognized regex metacharacter 􏿼 (must be quoted to match literally)␤at /tmp/tmpfile:1␤------> [32msay "􏿼" ~~ /<!before [33m⏏[31m􏿼>/[0m␤    expecting any of:␤   …»

[22:20] *** ruthless left
[22:20] <FROGGS> r: say "􏿼" ~~ /<!before '􏿼'>/

[22:20] <camelia> rakudo-parrot 5d084b, rakudo-jvm 5d084b, rakudo-moar 5d084b: OUTPUT«｢｣␤␤»

[22:21] *** tgt left
[22:21] *** stankyfunk is now known as hoverboard

[22:21] <lue> I wonder why moar thinks 􏿼 is a space char, and thus can't be unspaced in regexes.

[22:22] *** bluescreen10 left
[22:23] <TimToady> say "\x10fffc".&uniprop

[22:23] <TimToady> m: say "\x10fffc".&uniprop

[22:23] <camelia> rakudo-moar 5d084b: OUTPUT«Lo␤»

[22:23] <lue> r: say "" ~~ /<-[]>/

[22:23] <TimToady> odd, it said Ll here

[22:23] <camelia> rakudo-parrot 5d084b, rakudo-jvm 5d084b, rakudo-moar 5d084b: OUTPUT«Nil␤»

[22:23] <lue> m: say "".&uniprop

[22:23] <camelia> rakudo-moar 5d084b: OUTPUT«Co␤»

[22:26] *** pippo joined
[22:26] <pippo> Hello #perl6 

[22:26] <FROGGS> hi pippo

[22:26] <pippo> Hi FROGGS 

[22:27] <pippo> My perl6-m is back! Timtoady++ for solving the issue on 32 bit machines !!

[22:27] <pippo> :-))

[22:28] <FROGGS> \o/

[22:28] <FROGGS> yay!!

[22:28] *** kivutar joined
[22:28] <timotimo> anyone want to continue work on my perl 6 code to turn "rakudo-parrot 5d084b, rakudo-jvm 5d084b, rakudo-moar 5d084b" into a much shorter version?

[22:28] <timotimo> i found it on my hard drive :)

[22:29] <lue> Rakudo's being kinda weird with PUA characters I find :)

[22:29] <timotimo> https://gist.github.com/timo/c2119931370ee31360e7

[22:31] *** panchiniak left
[22:31] <lue> oh, nevermind. *I'm* being weird with interpreting what I typed into camelia :P

[22:32] <lue> r: say "" ~~ /\/

[22:32] <camelia> rakudo-parrot 5d084b, rakudo-jvm 5d084b, rakudo-moar 5d084b: OUTPUT«｢｣␤␤»

[22:32] <lue> r: say "𰀀" ~~ /\𰀀/

[22:32] <camelia> rakudo-jvm 5d084b: OUTPUT«Unhandled exception: java.nio.charset.MalformedInputException: Input length = 1␤  in print_exception (gen/jvm/CORE.setting:11097)␤  in <anon> (gen/jvm/CORE.setting:11139)␤  in command_eval (gen/jvm/stage2/NQPHLL.nqp:1230)␤  in command_eval (src/Perl…»

[22:32] <camelia> ..rakudo-parrot 5d084b, rakudo-moar 5d084b: OUTPUT«｢𰀀｣␤␤»

[22:33] <timotimo> (now the gist even has syntax highlighting)

[22:33] <BenGoldberg> .u no-break

[22:33] <yoleaux> U+0083 NO BREAK HERE [Cc] (<control>)

[22:33] <yoleaux> U+00A0 NO-BREAK SPACE [Zs] ( )

[22:33] <yoleaux> U+2011 NON-BREAKING HYPHEN [Pd] (‑)

[22:33] <lue> So yeah, rakudo needs some help with the more unusual codepoints :) [esp. JVM, which doesn't like !BMP]

[22:35] <timotimo> does that code seem clear to anybody? :P

[22:37] *** treehug8_ left
[22:38] <PerlJam> timotimo: seems overly complicated.

[22:41] <timotimo> lue, like mysql? :P

[22:41] <timotimo> PerlJam: there is probably a nicer algorithm and probably even nicer spellings of what i wanted to do

[22:41] *** ajr_ left
[22:41] <timotimo> feel free to improve upon it

[22:41] <timotimo> (and then port it to perl 5)

[22:41] <lue> timotimo: yeah. (Fun fact: when setting up my personal mediawiki for testing stuff, I specifically went for the option that went past the BMP, just on principle :P)

[22:47] *** dmol left
[22:58] <TimToady> the problem with classifying all the properties by type is that UNIDATA doesn't seem to carry property type info such as is listed in wp

[23:00] <TimToady> so I think we might have to make our own list

[23:00] <timotimo> i'll go make my own list!

[23:00] <timotimo> with hooks

[23:00] <timotimo> and, er, properties

[23:01] <timotimo> actually, forget the hooks!

[23:01] <lue> TimToady: it's in UAX#44 for some of them at least.

[23:01] <TimToady> the current getprop has some memory of what worked last time (str, int), but nothing official

[23:02] <TimToady> question is whether rakudo, nqp, or moar is the right level to install such a list

[23:03] <TimToady> the other vms might not make this info available readily

[23:03] <TimToady> so probably rakudo or nqp level

[23:04] *** stevan_ joined
[23:04] <lue> TimToady: I'd go with the nqp level, it's as close as we can get without entering the vms themselves.

[23:05] <pippo> good night #perl6

[23:05] *** pippo left
[23:05] <TimToady> hmm, does that mean we should really be hoisting some or all of moar's unicode lookups into nqp too?

[23:06] *** Psyche^_ joined
[23:07] * TimToady will nap on it &

[23:07] <lue> The JVM demonstrates that NQP has to do the unicodeing for some things, at least.

[23:07] <ashleydev> qg/mark

[23:10] *** Psyche^ left
[23:13] <lue> For some weird reason, this script I made that tests how every unicode character functions inside regexes is slowing eating up memory :)

[23:19] *** stevan_ left
[23:20] *** hoverboard is now known as adabsurdum

[23:26] *** virtualsue joined
[23:31] *** btyler left
[23:34] <timotimo> nap on nqp

[23:43] *** virtualsue left
[23:43] *** skids joined
[23:44] *** stevan_ joined
[23:45] *** hinachan joined
[23:46] <hinachan> I gess I see some familiar nicks in here..

[23:52] *** Celelibi joined
[23:59] *** adabsurdum left
