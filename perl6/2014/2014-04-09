[00:05] *** cooper- is now known as cooper

[00:05] *** cooper left
[00:05] *** cooper joined
[00:11] *** rurban joined
[00:15] *** rurban left
[00:21] <TimToady> for the record, I'm fine with assign_pos and assign_key

[00:21] <TimToady> though we might want to go a step further and have WHENCE-less lvalues that represent those, so we can pass lvalues to natives

[00:22] <TimToady> (in addition to those ops, not instead of)

[00:24] <TimToady> basically, we need some sort of GC-safe pointers to both scalar natives and composites of natives

[00:25] <TimToady> then $native++ becomes trivial to implement

[00:28] *** jnap left
[00:28] <TimToady> and if these pointers are themselves considered a native type, they could also be incremented easily to point to the next array entry (with bounds checking, presumably)

[00:28] <TimToady> as in Go's array pointers

[00:30] <TimToady> and there are a whole bunch of optimizations that come into play as soon as we know an array is of fixed size

[00:32] *** eternaleye left
[00:33] *** eternaleye joined
[00:38] *** bjz left
[00:38] *** bjz joined
[00:39] *** xenoterracide left
[00:40] *** ergq joined
[00:41] *** ergq left
[00:41] *** xenoterracide joined
[00:41] *** beginner joined
[00:41] <beginner> hello

[00:42] <beginner> what would you guys recommend the best way to learn perl is

[00:42] <TimToady> Learning Perl is a pretty good book for that

[00:43] *** dayangkun joined
[00:50] *** jnap joined
[00:52] <BenGoldberg> beginner, If you join #perl, you'll get lots more advice on how to learn perl than you will here.

[00:52] <BenGoldberg> The #perl6 channel is for discussing perl6, a programming language which has many similarities to perl(5), but which is most definitely not the same language.

[00:59] *** xenoterracide left
[01:00] *** xenoterracide joined
[01:00] *** beginner left
[01:04] *** xenoterracide left
[01:04] *** xenoterracide joined
[01:13] *** Alula left
[01:14] *** Alula joined
[01:22] *** semisem joined
[01:22] *** semisem left
[01:27] *** klapperl_ joined
[01:28] *** lustlife joined
[01:30] *** lizmat_ joined
[01:30] *** lizmat left
[01:30] *** klapperl left
[01:34] *** plobsing joined
[02:12] *** rurban joined
[02:19] *** rurban left
[02:23] *** hoverboard joined
[02:28] *** xragnar_ joined
[02:28] *** xragnar left
[02:28] *** xragnar_ is now known as xragnar

[02:43] *** hoverboard left
[02:46] *** jnap left
[02:46] *** rurban joined
[02:49] *** xenoterracide left
[02:57] *** bjz_ joined
[02:58] *** bjz left
[03:03] *** plobsing left
[03:03] *** thou joined
[03:07] *** plobsing joined
[03:11] *** thou left
[03:15] *** plobsing left
[03:21] *** rurban left
[03:24] *** thou joined
[03:31] *** havenwood joined
[03:33] *** molaf joined
[03:39] *** rurban joined
[03:55] *** pdcawley left
[03:56] *** pdcawley joined
[03:59] *** kaare_ joined
[03:59] *** klapperl joined
[04:01] *** klapperl_ left
[04:06] *** colomon left
[04:15] *** aindilis left
[04:18] *** rurban left
[04:18] *** aindilis joined
[04:30] *** Psyche^_ joined
[04:31] *** adu joined
[04:32] *** rurban joined
[04:35] *** Psyche^ left
[04:42] *** Guest65441 is now known as ponbiki

[04:45] *** lizmat joined
[04:45] *** lizmat_ left
[04:47] *** BenGoldberg left
[04:49] *** kaare_ left
[05:14] *** kaare_ joined
[05:15] *** SamuraiJack joined
[05:20] *** adu left
[05:36] *** rurban left
[05:48] *** dwarring left
[05:50] *** dmol joined
[05:52] *** woolfy joined
[05:56] *** renormalist left
[05:59] *** thou left
[05:59] *** renormalist joined
[06:06] *** woolfy left
[06:07] *** colomon joined
[06:07] *** rurban joined
[06:09] *** rurban1 joined
[06:11] *** rurban left
[06:13] *** rurban1 left
[06:32] *** hummeleB1 joined
[06:37] *** havenwood left
[06:42] *** lizmat left
[06:42] *** hummeleB1 left
[06:43] *** dayangkun_ joined
[06:45] *** dayangkun left
[06:47] *** kaleem joined
[06:55] <jnthn> morning, #perl6

[06:56] <moritz> \o jnthn, #perl6, *

[06:58] *** xinming__ left
[06:58] *** zakharyas joined
[06:59] *** xinming_ joined
[07:00] <jnthn> TimToady: Thanks; I'll look into an assign_pos/assign_key. Yes, I plotted the container spec stuff to let me do native things, and be able to convey it down to the VM. Just didn't get to implement it yet.

[07:03] <timotimo> o/

[07:04] *** fhelmberger joined
[07:09] *** rurban joined
[07:10] *** brrt joined
[07:11] *** lizmat joined
[07:14] *** rurban left
[07:18] *** plobsing joined
[07:21] <nwc10> good *, #perl6

[07:22] <lizmat> nwc10 o/ from Zurich

[07:22] *** logie left
[07:22] * nwc10 wonders what is happening in Zurich today

[07:22] <jnthn> Mmmm...Zurich :)

[07:23] <nwc10> or are you there because even the XP Zombie apocalypse would think twice about invading Switzerland?

[07:23] <brrt> hi lizmat

[07:23] <brrt> and nwc10

[07:23] <brrt> and all

[07:23] <lizmat> Damian teaching Perl 6

[07:23] <nwc10> aha.

[07:23] *** hummeleB1 joined
[07:23] <nwc10> naughty Australians with their naughty cricket team

[07:24] <jnthn> Does naughty in this case mean, "beating England"? :P

[07:25] <nwc10> obviously.

[07:25] <nwc10> more than once.

[07:35] *** Ven joined
[07:36] *** Alula left
[07:36] *** Alula joined
[07:45] *** ggherdov_ left
[07:45] *** ggherdov_ joined
[07:45] *** ggherdov_ left
[07:45] *** ggherdov_ joined
[07:51] *** salv0 left
[07:51] <sergot> morning o/

[07:52] * moritz notices with horror that openssh depends on openssl

[07:56] *** pecastro left
[07:57] *** molaf_ joined
[07:59] *** molaf left
[08:02] *** virtualsue joined
[08:07] *** salv0 joined
[08:11] *** rurban joined
[08:11] *** yves__ left
[08:14] *** darutoko joined
[08:15] *** rurban left
[08:16] *** d0nk left
[08:20] *** rindolf joined
[08:27] *** dakkar joined
[08:36] *** ggherdov_ is now known as ggherdov

[08:38] *** rindolf left
[08:39] *** [particle] left
[08:40] *** plobsing left
[08:40] *** [particle] joined
[08:50] *** ldthien0 joined
[08:51] *** ldthien0 left
[09:09] *** telex left
[09:12] *** rurban joined
[09:12] *** telex joined
[09:13] *** pecastro joined
[09:13] *** rurban1 joined
[09:16] *** rurban left
[09:18] *** rurban1 left
[09:20] *** falk0n joined
[09:26] *** masak_ is now known as masak

[09:27] *** masak is now known as Guest43349

[09:33] *** Guest43349 is now known as masak_

[09:37] *** falk0n left
[09:44] *** lizmat left
[09:48] *** falk0n joined
[10:13] *** brrt left
[10:14] *** rurban joined
[10:15] *** molaf_ left
[10:17] *** thien left
[10:17] *** thien joined
[10:19] *** rurban left
[10:19] *** kaleem left
[10:35] *** thien left
[10:35] *** denis_boyun joined
[10:35] *** thien joined
[10:43] *** masak_ is now known as masak

[10:45] *** lizmat joined
[10:50] *** lizmat_ joined
[10:52] *** lizmat left
[11:03] *** daniel-s_ joined
[11:04] *** [particle] left
[11:08] *** salv0 left
[11:10] *** daniel-s_ left
[11:11] *** brrt joined
[11:15] *** rurban joined
[11:15] *** thien is now known as ldthien0

[11:21] *** rurban left
[11:23] *** salv0 joined
[11:31] <moritz> LHF: git-bisect rakudo to find the commit that leads to t/spec/integration/99problems-21-to-30.t failing tests

[11:42] *** SamuraiJack_ joined
[11:43] *** AL55 joined
[11:43] *** SamuraiJack left
[11:48] *** ldthien0 left
[12:09] *** AL55 left
[12:13] <retupmoca> moritz: openssh doesn't use TLS from openssl, so it isn't affected

[12:14] <retupmoca> (assuming you're talking about heartbleed)

[12:17] *** rurban joined
[12:17] <nwc10> moritz: is there a last known good revision?

[12:18] <nwc10> (not, to be clear, I'm not proposing to take the task, but if that's know then it makes the L much Lower)

[12:22] *** lizmat_ left
[12:22] *** lizmat joined
[12:23] *** rurban left
[12:46] *** xenoterracide joined
[12:50] *** effbiai left
[12:50] *** effbiai joined
[13:01] *** guru joined
[13:01] *** guru is now known as Guest75181

[13:02] *** Guest75181 is now known as ajr_

[13:04] *** kbaker joined
[13:05] *** xenoterracide left
[13:17] *** kaare_ left
[13:20] *** rurban joined
[13:25] *** rurban left
[13:27] <moritz> nwc10, anybody: should be good 3699aaf672c47987168e33a02c2c31b3a4798232 (trust by verify!)

[13:30] *** rindolf joined
[13:33] * lizmat wonders why we haven't implemented "is cached" yet

[13:33] <lizmat> is there a particular reason for that?  Or is that LHF

[13:33] <lizmat> ?

[13:34] <colomon> lizmat: the simple case is pretty easy to implement

[13:34] <colomon> hard cases are hard.

[13:35] <colomon> though do I remember correctly that you can have hashes with non-string keys now?

[13:35] <colomon> that would help a lot

[13:36] <lizmat> yes, you can

[13:36] <lizmat> Sets/Bags/Mixes depend on them

[13:36] <lizmat> well, in their original implementation  :-)

[13:36] <lizmat> but the same trick could be used for "is cached", I would think

[13:39] * lizmat decides to ponder on this some more  :-)

[13:39] * lizmat would like to have *all* of Damian's examples *actually work*(TM)

[13:39] <colomon> lizmat: http://perl6advent.wordpress.com/author/foobar123/page/2/

[13:39] <colomon> Damian's examples wheree?

[13:40] <lizmat> at the Perl 6 course he is giving right now in Zurich, Switzerland

[13:40] <colomon> oh!

[13:40] <colomon> sweet!

[13:41] * colomon remembers the p6 team adding a feature for Damian during one of his lectures at YAPC::NA 2010 (I think that was the year)

[13:41] <colomon> is there more information on the course somewhere online?

[13:42] * Ven thinks scalar parameters would be the easiest case of `is cached`

[13:42] <lizmat> http://damian.conway.org/Courses/ProgPerl6.html

[13:42] *** treehug88 joined
[13:42] * Ven would like to see that course, too

[13:43] <Ven> actually, easiest to cache is 0-ary

[13:43] <colomon> damian++

[13:44] <Ven> multi sub trait_mod:<is>(pattern match on empty sig $r, $:cached!) { my $cache; $r.wrap(-> { $cache // callsame }); }

[13:44] <tadzik> I read Rationalized as Randomized, getting Randomized syntax and semantics

[13:47] <Ven> r: say reverse "foo" # is that still true

[13:47] <camelia> rakudo-jvm da1ef6: OUTPUT«(timeout)»

[13:47] <camelia> ..rakudo-parrot da1ef6, rakudo-moar da1ef6: OUTPUT«foo␤»

[13:49] <colomon> m: say flip "foo"

[13:49] <camelia> rakudo-moar da1ef6: OUTPUT«oof␤»

[13:52] *** vendethiel left
[13:52] *** vendethiel joined
[13:54] *** yeltzooo left
[13:55] *** yeltzooo joined
[13:55] *** PerlJam left
[13:55] *** PerlJam joined
[13:57] * Ven is trying to get rakudo-js to compile ...

[13:59] *** pecastro left
[14:00] *** rurban joined
[14:01] *** pecastro joined
[14:02] * Ven ... but fails doing so !

[14:04] *** jnap joined
[14:05] *** salv0 left
[14:06] *** logie joined
[14:08] *** raiph joined
[14:10] *** thou joined
[14:13] <Ven> what's that "js-blib" yer talking 'bout !

[14:22] *** salv0 joined
[14:26] <raiph> Ven: aiui the initial cut at *NQP* on js must be wrapped first

[14:27] <Ven> raiph: (auiu ?) initial cut ?

[14:28] <raiph> sorry, aiui = as i understand it, first cut = a sufficiently working version

[14:29] *** dalek left
[14:30] <Ven> raiph: then last part (:p) : "wrapped" ? I get that if it's self-hosting, you have to compile something first -- I followed README's instructions tho

[14:31] *** dalek joined
[14:31] *** ChanServ sets mode: +v dalek

[14:31] *** btyler joined
[14:32] *** dalek left
[14:32] *** bluescreen10 joined
[14:33] <raiph> Ven: heh, sorry about all those idioms; by "wrapped" I just meant done -- NQP on js isn't yet (sufficiently) done

[14:33] *** Juerd left
[14:33] *** masak left
[14:34] *** Juerd joined
[14:34] *** hugme left
[14:34] *** Alina-malina left
[14:35] *** Alina-malina joined
[14:35] *** synopsebot left
[14:35] *** hugme joined
[14:35] *** ChanServ sets mode: +v hugme

[14:36] *** jnap1 joined
[14:37] *** jnap left
[14:38] *** synopsebot joined
[14:40] *** masak joined
[14:40] *** ajr_ left
[14:40] *** masak is now known as Guest37676

[14:43] *** guru joined
[14:43] <Ven> raiph: oh, okay. I guess it should be something to move to moar by now, too ?

[14:43] <Ven> from what i see, moar didn't exist then ?

[14:44] *** guru is now known as Guest50914

[14:47] *** dayangkun joined
[14:47] *** Guest50914 is now known as ajr_

[14:48] * Ven can't even build rakudo because of a "syntax error in tools/lib/nqp/configure.pm"

[14:49] *** bluescreen100 joined
[14:50] *** dayangkun_ left
[14:52] *** kaleem joined
[14:52] *** bluescreen10 left
[14:54] *** kaare_ joined
[14:54] <raiph> Ven: have you previously successfully built rakudo on the same system?

[14:55] <Ven> raiph: nope, never. Thought I'd try and help somehow somewhere :)

[14:55] *** Alina-malina left
[14:56] <raiph> Ven: what instructions are you following? (link?)

[14:58] *** ajr_ left
[14:58] <Ven> commuting & (thanks for the help raiph !)

[14:59] <raiph> \o later

[15:00] *** ajr joined
[15:00] *** ajr is now known as Guest15511

[15:00] *** Guest15511 is now known as ajr_

[15:03] *** fhelmberger left
[15:05] *** ajr_ left
[15:05] <retupmoca> I wrote some documentation for my LibraryMake module - could I get someone to read over it and make sure it's understandable/includes everything needed? https://github.com/retupmoca/P6-LibraryMake

[15:05] *** lizmat left
[15:06] *** virtualsue left
[15:06] *** ajr_ joined
[15:06] <retupmoca> If you were to come in asking "How do I bundle and use a .so file with my panda distribution?", I want that README to give you what you need

[15:06] *** denis_boyun left
[15:07] *** Alina-malina joined
[15:14] <moritz> retupmoca: looks good

[15:17] <timotimo> retupmoca: do you have any clue how to make this cooperate with pre-existing makefiles?

[15:17] <awwaiid> "retupmoc7" was my handle when I was a TI-85 hacker. Greetings retupmoca!

[15:17] <awwaiid> I pronounced mine with a klingon accent, personally.

[15:17] <awwaiid> (the 7 is slient)

[15:20] <retupmoca> timotimo: you want to just run 'make' on panda install?

[15:20] <jnthn> yays I teached all the thigns

[15:20] <jnthn> and will have more Perl 6 time/energy the rest of the week :)

[15:20] <jnthn> decommute &

[15:21] <timotimo> retupmoca: well ... i guess?

[15:21] <timotimo> what if my game has assets that would be compiled "from source" (xcf to png for example) when you get it from my repo

[15:22] <retupmoca> timotimo: you can write your own Makefile.in in the src (or whatever) directory

[15:23] <timotimo> oh nice :)

[15:23] <retupmoca> timotimo: that's what that is - an example of a Makefile.in that you would write

[15:23] <timotimo> aaaaah

[15:23] <timotimo> i see that now

[15:23] <timotimo> good hint

[15:24] <retupmoca> I should probably add a line about how those are examples of what you would write in your project

[15:25] <timotimo> my confusion only serves to make your documentation better :)

[15:25] <retupmoca> indeed :)

[15:32] *** raiph left
[15:35] *** brrt left
[15:41] *** lizmat joined
[15:43] <timotimo> retupmoca: the change to NativeCall hasn't entered the master branch yet?

[15:57] <lizmat> dinner&

[15:57] *** zakharyas left
[15:58] *** hoverboard joined
[15:58] <vendethiel> "you just subscribed to 26 perl6 repositories" thanks moritz !

[16:01] *** cognominal left
[16:01] *** cognominal joined
[16:02] *** raiph joined
[16:03] *** Ven left
[16:05] <timotimo> yay \o/

[16:09] *** hoverboard left
[16:15] *** falk0n left
[16:15] *** hoverboard joined
[16:16] *** dbane joined
[16:17] *** hoverboard left
[16:30] *** spider-mario joined
[16:36] *** kaleem left
[16:41] <vendethiel> raiph: so, basically, I was following the install.txt

[16:41] <vendethiel> which didn't work on my school comp, but seems to work here ?!

[16:43] <raiph> vendethiel: rakudo build requires a "recent" perl5; I'm guessing your school comp has a very old perl5

[16:43] *** ajr_ left
[16:43] <timotimo> hehe. "recent" :)

[16:43] <timotimo> from only shortly after i was born

[16:44] <geekosaur> in particular, rhel / centos / scientific linux has perl 5.10 and there's a whole lot of stuff that doesn't work with it

[16:44] <geekosaur> (rhel is fairly common in .edu)

[16:45] <moritz> vendethiel: you're welcome. As a policy, I tend to give everybody a commit bit to the p6 repos who had a pull request accepted

[16:45] *** Timbus left
[16:45] <colomon> moritz++

[16:45] <moritz> (or even asks nicely)

[16:46] *** Timbus joined
[16:47] *** dakkar left
[16:49] <timotimo> isn't 5.10 enough for rakudo's build scripts?

[16:53] <vendethiel> raiph: it has perl 5.8.8, which is what the install.txt recommends

[16:53] <vendethiel> gmake-installdev completly blows up tho

[16:55] <vendethiel> and I can't seem to redirect stderr to stdout...

[16:55] <vendethiel> I guess 2>&1 doesn't work on windows uh ...

[16:56] <vendethiel> moritz: yeah, I guessed so :)

[16:57] <geekosaur> you'd need a unixy shell, not cmd.exe, certainly

[16:58] <geekosaur> hm, actually it looks like cmd.exe *should* support that syntax

[16:58] *** denis_boyun joined
[16:58] <vendethiel> yeah, I remember it working.

[16:59] <geekosaur> (I know they added a subset of unix fd redirection over just >file type stuff, but didn't know that part was there)

[16:59] <vendethiel> I get tons and tons of errors, but at the beginning I've got "Warning: Building a shared parrot library may conflict with your previously-installed C:\rakudo\bin\libparrot.dll" which very well might be the error

[17:00] <geekosaur> I think that's known, yes, if you have an installed version then building a new one is problematic

[17:01] *** rurban left
[17:02] *** lustlife left
[17:03] <vendethiel> removed it, still getting 18k lines of errors. Whew.

[17:05] *** lustlife joined
[17:06] *** dbane left
[17:09] *** guru joined
[17:09] *** guru is now known as ajr_

[17:09] *** Rotwang joined
[17:11] *** dbane joined
[17:21] <raiph> "Remove unneeded repos from github/perl6"

[17:21] <raiph> https://questhub.io/realm/perl/quest/534571eabbd0bed24e00006d

[17:22] <raiph> comments (or acting on them) appreciated

[17:22] <vendethiel> raiph: seems like those github/ should be github.com/ ?

[17:23] <timotimo> yeah

[17:23] <raiph> fixed

[17:24] *** pecastro left
[17:26] <timotimo> i don't think simple-tests has any useful bits, it's almost completely devoid of content

[17:29] *** dbane left
[17:31] <retupmoca> timotimo: jnthn wanted to do the NativeCall change in a different way

[17:32] <timotimo> OK

[17:32] <retupmoca> and that other way is not yet written

[17:34] *** rurban joined
[17:37] <retupmoca> raiph: I know moritz is the one who forked Perl6-MIME-Base64 into perl6 org

[17:37] <retupmoca> back when I first started working on it

[17:38] <jnthn> Hmm, no dalek

[17:42] <timotimo> Optimize Hash.at_key and Hash.bind_key.

[17:42] <timotimo> Gives a 14% saving on while_hash_set benchmark.

[17:42] <timotimo>  jnthn authored 5 minutes ago

[17:42] <raiph> rurban: I'm spring cleaning github.com/perl6; thoughts about moving /nqp-rx?

[17:43] <raiph> Ven, timotimo, retupmoca: thx

[17:43] *** lizmat left
[17:44] *** lizmat joined
[17:44] <timotimo> nqp-rx ... isn't that replicated under parrot/?

[17:44] *** lizmat left
[17:44] <timotimo> at least i seem to recall it's now a closely-tied-to-parrot project

[17:45] <jnthn> timotimo: you forgot the jnthn++ :P

[17:45] *** lizmat joined
[17:47] <timotimo> jnthn++

[17:47] <timotimo> 14%? i was hoping for something more like 14x! :P

[17:47] <jnthn> timotimo: oh, that isn't the assign_key change :)

[17:48] <timotimo> oh, it is not?

[17:48] <timotimo> great! :)

[17:48] * timotimo is no longer disappointed

[17:48] <jnthn> No, that's just some opts I spotted on the existing code path, which will make every hash access faster

[17:49] <timotimo> anything spesh can do to make hash access even faster still?

[17:50] <jnthn> Well, once multispec is done, probably yes :)

[17:50] <jnthn> And later there'll be inlining too of course.

[17:50] *** SamuraiJack_ left
[17:52] *** bjz_ left
[17:54] <timotimo> inlining will do all kinds of magical things

[17:55] <timotimo> at least in my hopes & dreams

[17:55] *** virtualsue joined
[17:55] *** benabik joined
[17:56] * vendethiel -- Perl6 is getting fast :)

[17:57] <timotimo> almost

[17:57] <timotimo> not yet for this month's release anyway

[18:00] <vendethiel> in the grand scheme of things

[18:00] * vendethiel -- according to keikaku

[18:01] <timotimo> keikaku?

[18:02] <vendethiel> plan

[18:02] <vendethiel> "according to keikaku" is an internet phrase though

[18:02] <timotimo> ah, ok

[18:03] <jnthn> hehe :)

[18:04] *** xinming__ joined
[18:07] *** xinming_ left
[18:11] *** virtualsue left
[18:27] *** rindolf left
[18:29] *** virtualsue joined
[18:48] *** woolfy joined
[18:58] *** treehug88 left
[19:06] *** thou left
[19:13] *** kurahaupo joined
[19:18] *** treehug88 joined
[19:18] *** darutoko left
[19:27] *** pecastro joined
[19:58] *** kaare_ left
[20:04] <jnthn> I pushed adding assign_key and switching to it

[20:04] <jnthn> No regressions that I can see :)

[20:04] *** Anand joined
[20:05] *** Anand left
[20:05] <jnthn> Really need to get multispec done; things were a good bit faster before I made assign_key a multi.

[20:06] *** segomos left
[20:06] *** segomos joined
[20:07] <timotimo> whoa.

[20:07] *** zakharyas joined
[20:08] *** denis_boyun left
[20:09] * vendethiel kinda wants to see how much % improvement that is

[20:09] <jnthn> Hopefully quite a bit :)

[20:09] *** denis_boyun joined
[20:10] *** a3gis joined
[20:11] *** Rotwang left
[20:25] *** raiph left
[20:28] *** spider-mario left
[20:31] <jnthn> Pushed a few more opts :)

[20:31] <jnthn> Detrain &

[20:34] *** bluescreen100 left
[20:39] <colomon> hmmm, stage parse was slower this time than earlier today.  only by 1 second, but still….  ;)

[20:42] <timotimo> with the very latest commits, there's a bit more code in there now

[20:46] *** bjz joined
[20:49] <jnthn> colomon: I've had variance of around a second in parse times on my laptop over the last day or so

[20:49] <jnthn> colomon: Without much correlation to what I was changing.

[20:50] <colomon> probably depends as much on what else my machine was running as anything.  I was mostly just razzing you.  

[20:50] <colomon> you keep on coming up with optimizations faster than I get a chance to try them.

[20:59] *** benabik left
[20:59] *** lizmat left
[20:59] *** woolfy left
[21:00] *** a3gis left
[21:00] *** kurahaupo left
[21:00] *** lizmat joined
[21:02] *** dayangkun left
[21:03] *** kbaker left
[21:04] *** dmol left
[21:10] *** treehug88 left
[21:11] *** zakharyas left
[21:13] *** treehug88 joined
[21:14] *** thou joined
[21:17] *** kurahaupo joined
[21:17] *** dayangkun joined
[21:18] <timotimo> m: say :16(ord("!"))

[21:18] <camelia> rakudo-moar 541f9f: OUTPUT«Type check failed in binding $str; expected 'Str' but got 'Int'␤  in sub unbase at src/gen/m-CORE.setting:6774␤  in block  at /tmp/PpN_lFOrAo:1␤␤»

[21:18] <timotimo> oops, wrong way around

[21:18] *** a3gis joined
[21:18] <timotimo> m: say ord("!").base(16) # like this?

[21:18] <camelia> rakudo-moar 541f9f: OUTPUT«21␤»

[21:18] <timotimo> m: say ord("!").base(2) # like this?

[21:18] <camelia> rakudo-moar 541f9f: OUTPUT«100001␤»

[21:19] <timotimo> m: say ord("+").base(2)

[21:19] <camelia> rakudo-moar 541f9f: OUTPUT«101011␤»

[21:19] *** woolfy joined
[21:21] <jnthn> Nice; spectest is a good bit faster on my machine at home than when I left on Sunday :)

[21:22] <timotimo> \o/

[21:22] <jnthn> 290s instead of 314s.

[21:27] <timotimo> oh wow

[21:30] <jnthn> Yes, happy to have it back under 300s :)

[21:47] *** kurahaupo_mobile joined
[21:49] *** kurahaupo left
[21:56] <segomos> r: class a { method b { say self.b:defined; } }; my $d = a.new; say $d.b;

[21:56] <camelia> rakudo-jvm 986916, rakudo-moar 986916: OUTPUT«(timeout)»

[21:56] <camelia> ..rakudo-parrot 986916: OUTPUT«maximum recursion depth exceeded␤current instr.: 'print_exception' pc 143557 (src/gen/p-CORE.setting.pir:60951) (gen/parrot/CORE.setting:11212)␤called from Sub 'b' pc 167 ((file unknown):109) (/tmp/tmpfile:1)␤called from Sub 'b' pc 189 ((file unkno…»

[21:56] <timotimo> huh?

[21:57] <segomos> just wanted to see how it reacted..

[21:57] <timotimo> how is that :defined supposed to apply?

[21:57] <segomos> r: class a { method b { say self.b.perl.say; } }; my $d = a.new; say $d.b;

[21:58] <camelia> rakudo-moar 986916: OUTPUT«(timeout)»

[21:58] <camelia> ..rakudo-jvm 986916: OUTPUT«java.lang.StackOverflowError␤␤»

[21:58] <camelia> ..rakudo-parrot 986916: OUTPUT«maximum recursion depth exceeded␤current instr.: 'print_exception' pc 143557 (src/gen/p-CORE.setting.pir:60951) (gen/parrot/CORE.setting:11212)␤called from Sub 'b' pc 167 ((file unknown):109) (/tmp/tmpfile:1)␤called from Sub 'b' pc 189 ((file unkno…»

[21:58] <jnthn> I suspect it ignores it and then just recurses forever :)

[21:58] <segomos> timotimo: it's not, it should be the self.can or any one of the introspective functions, just curious how the engines other than moar are handling it 

[21:58] <timotimo> oh?

[21:59] <jnthn> moar doesn't presently enforce a recursion limit

[21:59] *** pecastro left
[21:59] <timotimo> is that specced? that :defined would cause that behavior?

[21:59] * jnthn doesn't remember seeing it ever :)

[21:59] <segomos> i don't think so

[22:00] <jnthn> It'll be parsed due to longname, as a colonpair as part of the name, iirc.

[22:00] <timotimo> mhm

[22:00] *** pecastro joined
[22:01] <jnthn> Hm. I wonder why / ... { ... } ... / uses contextual scope to set up $/

[22:01] <jnthn> (for the block invocation)

[22:02] *** lustlife left
[22:02] <segomos> timotimo: just me screwing around - 

[22:02] * timotimo is reading "php: a fractal of bad design" again

[22:02] <timotimo> ~_~

[22:02] <timotimo> i had forgotten how many things there were in that

[22:09] *** kbaker joined
[22:11] *** virtualsue left
[22:15] *** treehug88 left
[22:16] *** kbaker left
[22:16] <timotimo> http://tortoisewrath.com/wat.htm#2000 - this is impressive

[22:16] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=2000

[22:18] *** kurahaupo_mobile left
[22:20] <lizmat> seems that dd1f4fad6b1929dba005042cc3fd330d30f53526 is the one breaking t/spec/integration/99problems-21-to-30.t

[22:21] *** ajr_ left
[22:22] <jnthn> lizmat: Hmmm...very weird.

[22:22] <jnthn> lizmat: If you've time/motivation, a golf would be very appreciated.

[22:25] <lizmat> working on that

[22:25] <lizmat> taking out this candidate:

[22:25] <lizmat> #multi map(&code, @values) { @values.map(&code) }

[22:25] <lizmat> fixes the tests

[22:26] <lizmat> first failing test uses map, the second grep

[22:26] <jnthn> HHmmm

[22:26] <lizmat> since grep is implemented in terms of map, I though I'd first try that

[22:26] <jnthn> What's the type of @values here?

[22:26] *** treehug88 joined
[22:27] <lizmat>     } else {

[22:27] <lizmat>         (map { [@xs[0],$_.list] },combination($n-1,@xs[1..*])), combination($n,@xs[1..*])

[22:27] <lizmat>     }

[22:29] *** dbane joined
[22:31] *** treehug88 left
[22:32] *** rurban left
[22:32] <lizmat> the failing tests all use the non slurpy variant

[22:32] <lizmat> not ok 12 - combinations work.

[22:32] <lizmat> #      got: '1 2 5 1 3 5 1 4 5 2 3 5 2 4 5 3 4 5'

[22:32] <lizmat> # expected: '1 2 3 1 2 4 1 2 5 1 3 4 1 3 5 1 4 5 2 3 4 2 3 5 2 4 5 3 4 5'

[22:33] <lizmat> not ok 13 - group works

[22:33] <lizmat> #      got: ''

[22:33] <lizmat> # expected: '1 2 3 1 2 4 1 3 2 1 3 4 1 4 2 1 4 3 2 3 1 2 3 4 2 4 1 2 4 3 3 4 1 3 4 2

[22:35] <jnthn> Yeah, I mean what would @values.WHAT be?

[22:35] <jnthn> (e.g. what does combination return)

[22:36] <jnthn> oh, hang on...how can that one there call the @values candidate? There are two args to map after the closure...

[22:36] *** denis_boyun left
[22:38] <lizmat> not sure

[22:39] <jnthn> o.O

[22:39] <jnthn> Weird

[22:53] <lizmat> the elements are arrays

[22:53] *** telex left
[23:00] *** telex joined
[23:01] <lizmat> hmmm... seems we lost dalek: just committed a patch removing the non-slurpy candidate for map for now

[23:01] *** rurban joined
[23:03] <lizmat> starting to lose coherency, so gnight #perl6!

[23:04] *** a3gis left
[23:04] <timotimo> who can fix dalek?

[23:05] *** BenGoldberg joined
[23:06] *** kurahaupo_mobile joined
[23:07] *** FROGGS left
[23:08] *** FROGGS joined
[23:09] *** BenGoldberg left
[23:10] *** rurban left
[23:14] *** btyler left
[23:22] *** woolfy left
[23:23] <timotimo> m: say :16<34>

[23:23] <camelia> rakudo-moar 986916: OUTPUT«52␤»

[23:25] *** BenGoldberg joined
[23:38] *** thou left
[23:47] *** Ben_Goldberg joined
[23:48] *** BenGoldberg left
[23:48] *** Ben_Goldberg is now known as BenGoldberg

[23:54] <lue> .oO(say :16<➂➃>)

