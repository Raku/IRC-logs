[00:06] *** colomon left
[00:07] *** colomon joined
[00:08] *** aborazmeh joined
[00:10] <TimToady> well, that explains the throbbing headache, 100.5℉ == 38.1℃

[00:15] <geekosaur> :(

[00:15] <colomon> :(

[00:19] *** avuserow left
[00:24] <timotimo> oh damn. not as mild as we had hoped

[00:37] *** Hor|zon joined
[00:41] *** Hor|zon left
[00:43] *** PZt joined
[00:46] *** _sri_ joined
[01:06] *** pdcawley left
[01:07] *** pdcawley joined
[01:11] <timotimo> google-authenticator + FreeOTP ♥

[01:12] <timotimo> next project: libqrencode binding :3

[01:13] *** gfldex joined
[01:13] *** Mouq joined
[01:14] *** Mso150_c_r joined
[01:14] *** Mso150_c_r left
[01:18] *** leont left
[01:18] *** Mso150_c_r joined
[01:19] *** Mso150_c_r left
[01:22] *** Mso150_c_r joined
[01:35] *** Mouq left
[01:39] *** gtodd left
[01:40] *** Mso150_c_r left
[01:40] *** Mso150_c_r joined
[01:42] *** gtodd joined
[01:51] *** Mso150_c_r left
[01:55] *** vendethiel left
[02:02] *** gfldex left
[02:24] *** gtodd1 joined
[02:25] *** virtualsue joined
[02:25] *** gtodd left
[02:26] *** gtodd1 is now known as gtodd

[02:31] *** erkan left
[02:31] *** chenryn joined
[02:32] *** erkan joined
[02:38] *** Hor|zon joined
[02:43] *** Hor|zon left
[02:47] *** chenryn left
[02:48] *** chenryn joined
[02:50] *** noganex_ joined
[02:53] *** noganex left
[02:57] *** pyrimidine joined
[02:58] *** pyrimidine left
[02:59] *** pyrimidine joined
[02:59] *** araujo left
[03:05] <raydiak> https://gist.github.com/raydiak/6fb0016cf397bf1420f5 yay progress

[03:05] <pyrimidine> just curious, but is there a specific way to test a IO::Handle mode(rw, a, p) after it has been instantiated?

[03:06] <pyrimidine> I've tried checking $fh.r and $fh.w, they always return True

[03:08] *** _sri_ left
[03:11] *** _sri_ joined
[03:13] *** mauke_ joined
[03:17] *** mauke left
[03:17] *** gfldex joined
[03:17] *** mauke_ is now known as mauke

[03:26] *** BenGoldberg left
[03:45] *** firefish5000 joined
[03:46] *** aborazmeh left
[03:58] *** _sri_ left
[03:58] *** _sri_ joined
[04:02] *** kaare joined
[04:03] *** kaare is now known as Guest62447

[04:15] *** [Sno] left
[04:20] *** Guest62447 left
[04:32] *** avuserow joined
[04:39] *** Hor|zon joined
[04:41] *** pyrimidine left
[04:43] *** _sri_ left
[04:43] *** Hor|zon left
[04:44] *** _sri_ joined
[04:46] *** ggoebel11111115 joined
[04:46] *** _sri_ left
[04:46] *** _sri_ joined
[04:48] *** kaare_ joined
[04:48] *** ggoebel11111114 left
[04:59] *** vukcrni joined
[05:01] *** chenryn left
[05:01] *** avuserow left
[05:02] *** avuserow joined
[05:05] *** [Sno] joined
[05:05] *** flaviusb left
[05:08] *** avuserow left
[05:14] *** virtualsue left
[05:20] *** gfldex left
[05:24] *** avuserow joined
[05:36] *** slavik left
[05:37] *** ecocode joined
[05:41] *** slavik joined
[05:47] *** anaeem1_ joined
[05:50] *** anaeem1_ left
[05:50] *** anaeem1_ joined
[05:56] *** slavik left
[06:02] *** chenryn joined
[06:07] *** [Tux] joined
[06:07] *** chenryn left
[06:24] *** FROGGS joined
[06:24] *** anaeem___ joined
[06:24] *** _slade_ left
[06:27] *** immortal joined
[06:27] *** immortal left
[06:27] *** immortal joined
[06:28] *** anaeem1_ left
[06:29] *** erkan left
[06:34] <moritz> \o

[06:35] <raydiak> o/

[06:39] *** firefish5000 left
[06:40] *** Hor|zon joined
[06:40] *** anaeem___ left
[06:41] *** anaeem1_ joined
[06:44] *** Hor|zon left
[06:48] *** rindolf joined
[06:50] *** Mso150 joined
[06:53] *** kaleem joined
[06:56] *** immortal left
[06:59] *** erkan joined
[07:00] *** zakharyas joined
[07:04] *** erkan left
[07:04] *** firefish5000 joined
[07:08] *** kurahaupo_ joined
[07:10] *** salv0 left
[07:14] *** jerrycheung joined
[07:16] *** Mso150_c joined
[07:17] *** darutoko joined
[07:17] *** Mso150_c left
[07:17] *** virtualsue joined
[07:18] *** Mso150 left
[07:19] *** Mso150 joined
[07:20] *** salv0 joined
[07:44] <sergot> mornign o/

[07:51] *** chenryn joined
[07:54] *** jerrycheung left
[07:58] *** chenryn left
[08:00] *** Hor|zon joined
[08:01] *** pecastro left
[08:02] *** abraxxa joined
[08:03] *** Hor|zon left
[08:13] *** chenryn joined
[08:22] *** rurban joined
[08:28] *** fhelmberger joined
[08:28] *** TuxCM left
[08:30] <rindolf> sergot: morning.

[08:31] <sergot> rindolf: o/

[08:31] <rindolf> sergot: sup?

[08:32] *** kjs_ joined
[08:32] *** dakkar joined
[08:36] *** felher_ is now known as felher

[08:38] *** Mso150 left
[08:42] *** TuxCM joined
[08:44] *** salv0 left
[08:48] <sergot> rindolf: sleepy but fine

[08:48] <rindolf> sergot: ah.

[08:49] <sergot> rindolf: how are you?

[08:50] <rindolf> sergot: I'm fine - working on Website Meta Language.

[08:51] <sergot> sounds interesting  :)

[09:00] <dalek> rakudo/nom: 7ff58f0 | (Elizabeth Mattijsen)++ | src/core/ (4 files):

[09:00] <dalek> rakudo/nom: Streamline Bag.pick/roll/grab/pickpairs/grabpairs

[09:00] <dalek> rakudo/nom: 

[09:00] <dalek> rakudo/nom: Using MMD: should be significantly faster on no param calls, and on Whatever/Inf

[09:00] <dalek> rakudo/nom: calls.  Also fix #120407

[09:00] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=120407

[09:00] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7ff58f00b0

[09:07] *** kjs_ left
[09:08] *** virtualsue left
[09:16] *** pecastro joined
[09:17] <dalek> roast: 01feaf8 | (Elizabeth Mattijsen)++ | S02-types/bag (2 files):

[09:17] <dalek> roast: Some test adaptations because of Baggy streamline

[09:17] <dalek> roast: review: https://github.com/perl6/roast/commit/01feaf8158

[09:18] *** rmgk_ joined
[09:18] *** rmgk left
[09:18] *** rmgk_ is now known as rmgk

[09:25] <lizmat> seems I broke jvm  :-(

[09:25] <lizmat> $ perl6-j -e '<a b b>.BagHash.roll(2).say'

[09:25] <lizmat> Exception in thread "main" org.perl6.nqp.runtime.UnwindException

[09:29] <abraxxa> when NativeCall handles Str, does it also handle CArray[Str]?

[09:31] *** salv0 joined
[09:32] *** denis_boyun_ joined
[09:34] *** leont joined
[09:42] *** firefish5000 left
[09:49] <timotimo> https://github.com/jnthn/zavolaj/blob/master/t/05-arrays.t#L25 ← abraxxa 

[09:51] *** b2gills left
[09:54] *** chenryn left
[09:54] *** woshty left
[09:55] *** woshty joined
[09:57] * lizmat gives up on trying to figure out what broke Bag.roll/pick/grab and goes away for the day

[09:57] <lizmat> if anybody interested in debugging: it's probably something in ROLLPICKGRABN

[09:57] <lizmat> - it's not the native int

[09:58] <lizmat> - it's not having rand/seen defined outside of the gather/while

[09:58] <lizmat> away&

[09:59] *** kjs_ joined
[09:59] <abraxxa> timotimo: thanks

[09:59] <abraxxa> it seems i have to pass a CArray[int8] because it might a Str but also something else like an Int

[10:00] <abraxxa> how do i get the length of a CArray[int8]?

[10:00] <timotimo> usually .elems

[10:04] *** b2gills joined
[10:07] <abraxxa> does that look right? http://paste.scsys.co.uk/433328

[10:10] <timotimo> doesn't look wrong to me

[10:10] <timotimo> m: my $vbuf = "hi there".encode("UTF-16").elems

[10:10] <timotimo> still timing out?

[10:11] <timotimo> >_>

[10:11] <camelia> rakudo-moar dcd32e: OUTPUT«(timeout)»

[10:12] *** robinsmidsrod joined
[10:27] *** chenryn joined
[10:47] *** cognominal joined
[10:48] *** chenryn left
[10:49] *** ptc_p6 joined
[10:56] <abraxxa> timotimo: it seems the @valuep only gets it's first element assigned

[11:02] *** chenryn joined
[11:03] <timotimo> what does $valuebuf.elems give you?

[11:04] *** ivanshmakov left
[11:06] *** azawawi joined
[11:06] <azawawi> hi

[11:06] <azawawi> m: homedir('.')

[11:06] *** virtualsue joined
[11:06] <azawawi> std: homedir('.')

[11:06] <moritz> .oO( my homedir is my castledir )

[11:06] <camelia> rakudo-moar dcd32e: OUTPUT«(timeout)»

[11:06] <camelia> std 14ad63b: OUTPUT«===SORRY!===␤Undeclared routine:␤ 'homedir' used at line 1␤Check failed␤FAILED 00:01 140m␤»

[11:07] <azawawi> im getting homedir... $*HOME is not set in my perl6 repl

[11:07] <azawawi> Dynamic variable $*HOME not found

[11:08] <azawawi> latest rakudo

[11:08] <moritz> lizmat: ^^

[11:09] <azawawi> :)

[11:09] *** ivanshmakov joined
[11:09] <azawawi> + Implemented tmpdir($dir) and homedir($dir)  # in docs/ChangeLog :)

[11:10] <azawawi> moritz: doc.perl6.org needs a lot of changes in the variables section

[11:10] <azawawi> moritz: a lot of deprecated variables like $*OS

[11:10] <azawawi> moritz: my fault... i was reading an old copy :)

[11:12] <rurban> Made myself finally a working 64-bit big-endian machine, a qemu mips64

[11:12] <azawawi> moritz: a better REPL https://github.com/azawawi/farabi6/blob/master/test_repl.pl :)

[11:13] <FROGGS> rurban++ # I've seen that on #parrot already, good work!

[11:13] <azawawi> moritz: im thinking of generalizing it to send/recv json requests

[11:14] *** jack_rabbit left
[11:14] <azawawi> latest rakudo is also faster a bit in json parsing

[11:14] <azawawi> that before that is

[11:14] <azawawi> than before that is  # correction... :)

[11:15] <rurban> but max memory is 2GB, I only got 256M RAM working yet, so no chance for a rakudo. Need to wait for a PPC64 qemu

[11:16] <rurban> Sparc64 qemu will probably dead

[11:17] <abraxxa> timotimo: 1

[11:17] <timotimo> well, uh ... there you have it?

[11:17] <azawawi> timotimo: hi there

[11:17] <timotimo> azawawi: last time i tried, i still got that very same error from farabi6 ;(

[11:17] <FROGGS> rurban: there is a chance that I get my PPC64 machines working at the end of the week

[11:19] <abraxxa> timotimo: perl6 -e 'use NativeCall;  my @valuep := CArray[int8].new; @valuep[0] = 83; @valuep[1] = 27; @valuep[2] = 34; say @valuep.elems;'

[11:19] <rurban> Good. I found one GC assertion, but I suppose it's the memory pressure

[11:19] <timotimo> oh

[11:19] <abraxxa> is that a bug or can't i add elements to a CArray that way?

[11:20] <timotimo> maybe try using $ and regular assignment instead of the @ sigil

[11:20] <abraxxa> Variable '$valuep' is not declared. Did you mean '@valuep'?

[11:20] <FROGGS> abraxxa: what gives you: perl6 -e 'use NativeCall;  my @valuep := CArray[int8].new; @valuep[0] = 83; @valuep[1] = 27; @valuep[2] = 34; say @valuep[0].elems;'

[11:21] <timotimo> abraxxa: use the $ everywhere

[11:21] <abraxxa> FROGGS: 1

[11:21] <abraxxa> timotimo: still 1

[11:21] <FROGGS> hmmm

[11:21] <abraxxa> perl6 -e 'use NativeCall;  my $valuep := CArray[int8].new; $valuep[0] = 83; $valuep[1] = 27; $valuep[2] = 34; say $valuep.elems;'

[11:22] <FROGGS> does .elems actually work here?

[11:22] <timotimo> let me have a look

[11:22] <timotimo> it's not implemented for CArray >_<

[11:22] <FROGGS> :o)

[11:22] <timotimo> but CArray derives from something

[11:22] <abraxxa> yes, but i couldn't find out if CArray subclasses from something core

[11:23] <timotimo> it derives from Any

[11:23] <FROGGS> star-m: use NativeCall; say CArray.^mro

[11:23] <timotimo> Any has an "elems" method that would return 1 in this case

[11:23] <camelia> star-m 2014.08: OUTPUT«(timeout)»

[11:23] <timotimo> i've been bitten by CArray not implementing methods in the past >_>

[11:23] <abraxxa> i need something like https://github.com/jnthn/zavolaj/blob/master/t/05-arrays.t#L87

[11:24] <abraxxa> so how do i get the number of elements then?

[11:26] <timotimo> um, wait a minute

[11:26] <timotimo> why are you asking the CArray for its number of elements in the first place?

[11:26] <timotimo> just to check whether or not the assignment has worked?

[11:27] <abraxxa> yes, to not rely on a different object and it's interface

[11:28] <abraxxa> why does CArray not subclass from e.g. List?

[11:29] <timotimo> i don't think it can; different REPRS

[11:29] <timotimo> REPRs

[11:29] <timotimo> it does implement the Positional role

[11:30] <abraxxa> i see

[11:30] <timotimo> as a workaround you can nqp::elems the CArray, i believe

[11:32] <timotimo> gotta run now

[11:32] <abraxxa> ok, thanks

[11:32] <abraxxa> i'm using the elems method on the Buf object i'm taking the bytes from

[11:33] <abraxxa> although someone said that Buf.elems doesn't return the number of bytes but elements which could be multibyte as well

[11:33] <abraxxa> I need a way to loop a Buf per byte

[11:33] *** brrt joined
[11:34] <abraxxa> I can access each byte using $buf.[$_] but i need an index counter that goes from 0 to number of bytes

[11:35] <brrt> \o

[11:42] <azawawi> timotimo: do you have a $HOME/lib folder?

[11:42] <azawawi> timotimo: or a $HOME/.perl6 ?

[11:42] <abraxxa> when I define a NativeCall method parameter as 'Str $placeholder is encoded('utf16'),' is the bytestring null terminated?

[11:43] <moritz> uhm

[11:43] <moritz> null-terminated UTF-16 strings don't make much sense, since they have 0bytes quite naturally

[11:43] <abraxxa> http://docs.oracle.com/cd/E11882_01/appdev.112/e10646/oci16rel003.htm#LNOCI17140

[11:43] <abraxxa> placeholder

[11:44] <abraxxa> That is, if the statement is prepared in UTF-16, so is the placeholder. As a string type parameter, the placeholder should be cast as (text *) and terminated with NULL.

[11:45] <timotimo> azawawi, my prefix is perl6/install

[11:46] *** ghostlines joined
[11:46] *** ghostlines left
[11:47] *** ghostlines joined
[11:48] *** kaleem left
[11:49] *** cognominal left
[11:50] <abraxxa> moritz: ^^

[11:52] <moritz> abraxxa: http://en.wikipedia.org/wiki/Null-terminated_string#Character_encodings

[11:53] <abraxxa> moritz: does that help? http://docs.oracle.com/cd/E11882_01/appdev.112/e10646/oci05bnd.htm#LNOCI16359

[11:53] <abraxxa> strlen(ename)+1

[11:53] <timotimo> maybe it is terminated with two null bytes?

[11:56] <azawawi> timotimo: could you please share the rakudo build command that you are using so i can try to duplicate the issue on my machine?

[11:57] <timotimo> i build all three components individually

[11:57] <timotimo> in perl6/ i have the mvm, nqp and rakudo source folders

[11:57] <timotimo> as well as ecosystem/ with panda in it

[11:58] *** cognominal joined
[11:59] <timotimo> I cannot laptop now and will be afk for one and a half hours soon 

[11:59] <azawawi> timotimo: could you please file an issue so i can keep track of the problem?

[11:59] <timotimo> ok

[11:59] <azawawi> timotimo++

[12:05] *** bartolin joined
[12:08] * [Coke] stares at #perl6 backlog over coffee.

[12:08] *** chenryn left
[12:12] * [Coke] wonders what "new-fap" means.

[12:12] <[Coke]> oh.

[12:15] * moritz hopes its gone now

[12:21] *** chenryn joined
[12:31] *** kurahaupo_ left
[12:32] *** xinming_ joined
[12:33] *** xinming left
[12:42] <abraxxa> how can i get the number of bytes in a Buf or loop over it?

[12:44] <azawawi> abraxxa: $buf.elems ?

[12:45] <azawawi> abraxxa: http://doc.perl6.org/type/Buf#method_elems

[12:45] <abraxxa> that gives the same number as Str.chars where it came from

[12:46] <abraxxa> i need a buf8

[12:47] * moritz has no idea if that's implemented

[12:49] *** guru joined
[12:49] *** guru is now known as ajr_

[12:51] *** kaare_ left
[12:52] * azawawi begins working on farabi6 help search sidebar

[12:53] <azawawi> moritz: wouldnt it be more user friendly  to run p6doc-index when the user asks for p6doc -f split for the first time?

[12:54] <abraxxa> moritz: what is required to make it more usable? extending NativeCall or Buf?

[12:57] *** anaeem1_ left
[12:58] <moritz> abraxxa: Buf, I think

[12:58] <moritz> azawawi: if the user has write permissions to the appropriate directories, yes

[12:59] <abraxxa> what is $nf? http://doc.perl6.org/type/Str#method_encode

[12:59] <moritz> normal form

[12:59] <moritz> not yet implemented

[12:59] <abraxxa> can i force a utf-16 encoding returning a buf8?

[13:01] <moritz> $ ./perl6-m -e 'say "abc".encode("UTF-16").decode("Latin-1").encode'

[13:01] <moritz> Can not decode a utf-16 buffer as if it were Latin-1 in method decode at src/gen/m-CORE.setting:5791

[13:01] <moritz> tough beans

[13:01] <moritz> that would have been useful

[13:01] *** kaleem joined
[13:07] *** notfix is now known as xfix

[13:11] <azawawi> is there an internal count of gather-ed items in a gather { ... } ?

[13:11] *** mirjam joined
[13:15] <[Coke]> "hey, why is my laptop making that... oh, the jvm build."

[13:16] <moritz> azawawi: I don't think so

[13:19] <brrt> [Coke]: i have that when i run spectests :-)

[13:20] <[Coke]> brrt: it's fine on everything up to the jvm. (moar, moar-jit, parrot...)

[13:23] *** _sri left
[13:27] *** mirjam left
[13:34] *** pecastro left
[13:38] *** chenryn left
[13:41] *** JimmyZ joined
[13:42] *** gfldex joined
[13:44] <abraxxa> moritz: can i open an issue or RFC somewhere for that feature?

[13:46] <moritz> abraxxa: for what? Buf16 -> Buf8 conversion?

[13:46] <abraxxa> moritz: yes, byte interface to Buf objects generally

[13:46] <moritz> abraxxa: yes; mailto:rakudobug@perl.org

[13:46] <brrt> iirc that's a bit of an 'open issue' :-)

[13:46] <abraxxa> moritz: will do

[13:46] <abraxxa> where does that mail end up?

[13:47] <moritz> abraxxa: rt.perl.org in the perl6 queue

[13:47] <abraxxa> then i prefer the web interface

[13:52] *** kjs_ left
[13:53] *** bloonix left
[13:54] <abraxxa> moritz: https://rt.perl.org/Ticket/Display.html?id=123015

[13:55] *** kjs_ joined
[14:00] *** [Sno] left
[14:02] *** kaare_ joined
[14:05] *** dayangkun joined
[14:07] <dalek> perl6-roast-data: 135314e | coke++ | bin/rakudo. (4 files):

[14:07] <dalek> perl6-roast-data: Use more cores

[14:07] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/135314ee4e

[14:07] <dalek> perl6-roast-data: a42b9c3 | coke++ | bin/doit:

[14:07] <dalek> perl6-roast-data: fix typo

[14:07] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/a42b9c320e

[14:07] <dalek> perl6-roast-data: e6db84b | coke++ | / (5 files):

[14:07] <dalek> perl6-roast-data: today (automated commit)

[14:07] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/e6db84b8b1

[14:08] <[Coke]> ^^ that might be the first ad hoc run with all "4" backends.

[14:09] <[Coke]> note that there are 625 parrot failures, and 627 jvm failures.

[14:09] *** kaleem left
[14:10] <dalek> perl6-roast-data: 74b00f7 | coke++ | / (5 files):

[14:10] <dalek> perl6-roast-data: today (automated commit)

[14:10] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/74b00f7211

[14:12] *** azawawi left
[14:16] <[Coke]> many of those parrot failures are probably from the lack of icu; We should probably either die if we have no icu, or not run all these failing spectests.

[14:18] <moritz> I'd be +1 to making ICU a hard requirement for rakudo-on-parrot; jnthn, any objections?

[14:22] *** Mouq joined
[14:27] <[Coke]> redoing today's parrot run with icu…

[14:27] <jnthn> moritz: Don't immediately see why not; folks who don't want to find an ICU have two other backends to choose from... :)

[14:27] <yoleaux> 19 Oct 2014 20:30Z <lizmat> jnthn: I think there is some codegen issue with private methods, contact me for an example

[14:27] <yoleaux> 19 Oct 2014 20:31Z <lizmat> jnthn: I would not be surprised if this would be the source of a lot of flappines, specifically in async modules

[14:29] <[Coke]> +1 here.

[14:32] <timotimo> lizmat: could you pin down the performance issues you encountered with multiple dispatch? was it all due to having a given number in one/more of the candidates?

[14:33] *** brother joined
[14:33] <jnthn> .tell lizmat It's better to do async communication with me these days than try and find a time we're both on IRC, I suspect. :) Just drop the code example that shows it or other stuff I need to reproduce it in a gist and .tell me it ;)

[14:33] <yoleaux> jnthn: I'll pass your message to lizmat.

[14:34] <jnthn> timotimo: Well, if you have candidates that have non-nominal stuff in them, then you end up having to run the dispatcher and maybe trial bind signatures.

[14:35] <jnthn> timotimo: Whereas purely nominal cases hit the cache.

[14:35] <timotimo> oh, oops :)

[14:35] <moritz> jnthn: well, one possible objection would have been: you have trouble installing libicu, and can't fix parrot backend code anymore if we do that :-)

[14:36] <jnthn> moritz: Given I didn't fix Parrot backend code in a LONG time... :)

[14:36] *** ajr_ left
[14:36] <jnthn> FROGGS++ is mostly to thank for keeping Parrot up to date with stuff.

[14:37] <moritz> so let's here if FROGGS++ objects

[14:37] <jnthn> timotimo: So while multi fac(0) { 1 } is all very cute, it's (for the time being, and probably for a good while) going to be a decent amount cheaper to do such checks inside an only.

[14:37] <jnthn> moritz: Yes, he's a better person to ask than me. :)

[14:38] *** guru joined
[14:38] *** guru is now known as Guest53707

[14:38] <FROGGS> err, about what?

[14:39] <moritz> FROGGS: any objections to making libicu mandatory for parrot?

[14:39] <FROGGS> ohh, so detect icu in rakudo's Configure and deny to build it if absent?

[14:39] <timotimo> jnthn: got it

[14:39] <moritz> FROGGS: correct

[14:39] <FROGGS> +1

[14:41] *** Guest53707 is now known as ajr_

[14:45] *** rurban left
[14:48] *** ajr joined
[14:48] *** ajr_ left
[14:48] *** ajr is now known as Guest73354

[14:48] *** Guest73354 is now known as ajr_

[14:50] *** kaleem joined
[14:50] <arnsholt> o/

[14:51] * arnsholt wrote Perl 6 (NQP, actually) code for the first time in forever last night

[14:51] <arnsholt> That felt nice

[14:51] <FROGGS> :o)

[14:51] <arnsholt> Must be almost a year since last I did that

[14:51] <dalek> snake: 2f600b0 | (Arne Skjærholt)++ | / (7 files):

[14:51] <dalek> snake: Move to Moar from Parrot; unbitrot; much improved indent handling.

[14:51] <dalek> snake: 

[14:51] <dalek> snake: First is self-explanatory, second simply due to the code being untended for a

[14:51] <dalek> snake: long time and easily fixed by cargo-culting a bit of code from Rakudo.

[14:51] <dalek> snake: 

[14:51] <dalek> snake: Much improved indent handling has been achieved by following the Pynie

[14:51] <dalek> snake: approach much more closely. As a consequence, we now handle ifs with elses

[14:51] <dalek> snake: properly (attaching a multiply dedented else to the correct parent rather than

[14:51] <dalek> snake: the first available). Also adds a simple sanity test for if handling.

[14:51] <dalek> snake: review: https://github.com/arnsholt/snake/commit/2f600b00d5

[14:52] <arnsholt> The fact that it was for my Python compiler may or may not be a good thing ^_^

[14:52] <FROGGS> hehe, true

[14:53] *** FROGGS left
[14:53] <arnsholt> But I was happy that I figured out how to handle the indents correctly

[14:53] <arnsholt> Turned out to be reasonably straightforward, in the end

[14:53] <nine_> arnsholt: you have a Python compiler in Perl 6?

[14:54] <arnsholt> I have a Python compiler that knows how to call NQP ops and ifs with elses (but no elif)

[14:54] <arnsholt> Embryonic, at best

[14:55] <arnsholt> But now that I've figured out the indent stuff, it should be possible to implement a bit more interesting stuff

[14:55] <nine_> arnsholt: the parser may be interesting to sugar Inline::Python

[14:55] *** kaleem left
[15:02] *** ecocode left
[15:05] *** araujo joined
[15:08] *** Mouq left
[15:09] <[Coke]> whoops, misread: parrot had 2807 failures.

[15:09] <dalek> perl6-roast-data: f35ad4c | coke++ | / (5 files):

[15:09] <dalek> perl6-roast-data: today (automated commit)

[15:09] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/f35ad4c766

[15:10] <[Coke]> I force pushed the "real" parrot run for today.

[15:11] *** rurban joined
[15:13] *** Ven joined
[15:13] <Ven> o/, #perl6

[15:13] <Ven> has anybody here used roboVM :D? (basically, jvm on ios)

[15:14] <timotimo> no

[15:16] *** denis_boyun_ left
[15:17] <masak> greetings, #perl6lings

[15:17] *** JimmyZ left
[15:18] <Ven> oyez, masak 

[15:18] <Ven> I'm actually wondering if I could do my next ios app in perl6.

[15:18] <Ven> err, not "next". an ios app.

[15:18] <timotimo> no wai

[15:19] <timotimo> interpreted languages are forbidden on the ios market

[15:19] <Ven> I don't really care about the ios market though

[15:20] <timotimo> so ... how are you going to run that app on any ios device?

[15:21] <Ven> specific provisions

[15:21] <Ven> if you have company-specific apps, you probably don't want them on the market

[15:21] *** molaf joined
[15:22] <timotimo> apple allows that?

[15:23] <Ven> I don't have any other explanation

[15:23] *** pecastro joined
[15:23] <timotimo> mhm mhm

[15:24] <Ven> timotimo: and it seems wrong. 

[15:24] <Ven> I see a few RubyMotion apps on the ios market...

[15:25] *** anaeem1 joined
[15:25] <[Coke]> down to 9 failures on parrot. 2 of them are long standing OS X failures, I think.

[15:27] *** Akagi201 joined
[15:27] <Ven> timotimo: Right. It's easy: rubymotion and robovm are ahead-of-time compilers

[15:30] *** anaeem1 left
[15:30] * brrt afk

[15:30] *** brrt left
[15:31] <[Coke]> is S02-types/deprecations.t failing on parrot on a non-OS X box?

[15:32] <timotimo> hmm

[15:36] *** chenryn joined
[15:36] <[Coke]> p: use Test; my $latin-chars = [~] chr(0)..chr(0xFF); is $latin-chars.comb(/<blank>/)>>.ord.join(","), '9,32,160', 'blank chars';

[15:36] <camelia> rakudo-parrot 7ff58f: OUTPUT«(timeout)»

[15:37] *** Ven left
[15:37] *** zakharyas left
[15:38] <[Coke]> ^^ that test depends on a certain version of unicode, maybe? locally I am getting 9,32, not 9,32,160

[15:38] <[Coke]> (er, 9,32)

[15:40] <timotimo> .tell azawawi i can run farabi6 when i clone it manually and run bin/farabi6

[15:40] <yoleaux> timotimo: I'll pass your message to azawawi.

[15:40] *** treehug88 joined
[15:40] <timotimo> moritz: can we get a sort of API that gives the anchor for a given line in the irclog?

[15:41] <timotimo> something simple like "get me the anchor for the last line from $nickname" would probably be enough to make yoleaux give good links to the clogs

[15:41] <timotimo> when .tell-ing someone something

[15:41] *** treehug88 left
[15:41] <bartolin> [Coke]: I get '9,32' as well locally (Debian 7, unicode-version is 6.0)

[15:43] *** treehug88 joined
[15:44] <bartolin> [Coke]: btw, if I read the irclog for #parrot correctly the two OX X failures in S19-command-line/dash-e.t should be gone with the next Parrot version

[15:45] <rurban> Really?

[15:48] *** Mouq joined
[15:51] <bartolin> rurban: didn't you add platform encodings for darwin?

[15:53] <timotimo> perlpilot haz a pull request :3

[15:53] <rurban> yes, ok

[15:54] <rurban> I'll check latest rakudo later. just testing weird platforms

[15:54] <rurban> now ppc64

[15:54] <bartolin> rurban++

[15:55] <timotimo> PerlJam: that's your github user, right?

[15:59] <timotimo> .tell azawawi i'm not really doing anything with farabi6, but it maxes out a single cpu on my machine :\

[15:59] <yoleaux> timotimo: I'll pass your message to azawawi.

[15:59] *** Mouq left
[16:01] <PerlJam> timotimo: aye, perlpilot is me.

[16:01] *** kjs_ left
[16:03] *** kjs_ joined
[16:10] *** rurban left
[16:12] *** odc joined
[16:16] *** Mouq joined
[16:19] *** ghostlines left
[16:26] *** kurahaupo_ joined
[16:29] *** Mso150 joined
[16:30] *** ajr_ left
[16:38] <raydiak> \o mornin #perl6

[16:38] <timotimo> hey ray

[16:39] <raydiak> how's it going timo?

[16:40] *** [Sno] joined
[16:41] <timotimo> it's all right

[16:41] <timotimo> kind of feeling unmotivated

[16:41] <timotimo> but i should go ahead and do the weekly

[16:41] <timotimo> (for two weeks ... again)

[16:41] <kjs_> timotimo: looking forward to reading your weekly!

[16:42] <timotimo> thank you :)

[16:46] <raydiak> yeah the weekly is awesome, keeping up with the backlog is *hard*

[16:46] <raydiak> sorry you're in a lull

[16:46] <raydiak> somewhat paradoxically, one of the main things that helps me when I'm feeling low on energy is to exercise a bit

[16:46] <timotimo> ♥

[16:46] <timotimo> yes, i've heard about that

[16:47] <timotimo> i have candy now, and then a pizza :3

[16:47] <timotimo> also i'm sitting in front of two big monitors with a beatufil photograph of a cat on them

[16:47] <raydiak> heh a lot to be happy about, then

[16:49] <timotimo> :)

[16:49] <timotimo> http://www.socwall.com/desktop-wallpaper/31219/cat/

[16:50] *** denis_boyun_ joined
[16:50] <raydiak> wow that is some awesome photography work

[16:50] *** dayangkun left
[16:51] <timotimo> and it's available for free on the internets!

[16:53] <raydiak> mine is a pic I took of a tree in a friend's yard, looking up from under the branches...I had a few drinks one night and did everything I needed to make it my boot splash, login splash, login theme background, wallpaper, shutdown splash...

[16:53] <timotimo> :D

[16:54] <timotimo> so ... what could non-expert perl6ers do to bring the GLR forwards?

[16:54] <timotimo> write a bunch of test cases?

[16:54] <grondilu> talking about cats, there was an awesome documentary about them lately on BBC:  https://www.youtube.com/watch?v=bRgasPQnjNg 

[16:57] *** guru joined
[16:57] *** guru is now known as Guest11863

[16:57] *** Guest11863 is now known as ajr_

[16:58] *** xfix is now known as notfix

[17:03] <dalek> roast: c03b6f9 | usev6++ | S02-types/lazy-lists.t:

[17:03] <dalek> roast: Fudge failing test for RT #121994 for JVM

[17:03] <dalek> roast: review: https://github.com/perl6/roast/commit/c03b6f9284

[17:03] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=121994

[17:03] <raydiak> the algebra system I started can isolate a single variable in simple equations now

[17:04] *** kaleem joined
[17:04] *** ptc_p6 left
[17:04] *** grep0r left
[17:04] <grondilu> raydiak: where is this?  I'm interested in something like that.

[17:05] <raydiak> grondilu: it's just something I started hacking on a few days ago, I don't have it anywhere public yet

[17:05] <grondilu> ok

[17:05] *** Mso150 left
[17:06] <grondilu> ever since I wrote my geometric algebra module, I've been thinking of implementing an algebraic role.

[17:06] *** dwarring joined
[17:06] <grondilu> but it's kind of tough, conceptually.

[17:06] <raydiak> grondilu: if you're interested in contributing in the near future, I can clean it up and put it on github soonlyish

[17:07] *** vendethiel joined
[17:07] <grondilu> before coding, I think a lot of discussion is needed on the subject.  Even the choice of vocabulary is not obvious, I think.

[17:07] <vendethiel> I just renamed myself on github to vendethiel. FROGGS++ for the motivation

[17:08] <raydiak> true enough...what I have currently is...a bit sloppy :)

[17:08] <grondilu> but I really think this is something perl6 should have.  Basically imho right now Numeric kind of sucks.

[17:08] <grondilu> (I mean the Numeric role)

[17:09] <grondilu> though maybe it will be on perl7

[17:09] <raydiak> how so?

[17:09] *** dakkar left
[17:10] <[Coke]> "perl7" is a loaded term.

[17:10] <PerlJam> There will be no perl7.  Ever.  (That's my prediction)

[17:11] <grondilu> never say never

[17:11] <awwaiid> [digression detected]

[17:11] <grondilu> I think there will.

[17:11] <PerlJam> grondilu: I didn't ;)

[17:11] <[Coke]> I just did a 'make install' on a rakudo install. then did "panda rebootstrap" which complained about: 

[17:11] <[Coke]> ===SORRY!===

[17:11] *** grep0r joined
[17:11] <[Coke]> Missing or wrong version of dependency 'src/gen/m-BOOTSTRAP.nqp'

[17:11] *** grettis joined
[17:12] <[Coke]> (any invocation of "panda" gives that error)

[17:13] *** kaleem left
[17:13] <PerlJam> grondilu: you could make a perl7 just to invalidate my prediction, but barring that, I don't think there will ever be a perl7.

[17:13] <timotimo> [Coke]: "panda rebootstrap"?

[17:14] <timotimo> you want to do perl6 ./rebootstrap.pl

[17:14] <grondilu> it's pretty clear that there is some sort of schism in the perl community.  It's quite likely that at some point the part of the perl5 team which doesn't like perl 6 decide to create perl 7.  And that'd be totally OK imho. 

[17:14] *** Mouq left
[17:15] <moritz> as long as they solve both perl 5's and perl 6's problems, I'm all for it :-)

[17:15] <timotimo> right after we "release" perl6, people will get confused again and believe perl6 is dying because "now they're working on perl7!"

[17:16] <grondilu> I don't know.  Should major version numbers indicate some sort of advancement or can't tehy just indicate chronological order or something? 

[17:16] <PerlJam> grondilu: I don't doubt that the p5p will try to find a "way around" Perl 6 at some point.   I highly doubt it will be called "perl 7"

[17:16] <timotimo> moritz: perl5's problem is that "no strict" is the default, perl6's problem is that it was too ambitious

[17:16] <timotimo> the obvious solution is this:

[17:16] <timotimo> perl7 is simply perl5 with "use strict" on by default

[17:16] <moritz> timotimo: that isn't its only problem, IMHO

[17:17] <[Coke]> timotimo: why do I need to go back to the panda install directory?

[17:17] <moritz> timotimo: one highly relevant is the strings vs. byte confusion

[17:17] <grondilu> perl7 would be a bit more than that

[17:17] *** _slade_ joined
[17:17] <moritz> timotimo: another is the lack of an object system that's integrated with core

[17:17] <grondilu> a bit of formal calculus for instance would be a nice addition.

[17:17] <timotimo> [Coke]: hmm. in theory panda could include a guard around its use statements at the very top to figure out if the dependencies have moved below its feet and find and launch the rebootstrap script

[17:17] <timotimo> moritz: oh, i thought you meant perl6

[17:18] <timotimo> mhhh, this pizza was garlicious

[17:18] <moritz> timotimo: no, I'm still dwelling on p5 :-)

[17:18] <timotimo> haven't lost hope just yet? :)

[17:19] <moritz> timotimo: I'm still here am I? :-)

[17:19] <timotimo> hope in perl5, i meant

[17:19] *** ptc_p6 joined
[17:19] <timotimo> communication is hard %)

[17:20] <moritz> timotimo: I'm not sure, really. I mean, I use it for dajob, and it works fine. But I'm not seing evolutionary approaches working to some of p5's problems

[17:20] *** kjs_ left
[17:20] <moritz> timotimo: and those that state that p5 and p6 are really separate languages (and I've done that too in the past) still don't have any solutions to p5's long term future

[17:21] <timotimo> "do you really expect me to evolve into a better language?" - "no, mister perl5. i expect you to die"

[17:23] <moritz> well, I do believe it evolves, and for the better. I just don't know yet if it will evolve far enough

[17:23] <[Coke]> also: panda rebootstrap should probably work without a network connection.

[17:23] <[Coke]> ... it failed, now it thinks there's no need to -rebootstrap- then bootstrap fails. *sigh*

[17:23] <PerlJam> moritz: anything is possible.

[17:24] <PerlJam> moritz: Maybe with P6 out there pushing the envelope on some things, p5p will wake up and steal some good ideas from it.

[17:24] <grondilu> you just can't expect p5 to die until p6 proves it can rival it in terms of performance.

[17:24] <timotimo> [Coke]: ah, yeah, rebootstrap saying "regular bootstrap is enough" is steered by finding a non-empty "state file", as in: stuff that's already installed

[17:25] <grondilu> (I mean, to me it's still quite an open question if it will ever)

[17:25] <timotimo> oh?

[17:25] <timotimo> well, i'll likely be working on the performance aspect for the foreseeable future

[17:25] <PerlJam> grondilu: Is that really true though?  P5 never beat P4 in the performance dept. and mostly nobody cared.

[17:25] <timotimo> though to be perfectly honest, i'm not really that effective at speeding up the "big picture"

[17:25] <[Coke]> did a git pull on panda, and then a bootstrap worked. tried rebootstrap, which is now dying.

[17:26] <[Coke]> with: No such method 'ast' for invocant of type 'Any'

[17:26] * grondilu did not know P4 was faster than P5

[17:26] <[Coke]> ... and now panda is dying with THAT error message all the time.

[17:26] <awwaiid> I'm starting to edit my one off scripts in ~/bin to be "#!/usr/bin/env rakudo" :)

[17:26] <[Coke]> grumpy coke is grumpy

[17:27] <PerlJam> For a good while it was one of the things bugging me that P5 was slower than P4.  Eventually (for me), the features the P5 provided made the "slowerness" unimportant.

[17:28] <PerlJam> And P6 has some killer features that P5 is lagging on.  As soon as P6 is "fast enough", it won't matter if it's slower than P5 as long as it's not egregiously so.

[17:29] <PerlJam> (and IMHO, P6 has crossed the magic threshhold of being fast enough, so when most people agree with me, P6's relative speed to P5 won't matter :)

[17:31] <timotimo> [Coke]: damn, that sucks. sorry to hear that!

[17:31] <timotimo> wait ...

[17:32] <timotimo> what's the third thing for 6.0.0 again? shaped arrays, NFG and ...

[17:32] <timotimo> oh, the great list refactor, no?

[17:33] *** fhelmberger left
[17:33] *** molaf left
[17:35] <PerlJam> timotimo: definitely

[17:41] <timotimo> grondilu: as always: if you have specific things that are too slow in your opinion, we'd love to have a look at your code; even better if you have a perl5 or python version that we can compare against!

[17:43] *** dayangkun joined
[17:44] *** spider-mario joined
[17:46] *** chenryn left
[17:47] <[Coke]> how does one nuke a panda install?

[17:47] <timotimo> hmm

[17:48] <timotimo> i think in the rebootstrap or bootstrap script there should be some rm-rf that'd show you how to do it

[17:48] <[Coke]> I can bootstrap as many times as I want, but the installed panda is borked.

[17:48] <timotimo> damn

[17:48] <timotimo> what does it say?

[17:48] <[Coke]> ... easier to nuke the whole thing.

[17:48] <timotimo> dependency error?

[17:48] <[Coke]> same Ast error.

[17:48] <timotimo> have you tried "panda update"?

[17:48] <[Coke]> same ast error

[17:48] <timotimo> god fucking damnit

[17:48] <[Coke]> ANY invocation of panda dies.

[17:48] <timotimo> what line does it come from?

[17:49] <timotimo> ooooh

[17:49] <timotimo> of course

[17:49] <[Coke]>   in sub from-json at lib/JSON/Tiny.pm:51

[17:49] <timotimo> panda opens and parses the module repository thingie first thing on startup

[17:49] <[Coke]> because the projects file was borked at some point

[17:50] <timotimo> you can set DESTDIR in your environment to have it look for a different path

[17:50] <[Coke]> removing the installed projects.json file doesn't help

[17:50] <timotimo> it doesn't?!

[17:50] <dalek> roast: cc6dfe8 | usev6++ | S12-class/attributes.t:

[17:50] <dalek> roast: Add tests for RT #7585 and RT #122109

[17:50] <dalek> roast: review: https://github.com/perl6/roast/commit/cc6dfe8bd8

[17:50] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=122109

[17:50] <timotimo> what about the statefile?

[17:50] <timotimo> is that also borken?

[17:51] <[Coke]> ARGLEBARGLE. "rm -rf ~/perl6;" go back to rakudo dir, "make install". I just built this 10m ago. the installed perl6 DOES NOT WORK. 

[17:52] <[Coke]> ah. that's kind of understandable, because our "make" process doesn't know anything about our "config" process, which is kind of borken.

[17:53] <[Coke]> ... which now brings me back to my complaint about installed moar/nqp vs. locally built moar/nqp. :P

[17:53] <[Coke]> rebuilding moar/nqp now, even though if I had been clever it wouldn't have been necessary.

[17:55] *** ptc_p6 left
[17:57] <timotimo> moritz: do you recall how much faster Str.trans for "\n" x 10000 became when you improved the O(n²) behavior?

[17:58] <dalek> Perlito: 997461e | (Flavio S. Glock)++ | / (2 files):

[17:58] <dalek> Perlito: Perlito5 - js - implement special syntax "PATTERN" for split() - https://github.com/fglock/Perlito/issues/22

[17:58] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/997461ef04

[17:59] *** pecastro left
[18:00] *** Ven joined
[18:03] <[Coke]> ARGLEBARGLE

[18:03] <[Coke]> completely wiped my perl6 install. reinstalled nqp/moar/perl6 - ran perl6 panda bootstrap

[18:04] <[Coke]> er, sorry, "perl6 bootstrap.pl" - installed... installed panda is broken, same error as before.

[18:04] <[Coke]> No such method 'ast' for invocant of type 'Any'

[18:06] <[Coke]> ah, right. https://github.com/tadzik/panda/issues/96

[18:10] <timotimo> who did FROGGS work together with to improve rakudo's (well, MoarVM's) packagability?

[18:10] <timotimo> the maintainer of our rakudo packages for SuSE i believe

[18:22] *** FROGGS joined
[18:23] *** Mouq joined
[18:31] <dalek> Perlito: 491ce2e | (Flavio S. Glock)++ | / (2 files):

[18:31] <dalek> Perlito: Perlito5 - js - split() runtime accepts regex as first argument - https://github.com/fglock/Perlito/issues/22

[18:31] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/491ce2e446

[18:35] *** liztormato joined
[18:36] *** kjs_ joined
[18:36] <liztormato> [Coke]: Sorry to hear your panda troubles. It's probably my fault. 

[18:37] <liztormato> FWIW I currently always do a perl6 rebootstrap to make sure I didn't break panda

[18:38] <liztormato> It works on my machine ;-(

[18:39] *** amkrankruleuen left
[18:39] <liztormato> Should be home in about an hour. I will then double check right away. 

[18:41] *** amkrankruleuen joined
[18:43] <[Coke]> liztormato: it will work if I wipe the projects.json file and then try to bootstrap when I'm not forced to use an http proxy

[18:43] *** pierrot left
[18:44] <liztormato> Ok. So you have a workaround 

[18:48] *** liztormato left
[18:50] *** pierrot joined
[18:52] *** NCcoachie joined
[18:53] *** NCcoachie left
[19:02] *** Flogator joined
[19:04] *** kjs_ left
[19:05] *** darutoko left
[19:07] *** liztormato joined
[19:07] *** kjs_ joined
[19:10] *** liztormato left
[19:11] *** Ven left
[19:12] *** kjs_ left
[19:15] *** _slade_ left
[19:21] *** denis_boyun_ left
[19:28] *** Akagi201 left
[19:29] <timotimo> i weeklyposted

[19:31] *** brrt joined
[19:31] <vendethiel> noice

[19:32] <masak> http://p6weekly.wordpress.com/2014/10/20/2014-41-42-apw-glr-progress-perl%E2%80%AF6-ide/

[19:32] <masak> (for those of us who would otherwise have to search for the blog and post)

[19:32] <masak> the first hit of my search was http://www.perl.com/pub/2002/09/p6pdigest/20020915.html

[19:33] <PerlJam> masak++ 

[19:33] <PerlJam> timotimo++

[19:33] *** fhelmberger joined
[19:37] <timotimo> masak: "it's surprisingly easy to stumble upon very outdated documents with a search engine" :P

[19:38] *** fhelmberger left
[19:38] <PerlJam> Ah ... I see I volunteered for this month's compiler release.   Suggestions for the release name are welcome.   I wanted to use Salzburg, but there doesn't appear to be a Perl Mongers group there. 

[19:40] <masak> PerlJam: quick! start one!

[19:40] <masak> also, which one is the closest?

[19:40] <PerlJam> btw, does "Salzburg" literally mean "salt town"?

[19:41] <masak> PerlJam: yes.

[19:41] <PerlJam> Do they have lots of salt or something?

[19:41] <masak> PerlJam: how else would you preserve your Hamburg?

[19:41] <PerlJam> A major salt mine?

[19:41] <mauke> salt castle

[19:41] <PerlJam> mauke: I'd like to see this castle made of salt :)

[19:42] <mauke> I mean, that's the literal translation

[19:42] <vendethiel> masak: this read was a very good one :-)

[19:42] <masak> yes :)

[19:44] <cognominal> pmichaud++ and timotimo++ for their blog and (semi-)weekly summary.

[19:46] <masak> today's wacky DSL idea: a subroutine that takes a block and returns a dynamically constructed object with an ACCEPT method, to be passed to a .grep

[19:46] <masak> actually used in actual code I'm writing(TM)

[19:47] *** _sri_ left
[19:48] *** _sri joined
[19:48] <PerlJam> maska++ your latest macrotic rambling has lots of ... "character"  :)

[19:49] <PerlJam> masak_++ even

[19:49] <PerlJam> blah!  I can't even type your nick

[19:49] <PerlJam> masak++  (typed. real. slow. like. that time :)

[19:49] <masak> PerlJam: sometimes the lack of rigor in the macros spec is... disappointing.

[19:50] *** kaare_ left
[19:52] <Flogator> Hey all :) Im suprised seeing so many people in this IRC^^ will perl6 actuallly be published some day? sry for the question - but it's really been a while ;)

[19:52] <masak> Flogator: first off, welcome!

[19:52] <masak> Flogator: this is a common question here :)

[19:52] <PerlJam> Flogator: that statement and question are oddly familiar even

[19:52] <PerlJam> (exact phrasing)

[19:52] <masak> Flogator: we're happy to answer it for you as best we can.

[19:52] <masak> Flogator: first approximation at an answer.

[19:53] <masak> Flogator: "yes."

[19:53] <masak> someone else have a go :)

[19:53] <PerlJam> Flogator: to my mind, Perl 6 is "published" every month.  In fact, I'm "publishing" it this month in a few days

[19:53] <masak> Flogator: PerlJam's answer is the typical "we're releasing it, but no-one seems to notice" answer.

[19:54] <masak> Flogator: I am now providing commentary on it for your elucidation.

[19:54] <Flogator> :) I'm just wondering wheter it's worth beeing a "early adopter" if your not interested in developing it? So can I actually work with it already?

[19:54] <Flogator> youre great guys!

[19:54] <masak> Flogator: many of us here are early adopters like that.

[19:55] <masak> Flogator: I've been an early adopter since around 2008.

[19:55] <masak> Flogator: yes, you can definitely work with it already. I've written all kinds of stuff in Perl 6. some of it is in production now.

[19:55] <masak> Flogator: but (as with all early stuff) expect some rough edges.

[19:55] <brrt> and there's definitively active development

[19:55] <Flogator> masak: I like that!

[19:56] <masak> Flogator: I've also submitted around 1500 bug reports.

[19:56] <masak> (though I'm an outlier, admittedly)

[19:56] <Flogator> masak: I guess that's sure ;) (and a little scary^^ but in 6 years - ok)

[19:57] <masak> yeah, that's much less than one per day.

[19:57] <mauke> haha

[19:57] <masak> it used to be around one per day, but then the bugs stopped coming as quickly.

[19:57] <PerlJam> masak: Outliers are important and necessary!  See  http://www.ted.com/talks/shawn_achor_the_happy_secret_to_better_work   :-)

[19:57] <masak> I blame nom and 6model -- things got so bloody stable after that. <grumble> :P

[19:58] <masak> PerlJam: interesting. will watch.

[20:00] <vendethiel> Flogator: I've started reading stuff on perl6 in february, started using it in prod around 2 months later

[20:02] <masak> Flogator: if you're curious about the quickest way into the community, it's this: (a) pick a task that seems way too small -- "surely this should be easy!", (b) find and submit your first bug, (c) wake up half a year later, covered in TODOs, wondering what the heck happened.

[20:02] *** treehug8_ joined
[20:02] <masak> 1/2 :P

[20:02] <brrt> we're definitely more production-ready than we were before

[20:02] <dalek> rakudo/nom: d04b5b4 | duff++ | docs/announce/2014.10.md:

[20:02] <dalek> rakudo/nom: a templatey first stab at the Oct release announcement

[20:02] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d04b5b467d

[20:02] <moritz> PerlJam++

[20:02] <Flogator> ok - thanks alot- guess I will look into it^^

[20:03] <vendethiel> brrt: "we're nearer than before" is a pretty useless comparison :P

[20:03] <vendethiel> I certainly hope we havn't regressed!

[20:03] <brrt> let's make it less useless then

[20:04] <PerlJam> vendethiel: it does happen occasionally.

[20:04] <brrt> i think we're on the upper half of the sigmoidal readiness curve

[20:04] <masak> suggesting that from now on, convergence will be an ever-slowing process!

[20:05] <brrt> not suggesting that your personal readiness cutoff is equal to the maximum though :-)

[20:05] <PerlJam> nah, the target will move too, so the rate of convergence will sometimes speed up and sometimes slow down

[20:05] *** treehug88 left
[20:05] <masak> wow, this is some of the weirdest code I've ever written.

[20:06] <vendethiel> .oO( and that says a lot )

[20:07] <vendethiel> masak: we're eagerly awaiting for the gist :P

[20:07] <masak> vendethiel: https://gist.github.com/masak/67bbd56426b12d0e5943

[20:08] <masak> (I'm not finished with the rest, so I can't post the whole code yet)

[20:08] <dalek> specs: de5fbbb | usev6++ | S32-setting-library/Exception.pod:

[20:08] <dalek> specs: [S32::Exception] Add X::Syntax::Term::MissingInitializer

[20:08] <dalek> specs: review: https://github.com/perl6/specs/commit/de5fbbb204

[20:08] <PerlJam> masak: you clearly have an affinity for games ;)

[20:08] <masak> I believe line 4 is necessary, to lexically capture the dynamical.

[20:08] <masak> PerlJam: I do.

[20:09] <masak> PerlJam: in this case, I'm building a searchable database for a https://en.wikipedia.org/wiki/Hex_(board_game) corpus

[20:10] *** kjs_ joined
[20:10] <PerlJam> That line 4 business reminds me a little of the hoops you have to jump through in JS to make sure you get the right "this" sometimes.

[20:11] <masak> PerlJam: yes, I had similar associations.

[20:11] <masak> PerlJam: I *think* that line is necessary, though it's possible it's not.

[20:11] <PerlJam> I tend to hope it's not :)

[20:12] <masak> ok, this requires some empirical SCIENCE.

[20:13] <masak> m: sub foo { my $*DYN = 42; say $*DYN; return Any.new but role { method bar { sy $*DYN } } }; my $o = foo; $o.bar

[20:13] <camelia> rakudo-moar 7ff58f: OUTPUT«(timeout)»

[20:13] <masak> locally, "42\nDynamic variable $*DYN not found"

[20:13] <masak> ok, so it's necessary.

[20:14] <masak> I guess the moral is: "dynamical variables aren't lexically bound to their original scope". and it would be kind of strange if they were.

[20:14] <masak> and probably counterproductive.

[20:14] *** jack_rabbit joined
[20:14] *** pecastro joined
[20:15] *** Ven joined
[20:16] <vendethiel> do we have a .compact to remove any-values?

[20:16] <masak> a what to what?

[20:16] <vendethiel> right :

[20:16] <PerlJam> masak: aye, but I still find it distasteful that there's this random assignment whose only purpose is so that the closure works right

[20:17] <masak> PerlJam: I 50% agree with you, and 50% "yeah, but it's not 'only'; you need a lexical binding for the closures to work; that's how they work"

[20:17] *** kjs_ left
[20:17] <PerlJam> masak: maybe we need a macro that enables us to say "close over this thing right here"  ;)

[20:18] <PerlJam> (which makes an anonymous lexical binding for us0

[20:18] <PerlJam> s/0/)/

[20:18] <masak> <shaky-handwriting>DO NOT MESS WITH LEXICAL BINDING AND CLOSURES</shaky-handwriting>

[20:18] <Ven> can I get a count of matching junctions :D?

[20:19] <masak> Ven: received wisdom is that "you want a Set or something that you can look into"

[20:19] <Ven> not really

[20:19] <Ven> m: my $i = +(any(/a/, /b/) ~~ /ab/)

[20:19] <camelia> rakudo-moar 7ff58f: OUTPUT«use of uninitialized value of type Nil in numeric context  in block <unit> at /tmp/KqT9B_kAMY:1␤␤»

[20:20] <PerlJam> vendethiel: um ... what?

[20:20] <masak> I am now creating a sub that wraps a dynamical sub in a sub and stores it back in the dynamical.

[20:20] <PerlJam> er, Ven

[20:20] <vendethiel> PerlJam: vendethiel is fine :-)

[20:21] <masak> vendethiel: you are Not Meant To Care about the way junctions look inside. if you care about the number of elements, then you care about the inner structure of a junction.

[20:21] <Ven> I've just used "+@blah.grep(x|y)" :D

[20:21] <Ven> masak: I don't care about the number of elements

[20:21] <masak> ok.

[20:21] <PerlJam> I'm only getting more confused then  

[20:22] <PerlJam> and so ... I'll take this opportunity to go back to hacking for $work  :)

[20:22] *** Mouq left
[20:24] *** brrt left
[20:26] <masak> omg, the code works o.O

[20:26] <Ven> omg!

[20:26] <Ven> must be a bug

[20:27] <masak> no; just massive cheating(tm) and time to write more tests(tm)

[20:27] <Ven> ™™ <- here's some for you

[20:28] *** molaf joined
[20:31] *** spider-mario left
[20:34] *** gfldex left
[20:34] <masak> 😸

[20:36] *** rurban joined
[20:41] *** Ven left
[20:42] * [Coke] reads macrotic as necrotic.

[20:56] <dalek> rakudo/nom: df4b494 | moritz++ | docs/announce/2014.10.md:

[20:56] <dalek> rakudo/nom: [release] Announce that future Rakudos will need ICU in their parrot backend

[20:56] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/df4b49441b

[20:57] <masak> [Coke]: henceforth, my professional title will be "the Macromancer"

[20:59] <[Coke]> moritz++ masak++ # but not for the same thing

[21:00] <masak> things++ # for sometimes differing

[21:02] *** molaf left
[21:02] <lizmat> [Coke]: so, should I investigate panda breakage or not?

[21:02] <yoleaux> 14:33Z <jnthn> lizmat: It's better to do async communication with me these days than try and find a time we're both on IRC, I suspect. :) Just drop the code example that shows it or other stuff I need to reproduce it in a gist and .tell me it ;)

[21:08] <lizmat> timotimo++ for weekly update!

[21:08] <lizmat> fwiw, I think TimToady's statement about the 3 things we need for 6.0.0, is a good guideline for Xmas to come

[21:09] <lizmat> GLR, NFG and NSA  :-)

[21:09] *** kjs_ joined
[21:10] *** kurahaupo_ left
[21:11] <[Coke]> lizmat: there is already a ticket for my issue.

[21:11] <[Coke]> it's from at least august, I think - wasn't you

[21:11] <lizmat> ah, ok, *phew*

[21:11] <lizmat> having broken so many things, I've become a bit sensitive to these things  :-)

[21:12] <[Coke]> I forgot that I was having the same problem I've had in the past, and kept getting moar frustrated until I found the old ticket.

[21:12] <[Coke]> nah, you're cool. no worries.

[21:12] *** Tekk_ joined
[21:12] <Tekk_> lizmat: I'm so used to #perl being dead on here relative to irc.perl.org :P

[21:12] <lizmat> :-)

[21:12] *** cognominal_ joined
[21:12] <pmichaud> good afternoon, #perl6

[21:13] <moritz> good pm, pm

[21:13] <[Coke]> good morning, pmichaud!

[21:13] <Tekk_> so, what's the best way to do globbing in 6? I got as far as IO::Path.contents but I can't figure out how to get :test to take a regex

[21:14] <Tekk_> or much of anything really

[21:14] <moritz> Tekk_: you could always just .grep the results

[21:14] <moritz> m: say '.'.path.contests

[21:14] <moritz> m: say '.'.path.contents

[21:14] <camelia> rakudo-moar 7ff58f: OUTPUT«No such method 'contests' for invocant of type 'IO::Path'␤  in block <unit> at /tmp/ffRTN2dlGd:1␤␤»

[21:14] <camelia> rakudo-moar 7ff58f: OUTPUT«"/home/p6eval/jvm-rakudo".IO "/home/p6eval/star-2014.08".IO "/home/p6eval/.viminfo".IO "/home/p6eval/rakudo-inst-2".IO "/home/p6eval/.pugs_history".IO "/home/p6eval/.selected_editor".IO "/home/p6eval/star".IO "/home/p6eval/rakudo1".IO "/home/p6eval/.bash_h…»

[21:15] *** cognominal left
[21:15] <[Coke]> m: glob(/^ 'rak'/).say

[21:15] <camelia> rakudo-moar 7ff58f: OUTPUT«===SORRY!=== Error while compiling /tmp/2DjJgCcSHi␤Undeclared routine:␤    glob used at line 1␤␤»

[21:15] <moritz> m: say '.'.path.contents.grep({ .Str ~~ /pugs/ })

[21:15] <camelia> rakudo-moar 7ff58f: OUTPUT«"/home/p6eval/.pugs_history".IO␤»

[21:15] <lizmat> Tekk_: $ 6 '.say for ".".IO.contents: :test(/foo/)'

[21:15] <lizmat> "/Users/liz/Github/rakudo.moar/foo.t".IO

[21:15] <lizmat> "/Users/liz/Github/rakudo.moar/fooz".IO

[21:15] <[Coke]> (glob is referenced in S32/IO ...)

[21:15] <moritz> m: say '.'.path.contents(test => /pugs/)

[21:15] <camelia> rakudo-moar 7ff58f: OUTPUT«"/home/p6eval/.pugs_history".IO␤»

[21:15] <pmichaud> m: say '.'.path.contents.grep(/pugs/)  # curious

[21:15] <camelia> rakudo-moar 7ff58f: OUTPUT«"/home/p6eval/.pugs_history".IO␤»

[21:16] <moritz> Tekk_: just do it right, and it'll work :-)

[21:16] <lizmat> [Coke]: that's really a fossil, atm

[21:17] <lizmat> or at least part of the "Conjectural Stuff"

[21:17] <Tekk_> ah, I just had the syntax wrong then :)

[21:18] <pmichaud> m: say '.'.path.contents.grep(/rak/)  # curious #2

[21:18] <lizmat> it's because of this functionality, that I don't think we need glob() at all, really

[21:18] <camelia> rakudo-moar 7ff58f: OUTPUT«"/home/p6eval/jvm-rakudo".IO "/home/p6eval/rakudo-inst-2".IO "/home/p6eval/rakudo1".IO "/home/p6eval/rakudo-inst-1".IO "/home/p6eval/rakudo-inst".IO "/home/p6eval/rakudo".IO "/home/p6eval/rakudo2".IO␤»

[21:18] <pmichaud> \o/

[21:18] <Tekk_> lizmat: yeah

[21:19] <Tekk_> I just had to figure out how you're supposed to do it :)

[21:19] * TimToady wonders when convenience suddenly became passe...

[21:19] <lizmat> BTW, .IO.contents is deprecated as of 2014.10, please use .IO.dir instead  :-)

[21:20] <Tekk_> TimToady: when the inconvenient alternative is sufficiently in style. Java being a fantastic example

[21:20] <lizmat> TimToady: perhaps since I rewrote large parts of S16/S32:IO ?

[21:22] <lizmat> glob() was still NYI, fwiw

[21:23] <lizmat> if we have a good spec, we could implement it  :-)

[21:23] <lizmat> is "perldoc -f glob" is the spec, we could do that too

[21:23] <TimToady> you don't want me speccing when I have a fever :)

[21:23] <lizmat> *if

[21:24] <Tekk_> lizmat: do you mean IO.directory?

[21:24] <Tekk_> rakudo fails saying that .dir is deprecated :)

[21:24] <Tekk_> or maybe I have an ancient rakudo..

[21:24] <lizmat> yes, that must be ancient

[21:24] <Tekk_> 2013.05. Yep, that qualifies as ancient...

[21:24] * Tekk_ goes to fix the slackbuild

[21:24] <lizmat> you also might want to try moarVM instead

[21:24] <lizmat> you will be surprised by its speed

[21:25] <Tekk_> not having 2 second start times on the interpreter sounds pretty nice

[21:25] <Tekk_> that was annoying me quite a bit

[21:25] <lizmat> $ 6 1

[21:25] <lizmat> real	0m0.209s

[21:27] <cognominal_> lizmat, it seems that your recent changes have borked local-fetch in Panda::Fetcher as per the error messages when rebootstrap.pl-ing panda.

[21:27] * Tekk_ has rakudobrew doing its thing, instead of using slackbuilds :P

[21:27] <cognominal_> No such method 'cleanup' for invocant of type 'Str'

[21:27] <cognominal_>   in sub local-fetch at /Users/cog/git/panda/lib/Panda/Fetcher.pm:46

[21:28] * lizmat looks

[21:28] <cognominal_> I am so out ouf tune with the perl6 recent development I may have missed somthing important.

[21:29] <TimToady> btw, mkdir(Date.today) stopped working

[21:29] <lizmat> cognominal_: how do you invoke that ?

[21:29] <[Coke]> ^^ someone add a spectest.

[21:30] <cognominal_> cd ~/git/panda  # go to the panda repository (with my setting)

[21:30] <cognominal_> perl6 rebootstrap.pl

[21:31] <lizmat> TimToady: this is what you see?

[21:31] <lizmat> $ 6 'mkdir(Date.today)'

[21:31] <lizmat> No such method 'IO' for invocant of type 'Date'

[21:31] <cognominal_>     my $cleanup       = $from.IO.path.cleanup;   # The line where it blows up.  Being an IO.path stuff, I dare to infer this is due to your recent changes

[21:32] <lizmat> aha... but maybe you need to pull panda then

[21:32] <lizmat> my version reads: my $cleanup       = $from.IO.cleanup

[21:35] <lizmat> TimToady: perhaps we need to move method Cool.IO to Any

[21:35] *** kjs_ left
[21:35] *** rurban left
[21:36] * lizmat tests that

[21:37] *** kjs_ joined
[21:38] <cognominal_> lizmat++, sorry I was on a fork. Silly me.

[21:42] *** denis_boyun_ joined
[21:42] <lizmat> hmmm... interesting failure mode again  :-(

[21:42] <lizmat> Stage parse      : moar(54226,0x7fff7c1a8310) malloc: *** error for object 0x7f8dc4e95c70: pointer being freed was not allocated

[21:42] <masak> 'night, #perl6

[21:42] <lizmat> gnight, masak

[21:47] <timotimo> good day TimToady 

[21:47] <lizmat> grrrr... it seems that just a "take" in jvm bombs ?

[21:48] <timotimo> because it's outside a gather?

[21:48] <lizmat> no, it's very much inside

[21:50] <lizmat> timotimo: see src/core/Baggy.pm, sub ROLLPICKGRABN

[21:50] *** dayangkun left
[21:51] <timotimo> :(

[21:52] *** denis_boyun_ left
[21:53] <dalek> rakudo/nom: 3975e16 | (Elizabeth Mattijsen)++ | src/core/Temporal.pm:

[21:53] <dalek> rakudo/nom: Fix mkdir/rmdir(Date) breakage TimToady++

[21:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3975e16b10

[21:53] <lizmat> timotimo: do you see anything wrong there ?

[21:53] *** Flogator left
[21:54] *** treehug8_ left
[21:55] <lizmat> .tell jnthn suggestions about take failing on jvm? https://gist.github.com/lizmat/ab00347d5cc44a23c65b

[21:55] <yoleaux> lizmat: I'll pass your message to jnthn.

[21:56] *** rindolf left
[21:56] <lizmat> .tell jnthn code is from src/core/Baggy.pm

[21:56] <yoleaux> lizmat: I'll pass your message to jnthn.

[21:57] *** bjz left
[21:58] *** thou joined
[22:02] *** kjs_ left
[22:03] *** kjs_ joined
[22:03] <lizmat> .tell jnthn the gist with the sub/private method codegen issue: https://gist.github.com/lizmat/16382a07084c5bb33d19

[22:03] <yoleaux> lizmat: I'll pass your message to jnthn.

[22:05] <lizmat> ooh wow

[22:05] *** colomon left
[22:05] <lizmat> seems if I take away the extra { } of the gather, it works

[22:06] * lizmat is going to test that on moar as well

[22:06] <timotimo> lizmat: wat :(

[22:06] <timotimo> glad it works, but ...

[22:06] *** colomon joined
[22:07] *** virtualsue left
[22:11] <dalek> rakudo/nom: f0efc88 | (Elizabeth Mattijsen)++ | src/core/Baggy.pm:

[22:11] <dalek> rakudo/nom: Apparently fix "take" failure on JVM

[22:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f0efc88310

[22:13] *** FROGGS left
[22:16] *** kjs_ left
[22:19] *** davido__ left
[22:28] *** camelia left
[22:32] *** erkan joined
[22:36] *** camelia joined
[22:37] *** ChanServ sets mode: +v camelia

[22:42] *** colomon left
[22:48] *** colomon joined
[22:52] <lizmat> alas, that didn't fix it after all...

[22:52] <lizmat> giving up for today.... gnight #perl6!

[22:58] <colomon> o/

[23:05] <timotimo> hi u

[23:07] *** ajr_ left
[23:13] *** BenGoldberg joined
[23:21] <japhb> .botsnack

[23:21] <yoleaux> :D

[23:24] *** leont left
[23:25] *** davido__ joined
[23:27] *** davido__ is now known as davido_home

[23:33] *** kurahaupo joined
[23:34] *** fhelmberger joined
[23:38] *** fhelmberger left
[23:55] *** virtualsue joined
