[00:02] <timotimo> ./bench time rakudo-jvm/46234b5  12621,67s user 252,31s system 175% cpu 2:02:10,22 total

[00:02] <timotimo> 2 hours, seriously? >_>

[00:03] *** lue left
[00:06] *** colomon joined
[00:06] <timotimo> i guess that's just because the jvm can go up so high in its counts and gets the startup time added each time >_<

[00:06] *** kurahaupo_mobile left
[00:08] <timotimo> yeah, it's at like 4 seconds startup time per data point, run each data point twice for minimally more precise measurements, go up a whole bunch of steps before aborting

[00:11] *** berekuk joined
[00:12] *** mattp__ left
[00:15] *** kst` left
[00:16] *** lue joined
[00:25] <timotimo> (did i mention the 10 runs it does at the beginning at 0 scale to figure out the compile- and startuptime?

[00:25] *** mattp__ joined
[00:25] <timotimo> those add a whooping 40 to 45 seconds for each of the 44 tests)

[00:25] *** berekuk left
[00:25] <timotimo> p: say (40 * 44) / 60

[00:25] <camelia> rakudo-parrot 46234b: OUTPUT«29.333333␤»

[00:25] <timotimo> that alone is *half* an *hour*

[00:25] <timotimo> whoa.

[00:26] <timotimo> p: say (45 * 44) / 60 # this is closer to it

[00:26] <camelia> rakudo-parrot 46234b: OUTPUT«33␤»

[00:34] *** berekuk joined
[00:38] <dalek> roast: f86c971 | (Pepe Schwarz)++ | S32-exceptions/misc.t:

[00:38] <dalek> roast: Adjusted a few tests that declare a class to do so lexically.

[00:38] <dalek> roast: review: https://github.com/perl6/roast/commit/f86c971476

[00:39] <psch> 9 failing tests on nom in that file now!

[00:39] <psch> one of those is really easy to get passing too!

[00:40] <psch> that's why it's 8 failing tests on my refactor heh

[00:40] <psch> https://github.com/rakudo/rakudo/blob/nom/src/Perl6/Optimizer.nqp#L586 # :method needs a '!' in the beginning

[00:40] <psch> but that's obviously not urgent in any way 

[00:41] <timotimo> huh?

[00:41] <timotimo> that's weird to me

[00:41] <psch> timotimo: the value

[00:41] <timotimo> :!method($name)?

[00:41] <psch> :method("!" ~ $name)

[00:41] <timotimo> oh

[00:41] <psch> to have a textual representation for private

[00:41] <timotimo> okay, fair enough

[00:41] <timotimo> want me to quickly put it in?

[00:41] <psch> i don't mind either way; it's in my refactor, if you have some time to spare i'd rather you look over that

[00:42] <timotimo> i don't quite understand why you had to put the "my" in there, though

[00:42] <psch> the previous ways failed with "Redeclaration of symbol A"

[00:42] <psch> there's a few 'class A' tests in the file

[00:42] <timotimo> oh

[00:43] <psch> i'd have thought throws_like has it's own scope, but it works like this and doesn't otherwise...

[00:43] <psch> maybe that should get filed as a bug against Test.pm

[00:43] <timotimo> but always inside a throws_like, eh?

[00:43] <timotimo> i kind of don't think those should even collide

[00:44] <psch> i agree, intuitively they definitely shouldn't

[00:44] <psch> *filed against Test::Util rather

[00:45] <psch> although i'm not sure if that's to blame here

[00:45] <timotimo> it just EVALs it :\

[00:45] <timotimo> r: EVAL "class Barf {}"; EVAL "class Barf {}";

[00:45] <camelia> rakudo-parrot 46234b, rakudo-jvm 46234b, rakudo-moar 46234b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling eval_0␤Unable to parse class definition␤at eval_0:1␤------> [32mclass Barf [33m⏏[31m<EOL>[0m␤    expecting any of:␤        statement list␤      …»

[00:46] <timotimo> oh, hehe

[00:46] <timotimo> r: EVAL 'class Barf {}'; EVAL 'class Barf {}';

[00:46] <camelia> rakudo-parrot 46234b, rakudo-jvm 46234b, rakudo-moar 46234b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling eval_1␤Redeclaration of symbol Barf␤at eval_1:1␤------> [32mclass Barf [33m⏏[31m{}[0m␤    expecting any of:␤        statement list␤        prefi…»

[00:46] <timotimo> r: EVAL 'class Barf {}'; say ::.keys();

[00:46] <camelia> rakudo-parrot 46234b, rakudo-moar 46234b: OUTPUT«$! $/ $_ GLOBALish EXPORT $?PACKAGE ::?PACKAGE $=pod !UNIT_MARKER␤»

[00:46] <camelia> ..rakudo-jvm 46234b: OUTPUT«::?PACKAGE $! GLOBALish EXPORT !UNIT_MARKER $=pod $_ $/ $?PACKAGE␤»

[00:46] <timotimo> hmm. class declarations are our-scoped by default, eh?

[00:48] <psch> according to S12, yes

[00:48] <timotimo> so i guess it would be correct to require a "my" there?

[00:49] <psch> that's my understanding, yes

[00:49] <psch> at least if the class(es) aren't used over multiple tests, although those should probably be grouped in a block

[00:50] <timotimo> wouldn't the our scope go past even a block?

[00:50] <timotimo> r: { EVAL 'class Barf {}';}; {EVAL 'class Barf {}';}

[00:50] <camelia> rakudo-parrot 46234b, rakudo-jvm 46234b, rakudo-moar 46234b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling eval_1␤Redeclaration of symbol Barf␤at eval_1:1␤------> [32mclass Barf [33m⏏[31m{}[0m␤    expecting any of:␤        statement list␤        prefi…»

[00:50] <psch> right, it does because we're still in GLOBAL

[00:50] <timotimo> i wonder why we don't get colors from camelia any more

[00:50] <psch> i have colors?

[00:50] <timotimo> oh, huh?

[00:50] <psch> didn't you mess around with 24bit fonts or something?

[00:50] <timotimo> OUTPUT«?31m===?0mSORRY!?31m=== ← this is what i see

[00:50] <timotimo> no, i didn't :)

[00:51] <psch> i thought i read something in the clog, but i must've been wrong

[00:51] <timotimo> 12,02heyo

[00:51] <timotimo> i see those colors

[00:52] <geekosaur> I barely see yours...

[00:52] *** tadzik joined
[00:52] <skids> Yeah, I've never seen colors from camelia in xchat-gnome, despite having "show colors" on.  But I saw that.

[00:52] <geekosaur> odd

[00:52] <geekosaur> oh, no it's not

[00:53] <timotimo> huh?

[00:53] <geekosaur> I have a script

[00:53] <timotimo> oh, do you? :)

[00:53] <timotimo> i believe i used to see color back when i was using irssi

[00:53] <psch> i'm running stock irssi

[00:54] <geekosaur> http://lpaste.net/99716

[00:54] <timotimo> huh.

[00:55] <timotimo> i was convinced, camelia had something that turns ansi escape code colors into irc colors

[00:56] <skids> Is the color system well modularized?

[00:56] <timotimo> the color system of what?

[00:57] <skids> of rakudo.

[00:57] <skids> (or nqp)

[00:57] <timotimo> that's just Term::ANSIColor

[00:57] <skids> wherever it is done.

[00:58] <psch> coloring of exceptions is hardcoded in src/core/Exception.pm in gist()

[00:58] <psch> that is X::Comp::Exception.gist()

[00:59] *** kivutar left
[00:59] <psch> err, almost

[00:59] <psch> role X::Comp is Exception... :)

[00:59] <timotimo> oh, indeed

[00:59] <timotimo> that's not super cool.

[01:00] <timotimo> did you know that Pod::To::Text can do ansi coloring and formatting if you ask nicely? :3

[01:00] <skids> Well I imangine you want exceptions working well before you're ready to load Term::ANSIcolor

[01:00] <timotimo> POD_TO_TEXT_ANSI=1 perl6 --doc=Text Foo.pm

[01:00] <timotimo> true indeed

[01:01] *** mattp__ left
[01:01] * psch .oO( so ask nicely means in all-caps... )

[01:01] <timotimo> :)

[01:01] *** mattp_ joined
[01:01] <geekosaur> just means it's in the environment and following convention :p

[01:03] *** btyler joined
[01:05] <psch> geekosaur: i realize that, i guess i'm getting a bit silly because it's late

[01:05] <lue> timotimo: camelia has never used IRC colors.

[01:06] <timotimo> weird!

[01:06] <timotimo> irssi must have that ansi color stuff baked in or it just passes it straight on through

[01:06] <lue> there must be some ANSI color setting that got turned off in your client if you're not seeing it colored any more.

[01:06] <lue> r: say "\e"

[01:06] <camelia> rakudo-parrot 46234b, rakudo-jvm 46234b, rakudo-moar 46234b: OUTPUT«␤»

[01:07] <geekosaur> lue: xchat doesn't do ANSI color

[01:07] <lue> timotimo: irssi is the terminal thing, right? Then it gets the literal escape char followed by [ <colors> m

[01:07] <timotimo> well, i went from irssi to weechat

[01:07] *** telex left
[01:07] <lue> and the terminal knows that combination of characters as ANSI coloring :)

[01:07] <geekosaur> some of us have scripts that rewrite ANSI color onto mIRC color. ircii I wouldn't know about

[01:07] *** beastd left
[01:07] <timotimo> https://gitorious.org/irker/drnlms-irker/commit/5e785069fbf632e8d5694affc5e4298d9d3c52f3 - when searching for weechat + ansi %)

[01:07] <geekosaur> but not uncommon for curses stuff to strip control chars

[01:08] <geekosaur> since curses does not render them

[01:08] <lue> timotimo: either irssi didn't strip escape chars before passing to the terminal, or it handled them for you.

[01:08] *** berekuk left
[01:08] *** telex joined
[01:08] <psch> irssi does what termcap/terminfo say the terminal can do according to their faq

[01:09] <psch> which in this case probably means "pass through"

[01:11] <psch> but then the faq actually says "handles colors", so i shouldn't just say things like that

[01:11] <geekosaur> yes, for one thing no terminal speaks mIRC colors directly that I'm aware of

[01:11] <timotimo> heh.

[01:12] <psch> timotimo: in case want it, the pre-commit hook now lives here and is a bit smarter about the cwd -> https://github.com/peschwa/roast_hooks/blob/master/pre-commit

[01:12] <psch> oh but i forgot to push the a fix

[01:12] <psch> actually, the trailing-/-fix

[01:15] *** daniel-s joined
[01:15] *** mavcunha joined
[01:18] *** mavcunha_ left
[01:21] *** mavcunha left
[01:26] *** [particle]1 joined
[01:27] *** [particle] left
[01:28] *** xenoterracide left
[01:33] *** hypolin joined
[01:39] *** hypolin left
[01:43] *** xenoterracide joined
[01:47] *** xenoterracide_ joined
[01:48] *** xenoterracide left
[01:51] *** stevan_ joined
[01:52] <psch> ...and now it also just fixes the plan, because why would anyone want to do that manually?

[01:58] <colomon> psch: might be dangerous for some of the weirder test files?

[01:59] * colomon hates doing it manually too

[02:01] <psch> colomon: i'm parsing Test.pm output

[02:01] <psch> but the replace might be bad

[02:02] <psch> yeah, the condition for the replace is bogus right now

[02:03] <psch> curiously it worked in a test-run right now

[02:05] <colomon> it used to be the case that some files didn't have plans

[02:05] *** btyler left
[02:05] <psch> well if there's no plan then there's no complaint from Test.pm that there's a bad plan

[02:05] <psch> cases like S32-exceptions/misc.t just have a "done;" at the end

[02:06] <psch> those don't emit "Bad plan. Looks like you planned \d+ tests but ran \d+." message

[02:06] <psch> that's the line i'm parsing after running the test to get the right number for the plan

[02:07] <colomon> gotcha

[02:07] <colomon> there were a couple files I remember running into that had really weird crap going on.  But it might still work for you.

[02:08] <colomon> also, of course, there's the danger that the something is actually wrong with the test, and that's why the plan isn't right.

[02:08] <psch> right, that's another case i've missed

[02:09] <psch> although i gotta check if i get "Bad plan" if a testfile dies inbetween

[02:10] *** stevan_ left
[02:14] *** thou left
[02:18] *** daxim left
[02:27] *** skids left
[02:28] *** xenoterracide_ left
[02:29] *** skids joined
[02:30] *** skids left
[02:31] *** daxim joined
[02:31] *** skids joined
[02:57] *** skids left
[02:57] *** skids joined
[03:03] *** Alula left
[03:04] <psch> the weird case i'm not sure how to handle is "we ran as many tests as we planned but still died for some reason"

[03:05] <psch> i'm not sure i agree with how Test.pm handles that case, it reports everything as ok and PASS, but a die() for whatever reason is at least something to be suspicious about, isn't it

[03:07] *** skids left
[03:07] *** skids joined
[03:11] *** itz_ joined
[03:14] *** itz left
[03:15] *** skids left
[03:16] *** skids joined
[03:17] * skids sorry to bump in and out so much; fighting with trying to get gtkrc to set pidgin's colors.

[03:29] *** skids left
[03:30] *** skids joined
[03:30] <psch> well, my hook is now pretty conservative about what stays staged, i'll just run it for some time and see how well it works

[03:31] <psch> i guess that means it's time add many more tests to roast heh

[03:31] <psch> anyway, good night #perl6 o/

[03:32] *** psch left
[03:43] *** raydiak left
[03:44] *** dayangkun left
[03:58] *** dayangkun joined
[04:23] *** skids left
[04:26] *** skids joined
[04:59] *** virtualsue joined
[05:24] *** [Sno] left
[05:28] *** kst` joined
[05:37] *** araujo joined
[05:53] *** dayangkun left
[06:00] *** berekuk joined
[06:11] *** berekuk left
[06:13] *** frettled left
[06:14] *** frettled joined
[06:16] *** FROGGS left
[06:18] *** berekuk joined
[06:31] *** darutoko joined
[06:32] *** [Sno] joined
[06:33] *** japhb left
[06:34] *** japhb_ left
[06:39] *** SamuraiJack joined
[06:44] *** BenGoldberg left
[06:47] *** berekuk left
[06:55] *** berekuk joined
[07:03] *** raydiak joined
[07:09] *** dmol joined
[07:25] *** berekuk left
[07:26] *** stevan_ joined
[07:28] *** stevan_ left
[07:35] *** denis_boyun joined
[07:41] *** FROGGS joined
[07:47] *** stevan_ joined
[07:51] *** japhb joined
[07:51] *** stevan_ left
[07:51] *** japhb_ joined
[07:52] <eiro> hello #perl6

[07:59] *** xenoterracide_ joined
[08:05] *** zakharyas joined
[08:19] *** geekosaur left
[08:21] <raydiak> wow, I'm back...nothing quite so fun as losing most of a day to a flaky VPS :P hope it still works when I try to get today's work done tomorrow; at least #perl6 was largely spared my insanity today :) good morning and good night, all

[08:23] *** zakharyas left
[08:23] *** geekosaur joined
[08:25] *** araujo left
[08:28] *** Ven joined
[08:33] *** virtualsue left
[08:39] *** pdcawley joined
[08:49] *** denis_boyun left
[08:50] *** arlinius left
[08:54] *** amkrankruleuen left
[08:54] *** amkrankruleuen joined
[08:54] *** amkrankruleuen left
[08:54] *** amkrankruleuen joined
[09:00] *** zakharyas joined
[09:03] <timotimo> °\

[09:04] <mathw> o/

[09:14] <moritz> _o/

[09:14] *** bakedb joined
[09:15] <FROGGS> ℺

[09:20] *** grondilu joined
[09:20] <grondilu> rn: sub f($a, $b, $c) { $a + 2*$b + 3*$c }; my &g = &f.assuming(1, *, 2); say g(4);

[09:20] <camelia> rakudo-moar 46234b: OUTPUT«Too many positional parameters passed; got 4 but expected 3␤  in sub f at /tmp/tmpfile:1␤  in sub CURRIED at src/gen/m-CORE.setting:3040␤  in block  at /tmp/tmpfile:1␤␤»

[09:20] <camelia> ..rakudo-parrot 46234b: OUTPUT«Too many positional parameters passed; got 4 but expected 3␤  in sub f at /tmp/tmpfile:1␤  in sub CURRIED at gen/parrot/CORE.setting:3044␤  in block  at /tmp/tmpfile:1␤␤»

[09:20] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«Unhandled exception: Excess arguments to f, used 3 of 4 positionals␤  at /tmp/tmpfile line 0 (f @ 1) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1166 (ANON @ 6) ␤  at /tmp/tmpfile line 1 (mainline @ 6) ␤  at /home/p6eval/niecza/lib/CORE.se…»

[09:20] <camelia> ..rakudo-jvm 46234b: OUTPUT«Too many positional parameters passed; got 4 but expected 3␤  in sub f at /tmp/tmpfile:1␤  in sub CURRIED at gen/jvm/CORE.setting:3040␤  in block  at /tmp/tmpfile:1␤␤»

[09:27] <timotimo> hm, could very well be that the whatever case of assuming is NYI

[09:27] <timotimo> i wonder if that counts as an LHF

[09:28] <Timbus> r: sub f($a, $b, $c) { $a + 2*$b + 3*$c }; my &g = &f.assuming(a => 1, c => 2); say g(4);

[09:28] <camelia> rakudo-moar 46234b: OUTPUT«Not enough positional parameters passed; got 1 but expected 3␤  in sub f at /tmp/tmpfile:1␤  in sub CURRIED at src/gen/m-CORE.setting:3040␤  in block  at /tmp/tmpfile:1␤␤»

[09:28] <camelia> ..rakudo-parrot 46234b: OUTPUT«Not enough positional parameters passed; got 1 but expected 3␤  in sub f at /tmp/tmpfile:1␤  in sub CURRIED at gen/parrot/CORE.setting:3044␤  in block  at /tmp/tmpfile:1␤␤»

[09:28] <camelia> ..rakudo-jvm 46234b: OUTPUT«Not enough positional parameters passed; got 1 but expected 3␤  in sub f at /tmp/tmpfile:1␤  in sub CURRIED at gen/jvm/CORE.setting:3040␤  in block  at /tmp/tmpfile:1␤␤»

[09:28] <Timbus> aw

[09:28] <timotimo> i wonder how good the test coverage of that feature is.

[09:29] <Timbus> https://github.com/rakudo/rakudo/blob/9b623e3c3df2d652508a4fee3353847685e61c18/src/core/Routine.pm#L27

[09:29] * moritz is against that feature

[09:29] <moritz> it makes the names of position parameters part of the public API, AGAIN

[09:29] <moritz> after we've worked to remove that

[09:30] <Timbus> iono, i was jsut trying to trick it

[09:31] <jnthn> morning o/

[09:39] <timotimo> yeah, the named parameter thing doesn't sound good

[09:40] <jnthn> my &g = { f(1, $^a, 2) }; # :-)

[09:43] *** dakkar joined
[09:49] *** salv0 left
[09:53] *** grondilu_ joined
[09:56] *** Timbus left
[09:56] *** grondilu left
[09:57] *** salv0 joined
[09:57] *** Timbus joined
[10:14] *** fhelmberger joined
[10:15] *** sqirrel joined
[10:17] *** sjohnson joined
[10:27] *** xenoterracide_ left
[10:36] *** pecastro joined
[10:51] *** kaleem joined
[10:53] <timotimo> oh hey jnthn 

[10:54] <timotimo> i think we ought to build a single serving site "doesjnthnhavetuitstoday.com"

[10:57] *** SamuraiJack left
[10:57] *** SamuraiJack_ joined
[11:06] *** kurahaupo_mobile joined
[11:08] <FROGGS> *g*

[11:08] <FROGGS> +1

[11:08] <FROGGS> timotimo: and then we can vote?

[11:08] <jnthn> o.O

[11:09] <timotimo> nah ;)

[11:09] <FROGGS> jnthn: if you are nice to me I'd even vote for you having a beer tonight :o)

[11:15] *** arlinius joined
[11:24] *** pecastro left
[11:26] *** pecastro joined
[11:42] *** dmol left
[11:43] <tadzik> anybody with a linux system with gtk, but no gtk-dev installed?

[11:48] <FROGGS> tadzik: me

[11:49] <tadzik> FROGGS: could you tell me the exit status of `pkg-config --libs --cflags gtk+-2.0`?

[11:49] *** denis_boyun joined
[11:51] <FROGGS> pkg-config --libs --cflags gtk+-2.0

[11:51] <FROGGS> Package gtk+-2.0 was not found in the pkg-config search path.

[11:53] <tadzik> echo $?

[11:53] <FROGGS> 1

[11:53] <tadzik> okay, awesome :) Thanks a lot

[11:53] *** sqirrel left
[11:53] <FROGGS> you're welcome :o)

[12:00] *** simcop2387 left
[12:00] *** geekosaur left
[12:03] *** rjbs left
[12:04] *** dylanwh left
[12:06] *** dylanwh joined
[12:06] *** simcop2387 joined
[12:06] *** simcop2387 left
[12:08] *** sjohnson left
[12:09] *** rjbs joined
[12:10] *** sunnavy left
[12:10] *** geekosaur joined
[12:10] *** sunnavy joined
[12:11] *** Lorn joined
[12:12] *** simcop2387 joined
[12:19] *** sqirrel joined
[12:30] *** SamuraiJack_ left
[12:51] *** denis_boyun left
[12:56] *** dayangkun joined
[12:59] *** skids left
[13:03] *** kivutar joined
[13:16] *** kaleem left
[13:18] *** mavcunha joined
[13:28] *** benabik left
[13:32] *** kivutar left
[13:35] *** btyler joined
[13:36] *** yves_ left
[13:36] *** yves_ joined
[13:37] *** regreg left
[13:37] *** sqirrel left
[13:42] <pmichaud> r: say ~((1,2) xx 10)

[13:42] <camelia> rakudo-parrot 46234b, rakudo-jvm 46234b, rakudo-moar 46234b: OUTPUT«1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2␤»

[13:43] <pmichaud> r: say join('', (1,2) xx 10)

[13:43] <camelia> rakudo-parrot 46234b, rakudo-jvm 46234b, rakudo-moar 46234b: OUTPUT«12121212121212121212␤»

[13:43] <tadzik> people who've been to YAPC Kiev, please take a look at your credit card balances

[13:44] <tadzik> mine was just stolen (copied), and money withdrawn in Thailand

[13:44] * moritz is happy he only paid with cash (and $employer payed the hotel)

[13:45] <jnthn> tadzik: Ohh...that was from all the way back in *Kiev*?

[13:45] *** cognominal left
[13:46] * jnthn had blamed the Thai withdrawal his bank blocked on something more recent...

[13:46] <jnthn> tadzik: Interesting. Hope you didn't lose anything, aside from wasted time having to get a replacement card...

[13:46] <tadzik> jnthn: I dunno, that just sounds as a high-risk place I was in :/ And it's suspisciously close to Half a Year Ago

[13:47] <tadzik> jnthn: the bank says that they should be able to cover all losses, as I reacted in like 30 seconds

[13:47] <jnthn> tadzik: Yeah. I had exact same. Thing is, it happened to me just after a trip to Donetsk last...hm, November or so. So I'd blamed it on that...

[13:47] <tadzik> I suddenly got 5 text messages saying "your withdraw didn't succeed because of insufficient funds"

[13:48] <tadzik> and I'm sitting at home, not near any ATM

[13:48] <tadzik> hm, maybe it was recent

[13:49] <jnthn> tadzik: Mine didn't even allow the withdrawal. I suspect 'cus I use the card for just about everything here in Sweden, and so the fraud systems spotted the impossibility of me having got groceries in the morning and withdrawing in Thailand a couple of hours later, or something.

[13:49] <tadzik> heh

[13:50] <jnthn> Sweden is so card-oriented you can buy a hotdog with card without even thinking about it... :)

[13:52] <moritz> people did warn me that I should call the bank before traveling .de -> .tr -> .ua in a single day, because the fraud system might mark it as stolen

[13:53] <jnthn> I'm impressed by bank *did* spot it. My card has a habbit of being used all over the place for legit reasons...

[13:53] <jnthn> *my

[13:54] <jnthn> Almost all Europe, though...

[13:55] *** regreg joined
[13:55] <ribasushi> .oO( wait... poland is deemed safer than ukraine?! )

[13:56] * ribasushi runs

[13:56] <moritz> maybe they thought that it's too warm in Thailand for jnthn to be there

[13:57] <jnthn> Curiously, I got a postcard for Thailand today. It does indeed look rather warm...

[13:58] * jnthn is envious that $friend got to enjoy Thai food, though... :)

[13:58] <jnthn> s/for/from/

[14:02] * [Coke] waves

[14:07] *** mavcunha left
[14:08] *** sjohnson joined
[14:17] *** jnap joined
[14:22] <FROGGS> r: say (1,2).join xx 10).join('|')

[14:22] <camelia> rakudo-parrot 46234b, rakudo-jvm 46234b, rakudo-moar 46234b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Unexpected closing bracket␤at /tmp/tmpfile:1␤------> [32msay (1,2).join xx 10[33m⏏[31m).join('|')[0m␤»

[14:22] <FROGGS> r: say ((1,2).join xx 10).join('|')

[14:22] <camelia> rakudo-parrot 46234b, rakudo-jvm 46234b, rakudo-moar 46234b: OUTPUT«12|12|12|12|12|12|12|12|12|12␤»

[14:23] <moritz> r: say ((1, 2) xx 10).join: '|'<

[14:23] <camelia> rakudo-parrot 46234b, rakudo-jvm 46234b, rakudo-moar 46234b: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Unable to parse quote-words subscript; couldn't find right angle quote␤at /tmp/tmpfile:1␤------> [32msay ((1, 2) xx 10).join: '|'<[33m⏏[31…»

[14:23] <moritz> r: say ((1, 2) xx 10).join: '|'

[14:23] <camelia> rakudo-parrot 46234b, rakudo-jvm 46234b, rakudo-moar 46234b: OUTPUT«1|2|1|2|1|2|1|2|1|2|1|2|1|2|1|2|1|2|1|2␤»

[14:23] <moritz> r: say ((1, 2) xx 10).tree.join: '|'

[14:24] <camelia> rakudo-parrot 46234b, rakudo-jvm 46234b, rakudo-moar 46234b: OUTPUT«1 2|1 2|1 2|1 2|1 2|1 2|1 2|1 2|1 2|1 2␤»

[14:24] <timotimo> how unreasonable would it be to create an assuming candidate by running an eval?

[14:24] <moritz> very

[14:24] <timotimo> er ... for the (10, *, 30) case i mean

[14:25] <timotimo> rather than, say, slicing and dicing the positionals passed in

[14:25] *** ajr joined
[14:25] *** ajr is now known as Guest28033

[14:26] *** Guest28033 is now known as ajr_

[14:27] *** molaf joined
[14:30] <timotimo> rn: sub abc($a, $b, $c) { "$a $b $c" }; say &abc.assuming(1, *, 3)(100);

[14:30] <camelia> rakudo-parrot 46234b: OUTPUT«Too many positional parameters passed; got 4 but expected 3␤  in sub abc at /tmp/tmpfile:1␤  in sub CURRIED at gen/parrot/CORE.setting:3044␤  in block  at /tmp/tmpfile:1␤␤»

[14:30] <camelia> ..rakudo-jvm 46234b: OUTPUT«Too many positional parameters passed; got 4 but expected 3␤  in sub abc at /tmp/tmpfile:1␤  in sub CURRIED at gen/jvm/CORE.setting:3040␤  in block  at /tmp/tmpfile:1␤␤»

[14:30] <camelia> ..rakudo-moar 46234b: OUTPUT«Too many positional parameters passed; got 4 but expected 3␤  in sub abc at /tmp/tmpfile:1␤  in sub CURRIED at src/gen/m-CORE.setting:3040␤  in block  at /tmp/tmpfile:1␤␤»

[14:30] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«Unhandled exception: Excess arguments to abc, used 3 of 4 positionals␤  at /tmp/tmpfile line 0 (abc @ 1) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1166 (ANON @ 6) ␤  at /tmp/tmpfile line 1 (mainline @ 5) ␤  at /home/p6eval/niecza/lib/COR…»

[14:31] *** kaare_ left
[14:32] *** vmspb joined
[14:32] <jnthn> rn: sub abc($a, $b, $c) { "$a $b $c" }; say {abc(1,$^a,3)}(100) # problem solved :P

[14:32] <camelia> rakudo-parrot 46234b, rakudo-jvm 46234b, rakudo-moar 46234b, niecza v24-109-g48a8de3: OUTPUT«1 100 3␤»

[14:32] *** kbaker joined
[14:32] <timotimo> jnthn: i'd have to build that with an eval.

[14:32] <timotimo> that's why i'm asking if it sounds unreasonable :)

[14:33] <jnthn> timotimo: uh, I'm suggesting you *write that* and don't try to twist assuming into doing it :P

[14:33] <timotimo> ... isn't that specced, though?

[14:33] <jnthn> Given that it's actually shorter than your original suggestion.

[14:33] <jnthn> Isn't what spec'd? Using * in assuming?

[14:33] <timotimo> yes

[14:33] * timotimo looks

[14:33] <jnthn> Ugh 

[14:33] <jnthn> I kinda hope not, but maybe it is...

[14:34] <timotimo> it is apparently not

[14:34] <colomon> \o/

[14:34] <timotimo> okay.

[14:34] <colomon> ;)

[14:38] *** skids joined
[14:48] *** benabik joined
[14:53] *** panchiniak joined
[15:04] <pmichaud> good morning, #perl6

[15:05] <timotimo> hello patrick!

[15:05] <PerlJam> pmichaud o/

[15:05] <timotimo> how are you today?

[15:05] <pmichaud> Mostly tired.  :-)

[15:05] <timotimo> my day was similar to that >_<

[15:06] <pmichaud> For those of you following my ongoing robotics team saga... on Saturday my older robotics team unexpectedly advanced to the super-regional championships in two weeks.  :)

[15:06] <timotimo> \o/

[15:06] <timotimo> congrats to the little ones

[15:06] <pmichaud> (unexpected as in "we really didn't plan for it")

[15:07] <moritz> $robots++

[15:07] <moritz> $robot-makers++

[15:07] <sjn> $robot-overlords++

[15:08] <jnthn> (pmichaud's robotics teams)++ # wow, *nice*!

[15:09] <sjn> I, for one, welcome our new robotic overlords

[15:09] *** Adriaaan joined
[15:11] *** grep0r left
[15:21] *** thou joined
[15:22] <nwc10> pmichaud: so, "no plan survives contact with the enemy"? Cool.

[15:23] <moritz> in this case, no enemy survived contact with the plan, I guess :-)

[15:27] *** mavcunha joined
[15:28] *** bluescreen10 joined
[15:32] *** grep0r joined
[15:43] *** census left
[15:46] *** cognominal joined
[15:48] *** daniel-s left
[15:49] <rjbs> pmichaud: congratulations and good luck!

[15:49] <rjbs> What more can one hope for than to be blindsided by success?

[15:49] <rjbs> (Flappy Birds Guy not withstanding)

[15:49] *** kst left
[15:51] *** kst joined
[15:52] <masak> (pmichaud's super-regional overlord makers)++

[15:53] *** kst left
[15:53] *** kst` left
[15:54] *** kst joined
[15:59] *** BenGoldberg joined
[15:59] *** grep0r left
[16:01] <timotimo> so, openpipe works completely on moarvm now on both windows and linux?

[16:01] <timotimo> rjbs: "not withstanding the success"? :)

[16:02] *** Psyche^_ left
[16:02] <rjbs> Well, he got blindsided by successand was miserable.

[16:03] <timotimo> yeah, he didn't withstand the success

[16:03] <timotimo> that's probably not what withstand means :|

[16:03] <rjbs> ha

[16:03] <rjbs> No, quite a good wordplay!

[16:04] <rjbs> He didn't withstand the success.  Usually, "X notwithstanding Y" (as one word) means "X is generally true despite the possible counterexample of Y"

[16:04] <timotimo> :)

[16:04] *** Psyche^ joined
[16:04] <rjbs> Maybe you're more fluent than I am and already know this.  Whois indicates you're from Gallifrey, so you've maybe spoken English for several centuries.

[16:05] <timotimo> :D

[16:05] <rjbs> (Hm, I got him from :) to :D... what comes next?)

[16:06] <rjbs> :-|⊃

[16:06] <rjbs> no, not very good

[16:07] <timotimo> so, what about moarvm and openpipe? do i have to build it myself first? :P

[16:09] <timotimo> seems like system.rakudo.moar succeeds in all tests, but it outputs "execvp: no such file or directory" three times in perl6-roast-data

[16:11] *** raiph joined
[16:11] *** dayangkun left
[16:15] <FROGGS> timotimo: openpipe works, except whn it does not (for pippo)

[16:15] <FROGGS> and the execvp msg is about testing an not existing command

[16:15] <timotimo> ah, that's good to know

[16:15] <timotimo> thanks

[16:15] <timotimo> i'll have a "weekly perl6 changes" blog post ready in a couple of minutes

[16:16] <FROGGS> \o/

[16:16] <timotimo> i'd also like to have a section of "things community members are working on that may or may not land soon"

[16:16] <timotimo> any suggestions for that?

[16:16] <timotimo> i only kind of know what i'm up to

[16:17] <FROGGS> ohh, that is nice

[16:17] <FROGGS> well, maybe "eleven" will be on that list next time

[16:17] <timotimo> should i leave it out for this week's list?

[16:17] <FROGGS> yes

[16:17] <timotimo> OK

[16:17] <FROGGS> well, you could mention that we're aorking on panda atm

[16:18] <timotimo> oh yes

[16:18] <FROGGS> to make it work on moar...

[16:18] <timotimo> and hoelzro has slugged through all the star modules

[16:18] <FROGGS> and that ufo is working on moar (I hope that this is correct)

[16:18] <timotimo> who besides you is working on the moar side of things for panda?

[16:18] <FROGGS> dunno

[16:18] <FROGGS> :o)

[16:19] <timotimo> hmm

[16:19] <timotimo> at some point we could have a rakudo release focused on audio engineering

[16:19] <timotimo> and call it Rakudo Sitar

[16:20] * jnthn expects to be working on Moar I/O stuff and hopefully getting sockets in place in the next week.

[16:20] <timotimo> \o/

[16:21] <FROGGS> \o/

[16:21] <FROGGS> lovely!!

[16:23] *** [Sno] left
[16:23] * FROGGS .oO( I/O, I'm tired of using technology. Why don't you sit down on top of me? I/O, I'm tired of using technology. I need you right in front of me - Milow )

[16:24] *** ajr_ left
[16:25] *** ajr joined
[16:25] *** ajr is now known as Guest18568

[16:25] *** Guest18568 is now known as ajr_

[16:28] *** molaf left
[16:29] <timotimo> https://p6weekly.wordpress.com/2014/02/10/changes-during-week-6-of-2014/

[16:30] <masak> timotimo++

[16:31] *** dmol joined
[16:31] *** dayangkun joined
[16:31] *** treehug88 joined
[16:31] <masak> (for loops being in sink context at the statement level)++ # that is very good

[16:32] <timotimo> agreed

[16:32] <timotimo> it has been specced for a few weeks now

[16:32] <masak> do we really have "lazy" and "eager" prefixes? the commit I saw fly by just parsed them, didn't give them semantics.

[16:33] <masak> never seen "I'ven't" before :)

[16:34] <masak> timotimo: "Until I do the rakudo release for this month, jnthn wants to get the IO system rewritten/refactored." -- think it should be s/Until/Before/

[16:36] *** grep0r joined
[16:39] <jnthn> masak: eager does call .eager, iirc

[16:41] *** zakharyas left
[16:44] *** beastd joined
[16:45] *** cognominal left
[16:48] *** cognominal joined
[16:55] *** dmol1 joined
[16:55] <FROGGS> timotimo++

[16:55] *** dmol left
[16:57] <FROGGS> p: say eager for ^10 -> $x { -$x } # I guess I will get used to do this instead using map :o)

[16:57] <camelia> rakudo-parrot 46234b: OUTPUT«0 -1 -2 -3 -4 -5 -6 -7 -8 -9␤»

[16:57] <timotimo> or do.

[16:58] <timotimo> or surround it in ( )

[16:58] <timotimo> p: say (for ^10 -> $x { -$x })

[16:58] <camelia> rakudo-parrot 46234b: OUTPUT«0 -1 -2 -3 -4 -5 -6 -7 -8 -9␤»

[16:59] *** grep0r left
[17:04] *** bluescreen10 left
[17:04] *** grep0r joined
[17:06] *** bluescreen10 joined
[17:14] *** grep0r left
[17:20] *** beastd left
[17:21] *** grep0r joined
[17:25] *** colomon left
[17:29] *** berekuk joined
[17:34] *** [Sno] joined
[17:36] *** mattp_ left
[17:40] *** ggherdov left
[17:41] <TimToady> masak: well, really at "statementlist" level, since there are statements in various other places too that don't impose sink context

[17:41] <masak> troo

[17:41] <TimToady> inside parens or brackets, for instance

[17:42] <TimToady> as timotimo++ was demonstrating above, now that I see it

[17:43] *** ggherdov joined
[17:44] *** colomon joined
[17:46] *** pecastro left
[17:47] <TimToady> http://rosettacode.org/wiki/AKS_test_for_primes#Perl_6 is kinda prety now; not sure what to explain, if anything...

[17:49] <TimToady> *pretty

[17:49] <TimToady> syntax highlighting is ignorant of closure interpolation, alas

[17:50] *** SamuraiJack_ joined
[17:50] <jnthn> TimToady: Should the default semantics for (.foo for @a) be lazy?

[17:51] <TimToady> I'd think so; "lists are lazy by default in Perl 6" is what we've been maintaining

[17:51] <jnthn> OK

[17:51] <jnthn> Now statementlist level ones are sink, I think we're safe to do that.

[17:51] <TimToady> \o/

[17:52] <TimToady> there are probably some RC entries to fix soonish... :)

[17:52] <jnthn> I guess same rules apply with (loop { foo() }) style things?

[17:53] <TimToady> I'd think so, especially since loop is by default infinite

[17:53] <jnthn> *nod*

[17:53] <TimToady> some things can obviously be optimized to eager, of course

[17:54] <jnthn> I'm still not happy with any of the ways I thought of to factor the value producing / sink variants of those, but will implement the value producing case once I think up a factoring I'm happy with.

[17:54] <TimToady> one of the more important spots to eagerize may be iterating shaped arrays

[17:57] *** ajr_ left
[17:59] *** dakkar left
[18:00] *** rurban joined
[18:12] *** rurban left
[18:12] *** FROGGS left
[18:13] *** kaare_ joined
[18:21] *** btyler left
[18:22] *** mavcunha left
[18:24] *** ajr joined
[18:24] *** SamuraiJack_ left
[18:24] *** ajr is now known as Guest15546

[18:24] *** Guest15546 is now known as ajr_

[18:27] *** takesako_ left
[18:28] *** takesako_ joined
[18:31] *** LLamaRider joined
[18:33] *** treehug88 left
[18:36] *** treehug88 joined
[18:37] *** xenoterracide_ joined
[18:48] *** Alula joined
[18:53] *** darutoko left
[18:55] *** SamuraiJack_ joined
[18:56] *** FROGGS joined
[18:58] *** benabik left
[18:59] *** benabik joined
[19:00] <vendethiel> I still don't understand the purpose of `so`

[19:01] <jnthn> Low precedence of ?, just like and is low prec of &&

[19:01] <moritz> m: say 5 ~~ any(1..10)

[19:01] <camelia> rakudo-moar 46234b: OUTPUT«True␤»

[19:01] <moritz> m: say 5 == any(1..10)

[19:01] <camelia> rakudo-moar 46234b: OUTPUT«any(False, False, False, False, True, False, False, False, False, False)␤»

[19:01] <moritz> m: say so 5 == any(1..10)

[19:01] <camelia> rakudo-moar 46234b: OUTPUT«True␤»

[19:01] * moritz kinda prefers the second answer

[19:02] <jnthn> :)

[19:02] <moritz> http://faq.perl6.org/#so

[19:02] <jnthn> Yeah. You'd need parens if you used prefix:<?> there...and it's nicer without :)

[19:02] <jnthn> walk &

[19:02] <vendethiel> noted. moritz++

[19:03] <TimToady> arguably the "$p > 1 and" just clutters things up if you're never going to call it with anything less than 2

[19:03] <vendethiel> That faq is rly cool !

[19:04] <moritz> \o/

[19:04] <TimToady> maybe I should just assert it in the siggie

[19:06] <dalek> faq: 2b78b5a | moritz++ | answers.md:

[19:06] <dalek> faq: link to http://doc.perl6.org/language/containers

[19:06] <dalek> faq: review: https://github.com/perl6/faq/commit/2b78b5a463

[19:06] <moritz> maybe tonight is a good time for doc hacking

[19:07] <moritz> does anybody have wishes on what to document?

[19:07] *** btyler joined
[19:07] *** rurban joined
[19:07] *** SamuraiJack_ left
[19:11] <TimToady> hah, last changes actually broke that AKS solution :)

[19:12] <vendethiel> " In general this requires solving the halting problem, which even Perl 6 compiler writers have trouble with." oh, really ? :D

[19:12] <TimToady> can't write a list comprehension inside {} anymore...

[19:12] <vendethiel> also, typo "has a ist of known Perl 6 modules, "  ist -> list

[19:13] *** Rotwang joined
[19:13] <dalek> faq: f25bbba | moritz++ | answers.md:

[19:13] <dalek> faq: typo, vendethiel++

[19:13] <dalek> faq: review: https://github.com/perl6/faq/commit/f25bbbaebf

[19:14] <moritz> m: .say for <a b c>.combinations(2)

[19:14] <camelia> rakudo-moar 46234b: OUTPUT«a b␤a c␤b c␤»

[19:14] <vendethiel> moritz++

[19:14] <moritz> m: say .join('|') for <a b c>.combinations(2)

[19:14] <camelia> rakudo-moar 46234b: OUTPUT«a|b␤a|c␤b|c␤»

[19:17] <TimToady> hmm, for is supposed to flatten, I think

[19:17] <TimToady> oh, wait, nm

[19:17] <TimToady> .combinations doesn't return parcels anymore

[19:17] <moritz> only if... nm

[19:17] <moritz> :-)

[19:17] * TimToady is still very out-of-it

[19:18] <moritz> m: say .join('|') for <a b c>.combinations(2..3)

[19:18] <camelia> rakudo-moar 46234b: OUTPUT«a|b␤a|c␤b|c␤a|b|c␤»

[19:20] <dalek> doc: 1c5b353 | moritz++ | lib/List.pod:

[19:20] <dalek> doc: Document List.combinations

[19:20] <dalek> doc: review: https://github.com/perl6/doc/commit/1c5b353f84

[19:21] <moritz> r: .say for <a b c>.permutations

[19:21] <camelia> rakudo-parrot 46234b, rakudo-jvm 46234b: OUTPUT«a b c␤a c b␤b a c␤b c a␤c a b␤c b a␤»

[19:21] <camelia> ..rakudo-moar 46234b: OUTPUT«Cannot call 'postcircumfix:<[ ]>'; none of these signatures match:␤:(Any \SELF, int $pos)␤:(Any \SELF, int $pos, :BIND($BIND)!)␤:(Any \SELF, int $pos, Any :SINK($SINK)!, *%other)␤:(Any \SELF, int $pos, Any :delete($delete)!, *%other)␤:(Any \SELF,…»

[19:22] <moritz> moarbug!

[19:22] *** LLamaRider left
[19:23] *** LLamaRider joined
[19:24] <moritz> p: .say for <a a b>.permutations

[19:24] <camelia> rakudo-parrot 46234b: OUTPUT«a a b␤a b a␤a a b␤a b a␤b a a␤b a a␤»

[19:24] *** LLamaRider left
[19:24] *** LLamaRid1r joined
[19:25] *** LLamaRid1r left
[19:28] <dalek> doc: 493a216 | moritz++ | lib/List.pod:

[19:28] <dalek> doc: List.permutations

[19:28] <dalek> doc: review: https://github.com/perl6/doc/commit/493a2160f8

[19:31] *** telex left
[19:31] *** pecastro joined
[19:32] <dalek> doc: 9214f42 | moritz++ | htmlify.pl:

[19:32] <dalek> doc: hopefully more distinct styling for the footer

[19:32] <dalek> doc: review: https://github.com/perl6/doc/commit/9214f42258

[19:32] *** telex joined
[19:40] *** rurban left
[19:43] <raydiak> moritz: since you're working on docs, figured I'd mention that search on the homepage will be done some time in the next 12 hours...been having problems w/my server on and off for a couple days now, it has slowed my progress on all things (switching to linode next month, methinks)

[19:52] <moritz> raydiak: ok, no hurry

[19:52] <dalek> nqp: 13ef89d | (Tobias Leich)++ | tools/build/MOAR_REVISION:

[19:52] <dalek> nqp: bump rev for waitpid fix

[19:52] <dalek> nqp: review: https://github.com/perl6/nqp/commit/13ef89d720

[19:53] <dalek> rakudo/nom: 260cd71 | (Tobias Leich)++ | tools/build/NQP_REVISION:

[19:53] <dalek> rakudo/nom: bump rev for waitpid fix

[19:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/260cd71346

[19:57] *** panchiniak left
[20:01] *** yogan left
[20:02] *** Juerd joined
[20:02] *** hoelzro joined
[20:02] *** yogan joined
[20:02] *** rurban_ left
[20:03] *** rurban_ joined
[20:04] *** __sri joined
[20:05] *** pnu_ joined
[20:07] *** simcop2387 left
[20:07] *** simcop2387_ joined
[20:07] *** simcop2387_ is now known as simcop2387

[20:08] *** raiph left
[20:08] *** zby_home_ joined
[20:13] <raydiak> moritz: yeah, I know, I just look like a flake when I express intention to perform a 1-2 hour job, and then it doesn't materialize for days :) so figured I'd touch base so you don't decide to go off and replicate the work I already started

[20:17] *** kurahaupo_mobile left
[20:22] *** benabik left
[20:23] *** regreg2 joined
[20:25] *** regreg left
[20:36] *** cooper left
[20:37] *** yath joined
[20:37] <yath> ohai o/

[20:37] *** rurban joined
[20:38] *** pippo joined
[20:38] *** cooper joined
[20:38] <FROGGS> RT #121213

[20:38] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=121213

[20:39] <pippo> m: nqp::getenvhash();

[20:39] <camelia> rakudo-moar 46234b: ( no output )

[20:39] <pippo> m: say nqp::getenvhash();

[20:39] <camelia> rakudo-moar 46234b: OUTPUT«("LESSOPEN" => "| /usr/bin/lesspipe \%s", "TMUX" => "/tmp/tmux-1005/default,26465,0", "MAIL" => "/var/mail/p6eval", "SSH_CLIENT" => "87.158.155.58 41019 22", "USER" => "p6eval", "LANGUAGE" => "en_US:en", "SHLVL" => "2", "HOME" => "/home/p6eval", "XDG_SESSI…»

[20:54] *** zby_home_ left
[20:59] *** FROGGS left
[21:04] <nwc10> what's the best way to do a range in NQP? eg this:

[21:05] <nwc10> r: my $a = [-258..258]; for ($a) {say($_)}

[21:05] <nwc10> but not Perl 6

[21:05] <camelia> rakudo-parrot 260cd7, rakudo-jvm 260cd7, rakudo-moar 260cd7: OUTPUT«-258 -257 -256 -255 -254 -253 -252 -251 -250 -249 -248 -247 -246 -245 -244 -243 -242 -241 -240 -239 -238 -237 -236 -235 -234 -233 -232 -231 -230 -229 -228 -227 -226 -225 -224 -223 -222 -221 -220 -219 -218 -217 -216 …»

[21:05] <nwc10> is there any Fine Manual for NQP?

[21:07] <moritz> nwc10: not really; the best documentation is the "Rakudo and NQP Internals Workshop" course material by jnthn++

[21:08] <timotimo> nwc10: i think you'll need to build a loop for that

[21:08] <nwc10> 3 arg for exists? Or I need something more primitive?

[21:08] <timotimo> i would personally build a while loop

[21:09] <jnthn> hoelzro: Just pushed a fix for RT #121213.

[21:09] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=121213

[21:09] <jnthn> nwc10: If NQP has that, it's the loop statement.

[21:10] <jnthn> nqp: sub range($min, $max) { my @x; nqp::push(@x, $min++) while $min <= $max; @x } # or so

[21:11] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: ( no output )

[21:11] *** rurban left
[21:11] <jnthn> nqp: sub range($min, $max) { my @x; nqp::push(@x, $min++) while $min <= $max; @x }; for range(1,10) { say($_) }

[21:11] <camelia> nqp-moarvm, nqp-jvm, nqp-parrot: OUTPUT«1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤»

[21:11] <nwc10> aha thanks

[21:15] *** pippo left
[21:30] *** skids left
[21:30] *** skids joined
[21:33] *** mattp_ joined
[21:42] *** virtualsue joined
[21:45] *** mavcunha joined
[21:52] <timotimo> i don't think it's necessarily a good idea to generate an actual list for that :P

[21:53] <timotimo> oh, hehe

[21:54] <timotimo> randal l schwartz commented on the unary sort advent calendar post with "Yeay! A built-in Schwartzian Transform!"

[21:54] *** xenoterracide_ left
[21:57] *** stevan_ joined
[22:04] *** xenoterracide joined
[22:06] *** fhelmberger left
[22:06] *** ajr_ left
[22:07] *** fhelmberger joined
[22:11] *** dayangkun left
[22:13] *** dayangkun joined
[22:15] *** jnap1 joined
[22:16] *** Rotwang left
[22:16] *** jnap left
[22:18] *** kbaker left
[22:22] *** dmol1 left
[22:24] *** xenoterracide left
[22:24] *** berekuk left
[22:25] *** xenoterracide joined
[22:26] *** skids left
[22:27] *** colomon left
[22:27] *** colomon joined
[22:31] *** mavcunha left
[22:33] *** xenoterracide left
[22:36] *** Alula left
[22:45] *** Alula joined
[22:47] *** itz joined
[22:47] *** regreg2 left
[23:00] *** bluescreen10 left
[23:01] *** treehug88 left
[23:02] *** treehug88 joined
[23:07] <raydiak> moritz: the home search is in the "search" branch of my doc fork, and you can see it working at http://p6doc.cyberuniverses.com - I won't merge it until I've gotten your feedback

[23:07] <raydiak> and off to do errands...bbl

[23:09] <timotimo> raydiak: when you input something that leads to no results, it doesn't give any feedback that it actually works

[23:09] <timotimo> and if you find something, it will make a popup that extends past the right end of the page, so you have to horizontally scroll to see everything

[23:11] <jnthn> timotimo: whtat browser, ooc?

[23:12] <timotimo> chrome

[23:12] <jnthn> timotimo: Did you mean vertically in the second comment?

[23:12] <jnthn> Oh, no, you didn't

[23:12] <timotimo> i have to scroll from the left to the right

[23:12] <jnthn> But I don't get that issue

[23:12] <jnthn> oh, wait...depends what I search

[23:13] <timotimo> yeah

[23:13] <timotimo> "method" for example :P

[23:13] <jnthn> I think the search box probably wants to move inline with the page, to the left, though.

[23:13] <jnthn> So you notice it

[23:13] <jnthn> It should be one of the first things people notice, I think.

[23:13] <jnthn> As folks search long before they browse, these days...

[23:13] <timotimo> aye

[23:13] <timotimo> people these days am i rite

[23:17] *** ponpon is now known as ponbiki

[23:19] *** benabik joined
[23:21] *** eternaleye left
[23:23] *** eternaleye joined
[23:27] *** raiph joined
[23:27] *** mavcunha joined
[23:27] *** virtualsue left
[23:46] *** camelia left
[23:46] *** btyler left
[23:54] *** rurban joined
[23:56] *** dayangkun left
[23:56] *** rylinaux joined
[23:56] *** colomon left
[23:57] *** pippo joined
