[00:03] *** labster joined
[00:06] <ingy> PerlJam: this is you, right: https://github.com/ingydotnet/git-hub/issues/67

[00:06] <ingy> PerlJam: it's done I think but would like your review

[00:11] *** ssutch joined
[00:14] *** ivanshma` joined
[00:17] *** Minimiscience joined
[00:17] *** Minimiscience left
[00:18] *** Minimisci joined
[00:18] *** Minimisci left
[00:19] *** Minimisci joined
[00:20] *** thou left
[00:22] *** ajr_ left
[00:26] <Minimisci> How do I refer to a subroutine without calling it?  Is it still "\&foo"?

[00:28] <TimToady> just &foo is now the noun form

[00:28] <TimToady> it won't call it unless you say &foo()

[00:28] <Minimisci> Good to know, thanks.

[00:34] *** risou is now known as risou_awy

[00:35] *** risou_awy is now known as risou

[00:36] *** Minimisci left
[00:54] *** Shazam left
[00:59] *** bluescreen100 left
[01:04] *** FROGGS_ joined
[01:07] *** Sqirrel left
[01:08] *** FROGGS left
[01:08] *** Sqirrel joined
[01:14] *** xenoterracide_ left
[01:15] *** xenoterracide_ joined
[01:17] *** klapperl_ left
[01:19] *** klapperl joined
[01:41] *** xiaomiao joined
[01:41] *** rurban left
[01:43] *** bjz joined
[01:52] *** btyler joined
[01:54] *** ssutch left
[01:56] *** cooper joined
[01:57] *** Su-Shee_ joined
[01:58] *** rurban joined
[02:01] *** Su-Shee left
[02:04] *** rurban left
[02:05] *** rurban joined
[02:27] *** xenoterracide_ left
[02:33] *** xenoterracide_ joined
[02:53] *** molaf joined
[02:56] *** Ben_Goldberg joined
[02:56] *** BenGoldberg left
[02:56] *** Ben_Goldberg is now known as BenGoldberg

[03:05] *** molaf left
[03:28] <lue> r: say qq:to/EOS/.perl;␤foobar␤EOS␤

[03:28] <camelia> rakudo-{jvm,moar} 875ce0: OUTPUT«"foobar\n"␤»

[03:28] <camelia> ..rakudo-parrot 875ce0: OUTPUT«"foobar\n"␤Saw 1 call to deprecated code during execution.␤================================================================================␤$*VM<config> called at:␤  gen/parrot/CORE.setting, line 6244␤Please use $*VM.config instead.␤---------…»

[03:28] <lue> I'm not sure heredocs should pick up on that final newline.

[03:33] *** john3213 joined
[03:35] *** clkao joined
[03:38] *** john3213 left
[03:40] *** xragnar is now known as Guest5689

[03:40] *** xragnar_ joined
[03:40] *** Guest5689 left
[03:40] *** xragnar_ is now known as xragnar

[03:43] *** xenoterracide_ left
[03:45] *** BenGoldberg left
[03:55] *** SamuraiJack__ joined
[04:01] *** kaare_ joined
[04:07] *** SamuraiJack__ left
[04:07] *** SamuraiJack__ joined
[04:15] *** kaare_ left
[04:47] *** btyler left
[04:48] *** nnunley_ joined
[04:50] *** nnunley left
[05:02] *** denis_boyun_ joined
[05:07] *** denis_boyun_ left
[05:09] *** kaare_ joined
[05:10] *** hoverboard joined
[05:34] *** rurban left
[05:41] *** ivanshma` is now known as ivanshmakov

[05:42] *** ivanshmakov left
[05:42] *** ivanshmakov joined
[05:51] *** FROGGS_ left
[06:03] *** kaleem joined
[06:20] *** dmol joined
[06:25] *** dmol left
[06:35] *** rurban joined
[06:42] *** rurban left
[06:45] *** rhr joined
[06:46] *** dayangkun joined
[06:46] *** hummeleB1 joined
[06:46] *** anaeem1 joined
[06:50] *** anaeem1 left
[06:54] *** anaeem1_ joined
[06:55] *** zakharyas joined
[06:56] *** hoverboard left
[06:59] *** mathw joined
[07:03] *** FROGGS joined
[07:06] *** igorsutton_ joined
[07:06] *** berekuk joined
[07:13] *** cooper left
[07:14] *** nnunley_ left
[07:25] *** cooper joined
[07:26] *** Su-Shee_ is now known as Su-Shee

[07:28] *** darutoko joined
[07:37] <sergot_> hi o/

[07:37] <moritz> lue: the precedence for including the final newline is overwhelming

[07:37] *** chenryn left
[07:38] <moritz> like, every language I know that has heredocs

[07:38] *** chenryn joined
[07:38] <moritz> and when you create bigger text blocks by concatenating heredocs, the newline is basically always what you want

[07:38] *** rurban joined
[07:39] *** dmol joined
[07:42] *** Ven_ joined
[07:45] *** rurban left
[07:47] *** virtualsue joined
[07:47] *** kurahaupo left
[07:50] *** berekuk left
[07:54] <lizmat> good *, #perl6

[07:55] <lizmat> moritz: for a while, I was thinking a :chop adverb would be nice

[07:55] <lizmat> nowadays I just add ".chop" at the end, even though it may be more work internally

[07:55] *** [Sno] left
[07:56] *** [Sno] joined
[07:56] <moritz> or .chomp

[07:56] <lizmat> yesterday, when I created subtests in Test.pm, I could use the nicely looking

[07:56] <lizmat> $indents = $indents.chop.chop.chop

[07:56] <lizmat> :-)

[07:56] <moritz> that's where I'd start to use substr :-)

[07:57] <moritz> .substr(0, *-3)

[07:57] <lizmat> I like the visual image of .chop.chop.chop  :-)

[07:57] <lizmat> *liked

[07:57] <moritz> perl Configure.pl --gen-moar=master --gen-nqp=master --backends=moar && make -j4 install m-spectest

[07:58] <lizmat> otoh I wouldn't mind having .chop(3)  :)

[07:58] <moritz> when you type that in one go without stopping to pause, you know your brain is rakudo-conditioned

[07:59] * lizmat still copy/pastes from README.md  :-)

[08:06] <masak> morning, #perl6

[08:11] <moritz> \o masak

[08:16] <nwc10> o/

[08:17] <Ven_> o, *.

[08:20] <timotimo> is that supposed to be chop or chomp now?

[08:20] <timotimo> or do both exist?

[08:24] <moritz> both exist

[08:24] <moritz> chop always takes one character off

[08:24] <moritz> .chomp removes a trailing newline, if present

[08:25] <Ven_> m: carp "halp"

[08:25] <camelia> rakudo-moar 875ce0: OUTPUT«===SORRY!=== Error while compiling /tmp/fsLAJFuGUr␤Undeclared routine:␤    carp used at line 1␤␤»

[08:29] <moritz> t/spec/S17-supply/watch_path.t                              (Wstat: 0 Tests: 23 Failed: 9) Failed tests:  7, 9, 11, 13, 15, 17, 19, 22-23

[08:29] <moritz> and baghash fails test 40

[08:30] *** dmol left
[08:30] <moritz> r: my $b = BagHash.new(); $b<foo>--;

[08:30] <camelia> rakudo-{parrot,jvm,moar} 875ce0: ( no output )

[08:30] <lizmat> moritz: looking at them now

[08:31] <lizmat> as well as throws_like

[08:31] <moritz> \o/

[08:31] <moritz> ++lizmat

[08:31] <moritz> oh, and lizmat++ for subtests!

[08:31] <lizmat> I guess the BagHash fail was the result of the spec change on BagHash<foo>--

[08:31] *** alinbsp joined
[08:32] <lizmat> moritz: could you gist me the raw output of 	 t/spec/S17-supply/watch_path.t failure>

[08:32] <lizmat> ?

[08:33] <moritz> lizmat: http://perlpunks.de/paste/show/53747bbc.4872.1c6

[08:34] <jnthn> morning, #pelr6

[08:35] <moritz> mrnng, jnthn 

[08:35] <dalek> roast: 98d45b8 | (Elizabeth Mattijsen)++ | S02-types/baghash.t:

[08:35] <dalek> roast: Fix test for BagHash<foo>-- : changed behaviour

[08:35] <dalek> roast: review: https://github.com/perl6/roast/commit/98d45b88aa

[08:35] <jnthn> Delayed flight is delayed...

[08:35] <jnthn> Only a little, though.

[08:35] <lizmat> shite

[08:35] <lizmat> ah

[08:35] <lizmat> no danger for missing your train in Berlin yet ?

[08:35] <jnthn> Not enough to bust the connection.

[08:35] <jnthn> No, not yet.

[08:36] <jnthn> Even time still for a lunch, though maybe a little less relaxed than initially planned... :)

[08:37] *** dmol joined
[08:39] *** dakkar joined
[08:42] *** rurban joined
[08:46] *** rurban left
[08:47] <dalek> rakudo/nom: ea2aaa8 | (Elizabeth Mattijsen)++ | docs/ChangeLog:

[08:47] <dalek> rakudo/nom: Added some more ChangeLog entries

[08:47] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ea2aaa8cf8

[08:50] <dalek> Perlito: 41e7b04 | (Flavio S. Glock)++ | / (7 files):

[08:50] <dalek> Perlito: Perlito5 - js - string overload

[08:50] <dalek> Perlito: review: https://github.com/fglock/Perlito/commit/41e7b04a5d

[08:55] <lizmat> TimToady: re S28:145, do you really want a Version object in there?   I think it makes sense for $*VM.version only, really

[08:55] <synopsebot> Link: http://perlcabal.org/syn/S28.html#line_145

[08:55] <lizmat> Kernel and Distro versions I don't think fit the Perl "Version" mold

[09:02] *** fhelmberger joined
[09:07] *** ssutch joined
[09:29] *** FROGGS left
[09:35] <dalek> roast: 8ebd17f | (Elizabeth Mattijsen)++ | packages/Test/Util.pm:

[09:35] <dalek> roast: Make throws_like use subtest {}

[09:35] <dalek> roast: review: https://github.com/perl6/roast/commit/8ebd17f1fd

[09:35] <dalek> roast: ab5d8ac | (Elizabeth Mattijsen)++ | S (14 files):

[09:35] <dalek> roast: Adjust # tests because throws_like is now just 1

[09:35] <dalek> roast: review: https://github.com/perl6/roast/commit/ab5d8ac85f

[09:36] <moritz> lizmat++

[09:37] <dalek> rakudo/nom: cbb8654 | (Elizabeth Mattijsen)++ | docs/ChangeLog:

[09:37] <dalek> rakudo/nom: Mention tap_ok and throws_like being 1 test now

[09:37] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cbb8654fcb

[09:42] *** SevenWolf left
[09:44] *** rurban joined
[09:45] *** geekosaur left
[09:45] <dalek> roast: d2a8eae | (Elizabeth Mattijsen)++ | S02-types/set.t:

[09:45] <dalek> roast: Fix unexpected undying

[09:45] <dalek> roast: review: https://github.com/perl6/roast/commit/d2a8eae9bc

[09:45] *** geekosaur joined
[09:46] * masak .oO( unexpectedly undead )

[09:47] <dalek> roast: 351746e | (Elizabeth Mattijsen)++ | S12-methods/chaining.t:

[09:47] <dalek> roast: Remove unnecessary fudge

[09:47] <dalek> roast: review: https://github.com/perl6/roast/commit/351746eddf

[09:49] <dalek> roast: 28d0d98 | (Elizabeth Mattijsen)++ | S29-os/system.t:

[09:49] <dalek> roast: Change unreliable todo into skip to reduce noise

[09:49] <dalek> roast: review: https://github.com/perl6/roast/commit/28d0d98138

[09:50] *** dayangkun_ joined
[09:50] *** rurban left
[09:51] *** dayangkun left
[09:54] *** Ven_ is now known as Vendethiel-

[09:55] <lizmat> All tests successful.

[09:55] <lizmat> Files=870, Tests=31418, 223 wallclock secs ( 8.58 usr  4.19 sys + 1375.70 cusr 154.64 csys = 1543.11 CPU)

[09:55] <lizmat> it's been a long time since I've seen that

[09:55] <Vendethiel-> .oO( that must've required lots of fudging ! )

[09:56] <lizmat> it's only clean for me, on OSX: looking at  http://perlpunks.de/paste/show/53747bbc.4872.1c6 now

[09:57] <Vendethiel-> you fixed/fudged the ~30 moar failing tests [Coke] talked about yesterday ?

[09:59] *** ssutch left
[10:00] *** ssutch joined
[10:00] *** Vendethiel- is now known as Ven-

[10:01] <lizmat> Vendethiel-  : not sure

[10:01] <lizmat> I only know that spectest is now clean for *me*  :-)

[10:02] *** kaare_ left
[10:05] *** ssutch left
[10:07] <lizmat> moritz: I can't really make heads or tails of it

[10:07] <lizmat> I propose to get $*KERNEL / $*DISTRO etc up to spec

[10:08] <lizmat> and then change values to match depending on $*DISTRO.name

[10:08] <lizmat> meanwhile I will take the test out of the spectest.data

[10:08] <lizmat> is that a plan?

[10:10] <Ven-> uh; I thought I registered another account on freenode; but I can't find it ...

[10:10] *** Ven- is now known as Vendethiel-

[10:10] <dalek> rakudo/nom: 1694d36 | (Elizabeth Mattijsen)++ | src/core/ (2 files):

[10:10] <dalek> rakudo/nom: Part one of Application -> Systemic move

[10:10] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1694d3609c

[10:10] <Vendethiel-> what went wrong, no clue, whatever

[10:11] <dalek> rakudo/nom: 69e11c9 | (Elizabeth Mattijsen)++ | tools/build/Makefile- (3 files):

[10:11] <dalek> rakudo/nom: Part 2 of Application -> Systemic move

[10:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/69e11c918f

[10:16] *** dmol1 joined
[10:17] *** virtualsue left
[10:19] *** dmol left
[10:22] *** dayangkun joined
[10:22] *** dmol1 left
[10:24] *** dayangkun_ left
[10:26] <dalek> rakudo/nom: a0ba7f9 | (Elizabeth Mattijsen)++ | src/core/ (4 files):

[10:26] <dalek> rakudo/nom: Part 3 of Application -> Systemic move

[10:26] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a0ba7f9189

[10:26] *** dayangkun left
[10:28] *** kaare_ joined
[10:29] *** woolfy left
[10:43] <dalek> rakudo/nom: ea173d0 | (Elizabeth Mattijsen)++ | lib/Test.pm:

[10:43] <dalek> rakudo/nom: Fail subtest if incorrect number of tests done

[10:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ea173d070e

[10:43] <lizmat> sightseeing&

[10:48] *** rurban joined
[10:52] *** rurban left
[10:58] *** kurahaupo joined
[11:08] *** alinbsp left
[11:09] *** prevost joined
[11:25] *** denis_boyun joined
[11:43] *** FROGGS joined
[11:49] *** skids left
[11:50] *** rurban joined
[11:54] *** rurban left
[11:56] *** alinbsp joined
[12:00] *** ssutch joined
[12:05] *** ssutch left
[12:06] *** FROGGS left
[12:07] *** kurahaupo left
[12:12] *** dayangkun joined
[12:27] *** dmol joined
[12:30] *** ssutch joined
[12:35] *** ssutch left
[12:46] *** alinbsp left
[12:52] *** rurban joined
[12:52] *** logie_ joined
[12:54] *** xenoterracide_ joined
[12:57] *** rurban left
[13:04] *** sorear joined
[13:07] *** xenoterracide_ left
[13:13] *** FOAD joined
[13:14] *** anaeem1_ left
[13:17] *** anaeem1_ joined
[13:21] *** anaeem1_ left
[13:24] *** skids joined
[13:28] <sergot_> lizmat: iirc, we start at 10:00 tomorrow, don't we?

[13:30] *** molaf joined
[13:31] *** ssutch joined
[13:35] *** ssutch left
[13:38] *** rurban joined
[13:42] *** vike joined
[13:44] *** rurban1 joined
[13:44] *** rurban left
[13:50] *** btyler joined
[13:53] *** myfree joined
[13:53] *** bluescreen10 joined
[14:03] *** kaleem left
[14:04] *** kaare_ left
[14:05] *** FROGGS joined
[14:09] *** xenoterracide_ joined
[14:12] *** rurban1 left
[14:16] *** FROGGS left
[14:19] * [Coke] wonders how subtests will play with test_summary.pl

[14:23] *** treehug88 joined
[14:24] <dalek> roast: 8a66fa5 | skids++ | S02-literals/radix.t:

[14:24] <dalek> roast: Add fudged tests for problematic representation-breaking radix literals

[14:24] <dalek> roast: review: https://github.com/perl6/roast/commit/8a66fa5b1c

[14:24] <dalek> roast: 3f8942b | skids++ | S03-operators/bit.t:

[14:24] <dalek> roast: Add test for since-fixed RT #115958

[14:24] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=115958

[14:24] <dalek> roast: review: https://github.com/perl6/roast/commit/3f8942bdad

[14:24] <dalek> roast: 5313c52 | skids++ | S03-operators/bit.t:

[14:24] <dalek> roast: Add basic tests for RT#115966.  Fudged for now until other PRs pulled.

[14:24] <dalek> roast: review: https://github.com/perl6/roast/commit/5313c52b38

[14:24] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=115966

[14:24] <dalek> roast: d6fdc05 | moritz++ | S0 (2 files):

[14:24] <dalek> roast: Merge pull request #41 from skids/master

[14:24] <dalek> roast: 

[14:24] <dalek> roast: Add some integer related tests, some pre-fudged.

[14:24] <dalek> roast: review: https://github.com/perl6/roast/commit/d6fdc05de0

[14:26] *** rurban joined
[14:28] *** virtualsue joined
[14:28] *** treehug88 left
[14:32] *** ssutch joined
[14:32] *** FROGGS joined
[14:32] *** treehug88 joined
[14:36] *** ssutch left
[14:40] *** treehug88 left
[14:44] *** FROGGS left
[14:45] *** nnunley joined
[14:48] *** FROGGS joined
[14:48] *** bluescreen100 joined
[14:49] *** liztormato joined
[14:51] <liztormato> [Coke]: A subtest counts as 1. The inner test TAP output is indented with 3 spaces. Is that an answer?

[14:51] *** bluescreen10 left
[14:52] *** bjz left
[14:56] *** liztormato left
[14:57] *** liztormato joined
[14:58] <liztormato> sergot_: 10:00 sounds like an excellent time to me

[15:01] *** liztormato left
[15:10] *** denis_boyun left
[15:15] *** molaf_ joined
[15:15] *** igorsutton_ left
[15:18] *** molaf left
[15:18] *** rindolf joined
[15:20] *** myfree is now known as xylixy

[15:20] *** xylixy left
[15:21] *** fhelmberger left
[15:21] *** fhelmberger joined
[15:33] *** ssutch joined
[15:37] *** Vendethiel- left
[15:37] *** ssutch left
[15:40] *** zakharyas left
[15:44] *** fhelmberger left
[15:46] <TimToady> lizmat: I'd rather keep the version well-typed and cmp-able, and if people use some other non-comparable system of names, count it as part of the name or auth, or come up with some other way to sneak additional naming in; it is not necessary that all identifying fields be defined--we just need enough info to be unique

[15:47] <TimToady> also, the original formulation of versions allowed singleton names in place of a number, as long as they are considered alphabetically ordered

[15:47] <TimToady> so we could sneak pangolins and such in that way

[15:49] <TimToady> as a limiting case, if the crypto-sig is there, everything else is redundant (git think, basically)

[15:50] <TimToady> and a distro usually has a signature

[15:50] <sergot_> lizmat: that's great :)

[15:53] <TimToady> so basically anything that comes from git doesn't really need a version, so it can be undefined

[15:53] <TimToady> bottom line, I'd rather an undefined version than an untyped version

[15:55] <[Coke]> (indented with 3 spaces) oh great maker, why three!?

[15:56] <[Coke]> and no, it doesn't really answer the question for me, I haven't looked at the guts of test_summary in a while.

[15:57] <dalek> rakudo-star-daily: c35acee | coke++ | log/ (5 files):

[15:57] <dalek> rakudo-star-daily: today (automated commit)

[15:57] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/c35aceec08

[15:57] <dalek> perl6-roast-data: 273e901 | coke++ | / (6 files):

[15:57] <dalek> perl6-roast-data: today (automated commit)

[15:57] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/273e901ef3

[15:57] <[Coke]> S17-supply/uniq.t aborted 4 test(s)

[15:57] <[Coke]> (moar)

[15:59] <[Coke]> S17 went from 1397 tests yesterday (according to test_summary) to 638 today (for moar, anyway). so, I guess it worksish.

[15:59] *** logie_ left
[16:00] *** anaeem1 joined
[16:03] *** thou joined
[16:05] *** kurahaupo joined
[16:06] *** kaleem joined
[16:07] *** kaleem left
[16:17] *** ivanshmakov left
[16:20] *** dwarring left
[16:20] *** ivanshmakov joined
[16:23] *** kaare_ joined
[16:24] *** logie_ joined
[16:26] *** Psyche^_ joined
[16:28] *** gtodd left
[16:30] *** gtodd joined
[16:30] *** Psyche^ left
[16:33] *** ssutch joined
[16:37] *** xfix joined
[16:38] *** ssutch left
[16:38] *** hummeleB1 left
[16:40] *** treehug88 joined
[16:44] <btyler> can for loops be given a block-typed variable rather than a pointy block literal? I've tried a few things and nothing seems to be making rakudo happy

[16:45] <FROGGS>  /ö\ <--- I lost my hair!

[16:45] <btyler> like: my $foo = { say 'hi' }; for 1..4 $foo; # doesn't work

[16:46] *** denis_boyun joined
[16:46] *** virtualsue left
[16:46] <FROGGS> m: my $foo = { say 'hi' }; $foo() for 1..4

[16:46] <camelia> rakudo-moar ea173d: OUTPUT«hi␤hi␤hi␤hi␤»

[16:47] <FROGGS> it does and probably won't parse your paste

[16:47] <btyler> so only with postfix for?

[16:47] <FROGGS> because it is a TTIAR

[16:48] <FROGGS> it is a statement modifying for... but yeah

[16:48] <FROGGS> .map (and maybe feeds?) work too

[16:48] <FROGGS> m: my $foo = { say 'hi' }; (1..4).map: $foo

[16:48] <camelia> rakudo-moar ea173d: OUTPUT«hi␤hi␤hi␤hi␤»

[16:49] <btyler> right, I was just wondering. my first thought when I understood that for just takes a pointy block (which is basically a coderef in p5 terms, yeah?), I figured I'd be able to stick any block there, rather than just a literal.

[16:50] <moritz> except that 'for' is special syntax

[16:50] <moritz> in particular, it has two terms in a row

[16:50] <moritz> for LIST BLOCK # no operator between LIST and BLOCK

[16:51] *** araujo joined
[16:51] *** araujo left
[16:51] *** araujo joined
[16:51] <btyler> but "BLOCK" here means a literal block, not a var of type block. right? LIST can be a @list

[16:56] <moritz> right

[16:56] <btyler> am I horribly abusing terminology? just trying to get why 'for @abc -> {}' is ok in that position but 'my $foo = -> {}; for @abc $foo" is not

[16:58] <moritz> because 'for' isn't a subroutine

[16:58] <moritz> it's syntax

[16:58] <moritz> just like you can't write  my $block = { 42 }; sub foo() $block;

[16:59] <btyler> ok, makes sense. moritz++

[16:59] <moritz> and the reason that 'for' wants a literal block is that otherwise it'd be really hard to detect syntax errors

[16:59] <moritz> supposed you'd allow   for LIST $variable

[16:59] <moritz> and you write   for $a, $b, $c $d { ... }

[16:59] *** isBEKaml joined
[16:59] <btyler> so what's the benefit of for taking a pointy block as opposed to 'just' some braces, then?

[17:00] <moritz> then it'd parse as a valid for-loop with $d as a block

[17:00] <btyler> yeah, icky for sure

[17:00] <moritz> btyler: you can give the loop varaible a name

[17:00] <moritz> for @list -> $name { say "hi $name" }

[17:00] <moritz> as opposed to   for @list { say "hi $_" }

[17:01] <moritz> also, it allows you to iterate over the list in pairs (or other tupels)

[17:01] <btyler> right right. I guess I needed to ask a better question: why have for loops use something called blocks, rather than just saying "for loops are entirely special" and having syntax like p5 (or however)

[17:01] <moritz> for @list.kv -> $index, $name { say "Hi $name, you are {$index + 1} on our list" }

[17:02] <moritz> that's the principle of reuse

[17:02] <moritz> we already have a way to declare code blocks, so we gain both flexibility and mental cohesion by reusing that in many places

[17:02] <moritz> you can even write

[17:03] <moritz> m: sub f { 42 }; if f() -> $x { say "$x from f() was true" }

[17:03] <camelia> rakudo-moar ea173d: OUTPUT«42 from f() was true␤»

[17:04] <moritz> also, it makes 'map' and 'for' more consistent

[17:04] *** Rotwang joined
[17:04] <moritz> in p5, you can't name the variable in the map block, it's always $_

[17:05] <btyler> ok, and the same 'this is syntax' situation there: you can't say `my $foo = -> { say 'hi' }; if 1 $foo;`

[17:09] <moritz> correct

[17:09] *** anaeem1 left
[17:09] <moritz> and just like with 'for', 'if' also has a non-syntactic equivalent

[17:10] <moritz> 1 && $foo()

[17:10] *** virtualsue joined
[17:11] *** anaeem1 joined
[17:15] *** anaeem1 left
[17:17] <btyler> moritz: thanks! my mental model has leveled up :)

[17:18] <TimToady> there's usually more than one way to do it, but if there are all ways to do it, then lots of those ways will not do what you expect

[17:19] <TimToady> so we enforce a bit of culture to balance out the flexibility

[17:19] <jnthn> Poland \o/

[17:20] *** dakkar left
[17:22] <isBEKaml> TimToady: So perl6 is TIMTOWTDI but we know it's just a few 'sane' ways? :-)

[17:22] *** bjz joined
[17:22] <nwc10> jnthn: "Poland", as in, you are on a train which has crossed a border?

[17:22] <[Coke]> TIMTOWTDIBYSPJPOASWI.

[17:22] <nwc10> or the answer to a question that I missed

[17:23] <jnthn> No, I'm actually in Poznan at the hotel :)

[17:23] * [Coke] reminds folks there is one TPF perl grant application this period and you should comment on it.

[17:23] <jnthn> [Coke]: link?

[17:23] <Rotwang> polan stonk :C

[17:25] <isBEKaml> Is there an .msi for 2014.04 star yet?

[17:26] <isBEKaml> [Coke]: what was that? TIMTOWTDI But You Should Probably Just ... ? (Care to complete, please?)

[17:26] <isBEKaml> http://rakudo.org/downloads/star/ doesn't list 2014.04 msi. 

[17:28] *** bjz left
[17:34] *** ssutch joined
[17:38] *** ssutch left
[17:39] *** woolfy joined
[17:42] *** rurban left
[17:44] *** fhelmberger joined
[17:45] *** hoverboard joined
[17:48] *** fhelmberger left
[17:53] <[Coke]> pick one and stick with it?

[17:53] <[Coke]> not at all catchy.

[17:53] <[Coke]> jnthn: one sec

[17:53] <jnthn> [Coke]: I found it

[17:53] <[Coke]> http://news.perlfoundation.org/2014/05/may-2014-grant-proposal.html

[17:53] <jnthn> [Coke]: It was harder to find that I expected... :)

[17:53] <isBEKaml> "put out a sane way in" :D

[17:53] <[Coke]> jnthn++

[17:54] <[Coke]> isBEKaml: for guessing 5 of them!

[17:54] <[Coke]> er, isBEKaml++

[17:54] <woolfy> So ncw10++ having make Perl 6 run on a Raspberry Pi, which is an ARM processor...  does that mean Perl 6 will also run on an Arduino 32-bit ARM?

[17:56] *** anaeem1 joined
[17:59] *** rurban joined
[18:09] <dalek> rakudo/nom: 831b1d4 | (Elizabeth Mattijsen)++ | src/core/Str.pm:

[18:09] <dalek> rakudo/nom: Str.chop accepts count of number of chars to chop

[18:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/831b1d458c

[18:10] <colomon> woolfy: would an Arduino have enough RAM?

[18:11] <TimToady> just stack a few of them up

[18:11] *** kurahaupo left
[18:12] <nwc10> woolfy: what OS is the Arduino running? and what's the build toolchain?

[18:16] *** ssutch joined
[18:16] *** spider-mario joined
[18:17] <[Coke]> who else where is able to reproduce my java-runner-dying-during-spectest issue?

[18:18] <FROGGS> [Coke]: I had that once a few days ago

[18:18] *** spider-mario left
[18:22] *** spider-mario joined
[18:22] *** kurahaupo joined
[18:27] *** kurahaupo left
[18:34] <moritz> m: role R { method foo() { ... } }; class A does R { }

[18:34] <camelia> rakudo-moar ea173d: OUTPUT«===SORRY!===␤Method 'foo' must be implemented by A because it is required by a role␤»

[18:34] *** isBEKaml left
[18:42] *** Sqirrel left
[18:45] *** kaare_ left
[18:46] *** skids left
[18:48] *** kaare_ joined
[18:49] *** kaare__ joined
[18:53] *** kaare_ left
[18:53] <moritz> m: https://gist.github.com/moritz/f524eb792eadfe38ed5a

[18:53] <camelia> rakudo-moar ea173d: OUTPUT«gist not found»

[18:53] <moritz> I did click on the "create public gist" button, I'm sure

[18:54] <moritz> anyway, that says: "Can't use unknown trait 'is declared_in' in a method declaration."

[18:54] <moritz> any idea why?

[18:54] *** ssutch left
[18:55] <nwc10> I can see it, and I asked a bot

[18:55] <nwc10> 18:54 <dipsy> [ Attempt to mimic Java's @Override ] 

[18:55] <nwc10> no, I don't knowwhy

[18:55] <nwc10> m: https://gist.github.com/moritz/f524eb792eadfe38ed5a

[18:55] *** ssutch joined
[18:55] <camelia> rakudo-moar ea173d: OUTPUT«gist not found»

[18:55] <nwc10> strange

[18:55] <moritz> camelia is known to not like private gists

[18:55] <moritz> (patches welcome!)

[18:55] <moritz> ok, I think I've figured it out

[18:56] <moritz> it seems that method traits don't receive arguments yet :(

[18:56] <moritz> when I remove the Mu $interface, it "works"

[18:56] <nwc10> private gists? In that, that URL seems to be public

[18:56] <moritz> public gists have shorter URLs

[18:56] <nwc10> aha

[18:56] <moritz> (and are listed on a per-user base on gist.github.com)

[18:56] <moritz> whereas private gists are only accessible if you know the URL

[18:57] <moritz> m: multi trait_mod:<is>(Routine:D $m, :declared-in!, |c) { say c.perl }; class Blerg { method m1 is declared-in(Int) { } };

[18:57] <camelia> rakudo-moar ea173d: OUTPUT«===SORRY!=== Error while compiling /tmp/zcoTPhQ1eh␤Malformed parameter␤at /tmp/zcoTPhQ1eh:1␤------> multi trait_mod:<is>(Routine:D $m, ⏏:declared-in!, |c) { say c.perl }; class␤    expecting any of:␤        …»

[18:58] <moritz> m: multi trait_mod:<is>(Routine:D $m, :$declared-in!, |c) { say c.perl }; class Blerg { method m1 is declared-in(Int) { } };

[18:58] <camelia> rakudo-moar ea173d: OUTPUT«Capture.new()␤»

[18:58] <moritz> c is empty, which means the argument isn't passed

[18:58] <moritz> r: multi trait_mod:<is>(Routine:D $m, :$declared-in!, |c) { say c.perl }; class Blerg { method m1 is declared-in(Int) { } };

[18:58] <camelia> rakudo-jvm ea173d: OUTPUT«(timeout)»

[18:58] <camelia> ..rakudo-{parrot,moar} ea173d: OUTPUT«Capture.new()␤»

[19:00] * masak .oO( Rakudo JVM is a machine that converts Perl 6 code to timeouts )

[19:00] *** ssutch left
[19:00] *** telex left
[19:02] *** darutoko left
[19:02] <vendethiel> moritz: "public" vs "private" is merely listed on your gist page or not :)

[19:02] <vendethiel> so I don't explain how can camelia not like private pastes ? do they have a different structure ?

[19:02] *** telex joined
[19:02] <vendethiel> and then again, I'm backlogging :D

[19:02] <moritz> maybe

[19:02] <moritz> m: multi trait_mod:<is>(Method:D $m, :$override!) {

[19:02] <camelia> rakudo-moar ea173d: OUTPUT«===SORRY!=== Error while compiling /tmp/IwnbnT17Le␤Unable to parse expression in block; couldn't find final '}' ␤at /tmp/IwnbnT17Le:1␤------> ait_mod:<is>(Method:D $m, :$override!) {⏏<EOL>␤    expecting any of…»

[19:03] * vendethiel just saw ShellCheck and thought about ingy

[19:04] *** molaf_ left
[19:05] <ingy> vendethiel: oh?

[19:05] <vendethiel> that's a handy tool for us mortals that don't really do bash

[19:06] <ingy> oh cool!

[19:06] <vendethiel> (well, I did far enough bash. I had to do a hangman in bash for my school, and it was painful)

[19:06] <ingy> vendethiel: at some point I want to talk to you about cafescript

[19:06] <vendethiel> is that a fork of a fork of a fork of a fork?

[19:07] <ingy> my coffee variant to generate a dozen langs

[19:07] <ingy> just for cross language libraries/modules/packages

[19:07] <vendethiel> oh alright, I was getting on a "coffeescript in french" project and ready to throw my computer at the wall.

[19:07] <ingy> :D

[19:08] <ingy> bash is the one language I'm terrified to backend

[19:08] <vendethiel> why are there so many "french programming languages", they're all so incredibly bad

[19:08] *** kaare__ left
[19:08] <ingy> I assume you are french

[19:09] <vendethiel> ingy: I've actually started looking at a stylus-like-in-p6 and jade-like-in-p6 but I'm still pondering on indentation based stuff

[19:09] <vendethiel> I am :)

[19:09] <vendethiel> and I really dislike french as a language. It's bad.

[19:09] <ingy> heh

[19:09] <ingy> good for sex

[19:09] <ingy> or so I've heard

[19:10] <vendethiel> I've heard so too. But not from french people...

[19:10] <ingy> vendethiel: I have a parsing framework that works in all langs that have regexes called Pegex (inspired by p6 rules)

[19:11] <vendethiel> regex combinators?

[19:11] <ingy> I ported the coffee-redux grammar to it

[19:11] <ingy> enough for it to compile

[19:11] <ingy> but haven't gone further

[19:11] <vendethiel> redux is ... "irrelevant", really

[19:11] <vendethiel> well, I guess it's a cool experiment

[19:11] <ingy> I did it with au last month

[19:11] <vendethiel> pretty cool

[19:11] <ingy> well the point is that it is a PEG grammar

[19:12] <ingy> so I could mindlessly translate it

[19:12] <vendethiel> yeah, I can get that.

[19:12] <vendethiel> Eh, coffee's grammar is Jison, so it should be easy too !

[19:12] <ingy> I'm just doing it to get a headstart on cafescript

[19:12] <vendethiel> Oh, 2k lines of lexer+rewriter :P

[19:13] <ingy> yeah I've read through it a couple times

[19:13] <ingy> peg.js and pegex are very similar

[19:13] <ingy> I could have scripted most of the translation

[19:13] <tadzik> ingy! \ov

[19:13] <ingy> tadzik: broken arm?

[19:14] <ingy> :)

[19:14] <vendethiel> your .cafe is parsed from your grammar ?

[19:15] <ingy> https://github.com/ingydotnet/coffeescript-pgx/blob/master/coffeescript.pgx

[19:15] <tadzik> ingy: fortunately it's just lag :)

[19:15] <tadzik> and clumsy drunk fingers

[19:15] *** ssutch joined
[19:15] <ingy> tadzik: I meant the \ov

[19:15] <ingy> not familiar

[19:15] <moritz> m: class A { say A.^name }

[19:15] <camelia> rakudo-moar ea173d: OUTPUT«A␤»

[19:16] <moritz> m: class A { BEGIN {say A.^name } }

[19:16] <camelia> rakudo-moar ea173d: OUTPUT«===SORRY!===␤Cannot invoke this object (REPR: Null, cs = 0)␤»

[19:16] <tadzik> ingy: so did I

[19:16] <ingy> vendethiel: yes, that's the idea

[19:16] <vendethiel> ingy: looks cool :)

[19:16] <ingy> tadzik: drunk++

[19:18] <ingy> vendethiel: it compiles. (see yaml file next to it) now I need to go through and clean it up some.

[19:18] <FROGGS> m: class A { BEGIN {say A.HOW.name(A) } }

[19:18] <camelia> rakudo-moar ea173d: OUTPUT«A␤»

[19:19] *** SamuraiJack__ left
[19:19] <ingy> but I'm currently neckdeep in other projects. (mostly Kwim)

[19:19] <masak> vo/ tadzik

[19:19] <tadzik> wololo

[19:20] <TimToady> vov  <-- gallic shrug

[19:20] <masak> :P

[19:20] <ingy> :P

[19:20] <tadzik> thole galls have flexibble arms

[19:20] <dalek> perl6-roast-data: 2c6762e | coke++ | / (6 files):

[19:20] <dalek> perl6-roast-data: today (automated commit)

[19:20] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/2c6762e58c

[19:20] <TimToady> are they good for sex?

[19:20] <masak> no, they're just shrugging with their elbows pointing downwards.

[19:20] <ingy> flexibbbbbbble!

[19:22] * masak .oO( A Call To Gallic Arms )

[19:22] <tadzik> oh, masak, I have a fatface just for that

[19:22] <tadzik> hold on

[19:22] <tadzik> ¯\_(ツ)_/¯

[19:22] <tadzik> there you go

[19:22] <masak> hehe

[19:22] <FROGGS> nice one :o)

[19:23] <tadzik> this one has literalyy 2 elbows

[19:23] <masak> .u ツ

[19:23] <yoleaux> U+30C4 KATAKANA LETTER TU [Lo] (ツ)

[19:23] <TimToady> its head is on crooked

[19:23] <TimToady> and it needs raised eyebrows

[19:23] <masak> tadzik: isn't... isn't "literally 2 elbows" the normal elbow count?

[19:23] <vendethiel> ༼ ▀̿̿Ĺ̯̿̿▀̿ ̿ ༽ ᴊ

[19:23] <tadzik> oh, that's per  hand

[19:24] *** Alula left
[19:24] <vendethiel> masak, tadzik: if you want some of this stuff https://dl.dropboxusercontent.com/u/33446/hell.txt

[19:24] <tadzik> ☜(ﾟヮﾟ☜)

[19:24] *** Alula joined
[19:24] <TimToady> wow, two elbows per hand

[19:24] <masak> I dub this new unit "shrugitude". it's measured in elbows/hand.

[19:25] <TimToady> vow, 1.5 elbows per hand

[19:25] <masak> vendethiel: fanciful.

[19:25] <vendethiel> masak: quite.

[19:25] <tadzik> well, an average human has less than 2 elbows, I guess

[19:25] <TimToady> "that's measured in sequielbows..."

[19:25] <vendethiel> thought i can't quite say it's *my* list

[19:26] <tadzik> so 1.5 may be accuratish

[19:27] *** bjz joined
[19:28] *** dwarring joined
[19:30] <TimToady> your attitude is disarming

[19:31] *** bjz left
[19:31] <masak> oh no, are we caught in an arms race now?

[19:31] <masak> I never meant any arm.

[19:31] *** denis_boyun___ joined
[19:32] *** prevost left
[19:33] <TimToady> that would be "no arm" I think

[19:33] <masak> I never meant no arm.

[19:33] <masak> I think.

[19:33] *** denis_boyun left
[19:34] <TimToady> your mom wears arm yboots

[19:34] <masak> Y U BOOTS?

[19:35] <TimToady> oy <-- one elbow with two hands

[19:37] <tadzik> :D

[19:37] <tadzik> B\o/\o\ts -- army boots

[19:43] <masak> :P

[19:47] *** SevenWolf joined
[19:50] <TimToady> ⏔

[19:51] <FROGGS> .u ⏔

[19:51] <yoleaux> U+23D4 METRICAL LONG OVER TWO SHORTS [So] (⏔)

[19:53] *** jsn_ joined
[19:56] <TimToady> o͜o

[19:57] *** gtodd left
[20:09] *** anaeem1 left
[20:16] *** woolfy left
[20:18] *** grep0r joined
[20:21] *** igorsutton joined
[20:22] *** grep0r left
[20:23] *** anaeem1 joined
[20:24] *** [particle] joined
[20:25] *** anaeem1 left
[20:25] *** anaeem1 joined
[20:26] *** sjn joined
[20:27] <masak> 'night, #perl6

[20:27] <tadzik> goonight

[20:32] <colomon> \o

[20:38] *** logie_ left
[20:47] *** logie_ joined
[20:47] *** anaeem1 left
[20:49] *** virtualsue left
[21:00] *** berekuk joined
[21:05] *** Rotwang left
[21:19] *** pnu joined
[21:22] *** sftp_ joined
[21:22] *** denis_boyun___ left
[21:24] *** sftp_ is now known as sftp

[21:24] *** spider-mario left
[21:24] *** isacloud__ joined
[21:27] *** geekosaur left
[21:28] *** geekosaur joined
[21:29] *** ggherdov_ joined
[21:30] *** logie_ left
[21:31] *** clkaoud joined
[21:37] *** [Sno] left
[21:38] *** [Sno] joined
[21:45] *** fhelmberger joined
[21:49] *** fhelmberger left
[21:51] *** ggherdov_ left
[21:51] *** ggherdov_ joined
[21:51] *** ggherdov_ left
[21:51] *** ggherdov_ joined
[21:51] *** ggherdov_ is now known as ggherdov

[21:55] *** dwarring left
[21:59] *** woolfy joined
[22:02] <woolfy> ncw10: I have no idea what OS Arduino is running on.   I just read that Arduino comes in at least two flavors, and one of them is with an ARM cpu.  And I remembered that you did Raspberry Pi, which also has an ARM chip...  so...  1+1=x....

[22:02] *** rurban left
[22:02] <woolfy> I have no inside knowledge of either Arduino nor Raspberry Pi.

[22:02] *** dmol left
[22:03] <woolfy> I was just wondering.  because ARM on Raspberry and ARM on Arduino -> maybe Perl 6 on Arduino...   Without any knowledge whatsoever that might help you...  I ask the difficult question. :-)

[22:20] *** bluescreen100 left
[22:21] *** skids joined
[22:23] *** bluescreen10 joined
[22:24] *** hoverboard left
[22:25] *** bluescreen10 left
[22:28] *** PZt left
[22:28] *** BenGoldberg joined
[22:29] *** bjz joined
[22:33] *** cognominal joined
[22:34] *** bjz left
[22:35] <dalek> rakudo/nom: 2e49610 | (Elizabeth Mattijsen)++ | lib/Test.pm:

[22:35] <dalek> rakudo/nom: Oops.  Wrong rendering made me believe it was 3

[22:35] <dalek> rakudo/nom: 

[22:35] <dalek> rakudo/nom: But the pod actually states 4 spaces per indent for subtests.

[22:35] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2e49610f15

[22:43] *** treehug88 left
[22:48] *** xenoterracide_ left
[23:09] <BenGoldberg> m: say [/] 2,2,2

[23:09] <camelia> rakudo-moar 831b1d: OUTPUT«0.5␤»

[23:11] <BenGoldberg> If I wanted reduction using right end of the list, instead of the left end of the list... (2 / (2/2)), producing an output of 2 instead of .5, how would I do it?

[23:14] <[Coke]> right now my daily tests use only the recommended version of parrot, but use the latest version of rakudo & nqp... I'm going to change it to use the latest version of everything, I think.

[23:15] <[Coke]> (er, daily tests of Rakudo *)

[23:22] *** hoverboard joined
[23:23] *** Juerd joined
[23:24] *** woolfy left
[23:24] *** btyler left
[23:28] <timotimo> m: say [R/] 2,2,2

[23:28] <camelia> rakudo-moar 831b1d: OUTPUT«2␤»

[23:28] *** xenoterracide_ joined
[23:29] <BenGoldberg> m: say [R/] 3, 4, 5

[23:29] <camelia> rakudo-moar 831b1d: OUTPUT«3.75␤»

[23:30] <BenGoldberg> m: ((3/4)/5).say; (3/(4/5)).say;

[23:30] <camelia> rakudo-moar 831b1d: OUTPUT«0.15␤3.75␤»

[23:31] <BenGoldberg> m: (5/(4/3)).say

[23:31] <camelia> rakudo-moar 831b1d: OUTPUT«3.75␤»

[23:32] <BenGoldberg> m: say 3**4**5;

[23:32] <camelia> rakudo-moar 831b1d: OUTPUT«3733918487410200435329597541848665882254097767837340077506369317220790406172652512299936889388039772204687650654314751581087270545921608585813513369828091873141917485942625809388070199519564042855718180410466812887974029255176680123406172983965747316191523…»

[23:37] *** clkao left
[23:38] *** jsn_ left
[23:43] *** hoverboard left
[23:50] <zacts> Is there a good news bullitin for perl6?

[23:50] <zacts> for recent progress

[23:50] <timotimo> i'm doing weekly summaries of what's being developed

[23:50] <timotimo> p6weekly.wordpress.com is the address

[23:50] <zacts> timotimo: oh cool, thanks

[23:51] <timotimo> there's also the perl 6 planet that collects all blogs from perl6 related people up on planeteria.org/perl6 or something

[23:51] <zacts> oh neat

[23:51] <timotimo> i'd be interested if the blog's helpful to people who haven't been privy to perl6 development for a long time; maybe you could offer your opinion at some point :)

[23:52] <zacts> ok, sure. is your nick on the blog?

[23:52] <zacts> otherwise, I'll make note of it.

[23:53] <zacts> oh you have tweets and stuff, I'll probably tweet to you then

[23:53] <zacts> I'm @vimhacker

[23:55] *** rindolf left
[23:57] <timotimo> oh nice :)

