[00:00] <TimToady> slurp-rest is good; it shows relationship with slurp while indicating it is a lower-level operation by being longerly huffmanized

[00:01] <BenGoldberg> I'd also suggest an optional parameter, :close-after-eof, which causes slurp-rest to close the handle when it's done.

[00:01] <TimToady> as usual, the presence of a named option is a design smell

[00:02] <Tekk_> BenGoldberg: why would you need that?

[00:02] * BenGoldberg shrugs.  It was just an idea.

[00:02] <Tekk_> you've already read the whole file

[00:02] *** lucas_ left
[00:02] <TimToady> let's use language composition, not add options that reinvent things

[00:03] <TimToady> this is not a common enough operation to warrant the mental overhead of another option

[00:03] <BenGoldberg> One might have just read the whole file; however, one might want to seek backwards and re-read parts of the file.

[00:04] <TimToady> or append lines

[00:04] <BenGoldberg> That, too.

[00:06] <BenGoldberg> Or perhaps another program might be appending lines, and you want to read the new lines whenever the file changes size.

[00:12] *** woolfy1 left
[00:12] *** woolfy joined
[00:18] *** bbkr left
[00:35] *** panchiniak left
[00:38] *** pmurias left
[00:38] *** thou left
[01:00] <lizmat> sleep&

[01:08] <leont> lizmat: it's one of the first things to get back-ported to CPAN, but IMO it should be core

[01:15] *** rurban joined
[01:21] *** raiph joined
[01:24] *** ajr_ left
[01:27] *** grondilu joined
[01:33] *** araujo left
[01:38] <timotimo> hey

[01:38] <timotimo> hey folks

[01:38] <timotimo> hey

[01:38] <leont> Did some ground-work for that in Salzburg, didn't quite finish it :-/

[01:38] <timotimo> i made a thing

[01:38] <timotimo> http://t.h8.lv/add_core_op.svg

[01:38] <timotimo> look at my thing

[01:38] <timotimo> like my thing!

[01:39] <timotimo> it's version 1 of my thing

[01:43] <timotimo> next step: connect multiple versions of the same register

[01:43] <timotimo> then: get PHI to appear properly

[01:43] <timotimo> and lastly: figure something out for before/after comparisons

[01:49] *** exixt_ is now known as exixt

[01:50] *** chenryn joined
[01:54] <raydiak> timotimo++ awesome thing!

[02:25] *** xiaomiao left
[02:25] *** xinming left
[02:26] *** xinming joined
[02:27] *** xiaomiao joined
[02:29] *** xenoterracide_ joined
[02:30] *** pdcawley left
[02:32] *** adu left
[02:35] <_sri> is that serious? https://fosdem.org/2015/schedule/event/get_ready_to_party/

[02:37] <raydiak> 2015 is the officially stated goal, yes

[02:37] * _sri faints

[02:37] <timotimo> http://t.h8.lv/add_core_op_with_dataflow.svg

[02:39] <raydiak> perhaps "goal" is a bit strong..."stated likelihood"? :)

[02:39] <raydiak> http://irclog.perlgeek.de/perl6/2014-11-06#i_9622354

[02:39] <raydiak> timotimo: ooh even more awesome

[02:40] *** adu joined
[02:41] <japhb> timotimo: Why do some nodes have a black successor arrow and others have a grey one?

[02:42] * japhb feels like _sri

[02:42] <japhb> (Get ready to party!)++

[02:45] <timotimo> japhb: because i forgot to put the grey in some other places :)

[02:45] * japhb guesses that the answer to his previous question is "arrows in and out of exit_* are black, other successors are grey"

[02:45] <timotimo> it's a glorious mess of special cases :D

[02:45] <japhb> Heh

[02:45] <timotimo> also, arrows out from jumping instructions are black as well

[02:45] <timotimo> (which i think i'm going to keep)

[02:48] * raydiak added a bin/symbolic script to Math::Symbolic for manipulating equations from the command line

[03:02] *** grettis left
[03:04] <timotimo> http://t.h8.lv/add_core_op_extops_and_dataflow.svg ← now has a limited understanding of how our extops work

[03:04] <timotimo> (it just assumes they all write their first register arg and read all others)

[03:11] *** Mso150 joined
[03:12] *** awwaiid left
[03:14] *** leont left
[03:27] *** raiph left
[03:28] *** adu left
[03:33] *** xenoterracide_ left
[03:33] *** xenoterracide__ joined
[03:36] *** adu joined
[03:36] *** xenoterracide__ is now known as xenoterracide

[03:41] *** rurban left
[03:46] *** Mso150 left
[03:47] *** ventica joined
[03:48] <ventica> 'o' ~ '/'

[03:48] <ventica> camelia: 'o' ~ '/'

[03:49] * ventica lost my touch

[03:49] <timotimo> http://t.h8.lv/graph_of_gimme.svg - latest version i've built - this time with a much bigger spesh graph

[03:49] <raydiak> m: say 'o' ~ '/'

[03:49] <camelia> rakudo-moar 315ec6: OUTPUT«o/␤»

[03:49] <ventica> ty raydiak lol

[03:49] <raydiak> yw ventica :)

[03:51] <ventica> masak: Congrats on your GOTO talk... I found it truly awesome!

[03:51] *** kurahaupo left
[04:01] *** rmgk_ joined
[04:01] *** rmgk is now known as Guest33026

[04:01] *** Guest33026 left
[04:01] *** rmgk_ is now known as rmgk

[04:19] *** BenGoldberg left
[04:22] <raydiak> ugh another precomp bug

[04:29] *** davido___ joined
[04:31] *** davido__ left
[05:08] *** m__ joined
[05:09] *** m__ left
[05:18] *** kaare_ joined
[05:30] *** xenoterracide left
[05:30] *** xenoterracide joined
[05:31] *** kaleem joined
[05:39] *** ggoebel111111112 joined
[05:40] *** fayland joined
[05:41] *** ggoebel111111111 left
[05:45] *** adu left
[05:46] *** fayland left
[05:58] *** robert2434 joined
[05:59] *** xenoterracide left
[06:04] *** bjz joined
[06:15] *** awwaiid joined
[06:30] *** gfldex joined
[06:33] *** [Sno] left
[06:41] *** telex left
[06:42] *** telex joined
[06:46] *** kaleem left
[06:47] *** kaleem joined
[06:49] *** gfldex left
[06:52] *** kaleem left
[06:53] *** kaleem joined
[07:05] *** kaleem_ joined
[07:08] *** kaleem left
[07:13] *** jfredett left
[07:21] *** jack_rabbit left
[07:23] *** chenryn left
[07:26] *** chenryn joined
[07:39] *** FROGGS left
[07:41] *** Sqirrel left
[07:41] *** kaleem_ left
[07:47] <[Tux]> Wow, «rakudobrew build moar» automatically also fetches/updates the modules installed by panda. Less to watch :)

[07:55] *** jack_rabbit joined
[08:02] *** jack_rabbit left
[08:04] *** [Sno] joined
[08:14] *** darutoko joined
[08:16] *** grondilu left
[08:17] *** abraxxa joined
[08:26] *** FROGGS joined
[08:27] *** rindolf joined
[08:29] *** salv0 left
[08:34] *** denis_boyun joined
[08:35] *** Mso150 joined
[08:45] *** salv0 joined
[08:48] *** denis_boyun left
[08:49] *** ugator joined
[08:53] *** kaleem joined
[08:54] *** sqirrel__ joined
[08:57] *** fhelmberger joined
[09:03] *** zakharyas joined
[09:04] *** denis_boyun_ joined
[09:05] *** virtualsue joined
[09:07] *** ventica left
[09:11] *** virtualsue left
[09:31] *** denis_boyun_ left
[09:38] *** denis_boyun joined
[09:43] *** Ven joined
[09:43] *** erdic left
[09:44] <Ven> o/, #perl6

[09:44] <Ven> looks like that fosdem "announcement" (or "ambiguity") made quite some noise..

[09:45] *** tinyblak joined
[09:45] *** Guest31169 left
[09:46] *** bowtie joined
[09:46] *** bowtie is now known as Guest82954

[09:46] *** anaeem1 joined
[09:47] *** kjs_ joined
[09:49] *** erdic joined
[09:50] *** Guest82954 left
[09:52] *** bowtie_ joined
[09:55] * moritz sighs

[09:58] *** kjs_ left
[09:59] *** kjs_ joined
[09:59] *** nwc10 joined
[09:59] <yakudza> hello

[10:00] <yakudza> Ven, what announcement

[10:00] <yakudza> ?

[10:00] <nwc10> how is NSA?

[10:00] <Ven> helo yakudza 

[10:00] <Ven> yakudza: no announcement, only misreadings :)

[10:00] <Ulti> https://fosdem.org/2015/schedule/event/get_ready_to_party/ this?

[10:03] *** exixt is now known as exixt_

[10:03] *** tinyblak left
[10:05] *** denis_boyun left
[10:06] <yakudza> Very nice. For long time watching at perl6 I cant find use cases for it. Is there any articles where some one describes where perl6 is better that perl5 and maybe some use cases. 

[10:07] *** virtualsue joined
[10:08] *** virtualsue left
[10:09] <moritz> yakudza: for one thing, parsing is much nicer in Perl 6. See for example https://github.com/moritz/json/blob/master/lib/JSON/Tiny/Grammar.pm for a complete JSON parser in Perl 6

[10:09] <nwc10> yakudza: perl 6 has proper multi-core concurrency

[10:09] <moritz> yakudza: another thing that Perl 5 is very bad is is concurrency; Perl 6 (at least rakudo on MoarVM and on JVM) are already better here

[10:10] *** bjz left
[10:10] <nwc10> no ithreads, no GIL, etc

[10:10] *** bjz joined
[10:10] *** virtualsue joined
[10:12] *** kaleem left
[10:13] <moritz> also Perl 5 makes it far too easy to mix text and byte strings, causing trouble with encodings to be prevalent

[10:15] *** pecastro joined
[10:15] <yakudza> https://github.com/koorchik/formula-evaluation-benchmark

[10:16] <yakudza> Why perl 6 is so slow ? because of startup time ? 

[10:17] <yakudza> perl5 version is not optimized there. 

[10:17] <yakudza> anyway perl6 takes much more time

[10:19] *** tinyblak joined
[10:25] *** kaleem joined
[10:26] <moritz> yakudza: currently list iteration is still very slow

[10:26] <moritz> there's a project under way to fix that

[10:33] *** kaleem left
[10:34] *** xiaomiao left
[10:34] *** kaleem joined
[10:35] *** bowtie_ left
[10:36] *** xiaomiao joined
[10:36] *** bowtie_ joined
[10:37] *** tinyblak left
[10:38] *** tinyblak joined
[10:47] *** Ven left
[10:48] <FROGGS> yakudza: startup time (for rakudo on moarvm) is very good, though as moritz said lists are quite slow, but also string operations

[10:48] <FROGGS> yakudza: lists will be refactored soonish to improve performance

[10:50] *** denis_boyun joined
[10:51] *** azawawi joined
[10:51] <azawawi> hi everyone

[10:51] <azawawi> how do i delete a key from a hash?

[10:52] <azawawi> %in-stock.delete($name);  # which is mentioned in the Perl 6 book is not working any more

[10:52] <azawawi> and looking at the Hash class documentation does not help also

[10:53] <moritz> azawawi: %in-stock{$name}:delete

[10:53] <azawawi> very confusing

[10:54] <azawawi> the question is why does not the hash class has a remove or delete method to it?

[10:56] *** tinyblak left
[10:56] *** tinyblak joined
[11:00] *** chenryn left
[11:02] *** sqirrel__ left
[11:02] <lizmat> azawawi: it used to have

[11:02] <lizmat> but Perl6 allows something to be both accessible with [] *and {}

[11:02] <lizmat> the term "delete" was ambiguous, as it was used both for [] as well as {}

[11:03] <lizmat> so they got separated into "delete_pos" for [] and "delete_key" for {}

[11:04] <lizmat> so you still *can* do %hash.delete_key('onlyonekey')

[11:04] <lizmat> but that should probably be considered an unspecced rakudo implementation detail

[11:04] <azawawi> i see

[11:04] <azawawi> but it is still confusing :)

[11:06] <lizmat> please note that you can combine adverbs

[11:06] <lizmat> and make them conditional

[11:06] <lizmat> and do it with more than one key

[11:06] <lizmat> %hash<please delete all of these keys>:delete($really)

[11:07] *** sqirrel__ joined
[11:07] <lizmat> would only delete if $really were true

[11:07] <azawawi> im working with proc::async to drive the perl6-debug-m process to step in

[11:07] <azawawi> in farabi6, so far it is working well

[11:07] <lizmat> cool, azawawi++

[11:07] <azawawi> now im trying to keep promises from ending :)

[11:07] <lizmat> ?

[11:07] <azawawi> A cool comment # Add a user friendly message to signify the demise of a promise :)

[11:10] *** kjs_ left
[11:10] *** ori joined
[11:11] *** kjs_ joined
[11:12] <dalek> rakudo/nom: a0304c3 | (Elizabeth Mattijsen)++ | src/core/ (2 files):

[11:12] <dalek> rakudo/nom: Deprecate $handle.slurp -> slurp-rest

[11:12] <dalek> rakudo/nom: 

[11:12] <dalek> rakudo/nom: As discussed on IRC between

[11:12] <dalek> rakudo/nom: 

[11:12] <dalek> rakudo/nom:   http://irclog.perlgeek.de/perl6/2014-11-06#i_9621920

[11:12] <dalek> rakudo/nom: 

[11:12] <dalek> rakudo/nom: and

[11:12] <dalek> rakudo/nom: 

[11:12] <dalek> rakudo/nom:   http://irclog.perlgeek.de/perl6/2014-11-07#i_9622383

[11:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a0304c30be

[11:15] <lizmat> azawawi: when you break a promise, you can state why that is

[11:16] <lizmat> are you saying that somewhere in the bowels of Proc::Async promises are broken with less then user friendly messages?

[11:16] <azawawi> no at all

[11:16] <lizmat> or are you looking something more qmail like, like "Sorry it didn't work out" ?  :-)

[11:17] <azawawi> im working on https://github.com/azawawi/farabi6/issues/16

[11:17] <azawawi> so far step in till end is working as promised :)

[11:17] <azawawi> with async output

[11:17] <azawawi> im building rakudo on feather to demo it :)

[11:17] <lizmat> again, cool!

[11:19] <azawawi> im parsing jnthn++ debugger output and rendering it on the web... until we can figure out a good json format

[11:20] <azawawi> if you think of it... the core debugger should not use ANSI output... it should work as an API for other UIs

[11:20] *** Mso150 left
[11:20] <azawawi> maybe exchanging JSON packets over a TCP port or something

[11:20] <azawawi> so that stdout and stderr is pristine

[11:21] * azawawi installs Panda and friends :)

[11:25] *** tinyblak left
[11:26] *** tinyblak joined
[11:26] <azawawi> http://feather.perl6.nl:3030/    # open debug_01.pl and click step in... It is not much but it is a beginning

[11:29] * lizmat looks

[11:30] <azawawi> step in takes time like 1 sec

[11:30] <azawawi> because of it is polled on a 1 sec timer

[11:30] <azawawi> because of = because

[11:30] <azawawi> do not try prompt... because it will stall ofcourse

[11:31] <lizmat> how do I open debug_01.pl?

[11:32] <azawawi> alt-o and then type debug_01.pl

[11:33] <azawawi> you can write simple stdout programs and they will work :)

[11:33] <lizmat> did that, and then step in: I only get "debugging finished"

[11:33] <azawawi> older session

[11:33] <lizmat> well, I'm about to go out the door for the rest of the day: see some of London  :-)

[11:33] <azawawi> just refresh :)

[11:34] <azawawi> have fun

[11:35] *** zakharyas left
[11:39] <lizmat> away&

[11:39] *** espadrine_ joined
[11:39] *** lizmat left
[11:51] *** kurahaupo joined
[11:53] *** woolfy left
[11:55] *** tinyblak left
[11:55] *** tinyblak joined
[11:57] *** [Sno] left
[11:57] *** [Sno]_ joined
[12:01] *** azawawi left
[12:07] *** brrt joined
[12:07] <brrt> wtf: https://fosdem.org/2015/schedule/event/get_ready_to_party/

[12:08] <brrt> TimToady++ for guts

[12:13] *** kjs_ left
[12:14] *** zakharyas joined
[12:15] *** kjs_ joined
[12:17] *** kaare_ left
[12:18] <espadrine_> note the first comment of https://news.ycombinator.com/item?id=8571837

[12:18] <brrt> oh.. so it's not really happening?

[12:19] <brrt> TimToady is not speaking as FOSDEM?

[12:19] <espadrine_> yes he is

[12:21] <brrt> that's good enough for me :-)

[12:24] *** tinyblak left
[12:26] *** sqirrel__ left
[12:26] *** tinyblak joined
[12:31] *** brrt left
[12:33] *** ghostlines joined
[12:41] *** kaleem left
[12:45] *** denis_boyun left
[12:46] *** mirjam joined
[12:46] *** mirjam is now known as rurban

[12:50] *** ClarusCogitatio left
[12:52] *** ClarusCogitatio joined
[12:55] *** anaeem1 left
[12:55] *** tinyblak left
[12:56] *** denis_boyun_ joined
[12:56] *** tinyblak joined
[13:12] *** guru joined
[13:12] *** guru is now known as ajr_

[13:16] *** pmurias joined
[13:18] <pmurias> vendethiel: the only sensible way I can see Perl 6 being handled by an IDE is reusing the compiler for parsing

[13:19] <pmurias> vendethiel: and one the code is parsed by a real compiler and the BEGIN blocks are executed the metamodel stuff should be that harmfull

[13:25] *** tinyblak left
[13:25] *** tinyblak joined
[13:42] *** neilb joined
[13:49] *** tinyblak left
[13:51] *** haroldwu left
[13:52] *** zakharyas left
[13:52] *** jfredett joined
[13:52] *** haroldwu joined
[13:53] *** zakharyas joined
[13:56] *** prevost joined
[13:58] *** prevost left
[14:00] *** FROGGS left
[14:01] *** prevost joined
[14:07] *** tinyblak joined
[14:07] *** azawawi joined
[14:11] *** zakharyas left
[14:11] *** leont joined
[14:12] *** abraxxa left
[14:15] <azawawi> hmmm

[14:16] <azawawi> is the step out functionality in perl6-debug not implemented or has a bug?

[14:16] *** zakharyas joined
[14:16] <azawawi> it is telling me that "im not in a routine" even though im in a sub :)

[14:16] *** araujo joined
[14:16] *** ajr_ left
[14:17] <azawawi> m: sub sum($a, $b) { my $sum =  $a + $b; return $sum; }; say sum($a, $b);

[14:17] <camelia> rakudo-moar 315ec6: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/4w02g7DXEG␤Variable '$a' is not declared␤at /tmp/4w02g7DXEG:1␤------> [32mm =  $a + $b; return $sum; }; say sum($a[33m⏏[31m, $b);[0m␤    expecting any of:␤        postfix␤»

[14:17] <azawawi> m: sub sum($a, $b) { my $sum =  $a + $b; return $sum; }; say sum(1,2);

[14:17] <camelia> rakudo-moar 315ec6: OUTPUT«3␤»

[14:19] *** raiph joined
[14:20] <azawawi> is it a known issue that perl6-debug-m doesnt step out?

[14:21] <timotimo> i wrote that "we should nominate random outsiders to be spokespersons" many hours before i actually saw the fosdem talk abstract

[14:21] <azawawi> timotimo: hi there

[14:21] <timotimo> greetings

[14:22] <timotimo> http://t.h8.lv/add_core_op_extops_and_dataflow.svg ← have you seen this? i'm quite proud of it :)

[14:22] <azawawi> timotimo: i just implemented step out functionality in farabi6... it is buggy but shows you async stdout/stderr...

[14:22] <azawawi> timotimo: debug step in... that is

[14:22] <timotimo> that's very good!

[14:22] *** guru joined
[14:23] *** guru is now known as Guest17108

[14:23] <azawawi> and an answer to your previous question, markText basically marks it for ever... so if you move it... not a big deal... it is basically a CSS class..

[14:23] *** Guest17108 left
[14:23] <timotimo> thought so. that's good!

[14:23] <azawawi> im implementing http://codemirror.net/demo/lint.html atm

[14:24] <azawawi> perl6 async linting (syntax checking)

[14:24] <timotimo> oooooh

[14:25] <gtodd> nice

[14:26] *** ajr joined
[14:26] *** ajr is now known as Guest11789

[14:27] <gtodd>   it would be cool if something like that could work in the regular REPL :-D

[14:28] *** Guest11789 is now known as ajr_

[14:29] <gtodd> I'd like to have my REPL flashing red and green as I typed ... as long as it was an option heheh

[14:29] <timotimo> kind of like fish's prompt?

[14:29] <gtodd> oh yeah

[14:30] <gtodd> async perl6critic ....

[14:30] <gtodd> ... "you're not going to type that without a putting a ":" in front of it are you??"

[14:31] <azawawi> well that's doable... :)

[14:32] <gtodd> :-D

[14:32] <azawawi> gtodd: care to add an issue for it https://github.com/azawawi/farabi6/issues ? :)

[14:33] <gtodd> some yak shaving would be involved ... i.e. there is no perl6critic 

[14:33] <gtodd> or P6BP :-)

[14:33] *** fhelmberger left
[14:33] *** neilb_ joined
[14:34] *** fhelmberger joined
[14:34] <timotimo> "BP"?

[14:34] *** neilb left
[14:34] *** neilb_ is now known as neilb

[14:34] *** molaf joined
[14:35] <PerlJam> Best PRactices

[14:35] <timotimo> oh

[14:35] <timotimo> of course

[14:35] <gtodd> Damien's Perl Best Practices

[14:36] <timotimo> PEP6 :P

[14:38] *** fhelmberger left
[14:42] <moritz> gtodd: there's https://github.com/moritz/perl6-wtop

[14:42] *** Woodi joined
[14:51] *** JimmyZ joined
[15:01] <gtodd> moritz: ++ :-)

[15:05] *** thou joined
[15:06] *** funjon left
[15:07] <alexghacker> lizmat++ for slurp-rest, tyvm

[15:12] *** rindolf left
[15:13] *** brrt joined
[15:14] *** ajr_ left
[15:15] *** guru joined
[15:15] *** guru is now known as Guest80951

[15:15] *** Guest80951 is now known as ajr_

[15:16] *** kaleem joined
[15:25] <gtodd> moritz: I think raiph had some ideas for either a bot or a filter that would automatically create interesting and documented .gists or examples  from this channel ... just by adding tags or .tell-ing the bot to grab a section of text (or maybe marking it for later in the logs?) maybe that would work perl6-WTOP  :-)

[15:27] <gtodd> moritz: WTOP #1 create a WTOP and advertise it on IRC ... (this WTOP will self destruct once the N of WTOP > $somenumber) 

[15:27] *** rindolf joined
[15:28] <brrt> i should know better than to read hn comment threads too

[15:29] <moritz> gtodd: huh? we have a WTOP

[15:32] <moritz> https://github.com/moritz/perl6-wtop/blob/master/practices.pod

[15:32] <moritz> two, in fact :-)

[15:33] <gtodd> :-D

[15:34] <gtodd> I guess the WTO part is important

[15:34] <timotimo> brrt: they don't call it "hater news" for no reason.

[15:34] <timotimo> brrt: have you seen my svgs? :)

[15:34] <brrt> i have

[15:34] <brrt> very nice

[15:35] <brrt> timotimo++

[15:35] <timotimo> :3

[15:35] <timotimo> something i should add?

[15:35] <timotimo> i was trying to figure out a way to annotate register versions with facts flags

[15:35] <timotimo> without cluttering things too much

[15:35] <timotimo> and i'm not entirely sure what PHI nodes should look like

[15:36] *** drdanmaku joined
[15:36] <brrt> ehm, phi nodes should look like they are the joining of other registers, which is what they are

[15:36] <brrt> i thought they were clear enough

[15:37] <[Coke]> moar non jit failed a few more tests today: 32089 total.

[15:38] <[Coke]> parrot, still clean.

[15:38] <brrt> that looks a bit bad

[15:40] <colomon> how many tests are there total/

[15:40] <colomon> ?

[15:40] <timotimo> i know what phi nodes do

[15:40] <timotimo> i just don't want them to cause a gigantic swarm of arrows between blocks

[15:40] *** ClarusCogitatio left
[15:40] *** telex left
[15:40] *** prevost left
[15:42] <brrt> i don't think you have a way arround that

[15:42] <brrt> is what i mean

[15:42] *** telex joined
[15:42] <brrt> i'd expect them to look the way they do :-)

[15:43] *** ClarusCogitatio joined
[15:43] <timotimo> i'd kind of like to have a row of registers at the bottom of each block and one at the top that would then "gather" the arrows for the registers up

[15:43] *** Ovid joined
[15:43] <Ovid> oi

[15:43] <timotimo> but the problem with that is that i don't get to see the phi nodes until later

[15:43] <timotimo> hello ovid!

[15:43] <Ovid> Hm, where did “oi” come from?

[15:43] <Ovid> Hello, timotimo.

[15:43] *** Ovid is now known as Guest79038

[15:44] *** Guest79038 is now known as Ovidius

[15:44] *** FROGGS[mobile] joined
[15:44] *** Ovidius is now known as curtispoe

[15:44] *** tinyblak left
[15:45] *** tinyblak joined
[15:45] <hoelzro> maybe shortened from ahoj?

[15:45] <[Coke]> Hey, greybeard.

[15:45] <moritz> m: say 'Ovid'.lc.comb(/<[aeiou]/).join

[15:45] <camelia> rakudo-moar 315ec6: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/vOW1YGG4W1␤Unable to parse expression in metachar:sym<assert>; couldn't find final '>' ␤at /tmp/vOW1YGG4W1:1␤------> [32msay 'Ovid'.lc.comb(/<[aeiou][33m⏏[31m/).join[0m␤    expecting a…»

[15:45] <moritz> m: say 'Ovid'.lc.comb(/<[aeiou]</).join

[15:45] <camelia> rakudo-moar 315ec6: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/ntL730wMkW␤Unable to parse expression in metachar:sym<assert>; couldn't find final '>' ␤at /tmp/ntL730wMkW:1␤------> [32msay 'Ovid'.lc.comb(/<[aeiou][33m⏏[31m</).join[0m␤    expecting …»

[15:46] <moritz> m: say 'Ovid'.lc.comb(/<[aeiou]>/).join

[15:46] <camelia> rakudo-moar 315ec6: OUTPUT«oi␤»

[15:46] *** azawawi left
[15:46] <moritz> being able to type sure helps a lot :-)

[15:46] <brrt> hmm i see timotimo

[15:46] <arnsholt> curtispoe: Wikipedia claims "oi" is h-dropped "hoi", which dates at leastd back to Middle English apparently =)

[15:46] *** JimmyZ left
[15:47] <arnsholt> Potentially related to "hei" in Scandinavian, I guess

[15:47] <arnsholt> And English "hi", for that matter

[15:47] <dalek> perl6-roast-data: 43ad309 | coke++ | / (4 files):

[15:47] <dalek> perl6-roast-data: today (automated commit)

[15:47] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/43ad309fe5

[15:47] <curtispoe> Heh.

[15:50] <brrt> and dutch 'hoi'

[15:51] <[Coke]> curtispoe, what brings you to #perl6? Anything we can help with?

[15:51] *** lucas_ joined
[15:51] <lucas_> hello

[15:51] <lucas_> is perlcabal down?

[15:51] <moritz> lucas_: nope

[15:51] <curtispoe> I was just curious what people thought about the FOSDEM annoucement. I had known about it, but I thought it was being kept under wraps.

[15:52] <lucas_> moritz: strange...

[15:52] <lucas_> must be a local problem here

[15:53] <[Coke]> what FOSDEM announcement?

[15:53] <moritz> lucas_: http://www.isup.me/perlcabal.org

[15:54] <curtispoe> This has been making the rounds on Facebook, Ycombinator, and Reddit: https://fosdem.org/2015/schedule/event/get_ready_to_party/

[15:54] <[Coke]> Huh. someone actually said that?

[15:54] <curtispoe> Well, it has Larry’s name on it :)

[15:54] <[Coke]> I note that it's not attributed.

[15:54] <[Coke]> he's listed as a speaker there.

[15:54] <brrt> i'm excited for one :-)

[15:55] <curtispoe> I’ve never spoken at a conference where the description of my talk wasn’t written by me or approved by me.

[15:55] *** tinyblak left
[15:55] <[Coke]> It's not like we had a cabal meeting and discussed it. looks to me like whoever wrote that announcement took some liberties.

[15:55] *** tinyblak joined
[15:56] <timotimo> curtispoe: i only saw someone quote the text (not who it was from) on irc and jokingly said "we should nominate a random person as spokesperson" and people linked to that part of the irc logs, too %)

[15:56] <[Coke]> ok, so it looks like larry took some liberties. seems like a reasonable guess, though.

[15:57] <[Coke]> curtispoe: it'll go faster if you help, though .grab a shovel willya?

[15:57] <brrt> :-)

[15:57] <curtispoe> Veure will go faster if you help. Can you grab a shovel? :)

[15:58] <curtispoe> Believe me, if I had the time, I would dearly, dearly love to do more to help Perl 6 besides writing blog entries.

[15:59] <colomon> curtispoe: I hear you.  :)

[15:59] <curtispoe> (And for those who didn’t get the “Veure” reference: I’m writing a ctext-based MMORPG in Perl http://blogs.perl.org/mt/mt-search.fcgi?blog_id=11&tag=veure&limit=20)

[15:59] *** treehug88 joined
[15:59] <brrt> nice

[15:59] *** robert2434 left
[16:00] * moritz has fun with rabbitmq

[16:00] <curtispoe> And it’s a business I’m pouring money into, not just a hobby. Hence, my inability to spend too much free time on other stuff.

[16:00] <timotimo> what is ctext?

[16:03] *** BenGoldberg joined
[16:07] <brrt> well, i'll be sure to be there @fosdem :-)

[16:09] <curtispoe> I should be too.

[16:09] *** denis_boyun_ left
[16:09] <curtispoe> Now I just need to figure the topic I’ll be speaking on.

[16:10] <brrt> how you've become a perl6 convert? :-P

[16:11] <brrt> regards

[16:11] *** brrt left
[16:21] <timotimo> FROGGS[mobile]: i see a fail for GTK::Simple, but the test stage is kind of not very helpful. it just says "failed tests: 1, 3"; maybe panda could be made to re-run the tests with --verbose when they fail and report the result of that?

[16:22] <timotimo> FROGGS[mobile]: and maybe we could have a different grade for "this thing has no tests at all" rather than just failing

[16:23] *** leont left
[16:25] *** tinyblak left
[16:26] *** tinyblak joined
[16:35] *** prevost joined
[16:37] <colomon> timotimo: agreed on "this thing has no tests", though up until recently I had a module that had tests but no actual module!  ;)

[16:37] *** kjs_ left
[16:38] *** tinyblak_ joined
[16:38] <timotimo> hah

[16:39] <colomon> ABC module is failing tests, but only when compiled.  :\

[16:41] *** tinyblak left
[16:41] <colomon> looks like it might be a Rakudo bug?

[16:41] <colomon> line is my $match = ABC::Grammar.parse($test-case, :rule<element>, :actions(ABC::Actions.new));

[16:41] <colomon> error is 

[16:42] <colomon> Could not find symbol '&Actions'

[16:42] <colomon>   in method <anon> at src/gen/m-CORE.setting:13707

[16:42] <colomon>   in any find_method_fallback at src/gen/m-Metamodel.nqp:2725

[16:42] <colomon>   in any find_method at src/gen/m-Metamodel.nqp:988

[16:42] <colomon>   in block <unit> at t/07-stringify.t:35

[16:42] <timotimo> oh, that is not good

[16:42] <colomon> but I've done "use ABC::Actions", which defines the class ABC::Actions

[16:42] <timotimo> hm. how do we debug something like that?

[16:42] <colomon> well, based on the smoke logs it looks like it started three days ago

[16:43] <colomon> that ought to help narrow down what rakudo commit introduced the bug

[16:43] <timotimo> sure, that's good

[16:43] <timotimo> hm, i wonder if you could make emmentaler also report to cpandatesters?

[16:44] <colomon> probably?

[16:45] <timotimo> dunno if emmentaler would accept just changing the panda branch to "report" or what it's called

[16:45] <timotimo> (and setting that environment variable)

[16:47] <colomon> I'll try to remember to give it a try sometime soon.  :)

[16:47] <timotimo> cool, froggs would probably like that :)

[16:49] * colomon is having the kind of week where bugs accumulate rather than getting fixed.

[16:49] <colomon> okay, 2b6e9e75cf272934acf42bd046705c515a6e345f is good

[16:51] *** Alina-malina left
[16:51] *** Alina-malina joined
[16:54] *** liztormato joined
[16:55] *** tinyblak_ left
[16:55] <timotimo> i'm having the kind of week where motivation seem to fluctuate heavily from one moment to the next

[16:55] *** tinyblak joined
[16:55] <colomon> moar-d2e301e24ad7ed51484a16ed81db81df9f724e66 fails

[16:55] <liztormato> [Coke]: Fwiw, I'm pretty sure Larry wrote that description himself

[16:56] <timotimo> hey liz :)

[16:56] <[Coke]> I wish I could get a week where I could hack on p6 stuff. I suspect I'd be a lot less stressed out. :)

[16:56] <[Coke]> liztormato: I'm kind of pissed that there wasn't a discussion about it.

[16:56] *** raiph left
[16:56] <[Coke]> ah well. c'est le larry.

[16:57] <liztormato> why?

[16:57] <dalek> perl6-bench/stress: 3e2d044 | (Geoffrey Broadwell)++ | minibenchmarks.pl:

[16:57] <dalek> perl6-bench/stress: Fix scaling parameters for divide-and-conquer test

[16:57] <dalek> perl6-bench/stress: review: https://github.com/japhb/perl6-bench/commit/3e2d044b27

[16:57] <dalek> perl6-bench/stress: fa5cc93 | (Geoffrey Broadwell)++ | / (2 files):

[16:57] <dalek> perl6-bench/stress: Allow better testing of flappy compilers by specifying max failures in a single SCALE before stopping that test for that compiler

[16:57] <dalek> perl6-bench/stress: review: https://github.com/japhb/perl6-bench/commit/fa5cc93791

[16:57] <dalek> perl6-bench/stress: a876e9a | (Geoffrey Broadwell)++ | / (2 files):

[16:57] <dalek> perl6-bench/stress: Support timeouts in timeall and bench

[16:57] <dalek> perl6-bench/stress: review: https://github.com/japhb/perl6-bench/commit/a876e9a2bb

[16:57] <dalek> perl6-bench/stress: fba2e90 | (Geoffrey Broadwell)++ | README.md:

[16:57] <dalek> perl6-bench/stress: Update README.md: Mention quickstress, s/Capture::Tiny/IPC::Run/

[16:57] <dalek> perl6-bench/stress: review: https://github.com/japhb/perl6-bench/commit/fba2e90b7f

[16:57] <liztormato> People have been giving presentations about Perl 6 for years without community discussion

[16:58] *** tinyblak left
[16:59] <liztormato> So why can't Larry?

[16:59] *** tinyblak joined
[16:59] <[Coke]> liztormato: there is a difference between me giving a presentation about cool bits of perl6 or saying "look how much faster we are" and -larry- saying we're shipping by this date.

[17:00] *** Alina-malina left
[17:00] <timotimo> oh

[17:00] <japhb> Speaking of stress, the perl6-bench/stress branch could use a little cross-platform testing, because I had to change a rather finicky bit of platform independence from using Capture::Tiny to IPC::Run.

[17:01] <timotimo> no he isn't saying we'll be shipping by that date

[17:01] <[Coke]> so, two bits. 1) things larry say are going to have an impact outside of our echo chamber. (which they obviously did, see ovid's appearence today), and 2) talk about ship dates is something that we, as a community, should probably be careful of in general.

[17:01] <[Coke]> timotimo: squint, and pretend you're outside the echo chamber. I think you can read it that way.

[17:01] *** espadrine_ left
[17:01] <timotimo> irony of today: a script i had lying around called "gcd_bench" only spends a fraction of time actually calculating gdc and much, much, much, much more time doing a loop over two ranges X'd

[17:01] *** Alina-malina joined
[17:02] <timotimo> [Coke]: well, yeah, you could if you wanted to ... which is probably what most people outside the echo chamber do want

[17:02] <japhb> The commands to use are `bench stress` and `bench diagnose` after you have built your compilers.  rakudo-moar and rakudo-jvm should be testable.

[17:02] <timotimo> thank you, japhb, i'll try it out :)

[17:02] <japhb> html_plot output doesn't work yet, but all the other outputs should work.

[17:03] <timotimo> japhb: suggest how we should handle moar-jit?

[17:03] <timotimo> because moar is now jit by default :\

[17:03] <timotimo> i used to have a rakudo-moar-jit, now it's gone from the compilers.json because it was just a local patch i had

[17:03] <japhb> Erm, hmmm.  This comes back to your age old request for custom build options.

[17:03] <japhb> *sigh*

[17:04] *** prevost left
[17:04] <timotimo> kind of :\

[17:04] <liztormato> [Coke]: I remember working with Perl 5.0. It was not without bugs. Some people I know are saying we should ship perl 6.0 as it is now. 

[17:04] <timotimo> well, it's even more complicated now, because the flag "--enable-jit" is deprecated now (softly) and --disable-jit would upset a configure.pl from way back when

[17:04] <japhb> OK, I recognize that as a key next feature.  However, I want to get the stress branch merged before I deal with that feature (in a new branch, most likely, unless I can find a not-invasive solution I'm happy with.)

[17:05] *** neilb left
[17:05] <japhb> Frankly I want stress merged as a "Welcome Home!" to jnthn.  ;-)

[17:06] *** raiph joined
[17:06] <timotimo> hm. don't prioritise that too high

[17:06] <timotimo> there's probably more interesting stuff

[17:07] <japhb> Note that the html output has very simple rollover text now, I'd like to extend that.  And --verbose on output matters; it determines whether all 10 runs at a given scale are summarized in one icon, or all shown separately.  Personally, I prefer the latter right now.

[17:07] <timotimo> OK

[17:08] <japhb> Bus stop &

[17:09] <Tekk_> why does nobody here know how shells work? bus stop & will most certainly not get it to wait for you :)

[17:09] *** anaeem1 joined
[17:09] <peteretep> What does the shell say?

[17:09] <Tekk_> [1] 2353

[17:09] <Tekk_> in my case :P

[17:09] <timotimo> oh wow

[17:10] <timotimo> perl6-bench is *very* unhappy

[17:10] <Tekk_> and then "command not found: Bus"

[17:10] <timotimo> pages upon pages upon pages upon pages of use of uninitialized value @parts of type Any in string context  in sub MAKE-CLEAN-PARTS at /home/timo/perl6/rakudo/../install/languages/perl6/runtime/CORE.setting.moarvm:1

[17:10] <Tekk_> that's not good

[17:10] <liztormato> Yuck

[17:10] <liztormato> And probably my fault

[17:11] <timotimo> as well as use of uninitialized value @parts of type Any in string context  in block  at ./bench:256

[17:11] <timotimo> that's in "EXTRACT CHECKOUTS" after "nom already cloned"

[17:11] <colomon> timotimo: okay, commit d2e301e24ad7ed51484a16ed81db81df9f724e66 is the one that breaks ABC

[17:12] <timotimo> ah, bumps the nqp/moar revision

[17:12] <liztormato> I can't do anything about it until much later tody

[17:12] <timotimo> liztormato: s'okay

[17:13] *** ghostlines left
[17:13] <timotimo> AFK

[17:14] *** tinyblak_ joined
[17:14] *** ajr_ left
[17:14] *** guru joined
[17:15] *** lucas_ left
[17:15] *** guru is now known as Guest88225

[17:15] *** Guest88225 is now known as ajr_

[17:16] *** anaeem1 left
[17:16] <liztormato> Aflk for LPW pre-event social

[17:16] *** liztormato left
[17:18] *** tinyblak left
[17:19] *** ori left
[17:20] *** virtualsue left
[17:23] <japhb> Tekk_: You would prefer '& # Bus stop' instead?  :-)

[17:24] <japhb> timotimo: OK, I've been running benchmarks with a build from a few days ago.  Try running with 2014.10?

[17:25] <ugator> I have installation problems for rakudo under ubuntu (14.04) when I'm not in the rakudo dir, only perl6-p works, perl6-m(==perl6) and perl6-j only work in the dir where they're installed (thx for any help ) I did everything according to the manual (at least I triedt wice^^)

[17:25] *** daxim left
[17:26] <japhb> ugator: Which Rakudo release?

[17:27] <ugator> I downloaded it Nov 6th

[17:27] *** rurban left
[17:28] <japhb> ugator: But are you using Rakudo Star, or a tarball of Rakudo itself, or building using rakudobrew, or building from a raw git clone ...?

[17:28] <masak> howdy, #perl6

[17:28] <japhb> o/ masak

[17:28] *** kaleem left
[17:29] <ugator> :D not sure^^, I did:  git clone git://github.com/rakudo/rakudo.git

[17:29] <TimToady> masak: \o and do you know offhand which rt is about the loop vs $_ problem?

[17:29] <japhb> OK, then you should be building straight from head AKA 'nom', ugator

[17:29] * TimToady didn't fudge for.t because he didn't know that...

[17:30] <japhb> What configure/make commands did you use, ugator?

[17:30] <ugator> perl Configure.pl --gen-parrot --gen-moar --gen-nqp --backends=moar,parrot,jvm

[17:30] <ugator> make; make install;

[17:31] <ugator> make test suceeds

[17:31] *** neilb joined
[17:31] <masak> TimToady: hold on -- looking.

[17:31] <japhb> OK, and when you ran them from another directory, did you use a relative or absolute path?

[17:31] *** zakharyas left
[17:32] <TimToady> it's also possible it's a different bug

[17:32] <ugator> for the $PATH-variable I used absolute paths

[17:33] <japhb> Oh, you ran them as just 'perl6-j' for instance, and trusted $PATH

[17:34] <ugator> it does find the commands

[17:34] <ugator> I just tested to directly use abs/rel paths, doesnt work either

[17:35] *** panchiniak joined
[17:35] <japhb> ugator: error message?

[17:35] <masak> TimToady: not finding anything concrete. which loop vs $_ problem are we talking about?

[17:36] <ugator> for perl6-m: unhandled exception: failed to load library 'dynext/libperl6_ops_moar.so'

[17:36] <TimToady> last test in S04-statement-modifiers/for.t

[17:36] <TimToady> but someone was mentioning a problem earlier that seemed like it was related, so I thought maybe it had an RT

[17:36] <TimToady> but maybe not

[17:37] <ugator> for perl6-j: Fehler: Hauptklasse perl6 konnte nicht gefunden oder geladen werden, translated: Mainclass perl6 couldn't be found

[17:37] <japhb> Well that's odd

[17:37] <ugator> so I just stick to perl6-p for now^^

[17:37] * masak looks

[17:38] *** kjs_ joined
[17:38] <masak> TimToady: think it's this one: https://rt.perl.org/Ticket/Display.html?id=100746

[17:39] <japhb> ugator: what happens if you start from a fresh git clone and *only* build perl6-m?

[17:40] <ugator> ok, I will try that

[17:40] * japhb has separate clones for each backend as a side effect of his build scripts, so wouldn't notice if we broke multi-backend builds.

[17:46] <ugator> no it's not about the mult-backend, same error

[17:47] *** pecastro left
[17:50] *** azawawi joined
[17:52] <alexghacker> if I were to write a Bencode module for perl6, should I just name it Bencode or should I put into a namespace?  e.g. Encoding::Bencode

[17:52] *** ajr_ left
[17:52] <BenGoldberg> Besides being something with a wondeful name, what's Bencode?

[17:53] * BenGoldberg grins.

[17:53] <alexghacker> it's a binary data interchange format first used by BitTorrent

[17:54] <BenGoldberg> Putting it in a namespace is a good idea.  Whether Encoding:: or Data:: or something else is best, though, I'm not entirely sure.

[17:54] <alexghacker> I'm looking into it because it's one of the few data interchange formats I've seen where there's only one valid encoding for any given value (which can be arbitrarily complex)

[17:54] <dalek> roast: eee416a | TimToady++ | S04-statement-modifiers/for.t:

[17:54] <dalek> roast: fudge "{$_}" for ...

[17:54] <dalek> roast: review: https://github.com/perl6/roast/commit/eee416ad8b

[17:54] <alexghacker> that's a useful property for computing cryptographic hashes of content

[17:55] *** kurahaupo left
[17:57] <BenGoldberg> Unless the main purpose of your module is reading from or writing to streams, Encoding *probably* isn't the right place.

[17:57] *** drdanmaku left
[17:58] *** kurahaupo joined
[17:58] <azawawi> http://pbrd.co/10F1nbM # Perl 6 debugging + Error checking in farabi6 :)

[17:59] <alexghacker> I'm probably going to be exchanging JSON5 messages, then bencoding them only for (the optional) validation of the signatures.

[18:01] <BenGoldberg> I would guess Data::Bencoding is likely the best module name.

[18:01] <alexghacker> BenGoldberg++ thanks.  I'll get started using that.

[18:02] <alexghacker> There should be plenty of time before I've finished for others to chime in.  :)

[18:02] *** anaeem1_ joined
[18:02] <BenGoldberg> Err, Data::Bencode :)

[18:03] <alexghacker> hmm... I could have sworn that was what you said in the first place...

[18:04] <azawawi> .tell tadzik it would be nice to have bin/script => bin/script.bat in win32 environment. This is one of the things that prevents the inclusion of farabi6 in Task::Star

[18:04] <yoleaux> azawawi: I'll pass your message to tadzik.

[18:05] *** regreg joined
[18:05] <regreg> what is faster moarvm or parrot?

[18:06] <dalek> roast: bdf4af4 | TimToady++ | S04-statement-modifiers/given.t:

[18:06] <dalek> roast: test scoping of "{$_}" given ...

[18:06] <dalek> roast: review: https://github.com/perl6/roast/commit/bdf4af4eab

[18:06] <BenGoldberg> It depends.

[18:06] *** anaeem1_ left
[18:07] <azawawi> BenGoldberg: on?

[18:07] <BenGoldberg> Hmm, actually, iirc, moarvm is faster, but parrot is more feature-complete.  But I could be wrong.

[18:07] <azawawi> i think the real question is moarvm vs jvm backend

[18:08] <azawawi> jvm startup is slower but on the long run jvm is gonna be faster for server apps

[18:08] <regreg> i see..

[18:08] <regreg> is the jvm support mature enough to use in a small commercial project?

[18:08] <BenGoldberg> Plus, you could, theoretically, run perl6 in a user's web browser, using jvm.

[18:09] <Tekk_> BenGoldberg: not so much practically since oracle has disabled jvm plugins by default now

[18:09] <regreg> right

[18:09] <Tekk_> for the security problems

[18:09] *** FROGGS joined
[18:09] <azawawi> you mean java applets

[18:09] <Tekk_> mhm

[18:09] <BenGoldberg> azawawi, yes.

[18:09] <TimToady> moar has fewer fudges than parrot; jvm has the most

[18:10] <Tekk_> not surprising

[18:10] <Tekk_> I'm honestly stunned that a perl can run on jvm in the first place

[18:10] <BenGoldberg> . o O (Chocolate fudges?)

[18:10] <Tekk_> BenGoldberg: it's an english expression, not sure where it comes from

[18:10] <arnsholt> regreg: Potentially viable. Probably depends a lot on what exactly you want to do, though

[18:10] <Tekk_> little coverups

[18:10] <Tekk_> like you get a 78 on a test and say you got an 80

[18:10] <regreg> arnsholt a 2d game

[18:10] <Tekk_> you're fudging your grade

[18:11] <Tekk_> an american expression in english rather :)

[18:11] * azawawi benchmarks farabi6 on jvm... rebuilding rakudo

[18:12] <FROGGS> o/

[18:14] <FROGGS> timotimo: yes, rerunning failed test verbosely would be cool :o)

[18:14] <colomon> +1

[18:16] *** anaeem1_ joined
[18:18] *** thefence joined
[18:18] * FROGGS is happy

[18:19] <arnsholt> regreg: Hmm. Maybe. You'll probably have to hack on the JVM interop libraries to get full interaction with Java libraries, but it's not a priori impossible I think

[18:20] *** molaf left
[18:21] *** anaeem1_ left
[18:23] <[Coke]> anyway, TimToady++ for lighting a fire under our collective butts.

[18:23] <azawawi> FROGGS: Perl 6  debugging now works in farabi6 along with syntax checker gutter hints http://pbrd.co/10F1nbM :)

[18:23] <FROGGS> ohh wow!

[18:23] <FROGGS> azawawi++

[18:24] *** grettis joined
[18:24] <arnsholt> Do we have a tool that takes a .moarvm and dumps the bytecode to something human-readable?

[18:24] <FROGGS> arnsholt: moar

[18:24] <FROGGS> moar --dump foo.moarvm

[18:24] <arnsholt> Yaay!

[18:24] <arnsholt> Cheers!

[18:24] <FROGGS> :D

[18:25] <azawawi> FROGGS: thanks

[18:25] <FROGGS> azawawi: thank you :D

[18:25] <azawawi> http://feather.perl6.nl:3030/   # alt-o and open debug-01.pl or debug-02.pl

[18:26] <azawawi> it is still buggy...

[18:26] <azawawi> but i noticed a strange thing today...

[18:26] <azawawi> step outside a routine seems not to work in perl6-debug-m

[18:27] <azawawi> the "so" command that is

[18:27] <FROGGS> what does it do? nothing?

[18:28] *** guru joined
[18:28] <azawawi> says it is not in routine lol when in a sub...

[18:28] *** guru is now known as Guest93398

[18:28] *** Guest93398 is now known as ajr_

[18:29] <azawawi> arnsholt: do you have some documentation for moarvm file format?

[18:30] <arnsholt> I know next to nothing about MoarVM internals, actually

[18:30] <arnsholt> But I'm the dump looks mostly like NQP op names (which makes sense, since the Moar ops are mostly the same as the NQP ops)

[18:30] <arnsholt> s/I'm//

[18:31] <[Coke]> see also #moarvm

[18:33] *** anaeem1_ joined
[18:33] *** kjs_ left
[18:34] *** gfldex joined
[18:35] *** raiph left
[18:36] <dalek> ecosystem: 9c3baf7 | tony-o++ | META.list:

[18:36] <dalek> ecosystem: Bench[mark] module

[18:36] <dalek> ecosystem: 

[18:36] <dalek> ecosystem: More similar to P5's Benchmark, includes cmpthese, timethese, timethis

[18:36] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/9c3baf7211

[18:37] *** panchiniak left
[18:39] *** kjs_ joined
[18:40] <pmurias> curtispoe: re the production date, a lot of the confusion is a troll misreading the talk summary and posting a mislabeled link

[18:44] <masak> public notice: if you announce a date when Perl 6 will be ready, that attracts trolls. thank you.

[18:45] <tony-o> so, February?  That's what TimToady was personally guaranteeing me yesterday ;)

[18:45] <TimToady> silly dilly, Christmas is not in February

[18:45] <tony-o> haha

[18:45] <pmurias> masak: the guy who posted in on reddit seems to be a dedicated Perl 6 hater

[18:46] <nine> Someone at the LPW tomorrow?

[18:46] <tony-o> trying to figure out how i could take a crack at Perl6::Tidy

[18:47] <tony-o> if i should use the grammar or ..

[18:47] <pmurias> Perl6::Tidy would be awesome

[18:47] <pmurias> tony-o: is there a alternative that isn't batshit crazy?

[18:47] *** kjs_ left
[18:48] <tony-o> i'm thinking no but i'm not very clear thinking today

[18:49] <raydiak> imo Christmas is whenever Perl 6 is ready regardless of what the calendar says :)

[18:50] *** [Sno] joined
[18:50] <pmurias> using the grammar is the way I thought about doing it

[18:51] <tony-o> i think it would be a waste to do it another way

[18:52] *** [Sno]_ left
[18:52] *** __t3e joined
[18:52] <TimToady> some great quotes about PR on: http://www.contentfac.com/damn-i-wish-id-said-that-50-of-our-favorite-pr-quotes/

[18:53] *** raiph joined
[18:53] <TimToady> “There is only one thing in the world worse than being talked about, and that is not being talked about." – Oscar Wilde

[18:54] <tony-o> i like the S H Simmons quote

[18:57] <masak> pmurias: oh. reddit. then disregard what I said.

[18:58] <curtispoe> pmurias: that’s some of the confusion, but there are other discussions which have seen beyond the mislabeliing.

[18:58] <curtispoe> For example: https://news.ycombinator.com/item?id=8571837

[18:58] *** azawawi left
[19:02] *** FROGGS[mobile] left
[19:03] *** Mso150 joined
[19:06] *** kjs_ joined
[19:11] <timotimo> i wonder what dreamweapon on HN refers to when saying that perl 6 adds "a lot of visual clutter"

[19:12] <TimToady> probably doesn't like hypers

[19:13] *** kjs_ left
[19:13] <TimToady> twigils are also arguably additional clutter

[19:13] <timotimo> and this kamaal person goes a long way to say "cool libraries and framework ideas from perl 5 are going to seep into perl 6" and completely fails to mention that perl 6 has inspired a bunch of changes to perl 5, too

[19:14] <timotimo> someone else says "Perl 6 is a modest advance not a revolution", which ... well ... what do i know.

[19:15] *** tinyblak_ left
[19:16] *** tinyblak joined
[19:17] *** tinyblak left
[19:18] *** __t3e left
[19:18] *** Mso150 left
[19:18] *** tinyblak joined
[19:19] *** Mso150 joined
[19:19] <timotimo> d'oh, someone said "One of the strongest parts of perl, the regular expressions, have received further improvements", someone else retorts with "the regular expressions [...] have been copied to Nimrod (now called "Nim") -- even with native C performance and native Perl syntax"

[19:19] <timotimo> that is missing the point by so many kilometers it's not even funny

[19:22] <TimToady> well, not everyone appreciates Martha Stewart either, "the woman who does everything better than you".  :)

[19:23] *** vanila joined
[19:23] <vanila> hi guys

[19:23] <vanila> perl6 this christmas?

[19:24] <curtispoe> Well, I was specifically referring to the title not being a misunderstanding. There’s still going to be lots and lots of confusion about the language.

[19:24] <curtispoe> And that 

[19:24] <curtispoe> And that 

[19:24] <curtispoe> And that “modest advance” comment through me off guard too.

[19:24] <curtispoe> s/through/threw/ (and I don’t know where my enter key is)

[19:25] <TimToady> vanila: no, we're still just getting ready to get ready to party this christmas

[19:25] <timotimo> that still sounds like "party this christmas" :P

[19:25] <TimToady> vanila: no, this christmas we're still just getting ready to get ready to party

[19:26] <TimToady> next year we're getting ready to party :)

[19:26] *** bartolin joined
[19:27] <bartolin> Hi, #perl6

[19:27] <TimToady> o/

[19:28] <[Coke]> hio

[19:30] <curtispoe> Is there any discussion of work on DBI for Perl 6?

[19:32] <raydiak> I think irrational attitudes are a normal reaction to p6 being ahead of its time, or at least very powerful...makes huge waves relative to the size of its user base...therefore, many more people talking about it than actually experiencing it

[19:32] <raydiak> and from the perspective of knowing about it without having the experience of having used it, parts of it scared the heck out of me too tbh :)

[19:33] *** [Sno] left
[19:33] <timotimo> raydiak: you're laying it on a bit thick there ;)

[19:34] <timotimo> computers have been able to do what perl6 does for a very long time. it's just you had to use assembler or lisp :P

[19:34] <raydiak> heh

[19:34] <raydiak> hardly equivalent from the perspective of a human being (like programmers, for instance)

[19:36] <ajr_> Many of the discussions on the Internet appear to have more to do with the participants' internal states than anything objective about the topic of the discussion.

[19:37] <raydiak> I certainly don't mean it'll make your computer magic and make breakfast for you, it'll still only do what they do...but how hard is it to accomplish a given task, for a given individual? that's one of the things I mean when I say "power" wrt a tool

[19:37] <ajr_> People who are severely wound up internally project the feelings onto some external cause, whether it be political, religious, or technical religion, (computer language, &c.)

[19:38] <arnsholt> curtispoe: There's a DBIish

[19:38] *** kjs_ joined
[19:38] <raydiak> ajr_: agree 100%, that was kinda my initial point...people are saying things that stretch reason abotu p6 b/c of their feelings about it

[19:38] <curtispoe> arnsholt: I’ve seen it, but real database support is needed.

[19:38] <arnsholt> The DBI namespace is currently unoccipied, as I believe Tim Bunce has been working on an API modelled on JDBC

[19:39] <ajr_> raydiak - your definition of "power" is very good.

[19:39] *** thefence left
[19:39] <curtispoe> Night all!

[19:39] *** curtispoe left
[19:40] <raydiak> thanks ajr_ :) I like to play armchair philosopher once in a while

[19:41] <timotimo> raydiak: can i interest you in improving the html app our profiler emits?

[19:43] <raydiak> timotimo: sure, I'd be happy to lend a hand

[19:43] <timotimo> cool

[19:43] <raydiak> what does it need? what is this thing I'm even talking about?

[19:43] <timotimo> have you seen the data format that moarvm spits out?

[19:43] <raydiak> don't think so

[19:43] <timotimo> http://t.h8.lv/profile-1412458985.39989.html - here's an old-ish one

[19:43] <timotimo> m: say DateTime.new(1412458985.39989)

[19:43] <camelia> rakudo-moar 315ec6: OUTPUT«Default constructor for 'DateTime' only takes named arguments␤  in method new at src/gen/m-CORE.setting:926␤  in block <unit> at /tmp/11nQLwMqSU:1␤␤»

[19:44] <timotimo> hum.

[19:44] *** spider-mario joined
[19:44] <timotimo> that may be a bad example, it seems to be pretty big

[19:44] <timotimo> just run anything with perl6 --profile; should best be quite quick

[19:44] <raydiak> oh wait, yes...I tried this thing on pray

[19:44] <timotimo> good

[19:45] <timotimo> one of the thing i find most sorely missing is getting a list of callees "globally" for a given routine in the routines tab

[19:45] <timotimo> i don't know if the data format we emit can easily offer that, though

[19:45] <timotimo> and if you could figure something out that'd make the app more responsive even if the amount of data is overwhelming, that would be crazy cool

[19:46] <raydiak> no kidding, glad I'm not running my laptop on battery :P

[19:46] <timotimo> also, the exclusive times of routines quite often has a very long tail; it'd be cool if the routines list had some flags at the side saying things like "from here, the rest of exclusive times add up to 30%"/"20%"/"10%" OSLT

[19:47] <timotimo> like, 1/4 of the way down the percentage numbers reach 0%

[19:47] *** tinyblak left
[19:48] <timotimo> oh and something purely cosmetic: when you view the details of any given allocation thingie, the progress bars quite often extend outside the "pop-up" that comes up

[19:48] <timotimo> i'll be AFK for a bit again now :)

[19:48] <timotimo> ooh

[19:48] <timotimo> but before i go, i shall document something else:

[19:48] *** tinyblak joined
[19:49] <timotimo> IMO if there's a single call to a routine or something, the red bar basically says "oh no! look at me! all of my executions were not spesh'd and not jitted!", which is kind of uninteresting since it's only called once

[19:49] *** neilb left
[19:49] <timotimo> so i'd love for the red bar to be somewhat desaturated or in a less alarming color in that case

[19:50] <TimToady> maybe you should make it pink

[19:50] *** regreg left
[19:50] <masak> encouraging comment: https://news.ycombinator.com/item?id=8573337

[19:51] <[Coke]> tim bunce mentioned something years ago; I'm not sure any work on DBI is currently being done.

[19:51] <timotimo> he talked to us about that idea during APW, too

[19:51] <timotimo> o/

[19:52] *** BenGoldberg left
[19:53] <raydiak> timotimo: cool, I've made a list from your suggestions, will dig in some time in the next several days \o

[19:53] <gtodd> timotimo: the colours could come from perl6.org  website ... there's a chance for the profiler's HTML to become trend setting ... like Bootstrap  :-)

[19:53] <gtodd> except !Bootstrap ;-) 

[19:54] <[Coke]> timotimo: still, haven't seen any code.

[19:55] *** Sqirrel joined
[19:56] <masak> I can't believe how much constructive discussion is going on in that HN thread. that's very encouraging.

[19:57] <TimToady> most people want to believe

[19:58] <vendethiel> o/ again

[20:00] *** tinyblak_ joined
[20:01] <masak> ok, then let's please make this one count.

[20:01] <FROGGS> hi vendethiel 

[20:01] <vendethiel> masak: I can guess which one... But which one?

[20:01] <masak> vendethiel: 2015 as the Year of Perl 6.

[20:01] *** BenGoldberg joined
[20:01] * vendethiel guessed :)

[20:02] <rjbs> Where's the HN thread?  And, more importantly and first, do I want to read it? :)

[20:02] <rjbs> Oh, found link.

[20:02] <masak> maybe we need to think a little bit more like a business, for once. a business with paying customers.

[20:02] <masak> even though we're not.

[20:02] <vendethiel> .oO( what does carlosdelrey wants us to think )

[20:03] <vendethiel> hahahaha

[20:03] <masak> life is to short to spend on carlosdelrey.

[20:03] <masak> too*

[20:04] <vendethiel> .oO( Mu is too short )

[20:04] *** tinyblak left
[20:04] *** SevenWolf joined
[20:05] *** denis_boyun_ joined
[20:05] *** denis_boyun_ left
[20:05] <masak> m: subset Too::Short of Mu; say Mu ~~ Too::Short

[20:05] <camelia> rakudo-moar 315ec6: OUTPUT«True␤»

[20:05] <vendethiel> masak: I've been considering perl6 production ready for a few months :P

[20:06] <masak> vendethiel: I've been using it in production for years. get off my lawn. :P

[20:06] <vanila>  I wanna part y w ith you all 

[20:06] <vendethiel> masak: yera hipster, harry :P

[20:06] <masak> vanila: \o/

[20:06] <vendethiel> vanila: for me, the party's already over, but I'm fine with opening antoher bottle :)

[20:06] <vanila> :D

[20:06] <masak> vanila: you're just in time! apparently, we are just about to release Perl 6! \o/

[20:07] <vendethiel> good thing I was told to keep quiet about this announcement :P

[20:07] <tony-o> im already migrating off of perl6 for production to perl7

[20:07] <vendethiel> oh wow, that looks cool tony-o. keep us in!

[20:07] <FROGGS> does somebody use NativeCall on JVM?

[20:08] <vendethiel> FROGGS: I've used the java-binding feature, but that's not nativecall :P

[20:08] <masak> tony-o: I know for a fact that Perl 7 does not exist yet, because I still haven't designed it together with sorear in our generation ark.

[20:08] <FROGGS> vendethiel: that does not help here :o)

[20:08] * vendethiel knows

[20:08] <tony-o> tony-o: production dreams :-)

[20:08] <tony-o> oops

[20:08] <tony-o> masak: ^^

[20:09] <FROGGS> vendethiel: I want to know if my java installation is to blame or if something recentish in rakudo/nqp breaks it

[20:09] <vendethiel> masak: so, what would you think about having a MATCH in the language :P

[20:09] <vendethiel> Story is -- We have a great match feature, called MMD. But, why don't we have it available *outside* of subs?

[20:10] <masak> vendethiel: I like where that thought is going. but would need more detauls.

[20:10] <masak> details*

[20:10] <vendethiel> 1) variable binding 2) variable comparing (mmd doesn't have that) 3) multiple combinations

[20:10] <vendethiel> masak: natefaubion's sparkler (sweet.js macros for pattern matching) show a good idea of how this looks in practice

[20:10] <vendethiel> (that is, having both MMD and a "match" keyword working the same underneath)

[20:12] <masak> ok.

[20:12] <masak> sounds quite interesting.

[20:12] <masak> and occasionally useful.

[20:12] * vendethiel thinks sweet.js macros can be very good examples of what good can be done with macros "like that" :-)

[20:12] <masak> if you're also telling me that someone could use this to implement Prolog-like unification in Perl 6, then I'm sold :)

[20:13] <vendethiel> well, most definitely, yes

[20:13] <vendethiel> but you need backtracking.

[20:13] <masak> for unification?

[20:13] * vendethiel ... so you need continuations :P

[20:13] <vendethiel> for prolog-like unification at least, yes, you need backtracking

[20:13] <TimToady> or lazy lists of closures

[20:14] *** Ben_Goldberg joined
[20:14] *** BenGoldberg left
[20:14] *** Ben_Goldberg is now known as BenGoldberg

[20:14] <TimToady> (that's how STD does it internally)

[20:15] <vendethiel> well, you can always find "another way", that's for sure. I'd say it "doesn't look as good"

[20:15] <vendethiel> (moslty because it's more transparent)

[20:15] <TimToady> transparency cuts both ways :)

[20:15] *** darutoko left
[20:16] <TimToady> but yes, it fits more with the FP idea of sweeping all the state off into the part of the implementation you can't easily see

[20:16] *** Mso150 left
[20:16] *** kjs_ left
[20:18] <TimToady> Abstraction is a good thing, except when it isn't.

[20:18] <vendethiel> But it's not really an "abstraction"

[20:20] *** tinyblak_ left
[20:20] <cosimo_> hn thread is definitely interesting

[20:20] <cosimo_> :)

[20:20] <cosimo_> hello, all :)

[20:20] <vendethiel> helo!

[20:20] *** tinyblak joined
[20:21] *** Mso150 joined
[20:21] <masak> m: print "$_o " for <hell cosim>; say "!"

[20:21] <camelia> rakudo-moar 315ec6: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/DLrObmZRIF␤Variable '$_o' is not declared␤at /tmp/DLrObmZRIF:1␤------> [32mprint "$_o[33m⏏[31m " for <hell cosim>; say "!"[0m␤    expecting any of:␤        postfix␤»

[20:22] <masak> m: print "{$_}o " for <hell cosim>; say "!"

[20:22] <cosimo_> i missed all the fun, what happened that triggered this great announcement? :-)

[20:22] <camelia> rakudo-moar 315ec6: OUTPUT«o o !␤»

[20:22] <vendethiel> tss, tss :)

[20:22] <masak> m: print "$($_)o " for <hell cosim>; say "!"

[20:22] <camelia> rakudo-moar 315ec6: OUTPUT«hello cosimo !␤»

[20:22] * masak grumbles

[20:22] * vendethiel never knows when to use $() vs {}

[20:23] <cosimo_> masak: hi Carl

[20:23] <TimToady> vendethiel: the first one is supposed to work, but doesn't yet

[20:23] <vendethiel> ohhh. my bad :-)

[20:23] *** psch joined
[20:23] <psch> hi #perl6 

[20:24] <masak> hi psch!

[20:24] <FROGGS> hi psch 

[20:24] <TimToady> everyone's dropping in today for some reason :)

[20:24] <psch> masak, FROGGS o/

[20:24] <FROGGS> *g*

[20:24] <cosimo_> TimToady: for some definition of "some"

[20:24] <FROGGS> TimToady++ # bringing us together

[20:25] <TimToady> quick, barricade the doors

[20:25] <FROGGS> |\o\

[20:25] <cosimo_> in my defense, I've always been here, just very quiet :)

[20:25] *** denis_boyun_ joined
[20:26] <raydiak> wait you're not making us drink the kool-aid yet are you?

[20:26] <FROGGS> cosimo_: I've got work for you :P  https://github.com/cosimo/perl6-digest-md5/pull/7

[20:27] <FROGGS> cosimo_: hopefully it will turn green then: http://testers.perl6.org/dist/Digest::MD5

[20:27] <tony-o> can i include Perl6::Grammar somehow or do I need to copy it and actually make it a module, i'm assuming that .msi and future precompiled versions will be available and that the src stuff isn't going to be available everywhere

[20:28] <vendethiel> "one of us, one of us" or something

[20:28] <FROGGS> tony-o: the problem with the Perl6::Grammar in rakudo is that it is an nqp module

[20:29] <psch> $~MAIN should be Perl6::Grammar i think? i.e. getting to Perl6::Grammar is still NYI 

[20:29] <psch> tony-o: ^

[20:29] <FROGGS> correct, we have a language barrier here

[20:30] <tony-o> i see, it will eventually be there or should i just port the grammar?

[20:30] <psch> tony-o: well, if youre porting it you might as well stuff it into $~MAIN... :)

[20:31] <psch> although that might be wonky wrt keeping them synced

[20:31] <FROGGS> it will be available at some point, but that won't happen in the next 6+ months I guess

[20:31] <TimToady> for now I'd just port it; we originally were hoping to become fully bootstrapped, but it's easier to port nqp than full Perl 6, so it's a useful breakage to have the current Perl 6 in nqp

[20:31] <cosimo_> FROGGS: thanks for bringing it up, and sorry for being very sloppy. Had very little time for spare time programming lately

[20:31] <FROGGS> cosimo_: np

[20:31] <tony-o> okay 

[20:31] <cosimo_> there is a perl6 testers? OMG

[20:31] <FROGGS> cosimo_: but I'd also take a commit bit in exchange :o)

[20:32] <tony-o> psch: not sure what $~MAIN is 

[20:32] <FROGGS> cosimo_: since a few days, aye

[20:33] <TimToady> it's short for %*LANG<MAIN> in the parser, which contains the current top-level language at any point

[20:33] <TimToady> whenever you derive a new language during the parse, that goes into %*LANG for the remainder of the current lexical scope

[20:35] <psch> http://perlcabal.org/syn/S02.html#Slangs some more context

[20:37] <tony-o> ahh gotcha

[20:37] <alexghacker> Does anyone know if specifying the normal form in Str.encode not yet fully implemented?

[20:38] <alexghacker> I'm getting the same buffer contents no matter what values I send in for nf

[20:39] <FROGGS> alexghacker: :nf was specced this year IIRC and is not yet implemented, aye

[20:39] <alexghacker> FROGGS++ thanks

[20:40] <PerlJam> alexghacker: also, https://github.com/rakudo/rakudo/blob/nom/src/core/Str.pm#L1035

[20:40] <PerlJam> S02:Slangs  # test

[20:40] *** kjs_ joined
[20:41] <FROGGS> S02/Slangs

[20:41] <FROGGS> S02#Slangs

[20:41] <FROGGS> :/

[20:41] <PerlJam> if someone would merge my last PR to the bot,  S02:Slangs would work

[20:42] <FROGGS> I have no rights to do so :o(

[20:43] <cosimo_> FROGGS: got you commit bit on p6-digest-md5, and moritz too

[20:43] <FROGGS> cosimo_: thank you! :D

[20:45] <FROGGS> hah, moritz++ almost made the same PR

[20:47] <alexghacker> 2nd question: should I expect «$b = "abc".encode; say [~] $b.bytes, ':', $b» to consume all available memory and CPU (hint: it does for me)

[20:47] *** tinyblak left
[20:48] <FROGGS> alexghacker: no, it should not

[20:48] *** tinyblak joined
[20:48] <FROGGS> alexghacker: though that happens right now when you concat a buf to something else

[20:49] <alexghacker> ah, so known issue at least

[20:49] <FROGGS> concating bufs works, you just cannot mix...

[20:49] <FROGGS> yes, had no time yet to fix or even analyze it :o(

[20:50] *** kjs_ left
[20:50] <FROGGS> right now I am bisecting a problem with NativeCall on the JVM... which is also very important, because many modules depend on NativeCall

[20:50] *** kurahaupo left
[20:53] <arnsholt> FROGGS: What kind of problem?

[20:53] <tony-o> FROGGS: i can test nativecall on jvm now that i'm home

[20:53] <FROGGS> nqp::nativecallbuild explodes

[20:54] <arnsholt> Oh. That's no good

[20:54] <arnsholt> What kind of explosion?

[20:54] <FROGGS> because the first arg is not recognized as a NativeCallInstance and explodes when trying to unbox it

[20:54] <arnsholt> Segfault or JVM?

[20:54] <alexghacker> FROGGS++ don't worry too much, there are other ways I can accomplish the same thing.  This is https://rt.perl.org/Public/Bug/Display.html?id=122600 , yes?

[20:54] <FROGGS> no, just an exception

[20:54] <FROGGS> alexghacker: yes

[20:54] *** Mso150 left
[20:54] <arnsholt> Hmm. Strange

[20:54] <alexghacker> I'll just document my work-around as being tied to that ticket

[20:55] <FROGGS> arnsholt: the problem was introduced between Aug 1st and Sep 5th or so

[20:56] <FROGGS> alexghacker: I bet it is not even hard to fix... it might be something silly

[20:56] <arnsholt> Right. Potentially, something dealing with P6Opaque

[20:56] <alexghacker> «($b.bytes, ':', $b).join('') works just as well for now

[20:57] *** Mso150 joined
[20:57] <arnsholt> IIRC there're some shenanigans that deal with how the NativeCallInstance is inlined into the P6Opaque

[20:57] * alexghacker sighs about his dangling »

[20:57] <FROGGS> arnsholt: I still keep on bisecting... because I dunno where to start looking

[20:57] <arnsholt> Sounds like a good plan

[20:58] <arnsholt> Incidentally, this is why I'd like to find a way to move NAtiveCall into the Rakudo NQP or repo. It's way too tied to the internals

[20:58] <FROGGS> yeah, just takes its time

[20:59] <FROGGS> ohh yes, you get my +1 for that

[20:59] <PerlJam> arnsholt++

[20:59] <PerlJam> (er, +1 from me too :)

[21:00] <arnsholt> Main problem ATM, I think, is that the NativeCall test suite is a bit annoying and not very portable

[21:01] <vendethiel> *g*

[21:01] <FROGGS> but the idea was that it should be portable, no? :o)

[21:04] <arnsholt> The code is (mostly) good

[21:04] <arnsholt> But compiling the C part of the tests is a bit finnicky

[21:05] *** Mso150_d joined
[21:05] *** Mso150 left
[21:08] <colomon> +1 to NativeCall in core

[21:10] *** kurahaupo joined
[21:11] *** SevenWolf left
[21:15] <vendethiel> oh, carlos. http://www.reddit.com/r/programming/comments/2llk74/larry_wall_retracts_perl6_release_date_says/ <3

[21:17] *** tinyblak left
[21:17] *** skarn left
[21:19] *** tinyblak joined
[21:20] *** kjs_ joined
[21:23] *** Ven joined
[21:24] <masak> carlosdelray must be Perl 6's most reluctant bug fan, ever.

[21:24] <masak> big*

[21:25] <FROGGS> I still wonder if he is/was also educated_poo

[21:25] *** espadrine_ joined
[21:25] <masak> it's like he simply cannot stop paying attention -- but he's fighting it at every step.

[21:25] <masak> frankly, I don't care what kind of poo he is.

[21:25] <FROGGS> hehe

[21:26] *** ajr_ left
[21:27] <masak> I'm just wishing him well, and thanking him for all the abject bile he spills over Perl 6, hopefully making people think a bit for themselves.

[21:27] *** leont joined
[21:29] <vendethiel> :-)

[21:29] *** [Sno] joined
[21:29] *** guru joined
[21:29] <masak> and now I'm hoping we can talk about something that matters instead.

[21:30] *** guru is now known as Guest20275

[21:30] *** Guest20275 is now known as ajr_

[21:31] <vendethiel> masak: bijections are just injections that happen to be interjections as well!

[21:31] <vendethiel> sur

[21:33] <FROGGS> masak: have you seen that btw? https://github.com/FROGGS/p6-Slang-Tuxic

[21:33] <FROGGS> masak: in case you want to mess with the Perl6::Grammar and inject/replace stuff

[21:38] <masak> vendethiel: that is true, but in no way noteworthy. :)

[21:38] <masak> FROGGS: oooh!

[21:38] <vendethiel> masak: oh, I thought it could matter :P

[21:38] <FROGGS> hmmm, chdir is broken on windows... chdir 'C:\panda' fails while chdir 'C:/panda' is working

[21:39] <masak> FROGGS++ # for Tuxifying Perl 6 in a slang!

[21:39] <PerlJam> vendethiel: it might make a nice schoolhouse rock type song  ;)

[21:39] <vendethiel> could it :P

[21:40] *** kjs_ left
[21:42] <masak> FROGGS: any plans for making it also work for methods?

[21:45] <FROGGS> masak: yes, will look into that tomorrow (evening)

[21:45] <masak> ++FROGGS

[21:45] <FROGGS> that's the bug I am facing:

[21:45] <FROGGS> C:\panda>perl6 -e "say MAKE-ABSOLUTE-PATH('C:\panda',$*CWD)"

[21:45] <FROGGS> C:\panda\panda

[21:46] <psch> m: say MAKE-ABSOLUTE-PATH(%*ENV<HOME>, $*CWD)

[21:46] <camelia> rakudo-moar 315ec6: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/fCqIM0ICj7␤Undeclared name:␤    MAKE-ABSOLUTE-PATH used at line 1␤␤»

[21:46] *** Mso150_d left
[21:47] *** Diederich-away joined
[21:47] *** Diederich-away is now known as Diederich

[21:47] *** pmurias left
[21:47] *** Mso150_d joined
[21:47] *** tinyblak left
[21:47] <FROGGS> psch: camelia here is from october 22nd

[21:48] <psch> FROGGS: yeah, i ran it locally and it looks fine on linux

[21:48] *** tinyblak joined
[21:49] <FROGGS> yes, because it checks for forward slash only

[21:49] *** rindolf left
[21:52] *** Mso150_d_y joined
[21:52] *** Mso150_d left
[21:56] *** skarn joined
[21:57] <moritz> ok, manually triggering a rakudo rebuild on camelia

[21:58] <FROGGS> moritz++

[21:59] <moritz> now I wonder why the cron jobs don't work :(

[21:59] *** Mso150_d_y left
[22:02] <alexghacker> is there a way to make reduction operators hyper?  e.g. to individually sum up lists inside of a list?  I tried «[+] << $list-of-lists» and it's clear that the parser and I are on completely different pages.

[22:03] <psch> m: say [[1, 2], [3, 4]]>>.map(&[+])

[22:03] <camelia> rakudo-moar 315ec6: OUTPUT«3 7␤»

[22:03] <psch> alexghacker: if you know your dimension that's it

[22:04] <alexghacker> psch++ I'll accept that

[22:04] *** raiph left
[22:09] <hoelzro> https://github.com/github/linguist/issues/1682#issuecomment-62165770

[22:09] <hoelzro> "We are actually moving away from pygments and using TextMate/SublimeText/Atom syntax bundles instead"

[22:09] <hoelzro> ='(

[22:10] *** telex left
[22:12] <FROGGS> :o(

[22:12] *** telex joined
[22:13] *** mirjam joined
[22:14] <[Coke]> hoelzro: that sucks. :|

[22:14] <hoelzro> yeah, I know!

[22:15] <hoelzro> oh well, I might just make a textmate "port" of my highlighter

[22:15] <hoelzro> tbf, it might do a better job than pygments did

[22:15] <FROGGS> hoelzro: please tell me if you need any help then

[22:15] <hoelzro> FROGGS: are you a TM/ST/Atom user?

[22:16] *** Ven left
[22:16] <FROGGS> hoelzro: no

[22:16] <hoelzro> oh, just pitching in then =)

[22:16] <hoelzro> thanks

[22:16] <hoelzro> I'll let you know

[22:16] <hoelzro> I built up a little pile of tuits for perl6/syntax

[22:16] <hoelzro> so I think I might be spending them tonight/tomorrow

[22:16] <FROGGS> arnsholt: funnily, now after bisecting for hours, I remember the workaround >.<

[22:17] <FROGGS> ohh, cool :o)

[22:17] *** tinyblak left
[22:18] <FROGGS> arnsholt: it is even still open in my browser https://gist.github.com/FROGGS/0d4b5c771c7d9eb4f5b6

[22:18] *** bjz left
[22:19] *** tinyblak joined
[22:19] <ugator>  diff perl6 ./install/bin/perl6 in rakudo gives me different lib paths. Why is the libpath for the perl6 in the main dir just "." and not the absolute path? (like in ./install/bin/perl6) 

[22:20] <alexghacker> psch, I'm not sure that actually does the reduce properly

[22:20] <alexghacker> m: say [[1,2,3],[4,5,6],[7,8,9]]>>.map(&[+])

[22:20] <camelia> rakudo-moar a0304c: OUTPUT«3 3 9 6 15 9␤»

[22:20] <alexghacker> I think that should give «6 15 24»

[22:21] <psch> alexghacker: right, apparently i generalized wrongly.  &[+] is still 2-ary

[22:22] <psch> m: say [[1, 2, 3], [4, 5, 6], [7, 8, 9]]>>.map([+] *)

[22:22] <camelia> rakudo-moar a0304c: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \v: *%_)␤  in sub infix:<+> at src/gen/m-CORE.setting:4492␤  in sub  at src/gen/m-CORE.setting:19556␤  in block <unit> at /tmp/Pf4LTSobKq:1␤␤»

[22:22] <psch> m: say [[1, 2, 3], [4, 5, 6], [7, 8, 9]].map([+] *)

[22:22] <camelia> rakudo-moar a0304c: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \v: *%_)␤  in sub infix:<+> at src/gen/m-CORE.setting:4492␤  in sub  at src/gen/m-CORE.setting:19556␤  in block <unit> at /tmp/AKCCteSMW9:1␤␤»

[22:22] <psch> m: say [[1, 2, 3], [4, 5, 6], [7, 8, 9]].map({ [+] @^a }) # this works

[22:22] <camelia> rakudo-moar a0304c: OUTPUT«6 15 24␤»

[22:23] <psch> oooh

[22:23] <psch> m: say [[1, 2, 3], [4, 5, 6], [7, 8, 9]].map([+] ** ) # this too?

[22:23] <camelia> rakudo-moar a0304c: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \v: *%_)␤  in sub infix:<+> at src/gen/m-CORE.setting:4492␤  in sub  at src/gen/m-CORE.setting:19556␤  in block <unit> at /tmp/szkzcsbLdI:1␤␤»

[22:23] <psch> aw shucks

[22:23] <psch> Mouq++ didn't finish HyperWhatever :)

[22:23] <masak> heh, `[+] *` is one attempted use of WhateverCode I would not have come up with myself.

[22:24] <psch> masak: with ** it should work i think

[22:24] <FROGGS> ugator: the perl6 script in your build directory is just something is meant to work exactly in that dir, so . is enough

[22:24] <psch> but maybe i have a wrong model of HyperWhatever

[22:24] <ugator> so that one is not to be accessed from outside? ok,that wasnt clear^^

[22:25] <FROGGS> ugator: exactly

[22:25] <FROGGS> ugator: only the one in install/bin should be used from elsewhere

[22:28] *** ugator_ joined
[22:28] <psch> hm, actually i'm most likely wrong.  HyperWhatever stills builds a WhateverCode but does something flatten-y to its arguments..?

[22:30] <psch> m: say (** - 1)(1, 2, 3)

[22:30] <camelia> rakudo-moar a0304c: OUTPUT«0 1 2␤»

[22:31] <psch> m: say (** + *)(1, 2, 3)

[22:31] <camelia> rakudo-moar a0304c: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/UmMNA5h3hJ␤Multiple HyperWhatevers and Whatevers may not be used together␤at /tmp/UmMNA5h3hJ:1␤------> [32msay (** + *[33m⏏[31m)(1, 2, 3)[0m␤    expecting any of:␤        postfix␤»

[22:31] *** ugator left
[22:32] *** tinyblak left
[22:33] *** tinyblak joined
[22:33] *** kjs_ joined
[22:36] <dalek> rakudo/nom: a3d18ca | (Tobias Leich)++ | tools/build/Makefile- (3 files):

[22:36] <dalek> rakudo/nom: allow fudging of src/Perl6/Actions.nqp

[22:36] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a3d18ca8e6

[22:37] *** tinyblak left
[22:39] <psch> maybe i'm not wrong about HyperWhatever...

[22:39] <psch> m: say (**.[0])([1, 2], [3, 4])

[22:39] <camelia> rakudo-moar a0304c: OUTPUT«1 3␤»

[22:39] <masak> ...fudging of Actions.nqp...?

[22:40] <psch> it's too late to think about this, actually o/

[22:40] * psch goes to sleep

[22:40] <FROGGS> masak: for a single line workaround for the jvm

[22:40] *** psch left
[22:42] <masak> FROGGS: one that we expect to go away as soon as possible?

[22:42] <dalek> rakudo/nom: 393acf0 | (Tobias Leich)++ | src/Perl6/Actions.nqp:

[22:42] <dalek> rakudo/nom: unbreak NativeCall for the JVM

[22:42] <dalek> rakudo/nom: 

[22:42] <dalek> rakudo/nom: The call to nqp::buildnativecall fails because it does not recognize the first arg as

[22:42] <dalek> rakudo/nom: an NativeCallInstance. Doing the clone always like before e167669a498b91543144c7657e5cdb8d0cb40e65

[22:42] <dalek> rakudo/nom: makes it work, see also: https://gist.github.com/FROGGS/0d4b5c771c7d9eb4f5b6

[22:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/393acf095d

[22:43] <FROGGS> masak: as soon as jnthn or something like that

[22:44] <FROGGS> I don't like it either but it is now broken for about two months

[22:45] *** kurahaupo left
[22:46] *** spider-mario left
[22:49] *** kurahaupo joined
[22:50] *** kurahaupo left
[22:52] *** avuserow left
[22:55] *** kjs_ left
[22:59] *** anaeem1_ left
[23:06] *** FROGGS left
[23:08] * masak has a new least favorite SQLite error code: SQLITE_ERROR

[23:08] *** FROGGS joined
[23:11] <Diederich> masak: thanks for the notice, Re: https://news.ycombinator.com/item?id=8573337

[23:12] <masak> Diederich: well, thank you for your patience.

[23:12] <Diederich> hah!

[23:12] *** treehug88 left
[23:12] <Diederich> what makes you think I've been patient :)

[23:13] *** gfldex left
[23:13] <masak> :P

[23:13] <Diederich> mostly I feel bad that I haven't been able to take time to contribute to P6

[23:13] <Diederich> I've always been so blessed with the ability to do very creative and innovative work at work,

[23:13] <masak> no need to feel bad -- even writing stuff on HN is a contribution.

[23:14] <Diederich> that I have little 'creative energy' left after :)

[23:14] <masak> sometimes it's nice for some of us to see that there are people out there who care.

[23:14] <Diederich> I have been creating more P5 CPAN modules at home, and then using them extensively at work :)

[23:14] <masak> that's excellent.

[23:14] <Diederich> when I taught Perl,

[23:15] <Diederich> I actually had my students read and do a brief writeup of one of Larry's talks

[23:15] <Diederich> specifically, Perl, the first postmodern computer language...really changed my personal outlook

[23:15] *** panic____ joined
[23:15] <masak> :)

[23:15] <Diederich> so Perl has resonated with me more and more deeply over the years.

[23:16] <masak> I guess Perl 6 is post-post-modern...

[23:16] <Diederich> as I was getting ready to leave my last job, I learned Ruby and Python (again...for each) and ported some of my CPAN modules tothem

[23:16] <Diederich> assuming that there was No Way I was going to get another Perl job in 'The Valley'

[23:16] <Diederich> but here I am, once again, in a very heavy Perl shop.  go figure

[23:17] <Diederich> and we have a real need to run a 'scripting language' inside of our big Java apps, so in 2015, I plan on pushing Perl 6 into that role here

[23:17] <masak> woot

[23:17] <masak> all I can say is, please stay in touch

[23:17] <Diederich> while I have your attention, I was wondering if SystemV IPC was implemented/available in P6?

[23:17] *** panic____ left
[23:17] <masak> we're happy to ease that journey in any way we can.

[23:18] <masak> I know nothing about SystemV IPC, unfortunately.

[23:18] <Diederich> that's always been the basis for the systems I develop

[23:18] <Diederich> uh

[23:18] <Diederich> message queues

[23:18] <masak> I haven't *heard* anyone working on it, but that doesn't mean no-one has.

[23:18] <Diederich> well,

[23:18] <Diederich> it's C functions

[23:18] <Diederich> so as I understand it,

[23:18] <Diederich> one can call native C functions from Rakudo JVM n ow?

[23:19] <masak> yes.

[23:19] <Diederich> cool

[23:19] <Diederich> and Moar?

[23:19] <Diederich> I need to look into making those bindings then

[23:19] <vendethiel> you can :)

[23:20] <Diederich> specifically, https://metacpan.org/source/IPC::Msg

[23:20] <Diederich> more specifically, for example, https://metacpan.org/source/IPC::Msg#L97

[23:20] <Diederich> P5 has those 'bindings' natively

[23:21] <Diederich> http://linux.die.net/man/2/msgrcv

[23:21] *** adu joined
[23:21] <timotimo> o/

[23:21] <timotimo> wow, so much backlog tonight

[23:22] <Diederich> unrelated, I'm sure, to The Big Posting :)

[23:22] <vendethiel> *g*

[23:22] <vendethiel> or the thought-to-be one

[23:22] <TimToady> http://www.bmsi.com/java/posix/ might also be of some help

[23:22] <Diederich> indeed

[23:23] <Diederich> TimToady++ indeed, thank you

[23:26] *** Alina-malina left
[23:26] <jdv79> is that fosdem talk summary misleading or is xmas '15 really it?

[23:26] *** Alina-malina joined
[23:27] *** FROGGS left
[23:34] *** FROGGS joined
[23:35] <leont> Diederich: you're the first person I've ever heard use SysV message queues in production! :-o

[23:35] *** mirjam left
[23:35] <leont> POSIX message queues really are a nicer interface though

[23:37] *** xiaomiao left
[23:37] *** Gruber is now known as Grrrr

[23:37] <Diederich> leont: I have kept my eye on POSIX queues since 'the beginning'.  The big delta is thread safety, but I never ever write threaded code :)

[23:38] <Diederich> thank you

[23:39] *** xiaomiao joined
[23:40] *** FROGGS left
[23:41] <Tekk_> Diederich: imo it's better to use processes and ipc unless you're on windows

[23:41] <Tekk_> so the parallelism in most languages works fine for me :)

[23:42] <leont> The difference is bigger for semaphores and shared memory IMO, because those are kind of crazy in SysV.

[23:42] <timotimo> it's always super frustrating to read backlog and know the answer to some people's questions and they leave in the mean time >_<

[23:43] <Diederich> leont: definitely.

[23:43] <timotimo> m: say [[1, 2, 3], [4, 5, 6], [7, 8, 9]].map(&[[+]])

[23:43] <camelia> rakudo-moar a0304c: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/lw5aG29PvT␤Variable '&infix:<[+]>' is not declared␤at /tmp/lw5aG29PvT:1␤------> [32m 2, 3], [4, 5, 6], [7, 8, 9]].map(&[[+]][33m⏏[31m)[0m␤    expecting any of:␤        postfix␤»

[23:43] <timotimo> m: say [[+]] [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

[23:43] <camelia> rakudo-moar a0304c: OUTPUT«3␤»

[23:43] <timotimo> oops :3

[23:44] <timotimo> m: say [+]«[[1, 2, 3], [4, 5, 6], [7, 8, 9]]

[23:44] <camelia> rakudo-moar a0304c: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/TfhvWt3MQ6␤Unable to parse quote-words subscript; couldn't find right double-angle quote␤at /tmp/TfhvWt3MQ6:1␤------> [32may [+]«[[1, 2, 3], [4, 5, 6], [7, 8, 9]][33m⏏[31m<EOL>[0m␤   …»

[23:44] <timotimo> m: say Z[+] [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

[23:44] <camelia> rakudo-moar a0304c: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/lwtIXp5dnQ␤Preceding context expects a term, but found infix + instead␤at /tmp/lwtIXp5dnQ:1␤------> [32msay Z[+[33m⏏[31m] [[1, 2, 3], [4, 5, 6], [7, 8, 9]][0m␤»

[23:44] <timotimo> mhm

[23:44] <Diederich> leont: 'back in the day', I initially developed what would become IPC::Transit using shared memory and semaphores, but they had all kinds of platform specific problems.  message queues worked everywhere (in 'UNIX' land)

[23:45] <timotimo> alexghacker: the concatenation of bufs with strings is broken because Buf does the Stringy role *and* coercing it to Stringy just calls .Stringy on self

[23:45] <timotimo> so the Stringy method on a buf will call Stringy on self, which will call Stringy on self which will call Stringy on self et cetera ad finitum

[23:45] <Diederich> ouch

[23:46] <timotimo> i once tried to find a good fix to that. nobody tuned in to the discussion :(

[23:47] *** FROGGS joined
[23:48] <timotimo> FROGGS: can we get tooltip texts for the bars on perl6testers that tell not only which backend that is, but also how many passes/fails it has?

[23:50] <leont> Shared memory and semaphores can be really powerful (and fast), but it tricky to get right :-/

[23:51] <Diederich> leont: yup. but I was dealing with some serious bugs in the way semaphores worked on HPUX 9.x at the time :( sank the ship

[23:52] *** virtualsue joined
[23:54] <timotimo> Diederich: with NativeCall you can access Sys5 IPC

[23:54] *** woolfy joined
[23:54] <Diederich> timotimo: that's actually what I was thinking, but I haven't worked on it yet.

[23:55] <Diederich> timotimo: are there any good docs/examples with NativeCall available now?

[23:55] <dalek> roast: 1dae23b | TimToady++ | S02-lexical-conventions/comments.t:

[23:55] <dalek> roast: comments do NOT nest, but brackets do

[23:55] <dalek> roast: review: https://github.com/perl6/roast/commit/1dae23b19a

[23:55] <timotimo> should be interesting :)

[23:55] <timotimo> we have a few examples

[23:55] <timotimo> why don't we have something like "search for things that depend on X"?

[23:55] <timotimo> https://github.com/timo/cairo-p6/ - a not too bad binding to cairo with NativeCall

[23:56] *** FROGGS left
[23:56] <timotimo> https://github.com/perl6/gtk-simple/ - a mostly acceptable binding to GTK3 with NativeCall

[23:57] <Diederich> thanks so much

[23:58] *** lizmat joined
[23:58] <timotimo> you're so welcome :)

[23:58] <Diederich> and thank you all, once again!

[23:58] *** Diederich is now known as Diederich-away

[23:58] <timotimo> ( i'm just blatantly promoting my own work :P )

[23:59] *** FROGGS joined
[23:59] <masak> timotimo++

