[00:08] <colomon> when I run make t/spec/S03-operators/bag.t, I get 

[00:08] <colomon> Element shifted from empty list

[00:08] <colomon>   in method Str at src/gen/m-CORE.setting:13629

[00:08] *** jack_rabbit joined
[00:15] *** Mso150_o joined
[00:15] *** Mso150 left
[00:16] *** davido__ left
[00:17] *** davido__ joined
[00:19] <BenGoldberg> danaj_, he left.

[00:21] <BenGoldberg> m: $*IN.gist.say

[00:21] <camelia> rakudo-moar ec6011: OUTPUT«IO::Handle<->(opened, at line 0 / octet 0)␤»

[00:22] <BenGoldberg> m: chdir('/usr/share/dict/')

[00:22] <camelia> rakudo-moar ec6011: OUTPUT«Cannot modify an immutable IO::Path␤  in sub chdir at src/gen/m-CORE.setting:15680␤  in block <unit> at /tmp/IBQLjdgpoV:1␤␤»

[00:25] *** xenoterracide left
[00:25] *** pmurias left
[00:28] * colomon has a bad feeling that bag.t has been crashing and skipping 8 (or more) tests for a while.  :(

[00:31] <colomon> well, the good news is it's probably my fault...

[00:33] <colomon> m: my @d;  say ([⊍] @d).perl

[00:33] <camelia> rakudo-moar ec6011: OUTPUT«(Failure.new(exception => X::AdHoc.new(payload => "Element shifted from empty list"))=>1).Bag␤»

[00:34] <colomon> m: my @d;  say ([⊎] @d).perl

[00:34] <camelia> rakudo-moar ec6011: OUTPUT«().Bag␤»

[00:43] *** tinyblak joined
[00:46] *** xenoterracide joined
[00:50] *** slavik left
[00:50] *** tinyblak left
[00:51] *** tinyblak joined
[00:56] *** tinyblak left
[01:01] *** FROGGS_ joined
[01:01] <dalek> rakudo/nom: 0971a6e | (Solomon Foster)++ | src/core/set_operators.pm:

[01:01] <dalek> rakudo/nom: Add (+)'s check for empty input to (.).

[01:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0971a6e8d5

[01:04] * colomon has gotten away with his shameless behavior there.  :)

[01:04] *** slavik joined
[01:04] *** dayangkun joined
[01:04] *** dayangkun left
[01:08] *** xenoterracide left
[01:09] *** tinyblak joined
[01:10] <dalek> roast: 7994e6b | (Solomon Foster)++ | S03-operators/bag.t:

[01:10] <dalek> roast: Fix the plan, now that test 102 isn't crashing.

[01:10] <dalek> roast: review: https://github.com/perl6/roast/commit/7994e6b601

[01:11] <colomon> m: my @d;  say ([⊍] @d).perl

[01:11] <camelia> rakudo-moar ec6011: OUTPUT«(Failure.new(exception => X::AdHoc.new(payload => "Element shifted from empty list"))=>1).Bag␤»

[01:12] *** yeahnoob joined
[01:12] *** xenoterracide joined
[01:15] <colomon> ooo, Travis-CI liked my patch too.

[01:15] <colomon> and e-mailed me to let me know.  So polite!

[01:17] *** xenoterracide left
[01:27] *** mberends left
[01:27] *** mberends joined
[01:30] *** mberends_ joined
[01:30] *** mberends left
[01:41] *** telex left
[01:42] *** telex joined
[01:53] *** leont left
[01:55] *** Guest33542 is now known as ponbiki

[01:56] *** yeahnoob left
[01:58] <tony-o> m: class a { has $!t; submethod BUILD (:t(:$B<!>t)) { }; }; a.new(:t(5)); a.t.say;

[01:58] <camelia> rakudo-moar 0971a6: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/PS9h3oWjE8␤Unable to parse named parameter; couldnt find right parenthesis␤at /tmp/PS9h3oWjE8:1␤------> [32mass a { has $!t; submethod BUILD (:t(:$B[33m⏏[31m<!>t)) { }; }; a.new(:t(5)); a…»

[02:06] *** chenryn joined
[02:10] *** yeahnoob joined
[02:10] *** yeahnoob left
[02:10] *** noganex_ joined
[02:13] *** noganex left
[02:13] *** yeahnoob joined
[02:14] *** ruoso left
[02:14] *** yeahnoob left
[02:15] *** kurahaupo left
[02:15] *** masak_ is now known as masak

[02:17] <masak> 早安, #perl6

[02:17] <j4jackj> masak: We don't speak chinese.

[02:17] *** yeahnoob joined
[02:17] *** yeahnoob left
[02:18] *** Mso150_o left
[02:20] <masak> oh. mille pardoni. :)

[02:21] <masak> the first character is a sun rising over a horizon, signifying "morning".

[02:22] <masak> the second character is a woman under a roof, signifying "peace/tranquility/calm".

[02:22] *** yeahnoob joined
[02:22] <masak> hence "calm morning", hence "good morning".

[02:22] *** yeahnoob left
[02:24] *** kurahaupo joined
[02:24] *** yeahnoob joined
[02:25] <j4jackj> masak: are you in china or taiwan, or elsewhere?

[02:26] <masak> yes.

[02:26] <j4jackj> masak: stop being facetious

[02:27] <masak> though my exact location on the face of the planet is largely irrelevant, except insofar as it influences the periods of activity during the day.

[02:27] <masak> though even that can be offset by exotic sleep habits.

[02:28] <masak> j4jackj: I'm currently enjoying the end of a stay in the PRC. but I am originally from elsewhere.

[02:29] <j4jackj> I'd advise legging it.

[02:30] <masak> duly noted.

[02:30] <j4jackj> Why are you in Red China, anyway

[02:30] *** kurahaupo left
[02:30] <bonsaikitten> I'm in China because work :)

[02:31] <j4jackj> bonsaikitten: GTFO of that shit.

[02:31] <bonsaikitten> haven't gotten tired of Shanghai yet

[02:31] <bonsaikitten> j4jackj: hey, at least my taxes are below 100%

[02:31] <j4jackj> LEL

[02:31] <j4jackj> china is proof that communism doesn't work

[02:31] * masak makes a wild guess that j4jackj is from the US

[02:31] <j4jackj> (they've recently transitioned to a capitalist hybrid)

[02:31] <j4jackj> masak: no, UK but currently residing in Canada

[02:32] <j4jackj> at least the government themselves don't censor political sites

[02:36] <colomon> j4jackj: where in Canada?

[02:36] *** chenryn left
[02:36] <j4jackj> colomon: BC

[02:37] <colomon> cool

[02:37] * colomon 's annual Canadian vacation was in St John's this year.  :)

[02:37] *** tinyblak left
[02:39] *** chenryn joined
[02:40] <bonsaikitten> j4jackj: why are you so upset with China if you aren't even connected to it?

[02:40] <j4jackj> bonsaikitten: because censorship

[02:40] <j4jackj> and Draco

[02:40] <bonsaikitten> j4jackj: yeah, I mean, it's almost as bad as Germany

[02:40] <j4jackj> LOL

[02:40] <bonsaikitten> srsly

[02:41] <j4jackj> b-b-but china chops your head off

[02:41] <bonsaikitten> anyway, everywhere is shit, we just choose the subjectively least shitty for us

[02:41] <j4jackj> for things germany would put you in prison maybe 15 years

[02:41] <bonsaikitten> at least in China there's a legal basis for having my phone tapped

[02:41] <j4jackj> LOL

[02:41] <bonsaikitten> so that's quite agreeable

[02:41] <j4jackj> bonsaikitten: well gtfo of it then

[02:41] <bonsaikitten> j4jackj: why?

[02:41] <j4jackj> I don't want my phone tapped for ANY reason

[02:41] <j4jackj> ;-;

[02:42] <j4jackj> unless i've been naughty

[02:42] * masak didn't expect his use of Chinese characters would lead to a political discussion, and feels a bit guilty

[02:42] <j4jackj> and by naughty, I mean... big-style naughty

[02:42] <bonsaikitten> yeah, so I like having a legal basis for it instead of the illegal stuff in other countries

[02:42] <j4jackj> bonsaikitten: well you haven't been naughty

[02:42] <bonsaikitten> not saying tapping is good, but at least china has some laws that sometimes are followed

[02:42] <bonsaikitten> j4jackj: but I had my phone tapped in the past ... 

[02:42] <j4jackj> oh and btw the us' tapping has legal basis (PATRIOT)

[02:43] <bonsaikitten> yes, and no :)

[02:43] <j4jackj> kek

[02:43] <bonsaikitten> it's legal but unconstitutional

[02:43] <j4jackj> bonsaikitten: are you even allowed to leave chongland?

[02:43] <bonsaikitten> but who are you going to complain to :)

[02:43] <bonsaikitten> j4jackj: eh, I can leave anytime I want, foreigners are merely tolerated

[02:43] <bonsaikitten> everywhere the same, no country wants me for more than squeezing taxes out of me

[02:43] <j4jackj> if so, I'd recommend an itinerary of <your current city> -> San Fran -> Taiwan

[02:44] <j4jackj> even though Taiwan is still harsh on drugs, they're a lot more liberal

[02:44] <j4jackj> inb4 v&

[02:44] <bonsaikitten> I won't go over SF ... 

[02:44] <j4jackj> bonsaikitten: via Vancouver?

[02:44] *** Akagi201_ left
[02:44] <bonsaikitten> j4jackj: possibly, but I could fly to Taipei directly

[02:44] <j4jackj> o_O

[02:44] <bonsaikitten> and I prefer to not enter US airspace

[02:44] <j4jackj> they actually have flights from red to blue china?

[02:44] <bonsaikitten> of course

[02:44] <j4jackj> dafuq.

[02:44] <bonsaikitten> even to north korea and japan!

[02:45] <bonsaikitten> half the real estate in Shanghai is owned by Taiwanese

[02:45] <j4jackj> that's epically backwards

[02:45] *** JimmyZ joined
[02:45] <bonsaikitten> and no one cares. business is good, no time for hate

[02:45] <JimmyZ> masak: Here are some chinese people actually :)

[02:45] <j4jackj> I think just to be fair, Red China should hand over the entire south east of china (and tibet for that matter) to Taiwan

[02:45] <JimmyZ> masak: Not just me :P

[02:46] <j4jackj> zuz

[02:46] <bonsaikitten> j4jackj: and the US should return New Mexico and parts of Texas

[02:46] <j4jackj> i know tibet is southwest...

[02:46] <bonsaikitten> heh

[02:46] <j4jackj> bonsaikitten: hahaha

[02:46] <j4jackj> but still

[02:46] <JimmyZ> masak: 早上好

[02:46] <j4jackj> taiwan and prc should have a roughly equal split

[02:46] <masak> JimmyZ: 早上好 :)

[02:46] <j4jackj> just to even out the bullshit between them

[02:46] <bonsaikitten> I don't agree with chinese territorial policy, but they do have enough guns to make a very good case for it

[02:46] <j4jackj> LOL

[02:47] * masak .oO( NO LOL )

[02:47] <JimmyZ> masak: 所以什么时候离开？

[02:47] <j4jackj> masak: suriesly

[02:47] * masak .oO( NO PROJECT EULER )

[02:47] <j4jackj> Hmm, if <insert China's current head of state> and <insert blue China's current head of state> appoint me as their mediator, should I go to their talk?

[02:48] <bonsaikitten> j4jackj: do you like being accidentally suicided? ;)

[02:48] <j4jackj> lol

[02:48] <j4jackj> wtfux.

[02:48] <j4jackj> bonsaikitten: suriesly...

[02:48] <masak> JimmyZ: 下个星期三

[02:48] <j4jackj> that doesn't even make sense

[02:48] <j4jackj> suicide = killing of self

[02:49] <j4jackj> Huh, I'm thinking of setting up a political blog.

[02:49] <j4jackj> This one would be specifically about the two Chinas

[02:49] <JimmyZ> .oO(We should speak Esperanto to avoid discussion on politics of any country

[02:49] <btyler> on a more perl6-ish note, I saw this project (here, I think, in the backlog?): https://github.com/carbin/stomp -- commandline password manager in p6 using some p5 modules via Inline::Perl5. looks super neat, has anyone played with it?

[02:49] <j4jackj> Hahahahahaha

[02:49] <bonsaikitten> j4jackj: oh, there's some great police reports - man shoots himself with a long rifle in the back of the head, then pulls himself up on a rope. Obviously suicide!

[02:50] <JimmyZ> so let's speak Esperanto :/

[02:50] <bonsaikitten> it does make me wonder how the physics of that work :)

[02:50] <masak> JimmyZ: mi forlasos la Popolan Respublikon la sekvan merkredon.

[02:51] <j4jackj> masak: all greek to me

[02:51] <j4jackj> bonsaikitten: where were you born?

[02:52] <j4jackj> oh cripes

[02:52] <j4jackj> i think i got bonsai v&

[02:52] <bonsaikitten> j4jackj: vienna

[02:52] <j4jackj> bonsaikitten: oh hah

[02:52] <bonsaikitten> but that's completely unrelated to the rest anyway

[02:53] <JimmyZ> masak: Ĉinio Nacia Tago

[02:53] <j4jackj> all i can say is... china sucks mule balls

[02:53] <j4jackj> it might be a nice place, but you've got the remnants of failed communism and dictatorship everywhere

[02:55] *** JimmyZ_ joined
[02:58] *** JimmyZ left
[02:58] *** JimmyZ_ is now known as JimmyZ

[03:01] <tony-o> m: class a { has $!t; submethod BUILD (:t(:$B<!>t)) { }; }; a.new(:t(5)); a.t.say;

[03:01] <camelia> rakudo-moar 0971a6: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/wkeTTAEKAX␤Unable to parse named parameter; couldnt find right parenthesis␤at /tmp/wkeTTAEKAX:1␤------> [32mass a { has $!t; submethod BUILD (:t(:$B[33m⏏[31m<!>t)) { }; }; a.new(:t(5)); a…»

[03:02] <tony-o> should that work?  has it changed since: http://doc.perl6.org/language/objects  ?

[03:02] *** gfldex joined
[03:17] <bonsaikitten> j4jackj: says someone stuck in UK ;)

[03:17] <j4jackj> bonsaikitten: s/UK/Canada/

[03:18] <bonsaikitten> oh right, you managed to escape.

[03:18] * bonsaikitten hasn't got the best memory

[03:18] <bonsaikitten> if canada were further south I'd consider it ;)

[03:18] <j4jackj> lel

[03:18] <j4jackj> vancouver is p good

[03:18] <bonsaikitten> too far north. not enough sunlight

[03:19] <bonsaikitten> I want to move to a tropical location ...

[03:19] <j4jackj> i would say Hawaii, but you're against the US. Phillipines?

[03:20] <bonsaikitten> Carribean is quite nice, but hard to find work 

[03:22] * TimToady is currently in Bowling Green, KY

[03:22] <j4jackj> timotimo: nices

[03:22] <j4jackj> uh

[03:22] <j4jackj> TimToady: nices

[03:23] *** Mouq joined
[03:23] <Mouq> tony-o: That's a formatting error in the docs

[03:25] <dalek> doc: b3e9f26 | Mouq++ | lib/Language/objects.pod:

[03:25] <dalek> doc: Fix formatto in objects.pod

[03:25] <dalek> doc: review: https://github.com/perl6/doc/commit/b3e9f26735

[03:26] <Mouq> m: class a { has $!t; submethod BUILD (:t(:$!t)) { }; method tee { $!t } }; a.new(:t(5)); a.tee.say; #tony-o

[03:26] <camelia> rakudo-moar 0971a6: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/E01EibuZHP␤Name t used for more than one named parameter␤at /tmp/E01EibuZHP:1␤------> [32m has $!t; submethod BUILD (:t(:$!t)) { }[33m⏏[31m; method tee { $!t } }; a.new(:t(5)); a.[0m␤ …»

[03:26] <Mouq> m: class a { has $!t; submethod BUILD (:$!t) { }; method tee { $!t } }; a.new(:t(5)); a.tee.say; #tony-o

[03:26] <camelia> rakudo-moar 0971a6: OUTPUT«Cannot look up attributes in a type object␤  in method tee at /tmp/OGklxvORrc:1␤  in block <unit> at /tmp/OGklxvORrc:1␤␤»

[03:26] <Mouq> m: class a { has $!t; submethod BUILD (:$!t) { }; method tee { $!t } }; a.new(:t(5)); a.new.tee.say; #tony-o

[03:26] <camelia> rakudo-moar 0971a6: OUTPUT«(Any)␤»

[03:26] <Mouq> Huhrm

[03:28] <Mouq> m: class a { has $.t; submethod BUILD (:$!t)) { }; }; a.new(:t(5)).t.say;

[03:28] <camelia> rakudo-moar 0971a6: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/D18O_KHgit␤Missing block␤at /tmp/D18O_KHgit:1␤------> [32mlass a { has $.t; submethod BUILD (:$!t)[33m⏏[31m) { }; }; a.new(:t(5)).t.say;[0m␤    expecting any of:␤        scoped decla…»

[03:28] <Mouq> m: class a { has $.t; submethod BUILD (:$!t) { }; }; a.new(:t(5)).t.say;

[03:28] <camelia> rakudo-moar 0971a6: OUTPUT«5␤»

[03:28] <Mouq> *sigh* took long enough

[03:28] <dj_goku>  /win 11

[03:29] *** Mouq left
[03:30] <tony-o> they autobind now?

[03:30] *** chenryn left
[03:33] *** chenryn joined
[03:33] <dalek> doc: 36af6f7 | Mouq++ | lib/Language/objects.pod:

[03:33] <dalek> doc: Another formatto and typo

[03:33] <dalek> doc: 

[03:33] <dalek> doc: These formattos are really attributable to =config being NYI

[03:33] <dalek> doc: review: https://github.com/perl6/doc/commit/36af6f7e01

[03:36] <tony-o> thank you mou

[03:36] <tony-o> thank you mouq

[03:48] *** JimmyZ left
[04:05] *** raiph joined
[04:17] <jnthn> .tell pmurias I'm fine with 4c5981159e being put in master

[04:17] <yoleaux> jnthn: I'll pass your message to pmurias.

[04:29] *** mberends_ left
[04:32] *** mberends_ joined
[04:47] *** nbrown joined
[04:51] *** vukcrni joined
[04:51] *** nbrown left
[04:54] *** xenoterracide joined
[05:02] *** raiph left
[05:06] *** kaare_ joined
[05:23] *** BenGoldberg left
[05:24] *** xenoterracide left
[05:24] <moritz> \o

[05:25] <moritz> but please cherry-pick, not merge :-)

[05:26] <tony-o> ~~~~~~~~~~

[05:28] <moritz> \o

[05:32] *** Mso150 joined
[05:33] *** cxreg2 is now known as cxreg

[05:34] *** firefish5000 joined
[05:36] *** SamuraiJack joined
[05:39] *** rindolf joined
[05:39] *** Tene_ is now known as Tene

[05:47] *** xenoterracide joined
[05:47] *** nbrown joined
[05:52] *** nbrown left
[05:53] *** SamuraiJack left
[06:22] *** jerrycheung joined
[06:23] *** xenoterracide left
[06:29] *** SamuraiJack joined
[06:33] *** Mso150 left
[06:34] *** Mso150 joined
[06:39] *** ifim left
[06:40] *** _slade_ left
[06:45] *** SamuraiJack_ joined
[06:46] *** SamuraiJack left
[06:48] *** nbrown joined
[06:50] *** xenoterracide joined
[06:51] *** xinming joined
[06:52] *** nbrown left
[06:59] *** tinyblak joined
[07:07] *** tinyblak left
[07:12] *** xenoterracide left
[07:17] *** darutoko joined
[07:27] *** ribasushi joined
[07:28] *** virtualsue joined
[07:32] *** rurban joined
[07:36] *** rurban1 joined
[07:36] *** rurban left
[07:44] <dalek> rakudo/nom: 5022417 | jonathan++ | src/Perl6/Grammar.nqp:

[07:44] <dalek> rakudo/nom: Fix consecutive heredoc parse with Windows \r.

[07:44] <dalek> rakudo/nom: 

[07:44] <dalek> rakudo/nom: We failed to swallow enough after the stopper in this case, meaning

[07:44] <dalek> rakudo/nom: that two consecutive heredocs led to an extra newline appearing in

[07:44] <dalek> rakudo/nom: the second one.

[07:44] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/502241723f

[07:44] <dalek> roast: db49548 | jonathan++ | integration/advent2013-day04.t:

[07:44] <dalek> roast: Make a test robust to source having \r.

[07:44] <dalek> roast: review: https://github.com/perl6/roast/commit/db495487ef

[07:49] *** nbrown joined
[07:54] *** nbrown left
[07:56] *** Akagi201 joined
[08:02] *** tinyblak joined
[08:16] *** Akagi201 left
[08:22] *** rurban1 left
[08:22] <FROGGS_> does t/spec/integration/weird-errors.t also fail on nom?

[08:24] <FROGGS_> hmmm, it only fails in a spectest run :/

[08:24] <FROGGS_> (in branch lax)

[08:25] <nine> Oh how I hate it when I already have a trivial fix but fail to write a test reproducing the problem...

[08:29] *** sqirrel__ joined
[08:39] *** jack_rabbit left
[08:46] *** Ven joined
[08:47] *** anaeem1_ joined
[08:50] *** nbrown joined
[08:53] *** tinyblak left
[08:54] *** nbrown left
[08:59] *** Ven left
[08:59] *** bjz left
[08:59] *** bjz joined
[09:05] *** jerrycheung left
[09:06] *** sqirrel__ left
[09:10] <FROGGS_> hmmm, and t/spec/S02-types/baghash.rakudo.moar failed test 126 in a spectest run

[09:34] *** Mso150 left
[09:36] *** yeahnoob left
[09:39] *** anaeem1_ left
[09:41] *** anaeem1_ joined
[09:44] <dalek> rakudo/lax: 4d02272 | jonathan++ | docs/ROADMAP:

[09:44] <dalek> rakudo/lax: Remove tr///; it's been done.

[09:44] <dalek> rakudo/lax: review: https://github.com/rakudo/rakudo/commit/4d02272e04

[09:44] <dalek> rakudo/lax: ec60114 | jonathan++ | docs/ROADMAP:

[09:44] <dalek> rakudo/lax: Remove a couple of static optimizer tasks.

[09:44] *** dalek left
[09:45] *** mberends_ is now known as mberends

[09:45] *** dalek joined
[09:45] *** ChanServ sets mode: +v dalek

[09:46] *** anaeem1_ left
[09:50] *** nbrown joined
[09:53] *** tinyblak joined
[09:55] *** nbrown left
[10:02] *** sqirrel__ joined
[10:09] *** SamuraiJack_ left
[10:11] *** tinyblak left
[10:11] *** tinyblak joined
[10:15] *** tinyblak left
[10:17] *** Guest8332 left
[10:20] *** spider-mario joined
[10:22] *** rurban joined
[10:40] *** sqirrel__ left
[10:42] <timotimo> o/

[10:46] <vendethiel> \o

[10:47] *** bowtie joined
[10:47] *** bowtie is now known as Guest60421

[10:51] *** nbrown joined
[10:56] *** nbrown left
[10:58] *** anaeem1_ joined
[11:00] *** rurban left
[11:00] <grondilu> Saluton al cxiuj :-)

[11:02] *** virtualsue left
[11:09] *** anaeem1_ left
[11:10] *** anaeem1_ joined
[11:12] *** yeahnoob joined
[11:14] *** anaeem1_ left
[11:17] <dalek> roast: 0004afd | (Tobias Leich)++ | S02-names/strict.pl:

[11:17] <dalek> roast: add tests for (no/use) strict

[11:17] <dalek> roast: review: https://github.com/perl6/roast/commit/0004afda17

[11:18] <dalek> roast: 292aaeb | (Tobias Leich)++ | S02-names/strict. (2 files):

[11:18] <dalek> roast: fix file name (.pl => .t)

[11:18] <dalek> roast: review: https://github.com/perl6/roast/commit/292aaeb641

[11:22] *** salv0 left
[11:23] <dalek> rakudo/nom: 5daa5de | (Tobias Leich)++ | / (5 files):

[11:23] <dalek> rakudo/nom: implement lax mode

[11:23] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5daa5de7e7

[11:27] *** SamuraiJack_ joined
[11:29] *** ab5tract joined
[11:30] <FROGGS_> .tell daxim Please make sure that patch get manually applied to the libtommath that get bundled by opensuse

[11:30] <yoleaux> FROGGS_: I'll pass your message to daxim.

[11:31] *** FROGGS_ is now known as FROGGS

[11:32] <FROGGS> .tell jnthn shall we add detailed information to the ROADMAP entries? like pointing to an RT ticket or rakudo issue with open TODOs for each?

[11:32] <yoleaux> FROGGS: I'll pass your message to jnthn.

[11:33] <lizmat> m: say $a

[11:33] <camelia> rakudo-moar 502241: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/FoHQ5cmLqy␤Variable '$a' is not declared␤at /tmp/FoHQ5cmLqy:1␤------> [32msay $a[33m⏏[31m<EOL>[0m␤    expecting any of:␤        postfix␤»

[11:33] *** virtualsue joined
[11:34] <FROGGS> lizmat: since that executes a script here the strict mode is turned on

[11:34] <lizmat> yeah, just checking

[11:34] <FROGGS> m: 6; say $bar = 42 # that should work in a moment

[11:34] <camelia> rakudo-moar 502241: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/cB8QUzxctR␤Variable '$bar' is not declared␤at /tmp/cB8QUzxctR:1␤------> [32m6; say $bar[33m⏏[31m = 42 # that should work in a moment[0m␤    expecting any of:␤        postfix␤»

[11:34] <lizmat> $ 6 'say $a'

[11:34] <lizmat> (Any)

[11:35] <FROGGS> also "no strict" and "use strict"

[11:35] <lizmat> $ 6 'use strict; say $a'

[11:35] <lizmat> ===SORRY!=== Error while compiling -e

[11:35] <lizmat> Variable '$a' is not declared

[11:35] <lizmat> yup  :-)

[11:35] <FROGGS> :o)

[11:35] <FROGGS> we should talk about general pragma handling in detail at some point

[11:36] <FROGGS> brb

[11:36] <lizmat> yup, in ~ 14 days  :-)

[11:36] * grondilu is amazed we finally have no strict

[11:37] <vendethiel> is 6; specced to be "only" no strict?

[11:38] <vendethiel> I'll be reading the synopses again to complete my tutorial anyways

[11:39] <lizmat> FROGGS: just a datapoint:

[11:39] <lizmat> $ 6 'no strict "refs"; say $a'

[11:39] <lizmat> ===SORRY!=== Error while compiling -e

[11:39] <lizmat> Missing semicolon.

[11:40] *** salv0 joined
[11:40] <lizmat> but we'll take just 'use strict' for now  :-)

[11:41] *** leont joined
[11:41] <FROGGS> vendethiel / lizmat: the spec is very vague about what no strict is

[11:41] <dalek> rakudo/nom: 38453d1 | (Elizabeth Mattijsen)++ | docs/ChangeLog:

[11:41] <dalek> rakudo/nom: Finally lax arrives!   FROGGS++

[11:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/38453d166f

[11:42] <FROGGS> so, strict is all about variable declaration at this point

[11:42] <lizmat> yeah... it's a nice to have in -e right now

[11:42] *** leont left
[11:43] <lizmat> but perhaps not wise yet to have your code depend on 'no strict'  :-)

[11:44] *** tinyblak joined
[11:47] <grondilu> what would be nice would be an '-e'-like option for no strict.  Maybe '-E'?

[11:47] <lizmat> -e *is* 'no strict'

[11:47] <grondilu> oh?

[11:47] <lizmat> if you pull and rebuild  :-)

[11:48] <grondilu> it is indeed.

[11:48] <grondilu> cool

[11:51] *** leont joined
[11:51] <vendethiel>  #!/usr/bin/perl

[11:51] <vendethiel>     v6; $x = 1;

[11:52] <vendethiel> the example in S01 is wrong, it seems.

[11:52] *** nbrown joined
[11:55] <lizmat> hmmm... "But it should be easy to relax with C<-e> or a bare version number:"

[11:55] <lizmat> "6" is not a version number, "v6" is

[11:55] <lizmat> I would argue that FROGGS's implementation is not according to spec

[11:56] <lizmat> also, I can see some people returning a bare '6' from a sub

[11:56] <lizmat> m: sub a { 6 }

[11:56] <camelia> rakudo-moar 502241: ( no output )

[11:56] <lizmat> m: sub a { 6 }; say a

[11:56] <camelia> rakudo-moar 502241: OUTPUT«6␤»

[11:56] <lizmat> m: 6; say $x

[11:56] <camelia> rakudo-moar 502241: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/b_7I1gptsi␤Variable '$x' is not declared␤at /tmp/b_7I1gptsi:1␤------> [32m6; say $x[33m⏏[31m<EOL>[0m␤    expecting any of:␤        postfix␤»

[11:56] <lizmat> m: v6; say $x

[11:56] <camelia> rakudo-moar 502241: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/CX3gqQEWKn␤Variable '$x' is not declared␤at /tmp/CX3gqQEWKn:1␤------> [32mv6; say $x[33m⏏[31m<EOL>[0m␤    expecting any of:␤        postfix␤»

[11:57] *** nbrown left
[12:02] *** virtualsue left
[12:04] <grondilu> in http://rosettacode.org/wiki/Empty_program#Perl_6,  6; is mentionned as a way to use no strict;

[12:05] <FROGGS> lizmat: "6" does only work when it is the first statement in a compunit

[12:06] *** tinyblak_ joined
[12:09] *** tinyblak left
[12:09] *** virtualsue joined
[12:10] *** nbrown joined
[12:16] *** nbrown left
[12:17] *** chenryn left
[12:24] *** tinyblak_ left
[12:27] *** FROGGS[mobile] joined
[12:27] *** prevost joined
[12:33] *** dwarring left
[12:34] *** ab5tract left
[12:39] *** BenGoldberg joined
[12:40] *** FROGGS left
[12:58] *** BenGoldberg left
[12:58] *** BenGoldberg joined
[13:01] *** virtualsue left
[13:05] *** bjz left
[13:05] *** bjz_ joined
[13:12] *** nbrown joined
[13:14] *** Guest60421 left
[13:15] *** bowtie joined
[13:15] *** bowtie is now known as Guest33157

[13:17] *** nbrown left
[13:18] <timotimo> i wonder if we should have a benchmark that stresses the use of proxy?

[13:25] *** prevost left
[13:29] *** kaare__ joined
[13:30] <jnthn> timotimo: Can't hurt. We don't do any magic with it in spesh so far, so having a benchmakr to measure improvements when we do so would be worthwhile.

[13:30] <yoleaux> 11:32Z <FROGGS> jnthn: shall we add detailed information to the ROADMAP entries? like pointing to an RT ticket or rakudo issue with open TODOs for each?

[13:31] <timotimo> i'm experiencing a writer's block phase that's been going on for a long time now :\

[13:32] *** kaare_ left
[13:32] <jnthn> .tell FROGGS hmm, I think the idea of the ROADMAP file is more that you can quickly scan through it... Maybe can find a way to annotate the entries like (1) and then at the botom (1) See http://omg.its.rt/42 blah blah

[13:32] <yoleaux> jnthn: I'll pass your message to FROGGS.

[13:38] <jnthn> timotimo: Having that now with my APW talk title/abstract...

[13:39] * jnthn hopes that returning home and being less tired will unblock him on Rakudo/Moar stuff

[13:39] *** BenGoldberg left
[13:40] <timotimo> jnthn: i was hoping i could build something cute and present it at APW

[13:40] <timotimo> oh well.

[13:42] *** panchiniak joined
[13:46] *** gtodd joined
[13:47] *** virtualsue joined
[13:53] <jnthn> timotimo: There's still time... :)

[13:55] *** yeahnoob left
[13:57] <timotimo> i'll end up finishing it on the car ride to APW :P

[13:58] <timotimo> or even worse, not get any sleep the night before the car ride ... >_<

[13:58] *** kaare__ left
[14:07] *** denis_boyun joined
[14:10] *** spider-mario left
[14:13] *** nbrown joined
[14:16] *** colomon left
[14:17] *** nbrown left
[14:20] *** slavik left
[14:23] <timotimo> good lord ... build times on rakudo-parrot were pretty long weren't they ...

[14:23] *** colomon joined
[14:30] <FROGGS[mobile]> jnthn: yes, I thought about adding #123 which refers to a github issue 

[14:33] <jnthn> Well, except we don't use github issues for Rakudo...

[14:33] *** slavik joined
[14:37] *** nbrown joined
[14:42] *** telex left
[14:44] *** telex joined
[14:47] *** lichtkind joined
[14:51] *** molaf joined
[14:59] *** guru joined
[15:00] *** guru is now known as ajr_

[15:03] <FROGGS[mobile]> true :/

[15:04] * jnthn now has a flight to the Austrian Perl Workshop :)

[15:04] <dalek> roast: c8a5e7f | (Solomon Foster)++ | S03-operators/ (2 files):

[15:04] <dalek> roast: Rearrange and re-fudge Bag symmetric difference.

[15:04] <dalek> roast: 

[15:04] <dalek> roast: Coming up with a definition of Bag symmetric difference changes the answers we

[15:04] <dalek> roast: are looking for. In addition I've moved the corresponding tests from set.t to

[15:04] <dalek> roast: bag.t, and fudged them because Rakudo cannot handle them properly yet.  (ab5tract++ and I are working on making them work.)

[15:04] <dalek> roast: review: https://github.com/perl6/roast/commit/c8a5e7f232

[15:05] *** bjz_ left
[15:05] *** bjz joined
[15:10] *** nbrown left
[15:11] *** denis_boyun left
[15:36] *** panchiniak left
[15:40] *** nbrown joined
[15:43] *** betterwo1ld joined
[15:44] *** lizmat_ joined
[15:44] <lichtkind> what is diff between $*CWD.path and $*CWD.directory?

[15:45] *** nbrown left
[15:47] *** betterworld left
[15:51] <tony-o> m: say $*CWD.directory.WHAT; say $*CWD.path.WHAT;

[15:51] <camelia> rakudo-moar 502241: OUTPUT«(timeout)»

[15:51] <firefish5000> lichtkind, If I were to guess, path would return the .path and actual working directory (eg. '/home/user'), and .directory like dirname, would return the directory containing CWD '/home'

[15:52] <tony-o> id guess one is an IO::Path and the other isnt

[15:52] <tony-o> r: say $*CWD.directory.WHAT; say $*CWD.path.WHAT;

[15:52] <tony-o> weird

[15:52] <camelia> rakudo-moar 502241: OUTPUT«(Str)␤(IO::Path)␤»

[15:52] <camelia> ..rakudo-parrot 502241: OUTPUT«(timeout)»

[15:52] <camelia> ..rakudo-jvm 502241: OUTPUT«Can't call method "syswrite" on an undefined value at /home/p6eval/jvm-rakudo/eval-client.pl line 32.␤»

[15:53] <tony-o> m: say $*CWD.directory;

[15:53] <lichtkind> tony-o, my real question is: why do they diplay a different dir

[15:53] <camelia> rakudo-moar 502241: OUTPUT«(timeout)»

[15:54] <tony-o> lichtkind: what version of p6 are you running?

[15:54] <lichtkind> just pulled

[15:55] <colomon> m: say <a a a b>.Bag (|) <a b c>.Set

[15:56] <camelia> rakudo-moar 502241: OUTPUT«(timeout)»

[15:56] <colomon> !!!

[15:56] *** bjz left
[15:56] *** bjz joined
[15:57] *** xenoterracide joined
[15:58] *** xinming left
[15:59] <lichtkind> i noticed .directory always returdes one dir op

[15:59] <lichtkind> up, then .path

[16:00] <firefish5000> tony-o, for me, directory returns the containing directory for any path (like dirname, which is aproprate since... oh you noticed)

[16:00] <tony-o> sounds like what firefish5000 sugessted

[16:01] <firefish5000> .directory works on both files and directorys and treats them the same. there should be something like .basename? (dont count on the name) which returns just the files name ('/home/user' -> 'user')

[16:02] <lichtkind> i speak of what return $*CWD

[16:03] *** ruoso joined
[16:09] <lizmat_> lichtkind: all of that is currently in flux with my rewrite of S16 and S32/Str

[16:09] <tony-o> i don't get anything returned from $*CWD.directory in moar that i built two days ago

[16:10] <lizmat_> m: $*CWD.directory.say

[16:10] <tony-o> nvm - .directory is a Str and .path is IO::Path

[16:10] <camelia> rakudo-moar 502241: OUTPUT«(timeout)»

[16:11] *** nbrown joined
[16:11] <lizmat_> :-(  camelia about to die again ???

[16:11] <lichtkind> i use rakudo

[16:11] <tony-o> because $*CWD is a IO::Path :-)

[16:12] *** huva joined
[16:12] <lichtkind> i just was confused that .path . directoy return something different

[16:12] <lizmat_> anyways, I've *specced* directory as:Returns the directory part of the path, not including the last item.  Functions

[16:12] <lizmat_> equivalently to the C<dirname> shell program on Unix-like systems.

[16:12] *** xenoterracide left
[16:12] <tony-o> m: say $*CWD.path.path.path.path.path.directory eq $*CWD.directory

[16:12] *** lizmat_ is now known as lizmat

[16:12] *** xenoterracide joined
[16:12] <lichtkind> lizmat, why?

[16:12] <camelia> rakudo-moar 502241: OUTPUT«True␤»

[16:13] <lizmat> because that was more or less what the old spec said

[16:13] <lichtkind> i dont get the sense behind it

[16:13] <lizmat> but I'm thinking of renaming it to "dirname"

[16:13] <tony-o> well, it works that way, the part that is confusing is $*CWD.path is equivalent to $*CWD

[16:13] <lizmat> .path on an IO::Path is a noop

[16:13] <firefish5000> and if you want 2 dirs up, use parent wich returns IO::Path. (directory returns Str.)

[16:14] <firefish5000> dirname would be nice, matches basename

[16:14] <tony-o> lizmat: yea but i think that is more what is causing the confusion here, if it was understood that $*CWD.path IS $*CWD then .directory would make more sense

[16:14] <lichtkind> at least ~$*CWD does what i expect

[16:14] <lizmat> I'm actually considering making $*CWD a Str

[16:15] <lizmat> but ~$*CWD should work

[16:15] <tony-o> then we could do $*CWD.IO....

[16:15] <lizmat> well, you already can:

[16:15] <tony-o> it already IS

[16:15] <lizmat> atm, .IO returns an IO::Path

[16:15] <lizmat> (not a IO::Handle anymore)

[16:15] <tony-o> yea and $*CWD is IO::Path :-)

[16:15] <lizmat> yes

[16:16] <tony-o> i'm smelling what you're stepping in

[16:16] <lizmat> but I've run into a bit of a chicken-egg problem

[16:16] *** virtualsue left
[16:16] <lizmat> as for creating an IO::Path, I need a $*CWD  (according to the new spec(

[16:16] <lizmat> )

[16:17] <lizmat> then how can $*CWD be an IO::Path  ??

[16:17] <tony-o> ah

[16:17] <lichtkind> i think people expect rathr cwd to be a string

[16:17] <lichtkind> methinks

[16:17] <tony-o> i have modules that use $*CWD as a path

[16:17] <tony-o> IO::Path

[16:18] <lizmat> tony-o: how ?

[16:19] <lizmat> how do they use $*CWD as an IO::Path ?

[16:20] <tony-o> i use it for finding plugin modules

[16:20] <dalek> specs: c29d697 | (Elizabeth Mattijsen)++ | S32-setting-library/IO.pod:

[16:20] <dalek> specs: IO::Spec.directory -> dirname, for clarity

[16:20] <dalek> specs: review: https://github.com/perl6/specs/commit/c29d697ff8

[16:20] *** xenoterracide left
[16:20] <tony-o> or, possible plugin modules

[16:20] *** nbrown left
[16:21] <tony-o> oh nvm. i abandoned doing it that way

[16:21] <dalek> rakudo-star-daily: d8575cf | coke++ | log/MoarVM-version.log:

[16:21] <dalek> rakudo-star-daily: today (automated commit)

[16:21] <dalek> rakudo-star-daily: review: https://github.com/coke/rakudo-star-daily/commit/d8575cfd63

[16:21] <dalek> perl6-roast-data: 567fee9 | coke++ | / (5 files):

[16:21] <dalek> perl6-roast-data: today (automated commit)

[16:21] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/567fee9d51

[16:21] <gtodd> argh

[16:21] <lichtkind> btw $?FILE could also be complete path of the file :)

[16:21] <gtodd> building Inline::Perl5 ....  "Memory allocation failed; could not allocate 32 bytes"  

[16:21] <gtodd> sporadic sort of error

[16:22] <gtodd> oops not Inline::Perl5   I meant "v5"

[16:22] <gtodd> it errors trying to build Perl5::Grammar  somewhere ... this is using "panda install v5" 

[16:25] <lizmat> lichtkind: there is nothing specced about the absoluteness of $?FILE

[16:26] <lichtkind> i would find it rather nice obsolete findbin at least this part

[16:27] *** xenoterracide joined
[16:32] <FROGGS[mobile]> gtodd: I think a nqp change broke v5 lately... I'll check in a bit

[16:32] *** rurban joined
[16:33] *** SamuraiJack_ left
[16:52] *** virtualsue joined
[17:06] *** ab5tract joined
[17:10] *** nbrown joined
[17:12] *** ab5tract left
[17:17] *** kaare_ joined
[17:17] *** beastd joined
[17:17] <itz> hmm the synopsis use p5 pod not p6 don't they (?)

[17:18] *** xenoterracide left
[17:20] <lizmat> except S26, afaik

[17:20] <moritz> itz: yes, except S26

[17:24] *** anaeem1_ joined
[17:30] *** nbrown left
[17:30] *** nbrown joined
[17:35] *** nbrown left
[17:44] <nine> You got to love the P5 API. There's for getting an array's length there's av_len, av_tindex and av_top_index which in spite of their names do exactly the same. And even if these say that there's one element in the array, fetching this element can fail.

[17:48] <moritz> $ perl -wE 'my @a; $#a = 500; say scalar @a'

[17:48] <moritz> 501

[17:48] <moritz> dunno if that's related to pre-sized arrays somehow

[17:50] *** bartolin joined
[17:51] *** rurban left
[17:51] <nine> Hard to say. I've only ever seen it when invoking 'can' on a non-existing package. It claims to have one result which I store in an array and when I try to convert this array to P6 it dies because av_fetch returns NULL.

[17:51] *** vendethiel left
[17:52] <nine> SEGFAULTs in the warn: if (av_store(retval, i, next) == NULL) { SvREFCNT_dec(next); } else { warn("%p", *av_fetch(retval, i, 0));

[17:53] *** Mso150 joined
[17:54] <nine> At least the documentation of av_fetch tells me to check the return value for NULL, so it's still my fault it breaks. But I can clearly see the decades of backwards compatible extending here :)

[17:54] *** vendethiel joined
[17:57] *** dwarring joined
[17:57] <dalek> tablets: 08ad3a6 | (Herbert Breunung)++ | docs/appendix-b-grouped.txt:

[17:57] <dalek> tablets: update file tests

[17:57] <dalek> tablets: review: https://github.com/perl6/tablets/commit/08ad3a6b5a

[17:57] *** Mso150_g joined
[17:58] *** Mso150 left
[17:59] *** nbrown joined
[18:02] <dalek> Inline-Perl5: ea76545 | nine++ | / (3 files):

[18:02] <dalek> Inline-Perl5: Don't die if av_fetch returns NULL. Treat it as undef instead.

[18:02] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/ea76545ad1

[18:04] <ajr_> How difficult would it be to suppress some of the text output from the rakudo * build process? Simple I/O can dramatically increase run times of processes.

[18:06] *** nbrown left
[18:16] <dalek> Inline-Perl5: 3fad61c | nine++ | / (2 files):

[18:16] <dalek> Inline-Perl5: Make "Could not find method" catchable in Perl 6.

[18:16] <dalek> Inline-Perl5: 

[18:16] <dalek> Inline-Perl5: When a method of a P6 subclassed P5 object could not be found we croaked.

[18:16] <dalek> Inline-Perl5: Set ERRSV instead so this can be cought in Perl 6 like every other exception.

[18:16] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/3fad61cee0

[18:19] <dalek> Inline-Perl5: 6d1e4ba | nine++ | p5helper.c:

[18:19] <dalek> Inline-Perl5: Simplify p5_wrap_p6_object code a bit.

[18:19] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/6d1e4bad68

[18:20] *** nbrown joined
[18:21] <dalek> Inline-Perl5: 57a0f3b | nine++ | p5helper.c:

[18:21] <dalek> Inline-Perl5: Add a sanity check to p5_call_p6_callable

[18:21] <dalek> Inline-Perl5: 

[18:21] <dalek> Inline-Perl5: May shorten a future debugging session. Would have helped in the past...

[18:21] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/57a0f3badd

[18:22] *** Ven joined
[18:23] *** nbrown_ joined
[18:23] <dalek> Inline-Perl5: abea653 | nine++ | / (2 files):

[18:23] <dalek> Inline-Perl5: Add p5_sv_reftype method. May be useful for debugging.

[18:23] <dalek> Inline-Perl5: review: https://github.com/niner/Inline-Perl5/commit/abea653229

[18:26] *** molaf_ joined
[18:27] *** nbrown left
[18:29] *** molaf left
[18:30] *** immortal joined
[18:30] *** immortal left
[18:30] *** immortal joined
[18:30] *** nbrown_ left
[18:31] <dalek> tablets: 24d28d2 | (Herbert Breunung)++ | docs/appendix- (2 files):

[18:31] <dalek> tablets: renamed file test links and added :p var adverb

[18:31] <dalek> tablets: review: https://github.com/perl6/tablets/commit/24d28d23d1

[18:32] *** ajr_ left
[18:32] *** erkan left
[18:32] *** FROGGS joined
[18:33] *** nbrown_ joined
[18:38] *** nbrown_ left
[18:42] <FROGGS> .botsnack

[18:42] <yoleaux> 13:32Z <jnthn> FROGGS: hmm, I think the idea of the ROADMAP file is more that you can quickly scan through it... Maybe can find a way to annotate the entries like (1) and then at the botom (1) See http://omg.its.rt/42 blah blah

[18:42] <yoleaux> :D

[18:42] <itz> http://perlhacks.com/2014/09/perls-problems/

[18:43] *** SamuraiJack_ joined
[18:43] <lizmat> not much news there

[18:45] <dalek> Inline-Perl5/v6: 83f49b2 | nine++ | / (3 files):

[18:45] <dalek> Inline-Perl5/v6: Allow modules loaded by Perl 5 to be written in Perl 6.

[18:45] <dalek> Inline-Perl5/v6: 

[18:45] <dalek> Inline-Perl5/v6: Support use v6-inline; in Perl 5 code to pass a module's code

[18:45] <dalek> Inline-Perl5/v6: back to Perl 6 which then creates a Perl 6 module of it.

[18:45] <dalek> Inline-Perl5/v6: 

[18:45] <dalek> Inline-Perl5/v6: This may improve use cases where a Perl 5 framework autoloads modules

[18:45] <dalek> Inline-Perl5/v6: that may now be written in Perl 6.

[18:45] <dalek> Inline-Perl5/v6: review: https://github.com/niner/Inline-Perl5/commit/83f49b24eb

[18:45] <dalek> Inline-Perl5/v6: b823b06 | nine++ | / (3 files):

[18:45] <dalek> Inline-Perl5/v6: Fix instancing classes created by v6-inline;

[18:45] <dalek> Inline-Perl5/v6: 

[18:45] <dalek> Inline-Perl5/v6: Needs current Rakudo HEAD.

[18:45] <dalek> Inline-Perl5/v6: Thanks to jnthn++ for implementing GLOBAL::

[18:45] <dalek> Inline-Perl5/v6: review: https://github.com/niner/Inline-Perl5/commit/b823b06a9c

[18:45] <itz> yeah it does retread over well walked earth

[18:50] <moritz>  

[18:50] <FROGGS> gtodd: I can install v5 using panda just fine... (on latest rakudo@moar)

[18:50] *** darutoko left
[18:51] *** leedo_ joined
[18:51] *** xenoterracide joined
[18:52] <tony-o> FROGGS: i submitted a bug on dbiish because libpq.so doesnt load on osx

[18:52] <FROGGS> tony-o: and I responded

[18:52] <tony-o> i see  . ill check it out

[18:53] <FROGGS> 'libpq' might work though, since NativeCall tries file extensions according to the operating system

[18:53] <FROGGS> star-m: use NativeCall; sub foo is native('libpq') { ... }; foo()

[18:54] <camelia> star-m 2014.08: OUTPUT«(timeout)»

[18:54] <FROGGS> star-m: use NativeCall; sub foo is native('libpq') { ... }; foo()

[18:54] <camelia> star-m 2014.08: OUTPUT«(timeout)»

[18:54] <lichtkind> in nine a new project?

[18:55] <FROGGS> lichtkind: err, what?

[18:55] <lichtkind> oh i misread

[18:55] <lichtkind> nine was a contibuter

[18:55] <FROGGS> nine is a human being :o)

[18:59] <lichtkind> so Inline-Perl5/v6 is new?

[18:59] *** guru joined
[18:59] <lizmat> lichtkind: you were at YAPC::EU, right?  do you remember Stefan Seifert's lightning talk?

[18:59] *** guru is now known as Guest63394

[19:00] <lizmat> in which he said "Hello world" from python from perl5 in perl6 ?

[19:00] *** Guest63394 is now known as ajr_

[19:01] *** firefish5000 left
[19:01] *** Ven left
[19:01] *** kaare_ left
[19:02] *** Ven joined
[19:02] *** nbrown_ joined
[19:03] *** Mso150_g left
[19:04] <lichtkind> lizmat, yes i remember but he doesnt said how old it ise didnt he?

[19:04] <tony-o> FROGGS: it worked for me, want me to submit a PR?

[19:04] <FROGGS> tony-o: that would be awesome :o)

[19:05] <dalek> DBIish: e679f37 | tony-o++ | lib/DBDish/Pg.pm6:

[19:05] <dalek> DBIish: Update Pg.pm6

[19:05] <dalek> DBIish: review: https://github.com/perl6/DBIish/commit/e679f37894

[19:05] <tony-o> guess i don't need to

[19:05] <FROGGS> let me check on linux...

[19:06] *** Mso150 joined
[19:06] *** xenoterracide left
[19:06] *** nbrown_ left
[19:07] <FROGGS> tony-o++ # seems to work

[19:12] *** Mso150 left
[19:13] *** Mso150 joined
[19:16] <lizmat> lichtkind: it more or less started then and there

[19:20] *** anaeem1_ left
[19:22] *** nbrown_ joined
[19:23] <dalek> panda/CPAN: d1f446a | (Tobias Leich)++ | / (44 files):

[19:23] <dalek> panda/CPAN: first working but non-portable attempt to fetch from CPAN

[19:23] <dalek> panda/CPAN: 

[19:23] <dalek> panda/CPAN: We need a lot of additional depenecies here, like HTTP::UA to fetch dists

[19:23] <dalek> panda/CPAN: when the server gives us chunks or like Archive::Tar and Compress::Zlib for

[19:23] <dalek> panda/CPAN: unpacking the dists itself.

[19:23] <dalek> panda/CPAN: These dists are problematic right now when it comes to portability. A real

[19:23] <dalek> panda/CPAN: chance that it works is only given on 64bit linux atm.

[19:23] <dalek> panda/CPAN: review: https://github.com/tadzik/panda/commit/d1f446a0aa

[19:24] *** raiph joined
[19:27] *** nbrown_ left
[19:28] <raiph> .seen perltricks

[19:28] <yoleaux> I saw perltricks 4 Jul 2014 01:25Z in #perl6: <perltricks> hey EVAL is missing from perl6/doc and I want to add it, but I'm not sure where it should go. Should it be in routines? All the routines seem to be extracted from a parent file - what would the parent of EVAL be? thanks!

[19:30] <dalek> Heuristic branch merge: pushed 24 commits to panda/CPAN by FROGGS

[19:30] * raiph wonders if perltricks sent https://github.com/sillymoose/xperl6 to the http:://exercism.io project

[19:32] *** SamuraiJack_ left
[19:32] *** SamuraiJack_ joined
[19:36] <dalek> panda/CPAN: cce7978 | (Tobias Leich)++ | .gitmodules:

[19:36] <dalek> panda/CPAN: replace NativeCall clone with proper submodule

[19:36] <dalek> panda/CPAN: review: https://github.com/tadzik/panda/commit/cce79783ab

[19:41] *** xenoterracide joined
[19:42] *** SamuraiJack_ left
[19:43] <dalek> rakudo/nom: 29de963 | (Elizabeth Mattijsen)++ | / (4 files):

[19:43] <dalek> rakudo/nom: Change order in which we parse IO::Spec c.s.

[19:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/29de963e85

[19:45] *** Psyche^_ joined
[19:45] *** Psyche^ left
[19:46] *** xenoterracide left
[19:54] <dalek> panda/CPAN: 3b16437 | (Tobias Leich)++ | / (5 files):

[19:54] <dalek> panda/CPAN: make all dependencies git submodules

[19:54] <dalek> panda/CPAN: review: https://github.com/tadzik/panda/commit/3b16437aa3

[19:56] <dalek> panda/CPAN: d5b92ae | (Tobias Leich)++ | ext/File__Tools:

[19:56] <dalek> panda/CPAN: removed File::Tools

[19:56] <dalek> panda/CPAN: review: https://github.com/tadzik/panda/commit/d5b92ae0f3

[20:00] <dalek> panda/CPAN: 4bcc5b5 | (Tobias Leich)++ | ext/ (3 files):

[20:00] <dalek> panda/CPAN: update submodules

[20:00] <dalek> panda/CPAN: review: https://github.com/tadzik/panda/commit/4bcc5b5ab5

[20:05] *** nbrown_ joined
[20:07] <nine> v6-inline is currently only in a branch since I want to gather some experience with the interface before merging. It's proven useful so far :) I'm just not sure if generating a class is always the right thing.

[20:09] *** nbrown_ left
[20:10] *** rmgk_ joined
[20:10] *** rmgk left
[20:10] *** rmgk_ is now known as rmgk

[20:11] <dalek> rakudo/nom: f02bf8f | (Tobias Leich)++ | src/core/Label.pm:

[20:11] <dalek> rakudo/nom: handle $?FILES being null in Label.new

[20:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f02bf8ff3a

[20:13] *** leedo_ left
[20:13] *** leedo joined
[20:13] *** FROGGS[mobile] left
[20:17] *** molaf_ left
[20:25] *** Mso150 left
[20:30] <dalek> rakudo/nom: 6cd83e5 | (Tobias Leich)++ | src/core/Label.pm:

[20:30] <dalek> rakudo/nom: stringify $?FILES in Label.new

[20:30] <dalek> rakudo/nom: 

[20:30] <dalek> rakudo/nom: There are cases where $?FILES contain an IO::Path object.

[20:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6cd83e532e

[20:32] *** anaeem1 joined
[20:33] <FROGGS> panda --cpan search foo

[20:33] <FROGGS> ==> Fetching http://www.cpan.org/MIRRORED.BY

[20:33] <FROGGS> Unable to handle source 'http://www.cpan.org/MIRRORED.BY'

[20:33] <FROGGS> :o(

[20:33] <FROGGS> I guess I'll debug that tomorrow

[20:34] *** nbrown_ joined
[20:37] <lizmat> FROGGS++

[20:37] <gtodd> hmm can we use the new  "no strict ;"  in the REPL?

[20:37] <bartolin> I'm unable to build parrot at the moment. make dies with "Can only use nqp_set_sc_for_object with a SixModelObject: http://pastebin.com/vJyYMCb9

[20:37] <lizmat> gtodd: at the moment, only on the one line

[20:38] <lizmat> bartolin: I'll check

[20:38] <gtodd> ah ok ... or in scripts 

[20:38] <bartolin> Could that be a recent change to rakudo? (Since I'm running this daily and everything was fine for yesterdays run.)

[20:38] <gtodd> lizmat: the repl needs line continuation and wrapping niceness :-)

[20:38] <bartolin> lizmat: Thanks

[20:38] <lizmat> you may need to reconfigure

[20:38] <gtodd> bartolin: on no not parrot on FreeBSD again ! :-)

[20:39] <FROGGS> gtodd: EVAL is problematic atm, end the REPL is just EVAL after EVAL

[20:39] <FROGGS> m: no strict; say $bar = 42

[20:39] <gtodd> FROGGS: right ... 

[20:39] *** Ven left
[20:39] <bartolin> gtodd: Why not?

[20:39] <lizmat> FROGGS: couldn't we EVAL all lines entered as one each time?

[20:39] <camelia> rakudo-moar 502241: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/jsmZYzr6Kl␤Variable '$bar' is not declared␤at /tmp/jsmZYzr6Kl:1␤------> [32mno strict; say $bar[33m⏏[31m = 42[0m␤    expecting any of:␤        postfix␤»

[20:39] <lizmat> and start from scratch ?

[20:39] *** nbrown_ left
[20:39] <lizmat> each time ?

[20:39] <gtodd> bartolin: it was building fine there for a while 

[20:39] <FROGGS> camelia got stuck?

[20:39] <lizmat> (if a new line compiled ok)

[20:39] <lizmat> FROGGS: yes, it's borked

[20:40] <FROGGS> k

[20:40] <gtodd> bartolin: ... haven't rebuilt parrot since last week

[20:40] *** gfldex left
[20:40] <bartolin> gtodd: I'm running it for a week or so (using perl6-roast-data). Even p-spectest runs fine ;-)

[20:40] *** anaeem1 left
[20:41] <gtodd> bartolin: :-D

[20:41] <bartolin> gtodd: I'm new, so I'm not aware of problems in the past ...

[20:41] <gtodd> bartolin: on FreeBSD it seemed fine until sometime in july or august 

[20:41] <gtodd> bartolin: then you fixed the build ;-)

[20:42] <gtodd> and it's been good

[20:42] <bartolin> gtodd: I see ;-)

[20:43] <bartolin> But actually I get build failures for linux as well. (On my linux box it's not automated so it could be a failure on my part as well.)

[20:43] <bartolin> (parrot on linux)

[20:43] <gtodd> bartolin: I'm using p6 enough now that I notice the speed diff with moar ... I hope to have an 8 core 64 gig machine in the next few months

[20:44] <gtodd> hope that is fast enough :-P  parrot might not be the fastest now  but it is interesting 

[20:45] <gtodd> and current

[20:45] <lizmat> bartolin: confirmed

[20:45] <bartolin> gtodd: I use that FreeBSD box only for smoking. So I thought "why not parrot as well".

[20:45] <bartolin> lizmat++ Thanks again.

[20:46] <dalek> panda/CPAN: 76785b6 | (Tobias Leich)++ | lib/Panda/Fetcher.pm:

[20:46] <dalek> panda/CPAN: reorder Fetcher so http rule is picked up first

[20:46] <dalek> panda/CPAN: review: https://github.com/tadzik/panda/commit/76785b6f0e

[20:46] *** nbrown_ joined
[20:47] <FROGGS> panda --cpan search foo

[20:47] <FROGGS> ==> Fetching http://www.cpan.org/MIRRORED.BY

[20:47] <FROGGS> ==> Pinging 253 servers, please be patient

[20:47] <FROGGS> ==> Saving top 10 to /home/froggs/dev/nqp/install/languages/perl6/site/panda/mirrors.json

[20:47] <FROGGS> ==> Fetching http://artfiles.org/cpan.org/authors/p6dists.json.gz

[20:47] <FROGGS> Could not fetch http://artfiles.org/cpan.org/authors/p6dists.json.gz: Will not decode invalid ASCII (code point < 0 found)

[20:47] <FROGGS> okay, that's really something for tomorrow :o)

[20:47] <FROGGS> gnight #perl6

[20:48] *** rurban joined
[20:48] <gtodd> o/

[20:48] *** rurban left
[20:49] *** FROGGS left
[20:51] <timotimo> way cool

[20:53] <vendethiel> yay :)

[20:53] <gtodd> is there an easy shortcutish way to show git diffs the way you can do HEAD^ HEAD  ... but to roll back more than one commit?

[20:54] <gtodd> errm I mean compare earlier than most recent commit

[20:58] *** ajr_ left
[20:59] *** _slade_ joined
[20:59] *** gfldex joined
[20:59] *** _slade_ left
[21:00] *** _slade_ joined
[21:00] <geekosaur> more ^s

[21:00] <geekosaur> HEAD^^ is 2 commit back, etc.

[21:02] <geekosaur> perhaps more interesting: 'HEAD^{/pattern}' looks for the most recent commit containing pattern in its description

[21:09] *** jack_rabbit joined
[21:10] *** lichtkind left
[21:10] *** gfldex left
[21:13] *** bartolin left
[21:15] <lizmat> parrot breakage seems some commits old already  :-(

[21:16] *** virtualsue left
[21:19] <lizmat> looks like 5daa5de7e is to blame for parrot breakage (which gave us lax)

[21:19] <lizmat> .tell FROGGS seems the 5daa5de broke the parrot build

[21:19] <yoleaux> lizmat: I'll pass your message to FROGGS.

[21:20] <lizmat> JVM build also seems broken, but that could be my fault

[21:23] *** virtualsue joined
[21:28] *** xenoterracide joined
[21:30] <gtodd> geekosaur: whoa ...

[21:31] <gtodd> geekosaur: ^^HEAD would make more sense but git has plenty o' options it's like exploring a cave

[21:34] *** xenoterracide left
[21:48] *** _slade_ left
[21:51] <lizmat> seems 6cd83e532e93 has broken the JVM build

[21:52] <lizmat> trying to fix that one now

[22:00] <lizmat> testing fix on moar

[22:04] <dalek> rakudo/nom: b13069b | (Elizabeth Mattijsen)++ | src/core/Label.pm:

[22:04] <dalek> rakudo/nom: Fix JVM build breakage

[22:04] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b13069b7a5

[22:30] *** rindolf left
[22:32] *** beastd left
[22:40] *** dwarring left
[22:42] *** _slade_ joined
[22:48] *** xenoterracide joined
[22:53] *** yeahnoob joined
[22:55] *** xenoterracide left
[22:57] *** ggoebel111119 joined
[22:58] *** ggoebel111118 left
[23:03] *** BenGoldberg joined
[23:13] *** leedo left
[23:15] *** leedo joined
[23:40] <[Coke]> some java test hung for hours, had to kill it by hand

[23:40] <[Coke]> somewhere in S32-str

[23:41] <[Coke]> S32-str/capitalize.rakudo.jvm

[23:56] *** yeahnoob left
