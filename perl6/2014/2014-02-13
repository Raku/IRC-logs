[00:00] *** rom1504 joined
[00:05] *** panchiniak left
[00:11] *** geekosaur left
[00:11] *** geekosaur joined
[00:14] *** FROGGS joined
[00:16] *** treehug88 left
[00:20] *** pdcawley left
[00:26] *** rurban left
[00:29] *** kivutar left
[00:39] *** thou left
[00:42] *** thou joined
[00:43] *** DarthGandalf left
[00:44] *** pmurias_ left
[00:48] *** thou left
[00:53] *** DarthGandalf joined
[00:56] *** rurban joined
[01:00] *** jnap left
[01:00] *** dayangkun left
[01:07] *** pdcawley joined
[01:11] *** ens_ left
[01:12] *** pdcawley left
[01:13] *** dayangkun joined
[01:13] *** jnap joined
[01:25] *** DarthGandalf left
[01:29] *** rurban left
[01:29] *** DarthGandalf joined
[01:31] *** BenGoldberg joined
[01:59] *** stevan__ joined
[02:04] *** regreg2 left
[02:05] *** regreg joined
[02:09] *** cognominal__ joined
[02:09] *** regreg2 joined
[02:11] *** regreg left
[02:11] *** kst` joined
[02:12] *** japhb_ joined
[02:12] *** itz__ joined
[02:13] *** lizmat_ joined
[02:13] *** djanatyn1 joined
[02:14] *** xinming joined
[02:14] *** [Sno]_ joined
[02:14] *** FROGGS left
[02:14] *** xenoterracide left
[02:14] *** daniel-s left
[02:14] *** genehack_ joined
[02:15] *** raiph left
[02:15] *** revdiablo left
[02:15] *** Psyche^_ left
[02:15] *** daxim left
[02:15] *** itz left
[02:15] *** cooper left
[02:15] *** go|dfish left
[02:15] *** nebuchadnezzar left
[02:15] *** japhb left
[02:15] *** nsh left
[02:15] *** colomon left
[02:15] *** djanatyn left
[02:15] *** lizmat left
[02:15] *** gfldex left
[02:15] *** mattp__ left
[02:16] *** nsh joined
[02:17] *** go|dfish joined
[02:17] *** jnap1 joined
[02:17] *** kaare__ joined
[02:18] *** Psyche^ joined
[02:18] *** daniel-s joined
[02:18] *** Colby` joined
[02:18] *** eiro left
[02:18] *** huf_ joined
[02:18] *** skids1 joined
[02:18] *** Ben_Goldberg joined
[02:18] *** skids left
[02:18] *** mavcunha left
[02:18] *** xinming_ left
[02:18] *** sunnavy left
[02:18] *** cognominal left
[02:18] *** jercos left
[02:18] *** genehack left
[02:18] *** kst left
[02:18] *** labster left
[02:18] *** Pleiades` left
[02:18] *** huf left
[02:18] *** synopsebot left
[02:18] *** rhr left
[02:18] *** Alula left
[02:18] *** Colby` is now known as Pleiades`

[02:19] *** rhr_ joined
[02:19] *** daxim_ joined
[02:20] *** FROGGS joined
[02:20] *** FOAD left
[02:20] *** gfldex joined
[02:20] *** cooper joined
[02:20] *** cooper left
[02:20] *** cooper joined
[02:20] *** itz joined
[02:21] *** eiro joined
[02:22] *** synopsebot joined
[02:22] *** sunnavy joined
[02:22] *** regreg2 left
[02:22] *** BenGoldberg left
[02:22] *** jnap left
[02:22] *** sjohnson left
[02:22] *** araujo left
[02:22] *** kaare_ left
[02:22] *** [Sno] left
[02:22] *** ingy left
[02:22] *** dalek left
[02:22] *** itz_ left
[02:22] *** Vlavv left
[02:22] *** Khisanth left
[02:22] *** rylinaux left
[02:22] *** [Sno]_ is now known as [Sno]

[02:23] *** hugme left
[02:23] *** orevdiabl joined
[02:23] *** huf_ left
[02:24] *** exodist_ left
[02:24] *** rhr_ left
[02:24] *** mavcunha joined
[02:25] *** daniel-s left
[02:28] *** rurban joined
[02:29] *** telex left
[02:29] *** hugme joined
[02:29] *** ChanServ sets mode: +v hugme

[02:30] *** dalek joined
[02:30] *** ChanServ sets mode: +v dalek

[02:31] *** daxim__ joined
[02:33] *** daxim_ left
[02:33] *** Pleiades` left
[02:33] *** jnap1 left
[02:33] *** go|dfish left
[02:33] *** nsh left
[02:34] *** Vlavv joined
[02:34] *** Colby` joined
[02:34] *** Colby` is now known as Pleiades`

[02:34] *** go|dfish joined
[02:35] *** japhb__ left
[02:35] *** ponbiki left
[02:36] *** daxim__ left
[02:37] *** d4l3k_ joined
[02:38] *** FOAD joined
[02:38] *** benabik joined
[02:38] *** nsh joined
[02:38] *** orevdiabl left
[02:38] *** skids1 left
[02:39] *** japhb joined
[02:39] *** amkrankr1leuen left
[02:39] *** amkrankruleuen joined
[02:39] *** amkrankruleuen left
[02:39] *** amkrankruleuen joined
[02:39] *** jercos joined
[02:39] *** skids joined
[02:40] *** Khisanth joined
[02:40] *** stevan_ joined
[02:40] *** Khisanth is now known as Guest10512

[02:40] *** dalek left
[02:41] *** rhr joined
[02:41] *** kst joined
[02:41] *** FROGGS_ joined
[02:41] *** d4l3k_ is now known as dalek

[02:42] *** telex joined
[02:42] *** labster joined
[02:43] *** FROGGS left
[02:43] *** ponbiki joined
[02:43] *** mtk left
[02:44] *** Exodist joined
[02:44] *** cooper_ joined
[02:44] *** Shozan joined
[02:44] *** revdiablo joined
[02:44] *** kshannon_ joined
[02:45] *** xenoterracide joined
[02:45] *** sunnavy_ joined
[02:46] *** jnthn_ joined
[02:46] *** grondilu_ joined
[02:46] *** ponbiki left
[02:46] *** hugme left
[02:46] *** simcop2387_ joined
[02:47] *** ponbiki_ joined
[02:47] *** hugme joined
[02:47] *** ChanServ sets mode: +v hugme

[02:48] *** diakopter joined
[02:48] *** diakopter left
[02:48] *** ribasushi_ joined
[02:49] *** CABFUWB joined
[02:49] *** mavcunha left
[02:49] *** sunnavy left
[02:49] *** cooper left
[02:50] *** [Sno] left
[02:50] *** xinming left
[02:50] *** djanatyn1 left
[02:50] *** kst` left
[02:50] *** stevan__ left
[02:50] *** bluescreen10 left
[02:50] *** simcop2387 left
[02:50] *** jnthn left
[02:50] *** bjz left
[02:50] *** grondilu left
[02:50] *** SHODAN left
[02:50] *** salv0 left
[02:50] *** logie_ left
[02:50] *** yakudza left
[02:50] *** ruoso left
[02:50] *** aindilis left
[02:50] *** Alina-malina left
[02:50] *** kshannon left
[02:50] *** ashleydev left
[02:50] *** renormalist left
[02:50] *** silug_ left
[02:50] *** ribasushi left
[02:50] *** simcop2387_ is now known as simcop2387

[02:50] *** cooper_ is now known as cooper

[02:50] *** ribasushi_ is now known as ribasushi

[02:50] *** cooper left
[02:50] *** cooper joined
[02:51] *** daxim__ joined
[02:51] *** mtk joined
[02:51] *** ashleydev joined
[02:52] *** xinming joined
[02:54] *** FROGGS__ joined
[02:56] *** FROGGS_ left
[02:57] *** bluescreen10 joined
[02:59] *** Alina-malina joined
[02:59] *** yakudza joined
[03:00] *** logie joined
[03:00] *** rurban left
[03:00] *** __rnddim__ joined
[03:00] *** lizmat joined
[03:03] *** daxim joined
[03:03] *** bjz joined
[03:04] *** ruoso joined
[03:04] *** lue left
[03:04] *** daxim__ left
[03:04] *** Exodist left
[03:04] *** jnthn_ left
[03:04] *** lizmat_ left
[03:04] *** djanatyn1 joined
[03:07] *** Exodist joined
[03:08] *** ruoso left
[03:08] *** bluescreen10 left
[03:08] *** pdcawley joined
[03:09] *** ruoso joined
[03:09] *** salv0 joined
[03:09] *** jnthn joined
[03:10] *** bluescreen10 joined
[03:12] *** silug_ joined
[03:13] *** pdcawley left
[03:13] *** pecastro joined
[03:29] *** huf joined
[03:30] *** japhb_ left
[03:30] *** japhb_ joined
[03:30] *** go|dfish left
[03:30] *** go|dfish joined
[03:32] <TimToady> so, I guess everyone in the Americas is out partying tonight...

[03:34] <rjbs> Out in my parts, they're all looking miserably out their windows.

[03:35] *** __rnddim__ is now known as lue

[03:51] *** btyler joined
[04:00] *** Alula joined
[04:06] *** rurban joined
[04:09] *** pdcawley joined
[04:10] *** ens joined
[04:13] *** btyler left
[04:13] *** pdcawley left
[04:14] *** mattp__ joined
[04:18] *** ingy joined
[04:19] *** sjohnson joined
[05:10] *** pdcawley joined
[05:14] *** pdcawley left
[05:22] *** SamuraiJack_ joined
[05:38] *** bluescreen10 left
[05:47] *** woosley joined
[05:53] *** Ben_Goldberg left
[05:55] <daxim> http://paste.scsys.co.uk/304593        Ambiguous call problem

[05:55] <daxim> am I doing something wrong?

[06:00] *** darutoko joined
[06:06] *** rurban left
[06:11] *** pdcawley joined
[06:13] <raydiak> daxim: I don't think return type is considered in any way for multi dispatch, only params...so it can't tell which one you want to call

[06:15] <lue> yeah, only the signatures count. Besides, I don't think there exists a very sane way to use return types in MMD anyway.

[06:15] *** pdcawley left
[06:16] <daxim> this means I have to make a different name for each type

[06:21] <daxim> next problem:  http://paste.scsys.co.uk/304605   expected 'Array[Int]' but got 'Array'

[06:22] *** xinming_ joined
[06:22] *** xinming left
[06:26] <raydiak> not sure, but I think something about typed arrays is not done yet...getting rid of [Int] will probably fix it

[06:27] <daxim> that's not a fix, but papering over a shortcoming (if typed arrays are really not done yet)

[06:27] <lue> daxim:  return [4,5,6];  says nothing about the type of Array, despite how obvious it is to you :)

[06:28] <daxim> okay, does that mean I have to help out the system in determining that?

[06:28] <daxim> if yes, how?   I already tried [Int(4), …] 

[06:29] <lue> r: my @a is Array[Int] = 1,2,3; say @a.perl; say @a.WHAT;

[06:29] <camelia> rakudo-moar 0d2b68: OUTPUT«use of uninitialized value of type Any in string context␤Unhandled exception: No exception handler located for warn␤   at <unknown>:1  (/home/p6eval/rakudo-inst-2/languages/perl6/runtime/CORE.setting.moarvm:print_exception:4294967295)␤ from src/gen/m…»

[06:29] <camelia> ..rakudo-jvm 0d2b68: OUTPUT«use of uninitialized value of type Any in string context␤Unhandled exception: use of uninitialized value of type Any in string context␤  in warn (gen/jvm/CORE.setting:677)␤  in warn (gen/jvm/CORE.setting:673)␤  in Str (gen/jvm/CORE.setting:1023)␤ …»

[06:29] <camelia> ..rakudo-parrot 0d2b68: OUTPUT«use of uninitialized value of type Any in string context  in any throw at src/Perl6/World.nqp:2442␤␤use of uninitialized value of type Any in string context␤[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Can't use unknown trait…»

[06:30] <Timbus> dispatch based on return type. oh boy

[06:30] <lue> daxim: anything more complex with arrays and such, such as shaping or typing, is barely implemented if at all at the moment :( It's easiest to just go with Array instead of Array[Int] right now

[06:32] <daxim> a meta observation: how come that always the first thing I try does not work?  next year, surely, will be the year of desktop linux^W^Wperl6

[06:33] <lue> daxim: depends on what type of stuff you're doing. :) S09 is one of the really weak spots at the moment.

[06:40] *** grondilu_ is now known as grondilu

[06:40] *** grondilu left
[06:40] *** grondilu joined
[06:43] *** Guest10512 is now known as Khisanth

[07:00] *** telex left
[07:02] *** telex joined
[07:06] *** rurban joined
[07:11] *** pdcawley joined
[07:11] *** rurban left
[07:16] *** pdcawley left
[07:20] *** FROGGS__ left
[07:24] *** sqirrel joined
[07:33] *** FROGGS__ joined
[07:33] *** FROGGS__ is now known as FROGGS

[07:35] <FROGGS> jnthn: I have a curiosity, and I'm sure you won't like it

[07:36] *** nebuchadnezzar joined
[07:36] <FROGGS> jnthn: when trying to run panda's bootstrap.pl using perl6-m, it hangs in Perl6::ModuleLoader when trying to compile Panda::Ecosystem

[07:37] <FROGGS> jnthn: however, when I add DEBUG() statements, it does not hang, but complains (correctly) about "When pre-compiling a module[...]"

[07:37] <FROGGS> which scares me a bit

[07:44] *** kaleem joined
[07:47] *** erkan joined
[07:52] *** chayin joined
[07:55] *** salv0 left
[07:56] *** chayin left
[07:58] <b^_^d>  /win 12

[07:59] *** sqirrel left
[08:01] *** xenoterracide left
[08:08] *** rurban joined
[08:10] *** djanatyn1 left
[08:10] *** djanatyn1 joined
[08:10] *** Biohazard left
[08:10] *** salv0 joined
[08:10] *** jercos left
[08:10] *** zakharyas joined
[08:11] *** jercos joined
[08:12] *** pdcawley joined
[08:12] *** kaleem_ joined
[08:13] *** simcop2387 left
[08:13] *** JimmyZ left
[08:13] *** pdcawley left
[08:13] *** kaleem left
[08:14] *** pdcawley joined
[08:14] *** pdcawley left
[08:14] *** Alina-malina left
[08:15] *** sunnavy_ left
[08:15] *** sjn left
[08:15] *** Alina-malina joined
[08:16] *** simcop2387 joined
[08:16] *** sunnavy joined
[08:16] *** sjn joined
[08:16] *** Biohazard joined
[08:21] *** JimmyZ joined
[08:22] *** Biohazard left
[08:23] *** dagurval left
[08:23] *** dagurval joined
[08:26] *** JimmyZ left
[08:26] *** crazedpsyc joined
[08:26] *** JimmyZ joined
[08:27] *** anocelot left
[08:27] *** anocelot joined
[08:28] *** Biohazard joined
[08:30] *** denis_boyun joined
[08:30] *** sqirrel joined
[08:39] *** SamuraiJack joined
[08:39] *** SamuraiJack_ left
[08:41] *** rurban left
[08:44] *** dmol joined
[08:46] *** pdcawley joined
[08:46] *** pdcawley left
[09:11] *** Funkwecker joined
[09:13] *** SamuraiJack left
[09:14] *** sqirrel left
[09:27] *** xinming_ left
[09:30] <jnthn> r: my Int @a = 1,2,3; sub foo(Int @x) { say 'ok' }; foo(@a)

[09:30] <camelia> rakudo-parrot 0d2b68, rakudo-jvm 0d2b68, rakudo-moar 0d2b68: OUTPUT«ok␤»

[09:31] <jnthn> r: sub foo(Int @x) { say 'ok' }; foo(Array[Int].new(1,2,3))

[09:31] <camelia> rakudo-parrot 0d2b68, rakudo-jvm 0d2b68, rakudo-moar 0d2b68: OUTPUT«ok␤»

[09:32] <jnthn> daxim: ^^ is the right way. They are *nominally* typed.

[09:33] <jnthn> daxim: Using a feature wrongly and then saying it doesn't work is kinda silly.

[09:34] *** dakkar joined
[09:34] *** fhelmberger joined
[09:34] <FROGGS> jnthn: do you see my msg from two hours ago?

[09:35] <moritz> that said, there are lots of corners where typed arrays don't behave well

[09:36] <jnthn> moritz: There are, and I'm sure for newcomers it can be a surprise that typed arrays are nominally typed...

[09:37] <jnthn> But folks saying "oh, they're not implemented yet" in response to a program that, even if we implemented all of S09, would still be incorrect, is unhelpful.

[09:37] *** rurban joined
[09:38] <jnthn> FROGGS: Yeah, but I ain't gonna be able to look into it today

[09:38] *** pdcawley joined
[09:38] <FROGGS> jnthn: you are not supposed to look into that

[09:38] *** pdcawley left
[09:38] <FROGGS> you should just say "wth" :o)

[09:39] <jnthn> FROGGS: wth!!??!!!

[09:39] <moritz> jnthn: agreed

[09:40] <FROGGS> :o)

[09:40] <jnthn> FROGGS: Sadly, I've no even any guesses on that.

[09:40] <jnthn> FROGGS: Unless it's some odd exception-y thing

[09:41] <jnthn> But I kinda hope not. :)

[09:41] <FROGGS> I will debug it further today and will keep you updated once I know more

[09:42] <jnthn> k

[09:42] * jnthn digs into writing the code so he can make the slides so he can give the talk...

[09:43] <FROGGS> so he will be famous \o/

[09:43] <FROGGS> ohh, wait...

[09:49] <jnthn> heh

[10:12] *** rurban left
[10:25] *** lizmat left
[10:27] *** lizmat joined
[10:32] *** denis_boyun left
[10:32] *** clkao_ is now known as clkao

[10:40] *** woolfy joined
[10:40] <grondilu> rn: say (1 + *)(2);

[10:40] <camelia> rakudo-parrot 0d2b68, rakudo-jvm 0d2b68, rakudo-moar 0d2b68, niecza v24-109-g48a8de3: OUTPUT«3␤»

[10:41] <grondilu> rn: say .(2) for (1, 2) X+ *

[10:41] <camelia> niecza v24-109-g48a8de3: OUTPUT«3 4␤»

[10:41] <camelia> ..rakudo-moar 0d2b68: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \v: *%_)␤  in method Numeric at src/gen/m-CORE.setting:1010␤  in sub infix:<+> at src/gen/m-CORE.setting:3996␤  in sub infix:<+> at src/gen/m-CORE.setting:3994␤  in block  at src/gen/m…»

[10:41] <camelia> ..rakudo-jvm 0d2b68: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \v: *%_)␤  in any  at gen/jvm/BOOTSTRAP.nqp:1212␤  in any  at gen/jvm/BOOTSTRAP.nqp:1202␤  in method Numeric at gen/jvm/CORE.setting:1010␤  in sub infix:<+> at gen/jvm/CORE.setting:3996…»

[10:41] <camelia> ..rakudo-parrot 0d2b68: OUTPUT«Cannot call 'Numeric'; none of these signatures match:␤:(Mu:U \v: *%_)␤  in any  at gen/parrot/BOOTSTRAP.nqp:1219␤  in any  at gen/parrot/BOOTSTRAP.nqp:1210␤  in method Numeric at gen/parrot/CORE.setting:1013␤  in sub infix:<+> at gen/parrot/CO…»

[10:47] <grondilu> rn: say .WHAT given 1 + 1/Inf

[10:47] <camelia> rakudo-parrot 0d2b68, rakudo-jvm 0d2b68, rakudo-moar 0d2b68: OUTPUT«(Num)␤»

[10:47] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«Num()␤»

[10:52] * grondilu would have been happy with a Rat

[10:57] *** woolfy left
[10:59] *** woosley left
[11:00] *** kurahaupo_mobile joined
[11:03] *** lizmat left
[11:06] <grondilu> std: my $x = 2; $x [R/]= 1; say $x;

[11:06] <camelia> std 09dda5b: OUTPUT«ok 00:01 125m␤»

[11:07] <grondilu> rn: my $x = 2; $x [R/]= 1; say $x;

[11:07] <camelia> niecza v24-109-g48a8de3: OUTPUT«0.5␤»

[11:07] <camelia> ..rakudo-parrot 0d2b68, rakudo-jvm 0d2b68, rakudo-moar 0d2b68: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Preceding context expects a term, but found infix = instead␤at /tmp/tmpfile:1␤------> [32mmy $x = 2; $x [R/]=[33m⏏[31m 1; say $x;[0m␤»

[11:07] *** regreg joined
[11:10] *** kurahaupo_mobile left
[11:32] *** ingy left
[11:32] *** ingy joined
[11:38] *** revdiablo left
[11:38] *** denis_boyun joined
[11:39] *** revdiablo joined
[11:52] *** jtpalmer left
[11:53] *** ivan`` left
[11:55] *** yoleaux left
[11:55] *** jtpalmer joined
[11:59] *** ivan`` joined
[12:05] <timotimo> grondilu: rats have integers as their nom and denom, how are they supposed to store an inf in one of these? :(

[12:05] <timotimo> FROGGS: can you use gdb?

[12:06] <timotimo> maybe my gdb python scripts will be of a bit of assistance?

[12:07] <FROGGS> timotimo: I think Int is specced to be able to store Inf as well

[12:07] <FROGGS> timotimo: I can use gdb, yes

[12:07] <FROGGS> but I am not sure for what I'd need gdb right now :o)

[12:08] <timotimo> if i build a frame filter that shows the current file and line of the interpreter in the backtrace

[12:08] <timotimo> would that help?

[12:10] <FROGGS> I try that perhaps this evening, when I know where I will start looking

[12:30] * corecatcher slaps timotimo 

[12:35] <grondilu> timotimo: I meant that */Inf could return 0.Rat instead of 0.Num

[12:35] <grondilu> rn: say .WHAT given 1/Inf

[12:35] <camelia> rakudo-parrot 0d2b68, rakudo-jvm 0d2b68, rakudo-moar 0d2b68: OUTPUT«(Num)␤»

[12:35] <camelia> ..niecza v24-109-g48a8de3: OUTPUT«Num()␤»

[12:37] <timotimo> oh. huh.

[12:40] <timotimo> corecatcher: "you must log in with services to message this user"

[12:42] *** SamuraiJack joined
[12:48] <timotimo> corecatcher: check your status window, i sent you an irc invite

[12:57] *** yoleaux joined
[12:57] *** ChanServ sets mode: +v yoleaux

[13:02] *** Ven joined
[13:04] *** regreg left
[13:04] *** regreg joined
[13:08] *** spider-mario joined
[13:23] <Ven> omfg spider-mario est un perl6-eur :o

[13:24] <spider-mario> pourquoi cette surprise ?

[13:24] <Ven> je sais pas, ca me fait juste rire de voir des pseudo d'il y a longtemps

[13:25] <Ven> mais oui tant mieux :)

[13:33] <Util> r: my     $a = 3; say ++$a;

[13:33] <camelia> rakudo-parrot 0d2b68, rakudo-jvm 0d2b68, rakudo-moar 0d2b68: OUTPUT«4␤»

[13:34] <Util> r: my int $a = 3; say ++$a;

[13:34] <camelia> rakudo-moar 0d2b68: OUTPUT«No such method 'STORE' for invocant of type 'Int'␤  in sub prefix:<++> at src/gen/m-CORE.setting:4344␤  in sub prefix:<++> at src/gen/m-CORE.setting:1758␤  in block  at /tmp/tmpfile:1␤␤»

[13:34] <camelia> ..rakudo-parrot 0d2b68: OUTPUT«Cannot modify an immutable value␤  in sub prefix:<++> at gen/parrot/CORE.setting:4348␤  in sub prefix:<++> at gen/parrot/CORE.setting:1762␤  in block  at /tmp/tmpfile:1␤␤»

[13:34] <camelia> ..rakudo-jvm 0d2b68: OUTPUT«Cannot modify an immutable value␤  in sub prefix:<++> at gen/jvm/CORE.setting:4344␤  in sub prefix:<++> at gen/jvm/CORE.setting:1758␤  in block  at /tmp/tmpfile:1␤␤»

[13:34] <Util> ???

[13:35] <Util> r: my int $a is rw = 3; say ++$a;

[13:35] <camelia> rakudo-parrot 0d2b68, rakudo-jvm 0d2b68, rakudo-moar 0d2b68: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Can't use unknown trait 'is rw' in a variable declaration.␤at /tmp/tmpfile:1␤------> [32mmy int $a is rw [33m⏏[31m= 3; say ++$a;[0m␤   …»

[13:37] *** eviljonny joined
[13:38] *** nsh left
[13:39] *** sftp left
[13:40] <timotimo> Util: known deficiency :(

[13:40] <jnthn> $a + 1

[13:40] <jnthn> or $a = $a + 1

[13:41] *** sftp joined
[13:42] <timotimo> += 1 will work, too

[13:42] <timotimo> it will also work inside expressions

[13:42] <timotimo> r: my int $a = 1; say ($a += 1) * ($a += 1)

[13:42] <camelia> rakudo-moar 0d2b68: OUTPUT«No such method 'STORE' for invocant of type 'Int'␤  in block  at src/gen/m-CORE.setting:16455␤  in block  at /tmp/tmpfile:1␤␤»

[13:42] <camelia> ..rakudo-jvm 0d2b68: OUTPUT«Cannot modify an immutable value␤  in block  at gen/jvm/CORE.setting:16458␤  in block  at /tmp/tmpfile:1␤␤»

[13:42] <camelia> ..rakudo-parrot 0d2b68: OUTPUT«Cannot modify an immutable value␤  in block  at gen/parrot/CORE.setting:16705␤  in block  at /tmp/tmpfile:1␤␤»

[13:43] <timotimo> oh

[13:43] <timotimo> r: my int $a = 1; say ($a = $a + 1) * ($a = $a + 1)

[13:43] <camelia> rakudo-parrot 0d2b68, rakudo-jvm 0d2b68, rakudo-moar 0d2b68: OUTPUT«6␤»

[13:43] <timotimo> hm, so it's pre-increment always

[13:43] <timotimo> that makes sense

[13:43] *** BenGoldberg joined
[13:44] <jnthn> The issue is simply that we need a way to refer to natives container-style, *but* that we can also inline away in the common cases (like ++), otherwise we'll end up with $a++ being a load slower than $a = $a + 1...

[13:46] <jnthn> ...so it's one of those annoying "harder than it looks" problems.

[13:46] *** rurban joined
[13:48] <FROGGS> to its defense it would be easy to fix this wrongish

[13:48] *** eviljonny left
[13:51] *** genehack_ left
[13:53] *** genehack joined
[14:03] *** jnap joined
[14:06] <Util> timotimo, jnthn, FROGGS: Thanks!

[14:12] *** kbaker joined
[14:12] <[Coke]> moritz: http://planeteria.org/perl6/ has been updated. Give it a few hours to refresh, i guess.

[14:16] *** grondilu left
[14:17] <timotimo> thank you, [Coke] 

[14:18] <timotimo> you can also remove Konrad Borowski from the subscriptions, as that just 404s nowadays :(

[14:21] *** johnmilton joined
[14:29] *** xenoterracide joined
[14:32] *** regreg left
[14:32] *** colomon joined
[14:36] <[Coke]> timotimo: removed. again, may take some time for the UI to reflect.

[14:37] <timotimo> sure

[14:37] <timotimo> thank you

[14:42] *** xinming joined
[14:43] <TimToady> FROGGS: not only would it be easy to fix wrongish, but C and JVM have very different ideas of what is "wrongish"

[14:43] <TimToady> Gosling once told me that he intentionally designed the JVM to make it impossible to implement C on it

[14:43] *** rurban left
[14:45] <mathw> I can see why he'd take that approach

[14:46] <mathw> Although I take issue with the word 'impossible'. Maybe impossible to implement C in a way that runs at a decent speed...

[14:46] *** PZt left
[14:47] <mathw> But getting away from a variety of C-ish things is a primary driver in my choice of programming languages these days. So long, C++...

[14:47] <tadzik> I think the pointer arithmetic itself may be quit impossible

[14:48] <tadzik> as in: take a pointer to this struct and call whatever's 4 bytes further

[14:48] *** benabik left
[14:48] <mathw> tadzik: nonsense, you can simulate a memory layout for all your variables in a byte array

[14:48] <tadzik> oh, heh

[14:48] <tadzik> I guess

[14:49] <timotimo> time for ASM.jar

[14:49] <timotimo> oh, wait, that already exists

[14:49] <mathw> Not very practical I'll grant you, but it's *possible*

[14:49] <tadzik> well, if you get creative enough, you can write an x86 emulator and then a compiler for it :)

[14:49] <mathw> s/creative/masochistic/

[14:49] <tadzik> and then turtles all the way down

[14:49] *** bluescreen10 joined
[14:49] <mathw> surely it'd be easier to write an ARM emulator

[14:49] <mathw> and then just use GCC

[14:50] *** benabik joined
[14:51] <mathw> (yes you could use GCC with your x86 emulator, but ARM's instruction set is smaller)

[14:51] <timotimo> mips!

[14:53] *** btyler joined
[14:53] <jnthn> .oO( many instructions per second? )

[14:54] *** SamuraiJack left
[14:54] *** xinming left
[14:54] <mathw> A friend of mine's developing a microarchitecture in his spare time, I could use that

[14:55] <mathw> ...well, maybe after it's Turing-complete, not sure it is yet

[14:55] <timotimo> doesn't take much :))

[14:55] <[Coke]> anyone working on rakudo-turing ?

[14:56] <jnthn> mathw: Well, x86 showed that if you design...well...enough, you can end up with a single instruction being Turing-complete :P

[14:57] <mathw> jnthn: for some value of 'well', sure...

[14:59] *** PZt joined
[15:04] *** rurban joined
[15:06] *** xinming joined
[15:10] *** araujo joined
[15:21] *** pdcawley joined
[15:21] *** pdcawley left
[15:29] *** bluescreen10 left
[15:36] <timotimo> https://gist.github.com/timo/544d3d75bd92932e635d - current status of my moarvm heap analyzer

[15:39] *** kaare_ joined
[15:40] <tadzik> http://goo.gl/JN71PV stables :)

[15:40] *** kaare__ left
[15:40] *** thou joined
[15:40] <tadzik> timotimo++ # awesome stuff

[15:47] *** btyler left
[15:57] <[Coke]> timotimo++

[15:59] *** Psyche^_ joined
[16:03] *** Psyche^ left
[16:03] *** clkao left
[16:05] *** clkao joined
[16:12] *** salv0 left
[16:14] *** xfix left
[16:15] *** kaleem_ left
[16:15] *** denis_boyun left
[16:17] *** xfix joined
[16:19] <hoelzro> timotimo++ # nice!

[16:19] * hoelzro is back

[16:19] <FROGGS> wb hoelzro 

[16:19] <hoelzro> .tell btyler I did a little work on using ufo with different backends; let me know if you encounter any surprises

[16:19] <yoleaux> hoelzro: I'll pass your message to btyler.

[16:20] <hoelzro> thanks yoleaux!

[16:26] *** sqirrel joined
[16:26] *** kivutar joined
[16:27] *** pecastro left
[16:31] *** btyler joined
[16:36] <btyler> hoelzro: no surprises, your ufo fork was just what I was looking for. the vm autodetection is a nice touch :)

[16:36] <yoleaux> 16:19Z <hoelzro> btyler: I did a little work on using ufo with different backends; let me know if you encounter any surprises

[16:36] *** lowpro30 joined
[16:36] <hoelzro> btyler: glad you could make use of it =)

[16:36] <FROGGS> is there a PR for masak/ufo ?

[16:40] <hoelzro> FROGGS: yes

[16:41] <FROGGS> hoelzro++

[16:42] *** xenoterracide left
[16:45] <timotimo> except for "analyze the gen2, too" and "diff between two statistics", what else should i try to put into the heap analyzer?

[16:47] *** zakharyas left
[16:48] <TimToady> tell me which pointer I should've freed earlier to release a bunch of memory?

[16:48] *** kaleem joined
[16:50] <TimToady> I guess what would really be interesting to know (and hard to calculate) is how long we held onto each pointer after the last time any of its dependents was accessed

[16:52] *** kaleem left
[16:52] <TimToady> and things like how often we hang onto an entire list when we'll never visit the head again

[16:57] *** telex left
[16:58] *** treehug88 joined
[16:59] <FROGGS> ha!

[17:00] <FROGGS> I know what's wrong with panda

[17:00] <FROGGS> NOTHING!

[17:00] *** guru joined
[17:00] <FROGGS> dir() is supposed to return absolute paths, and it does not

[17:00] *** guru is now known as Guest84573

[17:00] *** Guest84573 is now known as ajr_

[17:01] <FROGGS> so panda descends into its own lib and tries to install itself when it should build/install ext/File__Find/lib

[17:02] *** lowpro30 left
[17:02] *** denis_boyun joined
[17:03] *** telex joined
[17:03] <timotimo> i'm progressively getting sicker :\

[17:03] <FROGGS> :/

[17:04] *** nsh joined
[17:04] *** lizmat joined
[17:04] <timotimo> i shall drive home and wrap myself up in blankets

[17:05] <timotimo> but first i shall acquire some tea

[17:05] *** panchiniak joined
[17:05] <FROGGS> and perhaps buy some drugs

[17:05] *** panchiniak is now known as Desu

[17:05] *** Desu is now known as DEUSU

[17:06] <timotimo> i have some left at home

[17:06] <timotimo> i have some with me right now! \o/

[17:06] *** DEUSU is now known as panchiniak

[17:06] <FROGGS> \o/

[17:06] <FROGGS> take all the things! /o/

[17:08] <dalek> panda/moar-support: 53b1d41 | (Tobias Leich)++ | lib/Panda/Fetcher.pm:

[17:08] <dalek> panda/moar-support: fix "my" stupidness

[17:08] <dalek> panda/moar-support: review: https://github.com/tadzik/panda/commit/53b1d41aed

[17:13] *** nsh left
[17:14] *** fhelmberger left
[17:16] <btyler> FROGGS: I'm still seeing a hang on building lib/Panda/Ecosystem.pm on the panda moar-support branch, like you mentioned the other day. is that a different problem?

[17:16] <FROGGS> btyler: it is a different problem but I am sure it will vanish

[17:16] <FROGGS> (at least it will be hidden)

[17:18] <FROGGS> ==> Successfully installed File::Find \o/

[17:18] <FROGGS> that is its local checkout, but still

[17:19] *** denis_boyun_ joined
[17:19] <FROGGS> -                    $elem := $.SPEC.catfile($!path, $elem) if self.is-relative && self ne '.';

[17:19] <FROGGS> +                    $elem := $.SPEC.catfile($!path, $elem) if self ne '.';

[17:19] <FROGGS> that is the patch btw in rakduo/src/core/IO.pm

[17:20] <FROGGS> commute &

[17:21] *** denis_boyun left
[17:26] *** FROGGS left
[17:29] *** denis_boyun joined
[17:29] *** denis_boyun_ left
[17:33] *** denis_boyun__ joined
[17:34] *** denis_boyun left
[17:38] *** denis_boyun__ left
[17:39] *** FROGGS joined
[17:40] *** pdcawley joined
[17:41] *** pdcawley left
[17:42] *** FROGGS_ joined
[17:43] *** denisboyun joined
[17:44] *** FROGGS left
[17:47] <timotimo> TimToady: what you wished for with regards to the pointers sounds pretty hard from my point of view; i don't exactly have a ways to follow moving objects around

[17:48] <BenGoldberg> gps tracking! ;)

[17:48] *** denisboyun left
[17:50] <timotimo> well, one could introduce an extra field to MVMObject that is just a counter that the allocator counts up every time it allocates any object

[17:50] <timotimo> that way you'd have a global identifier

[17:51] *** denisboyun joined
[17:54] *** nsh joined
[17:54] *** nsh left
[17:54] *** nsh joined
[17:56] *** woolfy joined
[18:01] *** dakkar left
[18:01] *** ens left
[18:03] *** bjz left
[18:04] *** bjz joined
[18:06] *** arnsholt joined
[18:06] <arnsholt> O hai! o/

[18:08] <timotimo> hey arnsholt!

[18:08] <timotimo> how's life?

[18:09] *** denisboyun left
[18:10] <sjn> arnsholt: heya

[18:10] *** sqirrel left
[18:13] <arnsholt> Life's good. Teaching, thesis writing

[18:13] <arnsholt> Trying to get callbacks working on JVM

[18:13] <timotimo> time to start with diffing the histograms

[18:13] <sjn> arnsholt: sent you mail about dconway in Oslo \o/

[18:13] <arnsholt> I think I'm mostly there, but JNA keeps yelling at me for some reason

[18:13] <arnsholt> sjn: Cheers!

[18:13] <timotimo> d'oh :(

[18:15] <arnsholt> Yeah, 'tis a bit annoying

[18:15] * timotimo finally signs up for GPW2014

[18:23] <timotimo> i ought to do something 6y there

[18:24] *** Adriaaan joined
[18:25] *** ens joined
[18:27] *** pecastro joined
[18:34] *** treehug88 left
[18:35] *** [particle]1 joined
[18:36] *** treehug88 joined
[18:38] *** [particle] left
[18:38] <hoelzro> think I found a mokudo bug

[18:38] <hoelzro> r: printf '%s - %s'

[18:38] <camelia> rakudo-parrot 0d2b68, rakudo-jvm 0d2b68, rakudo-moar 0d2b68: OUTPUT«Too many directives: found 2, but no arguments after the format string␤␤»

[18:39] <hoelzro> hmm

[18:39] <hoelzro> it infinite loops on my machine

[18:42] <timotimo> REPL?

[18:45] *** FROGGS_ is now known as FROGGS

[18:45] <raydiak> morning #perl6

[18:45] <timotimo> hey raydiak 

[18:46] <raydiak> hiya timotimo 

[18:46] <FROGGS> ==> Successfully installed panda

[18:46] <timotimo> \o/

[18:46] <FROGGS> :o)

[18:46] <raydiak> w/moar?

[18:46] <timotimo> that's the implication

[18:46] <raydiak> hooray :)

[18:47] <raydiak> a question came to mind last night: what happens if you inherit from multiple classes with different reprs?

[18:48] <timotimo> i can't imagine how that would be supported

[18:49] <raydiak> r: class Foo is Array is Str {}; say Foo.new.REPR

[18:49] <camelia> rakudo-parrot 0d2b68, rakudo-jvm 0d2b68, rakudo-moar 0d2b68: OUTPUT«P6opaque␤»

[18:49] <hoelzro> timotimo: yes

[18:49] <hoelzro> FROGGS++

[18:50] <raydiak> erm, well...what uses a repr other than p6opaque? 

[18:50] <timotimo> nothing, afaict

[18:51] <timotimo> oh

[18:51] <timotimo> well CStruct if you do NativeCall

[18:51] <raydiak> thought I remembered reading about several different reprs somewhere, but can't recall...perhaps I'm imagining issues which don't exist

[18:52] <raydiak> eg P6Hash, etc

[18:52] <timotimo> no, that would be VMArray and VMHash

[18:52] *** SamuraiJack joined
[18:52] *** raiph joined
[18:52] <timotimo> they are wrapped by a P6opaque if you're in perl6 and exposed directly if you're in nqp

[18:52] <FROGGS> m: say nqp::list.REPR.name

[18:52] <camelia> rakudo-moar 0d2b68: OUTPUT«Cannot find method 'name': no method cache and no .^find_method␤  in block  at /tmp/fmi6JwoAqv:1␤␤»

[18:55] *** tgt joined
[18:55] *** jnap left
[18:59] <raydiak> can you create a class which can act as (for example) an array or a string? I guess that'd just be an array with an overloaded .Str method?

[18:59] <timotimo> not necessarily

[18:59] <timotimo> you may want to just have an attribute that is box_target

[19:00] <raydiak> what is box_target?

[19:00] <timotimo> it tells P6opaque where to put native strings/ints/doubles

[19:01] *** jnap joined
[19:01] <timotimo> you just have to write "has int $foo is box_target;" i think

[19:01] <raydiak> oh neat

[19:02] *** woolfy left
[19:03] <dalek> rakudo/nom: 1ce379e | (Tobias Leich)++ | src/core/IO.pm:

[19:03] <dalek> rakudo/nom: fix result of dir()

[19:03] <dalek> rakudo/nom: 

[19:03] <dalek> rakudo/nom: This confuddled panda so much, that it tried to installed itself rather

[19:03] <dalek> rakudo/nom: then the requested module.

[19:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1ce379eeb0

[19:04] <FROGGS> er, s/installed/install/

[19:04] <FROGGS> -.-

[19:04] *** kaare_ left
[19:05] *** Rotwang joined
[19:06] *** lizmat left
[19:06] <raydiak> FROGGS++

[19:09] *** Sqirrel joined
[19:11] <colomon> FROGGS++ # panda on moar

[19:12] <FROGGS> well, it says that it installed itself correctly, but this seems to be a lie

[19:12] <btyler> yeah, it misses the executable, at least for me

[19:13] <FROGGS> there is only the site/lib/panda/state, nothing else

[19:15] *** darutoko left
[19:17] *** SamuraiJack left
[19:18] <FROGGS> hmpf, panda installs to panda/.work/<mumble>/home/froggs/dev/panda/...

[19:19] <timotimo> heh, oops :)

[19:19] <hoelzro> this code:

[19:19] <hoelzro> .say for @modules>>.name.chars;

[19:19] <hoelzro> is functionally equivalent to .name.chars.say for @modules, right?

[19:19] <timotimo> no

[19:19] <timotimo> it calls .chars on the result of @modules.map: *.name

[19:20] <timotimo> so it calls .chars on the list, not the individual items

[19:20] <hoelzro> ooooooooooohhhhhhhh

[19:20] <hoelzro> that explains this obscenely large value

[19:20] <hoelzro> thanks timotimo

[19:20] <timotimo> and also that you only get one value :)

[19:21] <hoelzro> so @modules>>.name>>.chars, then?

[19:21] <timotimo> yeah

[19:21] *** zakharyas joined
[19:26] *** rurban left
[19:27] <TimToady> timotimo: I wasn't seriously suggesting you do that; it was just wishing for a pony

[19:28] <timotimo> maybe someone will at some point

[19:28] <timotimo> or someone will offer me a big sum of money :)

[19:31] * TimToady hopes timotimo++ isn't coming down what whatever TimToady has, which has so far lasted 18 days...

[19:31] <timotimo> probably not. scratchy throat, runny nose, achey head

[19:31] <timotimo> seems like a regular old flu

[19:31] <timotimo> with unfortunate timing

[19:33] <arnsholt> Right, at least now I know *why* JNA is complaining

[19:34] <arnsholt> Next step, how to implement it without codegenning ALL THE THINGS...

[19:35] *** lue left
[19:50] *** sftp left
[19:50] <arnsholt> Right, I think I can make this work. But that'll be tomorrow methinks

[19:51] *** virtualsue joined
[19:51] <tadzik> FROGGS++ (wizard)

[19:51] <FROGGS> *g*

[19:52] <arnsholt> tadzik: With a bit of luck I'll have callbacks working tomorrow or during the weekend. Your asteroids game/SDL stuff still potentially a user for it? =)

[19:52] <timotimo> \o/

[19:52] <timotimo> arnsholt: can i do anything to help you get a quick start with nativecall on moarvm?

[19:53] <tadzik> arnsholt: 'fcourse! What's more, I'm in Oslo next week :)

[19:53] *** sftp joined
[19:54] <hoelzro> alright, #perl6 folk!  I updated my "Rakudo * modules on Mokudo" gist, now with more accurate results! https://gist.github.com/anonymous/8982533

[19:55] <TimToady> hoelzro++

[19:55] *** tgt left
[19:55] <hoelzro> \o/

[19:55] <arnsholt> timotimo: You can start implementing stuff, if you want to

[19:55] <hoelzro> I also prettified the summary

[19:55] <hoelzro> and I included the script I wrote to generate the results

[19:56] <timotimo> arnsholt: that seems like a daunting thing to ask of me :P

[19:56] <hoelzro> a good next step would probably be to go through everything on modules.perl6.org

[19:56] <arnsholt> timotimo: It's mostly a question of de-Parrotifying the Parrot version, so in one way less complicated than the JVM bits

[19:57] <timotimo> hmm

[19:57] <arnsholt> But I think following the path I've taken on JVM should be sound for the Moar version as well

[19:57] <timotimo> what file(s) would you point me at in order to get a good overview?

[19:58] <arnsholt> The ops, in src/vm/parrot/ops/nqp_dyncall.ops, and the NativeCall REPRs (CArray, CPointer, CStr, CStruct, NativeCall)

[19:59] <timotimo> ISTR not_gerd doing a lot of work on c structure support

[19:59] <arnsholt> Yeah, he did a lot

[19:59] <timotimo> i don't really know where that is/went and i haven't seen him online in a long time

[19:59] <arnsholt> But he started changing lots of the internal structures, so I'm not sure how much of that stuff fits into the expectations of NativeCall as it is today

[20:00] *** sftp left
[20:00] *** sftp joined
[20:00] <arnsholt> There are two ops that are needed to implement most of the things: nqp::buildnativecall and nqp::nativecall

[20:00] <tadzik> yeah, not_gerd mysteriously disappeared :(

[20:01] <tadzik> I hope he's alright

[20:01] <arnsholt> So if you set up those two ops in NQP/Moar, and start building the int/num/string stuff, we're well on our way

[20:01] <timotimo> probably swallowed up by finishing his university stuff?

[20:01] <tadzik> I'd love to see stuff on JVM, because parallel GC

[20:01] <arnsholt> After that, we can start moving the REPRs over and plugging them into the ops

[20:02] <FROGGS> omfg /o\

[20:02] <tadzik> Seeing Parrot taking 200ms to render a frame because GC demotivated me a bit :)

[20:02] <arnsholt> Hehe, I can see how that'll happen, yeah

[20:02] <timotimo> i should build buildnativecall and nativecall and *then* build the reprs?

[20:02] <timotimo> that seems backwards to me right now

[20:02] <arnsholt> Yeah

[20:02] <FROGGS> the million dollar question: what (the hell!) is wrong here? https://github.com/tadzik/panda/blob/moar-support/lib/Panda/Builder.pm#L88

[20:02] <arnsholt> int/num/string arguments don't need custom reprs

[20:03] <arnsholt> Which means that you can ignore the REPRs while you get the basic infrastructure working

[20:03] <timotimo> ah, ok

[20:03] <timotimo> i suppose the test suite will give me a bunch of simple things to try out at first?

[20:04] <arnsholt> That functionality is exercised by the first three test files in NativeCall

[20:04] <arnsholt> Yeah

[20:04] <arnsholt> 01-argless.t, 02-simple-args.t and 03-simple-returns.t

[20:05] <arnsholt> Then there's one each for arrays, structs, pointers, and callbacks, and 07-writebarrier.t (which is a terrible name) which tests a third op which can ignore for now

[20:06] <arnsholt> tadzik: When're you in Oslo next week, BTW?

[20:07] *** [Sno] joined
[20:07] <FROGGS> Compiling lib/Panda.pm to mbc

[20:07] <FROGGS> ===SORRY!===

[20:07] <FROGGS> STable conflict detected during deserialization.

[20:07] <FROGGS> ó.ò

[20:07] <arnsholt> timotimo: Oh, and on Moar you don't have to do any codegeneration =)

[20:07] <timotimo> oh!

[20:08] <timotimo> that sounds helpful :)

[20:08] <arnsholt> There's computing struct layouts OTOH, but that can pretty much be stolen outright from Parrot =)

[20:08] <timotimo> FROGGS: that error seems to pop up *every*where nowadays :\

[20:08] <FROGGS> timotimo: yeah, I was able to work around it in v5 though

[20:08] <arnsholt> Codegen is required on JVM since we're a bit further away from raw bytes there

[20:09] <timotimo> right

[20:11] <FROGGS> r: "abc" ~ "def" or say(42)

[20:11] <btyler> FROGGS: I hit that when I tried to manually install panda using ufo :(

[20:11] <camelia> rakudo-jvm 1ce379: OUTPUT«(timeout)»

[20:11] <camelia> ..rakudo-parrot 1ce379, rakudo-moar 1ce379: ( no output )

[20:11] <timotimo> j: say "hi"

[20:11] <FROGGS> btyler: yeah, now you don't even need ufo for that :P

[20:11] <camelia> rakudo-jvm 1ce379: OUTPUT«hi␤»

[20:11] *** tgt joined
[20:11] <FROGGS> r: shell "abc" ~ "def" or say(42)

[20:11] <camelia> rakudo-jvm 1ce379: OUTPUT«42␤»

[20:11] <camelia> ..rakudo-parrot 1ce379, rakudo-moar 1ce379: OUTPUT«shell is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting:2␤  in sub shell at src/RESTRICTED.setting:7␤  in block  at /tmp/tmpfile:1␤␤»

[20:11] <btyler> FROGGS: progress! now we can get our errors automatically :)

[20:11] <FROGGS> r: shell "ls" or say(42)

[20:11] <camelia> rakudo-jvm 1ce379: ( no output )

[20:11] <camelia> ..rakudo-parrot 1ce379, rakudo-moar 1ce379: OUTPUT«shell is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting:2␤  in sub shell at src/RESTRICTED.setting:7␤  in block  at /tmp/tmpfile:1␤␤»

[20:12] *** Sqirrel_ joined
[20:12] *** Sqirrel left
[20:14] *** rurban joined
[20:14] <dalek> panda/moar-support: 3793174 | (Tobias Leich)++ | lib/Panda/Fetcher.pm:

[20:14] <dalek> panda/moar-support: properly clean up the path

[20:14] <dalek> panda/moar-support: 

[20:14] <dalek> panda/moar-support: Before it was kind of a no-op, since the methods are not called when written

[20:14] <dalek> panda/moar-support: this way in a regex.

[20:14] <dalek> panda/moar-support: review: https://github.com/tadzik/panda/commit/37931743f9

[20:14] <dalek> panda/moar-support: 20bd234 | (Tobias Leich)++ | lib/Panda/Builder.pm:

[20:14] <dalek> panda/moar-support: call shell() with cmd only, and fail() on its result

[20:14] <dalek> panda/moar-support: review: https://github.com/tadzik/panda/commit/20bd234108

[20:14] <FROGGS> btyler: do you have any clue what causes the STable conflict?

[20:15] *** pdcawley joined
[20:15] *** pdcawley left
[20:15] <btyler> FROGGS: not in the slightest. I got about as far as finding where that error is thrown in Moar src (src/6model/serialization.c 2059), and my eyes glazed over a bit

[20:16] <FROGGS> yeah, I am more wondering what in panda makes it pop up

[20:17] *** pdcawley joined
[20:17] *** pdcawley left
[20:18] <hoelzro> [commentary on my Perl 6 style would also be welcome =)]

[20:19] *** pdcawley joined
[20:19] *** pdcawley left
[20:20] <tadzik> arnsholt: tuesday-friday

[20:21] *** lue joined
[20:21] <tadzik> FROGGS: well, it's creating directories so it can copy stuff inside them later. I guess...

[20:21] <tadzik> oh, #88...

[20:22] <tadzik> well, isn't it self-explanatory? :)

[20:23] *** ajr_ left
[20:31] <FROGGS> tadzik: it is, but also fails

[20:31] <tadzik> how so?

[20:31] <FROGGS> it does not fail with the parens though, due to some weirdness

[20:32] <segomos> did async stop working with jvm?

[20:37] <timotimo> it's now called "start"

[20:37] <timotimo> ... er, is that correct?

[20:41] <segomos> ahh that is working, thank you

[20:42] <PerlJam> segomos: see http://jnthn.net/papers/2013-npw-conc.pdf

[20:46] *** rurban left
[20:49] <segomos> thanks, familiar with these from nodejs, this way of doing it looks far more intuitive.  haven't screwed around with it since the word was 'async'

[20:49] <segomos> this doc is p good

[20:49] <segomos> thanks jnthn 

[20:49] <segomos> and perljam

[20:50] <hoelzro> so Mokudo gives me "Malformed UTF-8" when trying to decode the URI-encoded version of 'ǂ'

[20:50] <hoelzro> I take it MoarVM is missing some Unicode information?

[20:52] <timotimo> hm. i wonder what exactly it's trying to do

[20:52] <timotimo> what does the uri-encoded version look like? %1234?

[20:52] *** xenoterracide joined
[20:52] <hoelzro> %c7%82

[20:53] <hoelzro> well, %C7%82

[20:53] <hoelzro> also, I get a fun error when loading URI from blib/lib/URI.moarvm versus lib/URI.pm

[20:53] <FROGGS> r: say 'ǂ'

[20:53] <timotimo> huh, interesting.

[20:53] <camelia> rakudo-parrot 1ce379, rakudo-jvm 1ce379, rakudo-moar 1ce379: OUTPUT«ǂ␤»

[20:54] <FROGGS> r: say "\c[C7,82]"

[20:54] <camelia> rakudo-parrot 1ce379, rakudo-jvm 1ce379, rakudo-moar 1ce379: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/tmpfile␤Unrecognized character name C7␤at /tmp/tmpfile:1␤------> [32msay "\c[C7[33m⏏[31m,82]"[0m␤»

[20:54] <FROGGS> r: say "\x[C7,82]"

[20:54] <camelia> rakudo-parrot 1ce379, rakudo-jvm 1ce379, rakudo-moar 1ce379: OUTPUT«Ç␤»

[20:55] <TimToady> r: say Buf.new(0xC7,0x82).decode("UTF-8")

[20:55] <camelia> rakudo-parrot 1ce379, rakudo-jvm 1ce379, rakudo-moar 1ce379: OUTPUT«ǂ␤»

[20:55] <FROGGS> hoelzro: what is the funny error btw?

[20:56] <FROGGS> the STable thing is not funny btw :P

[20:58] <hoelzro> FROGGS: it's in the gist I posted earlier

[20:59] <hoelzro> https://gist.github.com/anonymous/8982533

[20:59] <hoelzro> URI.txt

[21:00] <FROGGS> this I guess: https://gist.github.com/anonymous/8982533#file-uri-txt-L25

[21:01] <hoelzro> yes

[21:01] *** dayangkun left
[21:02] <FROGGS> r: my %default_port = ( ftp => 21 ); say %default_port{'ftp'}.Int // Int;

[21:02] <camelia> rakudo-parrot 1ce379, rakudo-jvm 1ce379, rakudo-moar 1ce379: OUTPUT«21␤»

[21:02] <FROGGS> r: my %default_port = ( ftp => 21 ); say %default_port{'hurz'}.Int // Int;

[21:02] <camelia> rakudo-parrot 1ce379, rakudo-jvm 1ce379, rakudo-moar 1ce379: OUTPUT«No such method 'Int' for invocant of type 'Any'␤  in block  at /tmp/tmpfile:1␤␤»

[21:03] <hoelzro> offending line in URI (the malformed UTF-8 issue): @rc.=map(*.encode('latin-1').decode('UTF-8'))

[21:03] <hoelzro> anyone know why the encode to latin-1?

[21:04] <TimToady> because otherwise it's a string, not a buffer

[21:04] <FROGGS> r: package P { my %dp = ( ftp => 21 ); our sub sp(Str $scheme) { %dp{$scheme}.Int // Int } }; P.sp('hurz') # <--- jnthn

[21:04] <camelia> rakudo-parrot 1ce379, rakudo-jvm 1ce379: OUTPUT«No such method 'sp' for invocant of type 'P'␤  in block  at /tmp/tmpfile:1␤␤»

[21:04] <camelia> ..rakudo-moar 1ce379: OUTPUT«Cannot invoke null object␤  in block  at /tmp/tmpfile:1␤␤»

[21:04] <FROGGS> ohh, wait

[21:05] <timotimo> should it have been :: instead?

[21:05] <timotimo> or did you want to import P?

[21:05] *** araujo left
[21:05] <timotimo> and now: hilbert curves!

[21:05] <hoelzro> ah ha

[21:06] <hoelzro> TimToady: why Latin-1, though?

[21:06] <TimToady> to get all eight bits through, presumably--it's just an alias for iso-8859-1

[21:07] <TimToady> it just changes the interpretation of the high bits from latin-1 to utf-8 without actually changing the bits

[21:08] *** guru joined
[21:08] *** guru is now known as ajr_

[21:09] <FROGGS> r: package P { my %dp = ( ftp => 21 ); our sub sp(Str $scheme) { %dp{$scheme}.Int // Int } }; say P::sp('ftp') # I dunno why URI fails

[21:09] <camelia> rakudo-parrot 1ce379, rakudo-jvm 1ce379, rakudo-moar 1ce379: OUTPUT«21␤»

[21:13] *** Rotwang left
[21:25] *** dayangkun joined
[21:29] *** lowpro30 joined
[21:30] *** spider-mario left
[21:34] *** lowpro30 left
[21:35] *** renormalist joined
[21:37] <dalek> faq: 12e4f15 | (Prog Rammer)++ | answers.md:

[21:37] <dalek> faq: time -> type fix

[21:37] <dalek> faq: review: https://github.com/perl6/faq/commit/12e4f15a62

[21:37] <dalek> faq: 0a89f7c | (Prog Rammer)++ | answers.md:

[21:37] <dalek> faq: creates -> created

[21:37] <dalek> faq: review: https://github.com/perl6/faq/commit/0a89f7c991

[21:37] <dalek> faq: cd82896 | (Brent Laabs)++ | answers.md:

[21:37] <dalek> faq: Merge pull request #2 from prammer1/minor-fixes

[21:37] <dalek> faq: 

[21:37] <dalek> faq: Minor fixes (look good to me)

[21:37] <dalek> faq: review: https://github.com/perl6/faq/commit/cd828968a8

[21:42] *** lizmat joined
[21:44] *** rurban joined
[21:47] <dalek> panda/moar-support: a1ab2f6 | (Tobias Leich)++ | lib/Panda/Fetcher.pm:

[21:47] <dalek> panda/moar-support: use IO::Spec.catpath to make windows happy

[21:47] <dalek> panda/moar-support: review: https://github.com/tadzik/panda/commit/a1ab2f6903

[21:48] <timotimo> https://gist.github.com/timo/544d3d75bd92932e635d <- moarvm heap analyzer now with a proper diff at the bottom

[21:49] *** lowpro30 joined
[21:49] <timotimo> (except the diff ought to be in the other direction, but that was easy to fix just now)

[21:54] <timotimo> updated with diff in the right direction

[21:55] <FROGGS> tadzik: ping

[21:55] <timotimo> ← now ready to receive praise

[21:56] <benabik> timotimo++

[21:56] <timotimo> thanks :)

[21:57] <FROGGS> timotimo: what do all these numbers mean? :o)

[21:57] <FROGGS> some of them must be counts and the size in bytes

[21:57] *** zakharyas left
[21:58] <timotimo> that's right

[21:58] <FROGGS> sizes of objects/stables:

[21:58] <FROGGS> 24 [ 1 24

[21:58] <FROGGS> 32 [========================= 15497 495.904

[21:58] <timotimo> if there's two columns, the right one is for size in bytes, the left for count

[21:58] <timotimo> 24 * 1 = 24 :)

[21:58] <FROGGS> I see

[21:58] <FROGGS> timotimo++ then :o)

[21:59] <timotimo> i think i shall push this now.

[22:00] *** dalek left
[22:00] *** dalek joined
[22:00] *** ChanServ sets mode: +v dalek

[22:02] <FROGGS> File::Find's tests are not where windows friendly :/

[22:07] *** aindilis joined
[22:07] *** arnsholt left
[22:12] <hoelzro> timotimo: holy crap, that's awesome work

[22:12] <timotimo> thanks :3

[22:13] *** djanatyn1 is now known as djanatyn

[22:24] *** araujo joined
[22:29] <raydiak> whoa, nice; timotimo++

[22:32] <hoelzro> r: "\x[C7,82]".encode('latin-1')

[22:32] <camelia> rakudo-parrot 1ce379, rakudo-jvm 1ce379, rakudo-moar 1ce379: ( no output )

[22:32] <hoelzro> r: say "\x[C7,82]".encode('latin-1')

[22:32] <camelia> rakudo-moar 1ce379: OUTPUT«Buf:0x<c7 3f>␤»

[22:32] <camelia> ..rakudo-parrot 1ce379, rakudo-jvm 1ce379: OUTPUT«Buf:0x<c7 82>␤»

[22:32] <timotimo> oh well :o

[22:32] <hoelzro> that's what's breaking mokudo + URI

[22:32] <hoelzro> (well, aside from the blib loading)

[22:37] *** kaare_ joined
[22:38] *** tgt left
[22:41] *** kbaker left
[22:47] *** raiph left
[22:50] <hoelzro> is it ok to add a failing list to NQP, or should I fudge it somehow?

[22:50] <hoelzro> I'm wondering how clean we want to keep things

[22:54] *** treehug88 left
[22:54] <jnthn> hoelzro: I prefer we keep it clean

[22:55] <hoelzro> ok

[22:55] <jnthn> I think we support todo

[22:55] <hoelzro> I guess that just means I should try to fix it =)

[22:55] * timotimo votes in favor :P

[22:55] *** denisboyun joined
[22:57] <jnthn> srsly? Moar's latin-1 decoded is bust? :/

[22:58] <jnthn> *decoder

[22:58] <hoelzro> yeah =/

[22:58] <hoelzro> I'm digging in now

[22:59] <jnthn> I had it open 'cus I was about to teach it about decode streams

[22:59] <jnthn> We should probably fix it before I do that :)

[23:02] <jnthn> uh...

[23:02] <hoelzro> ?

[23:02] *** lowpro30 left
[23:03] * timotimo expects a "how was this supposed to work at all?!" :)

[23:03] <jnthn> git log src/strings/latin1.c

[23:03] <jnthn> ...

[23:03] <jnthn> fix latin1 so it's right-er.  again, no idea how to test it.

[23:03] <hoelzro> right-er is what I usually do with Moar =P

[23:05] <jnthn> Moar betterer...

[23:09] <jnthn> It appears to have a hard-coded binary search. I wonder if that was coded by hand.

[23:10] <hoelzro> heh, I just got there in the source myself

[23:13] <hoelzro> something about map(*.encode('latin-1').decode('utf-8')) still feels off to me

[23:13] <hoelzro> I get %c7%82, so I create "\x[c7,82]"

[23:13] <hoelzro> I feel like URI should be building a Buf here at the beginning

[23:15] <hoelzro> because "\x[c7,82]" has two codepoints: 0xC7 and 0x82, right?

[23:15] *** Adriaaan left
[23:15] <hoelzro> so it's no wonder that 0x82 gets squashed down to '?'

[23:18] <jnthn> r: "\x[c7,82]".say

[23:18] <camelia> rakudo-parrot 1ce379, rakudo-jvm 1ce379, rakudo-moar 1ce379: OUTPUT«Ç␤»

[23:18] *** telex left
[23:18] <jnthn> r: "\x[c7,82]".chars

[23:18] <camelia> rakudo-parrot 1ce379, rakudo-jvm 1ce379, rakudo-moar 1ce379: ( no output )

[23:18] <jnthn> r: "\x[c7,82]".chars.say

[23:18] <camelia> rakudo-parrot 1ce379, rakudo-jvm 1ce379, rakudo-moar 1ce379: OUTPUT«2␤»

[23:19] <jnthn> .u 0x82

[23:19] <yoleaux> No characters found

[23:20] <timotimo> okay, i think it's time for me to go hug my hot water bottle and try for some sleep

[23:20] *** telex joined
[23:20] <timotimo> o/

[23:20] <hoelzro> timotimo: feel better!

[23:21] <jnthn> timotimo: Hope you feel well again soon!

[23:21] <timotimo> i'll give it my best, thanks :)

[23:22] <timotimo> .o( i also hope TimToady will feel well again soon! )

[23:22] <timotimo> http://www.google.org/flutrends/de/#DE-BW ← this seems to match my current status

[23:22] <timotimo> ah well.

[23:22] *** ajr_ left
[23:23] *** colomon left
[23:29] *** colomon joined
[23:32] *** denisboyun left
[23:42] *** lizmat left
[23:47] *** nebuchadnezzar left
[23:47] *** nebuchadnezzar joined
[23:49] <hoelzro> ok, I fixed URI instead of MoarVM

[23:50] <hoelzro> because I'm not well-versed enough to know if this is actually a problem with MoarVM itself

[23:55] *** kivutar left
