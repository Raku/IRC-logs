[00:06] <raydiak> hah ab5tract++

[00:07] *** ab5tract left
[00:07] <jercos> gotta turn my monitor upside down for it to work though :p

[00:08] <raydiak> nah just yer head :)

[00:11] <rjbs> TimToady: How did "bless" come to be called "bless"?

[00:19] *** atroxaper joined
[00:21] *** telex left
[00:22] *** telex joined
[00:22] *** telex left
[00:23] * raydiak guesses it has to do with how it anoints a referant into a class in p5

[00:24] *** atroxaper left
[00:27] *** telex joined
[00:29] *** araujo joined
[00:29] *** araujo left
[00:29] *** araujo joined
[00:35] *** Mouq joined
[00:38] *** ssqq joined
[00:40] <dalek> rakudo/nom: c91a583 | (Geoffrey Broadwell)++ | src/core/Temporal.pm:

[00:40] <dalek> rakudo/nom: Loosen Date.new(DateTime) to Date.new(Dateish) to simplify subclasses

[00:40] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c91a58332a

[00:48] *** oetiker joined
[01:21] *** dayangkun joined
[01:27] *** jerzi left
[01:27] *** dayangkun left
[01:42] *** raiph joined
[01:45] *** denis_boyun___ left
[02:10] *** atroxaper joined
[02:14] *** rmgk_ joined
[02:14] *** rmgk is now known as Guest84960

[02:14] *** Guest84960 left
[02:14] *** rmgk_ is now known as rmgk

[02:15] *** atroxaper left
[02:16] *** jimmy_ joined
[02:18] *** grettis left
[02:18] *** jimmy_ is now known as JimmyZ

[02:18] *** JimmyZ is now known as JimmyZ_

[02:54] *** chenryn joined
[02:55] *** tinyblak left
[02:56] *** tinyblak joined
[02:59] *** tinyblak_ joined
[03:00] *** konsolebox left
[03:01] *** pochi_ joined
[03:01] *** tinyblak left
[03:01] *** pochi left
[03:03] *** tinyblak_ left
[03:04] *** tinyblak joined
[03:04] *** tinyblak left
[03:05] *** tinyblak joined
[03:07] *** tinyblak_ joined
[03:07] *** aborazmeh left
[03:10] *** tinyblak left
[03:13] *** noganex_ joined
[03:13] *** konsolebox joined
[03:16] *** noganex left
[03:16] *** Mso150 joined
[03:27] *** BenGoldberg left
[03:41] <dalek> specs: 09480dd | (Rob Hoelz)++ | S99-glossary.pod:

[03:41] <dalek> specs: Document closure parameters in S99

[03:41] <dalek> specs: 

[03:41] <dalek> specs: I found the naming of closure parameters versus subsignatures

[03:41] <dalek> specs: confusing, so I thought I would clarify in S99

[03:41] <dalek> specs: review: https://github.com/perl6/specs/commit/09480dd119

[03:41] <dalek> specs: 7f6282f | (Rob Hoelz)++ | S99-glossary.pod:

[03:41] <dalek> specs: Add a glossary entry for subsignatures

[03:41] <dalek> specs: review: https://github.com/perl6/specs/commit/7f6282f54d

[03:41] *** aborazmeh joined
[03:50] *** Mso150 left
[04:07] *** xinming left
[04:09] *** aborazmeh left
[04:09] *** aborazmeh joined
[04:11] *** dj_goku joined
[04:16] *** jercos left
[04:16] *** atroxaper joined
[04:17] *** jercos joined
[04:21] *** atroxaper left
[04:28] *** xinming joined
[04:36] *** kaleem joined
[04:50] *** perlo joined
[04:56] *** Mouq left
[04:58] *** Mouq joined
[05:00] *** perlo left
[05:01] *** chenryn left
[05:02] *** kjs_ joined
[05:05] *** kjs_ left
[05:08] *** aborazmeh left
[05:18] *** atroxaper joined
[05:21] *** kaare_ joined
[05:24] *** atroxaper left
[05:26] *** konsolebox left
[05:28] *** telex left
[05:28] *** denis_boyun_ joined
[05:31] *** chenryn joined
[05:32] *** dayangkun joined
[05:33] *** denis_boyun_ left
[05:35] *** denis_boyun joined
[05:36] *** [Sno] left
[05:38] *** kaleem left
[05:38] *** ptc_p6 joined
[05:42] *** telex joined
[05:45] *** ptc_p6 left
[05:46] *** ssqq left
[05:55] *** denis_boyun_ joined
[05:56] *** denis_boyun left
[06:04] *** tinyblak_ left
[06:04] *** tinyblak joined
[06:05] *** aborazmeh joined
[06:06] *** ssqq joined
[06:09] *** tinyblak left
[06:11] *** dayangkun left
[06:12] *** chenryn left
[06:15] *** chenryn joined
[06:19] *** KCL_ joined
[06:20] *** tinyblak joined
[06:20] *** mr-foobar left
[06:29] *** [Sno] joined
[06:46] *** aborazmeh left
[06:47] *** KCL_ left
[06:49] *** denis_boyun_ left
[06:58] *** denis_boyun joined
[06:59] *** gfldex left
[06:59] *** raiph left
[06:59] *** Mouq left
[07:00] *** baest_ is now known as baest

[07:02] *** denis_boyun___ joined
[07:03] *** denis_boyun left
[07:07] *** chenryn left
[07:12] *** denis_boyun_ joined
[07:14] *** denis_boyun___ left
[07:22] *** ggoebel111111117 joined
[07:22] *** ggoebel111111116 left
[07:28] *** chenryn joined
[07:29] *** bjz joined
[07:29] *** chenryn left
[07:29] *** jluis joined
[07:31] *** lokendra joined
[07:31] <lokendra> hi

[07:31] *** chenryn joined
[07:32] <lokendra> need to know the start for for perl

[07:36] <Timbus> what do you need to know the start for for for

[07:36] *** prontotest joined
[07:36] *** prontotest left
[07:40] *** anaeem1_ joined
[07:44] *** FROGGS joined
[07:45] *** anaeem1__ joined
[07:45] *** kaleem joined
[07:45] *** Isp-sec joined
[07:46] *** anaeem1_ left
[07:56] *** kaleem_ joined
[07:57] *** zakharyas joined
[07:58] *** kaleem left
[07:59] *** anaeem1__ left
[08:03] *** robinsmidsrod left
[08:05] *** robinsmidsrod joined
[08:09] *** vti joined
[08:11] *** rurban joined
[08:14] *** ssqq left
[08:19] *** anaeem1_ joined
[08:21] *** fhelmberger joined
[08:26] <lokendra> yes timbus

[08:29] *** Mso150 joined
[08:30] *** Alina-malina left
[08:31] *** Alina-malina joined
[08:32] *** darutoko joined
[08:32] *** telex left
[08:33] *** Isp-sec left
[08:34] <Timbus> i fear we may have a small language barrier here, lokendra. :) could you ask your question differently?

[08:34] *** Rounin joined
[08:42] <mathw> morning

[08:43] *** telex joined
[08:46] <lokendra> i want to help, what can I do

[08:50] <JimmyZ_> describe where is your pain :) 

[08:58] *** konsolebox joined
[09:04] *** ssqq joined
[09:06] *** ptc_p6 joined
[09:07] *** robinsmidsrod left
[09:08] *** robinsmidsrod joined
[09:11] *** denis_boyun_ left
[09:15] *** robinsmidsrod left
[09:17] *** robinsmidsrod joined
[09:17] *** robinsmidsrod left
[09:18] *** robinsmidsrod joined
[09:26] *** dakkar joined
[09:29] *** robinsmidsrod left
[09:31] *** robinsmidsrod joined
[09:41] *** kjs_ joined
[09:46] *** davido_ left
[09:47] *** davido_ joined
[09:53] <masak> good antenoon, #perl6

[09:54] <arnsholt> o/

[09:54] <JimmyZ_> \o

[09:54] <mathw> o/

[09:55] * mathw would rather be writing Perl 6

[09:55] *** rindolf joined
[10:00] <mathw> (okay I admit it, I'd also rather be writing some sort of Lisp, or Haskell, or learning PureScript, but there's exciting things going on in Perl 6 world on my hard drive)

[10:03] <arnsholt> What are you stuck writing?

[10:03] <masak> lokendra: hi. if you're new to Perl 6, there are people here who can get you started. if you want to contribute, we can help with that too. :)

[10:03] <mathw> arnsholt: I'm not writing anything at all, I'm triaging support requests :(

[10:04] <arnsholt> Ow. Even worse than PHP (probably)

[10:04] *** virtualsue joined
[10:05] *** virtualsue left
[10:09] <mathw> well... I'm not entirely sure about that.

[10:09] <mathw> I do have very strong feelings about PHP

[10:09] *** virtualsue joined
[10:12] *** kjs_ left
[10:12] *** Ven joined
[10:13] <Ven> moritz++ # p6advent

[10:13] <Ven> on the topic of reactive stuff: https://github.com/kriskowal/gtor

[10:16] *** robinsmidsrod left
[10:16] *** robinsmidsrod joined
[10:19] <mathw> So happy to see reactive programming getting more and more traction

[10:20] *** kjs_ joined
[10:20] *** brrt joined
[10:20] <brrt> \o #perl6

[10:20] <brrt> fwiw I had an idea for what to do on the perl6 advent calendar

[10:20] <Ven> o/ brrt 

[10:21] <brrt> basically, would it be fun to do a post 'see how the moarvm jit works for YOU'

[10:21] *** JimmyZ_ left
[10:23] <Ven> very much :-)

[10:23] <brrt> ok, then that's what i'll do

[10:25] *** kaleem_ left
[10:26] *** Mso150 left
[10:27] *** kaleem joined
[10:27] *** pecastro joined
[10:28] *** Mso150 joined
[10:32] *** robinsmidsrod left
[10:34] *** robinsmidsrod joined
[10:34] <mathw> I'm preparing a talk for Nottingham.pm's next tech night called "What do you mean you can't do $x in Perl 6?"

[10:34] <mathw> Naturally this involves writing presentation-assisting tools in Perl 6

[10:37] *** kaleem_ joined
[10:38] *** kaleem left
[10:40] <brrt> :-)

[10:46] *** atroxaper joined
[10:50] *** Mso150 left
[10:52] *** atroxaper left
[10:59] *** chenryn left
[11:00] *** mvuets joined
[11:03] <masak> mathw++ :)

[11:04] *** brrt left
[11:07] <mathw> we shall see how it goes, but the regulars are interested in hearing it

[11:17] *** esaym153 left
[11:17] *** Alina-malina left
[11:18] *** Alina-malina joined
[11:19] *** esaym153 joined
[11:25] *** rindolf left
[11:34] *** jluis left
[11:39] *** chenryn joined
[11:45] *** kjs_ left
[11:46] *** jluis joined
[11:48] *** robinsmidsrod left
[11:49] *** robins joined
[12:06] *** abraxxa joined
[12:08] <masak> "Lisp in Small Pieces" has arrived! \o/

[12:09] <masak> its chapter 9 is called "Macros: their use and abuse" :P

[12:10] <masak> mathw: http://www.purescript.org/ looks interesting.

[12:11] *** abraxxa left
[12:11] *** robins left
[12:13] *** robinsmidsrod joined
[12:16] *** lokendra left
[12:17] <masak> the tone in https://news.ycombinator.com/item?id=8724727 is uplifting.

[12:17] <masak> though I also note that people can't tell terms from operators, and apparently "more readable" means "I've spent a lot of time reading this language, so I can read it more easily".

[12:18] *** anaeem1__ joined
[12:18] *** anaeem1_ left
[12:23] *** cosimo joined
[12:34] *** pecastro left
[12:40] *** brrt` joined
[12:43] *** rurban left
[12:57] *** sqirrel joined
[13:05] *** chenryn left
[13:06] *** Ven left
[13:07] *** ggoebel111111117 left
[13:30] *** atroxaper joined
[13:38] <sergot> hello o/

[13:38] <sergot> What trick was there with 42 in Perl 6?

[13:38] <sergot> I forgot it

[13:39] <tadzik> a trick with 42?

[13:40] <mathw> masak: it always does. See also 'intuitive'

[13:40] <mathw> people say Python is unintuitive because they're used to curly braces and find the idea of significant whitespace to be abhorrent. Despite that they probably follow similar unenforced rules just to make their code readable...

[13:40] <sergot> tadzik: "the meaning of life"

[13:41] <sergot> I barely remember this

[13:41] <FROGGS> m: say 42.WHY

[13:41] <camelia> rakudo-moar c91a58: OUTPUT«(Any)␤»

[13:41] <tadzik> :D

[13:41] <FROGGS> hmmm

[13:41] <FROGGS> I though that would do

[13:41] <tadzik> sergot: I didn't know there is something specific about it in p6

[13:41] <geekosaur> m: say 42.WHAT

[13:41] <camelia> rakudo-moar c91a58: OUTPUT«(Int)␤»

[13:41] <geekosaur> mrrr, what was it

[13:42] <tadzik> found it

[13:42] <tadzik> but I cheated

[13:42] <tadzik> m: "Life, the Universe, and Everything".WHY.say

[13:42] <camelia> rakudo-moar c91a58: OUTPUT«42␤»

[13:42] <FROGGS> ahh

[13:42] <FROGGS> :o)

[13:42] *** tgt joined
[13:42] <sergot> tadzik++

[13:42] <geekosaur> yeh, had a feeling it was the other way around but my log greps aren't spotting it, sigh

[13:43] *** rurban joined
[13:43] <Rounin> Haha

[13:43] <tgt> 42.WHY worked in April, but broke at some point.

[13:44] <sergot> It was cool :)

[13:44] <tgt> http://irclog.perlgeek.de/perl6/2014-04-26#i_8642372

[13:45] <masak> it used to be the other way around.

[13:45] <masak> this way makes a bit more sense, though. as "42" is the answer, not the question.

[13:45] <brrt`> m: say 32.WHY

[13:45] <camelia> rakudo-moar c91a58: OUTPUT«(Any)␤»

[13:45] <geekosaur> that was why I tried .WHAT

[13:46] <brrt`> m: "Life, the Universe, and Everything".WHY

[13:46] <camelia> rakudo-moar c91a58: ( no output )

[13:47] <brrt`>  nice

[13:47] <brrt`> hmm wait

[13:47] *** brrt` left
[13:48] *** brrt joined
[13:49] <brrt> what does perl6 has for printf support

[13:49] *** tgt left
[13:49] *** rurban left
[13:50] <tadzik> brrt: it's our own implemented in nqp iirc

[13:50] <brrt> ah

[13:50] <brrt> but

[13:51] <brrt> m: printf("%d", 42);

[13:51] <camelia> rakudo-moar c91a58: OUTPUT«42»

[13:51] <brrt> ah

[13:51] * brrt didn't read the error message very well

[13:52] <brrt> do we support position specifiers?

[13:52] <brrt> as in: m: printf("%2$d %1$d", 1, 2);

[13:52] <brrt> m: printf("%2$d %1$d", 1, 2);

[13:52] <camelia> rakudo-moar c91a58: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/JOCybDXxYC␤Variable '$d' is not declared␤at /tmp/JOCybDXxYC:1␤------> [32mprintf("%2$d[33m⏏[31m %1$d", 1, 2);[0m␤    expecting any of:␤        postfix␤»

[13:53] <brrt> uh duh

[13:53] <brrt> m: printf('%2$d %1$d', 1, 2);

[13:53] <camelia> rakudo-moar c91a58: OUTPUT«2 1»

[13:53] <brrt> public service announcement, brrt is dumb today

[13:57] <lizmat> good *, #perl6!

[13:57] <FROGGS> hi lizmat

[13:57] * lizmat just recovered from a ~9 hour Hobbit Marathon

[13:57] <lizmat> wrt to 42.WHY: yes, that used to work

[13:58] <lizmat> but someone pointed out to me, it was actually the other way around

[13:58] <tadzik> lizmat: so, the first film? :P

[13:58] <lizmat> 42 was the answer, not the question  :-)

[13:58] <lizmat> the first 3 films

[13:58] <brrt> \o lizmat

[13:58] <lizmat> brrt tadzik  FROGGS  o/

[13:58] <tadzik> o/

[13:58] <brrt> is the third hobbit film available yet?

[13:58] <brrt> as in

[13:58] <brrt> released

[13:59] <FROGGS> does it have production grade?

[13:59] * FROGGS runs

[13:59] <lizmat> brrt: yes, it came out today (just after midnight :-)

[14:00] <brrt> awesome

[14:00] *** ssqq left
[14:01] *** ssqq joined
[14:01] *** sqirrel left
[14:02] * geekosaur considers a compare and contrast with the Rankin-Bass one >.>

[14:02] <tadzik> on the day that thepiratebay went down :P

[14:03] <colomon> Never thought I'd say this, but based on the first two Jackson films, the Rankin-Bass one is miles better.  :)

[14:04] <geekosaur> I can't really claim to be surprised; doing it as a trilogy always seemed like it was aiming for doom

[14:07] <Rounin> Hm yes, it's not exactly the longest book, is it?

[14:07] <colomon> While I hate the additions to pad the running time, my real objection is to the goofy action scenes, I think.

[14:07] <brrt> on the other hand, it's likely you'd spend more than 9 hours reading it

[14:08] <colomon> brrt: !!! I haven't timed myself recently, but I'm pretty sure I'd have finished it in 2-3 hours back when I was a kid and had uninterrupted reading time.

[14:08] <Rounin> Yes, they could include every description of every tree

[14:09] <Rounin> Complete with a voiceover

[14:09] * brrt hasn't read it at all

[14:09] <Rounin> "Here are all of Bilbo's aunts and uncles, by the way:"

[14:09] <brrt> but perhaps i'm a relatively slow reader

[14:09] <[Coke]> it's including other source material, not just the hobbit.

[14:10] <[Coke]> but yes, the long running action sequences that appear to be there solely to give some heft to the 3D experience are meh for me.

[14:10] <[Coke]> (my kid doesn't mind them, however, which I think might be kind of th epoint)

[14:10] <colomon> [Coke]: yeah, I may not be the intended audience.

[14:11] <colomon> Just checked, and an unabridged audiobook of The Hobbit is 11 hours and 8 minutes.

[14:11] <[Coke]> colomon: I am sure I could devour it much faster. :P

[14:12] <[Coke]> I am just glad the movie is here so my daughter can watch it, and NOW FINALLY she will consent to watch LOTR with me. :)

[14:12] <colomon> [Coke]: yes, notice my estimate of (silent) reading time above.  ;)

[14:12] <Rounin> She's reached the age of Tolkien consent... What a milestone!

[14:13] <[Coke]> Rounin: only reason she wouldn't watch it before was because she wanted to see the movies in order. :P

[14:13] <[Coke]> sorry, “in order”

[14:13] <Rounin> She sounds more than adequately geeky, [Coke] 

[14:14] * lizmat wonders how much better the extended versions will be, especially wrt to action/non-action scene ratio

[14:15] *** sqirrel joined
[14:15] *** pecastro joined
[14:16] <moritz> ok, I'm slowly setting up the various p6 websites on the new webserver

[14:16] <moritz> with domain p6c.org instead of perl6.org

[14:16] <moritz> so that we can do a friendly DNS switch-over once everything is as we want

[14:17] <moritz> www.p6c.org and faq.p6c.org are already set up

[14:17] <geekosaur> yeh, I've found I can't do audiobooks because it's painfully slow compared to reading

[14:17] <masak> today's autopun spotting: https://twitter.com/secboffin/status/534629070508920832

[14:19] * colomon is now listening to https://www.youtube.com/watch?v=B3kCGNFBuSU because of this conversation

[14:20] *** ggoebel111111114 joined
[14:20] <moritz> geekosaur: I find audiobooks perfect when doing laundry etc.

[14:21] <colomon> long drives...

[14:21] <colomon> saving your voice when your son wants to hear Prisoner of Azkaban for the fifth time....

[14:21] <[Coke]> I put on podcasts/short stories when walking. 

[14:22] <[Coke]> but yah, if it's the -active- thing I'm doing, it's too slow. waaaay too slow

[14:24] <FROGGS> moritz: p6c.org feels fast-ish :o)

[14:24] <moritz> FROGGS: \o/

[14:25] <moritz> also shell accounts are available

[14:25] <FROGGS> nice :o)

[14:27] <PerlJam> moritz++

[14:28] <PerlJam> moritz: so ... how do we obtain said shell accounts?

[14:28] <moritz> PerlJam: /msg me your pubkey and desired username

[14:29] *** ssqq left
[14:29] <moritz> I plan to blog about it later

[14:29] <masak> ooh, I have another advent blog idea!

[14:29] *** ssqq joined
[14:29] <masak> will take a bit of effort to pull off, but should be worth it... :)

[14:29] <colomon> moritz: shall we move the smoke test report stuff over?

[14:29] <masak> I'd better write it sooner rather than later, though.

[14:32] <moritz> colomon: yes please

[14:32] <moritz> colomon: though that's probably better located on the webserver (www.p6c.org)

[14:33] <FROGGS> go masak go! /o/

[14:34] *** ssqq_ joined
[14:34] *** ssqq left
[14:36] *** raiph joined
[14:39] *** ssqq_ left
[14:41] *** treehug88 joined
[14:41] *** perlpilot joined
[14:46] <colomon> moritz++

[14:47] *** perlpilot left
[14:47] *** perlpilot joined
[14:48] *** perlpilot is now known as PerlJam

[14:51] *** Foxcool joined
[14:51] <lizmat> welcome Foxcool   :-)

[14:52] <Foxcool> (:

[14:53] <lizmat> moritz: I wonder whether we shouldn't have a ':all' param on PsuedoStash.keys

[14:53] <lizmat> *Pseudo

[14:54] <lizmat> I guess after a while you get fed up with seeing the usual suspects in there :-)

[15:05] *** mvuets left
[15:06] *** ptc_p6 left
[15:09] *** rindolf joined
[15:13] *** konsolebox left
[15:15] *** rurban joined
[15:16] *** [Sno] left
[15:22] <masak> lizmat: I haven't kept up on PseduoStashes. when does this happen?

[15:23] *** ggoebel111111115 joined
[15:24] *** anaeem1__ left
[15:25] *** ggoebel111111114 left
[15:27] *** anaeem1_ joined
[15:29] *** onebitboy left
[15:33] <moritz> lizmat: you mean for the implicit vars?

[15:34] *** kaleem_ left
[15:37] <lizmat> moritz: yes, the implicit vars

[15:44] <masak> it sounds harmful to me to hide something by default that's there but implicitly declared.

[15:46] <lizmat> but we do the same with ^methods, no?

[15:54] *** telex left
[15:56] *** telex joined
[15:58] *** andreoss joined
[16:00] <andreoss> sub ... is cached{ # no space between 'd' and '{' -  causes compile-time error 

[16:00] <andreoss> why space is needed? 

[16:01] <flussence> cached{...} is a hash key lookup

[16:01] <flussence> std: sub foo is cached{ 1 }

[16:01] <camelia> std 76ccee1: OUTPUT«[31m===[0mSORRY![31m===[0m␤Malformed block at /tmp/cMv2wK83uk line 1 (EOF):␤------> [32msub foo is cached{ 1 }[33m⏏[31m<EOL>[0m␤Parse failed␤FAILED 00:00 137m␤»

[16:02] <andreoss> even without sigil? 

[16:02] <FROGGS> std: sub foo is cached{ 1 } { ... }

[16:02] <camelia> std 76ccee1: OUTPUT«ok 00:00 137m␤»

[16:02] <FROGGS> that belongs to the trait

[16:02] <FROGGS> std: sub foo is cached(1) { ... } # like in here

[16:02] <camelia> std 76ccee1: OUTPUT«ok 00:00 139m␤»

[16:03] <flussence> m: constant cached = { :foo, :bar }; say cached{'foo'}

[16:03] <camelia> rakudo-moar c91a58: OUTPUT«True␤»

[16:05] *** FROGGS left
[16:06] <andreoss> so with 'is cached{...}' ... is meant for some additional options? 

[16:18] *** andreoss left
[16:19] *** virtualsue left
[16:20] *** atroxaper left
[16:20] *** Rounin left
[16:28] *** gfldex joined
[16:31] *** psch joined
[16:31] <psch> hi #perl6 \o

[16:32] *** brrt left
[16:34] *** kurahaupo left
[16:37] *** tinyblak left
[16:47] *** abraxxa joined
[16:48] *** pecastro left
[16:51] *** onebitboy joined
[16:54] *** andreoss joined
[16:55] *** kaleem joined
[17:00] *** pecastro joined
[17:03] <moritz> oh hai

[17:03] <moritz> so we don't have an advent post for tomorrow

[17:03] <moritz> who wants to chime in?

[17:04] <TimToady> yesterday jnthn++ was saying he would, I thought, but I'm still backlogging

[17:04] <moritz> oh right, I misread the diff

[17:04] <moritz> so nevermind

[17:04] <moritz> jnthn++

[17:04] <moritz> so Saturday, 13th is the next unclaimed spot

[17:07] <jnthn> Yeah, I'll probably eat first, and then work on it :)

[17:07] *** kaleem left
[17:08] *** mr-foobar joined
[17:10] <andreoss> yet is there something anyhow close to perltidy? 

[17:10] <andreoss> so far i've found Perl6::Format which is broken/unfinished 

[17:15] <masak> oh, I was not aware of that one.

[17:15] <dalek> snake: c53c697 | (Arne Skjærholt)++ | src/Snake/Metamodel/ClassHOW.nqp:

[17:15] <dalek> snake: First stab at user-defined callables.

[17:15] <dalek> snake: review: https://github.com/arnsholt/snake/commit/c53c69786a

[17:15] <masak> andreoss: no, I wouldn't say there is anything close to PerlTidy yet.

[17:19] *** raiph left
[17:19] *** anaeem1_ left
[17:20] *** pecastro left
[17:20] *** atroxaper joined
[17:21] *** alesk joined
[17:22] *** andreoss left
[17:22] <alesk> m: role Doc { has $.doc is rw }; multi trait_mod:<is>(Attribute $a, Doc, $arg) { $a.container.VAR does Doc($arg); }; class C { has @.v is Doc('Array container') is rw; }; my $x = C.new; $x.v.doc.say; $x.v = (42, 43, 44); $x.v.perl.say;

[17:22] <camelia> rakudo-moar c91a58: OUTPUT«Array container␤Array+{Doc}.new(42, 43, 44)␤»

[17:23] <alesk> m: role Doc { has $.doc is rw }; multi trait_mod:<is>(Attribute $a, Doc, $arg) { $a.container.VAR does Doc($arg); }; class C { has $.v is Doc('Scalar container') is rw; }; my $x = C.new; $x.v.doc.say; $x.v = 42; $x.v.perl.say;

[17:23] <camelia> rakudo-moar c91a58: OUTPUT«Scalar container␤Cannot modify an immutable Scalar+{Doc}␤  in block <unit> at /tmp/l8vXmsezxt:1␤␤»

[17:24] <alesk> Why does it not work with scalars ?

[17:26] *** atroxaper left
[17:27] <psch> m: my $x = 5; my $whichx = $x.WHICH; $x = 6; say $whichx === $x.WHICH 

[17:27] <camelia> rakudo-moar c91a58: OUTPUT«False␤»

[17:28] <hoelzro> o/ #perl6

[17:28] <psch> hoelzro \o

[17:30] *** raiph joined
[17:30] *** anaeem1_ joined
[17:33] <hoelzro> so I've been playing with Go a bit recently, and one thing that I find appealing about it is its tools to operate on Go source (ex. go fmt)

[17:34] <hoelzro> these are easy to make because there's a Go parser in the stdlib; do we have a Grammar (other than Grammar.nqp) for doing something like this for Perl 6 source?

[17:34] <hoelzro> I guess maybe STD.pm6 =/

[17:35] <[Coke]> m: say Perl6::Grammar.WHAT:

[17:35] <camelia> rakudo-moar c91a58: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/QZy8hRja3j␤Missing semicolon.␤at /tmp/QZy8hRja3j:1␤------> [32msay Perl6::Grammar.WHAT:[33m⏏[31m<EOL>[0m␤    expecting any of:␤        colon pair␤»

[17:35] <TimToady> it's probably about time to translate STD.pm6 to run on rakudo

[17:35] <[Coke]> m: say Perl6::Grammar.WHAT;

[17:35] <camelia> rakudo-moar c91a58: OUTPUT«Could not find symbol '&Grammar'␤  in method <anon> at src/gen/m-CORE.setting:13772␤  in any find_method_fallback at src/gen/m-Metamodel.nqp:2725␤  in any find_method at src/gen/m-Metamodel.nqp:988␤  in block <unit> at /tmp/XRF3CpOACx:1␤␤»

[17:36] <psch> m: say %~LANG

[17:36] <camelia> rakudo-moar c91a58: OUTPUT«Slang.new(:grammar(Any), :actions(Any))␤»

[17:36] <TimToady> but the desire for a standard high-level AST for macros may produce something in this regard to

[17:37] <TimToady> thing is, Go is one language by design, and Perl 6 is many languages by design, so you have to account for extensibility

[17:37] *** zakharyas left
[17:37] <hoelzro> indeed

[17:38] <hoelzro> my use case is I want to search roast for a particular construction to see it's covered in tests

[17:38] <hoelzro> and the construction involves a for loop, so searching by hand isn't really an option =/

[17:38] <TimToady> it has been our feeling from the beginning that Paul Graham is correct about the 100-year language needing to be evolvable

[17:39] <TimToady> so basically we need to extend our extensibility to the document model for Perl 6 code :)

[17:40] *** [Sno] joined
[17:40] <TimToady> à la PPI, but extensible along with the language

[17:40] <hoelzro> sounds good to me

[17:41] <hoelzro> because one might add, for example, an after block (or something), and may want to write a tool to do something with after blocks, right?

[17:41] <TimToady> you'd like your IDE to suddenly know about them, yeah

[17:42] <hoelzro> makes sense

[17:48] <moritz> loliblug: http://perlgeek.de/blog-en/perl-6/2014-community-server-live.html

[17:48] * TimToady wonders what breaks if we translate Grammar.nqp into Grammar.pm6 without translating Actions.nqp

[17:50] *** xinming_ joined
[17:52] *** xinming left
[17:55] <psch> .tell jnthn fwiw, jarakudo tags 2013.11 and 2013.12 also die with boxing errors on the CRC32 example, so i don't know where to start bisecting from

[17:55] <yoleaux> psch: I'll pass your message to jnthn.

[17:56] <psch> moritz++ # hardware and such

[17:57] <moritz> psch: just to be clear, I didn't pay anything for the hardware, that was funded by community donations

[17:58] <TimToady> moritz++ # scutwork and such :)

[17:58] <psch> moritz: oh, yeah i know that.  "handling hardware" might've been better

[17:58] <psch> apparently i regularly struggle with actually expressing what i mean

[17:58] * TimToady now wonders the derivation of "scut"...probably scatalogical...

[17:59] <TimToady> or scutalogical...

[17:59] * moritz simply out-corrects to "scout work" :-)

[17:59] <TimToady> *ological

[18:00] <moritz> or "grunt work"

[18:00] <huf> huh, new word! thanks

[18:00] * TimToady now wonders about the derivation of "grunt" :)

[18:00] <moritz> it's hard, thankless work where you grunt while doing it

[18:01] <moritz> or feel like a pig

[18:01] *** dakkar left
[18:01] * TimToady hopes pigs feel better when it's done

[18:02] * moritz does, at least

[18:03] <huf> grunt sounds suspiciously like the sound of grunting...

[18:05] *** Mso150 joined
[18:05] <moritz> I've now enforced some resource limits on user accounts on hack.p6c.org

[18:06] <moritz> max RSS of 8GB, max. 1k processes, max 50 parallel logins per user

[18:06] <moritz> does that sound reasonable?

[18:06] <PerlJam> moritz: aye.

[18:07] <TimToady> 50 logins should be enough for anyone :P

[18:07] <moritz> it's not supposed to be lose enough to work well with rakudo dev, and only strict enough to not kill the server accidentally

[18:08] <TimToady> well, it's not like it's set in stone for all eternity

[18:08] <TimToady> not that stones are eternal either...

[18:09] * masak .oO( unless they are infinity stones... )

[18:09] <moritz> agreed with both :-)

[18:15] *** mvuets joined
[18:15] *** grettis joined
[18:16] <vendethiel> o/, #perl6

[18:16] *** andreoss joined
[18:20] <andreoss> my @x = "123" ~~ m/\d/; # > catches 1

[18:20] <andreoss> my @x = "123" ~~ m:g/\d/; # > catches nothing

[18:21] <andreoss> how do i get matches in array context? 

[18:21] <tony-o> use .any

[18:21] <tony-o> oh, nvm

[18:24] <psch> andreoss: use the .match methods for now, m:g// isn't working quite right currently

[18:24] <psch> *method

[18:24] <psch> m: say "123".match(:g, /\d/)

[18:25] <camelia> rakudo-moar c91a58: OUTPUT«｢1｣␤ ｢2｣␤ ｢3｣␤␤»

[18:27] <masak> m: say "123".comb(/\d/)

[18:27] <camelia> rakudo-moar c91a58: OUTPUT«1 2 3␤»

[18:27] <masak> m: say "123".comb(/\d/).perl

[18:27] <camelia> rakudo-moar c91a58: OUTPUT«("1", "2", "3").list␤»

[18:28] <tony-o> masak: beat me

[18:29] <masak> I don't believe in violence.

[18:29] <masak> you'll have to ask someone else.

[18:29] <andreoss> my @x = "123" ~~ m/\d/; # > catches 1

[18:29] <andreoss> my @x = "123" ~~ m:g/\d/; # > catches nothing

[18:29] <andreoss> sorry..wrong buffer

[18:30] *** njmurphy joined
[18:30] <andreoss> btw, is there #learningperl6 or something like that? don't wanna spoil serious discussions with noob questions

[18:32] <vendethiel> andreoss: there's no "noob questions" :)

[18:32] <TimToady> maybe we should just make List one of the success values that smartmatching doesn't retest

[18:34] <TimToady> I can't really think of any downsides

[18:34] <PerlJam> vendethiel: I'd say ... there's only "noob questions"  ;)

[18:34] <TimToady> anything currently done by List.ACCEPTS should probably have a keyword anyway

[18:34] <psch> TimToady: that would happen instead of the OKness bit?

[18:35] *** Mso150_a joined
[18:35] *** Mso150 left
[18:35] <masak> PerlJam, vendethiel: the noob/non-noob duality is an illusion!

[18:35] <TimToady> nobody every sprang for an OKness bit, but we've just kept a list of exceptional values/types

[18:35] <psch> rather, "be an alternative to the OKness bit to improve smartmatching"

[18:36] <TimToady> it seems saner than creating fake Match objects out of lists

[18:37] <TimToady> and potentially allows other types to return lists as a success

[18:38] <TimToady> and it falls out naturally that a list with 0 elements is False, while other lists are True, so a successful match can still be evaluated for 1-or-more-ness, which pretty much corresponds to how P5 handles matching in list vs boolean context

[18:38] <psch> fwiw, the implementation for m:g// that i have sitting around leaves a root Match object around, which represents everything that has matched as one match

[18:39] <psch> but it waterbedded towards "you have to say you want the list if you want to iterate over the list"

[18:39] <psch> which as mentioned seems un-idiomatic

[18:39] <psch> from that point of view i think having m:g// just return a List sounds cleaner

[18:40] <TimToady> indeed

[18:41] <psch> and the point with truthiness of a List according to the number of elements is good as well

[18:46] <jnthn> Also, Match objects as currently factored don't do laziness, and m:g kinda wants it, or potentially wants it...

[18:46] <yoleaux> 17:55Z <psch> jnthn: fwiw, jarakudo tags 2013.11 and 2013.12 also die with boxing errors on the CRC32 example, so i don't know where to start bisecting from

[18:47] <jnthn> And m:ex I guess really wants it.

[18:50] <TimToady> we should also remove any wildcarding from Array.ACCEPTS and make such pattern matching keyword driven as well

[18:52] <TimToady> "respectively" is a bit long, however :)

[18:52] <jnthn> .tell psch Well, bother. That means it bust ages ago :/

[18:52] <yoleaux> jnthn: I'll pass your message to psch.

[18:54] *** FROGGS joined
[18:55] * psch was here all along

[18:55] <yoleaux> 18:52Z <jnthn> psch: Well, bother. That means it bust ages ago :/

[18:56] <psch> maybe i can get it with my overloaded method work, if not i'll look later on

[18:58] <[Coke]> Do we have a page with "must have for 6.0.0." ?

[18:58] <[Coke]> I want to make sure we have some notes about tests.

[18:59] * jnthn must have dinner &

[19:00] *** rindolf left
[19:00] * [Coke] is so glad his $dayjob should be going back to normal soon.

[19:01] *** rindolf joined
[19:03] <FROGGS> lizmat: what's "That worked out" in .nl?

[19:04] * hoelzro .oO( het heeft uitgewerkt? )

[19:04] *** fhelmberger left
[19:04] <mvuets> http://paste.scsys.co.uk/451676 - open does not handle :enc<utf16> properly, :enc<cp1251> dies with a fair reasonable message though

[19:04] <mvuets> is it known? or should i rakudobug it?

[19:07] <psch> m: my \xₙ = 1; my \xₙ₊₁ = xₙ + 1; # this made me a bit sad recently

[19:07] <camelia> rakudo-moar c91a58: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/WRagmtH7sq␤Term definition requires an initializer␤at /tmp/WRagmtH7sq:1␤------> [32mmy \xₙ = 1; my \xₙ[33m⏏[31m₊₁ = xₙ + 1; # this made me a bit sad re[0m␤    expecting any o…»

[19:07] <psch> not sure if it'd be reasonable to expect it to work

[19:07] <FROGGS> you expect that the + will be part of the name?

[19:08] <psch> i'd have liked it in this case, yeah

[19:08] <mvuets> re open: fwiw it's print() that fails, not open(), but the question stays

[19:08] <psch> but it's still a plus, even if subscripted

[19:09] *** sqirrel_ joined
[19:09] *** sqirrel left
[19:09] *** FROGGS left
[19:09] *** pecastro joined
[19:10] *** smls joined
[19:10] <psch> mvuets: a cursory search of RT didn't reveal a known bug to me at least

[19:11] <[Coke]> There's limits on what's in a var name.

[19:11] *** FROGGS joined
[19:12] <[Coke]> "An identifier is composed of an alphabetic character followed by any sequence of alphanumeric characters. The definitions of alphabetic and numeric include appropriate Unicode characters. Underscore is always considered alphabetic. An identifier may also contain isolated apostrophes or hyphens provided the next character is alphabetic."

[19:13] *** rindolf left
[19:13] *** Mso150_a left
[19:13] <smls> How can I get formatting codes to work inside Pod tables? (Stand-alone example script: https://gist.github.com/smls/f10a15046a58c740248c )

[19:13] <[Coke]> so, no bug there, methinks.

[19:15] *** Mso150_a joined
[19:16] *** perltricks joined
[19:17] <psch> oh, i'm not saying it's a bug

[19:18] <psch> i can accept having to override <ident> to get that kind of identifier working

[19:19] <psch> it's not like we're generally that math-centric to want non-alnum sub- or superscripts in identifiers

[19:22] *** ronin joined
[19:22] <ronin> what's wrong with this http://ideone.com/xuZcUT https://gist.github.com/smls/732115c66cd29aa2e9d0#file-grades-p6

[19:23] <ronin> I get Unable to open filehandle from path 'grades.p6'

[19:23] <mvuets> links on http://rakudo.org/tickets/ are broken )-: for instance, http://rakudo.org/rt/easy -> "There was an error parsing your search query [...]"

[19:24] <mvuets> m: say "☺".encode("UTF-8")

[19:24] <camelia> rakudo-moar c91a58: OUTPUT«Buf:0x<e2 98 ba>␤»

[19:24] <mvuets> m: say "☺".encode("UTF-16")

[19:24] <camelia> rakudo-moar c91a58: OUTPUT«Buf:0x<263a>␤»

[19:25] <mvuets> latter case seems odd: is that a multi-byte? encode should return octets as in the former example, shouldn't it?

[19:27] <smls> ronin: Do you have the grades.txt file in the current directory?

[19:27] <ronin> yes

[19:27] <ronin> wait

[19:28] <ronin> I run it from the wrong directory, how can i even run it from wrong directory? :/

[19:28] <ronin> wtf

[19:28] <ronin> but i get now: Unsupported use of - as character range; in Perl 6 please use .. at line 4, near "]>?) $/ or"

[19:29] <FROGGS> std: /<[+-]>/

[19:29] <camelia> std 76ccee1: OUTPUT«ok 00:00 138m␤»

[19:29] <FROGGS> m: /<[+-]>/

[19:29] <camelia> rakudo-moar c91a58: ( no output )

[19:31] <geekosaur> mvuets: Buf can have sizes other than 8 (octets). encode("UTF-16") gives you a Buf of 2-byte chunks, corresponding to the encoding

[19:31] <smls> ronin: It works fine for me on a relatively recent Rakudo+MoarVM

[19:32] <FROGGS> will that every work? m:s/^ (\w+) (<[A..F]><[+-]>?) $/

[19:33] <FROGGS> ahh, yes perhaps

[19:36] * vendethiel finished the draft of the new learnperl6inyminutes

[19:36] <smls> m: "Celine\tA-" ~~ m:s/^ (\w+) (<[A..F]><[+-]>?) $/; say "$0: $1"

[19:36] <camelia> rakudo-moar c91a58: OUTPUT«Celine: A-␤»

[19:36] <vendethiel> new structure*

[19:36] <mvuets> m: say "☺".encode("utf-16").perl

[19:36] <camelia> rakudo-moar c91a58: OUTPUT«utf16.new(9786)␤»

[19:37] <mvuets> apparently utf-16 is affected by endianness (in contrast to utf-16le and utf16-be)

[19:37] <mvuets> so that is perfectly valid

[19:37] <mvuets> geekosaur: thanks (-:

[19:40] *** nige joined
[19:42] *** raiph left
[19:48] <nige> Hi

[19:48] <nige> here is a draft my advent post - feedback is very welcome: http://perl6advent.wordpress.com/?p=2507&preview=true

[19:51] <psch> nige++ # portcullis as a mnemonic for private attribute twigil

[19:53] * vendethiel can't read it

[19:53] <psch> i'm not sure i fully agree with "the twigil travels with the attribute through the class" - you can (have to) access $.var as $!var if you want to write to it

[19:54] <psch> vendethiel: you need to be in the author group i think

[19:54] *** kurahaupo joined
[19:54] *** anaeem1_ left
[19:54] *** kurahaupo left
[19:55] <FROGGS> nige++

[19:55] <FROGGS> I like it :o)

[19:56] <psch> i also meant to put a "?" after the parenthesesed "have to", because i'm not completely sure...

[19:56] *** kurahaupo joined
[19:56] <FROGGS> psch: you have to if your accessor method is not rw

[19:57] <psch> FROGGS++: ah, okay, thanks

[19:57] *** anaeem1_ joined
[19:58] *** beastd joined
[19:58] <vendethiel> ah, right.

[20:01] <dalek> rakudo/nom: 5f64944 | (Tobias Leich)++ | src/core/operators.pm:

[20:01] <dalek> rakudo/nom: RT #123303 fix exception throwing of undeducable sequences

[20:01] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5f6494462d

[20:01] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=123303

[20:01] *** _4d47 joined
[20:03] <bartolin> hi, #perl6

[20:05] <bartolin> speaking of sequences: did someone have an opportunity to look at my PR which attempts to fix chained sequences (https://github.com/rakudo/rakudo/pull/336)

[20:07] <dalek> roast: 3b96e08 | (Tobias Leich)++ | S03-sequence/misc.t:

[20:07] <dalek> roast: RT #123303 test exception throwing of undeducable sequences

[20:07] <dalek> roast: review: https://github.com/perl6/roast/commit/3b96e08f86

[20:07] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=123303

[20:08] *** anaeem1_ left
[20:08] *** anaeem1 joined
[20:09] *** virtualsue joined
[20:10] <FROGGS> bartolin: let me test it

[20:10] <bartolin> great! FROGSS++

[20:12] <FROGGS> bartolin: could that be part of an else after line 232? https://github.com/usev6/rakudo/commit/8b85116017a4dcf05e9f3d0250f7bc419e283b2b#diff-cdcd7468e5ed1820ac714b6d322a492aR225

[20:12] *** darutoko left
[20:15] <bartolin> FROGGS: yes, that looks plausible

[20:15] <FROGGS> maybe we spot another opportunity to save some work...

[20:16] <FROGGS> would be unfortunate to slow sequences down

[20:19] <bartolin> agreed. I was kind of happy to make it work -- but the code can be improved surely ...

[20:20] <FROGGS> yeah, it looks very good... I don't see any spectest fallout yet

[20:20] <bartolin> I had no spectest failures as well (moar, parrot and jvm)

[20:23] <bartolin> but on the other hand there aren't many tests for chained sequences (and probably it's not used for other functionalities)

[20:25] <bartolin> the four tests skipped for rakudo in S03-sequence/misc.t should pass with this as well

[20:29] <FROGGS> yes, that's what I am testing

[20:32] *** Isp-sec joined
[20:34] <FROGGS> bartolin: can you please push optimizations to your repo? I'll merge it when I get your ok

[20:34] <mvuets> http://paste.scsys.co.uk/451709 - IO::Handle.open does not handle symlinks? )-:

[20:36] <bartolin> FROGGS: do you have other suggestions at hand (apart from the else clause mentioned above)?

[20:36] <mvuets> how do i search ticket bodies in rt?

[20:37] <FROGGS> bartolin: maybe don't alloc @left_tail?

[20:37] <FROGGS> mvuets: I believe it is not possible anymore... it used to work until RT was updated

[20:38] <FROGGS> bartolin: same for $last

[20:38] <mvuets> FROGGS: when i want to check if the bug is reported already, i can count on subjects only?

[20:38] <bartolin> FROGGS: okay, I'll look at it. thanks a lot for testing and commenting!

[20:39] <FROGGS> bartolin: sure :o)

[20:39] <psch> ohh boy.  i get different behavior for repeated runs of the same code :(

[20:39] <psch> sometimes debug output disappears /o\

[20:39] <FROGGS> bartolin: please point to other PR's... it is easy to overlook them :o/

[20:40] <FROGGS> mvuets: aye, also masak and bartolin know pretty well the bugs they filed/reviewed :o)

[20:40] <bartolin> there is only a PR for the P6 book (mostly to handle the related tickets): https://github.com/perl6/book/pull/82

[20:41] *** kjs_ joined
[20:41] <bartolin> *g*

[20:41] <FROGGS> bartolin: line 238 in that gist can be simplified:

[20:41] <FROGGS> m: my @a = 1, 2; my @b = 3, 4; say @a = unshift @b, @a

[20:41] <camelia> rakudo-moar 5f6494: OUTPUT«1 2 3 4␤»

[20:41] <FROGGS> you don't need any 'unshift', right?

[20:42] *** kjs_ left
[20:42] <FROGGS> m: my @a = 1, 2; my @b = 3, 4; say @a = @a, @b

[20:42] <camelia> rakudo-moar 5f6494: OUTPUT«1 2 3 4␤»

[20:42] <FROGGS> m: my @a = 1, 2; my @b = 3, 4; @a.push: @b; say @a

[20:42] <camelia> rakudo-moar 5f6494: OUTPUT«1 2 3 4␤»

[20:42] <FROGGS> I'd prefer the latter

[20:43] <bartolin> FROGGS: but @seq can be infinite

[20:44] <bartolin> s/seq/seq_part/

[20:44] <FROGGS> m: my @a := 1..*; my @b = 42; @a := @a, @b

[20:44] <camelia> rakudo-moar 5f6494: ( no output )

[20:44] <FROGGS> m: my @b := 1..*; my @a = 42; @a := @a, @b

[20:44] <camelia> rakudo-moar 5f6494: ( no output )

[20:44] <FROGGS> that should do

[20:44] <bartolin> FROGGS++

[20:45] <FROGGS> err, @a := (@b, @a).flat <-- better

[20:45] <FROGGS> that's almost an idiom, you find that in quite some places in the setting

[20:46] <bartolin> that gave me something to work on, thanks again

[20:46] <FROGGS> :o)

[20:50] <masak> perl6: sub f { my &b = { say "returnin'!"; return }; sub g(&c) { say "in g"; c() }; g(&b); say "still in f" }; f()

[20:50] <camelia> rakudo-{parrot,moar} 5f6494: OUTPUT«in g␤returnin'!␤»

[21:03] *** ggoebel111111115 left
[21:04] * mvuets filed his two very first perl6 bug reports (-:

[21:04] <bartolin> you're welcome ;-)

[21:04] *** pecastro left
[21:05] *** pecastro joined
[21:05] *** ggoebel111111114 joined
[21:06] <hoelzro> mvuets++

[21:07] * jnthn works on le blog post

[21:08] <mvuets> #perl6, i had this idea to share interesting perl6 sample few-liners along as i learn the language

[21:08] <itz> arggg systemd ate my sid

[21:09] <mvuets> with hoelzro's boost i created a twitter account for this purpose

[21:09] *** nige left
[21:09] <PerlJam> mvuets++

[21:09] <mvuets> enter https://twitter.com/perlhex

[21:09] <mvuets> hoelzro++ for the great handle pun name

[21:10] <FROGGS> jnthn: for your blog or the advent calendar?

[21:10] <jnthn> FROGGS: Ja.

[21:10] <masak> 'night, #perl6

[21:10] <FROGGS> arrgh!

[21:10] <jnthn> Bah, there goes one of my proof readers... :P

[21:10] <jnthn> 'night, masak

[21:10] <jnthn> FROGGS: Uh, for the advent calendar... :)

[21:10] <FROGGS> jnthn: as I tend to say to my kids: replying with 'ja' to an either/or question is invalid!

[21:11] <FROGGS> kthx :o)

[21:11] <FROGGS> gnight masak

[21:11] <jnthn> Damn, I was so proud I managed to answer it in another language, I forget the answer was meaningless. :P

[21:11] <FROGGS> hehe

[21:11] <mvuets> i started off with easy and trivial examples, pretending i write a tutorial for newbies (-:

[21:12] *** Mso150_a left
[21:12] <mvuets> and do not want to freak out people with crazy fancy examples at once

[21:13] <FROGGS> yeah, don't spread line noise :o)

[21:14] *** muraiki left
[21:14] <mvuets> so, if you have any feedback (what to post, how to post, stop it altogether, etc) - very welcome

[21:15] <vendethiel> niice :-)

[21:16] *** ptc_p6 joined
[21:18] *** muraiki joined
[21:19] <FROGGS> mvuets: nice examples!

[21:19] *** alesk left
[21:19] <FROGGS> though since I've got no twitter account I won't stalk^Wfollow anybody there :o)

[21:20] <dalek> perl6-roast-data: d8e01f6 | coke++ | / (4 files):

[21:20] <dalek> perl6-roast-data: today (automated commit)

[21:20] <dalek> perl6-roast-data: review: https://github.com/coke/perl6-roast-data/commit/d8e01f6c56

[21:22] *** sqirrel_ left
[21:24] *** anaeem1 left
[21:24] *** anaeem1_ joined
[21:25] *** bjz left
[21:26] <perltricks> Argh Windows, why

[21:26] <perltricks> C:\Users\dfarrell>perl6 -e ".say for 0..10" | more ???????????

[21:28] <moritz> does it work without | more ?

[21:29] <mvuets> FROGGS: thank you!

[21:29] <perltricks> moritz: oh yeah it works fine. more just outputs ? for every char printed. I'm trying to find a workaround for the fact that p6doc uses less, which doesn't exist on WIndows

[21:29] <perltricks> doesn't exist on cmd.exe I should say

[21:30] <jnthn> ffs, it does that here as well

[21:30] <jnthn> wtf.

[21:31] <geekosaur> some kind of encoding issue? like it expects utf16 if it doesn't see the (technically illegal) byte order mark?

[21:31] <jnthn> Redirect to a file works. Piping it into other processes works. But more gets upset.

[21:32] <PerlJam> perltricks: write a perl pager to use instead of less  :)

[21:32] *** kurahaupo1 joined
[21:32] *** ptc_p6 left
[21:33] <moritz> call it "pess"

[21:34] *** colomon joined
[21:35] <perltricks> hmm

[21:35] <mvuets> perltricks: try http://gnuwin32.sourceforge.net/packages/less.htm - it's a native port, not as heavy as cygwin

[21:36] <perltricks> if you do: chcp 65001

[21:36] <perltricks> then try piping into more, you'll see a P6 error msg

[21:37] <perltricks> Not enough memory. Failed to write string to stream: broken pipe   in method print at src/gen/m-CORE.setting:14845   in sub say at src/gen/m-CORE.setting:15179   in method say at src/gen/m-CORE.setting:1136   in block <unit> at -e:1

[21:37] <mvuets> perltricks: also if you use git for windows, iirc it comes with mingw which should have less as well

[21:37] <mvuets> (that's in case you want to workaround a problem)

[21:38] <perltricks> mvuets: thanks, but I'm wondering about how to fix this in p6doc

[21:38] <dalek> doc: 69e0292 | moritz++ | sync:

[21:38] <dalek> doc: sync also to new community server

[21:38] <dalek> doc: review: https://github.com/perl6/doc/commit/69e029296e

[21:38] *** colomon left
[21:40] *** anaeem1_ left
[21:40] *** anaeem1_ joined
[21:40] <moritz> that's it for today, TTFN folks

[21:40] *** anaeem1_ left
[21:40] *** colomon joined
[21:41] *** anaeem1_ joined
[21:41] *** anaeem1_ left
[21:42] *** kjs_ joined
[21:45] *** mvuets left
[21:51] *** kjs_ left
[21:52] *** kurahaupo1 left
[21:53] *** kaare_ left
[21:55] *** carlin joined
[22:02] *** nige joined
[22:04] <lizmat> FROGGS hoelzro: "het heeft uitgewerkt" is a literal translation and not correct

[22:04] <lizmat> I would say "alles is op zijn pootjes terecht gekomen"

[22:05] <lizmat> literally translates to: "everything landed on its feet"

[22:05] <FROGGS> lizmat: thanks! :D

[22:06] <FROGGS> in the end I just wrote "Dat werkte!"

[22:06] <lizmat> that would mean more "it worked" instead of "it worked out"

[22:07] <lizmat> *that

[22:07] <FROGGS> well, he fixed something, so that's all right I think

[22:08] <lizmat> ah, then "dat werkte" would be better

[22:10] *** Rounin joined
[22:10] *** telex left
[22:11] <bartolin> FROGGS: I'm now testing an improved version (IMHO) of my PR locally. if it runs fine, I'll commit it to my repository and leave you a note (probably tomorrow). or should I better close the existing PR and create a new one?

[22:11] <FROGGS> bartolin: just push to your nom branch, and it will show up in the existing PR

[22:12] <bartolin> FROGGS: great

[22:12] *** telex joined
[22:14] *** colomon left
[22:14] <hoelzro> I know, I was trying to make a bad joke =)

[22:15] <hoelzro> of all of the things I learned living among the Dutch, the language was not one of them

[22:16] <lizmat> I wonder how many Dutch people you've actually seen while you where in Amsterdam  :-)

[22:16] <tony-o> timotimo: pipelining is working for http async, doing some testing on it prior to uploading

[22:16] <hoelzro> lizmat: good point =)

[22:17] *** xinming_ left
[22:17] *** xinming joined
[22:18] <lizmat> m: role A { has $.a; submethod BUILD(:$!a) {}}; class B does A {}; B.new   # this feels weird

[22:18] <camelia> rakudo-moar 5f6494: OUTPUT«P6opaque: no such attribute '$!a'␤  in submethod BUILD at /tmp/oXV5w_hmGw:1␤  in method BUILDALL at src/gen/m-CORE.setting:961␤  in method bless at src/gen/m-CORE.setting:944␤  in method new at src/gen/m-CORE.setting:928␤  in block <unit> at /tmp…»

[22:19] <lizmat> so I can't have a submethod BUILD in a role ?

[22:19] <jnthn> lizmat: What happens if you assign the attr in the method body and take a normal programer?

[22:19] <jnthn> wtf

[22:19] <jnthn> a normal PARAMETER

[22:20] <FROGGS> take that bloody normal programmer! :P

[22:20] <lizmat> jnthn: works ok then

[22:20] <lizmat> ok, that will do as a workaround then

[22:20] *** kurahaupo1 joined
[22:21] <jnthn> Pleaes file it

[22:21] <lizmat> will do

[22:21] <jnthn> it's either a generic instantiatoin bug or, more likely perhaps, a bug in the signature bind lowering optimization tht makes it mis-handle the genericity.

[22:23] <lizmat> --optimize=0 gives same result

[22:24] <jnthn> Yeah, but it's actually done in actions phase, not optimizer phase.

[22:24] <lizmat> disabling spesh also doesn't change the result (not that I expected that, but as a data point)

[22:24] <jnthn> m: role A { has $.a; submethod BUILD(:$!a, @a? is copy) {}}; class B does A {}; B.new

[22:24] <camelia> rakudo-moar 5f6494: OUTPUT«[31m===[0mSORRY![31m===[0m Error while compiling /tmp/ncybyPYRO3␤Cannot put optional positional parameter @a after variadic parameters␤at /tmp/ncybyPYRO3:1␤------> [32ms $.a; submethod BUILD(:$!a, @a? is copy[33m⏏[31m) {}}; class B does A {}…»

[22:24] <jnthn> ah

[22:24] <jnthn> m: role A { has $.a; submethod BUILD(@a? is copy, :$!a) {}}; class B does A {}; B.new

[22:24] <camelia> rakudo-moar 5f6494: ( no output )

[22:25] <jnthn> Yeah, it's in the bind lowering.

[22:25] <jnthn> (I know bind lowering can't handle @a is copy, so I use it to force it to bail).

[22:25] *** nige left
[22:26] * lizmat does not know what you mean with "bind lowering"

[22:26] <jnthn> lizmat: Signature binding naively goes through a bunch of code that interprets the signature.

[22:27] <jnthn> lizmat: Bind lowering "compiles" signatures that are simple enough (which is the majority thta show up in real code)

[22:27] *** perltricks left
[22:27] <jnthn> And the bug is in that bit of compilation, somewhere around the code that handles attributive parameters.

[22:27] <dalek> rakudo/newio: 37b37fd | jonathan++ | tools/build/NQP_REVISION:

[22:27] <dalek> rakudo/newio: NQP bump to get MoarVM with callbacks changes.

[22:27] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/37b37fde00

[22:27] <dalek> rakudo/newio: c91a583 | (Geoffrey Broadwell)++ | src/core/Temporal.pm:

[22:27] <dalek> rakudo/newio: Loosen Date.new(DateTime) to Date.new(Dateish) to simplify subclasses

[22:27] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/c91a58332a

[22:27] <dalek> rakudo/newio: c9eecf9 | (Elizabeth Mattijsen)++ | / (2 files):

[22:27] <dalek> rakudo/newio: Merge branch 'nom' into newio

[22:27] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/c9eecf9a35

[22:27] <dalek> rakudo/newio: 21aee6b | (Elizabeth Mattijsen)++ | src/core/IO/Locally.pm:

[22:27] <dalek> rakudo/newio: Workaround for #123407

[22:27] <synopsebot> Link: https://rt.perl.org/rt3//Public/Bug/Display.html?id=123407

[22:27] <dalek> rakudo/newio: review: https://github.com/rakudo/rakudo/commit/21aee6b1c5

[22:28] *** denis_boyun joined
[22:28] *** kurahaupo is now known as kurahaupo_

[22:28] *** kurahaupo1 is now known as kurahaupo

[22:30] *** ronin left
[22:30] *** denis_boyun left
[22:32] *** denis_boyun joined
[22:33] <tony-o> btyler: can you do a test for me on a branch of http-async ?

[22:33] *** vti left
[22:34] *** denis_boyun left
[22:36] *** denis_boyun joined
[22:36] <tony-o> btyler: looking at keep-alive on this branch: https://github.com/tony-o/perl6-http-server-async/tree/keepalive

[22:38] *** colomon joined
[22:39] <lizmat> mvuets: re http://paste.scsys.co.uk/451709, I don't have any problem opening files from a symlink

[22:40] <lizmat> perhaps it's really an access right issue ?

[22:43] <lizmat> gnight, #perl6!

[22:43] <bartolin> o/

[22:44] <hoelzro> lizmat: did you see the bit about the symlink having a relative vs absolute path?

[22:45] <lizmat> no, but relative/absolute: I can still open a file from a symlink

[22:45] <lizmat> (on OS X, that is)

[22:45] <lizmat> real sleep&

[22:49] <hoelzro> ah ha, maybe it's a Linux issue, then

[22:49] *** rurban left
[22:50] <tony-o> should that bit interpret ~/ as %*ENV<HOME>/  on linux/osx ?

[22:50] <tony-o> or whatever the proper environment variable is ^^

[22:50] *** atroxaper joined
[22:50] *** brrt joined
[22:52] <geekosaur> um. it's somewhat unusual for programs other than shells to handle ~

[22:52] <psch> jnthn: how do i handle getting arrays from java? allocate a VMArrayInstance and push the values in there after boxing?

[22:53] <psch> jnthn: another thing i discovered not working is returning objects instantiated in java, test case is a new instance of the class i imported

[22:53] <psch> that class should already exist but maybe i'm not finding the right STable..? (this stuff is rather complicated i feel...)

[22:53] <jnthn> psch: Yes, though see Ops.list or so to see how it's typically done...

[22:54] *** kurahaupo left
[22:55] *** atroxaper left
[22:56] <psch> ah, RakOps.p6list it is i guess, thanks jnthn++

[23:03] <tony-o> jnthn: keep-alive seems to be working for http-async, seems like it causes moar to segfault sooner than it used to

[23:05] *** brrt left
[23:06] *** FROGGS left
[23:09] <jnthn> tony-o: Yeah. My tuit supply has continued to suck. :( It's likely to improve somewhat in the next days, quite a bit in a couple of weeks, and perhaps very drastically in a few months. :)

[23:10] <jnthn> I didn't forget I need to look at it, it's just digging into such things tends to be a many-hour bug hunt.

[23:10] *** virtualsue left
[23:13] *** Isp-sec left
[23:24] *** kurahaupo joined
[23:25] *** treehug88 left
[23:28] *** denis_boyun left
[23:31] *** araujo left
[23:37] *** oetiker left
[23:38] *** smls left
[23:39] *** beastd left
[23:40] *** aborazmeh joined
[23:42] *** kurahaupo left
[23:43] *** oetiker joined
[23:58] *** kurahaupo_ left
[23:59] <dalek> doc: fface4e | smls++ | lib/ (11 files):

[23:59] <dalek> doc: Refactor and expand sets/bags/mixes docs

[23:59] <dalek> doc: 

[23:59] <dalek> doc: The class docs now have their own .pod files in the Type/ folder (like all other classes).

[23:59] <dalek> doc: The Sets_Bags_and_Mixes language page is renamed to setbagmix to fit in with the usual naming scheme.

[23:59] <dalek> doc: All related .pod's are now also more fleshed out.

[23:59] <dalek> doc: review: https://github.com/perl6/doc/commit/fface4e24b

