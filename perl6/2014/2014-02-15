[00:02] * timotimo doesn't quite know why he thought he would be able to sleep just by lying down and closing his eyes

[00:04] <timotimo> i don't really see a reason why Pod::To::HTML should be any slower on moar than on, say, parrot

[00:04] <timotimo> or use up much more memory

[00:04] <timotimo> :\

[00:05] <jnthn> Things typically use less, but it may hit something odd or pathological.

[00:05] <lue> timotimo: it's my generator, not the ::HTML; it dies during backlinks processing

[00:05] <timotimo> oh, ok

[00:05] <jnthn> lue: Does it run on any backend?

[00:06] <lue> jnthn: still runs fine on parrot, trying perl6-j now

[00:06] <timotimo> just as i laid in bed i wished for a way to get a dump of the partial parse tree when rakudo fails to parse something

[00:06] <timotimo> is that kind of sort of feasible?

[00:07] <timotimo> probably has to do some difficult interaction with the highwater stuff

[00:07] <[Coke]> using the rule debugger?

[00:07] <jnthn> Highwater only tracks how far we got

[00:07] <timotimo> you can't put the rule debugger into Perl6/Grammar ;)

[00:07] <timotimo> and rxtrace is practically useless

[00:08] <jnthn> Fixing rxtrace is probably an easier way to make things better...

[00:08] <timotimo> (especially since if you compile any perl6 program with it, all you get is everything up to compunit)

[00:11] <raydiak> I don't have parrot installed, run the Pod::To::HTML stuff w/JVM...so the comparison I was making was moar vs jvm (perhaps unfair, granted)

[00:13] <lue> jnthn: here's the failing grammar: https://gist.github.com/lue/b99b113e4c82873293d0    It leaks and dies by kernel before the DEBUG() in  TOP  can be called.

[00:13] *** rurban left
[00:14] *** rurban joined
[00:14] <lue> oh, I think I might be backtracking too much in that grammar :) Can't remember how many of those C<regex>s can't be C<token>s

[00:15] <jnthn> Yeah, backtracking in grammars is a sure way to eat memory

[00:17] <lue> waitaminute, what the hell am I doing with '\/' and '\>' and '\»' ‽

[00:19] *** berekuk joined
[00:20] <jnthn> 'night, #perl6

[00:20] <lue> ♞ jnthn o/

[00:20] <lue> Huh, changing that to be '/' and such didn't break anything. Somehow.

[00:21] * lue doesn't even know how stuff like '>' worked in the first place

[00:22] *** virtualsue joined
[00:25] <lue> .tell jnthn doing s:g/regex/token/ (as well as removing useless backslashes in single-quoted things) makes it not eat memory on perl6-m anymore, *but* perl6-m doesn't catch nearly as many hits as perl6-p and perl6-j from the parsed files (-p and -j still work as before with the changes)

[00:25] <yoleaux> lue: I'll pass your message to jnthn.

[00:27] <timotimo> Unexpected named parameter 'deserialize_past' passed

[00:27] <timotimo>    at gen/moar/stage2/NQPHLL.nqp:1938  (/home/timo/perl6/rakudo/../install/languages/nqp/lib/NQPHLL.moarvm:add_load_dependency_task:12)

[00:27] <timotimo> .. huh?

[00:27] <lue> .tell jnthn  for example, the test string "# L<S82/With Frag/QQW LIST-LIKE>" works on perl6-p and perl6-j, but not perl6-m

[00:27] <yoleaux> lue: I'll pass your message to jnthn.

[00:28] *** Rotwang left
[00:31] <timotimo> ah, that was renamed in nqp, but not in rakudo itself

[00:33] *** bjz left
[00:34] *** bjz joined
[00:34] *** tgt joined
[00:35] * timotimo lets rakudo catch up on the naming

[00:38] *** jnap left
[00:38] *** tgt left
[00:44] *** ajr_ left
[00:44] *** benabik joined
[00:44] *** sisar joined
[00:50] <timotimo> head too derped to figure out what broke now :|

[00:51] *** daniel-s joined
[00:52] *** berekuk left
[00:59] <daniel-s> Hi there.

[01:00] <timotimo> greetings human

[01:00] <daniel-s> Is there an xml library for perl6?

[01:00] <timotimo> you could parse xml with regex! :D

[01:00] <daniel-s> Something like lxml

[01:01] <timotimo> well, modules.perl6.org has XML, XML::Parser::Tiny and XML::Writer

[01:01] <timotimo> hopefully with some tests to them :)

[01:01] <lue> timotimo: they all have tests :)

[01:02] <timotimo> well, beyond the "try to 'use' the module" test of course ;)

[01:04] <lue> timotimo: you do see the tests medal next to them, right? :)

[01:04] <timotimo> oh

[01:04] <timotimo> now i even understand what the icon is!

[01:05] <timotimo> it's - quite fittingly - a test tube

[01:08] *** sisar left
[01:13] *** benabik left
[01:21] <timotimo> i didn't even know someone made a markov chain module for perl6

[01:23] *** virtualsue left
[01:28] *** virtualsue joined
[01:29] *** Ben_Goldberg joined
[01:29] *** BenGoldberg left
[01:35] *** tgt joined
[01:39] *** tgt left
[01:40] *** aindilis joined
[01:44] <grondilu> One of the reason I don't use the REPL is that the command history is not persistent.  Thus it's simpler for me to use bash's history.  Any plan on creating a .perl6/history?

[01:45] *** obra is now known as jesse

[01:45] *** jesse is now known as obra

[01:46] <lue> grondilu: not one that I know of.

[01:54] *** pmurias left
[02:04] *** Ben_Goldberg is now known as BenGoldberg

[02:05] *** bjz left
[02:08] *** eternaleye left
[02:10] <BenGoldberg> TimDoady: Does this code look familiar to you? http://rosettacode.org/wiki/Parsing/Shunting-yard_algorithm#Perl ;)

[02:10] <geekosaur> dowdy doady? :p

[02:10] <BenGoldberg> oops

[02:11] <BenGoldberg> TimToady :)

[02:11] * BenGoldberg doesn't look at what he's typing

[02:13] *** skids joined
[02:21] *** molaf joined
[02:22] *** tgt joined
[02:25] <TimToady> BenGoldberg: yeah, that looks vaguely familiar for some reason... :)

[02:25] *** benabik joined
[02:26] *** tgt left
[02:42] *** stevan__ joined
[02:44] *** stevan_ left
[02:45] *** ilbot3 left
[02:46] *** bjz joined
[02:46] *** ilbot3 joined
[02:52] *** FROGGS left
[02:52] <raydiak> okay, I added perl6.org-ish boxes and colors, and made search wider and fluid...looking better?

[02:52] <raydiak> http://p6doc.cyberuniverses.com/

[02:53] <raydiak> s/fluid/liquid/

[02:53] <raydiak> (or whatever the kids call it these days)

[03:05] *** FROGGS joined
[03:13] *** molaf left
[03:15] <dalek> doc: 41a7a00 | raydiak++ | / (7 files):

[03:15] <dalek> doc: Add colorful shininess

[03:15] <dalek> doc: review: https://github.com/perl6/doc/commit/41a7a00aab

[03:17] <lue> raydiak: looks good, though my silly and perhaps untrustworthy brain thinks green & yellow are too close to each other on the spectrum to be the only significant colors for most of the page :P

[03:18] <lue> (if/when a LHS/RHS navigation box happens, it would of course take up the blue Perl6 color)

[03:19] <raydiak> lue: the blue I left on the links is meant to help with that some, but yes it will get easier to balance many colors when there are more boxes to color :)

[03:19] <lue> Or maybe my brain's "yech!" alarm wants the background of the main box to be lighter yellow instead of white...

[03:20] <lue> raydiak: I did notice that the blue links helped out a bit there :)

[03:21] <lue> But definitely raydiak++ for a making a pleasing layout (or any kind of layout for that matter) :D

[03:21] <raydiak> I was thinking about making the search box blue...

[03:22] <lue> I can see that being a possibility.

[03:23] *** tgt joined
[03:23] <raydiak> I didn't think people would like having the whole content area background be yellow...perhaps if it was a *very* pale sunny color, but it's pushing the limits of some peoples tolerances for warm colors

[03:24] * raydiak would personally object to having to stare at urine-colored docs :)

[03:24] <lue> yeah, I could see that too. I'm just trying to come up with little ideas to make my brain like the coloration more :) .

[03:24] <raydiak> I certainly see what you mean...will meditate on it some more

[03:24] <lue> I'm finding it difficult to imagine possible color-balancing solutions with green and yellow already on the page. Maybe it's just that I gravitate towards more red/blue colors, who knows.

[03:25] <raydiak> tomorrow is "clean up the construction dust" time, so I'll probably make some more little tweaks still while I'm in there...so your feedback is still pertinent

[03:25] *** virtualsue left
[03:26] <raydiak> I guess I just shy away from red mostly, and I thought blue was just so over-done as most peoples favorite color

[03:26] <lue> I'll probably play with the colors myself, merely "visualizing" it doesn't seem to help :P

[03:27] *** tgt left
[03:27] <lue> raydiak: my main issue is that I can't think of a good way to put either red or blue next to the existing colors without lacking color from the other end of the spectrum :)

[03:29] <raydiak> I wouldn't think any of this could go together, but it mostly seems to work for perl6.org somehow

[03:29] <raydiak> probably b/c that site has all the content split up into smaller boxes, no single one is most dominant

[03:29] <lue> yeah :)

[03:30] <lue> One thing I notice is that the headers in particular still feel very much like the plaintext style, but I'm sure that's not so hard to fix.

[03:31] <raydiak> you mean the section headings, or the global header?

[03:31] *** dayangkun left
[03:32] <lue> section headings, still looks like the same blue aliased fonts.

[03:33] <raydiak> yes, I didn't change anything in there yet

[03:34] <raydiak> though if they are aliased, that's your system :)

[03:35] <lue> what font are they even...?

[03:36] <raydiak> I don't even try to specify a certain font, just font-family, which your browsers chooses something appropriate for

[03:36] <lue> Wow, helvetica is ugly

[03:36] <raydiak> so they are font-family: sans-serif in the CSS

[03:36] <lue> I saw font-family: helvetica, sans-serif

[03:37] <raydiak> ah, must be coming from one of the other parts I didn't get to merging into the main stylesheet yet

[03:37] <raydiak> like the perlcabal one, or the inline one being added by Pod::To::HTML

[03:37] <lue> my normal sans-serif font looks just fine by the way :)

[03:38] <lue> "Inherited from body#___top"

[03:38] <lue> raydiak: ^ that's where the helvetica, sans-serif declaration comes from, it seems

[03:39] <raydiak> no, that's where it is inherited from (a parent element)

[03:39] <lue> perl.css:6 actually (looking at the less useful part it seems)

[03:39] <raydiak> ah, yes

[03:39] <raydiak> that's the perlcabal one

[03:39] <raydiak> one of those nasty things pod2html forces on us

[03:40] <raydiak> will fix (probably tomorrow)

[03:40] <lue> I get the sense Pod::To::HTML should perhaps not be giving default stylesheets :)

[03:40] <lue> (not inline anyway)

[03:40] <raydiak> I get the feeling it's something that got pasted in and probably was never meant for long-term reuse

[03:41] <raydiak> I mean, it inherently breaks local docs if you aren't on the net, for one

[03:41] <lue> yeah. If/when you get to hacking on that module, I wouldn't mind if it disappeared all of a sudden :) [others might, though...]

[03:43] <raydiak> until I have a more clear idea of what other ramifications that might have, I'll probably just add a :!css flag or something to the pod2html sub

[03:43] <lue> seems like the less destructive choice, yes :)

[03:44] <lue> One more thing: If the page is shorter than your browser, the red box at the bottom just stops. Could probably be fixed with even a border running along the bottom, though I don't know how you'd prefer things to look ultimately.

[03:44] <raydiak> good catch, I didn't happen across a page that short

[03:45] <lue> substr is one such page :)

[03:45] <raydiak> haha maybe on your fancy expensive monitor

[03:46] * raydiak does most of his hacking on a half-decade-old 13" laptop with no hard drive :P

[03:46] <lue> Also, I should think a small Camelia picture needs to be in the header at some point :)

[03:46] <raydiak> definitely agree

[03:47] <raydiak> I also think replacing "search" with some looking glass icon would be a step up

[03:48] <raydiak> as long as you have a bigger screen than I, does the search box get weird-looking long at full width?

[03:49] <lue> Nah, I never really thought "wow, that's big" /me will take a picture of what he sees...

[03:49] <raydiak> lue++ # lots of helpful feedback

[03:50] <raydiak> suppose if I were smart I'd try zooming out...but you can't rely on that to be too terribly accurate in many cases

[03:52] <lue> raydiak: this is what I see: http://i.imgur.com/9GuTc67.png

[03:53] <raydiak> oh...need to set background-color on the input box :P

[03:53] <raydiak> not supposed to have a grey rectangle there :)

[03:54] <raydiak> it is a little long, but I guess if you have the width, it doesn't look too terrible overall...

[03:55] <lue> raydiak: as long as it feels like it's on the right-hand side (as opposed of "everywhere but the title"), I don't think it's that bad.

[03:55] <lue> s/of/to/

[03:56] <raydiak> the whole thing including label is set to 40% of it's container, so should always be somewhat right of the horizontal center, unless you hit the min-width:18em

[03:56] <raydiak> nevertheless, a max-width:40em or something might be good

[03:57] <lue> Actually, I think a good metric would be "is the search box wider than the main content box?" :)

[03:58] <raydiak> you code up the css for that w/out JS or non-compliant browser hacks, and I'll...be surprised :)

[03:59] <lue> I like the search box being normal like that (unless of course you have a better color scheme for it ☺). Feels like search boxes should only be colored differently if white doesn't show up as a major color of the page (e.g. white-on-black coloring), but that's just me.

[04:00] <raydiak> yeah blue may or may not look good like I talked about earlier, but the last thing I meant when I mentioned it was how you have a light grey rectangle in the middle of the otherwise-white box

[04:01] <lue> Huh, that might've been my system, or perhaps even a monitor weirdness(!)

[04:02] <raydiak> you took your screenshot with a camera? ;)

[04:03] <lue> No, but sometimes my cable's signal gets interfered with and bleeding happens. I noticed that not realizing you were talking about that and it's gone now, after jiggling the cable.

[04:03] <raydiak> I'm sure it's still there, just harder to see

[04:03] <raydiak> it's defaulting to the default color of controls on your system, b/c I forgot to set it to white explicitly

[04:04] <raydiak> didn't notice b/c input boxes are pure white on my end, but can't at all rely on that

[04:04] <lue> I get #FFFFFF now, at least

[04:04] <raydiak> huh

[04:04] <raydiak> for the input itself?

[04:04] <lue> It was #FCFCFC before

[04:04] <raydiak> oh, if you're still looking at it on my server, I already changed it

[04:05] <raydiak> it's live on doc.perl6.org now, too

[04:05] <lue> yeah, #FFFFFF is from your server, #FCFCFC is from the picture I took.

[04:05] <raydiak> (w/out the little tweaks I'm making as we talk)

[04:06] <raydiak> I also added a (still generous) max-width to it

[04:11] <raydiak> there, fixed the footer problem by just making it a normal box insetad of bleeding it off the edge

[04:11] <raydiak> looks better that way anyway, imo

[04:12] <lue> looks good :)

[04:22] <dalek> doc: d5fc7b6 | raydiak++ | / (2 files):

[04:22] <dalek> doc: We're using fixed width; may as well center it

[04:22] <dalek> doc: review: https://github.com/perl6/doc/commit/d5fc7b6075

[04:22] <dalek> doc: e9bfb43 | raydiak++ | / (7 files):

[04:22] <dalek> doc: Merge branch 'master' into shiny - catch up template changes

[04:22] *** dalek left
[04:22] <raydiak> uh...heh...I really borked something

[04:22] * raydiak still does not like squashing commits

[04:22] *** dalek joined
[04:22] *** ChanServ sets mode: +v dalek

[04:23] *** tgt joined
[04:24] <raydiak> all the stuff that just got dalek kicked was stuff I had previously squashed at some point, and something I did made it all appear anyway...maybe I didn't squash at the right step or something

[04:25] <raydiak> methinks they were still unsquashed in my fork when I did another merge 

[04:28] *** tgt left
[04:31] <raydiak> also noticing that an empty commit message on a merge does not actually abort as it claims

[04:37] <raydiak> totally OT: anyone have experience using windex on their glasses? just got them a few weeks ago so idk, and was going to clean them, but someone told me the fumes from cleaner not meant for eyeglasses will harm your eyes or something

[04:37] <raydiak> not sure if I buy it

[04:38] <geekosaur> not that likely, but it can remove protective or anti-glare coatings

[04:39] <geekosaur> that said, ammonia is a good thing to keep far away from your eyes

[04:40] <raydiak> didn't get any of the coatings...guess I'll give it a shot

[04:41] <raydiak> what does ammonia do to your eyes? dry them out?

[04:42] <geekosaur> not sure offhand. it's generally not very good for membranes and such though

[04:42] <geekosaur> at the very least it'll be strongly irritating

[04:44] <raydiak> well, I'm not blind yet...

[04:45] *** virtualsue joined
[04:45] <geekosaur> just because your body's mostly made of things with a lot of amino groups does not mean ammonia is good for it :p

[04:46] <raydiak> but they look so close, especially with smudged glasses...

[04:46] <geekosaur> they are close. just not close enough :p

[04:47] <raydiak> I think I'll take your word for that one...I don't have to learn *everything* the hard way :)

[04:51] <geekosaur> (organic chemistry is fun! as long as it's not taking place on/in your body...)

[04:52] <raydiak> I saw a book on that once...so mandifferent little symbols...worse than p6, iirc

[04:52] <raydiak> *many different

[04:53] <lue> DNA thinks arsenic is close enough to phosphorous, for instance :)

[04:54] <geekosaur> most chemistry does, actually. at least as far as putting it together. taking it back apart, not so much, whch is the problem

[04:54] <raydiak> ouch...keep arsenic away from my DNA, noted

[04:55] <geekosaur> keep it away period. the dna part isn't what kills you, it's that adenosine triarsenate can't be disassembled

[04:56] <geekosaur> since adenosine triphosphate is what provides energy inside a cell, and arsenic is all too willing to displace the phosphorus, this is a bit of a problem

[04:58] <raydiak> without knowing much about chemistry or biology, all I can say is that sounds like bad news

[04:59] <geekosaur> (short version: cellular processes break a phosphate group off of atp, send the adp back to be recycled into atp, and use the phosphate to do stuff. this does not work if an arsenate snuck in place of the phosphate, which it does very readily)

[05:00] <lue> geekosaur: I heard arsenic was bad because of DNA, good to hear it's more specifically issues with ATP.

[05:01] <geekosaur> well, it's not good for dna, but you don't typically live long enough for it to get into the dna

[05:01] <geekosaur> but it has the same holds-on-too-tight issue in dna, which means dna doesn't unzip any more and the cell can't reproduce if somehow it manages to remain functional after the atp is corrupted

[05:01] <raydiak> hm...bad news indeed...something along the lines of "suffocate your cells" if I understand

[05:02] <geekosaur> exactly

[05:02] <geekosaur> and ithappens fast enough that you don't generally reach the dna version of it before your cells die

[05:03] <raydiak> geez, wish I could stay now, it's getting interesting :) but gotta run atm...nice chattin!

[05:03] <geekosaur> lue was probably hearing about the claim of a bacterium that had found a way to survive in arsenic, which was only partially true (and the claim that it had found a way to survive arsenic getting into the dna was also false)

[05:04] <geekosaur> (but it only reached that point because it had found a way to keep from choking on corrupted atp)

[05:04] <lue> geekosaur: I think I may have heard it around that time, though I didn't learn about the "infects DNA" part because of it I don't think (at least, the explanation wasn't (directly) linked to the bacterium)

[05:05] <geekosaur> that was one of the key parts of the initial claim, that it not only had found a way to function without losing all its atp but that it had also managed to survive the subsequent incorporation of arsenic into its dna

[05:05] <geekosaur> followups demonstrated that it had managed to mostly keep the arsenic out of its dna, but sure enough the places it did get in were incapable of reproducing

[05:06] <geekosaur> also while it was surviving, it was (a) not thriving (b) surviving despite the arsenic, not actively managing to use it in place of phosphorus (another part of the initial claim)

[05:12] <geekosaur> also the way I am presenting this is a bit unfair, NASA said "we may have found evidence of a bacterium that might have figured out how to use arsenic" and it was mostly the press that went "OOO WE FOUND ARSENIC BASED LIFE!!!eleventyone!"

[05:15] <DrEeevil> typical reinterpretation

[05:16] <DrEeevil> geekosaur: seen the "we can create energy with fusion" claim from the NIF ?

[05:16] <geekosaur> I saw the actual release, which did not claim that although I imagine the same idiots have interpreted it that way

[05:16] <DrEeevil> well, yes, if you ignore the factor 5000 difference between actual input and output, then ... theoretically, if the measurements were good ...

[05:16] <DrEeevil> it's so dishonest what "journalists" do

[05:17] <geekosaur> they were quite clear, they have reached a milestone on the path to creating energy but are a long way from that endpoint

[05:17] <ens> geekosaur: NASA doing dangerous science experimenting with deadly arsenic bacteria - could prove fatal to humans.

[05:18] <ens> These ivory tower intellectuals spend their budget, already far in excess, dreaming up new ways to exterminate our species. Massive cuts are in order!

[05:18] * ens spins it like a DJ

[05:18] <DrEeevil> riiiiight

[05:18] <DrEeevil> ens: did you read about DHMO ? ;)

[05:18] <ens> hrm, should i google?

[05:18] <geekosaur> ens: not likely, it's otherwise a perfectly normal and common soil+water bacterium, the normal form is non-infectious, the arsenic-adapted form is so borderline it's even less capable of infecting much of anything, the main danger is the arsenic-laced water it was found in

[05:19] <ens> geekosaur: ah i don't believe it, i'm just emulating media spin.

[05:19] <geekosaur> although yes it does sound a bit like something idiots would say :p

[05:20] <geekosaur> and yes, you should google that for the yuks

[05:20] <geekosaur> it's the classic example of mocking the idiots

[05:20] <ens> dihydrogen monoxide hoax. lmao.

[05:21] <ens> http://upload.wikimedia.org/wikipedia/commons/9/92/Danger_sign_hydrogen.jpg

[05:21] <geekosaur> ens: wait until some wag realizes there's only one letter difference between NASA and NSA

[05:21] *** pecastro left
[05:22] <ens> oh we have to put on the voice of those youtube conspiracy theorists and be like "coincidence? you decide!"

[05:22] <ens> and then lace it will arbitrary references to biblical connections and free masons, chemtrails. etc.

[05:23] <ens> that youtube series 'spirit science' is like an epic treatise on the art of complete lunacy.

[05:24] *** tgt joined
[05:27] *** tgt left
[05:28] *** tgt joined
[05:33] *** tgt left
[05:34] *** Alina-malina left
[05:39] *** virtualsue left
[05:41] *** Alina-malina joined
[05:49] *** grondilu left
[05:53] *** rurban left
[06:03] <timotimo> ohai

[06:14] *** SamuraiJack joined
[06:18] *** BenGoldberg left
[06:22] <timotimo> someone could add patience diff to Algorithm::Diff

[06:27] *** thou left
[06:29] *** tgt joined
[06:33] *** tgt left
[06:36] * raydiak fears fusion-inducing arsenic bacteria put in the chemtrails by masons as foretold in the bible

[06:41] *** darutoko joined
[06:54] *** rurban joined
[06:59] *** rurban left
[06:59] *** rurban joined
[07:05] * timotimo rebased his lex-to-local branch a second time on top of almost-newest nqp master

[07:30] *** tgt joined
[07:34] *** tgt left
[07:43] *** ens_ joined
[07:43] *** ens left
[07:57] <dalek> ecosystem: 066380f | lue++ | META.list:

[07:57] <dalek> ecosystem: Add Term::ColorText

[07:57] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/066380f301

[08:01] <timotimo> lue: i like that module

[08:02] <timotimo> https://gist.github.com/timo/4416af400d9c86fd0f3c ← the lighter shades mean that there were objects there that had a size of 0

[08:02] <timotimo> i don't quite know what's causing this.

[08:02] <timotimo> it's not in the free list at any rate.

[08:03] <timotimo> though *maybe* i'm reading the free list wrong?

[08:04] *** SamuraiJack left
[08:05] <timotimo> ooooh, i think i know what's wrong

[08:05] *** berekuk joined
[08:06] <lue> timotimo: thanks :) I set up functions like that every so often, and this time I decided to actually make it a(n independent) module :)

[08:08] <lue> timotimo: that looks pretty :)

[08:08] <lue> ♘ #perl6 o/

[08:10] <timotimo> gnite lue

[08:15] *** berekuk left
[08:16] *** rurban left
[08:30] *** tgt joined
[08:32] *** virtualsue joined
[08:35] *** tgt left
[08:47] *** rurban joined
[09:00] <masak> mornin', #perl6

[09:05] *** hoverboard joined
[09:06] <moritz> \o masak

[09:07] *** darutoko left
[09:13] *** darutoko joined
[09:13] <raydiak> good morning to people across oceans from me :)

[09:14] *** virtualsue left
[09:15] <raydiak> moritz: started new look for docs, feedback welcome (that goes for anyone else too)

[09:19] <moritz> raydiak: I like it, though IMHO the coloring give the footer too much wheight

[09:19] *** rurban left
[09:20] <moritz> and I'm not sure I like that inline <code> doesn't have a different background color anymore

[09:20] <raydiak> yeah, trying to match colors on perl6.org kinda painted me into a corner (almost a pun)

[09:21] <raydiak> ah, will have a look at that in the morning

[09:22] <moritz> maybe use yellow for the footer?

[09:22] *** hoverboard left
[09:22] <moritz> or the light blue

[09:22] <moritz> (tweaking perl6.org isn't forbidden either)

[09:22] <raydiak> internet connection is flaking out, sorry if I'm even slower than usual :)

[09:24] <raydiak> the colors seem to work well on perl6.org, it's just that it has a very different layout, so they don't work quite as well for large, unbalanced combinations of boxes

[09:24] <moritz> raydiak++ # much improved layout

[09:24] <raydiak> lue++ also  suggested I think more about color selection, which I will have to give some thought to

[09:26] * raydiak has not ever attempted to mix colors like this before

[09:27] <raydiak> I usually don't play with more than 2 basic hues, so it may take a few revisions to get it well-tuned

[09:27] <raydiak> am also planning on removing the old search page and simplifying the generation and css accordingly, unless you have objections

[09:28] <moritz> using the blue combination from the perl6.org header for the doc.perl6.org footer might work

[09:28] *** grondilu joined
[09:29] <moritz> also, the doc.perl6.org header uses a different styiling (that I like), clinging to the top; maybe for symmetry the footer should stick to the buttom in the same way

[09:29] <moritz> (or maybe the footer could simply be the same green as the header)

[09:30] <raydiak> I had it that way originally, but it caused issues when the page is shorter than the window...I actually like it more as a separate box, though that could be just b/c it's that too-dominant red, as you say

[09:30] <raydiak> s/separate box/fully bounded box/

[09:31] *** tgt joined
[09:33] <raydiak> there was also jnthn++'s idea to add a left nav box with anchor links to the subsection headingson the current page, and make that blue

[09:36] *** tgt left
[09:36] <raydiak> but it'd look really odd on pages with less content...ashort blue box and then empty space for the rest of the page in that column

[09:39] *** berekuk joined
[09:41] * raydiak will try more permutations of colors, and bleeding off the footer again (assuming net connection improves)

[09:41] <raydiak> right now, just typing these messages requires near-superhuman patience :)

[09:44] <raydiak> well, I better get to bed...thanks for the ideas, we'll see where it goes tomorrow

[09:45] <raydiak> if you have any more thoughts, I'll catch upon the backlog. good morning and goodnight, #perl6

[09:50] *** spider-mario joined
[09:55] <moritz> good night raydiak, and dream of beautifully-colored websites

[09:56] *** daniel-s left
[09:59] *** Rotwang joined
[10:00] *** tgt joined
[10:03] *** pochi left
[10:03] *** pochi joined
[10:06] *** virtualsue joined
[10:21] <FROGGS> o/

[10:22] <nwc10> \o

[10:24] *** rurban joined
[10:27] <moritz> |o|

[10:39] *** dmol joined
[10:43] *** denisboyun joined
[10:43] *** berekuk left
[10:50] *** rurban left
[11:01] *** berekuk joined
[11:04] *** tgt left
[11:10] <FROGGS> jnthn: declaring an enum triggers MVM_sc_wb_hit_st in Attribute.compose (the call to add_method in Attribute.pm line 79)

[11:10] <FROGGS> err, line 78 actually

[11:14] <jnthn> FROGGS: Ah, so you got it to a one-line thing? :)

[11:14] <yoleaux> 00:25Z <lue> jnthn: doing s:g/regex/token/ (as well as removing useless backslashes in single-quoted things) makes it not eat memory on perl6-m anymore, *but* perl6-m doesn't catch nearly as many hits as perl6-p and perl6-j from the parsed files (-p and -j still work as before with the changes)

[11:14] <yoleaux> 00:27Z <lue> jnthn: for example, the test string "# L<S82/With Frag/QQW LIST-LIKE>" works on perl6-p and perl6-j, but not perl6-m

[11:14] <FROGGS> jnthn: well, it triggers the said function, but I don't get the STable exception (yet)

[11:15] <jnthn> lue: Ah, then you're probably hitting a regex compiler bug, and the memory eating is it just building up more and more state due to a match fail.

[11:15] <jnthn> lue: Please either file it as a rakudobug as is, or if you're willing to golf it some that's even better.

[11:15] <jnthn> FROGGS: Oh...but removing the STable exception we added does...what?

[11:16] *** virtualsue left
[11:16] <FROGGS> jnthn: I just have a dump_backtrace(tc) in that function instead of the throw, because the thrown exeption gets swallowed by a try/catch somewhere

[11:18] *** tgt joined
[11:18] <jnthn> FROGGS: Oh...but we do reach that place?

[11:18] <FROGGS> yes

[11:18] <FROGGS> we reach the place where the oops-exception was

[11:20] <jnthn> ok, great.

[11:20] <jnthn> And an enum A < b c >; is enough to recreate it?

[11:22] <FROGGS> yes, "perl6-m -e 'enum Foo <bar>'" triggers the STable reposession

[11:22] *** Funkwecker left
[11:22] <FROGGS> now I even have a bt where it explodes in panda: https://gist.github.com/FROGGS/ba492ddbaa876aaf9aed/raw/ffa82c69632d50f481b97dc950a842a129c3b6dc/gistfile1.txt

[11:24] <jnthn> FROGGS: The other thing you could do is set a gdb breakpoint where the dump_backtrace is, and see what's on the C stack (which tells us what lower-level thing is guilty)

[11:24] <FROGGS> k

[11:25] <jnthn> FROGGS: I'm going to plug on with the IO stuff for a bit, but will give this enum thing some tuits later today.

[11:25] <FROGGS> cool :o)

[11:25] <jnthn> I've reached the point where I try to migrate tty, then pipe, over.

[11:27] <FROGGS> the op before the dump_backtrace if setmethcacheauth

[11:27] <FROGGS> gdb bt: https://gist.github.com/FROGGS/60c7938ae23a4396013e/raw/

[11:27] <jnthn> oh...hm.

[11:28] <FROGGS> yeah, I've read about tty/pipe in the clogs

[11:29] <FROGGS> bbiab (need to fetch food so the pups wont starve)

[11:41] *** tgt left
[11:46] *** virtualsue joined
[11:53] *** virtualsue left
[11:53] *** darutoko- joined
[11:56] *** darutoko left
[11:58] *** tgt joined
[12:02] *** darutoko joined
[12:06] *** darutoko- left
[12:11] *** tgt left
[13:14] *** rindolf joined
[13:16] *** immortal left
[13:20] *** SamuraiJack joined
[13:21] *** virtualsue joined
[13:21] *** erkan joined
[13:21] *** erkan left
[13:21] *** erkan joined
[13:34] *** Rotwang left
[13:48] *** virtualsue left
[13:53] *** Rotwang joined
[13:55] *** kaare_ left
[14:01] *** virtualsue joined
[14:02] *** lizmat joined
[14:05] * lizmat is in a holding pattern for Ijmuiden harbour in 90 miles/hour winds 

[14:06] <jnthn> Well, that blows...

[14:06] <timotimo> lizmat: maybe you want to fix rakudo to use the new ast-based names while you wait? :)

[14:07] <timotimo> i think it just involves search/replace for two words that are used as named arguments somewhere

[14:07] <timotimo> i could actually do it myself, even.

[14:07] <lizmat> well, that was the plan, but we need a version upgrade for nqp for that first, no?

[14:07] <timotimo> yes

[14:08] <timotimo> i just noticed that :)

[14:08] <lizmat> I'm not sure how to upgrade the minimal nqp version for rakudo

[14:08] <timotimo> i think i shall do it

[14:08] * timotimo starts working

[14:09] <lizmat> timotimo++

[14:09] <lizmat> seeing the waves go over deck 6 sort of distracts

[14:09] <lizmat> as well as having to hold on to your chair

[14:10] <lizmat> and the load banging of the waves

[14:10] <lizmat> :-)

[14:10] <lizmat> it appears our 16 hour ferry is turning into a 25 hour ferry

[14:11] * timotimo has never been on a ferry that went for longer than ~30 minutes

[14:12] * FROGGS has never been on a ferry

[14:13] * colomon used to hop on the ferry to get hard ice cream in Canada when he was a wee lad

[14:17] * colomon admits he's never been on a ferry ride longer than a few hours (crossing Lake Michigan to Wisconsin)

[14:17] <lizmat> it was either taking the ferry or driving an axtra 500km in high winds

[14:18] <lizmat> *extra

[14:18] <lizmat> with a fully loaded van

[14:18] <colomon> ferry++

[14:19] <lizmat> in any case, we're close enough to shore to be able to use my regular ISP's network

[14:19] <lizmat> instead of the HTTP-only satellite of the boat

[14:20] <timotimo> mhhh, kate highlighting definitions are shared by QtCreator and probably work with anything that uses some specific Qt widget perhaps?

[14:30] *** mtk left
[14:34] *** mtk joined
[14:37] <lizmat> land ho!

[14:37] <FROGGS> \o/

[14:38] *** denisboyun left
[14:45] <timotimo> \o/

[14:46] * FROGGS .oO( Ho land )

[14:46] <lizmat> that too, finally within the inner piers of the harbour

[14:47] <timotimo> hoelzro: you are our highlighting expert, are you not?

[14:47] <hoelzro> I guess so?

[14:47] <timotimo> heh.

[14:47] <timotimo> have you looked into kate's xml highlighter definition files yet?

[14:47] <hoelzro> nope

[14:47] * timotimo is currently doing so

[14:47] <hoelzro> I'm thinking of enhancing Vim support next

[14:47] <timotimo> that would be lovely, too

[14:48] <hoelzro> the hardest part (imo) is bracketing characters

[14:48] <timotimo> qtcreator shares support for the highlighters and that is the one IDE i could imagine myself writing plugins for, hint hint

[14:48] <hoelzro> and re-entering the Perl 6 language from within another (ex. regexes)

[14:48] <hoelzro> the pygments lexer was actually not that hard to do

[14:49] <hoelzro> but my hat goes off to the pygments folk; they made a simple-to-extend but powerful system for lexers

[14:50] <FROGGS> um... what about SCiTe/Notepad++ ?

[14:50] <FROGGS> err, SciTe

[14:51] <hoelzro> I think if I did another higlighter, it would be for ACE

[14:51] <hoelzro> sine that's what GH uses for their online editor

[14:51] <hoelzro> *winc

[14:51] <timotimo> aye.

[14:51] <hoelzro> *since

[14:51] *** berekuk left
[14:52] <timotimo> well, at least the SciTe highlighters are c++ code, so you can go nuts there :P

[14:53] *** lizmat left
[14:53] *** Rotwang left
[14:53] <timotimo> like ... embed a moarvm and use the actual perl6 grammar :D

[14:54] <moritz> ... in an extern "C" { ... } block

[14:54] <hoelzro> hahaha

[14:54] <timotimo> that part is easy, moritz :)

[14:55] <timotimo> hoelzro: can you suggest a roadmap for implementing my own lexer?

[14:55] <timotimo> where should i start, etc?

[14:55] <hoelzro> well

[14:55] <hoelzro> when I started with pygments, I just matched '.', I believe

[14:55] <hoelzro> which is kind of the base rule

[14:55] <hoelzro> and then I added feature by feature

[14:56] <hoelzro> using a few Perl 6 files as a reference point

[14:56] <hoelzro> so I'd go through the output, and spot things that looked messed up

[14:56] <hoelzro> and implement those piece by piece

[14:56] <hoelzro> then, after I got the basics done (keywords, etc), I created a regression test

[14:57] <hoelzro> to make sure that things remained properly highlighted

[14:57] <timotimo> fair enough

[14:57] <hoelzro> and just worked out the kinks

[14:57] <timotimo> this should be a decent exercise for my flu-ridden brane

[14:57] <hoelzro> you should take a look at the pygments lexer

[14:57] <timotimo> oooooh

[14:57] <timotimo> Contexts may be generated dynamically to allow the usage of instance specific data in rules.

[14:58] <hoelzro> it contains a lot of data/helper routines that you could use

[14:58] <timotimo> i shall have a look, aye.

[14:58] *** Rotwang joined
[14:58] *** Zoffix joined
[14:58] *** Zoffix left
[14:58] <hoelzro> let me know if you have questions =)

[14:59] <timotimo> dynamic if true, the context remembers strings/placeholders saved by dynamic rules. This is needed for HERE documents for example. Default: false.

[14:59] <timotimo> <3

[14:59] <timotimo> not quite powerful enough for bracket pairs, though, i fear :(

[14:59] <hoelzro> for Vim, I'm going to go for common bracketing pairs

[14:59] <timotimo> aye.

[14:59] <timotimo> i might build a script that creates rules for a list of bracket pairs actually

[15:01] *** cognominal left
[15:03] *** xinming joined
[15:06] *** xinming_ left
[15:20] *** berekuk joined
[15:36] <timotimo> i'm ready to spectest my changes to rakudo that make it work with the newest nqp

[15:38] <FROGGS> cool

[15:38] <timotimo> twas easy ;)

[15:41] *** Jimmy4 joined
[15:43] <Jimmy4> hi，I am -1 to s/ast/made/

[15:43] <timotimo> Jimmy4: well, so far it's not a substitution, but an addition

[15:43] <timotimo> but i also liked .ast

[15:45] <dalek> rakudo/nom: 06fee3d | (Timo Paulssen)++ | / (3 files):

[15:45] <dalek> rakudo/nom: bump NQP_REVISION and fix ast/past incompatibility

[15:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/06fee3daca

[15:45] <FROGGS> I like .ast too, but I have to admit that .made makes some sense from a user perspective

[15:46] <timotimo> yes

[15:46] <timotimo> it's okay to have both

[15:46] <timotimo> it's hardly any overhead at all, aye?

[15:46] <FROGGS> I dunno these things

[15:47] <Jimmy4> I don't like the comment ' # for historical reasons'

[15:47] <Jimmy4> good night

[15:47] *** Jimmy4 left
[15:50] <timotimo> good point.

[15:59] *** Psyche^ joined
[16:03] *** Psyche^_ left
[16:34] <timotimo> hoelzro: you should introduce EVAL to the pygments lexer :)

[16:37] <timotimo> until is a keyword in perl6?

[16:38] <timotimo> oh, loop ... until i guess

[16:38] <TimToady> no

[16:38] <TimToady> repeat...until

[16:38] <TimToady> loop (;;) {...} is C's for loop

[16:38] <TimToady> but you can just loop {...}

[16:39] <TimToady> until foo {...} is just them same as while not foo {...}

[16:39] <TimToady> same for the modifier

[16:40] <moritz> does anybody have a good example for parameterized roles?

[16:41] <hoelzro> timotimo: is EVAL new?

[16:42] <FROGGS> we have it since two months or so

[16:42] <FROGGS> humm.... I can't build nqp-p atm

[16:44] <hoelzro> well, that would explain its absence

[16:44] <hoelzro> any other new syntax/keywords introduced in the last year?

[16:45] <timotimo> hm, what about the parallelism stuff?

[16:45] <hoelzro> good question

[16:45] * hoelzro should just do a git diff on the specs

[16:46] <FROGGS> umm, eager and lazy?

[16:46] <timotimo> what is ofs? o_O

[16:46] <moritz> I think those are older

[16:46] <timotimo> ofs, irs, ors?

[16:46] <timotimo> they are not in perl6 any more, eh?

[16:47] <timotimo> why would "oo" be a keycord?

[16:47] <timotimo> keyword

[16:47] <moritz> what would it do?

[16:48] <timotimo> if that question was for me: "get highlighted by the pygments perl6 lexer"

[16:49] <timotimo> haha

[16:49] *** sqirrel_ joined
[16:49] <timotimo> if you try, in the repl, to find out how many OUTER::s it takes to get to the setting ...

[16:50] <timotimo> you'll infiniloop, because every line you execute adds an OUTER :D

[16:50] *** hoverboard joined
[16:50] <FROGGS> hehe

[16:52] <TimToady> which it shouldn't, really, if we had a decent incremental hook into the parser

[16:53] <hoelzro> 12,000 lines changed in the specs since I wrote the lexer o_O

[16:53] <jnthn> That one's not really a parsing issue

[16:53] <timotimo> yes.

[16:54] <jnthn> I agree we should have a hook that lets you enter multi-line things though :)

[16:54] <timotimo> so much yes!

[16:55] <timotimo> hm. Str has methods indent and trim-*, but not center/ljust/rjust

[16:55] <timotimo> those are kind of nice to have, though

[16:58] *** smls joined
[16:58] <smls> Hi #perl6

[16:58] <yoleaux> 8 Feb 2014 06:38Z <TimToady> smls: Revised http://rosettacode.org/wiki/Brace_expansion#Perl_6 so it now passes all the tests I know about

[16:59] <timotimo> hello smls 

[16:59] <smls> doc.perl6.org is looking much better all of the sudden... :)

[17:00] <moritz> yes, raydiak++ did lots of work there

[17:06] <hoelzro> whoa, I hadn't seen the changes

[17:06] <hoelzro> raydiak++ # indeed

[17:11] <timotimo> kate is a surprisingly pleasant editor

[17:14] <FROGGS> and somebody ported kate's syntax highlighting files to a P5 module, which is really nice also

[17:14] *** rindolf left
[17:14] <timotimo> oooooh

[17:14] <timotimo> that's very useful, then!

[17:14] <timotimo> .o( also, we could get a port to perl6 that way )

[17:14] <FROGGS> I've used it lately to highlight soap messages for easier reading

[17:16] *** virtualsue left
[17:20] *** guru joined
[17:20] *** guru is now known as ajr_

[17:21] <dalek> perl6.org: e64a28e | (Steve Mynott)++ | source/compilers/index.html:

[17:21] <dalek> perl6.org: correct perlito perl6 link

[17:21] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/e64a28e0c8

[17:21] <dalek> perl6.org: 3086d62 | (Konrad Borowski)++ | source/compilers/index.html:

[17:21] <dalek> perl6.org: Merge pull request #9 from stmuk/master

[17:21] <dalek> perl6.org: 

[17:21] <dalek> perl6.org: correct perlito perl6 link

[17:21] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/3086d62af0

[17:21] * timotimo has highlighted comments and keywords now :3

[17:23] *** sqirrel_ left
[17:55] *** denis_boyun joined
[17:57] *** Adriaaan joined
[17:57] *** zakharyas joined
[18:01] <timotimo> my brane has the flu. can someone write a perl5 regular expression that accepts variable names? with - and ' and everything?

[18:01] *** berekuk left
[18:01] *** berekuk joined
[18:01] <timotimo> preferably also stuff handling foreign characters

[18:13] *** virtualsue joined
[18:16] *** thou joined
[18:17] <timotimo> this is discouraging :|

[18:19] <timotimo> http://i.imgur.com/Ex55atX.png?1

[18:24] <timotimo> hoelzro: https://github.com/timo/perl6-kate-syntax

[18:24] <jnthn> hm, it thinks twigils are operators... :)

[18:26] <timotimo> that's how i format it, aye

[18:26] <timotimo> but it's not a good idea it seems

[18:28] <timotimo> http://i.imgur.com/1pCDtco.png?1

[18:30] <timotimo> it also thinks nqp::foo ops are classes :)

[18:31] *** pippo_ joined
[18:31] <timotimo> and it has no grasp of interpolated strings at all etc etc etc

[18:31] <pippo_> Hello #perl6!

[18:31] <timotimo> hey pippo

[18:32] <pippo_> I was trying to use perl6-debug-m but had ===SORRY!=== Could not find Debugger::UI::CommandLine in any of: lib, ...

[18:32] <pippo_> Nay clue on what to do to solve the pb?

[18:33] <pippo_> *Any

[18:34] <pippo_> I've compiled perl6 with: perl Configure.pl --gen-nqp --gen-moar --backends=jvm,moar

[18:34] <timotimo> you install Rakudo::Debugger in your lib/

[18:35] <pippo_> No! How can I do it? 

[18:35] <timotimo> i think it ought to be enough to just copy the thingie

[18:35] <pippo_> Thank you timotimo! I'll try... &

[18:43] *** sqirrel_ joined
[18:51] <pippo_> timotimo: :-( does not work. #!/usr/bin/perl6-debug-m\n   use v6\n  say "Hello world";\n ==> Too many positional parameters passed; got 2 but expected 1

[18:51] <FROGGS> there is a ; missing after v6

[18:53] <FROGGS> pippo_: btw, your readallfh segfault should be gone when the moarvm eieio branch gets merged

[18:53] <pippo_> timotimo: Corrected ';' but same thing

[18:53] <pippo_> FROGGS++ \o/

[18:54] * timotimo hasn't tried the new Rakudo::Debugger yet :(

[18:54] <FROGGS> pippo_: jnthn++ for that, he refactors how IO happens in moar atm

[18:55] <pippo_> :-)) jnthn++ 

[18:55] <pippo_> FROGGS: did you use perl6-debug-m ?

[19:07] *** dmol left
[19:08] *** darutoko left
[19:10] <FROGGS> pippo_: no, not yet

[19:10] <FROGGS> but I know it should work

[19:11] <pippo_> Are there instructions available out there to how getting it working?

[19:12] <jnthn> Last time I used it (couple of weeks ago to do demos at FOSDEM) it was just a case of having a lib directory with the deubber UI module and Term::ANSIColor available.

[19:12] <jnthn> cooking &

[19:13] <FROGGS> I think the ast changes are breaking it

[19:13] <pippo_> Thank you jnthn. Bon appetit !!

[19:13] <FROGGS> pippo_: let me check it locally and then I'll guide you

[19:15] *** beastd joined
[19:19] <timotimo> inspire me

[19:19] <moritz> r: say 1.^HOW.defined

[19:19] <timotimo> what kinds of things could be simplest to build IDE support for?

[19:20] <camelia> rakudo-parrot 06fee3, rakudo-jvm 06fee3, rakudo-moar 06fee3: OUTPUT«===SORRY!=== Error while compiling /tmp/tmpfile␤Cannot use .^ on a non-identifier method call␤at /tmp/tmpfile:1␤------> say 1.^HOW⏏.defined␤    expecting any of:␤    …»

[19:20] <moritz> r: say 1.HOW.defined

[19:20] <camelia> rakudo-parrot 06fee3, rakudo-jvm 06fee3, rakudo-moar 06fee3: OUTPUT«True␤»

[19:20] <timotimo> huh, that's defined?

[19:20] <timotimo> r: say 1.HOW.perl

[19:20] <camelia> rakudo-parrot 06fee3, rakudo-jvm 06fee3, rakudo-moar 06fee3: OUTPUT«Perl6::Metamodel::ClassHOW.new()␤»

[19:20] <timotimo> ah, of course

[19:20] <timotimo> it's not the type object, it's the meta-object

[19:20] <moritz> right

[19:20] <moritz> the type object is .WHAT

[19:21] <timotimo> the type object is WHAT?

[19:21] <timotimo> that passes the attributes to WHO

[19:21] <timotimo> mumble mumble third base mumble WHENCE mumble

[19:22] <moritz> m: say 1.HOW === 2.HOW

[19:22] <camelia> rakudo-moar 06fee3: OUTPUT«True␤»

[19:22] <moritz> m: say 1.HOW === (2 but role { }).HOW

[19:22] <camelia> rakudo-moar 06fee3: OUTPUT«False␤»

[19:24] <timotimo> is this in response to anything?

[19:24] <moritz> timotimo: I'm trying to write about the MOP

[19:24] <moritz> (for doc.perl6.org)

[19:24] <timotimo> ah

[19:24] <timotimo> sounds good :)

[19:25] <moritz> m: say 1.HOW === Int.HOW

[19:25] <camelia> rakudo-moar 06fee3: OUTPUT«True␤»

[19:29] *** araujo joined
[19:30] *** sqirrel_ left
[19:32] <dalek> rakudo/nom: 40b76ef | (Tobias Leich)++ | src/perl6-debug.nqp:

[19:32] <dalek> rakudo/nom: align perl6-debug to latest grammar change

[19:32] <dalek> rakudo/nom: 

[19:32] <dalek> rakudo/nom: statementlist does take an argument now, we just hand that along.

[19:32] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/40b76ef2c3

[19:33] <FROGGS> pippo_: try that ---^

[19:34] <FROGGS> also I just put Debugger/UI/CommandLine.pm and Term/ANSIColor.pm in lib/ (you get both from modules.perl6.org)

[19:34] <timotimo> FROGGS: what should my first IDE plugin try to do?

[19:34] <FROGGS> timotimo: IDE plugin?

[19:35] <timotimo> yes

[19:35] <timotimo> QtCreator

[19:35] <timotimo> i want to experiment with it

[19:35] <moritz> provide tab/Ctrl+space completion for identifiers

[19:35] <timotimo> and i need some inspiration

[19:35] <FROGGS> execute the current script and show its output?

[19:36] <FROGGS> or just show the git diff

[19:36] <FROGGS> I dunno

[19:38] <timotimo> QtCreator already has git support

[19:39] <FROGGS> k

[19:44] * timotimo downloads a full Qt sdk

[19:57] <daxim> fwiw, Kate is still missing perl6 support (syntax highlighting)

[19:57] <daxim> this is important because these highlighting definitions are reused in other projects

[20:00] <timotimo> daxim: http://i.imgur.com/Ex55atX.png?1

[20:00] <timotimo> https://github.com/timo/perl6-kate-syntax

[20:00] <timotimo> :)

[20:00] <daxim> put it upstream so it appears here <http://www.kate-editor.org/syntax/update-3.7.xml>

[20:00] <timotimo> dude, no way

[20:00] <timotimo> i only spent like 30 minutes on that so far

[20:01] <timotimo> i was hoping hoelzro would pick it up and make it perfect :D

[20:01] <daxim> oh, I see.

[20:02] <daxim> I'm going to install it for usage

[20:06] <timotimo> please install it for fixage instead :)

[20:07] <lue> Why does the test harness thing decide to fail if all tests pass but there's no plan, again?

[20:08] <moritz> because the specification says that there must be a plan

[20:09] <moritz> (even if it's supplied afterwards)

[20:09] <moritz> mostly to catch things like unintentional uses of exit(0) or silent failures

[20:10] *** grondilu left
[20:10] <moritz> m: class A { method x() { } }; say A.^methods

[20:10] <camelia> rakudo-moar 06fee3: OUTPUT«x␤»

[20:10] <moritz> m: class A { method x() { } }; say A.^methods(:all)

[20:10] <camelia> rakudo-moar 06fee3: OUTPUT«x infinite exists exists_key exists_pos delete delete_key delete_pos list flat eager hash elems end uniq squish pick roll reverse sort values keys kv pairs reduce combinations permutations classify categorize lol map tree Array push unshift grep first join…»

[20:10] <lue> Does "plan *" not work? I just tried it and still got failures

[20:10] <moritz> it works

[20:11] <moritz> unless there's a premature exit

[20:11] <moritz> or unless you'r doing something very wrong

[20:12] *** Ulti left
[20:12] <FROGGS> you have to call done() at the end, no?

[20:12] <FROGGS> p: use Test; plan *; ok 1, 'ohh'

[20:12] <camelia> rakudo-parrot 06fee3: OUTPUT«ok 1 - ohh␤»

[20:12] <FROGGS> p: use Test; plan *; ok 1, 'ohh'; done

[20:12] <camelia> rakudo-parrot 06fee3: OUTPUT«ok 1 - ohh␤1..1␤»

[20:12] <moritz> oh right

[20:13] <lue> p: use Test; ok 1, 'ohh'; done;

[20:13] <camelia> rakudo-parrot 06fee3: OUTPUT«ok 1 - ohh␤1..1␤»

[20:15] * araujo checks perl6 to see what's new in the community

[20:15] <timotimo> heyo araujo :)

[20:15] <araujo> hi timotimo :)

[20:15] <timotimo> we're kind of excited about MoarVM

[20:15] <timotimo> last week i started a "weekly perl6 changes" blog that may be of interest to you

[20:15] <timotimo> (also since i told you about it now, i'll have more reason to keep it up :)  )

[20:15] <araujo> timotimo, any nice link at hand to update me? 

[20:15] *** thou left
[20:15] <araujo> sure :)

[20:16] <timotimo> http://6guts.wordpress.com/ ← always an excellent source for happy thoughts

[20:16] <lue> I personally think it's wrong for panda to refuse to continue when the test pass, but there's no plan-like thing, but I'll play along with it.

[20:16] <araujo> timotimo, thanks!

[20:16] <timotimo> http://p6weekly.wordpress.com/ ← this is my blog

[20:17] * araujo checks

[20:19] <araujo> timotimo, wow, that's nice... will you update weekly?

[20:19] <timotimo> araujo: hopefully!

[20:20] <araujo> hehe, nice, useful for people like me .. who just glances at perl6 from time to time :P

[20:21] <timotimo> xfix aka GlitchMr used to do one of those, but his posts were more concise and a bit more technical

[20:21] <timotimo> i'm hoping i can keep up the energy to write about changes in a bit more detail and give outlooks each week

[20:21] <moritz> m: say 1.^mro

[20:21] <camelia> rakudo-moar 06fee3: OUTPUT«(Int) (Cool) (Any) (Mu)␤»

[20:24] <moritz> r-m build fails with "Unexpected named parameter 'deserialize_past' passed" during parse stage of the setting

[20:24] <moritz> oh, I forgot to pull

[20:24] *** virtualsue left
[20:24] <moritz> never mind

[20:25] <jnthn> timotimo: Is Rakudo HEAD fixed against NQP master yet?

[20:25] <FROGGS> yes

[20:25] <FROGGS> the debugger is fixed too

[20:26] <dalek> doc: 1c79ebf | moritz++ | lib/objects.pod:

[20:26] <dalek> doc: start to talk about introspection and meta objects

[20:26] <dalek> doc: review: https://github.com/perl6/doc/commit/1c79ebf09a

[20:26] <jnthn> \o/

[20:26] <timotimo> jnthn: yup

[20:27] <moritz> lots more to write :-)

[20:28] <FROGGS> moritz++

[20:29] *** telex left
[20:30] *** telex joined
[20:35] *** zby_home_ joined
[20:46] *** SamuraiJack left
[20:48] <pippo_> FROGGS: FROGGS++. I works with your patch !!! Thank you very much!!

[20:49] <FROGGS> pippo_: cool!

[20:49] <FROGGS> pippo_: have fun hacking! :o)

[20:50] <pippo_> :-)) Yes indeed with perl6 and its community it is really a fun programming :-))

[20:50] <FROGGS> yes, absolutely

[20:51] <pippo_> :-)

[20:51] <TimToady> 'course, our idea of fun is a bit masochistic at times...

[20:51] <TimToady> or perhaps, stoic...

[20:51] <dalek> doc: d0ea532 | Mouq++ | lib/Version.pod:

[20:51] <dalek> doc: Add missing TITLE to Version.pod

[20:51] <dalek> doc: review: https://github.com/perl6/doc/commit/d0ea5320ef

[20:52] <pippo_> TimToady++

[20:57] <timotimo> "This is an action from MyPlugin!"

[20:57] <timotimo> \o/

[20:58] <FROGGS> \o/

[20:59] <timotimo> now i'm basically standing in front of a big wall :\

[20:59] <FROGGS> haha

[20:59] <FROGGS> yeah

[20:59] <FROGGS> a 'Toady

[21:03] * masak .oO( "if I have seen further, it's only because I have been standing on the shoulders of big Walls." )

[21:03] <TimToady> --Humpty Dumpty

[21:04] *** thou joined
[21:08] <masak> :P

[21:10] <pippo_> jnthn++ for perl6-debug-m

[21:14] *** virtualsue joined
[21:15] <dalek> nqp: c64c70f | jnthn++ | / (2 files):

[21:15] <dalek> nqp: Map socket ops for Moar; get Moar with sockets.

[21:15] <dalek> nqp: 

[21:15] <dalek> nqp: Or at least, client sockets.

[21:15] <dalek> nqp: review: https://github.com/perl6/nqp/commit/c64c70f603

[21:22] *** hoverboard is now known as YOLOBIRD

[21:24] <dalek> rakudo/nom: f35ca0b | jnthn++ | / (4 files):

[21:24] <dalek> rakudo/nom: Get client sockets support on Moar in place.

[21:24] <dalek> rakudo/nom: 

[21:24] <dalek> rakudo/nom: This also takes us to a MoarVM with heavily refactored/improved IO; of

[21:24] <dalek> rakudo/nom: note, line-level reading should be more efficient, and cases where we

[21:24] <dalek> rakudo/nom: read characters split over packet/buffer boundaries should be handled

[21:24] <dalek> rakudo/nom: correctly.

[21:24] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f35ca0b821

[21:25] <FROGGS> cool!

[21:32] * timotimo hunts bumped revisions

[21:35] *** ggherdov left
[21:36] *** ggherdov joined
[21:46] *** smls left
[21:56] *** ajr_ left
[22:03] <pippo_> FROGGS: indeed the above patch from jnthn solved the problem of qx[] on my machine. jnthn++

[22:05] <jnthn> pippo_: yay :)

[22:06] <pippo_> :-)

[22:07] <FROGGS> \o/

[22:08] <timotimo> i think the first "plug-in" to qtcreator for perl6 support will actually just be a wizard that creates projects/classes/modules for you

[22:09] <timotimo> and after that probably a "pipe selection through a perl6 program" menu entry or something

[22:09] <timotimo> and then perhaps "search with p6 regex"

[22:09] <timotimo> the possibilities! they are endless! :)

[22:11] *** zakharyas left
[22:15] *** YOLOBIRD is now known as hoverboard

[22:17] *** kaare_ joined
[22:17] *** colomon left
[22:18] *** smls joined
[22:19] <smls> .tell raydiak I've made some mockups showing how I think the structure and design of doc.perl6.org could be improved further: http://imgur.com/a/y1dHo -- What do you think?

[22:19] <yoleaux> smls: I'll pass your message to raydiak.

[22:19] <smls> ^^ this also goes to everyone else who is interested in docs.perl6.org

[22:20] <timotimo> ooooh, damn

[22:20] <timotimo> that looks pretty

[22:22] <FROGGS> ohh yes

[22:24] <jnthn> smls++

[22:28] <lue> smls++ though the book icon doesn't fit with Camelia :)

[22:28] <smls> I just took the address book icon from from the Tango icon theme, and tweaked it minimally... :P

[22:29] <smls> if someone has the skills to create a custom icon, that would of course be better 

[22:29] <timotimo> bedtime o/

[22:30] <timotimo> http://questhub.io/realm/perl/quest/52ffeaaf19eee006670000e7 ← thoughts and comments very much appreciated

[22:30] <FROGGS> gnight timotimo 

[22:30] <pippo_> o/ timotimo

[22:34] <jnthn> 'night, timotimo++

[22:35] *** pippo_ left
[22:41] *** dmol joined
[22:50] *** hoverboard left
[22:54] *** dalek left
[22:55] *** dalek joined
[22:55] *** ChanServ sets mode: +v dalek

[22:56] *** masak left
[22:56] *** PerlJam left
[22:56] *** PerlJam joined
[22:57] *** masak joined
[22:57] *** [Coke] left
[22:57] *** [Coke] joined
[23:06] *** hoverboard joined
[23:10] <jnthn> What on earth...

[23:10] <jnthn> The socket tests, on the server side, do this:

[23:11] <jnthn> while my $client = $server.accept() {

[23:11] <jnthn> ...

[23:11] <FROGGS> that is interesting

[23:11] <jnthn> accept blocks. The client connects, tthe server replies. Then it goes and waits for another connection...which of course we're never going to make.

[23:11] <FROGGS> a bit strange, but interesting

[23:11] <jnthn> Because all the tests connect once.

[23:12] <jnthn> On Windows, I think there's no timeout mechanism.

[23:12] <jnthn> So the test will hang forever. Correctly, afaict.

[23:12] <TimToady> well, but that's just how accepts always worked, originally

[23:12] <jnthn> TimToady: Blocking? Yes.

[23:12] <jnthn> TimToady: I'm not questioning accepts. I'm questioning why the tests look like this.

[23:13] <TimToady> nodnod

[23:13] <jnthn> TimToady: As in, "how could these tests have ever been right"?

[23:13] <TimToady> is there any other way to terminate the proggie?

[23:14] <jnthn> Well, we only ever send it one connection

[23:15] <jnthn> The tests can still pass on anything that runs the .sh

[23:15] <jnthn> 'cus it contains a bunch of stuff to kill after 45s.

[23:15] <jnthn> Conveniently, the tests then allow things to take 60s.

[23:15] <jnthn> So anyway, we might have solved the mystery of why the sockets tests are so darn snow... :)

[23:15] <jnthn> uh, slow

[23:17] *** zby_home_ left
[23:17] <jnthn> oh, hmm

[23:18] <jnthn> both should unconditionally kill the server if the client exits.

[23:22] * masak .oO( you know nothing, Jon Slow )

[23:28] <jnthn> FROGGS: Still about?

[23:32] *** virtualsue left
[23:41] *** cognominal joined
[23:41] *** smls left
[23:42] *** Adriaaan left
[23:43] *** xinming left
[23:43] *** hoverboard left
[23:44] *** xinming joined
[23:54] *** denis_boyun left
[23:58] *** spider-mario left
[23:58] *** araujo left
