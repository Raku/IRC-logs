[00:02] *** mcmillhj joined
[00:02] *** aborazmeh joined
[00:02] *** aborazmeh left
[00:02] *** aborazmeh joined
[00:03] *** kurahaupo left
[00:03] *** kurahaupo joined
[00:07] *** mcmillhj left
[00:08] *** Schepeers joined
[00:08] *** Schepeers left
[00:09] <El_Che> TimToady: if you want to be forgotten, consider inventing slighly less languages ;)

[00:13] *** Schepeers joined
[00:21] *** mcmillhj joined
[00:22] *** markoong left
[00:23] *** skids joined
[00:25] *** mcmillhj left
[00:27] <geekosaur> I think you read that backward

[00:27] <geekosaur> s

[00:52] *** mcmillhj joined
[00:54] *** aborazmeh left
[00:57] *** mcmillhj left
[01:04] *** zachk left
[01:08] *** pdurbin joined
[01:12] *** aborazmeh joined
[01:12] *** aborazmeh left
[01:12] *** aborazmeh joined
[01:18] *** Summertime joined
[01:18] *** comborico1611_ left
[01:31] *** mcmillhj joined
[01:35] *** mcmillhj left
[01:39] *** aborazmeh left
[01:44] *** mcmillhj joined
[01:49] *** mcmillhj left
[01:54] *** aindilis left
[02:02] <Geth> ¬¶ ecosystem: ccbf0339bb | (Zoffix Znet)++ (committed using GitHub Web editor) | META.list

[02:02] <Geth> ¬¶ ecosystem: Add WWW::vlc::Remote to ecosystem

[02:02] <Geth> ¬¶ ecosystem: 

[02:02] <Geth> ¬¶ ecosystem: Control vlc media player via its Web interface:

[02:02] <Geth> ¬¶ ecosystem: https://github.com/zoffixznet/perl6-WWW-vlc-Remote

[02:02] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/ccbf0339bb

[02:02] *** aborazmeh joined
[02:02] *** aborazmeh left
[02:02] *** aborazmeh joined
[02:06] *** aborazmeh left
[02:22] *** ufobat_ joined
[02:25] *** ufobat___ left
[02:37] *** mcmillhj joined
[02:42] *** mcmillhj left
[03:06] *** aindilis joined
[03:14] *** mcmillhj joined
[03:15] *** mephinet joined
[03:19] <Geth> ¬¶ doc: 1636a1e973 | (Bruce Gray)++ | 10 files

[03:19] <Geth> ¬¶ doc: Fix typos

[03:19] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/1636a1e973

[03:19] *** mcmillhj left
[03:26] *** Khisanth joined
[03:32] *** mcmillhj joined
[03:36] *** mcmillhj left
[03:43] *** rindolf joined
[04:06] *** mcmillhj joined
[04:07] *** mahafyi joined
[04:11] *** mcmillhj left
[04:11] *** fascinum joined
[04:21] *** sno joined
[04:21] *** mcmillhj joined
[04:25] *** mcmillhj left
[04:26] *** wamba joined
[04:29] *** eliasr left
[04:36] *** espadrine left
[04:48] *** curan joined
[04:49] *** wamba left
[04:50] *** espadrine joined
[04:53] *** mcmillhj joined
[04:56] *** aindilis left
[04:58] *** mcmillhj left
[05:03] *** xtreak joined
[05:13] *** jmerelo joined
[05:18] *** aindilis joined
[05:24] *** mcmillhj joined
[05:26] *** aindilis left
[05:27] *** perigrin joined
[05:29] *** mcmillhj left
[05:51] *** troys left
[05:53] *** sauvin joined
[05:55] *** aindilis joined
[05:56] *** mcmillhj joined
[06:00] *** mcmillhj left
[06:13] <Geth> ¬¶ doc: 20c44e635c | (JJ Merelo)++ | doc/Language/math.pod6

[06:13] <Geth> ¬¶ doc: Adds some modules

[06:13] <Geth> ¬¶ doc: 

[06:13] <Geth> ¬¶ doc: Use of Int with "infinite" precision, and some reflow.

[06:13] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/20c44e635c

[06:13] <synopsebot> Link: https://doc.perl6.org/language/math

[06:19] *** espadrine left
[06:30] *** dct joined
[06:31] <moritz> 4

[06:31] <moritz> sorry, fat-fingered :-) and good morning everybody.

[06:35] <jmerelo> morning!

[06:36] <Geth> ¬¶ doc: 4ef4511455 | (JJ Merelo)++ | doc/Language/math.pod6

[06:36] <Geth> ¬¶ doc: Fixes letter that came in from nowhere

[06:36] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4ef4511455

[06:36] <synopsebot> Link: https://doc.perl6.org/language/math

[06:39] *** domidumont joined
[06:44] *** domidumont left
[06:45] *** domidumont joined
[06:45] *** dct left
[06:48] *** mcmillhj joined
[06:54] *** mcmillhj left
[07:00] *** mcmillhj joined
[07:04] *** mcmillhj left
[07:09] *** wamba joined
[07:10] *** Schepeers left
[07:15] *** robertle joined
[07:24] *** fascinum left
[07:24] *** darutoko joined
[07:27] *** mcmillhj joined
[07:31] *** mcmillhj left
[07:35] *** Schepeers joined
[07:41] *** skids left
[07:42] *** sena_kun joined
[07:42] *** mcmillhj joined
[07:43] *** psychoslave joined
[07:47] *** mcmillhj left
[07:54] *** dakkar joined
[08:02] *** lizmat joined
[08:03] *** zakharyas joined
[08:06] *** xtreak left
[08:07] *** xtreak joined
[08:11] *** xtreak left
[08:13] *** mcmillhj joined
[08:13] <jmerelo> Final report on the TPF grant, just in case anyone is interested https://jj.github.io/TPF-Grant/Final

[08:18] *** mcmillhj left
[08:19] <lizmat> jmerelo++

[08:19] <lizmat> weekly: https://jj.github.io/TPF-Grant/Final

[08:19] <notable6> lizmat, Noted!

[08:26] *** HaraldJoerg joined
[08:26] *** zakharyas left
[08:26] <jmerelo> lizmat: thanks!

[08:28] *** zakharyas joined
[08:38] *** xtreak joined
[08:47] *** mcmillhj joined
[08:47] <stmuk> there is more EU internet regulation coming to "protect" IP namely article 13 "uploading monitoring" and a possible "link tax"

[08:50] *** mahafyi left
[08:51] *** mcmillhj left
[08:52] <stmuk> https://juliareda.eu/eu-copyright-reform/

[08:52] <stmuk> hopefully open source impact is mimimal

[08:52] *** sena_kun left
[08:54] <El_Che> stmuk: that's pretty much the other side of the argument (thx lobby) as it does not protect consumers like GDPR, but foreign business

[08:54] <El_Che> mickey mouse law

[09:20] *** mcmillhj joined
[09:25] *** mcmillhj left
[09:48] *** mcmillhj joined
[09:53] <jkramer> m: my Rat $x = Inf

[09:53] <camelia> rakudo-moar 148d7c56a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Cannot assign a literal of type Num (Inf) to a variable of type Rat. You can declare the variable to be of type Real, or try to coerce the value with Inf.Rat or Rat(Inf), or just write the value as <1/0‚Ä¶¬ª

[09:53] <jkramer> m: my Rat $x = Inf.Rat

[09:53] <camelia> rakudo-moar 148d7c56a: ( no output )

[09:53] *** mcmillhj left
[09:53] <jkramer> Hmm with my P6 I get "Attempt to divide 1 by zero using div" when doing Inf.Rat

[09:54] <jkramer> This is Rakudo version 2018.04.1 built on MoarVM version 2018.04.1

[09:54] *** Marcool joined
[09:54] *** xtreak left
[09:55] *** xtreak joined
[09:55] <jmerelo> jkramer: this is probably better, right?

[09:55] <Marcool> Hi all, I'm trying to write a small script that processes STDIN ($*IN) and I'm wondering how to handle the case when there is nothing coming in‚Ä¶ I use for $*IN.lines -> $line as the main loop, and that just seems to stop waiting for input if there is none.

[09:56] <jmerelo> Marcool: when there's nothing, you are basically waiting for keyboard input

[09:56] <Marcool> jmerelo: right I see

[09:56] <Marcool> jmerelo: my use case is a pipe command line script "echo "this" | filter.p6"

[09:57] <Marcool> jmerelo: can I somehow exit if there is nothing on the pipe? and not wait for keyboard input?

[09:57] <jmerelo> Marcool: this might help https://stackoverflow.com/questions/14118/how-can-i-test-stdin-without-blocking-in-perl

[09:58] <jmerelo> Marcool: this might help https://stackoverflow.com/questions/14118/how-can-i-test-stdin-without-blocking-in-perl (by b2gills)

[09:59] <jmerelo> Marcool: that's old, however. But give it a try. If it does not work, ask back here, or even better, in StackOverflow

[09:59] <jmerelo> Sorry, the answer by b2gills was this one https://stackoverflow.com/a/14124/891440

[09:59] <jmerelo> Hum, and that's perl, not perl6. Hum.

[09:59] <Marcool> jmerelo: the perl6 docs says this about select routine : ""[S]elect as a global concept is dead." When I asked around about select, I was told that $*OUT and such are overridable in dynamic scope, and that IO::Capture::Simple (at https://github.com/sergot/IO-Capture-Simple) may be of use for something you might be doing with the value of select."

[10:01] <jmerelo> Marcool: right. And that documentation might be better written in some other way.

[10:01] <jmerelo> Marcool: same thing I said above applies. Give it a try, and come back here (or to Stackoverflow) if you have a problem.

[10:02] <Marcool> jmerelo: ok I'll take a look at that see if I can make it work

[10:03] <jmerelo> Marcool: anyway, you might want to have a look at the https://docs.perl6.org/type/IO::Pipe module, if you are looking at an asynchronour module that interacts with the exterior.

[10:04] *** mcmillhj joined
[10:07] <jkramer> m: say $*PERL

[10:07] <camelia> rakudo-moar 148d7c56a: OUTPUT: ¬´Perl 6 (6.c)‚ê§¬ª

[10:07] *** pmurias joined
[10:08] *** w_richard_w left
[10:09] <Geth> ¬¶ doc: 80e7aeff06 | (JJ Merelo)++ | doc/Language/glossary.pod6

[10:09] <synopsebot> Link: https://doc.perl6.org/language/glossary

[10:09] <Geth> ¬¶ doc: Adds links to allomorphs and reflows

[10:09] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/80e7aeff06

[10:09] <Geth> ¬¶ doc: a355972e3f | (JJ Merelo)++ | doc/Language/numerics.pod6

[10:09] <Geth> ¬¶ doc: Clarifies the confusion between <. and <&

[10:09] <synopsebot> Link: https://doc.perl6.org/language/numerics

[10:09] <Geth> ¬¶ doc: 

[10:09] <Geth> ¬¶ doc: By copying verbatim @jnthn comments in rakudo/rakudo#1894. Closes #2087

[10:09] <synopsebot> RAKUDO#1894 [closed]: https://github.com/rakudo/rakudo/issues/1894 Suppressing capture of lexical regex with <.regex-name> doesn't work - works with <&regex-name>

[10:09] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/a355972e3f

[10:09] *** mcmillhj left
[10:14] *** domidumont left
[10:16] *** mcmillhj joined
[10:17] *** pmurias left
[10:21] *** mcmillhj left
[10:25] *** xtreak left
[10:25] *** xtreak_ joined
[10:26] *** wamba left
[10:27] <jkramer> Hmm so apparently it just prints the "Attempt to divide 1 by zero using div" but it's not an error

[10:27] <jkramer> m: my Rat $x = Inf.Rat; say $x; say 5 < $x

[10:27] <camelia> rakudo-moar 148d7c56a: OUTPUT: ¬´Attempt to divide 1 by zero using div‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:27] <jkramer> Oh maybe it is

[10:31] *** xtreak_ left
[10:41] *** mcmillhj joined
[10:46] *** mcmillhj left
[10:48] *** mahafyi joined
[10:51] *** Schepeers left
[10:51] <Geth> ¬¶ doc: 6e4b6b3a7d | (JJ Merelo)++ | doc/Type/IO.pod6

[10:51] <Geth> ¬¶ doc: Corrects actual working of the function

[10:51] <Geth> ¬¶ doc: 

[10:51] <Geth> ¬¶ doc: Which has moved since #1092 was written, which is a good argument to

[10:51] <Geth> ¬¶ doc: try and fix issues as soon as possible.

[10:51] <synopsebot> Link: https://doc.perl6.org/type/IO

[10:51] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/6e4b6b3a7d

[10:51] <Geth> ¬¶ doc: 487c679fab | (JJ Merelo)++ | doc/Type/Mu.pod6

[10:51] <synopsebot> Link: https://doc.perl6.org/type/Mu

[10:51] <Geth> ¬¶ doc: Changes Mu's say to point to IO::Handle say

[10:51] <Geth> ¬¶ doc: 

[10:51] <Geth> ¬¶ doc: Which makes a single say, which I hope clarifies this and closes #1092.

[10:51] <Geth> ¬¶ doc: 

[10:51] <Geth> ¬¶ doc: It's a long and rather old discussion. If it does not address the

[10:51] <Geth> ¬¶ doc: issue, it is much better if a new issue is opened.

[10:51] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/487c679fab

[10:53] *** mcmillhj joined
[10:57] *** Schepeers joined
[10:58] *** mcmillhj left
[11:03] *** xtreak joined
[11:05] <Marcool> jmerelo: I've found a lightweight solution with this: https://docs.perl6.org/routine/t ; exit if ($*IN.t) does the trick.

[11:06] <Marcool> jmerelo: to my piping vs keyboard bloc stdin problem

[11:06] *** pmurias joined
[11:17] *** markoong joined
[11:18] *** mahafyi left
[11:18] *** mahafyi joined
[11:26] *** mahafyi left
[11:26] *** lizmat left
[11:28] *** mahafyi joined
[11:42] *** itaipu joined
[11:43] *** mahafyi left
[11:43] *** mahafyi joined
[11:49] *** lizmat joined
[11:52] *** zakharyas left
[11:59] *** Marcool left
[12:01] *** raschipi joined
[12:25] *** xtreak left
[12:27] *** xtreak joined
[12:29] *** xtreak left
[12:31] <Geth> ¬¶ doc: 64f3f37404 | (Will "Coke" Coleda)++ | doc/Language/glossary.pod6

[12:31] <synopsebot> Link: https://doc.perl6.org/language/glossary

[12:31] <Geth> ¬¶ doc: fix pod link error

[12:31] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/64f3f37404

[12:32] <jmerelo> Marcool: great!

[12:40] *** mcmillhj joined
[12:41] *** mcmillhj left
[12:42] *** Schepeers left
[12:45] *** mcmillhj joined
[12:56] *** zakharyas joined
[13:08] *** raschipi left
[13:08] *** mahafyi left
[13:12] <Geth> ¬¶ doc: a275ee4ac8 | (JJ Merelo)++ | doc/Language/modules.pod6

[13:12] <Geth> ¬¶ doc: Changes language to Javascript refs #1614

[13:12] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/a275ee4ac8

[13:12] <synopsebot> Link: https://doc.perl6.org/language/modules

[13:14] *** jmerelo left
[13:17] *** mcmillhj left
[13:17] *** mcmillhj joined
[13:28] *** mahafyi joined
[13:33] *** Zoffix joined
[13:34] *** sno left
[13:34] <Zoffix> jkramer: Inf.Rat is <1/0>. It'll explode if you try to actually perform that division in non-Num context. https://docs.perl6.org/language/numerics#Division_By_Zero

[13:34] <Zoffix> jkramer: which in your case is `say $x;`

[13:35] <jkramer> Oh ok

[13:35] *** Schepeers joined
[13:35] <jkramer> So I guess I'll just use Num instead of Rat

[13:36] *** sno joined
[13:38] *** Zoffix left
[13:39] *** zakharyas left
[13:40] *** zakharyas joined
[13:43] *** raschipi joined
[13:45] <raschipi> Europeans are really salty abot the consequences of the GDPR...

[13:46] <jkramer> Why though? I'm European and I love it :)

[13:47] <jast> clearly you haven't been on the corp side of it yet :)

[13:47] *** imcsk8_ left
[13:47] <jkramer> I am actually. Wasn't a big deal really.

[13:47] <raschipi> Even the big operators are having a lot of trouble because of it. Any small operation has no chance of compliance. They will either shut Europeans out or if they are inside the EU, stop operating.

[13:47] <jast> and, well, even as a 'consumer' I'm kind of not excited about websites that introduce a 'click here to accept our tracking and ads before we show you our content' page

[13:48] <moritz> sometimes they offer you to only accept "essential" trackers

[13:48] <jkramer> jast: That's actually illegal, you should sue those websites. :) You can't make your service depend and the consumer's consent with your tracking and advertising

[13:49] <moritz> though the thing that *really* annoys me is cookie confirmation dialogs

[13:49] <tadzik> "no chance of compliance" is quite an overstatement

[13:49] <jast> I know it's illegal, but it's far more cost-efficient for me to simply blacklist those websites

[13:49] <tadzik> I'm in two small operations, we're fine

[13:49] <moritz> by configuring my browser to accept cookies, I have consented to store cookies

[13:50] <jast> anyway, I work in a B2B software-as-a-service thing, and we have had a lot of pointless time wasted on sending packets of paper back and forth

[13:50] <jkramer> I've consented to use cookies as a feature that's neccessary for many sites to function, i.e. for logins/sessions. I dodn't consent to being tracked all over the internet and be profiled by companies who then sell my profile to other companies and so on...

[13:51] <jast> we have >1000 customers and a significant percentage is asking us for paper and insignificant details about our operations

[13:51] <tadzik> may I interest you in privacybadger? :)

[13:51] <raschipi> Anyone trying to argue here that it doesn't have bad consequences will get a pescotapa.

[13:51] <jast> but it also has advantages for us because our stuff is hosted inside the EU which tends to "feel more GDPR-y" to our customers :-)

[13:53] <raschipi> Yes, anyone actually able to comply will get a boost. Typical anti-competitive regulation.

[13:53] <jast> we are comparably small, though

[13:53] *** Actualeyes joined
[13:53] <jast> <50 employees

[13:54] <jkramer> Actually it could be so easy, and some websites are doing this which I like a lot: when someone has the DNT header set in their browser, there's a little pop-up/overlay the first time you come to that website saying "you have the DNT option enabled so we don't use any tracking/cookies except the session cookie", that overlay disappears after a second and that's it

[13:54] <tadzik> . o O ( anyone who can actually make a living without slave labour will get a boost! Typical anti-competitive behaviour )

[13:54] <raschipi> And they are talking about even more heavy-handed regulation, just wait. GDPR was just an appetizer.

[13:54] <tadzik> if you can't comply with privacy regulations then I'm happy to see you gone

[13:54] *** imcsk8 joined
[13:54] <jnthn> So far, I've found that 1) yes I have to care about the GDPR, and 2) that's generally led me to make better choices (for example, not collecting user data "just in case it's useful", not sticking google analytics on everything just because...)

[13:54] <jkramer> Everyone else gets the whole GDPR intro and the tracking options to choose from

[13:55] <tadzik> yes, there are annoyances and collateral damage, it's not perfect

[13:55] <tadzik> but I'd still say it's an improvement

[13:55] <tadzik> (as a consumer)

[13:55] <jast> tadzik: the argument isn't that privacy regulations are bad, it's that they might be incurring a lot of unnecessary baggage in this case

[13:55] <tadzik> as a developer, I still think it's better to torment the implementors than the users

[13:55] <jnthn> It's not perfect, but I think it's better than "do nothing"

[13:55] <tadzik> something which this channel may find relatable

[13:55] <tadzik> jnthn++

[13:56] <jast> well, ideally nobody would be tormented, and instead there would just be reasonable limits that are easy to implement

[13:56] <jast> perhaps that's not possible, but it's a great standard to strive towards IMO

[13:56] <raschipi> I'm not arguing against privacy regulations in general, just the heavy-handed approach taken in this case.

[13:56] <tadzik> absolutely. But I'm yet to hear better ideas. And so was the EU commision, for... 2 years? :)

[13:57] <raschipi> Brazil is getting privacy regulations that are much better, for instance.

[13:57] <raschipi> And they did hear it, just just ignored it.

[13:57] *** itaipu left
[13:58] <jast> some people allege that the EU commission isn't too big on listening to domain experts without... sufficient compensation ;)

[13:59] *** lizmat left
[13:59] *** mahafyi left
[14:01] *** mahafyi joined
[14:02] *** curan left
[14:03] *** curan joined
[14:04] *** itaipu joined
[14:25] *** lizmat joined
[14:28] <pmurias> tadzik: our irc log is gone because it couldn't comply

[14:29] <tadzik> pmurias: yes, I know. That is unfortunate, but not entirely unjust imho

[14:29] <tadzik> there may be tons of logs of my conversations from IRC on the internet that I'm not aware of, and I don't want them to exist. I'm glad they're gone now

[14:29] <tadzik> sad day for our irclogs, since they were very useful, but in the general sense I think it's a necessary evil

[14:30] <tadzik> well, "evil"

[14:31] <robertle> you *could* of course implement an irc-log service with opt-ins. does require some integration with the irc service and would only work for users that authenticate against the irc service

[14:31] <jast> but that's of limited use in a public channel because hardly anyone would opt-in straight away, so in any initial contact you'd be missing half of the conversation

[14:36] <robertle> totally! 

[14:39] <pmurias> tadzik: they aren't gone, even #perl6 is still openly logged, and it's (a bit) foolish to assume other irc channels aren't privately logged

[14:39] <tadzik> pmurias: well, the other public log should be gone then. As for private logs, of course they'll remain forever, but not in a public view: that's the point :)

[14:40] <robertle> I believe frmo a GDPR perspective private logging is ok

[14:40] <tadzik> just like I'm free to keep a phonebook of my phone, but people would get rightfully pissed off if I published it online

[14:40] <robertle> tadzik: but the other logs may not be under GDPR jurisdiction...

[14:40] <tadzik> well you can't fix everything, but it's nice to fix what you can

[14:41] <tadzik> there'll always be people who steal, doesn't mean I have to do it too because you can't beat them so may as well join them. Not quite a comparable situation, but I hope you get my point

[14:41] <robertle> wasn't arguing against that, just that you said "the other logs should be gone then"

[14:42] <tadzik> well, if they're under GDPR jurisdiction, right

[14:43] <El_Che> robertle: if they service the EU and EU citizens are logged, they fall under the new rules

[14:44] <tadzik> I guess they'll never know if they logged EU citizens

[14:44] <jkramer> I like what some US news sites did to comply with with GDPR, like https://text.npr.org/ or https://eu.usatoday.com/

[14:44] <robertle> right, but if the server and the one running the service are in belize, then they may not care much about EU rules. even rightfully so, I don't think I want to care much about belize law either

[14:44] <jkramer> All websites should be like this <3

[14:44] <tadzik> jkramer: oh yes :>

[14:46] <pmurias> tadzik: I mostly hang around #perl6(-*) so I have been raised as treating irc as something public, and I'm now annoyed at something I feel I have zero control over messing with the irc logs I like to read

[14:46] <El_Che> omg, ustoday is really crap

[14:46] <El_Che> :)

[14:47] *** sena_kun joined
[14:50] <jkramer> Well I can't judge by their contents but the website is fast, has a nice clear UI and no useless JS or tracking BS :)

[14:50] *** xq left
[14:51] <jkramer> It's like in the olden times when people didn't use 20 JS frameworks with 500 dependencies that compile a simple "static" website in your browser :)

[14:51] *** curan left
[14:56] *** xq joined
[15:11] *** rindolf left
[15:13] *** mahafyi left
[15:21] *** rindolf joined
[15:23] <raschipi> In https://docs.perl6.org/language/variables#Default_Defined_Variables_Pragma , it says "That means a definedness constraint is no guarantee of definedness. This only applies to variable initializers, not to Signatures. or subsequent assignments to a variable". But trying it in practice, if I "use variables :D;" and then try to assing Nil to it, it fails. What is it trying to say?

[15:26] <raschipi> Is that information correct even?

[15:30] *** psychoslave left
[15:31] <Util> m: sub foo ( Int:D $bar ) { return 1 + $bar }; say foo(42); my $u; say foo($u);

[15:31] <camelia> rakudo-moar 148d7c56a: OUTPUT: ¬´43‚ê§Type check failed in binding to parameter '$bar'; expected Int but got Any (Any)‚ê§  in sub foo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:31] *** [particle] left
[15:31] *** [particle] joined
[15:32] <Util> m: use variables :D; sub foo ( $bar ) { return 1 + $bar }; say foo(42); my $u; say foo($u);

[15:32] <camelia> rakudo-moar 148d7c56a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable definition of type Any:D (implicit :D by pragma) requires an initializer‚ê§at <tmp>:1‚ê§------> 3 { return 1 + $bar }; say foo(42); my $u7‚èè5; say foo($u);‚ê§    expecting any of:‚ê§      ‚Ä¶¬ª

[15:33] *** jmerelo joined
[15:34] <Util> m: use variables :D; sub foo ( $bar ) { return 1 + $bar }; say foo(42); my $u = 55; undefine $u; say foo($u);

[15:34] <camelia> rakudo-moar 148d7c56a: OUTPUT: ¬´43‚ê§Type check failed in assignment to $u; expected type Any:D cannot be itself (perhaps Nil was assigned to a :D which had no default?)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:35] <Util> m: use variables :D; my $u = 55; undefine $u;

[15:35] <camelia> rakudo-moar 148d7c56a: OUTPUT: ¬´Type check failed in assignment to $u; expected type Any:D cannot be itself (perhaps Nil was assigned to a :D which had no default?)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:36] <Util> m: my Any:D $u = 55; undefine $u;

[15:36] <camelia> rakudo-moar 148d7c56a: OUTPUT: ¬´Type check failed in assignment to $u; expected type Any:D cannot be itself (perhaps Nil was assigned to a :D which had no default?)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:37] <raschipi> Util, jmerelo: I have a patch almost ready to close doc issue #1448, I just need to learn how to add a link to https://docs.perl6.org/language/variables#Default_Defined_Variables_Pragma

[15:37] <jmerelo> raschipi: great! link /language/variables#Default_Defined_Variables_Pragma   , is that what you mean?

[15:38] <raschipi> In POD, L<what goes here?>

[15:38] <jmerelo> raschipi: ah, OK L<default defined variables pragma|/language/variables#Default_Defined_Variables_Pragma>

[15:38] <jmerelo> or whatever you want the text to be, to the left of the |

[15:41] <Geth> ¬¶ doc: af88d39708 | (Rafael Schipiura)++ (committed using GitHub Web editor) | doc/Language/containers.pod6

[15:41] <Geth> ¬¶ doc: Add a section about defined constraints.

[15:41] <Geth> ¬¶ doc: 

[15:41] <Geth> ¬¶ doc: And a link to the pragma that makes it the default. Closes #1448.

[15:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/af88d39708

[15:41] <synopsebot> Link: https://doc.perl6.org/language/containers

[15:43] <raschipi> Thanks jmerelo 

[15:43] <Util> raschipi: I think that "not to Signatures" means that `use variables :D` does not transform `sub f (Int $b) {...}` into `sub f (Int:D $b) {...}`.

[15:43] <Util> I am unsure what is meant by "or subsequent assignments to a variable".

[15:44] <Util> The former *is* true. The latter, IDK.

[15:44] <jmerelo> raschipi: Obrigado!

[15:44] <raschipi> My guess would be that Rakudo didn't implement the feature fully and this was reflected in the docs without mentioning it's implementation specific.

[15:44] <raschipi> Then it was implemented and the docs weren't updated.

[15:45] <jmerelo> raschipi: that's been known to happen, yes.

[15:46] *** robertle left
[15:46] <raschipi> Util, can I take that away, but add the information regarding signatures? Or should I wait more to see if anyone knows of other caveats?

[15:48] <raschipi> Zoffix, do you know what "or subsequent assignments to a variable" means in https://docs.perl6.org/language/variables#Default_Defined_Variables_Pragma ?

[15:50] <Util> raschipi: I would gather clarity from others ( as you are doing :] )

[15:54] *** eliasr joined
[15:58] <Geth> ¬¶ doc: f7377fde1a | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[15:58] <Geth> ¬¶ doc: Clarify para in `use variables :D`

[15:58] <Geth> ¬¶ doc: 

[15:58] <Geth> ¬¶ doc: - The constraint is for definiteness (.DEFINITE), not definedness (.defined)

[15:58] <Geth> ¬¶ doc:     (any better English words for that?)

[15:58] <synopsebot> Link: https://doc.perl6.org/language/variables

[15:58] <Geth> ¬¶ doc: - The docs document old buggy behaviour where definitness constraint was not

[15:58] <Geth> ¬¶ doc:     enforced on the default value

[15:58] <Geth> ¬¶ doc: - Mention currently NYI `use parameters` pragma for the same behaviour on params

[15:58] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f7377fde1a

[15:59] <Geth> ¬¶ doc: f169190a2d | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[15:59] <Geth> ¬¶ doc: Fix URL to .DEFINITE

[15:59] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f169190a2d

[16:00] *** nige left
[16:00] <raschipi> Zoffix: s/typ/type/ in f7377fde1a0cd9

[16:00] <Geth> ¬¶ doc: d7da8cc034 | (Rafael Schipiura)++ (committed using GitHub Web editor) | doc/Language/containers.pod6

[16:00] <Geth> ¬¶ doc: Make example clearer

[16:00] <Geth> ¬¶ doc: 

[16:00] <Geth> ¬¶ doc: Adding suggestions by Util++.

[16:00] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d7da8cc034

[16:00] <synopsebot> Link: https://doc.perl6.org/language/containers

[16:01] <Geth> ¬¶ doc: ff2aee5f47 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[16:01] <Geth> ¬¶ doc: Fix typo

[16:01] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ff2aee5f47

[16:05] <Geth> ¬¶ doc: 3bcc138666 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/containers.pod6

[16:05] <Geth> ¬¶ doc: Remove use of `undefine`

[16:05] <Geth> ¬¶ doc: 

[16:05] <Geth> ¬¶ doc: It's scheduled for deprecation[^1] in 6.d, so it's best to limit its

[16:05] <Geth> ¬¶ doc: general use in doc examples

[16:05] <Geth> ¬¶ doc: 

[16:05] <Geth> ¬¶ doc: [1] https://github.com/perl6/6.d-prep/issues/5

[16:05] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/3bcc138666

[16:10] <raschipi> m: my Int:D $i is default(Int) = 3; $i = Nil; say $i

[16:10] <camelia> rakudo-moar 148d7c56a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Default value '(Int)' will never bind to a parameter of type Int:D‚ê§at <tmp>:1‚ê§------> 3my Int:D $i is default(Int)7‚èè5 = 3; $i = Nil; say $i‚ê§    expecting any of:‚ê§        constraint‚ê§¬ª

[16:11] <lizmat> raschipi: that feels correct to me

[16:11] <raschipi> Same to me.

[16:22] *** mcmillhj left
[16:23] <Util> Zoffix++ # I had missed the `undefine` deprecation.

[16:25] *** Geth joined
[16:25] *** ChanServ sets mode: +v Geth

[16:25] *** molaf joined
[16:26] *** scimon joined
[16:29] <scimon> So I just answered a question in Stack Overflow but it did make me wonder. Why are CArrays not shapeable? Surely it would make sense for them to be more than standard arrays.

[16:29] *** mcmillhj joined
[16:30] <jmerelo> scimon: maybe use a constraint? No idea of the syntax, however.

[16:30] <geekosaur> nyi, probably. and with some complications because C is dumnb

[16:33] <scimon> Yeah... something like that. Well the answer might spark more conversation. Right. Pub.

[16:33] *** scimon left
[16:35] *** mcmillhj left
[16:39] *** mcmillhj joined
[16:39] *** mcmillhj left
[16:45] *** robertle joined
[16:48] *** dakkar left
[16:53] *** mcmillhj joined
[16:57] *** AlexDaniel joined
[16:59] *** mcmillhj left
[17:00] <Geth> ¬¶ doc: 8e50aa37ca | (JJ Merelo)++ | 2 files

[17:00] <Geth> ¬¶ doc: Unsets POD_TO_TEXT_ANSI in the `p6doc` file

[17:00] <Geth> ¬¶ doc: 

[17:00] <Geth> ¬¶ doc: Which was set by default. Changes also documentation to reflect this change.

[17:00] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/8e50aa37ca

[17:02] <Geth> ¬¶ doc: 9b630c59b4 | (JJ Merelo)++ | bin/p6doc

[17:02] <Geth> ¬¶ doc: Adds to usage, closes #198

[17:02] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/9b630c59b4

[17:06] *** zakharyas left
[17:08] *** mcmillhj joined
[17:13] *** zakharyas joined
[17:16] *** Schepeers left
[17:16] *** Schepeers joined
[17:46] *** zakharyas left
[17:54] *** sena_kun left
[17:55] *** sena_kun joined
[18:00] *** sena_kun left
[18:00] *** sena_kun joined
[18:05] *** rcwolf joined
[18:05] *** espadrine joined
[18:07] *** Zoffix joined
[18:09] <Zoffix> moritz: is the ID in links-to-lines in the log arbitrary or is there some logic to it. E.g "i_16194042" in https://irclog.perlgeek.de/perl6/2018-05-22#i_16194042 ? Trying to figure out if there's a way to make a mapper from all the perlgeek.de URLs to colbati's logger. There are about 600 commit messages that reference the logs along with more resources, such as Issues

[18:09] *** lizmat left
[18:12] *** sena_kun left
[18:12] *** sena_kun joined
[18:12] *** mcmillhj_ joined
[18:15] *** mcmillhj left
[18:16] <Zoffix> looks like it's just an autoincrement ID from sql

[18:17] <moritz> Zoffix: that's correct, it's autoincrement

[18:17] <Zoffix> Cool

[18:18] <moritz> Zoffix: I don't think I'd feel confident handing out actual data from the logs, but would, say, a mapping from IDs to sha1() hashes of the contents help you?

[18:18] <Zoffix> moritz: yeah

[18:22] <jmerelo> The idea is to eventually put a .htaccess rule in irclog.perlgeek.de so that it points to the other place? That would be cool.

[18:24] *** sauvin left
[18:42] <Geth> ¬¶ doc: coke self-assigned word variant test doesn't catch mixed case issues. https://github.com/perl6/doc/issues/2093

[18:49] *** darutoko left
[18:53] <Merfont> hey guys i'm getting started with a Net::Telnet

[18:53] <jmerelo> Merfont: Great!

[18:54] <Merfont> i want it to be able to support its features fully but some of them are a bit rough

[18:55] <Merfont> not much work on it done yet but https://github.com/Kaiepi/p6-Net-Telnet

[18:56] <jmerelo> Merfont: remember that it does not need to be perfect, it needs to be there. Perfect will come later (or never, but it does not mind)

[18:56] <Merfont> i'm well aware

[18:56] <Merfont> i'm made the mistake of being overly perfectionist

[18:57] <jmerelo> Merfont:  :-) 

[18:57] <Merfont> wwait why am i not kaipei

[18:57] *** Merfont is now known as Kaiepi

[18:58] <jmerelo> Looks pretty good https://github.com/Kaiepi/p6-Net-Telnet

[18:59] *** jmerelo left
[19:05] <Kaiepi> thanks

[19:06] <Kaiepi> i'm working on making it a full fledged client/server

[19:06] <El_Che> Kaiepi: will it support TLS?

[19:07] <Kaiepi> i'm planning on it

[19:07] <raschipi> El_Che: You mean ssh?

[19:07] <El_Che> no

[19:07] <raschipi> Just joking

[19:07] <El_Che> :)

[19:07] <cog> Is there a way to derive a grammar written in Perl 6 from NQP Hll::Grammar ?

[19:08] <Zoffix> cog: note that NQP is not for end users. There's no support for it and it can change at any time

[19:10] <cog> yes, I just want to use EXPR

[19:11] <Zoffix> And when your program breaks, because EXPR changed. Whom you gonna blame? :)

[19:12] <cog> this is for my own usage

[19:12] *** domidumont joined
[19:12] <Zoffix> m: use NQPHLL:from<NQP>; grammar Foo is HLL::Grammar {}

[19:12] <camelia> rakudo-moar 148d7c56a: OUTPUT: ¬´===SORRY!===‚ê§Cannot find method 'submethod_table' on object of type NQPClassHOW‚ê§¬ª

[19:13] <cog> thx, I knew :from<NQP> existed. I just did not remembered it

[19:13] *** mcmillhj joined
[19:14] <Zoffix> Well, the `is` doesn't work there. Unsure how to make it work

[19:14] <moritz> might need to write your own MOP code that does a bit less than the default

[19:16] *** mcmillhj_ left
[19:19] <cog> yup I get the same msg :(

[19:24] *** domidumont left
[19:25] *** [Sno] joined
[19:26] *** stmuk_ joined
[19:26] <Geth> ¬¶ doc/master: 7 commits pushed by (Will "Coke" Coleda)++

[19:26] <Geth> ¬¶ doc/master: 8b67ed2298 | whitespace

[19:26] <Geth> ¬¶ doc/master: a9db568ca2 | Avoid awkward "use use"

[19:26] <Geth> ¬¶ doc/master: efeabe5f86 | Perform case insensitive searches on word variants

[19:26] <Geth> ¬¶ doc/master: f4f975b507 | Anchor for word start

[19:26] <Geth> ¬¶ doc/master: c36ea25c04 | Use preferred word variants

[19:26] <Geth> ¬¶ doc/master: dd13765a0a | Add NYI variant

[19:26] <Geth> ¬¶ doc/master: b14936bf58 | use NYI

[19:26] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/9b630c59b4af...b14936bf58f7

[19:27] <Zoffix> m: use nqp; use NQPHLL:from<NQP>; grammar Foo { method EXPR { nqp::findmethod(HLL::Grammar, "EXPR")(self, "y=") } }.parse: "2+2", :rule<EXPR>

[19:27] <camelia> rakudo-moar 148d7c56a: OUTPUT: ¬´P6opaque: no such attribute '$!from' on type NQPMatch in a Foo when trying to get a value‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:28] <Zoffix> cog: doesn't work, but maybe gives some ideas ^ . You need to set it up with .O method too, I believe. So... sounds like you're better off implementing your own EXPR

[19:28] <Kaiepi> with Net::Telnet rwpo i'm planning on implementing all (at least what is possible) all the commands and options

[19:28] <Kaiepi> my main goal is to surpass the perl5 telnet clitnt

[19:28] *** sno left
[19:31] <Kaiepi> zoffix: thoughts on modifying IO::Socket::INET do be able do differen't ipv6 and ipv4 so usera son't have use family => PF_INET and PF_INET6 manually

[19:31] <Kaiepi> thoughta/

[19:31] <Geth> ¬¶ doc: d5dd12d82d | (Bruce Gray)++ | doc/Language/operators.pod6

[19:31] <Geth> ¬¶ doc: Fix thinko.

[19:31] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d5dd12d82d

[19:31] <synopsebot> Link: https://doc.perl6.org/language/operators

[19:33] <Kaiepi> either that or document how to use it better

[19:34] <Kaiepi> but i wonder: are ip addresses like ::ffff:0.0.0.0 supported?

[19:35] * Zoffix is too tired to think about anything

[19:35] *** Zoffix left
[19:35] <Kaiepi> ah, sorry

[19:36] <Geth> ¬¶ doc: b3be2544fd | (Bruce Gray)++ | 2 files

[19:36] <Geth> ¬¶ doc: Fix typo, and remove exception from code.pws. The UrbanDictionary entry is a joke.

[19:36] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b3be2544fd

[19:36] <Kaiepi> anyeone else got any thought on it though?

[19:41] <Kaiepi> i've been pretty prowd of how quickly i picked up the perl6 to the point where i'm already working on dev

[19:42] <Kaiepi> very straightforward language for me, loads of features that makes node jevs jealous

[19:42] <Kaiepi> have you ever tried to write a multiprocces node application"

[19:45] <Kaiepi> the way of dealing with its net module forces you gots super complex that i feel like sholdn't be necarry

[19:45] <b2gills> weekly: The following is about Microsoft buying GitHub

[19:45] <b2gills> weekly: https://blog.github.com/2018-06-04-github-microsoft/

[19:45] <b2gills> weekly: https://blogs.microsoft.com/blog/2018/06/04/microsoft-github-empowering-developers/

[19:45] <b2gills> weekly: CNBC Satya Nadella: https://www.youtube.com/watch?v=m164XggdRGA

[19:45] <b2gills> weekly: Sunday Morning Linux Review 256: Microsoft Gets Git (2017-11-05) https://smlr.us/?p=5440 # conversation about how Microsoft adopted Git for internal use.

[19:45] <notable6> b2gills, Noted!

[19:45] <notable6> b2gills, Noted!

[19:45] <notable6> b2gills, Noted!

[19:45] <notable6> b2gills, Noted!

[19:45] <notable6> b2gills, Noted!

[19:46] <Kaiepi>  maybe an unpopular opinion but i'm gonna see what mcirosoft's here

[19:46] <Kaiepi> before switching repos

[19:47] <b2gills> If you have time listen to the SMLR:256 https://smlr.us/?p=5440 it makes the acquisition seem less problematic.

[19:48] <Kaiepi> yeah

[19:48] <ingy> nned a little help

[19:49] <ingy> what is: 'use lib' may not be pre-compiled

[19:49] <ingy> also how can I get a list of a class or an instance object's methods?

[19:50] <Kaiepi> i have a big in my Net-LibIDN2 that's driving me nutes

[19:50] <El_Che> ingy: .^methods

[19:50] <El_Che> camelia: IO::Handle.^methods

[19:51] <Kaiepi> test failures for a constant to determaine whether it's safe to use LibIDN compat functions

[19:51] <El_Che> it's sleeping

[19:51] *** mcmillhj left
[19:51] <b2gills> ingy: It means you have to disable precomp in any module if you want to have `use lib` in it. Or better yet put the `use lib` into your .pl6 file instead

[19:51] <cog> Apparently masak in 007 does a good job in implementing EXPR

[19:52] <b2gills> m: say Int.^methods

[19:52] <camelia> rakudo-moar 148d7c56a: OUTPUT: ¬´(new Capture Int Num Rat FatRat abs Bridge chr sqrt base polymod expmod is-prime floor ceiling round lsb msb narrow Range log conj asin cosec sinh asinh tanh asech roots isNaN sin tan acosec rand cos cosh unpolar atanh sec log10 acosech atan atan2 pre‚Ä¶¬ª

[19:54] <Kaiepi> the code i have now is constant IDN2_iDN_COMPAT = so try cglobal('idn2', 'idn2_to_ascii_8z', Pointer)

[19:54] <Kaiepi> this only vails on ubuntu for somereason

[19:56] <Kaiepi> tested on alpine linux and it worked fine fs

[19:56] <Kaiepi> tested on alpine linux and it worked fine fsr

[19:57] *** mcmillhj joined
[19:57] *** mcmillhj left
[19:57] <Kaiepi> maybe i'll set up a debian vm

[19:57] <hoelzro> Kaiepi: which Ubuntu, ooc?

[19:57] <Kaiepi> ?

[19:57] <hoelzro> which version

[19:58] <hoelzro> also, o/

[19:58] <Kaiepi> minimal ubunta, idk the version

[19:58] <Kaiepi> \o

[19:58] <El_Che> running docker containers for that kind of tests is way faster than VMs

[19:58] <Kaiepi> does docker un on openbsd?

[19:58] <hoelzro> what does "cat /etc/lsb-release" output?

[19:59] <Kaiepi> doesn't exist

[19:59] <hoelzro> whoa

[19:59] <El_Che> Kaiepi: does anything besides openssh run on openbsd?

[19:59] <El_Che> :)

[19:59] <ingy> when I require my module I get for .^methods: No such method 'methods' for invocant of type 'Perl6::Metamodel::PackageHOW' 

[19:59] <Kaiepi> better init daemons than systemd

[20:00] <ingy> when I 'use' the module it works ok

[20:00] <ingy> I need to load the module from a name in an environment variable

[20:01] <hoelzro> Kaiepi: how did you install this minimal Ubuntu? how old is it?

[20:01] <Kaiepi> i haven't yet but i'll set it up in vmd

[20:01] <El_Che> Ubuntu is pretty identical to Debian Testing/Ubstable lib-wise

[20:01] <Kaiepi> yeah

[20:01] <hoelzro> I just want to see if I can reproduce it on 18.04

[20:01] *** ufobat_ left
[20:02] <hoelzro> or rather, help to diagnose

[20:02] *** mcmillhj joined
[20:02] <Kaiepi> i tried to look through p5's version of telnet

[20:03] *** comborico1611 joined
[20:03] <Kaiepi> but i feel like it's convulated for me to understad

[20:03] <Kaiepi> maybe i should learn perl 5

[20:04] <Kaiepi> eventualy i want to port Net::DNS to perl 6

[20:06] *** psychoslave joined
[20:07] *** raschipi left
[20:11] *** wamba joined
[20:13] <Kaiepi> tough work aheading of me but i like to tackle galenges like this

[20:13] <Kaiepi> *challenges

[20:15] <Kaiepi> but anyway that interesting projects have you working on?

[20:19] <b2gills> ingy: For a module named `Foo` it would be `Foo::.keys.grep(*.starts-with('&'))`

[20:19] *** sauvin joined
[20:19] <Kaiepi> so like a function for grepping subs?

[20:19] <b2gills> ingy: but note that only works for subs that are marked as `our` (default is `my`)

[20:19] *** zakharyas joined
[20:20] <ingy> I wrote a RotN library in 5 languages including Perl6 that all pass the same TestML test suite when you run `make test`: https://github.com/testml-lang/testml/tree/rotn

[20:20] <ingy> TestML is alive!

[20:20] <Kaiepi> i always do ttd

[20:21] <Kaiepi> made too many fuckups in the past from thinking i was a genius and ending up with cargo cult code

[20:22] <b2gills> Kaiepi: `Foo::.keys` returns everything that is marked as `our`, the `.grep(...)` is to limit it to just the Callable ‚Äúvariables‚Äù

[20:22] <Kaiepi> ahh

[20:22] <Kaiepi> that's helpful

[20:23] <Kaiepi> i gotta lotta projects on my hand

[20:23] <Kaiepi> *mind

[20:24] <Kaiepi> has anyone written a nodejs inline module yet?

[20:24] *** kurahaupo left
[20:24] *** kurahaupo joined
[20:24] <ingy> for p6?

[20:25] <Kaiepi> yeah

[20:25] <Kaiepi> some of the features i miss, like Proxy and Reflect are great

[20:25] <ingy> Inline::Coffee would taste better

[20:25] <Kaiepi> Symbals

[20:25] <Kaiepi> coffescript?

[20:26] <ingy> right

[20:26] <Kaiepi> since es6 came out i lost interest

[20:26] <ingy> coffee makes great es6

[20:26] <Kaiepi> it does?

[20:27] <b2gills> I think at this point there would be two Inline::JS modules, one if running under Rakudo:JS, and the other for Rakudo:[MoarVM|JVM]

[20:27] <Kaiepi> hm

[20:27] <ingy> here's a sizeable framework implemented identical in 5 langs so far: https://github.com/testml-lang/testml/tree/master/lib

[20:28] <ingy> the coffe is beautiful

[20:28] <ingy> perl6 is nice

[20:28] <ingy> python is the worst :)

[20:28] <ingy> I want to get to 20 langs this summer

[20:29] *** perlpilot joined
[20:31] <Kaiepi> thought on golang?

[20:31] <b2gills> Ingy: I see "\$''" which I think is better written as ÔΩ¢$''ÔΩ£ or Q[$''] (TestML::Run)

[20:31] <ingy> b2gills++

[20:31] <Kaiepi> peronally not my favourite languags, but there are tones of users it out there

[20:32] *** HaraldJoerg left
[20:32] <Kaiepi> but anyway i'm getting out of hand

[20:33] <Kaiepi> stick to one project at a time

[20:33] <ingy> b2gills: https://github.com/testml-lang/testml/commit/3590d2c4421b3093029be91e53b3b7b28af90597

[20:33] <Kaiepi> <ingy> python is the worst :)

[20:33] <Kaiepi> kin

[20:34] <Kaiepi> it's not a bad language but i don't like the phylosophy it hs

[20:34] <ingy> it's a big stack of kludges 

[20:35] <ingy> but overall, most langs are

[20:35] <Kaiepi> true

[20:35] *** TimToady joined
[20:35] <Kaiepi> debugging memory leaks is a trip and a half?

[20:35] <Kaiepi> need a heapdump? simple

[20:36] <Kaiepi> need a coredump? install openinsiana vm, use a special program to read the corefump

[20:37] <ingy> I mostly think on the level of how acmeist codebases port from lang to lang

[20:37] *** dct joined
[20:37] <ingy> these days I start with coffee, it's the least hateful, then port out

[20:37] <Kaiepi> if someone steals npm's idea i'm boycotting the lang

[20:38] <ingy> perl and p6 are a breeze

[20:38] <Kaiepi> they are

[20:38] <ingy> python is mostly annoying

[20:38] <ingy> but they all end up working in the end

[20:38] <Kaiepi> i haven't worked with python mux

[20:39] <ingy> is the Inline thing pretty popular in p6?

[20:40] <ingy> I haven't thought much on inline since I did the tpf grant a few years back

[20:40] <Kaiepi> i'm not sure, but you see it pop up in people's prjects

[20:40] *** HaraldJoerg joined
[20:40] <Kaiepi> i'd rather use ipc between two processes for that though

[20:42] <Kaiepi> pulled it off on a frankenstein node-golang server but man bash on windows is buggy as well

[20:50] <b2gills> ingy: I would like to see a Slang::C'Dent module. Which would make ‚Äúporting‚Äù such code much easier. (just add `use Slang::C'Dent;‚ê§` to the top of the file)

[20:51] <ingy> b2gills: that's a possibility

[20:51] <b2gills> I ounce made something similar for BF, by adding &infix:<[> and such

[20:51] <ingy> b2gills: look at http://testml.org/playground/?type=example&name=math&view=compiler

[20:52] <ingy> the RHS box is the compilation of the LHS

[20:53] <ingy> the format is what I call Lingy

[20:53] <ingy> and testml is now a lingy repl in any given lang

[20:53] <ingy> that's what that p6 class you were just looking at is

[20:54] <b2gills> A Slang is where you take the current parser and replace it with a new one as you are compiling your code.

[20:54] <Kaiepi> neat

[20:54] <ingy> yep

[20:54] <ingy> I know about slangs

[20:54] <Kaiepi> what kind of uses does it have?

[20:54] <ingy> Lingy or TestML

[20:55] <Kaiepi> ?

[20:55] <ingy> Kaiepi: what is 'it'?

[20:55] <b2gills> one use is Slang::Tuxic, which changes how subroutine calls are parsed

[20:55] <Kaiepi> `both i guess

[20:55] <Kaiepi> there are new to me

[20:57] <b2gills> basically `foo     ('abc',)` is normally the same as `foo    List.new('abc',)`, but under Slang::Tuxic it is the same as `foo(    'abc',)`

[20:57] *** zakharyas left
[20:57] <Kaiepi> neat

[20:58] <ingy> I guess it means slang :)

[20:58] <Geth> ¬¶ rakudo.org/roast-bugs-reporting: 3905504c05 | (Tim Smith)++ (committed using GitHub Web editor) | templates/bugs.html.ep

[20:58] <Geth> ¬¶ rakudo.org/roast-bugs-reporting: Mention roast on Bugs page

[20:58] <Geth> ¬¶ rakudo.org/roast-bugs-reporting: review: https://github.com/perl6/rakudo.org/commit/3905504c05

[20:58] <Geth> ¬¶ rakudo.org: softmoth++ created pull request #12: Mention roast on Bugs page

[20:58] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/pull/12

[20:59] <ingy> Kaiepi: come to openwest in utah tomorrow and you can see my talk on testml (and lingy)

[20:59] <b2gills> Basically with the Slang feature every other programming language a subset of Perl 6

[20:59] <Geth> ¬¶ rakudo.org: 3905504c05 | (Tim Smith)++ (committed using GitHub Web editor) | templates/bugs.html.ep

[20:59] <Geth> ¬¶ rakudo.org: Mention roast on Bugs page

[20:59] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/3905504c05

[20:59] <Geth> ¬¶ rakudo.org: 310a9c6929 | (Zoffix Znet)++ (committed using GitHub Web editor) | templates/bugs.html.ep

[20:59] <Geth> ¬¶ rakudo.org: Merge pull request #12 from perl6/roast-bugs-reporting

[20:59] <Geth> ¬¶ rakudo.org: 

[20:59] <Geth> ¬¶ rakudo.org: Mention roast on Bugs page

[20:59] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/310a9c6929

[20:59] *** HaraldJoerg1 joined
[21:00] <Geth> ¬¶ rakudo.org: 8a36e8f558 | (Zoffix Znet)++ (committed using GitHub Web editor) | dummy-file-for-restart-app-commits.txt

[21:00] <Geth> ¬¶ rakudo.org: [REAPP]

[21:00] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/8a36e8f558

[21:01] <ingy> what format is precomp?

[21:02] <ingy> nqp or something?

[21:02] <b2gills> Do you mean .moarvm bytecode, or the filesystem layout?

[21:02] <ingy> the bytecode

[21:02] <Kaiepi> i still don't understand

[21:03] *** HaraldJoerg left
[21:03] <ingy> If I could compile lingy to the bytecode, then that might be the best way to use cdent modules in p6

[21:03] <Kaiepi> ingy i like in the maritimes

[21:04] <Kaiepi> will there be a video on it?

[21:04] <ingy> it might be live streamed

[21:04] <Kaiepi> perfect

[21:04] <Kaiepi> what time?

[21:04] <ingy> https://openwest.org/

[21:04] <ingy> 4pm on the schedule

[21:04] <ingy> time to get on this aeroplane

[21:09] *** perlpilot left
[21:11] *** mcmillhj left
[21:13] <b2gills> ingy: I don't think the format of .moarvm is set in stone. It might be better to create a NQP compiler. (I would definitely not target NQP itself except to bootstrap a compiler written in C'Dent.)

[21:15] <b2gills> I do not know much about anything lower than Perl¬†6 itself

[21:17] *** sena_kun left
[21:27] *** rcwolf left
[21:33] <Kaiepi> i'm tempted to use a grammar to parse Net::Telnet but i have a feeling it'd ended up overly complex

[21:33] *** raschipi joined
[21:34] <Kaiepi> might be one of those things like using regex on html

[21:38] *** MasterDuke joined
[21:39] *** HaraldJoerg1 left
[21:40] <raschipi> regex can't parse html. Perl 6 grammars can certainly parse Telnet

[21:43] <Kaiepi> perfect!

[21:43] <Kaiepi> this gives me a great chance to figure out how grammars workd

[21:46] <Kaiepi> i especially lihe the efforts to make it legible

[22:08] *** MasterDuke left
[22:10] *** kurahaupo_ joined
[22:12] *** kurahaupo left
[22:16] *** kurahaupo_ left
[22:16] *** kurahaupo joined
[22:23] *** lizmat joined
[22:26] *** psychoslave left
[22:27] *** psychoslave joined
[22:29] *** masak left
[22:29] *** pmichaud_ left
[22:29] *** moritz left
[22:29] *** hcit left
[22:30] *** masak joined
[22:30] *** moritz joined
[22:30] *** pmichaud joined
[22:30] *** masak is now known as Guest14355

[22:30] *** hcit joined
[22:36] *** MasterDuke joined
[22:37] *** dct left
[22:40] <b2gills> Kaiepi: If you want, I can give you pointers as you are writing it

[22:43] <Kaiepi> that'd help

[22:47] <Kaiepi> i'm working on the grammer for the protocol atm

[22:48] *** itaipu left
[23:00] *** molaf left
[23:07] *** pmurias left
[23:15] *** rindolf left
[23:21] *** wamba left
[23:23] *** psychoslave left
[23:23] *** uzl joined
[23:26] <uzl> I'm going through Think Perl 6 and I'm having no success with this example regarding a JSON grammar.

[23:27] <uzl> https://tio.run/##fVTfb9owEH7PX3GKNmUrhJYU6AZZpm6rJlUTncReqiQPJjHgkcSZbagQsH@d@UcCKULzA/i@@7678/niErNscDisOIb1oJOMLGvOUJ4jBo@Tp7H7vTK2Fsgl6BIX8OvpJ@i1hYhfQQg@nf7GiQhgBz5iDG0CiLVrr1VslWEwFKNyto52@yUiLCNcKp29c66onUphqAFcwVuI2uesuhrwuWCkmAfO0AF/jbIVDppcXVvFdcKa8sMUEDsN5tGho1aRXiU3rTD5TPLIBj@E6EWeAyIXHIiDlgJfCYpVPsVMCyxTdhi1dpEbf4YjAFHaUr8dvZGeWDb2ZDeIfogf4uAUwvC1u5lU12@OfeGqdse2qa0pMKhznK0dCKZD7WCGMm52xSrLoEq6t6x8A2/07FTN@QR/hoJeP4y/XY8sNUf2jDAuxijH9

[23:27] <uzl> hDsR7oo7LaCM3RCJzkRCwMTfp@RtUJVbg2huTK9vjHSlGHOJWCG1JZ5MRb3R9j2uuAVKUw0roNKVkLERjnH@AWeKVvWOBdI6BLGzzVUUglmX2mq8e7Njdd1b@WfLd17XUO5oAUe69apjKHWbase2mJTauWCysO1a9R02tTnQb/fd7vebc82jWxfjkBnM5JcjDHoDXSMXn9w9/8YOZ2S7GIMmR@k3r378PHGPk5RrE@YLEgmG1qo0xmEl1S@GtJW99/WU2l/QcXSRUlCV4U4XUjCcEqULc/ndby@nBI5DWZSciSShZyR5mvTKRHj@F1zit6PLC6/3b8Vn8wqpXyvrMPhHw

[23:27] <Kaiepi> i think this a question asked a lot, but how do tokens and rules differ in grammars

[23:28] <uzl> that url is messed up. My bad!

[23:28] <El_Che> https://docs.perl6.org/language/grammars#Rules

[23:28] <MasterDuke> Kaiepi: i think the short answer is that whitespace is significant in rules

[23:29] <Kaiepi> ohh

[23:29] <Kaiepi> i'm not a use fan of that so i'll stick to tokens

[23:29] <uzl> This is the url for the example: shorturl.at/nszRX

[23:32] *** Zoffix joined
[23:32] <Zoffix> eco: Grammer::Debuggert

[23:32] <Zoffix> eco: Grammer::Debugger

[23:32] <buggable> Zoffix, Nothing found

[23:32] <buggable> Zoffix, Nothing found

[23:32] <Zoffix> eco: Grammar::Debugger

[23:32] <buggable> Zoffix, Grammar::Debugger 'Simple tracing and debugging support for Perl 6 grammars': http://modules.perl6.org/dist/Grammar::Debugger:github:N'A

[23:33] *** wamba joined
[23:33] <Zoffix> uzl: ^ install that module. It also includes Grammar::Tracer. Then add `use Grammar::Tracer` at the top of your program. It'll show you debug output of what's matching and what isn't.

[23:33] <Zoffix> You'll see it's failing to match `true` after `"isAlive"`

[23:34] <Zoffix> And you might notice your JSON has a syntax error

[23:34] <Zoffix> uzl: after `"credit": 2342.25`. There's a missing closing brace

[23:34] <Zoffix> uzl: you can use this site to validate JSON: https://jsonlint.com/

[23:34] <uzl> Zoffix: Thanks! I'll try that!

[23:46] *** stmuk joined
[23:47] *** stmuk_ left
