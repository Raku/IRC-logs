[00:01] *** Khisanth joined
[00:19] <colomon> argh.  I sometimes think the #1 problem I have with p6 is “Malformed UTF-8”

[00:20] *** Tison joined
[00:21] <colomon> ooooo.  utf8-c8?

[00:22] <chansen_> LOL, blaming bad data on a programming language?

[00:23] *** HaraldJoerg left
[00:24] <colomon> chansen_: blaming the language for making it tricky to deal with bad data that I nevertheless need to process

[00:24] <timotimo> utf8-c8 is exactly the tool for that, i think

[00:24] <colomon> yeah, just tried it and it seemed to work pretty well.

[00:24] <timotimo> just don't print it out by encoding it back to utf8 without -c8, that looks funny

[00:25] *** markong left
[00:25] <colomon> I don’t think I’m likely to ever use bits (at least for this task) which require actually looking at the non-utf8 data.

[00:26] <colomon> it’s just that those lines need to be read from the file without killing the import.

[00:26] <timotimo> in that case, why not use latin1 as the encoding? :)

[00:29] <colomon> …. that might work

[00:29] <timotimo> latin1 is basically "i want this to behave like a Buf8, but i want to use string functions on it"

[00:29] <colomon> that’s exactly what I need

[00:29] <colomon> timotimo++

[00:29] <timotimo> utf8-c8 is similar, but it lets you not accidentally chop graphemes in half

[00:30] <colomon> I mean, this is hypothetically ASCII, it’s just real world people don’t always sanitize their strings correctly ASCII

[00:30] <timotimo> heh.

[00:31] <colomon> and I can’t even really complain about that, because various of my own software had that same issue for probably at least 15 years.

[00:33] <timotimo> :)

[00:33] <timotimo> just don't get a Yutf8K bug in your program

[00:33] *** cog_ joined
[00:33] * chansen_ Should I laugh or cry?

[00:42] *** mack[m] left
[00:46] *** Rawriful left
[00:48] <colomon> do we have an unpack equivalent yet?

[00:48] <timotimo> the experimental one, a module in the ecosystem, and nativecast

[00:48] <colomon> (actually, I guess comb(/.8/) might work for my purposes?)

[00:49] <timotimo> what is that supposed to do?

[00:49] <colomon> the file format I’m working with is an old punched card style 80 character line

[00:49] <colomon> with (more or less) 10 8-char fields

[00:49] <timotimo> in that case you will want comb(8)

[00:50] <colomon> just 8?

[00:50] <timotimo> because comb(/.8/) will give you all characters that are followed by an 8

[00:50] <timotimo> including the 8

[00:50] <timotimo> m: say "123456789012345678901234567890".comb(8)

[00:50] <camelia> rakudo-moar ede507b73: OUTPUT: «(12345678 90123456 78901234 567890)␤»

[00:50] <timotimo> m: say "123456789012345678901234567890".comb(/.8/)

[00:50] <camelia> rakudo-moar ede507b73: OUTPUT: «(78 78 78)␤»

[00:50] *** zachk left
[00:51] * colomon needs to brush up on his quantifiers

[00:51] <timotimo> that's a feature of comb itself, not regex per se :)

[00:51] <colomon> the comb(8) thing, yes

[00:51] <colomon> I was looking for something like… comb(/.{8}/) ?

[00:52] <colomon> the lazy way of writing comb(/…...../)

[00:52] <timotimo> not quite ;)

[00:52] <timotimo> m: say "123456789012345678901234567890".comb(/. ** 1..8/)

[00:52] <camelia> rakudo-moar ede507b73: OUTPUT: «(12345678 90123456 78901234 567890)␤»

[00:52] <colomon> that’s barely even lazy!

[00:52] <timotimo> alternatively if you're certain the fields all are 8 long and there isn't one with only 7 or so

[00:52] <timotimo> m: say "123456789012345678901234567890".comb(/. ** 8/)

[00:52] <camelia> rakudo-moar ede507b73: OUTPUT: «(12345678 90123456 78901234)␤»

[00:54] <colomon> comb(8) is faster anyway, yes?

[00:55] <timotimo> oh yes

[00:55] <timotimo> probably at least 100x

[00:57] *** cog_ left
[01:25] *** colomon_ joined
[01:26] *** colomon left
[01:26] *** colomon_ is now known as colomon

[01:27] *** mryan left
[01:27] *** mryan_ joined
[01:54] *** ilbot3 left
[01:56] *** ilbot3 joined
[01:56] *** ChanServ sets mode: +v ilbot3

[01:59] <Geth> ¦ doc: def91a72e2 | MasterDuke17++ | doc/Language/performance.pod6

[01:59] <Geth> ¦ doc: Expand the "Profile locally" section

[01:59] <Geth> ¦ doc: 

[01:59] <Geth> ¦ doc: First stab at #1921

[01:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/def91a72e2

[01:59] <synopsebot> Link: https://doc.perl6.org/language/performance

[02:00] *** molaf left
[02:12] *** molaf joined
[02:40] *** ufobat_ joined
[02:43] *** ufobat left
[03:03] <squashable6> 🍕 AlexDaniel++ unlabeled issue “pragma MONKEY-BARS is no…”: https://github.com/perl6/doc/issues/802

[03:03] <squashable6> 🍕 AlexDaniel++ unlabeled issue “pragma MONKEY-BUSINESS i…”: https://github.com/perl6/doc/issues/804

[03:03] <squashable6> 🍕 AlexDaniel++ unlabeled issue “pragma MONKEY-TRAP is no…”: https://github.com/perl6/doc/issues/807

[03:03] <squashable6> 🍕 AlexDaniel++ unlabeled issue “pragma MONKEY-SHINE is n…”: https://github.com/perl6/doc/issues/806

[03:03] <squashable6> 🍕 AlexDaniel++ unlabeled issue “pragma MONKEY-WRENCH is …”: https://github.com/perl6/doc/issues/808

[03:03] <squashable6> 🍕 AlexDaniel++ unlabeled issue “pragma MONKEY-BRAINS is …”: https://github.com/perl6/doc/issues/803

[03:03] <AlexDaniel> heh…

[03:27] *** khw left
[03:27] *** araraloren joined
[03:29] *** kaare_ joined
[03:30] *** Quadrant joined
[03:34] *** eliasr left
[03:39] <Geth> ¦ doc/master: 6 commits pushed by (Aleks-Daniel Jakimenko-Aleksejev)++

[03:39] <Geth> ¦ doc/master: 22fa81784b | Use “=begin code” for Proc::Async example

[03:39] <Geth> ¦ doc/master: d93e58f549 | Use numbers instead of incoherent text

[03:39] <Geth> ¦ doc/master: e268569811 | Show how to get a PID from .ready

[03:39] <Geth> ¦ doc/master: 687632de07 | Use lower timeout

[03:39] <Geth> ¦ doc/master: 03ae546915 | Also show how to get .signal

[03:39] <Geth> ¦ doc/master: 59f7fc5fd8 | Document .pid and add some notes to .ready

[03:39] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/def91a72e24c...59f7fc5fd811

[03:40] <squashable6> 🍕 AlexDaniel++ closed issue “Document how to get .exi…”: https://github.com/perl6/doc/issues/785

[03:44] <Geth> ¦ doc: 8e762ea25b | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/Proc/Async.pod6

[03:44] <Geth> ¦ doc: Add missing sentence

[03:44] <Geth> ¦ doc: 

[03:44] <Geth> ¦ doc: Otherwise it's unclear why .pid is called like that.

[03:44] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8e762ea25b

[03:44] <synopsebot> Link: https://doc.perl6.org/type/Proc::Async

[03:44] <AlexDaniel> squashable6: status

[03:44] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈8 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[03:44] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/523493c4dc2488b9c108eb0344527d2f

[03:44] * AlexDaniel drops to bed for a bit

[03:47] *** espadrine left
[03:53] *** cog_ joined
[04:01] *** kurahaupo_ is now known as kurahaupo

[04:17] *** cog_ left
[04:32] *** skids left
[04:41] *** araraloren left
[04:41] *** araraloren joined
[04:46] *** telnet left
[04:46] *** nebuchadnezzar left
[04:46] *** nebuchadnezzar joined
[04:47] *** telnet joined
[04:47] *** kst` joined
[04:48] *** awwaiid left
[04:49] *** awwaiid joined
[04:51] *** kst left
[05:02] *** aborazmeh joined
[05:02] *** aborazmeh left
[05:02] *** aborazmeh joined
[05:27] *** jast left
[05:27] *** jast joined
[05:57] *** wamba joined
[06:29] *** jmerelo joined
[06:30] <jmerelo> squashable6: status

[06:30] <squashable6> jmerelo, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈5 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[06:30] <squashable6> jmerelo, Log and stats: https://gist.github.com/a3297160d145ed245e70bb8e59aadaeb

[06:32] <squashable6> 🍕 JJ++ submitted a review on pull request “Update htmlify.p6 to fix…”: https://github.com/perl6/doc/pull/1997#pullrequestreview-117832720

[06:37] <squashable6> 🍕 JJ++ labeled issue “Kernel, Distro, VM, Perl…”: https://github.com/perl6/doc/issues/503

[06:37] <squashable6> 🍕 JJ++ milestoned issue “Kernel, Distro, VM, Perl…”: https://github.com/perl6/doc/issues/503

[06:46] *** darutoko joined
[06:50] *** rindolf joined
[06:54] *** Quadrant left
[06:57] <buggable> New CPAN upload: P5chop-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5chop:cpan:ELIZABETH

[06:57] <Geth> ¦ doc: JJ self-assigned Kernel, Distro, VM, Perl, Systemic and Compiler object types not documented https://github.com/perl6/doc/issues/503

[06:57] <squashable6> 🍕 JJ++ unlabeled issue “Kernel, Distro, VM, Perl…”: https://github.com/perl6/doc/issues/503

[07:00] <jmerelo> p6: say $*PERL.gist

[07:00] <camelia> rakudo-moar ede507b73: OUTPUT: «Perl 6 (6.c)␤»

[07:01] <jmerelo> p6: say $*VM.gist

[07:01] <camelia> rakudo-moar ede507b73: OUTPUT: «moar (2018.04.39.gc.702.f.4.c.66)␤»

[07:02] <tobs> m: .("42") with sub (Str(Int) $s) { $s.chars } # wouldn't it make sense if Str(Int) also accepted Str?

[07:02] <camelia> rakudo-moar ede507b73: OUTPUT: «Type check failed in binding to parameter '$s'; expected Int but got Str ("42")␤  in sub  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[07:05] <squashable6> 🍕 JJ++ edited issue “Kernel, Distro, VM, Perl…”: https://github.com/perl6/doc/issues/503

[07:14] *** cog_ joined
[07:15] <jmerelo> p6: say $*VM.verbose-config(True)

[07:15] <camelia> rakudo-moar ede507b73: OUTPUT: «No such method 'verbose-config' for invocant of type 'VM'␤  in block <unit> at <tmp> line 1␤␤»

[07:15] <jmerelo> p6: say $*PERL.verbose-config(True)

[07:15] <camelia> rakudo-moar ede507b73: OUTPUT: «No such method 'verbose-config' for invocant of type 'Perl'␤  in block <unit> at <tmp> line 1␤␤»

[07:15] <jmerelo> p6: say $*PERL.compiler.verbose-config(True)

[07:15] <camelia> rakudo-moar ede507b73: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in block <unit> at <tmp> line 1␤␤»

[07:15] <jmerelo> p6: say $*PERL.compiler

[07:15] <camelia> rakudo-moar ede507b73: OUTPUT: «rakudo (2018.04.1.38.gede.507.b.73)␤»

[07:15] <jmerelo> p6: say $*PERL.compiler.^name

[07:15] <camelia> rakudo-moar ede507b73: OUTPUT: «Compiler␤»

[07:16] <jmerelo> p6: say $*PERL.compiler.build-date

[07:16] <camelia> rakudo-moar ede507b73: OUTPUT: «2018-05-05T21:49:43Z␤»

[07:18] <jmerelo> p6: say $*PERL.compiler.verbose-config( :1say )

[07:18] <camelia> rakudo-moar ede507b73: OUTPUT: «distro::auth=https://www.opensuse.org/␤distro::desc=2018-05-06T09:18:07.406198+02:00␤distro::is-win=False␤distro::name=opensuse␤distro::path-sep=:␤distro::release=42.3␤distro::signature=␤distro::version=42.3␤kernel::arch=x86_64␤kerne…»

[07:18] <jmerelo> p6: say $*PERL.compiler.verbose-config

[07:18] <camelia> rakudo-moar ede507b73: OUTPUT: «distro::auth=https://www.opensuse.org/␤distro::desc=2018-05-06T09:18:15.968018+02:00␤distro::is-win=False␤distro::name=opensuse␤distro::path-sep=:␤distro::release=42.3␤distro::signature=␤distro::version=42.3␤kernel::arch=x86_64␤kerne…»

[07:18] <jmerelo> p6: say $*PERL.compiler.verbose-config( say => True )

[07:18] <camelia> rakudo-moar ede507b73: OUTPUT: «distro::auth=https://www.opensuse.org/␤distro::desc=2018-05-06T09:18:59.165085+02:00␤distro::is-win=False␤distro::name=opensuse␤distro::path-sep=:␤distro::release=42.3␤distro::signature=␤distro::version=42.3␤kernel::arch=x86_64␤kerne…»

[07:19] <jmerelo> p6: say $*PERL.compiler.verbose-config( say => True ).^name

[07:19] <camelia> rakudo-moar ede507b73: OUTPUT: «distro::auth=https://www.opensuse.org/␤distro::desc=2018-05-06T09:19:17.571307+02:00␤distro::is-win=False␤distro::name=opensuse␤distro::path-sep=:␤distro::release=42.3␤distro::signature=␤distro::version=42.3␤kernel::arch=x86_64␤kerne…»

[07:23] <Geth> ¦ doc: e112a84219 | (JJ Merelo)++ | 5 files

[07:23] <Geth> ¦ doc: Adds the Systemic role

[07:23] <Geth> ¦ doc: 

[07:23] <Geth> ¦ doc: And links it from the pages it was mentioned. Refs #503

[07:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e112a84219

[07:23] <Geth> ¦ doc: c6546a205b | (JJ Merelo)++ | 2 files

[07:23] <Geth> ¦ doc: Adds the Compiler type

[07:23] <Geth> ¦ doc: 

[07:23] <squashable6> 🍕 JJ++ closed issue “Kernel, Distro, VM, Perl…”: https://github.com/perl6/doc/issues/503

[07:23] <Geth> ¦ doc: Links it from `Perl`. Closes #503

[07:23] <squashable6> 🍕 JJ++ edited issue “Kernel, Distro, VM, Perl…”: https://github.com/perl6/doc/issues/503

[07:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c6546a205b

[07:24] <squashable6> 🍕 JJ++ labeled issue “Inconsistent capitalization for doc headers”: https://github.com/perl6/doc/issues/1945

[07:25] *** robertle joined
[07:31] <squashable6> 🍕 JJ++ wrote a comment on “Document how one could write their own .gist”: https://github.com/perl6/doc/issues/922#issuecomment-386860222

[07:32] <squashable6> 🍕 JJ++ milestoned issue “Document how one could write their own .gist”: https://github.com/perl6/doc/issues/922

[07:33] <squashable6> 🍕 JJ++ labeled issue “Document how one could write their own .gist”: https://github.com/perl6/doc/issues/922

[07:38] *** cog_ left
[07:38] *** Sgeo joined
[07:40] *** Sgeo__ left
[07:44] *** kaare_ left
[07:55] *** espadrine joined
[07:56] *** labster left
[08:00] <Geth> ¦ doc: cecimerelo++ created pull request #1998: Corrected some minor problems

[08:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1998

[08:00] <squashable6> 🍕 cecimerelo++ opened pull request “Corrected some minor problems”: https://github.com/perl6/doc/pull/1998

[08:00] <squashable6> 🍕🍕🍕  First contribution by cecimerelo++! ♥

[08:02] <squashable6> 🍕 JJ++ submitted a review on pull request “Corrected some minor problems”: https://github.com/perl6/doc/pull/1998#pullrequestreview-117834669

[08:04] *** kent\n left
[08:05] *** kent\n joined
[08:09] <Geth> ¦ doc: cecimerelo++ created pull request #1999: Close #1994

[08:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1999

[08:09] <squashable6> 🍕 cecimerelo++ opened pull request “Close #1994”: https://github.com/perl6/doc/pull/1999

[08:11] <squashable6> 🍕 JJ++ edited a review on pull request “Close #1994”: https://github.com/perl6/doc/pull/1999#pullrequestreview-117834883

[08:11] <squashable6> 🍕 JJ++ wrote a comment on a review for “Close #1994”: https://github.com/perl6/doc/pull/1999#discussion_r186282094

[08:11] <squashable6> 🍕 JJ++ wrote a comment on a review for “Close #1994”: https://github.com/perl6/doc/pull/1999#discussion_r186282136

[08:11] <squashable6> 🍕 JJ++ wrote a comment on a review for “Close #1994”: https://github.com/perl6/doc/pull/1999#discussion_r186282120

[08:11] <squashable6> 🍕 JJ++ submitted a review on pull request “Close #1994”: https://github.com/perl6/doc/pull/1999#pullrequestreview-117834883

[08:11] <squashable6> 🍕 JJ++ wrote a comment on a review for “Close #1994”: https://github.com/perl6/doc/pull/1999#discussion_r186282110

[08:15] <squashable6> 🍕 JJ++ edited pull request “Revises README.md,  closes #1994”: https://github.com/perl6/doc/pull/1999

[08:19] <squashable6> 🍕 cecimerelo++ submitted a review on pull request “Revises README.md,  closes #1994”: https://github.com/perl6/doc/pull/1999#pullrequestreview-117835109

[08:19] <squashable6> 🍕 cecimerelo++ wrote a comment on a review for “Revises README.md,  closes #1994”: https://github.com/perl6/doc/pull/1999#discussion_r186282320

[08:24] <squashable6> 🍕 cecimerelo++ synchronize pull request “Revises README.md,  closes #1994”: https://github.com/perl6/doc/pull/1999

[08:27] <squashable6> 🍕 cecimerelo++ synchronize pull request “Revises README.md,  closes #1994”: https://github.com/perl6/doc/pull/1999

[08:28] <squashable6> 🍕 JJ++ edited a review on pull request “Revises README.md,  closes #1994”: https://github.com/perl6/doc/pull/1999#pullrequestreview-117835279

[08:28] <squashable6> 🍕 JJ++ wrote a comment on a review for “Revises README.md,  closes #1994”: https://github.com/perl6/doc/pull/1999#discussion_r186282503

[08:28] <squashable6> 🍕 JJ++ submitted a review on pull request “Revises README.md,  closes #1994”: https://github.com/perl6/doc/pull/1999#pullrequestreview-117835279

[08:29] <jmerelo> Next issue is going to be #2000

[08:29] <jmerelo> Maybe we should kinda keep it for something beautiful, and encouraging, and, I don't know, special

[08:29] <jmerelo> (or PR)

[08:41] *** domidumont joined
[08:47] *** domidumont left
[08:48] *** domidumont joined
[09:02] <Geth> ¦ doc: cc6e9eaba9 | (JJ Merelo)++ | doc/Language/classtut.pod6

[09:02] <Geth> ¦ doc: Documents gist override

[09:02] <Geth> ¦ doc: 

[09:02] <Geth> ¦ doc: Closes #922

[09:02] <synopsebot> Link: https://doc.perl6.org/language/classtut

[09:02] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cc6e9eaba9

[09:02] <squashable6> 🍕 JJ++ closed issue “Document how one could write their own .gist”: https://github.com/perl6/doc/issues/922

[09:02] <jmerelo> squashable6: status

[09:02] <squashable6> jmerelo, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈2 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[09:02] <squashable6> jmerelo, Log and stats: https://gist.github.com/3feb84cf658dbae530f78f0f0ed75fbc

[09:02] <jmerelo> C'mon, two hours to go... 

[09:17] *** brrt joined
[09:19] <Geth> ¦ doc: 3d92154e3c | Cecilia++ (committed using GitHub Web editor) | README.es.md

[09:19] <Geth> ¦ doc: Corrected some minor problems

[09:19] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3d92154e3c

[09:19] <Geth> ¦ doc: 1a93d75aba | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | README.es.md

[09:19] <Geth> ¦ doc: Merge pull request #1998 from cecimerelo/patch-1

[09:19] <Geth> ¦ doc: 

[09:19] <Geth> ¦ doc: Corrected some minor problems

[09:19] <squashable6> 🍕 JJ++ merged pull request “Corrected some minor problems”: https://github.com/perl6/doc/pull/1998

[09:19] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1a93d75aba

[09:19] <Geth> ¦ doc/master: 4 commits pushed by Cecilia++, (Juan Julián Merelo Guervós)++

[09:19] <Geth> ¦ doc/master: 5839117679 | Close #1994

[09:19] <Geth> ¦ doc/master: 67a5fe76a5 | Closed #1994

[09:19] <Geth> ¦ doc/master: e54eafd639 | Deleted some white espaces

[09:19] <Geth> ¦ doc/master: 1aaa8d4edd | Merge pull request #1999 from cecimerelo/patch-2

[09:19] <squashable6> 🍕 JJ++ merged pull request “Revises README.md,  closes #1994”: https://github.com/perl6/doc/pull/1999

[09:19] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/1a93d75aba5e...1aaa8d4edd5b

[09:19] <squashable6> 🍕 JJ++ closed issue “Revise README.md”: https://github.com/perl6/doc/issues/1994

[09:20] <Geth> ¦ doc: a66a26a29a | (Ronald Schmidt)++ | htmlify.p6

[09:20] <Geth> ¦ doc: Update htmlify.p6 to fix 'got empty filename' issue #1971.  Was looking

[09:20] <Geth> ¦ doc: 

[09:20] <Geth> ¦ doc: for "infix C<foo>" and tried to process '=head1 baz X<|baz>' same way

[09:20] <Geth> ¦ doc: which results in empty document name.  Note 'infix X<C<foo>>' is sometimes

[09:20] <Geth> ¦ doc: used so need to check content as well as .type eq 'X'.

[09:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a66a26a29a

[09:20] <squashable6> 🍕 JJ++ merged pull request “Update htmlify.p6 to fix…”: https://github.com/perl6/doc/pull/1997

[09:20] <Geth> ¦ doc: 96341fd2d6 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | htmlify.p6

[09:20] <Geth> ¦ doc: Merge pull request #1997 from ronaldxs/fix-empty-filename-subkind-Xindex

[09:20] <Geth> ¦ doc: 

[09:20] <Geth> ¦ doc: Update htmlify.p6 to fix 'got empty filename' issue #1971.

[09:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/96341fd2d6

[09:22] <Geth> ¦ doc: JJ self-assigned A DBIish example is outdated; MySQL is replaced with MariaDB on Debian Stretch https://github.com/perl6/doc/issues/1993

[09:23] <squashable6> 🍕 JJ++ wrote a comment on “A DBIish example is outd…”: https://github.com/perl6/doc/issues/1993#issuecomment-386865959

[09:24] *** ufobat_ left
[09:26] <squashable6> 🍕 JJ++ wrote a comment on “A DBIish example is outd…”: https://github.com/perl6/doc/issues/1993#issuecomment-386866130

[09:34] <Geth> ¦ doc: 229f524a19 | (JJ Merelo)++ | doc/Language/nativecall.pod6

[09:34] <Geth> ¦ doc: Deletes reference to DBIish which does not include NativeCall refx #1993

[09:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/229f524a19

[09:34] <Geth> ¦ doc: e69970ed66 | (JJ Merelo)++ | doc/Language/nativecall.pod6

[09:34] <Geth> ¦ doc: Inserted instructions MySQL → MariaDB

[09:34] <synopsebot> Link: https://doc.perl6.org/language/nativecall

[09:34] <Geth> ¦ doc: 

[09:34] <Geth> ¦ doc: Closes #1993

[09:34] <squashable6> 🍕 JJ++ closed issue “A DBIish example is outd…”: https://github.com/perl6/doc/issues/1993

[09:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e69970ed66

[09:35] <squashable6> 🍕 JJ++ wrote a comment on “Split "Any" documentatio…”: https://github.com/perl6/doc/issues/1991#issuecomment-386866582

[09:35] <squashable6> 🍕 JJ++ closed issue “Split "Any" documentatio…”: https://github.com/perl6/doc/issues/1991

[09:36] <squashable6> 🍕 JJ++ wrote a comment on “Problems with ".html"”: https://github.com/perl6/doc/issues/1971#issuecomment-386866652

[09:36] <squashable6> 🍕 JJ++ closed issue “Problems with ".html"”: https://github.com/perl6/doc/issues/1971

[09:38] <Geth> ¦ doc: JJ self-assigned add more detail about implicit return https://github.com/perl6/doc/issues/388

[09:38] <squashable6> 🍕 JJ++ milestoned issue “add more detail about implicit return”: https://github.com/perl6/doc/issues/388

[09:38] *** eliasr joined
[09:38] *** yoleaux left
[09:39] *** yoleaux joined
[09:39] *** ChanServ sets mode: +v yoleaux

[09:41] <squashable6> 🍕 mryan++ wrote a comment on “Document `/<foo ...>/` syntax somewhere”: https://github.com/perl6/doc/issues/1858#issuecomment-386866903

[09:44] <mryan_> Hello all:  the comment squashable just referred has a request for some input when you can …

[09:51] <Geth> ¦ doc: mryan self-unassigned Document `/<foo ...>/` syntax somewhere https://github.com/perl6/doc/issues/1858

[09:52] <jmerelo> mryan_: wow, lot to read... 

[09:54] <mryan_> I wish it was simpler but the more I looked, the more complicated it got - either that, or there’s something I just done get...

[09:54] <squashable6> 🍕 JJ++ wrote a comment on “Document `/<foo ...>/` syntax somewhere”: https://github.com/perl6/doc/issues/1858#issuecomment-386867552

[09:54] <squashable6> 🍕 JJ++ unlabeled issue “Document `/<foo ...>/` syntax somewhere”: https://github.com/perl6/doc/issues/1858

[09:55] <mryan_> s/done/don’t/

[09:55] <jmerelo> Let me see if I can address some of that.

[09:57] <jmerelo> mryan_: first, I don't think you need to define a whole grammar; it's probably OK if you just define a regex, token or rule. You can do that independently of grammars, as you probably know.

[09:58] <jmerelo> mryan_: In any case, it's better of you show us the examples. Also great if you post it in StackOverflow :-)

[09:59] <jmerelo> mryan_: also good: you can post whatever you've done as a pull request, and lest the rest interact with it. Maybe what you've done is good enough, documentation wise. We won't know until we see it :-)

[10:01] <mryan_> You and stack overflow…. :-)  :-)

[10:03] <mryan_> There’s a bit of a description of what the syntax does here:  http://design.perl6.org/S05.html#Extensible_metasyntax_(%3C...%3E)

[10:04] <mryan_> It’s definately a method call which implies a grammar for the method to live in (as far as I (don’t) understand it)

[10:04] <Geth> ¦ doc: 8af51013c7 | (JJ Merelo)++ | 2 files

[10:04] <Geth> ¦ doc: Adds implicit return trap example.

[10:04] <Geth> ¦ doc: 

[10:04] <Geth> ¦ doc: That would close #388.

[10:04] <Geth> ¦ doc: 

[10:04] <Geth> ¦ doc: Also, adds links to NativeCall use in DBIish, refs #1993 albeit closed.

[10:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8af51013c7

[10:04] <squashable6> 🍕 JJ++ closed issue “add more detail about implicit return”: https://github.com/perl6/doc/issues/388

[10:04] <AlexDaniel> squashable6: status

[10:04] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈1 hour. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[10:04] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/a30de265c545dfc9c60613556f8a7eb3

[10:05] <jmerelo> mryan_: yep, I know... But can't help. I think it really helps improve perl6 visibility 

[10:05] *** Gothmog_ left
[10:05] <jmerelo> mryan_: it probably makes a lot of sense inside a grammar, but token, regex, rules are actually funnily-named methods, which you can declare independently if you want. 

[10:07] <mryan_> jmerelo: re SO - without a doubt it improves perl6’s visibillity…

[10:08] <squashable6> 🍕 JJ++ wrote a comment on “xt/aspell.t - aspell issue”: https://github.com/perl6/doc/issues/975#issuecomment-386868351

[10:08] <squashable6> 🍕 JJ++ labeled issue “xt/aspell.t - aspell issue”: https://github.com/perl6/doc/issues/975

[10:09] <jmerelo> mryan_: this month we have reached the highest number of questions ever, which amounts to all of 45 questions. Pretty much what react-native gets in one hour.

[10:10] <jmerelo> mryan_: or Perl in half a week...

[10:10] <jmerelo> mryan_: so, anyway. Best option here would be to do a PR and we'll take it from there. Ask at the same time in SO, to see if you get something better out of thet (most times you do).

[10:11] <squashable6> 🍕 JJ++ labeled issue “Str.match not documented…”: https://github.com/perl6/doc/issues/919

[10:14] <squashable6> 🍕 JJ++ wrote a comment on “Create language/notable-design-decisions page”: https://github.com/perl6/doc/issues/1002#issuecomment-386868630

[10:14] <squashable6> 🍕 JJ++ labeled issue “Create language/notable-design-decisions page”: https://github.com/perl6/doc/issues/1002

[10:16] *** markong joined
[10:17] <squashable6> 🍕 JJ++ wrote a comment on “unival is in Str, not Int”: https://github.com/perl6/doc/issues/1045#issuecomment-386868804

[10:18] <squashable6> 🍕 JJ++ labeled issue “unival is in Str, not Int”: https://github.com/perl6/doc/issues/1045

[10:19] <squashable6> 🍕 JJ++ wrote a comment on “"References"/"Dereferenc…”: https://github.com/perl6/doc/issues/1081#issuecomment-386868895

[10:19] <squashable6> 🍕 JJ++ labeled issue “"References"/"Dereferenc…”: https://github.com/perl6/doc/issues/1081

[10:22] <mryan_> jmerelo: I can’t look at this any more now, so I’ve posted what I’ve done here: https://gist.github.com/mryan/dc8c890de862876abc4f87f55d974070

[10:22] <mryan_> It’s half done… I’ll finish it and post to SO tomorrow.

[10:23] <squashable6> 🍕 JJ++ wrote a comment on “Pointer.deref method is not documented”: https://github.com/perl6/doc/issues/1007#issuecomment-386869054

[10:23] <squashable6> 🍕 JJ++ labeled issue “Pointer.deref method is not documented”: https://github.com/perl6/doc/issues/1007

[10:23] <squashable6> 🍕 JJ++ edited issue “Pointer.deref method is not searchable”: https://github.com/perl6/doc/issues/1007

[10:23] <mryan_> The more imporant thing, IMO, is whether this feature can be used without stuffing around with cursor_start_cur and friends...

[10:24] <jmerelo> mryan_: thanks

[10:24] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Create language/notable-design-decisions page”: https://github.com/perl6/doc/issues/1002#issuecomment-386869141

[10:25] *** mryan_ left
[10:26] <squashable6> 🍕 JJ++ labeled issue “Create language/notable-design-decisions page”: https://github.com/perl6/doc/issues/1002

[10:26] <squashable6> 🍕 JJ++ wrote a comment on “Create language/notable-design-decisions page”: https://github.com/perl6/doc/issues/1002#issuecomment-386869245

[10:27] <squashable6> 🍕 JJ++ wrote a comment on “Document `/<foo ...>/` syntax somewhere”: https://github.com/perl6/doc/issues/1858#issuecomment-386869291

[10:28] <Geth> ¦ doc: 387bf275a1 | (JJ Merelo)++ | doc/Language/nativecall.pod6

[10:28] <Geth> ¦ doc: Indexes deref

[10:28] <Geth> ¦ doc: 

[10:28] <Geth> ¦ doc: Minor typographic changes to the page too. Closes #1007

[10:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/387bf275a1

[10:28] <synopsebot> Link: https://doc.perl6.org/language/nativecall

[10:29] <squashable6> 🍕 JJ++ closed issue “Pointer.deref method is not searchable”: https://github.com/perl6/doc/issues/1007

[10:29] *** araraloren_ joined
[10:30] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Document `/<foo ...>/` syntax somewhere”: https://github.com/perl6/doc/issues/1858#issuecomment-386869412

[10:32] *** araraloren left
[10:33] *** cog_ joined
[10:34] <AlexDaniel> jmerelo: hey, what's up with D#503

[10:34] <synopsebot> D#503 [closed]: https://github.com/perl6/doc/issues/503 [JJ TPF Grant][docs] Kernel, Distro, VM, Perl, Systemic and Compiler object types not documented

[10:34] <AlexDaniel> jmerelo: there was NOTSPECCED label but you removed it?

[10:35] <AlexDaniel> jmerelo: systemic is still not specced as far as I can see

[10:36] *** aborazmeh left
[10:37] *** scott left
[10:38] *** scott joined
[10:38] <squashable6> 🍕 AlexDaniel++ opened issue “Pages without ToC appear on the left side”: https://github.com/perl6/doc/issues/2000

[10:38] <squashable6> 🍕 AlexDaniel++ labeled issue “Pages without ToC appear on the left side”: https://github.com/perl6/doc/issues/2000

[10:38] <squashable6> 🍕 AlexDaniel++ edited issue “Content of pages without…”: https://github.com/perl6/doc/issues/2000

[10:40] <jmerelo> AlexDaniel: probably. They are documented now. 

[10:40] <AlexDaniel> I see that they are documented…

[10:40] <jmerelo> AlexDaniel: right. That's why I removed that. In fact, $*PERL uses Compiler, and the rest use Systemic. They are in roast, too.

[10:42] <Geth> ¦ doc: 2621399320 | (JJ Merelo)++ | doc/Language/containers.pod6

[10:42] <Geth> ¦ doc: Adds flat ≭ |

[10:42] <Geth> ¦ doc: 

[10:42] <Geth> ¦ doc: Uses @zoffixznet examples, closes #892

[10:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2621399320

[10:42] <synopsebot> Link: https://doc.perl6.org/language/containers

[10:42] <squashable6> 🍕 JJ++ closed issue “Is flat another way to s…”: https://github.com/perl6/doc/issues/892

[10:44] <AlexDaniel> jmerelo: ok I see, I created https://github.com/perl6/roast/issues/424

[10:44] <jmerelo> AlexDaniel: thanks. Maybe for the next Squashathon...

[10:44] <AlexDaniel> roast squashathon, yes :)

[10:44] <AlexDaniel> we had two almost in a row actually

[10:45] <AlexDaniel> squashable6: status

[10:45] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈1 hour. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[10:45] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/6d9bdd26bfff7fff360f7d42e4279376

[10:46] <jmerelo> And I'm leaving now. Thanks everyone!

[10:46] <AlexDaniel> jmerelo: “an list” in your last commit

[10:46] <AlexDaniel> u: ≭

[10:46] <unicodable6> AlexDaniel, U+226D NOT EQUIVALENT TO [Sm] (≭)

[10:46] <AlexDaniel> :)

[10:47] * jmerelo goes off to enjoy the (for the time being) spring Sunday morning in Spain

[10:47] <AlexDaniel> OH YES, GO

[10:48] <AlexDaniel> I'm going to steal your 9000th commit :)

[10:48] <jmerelo> AlexDaniel: you do that :-). Enjoy!

[10:48] *** windyhouse joined
[10:49] <Geth> ¦ doc: 706581a400 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/containers.pod6

[10:49] <Geth> ¦ doc: “an list” → “a list”

[10:49] <Geth> ¦ doc: 

[10:49] <Geth> ¦ doc: The sentence can probably be rephrased to add even more clarity.

[10:49] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/706581a400

[10:49] <AlexDaniel> 9000 commits in the doc repo :)

[10:50] <brrt> yay

[10:58] *** cog_ left
[11:01] *** HaraldJoerg joined
[11:02] <AlexDaniel> unidump: a

[11:02] <unicodable6> AlexDaniel, https://gist.github.com/cb3d1e2de955e4e251c7bf8b84ca202a

[11:04] <AlexDaniel> samcv: you there?

[11:04] <AlexDaniel> samcv: I have a feeling that uniprop-str is totally broken

[11:04] <AlexDaniel> but I could be wrong

[11:06] <AlexDaniel> m: say uniprop ‘♹’, ‘na’

[11:06] <camelia> rakudo-moar ede507b73: OUTPUT: «RECYCLING SYMBOL FOR TYPE-7 PLASTICS␤»

[11:06] <AlexDaniel> m: say uniprop-str ‘♹’, ‘na’

[11:06] <camelia> rakudo-moar ede507b73: OUTPUT: «3.2␤»

[11:06] <AlexDaniel> 6c: say uniprop-str ‘♹’, ‘na’

[11:06] <committable6> AlexDaniel, https://gist.github.com/8827146af8ffdc5aeafa991edb0affd6

[11:06] <AlexDaniel> xD

[11:07] <AlexDaniel> none of these are right in my opinion :D

[11:07] *** windyhouse left
[11:08] *** ufobat_ joined
[11:08] <AlexDaniel> m: say uniprop-int ‘㊷’, ‘Numeric_Value’

[11:08] <camelia> rakudo-moar ede507b73: OUTPUT: «81␤»

[11:11] <AlexDaniel> m: say uniprop ‘㊷’, ‘Numeric_Value’

[11:11] <camelia> rakudo-moar ede507b73: OUTPUT: «42␤»

[11:11] <AlexDaniel> m: say uniprop-str ‘㊷’, ‘Numeric_Value’

[11:11] <camelia> rakudo-moar ede507b73: OUTPUT: «42.0␤»

[11:11] <AlexDaniel> uhm…

[11:11] <AlexDaniel> m: say WHAT uniprop ‘㊷’, ‘Numeric_Value’

[11:11] <AlexDaniel>  

[11:11] <camelia> rakudo-moar ede507b73: OUTPUT: «(Int)␤»

[11:12] <AlexDaniel> why is it 42.0 if that's an Int

[11:12] <AlexDaniel> .tell samcv please let me know if you need a ticket this: https://irclog.perlgeek.de/perl6/2018-05-06#i_16134827

[11:12] <yoleaux> AlexDaniel: I'll pass your message to samcv.

[11:16] <Geth> ¦ doc: 39241d1a9f | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/Cool.pod6

[11:16] <Geth> ¦ doc: Touch uniprop documentation

[11:16] <Geth> ¦ doc: 

[11:16] <synopsebot> Link: https://doc.perl6.org/type/Cool

[11:16] <Geth> ¦ doc: This was an attempt to fix #1045, but I realized that uniprop-int and

[11:16] <Geth> ¦ doc: uniprop-str don't return anything sensible¹ at this moment.

[11:16] <Geth> ¦ doc: 

[11:16] <Geth> ¦ doc: ¹ – https://irclog.perlgeek.de/perl6/2018-05-06#i_16134827

[11:16] <squashable6> 🍕 AlexDaniel++ closed issue “unival is in Str, not Int”: https://github.com/perl6/doc/issues/1045

[11:16] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/39241d1a9f

[11:16] <squashable6> 🍕 AlexDaniel++ reopened issue “unival is in Str, not Int”: https://github.com/perl6/doc/issues/1045

[11:17] <squashable6> 🍕 AlexDaniel++ wrote a comment on “unival is in Str, not Int”: https://github.com/perl6/doc/issues/1045#issuecomment-386871956

[11:26] <squashable6> 🍕 AlexDaniel++ opened issue “RHS (right hand side) sh…”: https://github.com/perl6/doc/issues/2001

[11:26] <squashable6> 🍕 AlexDaniel++ labeled issue “RHS (right hand side) sh…”: https://github.com/perl6/doc/issues/2001

[11:34] *** peteretep joined
[11:36] <squashable6> 🍕 JJ++ reopened issue “Intermitent problems with some builds”: https://github.com/perl6/doc/issues/1951

[11:36] <squashable6> 🍕 JJ++ wrote a comment on “Intermitent problems with some builds”: https://github.com/perl6/doc/issues/1951#issuecomment-386872979

[11:47] <Geth> ¦ doc: eb8f7f2480 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 14 files

[11:47] <Geth> ¦ doc: Ban “RHS” and “LHS” abbreviations

[11:47] <Geth> ¦ doc: 

[11:47] <Geth> ¦ doc: By removing them from words.pws and eliminating a few usages from the

[11:47] <Geth> ¦ doc: docs.

[11:47] <Geth> ¦ doc: 

[11:47] <Geth> ¦ doc: We're sometimes criticized for using lingo that is unfamiliar to

[11:47] <Geth> ¦ doc: beginners or those coming from other languages. While RHS and LHS are

[11:47] <Geth> ¦ doc: <…commit message has 8 more lines…>

[11:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/eb8f7f2480

[11:49] <squashable6> 🍕 JJ++ wrote a comment on “Intermitent problems with some builds”: https://github.com/perl6/doc/issues/1951#issuecomment-386873619

[11:51] <squashable6> 🍕 JJ++ wrote a comment on “Intermitent problems with some builds”: https://github.com/perl6/doc/issues/1951#issuecomment-386873733

[11:53] <squashable6> 🍕 JJ++ wrote a comment on commit eb8f7f248035: https://github.com/perl6/doc/commit/eb8f7f24803517db0539fe77a89fed2696b98966#commitcomment-28871910

[11:53] *** jmerelo left
[12:00] <Geth> ¦ doc: 5fd2b45654 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Type/Junction.pod6

[12:00] <Geth> ¦ doc: Add a note about Junctions on the RHS of ~~

[12:00] <Geth> ¦ doc: 

[12:00] <Geth> ¦ doc: Resolves #1343.

[12:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5fd2b45654

[12:00] <synopsebot> Link: https://doc.perl6.org/type/Junction

[12:00] *** zostay left
[12:00] <AlexDaniel> ah CRAP

[12:00] <AlexDaniel> 25 seconds too late :D

[12:00] *** zostay joined
[12:01] *** domidumont left
[12:01] *** squashable6 left
[12:02] *** squashable6 joined
[12:04] *** squashable6 left
[12:04] *** squashable6 joined
[12:04] *** ChanServ sets mode: +v squashable6

[12:04] <squashable6> 🍕 AlexDaniel++ closed issue “Junctions and ~~”: https://github.com/perl6/doc/issues/1343

[12:05] <AlexDaniel> >:)

[12:05] *** squashable6 left
[12:06] *** squashable6 joined
[12:06] *** ChanServ sets mode: +v squashable6

[12:06] *** nightfrog left
[12:08] <AlexDaniel> a question from https://github.com/perl6/doc/commit/eb8f7f24803517db0539fe77a89fed2696b98966#diff-a60da6191e148b605432f06269de00bfL160

[12:08] <AlexDaniel> right-hand-side, right-hand side, right hand side – what's the difference?

[12:08] *** nightfrog joined
[12:10] <AlexDaniel> squashable6: log 2018-05-05

[12:10] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/11966854630519253293585849bb5d91

[12:11] *** mcmillhj joined
[12:13] <MasterDuke> right-hand side

[12:14] <AlexDaniel> MasterDuke: always? In all cases?

[12:15] <MasterDuke> i think so

[12:15] <AlexDaniel> MasterDuke: what if it's used as a hyphenated adjective?

[12:15] *** Tison left
[12:16] <MasterDuke> example?

[12:21] *** Exodist left
[12:21] <AlexDaniel> MasterDuke: well… good point, I can't come up with anything meaningful

[12:21] <AlexDaniel> MasterDuke: right-hand-side value?

[12:21] <AlexDaniel> yea, that

[12:22] *** Exodist joined
[12:22] *** bouchert joined
[12:23] <MasterDuke> hm, not sure

[12:24] <Geth> ¦ doc: titsuki++ created pull request #2002: Improve MySQL installation process

[12:24] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2002

[12:24] <Geth> ¦ doc: d12bac41bf | (Itsuki Toyota)++ | doc/Language/nativecall.pod6

[12:24] <Geth> ¦ doc: Improve MySQL installation process

[12:24] <Geth> ¦ doc: 

[12:24] <Geth> ¦ doc: I fixed this section for several reasons:

[12:24] <Geth> ¦ doc: 

[12:24] <synopsebot> Link: https://doc.perl6.org/language/nativecall

[12:24] <Geth> ¦ doc: 1) The previous example could install the dynamic library but the DBIish example also requires MySQL server.

[12:24] <Geth> ¦ doc: 2) The MySQL APT Repository officially supports debian stretch (also it supports jessie and wheezy).

[12:24] <Geth> ¦ doc: 3) Even if an user use an older distribution, he/she can install the current version of MySQL easily.

[12:24] <Geth> ¦ doc: 

[12:24] <Geth> ¦ doc: (and sorry for my confusing suggestion: https://github.com/perl6/doc/issues/1993 )

[12:24] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d12bac41bf

[12:24] <Geth> ¦ doc: 3b7ec30b62 | (Itsuki Toyota)++ (committed using GitHub Web editor) | doc/Language/nativecall.pod6

[12:24] <Geth> ¦ doc: Merge pull request #2002 from titsuki/fix-mysql

[12:24] <Geth> ¦ doc: 

[12:24] <Geth> ¦ doc: Improve MySQL installation process

[12:24] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3b7ec30b62

[12:25] *** boucher left
[12:27] <mcmillhj> What section of the docs would I look at to learn about how to compare objects for equality? I don't see anything linked on the Object-Orientation or Objects and Classes pages

[12:29] <AlexDaniel> mcmillhj: I think what you need is https://docs.perl6.org/language/operators#infix_===

[12:29] <Geth> ¦ doc: titsuki++ created pull request #2003: Fix typo

[12:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2003

[12:29] <AlexDaniel> mcmillhj: or maybe even just ~~ depending on what you need exactly

[12:29] <Geth> ¦ doc: 1e24281d31 | (Itsuki Toyota)++ | doc/Language/nativecall.pod6

[12:29] <Geth> ¦ doc: Fix typo

[12:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1e24281d31

[12:29] <Geth> ¦ doc: 432b29495c | (Itsuki Toyota)++ (committed using GitHub Web editor) | doc/Language/nativecall.pod6

[12:29] <Geth> ¦ doc: Merge pull request #2003 from titsuki/fix-typo

[12:29] <Geth> ¦ doc: 

[12:29] <Geth> ¦ doc: Fix typo

[12:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/432b29495c

[12:30] <AlexDaniel> mcmillhj: can you submit a doc ticket for that? (or maybe fix it directly)

[12:30] <AlexDaniel> mcmillhj: so that the docs on Object-Orientation and Objects and Classes pages link to === or ~~ or .ACCEPTS

[12:30] <AlexDaniel> or .WHICH

[12:33] <MasterDuke> why do some code examples in the doc Pod use `=for code` and others use `=begin code`?

[12:34] *** brrt left
[12:36] <mcmillhj> AlexDaniel: yeah, I can do that.

[12:37] *** AlexDaniel left
[12:39] *** mcmillhj left
[12:42] *** BenGoldberg joined
[12:54] *** windyhouse joined
[13:09] <AlexDaniel`> mcmillhj: thanks

[13:09] <AlexDaniel`> MasterDuke: I think =for code needs no =end

[13:09] <AlexDaniel`> so it's probably suitable for small examples

[13:12] <AlexDaniel`> more than half an hour without electricity, have to use relatively slow mobile internet instead #firstworldproblems

[13:38] *** shinobi-cl joined
[13:47] <buggable> New CPAN upload: IO-Socket-Async-SSL-0.7.0.tar.gz by JNTHN http://modules.perl6.org/dist/IO::Socket::Async::SSL:cpan:JNTHN

[13:48] <jnthn> Now with upgrade support, for anybody who fancies implementing IMAP/POP/SMTP clients with StartTLS support :P

[13:51] *** AlexDaniel joined
[13:53] <AlexDaniel> weekly: another successful squashathon: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[13:53] <notable6> AlexDaniel, Noted!

[13:53] <AlexDaniel> weekly: 9000 commits in the doc repo: https://github.com/perl6/doc/

[13:53] <notable6> AlexDaniel, Noted!

[13:55] *** raynold left
[14:04] <El_Che> someone on the channel talked about repeatable builds for perl6 and how go couldn't do it. They can now (or soon): https://engineers.sg/episodes/2603

[14:10] *** HaraldJoerg1 joined
[14:11] *** HaraldJoerg left
[14:22] <Geth> ¦ doc: 7a2e391e5f | (Itsuki Toyota)++ | doc/Language/nativecall.pod6

[14:22] <Geth> ¦ doc: Add a link of the example for MySQL

[14:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7a2e391e5f

[14:22] <synopsebot> Link: https://doc.perl6.org/language/nativecall

[14:43] *** bwisti joined
[14:54] *** khw joined
[15:17] *** sftp left
[15:17] *** sftp joined
[15:18] *** domidumont joined
[15:29] *** Gothmog_ joined
[15:29] *** imcsk8_ joined
[15:30] *** MilkmanDan left
[15:31] *** MilkmanDan joined
[15:32] *** imcsk8 left
[15:36] *** SmokeMachine joined
[15:48] *** araraloren_ left
[15:53] *** jmerelo joined
[15:55] *** mithaldu_ left
[15:55] *** mithaldu_ joined
[15:55] *** eliasr left
[15:56] *** eliasr joined
[16:06] *** BuildTheRobots left
[16:07] <buggable> New CPAN upload: P5chop-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5chop:cpan:ELIZABETH

[16:07] *** BuildTheRobots joined
[16:13] *** skids joined
[16:17] <buggable> New CPAN upload: P5oct-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5oct:cpan:ELIZABETH

[16:17] <buggable> New CPAN upload: P5ord-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5ord:cpan:ELIZABETH

[16:17] <buggable> New CPAN upload: P5ord-0.0.5.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5ord:cpan:ELIZABETH

[16:26] *** ExtraCrispy left
[16:27] <buggable> New CPAN upload: P5rindex-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5rindex:cpan:ELIZABETH

[16:28] *** kipd joined
[16:30] *** telex left
[16:33] *** telex joined
[16:37] <buggable> New CPAN upload: P5uc-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5uc:cpan:ELIZABETH

[16:37] <buggable> New CPAN upload: P5ucfirst-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5ucfirst:cpan:ELIZABETH

[16:43] *** olinkl left
[16:44] *** olinkl joined
[16:51] <jmerelo> A little help with this... directly asked in Stackoverflow https://stackoverflow.com/questions/50201995/what-does-duckmap-really-do

[16:54] *** Gothmog_ left
[16:54] *** Petit_Dejeuner left
[16:59] <Juerd> lizmat: Why are those p5 functions all in separate modules instead of one slightly bigger p5func?

[17:00] <lizmat> there is also a P5builtins

[17:00] <lizmat> that gives you all

[17:01] <Juerd> Still curious though :)

[17:01] <lizmat> why ?

[17:01] <Juerd> It seems like a lot of work, both for you and for the user. I'm sure there's a good reason for it but I couldn't think of one myself.

[17:01] <lizmat> some people might just want to use localtime() in their Perl 6 code

[17:02] <El_Che> maoschists

[17:02] <El_Che> :)

[17:02] <El_Che> s

[17:02] <Juerd> Sure, but usually in Perl 6 everything is available even if you want to use only one function, so it seems to deviate from that :)

[17:02] <lizmat> well, then `use P5builtins :all`

[17:02] <Juerd> But my question is answered; thanks :)

[17:02] <timotimo> m: my $list = [[1, 2, 3], [[4, 5], 6, 7]]; say $list.duckmap(-> $_ { if $list.elems == 2 { $list.Str } });

[17:02] <camelia> rakudo-moar ede507b73: OUTPUT: «[1 2 3 4 5 6 7 1 2 3 4 5 6 7]␤»

[17:03] <timotimo> m: my $list = [[1, 2, 3], [[4, 5], 6, 7]]; say $list.duckmap(-> $_ { if $list.elems == 2 { $list.Str } }).perl;

[17:03] <camelia> rakudo-moar ede507b73: OUTPUT: «["1 2 3 4 5 6 7", "1 2 3 4 5 6 7"]␤»

[17:03] <lizmat> Juerd: thanks for asking :-)

[17:04] *** iviv left
[17:04] *** iviv joined
[17:04] <jmerelo> timotimo: even more confused now

[17:04] <jmerelo>  m: my $list = [[1, 2, 3], [[4, 5], 6, 7]]; say $list.duckmap(-> $_ { if $_.elems == 2 { $_.Str } });

[17:04] <camelia> rakudo-moar ede507b73: OUTPUT: «[]␤»

[17:05] *** Ben_Goldberg joined
[17:05] *** BenGoldberg left
[17:05] *** Ben_Goldberg is now known as BenGoldberg

[17:05] <timotimo> m: my $list = [[1, 2, 3], [[4, 5], 6, 7]]; say $list.duckmap(-> $_ { if $list.elems == 2 { $list.Str } else { Any } }).perl;

[17:05] <camelia> rakudo-moar ede507b73: OUTPUT: «["1 2 3 4 5 6 7", "1 2 3 4 5 6 7"]␤»

[17:05] <jmerelo>  m: my $list = [[1, 2, 3], [[4, 5], 6, 7]]; say $list.duckmap( *.Str );

[17:05] <camelia> rakudo-moar ede507b73: OUTPUT: «[1 2 3 4 5 6 7]␤»

[17:05] <timotimo> oh, lol

[17:05] <timotimo> m: my $list = [[1, 2, 3], [[4, 5], 6, 7]]; say $list.duckmap(-> $_ { if $_.elems == 2 { $_.Str } else { Any } }).perl;

[17:05] <camelia> rakudo-moar ede507b73: OUTPUT: «[Any, Any]␤»

[17:05] <jmerelo>  m: my $list = [[1, 2, 3], [[4, 5], 6, 7]]; say $list.deepmap( *.Str );

[17:05] <camelia> rakudo-moar ede507b73: OUTPUT: «[[1 2 3] [[4 5] 6 7]]␤»

[17:05] <timotimo> m: my $list = [[1, 2, 3], [[4, 5], 6, 7]]; say $list.duckmap(-> $_ { if $_.elems == 2 { $_.Str } }).perl;

[17:05] <camelia> rakudo-moar ede507b73: OUTPUT: «[]␤»

[17:06] <timotimo> yeah i don't really know how duckmap.

[17:07] <jmerelo> timotimo: thanks for trying, anyway.

[17:09] <timotimo> m: my $list = [[1, 2, 3], [[4, 5], 6, 7]]; say $list.duckmap(-> $_ { if $_.elems == 2 { $_.Str } else { die "oh no" } }).perl;

[17:09] <camelia> rakudo-moar ede507b73: OUTPUT: «[[1, 2, 3], ["4 5", 6, 7]]␤»

[17:09] <timotimo> jmerelo: it's not about undefined return values, it's about exceptions being thrown

[17:10] <jmerelo> timotimo: sorry, you lost me here

[17:10] *** lizmat left
[17:10] <timotimo> if the mapping function throws an exception, it'll descend into the argument if it's Iterable:D, otherwise it returns the original argument. if the mapping function returns a value, that value is used

[17:11] <Juerd> m: say (Any, Str, Int).duckmap(-> $x { $x })

[17:11] <camelia> rakudo-moar 39227d545: OUTPUT: «((Any) (Str) (Int))␤»

[17:12] <jmerelo> timotimo: so duckmap is throwing the "oh no" exception if the number of elements is not equal to 2, in which case it's going a bit deeper

[17:12] <timotimo> no, duckmap is catching the exception

[17:12] <jmerelo> m: my $list = [[1, [2, 3]], [[4, 5], 6, 7]]; say $list.duckmap(-> $_ { if $_.elems == 2 { $_.Str } else { die "oh no" } }).perl

[17:12] <camelia> rakudo-moar 39227d545: OUTPUT: «["1 2 3", ["4 5", 6, 7]]␤»

[17:12] <Juerd> Interesting hack.

[17:12] <jmerelo> timotimo: right, the block is throwing the exception, duckmap catching it.

[17:13] *** lizmat joined
[17:13] <timotimo> m: my $list = [[1, [2, 3]], [[4, 5], 6, 7]]; say $list.duckmap(-> $_ { if $_.elems == 2 { $_.perl } else { die "oh no" } }).perl

[17:13] <camelia> rakudo-moar 39227d545: OUTPUT: «["\$[1, [2, 3]]", ["\$[4, 5]", 6, 7]]␤»

[17:13] <timotimo> ah

[17:13] <timotimo> here's the reason why this is useful:

[17:13] <jmerelo>  m: my $list = [[1, [2, 3]], [[4, 5], 6, 7]]; say $list.duckmap(-> $_ { if $_.elems == 2 { $_.perl } }).perl

[17:13] <camelia> rakudo-moar 39227d545: OUTPUT: «["\$[1, [2, 3]]"]␤»

[17:14] <jmerelo> timotimo: no throw, no descent

[17:14] <timotimo> m: my $list = [[1, 2, [1e9, 2e9]]]; say $list.duckmap(-> Int $foo { $foo + 1 }).perl

[17:14] <camelia> rakudo-moar 39227d545: OUTPUT: «[2, 3, [1000000000e0, 2000000000e0]]␤»

[17:14] <timotimo> you give it a function that only wants to handle Int, which means duckmap will leave everything else alone

[17:15] <jmerelo> timotimo: that explains the "duck". It only works if it walks like a duck...

[17:15] <jmerelo> timotimo: thanks!

[17:16] <timotimo> aye

[17:16] <timotimo> YW :)

[17:16] <timotimo> i helped two people today, that's good

[17:17] <jmerelo> timotimo: :-) Don't finish the day without helping the third one :-)

[17:18] *** skaji joined
[17:20] *** windyhouse left
[17:20] *** windyhouse joined
[17:28] <El_Che> jmerelo: sent an issue your way :)

[17:32] <jmerelo> El_Che: got it. Will check it out.

[17:32] <El_Che> just cleaned it up a little

[17:32] <El_Che> refresh

[17:33] *** ufobat_ left
[17:34] <jmerelo> 6 issues in 6 hours. I think that's a record...

[17:35] <Geth> ¦ doc: JJ self-assigned links-not-links test, false positive? https://github.com/perl6/doc/issues/2006

[17:35] <El_Che> jmerelo: how long does your grant last?

[17:36] <jmerelo> El_Che: I'm halfway through it. I would say that I officially started on April 1st and will end by May 31st

[17:37] <jmerelo> El_Che: that does not mean that I'm going to quit, though... will keep doing more stuff, although more slowly, I guess.

[17:37] <jmerelo> El_Che: I'm going on a research stage in June, and to Japan for a conference in July, as well as devoting some time to domestic issues. So I can't really devote so much time.

[17:40] <El_Che> of course, that stuff is dependent of other duties

[17:53] *** lancew joined
[18:17] *** jmerelo left
[18:18] *** lancew left
[18:27] <buggable> New CPAN upload: P5getpriority-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5getpriority-0.0.1.tar.gz

[18:38] <Geth> ¦ doc: 453d6bed44 | (Elizabeth Mattijsen)++ | doc/Language/5to6-perlfunc.pod6

[18:38] <Geth> ¦ doc: Update for existsence of P5getpriority

[18:38] <Geth> ¦ doc: 

[18:38] <Geth> ¦ doc: - add description for getppid

[18:38] <Geth> ¦ doc: - mention P5getpriority for getpriority / setpriority / getpgrp

[18:38] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlfunc

[18:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/453d6bed44

[18:49] *** domidumont left
[19:01] <El_Che> that gal has her priorities right :)

[19:11] <Geth> ¦ doc: d7108f2c08 | (Elizabeth Mattijsen)++ | doc/Language/5to6-perlfunc.pod6

[19:11] <Geth> ¦ doc: Update setpgrp documentation

[19:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d7108f2c08

[19:11] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlfunc

[19:17] <buggable> New CPAN upload: P5getpriority-0.0.2.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5getpriority-0.0.2.tar.gz

[19:20] *** raynold joined
[19:20] <tyil> there's no "Staging" area for cpan to test modules that try to upload to cpan, is there?

[19:22] *** darutoko left
[19:23] <El_Che> tyil: use github as your staging?

[19:24] <tyil> but I want to test uploading to cpan (which is something my module does, and I'm rewriting it to use CPAN::Uploader::Tiny instead of my own code

[19:24] <tyil> )

[19:25] <El_Che> ah, meta problem :)

[19:29] *** Rhow joined
[19:32] <tyil> I was considering to just make a module called MyPersonalTestModuleDoNotUse and just use that for testing, and removing them once I am done with my testing

[19:33] <tyil> but if there's a cleaner way to go about it, I would be interested

[19:41] *** lancew joined
[19:43] *** |oLa| left
[19:47] <Geth> ¦ doc: 2b9d4500f8 | (Samantha McVey)++ | doc/Type/IO/Handle.pod6

[19:47] <Geth> ¦ doc: Add documentation for windows-932 (shiftjis)

[19:47] <Geth> ¦ doc: 

[19:47] <synopsebot> Link: https://doc.perl6.org/type/IO::Handle

[19:47] <Geth> ¦ doc: Also make some other encodings searchable.

[19:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2b9d4500f8

[19:50] *** Rhow left
[19:54] *** molaf left
[19:58] *** Kaiepi left
[19:58] *** Kaiepi joined
[20:00] *** Ben_Goldberg joined
[20:01] *** BenGoldberg left
[20:01] *** Ben_Goldberg is now known as BenGoldberg

[20:01] *** comborico1611 joined
[20:03] *** windyhouse left
[20:10] <zostay> When doing NativeCall, is there a way to handle structs returned by value? Or do I just need to write some C shims to handle it?

[20:12] <zostay> i.e. equivalent to: struct FOO { int x, y }; FOO foo = foo_init();

[20:13] <zostay> I'm writing some native calls for Allegro and al_map_* functions for working with colors do this: http://liballeg.org/a5docs/trunk/graphics.html#al_map_rgb

[20:14] *** shinobi-cl left
[20:28] *** mcmillhj joined
[20:36] *** uzl joined
[20:38] *** robertle left
[20:46] <uzl> sub postfix:<!>(Int $x where { $x >= 0 }) { [*] 1..$x };

[20:46] <uzl> Do the curly braces around the condition ( $x >= 0 ) do something special?

[20:47] <uzl> I know the defined operator works with or without the curly braces around the condition but are they doing something extra behind the scene?

[20:47] <moritz> they introduce a code block, which is the most general form to write a subset constraint

[20:47] <moritz> but you could also write it as

[20:47] <moritz> m: subset NonNeg of Int where * >= 0;

[20:47] <camelia> rakudo-moar f14dc6bdd: ( no output )

[20:47] <moritz> m: subset NonNeg of Int where * >= 0; say $_ ~~ NonNeg for -1, 0, 1

[20:47] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «False␤True␤True␤»

[20:51] <lizmat> zostay: is https://docs.perl6.org/language/nativecall#index-entry-CStruct_%28native_representation%29 what you need?

[20:51] *** dwarring left
[20:56] *** uzl left
[20:56] *** uzl_ joined
[20:58] <MasterDuke> uzl: i'm couldn't explain exactly which and why, but some things you can do by leaving off the braces and using a * instead (like moritz's example). however, some need the braces

[20:58] <zostay> lizmat: Sorry, but no. That shows CStruct being passed by reference, but I need to see a way to return a CStruct by value... i.e., a return causing a memory copy.

[20:59] <zostay> I can write a shim in C that performs a memcpy or something myself. I was just wondering if someone knew of a way to do that with NativeCall.

[20:59] <zostay> I don't think any such thing is in the docs.

[20:59] <cono> uzl: MasterDuke difference is that {} <- is a Block and * >= 0, will create a WhateverCode instance.

[20:59] <zostay> I'll write the docs if someone knows of it.

[21:00] <lizmat> zostay: perhaps a syntax could be (--> TheStruct is copy) ?

[21:00] *** uzl_ is now known as uzl

[21:00] <lizmat> ah, no, we would have to change the Perl 6 grammar to support that

[21:00] <cono> so this -> $a, $b { $a cmp $b } <- is a Block wich takes 2 arguments and returns Order enum as a result. * cmp * also returns Order and takes 2 arguments, but its an instance of WhateverCode

[21:01] <MasterDuke> m: sub f(@a where *.all ~~ Int) { dd @a }; f((1,2))

[21:01] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «Constraint type check failed in binding to parameter '@a'; expected anonymous constraint to be met but got List ($(1, 2))␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[21:01] <MasterDuke> m: sub f(@a where {.all ~~ Int}) { dd @a }; f((1,2))

[21:01] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «(1, 2)␤»

[21:01] *** molaf joined
[21:02] <MasterDuke> m: sub f(@a where *.all ~~ Int) { dd @a }; f((1,"a"))

[21:02] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «Constraint type check failed in binding to parameter '@a'; expected anonymous constraint to be met but got List ($(1, "a"))␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[21:02] <MasterDuke> m: sub f(@a where {.all ~~ Int}) { dd @a }; f((1,"a"))

[21:02] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «Constraint type check failed in binding to parameter '@a'; expected anonymous constraint to be met but got List ($(1, "a"))␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[21:02] <cono> uzl: this graph illustrates Block and WhateverCode and their parent: https://docs.perl6.org/type/Code#Type_Graph

[21:03] *** windyhouse joined
[21:04] <MasterDuke> those are an example where braces (i.e., a Block, as cono++ explained) are needed, but i can't explain why the WhateverCode doesn't work

[21:04] <uzl> Thanks to all!!! (sorry, I still do not how to mention particular users in irc)

[21:04] <uzl> I'll take a look at the graph.

[21:05] <skids> lizmat: No, zostay is referring to things like function f () { struct timeval f; ... return f } where a struct is pushed directly to the stack with no pointer indirection. Last time I looked for that is was not supported by NativeCall, not for returns nor for params.

[21:05] <lizmat> skids: but isn't that just the matter of needing a wrapper function ?

[21:06] <skids> The wrapper functions would need to be in C, but yes.

[21:06] <lizmat> ah, no, I see what you mean, 

[21:06] <lizmat> i was thinking a wrapper in perl 6 

[21:06] <lizmat> yeah, see the problem now

[21:06] <lizmat> is there an issue for it yet ?

[21:07] <skids> Not sure, but it's been intentionally NYI due to it messing with calling conventions I think.  I forget where I read that though.

[21:08] *** dataangel joined
[21:09] <skids> General industry attitude has been libraries should not don't do that in API functions these days.

[21:09] <mcmillhj> What is the idiomatic way to iterate over a list or array if I want to start at a specific index i.e. 1? 

[21:10] <mcmillhj> I don't see a traditional for-loop listed in the control flow docs

[21:10] <MasterDuke> mcmillhj: it's called loop()

[21:10] <skids> for list.tail(something) might be more idiomatic.

[21:10] <mcmillhj> MasterDuke: oooh, thank you. I didn't think to look there I thought that was for a different purpose

[21:11] <MasterDuke> or .skip

[21:12] *** windyhouse left
[21:12] *** windyhouse joined
[21:13] <cono> m: my @a = <a b c>; @a[1..*].say

[21:13] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «(b c)␤»

[21:13] <cono> or use whatever :D

[21:13] *** dataange` joined
[21:13] *** dataangel left
[21:13] *** molaf left
[21:16] <mcmillhj> Both the whatever and tail() versions look pretty clean: @prices[1..*] vs @prices.tail(* - 1)

[21:18] *** lancew left
[21:18] *** huf left
[21:19] *** lancew_ joined
[21:19] *** quotable6 left
[21:19] *** dataange` left
[21:19] *** huf_ joined
[21:19] *** quotable6 joined
[21:19] *** dataangel joined
[21:19] <MasterDuke> fwiw, .skip is probably a bit faster if it's possible to use it

[21:20] <MasterDuke> but, TMTOWTDI

[21:20] <skids> .skip would definitely be better if the length is not known (e.g. a Seq)

[21:21] <skids> Probably the best choice overall.

[21:23] *** lancew_ left
[21:37] <comborico1611> Why does this return false? so 'abcdefghijklmnopqrstuvwxyz'~~ rx {a..z}

[21:37] <yoleaux> 5 May 2018 12:34Z <hankache> comborico1611: I am really happy that perl6intro.com was of use to you. Thank you for your feedback :)

[21:38] <timotimo> comborico1611: that's a pattern that will match a11z or abcz or aXXz or something like that

[21:39] <comborico1611> Hmm.

[21:39] <timotimo> you were looking to match exactly the letters a through z in a row?

[21:39] <comborico1611> Yes.

[21:39] <timotimo> m: say so "abcdefghijklmnopqrstuvwxyz" eq ("a".."z").join()

[21:39] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «True␤»

[21:39] <comborico1611> Ahh.  Thanks!

[21:45] *** ilbot3 left
[21:46] *** ambs left
[21:46] *** cibs left
[21:46] *** cxreg left
[21:47] *** cxreg joined
[21:48] *** khw left
[21:48] *** ilbelkyr_ joined
[21:49] *** ilbelkyr left
[21:49] *** ilbelkyr_ is now known as ilbelkyr

[21:51] *** HaraldJoerg1 left
[21:53] *** quotable6 left
[21:53] *** nightfrog left
[21:53] *** yoleaux left
[21:53] *** awwaiid left
[21:53] *** kst` left
[21:53] *** nebuchadnezzar left
[21:53] *** lichtkind left
[21:53] *** ryn1x left
[21:53] *** syntaxman left
[21:53] *** speedChicken left
[21:53] *** statisfiable6 left
[21:53] *** greppable6 left
[21:53] *** nativecallable6 left
[21:53] *** committable6 left
[21:53] *** undersightable6 left
[21:53] *** unicodable6 left
[21:53] *** lucs left
[21:53] *** APic left
[21:53] *** lookatme left
[21:53] *** giraffe left
[21:53] *** KotH left
[21:53] *** simcop2387 left
[21:53] *** perlbot left
[21:53] *** ttkp6 left
[21:53] *** profan left
[21:54] *** ambs_ joined
[21:54] *** quotable6 joined
[21:54] *** nightfrog joined
[21:54] *** awwaiid joined
[21:54] *** kst` joined
[21:54] *** nebuchadnezzar joined
[21:54] *** lichtkind joined
[21:54] *** ryn1x joined
[21:54] *** syntaxman joined
[21:54] *** speedChicken joined
[21:54] *** undersightable6 joined
[21:54] *** committable6 joined
[21:54] *** greppable6 joined
[21:54] *** statisfiable6 joined
[21:54] *** unicodable6 joined
[21:54] *** lucs joined
[21:54] *** lookatme joined
[21:54] *** KotH joined
[21:54] *** simcop2387 joined
[21:54] *** perlbot joined
[21:54] *** profan joined
[21:54] <cono> m: say so "abcdefghijklmnopqrstuvwxyz" ~~ rx{<[a..z]>+}

[21:54] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «True␤»

[21:54] *** mcmillhj left
[21:54] *** nightfrog left
[21:54] *** cibs joined
[21:55] *** nightfrog joined
[21:55] *** bouchert left
[21:56] *** lancew_ joined
[21:56] *** giraffe joined
[21:56] *** bouchert joined
[21:56] *** giraffe is now known as Guest43927

[21:57] <buggable> New CPAN upload: P5rand-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5rand-0.0.1.tar.gz

[21:57] *** lancew_ left
[21:57] <timotimo> m: say so "aaaabbbbddddccccxxxxwwwwyyyyzzzz" ~~ rx{<[a..z]>+}

[21:57] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «True␤»

[21:59] *** imcsk8 joined
[21:59] *** ilbot3 joined
[21:59] *** ChanServ sets mode: +v ilbot3

[21:59] *** kybr left
[22:00] *** APic joined
[22:00] *** Phil21 left
[22:00] *** KotH_ joined
[22:00] *** kybr joined
[22:00] *** quotable6 left
[22:00] *** committable6 left
[22:00] *** undersightable6 left
[22:00] *** statisfiable6 left
[22:00] *** greppable6 left
[22:00] *** unicodable6 left
[22:01] *** KotH left
[22:01] *** imcsk8_ left
[22:02] *** Phil21 joined
[22:03] *** espadrine left
[22:11] *** rindolf left
[22:12] *** shinobi-cl joined
[22:15] *** imcsk8 left
[22:19] *** imcsk8 joined
[22:19] *** wamba left
[22:23] *** imcsk8_ joined
[22:24] *** uzl left
[22:24] *** KotH_ is now known as Koth

[22:25] *** Koth is now known as KotH

[22:25] *** imcsk8 left
[22:25] *** BenGoldberg left
[22:29] *** imcsk8 joined
[22:31] *** imcsk8_ left
[22:50] <b2gills> m: say so 'abcdefghijklmnopqrstuvwxyz'~~ rx {"{('a'..'d').join}"}

[22:50] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «True␤»

[22:53] *** committable6 joined
[22:53] *** unicodable6 joined
[22:54] *** undersightable6 joined
[22:59] <comborico1611> Hmm

[23:07] *** epony joined
[23:17] *** imcsk8 left
[23:18] *** imcsk8 joined
[23:19] <lichtkind> i get Math::Matrix  is insufficiently type-like to qualify a parameter

[23:19] <lichtkind> why is that?

[23:19] <lichtkind> inside its won module this worked

[23:19] <lichtkind> why not outside?

[23:20] <lichtkind> or in other words what makes a package type like?

[23:20] <timotimo> can you say the .HOW?

[23:21] <timotimo> m: say Foo::Bar::Baz.HOW

[23:21] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «Could not find symbol '&Baz'␤  in block <unit> at <tmp> line 1␤␤»

[23:21] <timotimo> well, fair enough

[23:21] <timotimo> m: try require Foo::Bar <Baz>; Foo::Bar::Baz.HOW

[23:21] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «Could not find symbol '&Baz'␤  in block <unit> at <tmp> line 1␤␤»

[23:21] <timotimo> *shrug*

[23:26] <lichtkind> .HOW return to me: Perl6::Metamodel::ClassHOW+{AttrX::Lazy::LazyAttributeContainerHOW}.new

[23:26] <timotimo> is that output from the same file you're trying to use it as a parameter type in?

[23:28] <lichtkind> no Math::Matrix is in different file

[23:28] <timotimo> well, outputting it in that file isn't very interesting

[23:28] <lichtkind> it was weird i could not even use a sub from the Math::matrix even it was loaded

[23:29] <timotimo> well, that sounds like your problem starts much earlier than the error you're getting

[23:29] <timotimo> is the code on line so i can try it?

[23:29] <lichtkind> i dont want upload broken code into github

[23:30] <timotimo> i'd accept a tarball or zipfile too

[23:31] <lichtkind> allright i have to churn  some simple prototype to test what im tryin

[23:31] <lichtkind> timotimo, thanks but you dont have to bother its a decent chunk of code

[23:31] <timotimo> can you tell me how you're pulling the module in? and is it in your META6.json's provides section?

[23:32] <lichtkind> yes maybe there is a better way

[23:32] <lichtkind> main idea is the module gets longer and longer and i wanted put some methods in its own file

[23:33] <lichtkind> and this class is now attribute of main class holding the parent as reference

[23:33] <timotimo> i meant more like "do you use a 'use' statement or 'require" or something?"

[23:33] <timotimo> the error message you've pasted suggests to me that you're not getting what you're expecting from the import

[23:33] <lichtkind> the parent uses the ::decomposition class

[23:34] <b2gills> the way to split up methods into more than one file is to put them into roles, and compose them in

[23:34] <timotimo> that's why i asked you to post the .HOW, to see what you get from importing

[23:34] <lichtkind> so you tell me that i can not even call sub under its full namen when its not exported?

[23:35] <b2gills> The default for subs is `my` not `our` like Perl5

[23:35] <lichtkind> b2gills, yes your right

[23:35] <timotimo> i don't think i've said anything about subs, or full names, or did you mean someone else?

[23:36] <lichtkind> maybe i misunderstood but it sounded you implied this but its now clearer 

[23:37] <lichtkind> i try to rewrite as role

[23:37] *** kaare_ joined
[23:37] *** mcmillhj joined
[23:40] <lichtkind> timotimo, thanks

[23:40] <timotimo> i still think your problem lies with the way you import it, something's going wrong there

[23:40] <timotimo> i was hoping you could get the .HOW of Math::Matrix in the file you've included it into, to see if it maybe shows up as a Package for example

[23:41] <timotimo> m: use Test; sub blah(Test $a) { }

[23:41] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Module Test is insufficiently type-like to qualify a parameter␤at <tmp>:1␤------> 3use Test; sub blah(Test7⏏5 $a) { }␤»

[23:41] <timotimo> m: use Test; sat Test.HOW

[23:41] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    sat used at line 1. Did you mean 'set', 'say'?␤␤»

[23:41] <timotimo> m: use Test; say Test.HOW

[23:41] <camelia> rakudo-moar f14dc6bdd: OUTPUT: «Perl6::Metamodel::ModuleHOW.new␤»

[23:41] *** w_richard_w joined
[23:41] <timotimo> it would look like that

[23:42] <b2gills> lichtkind: I think you have one or more mistaken assumptions, and I would prefer to find out what they are so that we can help people in the future that may have the same assumptions

[23:43] <b2gills> (Even Perl 6 “experts” sometimes have made assumptions that turn out to be incorrect)

[23:43] *** yoleaux joined
[23:43] *** ChanServ sets mode: +v yoleaux

[23:44] <lichtkind> b2gills, well my idea was: class A has class B as an attribute, and i though in class B i can use A as type

[23:44] <lichtkind> but i could not

[23:45] <timotimo> that sounds like a case of circular dependency, what do you have to break that? a stub somewhere?

[23:45] <lichtkind> i dont understand

[23:45] <lichtkind> i mean the stub thing

[23:45] <skids> Stubbed class name

[23:46] <timotimo> well, you can't "use A" in B.pm6 and have "use B" in A.pm6

[23:46] <lichtkind> this is what i found out

[23:47] <lichtkind> but i thought no problem its already loaded

[23:49] <lichtkind> thanks agoin but i think i have to learn more and some real bugs to fix first

[23:54] <b2gills> You would need a `class A {...}` added to the top of B.pm6

[23:56] *** mcmillhj left
