[00:01] *** Aaronepower left
[00:04] *** yqt left
[00:06] *** astj left
[00:06] *** astj joined
[00:07] *** pecastro joined
[00:11] *** astj left
[00:29] *** pecastro left
[00:58] *** a3r0 joined
[01:01] *** aindilis joined
[01:36] *** aborazmeh joined
[01:36] *** aborazmeh left
[01:36] *** aborazmeh joined
[01:45] *** dustinm` left
[01:49] *** dustinm` joined
[01:51] *** comborico1611 joined
[01:53] <comborico1611> Are you around?

[01:54] *** aborazmeh left
[01:58] <Herby_> always

[02:02] <comborico1611> Heh.

[02:02] <Herby_> well, maybe not always. gotta go back to work tomorrow after 2 weeks off

[02:02] <Herby_> ugh

[02:02] <comborico1611> I hate vacations for this very reason.

[02:03] <comborico1611> It's always such a drag to get back into the routine.

[02:03] <comborico1611> The same went for summer vacations, back in the day.

[02:03] <Herby_> only good thing is that I taught myself some basic SQL while off, so I get to try and apply it when I get back

[02:03] <comborico1611> It's so annoying and anxious to start the school year.

[02:04] <comborico1611> I started the MySQL chapter this week.  I got stuck at old PHP 5 working with newer stuff.

[02:05] <comborico1611> Something about mysql_connect( ) not being use anymore.  Now its some DOP weird acroynym.

[02:05] <comborico1611> Some crap.  It was frustrating.

[02:06] *** espadrine left
[02:10] <comborico1611> Is a operator-rich programming language like the counter to languages with frameworks?

[02:17] *** astj joined
[02:17] <comborico1611> I must get to bed now.  Night!

[02:17] *** comborico1611 left
[02:33] <AlexDaniel> ah, ha. Somebody got a better score on code golf by using the newest rakudo features. Awesome :D

[02:36] * AlexDaniel responds by doing even better

[02:38] *** flatwhite joined
[02:38] *** kerframil left
[02:38] *** flatwhite is now known as kerframil

[02:42] *** wamba left
[02:43] *** kerframil left
[02:45] *** ilbot3 left
[02:47] *** pilne left
[03:00] *** manchicken joined
[03:02] *** ilbot3 joined
[03:02] *** ChanServ sets mode: +v ilbot3

[03:38] *** manchicken left
[04:13] *** traxex left
[04:52] *** Cabanossi left
[04:53] *** Cabanossi joined
[04:57] *** khw left
[05:23] *** eliasr left
[05:28] *** Herby_ left
[05:31] *** Kaiepi left
[05:33] *** Kaiepi joined
[05:42] *** geekosaur left
[05:44] *** geekosaur joined
[06:08] *** astj left
[06:08] *** astj joined
[06:13] *** astj left
[06:48] *** piojo left
[07:00] *** xcm left
[07:01] *** xcm joined
[07:03] *** araraloren joined
[07:11] *** piojo joined
[07:16] *** darutoko joined
[07:37] *** lowbro joined
[07:37] *** lowbro left
[07:37] *** lowbro joined
[07:48] *** wamba joined
[07:50] *** shmibs left
[07:52] *** shmibs joined
[07:59] *** piojo left
[07:59] *** piojo joined
[08:00] *** domidumont joined
[08:06] *** domidumont left
[08:07] *** domidumont joined
[08:07] * lizmat clickbaits https://p6weekly.wordpress.com/2018/01/01/2018-01-perl-6-alerts/

[08:11] *** leont left
[08:20] *** rindolf joined
[08:27] *** leont_ joined
[08:29] *** zakharyas joined
[08:34] *** abraxxa joined
[08:45] *** sena_kun joined
[08:48] *** leont_ left
[08:49] *** parv joined
[08:50] <Geth> ¦ doc: gfldex++ created pull request #1727: show how to use Empty

[08:50] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1727

[09:00] *** abraxxa left
[09:05] *** scimon joined
[09:06] *** abraxxa joined
[09:15] *** shmibs left
[09:16] *** shmibs joined
[09:40] *** committable6 left
[09:40] *** committable6 joined
[09:52] *** Aceeri_ joined
[09:53] *** llfourn left
[09:56] *** llfourn joined
[10:00] *** domidumont left
[10:00] *** domidumont joined
[10:04] *** domidumont left
[10:04] *** domidumont joined
[10:17] *** Sgeo_ joined
[10:20] *** Sgeo left
[10:36] *** wamba left
[10:40] *** Ven` left
[10:45] *** Zoffix joined
[10:45] <Zoffix> Looks like someone accidentally forked a repo as `perl6` user instead of their own: https://github.com/perl6/awesome-speakers

[10:45] <scimon> Oooops

[10:52] <DrForr> Proof that we have some awesome speakers about Perl 6? :)

[10:53] <Zoffix> https://github.com/eiro did

[10:53] * Zoffix nukes it; just wanted to ping the author to ensure they get the fork they wanted

[10:54] <Zoffix> ah crap. It saw a commit while I was brushing my teeth

[10:54] <Zoffix> And I nuked it.

[10:55] <Zoffix> Well. I've done enough damage for the day.

[10:55] * Zoffix goes back to bed :)

[10:55] *** Zoffix left
[10:55] <El_Che> maybe you sleep-commit?

[10:55] <El_Che> too late :)

[11:02] *** Aaronepower joined
[11:27] <piojo> does .WHICH correspond to data addresses in memory?

[11:28] <piojo> I mean, real memory addresses?

[11:31] <jnthn> No

[11:31] <jnthn> Well, it may, sometimes

[11:31] <jnthn> .WHERE is what you're after if you want that

[11:31] <lizmat> piojo: note that the .WHERE of an object is *not* immutable

[11:32] <lizmat> s/immutable/constant

[11:32] <piojo> thanks

[11:32] <jnthn> That also, objects move during their lifetime

[11:32] <piojo> and I bet they move when types are merged

[11:33] <jnthn> It's all a matter of when GC runs

[11:36] <DrForr> Re: the nuking it accidentaly broke a tweet of @marcchantreux's: "most of the inspiring talks I saw was from the #perl community..." Just saying if you wanted to prod someone about the accidental nuking.

[11:44] *** dakkar joined
[11:47] <dakkar> hm. Should the results of IO::Path.dir have the same $CWD of the object the come from?

[11:50] <dakkar> IO::Path.new('foo/',:CWD('/bar/')).child('x') is the same as IO::Path.new('foo/x',:CWD('/bar/'))

[11:51] <dakkar> but IO::Path.new('foo/',:CWD('/bar/')).dir produces things like IO::Path.new('foo/x') *without* the CWD

[11:51] <dakkar> that feels sub-optimal

[11:56] *** jeromelanteri joined
[11:59] <dakkar> aargh. IO::Path method dir(… :$CWD=$*CWD …)

[11:59] <dakkar> shouldn't that be :$CWD=$!CWD ?

[12:01] * dakkar rakudobug

[12:02] *** Aceeri_ left
[12:06] *** xcm left
[12:07] <lizmat> new years resolution found on HN: https://news.ycombinator.com/item?id=16048290

[12:08] <DrForr> 2048x1920?

[12:08] *** xcm joined
[12:12] <ilmari> 3200x1800, same as last year :)

[12:13] <ilmari> DrForr: that's a very square ratio...

[12:13] <lizmat> fwiw, 2880 x 1800 + 2560 x 1080

[12:14] <ilmari> wife's new laptop is 1920x1080

[12:14] <DrForr> Yeah, but 1920x1280 or something like that seemed too boring and I don't know the new numbers with the advent of 4K and whatnot.

[12:15] *** zakharyas left
[12:21] *** dakkar left
[12:22] <jast> mine is tricky... it's a partial 3000 x 1920

[12:22] <DrForr> besides, someone had to haul out the old joke.

[12:26] *** araraloren left
[12:29] *** splatt9990 joined
[12:33] *** reportable6 left
[12:34] *** reportable6 joined
[12:41] *** wamba joined
[12:55] *** natrys joined
[12:56] *** parv left
[12:57] *** splatt9990 left
[13:04] *** splatt9990 joined
[13:09] *** statisfiable6 left
[13:09] *** statisfiable6 joined
[13:09] *** ChanServ sets mode: +v statisfiable6

[13:11] *** nativecallable6 joined
[13:11] *** ChanServ sets mode: +v nativecallable6

[13:13] *** wbiker joined
[13:13] <wbiker> Hi @here

[13:16] <wbiker> I have got a module that uses "run" to get all processes. To unit test this module, I want to inject the dependencies. What is the best way to inject something that can be used instead of "run ps aux" for example. I think I can use the class Proc.

[13:22] *** vichib left
[13:26] *** astj joined
[13:30] <scimon> Proc::Async ?

[13:31] *** splatt9990 left
[13:31] *** astj left
[13:35] <wbiker> @scimon I am not interested in running the command in parallel. I want to use run in production code and a mock in the unit tests. I do not think Proc::Async does help me here.

[13:36] <jnthn> Is the module sub-based or OO-based?

[13:37] <jnthn> If the former, perhaps have the subs take an optional parameter like `:&run = CORE::<&run>`, then test cases can pass in an alternative run sub to use

[13:37] <jnthn> If OO-based, similar but as a property and allow it to be passed in the constructor

[13:37] <jnthn> Alternatively, can allow the Proc type to use to be injected

[13:38] <scimon> (I think jnthn got way more sleep than me, best listen to him)

[13:38] <wbiker> OO-based. Its a class and I was thinking to use Proc in the constructor somehow.

[13:38] <wbiker> @scimon :-)

[13:38] <jnthn> Yeah, that would be a good way to go :)

[13:39] <jnthn> Though you can just write something like

[13:39] <jnthn> has $.proc-class = Proc;

[13:39] <jnthn> And then it's automatically available to pass as proc-class => MyProcMock

[13:39] <lizmat> has Proc $.proc-class ?

[13:39] <jnthn> No

[13:39] <lizmat> ah, indeed, I see now

[13:40] <lizmat> yup, sorry

[13:40] <jnthn> That forces the mock to be a subclass of Proc

[13:40] <jnthn> Which Test::Mock actually will make happen, mind :)

[13:40] <lizmat> yup

[13:40] <wbiker> Ahh I see

[13:40] <wbiker> Cool thanks for the help

[13:40] <jnthn> I did something just like this with Proc::Async and a mock set up with Test::Mock in a $dayjob project a while back, and it worked out nicely

[13:42] <wbiker> Will try it. thanks

[13:42] <jnthn> (and Proc.run should be eaiser to mock than Proc::Async...)

[13:43] <wbiker> I thought so too

[13:46] *** wbiker left
[14:01] *** perlpilot joined
[14:05] *** dakkar joined
[14:06] *** lizmat left
[14:10] *** bwisti joined
[14:15] *** alexghacker left
[14:15] *** alexghacker joined
[14:15] *** kerframil joined
[14:20] *** zakharyas joined
[14:20] *** cdg joined
[14:27] <Geth> ¦ doc: 209e5c3ff0 | (Will "Coke" Coleda)++ | xt/words.pws

[14:27] <Geth> ¦ doc: add words

[14:27] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/209e5c3ff0

[14:31] *** eliasr joined
[14:33] *** yqt joined
[14:35] *** domidumont left
[14:39] *** pecastro joined
[14:39] *** sjoshi joined
[14:47] <Geth> ¦ doc: 9c970f84e6 | (Wenzel P. P. Peppmeyer)++ (committed using GitHub Web editor) | doc/Type/Slip.pod6

[14:47] <Geth> ¦ doc: show how to use Empty

[14:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9c970f84e6

[14:47] <Geth> ¦ doc: 0c5ab8551a | (Alex Chen)++ (committed using GitHub Web editor) | doc/Type/Slip.pod6

[14:47] <Geth> ¦ doc: Merge pull request #1727 from gfldex/patch-4

[14:47] <synopsebot> Link: https://doc.perl6.org/type/Slip

[14:47] <Geth> ¦ doc: 

[14:47] <Geth> ¦ doc: show how to use Empty

[14:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0c5ab8551a

[14:50] *** silug left
[14:59] *** silug joined
[15:00] *** pecastro left
[15:12] <mspo> who's going to add type/Ppp ?

[15:14] *** wamba left
[15:16] *** sjoshi left
[15:17] *** comborico1611 joined
[15:35] *** wamba joined
[15:35] *** wamba left
[15:42] *** releasable6 left
[15:42] *** releasable6 joined
[15:42] *** ChanServ sets mode: +v releasable6

[15:47] *** wamba joined
[16:07] *** abraxxa left
[16:11] *** khw joined
[16:18] *** rindolf left
[16:21] *** ChoHag left
[16:27] *** comborico1611 left
[16:55] *** yqt left
[16:55] *** lowbro left
[16:57] *** piojo_ joined
[16:57] *** squashable6 left
[16:57] *** squashable6 joined
[16:58] *** leont_ joined
[17:03] *** piojo_ left
[17:13] *** Aaronepower left
[17:16] *** cdg left
[17:17] *** leont_ left
[17:21] *** cdg joined
[17:22] *** markong joined
[17:22] *** bloatable6 left
[17:22] *** coverable6 left
[17:22] *** benchable6 left
[17:22] *** bloatable6 joined
[17:22] *** ChanServ sets mode: +v bloatable6

[17:22] *** coverable6 joined
[17:22] *** ChanServ sets mode: +v coverable6

[17:22] *** benchable6 joined
[17:22] *** ChanServ sets mode: +v benchable6

[17:25] *** cdg left
[17:28] *** rindolf joined
[17:30] *** scimon left
[17:33] *** lizmat joined
[17:35] *** vichib joined
[17:39] *** bisectable6 left
[17:39] *** domidumont joined
[17:39] *** bisectable6 joined
[17:39] *** ChanServ sets mode: +v bisectable6

[17:42] *** astj joined
[17:46] *** cdg joined
[17:47] *** astj left
[17:50] *** setty1 joined
[17:59] *** dogbert17 joined
[18:01] *** FROGGS joined
[18:04] *** lostinfog joined
[18:10] <AlexDaniel> squashable6: next

[18:10] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 2 days and ≈15 hours (2018-01-06 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:10] *** wbiker joined
[18:11] *** dakkar left
[18:16] *** leont_ joined
[18:23] *** imcsk8 joined
[18:28] *** geospeck joined
[18:32] *** darutoko left
[18:32] *** imcsk8 left
[18:32] *** imcsk8 joined
[18:33] *** alexghacker left
[18:33] *** alexghacker joined
[18:35] *** Aaronepower joined
[18:39] *** Aaronepower left
[18:40] *** kerframil left
[18:56] *** cdg left
[18:59] *** zakharyas left
[19:05] *** S007 left
[19:05] *** lostinfog left
[19:07] *** unicodable6 left
[19:07] *** unicodable6 joined
[19:07] *** ChanServ sets mode: +v unicodable6

[19:10] *** cdg joined
[19:15] *** cdg left
[19:16] *** lizmat left
[19:17] *** xcm left
[19:18] *** Perl6 joined
[19:18] *** Perl6 left
[19:21] *** cdg joined
[19:22] *** xcm joined
[19:29] *** comborico1611 joined
[19:36] *** xcm is now known as Guest47196

[19:36] *** Guest47196 left
[19:37] *** xcm joined
[19:38] *** greppable6 left
[19:39] *** greppable6 joined
[19:41] *** AlexDaniel left
[19:46] *** Perl6 joined
[19:46] <Perl6> Is it possible to have a hash with the value being an integer, and then add to the value?

[19:47] *** comborico1611_ joined
[19:48] *** lizmat joined
[19:49] <Perl6> Never mind, I found a better way to do this thing

[19:49] <sena_kun> m: my %a; %a<foo> = 5; %a<foo>++; say %a<foo>;

[19:49] <camelia> rakudo-moar 8fd776fd7: OUTPUT: «6␤»

[19:49] <sena_kun> dunno why not.

[19:49] <sena_kun> or I misunderstood something.

[19:54] *** comborico1611_ left
[20:06] *** Guest3313 is now known as ponbiki

[20:06] *** xcm left
[20:06] *** pilne joined
[20:07] *** xcm joined
[20:07] *** Perl6 left
[20:15] *** domidumont left
[20:17] *** raendin joined
[20:26] *** raendin left
[20:28] *** itaylor57 left
[20:33] *** AlexDaniel joined
[20:34] *** eliasr left
[20:34] *** zakharyas joined
[20:38] *** neoncontrails joined
[20:38] *** neoncontrails left
[20:39] *** neoncontrails joined
[20:44] <neoncontrails> Greetings #perl6. I'm following a reference from an academic paper to a 'tokenizer.perl' script in a repository called mosesdecoder. Unfortunately I'm not proficient with Perl and there doesn't appear to be a man page/other documentation to suggest how to use it. Does the repository itself give you experienced Perl programmers a hint w/r/t demo usage? https://github.com/moses-smt/mosesdecoder/tree/master

[20:44] <neoncontrails> /scripts/tokenizer

[20:44] <neoncontrails> * https://github.com/moses-smt/mosesdecoder/tree/master/scripts/tokenizer (since that got chopped up :)

[20:45] <lizmat> neoncontrails: this looks like Perl 5 code to me.  This channel is about supporting Perl 6

[20:46] <lizmat> neoncontrails: you will probably get more / better answer on #perl-help on irc.perl.org

[20:46] <neoncontrails> lizmat: I'll try there. Thanks for the suggestion!

[20:47] <mspo> # avoid general madness

[20:47] <mspo>   s/[\000-\037]//g;

[20:47] <mspo> s/\s+/ /g;

[20:47] <lizmat> you're welcome

[20:47] <mspo> lol

[20:49] <neoncontrails> mspo: heh, the second regex I'm familiar with. (Quite useful!) What is the effect of the first?

[20:49] <timotimo> is that all control characters perhaps?

[20:49] <geekosaur> yes

[20:51] <neoncontrails> Interesting. Is "\\\d{3}" a general Perl pattern for selecting specific ascii characters/ranges?

[20:51] <neoncontrails> I haven't seen that syntax in Python

[20:51] <geekosaur> that's overly escaped \d{3} = 3 x \d

[20:51] <geekosaur> (or matching backslash followed by 3 digits)

[20:52] <geekosaur> ...also that's perl 5 syntax, it's a bit different in p6

[20:52] <neoncontrails> geekosaur: gotcha. I could see that being useful for ranges

[20:55] *** neoncontrails left
[20:58] *** evalable6 left
[20:58] *** evalable6 joined
[21:04] <damnlie> Hi guys, anyone has any documentation how to do dba stuff with perl6? I like to make my life difficult :) 

[21:09] *** p6lert left
[21:09] *** p6lert joined
[21:15] *** zakharyas left
[21:18] <buggable> New CPAN upload: Sparky-Plugin-Notify-Telegram-0.0.1.tar.gz by SPIGELL https://cpan.metacpan.org/authors/id/S/SP/SPIGELL/Perl6/Sparky-Plugin-Notify-Telegram-0.0.1.tar.gz

[21:18] <mspo> damnlie: can you be more specific?

[21:19] <timotimo> database administration tasks? i'd assume you'd be doing most of that directly in your db's shell, but i've never done any dba-ing

[21:21] *** lizmat left
[21:25] *** xcm left
[21:26] *** xcm joined
[21:28] <damnlie> Yup. Well we have like 2-300 line mysql what we would 

[21:28] <damnlie> Like to replace

[21:29] <timotimo> depends entirely on what it does, of course. could be a good decision to write something with DBIish

[21:30] <timotimo> like, you'll get nice commandline argument parsing with "multi sub MAIN"

[21:30] <timotimo> parallelism is a thing you get with perl6 that doesn't work terribly well with other languages in the "scripting" niche

[21:30] *** Aaronepower joined
[21:32] <timotimo> if i knew what your script has to do and how you interact with it, i could perhaps make better estimations

[21:34] *** leont_ left
[21:45] <mspo> parallelize massive IN(..) statements? :)

[21:48] <timotimo> well, that kind of thing is for the database server to do, perl6 can hardly do that from the outside

[21:56] *** itaylor57 joined
[22:16] *** natrys left
[22:16] *** leont_ joined
[22:19] *** geospeck left
[22:24] *** comborico1611_ joined
[22:25] *** comborico1611_ left
[22:27] *** kerframil joined
[22:37] *** stmuk joined
[22:38] *** stmuk_ left
[22:52] *** dct joined
[22:54] *** leont_ left
[22:58] *** dct left
[22:58] *** dct joined
[22:59] <comborico1611> I've been fighting mysql ALL day.

[22:59] <gfldex> Who won?

[22:59] <comborico1611> Haha. It did.

[23:00] <gfldex> :)

[23:00] <comborico1611> I like your humor.

[23:00] <gfldex> you may give prostgres a shot. Much nicer docs.

[23:00] <comborico1611> Apparently, they replaced mysql_connect with mysqli_connect

[23:01] <comborico1611> I need books to text l teach me, and i just ordered another one on mysql.

[23:01] <comborico1611> I'll keep it in mind, though.

[23:02] <comborico1611> Thanks!

[23:02] <gfldex> if you use postgres you can use perl5 as stored procederes (not sure if that is an advantage tho)

[23:04] <comborico1611> I'm trying to build-up my web developer skills as a new job.  SQL is too popular to ignore

[23:04] <gfldex> SQL is a nice language indeed

[23:04] <gfldex> you just need to think like a book keeper :)

[23:09] <comborico1611> Heh

[23:10] <MasterDuke> i had a minor revelation when i read an article years ago (which i wish i'd kept) about the relationship between SQL and set theory

[23:10] <MasterDuke> i'm not particularly great at math

[23:10] <MasterDuke> but i'd had some set theory in a required discrete math class

[23:10] <comborico1611> I miss the Douy Decimal System.  Well, really the card catalogue.

[23:10] <MasterDuke> and it seemed almost entirely useless for anything practical

[23:11] <comborico1611> The Card Catalogue was a beautiful piece of furniture.

[23:11] <MasterDuke> but that article really helped me understand SQL

[23:12] <comborico1611> But Set Theory is a prerequisite.  So not very helpful for me m

[23:12] <comborico1611> M=.

[23:13] <comborico1611> You remember the card catalogue?

[23:13] <MasterDuke> i wouldn't say it's required. but it's helpful to learn the two subjects (set theory and sql) in conjunction

[23:13] <MasterDuke> like calculus and physics. i was first forced to learn them completely isolated

[23:14] <MasterDuke> but then later on found out how related they are, and it made uderstanding each one easier

[23:14] <comborico1611> Hmm.

[23:14] <comborico1611> I still haven't learned calculus.

[23:16] *** rindolf left
[23:17] <MasterDuke> i'm not sure i have a very concrete point/suggestion to make. but at least for me, a non-mathematician who didn't get great grades in math after highschool, a little bit of set theory helped with understanding sql (and vice versa, though that direction wasn't all that practically useful for me)

[23:18] *** xcm left
[23:19] *** xcm joined
[23:21] *** TreyHarris left
[23:36] *** leont_ joined
[23:38] *** cdg left
[23:43] *** setty1 left
[23:44] *** quotable6 left
[23:45] *** quotable6 joined
[23:45] *** ChanServ sets mode: +v quotable6

[23:47] *** TreyHarris joined
