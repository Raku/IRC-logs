[00:01] <squashable6> 🍕 zoffixznet++ opened issue “Some `loop`s end up as w…”: https://github.com/rakudo/rakudo/issues/1698

[00:01] <squashable6> 🍕 zoffixznet++ self-assigned issue “Some `loop`s end up as w…”: https://github.com/rakudo/rakudo/issues/1698

[00:07] *** kurahaupo_ joined
[00:10] *** kurahaupo left
[00:10] <Geth> ¦ rakudo: 879b33405e | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[00:10] <Geth> ¦ rakudo: Fix crash in loop + FIRST + LAST when it's wanted

[00:10] <Geth> ¦ rakudo: 

[00:10] <Geth> ¦ rakudo: Fixes R#1623 https://github.com/rakudo/rakudo/issues/1623

[00:10] <synopsebot> R#1623 [open]: https://github.com/rakudo/rakudo/issues/1623 Phasers FIRST/LAST in sub-loop doesn't compile: Cannot reference undeclared local 'LOOP_BLOCK_1'

[00:10] <Geth> ¦ rakudo: 

[00:10] <Geth> ¦ rakudo: When we gen Seq.from-loop, we don't anticipate that the body of

[00:10] <Geth> ¦ rakudo: the loop was rewritten and there are other bits outside the `while`

[00:10] <Geth> ¦ rakudo: op that we need to take care of, so we end up moving the `call` on

[00:10] <Geth> ¦ rakudo: <…commit message has 17 more lines…>

[00:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/879b33405e

[00:12] <Geth> ¦ roast: dab963752c | (Zoffix Znet)++ | S04-phasers/in-loop.t

[00:12] <Geth> ¦ roast: Test loop + FIRST + LAST as last statement in subs don't crash

[00:12] <Geth> ¦ roast: 

[00:12] <Geth> ¦ roast: Closes R#1623 https://github.com/rakudo/rakudo/issues/1623

[00:13] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/879b33405e

[00:13] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/dab963752c

[00:14] <squashable6> 🍕 zoffixznet++ wrote a comment on “Phasers FIRST/LAST in su…”: https://github.com/rakudo/rakudo/issues/1623#issuecomment-379416685

[00:14] <squashable6> 🍕 zoffixznet++ closed issue “Phasers FIRST/LAST in su…”: https://github.com/rakudo/rakudo/issues/1623

[00:14] *** mcmillhj joined
[00:19] *** mcmillhj left
[00:21] *** kurahaupo_ left
[00:21] *** kurahaupo joined
[00:23] *** dant joined
[00:24] <dant> p6: say 3;

[00:24] <camelia> rakudo-moar c8364d696: OUTPUT: «3␤»

[00:25] *** dant left
[00:30] *** comborico1611 left
[00:36] *** kurahaupo left
[00:36] *** kurahaupo joined
[00:38] <Geth> ¦ roast: 0cc147d9fe | (Zoffix Znet)++ | 2 files

[00:38] <Geth> ¦ roast: Split up tests into two files

[00:38] <Geth> ¦ roast: 

[00:38] <Geth> ¦ roast: A single file takes ages to run

[00:38] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/0cc147d9fe

[00:38] <titsuki_> hi #perl6. Is https://github.com/perl6-community-modules/URI-Encode still maintained? I send a PR about 2 weeks ago but there is no reply..

[00:38] <Geth> ¦ rakudo: 13382cc8a8 | (Zoffix Znet)++ | t/spectest.data

[00:38] <Geth> ¦ rakudo: Add S32-exceptions/misc2.t to list of test files to run

[00:38] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/13382cc8a8

[00:39] * Zoffix looks

[00:39] <titsuki_> thanks

[00:39] <Zoffix> I saw that PR but it was over my head

[00:39] <Zoffix> .ask samcv would you be able to review and merge this PR? https://github.com/perl6-community-modules/URI-Encode/pull/8/files

[00:39] <yoleaux> Zoffix: I'll pass your message to samcv.

[00:39] <Zoffix> ^ our encoding expert

[00:39] <titsuki_> ok

[00:47] *** kurahaupo left
[00:48] *** kurahaupo joined
[00:48] <samcv> i looked at it. i'm not sure how this fixes it. or i guess what the issue before was

[00:48] <yoleaux> 00:39Z <Zoffix> samcv: would you be able to review and merge this PR? https://github.com/perl6-community-modules/URI-Encode/pull/8/files

[00:48] <samcv> and why it didn't work before

[00:49] <samcv> was this /<[\x00..\x10ffff]-[a..zA..Z0..9_.~\!\+\-\#\$\&\+,\/\:;\=\?@]> not matching them?

[00:49] *** pierre joined
[00:49] *** ChoHag left
[00:50] <samcv> since .comb only separates by grapheme and not by character. so the only thing i can surmise is that it wasn't matching properly with the old regex? is this true titsuki_?

[00:52] <titsuki_> I'll paste a ralated RT. Could you wait a minute?

[00:52] <titsuki_> *related

[00:59] *** mcmillhj joined
[00:59] <titsuki_> bisectable:  "🇩🇪".subst(/<[\x00..\x1ffff]>/,"",:g).say

[01:00] <bisectable6> titsuki_, Bisecting by output (old=2015.12 new=13382cc) because on both starting points the exit code is 0

[01:00] *** kurahaupo left
[01:00] <bisectable6> titsuki_, bisect log: https://gist.github.com/d21d9d6eda87c52e9e7b6c3282722d74

[01:00] <bisectable6> titsuki_, (2016-08-13) https://github.com/rakudo/rakudo/commit/fe90be01c6546e1dbb2ee7ff794e8b6ea1491268

[01:00] *** kurahaupo joined
[01:03] <titsuki_> RT #128550

[01:03] <synopsebot> RT#128550 [resolved]: https://rt.perl.org/Ticket/Display.html?id=128550 [@LARRY] <[a..z]> ranges break grapheme awareness

[01:03] <titsuki_> samcv: ^^ this one changed the behavior

[01:04] *** mcmillhj left
[01:04] <samcv> ok so it worked before?

[01:04] <samcv> the PR i mean? 

[01:04] <titsuki_> samcv: yes

[01:05] <samcv> ok great. things make sense now

[01:05] <samcv> i made a comment but i don't have commit access to this repo

[01:05] <samcv> but you get the all OK from me

[01:07] <titsuki_> zoffix: Sorry, could you merge it?

[01:07] <Zoffix> .ask lizmat would you give samcv++ commit bit or owner status to this repo? https://github.com/orgs/perl6-community-modules/people

[01:07] <yoleaux> Zoffix: I'll pass your message to lizmat.

[01:08] <Zoffix> titsuki_: merged. Thanks

[01:08] *** pierre left
[01:08] <titsuki_> Zoffix: thanks!

[01:11] *** kurahaupo left
[01:11] *** kurahaupo joined
[01:12] *** skids joined
[01:14] *** mcmillhj joined
[01:19] *** mcmillhj left
[01:24] *** char_var[buffer] left
[01:25] *** kurahaupo left
[01:26] *** kurahaupo joined
[01:30] *** mcmillhj joined
[01:35] *** mcmillhj left
[01:36] *** kurahaupo left
[01:36] *** kurahaupo joined
[01:41] <Zoffix> <TimToady> but this still feels wrongish to me; I want to be able to put a value of π or e into the setting that is allomorphic on Rat or FatRat

[01:42] <Zoffix> TimToady: it just occured to me: neither π nor e are rational numbers :P

[01:42] <Zoffix> .oO( "Perl 6: The only language where even irrationals are rational" :P )

[01:45] *** ilbot3 left
[01:47] *** mcmillhj joined
[01:48] *** char_var[buffer] joined
[01:49] *** char_var[buffer] left
[01:49] *** char_var[buffer] joined
[01:51] *** kurahaupo left
[01:51] *** kurahaupo joined
[01:52] <Geth> ¦ rakudo: 54137e8b14 | (Zoffix Znet)++ | 2 files

[01:52] <Geth> ¦ rakudo: Improve useless use warnings of constant in sink

[01:52] <Geth> ¦ rakudo: 

[01:52] <Geth> ¦ rakudo: - Use the actual text of numeric literals the user wrote in code

[01:52] <Geth> ¦ rakudo:     - ∞ for ∞ / Inf for Inf / un-normalized nums / non-10-base ints

[01:52] <Geth> ¦ rakudo:         Fixes R#1696 https://github.com/rakudo/rakudo/issues/1696

[01:52] <synopsebot> R#1696 [open]: https://github.com/rakudo/rakudo/issues/1696 [⚠ blocker ⚠] ∞ is reported as Inf in warnings

[01:52] <Geth> ¦ rakudo: - Refer to big ints as "integer" instead of "value", just

[01:52] <Geth> ¦ rakudo:     like we do for small ints

[01:52] <Geth> ¦ rakudo: - Refer to rationals as "rational" instead of "value"

[01:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/54137e8b14

[01:52] *** mcmillhj left
[01:53] <Geth> ¦ roast: d20508aaeb | (Zoffix Znet)++ | S32-exceptions/misc.t

[01:53] <Geth> ¦ roast: Test sink warnings mention constants like the user wrote them

[01:53] <Geth> ¦ roast: 

[01:53] <Geth> ¦ roast: Closes R#1696 https://github.com/rakudo/rakudo/issues/1696

[01:53] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/54137e8b14

[01:53] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d20508aaeb

[01:54] *** char_var[buffer] left
[01:55] <squashable6> 🍕 zoffixznet++ closed issue “∞ is reported as Inf in warnings”: https://github.com/rakudo/rakudo/issues/1696

[01:58] *** ilbot3 joined
[01:58] *** ChanServ sets mode: +v ilbot3

[02:02] *** kurahaupo left
[02:02] *** kurahaupo joined
[02:03] *** mcmillhj joined
[02:05] <Geth> ¦ roast: 27f5112b9a | (Zoffix Znet)++ | MISC/bug-coverage.t

[02:05] <Geth> ¦ roast: No segfaults in sub call with ternary

[02:05] <squashable6> 🍕 zoffixznet++ closed issue “Very simple spesh-related segfault”: https://github.com/rakudo/rakudo/issues/1645

[02:05] <Geth> ¦ roast: 

[02:05] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1645 R#1645

[02:05] <synopsebot> R#1645 [closed]: https://github.com/rakudo/rakudo/issues/1645 [SEGV][regression][testneeded] Very simple spesh-related segfault

[02:05] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/27f5112b9a

[02:08] *** mcmillhj left
[02:09] *** pierrot left
[02:09] *** pierrot joined
[02:10] <Geth> ¦ roast: a8dbf575ee | (Zoffix Znet)++ | S03-operators/is-divisible-by.t

[02:10] <Geth> ¦ roast: No crashes with bigint args in %% and % ops

[02:10] <squashable6> 🍕 zoffixznet++ closed issue “%% fails with bigInt, bigInt arguments ”: https://github.com/rakudo/rakudo/issues/1640

[02:10] <Geth> ¦ roast: 

[02:10] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1640 R#1640

[02:10] <synopsebot> R#1640 [closed]: https://github.com/rakudo/rakudo/issues/1640 [regression][testneeded] %% fails with bigInt, bigInt arguments 

[02:10] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/a8dbf575ee

[02:11] <squashable6> 🍕 zoffixznet++ wrote a comment on “users should have access…”: https://github.com/rakudo/rakudo/issues/1638#issuecomment-379425017

[02:11] <squashable6> 🍕 zoffixznet++ closed issue “users should have access…”: https://github.com/rakudo/rakudo/issues/1638

[02:14] <squashable6> 🍕 zoffixznet++ wrote a comment on “`once` places the return…”: https://github.com/rakudo/rakudo/issues/1610#issuecomment-379425158

[02:15] *** kurahaupo left
[02:15] <Geth> ¦ roast: faea349d53 | (Zoffix Znet)++ | S04-statements/once.t

[02:15] <Geth> ¦ roast: Remove trailing whitespace

[02:15] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/faea349d53

[02:16] *** kurahaupo joined
[02:16] <Geth> ¦ roast: 37548511d8 | (Zoffix Znet)++ | S04-statements/once.t

[02:16] <Geth> ¦ roast: Test `once` does not containerize its values

[02:16] <squashable6> 🍕 zoffixznet++ closed issue “`once` places the return…”: https://github.com/rakudo/rakudo/issues/1610

[02:16] <Geth> ¦ roast: 

[02:16] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1610 R#1610

[02:16] <synopsebot> R#1610 [closed]: https://github.com/rakudo/rakudo/issues/1610 [testneeded] `once` places the return value into unwanted Scalar container

[02:16] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/37548511d8

[02:20] *** mcmillhj joined
[02:20] <Geth> ¦ roast: 1719f50a3d | (Zoffix Znet)++ | S16-io/comb.t

[02:20] <Geth> ¦ roast: Move cleanup closer to creation of file

[02:20] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1719f50a3d

[02:25] *** mcmillhj left
[02:28] *** kurahaupo left
[02:29] *** kurahaupo joined
[02:29] *** rouking left
[02:31] *** mcmillhj joined
[02:33] <Geth> ¦ roast: f464b68b3e | (Zoffix Znet)++ | 3 files

[02:33] <Geth> ¦ roast: Test comb(Regex) returns Seq

[02:33] <Geth> ¦ roast: 

[02:33] <squashable6> 🍕 zoffixznet++ closed issue “The Str "comb" method (R…”: https://github.com/rakudo/rakudo/issues/1564

[02:33] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1564 R#1564

[02:33] <synopsebot> R#1564 [closed]: https://github.com/rakudo/rakudo/issues/1564 [testneeded] The Str "comb" method (Regex candidate) returns List instead of Seq

[02:33] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/f464b68b3e

[02:36] *** mcmillhj left
[02:37] *** z123 joined
[02:38] *** z123 left
[02:39] *** releasable6 left
[02:39] *** releasable6 joined
[02:39] *** ChanServ sets mode: +v releasable6

[02:42] *** mcmillhj joined
[02:42] <squashable6> 🍕 zoffixznet++ wrote a comment on “Some difference between …”: https://github.com/rakudo/rakudo/issues/1535#issuecomment-379426699

[02:42] *** kurahaupo left
[02:43] *** kurahaupo joined
[02:47] *** mcmillhj left
[02:48] <Geth> ¦ roast: e70ee88b61 | (Zoffix Znet)++ | MISC/bug-coverage-stress.t

[02:48] <Geth> ¦ roast: Cover async issue from R#1535

[02:48] <synopsebot> R#1535 [open]: https://github.com/rakudo/rakudo/issues/1535 [regression][testneeded] Some difference between implicit and explicit return

[02:48] <Geth> ¦ roast: 

[02:48] <Geth> ¦ roast: https://github.com/rakudo/rakudo/issues/1535

[02:48] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e70ee88b61

[02:48] <squashable6> 🍕 zoffixznet++ wrote a comment on “Some difference between …”: https://github.com/rakudo/rakudo/issues/1535#issuecomment-379426958

[02:48] <squashable6> 🍕 zoffixznet++ labeled issue “Some difference between …”: https://github.com/rakudo/rakudo/issues/1535

[02:48] <squashable6> 🍕 zoffixznet++ unlabeled issue “Some difference between …”: https://github.com/rakudo/rakudo/issues/1535

[02:52] *** athenot left
[02:52] *** athenot joined
[02:55] *** kurahaupo left
[02:56] *** mcmillhj joined
[02:57] *** kurahaupo joined
[02:57] *** eliasr left
[03:00] *** mcmillhj left
[03:02] *** cxreg joined
[03:07] *** mcmillhj joined
[03:08] *** char_var[buffer] joined
[03:11] *** kurahaupo left
[03:12] *** kurahaupo joined
[03:12] *** mcmillhj left
[03:12] <Geth> ¦ URI-Encode: titsuki++ created pull request #9: Fix reserved chars to be based on RFC3986

[03:12] <Geth> ¦ URI-Encode: review: https://github.com/perl6-community-modules/URI-Encode/pull/9

[03:20] <Geth> ¦ URI-Encode: b636608c49 | (Itsuki Toyota)++ | 3 files

[03:20] <Geth> ¦ URI-Encode: Fix reserved chars to be based on RFC3986

[03:20] <Geth> ¦ URI-Encode: review: https://github.com/perl6-community-modules/URI-Encode/commit/b636608c49

[03:20] <Geth> ¦ URI-Encode: 268cc281d5 | (Zoffix Znet)++ (committed using GitHub Web editor) | 3 files

[03:20] <Geth> ¦ URI-Encode: Merge pull request #9 from titsuki/fix-reserved-char

[03:20] <Geth> ¦ URI-Encode: 

[03:20] <Geth> ¦ URI-Encode: Fix reserved chars to be based on RFC3986

[03:20] <Geth> ¦ URI-Encode: review: https://github.com/perl6-community-modules/URI-Encode/commit/268cc281d5

[03:21] <Geth> ¦ URI-Encode: 2bcd7edda2 | (Zoffix Znet)++ (committed using GitHub Web editor) | META6.json

[03:21] <Geth> ¦ URI-Encode: Bump version

[03:21] <Geth> ¦ URI-Encode: review: https://github.com/perl6-community-modules/URI-Encode/commit/2bcd7edda2

[03:22] *** kurahaupo_ joined
[03:23] *** mcmillhj joined
[03:24] *** kurahaupo left
[03:26] *** Kaiepi left
[03:27] *** mcmillhj left
[03:28] <Zoffix> seems like Proc::Async.kill ain't wanna kill

[03:30] <Zoffix> e: https://temp.perl6.party/t.txt

[03:30] <evalable6> Zoffix, Successfully fetched the code from the provided URL.

[03:30] <evalable6> Zoffix, rakudo-moar 54137e8b1: OUTPUT: «(signal SIGHUP) ["", ""]␤["", ""]␤["", ""]␤["", ""]␤["", ""]␤["", ""]␤["", ""]␤["", ""]␤["…»

[03:30] <evalable6> Zoffix, Full output: https://gist.github.com/24793ff48f5cd9602cf09aacb464007c

[03:31] <Zoffix> like, why doesn't it progress to `say "PASS"`?

[03:32] <Zoffix> works fine if I kill from the shell

[03:35] <Zoffix> actually, it works if I run just the listening program the test runs, but if I run the full test and try to kill the program it runs from shell, it also don't work :S

[03:35] <Zoffix> why :/

[03:37] *** mcmillhj joined
[03:40] <MasterDuke> Zoffix: does strace show anything interesting?

[03:41] <Zoffix> I don't know how to use it. But now I just found that it's the update of $out that ain't working, 'cause the PID gets gone form `ps ax`

[03:42] *** mcmillhj left
[03:43] <Zoffix> Ah ok, buffering of the .stdout.tap

[03:43] *** Kaiepi joined
[03:44] <Zoffix> How can I control when the stuff gets sent to me?

[03:44] *** Kaiepi left
[03:45] *** Kaiepi joined
[03:45] *** Kaypie joined
[03:45] *** Kaypie left
[03:48] <Zoffix> like, how does it decide how to chunk stuff sent to stdout tap?

[03:48] *** char_var[buffer] left
[03:49] <MasterDuke> are there newlines in the stdout?

[03:49] <Zoffix> Yewah

[03:49] <Zoffix> And `say "CAUGHT\n" x 100;` doesn't get sent right away but `say "CAUGHT\n" x 10000;` does

[03:49] *** mcmillhj joined
[03:50] <MasterDuke> huh. don't newlines usually trigger sending

[03:50] *** pierre_ joined
[03:50] <skids> that's tty

[03:50] <skids> pipes just have a block size

[03:51] <Zoffix> Interesting, if I send 10000 CAUGHTS and receive them in binary mode, and make the tap print the size of each receive, I get "[12] [128] [256] [512] [1024] [2048] [4096] [8192] [16384] [32768] [4593]"

[03:53] <Zoffix> tried to .bind-stdout; getting "get native descriptor requires an object with REPR MVMOSHandle (got Scalar with REPR P6opaque)"

[03:53] <Zoffix> bloody annoying

[03:54] *** mcmillhj left
[03:54] *** char_var[buffer] joined
[03:57] <skids> prolly will top out at 65536 if you send more.

[03:57] <skids> (assuming linux)

[03:58] <Zoffix> skids: my bot is reminding "was anything done about the possibly useless `pres_topic` stuff in opt that removes blocks on `if`/`while`, etc. https://irclog.perlgeek.de/perl6/2018-02-24#i_15852854 "

[03:59] <Zoffix> Did we ever figure out if that stuff was useless or not?

[04:00] <skids> It boiled down to whether you think prettier per6 whiles are worth it, as it had no detectable benefit to more complex loops.

[04:00] <skids> I updated the gist back then, digging it back up.

[04:00] <Zoffix> ah, ok then

[04:01] <skids> https://gist.github.com/skids/21eaaad37969c5123ce7e9c48be35274

[04:02] *** mcmillhj joined
[04:02] <squashable6> 🍕 zoffixznet++ opened issue “LTA Error when Proc::Asy…”: https://github.com/rakudo/rakudo/issues/1699

[04:02] <squashable6> 🍕 zoffixznet++ labeled issue “LTA Error when Proc::Asy…”: https://github.com/rakudo/rakudo/issues/1699

[04:03] <skids> Would appreciate some feedback on issues #1290/#1214 if you get bored.

[04:04] <Zoffix> R#1290 R#1214

[04:04] <synopsebot> R#1290 [open]: https://github.com/rakudo/rakudo/issues/1290 KEEP does not set $_ to the return value

[04:04] <synopsebot> R#1214 [open]: https://github.com/rakudo/rakudo/issues/1214 Incorrect KEEP / UNDO gets fired under certain exit conditions

[04:06] *** mcmillhj left
[04:08] * skids goes to try to get tired-not-tired self to sleep.

[04:09] <squashable6> 🍕 zoffixznet++ opened issue “Forcing Proc::Async to flush stdout/stderr”: https://github.com/rakudo/rakudo/issues/1700

[04:09] <squashable6> 🍕 zoffixznet++ labeled issue “Forcing Proc::Async to flush stdout/stderr”: https://github.com/rakudo/rakudo/issues/1700

[04:10] <squashable6> 🍕 zoffixznet++ wrote a comment on “Signals ignored after signal taps are closed”: https://github.com/rakudo/rakudo/issues/1450#issuecomment-379430571

[04:13] *** skids left
[04:13] <squashable6> 🍕 zoffixznet++ edited issue “Forcing Proc::Async to flush stdout/stderr”: https://github.com/rakudo/rakudo/issues/1700

[04:18] <Zoffix> I'm a dumbass. The buffering ain't in proc async but in the program -_-

[04:19] <squashable6> 🍕 zoffixznet++ wrote a comment on “Forcing Proc::Async to flush stdout/stderr”: https://github.com/rakudo/rakudo/issues/1700#issuecomment-379430955

[04:19] <squashable6> 🍕 zoffixznet++ closed issue “Forcing Proc::Async to flush stdout/stderr”: https://github.com/rakudo/rakudo/issues/1700

[04:19] *** mcmillhj joined
[04:24] *** mcmillhj left
[04:25] <Zoffix> now it doesn't want to send the second kill :\

[04:31] *** mcmillhj joined
[04:32] <squashable6> 🍕 zoffixznet++ opened issue “Proc::Async.kill does no…”: https://github.com/rakudo/rakudo/issues/1701

[04:35] <squashable6> 🍕 zoffixznet++ wrote a comment on “Signals ignored after signal taps are closed”: https://github.com/rakudo/rakudo/issues/1450#issuecomment-379431611

[04:36] *** nightfro` joined
[04:36] *** mcmillhj left
[04:36] *** nightfro` is now known as nightfrog

[04:37] *** pierre_ left
[04:41] <squashable6> 🍕 zoffixznet++ wrote a comment on “Proc::Async.kill does no…”: https://github.com/rakudo/rakudo/issues/1701#issuecomment-379431899

[04:44] *** mcmillhj joined
[04:49] *** mcmillhj left
[05:00] *** mcmillhj joined
[05:05] *** mcmillhj left
[05:07] *** char_var[buffer] left
[05:17] *** mcmillhj joined
[05:18] *** rurban joined
[05:22] *** mcmillhj left
[05:22] *** pharv joined
[05:23] *** sauvin joined
[05:27] *** pharv left
[05:33] *** mcmillhj joined
[05:38] *** mcmillhj left
[05:44] *** kurahaupo joined
[05:45] *** kurahaupo_ left
[05:48] *** mcmillhj joined
[05:51] *** rurban left
[05:52] *** mcmillhj left
[05:53] *** kurahaupo_ joined
[05:54] *** Wenjie joined
[05:56] *** kurahaupo left
[06:31] *** Some-body_ joined
[06:31] *** Some-body_ is now known as DarthGandalf

[06:36] *** mcmillhj joined
[06:41] *** mcmillhj left
[06:42] *** domidumont joined
[06:48] *** domidumont left
[06:49] *** domidumont joined
[06:51] *** darutoko joined
[06:53] *** mcmillhj joined
[06:57] *** mcmillhj left
[07:02] *** rindolf joined
[07:05] *** mcmillhj joined
[07:09] *** mcmillhj left
[07:10] *** wamba joined
[07:16] *** mcmillhj joined
[07:21] *** mcmillhj left
[07:23] *** pharv joined
[07:23] *** phogg left
[07:24] *** lizmat joined
[07:28] *** pharv left
[07:28] <squashable6> 🍕 zoffixznet++ closed issue “WhateverCode no longer curries `.&{ }`”: https://github.com/rakudo/rakudo/issues/1694

[07:28] <Geth> ¦ rakudo: f174d4b406 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[07:28] *** phogg joined
[07:28] *** phogg left
[07:28] *** phogg joined
[07:28] <Geth> ¦ rakudo: Make unwrapped dispatch:<var> curriable

[07:28] <Geth> ¦ rakudo: 

[07:28] <Geth> ¦ rakudo: - Makes invocation of *.&uc 7.6x faster; the more candidates the

[07:28] <Geth> ¦ rakudo:     routine has the more fasterer the gain will be

[07:28] <Geth> ¦ rakudo: - Fixes https://github.com/rakudo/rakudo/issues/1694 R#1694

[07:28] <synopsebot> R#1694 [closed]: https://github.com/rakudo/rakudo/issues/1694 [regression][⚠ blocker ⚠] WhateverCode no longer curries `.&{ }`

[07:28] <Geth> ¦ rakudo:     We used to avoid unwrapping dispatch:<var> with curries, but the

[07:28] <Geth> ¦ rakudo:     check only checked if the immediate invocant was a curry. This

[07:28] <Geth> ¦ rakudo:     didn't cover cases like `*.foo.&bar`, so we ended up trying to

[07:28] <Geth> ¦ rakudo:     curry unwrapped dispatch:<var> and the currier didn't know how

[07:28] <Geth> ¦ rakudo:     to do that. Fix by teaching it.

[07:28] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f174d4b406

[07:29] <Geth> ¦ roast: b5b85c1843 | (Zoffix Znet)++ | S02-types/whatever.t

[07:29] <Geth> ¦ roast: Test curried .& calls

[07:29] <Geth> ¦ roast: 

[07:29] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1694 R#1694

[07:29] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/f174d4b406

[07:29] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b5b85c1843

[07:35] *** mcmillhj joined
[07:37] *** pierre__ joined
[07:37] * lizmat waves from the GPW Hackathon to be in Gummersbach

[07:37] <yoleaux> 01:07Z <Zoffix> lizmat: would you give samcv++ commit bit or owner status to this repo? https://github.com/orgs/perl6-community-modules/people

[07:38] <lizmat> Zoffix: sent invite

[07:38] <timotimo> o/ lizmat

[07:39] <timotimo> i just had breakfast and will check out and head to the venue

[07:39] <timotimo> am i missing much?

[07:39] <Geth> ¦ rakudo: ae9486c767 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[07:39] <Geth> ¦ rakudo: Use better conditional

[07:39] <Geth> ¦ rakudo: 

[07:39] *** ufobat joined
[07:39] <Geth> ¦ rakudo: In case we ever get stuff with curriable-call-offset of zero

[07:39] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ae9486c767

[07:39] <lizmat> not yet, 4 people here, wendy + laurent on their way to the airport

[07:40] *** mcmillhj left
[07:40] <TEttinger> I wonder what Gummersbach means

[07:42] <lizmat> https://en.wikipedia.org/wiki/Gummersbach

[07:46] <samcv> lizmat: thanks. just accepted

[07:47] <Geth> ¦ rakudo: c103459d87 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[07:47] <Geth> ¦ rakudo: Use better conditional

[07:47] <Geth> ¦ rakudo: 

[07:47] <Geth> ¦ rakudo: In case we ever get stuff with curriable-call-offset of zero

[07:47] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c103459d87

[07:48] <Zoffix> :/ looks like Visual Studio don't know about INFINITY either :\ 

[07:52] *** mcmillhj joined
[07:57] *** mcmillhj left
[07:58] *** mwhisenhunt left
[08:02] <Geth> ¦ rakudo: ee5150e424 | (Moritz Lenz)++ | t/02-rakudo/scoping-regression.t

[08:02] <Geth> ¦ rakudo: Test for RT#127869: a variable can be both true and false

[08:02] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/ee5150e424

[08:02] <squashable6> 🍕🍕🍕  First contribution by moritz++! ♥

[08:02] <synopsebot> RT#127869 [open]: https://rt.perl.org/Ticket/Display.html?id=127869 [BUG] if my $match is True and False

[08:03] *** athenot left
[08:05] <Geth> ¦ rakudo: 5b229d71d3 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[08:05] <Geth> ¦ rakudo: [NQP Bump] Brings 2 commits

[08:05] <Geth> ¦ rakudo: 

[08:05] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.03-55-g6689823...2018.03-57-g05f45eb

[08:05] <Geth> ¦ rakudo: 05f45eb [MoarVM Bump] Brings 2 commits

[08:05] <Geth> ¦ rakudo: e20fdaa Revert "Implement `cvalue` method for [NIS]Val QAST Nodes"

[08:05] <Geth> ¦ rakudo: 

[08:05] <Geth> ¦ rakudo: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.03-94-gd115bf7...2018.03-96-gfa16746

[08:05] <Geth> ¦ rakudo: fa16746 Define INFINITY for MVC

[08:05] <Geth> ¦ rakudo: d44fa89 Fix loading bytecode on big endian systems

[08:05] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5b229d71d3

[08:05] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-55-g6689823...2018.03-57-g05f45eb

[08:12] *** mcmillhj joined
[08:13] <Geth> ¦ roast: 9c6d9ac006 | (Moritz Lenz)++ | MISC/bug-coverage.t

[08:13] <Geth> ¦ roast: Test for RT#127869, $m should not be true and false

[08:13] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/9c6d9ac006

[08:13] <synopsebot> RT#127869 [resolved]: https://rt.perl.org/Ticket/Display.html?id=127869 [BUG] if my $match is True and False

[08:14] <Geth> ¦ rakudo: 77c3a9c5d2 | (Moritz Lenz)++ | t/02-rakudo/scoping-regression.t

[08:14] <Geth> ¦ rakudo: Revert "Test for RT#127869: a variable can be both true and false"

[08:14] <Geth> ¦ rakudo: 

[08:14] <Geth> ¦ rakudo: This reverts commit ee5150e4247ab99a2c2aa769b3837bbfde6c8315.

[08:14] <Geth> ¦ rakudo: The test has been added to roast instead in

[08:14] <Geth> ¦ rakudo: https://github.com/perl6/roast/commit/9c6d9ac006

[08:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/77c3a9c5d2

[08:17] *** mcmillhj left
[08:18] *** pierre__ left
[08:18] *** pierre_ joined
[08:20] <ufobat> does anyone know how to use "run" on windows? mi6 basically invokes something like perl6 -e 'run "prove"' which failes to find the program, whereas "prove" on the cmd does work

[08:20] * ufobat has no clue about windows

[08:24] <Zoffix> ufobat: invokes it how? On windows, you use double quotes to quote the -e '' stuff, for one

[08:25] <ufobat> https://github.com/skaji/mi6/issues/40

[08:26] <Zoffix> yeah, fails for me too

[08:26] <Zoffix> C:\>perl6 -e "run 'prove', '--h'"

[08:26] <ufobat> oh yeah sorry, i just typed it wrong here

[08:26] <Zoffix> The spawned command 'prove' exited unsuccessfully (exit code: 1)

[08:26] * Zoffix looks at the Issue

[08:26] <ufobat> Zoffix++

[08:31] *** mcmillhj joined
[08:31] <Zoffix> ufobat: you need to run "prove.bat" instead of just "prove" or use `shell` instead of `run`

[08:32] <Zoffix> ufobat: depending on the args, you may also encounter problems due to prove.bat needing cmd.exe (AFAIK), which is anal-retentive about arg escapes. RT#132258

[08:32] <synopsebot> RT#132258 [new]: https://rt.perl.org/Ticket/Display.html?id=132258 [SECURITY][WINDOWS] `run "perl6" ...` can be made to execute shell commands

[08:34] <Zoffix> ufobat: there's also `zef test` command and if TAP::Harness is installed (included with Rakudo Star), it won't even use `prove` for testing

[08:35] *** mcmillhj left
[08:36] <Zoffix> (to clarify by "looks at the Issue" I meant "reads the Issue"; don't got much interest in fixing it, unless no one else got Windows available)

[08:42] *** voegelas joined
[08:42] <ufobat> I dont have windows myself, this issue just araised on the hackathon at the gpw2018

[08:45] *** HaraldJoerg joined
[08:48] *** mcmillhj joined
[08:53] *** mcmillhj left
[08:54] <AlexDaniel> good morning o/

[08:54] <AlexDaniel> squashable6: status

[08:54] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈3 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[08:54] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/55d1472afe8c6543a137fb563b3b6e27

[08:55] *** TEttinger left
[08:57] <AlexDaniel> ah, right. Closed RT tickets will be visible later in reportable6

[09:17] <Geth> ¦ doc: 08f5d74e39 | (JJ Merelo)++ | 2 files

[09:17] <Geth> ¦ doc: Moved layout-related things to STYLEGUIDE.

[09:17] <Geth> ¦ doc: 

[09:17] <Geth> ¦ doc: And created there a new "Use of HTML" just for this purpose. Closes #1898.

[09:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/08f5d74e39

[09:17] <AlexDaniel> no way… no way

[09:18] <Zoffix> ?

[09:18] <AlexDaniel> If I login to RT using github it's [email@hidden.address]
[09:18] <AlexDaniel> which is not the same email obviously

[09:18] <AlexDaniel> oh, I guess I can login with “google” then?

[09:18] *** domidumont left
[09:19] <Zoffix> You have to use an account that has the same email as your RT account

[09:19] <AlexDaniel> that works! OK, panic mode off :)

[09:19] <AlexDaniel> yeah

[09:20] <AlexDaniel> oh, but github also allows changi emails

[09:20] <AlexDaniel> ng

[09:20] *** voegelas left
[09:20] *** pecastro_ joined
[09:21] <AlexDaniel> I guess that change on RT is great news, as now people won't have issues with new accounts I think

[09:21] <AlexDaniel> maybe

[09:23] *** domidumont joined
[09:30] <Geth> ¦ doc: 7701840b66 | (JJ Merelo)++ | doc/Type/CallFrame.pod6

[09:30] <Geth> ¦ doc: Modifies example to make it work

[09:30] <Geth> ¦ doc: 

[09:30] <Geth> ¦ doc: Closes #1554

[09:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7701840b66

[09:30] <synopsebot> Link: https://doc.perl6.org/type/CallFrame

[09:32] <Zoffix> p6lert: add severity:low If you're using from-source builds that re-use github checkouts and you're having a build problem, you may need to delete directory `nqp/MoarVM/3rdparty/libatomic_ops` in your rakudo checkout (likely located in ~/rakudo/)

[09:32] <Zoffix> p6lert: yoo

[09:32] <p6lert> Zoffix, Added alert ID 7: https://alerts.perl6.org/alert/7

[09:32] <Zoffix> slowass bot

[09:33] <Zoffix> huggable: sauce

[09:33] <huggable> Zoffix, Install latest version of Rakudo from source: https://github.com/zoffixznet/r#table-of-contents

[09:33] <Zoffix> ^ affects everyone using that :(

[09:34] <timotimo> we didn't learn from the mistake i made a year ago :(

[09:34] <Zoffix> :)

[09:34] <Zoffix> Third time a charm, I guess :)

[09:34] *** wamba left
[09:35] <AlexDaniel> ah…

[09:35] <AlexDaniel> bloatable6: fa167464ac4

[09:35] <bloatable6> AlexDaniel, https://gist.github.com/f458185aa7691f0660b0d856e3839f3e

[09:35] <AlexDaniel> hm that works

[09:35] <AlexDaniel> by the way where do we stand

[09:35] <AlexDaniel> bloatable6: releases

[09:36] <bloatable6> AlexDaniel, https://gist.github.com/b147db2dfeb9c19abac4d75798fa563d

[09:38] <AlexDaniel> ah, only rakudo builds are affected, and whateverable clones from scratch I think?

[09:38] * AlexDaniel doesn't know

[09:39] *** voegelas joined
[09:39] <Zoffix> Only the builds that pull fresh commits into existing checkouts are affected

[09:48] <tyil> https://github.com/github/linguist/pull/4083#issuecomment-379451368

[09:48] <tyil> should I update the PR to put Perl 6 Pod and Perl 6 in the same language category

[09:49] <tyil> Perl 5 Pod is considered its own language, hence I originally made the PR consider Perl 6 Pod its own language as well

[09:49] <tyil> samcv: ^

[09:50] <Zoffix> It'd be pretty tough to tell the difference, Pod is part of <ws> isn't it? So it can be shoved anywhere in code you can have whitespace

[09:50] <samcv> language category?

[09:51] <samcv> i mean tbh i'm pretty annoyed with the whole adding language to linguist process

[09:51] <Zoffix> AND you can have arbitrary Perl 6 code in config values of pod, so you need full Perl 6 highlighter anyway

[09:51] <samcv> i'm fine with it being its own language

[09:51] <samcv> tbh get the pr merged asap before the people there change their minds

[09:51] <Geth> ¦ rakudo: 1f98b1bb3d | (Elizabeth Mattijsen)++ | src/core/array_slice.pm6

[09:51] <squashable6> 🍕🍕🍕  First contribution by lizmat++! ♥

[09:51] <Geth> ¦ rakudo: Use Bool() on postcircumfix:<[ ]> adverbs params

[09:51] <Geth> ¦ rakudo: 

[09:51] <Geth> ¦ rakudo: Saves one Scalar allocation per @foo[bar]:exists and the like.

[09:51] <Geth> ¦ rakudo: Inspired by 74b755992d7d43e2feb5d

[09:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/1f98b1bb3d

[09:52] <tyil> samcv: I too am not a big fan of the linguist team :p

[09:52] <samcv> yep

[09:52] * Zoffix had pretty positive experienses with them

[09:53] <samcv> well... they can be pretty uncertain at times and it feels to get a language added you have to have someone notice and not lose interest

[09:53] <samcv> like what happened to my PR

[09:54] <samcv> though i got XCompose added as a language with syntax highlighter very easily. only because there's so many copies all over of the same linux config files :P

[09:54] <samcv> but then have big issues getting an actual language added. so it's frustrating

[09:54] <samcv> and not just basically a config file format

[09:55] <samcv> (like XCompose)

[09:55] *** LanceW joined
[09:55] <tyil> samcv: https://github.com/github/linguist/pull/4083#pullrequestreview-110251634

[09:55] <samcv> also. i'll just drop there here. how bad/good does this look https://a.uguu.se/AJFkMGReots5.png

[09:56] * Zoffix posts it to https://www.reddit.com/r/keming/

[09:57] <samcv> don't post it. the gears are not owned by me

[09:57] <samcv> and i need to attribute if i use it actually

[09:57] <samcv> oh haha. nice reddit

[09:57] <samcv> and yeah the font looks terrible since it's not rasterized fully

[09:58] <Zoffix> Yeah, really blocky-looking

[09:58] <samcv> also it's pretty rough

[10:01] <AlexDaniel> I don't think these gears can spin freely…

[10:01] <Geth> ¦ rakudo: 5d554ba37b | (Jonathan Worthington)++ | src/core/IO/Handle.pm6

[10:01] <Geth> ¦ rakudo: Fix error for .native-descriptor on closed handle

[10:01] <squashable6> 🍕🍕🍕  First contribution by jnthn++! ♥

[10:01] <Geth> ¦ rakudo: 

[10:01] <Geth> ¦ rakudo: Addresses issue #1699.

[10:01] <synopsebot> RAKUDO#1699 [open]: https://github.com/rakudo/rakudo/issues/1699 [LTA] LTA Error when Proc::Async.bind-stdout/err get unopened IO::Handle

[10:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5d554ba37b

[10:01] <squashable6> 🍕 jnthn++ labeled issue “LTA Error when Proc::Asy…”: https://github.com/rakudo/rakudo/issues/1699

[10:01] <squashable6> 🍕 zoffixznet++ self-assigned issue “LTA Error when Proc::Asy…”: https://github.com/rakudo/rakudo/issues/1699

[10:09] <Geth> ¦ rakudo: c6c251596c | (Zoffix Znet)++ | t/05-messages/03-errors.t

[10:09] <Geth> ¦ rakudo: Test bind Proc::Async to unopened handle gives useful error

[10:09] <squashable6> 🍕 zoffixznet++ closed issue “LTA Error when Proc::Asy…”: https://github.com/rakudo/rakudo/issues/1699

[10:09] <Geth> ¦ rakudo: 

[10:09] <Geth> ¦ rakudo: Closes https://github.com/rakudo/rakudo/issues/1699 R#1699

[10:09] <Geth> ¦ rakudo: Rakudo fix: https://github.com/rakudo/rakudo/commit/5d554ba37b

[10:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/c6c251596c

[10:13] *** LanceW left
[10:30] <squashable6> 🍕 lizmat++ opened issue “Pre-GLR behavior w”: https://github.com/rakudo/rakudo/issues/1702

[10:31] *** espadrine_ left
[10:31] <Zoffix> lizmat: that issue missing `code` markers or something? Looks like missing a bunch of content and `:v` is bolded

[10:32] <lizmat> yeah, somehow I submitted it... will make a new one

[10:32] <squashable6> 🍕 lizmat++ edited issue “Pre-GLR behavior w”: https://github.com/rakudo/rakudo/issues/1702

[10:33] <squashable6> 🍕 lizmat++ edited issue “Pre-GLR behavior with ar…”: https://github.com/rakudo/rakudo/issues/1702

[10:34] <squashable6> 🍕 lizmat++ wrote a comment on “Pre-GLR behavior with ar…”: https://github.com/rakudo/rakudo/issues/1702#issuecomment-379459881

[10:34] <squashable6> 🍕 lizmat++ closed issue “Pre-GLR behavior with ar…”: https://github.com/rakudo/rakudo/issues/1702

[10:36] <squashable6> 🍕 lizmat++ opened issue “Issue with array / hash …”: https://github.com/rakudo/rakudo/issues/1703

[10:37] <squashable6> 🍕 lizmat++ labeled issue “Issue with array / hash …”: https://github.com/rakudo/rakudo/issues/1703

[10:37] <lizmat> sorry for the noise here

[10:40] *** FROGGS joined
[10:41] <Geth> ¦ rakudo: fc1922122e | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[10:41] <Geth> ¦ rakudo: Fix QAST::Block migration in `with` + loop-comprehended `for`

[10:41] <Geth> ¦ rakudo: 

[10:41] <Geth> ¦ rakudo: Fixes R#1695 https://github.com/rakudo/rakudo/issues/1695

[10:41] <synopsebot> R#1695 [open]: https://github.com/rakudo/rakudo/issues/1695 [⚠ blocker ⚠] In `for` loop nested inside `with` modifier, the topic $_ becomes a "null object"

[10:41] <Geth> ¦ rakudo: 

[10:41] <Geth> ¦ rakudo: The special handling of with/andthen rakes for blocks in the first

[10:41] <Geth> ¦ rakudo: arg, but wasn't expecting to get a QAST::Want, which we have in

[10:41] <Geth> ¦ rakudo: the Issue's code. Fix by teaching it to descend into those.

[10:41] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/fc1922122e

[10:42] <Geth> ¦ roast: 3594ad57f6 | (Zoffix Znet)++ | MISC/bug-coverage.t

[10:42] *** pierre_ left
[10:42] <Geth> ¦ roast: Remove trailing whitespace

[10:42] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3594ad57f6

[10:42] <Geth> ¦ roast: 52edb03dae | (Zoffix Znet)++ | MISC/bug-coverage.t

[10:42] <Geth> ¦ roast: Test var scoping with/for/andthen combinations

[10:42] <squashable6> 🍕 zoffixznet++ closed issue “In `for` loop nested ins…”: https://github.com/rakudo/rakudo/issues/1695

[10:42] <Geth> ¦ roast: 

[10:43] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1695 R#1695

[10:43] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/fc1922122e

[10:43] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/52edb03dae

[10:43] *** kurahaupo joined
[10:44] *** voegelas left
[10:44] *** HaraldJoerg left
[10:46] <squashable6> 🍕 smls++ opened issue “Body of a loop statement…”: https://github.com/rakudo/rakudo/issues/1704

[10:46] <squashable6> 🍕 zoffixznet++ wrote a comment on “Issue with array / hash …”: https://github.com/rakudo/rakudo/issues/1703#issuecomment-379460546

[10:46] *** kurahaupo_ left
[10:48] *** HaraldJoerg joined
[10:49] *** jmerelo joined
[10:49] <jmerelo> say [-] <10 5 3>; say [-] 10;

[10:49] <evalable6> jmerelo, rakudo-moar fc1922122: OUTPUT: «2␤-10␤»

[10:49] <squashable6> 🍕 zoffixznet++ wrote a comment on “Body of a loop statement…”: https://github.com/rakudo/rakudo/issues/1704#issuecomment-379460690

[10:51] <Geth> ¦ roast: 38c9dc5fd5 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S02-names/is_default.t

[10:51] <Geth> ¦ roast: Add extra tests for typed:D attributes

[10:51] <Geth> ¦ roast: 

[10:51] <Geth> ¦ roast: Closes RT#126318. A lot of tests for typed attributes were added in

[10:51] <Geth> ¦ roast: ce1a5a2e6b5b199c0df69a83cf66f1b830ee47e8, but the ticket also

[10:51] <synopsebot> RT#126318 [open]: https://rt.perl.org/Ticket/Display.html?id=126318 [BUG] trait 'is default' on attributes has no effect

[10:51] <Geth> ¦ roast: mentions :D constraints so this commit should top it off.

[10:51] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/38c9dc5fd5

[10:51] <Geth> ¦ doc: aa8d02804c | (JJ Merelo)++ | doc/Type/List.pod6

[10:51] <Geth> ¦ doc: Explains correctly corner case of reduce

[10:51] <Geth> ¦ doc: 

[10:51] <Geth> ¦ doc: Adds example. Closes #1399

[10:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/aa8d02804c

[10:51] <synopsebot> Link: https://doc.perl6.org/type/List

[10:54] *** ufobat left
[10:57] *** jmerelo left
[10:58] *** voegelas joined
[10:58] *** kurahaupo left
[10:58] *** kurahaupo joined
[10:59] <Zoffix> ^_^ kitty https://temp.perl6.party/IMG_20180407_065335.jpg

[11:00] *** lizmat left
[11:02] <timotimo> haha what

[11:02] <timotimo> how does that even make sense?

[11:02] *** eliasr joined
[11:02] *** lizmat joined
[11:04] <squashable6> 🍕 jstuder-gh++ wrote a comment on “Weirdness on negative char class “[ ]””: https://github.com/rakudo/rakudo/issues/1622#issuecomment-379461409

[11:04] <squashable6> 🍕🍕🍕  First contribution by jstuder-gh++! ♥

[11:04] *** margeas joined
[11:05] <Zoffix> Like this: https://temp.perl6.party/IMG_20180407_065412.jpg :)

[11:06] <Geth> ¦ roast: 82d3a883a5 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S02-types/whatever.t

[11:06] <Geth> ¦ roast: Extra test for compile time Whatever curry

[11:06] <Geth> ¦ roast: 

[11:06] <Geth> ¦ roast: Tests for the issue were added in 79dff96fc9f383616dd192ef016725395323887b,

[11:06] <Geth> ¦ roast: topping it off with one extra test to close RT#130505.

[11:06] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/82d3a883a5

[11:06] <synopsebot> RT#130505 [open]: https://rt.perl.org/Ticket/Display.html?id=130505 [LTA] double SORRY (BEGIN (1, 2)[*-1])

[11:06] <Geth> ¦ roast: 75897d5070 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S02-names/is_default.t

[11:06] <Geth> ¦ roast: Use %() instead of {} in recently committed test

[11:06] <Geth> ¦ roast: 

[11:06] <Geth> ¦ roast: Doesn't make any difference, I just like it better this way.

[11:06] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/75897d5070

[11:07] *** HaraldJoerg left
[11:08] <Geth> ¦ roast: dogbert17++ created pull request #410: Add tests for RT #129142

[11:08] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/410

[11:08] <squashable6> 🍕 dogbert17++ opened pull request “Add tests for RT #129142”: https://github.com/perl6/roast/pull/410

[11:08] <squashable6> 🍕🍕🍕  First contribution by dogbert17++! ♥

[11:08] <synopsebot> RT#129142 [open]: https://rt.perl.org/Ticket/Display.html?id=129142 [BUG] Parse error when coercing an enum from a coercion of an enum from an int

[11:09] <squashable6> 🍕 zoffixznet++ submitted a review on pull request “Add tests for RT #129142”: https://github.com/perl6/roast/pull/410#pullrequestreview-110252950

[11:09] <squashable6> 🍕 zoffixznet++ wrote a comment on a review for “Add tests for RT #129142”: https://github.com/perl6/roast/pull/410#discussion_r179914421

[11:12] *** kurahaupo left
[11:13] *** pierre_ joined
[11:13] *** kurahaupo joined
[11:13] <squashable6> 🍕 dogbert17++ synchronize pull request “Add tests for RT #129142”: https://github.com/perl6/roast/pull/410

[11:13] <squashable6> 🍕 AlexDaniel++ submitted a review on pull request “Add tests for RT #129142”: https://github.com/perl6/roast/pull/410#pullrequestreview-110253063

[11:13] <squashable6> 🍕 AlexDaniel++ wrote a comment on a review for “Add tests for RT #129142”: https://github.com/perl6/roast/pull/410#discussion_r179914511

[11:14] <AlexDaniel> nice, github decided to hide that commit…

[11:14] <AlexDaniel> comment*

[11:14] <Geth> ¦ rakudo: d3eefa21c3 | (Elizabeth Mattijsen)++ | src/core/hash_slice.pm6

[11:14] <Geth> ¦ rakudo: Give %h<a>:delete and %h<a>:delete their own candidate

[11:14] <Geth> ¦ rakudo: 

[11:14] <Geth> ¦ rakudo: Saves 2 allocations per call.  Makes the postcircumfix:<[]> in these

[11:14] <Geth> ¦ rakudo: cases about 1.5x as fast.

[11:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d3eefa21c3

[11:15] *** HaraldJoerg joined
[11:16] <squashable6> 🍕 zoffixznet++ wrote a comment on a review for “Add tests for RT #129142”: https://github.com/perl6/roast/pull/410#discussion_r179914560

[11:16] <squashable6> 🍕 zoffixznet++ submitted a review on pull request “Add tests for RT #129142”: https://github.com/perl6/roast/pull/410#pullrequestreview-110253117

[11:17] *** pierre_ left
[11:18] <AlexDaniel> Zoffix: then is it better to use eval-dies-ok here: https://github.com/perl6/roast/commit/38c9dc5fd5339ed434438eb58bae07e7fdd31a1d#diff-d38c7cad248e0f6b4d34eb0d46418655R478 ?

[11:19] <AlexDaniel> or am I being confused about something

[11:20] <Zoffix> m: try ｢class DefaultTyped { has Int:D $.a is rw is default(Nil) }｣.EVAL; say $!.^name

[11:20] <camelia> rakudo-moar fc1922122: OUTPUT: «X::TypeCheck::Assignment+{X::Comp}␤»

[11:20] <Zoffix> AlexDaniel: well, yeah, not only can you test the actual exception, it'll also be faster to run the test, since it don't got to spawn a whole 'nuther process

[11:21] <AlexDaniel> right. Will change it ASAP, thanks

[11:21] <Zoffix> AlexDaniel: actually, throws-like, not eval-dies-ok

[11:21] <Zoffix> m: use Test; throws-like ｢class DefaultTyped { has Int:D $.a is rw is default(Nil) }｣, X::TypeCheck::Assignment

[11:21] <camelia> rakudo-moar fc1922122: OUTPUT: «    1..2␤    ok 1 - 'class DefaultTyped { has Int:D $.a is rw is default(Nil) }' died␤    ok 2 - right exception type (X::TypeCheck::Assignment)␤ok 1 - did we throws-like X::TypeCheck::Assignment?␤»

[11:21] <AlexDaniel> oh

[11:21] <AlexDaniel> even better

[11:22] *** wamba joined
[11:23] *** kurahaupo left
[11:23] *** kurahaupo joined
[11:27] <AlexDaniel> Zoffix: one more question :) what should be done with stuff that was known to segfault, like https://github.com/perl6/roast/commit/ef7b0da83d#diff-72b101ff62a0582672d4de2788ffa1bbL77

[11:27] <squashable6> 🍕 lizmat++ wrote a comment on commit d3eefa21c339: https://github.com/rakudo/rakudo/commit/d3eefa21c3393f3252cf456ad488b36dd4317fc9#commitcomment-28466495

[11:27] <AlexDaniel> Zoffix: like, is it ok to bring the whole test file down when it starts doing that again, or should wrap it into is_run

[11:27] <AlexDaniel> we*

[11:28] <squashable6> 🍕 dogbert17++ synchronize pull request “Add tests for RT #129142”: https://github.com/perl6/roast/pull/410

[11:28] <Zoffix> I think it's fine to bring the test down

[11:28] <synopsebot> RT#129142 [open]: https://rt.perl.org/Ticket/Display.html?id=129142 [BUG] Parse error when coercing an enum from a coercion of an enum from an int

[11:29] <AlexDaniel> Zoffix: OK

[11:29] <dogbert17> Zoffix, AlexDaniel: attempt 2, https://github.com/perl6/roast/pull/410

[11:32] <Zoffix> dogbert17: you placed the enums into eval-lives-ok, but you left old copies outside it. Those need to be removed. And when that's done, I'm guessing you'll see the error about undefined routine FF, and that's cause you used double quotes and that interpolates `{}`

[11:32] <Zoffix> Use single quotes or ｢｣

[11:32] <squashable6> 🍕 AlexDaniel++ submitted a review on pull request “Add tests for RT #129142”: https://github.com/perl6/roast/pull/410#pullrequestreview-110253357

[11:32] <squashable6> 🍕 AlexDaniel++ wrote a comment on a review for “Add tests for RT #129142”: https://github.com/perl6/roast/pull/410#discussion_r179914779

[11:32] <Zoffix> dogbert17: and the `is-deeply FF(GG(2)).perl` too should go inside the eval or just go

[11:33] * Zoffix &

[11:33] *** Zoffix left
[11:33] <AlexDaniel> dogbert17: fwiw probably a good idea to do something like https://gist.github.com/Whateverable/d97f7745277b824d5915d4017835f0ff

[11:33] <AlexDaniel> so that you know that tests behave correctly before and after the fix

[11:34] <AlexDaniel> well, I mean

[11:34] <AlexDaniel> 6c: use Test; my enum FF <zero one two three>; my enum GG <fee fie foo fum>; eval-lives-ok "my enum FF <zero one two three>; my enum GG <fee fie foo fum>; { FF(GG(2)).perl }", 'Coercing an enum from a coercion of an enum from an int works'; is-deeply FF(GG(2)).perl, "FF", "Coercing an enum from a coercion of an enum returns expected result";

[11:34] <AlexDaniel> this will have cleaner output

[11:34] <committable6> AlexDaniel, https://gist.github.com/b99b71541c05c13c91cd2cbe6c8b0647

[11:35] *** kurahaupo left
[11:35] <dogbert17> you guys are tough :)

[11:35] *** kurahaupo joined
[11:36] <Geth> ¦ roast: jstuder-gh++ created pull request #411: Rakudo Issue 1622: Test empty negative char class doesn't fail

[11:36] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/411

[11:36] <squashable6> 🍕 jstuder-gh++ opened pull request “Rakudo Issue 1622: Test …”: https://github.com/perl6/roast/pull/411

[11:38] *** kurahaupo_ joined
[11:40] <lizmat> ok, so I have 2 Bools, and I want to return a Bool that would be True if they're the same, and False if different

[11:41] <squashable6> 🍕 dogbert17++ synchronize pull request “Add tests for RT #129142”: https://github.com/perl6/roast/pull/410

[11:41] <synopsebot> RT#129142 [open]: https://rt.perl.org/Ticket/Display.html?id=129142 [BUG] Parse error when coercing an enum from a coercion of an enum from an int

[11:41] <lizmat> any fast way of dong that ?

[11:41] <dogbert17> Zoffix: third time as i charm :) thx for the feedback

[11:41] * dogbert17 wtf is up with my spelling

[11:42] *** kurahaupo left
[11:43] <AlexDaniel> lizmat: == ?

[11:44] <AlexDaniel> well, define “fast” :)

[11:45] <squashable6> 🍕 smls++ wrote a comment on “Argless default for .classify()”: https://github.com/rakudo/rakudo/issues/1281#issuecomment-379463573

[11:47] *** kurahaupo_ left
[11:47] *** kurahaupo joined
[11:47] *** kurahaupo_ joined
[11:49] <Geth> ¦ roast: 8dfa2644d0 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S02-names/is_default.t

[11:49] <Geth> ¦ roast: Rework the test using throws-like

[11:49] <Geth> ¦ roast: 

[11:49] <Geth> ¦ roast: Not only we now test the actual exception, it'll also be faster.

[11:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/8dfa2644d0

[11:51] *** kurahaupo left
[11:52] <Geth> ¦ roast: 933382e1c9 | (Zoffix Znet)++ | S02-names/is_default.t

[11:52] <Geth> ¦ roast: Remove unneeded Test::Util use

[11:52] <Geth> ¦ roast: 

[11:52] <Geth> ¦ roast: (missing `use lib` for it in the first place)

[11:52] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/933382e1c9

[11:53] <AlexDaniel> ah damn, yes thanks

[11:53] <Geth> ¦ roast: e7047f191a | (Zoffix Znet)++ | S04-statements/for.t

[11:53] <Geth> ¦ roast: Remove trailing whitespace

[11:53] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e7047f191a

[11:55] <squashable6> 🍕 AlexDaniel++ merged pull request “Rakudo Issue 1622: Test …”: https://github.com/perl6/roast/pull/411

[11:55] <Geth> ¦ roast: 7ef189a3db | (Jeremy Studer)++ | S05-mass/stdrules.t

[11:55] <Geth> ¦ roast: Test empty negative char class doesn't fail

[11:55] <Geth> ¦ roast: 

[11:55] <Geth> ¦ roast: Doesn't throw 'Iteration past end of iterator'.

[11:55] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/7ef189a3db

[11:55] <Geth> ¦ roast: e784cd0807 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | S05-mass/stdrules.t

[11:55] <Geth> ¦ roast: Merge pull request #411 from jstuder-gh/empty_neg_cclass

[11:55] <Geth> ¦ roast: 

[11:55] <Geth> ¦ roast: Rakudo Issue 1622: Test empty negative char class doesn't fail

[11:55] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/e784cd0807

[11:56] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Weirdness on negative char class “[ ]””: https://github.com/rakudo/rakudo/issues/1622#issuecomment-379464151

[11:56] <squashable6> 🍕 AlexDaniel++ closed issue “Weirdness on negative char class “[ ]””: https://github.com/rakudo/rakudo/issues/1622

[11:56] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Weirdness on negative char class “[ ]””: https://github.com/rakudo/rakudo/issues/1622#issuecomment-379464184

[11:57] <squashable6> 🍕 AlexDaniel++ reopened issue “Weirdness on negative char class “[ ]””: https://github.com/rakudo/rakudo/issues/1622

[12:00] <squashable6> 🍕 AlexDaniel++ merged pull request “Add tests for RT #129142”: https://github.com/perl6/roast/pull/410

[12:00] <Geth> ¦ roast: 3b1e5fb4f1 | dogbert17++ (committed by Aleks-Daniel Jakimenko-Aleksejev) | S12-enums/basic.t

[12:00] <Geth> ¦ roast: Test nested enum coercion 

[12:00] <Geth> ¦ roast: 

[12:00] <Geth> ¦ roast: Adds tests for RT#129142

[12:01] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3b1e5fb4f1

[12:01] <synopsebot> RT#129142 [open]: https://rt.perl.org/Ticket/Display.html?id=129142 [BUG] Parse error when coercing an enum from a coercion of an enum from an int

[12:01] <dogbert17> AlexDaniel++

[12:02] <AlexDaniel> dogbert17: plz close the ticket :)

[12:03] <dogbert17> AlexDaniel: done

[12:08] <rindolf> lizmat: here?

[12:08] <lizmat> where ?

[12:08] <rindolf> lizmat: on the channel

[12:09] <lizmat> no, I'm in Gummersbach  

[12:09] <rindolf> lizmat: ah

[12:09] <lizmat> how can I help you, rindolf?

[12:10] <rindolf> lizmat: have you written the perl 6 ver of that code yet?

[12:11] <lizmat> what code?

[12:11] <rindolf> lizmat: https://github.com/shlomif/project-euler/tree/master/project-euler/622 - this

[12:13] <lizmat> no, and I don't think I said I would ?

[12:13] <lizmat> I think I said it would be a nice project

[12:13] <lizmat> for *someone*

[12:14] *** pierre_ joined
[12:16] <rindolf> lizmat: ah, i see

[12:19] *** pierre_ left
[12:22] *** wamba left
[12:23] <squashable6> 🍕 jstuder-gh++ wrote a comment on “Weirdness on negative char class “[ ]””: https://github.com/rakudo/rakudo/issues/1622#issuecomment-379465588

[12:30] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Weirdness on negative char class “[ ]””: https://github.com/rakudo/rakudo/issues/1622#issuecomment-379465953

[12:30] <squashable6> 🍕 AlexDaniel++ closed issue “Weirdness on negative char class “[ ]””: https://github.com/rakudo/rakudo/issues/1622

[12:32] <Geth> ¦ rakudo: 6ad6dcbb83 | (Elizabeth Mattijsen)++ | src/core/array_slice.pm6

[12:32] <Geth> ¦ rakudo: Give @a[1]:delete and @a[1]:exists their own candidates

[12:32] <Geth> ¦ rakudo: 

[12:32] <Geth> ¦ rakudo: Saves 2 allocations per call.  Makes the postcircumfix:<[]> in these

[12:32] <Geth> ¦ rakudo: cases about 1.5x as fast.

[12:32] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/6ad6dcbb83

[12:43] *** Zoffix joined
[12:43] <Zoffix> lizmat: maybe nqp::p6bool(nqp::eqaddr(nqp::decont($a), nqp::decont($b)) ?

[12:44] <Zoffix> oh that was an hour ago :}

[12:52] *** wamba joined
[12:54] *** Highbreed joined
[12:56] *** pierre_ joined
[13:00] *** pierre_ left
[13:01] *** dmaestro joined
[13:02] *** Highbreed left
[13:04] <Geth> ¦ roast: 1a42efd4ce | (Aleks-Daniel Jakimenko-Aleksejev)++ | S03-operators/repeat.t

[13:04] <Geth> ¦ roast: Test xx not keeping containers around

[13:04] <Geth> ¦ roast: 

[13:04] <Geth> ¦ roast: Closes RT#130941.

[13:04] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1a42efd4ce

[13:04] <synopsebot> RT#130941 [open]: https://rt.perl.org/Ticket/Display.html?id=130941 infix:<xx> keeps containers around since October, resulting in confusing behaviour

[13:24] *** skids joined
[13:30] <Geth> ¦ roast: 40edf6d2c9 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S32-io/out-buffering.t

[13:30] <Geth> ¦ roast: Test that open handles are autoclosed on exit

[13:30] <Geth> ¦ roast: 

[13:30] <Geth> ¦ roast: Resolves RT#132030.

[13:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/40edf6d2c9

[13:30] <synopsebot> RT#132030 [open]: https://rt.perl.org/Ticket/Display.html?id=132030 [TESTNEEDED] [REGRESSION] Broken Text::CSV tests and possibly other ecosystem fallout (buffering)

[13:34] <AlexDaniel> buggable: pizza

[13:34] <buggable> AlexDaniel, enjoy this slice of Margherita pizza, my friend! Yummy 🍕

[13:36] <skids> .oO(margarita pizza) ... .oO(eww)

[13:37] <Zoffix> buggable: pizza

[13:37] <buggable> Zoffix, enjoy this slice of Golden Chicken Delight pizza, my friend! Yummy 🍕

[13:37] <Zoffix> yum

[13:37] *** Zoffix left
[13:42] *** dpk joined
[13:42] *** pierre_ joined
[13:43] *** pierre_ left
[13:43] *** pierre_ joined
[13:49] *** gabiruh left
[13:50] <Geth> ¦ roast: a469bf2b84 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S32-io/out-buffering.t

[13:50] <Geth> ¦ roast: Bump test plan

[13:50] <Geth> ¦ roast: 

[13:50] <Geth> ¦ roast: Oops.

[13:50] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/a469bf2b84

[13:50] *** gabiruh joined
[13:53] *** domidumont left
[14:02] *** voegelas left
[14:11] *** pecastro joined
[14:11] *** pecastro_ left
[14:19] *** |oLa| joined
[14:19] *** MilkmanDan left
[14:19] *** MilkmanDan joined
[14:33] <Geth> ¦ rakudo: 617624f592 | (Elizabeth Mattijsen)++ | tools/build/NQP_REVISION

[14:33] <Geth> ¦ rakudo: Bump NQP to get the latest micro-ops I did

[14:33] <Geth> ¦ rakudo: 

[14:33] <Geth> ¦ rakudo: Perhaps some people will notice in some applications

[14:33] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/617624f592

[14:33] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-57-g05f45eb...2018.03-65-g9b75f67

[14:34] <lizmat> going to be afk until much later today&

[14:34] *** lizmat left
[14:37] <Geth> ¦ doc: 5c48855aa7 | cfa++ | writing-docs/STYLEGUIDE.md

[14:37] <Geth> ¦ doc: Remove trailing whitespace.

[14:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5c48855aa7

[14:37] *** AlexDaniel left
[14:42] <TimToady> m: say [-] 10

[14:42] <camelia> rakudo-moar 6ad6dcbb8: OUTPUT: «-10␤»

[14:42] <TimToady> that looks very wrong to me

[14:42] <TimToady> m: say [/] 10

[14:42] <camelia> rakudo-moar 6ad6dcbb8: OUTPUT: «10␤»

[14:42] <TimToady> that one's right

[14:43] *** zakharyas joined
[14:46] *** zakharyas left
[14:46] *** HaraldJoerg left
[14:48] *** zakharyas joined
[14:48] *** zakharyas left
[14:49] *** zakharyas joined
[14:50] *** AlexDaniel joined
[14:51] <TimToady> bisectable6: say [-] 10

[14:51] <bisectable6> TimToady, Bisecting by output (old=2015.12 new=617624f) because on both starting points the exit code is 0

[14:52] <bisectable6> TimToady, bisect log: https://gist.github.com/5922f3217f51e456aad956d7c98839e3

[14:52] <bisectable6> TimToady, (2016-08-30) https://github.com/rakudo/rakudo/commit/b1c444f0622bc348a2e860a43faa6d72e9a11558

[14:54] *** Wenjie left
[14:55] *** zakharyas left
[14:56] <TimToady> m: say infix:<->(10)

[14:56] <camelia> rakudo-moar 617624f59: OUTPUT: «-10␤»

[14:56] <TimToady> huh

[15:02] *** cfa joined
[15:02] <cfa> morning all

[15:05] *** mcmillhj joined
[15:08] *** domidumont joined
[15:09] *** Wenjie joined
[15:09] <Geth> ¦ roast: d78f33966c | (Aleks-Daniel Jakimenko-Aleksejev)++ | S04-statements/for.t

[15:09] <Geth> ¦ roast: Test assignment to holes when iterating arrays

[15:09] <Geth> ¦ roast: 

[15:09] <Geth> ¦ roast: Closes RT#126312.

[15:09] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d78f33966c

[15:09] <synopsebot> RT#126312 [open]: https://rt.perl.org/Ticket/Display.html?id=126312 [BUG] `for @a` is not creating containers for uninitialized elements

[15:09] <AlexDaniel> c: b1c444f062^,b1c444f062 say [-] 10

[15:09] <committable6> AlexDaniel, ¦b1c444f062^: «10␤» ¦b1c444f: «-10␤»

[15:10] *** Wenjie left
[15:11] *** mcmillhj left
[15:13] <TimToady> apparently we're testing for the incorrect behavior in t/spec/S03-operators/u2212-minus.t

[15:16] <AlexDaniel> squashable6: status

[15:16] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈20 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[15:17] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/f477beac993a6530d8ba4903deb541b0

[15:18] <Geth> ¦ rakudo: edbbc44262 | TimToady++ | src/core/Numeric.pm6

[15:18] <Geth> ¦ rakudo: infix:<->($n) should not negate

[15:18] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/edbbc44262

[15:18] <squashable6> 🍕🍕🍕  First contribution by TimToady++! ♥

[15:19] <cfa> ha ha

[15:19] * TimToady is a noobee

[15:19] <cfa> :)

[15:24] <AlexDaniel> c: b050d5e319^,b050d5e319 say infix:<->(10)

[15:24] <committable6> AlexDaniel, ¦b050d5e319^: «10␤» ¦b050d5e: «-10␤»

[15:25] <AlexDaniel> (2015-12-17) https://github.com/rakudo/rakudo/commit/b050d5e31910a19026b434ce1d94aab62c2fc949

[15:27] <Geth> ¦ roast: f259c5e323 | TimToady++ | S03-operators/u2212-minus.t

[15:27] <Geth> ¦ roast: single arg version of subtraction shouldn't negate

[15:27] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/f259c5e323

[15:44] *** zakharyas joined
[15:55] *** Zoffix joined
[15:56] <cfa> TimToady: hmm, isn't - left associative, so reduction with - would be a left fold?

[15:56] <Zoffix> TimToady: any comments on addition of MidRat type that's allomorph of Rat and FatRat (and MidRatStr that's Str/MidRat): https://github.com/rakudo/rakudo/blob/master/docs/archive/2018-03-04--Polishing-Rationals.md#i-propose

[15:56] <cfa> (i'd expect left fold to yield -10 in this case, right to yield 10)

[15:57] <Zoffix> m: dd infix:<->

[15:57] <camelia> rakudo-moar edbbc4426: OUTPUT: «0␤»

[15:58] <Zoffix> makes sense for infix:<->(a) to be like `a - 0`

[15:58] <cfa> i would think 0-a vs. a-0 depends on assoc

[15:58] <cfa> for the base case

[16:00] <Zoffix> It's 2-arity, 1-arity, 0-arity;  $a - $b; $a - 0; 0 - 0; => $a - b; $a; 0

[16:01] <Zoffix> In fact, if it were right assoc, then I'd expect -$a for 1-arity case; because $a - 0 => -$a

[16:02] <cfa> $a - 0 => $a :)

[16:03] <Zoffix> Only if you're going left; If you're going right, it's -$a

[16:08] <Zoffix> Yeah, you're right actually, both ways it's gonna be possitive

[16:09] <Zoffix> m: sub infix:<—> ($a = 0, $b = 0) is assoc<right> { $a - $b }; say infix:<—>

[16:09] <camelia> rakudo-moar edbbc4426: OUTPUT: «0␤»

[16:09] <Zoffix> m: sub infix:<—> ($a = 0, $b = 0) is assoc<right> { $a - $b }; say infix:<—> 1

[16:09] <camelia> rakudo-moar edbbc4426: OUTPUT: «1␤»

[16:09] <Zoffix> m: sub infix:<—> ($a = 0, $b = 0) is assoc<right> { $a - $b }; say 1 — 10 — 100

[16:09] <camelia> rakudo-moar edbbc4426: OUTPUT: «91␤»

[16:09] *** pierre_ left
[16:15] <cfa> hmm

[16:15] <cfa> m: sub infix:<@> ($a, $b) is assoc<left> { [$a, $b] }; say [@] 10

[16:15] <camelia> rakudo-moar edbbc4426: OUTPUT: «10␤»

[16:15] <cfa> m: sub infix:<@> ($a, $b) is assoc<right> { [$a, $b] }; say [@] 10

[16:15] <camelia> rakudo-moar edbbc4426: OUTPUT: «Too few positionals passed; expected 2 arguments but got 1␤  in sub infix:<@> at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[16:16] <Zoffix> heh

[16:16] <cfa> i'd expect either both to work or both to fail given the lack of supplied identity

[16:16] *** skids left
[16:16] <cfa> i'm probably missing something obvious

[16:16] <Zoffix> Like this being a bug? :P

[16:17] <cfa> :)

[16:17] <Zoffix> s: &prefix:<[(elem)]>, \(10)

[16:17] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/edbbc4426/src/core/metaops.pm6#L459

[16:18] <Zoffix> s: do { sub infix:<@> ($a, $b) is assoc<left> { [$a, $b] }; &infix:<[@]> }, \(10)

[16:18] <SourceBaby> Zoffix, Something's wrong: ␤ERR: ===SORRY!=== Error while compiling -e␤Undeclared routine:␤    infix:<[@]> used at line 6. Did you mean 'infix:<+|>', 'infix:<∖>', 'infix:<ne>', 'infix:<⚛-=>', 'infix:<o>'?␤␤

[16:18] <Zoffix> :/

[16:18] *** espadrine_ joined
[16:19] <Zoffix> s: do { sub infix:<—> ($a, $b) is assoc<left> { [$a, $b] }; &infix:<[—]> }, \(10)

[16:19] <SourceBaby> Zoffix, Something's wrong: ␤ERR: ===SORRY!=== Error while compiling -e␤Undeclared routine:␤    infix:<[—]> used at line 6. Did you mean 'infix:<+|>', 'infix:<∖>', 'infix:<ne>', 'infix:<⚛-=>', 'infix:<o>'?␤␤

[16:19] <Zoffix> why is it calling it :/

[16:20] <Zoffix> oh, reduce ops don't get auto-genned? :/

[16:21] *** wamba left
[16:22] *** dogbert17 left
[16:31] <TimToady> well, METAOP_REDUCE_LEFT checks for the 1-arg case, while METAOP_REDUCE_RIGHT doesn't

[16:32] <TimToady> there's not actually much call for the built-in right-associative operators in real code, so nobody ever noticed that before

[16:32] <Zoffix> mhm

[16:33] <TimToady> m: say infix:<**>(42)

[16:33] <camelia> rakudo-moar edbbc4426: OUTPUT: «42␤»

[16:33] *** wamba joined
[16:33] <TimToady> at least the support is there in that case

[16:35] <Zoffix> Basically this https://github.com/rakudo/rakudo/blob/master/src/core/metaops.pm6#L196-L198 needs to be stuck here: https://github.com/rakudo/rakudo/blob/master/src/core/metaops.pm6#L393 (and maybe triangle cases need it too) if anyone wants to do it

[16:35] * Zoffix drops to bed

[16:35] *** Zoffix left
[16:39] <Geth> ¦ roast: jstuder-gh++ created pull request #412: Add subtest for lazy array cmp

[16:39] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/412

[16:39] <squashable6> 🍕 jstuder-gh++ opened pull request “Add subtest for lazy array cmp”: https://github.com/perl6/roast/pull/412

[16:40] *** pierre_ joined
[16:43] <TimToady> about the only right-associative built-in you *might* want a variadic form for is assignment

[16:43] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Add subtest for lazy array cmp”: https://github.com/perl6/roast/pull/412#issuecomment-379482885

[16:43] <squashable6> 🍕 AlexDaniel++ merged pull request “Add subtest for lazy array cmp”: https://github.com/perl6/roast/pull/412

[16:43] <Geth> ¦ roast: c42516bf6d | (Jeremy Studer)++ | S03-operators/cmp.t

[16:43] <Geth> ¦ roast: Add subtest for lazy array cmp

[16:43] <Geth> ¦ roast: 

[16:43] <TimToady> m: my @a = 1,2,3; [=] |@a, 4; say @a

[16:43] <Geth> ¦ roast: Make sure lazies behave the same as their eager counterparts.

[16:43] <camelia> rakudo-moar edbbc4426: OUTPUT: «[4 4 4]␤»

[16:43] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c42516bf6d

[16:43] <Geth> ¦ roast: be3649424f | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | S03-operators/cmp.t

[16:44] <Geth> ¦ roast: Merge pull request #412 from jstuder-gh/lazy_arr_cmp

[16:44] <Geth> ¦ roast: 

[16:44] <Geth> ¦ roast: Add subtest for lazy array cmp

[16:44] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/be3649424f

[16:44] <TimToady> m: my @a = 1,2,3; @a X= 4; say @a

[16:44] <camelia> rakudo-moar edbbc4426: OUTPUT: «[4 4 4]␤»

[16:44] <TimToady> but that's easier

[16:44] *** pierre_ left
[16:45] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Add subtest for lazy array cmp”: https://github.com/perl6/roast/pull/412#issuecomment-379483024

[16:48] *** sauvin left
[16:49] <AlexDaniel> .tell dogbert17 I think it starts working if you put it into a block (e.g. ｢my &x = { ^2 .map: &say }; x｣)

[16:49] <yoleaux> AlexDaniel: I'll pass your message to dogbert17.

[16:49] * AlexDaniel goes for a nap

[16:50] *** smls joined
[16:52] *** sauvin joined
[17:11] *** char_var[buffer] joined
[17:12] *** char_var[buffer] left
[17:13] *** char_var[buffer] joined
[17:14] *** char_var[buffer] left
[17:14] *** zakharyas left
[17:15] *** char_var[buffer] joined
[17:15] *** char_var[buffer] left
[17:16] *** dogbert17 joined
[17:28] *** leont joined
[17:29] <smls> .tell AlexDaniel I've uploaded my codegolf tests here: https://github.com/smls/coding-challenges/tree/master/codegolf

[17:29] <yoleaux> smls: I'll pass your message to AlexDaniel.

[17:34] *** cfa left
[17:46] *** nooninm joined
[17:46] <nooninm> Question on calling a function with and without parenthesis, and a space or no space after the function name.  Can someone explain why the presense of the space causes incorrect output?  Thinking in Perl 6 page 10 > say (1,234,567).WHAT (List) > say ((1,234,567).WHAT) (List) > say(1,234,567).WHAT 1234567  ---> No space is erroneous!  Thinking in Perl 6 page 28 > round 42.45, 1; 42 > round 42.45, .1; 42.5 > round(42.45, .1); 42.5 > rou

[17:47] <nooninm> The carriage returns did not paste into here correctly.

[17:47] <nooninm> Let me try again

[17:47] <nooninm> Question on calling a function with and without parenthesis, and a space or no space after the function name.  Can someone explain why the presense of the space causes incorrect output? \n

[17:48] <nooninm> Thinking in Perl 6 page 10

[17:48] <nooninm> > say (1,234,567).WHAT\n'

[17:48] <nooninm> (List)

[17:48] <nooninm> > say ((1,234,567).WHAT)

[17:48] <nooninm> (List)

[17:48] <nooninm> > say(1,234,567).WHAT

[17:48] <nooninm> 1234567  ---> No space is erroneous!

[17:49] <nooninm> Thinking in Perl 6 page 28

[17:49] <nooninm> > round 42.45, 1;

[17:49] <nooninm> 42

[17:49] <nooninm> > round 42.45, .1;

[17:49] <nooninm> 42.5

[17:49] <nooninm> > round(42.45, .1);

[17:49] <nooninm> 42.5

[17:49] <nooninm> > round (42.45, .1);

[17:50] <nooninm> 2   ---> Having a space is erroneous!

[17:50] *** pierre_ joined
[17:50] <nooninm> \n

[17:50] <nooninm> What is going on in these two cases?

[17:50] <nooninm> Thanks

[17:50] <TimToady> m: say "foo", "bar", "baz"

[17:50] <camelia> rakudo-moar edbbc4426: OUTPUT: «foobarbaz␤»

[17:50] <TimToady> say does not put spaces between its arguments

[17:52] <smls> nooninm:  In   round (42.45, .1)   you're creating a List object   (42.45, .1)  and then passing it to the round function as a single argument.

[17:52] <TimToady> m: say +(42.45, .1)

[17:52] <camelia> rakudo-moar edbbc4426: OUTPUT: «2␤»

[17:52] <nooninm> > say does not put spaces between its arguments

[17:52] <TimToady> and it's taking the numeric value of the list, which is its length

[17:52] <TimToady> m: say 1,2,3

[17:52] <camelia> rakudo-moar edbbc4426: OUTPUT: «123␤»

[17:53] <TimToady> see, no spaces

[17:53] <TimToady> 1,234,567 is a list of 3 numbers, not one number

[17:53] <nooninm> In my first example, not having a space causes an erroneous result.

[17:53] <nooninm> What is the underlying rule?

[17:53] <smls> nooninm: The only way parentheses are parsed as an argument list, is if the opening paren immediately follows the function name, without space.

[17:54] <smls> That's just how it's defined.

[17:54] <TimToady> the say binds tighter than the .WHAT

[17:54] *** pierre_ left
[17:54] <nooninm> Ah.  Okay.

[17:54] <TimToady> any foo() is always taken immediately as a function call

[17:55] <TimToady> even if foo is a reserved word otherwise

[17:55] <TimToady> m: if()

[17:55] <camelia> rakudo-moar edbbc4426: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    if used at line 1␤␤»

[17:56] <nooninm> Thanks

[17:56] <TimToady> so you can make your calls safe even if we add a new keyword in the future

[17:57] <nooninm> Suggestion: These answers should be in a document somewhere.  They probably already are!

[17:58] <nooninm> I'm only on page 28.  I should not expect to have all the answers yet!

[17:58] <TimToady> :)

[17:58] <nooninm> Bye

[17:58] *** nooninm left
[17:59] *** MilkmanDan left
[18:00] *** |oLa| left
[18:02] <dogbert17> m: say "abcde" ~~ / ab <![e]> cde | ab.. / # is this correct?

[18:02] <yoleaux> 16:49Z <AlexDaniel> dogbert17: I think it starts working if you put it into a block (e.g. ｢my &x = { ^2 .map: &say }; x｣)

[18:02] <camelia> rakudo-moar edbbc4426: OUTPUT: «｢abcd｣␤»

[18:03] *** jmerelo joined
[18:03] <dogbert17> does the '<![e]>' do something with the LTM matching?

[18:04] <El_Che> Perl6 gurus are more expensive than Perl gurus: https://www.upwork.com/hire/perl6-gurus/ https://www.upwork.com/hire/perl-gurus/

[18:04] <El_Che> funny

[18:05] <jmerelo> But their tags say "Perl", right? 

[18:06] *** MilkmanDan joined
[18:06] <El_Che> but you get other people on the regular perl url

[18:06] <TimToady> negative lookaheads aren't supposed to influence LTM, so could be a bug

[18:06] <El_Che> maybe the added perl 6 in their profile

[18:06] <jmerelo> El_Che: Maybe they just put the most expensive Perl gurus as stand-ins for Perl 6, 

[18:07] <El_Che> that's a good sign, right? :)

[18:07] <TimToady> m: say "abcde" ~~ / ab <!before 'e'> cde | ab.. /

[18:07] <camelia> rakudo-moar edbbc4426: OUTPUT: «｢abcd｣␤»

[18:07] <El_Che> It's look a little like a order a bride/programmer thing :)

[18:07] <jmerelo> El_Che: :-)

[18:07] <El_Che> s

[18:08] <TimToady> bisectable6: say "abcde" ~~ / ab <!before 'e'> cde | ab.. /

[18:08] <bisectable6> TimToady, On both starting points (old=2015.12 new=edbbc44) the exit code is 0 and the output is identical as well

[18:08] <bisectable6> TimToady, Output on both points: «｢abcd｣␤»

[18:09] <dogbert17> TimToady: there is indeed a very old RT about this, from the Parrot days. 

[18:09] <jmerelo> El_Che: they seem to have "Perl 6" on their resumés... So I guess so. Just the best of the best.

[18:09] <jmerelo> El_Che: https://www.upwork.com/o/profiles/users/_~01b51a5003b424af16/

[18:09] <jmerelo> El_Che: come to think of it, it's just that one... 

[18:10] <squashable6> 🍕 jstuder-gh++ wrote a comment on “Add subtest for lazy array cmp”: https://github.com/perl6/roast/pull/412#issuecomment-379488504

[18:11] <dogbert17> I thought that something might have changed wrt to the influence of lookaheads after the RT was written (in 2014)

[18:11] <El_Che> I remember his nick on the channel

[18:12] <jmerelo> El_Che: I've PR'ed several of his modules too...

[18:12] <TimToady> dinner &

[18:12] <El_Che> bye TimToady 

[18:12] <jmerelo> TimToady: bon appetit

[18:13] <smls> El_Che, TimToady: Maybe related to https://rt.perl.org/Public/Bug/Display.html?id=122951 ?

[18:21] *** pierre_ joined
[18:25] *** pierre_ left
[18:26] *** mwhisenhunt joined
[18:34] *** darutoko left
[18:35] *** zakharyas joined
[18:37] *** zakharyas left
[18:37] *** zakharyas joined
[18:44] *** MilkmanDan left
[18:57] *** pierre_ joined
[18:58] *** MilkmanDan joined
[19:02] *** pierre_ left
[19:02] *** domidumont left
[19:03] <jmerelo> p6: 

[19:03] <jmerelo> my $animal="quaggas"; say 'These animals look like \qq[$animal]'; say 'These animals are \qqw[$animal or zebras]';

[19:03] <evalable6> jmerelo, rakudo-moar edbbc4426: OUTPUT: «These animals look like quaggas␤These animals are quaggas or zebras␤»

[19:04] *** okl joined
[19:05] *** TEttinger joined
[19:05] *** MilkmanDan left
[19:06] *** okl left
[19:07] *** leah2 left
[19:09] <Geth> ¦ doc: afc3593c05 | (JJ Merelo)++ | doc/Language/quoting.pod6

[19:09] <Geth> ¦ doc: Adds literal escaping constructs closes #1280

[19:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/afc3593c05

[19:09] <synopsebot> Link: https://doc.perl6.org/language/quoting

[19:10] *** MilkmanDan joined
[19:11] *** zakharyas left
[19:11] *** zakharyas joined
[19:15] *** jmerelo left
[19:19] *** leah2 joined
[19:36] *** zakharyas left
[19:36] *** zakharyas joined
[19:36] * timotimo back at the mic

[19:48] *** TreyHarris joined
[19:51] *** lizmat joined
[19:56] *** ufobat joined
[20:00] *** mcmillhj joined
[20:00] *** pierre_ joined
[20:05] *** pierre_ left
[20:06] <FROGGS> timotimo: https://xkcd.com/785/

[20:06] *** zakharyas left
[20:12] *** pmurias joined
[20:24] *** mcmillhj left
[20:26] *** wamba left
[20:26] *** mwhisenhunt left
[20:38] *** dct joined
[20:46] <timotimo> so, i originally joked i was taking leftover cake home for the cats

[20:47] <timotimo> but i actually forgot to take the cakes off of the shelf

[20:47] <timotimo> and of course no shelf in the whole apartment is tall enough to prevent the cat from getting everything on it

[20:59] <squashable6> 🍕 0racle++ wrote a comment on “Argless default for .classify()”: https://github.com/rakudo/rakudo/issues/1281#issuecomment-379498847

[20:59] <squashable6> 🍕🍕🍕  First contribution by 0racle++! ♥

[21:00] *** mcmillhj joined
[21:01] *** rindolf left
[21:05] *** mcmillhj left
[21:10] *** pierre_ joined
[21:15] *** pierre_ left
[21:21] *** mcmillhj joined
[21:26] *** mcmillhj left
[21:31] *** mcmillhj joined
[21:36] *** mcmillhj left
[21:38] *** mcmillhj joined
[21:39] *** smls left
[21:43] *** mcmillhj left
[21:44] <squashable6> 🍕 lizmat++ wrote a comment on “Argless default for .classify()”: https://github.com/rakudo/rakudo/issues/1281#issuecomment-379501356

[21:44] <squashable6> 🍕 lizmat++ closed issue “Argless default for .classify()”: https://github.com/rakudo/rakudo/issues/1281

[21:46] *** pierre_ joined
[21:49] *** mcmillhj joined
[21:51] *** pierre_ left
[21:54] <buggable> New CPAN upload: PDF-Class-0.1.3.tar.gz by WARRINGD https://cpan.metacpan.org/authors/id/W/WA/WARRINGD/Perl6/PDF-Class-0.1.3.tar.gz

[21:57] *** mcmillhj left
[22:07] <squashable6> 🍕🍕🍕  First contribution by FROGGS++! ♥

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray: 36c92d58f8 | (Tobias Leich)++ | 4 files

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray: Support shapes for HAS scoped attributes

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray: 

[22:07] <Geth> ¦ rakudo/inlined-shaped-carray: The shape declaration on an attributes was parsed correctly since a while,

[22:08] <Geth> ¦ rakudo/inlined-shaped-carray: but now this information is passed to the repr composition. The following

[22:08] <Geth> ¦ rakudo/inlined-shaped-carray: is now supported fo CStructs and CPPStructs:

[22:08] <Geth> ¦ rakudo/inlined-shaped-carray: 

[22:08] <Geth> ¦ rakudo/inlined-shaped-carray: use NativeCall;

[22:08] <Geth> ¦ rakudo/inlined-shaped-carray: <…commit message has 6 more lines…>

[22:08] <Geth> ¦ rakudo/inlined-shaped-carray: review: https://github.com/rakudo/rakudo/commit/36c92d58f8

[22:15] <Kaiepi> should there be documentation for nativecall explicitly-manage? there were a couple spots i needed it in the editline bindings i'm writing and i would've had no idea it existed if i hadn't already read the nativecall code

[22:18] <FROGGS> if there are no docs for it sure, that should be done

[22:18] <timotimo> i agree, it should be public knowledge

[22:49] <Geth> ¦ roast: ronaldxs++ created pull request #413: Update S02-types/hash_ref.t test for RT #132238

[22:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/413

[22:49] <squashable6> 🍕 ronaldxs++ opened pull request “Update S02-types/hash_ref.t test for RT #132238”: https://github.com/perl6/roast/pull/413

[22:50] <synopsebot> RT#132238 [new]: https://rt.perl.org/Ticket/Display.html?id=132238 [LTA] $<> and “Corresponding … was at line”

[22:51] *** Zoffix joined
[22:51] <Zoffix> m: say infix:<**>(42)

[22:51] <camelia> rakudo-moar edbbc4426: OUTPUT: «42␤»

[22:51] <Zoffix> Why is that 42 and not 1 tho?

[22:52] *** mcmillhj joined
[22:52] *** pierre joined
[22:53] <Zoffix> ah, ok, nm, I get it

[22:53] *** Zoffix left
[22:57] *** pierre left
[22:57] *** mcmillhj left
[22:58] <squashable6> 🍕 zoffixznet++ wrote a comment on “Update S02-types/hash_ref.t test for RT #132238”: https://github.com/perl6/roast/pull/413#issuecomment-379505173

[23:01] <squashable6> 🍕 zoffixznet++ wrote a comment on “Possible bug in `loop` w…”: https://github.com/rakudo/rakudo/issues/1687#issuecomment-379505285

[23:01] <squashable6> 🍕 zoffixznet++ closed issue “Possible bug in `loop` w…”: https://github.com/rakudo/rakudo/issues/1687

[23:01] *** kurahaupo joined
[23:04] *** lichtkind left
[23:05] *** kurahaupo_ left
[23:06] *** mcmillhj joined
[23:10] *** mcmillhj left
[23:14] <squashable6> 🍕 zoffixznet++ opened issue “META_REDUCE_RIGHT doesn'…”: https://github.com/rakudo/rakudo/issues/1705

[23:16] *** AlexDaniel left
[23:16] *** kurahaupo left
[23:16] *** kurahaupo joined
[23:17] *** lichtkind joined
[23:22] *** pmurias left
[23:25] <squashable6> 🍕 ronaldxs++ wrote a comment on “Update S02-types/hash_ref.t test for RT #132238”: https://github.com/perl6/roast/pull/413#issuecomment-379506319

[23:25] <synopsebot> RT#132238 [new]: https://rt.perl.org/Ticket/Display.html?id=132238 [LTA] $<> and “Corresponding … was at line”

[23:25] *** MilkmanDan left
[23:25] *** mcmillhj joined
[23:26] *** MilkmanDan joined
[23:27] *** kurahaupo left
[23:27] *** kurahaupo joined
[23:30] *** mcmillhj left
[23:31] *** pierre joined
[23:36] *** pierre left
[23:38] *** mcmillhj joined
[23:42] *** kurahaupo left
[23:43] *** kurahaupo joined
[23:43] *** dct left
[23:44] *** mcmillhj left
[23:53] *** kurahaupo left
[23:54] *** kurahaupo joined
[23:54] *** w_richard_w joined
[23:55] *** mcmillhj joined
[23:56] *** lizmat left
[23:59] *** mcmillhj left
