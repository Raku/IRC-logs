[00:00] *** discoD joined
[00:01] <tony-o> lizmat++ on failure is an option...

[00:01] *** p6bannerbot sets mode: +v discoD

[00:04] *** Ven`` left
[00:05] <sena_kun> good night, #perl6

[00:05] <sena_kun> o/

[00:05] *** sena_kun left
[00:16] *** sauvin joined
[00:16] *** p6bannerbot sets mode: +v sauvin

[00:18] *** pecastro left
[00:27] *** w_richard_w joined
[00:28] *** p6bannerbot sets mode: +v w_richard_w

[00:30] *** lichtkind joined
[00:31] *** p6bannerbot sets mode: +v lichtkind

[00:33] *** khisanth_ left
[00:36] *** w_richard_w left
[00:42] <discoD> What should I make of the error "CUnion representation only handles ... and types with representation: ...CStruct..." when the union's members all have CStruct representation?

[00:44] <SmokeMachine> Does anyone has a better name suggestion for https://github.com/FCO/Protocol ?

[00:49] <lucasb> it is just like Go interfaces?

[00:50] <lucasb> just doing "constant protocol = MetamodelX::Protocol;" is enough to register a new keyword?

[00:51] *** awordnot12 joined
[00:51] *** awordnot12 left
[00:52] <SmokeMachine> lucasb: yes

[00:52] <lucasb> I guess you're already decided with "protocol", but just adding some suggestions to the brainstorm: interface, contract, requirement

[00:53] *** khisanth_ joined
[00:53] <SmokeMachine> lucasb: inside a DECLARE inside a EXPORTHOW

[00:53] <SmokeMachine> lucasb: I was thinking on contract too...

[00:53] *** p6bannerbot sets mode: +v khisanth_

[00:55] *** lizmat left
[00:55] <lucasb> "method set"

[00:55] <lucasb> hm, signature set

[00:57] <lucasb> "object expectations"

[00:57] <lucasb> ok, enough :)

[01:00] *** lizmat joined
[01:00] *** p6bannerbot sets mode: +v lizmat

[01:19] <Geth> ¦ ecosystem: d22c44e2f8 | (Fernando Correa de Oliveira)++ (committed using GitHub Web editor) | META.list

[01:19] <Geth> ¦ ecosystem: Adding Protocol to the ecosystem

[01:19] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/d22c44e2f8

[01:29] *** pwr22 joined
[01:30] *** p6bannerbot sets mode: +v pwr22

[01:31] *** devmikey left
[01:36] *** pwr22 left
[01:40] *** pwr22_ joined
[01:41] *** p6bannerbot sets mode: +v pwr22_

[01:46] *** lucasb left
[01:51] *** khisanth_ left
[01:53] *** khisanth_ joined
[01:54] *** p6bannerbot sets mode: +v khisanth_

[02:09] *** discoD left
[02:35] *** random_yanek left
[02:42] *** molaf left
[02:47] *** random_yanek joined
[02:47] *** p6bannerbot sets mode: +v random_yanek

[02:48] <Xliff> Can someone help me decipher this valgrind output?

[02:48] <Xliff> https://gist.github.com/Xliff/8e402d623cea2dc39ceaf245e820d7fd

[02:49] <Xliff> .tell jnthn Well, I finally had time to try your valgrind idea. Have no idea how to parse the results, though. https://gist.github.com/Xliff/8e402d623cea2dc39ceaf245e820d7fd

[02:49] <yoleaux> Xliff: I'll pass your message to jnthn.

[02:54] <timotimo> Xliff: is your moarvm built with --debug=3 or similar? it seems like debug symbols are missing from libmoar.so; also, it can probably help to download debug symbols for the gobject and gtk libraries on top of that; at least in fedora there's a tool for that

[02:54] <timotimo> gotta go!

[02:55] *** molaf joined
[02:55] <Xliff> timotimo: What's the best way to build with --debug=3?

[02:55] *** p6bannerbot sets mode: +v molaf

[02:55] <Xliff> Have a good night

[02:59] *** lizmat left
[03:01] *** MasterDuke joined
[03:02] *** p6bannerbot sets mode: +v MasterDuke

[03:03] <MasterDuke> Xliff: how do you get/build Rakudo?

[03:03] <timotimo> it just needs to get to moarvm's Configure.pl some way, but if that's too troublesome, it'd be enough to add -g3 near the beginning of the CFLAGS in moarvm's Makefile and just "make install" and done

[03:03] *** ufobat_ joined
[03:04] *** p6bannerbot sets mode: +v ufobat_

[03:04] <Xliff> MasterDuke: rakudobrew

[03:05] <Xliff> timotimo: Thanks! Enjoy your night!

[03:07] <MasterDuke> Xliff: then it’s add something like —build-option=‘—moar-option=“—debug=3”’

[03:07] *** ufobat left
[03:07] <Xliff> MasterDuke++

[03:08] <MasterDuke> I’m not remembering the rakudobrew syntax/command correctly, but its help and what I wrote should be able to get you there

[03:10] <MasterDuke> Might also want to check out Zoffix++’s z script, it’s more recommended nowadays than rakudobrew if you really need to build your own

[03:17] *** MasterDuke left
[03:20] *** leont left
[03:31] *** Manifest1 joined
[03:31] *** p6bannerbot sets mode: +v Manifest1

[03:38] *** pwr22_ left
[04:00] <Xliff> m: my ($a, $b, $c) = ^5; say ($a, $b, $c)

[04:00] <camelia> rakudo-moar 8e27d5f5b: OUTPUT: «(0 1 2)␤»

[04:25] *** jmerelo joined
[04:26] *** p6bannerbot sets mode: +v jmerelo

[04:30] <jmerelo> Who's around?

[04:32] <jmerelo> Just a reminder that there're still 10 slots to fill in the Advent Calendar: https://github.com/perl6/mu/blob/master/misc/perl6advent-2018/schedule

[04:34] *** jmerelo left
[04:36] <Poohman> use Cro::HTTP::Client;

[04:36] <Poohman> my $resp = await Cro::HTTP::Client.get('https://www.perl6.org/');

[04:37] <Poohman>  Cannot locate symbol 'SSL_CTX_set_default_verify_paths' in native library 'C:\Users\rajwinf\AppData\Local\Temp\2FC5F7EF8D0AFE518A95E331964D06DDC8B8529A\libeay32.dll'

[04:37] <Poohman> does Cro work in Windows??

[04:49] <holyghost> mostly there are versioning problems with windows libSSL

[04:50] <holyghost> try a non-secure http 

[04:59] <Poohman> hi holyghost : non-secure work

[05:00] *** kerframil left
[05:00] <Poohman> im just reading up and it seems to be something to do with the default certificate path in windows

[05:03] <holyghost> that's a common SSL problem, as you say, you can find a solution online

[05:04] <holyghost> somtimes you can bypass the certificate, but I don't know if that's available in your Cro HTTP module.

[05:05] <holyghost> you have to not use the certificate

[05:05] <holyghost> That sould work AFAIK

[05:10] <holyghost> This might mean hacking Cro to not verify the certificate

[05:43] <Poohman> thanks holyghost. Wonder how jnthn gets it going in his Windows box - heard he also works on Windows sometimes

[05:48] <holyghost> no problem

[05:48] *** w_richard_w joined
[05:48] *** p6bannerbot sets mode: +v w_richard_w

[06:07] *** Sgeo joined
[06:08] *** p6bannerbot sets mode: +v Sgeo

[06:09] *** Sgeo_ left
[06:18] <buggable> New CPAN upload: Mathx-Stat-0.2.8.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[06:18] <holyghost> ^-- marginal keyword bugfix

[06:19] <holyghost> It should be moe stable now

[06:23] <Poohman> holghost: do you know how the dll files are generated in the zef store for modules

[06:23] <Poohman> I think I need the ssleay32.dll to solve this

[06:24] <Poohman> currently it is search in libeay32.dll

[06:24] <holyghost> that's what I meant wit versioning problems of libSSL,

[06:24] <holyghost> you need windows permission for using them IIRC

[06:24] <holyghost> try something like dllfiles.com

[06:25] <Poohman> ok i need to go out - will come back and check

[06:25] <Poohman> thanks for the help

[06:25] <holyghost> np

[06:30] *** w_richard_w left
[06:38] <buggable> New CPAN upload: Uzu-0.2.5.tar.gz by SACOMO http://modules.perl6.org/dist/Uzu:cpan:SACOMO

[06:45] *** Possum left
[07:04] *** Manifest1 left
[07:07] *** domidumont joined
[07:08] *** p6bannerbot sets mode: +v domidumont

[07:25] *** hamhu3_ joined
[07:26] *** p6bannerbot sets mode: +v hamhu3_

[07:27] *** hamhu3 left
[07:27] *** hamhu3_ left
[07:28] *** hamhu3 joined
[07:29] *** p6bannerbot sets mode: +v hamhu3

[07:29] *** Possum joined
[07:30] *** p6bannerbot sets mode: +v Possum

[07:35] *** robertle joined
[07:35] *** p6bannerbot sets mode: +v robertle

[07:40] *** Sgeo left
[07:42] *** Sgeo joined
[07:42] *** p6bannerbot sets mode: +v Sgeo

[07:57] *** Rangana joined
[07:57] *** p6bannerbot sets mode: +v Rangana

[07:58] *** Rangana left
[08:04] *** Sound joined
[08:04] *** p6bannerbot sets mode: +v Sound

[08:14] *** coet[work] joined
[08:14] *** p6bannerbot sets mode: +v coet[work]

[08:43] *** lizmat joined
[08:43] *** p6bannerbot sets mode: +v lizmat

[08:54] *** sena_kun joined
[08:55] *** p6bannerbot sets mode: +v sena_kun

[08:55] *** rindolf joined
[08:56] *** p6bannerbot sets mode: +v rindolf

[09:06] *** holyghost left
[09:10] *** scimon joined
[09:11] *** p6bannerbot sets mode: +v scimon

[09:14] *** zakharyas joined
[09:15] *** p6bannerbot sets mode: +v zakharyas

[09:15] *** imcsk8 left
[09:24] *** blackberry9930 joined
[09:25] *** p6bannerbot sets mode: +v blackberry9930

[09:27] *** kerframil joined
[09:27] *** p6bannerbot sets mode: +v kerframil

[09:27] *** kerframil left
[09:31] *** blackberry9930 left
[09:31] *** blackberry9930 joined
[09:32] *** robertle left
[09:32] *** p6bannerbot sets mode: +v blackberry9930

[09:32] *** Manifest1 joined
[09:32] *** p6bannerbot sets mode: +v Manifest1

[09:38] <masak> I'm probably a bit late to the party, but... any free slots for the advent calendar?

[09:39] <jnthn> masak: Lots, last I heard.

[09:42] *** Bucciarati left
[09:48] *** Manifest1 left
[09:51] <masak> ok, maybe I'll get more ambitious then

[09:52] <jnthn> I'm pondering writing one, but still undecided what about :)

[09:55] <AlexDaniel> huggable: advent

[09:55] <huggable> AlexDaniel, Sign up to write an Advent blog post: https://github.com/perl6/mu/blob/master/misc/perl6advent-2018/schedule

[09:58] <buggable> New CPAN upload: CCLog-0.0.5.tar.gz by CCWORLD http://modules.perl6.org/dist/CCLog:cpan:CCWORLD

[09:59] *** Sound left
[10:03] *** cosimo joined
[10:04] *** p6bannerbot sets mode: +v cosimo

[10:04] <masak> yeah, plenty of space

[10:04] <masak> I was gonna do one 007-related (but Perl 6-focused) advent post, but I'll consider doing more

[10:05] <masak> in general, I have a backlog of blog posts that I need to get out on strangelyconsistent too

[10:19] *** imcsk8 joined
[10:20] *** p6bannerbot sets mode: +v imcsk8

[10:21] *** rindolf left
[10:22] *** Sound joined
[10:22] *** p6bannerbot sets mode: +v Sound

[10:24] *** tobs` joined
[10:25] *** p6bannerbot sets mode: +v tobs`

[10:26] *** Sound left
[10:36] <Xliff> jnthn: Do you have a moment?

[10:37] *** rindolf joined
[10:37] <Xliff> Oh! n/m... I need to recompile rakudo with debug opts.

[10:37] *** p6bannerbot sets mode: +v rindolf

[10:37] <Xliff> m: class A {}; my @a = (A.new, 1, 'b'); say +@a.grep( *.^can('Str').elems );

[10:38] <camelia> rakudo-moar 10693d16f: OUTPUT: «3␤»

[10:38] <Xliff> m: class A {}; my @a = (A.new, 1, 'b'); say @a.grep( *.^can('Str').elems );

[10:38] <camelia> rakudo-moar 10693d16f: OUTPUT: «(A.new 1 b)␤»

[10:38] <Xliff> m: class A {}; my @a = (A.new, 1, 'b'); say @a.grep( *.^can('Str').elems ); say @a[0].Str;

[10:38] <camelia> rakudo-moar 10693d16f: OUTPUT: «(A.new 1 b)␤A<81134016>␤»

[10:41] <Xliff> m: class A {}; my @a = (A.new, 1, 'b'); say @a.grep( *.^can('Int').elems;

[10:41] <camelia> rakudo-moar 10693d16f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3 'b'); say @a.grep( *.^can('Int').elems;7⏏5<EOL>␤    expecting …»

[10:41] <Xliff> m: class A {}; my @a = (A.new, 1, 'b'); say @a.grep( *.^can('Int') ).elems;

[10:41] <camelia> rakudo-moar 10693d16f: OUTPUT: «2␤»

[10:41] <Xliff> m: class A { method Int { 0 }; }; my @a = (A.new, 1, 'b'); say @a.grep( *.^can('Int') ).elems;

[10:41] <camelia> rakudo-moar 10693d16f: OUTPUT: «3␤»

[10:50] *** pwr22_ joined
[10:51] *** p6bannerbot sets mode: +v pwr22_

[10:52] *** lizmat left
[10:55] <SmokeMachine> Does anyone know if LPW will be streamed?

[11:03] *** blackberry9930 left
[11:15] *** kurahaupo joined
[11:16] *** domidumont left
[11:16] *** p6bannerbot sets mode: +v kurahaupo

[11:16] *** lucasb joined
[11:17] *** p6bannerbot sets mode: +v lucasb

[11:18] *** pecastro joined
[11:19] *** p6bannerbot sets mode: +v pecastro

[11:22] <scimon> *shrugs* 

[11:22] <scimon> Possibly. They've got the kit from TPCiG so I don't see why not.

[11:26] *** Bucciarati joined
[11:27] *** p6bannerbot sets mode: +v Bucciarati

[11:27] <Geth> ¦ mu: 6f2b61e91b | (Nigel Hamilton)++ (committed using GitHub Web editor) | misc/perl6advent-2018/schedule

[11:27] <Geth> ¦ mu: Move entry forward by a week and add a new entry

[11:27] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/6f2b61e91b

[11:31] *** lichtkind left
[11:34] *** kurahaupo left
[11:34] *** kurahaupo_ joined
[11:35] *** p6bannerbot sets mode: +v kurahaupo_

[11:36] *** ChoHag left
[11:41] *** vrurg left
[11:44] *** lichtkind joined
[11:45] *** p6bannerbot sets mode: +v lichtkind

[11:48] *** lmy9900 joined
[11:49] *** p6bannerbot sets mode: +v lmy9900

[11:50] *** lmy9900 left
[11:57] *** ChoHag joined
[11:57] *** p6bannerbot sets mode: +v ChoHag

[12:03] <Xliff> m: use NativeCall; sub pp(Pointer $a) { say '1' }; pp(Nil)

[12:03] <camelia> rakudo-moar 10693d16f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Calling pp(Nil) will never work with declared signature (NativeCall::Types::Pointer $a)␤at <tmp>:1␤------> 3veCall; sub pp(Pointer $a) { say '1' }; 7⏏5pp(Nil)␤»

[12:06] *** leont joined
[12:07] *** p6bannerbot sets mode: +v leont

[12:13] *** |Sno| left
[12:13] *** |Sno| joined
[12:14] *** p6bannerbot sets mode: +v |Sno|

[12:18] *** |Sno| left
[12:21] *** leont left
[12:24] *** |Sno| joined
[12:25] *** zakharyas left
[12:25] *** hamhu3_ joined
[12:25] *** p6bannerbot sets mode: +v |Sno|

[12:26] *** p6bannerbot sets mode: +v hamhu3_

[12:26] *** hamhu3 left
[12:27] *** someuser joined
[12:28] *** p6bannerbot sets mode: +v someuser

[12:29] *** pwr22_ left
[12:29] *** |Sno| left
[12:29] *** hamhu3_ left
[12:30] *** hamhu3 joined
[12:30] *** p6bannerbot sets mode: +v hamhu3

[12:36] *** |Sno| joined
[12:36] *** p6bannerbot sets mode: +v |Sno|

[12:40] *** domidumont joined
[12:40] *** domidumont left
[12:41] *** |Sno| left
[12:44] *** |Sno| joined
[12:45] *** p6bannerbot sets mode: +v |Sno|

[12:57] *** domidumont joined
[12:57] *** abraxxa left
[12:58] *** p6bannerbot sets mode: +v domidumont

[13:00] *** ufobat___ joined
[13:00] *** ufobat_ left
[13:00] *** p6bannerbot sets mode: +v ufobat___

[13:02] *** coet[work] left
[14:01] *** zakharyas joined
[14:02] *** p6bannerbot sets mode: +v zakharyas

[14:10] *** tobs` left
[14:12] *** domidumont left
[14:20] *** pwr22_ joined
[14:21] *** p6bannerbot sets mode: +v pwr22_

[14:27] *** leont joined
[14:28] *** p6bannerbot sets mode: +v leont

[14:38] <buggable> New CPAN upload: CCLog-0.0.6.tar.gz by CCWORLD http://modules.perl6.org/dist/CCLog:cpan:CCWORLD

[14:48] *** gregf_ joined
[14:48] *** p6bannerbot sets mode: +v gregf_

[14:55] *** donaldh joined
[14:56] *** p6bannerbot sets mode: +v donaldh

[15:09] <tadzik> hmm

[15:09] <tadzik> nvm

[15:21] <tbrowder___> hi, #perl6

[15:22] <sena_kun> o/

[15:22] <tbrowder___> can anyone tell me how to use “zef install —install-to=“?

[15:23] <tbrowder___> sena_kun: \o

[15:24] <tbrowder___> i’m trying to install Perl6::Parser in ./lib and “—install-to=./lib” doesn’t work

[15:25] *** coet[work] joined
[15:25] *** p6bannerbot sets mode: +v coet[work]

[15:25] <jnthn> tbrowder___: Wild guess, but it might have to be like --install-to=file#./lib (e.g. specify the kind of repo)

[15:25] <tbrowder___> oops, i just remembered i forgot something.,.

[15:25] *** hamhu3_ joined
[15:25] <jnthn> Or inst#./lib

[15:26] *** hamhu3_ left
[15:26] *** hamhu3_ joined
[15:26] <tbrowder___> i think i made a mistake...be back soon

[15:27] *** p6bannerbot sets mode: +v hamhu3_

[15:27] *** hamhu3 left
[15:30] <tbrowder___> no, it didn’t install in ./lib :(

[15:30] <tbrowder___> i’ll try the file thingy

[15:30] <lucasb> tbrowder___: can you run ".say for $*REPO.repo-chain.grep(CompUnit::Repository::Installable)" ? and install on one of the locations shown?

[15:30] *** dotdotdot left
[15:31] <lucasb> for example --install-to="inst#/home/user/.perl6", I wonder if it works :)

[15:32] *** dotdotdot joined
[15:33] *** p6bannerbot sets mode: +v dotdotdot

[15:34] <tbrowder___> well i’m trying to use Perl6::Parser with a locally installed ./perl6 but installing with system zef,

[15:35] <moritz> uhm, don't do that

[15:35] <moritz> install a zef to your local ./perl6

[15:35] <moritz> and use that to install the module

[15:35] *** hamhu3_ left
[15:35] *** hamhu3 joined
[15:36] <tbrowder___> yes, i have that, but i forgot to set my paths, thank for the reminder

[15:36] <tbrowder___> ls *sh

[15:36] <tbrowder___> duh...

[15:36] *** p6bannerbot sets mode: +v hamhu3

[15:40] <tbrowder___> moritz: i think all will be well now, thanks

[15:55] *** kylese joined
[15:56] *** p6bannerbot sets mode: +v kylese

[15:57] <SmokeMachine> tbrowder___: you could try using 6pm...

[15:57] <tbrowder___> 6pm?

[15:58] *** avar left
[15:58] <SmokeMachine> http://github.com/FCO/6pm

[15:58] <SmokeMachine> tbrowder___: ^^

[15:58] <tbrowder___> ah, thanks!

[15:59] <tbrowder___> for now I’m using the source lib and i think that will suffice for a while

[16:00] *** avar joined
[16:00] *** avar left
[16:00] *** avar joined
[16:00] *** p6bannerbot sets mode: +v avar

[16:01] *** p6bannerbot sets mode: +v avar

[16:20] <lucasb> m: use Test; is-deeply \(a=>1,b=>2), \('a'=>1,'b'=>2)

[16:20] <camelia> rakudo-moar 10693d16f: OUTPUT: «not ok 1 - ␤# Failed test at <tmp> line 1␤# expected: \(:a(1), :b(2))␤#      got: \(:a(1), :b(2))␤»

[16:21] *** zacts joined
[16:21] *** p6bannerbot sets mode: +v zacts

[16:21] <lucasb> almost got me insane

[16:23] <lucasb> m: dd .list, .hash given \(a=>1,'b'=>2)

[16:23] <camelia> rakudo-moar 10693d16f: OUTPUT: «(:b(2),)␤Map.new((:a(1)))␤»

[16:24] <jnthn> Hmmm, that expected/got being the same is not ideal

[16:25] <jnthn> \(...) following argument list semantics is correct

[16:25] <timotimo> ooh, that's a good catch

[16:25] <jnthn> But it should really dump itself in a better way

[16:26] <timotimo> aye

[16:27] <timotimo> ooh, i'm running a bit late, so maybe shouldn't go at it immediately :)

[16:27] <lucasb> Maybe Pair.perl could receive tunning arguments: .perl(:pair) to output "'a'=>1", .perl(:named) to output "a=>1"

[16:28] <jnthn> I'd probably just make Capture.perl wrap any Pair in parens if it's in the list part

[16:28] <jnthn> Though yeah, the other way is also an option and might be prettier

[16:28] <jnthn> Though a bit less self-contained

[16:32] *** coet[work] left
[16:35] *** coet[work] joined
[16:35] *** p6bannerbot sets mode: +v coet[work]

[16:43] <SmokeMachine> m: my $a = \(a => 1, 'a' => 1); say $a.Array; say $a.Hash

[16:43] <camelia> rakudo-moar 10693d16f: OUTPUT: «[a => 1]␤{a => 1}␤»

[16:43] <SmokeMachine> m: my $a = \(a => 1, 'a' => 2); say $a.Array; say $a.Hash

[16:43] <camelia> rakudo-moar 10693d16f: OUTPUT: «[a => 2]␤{a => 1}␤»

[16:45] *** molaf left
[16:57] *** natrys joined
[16:58] *** p6bannerbot sets mode: +v natrys

[17:02] *** zakharyas left
[17:13] *** scimon left
[17:22] *** kurahaupo_ left
[17:22] *** kurahaupo joined
[17:22] *** zacts left
[17:23] *** p6bannerbot sets mode: +v kurahaupo

[17:23] *** kurahaupo left
[17:23] *** kurahaupo joined
[17:24] *** p6bannerbot sets mode: +v kurahaupo

[17:25] *** kurahaupo_ joined
[17:26] *** p6bannerbot sets mode: +v kurahaupo_

[17:30] *** kurahaupo left
[17:37] *** Sound joined
[17:37] *** p6bannerbot sets mode: +v Sound

[17:38] *** jsimonet left
[17:38] *** jsimonet joined
[17:39] *** p6bannerbot sets mode: +v jsimonet

[17:44] *** kurahaupo_ left
[17:47] *** kurahaupo joined
[17:48] *** p6bannerbot sets mode: +v kurahaupo

[17:51] *** gregf_ left
[17:56] <Geth> ¦ doc: e336c414e7 | (JJ Merelo)++ | doc/Language/objects.pod6

[17:56] <Geth> ¦ doc: Fixes output as indicated in #2469

[17:56] <Geth> ¦ doc: 

[17:56] <Geth> ¦ doc: However, I'm not so sure now the text (which mentions *arguments*) corresponds to what's there. So I leave this open just in case there's more fixing to make.

[17:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e336c414e7

[17:56] <synopsebot_> Link: https://doc.perl6.org/language/objects

[17:56] <perlbot> Geth: Error: DBD::SQLite::db do failed: database or disk is full at ./plugins/karma_modify.pm line 68. 

[17:59] <timotimo> oh? whoops?

[18:01] <AlexDaniel> ??

[18:01] <AlexDaniel> :D

[18:02] <AlexDaniel> simcop2387: ↑ what's that? :)

[18:02] <timotimo> ah, cool, the owner is here, too

[18:06] <lucasb> that's too much karma

[18:10] *** Sgeo_ joined
[18:10] *** p6bannerbot sets mode: +v Sgeo_

[18:12] *** Sgeo left
[18:12] <AlexDaniel> oh, right, that makes sense :)

[18:13] <AlexDaniel> I was wondering what triggered it, apparently I can read “karma_modify” but not comprehend it :P

[18:13] *** pwr22 joined
[18:13] *** p6bannerbot sets mode: +v pwr22

[18:22] *** hankache joined
[18:23] *** p6bannerbot sets mode: +v hankache

[18:24] *** pwr22_ left
[18:33] *** hankache left
[18:33] *** hankache joined
[18:34] *** p6bannerbot sets mode: +v hankache

[18:35] *** x[LGWs4x4i]uG2N0 left
[18:37] *** hankache_ joined
[18:38] *** zakharyas joined
[18:38] *** p6bannerbot sets mode: +v hankache_

[18:38] *** p6bannerbot sets mode: +v zakharyas

[18:40] *** kmel joined
[18:40] *** hankache left
[18:40] *** p6bannerbot sets mode: +v kmel

[18:41] <simcop2387> AlexDaniel: something ate my disk space.

[18:41] <simcop2387> fixed now

[18:43] *** hankache_ left
[18:47] *** kmel left
[18:50] <simcop2387> (JJ Merelo)++

[18:53] *** |Sno| left
[19:08] *** kurahaupo_ joined
[19:08] *** p6bannerbot sets mode: +v kurahaupo_

[19:11] *** kurahaupo left
[19:12] *** zakharyas left
[19:14] *** kurahaupo_ left
[19:19] *** vrurg joined
[19:20] *** p6bannerbot sets mode: +v vrurg

[19:20] *** kurahaupo joined
[19:21] *** kurahaupo left
[19:21] *** kurahaupo_ joined
[19:22] *** p6bannerbot sets mode: +v kurahaupo_

[19:30] <Poohman> hello all, I have a question regarding the zef installed modules - if the module uses native bindings how does zef now which dll or lib to save in the store 

[19:30] <Poohman> ?

[19:31] <Poohman> does zef also fetch the dlls or does it use the dlls already in the system

[19:31] <Poohman> ?

[19:33] <Poohman> I am having a problem with IO::Socket::Async::SSL - it seems like a change in dll could help - I looked in the module code and I ended up at the "&gen-lib"

[19:35] <Poohman> now trying to figure out how the &gen-lib gets hooked to the dll - it seems like zef has something to do with it- since the dll is stored in a folder under .zef/store

[19:35] <sena_kun> Poohman, I know there are some means to ship a .dll/.so with a module, but not a lot of authors use it iirc.

[19:36] <Poohman> sena_kun : can you point me to some documentation regarding this

[19:39] <sena_kun> for IO::Socket::Async::SSL you need to install manually `ssleay32.dll` and `libeay32.dll` and `libeay32.dll`. How do I know it... Firstly, I've looked at github's page of async openssl bindings: https://github.com/jnthn/p6-io-socket-async-ssl/ <- it uses OpenSSL and there is a `&gen-lib` you saw. But there was not definition for it. So I went to https://github.com/sergot/openssl and looked at https://github.com/sergot/openssl/blob/master/

[19:39] <sena_kun> lib/NativeLib.pm6 <- it has definitions of `gen-lib` and so on.

[19:39] <sena_kun> https://github.com/sergot/openssl/blob/master/lib/OpenSSL/NativeLib.pm6#L10 <- consindering you are using Windows, it's first route here.

[19:40] *** kylese left
[19:41] <sena_kun> but that is a bit odd, https://github.com/sergot/openssl/blob/master/META6.json#L30 <- here, Windows dll are set to be installed by zef. Hmmmm.

[19:42] <sena_kun> Poohman, did you do `zef install IO::Socket::Async::SSL`? Can you post an error at some paste service like e.g. pastebin?

[19:43] *** natrys left
[19:43] <Poohman> sena_kun: I did a zef install IO::Socket::Async:SSL an dhad to jump through some loops to get installed as the it had to extract a tar.gz file 

[19:44] <Poohman> I ended up installing perl5 to get it done using p5tar

[19:44] <Poohman> ill try to for reinstall it again

[19:51] *** coet[work] left
[20:00] *** vike1 left
[20:00] <Poohman> https://pastebin.com/fZNnjBxm

[20:04] *** kurahaupo_ left
[20:04] *** kurahaupo joined
[20:05] <sena_kun> hmm, that is pretty odd. is OpenSSL module installed? as in, output of `perl6 -e 'use OpenSSL::NativeLib'` results into an error or not?

[20:05] *** p6bannerbot sets mode: +v kurahaupo

[20:08] <Poohman> sena_kun: no error - it is installed

[20:10] <sena_kun> hmm, I wonder what is wrong then. :S It is possible to install a module ignoring failing tests, but that is not a real solution, just workaround.

[20:11] <Poohman> i have problems when trying use Cro with https

[20:11] <sena_kun> that's because `Cro::TLS` is either not installed or being broken for you, hmm.

[20:13] <Poohman> this module IO::Socket::Async::SSL is a dependency for cro::HTTP::client

[20:13] <Poohman> I get the error thrown from here

[20:13] <Poohman> Original exception:

[20:13] <Poohman>         Cannot locate symbol 'SSL_CTX_set_default_verify_paths' in native library 'C:\Users\rajwinf\AppData\Local\Temp\2FC5F7EF8D0AFE518A95E331964D06DDC8B8529A\libeay32.dll'

[20:13] <Poohman>           in method setup at C:\rakudo\share\perl6\sources\24DD121B5B4774C04A7084827BFAD92199756E03 (NativeCall) line 283

[20:13] <Poohman>           in method CALL-ME at C:\rakudo\share\perl6\sources\24DD121B5B4774C04A7084827BFAD92199756E03 (NativeCall) line 570

[20:13] <Poohman>           in block  at C:\rakudo\share\perl6\site\sources\9185AF0B330E61F6756B436B9695D044E0F403B7 (IO::Socket::Async::SSL) line 289

[20:13] <sena_kun> Poohman, I can only recommend to open an issue at https://github.com/jnthn/p6-io-socket-async-ssl/issues with a description of what you tried and an error log.

[20:14] <Poohman> issue has been opened in 2017 and I added my comment as well

[20:14] <sena_kun> sorry, don't have a windows box to try to help more.

[20:14] <sena_kun> ah, opened back in 2017. that's unfortunate.

[20:14] <Poohman> sena_kun : no problems - but thank you so much for your help

[20:15] <Poohman> let me keep trying - will get somewhere hopefully

[20:15] <Poohman> but thanks a lot - appreciate the help

[20:23] <jnthn> Could it just be that the version of libssl that's bundled is too old?

[20:23] *** Ven`` joined
[20:23] <sena_kun> ouch

[20:24] <sena_kun> last commit there is 2 years ago.

[20:24] <jnthn> We rely on IO::Socket::SSL for the DLL

[20:24] *** lucasb left
[20:24] *** p6bannerbot sets mode: +v Ven``

[20:24] *** Ven` joined
[20:25] <jnthn> sena_kun: 2 years ago for the bundled DLLs?

[20:25] <sena_kun> jnthn, it was for `OpenSSL`, so if we are using `IO::Socket::SSL` there, then never mind.

[20:25] *** p6bannerbot sets mode: +v Ven`

[20:25] <sena_kun> https://github.com/sergot/openssl/tree/master/resources <-

[20:26] <jnthn> sena_kun: Ah, probably IO::Socket::SSL depends on OpenSSL

[20:26] <jnthn> Maybe we're actually depending on OpenSSL in IO::Socket::Async too; I forget.

[20:26] <sena_kun> well, the reason is that `IO::Socket::SSL` does not bundle anything, and dependencies in `OpenSSL` are two years old.

[20:26] *** kurahaupo left
[20:26] <sena_kun> so.

[20:27] <sena_kun> those need to be updated.

[20:27] *** kurahaupo joined
[20:27] <jnthn> Ah, yeah, OpenSSL is what we depend on in IO::Socket::Async::SSL. Sorry for the confusion :)

[20:27] <jnthn> And yeah, they do.

[20:27] *** p6bannerbot sets mode: +v kurahaupo

[20:28] <jnthn> That'll probably resolve at least that problem.

[20:28] <sena_kun> .seen sergot 

[20:28] <yoleaux> I saw sergot 14 Mar 2018 21:46Z in #perl6: <sergot> ufobat_: ping

[20:28] *** Ven`` left
[20:28] <sena_kun> sergot, ping?

[20:30] *** sno joined
[20:31] *** p6bannerbot sets mode: +v sno

[20:48] *** molaf joined
[20:48] *** movl_ left
[20:48] *** p6bannerbot sets mode: +v molaf

[20:50] *** movl joined
[20:51] *** p6bannerbot sets mode: +v movl

[20:55] *** moony left
[20:55] *** moony joined
[20:55] *** cherryh.freenode.net sets mode: +v moony

[20:55] *** p6bannerbot sets mode: +v moony

[21:03] *** Poohman left
[21:19] *** Ven` left
[21:21] *** vike1 joined
[21:21] *** p6bannerbot sets mode: +v vike1

[21:42] <tbrowder___> can anyone give me a link to lizmat’s article or blog on p6 containers referenced earlier? thanks.

[21:42] <El_Che> opensource.com probably

[21:44] *** patrickb joined
[21:44] *** p6bannerbot sets mode: +v patrickb

[22:01] <Xliff> \o

[22:01] <Xliff> What's the best way to create a Pointer in NativeCall created from a P6 Scalar?

[22:02] <Xliff> m: use NativeCall; my $a = 42; my $b = nativecast(Pointer, $a); say $b; say $b.deref

[22:02] <camelia> rakudo-moar 10693d16f: OUTPUT: «Native call expected return type with CPointer, CStruct, CArray, or VMArray representation, but got a P6opaque (Int)␤  in sub nativecast at /home/camelia/rakudo-m-inst-2/share/perl6/sources/947BDAB9F96E0E5FCCB383124F923A6BF6F8D76B (NativeCall) line …»

[22:02] <Xliff> m: use NativeCall; my uint32 $a = 42; my $b = nativecast(Pointer, $a); say $b; say $b.deref

[22:02] <camelia> rakudo-moar 10693d16f: OUTPUT: «Native call expected return type with CPointer, CStruct, CArray, or VMArray representation, but got a P6opaque (Int)␤  in sub nativecast at /home/camelia/rakudo-m-inst-2/share/perl6/sources/947BDAB9F96E0E5FCCB383124F923A6BF6F8D76B (NativeCall) line …»

[22:03] <Xliff> m: use NativeCall; my uint32 $a = 42; my $b = Pointer.new; say $b; say $b.deref

[22:03] <camelia> rakudo-moar 10693d16f: OUTPUT: «NativeCall::Types::Pointer<NULL>␤Can't dereference a Null Pointer␤  in method deref at /home/camelia/rakudo-m-inst-2/share/perl6/sources/8660F65A7B3492675BB3B2058DB30E411A4C4E54 (NativeCall::Types) line 41␤  in block <unit> at <tmp> line 1␤␤»

[22:03] <Xliff> m: use NativeCall; my uint32 $a = 42; my $b = Pointer[uint32].new; $b.deref = $a;

[22:03] <camelia> rakudo-moar 10693d16f: OUTPUT: «Can't dereference a Null Pointer␤  in method deref at /home/camelia/rakudo-m-inst-2/share/perl6/sources/8660F65A7B3492675BB3B2058DB30E411A4C4E54 (NativeCall::Types) line 58␤  in block <unit> at <tmp> line 1␤␤»

[22:10] <Xliff> m: use NativeCall; my CArray[uint32] $a = CArray[uint32].new(42);

[22:10] <camelia> rakudo-moar 10693d16f: ( no output )

[22:10] <Xliff> m: use NativeCall; my CArray[uint32] $a = CArray[uint32].new(42); say $a;

[22:10] <camelia> rakudo-moar 10693d16f: OUTPUT: «NativeCall::Types::CArray[uint32].new␤»

[22:10] <Xliff> m: use NativeCall; my CArray[uint32] $a = CArray[uint32].new(42); say $a.deref

[22:10] <camelia> rakudo-moar 10693d16f: OUTPUT: «No such method 'deref' for invocant of type 'NativeCall::Types::CArray[uint32]'␤  in block <unit> at <tmp> line 1␤␤»

[22:10] <Xliff> m: use NativeCall; my CArray[uint32] $a = CArray[uint32].new(42); say $a[0]

[22:10] <camelia> rakudo-moar 10693d16f: OUTPUT: «42␤»

[22:19] *** kurahaupo left
[22:34] *** kurahaupo joined
[22:35] *** p6bannerbot sets mode: +v kurahaupo

[22:45] *** Sound left
[22:46] *** kurahaupo left
[22:46] *** kurahaupo joined
[22:47] *** p6bannerbot sets mode: +v kurahaupo

[22:57] *** kurahaupo left
[22:57] *** kurahaupo joined
[22:58] *** p6bannerbot sets mode: +v kurahaupo

[23:07] *** coet[work] joined
[23:07] *** p6bannerbot sets mode: +v coet[work]

[23:08] *** kurahaupo left
[23:08] *** kurahaupo joined
[23:09] *** p6bannerbot sets mode: +v kurahaupo

[23:18] *** kurahaupo left
[23:19] *** kurahaupo joined
[23:20] *** p6bannerbot sets mode: +v kurahaupo

[23:28] *** rindolf left
[23:30] *** kurahaupo left
[23:30] *** kurahaupo joined
[23:31] *** p6bannerbot sets mode: +v kurahaupo

[23:32] *** patrickb left
[23:40] *** lizmat joined
[23:40] *** p6bannerbot sets mode: +v lizmat

[23:42] *** jamesaxl left
[23:42] *** kurahaupo left
[23:42] *** kurahaupo joined
[23:43] *** ferreira joined
[23:43] *** ferreira1 left
[23:43] *** p6bannerbot sets mode: +v kurahaupo

[23:43] *** p6bannerbot sets mode: +v ferreira

[23:44] *** pecastro left
[23:47] *** donaldh left
[23:51] <timotimo> Xliff: i don't think you can have a pointer into a lexical, since the C side isn't able to say "i'm holding on to that closure, please don't GC"

[23:52] <timotimo> using a single-slot CArray is the way to go here, indeed.

[23:52] *** kurahaupo left
[23:52] *** kurahaupo joined
[23:53] *** p6bannerbot sets mode: +v kurahaupo

