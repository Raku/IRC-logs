[00:09] *** Itaipu left
[00:10] *** Itaipu joined
[00:10] *** p6bannerbot sets mode: +v Itaipu

[00:14] *** Itaipu_ joined
[00:14] *** Sound left
[00:14] *** p6bannerbot sets mode: +v Itaipu_

[00:16] *** Itaipu left
[00:22] *** Sound joined
[00:22] *** p6bannerbot sets mode: +v Sound

[00:29] *** cydf left
[00:41] *** Sound left
[00:47] *** pecastro left
[00:50] *** bcheda joined
[00:50] *** p6bannerbot sets mode: +v bcheda

[00:55] *** bcheda left
[01:03] *** ZzZombo joined
[01:03] *** p6bannerbot sets mode: +v ZzZombo

[01:32] *** Itaipu_ left
[01:34] *** Itaipu joined
[01:35] *** p6bannerbot sets mode: +v Itaipu

[01:45] *** finanalyst joined
[01:46] *** p6bannerbot sets mode: +v finanalyst

[01:47] *** aebkop joined
[01:47] *** p6bannerbot sets mode: +v aebkop

[01:51] *** tehidiot left
[02:33] *** ryn1x left
[03:00] *** ryn1x joined
[03:00] *** p6bannerbot sets mode: +v ryn1x

[03:03] <ryn1x> Seems backwards to me that List is immutable and Array is not. Is this a carry-over from Perl5?

[03:11] *** finanalyst left
[03:17] *** Itaipu left
[03:22] *** Itaipu joined
[03:23] *** p6bannerbot sets mode: +v Itaipu

[03:24] <AlexDaniel> ryn1x: why is it backwards?

[03:26] *** Itaipu left
[03:27] <Geth> ¦ mu: 621d4f6adf | (Fernando Correa de Oliveira)++ (committed using GitHub Web editor) | misc/perl6advent-2018/schedule

[03:27] <Geth> ¦ mu: Update schedule

[03:27] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/621d4f6adf

[03:30] *** Itaipu joined
[03:31] *** p6bannerbot sets mode: +v Itaipu

[03:32] <ryn1x> AlexDaniel: It's not acutually backwards,  but because I learned Java and C++ in school I am used to an Array being immutable and List being a mutable object. Completely reversed usage of the terms.

[03:34] <ryn1x> Immutable size to be more specific

[03:36] <AlexDaniel> so dynamic vs static

[03:36] <SmokeMachine> Im starting writing my perl6 advent calendar post... would someone like to give me some comments? (I just started, its far from complete)

[03:37] <SmokeMachine> https://gist.github.com/FCO/33be94f5ecfab73812705f60efd89085

[03:37] <SmokeMachine> the `...` means I didn't write yet but I will

[03:37] <ryn1x> I wonder if array is implemented with some sort of linked-list... that would confuse the terms even more ha

[03:42] *** mattp_ left
[03:48] <ryn1x> SmokeMachine: It is looking good, but I am not really familiar with ORM. Maybe a short section in the beginning on why use/advantages of Red ORM for uninformed people like me?

[03:49] <ryn1x> SmokeMachine: Is Red something that could be used instead of DBIish?

[03:49] <SmokeMachine> ryn1x: thanks that’s a good idea!

[03:50] <SmokeMachine> ryn1x: no... red can use DBIish...

[03:50] <ryn1x> ah ok. so like an OO way to interface with it?

[03:51] <SmokeMachine> ryn1x: currently it uses BDIish for SQLite and DB::Pg for Postgres...

[03:52] <SmokeMachine> ryn1x: that’s more a way to map classes to tables and objects to rows...

[03:53] <SmokeMachine> ryn1x: http://github.com/FCO/Red

[03:53] <ryn1x> SmokeMachine: Maybe like some code snippets showwing usage of DBIish/ BG:Pg on their own vs with Red? Unless that doesn't make sense... Either way I am looking forward to learning more about this from your calender post.

[03:56] <ryn1x> I just started learning/using DBIish with sqlite for a project so this may be somthing I want to use after learning about it!

[03:57] *** xinming left
[03:57] <SmokeMachine> :)

[03:58] <SmokeMachine> ryn1x: if you want, take a look into the examples dir and/or the wiki...

[04:07] *** Itaipu left
[04:08] *** Itaipu joined
[04:09] *** p6bannerbot sets mode: +v Itaipu

[04:20] *** ryn1x left
[04:41] *** parv joined
[04:41] *** p6bannerbot sets mode: +v parv

[04:47] <AlexDaniel> .tell ryn1x no, it's not implemented as linked lists, but potentially it can be depending on the compiler or backend. See also https://github.com/perl6/doc/issues/1726

[04:47] <yoleaux> AlexDaniel: I'll pass your message to ryn1x.

[05:07] *** MasterDuke left
[05:39] *** kst joined
[05:40] *** p6bannerbot sets mode: +v kst

[06:04] *** Itaipu left
[06:05] *** kurahaupo left
[06:05] *** kurahaupo joined
[06:05] *** kurahaupo left
[06:06] *** kurahaupo joined
[06:06] *** p6bannerbot sets mode: +v kurahaupo

[06:08] *** Itaipu joined
[06:09] *** p6bannerbot sets mode: +v Itaipu

[06:14] *** delon_ joined
[06:15] *** p6bannerbot sets mode: +v delon_

[06:22] *** delon_ left
[06:23] *** tinoco18 joined
[06:23] *** tinoco18 left
[06:24] *** moony left
[06:25] *** [particle] left
[06:26] *** [particle] joined
[06:26] *** p6bannerbot sets mode: +v [particle]

[06:28] *** moony joined
[06:28] *** p6bannerbot sets mode: +v moony

[06:36] *** kerframil joined
[06:36] *** p6bannerbot sets mode: +v kerframil

[06:38] *** kurahaupo left
[06:39] *** kurahaupo joined
[06:39] *** kurahaupo left
[06:39] *** kurahaupo joined
[06:40] *** p6bannerbot sets mode: +v kurahaupo

[06:44] *** szabgab joined
[06:44] *** p6bannerbot sets mode: +v szabgab

[06:48] *** szabgab left
[06:56] *** xinming joined
[06:57] *** p6bannerbot sets mode: +v xinming

[07:01] *** stux|RC-- left
[07:12] *** stux|RC joined
[07:13] *** p6bannerbot sets mode: +v stux|RC

[07:27] *** moony left
[07:31] *** moony joined
[07:31] *** p6bannerbot sets mode: +v moony

[07:34] *** kdr22 joined
[07:35] *** p6bannerbot sets mode: +v kdr22

[07:36] *** kdr21 left
[07:46] *** noganex_ joined
[07:46] *** noganex left
[07:47] *** p6bannerbot sets mode: +v noganex_

[07:48] *** Sound joined
[07:48] *** p6bannerbot sets mode: +v Sound

[08:37] *** domidumont joined
[08:38] *** rindolf joined
[08:38] *** p6bannerbot sets mode: +v domidumont

[08:38] *** p6bannerbot sets mode: +v rindolf

[08:45] *** cydf joined
[08:46] *** rindolf left
[08:46] *** p6bannerbot sets mode: +v cydf

[08:46] *** cydf left
[08:47] *** cydf joined
[08:47] *** p6bannerbot sets mode: +v cydf

[08:51] *** cy_d_fect joined
[08:51] *** p6bannerbot sets mode: +v cy_d_fect

[08:52] *** cydf left
[08:56] <Geth> ¦ ecosystem: ccworld1000++ created pull request #416: add CCChart

[08:56] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/416

[08:58] *** cydf joined
[08:58] *** Itaipu left
[08:59] *** p6bannerbot sets mode: +v cydf

[08:59] *** rindolf joined
[08:59] *** cy_d_fect left
[09:00] *** p6bannerbot sets mode: +v rindolf

[09:00] <Geth> ¦ doc: d5d9448af6 | (JJ Merelo)++ | doc/Type/Promise.pod6

[09:00] <Geth> ¦ doc: Some reflow and grammar fixes

[09:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d5d9448af6

[09:00] <Geth> ¦ doc: fadb13beac | (JJ Merelo)++ | doc/Type/Any.pod6

[09:00] <Geth> ¦ doc: Adds better example for Any.keys

[09:00] <synopsebot> Link: https://doc.perl6.org/type/Promise

[09:00] <synopsebot> Link: https://doc.perl6.org/type/Any

[09:00] <Geth> ¦ doc: 

[09:00] <Geth> ¦ doc: Eliminates the class example, and adds pointers. Refs #1731

[09:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fadb13beac

[09:02] <Geth> ¦ ecosystem: e720d64820 | CC++ (committed using GitHub Web editor) | META.list

[09:02] <Geth> ¦ ecosystem: add CCChart

[09:02] <Geth> ¦ ecosystem: 

[09:02] <Geth> ¦ ecosystem: Simple draw chart for Perl 6 , easy-to-use simple learning.

[09:02] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/e720d64820

[09:02] <Geth> ¦ ecosystem: ac8827fe9c | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | META.list

[09:02] <Geth> ¦ ecosystem: Merge pull request #416 from ccworld1000/patch-2

[09:02] <Geth> ¦ ecosystem: 

[09:02] <Geth> ¦ ecosystem: add CCChart

[09:02] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/ac8827fe9c

[09:03] *** Itaipu joined
[09:04] *** cydf left
[09:04] *** p6bannerbot sets mode: +v Itaipu

[09:04] *** cydf joined
[09:05] *** p6bannerbot sets mode: +v cydf

[09:15] *** domidumont left
[09:21] *** cy_d_fect joined
[09:22] *** p6bannerbot sets mode: +v cy_d_fect

[09:23] *** cy_d_fect left
[09:23] *** cydf left
[09:23] *** cy_d_fect joined
[09:24] *** p6bannerbot sets mode: +v cy_d_fect

[09:28] *** noganex joined
[09:28] *** p6bannerbot sets mode: +v noganex

[09:31] *** noganex_ left
[09:33] *** cy_d_fect left
[09:33] *** cydf joined
[09:34] *** p6bannerbot sets mode: +v cydf

[09:35] *** noganex left
[09:36] *** noganex joined
[09:37] *** p6bannerbot sets mode: +v noganex

[09:41] *** woolfy left
[09:45] *** Ragnor27 joined
[09:45] *** Ragnor27 left
[09:48] *** cydf left
[09:58] *** Sound left
[10:07] *** Itaipu left
[10:09] *** Itaipu joined
[10:10] *** p6bannerbot sets mode: +v Itaipu

[10:42] *** molaf joined
[10:43] *** p6bannerbot sets mode: +v molaf

[11:00] *** noganex_ joined
[11:01] *** pmurias joined
[11:01] *** p6bannerbot sets mode: +v pmurias

[11:01] *** p6bannerbot sets mode: +v noganex_

[11:03] *** sena_kun joined
[11:04] *** noganex left
[11:04] *** p6bannerbot sets mode: +v sena_kun

[11:13] *** pecastro joined
[11:14] *** p6bannerbot sets mode: +v pecastro

[11:18] *** El_Che left
[11:18] *** El_Che joined
[11:19] *** p6bannerbot sets mode: +v El_Che

[11:22] <SmokeMachine> AlexDaniel: do you know what was my proposal here? https://gist.github.com/Whateverable/d1b749b273fad886c73bbcfb52763f86#file-result-perl6-dev-md

[11:27] *** El_Che left
[11:45] <SmokeMachine> I found that! Thanks!

[11:50] *** eater left
[11:52] *** Itaipu left
[11:56] *** El_Che joined
[11:57] *** p6bannerbot sets mode: +v El_Che

[11:57] *** Itaipu joined
[11:58] *** p6bannerbot sets mode: +v Itaipu

[12:02] *** Itaipu left
[12:02] *** yqt joined
[12:03] *** p6bannerbot sets mode: +v yqt

[12:08] *** Itaipu joined
[12:09] *** p6bannerbot sets mode: +v Itaipu

[12:09] *** Sound joined
[12:09] *** p6bannerbot sets mode: +v Sound

[12:12] *** cydf joined
[12:13] *** p6bannerbot sets mode: +v cydf

[12:31] *** kudzo_ joined
[12:32] *** p6bannerbot sets mode: +v kudzo_

[12:41] *** Itaipu left
[12:46] *** Itaipu joined
[12:46] *** p6bannerbot sets mode: +v Itaipu

[12:58] *** molaf left
[13:08] *** sno left
[13:23] *** Itaipu left
[13:24] *** Itaipu joined
[13:24] *** p6bannerbot sets mode: +v Itaipu

[13:24] *** sno joined
[13:25] *** p6bannerbot sets mode: +v sno

[13:37] *** rfold joined
[13:38] *** p6bannerbot sets mode: +v rfold

[13:43] *** |oLa| left
[13:57] *** ufobat joined
[13:58] *** p6bannerbot sets mode: +v ufobat

[14:07] *** eater joined
[14:08] *** p6bannerbot sets mode: +v eater

[14:22] *** parv left
[14:30] *** Sgeo_ left
[14:31] *** Sgeo_ joined
[14:31] *** p6bannerbot sets mode: +v Sgeo_

[14:34] <sena_kun> If I have `is default` attribute, is there a way to know if its value in an instance was defined or it's there just because of default setting?

[14:35] <sena_kun> Consindering I am already using MOP and ready for magic.

[14:36] <timotimo> you'll have to store that information in a separate (private, probably) attribute based on whether the named argument gets passed to TWEAK or BUILD, i'd think

[14:37] <sena_kun> ah, ok. well, I'll just provide a new trait similar to `is default` that I can control. Just wanted to check if there is a neater way, checked Attribute docs without too much luck. :)

[14:37] <sena_kun> thanks anyway.

[14:47] *** kaare_ joined
[14:48] *** p6bannerbot sets mode: +v kaare_

[15:02] *** Itaipu left
[15:03] *** Itaipu joined
[15:03] *** kensanata joined
[15:03] *** p6bannerbot sets mode: +v kensanata

[15:03] *** p6bannerbot sets mode: +v Itaipu

[15:04] <SmokeMachine> .tell jmerelo if you have some time could you please comment? (it's far from complete yet) https://gist.github.com/FCO/33be94f5ecfab73812705f60efd89085#file-redsecretsanta-md

[15:04] <yoleaux> SmokeMachine: I'll pass your message to jmerelo.

[15:08] <kensanata> AlexDaniel: For Oddmuse wiki, should we take Text::Markdown and try and make it CommonMark compatible and grammar-based, or should we try to reimplement from scratch? I'm not sure how much we'll be able to reuse if rewriting it to be grammar based.

[15:10] <SmokeMachine> I was thinking of PRing a Oddmuse::Storage using Red...

[15:11] <timotimo> https://github.com/hartenfels/Text-Markdown-Discount - not bad

[15:12] <kensanata> SmokeMachine: what is Red, some sort of database?

[15:12] <SmokeMachine> kensanata: Red is a ORM...

[15:12] <kensanata> (I'm mostly an Oracle person.)

[15:12] <SmokeMachine> kensanata: http://github.com/FCO/Red

[15:13] <kensanata> SmokeMachine: It's hard to find on duckduckgo, for sure. :D

[15:14] <kensanata> SmokeMachine: The GitHub page looks interesting! It does say "It's not working yet." Are you involved in Red development? I'd be happy to accept a PR!

[15:14] <SmokeMachine> kensanata: with this query its the first result: https://duckduckgo.com/?q=Red+ORM+perl6&t=h_&ia=software

[15:15] <SmokeMachine> kensanata: Yes, Im the FCO on the url... :P

[15:15] <kensanata> SmokeMachine: Yeah, I didn't know it was Perl 6 so I was looking for Red, Red database, and Red ORM...

[15:15] <SmokeMachine> kensanata: I was just kidding... :P

[15:16] <kensanata> You'd definitely get "help validating the APIs." ;)

[15:17] <SmokeMachine> kensanata: if you are interested, please do some comments on https://gist.github.com/FCO/33be94f5ecfab73812705f60efd89085#file-redsecretsanta-md

[15:18] <kensanata> SmokeMachine: I'm the kind of person that would start writing code first, then think about the gap as we hit upon it...

[15:20] <kensanata> SmokeMachine: I'm pretty sure Oddmuse::Storage would also need some work. Perhaps something like an init call to setup the database if it cannot be found, etc. And we'd probably have to switch Oddmuse::Storage to a singleton. At the moment new instances are created whenever storage is accessed.

[15:20] <SmokeMachine> kensanata: maybe it would be easier to understand the API: https://github.com/FCO/Red/tree/master/examples

[15:24] <kensanata> timotimo: I think I will add an option to switch between the two; that would make for an interesting comparison.

[15:25] <SmokeMachine> kensanata: I was reading Oddmuse::Storage and would like to suggest a role that every delegate implementation should "does"... that would sure that <get-page put-page get-keep-page put-keep-page put-change get-changes get-current-revision lock-page unlock-page is-locked> method exist

[15:25] <kensanata> Is there a way to express an either-or dependency in META6.json?

[15:25] <kensanata> SmokeMachine: Good idea.

[15:27] *** |oLa| joined
[15:27] *** p6bannerbot sets mode: +v |oLa|

[15:28] <kensanata> SmokeMachine: is there a way to verify that the thing I loaded with require ::($class) actually does the role?

[15:28] <timotimo> yeah, you can smartmatch against the role

[15:28] <kensanata> smartmatch magic...

[15:28] <SmokeMachine> kensanata: I was thinking on something like:

[15:29] <SmokeMachine> kensanata: https://www.irccloud.com/pastebin/lOprwVwN/

[15:30] *** cydf left
[15:30] <SmokeMachine> kensanata: if Oddmuse::Storage::Delegate were the name of the role

[15:31] <kensanata> I'll give it a try!

[15:31] <kensanata> I wonder if we can remove the duplication of the functions. Something "delegate all the functions this role exports"?

[15:31] <timotimo> that's specced, doesn't it work?

[15:33] *** leah2 left
[15:34] <SmokeMachine> m: class A { has Int $.int handles /./}; say A.new(:int(42)).is-prime

[15:34] <camelia> rakudo-moar b463746da: OUTPUT: «False␤»

[15:34] <kensanata> timotimo: I was just looking at the snippet posted by SmokeMachine.

[15:36] <timotimo> m: role Delegs { method one { say "one" }; method two { say "two" } }; class Impl does Delegs { method one { say "impl one" }; }; class Test { has Impl $.foo handles Delegs .= new }; Test.new.one; Test.new.two;

[15:36] <camelia> rakudo-moar b463746da: OUTPUT: «two␤»

[15:36] <timotimo> m: role Delegs { method one { say "one" }; method two { say "two" } }; class Impl does Delegs { method one { say "impl one" }; }; class Test { has Impl $.foo handles <one two> .= new }; Test.new.one; Test.new.two;

[15:37] <camelia> rakudo-moar b463746da: OUTPUT: «impl one␤two␤»

[15:37] <timotimo> aaw

[15:37] <timotimo> m: role Delegs { method one { say "one" }; method two { say "two" } }; class Impl does Delegs { method one { say "impl one" }; }; class Test { has Impl $.foo handles Delegs.^methods.map(*.name) .= new }; Test.new.one; Test.new.two;

[15:37] <camelia> rakudo-moar b463746da: OUTPUT: «Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤»

[15:37] <timotimo> m: role Delegs { method one { say "one" }; method two { say "two" } }; class Impl does Delegs { method one { say "impl one" }; }; class Test { has Impl $.foo handles (BEGIN Delegs.^methods.map(*.name)) .= new }; Test.new.one; Test.new.two;

[15:37] <camelia> rakudo-moar b463746da: OUTPUT: «No such method 'two' for invocant of type 'Test'␤  in block <unit> at <tmp> line 1␤␤»

[15:37] <timotimo> m: role Delegs { method one { say "one" }; method two { say "two" } }; class Impl does Delegs { method one { say "impl one" }; }; class Test { has Impl $.foo handles (BEGIN Delegs.^methods.map(*.name)) .= new }; say Delegs.^methods.map(*.name); Test.new.one; Test.new.two;

[15:37] <camelia> rakudo-moar b463746da: OUTPUT: «(one two)␤No such method 'two' for invocant of type 'Test'␤  in block <unit> at <tmp> line 1␤␤»

[15:37] <timotimo> huh.

[15:38] <kensanata> Isn't that correct? Impl is missing two?

[15:38] <timotimo> yes, but why can't it "handles Delegs"?

[15:38] <timotimo> that's supposed to work

[15:40] <kensanata> Hm.

[15:43] *** sena_kun left
[15:43] *** sena_kun joined
[15:44] *** p6bannerbot sets mode: +v sena_kun

[15:49] *** leah2 joined
[15:49] *** p6bannerbot sets mode: +v leah2

[15:50] *** Sgeo_ left
[15:50] *** Sgeo_ joined
[15:51] *** p6bannerbot sets mode: +v Sgeo_

[16:07] <kensanata> SmokeMachine: So, without the snipped that timotimo suggested, I have this: https://github.com/kensanata/oddmuse6/commit/53806ae69bb0bc6e12f75e829a0fd3204a8d5e06

[16:07] *** Itaipu left
[16:10] *** titsuki joined
[16:10] *** Itaipu joined
[16:11] <SmokeMachine> kensanata: why don’t you do something like this?

[16:11] <SmokeMachine>     multi method get-page(Str $id!, Bool $is-admin --> Oddmuse::Page) {...}

[16:11] *** p6bannerbot sets mode: +v titsuki

[16:11] <SmokeMachine> On delegate

[16:11] *** p6bannerbot sets mode: +v Itaipu

[16:13] *** zakharyas joined
[16:14] *** p6bannerbot sets mode: +v zakharyas

[16:20] <kensanata> SmokeMachine: Good point. I wasn't aware of the stub operator. :)

[16:26] <kensanata> I want to go back to the other question: Is there a way to express an either-or dependency in META6.json, e.g. one of Text::Markdown or Text::Markdown::Discount?

[16:27] *** Itaipu left
[16:30] *** Itaipu joined
[16:31] *** p6bannerbot sets mode: +v Itaipu

[16:31] *** |oLa| left
[16:32] *** sena_kun left
[16:34] <SmokeMachine> kensanata: id like to know that too...

[16:42] *** cydf joined
[16:43] *** p6bannerbot sets mode: +v cydf

[16:51] *** domidumont joined
[16:52] *** p6bannerbot sets mode: +v domidumont

[16:58] *** rouking joined
[16:59] *** p6bannerbot sets mode: +v rouking

[16:59] <kensanata> Given a string $class = 'Text::Markdown', how do I call it's parse-markdown? I'm trying «BEGIN{require ::($class) '&parse-markdown';}» and in a sub, later: «parse-markdown($page.text).to-html;» but I'm getting "undeclared routine". (I'm trying to figure things out by looking at page 173 of Perl 6 Deep Dive...

[17:00] <rouking> How decoupled are Rakudo and MoarVM at the moment? For example, could I compile to MVM bytecode and have that run fine on a system without Rakudo?

[17:01] *** hamhu3 left
[17:02] <moritz> rouking: no, because things like EVAL require the full compiler

[17:02] <moritz> rouking: but, you can run Perl 6 code without MoarVM by using one of the other backends

[17:02] <moritz> in unrelated matters: lol, I blogged: https://perlgeek.de/blog-en/perl-6/2018-perl6-coding-contest-seeking-task-makers.html

[17:04] *** |oLa| joined
[17:04] <rouking> Hmm, yeah, I was thinking EVAL might be a problem. Is it possible if the code doesn't use EVAL?

[17:04] *** p6bannerbot sets mode: +v |oLa|

[17:04] <rouking> or does it depend on Rakudo just because EVAL might show up

[17:06] <jnthn> Rakudo isn't just the compiler, but also an implementation of the Perl 6 standard library. In suspect the standard library accounts for more of the code size than the compiler part.

[17:06] <yoleaux> 13:17Z <SmokeMachine> jnthn: I’m sorry, I know that was a long time ago... but had you thought about this? https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2017-11-29#l94

[17:06] <jnthn> *I suspect

[17:07] <rouking> And I guess the code for the standard library doesn't get pumped out every single time you compile a program to Moar bytecode?

[17:09] <jnthn> No. It's like 14MB or so.

[17:09] <kensanata> To answer my own question, the following works for me: my $parser = BEGIN { my $class = 'Text::Markdown'; require ::($class); ::($class); } $parser.new('text').render;

[17:09] <jnthn> Plus 500 KB of metamodel

[17:09] <jnthn> The compiler comes out as < 7 MB, by contrast. So less than half the size of the standard library

[17:10] <rouking> At some point, it would be nice to be able to compile a standalone binary with MoarVM thrown in

[17:11] <jnthn> Yeah; it's currently hard to make that work out because Rakudo contains a small number of C parts, but we're slowly getting rid of them. Once that happens, that task should be a good it more tractable.

[17:11] <jnthn> *good bit

[17:11] <rouking> I was actually trying to convince someone to use Cro :P they needed a way to do websockets with good a good concurrency model

[17:11] <rouking> with a good*

[17:11] <jnthn> Ah yeah, Supplies map quite neatly onto those :)

[17:12] <rouking> But they also want their software to ship standalone and statically linked

[17:12] <rouking> btw, I see that Moar has a bunch of forks of its deps in the repo; does that mean it's statically linked to those?

[17:13] <rouking> Even if it isn't, I suppose it would be a simple matter to change some compiler flags and make that the case

[17:13] <jnthn> Yes, I believe so, with the exception of those that are only build-time. However, there's command line options for those building packages to have a MoarVM linked agaisnt packaged deps.

[17:14] <rouking> Ah, well that's good to hear

[17:14] <jnthn> But if you build a MoarVM from source I think the libuv, libdyncall, etc. all go in as static linking

[17:17] *** evilem is now known as emerson

[17:21] *** dct joined
[17:21] *** p6bannerbot sets mode: +v dct

[17:22] *** Itaipu left
[17:23] *** Itaipu joined
[17:23] *** p6bannerbot sets mode: +v Itaipu

[17:29] *** sena_kun joined
[17:29] <kensanata> How can I check whether a module can be loaded? Something better than EVAL { require ::("Foo::Bar") }

[17:30] *** p6bannerbot sets mode: +v sena_kun

[17:32] <moritz> why EVAL? try require ::("Foo::Bar")

[17:32] *** |oLa| left
[17:33] <kensanata> moritz: sorry for skipping the actual goal. I want to run a test only if Foo::Bar is installed. So now I'm trying to find a way to write that test.

[17:34] <kensanata> So now I'm looking at p6doc Language/testing and trying to think of a way to make this happen. :)

[17:38] <kensanata> D'Oh. Found try { }. 

[17:39] *** kerframil left
[18:25] <Xliff> SmokeMachine: It's not bad, but a few spelling errors.

[18:27] *** rindolf left
[18:32] *** SakiTW left
[18:34] *** kensanata left
[18:39] *** molaf joined
[18:40] *** p6bannerbot sets mode: +v molaf

[18:42] <SmokeMachine> Xliff: thanks! I’ll fix that!

[18:43] <Xliff> SmokeMachine: If you want, I can proof it for you when you finish. 

[18:43] <Xliff> I don't mind giving it a once over and making suggestions.

[18:45] <SmokeMachine> Xliff: thank you very much...

[18:47] <Xliff> No problem!

[18:48] *** kst left
[18:48] *** rindolf joined
[18:49] *** p6bannerbot sets mode: +v rindolf

[18:54] <Geth> ¦ rakudo.org: 73574c4ecb | (Steve Mynott)++ | post/announce-rakudo-star-release-2018-10.md

[18:54] <Geth> ¦ rakudo.org: Add announcement for 2018.10 release

[18:54] <Geth> ¦ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/73574c4ecb

[18:58] <Geth> ¦ rakudo.org: 2bfb9e1545 | (Steve Mynott)++ | templates/files.html.ep

[18:58] <Geth> ¦ rakudo.org: bump star to 2018.10

[18:58] <Geth> ¦ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/2bfb9e1545

[18:59] <stmuk_> a watched cron never runs!

[19:01] <Geth> ¦ perl6.org: 3b167acb44 | (Steve Mynott)++ | source/downloads/index.html

[19:01] <Geth> ¦ perl6.org: bump star to 2018.10

[19:01] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/3b167acb44

[19:02] *** kybr left
[19:03] *** lizmat left
[19:04] *** lizmat joined
[19:04] *** p6bannerbot sets mode: +v lizmat

[19:06] <Xliff> Why do I get this 'Cannot modify an immutable 'GTK::Compat::Types::GdkVisual' type object' when attempting to set an is rw member of a repr('CStruct')?

[19:07] <lizmat> Xliff: could you try doing an nqp::iscont() on that attribute?  If it's 0, that's the reason

[19:10] <Xliff> lizmat: Yes, it is 0. Why is this?

[19:11] <lizmat> *that* I don't know

[19:11] <lizmat> but I guess the meaning of "is rw" is slightly different from normal in a repr(CStruct)

[19:11] <lizmat> doesn't it mean it's supposed to be a pointer??

[19:12] <Xliff> I thought that was in a nativecall sub definition.

[19:12] <Xliff> So how can I set it? Write an accessor?

[19:12] <Xliff> (bet it does the same thing)

[19:12] *** stmuk_ left
[19:27] <moritz> weekly: https://perlgeek.de/blog-en/perl-6/2018-perl6-coding-contest-seeking-task-makers.html

[19:27] <notable6> moritz, Noted!

[19:28] <moritz> weekly: https://rakudo.org/post/announce-rakudo-star-release-2018-10

[19:28] <notable6> moritz, Noted!

[19:29] <El_Che> lizmat, stmuk, moritz: I wonder if it needs to be announced that this Rakudo Star is the last one.

[19:29] <lizmat> El_Che: why would it be the last one ?

[19:30] <El_Che> lizmat: because stmuk is not creating more

[19:31] <moritz> I hope somebody else does

[19:31] <El_Che> moritz: yes, sorry, that's what I meant

[19:31] <El_Che> if it needs be announce as part of a search of a new mantainer

[19:32] <lizmat> yes, I will mention it in the P6W

[19:32] <El_Che> lizmat: check with him, maybe

[19:32] <lizmat> have you seen https://twitter.com/steve_mynott/status/1061696671866937345 ?

[19:32] <lizmat> oops, wrong link

[19:32] <lizmat> https://github.com/rakudo/star/issues/124

[19:33] <El_Che> lizmat: https://colabti.org/irclogger/irclogger_log/perl6?date=2018-11-07#l793

[19:34] <El_Che> lizmat: ok, the ticket is pretty clear

[19:34] <lizmat> yeah, stmuk++

[19:35] <lizmat> weekly: https://github.com/rakudo/star/issues/124

[19:35] <notable6> lizmat, Noted!

[19:36] <lizmat> .oO( feels like it is going to take me a week to make a P6W

[19:36] <lizmat> )

[19:37] *** kybr joined
[19:38] *** p6bannerbot sets mode: +v kybr

[19:38] <El_Che> lizmat: you can write about your self this time :)

[19:39] <Geth> ¦ docker: jstuder-gh++ created pull request #19: Update default Rakudo Star version to 2018.10

[19:39] <Geth> ¦ docker: review: https://github.com/perl6/docker/pull/19

[19:40] *** domidumont left
[19:42] *** jeek joined
[19:42] *** p6bannerbot sets mode: +v jeek

[19:44] *** domidumont joined
[19:45] <Geth> ¦ docker: 960c26271c | (Jeremy Studer)++ (committed using GitHub Web editor) | Dockerfile

[19:45] <Geth> ¦ docker: Update default Rakudo Star version to 2018.10 (#19)

[19:45] <Geth> ¦ docker: review: https://github.com/perl6/docker/commit/960c26271c

[19:45] *** p6bannerbot sets mode: +v domidumont

[19:52] *** domidumont left
[20:05] *** hamhu3 joined
[20:06] *** p6bannerbot sets mode: +v hamhu3

[20:18] *** lucasb joined
[20:19] *** p6bannerbot sets mode: +v lucasb

[20:26] *** Sgeo_ left
[20:26] *** Sgeo_ joined
[20:27] *** p6bannerbot sets mode: +v Sgeo_

[20:40] *** ryn1x joined
[20:41] *** p6bannerbot sets mode: +v ryn1x

[20:41] *** hdch joined
[20:42] *** p6bannerbot sets mode: +v hdch

[20:54] *** lucasb left
[21:03] *** pmurias left
[21:04] *** pmurias joined
[21:04] *** p6bannerbot sets mode: +v pmurias

[21:12] *** ryn1x left
[21:14] *** jast left
[21:16] *** jast joined
[21:17] *** p6bannerbot sets mode: +v jast

[21:46] *** zakharyas left
[21:55] <masak> m: grammar G { token TOP { <foo> }; proto token foo { <bar> {*} }; token bar { "bar" } }

[21:55] <camelia> rakudo-moar fa5215b61: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Proto regex body must be {*} (or <*> or <...>, which are deprecated)␤at <tmp>:1␤------> 3ar G { token TOP { <foo> }; proto token 7⏏5foo { <bar> {*} }; token bar { "bar" } }␤»

[21:55] <masak> heh -- just had a use for the above `<bar> {*}` construction (which S05 says should work), but apparently it's not supported

[21:56] <masak> guess I'll just have to add another layer of indirec^Wtoken

[22:00] *** Itaipu left
[22:02] *** rfold left
[22:09] *** Itaipu joined
[22:10] *** p6bannerbot sets mode: +v Itaipu

[22:16] <thundergnat> Pretty cool IMO, as of today Perl 6 has 1000 entries on Rosettacode, and is tied for 3rd on the leader board. http://rosettacode.org/wiki/Rosetta_Code/Rank_languages_by_popularity/Full_list

[22:21] *** pmurias left
[22:21] <lizmat> weekly: http://rosettacode.org/wiki/Rosetta_Code/Rank_languages_by_popularity/Full_list

[22:21] <notable6> lizmat, Noted!

[22:23] <lizmat> sleep&

[22:38] *** Xliff left
[22:41] *** dct left
[22:42] *** dct joined
[22:42] *** p6bannerbot sets mode: +v dct

[22:49] *** dct left
[23:09] *** Sound left
[23:10] *** Sound joined
[23:10] *** p6bannerbot sets mode: +v Sound

[23:18] *** sena_kun left
[23:22] *** rindolf left
[23:25] *** sauvin left
[23:27] *** aebkop left
[23:32] *** Sound left
[23:37] *** sauvin joined
[23:37] *** p6bannerbot sets mode: +v sauvin

[23:37] *** pecastro left
[23:38] *** w_richard_w joined
[23:39] *** w_richard_w left
[23:52] *** yqt left
[23:56] <jdv79> is there a way to bind directly to an attr via a method call with a positional arg?

