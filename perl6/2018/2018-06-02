[00:34] *** wamba left
[00:35] *** colomon_ joined
[00:36] *** colomon left
[00:36] *** colomon_ is now known as colomon

[00:47] *** markoong left
[00:48] *** markoong joined
[00:50] *** john_parr joined
[00:53] *** markoong left
[01:08] *** todd joined
[01:18] *** zpc joined
[01:25] *** comborico1611 left
[01:46] *** ilbot3 left
[01:56] *** ilbot3 joined
[01:56] *** ChanServ sets mode: +v ilbot3

[02:22] *** aindilis left
[02:33] *** aindilis joined
[02:33] *** todd left
[02:48] *** psychoslave joined
[03:01] *** raschipi left
[03:02] *** raschipi joined
[03:11] *** mmmmmm joined
[03:12] <Geth> ¬¶ doc: fbc64450d6 | (Rafael Schipiura)++ (committed using GitHub Web editor) | README.md

[03:12] <Geth> ¬¶ doc: Update README.md

[03:12] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/fbc64450d6

[03:22] *** mmmmmm left
[03:26] *** gegagome2 left
[03:31] *** zpc left
[03:33] *** mcmillhj joined
[03:37] *** mcmillhj left
[04:08] *** aborazmeh joined
[04:08] *** aborazmeh left
[04:08] *** aborazmeh joined
[04:09] *** Sgeo__ joined
[04:12] *** Sgeo_ left
[04:16] <ingy> perl6 -e $(perl6 -e $(perl6 -e $(perl6 -e $(perl6 -e $(perl6 -e'{.fmt($_).say}(<{.fmt($_).say}(<%s>)>)')))))  # <= Do not cast your quines before Perl!

[04:17] <ingy> TimToady: ^^

[04:24] <raschipi> works everywhere too: REPL, file, stdin, cmdline

[04:26] <raschipi> well, not file because it sends it to stdout instead of writing another file.

[04:55] <raschipi> echo '{.fmt($_).say}(<{.fmt($_).say}(<%s>)>)'|perl6|perl6|perl6|perl6|perl6|perl6

[05:00] *** araraloren joined
[05:09] <AlexDaniel> squashable6: status

[05:09] <squashable6> AlexDaniel, üçïüçï SQUASHathon is in progress! The end of the event in 1 day and ‚âà6 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[05:09] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/d32a7dd26b1ae64bc05c4c7b10b114c9

[05:29] *** aborazmeh left
[05:44] *** andrzejku joined
[05:44] <andrzejku> araraloren: Hi!:)

[05:47] *** ZeonPeon left
[05:52] <araraloren> andrzejku hi

[05:55] <Geth> ¬¶ whateverable: AlexDaniel self-assigned Support multifile gists https://github.com/perl6/whateverable/issues/36

[05:57] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúSupport multifile gists‚Äù: https://github.com/perl6/whateverable/issues/36#issuecomment-394061431

[05:58] <andrzejku> araraloren: how are you doing?

[05:59] <araraloren> andrzejku  :) fix my perl 6 app currently

[06:06] <andrzejku> araraloren: oh nice :)

[06:17] <araraloren> andrzejku , an app that find source file such as c/c++/makefile

[06:18] <araraloren> A specific find

[06:28] *** wamba joined
[06:38] <andrzejku> araraloren: the are already

[06:38] <andrzejku> silver searcher

[06:40] <Geth> ¬¶ doc: 2ae5b1ef79 | (Rafael Schipiura)++ (committed using GitHub Web editor) | doc/Language/numerics.pod6

[06:40] <Geth> ¬¶ doc: Update numerics.pod6

[06:40] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/2ae5b1ef79

[06:40] <Geth> ¬¶ doc: 85f3164026 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Language/numerics.pod6

[06:40] <Geth> ¬¶ doc: Merge pull request #2088 from perl6/rafaelschipiura-patch-1

[06:40] <synopsebot> Link: https://doc.perl6.org/language/numerics

[06:40] <Geth> ¬¶ doc: 

[06:40] <Geth> ¬¶ doc: Update numerics.pod6

[06:40] <Geth> ¬¶ doc: Let's give it a try. Thanks.

[06:40] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/85f3164026

[06:40] *** jmerelo joined
[06:41] <araraloren> andrzejku sliver ?

[06:42] <andrzejku> araraloren: try ag command

[06:42] <andrzejku> :)

[06:42] <araraloren> what is ag

[06:43] <andrzejku> kind of grep

[06:43] <donpdonp> araraloren: https://github.com/ggreer/the_silver_searcher#readme

[06:45] *** |oLa|1 joined
[06:46] *** |oLa|2 joined
[06:46] *** |oLa|1 left
[06:47] *** scovit joined
[06:49] <araraloren> intersting :)

[06:49] <andrzejku> araraloren: ya I am using it in my daily work

[06:49] <araraloren> My app is just search by extension

[06:49] <araraloren> not by content

[06:49] <andrzejku> araraloren: thats what actually find . -iname do :P

[06:50] *** hythm_ joined
[06:50] <araraloren> yeah, but with perl 6, and you can have own configuration

[06:50] <araraloren> I recommend you have a try

[06:50] <araraloren> https://github.com/araraloren/perl6-app-findsource

[06:51] <hythm_> p6: role R { submethod BUILD { say "R BUILD" } }; class C does R { submethod BUILD { say "C BUILD" } }; C.new # should not R.BUILD run as well?

[06:51] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´C BUILD‚ê§¬ª

[06:51] <araraloren> It can cooperate with grep/other command

[06:51] <andrzejku> ok I will look at it :)

[06:52] <araraloren> hythm_ submethod will not inherite by child class

[06:52] <andrzejku> araraloren: now I have to go there is a kid party today with dinosaurs

[06:52] <araraloren> andrzejku it quite simple

[06:52] <andrzejku> :D

[06:52] <araraloren> dinosaurs ?

[06:52] <andrzejku> ya

[06:52] <andrzejku> RARARA ROAR

[06:53] <buggable> New CPAN upload: App-FindSource-0.0.5.tar.gz by ALOREN http://modules.perl6.org/dist/App::FindSource:cpan:ALOREN

[06:53] <hythm_> hmm, why this works then?:

[06:53] <hythm_> p6: role R { submethod BUILD { say "R BUILD" } }; class C does R { submethod TWEAK { say "C TWEAK" } }; C.new

[06:53] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´R BUILD‚ê§C TWEAK‚ê§¬ª

[06:53] *** domidumont joined
[06:53] <araraloren> hythm_ oh sorry, R is a role :)

[06:54] <andrzejku> araraloren: anyway thats good idea, I had just read a few pages of book Perl Minimal Unix

[06:54] <araraloren> IDK what happened :) hythm_

[06:54] <andrzejku> where the guy is substuting unix commands like sed grep find with perl one

[06:54] <andrzejku> I wonder to have some manual for Perl6

[06:54] <araraloren> there are many manual now

[06:54] <andrzejku> especially sed is awful tool for me :D

[06:55] <araraloren> oh wait

[06:55] <jmerelo> andrzejku: which substitutes Unix for Perl 6, you mean.

[06:55] <hythm_> araraloren np, thanks for responding

[06:55] <araraloren> andrzejku have you read this http://www.grymoire.com/Unix/Sed.html#uh-4a 

[06:55] <jmerelo> andrzejku: like ls or grep or things like that in Perl 6

[06:55] <araraloren> if not I recommend you have a look

[06:56] <araraloren> It's a awesome tutorial

[06:56] <andrzejku> araraloren: ahh actually I mention to use Perl6 instead sed

[06:56] *** darutoko joined
[06:56] <andrzejku> https://www.amazon.com/Minimal-Perl-Unix-Linux-People/dp/1932394508

[06:56] <andrzejku> araraloren: check that book

[06:57] <andrzejku> I want to have Perl6 version :)

[06:57] <araraloren> andrzejku hmm, that's true

[06:57] <andrzejku> sed syntax sucks

[06:57] <jmerelo> andrzejku: give it a try and write it yourself :-)

[06:57] <andrzejku> and it also somehow good to have

[06:57] <araraloren> oh, andrzejku I got you

[06:57] <andrzejku> one lang to own all!

[06:57] <andrzejku> haha

[06:58] <andrzejku> jmerelo: thanks for idea

[06:58] *** troys left
[06:58] <andrzejku> maybe I should try it :D

[06:59] <araraloren> sweet

[06:59] <andrzejku> araraloren: well I have to go

[06:59] <araraloren> oh, bye

[06:59] <andrzejku> araraloren: visit dinosaurs

[06:59] <andrzejku> araraloren: bye bye ! :)

[06:59] *** domidumont left
[07:00] *** domidumont joined
[07:03] *** scovit left
[07:12] *** Schepeers left
[07:13] *** hythm_ left
[07:23] *** psychoslave left
[07:30] *** molaf joined
[07:32] *** skids left
[07:35] *** rindolf joined
[07:35] *** raschipi left
[07:46] *** mcmillhj joined
[07:51] *** mcmillhj left
[07:51] *** Schepeers joined
[07:53] *** titsuki left
[07:54] *** titsuki joined
[07:58] *** sena_kun joined
[08:00] <Geth> ¬¶ doc: b70dc75e73 | (JJ Merelo)++ | doc/Language/classtut.pod6

[08:00] <Geth> ¬¶ doc: Some reflow and deletes comment

[08:00] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b70dc75e73

[08:00] <Geth> ¬¶ doc: 6cd2f1aa1c | (JJ Merelo)++ | 2 files

[08:00] <Geth> ¬¶ doc: Adds example on return coercion types

[08:00] <synopsebot> Link: https://doc.perl6.org/language/classtut

[08:00] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/6cd2f1aa1c

[08:00] <Geth> ¬¶ doc: 97e1d49cbf | (JJ Merelo)++ | doc/Language/functions.pod6

[08:00] <synopsebot> Link: https://doc.perl6.org/language/functions

[08:00] <Geth> ¬¶ doc: Explains use of aliases in MAIN

[08:00] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/97e1d49cbf

[08:04] *** lalitmee joined
[08:05] *** mcmillhj joined
[08:06] <Geth> ¬¶ doc: 3f119b000e | (JJ Merelo)++ | doc/Type/Signature.pod6

[08:06] <Geth> ¬¶ doc: Adds indexing for aliases

[08:06] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/3f119b000e

[08:06] <Geth> ¬¶ doc: 72ca26fc8e | (JJ Merelo)++ | doc/Type/Signature.pod6

[08:06] <Geth> ¬¶ doc: Changes example

[08:06] <Geth> ¬¶ doc: 

[08:06] <synopsebot> Link: https://doc.perl6.org/type/Signature

[08:06] <Geth> ¬¶ doc: To a rather more correct version, explaining the use of aliases with

[08:07] <Geth> ¬¶ doc: or without colon. Also some reflow in text and code

[08:07] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/72ca26fc8e

[08:08] *** Schepeers_ joined
[08:08] *** Schepeers left
[08:09] *** mcmillhj left
[08:20] *** mcmillhj joined
[08:21] *** Schepeers_ left
[08:22] *** Schepeers joined
[08:24] *** Schepeers left
[08:25] *** mcmillhj left
[08:25] *** scovit joined
[08:25] <scovit> Hi, I have a question: is there any syntactic sugar for this:

[08:25] <yoleaux> 31 May 2018 22:09Z <b2gills> scovit: It seems like the compile time error doesn't throw unless both the parameter and argument are different sub-types of Any

[08:26] <scovit> m: class A { method c {} }; class B { method d {} }; my $e = A.new(); my $f = B.new(); sub ciao($g where "c" ~~ ($g.^methods>>.name).Set) { }; ciao($e);

[08:26] <camelia> rakudo-moar 56dbd735a: ( no output )

[08:26] <scovit> m: class A { method c {} }; class B { method d {} }; my $e = A.new(); my $f = B.new(); sub ciao($g where "c" ~~ ($g.^methods>>.name).Set) { }; ciao($f);

[08:26] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´Constraint type check failed in binding to parameter '$g'; expected anonymous constraint to be met but got B (B.new)‚ê§  in sub ciao at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[08:26] <scovit> this kind of mechanism

[08:26] <scovit> checking if an object can do something

[08:27] <jmerelo> scovit: there's can and cando

[08:27] <jmerelo> scovit: https://docs.perl6.org/routine/cando

[08:28] <jmerelo> m: class A { method c {} }; say "A".^can("c")

[08:28] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´()‚ê§¬ª

[08:28] <jmerelo> m: class A { method c {} }; say A.^can("c")

[08:28] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´(c)‚ê§¬ª

[08:28] *** Schepeers joined
[08:31] <scovit> m: class A { method c {} }; class B { method d {} }; my $e = A.new(); my $f = B.new(); sub ciao($g where so $g.^can("c")) {}; ciao($e);

[08:31] <scovit> jmerelo: nicer

[08:31] <camelia> rakudo-moar 56dbd735a: ( no output )

[08:31] <scovit> m: class A { method c {} }; class B { method d {} }; my $e = A.new(); my $f = B.new(); sub ciao($g where so $g.^can("c")) {}; ciao($f);

[08:31] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´Constraint type check failed in binding to parameter '$g'; expected anonymous constraint to be met but got B (B.new)‚ê§  in sub ciao at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[08:33] *** mcmillhj joined
[08:33] <scovit> is there a way to custom the error message of Constrint type check?

[08:35] <scovit> like to something like:  expected "so $g.^can("c")" but got B (B.new)

[08:36] <scovit> also, if I understand correctly, the check is runtime

[08:36] <scovit> yep..

[08:37] *** psychoslave joined
[08:37] *** Schepeers left
[08:37] *** mcmillhj left
[08:37] <scovit> are these kind of checks ever gonna become compile time?

[08:37] <scovit> I am thinking also about Roles

[08:40] *** MilkmanDan left
[08:41] *** MilkmanDan joined
[08:41] <moritz> nominal types are check at compile time, if possible. That applies for roles too

[08:42] <moritz> I don't know if anybody plans to hoist constraint type check to compile time

[08:42] <moritz> you could

[08:44] <jmerelo> scovit: there's an issue for constraint unmet errors https://github.com/rakudo/rakudo/issues/1883

[08:47] *** mcmillhj joined
[08:49] *** Schepeers joined
[08:52] *** mcmillhj left
[08:55] <scovit> this is runtime:

[08:55] <scovit> m: role Q { }; class A is Q { method c {} }; class B { method d {} }; my $e = A.new(); my $f = B.new(); sub ciao(Q $g) {}; say "we"; ciao($f);

[08:55] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´we‚ê§Type check failed in binding to parameter '$g'; expected Q but got B (B.new)‚ê§  in sub ciao at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[08:55] <scovit> could be compile time, no?

[09:03] <moritz> could be, though requires some sophisticated analysis

[09:03] <moritz> because $f isn't typed as B

[09:12] <scovit> true, then it would be probably worth it to do it for modules but not for scripts

[09:12] *** lizmat left
[09:15] <scovit> There is the problem of Mixins

[09:16] <scovit> m: role Q { }; class A does Q { method c {} }; class B { method d {} }; my $e = A.new(); my $f = B.new(); sub ciao(Q $g) {}; if (1,0).pick { $f does Q; }; ciao($f);

[09:16] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´Type check failed in binding to parameter '$g'; expected Q but got B (B.new)‚ê§  in sub ciao at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:16] <scovit> m: role Q { }; class A does Q { method c {} }; class B { method d {} }; my $e = A.new(); my $f = B.new(); sub ciao(Q $g) {}; if (1,0).pick { $f does Q; }; ciao($f);

[09:16] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´Type check failed in binding to parameter '$g'; expected Q but got B (B.new)‚ê§  in sub ciao at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:16] <scovit> m: role Q { }; class A does Q { method c {} }; class B { method d {} }; my $e = A.new(); my $f = B.new(); sub ciao(Q $g) {}; if (1,0).pick { $f does Q; }; ciao($f);

[09:16] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´Type check failed in binding to parameter '$g'; expected Q but got B (B.new)‚ê§  in sub ciao at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:17] <scovit> m: role Q { }; class A does Q { method c {} }; class B { method d {} }; my $e = A.new(); my $f = B.new(); sub ciao(Q $g) {}; if (1,0).pick { $f does Q; }; ciao($f);

[09:17] <camelia> rakudo-moar 56dbd735a: ( no output )

[09:17] <scovit> lol

[09:17] <scovit> only in a purely functional language..

[09:18] *** lalitmee left
[09:26] *** lizmat joined
[09:32] <scovit> so, I conclude that it is in general a bad idea to check for ^can or roles in a signature. Better to let the runtime to blow at the right spot with an explicative error message

[09:53] *** scovit left
[10:09] *** araraloren left
[10:10] *** araraloren joined
[10:23] *** psychoslave left
[10:26] *** araraloren left
[10:27] *** araraloren joined
[10:49] *** lizmat left
[11:02] *** eliasr joined
[11:18] *** yqt joined
[11:19] <AlexDaniel> omg I think I finally added support for multifile gists in whateverable

[11:20] <AlexDaniel> just fixing some tests now

[11:26] *** wamba left
[11:34] *** markong joined
[11:34] *** markong is now known as markoong

[11:41] <MasterDuke> .tell scovit a way to customize the error message from where constraints: class A { method c {} }; class B { method d {} }; my $e = A.new(); my $f = B.new(); sub ciao($g where so $g.^can("c") || die "Can't do c") {}; ciao($f);'

[11:41] <yoleaux> MasterDuke: I'll pass your message to scovit.

[11:45] *** avar left
[11:45] *** avar joined
[11:51] *** kaare_ left
[12:06] *** psychoslave joined
[12:11] *** lizmat joined
[12:13] <squashable6> üçï AlexDaniel++ edited issue ‚ÄúMake it easier to run for contributors‚Äù: https://github.com/perl6/whateverable/issues/122

[12:18] *** lizmat left
[12:32] *** lizmat joined
[12:36] <Geth> ¬¶ whateverable: 11aa020b04 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 14 files

[12:36] <Geth> ¬¶ whateverable: Support for multifile gists

[12:36] <Geth> ¬¶ whateverable: 

[12:36] <Geth> ¬¶ whateverable: Resolves a long-standing issue #36 (but no tests yet).

[12:36] <Geth> ¬¶ whateverable: 

[12:36] <Geth> ¬¶ whateverable: It works by saving all files in ‚Äòsandbox/‚Äô, which is pretty much the

[12:36] <Geth> ¬¶ whateverable: only writable path. As a bonus, you should be able to use all saved

[12:36] <Geth> ¬¶ whateverable: files from other bots (note that all bots will now support multifile

[12:36] <Geth> ¬¶ whateverable: <‚Ä¶commit message has 13 more lines‚Ä¶>

[12:36] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/11aa020b04

[12:36] <Geth> ¬¶ whateverable: 1f4ba0171e | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/benchable.t

[12:36] <Geth> ¬¶ whateverable: Increase timeouts in benchable tests

[12:36] <Geth> ¬¶ whateverable: 

[12:36] <Geth> ¬¶ whateverable: This way it should run locally without any failures.

[12:36] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/1f4ba0171e

[12:36] <squashable6> üçï AlexDaniel++ labeled issue ‚ÄúSupport multifile gists‚Äù: https://github.com/perl6/whateverable/issues/36

[12:36] <squashable6> üçï AlexDaniel++ unlabeled issue ‚ÄúSupport multifile gists‚Äù: https://github.com/perl6/whateverable/issues/36

[12:36] <squashable6> üçï AlexDaniel++ unlabeled issue ‚ÄúSupport for github, gitlab, bitbucket, ‚Ä¶ links‚Äù: https://github.com/perl6/whateverable/issues/66

[12:37] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúSupport for github, gitlab, bitbucket, ‚Ä¶ links‚Äù: https://github.com/perl6/whateverable/issues/66#issuecomment-394084541

[12:37] <Geth> ¬¶ doc/master: 4 commits pushed by (JJ Merelo)++

[12:37] <Geth> ¬¶ doc/master: 29cd682057 | Expands explanation of class building

[12:37] <Geth> ¬¶ doc/master: 959226490a | Correcting an error and expanding

[12:37] <Geth> ¬¶ doc/master: 6cbcc42298 | Improving bless a bit more, refs #2077

[12:37] <Geth> ¬¶ doc/master: 1e3a7af09e | Improves bless documentation

[12:37] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/72ca26fc8e64...1e3a7af09e8a

[12:40] *** bisectable6 left
[12:40] *** evalable6 left
[12:40] *** committable6 left
[12:40] *** bisectable6 joined
[12:40] *** evalable6 joined
[12:40] *** committable6 joined
[12:40] <AlexDaniel> e: https://gist.github.com/AlexDaniel/c30fb599ee970d393edb9880df597449

[12:40] <evalable6> AlexDaniel, Using file ‚Äúheh‚Äù as a main file, other files are placed in ‚Äúsandbox/‚Äù

[12:40] <evalable6> AlexDaniel, rakudo-moar 56dbd735a: OUTPUT: ¬´foo‚ê§bar‚ê§baz‚ê§¬ª

[12:40] <AlexDaniel> \o/

[12:41] *** yqt left
[12:41] <jmerelo> AlexDaniel: cool!

[12:43] <araraloren> awesome

[12:46] *** lizmat left
[12:51] *** lizmat joined
[12:52] *** jmerelo left
[12:53] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúProper README is needed‚Äù: https://github.com/perl6/whateverable/issues/26

[12:53] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúProper README is needed‚Äù: https://github.com/perl6/whateverable/issues/26#issuecomment-394085499

[12:54] *** APic left
[12:56] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúImplement some sort of a cache‚Äù: https://github.com/perl6/whateverable/issues/31#issuecomment-394085711

[12:57] <Geth> ¬¶ whateverable: AlexDaniel self-unassigned Support multifile gists https://github.com/perl6/whateverable/issues/36

[12:59] *** APic joined
[13:06] *** Aaronepower left
[13:08] *** Aaronepower joined
[13:11] *** Aaronepower left
[13:17] *** Aaronepower joined
[13:21] *** yqt joined
[13:38] *** yqt left
[13:39] *** lizmat left
[13:43] <MasterDuke> what's an example of a regex that will take a very long time to match (or not)?

[13:46] *** psychoslave left
[13:46] *** lizmat joined
[13:50] *** lizmat left
[13:58] <AlexDaniel> m: say ‚Äòaaaaaaaaaaaaaaa‚Äô ~~ /a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/

[13:58] <AlexDaniel> MasterDuke: like this?

[13:58] <AlexDaniel> that's from https://swtch.com/~rsc/regexp/regexp1.html

[13:58] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´(timeout)¬ª

[13:58] <AlexDaniel> m: say ‚Äòa‚Äô ~~ /a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/

[13:58] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´Nil‚ê§¬ª

[13:59] <AlexDaniel> mhm

[13:59] <AlexDaniel> should be twice as many a's in the actual string

[13:59] <AlexDaniel> m: say ‚Äòaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa‚Äô ~~ /a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?a?aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/

[13:59] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´(timeout)¬ª

[14:03] *** kaare_ joined
[14:06] <MasterDuke> that's the idea, but i don't know what the input will be and i still want it to take a long time

[14:09] <AlexDaniel> oh, then just use zero-width assertion and make sure your regex fails

[14:09] <AlexDaniel> whos website are you hacking by the way? :)

[14:10] <AlexDaniel> m: say ‚Äòhello‚Äô ~~ /<before ‚Äò‚Äô>*/'

[14:10] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3say ‚Äòhello‚Äô ~~ /<before ‚Äò‚Äô>*/7‚èè5'‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§   ‚Ä¶¬ª

[14:10] <AlexDaniel> m: say ‚Äòhello‚Äô ~~ /<before ‚Äò‚Äô>*/

[14:10] <AlexDaniel> ok yeah just using * is alright

[14:10] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´(timeout)¬ª

[14:26] *** domidumont left
[14:30] <Summertime> for smartmatching against regex literals, is there any difference between m/something/ and rx/something/?

[14:31] <AlexDaniel> Summertime: ideally no, but in practice there is a difference

[14:31] <AlexDaniel> Summertime: https://github.com/perl6/doc/issues/1675

[14:32] <AlexDaniel> m: m/./; dd $/

[14:32] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´Use of uninitialized value of type Any in string context.‚ê§Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.‚ê§  in block <unit> at <tmp> line 1‚ê§Nil $/ = Nil‚ê§¬ª

[14:32] <AlexDaniel> m: /./; dd $/

[14:32] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´Nil $/ = Nil‚ê§¬ª

[14:32] <AlexDaniel> m: rx/./; dd $/

[14:32] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´Nil $/ = Nil‚ê§¬ª

[14:33] <AlexDaniel> that's from one of the linked bug reports

[14:35] *** ZeonPeon joined
[14:35] *** rindolf left
[14:37] *** wamba joined
[14:39] <Summertime> hmm, if I had a regex stored in a variable, how would one use that with match flags?

[14:39] <Summertime> x ~~ m:g/<regexname>/; ?

[14:39] *** rindolf joined
[14:40] *** zpc joined
[14:41] <jnthn> x.match($the-variable, :g)

[14:43] <Summertime> ah neat, didn't think to look at the str methods, thanks!

[14:45] <MasterDuke> m: my $r = '(\d)'; say 'a1b2c3"'~~ m:g/<$r>/

[14:45] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´(ÔΩ¢1ÔΩ£ ÔΩ¢2ÔΩ£ ÔΩ¢3ÔΩ£)‚ê§¬ª

[14:46] <MasterDuke> Summertime: ^^^ works also

[14:47] <jnthn> Indeed, though likely a good deal more slowly :)

[14:47] <El_Che> jnthn: and, did you receive enough stacktraces so far? :)

[14:48] <jnthn> El_Che: Plenty, it would seem :)

[14:48] <jnthn> Plenty for us to be looking at next week :)

[14:49] <El_Che> :)

[14:55] *** kaare_ left
[14:56] *** kaare_ joined
[15:03] *** Sgeo__ left
[15:04] *** Sgeo joined
[15:08] *** Sgeo_ joined
[15:08] <Summertime> another question that has been stumping me a bit

[15:09] <Summertime> trying to find all 2 element lists with both values the same

[15:09] <Summertime> m: say ((1,1),(1,2),(3,3),(3,7)).grep: {.[0] == .[1]}

[15:09] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´((1 1) (3 3))‚ê§¬ª

[15:10] <Summertime> is what I've got, but having the subscripts there feels a bit off, like I'm doing something wrong

[15:11] <MasterDuke> m: say ((1,1),(1,2),(3,3),(3,7)).grep: { [==] @$_}

[15:11] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´((1 1) (3 3))‚ê§¬ª

[15:11] *** Sgeo left
[15:12] *** lalitmee joined
[15:12] <MasterDuke> m: say ((1,1),(1,2),(3,3),(3,7)).grep: { [==] @_ } # huh, not sure what's happening here

[15:12] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´(((1 1)) ((3 3)))‚ê§¬ª

[15:13] *** Khisanth left
[15:13] *** lalitmee left
[15:14] <Summertime> perl confuses me more every day

[15:15] <Summertime> I'm guessing @_ causes the input to grep to change, which gives the unexpected extra list

[15:16] <Summertime> but, using [==] $_ worked

[15:17] <Summertime> still have the {} though, but it feels a lot neater now

[15:17] <Summertime> also scalable, which is a bonus for any code golfing :D

[15:18] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúYou could hang committab‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/13#issuecomment-394094592

[15:20] <b2gills> To bad there isn't a syntax like `*==*` that worked like `-> $ ($a,$b) { $a == $b }` instead of `-> $a, $b { $a == $b }`

[15:20] <AlexDaniel> squashable6: status

[15:20] <squashable6> AlexDaniel, üçïüçï SQUASHathon is in progress! The end of the event in ‚âà20 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[15:20] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/51c78bd8442c0ea4aa08c440ca9a900c

[15:20] <squashable6> üçïüçïüçï  First contribution by MasterDuke17++! ‚ô•

[15:21] <Summertime> function arguments deconstructing I guess? I keep expecting it to exist but yeah, can't find

[15:22] <Summertime> maybe like a ReverseslippyWhateverCode... but at that point .[#] doesn't feel like such a pain

[15:23] *** Sgeo__ joined
[15:23] <Summertime> on the plus side, I worked it out!

[15:23] <Summertime> m: say ((1,1),(1,2),(3,3),(3,7)).grep: *.repeated

[15:23] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´((1 1) (3 3))‚ê§¬ª

[15:25] <dogbert17> m: say ((1,1),(1,2),(3,3),(3,7)).grep(-> ($a, $b) {$a == $b})

[15:25] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´((1 1) (3 3))‚ê§¬ª

[15:25] *** Sgeo_ left
[15:26] *** Khisanth joined
[15:51] *** jmerelo joined
[15:59] *** kaare_ left
[15:59] *** kaare_ joined
[16:08] *** comborico1611 joined
[16:13] *** Success is now known as Failure

[16:25] <araraloren>  

[16:50] <AlexDaniel> squashable6: status

[16:50] <squashable6> AlexDaniel, üçïüçï SQUASHathon is in progress! The end of the event in ‚âà19 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[16:50] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/586e12e48b39ff7298a3c33d9dd541c1

[16:58] <squashable6> üçï AlexDaniel++ edited issue ‚ÄúMake it easier to run for contributors‚Äù: https://github.com/perl6/whateverable/issues/122

[17:00] *** HaraldJoerg joined
[17:04] <jmerelo> New report on the perl6 doc repo (and rakudo repo as bonus track) https://www.researchgate.net/publication/325532706_Author_and_file_entropy_in_the_Perl_6_documentation_repository Looking at entropy, and how it can reveal overlooked files as well as collaboration patterns.

[17:06] *** noganex left
[17:06] *** noganex joined
[17:09] *** raschipi joined
[17:11] <Geth> ¬¶ whateverable: 9a95f3569f | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/benchable.t

[17:11] <Geth> ¬¶ whateverable: Add tests for issue #38

[17:11] <Geth> ¬¶ whateverable: 

[17:11] <Geth> ¬¶ whateverable: Hard to tell what was the underlying issue, so just copying original

[17:11] <Geth> ¬¶ whateverable: queries as is. Closes #38.

[17:11] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/9a95f3569f

[17:11] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúIs benchable broken?‚Äù: https://github.com/perl6/whateverable/issues/38

[17:17] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúMake sure total timeout ‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/27#issuecomment-394102791

[17:19] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúBuild any dangling branches‚Äù: https://github.com/perl6/whateverable/issues/45#issuecomment-394102909

[17:19] *** wamba left
[17:20] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúGenerate @releases array automatically‚Äù: https://github.com/perl6/whateverable/issues/47

[17:20] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúGenerate @releases array automatically‚Äù: https://github.com/perl6/whateverable/issues/47#issuecomment-394102964

[17:33] <AlexDaniel>  m: say unique 1, -2, 2, 3, :as( { abs $_ } );

[17:33] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´(1 -2 3)‚ê§¬ª

[17:33] <AlexDaniel> ¬†m: say unique 1, -2, 2, 3, :as( { abs $_ } );

[17:33] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´(1 -2 3)‚ê§¬ª

[17:36] <squashable6> üçï JJ++ wrote a comment on ‚ÄúSurprising behavior when‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/125#issuecomment-394104045

[17:37] <AlexDaniel> 	m: say 42

[17:37] <camelia> rakudo-moar 56dbd735a: OUTPUT: ¬´42‚ê§¬ª

[17:37] *** Possum left
[17:40] <Geth> ¬¶ whateverable: fabcd4cd5b | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/evalable.t

[17:40] <Geth> ¬¶ whateverable: Add an extra autodetection test

[17:40] <Geth> ¬¶ whateverable: 

[17:40] <Geth> ¬¶ whateverable: Actually, the feature is well tested, and even this test is somewhat

[17:40] <Geth> ¬¶ whateverable: redundant. Closes #53.

[17:40] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/fabcd4cd5b

[17:40] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúMore ways to trigger evalable‚Äù: https://github.com/perl6/whateverable/issues/53

[17:44] <squashable6> üçï JJ++ edited wiki page ‚ÄúInstallation‚Äù: https://github.com/perl6/whateverable/wiki/Installation

[17:49] <jmerelo> AlexDaniel: Hanged in `/tmp/whateverable/rakudo-moar/c80ea2f28939875586d326ca1c63db2cdf7b8c8d is locked. Waiting‚Ä¶` when I tried to run the test again; fixed when erased. 

[17:49] <AlexDaniel> jmerelo: interesting, which test file is that?

[17:49] <squashable6> üçï JJ++ wrote a comment on ‚ÄúSurprising behavior when‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/125#issuecomment-394104787

[17:50] <jmerelo> AlexDaniel: unicodable.t

[17:50] <jmerelo> It was the same problem I had before, apparently.

[17:50] <AlexDaniel> ah, but it works now?

[17:50] <AlexDaniel> after installing zstd I suppose?

[17:51] <jmerelo> AlexDaniel: yep, that might be it.

[17:51] <AlexDaniel> jmerelo: actually, for testing some single changes, you can also use ÔΩ¢sake debug:unicodableÔΩ£

[17:51] <AlexDaniel> and the bot will join #whateverable channel

[17:51] <AlexDaniel> then you can talk to the bot and usually it will be more explicit

[17:51] <AlexDaniel> about things like that at least

[17:51] <jmerelo> AlexDaniel: I'm only trying to find my way for the time being...

[17:51] <AlexDaniel> :)

[17:52] <jmerelo> AlexDaniel: but tests work now, so I'll try to find out how to address that issue I'm commenting on.

[17:52] <AlexDaniel> \o/

[17:57] <squashable6> üçï JJ++ wrote a comment on ‚ÄúSurprising behavior when‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/125#issuecomment-394105183

[18:00] <AlexDaniel> jmerelo: usually when you write words in a query it does the search by looking at the uniname

[18:00] <AlexDaniel> for example

[18:00] <AlexDaniel> u: PILE POO

[18:00] <unicodable6> AlexDaniel, U+1F4A9 PILE OF POO [So] (üí©)

[18:00] <AlexDaniel> but if there are trailing spaces

[18:00] <AlexDaniel> u: PILE FOO 

[18:00] <unicodable6> AlexDaniel, Found nothing!

[18:00] <AlexDaniel> hm‚Ä¶ that's actually interesting

[18:00] <AlexDaniel> ah

[18:00] <AlexDaniel> u: PILE POO      

[18:00] <unicodable6> AlexDaniel, U+1F4A9 PILE OF POO [So] (üí©)

[18:01] <AlexDaniel> u: pile     

[18:01] <unicodable6> AlexDaniel, U+1F4A9 PILE OF POO [So] (üí©)

[18:01] <AlexDaniel> was it fixed?

[18:01] <squashable6> üçï JJ++ wrote a comment on ‚ÄúSurprising behavior when‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/125#issuecomment-394105439

[18:01] *** cog left
[18:01] <jmerelo> U: PILE 

[18:01] *** stmuk_ joined
[18:01] <jmerelo> u: PILE 

[18:01] <unicodable6> jmerelo, U+1F4A9 PILE OF POO [So] (üí©)

[18:01] <jmerelo> u: GREEK SMALL PI 

[18:01] <unicodable6> jmerelo, U+0373 GREEK SMALL LETTER ARCHAIC SAMPI [Ll] (Õ≥)

[18:01] <unicodable6> jmerelo, U+03C0 GREEK SMALL LETTER PI [Ll] (œÄ)

[18:02] <unicodable6> jmerelo, 9 characters in total (Õ≥œÄœ°·¥¶·¥ß·¥®·¥©·¥™Í≠•): https://gist.github.com/809ac66531536c21b8ecc5ff15ff4d9d

[18:02] <jmerelo> u: GREEK SMALL PI            

[18:02] <unicodable6> jmerelo, U+0373 GREEK SMALL LETTER ARCHAIC SAMPI [Ll] (Õ≥)

[18:02] <unicodable6> jmerelo, U+03C0 GREEK SMALL LETTER PI [Ll] (œÄ)

[18:02] <unicodable6> jmerelo, 9 characters in total (Õ≥œÄœ°·¥¶·¥ß·¥®·¥©·¥™Í≠•): https://gist.github.com/5db78fe901ce6be4b3060b039ede8897

[18:02] <AlexDaniel> jmerelo: I think it's this: https://github.com/perl6/whateverable/commit/6bf9dc908757031b6d329f725c097065071efe3b

[18:02] <AlexDaniel> so if you add a test we can close the ticket

[18:02] <jmerelo> AlexDaniel: OK

[18:03] *** stmuk left
[18:03] <AlexDaniel> shareable6: 2f8dfb267f1753498e0368e89a6974e0fe9f0104

[18:03] <shareable6> AlexDaniel, https://whateverable.6lang.org/2f8dfb267f1753498e0368e89a6974e0fe9f0104

[18:07] <jmerelo> u: GREEK PI    

[18:07] <unicodable6> jmerelo, U+0370 GREEK CAPITAL LETTER HETA [Lu] (Õ∞)

[18:07] <unicodable6> jmerelo, U+0372 GREEK CAPITAL LETTER ARCHAIC SAMPI [Lu] (Õ≤)

[18:07] <unicodable6> jmerelo, 165 characters in total: https://gist.github.com/baf2a46ebf285134e5a8330b20230f24

[18:07] <jmerelo> u: GREEK HETA    

[18:07] <unicodable6> jmerelo, U+0370 GREEK CAPITAL LETTER HETA [Lu] (Õ∞)

[18:07] <unicodable6> jmerelo, U+0371 GREEK SMALL LETTER HETA [Ll] (Õ±)

[18:07] <unicodable6> jmerelo, 6 characters in total (Õ∞Õ±ŒòŒ∏œëœ¥): https://gist.github.com/f7a8834c870bdb0cecf7131f717b9104

[18:07] <jmerelo> u: GREEK SMALL HETA    

[18:07] <unicodable6> jmerelo, U+0371 GREEK SMALL LETTER HETA [Ll] (Õ±)

[18:07] <unicodable6> jmerelo, U+03B8 GREEK SMALL LETTER THETA [Ll] (Œ∏)

[18:07] <jmerelo> u: GREEK SMALL THETA    

[18:07] <unicodable6> jmerelo, U+03B8 GREEK SMALL LETTER THETA [Ll] (Œ∏)

[18:07] <jmerelo> u: GREEK SMALL HETA    

[18:08] <unicodable6> jmerelo, U+0371 GREEK SMALL LETTER HETA [Ll] (Õ±)

[18:08] <unicodable6> jmerelo, U+03B8 GREEK SMALL LETTER THETA [Ll] (Œ∏)

[18:08] <jmerelo> u: GREEK HETA    

[18:08] <unicodable6> jmerelo, U+0370 GREEK CAPITAL LETTER HETA [Lu] (Õ∞)

[18:08] <unicodable6> jmerelo, U+0371 GREEK SMALL LETTER HETA [Ll] (Õ±)

[18:08] <unicodable6> jmerelo, 6 characters in total (Õ∞Õ±ŒòŒ∏œëœ¥): https://gist.github.com/01edb0e619e616cc0d3eab0ecac0a434

[18:08] <jmerelo> u: GREEK SMALL THETA    

[18:08] <unicodable6> jmerelo, U+03B8 GREEK SMALL LETTER THETA [Ll] (Œ∏)

[18:11] *** domidumont joined
[18:13] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúSomething fishy with pre-2015.09 commits‚Äù: https://github.com/perl6/whateverable/issues/74#issuecomment-394106136

[18:14] <Geth> ¬¶ whateverable: JJ++ created pull request #325: Adds test for ignoring trailing whitespace

[18:14] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/pull/325

[18:14] <squashable6> üçï JJ++ opened pull request ‚ÄúAdds test for ignoring trailing whitespace‚Äù: https://github.com/perl6/whateverable/pull/325

[18:14] <squashable6> üçï AlexDaniel++ labeled issue ‚ÄúSomething fishy with pre-2015.09 commits‚Äù: https://github.com/perl6/whateverable/issues/74

[18:15] <Geth> ¬¶ whateverable: dbaafbf7b3 | (JJ Merelo)++ | 2 files

[18:15] <Geth> ¬¶ whateverable: Capitalized Unicode

[18:15] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/dbaafbf7b3

[18:15] <Geth> ¬¶ whateverable: 95e6c9e297 | (JJ Merelo)++ | t/unicodable.t

[18:15] <Geth> ¬¶ whateverable: Adds test for trailing whitespace closes #125

[18:15] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/95e6c9e297

[18:15] <squashable6> üçï AlexDaniel++ merged pull request ‚ÄúAdds test for ignoring trailing whitespace‚Äù: https://github.com/perl6/whateverable/pull/325

[18:15] <Geth> ¬¶ whateverable: 37d2f56ac9 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | 2 files

[18:15] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúSurprising behavior when‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/125

[18:15] <Geth> ¬¶ whateverable: Merge pull request #325 from JJ/master

[18:15] <Geth> ¬¶ whateverable: 

[18:15] <Geth> ¬¶ whateverable: Adds test for ignoring trailing whitespace

[18:15] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/37d2f56ac9

[18:23] <squashable6> üçï MasterDuke17++ edited wiki page ‚ÄúInstallation (for maintainers)‚Äù: https://github.com/perl6/whateverable/wiki/Installation-%28for-maintainers%29

[18:24] <squashable6> üçï MasterDuke17++ edited wiki page ‚Äú_Sidebar‚Äù: https://github.com/perl6/whateverable/wiki/_Sidebar

[18:27] <raschipi> u: greek small theta

[18:27] <unicodable6> raschipi, U+03B8 GREEK SMALL LETTER THETA [Ll] (Œ∏)

[18:27] <raschipi> u: greek small theta 

[18:27] <unicodable6> raschipi, U+03B8 GREEK SMALL LETTER THETA [Ll] (Œ∏)

[18:27] *** araraloren left
[18:30] *** imcsk8 left
[18:38] <squashable6> üçï JJ++ wrote a comment on ‚ÄúRunning bots without zstd leaves lock dirs behind‚Äù: https://github.com/perl6/whateverable/issues/316#issuecomment-394107734

[18:38] *** imcsk8 joined
[18:40] <AlexDaniel> jmerelo: hmmm, what if you try to bump the timeout?

[18:40] <AlexDaniel> like:

[18:40] <AlexDaniel> $t.test(:30, ‚ÄòSearch using the code block‚Äô,

[18:40] <AlexDaniel> oops

[18:40] <AlexDaniel> $t.test(:30timeout, ‚ÄòSearch using the code block‚Äô,

[18:41] <jmerelo> OK, maybe it's got nothing to do with that

[18:41] <jmerelo> I'll try. First thing tomorrow. I'm AFK now

[18:41] *** jmerelo left
[18:42] <Geth> ¬¶ whateverable: 9bcf0a3fd6 | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/committable.t

[18:42] <Geth> ¬¶ whateverable: Test wrapped lines in commit lists

[18:42] <Geth> ¬¶ whateverable: 

[18:42] <Geth> ¬¶ whateverable: Resolves #77.

[18:42] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/9bcf0a3fd6

[18:42] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúMake committable output more readable‚Äù: https://github.com/perl6/whateverable/issues/77

[18:43] <buggable> New CPAN upload: Net-LibIDN2-0.0.4.tar.gz by KAIEPI http://modules.perl6.org/dist/Net::LibIDN2:cpan:KAIEPI

[18:45] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúRunning bots without zstd leaves lock dirs behind‚Äù: https://github.com/perl6/whateverable/issues/316#issuecomment-394108252

[18:50] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúImprove code in Unicodable‚Äù: https://github.com/perl6/whateverable/issues/78#issuecomment-394108538

[18:50] <squashable6> üçï AlexDaniel++ labeled issue ‚ÄúImprove code in Unicodable‚Äù: https://github.com/perl6/whateverable/issues/78

[18:57] *** molaf left
[18:58] *** molaf joined
[18:59] *** hankache joined
[19:01] <Geth> ¬¶ whateverable: 2aee5e2a11 | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/unicodable.t

[19:01] <Geth> ¬¶ whateverable: Make sure unicodable doesn't create humongous gists

[19:01] <Geth> ¬¶ whateverable: 

[19:01] <Geth> ¬¶ whateverable: Resolves #79.

[19:01] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/2aee5e2a11

[19:01] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúUnicodable is unable to ‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/79

[19:01] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúUnicodable is unable to ‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/79#issuecomment-394109240

[19:05] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúUnicodable and Statisfiable are leaking memory‚Äù: https://github.com/perl6/whateverable/issues/80#issuecomment-394109445

[19:05] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúUnicodable and Statisfiable are leaking memory‚Äù: https://github.com/perl6/whateverable/issues/80

[19:06] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúAdd tests for memory usage‚Äù: https://github.com/perl6/whateverable/issues/197#issuecomment-394109478

[19:06] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúAdd tests for memory usage‚Äù: https://github.com/perl6/whateverable/issues/197

[19:06] <squashable6> üçï AlexDaniel++ labeled issue ‚ÄúWhat should happen with weird unicode newlines?‚Äù: https://github.com/perl6/whateverable/issues/115

[19:06] <squashable6> üçï AlexDaniel++ unlabeled issue ‚ÄúBisectable should detect‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/114

[19:07] *** lizmat joined
[19:07] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúBisectable should detect‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/114#issuecomment-394109566

[19:08] <AlexDaniel> bench: compare HEAD slurp().trans( Q<\> => [Q<\\>], ["\n"] => ['\n']) ||| slurp().subst(Q<\>, Q<\\>).subst("\n", '\n')

[19:08] <benchable6> AlexDaniel, starting to benchmark the 1 given commit

[19:08] <benchable6> AlexDaniel, https://gist.github.com/443fd0ebed4554917b1ccda72206616d

[19:08] <AlexDaniel> lol awesome

[19:09] <AlexDaniel> bench: compare HEAD slurp().trans( Q<\> => [Q<\\>], ["\n"] => ['\n']) ||| slurp().subst(Q<\>, Q<\\>).subst("\n", '\n')

[19:09] <benchable6> AlexDaniel, starting to benchmark the 1 given commit

[19:09] <benchable6> AlexDaniel, https://gist.github.com/d47a49db62710179c127d1ff67e19877

[19:09] *** benchable6 left
[19:09] *** benchable6 joined
[19:09] *** ChanServ sets mode: +v benchable6

[19:09] <AlexDaniel> bench: compare HEAD slurp().trans( Q<\> => [Q<\\>], ["\n"] => ['\n']) ||| slurp().subst(Q<\>, Q<\\>).subst("\n", '\n')

[19:09] <benchable6> AlexDaniel, starting to benchmark the 1 given commit

[19:09] *** buggable left
[19:09] <benchable6> AlexDaniel, https://gist.github.com/c955a59b54621f00bccd0ea2dbaab7d8

[19:10] <AlexDaniel> MasterDuke: huh, hum‚Ä¶ I guess there's some PERL6LIB issue? ‚Üë

[19:10] *** huggable left
[19:10] <AlexDaniel> it passes its tests though, I think

[19:10] *** ZofBot left
[19:10] <AlexDaniel> so perhaps systemd is restricting it a bit too much?

[19:11] <squashable6> üçï AlexDaniel++ opened issue ‚Äú‚ÄúCould not find Bench‚Äù‚Äù: https://github.com/perl6/whateverable/issues/326

[19:11] <squashable6> üçï AlexDaniel++ labeled issue ‚Äú‚ÄúCould not find Bench‚Äù‚Äù: https://github.com/perl6/whateverable/issues/326

[19:11] *** hobbs left
[19:12] *** hoelzro left
[19:12] *** leedo left
[19:12] *** hoelzro joined
[19:12] *** jcallen left
[19:12] *** jcallen joined
[19:12] *** leedo joined
[19:13] *** hobbs joined
[19:13] *** hobbs left
[19:13] *** hobbs joined
[19:13] *** domidumont left
[19:13] <El_Che> http://news.perlfoundation.org/2018/06/tpc-newsletter-06022018.html

[19:13] <El_Che> The Perl Conference Newsletter

[19:13] <El_Che> USA-centric much?

[19:15] *** rindolf left
[19:17] *** darutoko left
[19:18] *** wamba joined
[19:23] *** ZeonPeon left
[19:27] *** koto joined
[19:29] <Geth> ¬¶ whateverable: da226145c3 | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/bisectable.t

[19:29] <Geth> ¬¶ whateverable: Test that bisectable won't chdir

[19:29] <Geth> ¬¶ whateverable: 

[19:29] <Geth> ¬¶ whateverable: Resolves #90.

[19:29] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/da226145c3

[19:29] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúSomething wrong with bisectable (let's chdir less)‚Äù: https://github.com/perl6/whateverable/issues/90

[19:30] *** sena_kun left
[19:32] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúAdd additional ‚ÄúWhat?‚Äù c‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/96

[19:32] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúAdd additional ‚ÄúWhat?‚Äù c‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/96#issuecomment-394111353

[19:33] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúBuild any dangling branches‚Äù: https://github.com/perl6/whateverable/issues/45#issuecomment-394111477

[19:39] <Geth> ¬¶ whateverable: ba2579f64d | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/unicodable.t

[19:39] <Geth> ¬¶ whateverable: Make sure there's no preview for weird chars

[19:39] <Geth> ¬¶ whateverable: 

[19:39] <Geth> ¬¶ whateverable: Resolves #104.

[19:39] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/ba2579f64d

[19:39] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúUnicodable should print ‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/104

[19:40] <squashable6> üçï AlexDaniel++ unlabeled issue ‚ÄúDelete /tmp/whateverable‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/144

[19:41] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúDelete /tmp/whateverable‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/144#issuecomment-394112015

[19:44] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúTurn regressionable into an actual bot‚Äù: https://github.com/perl6/whateverable/issues/123#issuecomment-394112198

[19:46] <squashable6> üçï MasterDuke17++ edited wiki page ‚ÄúQuotable‚Äù: https://github.com/perl6/whateverable/wiki/Quotable

[19:46] <Geth> ¬¶ whateverable: af89312af8 | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Regressionable.p6

[19:46] <Geth> ¬¶ whateverable: Remove Regressionable

[19:46] <Geth> ¬¶ whateverable: 

[19:46] <Geth> ¬¶ whateverable: This was a non-bot, and it is abandoned. Feel free to restore it if

[19:46] <Geth> ¬¶ whateverable: there's a need. Resolves #123.

[19:46] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/af89312af8

[19:46] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúTurn regressionable into an actual bot‚Äù: https://github.com/perl6/whateverable/issues/123

[19:48] *** SCHAPiE left
[19:49] *** hankache left
[19:52] <squashable6> üçï AlexDaniel++ unlabeled issue ‚Äú‚Äúdid you want benchable6 or committable6?‚Äù‚Äù: https://github.com/perl6/whateverable/issues/128

[19:52] <squashable6> üçï AlexDaniel++ wrote a comment on ‚Äú‚Äúdid you want benchable6 or committable6?‚Äù‚Äù: https://github.com/perl6/whateverable/issues/128#issuecomment-394112794

[19:53] *** espadrine joined
[19:54] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúMake it understand / ‚Äò.say‚Äô $ / too‚Äù: https://github.com/perl6/whateverable/issues/130#issuecomment-394112904

[19:54] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúMake it understand / ‚Äò.say‚Äô $ / too‚Äù: https://github.com/perl6/whateverable/issues/130

[19:54] <squashable6> üçï AlexDaniel++ unlabeled issue ‚Äú‚Äútoo many open files‚Äù‚Äù: https://github.com/perl6/whateverable/issues/136

[19:58] *** psychoslave joined
[19:59] *** rindolf joined
[20:03] *** psychoslave left
[20:05] *** SCHAPiE joined
[20:05] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúReport information about the bot itself‚Äù: https://github.com/perl6/whateverable/issues/135#issuecomment-394113641

[20:05] <squashable6> üçï AlexDaniel++ labeled issue ‚ÄúReport information about the bot itself‚Äù: https://github.com/perl6/whateverable/issues/135

[20:06] <AlexDaniel> squashable6: uptime

[20:06] <squashable6> AlexDaniel, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/2f4d3141f8316a201904bcd597a8c207

[20:06] <AlexDaniel> awesome

[20:06] <AlexDaniel> MasterDuke: oh, I think I know

[20:06] <AlexDaniel> squashable6: uptime

[20:06] <squashable6> AlexDaniel, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/dbfd84d24cc9204ced9271e14e1be056

[20:07] <AlexDaniel> gah‚Ä¶

[20:07] *** squashable6 left
[20:07] *** squashable6 joined
[20:07] <AlexDaniel> squashable6: uptime

[20:07] <squashable6> AlexDaniel, 16 seconds, 346.597656MiB maxrss. This is Rakudo version 2018.04.1-118-g2f4b2f428 built on MoarVM version 2018.04.1-121-gd634d24cf implementing Perl 6.c.

[20:07] <AlexDaniel> \o/

[20:07] <Geth> ¬¶ doc: uzluisf++ created pull request #2090: Fix some typos and wording

[20:07] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2090

[20:07] <AlexDaniel> MasterDuke: it is something precomp-related, and probably even more so given that bots are not really allowed to change precomp files

[20:08] *** cog joined
[20:08] <AlexDaniel> squashable6: status

[20:08] <squashable6> AlexDaniel, üçïüçï SQUASHathon is in progress! The end of the event in ‚âà15 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[20:08] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/68ddd23ae60a45d279b34b1418cdbf82

[20:09] <Geth> ¬¶ doc: e34029ebd7 | (Luis F. Uceta)++ | doc/Language/numerics.pod6

[20:09] <Geth> ¬¶ doc: Fix some typos and wording

[20:09] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e34029ebd7

[20:09] <Geth> ¬¶ doc: 746819f29b | (Rafael Schipiura)++ (committed using GitHub Web editor) | doc/Language/numerics.pod6

[20:09] <Geth> ¬¶ doc: Merge pull request #2090 from uzluisf/master

[20:09] <synopsebot> Link: https://doc.perl6.org/language/numerics

[20:09] <Geth> ¬¶ doc: 

[20:09] <Geth> ¬¶ doc: Fix some typos and wording

[20:09] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/746819f29b

[20:09] *** lizmat left
[20:18] *** andrzejku left
[20:21] *** psychoslave joined
[20:21] <Geth> ¬¶ whateverable: 53f83c0b57 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 3 files

[20:21] <Geth> ¬¶ whateverable: Commit some maintenance scripts

[20:21] <Geth> ¬¶ whateverable: 

[20:21] <Geth> ¬¶ whateverable: These files were on the server but for some reason never made its way

[20:21] <Geth> ¬¶ whateverable: to the git repo (they are used rarely). Some of these are a bit

[20:21] <Geth> ¬¶ whateverable: useful, so for now let's commit them.

[20:21] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/53f83c0b57

[20:22] <Geth> ¬¶ whateverable: 6c0bbef987 | bisectable++ | lib/Whateverable.pm6

[20:22] <Geth> ¬¶ whateverable: Change `INIT now` to `$*INIT-INSTANT`

[20:22] <Geth> ¬¶ whateverable: 

[20:22] <Geth> ¬¶ whateverable: Whateverable.pm6 was getting precomped, so `INIT now` didn't make sense.

[20:22] <Geth> ¬¶ whateverable: AlexDaniel++

[20:22] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/6c0bbef987

[20:22] <Geth> ¬¶ whateverable: ea3b5855c7 | bisectable++ | .gitignore

[20:22] <Geth> ¬¶ whateverable: Ignore vim's temp files

[20:22] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/ea3b5855c7

[20:22] *** cog left
[20:22] *** espadrine left
[20:23] *** cog joined
[20:33] *** raschipi left
[20:33] <Geth> ¬¶ whateverable: 419f917156 | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Shareable.p6

[20:33] <Geth> ¬¶ whateverable: Fix url in shareable

[20:33] <Geth> ¬¶ whateverable: 

[20:33] <Geth> ¬¶ whateverable: If running on the server, config.json should have ‚Äúself‚Äù entry which

[20:33] <Geth> ¬¶ whateverable: should be used instead.

[20:33] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/419f917156

[20:33] <Geth> ¬¶ whateverable: 65843bc27e | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[20:33] <Geth> ¬¶ whateverable: Commit temporary workarounds for Shareable

[20:33] <Geth> ¬¶ whateverable: 

[20:33] <Geth> ¬¶ whateverable: Both changes are a workaround for rakudo/rakudo#1595. This commit

[20:33] <synopsebot> RAKUDO#1595 [open]: https://github.com/rakudo/rakudo/issues/1595 [weird] Some bug with a combination of $*KERNEL.hardware, slurp, run and Cro

[20:33] <Geth> ¬¶ whateverable: should be reverted later.

[20:33] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/65843bc27e

[20:34] *** chakli joined
[20:36] <chakli> Hi, How do i insert an element into an array? ex: insert c in <a b d> to <a b c d>

[20:37] <moritz> m: my @a = <a b d>; @a.splice(1, 0, 'd'); say @a.perl

[20:37] <camelia> rakudo-moar af645c9f4: OUTPUT: ¬´["a", "d", "b", "d"]‚ê§¬ª

[20:37] <moritz> m: my @a = <a b d>; @a.splice(1, 0, 'c'); say @a.perl

[20:37] <camelia> rakudo-moar af645c9f4: OUTPUT: ¬´["a", "c", "b", "d"]‚ê§¬ª

[20:37] <moritz> m: my @a = <a b d>; @a.splice(2, 0, 'c'); say @a.perl

[20:37] <camelia> rakudo-moar af645c9f4: OUTPUT: ¬´["a", "b", "c", "d"]‚ê§¬ª

[20:37] <moritz> chakli: ^^

[20:38] <moritz> https://docs.perl6.org/routine/splice

[20:38] <chakli> oh god, kept searching inset in the docs could not find anything

[20:39] <chakli> Thanks

[20:40] *** undersightable6 left
[20:42] *** undersightable6 joined
[20:43] <squashable6> üçï AlexDaniel++ edited issue ‚Äúnon-perl5 regexes and greppable‚Äù: https://github.com/perl6/whateverable/issues/150

[20:44] <squashable6> üçï AlexDaniel++ edited issue ‚Äúnon-perl5 regexes and greppable‚Äù: https://github.com/perl6/whateverable/issues/150

[20:44] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúGreppable and short output‚Äù: https://github.com/perl6/whateverable/issues/151#issuecomment-394115873

[20:44] <squashable6> üçï AlexDaniel++ labeled issue ‚ÄúGreppable and short output‚Äù: https://github.com/perl6/whateverable/issues/151

[20:45] *** zakharyas joined
[20:46] <AlexDaniel> m: say %ENV.comb.pick().join

[20:46] <camelia> rakudo-moar af645c9f4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '%ENV' is not declared‚ê§at <tmp>:1‚ê§------> 3say 7‚èè5%ENV.comb.pick().join‚ê§¬ª

[20:46] <AlexDaniel> m: say %*ENV.comb.pick().join

[20:46] <camelia> rakudo-moar af645c9f4: OUTPUT: ¬´s‚ê§¬ª

[20:46] <AlexDaniel> e: say %*ENV.comb.pick().join

[20:46] <evalable6> AlexDaniel, rakudo-moar af645c9f4: OUTPUT: ¬´2‚ê§¬ª

[20:46] <AlexDaniel> e: say %*ENV.comb.pick().join

[20:46] <evalable6> AlexDaniel, rakudo-moar af645c9f4: OUTPUT: ¬´d‚ê§¬ª

[20:46] <AlexDaniel> what's 2?

[20:46] <AlexDaniel> ah‚Ä¶

[20:46] <AlexDaniel> m: say %*ENV<ME>

[20:46] <camelia> rakudo-moar af645c9f4: OUTPUT: ¬´AlexDaniel‚ê§¬ª

[20:47] <AlexDaniel> e: say %*ENV<ME>

[20:47] <evalable6> AlexDaniel, rakudo-moar af645c9f4: OUTPUT: ¬´(Any)‚ê§¬ª

[20:47] *** espadrine joined
[20:47] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúSet ME env variable‚Äù: https://github.com/perl6/whateverable/issues/204#issuecomment-394116048

[20:47] *** Jonta joined
[20:47] <moritz> e: say %*ENV.comb(/.**{0,5}2.**{0,5}/)

[20:47] <evalable6> moritz, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/3c42d154b4d1679328d956a7110bcc63

[20:47] <AlexDaniel> wtf xD

[20:48] <AlexDaniel> e: say %*ENV.comb(/.**{0,5}2.**{0,5}/)

[20:49] <AlexDaniel> moritz: I have no way to explain this :D

[20:51] *** evalable6 left
[20:51] *** evalable6 joined
[20:51] *** ChanServ sets mode: +v evalable6

[20:52] <moritz> e: say %*ENV.comb(/.**{0,5}2.**{0,5}/)[0]

[20:52] <evalable6> moritz, rakudo-moar af645c9f4: OUTPUT: ¬´342a2‚ê§¬ª

[20:52] <moritz> looks like a commit hash

[20:52] <moritz> e: say %*ENV.comb(/.**{0,15}2.**{0,15}/)[0]

[20:52] <evalable6> moritz, rakudo-moar af645c9f4: OUTPUT: ¬´342a2‚ê§¬ª

[20:53] <AlexDaniel> e: say %*ENV

[20:53] <evalable6> AlexDaniel, rakudo-moar af645c9f4: OUTPUT: ¬´{HOME => /home/bisectable, INVOCATION_ID => ebaa84b146d342a28a64f5f68f28178c, JOURNAL_STRE‚Ä¶¬ª

[20:53] <evalable6> AlexDaniel, Full output: https://gist.github.com/3ccc957ae77fdd0f08baa1d2ed62cd32

[20:54] <squashable6> üçï AlexDaniel++ wrote a comment on ‚Äú‚ÄúCould not find Bench‚Äù‚Äù: https://github.com/perl6/whateverable/issues/326#issuecomment-394116427

[20:55] *** rindolf left
[20:55] *** Kaiepi left
[20:57] <AlexDaniel> moritz: my crazy theory about `zst is not installed` is that the server was out of memory (MasterDuke++ for testing things!) when it got to that line: https://github.com/perl6/whateverable/blob/65843bc27ebbd3f60af7aea0206ceb6bc5f14471/lib/Whateverable.pm6#L415

[20:57] *** Kaiepi joined
[20:57] <AlexDaniel> so it somehow failed

[20:57] <AlexDaniel> zstd*

[21:00] <squashable6> üçï MasterDuke17++ wrote a comment on ‚Äú‚ÄúCould not find Bench‚Äù‚Äù: https://github.com/perl6/whateverable/issues/326#issuecomment-394116782

[21:00] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúUnicodable shouldn't rep‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/272#issuecomment-394116785

[21:06] <moritz> AlexDaniel: sounds somewhat sensible

[21:09] <Geth> ¬¶ whateverable: bbe2ff4544 | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/unicodable.t

[21:09] <Geth> ¬¶ whateverable: Test preview when describing characters

[21:09] <Geth> ¬¶ whateverable: 

[21:09] <Geth> ¬¶ whateverable: Resolves #272.

[21:09] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/bbe2ff4544

[21:09] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúUnicodable shouldn't rep‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/272

[21:09] <squashable6> üçï AlexDaniel++ labeled issue ‚ÄúThe watchdog should work based on ping events‚Äù: https://github.com/perl6/whateverable/issues/276

[21:13] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúAdd support for RT‚Äù: https://github.com/perl6/whateverable/issues/226#issuecomment-394117494

[21:13] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúAdd support for RT‚Äù: https://github.com/perl6/whateverable/issues/226

[21:14] <squashable6> üçï AlexDaniel++ wrote a comment on ‚Äú‚ÄúCould not find Bench‚Äù‚Äù: https://github.com/perl6/whateverable/issues/326#issuecomment-394117571

[21:14] <squashable6> üçï AlexDaniel++ closed issue ‚Äú‚Äúcouldn't find Bench‚Äù‚Äù: https://github.com/perl6/whateverable/issues/219

[21:16] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúStop talking to NickServ‚Äù: https://github.com/perl6/whateverable/issues/213#issuecomment-394117703

[21:16] <squashable6> üçï AlexDaniel++ closed issue ‚ÄúStop talking to NickServ‚Äù: https://github.com/perl6/whateverable/issues/213

[21:22] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúTwo department issues‚Äù: https://github.com/perl6/whateverable/issues/223#issuecomment-394118055

[21:22] <squashable6> üçï AlexDaniel++ edited issue ‚ÄúTests to ensure that we ‚Ä¶‚Äù: https://github.com/perl6/whateverable/issues/223

[21:22] *** kaare_ left
[21:23] <squashable6> üçï AlexDaniel++ unlabeled issue ‚ÄúSignal names are displayed incorrectly‚Äù: https://github.com/perl6/whateverable/issues/220

[21:23] <squashable6> üçï AlexDaniel++ wrote a comment on ‚ÄúSignal names are displayed incorrectly‚Äù: https://github.com/perl6/whateverable/issues/220#issuecomment-394118136

[21:23] <squashable6> üçï AlexDaniel++ labeled issue ‚ÄúSignal names are displayed incorrectly‚Äù: https://github.com/perl6/whateverable/issues/220

[21:25] <squashable6> üçï AlexDaniel++ edited issue ‚ÄúStress testing for get-output sub‚Äù: https://github.com/perl6/whateverable/issues/172

[21:26] <squashable6> üçï AlexDaniel++ edited issue ‚ÄúBenchable and used modules‚Äù: https://github.com/perl6/whateverable/issues/154

[21:27] <squashable6> üçï AlexDaniel++ edited issue ‚ÄúBenchable and used modules‚Äù: https://github.com/perl6/whateverable/issues/154

[21:27] <AlexDaniel> well, that's fun :)

[21:27] <AlexDaniel> but I have to get some sleep now, and tomorrow I'm away for a trip

[21:28] <AlexDaniel> o/ üçï

[21:28] <El_Che> AlexDaniel: wow

[21:28] <El_Che> active-active :)

[21:28] <El_Che> lots of pizza for ypu

[21:28] <El_Che> have fun tomorrow!

[21:29] <AlexDaniel> El_Che: speaking of fun, this is probably one of the coolest contributions from today:

[21:29] <AlexDaniel> e: https://gist.github.com/AlexDaniel/c30fb599ee970d393edb9880df597449

[21:29] <evalable6> AlexDaniel, Using file ‚Äúheh‚Äù as a main file, other files are placed in ‚Äúsandbox/‚Äù

[21:29] <evalable6> AlexDaniel, rakudo-moar af645c9f4: OUTPUT: ¬´foo‚ê§bar‚ê§baz‚ê§¬ª

[21:29] <AlexDaniel> but maybe you've seen it already :)

[21:30] <AlexDaniel> camelia: https://gist.github.com/AlexDaniel/c30fb599ee970d393edb9880df597449

[21:30] <AlexDaniel> m: https://gist.github.com/AlexDaniel/c30fb599ee970d393edb9880df597449

[21:30] <camelia> rakudo-moar af645c9f4: OUTPUT: ¬´Failed to open file /home/camelia/sandbox/data: No such file or directory‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:30] <AlexDaniel> interesting, which file did it choose and why?

[21:30] <El_Che> :)

[21:31] *** maia joined
[21:31] <AlexDaniel> I mean, I totally see which file was executed, but why? :)

[21:32] <AlexDaniel> ah: https://github.com/perl6/evalbot/blob/a9ed3caa2bd772adac6ec301b028130963ec1a69/lib/EvalbotExecuter.pm#L91

[21:32] <AlexDaniel> pure luck then :)

[21:32] * AlexDaniel &

[21:33] *** koto left
[21:55] *** entonian joined
[21:55] *** Kaypie joined
[21:56] *** Kaiepi left
[22:00] *** entonian left
[22:00] *** lizmat joined
[22:02] *** Kaypie left
[22:08] *** maia left
[22:10] *** zakharyas left
[22:13] *** Kaiepi joined
[22:17] *** [Sno] left
[22:25] *** Kaiepi left
[22:34] *** silug joined
[22:40] *** |oLa|2 left
[22:40] *** |oLa| joined
[22:41] *** Kaiepi joined
[22:45] *** |oLa| left
[22:51] *** kkrev joined
[22:54] *** |oLa| joined
[22:55] *** Kaiepi left
[22:56] *** Kaiepi joined
[22:58] <kkrev> not sure where this goes: https://nopaste.linux-dev.org/?1181606

[23:09] *** wamba left
[23:12] *** psychoslave left
[23:13] <MasterDuke> kkrev: seems like it might be because of/related to https://github.com/rakudo/rakudo/pull/1820

[23:13] *** psychoslave joined
[23:16] <kkrev> MasterDuke: I just wanted to play around. Figured I'd mention it here if anyone wants to let the right people know something's broken. This is standard Fedora.

[23:18] *** psychoslave left
[23:19] <MasterDuke> kkrev: how did you get your perl6?

[23:19] <kkrev> MasterDuke: rakudobrew

[23:20] <MasterDuke> kkrev: rakudobrew is mostly discouraged now, unless you really have a need to switch between multiple versions of rakudo

[23:21] <El_Che> kkrev: rakudobrew is a bad match for regular users. Use rakudo-pkg (https://github.com/nxadm/rakudo-pkg) or rakudo star

[23:21] <El_Che> (rakudo pkg has fedora repos)

[23:21] <El_Che> (rakudo star compiles a released version locally)

[23:22] <kkrev> OK thanks. I think you have five years of web inertia to fight on rakudobrew. I will try rakudo-pkg now.

[23:23] <El_Che> kkrev: I launched rakudo-pkg because people where complaining about rakudobrew-for-regular-users on this channel :)

[23:31] <rouking> exit

[23:31] *** rouking left
[23:33] *** Kaiepi left
[23:34] *** HaraldJoerg left
[23:35] *** mscha joined
[23:35] <mscha> m: my $sh = SetHash.new; $sh{1} = True; $sh{2} //= True; say $sh; # huh?

[23:35] <camelia> rakudo-moar af645c9f4: OUTPUT: ¬´SetHash(1)‚ê§¬ª

[23:36] <mscha> m: my $sh = SetHash.new; $sh{1} = True; $sh{2} //= True; $sh{3} ||= True; say $sh; # huh?

[23:36] <camelia> rakudo-moar af645c9f4: OUTPUT: ¬´SetHash(1 3)‚ê§¬ª

[23:36] <kkrev> switched to rakudo-pkg. Another FYI I guess: https://nopaste.linux-dev.org/?1181607

[23:36] <jnthn> m: my $sh = SetHash.new; dd $sh{2}

[23:36] <yoleaux> 15:32Z <nine> jnthn: So if I'd want to use the multi dispatch machinery to pick between a multi candidate that takes named args and one that doesn't, my best chance is to give the proto a different find_best_dispatchee method. Right?

[23:36] <camelia> rakudo-moar af645c9f4: OUTPUT: ¬´Bool::False‚ê§¬ª

[23:36] <yoleaux> 16:54Z <nine> jnthn: unless you tell me that this is a really bad idea, I'm going to merge it somewhat soon into Inline::Perl5's master: https://github.com/niner/Inline-Perl5/commit/053b8d0c3a9d298cf28bd1c2877de549b82405a8

[23:37] <mscha> Never mind.  $sh{2} = False is defined

[23:37] <jnthn> mscha: SetHash entries produce False by default

[23:37] <jnthn> Right :)

[23:37] <kkrev> I definitely have libffi installed.

[23:38] <MasterDuke> jnthn: while you're thinking about SetHashes, any thoughts on https://github.com/rakudo/rakudo/pull/1847 ?

[23:40] <MasterDuke> kkrev: ignoring the libffi part (and this is definitely going outside things i know about for sure), but i think linenoise is known to be problematic and readline is recommended if possible

[23:41] *** chakli left
[23:41] *** chakli joined
[23:43] <kkrev> MasterDuke: https://nopaste.linux-dev.org/?1181608

[23:43] <kkrev> readline-devel is installed

[23:43] <El_Che> kkrev: yes, I forked until DrForr has time to fix it

[23:44] <El_Che> https://github.com/nxadm/perl6-readline

[23:44] <jnthn> .tell nine Well, it comes with the same caveats of using any nqp:: ops outside of core, which is that while they're often de facto stable, there's no promises made about them. There's a non-zero chance that the current multi cache mechanism will eventually be subsumed by my work on spesh plugins.

[23:44] <yoleaux> jnthn: I'll pass your message to nine.

[23:44] <El_Che> kkrev: zef install https://github.com/nxadm/perl6-readline.git

[23:44] <El_Che> 1 line patch

[23:45] <El_Che> I opened a ticket for the linenoise and readline perl modules that are broken on some distros

[23:46] <kkrev> OK, thanks, your readline works fine.

[23:46] *** mscha left
[23:47] <El_Che> yeah, the fix works on modern distros with readline 7

[23:47] <El_Che> but not on distros with older readlines, hence no PR

[23:48] <El_Che> it has to do with a wider versioning challenge about versioning of libs and nativecall

[23:49] <jnthn> .tell nine So, effectively, you can commit it, but those ops might at some point go away, so there'd be some updating to do at that point. So long as you're good with that, I'm also ok.

[23:49] <yoleaux> jnthn: I'll pass your message to nine.

[23:49] <El_Che> and since jnthn is taking requests this evening ---^

[23:49] <El_Che> :)

[23:55] <jnthn> MasterDuke: Hm, does that introduce a potentially awkward discontinuity between assigning one set and two sets into a SetHash, where in the first case it flattens away, and in second not?

[23:55] <jnthn> m: say Set ~~ Iterable

[23:55] <camelia> rakudo-moar af645c9f4: OUTPUT: ¬´False‚ê§¬ª

[23:55] <jnthn> We generally consider sets as items

[23:57] <jnthn> El_Che: I'm pretty sure we've people in the community who know better than me on handling native library versioning issues and such. :)

[23:57] <jnthn> El_Che: I already designed one bit of module/versioning infrastructure and haven't heard the end of "oh no sha1s!!!" ever since. :P

[23:57] <MasterDuke> jnthn: ah. think the problem should be solved at the meta-op level?

[23:58] <jnthn> MasterDuke: Potentially, yes

[23:58] <El_Che> jnthn: lol

[23:58] <El_Che> jnthn: full disclosure, I am a sha1 winer :)

[23:59] <jnthn> MasterDuke: I'm pretty sure I agree with the result you're aiming at on assignment meta-ops with SetHash and friends.

[23:59] <jnthn> MasterDuke: I'm just worried about the STORE(Set) way of achieving it, and that probably does mean it wants a META_OP_ASSIGN candidate dedicated to it

