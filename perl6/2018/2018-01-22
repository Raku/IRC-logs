[00:00] <Kaiepi> lizmat: try making it my sub gethostname(CArray[uint8] is rw, size_t --> int32) is native('c') { * }

[00:02] <Kaiepi> my $host = CArray[uint8].new(("\x00" x 255).ords); my $errno = gethostname($host, 255); my $hostname = Str.new($host.list).trim; say $errno, $hostname

[00:03] <Zoffix> shinobi_cl: there's an open Issue R#1414 for differences between variable and parameter subset constraints. Looks like there's additional issues with `Subset @foo` parameters. I'm hoping it's just a bug and doesn't interfere with how the behaviour in the Issue is gonna be implemented. If you omit the `of` in your subset, then it seems to work (which makes me think there's a bug): m: subset Pos where * >= 1; my

[00:03] <synopsebot> R#1414 [open]: https://github.com/rakudo/rakudo/issues/1414 Class attribute constraints applied on elements of array attribute, not the attribute itself

[00:03] <Zoffix> Pos @arr = 1,2,3; say @arr.^name; sub testPosArray(Pos @arr) { say @arr.^name }(@arr)

[00:05] <Zoffix> shinobi_cl: note that looking at your code, I'd say you're over-doing constraints. I hear "type is king" in Haskell. It's not in Perl 6. Trying to constraint every little thing will likely cause tears; though I'm happy your attempts are discovering bugs in less-used corners of the compiler.

[00:05] *** pecastro left
[00:09] *** kent\n left
[00:10] <Zoffix> timotimo++ # explaining getlexref

[00:11] <Zoffix> m: use nqp; my int $x; nqp::if($x,$x) = 42; say $x

[00:11] <camelia> rakudo-moar 5cbd55281: OUTPUT: ¬´42‚ê§¬ª

[00:12] *** comborico1611 left
[00:12] <Zoffix> I guess that answers R#1416 and it can be closed

[00:12] <synopsebot> R#1416 [open]: https://github.com/rakudo/rakudo/issues/1416 [perf] my int $n; nqp::if($n,1) is 4.5x slower than non-native version

[00:14] *** comborico1611 joined
[00:16] *** markong left
[00:20] <shinobi_cl> Zoffix: Understood. I'm was just hoping to rely in constraints to avoid checking the data myself :) 

[00:21] <shinobi_cl> I was*

[00:25] <geekosaur> tbh as consumer of such an API I'd much rather actual error checking and useful messages therefrom that know what the data is, instead of requiring me to understand the program that consumes it

[00:26] <geekosaur> ...even if it's a one-off for my own use (consider that one a lesson learned the hard way)

[00:28] *** TEttinger left
[00:30] *** yoleaux joined
[00:30] *** ChanServ sets mode: +v yoleaux

[00:39] *** trnh left
[00:41] *** wamba left
[00:44] <Xliff_> comborico1611: No, it's that PLUS the use of a different inline language that has nothing to do with the language you were initially writing in. Kinda like mixing C and ASM, but WORSE!

[00:45] <Xliff_> At least C and ASM have relations.

[00:45] <comborico1611> Xliff_: that sounds bazaar.

[00:50] <timotimo> Xliff_: don't forget that the best practice is to differentiate between presentational components and functional components

[00:51] <timotimo> or i guess presentational and container components

[00:52] <timotimo> and only the presentational components are supposed to have noticable amounts of html in them

[00:53] <Xliff_> Well, I am OK with business and storage logic in code, and an intelligent presentation layer (read templates) to handle everything else.

[00:53] <Xliff_> Quite frankly if the presentation layer is dumb, I am ok with another layer to handle display logic only.

[00:54] <Xliff_> However React seems to be a step backwards in code readability.

[00:55] <Xliff_> comborico1611: I see C and ASM in the same file like kissing cousins. Code and HTML is more like.... Trump and Ivanka.

[00:55] <Xliff_> And now, after reading what I just typed, I will consign myself to timotimo's dungeon.

[00:56] <Xliff_> (we know you have one (timo x 2))

[00:57] <Xliff_> comborico1611: In other words, there is livable discomfort, and then there's just plain yuck.

[00:57] <Xliff_> OK...definitely moving in to timotimo's dungeon, now.

[00:58] <timotimo> huh? you mean like "timotimo enjoys react, so they must be a sadist and/or masochist"?

[01:01] <timotimo> i'm rather confused

[01:09] *** aborazmeh joined
[01:09] *** aborazmeh left
[01:09] *** aborazmeh joined
[01:14] *** astj joined
[01:20] *** kent\n joined
[01:22] <dmaestro> b2gills: thanks for the suggestion - I'll be looking further at it :-)

[01:25] *** TEttinger joined
[01:33] <Kaiepi> t/04-nativecall/08-callbacks.t .............. Failed 8/8 subtests       

[01:33] <yoleaux> 12 Jan 2018 22:56Z <Zoffix> Kaiepi: RE: C book. I'm currently learning using this one http://knking.com/books/c2/index.html It was recommended by regulars in ##c channel and it's an almost perfect book (the imperfection is exercises often re-use code from exercises of previous chapters and if you don't feel like doing a particular program, you can't just skip it, because you'll come across it later again)

[01:33] <Kaiepi> hm

[01:34] <Kaiepi> ah thanks zoffix

[01:34] *** astj_ joined
[01:34] *** astj left
[01:36] *** Kaiepi left
[01:36] *** TEttinger left
[01:37] *** Kaiepi joined
[01:38] *** Kaiepi left
[01:39] *** Kaiepi joined
[01:52] *** TEttinger joined
[01:55] *** comborico1611 left
[02:30] *** Nanjizal joined
[02:35] <Xliff_> timotimo: I was just kidding. Ignore me.

[02:37] <Xliff_> timotimo: Are you denying you have a dungeon, tho? ¬¨_¬¨

[02:44] *** lookatme joined
[02:44] *** ilbot3 left
[02:44] *** khw left
[02:56] *** ilbot3 joined
[02:56] *** ChanServ sets mode: +v ilbot3

[02:57] *** mtj_ left
[03:02] *** shinobi_cl left
[03:06] *** mtj_ joined
[03:08] *** shinobi_cl joined
[03:12] *** ponbiki left
[03:12] *** ponbiki joined
[03:13] *** AlexDaniel joined
[03:15] <AlexDaniel> it takes a little bit of time to get a feel for react

[03:15] <AlexDaniel> at first I didn't like it too

[03:26] *** mtj_ left
[03:39] *** traxex left
[03:42] *** traxex joined
[03:44] <AlexDaniel> https://www.reddit.com/r/perl6/comments/5g4g4o/is_perl6_on_moarvm_fast_enough_yet/dapgo5w/

[03:44] <AlexDaniel> hah, that seems to be accurate?

[03:54] *** TEttinger left
[03:58] *** TEttinger joined
[03:58] *** khw joined
[04:02] *** shinobi_cl left
[04:07] *** TEttinger left
[04:09] *** TEttinger joined
[04:14] *** mtj_ joined
[04:21] *** shinobi-cl joined
[04:25] *** faraco joined
[04:26] <faraco> Hi. Is there any similar module or a clone/port of Perl 5's WebService::Gitter?

[04:27] <faraco> I want to put this into most wanted list since I found this may be very useful for rapid API wrapping development.

[04:27] <faraco> If there isn't any available of course.

[04:29] <faraco> Oh, this is the WebService::Gitter link to save some of your time searching - https://metacpan.org/pod/WebService::Client

[04:31] *** Zoffix left
[04:31] <faraco> Well, I'll just leave the repo name in the list I guess and remove it in case anyone found it is not necessary.

[04:32] *** Cabanossi left
[04:32] <shinobi-cl> this looks a bit too complicated... any prettier way to do it? 

[04:32] <shinobi-cl> m: my @a = ( "1,2,3", "4,5,6"); my @b = @a.map(*.split(',').list).flat; say @b.perl;

[04:32] <camelia> rakudo-moar 5cbd55281: OUTPUT: ¬´["1", "2", "3", "4", "5", "6"]‚ê§¬ª

[04:33] *** Cabanossi joined
[04:38] <AlexDaniel> shinobi-cl: .list seems to be unnecessary

[04:39] <AlexDaniel> m: my @a = ( "1,2,3", "4,5,6"); my @b = @a.map(*.split(',')).flat; say @b.perl;

[04:39] <camelia> rakudo-moar 5cbd55281: OUTPUT: ¬´["1", "2", "3", "4", "5", "6"]‚ê§¬ª

[04:41] *** khw left
[04:41] <AlexDaniel> faraco: does not look like there's a perl¬†6 alternative, but‚Ä¶

[04:41] <faraco> AlexDaniel: oh...but what?

[04:42] <AlexDaniel> faraco: here's a crazy idea, it's very likely that it won't work for you: there's https://github.com/matiaslina/perl6-matrix-client

[04:42] <AlexDaniel> faraco: given that gitter seems to be bridged with matrix, maybe you can get something useful out of it?

[04:43] <faraco> AlexDaniel: Maybe I can use this to port WebService::Gitter myself. :)

[04:43] <faraco> AlexDaniel: Thanks. Will see how this one will do.

[04:45] <faraco> Anyway, I'll put the name into the list regardless. Maybe someone else is already working on it..

[04:46] <AlexDaniel> faraco: yes, sure!

[04:46] <faraco> :)

[04:48] <Geth> ¬¶ perl6-most-wanted: 47e0b78812 | faraco++ (committed using GitHub Web editor) | most-wanted/modules.md

[04:48] <Geth> ¬¶ perl6-most-wanted: Add WebService::Client

[04:48] <Geth> ¬¶ perl6-most-wanted: 

[04:48] <Geth> ¬¶ perl6-most-wanted: - A module to make wrapping internet services API, easier.

[04:48] <Geth> ¬¶ perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/47e0b78812

[04:49] <shinobi-cl> what functions i can use to measure time spent in an execution of a method?

[04:49] <shinobi-cl> i want to add some performance tests in one .t file

[04:50] <AlexDaniel`> Hello from the Matrix network!!! (and Matrix::Client module)

[04:50] <AlexDaniel> wow, it works

[04:50] <AlexDaniel> faraco: ‚Üë :)

[04:51] <faraco> shinobi-cl: https://docs.perl6.org/language/performance#Time_with_now_-_INIT_now 

[04:51] <faraco> may be helpful

[04:52] <faraco> s/may/might/

[04:53] *** nativecallable6 left
[04:53] *** nativecallable6 joined
[04:56] <faraco> oooh. Decentralized communication.

[05:05] *** faraco left
[05:09] *** cpup left
[05:13] *** Kaiepi left
[05:16] *** Kaiepi joined
[05:19] *** aborazmeh left
[05:23] *** shinobi-cl left
[05:49] *** cpup joined
[05:50] *** statisfiable6 left
[05:50] *** statisfiable6 joined
[06:06] *** darutoko joined
[06:27] *** Nanjizal left
[07:04] *** espadrine left
[07:26] *** rindolf joined
[07:32] *** ufobat joined
[07:33] *** wamba joined
[07:46] *** jast left
[07:46] <Geth> ¬¶ doc: c77565e445 | (Luca Ferrari)++ | doc/Language/regexes.pod6

[07:46] <Geth> ¬¶ doc: Change output line to match exactly.

[07:46] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/c77565e445

[07:46] <Geth> ¬¶ doc: 550ce558fa | (Luca Ferrari)++ | doc/Language/regexes.pod6

[07:46] <Geth> ¬¶ doc: Itemize the benefits of non capturing groups in regex.

[07:46] <synopsebot> Link: https://doc.perl6.org/language/regexes

[07:46] <Geth> ¬¶ doc: 

[07:46] <Geth> ¬¶ doc: Also format another couple of OUTPUTs to match the exact statement.

[07:46] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/550ce558fa

[07:46] <Geth> ¬¶ doc: dcaebf0a19 | (Luca Ferrari)++ | doc/Language/regexes.pod6

[07:46] <Geth> ¬¶ doc: Extend explaination of nesting capture markers.

[07:46] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/dcaebf0a19

[07:47] *** jast joined
[07:52] *** domidumont joined
[07:55] <Geth> ¬¶ doc: c9b7a70f57 | (Luca Ferrari)++ | doc/Language/variables.pod6

[07:55] <Geth> ¬¶ doc: Minor changes to the sigilles introduction.

[07:55] <Geth> ¬¶ doc: 

[07:55] <Geth> ¬¶ doc: Remove the quotes around variabiles, move Perl 6 at the beginning of the

[07:55] <Geth> ¬¶ doc: sentence and make 'sigil' singular.

[07:55] <synopsebot> Link: https://doc.perl6.org/language/variables

[07:55] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/c9b7a70f57

[07:55] <Geth> ¬¶ doc: 2e937b77f6 | (Luca Ferrari)++ | doc/Language/variables.pod6

[07:55] <Geth> ¬¶ doc: Minor rewording in the sigilles introduction.

[07:55] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/2e937b77f6

[08:03] *** lowbro joined
[08:03] *** lowbro left
[08:03] *** lowbro joined
[08:12] *** domidumont left
[08:13] *** domidumont joined
[08:15] *** stmuk joined
[08:16] *** stmuk_ left
[08:24] *** abraxxa joined
[08:24] *** S007 left
[08:24] *** S007 joined
[08:30] *** mempko left
[08:33] *** mempko joined
[08:34] *** zakharyas joined
[08:35] *** melezhik joined
[08:35] *** S007 left
[08:35] *** S007 joined
[08:55] *** zakharyas left
[08:56] *** zakharyas joined
[08:59] *** lookatme left
[09:00] *** zakharyas left
[09:01] *** zakharyas joined
[09:02] *** johnnymacs is now known as dorothyw

[09:07] *** lowbro left
[09:07] *** jsimonet left
[09:09] *** abraxxa left
[09:10] *** Krishna joined
[09:10] *** Krishna left
[09:13] <Geth> ¬¶ doc: 9cfac0f3ec | (Luca Ferrari)++ | doc/Language/variables.pod6

[09:13] <Geth> ¬¶ doc: Place OUTPUT in context variabiles and compile time ones.

[09:13] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/9cfac0f3ec

[09:13] <Geth> ¬¶ doc: 27d5f3f334 | (Luca Ferrari)++ | doc/Language/variables.pod6

[09:13] <Geth> ¬¶ doc: Make '!' and '.' twigils consecutive sections.

[09:13] <synopsebot> Link: https://doc.perl6.org/language/variables

[09:13] <Geth> ¬¶ doc: 

[09:13] <Geth> ¬¶ doc: Move '?' after dynamic variables, and make class-wide twigil

[09:13] <Geth> ¬¶ doc: ('.' and '!') together: it is simple for the reader to read about

[09:13] <Geth> ¬¶ doc: these two sections also because they refer each other.

[09:13] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/27d5f3f334

[09:14] *** dakkar joined
[09:20] *** jsimonet joined
[09:21] *** lowbro joined
[09:27] *** zakharyas left
[09:27] *** zakharyas joined
[09:30] *** lowbro left
[09:30] *** lowbro joined
[10:19] *** tyil left
[10:25] *** markong joined
[10:25] <Kaiepi> does LD_LIBRARY_PATH have any effect on where perl'll look for libraries for NativeCall?

[10:27] <melezhik> Hi! Any suggestions on Perl6 module/helpers to create cli apps, exect  "sub MAIN"  ?

[10:28] <melezhik> exect -> exept 

[10:31] <markong> exept -> except :)

[10:33] <AlexDaniel> melezhik: perhaps look through Term::* modules https://modules.perl6.org/search/?q=TERM

[10:34] <melezhik> markong,  AlexDaniel  . Thanks, will do ))

[10:37] <moritz> also http://modules.perl6.org/search/?q=getopt

[10:37] <AlexDaniel> oh yea

[10:41] *** raschipi joined
[10:41] <melezhik> Thanks, moritz. This one is probably is what I looked for ... 

[10:42] *** tyil joined
[10:43] *** sena_kun joined
[10:48] *** setty1 joined
[10:56] *** piojo joined
[10:59] *** natrys joined
[11:01] <piojo> Hi

[11:01] <piojo> is it a known issue that IO::Spec::*.abs2rel isn't threadsafe?

[11:01] <piojo> (or was it fixed already?)

[11:02] *** wamba left
[11:04] <piojo> I'm about 80% sure that IO::Path.Str showed the same error, but it's hard to reproduce that one

[11:04] *** zakharyas left
[11:05] *** Zoffix joined
[11:05] <Zoffix> piojo: IO::Path is not a thread-safe object. It's mutable

[11:05] <jkramer> Also $bar might be a typo in the documentation: $bar defaults to $*CWD

[11:05] <jkramer> Should be $base I guess

[11:07] *** TEttinger left
[11:07] <Geth> ¬¶ doc/post-release: 3f25ea5589 | (Zoffix Znet)++ | 2 files

[11:07] <Geth> ¬¶ doc/post-release: Fix typo; jkramer++

[11:07] <Geth> ¬¶ doc/post-release: review: https://github.com/perl6/doc/commit/3f25ea5589

[11:07] <piojo> Zoffix: so if I call this in a threaded context, I should expect inconsistency? It looks reasonable to me:         say $path.IO.basename ~ " is " ~ IO::Spec::Unix($path.Str);

[11:08] <piojo> I know that the .IO or the .Str is redundant, but I haven't tested what happens if I remove it

[11:09] <Zoffix> piojo: that code is a runtime error...

[11:10] <piojo> Sorry, the current exact line is:

[11:10] <piojo> say "Basename of "~IO::Spec::Cygwin.abs2rel($file-path.Str)~" is "~$file-path.basename;

[11:10] <evalable6> piojo, rakudo-moar 0a1641e94: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/QdiLGMzppC‚ê§Variabl‚Ä¶¬ª

[11:10] <evalable6> piojo, Full output: https://gist.github.com/4438f8cdb612e2fd50a2f9cdce5f596f

[11:10] <piojo> bot is too clever :)

[11:11] <Zoffix> piojo: and $file-path is accessed from multiple threads?

[11:12] <jnthn> Why is IO::Path mutable, ooc?

[11:12] <jnthn> (I'd always assumed it was value-like, something like Str is)

[11:13] <Zoffix> Dunno, it was that way before my IO work. %!parts is mutable and is filled only when one of the methods (e.g. dirname/.basename) are accessed. $!is-absolute is also mutable and is set on first request to is-absolute

[11:13] <piojo> Zoffix: something about the object is being modified. I'll be able to tell after I refactor it

[11:13] <Zoffix> piojo: IO::Spec::Unix.abs2rel looks thread-safe to me.

[11:14] <raschipi> Zoffix: Can't put a lock on that?

[11:14] <Zoffix> raschipi: locks aren't free

[11:14] <jnthn> It sounds like those are just cache

[11:15] <jnthn> In which case we can 1) compute them and 2) bind the result of that computation into the attribute

[11:15] <jnthn> Since the cached result would be immutable once computed

[11:15] <piojo> oh, I should also mention that I'm occasionally getting weird output like "Basename of . is <the name of a file>"

[11:15] <jnthn> Two threads may race to compute that cached data, but they'd never see incomplete data

[11:15] <piojo> so it doesn't sound like anything I could possibly be doing wrong

[11:16] <piojo> there's no way I would be assigning "." to a file path string anywhere in the script.

[11:16] <Zoffix> jnthn: ah right. Then never mind me.

[11:16] <jnthn> Well, you're right in that a lock is heavyweight, I'm just pointing out we can achieve thread safety without one here, by the sounds of it :)

[11:16] <Zoffix> piojo: IO::Path has .absolute method. The ::Spec:: objects isn't something you typically need to use.

[11:17] <jnthn> I can take a look at some point

[11:17] *** zakharyas joined
[11:17] <jnthn> (Not now, alas...)

[11:17] <piojo> Zoffix: now I'm just trying to verify that this is a bug and figure out how to report. I don't need this script to always have correct output

[11:17] <Zoffix> jnthn: but I think it might already be. 'cause IIRC caching is all that's done

[11:18] <Zoffix> piojo: "this" being what? I don't see you mentioning what specific issue you were having in the log.

[11:18] <jnthn> Zoffix: Seems it is indeed: https://github.com/rakudo/rakudo/blob/master/src/core/IO/Path.pm#L73

[11:19] <jnthn> And it's then a Map which is immutable after creation

[11:19] <piojo> Zoffix: I'm getting this output sometimes:

[11:19] <piojo> Basename of Core/UI/Screens/CTooltip_HeroIconLayout.cs is CTooltip_PlainTextLayout.cs

[11:19] <piojo> or this, which isn't wrong but doesn't make sense:

[11:19] <piojo> Basename of ../CTooltip_HeroIconLayout.cs is CTooltip_HeroIconLayout.cs

[11:20] <piojo> In the first case, the basename is wrong. In the second case, the path is being unpredictable (or sometimes showing as ".")

[11:21] <Zoffix> piojo: no idea. Too tired. You can file an Issue here: https://github.com/rakudo/rakudo/issues/new

[11:21] * Zoffix drops to bed

[11:21] *** Zoffix left
[11:22] <piojo> Zoffix: thanks. I'll try to make it happen with a set of dummy files

[11:30] *** jast left
[11:31] *** jast joined
[11:32] <buggable> New CPAN upload: P5times-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5times-0.0.1.tar.gz

[11:32] *** travis-ci joined
[11:32] <travis-ci> Doc build failed. Zoffix Znet 'Fix typo; jkramer++'

[11:32] <travis-ci> https://travis-ci.org/perl6/doc/builds/331757499 https://github.com/perl6/doc/compare/9d07ddbeff54...3f25ea558935

[11:32] *** travis-ci left
[11:33] <buggable> [travis build above] ‚ò† Did not recognize some failures. Check results manually.

[11:33] <lizmat> I'm thinking of starting a #perl6-cpan5 channel in support of the CPAN Butterfly Plan

[11:33] <lizmat> opinions?

[11:33] *** yoleaux left
[11:34] *** yoleaux joined
[11:34] *** ChanServ sets mode: +v yoleaux

[11:35] *** lowbro left
[11:44] *** psch joined
[11:46] *** zakharyas left
[11:48] *** releasable6 left
[11:48] *** releasable6 joined
[12:02] *** Nanjizal joined
[12:06] *** AlexDani` joined
[12:07] *** AlexDaniel left
[12:09] *** AlexDani` is now known as AlexDaniel

[12:14] *** yoleaux left
[12:14] *** yoleaux joined
[12:14] *** ChanServ sets mode: +v yoleaux

[12:25] *** wamba joined
[12:27] *** abraxxa joined
[12:32] <buggable> New CPAN upload: Sparrowform-0.0.1.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Sparrowform-0.0.1.tar.gz

[12:36] *** benchable6 left
[12:36] *** coverable6 left
[12:36] *** reportable6 left
[12:36] *** benchable6 joined
[12:36] *** ChanServ sets mode: +v benchable6

[12:37] *** coverable6 joined
[12:37] *** reportable6 joined
[12:37] *** ChanServ sets mode: +v reportable6

[12:46] *** wamba left
[13:10] *** cgfbee left
[13:12] <buggable> New CPAN upload: Sparrowform-0.0.2.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Sparrowform-0.0.2.tar.gz

[13:20] *** cgfbee joined
[13:27] *** zakharyas joined
[13:28] *** MasterDuke left
[13:32] *** AlexDaniel is now known as AlexDanie

[13:32] *** AlexDanie is now known as AlexDaniel

[13:40] *** astj_ left
[13:40] *** astj joined
[13:42] <buggable> New CPAN upload: Sparrowform-0.0.3.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Sparrowform-0.0.3.tar.gz

[13:42] <buggable> New CPAN upload: SQL-Lexer-0.2.1.tar.gz by DMAESTRO https://cpan.metacpan.org/authors/id/D/DM/DMAESTRO/Perl6/SQL-Lexer-0.2.1.tar.gz

[13:42] *** jeromelanteri left
[13:43] *** AlexDaniel left
[13:44] <El_Che> lizmat: something for your faq? What is someone want to port a perl5 module; shoud (s)he use a perl6 api or a straight port of the perl 5 api (even if weird in perl6)? In short, what is more useful, native or p5->6modules?

[13:44] <lizmat> for the CPAN Butterfly Plan, the API should be as close to P5 as possible

[13:45] <lizmat> I've used the tag "CPAN5" for these

[13:45] <El_Che> I get that, but in general. It looks like competing efforts

[13:46] <geekosaur> sounds like it as well

[13:46] <geekosaur> not to mention that it does neither perl 5 nor perl 6 justice

[13:46] <El_Che> do you want perl 5 code to port to perl 6 or new perl 6 code?

[13:46] <El_Che> ideally, both, of course

[13:46] <El_Che> just pointing it out, because it may be something that pops up

[13:46] <lizmat> 1. I want to lower the threshold for people coming from Perl 5

[13:47] <lizmat> 2. I want to create an ecosystem on which a Butterfly Perl 5 can be built

[13:47] <lizmat> 3. I don't care how the modules with the P5 API look inside, they could well be a shim around a true Perl 6 port

[13:48] <El_Che> I was thinking of 3 for a faq

[13:48] <El_Che> or rather, the other way round

[13:48] <El_Che> (sound easier to design something native, and put a layer on top of that than the other way around)

[13:49] *** angelds joined
[13:49] <lizmat> El_Che: that may very well depend on the situation

[13:49] <lizmat> and the complexity of the module

[13:50] <El_Che> true, but if you prefer one way or the other it's better to define that in de guidelines, while not making them obligatory

[13:51] <lizmat> ok, will do  :-)

[13:51] <El_Che> maybe it does not matter at all, but I think it may be one of the questions people may have

[13:51] <El_Che> lizmat: you covered XS on reddit already :)

[13:52] <lizmat> oh, which one specifically do you mean?

[13:53] <El_Che> in the discussion with chromatic you kind of classified what was out of scope

[13:53] <El_Che> and what was built-in in the perl6 ecosystem

[13:53] <El_Che> introspection, exceptions,  dual vars, etc

[13:54] <lizmat> ah, that list

[13:54] <lizmat> ok

[13:55] <lizmat> BTW, maybe you'd care to comment on daxim's comment?

[13:55] <El_Che> url?

[13:55] <El_Che> (I would need to create an account for that though)

[13:56] <lizmat> https://www.reddit.com/r/perl/comments/7r1b33/an_open_letter_to_the_perl_community/dsyy8hw/

[13:58] *** domidumont left
[13:59] <El_Che> mention the pkgs or something deeper?

[13:59] *** domidumont joined
[14:00] <stmuk> https://github.com/stmuk/rakudo-packages

[14:00] <lizmat> El_Che: starting with the packages would be a good start ?

[14:00] <stmuk> I didn't reply because the question didn't make any sense

[14:00] <stmuk> what's a "default language"?

[14:01] <stmuk> modern computers aren't like turning on a C64 and seeing BASIC :)

[14:01] <El_Che> stmuk: default installed

[14:01] <El_Che> installed by default in English

[14:02] <El_Che> I think it's more appropiate to answer the parent

[14:02] <stmuk> El_Che: many of the linux installs ask questions about packages

[14:02] <stmuk> I'm sure there are debian installs which don't install ruby or python

[14:03] <raschipi> Mine for example.

[14:03] <stmuk> there will be no redhat installs without python because their installers use it

[14:05] <El_Che> stmuk: yes, I am wrting similar

[14:05] <El_Che> "Living in a container world, I don't care much about a default install. You'll end up installing modules, compilers and whatnot anyway, no matter if its Perl5, Ruby or Python."

[14:05] <El_Che> "That said..."

[14:05] *** yoleaux left
[14:05] <El_Che> I need to type the rest :)

[14:05] *** cdg joined
[14:05] *** yoleaux joined
[14:05] *** ChanServ sets mode: +v yoleaux

[14:05] <lizmat> El_Che++

[14:08] <stmuk> its a nonsense question

[14:08] <stmuk> what does he mean "Python and Go are doing now"? python has been available for over 20 years

[14:09] <stmuk> what self respecting perl 5 programmer would use a system supplied perl 5 anyway :)

[14:11] <geekosaur> that is one of the things programmers learn with experience; it doesn't come prewired

[14:11] *** astj left
[14:11] <geekosaur> I mean "don't use system supplied X" is a faq in all of perl(5)/python/ruby/etc.

[14:11] <geekosaur> and starting to be for haskell (thanks, Arch...)

[14:12] *** astj joined
[14:14] *** bisectable6 left
[14:14] *** bisectable6 joined
[14:14] *** ChanServ sets mode: +v bisectable6

[14:16] <teatime> Any Debian install will have both perl and python because Apt uses both

[14:16] *** astj left
[14:16] <Geth> ¬¶ ecosystem: 10c2cd9b14 | (Elizabeth Mattijsen)++ | META.list

[14:16] <Geth> ¬¶ ecosystem: Remove PackUnpack from ecosystem

[14:16] <Geth> ¬¶ ecosystem: 

[14:16] <Geth> ¬¶ ecosystem: It is superseded by P5pack on CPAN.

[14:16] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/10c2cd9b14

[14:17] *** Kaiepi left
[14:17] *** cgfbee left
[14:17] <El_Che> lizmat: https://www.reddit.com/r/perl/comments/7r1b33/an_open_letter_to_the_perl_community/dt274qj/

[14:18] *** Kaiepi joined
[14:18] <lizmat> El_Che: thanks!

[14:19] * geekosaur has already had to help someone try to recover from installing the wrong upgraded module into system perl5 on debian and blowing apt's brains out

[14:20] <raschipi> teatime: I can't find a depedency from apt/dpkg on python on my desktop, where is it used?

[14:21] <El_Che> lizmat: idea is not to be confrontational, as the question was slightly weird but not aggressive

[14:21] <stmuk> raschipi: my guess is its probably an apt backend

[14:22] <raschipi> Cumulus Linux has a project called ifupdown2 that can't susbstitute ifupdown in Debian because it's written in Python basic system can't depend on Python. It could if it was in Perl 5.

[14:22] <buggable> New CPAN upload: P5pack-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5pack-0.0.1.tar.gz

[14:22] <raschipi> Missed a comma.

[14:23] <stmuk> anyway I still think a "default language" is pretty meaningless and not very useful for the average programmer on a modern linux system

[14:23] <teatime> I mean, it's something I def. think about when writing something like an installer script

[14:23] <teatime> but I missed the original discussion

[14:24] <stmuk> it was used basically just a way of bashing perl 6 on reddit

[14:24] *** cgfbee joined
[14:24] <raschipi> I need to use system perl to do system administration, because documenting a non-default perl isn't worth it. Well, I wouyld have to use it at least to keep the other installation going, so it would be wasted effort anyway.

[14:24] <mspo> default/system perl ruined perl just like it ruined python

[14:25] <mspo> linux distros hate software, afaict

[14:25] <El_Che> it sounds more like "mspo hate linux distros, afaict" :)

[14:26] <mspo> also true

[14:26] * moritz hates software, hardware and meatware

[14:26] <moritz> there, I said it :-)

[14:26] * lizmat hugs moritz 

[14:26] <mspo> El_Che: they should have called it rh-perl and rh-python, just like rpm forked its own version of bdb

[14:26] <mspo> El_Che: then there would have been much fewer problems

[14:27] <mspo> but the whole linux distro philosophy is ..

[14:27] <El_Che> mspo: that's actually a good idea

[14:27] <mspo> nevermind

[14:27] <mspo> El_Che: no shit

[14:28] <mspo> El_Che: then yum update python doesn't destroy your system because yum depends on python

[14:28] <raschipi> Debian has a project to put upstream maintainers in control of releasing software in Debian itself, automating the distro gates, but there has to be a test suit hooked into autopackagetest. The package would be built and if the tests pass, the new version would be submitted to the archive immediately.

[14:28] <raschipi> Of course all that depend on it would have to be tested too.

[14:28] <teatime> in my experience developers don't understand the benefits of package management enough and sysadmins don't understand developers' needs enough

[14:29] <mspo> or packages, like apt/yum, that depend on perl/python should be statically linked

[14:29] <raschipi> teatime: sysadmins understand their needs perfectly well, it just say no.

[14:29] <mspo> perl5 even has methods to do that!

[14:29] <teatime> mspo: why?

[14:29] <timotimo> not being included by default hasn't harmed nodejs's appeal, has it?

[14:29] <teatime> raschipi: hmm?

[14:30] <mspo> timotimo: it enhances it because you can actually update it

[14:30] <timotimo> well, yeah, in your world, sure. but this is arguing against the "perl 6 sucks because it's not preinstalled on the 100 megabyte debian netinst image" viewpoint

[14:30] *** st_elmo joined
[14:31] <teatime> your best bet w/ e.g. python is leave the system python alone, completely, and use venvs / private python installation for your developed code.

[14:31] <timotimo> ^ obvious reductio ad absurdum, of course

[14:31] <teatime> but again, sysadmins and developers both think the other group is stupid.  and are both usually wrong.

[14:31] <mspo> teatime: yes I know and it's terrible

[14:32] <teatime> mspo: I don't see how to improve it.

[14:32] <mspo> teatime: although, ironically, redhat thinks pyenv is such a good idea that they have duplicated it in the form of software collections

[14:32] <stmuk> I do see advantages to using system languages sometimes .. at least they are likely to get security patched .. unlike that old 5.8.7 install noone dare touch

[14:32] <mspo> teatime: so now to use newer *git* you have to run a special bash :)

[14:33] <mspo> speaking of pyenv, is there a way to get out of it?

[14:33] *** yoleaux left
[14:34] <raschipi> Since CVE-2002-0059, static linking is completely forbidden in Debian.

[14:34] <mspo> stmuk: as someone who had to learn shell scripting on solaris 7 I'm not sure about patches :)

[14:34] <mspo> raschipi: no one tell golang :)

[14:35] <mspo> anyway I am highly biasted to the BSD method of base and packages/ports being different things

[14:36] <raschipi> My system tells me "Packages that depend on golang (0)".

[14:36] <mspo> I consider docker a reaction to linux distro complexity and language packaging problems

[14:37] <raschipi> Having system perl being in a different package has the precedent of it being done with GCC.

[14:37] <El_Che> mspo: you'd be surprised how many bad practices are migrated fron hw/vm to a container

[14:37] <raschipi> Yep, containers are just a way to enable bad practices.

[14:39] <raschipi> For an example, I gave a CVE above.

[14:41] <stmuk> I did experiment a bit with a linux appimage of rakudo star but appimage didn't seem to fit programming language use very well

[14:41] <stmuk> seems to be intended just to run a single app .. so it worked well with the REPL but little else

[14:41] <El_Che> stmuk: it looks to me like a base that appimage requires

[14:42] <stmuk> I couldn't see an easy way of running a program outside the appimage

[14:43] <El_Che> coffee

[14:44] <El_Che> rakudo is compiling on on opensuse, let's see how far we get on this run

[14:44] <El_Che> so far so good

[14:44] <geekosaur> there are some fairly significant misunderstandings here about the point of distributions and the differences between end users and developers (and between different styles of development, too!)

[14:45] <mspo> the point of distributions?

[14:45] <teatime> raschipi: I am bored of looking, but package 'apt' suggests python-apt (which depends python), and package 'python' is priority standard.

[14:45] <mspo> computers, in general, are for solving business problems :)

[14:45] <stmuk> "apt" is a new front end to "apt-get"

[14:45] <raschipi> Right, a suggestion, not a depedency.

[14:45] <geekosaur> yes. and many businesses want or even need stable platforms.

[14:45] <teatime> raschipi: I am fairly sure you can't not have python on debian, but perhaps I am wrong it is only a few niche apt-* utils and scripts that would break.

[14:46] <geekosaur> distributions are stable platforms

[14:46] <teatime> stmuk: they're both front ends to the apt system, really.

[14:46] <mspo> geekosaur: they are scoped too broadly in that stability

[14:46] <raschipi> I know you can have Debian without Python, it's standard procedure for me.

[14:46] <mspo> geekosaur: and violate it constantly in the name of "security"

[14:46] <teatime> it's frustrating because now you can't say 'apt' to mean the whole system w/o people thinking you mean the new command.

[14:46] <geekosaur> afaik debian's need for python is not for apt, it is that a lot of "standard" programs/utilities use it. if you avoid those, you can install debian without python

[14:47] *** domidumont left
[14:48] <raschipi> Yes, it has to be a stripped down system.

[14:49] <stmuk> apt(1) is new

[14:49] <mspo> geekosaur: I believe in busybox I guess :)

[14:50] *** jeromelanteri joined
[14:50] *** wamba joined
[14:50] <teatime> stmuk: when I said it's needed for apt, I was not referring to apt(1).

[14:50] <stmuk> I think there are probably some backends which use python 

[14:51] *** domidumont joined
[14:51] <ilmari> stmuk: for values of "new" including oldstable

[14:51] <teatime> oh, maybe I'd have more luck looking at rdepends for python3; they're working to get python2 out of the default install

[14:52] *** eliasr joined
[14:52] <mspo> bringing it back around; perl (5) as a "better awk" is great to have around and I use it all the time

[14:52] <mspo> but I wouldn't want to run my business on the "default install" since I know it would eventually not be a good choice

[14:52] <raschipi> It is installed by default but programs on the minbase install are forbiden from depending on Python.

[14:53] <mspo> since I would need a newer $whatever or an older $somethingelse because $business and $techdebt

[14:57] *** astj joined
[15:00] * stmuk arguing about whether debian needs python or not at least covers some tech issues whereas arguing about Perl 6 naming doesn't :)

[15:02] *** astj left
[15:10] <[Coke]> one of the docs has a variable called "√æing" in a snippet; should probably avoid the unicode there unless that word means something. (also it fails the spelling test, so if we keep it, needs to be added to the code word listing)

[15:11] *** bwisti joined
[15:11] <raschipi> Here is a list of all the required packages in Debian currently: https://gist.github.com/anonymous/daa399615c672e24b7e7e74b476ad0c4

[15:12] <raschipi> It has Perl 5 but no Python.

[15:16] *** zakharyas left
[15:17] *** zakharyas joined
[15:19] <teatime> raschipi: I take it that's the essential + priority=required packages?

[15:20] <raschipi> I just installed minbase and that's what I got.

[15:20] <teatime> oh.  well I stand corrected, sorry for spreading misinfo

[15:22] <raschipi> Policy changed and now essential and required packages can depend on not-essential/not-required packages, so just listing essential and required doesn't actually show what's in the minimal set anymore, you need to solve their depedencies. The easier way of doing that is performing the minbase bootstrap. 

[15:23] <teatime> yeah, I know actually; I was just now struggling to do exactly that (resolve their deps)

[15:23] <El_Che> lizmat: I wonder if it's worth answering in a 300 msg reddit thread. Do people keep reading it?

[15:24] <teatime> I expected to be able to do it w/ just aptitude search but I think I'd have to aptitude | apt-rdepends instead

[15:24] <El_Che> Reddit makes it impossible to follow a discussion without re-reading most of it

[15:24] <lizmat> El_Che: well, there's that  

[15:24] <lizmat> if you think it's an important enough point to make  :-)

[15:24] <El_Che> lizmat: like "someone is wrong on the Internet"?

[15:24] <El_Che> :)

[15:25] <raschipi> It's perfectly possible to follow older discussions in reddit as long as you pay them.

[15:25] <El_Che> raschipi: I mean fresh ones

[15:26] <raschipi> Yes, paid subscribers have a feature to highlight new comments in a thread.

[15:26] <El_Che> those people must love to argue on the net :)

[15:27] *** angelds left
[15:28] *** yoleaux joined
[15:28] *** ChanServ sets mode: +v yoleaux

[15:40] *** wictory[m] left
[15:40] *** nebuchadnezzar left
[15:40] *** timotimo left
[15:40] *** ab5tract left
[15:40] *** ab5tract_ joined
[15:40] *** nebuchadnezzar joined
[15:40] *** timotimo joined
[15:41] *** peteretep joined
[15:41] *** skaji joined
[15:41] *** mithaldu_ joined
[15:42] *** releasable6 left
[15:42] *** nativecallable6 left
[15:43] *** releasable6 joined
[15:43] *** coverable6 left
[15:43] *** unicodable6 left
[15:43] *** greppable6 left
[15:44] <lizmat> afk for a few hoursd&

[15:44] *** tadzik joined
[15:45] *** wictory[m] joined
[15:46] *** unclechu joined
[15:50] *** itaipu joined
[15:52] *** zakharyas left
[15:53] *** yoleaux left
[15:54] *** yoleaux joined
[15:54] *** ChanServ sets mode: +v yoleaux

[15:58] *** ggoebel joined
[16:06] *** Jjh joined
[16:10] <Jjh> I have a scalar that may be a string or Nil. I attempt to test for Nil, but I always get the ‚ÄòUse of Nil in string context.‚Äô  What am I doing wrong?

[16:10] <raschipi> Jjh: Can you give us a gist?

[16:12] <Jjh> Gist? Do you want a code example?

[16:12] <raschipi> Yeah, code example

[16:14] <Jjh> ($s ~~ Nil) ?? ‚ÄòNo value‚Äô || $s;

[16:16] *** psch left
[16:17] <raschipi> try (defined $s) ?? $s !! 'No value'

[16:17] <timotimo> Jjh: the problem is most likely that assigning Nil to a scalar container will reset the scalar container to its default value, which is "Any" unless you defined a type or default for it

[16:17] <raschipi> $s //= 'No value'

[16:17] <timotimo> m: my $foo = "hello"; $foo = Nil; say $foo.perl

[16:17] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´Any‚ê§¬ª

[16:19] <Jjh> Wow! You da man! That worked! Thanks!

[16:20] <Jjh> I used the defined test, just like Perl 5.

[16:21] <stmuk> reddit like usenet only not as good

[16:23] <El_Che> a mailing list archive would as least mark the visited pages as such

[16:25] *** Jjh left
[16:28] <El_Che> releasable6: status

[16:28] <releasable6> El_Che, Next release will happen when it's ready. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Unknown changelog format

[16:29] <El_Che> good

[16:31] *** cdg_ joined
[16:34] *** cdg left
[16:34] *** setty1 left
[16:37] *** chakli left
[16:37] <El_Che> if you google "reddit perl", below the first link (reddit) you get the first indented sub result: "Is Perl a Dead Language?"

[16:37] <El_Che> pretty awful marketing

[16:37] *** chakli joined
[16:37] <timotimo> great.

[16:38] <El_Che> the second on the right? "Is learning Perl still worth it?"

[16:39] <El_Che> Followed by "Learning Perl", "Perl 5 v 6", "Why is Perl considered awful?" and "Perl 6"

[16:39] <El_Che> the Perl 6 thread is nice, but the rest is pretty awful

[16:41] <tadzik> is there a precedent for a language that used to be considered awful but now people like it?

[16:41] <timotimo> javascript?

[16:42] <raschipi> C

[16:43] <El_Che> php7 did a log of good for the lang 

[16:43] *** troys joined
[16:44] <El_Che> I know that I will annoy stmuk, but the google result for reddit+perl is a pretty good argument for renaming this hipster language :)

[16:44] <raschipi> Gotta convince TimToady 

[16:45] <El_Che> raschipi: I am pretty hopeful he's lurking :)

[16:45] *** khw joined
[16:45] <stmuk> so all the reddit posts are "perl a language so rubbish they had to rename it"?

[16:46] *** chakli_ joined
[16:46] <moritz> the world doesn't just consist of reddit

[16:46] <El_Che> stmuk: that would be perl 5 problem then, but I am pretty sure many perl 5 people would take that gladly if it means freeing the major version number

[16:47] *** chakli left
[16:47] <mspo> moritz: the world is reddit + HN

[16:47] <mspo> obviously :)

[16:47] <El_Che> moritz: I just created my account a few hours ago :)

[16:48] <El_Che> moritz: because lizmat strong muscled me to answer :)

[16:48] <El_Che> (jk)

[16:48] <mspo> I'd argue that perl was a dead language, but now it isn't

[16:48] <mspo> or doesn't have to be since perl6 is moving

[16:49] <stmuk> this Perl 7 is myth 1. Larry has said he wants Perl 7 2. Perl 5 people have no idea what to with a new major version 3. Perl 5 is unmaintable anyway and they can't even add a simple "given/when"

[16:49] <mspo> so it took 15 years to stabilize; shit happens :)

[16:49] <stmuk> ^ do with

[16:49] <raschipi> Yep, it will be just, new perl, just the same as old perl

[16:49] <El_Che> stmuk: it may be. But it's up to Perl5 to succeed or fuck it up

[16:51] <El_Che> so, in the worst case you'll be proven right, in the best plesantly surprised (or the other way around, depending on your stance)

[16:51] <raschipi> Don't try to help, though, you'll be accused of trying to kill Perl5 just for mentioning there's a problem.

[16:51] <stmuk> its up to them now, messing around with names will do nothing to help

[16:52] <mspo> I watched that youtube clip and it seemed more like a "I'd rather not deal with it" or "I'm too old for this shit"  than anything :)

[16:52] <mspo> I guess being BDFL isn't always easy 

[16:52] *** zakharyas joined
[16:53] <El_Che> raschipi: I th ink many perl people think there is a problem. But the reason of the problem varies. If the naming thing is out of the way, then there is no scapegoating/blocking factor any longer

[16:53] <stmuk> El_Che: no they will just say you didn't change the name fast enough

[16:54] <El_Che> stmuk: and at that point, you don't care while you're busy promoting this new cool hipster language

[16:54] <mst> I'd note that given/when went wrong because we actually tried to be compatible with perl6 - but then the perl6 team spotted problems with the original smartmatch design, substantially redesigned it, and somehow that didn't get noticed until larry tried 5.10.0 the day after it was released

[16:55] <mst> so that was 100% an organisational screw up rather than saying anything much about the maintainability of the perl5 VM

[16:55] <mst> (there are plenty of valid criticisms of the maintainability of the perl5 VM, mind, just stmuk's attempt at an example isn't one at all)

[16:55] <El_Che> mst: thx for the input. I didn't know that

[16:55] <stmuk> I think the real reason they dislike perl 6 is they are scared of perl 6 and becoming beginners again in something they don't currently understand

[16:56] <El_Che> stmuk: I think you're overestimating "them"

[16:56] <El_Che> a lot of people use both langs

[16:56] <El_Che> and want to keep using them

[16:56] <El_Che> as both perl5 and 6 have weaknesses and strengths

[16:57] <mst> that's definitely the line I follow

[16:57] <El_Che> me too

[16:57] *** abraxxa left
[16:58] <mst> for a start, perl5 is very much a creature of *n?x in a way perl6 isn't, and that absolutely has advantages and disadvantages in both directions

[16:59] <timotimo> maybe we should be promoting the F out of perl 6 on windows

[17:00] <stmuk> timotimo: after the tests pass 100%! :)

[17:00] <timotimo> sure

[17:00] <timotimo> and some more bindings for winapi stuff

[17:00] <El_Che> timotimo: windows is pretty tied to .net

[17:00] <El_Che> if you're running windows, there is a very big chance you're running c#

[17:01] <timotimo> you mean we'll have a hard time against c#?

[17:01] <El_Che> being an order of magnitude faster than perl 6, I won't bet too much on it :)

[17:01] <El_Che> c# is well integrated

[17:01] <timotimo> c# also runs on linux, so we're already lost anyway :P

[17:01] <El_Che> IDE's, courses, books, ...

[17:02] <El_Che> train arrives, bbl

[17:02] <stmuk> I once looked in the mono room at FOSDEM (when they had one) and there was noone in it :)

[17:02] <timotimo> CoreCLR should have done a lot of good in this space

[17:04] *** wamba left
[17:04] <stmuk> note above I said "and they..." not "because they .."

[17:04] <Geth> ¬¶ doc: 439ae20352 | (JJ Merelo)++ | doc/Language/operators.pod6

[17:04] <Geth> ¬¶ doc: Changed example refs #1739

[17:04] <Geth> ¬¶ doc: 

[17:04] <Geth> ¬¶ doc: It might be convenient also to use different examples that would cover

[17:04] <Geth> ¬¶ doc: different use cases, not only grep and map, but other "chaining"

[17:04] <synopsebot> Link: https://doc.perl6.org/language/operators

[17:04] <Geth> ¬¶ doc: operators too.

[17:04] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/439ae20352

[17:05] <stmuk> the Perl 5 community remind me a little of the Amiga community in the early 90s .. if only things were "marketed better" we would have more users

[17:06] <timotimo> i wasn't around for it then, but wasn't amiga literally the best computer platform you could get?

[17:06] <stmuk> in a lot of ways yes ... and they had dedicated users ... but events moved on

[17:08] *** bmusin joined
[17:10] <raschipi> It was just impossible to beat the contracts Microsoft signed with OEMs, except for making own hardware. No amount of marketing can overcome that.

[17:10] *** zakharyas left
[17:10] *** ChoHag left
[17:11] *** zakharyas joined
[17:17] <stmuk> hmmm I wonder how to sign R*? I tending towards just signing a file containing a SHA256 of the tgz rather than signing the tgz itself

[17:17] <moritz> why?

[17:17] <moritz> that makes it harder to verify with a tool

[17:17] <moritz> if you sign the .tar.gz, you can just throw gpg --verify on it

[17:17] <stmuk> but more useful to people without a tool

[17:18] <stmuk> which is probably a larger number of people

[17:18] <moritz> you mean, anybody will verify the signature with manual math?

[17:18] <stmuk> uh?

[17:18] <moritz> people without a tool?

[17:18] <stmuk> without your tool gpg and an imported copy of the public key

[17:19] <moritz> I don't see how you can verify signatures without a tool

[17:19] <moritz> and those who care about signature verification tend to have gpg installed

[17:20] <stmuk> most people won't bother to get the public key and can just verify with sha256sum

[17:20] <moritz> so, provide both?

[17:20] <teatime> stmuk: aren't you just setting people up for fail by expecting them to verify the sha256sum but ignore the fact that it's gpg signed?

[17:20] <teatime> although it's still useful for corrupt downloads etc., I guess

[17:20] <stmuk> I can provide both I suppose

[17:20] <moritz> the sha256 checksum (for transmission errors) and the gpg signature of the tarball?

[17:22] <buggable> New CPAN upload: Terminal-Getpass-0.0.4.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Terminal-Getpass-0.0.4.tar.gz

[17:22] <stmuk> actually perl5 only supplies checksums and nothing is signed AFAIK

[17:23] <stmuk> moritz: yes

[17:23] <raschipi> Debian signs the sums file instead of the actual content for performance, but I don't think that kind of performance is necessary in this case.

[17:24] <moritz> raschipi: Debian also automatically verifies the signatures, which means the indirection doesn't hurt usability

[17:25] <raschipi> Yes, that's why speed is important there but not for Perl6.

[17:29] <raschipi> Also allows to check integrity of specific files instead of the whole.

[17:29] <raschipi> For when it's already installed.

[17:31] <stmuk> anyway I'll be using http://pgp.mit.edu/pks/lookup?op=get&search=0x959E3D6197190DD5 to sign R*

[17:32] <timotimo> should we do something to R* to use tarballs from cpan instead of git submodules for our modules?

[17:33] <stmuk> timotimo: yeah that did occur to me today

[17:34] *** geospeck joined
[17:34] <timotimo> i see you're already one step ahead of me :)

[17:35] <stmuk> I swept it under my mental carpet :)

[17:35] *** jeromelanteri left
[17:35] <jkramer> Is there a nice way of mass-assignment to rw attributes of objects in an array? Something like @foo>>.color = $new-color; maybe? :)

[17:35] <jkramer> Is there a nice way of mass-assignment to rw attributes of objects in an array? Something like @foo>>.color = $new-color; maybe? :)

[17:36] <jkramer> Oops sorry

[17:36] <timotimo> yeah, you can either hyper or X the assignment, too

[17:36] <timotimo> m: class Col { has $.color = <red green blue>.pick }; my @cols = Col.new xx 10; say @cols; @cols>>.color >>=>> "rainbow"; say @cols

[17:36] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing << or >>‚ê§at <tmp>:1‚ê§------> 3new xx 10; say @cols; @cols>>.color >>=>7‚èè5> "rainbow"; say @cols‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§¬ª

[17:37] <timotimo> m: class Col { has $.color = <red green blue>.pick }; my @cols = Col.new xx 10; say @cols; @cols>>.color X= "rainbow"; say @cols

[17:37] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´[Col.new(color => "green") Col.new(color => "blue") Col.new(color => "red") Col.new(color => "green") Col.new(color => "red") Col.new(color => "blue") Col.new(color => "blue") Col.new(color => "green") Col.new(color => "red") Col.new(color => "red")]‚Ä¶¬ª

[17:37] <timotimo> too much text, hold on

[17:37] <timotimo> m: class Col { has $.color = <red green blue>.pick }; my @cols = Col.new xx 4; say @cols; @cols>>.color X= "rainbow"; say @cols

[17:37] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´[Col.new(color => "blue") Col.new(color => "green") Col.new(color => "green") Col.new(color => "red")]‚ê§Cannot modify an immutable Str (blue)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:37] <timotimo> m: class Col { has $.color is rw = <red green blue>.pick }; my @cols = Col.new xx 4; say @cols; @cols>>.color X= "rainbow"; say @cols

[17:37] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´[Col.new(color => "blue") Col.new(color => "green") Col.new(color => "blue") Col.new(color => "red")]‚ê§[Col.new(color => "rainbow") Col.new(color => "rainbow") Col.new(color => "rainbow") Col.new(color => "rainbow")]‚ê§¬ª

[17:37] <timotimo> there we go

[17:38] *** troys is now known as troys_

[17:38] <timotimo> if you want to hyper the = operator you'll have to put brackets or use ¬ª=¬ª instead of >>=>> because => wins over = in the middle there

[17:38] <timotimo> m: class Col { has $.color is rw = <red green blue>.pick }; my @cols = Col.new xx 4; say @cols; @cols>>.color ¬ª=¬ª "rainbow"; say @cols

[17:38] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´[Col.new(color => "blue") Col.new(color => "blue") Col.new(color => "green") Col.new(color => "green")]‚ê§[Col.new(color => "rainbow") Col.new(color => "rainbow") Col.new(color => "rainbow") Col.new(color => "rainbow")]‚ê§¬ª

[17:38] <timotimo> this is with ¬ª=¬ª ^

[17:39] <timotimo> m: class Col { has $.color is rw = <red green blue>.pick }; my @cols = Col.new xx 4; say @cols; @cols>>.color >>[=]>> "rainbow"; say @cols

[17:39] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´[Col.new(color => "red") Col.new(color => "red") Col.new(color => "blue") Col.new(color => "red")]‚ê§[Col.new(color => "rainbow") Col.new(color => "rainbow") Col.new(color => "rainbow") Col.new(color => "rainbow")]‚ê§¬ª

[17:39] <timotimo> this is with >>[=]>> ^

[17:40] <timotimo> jkramer: looks good? :)

[17:41] <timotimo> m: class Col { has $.color is rw = <red green blue>.pick }; my @cols = Col.new xx 4; say @cols; @cols>>.color>>.& "rainbow"; say @cols

[17:41] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3l.new xx 4; say @cols; @cols>>.color>>.&7‚èè5 "rainbow"; say @cols‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        statement end‚Ä¶¬ª

[17:41] <timotimo> oops

[17:41] <jkramer> That's a rediculously long operator :D

[17:41] *** setty1 joined
[17:41] <timotimo> m: class Col { has $.color is rw = <red green blue>.pick }; my @cols = Col.new xx 4; say @cols; @cols>>.&{ .color = "rainbow" }; say @cols

[17:41] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´[Col.new(color => "red") Col.new(color => "blue") Col.new(color => "green") Col.new(color => "red")]‚ê§[Col.new(color => "rainbow") Col.new(color => "rainbow") Col.new(color => "rainbow") Col.new(color => "rainbow")]‚ê§¬ª

[17:42] <jkramer> I'll probably just do >>.&{.color = $new-color} :)

[17:42] <timotimo> m: class Col { has $.color is rw = <red green blue>.pick }; my @cols = Col.new xx 4; say @cols; @cols.map(*.color = "rainbow"); say @cols

[17:42] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´[Col.new(color => "green") Col.new(color => "red") Col.new(color => "blue") Col.new(color => "red")]‚ê§Cannot modify an immutable WhateverCode ({ ... })‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:42] <timotimo> whoops

[17:42] <timotimo> m: class Col { has $.color is rw = <red green blue>.pick }; my @cols = Col.new xx 4; say @cols; @cols.map({.color = "rainbow"}); say @cols

[17:42] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´[Col.new(color => "red") Col.new(color => "green") Col.new(color => "blue") Col.new(color => "blue")]‚ê§[Col.new(color => "rainbow") Col.new(color => "rainbow") Col.new(color => "rainbow") Col.new(color => "rainbow")]‚ê§¬ª

[17:42] <timotimo> but yeah, timtowtdi

[17:43] *** evalable6 left
[17:43] *** evalable6 joined
[17:43] *** ChanServ sets mode: +v evalable6

[17:44] *** cdg_ left
[17:45] *** dakkar left
[17:45] <jkramer> Gnaaah

[17:45] <jkramer> m: my $foo = Array.new; my @bar = $foo; @bar.perl.say # this gets me every time

[17:45] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´[[],]‚ê§¬ª

[17:49] *** chakli_ left
[17:49] *** chakli joined
[17:49] *** troys_ is now known as troys

[17:52] *** cdg joined
[17:53] *** chakli left
[17:54] *** mempko left
[17:55] *** ChoHag joined
[17:55] *** Kaiepi left
[17:56] *** Kaiepi joined
[17:56] *** chakli joined
[17:56] *** AlexDani` joined
[17:58] <timotimo> i'm tellin' ya, those scalar containers, man ...

[17:59] <raschipi> Better than than yucky references

[18:08] *** AlexDani` is now known as AlexDaniel

[18:13] <stmuk> in the absence of PSIXDIST I assume only people registered on PAUSE are currently uploading perl6 modules to CPAN?

[18:19] *** konsolebox left
[18:19] *** xinming left
[18:19] *** cdg_ joined
[18:21] *** cdg left
[18:22] *** chakli left
[18:23] *** domidumont left
[18:24] *** konsolebox joined
[18:25] *** Kaiepi left
[18:34] *** Kaiepi joined
[18:36] *** zakharyas left
[18:38] *** domidumont joined
[18:38] *** setty1 left
[18:39] *** domidumont left
[18:43] *** MasterDuke joined
[18:44] *** kaare_ left
[18:44] *** domidumont joined
[18:46] *** domidumont1 joined
[18:48] *** Kaiepi left
[18:49] *** Kaiepi joined
[18:49] *** domidumont left
[18:51] *** domidumont joined
[18:52] <buggable> New CPAN upload: P5each-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5each-0.0.1.tar.gz

[18:52] <El_Che> AlexDaniel: When 2018.01 is out,  we'll have also openSUSE packages

[18:53] *** domidumont1 left
[18:54] *** vichib joined
[18:55] *** vichib left
[18:55] *** st_elmo left
[18:58] *** domidumont left
[18:58] *** Nanjizal left
[18:58] *** darutoko left
[18:58] *** domidumont joined
[19:04] <AlexDaniel> El_Che: oh no, openSUSE packages! Stop the release process! This is unnacce‚Ä¶ ah wait, that's a positive :) Cool!

[19:04] *** wamba joined
[19:05] <El_Che> AlexDaniel: stop me when I start to creat Lindows packages -> https://betanews.com/2018/01/02/lindows-freespire-linspire-lives/

[19:07] <stmuk> I've a hat here which would support you el_che!

[19:07] <stmuk> "Windows MSI Builder" :)

[19:08] <stmuk> suits you sir!

[19:08] <El_Che> :)

[19:08] *** domidumont left
[19:08] *** domidumont joined
[19:08] *** domidumont left
[19:09] <El_Che> the AD a powershell instructor coming over for a week. He had a laptop full with Microsoft stickers. Someone, as hackers go, he a pretty-fly-for-a-white-guy vibe

[19:09] *** domidumont joined
[19:09] *** domidumont left
[19:09] *** domidumont joined
[19:09] *** cdg_ left
[19:10] <stmuk> actually there seems to be something of a Windows renaissance with ubuntu subsystem etc. And I saw quite a nice powershell Space Invaders

[19:10] *** domidumont left
[19:11] <El_Che> Modern Windows

[19:11] <stmuk> :D

[19:13] <mspo> well osx is dropping the ball

[19:14] <stmuk> I gave up on os x when it didn't let me dtrace a sh script

[19:14] <El_Che> the osx machine that I have is mostly a typewriter for the train. But friends that are apple fans are really worried  that they'll end with iOS in their macbooks pros

[19:14] *** domidumont joined
[19:16] <El_Che> stmuk: dtrace was a lot of fun on solaris

[19:16] <El_Che> stmuk: well not fun, but useful :)

[19:20] <stmuk> I did wonder if it could give insight into MoarVM

[19:22] <El_Che> does moarvm run on systems with dtrace at all?

[19:24] *** ojkl joined
[19:24] <stmuk> FreeBSD

[19:25] *** ojkl left
[19:26] <El_Che> nice, I thought the *BSDs were a work in progress still

[19:26] <stmuk> os x for scripts that don't use /bin and whatever in the shebang line

[19:26] <stmuk> for fear of revealing Apple secrets

[19:26] <El_Che> omg

[19:27] <El_Che> I don't think that MS would go that far

[19:29] *** ChoHag left
[19:36] *** quotable6 left
[19:36] *** quotable6 joined
[19:36] *** ChanServ sets mode: +v quotable6

[19:40] *** domidumont left
[19:40] *** domidumont joined
[19:43] *** kaare_ joined
[19:48] <bmusin> Hi. Where zef installs packages? Thanks.

[19:50] <MasterDuke> bmusin: i believe in ~/.perl6

[19:52] *** ChoHag joined
[19:54] *** natrys left
[20:00] *** domidumont1 joined
[20:01] *** raschipi left
[20:03] *** domidumont left
[20:04] *** troys is now known as troys_

[20:18] *** wamba left
[20:20] *** stux|RC-only joined
[20:22] *** mempko joined
[20:23] *** domidumont1 left
[20:29] *** softmoth joined
[20:31] *** bmusin left
[20:32] *** vike left
[20:32] *** vike1 joined
[20:34] *** masak joined
[20:34] *** masak is now known as Guest10951

[20:34] *** wamba joined
[20:36] *** Kaiepi left
[20:36] *** Kaiepi joined
[20:37] *** domidumont joined
[20:45] *** stmuk_ joined
[20:47] *** stmuk left
[20:50] *** Kaiepi left
[20:51] *** andrzejku joined
[20:56] *** tyil left
[20:59] *** andrzejku left
[21:00] *** Nanjizal joined
[21:00] *** andrzejku joined
[21:02] *** tyil joined
[21:06] *** domidumont left
[21:11] *** TEttinger joined
[21:13] *** astj joined
[21:14] *** pecastro joined
[21:16] *** cdg joined
[21:17] *** Nanjizal left
[21:17] *** astj left
[21:30] *** softmoth left
[21:30] *** softmoth joined
[21:31] *** itaipu left
[21:33] *** jast left
[21:46] *** cdg left
[21:47] *** geospeck left
[21:57] *** rudo joined
[22:01] *** softmoth left
[22:06] <rudo> Maybe someone can explain this to me. I played around with the Advent post: https://perl6advent.wordpress.com/2017/12/11/all-the-stars-of-perl-6/ paragraph 5. why does this work:

[22:06] <rudo> p6: sub d(*%data) {1}; d(1=> 1)

[22:06] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´Too many positionals passed; expected 0 arguments but got 1‚ê§  in sub d at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[22:06] <rudo> p6: sub d(*%data) {1}; d(x=> 1)

[22:06] <camelia> rakudo-moar 0a1641e94: ( no output )

[22:07] <rudo> so why does the second work and not the first?

[22:09] <gfldex> m: dd 1 => 1; dd x => 1;

[22:09] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´1 => 1‚ê§block <unit>()‚ê§¬ª

[22:10] <gfldex> m: (1 => 1).^name.say; (x => 1).^name.say;

[22:10] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´Pair‚ê§Pair‚ê§¬ª

[22:10] <moritz> the  <thing> => <otherthing> form is a named argument only if <thing> is a valid identifier

[22:11] <moritz> so f x => 1 calls f with a named param x

[22:11] <gfldex> m: sub d(*%data) {1}; d(|(1 => 1))

[22:11] <camelia> rakudo-moar 0a1641e94: ( no output )

[22:12] <moritz> but f 1 => x calls f with a positional argument which happens to be a Pair

[22:12] <moritz> m: sub f(*@pos, *%named) { say "pos: @pos.perl();  named: %named.perl()" }; f x => 1, 1 => x;

[22:12] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    x used at line 1‚ê§‚ê§¬ª

[22:12] <moritz> m: sub f(*@pos, *%named) { say "pos: @pos.perl();  named: %named.perl()" }; f x => 1, 1 => 'x';

[22:12] <camelia> rakudo-moar 0a1641e94: OUTPUT: ¬´pos: [1 => "x"];  named: {:x(1)}‚ê§¬ª

[22:14] *** pecastro left
[22:15] *** trnh joined
[22:15] *** andrzejku left
[22:17] *** mempko left
[22:17] <rudo> ok, the slurpy hash expects named arguments. I get it now. thanks for the explanation

[22:20] <Geth> ¬¶ doc: gfldex++ created pull request #1740: 1=>1 vs. a=>1 as named arguments

[22:20] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/1740

[22:21] <gfldex> rudo++ # for asking good questions

[22:22] *** squashable6 left
[22:22] *** committable6 left
[22:22] *** bloatable6 left
[22:22] *** squashable6 joined
[22:22] *** unicodable6 joined
[22:22] *** ChanServ sets mode: +v unicodable6

[22:22] *** committable6 joined
[22:22] *** ChanServ sets mode: +v committable6

[22:22] *** bloatable6 joined
[22:23] *** ChoHag left
[22:24] *** ChoHag joined
[22:29] *** pecastro joined
[22:30] *** andrzejku joined
[22:30] *** Nanjizal joined
[22:36] <Geth> ¬¶ doc: 9e66f47c20 | (Wenzel P. P. Peppmeyer)++ (committed by Zoffix Znet) | doc/Type/Signature.pod6

[22:36] <Geth> ¬¶ doc: 1=>1 vs. a=>1 as named arguments (#1740)

[22:36] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/9e66f47c20

[22:36] <synopsebot> Link: https://doc.perl6.org/type/Signature

[22:40] *** espadrine joined
[22:40] *** yoleaux left
[22:41] *** yoleaux joined
[22:41] *** ChanServ sets mode: +v yoleaux

[22:45] *** pecastro left
[22:45] *** rudo left
[22:46] *** troys_ is now known as troys

[22:46] *** yoleaux left
[22:57] *** wamba left
[22:59] *** Nanjizal left
[22:59] *** trnh left
[23:04] *** andrzejku left
[23:09] *** greppable6 joined
[23:13] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/01/22/2018-04-its-time-for-optimism/

[23:24] *** cdg joined
[23:26] *** SmokeMachine left
[23:26] *** eliasr left
[23:27] *** SmokeMachine joined
[23:27] *** eliasr joined
[23:39] *** Nanjizal joined
[23:44] *** sena_kun left
[23:50] * lizmat goed to bed&

[23:53] <timotimo> gnite lizmat 

[23:53] *** n9l joined
[23:56] *** konsolebox left
