[00:01] *** [particle] joined
[00:06] *** AlexDaniel left
[00:12] *** [particle]1 joined
[00:15] *** [particle] left
[00:17] <comborico1611> Okay.  I give up.  How do you chain multiple variables with a singular "my"?

[00:20] <b2gills> m: my    ($a,$b) = 1,2; say "$a;$b"

[00:20] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «1;2␤»

[00:21] *** [particle]1 left
[00:23] <comborico1611> m: my ($a, $b, $c) = 20;

[00:23] <camelia> rakudo-moar d4a6b92f3: ( no output )

[00:24] <comborico1611> (forgot a comma on the next statement, not this one.  That was teh problem.)  

[00:24] <comborico1611> b2gills: Thanks!

[00:24] <lookatme> m: my ($a, $b, $c) = (20, 21); .say for $c, $a;

[00:24] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «(Any)␤20␤»

[00:24] *** [particle] joined
[00:27] <comborico1611> my ($a, $b, $c) = get.Int; # How do I get an input for each variable?

[00:29] <MasterDuke> `get.Int xx 3` maybe?

[00:29] <lookatme> get.split(/\s/) ?

[00:29] <lookatme> for one line

[00:35] *** [particle] left
[00:36] *** [particle] joined
[00:40] *** Kaiepi joined
[00:40] <Kaiepi> did my message send before i dced?

[00:40] *** [particle] left
[00:41] <comborico1611> lookatme: Eeek.  That's fancy.

[00:41] <comborico1611> Kaiepi: Nope. I think you dced first.

[00:41] <Kaiepi> aight

[00:41] <Kaiepi> i have a class with a bunch of nativecall function pointers. is there a way i could more efficiently write wrapper methods for them? https://hastebin.com/tunesowaxo.pl

[00:42] <comborico1611> MasterDuke: I'll try that real quick.  About to need to leave computer.  Thanks!

[00:42] <comborico1611> Oh yeah!  Seems to work.  Crazy

[00:42] <comborico1611> Goodbye all.

[00:42] *** comborico1611 left
[00:43] <lookatme> Kaiepi, seems like I can't access your code, there was nothing in the page

[00:44] <Kaiepi> there isn't/

[00:44] <Kaiepi> s/\/?/

[00:45] <Kaiepi> https://gist.github.com/Kaiepi/a6ce74584ef78e5e90d3bad5aa3debd6

[00:48] <lookatme> :( I am on the back of Great Firewall

[00:48] <Kaiepi> i've tried just calling the plain casted function but it complains about not knowing what library or symbol to look for

[00:49] <Kaiepi> maybe there's a way to use nqp for this

[00:55] <Kaiepi> seems too complex, i think i'll just cache the sub

[00:59] <lookatme> Kaiepi, what's line 3 mean ?

[01:00] <Kaiepi> applies the role with the signature i want to &cb

[01:01] <Kaiepi> so it knows it's a native sub

[01:03] <lookatme> I am not sure that would work

[01:03] <Kaiepi> it works for me

[01:03] <Kaiepi> but anyway i found a better solution

[01:04] <Kaiepi> there's a function in the library i'm wrapping that indirectly exposes all the embedded function pointers 

[01:05] *** vcv joined
[01:06] *** buggable left
[01:07] *** vcv left
[01:07] *** ZofBot left
[01:11] *** Kaiepi left
[01:12] *** Kaiepi joined
[01:14] *** aborazmeh joined
[01:14] *** aborazmeh left
[01:14] *** aborazmeh joined
[01:21] *** ZofBot joined
[01:21] *** ChanServ sets mode: +v ZofBot

[01:21] *** huggable joined
[01:21] *** ChanServ sets mode: +v huggable

[01:36] *** [particle] joined
[01:37] *** huggable left
[01:37] *** huggable joined
[01:37] *** ChanServ sets mode: +v huggable

[01:37] *** ZofBot left
[01:37] *** ZofBot joined
[01:37] *** ChanServ sets mode: +v ZofBot

[01:39] *** buggable joined
[01:39] *** ChanServ sets mode: +v buggable

[01:39] *** Sgeo__ joined
[01:41] *** Sgeo_ left
[01:47] *** ilbot3 left
[01:56] *** aborazmeh left
[01:56] *** ilbot3 joined
[01:56] *** ChanServ sets mode: +v ilbot3

[02:07] *** [particle]1 joined
[02:09] *** [particle] left
[02:27] *** Kaiepi left
[02:27] *** Kaiepi joined
[03:09] *** kurahaupo_ joined
[03:10] *** wamba joined
[03:11] *** kurahaupo left
[03:14] *** w_richard_w left
[03:15] *** w_richard_w joined
[03:17] *** w_richard_w left
[03:25] <Herby__> \o

[03:38] *** cibs joined
[03:40] *** w_richard_w joined
[03:44] *** athenot_ left
[04:01] *** kent\n left
[04:04] *** athenot joined
[04:07] *** wamba left
[04:09] <Kaiepi> o/

[04:10] <Kaiepi> nearly done writing my Editline package, still need to write tests though

[04:13] <Kaiepi> soon i may be able to get the repl to offer it alongside readline and linenoise

[04:14] *** sauvin_ joined
[04:14] *** kent\n joined
[04:14] *** khw left
[04:15] *** sauvin left
[04:16] *** sauvin_ is now known as sauvin

[04:25] *** xtreak joined
[04:40] *** Herby__ left
[04:43] *** skids left
[04:58] *** curan joined
[05:01] *** espadrine_ joined
[05:06] <El_Che> Kaiepi: what does it offer compared to those 2? easier installation?

[05:07] <Kaiepi> it's the bsd equivalent of readline

[05:07] <Kaiepi> readline isn't installed by default on them

[05:08] <El_Che> nice

[05:09] <El_Che> Kaiepi: I see it includes MacOS

[05:11] *** jmerelo joined
[05:12] <Kaiepi> perfect

[05:12] *** domidumont joined
[05:13] <Kaiepi> i thought it was just freebsd, openbsd, netbsd that mainly used it

[05:14] <El_Che> free audience :)

[05:14] <El_Che> it's probably an older version, but it looks like a mature lib

[05:19] *** domidumont left
[05:20] *** domidumont joined
[05:23] <jmerelo> releasable6: status

[05:23] <releasable6> jmerelo, Next release will happen when it's ready. 0 blockers. 262 out of 263 commits logged

[05:23] <releasable6> jmerelo, Details: https://gist.github.com/120b750ce1c24feeda2f9989f353b295

[05:23] <jmerelo> Almost there :-)

[05:27] <El_Che> "we're not there yet, son, I'll tell you when we arive" :)

[05:30] <Geth> ¦ perl6-pod-to-bigpage/master: 10 commits pushed by (JJ Merelo)++, (Juan Julián Merelo Guervós)++

[05:30] <Geth> ¦ perl6-pod-to-bigpage/master: review: https://github.com/perl6/perl6-pod-to-bigpage/compare/397bfaf5f650...f3311db8f152

[05:37] <Geth> ¦ perl6-pod-to-bigpage: 16b37d3453 | (JJ Merelo)++ | META6.json

[05:37] <Geth> ¦ perl6-pod-to-bigpage: Changes URLs to final one and bumps up version

[05:37] <Geth> ¦ perl6-pod-to-bigpage: review: https://github.com/perl6/perl6-pod-to-bigpage/commit/16b37d3453

[05:37] *** robertle_ left
[05:38] *** khisanth__ left
[05:39] *** khisanth__ joined
[05:40] <Geth> ¦ perl6-pod-to-bigpage: c3410958c5 | (JJ Merelo)++ | 2 files

[05:40] <Geth> ¦ perl6-pod-to-bigpage: Corrects number of tests

[05:40] <Geth> ¦ perl6-pod-to-bigpage: review: https://github.com/perl6/perl6-pod-to-bigpage/commit/c3410958c5

[05:52] <Geth> ¦ doc: c50bde871a | (JJ Merelo)++ | 3 files

[05:52] <Geth> ¦ doc: Making changes to bigpage

[05:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c50bde871a

[05:52] <Geth> ¦ doc: e80cb82542 | (JJ Merelo)++ | 2 files

[05:52] <Geth> ¦ doc: Switched to html for the single page closes #1845

[05:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e80cb82542

[05:56] *** xtreak left
[05:58] *** xtreak joined
[06:13] *** espadrine_ left
[06:14] <Geth> ¦ doc: 8ecc3e5f2f | (JJ Merelo)++ | html/perl6.xhtml

[06:14] <Geth> ¦ doc: Adds old xhtml with notice

[06:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8ecc3e5f2f

[06:14] <Geth> ¦ doc: dbe63415bf | (JJ Merelo)++ | META6.json

[06:14] <Geth> ¦ doc: Corrects syntax META6.json

[06:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dbe63415bf

[06:18] *** domidumont left
[06:28] *** jmerelo left
[06:28] *** domidumont joined
[06:32] *** wamba joined
[06:40] *** abraxxa joined
[06:42] *** rindolf joined
[06:58] *** wamba left
[06:58] *** noganex left
[06:58] *** darutoko joined
[07:02] *** parv joined
[07:04] *** wamba joined
[07:11] *** sno left
[07:20] *** jmerelo joined
[07:30] *** zakharyas joined
[07:39] *** zakharyas left
[07:40] *** zakharyas joined
[07:52] *** sno joined
[07:53] *** scimon joined
[07:56] *** dogbert17 left
[08:09] *** xtreak left
[08:13] *** dakkar joined
[08:14] *** xtreak joined
[08:14] *** noganex joined
[08:33] *** xtreak left
[08:33] *** parv left
[08:36] *** Altreus_ is now known as Altreus

[09:02] *** lichtkind left
[09:07] <masak> moritz: suddenly I'm curious how https://github.com/moritz/json would stack up against http://seriot.ch/parsing_json.php (which is on HN right now, again)

[09:12] <moritz> masak: I've read it earlier today (or tonight, can't remember), and I'm also curious

[09:13] <masak> :)

[09:20] *** araujo joined
[09:20] *** araujo left
[09:20] *** araujo joined
[09:25] *** markong joined
[09:26] *** xtreak joined
[09:29] *** w_richard_w left
[09:35] *** xtreak left
[09:43] *** pilne left
[09:48] *** markong left
[09:51] *** Deop joined
[09:51] *** Deop left
[09:51] *** araujo left
[09:52] *** araujo joined
[09:55] <Geth> ¦ doc/master: 5 commits pushed by (Luca Ferrari)++

[09:55] <Geth> ¦ doc/master: 1b4a49ed9e | Improve IO::Handle abstract.

[09:55] <Geth> ¦ doc/master: ee3bf27640 | Example of how hard it could be to instantiate IO::Handle by its own.

[09:55] <Geth> ¦ doc/master: f1417abb57 | Reword IO::Special abstract.

[09:55] <Geth> ¦ doc/master: b946c58eb8 | Examples for S*ERR and $*OUT.

[09:55] <Geth> ¦ doc/master: 59b2332fe8 | Improve IO::Special.WHICH.

[09:55] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/dbe63415bf2d...59b2332fe808

[09:59] <Geth> ¦ doc: 7f4f764171 | (Luca Ferrari)++ | doc/Language/variables.pod6

[09:59] <Geth> ¦ doc: Add a note for $*IN and friends to have a look at other documentation.

[09:59] <Geth> ¦ doc: 

[09:59] <Geth> ¦ doc: See issue #1955

[09:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7f4f764171

[09:59] <synopsebot> Link: https://doc.perl6.org/language/variables

[10:09] *** zakharyas left
[10:10] *** zakharyas joined
[10:15] *** zakharyas left
[10:15] *** zakharyas joined
[10:26] *** xtreak joined
[10:33] *** zakharyas left
[10:39] *** zakharyas joined
[11:02] <Geth> ¦ doc/master: 10 commits pushed by (Luca Ferrari)++

[11:02] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/7f4f764171f9...623e57a3cd62

[11:11] *** kurahaupo_ left
[11:11] *** zakharyas left
[11:12] *** AlexDaniel joined
[11:12] *** xtreak left
[11:15] *** ufobat joined
[11:17] *** athenot left
[11:22] *** xtreak joined
[11:24] <AlexDaniel> oh wow, facebook is trying to trick me to enable “Ads Based on Data From Partners” :D

[11:25] <AlexDaniel> after a pagefull of explanations on what it is, they have a shiny blue button “Accept and Continue” and a grey option “Manage Data Setting”

[11:26] *** pmurias joined
[11:26] <AlexDaniel> when you click “Manage Data Setting” they give you an extra screen trying to convince you not to do what you clearly want to do :D

[11:27] <masak> AlexDaniel: I'll try to say this without sounding like a raging conspiracy theorist: Facebook is free for its users, because its users are not its customers. those parters with the ads are its customers.

[11:27] <masak> as a user, you are mainly juicy, profitable data.

[11:28] <AlexDaniel> by the way I wonder if the same option is available to people outside EU

[11:29] <AlexDaniel> “Thanks for taking the time to review this setting. We won't show you ads based on data we receive from partners. Keep in mind we'll still use this data to provide, personalize and improve our products, to promote safety, security and integrity, … … … …”

[11:30] <AlexDaniel> oh so that makes no difference whatsoever, I don't see ads anyway

[11:30] <masak> I wonder how best one can take a stand and safeguard/encourage the web of blogs and podcasts and feeds rather than silo'd communities

[11:31] <AlexDaniel> masak: something built on top of Matrix maybe?

[11:32] <AlexDaniel> btw there's a Perl 6 community on Matrix with 8 (!!!) people in it

[11:33] <masak> url?

[11:33] <stmuk_> use the blockchain! ;)

[11:34] <AlexDaniel> masak: https://riot.im/app/#/group/+perl6:matrix.org

[11:38] <masak> looks vaguely Slack-like...?

[11:38] <masak> I like initiatives like https://medium.com/message/tilde-club-i-had-a-couple-drinks-and-woke-up-with-1-000-nerds-a8904f0a2ebf

[11:39] <masak> I wish the web/Internet could be more like that

[11:39] <masak> small, quirky, grassroots initiatives

[11:39] <AlexDaniel> masak: yeah pretty much, and freenode is bridged so you can access #perl6 channel from there without really using an IRC client

[11:42] * AlexDaniel` waves

[11:48] <masak> ;)

[11:48] <masak> real-time chat is fine, but I'm not looking to replace irssi right now

[11:49] <masak> what I'm talking about is something more lasting, on the scale of blogs

[11:49] *** jmerelo left
[11:50] <masak> my strangelyconsistent setup -- markdown files and a build system -- is looking really antiquated in the 2010s. I think I would be better off basing it on something like Gatsby

[11:53] <AlexDaniel> well matrix communities already give you a way to create html pages (dunno how limited though), all you need is the ability to add posts and that would be it…

[11:53] <masak> I already have ways to create html pages, though ;)

[11:54] <masak> doing it within someone else's silo (no matter how benign) is what I'm trying to avoid

[11:54] <timotimo> p6c.org is our own very trendy tilde.club rip-off, except nobody's using it like that yet i don't think

[11:54] <AlexDaniel> sure you can always start your own matrix homeserver

[11:55] <masak> timotimo: that is a really good point, actually

[11:55] <masak> timotimo: maybe all I need is a public_html/ directory on there?

[11:56] <AlexDaniel> …

[11:56] <timotimo> that is correct

[11:56] <timotimo> i have one, it works without hassle

[11:56] <timotimo> it does not have good content yet

[11:56] <timotimo> oh

[11:56] <timotimo> i'm apparently wrong about that

[11:57] <masak> timotimo: I tried http://p6c.org/~timo and a few other variations -- didn't work ;?

[11:57] <masak> :/

[11:57] <timotimo> let me briefly investigate

[11:57] <timotimo> i've got sudo privs on that server, after all

[11:57] <masak> how handy ;)

[11:58] <timotimo> oh, it's on hack, isn't it

[11:58] <masak> http://hack.p6c.org/~timo/

[11:58] <masak> whee!

[11:59] <timotimo> it doesn't do https ;(

[11:59] *** sherwool joined
[12:02] *** breinbaa1 left
[12:02] <moritz> timotimo: getting let's encrypt to run on that box shouldn't be too hard

[12:03] <moritz> so far, nobody has bothered

[12:03] *** athenot joined
[12:03] *** xtreak left
[12:04] <timotimo> would it be a bad idea to offer public_html for the p6c.org domain itself? or should it remain on hack.p6c.org?

[12:04] *** Zoffix joined
[12:04] <Zoffix> With possible approval of CaR Grant on the horizon. Reminder to look over the Work Proposals for Constants and Rationals: https://github.com/rakudo/rakudo/blob/master/docs/archive/constants-type-constraints-proposal-2018-02-10.md   and   https://github.com/rakudo/rakudo/blob/master/docs/archive/2018-03-04--Polishing-Rationals.md  Speak now or forever hold your silence :)

[12:04] *** breinbaas joined
[12:04] <timotimo> oh, is the comment period still open? i haven't written! :o

[12:05] <Zoffix> (trying to avoid people objecting to the changes AFTER they're made :))

[12:05] <Zoffix> timotimo: no idea if it's still open, but there are 4 comments: http://news.perlfoundation.org/2018/04/grant-proposal-perl-6-bugfixin.html

[12:05] <Zoffix> But comments on the actual work are yeah, still open.

[12:05] <moritz> timotimo: currently p6c.org resolves to the same IP as www.perl6.org

[12:06] <timotimo> ah, mhm

[12:06] <moritz> timotimo: I don't know what I'd break if I changed that

[12:08] <timotimo> it'd probably be fine if we use VirtualHost config blocks to only serve public_html folders of our users if the host is p6c.org, not perl6.org?

[12:09] <moritz> timotimo: those are different VMs

[12:09] <moritz> the home dirs of hack.p6c.org are not available on www.p6c.org

[12:09] <timotimo> i know. we'd have to offer access to www.p6c.org

[12:09] <moritz> no

[12:09] <Juerd> breinbaas: Are you Tim Kuik? :P

[12:09] <moritz> we keep that separate for a reason

[12:10] <timotimo> or reverse proxy ~foo to p6c.org

[12:10] <moritz> so that perl6.org has a better uptime than hack :-)

[12:10] <moritz> http://perlpunks.de/paste/show/5addccda.3a86.59 fwiw this is the p6c.org zone

[12:10] <Zoffix> timotimo: that's how alerts.perl6.org does it. It's hosted on hack, but reverse proxied to p6c.org

[12:10] <moritz> timotimo: if it's worth the effort to you, by all means, configure it this way

[12:10] <masak> moritz++ # zoning

[12:11] <AlexDaniel> stmuk_: by the way, is there a combined rss feed from pl6anet?

[12:12] <timotimo> Zoffix: for web apps, that is totally normal and boring, i'm not sure how often people do exactly what i was proposing, though

[12:12] <Zoffix> AlexDaniel: http://pl6anet.org/atom.xml

[12:12] <AlexDaniel> ah there it is, thanks

[12:15] *** sherwool left
[12:26] *** mcmillhj joined
[12:27] *** khw joined
[12:33] *** xtreak joined
[12:38] *** xtreak left
[12:44] *** wamba left
[12:48] *** jmerelo joined
[12:49] <jmerelo> https://docs.perl6.org/ has not been regenerated for 18 hours. Is there any problem?

[12:52] <Zoffix> jmerelo: you can look in the build logs: https://docs.perl6.org/build-log/

[12:52] <Zoffix> Looks like pig-page fails build

[12:52] *** vcv joined
[12:53] <jmerelo> Zoffix: that kinda makes sense, since it's the single thing that's been changed.

[12:53] *** vcv left
[12:53] <jmerelo> The problem is there's a new version of Pod::To::BigPage. It's specified in META6.json. Is there some way to upgrade it?

[12:55] <Zoffix> Yeah, I can update

[12:55] <jmerelo> Zoffix: thanks!

[12:55] <Zoffix> It doesn't look into meta file. It uses a system-wide install of Perl 6 

[12:56] *** vcv joined
[12:58] <Geth> ¦ doc: 6a1b47871b | (Zoffix Znet)++ (committed using GitHub Web editor) | util/trigger-rebuild.txt

[12:58] <Geth> ¦ doc: trigger-rebuild

[12:58] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6a1b47871b

[12:59] *** kurahaupo joined
[13:01] <Geth> ¦ doc: 5620d9b942 | (JJ Merelo)++ | doc/Language/variables.pod6

[13:01] <Geth> ¦ doc: Adds additional link to examples of $*IN

[13:01] <Geth> ¦ doc: 

[13:01] <Geth> ¦ doc: And fixes some typos and other errors. I think this closes #1955

[13:01] <Geth> ¦ doc: 

[13:01] <synopsebot> Link: https://doc.perl6.org/language/variables

[13:01] <Geth> ¦ doc: >Most of the work has been done by @fluca1978, anyway

[13:01] <Geth> ¦ doc: 

[13:01] <Geth> ¦ doc: Unless you decide otherwise.

[13:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5620d9b942

[13:01] <Geth> ¦ doc: cb63b8b8ae | (JJ Merelo)++ | util/trigger-rebuild.txt

[13:01] <Geth> ¦ doc: Merge branch 'master' of github.com:perl6/doc

[13:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cb63b8b8ae

[13:01] <jmerelo> Zoffix: OK; I see now how it can be done. Thanks anyway.

[13:02] <Zoffix> "Merge branch 'master' of github.com:perl6/doc"  <--- FWIW those can be avoided if you `git pull --rebase` to pull in the latest commits.

[13:02] <jmerelo> Zoffix: will do. Yep, they are annoying. 

[13:08] *** zakharyas joined
[13:10] *** rindolf left
[13:12] *** pmurias left
[13:16] *** jmerelo left
[13:29] *** vcv left
[13:31] *** vcv joined
[13:31] *** curan left
[13:35] *** domidumont left
[13:37] *** domidumont joined
[13:48] *** rindolf joined
[13:52] *** comborico1611 joined
[13:53] *** mcmillhj left
[13:56] *** vcv left
[13:56] *** vcv_ joined
[13:58] <comborico1611> Does (6) in error message mean Line 6? Cannot modify an immutable Int (6)  in block <unit> at degenerate_triangle.p6 line 6

[13:58] <yoleaux> 01:01Z <Zoffix> comborico1611: You can also write is as `my ($a, $b, $c) = get.words`

[13:58] <moritz> comborico1611: no, it's the value

[13:59] <comborico1611> Thanks!

[13:59] <moritz> m: 6 = 42

[13:59] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «Cannot modify an immutable Int (6)␤  in block <unit> at <tmp> line 1␤␤»

[13:59] <comborico1611> Oh

[13:59] <comborico1611> I see.

[14:00] <moritz> it also says "line 6" in your error message, though :-)

[14:00] <comborico1611> Yes, I didn't know if it was a repetitive thing.

[14:01] <comborico1611> There were three values, 4 2 2.  I'm not sure where the 6 is coming from.

[14:01] <comborico1611> Program: https://hastebin.com/idarelideh.pl

[14:02] <moritz> ($a + $b) = $c

[14:02] <moritz> you are trying to assign to the return value

[14:03] <comborico1611> 4 + 2= 6.. I see.. I'm still waking up.

[14:03] <comborico1611> I see.

[14:03] <comborico1611> Thanks!

[14:04] <comborico1611> I had already put a bunch of "is copy"s everywhere.  That was my next question.

[14:04] *** avrono joined
[14:04] <Zoffix> comborico1611: you can write my ($a, $b, $c) = $*IN.get xx 3; as `my ($a, $b, $c) = $*IN.lines: 3`

[14:05] <Zoffix> comborico1611: and you need to use `==` to do the numeric equality test; right now you're assigning

[14:05] *** eliasr joined
[14:05] <comborico1611> Heh.  Thanks.  I must be still sleeping.

[14:06] <comborico1611> What is this : 3 business?

[14:06] <Zoffix> comborico1611: same as $*IN.lines(3)

[14:06] <comborico1611> Link in Docs?

[14:06] <Zoffix> Calling lines with argument 3, which is the limit of lines to read

[14:07] <comborico1611> Thanks!  I'll put these into my notes in my Perl6 book!

[14:07] <comborico1611> But I'm left wondering why so many ways to say the same thing.

[14:08] <Zoffix> comborico1611: "y so much ways to code the same, dawg?"

[14:08] <moritz> just like human language

[14:08] <Zoffix> comborico1611: it's the same way in human languages. Perl mirrors that in some way (the creator of the language is a linguist). And the language's motto is "There Is More Than One Way To Do It"

[14:09] <moritz> even python, which has the "there should be one way to do things" mantra, has like 4 ways to format strings

[14:09] *** raynold left
[14:09] <moritz> ... and counting

[14:09] *** mcmillhj joined
[14:09] <timotimo> moritz: "and that one way should be obvious" ;) ;) ;)

[14:09] <comborico1611> Will one syntax be optimal in one condition compared to another, and that is why both exist?  Or is it simply a matter of personal perference?

[14:09] <timotimo> actually the mantra is

[14:09] <timotimo> There should be one-- and preferably only one --obvious way to do it.

[14:10] <Zoffix> comborico1611: though the .get xx 3 vs .lines: 3 isn't exactly-exactly the same. I'd expect the .lines version to be slightly faster, since it doesn't need to look up the dynvar three times, for one

[14:10] <Zoffix> comborico1611: some things are a matter of preference.

[14:10] <Zoffix> you could've written `lines $*IN, 3`

[14:11] <Zoffix> or `lines $*IN: 3`

[14:11] <moritz> timotimo: I know, just too lazy to type it all out :-)

[14:13] *** mcmillhj left
[14:14] <rindolf> Zoffix: hi, thanks again

[14:14] <Zoffix> m: my @sides := <1 2 3>; say "Degenerate" if @sides.combinations(2).grep: { ([+] $_)/2 == @sides.any }

[14:14] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «Degenerate␤»

[14:14] <Zoffix> m: my @sides := <1 2 4>; say "Degenerate" if @sides.combinations(2).grep: { ([+] $_)/2 == @sides.any }

[14:14] <camelia> rakudo-moar d4a6b92f3: ( no output )

[14:14] <rindolf> Zoffix: the final co

[14:14] <rindolf> Zoffix: the final code worked nicely

[14:14] <Zoffix> m: my @sides := <3 2 5>; say "Degenerate" if @sides.combinations(2).grep: { ([+] $_)/2 == @sides.any }

[14:14] <camelia> rakudo-moar d4a6b92f3: ( no output )

[14:16] <Zoffix> m: my @sides := <3 2 5>; say "Degenerate" if @sides.combinations(2).grep: { @sides.any == [+] $_ }

[14:16] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «Degenerate␤»

[14:16] <Zoffix> :)

[14:16] <Zoffix> m: say "Degenerate triangle" if $*IN.lines(3).combinations(2).grep: { @sides.any == [+] $_ }

[14:16] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '@sides' is not declared␤at <tmp>:1␤------> 3f $*IN.lines(3).combinations(2).grep: { 7⏏5@sides.any == [+] $_ }␤»

[14:16] <Zoffix> ah, right. oh well

[14:17] <El_Che> releasable6: status

[14:17] <releasable6> El_Che, Next release will happen when it's ready. 1 blocker. 262 out of 263 commits logged

[14:17] <releasable6> El_Che, Details: https://gist.github.com/22b83d64a389a04d6da03266893b5bf8

[14:17] <comborico1611> I see.  I understand that multiple ways of doing the same thign is simply a matter of understanding the language, and not a bad thing -- to a point.  

[14:19] <Zoffix> .combinations(2).grep({ .any == [+] $^a }) and say "Degenerate" with $*IN.lines(3).cache

[14:19] <Zoffix> There. 1 statement :)

[14:20] <Zoffix> .sum/2 == .any and say "Degenerate" with $*IN.lines(3).cache even shorter

[14:20] *** mcmillhj joined
[14:23] *** skids joined
[14:24] <avrono> Anyone know anything about IO::Socket::SSL ?

[14:25] <Zoffix> Like what?

[14:25] *** mcmillhj left
[14:26] <avrono> Zoffix : using HTTP::UserAgent .... keep getting error ... Please install IO::Socket::SSL in order to fetch https sites   in method get-connection at /opt/rakudo-star-2018.01/share/perl6/site/sources/FD28A8E22DFE16B70B757D9981C7B6C25543060C (HTTP::UserAgent) line 350   in method get-connection at /opt/rakudo-star-2018.01/share/perl6/site/sources/FD28A8E22DFE16B70B757D9981C7B6C25543060C (HTTP::UserAgent) line 343   in method request at /

[14:26] <avrono> have installed IO::Socket::SSL

[14:26] <El_Che> avrono: windows?

[14:26] <avrono> it's in local dir called auto ....

[14:26] <avrono> Ubuntu 17.10

[14:27] <Zoffix> avrono: did you add that path? To auto?

[14:27] <avrono> doh

[14:27] <Zoffix> Also, why local dir and not just `zef install IO::Socket::SSL` ?

[14:27] <El_Che> avrono: just tested the distro on Ubuntu 17.10 and it works

[14:28] <El_Che> (using rakudo-pkg, but I think rakudo star will do the same)

[14:28] <avrono> Well when I did zef install ... it keeps throwing an error about unable to locate target

[14:29] <avrono> there was an error about ./auto ... so I created an auto dir

[14:29] <avrono> and then it worked

[14:29] <Zoffix> avrono: are you still using rakudo you built into ~/rakudo? How come you got /opt/rakudo-star-2018.01/* in your module path?

[14:29] <Zoffix> avrono: do you have libssl-dev installed?

[14:30] <avrono> libssl-dev yes

[14:30] <avrono> but /opt/rakudo ... I need to look into

[14:30] <Zoffix> What's the full error about unable to locate target? 

[14:30] <avrono> one sec

[14:31] <avrono> CompUnit::Repository install target is not writeable/installable: /home/avrono/workspace/deedee1/auto Need a valid installation target to continue

[14:32] <Zoffix> :S

[14:32] <Zoffix> weird. never seen that before.

[14:32] <avrono> but you are right about the /opt/rakudo ... I wonder if I should just nuke all and start again ..,.

[14:32] <Zoffix> But I suspect it might be risidual issues from when you tried to install star as root. I'd try to get rid of all the /opt/rakudo-star-2018.01 stuff 

[14:33] <Zoffix> Here's all I got in my module path and I've installed same way as you did (the install into ~/rakudo stuff): https://gist.github.com/zoffixznet/b33176cedbeaba93ce0f384cfe91ff76

[14:34] <Zoffix> Yeah, you could nuke. The instructions I gave you the other day were from here, basically: https://github.com/zoffixznet/r

[14:34] <avrono> Zoffix : cheers I think I need to nuke and reinstall

[14:34] <Zoffix> Oh we even have them all pretty on the rakudo.org site too now: https://rakudo.org/files/rakudo/source

[14:39] *** xtreak joined
[14:39] *** mcmillhj joined
[14:40] *** araujo left
[14:41] <avrono> Zoffix : cheers again ... I'm good now ...

[14:44] *** mcmillhj left
[14:57] *** mcmillhj joined
[15:00] *** Sgeo_ joined
[15:02] *** mcmillhj left
[15:02] *** Sgeo__ left
[15:14] *** domidumont1 joined
[15:15] *** mcmillhj joined
[15:16] *** athenot left
[15:16] *** domidumont left
[15:19] <buggable> New CPAN upload: List-UtilsBy-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/List-UtilsBy-0.0.1.tar.gz

[15:25] *** jmerelo joined
[15:40] <Geth> ¦ doc: JJ self-assigned infix:<does> and infix:<but> not indexed https://github.com/perl6/doc/issues/1953

[15:41] <Geth> ¦ doc: JJ self-assigned why is html/perl6.xhtml checked in? https://github.com/perl6/doc/issues/1956

[15:52] <Geth> ¦ doc: f93418d109 | (JJ Merelo)++ | doc/Language/objects.pod6

[15:52] <Geth> ¦ doc: Adds indexes for but and does refs #1953 (also #1303)

[15:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f93418d109

[15:52] <synopsebot> Link: https://doc.perl6.org/language/objects

[15:54] <Geth> ¦ doc: JJ self-assigned `but` precedence trap is no longer a trap https://github.com/perl6/doc/issues/1950

[15:56] *** domidumont1 left
[15:59] <buggable> New CPAN upload: List-SomeUtils-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/List::SomeUtils:cpan:ELIZABETH

[16:00] <jmerelo> p6: role R1 { method m {} }; role R2 { method n {} }; my $just-one-role = 1 but R1,R2; say $just-one-role.^name; my $all-roles = 1 but (R1,R2); say $all-roles.^name;

[16:00] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «WARNINGS for <tmp>:␤Int+{R1}␤Int+{R1,R2}␤Useless use of constant value R2 in sink context (line 1)␤»

[16:02] *** pharv joined
[16:04] *** comborico1611 left
[16:04] *** wamba joined
[16:06] <Geth> ¦ doc: f14b8a223e | (JJ Merelo)++ | 2 files

[16:06] <Geth> ¦ doc: Moves example from traps to objects

[16:06] <Geth> ¦ doc: 

[16:06] <Geth> ¦ doc: Since a warning is issued right now, it's not a trap; but some

[16:06] <Geth> ¦ doc: clarification is needed about precedence of the `but` operator. This

[16:06] <Geth> ¦ doc: closes #1950 and closes #1953, which was changed before.

[16:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f14b8a223e

[16:09] <buggable> New CPAN upload: List-AllUtils-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/List-AllUtils-0.0.1.tar.gz

[16:12] *** perigrin joined
[16:12] *** zakharyas left
[16:15] *** athenot joined
[16:18] *** sauvin left
[16:19] *** dolmen joined
[16:19] *** dolmen is now known as Guest43854

[16:21] <jkramer> How can I get around "Illegally post-declared type" errors? I have to classes that need to know about each other

[16:21] <Zoffix> m: class A is B {}; class B {}

[16:21] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤'A' cannot inherit from 'B' because it is unknown.␤at <tmp>:1␤»

[16:21] <Zoffix> m: class A  { has B $.x}; class B {}

[16:21] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «5===SORRY!5===␤Type 'B' is not declared␤at <tmp>:1␤------> 3class A  { has B7⏏5 $.x}; class B {}␤Malformed has␤at <tmp>:1␤------> 3class A  { has7⏏5 B $.x}; class B {}␤␤»

[16:21] <Zoffix> m: class { … }; class A  { has B $.x}; class B {}

[16:21] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «5===SORRY!5===␤Type 'B' is not declared␤at <tmp>:1␤------> 3class { … }; class A  { has B7⏏5 $.x}; class B {}␤Malformed has␤at <tmp>:1␤------> 3class { … }; class A  { has7⏏5 B $.x}; class B {}␤␤»

[16:21] <Geth> ¦ doc: d19fa10305 | (JJ Merelo)++ | 2 files

[16:21] <Zoffix> m: class B { … }; class A  { has B $.x}; class B {}

[16:21] <Geth> ¦ doc: Removes old single page perl6.xhtml, adds redirect, closes #1956

[16:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d19fa10305

[16:21] <camelia> rakudo-moar d4a6b92f3: ( no output )

[16:22] <Zoffix> jkramer: I forget what exactly causes that error. What's your code look like?

[16:22] <Zoffix> m: A.new; class A {}

[16:22] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Illegally post-declared type:␤    A used at line 1␤␤»

[16:22] <Zoffix> ah

[16:22] <jkramer> Zoffix: I got two classes, but of which have a method that converts to an object of the other class

[16:22] <Zoffix> m: class A { … }; A.new; class A {}

[16:22] <camelia> rakudo-moar d4a6b92f3: ( no output )

[16:23] <Zoffix> jkramer: ^ use a stub

[16:23] <jkramer> Cool, thanks :)

[16:23] *** Kaiepi left
[16:23] *** troys joined
[16:23] *** Kaiepi joined
[16:25] *** mcmillhj_ joined
[16:29] *** scimon left
[16:30] <mcmillhj_> So I notice that 1 <=> 2 returns Less (as opposed to -1) but it numifies to -1. Is the Order Enum that <=> returns just for readability ?

[16:31] <Zoffix> Well, you could typecheck against that enum

[16:31] <Zoffix> m: multi z(Less) { say "Order" }; multi z(-1) { say "just an Int" }; z 1 <=> 2; z -1

[16:31] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «Order␤just an Int␤»

[16:32] *** sauvin joined
[16:33] <mcmillhj_> Interesting. Is there a common  use-case for passing an Order to a function?  

[16:36] <mcmillhj_> I could see there being one if something like .sort expected an Ordering, but that doesn't seem to be the case here. I'm new to Perl6 so just trying to wrap my head around some things

[16:37] <jmerelo> Well, sorting functions should return Order, for instance. 

[16:37] <El_Che> jmerelo: testing the repo cretion for regular rakudo for debian and ubuntu

[16:37] <jmerelo> You might thing about some map functions doing different things on Pair depending on the Order they receive.

[16:38] <jmerelo> El_Che++

[16:38] <Juerd> mcmillhj_: In general, magic values are detrimental to readability and understandability of code because they require you to look up, externally, why something is -1 and what that means. An enum is an elegant solution.

[16:39] <Juerd> mcmillhj_: Yesterday I used https://github.com/google/diff-match-patch (in Python, because unfortunately there is no Perl version available) and it uses -1, 0, and 1, and I looked them up just to be sure I wouldn't encounter -2 or +42.

[16:39] <jmerelo> El_Che: we might have to use that instead of the current binary option, which is failing too often.

[16:40] <Juerd> mcmillhj_: So I'm quite fond of those little enums that make my life a tiny bit easier.

[16:40] <jmerelo> releasable6: status

[16:40] <mcmillhj_> Juerd: sure, I wasn't arguing against using an enumeration. I was asking what other purpose Order serves. It sounds like you can pass an Order to something to alter it's behavior. Which is kind of what I expected. 

[16:40] <releasable6> jmerelo, Next release will happen when it's ready. 1 blocker. 263 out of 263 commits logged

[16:40] <releasable6> jmerelo, Details: https://gist.github.com/1c625e7f88e02b949e2c56176bf27c63

[16:40] <jmerelo> The blocker just says "JVM build is busted

[16:41] <Juerd> mcmillhj_: I don't see a use case for passing an Order yet, because it is the outcome of something, not an instruction.

[16:43] <AlexDaniel> jmerelo: there's a link to the ticket with a bit more info

[16:43] <AlexDaniel> jmerelo: we're working on it

[16:43] <mcmillhj_> right, I assume jmerelo meant something like <1 2 3 4 5>.sort versus <1 2 3 4 5>.sort({$^b <=> $^a}) 

[16:43] <jmerelo> AlexDaniel: Yep, I've seen that. Best of luck. Wish I could help. I was just impressed by the message, so laconic, but so true.

[16:46] <jmerelo> mcmillhj_: for instance, yes. 

[16:54] *** dakkar left
[17:04] *** domidumont joined
[17:08] *** avrono left
[17:11] *** sno left
[17:13] <Kaiepi> the only thing i really miss from javascript is being able to mutate globals for horrible things

[17:13] <Kaiepi> m: All does role is repr('Uninstantiable') { }

[17:13] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse role definition␤at <tmp>:1␤------> 3All does role is7⏏5 repr('Uninstantiable') { }␤    expecting any of:␤        generic role␤»

[17:13] <Kaiepi> m: All does role :: is repr('Uninstantiable') { }

[17:13] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    All used at line 1␤Undeclared routine:␤    does used at line 1␤␤»

[17:14] <Kaiepi> shit i forget how i did it

[17:15] <Kaiepi> m: Any bt role :: is repr('Uninstantiable') { }

[17:15] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3Any7⏏5 bt role :: is repr('Uninstantiable') { ␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statemen…»

[17:15] <Kaiepi> m: Any but role :: is repr('Uninstantiable') { }

[17:15] <camelia> rakudo-moar d4a6b92f3: ( no output )

[17:15] <Kaiepi> there we go

[17:15] <Kaiepi> idk why i thought Any was called All for a minute

[17:15] *** robertle left
[17:17] <Zoffix> m: Any.^lookup("new").wrap: -> | { say "Thou shall not instantiate" }; class Foo {}.new

[17:17] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «Thou shall not instantiate␤»

[17:17] <Kaiepi> perfect

[17:18] <Zoffix> https://rakudo.party/post/Anguish--Invisible-Programming-Language-and-Invisible-Data-Theft  

[17:18] <Zoffix> https://rakudo.party/post/Exploiting-Perl-6-Code-From-Down-The-Dependency-Chain

[17:18] <Zoffix> https://perl6advent.wordpress.com/2017/12/01/the-grinch-of-perl-6-a-practical-guide-to-ruining-christmas/

[17:24] <Kaiepi> i've read the last one but i'll check out the first two

[17:24] *** pharv left
[17:25] <Kaiepi> m: use MONKEY-TYPING; augment class Any { multi method new() is default { X::AdHoc(:payload(':)')).throw } }; Any.new

[17:25] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «Cannot coerce to X::AdHoc with named arguments␤  in method new at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:25] <Zoffix> Last one sorta covers the first two already

[17:25] <Kaiepi> m: use MONKEY-TYPING; augment class Any { multi method new(|) is default { X::AdHoc(:payload(':)')).throw } }; Any.new

[17:25] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «Cannot coerce to X::AdHoc with named arguments␤  in method new at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:25] <Kaiepi> hm

[17:26] <Zoffix> You're missing .new after X::AdHoc

[17:26] <Kaiepi> wait maybe it only works with classes that already use multi for new

[17:26] <Kaiepi> ohhh

[17:26] <Kaiepi> m: use MONKEY-TYPING; augment class Any { multi method new(|) is default { X::AdHoc(:payload(':)')).new.throw } }; Any.new

[17:26] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «Cannot coerce to X::AdHoc with named arguments␤  in method new at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:26] <Kaiepi> m: use MONKEY-TYPING; augment class Str { multi method new(|) is default { X::AdHoc(:payload(':)')).new.throw } }; Any.new

[17:26] <camelia> rakudo-moar d4a6b92f3: ( no output )

[17:26] <Zoffix> But even if you augment it, you'll need to recompose all the descendants

[17:27] <Zoffix> I said after X::AdHoc, not after the parens :)

[17:27] <Zoffix> Foo() is the coercer syntax.

[17:27] <Kaiepi> right

[17:27] <Kaiepi> i didn't get much sleep lol

[17:28] <Kaiepi> m: use MONKEY-TYPING; augment class Str { multi method new(|) is default { X::AdHoc.new(:payload(':)')).throw } }; Str.new

[17:28] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «:)␤  in method new at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:28] <Kaiepi> there we go

[17:28] *** pharv joined
[17:29] <Zoffix> m: use MONKEY-TYPING; augment class Str { multi method new(|) is default { X::AdHoc.new(:payload(':)')).throw } }; say IntStr.new: 42, "x"

[17:29] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «x␤»

[17:29] <Zoffix> m: use MONKEY-TYPING; augment class Str { multi method new(|) is default { X::AdHoc.new(:payload(':)')).throw } }; IntStr.^compose; say IntStr.new: 42, "x"

[17:29] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «x␤»

[17:29] <Zoffix> right, it's got its own new

[17:32] *** Zoffix left
[17:33] <Kaiepi> BUILD/BUILDALL/TWEAK are involved in inheritance right?

[17:35] *** mcmillhj_ left
[17:35] <masak> Kaiepi: I know BUILD isn't; it's a submethod

[17:35] <Kaiepi> oh

[17:36] <masak> ("submethod"; gets a `self`, like methods, but doesn't inherit, like subs)

[17:36] <masak> not sure offhand what submethods give you over private methods ;)

[17:36] <masak> but the intent is that submethods be "infrastructural" -- so BUILD is a perfect example

[17:43] <Kaiepi> ahhhh i figured out something :)

[17:43] *** pilne joined
[17:43] <Kaiepi> m: Mu.^lookup('new').wrap: my method (|) { die ':)' }; Mu.new

[17:44] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «MoarVM panic: Memory allocation failed; could not allocate 95232 bytes␤»

[17:44] <Kaiepi> wait what

[17:44] <Kaiepi> it works in the repl

[17:44] <Kaiepi> m: Mu.^lookup('new').wrap: my method (|) { die ':)' }; Str.new

[17:44] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «MoarVM panic: Memory allocation failed; could not allocate 131072 bytes␤»

[17:44] <Kaiepi> oh wait

[17:45] <Kaiepi> m: Mu.^lookup('BUILDALL').wrap: my method (|) { die ':)' }; Str.new

[17:45] <camelia> rakudo-moar d4a6b92f3: ( no output )

[17:45] <Kaiepi> m: Mu.^lookup('BUILDALL').wrap: my method (|) { die ':)' }; Mu.new

[17:45] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «:)␤  in method <anon> at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:45] <Kaiepi> m: Mu.^lookup('BUILDALL').wrap: my method (|) { die ':)' }; Any.new

[17:45] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «:)␤  in method <anon> at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[17:45] *** pharv left
[17:46] *** pharv joined
[17:46] <Kaiepi> i wonder why it wasn't working for Str though

[17:52] *** sno joined
[18:05] *** xtreak left
[18:11] *** pharv left
[18:13] *** pharv joined
[18:20] *** simpleseeker joined
[18:27] *** simpleseeker left
[18:27] *** simpleseeker joined
[18:32] *** darutoko left
[18:44] *** jmerelo left
[18:44] *** pharv left
[18:45] *** sno left
[18:51] *** espadrine_ joined
[18:54] *** domidumont left
[18:58] *** |oLa| left
[18:59] <buggable> New CPAN upload: List-AllUtils-0.0.2.tar.gz by ELIZABETH http://modules.perl6.org/dist/List::AllUtils:cpan:ELIZABETH

[19:05] *** jdoege joined
[19:05] <Ulti> hah :D

[19:05] <Ulti> oh I was a day behind in the logs

[19:06] <Ulti> is Zoffix attempting to port Tau Station?

[19:06] <Ulti> or just the levels :D

[19:06] <jdoege> Hi all. Question: is it expected that ref install inline::perl5 will spend a lot of time on the Testing phase. Like, hours?

[19:06] *** st_elmo joined
[19:06] <jdoege> Not ref, zef 

[19:06] <Ulti> hours doing something or hours and you've seen no output?

[19:07] <Ulti> but no, hours for almost anything is usually a bad sign

[19:07] <Ulti> if you literally mean hours

[19:07] <jdoege> hours seeing no output.

[19:07] <jdoege> It is chewing up 100% of one CPU.

[19:14] *** simpleseeker left
[19:15] *** simpleseeker joined
[19:21] *** simpleseeker left
[19:22] *** simpleseeker joined
[19:23] <El_Che> got rakudo debian+ubuntu repos up and running. Should be there together with the new rakudo release

[19:27] *** raynold joined
[19:29] <raynold> ahh it's a wonderful day

[19:31] *** simpleseeker left
[19:33] *** simpleseeker joined
[19:42] *** simpleseeker left
[19:43] *** rindolf left
[19:46] *** Zoffix joined
[19:47] <Zoffix> jdoege: no, it installs fairly fast. You can run it with `zef --debug install Inline::Perl5` and zef will give you more info on what it's doing

[19:47] *** rindolf joined
[19:49] <Zoffix> jdoege: just installed it on my box

[19:49] <Zoffix> took ~1 minute

[19:49] <Zoffix> jdoege: what version of perl6 you got?   perl6 -v

[19:55] <jdoege> Hi! 2018.01

[19:55] <jdoege> Thanks for the response.

[19:56] <jdoege> It seems to get stuck (maybe) on modify_array.t

[19:57] <jdoege> re-running with --debug...

[19:59] <jdoege> OK, running with --debug it stops right after "t/invoke_p6_method_from_p5.t .. ok"

[20:00] *** pharv joined
[20:04] *** jdoege left
[20:15] *** sno joined
[20:20] *** comborico1611 joined
[20:23] *** athenot left
[20:23] *** zachk joined
[20:23] *** zachk left
[20:23] *** zachk joined
[20:24] *** idiosyncrat joined
[20:27] <El_Che> f* hell, got rpms repos working too

[20:33] <AlexDaniel> \o/

[20:34] <Kaiepi> sweet

[20:41] *** |oLa| joined
[20:41] *** idiosyncrat left
[20:42] *** robertle joined
[20:45] *** simpleseeker joined
[20:48] *** st_elmo left
[20:52] *** pilne left
[20:59] *** skids left
[21:01] *** jdoege joined
[21:02] *** pharv left
[21:04] *** pharv joined
[21:05] <El_Che> ok, code is sleeping in branch until 2018.04 is out. It will will generate deb repos for Debian and Ubuntu and rpm repos for Centos, Fedora and openSUSE. Alas, no repos for alpine (but that's more of a docker distro)

[21:07] *** dct joined
[21:09] *** pharv left
[21:10] *** pilne joined
[21:11] <jdoege> Zoffix: I removed modify_array.t from the test suite and install completes normally. With it included the install process hangs on modify_array.t.

[21:11] <robertle> El_Che: if you want, you can help with the packaging effort in debian itself, rather than create out-of-distro package repos...

[21:13] <robertle> the first/current issue is to get it to build reliably on all architectures, after that the main question will be how to suport precompilation during package building or installation and the management of dependencies between the precomp files and moar/rakudo

[21:13] <El_Che> robertle: the scope is different and meant to be complementary. Debian == well integrated OS packages, rakudo-pkg == self contained in /opt/rakudo-pkg, released monthly as Rakudo

[21:13] <El_Che> robertle: https://github.com/nxadm/rakudo-pkg/tree/pre2018.04#what-about-packages-provided-by-operating-systems

[21:14] <robertle> right, but how does that work with perl6 libraries? which one would a library package pick?

[21:14] <robertle> I guess you are also hitting similar problems, so I am quite interested!

[21:14] <El_Che> I don't think a lib picks a runtime, but the runtime picks a lib

[21:15] <El_Che> root rakudo-pkg zef installs its libs in /opt/rakudo-pkg, so no problem there

[21:15] <robertle> so your zef would install libs into /opt/ as well?

[21:15] <El_Che> user rakudo-pkg zef installs to ~/.perl6

[21:15] <robertle> cool

[21:16] <El_Che> so if the users uses both runtimes, he'll end up rerunning precomp

[21:16] <El_Che> no installation in /usr or /usr/local as debian would

[21:16] <El_Che> that's for the OS

[21:16] <robertle> do you do anything special about precompilation? what if the rakudo package gets updated? Ahow do you re-run precomp?

[21:17] <El_Che> perl6 will do the precomp if something changes

[21:17] <robertle> anyway, I should be in bed. but I'll check it out tomorrow

[21:17] <El_Che> :)

[21:17] <robertle> right, but it might do it as a different user. so suddenly your precomp ends in ~/.perl6 ...

[21:18] <robertle> bed now, really!

[21:18] <Kaiepi> do files in resources/ get symlinked to wherever CompUnit installs them to?

[21:18] <Kaiepi> for local installs

[21:23] <Kaiepi> i'm trying to figure out a way to not have to run zef install . --force-install or delete precomp each time i edit a config file

[21:23] *** robertle left
[21:25] *** pharv joined
[21:26] <Kaiepi> maybe this is more suited for stack overflow

[21:26] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/04/23/2018-17-docking-tau-station/

[21:27] *** mcmillhj left
[21:27] <jdoege> Zoffix: in particular, after doing some printf style debugging, modify_array.t hangs at the statement: $array.splice: 0, 0, [1, 2, 3, 4];

[21:36] *** mcmillhj joined
[21:36] *** markong joined
[21:41] <Zoffix> jdoege: you should file a bug report, so nine could take a look at it: https://github.com/niner/Inline-Perl5/issues

[21:42] <El_Che> lizmat++

[21:44] <jdoege> Zoffix: will do.

[21:45] *** mcmillhj left
[21:45] <Zoffix> Thanks.

[21:47] *** woolfy joined
[21:52] *** mcmillhj joined
[21:54] <Zoffix> lizmat++ great weekly. Huge too!

[21:57] *** mcmillhj left
[21:59] <El_Che> ovid shall be pleased :)

[21:59] <lizmat> he deserves it!

[21:59] <El_Che> true

[22:00] *** aindilis left
[22:01] <timotimo> i see there's bar graphs, but is there also foo graphs …

[22:04] *** woolfy left
[22:08] *** dct left
[22:12] *** mcmillhj joined
[22:13] *** wamba left
[22:16] *** jdoege left
[22:16] <comborico1611> Newb question: https://hastebin.com/winofosuke.pl

[22:16] *** mcmillhj left
[22:18] <timotimo> comborico1611: you're saying the return value of the fibonacci sub, but you're not returning something interesting, so just remove the say in the upper part of the code

[22:18] <comborico1611> timotimo: But I want to print up the numbers as they are calculated.

[22:19] <timotimo> that's what the say in your for loop does

[22:19] <comborico1611> But it misses the first two numbers (1, 1)

[22:20] <comborico1611> Ohh!

[22:20] <comborico1611> The very first say

[22:20] <timotimo> yes, the one above the function definitions section

[22:20] <comborico1611> Yay!

[22:20] <comborico1611> Thanks!  I was thinking in Lisp code again.

[22:21] <timotimo> i'm sure you already know about the sequence operator, though?

[22:21] <comborico1611> And that first say must have been a left-over from the previous version of the program.

[22:21] <timotimo> that's likely

[22:21] <comborico1611> I may, but I don't recognize the name.

[22:21] <timotimo> it's the ... operator

[22:21] <timotimo> either ... or …

[22:21] <comborico1611> Mmm. Nope, haven't gotten to it yet. Just the range operator ..

[22:21] <timotimo> OK

[22:22] <timotimo> the functionality of the sequence operator makes fibonacci and friends trivial to write down

[22:23] <rindolf> timotimo: hi

[22:23] <rindolf> hi all

[22:23] <timotimo> you give it a list with starting values, then a function that takes any number of values from the end that it wants, then comes the ... and then some end condition

[22:23] <rindolf> timotimo: i imported my proggy to perl6-examples

[22:23] *** aindilis joined
[22:24] <timotimo> so for fibonacci, you'll take 1, 1 as the starting values, a sub that takes two arguments and adds them, like -> $a, $b { $a + $b }, and the end can be * to say you want all of them

[22:24] <rindolf> timotimo: it runs fairly quickly but the cpython one seems faster

[22:24] <timotimo> how much faster is it?

[22:25] <rindolf> timotimo: let me see

[22:27] *** |oLa| left
[22:27] <comborico1611> my ($a, $b) =  1, 2; #What is this called?  Multiple binding?

[22:28] <Zoffix> list assignment, I believe

[22:28] <comborico1611> Thanks!

[22:28] <timotimo> i'd call it list assignment, too

[22:29] <rindolf> timotimo: http://paste.debian.net/1021719/

[22:30] *** mcmillhj joined
[22:31] <timotimo> can you check what --stagestats has to say about compile time?

[22:35] <rindolf> timotimo: yes

[22:35] *** mcmillhj left
[22:37] <rindolf> timotimo: http://paste.debian.net/1021720/

[22:38] <timotimo> ok, so out of the 0.97s we're spending 0.325s compiling already, plus a little bit of startup time

[22:39] <timotimo> bare startup on my machine is like 0.1s

[22:42] *** mcmillhj joined
[22:46] <timotimo> what's "time perl6 -e ''" for you?

[22:47] *** mcmillhj left
[22:47] <rindolf> timotimo: real    0m0.141s

[22:52] *** denkweise left
[22:55] *** mcmillhj joined
[23:00] *** mcmillhj left
[23:03] <Geth> ¦ doc: 3bbad9ee8c | (Zoffix Znet)++ | doc/Type/IO/Handle.pod6

[23:03] <Geth> ¦ doc: Fix up IO::Handle docs

[23:03] <Geth> ¦ doc: 

[23:03] <Geth> ¦ doc: It's not an IO role, but an IO::Path object.

[23:03] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3bbad9ee8c

[23:03] <synopsebot> Link: https://doc.perl6.org/type/IO::Handle

[23:10] *** mcmillhj joined
[23:11] *** Kaiepi left
[23:12] *** Kaiepi joined
[23:15] *** mcmillhj left
[23:20] *** aindilis left
[23:20] *** aindilis joined
[23:23] <comborico1611> I can't get the code from this book to do anything: https://hastebin.com/kojorasuga.pl

[23:23] <Zoffix> What book are you reading?

[23:23] <comborico1611> Think Perl 6

[23:24] <Zoffix> comborico1611: well, you're just returning letters and aren't printing anyuthing

[23:24] <Geth> ¦ doc: 936dd070df | (Zoffix Znet)++ | 6 files

[23:24] <Geth> ¦ doc: Make xtest pass

[23:24] <Geth> ¦ doc: 

[23:24] <Geth> ¦ doc: (I think it passes; after fixing all errors I saw the next

[23:24] <Geth> ¦ doc: run appears to have hung on aspell...)

[23:24] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/936dd070df

[23:25] <Geth> ¦ doc/post-release-2018.04: 32 commits pushed by (JJ Merelo)++, (Tobias Leich)++, (Luca Ferrari)++, (Zoffix Znet)++

[23:25] <Geth> ¦ doc/post-release-2018.04: review: https://github.com/perl6/doc/compare/83bbb39d0210...e8f8a659c448

[23:26] *** MilkmanDan left
[23:26] <comborico1611> Eh.  I'll skip it.  The author states not to worry about how the code works because strings are covered in Ch. 7.  But he says to test out teh code, and I don't get anything to work.

[23:27] *** MilkmanDan joined
[23:28] *** mcmillhj joined
[23:29] *** simpleseeker left
[23:32] <Zoffix> comborico1611: how do you know it doesn't work? You didn't print anything

[23:32] <comborico1611> I called the functions with the string "hello" and nothing prints out.

[23:32] *** mcmillhj left
[23:33] <timotimo> your code isn't printing anything because there's nothing in it that would print anything

[23:33] <tobs> comborico1611: I would just use the REPL instead of script file as the book suggests.

[23:33] <Zoffix> m: https://gist.github.com/zoffixznet/c3931e94a222526b1fc4babd9290ffa1

[23:33] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    sya used at line 3. Did you mean 'say'?␤␤»

[23:33] <Zoffix> m: https://gist.github.com/zoffixznet/c3931e94a222526b1fc4babd9290ffa1

[23:33] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «h␤Start argument to substr out of range. Is: -1, should be in 0..5; use *-1 if you want to index relative to the end␤  in sub middle-letters at <tmp> line 13␤  in block <unit> at <tmp> line 3␤␤o␤»

[23:33] <tobs> m: sub middle_letter (Str $word) { return substr $word, 1, *-1 }; say middle_letter('ab'); say middle_letter('a')

[23:33] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «␤Number of characters argument to substr out of range. Is: -1, should be in 0..^Inf; use *-1 if you want to index relative to the end␤  in sub middle_letter at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[23:34] <Zoffix> Weird it gives that error instead of telling me the comma's missing

[23:34] <Zoffix> m: https://gist.github.com/zoffixznet/c3931e94a222526b1fc4babd9290ffa1

[23:34] <camelia> rakudo-moar d4a6b92f3: OUTPUT: «h␤o␤ell␤»

[23:34] <comborico1611> tobs: p.93 "Type these subroutines into a file named palindrome.pl6"

[23:35] <Zoffix> Ah, 1 *-1 ain't no missing comma :P

[23:36] <Zoffix> We need a Unicode whateverstar :P

[23:36] <comborico1611> Good eye.  Thanks!

[23:36] <AlexDaniel> yeah…

[23:36] <tobs> comborico1611: if you type them into a script, you have to "say" the return values. The REPl takes care of that. It's slightly easier to play around with.

[23:38] <timotimo> the P in REPL stands for Print

[23:38] <rindolf> night all

[23:38] <rindolf> timotimo: thanks

[23:38] <comborico1611> tobs: Ahh!  Very good.  Thanks!

[23:42] <comborico1611> G-night rindolf.

[23:44] *** rindolf left
[23:45] *** mcmillhj joined
[23:47] *** lizmat left
[23:49] *** simpleseeker joined
[23:49] <Geth> ¦ doc: ac4fe91e6f | (Zoffix Znet)++ | 3 files

[23:49] <Geth> ¦ doc: More xtest fixes

[23:49] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ac4fe91e6f

[23:50] <Geth> ¦ doc/post-release-2018.04: ac4fe91e6f | (Zoffix Znet)++ | 3 files

[23:50] <Geth> ¦ doc/post-release-2018.04: More xtest fixes

[23:50] <Geth> ¦ doc/post-release-2018.04: review: https://github.com/perl6/doc/commit/ac4fe91e6f

[23:50] <Geth> ¦ doc/post-release-2018.04: 7fbfd3e6c6 | (Zoffix Znet)++ | 3 files

[23:50] <Geth> ¦ doc/post-release-2018.04: Merge branch 'master' into post-release-2018.04

[23:50] <Geth> ¦ doc/post-release-2018.04: review: https://github.com/perl6/doc/commit/7fbfd3e6c6

[23:50] *** mcmillhj left
[23:54] <Zoffix> man wtf... make xtest shows 3 typos. I fix em. Run it again, it shows more of the other ones :S

[23:54] <comborico1611> I'm going to enjoy the evening sunset.  Sorry to hear that Zoffix.

[23:54] *** comborico1611 left
[23:55] <Geth> ¦ doc: 2e96dd3894 | (Zoffix Znet)++ | doc/Language/variables.pod6

[23:55] <Geth> ¦ doc: Fix articles

[23:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2e96dd3894

[23:55] <synopsebot> Link: https://doc.perl6.org/language/variables

