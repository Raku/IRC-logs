[00:02] *** kurahaupo left
[00:02] *** kurahaupo joined
[00:03] *** p6bannerbot sets mode: +v kurahaupo

[00:21] *** rindolf left
[00:41] *** cog left
[00:55] *** Michael_S joined
[00:55] *** p6bannerbot sets mode: +v Michael_S

[01:02] <Michael_S> I'm confused by this difference:

[01:02] <Michael_S> p6: sub x1() { [1, 2, 3] }; my @a = x1(); say @a;

[01:02] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «[1 2 3]␤»

[01:03] *** rbt_ joined
[01:03] <Michael_S> sub x2($k, %h) { if (%h{$k}) { %h{$k} } else { %h{$k} = [1, 2, 3]; %h{$k} } }; my %h; my @a2 = x2("k", %h); say @a2;

[01:03] <evalable6> Michael_S, rakudo-moar e1ebffeb8: OUTPUT: «[[1 2 3]]␤»

[01:03] *** p6bannerbot sets mode: +v rbt_

[01:04] <timotimo> is it because you get an extra scalar container around the [1, 2, 3] from getting it back out of the hash?

[01:05] <timotimo> m: sub x3() { $[1, 2, 3] }; my @a = x3(); say @a;

[01:05] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «[[1 2 3]]␤»

[01:05] <Michael_S> How do I bypass that scalar container?  I want the array, not an array with the actual array that I want in the first element.

[01:05] <timotimo> you can get it out of the hash with an extra <> at the end

[01:06] <timotimo> %h{$k}<>

[01:06] <timotimo> that will strip the scalar container on the way out

[01:06] <Michael_S> sub x2($k, %h) { if (%h{$k}) { %h{$k}<> } else { %h{$k} = [1, 2, 3]; %h{$k}<> } }; my %h; my @a2 = x2("k", %h); say @a2;

[01:06] <evalable6> Michael_S, rakudo-moar e1ebffeb8: OUTPUT: «[1 2 3]␤»

[01:06] <geekosaur> or:

[01:06] <geekosaur> sub x2($k, %h) { if (%h{$k}) { %h{$k} } else { %h{$k} = [1, 2, 3]; |%h{$k} } }; my %h; my @a2 = x2("k", %h); say @a2;

[01:06] <evalable6> geekosaur, rakudo-moar e1ebffeb8: OUTPUT: «[1 2 3]␤»

[01:06] <timotimo> m: my %h; %h{"with"} = [1, 2, 3]; %h{"without"} := [1, 2, 3]; dd %h; dd %h{"with"}; dd %h{"without"}

[01:06] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «Hash %h = {:with($[1, 2, 3]), :without([1, 2, 3])}␤Array %h = $[1, 2, 3]␤Array element = [1, 2, 3]␤»

[01:07] <timotimo> another way to not have the scalar container

[01:08] <Michael_S> The switch from %h{key} = value to %h{key} := value does it?  The ':='?  Thanks.  Thank you to timotimo and geekosaur for the fast responses, I appreciate it.  (And thanks to good old camelia and evalable6 :D )

[01:08] <timotimo> that's right

[01:08] <timotimo> = assigns into something, := binds "over the existing container"

[01:09] <geekosaur> there's more than one way to do it, but each has its own particular behaviors

[01:09] <geekosaur> the := isn't appropriate if you need to assign to that hash element later, for example

[01:10] <timotimo> true

[01:11] <Michael_S> I will keep that in mind too.

[01:25] <Geth> ¦ doc: 912fdf79bb | (JJ Merelo)++ | doc/Type/IO.pod6

[01:25] <Geth> ¦ doc: Fixes link refs #2385

[01:25] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/912fdf79bb

[01:25] <synopsebot> Link: https://doc.perl6.org/type/IO

[01:26] *** Kraaz joined
[01:27] *** p6bannerbot sets mode: +v Kraaz

[01:39] <Geth> ¦ doc: d4b482b516 | (JJ Merelo)++ | 2 files

[01:39] <Geth> ¦ doc: Adds dependence to avoid test error

[01:39] <Geth> ¦ doc: 

[01:39] <Geth> ¦ doc: Also adds links and some explanations. This closes #2383 closes #2385

[01:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d4b482b516

[01:47] *** Kraaz left
[01:48] *** ZzZombo left
[01:51] *** fake_space_whale left
[01:52] *** Zoffix joined
[01:52] *** p6bannerbot sets mode: +v Zoffix

[01:52] <Zoffix> Michael_S: there's an extensive article on containers if you have any interest: https://perl6advent.wordpress.com/2017/12/02/

[01:53] <Zoffix> And this one, targeted for those with Perl 5 backround: https://opensource.com/article/18/8/containers-perl-6

[01:57] *** ryn1x joined
[01:58] *** p6bannerbot sets mode: +v ryn1x

[02:02] *** kurahaupo left
[02:02] *** kurahaupo joined
[02:02] *** regreg__ joined
[02:03] *** p6bannerbot sets mode: +v kurahaupo

[02:03] *** p6bannerbot sets mode: +v regreg__

[02:03] *** fake_space_whale joined
[02:04] *** p6bannerbot sets mode: +v fake_space_whale

[02:07] *** hamhu3_ joined
[02:07] *** kurahaupo left
[02:07] *** kurahaupo joined
[02:08] *** p6bannerbot sets mode: +v hamhu3_

[02:08] *** p6bannerbot sets mode: +v kurahaupo

[02:10] *** hamhu3 left
[02:20] *** ufobat_ joined
[02:21] *** p6bannerbot sets mode: +v ufobat_

[02:24] *** ufobat left
[02:24] *** kurahaupo left
[02:25] *** kurahaupo joined
[02:25] *** p6bannerbot sets mode: +v kurahaupo

[02:31] *** kurahaupo left
[02:31] *** kurahaupo joined
[02:32] *** p6bannerbot sets mode: +v kurahaupo

[02:46] *** ZzZombo joined
[02:46] *** p6bannerbot sets mode: +v ZzZombo

[02:50] *** lizmat left
[02:57] *** aindilis left
[02:57] *** aindilis` joined
[02:58] *** p6bannerbot sets mode: +v aindilis`

[02:58] *** aindilis` left
[03:24] <k-man> i don't understand the difference between Q and q for quoting strings

[03:25] <k-man> Q is literal and q is escaped strings? but I don't understand what that difference is

[03:26] <geekosaur> m: say Q'x\yz

[03:26] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3say Q'x\7⏏5yz␤    expecting any of:␤        postfix␤»

[03:26] <geekosaur> er

[03:26] <geekosaur> m: say Q'x\yz'

[03:26] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3say Q'x\7⏏5yz'␤    expecting any of:␤        postfix␤»

[03:26] <k-man> oh, is it that you can include \ to escape in escaped strings?

[03:26] <geekosaur> duh

[03:26] <geekosaur> right

[03:26] <k-man> ok, i get it now thanks geekosaur 

[03:26] <geekosaur> \is literal in Q, allows escapingin q"

[03:27] <k-man> thank you geekosaur 

[03:27] <geekosaur> and I still type too fast for this damned keyboard :/

[03:37] *** cog joined
[03:38] *** p6bannerbot sets mode: +v cog

[04:01] *** cog left
[04:03] <ryn1x> :m say Q 'fails to escape \' quote'

[04:03] <ryn1x> m: say Q 'fails to escape \' quote'

[04:03] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3say Q 'fails to escape \'7⏏5 quote'␤    expecting any of:␤        infix␤        infix stopper␤        postfix␤        statement end␤        s…»

[04:04] <ryn1x> m: say Q :q 'escape \' quote'

[04:04] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «escape ' quote␤»

[04:06] <ryn1x> ^ k-man

[04:11] *** ryn1x left
[04:12] *** ryn1x joined
[04:12] *** p6bannerbot sets mode: +v ryn1x

[04:30] <ryn1x> :m Q 'x\\yz'

[04:30] <ryn1x> m: Q 'x\\yz'

[04:30] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «WARNINGS for <tmp>:␤Useless use of constant string "x\\\\yz" in sink context (line 1)␤»

[04:31] <ryn1x> m: say Q 'x\\yz'

[04:31] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «x\\yz␤»

[04:31] <ryn1x> m: say Q:q 'x\\yz'

[04:31] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «x\yz␤»

[04:38] *** ryn1x left
[04:53] <buggable> New CPAN upload: Perl6-Bayes-Learn-0.1.1.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Perl6-Bayes-Learn-0.1.1.tar.gz

[04:55] <holyghost> ^-- There's now an Action class for such loss functions and a minimax method for a Strategy class. Everything is based on Populations of probabilities and Distributions of them

[04:55] <yoleaux> 15 Oct 2018 16:59Z <Zoffix> holyghost: you have a problem with your modules: http://colabti.org/irclogger/irclogger_log/perl6?date=2018-10-15#l556

[04:57] *** curan joined
[04:57] *** p6bannerbot sets mode: +v curan

[05:01] <holyghost> .tell Zoffix I'll fixify later on, I have to read up

[05:01] <yoleaux> holyghost: I'll pass your message to Zoffix.

[05:05] <holyghost> .m "Vampires do exist"

[05:06] <holyghost> an example hypothesis for an RPG with Bayesian inference

[05:07] <holyghost> Think classes :-)

[05:27] *** domidumont joined
[05:28] *** p6bannerbot sets mode: +v domidumont

[05:35] *** mingdao left
[05:36] *** mingdao joined
[05:36] *** p6bannerbot sets mode: +v mingdao

[05:49] *** kurahaupo left
[05:50] *** kurahaupo joined
[05:51] *** p6bannerbot sets mode: +v kurahaupo

[05:55] *** domidumont left
[05:57] *** HaraldJoerg joined
[05:58] *** p6bannerbot sets mode: +v HaraldJoerg

[06:08] <Geth> ¦ doc: f76a5f1896 | (Richard Hainsworth)++ (committed using GitHub Web editor) | doc/Language/syntax.pod6

[06:08] <Geth> ¦ doc: Update syntax.pod6

[06:08] <Geth> ¦ doc: 

[06:08] <Geth> ¦ doc: It seemed at first that C<unit> added something, when in fact unit is just telling the compiler that the rest of the file is the body of the package.

[06:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f76a5f1896

[06:08] <synopsebot> Link: https://doc.perl6.org/language/syntax

[06:10] *** domidumont joined
[06:11] *** p6bannerbot sets mode: +v domidumont

[06:20] *** HaraldJoerg1 joined
[06:20] <Geth> ¦ Pod-To-HTML: 77f0af09a7 | (Richard Hainsworth)++ (committed using GitHub Web editor) | t/010-basic.t

[06:20] <Geth> ¦ Pod-To-HTML: Update 010-basic.t

[06:20] <Geth> ¦ Pod-To-HTML: 

[06:20] <Geth> ¦ Pod-To-HTML: Eliminated sub twrap at end of this file. It is not called. The tests all run when this code is eliminated.

[06:20] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/77f0af09a7

[06:21] *** p6bannerbot sets mode: +v HaraldJoerg1

[06:22] *** HaraldJoerg left
[06:26] *** finanalyst joined
[06:26] *** p6bannerbot sets mode: +v finanalyst

[06:27] *** robertle joined
[06:28] *** troys left
[06:28] *** p6bannerbot sets mode: +v robertle

[06:29] *** ExtraCrispy_ left
[06:31] <finanalyst> I'm working on an issue in Pod::To::HTML and now I'm trying to run the tests using prove -I lib -e ...  But Pod::To::HTML is already installed, so the test files seem to be taking use ... from the installed version, not the new one I am debugging. What should be my work flow?

[06:32] *** ExtraCrispy_ joined
[06:32] *** p6bannerbot sets mode: +v ExtraCrispy_

[06:34] *** regreg__ left
[06:51] <holyghost> .tell Zoffix I have blurb.meta in my CPAN package directory so Mathx::Stat and Bayes::Leanr should be indexed. I am not sure the source-urls are correct. 

[06:51] <yoleaux> holyghost: I'll pass your message to Zoffix.

[06:53] <buggable> New CPAN upload: Perl6-Mathx-Stat-0.1.2.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Perl6-Mathx-Stat-0.1.2.tar.gz

[06:53] <buggable> New CPAN upload: Perl6-Bayes-Learn-0.1.2.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Perl6-Bayes-Learn-0.1.2.tar.gz

[06:54] *** HaraldJoerg joined
[06:54] *** p6bannerbot sets mode: +v HaraldJoerg

[06:56] *** HaraldJoerg1 left
[06:57] *** cog joined
[06:58] *** p6bannerbot sets mode: +v cog

[06:59] *** regreg__ joined
[06:59] *** p6bannerbot sets mode: +v regreg__

[07:03] *** kurahaupo left
[07:04] *** kurahaupo joined
[07:04] *** p6bannerbot sets mode: +v kurahaupo

[07:07] *** ribasushi left
[07:07] *** cog left
[07:07] *** cog joined
[07:08] *** p6bannerbot sets mode: +v cog

[07:11] *** HaraldJoerg left
[07:12] *** HaraldJoerg joined
[07:12] *** p6bannerbot sets mode: +v HaraldJoerg

[07:17] *** ribasushi joined
[07:18] *** p6bannerbot sets mode: +v ribasushi

[07:21] *** cog left
[07:35] *** ribasushi left
[07:38] *** fake_space_whale left
[07:39] *** aindilis joined
[07:40] *** p6bannerbot sets mode: +v aindilis

[07:41] *** dakkar joined
[07:41] *** p6bannerbot sets mode: +v dakkar

[07:44] *** casdr left
[07:50] *** ribasushi joined
[07:51] *** p6bannerbot sets mode: +v ribasushi

[07:53] *** lizmat joined
[07:53] *** p6bannerbot sets mode: +v lizmat

[07:58] *** Ven` joined
[07:59] *** p6bannerbot sets mode: +v Ven`

[08:03] *** rindolf joined
[08:03] *** p6bannerbot sets mode: +v rindolf

[08:05] *** benjikun joined
[08:06] *** p6bannerbot sets mode: +v benjikun

[08:10] *** zakharyas joined
[08:11] *** p6bannerbot sets mode: +v zakharyas

[08:11] *** zakharyas left
[08:12] *** zakharyas joined
[08:13] *** p6bannerbot sets mode: +v zakharyas

[08:32] *** sv joined
[08:32] *** p6bannerbot sets mode: +v sv

[08:34] *** rindolf left
[08:36] *** kurahaupo left
[08:36] *** rindolf joined
[08:37] *** kurahaupo joined
[08:37] *** finanalyst left
[08:37] *** p6bannerbot sets mode: +v rindolf

[08:38] *** p6bannerbot sets mode: +v kurahaupo

[08:40] *** sv left
[08:45] *** ZzZombo left
[08:49] *** kurahaupo left
[08:50] *** kurahaupo joined
[08:51] *** p6bannerbot sets mode: +v kurahaupo

[09:00] *** pmurias joined
[09:00] *** p6bannerbot sets mode: +v pmurias

[09:02] *** ZzZombo joined
[09:02] *** p6bannerbot sets mode: +v ZzZombo

[09:02] *** pmurias left
[09:05] *** pmurias joined
[09:05] *** p6bannerbot sets mode: +v pmurias

[09:07] *** hamhu3 joined
[09:08] *** pmurias left
[09:08] *** p6bannerbot sets mode: +v hamhu3

[09:11] *** hamhu3_ left
[09:18] * lizmat clickbaits https://p6weekly.wordpress.com/2018/10/15/2018-42-a-better-atom-for-6/

[09:35] <robertle> is there a way to distribute and look up files that are not perl modules in some consistent fashion? I want to e.g. bundle a .csv file with data with my application and of course access it at runtime. I can of course just put it in a path somewhere but then I can't distribute with zef anymore, and I guess it would make it non-portable to windows or such

[09:37] <jnthn> robertle: Look up %?RESOURCES

[09:37] <lizmat> that's what https://docs.perl6.org/language/variables#index-entry-%2525%3FRESOURCES was invented for

[09:37] <lizmat> although that could well need some extra documentation :-(

[09:38] *** jbotz joined
[09:39] <holyghost> thx, I would probably need %?RESOURCES for graphics

[09:39] <holyghost> I didn't know that

[09:39] *** p6bannerbot sets mode: +v jbotz

[09:41] *** kurahaupo left
[09:41] *** kurahaupo joined
[09:42] *** p6bannerbot sets mode: +v kurahaupo

[09:47] *** ZzZombo left
[09:49] *** kurahaupo left
[09:49] *** kurahaupo joined
[09:50] *** kurahaupo left
[09:50] *** kurahaupo joined
[09:51] *** p6bannerbot sets mode: +v kurahaupo

[09:58] *** nwellnhof joined
[09:58] *** p6bannerbot sets mode: +v nwellnhof

[09:59] <nwellnhof> p6: $_ = ^4; say .[^2], .[*-2..*]; say .[^2] ~~ .[*-2..*];

[09:59] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «(0 1)(2 3)␤True␤»

[10:00] <nwellnhof> p6: $_ = ^4; say .[^2], .[*-2..*]; say .[^2] ~~ .[*-2..3];

[10:00] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «(0 1)(2 3)␤False␤»

[10:00] <nwellnhof> p6: $_ = ^4; say .[^2], .[*-2..*]; say .[^2] ~~ .[2..*];

[10:00] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «(0 1)(2 3)␤False␤»

[10:01] <nwellnhof> The result of the first smartmatch looks like a bug.

[10:06] <tyil> can I use a LEAVE block to close DBIish's database handle, but only if the handle was succesfully created?

[10:07] <tyil> also, is LEAVE the best phaser to use for these kinds of tricks to begin with?

[10:07] <jnthn> tyil: Maybe with `LEAVE $dbh.?disconnect`?

[10:08] <nwellnhof> p6: $_ = (1, 1); say .[0] == .[1]; say .[0] ~~ .[1];

[10:08] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «True␤False␤»

[10:08] <jnthn> tyil: I tend to factor this out into something like a with-db method, so I can say like `self!with-db: -> $dbh { $dbh.do(...) }` and so forth

[10:08] <tyil> jnthn: I think `with` should work here too, but I'm not completely sure 

[10:08] <tyil> .disconnect with $dbh

[10:08] <jnthn> tyil: Yeah, that's probably better

[10:09] <tyil> I'm not working from within a class in this context, so self! is not available

[10:10] <nwellnhof> p6: my $a = (1, 1); say $a[0] ~~ $a[1];

[10:10] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «True␤»

[10:10] <tyil> I just have a sub, and I thought the code would be nicer if I could just end the sub with $sth.allrows.map(), and make that the implicit return value as well

[10:10] <tyil> instead of having to assign that to a var, close/disconnect and then return the var

[10:15] <nwellnhof> p6: $_ = (1, 2); say .head ~~ .tail;

[10:15] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «True␤»

[10:15] <nwellnhof> my $a = (1, 2); say $a.head ~~ $a.tail;

[10:15] <evalable6> nwellnhof, rakudo-moar e1ebffeb8: OUTPUT: «False␤»

[10:15] <nwellnhof> p6: my $a = (1, 2); say $a.head ~~ $a.tail;

[10:15] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «False␤»

[10:16] <nwellnhof> There's something weird going on with smartmatch and the topic variable.

[10:17] *** domidumont left
[10:17] *** cog joined
[10:18] *** p6bannerbot sets mode: +v cog

[10:19] <jnthn> Yes, ~~ sets $_ to the result of evaluating the LHS while it evaluates the RHS

[10:19] <jnthn> That's why one can do things like $file ~~ .e

[10:20] <jnthn> tyil: Yeah, sure, can do it as a sub too :)

[10:20] <nwellnhof> I see, thanks for the explanation.

[10:23] *** nwellnhof left
[10:23] *** cog left
[10:23] *** cog joined
[10:24] *** p6bannerbot sets mode: +v cog

[10:29] *** lizmat left
[10:31] *** lizmat joined
[10:31] *** p6bannerbot sets mode: +v lizmat

[10:34] <Zoffix> .tell holyghost for source URL just set the URL of your GitHub repo. PAUSE rewrites it to proper CPAN URL and IIRC modules.perl6.org uses the original's GitHub URL to figure out the repo URL

[10:34] <yoleaux> 05:01Z <holyghost> Zoffix: I'll fixify later on, I have to read up

[10:34] <yoleaux> Zoffix: I'll pass your message to holyghost.

[10:34] <yoleaux> 06:51Z <holyghost> Zoffix: I have blurb.meta in my CPAN package directory so Mathx::Stat and Bayes::Leanr should be indexed. I am not sure the source-urls are correct.

[10:37] <Zoffix> .tell holyghost Your `provides` section is still broken. Looks like you listed all keys as "Mathx::Stat::" without the last portions of the names. Also your modules are still not indexed, possibly because you named your archives with "Perl6-" at the start. Check out App::Mi6 module. It has CPAN uploading functionality and it will build the proper archive for you

[10:37] <yoleaux> Zoffix: I'll pass your message to holyghost.

[10:39] <Zoffix> .tell finanalyst give -Ilib to the executable prove runs instead of prove itself: prove -e "perl6 -Ilib" -vr t/

[10:39] <yoleaux> Zoffix: I'll pass your message to finanalyst.

[10:41] *** Zoffix left
[10:41] *** cog left
[10:41] *** HaraldJoerg left
[10:44] *** scimon joined
[10:45] *** p6bannerbot sets mode: +v scimon

[10:47] *** HaraldJoerg joined
[10:47] *** p6bannerbot sets mode: +v HaraldJoerg

[10:48] *** kurahaupo left
[10:48] *** kurahaupo joined
[10:49] *** p6bannerbot sets mode: +v kurahaupo

[10:56] *** araraloren joined
[10:56] <tyil> how to denote a sub's return type as being a Positional where each element will be a Str

[10:56] *** p6bannerbot sets mode: +v araraloren

[10:59] <moritz> have you tried --> Postional[Str]

[10:59] <moritz> ?

[10:59] <tyil> no

[10:59] <moritz> m: sub f(--> Positional[Str]) { Array[Str].new('b', 'b' }; f()

[10:59] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3itional[Str]) { Array[Str].new('b', 'b' 7⏏5}; f()␤»

[10:59] <moritz> m: sub f(--> Positional[Str]) { Array[Str].new('b', 'b') }; f()

[10:59] <camelia> rakudo-moar e1ebffeb8: ( no output )

[10:59] <moritz> m: sub f(--> Positional[Str]) { Array.new('b', 'b') }; f()

[10:59] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «Type check failed for return value; expected Positional[Str] but got Array ($["b", "b"])␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[11:00] <moritz> might or might not be what you want

[11:00] <tyil> hmm

[11:01] <tyil> I'm getting that last error in the context that I want to use it

[11:01] <holyghost> .tell Zoffix I don't have access to App:Mi6 because of botcherous SSL, check again if the source-url is correct

[11:01] <yoleaux> 10:34Z <Zoffix> holyghost: for source URL just set the URL of your GitHub repo. PAUSE rewrites it to proper CPAN URL and IIRC modules.perl6.org uses the original's GitHub URL to figure out the repo URL

[11:01] <yoleaux> holyghost: I'll pass your message to Zoffix.

[11:01] <yoleaux> 10:37Z <Zoffix> holyghost: Your `provides` section is still broken. Looks like you listed all keys as "Mathx::Stat::" without the last portions of the names. Also your modules are still not indexed, possibly because you named your archives with "Perl6-" at the start. Check out App::Mi6 module. It has CPAN uploading functionality and it will build the proper archive for you

[11:02] <holyghost> .tell Zoffix I don't need a github repo, because it's broken sometimes to login, so I want clean CPAN usage, it's more perlwise

[11:02] <yoleaux> holyghost: I'll pass your message to Zoffix.

[11:03] <buggable> New CPAN upload: Bayes-Learn-0.1.3.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Bayes-Learn-0.1.3.tar.gz

[11:03] <buggable> New CPAN upload: Mathx-Stat-0.1.3.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Mathx-Stat-0.1.3.tar.gz

[11:05] <holyghost> .tell Zoffix check again if you please

[11:05] <yoleaux> holyghost: I'll pass your message to Zoffix.

[11:07] *** leont joined
[11:08] *** p6bannerbot sets mode: +v leont

[11:09] *** ZzZombo joined
[11:09] *** p6bannerbot sets mode: +v ZzZombo

[11:15] <jkramer> https://gist.github.com/throwaway-30964/39aecda8ce4dcbae9297fd4b1d873d15

[11:15] <jkramer> I'm getting "Cannot assign to an immutable value" for the assignment in line 13, shouldn't that work?

[11:17] *** cog joined
[11:18] *** p6bannerbot sets mode: +v cog

[11:20] *** cog left
[11:20] *** cog joined
[11:21] *** abraxxa left
[11:21] <holyghost> .tell Zoffix I would really like to update the perl6 CPAN package parser, if you would pass me his URL/email I'd be glad to help, I'd gunzip and parse instead of otherwise

[11:21] <yoleaux> holyghost: I'll pass your message to Zoffix.

[11:21] *** p6bannerbot sets mode: +v cog

[11:22] *** abraxxa joined
[11:22] *** p6bannerbot sets mode: +v abraxxa

[11:23] *** zakharyas left
[11:26] *** abraxxa left
[11:31] *** Ven` left
[11:32] *** kensanata joined
[11:32] *** p6bannerbot sets mode: +v kensanata

[11:37] <scimon> There's no plans to remove the Git Based module system from zef are there? I just think it is a great basis for local modules. Whilst I'm a fan of open source code having company specific modules is a useful thing. If we can have an easy to setup and use DarkPan I'd be happy.

[11:38] <scimon> (Especially if it didn't actually require running a local CPAN. 

[11:40] *** Actualeyes left
[11:43] <buggable> New CPAN upload: Bayes-Learn-0.1.4.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Bayes-Learn-0.1.4.tar.gz

[11:43] <buggable> New CPAN upload: Mathx-Stat-0.1.4.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Mathx-Stat-0.1.4.tar.gz

[11:46] *** Ven` joined
[11:47] *** p6bannerbot sets mode: +v Ven`

[11:52] *** kurahaupo left
[11:53] *** kurahaupo joined
[11:54] *** p6bannerbot sets mode: +v kurahaupo

[11:56] *** abraxxa joined
[11:57] *** p6bannerbot sets mode: +v abraxxa

[11:57] *** domidumont joined
[11:58] *** p6bannerbot sets mode: +v domidumont

[12:04] <leont> Filed yesterday's issue

[12:05] *** Zoffix joined
[12:05] *** p6bannerbot sets mode: +v Zoffix

[12:06] <Zoffix> scimon: no, no plans to remove.

[12:06] <yoleaux> 11:01Z <holyghost> Zoffix: I don't have access to App:Mi6 because of botcherous SSL, check again if the source-url is correct

[12:06] <yoleaux> 11:02Z <holyghost> Zoffix: I don't need a github repo, because it's broken sometimes to login, so I want clean CPAN usage, it's more perlwise

[12:06] *** regreg__ left
[12:06] <yoleaux> 11:05Z <holyghost> Zoffix: check again if you please

[12:06] <yoleaux> 11:21Z <holyghost> Zoffix: I would really like to update the perl6 CPAN package parser, if you would pass me his URL/email I'd be glad to help, I'd gunzip and parse instead of otherwise

[12:06] <Zoffix> holyghost: most modern perl packages include a URL to a repo with the source. Makes it easier to report problems

[12:07] <CIAvash> jkramer: $_ is bound to an integer(by `for ^10`). so you are assigning something to 0.

[12:07] <Zoffix> holyghost: I don't have contacts for the CPAN package parser, but mst likely knows how to reach them. lizmat might know too

[12:07] <holyghost> Zoffix: I'm sorry about the .tell usage you're online now

[12:07] <holyghost> I used the tarball in both my packages

[12:08] <holyghost> I am going to write some package source compilers probably, the thing's too stupid

[12:08] <holyghost> If only I find the time with my statistics packages

[12:09] <Zoffix> holyghost: yeah, I know. So there's a tarball on CPAN and a repo with code somehwere too, usually. So you put repo as source URL and when you upload to CPAN the PAUSE parser changes the source-url to CPAN URL in the meta file it generates. So there are two separate meta files and modules.perl6.org can use the original one to figure out the repo

[12:09] <holyghost> I understand

[12:10] <Zoffix> Like here: https://modules.perl6.org/dist/Bailador:cpan:UFOBAT  it's a CPAN package, but there's a "Dist's repo" button that leads to github

[12:10] <holyghost> I only need a doc for modules.perl6.org, I don;t like test as it's open source

[12:10] <holyghost> s/test/tests

[12:11] <holyghost> ok

[12:11] <Zoffix> holyghost: oh you mean modules.perl6.org's CPAN handler?

[12:12] <holyghost> of docs yes

[12:12] <Zoffix> "of docs"?

[12:12] * Zoffix doesn't understand

[12:12] *** cog left
[12:13] <Zoffix> The CPAN handling on mp6.org is here https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder.pm#L128-L190 and here https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder/Dist/Source/CPAN.pm

[12:13] <holyghost> There's a html page written to modules.perl6.org for some doc files ?

[12:13] <Zoffix> doc files of what?

[12:13] <holyghost> I don;t remember

[12:13] <holyghost> pod maybe

[12:14] <holyghost> Something said there was HTML output in https://docs.perl6.org/language/modules#Preparing_the_module

[12:15] <jkramer> Is there a nicer way to do for ^10 without assigning the number to $_, other than for ^10 -> $ { ... ?

[12:15] <Zoffix> "The README.md file is a markdown-formatted text file, which will later be automatically rendered as HTML by GitHub."

[12:15] <Zoffix> jkramer: no, but you could use $OUTER::_ inside the loop to reference the outer $_ instead of the one used by the loop

[12:16] <holyghost> that's what I was talking about

[12:16] <Zoffix> m: $_ = 'meows'; $OUTER::_.say for ^3

[12:16] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «meows␤meows␤meows␤»

[12:16] <jkramer> Hmm that doesn't make it nicer though, I wanted to use $_ for convinience :)

[12:16] <holyghost> Zoffix: For general usage we should use a README.txt

[12:17] <holyghost> nor only github but Windows too

[12:17] <Zoffix> holyghost: right, but that's for p6c GitHub-hosted ecosystem. But if you have README.md in your tarball, the modules.perl6.org will render it too like here: https://modules.perl6.org/dist/Bailador:cpan:UFOBAT

[12:17] <Zoffix> use markdown and save it in README.md

[12:17] *** lizmat_ joined
[12:17] *** p6bannerbot sets mode: +v lizmat_

[12:18] <jkramer> do { ... } xx 10 seems to work but not sure if that's better or worse than for ^10 -> $ :)

[12:18] <holyghost> README.html, from README.txt

[12:18] <holyghost> that's also why I want to hack the parser

[12:19] <holyghost> README.md can  still be in use

[12:19] <Zoffix> Doesn't make sense for me to make README.html from README.txt...

[12:20] <holyghost> Zoffix: on the docs server

[12:20] *** lizmat left
[12:20] <Zoffix> .txt signifies it's plain text, not HTML

[12:20] <Zoffix> m: $_ = 'meows'; .say xx 10

[12:20] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «meows␤meows␤meows␤meows␤meows␤meows␤meows␤meows␤meows␤meows␤»

[12:20] <holyghost> It's a div probably in HTML

[12:20] <Zoffix> jkramer: ^ do {} is often optional

[12:20] *** Zoffix left
[12:21] <holyghost> IF anything gets lost we can retain it from an htmldump to text

[12:21] <Geth> ¦ doc: 38de31936d | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/modules.pod6

[12:21] <Geth> ¦ doc: Document mp6o renders for CPAN

[12:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/38de31936d

[12:21] <synopsebot> Link: https://doc.perl6.org/language/modules

[12:23] <CIAvash> jkramer: what about something like `while %ng{$last} -> $_`

[12:35] *** zakharyas joined
[12:36] *** p6bannerbot sets mode: +v zakharyas

[12:42] *** zakharyas left
[12:42] *** zakharyas joined
[12:43] <jkramer> CIAvash: I don't think that works for inline-while

[12:43] *** p6bannerbot sets mode: +v zakharyas

[12:44] <CIAvash> jkramer: what do you mean by inline?

[12:45] <jkramer> m: .say while (^2).pick -> $_

[12:45] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unexpected block in infix position (missing statement control word before the expression?)␤at <tmp>:1␤------> 3.say while (^2).pick7⏏5 -> $_␤    expecting any of:␤        infix␤        i…»

[12:49] *** regreg__ joined
[12:50] *** p6bannerbot sets mode: +v regreg__

[12:52] *** x[LGWs4x4i]uG2N0 left
[12:53] <tyil> trying to use DBIish, I'm getting the following error: DBIish: DBDish::Pg needs 'pq', not found

[12:53] <tyil> zef search pq doesnt yield anything

[12:53] <tyil> searching my distro repos doesnt return a match either (substring match that doesnt seem to be related)

[12:55] <moritz> tyil: it's probably a system library

[12:55] <moritz> not a perl module

[12:56] <tyil> but nothing seems to provide it on my system

[12:56] <tyil> so what is it exactly looking for? the error is very LTA (especially since I would expect it to be a perl module by default)

[12:58] *** sno left
[12:59] <araraloren> tyil what is Pg ?

[12:59] <araraloren> q

[12:59] <tyil> if I knew I wouldn't have to ask, araraloren 

[13:01] <araraloren> Your system should already have PostgreSQL server installed and running.

[13:01] <araraloren> that's what I found

[13:02] <araraloren> Maybe a command tools of PgSQL

[13:02] *** sena_kun joined
[13:03] *** p6bannerbot sets mode: +v sena_kun

[13:04] *** ZzZombo_ joined
[13:04] *** p6bannerbot sets mode: +v ZzZombo_

[13:05] *** zakharyas left
[13:05] *** zakharyas joined
[13:06] *** p6bannerbot sets mode: +v zakharyas

[13:07] *** ZzZombo left
[13:07] *** ZzZombo_ is now known as ZzZombo

[13:08] <CIAvash> jkramer: then try `while $_ := %ng{$last}`

[13:10] <jkramer> CIAvash: That works, thanks!

[13:11] *** sno joined
[13:11] *** p6bannerbot sets mode: +v sno

[13:13] *** Ven` left
[13:13] <AlexDaniel> holyghost: perl6-compiler is a wrong mailing list :)

[13:14] <AlexDaniel> https://perl6.org/archive/lists/

[13:15] <AlexDaniel> maybe perl6-users is a better choice? Not sure

[13:16] *** Ven` joined
[13:16] <holyghost> I cannot get onto perl6-users because of majrodomo

[13:16] <holyghost> s/majrodomo/majordomo

[13:17] *** p6bannerbot sets mode: +v Ven`

[13:17] <holyghost> Larry told me to put it on perl6-compiler

[13:19] *** Merfont joined
[13:19] *** p6bannerbot sets mode: +v Merfont

[13:20] *** Kaypie left
[13:20] *** sno left
[13:20] <holyghost> He told me that perl-users is less for packages but for perl6 blurb usage

[13:21] *** sno joined
[13:21] <holyghost> I hope that's ok

[13:21] *** p6bannerbot sets mode: +v sno

[13:24] <masak> I know I don't blog so often these days :/

[13:24] <masak> but I just found this, that I wrote a while ago: https://github.com/masak/007/issues/345

[13:24] <masak> I would say if it weren't an issue on github, it could've been a blog post :)

[13:30] *** vrurg joined
[13:31] *** p6bannerbot sets mode: +v vrurg

[13:43] <tyil> araraloren: but I dont want to run a server just so I can run a client, that'd be silly

[13:46] *** sno left
[13:50] *** buggable left
[13:50] *** buggable joined
[13:50] *** ChanServ sets mode: +v buggable

[13:55] *** cog joined
[13:56] *** p6bannerbot sets mode: +v cog

[14:05] *** zakharyas left
[14:05] *** zakharyas joined
[14:06] *** p6bannerbot sets mode: +v zakharyas

[14:13] <holyghost> My only concern is that you could use Bayesian Inference for conditional compilatin in MoarVM

[14:13] <holyghost> So you could generate several parsing techniques

[14:14] <holyghost> I might write a C file for it and post it

[14:14] <holyghost> It'd be an option for the perl6 command line

[14:14] <holyghost> -opt:bayes

[14:17] <holyghost> It's more difficult than it sounds. My Bayesian Inference C file should become refactored for such things

[14:17] <holyghost> inference == pulsing

[14:18] *** sno joined
[14:18] *** p6bannerbot sets mode: +v sno

[14:24] *** cog left
[14:30] <buggable> New CPAN upload: Sparrowdo-Cordova-OSx-Build-0.0.7.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo::Cordova::OSx::Build:cpan:MELEZHIK

[14:43] *** xinming_ left
[14:50] *** fake_space_whale joined
[14:51] *** p6bannerbot sets mode: +v fake_space_whale

[14:52] *** curan left
[14:54] *** curan joined
[14:54] *** p6bannerbot sets mode: +v curan

[14:54] *** curan left
[15:01] *** domidumont left
[15:01] *** AlexDaniel left
[15:02] *** AlexDaniel joined
[15:03] *** p6bannerbot sets mode: +v AlexDaniel

[15:05] *** zakharyas left
[15:05] <scimon> Zoffix: Good to know. I may get round to writing an article on managing a Perl6 DrakPAN. (In a couple of weeks, after the wedding).

[15:06] *** zakharyas joined
[15:07] *** p6bannerbot sets mode: +v zakharyas

[15:17] *** abraxxa left
[15:19] *** AlexDaniel left
[15:21] *** AlexDaniel joined
[15:22] *** p6bannerbot sets mode: +v AlexDaniel

[15:25] *** xinming joined
[15:26] *** p6bannerbot sets mode: +v xinming

[15:35] *** pmurias joined
[15:35] *** p6bannerbot sets mode: +v pmurias

[15:36] *** abraxxa joined
[15:37] *** p6bannerbot sets mode: +v abraxxa

[15:44] *** kensanata left
[15:44] *** troys joined
[15:45] *** p6bannerbot sets mode: +v troys

[15:46] *** x[LGWs4x4i]uG2N0 joined
[15:47] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[16:05] *** zakharyas left
[16:06] *** fake_space_whale left
[16:07] *** Merfont left
[16:08] *** Kaiepi joined
[16:09] *** cog joined
[16:09] *** p6bannerbot sets mode: +v Kaiepi

[16:09] *** p6bannerbot sets mode: +v cog

[16:09] *** Kaiepi left
[16:10] *** Kaiepi joined
[16:11] *** p6bannerbot sets mode: +v Kaiepi

[16:13] *** Kaiepi left
[16:14] *** Kaiepi joined
[16:14] <El_Che> scimon: will it work for github modules?

[16:15] *** p6bannerbot sets mode: +v Kaiepi

[16:15] *** araraloren left
[16:18] *** Ven` left
[16:32] <scimon> El_Che: Should do. My plan is to document what you need to do to run your own local github/gitlab based set of packages. 

[16:32] *** scimon left
[16:33] *** robertle left
[16:35] *** uzl joined
[16:36] *** p6bannerbot sets mode: +v uzl

[16:37] *** dakkar left
[16:38] <uzl> Hello, #perl6! 

[16:38] <yoleaux> 11 Oct 2018 06:33Z <jmerelo> uzl: received, thanks!

[16:38] *** zakharyas joined
[16:39] *** p6bannerbot sets mode: +v zakharyas

[16:40] <uzl> p6weekly mentioned a new intro page for perl6.org but it seems it's back to normal. anybody knows what happened?

[16:43] *** ryn1x joined
[16:43] <AlexDaniel> uzl: https://github.com/perl6/doc/commit/13739c651bfac6de38db2db9b3acaa77948fc77f

[16:44] *** p6bannerbot sets mode: +v ryn1x

[16:44] <AlexDaniel> .tell jmerelo is there a ticket for rerevert of the commit that was reverted in D#2374 ?

[16:44] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[16:44] <synopsebot> D#2374 [closed]: https://github.com/perl6/doc/issues/2374 [bug][site] Most search results point to pages that do not exist

[16:44] <uzl> AlexDaniel: Oh, I see. Thanks!

[16:45] *** kurahaupo left
[16:45] <AlexDaniel> .tell I got to know about it in http://colabti.org/irclogger/irclogger_log/perl6?date=2018-10-16#l581 and was somewhat surprised

[16:45] <yoleaux> AlexDaniel: I'll pass your message to I.

[16:46] *** lizmat_ left
[16:46] *** kurahaupo joined
[16:47] *** p6bannerbot sets mode: +v kurahaupo

[16:47] *** cog left
[16:47] *** lizmat joined
[16:47] *** p6bannerbot sets mode: +v lizmat

[16:47] *** domidumont joined
[16:48] *** cog joined
[16:48] <ryn1x> Does rakudo with the JVM backend output class files?

[16:48] *** p6bannerbot sets mode: +v domidumont

[16:48] *** p6bannerbot sets mode: +v cog

[16:52] *** lizmat left
[16:53] *** domidumont left
[16:54] *** zakharyas left
[16:57] *** ryn1x left
[16:57] *** ryn1x_ joined
[16:58] *** p6bannerbot sets mode: +v ryn1x_

[17:05] <AlexDaniel> ooooooooh

[17:05] *** ryn1x_ left
[17:08] <AlexDaniel> (#perl6-dev)

[17:18] *** lizmat joined
[17:18] *** p6bannerbot sets mode: +v lizmat

[17:21] *** domidumont joined
[17:22] *** p6bannerbot sets mode: +v domidumont

[17:25] *** zxcvz joined
[17:25] *** pecastro joined
[17:26] *** p6bannerbot sets mode: +v zxcvz

[17:26] *** p6bannerbot sets mode: +v pecastro

[17:30] *** AlexDaniel is now known as I`

[17:30] *** I` is now known as AlexDaniel

[17:30] <AlexDaniel> .tell jmerelo I got to know about it in http://colabti.org/irclogger/irclogger_log/perl6?date=2018-10-16#l581 and was somewhat surprised

[17:30] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[17:38] *** AlexDaniel left
[17:38] *** AlexDaniel joined
[17:39] *** p6bannerbot sets mode: +v AlexDaniel

[17:40] *** AlexDaniel left
[17:40] *** AlexDaniel joined
[17:41] *** AlexDaniel left
[17:41] *** AlexDaniel joined
[17:42] *** p6bannerbot sets mode: +v AlexDaniel

[17:44] *** noganex_ left
[17:44] *** noganex joined
[17:45] *** p6bannerbot sets mode: +v noganex

[17:47] *** lizmat_ joined
[17:47] *** p6bannerbot sets mode: +v lizmat_

[17:50] *** lizmat left
[18:01] *** random_yanek left
[18:02] *** cog left
[18:06] <Geth> ¦ doc: e276c76e2b | (JJ Merelo)++ | META6.json

[18:06] <Geth> ¦ doc: Eliminates tabs

[18:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e276c76e2b

[18:09] *** random_yanek joined
[18:10] *** p6bannerbot sets mode: +v random_yanek

[18:12] <Geth> ¦ doc: 28ffef7fda | (JJ Merelo)++ | util/travis-build.sh

[18:12] <Geth> ¦ doc: Forces installation of IO::Socket::SSL

[18:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/28ffef7fda

[18:16] *** ryn1x_ joined
[18:17] *** p6bannerbot sets mode: +v ryn1x_

[18:17] *** Kaiepi left
[18:17] * leont wonders why that «--/tap-harness» is necessary, that suggests dealing with invalid TAP

[18:17] *** diakopter left
[18:19] *** Kaiepi joined
[18:19] *** p6bannerbot sets mode: +v Kaiepi

[18:30] *** domidumont left
[18:31] *** noganex_ joined
[18:32] *** p6bannerbot sets mode: +v noganex_

[18:35] *** noganex left
[18:36] *** uzl left
[18:36] *** uzl joined
[18:37] <Geth> ¦ doc: bce2cc8798 | (JJ Merelo)++ | doc/Language/glossary.pod6

[18:37] <Geth> ¦ doc: Eliminates outdated list of bots

[18:37] <Geth> ¦ doc: 

[18:37] <Geth> ¦ doc: And points to a single source of truth in the community page. Closes #2380.

[18:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/bce2cc8798

[18:37] <synopsebot> Link: https://doc.perl6.org/language/glossary

[18:37] *** ryn1x_ left
[18:37] *** p6bannerbot sets mode: +v uzl

[18:37] *** ryn1x_ joined
[18:38] *** ryn1x_ is now known as ryn1x

[18:38] *** p6bannerbot sets mode: +v ryn1x

[18:53] <Xliff> m: say 1024 * 12

[18:53] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «12288␤»

[18:56] *** ryn1x left
[19:04] *** patrickb joined
[19:05] *** p6bannerbot sets mode: +v patrickb

[19:12] *** isBEKaml joined
[19:12] *** p6bannerbot sets mode: +v isBEKaml

[19:13] <isBEKaml> voice? Is everyone voiced now?

[19:13] <isBEKaml> Ohhai!

[19:16] <leont> Anti-spambot measure

[19:17] <isBEKaml> 11,99leont99,99: Ah, okay

[19:17] *** isBEKaml left
[19:18] *** isBEKaml joined
[19:18] *** p6bannerbot sets mode: +v isBEKaml

[19:24] *** cognominal-p6 joined
[19:25] *** p6bannerbot sets mode: +v cognominal-p6

[19:32] *** cognominal-p6 left
[19:32] *** cognominal-p6 joined
[19:33] *** p6bannerbot sets mode: +v cognominal-p6

[19:34] *** lizmat_ is now known as lizmat

[19:35] *** yqt joined
[19:36] *** p6bannerbot sets mode: +v yqt

[19:51] *** uzl left
[19:56] *** sauvin left
[19:57] *** sauvin joined
[19:57] *** p6bannerbot sets mode: +v sauvin

[20:10] *** sauvin left
[20:14] *** sauvin joined
[20:14] *** p6bannerbot sets mode: +v sauvin

[20:25] *** patrickb left
[20:31] *** zxcvz left
[20:32] *** mattp_ left
[20:33] *** rhizon8r_ left
[20:34] *** rhizon8r joined
[20:34] <Xliff> jnthn?

[20:34] *** p6bannerbot sets mode: +v rhizon8r

[20:35] *** mattp_ joined
[20:35] *** p6bannerbot sets mode: +v mattp_

[20:38] *** dct joined
[20:38] *** p6bannerbot sets mode: +v dct

[20:40] <jnthn> Xliff: o/

[20:40] *** mattp_ left
[20:42] *** isBEKaml left
[20:45] <Geth> ¦ doc: MorayJ++ created pull request #2386: Concurrency

[20:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2386

[20:51] *** isBEKaml joined
[20:51] *** p6bannerbot sets mode: +v isBEKaml

[20:51] *** alpha joined
[20:52] *** p6bannerbot sets mode: +v alpha

[20:52] *** mattp_ joined
[20:53] *** p6bannerbot sets mode: +v mattp_

[20:56] <Xliff> .tell jnthn I did manage to get signals straightened out in a generic way. Use of Supplies has been preserved, but it's still kinda hackish. See: https://github.com/Xliff/p6-GtkPlus/commit/3fe12b2267efcadbc9466bf34cb9e1e7db5c0b45

[20:56] <yoleaux> Xliff: I'll pass your message to jnthn.

[20:56] <Xliff> Doh!

[20:56] <Xliff> That took me a long time to write.

[20:57] <Xliff> jnthn: \o

[20:59] *** mattp_ left
[21:03] <jnthn> Xliff: Left a couple of thoughts on the commit

[21:03] <yoleaux> 20:56Z <Xliff> jnthn: I did manage to get signals straightened out in a generic way. Use of Supplies has been preserved, but it's still kinda hackish. See: https://github.com/Xliff/p6-GtkPlus/commit/3fe12b2267efcadbc9466bf34cb9e1e7db5c0b45

[21:03] <Xliff> jnthn: Thanks!

[21:11] *** sena_kun left
[21:11] <Xliff> jnthn: One issue I've been wondering about is how to make it so I don't have to have separate signal hashes for each object type.

[21:12] <Xliff> I thought it would work well enough to have a %!signals, and have every descendant use that, however if an attribute is not defined in a role, it isn't useable, even by descendants. 

[21:12] <Xliff> Is there a way to accomplish that in Perl6?

[21:13] <Xliff> IE - Have an attribute in one role be used by another (or at least the equivalent behavior).

[21:16] <jnthn> Xliff: Can probably workaround it by writing a private method to get hold of the attribute

[21:18] *** pmurias left
[21:20] *** isBEKaml left
[21:22] *** dct left
[21:26] <Xliff> m: role A { has $!a; }; role B does A { method b { say $!a; }; }; my $b = 1 but B; say $b.b

[21:26] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Attribute $!a not declared in role B␤at <tmp>:1␤------> 3role B does A { method b { say $!a; }; }7⏏5; my $b = 1 but B; say $b.b␤    expecting any of:␤        horizontal whitespace␤»

[21:27] <Xliff> m: role A { has $!a; method a { $!a }; }; role B does A { method b { say self.a; }; }; my $b = 1 but B; say $b.b

[21:27] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «(Any)␤True␤»

[21:27] <Xliff> m: role A { has $!a = 2; method a { $!a }; }; role B does A { method b { say self.a; }; }; my $b = 1 but B; say $b.b

[21:27] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «2␤True␤»

[21:28] <Xliff> m: role A { has $.a is rw = 2; method a { $!a }; }; role B does A { method b { say self.a; }; }; my $b = 1 but B; say $b.b

[21:28] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «2␤True␤»

[21:28] <Xliff> m: role A { has $.a is rw = 2; method a { $!a }; }; role B does A { method b { say self.a; }; }; my $b = 1 but B; say $b.b; $b.a = 3; $b.a.say

[21:28] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «2␤Cannot modify an immutable Int (2)␤  in block <unit> at <tmp> line 1␤␤True␤»

[21:28] <Xliff> m: role A { has $.a is rw = 2; method a is rw { $!a }; }; role B does A { method b { say self.a; }; }; my $b = 1 but B; say $b.b; $b.a = 3; $b.a.say

[21:29] <camelia> rakudo-moar e1ebffeb8: OUTPUT: «2␤True␤3␤»

[21:29] <Xliff> Yeah. I should have thought of that.

[21:48] <Geth> ¦ doc/master: 10 commits pushed by MorayJ++, timo++

[21:48] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/bce2cc8798c0...72b93ca9c1ab

[21:58] *** yqt left
[21:59] *** hamhu3 left
[22:00] *** isBEKaml joined
[22:00] *** p6bannerbot sets mode: +v isBEKaml

[22:08] *** pecastro left
[22:15] *** HaraldJoerg left
[22:16] *** fake_space_whale joined
[22:17] *** p6bannerbot sets mode: +v fake_space_whale

[22:32] *** ExtraCrispy_ left
[22:45] *** mempko left
[22:50] <buggable> New CPAN upload: Cro-H-0.0.1.tar.gz by GARLANDG https://cpan.metacpan.org/authors/id/G/GA/GARLANDG/Perl6/Cro-H-0.0.1.tar.gz

[23:13] *** isBEKaml left
[23:15] *** yqt joined
[23:16] *** p6bannerbot sets mode: +v yqt

[23:30] *** yqt left
[23:38] *** MasterDuke joined
[23:38] *** p6bannerbot sets mode: +v MasterDuke

[23:39] *** MasterDuke left
[23:39] *** MasterDuke joined
[23:39] *** herbert.freenode.net sets mode: +v MasterDuke

[23:39] *** p6bannerbot sets mode: +v MasterDuke

[23:41] *** atweiden-air joined
[23:41] *** p6bannerbot sets mode: +v atweiden-air

[23:46] *** leont left
[23:50] <buggable> New CPAN upload: Cro-H-0.0.2.tar.gz by GARLANDG http://modules.perl6.org/dist/Cro::H:cpan:GARLANDG

