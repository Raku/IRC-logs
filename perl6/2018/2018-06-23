[00:00] *** fascinum joined
[00:14] <tony-o_> AlexDaniel: - that test *should* be fixed on Koos, ty for the ticket

[00:17] *** markoong left
[00:25] *** mnichols612 joined
[00:26] <AlexDaniel> tony-o_: Koos?

[00:28] <AlexDaniel> ah, Koos!

[00:30] *** mnichols612 left
[00:30] <AlexDaniel> tony-o_: nice! I scratched my head quite a bit on that one trying to come up with a short fix

[00:32] <AlexDaniel> tony-o_: I don't think it is fixed though…

[00:32] <AlexDaniel> ah wait, that's my fork…

[00:34] <AlexDaniel> yes, looks fixed to me now!

[00:34] <AlexDaniel> tony-o_++

[00:35] *** aborazmeh joined
[00:35] *** aborazmeh left
[00:35] *** aborazmeh joined
[00:37] *** kurahaupo left
[00:37] *** kurahaupo joined
[01:05] <Geth> ¦ doc: rafaelschipiura self-assigned remove merged branches https://github.com/perl6/doc/issues/2118

[01:05] <Geth> ¦ doc: rafaelschipiura assigned to W4anD0eR96 Issue remove merged branches https://github.com/perl6/doc/issues/2118

[01:05] <tony-o_> my fix isn't the most bullet proof

[01:05] <Geth> ¦ doc: rafaelschipiura assigned to ronaldxs Issue remove merged branches https://github.com/perl6/doc/issues/2118

[01:05] <Geth> ¦ doc: rafaelschipiura assigned to molecules Issue remove merged branches https://github.com/perl6/doc/issues/2118

[01:05] <Geth> ¦ doc: rafaelschipiura assigned to fluca1978 Issue remove merged branches https://github.com/perl6/doc/issues/2118

[01:05] <tony-o_> but it lets the module install

[01:06] *** zachk left
[01:15] <Geth> ¦ doc/coke/build: 18 commits pushed by (Will "Coke" Coleda)++

[01:15] <Geth> ¦ doc/coke/build: review: https://github.com/perl6/doc/compare/0c830c63c451...b7a51e98e9ce

[01:17] <AlexDaniel> .tell Zoffix there's “modules-20171223” branch in the doc repo with no commits ahead. I'm not sure what this was for, but it does sound like a tag was wanted instead of branch. Anyway, is it safe to delete or not?

[01:17] <yoleaux> AlexDaniel: I'll pass your message to Zoffix.

[01:32] *** comborico1611 left
[01:36] *** hami joined
[01:44] *** hami left
[01:55] *** gabiruh left
[02:02] *** ufobat___ joined
[02:05] *** ufobat_ left
[02:20] *** aborazmeh left
[02:44] *** MasterDuke_ joined
[02:45] *** MasterDuke left
[02:48] *** raschipi left
[02:52] *** gabiruh joined
[02:57] *** gabiruh left
[02:58] *** Todd_ joined
[02:58] <Todd_> Hi All, Is there a way to tell split I want it to split across every two characters?

[02:58] <yoleaux> 2 May 2018 10:34Z <Zoffix> Todd_: Yes, "perl6" is a batch file on Windows. Just use run "notepad.exe" instead of going through cmd.exe. You can copy-paste Windows instructions from here to build on win32: https://rakudo.org/files/star/source  It's not rocket surgery.

[02:59] *** ufobat_ joined
[03:00] <Todd_> Do we have two todds on right now?

[03:00] <Todd_> I will log out and back on as todd and margo

[03:00] *** Todd_ left
[03:01] *** ToddAndMargo joined
[03:01] <ToddAndMargo> I am back.  Is there a way to tell split to split across every two characters?

[03:02] *** ufobat___ left
[03:08] <geekosaur> not split, no.

[03:09] <geekosaur> m: say 'abcdef'.match(/../, :g)

[03:09] <camelia> rakudo-moar c441d8d8b: OUTPUT: «(｢ab｣ ｢cd｣ ｢ef｣)␤»

[03:09] <ToddAndMargo> in a "for" loop, is there a way to give it a string and tell it to loop over every two characters

[03:10] *** lizmat left
[03:11] <ToddAndMargo> $ echo 41424344 | perl6 -e 'my $x = slurp(); for  $x.match(/../, :g) -> $a { say "$a";};' 41 42 43 44

[03:11] <ToddAndMargo> Thank you!

[03:20] *** ToddAndMargo left
[03:27] *** MasterDuke_ is now known as MasterDuke

[03:28] <MasterDuke> m: say "a1b2c3".comb(2)

[03:28] <camelia> rakudo-moar c441d8d8b: OUTPUT: «(a1 b2 c3)␤»

[03:28] <MasterDuke> ah, they left

[03:29] <kybr> does perl6 have a list of unicode blocks in there somewhere?

[03:31] <kybr> oh, i think i found it.

[03:32] <geekosaur> oh, that does work. missed that (comb was the first thing I tried to check… via docs. sometimes those signatures get to be a bit thick)

[03:33] <Geth> ¦ doc: W4anD0eR96 self-unassigned remove merged branches https://github.com/perl6/doc/issues/2118

[03:34] <MasterDuke> yeah. at first i thought it had to take /../ also, then remember it had an int candidate

[03:45] <Juerd> https://github.com/perl6/doc/issues/2117#issuecomment-399627557  # It seems %() is just about the only thing that won't create an empty hash, lol. So many options.

[03:49] *** lookatme joined
[03:52] *** MasterDuke left
[03:53] *** gabiruh joined
[03:53] *** lookatme left
[03:57] *** gabiruh left
[04:10] *** lookatme joined
[04:53] *** gabiruh joined
[04:54] <Juerd> https://github.com/perl6/doc/issues/2117#issuecomment-399630726  # Fishy benchmark?. Why would {} be so much slower than hash()?

[04:58] *** gabiruh left
[05:05] <buggable> New CPAN upload: IP-Random-0.0.6.tar.gz by JMASLAK http://modules.perl6.org/dist/IP::Random:cpan:JMASLAK

[05:06] *** wamba joined
[05:21] *** sauvin joined
[05:21] *** sauvin left
[05:29] *** fascinum left
[05:31] *** piniii joined
[05:36] *** piniii left
[05:54] *** gabiruh joined
[05:58] *** gabiruh left
[06:04] *** wamba left
[06:07] *** fascinum joined
[06:24] *** lizmat joined
[06:35] *** molaf joined
[06:48] *** rindolf joined
[06:55] *** gabiruh joined
[06:56] *** damnlie left
[06:57] *** damnlie joined
[06:59] *** gabiruh left
[07:07] *** sauvin joined
[07:17] *** jmerelo joined
[07:22] *** Xliff joined
[07:23] *** n1ge left
[07:24] *** Hor|zon left
[07:24] *** Hor|zon joined
[07:25] <Xliff> m: my token select_alias { '@' \w+ }; my $m = '\@identifier' ~~ /^<select_alias>/; $m.gist.say

[07:25] <camelia> rakudo-moar c441d8d8b: OUTPUT: «(Any)␤»

[07:25] <Xliff> m: my token select_alias { '@' \w+ }; my $m = '@identifier' ~~ /^<select_alias>/; $m.gist.say

[07:25] <camelia> rakudo-moar c441d8d8b: OUTPUT: «｢@identifier｣␤ select_alias => ｢@identifier｣␤»

[07:29] *** [Coke] left
[07:29] *** [Coke] joined
[07:33] *** fascinum left
[07:47] <tyil> how long does it take for comments to be approved on news.perlfoundation 

[07:49] *** molaf left
[07:51] <samcv> what does +~ do?

[07:51] <jmerelo> samcv: I guess it will depend on the context... But it's hard to guess... 

[07:52] <jmerelo> m: say '3' +~ 3

[07:52] <camelia> rakudo-moar c441d8d8b: OUTPUT: «6␤»

[07:52] <jmerelo> m: say '3' + 3

[07:52] <camelia> rakudo-moar c441d8d8b: OUTPUT: «6␤»

[07:52] <jmerelo> In this context, nothing.

[07:53] <jmerelo> samcv: I would say nothing in general...  ~ stringifies and puts in string context, + adds and puts in scalar context, so... No idea.

[07:54] <jmerelo> m: say '3' +~ <2 3>

[07:54] <camelia> rakudo-moar c441d8d8b: OUTPUT: «Cannot convert string to number: trailing characters after number in '032⏏5 3' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤»

[07:54] <jmerelo> m: say <2 3> +~ 5

[07:54] <camelia> rakudo-moar c441d8d8b: OUTPUT: «7␤»

[07:54] <moritz> it's just parsed as '3'  + (~<2 3>)

[07:55] <samcv> jmerelo: ok that's why it seemed like it wasn't doing anything

[07:56] *** gabiruh joined
[07:56] <jmerelo> samcv: I would say it's unary ~ (stringification) plus infix + (which will put in numeric context and add). 

[08:00] *** gabiruh left
[08:03] <jmerelo> Updating perl6 in the docs.perl6.org (and other) domains to the latest version. Last time it was done was in March or April. I needed tbrowder's patches to Pod to go online

[08:04] <jmerelo> No outage is expected, but that's like 100% probability that it will happen.

[08:06] <moritz> where by "outage" you mean "build no longer working", not "docs website unavailable", right?

[08:07] <jmerelo> moritz: It's my first time... So I don't really know. 

[08:07] <jmerelo> moritz: I mean, if the build is broken, temporarily everything will be unavailable while I reset it back to the old build.

[08:08] <jmerelo> moritz: anyway, as long as you're around, I'd be grateful if you held my hand a little bit (or a lot) and check that I'm doing the stuff correctly

[08:08] *** Geth joined
[08:08] *** ChanServ sets mode: +v Geth

[08:08] *** synopsebot joined
[08:08] *** ChanServ sets mode: +v synopsebot

[08:09] <moritz> jmerelo: the build happens on hack, and only if it works it's rsync'ed over to www

[08:09] <jmerelo> I guess those bots coming and going are an effect of the build

[08:09] <jmerelo> moritz: OK, it's suceeded, let's go to the modules.

[08:12] *** lizmat left
[08:15] <Geth> ¦ Pod-To-HTML: e881958359 | (JJ Merelo)++ | META6.json

[08:15] <Geth> ¦ Pod-To-HTML: Bumps up version

[08:15] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/e881958359

[08:16] <jmerelo> moritz: I just bumped up the version, but it looks like it take some time to update the ecosystem...

[08:18] *** domidumont joined
[08:19] *** darutoko joined
[08:19] *** pmurias joined
[08:20] <Geth> ¦ Pod-To-HTML: 5acb576fe4 | (JJ Merelo)++ | README.md

[08:20] <Geth> ¦ Pod-To-HTML: Reflow and badge added

[08:20] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/5acb576fe4

[08:21] <moritz> jmerelo: correct

[08:22] <jmerelo> moritz: Is there some way to speed it up?

[08:25] *** domidumont left
[08:25] *** domidumont joined
[08:28] <jmerelo> moritz: this is it, right? https://github.com/ugexe/Perl6-ecosystems Updates every 1-2 hours.

[08:47] <Geth> ¦ doc: 849f90cf17 | (JJ Merelo)++ | writing-docs/STYLEGUIDE.md

[08:47] <Geth> ¦ doc: Adds entry to style guide closes #2114

[08:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/849f90cf17

[08:51] <Geth> ¦ doc: 695771dfa5 | (JJ Merelo)++ | writing-docs/STYLEGUIDE.md

[08:51] <Geth> ¦ doc: Adds an explanatory paragraph and closes #2115, which is the correct one

[08:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/695771dfa5

[08:55] *** molaf joined
[08:55] *** molaf left
[08:55] *** molaf joined
[08:56] *** gabiruh joined
[09:00] *** gabiruh left
[09:06] *** n1ge joined
[09:11] *** rindolf left
[09:28] *** gabiruh joined
[09:43] *** atroxaper joined
[09:44] <atroxaper> Hi, #perl6 o/

[09:45] <atroxaper> Does #commaide exist?

[09:46] *** rindolf joined
[09:50] *** pecastro joined
[09:52] <jmerelo> atroxaper: yep, it does. It's now in limited beta, but you can purchase a license

[09:52] <atroxaper> jnthn: timotimo: I have a issue with a debugger. Timeout while a connection to debug port. I decompiled plugin's code and see that there is connection to "127.0.0.1" hostname. The issue is that I can "telnet localhost 9999" but i cannot "telnet 127.0.0.1 9999" (Connection refused) on my Mac. I can't googling how to resolve that behavior. I want you to add a property for setting the hostname for connection :)  

[09:53] <atroxaper> jmerelo: I meant a cannel #commaide for related questions ^^

[10:02] *** rindolf left
[10:03] *** rindolf joined
[10:06] <jmerelo> atroxaper: I really don't know, but it's the first time I've heard that, so probably not.

[10:14] *** aborazmeh joined
[10:14] *** aborazmeh left
[10:14] *** aborazmeh joined
[10:17] <jmerelo> atroxaper: you can probably use this one. 

[10:17] *** rindolf left
[10:22] *** domidumont left
[10:23] *** rindolf joined
[10:33] *** markoong joined
[10:39] <atroxaper> .tell jnthn Hi, I made a feedback about debugger in the commaide https://commaide.com/subscriber/feedback/2. Please take a look. Maybe you know a workaround for now :)

[10:39] <yoleaux> atroxaper: I'll pass your message to jnthn.

[10:47] *** jmerelo left
[10:54] *** aborazmeh left
[11:02] *** jferrero joined
[11:09] *** yqt joined
[11:15] *** Xliff left
[11:18] *** espadrine left
[11:29] <stmuk> "slow and steady wins the race"

[11:38] <jnthn> atroxaper: A workaround would be to recompile MoarVM with https://github.com/MoarVM/MoarVM/blob/master/src/debug/debugserver.c#L2534 changed to 127.0.0.1; we should switch the debugger to connect to localhost instead, though, to match what MoarVM is doing.

[11:57] <atroxaper> jnthn: Thank. I'm going to try recompile MoarVM. Will tell about results.

[12:02] *** yqt left
[12:35] <atroxaper> jnthn: It works now! And as commaid.com says "debug support is still at a very early stage"... Will wait next versions ^^ Thanks you again for your and your colleges work. CommaIDE is great!

[12:37] <El_Che> I suspect that once rakudo is relocatable, comma could have its built-in rakudo (like some products do with java)

[12:54] *** gabiruh left
[12:59] *** MasterDuke joined
[13:07] *** gabiruh joined
[13:12] *** espadrine joined
[13:30] *** thundergnat joined
[13:31] <thundergnat> bisectable6: old=2017.12 new=HEAD multi move ('up') { say 'up' }; multi move ('dn') { say 'dn' }; move 'up';

[13:31] <bisectable6> thundergnat, Bisecting by exit code (old=2017.12 new=c441d8d). Old exit code: 0

[13:31] <bisectable6> thundergnat, bisect log: https://gist.github.com/144d98154e6e77debd9f842bddd9b8cc

[13:31] <bisectable6> thundergnat, (2018-04-21) https://github.com/rakudo/rakudo/commit/4b5d36f3a8dff65cb41d4c3747c3f15e6fa36cbb

[13:34] <thundergnat> Sigh. Well that one ^^^ made me question my sanity for a while. (and broke a bunch of existing code) 

[13:36] <timotimo> m: move

[13:36] <camelia> rakudo-moar c441d8d8b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Calling move() will never work with signature of the proto ($, $, *%)␤at <tmp>:1␤------> 3<BOL>7⏏5move␤»

[13:36] <timotimo> ah, because move already exists in the core setting 

[13:37] *** HaraldJoerg joined
[13:47] *** perlpilot joined
[13:51] *** gabiruh left
[13:51] *** MilkmanDan left
[13:51] *** MilkmanDan joined
[13:53] *** gabiruh joined
[13:56] <thundergnat> timotimo: Yeah, I need to add a proto sub in the script.

[13:56] <thundergnat> m: proto sub move (|) {*}; multi move ('up') { say 'up' }; multi move ('dn') { say 'dn' }; move 'up';

[13:56] <camelia> rakudo-moar c441d8d8b: OUTPUT: «up␤»

[13:57] <thundergnat> ^^^ works, but it took me quite a while to figure that out...

[14:00] *** imcsk8 left
[14:01] *** imcsk8 joined
[14:01] *** gabiruh left
[14:03] *** Voldenet joined
[14:03] *** Voldenet left
[14:03] *** Voldenet joined
[14:13] *** caphook joined
[14:16] *** lizmat joined
[14:19] <caphook> $a.++   # will call postfix increment operator; so what's syntax  to call prefix one ? ( no practical goals just for fan )

[14:19] *** gabiruh joined
[14:20] <moritz> ++$a

[14:21] <moritz> I guess the postfix call with . is a left-over from when the operator was a method

[14:23] *** mikejw joined
[14:23] <mikejw> hi

[14:24] <mikejw> what does it mean when I get Type List does not support associative indexing.

[14:24] <Juerd> caphook: Well, $a.&prefix:<++> if you insist on calling it with a dot ;)

[14:24] <moritz> mikejw: it means you tried a hash access like {$foo} or <foo>

[14:24] <Juerd> mikejw: You're using a list with associative indices, such as $foo{$key}

[14:24] <moritz> mikejw: but the thing yout tried it on is a List

[14:25] <Juerd> mikejw: Lists support numeric indexing: $foo[0]

[14:28] <mikejw> ok thanks

[14:28] <caphook> Juerd: oh, thanks a lot )

[14:29] *** espadrine left
[14:31] <mikejw> does grep return an array?

[14:31] <moritz> it returns a Seq

[14:32] <moritz> which is a potentially lazy sequence/iterator-thingy

[14:32] <mikejw> that's maybe the issue

[14:32] <mikejw> can I do thing.grep)

[14:32] <mikejw> 'oops

[14:32] <mikejw> thing.grep('something).length

[14:32] <mikejw> or equivalent?

[14:33] <mikejw> sorry rtfm

[14:33] <mikejw> elems

[14:34] <moritz> m: say <a b c>.grep(/b/).elems

[14:34] <camelia> rakudo-moar c441d8d8b: OUTPUT: «1␤»

[14:34] <moritz> yes, you can :-)

[14:34] <mikejw> that's not helping lol

[14:34] <mikejw> here's the code https://pastebin.com/aTdYn0pQ

[14:35] <Juerd> If that's not helping, I don't know what is

[14:35] <mikejw> now I can see the typo

[14:35] <moritz> web-root => %item<web_root

[14:36] <mikejw> haha

[14:36] <mikejw> thanks

[14:37] *** mikejw left
[14:40] *** caphook left
[14:44] *** domidumont joined
[14:46] <Geth> ¦ ecosystem: atweiden++ created pull request #398: add File::Path::Resolve

[14:46] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/398

[14:47] <Geth> ¦ ecosystem: 9dd04a5f1f | (Andy Weidenbaum)++ | META.list

[14:47] <Geth> ¦ ecosystem: add File::Path::Resolve

[14:47] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/9dd04a5f1f

[14:47] <Geth> ¦ ecosystem: 1f432852d1 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | META.list

[14:47] <Geth> ¦ ecosystem: Merge pull request #398 from atweiden/file-path-resolve

[14:47] <Geth> ¦ ecosystem: 

[14:47] <Geth> ¦ ecosystem: add File::Path::Resolve

[14:47] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/1f432852d1

[15:02] *** perlpilot left
[15:11] *** wamba joined
[15:13] *** kaare_ joined
[15:16] <buggable> New CPAN upload: FindBin-0.1.0.tar.gz by LEMBARK https://cpan.metacpan.org/authors/id/L/LE/LEMBARK/Perl6/FindBin-0.1.0.tar.gz

[15:33] *** MilkmanDan left
[15:34] *** MilkmanDan joined
[15:39] *** Khisanth left
[15:49] *** atroxaper left
[15:51] *** Zoffix joined
[15:51] <Zoffix> caphook: the syntax for prefix one is $a.:<++>

[15:51] <yoleaux> 01:17Z <AlexDaniel> Zoffix: there's “modules-20171223” branch in the doc repo with no commits ahead. I'm not sure what this was for, but it does sound like a tag was wanted instead of branch. Anyway, is it safe to delete or not?

[15:52] *** Khisanth joined
[15:56] <Zoffix> .tell jmerelo if you need to install a module with a change you've just made, you can just give zef the URL to its zip or repo https://github.com/perl6/Pod-To-HTML.git  

[15:56] <yoleaux> Zoffix: I'll pass your message to jmerelo.

[15:57] <Zoffix> .tell tyil comments are approved manually by a human. [Coke] does most of that, so you can talk to him, if any comments are missing.

[15:57] <yoleaux> Zoffix: I'll pass your message to tyil.

[15:57] <tyil> alright

[15:57] <yoleaux> 15:57Z <Zoffix> tyil: comments are approved manually by a human. [Coke] does most of that, so you can talk to him, if any comments are missing.

[15:59] <Zoffix> samcv: you can just dump --target=ast and see what ops are being genned. `perl6 --target=ast -e '+~42'` => - QAST::Op(call &prefix:<+>) ( - QAST::Op(call &prefix:<~>) ( 42 ) ). So in this case it's just two prefix ops

[16:02] <Zoffix> geekosaur: ToddAndMargo, `'abcdef'.match(/../, :g)` is better written (and is slightly more performant) as `'abcdef'.comb: 2`

[16:02] <geekosaur> yes, we hit that one shortly thereafter. I managed to miss the Int candidate for comb

[16:08] <b2gills> MasterDuke: I sent an email message about `.comb(2)` to ToddAndMargo (active on the user mailing list)

[16:08] <MasterDuke> b2gills: cool, thanks

[16:09] <b2gills> I also mentioned that it would be a good idea to stay on irc for a while after getting an answer, in case there is a better one

[16:10] <AlexDaniel> hah, someone found a way to print fibonacci numbers in 17 characters

[16:11] <AlexDaniel> ( https://code-golf.io/scores/fibonacci )

[16:14] <b2gills> While I do a lot of code golfing, one of my goals in doing so is to show off Perl 6 and to explain how the code works. There is no way to do either on that site, so I have less incentive to post to there than to codegolf.stackexchange.com .

[16:16] <AlexDaniel> b2gills: it's more competitive on code-golf.io, and I together with nwellnhof maintain this: https://github.com/AlexDaniel/6lang-golf-cheatsheet

[16:16] <AlexDaniel> the cheatsheet doesn't show off good sides of perl 6 though, you're right

[16:17] <b2gills> For example: I delay posting golfs until after I have written an explanation.

[16:18] <AlexDaniel> yeah, that's pretty cool

[16:21] *** Zoffix left
[16:22] *** japanoise joined
[16:58] <Geth> ¦ ecosystem: atweiden++ created pull request #399: add Sustenance

[16:58] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/399

[17:22] *** evalable6 left
[17:23] *** evalable6 joined
[17:26] *** japanoise left
[17:27] <Geth> ¦ ecosystem: 2ade8ba3cb | (Andy Weidenbaum)++ | META.list

[17:27] <Geth> ¦ ecosystem: add Sustenance

[17:27] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/2ade8ba3cb

[17:27] <Geth> ¦ ecosystem: 794a3fa780 | (Andy Weidenbaum)++ (committed using GitHub Web editor) | META.list

[17:27] <Geth> ¦ ecosystem: Merge pull request #399 from atweiden/sustenance

[17:27] <Geth> ¦ ecosystem: 

[17:27] <Geth> ¦ ecosystem: add Sustenance

[17:27] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/794a3fa780

[17:33] *** perlpilot joined
[17:38] *** kurahaupo left
[18:10] *** domidumont left
[18:16] <buggable> New CPAN upload: Pod-To-Pager-0.1.0.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/Pod-To-Pager-0.1.0.tar.gz

[18:17] *** raschipi joined
[18:18] *** japanoise joined
[18:19] <perlpilot> Is there a way to easily search Perl 6 modules on metacpan.org yet?

[18:19] <raschipi> perlpilot: We use modules.perl6.org instead

[18:20] <raschipi> MetaCPAN is Perl5 only.

[18:21] <raschipi> Any feature you're missing in modules.p6.o ?

[18:22] <perlpilot> except that we also upload our Perl 6 modules to PAUSE and they are offered by metacpan.org if they's in the Perl6 dir.  I was just wondering if metacpan.org has grown or will grow the ability to search Perl 6 modules

[18:22] <perlpilot> s/they's/they're/

[18:22] <perlpilot> that was a weird typo

[18:23] <timotimo> modules.perl6.org also gives you perl6 modules from cpan, but as i understand it, metacpan won't offer perl6 modules at all

[18:24] <raschipi> As far as I know, they won't. PAUSE receive both Perls modules and they are made available in CPAN. But the search interface for them is different.

[18:25] <perlpilot> seems like a weird dichotomy to me.

[18:26] <perlpilot> but ... I'm not volunteering to do the work so ... oh well.  :)

[18:27] <raschipi> Most people that use CPAN are not interested in Perl 6 modules, after all. And the work is actually convincing the metacpan developers that they should offer Perl 6 modules, they think it would just be confusing.

[18:28] <timotimo> their data model might have to change to accomodate multiple modules with the same name

[18:28] <raschipi> That's also true, and for very little gain in their view.

[18:31] <raschipi> I wonder if it's time to remove the github listing of modules that are available from both Github and CPAN from modules.perl6.org...

[18:32] <raschipi> Installing from github always trips noobs because they need to install git. Is there a motive to keep the github entries if they are available from CPAN?

[18:33] <moritz> no, they can be removed

[18:34] <raschipi> Because the CPAN entries also include the Github link for people that wish to clone with git.

[18:35] <raschipi> For example, the zef CPAN link doesn't show the Travis and AppVeyor status...

[18:35] <raschipi> Can that be set up or are those just for GitHub entries?

[18:36] <timotimo> there's code to try to find that even for cpan modules, isn't there?

[18:36] <raschipi> None of the CPAN entries have them set up...

[18:37] <raschipi> Even when they have been set up for the corresponding GitHub entry.

[18:38] <timotimo> OK, seems like it really doesn't look for the build status

[18:38] <timotimo> though of course the cpan version you get isn't necessarily the one that is being tested

[18:38] <timotimo> i.e. you get a "release" commit delivered from cpan, but what's visible on github at that moment is whatever's the bleeding edge commit

[18:42] *** espadrine joined
[18:43] *** jmerelo joined
[18:44] *** zachk joined
[18:44] *** zachk left
[18:44] *** zachk joined
[18:45] <raschipi> On the other hand, is someone still working on making cpantesters work with Perl 6 modules?

[18:46] <jmerelo> raschipi: you sure about closing #2117?

[18:46] <yoleaux> 15:56Z <Zoffix> jmerelo: if you need to install a module with a change you've just made, you can just give zef the URL to its zip or repo https://github.com/perl6/Pod-To-HTML.git

[18:46] <jmerelo> .tell zoffix thanks :-)

[18:46] <yoleaux> jmerelo: I'll pass your message to zoffix.

[18:46] *** lizmat left
[18:48] <jmerelo> raschipi: not even adding a trap entry?

[18:53] <pmurias> raschipi: there was a branch from one of the metacpan developer to offer Perl 6 modules

[18:54] <pmurias> raschipi: re confusion, wouldn't they be offered on a different site?

[18:55] <raschipi> jmerelo: Yes, it was closed with WONTFIX last time too. It even used to raise warnings at one point and it was reverted.

[18:55] <raschipi> It was in the TRAPS section and was taken out, it's just normal syntax, raises meaninful erros and it just doesn't trip new people.

[18:56] <AlexDaniel> I don't remember that. Link?

[18:57] <raschipi> Only people that wish Perl 6 was a "pure" language somehow complain about it. They wish Perl 6 wasn't Perl, that's all there is to it.

[18:57] <jmerelo> raschipi: it was taken out because it was wrong... 

[18:58] <jmerelo> raschipi: Probably using hash is not such a good idea, but using { ... 

[18:59] <AlexDaniel> raschipi: but we can't just close the ticket like that, because we haven't really fixed anything

[18:59] <jmerelo> raschipi: } makes sense, I guess. Or we can just eliminate any requirement. After all, it's a style guide. Let everyone decide what to use. 

[19:00] <raschipi> There's nothing to fix.

[19:00] <jmerelo> AlexDaniel, raschipi: that too. 

[19:00] <AlexDaniel> raschipi: ok, calm down :)

[19:00] <AlexDaniel> raschipi: for example, the styleguide says that %() form should be preferred in the docs

[19:00] <jmerelo> raschipi: 

[19:00] <raschipi> I'm calm, sorry if I came as heated.

[19:00] <AlexDaniel> raschipi: now you say that all that isn't an issue, and {} can and should (?) be used for both… and then you close the ticket

[19:01] <AlexDaniel> but we haven't converged anywhere

[19:01] <jmerelo> raschipi: no prob :-) But AlexDaniel is right, we should have kind of achieved some consensus, and do something, before closing it.

[19:01] <jmerelo> raschipi: so do you mind if we open it up again?

[19:02] <AlexDaniel> I already did

[19:02] <raschipi> What about opening another bug saying that it should be documented as a trap?

[19:03] <AlexDaniel> there's D#2113 for that, I think

[19:03] <synopsebot> D#2113 [open]: https://github.com/perl6/doc/issues/2113 [bug][docs] Document behavior  of %(), @(), $()

[19:03] <AlexDaniel> but documenting it as a trap is one thing, and another thing is which form do we prefer in the docs

[19:03] <jmerelo> raschipi: I don't see the trap. This is mostly about guidelines for the docs. Should we prescribe {} or %() or depends? Or nothing?

[19:03] <AlexDaniel> because right now we recommend %(), I'm OK with that, but maybe it's not entirely right. I don't know

[19:03] <jmerelo> To tell you the truth, I'm mostly for prescribing nothing right now. 

[19:04] <raschipi> Right, what I oppose is using Hash.new(). That will never be idiomatic...

[19:04] <jmerelo> I mean, we can document all possible ways of initializing a Hash wherever we do...

[19:04] <jmerelo> raschipi: I think that's pretty much settled.

[19:04] <AlexDaniel> raschipi: yeah, I agree… have never seen that really

[19:05] *** mikejw joined
[19:05] <mikejw> hi 

[19:05] <jmerelo> So let's say we don't prescribe anything in the docs. 

[19:05] <jmerelo> mikejw: hi

[19:05] <raschipi> So it makes sense to close the bug. Another bug can be opened when we actually know what to do.

[19:05] <raschipi> Yes, just don't prescribe anything. There's no bug to solve in my view.

[19:05] <mikejw> is there any reason why I wouldn't be able to call for $array.kv -> $index, $item { ... on an array that looks like: "[Misc::Gordon::Stacks::Addition.new]"

[19:05] <jmerelo> raschipi: not before agreeing (or roughly agreeing) on something. 

[19:06] <AlexDaniel> raschipi: rejecting is the last thing to do, really. The entry in the style guide is still there, *if* we decide not to use any form consistently, then we should *at least* remove that from the styleguide

[19:06] <jmerelo> mikejw: maybe $array is not Associative. it does not have the sigil (or the name)

[19:06] <raschipi> We agree the bug shouldn't be solved, Hash.new() is just not gonna happen...

[19:07] <jmerelo> mikejw: or positional, which should do something too.

[19:07] <raschipi> It's not clear even something should change, nothing to put in the traps section (because it's not a trap) either.

[19:07] <AlexDaniel> raschipi: IMO most tickets can't be just rejected and need some doing to get them closed (yes, not necessarily what was asked in the ticket, but something needs to be done)

[19:07] <jmerelo> raschipi: OK, not that... But the name of the issue has changed: agreeing on hash construction  on the docs.

[19:08] <raschipi> Oh, didn't see that.

[19:08] <raschipi> So yes, it should be opened again, sorry.

[19:08] <jmerelo> raschipi, AlexDaniel: I also agree with that. An issue request a change, and it should be closed from a commit. 

[19:08] <mikejw> jmerelo: sorry, I mean't @array.kv...

[19:08] <jmerelo> raschipi: no need to be sorry. :-)

[19:08] <mikejw> :)

[19:09] <jmerelo> mikejw: in that case, something sensible should show up. But without seeing the rest of the code, it's difficult to see what goes on. Or the error.

[19:09] <raschipi> Well, they could be requesting a change we don't agree with, so making the change would not be good...

[19:09] <AlexDaniel> m: say %(Empty)

[19:09] <camelia> rakudo-moar c441d8d8b: OUTPUT: «{}␤»

[19:09] <AlexDaniel> I mean…

[19:09] <AlexDaniel> maybe that sounds crazy, but…

[19:10] <AlexDaniel> is that so freaking descriptive? :D

[19:10] <mikejw> jmerelo: there's no error, it seems. just the for loop not doing anything

[19:10] <mikejw> as if it was empty

[19:11] <mikejw> it's probably another typo again

[19:12] <raschipi> The only problem I see right now is the %(), @() and $() misfeature. Perhaps {} should build an empty block in 6.d instead, when the other one is solved.

[19:12] <AlexDaniel> mikejw: that's interesting, but it does sound like there's something else going on. Any chance you can upload the related piece of code sowhere? (e.g. http://gist.github.com/ ?)

[19:13] <raschipi> %() will build an empty hash instead. The kludges will be solved, but {...} sometimes building a hash and sometimes a block isn't the problem.

[19:13] <AlexDaniel> raschipi: that will take quite some time unfortunately :( in v6.d we can only deprecate, the removal will need to happen after that… so that's *at least* v6.e

[19:14] <AlexDaniel> and same with %() if we want to do the change correctly…

[19:14] <raschipi> Right, if people don't ask for anything they get 6.d when that's released, so they should get a warning.

[19:15] <mikejw> https://gist.github.com/mikejw/1d1f968301792dd1e1f4bfe5b2e3e618

[19:15] <AlexDaniel> m: say %(;)

[19:15] <camelia> rakudo-moar c441d8d8b: OUTPUT: «{}␤»

[19:15] <AlexDaniel> oh look, an empty hash…

[19:16] <mikejw> there's two chunks. where the array is being defined and then used (unsuccessfully)

[19:18] *** kaare_ left
[19:19] <mikejw> the add-additions method just does "@!additions = @additions"

[19:19] <mikejw> is that helpful? 

[19:19] <mikejw> :)

[19:19] <raschipi> But I don't agree every issue should lead to a change, because people will regularly open issues complaining our type system doesn't conform to some model a computer scientist has in mind or complaining that we offer mutable objects, etc.

[19:20] <raschipi> raph reacted to #2117 with both a heart and a thumbs down...

[19:20] <raschipi> raiph*

[19:23] *** darutoko left
[19:24] <mikejw> AlexDaniel: any ideas?

[19:25] <moritz> mikejw: add-additions sounds like it should call @!additions.append(@additions)

[19:26] <moritz> if you want to replace the ones so far, call it set-additions or replace-additions or so

[19:26] <mikejw> hmm

[19:26] <moritz> (I'm missing most of the context here, so feel free to ignore me if it doesn't make any sense)

[19:27] <mikejw> haha

[19:28] <mikejw> it's cool

[19:28] <mikejw> there's only one set of additions per stack item

[19:28] <mikejw> not great naming but hey

[19:29] <mikejw> does that make sense?

[19:31] <mikejw> I'm sure the problem is something to do with trying to do something mildly complicated with a powerful language without any tests :)

[19:42] <mikejw> I've tidied it up a bit by declaring addition-items at the top and re-initializing to an empty array each time 

[19:48] <mikejw> if I use this syntax instead it still doesn't work "@addition-items[$j - 1] = Addition.new(..."

[19:48] <mikejw> I can dump the array and see the contents but the .kv loop isn't executing

[19:48] <mikejw> maybe I should just use map 

[19:50] *** jmerelo left
[19:56] *** zakharyas joined
[19:58] *** mikejw left
[19:59] *** MasterDuke left
[20:01] <pmurias> any good ways of pretty printing s-expressions?

[20:01] <pmurias> (nqp-truffle dumps one of it's asts in this format)

[20:06] *** zakharyas left
[20:09] <raschipi> pmurias: Lisp is a good one.

[20:12] *** zakharyas joined
[20:14] *** zakharyas left
[20:15] <pmurias> raschipi: you mean pass it to a lisp implementation

[20:15] <pmurias> ?

[20:15] *** gabiruh left
[20:16] <buggable> New CPAN upload: FindBin-0.1.1.tar.gz by LEMBARK http://modules.perl6.org/dist/FindBin:cpan:LEMBARK

[20:18] *** Kaiepi left
[20:18] *** Kaiepi joined
[20:19] *** zakharyas joined
[20:28] *** molaf left
[20:29] *** MasterDuke joined
[20:36] <buggable> New CPAN upload: FindBin-0.1.3.tar.gz by LEMBARK http://modules.perl6.org/dist/FindBin:cpan:LEMBARK

[20:36] <raschipi> No, just emmit Lisp...

[20:37] <raschipi> Lisp is a representation of s-expressions.

[20:42] <pmurias> not sure what Lisp you are referring too

[20:42] <pmurias> I want to nicely format the s-expressions I'm emitting

[20:44] <pmurias> I'm already emitting them in "(stmts (say 123))" form, I just want to make it pretty and readable

[20:46] <raschipi> Right, I don't have any idea about how to do that.

[20:46] <raschipi> ASCII graphs?

[20:47] <pmurias> raschipi: was just hoping to pass it to some lisp format that will add some extra whitespace

[20:47] <raschipi> TikZ?

[20:50] <raschipi> Google saerch suggests READ and PPRINT from Common Lisp...

[21:00] *** gabiruh joined
[21:34] <raschipi> .

[21:38] *** wamba left
[21:48] *** rindolf left
[21:52] *** epony joined
[21:56] *** zakharyas left
[21:57] *** ufobat_ left
[22:00] *** labster joined
[22:02] *** MasterDuke left
[22:08] *** pmurias left
[22:10] *** Kaiepi left
[22:11] *** Kaiepi joined
[22:14] * tyil clickbaits https://gitlab.com/tyil/perl6-pod-to-pager

[22:15] <tyil> my very extensive "fix" to hide declarator blocks from generated pod output

[22:15] *** Khisanth left
[22:17] *** Kaiepi left
[22:17] *** Kaiepi joined
[22:17] <AlexDaniel> weekly: https://gitlab.com/tyil/perl6-pod-to-pager

[22:17] <notable6> AlexDaniel, Noted!

[22:18] *** Kaiepi left
[22:19] *** Kaiepi joined
[22:29] *** AlexDaniel` joined
[22:31] *** Khisanth joined
[22:32] *** AlexDaniel`` joined
[22:38] <AlexDaniel> squashable6: next

[22:38] <squashable6> AlexDaniel, Next SQUASHathon in 12 days and ≈11 hours (2018-07-07 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[22:48] *** MasterDuke joined
[22:58] *** HaraldJoerg left
[23:29] *** Xliff joined
[23:30] <Xliff> m: ("field" ~~ /\w+ ** 1..3 % '.'/).gist.say

[23:30] <camelia> rakudo-moar c441d8d8b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Quantifier quantifies nothing␤at <tmp>:1␤------> 3("field" ~~ /\w+ ** 1..37⏏5 % '.'/).gist.say␤»

[23:30] <Xliff> m: ("field" ~~ /\w+ ** 1..3 %% '.'/).gist.say

[23:30] <camelia> rakudo-moar c441d8d8b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Quantifier quantifies nothing␤at <tmp>:1␤------> 3("field" ~~ /\w+ ** 1..37⏏5 %% '.'/).gist.say␤»

[23:31] <Xliff> m: ("field" ~~ /(\w+ ** 1..3) % '.'/).gist.say

[23:31] <camelia> rakudo-moar c441d8d8b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Quantifier quantifies nothing␤at <tmp>:1␤------> 3("field" ~~ /(\w+ ** 1..37⏏5) % '.'/).gist.say␤»

[23:31] <Xliff> m: ("field" ~~ /$<i>=[\w+] ** 1..3) % '.'/).gist.say

[23:31] <camelia> rakudo-moar c441d8d8b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse regex; couldn't find final '/'␤at <tmp>:1␤------> 3("field" ~~ /$<i>=[\w+] ** 1..37⏏5) % '.'/).gist.say␤    expecting any of:␤        infix stopper␤»

[23:31] <Xliff> m: ("field" ~~ /$<i>=[\w+] ** 1..3 % '.'/).gist.say

[23:31] <camelia> rakudo-moar c441d8d8b: OUTPUT: «｢field｣␤ i => ｢field｣␤»

[23:32] <Xliff> m: ("table.field" ~~ /$<i>=[\w+] ** 1..3 % '.'/).gist.say

[23:32] <camelia> rakudo-moar c441d8d8b: OUTPUT: «｢table.field｣␤ i => ｢table.field｣␤»

[23:32] <Xliff> m: my token word { \w+ }; ("table.field" ~~ /<word> ** 1..3 % '.'/).gist.say

[23:32] <camelia> rakudo-moar c441d8d8b: OUTPUT: «｢table.field｣␤ word => ｢table｣␤ word => ｢field｣␤»

[23:32] <Xliff> m: my token word { \w+ }; ("field" ~~ /<word> ** 1..3 % '.'/).gist.say

[23:32] <camelia> rakudo-moar c441d8d8b: OUTPUT: «｢field｣␤ word => ｢field｣␤»

[23:32] <Xliff> m: my token word { \w+ }; (".field" ~~ /<word> ** 1..3 % '.'/).gist.say

[23:32] <camelia> rakudo-moar c441d8d8b: OUTPUT: «｢field｣␤ word => ｢field｣␤»

[23:33] <Xliff> m: my token word { \w+ }; ("schema.table.field" ~~ /<word> ** 1..3 % '.'/).gist.say

[23:33] <camelia> rakudo-moar c441d8d8b: OUTPUT: «｢schema.table.field｣␤ word => ｢schema｣␤ word => ｢table｣␤ word => ｢field｣␤»

[23:40] *** MasterDuke left
[23:48] *** thowe joined
[23:48] *** MasterDuke joined
[23:50] *** Xliff left
[23:54] <thowe> trying to use rakudobrew on OpenBSD 6.3

[23:55] <thowe> SC not yes resolved; lookup failed at src/vm/moar/ModuleLoader.nqp:61

[23:55] <thowe> not "yet" resolved, sorry

[23:56] <MasterDuke> thowe: there are some known problems/workarounds needed on openbsd

[23:57] <thowe> where might I find them?

[23:58] *** n1ge left
[23:58] <jnthn> thowe: See this issue: https://github.com/MoarVM/MoarVM/issues/878

