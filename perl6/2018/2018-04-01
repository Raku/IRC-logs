[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 10 ballots submitted by 7 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 23! Congratulations to raschipi! You win a roll of duck tape!

[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 0 ballots submitted by 0 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a can of WD40!

[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 0 ballots submitted by 0 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a roll of duck tape!

[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 0 ballots submitted by 0 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a roll of duck tape!

[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 0 ballots submitted by 0 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a can of WD40!

[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 0 ballots submitted by 0 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a can of WD40!

[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 0 ballots submitted by 0 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a roll of duck tape!

[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 0 ballots submitted by 0 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a roll of duck tape!

[00:00] *** buggable left
[00:00] *** Zoffix joined
[00:01] <Zoffix> Sorry.. Bot went insane :|

[00:03] <TEttinger> looks like you both won

[00:03] *** buggable joined
[00:03] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a roll of duck tape!

[00:03] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 0 ballots submitted by 0 users! DRUM ROLL PLEASE!...

[00:03] *** ChanServ sets mode: +v buggable

[00:03] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a can of WD40!

[00:03] *** buggable left
[00:05] *** buggable joined
[00:05] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a roll of duck tape!

[00:05] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 0 ballots submitted by 0 users! DRUM ROLL PLEASE!...

[00:05] *** ChanServ sets mode: +v buggable

[00:06] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a roll of duck tape!

[00:06] *** buggable left
[00:09] *** [Sno] left
[00:17] *** buggable joined
[00:17] *** ChanServ sets mode: +v buggable

[00:18] <Zoffix> buggable: don't worry we can control that with medications

[00:18] <Zoffix> ZofBot: all hail Zoffix the robot shrink \o/

[00:18] <ZofBot> Zoffix, The former leads to some failing tests in S32-io/seek

[00:18] *** Zoffix left
[00:19] <timotimo> m: say " \c[COMBINING ACUTE]"

[00:19] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unrecognized character name [COMBINING ACUTE]␤at <tmp>:1␤------> 3say " \c[COMBINING ACUTE7⏏5]"␤»

[00:19] <timotimo> .u combining

[00:19] <yoleaux> U+0300 COMBINING GRAVE ACCENT [Mn] (◌̀)

[00:19] <yoleaux> U+0301 COMBINING ACUTE ACCENT [Mn] (◌́)

[00:19] <yoleaux> U+0302 COMBINING CIRCUMFLEX ACCENT [Mn] (◌̂)

[00:19] <timotimo> m: say " \c[COMBINING ACUTE ACCENT]"

[00:19] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: « ́␤»

[00:20] *** |oLa| joined
[00:20] <timotimo> m: use nqp; my $s = " \c[COMBINING ACUTE ACCENT]"; say nqp::ordat($s, 0); say nqp::ordat($s, 1)

[00:20] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «32␤-1␤»

[00:20] *** |oLa| left
[00:20] <timotimo> oh ffs, JSON::Fast would allow combining characters in between the jsony bits if they are on spaces

[00:26] *** dct left
[00:31] <AlexDaniel> heh, 17999 unread messages in gmail :)

[00:46] *** Kaypie left
[01:06] *** comborico1611 left
[01:23] *** FROGGS_ joined
[01:27] *** FROGGS left
[01:35] *** pierre left
[01:35] *** pierre joined
[01:42] *** Kaiepi joined
[01:46] *** ilbot3 left
[01:57] *** ilbot3 joined
[01:57] *** ChanServ sets mode: +v ilbot3

[01:57] <buggable> New CPAN upload: Font-FreeType-0.0.7.tar.gz by WARRINGD https://cpan.metacpan.org/authors/id/W/WA/WARRINGD/Perl6/Font-FreeType-0.0.7.tar.gz

[02:00] *** cognominal joined
[02:05] *** cognominal left
[02:08] *** pierre left
[02:17] <buggable> New CPAN upload: Algorithm-AhoCorasick-0.0.9.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Algorithm-AhoCorasick-0.0.9.tar.gz

[02:17] <buggable> New CPAN upload: Algorithm-NaiveBayes-0.0.1.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Algorithm-NaiveBayes-0.0.1.tar.gz

[02:18] *** cognominal joined
[02:22] *** MasterDuke joined
[02:37] *** athenot joined
[02:39] *** pierre joined
[02:42] *** athenot left
[02:43] *** pierre left
[02:44] *** athenot joined
[02:56] *** MasterDuke left
[03:05] *** athenot left
[03:14] *** sno joined
[03:15] *** pierre joined
[03:19] *** pierre left
[03:19] *** sno left
[03:24] *** sno joined
[03:24] *** [particle] joined
[03:25] *** [particle]1 left
[03:29] *** sno left
[03:53] *** pierre joined
[03:57] *** pierre left
[04:07] <buggable> New CPAN upload: Algorithm-NaiveBayes-0.0.2.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Algorithm-NaiveBayes-0.0.2.tar.gz

[04:07] <buggable> New CPAN upload: Algorithm-NaiveBayes-0.0.3.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Algorithm-NaiveBayes-0.0.3.tar.gz

[04:17] <buggable> New CPAN upload: Algorithm-AhoCorasick-0.0.10.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Algorithm-AhoCorasick-0.0.10.tar.gz

[04:20] <Geth_> ¦ ecosystem: d876a267fc | (Itsuki Toyota)++ (committed using GitHub Web editor) | META.list

[04:20] <Geth_> ¦ ecosystem: p6-Algorithm-NaiveBayes was moved to CPAN

[04:20] <Geth_> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/d876a267fc

[04:46] *** sno joined
[04:48] *** skids joined
[04:54] *** sno left
[05:00] *** sno joined
[05:06] *** sno left
[05:21] *** Util joined
[05:47] *** pierre joined
[05:51] *** pierre left
[05:55] <titsuki_> m: my subset A of Mu; sub func(A @a){ say @a; }; my @b = 1,2,3; say @b ~~ Mu; func(@b);

[05:55] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «True␤Type check failed in binding to parameter '@a'; expected A but got Array ($[1, 2, 3])␤  in sub func at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[05:56] <titsuki_> Is this a bug? I think Array is Mu.

[05:58] <titsuki_> OK, I understand. it requires Positional[A]

[05:59] <titsuki_> m: sub func(Mu @a){ say @a; }; my @b = 1,2,3; say @b ~~ Mu; func(@b);

[05:59] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «True␤Type check failed in binding to parameter '@a'; expected Positional[Mu] but got Array ($[1, 2, 3])␤  in sub func at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[06:22] *** xtreak joined
[06:35] *** jmerelo joined
[06:36] *** nightfrog left
[06:36] *** nightfrog joined
[06:39] *** sno joined
[06:40] *** wamba joined
[06:44] *** sno left
[06:51] *** rindolf joined
[06:53] *** darutoko joined
[06:55] <jmerelo> Hi o/

[07:00] <moritz> \o jmerelo 

[07:00] *** daemon is now known as Alchemy

[07:02] <jmerelo> But I want the Singularity to be GPL! https://github.com/lizmat/Singularity/ Richard Stallman would never upload his brain to an Apache-licensed application!!!

[07:02] *** Alchemy is now known as daemon

[07:04] *** AlexDaniel left
[07:05] *** noganex left
[07:05] <jmerelo> Anyway. Anyone's up for an April's fools? I was thinking about changing the first page of the Perl 6 docs to Perl 666, and turning Camelia into an Evil Camelia with tiny horns

[07:05] <jmerelo> Or something like that. 

[07:06] *** skids left
[07:10] <Geth_> ¦ ecosystem: 1efd907a19 | (Itsuki Toyota)++ (committed using GitHub Web editor) | META.list

[07:10] <Geth_> ¦ ecosystem: p6-Chart-Gnuplot was moved to CPAN

[07:10] <Geth_> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/1efd907a19

[07:14] <moritz> jmerelo: sounds good :-)

[07:14] *** araraloren joined
[07:15] <jmerelo> moritz: Anyone's good with Inkscape? I can give it a try, but I am no good at that...

[07:17] <buggable> New CPAN upload: Chart-Gnuplot-0.0.3.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Chart-Gnuplot-0.0.3.tar.gz

[07:18] <moritz> my artistic abilities are... limited

[07:19] <Geth_> ¦ doc: 2577dc24d8 | (JJ Merelo)++ | htmlify.p6

[07:19] <Geth_> ¦ doc: Adds a little introduction to the 'language' page

[07:19] <Geth_> ¦ doc: 

[07:19] <Geth_> ¦ doc: Which is the most visited in the site. Not the best, but brief and to

[07:19] <Geth_> ¦ doc: the point. Closes #1884

[07:19] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/2577dc24d8

[07:20] <jmerelo> moritz: can you try that while I look for the way of changing headers and somesuch? Or the other way round?

[07:20] <moritz> https://twitter.com/zoffix/status/980343128556294145 lol

[07:21] <moritz> jmerelo: I'll give it a shot

[07:22] *** sena_kun joined
[07:23] <jmerelo> moritz: :-)

[07:28] <moritz> jmerelo: http://hack.p6c.org/~moritz/Camelia-horns.svg

[07:29] <jmerelo> moritz: more viking than evil, but let's not overengineer a prank :-)

[07:29] <jmerelo> What do you think about this as "evil" font? https://fonts.google.com/specimen/Eagle+Lake

[07:32] <moritz> +1

[07:35] <moritz> jmerelo: I've created a branch 2018-04-01 in the perl6.org repo, and updated the cron job to poll from that branch

[07:35] <moritz> jmerelo: feel free to go wild there :-)

[07:40] *** pierre joined
[07:41] <jmerelo> moritz: I am working on docs.perl6.org, rather. I've tagged the previous situation, and will do everything in a single commit

[07:41] <jmerelo> Can do that afterwards...

[07:42] *** sauvin left
[07:43] *** travis-ci joined
[07:43] <travis-ci> Doc build passed. JJ Merelo 'Adds a little introduction to the 'language' page

[07:43] <travis-ci> https://travis-ci.org/perl6/doc/builds/360811345 https://github.com/perl6/doc/compare/v666.pre

[07:43] *** travis-ci left
[07:44] *** mniip left
[07:45] *** pierre left
[07:46] <jmerelo> moritz: https://drive.google.com/file/d/1dcvi7CLIpPKW0GZl5agg5Z3tneyUi_Je/view?usp=sharing

[07:47] *** sauvin joined
[07:48] <moritz> jmerelo: +1

[07:48] *** sno joined
[07:53] <jmerelo> OK, let's go live with that.

[07:54] <Geth_> ¦ doc: 95000e5d86 | (JJ Merelo)++ | 4 files

[07:54] <Geth_> ¦ doc: Deploying evil Camelia

[07:54] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/95000e5d86

[07:55] *** sno left
[08:00] *** xtreak left
[08:01] <Geth_> ¦ perl6.org/2018-04-01: e0d28d4171 | (JJ Merelo)++ | 2 files

[08:01] <Geth_> ¦ perl6.org/2018-04-01: Evilized perl6.org

[08:01] <Geth_> ¦ perl6.org/2018-04-01: review: https://github.com/perl6/perl6.org/commit/e0d28d4171

[08:02] <jmerelo> moritz: little change made to perl6.org, too :-)

[08:02] <moritz> jmerelo: perl6.org upated

[08:02] <moritz> *updated

[08:04] *** sno joined
[08:05] <jmerelo> What's happened to Camelia?

[08:05] <jmerelo> moritz: should I change it to png?

[08:06] <moritz> jmerelo: yes, browsers don't always seem to like inline svg

[08:06] <moritz> s/inline/<img ...>/

[08:06] <Geth_> ¦ perl6.org/2018-04-01: 6f3e5746fc | (JJ Merelo)++ | 2 files

[08:06] <Geth_> ¦ perl6.org/2018-04-01: Changed to png

[08:06] <Geth_> ¦ perl6.org/2018-04-01: review: https://github.com/perl6/perl6.org/commit/6f3e5746fc

[08:09] <stmuk_> perl 666? and that's a sinister looking font (even worse than Comic Sans)

[08:10] <jmerelo> stmuk_: the sinisterest I could find in little time :-)

[08:12] <stmuk_> also https://github.com/zoffixznet/perl6-666 :)

[08:14] <TEttinger> camelia doesn't show up on perl6.org?

[08:14] <jmerelo> TEttinger: It's coming. In an evil way.

[08:15] <TEttinger> it's also easter, so, second coming

[08:15] <jmerelo> TEttinger: :-)

[08:16] <jmerelo> moritz: that was an ephemeral prank...

[08:16] <TEttinger> yeah, gone now

[08:17] *** Zoffix joined
[08:19] <jmerelo> Oh, no! The evil bug has infected the documentation too! https://docs.perl6.org/

[08:21] <Zoffix> Today's Easter Sunday and you guys are giving Camelia beastly horns? Fairly inappropriate, especially for a language with terminology influenced by Christianity.

[08:21] <jmerelo> Zoffix: they are actually Viking horns.

[08:21] <TEttinger> april fools, it's very appropriate!

[08:22] <jmerelo> Come to think of the Viking thing, I should have changed the name to þerl

[08:22] <TEttinger> is that thorn?

[08:23] <TEttinger> wynn would also work

[08:23] <TEttinger> u: wynn

[08:23] <unicodable6> TEttinger, U+01BF LATIN LETTER WYNN [Ll] (ƿ)

[08:23] <unicodable6> TEttinger, U+01F7 LATIN CAPITAL LETTER WYNN [Lu] (Ƿ)

[08:23] <unicodable6> TEttinger, U+16B9 RUNIC LETTER WUNJO WYNN W [Lo] (ᚹ)

[08:23] <Zoffix> jmerelo: and 666?

[08:23] <TEttinger> ᚹERL6

[08:23] <jmerelo> TEttinger: way cool

[08:24] <jmerelo> Zoffix: it's the third year of Perl 6, so it's like three sixes.

[08:25] <TEttinger> Zoffix: you could change it to Perl 69 and make the whole page NSFW

[08:25] <araraloren> 666 :)

[08:25] <jmerelo> 69 is actually the Piscis sign

[08:25] <Zoffix> jmerelo: but why deface the site with antagonistic symbols?

[08:26] <TEttinger> are you not familiar with april fool's day?

[08:26] <jmerelo> Zoffix: it's an April fools prank. It's a single commit. I can revert it if anyone is going to be offended.

[08:27] <TEttinger> i hope zoffix is pranking

[08:27] <Zoffix> TEttinger: I'm not familiar with using antichrist symbolisms on April Fools Day.

[08:28] <jmerelo> Zoffix: we can link your repo https://github.com/zoffixznet/perl6-666 if you want

[08:29] <TEttinger> Zoffix frantically googles to make sure Google's CADIE AI is just a prank

[08:30] *** Guest524 joined
[08:31] <Guest524> is it possible to use any file extension for importing scripts?

[08:31] <Zoffix> TEttinger: so is there a point where you clarify to me the association?

[08:31] <Zoffix> Guest524: improting to where?

[08:32] <Guest524> sub EXPORT {%('$var'=>'test',)} # abc.pm6

[08:32] <Guest524> use lib '.'; use abc:file('abc.pm6'); say $var;

[08:32] <Guest524> instead of abc.pm6 could it be abd.def?

[08:33] <Zoffix> Guest524: no, it has to be .pm6

[08:34] <Guest524> there's no other way to do it?

[08:35] <Zoffix> Guest524: no simple way, no.

[08:35] <Guest524> what about a complex way?

[08:35] <Zoffix> Guest524: can the importing code change?

[08:36] <Guest524> do you mean by editing?

[08:36] <Zoffix> Guest524: yeah, like does it have to remain as `use blah blah` or can it be something else?

[08:39] <jmerelo> Evil camelia un-deployed

[08:39] <Guest524> Zoffix: app.p6 has a subroutine f() and needs to import app.cfg which wants to call that subroutine f()

[08:39] <jmerelo> Will take a while to move to the page, though.

[08:41] <Zoffix> Guest524: usually it's the other way around tho, you import a routine *from* a module and call it in app.p6.

[08:41] <Zoffix> Guest524: what task are you trying to do?

[08:41] <Zoffix> I mean, as a general thing, not as importing something from somewhere else.

[08:42] <Guest524> use perl in a configuration file

[08:42] <araraloren> I think they don't care the format

[08:44] <Zoffix> Guest524: ok, that's easy enough:   my %conf = EVALFILE 'conf.p6'; where conf.p6 has Perl 6 generate a Hash that's the last line of the file (and thus is used as return value).

[08:45] <araraloren> m: my $x = 10; 'say $x'.EVAL

[08:45] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «10␤»

[08:46] <Zoffix> Guest524: does that solve your entire problem or do you still need to import something?

[08:50] *** pierre_ joined
[08:55] *** rindolf left
[08:58] *** robertle_ joined
[08:59] <Guest524> Zoffix: https://glot.io/snippets/ezpgermp27

[08:59] <Guest524> the website doesn't allow changing file names, but dio.pl6 should be app.cfg and main.pl6 should be app.p6

[09:00] <Zoffix> Guest524: what happens if main.pl6 doesn't have `sub f` defined?

[09:01] <Guest524> err?

[09:02] <Zoffix> Guest524: well, what's the connection between `sub f` and its use in the config file? Why does the config file need to call any function as opposed to just giving a List of elements and main.pl6 doing whatever it needs to do with them, like calling `f` with each element?

[09:03] <Zoffix> jmerelo: thanks.

[09:05] <Guest524> Zoffix: to use perl for confuration?

[09:08] <Geth_> ¦ doc: ceebae4781 | (JJ Merelo)++ | doc/Type/Capture.pod6

[09:08] <Geth_> ¦ doc: Adds indexing terms to capture literals

[09:08] <Geth_> ¦ doc: 

[09:08] <Geth_> ¦ doc: Closes #1443

[09:08] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/ceebae4781

[09:08] <synopsebot> Link: https://doc.perl6.org/type/Capture

[09:09] <Zoffix> Guest524: you can use it without having to call `f` inside the configuration: https://gist.github.com/zoffixznet/e1c26e5ddac0fa2fae796b4ce1065b77

[09:10] <Zoffix> Guest524: inside abc.def I have a list of lists. It's the last statement of the file so it gets returned when I call EVALFILE 'abc.def'; and then I iterate over that list, calling `f` with each inner list.

[09:11] *** rindolf joined
[09:12] *** fatguy joined
[09:14] <Zoffix> Guest524: and the list of lists is just a return data structure in this case; you're free to execute arbitrary Perl 6 code inside that file to, for example, generate that list of lists (or some other datastructure). Basically, the idea is to separate the configuration from what's done with it, and then you don't need to import `f` into anything.

[09:15] *** sena_kun left
[09:15] <fatguy> i got different result using rakudo star 2018.01 overriding method didn't work as v2017.04.3

[09:15] <fatguy> https://pastebin.com/JHqhxhev

[09:16] *** sena_kun joined
[09:16] <Zoffix> c: 2018.01,2017.04.3 https://gist.githubusercontent.com/zoffixznet/aa4c08d3bad22cb59d77412baca76f88/raw/e9cf5ef84e2993fd19ed7a030e9190c661e4bf6b/p6.p6

[09:16] <committable6> Zoffix, Successfully fetched the code from the provided URL.

[09:16] <committable6> Zoffix, https://gist.github.com/cad4c9e4791410c23567327ed839c608

[09:17] <Guest524> Zoffix: what is the pipe in `f |$_ for @confs;`?

[09:19] <Zoffix> Guest524: it causes the argument to be "slipped". $_ contains a list of 3 things. If I just call `f $_` that's a call with single argument (the entire list); but writing as `f |$_` slips that list, and I end up making the call with 3 arguments (each element of the list became an argument on its own)

[09:20] <Zoffix> Unsure where that's documented. https://docs.perl6.org/routine/%7C mentions what happens, but very briefly and without any examples.

[09:21] <Guest524> Zoffix: how do you learn about this stuff?

[09:22] <Zoffix> Guest524: just hanging around here and seeing code, I guess. Some stuff by reading the compiler's code. I started back when there were very limited docs, but I think right now it should be documented somewhere, I'm just unsure where exactly.

[09:23] <Zoffix> fatguy: looks like it's not the overriding but the missing attribute's value, no? There's an empty array printed.

[09:24] <Guest524> Zoffix: thanks that solves my problem :)

[09:24] <Zoffix> c: 2017.04.1,2018.01 class A { has @.a }; class B { has @.b }; dd class C is A is B {}.new :a<a b c> :b<d e fg>

[09:24] <committable6> Zoffix, ¦2017.04.1: «C.new(a => ["a", "b", "c"], b => ["d", "e", "fg"])␤» ¦2018.01: «C.new(a => ["a", "b", "c"], b => [])␤»

[09:24] <Zoffix> Guest524: cool \o/

[09:25] <araraloren> Guest524 https://docs.perl6.org/routine/|#(Operators)_prefix_|

[09:25] <Zoffix> bisect: class A { has @.a }; class B { has @.b }; dd class C is A is B {}.new :a<a b c> :b<d e fg>

[09:25] <bisectable6> Zoffix, Bisecting by output (old=2015.12 new=dc1a3f5) because on both starting points the exit code is 0

[09:25] <bisectable6> Zoffix, bisect log: https://gist.github.com/fb1a783104d034d6a2cb675c5cf4c366

[09:25] <bisectable6> Zoffix, (2017-10-03) https://github.com/rakudo/rakudo/commit/b58bd8fb1e2e0a72f0914938e79201969a4a94c0

[09:26] <fatguy> zoffix: i passed the value at initialization

[09:26] *** kurahaupo joined
[09:26] *** sena_kun left
[09:27] *** sena_kun joined
[09:28] <Zoffix> fatguy: yeah.

[09:28] <Zoffix> fatguy: filed as https://github.com/rakudo/rakudo/issues/1679

[09:29] <fatguy> zoffix: thanks !

[09:30] *** kurahaupo left
[09:34] <Zoffix> fatguy: you could use this as a dirty workaround until the problem is fixed. Basically, manually calling BUILDALL of one of the ancestors so it sets the attribute's value: https://gist.github.com/zoffixznet/6bab930e2d91481908d0966294d9fe35#file-p6-p6-L16-L20

[09:37] <fatguy> zoffix: alright thanks \o/ 

[09:38] <Zoffix> fatguy: oh wait, got a simpler one. Just add any attribute into the grafik-gabungan    like   `has $!dummy-until-rakudo-bug-is-fixed`

[09:39] *** khisanth__ joined
[09:39] <fatguy> zoffix: cool thanks

[09:39] * lizmat clickbaits https://p6weekly.wordpress.com/2018/03/31/2018-14-singularity-released/

[09:40] <jmerelo> lizmat: :-)

[09:42] <moritz> lizmat++

[09:43] *** khisanth_ left
[09:45] *** Ven`` joined
[09:49] *** noganex joined
[09:53] *** ufobat joined
[09:55] *** fatguy left
[09:56] *** sena_kun left
[10:05] *** Zoffix left
[10:13] <Geth_> ¦ doc: maettu++ created pull request #1890: fix broken links

[10:13] <Geth_> ¦ doc: review: https://github.com/perl6/doc/pull/1890

[10:13] *** markong joined
[10:14] <maettu> stupid question: running the doc locally (mojo, localhost:3000) using make run. How can I stop this? ctrl-c is ignored..

[10:18] <Geth_> ¦ doc: 7b1b189f99 | (Matthias Bloch)++ | doc/Type/Iterable.pod6

[10:18] <Geth_> ¦ doc: fix broken links

[10:18] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/7b1b189f99

[10:18] <Geth_> ¦ doc: c91b2de5e0 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Type/Iterable.pod6

[10:18] <Geth_> ¦ doc: Merge pull request #1890 from maettu/hyper_race_fix_links

[10:18] <synopsebot> Link: https://doc.perl6.org/type/Iterable

[10:18] <Geth_> ¦ doc: 

[10:18] <Geth_> ¦ doc: fix broken links

[10:18] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/c91b2de5e0

[10:21] *** Ven`` left
[10:27] *** rindolf left
[10:30] *** rindolf joined
[10:31] <FROGGS_> maettu: if it is a background process than just kill it

[10:32] <rindolf> hi all

[10:32] * rindolf is excited about the perl 6 singularity

[10:35] <maettu> FROGGS_: thx, I did :-)

[10:37] *** travis-ci joined
[10:37] <travis-ci> Doc build failed. Juan Julián Merelo Guervós 'Merge pull request #1890 from maettu/hyper_race_fix_links

[10:37] <travis-ci> https://travis-ci.org/perl6/doc/builds/360838488 https://github.com/perl6/doc/compare/ceebae4781c5...c91b2de5e01b

[10:37] *** travis-ci left
[10:37] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[10:47] *** notbenh joined
[10:55] <jmerelo> maettu: sometimes you have to do control-c several times...

[10:55] <jmerelo> It's a weird travis-ci bug in an unrelated file... I'm trying to reproduce it locally and there seems to be no problem.

[11:07] <El_Che> lizmat: if you'd been really evil, you would have written dat Perl 6 Singularity was meant to absorb all the Perl implementations :)

[11:08] <jmerelo> El_Che: :-)

[11:33] <lizmat> El_Che: I'm already considered really evil by some  :-)

[11:47] <lizmat> Zoffix++   # lol https://twitter.com/zoffix/status/980343128556294145

[11:47] *** evalable6 left
[11:47] *** evalable6 joined
[11:56] *** wamba left
[11:56] *** Kaiepi left
[11:58] *** Kaiepi joined
[11:58] *** hp-ux joined
[11:58] *** kurahaupo joined
[12:07] *** natrys joined
[12:14] <stmuk_> have there been any perl 5 jokes? blockchain jokes seem typical this year?

[12:16] <timotimo> i am pleased to announce the official release of CameliCoin

[12:16] <timotimo> (TPF stock prices increase threefold in the span of an hour)

[12:22] *** wamba joined
[12:22] <stmuk_> https://web.archive.org/web/20010412234353/https://www.python.org/parrot.html

[12:24] *** Kaiepi left
[12:30] *** fatguy joined
[12:35] *** Kaiepi joined
[12:42] <lizmat> see the ADD link in the weekly, there's a bunch of them there

[12:44] <lizmat> I guess the best ones are the ones playing on the preconceptions of others: when they find out they've been had, it's hard to admit that they were had

[12:54] <Guest524> is this possible `say 'abcdef' ~~ s/c/z/`?

[12:55] <Guest524> and is it possible to get the opposite of `say 'abcdefg' ~~ /c.*/`?

[12:55] <lizmat> m: say 'abcdef' ~~ s/c/z/

[12:56] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «Cannot modify an immutable Str (abcdef)␤  in block <unit> at <tmp> line 1␤␤»

[12:56] <lizmat> m: say "abcdef".subst(/c/, "z")

[12:56] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «abzdef␤»

[12:57] <Guest524> is there a way to do it with `s/c/z/` syntax?

[12:57] <lizmat> m: say "abcdef".subst("c", "z")   # faster

[12:57] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «abzdef␤»

[13:01] *** pierre_ left
[13:02] *** leah2 left
[13:03] <timotimo> m: say "abcdef" ~~ S/c/z/

[13:03] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «Potential difficulties:␤    Smartmatch with S/// is not useful. You can use given instead: S/// given $foo␤    at <tmp>:1␤    ------> 3say "abcdef" ~~ 7⏏5S/c/z/␤False␤»

[13:03] <timotimo> m: say S/c/z/ given "abcdef"

[13:03] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «abzdef␤»

[13:06] *** leah2 joined
[13:10] <Guest524> timotimo: where is that in the docs?

[13:14] *** hp-ux left
[13:14] <timotimo> https://docs.perl6.org/language/regexes#Substitution - here maybe?

[13:15] <timotimo> no, that doesn't have S

[13:16] <timotimo> can't really find anything

[13:16] <lizmat> in a case insensitive world, S is hard to find

[13:17] <Guest524> `/S\:/` has samemark & samespace

[13:18] <Guest524> how did you find out about it?

[13:22] *** lizmat left
[13:23] <Guest524> what happened to the rings of saturn?

[13:25] *** marcusramberg left
[13:26] <Guest524> and backticks? they're still used in multiline comments, so why not qqx?

[13:32] *** lizmat joined
[13:32] *** pierre joined
[13:36] *** pierre left
[13:40] *** uz1 joined
[13:40] *** uz1 left
[13:45] <timotimo> how do you mean?

[13:45] <timotimo> Guest524

[13:45] <Guest524> about what?

[13:46] <timotimo> backticks

[13:47] <timotimo> sorry, i'll be afk again

[13:47] <jnthn> timotimo: In Perl 5, `foo` is a shorthand for - at least if I remember its Perl 5 semantics correctly - qqx/foo/

[13:47] <timotimo> ah, ok

[13:47] <timotimo> well, we simply support pretty much every kind of quotes for multiline strings

[13:48] <jnthn> One can write qqx`...` too if feeling nostalgic :-)

[13:48] <Guest524> that's 3 characters too many!

[13:54] *** lizmat left
[13:59] *** lizmat joined
[14:04] <mst> I see it's "stmuk and virtualsue make the perl6 community look like assholes" day again

[14:06] <El_Che> mst: do I dare to open twitter?

[14:07] * lizmat wonders where mst sees that

[14:08] *** fatguy left
[14:08] <El_Che> nope, twitter is perfectly fine (besides the usual crazy angry people)

[14:09] * lizmat shakes her head

[14:10] <El_Che> mst: https://gph.is/1m8dAcQ

[14:10] <Guest524> -Ofun hive mind: turn trolls into committers

[14:12] <Kaiepi> wwhat i i wwas already both

[14:13] <Guest524> what class do you occupy?

[14:14] <Kaiepi> committer on github, shitposter everywhere else

[14:14] <Guest524> http://strangelyconsistent.org/blog/perl-6-is-my-mmorpg

[14:19] <Kaiepi> oh

[14:20] <Kaiepi> not sure yet, either priest or warrior

[14:20] <Kaiepi> i'll find out once i'm more familiar with the codebase

[14:29] <Guest524> I'm a warrior, fleeing from the Cylon tyranny, on the last battlestar, Galactica, leading a ragtag fugitive fleet on a lonely quest: a shining planet known as Earth.

[14:41] <Kaiepi> i'm a refugee from an autocratic commune that collapsed once because soemeone stopped selling sticky notes

[14:42] <El_Che> lizmat: I see you went on reddit :)

[14:42] <Kaiepi> i can't think of a good analogy for what i'm talking about

[14:45] <lizmat> El_Che: sometimes people force you to

[14:46] <El_Che> yeah, I noticed the title magic trick

[14:48] *** Kaiepi left
[14:49] *** khw joined
[14:51] *** Kaiepi joined
[14:53] *** pierre joined
[14:54] <tobs> Only half a question about perl6: I used to get OOM Killed sometime last year while downloading binary files using WWW::get. It only happened with certain files, presumably because get returns decoded-content(?). At some point I installed rakudo 2017.10 which now gives me its own "MoarVM panic: Memory allocation failed"s instead, but when I ran it a few times and used HTTP::UserAgent.get with :bin, it didn't

[14:54] <tobs> terminate but froze my computer. Had to do a hard reset after a minute of no reaction.

[14:54] <tobs> Can anyone tell me how to debug this safely, to find an offending file first of all? Would a ulimit -m be enough?

[14:56] <timotimo> ulimit should definitely help

[14:56] <timotimo> for extra extra safety, maybe try running a full VM

[14:57] <buggable> New CPAN upload: Lingua-Pangram-0.1.0.tar.gz by FISCHER https://cpan.metacpan.org/authors/id/F/FI/FISCHER/Perl6/Lingua-Pangram-0.1.0.tar.gz

[14:58] * tobs slaps forehead

[14:58] *** pierre left
[14:58] <tobs> yes, I'm gonna do that

[15:04] *** araraloren left
[15:16] *** zakharyas joined
[15:16] *** Kaiepi left
[15:16] *** Kaypie joined
[15:18] *** zakharyas left
[15:20] *** zakharyas joined
[15:31] *** zakharyas left
[15:34] *** zakharyas joined
[15:35] *** jcallen_ is now known as jcallen

[15:37] <Guest524> it is so disorientating when someone changes their name

[15:46] <Geth_> ¦ ecosystem: 5a950c23ad | (Itsuki Toyota)++ (committed using GitHub Web editor) | META.list

[15:46] <Geth_> ¦ ecosystem: p6-Algorithm-MinMaxHeap was moved to CPAN

[15:46] <Geth_> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/5a950c23ad

[15:47] <buggable> New CPAN upload: Algorithm-MinMaxHeap-0.13.3.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Algorithm-MinMaxHeap-0.13.3.tar.gz

[15:49] *** shlomif joined
[15:50] *** shlomif left
[15:51] *** rindolf left
[15:51] *** rindolf joined
[15:54] *** natrys left
[15:57] <buggable> New CPAN upload: Algorithm-Evolutionary-Simple-0.0.4.tar.gz by JMERELO https://cpan.metacpan.org/authors/id/J/JM/JMERELO/Perl6/Algorithm-Evolutionary-Simple-0.0.4.tar.gz

[15:58] *** skids joined
[16:00] *** ChoHag left
[16:06] *** natrys joined
[16:06] *** Ven`` joined
[16:06] *** Ven`` left
[16:09] <Geth_> ¦ ecosystem: 70eae0be7b | (Itsuki Toyota)++ (committed using GitHub Web editor) | META.list

[16:09] <Geth_> ¦ ecosystem: p6-Algorithm-Manacher was moved to CPAN

[16:09] <Geth_> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/70eae0be7b

[16:14] <herby_> o/

[16:17] <buggable> New CPAN upload: Algorithm-Manacher-0.0.1.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Algorithm-Manacher-0.0.1.tar.gz

[16:17] *** espadrine left
[16:38] *** leah2 left
[16:40] *** leah2 joined
[16:44] <herby_> got a rookie question

[16:45] <herby_> I have a simple module I'm working on. I want the user to either be able to use it from the command line and pass in arguements, or use it from within their own script

[16:45] <herby_> I know I should use MAIN for command line use. is MAIN ignored if the script isn't used from the command line?

[16:51] *** kaare_ left
[16:53] <moritz> it's supposed to be ignored if it's not in the top-level script

[16:53] <moritz> no idea how well that works

[16:55] <herby_> I think I'm missing a simple design step.  If I have a module that has a "test" function, and a "MAIN" function, and I call the "test" function, it will return both functions automatically

[16:55] <herby_> rather, if I call the "test" function from within the module, it runs the "test" function and MAIN function

[16:55] <herby_> probably not explaining that clearly

[16:57] <jmerelo> bench: compare HEAD (Bool.roll xx 2048).race.rotor(4).grep( so (*.all == True|False) ).elems ||| (Bool.roll xx 2048).race( degree => 8).rotor(4).grep( so (*.all == True|False) ).elems

[16:57] <benchable6> jmerelo, starting to benchmark the 1 given commit

[16:58] <benchable6> jmerelo, https://gist.github.com/ffff45d4940cf7f5b026004f36b87c69

[16:58] <masak> herby_: not sure it directly fixes your problem, but I usually have a `multi MAIN("test") { ... }`, so that I can run tests easily from the command line

[16:58] <jmerelo> bench: compare HEAD (Bool.roll xx 4096).race.rotor(4).grep( so (*.all == True|False) ).elems ||| (Bool.roll xx 4096).race( degree => 8).rotor(4).grep( so (*.all == True|False) ).elems

[16:58] <benchable6> jmerelo, starting to benchmark the 1 given commit

[16:59] <benchable6> jmerelo, https://gist.github.com/517f36d0935fa3f99f1b22d9c629b99d

[16:59] <jmerelo> bench: compare HEAD (Bool.roll xx 4096).race.rotor(4).grep( so (*.all == True|False) ).elems ||| (Bool.roll xx 4096).race( degree => 8, batch => 32).rotor(4).grep( so (*.all == True|False) ).elems

[16:59] <benchable6> jmerelo, starting to benchmark the 1 given commit

[16:59] <benchable6> jmerelo, https://gist.github.com/7561880884853308c5d7dba3f43c2146

[16:59] *** Guest524 left
[16:59] <herby_> masak: thanks. I probably just need to find a good CLI example for perl 6 and see how they did it

[17:00] <jmerelo> bench: compare HEAD (Bool.roll xx 4096).race.rotor(4).grep( so (*.all == True|False) ).elems ||| (Bool.roll xx 4096).race( degree => 8, batch => 128).rotor(4).grep( so (*.all == True|False) ).elems

[17:00] <benchable6> jmerelo, starting to benchmark the 1 given commit

[17:00] <benchable6> jmerelo, https://gist.github.com/ebbe75c85924df2d5097e960b726ebf9

[17:02] <timotimo> herby_: i think we generally have a launcher in bin/ and a module that exports a MAIN sub to it

[17:03] <timotimo> https://github.com/ugexe/zef/blob/master/bin/zef - check this example

[17:03] <timotimo> https://github.com/ugexe/zef/blob/master/lib/Zef/CLI.pm6 - this is the module in question

[17:03] <timotimo> it's a package that has a bunch of multi MAIN ... is export { }

[17:05] <herby_> timotimo: thanks, i'll give that a read

[17:15] *** domidumont joined
[17:15] *** ufobat left
[17:22] *** domidumont left
[17:23] *** domidumont joined
[17:43] *** darutoko left
[17:47] *** pmurias joined
[17:55] *** kaare_ joined
[17:58] *** ufobat joined
[18:03] *** benjikun joined
[18:04] <benjikun> What's the best way you guys can figure out how to generate a "look and say" sequence (1, 11, 21, 1211)

[18:05] <benjikun> can you do it with a one-liner?

[18:05] <benjikun> maybe with the ... operator thing

[18:12] *** cfa joined
[18:12] <cfa> benjikun: https://rosettacode.org/wiki/Look-and-say_sequence#Perl_6

[18:12] <masak> oh, that's pretty

[18:14] <masak> I started in on a solution, but mine was veering off in the wrong direction, trying to do everything in a single regex

[18:14] <benjikun> cfa: that's a good one

[18:15] <cfa> to be clear: not my solution

[18:15] <cfa> i'm just the link butler

[18:15] <benjikun> yeah I understand

[18:15] <benjikun> ty anyhow

[18:15] <cfa> np

[18:17] *** domidumont left
[18:25] <benjikun> How would I output that to a file

[18:25] *** ufobat left
[18:25] <benjikun> I can't do $fh.say for ...

[18:25] <benjikun> or spurt

[18:26] <jnthn> $fh.say($_) for ...

[18:27] <benjikun> oh

[18:27] <benjikun> ty

[18:49] <herby_> If I want to validate if a supplied IPv4 address is valid or not, does p6 have anything built in?

[18:49] <herby_> a quick google shows that python can utilize the "socket" library, didn't know if p6 had something similar

[18:52] <El_Che> herby_: https://docs.perl6.org/type/IO::Socket::INET (dunno if it soes what you want)

[18:54] <herby_> El_Che: thanks. I was poking around there but I couldn't see anything that explicity talks about it, and my socket/networking knowledge is pretty much zero

[18:54] <herby_> I'll do some more reading :)

[18:55] <El_Che> herby_: it sould be pretty easy to write a small ip validation function

[18:55] <herby_> yep, I found one in Think Perl 6 for IPv4.  If there wasn't already an ip validator that was widely available, I was going to write a small module for it

[18:55] <timotimo> just don't try to validate ipv6 addresses by yourself unless you know about the weirder parts of the spec :)

[18:55] <herby_> but I didnt want to clutter the ecosystem

[18:56] <herby_> timotimo: yeah, it looks like ipv6 is a tad more complex than ipv4

[18:56] <El_Che> timotimo: doest sound that hard

[18:57] <buggable> New CPAN upload: Lingua-Pangram-0.1.1.tar.gz by FISCHER https://cpan.metacpan.org/authors/id/F/FI/FISCHER/Perl6/Lingua-Pangram-0.1.1.tar.gz

[18:57] <timotimo> :)

[19:04] *** entonian joined
[19:09] <jmerelo> p6: my @array[4] = <1 2 3 4>; say @array.tail(1);

[19:09] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «(4)␤»

[19:09] *** entonian left
[19:12] <jmerelo> p6: my @chromosome2[16] = Bool.roll xx 16; say @chromosome2.tail(1);

[19:12] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «(False)␤»

[19:19] *** cfa left
[19:23] <benjikun> jmerelo: Whatcha makin?

[19:26] <El_Che> funny questions when chromosomes are involved

[19:29] <benjikun> lmao

[19:30] <jmerelo> benjikun: As usual, evolutionary algorithms...

[19:30] <benjikun> jmerelo: Oh, that's neat.

[19:30] <benjikun> Do you have a GitHub?

[19:30] <jmerelo> https://github.com/JJ

[19:31] <jmerelo> Right now I'm working on this https://github.com/JJ/perl6eo

[19:31] <jmerelo> p6: my $len=16; my @chromosome2[$len] = Bool.roll xx $len;  say @chromosome2.tail(1);

[19:31] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «(False)␤»

[19:31] <jmerelo> Hum

[19:32] <jmerelo> That fails in my installation.

[19:32] <benjikun> How much slower is perl6 for these sorts of algorithms compared to C/C++

[19:32] <jmerelo> It's actually faster than C++ for most things.

[19:32] <benjikun> hm

[19:33] <jmerelo> benjikun: working now on this paper https://github.com/JJ/2016-ea-languages-wcci/blob/master/ea-perls.Rnw

[19:33] <jmerelo> benjikun: except for crossover. Which is what I want to find out.

[19:33] <benjikun> Interesting

[19:35] <benjikun> I'd like for Perl6 to catch on more

[19:35] <masak> like wildfire, or a flu

[19:35] <jmerelo> commit: 2018.01,2018.03,HEAD my $len=16; my @chromosome2[$len] = Bool.roll xx $len;  say @chromosome2.tail(1);

[19:36] <committable6> jmerelo, ¦2018.01,2018.03: «Index 16 for dimension 1 out of range (must be 0..15)␤  in block <unit> at /tmp/4gyTV_4uPa line 1␤␤ «exit code = 1»» ¦HEAD(dc1a3f5): «(False)␤»

[19:36] <benjikun> jmerelo: Do you have this rendered as a PDF or anything yet?

[19:36] <benjikun> masak: Especially this year's flu

[19:36] <jmerelo> benjikun: I'll upload it in a minute.

[19:36] <masak> benjikun: oh? we have a good one this year?

[19:37] <benjikun> masak: Vaccines didn't work out too well this year

[19:37] <masak> oh no :/

[19:38] <jmerelo> Looks like I got into a bug that just got fixed...

[19:40] *** zakharyas left
[19:40] *** zakharyas joined
[19:40] <jmerelo> benjikun: https://github.com/JJ/2016-ea-languages-wcci/releases/tag/v2018-0.9 just uploaded the report. For everyone else, too. Comparing Perl 6 to Perl (and other languages) in several usual evolutionary algorithm operations

[19:41] *** Kaypie left
[19:41] <jmerelo> commit: 2018.03,HEAD my @chromosome2[10] = Bool.roll xx 10;  say @chromosome2.tail(1);

[19:41] <committable6> jmerelo, ¦2018.03: «Index 10 for dimension 1 out of range (must be 0..9)␤  in block <unit> at /tmp/xbOAW2xtIN line 1␤␤ «exit code = 1»» ¦HEAD(dc1a3f5): «(True)␤»

[19:43] *** Kaiepi joined
[19:44] <jmerelo> p6: my $len=16; my $start = now;for 1..$how-many  {my $start = ($len -2 ).rand.Int;my $this-len = 1+($len-$start-2).rand.Int;my @chromosome1[$len] = Bool.roll xx $len;my @chromosome2[$len] = Bool.roll xx $len;my @out1[$len] = flat @chromosome2.head($start), @chromosome1.skip($start).head($this-len), @chromosome2.tail($len-$this-len-$start);my @out2[$len] = flat @chromosome1.head($start),

[19:44] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$how-many' is not declared␤at <tmp>:1␤------> 3my $len=16; my $start = now;for 1..7⏏5$how-many  {my $start = ($len -2 ).rand.␤»

[19:44] <jmerelo> @chromosome2.skip($start).head($this-len), @chromosome1.tail($len-$this-len-$start); }; say "perl6-BitVector,$len,",now - $start;

[19:45] <jmerelo> p6: my $len=16; my $start = now;for 1..1000  {my $start = ($len -2 ).rand.Int;my $this-len = 1+($len-$start-2).rand.Int;my @chromosome1[$len] = Bool.roll xx $len;my @chromosome2[$len] = Bool.roll xx $len;my @out1[$len] = flat @chromosome2.head($start), @chromosome1.skip($start).head($this-len), @chromosome2.tail($len-$this-len-$start);my @out2[$len] = flat @chromosome1.head($start),

[19:45] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3[$len] = flat @chromosome1.head($start),7⏏5<EOL>␤    expecting any of:␤        postfix␤        prefix␤        statement end␤        statement modifi…»

[19:45] <jmerelo> @chromosome2.skip($start).head($this-len), @chromosome1.tail($len-$this-len-$start); }; say "perl6-BitVector,$len,",now - $start;

[19:45] *** pierre_ joined
[19:46] <benjikun> jmerelo: Thanks, I'll give it a read

[19:47] <jmerelo> benjikun: thanks!

[19:50] *** pierre_ left
[19:53] *** Kaiepi left
[19:53] *** Kaypie joined
[19:55] <jmerelo> commit: 2018.03-137-gdc1a3f5a3,HEAD my @chromosome2[10] = Bool.roll xx 10;  say @chromosome2.tail(1);

[19:55] <committable6> jmerelo, ¦2018.03-137-gdc1a3f5a3: «(True)␤» ¦HEAD(dc1a3f5): «(False)␤»

[19:56] <lizmat> jmerelo: you'e expecting repeatable results from a rand) ?

[19:57] <jmerelo> lizmat: No, there was an error in 2018.03. I was checking to see if it was fixed...

[19:57] <jmerelo> commit: 2018.03,HEAD my @chromosome2[10] = Bool.roll xx 10;  say @chromosome2.tail(1);

[19:57] <committable6> jmerelo, ¦2018.03: «Index 10 for dimension 1 out of range (must be 0..9)␤  in block <unit> at /tmp/JoAEySRUCj line 1␤␤ «exit code = 1»» ¦HEAD(dc1a3f5): «(True)␤»

[19:57] <lizmat> ah, ok  :-)

[20:01] *** AlexDaniel joined
[20:02] *** dct joined
[20:03] <jmerelo> p6:  my @c1[4]=<a b c d>; my @c2[4] = <1 2 3 4>; say @c1.head(2), @c2.tail(2)

[20:03] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «(a b)(3 4)␤»

[20:03] <jmerelo> p6:  my @c1[4]=<a b c d>; my @c2[4] = <1 2 3 4>; say flat @c1.head(2), @c2.tail(2)

[20:03] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «Index 4 for dimension 1 out of range (must be 0..3)␤  in block <unit> at <tmp> line 1␤␤»

[20:03] <jmerelo> lizmat: would that be a bug? Looks like the previous one has not been totally erradicated...

[20:04] <jmerelo> p6:  my @c1[4]=<a b c d>; my @c2[4] = <1 2 3 4>; say  @c1.head(2).append( @c2.tail(2) )

[20:04] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «Cannot resolve caller append(Seq: Seq); none of these signatures match:␤    (Any:U \SELF: |values is raw)␤  in block <unit> at <tmp> line 1␤␤»

[20:05] <jmerelo> p6:  my @c1[4]=<a b c d>; my @c2[4] = <1 2 3 4>; @new =  @c1.head(2); say @new.append: @c2.tail(2) 

[20:05] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '@new' is not declared␤at <tmp>:1␤------> 3c1[4]=<a b c d>; my @c2[4] = <1 2 3 4>; 7⏏5@new =  @c1.head(2); say @new.append: @c␤»

[20:05] <jmerelo> p6:  my @c1[4]=<a b c d>; my @c2[4] = <1 2 3 4>; my @new =  @c1.head(2); say @new.append: @c2.tail(2) 

[20:05] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «[a b 3 4]␤»

[20:08] <jmerelo> p6:  my @c1[4]=<a b c d>; my @c2[4] = <1 2 3 4>; say Array.new( @c1.head(2)).append: @c2.tail(2) 

[20:08] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «[a b 3 4]␤»

[20:09] <Kaypie> zef install --force-install zef is reminding me of the monthly weird npm i -g npm thing npm keeps requiring

[20:10] *** zakharyas left
[20:10] *** Kaypie is now known as Kaiepi

[20:11] *** zakharyas joined
[20:14] <jmerelo> Leaving now. Until tomorrow!

[20:15] *** jmerelo left
[20:21] *** cfa joined
[20:21] *** pierre_ joined
[20:22] <cfa> hunh, interseting

[20:22] <cfa> also, interesting

[20:22] <cfa> m: my @a = <a b c d>; say @a.tail: 1 # or 2, 3, 4

[20:22] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «(d)␤»

[20:23] <cfa> m: my @a[4] = <a b c d>; say @a.tail: 1 # or 2, 3, 4

[20:23] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «(d)␤»

[20:23] <cfa> m: my @a[4] = <a b c d>; say @a.tail: 2

[20:23] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «(c d)␤»

[20:23] <cfa> hmm

[20:25] *** eliasr joined
[20:26] <gfldex> m: my @a[4] = <a b c d>; dd @a.Seq.tail;

[20:26] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «Str <element> = "d"␤»

[20:26] *** pierre_ left
[20:27] <gfldex> m: my @a[4] = <a b c d>; @a[3] = <1 2 3 4>; dd @a;

[20:27] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «Array.new(:shape(4,), ["a", "b", "c", (IntStr.new(1, "1"), IntStr.new(2, "2"), IntStr.new(3, "3"), IntStr.new(4, "4"))])␤»

[20:27] *** ufobat joined
[20:28] <cfa> oh, here we go

[20:28] <cfa> m: my @a[4] = <a b c d>; say flat @a.tail: 1

[20:28] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «Index 4 for dimension 1 out of range (must be 0..3)␤  in block <unit> at <tmp> line 1␤␤»

[20:29] <gfldex> m: my @a[4] = [1, 2, 3]; say @a.tail;

[20:29] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «(Mu)␤»

[20:29] <gfldex> m: my @a[4] = [1, 2, 3]; dd @a;

[20:29] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «Array.new(:shape(4,), [1, 2, 3, Any])␤»

[20:30] <gfldex> m: my @a; @a[4] = $[1, 2, 3]; say @a.tail;

[20:30] <camelia> rakudo-moar : OUTPUT: «Cannot allocate memory»

[20:32] <gfldex> m: my @a; @a[4] = $[1, 2, 3]; say @a.tail;

[20:32] <camelia> rakudo-moar dc1a3f5a3: OUTPUT: «[1 2 3]␤»

[20:44] *** ufobat left
[20:47] *** zakharyas left
[20:49] *** comborico1611 joined
[20:50] *** cfa left
[21:01] *** rindolf left
[21:16] *** Ven`` joined
[21:17] *** Ven` joined
[21:21] *** Ven`` left
[21:22] *** Ven` left
[21:25] *** Ven`` joined
[21:31] *** traxex2 joined
[21:31] *** Ven`` left
[21:34] *** Ven`` joined
[21:35] *** sivoais_ left
[21:45] *** Ven`` left
[21:47] *** wamba left
[21:47] *** pmurias left
[21:49] *** Ven`` joined
[21:55] *** MasterDuke joined
[21:56] <MasterDuke> bench: compare HEAD my $l = 100000; my @a[$l] = Bool.roll xx $l; ||| my $l = 100000; my @a = Bool.roll xx $l; say now - INIT now

[21:56] <benchable6> MasterDuke, starting to benchmark the 1 given commit

[21:56] <benchable6> MasterDuke, https://gist.github.com/494f5c2a1e9343e17085aab3d568e8c3

[21:57] <MasterDuke> m: my $l = 1_000_000; my @a[$l] = Bool.roll xx $l; say now - INIT now

[21:57] <camelia> rakudo-moar 32b3ddc7e: OUTPUT: «1.469947␤»

[21:57] <MasterDuke> m: my $l = 1_000_000; my @a = Bool.roll xx $l; say now - INIT now

[21:57] <camelia> rakudo-moar 32b3ddc7e: OUTPUT: «0.6839025␤»

[21:57] <MasterDuke> bench: compare HEAD my $l = 100000; my @a[$l] = Bool.roll xx $l; ||| my $l = 100000; my @a = Bool.roll xx $l;

[21:57] <benchable6> MasterDuke, starting to benchmark the 1 given commit

[21:57] <benchable6> MasterDuke, https://gist.github.com/3912c39076c1c527d139ed4f18c46439

[22:00] *** herby_ left
[22:00] <MasterDuke> don't know why benchable6 shows the opposite, but on my system i definitely see that the non-shaped version is faster

[22:01] *** bbkr_ joined
[22:02] <MasterDuke> shaves multiple seconds off of jmerelo's xover code

[22:04] *** sivoais joined
[22:15] *** comborico1611 left
[22:20] *** FROGGS_ left
[22:23] *** natrys left
[22:39] *** pierre joined
[22:41] *** robertle_ left
[22:44] *** pierre left
[22:47] *** lichtkind joined
[22:47] *** lichtkind_ joined
[22:47] *** lichtkind left
[22:52] <Kaiepi> for the vim users here, here's a vim-easy-align rule that lets you align a list of variables by typing in gaipv in normal mode https://hastebin.com/juqowucemo.bash

[22:54] <b2gills> .tell jmerelo `Bool.roll xx $len` is probably better written as `Bool.roll($len)`

[22:54] <yoleaux> b2gills: I'll pass your message to jmerelo.

[22:57] <buggable> New CPAN upload: Lingua-Lipogram-0.1.0.tar.gz by FISCHER https://cpan.metacpan.org/authors/id/F/FI/FISCHER/Perl6/Lingua-Lipogram-0.1.0.tar.gz

[23:01] <AlexDaniel> Kaiepi: I wonder if it can be added directly to https://github.com/vim-perl/vim-perl6

[23:03] *** kurahaupo_ joined
[23:04] *** lichtkind_ left
[23:05] <Kaiepi> possibly, but i don't know anything about vimscript

[23:05] *** kurahaupo left
[23:06] <AlexDaniel> Kaiepi: that sounds pretty good! I don't know anything about vim

[23:07] <AlexDaniel> although maybe I still have some muscle memory from a year of using spacemacs

[23:15] *** markong left
[23:17] *** lichtkind_ joined
[23:18] *** kurahaupo_ left
[23:19] *** dct left
[23:19] *** kurahaupo joined
[23:32] *** kurahaupo left
[23:32] *** kurahaupo joined
[23:38] *** dct joined
[23:42] *** Ven`` left
[23:45] *** kurahaupo left
[23:45] *** kurahaupo joined
[23:46] *** cog_ joined
[23:49] *** cognominal left
[23:57] *** w_richard_w joined
[23:57] *** kurahaupo left
[23:58] *** kurahaupo joined
