[00:02] *** pecastro left
[00:16] *** Herby_ left
[00:21] <squashable6> 🍕 JJ++ wrote a comment on “TODOs all over”: https://github.com/perl6/doc/issues/2277#issuecomment-417896247

[00:22] <geekosaur> ...todos TODOs?

[00:24] <squashable6> 🍕 JJ++ wrote a comment on “Accidentally generate '/type/*'”: https://github.com/perl6/doc/issues/1656#issuecomment-417896344

[00:25] <squashable6> 🍕 JJ++ wrote a comment on “document regex object in…”: https://github.com/perl6/doc/issues/1673#issuecomment-417896380

[00:26] <Geth> ¦ doc: b7924ecea5 | (Luis F. Uceta)++ | 19 files

[00:26] <Geth> ¦ doc: Adjust heading links

[00:26] <Geth> ¦ doc: 

[00:26] <Geth> ¦ doc: Adjust links to headings according to latest adaptation of headings

[00:26] <Geth> ¦ doc: from #Links_Of_This_Form to #Links_of_this_form.

[00:26] <Geth> ¦ doc: 

[00:26] <Geth> ¦ doc: refs: https://github.com/perl6/doc/issues/1838

[00:26] <squashable6> 🍕 JJ++ merged pull request “Adjust heading links”: https://github.com/perl6/doc/pull/2290

[00:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b7924ecea5

[00:26] <Geth> ¦ doc: daeaf94e2e | (Luis F. Uceta)++ | doc/Language/5to6-nutshell.pod6

[00:26] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[00:26] <Geth> ¦ doc: Remove unnecessary underscore

[00:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/daeaf94e2e

[00:26] <squashable6> 🍕 JJ++ wrote a comment on “Adjust heading links”: https://github.com/perl6/doc/pull/2290#issuecomment-417896403

[00:26] <Geth> ¦ doc: 8e07fda7a0 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 18 files

[00:26] <Geth> ¦ doc: Merge pull request #2290 from uzluisf/master

[00:26] <Geth> ¦ doc: 

[00:26] <Geth> ¦ doc: Adjust heading links

[00:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8e07fda7a0

[00:44] *** rindolf left
[00:52] *** stmuk joined
[00:52] *** p6bannerbot sets mode: +v stmuk

[00:54] *** stmuk_ left
[00:58] *** fireworks26 joined
[01:03] *** fireworks26 left
[01:04] *** stmuk_ joined
[01:05] *** p6bannerbot sets mode: +v stmuk_

[01:06] *** stmuk left
[01:17] *** stmuk joined
[01:18] *** p6bannerbot sets mode: +v stmuk

[01:20] *** stmuk_ left
[01:55] *** jeek joined
[01:55] *** p6bannerbot sets mode: +v jeek

[02:10] *** lizmat left
[02:12] *** aborazmeh joined
[02:12] *** aborazmeh left
[02:12] *** aborazmeh joined
[02:12] *** p6bannerbot sets mode: +v aborazmeh

[02:12] *** p6bannerbot sets mode: +v aborazmeh

[02:15] *** davidebeatrici25 joined
[02:18] *** davidebeatrici25 left
[02:19] *** aindilis` left
[02:20] *** aindilis joined
[02:21] *** p6bannerbot sets mode: +v aindilis

[02:22] *** lorimer5 joined
[02:26] *** Khisanth left
[02:27] *** lorimer5 left
[02:39] *** Khisanth joined
[02:39] *** p6bannerbot sets mode: +v Khisanth

[02:55] *** thowe left
[04:14] *** reportable6 left
[04:14] *** committable6 left
[04:14] *** nativecallable6 left
[04:14] *** squashable6 left
[04:14] *** undersightable6 left
[04:14] *** evalable6 left
[04:14] *** notable6 left
[04:14] *** quotable6 left
[04:14] *** statisfiable6 left
[04:14] *** coverable6 left
[04:14] *** bloatable6 left
[04:14] *** unicodable6 left
[04:14] *** shareable6 left
[04:14] *** releasable6 left
[04:14] *** benchable6 left
[04:14] *** bisectable6 left
[04:14] *** greppable6 left
[04:14] *** notable6 joined
[04:14] *** nativecallable6 joined
[04:14] *** committable6 joined
[04:14] *** coverable6 joined
[04:14] *** greppable6 joined
[04:14] *** ChanServ sets mode: +v greppable6

[04:14] *** bisectable6 joined
[04:14] *** ChanServ sets mode: +v bisectable6

[04:14] *** bloatable6 joined
[04:14] *** quotable6 joined
[04:14] *** ChanServ sets mode: +v bloatable6

[04:14] *** ChanServ sets mode: +v quotable6

[04:14] *** benchable6 joined
[04:14] *** unicodable6 joined
[04:14] *** evalable6 joined
[04:14] *** shareable6 joined
[04:14] *** reportable6 joined
[04:14] *** ChanServ sets mode: +v reportable6

[04:14] *** squashable6 joined
[04:14] *** ChanServ sets mode: +v squashable6

[04:14] *** releasable6 joined
[04:14] *** ChanServ sets mode: +v releasable6

[04:14] *** undersightable6 joined
[04:14] *** ChanServ sets mode: +v undersightable6

[04:14] *** statisfiable6 joined
[04:15] *** p6bannerbot sets mode: +v notable6

[04:15] *** p6bannerbot sets mode: +v nativecallable6

[04:15] *** p6bannerbot left
[04:15] *** p6bannerbot joined
[04:15] *** ChanServ sets mode: +o p6bannerbot

[04:23] <buggable> New CPAN upload: HTTP-Tinyish-0.1.3.tar.gz by SKAJI http://modules.perl6.org/dist/HTTP::Tinyish:cpan:SKAJI

[04:46] *** lichtkind joined
[04:47] *** p6bannerbot sets mode: +v lichtkind

[04:59] *** kaare_ joined
[05:00] *** p6bannerbot sets mode: +v kaare_

[05:02] *** saki joined
[05:03] *** p6bannerbot sets mode: +v saki

[05:04] *** aborazmeh left
[05:05] *** saki left
[05:05] *** saki joined
[05:06] *** p6bannerbot sets mode: +v saki

[05:10] *** saki left
[05:12] *** Sgeo_ joined
[05:13] *** p6bannerbot sets mode: +v Sgeo_

[05:14] *** lichtkind left
[05:14] *** Sgeo left
[05:20] *** saki joined
[05:20] <squashable6> 🍕 JJ++ edited issue “TODOs all over”: https://github.com/perl6/doc/issues/2277

[05:21] *** p6bannerbot sets mode: +v saki

[05:27] *** saki left
[05:30] <Geth> ¦ doc: d7a2a42f18 | (JJ Merelo)++ | 3 files

[05:30] <Geth> ¦ doc: Some reflow and checking for #2277

[05:30] <Geth> ¦ doc: 

[05:30] <Geth> ¦ doc: TODO in operator.pod6 mentioned prefix ||, but I haven't found a definition for that, so I deleted the mention. If that's incorrect, please give more information on where it's defined.

[05:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d7a2a42f18

[05:30] <squashable6> 🍕 JJ++ edited issue “TODOs all over”: https://github.com/perl6/doc/issues/2277

[05:32] *** lichtkind joined
[05:33] *** p6bannerbot sets mode: +v lichtkind

[05:35] *** eliasr left
[05:45] *** lichtkind left
[05:58] *** Thorne joined
[06:01] *** Thorne left
[06:10] *** lichtkind joined
[06:11] *** p6bannerbot sets mode: +v lichtkind

[06:20] *** vrurg left
[06:21] *** khronosschoty10 joined
[06:23] *** lichtkind left
[06:27] *** khronosschoty10 left
[06:35] *** domidumont joined
[06:36] *** p6bannerbot sets mode: +v domidumont

[06:48] <xinming>     method FALLBACK ($name, |c(Int, Str)) {

[06:48] <xinming> Does |c(Int, Str)   means capture?

[06:48] *** lichtkind joined
[06:48] <xinming> I mean signature?

[06:48] <xinming> Does |c(Int, Str) mean signature

[06:49] *** p6bannerbot sets mode: +v lichtkind

[06:50] *** lichtkind left
[06:51] *** Sgeo_ left
[06:58] *** rindolf joined
[06:58] *** p6bannerbot sets mode: +v rindolf

[07:00] *** Sgeo joined
[07:01] *** p6bannerbot sets mode: +v Sgeo

[07:02] *** lichtkind joined
[07:03] *** lichtkind left
[07:03] *** lichtkind joined
[07:04] *** lichtkind left
[07:04] *** lichtkind joined
[07:04] *** lichtkind left
[07:04] *** lichtkind joined
[07:05] *** lichtkind left
[07:05] *** lichtkind joined
[07:06] *** lichtkind left
[07:06] *** lichtkind joined
[07:07] *** lichtkind left
[07:07] *** lichtkind joined
[07:07] *** lichtkind left
[07:08] *** lichtkind joined
[07:08] *** lichtkind left
[07:08] *** lichtkind joined
[07:09] *** lichtkind left
[07:09] *** lichtkind joined
[07:10] *** lichtkind left
[07:10] *** lichtkind joined
[07:10] *** lichtkind left
[07:28] *** quester left
[07:36] *** Actualey` left
[07:59] *** casdr left
[07:59] *** casdr joined
[07:59] *** p6bannerbot sets mode: +v casdr

[08:10] *** blackberry9900 joined
[08:11] *** p6bannerbot sets mode: +v blackberry9900

[08:14] *** blackberry9900 left
[08:19] <AlexDaniel> squashable6: status

[08:19] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈3 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[08:19] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/852fb2d4cab69592040feabc2aa3ece2

[08:21] *** domidumont left
[08:24] *** spycrab0 left
[08:33] *** GingerGeek joined
[08:33] *** GingerGeek left
[09:04] *** kaare_ left
[09:09] *** rfold joined
[09:10] *** p6bannerbot sets mode: +v rfold

[09:52] *** molaf joined
[09:52] *** kaare_ joined
[09:52] *** p6bannerbot sets mode: +v molaf

[09:53] *** p6bannerbot sets mode: +v kaare_

[10:12] *** hammond joined
[10:12] *** hammond is now known as Guest49432

[10:13] *** p6bannerbot sets mode: +v Guest49432

[10:13] <Guest49432> ⅼіgһt iѕ not dഠiᥒɡ Aⅼⅼɑh iѕ dοiᥒg

[10:13] <Guest49432> faᥒ is ᥒot ԁоіnɡ Allah is ԁoinɡ

[10:13] <Guest49432> businessеss arе not dοіᥒg Αllɑһ iѕ ԁoinɡ

[10:13] <Guest49432> ɑmeriс iѕ ᥒot doinɡ Aⅼlah is ԁoing

[10:13] <Guest49432> amerіϲa іs ᥒot ⅾοⅰnɡ Alⅼaһ iѕ ԁоing

[10:13] <Guest49432> fⅰre сaᥒ ᥒot b∪rn without the рerⅿissіoᥒ of alⅼah

[10:13] <Guest49432> kᥒife ϲɑn ᥒഠt cut wⅰtho∪t thе perⅿіѕѕiοᥒ of аlⅼaһ

[10:13] <Guest49432> fiⅼesуsteⅿ ԁoes nⲟt write ᴡithout perⅿіssіⲟᥒ of аllah

[10:13] <Guest49432> ruⅼᥱrs are nοt ⅾoiᥒɡ Allah іs ԁഠіng

[10:13] <Guest49432> ɡഠᴠernments are ᥒοt dοіᥒɡ Aⅼlaһ is doinɡ

[10:13] <Guest49432> ѕleᥱp is not doіᥒg Αⅼⅼah is dοⅰnɡ

[10:13] <Guest49432> huᥒger iѕ ᥒot ⅾഠing Alⅼah is ԁoⅰnɡ

[10:13] <Guest49432> fഠoԁ dοᥱѕ not take aᴡay the huᥒgᥱr Aⅼlɑһ tɑkes awaу the hᥙnɡer

[10:13] <Guest49432> ᴡater ԁoeѕ ᥒⲟt takе awау the thіrst Aⅼⅼah takes ɑᴡаy thе tһⅰrst

[10:13] <Guest49432> seᥱⅰᥒg is not doіᥒg Alⅼɑh iѕ ⅾοing

[10:13] <Guest49432> һearⅰᥒɡ іs ᥒഠt dഠing Αⅼlаh іs doiᥒg

[10:14] <Guest49432> ѕeasoᥒs are nοt dⲟіng Allаһ ⅰs dⲟⅰᥒg

[10:14] <Guest49432> weɑther is ᥒot dοinɡ Alⅼah iѕ doіng

[10:14] <Guest49432> һuⅿanѕ arᥱ not dοiᥒɡ Αⅼⅼɑh is doіnɡ

[10:14] <Guest49432> anⅰmаⅼs are not ԁⲟinɡ Ꭺllaһ іs ԁοing

[10:14] <Guest49432> the bеѕt ɑmongѕt yоu ɑrе thοѕᥱ who learn ɑᥒԁ tеаch quraᥒ

[10:14] <Guest49432> οne ⅼetter read from bοഠk of Allah аmountѕ to ⲟne ɡⲟod ԁeeԁ ɑnd Αllɑһ multiplies οne gooⅾ ⅾеeԁ teᥒ tіmeѕ

[10:14] <Guest49432> hеɑrts get rusted аѕ ԁoеѕ iron wіth ᴡаter to remοvе ruѕt from heart recіtatіoᥒ of Quran ɑnd remᥱmbеrаnce of ԁeɑth

[10:14] <Guest49432> hеart ⅰѕ ⅼіkenеԁ to а mirror

[10:14] <Guest49432> ᴡһеᥒ a реrson сommitѕ one ѕіn a blaϲk dot sustɑіns tһе hеart

[10:14] <Guest49432> tഠ ɑⅽcᥱⲣt Ιѕlаm say tһɑt i bear ᴡitᥒеѕs tһɑt tһere is ᥒo deitу wοrthỿ οf ᴡorsһⅰp еxсept Ꭺlⅼah aᥒⅾ Muhammаd реace be upഠn hіm іs hіѕ sⅼave andmessеnɡer

[10:17] *** Guest49432 left
[10:33] <AlexDaniel> mst: so that thing ↑ looked similar to the current spam

[10:33] <AlexDaniel> mst: i.e. a bunch of unicode characters instead of ascii letters, some unicode whitespace too

[10:35] <AlexDaniel> mst: btw they're probably using the list of confusables to mangle the text automatically, see https://unicode.org/cldr/utility/confusables.jsp?a=l&r=None

[10:36] <AlexDaniel> so matching these messages can be done in a similar fashion

[10:38] <AlexDaniel> squashable6: status

[10:38] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈1 hour. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[10:38] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/5a9c371bf2bffc2fdc7da6665bcf4523

[10:55] *** lizmat joined
[10:56] *** p6bannerbot sets mode: +v lizmat

[10:56] *** pmurias joined
[10:57] *** p6bannerbot sets mode: +v pmurias

[11:14] *** pmurias left
[11:28] *** saki joined
[11:28] *** saki left
[11:28] *** erdic left
[11:29] *** erdic joined
[11:29] *** p6bannerbot sets mode: +v erdic

[11:30] *** pmurias joined
[11:30] *** p6bannerbot sets mode: +v pmurias

[11:47] *** saki joined
[11:47] *** saki left
[11:53] *** molaf left
[11:55] *** saki joined
[11:55] *** kaare_ left
[11:56] *** p6bannerbot sets mode: +v saki

[12:00] <moritz> masak_: https://twitter.com/juliagalef/status/1036034615788503040

[12:14] <AlexDaniel> squashable6: status

[12:14] <squashable6> AlexDaniel, Next SQUASHathon in 32 days and ≈21 hours (2018-10-06 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:14] <AlexDaniel> squashable6: log 2018-09-01

[12:14] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/e1d92cfb622bd947b73149148d47ec1e

[12:15] <lizmat> AlexDaniel++   # sorry wasn't able to participate this time, I wasn't in a good place

[12:16] <AlexDaniel> lizmat: yeah I couldn't participate also, unfortunately

[12:17] <pmurias> timotimo: I looked into the isprime_I stuff and it turns that for bignumbers the MoarVM bignum libraries recommends *smaller* number of miller rabin steps

[12:17] <timotimo> oh?

[12:18] <timotimo> i suppose it's more costly per run, the bigger the original number is

[12:18] <timotimo> is that why?

[12:18] <timotimo> does the density of prime numbers go down as you make the number bigger perhaps?

[12:19] <pmurias> I'm not sure why I'm no mathematician ;)

[12:19] <pmurias> mp_prime_rabin_miller_trials returns 4 for big enough numbers

[12:20] <AlexDaniel> weekly: 13th squasathon ended (more than a year of squashathons, how cool is that!): https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:20] <notable6> AlexDaniel, Noted!

[12:21] <pmurias> timotimo: but the number of trials is supposed to give you 2^-96 propability of being wrong

[12:31] *** hami joined
[12:31] *** p6bannerbot sets mode: +v hami

[12:35] *** hami left
[12:40] *** eliasr joined
[12:40] *** p6bannerbot sets mode: +v eliasr

[12:41] *** molaf joined
[12:42] *** p6bannerbot sets mode: +v molaf

[12:47] <pmurias> timotimo: maybe getting rid of the number of iteration parameter to isprime_I and letting it pick a good value would make sense?

[12:47] <timotimo> since all of our users currently just pass literal 100 or something like that, we can just ignore the value for now, lol

[12:48] <pmurias> rakudo passes 100, the nqp tests pass 1

[12:48] <timotimo> ha

[12:48] <timotimo> i wonder what it returns if you pass 0

[12:50] <pmurias> the MoarVM implementation checks by division against a bunch of smallish primes

[12:50] <pmurias> so the nqp tests would pass without any miller rabin iterations

[12:51] <timotimo> i see

[12:55] *** unclechu[m] left
[13:03] *** pmurias left
[13:06] *** pmurias joined
[13:06] *** xi- left
[13:06] *** p6bannerbot sets mode: +v pmurias

[13:10] *** kambiz20 joined
[13:10] *** xi- joined
[13:10] *** kambiz20 left
[13:11] *** p6bannerbot sets mode: +v xi-

[13:20] *** kaare_ joined
[13:21] *** p6bannerbot sets mode: +v kaare_

[13:21] *** aborazmeh joined
[13:21] *** aborazmeh left
[13:21] *** aborazmeh joined
[13:21] *** p6bannerbot sets mode: +v aborazmeh

[13:22] *** p6bannerbot sets mode: +v aborazmeh

[13:37] *** fk__ joined
[13:37] *** p6bannerbot sets mode: +v fk__

[13:39] *** fk_ joined
[13:39] *** fk__ left
[13:39] *** p6bannerbot sets mode: +v fk_

[13:43] *** MasterDuke left
[13:43] *** pmurias left
[13:48] <AlexDaniel> lizmat: if I want top contributors of upcoming squashathons to receive a plush camelia as a prize, what should I do to make it happen? So that's about 12 camelias per year and I guess the shipping I can cover, but what about camelias themselves?

[13:51] <AlexDaniel> .tell jmerelo So I wonder, did we run out of squashable tickets in perl6/doc repo? It does feel like the fun stuff is no longer there after so many squashathons. Should we just go with random topic every month?

[13:52] <AlexDaniel> dpk: the bot is down

[13:52] *** Hor|zon joined
[13:52] <dpk> hmm, indeed

[13:52] *** p6bannerbot sets mode: +v Hor|zon

[13:52] <dpk> curious, it seems to be crashing on startup for some reason

[13:56] *** pmurias joined
[13:57] *** p6bannerbot sets mode: +v pmurias

[14:01] *** yoleaux joined
[14:01] *** ChanServ sets mode: +v yoleaux

[14:01] <dpk> AlexDaniel: fixed

[14:01] <AlexDaniel> .tell jmerelo So I wonder, did we run out of squashable tickets in perl6/doc repo? It does feel like the fun stuff is no longer there after so many squashathons. Should we just go with random topic every month?

[14:01] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[14:01] <AlexDaniel> dpk: thank you!

[14:07] <lizmat> AlexDaniel: that's an excellent idea.  Just make sure that I get the address of the winners  :-)

[14:08] *** aborazmeh left
[14:10] <AlexDaniel> lizmat: unclear, are you saying that we (I or whoever) should simply announce the winner and you will be sending them out?

[14:10] <AlexDaniel> that sounds too simple to be true :)

[14:13] <AlexDaniel> .tell Zoffix what's your predicted date for v6.d release? I wanna synchronize it a bit with my plans for future squashathons

[14:13] <yoleaux> AlexDaniel: I'll pass your message to Zoffix.

[14:13] <AlexDaniel> .tell Zoffix I mean, synchronize squashathons with whatever you reply :)

[14:13] <yoleaux> AlexDaniel: I'll pass your message to Zoffix.

[14:14] *** zakharyas joined
[14:15] *** p6bannerbot sets mode: +v zakharyas

[14:30] *** aindilis left
[14:45] *** camelia left
[14:45] *** S007 left
[14:46] *** S007 joined
[14:46] *** p6bannerbot sets mode: +v S007

[14:46] *** camelia joined
[14:47] *** p6bannerbot sets mode: +v camelia

[14:47] *** jkramer left
[14:47] *** jkramer joined
[14:48] *** p6bannerbot sets mode: +v jkramer

[14:52] *** fk_ left
[15:03] *** fk_ joined
[15:03] *** p6bannerbot sets mode: +v fk_

[15:11] *** drudgesentinel left
[15:31] *** Sgeo left
[15:32] *** Sgeo joined
[15:32] *** p6bannerbot sets mode: +v Sgeo

[15:43] *** vike1 left
[15:46] *** vike1 joined
[15:47] *** p6bannerbot sets mode: +v vike1

[15:50] *** jjmerelo joined
[15:50] *** p6bannerbot sets mode: +v jjmerelo

[15:50] <jjmerelo> squashable: status

[15:50] <squashable6> jjmerelo, Next SQUASHathon in 32 days and ≈18 hours (2018-10-06 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[15:50] <jjmerelo> releasable6: status

[15:50] <releasable6> jjmerelo, Next release will happen when it's ready. 0 blockers. 0 out of 504 commits logged

[15:51] <releasable6> jjmerelo, Details: https://gist.github.com/c59e6d4a14b4a236c31334620947d709

[15:55] <jjmerelo> The results of this last hackathon... have not been ideal. Last week of August, plus Labor day weekend. Plus little hype on the net.

[15:56] <jjmerelo> Let's do better next time.

[15:58] *** ExtraCrispy joined
[15:59] <lizmat> AlexDaniel: it's that simple  :-)

[15:59] *** p6bannerbot sets mode: +v ExtraCrispy

[15:59] <AlexDaniel> jjmerelo: there's a bot message for “jmerelo”

[16:00] <AlexDaniel> jjmerelo: http://colabti.org/irclogger/irclogger_log/perl6?date=2018-09-02#l310

[16:00] <AlexDaniel> lizmat: that's great. Thank you

[16:00] <AlexDaniel> lizmat++

[16:00] *** poxifide6 joined
[16:01] <jjmerelo> AlexDaniel: not really. There's a lot of stuff to do. I don't know if it's fun, but it's got to be done.

[16:03] <jjmerelo> AlexDaniel: sending Camelias would be a good idea, but some ground rules would have to be laid out or they would always be received by the same.

[16:03] <AlexDaniel> maybe? I'm not sure, a winner is a winner :)

[16:04] <AlexDaniel> we'll figure it out

[16:04] <jjmerelo> AlexDaniel: OK

[16:05] *** poxifide6 left
[16:05] <jjmerelo> AlexDaniel: I wouldn't change the rules of the hackathon just because this last one kinda tanked. As I said, dates are not conductive to sitting down and coding.

[16:05] <AlexDaniel> jjmerelo: well, also it was not advertized *at all*

[16:06] <AlexDaniel> kinda slipped through the cracks, and I totally forgot too

[16:06] <jjmerelo> AlexDaniel: that too. I am spending family holidays in the USA. I have been close to my laptop only early in the morning (like now)

[16:07] <jjmerelo> AlexDaniel: so maybe two conclusions: let's hype it more the days before, let's change dates if they are a major holiday (or end of holiday, as it were)

[16:07] <AlexDaniel> jjmerelo: what holiday are we talking about btw?

[16:08] <jjmerelo> AlexDaniel: Labor Day. It's a long weekend in the USA

[16:08] * AlexDaniel 🤷

[16:08] <jjmerelo> Labor day is tomorrow, so lots of people are moving around taking advantage of the non-working Monday.

[16:10] <jjmerelo> Also in many places, including Spain, back-to-work day is tomorrow. So people are enjoying the last days of holidays, packing, driving, getting depressed because work, all that.

[16:19] *** fxrh8 joined
[16:20] *** fxrh8 left
[16:28] *** fake_space_whale joined
[16:29] *** p6bannerbot sets mode: +v fake_space_whale

[16:30] *** vike1 left
[16:35] *** vike1 joined
[16:36] *** p6bannerbot sets mode: +v vike1

[16:45] <tbrowder_> some squash winner ideas: prioritize issues, gives weight to successful fixer with a test (have to claim the issue, gets negative weight if not finished by squash end, negative values carry over)

[16:46] <AlexDaniel> let's not overcomplicate things :)

[16:47] <tbrowder_> well, you have so much automated, you must have more bots hidden away that could do that :D

[16:49] <tbrowder_> jjmerelo: are you being affected by the fires?

[16:49] *** fk_ left
[16:54] <Geth> ¦ doc: c624b1cf19 | (JJ Merelo)++ | doc/Language/list.pod6

[16:54] <Geth> ¦ doc: Reformatting and reflow

[16:54] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c624b1cf19

[16:54] <Geth> ¦ doc: 1b7ce6e2f7 | (JJ Merelo)++ | doc/Language/list.pod6

[16:54] <Geth> ¦ doc: Adds documentation on using iterators over lists

[16:54] <synopsebot> Link: https://doc.perl6.org/language/list

[16:54] <Geth> ¦ doc: 

[16:54] <Geth> ¦ doc: This solves a TODO in the code, refs #2277

[16:54] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1b7ce6e2f7

[16:55] <jjmerelo> tbrowder_: not really; I'm in Venice, and the only fires are those that lit the joints people are smoking

[16:56] <jjmerelo> tbrowder_: but thanks for asking. We've done only Los Angeles, with a short jaunt to Vegas and Death Valley. Which was hot as hell's bakery, but not literally on fire.

[16:56] <tbrowder_> ha! good one, glad you’re ok. but watch that second hand smoke!

[16:57] <jjmerelo> tbrowder_: I'll do that. :-) Closing now for breakfast. See you!

[16:57] <tbrowder_> in death valley you have to watch out for pilots trying to fly below sea level.

[17:01] *** jjmerelo left
[17:06] *** sotona joined
[17:06] *** p6bannerbot sets mode: +v sotona

[17:15] *** MilkmanDan left
[17:16] *** fk_ joined
[17:17] *** p6bannerbot sets mode: +v fk_

[17:18] *** MilkmanDan joined
[17:18] *** p6bannerbot sets mode: +v MilkmanDan

[17:26] *** DarthGandalf left
[17:30] *** DarthGandalf joined
[17:30] *** p6bannerbot sets mode: +v DarthGandalf

[17:31] *** ExtraCrispy left
[17:34] *** MasterDuke joined
[17:34] *** p6bannerbot sets mode: +v MasterDuke

[17:38] <timotimo> did i just hallucinate that? i think somebody asked me if my FASTA code ran on postrelease-opts? and i said yes? i think i actually ran them on master instead

[17:39] <AlexDaniel> timotimo: you said yes, yes

[17:39] <AlexDaniel> timotimo: brrt on #moarvm I think

[17:40] *** DarthGandalf left
[17:40] <timotimo> ah, no, i meant what japhb asked me

[17:40] <timotimo> i didn't find it because i searched for "japhb", but only in the message text

[17:41] *** DarthGandalf joined
[17:41] *** p6bannerbot sets mode: +v DarthGandalf

[17:42] *** fk_ left
[17:46] <AlexDaniel> oh whoops, yeah, japhb

[17:46] <AlexDaniel> on #moarvm though

[17:47] * AlexDaniel is happy to be half right

[17:47] <timotimo> :)

[17:47] <AlexDaniel> .oO( or half wrong, which one sounds more positive? )

[17:47] <timotimo> thanks

[17:47] <timotimo> it helped

[17:48] *** DarthGandalf left
[17:49] *** spycrab0 joined
[17:49] *** p6bannerbot sets mode: +v spycrab0

[17:59] *** DarthGandalf joined
[17:59] *** p6bannerbot sets mode: +v DarthGandalf

[18:02] *** lizmat left
[18:06] *** Sgeo_ joined
[18:07] *** p6bannerbot sets mode: +v Sgeo_

[18:08] *** Sgeo left
[18:10] *** Sgeo__ joined
[18:10] *** p6bannerbot sets mode: +v Sgeo__

[18:12] *** Sgeo_ left
[18:32] *** lizmat joined
[18:33] *** p6bannerbot sets mode: +v lizmat

[18:48] *** domidumont joined
[18:49] *** p6bannerbot sets mode: +v domidumont

[18:53] *** patrickz joined
[18:53] *** p6bannerbot sets mode: +v patrickz

[18:57] *** HaraldJoerg joined
[18:57] *** p6bannerbot sets mode: +v HaraldJoerg

[19:05] *** domidumont left
[19:08] *** dylanwh left
[19:13] *** HaraldJoerg1 joined
[19:14] *** p6bannerbot sets mode: +v HaraldJoerg1

[19:14] *** HaraldJoerg left
[19:33] *** dylanwh joined
[19:34] *** p6bannerbot sets mode: +v dylanwh

[19:38] *** pecastro joined
[19:38] *** |oLa| joined
[19:38] *** p6bannerbot sets mode: +v pecastro

[19:39] *** p6bannerbot sets mode: +v |oLa|

[19:42] *** |oLa| left
[19:50] <timotimo> m: my @aoa = (my int8 @ = (0..1).roll(10)) xx 10; .WHERE.say for @aoa

[19:50] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «140473474368856␤140473474368856␤140473474368856␤140473474368856␤140473474368856␤140473474368856␤140473474368856␤140473474368856␤140473474368856␤140473474368856␤»

[19:50] <timotimo> oh, hah

[19:50] <timotimo> is that state?

[19:51] <timotimo> m: my @aoa = (my int8 @x = (0..1).roll(10)) xx 10; .WHERE.say for @aoa

[19:51] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «140191386219928␤140191386219928␤140191386219928␤140191386219928␤140191386219928␤140191386219928␤140191386219928␤140191386219928␤140191386219928␤140191386219928␤»

[19:51] <timotimo> m: my @aoa = (Array[int8].new((0..1).roll(10)) xx 10; .WHERE.say for @aoa

[19:51] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot use variable @aoa in declaration to initialize itself␤at <tmp>:1␤------> 3(0..1).roll(10)) xx 10; .WHERE.say for @7⏏5aoa␤    expecting any of:␤        term␤»

[19:52] <timotimo> um ... huh?

[19:52] <timotimo> ah, perhaps a paren problem

[19:52] <timotimo> m: my @aoa = (Array[int8].new((0..1).roll(10))) xx 10; .WHERE.say for @aoa

[19:52] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «Type check failed in assignment to ; expected int8 but got Int (1)␤  in block <unit> at <tmp> line 1␤␤»

[19:52] <timotimo> m: my @aoa = (Array[int8].new(|(0..1).roll(10))) xx 10; .WHERE.say for @aoa

[19:52] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «Type check failed in assignment to ; expected int8 but got Int (1)␤  in block <unit> at <tmp> line 1␤␤»

[19:52] <timotimo> oh jeez

[19:54] <timotimo> i guess braces should help

[19:55] <timotimo> m: my @aoa = (do { my int8 @x = (0..1).roll(10) }) xx 10; .WHERE.say for @aoa

[19:55] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «140598156011776␤140598156035088␤140598156037456␤140598156039824␤140598156042192␤140598156044560␤140598156046928␤140598156049296␤140598156051664␤140598156054032␤»

[19:55] <timotimo> nice

[20:05] <timotimo> m: my int8 @foo = 1, 2, 3; my int8 @bar = 9, 9, 9; @foo.splice(0, 3, @bar)

[20:05] <camelia> rakudo-moar 6a6b0afbe: ( no output )

[20:05] <timotimo> m: my int8 @foo = 1, 2, 3; my int8 @bar = 9, 9, 9; my @a = @foo, @bar; @a[0].splice(0, 3, @a[1])

[20:05] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «This type (Scalar) does not support elems␤  in block <unit> at <tmp> line 1␤␤»

[20:05] <timotimo> m: my int8 @foo = 1, 2, 3; my int8 @bar = 9, 9, 9; my @a = @foo, @bar; @a[0].splice(0, 3, @a[1]<>)

[20:05] <camelia> rakudo-moar 6a6b0afbe: ( no output )

[20:05] <timotimo> m: my int8 @foo = 1, 2, 3; my int8 @bar = 9, 9, 9; my @a = @foo, @bar; @a[0].splice(0, 3, @a[1]<>); say @a.perl

[20:05] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «[array[int8].new(9, 9, 9), array[int8].new(9, 9, 9)]␤»

[20:05] <timotimo> interesting, i wonder if this broke in postrelease-opts

[20:06] <timotimo> or fixed in rakudo

[20:10] <timotimo> or maybe my code is sufficiently different from what's in irc

[20:13] <timotimo> m: my $h = 5; my $w = 7; my @rows    = (do { my int8 @a = (0..1).roll($w + 2) }) xx $h + 2; @rows[0].splice(0, $w + 2, @rows[$h + 1]);

[20:13] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «This type (Scalar) does not support elems␤  in block <unit> at <tmp> line 1␤␤»

[20:13] <timotimo> so, i wonder what i did wrong there

[20:15] *** cognominal-p6 joined
[20:15] <timotimo> m: my $h = 5; my $w = 7; my @rows    = (do { my int8 @a = (0..1).roll($w + 2) }) xx $h + 2; @rows[0].splice(0, 5, @rows[1]);

[20:15] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «This type (Scalar) does not support elems␤  in block <unit> at <tmp> line 1␤␤»

[20:16] *** p6bannerbot sets mode: +v cognominal-p6

[20:18] <timotimo> this something to do with slurpy args in general, i wonder?

[20:18] <timotimo> m: my $h = 5; my $w = 7; my @rows    = (do { my int8 @a = (0..1).roll($w + 2) }) xx $h + 2; @rows[0].&splice(0, 5, @rows[1]);

[20:18] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «This type (Scalar) does not support elems␤  in block <unit> at <tmp> line 1␤␤»

[20:18] <timotimo> ok at least it's the same with the sub form

[20:19] *** dct joined
[20:19] *** p6bannerbot sets mode: +v dct

[20:22] *** zakharyas left
[20:23] *** Herby_ joined
[20:24] *** p6bannerbot sets mode: +v Herby_

[20:25] <Herby_> o/

[20:33] *** aindilis joined
[20:34] *** p6bannerbot sets mode: +v aindilis

[20:47] <DrForr> o/'

[20:47] *** HaraldJoerg1 is now known as HaraldJoerg

[20:54] *** eliasr left
[21:21] *** sotona left
[21:22] *** kerframil joined
[21:22] *** p6bannerbot sets mode: +v kerframil

[21:24] *** l0de10 joined
[21:25] *** l0de10 left
[21:26] *** patrickz left
[21:33] *** Herby_ left
[21:34] *** fake_space_whale left
[21:35] *** fake_space_whale joined
[21:35] *** rfold left
[21:35] *** p6bannerbot sets mode: +v fake_space_whale

[21:55] <Xliff> Is there a way to get NativeCall to accept a function pointer, where the arguments can be determined at runtime?

[21:55] *** sotona joined
[21:56] *** p6bannerbot sets mode: +v sotona

[21:59] *** sotona left
[22:02] *** Exodist left
[22:08] <DrForr> At runtime? That sounds like a vsprintf-like situation.

[22:09] <DrForr> (I don't have an answer, just an analogy to a common C case that might help.

[22:10] <DrForr> I'm pretty sure that sprintf() builds its call list through macros and maybe looking at those might help.

[22:11] <DrForr> I"m guessing offhand that you'd have to build the arguments and write a helper that pushes them onto the stack.

[22:11] <timotimo> va_list is ... rather fun

[22:12] *** Exodist joined
[22:12] <DrForr> for strange values of fun, though it'd be very much worth encapsulating.

[22:12] *** p6bannerbot sets mode: +v Exodist

[22:14] <timotimo> it's hard to encapsulate, as putting the functionality into functions will give you a new stack frame, and they will ever only work on their own stack frames under those circumstances

[22:18] <DrForr> I've only ever written an sprintf-alike once, and that was quite enough for me. I don't remember the details, which is probably a blessing, as I remember reading assembly at one point.

[22:18] <Xliff> No, I think va_list for Perl6 will need to use a C-based helper.

[22:18] <Xliff> Pass the va part as a CArray to the helper and let it do the work.

[22:19] <Xliff> Makes trying to do that in a flexible manner rather... not fun.

[22:19] <Xliff> No. I was more thinking callbacks, but I was hoping to cheat.

[22:19] <Xliff> Next question....

[22:20] <Xliff> Is there any way to use caller() to emulate "protected" methods? I would think so.

[22:20] <Xliff> Take the caller, check the package name to insure it is in the right namespace.

[22:21] <timotimo> m: sub test { say CALLER::.^methods }

[22:21] <camelia> rakudo-moar 6a6b0afbe: ( no output )

[22:21] <timotimo> m: sub test { say CALLER::.^methods }; test

[22:21] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «(new WHICH BIND-KEY EXISTS-KEY Method+{is-nodal}.new Method+{is-nodal}.new BUILDALL lazy-if Method+{is-nodal}.new Method+{is-nodal}.new Method+{is-nodal}.new Capture race Method+{is-nodal}.new of FLATTENABLE_LIST Method+{is-nodal}.new Method+{is-nodal…»

[22:22] <Xliff> The trick is to know what I can get out of caller()

[22:23] <timotimo> ah, CALLER is a pseudostash of course

[22:23] <timotimo> m: sub test { say CALLER::('::?PACKAGE') }; package Lol { our sub loltester { test } }; test; Lol::loltester;

[22:23] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «No such symbol 'CALLER::::?PACKAGE'␤  in sub test at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:23] <Xliff> Mebbe callframe() would be a better alternative?

[22:24] <timotimo> m: sub test { say CALLER::.WHO{'::?PACKAGE'} }; package Lol { our sub loltester { test } }; test; Lol::loltester;

[22:24] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «(Any)␤(Any)␤»

[22:24] <timotimo> m: sub test { say CALLER::.WHO.keys }; package Lol { our sub loltester { test } }; test; Lol::loltester;

[22:24] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «()␤()␤»

[22:24] <timotimo> hum.

[22:24] <timotimo> m: sub test { say CALLER::.WHO{'$?PACKAGE'} }; package Lol { our sub loltester { test } }; test; Lol::loltester;

[22:24] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «(Any)␤(Any)␤»

[22:25] <timotimo> weird

[22:25] <timotimo> sub test { .say given CALLER::(Q[$?PACKAGE]) }; test

[22:25] <timotimo> m: sub test { .say given CALLER::(Q[$?PACKAGE]) }; test

[22:25] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «(GLOBAL)␤»

[22:25] <timotimo> m: sub test { .say given CALLER::(Q[$?PACKAGE]) }; package Lol { our sub loltester { test } }; test; loltester

[22:25] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    loltester used at line 1␤␤»

[22:25] <timotimo> m: sub test { .say given CALLER::(Q[$?PACKAGE]) }; package Lol { our sub loltester { test } }; test; Lol::loltester

[22:25] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «(GLOBAL)␤No such symbol 'CALLER::$?PACKAGE'␤  in sub test at <tmp> line 1␤  in sub loltester at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:25] <timotimo> m: sub test { .say given CALLERS::(Q[$?PACKAGE]) }; package Lol { our sub loltester { test } }; test; Lol::loltester

[22:25] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «(GLOBAL)␤(Lol)␤»

[22:26] <timotimo> there we go

[22:26] <timotimo> how do you like this, Xliff?

[22:27] <Xliff> Hmmm...

[22:27] *** sotona joined
[22:27] <Xliff> m: sub test { .say given CALLERS::(Q[$?PACKAGE]) }; Class A { method a { test; }; }; package Lol { our sub loltester { test } }; test; Lol::loltester; A.a;

[22:27] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «5===SORRY!5===␤Undeclared names:␤    A used at line 1␤    Class used at line 1␤␤Other potential difficulties:␤    Useless declaration of a has-scoped method in mainline (did you mean 'my method a'?)␤    at <tmp>:1␤    ------> 3LER…»

[22:27] *** vrurg joined
[22:27] *** p6bannerbot sets mode: +v sotona

[22:28] <Xliff> m: sub test { .say given CALLERS::(Q[$?PACKAGE]) }; class A { method a { test; }; }; package Lol { our sub loltester { test } }; test; Lol::loltester; A.a;

[22:28] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «(GLOBAL)␤(Lol)␤(A)␤»

[22:28] <Xliff> m: sub test { .say given CALLERS::(Q[$?PACKAGE]) }; class A::A { method a { test; }; }; package Lol { our sub loltester { test } }; test; Lol::loltester; A.a;

[22:28] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «(GLOBAL)␤No such method 'a' for invocant of type 'A'␤  in block <unit> at <tmp> line 1␤␤(Lol)␤»

[22:28] <Xliff> m: sub test { .say given CALLERS::(Q[$?PACKAGE]) }; class A::A { method a { test; }; }; package Lol { our sub loltester { test } }; test; Lol::loltester; A::A.a;

[22:28] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «(GLOBAL)␤(Lol)␤(A)␤»

[22:28] *** p6bannerbot sets mode: +v vrurg

[22:28] <Xliff> Hrm. A, not A::A

[22:28] <timotimo> maybe needs .longname or something

[22:29] <Xliff> m: sub test { .longname.say given CALLERS::(Q[$?PACKAGE]) }; class A::A { method a { test; }; }; package Lol { our sub loltester { test } }; test; Lol::loltester; A::A.a;

[22:29] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «No such method 'longname' for invocant of type 'GLOBAL'␤  in sub test at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:29] <Xliff> m: sub test { .say given CALLERS::(Q[$?PACKAGE]).longname }; class A::A { method a { test; }; }; package Lol { our sub loltester { test } }; test; Lol::loltester; A::A.a;

[22:29] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «No such method 'longname' for invocant of type 'GLOBAL'␤  in sub test at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:30] <Xliff> m: sub test { callers(1).code.longname.say }; package Lol { sub lol { test; } }; Lol::lol.test;

[22:30] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    callers used at line 1␤␤»

[22:30] <Xliff> m: sub test { callframe(1).code.longname.say }; package Lol { sub lol { test; } }; Lol::lol.test;

[22:30] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «Could not find symbol '&lol'␤  in block <unit> at <tmp> line 1␤␤»

[22:30] <Xliff> m: sub test { callframe(1).code.longname.say }; package Lol { our sub lol { test; }; }; Lol::lol.test;

[22:30] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «No such method 'longname' for invocant of type 'Sub'␤  in sub test at <tmp> line 1␤  in sub lol at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:31] <Xliff> m: sub test { callframe(1).code.package.say }; package Lol { our sub lol { test; }; }; Lol::lol.test;

[22:31] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «(Lol)␤No such method 'test' for invocant of type 'Bool'. Did you mean any of these?␤    List␤    Set␤    gist␤    list␤␤  in block <unit> at <tmp> line 1␤␤»

[22:31] <Xliff> m: sub test { callframe(1).code.^methods.say }; package Lol { our sub lol { test; }; }; Lol::lol.test;

[22:31] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «(<anon> yada <anon> multi <anon> <anon> <anon> package <anon> <anon> <anon> <anon> <anon> unwrap <anon> <anon> gist cando soft <anon> <anon> <anon> onlystar candidates leave perl wrap <anon> BUILDALL of pos add_phaser fire_if_phasers has-phasers <anon…»

[22:31] <Xliff> m: sub test { callframe(1).code.package.say }; package Lol { our sub lol { test; }; }; Lol::lol.test;

[22:31] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «(Lol)␤No such method 'test' for invocant of type 'Bool'. Did you mean any of these?␤    List␤    Set␤    gist␤    list␤␤  in block <unit> at <tmp> line 1␤␤»

[22:33] <Xliff> m: sub test { .say given CALLERS::(Q[$?CLASS]) }; class A::A { method a { test; }; }; package Lol { our sub loltester { test } }; test; Lol::loltester; A::A.a;

[22:33] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «No such symbol 'CALLERS::$?CLASS'␤  in sub test at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:33] *** dp311 joined
[22:35] <Xliff> m: sub test { callframe(1).code.^name.say }; package Lol { our sub lol { test; }; }; Lol::lol.test;

[22:35] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «Sub␤No such method 'test' for invocant of type 'Bool'. Did you mean any of these?␤    List␤    Set␤    gist␤    list␤␤  in block <unit> at <tmp> line 1␤␤»

[22:35] <Xliff> m: sub test { callframe(1).code.^name.say }; package Lol { our sub lol { test; }; }; Lol.test;

[22:35] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «No such method 'test' for invocant of type 'Lol'␤  in block <unit> at <tmp> line 1␤␤»

[22:35] <Xliff> m: sub test { callframe(1).code.^name.say }; package Lol { our sub lol { test; }; }; Lol::test;

[22:35] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «Could not find symbol '&test'␤  in block <unit> at <tmp> line 1␤␤»

[22:35] <Xliff> m: our sub test { callframe(1).code.^name.say }; package Lol { our sub lol { test; }; }; Lol::test;

[22:35] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «Block␤»

[22:36] <Xliff> m: our sub test { callframe(1).code.package }; package Lol { our sub lol { test; }; }; Lol::test;

[22:36] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «No such method 'package' for invocant of type 'Block'␤  in sub test at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:36] <Xliff> m: our sub test { callframe(1).code.name }; package Lol { our sub lol { test; }; }; Lol::test;

[22:36] <camelia> rakudo-moar 6a6b0afbe: ( no output )

[22:36] <Xliff> m: our sub test { callframe(1).code.name.say }; package Lol { our sub lol { test; }; }; Lol::test;

[22:36] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «<unit>␤»

[22:36] *** dp311 left
[22:36] <Xliff> m: our sub test { callframe(0).code.name.say }; package Lol { our sub lol { test; }; }; Lol::test;

[22:36] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «test␤»

[22:39] *** sauvin left
[22:41] *** sauvin joined
[22:41] *** p6bannerbot sets mode: +v sauvin

[22:43] <Xliff> timotimo: ↓

[22:43] <Xliff> m: our sub test { callframe(1).code.package.^name.say }; package Lol { our sub lol { test; }; }; class A::B { method a { test; }; }; Lol::lol; A::B.a

[22:43] <camelia> rakudo-moar 6a6b0afbe: OUTPUT: «Lol␤A::B␤»

[23:01] *** sotona left
[23:01] <Geth> ¦ doc: 36e433adad | 陈梓立++ (committed using GitHub Web editor) | doc/Type/Grammar.pod6

[23:01] <Geth> ¦ doc: Clarify how *%opt parameter works

[23:01] <Geth> ¦ doc: 

[23:01] <Geth> ¦ doc: the most important point is distinguish compile time adverbs and run time ones.

[23:01] <Geth> ¦ doc: 

[23:01] <synopsebot> Link: https://doc.perl6.org/type/Grammar

[23:01] <Geth> ¦ doc: this close #1651

[23:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/36e433adad

[23:02] <fake_space_whale>  when using the ». operator, is there a way of making the parameters be re-evaluated each time? For example if I want to pass a random number

[23:02] <fake_space_whale> ?

[23:12] *** pmurias left
[23:22] *** reportable6 left
[23:22] *** reportable6 joined
[23:22] *** ChanServ sets mode: +v reportable6

[23:23] *** p6bannerbot sets mode: +v reportable6

[23:27] *** HaraldJoerg left
[23:34] *** perlguest joined
[23:34] *** p6bannerbot sets mode: +v perlguest

[23:34] *** perlguest left
[23:40] *** kerframil left
[23:42] *** kerframil joined
[23:42] *** p6bannerbot sets mode: +v kerframil

[23:44] *** sotona joined
[23:45] *** p6bannerbot sets mode: +v sotona

[23:45] *** rindolf left
[23:48] *** sotona left
[23:48] *** DarthGandalf left
[23:49] *** DarthGandalf joined
[23:49] *** p6bannerbot sets mode: +v DarthGandalf

[23:50] *** jferrero_ joined
[23:51] *** p6bannerbot sets mode: +v jferrero_

[23:54] *** jferrero left
[23:59] *** pecastro left
[23:59] *** lizmat left
[23:59] *** MasterDuke left
[23:59] *** MasterDuke joined
[23:59] *** herbert.freenode.net sets mode: +v MasterDuke

[23:59] *** p6bannerbot sets mode: +v MasterDuke

