[00:03] *** mcmillhj left
[00:11] *** [particle] joined
[00:12] *** p6bannerbot sets mode: +v [particle]

[00:13] *** mcmillhj joined
[00:13] *** [particle]1 left
[00:13] *** p6bannerbot sets mode: +v mcmillhj

[00:16] *** [particle] left
[00:16] *** [particle] joined
[00:17] *** p6bannerbot sets mode: +v [particle]

[00:17] *** fake_space_whale joined
[00:17] *** mcmillhj left
[00:18] *** p6bannerbot sets mode: +v fake_space_whale

[00:31] *** graphene left
[00:32] *** graphene joined
[00:33] *** p6bannerbot sets mode: +v graphene

[00:35] *** lookatme_q joined
[00:36] *** p6bannerbot sets mode: +v lookatme_q

[00:40] *** graphene left
[00:42] *** graphene joined
[00:43] *** p6bannerbot sets mode: +v graphene

[00:44] *** mcmillhj joined
[00:45] *** p6bannerbot sets mode: +v mcmillhj

[00:50] *** mcmillhj left
[00:52] *** [particle] left
[00:53] *** [particle] joined
[00:54] *** [particle]1 joined
[00:54] *** p6bannerbot sets mode: +v [particle]

[00:54] *** p6bannerbot sets mode: +v [particle]1

[00:56] *** mcmillhj joined
[00:57] *** p6bannerbot sets mode: +v mcmillhj

[00:57] *** [particle] left
[01:01] *** mcmillhj left
[01:06] <Geth> ¦ doc: Kaiepi++ created pull request #2299: Write networking API section for JS nutshell

[01:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2299

[01:09] *** mcmillhj joined
[01:10] *** p6bannerbot sets mode: +v mcmillhj

[01:14] *** mcmillhj left
[01:17] <Kaiepi> <Kaiepi> net::icmp's far from trivial to implement so i'm going to get started on net::nntp instead for now

[01:18] *** molaf joined
[01:18] *** chenyf left
[01:19] *** p6bannerbot sets mode: +v molaf

[01:22] *** mcmillhj joined
[01:23] *** p6bannerbot sets mode: +v mcmillhj

[01:27] *** mcmillhj left
[01:32] *** molaf left
[01:37] *** chenyf joined
[01:37] *** p6bannerbot sets mode: +v chenyf

[01:38] *** mcmillhj joined
[01:39] *** p6bannerbot sets mode: +v mcmillhj

[01:40] *** stmuk left
[01:41] *** Sgeo joined
[01:42] *** p6bannerbot sets mode: +v Sgeo

[01:42] *** stmuk joined
[01:42] *** Sgeo__ left
[01:43] *** p6bannerbot sets mode: +v stmuk

[01:43] *** mcmillhj left
[01:45] *** molaf joined
[01:45] *** [particle]1 left
[01:45] *** p6bannerbot sets mode: +v molaf

[01:45] *** stmuk_ joined
[01:46] *** [particle] joined
[01:46] *** p6bannerbot sets mode: +v stmuk_

[01:47] *** p6bannerbot sets mode: +v [particle]

[01:48] *** stmuk left
[01:52] *** [particle]1 joined
[01:53] *** p6bannerbot sets mode: +v [particle]1

[01:54] *** [particle] left
[01:54] *** mcmillhj joined
[01:55] *** p6bannerbot sets mode: +v mcmillhj

[01:59] *** mcmillhj left
[02:04] *** [particle]1 left
[02:06] *** [particle] joined
[02:06] *** oodani joined
[02:07] *** p6bannerbot sets mode: +v [particle]

[02:07] *** p6bannerbot sets mode: +v oodani

[02:07] <oodani> hi! i'm experimenting with the hyper operators in rakudo star 2018.06 and i'm wondering why these two expressions behave diferently?

[02:08] <oodani> p6: say ("the".ords.permutations>>.chrs);

[02:08] <camelia> rakudo-moar 9b297074f: OUTPUT: «((t h e) (t e h) (h t e) (h e t) (e t h) (e h t))␤»

[02:08] <oodani> p6: say ("the".ords.permutations.map: *.chrs);

[02:08] <camelia> rakudo-moar 9b297074f: OUTPUT: «(the teh hte het eth eht)␤»

[02:08] <oodani> is the >>. hyper method call operator not equivalent to a .map? from the docs, it sounds like it should be

[02:10] <oodani> i'm aware that >>. doesn't necessarily run the method on each element in order, but there's no side-effects here so that shouldn't be a problem

[02:19] *** [particle]1 joined
[02:19] *** [particle] left
[02:20] *** p6bannerbot sets mode: +v [particle]1

[02:22] *** [particle]1 left
[02:30] *** aborazmeh joined
[02:30] *** aborazmeh left
[02:30] *** aborazmeh joined
[02:30] *** p6bannerbot sets mode: +v aborazmeh

[02:31] *** mcmillhj joined
[02:31] *** p6bannerbot sets mode: +v aborazmeh

[02:31] *** [particle] joined
[02:31] *** p6bannerbot sets mode: +v mcmillhj

[02:32] *** p6bannerbot sets mode: +v [particle]

[02:35] *** mcmillhj left
[02:37] *** [particle]1 joined
[02:37] *** [particle] left
[02:38] *** p6bannerbot sets mode: +v [particle]1

[02:42] *** [particle]1 left
[02:45] *** Herby_ left
[02:48] *** [particle] joined
[02:49] *** p6bannerbot sets mode: +v [particle]

[02:50] *** mcmillhj joined
[02:50] *** p6bannerbot sets mode: +v mcmillhj

[02:54] *** mcmillhj left
[02:57] *** leont left
[03:03] *** [particle]1 joined
[03:03] *** [particle] left
[03:03] *** p6bannerbot sets mode: +v [particle]1

[03:09] *** [particle] joined
[03:10] *** p6bannerbot sets mode: +v [particle]

[03:10] *** [particle]1 left
[03:19] *** [particle] left
[03:19] *** [particle] joined
[03:20] *** p6bannerbot sets mode: +v [particle]

[03:22] *** mcmillhj joined
[03:23] *** p6bannerbot sets mode: +v mcmillhj

[03:23] *** [particle] left
[03:28] *** mcmillhj left
[03:28] *** [particle] joined
[03:29] *** p6bannerbot sets mode: +v [particle]

[03:33] *** ZofBot joined
[03:33] *** ChanServ sets mode: +v ZofBot

[03:34] *** p6bannerbot sets mode: +v ZofBot

[03:34] *** Zoffix joined
[03:34] *** p6bannerbot sets mode: +v Zoffix

[03:36] *** [particle] left
[03:36] <Zoffix> oodani: no, it's not equivalent to a map. Along with being a hint to the compiler that it can parallelize the call, the behaviour is also affected by nodality of the method, depending on which either nodemap or deepmap is used. That difference is documented in Traps ( https://docs.perl6.org/language/traps#Using_%C2%BB_and_map_interchangeably ) if the docs you read don't make it clear that hyper is not the same

[03:36] <yoleaux> 2 Sep 2018 14:13Z <AlexDaniel> Zoffix: what's your predicted date for v6.d release? I wanna synchronize it a bit with my plans for future squashathons

[03:36] <yoleaux> 2 Sep 2018 14:13Z <AlexDaniel> Zoffix: I mean, synchronize squashathons with whatever you reply :)

[03:36] <Zoffix> as map, then they should be amended.

[03:38] *** [particle] joined
[03:38] <oodani> aha! https://docs.perl6.org/language/operators#postfix_%C2%BB._/_postfix_%3E%3E. is what i was reading, so it probably needs clarifying?

[03:38] <Zoffix> .tell AlexDaniel I want to release 6.d roast on Diwali (~Nov. 6) and for the next rakudo release after that to have 6.d enabled by default. 

[03:38] <yoleaux> Zoffix: I'll pass your message to AlexDaniel.

[03:38] *** mcmillhj joined
[03:39] *** p6bannerbot sets mode: +v [particle]

[03:39] *** p6bannerbot sets mode: +v mcmillhj

[03:39] <oodani> your irc client may or may not actually linkify that entire link :p

[03:39] <oodani> anyway thanks, the link to the traps page helped a lot! :)

[03:42] *** mcmillhj left
[03:45] *** SourceBaby joined
[03:45] *** ChanServ sets mode: +v SourceBaby

[03:45] *** [particle] left
[03:45] *** [particle] joined
[03:46] *** p6bannerbot sets mode: +v SourceBaby

[03:46] *** p6bannerbot sets mode: +v [particle]

[03:47] <Geth> ¦ doc: 3663c35b6a | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/operators.pod6

[03:47] <Geth> ¦ doc: Expand hyper methcall info

[03:47] <Geth> ¦ doc: 

[03:47] <Geth> ¦ doc: Document the whole nodality business.

[03:47] <Geth> ¦ doc: (really wordy paragraph; could use improvement)

[03:47] <synopsebot> Link: https://doc.perl6.org/language/operators

[03:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3663c35b6a

[03:47] <Zoffix> oodani: thanks. Added nodality info to that page.

[03:47] *** Zoffix left
[03:48] <oodani> looks good :)

[03:50] *** aborazmeh left
[03:54] *** xoryo joined
[03:55] *** p6bannerbot sets mode: +v xoryo

[03:57] *** [particle] left
[03:58] *** [particle] joined
[03:58] *** p6bannerbot sets mode: +v [particle]

[04:07] *** mcmillhj joined
[04:08] *** p6bannerbot sets mode: +v mcmillhj

[04:12] *** mcmillhj left
[04:30] *** mcmillhj joined
[04:31] *** p6bannerbot sets mode: +v mcmillhj

[04:35] *** vrurg left
[04:36] *** mcmillhj left
[04:38] *** vrurg joined
[04:38] *** p6bannerbot sets mode: +v vrurg

[04:47] *** mcmillhj joined
[04:48] *** p6bannerbot sets mode: +v mcmillhj

[04:52] *** mcmillhj left
[04:53] *** curan joined
[04:53] *** p6bannerbot sets mode: +v curan

[05:11] *** [particle] left
[05:11] *** [particle] joined
[05:12] *** p6bannerbot sets mode: +v [particle]

[05:13] *** spycrab0 left
[05:14] *** molaf left
[05:15] *** [particle]1 joined
[05:16] *** p6bannerbot sets mode: +v [particle]1

[05:18] *** [particle] left
[05:20] *** [particle]1 left
[05:21] *** fake_space_whale left
[05:21] *** mcmillhj joined
[05:22] *** p6bannerbot sets mode: +v mcmillhj

[05:23] *** [particle] joined
[05:24] *** p6bannerbot sets mode: +v [particle]

[05:26] *** mcmillhj left
[05:29] *** [particle]1 joined
[05:30] *** p6bannerbot sets mode: +v [particle]1

[05:30] *** [particle] left
[05:33] *** [particle]1 left
[05:34] *** [particle] joined
[05:35] *** p6bannerbot sets mode: +v [particle]

[05:38] *** sauvin joined
[05:38] *** p6bannerbot sets mode: +v sauvin

[05:41] *** [particle] left
[05:45] *** AlexDaniel left
[05:47] *** mcmillhj joined
[05:47] *** jmerelo joined
[05:47] *** p6bannerbot sets mode: +v mcmillhj

[05:48] *** p6bannerbot sets mode: +v jmerelo

[05:49] *** epony left
[05:51] *** kerframil joined
[05:51] *** p6bannerbot sets mode: +v kerframil

[05:51] *** mcmillhj left
[06:00] *** mcmillhj joined
[06:00] *** p6bannerbot sets mode: +v mcmillhj

[06:01] <oodani> hmm, the rakudo repl seems to get "confused" by special unicode characters? for instance, if i write a string between the guillemets «», the repl thinks that my command is two columns wider than it actually is, and attempting to go back and edit the command behaves strangely since the actual position of the cursor differs from where the repl expects it to be

[06:02] <oodani> is there a workaround? it sounds like the linenoise library doesn't do utf-8, since that's one of the main features of linenoise ng :/

[06:03] <El_Che> oodani: check Readline?

[06:03] <El_Che> remove Linenoise first

[06:04] *** mcmillhj left
[06:07] <oodani> hmm, 'zef install Readline' is having trouble finding the actual library. probably because this is a mac and everything's a mess

[06:07] <jmerelo> oodani: that shouldn't have anything to do with mac stuff. 

[06:08] *** dct joined
[06:08] *** p6bannerbot sets mode: +v dct

[06:09] <oodani> Cannot locate native library 'libreadline.7.dylib': dlopen(libreadline.7.dylib, 1): image not found

[06:09] <oodani> hmm

[06:09] *** [particle] joined
[06:10] *** p6bannerbot sets mode: +v [particle]

[06:10] <jmerelo> oodani: ah, OK. You might need to install that library independently first.

[06:10] <jmerelo> Or use Linenoise. That should work well.

[06:11] <El_Che> no, the problem is linenoise

[06:11] <El_Che> :)

[06:11] <oodani> that's the thing, readline is installed. it's a weird homebrew thing where it's not in the usual library directories though. tried doing LDFLAGS="-L/usr/local/opt/readline/lib" CPPFLAGS="-I/usr/local/opt/readline/include" zef install Readline and got the same result so. hmm

[06:12] <jmerelo> It shouldn't be that...

[06:12] <jmerelo> Hum, I have the same problem in Linux.

[06:12] <jmerelo> Only I use the terminal in Emacs, which solves that problem.

[06:13] <jmerelo> oodani: I think it's NativeCall who's erroring... It's also a dynamic library, LDFLAGS is for static...

[06:15] <El_Che> LD_LIBRARY_PATH=/usr/local/opt/readline/lib perl6

[06:15] <El_Che> does that work?

[06:15] <El_Che> (ah it fails at install time)

[06:15] <jmerelo> El_Che: NativeCall should use that env variable anyway

[06:18] <oodani> "LD_LIBRARY_PATH=/usr/local/opt/readline/lib zef install Readline" followed by "LD_LIBRARY_PATH=/usr/local/opt/readline/lib perl6" worked, and the unicode char problem doesn't exist under readline

[06:19] <oodani> it's kind of a hassle though

[06:19] <jmerelo> oodani: right. Please create an issue in the repo so that they are aware of that problem... Or better, a PR

[06:19] <El_Che> oodani: it's part of the mac setup. You need to figure out how to make the setup global

[06:20] <El_Che> (or make it global for the user)

[06:20] <jmerelo> I guess export will work in the Mac if you use bash or zsh

[06:20] <oodani> i don't think i can. the reason homebrew doesn't make its readline installation global is that macos provides bsd libedit under the same name, and stuff breaks if you shadow it

[06:20] <El_Che> echo "export LD_LIBRARY_PATH=/usr/local/opt/readline/lib" > ~/.bashrc

[06:20] <El_Che> or better:

[06:21] <El_Che> alias perl6="LD_LIBRARY_PATH=/usr/local/opt/readline/lib perl6"

[06:21] <El_Che> something like that

[06:22] <oodani> yeah, an alias like that should work. i don't think i'll be needing a repl from noninteractive invocations of perl6 so. all good

[06:23] <El_Che> until you have an other lib installed in a weird place

[06:23] <oodani> yeah, until then

[06:23] <El_Che> :)

[06:24] <El_Che> haven't use a mac much for dev (I use Linux for that and general stuff). The mac machien I have (from work) is a glorified typewriter I use in the train :)

[06:24] <oodani> libraries in weird places is gonna keep happening, since that's how homebrew avoids collisions between libraries it installs and the ones apple installed

[06:24] <oodani> maybe i just need to give up on apple tbh

[06:24] <jmerelo> El_Che: glorified _and_ expensive

[06:25] <El_Che> jmerelo: well, it's an air so not very expensive

[06:25] <El_Che> (although it is if you consider the age of the components sold as new)

[06:27] <El_Che> a good machine though

[06:28] <El_Che> (the last with a normal keyboard it seems)

[06:28] <jmerelo> :-)

[06:29] *** mcmillhj joined
[06:30] *** p6bannerbot sets mode: +v mcmillhj

[06:31] *** [particle] left
[06:34] *** mcmillhj left
[06:35] *** domidumont joined
[06:36] *** p6bannerbot sets mode: +v domidumont

[06:39] *** zxcvz joined
[06:40] *** p6bannerbot sets mode: +v zxcvz

[06:42] *** riatre joined
[06:42] *** [particle] joined
[06:43] *** p6bannerbot sets mode: +v riatre

[06:43] *** p6bannerbot sets mode: +v [particle]

[06:49] *** zxcvz left
[06:49] *** [particle]1 joined
[06:50] *** sno joined
[06:50] *** p6bannerbot sets mode: +v [particle]1

[06:50] *** [particle] left
[06:50] *** p6bannerbot sets mode: +v sno

[06:59] *** mcmillhj joined
[06:59] *** p6bannerbot sets mode: +v mcmillhj

[07:04] *** mcmillhj left
[07:11] *** [particle] joined
[07:11] *** mcmillhj joined
[07:12] *** p6bannerbot sets mode: +v [particle]

[07:12] *** p6bannerbot sets mode: +v mcmillhj

[07:13] *** [particle]1 left
[07:15] *** domidumont left
[07:16] *** mcmillhj left
[07:16] *** domidumont joined
[07:17] *** p6bannerbot sets mode: +v domidumont

[07:18] *** epony joined
[07:18] *** p6bannerbot sets mode: +v epony

[07:24] *** rindolf joined
[07:25] *** p6bannerbot sets mode: +v rindolf

[07:31] *** domidumont left
[07:32] *** domidumont joined
[07:33] *** p6bannerbot sets mode: +v domidumont

[07:43] *** mcmillhj joined
[07:44] *** p6bannerbot sets mode: +v mcmillhj

[07:45] *** SHODAN joined
[07:45] *** p6bannerbot sets mode: +v SHODAN

[07:48] *** mcmillhj left
[07:59] *** scimon joined
[08:00] *** p6bannerbot sets mode: +v scimon

[08:01] *** pmurias joined
[08:02] *** p6bannerbot sets mode: +v pmurias

[08:02] <pmurias> m: my int $num = 2**64-1;

[08:02] <camelia> rakudo-moar da0a81e38: OUTPUT: «Cannot unbox 64 bit wide bigint into native integer␤  in block <unit> at <tmp> line 1␤␤»

[08:02] *** mcmillhj joined
[08:03] <pmurias> ^^ are we using a right bigint width here?

[08:03] *** p6bannerbot sets mode: +v mcmillhj

[08:03] <moritz> could be. int goes from -2**63 to 2**63-1

[08:04] <moritz> m: my int $num = 2**63-1;

[08:04] <camelia> rakudo-moar da0a81e38: ( no output )

[08:04] <masak> curious why 63, not 64. are we doing something with that last bit?

[08:04] <pmurias> masak: you mean storing the sign?

[08:05] * masak ponders this

[08:05] <masak> yes, that makes sense ;)

[08:06] <masak> it would be from 0 upto 2**64-1 if 'twere unsigned

[08:06] *** noganex left
[08:06] <pmurias> the part in the message I'm concerned about is that we are using the unsigned bit size in the error messages that's thrown when storing to a signed integer

[08:07] *** mcmillhj left
[08:07] *** noganex joined
[08:08] <pmurias> so you can get a 'cannot unbox a 64 bit wid bigint' when unboxing it into a 64 bit int 

[08:08] *** p6bannerbot sets mode: +v noganex

[08:12] *** HaraldJoerg joined
[08:13] *** p6bannerbot sets mode: +v HaraldJoerg

[08:15] *** domidumont left
[08:15] <moritz> we should add 1 to that error message

[08:16] *** domidumont joined
[08:16] <moritz> because the sign is represented in the bigint as well, even for positive numbers

[08:16] *** p6bannerbot sets mode: +v domidumont

[08:18] <pmurias> I'm not sure what that size is supposed to be

[08:19] <pmurias> is that the actuall stored size, the size the bigint would take after unboxing or the size when stored as an unsigned number (current)

[08:20] *** donaldh joined
[08:20] <pmurias> not super important but when printing out some extra info it would be good not to mislead people

[08:20] <Altreus> Anyone made a URL encode module yet?

[08:20] <Altreus> wait this is going to be built in isn't it

[08:21] * masak .oO( the bigint is a lie! )

[08:21] *** p6bannerbot sets mode: +v donaldh

[08:21] <Altreus> gosh, it's URI::Encode not URL

[08:21] <Altreus> silly me

[08:31] *** mcmillhj joined
[08:32] *** p6bannerbot sets mode: +v mcmillhj

[08:34] *** zakharyas joined
[08:35] *** p6bannerbot sets mode: +v zakharyas

[08:35] *** mcmillhj left
[08:38] <donaldh> Something odd in https://docs.perl6.org/routine/%C2%AB%20%C2%BB#circumfix_%C2%AB_%C2%BB

[08:38] <donaldh> The 'interpolating quote-words operator' link is back to the same page

[08:45] *** mcmillhj joined
[08:46] *** p6bannerbot sets mode: +v mcmillhj

[08:50] *** mcmillhj left
[08:53] *** pmurias left
[08:54] *** AlexDaniel joined
[08:54] *** p6bannerbot sets mode: +v AlexDaniel

[08:54] *** pmurias joined
[08:55] *** p6bannerbot sets mode: +v pmurias

[08:57] *** noganex_ joined
[08:58] *** p6bannerbot sets mode: +v noganex_

[08:59] <AlexDaniel`> So colabti should be working again

[08:59] <yoleaux> 5 Sep 2018 13:40Z <El_Che> AlexDaniel`: That needs some work. Travis is x64 only, so will have to run a qemu image to run the acutal image. It can be done, but not easily

[09:00] <AlexDaniel> El_Che: ok I see

[09:00] <yoleaux> 03:38Z <Zoffix> AlexDaniel: I want to release 6.d roast on Diwali (~Nov. 6) and for the next rakudo release after that to have 6.d enabled by default.

[09:00] *** noganex left
[09:00] <AlexDaniel> Zoffix: OK, thank you!

[09:13] *** robertle joined
[09:14] *** p6bannerbot sets mode: +v robertle

[09:21] *** mcmillhj joined
[09:21] *** harrison joined
[09:21] *** p6bannerbot sets mode: +v mcmillhj

[09:22] *** p6bannerbot sets mode: +v harrison

[09:25] *** leont joined
[09:25] *** mcmillhj left
[09:25] *** p6bannerbot sets mode: +v leont

[09:34] *** mcmillhj joined
[09:35] *** p6bannerbot sets mode: +v mcmillhj

[09:39] *** mcmillhj left
[09:43] *** Grrrr joined
[09:44] *** p6bannerbot sets mode: +v Grrrr

[09:48] <jmerelo> donaldh: hum. Will check it out. Can you please create an issue?

[09:52] *** zakharyas left
[09:53] <buggable> New CPAN upload: Hash-with-0.0.2.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/Hash-with-0.0.2.tar.gz

[09:54] *** mcmillhj joined
[09:54] <Geth> ¦ doc: 3bffd8282e | (JJ Merelo)++ | doc/Language/operators.pod6

[09:54] <Geth> ¦ doc: Fixes link found by donaldh

[09:54] <Geth> ¦ doc: 

[09:54] <Geth> ¦ doc: It didn't exist, so it pointed to the same place. Fixed now, I guess.

[09:54] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3bffd8282e

[09:54] <synopsebot> Link: https://doc.perl6.org/language/operators

[09:55] <jmerelo> donaldh: ^^^ fixed

[09:55] *** p6bannerbot sets mode: +v mcmillhj

[09:57] *** Grrrr left
[09:58] *** mcmillhj left
[10:00] *** MasterDuke left
[10:06] *** lichtkind joined
[10:06] *** p6bannerbot sets mode: +v lichtkind

[10:08] *** andrzjeku joined
[10:09] *** p6bannerbot sets mode: +v andrzjeku

[10:11] *** lichtkind left
[10:12] *** sena_kun joined
[10:13] *** p6bannerbot sets mode: +v sena_kun

[10:14] *** lichtkind joined
[10:15] *** p6bannerbot sets mode: +v lichtkind

[10:18] *** jmerelo left
[10:18] *** lichtkind left
[10:22] *** lichtkind joined
[10:23] *** p6bannerbot sets mode: +v lichtkind

[10:25] *** lichtkind_ joined
[10:26] *** p6bannerbot sets mode: +v lichtkind_

[10:27] *** lichtkind left
[10:27] *** chenyf left
[10:30] *** lichtkind_ left
[10:31] *** lichtkind_ joined
[10:32] *** p6bannerbot sets mode: +v lichtkind_

[10:40] *** dct left
[10:54] *** dct joined
[10:54] *** p6bannerbot sets mode: +v dct

[10:57] *** lichtkind_ left
[10:58] *** chenyf joined
[10:59] *** p6bannerbot sets mode: +v chenyf

[11:00] *** Grrrr joined
[11:01] *** p6bannerbot sets mode: +v Grrrr

[11:02] *** lichtkind_ joined
[11:02] *** chenyf left
[11:02] *** p6bannerbot sets mode: +v lichtkind_

[11:50] <pmurias> how are binary string ops supposed to work?

[11:50] <pmurias> the docs don't tell me what they really do https://docs.perl6.org/routine/~%7C

[11:51] <scimon> So zef reads a couple of json files to work out potential install candidates. Looking at it's it's a list made up of META6.json objects. Is there a way to specify a 3rd list? (For internal modules). I'm hoping there's a config option or file ?

[11:52] *** harrison left
[11:59] <pmurias> with something like ~& how are synthetic graphemes supposed to be treated?

[11:59] <scimon> pmurias: I'm not best to ask as I avoid bit twiddling unless I need to but from the description it turns the strings into bufs zero pads the smaller one and then does a bitwise comparison on them then coerces the result BACK into a string.

[11:59] <scimon> And here's where I go and hide under the sofa.

[12:02] *** zakharyas joined
[12:03] *** p6bannerbot sets mode: +v zakharyas

[12:04] *** lichtkind__ joined
[12:04] *** lichtkind_ left
[12:04] *** p6bannerbot sets mode: +v lichtkind__

[12:05] *** harrison joined
[12:06] *** p6bannerbot sets mode: +v harrison

[12:07] *** pmurias left
[12:10] *** lichtkind__ left
[12:12] *** AlexDaniel left
[12:13] *** chenyf joined
[12:13] <timotimo> imagine the surprise and joy when after months you reach between the cushions of your sofa and pull out a scimon or two!

[12:14] *** p6bannerbot sets mode: +v chenyf

[12:17] *** chenyf left
[12:18] *** pmurias joined
[12:19] *** p6bannerbot sets mode: +v pmurias

[12:19] *** lichtkind__ joined
[12:19] *** RikcreaInfo joined
[12:20] *** p6bannerbot sets mode: +v lichtkind__

[12:20] *** p6bannerbot sets mode: +v RikcreaInfo

[12:21] <scimon> We do tend to breed down here :) 

[12:23] <moritz> if some of the offspring also contributes to Perl 6, I'm all for it :-)

[12:24] <scimon> Meanwhile I'm hoping I'm going to be able to say "We have Perl6 in Production" soon...

[12:24] <timotimo> not long until perl 6 is in produce, too

[12:26] <scimon> Mmmm Tasty.

[12:26] *** chenyf joined
[12:26] *** ExtraCrispy left
[12:26] <pmurias> scimon: how it turns the string into a buf is the omitted part

[12:26] *** p6bannerbot sets mode: +v chenyf

[12:27] <timotimo> at what point does it become "produce", btw? like, when a head of lettuce gets harvested and packaged or something?

[12:28] *** ExtraCrispy joined
[12:29] *** p6bannerbot sets mode: +v ExtraCrispy

[12:29] *** harrison left
[12:34] <pmurias> timotimo: I would guess once it's harvested, based on the wikipedia definition it's not processed

[12:35] *** lichtkind__ is now known as lichtkind

[12:35] <lichtkind> i can overwrite @ $m but how to overwrite @$m ?

[12:36] <lichtkind> i tried sigil namespace but got error

[12:38] *** molaf joined
[12:39] *** p6bannerbot sets mode: +v molaf

[12:40] *** andrzjeku left
[12:48] *** mcmillhj joined
[12:49] *** p6bannerbot sets mode: +v mcmillhj

[12:51] <moritz> lichtkind: can you pleae rephrase that question? I didn't understand it

[12:53] <lichtkind> moritz, the infix op "@" and "%" of the type $m has only catch the the cases:  @ $m and % $m but not @$m %$m which returns something different

[12:54] <moritz> lichtkind: did you write some code? If yes, where is it?

[12:54] <moritz> also, @$m is just $m.list, so you need something that deals with a Positional or an Iterable on the RHS

[12:55] <lichtkind> moritz, in a minute i recheck

[12:59] <scimon> (So... answering my zef question earlier. If I want to DARKPan my repos I need to update the "Repository" section in config.json :)

[13:03] *** lichtkind left
[13:04] *** lichtkind joined
[13:05] *** p6bannerbot sets mode: +v lichtkind

[13:09] *** lichtkind left
[13:14] *** lichtkind joined
[13:14] *** p6bannerbot sets mode: +v lichtkind

[13:21] *** RikcreaInfo left
[13:22] <lichtkind> moritz, i got kicked/traffic issues , not sure what you could read but that @$m gets redirected to .list i got so war i jsut dont know what practically do about that

[13:24] *** aindilis left
[13:24] *** aindilis joined
[13:25] <tyil> lichtkind: o/

[13:25] <lichtkind> tyil: chers

[13:25] <tyil> not sure if you read my direct message on twitter

[13:25] *** p6bannerbot sets mode: +v aindilis

[13:25] <pmurias> timotimo: I can imagine Perl 6 being used to create a GMO, I don't imagine Perl 6 code running on a eddible biological organism

[13:25] <tyil> but the issue you reported seems to be zef related

[13:26] <El_Che> https://www.youtube.com/watch?v=3x7O5cy0TGU <-- jnthn speaking live

[13:26] <lichtkind> tyil i got it and responded

[13:26] <tyil> ah

[13:26] <tyil> then I'm just outdated, sorry

[13:26] <timotimo> ooh, that is *now*!

[13:26] <tyil> samcv tried to repro as well, and she could not get it to fail

[13:27] <pmurias> timotimo: technically Perl 6 programers (who I guess could manually execute Perl 6 code) are *edible* but I hope they don't end up as produce

[13:27] <timotimo> 6lent green

[13:27] <tyil> lichtkind: twitter doesnt show any new messages

[13:28] <tyil> fwiw, I kept track of it in this issue https://gitlab.com/tyil/perl6-app-assixt/issues/18, and will have to assume it's a zef error now

[13:28] <tyil> since we cant repro it in 4 different environments

[13:30] <tyil> also, I think we're having a sprint review at $work, so I'll have to afk

[13:30] <tyil> you can leave me .tell messages on irc if anything important comes up :>

[13:31] *** lichtkind left
[13:32] *** lichtkind joined
[13:32] *** p6bannerbot sets mode: +v lichtkind

[13:32] <timotimo> there's so much swishing noises in the stream :(

[13:33] <timotimo> also, jonathan's shirt is giving fantastic moiree patterns on the stream! \o/

[13:35] <timotimo> .o( how many aquatic lifeforms are using cro )

[13:38] <pmurias> the way I implemented ~|, ~&, ~^ on js is that I convert the string into NFC form do the operations on codes and then convert back into a string

[13:39] <lichtkind> tyil all good im glad you want to solve the issue

[13:51] *** lichtkind_ joined
[13:51] *** lichtkind left
[13:51] *** p6bannerbot sets mode: +v lichtkind_

[13:56] *** lichtkind_ left
[13:58] *** lichtkind_ joined
[13:58] *** p6bannerbot sets mode: +v lichtkind_

[13:59] <colomon> zostay: ping?

[14:02] <pmurias> m: say(("@" ~& " ").perl)

[14:02] <camelia> rakudo-moar 070780e04: OUTPUT: «"\0"␤»

[14:05] *** lichtkind__ joined
[14:05] *** lichtkind_ left
[14:06] *** p6bannerbot sets mode: +v lichtkind__

[14:07] <leont> "P6opaque: no such attribute '$!pos' on type Match in a Int when trying to get a value" is confusing me a little

[14:07] <timotimo> there's at least two ways to get this:

[14:07] <timotimo> having a "method" be called on one type when it was lexically defined in another, and using a $!foo in that method

[14:08] <timotimo> or using nqp::getattr on an object of an incompatible type

[14:08] <leont> I'm matching a string against a regex

[14:08] <timotimo> then you've found a nice internal bug :)

[14:08] <timotimo> can you run perl6 with --ll-exception and give us the backtrace?

[14:08] <timotimo> also maybe the code you're using

[14:08] <timotimo> oh, and also the perl6 --version

[14:12] *** lichtkind__ left
[14:14] *** lichtkind__ joined
[14:14] <leont> http://paste.scsys.co.uk/581690

[14:14] *** p6bannerbot sets mode: +v lichtkind__

[14:15] <timotimo> oh

[14:15] <timotimo> i have an idea

[14:16] <timotimo> m: grammar Foo { method TOP { <item> } }

[14:16] <camelia> rakudo-moar 070780e04: ( no output )

[14:16] <timotimo> m: grammar Foo { method TOP { <item> } }; Foo.parse("99")

[14:16] <camelia> rakudo-moar 070780e04: OUTPUT: «No such method 'MATCH' for invocant of type 'Str'␤  in block <unit> at <tmp> line 1␤␤»

[14:16] *** kerframil left
[14:16] <timotimo> not quite the right one

[14:16] <timotimo> but anyway, it could be the grammar is accidentally calling what it thinks is a regex, but is actually a method inherited from Any

[14:18] <timotimo> or, alternatively, a regex in the grammar is causing an action method to be called that doesn't expect it

[14:19] *** kerframil joined
[14:19] *** p6bannerbot sets mode: +v kerframil

[14:19] <leont> I'm reusing a token in a regex, could that be it?

[14:19] <leont> https://github.com/Leont/getopt-long6/blob/foo/lib/Getopt/Long.pm#L19

[14:21] <timotimo> m: say "foo".sign

[14:21] <camelia> rakudo-moar 070780e04: OUTPUT: «Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5foo' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤»

[14:21] <timotimo> maybe it has to be "my token" and <&sign>

[14:21] <timotimo> try renaming it to something that isn't also an existing method

[14:23] <leont> Yeah, that seems to solve it

[14:30] *** curan left
[14:37] <Altreus> does Perl6 have the concept of a "global" variable in the same way Perl5 does? In that, as long as I fully-qualify the variable name, it will resolve to the most recent runtime-set value, irrespective of where it is or whether I've seen that variable declared?

[14:38] <Altreus> so I can set like $API::Discord::DEBUG = 1 and start outputting debug traces?

[14:42] <leont> Rewrote the thing to a grammar anyway. Slightly more verbose but feels more robust

[14:45] *** molaf left
[14:46] *** Khisanth left
[14:46] <tadzik> Altreus: I think a dynamic variable my be more to your liking

[14:47] <tadzik> those are the ones with a star: $*DEBUG or so

[14:47] <tadzik> then you can set it lexically, not globally

[14:47] <tadzik> as in: { my $*DEBUG = 1; $api.i-will-get-debugged() }; $api.but-i-will-not()

[14:48] <Altreus> hm

[14:49] <tadzik> and I'm pretty sure you can use the same name no matter how many packages you cross, so no need to fully qualify it

[14:49] <Altreus> and it won't complain that it's never heard of it? 🤔

[14:50] <tadzik> m: package Disco { my $*DEBUG = 1; sub rd { say "Debug is: $*DEBUG } }; { my $*DEBUG = 1; Disco::rd; }; Disco::rd;

[14:50] <camelia> rakudo-moar 070780e04: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3my $*DEBUG = 1; Disco::rd; }; Disco::rd;7⏏5<EOL>␤    expecting …»

[14:50] <tadzik> oops

[14:50] <tadzik> m: package Disco { my $*DEBUG = 1; sub rd { say "Debug is: $*DEBUG" } }; { my $*DEBUG = 1; Disco::rd; }; Disco::rd;

[14:51] <camelia> rakudo-moar 070780e04: OUTPUT: «Could not find symbol '&rd'␤  in block <unit> at <tmp> line 1␤␤»

[14:51] <tadzik> m: package Disco { my $*DEBUG = 1; our sub rd { say "Debug is: $*DEBUG" } }; { my $*DEBUG = 1; Disco::rd; }; Disco::rd;

[14:51] <camelia> rakudo-moar 070780e04: OUTPUT: «Debug is: 1␤Dynamic variable $*DEBUG not found␤  in sub rd at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:51] <tadzik> oof

[14:51] <tadzik> forget I said anything

[14:51] <tadzik> but I'm a bit puzzled as to why it doesn't see the package-scoped one now

[14:53] *** pyrimidine joined
[14:54] *** p6bannerbot sets mode: +v pyrimidine

[14:54] *** AlexDaniel joined
[14:55] *** p6bannerbot sets mode: +v AlexDaniel

[14:59] *** Khisanth joined
[14:59] *** p6bannerbot sets mode: +v Khisanth

[15:08] *** Possum joined
[15:09] *** p6bannerbot sets mode: +v Possum

[15:13] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Update-Azure-SSL-0.0.1.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Sparrowdo-VSTS-YAML-Update-Azure-SSL-0.0.1.tar.gz

[15:14] *** molaf joined
[15:14] *** p6bannerbot sets mode: +v molaf

[15:16] *** fake_space_whale joined
[15:16] *** p6bannerbot sets mode: +v fake_space_whale

[15:16] *** dct left
[15:19] <leont> What I have done in such situations is «$*DYNAMIC // "default value"»

[15:19] <leont> Or at least I recollect that working, it's a while ago

[15:37] *** chenyf left
[15:39] *** chenyf joined
[15:40] *** p6bannerbot sets mode: +v chenyf

[15:49] *** domidumont left
[15:51] *** pecastro joined
[15:52] *** p6bannerbot sets mode: +v pecastro

[15:57] <TimToady> it's probably more efficient to put an overarching 'my $*DYNAMIC;' in the outermost scope if you have access to it, since caching the absence of a variable is problematic

[15:57] *** zakharyas left
[15:58] <TimToady> (with our current cache)

[15:58] <colomon> is there really no equivalent to the truncate sub in p6?

[16:00] <TimToady> doesn't look like it, but you can always Nativecall into the C library

[16:01] <TimToady> iirc, libuv didn't support it when the issue last came up

[16:01] <colomon> TimToady: any hints on getting the C filehandle out of the IO::Handle?

[16:02] <TimToady> .native-descriptor I believe

[16:02] *** TreyHarris left
[16:03] <TimToady> m: say $*ERR.native-descriptor

[16:03] <camelia> rakudo-moar 070780e04: OUTPUT: «2␤»

[16:03] <TimToady> yup

[16:03] <colomon> TimToady++

[16:09] <TimToady> I don't know whether you might need to explicitly call ftruncate64 offhand

[16:11] <TimToady> if someone has written a POSIX module, I don't know about it yet (or anymore, in the senile way of things)

[16:14] *** robertle left
[16:16] *** TreyHarris joined
[16:16] *** p6bannerbot sets mode: +v TreyHarris

[16:17] <colomon> TimToady: just plain ftruncate seems to be working for me.

[16:17] <TimToady> try it on a file larger than 4 gigs?

[16:18] <TimToady> of course, if you files never get that big, doesn't matter :)

[16:18] <colomon> I think it’s supposed to automatically promote to ftrunate64 internally, if I understood correctly.

[16:18] <colomon> but yeah, my files are never going to get anywhere near that long.

[16:20] <colomon> (translating some perl 5 $workhorse scripts to perl 6 because I’m having difficulty getting needed p5 modules working on my Mac.)

[16:20] *** damaxi joined
[16:21] *** p6bannerbot sets mode: +v damaxi

[16:29] *** lizmat joined
[16:29] *** p6bannerbot sets mode: +v lizmat

[16:30] *** diakopter joined
[16:30] *** p6bannerbot sets mode: +v diakopter

[16:30] *** scimon left
[16:33] <lizmat> .

[16:35] <El_Che> lizmat: how is the SPW?

[16:35] <El_Che> watched some of jnthn's talk online

[16:35] <lizmat> very good...  :-)  

[16:36] <lizmat> the only thing not good is the fact that the WiFi blocks IRC

[16:36] <lizmat> :-(

[16:36] <lizmat> so yeah, that worked  :-

[16:36] <lizmat> )

[16:37] <diakopter> well there's https://webchat.freenode.net/

[16:38] *** lichtkind__ left
[16:39] *** kaare_ left
[16:39] <El_Che> lizmat: use a ssh socks proxy?

[16:40] <lizmat> yeah...  too much trouble  :-)

[16:40] <lizmat> the easiest fix would have been to get out my phone and tether

[16:40] <El_Che> "ssh -D 8080 $host" <-- ow, so much typing, I feel your pain :)

[16:40] *** chenyf left
[16:41] <lizmat> socializing&

[16:41] *** lizmat left
[16:42] <tadzik> tbh I'd sooner put up a proper wifi from phone than look up the syntax for ssh proxy :P

[16:42] <El_Che> lol

[16:42] <tadzik> assuming that wifi allows ssh :P

[16:43] <El_Che> tadzik: I always run a vpn instance on port 443 and 80

[16:43] <El_Che> not very likely to be closed

[16:43] <tadzik> ah, I have both of those already used on my server :)

[16:43] <tadzik> there is some hack to run both an httpd and openvpn on the same port, but eh, I usually just not use the wifi if it's this crappy

[16:43] <El_Che> tadzik: there hacks for that

[16:44] <El_Che> a splitter like daemon

[16:44] <El_Che> but I wouldn't bother :)

[16:44] <tadzik> I was recently at a hotel that said "no VPN clients allowed" on the landing page :P

[16:44] <tadzik> just in case you wanted to do work on their 512kbps, 100MB limited crap

[16:45] <tadzik> I made sure to let them know what influenced my review scores

[16:45] <El_Che> lol

[16:45] <El_Che> no VPN allowed, wtf

[16:45] <El_Che> https will be punished with cold showers

[16:46] <timotimo> "we do not route packets that have the evil bit set"

[16:46] <El_Che> we reserve the right to serve you add and sotre ypur password!

[16:47] <Geth> ¦ doc: 6988308c88 | (Ben Davies)++ (committed by Patrick Spek) | doc/Language/js-nutshell.pod6

[16:47] <Geth> ¦ doc: Write networking API section for JS nutshell (#2299)

[16:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6988308c88

[16:47] <synopsebot> Link: https://doc.perl6.org/language/js-nutshell

[17:00] *** damaxi left
[17:06] *** damaxi joined
[17:07] *** p6bannerbot sets mode: +v damaxi

[17:08] *** hoelzro_ left
[17:19] *** clemclem joined
[17:19] *** p6bannerbot sets mode: +v clemclem

[17:19] <clemclem> hello all

[17:20] <tyil> hi clemclem 

[17:23] <clemclem> 10 years ago I used to be a perl programmer

[17:23] <clemclem> I also published a cpan module

[17:23] <clemclem> https://metacpan.org/author/CBIONDO

[17:24] <tyil> are you looking to get back into it with Perl 6? :D

[17:25] *** spycrab0 joined
[17:25] *** p6bannerbot sets mode: +v spycrab0

[17:25] <clemclem> yep I was thinking if thee is some way I can help  the perl 6 community

[17:25] <clemclem> I am italian

[17:25] <tyil> always

[17:25] <clemclem> I work as a software architect 

[17:25] <tyil> if you use it for your personal projects you could help promote it, if you want to go a bit deeper there's plenty of issues on the github repos to look into

[17:26] <tyil> there are issues with tags indicating they're good for beginners to pick up

[17:26] <clemclem> linkedin.com/in/clemente-biondo

[17:26] <clemclem> there is the need for an italian version of the documentation? This way I can also start relearning the language

[17:29] <tyil> I don't think we have alternate translations of docs.perl6.org yet, I know perl6intro.com has been translated multiple times,but Italian is already done there

[17:29] <clemclem> nod

[17:29] <tyil> it would be nice to have the docs.perl6.org in multiple languages, but I don't think there's support for internationalisation on the current version of it

[17:30] <tyil> https://perl6intro.com/it/ for the Italian version of the Perl 6 intro, btw

[17:30] <clemclem> thanks faor your time

[17:30] <clemclem> will take a look :-)

[17:30] <clemclem> for

[17:30] <tyil> if you need help, don't be afraid to ask :>

[17:30] <clemclem> thank you very much!

[17:36] *** ExtraCrispy left
[17:37] *** fake_space_whale left
[17:39] *** clemclem left
[17:44] *** hoelzro joined
[17:44] *** p6bannerbot sets mode: +v hoelzro

[17:55] *** sena_kun left
[17:56] <vrurg> I desperately need help with this: https://stackoverflow.com/questions/52227483/traits-attributes-roles-and-closures

[17:56] *** sena_kun joined
[17:56] *** sena_kun left
[17:56] *** ChoHag joined
[17:57] *** p6bannerbot sets mode: +v ChoHag

[17:58] <timotimo> i read "roles and closures" and immediately want to say "roles and classes don't close over their surroundings"

[17:58] <timotimo> but maybe i should read the actual question instead of just the title

[17:59] <vrurg> timotimo: compile time, trait... Too much to fit into one subject.

[18:02] <timotimo> the horizontal scrolling is making it kind of hard to see everything

[18:02] <diakopter> vrurg: skimmed it; initial thought: bug

[18:02] <diakopter> (primarily from the "Now, to another trick. I remove does BarRole from FooRole and make it applied directly on Foo" thing)

[18:05] <timotimo> m: class Test { }; class Bloop { }; sub do-the-add($class, $foo) { my $outer = $foo ~ "closured" ~ $++; $class.^add_method("bleh", method { "it does the thing for $outer" }) }; do-the-add(Test, 1); do-the-add(Bloop, 2); Test.^compose; Bloop.^compose; Test.bleh; Bloop.bleh;

[18:05] <camelia> rakudo-moar 070780e04: ( no output )

[18:05] <timotimo> m: class Test { }; class Bloop { }; sub do-the-add($class, $foo) { my $outer = $foo ~ "closured" ~ $++; $class.^add_method("bleh", method { "it does the thing for $outer" }) }; do-the-add(Test, 1); do-the-add(Bloop, 2); Test.^compose; Bloop.^compose; say Test.bleh; say Bloop.bleh;

[18:05] <camelia> rakudo-moar 070780e04: OUTPUT: «it does the thing for 1closured0␤it does the thing for 2closured1␤»

[18:10] <vrurg> I'm sorry, have to go for a couple of hour. If its not too much trouble, I'd like to ask to leave comments on SO. 

[18:11] <vrurg> diakopter: I suspect a bug too. Would it be something intended removal of 'does BarRole' wouldn't affect the result. But it does.

[18:11] * vrurg is away...

[18:15] *** lichtkind joined
[18:15] *** p6bannerbot sets mode: +v lichtkind

[18:17] *** domidumont joined
[18:18] *** p6bannerbot sets mode: +v domidumont

[18:18] *** damaxi left
[18:21] *** pukku joined
[18:21] *** p6bannerbot sets mode: +v pukku

[18:22] <pukku> Hi! Quick question: can I make the following code any better?

[18:23] <pukku> for %perf<ringers>.keys.sort(&infix:'<=>') -> $n { $rdata<ringers>.push: { num => $n, ringer => %perf<ringers>{$n} }; }

[18:23] <pukku> Basically, I want to take a hash of data, and turn into an array of hashes, sorted by the key.

[18:23] <pyrimidine> Ulti: around?

[18:23] <lichtkind> moritz confirmed me that @$m is redirected to $m.list, how can i change that?

[18:24] <pukku> (also, that parameter for sort is actually passed as "&infix:«<=>»"

[18:24] <pukku> )

[18:24] * pyrimidine is wondering whether there should be some benchmarks akin to Tux's CSV, but for us bioinfo types ...

[18:26] *** sauvin left
[18:27] <AlexDaniel> pyrimidine: what about https://github.com/japhb/perl6-bench ?

[18:31] *** domidumont left
[18:31] <moritz> lichtkind: you can try to overload prefix:<@>

[18:40] *** lichtkind_ joined
[18:41] *** p6bannerbot sets mode: +v lichtkind_

[18:41] *** lichtkind left
[18:42] *** lichtkind_ is now known as lichtkind

[18:51] *** pukku left
[18:56] *** raynold_ joined
[18:56] *** p6bannerbot sets mode: +v raynold_

[18:56] *** raynold_ left
[18:59] <pyrimidine> AlexDaniel: that looks quite useful!  Are there other benchmarks that are public and up-to-date, apart from the CSV ones that Tux posts on #perl6-dev?

[19:07] *** xinming_ joined
[19:07] *** p6bannerbot sets mode: +v xinming_

[19:09] <lichtkind> moritz you said somethign about Iterable, i guess you mean the role

[19:10] <japhb> pyrimidine: There have been lots of benchmarks over the years; I had intended to merge the popular ones back to perl6-bench, but I ran out of free time.  The structure should be there should you want to do so yourself, and I'm happy to take PRs.  :-)

[19:11] <pyrimidine> Thanks japhb!  Re: lack of free time: yep, happens to us all :)

[19:14] *** RikcreaInfo joined
[19:14] *** p6bannerbot sets mode: +v RikcreaInfo

[19:14] *** RikcreaInfo left
[19:16] *** graphene left
[19:18] *** graphene joined
[19:18] *** p6bannerbot sets mode: +v graphene

[19:23] *** graphene left
[19:23] *** chenyf joined
[19:24] *** p6bannerbot sets mode: +v chenyf

[19:25] *** graphene joined
[19:25] *** jmerelo_ joined
[19:25] *** p6bannerbot sets mode: +v jmerelo_

[19:25] *** p6bannerbot sets mode: +v graphene

[19:28] *** chenyf left
[19:34] <Altreus> m: class P { sub foo ($cats) { say $cats } } class C is P { sub foo () { say "meow" } } my C $c .= new; $c.foo('baa'); $c.foo;

[19:34] <camelia> rakudo-moar 070780e04: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3lass P { sub foo ($cats) { say $cats } }7⏏5 class C is P { sub foo () { say "meow" ␤    expecting any of:␤       …»

[19:34] <Altreus> oh

[19:35] <Altreus> m: class P { sub foo ($cats) { say $cats } }; class C is P { sub foo () { say "meow" } }; my C $c .= new; $c.foo('baa'); $c.foo;

[19:35] <camelia> rakudo-moar 070780e04: OUTPUT: «No such method 'foo' for invocant of type 'C'␤  in block <unit> at <tmp> line 1␤␤»

[19:35] <Altreus> oh

[19:35] <Altreus> m: class P { method foo ($cats) { say $cats } }; class C is P { method foo () { say "meow" } }; my C $c .= new; $c.foo('baa'); $c.foo;

[19:35] <camelia> rakudo-moar 070780e04: OUTPUT: «Too many positionals passed; expected 1 argument but got 2␤  in method foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[19:35] <Altreus> m: class P { method foo ($cats) { say $cats } }; class C is P { multi method foo () { say "meow" } }; my C $c .= new; $c.foo('baa'); $c.foo;

[19:35] <camelia> rakudo-moar 070780e04: OUTPUT: «Cannot resolve caller foo(C: Str); none of these signatures match:␤    (C: *%_)␤  in block <unit> at <tmp> line 1␤␤»

[19:36] <Altreus> hmm

[19:36] <Altreus> is what I'm doing possible without the base class already making it multi?

[19:41] <timotimo> you can add a candidate that defers to the base class, for example

[19:50] <Altreus> would you do that just by providing multi method foo ($cats) { nextsame }?

[19:50] <Altreus> or proto shenanigans?

[19:51] <timotimo> no, that wouldn't work i don't think

[19:51] <timotimo> you'd self.BaseClass::foo

[19:54] <Altreus> you are correct as usual :)

[19:54] <Altreus> This feels like a thing that could have more DWIM

[19:57] *** Guest18 joined
[19:58] *** p6bannerbot sets mode: +v Guest18

[19:58] <Altreus> hmm

[19:58] <Altreus> I have a situation I don't understand :)

[19:59] <Altreus> I'm going to push a branch

[20:00] *** itaipu joined
[20:01] *** p6bannerbot sets mode: +v itaipu

[20:01] *** AlexDaniel left
[20:02] <Altreus> https://github.com/shuppet/p6-api-discord/commit/b6f3753f4b2b88047f96f52e86964b01c71cbe8a

[20:02] <Altreus> This role

[20:03] <Altreus> So the other role, HTTPResource, has the CRUD methods but they require a rest object. https://github.com/shuppet/p6-api-discord/blob/easier-crud/lib/API/Discord/HTTPResource.pm6#L106

[20:04] <Altreus> well the commit diff probably speaks for itself

[20:04] <Altreus> but then when I run it it says Cannot have a multi candidate for 'create' when an only method is also in the package 'API::Discord::Channel'

[20:05] <Altreus> is it because the HTTPResource role adds an only method even though the Object role overrides it?

[20:07] <Kaiepi> how can i get a list of bits from a Blob[uint8] and be able to convert it back?

[20:07] <Geth> ¦ doc: 0b11f85fe9 | (JJ Merelo)++ | doc/Type/List.pod6

[20:07] <Geth> ¦ doc: Adds examples on multicriteria sort

[20:07] <Geth> ¦ doc: 

[20:07] <Geth> ¦ doc: Which I understand is what's behind #1297. There was already an example, but these new ones maybe clarify it, thus closes #1297

[20:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0b11f85fe9

[20:07] <synopsebot> Link: https://doc.perl6.org/type/List

[20:08] *** jmerelo_ left
[20:19] <Ulti> pyrimidine: [6~[6~[6~Im about now just back logging

[20:19] *** escherlat joined
[20:19] *** p6bannerbot sets mode: +v escherlat

[20:20] <Ulti> pyrimidine: https://github.com/japhb/perl6-bench/pull/23 yeah didnt finish this off back in 2015 :/

[20:22] <pyrimidine> Ah, ok; those make sense.  I was thinking a FASTA parsing one as well, primarily to compare 5 vs 6 and grammars vs line-by-line parsing

[20:23] <masak> hm, what are the options for forward-referencing a type again?

[20:23] <Ulti> pyrimidine: you've seen the blog article from timotimo ?

[20:23] <masak> m: class A { has B $.b }; class B {}

[20:23] <camelia> rakudo-moar 070780e04: OUTPUT: «5===SORRY!5===␤Type 'B' is not declared␤at <tmp>:1␤------> 3class A { has B7⏏5 $.b }; class B {}␤Malformed has␤at <tmp>:1␤------> 3class A { has7⏏5 B $.b }; class B {}␤␤»

[20:23] <pyrimidine> Ulti: Yep

[20:23] <Ulti> k k

[20:23] <masak> m: class B { ... }; class A { has B $.b }; class B {}

[20:23] <camelia> rakudo-moar 070780e04: ( no output )

[20:23] <masak> right, that's one of the options.

[20:24] <masak> m: class A { has ::{"B"} $.b }; class B {}

[20:24] <camelia> rakudo-moar 070780e04: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Autovivifying object closures not yet implemented. Sorry.␤at <tmp>:1␤------> 3class A { has ::{"B"}7⏏5 $.b }; class B {}␤»

[20:25] <Ulti> pyrimidine: for what its worth I've been doing a bit of this manually for a while with fasta parsing and 6frame translation https://perl6advent.wordpress.com/2017/12/16/day-16-%F0%9F%8E%B6-deck-the-halls-with-perf-improvements-%F0%9F%8E%B6/

[20:26] <Ulti> not really a proper benchmark though more just general tracking improvement

[20:26] <pyrimidine> I'm really wondering whether the best initial thing would be to set up the basic libraries that use things like htslib

[20:27] <pyrimidine> via NativeCall

[20:27] <pyrimidine> then work on the 'pure perl6' parsing alongside it.  

[20:28] <pyrimidine> With perl6 I've seen some interesting variation re: speed of chunking by record delimiter ("\n>") vs using a grammar.  Seems to be highly dependent on the length of the sequence itself.  Not sure why

[20:28] *** Guest18 left
[20:28] <Ulti> yeah htslib is on my wish list, I keep trying to convince the author of the more recent perl 5 bindings to give it a go ;)

[20:29] <Ulti> yeah my original fasta implementation had a concept of rec separator to split a file separate from the grammar already for that reason

[20:30] <Ulti> really I should update it to make that a supply and run the grammar in parallel

[20:31] <pyrimidine> I have a small FASTA file of ~12k protein seqs of ~200aa each, which using chunking is 1.7s on my older Macbook Air, but using a grammar is about 1s.  

[20:32] <pyrimidine> But I also have a long-read file of 10k sequences up to 10000bp or more, and the grammar is much slower (chunking is 2s, grammar is ~7s).  

[20:32] <pyrimidine> Agreed re: using a supply, makes sense

[20:36] * masak .oO( "supplies!" )

[20:37] *** lizmat joined
[20:38] *** p6bannerbot sets mode: +v lizmat

[20:41] <lizmat> .

[20:45] *** pmurias left
[20:46] *** kerframil left
[20:46] *** mindshredder joined
[20:47] *** p6bannerbot sets mode: +v mindshredder

[20:54] *** stmuk_ left
[20:59] <leont> With grammars it's easier to accidentally go O(bad) I guess

[21:01] <moritz> though tokens (no backtracking) reduce that risk again

[21:11] <masak> not sure I've seen that notion expressed outside of the Perl 6 world, that grammars should strive towards ratcheting semantics, not backtracking

[21:13] <geekosaur> haskell's parsec/megaparsec do so by making you explicitly request backtracking. and it is a generally recognized consideration from what I've seen. hidden because msot folks use token-based parser generators

[21:13] <geekosaur> or use regex based stuff and wonder why it performs so bad :p

[21:14] *** rfold joined
[21:15] *** p6bannerbot sets mode: +v rfold

[21:16] *** mcmillhj left
[21:17] *** pmurias joined
[21:18] *** p6bannerbot sets mode: +v pmurias

[21:19] <leont> My experience in YAMLish was similar, while I needed some backtracking it is the exception not the rule

[21:21] <masak> geekosaur: tokenization (as a separate step) is another fun one where I feel Perl 6 has "warped" me

[21:21] *** pmurias left
[21:21] *** Guest22183 left
[21:22] <masak> geekosaur: nothing wrong at all with a separate tokenization/lexer step. in fact, in most applications it's a nice way to "chunk" the input from individual characters to tokens

[21:22] <masak> ...but, it won't work in a language with slangs, like Perl 6 or 007.

[21:22] <geekosaur> wasn't saying ti was wrong, just that it "hides" the backtracking aspectto some extent as you said

[21:22] <masak> nodnod

[21:23] <masak> though tokenization tends to be fairly non-backtracking

[21:23] <geekosaur> I... am wonderin if I'mmaking sense. I mean, that was the point

[21:27] <masak> it'd be nice if it turns out we're talking past each other, but agreeing all the while

[21:29] * geekosaur strongly suspects that's the case

[21:35] *** mcmillhj joined
[21:36] *** p6bannerbot sets mode: +v mcmillhj

[21:37] *** dct joined
[21:37] *** p6bannerbot sets mode: +v dct

[21:40] *** mcmillhj left
[21:48] *** pmurias joined
[21:48] *** p6bannerbot sets mode: +v pmurias

[21:49] *** graphene left
[21:51] *** graphene joined
[21:51] *** mcmillhj joined
[21:51] *** p6bannerbot sets mode: +v graphene

[21:52] *** p6bannerbot sets mode: +v mcmillhj

[21:56] *** mcmillhj left
[21:58] *** Guest18 joined
[21:59] *** p6bannerbot sets mode: +v Guest18

[22:03] *** mcmillhj joined
[22:04] *** p6bannerbot sets mode: +v mcmillhj

[22:05] *** lichtkind left
[22:06] *** graphene left
[22:07] *** graphene joined
[22:08] *** mcmillhj left
[22:08] *** p6bannerbot sets mode: +v graphene

[22:12] *** Guest18 left
[22:13] *** Guest18 joined
[22:14] *** p6bannerbot sets mode: +v Guest18

[22:16] *** pmurias left
[22:18] *** mcmillhj joined
[22:19] *** p6bannerbot sets mode: +v mcmillhj

[22:23] *** mcmillhj left
[22:36] *** HaraldJoerg left
[22:37] *** mcmillhj joined
[22:37] *** p6bannerbot sets mode: +v mcmillhj

[22:41] *** mcmillhj left
[22:43] *** ToddAndMargo joined
[22:43] *** p6bannerbot sets mode: +v ToddAndMargo

[22:44] <ToddAndMargo> I am trying to configure pigion for this chat.  What is the protocol?  ICQ, IRC?

[22:45] <ToddAndMargo> next question.  how do I do a case insensitive "contains"?

[22:49] <Kaiepi> irc

[22:50] <ToddAndMargo> Thak you!

[22:50] *** b2gills joined
[22:50] <Kaiepi> for contains you could use the i flag with a regex

[22:51] *** p6bannerbot sets mode: +v b2gills

[22:51] <ToddAndMargo>  p6 'if "2018 Jul 7".contains( "jul", 3 ) {say "Yes";}'

[22:51] <ToddAndMargo> I don't understand.  I am trying to avoid a regex

[22:51] <Kaiepi> oh, didn't realize there's a contains method

[22:52] *** mcmillhj joined
[22:53] *** rindolf left
[22:53] <vrurg> m: say "aAbB".fc.contains("ab".fc)

[22:53] <camelia> rakudo-moar 070780e04: OUTPUT: «True␤»

[22:53] <Geth> ¦ doc: 0141d3fc73 | (Curt Tilmes)++ | doc/Type/Cool.pod6

[22:53] <Geth> ¦ doc: clarify that Cool/contains $start param is characters into the string

[22:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0141d3fc73

[22:53] <synopsebot> Link: https://doc.perl6.org/type/Cool

[22:53] <vrurg> ToddAndMargo: is it what you're lookng for?

[22:53] *** p6bannerbot sets mode: +v mcmillhj

[22:53] <ToddAndMargo> testing

[22:54] <ToddAndMargo> Yup!  That works!  Thank you!

[22:54] <ToddAndMargo> Pegion is a pain in the neck to try and figure out!

[22:56] <vrurg> yw

[22:56] <ToddAndMargo> I will ask the fedora group how to operate it.

[22:57] *** mcmillhj left
[23:10] *** mcmillhj joined
[23:11] *** p6bannerbot sets mode: +v mcmillhj

[23:12] <ToddAndMargo> How about "contains" and starts with?

[23:15] *** mcmillhj left
[23:18] *** dct left
[23:24] *** chenyf joined
[23:25] *** p6bannerbot sets mode: +v chenyf

[23:26] *** rfold left
[23:28] *** chenyf left
[23:29] *** mcmillhj joined
[23:30] *** p6bannerbot sets mode: +v mcmillhj

[23:33] *** mcmillhj left
[23:39] *** escherlat left
[23:40] *** mcmillhj joined
[23:41] *** p6bannerbot sets mode: +v mcmillhj

[23:45] *** mcmillhj left
[23:54] *** spycrab0 left
[23:59] *** MasterDuke joined
[23:59] *** p6bannerbot sets mode: +v MasterDuke

[23:59] *** MasterDuke left
[23:59] *** MasterDuke joined
[23:59] *** herbert.freenode.net sets mode: +v MasterDuke

[23:59] *** p6bannerbot sets mode: +v MasterDuke

