[00:00] *** lizmat joined
[00:01] *** markong left
[00:04] *** lizmat left
[00:04] *** w_richard_w joined
[00:15] *** DataLinkDroid joined
[00:35] <Kaiepi> there we go

[00:35] <Kaiepi> installing sarasa gothic gets unicode to display properly in vim

[00:44] *** comborico1611 left
[00:49] *** shareable6 left
[00:54] <Kaiepi> 400 lines documentation done! \o/

[01:00] *** kurahaupo_ joined
[01:01] *** g- joined
[01:01] <Kaiepi> since i can't really write editline bindings until i can work out a way to get wchar_t strings to be supported, i think i'll work on getting sec-websocket-protocol support added to the websocket library

[01:03] *** f_ left
[01:04] <Kaiepi> wait do any debug logger cpan modules exist?

[01:05] *** mcmillhj joined
[01:05] <Kaiepi> oh they do

[01:05] *** kurahaupo left
[01:08] *** raschipi left
[01:08] *** raschipi_ joined
[01:16] *** f_ joined
[01:29] <Geth> ¦ ecosystem: 295da236a2 | (Zoffix Znet)++ (committed using GitHub Web editor) | META.list

[01:29] <Geth> ¦ ecosystem: Add App::GymScheduler to ecosystem

[01:29] <Geth> ¦ ecosystem: 

[01:29] <Geth> ¦ ecosystem: Randomized schedule maker for your workouts:

[01:29] <Geth> ¦ ecosystem: https://github.com/zoffixznet/perl6-App-GymScheduler

[01:29] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/295da236a2

[01:41] *** rouking joined
[01:42] <rouking> Anyone know of some a non-abandoned lib for OpenGL bindings?

[01:44] <rouking> s/some//

[01:45] *** shareable6 joined
[01:45] *** ilbot3 left
[01:52] <AlexDaniel> rouking: I know that FROGGS was working on Box2D and SDL bindings

[01:52] *** mcmillhj left
[01:52] <AlexDaniel> rouking: https://github.com/FROGGS/p6-Box2D

[01:53] <AlexDaniel> but I can't find the repo for SDL

[01:57] *** ilbot3 joined
[01:57] *** ChanServ sets mode: +v ilbot3

[02:12] *** HaraldJoerg left
[02:14] *** uzl joined
[02:18] *** uzl_ joined
[02:19] *** pilne left
[02:42] *** lookatme_q joined
[02:44] <lookatme_q> :)

[02:44] *** lookatme_q left
[02:44] <lookatme> :)

[02:44] <lookatme> haha, I am already online

[02:47] <lookatme> why the error message is truncated ?

[02:47] <lookatme> Type check failed in binding to parameter '$value'; expected NativeCall::Types::Pointer[NativeCall::Types::void] but got NativeCall::Types::Po...

[02:54] *** Zoffix joined
[02:54] <Zoffix> lookatme: is your rakudo old?

[02:54] <Zoffix> What's perl6 -v give?

[02:56] <lookatme> Zoffix, seems not, it's 2018.04

[02:56] <lookatme> https://pastebin.com/2yuMBCiU

[02:56] <lookatme> Can you figure out what's wrong here ?

[02:57] <Zoffix> lookatme: is that the full code?

[02:57] <Zoffix> Yeah, it's a known bug that we fixed twice already. I would've thought it was fixed for good by now

[02:58] <Zoffix> This was the last fix: https://github.com/rakudo/rakudo/commit/ce08683fbf7dac2a1a37bf50fe336819f946c0c0#diff-22ab7f029a2fc21801f8bad2edfb22a0

[02:59] <Zoffix> Landed in .03

[03:00] <Zoffix> oh maybe that's a slightly different bug

[03:01] <lookatme> It's a part of code

[03:01] <Zoffix> m: say 'NativeCall::Types::Po'

[03:01] <camelia> rakudo-moar 791c3e350: OUTPUT: «NativeCall::Types::Po␤»

[03:01] <Zoffix> m: say 'NativeCall::Types::Po'.chars

[03:01] <camelia> rakudo-moar 791c3e350: OUTPUT: «21␤»

[03:01] <Zoffix> Yeah, I see where it's being cut.

[03:02] <lookatme> oh, you mean the debug message truncated is a bug ?

[03:03] <lookatme> But I am not seen what's wrong here

[03:03] <Zoffix> lookatme: do you have a full, runnable program that demonstrates that error?

[03:03] <lookatme> It's `Pointer[void]` obviously, why it raised that error

[03:04] <lookatme> It's a lot of code

[03:04] <lookatme> Where can I post it ?

[03:04] <Zoffix> https://gist.github.com/

[03:05] <lookatme> :( Can not access that website

[03:05] <lookatme> I am on the back of Firewall

[03:07] *** eliasr left
[03:10] *** uzl__ joined
[03:10] *** uzl left
[03:10] <Zoffix> Just pastbin it then

[03:10] <lookatme> okay, wait 

[03:11] *** uzl joined
[03:12] *** uzl_ left
[03:14] <lookatme> https://pastebin.com/gvAAqAQn

[03:14] <lookatme> Zoffix, a lot of code

[03:14] <lookatme> I comment the file name on the top

[03:16] <Zoffix> lookatme: how come you aren't using public repos, like say on GitHub or on gitlab.com?

[03:16] <lookatme> Zoffix, I am not ready to put it on the github then

[03:17] <lookatme> I will :)

[03:17] <lookatme> lunch time :)

[03:18] *** uzl__ left
[03:18] *** uzl left
[03:18] *** uzl__ joined
[03:18] *** uzl joined
[03:20] *** w_richard_w left
[03:22] <Zoffix> m:  class Supercalifragilisticexpialidocious {}; (my $x := class {}.new).^set_name: <Supercalifragilisticexpialidocious>; -> Supercalifragilisticexpialidocious {}($x)

[03:22] <camelia> rakudo-moar 791c3e350: OUTPUT: «Type check failed in binding to parameter '<anon>'; expected Supercalifragilisticexpialidocious but got Supercalifragilistice...␤  in block <unit> at <tmp> line 1␤␤»

[03:22] <Zoffix> works with my local fix

[03:33] *** uzl left
[03:33] *** uzl__ is now known as uzl

[03:36] <lookatme> Zoffix, how ? 

[03:39] <Zoffix> lookatme: https://github.com/rakudo/rakudo/commit/a79de4290410dec97095a4e6724b3074431d3d0e

[03:40] <Zoffix> lookatme: basically, you're getting your error because two objects that have the same .^name are actually different objects, so try to see why they might be different.

[03:41] <lookatme> Zoffix, okay thanks

[03:42] <Zoffix> lookatme: and if you manage to golf it, report it https://github.com/rakudo/rakudo/issues/new  they probably shouldn't have the same names, or at least the names could be improved to make those errors better

[03:46] <Zoffix> What does "invres" in p6bindattrinvres stand for? I always forget the name of that op...

[03:59] *** Zoffix left
[04:09] *** wamba joined
[04:10] *** atroxaper joined
[04:12] *** raschipi_ left
[04:15] *** AlexDaniel left
[04:25] *** uzl left
[04:29] *** kaare_ joined
[04:47] *** molaf joined
[04:51] *** Zoffix joined
[04:54] *** Zoffix left
[04:56] *** skids left
[05:06] *** jmerelo joined
[05:12] <Geth> ¦ doc: acc559a7c8 | (Ronald Schmidt)++ | doc/Language/grammar_tutorial.pod6

[05:12] <Geth> ¦ doc: Update grammar_totorial.pm6 add clarification on extending grammars with role composition.

[05:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/acc559a7c8

[05:12] <Geth> ¦ doc: e187cf9385 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/grammar_tutorial.pod6

[05:12] <Geth> ¦ doc: Merge pull request #2036 from ronaldxs/grammar_totorial-role-clarification

[05:12] <synopsebot> Link: https://doc.perl6.org/language/grammar_tutorial

[05:12] <Geth> ¦ doc: 

[05:12] <Geth> ¦ doc: grammar_totorial.pm6 clarification of extending grammars with roles

[05:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e187cf9385

[05:14] *** Khisanth left
[05:28] <Geth> ¦ doc: 47bdb6315a | (JJ Merelo)++ | doc/Language/unicode_entry.pod6

[05:28] <Geth> ¦ doc: Shortens heading, closes #2037

[05:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/47bdb6315a

[05:28] <Geth> ¦ doc: 3e2d277967 | (JJ Merelo)++ | doc/Language/unicode_entry.pod6

[05:28] <Geth> ¦ doc: Capitalizes heading

[05:28] <synopsebot> Link: https://doc.perl6.org/language/unicode_entry

[05:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3e2d277967

[05:29] *** Khisanth joined
[05:32] *** robertle left
[05:34] *** shareable6 left
[05:36] *** ExtraCrispy left
[05:38] *** wamba left
[05:40] <jmerelo> quotable6: use lib

[05:40] <yoleaux> 20 May 2018 20:01Z <AlexDaniel> jmerelo: “better ways so say something” *to* say something? ;)

[05:40] <quotable6> jmerelo, OK, working on it! This may take up to three minutes (4582161 messages to process)

[05:40] <yoleaux> 20 May 2018 20:05Z <El_Che> jmerelo: You shoud s/Perl Documentation/Perl 6 Documenation/ in the dev.to article if you don't have to start a civil war

[05:40] <jmerelo> AlexDaniel`: probably. Where is that?

[05:41] <quotable6> jmerelo, 4 messages (Inf⌁-Inf): https://gist.github.com/cbdc1daccb7c85c2da200bc453528cb9

[05:51] *** parv joined
[05:51] *** andrzejku joined
[05:51] *** parv left
[05:56] *** andrzejku left
[05:59] *** samebchase1 is now known as samebchase

[06:09] *** n0tjack joined
[06:21] *** robertle joined
[06:22] <Geth> ¦ doc: 9966768306 | (JJ Merelo)++ | 3 files

[06:22] <Geth> ¦ doc: Adds entry for the decont operator closes #2025

[06:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9966768306

[06:24] *** jmerelo left
[06:25] *** n0tjack left
[06:28] *** n0tjack joined
[06:29] *** parv joined
[06:32] *** AlexDaniel joined
[06:43] *** n0tjack left
[06:47] *** DataLinkDroid2 joined
[06:50] *** DataLinkDroid left
[06:56] *** darutoko joined
[07:00] *** jmerelo joined
[07:07] *** xtreak joined
[07:21] *** domidumont joined
[07:22] <Geth> ¦ doc: Kaiepi++ created pull request #2038: Implement Perl 6 NBSP linter script

[07:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2038

[07:27] *** domidumont left
[07:28] <Geth> ¦ doc: JJ self-unassigned Use always non-breaking space when talking about Perl 6 and Pod 6 https://github.com/perl6/doc/issues/1989

[07:28] <Geth> ¦ doc: JJ assigned to Kaiepi Issue Use always non-breaking space when talking about Perl 6 and Pod 6 https://github.com/perl6/doc/issues/1989

[07:28] *** domidumont joined
[07:29] *** rindolf joined
[07:42] *** dogbert11 left
[07:47] *** dakkar joined
[07:47] *** diegok joined
[07:53] *** scimon joined
[08:02] <lookatme> How can I provide a Null Callable like C NULL function pointer to the function ? 

[08:03] <lookatme> such as ` void f( void(*fp)(int) = NULL) { }`  --> sub f(&fp:(int32)) is native(Str) { }

[08:03] <lookatme> sub f(&fp:(int32) == ?) is native(Str) { }

[08:16] <moritz> I think a type object is interpreted as Null

[08:16] <moritz> so try Callable

[08:21] *** xtreak left
[08:30] *** wamba joined
[08:34] <lookatme> moritz, It's report Callable not have a signature method

[08:34] <lookatme> not working

[08:34] <lookatme> I tried other type object such as Code, Any, Nil

[08:34] <lookatme> not working too

[08:35] <jmerelo> lookatme: Why don't you post it in StackOverflow? It stays longer to be answered there, and next one with the problem can benefit from it.

[08:36] <lookatme> I forget my password and account, jmerelo  :)

[08:36] <jmerelo> lookatme: you can log in using Google account. Or create a new one :-)

[08:36] <jmerelo> lookatme: I can post it from you, but you won't be notified of the answers then :-)

[08:38] <lookatme> I am on the back of Firewall, can not access Google

[08:39] <lookatme> will recovery my account

[08:39] <lookatme> when I am off work

[08:40] *** domidumont left
[08:45] *** xtreak joined
[08:46] <jmerelo> lookatme: great :-)

[08:46] <lookatme> I always forget that thing

[08:54] *** parv left
[08:58] *** HaraldJoerg joined
[09:08] *** amalia___ joined
[09:12] *** AlexDani` joined
[09:13] *** AlexDaniel left
[09:17] <scimon> So I upgraded my Ubuntu install and I've been having issues with libssl (specifically cro not running because "Cannot locate native library 'libssl.so'") has anyone else had a similar issue? 

[09:20] <jnthn> scimon: apt install libssl-dev

[09:41] <El_Che> jnthn: would "apt-get install libssl1.0.0" be the answer?

[09:41] <El_Che> Ubuntu 18.04 comes with ssl 1.0 and 1.1

[09:56] <jnthn> El_Che: No idea. I just suggested the one I know works. :)

[09:56] *** lizmat joined
[09:56] <El_Che> mine works as well

[09:56] <El_Che> :)

[09:57] <jnthn> Ah, cool. Those are perhaps better :)

[10:01] *** AlexDani` left
[10:06] <El_Che> I wonder if your solution uses ssl 1.0 or 1.1

[10:07] <El_Che> if the latter it could be a better solution if something from 1.1 is needed

[10:12] <scimon> jnthn: unfortunately I have that installed and it's still not working.

[10:12] <scimon> I shall try the other one.

[10:13] <scimon> Nope :(

[10:15] *** markong joined
[10:16] <scimon> Also tried installing libssl1.0-dev

[10:18] <jnthn> Hm, maybe have to run...is it ldconfig...after?

[10:19] <El_Che> letme spin a continaer for you

[10:20] <jnthn> If it's for cro there already are some containers :)

[10:21] <scimon> Yeah but I kinda wanted to test making them :) 

[10:21] <El_Che> docker run -ti --rm rakudo/ubuntu-amd64-18.04:2018.04.1

[10:21] <El_Che> there you go, a perl6 container with zef

[10:21] <El_Che> no cro :)

[10:21] <scimon> I could just go with that :) Thanks.

[10:21] <El_Che> (to debug your problem)

[10:22] <El_Che> it drops you to the perl6 repl

[10:22] <El_Che> so if you want a shell, do this:

[10:22] <El_Che> docker run -ti --rm --entrypoint=bash rakudo/ubuntu-amd64-18.04:2018.04.1

[10:23] <scimon> Cheers :) (I should probably get back to debugging test suites sigh)

[10:23] <El_Che> do apt-get update before installing a package and you're set to go

[10:23] <El_Che> keep us posted of your findings

[10:23] <El_Che> :)

[10:25] *** wamba left
[10:25] <scimon> Will do

[10:29] <scimon> (One thing, that image doesn't have make installed, Digest::SHA1::Native uses make in it's build process (and it's a dependency of cro) 

[10:32] <scimon> We may want to add build-essential to that image.

[10:32] *** AlexDani` joined
[10:32] *** AlexDani` is now known as AlexDaniel

[10:34] <scimon> AlexDaniel: Thanks for the patch on the Polyline encoding module :) Sorry it took me a while to notice.

[10:34] <AlexDaniel> scimon: thank you!

[10:36] *** ExtraCrispy joined
[10:36] <scimon> (So after apt installing libssl-dev and build-essential the zef install cro is failing in IO::Socket::Async::SSL with Cannot locate symbol 'sk_num' in native library 'libssl.so')

[10:37] <AlexDaniel> scimon: I don't know anything about it, but: https://irclog.perlgeek.de/perl6/2018-05-16#i_16172708

[10:40] <scimon> That looks like it. So this is me trying to install cro on a fresh ubuntu 18.04 with rakudo image El_Che referenced.

[10:41] *** a3f_ left
[10:42] *** a3f joined
[10:42] *** a3f left
[10:42] *** a3f joined
[10:43] <AlexDaniel> squashable6: status

[10:43] <squashable6> AlexDaniel, Next SQUASHathon in 10 days and ≈23 hours (2018-06-02 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[10:48] <scimon> I shall investigate further later.

[10:53] *** shareable6 joined
[10:53] *** Kaiepi left
[11:00] *** Kaiepi joined
[11:02] *** araraloren joined
[11:02] <buggable> New CPAN upload: P5getservbyname-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5getservbyname:cpan:ELIZABETH

[11:05] <Kaiepi> somehow i managed to cause a kernel panic https://hastebin.com/yogixopuce.pl

[11:06] <Kaiepi> i probably need a break since this is way off track of what i'm trying to do, but it's not something i would've expected to happen

[11:11] *** lichtkind joined
[11:16] *** Kaffe left
[11:21] *** jmerelo left
[11:22] *** athenot joined
[11:26] *** raschipi joined
[11:26] *** lichtkind left
[11:27] <El_Che> scimon: the image is not meant as a cro image but as a base rakudo+zef image and thus to be be as small as possible. Everything needed is an apt-get install away

[11:27] *** athenot left
[11:38] *** raschipi_ joined
[11:39] *** raschipi left
[11:40] *** lichtkind joined
[11:41] *** raschipi_ is now known as raschipi

[11:44] *** athenot joined
[11:54] *** jmerelo joined
[11:57] *** itaipu joined
[11:59] <El_Che> scimon, jnthn: in order to install Cro on ubuntu 18.04 you need: "apt-get install build-essential libssl1.0-dev"

[11:59] <El_Che> scimon, jnthn: that the only winning^Wworking combination atm

[11:59] <El_Che> jnthn: I think it should be documented somewhere

[12:01] <El_Che> nativecall versions are a major pain. I have seen several modules broken (Readline, DBIish on Debian stable) or non trivial to be installed (Cro, DBIish on Ubuntu)

[12:03] <moritz> what would it take to fix that?

[12:04] <moritz> maybe a list of libraries that nativecall tries to load?

[12:05] <El_Che> moritz: I have been thinking about it as well

[12:06] *** w4and0er96 joined
[12:10] *** araraloren left
[12:10] *** araraloren joined
[12:11] *** araraloren left
[12:11] <El_Che> it's kind of a keep-up race and an impossible matrix

[12:12] <El_Che> different support versions of the same distro may require an other lib

[12:12] <El_Che> eg debian 8, 9 and Ubuntu 18.04

[12:12] <El_Che> they all use an other mysqlclient lib

[12:12] *** araraloren joined
[12:12] <El_Che> with Debian 9 using mariadbclient lib

[12:13] <El_Che> a crazy idea: 1 up to date module that has the right pkg name for libs?

[12:14] *** AlexDaniel left
[12:14] <lizmat> El_Che: doesn't sound that crazy to me  :-)

[12:14] <tbrowder_> hi all

[12:14] <El_Che> e.g.: running %libs<debian><8><ssl> = libssl1.0-dev

[12:15] <hahainternet> there are debian subversions

[12:15] <El_Che> thing is that nativecall is ambibious about versioning

[12:15] <hahainternet> 8.x

[12:15] <hahainternet> it's not as simple as it appears

[12:15] <hahainternet> besides, it's libssl-dev, which is a metapackage iirc

[12:15] <El_Che> hahainternet: hence the crazy part

[12:16] <El_Che> hahainternet: no, that will install 1.1, while everything seems to expect 1.0

[12:16] <hahainternet> El_Che: 'everything'?

[12:17] <El_Che> hahainternet: yes. packaged 1.1 is recent enough that no modules I have encoutered seem to target

[12:17] <El_Che> and they break when 1.1 is installed and 1.0 is not

[12:17] <hahainternet> how bizarre, the changes are surely not that significant

[12:17] <hahainternet> there are only 47 packages in stretch that use ssl1.0

[12:17] <El_Che> yes, that was the second part of my message

[12:17] <El_Che> nativecall and versioning

[12:17] <El_Che> take readline

[12:18] <tbrowder_> jmerelo has highlighted problems with pod and non-breaking ws being transformed to breaking ws.  one fix would be to treat all nbws as an ordinary character as part of one word in all cases where words are split or ws is collapsed to one char. thoughts!

[12:18] <xiaomiao> openssl 1.1 is just different enough to break all previous assumptions, it's glorious

[12:18] <El_Che> I created a 1 line fork that works on Ubuntu 18.04 and distros that moved to readline 7

[12:18] *** kurahaupo_ is now known as kurahaupo

[12:18] <xiaomiao> libressl is similarly almost, but not quite unlike

[12:18] <El_Che> why a (temporarely) and nto a PR?

[12:18] <El_Che> because readline used to hardcode the version ('readline', v5)

[12:19] <El_Che> then DrForr removed it to accomodate v6

[12:19] <El_Che> ('readline')

[12:19] <El_Che> but that does not find v7, so my patch is ('readline', v7)

[12:19] <El_Che> whay of course won't work with distros running readline 5 and 6

[12:20] <El_Che> (and we're not even talking about API/ABI breakage, non here luckily enough)

[12:20] * timotimo reminded of jnthn's slide "dynamic problem? dynamic solution!"

[12:20] <El_Che> timotimo: that is kind of my crazy module idea :)

[12:20] <El_Che> I have seen 2 solutions on the ecosystem to find libs

[12:21] <El_Che> they work most of the time until they don't :)

[12:21] <timotimo> at some point we'll have to bite the bullet and implemend ld scripts, too

[12:21] <El_Che> like when the distro ships 2 modules

[12:21] <timotimo> at least one library we bind uses ldscripts

[12:25] <El_Che> I hope my ramblings make sense

[12:27] <jmerelo> tbrowder_: It was thanks to AlexDaniel` . I have been trying to figure out where it happens, but I simply couldn't. I mean, I have no idea where sentendes are broken by any kind of space. 

[12:27] <jmerelo> tbrowder_: candidate was pod2text in Rakudo, but I don't see anything there doing that.

[12:28] <jmerelo> tbrowder_: I have seen no tests for that behavior, or the contrary, so I think it's simply not specced. 

[12:35] *** wamba joined
[12:41] <raschipi> El_Che: If people use C, they will have to use their tooling too, makes sense. Obviously, this problem has been solved for C.

[12:42] <El_Che> we may loose the might of "it works out the box" we have now

[12:42] <El_Che> (at least when the stars align)

[12:42] *** jmerelo left
[12:42] <araraloren> m: use NativeCall; say (my long $ = 42).WHAT

[12:42] <camelia> rakudo-moar 791c3e350: OUTPUT: «(Int)␤»

[12:43] <araraloren> Is this a bug ? if so is it reported ?

[12:45] <timotimo> not a bug

[12:45] <timotimo> you can't call .WHAT on a native int because native ints aren't objects

[12:45] <El_Che> a feature

[12:45] <timotimo> so you get an object created for you so .WHAT can work at all

[12:47] <araraloren> Okay

[12:47] <timotimo> if this weren't the case, you couldn't, for example, do (my int $foo = 42).log

[12:47] <timotimo> m: say (my int $foo = 42).log

[12:47] <camelia> rakudo-moar 791c3e350: OUTPUT: «3.7376696182833684␤»

[12:47] <araraloren> sub time(uint32 is rw --> uint32) is native(Str) { * }; say time(my uint32 $ = 42); # How about this ? it report : Native call expected argument that references a native integer, but got P6int

[12:48] <timotimo> that's more interesting

[12:48] <timotimo> does it change if you put the declaration outside the call?

[12:48] <El_Che> i suspect it does

[12:48] <araraloren> yeah, it working 

[12:49] <araraloren> but inside not 

[12:49] <timotimo> i wonder what makes the container disappear there

[12:49] *** xtreak left
[12:49] <araraloren> timotimo oh wait, it's not working 

[12:50] *** pierrot left
[12:50] <araraloren> It's working if I move the declaration and assignment outside

[12:50] *** Kaiepi left
[12:50] <timotimo> ah, i meant the whole thing, indeed

[12:51] <araraloren> sub time(uint32 is rw --> uint32) is native(Str) { * }; my uint32 $a; say time($a = 42);

[12:51] <araraloren> not working too

[12:51] <timotimo> so the return value of the assignment is the value rather than the container?

[12:52] <araraloren> yeah, I agree

[12:52] *** pierrot joined
[12:52] <timotimo> m: say (my int $foo = 1) = 5

[12:52] <camelia> rakudo-moar 791c3e350: OUTPUT: «Cannot modify an immutable Int (1)␤  in block <unit> at <tmp> line 1␤␤»

[12:53] <timotimo> that could be on purpose

[12:53] <araraloren> m: my int $foo; say ($foo = 1) = 5

[12:53] <camelia> rakudo-moar 791c3e350: OUTPUT: «Cannot modify an immutable Int (1)␤  in block <unit> at <tmp> line 1␤␤»

[12:53] *** ml_ joined
[12:54] <araraloren> Is the error report treat it as Int or make a new object too ?

[12:54] <timotimo> no, p6int is native ints

[12:55] *** Kaiepi joined
[12:55] <araraloren> I see it is said immutable Int

[12:55] <timotimo> Int is actually a P6Opaque that boxes a p6bigint

[12:55] *** Kaiepi left
[12:56] *** mcmillhj joined
[12:56] *** Kaiepi joined
[12:57] <araraloren> Anyway I will submit my stackoverflow question first: https://stackoverflow.com/questions/50449428/handle-c-typedef-on-different-platform-using-nativecall

[13:04] *** atroxaper left
[13:07] *** Kaz joined
[13:08] <Kaiepi> i have some code that causes a kernel panic when i try to run it

[13:09] *** Kaz left
[13:09] *** atroxape_ joined
[13:11] <Kaiepi> i was screwing around with different ways i could replace spaces with U00A0 for the doc repo and wrote this, which doesn't do all of what i need it to do but was something to test that spaces were getting replaced properly https://hastebin.com/omiyadirev.pl

[13:11] *** pierrot left
[13:12] <Kaiepi> does the same thing happen on other OSes if you run it in util/perl-nbsp.p6?

[13:12] *** pierrot joined
[13:12] *** atroxape_ left
[13:13] *** athenot left
[13:13] <El_Che> are you just launching a huge numbers of perl -e without arguments?

[13:14] <El_Che> i misread

[13:14] <El_Che> ignore

[13:16] *** aindilis left
[13:16] *** athenot joined
[13:17] *** aindilis joined
[13:22] <buggable> New CPAN upload: P5hex-0.0.5.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5hex:cpan:ELIZABETH

[13:28] *** skids joined
[13:31] *** wamba left
[13:32] <buggable> New CPAN upload: P5index-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5index:cpan:ELIZABETH

[13:32] <buggable> New CPAN upload: P5lc-0.0.6.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5lc:cpan:ELIZABETH

[13:33] <buggable> New CPAN upload: P5lcfirst-0.0.7.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5lcfirst:cpan:ELIZABETH

[13:40] <tbrowder_>  jmerlo: i’m going try to add a test to roast (per yr code) to test pod nbsp handling. that will hopefully point to one part of the problem. as i said, we’ll need to get consensus about handling of nbws in pod if we need to change current code.

[13:42] <buggable> New CPAN upload: P5length-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5length:cpan:ELIZABETH

[13:42] <buggable> New CPAN upload: P5localtime-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5localtime:cpan:ELIZABETH

[13:44] *** wamba joined
[13:54] *** lucasb joined
[13:57] *** wamba left
[13:58] *** mcmillhj left
[14:00] *** mcmillhj joined
[14:00] *** mcmillhj left
[14:01] *** gabiruh left
[14:05] *** mcmillhj joined
[14:11] *** kaare_ left
[14:15] *** w4and0er96 left
[14:16] *** ml_ left
[14:17] *** ml_ joined
[14:18] *** ml_ left
[14:33] *** ChoHag left
[14:33] *** ChoHag joined
[14:36] *** itaipu left
[14:38] <[Coke]> there's a git repo somewhere that's all the modules as git submodules or something, yes?

[14:39] <moritz> https://github.com/moritz/perl6-all-modules

[14:48] *** jmerelo joined
[14:48] *** ChoHag left
[14:49] *** ChoHag joined
[14:54] *** troys joined
[14:55] *** ChoHag left
[14:56] *** ChoHag joined
[14:59] <El_Che> .seen drforr

[14:59] <yoleaux> I saw DrForr 13 Apr 2018 14:25Z in #perl6: <DrForr> My head isn't in that space right now otherwise I'd look for possible examples...

[15:03] <jmerelo> El_Che: you can probably contact him via Facebook 

[15:04] <El_Che> facebook

[15:05] <El_Che> I like drforr a lot, but not enough to get a facebook account

[15:05] <El_Che> ;àµ

[15:05] <El_Che> ;)

[15:05] <jmerelo> El_Che: Yep, I know... Twitter also. 

[15:06] <tbrowder_>  .tell jmerelo i have a test to put in roast that proves p6 is silently changing non-breaking space to a normal space.

[15:07] <tbrowder_> AlexDaniel: are you here now?

[15:08] *** pmurias joined
[15:08] <pmurias> http://blogs.perl.org/users/pawel_murias/2018/05/building-rakudojs-with-javascript-of-the-near-future.html - rakudo.js blog post

[15:08] <tbrowder_> .tell jmerelo i have a test proving pod nbsp handling is not as expected

[15:08] <yoleaux> tbrowder_: I'll pass your message to jmerelo.

[15:11] *** Sgeo_ left
[15:11] <El_Che> "Billy, ask dad to pass me the salt"

[15:11] <El_Che> aka jmerelo is here

[15:12] <tbrowder_> .tell AlexDaniel i can fix p6 part of pod handling but need some guidance and consensus of how to do it.

[15:12] <yoleaux> tbrowder_: I'll pass your message to AlexDaniel.

[15:12] <jmerelo> tbrowder_: great. Thanks!

[15:12] <yoleaux> 15:08Z <tbrowder_> jmerelo: i have a test proving pod nbsp handling is not as expected

[15:13] <jmerelo> tbrowder_: that will create a cascade of solutions when solved. Great work!

[15:14] *** Sgeo joined
[15:15] <jmerelo> El_Che: you can also reach him by email, probably...

[15:16] <El_Che> jmerelo: I just wanted to check something, nothing urgent

[15:17] <tbrowder_> question for defining a fix: can we assume, in all pod, that any single nbsp between two words should be treated as part of the adjacent words? if so, i think the fix is fairly easy inside Pod.nqp; otherwise, we will need a more complex solution.

[15:18] <jmerelo> tbrowder_: I guess that's by definition, isn't it? 

[15:19] <tbrowder_> i think so, but i’ll bet someone will come up with an edge case!

[15:19] * jmerelo hates edge cases

[15:20] *** wamba joined
[15:20] <Geth> ¦ doc: 03ba4108dc | (Ben Davies)++ | doc/Language/js-nutshell.pod6

[15:20] <Geth> ¦ doc: Add Node.js to Perl 6 nutshell page

[15:20] <Geth> ¦ doc: 

[15:20] <Geth> ¦ doc: Fixes #1968

[15:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/03ba4108dc

[15:20] <synopsebot> Link: https://doc.perl6.org/language/js-nutshell

[15:20] <Geth> ¦ doc: d07dbce627 | (Ben Davies)++ | doc/Language/js-nutshell.pod6

[15:20] <Geth> ¦ doc: Add operators documentation

[15:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d07dbce627

[15:20] <Geth> ¦ doc: 343c1279d1 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/js-nutshell.pod6

[15:20] <Geth> ¦ doc: Merge pull request #1975 from Kaiepi/nodejs

[15:21] <Geth> ¦ doc: 

[15:21] <Geth> ¦ doc: WIP: Add Node.js to Perl 6 nutshell page

[15:21] <Geth> ¦ doc: Thanks! Great work.

[15:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/343c1279d1

[15:23] *** kaare_ joined
[15:27] *** shareable6 left
[15:30] *** araraloren left
[15:34] *** Sgeo left
[15:38] <raschipi> tbrowder_: do you have a patch already? I think that the easiest way to find the edge cases is to run roast and toaster after the changes...

[15:39] *** Sgeo joined
[15:45] <Geth> ¦ doc: 8d11b5f8a3 | (JJ Merelo)++ | doc/Language/list.pod6

[15:45] <Geth> ¦ doc: Changes phrasing for description of binding

[15:45] <Geth> ¦ doc: 

[15:45] <Geth> ¦ doc: It limits itself to the problem pointed out in the OP, so this should

[15:45] <Geth> ¦ doc: close #1378.

[15:45] <synopsebot> Link: https://doc.perl6.org/language/list

[15:45] <Geth> ¦ doc: 

[15:45] <Geth> ¦ doc: The terminology suggested by @smls is great, but it might be better to

[15:45] <Geth> ¦ doc: open some issues to pages where it's not well expressed.

[15:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8d11b5f8a3

[15:46] *** uzl joined
[15:48] *** athenot left
[15:50] <tbrowder_> raschipi: no fix yet, but that’s a good idea; i’m about to add a todo test for the intended fix to roast in just a moment...

[15:50] <jmerelo> tbrowder_++

[15:51] <raschipi> tbrowder++

[15:54] <[Coke]> moritz: Danke.

[15:54] * [Coke] just skips review.

[15:57] *** uzl_ joined
[15:59] *** uzl left
[16:01] *** sftp left
[16:16] <Geth> ¦ doc/master: 4 commits pushed by (Will "Coke" Coleda)++

[16:16] <Geth> ¦ doc/master: 65dde5e742 | whitespace

[16:16] <Geth> ¦ doc/master: 10fe35e9b3 | fix typos

[16:16] <Geth> ¦ doc/master: b63bc2a541 | learn new words

[16:16] <Geth> ¦ doc/master: 2c16092902 | fix compilation issues

[16:16] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/8d11b5f8a389...2c16092902ea

[16:17] *** athenot joined
[16:18] <El_Che> notable6: weekly http://blogs.perl.org/users/pawel_murias/2018/05/building-rakudojs-with-javascript-of-the-near-future.html

[16:18] <notable6> El_Che, Noted!

[16:18] <El_Che> pmurias++

[16:24] *** shareable6 joined
[16:25] *** DataLinkDroid3 joined
[16:27] *** DataLinkDroid2 left
[16:28] *** MilkmanDan left
[16:28] *** MilkmanDan joined
[16:31] *** sjoshi joined
[16:31] *** scimon left
[16:32] *** ChoHag_ joined
[16:32] *** ChoHag left
[16:32] *** mcmillhj left
[16:34] *** benjikun left
[16:36] *** benjikun joined
[16:36] *** dakkar left
[16:36] *** uzl_ is now known as uzl

[16:42] *** zachk joined
[16:44] *** zachk left
[16:44] *** zachk joined
[16:45] <uzl> Naive question: when changing a file in my local repo of rakudo, should I `git add` it before making any changes to it?

[16:45] *** mcmillhj joined
[16:45] *** mcmillhj left
[16:45] <mst> if it hasn't been changed -yet- then 'git add' is a no-op

[16:45] <jmerelo> uzl: adding does not matter much, except when you do a commit.

[16:46] <jmerelo> uzl: and when you commit, it will be the changes in that moment the ones that are committed. So no need to add it before making changes.

[16:47] <jmerelo> uzl: git add is a bit like "Hey, here's this file, I'm gonna do stuff on it, only not right now. Keep it in mind for latter"

[16:48] <jmerelo> uzl: and then, later, when commiting, git is like "Hey, you told me you cared about this file, so I'm registering changes and putting them into the local repo"

[16:49] <jmerelo> uzl: technically, git add adds the file to the index. Nice explanation and all the stuff, as usual, in SO https://stackoverflow.com/questions/3689838/whats-the-difference-between-head-working-tree-and-index-in-git

[16:49] <uzl> jmerelo: So what I happened is that I made a change to nqp/src/HLL/Compiler.nqp, then added, commited and pushed it to github

[16:50] *** mcmillhj joined
[16:50] <uzl> but when I went to do a pr, it didn't show that I made a simple addition but the whole file.

[16:51] <uzl> jmerelo: I'll take a look at that link. Thanks!

[16:51] <jmerelo> uzl: that might indicate a change in encoding.

[16:51] <jmerelo> uzl: good luck, anyway.

[16:51] <uzl> jmerelo: Thank you.

[16:54] *** sjoshi left
[17:01] *** cpage joined
[17:04] *** DeepIO joined
[17:04] *** DeepIO left
[17:04] *** DeepIO joined
[17:09] <El_Che> uzl: if you're not addidng files, all you need is "git commit -am "your message" && git push

[17:09] <El_Che> uzl: the -a commit all changes on all files you changed

[17:09] <El_Che> if you you want to commit something specific: "git commit -m "msg" filename"

[17:10] <jmerelo> El_Che: actually, -a adds all files that have been changed.

[17:10] <timotimo> i like putting a -v there so it will put the complete diff in the editor

[17:10] <jmerelo> El_Che: if you don't want that, you have to add every file you want in the commit one by one

[17:11] <El_Che> jmerelo: that's what I said

[17:11] <jmerelo> El_Che: and the first message was written before your second message (sorry)

[17:11] <timotimo> you don't have to do it one-by-one

[17:11] <jmerelo> El_Che: (and this message before your 4th message)

[17:11] <timotimo> just use -p and it'll ask you for every bit of change

[17:11] <timotimo> -p is available for "git add", "git commit", "git stash" and "git checkout" at the very least

[17:12] <El_Che> on my own code I tend to always use a branch, commit a lot and work mostly one file per commit

[17:12] *** stmuk joined
[17:12] <El_Che> so the -a is a good match in this workflow

[17:14] *** stmuk_ left
[17:16] <uzl> El_Che: Well, what happened is that I added two lines of code to /nqp/src/HLL/Compiler, commited the change to remote and realized that it says I've made

[17:16] <uzl> roughly 750 additions when I just added two lines to the file.

[17:16] <jmerelo> uzl: you can always revert the change. Easy if it's the last one on the repo, not so easy if it isn't, if it's a PR it's no big deal. 

[17:17] <El_Che> uzl: your editor does probably some automatic formatting

[17:19] *** domidumont joined
[17:19] <uzl> El_Che: I'm using vim with some configurations. jmerelo said it might be some change in encoding.

[17:20] <jmerelo> uzl: if you have only changed the carriage return, that might account for a change in all lines. Or encoding, but this is subtler...

[17:20] *** shareable6 left
[17:21] <timotimo> git handles changes in newline modes, though

[17:21] <El_Che> git diff origin/master

[17:22] <El_Che> will show the changes with master

[17:22] <El_Che> exactly what changed

[17:22] <El_Che> change origin/master with the name of the non changed source

[17:23] <El_Che> I have a origin (my fork) and upstream (rakudo) remote in my rakudo repo

[17:23] <El_Che> in my case so see the changes against rakudo master, I do "git diff upstream/master"

[17:24] <uzl> El_Che: Alright. I'll try to do that.

[17:35] *** f_ left
[17:41] <tobs> m: say ('a'..'z').rotor(1, 1, *+* ... *, :partial)

[17:41] <camelia> rakudo-moar 791c3e350: OUTPUT: «((a) (b) (c d) (e f g) (h i j k l) (m n o p q r s t))␤»

[17:42] <tobs> is the :partial eaten by the sequence operator?

[17:43] <timotimo> m: say ('a'..'z').rotor(:partial, 1, 1, *+* ... *)

[17:43] <camelia> rakudo-moar 791c3e350: OUTPUT: «Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5partial' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤»

[17:43] <timotimo> m: say ('a'..'z').rotor(:partial, |(1, 1, *+* ... *))

[17:43] <camelia> rakudo-moar 791c3e350: OUTPUT: «MoarVM panic: Memory allocation failed; could not allocate 920 bytes␤»

[17:43] <timotimo> ah, heh.

[17:43] *** athenot left
[17:43] <timotimo> m: say ('a'..'z').rotor(:partial, (1, 1, *+* ... *))

[17:43] <camelia> rakudo-moar 791c3e350: OUTPUT: «((a) (b) (c d) (e f g) (h i j k l) (m n o p q r s t) (u v w x y z))␤»

[17:43] <timotimo> seems to be the case, yes

[17:45] *** athenot joined
[17:46] <tobs> thanks, timotimo. The parentheses are good enough to disambiguate

[17:47] <timotimo> yes, the named argument doesn't have to be in front

[17:47] *** Ven`` joined
[17:52] *** Ven` joined
[17:52] *** Ven`` left
[17:58] *** uzl_ joined
[17:58] *** uzl left
[17:58] *** isBEKaml joined
[18:02] *** ChoHag_ is now known as ChoHag

[18:04] <Summertime> is there a reason why (1, * ... *) doesn't produce a seq of repeated 1s?

[18:05] <Summertime> I'm guessing the whatever doesn't get made into a functionish thing unless its used (e.g. +* ) in some way?

[18:05] *** ttkp6 joined
[18:05] *** epony left
[18:06] <timotimo> that's right, in many places you can pass Whatever as an actual value

[18:07] <timotimo> like for the end points of a range

[18:07] <timotimo> m: say *..10

[18:07] <camelia> rakudo-moar 791c3e350: OUTPUT: «-Inf..10␤»

[18:08] <Summertime> ah yeah, just reading the documentation for Whatever now, interesting

[18:10] <tbrowder_>  jmerelo: fix for rakudo GH #1852 is in my PR #1854 awaiting review by someone

[18:12] <tbrowder_> lizmat just merged it!

[18:12] <raschipi> m: say (1, +* ... *)[^10]

[18:12] <camelia> rakudo-moar 791c3e350: OUTPUT: «(1 1 1 1 1 1 1 1 1 1)␤»

[18:12] <timotimo> m: say (1 xx *)[^10]

[18:12] <camelia> rakudo-moar 791c3e350: OUTPUT: «(1 1 1 1 1 1 1 1 1 1)␤»

[18:12] <lizmat> tbrowder_: shouldn't I have ?

[18:12] *** MilkmanDan left
[18:13] *** DataLinkDroid4 joined
[18:13] *** MilkmanDan joined
[18:14] <tbrowder_> i was just waiting for someone to check it—i don’t want to abuse my new super powers—thanks!

[18:14] <Summertime> and ({1} ... *) too, xx is probably the most cleanest though, keep forgetting about it

[18:16] *** DataLinkDroid3 left
[18:18] *** shareable6 joined
[18:21] <jmerelo> tbrowder_: great! Thanks!

[18:21] <lizmat> tbrowder_: ah, hadn't realized you already have a commit bit  :-)

[18:21] <lizmat> congratulationns!

[18:22] *** Bocaneri left
[18:22] <tbrowder_>  thanks! i’m honored to join such esteemed company.

[18:23] <jmerelo> tbrowder_: so \s matches non-breaking space? 

[18:23] <tbrowder_> yes

[18:24] *** mcmillhj left
[18:25] <jmerelo> tbrowder_: great job. I couldn't for the world get to those depths to know what was going on... 

[18:25] <jmerelo> tbrowder_: will wait until the next release to fix the issues. :-)

[18:25] *** sjoshi joined
[18:26] <El_Che> releasable6: status

[18:26] <releasable6> El_Che, Next release will happen when it's ready. 0 blockers. 115 out of 117 commits logged

[18:26] <releasable6> El_Che, Details: https://gist.github.com/15f80c98a840bad6d300032dab8ea371

[18:26] <jmerelo> El_Che: right, we are approaching that day... 

[18:27] *** mcmillhj joined
[18:28] *** sjoshi left
[18:30] *** comborico1611 joined
[18:31] *** mcmillhj left
[18:32] *** domidumont left
[18:33] *** pilne joined
[18:34] <tbrowder_> jmerelo: thnx for that: but slogging in pod code is much easier for me than fooling with the grammar, it fits my single-cpu brain better

[18:37] *** amalia___ left
[18:38] *** eliasr joined
[18:38] *** mcmillhj joined
[18:43] <comborico1611> tbrowder_: I'm right there with you on having a single-cpu brain. 

[18:52] <buggable> New CPAN upload: P5opendir-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5opendir:cpan:ELIZABETH

[18:53] <Geth> ¦ doc: coke assigned to JJ Issue xt/links-not-links false positive? https://github.com/perl6/doc/issues/2039

[18:55] *** AlexDaniel joined
[18:55] *** darutoko left
[18:58] *** Ven` left
[18:59] *** Ven`` joined
[18:59] *** mcmillhj left
[19:02] *** mcmillhj joined
[19:02] *** mcmillhj left
[19:03] <buggable> New CPAN upload: P5pack-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5pack:cpan:ELIZABETH

[19:03] <buggable> New CPAN upload: P5print-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5print:cpan:ELIZABETH

[19:05] *** sjoshi joined
[19:07] *** mcmillhj joined
[19:11] *** sjoshi left
[19:12] <Geth> ¦ doc: ad5ae59a57 | (JJ Merelo)++ | xt/links-not-links.t

[19:12] <Geth> ¦ doc: Changes code to avoid false positive

[19:12] <Geth> ¦ doc: 

[19:12] <Geth> ¦ doc: In this case, it was counting the number of `http`, and it was getting

[19:12] <Geth> ¦ doc: confused due to the double https in that URL. I have changed it to

[19:12] <Geth> ¦ doc: count them only if they follow the `|` in an `L` sentence. Still

[19:12] <Geth> ¦ doc: hacky, but no fake positives now. Thanks @coke for running this,

[19:12] <Geth> ¦ doc: closes #2039.

[19:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ad5ae59a57

[19:12] <buggable> New CPAN upload: P5push-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5push:cpan:ELIZABETH

[19:12] <buggable> New CPAN upload: P5quotemeta-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5quotemeta:cpan:ELIZABETH

[19:20] <tbrowder_> comborico1611: and as i age my memory is more like a fifo queue every day

[19:22] <buggable> New CPAN upload: P5rand-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5rand:cpan:ELIZABETH

[19:24] *** sftp joined
[19:25] <comborico1611> tbrowder_: Heh.  All mankind is brought to subjection one way or another.

[19:27] <[Coke]> O_o;

[19:27] *** espadrine_ joined
[19:33] <buggable> New CPAN upload: P5readlink-0.0.2.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5readlink:cpan:ELIZABETH

[19:33] <buggable> New CPAN upload: P5reset-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5reset:cpan:ELIZABETH

[19:36] *** epony joined
[19:40] <Geth> ¦ doc: ef6e19e3cc | (JJ Merelo)++ | doc/Language/regexes.pod6

[19:40] <Geth> ¦ doc: Adds info on :my; refs #1475

[19:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ef6e19e3cc

[19:40] <Geth> ¦ doc: 491f70305c | (JJ Merelo)++ | doc/Language/regexes.pod6

[19:40] <Geth> ¦ doc: Document :our

[19:40] <synopsebot> Link: https://doc.perl6.org/language/regexes

[19:40] <Geth> ¦ doc: 

[19:40] <Geth> ¦ doc: Also adds :my and :our to index. Examples provided by the OP (thanks,

[19:40] <Geth> ¦ doc: @lefth) and

[19:40] <Geth> ¦ doc: [roast](https://github.com/perl6/roast/blob/d1baf2e7a3e56cd6619c46040d04ed6daebc1d02/S05-modifier/my.t). There

[19:40] <Geth> ¦ doc: does not seem to be many other uses of :our in the wild. Anyway, this

[19:40] <Geth> ¦ doc: closes #1475.

[19:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/491f70305c

[19:42] <buggable> New CPAN upload: P5reverse-0.0.5.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5reverse:cpan:ELIZABETH

[19:42] <buggable> New CPAN upload: P5seek-0.0.2.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5seek:cpan:ELIZABETH

[19:44] <torbjorn> how can I flatten an array of one kv pair hashes? in perl5 I'd use context to take care of it, ie my %foo = map { %$_ } @my_array;

[19:45] <torbjorn> (these are key => value pairs im gobling up in a Grammar)

[19:45] <jmerelo> torbjorn: Just use hash

[19:45] <jmerelo> p6: <a b c d e f>.Hash

[19:45] <camelia> rakudo-moar 2f4b2f428: ( no output )

[19:45] <jmerelo> p6: say <a b c d e f>.Hash

[19:45] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «{a => b, c => d, e => f}␤»

[19:45] <skids> or pairup.

[19:46] <torbjorn> jmerelo: each element of array is a hash

[19:46] <skids> Oh.  Is it an Array or a list?

[19:47] <lucasb> m: [{a=>1},{b=>2}].flatmap(*.kv).say

[19:47] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «(a 1 b 2)␤»

[19:47] <jmerelo> p6: say [{:42a},{:42b}].Hash

[19:47] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «{a      42 => {b => 42}}␤»

[19:47] <jmerelo> Hum, not that...

[19:47] <skids> m: [{:a},{:b}].List.flat.say

[19:47] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «(a => True b => True)␤»

[19:48] <skids> Or just .flat for lists.

[19:48] <skids> But it'll be a Seq so you may want to .cache or .list after that.

[19:48] <jmerelo> m: [{:a},{:b}].List.flat.Hash.say

[19:48] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «{a => True, b => True}␤»

[19:48] <jmerelo> m: [{:a},{:b}].flat.Hash.say

[19:48] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «{a      True => {b => True}}␤»

[19:49] <jmerelo> Hum, not that. 

[19:49] <skids> Arrays have an implicit $ on ech of their elements that prevents them from being flattened

[19:50] <skids> Array.List defuses that.

[19:50] <raschipi> beats having to deal with references

[19:50] <skids> (And Array.list does not)

[19:50] <torbjorn> .flatmap(*.kv).Hash seems right?

[19:51] <torbjorn> (whats the '*' for there?)

[19:52] <skids> It's a way to avoid {} when you want to make a closure.

[19:52] <raschipi> The splat is there to create a lambda fr flatmap to call

[19:52] <raschipi> for flatmap*

[19:52] <skids> called WhateverCode

[19:52] <buggable> New CPAN upload: P5shift-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5shift:cpan:ELIZABETH

[19:52] <buggable> New CPAN upload: P5sleep-0.0.7.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5sleep:cpan:ELIZABETH

[19:53] <buggable> New CPAN upload: P5study-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5study:cpan:ELIZABETH

[19:53] <torbjorn> huh

[19:53] <jmerelo> torbjorn: just a placeholder for the implicit loop variable.

[19:53] <jmerelo> torbjorn: kinda like $_ in perl 5

[19:53] <lizmat> torbjorn: basically *.kv is short for { $_.kv }

[19:53] <raschipi> m: [{:a},{:b}].flatmap({$_.kv}).Hash

[19:53] <camelia> rakudo-moar 2f4b2f428: ( no output )

[19:53] <torbjorn> I see. and I agree.

[19:54] <raschipi> m: say  [{:a},{:b}].flatmap({$_.kv}).Hash

[19:54] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «{a => True, b => True}␤»

[19:54] <torbjorn> just need to unbedaffel myself from reading the Whatever doc

[19:55] <jmerelo> torbjorn: would you mind to ask that question (and any other you might have) in StackOverflow too? It's better structured for search and so no

[19:55] <torbjorn> In principle I would not, yet now I will, but thats good advice, Ill make it a habit to ask double

[19:55] <torbjorn> (just busy now)

[19:55] <jmerelo> torbjorn: re: the doc, if you find some problem there, don't hesitate to write an issue. 

[19:56] <torbjorn> sure

[19:56] <torbjorn> can one say that the flexibility and simplicity of the perl5 list context has been replaced by a simplificy of defining lambdas in perl6?

[19:57] <torbjorn> .. which then also leads to good things elsewhere too

[19:57] <jmerelo> torbjorn: yep, kinda. Defining lambda and contextualizing.

[19:58] *** jmerelo left
[19:58] *** uzl_ left
[19:59] *** uzl_ joined
[20:00] *** Kaiepi left
[20:01] *** Kaiepi joined
[20:03] <buggable> New CPAN upload: P5substr-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5substr:cpan:ELIZABETH

[20:03] <buggable> New CPAN upload: P5tie-0.0.9.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5tie:cpan:ELIZABETH

[20:06] <raschipi> torbjorn: Also, keeping structure is much easier. Don't need to fiddle with references. But to get rid of structure, you need to be explicit.

[20:12] <buggable> New CPAN upload: P5times-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5times:cpan:ELIZABETH

[20:21] <lucasb> m: 10 ~~ regex { :state $x = 42; { say $x } }

[20:21] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «42␤»

[20:21] <lucasb> m: 10 ~~ rx/ :state $x = 42; { say $x } /

[20:21] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «(Any)␤»

[20:24] *** Ven`` left
[20:24] <Geth> ¦ doc: chsanch++ created pull request #2040: Change "file handle" to "filehandle"

[20:24] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2040

[20:27] <lucasb> ^^ do I have any wrong expectation or should 'state' work the same with both rx and regex?

[20:33] *** uzl_ left
[20:33] <Kaiepi> m: say "\x00A0".match(/(\s)/)

[20:33] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «｢ ｣␤ 0 => ｢ ｣␤»

[20:34] *** zachk left
[20:34] <Kaiepi> ffs no wonder i wasn't matching only regular spaces

[20:36] <raschipi> u:  

[20:36] <unicodable6> raschipi, U+00A0 NO-BREAK SPACE [Zs] ( )

[20:37] <Kaiepi> huh

[20:38] <Kaiepi> i'm used to \s only matching regular spaces

[20:38] <raschipi> \s matches any tipe of whitespace

[20:39] <Kaiepi> oh, i was mistaken

[20:40] <raschipi> m: say " " ~~ / \s /

[20:40] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «｢ ｣␤»

[20:40] <raschipi> u:  

[20:40] <unicodable6> raschipi, U+1680 OGHAM SPACE MARK [Zs] ( )

[20:40] <Geth> ¦ doc: c4a2beb53f | (Christian Sánchez)++ | 11 files

[20:40] <Geth> ¦ doc: Change "file handle" to "filehandle"

[20:40] <Geth> ¦ doc: 

[20:40] <Geth> ¦ doc: This is part of the fixes suggested in #2015

[20:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c4a2beb53f

[20:40] <Geth> ¦ doc: 12ca2afcb5 | nxadm++ (committed using GitHub Web editor) | 11 files

[20:40] <Geth> ¦ doc: Merge pull request #2040 from chsanch/term-norm

[20:40] <Geth> ¦ doc: 

[20:40] <Geth> ¦ doc: Change "file handle" to "filehandle"

[20:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/12ca2afcb5

[20:40] <Kaiepi> \s in node is hti and miss with which spaces it matches iirc

[20:41] <Kaiepi> u: ﾠ

[20:41] <unicodable6> Kaiepi, U+FFA0 HALFWIDTH HANGUL FILLER [Lo] (ﾠ)

[20:41] <Kaiepi> m: "\xffa0" ~~ /\s/

[20:41] <camelia> rakudo-moar 2f4b2f428: ( no output )

[20:41] <raschipi> That's Lo, not Zs

[20:42] <Kaiepi> ah

[20:43] *** slayergames joined
[20:43] <raschipi> Lo is "Letter, other". Zs is "Separator, Space"

[20:43] *** slayergames left
[20:44] <Kaiepi> anyway the question i was leading up to was how to replace a space in the middle of a string

[20:44] <raschipi> Here is the list of what \s matches: https://www.fileformat.info/info/unicode/category/Zs/list.htm

[20:45] <raschipi> There's a discussion going on about it matching U+00A0 NO-BREAK SPACE

[20:46] *** shareable6 left
[20:47] <Kaiepi> i have a regex that looks like s:g/Perl\x[0020](<[5..6]>)/Perl\x[00A0]$0/ that i'm trying to use to replace the space in the middle with a no break space

[20:48] <Kaiepi> i've been working at it for a while but i haven't worked out the syntax to use to make it work

[20:50] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/05/21/2018-21-mitigating-denial/

[20:50] <raschipi> lizmat++

[20:50] <Kaiepi> how would i go about replacing the space?

[20:50] <Juerd> lizmat++

[20:51] *** athenot left
[20:53] <Kaiepi> oh, lizmat++

[20:55] <geekosaur> seems to work here, modulo encoding

[20:57] <geekosaur> pyanfar Z$ echo 'Perl 6' | 6 'my $x = $*IN.get; $x ~~ s:g/Perl\x[0020](<[5..6]>)/Perl\x[00A0]$0/; say $x' | od -c

[20:57] <geekosaur> 0000000   P   e   r   l 302 240   6  \n

[20:57] <geekosaur> (302 240 is correct for UTF8 encoded)

[20:58] <tbrowder_> lizmat: i’m blushing, thanks for the kind words!

[21:01] *** dct joined
[21:01] *** isBEKaml left
[21:02] <tbrowder_> Kaiepi: whats the char after the $ for!

[21:02] <geekosaur> ???

[21:02] <evalable6> geekosaur, rakudo-moar 2f4b2f428: OUTPUT: «Stub code executed␤  in block <unit> at /tmp/ZMwjBKuaMc line 1␤»

[21:02] <tbrowder_>  s/!/?/

[21:03] <Kaiepi> to give a place for what's matched by <[5..6]>

[21:03] <geekosaur> it's $0 (first match) in the replacement

[21:07] <tbrowder_> oh, ok

[21:08] <Kaiepi> m: my $a = 'a b c'; $a ~~ s:g/a\x[0020](<[b..d]>)\x[0020]c/d\x[00A0]$1\x[00A0]f/; say $/

[21:08] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «Use of Nil in string context␤(｢a b c｣␤ 0 => ｢b｣)␤  in code  at <tmp> line 1␤»

[21:08] <geekosaur> hm. I haven't rebuilt recently, wonder if this is a regressioon

[21:09] <Kaiepi> i just rebuilt earlier today

[21:09] *** raschipi left
[21:09] <Kaiepi> This is Rakudo version 2018.04.1-115-g791c3e350 built on MoarVM version 2018.04.1-121-gd634d24cf

[21:10] <lucasb> s/$1/$0/ ?

[21:10] * geekosaur pulls, rebuilds

[21:11] <Kaiepi> Use of uninitialized value of type Any in string context.

[21:11] <geekosaur> fff, not this one again

[21:12] <Kaiepi> regression?

[21:12] *** mcmillhj left
[21:13] <geekosaur> no, there's some insanity somewhere that leads to "Couldn't determine correct 'make' program"

[21:13] <geekosaur> which is what I get for using rakudobrew, more or less

[21:14] <Kaiepi> oh

[21:14] <Kaiepi> Configure.pl's kinda screwy with make on my system as well

[21:16] <Kaiepi> though not in that way

[21:17] <tbrowder_> Kaiepi: what was result of your attempt with the Perl regex?

[21:18] *** rindolf left
[21:18] <geekosaur> ok, so rebuilt with moar-blead and it still works

[21:19] <geekosaur> oh

[21:19] <geekosaur> m: my $a = 'a b c'; $a ~~ s:g/a\x[0020](<[b..d]>)\x[0020]c/d\x[00A0]$0\x[00A0]f/; say $/

[21:19] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «(｢a b c｣␤ 0 => ｢b｣)␤»

[21:23] *** robertle left
[21:23] <tbrowder_> hm, i can’t find the \x[] for unicode in the regex doc...

[21:24] <tbrowder_> i think you need \c[] instead

[21:24] <geekosaur> it's not regex syntax, it's double quoted string syntax

[21:25] <tbrowder_> Kaiepi: ^

[21:25] <Kaiepi> m: "\x00A0" ~~ /\x[00A0]/

[21:25] <camelia> rakudo-moar 2f4b2f428: ( no output )

[21:25] <Kaiepi> m: say "\x00A0" ~~ /\x[00A0]/

[21:25] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «｢ ｣␤»

[21:26] <Kaiepi> hold on throwder, it takes a minute for the script to run

[21:26] <Kaiepi> * tbrowder_

[21:27] *** skids left
[21:27] <geekosaur> tbrowder_, https://docs.perl6.org/language/quoting look for "To enter unicode sequences"

[21:29] <tbrowder_> never mind, my mistake \x is kind of hidden...

[21:40] <tbrowder_> m: say “\x[00a0]”.ord.base(16)

[21:40] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «A0␤»

[21:44] *** HaraldJoerg left
[21:48] *** HaraldJoerg1 joined
[22:09] *** markong left
[22:11] *** pmmmm joined
[22:12] *** lucasb left
[22:12] *** markong joined
[22:18] *** slayergames joined
[22:21] *** dct left
[22:23] <Kaiepi> the problem ended up being an issue with my logic somewhere else in my code

[22:24] *** dct joined
[22:26] *** ChoHag left
[22:26] <tbrowder_> that’s good to know: your regex is working as advertised!

[22:27] *** pmurias left
[22:28] *** espadrine_ left
[22:30] *** slayergames left
[22:35] *** raschipi joined
[22:43] *** ChoHag joined
[22:46] *** mcmillhj joined
[22:51] *** nebuchadnezzar left
[22:51] *** dct left
[22:51] *** nebuchadnezzar joined
[22:58] *** skids joined
[22:58] *** ccntrq joined
[23:01] *** mcmillhj left
[23:03] *** epony left
[23:04] *** epony joined
[23:12] *** ChoHag left
[23:16] *** HaraldJoerg1 left
[23:21] <Kaiepi> m: if ("Perl 6" ~~ m/Perl<[\s]>(<5..6]>)/ && $1) { say $0 }

[23:21] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «5===SORRY!5===␤Unrecognized regex metacharacter < (must be quoted to match literally)␤at <tmp>:1␤------> 3if ("Perl 6" ~~ m/Perl<[\s]>(<7⏏055..6]>)/ && $1) { say $0 }␤Regex not terminated.␤at <tmp>:1␤------> 3if ("Perl 6" ~~ m/P…»

[23:22] <Kaiepi> m: if ("Perl 6" ~~ m/Perl<[\s]>(<[5..6]>)/ && $1) { say $0 }

[23:22] <camelia> rakudo-moar 2f4b2f428: ( no output )

[23:22] <Kaiepi> i'll need to check again but this was segfaulting on me

[23:24] <Kaiepi> might have to do with the seq of promises using the regex for io in parallel

[23:31] <timotimo> might be able to use race/hyper for that and have less trouble

[23:31] <Kaiepi> that's what i'm using

[23:31] <timotimo> oh, ok

[23:31] <timotimo> and i assume latest rakudo, and not mutating hashes or arrays from multiple threads at once?

[23:32] <Kaiepi> ohhh

[23:32] <Kaiepi> i was dumb and mutating an array of promises

[23:32] <timotimo> that could be bad, but usually only if you resize it

[23:33] <Kaiepi> hm

[23:33] <Kaiepi> what about I/O?

[23:33] *** ChoHag joined
[23:34] <timotimo> I/O is fine, there's locks on handles

[23:34] <timotimo> annoyingly, reading and writing is one lock, so you can easily run into trouble

[23:35] <Kaiepi> i have promises that read a file, modifies its data, and writes it, but there shouldn't be any promises trying to access the same files

[23:36] <timotimo> we do locks per handle, not per file :)

[23:37] <Kaiepi> there's only one file handle per promise

[23:37] <timotimo> that should be fine, then, i guess

[23:43] *** w_richard_w joined
[23:55] *** wamba left
