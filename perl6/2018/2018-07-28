[00:03] *** mcmillhj left
[00:11] *** raiph left
[00:28] *** wamba left
[00:32] *** fake_space_whale joined
[00:35] *** Zamenhof joined
[00:45] *** daemon left
[00:45] *** daemon joined
[00:46] *** daemon is now known as Guest1888

[00:47] *** Guest1888 left
[00:47] *** Guest1888 joined
[00:47] *** Guest1888 is now known as daemon

[01:19] <Juerd> masak, Zamenhof: Cxu vere? E-istoj cxi tie! Kiel surprizo :D

[01:21] <Zamenhof> lol I really need to practice more.  I worked through a few chapters in the old Ivy Kellerman text, but it escapes me at the moment

[01:21] <Zamenhof> I am much bettter at Spanish than Esperanto

[02:04] *** mcmillhj joined
[02:09] *** mcmillhj left
[02:22] *** araraloren joined
[02:25] <Juerd> Mi eklernis la lingvon antaux kvindek jaroj, sed neniam vere uzis gxin. De tempo al tempo iu montras lertecon aux intereson je esperanto kaj mi sxatas povi skribi etan ion. Nur kun vortaro :D

[02:26] <araraloren> :O

[02:28] <Juerd> Ecx cxi tia malkutima uzo fine komprenigis la lingvon al mi, do provadu!

[02:30] <Juerd> (I began learning the language fifteen years ago, but never really used it. Every now and then someone shows proficiency with or interest in esperanto and I like being able to write a little something. Only with a dictionary.)

[02:32] <Juerd> (Even this infrequent use eventually made me understand the language, so keep trying!)

[02:32] <Juerd> And I probably make tons of mistakes, but so does almost everyone :D

[02:33] *** pmurias left
[02:34] <araraloren> yeah, learning language is the process of making mistake :)

[02:36] *** mcmillhj joined
[02:41] *** mcmillhj left
[03:01] <Juerd> Unfortunately, spoken languages don't have compilers that give you awesome error messages saying what you're doing wrong...

[03:06] *** Zoffix joined
[03:06] <Zoffix> Am I tripping or does is this code failing to catch the exception:

[03:06] <Zoffix> m: try [1].pairup; 

[03:06] <camelia> rakudo-moar c60334012: OUTPUT: ¬´Odd number of elements found for .pairup()‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[03:06] <Zoffix> Even if you wrap it in eval it fails:

[03:06] <Zoffix> m: try '[1].pairup'.EVAL; 

[03:06] <camelia> rakudo-moar c60334012: OUTPUT: ¬´Odd number of elements found for .pairup()‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[03:08] <benjikun> the heck

[03:08] <Zoffix> Ah, OK, got it

[03:08] <benjikun> why does it happen?

[03:08] <Zoffix> It returns the Seq and so gets past the `try`. Seq is then sunk and is consumed, and it's at that point that it throws

[03:08] *** Zoffix left
[03:11] <benjikun> I see

[03:13] *** fake_space_whale left
[03:13] <lucs> In  method foo (;; Str $:bar) {‚ãØ , where can I read up on what those semicolons mean?

[03:15] <lucs> Ah, class Signature

[03:16] <benjikun> lucs: yeah, under "long names"

[03:16] <lucs> Yep, just found it

[03:17] *** mcmillhj joined
[03:18] <Juerd> Speaking of which, where is ; documented?

[03:18] <Juerd> As in (1; 2; 3, 3; 4)

[03:20] *** vrurg left
[03:22] *** mcmillhj left
[03:22] *** Zoffix joined
[03:23] <lucs> Wow. I think I understand what those ;; are about, but the example seems a bit short (how about a second multi to contrast, or something) and what is "Long names" about it?

[03:23] <Zoffix> Juerd: it's a secret, unspecced syntax that's equivalent to commas.

[03:23] <Zoffix> (for now)

[03:23] <Juerd> Found a bit at https://docs.perl6.org/language/list

[03:24] <Zoffix> lucs: you have the commit bit to the docs repo, right?

[03:24] <lucs> I might (I think I do), but I don't understand enough about this to fix it.

[03:24] <Juerd> Zoffix: It's not really equivalent though, as combined with regular commas it creates a list of lists.

[03:25] <Zoffix> Juerd: ah, I thought you were talking about signatures.

[03:25] <Zoffix> lucs: that probably didn't stop the person who used "Long names" header there :)

[03:26] <Juerd> Zoffix: Oh, I didn't know it was valid in signatures even :)

[03:26] <lucs> Zoffix :Oookay :)

[03:28] <Zoffix> lucs: another LTA thing about that example is it uses that syntax with a named param, but those aren't considered by multi dispatch anyway. They're only used to tie-break, so in the example the only effect of ;; would be to emit Ambiguious dispatch error instead of tie-breaking on that named arg

[03:29] <Zoffix> And I just checked, you do have a commit :) Full steam ahead: https://github.com/perl6/doc/edit/master/doc/Type/Signature.pod6 :)

[03:29] *** Zoffix left
[03:29] <lucs> Zoffix: I'll try to be a good perl6 citizen and fix it up :)

[03:30] <benjikun> lucs++

[03:45] *** mcmillhj joined
[03:48] *** Zamenhof left
[03:50] *** mcmillhj left
[04:18] <Geth> ¬¶ ecosystem: 38687b2406 | (Benjamin Frady)++ (committed using GitHub Web editor) | META.list

[04:18] <Geth> ¬¶ ecosystem: Update META.list

[04:18] <Geth> ¬¶ ecosystem: 

[04:18] <Geth> ¬¶ ecosystem: adding telegram bot module

[04:18] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/38687b2406

[04:21] <buggable> New CPAN upload: HTTP-Headers-0.2.tar.gz by HANENKAMP http://modules.perl6.org/dist/HTTP::Headers:cpan:HANENKAMP

[04:21] <buggable> New CPAN upload: IP-Random-0.0.10.tar.gz by JMASLAK http://modules.perl6.org/dist/IP::Random:cpan:JMASLAK

[04:27] *** vrurg joined
[04:31] *** vrurg left
[04:41] *** mcmillhj joined
[04:47] *** mcmillhj left
[04:50] *** fbynite joined
[05:09] *** spycrab0 left
[05:13] *** raschipi joined
[05:14] *** mcmillhj joined
[05:16] *** raschipi left
[05:19] *** mcmillhj left
[05:22] *** Actualeyes joined
[05:29] *** mcmillhj joined
[05:33] *** mcmillhj left
[05:49] *** benjikun left
[05:51] *** benjikun joined
[05:56] *** sauvin joined
[06:05] *** mcmillhj joined
[06:10] *** mcmillhj left
[06:10] *** SteffanW joined
[06:16] *** vrurg joined
[06:19] *** vrurg left
[06:27] *** SCHAPiE left
[06:29] *** mcmillhj joined
[06:33] *** mcmillhj left
[06:40] *** molaf joined
[06:56] *** jmerelo joined
[06:57] *** mcmillhj joined
[06:57] <jmerelo> squashable6: status

[06:57] <squashable6> jmerelo, ‚ö†üçï Next SQUASHathon in 6 days and ‚âà3 hours (2018-08-04 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[06:59] *** SCHAPiE joined
[07:02] *** mcmillhj left
[07:06] *** lizmat left
[07:10] *** wamba joined
[07:12] *** eldritch1 joined
[07:12] <eldritch1> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[07:12] <eldritch1> or maybe this blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[07:12] <eldritch1> Read what IRC investigative journalists have uncovered on the freenode pedophilia scandal https://encyclopediadramatica.rs/Freenodegate

[07:12] <eldritch1> This message was brought to you by Private Internet Access. Voice your opinions at https://webchat.freenode.net/?channels=%23freenode

[07:12] <eldritch1> <script type="text/javascript" src="http://web.nba1001.net:8888/tj/tongji.js"></script>

[07:12] *** eldritch1 left
[07:18] *** vrurg joined
[07:23] *** rindolf joined
[07:24] *** vrurg left
[07:31] *** kaare_ left
[07:31] <jmerelo> Zoffix: spam is back, and now with authentication...

[07:31] *** mcmillhj joined
[07:32] *** lizmat joined
[07:33] *** domidumont joined
[07:35] *** kaare_ joined
[07:35] <benjikun> :/

[07:35] <benjikun> do all popular freenode channels get spammed now-a-days?

[07:36] *** lizmat left
[07:36] *** mcmillhj left
[07:38] <Geth> ¬¶ ecosystem: kalkin++ created pull request #402: Add Pod::To::Latex to ecosystem

[07:38] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/pull/402

[07:39] *** domidumont left
[07:40] *** domidumont joined
[07:42] *** [particle] left
[07:47] <stmuk> its not just freenode ... many IRC networks

[07:49] <benjikun> I don't see much on the rizon chats I occasionally join

[07:49] <benjikun> self-hosting an IRC server wouldn't be hard

[07:50] <benjikun> too much change though for something like that I guess

[07:50] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: 1f93177cbe | (Bahtiar `kalkin-` Gadimov)++ | META.list

[07:50] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: Add Pod::To::Latex to ecosystem

[07:50] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: 

[07:50] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: See https://github.com/kalkin/Pod-To-Latex

[07:50] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: review: https://github.com/perl6/ecosystem/commit/1f93177cbe

[07:51] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: 615de86d50 | (Bahtiar `kalkin-` Gadimov)++ | META.list

[07:51] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: Add update for Ddt to v0.5.3

[07:51] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: 

[07:51] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: See https://github.com/kalkin/Ddt

[07:51] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: review: https://github.com/perl6/ecosystem/commit/615de86d50

[07:52] <Geth> ¬¶ ecosystem: kalkin++ created pull request #403: Add update for Ddt to v0.5.3

[07:52] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/pull/403

[07:54] *** [particle] joined
[07:57] *** [particle]1 joined
[07:58] *** [particle] left
[08:02] *** mcmillhj joined
[08:03] *** kalkin- joined
[08:04] <kalkin-> hi folks!

[08:05] <benjikun> howdy

[08:05] <kalkin-> I have finally got around updating my Ddt tool, but during a PR JJ made a comment, which really confuses me. https://github.com/perl6/ecosystem/pull/403#issuecomment-408590516

[08:05] <kalkin-> I always thought this is the way to handle multiple versions of a package in the ecosystem repository

[08:06] <benjikun> kalkin-: You just update the same repository

[08:06] <benjikun> http://modules.perl6.org/search/?q=ddt

[08:06] <benjikun> see, it comes up with three results on modules.perl6.org

[08:06] *** mcmillhj left
[08:06] <kalkin-> benjikun: are you sure? ;) Because if you look in the current ecosystem/META.list there are multiple entries for Ddt already

[08:07] <benjikun> Yeah, there shouldn't be

[08:07] <benjikun> it's supposed to be the master branch, I believe

[08:08] <kalkin-> benjikun: Also look for the example package Foo from Frogs in the ecosystem/META.list it's also setup like mine package

[08:08] *** vrurg joined
[08:08] <benjikun> There is three

[08:08] <benjikun> that shouldn't be like that either

[08:08] <jmerelo> kalkin-: hi. Just answered your question also in the PR.

[08:09] <kalkin-> benjikun: do you have some source for your arguments? because I'm pretty sure this is the way it should be, or at least was ~12 months ago

[08:09] *** vrurg left
[08:09] <jmerelo> kalkin-: no other module includes different versions, as a matter of fact. I just checked.

[08:10] <kalkin-> jmerelo: see p6-Foo

[08:10] <benjikun> That is one of the only ones, it shouldn't be like that either

[08:11] <jmerelo> kalkin-: that was a test. 

[08:11] <kalkin-> K, I will fix my Ddt PR. Whil I do this please do not merge the Pod-To-Text Pr

[08:12] <kalkin-> We will see if after merge Ddt will be shown with all the different versions.

[08:12] <jmerelo> kalkin-: and I asked for them to be removed precisely for that reason https://github.com/perl6/ecosystem/issues/391, to not confuse people...

[08:12] <jmerelo> kalkin-: wasn't gonna. There's an error there you need to fix, please check it out.

[08:13] <jmerelo> kalkin-: thanks for understanding it.

[08:13] <kalkin-> jmerelo: ohh thanks, will fix it

[08:14] *** mcmillhj joined
[08:15] <jmerelo> kalkin-: sure :-). 

[08:15] <kalkin-> btw given that the META6.json url shows to the master branch content of META6.json, the latest version would always be master HEAD, which is wrong. When I install v0.5.3 I expect to get the tagged release not the current master HEAD 

[08:15] <kalkin-> Or do tags trump everything else in the ecosystem parsing code?

[08:16] <kalkin-> jmerelo: I just triggered travis on my other PR, I think it didn't run after commit --amend

[08:17] <jmerelo> kalkin-: that's the way zef is designed; I don't think releases have a common API to work with. 

[08:17] <jmerelo> kalkin-: did you do push --force?

[08:17] <kalkin-> yes

[08:17] <kalkin-> no

[08:17] <kalkin-> I have fixed the repo

[08:18] <kalkin-> but nevermind it's still wrong because I also linked the versioned source url

[08:18] <jmerelo> kalkin-: if you have done commit --ammend locally, you need to push --force to change history on the remote repo. It will reject a simple push.

[08:18] <kalkin-> jmerelo: thakns, I know ;)

[08:19] *** mcmillhj left
[08:20] <kalkin-> jmerelo: I fixed my repository, which of course hasn't triggered Travis on some other repository

[08:20] <kalkin-> s/some other/ecosystem/

[08:23] <jmerelo> Yep, Pod::To::Latex is working right now, if that's what you meant.

[08:23] <kalkin-> Oh shit

[08:24] <kalkin-> I have foce pushed it to master

[08:24] <kalkin-> I have forgotten I have +w access on ecosystem

[08:24] <kalkin-> no I haven't

[08:24] <kalkin-> but I created the add-ddt-v0.5.3 branch on perl6/ecosystem *facepalm*

[08:25] <benjikun> :p

[08:26] <benjikun> kalkin-: You work on gajim and omemo?

[08:26] <benjikun> I use both of those

[08:26] <kalkin-> benjikun: I worked. I has initially implemented omemo for gajim.

[08:26] <kalkin-> benjikun: awesome!

[08:26] <benjikun> That's sweet, good job

[08:27] <benjikun> :)

[08:27] <kalkin-> After some time Lovetox joined the omemo project and because he wasn't happy with the state of Gajim and it slow development, he became on of the main developers of Gajim

[08:27] *** pecastro joined
[08:27] <kalkin-> benjikun: thanks, but I'm more proud of getting such a capable developer like Lovetox to work on Gajim

[08:27] <kalkin-> :)

[08:29] <Geth> ¬¶ doc: 176e2e2065 | (JJ Merelo)++ | doc/Language/5to6-nutshell.pod6

[08:29] <Geth> ¬¶ doc: Several improvements on this page

[08:29] <Geth> ¬¶ doc: 

[08:29] <Geth> ¬¶ doc: It actually started with #1566, trying to improve the description of

[08:29] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[08:29] <Geth> ¬¶ doc: constants. However, while I was at it, I noticed references to

[08:29] <Geth> ¬¶ doc: Synopsis, so I changed a few of them working on #2225.

[08:29] <Geth> ¬¶ doc: This also fixes #2226 and, in fact, has generated rakudo/rakudo#2141

[08:29] <synopsebot> RAKUDO#2141 [open]: https://github.com/rakudo/rakudo/pull/2141 Adds doc for option that apparently works

[08:29] <Geth> ¬¶ doc: for a command line flag that was referenced here and was actually

[08:29] <Geth> ¬¶ doc: working on Perl 6 (undocumented). Of course, there was a bit of #2223

[08:29] <Geth> ¬¶ doc: and a bit of reflow.

[08:29] <Geth> ¬¶ doc: 

[08:29] <Geth> ¬¶ doc: I guess now it's back to work on #1566 or maybe #2225.

[08:29] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/176e2e2065

[08:29] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: 518af6f212 | (Bahtiar `kalkin-` Gadimov)++ | META.list

[08:29] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: Add update for Ddt to v0.5.3

[08:29] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: 

[08:29] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: See https://github.com/kalkin/Ddt

[08:29] <Geth> ¬¶ ecosystem/add-ddt-v0.5.3: review: https://github.com/perl6/ecosystem/commit/518af6f212

[08:30] <jmerelo> kalkin-: this omemo? https://es.wikipedia.org/wiki/Omemo

[08:31] <kalkin-> Yes

[08:31] <benjikun> It'd be cool to have omemo implemented in a perl6 module lol

[08:31] <kalkin-> Aehm dunno

[08:31] <kalkin-> I don't speak es

[08:31] *** lizmat joined
[08:31] <kalkin-> This is https://en.wikipedia.org/wiki/OMEMO

[08:31] <jmerelo> kalkin-: nothing to do with the other.

[08:32] <kalkin-> jmerelo: sorry ‚ò∫

[08:33] <jmerelo> kalkin-: no problem. It was weird, because I remember some funky stuff about *the other* omemo.

[08:33] <kalkin-> jmerelo: which one had funky stuff?

[08:34] <jmerelo> kalkin-: the other, of course. 

[08:35] <kalkin-> Right‚Ä¶ :-D 

[08:42] <kalkin-> jmerelo: Both PR's passed tests and have the right URLs. I also removed all the old Ddt URLs

[08:42] *** mcmillhj joined
[08:43] <Geth> ¬¶ ecosystem: 518af6f212 | (Bahtiar `kalkin-` Gadimov)++ | META.list

[08:43] <Geth> ¬¶ ecosystem: Add update for Ddt to v0.5.3

[08:43] <Geth> ¬¶ ecosystem: 

[08:43] <Geth> ¬¶ ecosystem: See https://github.com/kalkin/Ddt

[08:43] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/518af6f212

[08:43] <Geth> ¬¶ ecosystem: d2c287808e | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[08:43] <Geth> ¬¶ ecosystem: Merge pull request #403 from perl6/add-ddt-v0.5.3

[08:43] <Geth> ¬¶ ecosystem: 

[08:43] <Geth> ¬¶ ecosystem: Add update for Ddt to v0.5.3

[08:43] <Geth> ¬¶ ecosystem: 

[08:43] <jmerelo> kalkin-: thanks!

[08:43] <Geth> ¬¶ ecosystem: Thanks a lot!

[08:43] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/d2c287808e

[08:44] <kalkin-> jmerelo: thank you!

[08:44] <Geth> ¬¶ ecosystem: 0085a2e432 | (Bahtiar `kalkin-` Gadimov)++ | META.list

[08:44] <Geth> ¬¶ ecosystem: Add Pod::To::Latex to ecosystem

[08:44] <Geth> ¬¶ ecosystem: 

[08:44] <Geth> ¬¶ ecosystem: See https://github.com/kalkin/Pod-To-Latex

[08:44] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/0085a2e432

[08:44] <Geth> ¬¶ ecosystem: ac145a374c | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[08:44] <Geth> ¬¶ ecosystem: Merge branch 'master' into master

[08:45] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/ac145a374c

[08:45] <Geth> ¬¶ ecosystem: f13b454313 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[08:45] <Geth> ¬¶ ecosystem: Merge pull request #402 from kalkin/master

[08:45] <Geth> ¬¶ ecosystem: 

[08:45] <Geth> ¬¶ ecosystem: Add Pod::To::Latex to ecosystem

[08:45] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/f13b454313

[08:45] <jmerelo> kalkin-: and merged too :-) Thanks for both modules. 

[08:45] <kalkin-> benjikun: About OMEMO & Perl6. No reason and a lot of effort to have XMPP bootstrapped to the state where you could implement OMEMO

[08:46] <kalkin-> OMEMO: Is not just crypto it expects the Chat Protocol to have support for certain features (Which are defined in form of XEPs) to work properly

[08:47] <Geth> ¬¶ doc: 40681a8050 | (JJ Merelo)++ | doc/Language/5to6-nutshell.pod6

[08:47] <Geth> ¬¶ doc: Removes all references to synopsis... but one

[08:47] <Geth> ¬¶ doc: 

[08:47] <Geth> ¬¶ doc: Which probably makes sense since it speaks about what options were

[08:47] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[08:47] <Geth> ¬¶ doc: going to be removed. Closes #2225

[08:47] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/40681a8050

[08:48] <kalkin-> I took over the Net::XMPP package planing to get XMPP perl6 support to the desired state, but no time and actual need

[08:50] *** kerframil left
[08:51] *** mcmillhj left
[08:51] <kalkin-> benjikun: but if you volunteer, I can guide you and give some hints on what needs to be done and which XEPs to read

[08:51] <kalkin-> :)

[08:52] <benjikun> kalkin-: That'd be cool.

[08:53] <benjikun> as for Net::XMPP

[08:56] *** kerframil joined
[08:57] <kalkin-> benjikun: When you have some time to work on it just contact me via XMPP [email@hidden.address]
[09:02] *** FROGGS joined
[09:03] *** vrurg joined
[09:04] *** vrurg left
[09:13] *** spycrab0 joined
[09:21] *** lizmat left
[09:21] <benjikun> m: my $s = 1 but 2; say $s.Int;

[09:21] <camelia> rakudo-moar 72c8cf68c: OUTPUT: ¬´2‚ê§¬ª

[09:23] <benjikun> m: my $s = 1 but Date.new(DateTime.now); say $s; say $s.year;

[09:23] <camelia> rakudo-moar 72c8cf68c: OUTPUT: ¬´1‚ê§No such method 'year' for invocant of type 'Int+{<anon|1>}'. Did you mean any of these?‚ê§    Real‚ê§    head‚ê§‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:23] <benjikun> m: my $s = 1 but Date.new(DateTime.now); say $s; say $s.Date.year;

[09:23] <camelia> rakudo-moar 72c8cf68c: OUTPUT: ¬´1‚ê§2018‚ê§¬ª

[09:23] <benjikun> never knew `but` was a thing, cool

[09:30] *** lizmat joined
[09:42] <kalkin-> I think I was right about maintaining different versions in META.list

[09:43] <kalkin->  zef install "Ddt:ver<0.4.3>"         

[09:43] <kalkin-> ===> Searching for: Ddt:ver<0.4.3>

[09:43] <kalkin-> No candidates found matching identity: Ddt:ver<0.4.3>

[09:44] <kalkin-> modules.perl6.org also lists only one entry

[09:44] <kalkin-> jmerelo: what now? Should I add multiple urls back?

[09:48] *** vrurg joined
[09:49] <benjikun> Perhaps zef can only do that for CPAN, which is a problem

[09:49] <benjikun> not sure

[09:50] * kalkin- mumbling: told you it wont work‚Ä¶

[09:50] <kalkin-> :)

[09:51] <benjikun> You aren't supposed to have to add every version to the META.list file in my opinion

[09:51] <benjikun> Perhaps we should open an issue on zef

[09:51] <benjikun> It should look through the releases on github

[09:52] *** kaare_ left
[09:52] <kalkin-> for each github url in the META.list file? I think this will be to slow, that's why it only works on cpan

[09:52] *** sena_kun joined
[09:52] <kalkin-> CPAN probably has a proper api for getting ALL_TEH_DATA at once

[09:55] <benjikun> https://api.github.com/repos/kalkin/Ddt/releases

[09:56] <benjikun> You can get all of the releases like that through the github api

[09:56] <benjikun> has links to the tarballs

[09:56] <kalkin-> benjikun: yes, but then you have to call this url for EACH of modules in META.list

[09:56] *** vrurg left
[09:57] <kalkin-> so if you do zef info Ddt it shows all versions

[09:57] <kalkin-> and also zef search should return all versions

[09:57] <kalkin-> ect‚Ä¶

[09:57] <kalkin-> shows all versions without needing to be online or github to be online

[09:58] <kalkin-> you need to get this information during zef update execution. I would think CPAN has a GET_ALL_DATA_WITH_ALL_VERSIONS_SINCE_DATE API call

[09:58] <kalkin-> so you can fetch all the data including for each package version in one call

[10:01] <benjikun> The entire reason why this is an issue is because it creates unnecessary confusion on modules.perl6.org

[10:01] <benjikun> That doesn't even show the github version being linked

[10:01] <kalkin-> I agree that this is an issue too

[10:02] <benjikun> I don

[10:02] <benjikun> I don't really like our github side of the module stuff**

[10:06] <kalkin-> no one does. But before I migrate to CPAN I need to teach ddt handling it

[10:07] <benjikun> Yeah

[10:07] <benjikun> Welp, I'm off to sleep. We'll figure it out later if nobody else does

[10:07] <benjikun> Night

[10:07] *** benjikun left
[10:14] <FROGGS> kalkin-: take a loot at the p6*json.gz at the bottom: ftp://ftp.gwdg.de/pub/languages/perl/CPAN/authors/

[10:14] <yoleaux> 7 Jun 2018 16:57Z <raiph> FROGGS: Fyi, https://stackoverflow.com/a/50745483/1077672

[10:14] <yoleaux> 10 Jun 2018 11:57Z <kiwi_51> FROGGS: Hi, folk liked https://github.com/rakudo/rakudo/search?q=carray+has&type=Commits but https://stackoverflow.com/questions/50777614/passing-an-inlined-carray-in-a-cstruct-to-a-shared-library-using-nativecall

[10:14] <FROGGS> tell benjikun take a loot at the p6*json.gz at the bottom: ftp://ftp.gwdg.de/pub/languages/perl/CPAN/authors/

[10:14] <FROGGS> .tell benjikun take a loot at the p6*json.gz at the bottom: ftp://ftp.gwdg.de/pub/languages/perl/CPAN/authors/

[10:14] <yoleaux> FROGGS: I'll pass your message to benjikun.

[10:15] <FROGGS> kalkin-, sadly I messed up the path so it ended up in /authors

[10:15] <jmerelo> FROGGS: right. All versions are there.

[10:32] <kalkin-> how can I include a module only if it exists?

[10:33] <kalkin-> I'm using this to check for it $*REPO.resolve(CompUnit::DependencySpecification.new(:short-name<JSON::Fast>))

[10:33] <kalkin-> But it looks that I can't use ‚Äúuse‚Äù for importing it, because use is resolved at compile time???

[10:34] <kalkin-> ohh may be require will work

[10:34] <araraloren> kalkin- you need require

[10:34] <araraloren> https://docs.perl6.org/language/modules#index-entry-require

[10:34] <kalkin-> yes it does. Thanks ararloren

[10:34] <kalkin-> araraloren I mean

[10:34] <araraloren> yeah, require wil be failed when the module not exists

[10:35] <araraloren> welcome

[10:40] *** kaare_ joined
[10:44] *** vrurg joined
[10:47] *** vrurg left
[10:58] <jmerelo> zoffix: here's the graph of failed distros and their relationship https://github.com/JJ/p6-river/blob/master/illos/failed-distros-graph.svg Arrowhead means "depends on".

[10:59] <jmerelo> zoffix: That cuts down the distros we have to work on for bitrot squashaton to half a dozen, in principle. 

[11:02] *** parv joined
[11:06] *** rindolf left
[11:09] *** Luneburg joined
[11:10] <AlexDaniel> uh oh no?

[11:10] <Luneburg> I'm having some trouble with exercise 6.2 from the Think Perl book. The exercise says to "use a while loop to compute the terms of the summation until the last term is smaller than 1e-15."

[11:10] <AlexDaniel> so you're saying that if a module has no deps it's not part of the squashathon? I don't think so

[11:11] <AlexDaniel> jmerelo: the whole point is that less than ‚Öì of modules pass their tests, that makes ‚Öî of the ecosystem somewhat useless

[11:12] <AlexDaniel> so IMO >750 modules is what we have to work on during the squashathon :)

[11:13] <jmerelo> AlexDaniel: what I'm saying is that it's more useful to focus on those modules, at least for starters, that other modules depend on

[11:13] <araraloren> Luneburg so, what's the problem ?

[11:13] <jmerelo> AlexDaniel: of course, you can focus on whatever you please :-)

[11:14] <AlexDaniel> jmerelo: so Stats has a PR for it already, BioInfo just depends on that so needs no work

[11:14] <AlexDaniel> jmerelo: HTTP::UserAgent just flaps in toaster, very likely modules depending on it have no issues

[11:15] <jmerelo> AlexDaniel: among other things. If we fix HTTP::UserAgent, there are a bunch of others thar are failing for that reason that will fall like dominoes

[11:15] <AlexDaniel> jmerelo: xxHash is ‚ÄúCannot locate native library 'libxxhash.so.0.6.5': libxxhash.so.0.6.5: cannot open shared object file: No such file or directory‚Äù

[11:15] <jmerelo> AlexDaniel: those are toaster issues...

[11:15] <AlexDaniel> jmerelo: what I'm trying to say is that on this graph there are pretty much no modules to work on

[11:16] <jmerelo> AlexDaniel: I have seen a couple like that one. They fail because they need some external library to work.

[11:16] <jmerelo> AlexDaniel: you can use the extended list https://github.com/JJ/p6-river/blob/master/data/dependent-failing-distros.csv

[11:17] <AlexDaniel> jmerelo: well, my extended list is >750 modules :)

[11:17] <jmerelo> AlexDaniel: that chart includes only those that fail and depend on other that also fails (which might be the reason why they fail)

[11:17] <jmerelo> AlexDaniel: again, it's difficult to focus with 750 modules and again, focus on whatever you want, starting with the A or Z

[11:18] <AlexDaniel> jmerelo: is there any other option?

[11:19] *** obfusk left
[11:19] <jmerelo> AlexDaniel: yes, the list above, starting by the module with the highest number of dependencies, and working down from that... By the time you've done Pastebin::Shadowcat, which are 46 modules, you can start with those with no dependencies (the 704 remaining ones)

[11:20] <AlexDaniel> jmerelo: Shadowcat is done, it's a flapper

[11:20] <araraloren> what you guys trying to do Ôºü

[11:20] <jmerelo> araraloren: establish priorities for the next Squashathon

[11:20] <jmerelo> squashable6: status

[11:20] <squashable6> jmerelo, ‚ö†üçï Next SQUASHathon in 5 days and ‚âà22 hours (2018-08-04 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[11:20] <jmerelo> AlexDaniel: then next on the line, Audio::Icecast

[11:21] <AlexDaniel> jmerelo: my point is that if we go this way, the squashathon will end tomorrow if I spend at least an hour on it

[11:22] <jmerelo> AlexDaniel: also, you wanted to know what to track from the bot; it's difficult to track 750 distros. Let's start with those 46 (down to 45 now), and then let's establish some other criterium for the rest, like having been updated (or not) in the last year.

[11:22] <jmerelo> AlexDaniel: that's going to be a very profitable hackathon.

[11:22] <AlexDaniel> jmerelo: exactly my point

[11:23] <AlexDaniel> jmerelo: Pastebin::Shadowcat installs correctly, it's ‚úì

[11:23] <jmerelo> AlexDaniel: let's go for an additional criterium, then... For an squashathon, we need to put the focus on a few of them, rank them according to priorities, at least.

[11:24] <jmerelo> AlexDaniel: lexicographical ordering is not exactly a priority.

[11:24] <AlexDaniel> jmerelo: that I agree with, what's the criteria then

[11:24] <AlexDaniel> Zoffix: do we have any stats for hits on modules.perl6.org?

[11:25] <AlexDaniel> jmerelo: Audio::Icecast installs fine, next?

[11:25] <jmerelo> AlexDaniel: https://github.com/JJ/p6-river/blob/master/data/dependent-failing-distros.csv

[11:26] <jmerelo> Also, shouldn't toaster take that into account? AlexDaniel 

[11:27] <AlexDaniel> jmerelo: toaster as of today does not attempt to detect flaps, also it does too much work by installing the same modules more than once

[11:27] <jmerelo> AlexDaniel: a criterium could be number of open issues.

[11:29] <jmerelo> AlexDaniel: another: age. The oldest, it could be a candidate for adoption.

[11:30] <Luneburg> araraloren: I think I figured it out, thanks :D

[11:33] <araraloren> okay

[11:33] <jmerelo> AlexDaniel: I've just uploaded a Perl6::Ecosystem module which is based on your code for downloading ecosystem data

[11:34] <AlexDaniel> jmerelo: cool I'm fine with that

[11:34] <jmerelo> AlexDaniel: I've listed you as co-author. Hope you're OK with that.

[11:34] <AlexDaniel> jmerelo: https://gist.github.com/AlexDaniel/8972b816ecc3471d5a4d86e7eea15614

[11:35] <AlexDaniel> jmerelo: I have to go now but for example you could go through all of them

[11:35] <AlexDaniel> jmerelo: that'd at least make a list of modules that are actually failing (and have at least 1 dep, right?)

[11:36] <AlexDaniel> jmerelo: we can make that ‚Äúpriority 1‚Äù

[11:36] <El_Che> jmerelo: openissues as an absolute is tricky

[11:36] <jmerelo> AlexDaniel: OK

[11:36] <El_Che> jmerelo: a popular project will have more open issues simply because more issues are raised (if at all)

[11:37] <El_Che> maybe a % of closed vs open?

[11:37] <El_Che> tricky

[11:37] <jmerelo> El_Che: we need to go for stuff that is easy to check. And then, number of issues is OK since, well, there are issues that can be solved, and, as you say, it's correlated with popularity.

[11:38] <jmerelo> El_Che: we should better focus on popular issues that need help that on abandoned modules no one cares about...

[11:38] <jmerelo> El_Che: ^issues^modules

[11:38] <El_Che> also, does it have a active maintainer that needs help

[11:38] <El_Che> or a non-active one

[11:38] <jmerelo> El_Che: that info is not on the ecosystem, I think

[11:39] <AlexDaniel> bringing old modules back to life isn't a bad idea cuz they work for pre-release regression testing

[11:39] <El_Che> PR is a good pointer

[11:39] <El_Che> e.g. perl(5)-ldap: my PR is waiting merging from end 2016

[11:39] <jmerelo> AlexDaniel: some modules should be deleted also. We could eliminate panda, for instance. It's just a matter of eliminating it from meta.list, right?

[11:40] <El_Che> I don't feel bad because there are PR's open from 2011

[11:40] *** spycrab0 left
[11:40] *** domidumont left
[11:41] <buggable> New CPAN upload: Perl6-Ecosystem-0.0.1.tar.gz by JMERELO https://cpan.metacpan.org/authors/id/J/JM/JMERELO/Perl6/Perl6-Ecosystem-0.0.1.tar.gz

[11:42] <stmuk> Surely its up to the module owner whether a module should be deleted or not?

[11:47] *** jmerelo left
[11:50] <AlexDaniel> stmuk: yeah

[11:51] <El_Che> stmuk: didn't we tell you we have the master key of github

[11:57] <FROGGS> kalkin- you can also use the pragma/module "if"

[11:57] <FROGGS> for conditional use of a module, that is

[11:57] <FROGGS> https://github.com/FROGGS/p6-if

[11:59] <FROGGS> though that'd mean that if something was not present at compile time, it wont be used if it get installed later on

[12:06] *** FROGGS left
[12:12] *** cjkinni joined
[12:14] *** kaare_ left
[12:14] *** rindolf joined
[12:15] <kalkin-> .tell FROGS sadly I can not use any external dependencies. It's actually a patch for zef to use JSON::Fast if installed

[12:15] <yoleaux> kalkin-: I'll pass your message to FROGS.

[12:18] <tbrowder_> \o

[12:18] <kalkin-> shapes of ~6 seconds on my machine

[12:19] <kalkin-> (for zef search)

[12:21] <tbrowder_> is the presence of my Foo::Bar module bothering anyone?

[12:26] <kalkin-> lol I can't load the html profile output from  `perl6 --profile -I. bin/zef search Foo`. I tried Firefox & Chrome :)

[12:29] *** araraloren left
[12:29] <MasterDuke> kalkin-: you know about the json and sql output options?

[12:29] <kalkin-> yes

[12:29] *** araraloren joined
[12:29] <kalkin-> I'm currently trying them

[12:29] <MasterDuke> cool

[12:33] *** molaf left
[12:44] *** scovit joined
[12:44] <scovit> Zoffix: I do not understand the reasoning behind https://rt.perl.org/Public/Bug/Display.html?id=128785 ?

[12:48] <scovit> for  complex number zeros to the power of zero is not defined, since by definition a^b == e^(b Log a)

[12:51] <scovit> also I do not follow the reason to be different from fortran, since I suspect that fortran is the only language where a complex data type has ever been used

[12:52] <scovit> I feel that one should contact a real expert, or search ieee standards (that will define it the way above)

[12:53] *** scovit left
[13:19] *** molaf joined
[13:35] *** rindolf left
[13:39] *** rindolf joined
[13:41] *** mcmillhj joined
[13:44] *** drudgesentinel joined
[13:46] *** spycrab0 joined
[13:46] <drudgesentinel> Hey guys, what utility do you recommend for html/xml parsing in Perl6, ala Python's Beautiful Soup?

[13:47] <drudgesentinel> My readings have led me to believe it's inappropriate to use regex to parse HTML

[13:48] *** cpage_ joined
[13:48] *** lizmat left
[13:49] *** mcmillhj left
[13:51] *** cpage left
[13:51] *** cpage_ is now known as cpage

[13:51] *** stmuk_ joined
[13:52] *** sena_kun left
[13:52] *** sena_kun joined
[13:54] *** stmuk left
[13:54] *** mcmillhj joined
[13:56] <CIAvash[m]> drudgesentinel: take a look at DOM::Tiny https://github.com/zostay/p6-DOM-Tiny

[13:56] *** x[LGWs4x4i]uG2N0 left
[13:59] *** mcmillhj left
[14:00] *** x[LGWs4x4i]uG2N0 joined
[14:02] *** vrurg joined
[14:05] <AlexDaniel> drudgesentinel: the closest I've seen is Gumbo https://modules.perl6.org/search/?q=gumbo

[14:05] *** drudgesentinel left
[14:13] *** vrurg left
[14:17] *** wamba left
[14:18] *** Luneburg left
[14:23] *** kaare_ joined
[14:28] *** mcmillhj joined
[14:30] *** x[LGWs4x4i]uG2N0 left
[14:31] *** Zoffix joined
[14:31] *** fake_space_whale joined
[14:33] *** Kaffe joined
[14:34] *** Kaffe left
[14:34] *** x[LGWs4x4i]uG2N0 joined
[14:36] *** mcmillhj left
[14:36] <Zoffix> scovit: the IEEE 754 doesn't define anything for complex numbers and the reasoning behind RT#128785 is doing the more common thing

[14:36] <synopsebot> RT#128785 [resolved]: https://rt.perl.org/Ticket/Display.html?id=128785 [MATH] Zero to the zeroeth power: Complex numbers not consistent with others.

[14:37] <Zoffix> scovit: we're not mathematicians; we're programmers. 1e0/0e0 is Inf, not undefined, so what's the reasoning for giving NaNs for the complex powers other than it's undefined in math?

[14:37] <Zoffix> "one should contact a real expert"... like whom?

[14:38] <El_Che> Zoffix: if mathematicians are needed ping DanaJ and BrianD. They are both into maths

[14:38] *** mcmillhj joined
[14:39] <Zoffix> El_Che: I need programmers, not mathematicians.

[14:39] <El_Che> Zoffix: they are both

[14:39] <Zoffix> El_Che: I don't see either of the nick on IRC.

[14:39] <El_Che> and I am giving name for scovit's question about mathematicians

[14:39] <El_Che> they are both active in the perl 6 community giving math related talks

[14:40] <El_Che> (I have no stake in the discussion itself, not that invested in math)

[14:41] <Zoffix> El_Che: but how do I "ping" them?

[14:44] <Zoffix> m: dd log

[14:44] <camelia> rakudo-moar 72c8cf68c: OUTPUT: ¬´5===SORRY!5===‚ê§Argument to "log" seems to be malformed‚ê§at <tmp>:1‚ê§------> 3dd log7‚èè5<EOL>‚ê§Other potential difficulties:‚ê§    Unsupported use of bare "log"; in Perl 6 please use .log if you meant to call it as a method on $_, or use ‚Ä¶¬ª

[14:44] <Zoffix> m: dd log 09

[14:44] <camelia> rakudo-moar 72c8cf68c: OUTPUT: ¬´Potential difficulties:‚ê§    Leading 0 has no meaning. If you meant to create an octal number, use '0o' prefix, but note that 9 is not a valid octal number. If you meant to create a string, please add quotation marks.‚ê§    at <tmp>:1‚ê§    ------> ‚Ä¶¬ª

[14:44] <Zoffix> m: dd log 0

[14:44] <camelia> rakudo-moar 72c8cf68c: OUTPUT: ¬´-Inf‚ê§¬ª

[14:45] <Zoffix> Actually, I guess it can be defined by IEEE, since it does say about log 0

[14:45] <Zoffix> m: 0**(0 * log 0)

[14:45] <camelia> rakudo-moar 72c8cf68c: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of "**" in expression "0**(0 * log 0)" in sink context (line 1)‚ê§¬ª

[14:45] <Zoffix> m: dd 0**(0 * log 0)

[14:45] <camelia> rakudo-moar 72c8cf68c: OUTPUT: ¬´NaN‚ê§¬ª

[14:46] *** domidumont joined
[14:48] *** domidumont left
[14:50] * parv was trying to see what I'd get via search for 0^0 topic. On a quora page I see an ad about chating w/ a therapist if struggling emotionally. ;-]

[14:51] <El_Che> that's not bad advice :)

[14:52] *** vrurg joined
[14:53] * parv can't write in third person in excess of handful of words :-<

[14:54] *** wamba joined
[14:57] *** vrurg left
[15:04] *** Khisanth left
[15:04] *** mcmillhj left
[15:05] *** Khisanth joined
[15:08] <lucs> Multi-dispatch involves the idea of "narrowest type". Where is (if it is) that concept explained in the docs?

[15:09] *** Ven`` joined
[15:14] <tyil> https://docs.perl6.org/language/glossary#index-entry-Multi-Dispatch

[15:14] <tyil> "The process of picking a candidate for calling of a set of methods or subs that come by the same name but with different arguments. The most narrow candidate wins. In case of an ambiguity, a routine with is default trait will be chosen if one exists, otherwise an exception is thrown."

[15:14] <tyil> lucs: ^

[15:15] <Zoffix> lucs: not sure, but you can think of it as "closest" ancestor. `multi foo(Any) {}; multi foo(Numeric) {}; multi foo(Int) {}` <--- if you call `foo(1)` which is an Int, the closest one is the Int multi. If you call `foo(4e0)`, that no longer fits into Int, so look at the closest next one, `Numeric` is closer (it's not really an ancestor, but it's closer in a sense that you're comparing those with Numeric role

[15:15] <Zoffix> and those without and 4e0 does Numeric), and if you call foo(now), neither Numeric nor Int multies fit, so all you got left is Any

[15:15] <lucs> Maybe just traversing the MRO is a way of thinking about it?

[15:15] <lucs> m: say Int.^mro

[15:15] <camelia> rakudo-moar 72c8cf68c: OUTPUT: ¬´((Int) (Cool) (Any) (Mu))‚ê§¬ª

[15:16] <lucs> So Int is narrower than Cool, which is narrower than Any, and so on.

[15:16] <lucs> m: say Rat.^mro

[15:16] <camelia> rakudo-moar 72c8cf68c: OUTPUT: ¬´((Rat) (Cool) (Any) (Mu))‚ê§¬ª

[15:16] <lucs> And Int and Rat are not "narrowly" related.

[15:16] <lucs> Does that make sense?

[15:17] <Zoffix> mhm

[15:18] <lucs> Uh, not sure what "mhm" means, sorry :/

[15:18] <Zoffix> Yes

[15:18] <lucs> A

[15:18] <lucs> Ah, okay, thanks.

[15:22] *** lizmat joined
[15:22] <lucs> Nothing like trying to responsibly fix docs to gain a deeper understanding of how things work :)

[15:23] <Zoffix> yup

[15:28] *** mcmillhj joined
[15:29] *** psychoslave joined
[15:33] *** mcmillhj left
[15:35] <Zoffix> Found this "IEEE Std 1076.2-1996 IEEE Standard VHDL Mathematical Packages" https://perso.telecom-paristech.fr/guilley/ENS/20171205/TP/tp_syn/doc/IEEE_VHDL_1076.2-1996.pdf

[15:36] <Zoffix> If go into EXP function definition, it shows the zero power operations giving 1+0i, not NaNs

[15:38] <Zoffix> Add to that the majority of languages also doing 1+0i, and that's good enough for me.

[15:41] <mst> x^0 is 1, yes

[15:41] *** mcmillhj joined
[15:42] <Zoffix> mst: but for complex it's undefined, is it?

[15:43] <mst> I don't really see why it would be

[15:43] <Zoffix> (42+42i)^(0+0i)

[15:43] <Zoffix> ok

[15:43] <mst> raising to a complex *power* makes no sense

[15:43] <mst> but (42+42i)^0 I'd expect to be 1

[15:44] <mst> both as a programmer and a once-a-mathematician

[15:44] <mst> note: this could be me remembering wrong

[15:44] <notable6> mst, Noted!

[15:44] <mst> but I don't *think* so

[15:44] <mst> whatever I just did to the bot,m I didn't mean to.

[15:45] <Zoffix> notable6: this

[15:45] <notable6> Zoffix, 2 notes: 2018-05-25T18:18:30Z <mst>: channel was accessible only to diakopter so I've stolen ownership of it and given Zoffix and jnthn basic chanserv permissions  ;  2018-07-28T15:44:06Z <mst>: could be me remembering wrong

[15:45] <Zoffix> notable6: delete this

[15:45] <notable6> Zoffix, Moved existing notes to ‚Äúthis_2018-07-28T15:45:14Z‚Äù

[15:46] *** mcmillhj left
[15:47] *** jmerelo joined
[15:48] <jmerelo> releasable6: status

[15:48] <releasable6> jmerelo, Next release will happen when it's ready. 3 blockers. 81 out of 259 commits logged (‚ö† 9 warnings)

[15:48] <releasable6> jmerelo, Details: https://gist.github.com/c8050015e18278b6b0414a9286e3a66c

[15:48] <Zoffix> jmerelo: I think we're skipping the release.

[15:48] <tyil> skipping a release?

[15:48] <jmerelo> Zoffix: as in, waiting until next month? 

[15:49] <Zoffix> jmerelo: yeah, waiting another 3 weeks

[15:49] <Zoffix> jmerelo: well, I'm not the release manager, but that was part of the recent discussion

[15:49] <Zoffix> And jnthn is now on vacation

[15:50] <jmerelo> Zoffix: OK. Makes sense. Not the season for releases.

[15:54] *** Sgeo joined
[15:55] *** mcmillhj joined
[15:56] *** Sgeo_ left
[15:58] *** araraloren left
[15:59] <Zoffix> .tell scovit found some IEEE-approved standard that does define an EXP operation on complex and the result is 1+0i. Also the majority of languages do it that way. So it's similar to how 1e0/0e0 is Inf, not a NaN: the programming answer differs from math one for practical reasons. I added comment to the propspec: https://github.com/perl6/roast/commit/ba9f5233c8

[15:59] <yoleaux> Zoffix: I'll pass your message to scovit.

[16:00] <tobs> mst: raising to complex powers does make sense, e.g. -> \Œ∏ { e**(Œ∏*i) } is a counter-clockwise rotation of Œ∏ radians

[16:00] *** mcmillhj left
[16:00] <mst> tobs: oooh, fuck, yes, good point

[16:01] <mst> Zoffix: note this is why I say 'once-a-mathematician'

[16:01] <El_Che> once-a-vogue-model, I recall as well

[16:01] <tobs> and at the risk of repeating what was said in that old RT, the undefinedness of 1/0 and 0^0 comes from different ways at looking at 0^0: as a limit of x^0 for x -> 0, it clearly 1.

[16:02] <tobs> 0^x approached from negative x gives you infinity, approached from positive x gives you 0.

[16:03] *** kloeri19 joined
[16:03] <kloeri19> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[16:03] <kloeri19> or maybe this blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[16:03] <kloeri19> Read what IRC investigative journalists have uncovered on the freenode pedophilia scandal https://encyclopediadramatica.rs/Freenodegate

[16:03] *** kloeri19 left
[16:04] <Geth> ¬¶ modules.perl6.org: 78b69a5143 | (Timo Paulssen)++ | lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/p30METAChecker.pm

[16:04] <Geth> ¬¶ modules.perl6.org: complain if the travis config contains "rakudobrew build panda"

[16:04] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/78b69a5143

[16:04] <Geth> ¬¶ modules.perl6.org: 9a94f69339 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/p30METAChecker.pm

[16:04] <Geth> ¬¶ modules.perl6.org: Merge pull request #86 from perl6/complain_travis_build-panda

[16:04] <Geth> ¬¶ modules.perl6.org: 

[16:04] <Geth> ¬¶ modules.perl6.org: complain if the travis config contains "rakudobrew build panda"

[16:04] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/9a94f69339

[16:06] *** fbynite left
[16:07] <Zoffix> jmerelo: why merge a PR that's being claimed to be broken?

[16:08] <jmerelo> Zoffix: I don't think it is.

[16:08] <Zoffix> jmerelo: travis file isn't fetched

[16:09] *** p6bannerbot joined
[16:09] *** ChanServ sets mode: +o p6bannerbot

[16:09] *** fbynite joined
[16:10] <jmerelo> Zoffix: $travishml does not get its content anywhere, is that what you mean?

[16:11] <jmerelo> Zoffix: if that's the case, it's probably better to fix that. Let me see what I can do.

[16:14] *** psychoslave left
[16:15] <Zoffix> jmerelo: yes, the DATAFetcher postprocessor currently only fetches README: https://github.com/perl6/modules.perl6.org/blob/484ca3d1c3ae1fb7fdce7e18d1d6edeef7bf0180/lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/p05DataFetcher.pm#L30-L64

[16:19] <jmerelo> Zoffix: why can't that be applied to other files? 

[16:19] <Zoffix> jmerelo: it can, it's just isn't, which is what my comment on that PR was inquiring about

[16:20] <jmerelo> Zoffix: OK. Let me add then code for .travis.yml

[16:20] <Zoffix> jmerelo++

[16:21] <Zoffix> BTW there most likely won't be any videos of my talks due to hardware... um... "issues" (not really issues, more like we used some built-in system at this company and apparently it's not set up to produce videos of meetings)

[16:22] <jmerelo> Zoffix: how did the talk go?

[16:22] <stmuk_> any chance of a "screencast" (which are often easy to hear and read than "live" recording)?

[16:24] <Zoffix> Like me talking into a mic?

[16:24] <Zoffix> I think I might do an "article" with slides and transcriptions of what was said.

[16:24] <Zoffix> It's pretty hard to understand me when I speak

[16:25] <Zoffix> jmerelo: OK

[16:25] <stmuk_> yes it's basically recording a screen with slides and an audio track

[16:25] <Zoffix> jmerelo: or pretty good, considering it's a Perl 5 crowd :)

[16:26] <stmuk_> you sound fine 

[16:26] <Zoffix> One guy said he'll have to try out Perl 6, so I guess mission accomplished.

[16:26] <jmerelo> Zoffix: great to hear that. Augmenting the community, one person at a time :-)

[16:26] <stmuk_> I think VLC and Quicktime Pro (Mac) do screencasts

[16:27] *** mcmillhj joined
[16:28] *** Kaiepi left
[16:28] *** |oLa| left
[16:32] <Zoffix> jmerelo: what are you asking on https://github.com/perl6/modules.perl6.org/issues/109 ? Do you want a one-time copy of the DB or are you looking for a continuous way of accessing the metadata?

[16:32] *** mcmillhj left
[16:33] <jmerelo> Zoffix: both, I guess.

[16:33] <jmerelo> Zoffix: the sqlite DB must be somewhere...

[16:35] <jmerelo> Zoffix: But problem is now it does not pass tests

[16:35] <Zoffix> jmerelo: it is there, yeah, but it's not publically downloadable from the site.

[16:35] <Zoffix> jmerelo: here's a copy: https://temp.perl6.party/modulesperl6-2018-07-27.db

[16:36] <Zoffix> jmerelo: and you can continuously access module data from the search JSON: http://modules.perl6.org/search.json

[16:36] <Zoffix> ^ that URL gives all modules

[16:36] *** obfusk joined
[16:36] <Zoffix> jmerelo: "now"? As in it was passing before your changes?

[16:36] <jmerelo> Zoffix: but I was looking for the metadata that is actually on the site, like travis status or number of stars or issues.

[16:36] <Zoffix> There's a high chance the tests are bitrotten

[16:37] <Zoffix> and weren't passing before

[16:37] <jmerelo> Zoffix: Hum.

[16:37] <jmerelo> Zoffix: also, no CI set up there.

[16:37] <jmerelo> Zoffix: there are arrors like this " Tried to use 'ModulesPerl6::DbBuilder::Dist::PostProcessor::TravisCI'."

[16:38] <Zoffix> jmerelo: that stuff is in JSON (`travis_status`, `stars`, and `issues` keys respectively): http://modules.perl6.org/search.json

[16:38] <jmerelo> Zoffix: great

[16:39] * jmerelo wonders if it wouldn't be better to unbitrot modules.perl6.org instead of modules

[16:41] <jmerelo> Zoffix: what is build_id?

[16:41] <Zoffix> jmerelo: as a task, sure, but not as SQUASHathon, because modules.perl6.org is Perl 5

[16:42] <Zoffix> jmerelo: a build of ecosystem (going through metas and loading any fresh data/modules). It's a way for the site to know which modules were removed from the site

[16:42] <jmerelo> Zoffix: right, but it would still help the Perl 6 ecosystem...

[16:42] <Zoffix> (at the end of the run, it basically removes all modules that don't have their build_id updated to current ID)

[16:43] <jmerelo> Zoffix: now that you mention that... What about panda, which is clearly marked as "deprecated". Wouldn't it be better to remove it from there?

[16:43] <Zoffix> jmerelo: I'm not the author of that module.

[16:44] <Zoffix> (i.e. I don't think the Perl 6 community is an arbitrator of when third party modules must be removed from the ecosystem, simply because they're deemed deprecated. It's the module's author responsibility.)

[16:44] <jmerelo> Zoffix: OK

[16:47] *** mcmillhj joined
[16:48] *** zakharyas joined
[16:49] <jmerelo> Zoffix: although... I don't think that's clearly written anywhere.

[16:49] <jmerelo> Zoffix: let me check.

[16:52] *** mcmillhj left
[16:52] *** fake_space_whale left
[16:58] *** parvx joined
[16:58] *** Ven`` left
[16:58] *** mcmillhj joined
[17:00] *** vrurg joined
[17:00] *** parv left
[17:02] *** kaare_ left
[17:03] *** mcmillhj left
[17:05] *** isBEKaml joined
[17:07] *** pmurias joined
[17:14] *** mcmillhj joined
[17:18] *** mcmillhj left
[17:19] *** hope joined
[17:20] <fbynite> where is ^name documented?

[17:20] *** hope is now known as Guest207

[17:20] <jmerelo> fbynite: MOP, I think.

[17:20] <jmerelo> fbynite: https://docs.perl6.org/routine/.$CIRCUMFLEX_ACCENT.html and link to Meta Object Protocol there

[17:21] <Guest207> am I right that no way to install perl6 om win on not C: drive?

[17:21] <fbynite> jmerelo: thanks

[17:28] *** Guest207 left
[17:30] *** Khisanth left
[17:31] *** molaf left
[17:35] *** fbynite left
[17:37] *** molaf joined
[17:41] <Zoffix> Guest207, if you compile from source, you can install it in any location you want: https://rakudo.org/files/star/source

[17:42] *** Zoffix left
[17:44] *** Khisanth joined
[17:48] *** mcmillhj joined
[17:51] <lucs> Is there a spelling guide or something for the docs? (e.g., I see both semi-colon and semicolon, the latter being more usual -- do we care?)

[17:52] *** kaare_ joined
[17:52] *** mcmillhj left
[17:55] <stmuk_> "there's more than one way to spell it"

[17:55] <lucs> :)

[17:56] <lucs> Actually, I'm not crazy about that idea, it feels a bit sloppy.

[17:57] <lucs> But yeah, not such a big deal.

[17:59] *** mcmillhj joined
[17:59] <sena_kun> I saw some issues of this type before(like file-handle vs filehandle), can't quickly give links. But it is very easy to fix and write a test afterwards, so probably worth a ticket.

[18:00] *** vrurg left
[18:00] <jmerelo> lucs: that shouldn't be there; semicolon is preferred. There are tests for that  precise thing, but not much more than that.

[18:01] <jmerelo> sena_kun: filehandle is now preferred. Enforced, actually: https://github.com/perl6/doc/blob/master/xt/word-variants.

[18:01] *** parvx left
[18:01] <lucs> jmerelo: How does it get enforced?

[18:02] <sena_kun> jmerelo, yup, that's what I meant. :)

[18:02] <jmerelo> lucs: we run that author test from time to time, and fix it.

[18:02] <jmerelo> lucs: I'll add semicolon

[18:03] <lucs> Um, 404 on that page it seems.

[18:03] *** mcmillhj left
[18:03] <jmerelo> lucs: which one?

[18:04] <lucs> https://github.com/perl6/doc/blob/master/xt/word-variants

[18:04] <jmerelo> Ah, t missing. sorry

[18:04] <jmerelo> https://github.com/perl6/doc/blob/master/xt/word-variants.t

[18:04] <lucs> Ah, right. thanks.

[18:05] <CIAvash[m]> lucs: "long name" is mentioned in the design docs: https://design.perl6.org/S06.html#Longname_parameters https://design.perl6.org/S12.html#Multisubs_and_Multimethods

[18:07] <lucs> CIAvash[m]: Interesting, will be reading. Thanks.

[18:08] <Geth> ¬¶ doc: 79ab8c45de | (JJ Merelo)++ | 4 files

[18:08] <Geth> ¬¶ doc: Adds semicolon to the list of preferred word spelling

[18:08] <Geth> ¬¶ doc: 

[18:08] <Geth> ¬¶ doc: After lucs warned in #IRC

[18:08] <Geth> ¬¶ doc: http://colabti.org/irclogger/irclogger_log/perl6?date=2018-07-28#l730. Also

[18:08] <Geth> ¬¶ doc: fixed three spellings found.

[18:08] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/79ab8c45de

[18:08] <jmerelo> ^^^ lucs thanks!

[18:09] <lucs> My pleasure

[18:12] <xinming> For a perl5 program, is it possible to detect wether it's running in p6 env?

[18:13] <jmerelo> xinming: you mean for some perl5 instructions in a Perl 6 program

[18:13] <jmerelo> xinming: using Inline::Perl5, for instance.

[18:13] *** mcmillhj joined
[18:14] <mst> xinming: the question to me is why do you want to do that?

[18:14] <mst> .oO "I wonder what $^X would look like"

[18:14] <lucs> CIAvash[m]: Dang, just when I thought I was starting to understand the ;; , this S12 appears :)

[18:15] <jmerelo> lucs: S12 are not always in force...

[18:15] <lucs> jmerelo: I understand, but I think there's some relevant stuff there about the ;; .

[18:15] <jmerelo> lucs: in that particular case, I'm almost sure it is not. 

[18:16] <lucs> Hmm...

[18:16] <jmerelo> lucs: what do I know. It's working https://docs.perl6.org/type/Signature#Long_names

[18:16] <xinming> mst: it's loading too slow when I try to load some modules with Moose in perl6

[18:17] <xinming> so, I wish to use a separate module, when run in perl5 directly, It apply roles after done loading, when it is embed in perl6, It'll skip that step

[18:17] <lucs> jmerelo: Yeah, that's what I'm trying to clarify.

[18:17] *** mcmillhj left
[18:18] <lucs> I think I'm close, but the cigar still has to wait...

[18:19] <xinming> mst: It's in DBIx::Class, I have dbic schema which uses Moose, I'm thinking wether it's possible to make it load the full schema/methods in perl5, and when in perl6, We skip that, only use schema.

[18:20] <mst> xinming: using Moose in DBIC schemas has always seemed like a waste of time to me.

[18:20] <xinming> mst: there are some parts which I feel handy, something like lazy_build

[18:21] <xinming> But Ok, I'll strip the Moose things out of the DBIx Schema

[18:22] <xinming> actually, The reason I want to Mooseify schema is because I saw catalyst uses it, why not schema. :-)

[18:22] <mst> catalyst uses Moose as its object system

[18:22] <mst> DBIC has its own object system

[18:22] <mst> usually in DBIC I just write

[18:23] <mst> sub foo { $_[0]->{foo} //= $_[0]->_build_foo }

[18:24] <xinming> mst: BTW, when we use DBIC in perl6, will it cause many performance degrade?

[18:24] <jmerelo> lucs: if you don't think it's clear enough in the doc, please raise an issue...

[18:25] <mst> xinming: I have no idea

[18:25] <xinming> mst: Ok, I'll use DBIish instead.

[18:26] <xinming> Let schema stay in perl5

[18:26] *** mcmillhj joined
[18:27] <lucs> jmerelo: I've actually got a commit bit, and if my understanding reaches far enough, I'll fix it.

[18:27] <lucs> (I'll probably want to confirm with you folks first, to make sure.)

[18:30] <jmerelo> lucs: that would be awesome. Thanks!

[18:30] <lucs> Again, my pleasure :)

[18:30] <lucs> (I love Perl6 and you people!)

[18:31] *** mcmillhj left
[18:31] <jmerelo> lucs++

[18:31] *** jmerelo left
[18:32] <CIAvash[m]> lucs++

[18:42] <masak> m: say 1 + my $x = 2

[18:42] <camelia> rakudo-moar 72c8cf68c: OUTPUT: ¬´3‚ê§¬ª

[18:43] <masak> why does `my $x = 2` require parentheses in Perl 5?

[18:48] <Juerd> Precedence

[18:48] *** drudgesentinel joined
[18:50] <Juerd> In fact, I don't really understand why it doesn't require parentheses in Perl 6, since + is still tighter than =.

[18:50] <drudgesentinel> @CIAvash: That's exactly what I was looking for, thank you!

[18:51] <Juerd> Apparently, 'my' makes it special.

[18:51] <Juerd> m: my $x; say 1 + $x = 2

[18:51] <camelia> rakudo-moar 72c8cf68c: OUTPUT: ¬´Use of uninitialized value of type Any in numeric context‚ê§  in block <unit> at <tmp> line 1‚ê§Cannot modify an immutable Int (1)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:55] *** mcmillhj joined
[18:55] *** kaare__ joined
[18:55] *** kaare_ left
[18:57] <geekosaur> doesn't my still have some kind of listop precedence?

[18:59] *** mcmillhj left
[18:59] <tony-o_> AlexDaniel: can you provide more info about flapping in flow?  i'm not able to reproduce in linux either (is it still happening for you?)

[18:59] <AlexDaniel> tony-o_: hello, yeah I've seen your comment

[18:59] <AlexDaniel> tony-o_: let me try to reproduce it on HEAD, who knows, maybe the issue is gone

[19:05] <AlexDaniel> tony-o_: alright, so I have rakudo built on HEAD, and your module checked out from [email@hidden.address] on 7de3e893a60b3b9cd

[19:06] <AlexDaniel> tony-o_: that's on Debian unstable

[19:06] <AlexDaniel> now I'll run the tests like this: while PERL6LIB=lib/ prove --exec=perl6 t/*.t; do ((x++)); done

[19:08] <AlexDaniel> tony-o_: boom

[19:08] <AlexDaniel> failed after 50 iterations

[19:08] *** mcmillhj joined
[19:09] <AlexDaniel> tony-o_: https://gist.github.com/AlexDaniel/16bbbf7d0fa37441a59a4035d1de1550

[19:13] *** mcmillhj left
[19:17] <tony-o_> let me stand up a deb unstable

[19:18] <tony-o_> AlexDaniel: just to verify, you're on buster ?

[19:19] <AlexDaniel> tony-o_: buster is `testing`, I'm on `unstable`

[19:19] <AlexDaniel> but I don't think it matters

[19:20] <tony-o_> i don't either unless an issue was introduced with whatever moarvm is using for concurrency these days

[19:20] <tony-o_> (or fixed something that we were abusing in moar)

[19:21] <AlexDaniel> but it doesn't depend on anything installed on the system

[19:22] *** kaare_ joined
[19:22] *** kaare__ left
[19:26] <tony-o_> does it build it's own libuv?

[19:27] <tony-o_> ah it does, hm

[19:28] <tyil> so, I have two modules I'm working on simultaneously, Pod::To::Anything, as a helper to build pod formatters with (https://gitlab.com/tyil/perl6-pod-to-anything) and Pod::To::Man, to convert pod docs to man format (https://gitlab.com/tyil/perl6-pod-to-man)

[19:28] <tyil> when I try to run `perl6 -I ../perl6-Pod-To-Anything/lib -Ilib --doc=Man t/document.t` from the Pod::To::Man's project root, I get the error "Could not locate compile-time value for symbol Block::Para"

[19:29] <tyil> but I'm not calling Block::Para anywhere, in neither of the two repos

[19:29] <tyil> I am using Pod::Block::Para

[19:29] <tyil> but not just Block::Para

[19:29] <tony-o_> is a module that you depend upon that didn't declare block::para as a dep?

[19:29] <tyil> I searched both projects with `ag`, and neither uses `Block::Para`

[19:30] <tyil> the error message also doesn't say in which module, class or whatever it encountered the error

[19:31] <tyil> so I find it difficult to find out what is supposedly trying to use a Block::Para

[19:31] <tony-o_> `perl6 -I ../perl6-Pod-To-Anything/lib -Ilib --ll-exception --doc=Man t/document.t`

[19:32] <tyil> https://p.tyil.nl/loof

[19:34] <tony-o_> you have those repos available anywhere?

[19:35] <tyil> yes, I added links to their gitlab pages, https://gitlab.com/tyil/perl6-pod-to-anything and https://gitlab.com/tyil/perl6-pod-to-man

[19:37] <tyil> neither of them are finished, I pushed them in the state I got the error in

[19:39] <tony-o_> initial thought is there is a stray Pod::Block::Para somewhere 

[19:40] <tyil> using ag I find 3 references to Block::Para over both repos

[19:40] <tyil> Pod To Man has multi method render (Pod::Block::Para:D $pod --> Str) { "{self.pod-contents($pod)}\n\n" }

[19:40] <tyil> and Pod::To::Anything::Abstract has ulti method render (Pod::Block::Para:D $ --> Str) { ‚Ä¶ }

[19:41] <tyil> the final one is found inside a pod block (and is also Pod::Block::Para)

[19:41] *** mcmillhj joined
[19:43] <tyil> I also thought it'd probably be a typo somewhere leading to a `Block::Para` somewhere, but I can't seem to find any such occurance, and generally you get a prettier error about it

[19:44] <tony-o_> well, it's happening in pod::to::anything

[19:44] <tyil> how did you figure that out?

[19:44] <tony-o_> Pod::To::Anything::Subsets

[19:45] <tony-o_> perl6 -Ilib -c lib/Pod/To/Anything.pm6

[19:45] <tyil> ah

[19:46] *** mcmillhj left
[19:46] <tony-o_> commenting out use Pod::To::Anything::Subsets in that file causes syntax OK

[19:47] <tyil> it says Syntax OK for me regardless

[19:47] <tyil> oh, the Anything.pm6 indeed gives me an erro

[19:47] <tyil> r

[19:47] <tony-o_> fresh checkout out of repo gives me:  https://gist.github.com/tony-o/86af533ec27253882b240d2845515ff8

[19:47] <tyil> it says OK if I remove the `is export` from the subsets

[19:51] <tyil> and the perl6 command I was trying to run is giving a reasonable error now as well, so I can work on again

[19:51] *** kaare_ left
[19:51] <tyil> thanks for your assistance tony-o_ :D

[19:51] *** molaf left
[19:51] <AlexDaniel> releasable6: next

[19:51] <releasable6> AlexDaniel, Next release in ‚âà20 days and ‚âà23 hours. 3 blockers. 81 out of 261 commits logged (‚ö† 9 warnings)

[19:51] <releasable6> AlexDaniel, Details: https://gist.github.com/d65769a7ccf33655f0913799b9147e1b

[19:52] <tony-o_> np

[19:52] *** pmurias left
[19:57] *** Kaiepi joined
[19:57] *** SteffanW left
[20:09] *** mcmillhj joined
[20:14] *** mcmillhj left
[20:23] *** mcmillhj joined
[20:25] *** vrurg joined
[20:27] *** mcmillhj left
[20:27] *** vrurg left
[20:51] *** mcmillhj joined
[20:56] *** mcmillhj left
[20:59] *** kerframil left
[21:15] *** TreyHarris left
[21:16] *** mephinet left
[21:19] <masak> TimToady: I'm getting increasingly interested in the COMPILING pseudo-package. when you have the time, I wouldn't mind asking some questions.

[21:19] * masak learned today that there's an analogue in Perl 5

[21:20] * masak also learned today that a quasi can `require` variables from COMPILING

[21:25] *** mcmillhj joined
[21:29] *** TreyHarris joined
[21:31] *** mcmillhj left
[21:34] *** sena_kun left
[21:34] *** sena_kun joined
[21:38] *** zakharyas left
[21:39] *** mcmillhj joined
[21:44] *** mcmillhj left
[21:44] *** jast joined
[21:47] *** sena_kun left
[22:01] *** ryn1x joined
[22:05] *** rindolf left
[22:07] *** mcmillhj joined
[22:07] *** vrurg joined
[22:09] *** vrurg left
[22:09] *** vrurg joined
[22:09] *** mephinet joined
[22:10] *** vrurg left
[22:11] <buggable> New CPAN upload: Terminal-Spinners-1.0.0.tar.gz by RYNIX http://modules.perl6.org/dist/Terminal::Spinners:cpan:RYNIX

[22:12] *** mcmillhj left
[22:13] *** fake_space_whale joined
[22:16] <ryn1x> ^ my very small contribution to perl6 =)

[22:18] <El_Che> a fake_space_whale?

[22:18] <El_Che> :)

[22:18] <El_Che> ryn1x: looking fwd to trying it out

[22:18] <fake_space_whale> hmm?

[22:19] <El_Che> fake_space_whale: ryn1x pointed to the previous line and it was your join message by coincidence

[22:19] <fake_space_whale> oh

[22:20] <ryn1x> haha

[22:22] <fake_space_whale> While I am paying attention to this channel, I build a perl6 module as a hobby project but I haven't had the energy/time to write good documentation or optimize it for performance. What is considered to be the minimum standard of quality before releasing a package on CPAN?

[22:26] *** reu joined
[22:31] *** mcmillhj joined
[22:31] <Juerd> None

[22:32] <ryn1x> I was encouraged by others here to contribute when I was just trying to learn about modules and cpan. I would say if it is something that you think others would find useful then share it! A good guide on how to upload etc. is here: https://docs.perl6.org/language/modules.html

[22:36] *** mcmillhj left
[22:39] *** lizmat left
[22:46] <jdv79> just did some time and mem tests from the last time i installed rakduo (mar) to today.  looks like its slower and bigger:(

[22:46] *** mcmillhj joined
[22:47] <jdv79> one test went from 4.29s -> 5.29s and from 235MB -> 286MB

[22:48] *** gabiruh left
[22:49] *** daemon left
[22:50] <AlexDaniel> jdv79: can you ticket that? Is there a golf?

[22:50] <AlexDaniel> even without a golf, if it's one script we can bench it right here a bit

[22:50] *** mcmillhj left
[22:51] *** daemon joined
[22:51] *** daemon is now known as Guest52691

[22:51] *** benjikun joined
[22:52] *** Guest52691 left
[22:52] *** Guest52691 joined
[22:52] *** Guest52691 is now known as daemon

[22:52] <jdv79> its not "news" - its been "slow" forever.

[22:52] *** vrurg joined
[22:52] <jdv79> its just https://github.com/jdv/p6-data-selector/blob/master/t/03-apply_tree.t

[22:53] <jdv79> under /usr/bin/time -v ...

[22:53] <timotimo> do you happen to know what the previous version of rakudo and friends was?

[22:53] <AlexDaniel> I mean, we can bisect it, right?

[22:54] <jdv79> maybe its just the "unfinished/unrealizied" recent jnthn stuff

[22:54] <benjikun> `.WHAT === Type` is a whole lot faster than `.isa(Type)`

[22:54] <yoleaux> 10:14Z <FROGGS> benjikun: take a loot at the p6*json.gz at the bottom: ftp://ftp.gwdg.de/pub/languages/perl/CPAN/authors/

[22:54] <AlexDaniel> 6c: https://gist.github.com/AlexDaniel/7102bb2e70835f28851b992a41ea121f

[22:54] <timotimo> benjikun: should be even faster to just ~~ Type

[22:54] <committable6> AlexDaniel, https://gist.github.com/9e88c0ec3bf43e549acc22981cba8372

[22:54] <jdv79> no.  i just looked and the mtime of the perl6 file before i wiped it out with todays

[22:54] <benjikun> Haven't tested that one timotimo

[22:54] <jdv79> it was march something

[22:54] <benjikun> I'll try it out :)

[22:55] *** Voldenet joined
[22:55] *** Voldenet left
[22:55] *** Voldenet joined
[22:55] <benjikun> You're right timotimo, pretty significantly faster

[22:55] <AlexDaniel> 6c: https://gist.github.com/AlexDaniel/7102bb2e70835f28851b992a41ea121f

[22:56] <benjikun> `.isa` seems to slow down the more you do it ...

[22:56] <timotimo> ouch, the profiler segfaults when run against that test file :)

[22:56] <benjikun> But for 1,000,000 times, the times are: `~~ - 1.0166297, what - 2.8730479, isa - 3.2158791`

[22:57] <MasterDuke> timotimo: got a segfault also. but the code is doing an EVAL...

[22:57] <timotimo> many evals

[22:58] <committable6> AlexDaniel, https://gist.github.com/6dc9b08be59e0537fb91193b95f7a774

[22:59] <AlexDaniel> 6c: https://gist.github.com/AlexDaniel/7102bb2e70835f28851b992a41ea121f

[22:59] <AlexDaniel> let's have another run

[22:59] <AlexDaniel> but if it's from 2018.06 to HEAD then it'll be easy to bisect

[22:59] <benjikun> .tell FROGGS Interesting, perhaps we could do something somewhat similar with the GitHub side of things somehow. An aggregator server that does all of that for zef.

[22:59] <yoleaux> benjikun: I'll pass your message to FROGGS.

[22:59] *** vrurg left
[23:00] <timotimo> seems like we reached 2.8 at some point, but we're back up to 3.3?

[23:00] <AlexDaniel> yeah, something like that, but let's wait for new results‚Ä¶

[23:00] *** lizmat joined
[23:01] *** gabiruh joined
[23:01] <committable6> AlexDaniel, https://gist.github.com/3ed04dff1cfc320444106fc4564323a3

[23:01] <AlexDaniel> ye

[23:01] <AlexDaniel> bench: 2018.06,HEAD https://gist.github.com/AlexDaniel/7102bb2e70835f28851b992a41ea121f

[23:01] <benchable6> AlexDaniel, starting to benchmark the 2 given commits

[23:02] <timotimo> i'd like to see the stagestats for all the EVALs we have in there

[23:02] <benchable6> AlexDaniel, ¬¶2018.06: ¬´3.1967¬ª ¬¶HEAD: ¬´3.7439¬ª

[23:02] <benchable6> AlexDaniel, benchmarked the given commits and found a performance difference > 10%, now trying to bisect

[23:03] <benchable6> AlexDaniel, ¬¶2018.06: ¬´3.1967¬ª ¬¶59faed1: ¬´3.1234¬ª ¬¶38d046f: ¬´3.7134¬ª ¬¶HEAD: ¬´3.7439¬ª

[23:03] <timotimo> the vim syntax highlighter gets confused by the pod %)

[23:04] <AlexDaniel> 6c: https://gist.github.com/AlexDaniel/7102bb2e70835f28851b992a41ea121f

[23:04] <committable6> AlexDaniel, Using file ‚Äúfoo.p6‚Äù as a main file, other files are placed in ‚Äúsandbox/‚Äù

[23:04] <AlexDaniel> timotimo: ask and you shall receive :)

[23:04] <timotimo> i didn't immediately see how to get that, though

[23:05] <AlexDaniel> timotimo: with multifile gists you can do any kind of setup really

[23:05] <AlexDaniel> any command line flags and any input files :)

[23:05] <timotimo> that only gets you the "outer" stagestats

[23:05] <timotimo> i tried that myeslf, too

[23:06] <AlexDaniel> timotimo: what kind of stagestats do you want then?

[23:06] <committable6> AlexDaniel, https://gist.github.com/28e67881c7553fb735f941bf6fb58bea

[23:06] <AlexDaniel> like the module itself?

[23:07] <timotimo> well, the module does lots of evaling

[23:07] <timotimo> i'd like to see how much time each eval eats

[23:07] <AlexDaniel> hmmmm‚Ä¶ anyway, back to benchable

[23:08] <AlexDaniel> bench: 59faed1,38d046f https://gist.github.com/AlexDaniel/7102bb2e70835f28851b992a41ea121f

[23:08] <benchable6> AlexDaniel, starting to benchmark the 2 given commits

[23:08] <benchable6> AlexDaniel, ¬¶59faed1: ¬´3.1137¬ª ¬¶38d046f: ¬´3.1111¬ª

[23:08] <benchable6> AlexDaniel, No new data found

[23:08] <AlexDaniel> wat?

[23:09] <timotimo> i have a super headache, so i won't be of much use right now

[23:10] <AlexDaniel> timotimo: that's ok, benchable6 has a headache too

[23:11] <AlexDaniel> bisect: old=2018.06 new=HEAD https://gist.github.com/AlexDaniel/7102bb2e70835f28851b992a41ea121f

[23:11] <bisectable6> AlexDaniel, On both starting points (old=2018.06 new=b7379a8) the exit code is 42 and the output is identical as well

[23:11] <bisectable6> AlexDaniel, https://gist.github.com/fcafa0f7dadeb445c862a252ff704b31

[23:11] <AlexDaniel> oops I did it wrong

[23:11] <AlexDaniel> bisect: old=2018.06 new=HEAD https://gist.github.com/AlexDaniel/7102bb2e70835f28851b992a41ea121f

[23:12] <bisectable6> AlexDaniel, Bisecting by exit code (old=2018.06 new=b7379a8). Old exit code: 42

[23:12] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/419f675a35248504fef1d0ccf2a22b46

[23:12] <bisectable6> AlexDaniel, (2018-07-13) https://github.com/rakudo/rakudo/commit/83b4c8dcf4f7af77c4514081978dfe9a39c59288

[23:12] *** Zoffix joined
[23:13] <AlexDaniel> alright I'll move to #whateverable

[23:13] <Zoffix> Talk Slides and Recording: "Faster Perl 6 Programs": https://rakudo.party/post/Faster-Perl-6-Programs-Perl-6-Talk--Slides-Recording

[23:13] <AlexDaniel> woo! Zoffix++

[23:13] <jdv79> timotimo: what module does a lot o eval?

[23:14] *** benjikun left
[23:16] *** vrurg joined
[23:17] *** benjikun joined
[23:21] *** Shnaw7 joined
[23:21] <Shnaw7> Interested in reasonably priced GLOBAL IRC ADVERTISING? Contact me on twitter https://twitter.com/nenolod or linkedin https://www.linkedin.com/in/nenolod

[23:21] <benjikun> Spam :/

[23:22] <AlexDaniel> jdv79: alright

[23:22] <AlexDaniel> jdv79: so

[23:23] <AlexDaniel> jdv79: before 2.691408 after 3.27876625, (2018-07-14) https://github.com/rakudo/rakudo/commit/5cf0afce02c50677c58d958563d844d0a5098e7d

[23:23] *** mcmillhj joined
[23:24] <AlexDaniel> jdv79: can you file a ticket?

[23:24] *** Shnaw7 left
[23:28] *** mcmillhj left
[23:34] *** pecastro left
[23:38] *** mcmillhj joined
[23:42] *** Visitatore joined
[23:42] *** Visitatore left
[23:43] *** mcmillhj left
[23:47] *** benjikun left
[23:47] *** isBEKaml left
[23:48] *** benjikun joined
[23:59] <timotimo> jdv79: i believe yours does? perhaps regex interpolation?

