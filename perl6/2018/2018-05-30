[00:02] *** daxim_ joined
[00:04] *** d4l3k_ joined
[00:04] *** reu left
[00:04] *** iviv left
[00:04] *** mithaldu_ left
[00:05] *** kipd_ joined
[00:05] *** kipd left
[00:05] *** kipd_ is now known as kipd

[00:06] *** albongo left
[00:06] *** mienaikage left
[00:06] *** mempko left
[00:06] *** jsimonet left
[00:06] *** dalek left
[00:06] *** d4l3k_ is now known as dalek

[00:06] *** mienaikage joined
[00:06] *** Geth left
[00:06] *** ZofBot left
[00:06] *** synopsebot left
[00:06] *** hobbs left
[00:06] *** spacedbat left
[00:08] *** greppable6 left
[00:08] *** greppable6 joined
[00:11] *** hobbs joined
[00:14] *** jsimonet joined
[00:14] *** spacedbat joined
[00:15] *** mithaldu_ joined
[00:15] *** iviv joined
[00:16] *** mempko joined
[00:17] *** mcmillhj joined
[00:17] *** albongo joined
[00:28] *** mcmillhj left
[00:32] *** skids left
[00:35] *** skids1 joined
[00:37] *** Garland_g[m] left
[00:37] *** Matthew[m] left
[00:37] *** elcaro[m] left
[00:37] *** AlexDaniel`` left
[00:37] *** CIAvash[m] left
[00:37] *** unclechu left
[00:37] *** wictory[m] left
[00:37] *** lance_w[m] left
[00:38] *** ilmari[m] left
[00:38] *** tadzik left
[00:38] *** mienaikage left
[00:38] *** mirlur[m] left
[00:38] *** ChanServ sets mode: +v dalek

[00:39] *** hobbs left
[00:39] *** hobbs joined
[00:40] *** reu joined
[00:40] *** greppable6 left
[00:40] *** greppable6 joined
[00:41] *** squashable6 left
[00:41] *** benchable6 left
[00:41] *** coverable6 left
[00:41] *** undersightable6 left
[00:53] *** comborico1611 left
[00:59] *** tadzik joined
[01:04] *** BenGoldberg joined
[01:07] *** Sgeo_ joined
[01:10] *** Sgeo left
[01:27] *** shareable6 joined
[01:31] *** mempko left
[01:31] *** shareable6 left
[01:35] *** markong left
[01:38] *** coverable6 joined
[01:38] *** benchable6 joined
[01:38] *** squashable6 joined
[01:39] *** aindilis` left
[01:40] *** aindilis joined
[01:44] *** mempko joined
[01:45] *** ilbot3 left
[01:47] *** shareable6 joined
[01:53] *** mcmillhj joined
[01:54] *** shareable6 left
[01:57] *** ilbot3 joined
[01:57] *** ChanServ sets mode: +v ilbot3

[02:00] *** Matthew[m] joined
[02:00] *** lance_w[m] joined
[02:00] *** ilmari[m] joined
[02:00] *** wictory[m] joined
[02:00] *** unclechu joined
[02:00] *** AlexDaniel`` joined
[02:00] *** mirlur[m] joined
[02:00] *** CIAvash[m] joined
[02:00] *** elcaro[m] joined
[02:00] *** Garland_g[m] joined
[02:00] *** mienaikage joined
[02:24] *** raschipi left
[02:25] *** ryn1x joined
[02:27] *** ryn1x left
[02:51] *** mcmillhj left
[03:04] *** ExtraCrispy left
[03:07] *** ExtraCrispy joined
[03:07] *** ryn1x joined
[03:07] *** shareable6 joined
[03:08] *** sauvin joined
[03:11] *** Schepeers left
[03:11] *** shareable6 left
[03:22] *** buggable left
[03:22] *** huggable left
[03:22] *** ZofBot joined
[03:22] *** ChanServ sets mode: +v ZofBot

[03:22] *** huggable joined
[03:22] *** ChanServ sets mode: +v huggable

[03:22] *** buggable joined
[03:22] *** ChanServ sets mode: +v buggable

[03:23] *** p6lert left
[03:23] *** p6lert joined
[03:23] *** SourceBaby joined
[03:23] *** ChanServ sets mode: +v SourceBaby

[03:32] *** shareable6 joined
[03:33] *** shareable6 left
[03:33] *** shareable6 joined
[03:33] *** ryn1x left
[03:35] *** shareable6 left
[03:37] *** shareable6 joined
[03:39] *** shareable6 left
[03:39] *** shareable6 joined
[03:42] *** shareable6 left
[03:42] *** shareable6 joined
[03:44] *** Schepeers joined
[03:46] *** shareable6 left
[03:57] *** shareable6 joined
[04:03] *** shareable6 left
[04:03] *** shareable6 joined
[04:04] *** epony left
[04:05] *** shareable6 left
[04:07] <lookatme> Is it fine if I put the deallocate operator in a END block ?

[04:07] *** epony joined
[04:08] <lookatme> such as ` sub f() {„ÄÄstate $var; END { $var.close() } }; f()`

[04:10] *** aindilis left
[04:16] *** aindilis joined
[04:20] *** molaf joined
[04:24] *** aindilis left
[04:25] *** aindilis joined
[04:27] *** epony left
[04:27] *** eliasr left
[04:29] *** wamba joined
[04:31] *** epony joined
[04:37] *** curan joined
[04:40] <Xliff> .seen sergot

[04:40] <yoleaux> I saw sergot 14 Mar 2018 21:46Z in #perl6: <sergot> ufobat_: ping

[04:41] <Xliff> Does anyone know of a decent replacement for HTTP::UserAgent?

[04:41] <Xliff> Or do I have to Inline::Perl5?

[04:41] *** raschipi joined
[04:44] *** raschipi left
[05:04] *** curan left
[05:05] *** curan joined
[05:06] *** Xliff left
[05:13] *** MasterDuke left
[05:31] <moritz> .tell Xliff you might be interested in the cro HTTP client: https://cro.services/docs/intro/http-client

[05:31] <yoleaux> moritz: I'll pass your message to Xliff.

[05:37] *** xtreak joined
[05:38] *** curan left
[05:38] *** curan joined
[05:41] *** xtreak_ joined
[05:42] *** wamba left
[05:45] *** xtreak left
[05:55] *** skids1 left
[06:01] *** jmerelo joined
[06:11] *** curan left
[06:11] *** curan joined
[06:12] *** rindolf joined
[06:16] *** wamba joined
[06:30] *** BenGoldberg left
[06:39] *** domidumont joined
[06:44] *** curan left
[06:45] *** domidumont left
[06:45] *** curan joined
[06:46] *** domidumont joined
[06:47] <jmerelo> Hi

[06:47] <yoleaux> 03:59Z <AlexDaniel> jmerelo: I looked at shareable issue and it seems like it can only serve one file, then it just hangs or something like that (some time later the watchdog will restart it and it'll be able to serve another file, but it takes time for the watchdog to kick in). Looks very similar to R#1595

[06:47] <yoleaux> 03:59Z <AlexDaniel> jmerelo: I'll have to figure something out for this before the squashathon :S

[06:47] <yoleaux> 04:03Z <AlexDaniel> jmerelo: the workaround mentioned in https://github.com/perl6/whateverable/issues/24#issuecomment-371292860 is in place, but it doesn't help for some reason. Moreover, bots have some restrictions to which paths they can write, and *that* is what affects it, I think.

[06:47] <yoleaux> 04:08Z <AlexDaniel> jmerelo: oh actually, I think I ‚Äú‚Äúfixed‚Äù‚Äù it. Now every service will use an existing precomp file instead of generating a new one on the fly‚Ä¶ that fixes shareable ü§¶ No idea how that can possibly help, but it works now

[06:47] <jmerelo> .tell AlexDaniel thanks!

[06:47] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[06:48] <jmerelo> Hum. Getch has stopped working?

[06:48] <jmerelo> *Geth

[07:09] <jmerelo> Yep, it has

[07:10] *** gfldex left
[07:17] *** gfldex joined
[07:20] <andrzejku_> do you think if I know Perl6 but not Perl can I write in CV that I know Perl

[07:20] <andrzejku_> to not recreuiter told me that I am learning useless language?

[07:21] <andrzejku_> or it is bad idea

[07:21] <geekosaur> on the one hand, perl 6 is not perl 5

[07:21] <geekosaur> on the other you're talking about recruiters

[07:22] <geekosaur> the sort who insist on sending me python jobs, ruby jobs, various other things not even on my resume/cv

[07:23] <geekosaur> not to mention insisting on treating "openafs" as a financial reference

[07:24] <geekosaur> basically, recruiters are bald-faced liars out of the box, and you can assume you are being manipulated not for your own good

[07:25] <andrzejku_> geekosaur: ya thats right

[07:27] <andrzejku_> geekosaur: it even happend in my company, they told one dev that he is hired then he terminated his contract and comes to assign the new one but they changed conditions which they promised him 

[07:36] *** psychoslave joined
[07:40] *** darutoko joined
[07:44] *** HaraldJoerg joined
[07:49] *** bingolar joined
[07:56] *** zakharyas joined
[07:58] *** shareable6 joined
[08:02] *** llfourn_ joined
[08:03] *** llfourn left
[08:07] *** wamba left
[08:14] *** xtreak_ left
[08:19] *** zakharyas left
[08:19] *** dakkar joined
[08:19] *** zakharyas joined
[08:21] *** bingolar left
[08:26] *** curan left
[08:27] *** curan joined
[08:28] *** [particle]1 joined
[08:28] *** [particle] left
[08:37] *** sena_kun joined
[08:46] *** Tison joined
[08:46] <Tison> \o

[08:50] *** molaf left
[08:57] *** xtreak joined
[09:01] *** wamba joined
[09:03] *** mcmillhj joined
[09:06] <lookatme> o/

[09:06] <lookatme> Tison, 

[09:07] *** mcmillhj left
[09:09] *** aindilis left
[09:10] *** undersightable6 joined
[09:21] *** w_richard_w left
[09:22] <Tison> We get $=pod contains Pods only by load source code, don't we?

[09:23] <Tison> Is there a safe way to get Pods of source code without load(means, execute) it?

[09:24] <jmerelo> Tison: right

[09:25] *** silug left
[09:25] <jmerelo> Tison: second question: what do you mean? Extracting just the pods from a file? Also: pods might include source code too in :preamble or :config sections.

[09:25] *** scimon joined
[09:27] <Tison> maybe i can say acting like `javadoc`

[09:27] <Tison> https://github.com/perl6/Pod-To-HTML/blob/1ef6aa072eb199e2ac23fca8cc2639325636650f/lib/Pod/To/HTML.pm#L25-L28

[09:28] <Tison> IIRC there was a discuss about retrieving pods by `EVAL`

[09:29] *** wamba left
[09:29] <Tison> Modules and Pod 6 files often have no bare code though

[09:30] <jmerelo> Tison: perl6 --doc is a bit like Javadoc.

[09:31] <jmerelo> Tison: you can use it to generate markdown or HTML if the modules are installed.

[09:33] *** curan left
[09:33] *** curan joined
[09:43] <Tison> at then timo show me a example like `=pod ... \n INIT say 42` which `perl6 --doc` execute code inside INIT parse

[09:43] *** aindilis joined
[09:44] <Tison> I'm ok with Pod 6, here is some little wart IMO

[09:50] *** ChoHag left
[09:53] *** Actualeyes joined
[10:04] *** sena_kun left
[10:05] *** sena_kun joined
[10:06] *** Actualeyes left
[10:06] *** wamba joined
[10:07] *** curan left
[10:08] *** Tison left
[10:08] *** curan joined
[10:10] *** domidumont left
[10:11] *** sena_kun left
[10:19] *** benjikun_ left
[10:19] *** aindilis left
[10:21] *** benjikun joined
[10:23] *** aindilis joined
[10:27] *** xtreak left
[10:30] *** aindilis left
[10:32] *** markong joined
[10:43] <AlexDaniel> .

[10:43] <yoleaux> 06:47Z <jmerelo> AlexDaniel: thanks!

[10:43] <AlexDaniel> squashable6: next

[10:43] <squashable6> AlexDaniel, ‚ö†üçï Next SQUASHathon in 1 day and ‚âà23 hours (2018-06-02 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[10:49] *** throwaway321 joined
[10:49] <throwaway321> hello *

[10:49] <moritz> \o throwaway321 

[10:50] <throwaway321> hi moritz

[10:51] <throwaway321> any idea how nativecall works with varagrs?

[10:52] *** mahafyi joined
[10:52] <throwaway321> I am having trouble with a function similar to this: int add(int number, ...)

[10:54] <throwaway321> how do I take care of those varargs in my signature?

[10:54] <moritz> throwaway321: I'm not really the export on nativecall :(

[10:54] <moritz> throwaway321: one thing you can do is add multis for different arities

[10:55] <throwaway321> I tried seems multis won't work with is native

[10:55] <moritz> multi sub a(int) is native(...); multi sub a(int, int) is native(...);

[10:55] <moritz> :(

[10:55] <moritz> maybe ask on stackoverflow?

[10:55] <moritz> I've seen some good answers to nativecall questions there

[10:55] <moritz> unless timotimo or so shows up earlier :-)

[10:56] <jmerelo> throwaway321: there's this question in StackOverflow along those lines https://stackoverflow.com/questions/49586031/how-to-handle-varargs-with-nativecall

[10:56] <jmerelo> Unfortunately, no answer so far... So we might have to ask timotimo to answer it there too.

[10:57] *** benjikun left
[10:57] <throwaway321> oh thanks

[10:58] <timotimo> oh no

[10:58] <throwaway321> timo already answered and said there is no support for varargs yet

[10:58] *** benjikun joined
[10:59] <throwaway321> hello timotimo

[10:59] <timotimo> you can have multiple subs refer to the same C symbol with "is symbol"

[10:59] <timotimo> that can help with the multi problem, though i didn't know until now that multis aren't supported by NativeCall

[10:59] <throwaway321> this is what I get when I define a multi: "Cannot invoke object with invocation handler in this context"

[11:00] <lizmat> how would NativeCall's support for multi's help ?

[11:00] <jmerelo> timotimo: you might want to expand your comment to an answer there. Comments are easily missed there...

[11:00] <timotimo> it would mean you don't have to do your own multi dispatch manually

[11:00] <timotimo> like, you could have something like

[11:01] <timotimo> sub fprint_two_ints(Str, int32, int32) is native { }; sub fprint_two_doubles(Str, num64, num64) is native {}; ...

[11:01] <timotimo> and then multi sub fprint(Str, int32, int32) { fprint_two_ints(...) }; multi sub fprint(Str, num64, num64) { fprint_two_doubles(...) }; ..

[11:01] <timotimo> that's obviously annoying

[11:02] <lizmat> yeah, I guess I need to get into NativeCall innards to fix that

[11:03] <lizmat> but I do get your point now

[11:03] <timotimo> i think we probably have a problem with the way we compile nativecall subs today

[11:03] *** xtreak joined
[11:03] <timotimo> if i understand correctly, no nativecall code has to be changed in moarvm

[11:03] <throwaway321> would support for varargs be doable?

[11:04] <timotimo> because we pass in objects already, they know their type, so we don't even have to have something like format strings to tell what types are to come in the argument list

[11:04] *** aindilis joined
[11:04] <timotimo> i might be wrong about that

[11:05] *** jmerelo left
[11:05] <throwaway321> thanks everyone

[11:21] <timotimo> of course you can build something with EVAL that generates the right subs on the fly as they are needed for the first time

[11:23] *** wamba left
[11:26] *** raschipi joined
[11:37] *** zakharyas left
[11:40] *** throwaway321 left
[11:40] *** lalitmee joined
[11:45] *** itaipu joined
[11:57] *** Tison joined
[12:04] *** mingdao_ is now known as mingdao

[12:31] *** mcmillhj joined
[12:31] *** mcmillhj left
[12:33] <moritz> do you even need EVAL? I mean, all you need for nativecall is a code object and a signature, no?

[12:33] <moritz> and then call trait_mod:<is> with the right arguments

[12:33] <[ptc]_> timotimo: just wondering: is there a community-run MoarVM Coverity-Scan account?

[12:34] <timotimo> yeah, yours :P

[12:34] <[ptc]_> hrm, that's what I thought :-/

[12:34] <[ptc]_> oh well

[12:35] <[ptc]_> I still wonder if it would be better linking the actual MoarVM repo to Coverity rather than my fork

[12:35] <[ptc]_> especially since I don't have so much time to spend on P6 stuff atm :-(

[12:36] *** mcmillhj joined
[12:38] <timotimo> i have no idea how to do that :D

[12:38] *** zakharyas joined
[12:40] <[ptc]_> are you an admin of the MoarVM repo?  I think that'd be a necessary requirement

[12:40] <[ptc]_> other than that, I can find out how one would do things from the main repo, so that it's in central location

[12:41] <[ptc]_> somehow that feels a cleaner solution...

[12:42] <timotimo> i'm not an admin there, no

[12:42] *** APic left
[12:43] <[ptc]_> ok.  I'll find out what's likely to be required and will let you know

[12:44] <timotimo> thanks

[12:44] <[ptc]_> no worries :-)

[12:44] * [ptc]_ re-enters lurk-mode...

[12:59] *** kurahaupo left
[13:01] *** xtreak left
[13:03] *** xtreak joined
[13:04] *** kst left
[13:05] *** xtreak left
[13:10] <lizmat> [ptc]_ : did you do anything to Travis config?  my module testing now breaks with: The program 'perl6' is currently not installed. To run 'perl6' please ask your administrator to install the package 'rakudo'

[13:13] <[ptc]_> lizmat: haven't done anything to Travis in ages.  That's something I definitely need to look into again

[13:13] <lizmat> hmmm... weird

[13:13] * lizmat tries again

[13:14] <[ptc]_> come to think of it, I think brian d foy has implemented an improved Travis config for himself, since the one I developed ages ago hasn't really stood the test of time...

[13:15] * [ptc]_ really needs to dive back into this community

[13:17] <El_Che> I build ubuntu 14.04 packages for all releases and they are in a repo. Maybe it could be a faster and better alternative 

[13:18] <[ptc]_> El_Che: I agree totally, that would be much faster, since at present everything is built from source

[13:19] *** Tison left
[13:20] <El_Che> I have the repo up since last release, but if needed I can build packages retroactively

[13:21] <El_Che> although I think versions from there onwards is ok

[13:21] <El_Che> I don't see much the point of testing against 2015.12

[13:22] <[ptc]_> yeah, 2015.12 is much too old.  Actually, it'd probably be a good idea to drop the oldest from the list of possible releases at the time of each new release

[13:23] <El_Che> yeah, the starting point is arbitrary anyway, and everything from last release is automatically build and uploaded to the repo

[13:24] <El_Che> built

[13:26] <[ptc]_> The script one needs to edit is in the travis-build repo: https://github.com/travis-ci/travis-build/blob/master/lib/travis/build/script/perl6.rb

[13:27] <[ptc]_> at present, only "blead" is built by default.  If one specifies another version as part of the 'perl6:' spec in the yaml, then it gets built as well

[13:31] <[ptc]_> quick hack idea: add a switch in the setup() method which then installs one of your Ubuntu packages.  Otherwise everything gets built from scratch

[13:32] <El_Che> I want something like in go, support for a list like this:

[13:32] <El_Che> perl6:

[13:32] <evalable6> El_Che, rakudo-moar 189c5a8a3: OUTPUT: ¬´¬ª

[13:32] <El_Che> - 2018.01.x

[13:32] <El_Che> - 2018.02.x

[13:32] <El_Che> - 2018.03.x

[13:33] <El_Che> where x is the latest dot release

[13:33] <El_Che> I haven't implemented myself because I am not sure it's something everyone wants

[13:34] <timotimo> i wonder if travis users would be upset if we pinged our server with "this perl6 version was just built on travis" so we can see if anyone is actually using super old versions. probably not a cool thing to do; that's surely a thing people want an opt-in for, rather than an opt-out

[13:36] <El_Che> timotimo: well, if the requested version if not found, it could be built on the fly

[13:36] <El_Che> e.g. for building from a commit

[13:37] <El_Che> however, I think it's an anti-pattern

[13:37] <El_Che> and if you need that, it's easy enough to do it yourself in your own travis setup

[13:47] <[ptc]_> there is support for a list, one can specify multiple perl6 release versions and a the module is built and tested against each version

[13:48] <[ptc]_> the main issue is that each perl6 version is built from scratch; using the packages would drop module build times drastically

[13:48] <El_Che> yes, that's the idea

[13:48] *** lalitmee left
[13:49] <[ptc]_> interestingly enough, with the current travis-build code for perl6, one could specify a minimum perl6 version required for packages to be used, and if one wants 2015.12, then that gets built from scratch

[13:49] <[ptc]_> it's sort of the best of both worlds

[13:50] *** benjikun left
[13:51] <lizmat> my, Travis is finciky: modules pass again now

[13:51] <El_Che> rakudo tests are finicky

[13:52] <El_Che> if you build them (and test) on the fly you'll have some failures

[13:53] *** aindilis left
[13:53] *** AlexDaniel left
[13:53] *** AlexDaniel joined
[13:53] <[ptc]_> El_Che: do you know Dominique Dumont?  He's on the Debian Rakudo team and organises a lot of the stuff for the official Debian packages

[13:53] *** aindilis joined
[13:53] <El_Che> I know of hime

[13:53] <El_Che> I know of him

[13:54] <raschipi> Please convince him to package zef...

[13:54] <El_Che> e.g. that debian testing is very up to date 

[13:54] <El_Che> (I only provide debian stable packages)

[13:54] <El_Che> considering adding testing and unstable, but it's kind of a moving target

[13:55] <El_Che> raschipi: yeah, the first releases of my packages didn't include zef, but I decided to add it

[13:55] <El_Che> rakudo + zef is a better base

[13:55] <raschipi> zef should be a CORE module

[13:56] <El_Che> zef or something similar

[13:56] <El_Che> I love the functionality, not the interface

[13:57] <El_Che> with perl6 being a moving target, kudos to the dev

[13:58] *** molaf joined
[14:09] *** mcmillhj left
[14:11] <[ptc]_> I believe creating packages for perl6 on Debian is an "interesting" problem.  It seems that all modules need to be rebuilt each time rakudo is updated, which makes things hard for the package maintainers

[14:11] <AlexDaniel> https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=867237#10

[14:11] <AlexDaniel> .seen robertle

[14:11] <yoleaux> I saw robertle 22 May 2018 11:59Z in #perl6: <robertle> looks like a correct british salute from behind to me... ;)

[14:11] <AlexDaniel> ‚Üë that's another Debian hero

[14:12] <timotimo> the compunitrepo staging thing is for that purpose, [ptc]_ 

[14:13] <[ptc]_> unfortunately, I'm waaaay behind with perl6 developments atm... :-/

[14:13] <raschipi> They refuse to allow zef in the archive because they are going to package all the modules. But don't have time for it.

[14:14] <lizmat> Debian should perhaps make their own repository storage module  :)

[14:14] <AlexDaniel> there's also some semi-related discussion here: https://github.com/rakudo/rakudo/issues/1257#issuecomment-380552818

[14:14] <[ptc]_> raschipi: they mention that help is welcome :-)

[14:17] <raschipi> To package the modules. I want to package zef, which they say they don't want.

[14:18] <AlexDaniel> maybe also this: https://github.com/ugexe/zef/issues/117

[14:20] *** ChoHag joined
[14:22] *** wonuku joined
[14:23] *** Libre joined
[14:29] *** albongo left
[14:30] *** albongo joined
[14:30] *** mcmillhj joined
[14:30] *** mcmillhj left
[14:34] *** curan left
[14:35] *** mcmillhj joined
[14:39] *** domidumont joined
[14:41] <El_Che> not adding zef makes no sense

[14:42] <El_Che> being not happy about the sha1 rebuilt is very understandable, though

[14:42] <El_Che> cpanminus is packages for perl 5

[14:43] <El_Che> zo it's not about zef installing modules  elsewhere

[14:44] *** Libre left
[14:44] <[ptc]_> agreed: not adding zef makes no sense.

[14:46] <[ptc]_> although I do wonder what would happen when a user does `zef install My::Module` and then later does `apt install perl6-my-module`

[14:47] <timotimo> i suppose you'd have one auth:<apt> and one auth:<cpan:username> or something

[14:47] *** wamba joined
[14:47] <El_Che> [ptc]_: I "solve" that problem by having the bundled zef install ins /opt/rakudo-pkg/share and supply a script for users to install in ~/.perl6

[14:48] <El_Che> timotimo: You don't want to mix directories

[14:49] <[ptc]_> iirc when python is upgraded on Debian, all modules are rebuilt as part of the upgrade process

[14:49] <[ptc]_> maybe that's a good pattern to follow

[14:50] <[ptc]_> for the Debian packages, at least.  Then the zef stuff can go in ~/.perl6

[14:50] <raschipi> Yes, the package manager owns the directories where it installs things. Other things need to install into their own.

[14:52] *** xtreak joined
[14:54] <El_Che> [ptc]_: a global local site dir is fine

[14:55] <El_Che> sometimes ~/.perl6 is not a good match for the use case at hand

[14:59] *** wonuku left
[14:59] <raschipi> Many processes don't even have a $HOME.

[15:03] *** committable6 joined
[15:05] <AlexDaniel> domidumont: https://irclog.perlgeek.de/perl6/2018-05-30#i_16225092

[15:12] <buggable> New CPAN upload: Memoize-0.0.1.tar.gz by ELIZABETH http://modules.perl6.org/dist/Memoize:cpan:ELIZABETH

[15:17] *** wamba left
[15:18] *** jmerelo joined
[15:21] <jmerelo> o/

[15:37] *** psychoslave left
[15:38] *** scimon left
[15:38] *** scimon joined
[15:41] *** margeas joined
[15:43] <jmerelo> Geth is still busted

[15:44] *** markong left
[15:44] *** APic joined
[15:50] *** Tison joined
[15:51] *** [ptc]_ is now known as [ptc]

[15:52] <AlexDaniel> undersightable6: status

[15:52] <undersightable6> AlexDaniel, OK! Working on it‚Ä¶

[15:54] <undersightable6> AlexDaniel, 0 errors, 5 warnings: https://gist.github.com/648e1659e26c7189db4acaa34c4afc1f

[15:54] *** Libre joined
[15:55] *** synopsebot joined
[15:55] *** ChanServ sets mode: +v synopsebot

[15:55] *** Geth joined
[15:55] *** ChanServ sets mode: +v Geth

[15:55] <AlexDaniel> oh lol look at that

[15:55] <AlexDaniel> I fixed it xD

[15:57] *** tadzik1 joined
[15:57] *** tadzik1 left
[16:00] <raschipi> botsnack

[16:00] <raschipi> .botsnack

[16:00] <yoleaux> :D

[16:01] *** tadzik1 joined
[16:01] *** tadzik left
[16:01] *** Guest55637 joined
[16:02] *** ChoHag left
[16:02] *** zakharyas left
[16:02] *** tadzik1 is now known as tadzik

[16:04] *** enheh_ left
[16:04] <Geth> ¬¶ doc: 35df3e17b7 | (JJ Merelo)++ | doc/Language/variables.pod6

[16:04] <Geth> ¬¶ doc: Eliminates another category, refs #1410

[16:04] <Geth> ¬¶ doc: 

[16:04] <Geth> ¬¶ doc: And chekcs that #1358 is well closed.

[16:04] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/35df3e17b7

[16:04] <synopsebot> Link: https://doc.perl6.org/language/variables

[16:07] *** Libre left
[16:07] *** zakharyas joined
[16:09] <jmerelo> AlexDaniel: thanks!

[16:10] *** comborico1611 joined
[16:15] *** skids joined
[16:17] *** xtreak left
[16:24] *** eliasr joined
[16:26] <rindolf> Hi all

[16:27] <raschipi> oi

[16:28] <rindolf> I am beginning to think that pypy really is alicorn magic - it runs my program at 7s vs. cpython's 2m56.689s

[16:29] <rindolf> and the perl 6 ver is still running :(

[16:30] *** markong joined
[16:30] <raschipi> TimToady wants p6 to run as fast as C someday.

[16:30] *** zakharyas left
[16:30] <El_Che> you got to geve it to the pyhton guys, they mean it when they say that speed isn'nt everything

[16:30] *** margeas left
[16:31] <raschipi> rindolf: you sure you didn't enter an infinite loop somehow?

[16:31] <timotimo> raschipi: it's quite possible to get perl6 code to run that slow

[16:31] <rindolf> raschipi: let me paste site it

[16:31] <timotimo> rindolf: is that the same code you showed recently?

[16:32] <raschipi> Oh yes, but it's also quite easy to enter an infinite loop by mistake too.

[16:32] <buggable> New CPAN upload: Env-0.0.2.tar.gz by ELIZABETH http://modules.perl6.org/dist/Env:cpan:ELIZABETH

[16:33] <rindolf> raschipi: https://paste.debian.net/1027294/

[16:33] <rindolf> timotimo: a different one

[16:33] <Geth> ¬¶ doc: d00b6468af | (JJ Merelo)++ | doc/Language/iterating.pod6

[16:33] <Geth> ¬¶ doc: Continues with #2069, with iterating constructs

[16:33] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d00b6468af

[16:33] <synopsebot> Link: https://doc.perl6.org/language/iterating

[16:34] *** scimon left
[16:34] <rindolf> raschipi: this is the py ver - https://github.com/shlomif/project-euler/blob/master/project-euler/287/euler_287_v1.py

[16:36] <timotimo> how deep does it recurse?

[16:38] <rindolf> timotimo: 24

[16:38] <rindolf> timotimo: log 2

[16:38] <timotimo> we'd reduce $N to make the work load smaller?

[16:38] *** mrdside joined
[16:38] <rindolf> timotimo: we can

[16:38] <timotimo> so 23 takes half as long as 24?

[16:40] <rindolf> timotimo: or a quarter as long

[16:51] *** molaf left
[17:02] *** dakkar left
[17:04] *** Khisanth left
[17:06] <timotimo> ok, with a load of 20 it takes 3:10 on my machine

[17:09] <Geth> ¬¶ doc: 458e6ffe05 | (JJ Merelo)++ | doc/Language/iterating.pod6

[17:09] <Geth> ¬¶ doc: Finished iterating data structures.

[17:09] <Geth> ¬¶ doc: 

[17:09] <Geth> ¬¶ doc: It's not perfect, but it's there. Much of it was already covered in

[17:09] <Geth> ¬¶ doc: the control flow document. This closes #2069.

[17:09] <synopsebot> Link: https://doc.perl6.org/language/iterating

[17:09] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/458e6ffe05

[17:13] <timotimo> the timing isn't all that stable at the moment, my system is far from idel

[17:13] <timotimo> idle

[17:14] <mrdside> hi

[17:15] <mrdside> i have "method get-updates(%params? (:$offset, :$limit, :$timeout))"

[17:15] <mrdside> how can i pass %params?

[17:15] <timotimo> just pass a hash

[17:16] <timotimo> my %foo = offset => 1; get-updates(%foo)

[17:16] <timotimo> m: say 9.3 / 10.3

[17:16] <camelia> rakudo-moar 189c5a8a3: OUTPUT: ¬´0.902913‚ê§¬ª

[17:16] <timotimo> rindolf: want an easy 10% speed improvement? get rid of "return" :)

[17:16] *** samcv left
[17:20] <mrdside> doesn't work

[17:20] <mrdside> error

[17:20] <mrdside> wrong argument

[17:21] <timotimo> m: class Test { method get-updates(%params? (:$offset, :$limit, :$timeout)) { say $offset; } }; my %options = offset => 1; Test.get-updates(%options)

[17:21] <camelia> rakudo-moar 189c5a8a3: OUTPUT: ¬´1‚ê§¬ª

[17:22] *** samcv joined
[17:23] <timotimo> could something else be different somewhere?

[17:28] <rindolf> timotimo: ah

[17:30] <Geth> ¬¶ doc: bbfb2ec17d | (JJ Merelo)++ | 2 files

[17:30] <Geth> ¬¶ doc: Deletes nativeInt

[17:30] <Geth> ¬¶ doc: 

[17:30] <Geth> ¬¶ doc: This file actually did not have anything, causing more confusion than

[17:30] <Geth> ¬¶ doc: benefit, as indicated by @jnthn in #1534. The native types are right

[17:30] <Geth> ¬¶ doc: now described in nativecall, but they will be moved somewhere else, as

[17:30] <Geth> ¬¶ doc: per #1512.

[17:30] <Geth> ¬¶ doc: 

[17:30] <Geth> ¬¶ doc: Also changes redirection to the new page that includes all these types.

[17:30] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/bbfb2ec17d

[17:32] <timotimo> rindolf: i know how to make the program a whole lot faster, but give incorrect output. does that count?

[17:32] <rindolf> timotimo: no

[17:32] <timotimo> can you verify the right output value for N == 16?

[17:33] <mrdside> >  my %foo = offset => 1; $bot.get-updates(%foo)   

[17:33] <mrdside> Cannot convert string to number: base-10 number must begin with valid digits or '.' in '‚èèoffset=1' (indicated by ‚èè)

[17:33] <mrdside>   in block  at /home/ymak/.perl6/sources/1A204C32E7D911DE0864A9BF3E06FA10C387892F (TelegramBot) line 32

[17:33] <mrdside>   in block  at /home/ymak/.perl6/sources/1A204C32E7D911DE0864A9BF3E06FA10C387892F (TelegramBot) line 28

[17:33] <mrdside>   in method send-request at /home/ymak/.perl6/sources/1A204C32E7D911DE0864A9BF3E06FA10C387892F (TelegramBot) line 27

[17:33] <mrdside>   in method get-updates at /home/ymak/.perl6/sources/1A204C32E7D911DE0864A9BF3E06FA10C387892F (TelegramBot) line 80

[17:33] <mrdside>   in block <unit> at <unknown file> line 1

[17:34] <mrdside> https://github.com/GildedHonour/TelegramBot

[17:34] <timotimo> looks like the value was passed correctly, but you're trying to intify a string that doesn't want to be intified

[17:35] <timotimo> oh, yes

[17:35] <timotimo> https://github.com/GildedHonour/TelegramBot/blob/master/lib/Telegram.pm6#L32

[17:36] <timotimo> you can't use + for this purpose, you probably meant to use ~ for string concat, but there's probably something that has to go in between parameters, too

[17:36] *** Tison left
[17:36] <mrdside> ok

[17:37] <mrdside> i have working bot with this module - https://github.com/Robertof/perl-www-telegram-botapi

[17:37] <mrdside> i think i should use it instead

[17:38] *** molaf joined
[17:38] <mrdside> if i have not enough experience in Perl yet?

[17:38] <timotimo> ah, that module doesn't belong to you?

[17:39] <timotimo> that explains things %)

[17:39] <mrdside> no

[17:39] <mrdside> )

[17:39] <mrdside> i just playing

[17:39] <mrdside> in perl 5 i don't understand how work with ref()

[17:40] <mrdside> but i think this is not big deal

[17:41] <mrdside> there is too much '#todo' and '#todo refactor' in  https://github.com/GildedHonour/TelegramBot

[17:41] <timotimo> i submitted an issue

[17:41] <mrdside> thanks a lot!

[17:41] <timotimo> no problem

[17:42] <mrdside> any advise about v5 or v6 for this purpose?

[17:43] <timotimo> i've never programmed anything in perl 5 :)

[17:43] *** ExtraCrispy left
[17:44] <mrdside> me too :) just some oneliners

[17:47] <mrdside> i think i should try both

[17:47] <mrdside> i need advise about perl6 REPL

[17:47] <mrdside> "You may want to `zef install Readline` or `zef install Linenoise` or use rlwrap for a line editor

[17:47] <mrdside> "

[17:47] <mrdside> what's this?

[17:47] <rindolf> timotimo: the C versions runs in under 1s

[17:48] <mrdside> ok

[17:48] <AlexDaniel> squashable6: status

[17:48] <squashable6> AlexDaniel, ‚ö†üçï Next SQUASHathon in 1 day and ‚âà16 hours (2018-06-02 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:48] <mrdside> both?

[17:50] <jmerelo> mrdside: no, you can use one or the other

[17:51] <jmerelo> mrdside: it will help you to use history and other nice features with the perl6 CLI

[17:54] <Geth> ¬¶ doc: 3067d8ce67 | (JJ Merelo)++ | doc/Language/nativetypes.pod6

[17:54] <Geth> ¬¶ doc: First attempt at documenting nativetypes

[17:54] <Geth> ¬¶ doc: 

[17:54] <Geth> ¬¶ doc: I have moved the table to this page and split it in two, eliminating

[17:54] <Geth> ¬¶ doc: nonspec types. It will clarify what you can use in native call (those

[17:54] <synopsebot> Link: https://doc.perl6.org/language/nativetypes

[17:54] <Geth> ¬¶ doc: declared with nativesize) and which ones you can't. Refs #1512.

[17:54] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/3067d8ce67

[17:57] <timotimo> rindolf: i think your code exposed an interesting bug in the perl6 optimizer

[17:58] <rindolf> timotimo: ah

[17:58] <rindolf> timotimo: nice

[18:08] <timotimo> m: sub foo($x, $y) { True };  sub bar($x, $y, $w) {     {         my int $x2 = 1;         my int $y2 = 2;         if foo($x, $y) == foo($x, $y2) == foo($x2, $y2) == foo($x2, $y) {             2;         } else {             1         }     } };  say bar(1, 2, 25);

[18:08] <camelia> rakudo-moar 189c5a8a3: OUTPUT: ¬´Cannot resolve caller Numeric(Sub+{is-pure}+{Precedence}: ); none of these signatures match:‚ê§    (Mu:U \v: *%_)‚ê§  in sub bar at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:09] <timotimo> it's trying to numify the sub instead of the result of the sub when it does the == operation

[18:09] <timotimo> BBIAB

[18:11] <raschipi> jmerelo: did you see zoffix has a branch that documents the native numeric types?

[18:11] <timotimo> mrdside: honestly, i'd almost recommend using the jupyter notebook instead of the perl6 repl to figure stuff out :)

[18:12] <timotimo> https://mybinder.org/v2/gh/bduggan/p6-jupyter-kernel/master?filepath=eg%2Fhello-world.ipynb

[18:20] <jmerelo> raschipi: it's the numeric types, in general

[18:20] <raschipi> just making sure you're aware, no need to redo those.

[18:20] <mrdside> timotimo: maybe, after Emacs )))

[18:21] <mrdside> I can use C-p C-n C-b C-f to navigate

[18:21] <jmerelo> raschipi: there's some overlap, probably. We can rewrite stuff when it's eventually merged if needed.

[18:22] <mrdside> i think Perl 6 Grammar will help a lot with messages processing.

[18:24] <mrdside> btw how can i define KIO8-R text encoding for read text files?

[18:24] *** pecastro joined
[18:24] *** sauvin left
[18:28] <jmerelo> mrdside: not sure you can... https://github.com/rakudo/rakudo/search?q=kio8-r&unscoped_q=kio8-r this returns nothing.

[18:29] <jmerelo> KOI8-R returns nothing either

[18:30] <Geth> ¬¶ doc/rasch-readme: e7ab3cd32e | (Rafael Schipiura)++ (committed using GitHub Web editor) | 2 files

[18:30] <Geth> ¬¶ doc/rasch-readme: README in Portuguese

[18:30] <Geth> ¬¶ doc/rasch-readme: 

[18:30] <Geth> ¬¶ doc/rasch-readme: Tradu√ß√£o do README para portugu√™s.

[18:30] <Geth> ¬¶ doc/rasch-readme: review: https://github.com/perl6/doc/commit/e7ab3cd32e

[18:31] <Geth> ¬¶ doc: rafaelschipiura++ created pull request #2081: README in Portuguese

[18:31] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2081

[18:34] *** lucasb joined
[18:34] <mrdside> i asked this before and got advise to try write code for this purpose. but i don't now how

[18:35] <lucasb> raschipi: ^^ does your commit accidentaly deletes README.es.md?

[18:36] <raschipi> yes, I'm fixing it

[18:36] <Geth> ¬¶ doc/rasch-readme: f88f0391f5 | (Rafael Schipiura)++ (committed using GitHub Web editor) | README.es.md

[18:36] <Geth> ¬¶ doc/rasch-readme: commit accidentaly deletes README.es.md

[18:36] <Geth> ¬¶ doc/rasch-readme: review: https://github.com/perl6/doc/commit/f88f0391f5

[18:37] <jmerelo> raschipi: I wouldn't forgive you for that :-)

[18:38] <jmerelo> mrdside: Far as I can tell, you can't do it out of the box. You can probably create some easy translation table from KOI8 to Unicode, but you'll have to do it.

[18:38] <raschipi> I know. That's why I sent a pull request instead of committing directly.

[18:39] <jmerelo> mrdside: This table does the conversion, for instance https://koi8.pp.ru/utf-8.koi8-r.html

[18:41] <mrdside> nice, and how use it with "my $fh = open('text.txt', enc => 'kio8-r');"?

[18:41] *** mahafyi left
[18:42] *** lucasb left
[18:43] <mrdside> jmerelo: .

[18:45] *** zakharyas joined
[18:52] <jmerelo> mrdside: Not really, I'm afraid... You'll have to turn that table into a Hash, read the KOI8 into a buffer, and do a one-by-one character conversion from one to the other.

[18:52] <jmerelo> mrdside: it would make a nice new module :-)

[18:54] *** psychoslave_ joined
[18:55] <Geth> ¬¶ doc: ronaldxs++ created pull request #2082: Update Language/regexes.pod6.  Fix confusing sentence about zero-width assertions

[18:55] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2082

[18:55] <Geth> ¬¶ doc: e3d825ac85 | (Ronald Schmidt)++ | doc/Language/regexes.pod6

[18:55] <Geth> ¬¶ doc: Update Language/regexes.pod6.  Fix confusing sentence about zero-width

[18:55] <Geth> ¬¶ doc: 

[18:55] <Geth> ¬¶ doc: assertions included with character classes and remove likely pasto right

[18:55] <Geth> ¬¶ doc: after.

[18:55] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e3d825ac85

[18:55] <synopsebot> Link: https://doc.perl6.org/language/regexes

[18:55] <Geth> ¬¶ doc: 0bfe6e6dba | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[18:55] <Geth> ¬¶ doc: Merge pull request #2082 from ronaldxs/fix-regex-pre-defined-character-classes

[18:55] <Geth> ¬¶ doc: 

[18:56] <Geth> ¬¶ doc: Update Language/regexes.pod6.  Fix confusing sentence about zero-width assertions

[18:56] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/0bfe6e6dba

[18:57] <mrdside> jmerelo: ok. i'll try

[18:58] <jmerelo> mrdside: good luck!

[19:02] <Geth> ¬¶ doc: 0e6e6d2faf | (JJ Merelo)++ | 2 files

[19:02] <Geth> ¬¶ doc: Reflows and link nativetype ‚Üí nativecall

[19:02] <Geth> ¬¶ doc: 

[19:02] <Geth> ¬¶ doc: And the other way round. Refs #1512

[19:02] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/0e6e6d2faf

[19:02] <Geth> ¬¶ doc: 6268c1fafb | (JJ Merelo)++ | doc/Language/nativetypes.pod6

[19:02] <Geth> ¬¶ doc: Adds explanations on native types refs #1512

[19:02] <synopsebot> Link: https://doc.perl6.org/language/nativetypes

[19:02] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/6268c1fafb

[19:02] <Geth> ¬¶ doc: 7ffae42f08 | (JJ Merelo)++ | doc/Language/nativetypes.pod6

[19:02] <Geth> ¬¶ doc: Adds documentation for nativesize

[19:02] <Geth> ¬¶ doc: 

[19:02] <Geth> ¬¶ doc: Only in the way of explanation of the difference between native types

[19:02] <Geth> ¬¶ doc: and native types with native size; added warning that it's not

[19:02] <Geth> ¬¶ doc: spec. But this would close #2051.

[19:02] <Geth> ¬¶ doc: 

[19:02] <Geth> ¬¶ doc: I am going to close #1512 too. It does document all native types, and

[19:02] *** domidumont left
[19:02] <Geth> ¬¶ doc: clarifies the difference between them. This would be the last document

[19:02] <Geth> ¬¶ doc: in #114, which was already closed, so I can't close it, but this would

[19:02] <Geth> ¬¶ doc: basically be it. As the rest of the documents I have created, it's not

[19:02] <Geth> ¬¶ doc: perfect, but it's there. It can be incrementally improved from now on.

[19:02] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7ffae42f08

[19:03] *** st_elmo joined
[19:04] <Geth> ¬¶ doc/rasch-readme: 51a1a7a0f8 | (Rafael Schipiura)++ (committed using GitHub Web editor) | README.pt.md

[19:04] <Geth> ¬¶ doc/rasch-readme: Update README.pt.md

[19:04] <Geth> ¬¶ doc/rasch-readme: review: https://github.com/perl6/doc/commit/51a1a7a0f8

[19:07] <timotimo> rindolf: did you send the right result value for N = 16?

[19:07] <Geth> ¬¶ doc/rasch-readme: d245445f42 | (Rafael Schipiura)++ (committed using GitHub Web editor) | README.pt.md

[19:07] <Geth> ¬¶ doc/rasch-readme: Update README.pt.md

[19:07] <Geth> ¬¶ doc/rasch-readme: review: https://github.com/perl6/doc/commit/d245445f42

[19:07] <rindolf> timotimo: no, wait

[19:08] <rindolf> timotimo: 1221292

[19:09] <timotimo> OK, that's what i normally get

[19:09] <rindolf> timotimo: ah

[19:09] <timotimo> cool, i got it from about 11:30 to 1.8

[19:10] <rindolf> timotimo: 1.8s?

[19:10] *** darutoko left
[19:10] <rindolf> timotimo: 1.8second?

[19:10] <timotimo> yes

[19:11] <timotimo> er

[19:11] <timotimo> those numbers are not right

[19:11] <timotimo> 11.83s vs 1.8s

[19:11] <timotimo> not 11 minutes

[19:12] <Geth> ¬¶ doc/raschi-readme2: 21931518aa | (Rafael Schipiura)++ (committed using GitHub Web editor) | README.pt.md

[19:12] <Geth> ¬¶ doc/raschi-readme2: Create README.pt.md

[19:12] <Geth> ¬¶ doc/raschi-readme2: review: https://github.com/perl6/doc/commit/21931518aa

[19:13] <timotimo> 1.33s

[19:14] <Geth> ¬¶ doc: rafaelschipiura++ created pull request #2083: Create README.pt.md closes #1984

[19:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2083

[19:15] *** zakharyas left
[19:15] *** kurahaupo joined
[19:15] *** zakharyas joined
[19:15] <timotimo> 0.8s

[19:16] <Geth> ¬¶ doc: 21931518aa | (Rafael Schipiura)++ (committed using GitHub Web editor) | README.pt.md

[19:16] <Geth> ¬¶ doc: Create README.pt.md

[19:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/21931518aa

[19:16] <Geth> ¬¶ doc: e38a6194df | (Rafael Schipiura)++ (committed using GitHub Web editor) | README.pt.md

[19:16] <Geth> ¬¶ doc: Merge pull request #2083 from perl6/raschi-readme2 closes #1984

[19:16] <Geth> ¬¶ doc: 

[19:16] <Geth> ¬¶ doc: Create README.pt.md closes #1984

[19:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e38a6194df

[19:16] <jmerelo> And thanks to this last closed issue by raschipi we're down to 180 https://github.com/perl6/doc/issues

[19:17] *** Khisanth joined
[19:18] <El_Che> \o/

[19:18] <raschipi> üéâüéâüéâ

[19:19] <jmerelo> jmerelo: tomorrow is the last official day of the grant, let's see if we can bring it down a bit further.

[19:19] <jmerelo> Now I'm AFK. See you tomorrow!

[19:19] *** jmerelo left
[19:20] <timotimo> oh, dangit, i missed when it went from right result to wrong result

[19:29] *** wamba joined
[19:32] <timotimo> rindolf: is it wrong to assume all involved numbers fit into 64bit?

[19:32] <rindolf> timotimo: no

[19:32] <timotimo> turning the optimizer off makes things work again. cool. not.

[19:35] <timotimo> chained comparisons might be broken at the moment

[19:39] <timotimo> bisectable: sub foo($x, $y) { True };  sub bar($x, $y, $w) {     {         my int $x2 = 1;         my int $y2 = 2;         if foo($x, $y) == foo($x, $y2) == foo($x2, $y2) == foo($x2, $y) {             2;         } else {             1         }     } };  say bar(1, 2, 25);

[19:39] <bisectable6> timotimo, Bisecting by exit code (old=2015.12 new=9472fdf). Old exit code: 0

[19:39] <bisectable6> timotimo, bisect log: https://gist.github.com/b17966f8408b98e63113af9a1ba06f28

[19:39] <bisectable6> timotimo, (2018-01-08) https://github.com/rakudo/rakudo/commit/14c2cdb314ee5bbda34354ef535d4909dcea845a

[19:50] <timotimo> bisectable6: https://gist.github.com/timo/11b3dc224bb755fc6f32ef8c3e3a0fc2

[19:50] <bisectable6> timotimo, It looks like a URL, but mime type is ‚Äòtext/html; charset=utf-8‚Äô while I was expecting something with ‚Äòtext/plain‚Äô or ‚Äòperl‚Äô in it. I can only understand raw links, sorry.

[19:50] <timotimo> bisectable6: https://gist.githubusercontent.com/timo/11b3dc224bb755fc6f32ef8c3e3a0fc2/raw/e494778fdd10070418a5cbd6f23611df7ebf6860/rindolf_euler287.p6

[19:50] <bisectable6> timotimo, Successfully fetched the code from the provided URL.

[19:50] <bisectable6> timotimo, Bisecting by exit code (old=2015.12 new=9472fdf). Old exit code: 0

[19:51] <bisectable6> timotimo, bisect log: https://gist.github.com/49664966566ab8996f0719f89cece80c

[19:51] <bisectable6> timotimo, (2018-01-08) https://github.com/rakudo/rakudo/commit/14c2cdb314ee5bbda34354ef535d4909dcea845a

[19:54] *** melezhik joined
[19:56] *** zakharyas left
[20:05] <timotimo> rindolf: anyway, i got it down to 0.78s

[20:06] <rindolf> timotimo: the full problem?

[20:06] <timotimo> only for $N == 16

[20:08] *** psychoslave_ left
[20:10] *** g- left
[20:10] *** aindilis left
[20:12] <rindolf> timotimo: ah

[20:21] *** st_elmo left
[20:23] *** klapperl left
[20:28] *** melezhik left
[20:30] <timotimo> rindolf: what's the right result for $N = 24?

[20:33] <timotimo> is it 313135496?

[20:33] <rindolf> timotimo: 313135496

[20:33] <timotimo> that's what i get after 1:56m of run time

[20:33] <rindolf> timotimo: yes

[20:35] <timotimo> the first lines of main in the python version don't have an equivalent in the perl6 version?

[20:38] <timotimo> anyway, the python version takes 2:10m, which is just a little slower than the perl6 version ... but the perl6 version is ugly to read because i optimized it partially by putting nqp code in

[20:39] <El_Che> hallelluyah to the day nqp can be removed

[20:40] <lizmat> I would say: hallelujah to the day when our code becomes the most optimized nqp automagically  :-)

[20:41] <El_Che> $*AUTOMAGICALLY_MAKE_EVERYTHING_FAST = 1;

[20:42] <lizmat> m: $*AUTOMAGICALLY_MAKE_EVERYTHING_FAST = 1;

[20:42] <camelia> rakudo-moar affc218f8: OUTPUT: ¬´Dynamic variable $*AUTOMAGICALLY_MAKE_EVERYTHING_FAST not found‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:42] <lizmat> m: my $*AUTOMAGICALLY_MAKE_EVERYTHING_FAST = 1;   # voila

[20:42] <camelia> rakudo-moar affc218f8: ( no output )

[20:43] <mrdside> jmerelo: i found this - https://docs.perl6.org/type/Encoding

[20:45] <mrdside> but i see only 'nqp:: ... ' calls in *.pm6 on https://github.com/rakudo/rakudo

[20:45] <El_Che> .tell jmerelo < mrdside> jmerelo: i found this - https://docs.perl6.org/type/Encoding

[20:45] <yoleaux> El_Che: I'll pass your message to jmerelo.

[20:45] <Spot_> Cheers from Amsterdam :) ... lizmat & others!

[20:45] <mrdside> .tell El_Che thanks

[20:45] <yoleaux> mrdside: I'll pass your message to El_Che.

[20:45] <El_Che> mrdside: he's not here, use the .tell command to keep the message until he returns

[20:45] <yoleaux> 20:45Z <mrdside> El_Che: thanks

[20:45] <El_Che> lol

[20:46] <lizmat> Spot_ o/

[20:47] <Spot_> Good quality angus beef and Heineken makes the day :)

[20:47] <mrdside> good Banana, maybe $)

[20:48] <El_Che> Spot_: you're new to the Low Countries?

[20:48] <El_Che> I haven't met locals that like Heineken

[20:49] <mrdside> Where i can read about 'Encoding::Decoder'?

[20:49] <El_Che> Spot_: the opinion of Heineken in Belgium varies from water to horse piss :)

[20:49] <mrdside> what i should put in to "method decoder(Encoding:D: *%options --> Encoding::Decoder) { ... }"?

[20:51] <mrdside> what is ':$replacement' here - "method decoder(:$replacement, :$translate-nl, :$strict --> Encoding::Decoder)"?

[20:51] <mrdside> just byte array?

[20:54] <tbrowder_>  El_Che: what do locals think about Grolsch?

[20:54] <tbrowder_> El_Che: ^^

[20:55] <lizmat> tbrowder_ Grolsch > Heineken    but that's not saying much

[20:55] <tbrowder_> so what is the local‚Äôs favorite beer?

[20:56] <El_Che> tbrowder_: not well known in the Southern Netherlands

[20:56] <El_Che> tbrowder_: we have about 800 of them, so difficult to say

[20:57] <El_Che> tbrowder_: I like this one http://www.achouffe.be/en

[20:57] <El_Che> tbrowder_: it use to be a small obscure beer and got popular overnight

[20:57] <El_Che> tbrowder_: snobish enough to say I liked it before i was popular :)

[20:59] *** dct joined
[21:01] <tbrowder_> well, I lived near Brunssum while stationed with NATO and most of us US folks were introduced to Grolsch by the Brits. It was the cheapest beer around and, in my neighborhood, we could get home delivery in the refillable bottles‚Äînot such a bad deal, but maybe not to everyone‚Äôs taste.

[21:02] *** raschipi left
[21:02] *** mcmillhj left
[21:02] <El_Che> tbrowder_: when you're young everything that's cheap and not too bad is great :)

[21:04] <lizmat> tbrowder_: I live about 20km away from Brunssum  :-)

[21:05] <tbrowder_> roger! i could never find a belgian beer i liked (but i didn‚Äôt try to many), the ones i tried were too sweet.  but my favorite beer, which i haven‚Äôt had for many many years, is an english bitter.

[21:05] <tbrowder_> lizmat: what town?

[21:05] <lizmat> Echt

[21:06] <El_Che> tbrowder_: there are plenty of non-sweet beers

[21:06] <El_Che> tbrowder_: try Orval

[21:06] <lizmat> tbrowder_: just on the other side of Selfkant

[21:06] <El_Che> lizmat: too bad this conversation isn't in dutch

[21:06] <El_Che> Echt == Really in English

[21:06] <lizmat> El_Che: really ?   :-)

[21:06] <El_Che> :)

[21:07] <tbrowder_> i‚Äôm sure, but i kept going back to Grolsch‚Äîjust too set in my ways.

[21:07] <El_Che> sure, don't change a winning team

[21:07] <El_Che> I live in the village where Duvel is brewed

[21:08] <El_Che> when the wind is just right we get drunk for free!

[21:08] <El_Che> :)

[21:08] <tbrowder_> I‚Äôm going to have to look at the maps of the Dutch ‚Äúalpine‚Äù area...

[21:08] <El_Che> and I work on the city where Stella is brewed

[21:09] <El_Che> and on my train ride passed the Haacht brewery

[21:09] <El_Che> :)

[21:09] <tbrowder_> i have tried stella artois, very drinkable!

[21:09] <El_Che> we may have an alcohol problem :)

[21:09] <El_Che> as a region

[21:13] *** mrdside left
[21:14] <moritz> as a culture

[21:15] <tbrowder_> lizmat: could i have passed Echt on the train from Brussum to Eindhoven?

[21:16] <El_Che> we don't even have the excuse that it was safer than water like in the Middle Ages :)

[21:17] <lizmat> tbrowder_: yes... although you would probably be going ~ 100km / hour :-)

[21:18] *** dct left
[21:19] <tbrowder_> no stop there, huh?  i remember several stops enroute, but not what towns

[21:20] *** molaf left
[21:20] *** dct joined
[21:35] *** mcmillhj joined
[21:35] *** itaipu left
[21:40] *** klapperl joined
[21:41] *** mcmillhj left
[21:45] <Spot_> El_Che: Grolsch is far better

[21:50] *** HaraldJoerg left
[21:56] *** mcmillhj joined
[22:00] *** mcmillhj left
[22:01] *** damnlie left
[22:10] *** damnlie joined
[22:18] *** rindolf left
[22:32] *** ktown left
[22:34] *** mcmillhj joined
[22:38] *** mcmillhj left
[22:47] *** margeas joined
[22:48] *** markong left
[22:50] *** mcmillhj joined
[22:50] *** wamba left
[22:54] *** mcmillhj left
[23:02] *** mcmillhj joined
[23:06] *** mcmillhj left
[23:16] *** mcmillhj joined
[23:17] *** SCHAPiE left
[23:19] *** SCHAPiE joined
[23:20] *** mcmillhj left
[23:47] *** mcmillhj joined
[23:48] *** [particle]1 left
[23:48] *** [particle] joined
[23:52] *** mcmillhj left
