[00:00] <buggable> üé∫üé∫üé∫ It's time for the monthly Accidental /win Lottery üòçüòçüòç We have 0 ballots submitted by 0 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 42! Congratulations to Zoffix! You win a can of WD40!

[00:00] <timotimo> rigged!

[00:01] *** Kaiepi left
[00:02] *** Kaiepi joined
[00:52] *** kalkin--- left
[01:17] *** Sgeo_ left
[01:26] <Geth> ¬¶ doc: f544565048 | (Zoffix Znet)++ | doc/Language/routines.pod6

[01:26] <Geth> ¬¶ doc: Document `undefine`

[01:26] <Geth> ¬¶ doc: 

[01:26] <Geth> ¬¶ doc: For 6.c, plenty of spec in roast.

[01:26] <Geth> ¬¶ doc: 6.d deprecation spec: https://github.com/perl6/roast/commit/e325718ca2

[01:26] <synopsebot> Link: https://doc.perl6.org/language/routines

[01:26] <Geth> ¬¶ doc: Rakudo deprecation: https://github.com/rakudo/rakudo/commit/72bac67080

[01:26] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f544565048

[01:51] *** lizmat left
[01:53] *** Sgeo joined
[01:53] *** [Coke] joined
[01:54] <[Coke]> mst: spam hitting #perl6-dev & #moarvm too

[01:54] <[Coke]> and #perl6-toolchain

[01:55] *** Zoffix joined
[01:55] <Zoffix> So now they get through even with +r?

[01:56] <Zoffix> oh wc

[01:56] *** Zoffix left
[01:56] <[Coke]> looks like it's ramping up right now, actually.

[01:58] *** haxmeister left
[01:58] *** haxmeister joined
[02:07] *** aindilis left
[02:14] *** aindilis joined
[02:24] <Geth> ¬¶ doc: mendel++ created pull request #2234: mention hyped form of infix assignment ops in traps

[02:24] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2234

[02:25] <Geth> ¬¶ doc: mendel++ created pull request #2235: run the Docker images interactively & on a tty from the Makefile

[02:25] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2235

[02:46] <Geth> ¬¶ doc: cdba5a841f | Coke++ | doc/Language/glossary.pod6

[02:46] <Geth> ¬¶ doc: whitespace

[02:46] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/cdba5a841f

[02:46] <synopsebot> Link: https://doc.perl6.org/language/glossary

[02:49] *** vrurg left
[02:52] *** Kaiepi left
[02:54] *** Kaiepi joined
[03:30] *** vrurg joined
[03:32] *** vrurg left
[04:11] *** cgfbee left
[04:12] *** angelds joined
[04:18] *** angelds left
[04:20] *** kerframil left
[04:46] *** vrurg joined
[04:47] *** curan joined
[05:04] *** spycrab0 left
[05:10] *** vrurg left
[05:40] *** sauvin joined
[05:40] *** sauvin left
[05:42] *** angelds joined
[05:52] *** sauvin joined
[06:29] *** rindolf joined
[06:32] *** cjkinni left
[06:33] *** cjkinni joined
[06:38] *** domidumont joined
[06:39] *** jmerelo joined
[06:41] <jmerelo> squashable6: status

[06:41] <yoleaux> 31 Jul 2018 15:05Z <AlexDaniel> jmerelo: yes??

[06:41] <squashable6> jmerelo, ‚ö†üçï Next SQUASHathon in 2 days and ‚âà3 hours (2018-08-04 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[06:41] <jmerelo> .tell AlexDaniel we'll have to set up something today. The list of modules to work on is there, and it's long-ish...

[06:41] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[06:43] <AlexDaniel> .

[06:43] <yoleaux> 06:41Z <jmerelo> AlexDaniel: we'll have to set up something today. The list of modules to work on is there, and it's long-ish...

[06:44] *** domidumont left
[06:45] *** domidumont joined
[06:46] <AlexDaniel> jmerelo: so a repo with tickets populated, one for each failing module, yes?

[06:48] <Geth> ¬¶ doc: e865904d1d | (Norbert Buchmueller)++ | Makefile

[06:48] <Geth> ¬¶ doc: run the Docker images interactively & on a tty from the Makefile

[06:48] <Geth> ¬¶ doc: 

[06:48] <Geth> ¬¶ doc: This way eg. the test progress is shown when running `make

[06:48] <Geth> ¬¶ doc: docker-xtest`.

[06:48] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e865904d1d

[06:48] <Geth> ¬¶ doc: bb19c56d17 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | Makefile

[06:48] <Geth> ¬¶ doc: Merge pull request #2235 from mendel/run-docker-images-interactively-from-makefile

[06:48] <Geth> ¬¶ doc: 

[06:48] <Geth> ¬¶ doc: run the Docker images interactively & on a tty from the Makefile

[06:48] <Geth> ¬¶ doc: Makes sense. Thanks.

[06:48] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/bb19c56d17

[07:30] *** AlexDaniel left
[07:31] <jmerelo> AlexDaniel: can we use ecosystem?

[07:31] <jmerelo> .tell AlexDaniel: Can we use perl6/ecosystem, maybe with a label, and also watch the repos mentioned in those tickets?

[07:31] <yoleaux> jmerelo: What kind of a name is "AlexDaniel:"?!

[07:31] <jmerelo> .tell AlexDaniel Can we use perl6/ecosystem, maybe with a label, and also watch the repos mentioned in those tickets?

[07:31] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[07:37] <Geth> ¬¶ doc: 1cdd59e9ba | (JJ Merelo)++ | doc/Language/routines.pod6

[07:37] <Geth> ¬¶ doc: Slight rephrasing

[07:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/1cdd59e9ba

[07:37] <synopsebot> Link: https://doc.perl6.org/language/routines

[07:42] *** angelds left
[07:52] *** lizmat joined
[08:03] <lizmat> good *, #perl6!

[08:03] * lizmat clickbaits https://opensource.com/article/18/8/migrating-perl-5-perl-6

[08:03] <jmerelo> lizmat: hey!

[08:03] <lizmat> the first of a series of 12  :-)

[08:04] <jmerelo> lizmat: one per month?

[08:04] <lizmat> every 2 weeks is the plan

[08:07] *** vrurg joined
[08:07] *** dakkar joined
[08:07] <jmerelo> lizmat: great!

[08:07] <jmerelo> lizmat: migration, or #perl6 in general?

[08:08] <lizmat> it's basically a blog post version of all of the research I did for my perl 5 -> perl 6 workshop that I gave at TPCiSLC and will be giving at TPCiG

[08:10] <jmerelo> "the sum of Perl 5 and Perl 6 becomes greater than its parts" So true, lizmat

[08:16] *** vrurg left
[08:19] *** domidumont left
[08:21] *** telex left
[08:26] *** telex joined
[08:28] *** scimon joined
[08:31] *** epony left
[08:33] *** telex left
[08:42] *** sena_kun joined
[08:50] <El_Che> notable6: weekly https://opensource.com/article/18/8/migrating-perl-5-perl-6

[08:50] <notable6> El_Che, Noted!

[08:50] <El_Che> just in case :)

[09:00] <lizmat> :-)

[09:19] *** vrurg joined
[09:20] *** vrurg left
[09:24] *** ilmari[m] joined
[09:25] *** ilmari[m] is now known as ilmari_

[09:26] *** [particle] joined
[09:27] *** Sgeo_ joined
[09:28] *** kerframil joined
[09:28] *** scott joined
[09:29] *** Sgeo left
[09:32] *** telex joined
[09:35] *** dotdotdot joined
[09:46] *** Kaiepi left
[09:51] *** domidumont joined
[09:53] *** HaraldJoerg joined
[10:00] *** benjikun left
[10:01] *** AlexDaniel joined
[10:01] <AlexDaniel> .

[10:01] <yoleaux> 07:31Z <jmerelo> AlexDaniel: Can we use perl6/ecosystem, maybe with a label, and also watch the repos mentioned in those tickets?

[10:01] <jmerelo> Hi, Alex

[10:01] <AlexDaniel> o/

[10:01] <AlexDaniel> I'd prefer a separate repo

[10:02] <tbrowder_> lizmat: excellent article! great graphics, too!

[10:02] <lizmat> tbrowder_: thank you  :-)

[10:02] <jmerelo> AlexDaniel: just the repo, or also watching issues on some modules we'll be working on.

[10:03] <AlexDaniel> jmerelo: we can't really watch other repos

[10:03] <AlexDaniel> jmerelo: need admin access to set up webhooks

[10:04] <tbrowder_> tyil: watching?

[10:05] <tyil> tbrowder_: I am here, though I was not watching this channel in particular rn

[10:05] <tyil> I have time tho

[10:06] <tbrowder_> tyil i am now on your side, defn will have term attribute and definition as @contents of para blocks

[10:07] <tyil> \o/

[10:07] <tyil> what happened? :p

[10:07] <tbrowder_> rereading S26 shows the subtle but precise nature of Damian‚Äôs writing

[10:07] <tbrowder_> that convinced me

[10:10] <tyil> ah

[10:10] <tyil> it works for me :D

[10:11] <tyil> (mostly because now I wont have to update a module I'm working on if it uses .contents like the rest)

[10:11] <tbrowder_> thinking about how =defn would be best rendered in text, html, and other formats also helped

[10:11] <jmerelo> AlexDaniel: I didn't know that. I thought it was polling or somethign like that.

[10:11] <jmerelo> AlexDaniel: anyway, I don't know if I have permission to set up a new repo in perl6?

[10:11] <AlexDaniel> jmerelo: you should

[10:11] <tbrowder_> is your module publicly available now?

[10:11] <jmerelo> AlexDaniel: should I try? Like bitrot-august-18?

[10:12] <jmerelo> AlexDaniel: or just bitrot and we use it for other bitrot squashathons?

[10:12] <AlexDaniel> jmerelo: just ecosystem-bitrot will do

[10:12] <AlexDaniel> or unbitrot?

[10:13] <jmerelo> https://github.com/perl6/ecosystem-unbitrot AlexDaniel

[10:13] <tyil> tbrowder_: the sources are, but its not on cpan yet, as its still under construction

[10:14] <tbrowder_> link?

[10:14] <jmerelo> AlexDaniel: all members of the perl6 team have access to it. Any other thing I should set up? Maybe a README with links to places?

[10:14] <AlexDaniel> jmerelo: so, we need a squashathon guide

[10:15] <scimon> Can you have a different trait to `is` ? 

[10:15] <jmerelo> AlexDaniel: OK, I'll do that

[10:15] <AlexDaniel> jmerelo: something similar to this: https://github.com/rakudo/rakudo/wiki/Rakudo-SQUASHathon-Guide

[10:15] <AlexDaniel> jmerelo: but specific to ecosystem stuff

[10:15] <tyil> tbrowder_: pm

[10:15] <jmerelo> AlexDaniel: first bitrot squashathon, right?

[10:15] <AlexDaniel> jmerelo: yeah

[10:16] <jmerelo> AlexDaniel: OK, I'll have a go at it a bit later. Meanwhile, feel free... 

[10:17] <AlexDaniel> jmerelo: I think I'll write a script to populate issues‚Ä¶

[10:17] <AlexDaniel> https://developer.github.com/v3/issues/#create-an-issue

[10:17] <jmerelo> That would be great

[10:18] <AlexDaniel> I'm actually out of town, so not sure how much internet I'd have

[10:18] <jmerelo> AlexDaniel: there's a module for that... Give me one second.

[10:18] <tbrowder_> tyil: good, thanks

[10:18] <AlexDaniel> jmerelo: I've never seen a proper module for github api

[10:18] <AlexDaniel> jmerelo: just stuff that creates gists

[10:19] <jmerelo> AlexDaniel: there's this one https://github.com/fayland/perl6-WebService-GitHub

[10:19] <AlexDaniel> for a throwaway thing like this I can just do a regular POST and that'd be it

[10:19] <jmerelo> and then my own version: https://github.com/JJ/perl6-WebService-GitHub/ which I used during the grant.

[10:20] <AlexDaniel> https://github.com/fayland/perl6-WebService-GitHub/blob/master/lib/WebService/GitHub/Issues.pm#L6

[10:20] <jmerelo> AlexDaniel: It would be a good addition to the module. Anyway, if you do the throwaway stuff I might incorporate it into my module

[10:20] <scimon> For those of us joining half way into the conversation is this a squahathon to handle broken modules post a compiler update? 

[10:20] <jmerelo> scimon: right

[10:20] <AlexDaniel> wrong?

[10:20] <AlexDaniel> :)

[10:21] <AlexDaniel> scimon: during this squashathon we try to fix modules that were red for a long time

[10:21] <jmerelo> AlexDaniel: I mean, it's not a big deal to add that to my version of the WebServices module. I'm thinking about publishing it, BTW... Since fayland is not too keen on accepting my pull request.

[10:22] <AlexDaniel> scimon: we try really hard not to break modules with rakudo releases

[10:22] <AlexDaniel> there are exceptions, however‚Ä¶ like if a module depends on a bug or something like that

[10:23] <AlexDaniel> but mostly I submit PRs before the release myself :)

[10:24] <AlexDaniel> scimon: https://toast.perl6.party/

[10:25] <AlexDaniel> scimon: most of the red modules you can test with some 2017.* release and they'd be red, it's not release related‚Ä¶ just some oooold modules :)

[10:26] <AlexDaniel> scimon: hm, do you have any idea on how we can prioritize them? 700+ modules to fix is maybe too much‚Ä¶ 

[10:32] <jmerelo> AlexDaniel: we have the "river" score...

[10:32] <sena_kun> those who have native dependency can be omitted(or need more complex check than toast do), I believe, there are a lot in this category.

[10:33] <jmerelo> sena_kun: again, the river score takes care of that.

[10:33] <jmerelo> You fix something higher up the river, then those which are downriver from it are automatically fixed.

[10:33] <AlexDaniel> jmerelo: I think they're talking about ‚Äòmissing blabla.so‚Äô kind of failures

[10:33] <sena_kun> jmerelo, oh, then never mind.

[10:33] <sena_kun> I do.

[10:33] <jmerelo> AlexDaniel: Ah, OK. 

[10:34] <sena_kun> e.g. all ZeroMQ modules are failing.

[10:34] <AlexDaniel> sena_kun: I don't know‚Ä¶ it would be nice to know the list of libs that need to be installed

[10:34] <jmerelo> AlexDaniel, sena_kun there was a proposal by samcv, if I remember correctly, to include non-Perl6 dependencies into meta6.json

[10:34] <sena_kun> I have a feeling we were here before...

[10:35] <AlexDaniel> sena_kun: so this one is `apt install gnuradio-dev` I think?

[10:35] <sena_kun> AlexDaniel, I can probably take a look on such a list if time allows after $daily-comma-job.

[10:36] <sena_kun> AlexDaniel, sorry, what do you mean by gnuradio-dev?

[10:36] <AlexDaniel> sena_kun: well, that package has libgnuradio-zeromq.so file, but I'm not sure if it's the right one

[10:38] <sena_kun> AlexDaniel, ah. for zmq support you need to look for `zeromq` package I believe. gnuradio-zmq one is probably some in-between layer.

[10:39] <AlexDaniel> hm interesting

[10:39] <AlexDaniel> there's zeromq3 package but I don't see it from my machine

[10:39] <AlexDaniel> anyway, afk

[10:39] <sena_kun> I see ubuntu doesn't have such a package, huh. they offer by hands build instructions.

[10:39] <sena_kun> e.g. https://www.digitalocean.com/community/questions/install-zeromq-on-ubunto-14-04-4-x64

[10:40] <sena_kun> or https://gist.github.com/katopz/8b766a5cb0ca96c816658e9407e83d00

[10:41] <sena_kun> anyway, zmq is not the main issue, we want a list of dependencies, so I'll look what I can do. Now back to making new fancy features~

[10:41] *** HaraldJoerg left
[10:46] *** chsanch joined
[10:54] <xq> https://packages.ubuntu.com/search?keywords=libzmq-dev

[10:57] <scimon> Got it (Sorry $WORK got in the way). 

[10:57] <xq> same for gnuradio thing https://packages.ubuntu.com/search?keywords=gnuradio-zeromq

[10:58] <scimon> When is it planned for?

[10:59] <scimon> (He says before leaving to get lunch)

[11:00] *** robertle joined
[11:01] *** chsanch left
[11:04] *** HaraldJoerg joined
[11:12] *** Xliff joined
[11:12] <Xliff> \o

[11:12] <Xliff> Are there any web pages that discuss how to deal with grammers that have recursive rules?

[11:13] <tyil> Xliff: theres a book about it

[11:13] <tyil> Xliff: https://www.amazon.com/Parsing-Perl-Regexes-Grammars-Recursive/dp/1484232275

[11:13] <Xliff> Yes. I know. I have it.

[11:14] <Xliff> It does not mention anything about recursive rules. Though I have to admit, I haven't read it all the way through.

[11:14] <moritz> it talks about recusion

[11:14] <Xliff> moritz++

[11:14] <Xliff> I was about to .tell you a question. Can you tell me the chapter?

[11:15] <Xliff> P 112?

[11:15] <moritz> I'm searching for my ebook copy right now :-)

[11:16] <moritz> page 113, Left Recursion and Other Traps

[11:17] <Xliff> Thanks. That's exactly what I am looking for.

[11:17] *** Zoffix joined
[11:18] <Zoffix> .tell MasterDuke don't know if you get notifications, but would you know the cause of https://github.com/rakudo/rakudo/issues/2157 ? Also, would you add comments documenting the magic numbers? Why would nqp::iseq_i(0x1ffffffff,8589934591) be false on 32bit for example, or what's the significance of 16 characters (~53bit number)?

[11:18] <yoleaux> Zoffix: I'll pass your message to MasterDuke.

[11:21] <Zoffix> .tell MasterDuke nm the `iseq_i`, I see on HEAD it's not an `add_i`, but what's special about 53-bit numbers? 

[11:21] <yoleaux> Zoffix: I'll pass your message to MasterDuke.

[11:21] <Zoffix> *now

[11:22] *** Zoffix left
[11:43] <jmerelo> Problems again with "trying to assign to an immutable value" when using roles... https://stackoverflow.com/questions/51632394/assigning-a-value-to-the-attribute-of-a-mixed-in-role

[11:44] *** Kaiepi joined
[11:47] <lizmat> jmerelo: wouldn't it make more sense to just create an Enum and mix the $.index into it ?

[11:48] <jmerelo> lizmat: I want to use Enumeration by itself, to create the doc.

[11:48] <lizmat> Ah, ok, I was immediately glued to the code  :-)

[11:48] <jmerelo> lizmat: Enumerations have $!index, and theoretically it's up to the MOP to change index. But it should be possible to create your own Enumerations

[11:49] <lizmat> but is the index a public attribute?

[11:49] <jmerelo> lizmat: no, it's private.

[11:49] <lizmat> because if it is not, you can't set it with bless

[11:50] <jmerelo> lizmat: you can't set it from BUILD or TWEAK since it yields an immutable error

[11:50] <lizmat> and if it is an native int, there's currently an issue about not being able to set native ints in roles

[11:50] <lizmat> from the class consuming the role

[11:50] <jmerelo> lizmat: Ah. That's it, then.

[11:51] <lizmat> you might want to verify, I might be wrong  :-)

[11:52] <jmerelo> lizmat: probably not. OK, without it the example does not make a lot of sense anyway... Can it maybe be changed to Int while that is fixed? Or would that be a big performance issue?

[11:52] <lizmat> I'm not sure actually

[11:52] <lizmat> wrt performance

[11:53] <jmerelo> lizmat: OK, thanks anyway

[11:53] <jmerelo> lizmat: I'm AFK now. See you!

[11:53] <lizmat> sorry I couldn't be of help more, am deep somewhere else in the code :-)

[11:53] *** jmerelo left
[12:02] *** Zoffix joined
[12:02] *** araujo left
[12:02] <Zoffix> .tell MasterDuke nm, the bisect is bogus it seems as the commit is in Rakudo, but the problem exists in nqp as well

[12:02] <yoleaux> Zoffix: I'll pass your message to MasterDuke.

[12:02] *** Zoffix left
[12:03] *** pmurias joined
[12:15] *** curan left
[12:16] *** curan joined
[12:21] *** AlexDaniel left
[12:22] *** AlexDaniel joined
[12:23] *** AlexDaniel left
[12:24] *** AlexDaniel joined
[12:26] <AlexDaniel> oh my, github keeps changing the interface all the freaking time :)

[12:26] <sena_kun> and the new one is awful. :/

[12:28] <AlexDaniel> yeah, I'm trying out the beta

[12:28] <AlexDaniel> don't know if it's better or worse, it's just completely different, I feel disoriented

[12:29] <AlexDaniel> ‚ÄúDiscover repositories‚Äù what, why

[12:30] *** Extirpator joined
[12:30] <sena_kun> it feels like they don't have a designer that actually studied how UI should look and work. too much elements, element positioning doesn't align with how human eye browse pages, too wide, ugh.

[12:31] <sena_kun> *too many

[12:32] <Extirpator> Hi, friends! I've confused with var interpolation at regexes with P5 modifier. I need some help. This code fails: perl6 -e 'my $r="[23]+"; my Regex $rx=rx:P5/$r/; if "232323" ~~ $rx {"matched".say};', but this works: perl6 -e 'my Regex $rx=rx:P5/[23]+/; if "232323" ~~ $rx {"matched".say};'

[12:35] <AlexDaniel> hmm, with p6 regexes that'd be this:

[12:35] <Extirpator> perl6 -e 'my $r="[23]+"; my Regex $rx=rx/<$r>/; if "232323" ~~ $rx {"matched".say};'

[12:36] <AlexDaniel> m: my $r="[23]+"; my Regex $rx=rx/<{$r}>/; if "232323" ~~ $rx {"matched".say};

[12:36] <camelia> rakudo-moar 64ab71798: OUTPUT: ¬´matched‚ê§¬ª

[12:36] <Extirpator> yes it works!

[12:36] <AlexDaniel> or that, yeah

[12:36] <Extirpator> but i need p5 :)

[12:36] <MasterDuke> m: my $r="[23]+"; my Regex $rx=rx/<$r>/; if "232323" ~~ $rx {"matched".say};

[12:36] <yoleaux> 11:18Z <Zoffix> MasterDuke: don't know if you get notifications, but would you know the cause of https://github.com/rakudo/rakudo/issues/2157 ? Also, would you add comments documenting the magic numbers? Why would nqp::iseq_i(0x1ffffffff,8589934591) be false on 32bit for example, or what's the significance of 16 characters (~53bit number)?

[12:36] <camelia> rakudo-moar 64ab71798: OUTPUT: ¬´matched‚ê§¬ª

[12:36] <yoleaux> 11:21Z <Zoffix> MasterDuke: nm the `iseq_i`, I see on HEAD it's not an `add_i`, but what's special about 53-bit numbers?

[12:36] <yoleaux> 12:02Z <Zoffix> MasterDuke: nm, the bisect is bogus it seems as the commit is in Rakudo, but the problem exists in nqp as well

[12:36] <AlexDaniel> MasterDuke: now with :P5 :)

[12:37] <MasterDuke> yeah, that doesn't seem to work

[12:37] *** Zoffix joined
[12:37] <Zoffix> MasterDuke: never mind that stuff. I found the problem

[12:37] <MasterDuke> Extirpator: but fwiw, you'd need to put <> around the variable to interpolate it as a regex, not just text

[12:37] <Zoffix> (along with specialness of 53-bit numbers)

[12:37] <MasterDuke> Zoffix: i just commented on the issue

[12:38] <Zoffix> MasterDuke: yup, that is it. It's using doubles for ints

[12:38] <Zoffix> And numbers up to 2**52 can be represented exactly in double

[12:38] <Zoffix> m: dd 9930972392403501e0.Int

[12:38] <camelia> rakudo-moar 64ab71798: OUTPUT: ¬´9930972392403500‚ê§¬ª

[12:38] <AlexDaniel> oh my

[12:39] <Zoffix> m: dd 9930972392403503e0.Int # <--- that's ...504

[12:39] <camelia> rakudo-moar 64ab71798: OUTPUT: ¬´9930972392403504‚ê§¬ª

[12:39] <Zoffix> m: dd 9930972392403503 + 1 # <--- so it follows that this would be ...505

[12:39] <camelia> rakudo-moar 64ab71798: OUTPUT: ¬´9930972392403505‚ê§¬ª

[12:39] <Zoffix> :)

[12:40] <Zoffix> Well, I'm just gonna dial it down in Rakudo to be within representable limit to fix the bug and I guess N#363 covers the NQP side of the problem

[12:40] <synopsebot> N#363 [open]: https://github.com/perl6/nqp/issues/363 NQP converts large integers to floats when it shouldn't/doesn't need to

[12:44] <Extirpator> Masterduke: here's P5 code - perl -e 'my $r="(?:[23]+)"; if ("232323" =~ /$r/) {print "matched\n"};', i need to exec P5-like regex in P6: perl6 -e 'my $r="(?:[23]+)"; my Regex $rx=rx:P5/$r/; if "232323" ~~ $rx {"matched".say};', <$r>, <{$r}> are not work too

[12:45] <timotimo> maybe you'll have to go through EVAL for now, could be a bug or NYI

[12:46] <MasterDuke> Extirpator: there does seem to be a bug, but you'd definitely have to use <$r>, just $r by itself doesn't work like that

[12:46] <timotimo> MasterDuke: i'm pretty sure it does work like that in perl5, though?

[12:46] <MasterDuke> https://docs.perl6.org/language/regexes#index-entry-regex__Regex_Interpolation-Regex_Interpolation

[12:47] <Zoffix> Yeah, in P5 the default is to treat text as regex

[12:47] <MasterDuke> hm, good point. don't know if :P5 should work that way or not

[12:47] <timotimo> it should, i think

[12:47] <Zoffix> it shouldn't, I think

[12:47] <timotimo> if you want to put text in a variable and match it directly, put \Q and \E

[12:47] <Zoffix> What happens with @foo?

[12:47] <timotimo> whatever perl5 does with it

[12:47] *** sftp_ joined
[12:48] <Zoffix> OK

[12:48] <Zoffix> What happens with $r := [<a b c>] ?

[12:48] <Zoffix> What happens with $r := [<a b c>] =>   rx:P5/$r/

[12:48] *** domidumont left
[12:48] *** aindilis left
[12:48] *** andrzejku left
[12:48] *** ExtraCrispy left
[12:48] *** sftp left
[12:48] *** SyrupThinker left
[12:48] *** sergot left
[12:48] *** Praise left
[12:48] *** cognominal left
[12:48] *** cxreg left
[12:49] *** renormalist left
[12:49] *** tinita left
[12:49] *** freeze left
[12:49] <timotimo> :P5 is there to support perl5 style regexes

[12:49] *** sftp_ is now known as sftp

[12:49] <timotimo> if you use something perl5 just can't do, throw an exception or something

[12:50] <Zoffix> timotimo: right, but you're crossing over Perl 6 objects into the space of Perl 5 regexes. There aren't Str or Array objects in Perl 5. `$r` cannot contain an Array in P5, but it can in P6; `$r` can contain a non-P5 regex in Perl 6

[12:50] <Zoffix> So you either have to define semantics for all of that stuff, or just draw the line at "variables work like in P6" :)

[12:50] <timotimo> what if you put an arrayref into $r in perl5?

[12:51] *** ccntrq left
[12:51] *** yoleaux left
[12:51] <Zoffix> timotimo: it gets stringified... literally:   /(?^u:ARRAY(0x14b5f30))/

[12:51] *** reportable6 left
[12:51] *** squashable6 left
[12:51] *** undersightable6 left
[12:51] *** statisfiable6 left
[12:51] *** greppable6 left
[12:51] *** benchable6 left
[12:51] *** nativecallable6 left
[12:52] <timotimo> i bet someone on darkpan is relying on that

[12:52] <Zoffix> heh

[12:52] <timotimo> what is ?^u: do?

[12:53] *** tinita joined
[12:53] <Zoffix> locally enables /u modifier

[12:54] <timotimo> ah, just unicode

[12:54] <timotimo> so, don't you think someone will use /$r/ to check if $r is the same arrayref as something else by going through regex? :)

[12:54] <Zoffix> "These modifiers, all new in 5.14, affect which character-set rules [...] /u" sets the character set to Unicode."

[12:54] <timotimo> like, $r ~= /$r/ would give True

[12:55] <Zoffix> timotimo: dunno, there aren't no arrayrefs in p6

[12:55] <MasterDuke> +1 for "variables work like in P6"

[12:55] *** Altreus joined
[12:56] *** Altreus is now known as Guest57458

[13:00] *** domidumont joined
[13:00] <Extirpator> timotimo: "put \Q and \E", you mean: my Regex $rx=rx:P5/\Q$r\E?

[13:00] <Extirpator> ?=/

[13:00] <Zoffix> Extirpator: no, we were just talking about how to make Perl 5 regex behave with variables like Perl 6 does

[13:01] <Extirpator> :)

[13:01] <Zoffix> Extirpator: just use Perl 6 regex, if you can.

[13:01] *** SyrupThinker joined
[13:01] <Zoffix> Extirpator: there was a recent intro talk about them, if you have any interest: https://rakudo.party/post/Intro-Into-Perl6-Regexes-and-Grammars-Perl-6-Talk--Slides-Recording

[13:01] *** vrurg joined
[13:01] <Extirpator> i'm porting a P5 module, everything is done but regexes

[13:02] <Zoffix> I see

[13:02] <Extirpator> i want to leave them with P5 style

[13:04] *** vrurg left
[13:04] *** vrurg joined
[13:05] <Extirpator> MasterDuke, timotimo, Zoffix: thank you guys, P6 rules!

[13:06] <Zoffix> \o/

[13:06] <Zoffix> .oO( but sometimes P6 tokens! )

[13:07] *** vrurg left
[13:07] *** vrurg joined
[13:09] *** vrurg left
[13:09] <jkramer> Does anyone know why this is so incredibly slow (and how to fix it)? https://bpaste.net/show/0ee15ed17b8e

[13:09] <jkramer> Input is this word list: https://raw.githubusercontent.com/dolph/dictionary/master/enable1.txt

[13:10] *** Zoffix left
[13:10] *** vrurg joined
[13:12] <jkramer> Is it just the size of the lists to grep?

[13:12] <lizmat> jkramer: have you tried running it with --profile ?

[13:13] *** KotH joined
[13:13] <lizmat> also: why isn't &works an ordinary sub ?

[13:14] <lizmat> in any case, --profile should tell you a lot

[13:15] <jkramer> lizmat: I thought making @chars a temp might be cheaper than calling a sub with @chars as "is copy"

[13:16] <lizmat> I'm still in the middle of something else, will look at it after that

[13:19] <Extirpator> lizmat: I've just used your P5quotemeta module. It fails sometimes at test stage during zef install. Failure is not repeat constantly. I have to create issue, but maybe you know about it... Here's capture from docker: https://gitlab.com/pheix/router-right-perl6/-/jobs/85819394

[13:19] <lizmat> Extirpator: do you have the latest rakudo ?

[13:19] <lizmat> it was one of the issues that jnthn looked at / fixed before he went on holiday, afaik

[13:20] <tyil> according to the build output, rakudo-star:Latest docker image

[13:21] <tyil> so that would not be latest rakudo, but 2018.04

[13:21] <lizmat> hmmm... strange

[13:21] <Extirpator> 2018.04.1

[13:21] <lizmat> fwiw, I can't repro it on HEAD  

[13:22] <tyil> ah yes, that one had a point release

[13:22] <lizmat> oddly enough, the breakage dates from post 2017.06, afaik

[13:22] <lizmat> and the breakage was in MoarVM

[13:22] <lizmat> Extirpator: could it be that you're somehow using a more recent MoarVM ?

[13:23] <tyil> I'll pull it on docker and see what perl6 --version replies in that container

[13:23] *** Xliff left
[13:23] <tyil> I'm on the train though, so responses may be delayed

[13:24] <lizmat> tyil++

[13:24] *** mcmillhj joined
[13:24] <tyil> root@7568b54b732d:/# perl6 --version

[13:24] <tyil> This is Rakudo Star version 2018.04.1 built on MoarVM version 2018.04.1

[13:25] <Extirpator> lizmat: yes, i've made a few installations before 

[13:25] * tyil updates his default test script to run perl6 --version first

[13:25] <tyil> that output is always useful when you're trying to get help :p

[13:25] <lizmat> Extirpator: well, I'm not sure how I can help you atm, as I can't reproduce it on HEAD

[13:26] <lizmat> Extirpator: I think you're fine if you don't use the quotemeta() without parameters, which relies on the outer $_

[13:26] <tyil> rakudo star is still planned to get a new release soonish, right?

[13:26] <lizmat> tyil: there's a 2018.06.RC0 

[13:26] <tyil> oh, I'll test that soon-ish then

[13:27] <lizmat> not valid in sprintf

[13:27] <lizmat> argh, pasto

[13:27] <lizmat> http://pl6anet.org/drop/

[13:28] <tyil> I don't see any such release on the rakudo.org site :(

[13:29] <timotimo> Zoffix, i wonder if it would be prudent to ask before taking "another happy perl6 user" screenshots and posting them on social media; it's one thing to express your joy in an irc channel, it's another - to me at least - to post it to social media where it can have infinite range, plus the weekly usually links to such tweets as well

[13:30] <timotimo> jkramer: i wonder if it's worth to convert @chars to a Set once, since the grep would coerce it over and over to use (<) on it, i think?

[13:30] <lizmat> tyil: it's a Release Candidate, no official release yet

[13:30] <mst> lizmat: I've +r'ed -dev and moarvm

[13:30] <mst> looks like they've pre-seeded the bots with channels this time so our network level mitigations aren't as effective

[13:30] <lizmat> mst++

[13:31] <AlexDaniel> heh what a waste of time

[13:31] <mst> also your bots are going to need to log in to nickserv before joining channels

[13:31] <mst> sorry about that

[13:31] <AlexDaniel> mst: they can't, unfortunately. There's a limit for 5 nickserv idents

[13:32] *** Zoffix joined
[13:32] <Zoffix> huggable: test

[13:32] <huggable> Zoffix, Test failed

[13:32] <mst> oh, hang on, I can I-line them I think

[13:32] *** psychoslave joined
[13:32] <Zoffix> timotimo: OK

[13:33] <lizmat> timotimo: perhaps blot out the nick ?

[13:34] *** Zoffix left
[13:35] *** nativecallable6 joined
[13:35] *** ChanServ sets mode: +v nativecallable6

[13:39] <timotimo> i don't think anybody has complained yet about the "happy perl6 user" tweets, but i don't know if they were aware of them in the first place

[13:41] <lizmat> but blotting out the name wouldn't detract from the PR value, would it?

[13:41] <lizmat> Zoffix: don't you agree ?

[13:42] <timotimo> i'd think it's enough

[13:42] <timotimo> to blot it out, i mean

[13:43] *** ChanServ sets mode: +o mst

[13:43] *** mst sets mode: -r
 
[13:44] *** mst sets mode: +b $~a

[13:44] <jkramer> timotimo: I tried that initially but it didn't change anything. Actually the (<) is not even used anymore (notice line is commented out) because it didn't seem to help speed it up.

[13:44] <timotimo> oh, right

[13:44] <timotimo> i'll have a look with the profiler

[13:45] *** aindilis joined
[13:46] *** greppable6 joined
[13:46] *** reportable6 joined
[13:46] *** statisfiable6 joined
[13:46] <timotimo> how long does it run?

[13:47] <jkramer> https://pste.eu/p/GQRo.html

[13:47] *** notable6 joined
[13:47] <jkramer> This is just for the first 10 words (however using the whole dictionary). Takes ~25 seconds

[13:47] <timotimo> oh, good

[13:47] <timotimo> yikes

[13:47] *** squashable6 joined
[13:47] <timotimo> oh, perlseen takes a whole lot of time, sounds like .perl on something is taking a long time

[13:47] <jkramer> Well, on my server, but the HW is not the worst :)

[13:47] *** benchable6 joined
[13:48] <timotimo> oof

[13:48] <timotimo> .gist on capture, eh?

[13:48] <timotimo> throw out the "is cached"

[13:48] <tyil> lizmat: I understand, but where can I download it to test it out?

[13:49] *** undersightable6 joined
[13:49] <jkramer> timotimo: I suspected that too but without cached it's still really slow and when operating on the full dictionary it might actually be useful later

[13:49] <jkramer> W/o cached it's still 25-26 seconds

[13:50] <timotimo> OK

[13:50] <lizmat> jkramer: perhaps http://modules.perl6.org/dist/Sub::Memoized:cpan:ELIZABETH could be of help?

[13:50] <lizmat> don't look at the tag line, I just realized that suffers from a copy-pasto

[13:51] <timotimo> i forgot to give the filename on the commandline %)

[13:51] <AlexDaniel> dpk: yoleaux seems to be down?

[13:51] <MasterDuke> there's a lot of printing. with a reduced size input, directing output to /dev/null was quite a bit faster

[13:52] <MasterDuke> re jkramer's script

[13:52] <AlexDaniel> dpk: it should be identified to join, but I thought that's not an issue?

[13:54] <jkramer> timotimo: Actually removing 'is cached' DOES make it faster, I had changed the code in the meantime and added it to another sub :)

[13:54] <jkramer> It's now ~6 seconds for the first 10 words

[13:54] <timotimo> instead of 25?

[13:55] <jkramer> Yes :)

[13:55] <timotimo> TBH, cutting down enable1.txt with head -n 10 it finishes in 0.35s

[13:55] <timotimo> oh, surely you didn't do it like that?

[13:55] <jkramer> Well I made the &works block a sub and added 'is cached', which was not a good idea obviously :)

[13:56] *** yoleaux joined
[13:56] *** ChanServ sets mode: +v yoleaux

[13:56] <dpk> sorted

[13:56] <dpk> it just crashed and didn't come back up for some reason

[13:56] <jkramer> timotimo: No, I use the whole dictionary, just in the last line I 

[13:56] <jkramer> What

[13:56] <jkramer> ... I changed the last line to: .&longest-chain.Str.say for @words[^10];

[13:57] *** AlexDaniel` left
[13:58] <timotimo> What?

[13:58] <jkramer> I hit enter too early :)

[13:58] <timotimo> yeah, 5 seconds on my end, too

[13:58] <AlexDaniel> I‚Ä¶ didn't mean that‚Ä¶ oops :)

[13:58] <timotimo> though i kept "is cached" on longest-chain

[13:58] <buggable> New CPAN upload: Sub-Memoized-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/Sub::Memoized:cpan:ELIZABETH

[13:58] * AlexDaniel just ghosted his matrix self

[13:58] <jkramer> Yes, I just added that one back too, now it's ~5.5 instead of ~6.

[13:59] <timotimo> how did we have 25s before? :)

[13:59] <jkramer> timotimo: I added 'is cached' to the &works thing :)

[14:00] <jkramer> (And also outsourced it into a sub)

[14:03] <MasterDuke> jkramer: can you gist what you have now?

[14:03] <jkramer> Yup, one second

[14:04] <jkramer> https://bpaste.net/show/f3d52cd5fe18

[14:05] <timotimo> something i see is that the machinery for temp is taking 12% of total time

[14:05] <jkramer> timotimo: Check out the new paste, I made it its own sub without temp.

[14:06] <jkramer> However I think the 'is copy' has probably the same effect

[14:06] <timotimo> potentially, yes

[14:06] <timotimo> could be significantly faster to be working with native int index arrays, i wonder.

[14:06] <jkramer> I wonder if there's a smarter/faster way to compare the strings

[14:07] <timotimo> i haven't even tried to understand how the algorithm works :)

[14:07] *** pmurias left
[14:07] <timotimo> just trying to figure out what parts of rakudo are to blame for the slowness

[14:09] <jkramer> It's supposed to check whether one string is the same as the other except exactly one letter was removed

[14:09] <jkramer> This is the thing I'm trying to do btw: https://www.reddit.com/r/dailyprogrammer_ideas/comments/908jk6/longest_letterdropping_word_ladder/

[14:10] <samcv> currently due to spam we have set this channel to only allow registered users in. What are peoples thoughts undoing that so newbie users can join as well?

[14:10] <samcv> pros: (potentially some spam). cons: new users will be able to join (or old users who have not registered with freenode)

[14:11] *** pmurias joined
[14:11] <jkramer> Shouldn't it be the other way around? :)

[14:12] <[Coke]> it's not a potentiality. it's real. 

[14:12] <[Coke]> the spam was getting *ridiculous* yesterday.

[14:13] *** Zoffix joined
[14:13] <samcv> [Coke]: in #perl6 ?

[14:13] <Juerd> samcv: One option would be to use +m and have a channel bot hand out +v with a delay

[14:13] <MasterDuke> timotimo: i'm seeing a lot of time spent at https://github.com/rakudo/rakudo/blob/master/src/core/Hash.pm6#L432-L433 would it make sense to pull the check for &as outside the loop?

[14:14] <[Coke]> samcv: could have been the other 3 channels.

[14:14] <Juerd> samcv: Another is to use +k and publish the key somewhere, as a sort of captcha

[14:14] <lizmat> MasterDuke: good catch

[14:14] <Zoffix> samcv: I'm fine with channel being temporarily +r. It's not like we have a newbie joining every 5 seconds and it's not like they can't join entirely, they just get a messaged they need to reg their nick

[14:15] <Zoffix> samcv: also, it's not just "spam". It's spam that contains libel against a member of our community.

[14:15] <samcv> Zoffix: agreed

[14:15] <samcv> Zoffix: i mean could we have it redirect to a pre-join channel? and people who ask there can get allowed into the main chat?

[14:16] *** mcmillhj left
[14:16] <tyil> Juerd: that sounds like a hassly for people who're not used to irc

[14:16] <samcv> there are other projects who do something similar

[14:16] <samcv> since we don't know how long this will last

[14:16] <tyil> I'd think having a bot hand out +v after a delay would be neat to have for this kind of situation

[14:16] <Zoffix> samcv: how do you deal with spam in pre-join channel?

[14:17] <samcv> Zoffix: well, usually if the chat is redirected sometimes the bots don't message to the channel at all

[14:17] <tyil> the bot can pm the NOTICE the user to say something like "Due to spam, you must wait 10 seconds before you can start talking"

[14:17] <tyil> pm or NOTICE*

[14:17] <Zoffix> vOv I think that's overthinking it.

[14:17] <samcv> since if the bot still sends to #perl6 when it's invited to #perl6-unregistered the server will ignore any messages to #perl6

[14:18] <Zoffix> samcv: but I mean the bots will be joining #perl6-unregistered directly and spamming there.

[14:18] <Zoffix> samcv: they're joining all the channels, not just #perl6

[14:18] <[Coke]> Unpopular opinion: Maybe we should consider a chat platform other than IRC.

[14:18] <Zoffix> heh

[14:18] <Zoffix> [Coke]: like what?

[14:18] <tyil> [Coke]: such as?

[14:19] <tyil> I've yet to find a realtime communication platform that works as well as irc for public project groups

[14:19] <MasterDuke> lizmat: also, is `@a.push for @b` faster than `@a.append(@b.map)`?

[14:19] <[Coke]> e.g.: slack

[14:19] <Zoffix> [Coke]: eww

[14:19] <tyil> slock is not suited for public projects

[14:19] *** curan left
[14:20] <tyil> slack is a closed off platform, and doesnt do well with random people joining for just a quick question

[14:20] <Zoffix> [Coke]: didn't they explicitly say it's not designed for open source communities?

[14:20] <lizmat> MasterDuke: not sure, but --profile is your friend

[14:20] <Zoffix> [Coke]: also, don't you *have* to register to use it? How is that different than having a +r on a channel?

[14:20] <tyil> also, no sane client for slack

[14:20] <Zoffix> Also, Slack is a resource hog

[14:20] *** [Coke] left
[14:20] <tyil> you'd have to waste a couple hundred megs just to keep track on #perl6

[14:21] <tyil> Matrix would do fine for me, but Matrix is incredibly slow

[14:22] <Zoffix> Also, we have a billion references saying "join our IRC support channel"

[14:22] <Zoffix> ZofBot: IRC4LYF

[14:22] <timotimo> MasterDuke: well, categorize is only called once and it takes like 10% of time when you only run the first 10 words, so the more words you have the less it matters. for now, at least

[14:22] <pmurias> samcv: normal users can register (it's a bit annoying)

[14:23] <tyil> Zulip is an interesting open source chat platform that I think is interesting, but I'mnot sure if you can set it up to allow unregistered people to join in on the discussions

[14:23] <pmurias> samcv: ultra creepy spam on the channel is no good too

[14:23] <samcv> pmurias: then maybe an invite to some other room is a decent middle ground?

[14:23] <samcv> so you need either registration or an invite to get to #perl6 chat?

[14:24] *** Praise joined
[14:24] <Zoffix> "[10:23] == #perl6 Cannot join channel (+b) - you are banned"

[14:24] <Zoffix> How is this better than +r?

[14:24] <mst> I can't give you the nice 'you need to be registered' message *and* let the bots in

[14:24] *** mst sets mode: -o mst

[14:24] <Zoffix> :)

[14:24] <Zoffix> That was from going to https://perl6.org/irc BTW

[14:25] <Zoffix> mst: isn't there a way to whitelist the webchat.freenode.net users?

[14:25] <pmurias> you are banned messages are significantly less than awesome

[14:25] <Zoffix> IMO those would be the real newbees who don't know what's going on.

[14:25] *** ChanServ sets mode: +o mst

[14:25] <mst> yeah, that's a good point

[14:26] <mst> Zoffix: try it now

[14:26] <Zoffix> "[10:26] == #perl6 Cannot join channel (+b) - you are banned"

[14:27] <mst> what's your connection?

[14:27] <Zoffix> [10:26] == gateway/web/freenode/ip.45.79.148.56 is now your hidden host (set by syn.)

[14:27] <mst> goddamnit

[14:27] <mst> right. try now.

[14:27] <samcv>  #perl6 Cannot join channel (+b) - you are banned

[14:27] <samcv> following the freenode.net webchat link on perl6.org

[14:28] *** TestyMcTesty joined
[14:28] <TestyMcTesty> mst: works :)

[14:28] *** TestyMcTesty left
[14:28] *** foobar_ joined
[14:28] <timotimo> jkramer: what version of rakudo was that?, alternatively: what's in your gen/moar/BOOTSTRAP.nqp on line 3573?

[14:28] *** testusersamcv joined
[14:29] <mst> and the way I've set that, kiwiirc should work as well

[14:29] <testusersamcv> now seems to work?

[14:29] *** mst sets mode: -o mst

[14:29] <Zoffix> mst++

[14:29] <samcv> mst: what did you change?

[14:29] <mst> samcv: added an exemption for web gateways like I did for the able6 bots

[14:29] <samcv> a ok

[14:30] <mst> -!- mode/#perl6 [+e *!*@gateway/web/*] by mst

[14:30] <mst> I can only assume you've got your client set to ignore mode changes

[14:30] <samcv> mst: i can see mode changes. but i didn't get that one

[14:30] <mst> weird

[14:30] <samcv> i got your +/- r changes fine

[14:31] <mst> maybe your client doesn't know what +e is

[14:32] <Ulti> hmm do we have any bot clients in Perl 6 that deal with registered nicks?

[14:32] <AlexDaniel> .tell [Coke] if we ever consider any alternative to IRC, that'd be Matrix and not anything else. Today though we'd have to let Matrix mature a bit before doing the move

[14:32] <yoleaux> AlexDaniel: I'll pass your message to [Coke].

[14:32] <mst> samcv: anyway, that seem a reasonable compromise for the moment?

[14:32] *** Zoffix left
[14:32] <AlexDaniel> Ulti: you mean like that? https://github.com/perl6/whateverable/blob/aeed5c233e7856438b6242819c8d76560ba918d8/lib/Whateverable.pm6#L655

[14:33] <Ulti> looks like

[14:33] <Ulti> thanks

[14:33] <ilmari_> meep?

[14:34] <samcv> mst: yes that is much better

[14:34] <AlexDaniel> mst++

[14:34] <ilmari_> ah, my matrix-bridged user is registered with nickserv

[14:35] <jkramer> timotimo: 2018.06, but I can build from master too

[14:35] <timotimo> that won't be necessary :)

[14:36] <jkramer> I made slightly faster algo for the string/array comparison without 'is copy', now it's at 4.1-4.4s.

[14:36] *** Sgeo_ left
[14:36] <timotimo> it looks like the time spent in that is really just from "temp"

[14:36] *** Sgeo joined
[14:36] <timotimo> fwiw, i think you can "abuse" the sorting of the words array to do this very fast

[14:36] <jkramer> And I added a .race to the .grep which made it a bit better too

[14:38] <timotimo> if i understand the task correctly

[14:38] <jkramer> Here's what I got now: http://bpaste.net/show/2f03ec394d97

[14:38] <timotimo> every word comes after words that share a prefix

[14:39] <jkramer> Now it's not necessarily a prefix. The next word has to be the previous word, with one random letter (any position) removed

[14:39] <timotimo> oooh

[14:43] <timotimo> i wonder if every word should have precomputed an array of words with each letter removed

[14:44] <timotimo> that can be done massively parallel

[14:45] *** testusersamcv left
[14:47] <jkramer> timotimo: Yes but you'd end up with a huge amount of non-existing words. Might be worth a try though.

[14:48] <timotimo> hmm

[14:48] <timotimo> so, it's only allowed to have a difference of one character, right? one being removed?

[14:49] <jkramer> Yes

[14:50] <timotimo> hm, should be possible to categorize words into the first and second letter, because either the first letter matches the first letter of the longer word, or the second letter does

[14:51] <timotimo> if the second letter matches, the whole word has to match

[14:51] <timotimo> because that means the first letter is dropped

[14:52] <timotimo> that sounds like a good shortcut perhaps?

[14:56] *** Sgeo left
[15:07] <jkramer> I have no idea what you mean :)

[15:08] <timotimo> haha

[15:12] *** robertle left
[15:14] *** Kaiepi left
[15:28] *** kanbas joined
[15:35] *** jmerelo joined
[15:36] <jmerelo> Hi

[15:40] *** mnooning joined
[15:40] <mnooning> Is there a way to have newlines when pasting from a short test script?  Otherwise I have to paste in each line at a time.

[15:41] <mnooning> BTW: I could not get into here yesterday.  Glad to see it is fixed

[15:41] *** Zoffix joined
[15:41] <mnooning> A link to something that would say how to enter newlines would be good, too.

[15:41] <Zoffix> mnooning: yeah, typically people use https://gist.github.com/

[15:42] <Zoffix> And the network under a massive spam attack, so yesterday, the channel was blocked to unregistered users.

[15:42] <Zoffix> (now, there's a different block in place)

[15:43] <mnooning> An answer to that is all I really wanted for now.  I'll go look into gist.github.  Thanks.  Bye

[15:43] *** mnooning left
[15:43] <Zoffix> oh, ok

[15:44] <Extirpator> Friends! It possible to exec in regex code. In P5 is group (?{}), e.g. (?{$var = 1}), this require use re 'eval'

[15:44] <lizmat> Extirpator: put code in curlies: {   }

[15:45] *** a3f joined
[15:45] <Extirpator> lizmat: üëçüëçüëçüëç Great thanx, sorry for noob ques!

[15:45] <lizmat> no problem, that's why there's a #perl6 :-)

[15:50] <jmerelo> lizmat: is this the bug you talked about this morning? https://rt.perl.org/Public/Bug/Display.html?id=126120

[15:51] <lizmat> m: role R { has int $!a }; class A does R { method a() { $!a = 42 } }; say A.new.a  # yeah, that's the one

[15:51] <camelia> rakudo-moar df5d82e8f: OUTPUT: ¬´Cannot assign to an immutable value‚ê§  in method a at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:52] <lizmat> m: role R { has Int $!a }; class A does R { method a() { $!a = 42 } }; say A.new.a  # no problem this way

[15:52] <camelia> rakudo-moar df5d82e8f: OUTPUT: ¬´42‚ê§¬ª

[15:53] <timotimo> what does it code-gen to?

[15:55] <lizmat> p6assign $!a

[15:56] <timotimo> hmm.

[15:56] <timotimo> does it have anything like "returns(int)" on it?

[15:56] <timotimo> that may be necessary to assign to a $!a?

[16:00] <lizmat> jmerelo: ugh, I assumed you spectested / built your PR

[16:00] *** Sgeo joined
[16:02] *** domidumont left
[16:07] <jmerelo> lizmat: sorry, I didn't. To tell you the truth, I am not sure how to do that... 

[16:08] <lizmat> "make spectest" after you've build rakudo ?

[16:08] <jmerelo> lizmat: OK, good to know. Sorry.

[16:08] <lizmat> in any case, it didn't even build  :-(

[16:10] <jmerelo> that instruction where it fails is  nqp::bindattr_i($val, $enum_type_obj, '$!index', $index);

[16:11] <timotimo> yeah, you can't bindattr_i an Int attribute

[16:11] <jmerelo> it could change to bindattr, but them something else will break down the line... 

[16:11] <timotimo> yeah

[16:11] <jmerelo> pred and succ are tied to int, I think...

[16:11] <timotimo> you have to do it everywhere

[16:11] <Zoffix> huggable: zscript

[16:11] <huggable> Zoffix, Helper script for Rakudo Perl 6 core development: https://github.com/zoffixznet/z

[16:11] <Zoffix> jmerelo: ^ FWIW there's also that script

[16:11] <jmerelo> Zoffix++

[16:12] <Zoffix> (currently, probably not very suited for devs without a direct commit bit, I guess; need to change remotes after initing)

[16:12] <jmerelo> Zoffix: I'm down the rabbit hole with this issue, you know https://github.com/perl6/doc/issues/1555

[16:13] <tbrowder_> can someone please take a look at rakudo issue #2164 i just submitted? i assume i can delete the files but i can‚Äôt remember ever having this problem.

[16:13] <Zoffix> jmerelo: the 2017-Zoffix should've probably mentioned something about checking whether that stuff is even specced.

[16:13] <Zoffix> R#2164

[16:13] <synopsebot> R#2164 [open]: https://github.com/rakudo/rakudo/issues/2164 untracked files  interfere with merge from master

[16:13] <tbrowder_> btw, i am blocked from the #perl6-dev channel

[16:14] <timotimo> tbrowder_: because of the spam bots

[16:14] <jmerelo> Zoffix: it's mostly specced. The problem is that Enumeration is just used through enums and the MOP

[16:14] <Zoffix> tbrowder_: register your nick

[16:14] <timotimo> we set it to registered users only

[16:14] *** scimon left
[16:14] <tbrowder_> afaik it‚Äôs registered same as this channel

[16:14] <jmerelo> anyway, any chance this https://rt.perl.org/Public/Bug/Display.html?id=126120 will be solved?

[16:15] *** donpdonp joined
[16:16] <ilmari> tbrowder_: /whois is not showing you as identified

[16:16] <ilmari> tbrowder_: /msg nickserv status

[16:17] <donpdonp> META6.json: "depends"     : ["Cro::HTTP", "URI", "DBIish"]; -> use DBIish; => not found. zef install . => everything is installed (what?) => zef install DBIish => installed. use DBIish => works.

[16:17] <donpdonp> why is zef install . not installed the listed modules?

[16:17] <donpdonp> s/installed/installing

[16:18] <timotimo> is the META6.json file correct all in all?

[16:18] <donpdonp> well, its valid json and zef isnt complaining.

[16:18] <timotimo> OK

[16:19] <Zoffix> donpdonp: is the module you're installing installed already?

[16:19] <timotimo> did the module itself, i.e. . install successfully?

[16:19] <Zoffix> donpdonp: like.. did you install the module, then added the DBIish prereq without bumping the version of the module, and now trying to install the module again, but zef sees it's already installed and doesn't check whether prereqs got updated and needd installement

[16:20] <Zoffix> donpdonp: try:   zef uninstall .; zef install .

[16:20] <donpdonp> timotimo: it installed successfully yes, use DBIish is fine

[16:20] <donpdonp> Zoffix: ill try that

[16:20] <donpdonp>  $ zef uninstall . => !!!> Found no matching candidates to uninstall

[16:21] <Zoffix> donpdonp: what're the full metafile contents?

[16:21] <timotimo> uninstall probably requires the name rather than a path

[16:21] <donpdonp> https://nest.pijul.com/donpdonp/camelpub:master/d74437bb0bf2e55a02 the meta6.json 

[16:21] <donpdonp> (DBIish isnt commited yet)

[16:21] <Zoffix> "The owner of nest.pijul.com has configured their website improperly. "

[16:21] <Zoffix> Doesn't load

[16:21] <donpdonp> Zoffix: haha sigh. ssl cert expired yesterday. sorry bout that

[16:21] <Zoffix> heh

[16:21] <donpdonp> lemme make a gist

[16:22] <donpdonp> Zoffix: https://gist.github.com/donpdonp/b2081654b306abf4184c93f9920cd223

[16:22] <Zoffix> donpdonp: what about `zef uninstall CamelPub; zef install .` ? Maybe it's as timotimo says; it doesn't use the path in uninstall

[16:22] <donpdonp> ug i'll just try uninstall DBIish

[16:23] <donpdonp> im in the source code for camelpub i cant really uninstall that

[16:24] <donpdonp> $ zef uninstall DBIish

[16:24] <Zoffix> *shrug*

[16:24] <donpdonp> ===> Uninstalled from /home/donp/.rakudobrew/moar-2018.06/install/share/perl6/site

[16:24] <donpdonp>  $ zef install .

[16:24] <donpdonp> All candidates are currently installed

[16:24] <Zoffix> I don't think it checks all prereqs if the module you're installing is already installed

[16:24] <Zoffix> zef install --depsonly .

[16:25] <donpdonp> zef -i list|grep DBIish => nothing

[16:25] <donpdonp> Zoffix: hmm interesting

[16:25] <donpdonp> wait i wouldnt expect zef install . to install camelpub

[16:25] *** perlpilot joined
[16:25] <Zoffix> donpdonp: it installs the module the META file is for

[16:26] <Zoffix> So yeah, it installs CamelPub then

[16:26] * donpdonp double hmms.

[16:26] <Zoffix> You need to use --depsonly flag, if you want just the deps

[16:26] <donpdonp>  $ zef install --depsonly .

[16:26] <donpdonp> All candidates are currently installed

[16:26] <Zoffix> :|

[16:26] <Zoffix> donpdonp: what does `which zef` give you?

[16:27] <Zoffix> Just thinking maybe you got zef from some different perl6 or something

[16:27] <donpdonp> $ which zef

[16:27] <donpdonp> /home/donp/.rakudobrew/bin/zef

[16:27] <donpdonp> okay uninstalling CamelPub, then zef install . -> thats installing DBIish

[16:27] <donpdonp> apparently --depsonly doesnt even check the deps 

[16:28] <Zoffix> maybe worthy of a bug report: https://github.com/ugexe/zef/issues/new

[16:28] *** perlpilot left
[16:28] *** perlpilot joined
[16:28] <donpdonp> Zoffix++

[16:29] *** pmurias left
[16:31] *** Zoffix left
[16:32] *** Extirpator left
[16:36] *** perlpilot left
[16:37] *** sena_kun left
[16:41] *** dakkar left
[16:41] *** domidumont joined
[16:42] *** spycrab0 joined
[16:45] *** kerframil left
[16:51] *** [particle] left
[16:51] *** uzl joined
[16:52] *** kerframil joined
[16:52] *** uzl left
[16:54] *** lizmat left
[17:00] *** Sgeo left
[17:23] *** sena_kun joined
[17:33] <sena_kun> jmerelo, ping?

[17:36] *** vrurg left
[17:36] <donpdonp> whats the simplest way to read a line of input from the terminal

[17:37] <sena_kun> my $foo = get?

[17:37] <donpdonp> ah get. thx!

[17:37] <sena_kun> np

[17:37] *** vrurg joined
[17:38] *** vrurg left
[17:41] *** domidumont left
[17:42] <AlexDaniel> donpdonp: also maybe `prompt`

[17:42] <AlexDaniel> donpdonp: https://docs.perl6.org/routine/prompt

[17:42] <donpdonp> AlexDaniel: ha. even better.

[17:43] <sena_kun> .o0 ( but `get` is three chars shorter, so more simple )

[17:43] <jmerelo> sena_kun: hi

[17:43] <sena_kun> jmerelo, o/

[17:44] <AlexDaniel> sena_kun: `put ‚Äòfoo‚Äô; ‚Ä¶ get` is not shorter than `‚Ä¶ prompt ‚Äòfoo‚Äô` :)

[17:44] <sena_kun> jmerelo, you mentioned some graph of modules that I can use to see modules that fail because of others, can you please give me a link?

[17:44] <AlexDaniel> somewhere on https://github.com/JJ/p6-river

[17:45] <sena_kun> also, do we have for this ecosystem de-bitrot project a common online editor(or something, at least a github issue) where you can check out things one already did, to not duplicate efforts?

[17:49] <AlexDaniel> sena_kun: yes, if you wait 15 minutes I'll provide a demonstration of that :)

[17:50] <AlexDaniel> and I'd love some feedback (hint hint)

[17:50] <sena_kun> AlexDaniel, I can listen a song or a half of Mgla in this time, so sure. :)

[17:51] <sena_kun> I really don't know why, but I somehow want to send PRs for the whole evening until late night today.

[17:53] <jmerelo> sena_kun: https://github.com/JJ/p6-river/blob/master/illos/failed-distros-graph.svg

[17:53] <Geth> ¬¶ doc: MorayJ++ created pull request #2236: Fixes typos in regexes:: Capture Markers

[17:53] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2236

[17:54] <Geth> ¬¶ doc: 542b098516 | Moray++ | doc/Language/regexes.pod6

[17:54] <Geth> ¬¶ doc: Fixes typos in regexes:: Capture Markers

[17:54] <Geth> ¬¶ doc: 

[17:54] <Geth> ¬¶ doc: Three typos fixed.

[17:54] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/542b098516

[17:54] <synopsebot> Link: https://doc.perl6.org/language/regexes

[17:54] <Geth> ¬¶ doc: b7566bbabb | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[17:54] <Geth> ¬¶ doc: Merge pull request #2236 from MorayJ/master

[17:54] <Geth> ¬¶ doc: 

[17:54] <Geth> ¬¶ doc: Fixes typos in regexes:: Capture Markers

[17:54] <Geth> ¬¶ doc: Thanks!

[17:54] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b7566bbabb

[17:54] *** foobar_ left
[17:56] *** ChanServ sets mode: +o mst

[17:57] <El_Che> test

[17:57] <AlexDaniel> sena_kun: https://github.com/AlexDaniel/my-test-repo/issues

[17:57] <AlexDaniel> jmerelo: ‚Üë

[17:57] <AlexDaniel> Zoffix: what do you think? ‚Üë

[17:58] *** Sgeo joined
[17:59] *** Zoffix joined
[17:59] <AlexDaniel> if it's not clear, I'll populate the repo with‚Ä¶ uh‚Ä¶ 700 tickets

[17:59] <AlexDaniel> ‚âà

[17:59] <sena_kun> AlexDaniel, why 700, not 311?

[18:00] *** sauvin left
[18:00] <Zoffix> AlexDaniel: was gonna say... do we need all 700? Acme::WTF failing isn't exactly an urgent problem

[18:00] <AlexDaniel> sena_kun: oh! oh? oh!

[18:00] <AlexDaniel> I was looking at the number the wrong way!!!

[18:00] <Zoffix> AlexDaniel: also "describe what you did to install it," <-- maybe it'd be helpful to intstruct to ensure module's README includes instructions. Sometimes you've no idea what lib you need to actually install

[18:01] <AlexDaniel> Zoffix: right, good point!

[18:01] *** Zoffix left
[18:02] *** undersightable6 left
[18:02] *** undersightable6 joined
[18:02] *** squashable6 left
[18:02] *** reportable6 left
[18:02] *** greppable6 left
[18:03] <AlexDaniel> Zoffix: I think the easiest solution is to multiselect all Acme modules and label them as ‚Äúlow priority‚Äù

[18:03] *** statisfiable6 left
[18:05] <AlexDaniel> The script that I used is now here: https://github.com/perl6/ecosystem-unbitrot/blob/master/populate-issues.p6

[18:06] <AlexDaniel> so sena_kun, jmerelo, Zoffix and everyone else feel free to modify

[18:06] <AlexDaniel> sena_kun: so that's how I see it. You open up the repo, pick any issue and start working on it. Then you slap a label, close it and move on

[18:07] <AlexDaniel> just ‚â§320 repos, we can do it

[18:07] <sena_kun> AlexDaniel, reading the issue description: what should I do if the module is broken and I've opened issue + sent PR that fixes it?

[18:09] <AlexDaniel> sena_kun: right. https://github.com/perl6/ecosystem-unbitrot/commit/f36e59ccc6b67235eae7911dac9ea9f2deeed598

[18:10] *** Sgeo left
[18:10] <sena_kun> AlexDaniel, awesome.

[18:11] *** vrurg joined
[18:13] <AlexDaniel> again, I'm out of town, please take over this stuff

[18:14] <AlexDaniel> I run the script like this: ./populate-issues.p6 "I know what I'm doing" MYGITHUBACCESSTOKENHERE toast-6lang.sqlite.db toast-party.sqlite.db

[18:14] *** Robin_ joined
[18:17] *** Robin_ left
[18:18] <AlexDaniel> huggable: Geth

[18:18] <huggable> AlexDaniel, nothing found

[18:18] <AlexDaniel> huggable: geth

[18:18] <huggable> AlexDaniel, Set geth report URL (select application/json and send me everything): http://hack.p6c.org:8888/?chan=#perl6-dev           (OLD URLs that were in use in the past: http://geth.niner.name:8888/?chan=#perl6-dev      https://geth.perl6.party/?chan=#zofbot)

[18:20] <Geth> ¬¶ ecosystem-unbitrot: 460cae4da8 | (Aleks-Daniel Jakimenko-Aleksejev)++ | populate-issues.p6

[18:20] <Geth> ¬¶ ecosystem-unbitrot: Reverse the list for more natural look

[18:20] <Geth> ¬¶ ecosystem-unbitrot: 

[18:20] <Geth> ¬¶ ecosystem-unbitrot: Modules starting with A will be on the first page.

[18:20] <Geth> ¬¶ ecosystem-unbitrot: review: https://github.com/perl6/ecosystem-unbitrot/commit/460cae4da8

[18:22] <sena_kun> Issues-based cooperation is nice enough as I think. Today is a bit early, so I'll concentrate or gathering data on native modules as I've planned before.

[18:23] <AlexDaniel> yeah

[18:24] <AlexDaniel> also we can easily point the bot to that repo

[18:24] <AlexDaniel> (squashable6)

[18:24] <AlexDaniel> and it will show the progress very accurately

[18:25] <Geth> ¬¶ doc: 7676e00a39 | (JJ Merelo)++ | doc/Language/typesystem.pod6

[18:25] <Geth> ¬¶ doc: Moving 'enum-pair' definitions to its real place, Enumeration

[18:25] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7676e00a39

[18:25] <Geth> ¬¶ doc: 0d1804c729 | (JJ Merelo)++ | doc/Language/regexes.pod6

[18:25] <Geth> ¬¶ doc: Merge branch 'master' of github.com:perl6/doc

[18:25] <synopsebot> Link: https://doc.perl6.org/language/typesystem

[18:25] <synopsebot> Link: https://doc.perl6.org/language/regexes

[18:25] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/0d1804c729

[18:25] <Geth> ¬¶ doc: e1642ee5e2 | (JJ Merelo)++ | doc/Type/Enumeration.pod6

[18:25] <synopsebot> Link: https://doc.perl6.org/type/Enumeration

[18:25] <Geth> ¬¶ doc: Adds new page for enumeration.

[18:25] <Geth> ¬¶ doc: 

[18:25] <Geth> ¬¶ doc: Along the way,

[18:25] <Geth> ¬¶ doc: 

[18:25] <Geth> ¬¶ doc: * [this question in

[18:25] <Geth> ¬¶ doc: SO](https://stackoverflow.com/questions/51632394/assigning-a-value-to-the-attribute-of-a-mixed-in-role),

[18:25] <Geth> ¬¶ doc: * Rakudo issue rakudo/rakudo#2165 on behavior of enumHOW

[18:25] <synopsebot> RAKUDO#2165 [open]: https://github.com/rakudo/rakudo/issues/2165 EnumHOW inner workings: creating enums without Enumeration?

[18:25] <Geth> ¬¶ doc: <‚Ä¶commit message has 5 more lines‚Ä¶>

[18:25] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e1642ee5e2

[18:26] *** AlexDaniel left
[18:27] *** APic joined
[18:28] <jmerelo> .tell AlexDaniel you finally don't think using "river" score is better than just creating an issue for every one of them? Or everyone should decide whichever way they want?

[18:28] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[18:30] <sena_kun> jmerelo, if you mean generated svg, I myself found it a bit hard to use as you need to build a new image and see how connections go. I thought we have a tree type of thing.

[18:30] <jmerelo> sena_kun: that SVG is just for the ones with the most dependencies

[18:31] <sena_kun> jmerelo, also, as for now it is easier to just open page of failed module, let's say ModuleFoo, on toast and check first message from STDERR - it it says "Tests failed for ModuleFoo" <- we want that, if it says "Failed for ModuleBar", then it depends, so we can omit that. It takes like 10 seconds.

[18:31] <sena_kun> or maybe I misunderstood something, but that's how I see it.

[18:32] <jmerelo> sena_kun: then there's the river score https://github.com/JJ/p6-river/blob/master/data/river-scores.csv

[18:33] <jmerelo> sena_kun: right, but by focusing on those with higher river score, we'll fix those downriver 

[18:33] <jmerelo> sena_kun: point is, you will found those upriver repeatedly when checking some module. You check it out, and you see it fails because HTTP::UserAgent or Bailador fails...

[18:34] <jmerelo> the river score just saves you the extra step

[18:34] <sena_kun> we do, but 1)we cannot take toasts every hour to see how much are fixed now, if I understand clearly. the second thing is that usually fixing a module is not a 5 minutes thing. You can even PR fix, but the author can be quite busy and take a lot of time, weeks if not months before accepting.

[18:35] <jmerelo> sena_kun: of course. But that works for those with a higher score, and those with a lower score.

[18:35] <sena_kun> indeed.

[18:35] <jmerelo> sena_kun: what's more, it's going to be useless to fix something which is broken just because something upriver is.

[18:35] <jmerelo> sena_kun: sorry, I'm going AFK now...

[18:35] *** jmerelo left
[18:36] <sena_kun> It'd be awesome to extend Toaster code the way it needs to show difference between "It fails because of other module" or "It just fails because I dunno why". I wonder if I can do that. :S

[18:37] <sena_kun> anyway, natives-natives are calling me...

[18:53] *** Sgeo joined
[19:11] <Geth> ¬¶ doc: 065c7c5780 | (Norbert Buchmueller)++ | doc/Language/traps.pod6

[19:11] <synopsebot> Link: https://doc.perl6.org/language/traps

[19:11] <Geth> ¬¶ doc: mention hyped form of infix assignment ops in traps

[19:11] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/065c7c5780

[19:11] <Geth> ¬¶ doc: 9b1f8c3d6f | mendel++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[19:11] <Geth> ¬¶ doc: Merge pull request #2234 from mendel/mention-hyped-infix-assignment-ops-in-traps

[19:11] <Geth> ¬¶ doc: 

[19:11] <Geth> ¬¶ doc: mention hyped form of infix assignment ops in traps

[19:11] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/9b1f8c3d6f

[19:25] *** pmurias joined
[19:25] *** pmurias left
[19:26] *** pmurias joined
[19:26] <pmurias> why do I get a 'You are banned' message when trying to join #perl6 when I'm not registered?

[19:27] <timotimo> pmurias: the network is being hit by tonnes of spambots

[19:27] <timotimo> so we're +r for the moment, with an exception for the freenode web chat

[19:29] <pmurias> there isn't a way to have a nicer user experience?

[19:29] <timotimo> i personally was +1 on letting people in and dealing with the spam by kicking them fast enough using bots

[19:29] <El_Che> pmurias: I know that if I leave the channel, I won't be able to get in again

[19:31] <pmurias> like on node.js you can join but you can't say anything untill you register

[19:31] <MasterDuke> huh, i just tried converting this https://github.com/rakudo/rakudo/blob/master/src/core/Hash.pm6#L432-L433 into an if/else based on the &as instead of the ternary in the loop, but if anything it was a tiny bit slower

[19:31] <pmurias> and there is info explaining the situation in the channel topic

[19:32] <El_Che> forcing to register is not user friendly at all

[19:34] <pmurias> registering is not that big of an issue but having a you are banned message great you is super unfriendly

[19:35] <geekosaur> freenode is recommending channel mode +r which works liek this

[19:36] <El_Che> I prefer not to handle secrets if not necessary. Let's hope the spammers die soon from something painful :)

[19:36] <geekosaur> other channels are using +qz $~a

[19:36] <geekosaur> which lets unauth in but only shows what they say to ops, who can then +v them or not

[19:39] <timotimo> that does sound interesting

[19:40] *** SHODAN joined
[19:42] *** vrurg left
[19:51] <sena_kun> so we have about ~70 modules failed on toast because of native libraries. that's a relief.

[20:08] *** vrurg joined
[20:09] *** lizmat joined
[20:41] *** dct joined
[20:41] *** wamba_ joined
[20:42] *** wamba_ left
[20:49] *** AlexDaniel joined
[20:50] *** vrurg left
[20:58] *** vrurg joined
[21:03] *** vrurg left
[21:03] <AlexDaniel> .

[21:03] <yoleaux> 18:28Z <jmerelo> AlexDaniel: you finally don't think using "river" score is better than just creating an issue for every one of them? Or everyone should decide whichever way they want?

[21:04] <AlexDaniel> .tell jmerelo we can still tag the most important ones with labels, like ‚Äútop priority‚Äù or whatewever

[21:04] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[21:05] *** donpdonp left
[21:05] *** Kaiepi joined
[21:13] *** Sgeo_ joined
[21:15] *** Sgeo left
[21:16] *** Kaiepi left
[21:23] *** statisfiable6 joined
[21:24] *** Sgeo joined
[21:25] *** Sgeo left
[21:26] *** Kaiepi joined
[21:27] *** Sgeo_ left
[21:30] *** Sgeo joined
[21:36] *** DarthGandalf left
[21:37] *** DarthGandalf joined
[21:44] *** pmurias left
[22:06] *** DarthGandalf left
[22:07] *** DarthGandalf joined
[22:07] *** vrurg joined
[22:18] *** kjp joined
[22:19] *** Sgeo left
[22:32] *** HaraldJoerg left
[22:41] *** rindolf left
[22:48] *** Sgeo joined
[22:51] *** Kaiepi left
[23:03] *** sena_kun left
[23:04] *** Sgeo left
[23:07] *** Sgeo joined
[23:09] *** Sgeo_ joined
[23:11] *** Sgeo_ left
[23:11] *** stee left
[23:12] *** Sgeo left
[23:14] *** Sgeo joined
[23:19] *** kerframil left
[23:23] *** stmuk joined
[23:23] *** stmuk_ left
[23:25] *** psychoslave left
[23:39] *** Sgeo left
[23:40] *** Sgeo joined
[23:57] *** p6tester joined
[23:57] <p6tester> hi

