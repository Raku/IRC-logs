[00:13] *** w_richard_w joined
[00:13] *** p6bannerbot sets mode: +v w_richard_w

[00:14] *** w_richard_w left
[00:15] *** cydf left
[00:42] *** kurahaupo left
[00:43] *** kurahaupo joined
[00:43] *** kurahaupo left
[00:43] *** kurahaupo joined
[00:44] *** p6bannerbot sets mode: +v kurahaupo

[00:59] *** MasterDuke joined
[00:59] *** p6bannerbot sets mode: +v MasterDuke

[01:00] *** MasterDuke left
[01:00] *** MasterDuke joined
[01:00] *** herbert.freenode.net sets mode: +v MasterDuke

[01:00] *** p6bannerbot sets mode: +v MasterDuke

[01:01] *** kurahaupo_ joined
[01:02] *** p6bannerbot sets mode: +v kurahaupo_

[01:04] *** kurahaupo left
[01:14] *** phogg left
[01:23] *** p6noob left
[01:24] *** kurahaupo_ left
[01:24] *** kurahaupo joined
[01:25] *** p6bannerbot sets mode: +v kurahaupo

[01:31] *** CindyLinz left
[02:04] *** kurahaupo_ joined
[02:04] *** p6bannerbot sets mode: +v kurahaupo_

[02:08] *** kurahaupo left
[02:15] *** CindyLinz joined
[02:16] *** p6bannerbot sets mode: +v CindyLinz

[02:46] *** molaf left
[02:56] *** phogg joined
[02:56] *** p6bannerbot sets mode: +v phogg

[02:59] *** molaf joined
[02:59] *** p6bannerbot sets mode: +v molaf

[03:00] *** leont left
[03:01] *** leah2 left
[03:08] *** ufobat_ joined
[03:09] *** p6bannerbot sets mode: +v ufobat_

[03:12] *** ufobat___ left
[03:13] *** gumnos3 joined
[03:13] *** gumnos3 left
[03:16] *** kdr23 joined
[03:16] *** kdr22 left
[03:17] *** p6bannerbot sets mode: +v kdr23

[03:19] *** kurahaupo_ left
[03:19] *** kurahaupo joined
[03:20] *** p6bannerbot sets mode: +v kurahaupo

[03:20] *** kurahaupo_ joined
[03:21] *** p6bannerbot sets mode: +v kurahaupo_

[03:23] *** kurahaupo left
[03:33] *** hamhu3 joined
[03:34] *** p6bannerbot sets mode: +v hamhu3

[03:36] *** hamhu3_ left
[03:40] *** ferreira left
[04:01] *** bolangi left
[04:02] *** bolangi joined
[04:03] *** p6bannerbot sets mode: +v bolangi

[04:06] *** Cabanossi left
[04:07] *** Cabanossi joined
[04:07] *** p6bannerbot sets mode: +v Cabanossi

[04:25] *** kurahaupo_ left
[04:26] *** kurahaupo joined
[04:27] *** p6bannerbot sets mode: +v kurahaupo

[04:35] *** MasterDuke left
[04:40] *** w_richard_w joined
[04:40] *** p6bannerbot sets mode: +v w_richard_w

[05:03] *** molaf left
[05:16] *** bolangi left
[05:18] *** bolangi joined
[05:19] *** p6bannerbot sets mode: +v bolangi

[05:23] *** w_richard_w left
[05:47] *** blackberry9900 joined
[05:48] *** p6bannerbot sets mode: +v blackberry9900

[05:54] *** blackberry9900 left
[05:58] *** molaf joined
[05:59] *** p6bannerbot sets mode: +v molaf

[06:01] *** curan joined
[06:01] *** p6bannerbot sets mode: +v curan

[06:04] *** molaf left
[06:10] *** molaf joined
[06:11] *** p6bannerbot sets mode: +v molaf

[06:25] *** molaf left
[06:33] *** hamhu3_ joined
[06:34] *** p6bannerbot sets mode: +v hamhu3_

[06:36] *** hamhu3 left
[06:38] *** kurahaupo_ joined
[06:39] *** p6bannerbot sets mode: +v kurahaupo_

[06:41] *** kurahaupo left
[07:09] *** silug left
[07:11] *** domidumont joined
[07:12] *** p6bannerbot sets mode: +v domidumont

[07:15] *** kurahaupo_ left
[07:16] *** kurahaupo joined
[07:17] *** p6bannerbot sets mode: +v kurahaupo

[07:28] *** rindolf joined
[07:28] *** p6bannerbot sets mode: +v rindolf

[07:31] *** silug joined
[07:32] *** p6bannerbot sets mode: +v silug

[07:43] *** kensanata joined
[07:43] *** p6bannerbot sets mode: +v kensanata

[07:55] *** ZZZzz_ left
[07:57] *** lookatme_q joined
[07:58] *** p6bannerbot sets mode: +v lookatme_q

[08:06] *** abraxxa joined
[08:07] *** p6bannerbot sets mode: +v abraxxa

[08:07] *** leont joined
[08:08] *** p6bannerbot sets mode: +v leont

[08:16] *** lichtkind left
[08:23] *** leont left
[08:24] *** zakharyas joined
[08:25] *** p6bannerbot sets mode: +v zakharyas

[08:50] *** dakkar joined
[08:51] *** p6bannerbot sets mode: +v dakkar

[08:58] <andrzejku> Hey

[08:58] <andrzejku> As I understand passing :out parameter will capture standard output

[08:58] <andrzejku> $proc = run $svn_info_cmd, :cwd($trunk), :out, :err;

[08:58] <andrzejku>   say $proc.out.get;

[08:58] <andrzejku> but when I am trying to print it

[08:58] <andrzejku> I receive just Nil

[09:00] <andrzejku> ahh I think I know

[09:00] <andrzejku> srry

[09:00] <jast> normally that would indicate that there was no output on stdout

[09:01] <andrzejku> jast Yeah I found problem :) do you know how to wait until proc finish its work?

[09:01] <andrzejku> it indicate -1 until result is not return

[09:02] <andrzejku> ahh I see

[09:02] <andrzejku> it waits until finish I used shell

[09:02] <andrzejku> :D

[09:07] *** Skarsnik joined
[09:08] *** p6bannerbot sets mode: +v Skarsnik

[09:13] <Skarsnik> Hello

[09:16] *** jeek left
[09:17] *** cydf joined
[09:18] *** p6bannerbot sets mode: +v cydf

[09:22] <AlexDaniel> Skarsnik: hi!

[09:23] <AlexDaniel> seeing you around more often nowadays :)

[09:23] <Skarsnik> I even have a small patch xD

[09:24] <Skarsnik> m: my buf8 $foo; $foo.append("foo".encode("latin1"));

[09:24] <camelia> rakudo-moar 7262b4e84: OUTPUT: «Cannot resolve caller append(Buf[uint8]: Blob[uint8]); none of these signatures match:␤    (Buf:D: int $got, *%_)␤    (Buf:D: Int:D $got, *%_)␤    (Buf:D: Mu:D $got, *%_)␤    (Buf:D: Blob:D $buf, *%_)␤    (Buf:D: int @values, *%_)␤    (Buf…»

[09:24] <Skarsnik> This show this on my rakudo x) Cannot resolve caller append(Buf[uint8]:U: Blob[uint8]:D); 

[09:32] *** kurahaupo left
[09:32] *** kurahaupo joined
[09:33] *** p6bannerbot sets mode: +v kurahaupo

[09:46] *** leah2 joined
[09:47] *** p6bannerbot sets mode: +v leah2

[09:53] <timotimo> m: my buf8 $foo; $foo.append("foo".encode("latin1").list);

[09:53] <camelia> rakudo-moar 7262b4e84: OUTPUT: «Cannot resolve caller append(Buf[uint8]: List); none of these signatures match:␤    (Buf:D: int $got, *%_)␤    (Buf:D: Int:D $got, *%_)␤    (Buf:D: Mu:D $got, *%_)␤    (Buf:D: Blob:D $buf, *%_)␤    (Buf:D: int @values, *%_)␤    (Buf:D: @va…»

[09:53] <timotimo> m: my buf8 $foo; $foo.append("foo".encode("latin1").Array);

[09:53] <camelia> rakudo-moar 7262b4e84: OUTPUT: «Cannot resolve caller append(Buf[uint8]: Array); none of these signatures match:␤    (Buf:D: int $got, *%_)␤    (Buf:D: Int:D $got, *%_)␤    (Buf:D: Mu:D $got, *%_)␤    (Buf:D: Blob:D $buf, *%_)␤    (Buf:D: int @values, *%_)␤    (Buf:D: @v…»

[09:54] <timotimo> weird

[09:54] <timotimo> m: my buf8 $foo; $foo ~= "foo".encode("latin1"); say $foo

[09:54] <camelia> rakudo-moar 7262b4e84: OUTPUT: «Cannot use a Buf as a string, but you called the Stringy method on it␤  in block <unit> at <tmp> line 1␤␤»

[09:55] *** scimon joined
[09:56] *** p6bannerbot sets mode: +v scimon

[09:56] <scimon> Look on the bright side. At least we're not having an argument about using GGI (bloody) pm 

[09:57] <scimon> (Bit of Englishness slipped out there) 

[09:57] <timotimo> i'm not sure what that's an answer to

[09:59] *** kirisame joined
[09:59] <Skarsnik> m: my buf8 $foo = buf8.new; $foo.append("foo".encode("latin1"));

[09:59] <camelia> rakudo-moar 7262b4e84: ( no output )

[09:59] *** kirisame left
[09:59] *** w_richard_w joined
[09:59] *** w_richard_w left
[10:00] *** pmurias joined
[10:00] *** p6bannerbot sets mode: +v pmurias

[10:00] *** statisfiable6 left
[10:02] *** iviv left
[10:02] *** iviv joined
[10:02] *** p6bannerbot sets mode: +v iviv

[10:03] <timotimo> ooh, the buf wasn't defined

[10:03] <timotimo> of course

[10:03] <timotimo> in that case your patch seems quite useful

[10:03] <Skarsnik> it's not obvious since there a sign that seems to match

[10:03] <timotimo> aye

[10:03] <timotimo> it could even go further and say "this signature would match if the invocant were defined:"

[10:04] <timotimo> like we already have for cases when a type matches, but isn't rw

[10:04] <Skarsnik> I am not sure to understand all branch on this code

[10:04] <Skarsnik> so I did not try fancy stuff ^^

[10:05] <Skarsnik> I did 3h of Perl 6 and found 2 lta bugs xD

[10:05] <Skarsnik> I should stop touching Perl 6

[10:06] *** telex left
[10:06] *** pmurias left
[10:06] *** pmurias joined
[10:06] *** p6bannerbot sets mode: +v pmurias

[10:06] <timotimo> OK :)

[10:06] <timotimo> no

[10:06] <timotimo> please don't stop :D

[10:07] <Skarsnik> The other one was related to my bug about incorrect statement line pointed. this time in a grammar rule

[10:08] *** telex joined
[10:09] *** p6bannerbot sets mode: +v telex

[10:10] *** lizmat left
[10:10] <timotimo> a backtrace in a run-time error?

[10:11] *** tobs` joined
[10:12] *** p6bannerbot sets mode: +v tobs`

[10:13] <Skarsnik> I think? it's somewhere on the 4h vod xD

[10:25] <timotimo> Skarsnik: your patch fails a test %)

[10:25] <Skarsnik> yep I watching this

[10:26] <timotimo> how long is the message? :D

[10:26] <Skarsnik> wtf this test xD

[10:28] *** lizmat joined
[10:28] *** p6bannerbot sets mode: +v lizmat

[10:29] <timotimo> it's there to make sure the message doesn't dump out the entire contents of an array

[10:33] <Skarsnik> hm somehow that add a lot of space

[10:34] <Skarsnik> Cannot resolve caller z([1 2 3 4 5 6 7 8 9 1..., 1, :x([1 2 3 4 5 6 7 8 9 1...)); none of these signatures match: (regular p6)

[10:34] <Skarsnik> Cannot resolve caller z([1 2 3 4 5 6 7 8 9 1..., 1, :x([1 2 3 4 5 6 7 8 9 1...:D

[10:34] <Skarsnik>                     )); none of these signatures match:

[10:34] <Skarsnik> my patched thing

[10:34] <timotimo> that looks rather wrong :D

[10:34] <timotimo> the placement of the :D

[10:34] <Skarsnik> sadly I have to go to work soon

[10:35] *** pmurias left
[10:35] *** pmurias joined
[10:35] *** p6bannerbot sets mode: +v pmurias

[10:35] *** pmurias left
[10:36] <Skarsnik> I wish I did not have tor ebuild everything x)

[10:36] <timotimo> well, you can have a short script that augments the exception class in question

[10:39] <Skarsnik> I just need to remove what I added in the for $.capture.hash wicth I don't get why xD

[10:39] *** kurahaupo left
[10:39] *** kurahaupo_ joined
[10:39] <tobs`> Can I redispatch (with nextsame) to a method implementation from a role, when I reimplemented that method in my class? I just want a small wrapper around that role's implementation.

[10:40] <tobs`> I mean, "as with nextsame" because nextsame doesn't do the trick.

[10:40] *** p6bannerbot sets mode: +v kurahaupo_

[10:41] <Skarsnik> well, eat + work xà

[10:42] *** scimon left
[10:46] <timotimo> you can refer to the role's method like self.RoleName::methodname()

[10:49] <tobs`> oh great. I had a hunch there was something like this, but tried self.RoleName.methodname(). Thanks!

[10:49] *** pmurias joined
[10:49] *** p6bannerbot sets mode: +v pmurias

[10:50] <timotimo> yeah, that simply calls a method named RoleName

[10:50] <timotimo> though methods with a name like that are by convention coercer methods

[10:52] *** zakharyas left
[10:56] *** TeamBlast left
[10:57] *** pmurias left
[10:58] *** TeamBlast joined
[10:58] *** p6bannerbot sets mode: +v TeamBlast

[11:03] *** statisfiable6 joined
[11:03] *** ChanServ sets mode: +v statisfiable6

[11:04] *** p6bannerbot sets mode: +v statisfiable6

[11:06] *** leont joined
[11:07] *** famra joined
[11:07] *** p6bannerbot sets mode: +v famra

[11:07] *** p6bannerbot sets mode: +v leont

[11:07] *** scimon joined
[11:08] *** blackberry9900 joined
[11:08] *** p6bannerbot sets mode: +v scimon

[11:09] *** p6bannerbot sets mode: +v blackberry9900

[11:10] *** poohman left
[11:13] *** pmurias joined
[11:13] *** p6bannerbot sets mode: +v pmurias

[11:13] *** blackberry9900 left
[11:13] *** blackberry9900 joined
[11:14] *** p6bannerbot sets mode: +v blackberry9900

[11:18] <scimon> timotimo: That was mostly my morning greeting. And a comment on the community :)

[11:21] <andrzejku> Could you help me I had something similar like <23 23-24 25>.grep: Int

[11:21] <andrzejku> (23 25)

[11:22] <andrzejku> but it is not working

[11:22] <andrzejku> ahh

[11:22] <andrzejku> that' string array

[11:22] <andrzejku> what I hav e:D

[11:23] <Xliff_> m: .fmt('%2d').say for ^10

[11:23] <camelia> rakudo-moar 7262b4e84: OUTPUT: « 0␤ 1␤ 2␤ 3␤ 4␤ 5␤ 6␤ 7␤ 8␤ 9␤»

[11:24] <andrzejku> <"23" "23-25" "24">.grep: /\d+/

[11:24] <andrzejku> ("23" "23-25" "24")

[11:24] <andrzejku> now I am suprosed why 23-25 are numbers

[11:25] <andrzejku> I expect only digit here

[11:25] <jnthn> Because the string "23-25" matches \d+; you'd need /^\d+$/ to mean "the whole thing is digits"

[11:26] <andrzejku> jnthn ahh

[11:26] <andrzejku> jnthn right :D it matches part of string

[11:26] *** pmurias left
[11:26] <andrzejku> jnthn thnks jnthn!

[11:26] <andrzejku> nice to see you

[11:27] *** pmurias joined
[11:27] *** p6bannerbot sets mode: +v pmurias

[11:27] *** pmurias left
[11:28] <andrzejku> m: <"23" "23-25" "26">.grep: /\d+$/

[11:28] <camelia> rakudo-moar 7262b4e84: ( no output )

[11:28] <andrzejku> m: <"23" "23-25" "26">.grep: /^\d+$/

[11:28] <camelia> rakudo-moar 7262b4e84: ( no output )

[11:29] <andrzejku> m: <"23" "23-25" "26">.grep: m/ ^\d+$ /

[11:29] <camelia> rakudo-moar 7262b4e84: OUTPUT: «Use of uninitialized value of type Any in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in block <unit> at <tmp> line 1␤»

[11:29] <andrzejku> :<

[11:30] <jnthn> Remember to "say" or "dd" the result

[11:31] <jnthn> m: say <"23" "23-25" "26">.grep: /^\d+$/

[11:31] <camelia> rakudo-moar 7262b4e84: OUTPUT: «()␤»

[11:31] *** domidumont left
[11:31] <jnthn> m: say <<"23" "23-25" "26">>.grep: /^\d+$/

[11:31] <camelia> rakudo-moar 7262b4e84: OUTPUT: «(23 26)␤»

[11:32] <lizmat> jnthn: would you offhand know of a way to re-initialize a n-dimensional array with the same dimensions?

[11:32] <lizmat> jnthn: preferably using nqp ops  :-)

[11:32] *** lucasb joined
[11:33] *** p6bannerbot sets mode: +v lucasb

[11:33] <andrzejku> doesn't it tell that method grep(Mu $matcher, :$k, :$kv, :$p, :$v --> Seq) it returns Seq

[11:33] <andrzejku> ahh now I understand

[11:33] <andrzejku> camelia need say or debug

[11:34] <andrzejku> sorry I didn't write Perl6 much :D

[11:34] <andrzejku> just trying to day to create one script at my work

[11:34] <andrzejku> xD

[11:35] <jnthn> lizmat: Depends what you mean be reinitialize; I think there's an NQP op that lets you query the dimensions though

[11:35] <lizmat> yes, there is...

[11:35] <lizmat> so, basically go through the motions of creating a whole new one, and then bind reified to that

[11:36] <lizmat> jnthn: alternately, do you think this is acceptable behaviour:

[11:36] <lizmat> m: my @a[2;2] = (0,1),(2,3); dd @a; @a = (5,6),(); dd @a

[11:36] <camelia> rakudo-moar 7262b4e84: OUTPUT: «Array element = Array.new(:shape(2, 2), [0, 1], [2, 3])␤Array element = Array.new(:shape(2, 2), [5, 6], [2, 3])␤»

[11:37] <jnthn> m: my @a[2;2] = (0,1),()

[11:37] <camelia> rakudo-moar 7262b4e84: ( no output )

[11:37] <jnthn> ah, right, we're quiet about that

[11:37] <jnthn> m: my @a[2;2] = (0,1),(); dd @a

[11:37] <camelia> rakudo-moar 7262b4e84: OUTPUT: «Array element = Array.new(:shape(2, 2), [0, 1], [Any, Any])␤»

[11:37] *** pmurias joined
[11:37] *** p6bannerbot sets mode: +v pmurias

[11:37] <jnthn> I guess we could just null out the unfilled slots on a non-initial store

[11:39] <lizmat> that's basically my question :-)

[11:39] *** statisfiable6 left
[11:39] <lizmat> how can we quickly do that apart from iterating over the whole thing

[11:50] <jnthn> There's no quicker way to do it than that, I don't think

[11:53] *** dotdotdot left
[11:55] *** dotdotdot joined
[11:55] <lucasb> I put a dist here: https://gist.github.com/lucasbuchala/64267c60b798047145c80561334c3cd5

[11:55] <lizmat> jnthn: ok, than we're on the same page  :-)

[11:55] *** p6bannerbot sets mode: +v dotdotdot

[11:56] <lucasb> I wonder if I put the gist url of META6.json into the ecosystem META.list, then zef will grab it :)

[11:56] <lucasb> IOW, install from gists

[11:57] <lucasb> gist repos can't have subdirs, so I got rid of the lib dir. Zef installs locally ok

[11:57] *** Skarsnik left
[12:00] <Geth> ¦ ecosystem: c70ffb759b | (Lucas Buchala)++ (committed using GitHub Web editor) | META.list

[12:00] <Geth> ¦ ecosystem: Add a Gist distribution as an experiment

[12:00] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/c70ffb759b

[12:04] <lucasb> hmm, when does the file ecosystem-api.p6c.org/projects1.json is regenerated?

[12:05] <lucasb> anyway, dunno if zef supports gist dists already

[12:07] *** sergot joined
[12:08] *** p6bannerbot sets mode: +v sergot

[12:08] <timotimo> can you "provides": "../../../../../etc/passwd"? :D

[12:20] *** sena_kun joined
[12:21] *** p6bannerbot sets mode: +v sena_kun

[12:27] <lucasb> hehe, it works, out of the box :)

[12:27] <lucasb> zef install Foo::Gist

[12:27] <lucasb> perl6 -MFoo::Gist -e hello

[12:27] <lucasb> I'll add a test

[12:28] <timotimo> that's cool

[12:31] <lucasb> "use Foo::Gist", but there's no Foo/ subdir :-|

[12:32] <lucasb> well, it works if the module is already installed

[12:37] *** statisfiable6 joined
[12:37] *** ChanServ sets mode: +v statisfiable6

[12:37] <lucasb> nope

[12:37] <lucasb> anyway to say that the test file is "test.t" in the rootdir, not "t/" ?

[12:37] *** p6bannerbot sets mode: +v statisfiable6

[12:38] <timotimo> i don't think we have anything for that, actually

[12:40] <tobs`> m: role X { method f { say "X.f" } }; role Y { method f { say "Y.f"; self.X::f } }; class C does Y {}.new.f

[12:40] <camelia> rakudo-moar 7262b4e84: OUTPUT: «Y.f␤Cannot dispatch to method f on X because it is not inherited or done by C␤  in method f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[12:40] <tobs`> m: role X { method f { say "X.f" } }; role Y does X { method f { say "Y.f"; self.X::f } }; class C does Y {}.new.f

[12:40] <camelia> rakudo-moar 7262b4e84: OUTPUT: «Y.f␤No concretization found for X␤  in method f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[12:40] <tobs`> now, is there a way to get *this* situation to work?

[12:41] *** blackberry9900 left
[12:41] <tobs`> (the latter, the former was my error)

[12:41] <timotimo> m: role X { method f { say "X.f" } }; role Y is X { method f { say "Y.f"; self.X::f } }; class C does Y {}.new.f

[12:41] <camelia> rakudo-moar 7262b4e84: OUTPUT: «Y.f␤No concretization found for X␤  in method f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[12:42] <tobs`> m: role X { method f { say "X.f" } }; role Y does X { method f { say "Y.f"; self.X::f } }; class C does X does Y {}.new.f

[12:42] <camelia> rakudo-moar 7262b4e84: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Method 'f' must be resolved by class C because it exists in multiple roles (Y, X)␤at <tmp>:1␤»

[12:46] *** gregf_ joined
[12:46] *** p6bannerbot sets mode: +v gregf_

[12:47] *** khisanth_ left
[12:54] *** domidumont joined
[12:55] *** p6bannerbot sets mode: +v domidumont

[12:58] *** pmurias left
[12:58] *** pmurias joined
[12:58] *** p6bannerbot sets mode: +v pmurias

[12:58] *** pmurias left
[13:00] *** khisanth_ joined
[13:01] *** p6bannerbot sets mode: +v khisanth_

[13:03] <tobs`> timotimo: I created R#2496.

[13:03] <synopsebot_> R#2496 [open]: https://github.com/rakudo/rakudo/issues/2496 No concretization found with role-qualified method call when doing a role from another role

[13:03] *** pmurias joined
[13:03] *** p6bannerbot sets mode: +v pmurias

[13:04] <timotimo> then we can find out if this is perhaps by design

[13:04] <timotimo> just how roles mixing into roles overwrite things

[13:09] *** kerframil joined
[13:09] *** p6bannerbot sets mode: +v kerframil

[13:21] *** scimon_ joined
[13:22] *** scimon_ left
[13:23] *** lucasb left
[13:24] *** scimon left
[13:31] *** kurahaupo_ is now known as kurahaupo

[13:35] *** famra left
[13:46] *** scimon joined
[13:47] *** p6bannerbot sets mode: +v scimon

[13:54] *** MikeyG left
[13:55] *** MikeyG joined
[13:56] *** p6bannerbot sets mode: +v MikeyG

[14:14] *** Sgeo_ left
[14:17] *** kdr23 left
[14:26] <Geth> ¦ ecosystem: 93ab4521a7 | (Lucas Buchala)++ (committed using GitHub Web editor) | META.list

[14:26] <Geth> ¦ ecosystem: Update Acme::Gistribution META6.json location

[14:26] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/93ab4521a7

[14:36] *** pmurias left
[14:39] *** [Sno] left
[14:39] *** reportable6 left
[14:39] *** reportable6 joined
[14:40] *** p6bannerbot sets mode: +v reportable6

[14:45] *** pmurias joined
[14:45] *** p6bannerbot sets mode: +v pmurias

[14:47] *** cydf left
[14:53] *** pmurias left
[14:53] *** ferreira joined
[14:53] *** p6bannerbot sets mode: +v ferreira

[14:54] *** pmurias joined
[14:54] *** p6bannerbot sets mode: +v pmurias

[14:59] *** dogbert2_ joined
[15:00] *** p6bannerbot sets mode: +v dogbert2_

[15:01] *** pmurias left
[15:02] *** sno joined
[15:03] *** p6bannerbot sets mode: +v sno

[15:06] *** pmurias joined
[15:06] *** p6bannerbot sets mode: +v pmurias

[15:08] *** pmurias left
[15:11] *** yqt joined
[15:12] *** p6bannerbot sets mode: +v yqt

[15:18] *** curan left
[15:19] *** sno left
[15:19] *** pmurias joined
[15:19] *** p6bannerbot sets mode: +v pmurias

[15:20] <Geth> ¦ Blin: 8b8329f0eb | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/blin.p6

[15:20] <Geth> ¦ Blin: Use https link

[15:20] <Geth> ¦ Blin: 

[15:20] <Geth> ¦ Blin: There is a redirect now.

[15:20] <Geth> ¦ Blin: review: https://github.com/perl6/Blin/commit/8b8329f0eb

[15:25] *** zakharyas joined
[15:25] *** p6bannerbot sets mode: +v zakharyas

[15:27] *** kurahaupo_ joined
[15:28] *** p6bannerbot sets mode: +v kurahaupo_

[15:28] *** kurahaupo_ left
[15:29] *** kurahaupo_ joined
[15:29] *** kurahaupo left
[15:29] *** p6bannerbot sets mode: +v kurahaupo_

[15:39] *** scimon_ joined
[15:40] *** p6bannerbot sets mode: +v scimon_

[15:41] *** scimon left
[15:44] *** pmurias left
[15:45] *** sno joined
[15:46] *** p6bannerbot sets mode: +v sno

[15:52] <samebchase> Hi, Is there any tool that generates simple Perl6 project skeletons?

[15:54] <samebchase> e.g. something like `cargo new` or `lein new` and then I can just start writing code instead of creating files and writing the standard boilerplate

[15:54] <sena_kun> I sometimes use `Ddt` module, though I remember there were some issues with failing tests on installation, but at the end of the day it works just fine for me.

[15:54] <sena_kun> eco: Ddt

[15:54] <buggable> sena_kun, Ddt 'Distribution Development Tool': https://github.com/kalkin/Ddt 3 other matching results: https://modules.perl6.org/s/Ddt

[15:54] <sena_kun> samebchase, ^

[15:54] <samebchase> ah nice, I'll check it out

[15:55] <kensanata> cro also has the stub subcommand, if I remember correctly.

[15:56] <sena_kun> yes, but it's Cro-centric. also Comma can create stuff for you, but that's a bit of an overkill. :)

[15:58] <samebchase> Thanks a lot sena_kun, kensanata

[16:00] <samebchase> hmm some tests are failing

[16:01] <sena_kun> hmm, saw that coming. :S

[16:01] <sena_kun> you can still install it with `--force-test` iirc.

[16:01] <samebchase> sena_kun: or is there any documentation which deals with project structure? I could just do that instead of relying it on a tool

[16:01] <samebchase> yeah, noticed that option

[16:02] <sena_kun> tests failing are not always because of broken code, it might be must broken test or an outdated one... Didn't really dig into it, as it works just fine in my case. As for docs...

[16:02] <sena_kun> https://docs.perl6.org/language/modules.html or more specifically https://docs.perl6.org/language/modules.html#Preparing_the_module

[16:02] <sena_kun> I think

[16:03] <sena_kun> s/must/just a/

[16:03] <samebchase> alrighty, I'll take a look at those thanks!

[16:03] <samebchase> excellent. that is exactly what I need

[16:04] <sena_kun> \o/

[16:04] <rindolf> samebchase: there is mi6 too

[16:04] *** kdr23 joined
[16:04] *** p6bannerbot sets mode: +v kdr23

[16:06] <samebchase> rindolf: thanks I'll install that too

[16:06] <rindolf> samebchase: you're welcome 

[16:10] *** pmurias joined
[16:10] *** p6bannerbot sets mode: +v pmurias

[16:12] *** pmurias left
[16:18] *** avar left
[16:18] *** avar joined
[16:18] *** avar left
[16:18] *** avar joined
[16:18] *** p6bannerbot sets mode: +v avar

[16:19] *** p6bannerbot sets mode: +v avar

[16:21] *** zakharyas left
[16:27] *** lucasb joined
[16:28] *** p6bannerbot sets mode: +v lucasb

[16:29] *** robertle joined
[16:29] *** pmurias joined
[16:29] *** p6bannerbot sets mode: +v pmurias

[16:29] *** p6bannerbot sets mode: +v robertle

[16:31] *** kdr23 left
[16:36] *** pmurias left
[16:42] *** pmurias joined
[16:42] *** p6bannerbot sets mode: +v pmurias

[16:46] <lucasb> should doing 'zef uninstall Foo' clean everything?

[16:47] <lucasb> the installation seems to still remember the association I put in the 'provides' section in the META file, after uninstalling

[16:51] *** jmerelo joined
[16:51] *** pmurias left
[16:51] *** p6bannerbot sets mode: +v jmerelo

[16:52] *** pmurias joined
[16:52] *** p6bannerbot sets mode: +v pmurias

[16:52] *** domidumont left
[16:52] *** pmurias left
[16:57] *** pmurias joined
[16:57] *** p6bannerbot sets mode: +v pmurias

[16:57] *** molaf joined
[16:58] *** p6bannerbot sets mode: +v molaf

[16:59] *** vrurg left
[17:00] *** vrurg joined
[17:00] *** pmurias left
[17:01] *** p6bannerbot sets mode: +v vrurg

[17:03] *** robertle left
[17:06] *** domidumont joined
[17:06] *** p6bannerbot sets mode: +v domidumont

[17:10] *** molaf left
[17:21] *** domidumont left
[17:33] *** scimon_ left
[17:33] *** pmurias joined
[17:33] *** p6bannerbot sets mode: +v pmurias

[17:33] *** dakkar left
[17:47] *** pmurias left
[17:57] *** domidumont joined
[17:58] *** p6bannerbot sets mode: +v domidumont

[18:02] *** kensanata left
[18:05] *** pmurias joined
[18:05] *** p6bannerbot sets mode: +v pmurias

[18:08] *** tobs` left
[18:20] <lucasb> m: grammar { token TOP { <line>+ }; token line { .* } }.parse('')

[18:20] <camelia> rakudo-moar 50f0fce9b: OUTPUT: «(timeout)»

[18:20] <lucasb> I shouldn't be combining quantifiers in this way? what's wrong?

[18:22] <lucasb> hm, /(.*)+/

[18:23] <lucasb> m: '' ~~ /(.*)+/

[18:23] <camelia> rakudo-moar 50f0fce9b: OUTPUT: «MoarVM panic: Memory allocation failed; could not allocate 144128 bytes␤»

[18:28] <sena_kun> well, you shouldn't, I think. `<line>` will grab everything from its input and `+` on it will try to match `line` at least once... that's kind of useless regex if you ask me.

[18:28] <sena_kun> what do you want to achieve?

[18:28] <leont> line is fine matching 0 characters

[18:29] <leont> It turns out you can match 0 characters a lot of times ;-)

[18:29] <sena_kun> `+` on it tries to match 0 characters infinitely, I think, hence a panic.

[18:30] <sena_kun> m: say '' ~~ /(.*)+?/

[18:30] <camelia> rakudo-moar 50f0fce9b: OUTPUT: «｢｣␤ 0 => ｢｣␤»

[18:30] <sena_kun> m: say '' ~~ /(.*?)+?/

[18:30] <camelia> rakudo-moar 50f0fce9b: OUTPUT: «｢｣␤ 0 => ｢｣␤»

[18:30] <sena_kun> to make it non-greedy(i.e. working)

[18:32] *** pmurias left
[18:33] <lucasb> ok, makes sense. thanks sena_kun, leont

[18:34] <lucasb> sena_kun: just learning grammars. trying to match a list of lines :)

[18:34] <lucasb> I was gonna write 'token line { ^^ (.*) $$ }'

[18:35] <lucasb> or something like that, but then starting testing other ways

[18:35] <lucasb> *started

[18:36] <sena_kun> m: say "a\nb\nc" ~~ / [ .*? "\n" | .+ ] + /

[18:36] <camelia> rakudo-moar 50f0fce9b: OUTPUT: «｢a␤b␤c｣␤»

[18:37] *** pmurias joined
[18:37] *** p6bannerbot sets mode: +v pmurias

[18:38] *** rindolf left
[18:43] *** gregf_ left
[18:47] *** pecastro joined
[18:48] *** p6bannerbot sets mode: +v pecastro

[19:08] <jmerelo> Just a reminder that we still have a lot of free slots in the perl 6 advent calendar https://github.com/perl6/mu/blob/master/misc/perl6advent-2018/schedule

[19:08] <jmerelo> Please claim a day (or two)

[19:09] <jmerelo> Or I'll start to randomly make assignments to everyone who's present on the channel

[19:10] <jmerelo> Anyone with privs for adding authors please add all those who are not authorized in the Wordpress channel.

[19:26] *** squashable6 left
[19:26] *** sauvin left
[19:28] *** squashable6 joined
[19:28] *** ChanServ sets mode: +v squashable6

[19:29] *** p6bannerbot sets mode: +v squashable6

[19:30] *** |oLa| joined
[19:31] *** emerson left
[19:31] *** p6bannerbot sets mode: +v |oLa|

[19:33] *** molaf joined
[19:34] *** p6bannerbot sets mode: +v molaf

[19:39] *** rindolf joined
[19:40] *** p6bannerbot sets mode: +v rindolf

[19:46] *** jmerelo left
[19:46] *** pmurias left
[19:47] *** pmurias joined
[19:47] *** p6bannerbot sets mode: +v pmurias

[19:48] *** pmurias left
[19:49] *** Skarsnik joined
[19:50] *** p6bannerbot sets mode: +v Skarsnik

[19:50] *** domidumont left
[19:52] *** pmurias joined
[19:52] *** p6bannerbot sets mode: +v pmurias

[19:52] <Skarsnik> Hello again ^^

[19:54] *** pmurias left
[19:58] *** pmurias joined
[19:58] *** p6bannerbot sets mode: +v pmurias

[20:00] <Skarsnik> How much time take the Parse for people here? (just curious)

[20:00] <Skarsnik> *Stage parse

[20:01] * sena_kun tries out

[20:04] <sena_kun> 54 seconds.

[20:05] <Skarsnik> it said 40 for me, not sure what is best for this core speed or core numbers

[20:06] <sena_kun> not too bad, I think, assuming a desktop CPU(I am using a laptop one).

[20:07] <Skarsnik> i7 7700k 4.5Ghz x) (4 cores)

[20:08] <sena_kun> i7-7500U CPU @ 2.70GHz

[20:08] <Skarsnik> 4 cores also I think?

[20:09] <sena_kun> well, hyper-threading.

[20:09] <sena_kun> let me check again...

[20:09] <timotimo> stage parse in rakudo's core setting isn't able to use more than two cores, really

[20:09] <timotimo> one for all the code, one for spesh

[20:09] <sena_kun> >2 Cores, 4 Threads

[20:10] <Skarsnik> it's fun that the clock speed it not that much of a factor. you should have almost the double of my time

[20:10] <Skarsnik> I should check if the MB game boosted the cores to 4.8ghz for this

[20:12] <Skarsnik> timotimo, go fix it! (but I guess dispatching the parsing is not really doable)

[20:12] <timotimo> you mean multithreading it?

[20:12] <jnthn> Given the amount of memory that CORE.setting compilation uses, I suspect cache size and memory bandwidth are the limits

[20:13] <Skarsnik> hm

[20:13] <Skarsnik> timotimo, yes, and also use the cuda core of the GPU!

[20:13] <leont> Yeah that makes sense

[20:13] <timotimo> oof.

[20:13] <Skarsnik> I am curious

[20:14] <timotimo> i think the individual bits are quite fast, so memory transfer overhead to the gpu would more than outweigh any benefits you might get

[20:14] <Skarsnik> let's try building on the m2 ssd instead of the classic HDD

[20:14] <timotimo> maybe going through the speshlog (or some custom diagnostic) and seeing where rakudo is currently using nums instead of ints in the compiler could win us half a percent or so

[20:15] <timotimo> the core setting itself is only 2.2 megabytes of code

[20:15] <timotimo> and i'd think we pull it out all at once?

[20:17] <Skarsnik> I saved nothing switching to the ssd

[20:17] <Skarsnik> make sense ^^

[20:17] <timotimo> perhaps if you completely clean out all caches and buffers first

[20:17] *** trademark joined
[20:17] *** p6bannerbot sets mode: +v trademark

[20:18] <Skarsnik> I am testing on WSL so I am not sure if that change something or not

[20:19] *** rindolf left
[20:21] <Geth> ¦ modules.perl6.org: f7112f69b6 | (Lucas Buchala)++ (committed using GitHub Web editor) | lib/ModulesPerl6/DbBuilder/Dist/Source/CPAN.pm

[20:21] <Geth> ¦ modules.perl6.org: Remove stray regex quantifier (cpan?)

[20:21] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/f7112f69b6

[20:22] *** dct joined
[20:22] *** p6bannerbot sets mode: +v dct

[20:26] <trademark> I'm having some trouble with NativeCall::cglobal and wondering if someone might be able to help.

[20:27] <trademark> The problem seems to be with global pointers. cglobal(library,symbol,Pointer) seems to give an erroneous value

[20:27] <trademark> on the other hand, Pointer.new(cglobal(library,symbol,int64)) seems to work fine

[20:33] <lizmat> And yet another weekly hits the Net: https://p6weekly.wordpress.com/2018/11/19/2018-47-piensa-en-perl-6/

[20:36] *** dct left
[20:41] *** kurahaupo joined
[20:42] *** p6bannerbot sets mode: +v kurahaupo

[20:43] *** kurahaupo_ left
[20:44] <SmokeMachine> does anyone here knows the apple swift playground for iPad? I've been helping my niece to learn how to program with that. That's so fun that my niece didn't stop playing with that the last 3 days! So I was wandering: does anyone have any plan to make something like that for perl6?

[20:45] <lizmat> SmokeMachine: as soon as 6pad works on Safari, that should work out, no ?

[20:46] <SmokeMachine> lizmat: not the exercises and the code executor monster

[20:46] <lizmat> ah... ok, well 6pad would be a prerequisite, I assume ?

[20:47] <SmokeMachine> lizmat: this is what I mean: https://www.lifewire.com/apples-swift-playgrounds-help-kids-code-4053170

[20:48] <Skarsnik> trademark, what are you trying to map exactly?

[20:48] <Skarsnik> nativecallable6, extern int errno;

[20:48] <nativecallable6> Skarsnik, constant __NSConstantString is export := __NSConstantString_tag;␤our $errno is export = cglobal(LIB, "errno", int32);

[20:48] <SmokeMachine> lizmat: no... that don't need to run on the browser (the original doesn't...)

[20:49] <SmokeMachine> *doesn't

[20:49] <lucasb> SmokeMachine: you mean for mobile, iOS? Android?

[20:49] *** |oLa| left
[20:49] <trademark> this came up because I was trying to figure out why wrefresh(stdscr) didn't work correctly in NCurses.

[20:49] <SmokeMachine> lucasb: no... I mean a "game" that teaches how to code...

[20:51] <SmokeMachine> I mean: a "game" that "visually" teaches how to code

[20:52] <lucasb> ah, ok. I thought you meant mobile.

[20:52] <lucasb> this Swift Playground looks interesting, but I've never used

[20:53] <SmokeMachine> lucasb: the iPad swift playground is different from the mac swift playground... the mac one is a place to you try some code, the iPad one is a game to teach how to program...

[20:54] <lucasb> understood, thanks. I have zero experience with Apple things :)

[20:55] <Skarsnik> trademark, give more context, what is the signature of the variable, and do you need to alloc it?

[20:57] <trademark> stdscr is declared as 'extern WINDOW *' where WINDOW is some struct.

[20:57] <trademark> the NCurses module declares 'class WINDOW is repr<CPointer> {}'

[20:58] <SmokeMachine> lucasb: take a look: https://www.youtube.com/watch?v=IoMudbI_CMc

[20:58] <trademark> and then the stdscr function returns a the contents of a variable bound to cglobal(library,'stdscr',WINDOW)

[20:58] <trademark> stdscr should be initialized by the library when initscr() is called

[20:59] <trademark> from playing around with it, it seems that stdscr is correctly set by the library (subsequent calls to other functions which use the value work correctly)

[20:59] <trademark> but the pointer value returned by stdscr seems to be erroneous.

[20:59] <Skarsnik> hm

[21:00] <Skarsnik> This is weird. is stdscr also in ncurse?

[21:01] <trademark> there's a stdscr function in the NCurses module which indirectly exposes the stdscr extern variable

[21:02] <trademark> I was playing around trying to make a minimal example (I don't know how to write C shared libraries, so I may have made a mistake) and it seems that the problem comes up when you have an extern pointer type

[21:02] <Skarsnik> yeah but I mean in ncurse, not the module?

[21:03] <Skarsnik> external pointer are fine

[21:03] <Skarsnik> it's probably the binding that cause issue

[21:03] <trademark> There are three stdscrs there's the variable $stdscr in the NCurses module which is just a cglobal proxy pointing to the stdscr variable in the ncurses module

[21:04] <trademark> and then the stdscr() function in the NCurses module jut exposes that $stdscr variable.

[21:04] <Skarsnik> try doing my $stdscr = cglobal(stuff, "stdscr", Pointer);

[21:04] <trademark> Same problem

[21:04] <trademark> that was the first thing I tried

[21:05] <Skarsnik> nativecallable6, extern WINDOW *stdscr;

[21:05] <nativecallable6> Skarsnik, https://gist.github.com/ef673c60f38bae306ef6dbd82b624bb7

[21:05] <Skarsnik> of course it does not know the WINDOW type xD

[21:05] <Skarsnik> nativecallable6, extern void *stdscr;

[21:05] <nativecallable6> Skarsnik, constant __NSConstantString is export := __NSConstantString_tag;␤our $stdscr is export = cglobal(LIB, "stdscr", Pointer);

[21:09] <pmurias> SmokeMachine: the cool looking game part seems the hard part in the Camelia's Perl 6 Playgrounds

[21:09] <yoleaux> 13:29Z <lizmat> pmurias: https://github.com/perl6/marketing/issues/22

[21:09] <SmokeMachine> pmurias: yes...

[21:11] <SmokeMachine> pmurias: it would be great if some one had made the cool looking game part as a rest api so any language could use...

[21:12] *** yqt left
[21:14] <Skarsnik> trademark, it's kinda to late for me to think much, but try to contact NCurse p6 module author maybe?

[21:16] * pmurias doubts writing the game part in NCurses will attract kids

[21:17] *** Kaiepi left
[21:18] *** Kaiepi joined
[21:19] *** p6bannerbot sets mode: +v Kaiepi

[21:19] <trademark> I can try that, but I'm still not sure what I'm missing about how this is supposed to work (it still doesn't look like it's an NCurses problem to me).

[21:22] <pmurias> lizmat: re github issue I saw that but it seems to be targeted at the most commonly used js technologies

[21:29] <lizmat> ok, I thought you might want to know about it...  :-)

[21:38] <Skarsnik> .tell Zoffix is that possible to have your marketing stuff source for 6.d so we can do translated one?

[21:38] <yoleaux> Skarsnik: I'll pass your message to Zoffix.

[21:39] *** random_yanek left
[21:40] <AlexDaniel> Skarsnik: I think it's here: https://github.com/perl6/marketing/tree/master/Brochures/6.d-release-brochure-1541379592

[21:43] <lucasb> m: my $x = 0; my \p = Proxy.new(STORE=>{...},FETCH=>{$x++;True}); p.gist; say $x

[21:43] <camelia> rakudo-moar 50f0fce9b: OUTPUT: «7␤»

[21:43] *** Celelibi left
[21:43] <pmurias> lizmat: guess, it's a goal to be on the survery one day ;)

[21:43] <pmurias> * survey

[21:43] <lizmat> indeed  :-)

[21:43] <Skarsnik> 7 wow

[21:43] <Skarsnik> lucasb, this look weird ^^

[21:43] <lucasb> ^^ Q: does my eval means that it takes 7 fetchs to .gist a Bool value?

[21:44] <trademark> OK, here's a simpler example that might make my issue more clear:

[21:45] <trademark> in the c code: "int a; extern int *pos = &a; void setpos() { a = 3; }; int getx(int *t) { return *t; }"

[21:46] <trademark> and in perl6: 'my $pos := cglobal(LIB,"pos",Pointer); sub setpos is native{LIB} {*}(); sub getx(Pointer) returns int32 is native{LIB} {*}($pos).say;'

[21:46] <Skarsnik> why getx get a parameter ? ^^

[21:46] <lizmat> lucasb: p.gist goes through a lot of methods, and each time "self" is needed, that's a FETCH

[21:47] <trademark> because the problem shows up on the round-trip through perl.

[21:48] <lucasb> lizmat: I tried other values, they reach 5. does it means bool values takes more fetchs to .gist than others?

[21:48] <lucasb> m: my $x = 0; my \p = Proxy.new(STORE=>{...},FETCH=>{$x++;42}); p.gist; say $x

[21:48] <camelia> rakudo-moar 50f0fce9b: OUTPUT: «5␤»

[21:48] <lucasb> *most* other common types (didn't tried all :)

[21:49] <lucasb> optimization opportunity? I wouldn't expect Bool values to need more :)

[21:50] <lucasb> I mean, 5 vs 7. ok. But if I print a 100-elem list, that's 500 vs 700, right? Ok, maybe it doesn't make difference :)

[21:50] <lizmat> lucasb: benchmark  :-)

[21:51] <lucasb> where is benchmarkable? :)

[21:51] <Skarsnik> I think there is a bot for that

[21:51] *** random_yanek joined
[21:52] <Skarsnik> benchable6

[21:52] <lucasb> ah

[21:52] *** p6bannerbot sets mode: +v random_yanek

[21:53] *** thundergnat left
[21:55] *** Celelibi joined
[21:56] *** p6bannerbot sets mode: +v Celelibi

[22:06] *** rindolf joined
[22:07] *** p6bannerbot sets mode: +v rindolf

[22:11] *** trademark left
[22:23] *** kerframil left
[22:26] *** holyghost joined
[22:27] *** p6bannerbot sets mode: +v holyghost

[22:28] <holyghost> .

[22:29] *** lucasb left
[22:34] <holyghost> hi, BTW

[22:35] *** jargan joined
[22:36] *** andrzejku_ joined
[22:36] *** p6bannerbot sets mode: +v jargan

[22:36] *** p6bannerbot sets mode: +v andrzejku_

[22:37] *** sergot_ joined
[22:37] *** p6bannerbot sets mode: +v sergot_

[22:38] *** CindyLin1 joined
[22:38] *** TimToady_ joined
[22:38] *** pmurias_ joined
[22:38] *** p6bannerbot sets mode: +v pmurias_

[22:38] *** p6bannerbot sets mode: +v CindyLin1

[22:39] *** bolangi_ joined
[22:39] *** movl_ joined
[22:39] *** p6bannerbot sets mode: +v TimToady_

[22:39] *** p6bannerbot sets mode: +v bolangi_

[22:39] *** abraxxa left
[22:39] *** pmurias left
[22:39] *** sena_kun left
[22:39] *** sergot left
[22:39] *** telex left
[22:39] *** CindyLinz left
[22:39] *** Bucciarati left
[22:39] *** andrzejku left
[22:39] *** jast left
[22:39] *** TimToady left
[22:39] *** tobs left
[22:39] *** Celelibi left
[22:39] *** bolangi left
[22:39] *** movl left
[22:39] *** mattp_ left
[22:39] *** tharkun left
[22:39] *** BucciaratiVEVO joined
[22:39] *** jargan is now known as jast

[22:39] *** p6bannerbot sets mode: +v movl_

[22:40] *** mattp_ joined
[22:40] *** tobs joined
[22:40] *** p6bannerbot sets mode: +v tobs

[22:40] *** andrzejku_ is now known as andrzejku

[22:40] *** p6bannerbot sets mode: +v BucciaratiVEVO

[22:40] *** Celelibi joined
[22:40] *** p6bannerbot sets mode: +v mattp_

[22:41] *** p6bannerbot sets mode: +v Celelibi

[22:41] *** pmurias_ left
[22:42] *** discoD joined
[22:42] *** abraxxa joined
[22:42] *** p6bannerbot sets mode: +v discoD

[22:42] *** p6bannerbot sets mode: +v abraxxa

[22:43] *** telex joined
[22:43] *** tharkun joined
[22:44] *** p6bannerbot sets mode: +v telex

[22:44] *** p6bannerbot sets mode: +v tharkun

[22:51] *** rindolf left
[23:05] *** huf left
[23:08] *** random_yanek left
[23:15] *** huf joined
[23:15] <holyghost> I think I have Mathx-Stat all 9 tests working

[23:16] *** p6bannerbot sets mode: +v huf

[23:19] *** lichtkind joined
[23:20] *** huf left
[23:20] *** p6bannerbot sets mode: +v lichtkind

[23:22] <AlexDaniel> .tell lucasb yeah, that's probably the case

[23:22] <yoleaux> AlexDaniel: I'll pass your message to lucasb.

[23:25] <lichtkind> is there a clue when rakudo will be released in december? thanks

[23:26] <El_Che>  releasable6: status

[23:26] <El_Che> releasable6: status

[23:26] <releasable6> El_Che, Next release will happen when it's ready. 3 blockers. 79 out of 163 commits logged (⚠ 1 warnings)

[23:26] <releasable6> El_Che, Details: https://gist.github.com/aeb0aa8d4bc4b006058d7385521462a5

[23:27] <AlexDaniel> lichtkind: December?! Where's your optimism? :)

[23:27] *** huf joined
[23:27] <lichtkind> AlexDaniel so its next week?

[23:28] <AlexDaniel> lichtkind: so 2018.11 will be released this week or so

[23:28] *** p6bannerbot sets mode: +v huf

[23:28] <AlexDaniel> hopefully soon, but the switch to v6.d is a bit difficult

[23:28] <lichtkind> thanks

[23:30] <AlexDaniel> samcv: by the way, currently it looks like we don't have any moar blockers

[23:31] <AlexDaniel> samcv: so I hope you have time this week

[23:32] <Skarsnik> You should choose each month 5-10 bugs randomly to be blocker x)

[23:32] <AlexDaniel> Skarsnik: yeah, with R#131003 randomly selected in the first month, then a year or two without releases :P

[23:32] <AlexDaniel> RT#131003

[23:32] <synopsebot_> RT#131003 [open]: https://rt.perl.org/Ticket/Display.html?id=131003 [SEVERE][SEGV] Heap corruption when using Gumbo

[23:33] <Skarsnik> lol

[23:33] <Skarsnik> The goal is (in my mind) will be to avoid "Oh it's lta I will do this later" then 2-3 years you still have these lta bugs

[23:34] <Skarsnik> AlexDaniel, did you retest this with last version of Gumbo?

[23:35] <Skarsnik> I removed lot of nativecast call, maybe it's the culprit? xD

[23:35] <AlexDaniel> Skarsnik: yeah, still happens

[23:35] <Skarsnik> Nooo

[23:35] <AlexDaniel> we have Squashathons for these LTA things :)

[23:36] <AlexDaniel> oh also you meant LHF I think

[23:36] <Skarsnik> yeah too

[23:39] <Skarsnik> I know it's not very 0fun to force people to look at bug instead of working on new stuff, but it's probably better overall

[23:40] <timotimo> oh, it is 0fun

[23:40] <AlexDaniel> hahaha

[23:40] <timotimo> but we strive towards -Ofun :P

[23:40] <AlexDaniel> .oO( -0fun ? Can't be worse than negative zero fun, right? )

[23:41] <Skarsnik> now work on 131003 !

[23:41] <timotimo> RT#131003

[23:41] <AlexDaniel> m: say -0e0 # \o/

[23:41] <camelia> rakudo-moar 50f0fce9b: OUTPUT: «-0␤»

[23:41] <synopsebot_> RT#131003 [open]: https://rt.perl.org/Ticket/Display.html?id=131003 [SEVERE][SEGV] Heap corruption when using Gumbo

[23:41] <timotimo> oh lord

[23:42] <Skarsnik> does not always crash the same, for more fun!

[23:43] <AlexDaniel> oh, just noticed that it was bisected

[23:43] <AlexDaniel> Geth: ver https://github.com/rakudo/rakudo/commit/40a953f5d9f5c661d8cf9b043643002d348a2000

[23:43] <Geth> AlexDaniel, version bump brought in these changes: https://github.com/perl6/nqp/compare/2016.03-50-g512c9a1...2016.03-57-gbdb13a2

[23:43] <AlexDaniel> Geth: ver https://github.com/perl6/nqp/commit/bdb13a2cd5df01cc72bbf08434dbf99fc25a411d

[23:43] <Geth> AlexDaniel, version bump brought in these changes: https://github.com/MoarVM/MoarVM/compare/2016.03-84-g4afd7b6...2016.03-104-g10d3971

[23:44] <AlexDaniel> so it was bisected to the rakudo commit, but not to a change in moar

[23:45] <AlexDaniel> it won't necessarily help, in fact usually it doesn't…

[23:45] <AlexDaniel> but maybe it's worth a try

[23:46] <Skarsnik> I think you bisected it for moar too?

[23:46] *** pecastro left
[23:46] <Skarsnik> but it was like a huge commit with lot of change

[23:47] <buggable> New CPAN upload: Mathx-Stat-0.2.1.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[23:47] <AlexDaniel> which one?

[23:48] *** Sgeo joined
[23:48] <AlexDaniel> I mean, right, it wouldn't be me if I didn't bisect the crap out of it

[23:48] <AlexDaniel> and I recall doing so, but there's no comment?

[23:49] *** p6bannerbot sets mode: +v Sgeo

[23:53] *** Skarsnik left
[23:57] <buggable> New CPAN upload: Mathx-Stat-0.2.2.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[23:59] <holyghost> ^-- all tests work (8 of then with Bayes, conditionale prob etc)

