[00:03] *** aborazmeh joined
[00:03] *** aborazmeh left
[00:03] *** aborazmeh joined
[00:11] *** markoong left
[00:19] *** kurahaupo left
[00:19] *** kurahaupo joined
[00:22] *** kurahaupo_ joined
[00:24] *** kurahaupo left
[00:26] *** kurahaupo_ left
[00:38] *** kurahaupo joined
[00:39] *** lookatme joined
[00:48] *** itaipu left
[00:51] *** stmuk joined
[00:51] *** kurahaupo_ joined
[00:54] *** kurahaupo left
[00:54] *** stmuk_ left
[01:00] *** kurahaupo_ left
[01:00] *** kurahaupo joined
[01:04] *** kurahaupo_ joined
[01:06] *** kurahaupo left
[01:15] *** kurahaupo_ left
[01:15] *** kurahaupo joined
[01:16] *** kurahaupo_ joined
[01:19] *** kurahaupo left
[01:28] *** raschipi left
[01:31] *** molaf_ joined
[01:35] *** molaf left
[01:46] *** ilbot3 left
[01:56] *** ilbot3 joined
[01:56] *** ChanServ sets mode: +v ilbot3

[02:01] *** espadrine left
[02:20] *** MilkmanDan left
[02:21] *** MilkmanDan joined
[02:24] *** ufobat_ joined
[02:27] *** ufobat left
[02:30] *** Todd joined
[02:31] <Todd> Hi All,  I have a question about modules:  http://vpaste.net/HG7wd

[02:48] <geekosaur> I take it you did not understanbd my answer?

[02:48] <geekosaur> "unit module" has nothing to do with import or export

[02:49] <geekosaur> Do you understand what a namespace is?

[02:49] *** lizmat left
[02:49] <Todd> Are you Brandon?   Namesapce means nothing to me, unfortunately.   What I really would like to be able to do is `use RunNoShell < RunNoShell RunNoShellErr >;`

[02:50] <Todd> When I say "import", I mean "use xxx".  does Import mean shomethign else in Perl?

[02:52] <Todd> I used the word "import" ans the word "export" is used my my module sub declarations.

[02:59] <geekosaur> I am replying to your mail now

[02:59] <geekosaur> "use" does two things

[02:59] <geekosaur> one is "require", the other is "import"

[02:59] <geekosaur> "import" does not mean load from a file, it means copy a name from one namespace to another.

[02:59] <geekosaur> "require" loads from a file.

[03:00] <geekosaur> Uusally, your file loads things into its own private namespace with a "unit module" declaration. In this case, you need to either import them afterward, or use a name with the module's namespace (Foo::Bar)

[03:01] <Todd>  What I really would like to be able to do is `use RunNoShell < RunNoShell RunNoShellErr >;`

[03:01] <geekosaur> If the file doesn;t declare itself as a separate module, it just dumps its declarations directly into your namespace; there is nothing to import afterward

[03:02] <geekosaur> then "unit module RunNoShell;" and mark those as "is export"

[03:02] <geekosaur> note that if you *also* want the long names with namespaces, you also need "our sub" instead of just "sub"

[03:04] <geekosaur> that is, with  `use RunNoShell < RunNoShell RunNoShellErr >; `, you get RunNoShell but not RunNoShell::RunNoShell. Unless you declared "out sub RunNoShell"

[03:04] <geekosaur> er, "our sub RunNoShell"

[03:07] <geekosaur> (And yes, I'm Brandon.)

[03:07] <Todd> short name space will do fine.  If I can do `use RunNoShell < RunNoShell RunNoShellErr >;`, I can easily do a search of my code to figure out where the funny named sub came from.  

[03:07] <geekosaur> so there;s a bunch of different things going on, and some confusion because languages like Python don't separate 'require' from 'import'

[03:08] <Todd> I eally, really want ot use `use RunNoShell < RunNoShell RunNoShellErr >;`.  What do I have to do to my pm6 to be able to use that syntax?

[03:08] <geekosaur> [04 03:02:07] <geekosaur> then "unit module RunNoShell;" and mark those subs as "is export"

[03:08] <Todd> testing

[03:12] <Todd> # perl6 -I. -e 'use PrintColors< PrintRed PrintGreen>; PrintGreen( "Green\n" );' ===SORRY!=== Error while compiling -e Confused at -e:1 ------> use PrintColors‚èè< PrintRed PrintGreen>; PrintGreen( "Gre

[03:12] <Todd> :'(

[03:12] *** lizmat joined
[03:12] <Todd> here is the module: http://vpaste.net/w2iAD

[03:13] <geekosaur> you need a space

[03:13] <geekosaur> withoutt the space, it looks like you are subscripting something

[03:14] <geekosaur> foo<x> looks up key <x> in an Associative (Hash, and some other things) named foo

[03:14] <Todd> [19:59] <geekosaur> "use" does two things

[03:14] <Todd> # perl6 -I. -e 'use PrintColors < PrintRed PrintGreen >; PrintGreen( "Green\n" );' ===SORRY!=== Error while compiling -e Error while importing from 'PrintColors': no EXPORT sub, but you provided positional argument in the 'use' statement at -e:1 ------> use PrintColors < PrintRed PrintGreen >‚èè; PrintGreen( "Green\n" );

[03:14] <geekosaur> mrr, right, some export machinery still needed

[03:15] <geekosaur> hm, no, should be automatic

[03:15] <geekosaur> this isn;t perl 5, you don;t need to use Exporter

[03:15] <Todd> where ????!!!! and how ???

[03:15] <geekosaur> oh

[03:16] <geekosaur> hm, no, am missing something still

[03:16] <Todd> You have my paste pate of the module.  Am I missing something?

[03:16] <geekosaur> I'm missing something

[03:19] * geekosaur is installing stuff... had to nuke old p6 install, now missing modules

[03:19] <Todd> adding `our` before the sub naem does not help

[03:19] *** lizmat left
[03:19] <Todd> been there.  no problem.  had it happen to me too.

[03:20] <geekosaur> no, "our" means something different, it means being able to use the full name

[03:20] <geekosaur> not about importing the short name

[03:20] <Todd> removing

[03:20] <geekosaur> oh crap

[03:20] <geekosaur> this is not yet implemented

[03:20] <geekosaur> you can import specific tags but not specific subs yet

[03:21] <geekosaur> "Note there currently is no way for the user to import a single object if the module author hasn't made provision for that, and it is not an easy task at the moment (see RT #127305). One way the author can provide such access is to give each export trait its own unique tag. (And the tag can be the object name!)"

[03:21] <synopsebot> RT#127305 [open]: https://rt.perl.org/Ticket/Display.html?id=127305 EXPORT ignored when unit module/package is used

[03:21] <Todd> no wonder!   I will stick with 

[03:21] <Todd> use PrintColors;  # qx[ PrintRed  PrintGreen PrintBlue PrintErr PrintRedErr PrintGreenErr PrintBlueErr ]

[03:21] <Todd> for now.

[03:22] <Todd> That way a search will find it and I won't go nuts trying to figure out where a sub came from.

[03:22] *** Schepeers left
[03:22] <geekosaur> so you'd have to do e.g. `use PrintColors <:PrintRed>;` and then the sub us `sub PrintRed($Str) is export(:PrintRed) ...`

[03:22] <geekosaur> which is a biit silly

[03:23] <Todd> Wow.  Thank you for all the marvelous help!  This is nor Perl 5 (not grumpy enough)

[03:23] <Todd> signing off

[03:23] <geekosaur> I remember the discussion abotu this now, it's hard to do right because it uses sub-namespaces which are hard to manipulate directy

[03:24] *** lizmat joined
[03:25] *** Schepeers joined
[03:28] *** Schepeers left
[03:29] *** lookatme left
[03:29] *** lookatme joined
[03:32] *** Schepeers joined
[03:32] *** Schepeers left
[03:33] *** Schepeers joined
[03:54] *** Schepeers left
[03:55] *** zpc left
[03:56] *** Schepeers joined
[04:18] *** Schepeers left
[04:19] *** lizmat left
[04:19] *** aborazmeh left
[04:19] *** Schepeers joined
[04:20] *** molaf_ left
[04:20] *** lizmat joined
[04:21] *** Schepeers left
[04:22] *** Schepeers joined
[04:33] *** wamba joined
[04:35] *** lizmat left
[04:39] *** molaf_ joined
[04:40] *** [Sno] left
[04:52] *** curan joined
[04:56] *** psychoslave joined
[04:57] *** Todd left
[05:01] *** lizmat joined
[05:04] <buggable> New CPAN upload: PDF-Class-0.2.3.tar.gz by WARRINGD http://modules.perl6.org/dist/PDF::Class:cpan:WARRINGD

[05:10] *** skids left
[05:14] *** HaraldJoerg joined
[05:18] *** jmerelo joined
[05:20] *** lizmat left
[05:22] *** psychoslave left
[05:34] *** domidumont joined
[05:41] *** domidumont left
[05:42] *** domidumont joined
[05:46] *** domidumont left
[05:54] <buggable> New CPAN upload: Acme-Truth-0.0.1.tar.gz by TISON https://cpan.metacpan.org/authors/id/T/TI/TISON/Perl6/Acme-Truth-0.0.1.tar.gz

[05:57] *** sno joined
[06:00] *** xtreak joined
[06:02] *** lizmat joined
[06:03] *** domidumont joined
[06:11] *** mscha left
[06:13] *** psychoslave joined
[06:17] *** BenGoldberg left
[06:25] *** jmerelo left
[06:31] *** andrzejku joined
[06:57] *** psychoslave left
[06:58] *** robertle_ joined
[07:02] *** lizmat_ joined
[07:04] *** lizmat left
[07:05] *** jmerelo joined
[07:17] *** Schepeers left
[07:19] *** rindolf joined
[07:29] *** psychoslave joined
[07:30] *** andrzejku left
[07:31] *** andrzejku joined
[07:32] *** darutoko joined
[07:35] *** zakharyas joined
[07:37] *** robertle left
[07:48] *** markoong joined
[07:49] *** xtreak left
[07:52] <Geth> ¬¶ doc: 736e101dc7 | (JJ Merelo)++ | doc/Language/nativecall.pod6

[07:52] <Geth> ¬¶ doc: TWEAK ‚Üí BUILD closes #1903

[07:52] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/736e101dc7

[07:52] <synopsebot> Link: https://doc.perl6.org/language/nativecall

[07:54] *** Schepeers joined
[07:58] *** Schepeers left
[07:59] *** Schepeers joined
[08:04] *** Schepeers left
[08:05] *** lizmat_ left
[08:05] *** scimon joined
[08:06] *** dogbert17 left
[08:08] *** lizmat joined
[08:09] *** lizmat_ joined
[08:13] *** lizmat left
[08:13] *** lizmat_ left
[08:14] *** lizmat joined
[08:14] *** xtreak joined
[08:18] *** lizmat_ joined
[08:18] *** lizmat left
[08:18] *** lizmat_ is now known as lizmat

[08:20] *** dakkar joined
[08:21] *** dakkar left
[08:23] *** dakkar joined
[08:35] *** dakkar left
[08:42] *** Schepeers joined
[08:49] *** dakkar joined
[08:50] *** Schepeers left
[08:54] *** Schepeers joined
[08:57] *** Kaypie joined
[08:57] *** Kaiepi left
[08:59] *** athenot joined
[09:02] <Geth> ¬¶ whateverable: 8b639dc7b1 | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/lib/Testable.pm6

[09:02] <Geth> ¬¶ whateverable: Print IRC test server host and port

[09:02] <Geth> ¬¶ whateverable: 

[09:02] <Geth> ¬¶ whateverable: So that you can connect to it with any irc client and see what is

[09:02] <Geth> ¬¶ whateverable: happening with the bot.

[09:02] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/8b639dc7b1

[09:02] <Geth> ¬¶ whateverable: 62a8d0d126 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[09:02] <Geth> ¬¶ whateverable: Move pid printing to Testable.pm6

[09:02] <Geth> ¬¶ whateverable: 

[09:02] <Geth> ¬¶ whateverable: Previously it was not possible to get a pid of a process, but newer

[09:02] <Geth> ¬¶ whateverable: rakudos have a way to do it.

[09:02] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/62a8d0d126

[09:06] *** Schepeers left
[09:08] *** Schepeers joined
[09:13] <AlexDaniel> squashable6: log 2018-06-02

[09:13] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/4c81dac1e4bace77b7220cc3e4e3344b

[09:22] *** w_richard_w left
[09:25] *** wamba left
[09:25] *** kurahaupo_ is now known as kurahaupo

[09:54] <buggable> New CPAN upload: Acme-Truth-0.0.2.tar.gz by TISON http://modules.perl6.org/dist/Acme::Truth:cpan:TISON

[10:07] *** psychoslave left
[10:09] *** psychoslave joined
[10:14] *** eythian_ joined
[10:14] *** eythian_ left
[10:14] *** eythian_ joined
[10:15] *** araraloren joined
[10:15] *** sunnavy_ joined
[10:15] *** KotH_ joined
[10:16] *** tony-o_ joined
[10:16] *** perlawhi1l joined
[10:18] *** MilkmanD1n joined
[10:19] *** tobs_ joined
[10:19] *** Voldenet_ joined
[10:19] *** Mithaldu` joined
[10:20] *** MilkmanDan left
[10:20] *** Mithaldu left
[10:20] *** spider-mario left
[10:20] *** eythian left
[10:20] *** irco left
[10:20] *** go|dfish left
[10:20] *** Voldenet left
[10:20] *** sunnavy left
[10:20] *** KotH left
[10:20] *** tobs left
[10:20] *** ingy left
[10:20] *** perlawhirl left
[10:20] *** tony-o left
[10:20] *** tobs_ is now known as tobs

[10:20] *** Mithaldu` is now known as Mithaldu

[10:22] *** squashable6 left
[10:23] *** squashable6 joined
[10:23] *** greppable6 left
[10:23] *** coverable6 left
[10:23] *** coverable6 joined
[10:23] *** greppable6 joined
[10:23] *** quotable6 left
[10:23] *** committable6 left
[10:23] *** bisectable6 left
[10:24] *** salva_ joined
[10:27] *** ingy joined
[10:28] *** go|dfish joined
[10:28] *** spider-mario joined
[10:33] <jkramer> I implemented a solution for this challenge: https://www.reddit.com/r/dailyprogrammer/comments/6s70oh/2017087_challenge_326_easy_nearest_prime_numbers/

[10:33] <jkramer> My code: https://paste.pound-python.org/raw/cYMVdLr3AUNwfXJooZPn/

[10:34] <jkramer> No I wonder why my brute-force solution is so fast, especially for the last huge number. I also implemented it in haskell and it basically takes forever

[10:34] <jkramer> Is there some hidden implicit optimisation going on or something? I'm really curious

[10:37] <Geth> ¬¶ doc: d03a07cc0b | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[10:37] <Geth> ¬¶ doc: Add example on how to use Inline::Perl5

[10:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d03a07cc0b

[10:37] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[10:42] <Geth> ¬¶ doc: bc59e75b99 | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[10:42] <Geth> ¬¶ doc: Everything in Perl 6 is an object

[10:42] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/bc59e75b99

[10:43] <colomon> jkramer: I don‚Äôt think so

[10:43] <colomon> is-prime is fast

[10:51] <Geth> ¬¶ doc: 14682928ba | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[10:51] <Geth> ¬¶ doc: &::('foo') -> ::('&foo')

[10:51] <Geth> ¬¶ doc: 

[10:51] <Geth> ¬¶ doc: Which I think makes more sense in this context, when you also say that you

[10:51] <Geth> ¬¶ doc: can create a `my &foo` to allow for run-time changing of subs.

[10:51] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[10:51] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/14682928ba

[10:56] *** athenot left
[10:58] *** athenot joined
[11:00] *** athenot left
[11:00] *** andrzejku left
[11:01] *** andrzejku joined
[11:01] <andrzejku> araraloren: hey :D it is time to move from github

[11:01] <andrzejku> github sold

[11:01] <araraloren> yeah, I know

[11:02] <El_Che> Does someone at MIcrosoft dares tell their CEO Satya Nadella that he bought the hosting and infrastructure but not the code of the Github users?

[11:03] <araraloren> haha

[11:04] <lizmat> weekly: http://news.perlfoundation.org/2018/06/tpc-newsletter-06022018.html

[11:04] <notable6> lizmat, Noted!

[11:04] <El_Che> I reserved my gitlab username, you never know

[11:05] <andrzejku> El_Che: maybe they bought infrastructure and now they can control our code but they didn't bought my heart!

[11:05] <El_Che> andrzejku: they don't need to buy it, killing it is enough :)

[11:06] <El_Che> I look forward the the daily mail asking me I want to be part of a random user's network at Github

[11:06] *** lumimies left
[11:12] *** itaipu joined
[11:12] <Geth> ¬¶ doc: 8341bcf70a | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[11:12] <Geth> ¬¶ doc: The comma makes the List, *not* the parentheses

[11:12] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/8341bcf70a

[11:12] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[11:14] <Geth> ¬¶ doc: e0ca4a2ada | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[11:14] <Geth> ¬¶ doc: The colon means a named variable, *not* a Pair

[11:14] <Geth> ¬¶ doc: 

[11:14] <Geth> ¬¶ doc: Specifying a Pair would be a Positional, and thus not match the signature.

[11:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e0ca4a2ada

[11:16] <Geth> ¬¶ doc: d9eae798a7 | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[11:16] <Geth> ¬¶ doc: Remove superstitious parentheses

[11:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d9eae798a7

[11:20] *** Voldenet_ is now known as Voldenet

[11:20] *** Voldenet left
[11:20] *** Voldenet joined
[11:20] *** committable6 joined
[11:20] *** ChanServ sets mode: +v committable6

[11:21] *** jmerelo left
[11:26] <Geth> ¬¶ doc: 08178e4e37 | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[11:26] <Geth> ¬¶ doc: Hopefully clarify given / when a bit better

[11:26] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/08178e4e37

[11:26] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[11:29] <Geth> ¬¶ doc: b3b8dd1215 | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[11:29] <Geth> ¬¶ doc: Indicate that .lines will auto-chomp

[11:29] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b3b8dd1215

[11:41] *** domidumont left
[11:42] *** salva_ left
[11:43] *** Xiti joined
[11:44] <Geth> ¬¶ doc: f665d61fee | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[11:44] <Geth> ¬¶ doc: Add caveat about features supported by :P5

[11:44] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f665d61fee

[11:44] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[11:45] *** HaraldJoerg left
[11:45] *** HaraldJoerg joined
[11:55] <Geth> ¬¶ doc: cbb1ccd89b | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[11:55] <Geth> ¬¶ doc: Add concept of stubbing a class should you need to

[11:55] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/cbb1ccd89b

[11:55] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[11:58] *** eliasr joined
[12:03] <Geth> ¬¶ doc: 19dd3226fa | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[12:03] <Geth> ¬¶ doc: Using native integers is the closest thing to "use integer"

[12:03] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/19dd3226fa

[12:03] <Geth> ¬¶ doc: 069c31cb26 | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[12:03] <Geth> ¬¶ doc: Don't mention @INC, but say "use lib" acts mostly the same

[12:03] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/069c31cb26

[12:04] <Geth> ¬¶ doc: 179aeb8600 | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[12:04] <Geth> ¬¶ doc: Mention .^mro with "use mro"

[12:04] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/179aeb8600

[12:06] <Geth> ¬¶ doc: 36135dbb8c | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[12:06] <Geth> ¬¶ doc: Give example of native integers

[12:06] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/36135dbb8c

[12:06] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[12:06] *** jmerelo joined
[12:06] <El_Che> jmerelo: is the grant over?

[12:07] <jmerelo> El_Che: officially, yes.

[12:07] <jmerelo> It was only two months. Preparing reports and stuff now.

[12:07] <El_Che> was it a good experience?

[12:08] *** mahafyi joined
[12:08] <jmerelo> El_Che: really good on all counts. Personal, technical, everything. 

[12:09] <jmerelo> El_Che: ... gastronomical...

[12:10] <El_Che> :)

[12:10] <El_Che> good to hear

[12:10] <El_Che> it looked from far, that from time ti time you were David against a Goliath stream of issues

[12:11] <jmerelo> El_Che: Well, you have to fight Goliath stone by stone.

[12:11] *** AlexDaniel left
[12:12] *** AlexDaniel joined
[12:12] <jmerelo> El_Che: roughly, there's 1 new issue a day. The problem was the backlog created by mid-2017, was not being cleared.

[12:12] <jkramer> "Cowardly refusing to permutate more than 20 elements, tried 25" :(

[12:13] <jkramer> m: say (1..25).permutations.elems

[12:13] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´Cowardly refusing to permutate more than 20 elements, tried 25‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:13] *** raschipi joined
[12:14] *** KotH_ is now known as KotH

[12:14] <jmerelo> jkramer: well, it's a NP-hard problem, if I'm correct. Makes sense... It's 25! = 1.551121e+25

[12:14] *** pmurias joined
[12:14] <jmerelo> P: say (1..9).permutations.elems

[12:14] <Geth> ¬¶ doc: a91474a2e5 | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[12:14] <Geth> ¬¶ doc: Clarify chompedness vs non-chompedness

[12:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/a91474a2e5

[12:14] <jmerelo> m: say (1..9).permutations.elems

[12:14] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´362880‚ê§¬ª

[12:14] <jmerelo> m: say (1..10).permutations.elems

[12:14] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´3628800‚ê§¬ª

[12:14] <jmerelo> m: say (1..11).permutations.elems

[12:14] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´39916800‚ê§¬ª

[12:15] <jmerelo> m: say (1..12).permutations.elems

[12:15] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´479001600‚ê§¬ª

[12:15] <jmerelo> m: say (1..12).permutations

[12:15] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´((1 2 3 4 5 6 7 8 9 10 11 12) (1 2 3 4 5 6 7 8 9 10 12 11) (1 2 3 4 5 6 7 8 9 11 10 12) (1 2 3 4 5 6 7 8 9 11 12 10) (1 2 3 4 5 6 7 8 9 12 10 11) (1 2 3 4 5 6 7 8 9 12 11 10) (1 2 3 4 5 6 7 8 10 9 11 12) (1 2 3 4 5 6 7 8 10 9 12 11) (1 2 3 4 5 6 7 8 1‚Ä¶¬ª

[12:15] <jkramer> m: say (1..20).permutations.elems

[12:15] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´2432902008176640000‚ê§¬ª

[12:15] <masak> ...private camelia...? :)

[12:15] <lizmat> jmerelo: actually, the .elems on the iterator takes a shortcut, so it actually doesn't matter for *that* case

[12:15] <jkramer> Ah

[12:16] <lizmat> however, when the iterator is created, we don't know if only .elems will be called or not

[12:16] *** domidumont joined
[12:16] <lizmat> and putting the check in .pull-one, would make standard use so much more expensice

[12:16] <lizmat> *expensive

[12:17] <masak> I don't think "NP-hard problem" is the right terminology here. the output grows very quickly as the factorial of the input, though.

[12:18] <perlawhi1l> I've thought about this, and i don't think making (^21).permutations.elems is important. anyone doing that should be aware what a factorial is and get there that way

[12:19] <masak> if all you're doing is .permutations.elems, then I have a quicker way for you :)

[12:20] <masak> m: sub postfix:<!>($N) { [*] 2..$N }; say 9!; say 12!; say 21!

[12:20] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´362880‚ê§479001600‚ê§51090942171709440000‚ê§¬ª

[12:21] <perlawhi1l> exactly... factorial

[12:26] <jast> I believe the correct term is EXPSPACE

[12:27] <masak> jast: I don't see how this is a decision problem at all. it's just "generate this list"

[12:28] <masak> even if it were a decision problem, it would only be EXPSPACE if you needed to keep all the permutations in memory while you were doing something

[12:28] <masak> which you don't, if you're just looping over them and printing them out

[12:28] <jmerelo> masak: probably not. NP, sure.

[12:29] <jast> it could be phrased as a decision problem

[12:30] <jmerelo> masak: it's non-polynomial time, I guess. 

[12:30] <jast> and, well, looping and output work a little differently when the definition is based on a Turing machine, which doesn't have an output stream

[12:30] <masak> jmerelo: "NP" stands for "nondeterministic polynomial time"

[12:30] <jast> the output of a Turing machine is a segment of its memory/tape

[12:31] <masak> where "nondeterministic" can often be interpreted as "unbeliavably lucky"

[12:31] <jast> that's a nice way of putting it

[12:31] <masak> like, if the Turing machine needs to make a number of choices in a choice tree, it just happens to pick the choices that lead directly to a solution

[12:32] <jmerelo> masak: And I should know. So wrong again :-)

[12:32] <masak> think of 8-queens, for example. a nondeterministic Turing machine would just go ahead, in the first iteration without any searching, and place all the queens in a correct way.

[12:33] <jast> I always found it easiest to visualize non-deterministic processing by looking at non-deterministic finite state machines

[12:34] <jast> each state can have multiple transitions and applying the state machine to an input magically tests all of a state's transitions at once

[12:34] <Geth> ¬¶ doc: 0ac7f149c7 | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[12:34] <Geth> ¬¶ doc: Add section on importing groups of subs

[12:34] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/0ac7f149c7

[12:34] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[12:35] *** xtreak left
[12:36] *** xtreak joined
[12:39] *** xtreak_ joined
[12:39] *** mcmillhj joined
[12:39] *** xtreak left
[12:39] *** athenot joined
[12:40] <Geth> ¬¶ doc: 877783ccd0 | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[12:40] <Geth> ¬¶ doc: Mention "dd" in the Data::Dumper section

[12:40] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/877783ccd0

[12:41] *** athenot left
[12:41] <lizmat> and that concludes my work on 5to6-nutshell for now&

[12:42] <El_Che> turing? https://turing-game.tech

[12:43] <jmerelo> lizmat++ 

[12:44] <Geth> ¬¶ doc: d3e1cd0053 | (Will "Coke" Coleda)++ | doc/Language/5to6-nutshell.pod6

[12:44] <Geth> ¬¶ doc: fix some compilation issues

[12:44] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d3e1cd0053

[12:44] <Geth> ¬¶ doc: 7303608f43 | (Will "Coke" Coleda)++ | doc/Language/numerics.pod6

[12:44] <Geth> ¬¶ doc: whitespace

[12:44] <synopsebot> Link: https://doc.perl6.org/language/numerics

[12:44] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7303608f43

[12:44] <jast> 30 seconds to judge someone? most people can't even type two sentences in that time

[12:45] <jmerelo> lizmat: is butterfly project over? Congrats!

[12:47] <lizmat> jmerelo: over?  It's just beginning  :-)

[12:48] <jmerelo> lizmat: just the documentation work, then 

[12:49] <jmerelo> lizmat: or the documentation pertaining the particular file you just mentioned, at least... Anyway, congrats.

[12:49] *** Ven`` joined
[12:50] <lizmat> jmerelo: I'm going to give a tutorial at TPCiSLC: https://perlconference.us/tpc-2018-slc/session/making-your-perl-5-modules-work-in-rakudo-perl-6/

[12:50] <lizmat> and wanted to make sure that all 5to6 docs are correct and up to date

[12:50] <lizmat> they're a bit of a prereq for participation

[12:51] <lizmat> BTW. only 5 places left  :-)

[12:51] <jmerelo> lizmat: great :-) 

[12:53] <Ven``> o/, #perl6

[12:58] <raschipi> oi, Ven`` 

[12:59] *** sno left
[13:07] <Geth> ¬¶ doc: ce11ba2250 | (Will "Coke" Coleda)++ | doc/Language/5to6-nutshell.pod6

[13:07] <Geth> ¬¶ doc: allow dd

[13:07] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ce11ba2250

[13:07] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[13:08] <Geth> ¬¶ doc: 0168931650 | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[13:08] <Geth> ¬¶ doc: Change Inline::Perl5 example to use core module

[13:08] <Geth> ¬¶ doc: 

[13:08] <Geth> ¬¶ doc: DBI may not be installed in Perl 5

[13:08] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/0168931650

[13:09] *** epony left
[13:11] <Geth> ¬¶ doc: bada1ca5d5 | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[13:11] <Geth> ¬¶ doc: Make output comments for clean test

[13:11] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/bada1ca5d5

[13:11] *** jmerelo left
[13:12] <[Coke]> As one of the people who was very excited for rakudo on jvm back in the day, these days I'm much more likely to run rakudo on moarvm in docker.

[13:12] <[Coke]> (For $dayjob)

[13:14] *** Ven`` left
[13:14] <Geth> ¬¶ doc: 795c1c77bc | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[13:14] <Geth> ¬¶ doc: And there I thought you could inherit from a stub

[13:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/795c1c77bc

[13:15] *** xtreak_ left
[13:15] *** xtreak joined
[13:16] <[Coke]> lizmat: there's a bunch of stuff involving compilation units that the examples compiler doesn't get right, I'm just saying it doesn't pass the test is all. :)

[13:17] <[Coke]> you can always add a :skip-test if you've tested it locally and are happy with it. (like we do with anything involving a "unit")

[13:17] *** epony joined
[13:17] *** xtreak left
[13:17] <lizmat> [Coke]: I just tested in a script, you're not allowed to do it  :-)

[13:23] <[Coke]> yay, test! :)

[13:24] <lizmat> http://perlmonks.org/index.pl?node_id=1215821   # any takers ?

[13:24] * [Coke] can't believe you tricked me into clicking on a perlmonks link.

[13:39] <Geth> ¬¶ doc: ac058c9725 | (Elizabeth Mattijsen)++ | doc/Language/5to6-nutshell.pod6

[13:39] <Geth> ¬¶ doc: Mention modules of the CPAN Butterfly Plan

[13:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ac058c9725

[13:39] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[13:42] *** wamba joined
[13:46] *** wamba1 joined
[13:46] *** wamba left
[14:04] <buggable> New CPAN upload: vars-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/vars:cpan:ELIZABETH

[14:09] *** araraloren left
[14:10] *** araraloren joined
[14:15] *** sno joined
[14:16] *** molaf_ left
[14:16] <Geth> ¬¶ doc: d1f39dd2ee | (Elizabeth Mattijsen)++ | doc/Language/5to6-perlvar.pod6

[14:16] <Geth> ¬¶ doc: Use numification / stringification shortcuts

[14:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d1f39dd2ee

[14:16] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlvar

[14:22] <Geth> ¬¶ doc: 08aa4edd16 | (Elizabeth Mattijsen)++ | doc/Language/5to6-perlvar.pod6

[14:22] <Geth> ¬¶ doc: Another stringification shortcut

[14:22] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/08aa4edd16

[14:26] <Geth> ¬¶ doc: fc25c25705 | (Elizabeth Mattijsen)++ | doc/Language/5to6-perlvar.pod6

[14:26] <Geth> ¬¶ doc: Oops, fix typo, MasterDuke++

[14:26] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/fc25c25705

[14:27] *** skids joined
[14:28] *** curan left
[14:28] *** mcmillhj left
[14:28] *** molaf_ joined
[14:31] <Geth> ¬¶ doc: f943b41997 | (Will "Coke" Coleda)++ | doc/Language/5to6-nutshell.pod6

[14:31] <Geth> ¬¶ doc: Can't have two "for code" blocks

[14:31] <Geth> ¬¶ doc: 

[14:31] <Geth> ¬¶ doc: And the skip-test makes the preamble obsolete

[14:31] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f943b41997

[14:31] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[14:36] *** mcmillhj joined
[15:04] *** sno left
[15:04] *** molaf_ left
[15:09] *** molaf joined
[15:09] <Geth> ¬¶ doc: 936bad2280 | (Elizabeth Mattijsen)++ | doc/Language/5to6-perlvar.pod6

[15:09] <Geth> ¬¶ doc: Expand %SIG section with some examples

[15:09] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/936bad2280

[15:09] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlvar

[15:22] *** domidumont1 joined
[15:25] *** domidumont left
[15:26] *** domidumont1 left
[15:27] <Geth> ¬¶ doc: 4234cc26bf | (Elizabeth Mattijsen)++ | doc/Language/5to6-perlvar.pod6

[15:27] <Geth> ¬¶ doc: Give $NR a more idiomatic Perl 6 example without using a meta-operator

[15:27] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4234cc26bf

[15:27] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlvar

[15:34] *** ExtraCrispy joined
[15:38] <araraloren> m: use experimental :macro; macro { #`(something can access $OUTER::x;) quasi { 1; } }; sub foo { my $x is dynamic = 20; }; sub bar { #`(access $OUTER::x) say $OUTER::x; }; bar }

[15:38] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Error while importing from 'experimental': no such tag 'macro'‚ê§at <tmp>:1‚ê§------> 3use experimental :macro7‚èè5; macro { #`(something can access $OUTER‚ê§¬ª

[15:39] *** zakharyas left
[15:39] <araraloren> Can I declare something like C macro ?

[15:39] *** jmerelo joined
[15:40] <araraloren> m: use experimental :macro; macro ACCESSX { #`(something can access $OUTER::x;) quasi { 1; } }; sub foo { my $x is dynamic = 20; }; sub bar { say ACCESSX; say $OUTER::x; }; bar }

[15:40] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Error while importing from 'experimental': no such tag 'macro'‚ê§at <tmp>:1‚ê§------> 3use experimental :macro7‚èè5; macro ACCESSX { #`(something can acces‚ê§¬ª

[15:41] *** wamba1 left
[15:42] <araraloren> m: use experimental :macros; macro ACCESSX { #`(something can access $OUTER::x;) quasi { 1; } }; sub foo { my $x is dynamic = 20; }; sub bar { say ACCESSX; say $OUTER::x; }; bar }

[15:42] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unexpected closing bracket‚ê§at <tmp>:1‚ê§------> 3ar { say ACCESSX; say $OUTER::x; }; bar 7‚èè5}‚ê§¬ª

[15:42] <araraloren> m: use experimental :macros; macro ACCESSX { #`(something can access $OUTER::x;) quasi { 1; } }; sub foo { my $x is dynamic = 20; }; sub bar { say ACCESSX; say $OUTER::x; }; bar 

[15:42] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´1‚ê§Nil‚ê§¬ª

[15:43] *** matiaslina joined
[15:43] <araraloren> m: use experimental :macros; macro ACCESSX { #`(something can access $OUTER::x;) quasi { 1; } }; sub foo { my $x is dynamic = 20; bar }; sub bar { say ACCESSX; say $OUTER::x; }; foo

[15:43] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´1‚ê§Nil‚ê§¬ª

[15:45] *** wamba joined
[15:51] *** robertle_ left
[15:53] *** jdoege joined
[15:54] <jdoege> Hi all. Hope you are having a great Monday. Question: is there an idomatic way to tell if you are on the last interation?

[15:55] <Juerd> jdoege: You can use a LAST phaser

[15:56] <Juerd> m: for ^5 { .say; LAST { "$_ again".say } }

[15:56] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§4‚ê§4 again‚ê§¬ª

[15:56] *** araraloren left
[15:58] *** xtreak joined
[15:59] <jdoege> That seems to execute after the last iteration is complete. Is there a way to know when you are entering the code block that you are on the last iteration?

[15:59] <jdoege> But, thank you for the pointer to phasers, I will look at them more closely.

[16:01] <Juerd> I don't know and it wouldn't be possible for all use cases, because you can't always know whether the current iteration is the last one

[16:01] <Juerd> Not without having a peek at the next item, that is

[16:02] <jdoege> I am doing it right now by pre-determining the last index and checking the index during execution but that seems clumsy to add an index to iterting over a list just to figure out if you are on the last element.

[16:03] <Juerd> I'm curious why you want this :)

[16:04] <raschipi> m: for @list {say "NO MORE" when 'last'; .say }

[16:04] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '@list' is not declared. Did you mean any of these?‚ê§    &list‚ê§    List‚ê§    &last‚ê§    &gist‚ê§‚ê§at <tmp>:1‚ê§------> 3for 7‚èè5@list {say "NO MORE" when 'last'; .say }‚ê§¬ª

[16:04] <jdoege> Because the last element needs to handled differently than all the other elements.

[16:04] <raschipi> m:my @list = 1,2,3,4,last; for @list {say "NO MORE" when 'last'; .say }

[16:04] <evalable6> raschipi, rakudo-moar e4ecf5e5f: OUTPUT: ¬´(exit code 1) ===SORRY!===‚ê§last without loop construct‚ê§¬ª

[16:04] <raschipi> m:my @list = 1,2,3,4,'last'; for @list {say "NO MORE" when 'last'; .say }

[16:04] <evalable6> raschipi, rakudo-moar e4ecf5e5f: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§4‚ê§NO MORE‚ê§last‚ê§¬ª

[16:05] <Juerd> raschipi: Wouldn't work for non-unique values

[16:06] *** xtreak left
[16:06] <Juerd> m: role LastItem { }; my @foo = ^5; @foo[* - 1] does LastItem; for @foo { say "last" when LastItem; .say }

[16:06] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§last‚ê§4‚ê§¬ª

[16:06] <Juerd> jdoege: No index needed ;)

[16:06] <Juerd> @foo.tail is prettier than @foo[* - 1], by the way

[16:07] <Juerd> Also, could just use identity equivalence:

[16:07] <jdoege> That looks promising. Thank you.

[16:07] <raschipi> m: my @list = 1,2,3,4,'last'; for @list.kv -> $k , $v {say "NO MORE" when $k == @list.elems - 1; say $v }

[16:07] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§4‚ê§NO MORE‚ê§last‚ê§¬ª

[16:07] <Juerd> m: my @foo = ^5; for @foo { say "last" when $_ =:= @foo.tail; .say }

[16:07] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§last‚ê§4‚ê§¬ª

[16:07] <Juerd> m: my @foo = 1, 2, 3, 1; for @foo { say "last" when $_ =:= @foo.tail; .say }

[16:07] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§last‚ê§1‚ê§¬ª

[16:08] <Juerd> (Should probably just have used 'if' instead of 'when' there)

[16:10] <raschipi> m: role LastItem { }; my @foo = ^5; @foo.tail does LastItem; for @foo { say "last" when LastItem; .say }

[16:10] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§last‚ê§4‚ê§¬ª

[16:10] <jdoege> The array is likely to contain many cases of non-unique values, so the example that truncates the list and then handles the last item seperately is probably the best for my purposes.

[16:10] <raschipi> I think that way it's self-explanatory

[16:10] <Juerd> jdoege: That'd be fine if the entire handling is different, but in that case I wonder whether it should have been part of the list in the first place.

[16:11] <jdoege> Though that "role" "does" approach also looks promising. Thanks muchly for your help!

[16:11] <Juerd> jdoege: Roles are great because you can add them to existing values, regardless of their type.

[16:11] *** xtreak joined
[16:12] <jdoege> The list is returned from a grammar. The task is a format shift and the last item gets handled differently from a formatting POV.

[16:12] <jdoege> Time to learn about roles! :-D Thanks again!

[16:13] *** wamba left
[16:13] <raschipi> The "does" attaches out-of-band information to the last item, which is a good way of dealing with it in a different way without changing it.

[16:15] <Juerd> jdoege: You could even add a formatting role to all of the items, and a different formatting role to the last one

[16:15] <Juerd> jdoege: And then iterate over them, and have a method like .formatted return the item formatted correctly without any explicit conditionals in the loop

[16:16] <Juerd> In fact, depending on the situation it might even make sense to just provide a Str to implement custom stringification

[16:16] *** mcmillhj left
[16:20] *** xtreak left
[16:20] *** domidumont joined
[16:20] <Juerd> m: my role LastItem { method Str { "four!" } }; my @foo = ^5; @foo.tail does LastItem; say @foo.join(", ")

[16:20] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´0, 1, 2, 3, four!‚ê§¬ª

[16:21] <jdoege> That is looking a lot like what I was hoping for.

[16:22] <Juerd> It might just be a bit too clever

[16:22] *** pluto joined
[16:22] <jdoege> Many things in Perl6 are :-D

[16:23] <jdoege> But once an approach becomes commonplace it isn't so "clever" anymore.

[16:24] *** raschipi left
[16:24] <Juerd> m: my role Item { method formatted { "({ self })" } }; my role LastItem { method formatted { "[[{ self }]]" } }; my @foo = ^5; @foo >>does>> Item; @foo.tail does LastItem; say @foo>>.formatted

[16:24] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´[(0) (1) (2) (3) [[4]]]‚ê§¬ª

[16:25] <Juerd> jdoege: The problem with a custom .Str is that you may want to use the original too

[16:26] *** mcmillhj joined
[16:26] *** sno joined
[16:27] *** raschipi joined
[16:27] <pluto> hello. I have a question regarding map routine and whatever: given 1..4 { .map( * => * ).say; } results in (1 => 2 3 => 4) but what i expected was (1 =>1 2=>2...). what am i missing? Thanks

[16:28] <raschipi> pluto: each splat will be a new argument to the lambda created

[16:28] <Juerd> pluto: .map will eat as many items as the provided subroutine will take, and each * is a different parameter

[16:29] <raschipi> m: given 1..4 { .map({ $^a => $a }).say; }

[16:29] <camelia> rakudo-moar e4ecf5e5f: OUTPUT: ¬´(1 => 1 2 => 2 3 => 3 4 => 4)‚ê§¬ª

[16:29] <Juerd> pluto: So you can't use the given value twice with *. Use a regular routine with {} instead: given 1..4 { .map(-> $x { $x => $x }).say }

[16:29] <pluto> rascipi is splat the same as whatever?

[16:30] <Juerd> IIRC, splat is written the same as whatever, and the same as multiply, but they're different things.

[16:30] *** scimon left
[16:31] <Juerd> * in "sub foo (*@foo)" is splat, * in "5 * 5" is multiply, * in "* + *" is whatever

[16:31] <Juerd> * in "sub foo(*@foo) { return * * * }" is just too confusing :)

[16:31] *** Possum joined
[16:32] <pluto> raschipi, Juerd very helpfull explenations, thanks

[16:32] *** mcmillhj left
[16:32] <raschipi> Splat is another name for the asterisk.

[16:32] *** dakkar left
[16:32] <pluto> raschipi: ah.. ok

[16:32] <Juerd> Is it, though?

[16:33] <ilmari> the *  in "sub foo (*@foo)  { ... }" is slurpy, isn't it?

[16:33] *** psychoslave left
[16:33] <Juerd> "splat n. 1. Name used in many places (DEC, IBM, and others) for the asterisk (*)"  -- The Jargon File

[16:33] <Juerd> TIL :D

[16:34] <Juerd> "2. [MIT] Name used by some people for the # character (ASCII 0100011)."

[16:34] <Juerd> argh :)

[16:35] *** pluto left
[16:37] <raschipi> Juerd: -> $x { $x => $x } better written as {$^x => $x}. The first one will leave people wondering y tho.

[16:38] *** mcmillhj joined
[16:39] *** comborico1611 joined
[16:40] <raschipi> Pointy subs better left for when destructuring is gonna be used, IMHO.

[16:43] <jmerelo> A bit of more data on Perl6/doc issues https://www.google.com/fusiontables/DataSource?docid=1luOWW2HDdGZtFw5HHrtO86Lx5efQ32GOzuXr-s6L Last two months rank 2nd and 4th in number of issues opened.

[16:43] <jmerelo> Also, last 3 months are ranked 1st, 2nd and 5th with the highest number of issues closed.

[16:44] *** mcmillhj left
[16:44] <jmerelo> (That's PRs _and_ issues, sorry)

[16:46] <raschipi> Can you do the same but excludding any issues labeled NOTSPECCED, wishlist or external?

[16:48] *** mcmillhj joined
[16:48] <jmerelo> raschipi: guess so.

[16:49] <skids> Juerd: It's not like we really needed something more geek-chic than "star"

[16:49] <raschipi> I would like to see it, can you do it if it's not much effort?

[16:49] *** kurahaupo left
[16:50] <jmerelo> raschipi: doing it now

[16:50] <raschipi> jmerelo: k thank you

[17:00] *** psychoslave joined
[17:05] *** wamba joined
[17:10] *** Schepeers left
[17:11] *** Schepeers joined
[17:11] <jmerelo> raschipi: here you go https://github.com/JJ/TPF-Grant/blob/master/illos/average-ages-with-or-without-big-issues.png There's some difference, and it's increasing, but it's not really the main thing.

[17:11] <jmerelo> I would say "big" issues tend to get older than those. Besides, there are not so many.

[17:14] <raschipi> thanks again

[17:14] <Juerd> raschipi: I disagree about the implicit argument being "better" than the pointy sub. TIMTOWTDI, and I think these are equal.

[17:15] <jmerelo> raschipi: I don't know if you saw the report I wrote about that https://www.researchgate.net/publication/325320277_Perl_6_documentation_repository_through_time_dealing_with_issues I examine age vs type. There are some differences, but they are not big

[17:15] <jmerelo> raschipi: not because NOTSPECCED and things like that take forever to be solved (or never are), but because some with the "docs" or "update" ticket also take a long time. 

[17:16] <jmerelo> raschipi: as a matter of fact, the faster to be solved are those with no label at all.

[17:16] <raschipi> Or the other way around, the ones that get solved quickly don't get any labels.

[17:17] <jmerelo> raschipi: that's probably the right way to see it.

[17:19] *** psychoslave left
[17:20] *** aindilis left
[17:21] *** aindilis joined
[17:21] <Juerd> Causation could be reversed: they might not have gotten any labels because they could be resolved quickly :D

[17:21] <Juerd> Sorry, late response and basically the same as raschipi's (latency due to someone at the door)

[17:25] <jmerelo> Juerd: I never talked about causation :-). Correlation is not causation, always. I would say you are both right, a priori.

[17:26] <jmerelo> But as a scientist, anecdotal evidence is never evidence :-). Also labels change with time, and some disappear and are erased. So I would say that's roughly right, but if I had to write that in a paper reviewer #3 would complain.

[17:29] <raschipi> I only said what I said to imply what you just said. It's not possible to determine which one causes the other with the data we have.

[17:32] *** mcmillhj left
[17:34] *** mahafyi left
[17:38] <Geth> ¬¶ doc: 779310a53d | (Will "Coke" Coleda)++ | doc/Language/functions.pod6

[17:38] <Geth> ¬¶ doc: fix pod error

[17:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/779310a53d

[17:38] <synopsebot> Link: https://doc.perl6.org/language/functions

[17:47] <Geth> ¬¶ doc: 136bc5b1ad | (Rafael Schipiura)++ (committed using GitHub Web editor) | doc/Language/5to6-perlvar.pod6

[17:47] <Geth> ¬¶ doc: Change paragraph to explain the new code

[17:47] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/136bc5b1ad

[17:47] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlvar

[17:48] *** sena_kun joined
[18:00] *** raynold joined
[18:01] *** kurahaupo joined
[18:09] * [Coke] is scared off by jetbrains' warning about other plugins processing his data remotely.

[18:09] <jmerelo> raschipi: well, I could dig up all the events related to a particular issue, as well as last-update dates. If I eventually publish a real paper, I might have to do it anyway.

[18:10] * [Coke] tries to install the markdown plugin. scroll to the end of a long page of release notes to find the URL. move to click, tab scrolls back to the top, moving the URL out of the way so I cannot click on it.

[18:13] *** natrys joined
[18:21] *** sauvin left
[18:32] *** comborico1611 left
[18:34] *** damaxi joined
[18:35] *** lichtkind joined
[18:35] <damaxi> will perl6 move out from github?

[18:37] <moritz> I don't think there's any reason to do or even decide that right now

[18:38] <jmerelo> damaxi: why should it?

[18:38] <damaxi> moritz: github is own3d

[18:38] <damaxi> I know many bad things which Microsoft committed to the FOSS community

[18:39] <damaxi> now they are trying to destroy it once again

[18:39] <jmerelo> damaxi: it was pwn3d before by a private company, that has decided what's best for them and of course the company. I don't really think it's a big deal.

[18:39] <moritz> damaxi: one for-profit company is sold to another for-profit company

[18:39] <jmerelo> In fact, every hosted repository out there belongs to a private company. They might be more or less free-software based, but gitlab is also a private company.

[18:40] <moritz> and given that github itself wasn't profitable, being bought by a company with big pockets and a reputation to lose might not be the worst option

[18:40] <jmerelo> We can move to a self-hosted solution, but then we will depend on the (private) hosting company too.

[18:40] <jmerelo> moritz++

[18:40] *** domidumont left
[18:40] *** jdoege left
[18:40] <moritz> we, I'm not going to self-host a gitlab instance

[18:41] <damaxi> you can host perl6 at home

[18:41] <jmerelo> moritz: me neither. "self" means "self". You have to administer, take care of security, add/take out users... 

[18:41] <jmerelo> damaxi: we _do_ host perl6 at home. Everyone of us has a private copy of the repo. Bad comes to worse, git push to a new place, and not a lot is lost.

[18:42] <jmerelo> damaxi: Microsoft has changed _a lot_

[18:42] <jmerelo> damaxi: that does not change what it's done in the past, but companies do not have an "original sin" they have to atone for. Different CEOs, they are like a different thing.

[18:42] <damaxi> I have fish brain to forget what Microsoft did to open source and even the guy who said that Linux is cancer

[18:43] <jmerelo> I mean, Microsoft with Satya Nadella looks as much as the previous Microsoft as Perl6 looks like Perl5. It's still Microsoft, but a lot has changed.

[18:44] <jmerelo> damaxi: I've seen the Satya Nadella say they love open source, and github mentioned in their product presentations.

[18:44] <jmerelo> I've had more PRs accepted by Microsoft in GitHub than by Github in Github, in fact :-)

[18:45] <damaxi> jmerelo: one day you will remmember my words and come here to cry

[18:45] <damaxi> remind

[18:46] *** espadrine joined
[18:46] <jmerelo> damaxi: I prefer to cry at home and not in IRC channels. 

[18:47] <moritz> damaxi: that might well be; it might equally well be that we spend resources for naught on migration

[18:47] <moritz> time will tell

[18:47] <moritz> typically, acquired services, if they degrade, degrade over time, not stop working immediately

[18:47] <moritz> that gives us time to migrate if necesary

[18:47] <jmerelo> damaxi: but really, I have 500+ repos in GitHub. I don't think taking them to other company is an option. I do have them in my disk drives. Push comes to shove, push it to the next big repo hosting thing.

[18:47] <damaxi> moritz: thats right

[18:48] <damaxi> at least we have still a bit time

[18:48] <raschipi> I have the same opinion damaxi regarding Microsoft, but it's git anyway, we can always commit the code to another hosting company in case Microsoft decides to do it's usual thing.

[18:48] <jmerelo> moritz: I really don't see any clear and present danger. People kinda think Microsoft is going to close GitHub and leave them hanging in the cold. That's not going to happen any time soon.

[18:49] <damaxi> jmerelo: it depends

[18:50] <damaxi> jmerelo: I am hostring privatly on github illegal content

[18:50] <damaxi> and for sure Microsoft starts to scan all content there

[18:51] <raschipi> Don't know why you would think Gitlab or others would do something different ragarding your content.

[18:52] <jmerelo> BTW, that's me (in the middle), with a Camelia Tee, a Microsoft employee, and a current Microsoft MVP https://www.flickr.com/photos/atalaya/34172222450/in/datetaken/ visiting MS headquarters in SEattle.

[18:52] <raschipi> nice photo, jmerelo 

[18:53] <jmerelo> damaxi: GitHub is still a private company. They might not have the resources to do that, but if they did, that will probably go against their terms of service and they might erase or kick you out.

[18:54] <jmerelo> raschipi: thanks :-) 

[18:55] <raschipi> I only hope Microsoft stops threatening my clients soon.

[18:56] <damaxi> the good about Gitlab it is self hosted

[18:56] <jmerelo> raschipi: your mileage with MS may vary. Some are still "old school", and of course some still have to sell Office and Windows. But that's not their cash crop right now, so things are changing.

[18:57] <damaxi> I think the good solution for open source would be decentralized open source repo infrastructure

[18:57] <jmerelo> damaxi: that's the very definition of git.

[18:57] <raschipi> They threaten to sue anyone that's not using Azure. They are just another Oracle from my point of view. Oracle "loves open-source" too.

[18:57] <damaxi> we can choice the server whatever we want and connect to the rest of world with intentation to overlook all repos

[18:58] <damaxi> moving out and hiding from big companies is a trap

[18:58] <damaxi> they eat you for dinner anyway

[18:58] <AlexDaniel> moving the source code is never a problem, it's bug tracking that is hard

[18:58] <AlexDaniel> even moving a wiki is relatively easy, and pull requests are perhaps not that critical

[18:59] <jmerelo> AlexDaniel: I do have all perl6/doc issues backed up. It might be a good idea to do the same with others.

[18:59] <jmerelo> But really, does anyone think that Microsoft has bought GitHub to shut it down and mess with all those evil open source developers?

[18:59] <AlexDaniel> in fact, given the distributed nature of git, we can have a few devs to push to several upstreams at the same time‚Ä¶ git repo itself is really a non-issue

[19:00] *** darutoko left
[19:01] <raschipi> I wouldn't be surprised if they are interested in GitHub's patents only and start threatening everyone that isn't paying GitHub soon.

[19:02] <AlexDaniel> so the question is more like, is there any convenient place for tracking issues, where everyone already has an account? Or something like that‚Ä¶

[19:02] <raschipi> Well, using Github, I doubt they will threaten people using it for free.

[19:03] <jmerelo> raschipi: all 6 of them? https://patents.google.com/?assignee=Github%2c+Inc.

[19:03] <raschipi> Yeah, they only patented git itself, nothing more.

[19:03] *** comborico1611 joined
[19:04] <jmerelo> raschipi: You can't patent git... 

[19:05] <raschipi> It's in the link you gave me: " Distributed code repository with limited synchronization locking" US  2017/0185627  A1 

[19:05] <jmerelo> Most patents are about "limited synchronization"

[19:05] <damaxi> I think a half of world should dispatch from US patents

[19:05] <damaxi> if someone want to live in patented world than thats okay for me but don't claim people who invent the same things then

[19:06] <jmerelo> raschipi: that's not git. It probably uses git, but could as well use something else like bazaar. Git is a program, and it's free software, and it does not belong to GitHub.

[19:06] <raschipi> Yes, Microsoft has a long history of misrepresenting patents to threaten people.  Anyway, anyone using git without being on github can receive a letter saying they own money to Microsoft. It's how they operate.

[19:06] <phogg>  You probably can't win a lawsuit against someone who is infringing on your patent on git features, but you can spend a few years pursuing such a suit while claiming publicly that everyone who uses git owes you money. SCO used this tactic; it's still not quite done.

[19:07] *** jdoege joined
[19:07] <raschipi> Microsoft does it all the time. Android is their most lucrative operating system because of it.

[19:07] <jmerelo> raschipi: really, you're blowing things out or proportion. GitHub does not own git. Period. 

[19:08] <jmerelo> raschipi: and if they owned it, they're still a private company. They're not the FSF. They could have pursued people infringing their patents with or without microsoft.

[19:08] <raschipi> Microsoft also doesn't own Android. Yet they make a lot of money threatening people saying they do.

[19:08] <jmerelo> raschipi: Google owns Android.

[19:09] <raschipi> GitHub wanted goodwill. Microsoft just astroturfs it.

[19:09] <El_Che> jmerelo: MS bought github to make it succeed, not out of evil plans! Looks on how they saved the Zune, Skype en Windows phone!

[19:09] <El_Che> oh crap

[19:09] <El_Che> :)

[19:10] <El_Che> raschipi: git and github don't have much in common despite the name

[19:10] <jmerelo> El_Che: and Nokia!

[19:10] <El_Che> oh yeah, forgot how they saved nokia :)

[19:10] <El_Che> It feels like a Star Wars-Disney moment

[19:11] <El_Che> Github-MS

[19:11] <moritz> I'm awefully sorry, but I had to shut down the IRC logs

[19:11] <raschipi> I know they don't have much in common. Microsoft targets legal departments and clueless VPs.

[19:11] <jmerelo> moritz: now that's bad news. GDPR strikes?

[19:11] <moritz> jmerelo: yes

[19:12] <El_Che> moritz: someone complained?

[19:12] <jmerelo> Can't we back it up somewhere outside the EU?

[19:12] *** ilbot3 left
[19:12] <El_Che> jmerelo: no

[19:12] * geekosaur would like to point out that git was born of opposition to corporate/business chicanery and its owners will likely fight back if it is attempted

[19:13] *** dwarring joined
[19:13] <geekosaur> and will have considerable support

[19:13] <El_Che> don't pick a fight with Linus :)

[19:13] <raschipi> They will do the same they do with Android: nada.

[19:13] <AlexDaniel> well, we still have http://colabti.org/irclogger/irclogger_logs/perl6

[19:13] <geekosaur> yesyesyes whatever you say]

[19:13] <moritz> El_Che: no; it's not compliant. That's enough reason to shut ti down

[19:13] <geekosaur> thank you for edumacating us dotards

[19:13] <jmerelo> geekosaur: git does not have "owners". It has developers. Nobody "owns" a particular free software. It's owned by developers, users and everyone. That's the whole point. 

[19:13] <[Coke]> most of the MS/github chat is off topic for #perl6

[19:13] <geekosaur> now tell ius what else we need to jknow

[19:14] <AlexDaniel> I talked to them regarding GDPR, and it seems like irc logging in general is compliant

[19:14] <AlexDaniel> but IANAL and so are they, so ü§∑

[19:14] * jmerelo shuts down regarding this thing...

[19:14] <geekosaur> jmerelo, there's a legal owner somewhere

[19:14] <geekosaur> unless they really think "owned by everyone but not public domain" works in court (hint: no.)

[19:15] <geekosaur> which would more or less prevent corporate use

[19:15] <geekosaur> also, copyright asignee, since it is GPL

[19:16] <geekosaur> never mind, people will believe what they wish to believe. and be confused when the truth appears because it can't possibly be the truth

[19:16] * [Coke] wonders if we can fix the emojis at colabti

[19:16] <AlexDaniel> [Coke]: but they work fine?

[19:16] <[Coke]> ah, in HTML they're fine.

[19:16] <[Coke]> but not "raw"

[19:16] <[Coke]> good enough for me, thanks.

[19:17] <jmerelo> And here's the second month grant report https://jj.github.io/TPF-Grant/May.html

[19:17] <jmerelo> Data and all the stuff is at the repo https://github.com/JJ/TPF-Grant

[19:17] <AlexDaniel> I'll go bug them about raw pages

[19:17] <jmerelo> Please consider it a "release candidate". Any other thing you want me to include, please open an issue. 

[19:18] * jmerelo goes AFK for today.

[19:18] <raschipi> jmerelo: sorry for closing #114.

[19:18] <jmerelo> raschipi: no problem at all, c'mon! 

[19:18] <jmerelo> raschipi: you did well, and created other issues. Thanks for that!

[19:18] <raschipi> I was tired of you complaining about it.

[19:19] <jmerelo> I wasn't so much complaining as asking for help with it...

[19:19] <jmerelo> But it's OK, no problem. I'm really AFK now. Bye!

[19:19] <raschipi> I mean that in a good way, I though you were frustrated by it.

[19:20] *** jmerelo left
[19:21] *** idiosyncrat joined
[19:29] <El_Che> moritz: thank you for the service

[19:29] *** uzl joined
[19:29] <El_Che> moritz: I don't think GPDR forces you to close it, but I understand you don't feel like taking on the burder of the risk. Thank you

[19:30] <[Coke]> moritz++ indeed

[19:30] <El_Che> burden

[19:30] * moritz has been running that service for 11 years, and is literally crying right now

[19:31] <El_Che> moritz: wouldn't be anonymising hostnames/ip's enough?

[19:31] <uzl> pretty sad the irc log is gone!

[19:31] <idiosyncrat> moritz: on behalf of the Marpa community I want to thank you for all you've done for us all these years.

[19:31] <yoleaux> 16 May 2018 23:16Z <TimToady> idiosyncrat: no, I never calculated the states myself, though I did study the dragon book enough to know I didn't want to do that; I also spent many hours stepping through the yacc/byacc/bison tables to debug various issues, but mostly I just relied on the shift/reduce and reduce/reduce reports to know where I was pushing it :)

[19:32] <uzl> I guess that means there won't be any log around for what's going on a regular basis on the channel.

[19:32] <moritz> El_Che: no. If there is personal data in the IRC logs, I have to inform the people that the PII is *about*. If somebody says "John Doe lives in Example Road 2, 91056 F√ºrth, Germany", that is PII

[19:33] <moritz> El_Che: and there is no freaking way I can check all the logs for such information, possibly even in languages I don't understand

[19:33] <idiosyncrat> moritz: you did so much for us, it was easy to take it for granted.

[19:33] <moritz> idiosyncrat: my pleasure

[19:33] <idiosyncrat> yoleaux: Thanks!!

[19:34] <El_Che> moritz: it looks like a rather extreme example where everything taking randons string input is affected

[19:34] <El_Che> host moritzLivesINGermanStreetAustriaWorld.com

[19:34] <El_Che> curl http://fbi.com/moritzLivesINGermanStreetAustriaWorld.com

[19:34] <El_Che> and so on

[19:35] <moritz> El_Che: that might be, but it is my understanding of DSGV (German implementation of GDPR), and I don't have the resources to verify it is not so

[19:35] <moritz> if anybody is willing to pay me so that I can pay a laywer to assure me otherwise, I might reconsider

[19:36] <[Coke]> if I could pay you for a lawyer, I'd get one for myself! :)

[19:36] <El_Che> moritz: I am party involved at the technical side of gdpr for our university (120k+ persons) and the stance is "take it easy"

[19:36] <El_Che> let's fix the obvious and go from there

[19:36] * AlexDaniel wonders what to do with all these broken links to irc logs

[19:36] <El_Che> moritz: I am not trying to convince as I respect your decision, I just warning against a too strict interpretation of it

[19:37] <moritz> noted

[19:37] <[Coke]> alexdaniel;any way to translate them to the other log's URLs?

[19:38] <AlexDaniel> [Coke]: I don't think so, I'm talking about all the links that are spread over‚Ä¶ well, everything. Bug reports, git commits, blog posts, whatever‚Ä¶

[19:38] *** comborico1611 left
[19:38] *** comborico1611_ joined
[19:39] <pmurias> argh our irc logs have been shut down by bullshit EU bureaucracy :(

[19:39] <idiosyncrat> yoleaux: in the sense I intended the question, it sounds like Larry did work with the LALR states.

[19:39] <AlexDaniel> maybe it would make sense to publish a small subset of logs for days that are hit often

[19:40] <El_Che> pmurias: laws aren't bureaucracy, that's the implementation :)

[19:40] <idiosyncrat> I know how large a task working them out for Perl 1 (never mind the successors) would have been, and never imagined he'd try to calculate them from scratch.

[19:41] <idiosyncrat> By "working with the states" I meant actually delving into them when necessary for debugging --

[19:41] <El_Che> moritz: the obligatory xkdb for finding adresses in logs: https://xkcd.com/208/

[19:41] <idiosyncrat> which when it comes to yacc means really really often.

[19:42] *** sena_kun left
[19:42] *** dogbert17 joined
[19:47] <raschipi> GPDR kills any chance anyone in Europe has to inovate in the Internet. It's just too big of a burden. And anyone with a new service aywhere else will have to block them out so they don't have to deal with it.

[19:48] <pmurias> moritz: have you considered linking http://colabti.org/irclogger/irclogger_logs/perl6?

[19:50] <El_Che> for the record: I love the GPDR

[19:51] <moritz> pmurias: I'll add that as the redirect target for irc.perl6.org

[19:51] <El_Che> Being tracked and targetted is not innovation

[19:51] <El_Che> that's 1984

[19:51] <AlexDaniel> raschipi: I don't understand why you need my personal data to innovate

[19:52] *** hankache joined
[19:53] <hankache> no more irc logs :/

[19:53] <AlexDaniel> huggable: irc logs

[19:53] <huggable> AlexDaniel, nothing found

[19:53] <AlexDaniel> huggable: logs

[19:53] <huggable> AlexDaniel, nothing found

[19:53] <AlexDaniel> huggable: irc

[19:53] <huggable> AlexDaniel, nothing found

[19:53] <AlexDaniel> COME ON

[19:53] <AlexDaniel> huggable: clog

[19:53] <huggable> AlexDaniel, nothing found

[19:54] <AlexDaniel> hankache: anyway, it's http://colabti.org/irclogger/irclogger_logs/perl6 for now

[19:55] <hankache> thanks AlexDaniel

[19:55] <hankache> moritz seems to have shut down his.

[19:55] *** jdoege left
[19:56] <raschipi> hankache: check the IRC logs... Oh.

[19:57] *** quotable6 joined
[19:57] *** undersightable6 left
[19:57] *** undersightable6 joined
[19:57] <kurahaupo> raschipi: if you think it's too much of a burden, maybe some customers won't want to deal with you?

[19:58] *** jaush joined
[19:59] <raschipi> Look, the IRC logs are being shut down. Europeans can make demands, but not everyone can deal with it.

[19:59] *** lucasb joined
[20:00] <hankache> who's running colibati?

[20:02] <jaush> where can i find the rules governing the interaction of dynamically-scoped variables and the REPL?

[20:02] <jaush> giving me rope to hang myself:  is each "input" a separate "file" for the purposes of scoping?

[20:02] <raschipi> Does anyone know if riot.im keeps logs?

[20:03] <raschipi> jaush: it's not, but it also has many quircks, so it's not the same as everything being in the same file.

[20:03] <geekosaur> it's a separate inner scope iirc

[20:03] <geekosaur> which is a bit screwy and can bite you unexpectedly

[20:05] <lucasb> so... what about the years of irc log ? will there be a database dump somewhere?

[20:05] <jaush> is there a document(s) somewhere that gives an overview of in-file vs. in-REPL behavior differences?

[20:06] *** damaxi left
[20:06] <lucasb> I'm worried about all the design discussion that happened here getting lost

[20:07] <lucasb> ah, colabti goes as far as 2005

[20:08] <hankache> what if colibati gets shut down?

[20:08] <hankache> we need some sort of future proof solution

[20:10] <raschipi> The logs are difficult to deal with because you need to scrub them of any personal information, because you don't have permission otherwise.

[20:10] <raschipi> Even keeping them is a problem.

[20:11] <raschipi> Like moritz said above, a good part of it isn't even in English.

[20:11] <moritz> future proof would likely be hosting it in Russia

[20:12] <hankache> hello moritz

[20:12] *** matiaslina left
[20:12] <hankache> thank you for hosting irc logs for so long. They will be missed

[20:13] <raschipi> Thank you, moritz 

[20:13] <moritz> you're welcome

[20:14] <raschipi> Hosting it in Russia doesn't help any, you'll still have clients all over Europe.

[20:18] <kurahaupo> raschipi: it clearly says weblog in the /topic so permission has been granted

[20:18] <raschipi> No, you need explicit, specific permission.

[20:19] <raschipi> Just informing people in a general way isn't enough.

[20:19] <kurahaupo> That applies to future collection

[20:20] <raschipi> Right, so how is it supposed to work from now on?

[20:21] <kurahaupo> I would make it part of the nickserv registration process

[20:22] <moritz> I have no influence over the nickserv registration process

[20:22] <raschipi> It's what Riot does. 

[20:22] <moritz> nor is everyone whose line is logged registered

[20:23] <raschipi> moritz: what do you think about keeping the logs until the day the law came in effect up but to stop collecting?

[20:23] <moritz> raschipi: nothin'. Afaict, the information duty applies to previously collected data as well

[20:24] <kurahaupo> The entire purpose of FreeNode & IRC is to publish information. I'm going to have to read the exact wording of the rules

[20:25] <El_Che> nickserv will not work

[20:25] <El_Che> e.g. I am not registered

[20:25] <El_Che> (and not planning to)

[20:25] <raschipi> "No grandfathering for previously collected personal data": https://www.gdpreu.org/the-regulation/who-must-comply/. kurahaupo: it's not just from now on.

[20:25] <raschipi> neither am I

[20:28] *** idiosyncrat left
[20:32] <kurahaupo> Conversely, personal or household activity is exempt. So you're welcome to keep the logs for yourself, you don't need to erase them.

[20:33] *** lizmat left
[20:34] <uzl> jaush: Not sure if directly related with your question but there's a note in the section for the * twigil (https://docs.perl6.org/language/variables#The_*_Twigil)

[20:35] <uzl> jaush: related to dynamic variables and the REPL in rakudo perl6

[20:35] *** lizmat joined
[20:35] *** AlexDaniel`` left
[20:35] *** AlexDaniel`` joined
[20:36] <jaush> thanks uzl

[20:38] <masak> aww. no irclogs.

[20:39] <uzl> jaush: you're welcome!

[20:39] <masak> moritz: I understand completely. but they will be missed.

[20:39] <moritz> masak: yes, I miss them too :(

[20:39] <masak> dangit, I should've scraped the whole thing.

[20:40] <hankache> but you're not using the logs to sell adds or track the users. So why are the logs not exempt?

[20:43] *** MilkmanD1n is now known as MilkmanDan

[20:43] <raschipi> You need explicit consent to just keeping personal info around.

[20:44] <lizmat> I guess the next step will be that everybody on an IRC channel is registered *and* has given explicit consent for logging

[20:45] <raschipi> riot.im and slack are already collecting explicit consent.

[20:46] *** lucasb left
[20:46] <El_Che> and they suck

[20:46] <El_Che> hard

[20:46] <El_Che> and a lemon

[20:46] <El_Che> with salt on top

[20:47] <El_Che> (incidently I like lemon with salt, but that's not my point :) )

[20:47] <Juerd> To be honest, I'm glad to see them gone, or at least the ones from before I realised everything I said was made public.

[20:47] <lizmat> Juerd: but it was already public?

[20:47] <El_Che> Juerd: The Best of Juerd is a classic

[20:48] *** hankache left
[20:48] <Juerd> I have requested information to be removed from the logs in the past, but I don't know what other mistakes I may have made that I'd now like to cover up.

[20:53] *** itaipu left
[20:55] *** itaipu joined
[21:04] *** jaush left
[21:13] *** skids left
[21:13] *** uzl_ joined
[21:13] *** uzl left
[21:14] *** raschipi left
[21:15] *** uzl__ joined
[21:17] *** uzl_ left
[21:17] *** pmurias left
[21:18] *** wamba left
[21:21] <tyil> Juerd: you didnt realise that things said in a public chanel are public?

[21:23] <lizmat> tyil: if you discuss things in a bar, you don't expect people to record that and put it in a podcast to be downloaded whenever

[21:23] <Juerd> tyil: I've always considered irc channels like pubs: you have to be there to actually hear what someone's saying, and if you're recording conversations that's creepy (this is why I don't log irc conversations). It's completely fine if it's recorded and published and it's clearly visible, but iirc that hasn't always been the case here. Besides that, it's still not incredibly visible because it's at the end of

[21:23] <Juerd> the topic and many clients will truncate the topic line to what fits on screen except when joining the channel.

[21:24] <tyil> that sounds like a client problem

[21:24] <Juerd> Personally I find it rather strange that many text conversations, including private ones, are logged and stored forever by default.

[21:24] <Juerd> tyil: Yes, it is.

[21:24] <tyil> I also disagree with comparing it to a bar, but that's a different topic

[21:24] <tyil> to me they're just too different of a thing to make that comparison

[21:25] <Juerd> Lack of alcohol? :)

[21:25] <tyil> I can see some point in not expecting logs to be made publicly available, though

[21:25] <tyil> Juerd: thats certainly not an issue when I'm on irc ;)

[21:29] <kurahaupo> There's lots of FUD about the GDPR. Consent is only one of the options for "legal processing". It could well be argued the logs of conversations are covered by section 50 - a purpose compatible with the original purpose.

[21:30] *** itaipu left
[21:31] *** pmurias joined
[21:31] <tyil> kurahaupo: I think the lack of prior rulings in court contributes to a lot of FUD

[21:31] <tyil> there's no data yet on how judges actually interpret the law

[21:31] *** rindolf left
[21:31] <El_Che> prior ruling is not something relevant in all EU countries

[21:31] <El_Che> e.g., not in mine

[21:31] *** HaraldJoerg left
[21:31] <El_Che> that something popular in the UK/US

[21:31] *** epony left
[21:32] <tyil> I think companies would still like to have some data on how its being used in practice

[21:33] <El_Che> e.g. here the instance that can impose sanctions is the same that gives guidelines

[21:33] <El_Che> and most importantly, the instance you can/must send questions when in doubt

[21:33] <tyil> that's not what I'm talking about

[21:34] <El_Che> (so, when in doubt, you're not in error if you ask their advice first)

[21:34] * tyil shrugs

[21:34] <tyil> whatevs

[21:34] <El_Che> a juge can rule something different than an other jugde

[21:34] <El_Che> meaning a earlier ruling does not bind later rulings

[21:34] <tyil> that's not at all what I'm saying

[21:34] <El_Che> (thanks Napoleon!)

[21:34] <tyil> 23:32 <tyil> I think companies would still like to have some data on how its being used in practice

[21:35] <El_Che> ok

[21:35] <El_Che> something else 

[21:35] *** kurahaupo_ joined
[21:37] *** andrzejku left
[21:37] *** rindolf joined
[21:37] *** kurahaupo left
[21:38] *** kurahaupo_ left
[21:38] *** kurahaupo joined
[21:39] *** andrzejku joined
[21:42] *** itaipu joined
[22:02] *** itaipu left
[22:03] *** uzl__ left
[22:05] *** molaf left
[22:07] *** markoong left
[22:10] *** markoong joined
[22:17] *** ilogger2 joined
[22:17] *** ChanServ sets mode: +v ilogger2

[22:25] *** matiaslina joined
[22:40] *** andrzejku joined
[22:42] *** kurahaupo_ joined
[22:43] *** profan joined
[22:45] *** kurahaupo_ left
[22:45] *** kjpye joined
[22:45] *** kurahaupo joined
[22:50] *** damnlie joined
[22:55] <japhb> moritz: For the record (irony sadly noted), I will really miss your irclogs.  I used them several times a day, nearly every day.  Thank you for providing them for all this time.

[22:56] *** molaf joined
[22:58] *** skids joined
[23:11] <MasterDuke> moritz: likewise

[23:14] <colomon> they were brilliant and essential. 

[23:24] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/06/04/2018-23-opened-closed/

[23:24] *** damnlie left
[23:39] *** damnlie joined
[23:42] *** matiaslina left
[23:43] <Juerd> For those who love the logs, please note that it's pretty easy to set up logging in almost every irc client

[23:44] <Juerd> lizmat: And another big thank-you! :)

