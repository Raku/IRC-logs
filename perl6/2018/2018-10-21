[00:00] <Xliff> m: class A {}; constant ThatHandler := (Str, Int, Str --> A); sub a (ThatHandler &handler) { A.new };

[00:00] <camelia> rakudo-moar 58bc09975: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3; constant ThatHandler := (Str, Int, Str7⏏5 --> A); sub a (ThatHandler &handler) { ␤    expecting any of:␤        statement end␤        statement modifier␤…»

[00:00] <Xliff> m: class A {}; constant ThatHandler := &(Str, Int, Str --> A); sub a (ThatHandler &handler) { A.new };

[00:00] <camelia> rakudo-moar 58bc09975: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3 constant ThatHandler := &(Str, Int, Str7⏏5 --> A); sub a (ThatHandler &handler) { ␤    expecting any of:␤        statement end␤        statement modifier␤…»

[00:00] <geekosaur> m: class A {}; constant ThatHandler := :(Str, Int, Str --> A); sub a (ThatHandler &handler) { A.new };

[00:00] <camelia> rakudo-moar 58bc09975: OUTPUT: «===SORRY!===␤QAST::Block with cuid 2 has not appeared␤»

[00:01] <geekosaur> (you're looking for Signatures. but this looks like an untested case)

[00:01] <Xliff> Ahhh...

[00:01] <Xliff> Ticket?

[00:01] *** itaipu left
[00:01] <geekosaur> not sure; that usage actualy looks wrong to me

[00:02] <Xliff> 'k

[00:02] <geekosaur> btu not sure how you'd actually do it

[00:02] <Xliff> m: class A {}; constant ThatHandler := :(Str, Int, Str --> A); sub a (ThatHandler $a) { A.new };

[00:02] <camelia> rakudo-moar 58bc09975: OUTPUT: «===SORRY!===␤QAST::Block with cuid 2 has not appeared␤»

[00:02] <geekosaur> basically 'ThatHandler' is a signature, not a function with that signature

[00:02] <Xliff> m: class A {}; constant ThatHandler := :(Str, Int, Str --> A); sub a ($a) { A.new };

[00:02] <camelia> rakudo-moar 58bc09975: OUTPUT: «===SORRY!===␤QAST::Block with cuid 2 has not appeared␤»

[00:02] <Xliff> m: class A {}; constant ThatHandler := :(Str, Int, Str --> A);

[00:02] <camelia> rakudo-moar 58bc09975: OUTPUT: «===SORRY!===␤QAST::Block with cuid 2 has not appeared␤»

[00:02] <Xliff> m: class A {}; constant ThatHandler := :(Str, Int, Str);

[00:02] <camelia> rakudo-moar 58bc09975: OUTPUT: «===SORRY!===␤QAST::Block with cuid 2 has not appeared␤»

[00:03] <Xliff> m: constant ThatHandler := :(Str, Int, Str);

[00:03] <camelia> rakudo-moar 58bc09975: OUTPUT: «===SORRY!===␤QAST::Block with cuid 1 has not appeared␤»

[00:03] <Xliff> Wow

[00:03] <Xliff> m: constant ThatHandler = :(Str, Int, Str);

[00:03] <camelia> rakudo-moar 58bc09975: OUTPUT: «===SORRY!===␤QAST::Block with cuid 1 has not appeared␤»

[00:03] <Xliff> m: constant &ThatHandler = :(Str, Int, Str);

[00:03] <camelia> rakudo-moar 58bc09975: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Type check failed in constant declaration of &ThatHandler; expected Callable but got Signature (:(Str $, Int $, Str $))␤at <tmp>:1␤------> 3constant &ThatHandler = :(Str, Int, Str)7⏏5;␤»

[00:03] <Xliff> OK.

[00:03] <Xliff> I will ask Zoffix

[00:04] <Xliff> Or jnthn

[00:04] *** jameslenz joined
[00:05] *** p6bannerbot sets mode: +v jameslenz

[00:06] *** nebuchadnezzar joined
[00:07] *** itaipu joined
[00:07] *** p6bannerbot sets mode: +v nebuchadnezzar

[00:08] *** p6bannerbot sets mode: +v itaipu

[00:09] *** jameslenz left
[00:09] <Xliff> m: Inf == Inf

[00:09] <camelia> rakudo-moar 58bc09975: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "==" in expression "Inf == Inf" in sink context (line 1)␤»

[00:10] <Xliff> m: say Inf == Inf

[00:10] <camelia> rakudo-moar 58bc09975: OUTPUT: «True␤»

[00:10] <Xliff> m: say 5 < Inf

[00:10] <camelia> rakudo-moar 58bc09975: OUTPUT: «True␤»

[00:11] *** lizmat left
[00:15] *** itaipu left
[00:23] <Geth> ¦ ecosystem: 1b662250e8 | (Aleks-Daniel Jakimenko-Aleksejev)++ | META.list

[00:23] <Geth> ¦ ecosystem: Add Project Blin

[00:23] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/1b662250e8

[00:27] *** kurahaupo left
[00:27] *** kurahaupo joined
[00:27] *** kurahaupo left
[00:28] *** kurahaupo joined
[00:28] *** p6bannerbot sets mode: +v kurahaupo

[00:47] <Geth> ¦ whateverable: fbb0469f5e | (Aleks-Daniel Jakimenko-Aleksejev)++ | META6.json

[00:47] <Geth> ¦ whateverable: Bump version

[00:47] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/fbb0469f5e

[00:54] *** jbotz left
[00:58] <Geth> ¦ Blin: 94a6b4693e | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/blin.p6

[00:58] <Geth> ¦ Blin: Temporarily add some env vars for control

[00:58] <Geth> ¦ Blin: 

[00:58] <Geth> ¦ Blin: Before MAIN is implemented.

[00:58] <Geth> ¦ Blin: review: https://github.com/perl6/Blin/commit/94a6b4693e

[01:16] <SmokeMachine> Xliff: I do that this way: https://github.com/FCO/Red/blob/master/lib/Red/Utils.pm6

[01:18] *** cognominal-p6 joined
[01:19] *** p6bannerbot sets mode: +v cognominal-p6

[01:19] *** ryn1x left
[01:20] *** ryn1x joined
[01:20] *** p6bannerbot sets mode: +v ryn1x

[01:21] <Xliff> sub kebab-to-snake-case($_) is export { S:g/'-'/_/ }; kebab-to-snake-case('Hi-there').say

[01:21] <evalable6> Xliff, rakudo-moar 4307996ae: OUTPUT: «Hi_there␤»

[01:22] <Xliff> sub kebab-to-snake-case($_) is export { S:g/'-'/_/ }; sub camel-to-snake-case($_) is export { kebab-to-snake-case lc S:g/(\w)<?before <[A..Z]>>/$0_/ }; camel-to-snake-case('GtkThisObjectIsSilly').say

[01:22] <evalable6> Xliff, rakudo-moar 4307996ae: OUTPUT: «gtk_this_object_is_silly␤»

[01:22] <Xliff> SmokeMachine++ # Nice!

[01:23] <Xliff> Only problem there is that I need to drop off the first hump. So In the above example, I only want "this_object_is_silly"

[01:31] <AlexDaniel> m: sub kebab-to-snake-case($_) is export { TR/-/_/ }; kebab-to-snake-case('Hi-there').say

[01:31] <camelia> rakudo-moar 58bc09975: OUTPUT: «Hi_there␤»

[01:32] <AlexDaniel> TR is a recent-ish addition to rakudo, so maybe using S is better

[01:35] <Geth> ¦ Blin: 953c12d91d | (Aleks-Daniel Jakimenko-Aleksejev)++ | README.md

[01:35] <Geth> ¦ Blin: Simpler example, env vars, note on portability

[01:35] <Geth> ¦ Blin: review: https://github.com/perl6/Blin/commit/953c12d91d

[01:39] *** cognominal-p6 left
[01:39] *** cognominal-p6 joined
[01:40] *** p6bannerbot sets mode: +v cognominal-p6

[01:42] *** w_richard_w joined
[01:42] *** Zoffix joined
[01:42] *** p6bannerbot sets mode: +v Zoffix

[01:42] <Zoffix> Xliff: "<Xliff> I will ask Zoffix"  Ask about what?

[01:43] *** p6bannerbot sets mode: +v w_richard_w

[01:46] *** MasterDuke left
[01:47] *** w_richard_w left
[01:47] <Xliff> Zoffix: \o

[01:48] <Xliff> When specifying a C callback, I have to do something equivalent to "sub (&handler(Arg1Type, Arg2Type --> ReturnType)". Is there a way to put that into a constant so it can be reused if necessary?

[01:48] <Xliff> I've tried the following, and got a weird error.

[01:48] <Xliff> m: constant ThatHandler = :(Str, Int, Str);

[01:48] <camelia> rakudo-moar 4307996ae: OUTPUT: «===SORRY!===␤QAST::Block with cuid 1 has not appeared␤»

[01:48] <Xliff> m: constant ThatHandler := :(Str, Int, Str);

[01:48] <camelia> rakudo-moar 4307996ae: OUTPUT: «===SORRY!===␤QAST::Block with cuid 1 has not appeared␤»

[01:48] <Xliff> So I don't know how that would look, syntactically

[01:49] <Zoffix> Xliff: use a subset

[01:49] <Zoffix> m: class A {}; subset Meows of Callable where .signature ~~ :(Str, Int, Str --> A); sub a (Meows \handler) { A.new }; a sub (Str, Int, Str --> A) {}

[01:49] <camelia> rakudo-moar 4307996ae: ( no output )

[01:49] <Zoffix> m: class A {}; subset Meows of Callable where .signature ~~ :(Str, Int, Str --> A); sub a (Meows \handler) { A.new }; a sub (Str, Int --> A) {}

[01:49] <camelia> rakudo-moar 4307996ae: OUTPUT: «Constraint type check failed in binding to parameter 'handler'; expected Meows but got Sub+{Callable[A]} (sub (Str $, Int $ -->...)␤  in sub a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[01:49] <Xliff> Zoffix++ # You rock

[01:49] <Xliff> And will that work with nativecall, too?

[01:50] <Zoffix> No idea. One way to find out :)

[01:52] <Xliff> LOL! OK. Just another thing to add on to the pile! Thanks.

[01:55] <Zoffix> I knew I saw a ticket for signature constant! R#1301

[01:55] <synopsebot> R#1301 [open]: https://github.com/rakudo/rakudo/issues/1301 constant does not support signature literal

[01:58] *** molaf left
[02:04] *** roguelazer left
[02:08] <Xliff> Oh, wow. So existing issue and I just need to work around it for now.

[02:08] <Xliff> oK

[02:10] <Xliff> Zoffix: You can see where it would be helpful in the list of types I have, starting here: https://github.com/Xliff/p6-GtkPlus/blob/master/lib/GTK/Raw/Types.pm6#L15

[02:10] *** molaf joined
[02:10] <Xliff> So with subsets, any use needs to be sigil-less?

[02:11] *** p6bannerbot sets mode: +v molaf

[02:11] <Zoffix> Xliff: you can use `$` sigil or write `(&handler where Meows)`

[02:11] <Xliff> OK. Will try it with nativecall and see what I get. Thanks.

[02:12] <Zoffix> `(Meows &foo)` is meant to be `(&foo where .returns Meows)` by my understanding, but looks like it's buggy http://colabti.org/irclogger/irclogger_log/perl6-dev?date=2018-10-21#l36

[02:12] <Zoffix> And @foo and %foo would parametarize it (and I was expecting `Meows &foo` to equaly parametarize)

[02:27] *** parv joined
[02:27] *** parv left
[02:37] *** ryn1x left
[02:41] *** Zoffix left
[02:56] *** ryn1x joined
[02:56] *** p6bannerbot sets mode: +v ryn1x

[03:50] *** kurahaupo left
[03:51] *** kurahaupo joined
[03:51] *** kurahaupo left
[03:51] *** kurahaupo joined
[03:52] *** p6bannerbot sets mode: +v kurahaupo

[03:52] *** ryn1x left
[03:57] <SmokeMachine> m: Mu eqv Mu # that's the problem!

[03:57] <camelia> rakudo-moar f758f4d91: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "eqv" in expression "Mu eqv Mu" in sink context (line 1)␤Type check failed in binding to parameter '<anon>'; expected Any but got Mu (Mu)␤  in block <unit> at <tmp> line 1␤␤»

[03:57] <SmokeMachine> m: say Mu eqv Mu # that's the problem!

[03:57] <camelia> rakudo-moar f758f4d91: OUTPUT: «Type check failed in binding to parameter '<anon>'; expected Any but got Mu (Mu)␤  in block <unit> at <tmp> line 1␤␤»

[04:06] *** jameslenz joined
[04:07] *** p6bannerbot sets mode: +v jameslenz

[04:15] *** ryn1x joined
[04:15] *** p6bannerbot sets mode: +v ryn1x

[04:16] *** jameslenz left
[04:52] *** sacomo left
[04:52] *** kurahaupo left
[04:53] *** kurahaupo joined
[04:54] *** p6bannerbot sets mode: +v kurahaupo

[05:05] *** guifa joined
[05:05] *** p6bannerbot sets mode: +v guifa

[05:06] <guifa> Let's say you're reading a config file that includes some regex info.  How would you store the data into a regex?  All the interpolable stuff in the docs has it store the reference to variables (e.g. still live), and not the actual content of the variable (and not static)

[05:07] <guifa> e.g. my $a = "^fu"; my $b = ??; "fubar" ~~ $b; $a = "z"; "fubar" ~~ $b; 

[05:07] <guifa> What needs to go in the ?? so that both smartmatches are true?

[05:24] <Xliff> guifa: I don't understand what you mean from that example. Can you post code?

[05:25] *** vrurg left
[05:34] *** mattp_ left
[05:36] *** guifa left
[05:42] <ugexe> m: my $a = "^fu"; my $b = rx/<$a>/; say "fubar" ~~ $b; $a = "z"; say "fubar" ~~ $b; # except this fails to match the second time

[05:42] <camelia> rakudo-moar f758f4d91: OUTPUT: «｢fu｣␤Nil␤»

[05:42] <geekosaur> yeh, because it's not interpolating $a at the point of definition

[05:44] <geekosaur> sadly I think this currently requires EVAL

[05:57] *** mattp_ joined
[05:58] *** p6bannerbot sets mode: +v mattp_

[06:06] *** kurahaupo_ joined
[06:06] *** p6bannerbot sets mode: +v kurahaupo_

[06:07] *** kurahaupo left
[06:07] *** kurahaupo_ left
[06:08] *** kurahaupo joined
[06:08] *** p6bannerbot sets mode: +v kurahaupo

[06:13] *** jameslenz joined
[06:13] *** p6bannerbot sets mode: +v jameslenz

[06:17] *** jameslenz left
[06:20] *** ryn1x left
[06:31] *** mattp_ left
[06:37] *** mattp_ joined
[06:37] *** p6bannerbot sets mode: +v mattp_

[06:42] *** leah2 left
[06:42] <moritz> or a closure

[06:43] <moritz> say "fubar" ~~ $b;

[06:44] <moritz> m: sub make-re(Str $s) { rx/<$s>/ }; my $a = '^fu'; my $b = make-re($a); say say "fubar" ~~ $b; $a = "z"; say "fubar" ~~ $b;

[06:44] <camelia> rakudo-moar f758f4d91: OUTPUT: «｢fu｣␤True␤｢fu｣␤»

[06:44] <moritz> m: sub make-re(Str $s) { rx/<$s>/ }; my $a = '^fu'; my $b = make-re($a); say "fubar" ~~ $b; $a = "z"; say "fubar" ~~ $b;

[06:44] <camelia> rakudo-moar f758f4d91: OUTPUT: «｢fu｣␤｢fu｣␤»

[06:44] *** marmor joined
[06:45] *** p6bannerbot sets mode: +v marmor

[06:46] *** leah2 joined
[06:47] *** p6bannerbot sets mode: +v leah2

[06:51] *** mattp_ left
[06:52] *** marmor left
[06:57] *** mattp_ joined
[06:57] *** p6bannerbot sets mode: +v mattp_

[07:01] *** domidumont joined
[07:02] *** p6bannerbot sets mode: +v domidumont

[07:35] *** kurahaupo left
[07:36] *** kurahaupo joined
[07:36] *** p6bannerbot sets mode: +v kurahaupo

[07:47] *** kurahaupo left
[07:48] *** kurahaupo joined
[07:48] *** kurahaupo left
[07:48] *** kurahaupo joined
[07:49] *** p6bannerbot sets mode: +v kurahaupo

[08:02] *** noganex_ left
[08:02] *** noganex joined
[08:03] *** p6bannerbot sets mode: +v noganex

[08:13] *** jameslenz joined
[08:14] *** p6bannerbot sets mode: +v jameslenz

[08:27] *** jameslenz left
[08:28] *** noganex left
[08:28] *** noganex joined
[08:29] *** p6bannerbot sets mode: +v noganex

[08:43] *** sena_kun joined
[08:44] *** p6bannerbot sets mode: +v sena_kun

[08:50] *** w_richard_w joined
[08:51] *** p6bannerbot sets mode: +v w_richard_w

[08:53] *** lizmat joined
[08:53] *** p6bannerbot sets mode: +v lizmat

[08:53] *** w_richard_w left
[08:59] *** irco left
[09:00] *** irco joined
[09:01] *** p6bannerbot sets mode: +v irco

[09:02] *** HaraldJoerg joined
[09:03] *** p6bannerbot sets mode: +v HaraldJoerg

[09:09] *** rindolf joined
[09:10] *** p6bannerbot sets mode: +v rindolf

[09:11] *** noganex_ joined
[09:12] *** p6bannerbot sets mode: +v noganex_

[09:14] *** noganex left
[09:18] *** kensanata joined
[09:18] *** p6bannerbot sets mode: +v kensanata

[09:22] *** finanalyst joined
[09:23] *** p6bannerbot sets mode: +v finanalyst

[09:27] <finanalyst> timotimo: thanks for the answer on perl-user list about &*EXIT

[09:27] <yoleaux> 16 Oct 2018 10:39Z <Zoffix> finanalyst: give -Ilib to the executable prove runs instead of prove itself: prove -e "perl6 -Ilib" -vr t/

[09:29] <timotimo> no prob

[09:29] <timotimo> i'm only at the keyboard intermittently

[09:29] <timotimo> but if you need more help or run into trouble, feel free to ask, it might take a while for me to respond

[09:29] <timotimo> i haven't tested the code i sent, either :|

[09:36] <El_Che> Watching Ovid's talk about Perl 5 and 6

[09:37] *** cognominal-p6 left
[09:54] <kensanata> I'm still wondering how to run my cro app from the command line (such that I can restart it from cron or monit, for example). Right now I'm invoking perl6 instead of using cro run. Is this expected? I have the shell script I use to start it and my service.p6 in this blog post, if you feel like taking a look: https://alexschroeder.ch/wiki/2018-10-21_Cro_as_a_Service%3f 

[09:58] <El_Che> are you planning using it on Linux?

[09:58] <El_Che> a systemd service file is the way to go there

[09:59] <El_Che> no tracking of pids, autostarting, etc

[09:59] <sena_kun> kensanata, do you see restart endlessly without apparent reason, or it occurs when e.g. something is written under cwd of `cro run`?

[09:59] <El_Che> (it probably the only thing I like about systemd)

[10:00] <kensanata> El_Che: It's going to run on a Debian server. There, all my existing Mojolicious apps run as my user, not from systemd. I was hoping I didn't need to change that.

[10:00] <lizmat> PSA: this weeks Perl 6 weekly will be published around noon on Monday, due to not being able to do it later on the day

[10:00] <sena_kun> if first one, please report it as a bug, it shouldn't be like that. if second one, you probably want either another storage to write/edit filesystem, or exclude some directories.

[10:00] <El_Che> kensanata: systemd can run an app as a user (but I see what you mean)

[10:01] <El_Che> Also, looking at this https://cro.services/docs/cro-tool, the cro-tool looks like a dev tool, not a way to deploy production to me

[10:01] <El_Che> (e.g. the autostarting)

[10:02] <kensanata> Hm.

[10:03] <kensanata> I figured the section "Running Services" would be whatever counts as "best practice".

[10:03] <El_Che> yeah, maybe see what jnthn has to say

[10:04] <kensanata> sena_kun: I'll take a look at the subdirectories. Perhaps I need some more ignore stuff in my .cro.yml, that's possible.

[10:05] <sena_kun> kensanata, I am asking because I had an issue where I wrote user content to `static/foo/bar` and on every upload it was restarted, so it might be a possible trap. Otherwise, if it just restarts constantly, that's a bug.

[10:06] <kensanata> sena_kun: You are right. I was doing two things at the same time, trying to switch to cro and trying to write propper log files. Propper log files into the same directory... Ouch!

[10:07] <El_Che> I repeat that I would be very uneasy with autorestart on production, but that's silly me :)

[10:07] <El_Che> I would also consider putting a good reverse proxy on front

[10:07] <kensanata> El_Che: I agree.

[10:07] <sena_kun> I agree with that too.

[10:08] <sena_kun> And reverse-proxy is indeed a nice thing to have in this case.

[10:08] <kensanata> El_Che: Right now Apache2 is acting as the proxy with fail2ban watching the Apache logfiles.

[10:08] <sena_kun> kensanata, but anyway, I hope the case with restarts is resolved.

[10:08] <El_Che> yeah, that's a good idea

[10:09] <El_Che> https://www.youtube.com/watch?v=3x7O5cy0TGU&t=22285s <-- probably the most recent cro talk

[10:11] <kensanata> I saw Jonathan speak in Switzerland. That made me want to try cro in the first place. :)

[10:11] <El_Che> ah lol

[10:18] *** molaf left
[10:18] <timotimo> systemd also handles logging for you if you want

[10:18] <kensanata> timotimo: Yeah, but cro also just writes log files for me, and I know how to configure logrotate and all that, I don't see an actual benefit, yet.

[10:20] *** pheix joined
[10:20] <kensanata> OK, so now my shell script starts nohup cro run & because cro doesn't daemonize itself. I guess I still find that surprising. And I wonder about the tradeoffs. So the benefit (which El_Che doubts) is automatic restarts? I also see now that using cro run gives me two moar processes (one runs cro, the other runs my process).

[10:21] *** p6bannerbot sets mode: +v pheix

[10:21] <kensanata> If there's nothing else that I'm missing, perhaps running the service using perl6 directly instead of via cro isn't such a bad idea after all. I think I'll do that.

[10:22] <El_Che> the daemonize thing is easily solved by init.d and systemd

[10:23] <El_Che> running stuff as a real user instead of a system user is indeed what tricky

[10:23] *** jameslenz joined
[10:24] <sena_kun> kensanata, cro run gives you automatic linking between services, restarts, separate envs, but yes, I'd say it's more of development too, not deployment one.

[10:24] *** p6bannerbot sets mode: +v jameslenz

[10:24] <El_Che> you often pay for extra dev features

[10:25] <sena_kun> exactly. :)

[10:26] <pheix> Hi, friendz! Noobs ques: is it possibe to define parent class from str var, something like this: my $n = 'Foo'; class Bar is $n { }, I've tried ::($n) but its fails with "This type cannot unbox" :((((

[10:28] *** jameslenz left
[10:36] <El_Che> pheix: I don't get the qestion. What are you trying to define? A substype of string?

[10:38] <pheix> @El_Che I'm trying to define a new class with name from string. Usually we have to code class Foo { ... }, but my goal is to use dynamic name, that is passed from config.

[10:39] <El_Che> ah ok

[10:40] <sena_kun> that's a work for MOP, I think. pheix, see https://docs.perl6.org/type/Metamodel::ClassHOW#method_new_type

[10:42] <sena_kun> m: my $n = 'Foo'; my $class = Metamodel::ClassHOW.new_type(:name($n)); $class.HOW.compose($class); say $class.^name;

[10:42] <camelia> rakudo-moar f0210794d: OUTPUT: «Foo␤»

[10:43] <sena_kun> pheix, but you should know it's kind of a black magic and there are not so much cases when it's a right tool for the job. :)

[10:43] <sena_kun> unless you want some meta-programming if your life.

[10:44] <pheix> sena_kun, thanx a lot!

[10:45] *** kensanata left
[11:09] <El_Che> the most usefull case I had for metaprogramming was adding methods on the fly, but roles takes care of most cases

[11:25] *** jbotz joined
[11:26] *** p6bannerbot sets mode: +v jbotz

[12:24] *** jameslenz joined
[12:25] *** p6bannerbot sets mode: +v jameslenz

[12:29] *** jameslenz left
[12:32] *** cognominal-p6 joined
[12:33] *** p6bannerbot sets mode: +v cognominal-p6

[12:37] *** lelf joined
[12:38] *** cognominal-p6 left
[12:38] *** p6bannerbot sets mode: +v lelf

[12:38] *** cognominal-p6 joined
[12:39] *** p6bannerbot sets mode: +v cognominal-p6

[12:53] *** Michael_S left
[12:54] <perlawhirl> is there a way to accept files of $*ARGFILES besides 'IO|IO::Handle'

[12:55] <perlawhirl> i meant... files (ie. IO::Path) -OR- IO::Handle

[12:56] <perlawhirl> seems there's no role that encapsulates both. no biggie, just wanting to confirm

[12:57] *** cognominal-p6 left
[13:26] *** Zoffix joined
[13:26] *** p6bannerbot sets mode: +v Zoffix

[13:27] <Zoffix> perlawhirl: what do you mean by "accept"? IO::CatHandle takes any mix of Str, IO::Path, IO::Handle, IO::Pipe objects.

[13:30] <perlawhirl> m: say 'f'.IO ~~ IO::CatHandle

[13:30] <camelia> rakudo-moar f0210794d: OUTPUT: «False␤»

[13:33] <Zoffix> perlawhirl: ah. Yeah, just use a `($ where IO|IO::Handle)`. In Rakudo, that even will be rewritten to just two cheap typechecks.

[13:34] <Zoffix> m: subset Meows where IO::Path|IO::Handle; say 'f'.IO ~~ Meows; say $*OUT ~~ Meows; # also this

[13:34] <camelia> rakudo-moar f0210794d: OUTPUT: «False␤False␤»

[13:34] <Zoffix> huh

[13:34] <Zoffix> c: HEAD subset Meows where IO::Path|IO::Handle; say 'f'.IO ~~ Meows; say $*OUT ~~ Meows; # also this

[13:34] <committable6> Zoffix, ¦HEAD(f021079): «True␤True␤»

[13:34] <Zoffix> (camelia has RESTRICTED setting with disabled IO::Path/IO::Handle)

[13:41] *** darthdeus_ left
[13:42] <SmokeMachine> m: role R { multi method r(--> Int) { ... } }; class C does R { multi method r(--> Str) {} }

[13:42] <camelia> rakudo-moar f0210794d: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Multi method 'r' with signature :(C: *%_ --> Int) must be implemented by C because it is required by a role␤at <tmp>:1␤»

[13:43] <SmokeMachine> :)

[13:45] <Zoffix> SmokeMachine++

[13:46] <Geth> ¦ doc: 5811e6412f | (JJ Merelo)++ | 2 files

[13:46] <Geth> ¦ doc: Adds link and rephrases closes #2401

[13:46] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5811e6412f

[13:47] <SmokeMachine> Zoffix: how do we add a feature/behabior to a future version of perl6 (for example 6.e)?

[13:48] <SmokeMachine> *behavior

[13:49] <Zoffix> SmokeMachine: depends on the feature. Right now we can only compile-time stuff

[13:50] <Zoffix> SmokeMachine: and you'd do it in Grammar/Actions/World with `if $*W.lang-ver-before('e') { stuff for earlier versions } else { stuff for 6.e and later }`

[13:51] <Zoffix> (I think static Optimizer can also use it)

[13:52] <Zoffix> Sample in Actions: https://github.com/rakudo/rakudo/blob/master/src/Perl6/Actions.nqp#L1357

[13:52] <SmokeMachine> So, I can’t do that on RoleToClassApplier...

[13:53] <Zoffix> Probably not

[13:54] <Zoffix> Blocked by R#1289

[13:54] <synopsebot> R#1289 [open]: https://github.com/rakudo/rakudo/issues/1289 [6.e] Implement a Way to Know Caller's Language

[13:54] <SmokeMachine> So I shouldn’t try this yet? https://github.com/rakudo/rakudo/issues/2384

[13:56] <Zoffix> SmokeMachine: well, I don't know what the solution looks like. If it requires to know caller's language version, then you can't do it, but if you only need to know the currently active language version while compiling then it'd be the above method.

[13:58] <SmokeMachine> Zoffix: thanks...

[14:05] *** regreg joined
[14:06] *** p6bannerbot sets mode: +v regreg

[14:09] *** aindilis left
[14:10] *** aindilis joined
[14:10] *** p6bannerbot sets mode: +v aindilis

[14:10] *** aindilis left
[14:11] *** aindilis joined
[14:12] *** p6bannerbot sets mode: +v aindilis

[14:18] *** atroxaper joined
[14:18] *** leah2 left
[14:21] *** leah2 joined
[14:22] *** p6bannerbot sets mode: +v leah2

[14:22] *** regreg left
[14:23] *** lichtkind joined
[14:23] *** p6bannerbot sets mode: +v lichtkind

[14:25] *** jameslenz joined
[14:26] *** p6bannerbot sets mode: +v jameslenz

[14:29] *** guifa joined
[14:29] *** p6bannerbot sets mode: +v guifa

[14:29] *** jameslenz left
[14:34] <Geth> ¦ Blin: AlexDaniel self-assigned Zef issues https://github.com/perl6/Blin/issues/2

[14:35] *** atroxaper left
[14:35] *** atroxaper joined
[14:35] *** domidumont left
[14:36] *** p6bannerbot sets mode: +v atroxaper

[14:36] <atroxaper> Hello, #perl6 !

[14:36] <AlexDaniel> o/

[14:36] <atroxaper> Please, help me. What I have to do for stop executing the code under 'start' block? $p = start { sleep 100; }; Now I only have a promise. I try to break it but it does not help me :)

[14:37] <atroxaper> AlexDaniel: \o

[14:37] <moritz> atroxaper: I don't think you can kill a start block

[14:37] <moritz> or a thread, for that matter

[14:39] <AlexDaniel> atroxaper: may I ask why you want to do that?

[14:39] <atroxaper> moritz: how can I run and terminate some work then? I did not find any terminate method on the Thread too.

[14:40] <moritz> atroxaper: you might need to start a separate process if you really need a hard termination

[14:40] *** domidumont joined
[14:40] *** jameslenz joined
[14:41] *** p6bannerbot sets mode: +v domidumont

[14:41] *** p6bannerbot sets mode: +v jameslenz

[14:41] *** uzl joined
[14:41] <guifa> Xliff, my connection died last night, but I did come up with the answer on the regex.  To "lock in" variable's values in regexes, you have to make it using EVAL.  e.g. $foo = "rx/$bar/".EVAL;  Otherwise, if the value of $bar changes, $foo will act in accordance with $bar's new value which bombs spectacularly if $bar is a loop variable. .

[14:42] *** p6bannerbot sets mode: +v uzl

[14:43] <moritz> guifa: the other option is a closure

[14:44] <moritz> m: sub make-re(Str $s) { rx/<$s>/ }; my $a = '^fu'; my $b = make-re($a); say "fubar" ~~ $b; $a = "z"; say "fubar" ~~ $b;

[14:44] <camelia> rakudo-moar f0210794d: OUTPUT: «｢fu｣␤｢fu｣␤»

[14:45] <atroxaper> moritz: imagine I want to get some resources over http. But they can stuck. I can wrap the start block on Promise.any with 'timeout' promise. But number of such stucked process will grow over time. I think it is not good, yes?

[14:46] <guifa> moritz, that's definitely a lot cleaner (and safer! even though it's my own config files being read in, when I end up distributing the code I'd rather keep other safe)

[14:46] <moritz> atroxaper: that's why we have things like connection timeouts

[14:47] <atroxaper> moritz: It is strange for me, as for Java programmer, to not have a way to terminate a thread. Even softly like in Java.

[14:47] *** domidumont left
[14:48] <uzl> m: say: "Hello";

[14:48] <camelia> rakudo-moar f0210794d: OUTPUT: «WARNINGS for <tmp>:␤Useless use of constant string "Hello" in sink context (line 1)␤»

[14:49] <atroxaper> moritz: yes. I understand that I have to use 'process' with timeout inside rather outside killing :) Thank you for clarify that moment. I thought I miss something in the documentation.

[14:49] <guifa> Would be great if Regex had a sort of .freeze() to do that.  I get the utility of letting the variable be mutable, but it's a bit counterintuitive too.  Either way, I think I might try adding that to the docs, because I can't be the only one who was banging his head up against a wall trying to get the interpolation stuff to work

[14:49] <uzl> m: say: "Hello"

[14:49] <camelia> rakudo-moar f0210794d: OUTPUT: «WARNINGS for <tmp>:␤Useless use of constant string "Hello" in sink context (line 1)␤»

[14:49] <uzl> Do we have a name for this type of invocation?

[14:50] <uzl> BTW, this works fine in the REPL. Why it throws this error here?

[14:52] <sena_kun> m: say "Hello"

[14:52] <camelia> rakudo-moar f0210794d: OUTPUT: «Hello␤»

[14:52] <moritz> it's not an error, it's a warning

[14:52] <moritz> uzl: and the : marks the "say" as a label

[14:52] *** lelf` joined
[14:52] <moritz> and in the REPL, it only "works" because the REPL automatically echos the return value of the last statement

[14:53] *** p6bannerbot sets mode: +v lelf`

[14:54] <Kaiepi> using : like that only works for methods iirc

[14:54] <AlexDaniel> hehe, yeah, not to be confused with `say “hello”:` or `“hello”.say: |()`

[14:55] <uzl> moritz: Thanks! I should have read the message better ;-)

[14:56] <uzl> So : wouldn't work with a function that doesn't offer method invocation syntax?

[14:56] <Zoffix> No functions offer that.

[14:56] *** lelf left
[14:56] <Zoffix> uzl: it's purely a syntax for method  calls, but you can use `.&foo` syntax which is a form of method call that uses a function as the callable for the method (passing invocant as first arg)

[14:57] <Zoffix> m: “hello”.&say

[14:57] <camelia> rakudo-moar f0210794d: OUTPUT: «hello␤»

[14:57] <Zoffix> m: sub meows { say $^a ~ $^b } "foo".&meows: "bar"

[14:57] <camelia> rakudo-moar f0210794d: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3sub meows { say $^a ~ $^b }7⏏5 "foo".&meows: "bar"␤    expecting any of:␤        infix␤        infix stopper␤…»

[14:57] <Zoffix> m: sub meows { say $^a ~ $^b }; "foo".&meows: "bar"

[14:57] <camelia> rakudo-moar f0210794d: OUTPUT: «foobar␤»

[14:58] *** Zoffix left
[14:58] <AlexDaniel> https://thelackthereof.org/Perl6_Colons :)

[14:58] <uzl> Oh, great! Thanks!

[15:00] <pmurias> what's a good syntax for evalling larger chunks of foreign code

[15:00] <pmurias> ?

[15:01] <pmurias> heredocs cause problems aren't treated as constants by eval and require 'use MONKEY-SEE-NO-EVAL'

[15:02] *** fake_space_whale joined
[15:03] *** finanalyst left
[15:03] *** p6bannerbot sets mode: +v fake_space_whale

[15:03] *** renormalist joined
[15:04] *** p6bannerbot sets mode: +v renormalist

[15:08] <moritz> so, just ues MONKEY-SEE-NO-EVAL; ?

[15:08] <moritz> *use

[15:16] <pmurias> moritz: doesn't look good in rakudo.js code examples

[15:22] *** lelf`` joined
[15:22] <moritz> m: say q⛄stuff⛄

[15:22] <camelia> rakudo-moar f0210794d: OUTPUT: «stuff␤»

[15:22] <moritz> you can always use that :-)

[15:22] *** p6bannerbot sets mode: +v lelf``

[15:23] *** zakharyas joined
[15:23] *** p6bannerbot sets mode: +v zakharyas

[15:25] *** lelf` left
[15:25] *** lelf``` joined
[15:26] *** p6bannerbot sets mode: +v lelf```

[15:27] *** lelf`` left
[15:30] *** aindilis left
[15:31] *** aindilis joined
[15:32] *** p6bannerbot sets mode: +v aindilis

[15:41] *** rindolf left
[15:50] *** lizmat left
[15:52] *** cognominal-p6 joined
[15:53] *** regreg joined
[15:53] *** p6bannerbot sets mode: +v cognominal-p6

[15:54] *** p6bannerbot sets mode: +v regreg

[15:57] *** rindolf joined
[15:57] *** jbotz_ joined
[15:58] *** p6bannerbot sets mode: +v rindolf

[15:58] *** p6bannerbot sets mode: +v jbotz_

[15:59] *** jbotz left
[16:02] *** Cleverson joined
[16:02] *** aindilis left
[16:02] *** p6bannerbot sets mode: +v Cleverson

[16:04] *** cognominal-p6 left
[16:04] *** cognominal-p6 joined
[16:05] *** p6bannerbot sets mode: +v cognominal-p6

[16:09] *** guifa left
[16:10] *** Cleverson left
[16:10] *** aindilis joined
[16:11] *** p6bannerbot sets mode: +v aindilis

[16:12] <SmokeMachine> m: say “hello”:

[16:12] <camelia> rakudo-moar f0210794d: OUTPUT: «hello␤»

[16:15] *** lelf``` is now known as lelf

[16:18] *** lelf is now known as lel

[16:18] *** lel is now known as lelf

[16:20] *** Zoffix joined
[16:20] *** p6bannerbot sets mode: +v Zoffix

[16:20] <Zoffix> pmurias: that sounds like a bug with heredocs and should be filed

[16:20] *** cognominal-p6 left
[16:20] <Zoffix> pmurias: but you can use method form of EVAL to bypass monkey

[16:21] <Zoffix> m: my $v = 'say "noice"'; "$v".EVAL

[16:21] <camelia> rakudo-moar f0210794d: OUTPUT: «noice␤»

[16:23] *** _uzl joined
[16:24] *** p6bannerbot sets mode: +v _uzl

[16:25] *** uzl left
[16:27] <pheix> Hi, #perl6! I've found a bug in doc. Here: https://docs.perl6.org/routine/add_attribute, $name param is spare and raises "Too many positionals passed; expected 3 arguments but got 4".

[16:29] <timotimo> if you use the .^add_attribute form, then $obj will be passed for you

[16:30] <timotimo> it would probably be good to have a little note about that in every metamodel method

[16:31] <pheix> timotimo: got "Too many" on simple .add_attribute

[16:31] <timotimo> that's more interesting

[16:32] <timotimo> true, the add_attribute method in src/Perl6/AttributeContainer.nqp actually only takes $obj and $meta_attr

[16:32] <timotimo> and the name comes from the $meta_attr.name

[16:32] <timotimo> good catch

[16:33] <timotimo> it'd sure be nice to have a direct link to the edit form on github for the right file right from the page itself ...

[16:34] <Geth> ¦ doc: 0097c67631 | timo++ (committed using GitHub Web editor) | doc/Type/Metamodel/AttributeContainer.pod6

[16:34] <Geth> ¦ doc: remove the `$name` parameter that add_attribute doesn't take

[16:34] <Geth> ¦ doc: 

[16:34] <Geth> ¦ doc: thanks to pheix++ on irc for the tip

[16:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0097c67631

[16:34] <synopsebot> Link: https://doc.perl6.org/type/Metamodel::AttributeContainer

[16:34] <sena_kun> timotimo, it is at the bottom of the page, not directly edit form though, but it's one click distance.

[16:34] <pheix> \m/

[16:35] <timotimo> oh, it is?

[16:35] <timotimo> https://docs.perl6.org/routine/add_attribute - not on pages that pull together text from multiple pages :)

[16:36] <sena_kun> oh, indeed. sorry.

[16:36] <timotimo> no prob

[16:36] <timotimo> it'd have to look different, of course

[16:36] <timotimo> since these pages have multiple source files

[16:37] <timotimo> though it could also put a source location anchor on the url for the editor, if it supports that

[16:38] *** _uzl left
[16:44] *** uzl joined
[16:44] *** uzl left
[16:47] *** cognominal-p6 joined
[16:47] *** p6bannerbot sets mode: +v cognominal-p6

[16:48] <pheix> are there any news about alias name for Perl6?

[16:48] *** rhizon8r left
[16:49] *** rhizon8r joined
[16:49] *** p6bannerbot sets mode: +v rhizon8r

[16:51] <Kaiepi> m: say 1..10 Z/ (2,4...20)

[16:51] <camelia> rakudo-moar f0210794d: OUTPUT: «(0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5)␤»

[16:51] <Kaiepi> m: my $a = 'a'; $a [R~]= 'b'; say $a

[16:51] <camelia> rakudo-moar f0210794d: OUTPUT: «ba␤»

[16:52] <Kaiepi> what other modifiers like R and Z exist?

[16:53] <timotimo> Kaiepi: S, but it doesn't do anything

[16:53] <timotimo> and X, which is extremely useful

[16:54] *** cognominal-p6 left
[16:55] *** cognominal-p6 joined
[16:55] *** p6bannerbot sets mode: +v cognominal-p6

[16:56] <tobs> Kaiepi: technically also ! as in `21 !R%% 5`

[16:57] <tobs> if you search for metaoperators, there are some more in that category

[16:59] <timotimo> if you count !, then you can also count =

[17:00] <tobs> timotimo: do you have an example?

[17:03] <tobs> oh, of course += and co., with the = on the right, not the left :/

[17:05] <pmurias> pheix: TimToady is working on one

[17:05] <pmurias> Zoffix: it's a bug, the problem is that heredocs are filled in a postprocessing pass

[17:07] <pmurias> so at the point the EVAL arguments are checked for being literals the heredocs isn't a literal yet

[17:11] *** atroxaper left
[17:18] *** pheix left
[17:21] *** rhizon8r left
[17:21] *** rhizon8r joined
[17:22] *** p6bannerbot sets mode: +v rhizon8r

[17:22] *** rhizon8r left
[17:23] *** MasterDuke joined
[17:23] *** p6bannerbot sets mode: +v MasterDuke

[17:23] *** MasterDuke left
[17:23] *** MasterDuke joined
[17:23] *** herbert.freenode.net sets mode: +v MasterDuke

[17:23] *** p6bannerbot sets mode: +v MasterDuke

[17:30] *** dotdotdot left
[17:32] *** dotdotdot joined
[17:32] *** p6bannerbot sets mode: +v dotdotdot

[17:41] *** lelf left
[17:45] *** dotdotdot left
[18:00] *** ryn1x joined
[18:01] *** p6bannerbot sets mode: +v ryn1x

[18:02] *** lelf joined
[18:03] *** p6bannerbot sets mode: +v lelf

[18:04] <Geth> ¦ doc: 8425844e6f | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/pod.pod6

[18:04] <Geth> ¦ doc: add missing 'v'

[18:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8425844e6f

[18:04] <synopsebot> Link: https://doc.perl6.org/language/pod

[18:04] *** dotdotdot joined
[18:05] <timotimo> tobs: i like max= and min=

[18:05] *** p6bannerbot sets mode: +v dotdotdot

[18:08] <Geth> ¦ doc: nxadm++ created pull request #2403: Fix #2402

[18:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2403

[18:08] <Geth> ¦ doc: a49bb55b82 | (Claudio Ramirez)++ | doc/Language/functions.pod6

[18:08] <Geth> ¦ doc: Fix #2402

[18:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a49bb55b82

[18:08] <Geth> ¦ doc: 15183a2026 | nxadm++ (committed using GitHub Web editor) | doc/Language/functions.pod6

[18:08] <Geth> ¦ doc: Merge pull request #2403 from nxadm/master

[18:08] <synopsebot> Link: https://doc.perl6.org/language/functions

[18:08] <Geth> ¦ doc: 

[18:08] <Geth> ¦ doc: Fix #2402

[18:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/15183a2026

[18:10] *** domidumont joined
[18:11] *** kurahaupo left
[18:11] *** p6bannerbot sets mode: +v domidumont

[18:12] *** regreg left
[18:36] *** noganex_ left
[18:36] *** dotdotdot left
[18:36] *** noganex joined
[18:37] *** p6bannerbot sets mode: +v noganex

[18:37] *** lelf` joined
[18:38] *** p6bannerbot sets mode: +v lelf`

[18:39] *** lelf left
[18:40] *** kurahaupo joined
[18:41] *** p6bannerbot sets mode: +v kurahaupo

[18:41] *** ExtraCrispy left
[18:42] *** lelf` left
[18:42] *** ExtraCrispy joined
[18:42] *** p6bannerbot sets mode: +v ExtraCrispy

[18:43] *** dotdotdot joined
[18:43] *** dotdotdot left
[18:47] *** dotdotdot joined
[18:47] *** pecastro joined
[18:47] *** p6bannerbot sets mode: +v dotdotdot

[18:48] *** p6bannerbot sets mode: +v pecastro

[19:01] *** dotdotdot left
[19:04] *** zakharyas left
[19:04] <moritz> I have some ideas for reviving the Perl 6 Coding Contest: https://gist.github.com/moritz/6f06ec7153ce396ac2734c2616d8b075

[19:04] *** zakharyas joined
[19:05] *** p6bannerbot sets mode: +v zakharyas

[19:06] *** dotdotdot joined
[19:07] *** p6bannerbot sets mode: +v dotdotdot

[19:09] <masak> ooh

[19:10] <masak> it was a lot of fun, wasn't it

[19:10] <timotimo> it was

[19:12] *** cjkinni left
[19:15] *** dotdotdot left
[19:19] *** cjkinni joined
[19:19] *** p6bannerbot sets mode: +v cjkinni

[19:25] *** dotdotdot joined
[19:26] *** p6bannerbot sets mode: +v dotdotdot

[19:26] *** noganex_ joined
[19:27] *** p6bannerbot sets mode: +v noganex_

[19:28] *** noganex left
[19:30] <Geth> ¦ doc: 937646d297 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/mop.pod6

[19:30] <Geth> ¦ doc: give a practical example for a regular user

[19:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/937646d297

[19:30] <synopsebot> Link: https://doc.perl6.org/language/mop

[19:31] *** domidumont left
[19:32] <Geth> ¦ doc: 392d834673 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/mop.pod6

[19:32] <Geth> ¦ doc: clearly show the common acronym

[19:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/392d834673

[19:32] *** dotdotdot left
[19:34] <timotimo> moritz: to get the best ideas for reviving the perl 6 coding contest, we should have a perl 6 coding contest contest

[19:39] <Geth> ¦ doc: 6483f941cc | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/mop.pod6

[19:39] <Geth> ¦ doc: use a better sub name

[19:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6483f941cc

[19:39] <synopsebot> Link: https://doc.perl6.org/language/mop

[19:40] *** ryn1x left
[19:41] <Zoffix> I don't think we have enough information to proceed. We should have a perl 6 coding contest contest contest to get ideas for how to handle the perl 6 coding contest contest

[19:44] <Zoffix> Bucciarati: d

[19:44] <Zoffix> Bucciarati: wrong person

[19:44] <Zoffix> buggable: d

[19:44] <buggable> Zoffix, Diwali is in 16 days, which is 2 weeks, 1 day, 4 hours, 15 minutes, and 24 seconds. Need to review -162 commits per day (-1139/week) to complete. Need 1 teaser flyers. Still have 2 TODO features costing 8 hours. Still have 0.3 policies to write. Still have ~95% of ChangeLog to do.

[19:49] <moritz> no chance to stem the coding contest in the remaining 16 days

[19:49] *** lichtkind left
[19:51] <timotimo> maybe we can hold a contest to see how to get out of this ever expanding tower of contest-contestification

[19:51] <tbrowder___> ref Diwali: maybe another Christmas release?  a tradition?

[19:51] <tbrowder___> p6 present?

[19:52] <timotimo> nine: https://github.com/rakudo/rakudo/blob/master/src/core/CompUnit/PrecompilationRepository.pm6#L263 - do you know how best to make this work under circumstances where trying to precompile a module gives "no such file or directory"?

[19:52] <timotimo> i'd expect it comes from the proc::async

[19:53] <tbrowder___> p6 gift to mankind

[19:53] <timotimo> lol

[19:53] *** dotdotdot joined
[19:53] *** dotdotdot left
[19:53] <timotimo> the $*EXECUTABLE is "-bash".IO

[19:54] <timotimo> i can just set --exec-name

[19:54] <timotimo> --execname*

[19:54] <MasterDuke> i think TimToady said he explicitly didn't want to release 6.d on a christmas to not appear to be setting a precedent of christmas releases

[19:55] <timotimo> m) m) m) m) m)

[19:58] * Zoffix raises an eyebrow at suggestion of delaying Diwali to happen on Christmas instead of Diwali, for the express purpos of running a conditing contest at the same time -_-

[19:59] <tbrowder___> ok, i forgot Diwali was a date or event...

[19:59] <timotimo> you mean a confectionery contest?

[19:59] <tbrowder___> not Dinali in Alaska...

[20:00] <MasterDuke> nor a river in egypt

[20:00] <timotimo> (that's because a confectionery is a konditor in german)

[20:00] <timotimo> (so a conditing contest sounds a little bit like konditorei contest)

[20:00] *** lizmat joined
[20:00] *** p6bannerbot sets mode: +v lizmat

[20:02] <tbrowder___> ah, the old saturday night live crew is here again

[20:03] *** zakharyas left
[20:04] *** zakharyas joined
[20:04] *** p6bannerbot sets mode: +v zakharyas

[20:05] *** zakharyas left
[20:06] *** aindilis left
[20:06] *** zakharyas joined
[20:06] *** aindilis joined
[20:07] *** p6bannerbot sets mode: +v zakharyas

[20:07] *** p6bannerbot sets mode: +v aindilis

[20:09] *** zxcvz left
[20:12] *** dotdotdot joined
[20:13] *** p6bannerbot sets mode: +v dotdotdot

[20:16] <geekosaur> why is $*EXECUTABLE claiming to be a login shell?

[20:20] <timotimo> because i just catted ./perl6-m and it has --execname="$0"

[20:22] <geekosaur> that seems like some rather impressive confusion somewhere, like .bash_profile is doing "source perl6-m". or someone set perl6-m as login shell and somehow login is chasing the #!s instead of just using the basename like it's supposed to

[20:22] <timotimo> huh?

[20:22] <timotimo> catted and copy-pasted is what i meant to say

[20:23] <geekosaur> oh

[20:23] <El_Che> is it only on you machine or something generic?

[20:23] <El_Che> > say $*EXECUTABLE

[20:23] <El_Che> "/opt/rakudo-pkg/bin/rakudo".IO

[20:23] <El_Che> on mine

[20:24] <geekosaur> if I am understanding correctly, timotimo cut and pasted part of perl6-m into .profile

[20:24] <timotimo> no

[20:24] <geekosaur> or .bashrc but that has other confusions built in that could make an even bigger mess

[20:24] <timotimo> into the prompt

[20:24] <geekosaur> ah

[20:24] <geekosaur> thatd do it, yes

[20:25] <timotimo> that was one big confusion

[20:25] <timotimo> the other one was that "rr record /foo/bar/moar blah/perl6.moar" just outputted "Tests: https://some-github-address"

[20:25] *** dotdotdot left
[20:25] <timotimo> and "which rr" gave me /usr/bin/rr

[20:26] <timotimo> but which doesn't know about aliases

[20:26] <geekosaur> right, it's easily confused

[20:26] <geekosaur> it can also tell you what the next shell you start will see instead of what your running shell sees

[20:27] <geekosaur> POSIX specced "type" instead of "which" for a reason

[20:28] <timotimo> ah, that's what i needed

[20:28] <timotimo> i wouldn't have thought of "type", i know type on DOS is like cat

[20:28] *** Guest13389 left
[20:31] <timotimo> BTW, PROCJAM 2018 is running since yesterday and until... a week later?

[20:31] <geekosaur> they wanted to avoid stuff already in use on varius unixes, whchc ounts out "where", "which", and "whence" among others

[20:31] <timotimo> WHY

[20:31] *** holyghost left
[20:32] *** holyghost joined
[20:32] *** p6bannerbot sets mode: +v holyghost

[20:32] *** dotdotdot joined
[20:33] *** robertle left
[20:33] *** p6bannerbot sets mode: +v dotdotdot

[20:39] *** dotdotdot left
[20:39] *** zakharyas left
[20:44] *** |oLa| joined
[20:45] *** pmurias left
[20:45] *** p6bannerbot sets mode: +v |oLa|

[20:45] *** dotdotdot joined
[20:46] *** p6bannerbot sets mode: +v dotdotdot

[20:48] *** beeman left
[20:50] *** dotdotdot left
[20:53] *** Guest13389 joined
[20:53] *** dotdotdot joined
[20:54] *** p6bannerbot sets mode: +v Guest13389

[20:54] *** p6bannerbot sets mode: +v dotdotdot

[20:54] *** beeman joined
[20:54] *** p6bannerbot sets mode: +v beeman

[20:57] *** |oLa| left
[20:58] *** dotdotdot left
[20:59] *** dotdotdot joined
[21:00] *** p6bannerbot sets mode: +v dotdotdot

[21:03] *** dotdotdot left
[21:04] *** dotdotdot joined
[21:04] *** itaipu joined
[21:05] *** p6bannerbot sets mode: +v dotdotdot

[21:05] *** p6bannerbot sets mode: +v itaipu

[21:06] *** dotdotdot left
[21:06] *** dotdotdot joined
[21:07] *** p6bannerbot sets mode: +v dotdotdot

[21:07] *** dotdotdot left
[21:10] *** dotdotdot joined
[21:11] *** p6bannerbot sets mode: +v dotdotdot

[21:18] *** dotdotdot left
[21:19] *** tobs left
[21:19] *** dotdotdot joined
[21:20] *** tobs_ joined
[21:20] *** p6bannerbot sets mode: +v tobs_

[21:20] *** tobs_ is now known as tobs

[21:20] *** p6bannerbot sets mode: +v dotdotdot

[21:27] *** dotdotdot left
[21:34] *** cjkinni left
[21:35] *** cjkinni joined
[21:35] *** p6bannerbot sets mode: +v cjkinni

[21:36] *** dotdotdot joined
[21:37] *** p6bannerbot sets mode: +v dotdotdot

[21:44] *** dotdotdot left
[21:47] *** kybr left
[21:54] *** sena_kun left
[21:55] *** ryn1x joined
[21:55] *** p6bannerbot sets mode: +v ryn1x

[21:56] *** dotdotdot joined
[21:57] *** p6bannerbot sets mode: +v dotdotdot

[21:59] *** regreg joined
[21:59] *** p6bannerbot sets mode: +v regreg

[22:01] *** dotdotdot left
[22:07] *** regreg left
[22:09] *** dotdotdot joined
[22:10] *** p6bannerbot sets mode: +v dotdotdot

[22:12] *** Zoffix left
[22:15] *** rindolf left
[22:15] *** pecastro left
[22:26] *** aindilis left
[22:27] *** aindilis joined
[22:28] *** p6bannerbot sets mode: +v aindilis

[22:34] *** ryn1x left
[22:35] *** ryn1x joined
[22:35] *** vrurg joined
[22:35] *** p6bannerbot sets mode: +v ryn1x

[22:36] *** p6bannerbot sets mode: +v vrurg

[22:37] *** dotdotdot left
[22:39] *** dotdotdot joined
[22:40] *** p6bannerbot sets mode: +v dotdotdot

[22:52] *** dotdotdot left
[22:53] *** ryn1x left
[22:53] *** dotdotdot joined
[22:54] *** p6bannerbot sets mode: +v dotdotdot

[22:58] *** dotdotdot left
[22:59] *** HaraldJoerg left
[23:09] *** graphene joined
[23:10] *** p6bannerbot sets mode: +v graphene

[23:10] <timotimo> https://www.twitch.tv/classictetris - classic tetris world championship grand finals

[23:12] *** dotdotdot joined
[23:13] *** p6bannerbot sets mode: +v dotdotdot

[23:18] *** dotdotdot left
[23:23] *** dotdotdot joined
[23:24] *** p6bannerbot sets mode: +v dotdotdot

[23:31] *** dotdotdot left
[23:43] *** dotdotdot joined
[23:44] *** p6bannerbot sets mode: +v dotdotdot

[23:48] *** dotdotdot left
[23:55] *** dotdotdot joined
[23:56] *** p6bannerbot sets mode: +v dotdotdot

[23:57] *** jbotz_ left
[23:57] *** AlexDaniel left
[23:58] *** AlexDaniel joined
[23:58] *** p6bannerbot sets mode: +v AlexDaniel

