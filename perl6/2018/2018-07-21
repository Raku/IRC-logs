[00:01] *** sena_kun left
[00:01] *** rindolf joined
[00:04] <LeboyX> where is the $var.list method documented?

[00:06] <tobs> LeboyX: it's a method of Any

[00:06] <LeboyX> Ah. I see that now

[00:06] <LeboyX> Thanks!

[00:07] *** LeboyX left
[00:12] *** wamba left
[00:18] *** warriors left
[00:22] *** pmurias left
[00:46] *** jeromelanteri joined
[00:48] <Kaiepi> mkdir /share: Permission denied at /usr/libdata/perl5/ExtUtils/Command.pm line 299.

[00:48] <Kaiepi> ?

[00:51] *** vrurg left
[00:51] *** lizmat left
[00:54] *** vrurg joined
[00:58] *** dct left
[01:03] *** ruoso left
[01:13] *** jameslenz joined
[01:15] *** Sgeo_ joined
[01:16] *** Kaiepi left
[01:17] *** jameslenz left
[01:17] *** benji__ is now known as benjikun

[01:18] *** markoong left
[01:19] <benjikun> Kaiepi: what's that from?

[01:19] <benjikun> trying to use the `mkdir` routine?

[01:19] *** Sgeo left
[01:22] *** warriors joined
[01:24] *** vrurg left
[01:25] *** vrurg joined
[01:32] *** araraloren joined
[01:37] *** Kaiepi joined
[01:37] *** vrurg left
[01:43] *** buggable joined
[01:43] *** ChanServ sets mode: +v buggable

[01:43] *** ZofBot left
[01:43] *** ZofBot joined
[01:43] *** ChanServ sets mode: +v ZofBot

[02:06] <Juerd> It looks like Any.List just calls Any.list... Why do both exist?

[02:10] *** Kaiepi left
[02:10] <TimToady> m: say [1..10].list.WHAT

[02:10] <camelia> rakudo-moar bf514c150: OUTPUT: ¬´(Array)‚ê§¬ª

[02:10] <TimToady> m: say [1..10].List.WHAT

[02:10] <camelia> rakudo-moar bf514c150: OUTPUT: ¬´(List)‚ê§¬ª

[02:11] *** Kaiepi joined
[02:11] <Juerd> Thanks. What's the use case for .list?

[02:12] <TimToady> it's really short for "make something Positional"

[02:12] <TimToady> but that's kinda long

[02:13] <Juerd> And not much less confusing :)

[02:14] <MasterDuke> m: my $a = ^4; .say for $a; .say for $a.list

[02:14] <camelia> rakudo-moar bf514c150: OUTPUT: ¬´^4‚ê§0‚ê§1‚ê§2‚ê§3‚ê§¬ª

[02:15] <TimToady> whereas something capitalized like .List pretty much implies you want to end up with that exact type

[02:18] <Juerd> I'll try to get some sleep, hoping I'll understand in the morning :)

[02:18] <TimToady> Just because I'm explaining doesn't mean I understand.  :)

[02:24] *** Zoffix joined
[02:24] <Zoffix> .tell AlexDaniel recall you had issue with using ¬´¬ª in stuff like `run`? It may or may not interest you that the error for `m: ¬´` referrs to them as "shell-quotes"

[02:24] <yoleaux> Zoffix: I'll pass your message to AlexDaniel.

[02:24] *** Zoffix left
[02:25] <rindolf> hi all

[02:25] <rindolf> sup?

[02:27] *** konsolebox left
[02:28] <AlexDaniel> .tell Zoffix yeah, because ¬´¬ª do shell style quoting

[02:28] <yoleaux> 02:24Z <Zoffix> AlexDaniel: recall you had issue with using ¬´¬ª in stuff like `run`? It may or may not interest you that the error for `m: ¬´` referrs to them as "shell-quotes"

[02:28] <yoleaux> AlexDaniel: I'll pass your message to Zoffix.

[02:29] <rindolf> TimToady: I created https://github.com/shlomif/rakudo-git-master-install

[02:30] *** konsolebox joined
[02:33] <rindolf> TimToady: btw, is the word "creator" in English reserved to divine creation (like Hebrew "bor√©") or can it be a more mundane one ("yotzer")?

[02:33] <geekosaur> english has only the one

[02:35] <rindolf> geekosaur: yes

[02:35] <warriors> how do we type those (not on my keyboard) characters, shown in many Perl6 examples, the lazy evaluation example on Perl6.org have a few :)

[02:36] <geekosaur> to the extent thatthere's a difference, "create" implies something new, "make" means following someone else's pattern. but not everyone uses them that way; it's a much looser distinction than in Hebrew

[02:37] <rindolf> geekosaur: well, there is https://www.gnu.org/philosophy/words-to-avoid.html#Creator

[02:37] <geekosaur> um. I assume it is known that the p6 doc site has a bunch of bad links?

[02:37] <geekosaur> yes, it varies. there's religious groups that can get snippy at times. they don't run the show

[02:38] <rindolf> geekosaur: in hebrew we have `assah for "make"

[02:38] <geekosaur> warriors, https://docs.perl6.org/language/019-unicode_entry

[02:39] <warriors> :) thanks

[02:39] *** fake_space_whale left
[02:40] <warriors> google returns a bad link, i just created an issue on github for it

[02:40] <geekosaur> and on windows I use https://github.com/samhocevar/wincompose

[02:40] <geekosaur> oh, they just changed all the links and I had to reload the page I had open

[02:44] <rindolf> geekosaur: thanks! Seems like the FSF are being paranoid in this regard

[02:45] <geekosaur> some groups are. "creator" was a perfectly good word until *recently* certain pseudo"Christian" groups decided to throw their weight around

[02:46] <rindolf> geekosaur: ah

[02:53] <warriors> abbrev mode in emacs seems to do the trick 

[02:54] <rindolf> geekosaur: thanks

[02:57] <warriors> emacs is good 

[02:57] <warriors> emacs + Perl6 is bettar

[03:02] <TimToady> I dunno, why do you need two operating systems?  :-)

[03:02] <rindolf> TimToady: two are better than one!

[03:02] <rindolf> TimToady: I collect OSes

[03:04] <rindolf> TimToady: https://github.com/shlomif/shlomif-email-signature/blob/master/shlomif-sig-quotes.txt#L701

[03:05] <benjikun> Perl6 operating system :thinking:

[03:05] <warriors> :)

[03:05] <warriors> (define-abbrev-table 'global-abbrev-table '(("Perl6" "‚ô•"))

[03:05] <rindolf> benjikun: will it have a good text editor?

[03:06] <benjikun> rindolf: I'm a vim guy :(

[03:06] <rindolf> benjikun: can it send mail?

[03:06] <warriors> i become an emacs fan after i successfully configured org mode

[03:06] <rindolf> benjikun: so am i.

[03:06] <warriors> org mode is soo good 

[03:07] <benjikun> A perl6 system shell :thinking:

[03:07] <rindolf> benjikun: neovim seems promising but it doesnt have sth as good as gvim yet

[03:07] <benjikun> great for general scripting

[03:07] <benjikun> rindolf: meh I just used customized vim

[03:08] <rindolf> benjikun: my gvim is customised too

[03:08] <warriors> i did notice that most Perlers prefer vim .. but well 

[03:08] <benjikun> rindolf: Why use gvim over normal vim?

[03:08] <warriors> again org mode  is just too good 

[03:08] <rindolf> warriors: you dont have to use vim for perl

[03:08] <benjikun> I suppose if you don't use cli as much for some stuff

[03:08] <warriors> i know

[03:08] <rindolf> text is text

[03:09] <rindolf> benjikun: i use cli

[03:09] <warriors> all we really need is repl as good ad utop for ocaml

[03:09] <rindolf> benjikun: gvim has better colours and menus

[03:09] <warriors> and i will be very happy

[03:09] <benjikun> warriors: I love ocaml, I certainly prefer perl6 for general system-wide scripting though

[03:09] <rindolf> i use alf+f+s sometimes

[03:09] <rindolf> or alt+f+x

[03:10] <warriors> i was just mentioning it for the utop thing :)

[03:10] <benjikun> I've been exploring nim lately

[03:10] *** Kaiepi left
[03:11] <warriors> utop is a really nice repl, i like how it does autocomplete

[03:11] *** g- left
[03:11] <benjikun> warriors: https://github.com/bduggan/p6-jupyter-kernel

[03:12] <benjikun> if you don't mind doing it in a webbrowser :3

[03:12] <warriors> interesting 

[03:13] <benjikun> You can also get history in the p6 cli repl and arrow key usage with Linenoise

[03:13] *** jameslenz joined
[03:13] <rindolf> benjikun: i sometimes use vim and sometimes kate

[03:14] <benjikun> rindolf: I use vim or joe normally

[03:14] <rindolf> benjikun: ah, joe

[03:14] *** g- joined
[03:15] <rindolf> benjikun: joe was my first unix console editor

[03:15] <benjikun> Mostly same for me, other than nano

[03:15] <rindolf> benjikun: but i stopped using it

[03:16] <rindolf> or maybe i used pico a little before that

[03:16] <warriors> the emacs have syntax highlight, if we get utop for perl6, i wont mind opening a repl for the auto complete,not the most efficient, but will be satisfacotry 

[03:17] <warriors> the emacs perl6 mode i meant

[03:17] <rindolf> benjikun: I dreamt in gvim a few times

[03:17] *** jameslenz left
[03:18] <rindolf> benjikun: I got used to gvim on windows nt/2000

[03:18] <rindolf> benjikun: it was installed on the technion computer lab

[03:19] <rindolf> benjikun: for a while i used :source /mswin.vim

[03:19] <rindolf> but i stopped using it too

[03:25] <rindolf> vim has a syntax file for emacs lisp and emacs has a mode for vimscript ;)

[03:29] *** Kaiepi joined
[03:40] *** gfldex joined
[03:53] *** sauvin joined
[04:03] *** epony left
[04:06] <warriors> I strongly , strongly , strongly recommend, that the official docs, always include examples with the ascii equivalent in addition to that with the unicode char

[04:06] *** epony joined
[04:07] *** squashable6 joined
[04:10] *** Zoffix joined
[04:10] <Zoffix> warriors: https://github.com/perl6/doc/issues/new

[04:10] *** Kaiepi left
[04:10] <Zoffix> Statements on IRC, especially on a Friday night usually get lost :)

[04:11] <warriors> good idea :) i will 

[04:12] <Zoffix> ZofBot: rock it with me, bud: https://www.youtube.com/watch?v=01g5uQiSdWM

[04:14] *** Kaiepi joined
[04:14] <rindolf> Zoffix: hey

[04:14] <Zoffix> \o

[04:33] <benjikun> how are you doing Zoffix

[04:42] <Zoffix> üëç

[04:48] <rindolf> Emojjix

[04:52] *** Kaiepi left
[04:56] *** Zoffix left
[04:58] *** buggable left
[04:58] *** Kaiepi joined
[05:00] *** buggable joined
[05:00] *** ChanServ sets mode: +v buggable

[05:00] *** xtreak joined
[05:13] *** Sgeo_ left
[05:13] *** jameslenz joined
[05:13] *** spycrab0 left
[05:13] <[Coke]> tbrowder_: what's the status on the broken links? those need to be changed back asap - this is a breaking change to the website.

[05:14] <[Coke]> if this means reverting the whole shebang, that's preferable to breaking all those links.

[05:14] *** Sgeo joined
[05:14] <[Coke]> Looks like they're still broken.

[05:17] <Geth> ¬¶ doc: coke assigned to tbrowder Issue URGENT: work to order entries on https://docs.perl6.org/language.html has broken long standing links. https://github.com/perl6/doc/issues/2202

[05:17] *** jameslenz left
[05:20] <warriors> subscribe to this one https://github.com/perl6/doc/issues/2190

[05:20] <warriors> i think this is where they will solve it

[05:25] *** MasterDuke left
[05:33] *** Kaypie joined
[05:33] *** Kaiepi left
[05:40] *** aborazmeh joined
[05:40] *** aborazmeh left
[05:40] *** aborazmeh joined
[05:41] *** jeromelanteri left
[05:46] *** AlexDani` joined
[05:51] *** AlexDaniel left
[05:58] *** jeromelanteri joined
[06:08] *** quester joined
[06:19] *** SteffanW joined
[06:20] *** jmerelo joined
[06:21] <jmerelo> status

[06:21] <jmerelo> releasable6: status

[06:21] <releasable6> jmerelo, Next release in ‚âà12 hours. 4 blockers. 0 out of 233 commits logged (‚ö† 78 warnings)

[06:21] <releasable6> jmerelo, Details: https://gist.github.com/8ea7e88e965bde18b0029488eeb456c0

[06:21] *** lizmat joined
[06:22] <jmerelo> Someone to help this SO poster? https://stackoverflow.com/questions/51432724/cro-websocket-client-doesnt-see-when-the-server-goes-out

[06:22] <Kaypie> getting a netbsd vm set up for testing, fingers crossed the installer doesn't fuck up the disk again

[06:22] <Kaypie> oh websockets i could give it a go

[06:24] <jmerelo> Kaypie: thanks!

[06:44] *** xtreak left
[06:45] *** xtreak joined
[06:50] *** wamba joined
[06:52] *** aborazmeh left
[07:10] *** quester left
[07:12] <rindolf> Kaypie: i know vbox has poor support for fbsd

[07:12] *** hankache joined
[07:13] <Kaypie> worse, i'm using qemu on openbsd since vmd doesn't recognize the netbsd iso as bootable

[07:13] *** jameslenz joined
[07:13] <Kaypie> i can get it to install, but not boot

[07:15] <araraloren> How can I add a pragma before enter the Perl 6 REPL ?

[07:18] *** jameslenz left
[07:22] <jmerelo> araraloren: You can use it _when_ you enter. Same effect, I guess. 

[07:22] <geekosaur> perl6 -MMONKEY (or whatever)

[07:23] *** aindilis left
[07:23] <araraloren> for example `no strict`

[07:23] <araraloren> I found no way to add this working for everyline

[07:24] <araraloren> I mean like -M in command line

[07:25] *** konsolebox left
[07:35] *** hankache left
[07:38] *** araraloren left
[07:48] *** warriors left
[07:50] <xinming> m: my $take-me:<home> = 'When the glory has no end';

[07:50] <camelia> rakudo-moar bf514c150: ( no output )

[07:51] <xinming> In this case, what does m: mean? or it's just copy&paste junk?

[07:51] <xinming> https://docs.perl6.org/language/072-syntax   <--- It's in this url

[07:56] *** sortiz joined
[08:01] *** SCHAPiE left
[08:05] *** SCHAPiE joined
[08:07] *** sena_kun joined
[08:12] *** aborazmeh joined
[08:12] *** aborazmeh left
[08:12] *** aborazmeh joined
[08:13] *** kaare_ joined
[08:13] <stmuk> looks like copy&paste junk to me

[08:15] *** Xliff joined
[08:15] <Xliff> \o

[08:16] <Xliff> What's the best way to write a regexp that will allow for an expression like "a.b.c"

[08:16] <Xliff> But will fail "a.b."

[08:17] *** lizmat left
[08:19] <jmerelo> xinming: correct. Copy/paste junk. Will fix.

[08:21] <jmerelo> Xliff: /\w\.\w\.\w/?

[08:21] <jmerelo> m: say "a.b.c" ~~ /\w\.\w\.\w/

[08:21] <camelia> rakudo-moar bf514c150: OUTPUT: ¬´ÔΩ¢a.b.cÔΩ£‚ê§¬ª

[08:21] <jmerelo> m: say "a.b." ~~ /\w\.\w\.\w/

[08:21] <camelia> rakudo-moar bf514c150: OUTPUT: ¬´Nil‚ê§¬ª

[08:22] <Xliff> jmerelo: But what about aa.bb.cc.dd.

[08:22] <Xliff> ?

[08:22] <Geth> ¬¶ doc: c1f1bb5954 | (JJ Merelo)++ | doc/Language/syntax.pod6

[08:22] <Geth> ¬¶ doc: Fixing copy/pasta

[08:22] <Geth> ¬¶ doc: 

[08:22] <Geth> ¬¶ doc: Addressing this comment in the IRC channel: http://colabti.org/irclogger/irclogger_log/perl6?date=2018-07-21#l229

[08:22] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/c1f1bb5954

[08:22] <synopsebot> Link: https://doc.perl6.org/language/syntax

[08:23] <Xliff> So more like / \w+ % '.' /, but that allows for a following .

[08:24] <jmerelo> m: say "aa.bb.cc" ~~ /\w+\.\w+\.\w+/

[08:24] <camelia> rakudo-moar bf514c150: OUTPUT: ¬´ÔΩ¢aa.bb.ccÔΩ£‚ê§¬ª

[08:25] <Xliff> 'You are still using a set number. I can't use that.

[08:25] <Xliff> Because it can be aa.bb

[08:25] <Xliff> Or just aa

[08:25] <Xliff> Just can't have the trailing .

[08:25] <Xliff> I am thinking I have to settle on just matching and using an action class to throw an exception if that following . is detected.

[08:26] *** Xliff left
[08:26] <jmerelo> Xliff: use negative lookahead assertion https://docs.perl6.org/language/067-regexes#Lookahead_Assertions

[08:32] <Geth> ¬¶ doc: 915eb4951a | (JJ Merelo)++ | doc/Language/syntax.pod6

[08:32] <Geth> ¬¶ doc: Reflow here and there

[08:32] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/915eb4951a

[08:32] <Geth> ¬¶ doc: 58983f4232 | (JJ Merelo)++ | .gitignore

[08:32] <Geth> ¬¶ doc: :see_no_evil:

[08:32] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/58983f4232

[08:32] <synopsebot> Link: https://doc.perl6.org/language/syntax

[08:48] <jmerelo> OK, I got the problem with the page build 

[08:49] <jmerelo> There was a leftover directory which hadn't been deleted when updating source.

[08:49] <jmerelo> I really don't know why

[08:49] *** konsolebox joined
[08:50] *** aborazmeh left
[08:50] <jmerelo> I wonder if we should add this https://stackoverflow.com/questions/1499157/git-checkout-pull-doesnt-remove-directories to housekeeping in the perl6 docs site

[08:51] <jmerelo> basically add git clean -fd to make html

[08:54] <CIAvash[m]> .tell Xliff '%' doesn't allow a trailing '.', '%%' does.

[08:54] <yoleaux> CIAvash[m]: What kind of a name is "Xliff"?!

[08:55] <stmuk> jmerelo: I was wondering that myself ... maybe go for it!

[08:55] <CIAvash[m]> .tell Xliff '%' doesn't allow a trailing '.', '%%' does.

[08:55] <yoleaux> CIAvash[m]: I'll pass your message to Xliff.

[08:56] <jmerelo> stmuk: still some stuff to clean up first... builds in travis are also failing. I'm fixing the stuff there, if that works I'll get to that.

[08:56] <jmerelo> stmuk: I'll create an issue so that I don't forget.

[09:01] <stmuk> jmerelo: given how urgent fixing the site is it could be worth trying that one line fix before anything else?

[09:02] <stmuk> or even just "rm -rf build" in "make html"

[09:03] <jmerelo> And we're back to normal URLs https://docs.perl6.org/language/5to6-nutshell

[09:03] <jmerelo> stmuk: it's not enough. 

[09:04] <jmerelo> stmuk: the problem is that when you delete a whole directory with files in it it's not deleted from the repo. Even if I kept removing it from here and there, it kept issuing the error.

[09:04] <jmerelo> stmuk: I had to look up the new script to see what it was doing, and it was copying everything under doc/Language And there was this untracked directory, 0-html-whatever, which was causing the error

[09:05] <jmerelo> stmuk: so I removed it by hand, rebuilt, sync...

[09:06] <Geth> ¬¶ doc: JJ self-assigned Clean directories when building the site https://github.com/perl6/doc/issues/2203

[09:07] <stmuk> so 0-html-whatever isn't under "build"?

[09:07] <jmerelo> stmuk: it was, but because it was copied over and over again from under Language/

[09:08] <stmuk> this sounds quite messy

[09:09] *** sortiz left
[09:11] <stmuk> oh you mean "repo checkout" not "repo" above

[09:14] *** jameslenz joined
[09:14] <stmuk> jmerelo: I was refering to two problems in #2202 -- the one you just opened as #2203 and a further one with the "html-nohighlight" target

[09:18] *** [Sno] joined
[09:18] *** sno left
[09:27] *** jameslenz left
[09:31] <jmerelo> stmuk: let me see

[09:32] *** xtreak left
[09:33] *** lizmat joined
[09:34] *** cognominal left
[09:38] <tbrowder_> wellll, looks like jmerelo and stmuk  saved my bacon!

[09:38] <tbrowder_> jmerel: thanks

[09:38] <tbrowder_> jmerelo: thanks

[09:38] <tbrowder_> stmuk: thanks

[09:39] *** sarna joined
[09:39] <sarna> o/

[09:39] <tbrowder_> sarna: 

[09:39] <tbrowder_> sarna: \o

[09:39] <tbrowder_> fingers not awake yet

[09:49] <tbrowder_> jmerelo: i just looked at the build log stmuk showed, it still doesn't show the build dir clean and gen-pod6-source BEFORE running htmlify.

[09:49] <tbrowder_> what is running that script? docker?

[09:50] <stmuk> that's an old build log .. it seems to have deployed ok since then due to jmerelo's change 

[09:51] <stmuk> or maybe something else done on the server .. not sure

[09:51] *** spycrab0 joined
[09:52] <tbrowder_> ok, any more problems with links?

[09:55] <stmuk> I don't think "git clean" in makefile targets is sensible see comments on https://github.com/perl6/doc/issues/2203#issuecomment-406784734

[09:55] <tbrowder_> i'm starting another PR to address the file "ddd-" prefix but want to know if there are any current problems with links? google search?

[09:56] *** kaare_ left
[09:56] <tbrowder_> i see searching for "perl 6 concurrency" gives the right page--great! pressing on... 

[10:01] <jmerelo> tbrowder_: sure!

[10:01] <jmerelo> tbrowder_: the docker file is just used for testing

[10:02] <tbrowder_> yes, but the trick is the build dir must be current first with the current tooling or the unexpected may happen

[10:02] <jmerelo> stmuk: I cleaned up stuff on the server... That seemed to work.

[10:02] <tbrowder_> are you still in japan

[10:03] <tbrowder_> does anyone have any problems with the current dir layout? 

[10:03] <jmerelo> tbrowder_: no, just back

[10:03] <jmerelo> At home now since yesterday at 1AM

[10:04] <jmerelo> A bit jetlagged, I guess

[10:04] <jmerelo> tbrowder_: I think that if we do git clean -fd before updating dirs it shouldn't be a problem

[10:04] <tbrowder_> i would, in a separate move later, like to move all fixed or original sources, except doc, under one dir

[10:05] <El_Che> happy to see you guys working on the docs!

[10:05] <El_Che> appreciated!

[10:05] <tbrowder_> i don't see target "clean-fd"

[10:05] <tbrowder_> El_Che: \o

[10:06] <tbrowder_> jmerelo and stmuk got us back online again, whew!

[10:07] <jmerelo> tbrowder_: no, I would add it to make html

[10:07] <tbrowder_> also we need to figure out how to handle the chinese translation so generously provided

[10:07] <jmerelo> tbrowder_: I have already said it on the issue. I would really rather not.

[10:07] <stmuk> jmerelo: https://github.com/perl6/doc/issues/2203#issuecomment-406784734

[10:08] <tbrowder_> jmerelo: i understand the concern about bitrot and non-sync info. 

[10:09] <jmerelo> tbrowder_: plus the bigger problem is that pro translations are not just done directly. You need a lot of tooling, including terminology, whole sentences... There's a program called Omega (whatever) that handles that

[10:10] <tbrowder_> can the perl6.org give a separate site for each language, and there warn the user the canonical info is the the main site?

[10:10] <jmerelo> tbrowder_: I used it in a mini-translation hackathon during YAPC in Granada, and it really helps speed up translations and keep it coherent.

[10:11] <stmuk> git clean will destroy any developer's work in progress which isn't checked in. Neither should we assume people are running from a git checkout

[10:11] <jmerelo> tbrowder_: that would be ideal; to have forks with the whole tooling and stuff published to, let's say, zh.docs.perl6.org

[10:12] <jmerelo> stmuk: OK, I see what you mean. Dangerous thing to do locally. I can add git stash there, just in case.

[10:12] <tbrowder_> AlexDaniel agrees that we also need something like "test.docs.perl6.org" to avoid my disastrous live push!!

[10:13] <jmerelo> tbrowder_: it's not been the first, it's not gonna be the last.

[10:13] <sarna> tyil: looks really nice! personally I'd add more stuff to Env, but that could be left as an exercise for the reader :)

[10:13] <stmuk> the whole thing is quite fragile

[10:13] <tbrowder_> but a test site would be cool, if it's not too much work

[10:14] <jmerelo> tbrowder_: so no big deal. A huge amount of work has a non-zero likelihood of problems when going to production. Still very grateful for the work done.

[10:14] <sarna> tyil: also, your bracing style is really interesting, I've never seen stuff like `) {` on its own line :D

[10:14] *** psychoslave_ joined
[10:14] <tyil> :o

[10:14] <stmuk> jmerelo: my other point is clean up shouldn't be specific to one version control system. .git directories wouldn't exist in a CPAN release tarball or in R* for example

[10:14] <tyil> now you have :3

[10:14] <jmerelo> tbrowder_: for starters, I think we would have to set up secondary DNSs, which I did for the last time in the 90s. But I guess it could be done.

[10:15] <tyil> I might redo some parts of it again to make it easier to follow along in a tutorial

[10:15] <tbrowder_> part of my motivation is to help make the site more robust and untangle data and presentation as much as possible.

[10:15] *** AlexDani` left
[10:15] <jmerelo> stmuk: but the objective of this is precisely to clean up directories that are no longer under source control. So this is kinda specific. I don't know if it affects stuff it's never been under source control

[10:15] <tbrowder_> jmerelo: i know you are pushing templates--i agree!

[10:15] <jmerelo> tbrowder_: that's the way to go and paves the path for a future dynamic generation...

[10:16] *** AlexDani` joined
[10:16] <stmuk> jmerelo: the clean up should be explicit and targeted. We should know what files/dirs are being created

[10:16] <jmerelo> stmuk: hum. We need the git log for that...

[10:16] *** wamba left
[10:17] <stmuk> its nothing to do with version control. Someone could be running from a tarball

[10:17] <jmerelo> stmuk: another option is to just not do anything at all. So far, this is the first time I've seen this problem. Let's add some notice to the infrastructure document to tell how it was fixed and that's that

[10:17] <sarna> tyil: though, the original lispy was just one file, yours feels quite big (even if it isn't)

[10:18] <tyil> it is bigger, yes

[10:18] <tyil> I can golf it down and put it in one file

[10:18] <jmerelo> tbrowder_: finally going to Glasgow?

[10:18] <tyil> but I'd rather have something more generic that can be easily expanded upon

[10:18] <stmuk> tbrowder_: I suggest any files and directories created be under one non-revision control dir (maybe we have that now with "build"?) and that directory be removed before the build?

[10:18] <jmerelo> Maybe do a BoF about doc tooling and roadmap while we're there?

[10:18] <tbrowder_> hm, afraid not

[10:18] <tyil> I'm not sure how it'll turn out in a couple iterations

[10:19] <tyil> I'm learning to deal with grammars better myself everytime I change it up

[10:19] <jmerelo> stmuk: yep, that's the thing... html is both used for some files and for files generated by htmlify.p6

[10:19] *** wamba joined
[10:19] <tbrowder_> i'm starting another doc wiki page, we can use it like a blackboard

[10:20] <stmuk> I still think the system should be able to delete the data it creates rather than using git to do it!

[10:20] <jmerelo> stmuk: still, this particular problem was created by copying files that were no longer under source control. When you do a git pull and all files in a directory have been eliminated by git rm, git does not remove the directory or the files.

[10:20] <sarna> tyil: no no, don't golf it, lispy's point was being a simple interpreter you could understand fairly quickly

[10:21] <tyil> tbrowder_: if you want to have a page to keep notes with multiple people, you can use etherpad

[10:21] <tyil> I host one on my own site that everyone is allowed to use  https://pad.tyil.nl/

[10:21] <jmerelo> stmuk: maybe I can just change how stuff is done in docs.perl6.org, no need to touch the rest of the stuff.

[10:21] <tbrowder_> the wiki can be edited by anyone

[10:22] <stmuk> jmerelo: I understand the problem but I don't think you understand why your solution is wrong

[10:22] <jmerelo> stmuk: I have proposed several solutions, but I'm all ears... I'm not committed to either.

[10:22] <tyil> sarna: I'll try to keep it readable then, but I'll rewrite it a couple times regardless to come to a good, clean solution that I can incorporate into an article :>

[10:23] <tyil> I'm not too unhappy with the current state, but I think I can do better

[10:23] <sarna> tyil: alright, good luck :)

[10:23] <tyil> thanks ^_^

[10:23] <stmuk> jmerelo: I've tried to explain on the ticket and IRC already

[10:23] <tyil> I'll poke you when I have more updates I'd like you to look at, if you don't mind

[10:24] <sarna> tyil: please do

[10:24] *** psychoslave_ left
[10:24] <jmerelo> stmuk: I'm looking now into changing the update-and-sync script. That's only on the server side, it wouldn't hurt devs or delete things that are under control.

[10:25] <tbrowder_> i started the problem because i was intentionally adding dirs because i saw travis failing and not finding a dir

[10:26] <jmerelo> tbrowder_: water under the bridge. Let's see now how to avoid this kind of thing happening in the future (other will surely happen)

[10:26] <tbrowder_> ultimately it was because i couldn't see what was happening is part of the travis process, nor how the site is actually generated

[10:27] <jmerelo> tbrowder_: that's a thing that only now I'm beginning to understand. Basically, update-and-sync is run every 5 minutes on the server, all stuff is generated, and then rsync'ed somewhere else.

[10:27] <tbrowder_> ergh!

[10:27] <jmerelo> stmuk: do you see a problem with running git clean -fd right after git checkout, line 11 of update-and-sync?

[10:28] <jmerelo> tbrowder_: don't look at me. It was already there when I arrived...

[10:29] <jmerelo> tbrowder_: there's a hack in update-and-sync, and that's because html has some files under source control. Maybe we could follow stmuk's advice and have those files somewhere else, maybe move them to html-source or something like that

[10:29] <tbrowder_> ah! i'll just add a couple of lines then...

[10:30] <stmuk> jmerelo: Yes that looks fine to me. Most people working on the docs wouldn't run that and it's a system script explicitly for deploy

[10:30] *** psychoslave joined
[10:31] <jmerelo> stmuk: OK. Let's try that then. :-) Thanks!

[10:31] <tbrowder_> i agree, that's what i'll show in the wiki before i do anything "dangerous" (been reading Vince Flynn's 'Kill Shot')

[10:33] <jmerelo> tbrowder_: didn't know the author. Worth the while? I'm into Harlan Coben, Connelly, Hiaasen, American noir in general. 

[10:33] <stmuk> jmerelo: I'd perhaps backup the existing files on the server into a tarball before running that "git clean -fd" just in case there are files manually copied in we need

[10:33] <jmerelo> tbrowder_: well, world noir in general. I love Icelandic noir, for instance.

[10:33] <tbrowder_> never mind, the "make html" does the right thing

[10:33] <jmerelo> stmuk: but were those copied by hand? Or were they part of the script?

[10:34] <stmuk> jmerelo: as a devop type I'm a paraniod wondering whether there are some essential copied by hand stuff

[10:34] <jmerelo> stmuk: I see force-update, build-log and some other stuff

[10:34] <tbrowder_> icelandic noir: i've read a couple novels, man named ove, and some police procedural

[10:34] <stmuk> jmerelo: also you could try a manual dry run with -n to see what gets deleted

[10:35] <jmerelo> stmuk: yep, that's right. Very few systems are build from scratch, and most are jury-rigged one way or the other. 

[10:35] <jmerelo> stmuk: OK, I'll try that.

[10:35] <stmuk> jmerelo: it will probably delete the existing server logs and its directory if "build-log" is there

[10:35] <stmuk> which is Bad

[10:36] <jmerelo> tbrowder_: They are _very_ good. Arnaldur Indridasson does the procedural.

[10:36] <jmerelo> stmuk: right. Thing is, it shouldn't be there.

[10:37] <jmerelo> stmuk: that's defined in a variable, LOGDIR

[10:37] <jmerelo> stmuk: it's probably there so that it's copied to the right place, but we can copy it from wherever it is using other command

[10:38] <stmuk> its probably just there because its under the webroot

[10:38] <jmerelo> stmuk: right, but files get copied from there to the production site. We can just change the origin directory, it's in sync-build-log

[10:39] <jmerelo> stmuk: there's also an update.log which is empty.

[10:39] <jmerelo> stmuk: it's not a good idea to keep logs in the same place as source controled files

[10:40] <stmuk> jmerelo: true but we shouldn't be doing dev on a live system either

[10:41] <stmuk> maybe wait until the dev/staging instance before radical deletion/move type changes

[10:41] <tbrowder_> i started the doc wiki page

[10:41] <tbrowder_> afk&

[10:44] <jmerelo> stmuk: we're doing that... kinda. Anything pushed to master goes, every five minutes, to the "staging", which then gets rsynced to production

[10:44] <jmerelo> stmuk: but master should be ready to go into production, anyway.

[10:45] <jmerelo> stmuk: the way I see it, it's been a combination of things that shouldn't happen too often: test system broke down, there was an error with a no-longer-source-controlled directory, and the veterans running the place were not available (never enter production Friday afternoon)...

[10:46] <jmerelo> stmuk: ... and I was in a flight back from Japan. So I don't foresee that combination of things happening any time in the future.

[10:47] <jmerelo> stmuk: we don't have so many resources as to run a staging server, monitor, check... and then put it into production. We have tests doing the hard work for us. It passes tests, it should go into production.

[10:47] <stmuk> https://upload.wikimedia.org/wikipedia/en/a/a9/Jenga.JPG

[10:47] <stmuk> :)

[10:47] <jmerelo> stmuk: we're not testing major infrastructure changes, that's the main problem. So maybe the solution would be to boost our tests. 

[10:48] <stmuk> you're assuming tests don't have bugs .. they are just software too

[10:48] <timotimo> we might want to grep our logs for urls that have been referred to from the outside and make sure, in the tests, that there's no 404s there (unless we want them to)

[10:49] <stmuk> anyway off for a bit

[10:49] <jmerelo> timotimo: well... that would need to be run on the server... Can't do it on travis

[10:49] <jmerelo> stmuk: have fun

[10:49] <timotimo> we can install an apache on travis :)

[10:49] <jmerelo> timotimo: and we would have to generate every single link, test it... Hum.

[10:50] <jmerelo> timotimo: the whole point of testing is to have it fast. If we are back to 40 minute build it defeats the whole purpose of testing.

[10:50] <timotimo> that's just a "curl" with an input file of urls

[10:51] <jmerelo> timotimo: problem is not only that. It's that htmlify.p6 is a 1K-line file with no tests. We don't know how many index entries there should be. Sometimes whole swaths of entries disappear at a time, and we don't even notice until the issues start to crop up.

[10:52] <timotimo> so ... maybe we want to have at least a diff of available pages for each commit?

[10:53] <jmerelo> timotimo: we need to run htmlify.p6 for that... It's run as a test, but just as a smoke test. If it breaks down, something is wrong. If there's some difference in the number or name of generated files, it does not complain.

[10:53] <jmerelo> timotimo: I mean, look at this: https://github.com/perl6/doc/issues/561+

[10:54] <jmerelo> timotimo: I think that by now most 404 links should have been fixed, but still there are tons of broken anchor links that are there.

[10:55] <jmerelo> timotimo: once again, we should have a BoF in Glasgow to talk about all this...

[10:55] <jmerelo> timotimo: should I propose it to someone?

[10:55] <jmerelo> timotimo: I see it's just a wiki. OK

[10:58] *** SteffanW left
[10:59] <timotimo> what is?

[11:01] *** SteffanW joined
[11:02] <jmerelo> The BoF thing. Just created a page: http://act.perlconference.org/tpc-2018-glasgow/wiki?node=Perl6%20documentation%20BoF

[11:02] <jmerelo> But I'm not sure how to actually do it. Do we have to find out the place and time that's more suitable for everyone?

[11:03] <timotimo> ah

[11:03] <timotimo> sorry, i won't be in glasgow

[11:04] <jmerelo> timotimo: too bad...

[11:06] *** psychoslave left
[11:07] <timotimo> way cool, my "get host and port from listen socket" patch is working

[11:11] * timotimo makes stresstest

[11:12] *** cognominal joined
[11:14] *** aindilis joined
[11:18] *** psychoslave joined
[11:23] *** jameslenz joined
[11:24] <timotimo> yay it's clean

[11:26] *** AlexDani` is now known as AlexDaniel

[11:27] <xinming> say @letters[lazy 3..7]; # OUTPUT: ¬´(d e f)‚ê§¬ª 

[11:27] <xinming> say @letters[     3..*]; # OUTPUT: ¬´(d e f)‚ê§¬ª 

[11:27] <xinming> What are the differences between these 2 examples?

[11:27] <xinming> The behavior when indexing a collection via lazy subscripts is different than when indexing with their eager counterparts. When accessing via a lazy subscript, the resulting slice will be truncated.

[11:27] <xinming> https://docs.perl6.org/language/subscripts    <-- from this url.

[11:27] <xinming> It seems they are the same. *_*

[11:27] *** jameslenz left
[11:28] <xinming> and  BTW, perl6 WILL be the language for next centuries... :-)

[11:28] <AlexDaniel> jmerelo: so docs are not fixed still?

[11:28] <AlexDaniel> ah‚Ä¶ they are‚Ä¶ but

[11:29] <AlexDaniel> https://docs.perl6.org/build-log/ ?

[11:29] *** phogg joined
[11:29] *** phogg left
[11:29] *** phogg joined
[11:36] *** wamba left
[11:41] <jmerelo> AlexDaniel: I did it by hand

[11:42] *** cognominal left
[11:42] <jmerelo> AlexDaniel: it should be updated next time it's pushed

[11:42] <AlexDaniel> I see

[11:42] *** cognominal joined
[11:42] <AlexDaniel> jmerelo++

[11:42] <AlexDaniel> jmerelo: fwiw you didn't sound very inclusive in #2201 :)

[11:43] *** wamba joined
[11:43] <jmerelo> xinming: right. Can you please create an issue?

[11:43] <AlexDaniel> jmerelo: in a sense that if I was OP, I'd be pissed to read your answer :)

[11:43] <jmerelo> AlexDaniel: that's bad. Sorry.

[11:44] <jmerelo> AlexDaniel: sorry about that. What could I do to improve my answer? Or is your reply enough?

[11:44] <AlexDaniel> jmerelo: I'd say my reply is a bit more correct historically

[11:45] <AlexDaniel> that particular policy is not there because we love unicode sooo much, but because it will consistify things and we'll be able to satisfy both ways of doing things

[11:46] <AlexDaniel> s/not there/there not/

[11:46] <jmerelo> AlexDaniel: I am not aware of the history. I pretended to be inclusive: if you really don't like those examples, please point at some... As a general rule, the policy is the opposite of what he(or she) is asking.

[11:46] *** pmurias joined
[11:47] <jmerelo> AlexDaniel: I still gave him or her the change to support that policy. 

[11:47] <jmerelo> AlexDaniel: but please, no JavaScript thing.

[11:47] <AlexDaniel> jmerelo: how else can we implement it then?

[11:48] <AlexDaniel> the website is not dynamic, so are we calling it blocked for now?

[11:48] <jmerelo> AlexDaniel: just point out to some examples whose readability could be improved by _not_ using Unicode and provide hand-crafted alternatives for them, or expand the explanation, or add a comment to the code.

[11:55] *** Ven`` joined
[11:58] *** markoong joined
[11:58] *** sarna left
[12:02] *** Ven`` left
[12:03] *** Ven`` joined
[12:03] <tbrowder_>  I just more or less finished my new strawman proposal for a doc reorg on the wiki‚Äîcomments or edits welcome

[12:08] *** kaare_ joined
[12:08] <tbrowder_> several issues relating to bad links, etc., i think can be closed now (by someone other thsn moi who started the problems)

[12:12] *** psychoslave left
[12:18] *** jameslenz joined
[12:23] *** psychoslave joined
[12:26] *** undersightable6 joined
[12:26] *** kaare_ left
[12:30] *** sarna joined
[12:36] *** psychoslave left
[12:36] <sarna> hey, I'm reading one of jonathan's presentations and he mentions "storing the result of map and grep in a Scalar"

[12:36] <sarna> what happens if I store a collection in a Scalar?

[12:37] <pmurias> jmerelo: there is some value in showing people who prefer not to use unicode in their code how to avoid using it

[12:37] <timotimo> sarna: it'll keep the Seq around, instead of iterating over it and making it an array, like when you assign to @foo

[12:39] <pmurias> my @powers-of-eleven = lazy 1, 11, 121 ‚Ä¶ 10¬π‚Å∞‚Å∞ # EVEN BETTER

[12:39] <sarna> timotimo: so.. it's lazy?

[12:39] <pmurias> shouldn't it be 11**100 as the last element?

[12:40] <timotimo> i'd call it that, i guess

[12:40] <timotimo> if you do that, you'll have to be careful about only iterating intermediate Seq objects once

[12:41] <timotimo> m: my $foo = ^100 .grep(*.is-prime); say $foo.tail; say $foo.tail

[12:41] <camelia> rakudo-moar bf514c150: OUTPUT: ¬´97‚ê§The iterator of this Seq is already in use/consumed by another Seq‚ê§(you might solve this by adding .cache on usages of the Seq, or‚ê§by assigning the Seq into an array)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:41] <timotimo> that's the error you get when you try to take values from a Seq twice, i.e. it won't keep the values around automatically

[12:41] <timotimo> you have to use .cache or store into an array if you need that

[12:41] <timotimo> as the error message points out

[12:44] <sarna> timotimo: hmm, so I can use this to .map() several times only iterating over the collection once?

[12:46] <timotimo> i'm not sure i understand, but i don't think so

[12:46] <pmurias> jmerelo: the hard part I think is how to show the ascii version

[12:47] <timotimo> when i spectest the jvm backend, how do i tell if my changes are bad :|

[12:50] <timotimo> wow 170 seconds for stage parse of the core setting

[12:55] <jmerelo> pmurias: of course. But the consensus reached the opposite conclusion, so everything would have to be changed. It's much better to try and provide alternatives or additional explanation.

[12:56] <El_Che> (count me on the the party of people that don't use unicode chars in code when those are not on my keyboard)

[12:56] <timotimo> Exception in thread "Thread-8" org.perl6.nqp.runtime.SaveStackException

[12:56] <timotimo>  at org.perl6.nqp.runtime.Ops.continuationcontrol(Ops.java:7339)

[12:56] <timotimo> :<

[12:56] <pmurias> jmerelo: what I mean is that how we display the alternatives is the hard to figure out part

[12:57] *** jmerelo left
[12:57] <timotimo> j: react { my $tap = do whenever IO::Socket::Async.listen("localhost", 0) { say "hello there!" } }

[12:57] <camelia> rakudo-jvm b6cc7168a: ( no output )

[12:59] <timotimo> i don't know why i get that error with my port acquisition patch

[13:01] <timotimo> ah, sure, now it works :|

[13:06] *** psychoslave joined
[13:09] *** psychoslave left
[13:11] <SmokeMachine> What do you guys think should be this module's name? https://github.com/FCO/ChainableSeq/blob/master/t/02-all.t

[13:11] *** dakkar joined
[13:13] *** dakkar left
[13:14] *** dakkar joined
[13:38] <moritz> SeqSlicer

[13:39] *** Ven`` left
[13:40] <SmokeMachine> moritz: SeqSlicer is a good name!!! Thanks!

[13:41] *** kerframil left
[13:42] <moritz> my pleasure :)

[13:42] <timotimo> well done, moritz 

[13:45] *** noganex joined
[13:53] *** plutes joined
[14:08] <Juerd> m: my $a = (1, 2, 3); for $a { .say }; for $a<> { .say }; for $a.list { .say }; for $a.List { .say }

[14:08] <camelia> rakudo-moar cb2ea9328: OUTPUT: ¬´(1 2 3)‚ê§1‚ê§2‚ê§3‚ê§1‚ê§2‚ê§3‚ê§1‚ê§2‚ê§3‚ê§¬ª

[14:08] <Juerd> Is any of these better?

[14:09] <Juerd> That is, out of .<>, .list, and .List, which one should be used in which circumstance?

[14:10] <moritz> there is also for @$a { }

[14:10] <moritz> which I believe is the same as .list

[14:10] <El_Che> I would say .list

[14:10] <moritz> .List is for when you want to have an object of type List, not just anything list-like

[14:10] <El_Che> .List is a coercion, iirc

[14:10] <moritz> I tend to go with .list

[14:10] <Juerd> moritz: Does .list ever return something that isn't a List?

[14:10] <El_Che> .<> is unreadable

[14:10] <El_Che> my 2c

[14:11] <timotimo> Juerd: could return an Array, though Array Is List iirc

[14:11] <moritz> m: my @a; say @a.list.^name

[14:11] <camelia> rakudo-moar cb2ea9328: OUTPUT: ¬´Array‚ê§¬ª

[14:11] <moritz> m: my @a; say @a.List.^name

[14:11] <camelia> rakudo-moar cb2ea9328: OUTPUT: ¬´List‚ê§¬ª

[14:12] <moritz> m: say Array ~~ List

[14:12] <camelia> rakudo-moar cb2ea9328: OUTPUT: ¬´True‚ê§¬ª

[14:12] <El_Che> m: say List ~~ Array

[14:12] <camelia> rakudo-moar cb2ea9328: OUTPUT: ¬´False‚ê§¬ª

[14:14] *** jeromelanteri left
[14:20] <tbrowder_> El_Che: i‚Äôm with you on unicode. i wish i had a keyboard with a good number of them, even one of the addons but i‚Äôm not sure i could use them with all the editors i use.

[14:21] <tbrowder_> does anyone have an addon that works under linux with at least xterm, vi, and emacs?

[14:21] *** rubio-terra joined
[14:22] *** domidumont joined
[14:22] <tbrowder_> working with comma would be nice, too

[14:23] *** xtreak joined
[14:27] *** jeromelanteri joined
[14:29] *** domidumont left
[14:29] *** domidumont joined
[14:29] <tobs> m: my $a = (1, 2, 3); for |$a { .say }  # Juerd: another one for your .list

[14:29] <camelia> rakudo-moar cb2ea9328: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[14:31] <El_Che> tbrowder_: even if a out on a Limb and configure my Linux machine and remember all the magic shortcuts, I will hava a hard time using the macbook I use on the train. And we're not even discussing colleagues that will adapt the code on Windows machines...

[14:32] <tbrowder_> yeah, it‚Äôs a bucket of worms, i know. but for use when appropriate it would be nice to have.

[14:32] *** dakkar left
[14:32] *** jeromelanteri left
[14:33] <El_Che> tbrowder_: indeed, it's nice to read

[14:34] <El_Che> being the 100-year language we still have 97 years for someone to come with a keyboard replacement :)

[14:35] <tbrowder_> i just don‚Äôt know anyone personally who has tried such a thing. i guess i will just buy one and see if i can get it to work.

[14:35] *** wamba left
[14:36] <El_Che> I tried to add shortcuts in macos and it's terrible

[14:36] <El_Che> it's easier on Linux, but I forget the shortcuts :)

[14:37] <tbrowder_> very astute observation. i have seen msny koreans use a special keyboard for their language and wish someone made a similar one based on english + unicode.

[14:38] <El_Che> tbrowder_: on the other hand I have seen Israelis with suck setup say "fuck it" and write mails in English to their parents

[14:39] <tbrowder_> and i understand that.

[14:42] <tbrowder_> maybe i need a  keyboard like so many long-time p6 seem to have so i can use all the funny quotes

[14:42] <tbrowder_> long-time p6 people

[14:43] <tbrowder_> back to business‚Äîany comments on my doc wiki about reorg?

[14:43] <tbrowder_> afk&

[14:52] *** xi- left
[14:53] *** xi- joined
[14:56] *** xi- left
[14:57] *** xi- joined
[14:58] *** xi- left
[15:00] *** xi- joined
[15:01] *** xi- left
[15:03] *** xi- joined
[15:03] *** xi- left
[15:05] *** [particle] left
[15:05] *** xi- joined
[15:08] *** sarna_ joined
[15:17] *** kaare_ joined
[15:21] *** ExtraCrispy left
[15:27] *** jameslenz left
[15:34] *** Ven`` joined
[15:38] *** a3r0 joined
[15:40] *** Ven`` left
[15:41] *** Ven`` joined
[15:42] *** jmerelo joined
[15:45] <jmerelo> releasable6: status

[15:45] <releasable6> jmerelo, Next release in ‚âà3 hours. 4 blockers. 0 out of 234 commits logged (‚ö† 79 warnings)

[15:45] <releasable6> jmerelo, Details: https://gist.github.com/a6a988bf79e99160b7f8f68f32ffce05

[15:51] *** wamba joined
[15:54] *** zakharyas joined
[15:55] *** xtreak_ joined
[15:56] *** Kaypie left
[15:57] *** xtreak left
[15:57] *** sarna_ left
[15:57] *** Kaypie joined
[15:58] *** Khisanth left
[15:59] *** sarna_ joined
[16:00] *** sarna_ left
[16:02] *** zakharyas left
[16:06] *** zakharyas joined
[16:07] *** Kaypie left
[16:08] *** Kaiepi joined
[16:11] *** Khisanth joined
[16:18] <xinming> say "11" ~~ /(\d) {} :my $c = $0; ($c)/;

[16:18] <evalable6> xinming, rakudo-moar cb2ea9328: OUTPUT: ¬´ÔΩ¢11ÔΩ£‚ê§ 0 => ÔΩ¢1ÔΩ£‚ê§ 1 => ÔΩ¢1ÔΩ£‚ê§¬ª

[16:18] <xinming> :m say "11" ~~ /(\d) {} :my $c = $0; ($c)/;

[16:18] <xinming> m: say "11" ~~ /(\d) {} :my $c = $0; ($c)/;

[16:18] <camelia> rakudo-moar cb2ea9328: OUTPUT: ¬´ÔΩ¢11ÔΩ£‚ê§ 0 => ÔΩ¢1ÔΩ£‚ê§ 1 => ÔΩ¢1ÔΩ£‚ê§¬ª

[16:18] <xinming> hmm, What does the  :   before my mean?

[16:19] *** zakharyas left
[16:19] <AlexDaniel> xinming: it's just a way of declaring variables in a regex https://docs.perl6.org/language/regexes#index-entry-%3Amy

[16:20] *** sarna left
[16:20] <jmerelo> xinming: As AlexDaniel says, declares the scope of a variable.

[16:20] <xinming> THanks

[16:20] <xinming> That page is where I'm reading. :-)

[16:21] <xinming> Later, It has explanation. 

[16:30] *** gabiruh joined
[16:37] *** Zoffix joined
[16:37] <Zoffix> Any good ideas for ~2hr worth of a Perl 6 talk?

[16:38] <moritz> target audience?

[16:39] <Zoffix> Local Perl Mongers meeting

[16:39] *** xi- left
[16:40] <moritz> personally, I'd go deep into regexes, grammars and parsing

[16:41] <Zoffix> Also, I have like ~2 days to prep for it :P

[16:41] <moritz> there's a certain book you could use as template... :)

[16:41] <Kaiepi> nativecall?

[16:42] <Zoffix> heh

[16:42] <moritz> but in that case, more like a tour through all of the Perl 6 features you like, and are familiar with

[16:42] <moritz> "Perl 6, Zoffix's Pick"

[16:42] <Zoffix> Hm.. Maybe I should write that "Your‚Ñ¢" compiler in Perl 6 rather than nqp and use that as a parsing example. Two birds with one code

[16:42] <moritz> "Hand-Select Perl 6"

[16:42] <Zoffix> I actually did my "Wow, Perl 6" talk in 2016 to basically the same group already: http://tpm2016.zoffix.com/

[16:43] *** kaare_ left
[16:43] *** HaraldJoerg joined
[16:43] <Zoffix> But yeah, grammars are a good suggestion, based on the survey results of favourite features. moritz++

[16:45] <jnthn> Yeah, it's a good idea ;)

[16:45] <jnthn> *:)

[16:45] <jnthn> That or concurrency but that might need more prep

[16:46] *** xi- joined
[16:48] *** kaare_ joined
[16:58] *** kaare_ left
[17:02] *** S007 joined
[17:02] *** kaare_ joined
[17:21] <Zoffix> m: /:P5 /

[17:21] <camelia> rakudo-moar cb2ea9328: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unrecognized regex modifier :P5‚ê§at <tmp>:1‚ê§------> 3/:7‚èè5P5 /‚ê§    expecting any of:‚ê§        term‚ê§¬ª

[17:22] <Zoffix> There's no way to use P5 regexes in grammars is there?

[17:22] <Zoffix> (no non-hackish way, I mean)

[17:29] *** kaare_ left
[17:37] *** Ven`` left
[17:47] <pmurias> Zoffix: what will Your be?

[17:50] <Zoffix> man, I need to name it something else. "Your" is impossible to search for

[17:50] <Zoffix> pmurias: I already answered that the last time you asked. It's somewhere in the logs

[17:51] <timotimo> PureL6

[17:54] <pmurias> Zoffix: I found the answer

[17:58] <jnthn> On the upside, if it's too fast, somebody can file a bug report "Your too slow" and it'll be correct grammar :P

[17:58] <jnthn> hah, if it's too slow :)

[17:59] <Zoffix> :)

[17:59] <pmurias> m: say qq{#!/usr/bin/perl\nprint "1..1\\nok 1\\n"}

[17:59] <camelia> rakudo-moar cb2ea9328: OUTPUT: ¬´#!/usr/bin/perl‚ê§print "1..1\nok 1\n"‚ê§¬ª

[18:00] <pmurias> isn't that a spec compliant Perl 6 to Perl 5 compiler?

[18:00] <timotimo> hm, the harness doesn't check if the plan matches, does it?

[18:00] *** Zoffix left
[18:01] <timotimo> i mean whether the plan matches the one in the file

[18:01] <pmurias> timotimo: I don't think so

[18:01] <timotimo> in that case, yeah, that seems spec compliant ...

[18:02] <timotimo> we might want to have some verbiage that makes that clear

[18:03] <pmurias> timotimo: what do you want the verbiage to make clear?

[18:04] <timotimo> "cheating is only okay if you don't get caught"

[18:06] <pmurias> I don't think of a good way to avoid the "problem" of hardcoded implementations when defining a language just by a test suit and not a specification

[18:07] <pmurias> a strong enough test suit couldn't be hardcoded but ours is more a list of examples

[18:10] <timotimo> suit not strong enough? put more starch on it

[18:17] <pmurias> timotimo: not strong as in accepts things that aren

[18:18] <pmurias> 't really Perl 6 implementations

[18:18] <pmurias> timotimo: I don't think there is really a practical way to avoid that problem

[18:19] *** jmerelo left
[18:19] <pmurias> timotimo: like for a simple language you could compare random programs to a reference implementation

[18:30] <geekosaur> the flip side of this is that if we ever reach a point where playing the spec matters, arguably we've arrived

[18:56] *** salasrod joined
[19:01] *** domidumont left
[19:06] <timotimo> maybe zoffix should call his implementation "haterlang" to mirror "fanlang"

[19:11] <El_Che> trollang

[19:13] *** xtreak_ left
[19:16] *** HaraldJoerg left
[19:17] *** HaraldJoerg joined
[19:19] *** aindilis left
[19:22] <pmurias> strawmanperl

[19:23] <El_Che> pmurias++

[19:23] <El_Che> great one

[19:25] *** salasrod left
[19:28] <timotimo> swyne6

[19:31] *** SteffanW left
[19:32] *** quester joined
[19:48] *** dct joined
[19:58] *** salasrod_ joined
[20:00] *** salasrod_ left
[20:11] *** aindilis joined
[20:25] <x[LGWs4x4i]uG2N0> m: my %h=(a => [[1],[2]]); for %h<a> { say $_ }

[20:25] <camelia> rakudo-moar cb2ea9328: OUTPUT: ¬´[[1] [2]]‚ê§¬ª

[20:25] <x[LGWs4x4i]uG2N0> m: my %h=(a => [[1],[2]]); for |%h<a> { say $_ }

[20:25] <camelia> rakudo-moar cb2ea9328: OUTPUT: ¬´[1]‚ê§[2]‚ê§¬ª

[20:26] <x[LGWs4x4i]uG2N0> i don't understand why i have to flatten, if i want to iterate over all the elements

[20:27] *** HaraldJoerg left
[20:28] <El_Che> becasue the elements are the containers

[20:29] <x[LGWs4x4i]uG2N0> i guess i have to read more about containers

[20:32] *** Kaiepi left
[20:33] *** Zoffix joined
[20:33] <Zoffix> x[LGWs4x4i]uG2N0: you don't have to flatten, you only have to decont:

[20:33] <Zoffix> m: my %h =(a => [[1],[2]]); for %h<a><> { say $_ }

[20:33] <camelia> rakudo-moar cb2ea9328: OUTPUT: ¬´[1]‚ê§[2]‚ê§¬ª

[20:34] *** Kaiepi joined
[20:34] <x[LGWs4x4i]uG2N0> ah

[20:34] <x[LGWs4x4i]uG2N0> thanks

[20:34] <Zoffix> x[LGWs4x4i]uG2N0: and you only have to do that because you've storing stuff in an object that automatically sticks stuff into containers. Often you can avoid that in the first place:

[20:34] <Zoffix> m: my %h is Map =(a => [[1],[2]]); for %h<a> { say $_ }

[20:34] <camelia> rakudo-moar cb2ea9328: OUTPUT: ¬´[1]‚ê§[2]‚ê§¬ª

[20:34] <Zoffix> x[LGWs4x4i]uG2N0: there's this article on containers: https://perl6advent.wordpress.com/2017/12/02/

[20:34] *** zakharyas joined
[20:34] <x[LGWs4x4i]uG2N0> tyvm

[20:48] *** gabiruh left
[20:52] *** pecastro joined
[21:03] *** zakharyas left
[21:04] *** zakharyas joined
[21:05] *** zakharyas left
[21:08] *** zakharyas joined
[21:26] *** zakharyas left
[21:33] *** fake_space_whale joined
[21:35] *** pecastro left
[21:35] *** pecastro joined
[21:53] *** stee3 joined
[21:56] *** stee left
[21:58] *** |oLa| left
[22:05] *** pmurias left
[22:05] *** |oLa| joined
[22:24] <b2gills> .tell Xliff Was this more of what you were looking for: "aa.bb.cc" ~~ /^ [\w+]+ % '.' $/

[22:24] <yoleaux> b2gills: I'll pass your message to Xliff.

[22:31] *** rindolf left
[22:41] *** Kaiepi left
[22:43] <xinming> in https://docs.perl6.org/language.html     There is a page describe what   my $var:xy<abc> thing does, Anyone here tells me which page it is?

[22:43] <xinming> I just go through all the pages, I can't find which page it is. I do remember I read that description today

[22:49] *** Kaiepi joined
[22:56] <xinming> Got it, It's in syntax

[22:57] *** dct left
[23:03] <xinming> https://docs.perl6.org/language/grammars   <- Here   rule calc-op:sym<sub> { <num> '-' <num> }      <--- is here the "sym" special? or I can have other name?

[23:04] <xinming> I mean something like     rule calc-op:op-name<sub>

[23:21] *** pecastro left
[23:22] *** sena_kun left
[23:34] *** gabiruh joined
[23:47] *** TreyHarris left
