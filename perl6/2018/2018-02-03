[00:01] *** mcmillhj joined
[00:03] <squashable6> 🍕🍕🍕  First contribution by samcv++! ♥

[00:03] <Geth> ¦ rakudo: 4a989a5e4f | (Samantha McVey)++ | tools/build/NQP_REVISION

[00:03] <Geth> ¦ rakudo: Bump NQP: MVM revert throw when windows1252 errors. JVM add 1251

[00:03] <Geth> ¦ rakudo: 

[00:03] <Geth> ¦ rakudo: Changes: 2018.01-33-g99493b0..2018.01-44-ga860fd310

[00:03] <Geth> ¦ rakudo: a860fd310 Bump MoarVM to revert throwing on windows-1252/1 decode errors

[00:03] <Geth> ¦ rakudo: d32d84d4b [jvm] Add windows-1251 as an available encoding

[00:03] <samcv> woo

[00:03] <Geth> ¦ rakudo: b348d45cf [js] Check for known encoding in codecs

[00:03] <samcv> i get pizza

[00:03] <Geth> ¦ rakudo: 273850777 [js] Update dep

[00:03] <Geth> ¦ rakudo: <…commit message has 7 more lines…>

[00:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4a989a5e4f

[00:03] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.01-33-g99493b0...2018.01-44-ga860fd310

[00:06] *** reportable6 left
[00:06] *** reportable6 joined
[00:06] *** mcmillhj left
[00:12] *** mcmillhj joined
[00:12] *** Kyo91 left
[00:14] <squashable6> 🍕 skids++ wrote a comment on “Array.reverse with holes…”: https://github.com/rakudo/rakudo/issues/1444#issuecomment-362748442

[00:14] <squashable6> 🍕🍕🍕  First contribution by skids++! ♥

[00:15] *** comborico1611 left
[00:17] *** mcmillhj left
[00:17] *** comborico1611 joined
[00:25] *** aindilis joined
[00:30] *** raiph left
[00:32] *** mcmillhj joined
[00:35] *** zeddy__k left
[00:37] *** mcmillhj left
[00:41] <Geth> ¦ rakudo: f473216452 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[00:41] <Geth> ¦ rakudo: Memoize Whatever symbols lookup for whatever curry

[00:41] <Geth> ¦ rakudo: 

[00:41] *** aindilis` joined
[00:41] <Geth> ¦ rakudo: We actually go through whatever curry on each curryeable thing like

[00:41] <Geth> ¦ rakudo: a method call or some op. Avoiding the dynvar and caching the lookup

[00:41] <Geth> ¦ rakudo: of Whatever, WhateverCode, and HyperWhatever in lexical vars comes

[00:41] <Geth> ¦ rakudo: out about 10x faster.

[00:41] <Geth> ¦ rakudo: 

[00:41] <Geth> ¦ rakudo: Makes compilation of 3000-line file ~6% faster. Not a lot but... Whatever

[00:42] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/f473216452

[00:42] *** aindilis left
[00:50] *** mcmillhj joined
[00:51] <Geth> ¦ rakudo: b93656d82d | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[00:51] <Geth> ¦ rakudo: Revert "Elevate statevars to enclosing block when wrapped"

[00:51] <Geth> ¦ rakudo: 

[00:51] <Geth> ¦ rakudo: This reverts commit 299e85264b50104ad82411e9c3999dc727154091.

[00:51] <Geth> ¦ rakudo: 

[00:51] <Geth> ¦ rakudo: Travis is unhappy. Try to figure out what it is that makes it blow up.

[00:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/b93656d82d

[00:54] *** mcmillhj left
[00:57] *** aindilis` left
[01:01] *** mcmillhj joined
[01:06] *** mcmillhj left
[01:06] <Geth> ¦ rakudo: 42af2a35b6 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[01:06] <Geth> ¦ rakudo: Revert "Revert "Elevate statevars to enclosing block when wrapped""

[01:06] *** markong left
[01:06] <Geth> ¦ rakudo: 

[01:06] <Geth> ¦ rakudo: This reverts commit b93656d82d81a5f93780f11bed055114d2095fc7.

[01:06] <Geth> ¦ rakudo: 

[01:06] <Geth> ¦ rakudo: Taht ain't it

[01:06] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/42af2a35b6

[01:07] *** traxex2 left
[01:07] <Geth> ¦ rakudo: 01ce5632bc | (Zoffix Znet)++ | src/core/VM.pm

[01:07] <Geth> ¦ rakudo: Revert "Use a more descriptive desc for $*VM"

[01:07] <Geth> ¦ rakudo: 

[01:07] <Geth> ¦ rakudo: This reverts commit 86e926c76d6b3c47a2a9ffa11d43e34744493ac7.

[01:07] <Geth> ¦ rakudo: 

[01:07] <Geth> ¦ rakudo: Travis fix attempt #2

[01:07] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/01ce5632bc

[01:07] <Geth> ¦ doc: gfldex++ created pull request #1754: doc Proc::Async::bind-(stdin|stdout|stderr)

[01:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1754

[01:08] <Geth> ¦ doc: 244e3713da | (Wenzel P. P. Peppmeyer)++ | doc/Type/Proc/Async.pod6

[01:08] <Geth> ¦ doc: doc Proc::Async::bind-(stdin|stdout|stderr)

[01:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/244e3713da

[01:08] <Geth> ¦ doc: 796c31b67b | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Proc/Async.pod6

[01:08] <Geth> ¦ doc: Merge pull request #1754 from gfldex/#1470

[01:08] <synopsebot> Link: https://doc.perl6.org/type/Proc::Async

[01:08] <Geth> ¦ doc: 

[01:08] <Geth> ¦ doc: doc Proc::Async::bind-(stdin|stdout|stderr)

[01:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/796c31b67b

[01:10] <gfldex> https://github.com/perl6/doc/issues/1470 might be closed

[01:15] *** wamba left
[01:16] <Geth> ¦ rakudo: 07f30e4bab | (Zoffix Znet)++ | src/core/VM.pm

[01:16] <Geth> ¦ rakudo: Revert "Revert "Use a more descriptive desc for $*VM""

[01:16] <Geth> ¦ rakudo: 

[01:16] <Geth> ¦ rakudo: This reverts commit 01ce5632bc9a4359870fa9c68347b9217d949995.

[01:16] <Geth> ¦ rakudo: 

[01:16] <Geth> ¦ rakudo: That ain't it either. I'm stumped :|

[01:16] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/07f30e4bab

[01:17] *** mcmillhj joined
[01:20] <Geth> ¦ rakudo: 7d42e33637 | (Zoffix Znet)++ | src/core/Exception.pm

[01:20] <Geth> ¦ rakudo: Try to make travis error say what's actually wrong

[01:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/7d42e33637

[01:22] *** mcmillhj left
[01:27] *** empT left
[01:32] *** mcmillhj joined
[01:34] <Geth> ¦ rakudo: 4929651929 | (Zoffix Znet)++ | src/core/Exception.pm

[01:34] <Geth> ¦ rakudo: Coaxe travis some more

[01:34] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4929651929

[01:38] *** mcmillhj left
[01:46] *** mcmillhj joined
[01:51] <Geth> ¦ rakudo: 85ae1d1ee6 | (Zoffix Znet)++ | 5 files

[01:51] <Geth> ¦ rakudo: Revert "Initialize $*PERL during setting compilation to avoid runtime cost"

[01:51] <Geth> ¦ rakudo: 

[01:51] <Geth> ¦ rakudo: This reverts commit 671c3d60161053809415a2eb85097b0714417b56.

[01:51] <Geth> ¦ rakudo: 

[01:51] <Geth> ¦ rakudo: Try to unbust travis

[01:51] *** mcmillhj left
[01:51] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/85ae1d1ee6

[01:53] <squashable6> 🍕 skids++ wrote a comment on “Array.reverse with holes…”: https://github.com/rakudo/rakudo/issues/1444#issuecomment-362764080

[02:01] <zacts> what main features would Perl6 add to OOP if I am coming from Ruby?

[02:01] <Geth> ¦ rakudo: 2339d8dd00 | (Zoffix Znet)++ | src/core/Exception.pm

[02:01] <Geth> ¦ rakudo: Travis unbusted; restore X::Comp::BeginTime to former glory

[02:01] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2339d8dd00

[02:05] *** Zoffix joined
[02:06] *** mcmillhj joined
[02:07] <skids> zacts: Not a ruby person myself, but types are not duck-typed, interfaces (here called "roles") may be parameterized.  Probably a lot more but hard to say not knowing ruby.

[02:07] *** comborico1611 left
[02:07] <Zoffix> zacts: I don't know Ruby, but we do have a "from Ruby to Perl 6" guide. Perhaps it mentions something (I see there's "Object Orientation" up in there): https://docs.perl6.org/language/rb-nutshell

[02:07] *** aborazmeh joined
[02:07] *** aborazmeh left
[02:07] *** aborazmeh joined
[02:07] <zacts> cool ok

[02:07] <zacts> I'll check it out

[02:08] <zacts> is Perl6 OOP based on CLOS?

[02:09] * Zoffix has no idea, sorry :)

[02:09] <zacts> s'ok :-)

[02:10] <zacts> I'll look into it.

[02:11] *** aborazmeh left
[02:11] <skids> reading https://en.wikipedia.org/wiki/Common_Lisp_Object_System most of those features are available.  The MMD may work slightly differently.  Inheritance is C3.

[02:11] <zacts> oh so it seems that Perl6 provides PEG parsers. cool.

[02:11] *** mcmillhj left
[02:12] <zacts> I'll ahve to try this all out

[02:12] <Zoffix> \o/

[02:13] <skids> It can also inline the grammars through a mechnism called "slang" and you can alter the local Perl6 grammar by subclassing it.

[02:24] *** mcmillhj joined
[02:29] *** mcmillhj left
[02:35] *** mcmillhj joined
[02:40] *** mcmillhj left
[02:47] *** ilbot3 left
[02:49] *** colomon_ joined
[02:52] *** mcmillhj joined
[02:53] *** colomon left
[02:53] *** colomon_ is now known as colomon

[02:53] *** colomon left
[02:56] *** colomon joined
[02:57] *** mcmillhj left
[02:57] *** ilbot3 joined
[02:57] *** ChanServ sets mode: +v ilbot3

[03:03] *** mcmillhj joined
[03:07] *** Herby_ left
[03:09] *** mcmillhj left
[03:16] *** mcmillhj joined
[03:22] *** empT joined
[03:22] *** mcmillhj left
[03:26] *** empT left
[03:26] *** ctilmes joined
[03:27] <ctilmes> What is "Serialization Error: missing static code ref for closure 'run' (gen/moar/stage2/NQPHLL.nqp:1834)"

[03:28] *** mcmillhj joined
[03:33] *** mcmillhj left
[03:34] <Zoffix> ctilmes: sounds like an internal compiler error.

[03:34] <Zoffix> Any chance you got the code that produces it?

[03:35] <Zoffix> Some sort of --profile option?

[03:35] <Zoffix> --profile-stage

[03:37] <ctilmes> I figured it out -- I'll try to make a small example that triggers it.  I was re-exporting a bunch of symbols by some I forgot to include my module that exported them.

[03:37] *** ufobat___ joined
[03:40] *** ufobat_ left
[03:41] <ctilmes> Zoffix: Put this in a module and 'use' it: "my package EXPORT::DEFAULT {}; BEGIN EXPORT::DEFAULT::{'this'} = ::('this') }"

[03:42] <Zoffix> Reproed. Thanks.

[03:43] *** empT joined
[03:44] <squashable6> 🍕 zoffixznet++ opened issue “LTA error: Serialization…”: https://github.com/rakudo/rakudo/issues/1471

[03:44] <squashable6> 🍕 zoffixznet++ labeled issue “LTA error: Serialization…”: https://github.com/rakudo/rakudo/issues/1471

[03:45] *** araraloren joined
[03:46] *** ctilmes left
[03:47] *** mcmillhj joined
[03:48] *** empT left
[03:48] *** AlexDaniel left
[03:52] *** aborazmeh joined
[03:52] *** aborazmeh left
[03:52] *** aborazmeh joined
[03:52] *** mcmillhj left
[03:53] *** colomon left
[03:55] *** colomon joined
[03:58] *** mcmillhj joined
[04:00] *** cdg joined
[04:03] *** mcmillhj left
[04:04] *** cdg left
[04:08] *** aborazmeh left
[04:13] *** mcmillhj joined
[04:19] *** mcmillhj left
[04:30] *** mcmillhj joined
[04:35] *** mcmillhj left
[04:36] *** xtreak joined
[04:38] *** Zoffix left
[04:41] *** Cabanossi left
[04:42] *** Cabanossi joined
[04:44] *** mcmillhj joined
[04:49] *** mcmillhj left
[04:50] <squashable6> 🍕 zoffixznet++ wrote a comment on “EVAL is not thread safe (by design?)”: https://github.com/rakudo/rakudo/issues/1391#issuecomment-362779931

[05:04] *** mcmillhj joined
[05:10] *** mcmillhj left
[05:11] <squashable6> 🍕 skids++ wrote a comment on “Array.reverse with holes…”: https://github.com/rakudo/rakudo/issues/1444#issuecomment-362780918

[05:15] *** khw left
[05:18] *** mcmillhj joined
[05:18] *** skids left
[05:24] *** mcmillhj left
[05:31] *** khisanth_ left
[05:32] *** mempko left
[05:38] *** mcmillhj joined
[05:40] <squashable6> 🍕 ugexe++ opened issue “sort(&by) is broken when elems == 2”: https://github.com/rakudo/rakudo/issues/1472

[05:40] <squashable6> 🍕🍕🍕  First contribution by ugexe++! ♥

[05:41] *** konsolebox left
[05:44] *** mcmillhj left
[05:45] *** khisanth_ joined
[05:45] *** Kaiepi left
[05:48] <squashable6> 🍕 zoffixznet++ self-assigned issue “sort(&by) is broken when elems == 2”: https://github.com/rakudo/rakudo/issues/1472

[05:49] *** mcmillhj joined
[05:50] *** cdg joined
[05:54] *** mcmillhj left
[05:55] *** konsolebox joined
[05:55] *** cdg left
[06:02] *** samcv left
[06:02] *** samcv joined
[06:08] *** mcmillhj joined
[06:13] *** mcmillhj left
[06:13] *** Kyo91 joined
[06:21] *** mcmillhj joined
[06:26] *** mcmillhj left
[06:34] *** mcmillhj joined
[06:39] *** mcmillhj left
[06:39] *** wamba joined
[06:48] *** mcmillhj joined
[06:48] <Geth> ¦ rakudo: 2e65de2999 | (Zoffix Znet)++ | src/core/Rakudo/Sorting.pm

[06:48] <Geth> ¦ rakudo: Fix broken 2-arity sort of 2-el list

[06:48] <Geth> ¦ rakudo: 

[06:48] <Geth> ¦ rakudo: Phixes https://github.com/rakudo/rakudo/issues/1472

[06:48] <Geth> ¦ rakudo: 

[06:48] <Geth> ¦ rakudo: When we have a 2-el list, we need to swap only if Order::More

[06:48] <Geth> ¦ rakudo: is received from the comparator, but the test was checking

[06:48] <Geth> ¦ rakudo: whether to leave it alone if Order::Less is received.

[06:48] <Geth> ¦ rakudo: 

[06:48] <Geth> ¦ rakudo: Fix by leaving it alone for Order::Same as well.

[06:48] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/2e65de2999

[06:48] <Geth> ¦ roast: 6fd123a1bf | (Zoffix Znet)++ | S32-list/sort.t

[06:48] <Geth> ¦ roast: Remove trailing whitespace

[06:48] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/6fd123a1bf

[06:49] <Geth> ¦ roast: 5dc25f13e6 | (Zoffix Znet)++ | S32-list/sort.t

[06:49] <squashable6> 🍕 zoffixznet++ closed issue “sort(&by) is broken when elems == 2”: https://github.com/rakudo/rakudo/issues/1472

[06:49] <Geth> ¦ roast: Cover degenerate cases of `sort`

[06:49] <Geth> ¦ roast: 

[06:49] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1472

[06:49] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/2e65de2999

[06:49] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/5dc25f13e6

[06:53] *** coverable6 left
[06:53] *** mcmillhj left
[06:53] *** coverable6 joined
[06:54] *** darutoko joined
[07:00] *** empT joined
[07:01] *** mcmillhj joined
[07:06] *** mcmillhj left
[07:06] *** empT left
[07:08] *** imcsk8 left
[07:09] *** aindilis joined
[07:15] *** mcmillhj joined
[07:21] *** mcmillhj left
[07:34] *** mcmillhj joined
[07:39] *** mcmillhj left
[07:46] *** Kaiepi joined
[07:47] *** mcmillhj joined
[07:52] *** mcmillhj left
[07:58] *** wamba left
[08:06] *** mcmillhj joined
[08:06] *** cdg joined
[08:11] *** cdg left
[08:11] *** mcmillhj left
[08:23] *** mcmillhj joined
[08:29] *** mcmillhj left
[08:31] *** leont joined
[08:35] *** empT joined
[08:40] *** empT left
[08:41] *** empT joined
[08:42] *** mcmillhj joined
[08:46] *** Actualeyes joined
[08:46] *** espadrine_ joined
[08:47] *** mcmillhj left
[08:48] *** leont left
[08:50] *** zeddy_k joined
[08:55] *** mcmillhj joined
[08:56] *** zeddy_k left
[09:00] *** mcmillhj left
[09:02] *** domidumont joined
[09:07] *** xtreak left
[09:12] *** sena_kun joined
[09:12] *** rindolf joined
[09:14] *** mcmillhj joined
[09:19] *** mcmillhj left
[09:25] *** mcmillhj joined
[09:26] *** sena_kun left
[09:29] *** mcmillhj left
[09:40] *** wamba joined
[09:40] *** mcmillhj joined
[09:45] *** mcmillhj left
[09:46] *** wamba left
[09:47] *** empT left
[09:47] *** xtreak joined
[09:48] *** araraloren_ joined
[09:51] *** araraloren left
[09:54] *** mcmillhj joined
[09:57] *** leont joined
[10:00] *** mcmillhj left
[10:07] *** mcmillhj joined
[10:09] *** domidumont left
[10:10] *** domidumont joined
[10:12] *** mcmillhj left
[10:18] *** leont left
[10:22] *** mcmillhj joined
[10:27] *** mcmillhj left
[10:30] *** TEttinger left
[10:36] *** Alikzus left
[10:38] *** mcmillhj joined
[10:38] *** setty1 joined
[10:42] *** mcmillhj left
[10:55] *** mcmillhj joined
[10:59] *** abraxxa joined
[11:00] *** mcmillhj left
[11:04] *** abraxxa left
[11:10] *** espadrine_ left
[11:15] *** mcmillhj joined
[11:17] *** abraxxa joined
[11:18] *** quotable6 left
[11:19] *** quotable6 joined
[11:20] *** mcmillhj left
[11:29] *** markong joined
[11:31] *** abraxxa left
[11:34] *** mcmillhj joined
[11:37] *** zeddy_k joined
[11:38] *** mcmillhj left
[11:49] *** wamba joined
[11:52] *** mcmillhj joined
[11:57] *** mcmillhj left
[11:59] *** Alikzus joined
[12:03] *** mcmillhj joined
[12:08] *** mcmillhj left
[12:10] *** eliasr joined
[12:14] *** mcmillhj joined
[12:19] *** mcmillhj left
[12:21] *** ufobat___ left
[12:23] *** AlexDaniel joined
[12:32] *** mcmillhj joined
[12:34] *** wamba left
[12:38] *** mcmillhj left
[12:39] *** araralonre__ joined
[12:40] <AlexDaniel> squashable6: status

[12:40] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈23 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:40] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/81bbfcdb83515d6dfd1fba21737c1d53

[12:40] <AlexDaniel> buggable: tag testneeded

[12:40] <buggable> AlexDaniel, There are 27 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[12:41] *** GregDonald left
[12:42] *** mcmillhj joined
[12:42] *** araraloren_ left
[12:46] *** araraloren_ joined
[12:46] *** GregDonald joined
[12:48] *** mcmillhj left
[12:49] *** araralonre__ left
[12:57] *** mcmillhj joined
[13:03] *** mcmillhj left
[13:04] *** xtreak left
[13:10] *** someuser left
[13:14] *** someuser joined
[13:16] *** leont joined
[13:17] *** mcmillhj joined
[13:22] *** mcmillhj left
[13:26] *** someuser left
[13:30] *** mcmillhj joined
[13:31] *** leont left
[13:35] *** mcmillhj left
[13:36] *** lizmat left
[13:46] *** mcmillhj joined
[13:51] *** mcmillhj left
[14:04] *** mcmillhj joined
[14:09] *** mcmillhj left
[14:11] <squashable6> 🍕🍕🍕  First contribution by timo++! ♥

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: 3b35f64c64 | (Timo Paulssen)++ | src/core/IO/Socket/Async.pm

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: first draft of "datagram"-oriented API for udp sockets

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: 

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: ask the .Supply to give you :datagrams and you'll

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: receive instances of IO::Socket::Async::Datagram with

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: .data being the string or buffer of data and

[14:11] <Geth> ¦ rakudo/udp_receive_hostname_port: .hostname and .port being the sender's address.

[14:12] <Geth> ¦ rakudo/udp_receive_hostname_port: review: https://github.com/rakudo/rakudo/commit/3b35f64c64

[14:14] <Geth> ¦ rakudo: timo++ created pull request #1473: [RFC] first draft of "datagram"-oriented API for udp sockets

[14:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1473

[14:14] <squashable6> 🍕 timo++ opened pull request “[RFC] first draft of "da…”: https://github.com/rakudo/rakudo/pull/1473

[14:15] <squashable6> 🍕 timo++ edited pull request “[RFC] first draft of "da…”: https://github.com/rakudo/rakudo/pull/1473

[14:16] <squashable6> 🍕 timo++ wrote a comment on “[RFC] first draft of "da…”: https://github.com/rakudo/rakudo/pull/1473#issuecomment-362811810

[14:16] *** mcmillhj joined
[14:21] *** mcmillhj left
[14:25] *** mcmillhj joined
[14:29] *** skids joined
[14:30] *** mcmillhj left
[14:35] *** mcmillhj joined
[14:36] *** sjoshi joined
[14:40] *** mcmillhj left
[14:51] *** mcmillhj joined
[14:51] <titsuki> m: say unique 1, -2, 2, 3, 'as' => { abs $_ };

[14:51] <camelia> rakudo-moar 2e65de299: OUTPUT: «(1 -2 2 3 as => -> ;; $_? is raw { #`(Block|59810144) ... })␤»

[14:56] *** mcmillhj left
[15:01] <MasterDuke>  m: say unique 1, -2, 2, 3, :as( { abs $_ } );

[15:01] <camelia> rakudo-moar 2e65de299: OUTPUT: «(1 -2 3)␤»

[15:01] <evalable6> MasterDuke, rakudo-moar 2e65de299: OUTPUT: «(1 -2 3)␤»

[15:02] <Geth> ¦ roast: 3dab7c7745 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S32-exceptions/misc.t

[15:02] <Geth> ¦ roast: Test malformed sigs with return types

[15:02] <Geth> ¦ roast: 

[15:02] <Geth> ¦ roast: Adds tests for RT#127100.

[15:02] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3dab7c7745

[15:02] <AlexDaniel> haha

[15:02] <synopsebot> RT#127100 [new]: https://rt.perl.org/Ticket/Display.html?id=127100 [LTA] error message when specifying return type before parameters ( --> Bool, Int $x, Int $y )

[15:02] <skids> m: say unique 1, -2, 2, 3, as => { abs $_ };

[15:02] <camelia> rakudo-moar 2e65de299: OUTPUT: «(1 -2 3)␤»

[15:02] <titsuki> m: say unique 1, -2, 2, 3, :as(;;;;;;; -> { abs $_ });

[15:02] <camelia> rakudo-moar 2e65de299: OUTPUT: «(1 -2 2 3)␤»

[15:03] <MasterDuke>  m: say unique 1, -2, 2, 3, :as( *.abs );

[15:03] <camelia> rakudo-moar 2e65de299: OUTPUT: «(1 -2 3)␤»

[15:03] <evalable6> MasterDuke, rakudo-moar 2e65de299: OUTPUT: «(1 -2 3)␤»

[15:04] <MasterDuke> m: say unique 1, -2, 2, 3, :as( *.abs );

[15:04] <camelia> rakudo-moar 2e65de299: OUTPUT: «(1 -2 3)␤»

[15:04] <skids> m: (:as(;;;;;;; -> { abs $_ })).perl.say

[15:04] <camelia> rakudo-moar 2e65de299: OUTPUT: «:as((Nil, Nil, Nil, Nil, Nil, Nil, Nil, ->  { #`(Block|71017600) ... }))␤»

[15:04] *** someuser joined
[15:04] <MasterDuke> huh, evalable6 was doing that because of the space before the 'm:'

[15:05] <AlexDaniel> yea, wrote that down already: https://github.com/perl6/whateverable/issues/53#issuecomment-362818980

[15:05] <AlexDaniel> I guess it thinks that m: is a label

[15:06] <AlexDaniel> and also does not understand that it's a m: command

[15:06] *** MasterDuke left
[15:07] *** MasterDuke joined
[15:07] <MasterDuke> fix as simple as ltrim the message before checking?

[15:09] *** mcmillhj joined
[15:14] *** mcmillhj left
[15:15] *** wamba joined
[15:22] *** mcmillhj joined
[15:27] *** mcmillhj left
[15:29] <araraloren_> m: sub p(|c) { dd c; }; p 1, -2, 2, 3, 'as' => { abs $_ };

[15:29] <camelia> rakudo-moar 2e65de299: OUTPUT: «\(1, -2, 2, 3, :as(-> ;; $_? is raw { #`(Block|68484960) ... }))␤»

[15:30] <araraloren_> m: sub p(|c) { dd c; }; p 1, -2, 2, 3, as => { abs $_ };

[15:30] <camelia> rakudo-moar 2e65de299: OUTPUT: «\(1, -2, 2, 3, :as(-> ;; $_? is raw { #`(Block|59952088) ... }))␤»

[15:31] <titsuki> m: say unique(1,2,3,3,:as(10))

[15:31] <camelia> rakudo-moar 2e65de299: OUTPUT: «(1 2 3)␤»

[15:32] <skids> m: say unique 1,2,3,3:as({10}) # has to be a callable

[15:32] <camelia> rakudo-moar 2e65de299: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤You can't adverb 3␤at <tmp>:1␤------> 3say unique 1,2,3,3:as({10})7⏏5 # has to be a callable␤»

[15:32] <skids> m: say unique 1,2,3,3,:as({10}) # has to be a callable

[15:32] <camelia> rakudo-moar 2e65de299: OUTPUT: «(1)␤»

[15:34] *** mcmillhj joined
[15:35] <titsuki> Why "as(<something Int object>)" doesn't cause error?

[15:35] <skids> Good question, maybe it should.

[15:35] <titsuki> ok. I see.

[15:36] <skids> m: sub f(:&as) { &as.perl.say }; f(:as(10))

[15:36] <camelia> rakudo-moar 2e65de299: OUTPUT: «Type check failed in binding to parameter '&as'; expected Callable but got Int (10)␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:37] <skids> Should probably do that.

[15:37] <skids> Though...

[15:38] <skids> Maybe with MMD...

[15:39] <skids> m: multi sub f(:&as!) { &as.perl.say }; multi sub f() { "NO ARG".say }; f(:as(10))

[15:39] <camelia> rakudo-moar 2e65de299: OUTPUT: «Unexpected named argument 'as' passed␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:39] *** mcmillhj left
[15:40] <skids> hrm.  Well that error may be LTA.

[15:42] <skids> m: multi sub f(:&as!) { &as.perl.say }; multi sub f(|c) { "NO ARG".say }; f(:as(10)) # probably what is happenning with unique

[15:42] <camelia> rakudo-moar 2e65de299: OUTPUT: «NO ARG␤»

[15:44] <skids> m: multi sub f(:&as!) { &as.perl.say }; multi sub f(:$as!) { "bad type on :as".say } ; multi sub f(|c) { "NO ARG".say }; f(:as(10))

[15:44] <camelia> rakudo-moar 2e65de299: OUTPUT: «bad type on :as␤»

[15:44] <skids> So just adding a candidate like that could deliver an error message.

[15:45] *** mcmillhj joined
[15:45] <skids> but not for .unique method due to interface consistency.

[15:49] *** mcmillhj left
[15:49] <skids> Adding that candidate though might mess up people trying to add a 'unique' multi sub that takes :as(Int).

[15:51] <skids> So maybe a more generic candidate that takes and looks for unknown/badly typed nameds and warns, but then runs.

[15:56] *** torbjorn left
[15:57] *** espadrine_ joined
[15:58] *** mcmillhj joined
[16:03] *** mcmillhj left
[16:04] *** skids left
[16:04] *** zacts left
[16:07] <AlexDaniel>  commit: say 42

[16:07] <evalable6> AlexDaniel, rakudo-moar 2e65de299: OUTPUT: «42␤»

[16:07] <AlexDaniel> MasterDuke: I don't think it's that simple :)

[16:08] <AlexDaniel> MasterDuke: but it's probably as simple as adding something here to just special-case it

[16:08] <AlexDaniel> MasterDuke: https://github.com/perl6/whateverable/blob/master/bin/Evalable.p6#L46

[16:08] <AlexDaniel> or just slap \s+ right on that line

[16:09] *** zacts joined
[16:11] *** sjoshi left
[16:13] *** mcmillhj joined
[16:15] *** someuser left
[16:16] *** comborico1611 joined
[16:17] *** comborico1611 left
[16:17] *** mcmillhj left
[16:17] *** comborico1611 joined
[16:18] <comborico1611> Does p6 have pointers?

[16:19] *** setty1 left
[16:19] <geekosaur> only for NativeCall

[16:20] <comborico1611> Thanks!

[16:22] *** Herby_ joined
[16:22] <Herby_> o/

[16:25] *** sjoshi joined
[16:28] <Herby_> reading a little about the history of p6: i didn't realize there is/was a haskell based implementation

[16:32] *** mcmillhj joined
[16:33] <Voldenet> What's the preferred way to reduce writing `MyClass.new(:field1($x), $field2($y));` into `MyClass($x, $y);`

[16:34] <Voldenet> a subroutine, or maybe some more elegant way?

[16:36] *** khw joined
[16:37] *** comborico1611 left
[16:38] *** mcmillhj left
[16:40] <Voldenet> m: class X { has $.n; multi method Str() { "value: $.n" } }; sub X-n ($v) { X.new(:n($v)) }; say ~X-n(42);

[16:40] <camelia> rakudo-moar 2e65de299: OUTPUT: «value: 42␤»

[16:41] <Voldenet> that's what I came up with, but this doesn't seem very elegant

[16:43] *** comborico1611 joined
[16:46] *** mcmillhj joined
[16:47] <Juerd> Voldenet: Provide your own BUILD submethod

[16:47] <Geth> ¦ doc: 3bf1d5efe2 | (Luca Ferrari)++ | doc/Language/regexes.pod6

[16:47] <Geth> ¦ doc: Explain $/ resets each time a new match is run.

[16:47] <Geth> ¦ doc: 

[16:47] <Geth> ¦ doc: See discussion in #1752

[16:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3bf1d5efe2

[16:47] <synopsebot> Link: https://doc.perl6.org/language/regexes

[16:47] <Geth> ¦ doc: 26c5cdd0e8 | (Luca Ferrari)++ | doc/Language/regexes.pod6

[16:47] <Geth> ¦ doc: Add a section to explain $/ changes each time ~~ is used.

[16:47] <Geth> ¦ doc: 

[16:47] <Geth> ¦ doc: Explained also named captures.

[16:48] <Geth> ¦ doc: See issue #1752

[16:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/26c5cdd0e8

[16:48] <Voldenet> Juerd: but doesn't that leave me with .new everywhere?

[16:48] <Juerd> Voldenet: I assumed leaving out .new was a mistake. Why would you want to get rid of that?

[16:50] *** someuser joined
[16:50] <Voldenet> because I'm making large trees and it seemed unwieldy in cases where I'd need to use a lot of them

[16:51] *** zeddy_k left
[16:51] <geekosaur> nobody said your constructor has to be called .new

[16:51] *** mcmillhj left
[16:51] <Juerd> geekosaur: But leaving out the constructor completely, is that even feasible?

[16:52] *** Rawriful joined
[16:52] <Juerd> It looks pythonesque, but I don't see any advantage

[16:52] <Voldenet> it's shorter ;D

[16:52] <geekosaur> er? it's in there still, it's hidden inside X-n

[16:52] <geekosaur> but it could be a class method instead. (also, uh, can I suggest you not use X as a class name? the eception namespace *will* bite you at some point)

[16:53] <Juerd> Voldenet: If you just want short, use a single-letter subroutine :D

[16:53] <Juerd> Maybe an operator even

[16:53] <Voldenet> > equation-n(mul-n(sum-n(expr-n('a'), expr-n('b'), expr-n('a'))))

[16:54] <Voldenet> it'd be way more unwieldy if I wrote this with .new everywhere

[16:54] <Voldenet> not that it's any good, I made some mistakes on the way

[16:54] <Voldenet> but I'm writing tests for some expression reducers, just for fun

[16:55] <Juerd> m: class Point { has $.x; has $.y; }; sub infix:<`>($x, $y) { Point.new(:$x, :$y) }; say (42`69).x

[16:55] <camelia> rakudo-moar 2e65de299: OUTPUT: «42␤»

[16:55] <Juerd> That's short! :)

[16:56] <Voldenet> actually, that is pretty clever

[16:56] <geekosaur> this is starting to look like apl, though >.>

[16:57] <Juerd> geekosaur: Well, if someone values brevity over clarity, that's their fate anyway :)

[16:57] <Voldenet> I bet I'll be pretty surprised

[16:57] <Voldenet> later

[16:57] <Juerd> Anyhow, to be honest, if I read things like mul-n and sum-n, I think operators would be better anyway.

[16:58] <Voldenet> m: class X { has $.n; multi method Str() { "value: $.n" } }; sub prefix:<@> ($v) { X.new(:n($v)) }; say ~@42;

[16:58] <camelia> rakudo-moar 2e65de299: OUTPUT: «value: 42␤»

[16:59] <Voldenet> Juerd++ for the apl powers ;)

[16:59] <Juerd> Maybe even just define an operator for expr-n and overload existing operators (I mean provide new multi candidates for them) to do the rest

[16:59] *** Rawriful left
[16:59] <Juerd> Voldenet: X is already used by the language for exception stuff, @ is used for array stuff. You may want to pick different characters.

[16:59] <Juerd> Most of unicode is still available! :D

[17:00] <Voldenet> Watch me when I reimplement + and - operators >.>

[17:00] <geekosaur> this has been a fertile source of weird bugs n the past

[17:01] <geekosaur> even more so if someone actually did some of the things discussed in dev where spesh assumes you did not so overload various things

[17:01] <Juerd> geekosaur: On the other hand, nothing like fuzzing and chaos monkeys to find bugs and harden something

[17:01] <Juerd> Also, if there's a "just don't do that", it should be documented imho

[17:01] <Juerd> So it might just be a good way to find those things

[17:02] <geekosaur> if that spesh thing ahppened, you will lose that bet; you will have to declare that you are breaking the rules

[17:02] <Juerd> use MONKEY-WAR;?

[17:02] <geekosaur> but I don;t think it has as yet, specifically because someone needs to work out how to make it clear that problems await

[17:02] <Juerd> use CHAOS-MONKEY;?

[17:03] <geekosaur> neither really. monkey wrench :)

[17:03] *** mcmillhj joined
[17:03] <Juerd> Nice one

[17:03] <Voldenet> if the problems await, I just have to give them some nice promises

[17:04] *** Rawriful joined
[17:05] <Voldenet> m: sub prefix:<.> ($a, $b) { say $a ~ $b }; say "two" . "three"

[17:05] <camelia> rakudo-moar 2e65de299: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of . to concatenate strings; in Perl 6 please use ~␤at <tmp>:1␤------> 3.> ($a, $b) { say $a ~ $b }; say "two" .7⏏5 "three"␤»

[17:05] <Juerd> . is used for method things and special cased in the parser iirc

[17:06] <Juerd> Note that operators don't have to be a single character

[17:06] <Juerd> m: class Point { has $.x; has $.y; }; sub infix:<ook>($x, $y) { Point.new(:$x, :$y) }; say (42 ook 69).x

[17:06] <camelia> rakudo-moar 2e65de299: OUTPUT: «42␤»

[17:07] *** zeddy_k joined
[17:08] *** mcmillhj left
[17:09] *** natrys joined
[17:10] <Voldenet> yeah, it's pretty cool when they are a single character though

[17:16] *** wamba left
[17:18] *** Herby_ left
[17:19] <Voldenet> m: sub prefix:<sub> { $^a }; sub test { say ":>"; };

[17:19] <camelia> rakudo-moar 2e65de299: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    test used at line 1␤␤»

[17:19] <Voldenet> fun features

[17:22] *** mcmillhj joined
[17:23] *** zakharyas joined
[17:27] *** mcmillhj left
[17:31] <Voldenet> okay, I can overload operators, but how do I overload operators precedence?

[17:32] <Voldenet> m: sub infix:<_*> { $^a * $^b }; sub infix:<_+> { $^a + $^b }; say 2 _+ 2 _* 2

[17:32] <camelia> rakudo-moar 2e65de299: OUTPUT: «8␤»

[17:32] *** mcmillhj joined
[17:33] <AlexDaniel> buggable: tag testneeded

[17:33] <buggable> AlexDaniel, There are 26 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[17:34] <tadzik> Bailador has flyers and stickers on fosdem <3

[17:38] *** mcmillhj left
[17:38] <geekosaur> is tighter / is looser

[17:38] <geekosaur> look up the details, you'll need another operator to relate them to

[17:46] <Voldenet> m: sub infix:<_*> { $^a * $^b }; sub infix:<_+> is looser(&infix:<_*>) { $^a + $^b }; say 1 _+ 2 _* 2 _+ 1

[17:46] <camelia> rakudo-moar 2e65de299: OUTPUT: «6␤»

[17:46] <Voldenet> that's pretty awesome

[17:49] *** mcmillhj joined
[17:54] *** mcmillhj left
[17:57] *** Geth left
[17:57] *** Geth joined
[17:57] *** ChanServ sets mode: +v Geth

[18:03] *** zakharyas left
[18:04] *** zeddy_k left
[18:04] *** MilkmanDan left
[18:05] *** mcmillhj joined
[18:07] *** MilkmanDan joined
[18:07] <Geth> ¦ roast: 3ca315596c | (Aleks-Daniel Jakimenko-Aleksejev)++ | S29-os/system.t

[18:07] <Geth> ¦ roast: Test Proc.encoding

[18:07] <Geth> ¦ roast: 

[18:07] <Geth> ¦ roast: Resolves RT#129296

[18:07] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/3ca315596c

[18:07] <synopsebot> RT#129296 [open]: https://rt.perl.org/Ticket/Display.html?id=129296 Splitting non-binary handles no longer works (run(:out, "ls").out.split: 0.chr)

[18:08] <AlexDaniel> squashable6: status

[18:08] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈17 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:08] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/52988a88ab1209c973b129bf6f1a32da

[18:10] *** mcmillhj left
[18:13] <TimToady> titsuki: I assume you know that -> { abs $_ } does not, in fact, pass anything in to $_ there, since the signature is essentially ()

[18:17] *** mcmillhj joined
[18:21] *** mcmillhj left
[18:28] *** wamba joined
[18:29] *** mcmillhj joined
[18:34] *** mcmillhj left
[18:44] *** Kaiepi left
[18:46] *** ctilmes joined
[18:47] *** mcmillhj joined
[18:47] <ctilmes> m: use NativeCall; class Foo is repr('CStruct') { has int32 $.x = 7 }; class Bar is repr('CStruct') { has Foo $.foo; submethod BUILD(:$foo) { $!foo := $foo } }; my $foo = Foo.new; my $bar = Bar.new(:$foo);

[18:47] <camelia> rakudo-moar 2e65de299: OUTPUT: «Can only store CStruct attribute in CStruct slot in CStruct␤  in submethod BUILD at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[18:49] <ctilmes> How do I initialize a CStruct pointer to another CStruct?

[18:52] *** mcmillhj left
[18:52] *** darutoko left
[19:07] *** mcmillhj joined
[19:12] *** mcmillhj left
[19:20] *** mcmillhj joined
[19:25] *** mcmillhj left
[19:26] *** notostraca joined
[19:29] *** domidumont left
[19:33] *** mcmillhj joined
[19:38] *** mcmillhj left
[19:41] *** comborico1611 left
[19:42] <ctilmes> I figured it out, I have to declare the type of the argument to BUILD, then it works

[19:46] *** zakharyas joined
[19:52] *** mcmillhj joined
[19:52] *** cdg joined
[19:54] *** cdg_ joined
[19:55] *** dogbert11 left
[19:57] *** mcmillhj left
[19:58] *** cdg left
[20:00] *** ctilmes left
[20:02] *** mcmillhj joined
[20:07] *** mcmillhj left
[20:22] *** mcmillhj joined
[20:27] *** mcmillhj left
[20:29] *** wamba left
[20:32] *** eliasr left
[20:36] *** someuser left
[20:36] *** someuser joined
[20:37] *** wamba joined
[20:38] *** mcmillhj joined
[20:41] *** Kaiepi joined
[20:43] *** mcmillhj left
[20:47] *** zakharyas left
[20:51] *** mcmillhj joined
[20:56] *** mcmillhj left
[21:00] *** natrys left
[21:03] *** mcmillhj joined
[21:04] *** sjoshi left
[21:07] *** cdg_ left
[21:08] *** mcmillhj left
[21:11] *** cdg joined
[21:13] *** Sgeo_ left
[21:16] *** cdg left
[21:18] *** mcmillhj joined
[21:23] *** mcmillhj left
[21:23] *** GregDonald left
[21:26] *** GregDonald joined
[21:27] <AlexDaniel> squashable6: status

[21:27] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈14 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[21:27] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/599bf994a0c1a9ce9c714937ae164a87

[21:36] *** mcmillhj joined
[21:41] *** someuser left
[21:41] *** mcmillhj left
[21:47] *** GregDonald left
[21:49] *** wamba left
[21:51] *** someuser joined
[21:52] *** teatime left
[21:55] *** mcmillhj joined
[22:00] *** mcmillhj left
[22:08] *** mcmillhj joined
[22:09] *** setty1 joined
[22:10] *** char_var[buffer] left
[22:13] *** cdg joined
[22:13] *** mcmillhj left
[22:14] *** rindolf left
[22:17] *** cdg left
[22:19] <Geth> ¦ rakudo: df1712d81c | (Nick Logan)++ (committed using GitHub Web editor) | src/core/CompUnit/RepositoryRegistry.pm

[22:20] <Geth> ¦ rakudo: Fix home repository to point at correct location

[22:20] <Geth> ¦ rakudo: 

[22:20] <Geth> ¦ rakudo: Fixes the following incorrect blead-only behavior:

[22:20] <Geth> ¦ rakudo: 

[22:20] <Geth> ¦ rakudo: ```

[22:20] <Geth> ¦ rakudo: perl6 -e 'say CompUnit::RepositoryRegistry.repository-for-name("home")'

[22:20] <Geth> ¦ rakudo: inst#/Users/ugexe

[22:20] <Geth> ¦ rakudo: <…commit message has 11 more lines…>

[22:20] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/df1712d81c

[22:21] *** mcmillhj joined
[22:22] <Geth> ¦ roast: ceabda6337 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S32-exceptions/misc.t

[22:22] <Geth> ¦ roast: Test line number of the corresponding starter

[22:22] <Geth> ¦ roast: 

[22:22] <Geth> ¦ roast: Adds tests for RT #130261. I don't find this test elegant, but it

[22:22] <Geth> ¦ roast: should be enough to close the ticket.

[22:22] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ceabda6337

[22:22] <synopsebot> RT#130261 [new]: https://rt.perl.org/Ticket/Display.html?id=130261 [LTA] Error message for unclosed curly quote points to the last line of the file

[22:24] <AlexDaniel> would be great if others chimed in to squash the remaining testneeded tickets :)

[22:25] <AlexDaniel> buggable: tag testneeded

[22:25] <buggable> AlexDaniel, There are 25 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[22:26] *** mcmillhj left
[22:31] <Geth> ¦ roast: ff0472adfc | (Moritz Lenz)++ | S32-temporal/DateTime.t

[22:31] <Geth> ¦ roast: RT#125555: DateTime comparison ops

[22:31] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ff0472adfc

[22:31] <squashable6> 🍕🍕🍕  First contribution by moritz++! ♥

[22:31] <synopsebot> RT#125555 [open]: https://rt.perl.org/Ticket/Display.html?id=125555 [NYI] Comparison ops for DateTimes in Rakudo

[22:34] <AlexDaniel> buggable: pizza moritz

[22:34] <buggable> moritz, enjoy this slice of Four Cheese pizza, my friend! Yummy 🍕

[22:36] *** mcmillhj joined
[22:42] *** mcmillhj left
[22:42] *** MasterDuke left
[22:46] *** someuser left
[22:51] <Geth> ¦ roast: 7557eef426 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S02-lexical-conventions/unspace.t

[22:51] <Geth> ¦ roast: Tests unspace + map + constants

[22:51] <Geth> ¦ roast: 

[22:51] <Geth> ¦ roast: Adds tests for RT #125985.

[22:52] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/7557eef426

[22:52] <synopsebot> RT#125985 [open]: https://rt.perl.org/Ticket/Display.html?id=125985 [BUG] Internal error when a constant, unspace, and a map are involved in Rakudo

[22:52] *** zeddy_k joined
[22:53] *** mcmillhj joined
[22:53] * AlexDaniel should reread his commit messages before pushing :)

[22:57] *** mcmillhj left
[23:03] *** zeddy_k left
[23:04] *** zeddy_k joined
[23:05] *** mcmillhj joined
[23:10] *** mcmillhj left
[23:21] *** mcmillhj joined
[23:26] *** mcmillhj left
[23:35] *** setty1 left
[23:40] *** mcmillhj joined
[23:45] *** mcmillhj left
[23:51] *** Zoffix joined
[23:51] <Zoffix> tadzik: pics or it never happend

[23:56] *** mcmillhj joined
