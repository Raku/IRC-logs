[00:03] *** MasterDuke joined
[00:03] *** p6bannerbot sets mode: +v MasterDuke

[00:03] *** MasterDuke left
[00:03] *** MasterDuke joined
[00:03] *** herbert.freenode.net sets mode: +v MasterDuke

[00:03] *** p6bannerbot sets mode: +v MasterDuke

[00:33] <buggable> New CPAN upload: AttrX-Mooish-v0.4.6.tar.gz by VRURG http://modules.perl6.org/dist/AttrX::Mooish:cpan:VRURG

[01:05] *** mniip left
[01:11] *** lookatme_r joined
[01:12] *** p6bannerbot sets mode: +v lookatme_r

[01:12] *** mniip joined
[01:12] *** p6bannerbot sets mode: +v mniip

[01:13] *** lookatme_r left
[01:14] *** kerframil joined
[01:14] *** p6bannerbot sets mode: +v kerframil

[01:19] <fake_space_whale> m: class T { }; &T

[01:19] <camelia> rakudo-moar fc23b197a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Illegally post-declared type:‚ê§    T used at line 1‚ê§‚ê§¬ª

[01:38] *** leont left
[01:56] *** molaf left
[02:09] *** molaf joined
[02:10] *** p6bannerbot sets mode: +v molaf

[02:22] <Geth> ¬¶ doc: 70cab3440b | Coke++ | doc/Type/Grammar.pod6

[02:22] <Geth> ¬¶ doc: word variant

[02:22] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/70cab3440b

[02:22] <Geth> ¬¶ doc: 87748322a0 | Coke++ | doc/Language/glossary.pod6

[02:22] <Geth> ¬¶ doc: pass finicky link test

[02:22] <synopsebot> Link: https://doc.perl6.org/type/Grammar

[02:22] <synopsebot> Link: https://doc.perl6.org/language/glossary

[02:22] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/87748322a0

[02:41] *** cpage left
[02:42] *** itaipu joined
[02:43] *** p6bannerbot sets mode: +v itaipu

[02:47] *** dylanwh left
[02:48] *** dylanwh joined
[02:49] *** p6bannerbot sets mode: +v dylanwh

[02:55] *** MasterDuke left
[03:07] *** kerframil left
[03:11] *** kerframil joined
[03:11] *** p6bannerbot sets mode: +v kerframil

[03:16] *** itaipu left
[03:42] *** lichtkind left
[03:56] *** lichtkind joined
[03:56] *** p6bannerbot sets mode: +v lichtkind

[04:01] *** avar left
[04:01] *** avar joined
[04:01] *** avar left
[04:01] *** avar joined
[04:01] *** p6bannerbot sets mode: +v avar

[04:01] *** p6bannerbot sets mode: +v avar

[04:08] *** lichtkind left
[04:21] *** lichtkind joined
[04:21] *** p6bannerbot sets mode: +v lichtkind

[04:29] *** lichtkind left
[04:36] *** molaf left
[04:39] *** sno left
[04:41] *** lichtkind joined
[04:42] *** p6bannerbot sets mode: +v lichtkind

[04:47] *** cpage joined
[04:48] *** p6bannerbot sets mode: +v cpage

[04:48] *** curan joined
[04:48] *** p6bannerbot sets mode: +v curan

[04:52] *** lichtkind left
[05:07] *** lichtkind joined
[05:07] *** p6bannerbot sets mode: +v lichtkind

[05:16] *** lichtkind left
[05:29] *** spycrab0 left
[05:30] *** lichtkind joined
[05:31] *** p6bannerbot sets mode: +v lichtkind

[05:34] *** sno joined
[05:34] *** rindolf joined
[05:35] *** p6bannerbot sets mode: +v sno

[05:35] *** p6bannerbot sets mode: +v rindolf

[05:42] *** EXCEPTS joined
[05:42] *** domidumont joined
[05:43] *** p6bannerbot sets mode: +v domidumont

[05:43] *** lichtkind left
[05:45] *** EXCEPTS left
[05:48] *** TeamBlast left
[05:48] *** mephinet left
[05:48] *** zostay left
[05:48] *** skaji left
[05:48] *** reu left
[05:49] *** TeamBlast joined
[05:49] *** skaji joined
[05:49] *** p6bannerbot sets mode: +v skaji

[05:49] *** zostay joined
[05:49] *** p6bannerbot sets mode: +v zostay

[05:49] *** jcallen left
[05:49] *** integral left
[05:49] *** Spot_ left
[05:49] *** olinkl left
[05:49] *** xq left
[05:49] *** p6bannerbot sets mode: +v TeamBlast

[05:50] *** mirlur[m] left
[05:50] *** lance_w[m] left
[05:50] *** Juerd left
[05:50] *** integral joined
[05:50] *** Juerd joined
[05:50] *** olinkl joined
[05:50] *** p6bannerbot sets mode: +v olinkl

[05:50] *** mirlur[m] joined
[05:50] *** p6bannerbot sets mode: +v mirlur[m]

[05:50] *** lance_w[m] joined
[05:50] *** p6bannerbot sets mode: +v lance_w[m]

[05:50] *** jcallen joined
[05:50] *** p6bannerbot sets mode: +v jcallen

[05:50] *** Spot_ joined
[05:50] *** p6bannerbot sets mode: +v Spot_

[05:50] *** p6bannerbot sets mode: +v integral

[05:51] *** p6bannerbot sets mode: +v Juerd

[05:51] *** reu joined
[05:51] *** p6bannerbot sets mode: +v reu

[05:52] *** mephinet joined
[05:52] *** p6bannerbot sets mode: +v mephinet

[05:56] *** lichtkind joined
[05:57] *** p6bannerbot sets mode: +v lichtkind

[06:06] *** lichtkind left
[06:07] *** lichtkind joined
[06:08] *** p6bannerbot sets mode: +v lichtkind

[06:10] <SmokeMachine> m: my @a := gather loop { take &++ }; .say for @a.head: 5

[06:10] <camelia> rakudo-moar fc23b197a: OUTPUT: ¬´Type check failed in binding; expected Positional but got Seq (?)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[06:10] <SmokeMachine> m: my @a = lazy gather loop { take &++ }; .say for @a.head: 5

[06:11] <camelia> rakudo-moar fc23b197a: OUTPUT: ¬´Type check failed in assignment to &; expected Callable but got Int (1)‚ê§  in code  at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[06:11] <El_Che> notable6: weekly, new rakudo-pkg 2018.08 pkgs (+ added support for Alpine 3.8 and openSUSE 15.0). Packages on the release page and deb/rpm repos updated. https://github.com/nxadm/rakudo-pkg/

[06:11] <notable6> El_Che, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Notable

[06:11] <SmokeMachine> m: my @a = lazy gather loop { take $++ }; .say for @a.head: 5

[06:11] <camelia> rakudo-moar fc23b197a: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§4‚ê§¬ª

[06:12] *** hammer0657 joined
[06:12] *** lichtkind_ joined
[06:12] *** lichtkind left
[06:12] *** xq joined
[06:12] *** p6bannerbot sets mode: +v xq

[06:13] *** p6bannerbot sets mode: +v lichtkind_

[06:16] *** hammer0657 left
[06:16] *** lichtkind_ left
[06:17] *** lichtkind_ joined
[06:18] *** p6bannerbot sets mode: +v lichtkind_

[06:18] *** vike1 left
[06:20] *** vike joined
[06:21] *** p6bannerbot sets mode: +v vike

[06:21] *** domidumont left
[06:33] <El_Che> notable6 weekly new rakudo-pkg 2018.08 pkgs (+ added support for Alpine 3.8 and openSUSE 15.0). Packages on the release page and deb/rpm repos updated. https://github.com/nxadm/rakudo-pkg/

[06:33] <El_Che> nope?

[06:34] <El_Che> notable6 weekly: new rakudo-pkg 2018.08 pkgs (+ added support for Alpine 3.8 and openSUSE 15.0). Packages on the release page and deb/rpm repos updated. https://github.com/nxadm/rakudo-pkg/

[06:34] <El_Che> lizmat then: new rakudo-pkg 2018.08 pkgs (+ added support for Alpine 3.8 and openSUSE 15.0). Packages on the release page and deb/rpm repos updated. https://github.com/nxadm/rakudo-pkg/

[06:39] *** [Sno] joined
[06:39] *** sno left
[06:39] *** p6bannerbot sets mode: +v [Sno]

[06:43] <AlexDaniel> weekly: new rakudo-pkg 2018.08 pkgs (+ added support for Alpine 3.8 and openSUSE 15.0). Packages on the release page and deb/rpm repos updated. https://github.com/nxadm/rakudo-pkg/

[06:43] <notable6> AlexDaniel, Noted!

[06:43] <AlexDaniel> El_Che: or ‚Äúnotable6: weekly smth smth‚Äù

[06:44] <El_Che> thx :)

[06:49] <El_Che> AlexDaniel: cheers for the release

[06:49] <AlexDaniel> \o/

[06:52] *** robertle joined
[06:52] *** spycrab0 joined
[06:52] *** p6bannerbot sets mode: +v spycrab0

[06:53] *** p6bannerbot sets mode: +v robertle

[07:06] *** HaraldJoerg joined
[07:07] *** p6bannerbot sets mode: +v HaraldJoerg

[07:11] *** fake_space_whale left
[07:25] *** domidumont joined
[07:26] *** p6bannerbot sets mode: +v domidumont

[07:34] *** zakharyas joined
[07:34] *** HaraldJoerg left
[07:35] *** p6bannerbot sets mode: +v zakharyas

[07:37] *** HaraldJoerg joined
[07:38] *** p6bannerbot sets mode: +v HaraldJoerg

[07:40] *** pmurias joined
[07:40] *** p6bannerbot sets mode: +v pmurias

[07:41] *** Ven` joined
[07:41] *** dakkar joined
[07:42] *** p6bannerbot sets mode: +v Ven`

[07:42] *** p6bannerbot sets mode: +v dakkar

[07:42] <El_Che> AlexDaniel: 2018.09 will be a small one, I suppose

[07:44] *** pmurias left
[07:45] <AlexDaniel> El_Che: depends on whether we merge jnthn's stuff

[07:49] *** pmurias joined
[07:50] *** p6bannerbot sets mode: +v pmurias

[07:56] *** zakharyas left
[07:57] *** zakharyas joined
[07:57] *** lichtkind__ joined
[07:57] *** p6bannerbot sets mode: +v zakharyas

[07:58] *** p6bannerbot sets mode: +v lichtkind__

[07:58] *** lichtkind_ left
[08:09] *** lichtkind__ left
[08:14] *** pmurias left
[08:14] *** pmurias joined
[08:15] *** zakharyas left
[08:15] *** Ven` left
[08:15] *** p6bannerbot sets mode: +v pmurias

[08:18] *** pmurias left
[08:18] *** sena_kun joined
[08:19] *** p6bannerbot sets mode: +v sena_kun

[08:19] *** pmurias joined
[08:20] *** p6bannerbot sets mode: +v pmurias

[08:20] *** lichtkind__ joined
[08:21] *** p6bannerbot sets mode: +v lichtkind__

[08:26] *** Ven` joined
[08:27] *** stalled29 joined
[08:27] *** p6bannerbot sets mode: +v Ven`

[08:29] *** ExtraCrispy joined
[08:29] *** stalled29 left
[08:30] *** p6bannerbot sets mode: +v ExtraCrispy

[08:36] *** angelds joined
[08:36] *** p6bannerbot sets mode: +v angelds

[08:39] *** lizmat left
[08:45] *** ExtraCrispy left
[08:48] *** n0nada25 joined
[08:48] *** n0nada25 left
[08:50] <rindolf> Hi all! how can I fix this - {($p5-vers.map: -> $x {"    - '" ~ $x.Str ~"'\n"}).join('')} ?

[08:51] <rindolf> m: <5 6 7>.map: -> $x { "foo" ~ $x ~ "b" }

[08:51] <camelia> rakudo-moar fc23b197a: ( no output )

[08:52] <rindolf> m: say (<5 6 7>.map: -> $x { "foo" ~ $x ~ "b" })

[08:52] <camelia> rakudo-moar fc23b197a: OUTPUT: ¬´(foo5b foo6b foo7b)‚ê§¬ª

[08:52] <rindolf> m: say (<5 6 7>.map: -> $x { "foo" ~ $x.Str ~ "b" })

[08:52] <camelia> rakudo-moar fc23b197a: OUTPUT: ¬´(foo5b foo6b foo7b)‚ê§¬ª

[08:53] <rindolf> p6eval: say (<5 6 7>.map: -> $x { "foo" ~ $x.Str ~ "b" })

[08:53] <rindolf> camelia: help

[08:53] <camelia> rindolf: Usage: <(debug-cat|rakudo-jvm|p5-to-p6|star-m|nqp-jvm|rakudo-moar|nqp-js|prof-m|nqp-moarvm|master|nqp-mvm|r-j|p56|r|perl6|rj|rakudo|r-m|m|sm|rm|nqp-q|j|star|p6|nqp-m|nqp|r-jvm)(?^::\s(?!OUTPUT)) $perl6_program>

[08:53] *** lizmat joined
[08:53] <AlexDaniel> rindolf: sorry, so what's the issue?

[08:54] *** p6bannerbot sets mode: +v lizmat

[08:55] <rindolf> AlexDaniel: http://www.shlomifish.org/Files/files/text/f.txt

[08:57] *** ExtraCrispy joined
[08:58] <rindolf> AlexDaniel: any idea?

[08:58] *** p6bannerbot sets mode: +v ExtraCrispy

[08:59] <rindolf> perl6: say (<5 6 7>.map: -> $x { "foo" ~ $x.Str ~ "b" })

[08:59] <camelia> rakudo-jvm 08b449e1a, rakudo-moar fc23b197a: OUTPUT: ¬´(foo5b foo6b foo7b)‚ê§¬ª

[08:59] *** zakharyas joined
[09:00] <AlexDaniel> rindolf: where's the code for that? https://github.com/shlomif/perl6-CI-Gen/blob/8262c758ab33ea206ecb5db062313842dba7849f/lib/CI/Gen.pm6#L152

[09:00] <rindolf> lizmat: hi

[09:00] *** p6bannerbot sets mode: +v zakharyas

[09:00] <AlexDaniel> rindolf: I mean, it complains about line 152, that's line 152‚Ä¶

[09:02] *** leont joined
[09:02] <rindolf> AlexDaniel: i think it is https://github.com/shlomif/perl6-CI-Gen/blob/8262c758ab33ea206ecb5db062313842dba7849f/lib/CI/Gen.pm6#L231

[09:03] <rindolf> AlexDaniel: but it has a mind of its own

[09:03] *** p6bannerbot sets mode: +v leont

[09:06] <rindolf> AlexDaniel: see https://github.com/shlomif/perl6-CI-Gen/blob/master/lib/CI/Gen.pm6#L231

[09:07] <rindolf> is there a perl workshop now?

[09:07] <rindolf> noone answers

[09:09] <AlexDaniel> rindolf: have you tried golfing the issue?

[09:09] <rindolf> AlexDaniel: no

[09:10] *** zakharyas left
[09:10] *** lichtkind__ left
[09:13] <AlexDaniel> because yeah, it's weird

[09:19] *** ExtraCrispy left
[09:22] <rindolf> AlexDaniel: had a missing -I.

[09:23] *** lichtkind__ joined
[09:23] <rindolf> AlexDaniel: so it used the old code

[09:23] *** p6bannerbot sets mode: +v lichtkind__

[09:28] *** itaipu joined
[09:29] *** p6bannerbot sets mode: +v itaipu

[09:29] <rindolf> AlexDaniel: thanks

[09:34] *** sotona joined
[09:35] *** p6bannerbot sets mode: +v sotona

[09:36] *** ExtraCrispy joined
[09:36] *** p6bannerbot sets mode: +v ExtraCrispy

[09:39] *** sotona left
[09:39] *** spycrab0 left
[09:50] *** pmurias left
[09:56] *** zakharyas joined
[09:57] *** p6bannerbot sets mode: +v zakharyas

[10:02] <rindolf> https://github.com/shlomif/ci-gen-framework

[10:08] *** sena_kun left
[10:16] *** pmurias joined
[10:16] *** p6bannerbot sets mode: +v pmurias

[10:19] <El_Che> rindolf: cro does this as well, no fan: zef install --force-install .

[10:19] <El_Che> at the back of my mind a voice yells: it's broken! it's broken!

[10:21] <rindolf> El_Che: cro?

[10:21] <El_Che> jnthn's web framework

[10:21] <El_Che> (very nice, try it out)

[10:21] <tyil> ^

[10:21] <tyil> its simple yet powerful

[10:23] <rindolf> El_Che: https://cro.services/ - what does that have to do w generating ci scripts?

[10:23] *** xoryo joined
[10:23] *** p6bannerbot sets mode: +v xoryo

[10:31] *** pmurias left
[10:41] *** noganex left
[10:50] <rindolf> El_Che: this is just temporary

[10:51] *** araujo joined
[10:51] *** araujo left
[10:51] *** araujo joined
[10:51] *** p6bannerbot sets mode: +v araujo

[10:52] *** p6bannerbot sets mode: +v araujo

[11:05] <DrForr> Maybe I can install it now, again. Having the docker route available might be better though.

[11:11] *** lichtkind__ left
[11:14] *** hudo joined
[11:14] *** aindilis left
[11:15] *** aindilis` joined
[11:15] *** p6bannerbot sets mode: +v hudo

[11:16] *** p6bannerbot sets mode: +v aindilis`

[11:18] <hudo> Im using Net::SSH::Any and my $sshan = Net::SSH::Any->new($scphost, user => $scpuser, password => $scppassword ) ; results in 

[11:18] <lizmat> hudo: that looks like Perl 5 code

[11:18] <hudo> Scalar found where operator expected at /usr/local/share/perl/5.20.2/Net/SSH/Any/Backend/Net_OpenSSH.pm line 48, near "// $any"

[11:18] <hudo> 	(Missing operator before  $any?)

[11:19] <lizmat> hudo: this channel discusses Perl 6 issues

[11:19] <hudo> uuh wrong channel , sorry

[11:19] <DrForr> hudo: Wrong channel? This is for perl 6 :)

[11:19] <lizmat> hudo: no pb

[11:20] * DrForr meditates on how 'net/clearFlags' could be implemented in the existing JSONRPC module.

[11:21] <DrForr> And wishes there were a way to move windows between Win10 virtual desktops.

[11:22] *** scimon joined
[11:23] *** p6bannerbot sets mode: +v scimon

[11:23] *** lichtkind__ joined
[11:24] *** p6bannerbot sets mode: +v lichtkind__

[11:24] *** kerframil left
[11:25] <DrForr> It'd be nice to have a submethod or something that could create a hierarchy there...

[11:26] <DrForr> (not really a p6 submethod, but something that'd act like a nested class...

[11:58] *** saki joined
[11:58] *** saki left
[12:05] *** mcmillhj joined
[12:06] *** p6bannerbot sets mode: +v mcmillhj

[12:07] *** saki joined
[12:07] *** saki left
[12:11] *** Xliff joined
[12:12] *** Xliff left
[12:13] *** Xliff joined
[12:13] *** p6bannerbot sets mode: +v Xliff

[12:14] <Xliff> \o

[12:15] <Xliff> Is there a way to force a module to recompile (or at least re-run the BEGIN and CHECK blocks)

[12:17] *** lizmat left
[12:18] *** lizmat joined
[12:18] *** lizmat left
[12:25] <masak> Xliff: remove the cached bytecode?

[12:26] <Xliff> What's the easiest way to do that with a given module?

[12:26] <Xliff> masak: There should be a way to force compile a module. :/

[12:27] <Xliff> Or at least re-run BEGIN/CHECK phasers.

[12:28] <masak> not really disagreeing with you, though I don't have an actual use case for it myself

[12:28] <Xliff> Loading pre-compile resources?

[12:28] <Xliff> pre-compiled, really

[12:28] <masak> at runtime?

[12:28] <Xliff> No. Compile-time

[12:29] <masak> I'm not following -- but now it kind of feels like you're on the wrong abstraction a little bit, and expecting a behavior that doesn't come naturally when precompiling

[12:29] <Xliff> *sigh*

[12:29] <masak> I'm hesitant to invoke the "X/Y problem" thing, but...

[12:29] <jnthn> Sounds like you want INIT, not EGIN

[12:29] <jnthn> *BEGIN

[12:30] <jnthn> Which runs every load time

[12:30] <Xliff> I do NOT want INIT.

[12:30] <Xliff> If I wanted INIT, I would be using it.

[12:30] <Xliff> See this:

[12:30] <Xliff> our $bytes is export; 

[12:30] <Xliff> BEGIN {

[12:30] <Xliff>         $bytes = '/dev/urandom'.IO.open.read(1024);

[12:30] <Xliff> }

[12:30] <Xliff> That is in a module.

[12:30] *** lichtkind__ left
[12:30] <Xliff> It's a manufactured case, but it can be extended.

[12:31] <Xliff> So $bytes is loaded with chars from /dev/urandom. I want those same bytes to be reused until I tell the module to get a new set.

[12:31] <Xliff> The only way I can do that is to change the actual module, which MAY NOT need changes.

[12:32] <Xliff> It's a PERFECT case for selective pre-compilation.

[12:32] <masak> suggestion: have a script that reads 1024 bytes from /dev/urandom, and creates a .pm6 file from it

[12:32] <masak> then you'd be playing with the rules of precompilation, not against them

[12:32] <jnthn> OK, then you'll probalby need to implement a CompUnitRepo or whatwever that does selective precompilation.

[12:32] <Xliff> masak: That was the original implementation, then I began experimenting with phasers.

[12:32] <jnthn> Or what masak said

[12:33] <masak> Xliff: your original hunch might've been the right one ;)

[12:33] <Xliff> masak: Some rules were made to be bent.

[12:33] <Xliff> :)

[12:33] <masak> I can't stop you from inventing wheels that don't strictly need to be built

[12:33] <Xliff> jnthn: What would reimplementing CompUnitRepo grant me?

[12:33] <masak> in fact, I'm all about that, so do whatever you like ;)

[12:33] <Xliff> LOL

[12:34] *** Ven` left
[12:34] <jnthn> Xliff: I dunno how exactly it's factored today, but I think you'd be able to get control over when a precomp'd version is loaded and when it's regenerated

[12:34] <Xliff> jnthn: OK. That's .... an option.

[12:35] <Xliff> So here's what I came up and was hoping I wouldn't have to do anything about it...

[12:35] <Xliff> Add a counter to the module and just use another script to up the version number. :?

[12:35] <Xliff> :/, even

[12:35] <Xliff> That's the bargain basement solution. I was hoping there was an easier way.

[12:35] <Xliff> Thanks jnthn++, masak++

[12:36] <jnthn> Well, it'd work, but at this point I don't understand why you don't just write the random data to an ordinary file, read from it, and update the file whenever needed. :)

[12:36] <masak> your original way was the easier way

[12:36] <jnthn> But I guess that example is a simplification of what you really have.

[12:36] <Xliff> Right. I do NOT want file access every time I use the module.

[12:36] <jnthn> But...loading bytecode from disk is a file access??

[12:37] <moritz> you could install the module on a RAM disk

[12:37] <jnthn> Or do you mean per `use`?

[12:37] <Xliff> So, is there some taboo against holding data in precompiled bytecode that I am missing?

[12:38] <Xliff> I mean per 'use'

[12:38] <jnthn> But then I'm still confuesd 'cus INIT doesn't run per use, it runs per time the module is loaded into the process.

[12:38] <jnthn> The module isn't reloaded and INIT isn't re-run for each use.

[12:38] <jnthn> A given module is only loaded once, and its INIT run only once.

[12:39] <Xliff> OK. Usecase: I have a static set of resources that are NOT distributed with the module, but are stored at a known location.

[12:39] <Xliff> Actually, scratch that.

[12:39] <Xliff> I would like data to be pre-compiled into the module so I do not have to rely on accessing that data every time I run the program.

[12:39] <Xliff> I am using BEGIN {} to do this and it works exactly the way I want it to.

[12:40] <Xliff> Unless... I need to refresh that data due to the fact that it has gone stale. This is supposed to happen very rarely.

[12:41] <Xliff> So why do I need to burden application data to handle this file access, when storing it into a pre-compiled module does what I want?

[12:41] *** lizmat joined
[12:42] *** p6bannerbot sets mode: +v lizmat

[12:42] <masak> but it doesn't do what you want. that's why you're complaining about it now

[12:42] <Xliff> It does what I want. It works perfectly....until I need to refresh the data.

[12:42] <masak> which is when it doesn't do what you want

[12:42] <Xliff> Yes. :P

[12:43] <masak> anyway, the suggestions are above

[12:43] <moritz> you want a magic DWIM solution

[12:43] <moritz> I suggest implementing one that fits your wishes

[12:43] <Xliff> But, and pardon if this is insensitive, the suggestions above are NOT what I need. I considered those and rejected them due to requirements.

[12:43] <masak> it's not insensitive. but be aware that you are working against the grain here

[12:44] <Xliff> OK, then bargain versioning it is. Thanks.

[12:44] <masak> the "X/Y problem" is when you're trying to use a mechanism Y to solve a problem X, but mechanism Y isn't really such a good fit for it

[12:44] <Geth> ¬¶ doc: 95dd2aabfc | (JJ Merelo)++ | doc/Language/5to6-perlop.pod6

[12:44] <Geth> ¬¶ doc: Fixes a couple of links

[12:44] <Geth> ¬¶ doc: 

[12:44] <Geth> ¬¶ doc: Which will close #2296, and also refers to #561. There might be other links in the same page, will have to revise it.

[12:44] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/95dd2aabfc

[12:44] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlop

[12:45] <Xliff> masak: I understand. However I am surprised that a VM that uses bytecode doesn't have a way to force recompilation of that bytecode.

[12:45] <Xliff> And yes. X/Y.

[12:45] <Xliff> However there are times when X/X is not what you want.

[12:45] <masak> Xliff: maybe I've missed that feature in other VMs. which VMs are you thinking of that have a flag or something for "force recompilation"?

[12:46] <Xliff> Java?

[12:46] <masak> in Java, I compile manually

[12:46] <masak> but yeah, if you're expecting that, then I can understand the disappointment better ;)

[12:46] <Xliff> In perl6, every program is compiled manually. It's the modules I would like a modicum of control over.

[12:47] <masak> anyway. my bargaining with you isn't going to make your situation better, or change your mind. hope you manage to implement a solution that does everything you want.

[12:47] <Xliff> OK. So bargain-basement versioning it is. And I can probably do that faster than re-implementing CompRepoUnit...

[12:48] <Xliff> Yeah. Convert code to a template, have it parse existing code to get previous version, increment it, rewrite template with new version. *sigh*

[12:48] *** saki joined
[12:49] *** p6bannerbot sets mode: +v saki

[13:07] *** kerframil joined
[13:07] *** p6bannerbot sets mode: +v kerframil

[13:07] *** pmurias joined
[13:08] <lizmat> weekly: https://blog.matatu.org/tailgrep

[13:08] <notable6> lizmat, Noted!

[13:08] *** p6bannerbot sets mode: +v pmurias

[13:08] <pmurias> Xliff: write the sha1 of the data file to a separate module containing only it

[13:08] <pmurias> Xliff: use that version of data containing module

[13:09] *** kerframil left
[13:09] *** pmurias left
[13:12] *** pmurias joined
[13:13] *** p6bannerbot sets mode: +v pmurias

[13:17] *** aindilis` left
[13:18] *** aindilis joined
[13:19] *** p6bannerbot sets mode: +v aindilis

[13:22] <timotimo> those are some pretty spinners

[13:24] *** Ven` joined
[13:25] *** p6bannerbot sets mode: +v Ven`

[13:26] *** spycrab0 joined
[13:26] *** p6bannerbot sets mode: +v spycrab0

[13:27] <Xliff> pmurias: Thanks! That's not a bad idea. Still means writing a template, though.

[13:31] <pmurias> Xliff: the generated module would be like 1 line long

[13:32] <AlexDaniel> haha I liked the one with unicode spinners

[13:32] *** saki left
[13:32] <pmurias> Xliff: re the VM not having the ability to force a recompile, there is always rm

[13:33] <pmurias> Xliff: but precompilation should be automatic and modules shouldn't be playing tricks with it

[13:33] <Xliff> pmurias: Wouldn't I have to put the sha1 into a string?

[13:33] <AlexDaniel> ah f it has ¬´ $filename ¬ª trap

[13:35] <lizmat> Xliff: isn't the INIT phaser what you need?

[13:35] <pmurias> Xliff: in the main module you have 'use ModuleWithChecksumOfData'

[13:35] <pmurias> Xliff: in the ModuleWithChecksumofData you have the sha1 in a string (even a comment would work)

[13:35] <pmurias> lizmat: Xliff wants the data to be serialized

[13:36] <Xliff> pmurias: OK, thanks!

[13:36] <lizmat> ah, ok, /me shuts up  :-)

[13:37] *** ccntrq joined
[13:38] *** p6bannerbot sets mode: +v ccntrq

[13:41] *** scimon left
[13:48] <Xliff> lizmat: Why ":$spinners is copy" ?

[13:48] <Xliff> (BTW... love the article. Very educational.)

[13:49] <lizmat> Xliff: not mine, was just the messenger

[13:49] <Xliff> Ooh. OK.

[13:49] <lizmat> or are you referring to my opensource.com article ?

[13:50] <Xliff> Nope. The one with the spinners. :)

[13:51] <lizmat> ok  :-)

[13:53] <breinbaas> lizmat: off course, now I'm curious for the opensource.com article (and can't find it)

[13:54] <breinbaas> would you have a link?

[13:54] <lizmat> https://opensource.com/article/18/8/containers-perl-6

[13:54] <breinbaas> thank you

[13:55] *** scimon joined
[13:55] *** angelds left
[13:56] *** p6bannerbot sets mode: +v scimon

[13:56] *** AlexDani` joined
[13:57] *** p6bannerbot sets mode: +v AlexDani`

[13:59] <rindolf> gvim/vim does a poor job of syntax highlighting p6

[14:00] <moritz> I find it workable

[14:00] *** zakharyas left
[14:01] *** zakharyas joined
[14:01] *** AlexDaniel left
[14:01] <vrurg> rindolf: did you try https://github.com/vim-perl/vim-perl6 ?

[14:01] *** p6bannerbot sets mode: +v zakharyas

[14:02] *** hudo left
[14:03] <rindolf> vrurg: no

[14:03] *** scimon left
[14:03] <buggable> New CPAN upload: App-Mi6-0.1.9.tar.gz by SKAJI http://modules.perl6.org/dist/App::Mi6:cpan:SKAJI

[14:03] <vrurg> It's much better than the bundled support.

[14:03] *** scimon joined
[14:04] <rindolf> vrurg: i use https://github.com/vim-perl/vim-perl

[14:04] *** p6bannerbot sets mode: +v scimon

[14:05] <vrurg> rindolf: It's README says: "For Perl 6 files, please see vim-perl6." ;)

[14:05] <rindolf> vrurg: i have some problems w here docs

[14:05] *** zakharyas left
[14:06] *** AlexDani` is now known as AlexDaniel

[14:06] *** AlexDaniel left
[14:06] *** AlexDani` joined
[14:07] *** p6bannerbot sets mode: +v AlexDani`

[14:07] <rindolf> vrurg: tried it now - no help

[14:09] <vrurg> I don't know for other workarounds then, sorry. Is it some specific form of a here doc? Perhaps worth reporting on github?

[14:19] <rindolf> vrurg: see https://github.com/shlomif/perl6-CI-Gen/blob/master/lib/CI/Gen.pm6

[14:19] <rindolf> vrurg: it is q:to/.../

[14:20] <rindolf> vrurg: strange, now it is better

[14:22] <rindolf> seems like pgup/pgdn confuses it

[14:22] <vrurg> rindolf: Keep in mind that sometimes vim needs to sync the highlight with previous lines of code if you scroll from the bottom to top. Because it's a slow process the syncing is limited with some number of lines. Increasing it might help sometimes but would slow down the render.

[14:22] <vrurg> So, from pgup/pgdn I conclude that this is your case. Just get used to it.

[14:23] <rindolf> vrurg: ah

[14:42] *** curan left
[14:43] *** MilkmanDan left
[14:44] *** MilkmanDan joined
[14:44] *** p6bannerbot sets mode: +v MilkmanDan

[14:49] *** lizmat left
[14:49] *** Sgeo joined
[14:50] *** p6bannerbot sets mode: +v Sgeo

[14:50] *** Sgeo__ left
[14:55] *** Ven` left
[14:59] *** Ven` joined
[14:59] *** p6bannerbot sets mode: +v Ven`

[15:13] *** jorik22 joined
[15:15] *** jorik22 left
[15:16] *** robertle left
[15:17] *** molaf joined
[15:18] *** p6bannerbot sets mode: +v molaf

[15:19] *** fake_space_whale joined
[15:20] *** p6bannerbot sets mode: +v fake_space_whale

[15:23] *** thowe left
[15:24] <scimon> HTTP::Status seems to have drop out of ecosystem and has 10 modules depending on it (if I'm understanding this correctly) I've got a Travis build failing and this seems to be the issue. Anyone else seen this?

[15:28] <Geth> ¬¶ ecosystem/http-status-patch: ef1e966810 | (Simon Proctor)++ (committed using GitHub Web editor) | META.list

[15:28] <Geth> ¬¶ ecosystem/http-status-patch: HTTP::Status META File updated 7 days ago

[15:28] <Geth> ¬¶ ecosystem/http-status-patch: review: https://github.com/perl6/ecosystem/commit/ef1e966810

[15:28] <scimon> Looks like the META.info file was updated to META6.json 

[15:31] <Geth> ¬¶ ecosystem: Scimon++ created pull request #409: HTTP::Status META File updated 7 days ago

[15:31] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/pull/409

[15:31] *** leont left
[15:35] *** lizmat joined
[15:36] *** p6bannerbot sets mode: +v lizmat

[15:38] *** integral left
[15:38] *** integral joined
[15:38] *** adams.freenode.net sets mode: +v integral

[15:38] *** p6bannerbot sets mode: +v integral

[15:40] <Geth> ¬¶ ecosystem: ef1e966810 | (Simon Proctor)++ (committed using GitHub Web editor) | META.list

[15:40] <Geth> ¬¶ ecosystem: HTTP::Status META File updated 7 days ago

[15:40] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/ef1e966810

[15:40] <Geth> ¬¶ ecosystem: 750e4fc717 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | META.list

[15:40] <Geth> ¬¶ ecosystem: Merge pull request #409 from perl6/http-status-patch

[15:40] <Geth> ¬¶ ecosystem: 

[15:40] <Geth> ¬¶ ecosystem: HTTP::Status META File updated 7 days ago

[15:40] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/750e4fc717

[15:41] *** ExtraCrispy left
[15:42] *** domidumont left
[15:46] *** spycrab0 left
[15:49] *** zakharyas joined
[15:50] *** p6bannerbot sets mode: +v zakharyas

[15:56] *** robertle joined
[15:56] *** ExtraCrispy joined
[15:57] *** p6bannerbot sets mode: +v robertle

[15:57] *** p6bannerbot sets mode: +v ExtraCrispy

[15:59] *** snowolf24 joined
[16:00] *** snowolf24 left
[16:08] *** pmurias left
[16:10] *** zakharyas left
[16:21] *** spycrab0 joined
[16:21] *** p6bannerbot sets mode: +v spycrab0

[16:21] *** acerbic21 joined
[16:24] *** acerbic21 left
[16:31] *** noganex joined
[16:32] *** p6bannerbot sets mode: +v noganex

[16:32] *** scimon left
[16:34] *** dakkar left
[16:36] *** Erenzie3 joined
[16:40] *** Erenzie3 left
[16:43] <buggable> New CPAN upload: Trait-Env-0.4.1.tar.gz by SCIMON http://modules.perl6.org/dist/Trait::Env:cpan:SCIMON

[16:59] *** Khisanth left
[17:00] *** Ven` left
[17:02] *** [Sno] left
[17:18] *** lgtaube joined
[17:19] *** p6bannerbot sets mode: +v lgtaube

[17:19] *** Khisanth joined
[17:20] *** p6bannerbot sets mode: +v Khisanth

[17:22] *** zakharyas joined
[17:22] *** p6bannerbot sets mode: +v zakharyas

[17:32] *** itaipu left
[17:37] *** pecastro joined
[17:37] *** p6bannerbot sets mode: +v pecastro

[17:38] *** AlexDani` is now known as AlexDaniel

[17:38] *** iviv is now known as ii

[17:38] *** ii is now known as iviv

[17:40] *** Bossaker joined
[17:40] *** p6bannerbot sets mode: +v Bossaker

[17:40] *** rfold joined
[17:41] *** p6bannerbot sets mode: +v rfold

[17:45] *** Bossaker left
[17:48] *** zakharyas left
[17:58] *** [Sno] joined
[17:59] *** p6bannerbot sets mode: +v [Sno]

[18:12] *** [particle] left
[18:12] *** [particle]1 joined
[18:13] *** p6bannerbot sets mode: +v [particle]1

[18:16] *** |oLa| joined
[18:16] *** p6bannerbot sets mode: +v |oLa|

[18:30] *** sauvin left
[18:57] *** ccc joined
[18:57] *** p6bannerbot sets mode: +v ccc

[18:58] <ccc> What is the perl6 equivalent to perldoc?

[18:58] <moritz> https://docs.perl6.org/

[18:59] <ccc> Yes perl has online docs too but I'm talking about something I can invoke from the command line

[19:00] <ccc> e.g. perldoc -f split

[19:00] <moritz> there is a command line tool p6doc, but it's very bare bones

[19:01] <ccc> So if I type p6doc Module, it will give me the information for that installed Module?

[19:03] <ccc> Ok, I'm playing with it now

[19:03] <buggable> New CPAN upload: Trait-Env-0.5.0.tar.gz by SCIMON http://modules.perl6.org/dist/Trait::Env:cpan:SCIMON

[19:08] *** pmurias joined
[19:09] *** p6bannerbot sets mode: +v pmurias

[19:09] <pmurias> m: say 0.expmod(-200, 1)

[19:09] <camelia> rakudo-moar b8f37bfce: OUTPUT: ¬´0‚ê§¬ª

[19:10] <pmurias> ^^ is this a BUG?

[19:13] <moritz> m: say expmod(0, -200, 1)

[19:13] <camelia> rakudo-moar b8f37bfce: OUTPUT: ¬´0‚ê§¬ª

[19:13] <moritz> you mean because 0**$negative_number shouldn't be defined?

[19:14] <moritz> m: say 0**-200

[19:14] <camelia> rakudo-moar b8f37bfce: OUTPUT: ¬´Attempt to divide 1 by zero using div‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:14] <pmurias> moritz: diving by zero isn't supposed to work

[19:14] <pmurias> * dividing

[19:14] <masak> that's not _automatically_ true under mod, though

[19:14] <masak> need to think about it for a while

[19:15] <masak> well -- seems straightforward that 0 doesn't have a multiplicative inverse, even under mod

[19:15] <masak> but I did need to think about it ;)

[19:16] <masak> so, yes, I vote "bug"

[19:17] <pmurias> masak: say expmod(2, -2, 1) could be better documented

[19:17] <pmurias> m: say expmod(2, -2, 1)

[19:17] <camelia> rakudo-moar b8f37bfce: OUTPUT: ¬´0‚ê§¬ª

[19:19] <moritz> my suspicion is that rakudo simply uses libtommath's expmod implementation, and that library is focused on integers, and probably doesn't do anything sensible with negative exponents

[19:21] <pmurias> the rounding down to integers sort of makes sense

[19:21] <pmurias> but it might be sensible to catch the attempt to divide by zero

[19:25] <rindolf> hi all! what is the most idiomatic way to write     $ret = {|%h<_>, |%h{%h.keys.grep: -> $x {$x ne '_'}}:kv, |$ret};

[19:25] <moritz> m: say expmod(2, -2, 5)

[19:25] <camelia> rakudo-moar b8f37bfce: OUTPUT: ¬´4‚ê§¬ª

[19:25] <moritz> m: say expmod(2, -2, 3)

[19:25] <camelia> rakudo-moar b8f37bfce: OUTPUT: ¬´1‚ê§¬ª

[19:25] <moritz> I think it just drops the sign from the exponent?

[19:25] <moritz> the 0 seems to be from $any_integer % 1 == 0

[19:27] <rindolf> moritz: any idea?

[19:28] <rindolf> currently it gives a runtime error

[19:28] <moritz> rindolf: what do you want to achieve?

[19:29] <rindolf> moritz: 1. i want to merge hashes

[19:29] <rindolf> moritz: 2. i want a hash slice minus one key

[19:30] <moritz> m: my %h = a => 1, b => 2, c => 3; say %h.grep(none(*.key eq 'b'))

[19:30] <camelia> rakudo-moar b8f37bfce: OUTPUT: ¬´(c => 3 a => 1)‚ê§¬ª

[19:30] <moritz> there's your hash slice with one key removed

[19:30] <moritz> and merging two hashes: what do you want to happen on collissions?

[19:31] <moritz> m: my %h = a => 1, b => 2; my %c = b => 3, c => 4; %h ,= %c; say %h

[19:31] <camelia> rakudo-moar 3dd09be33: OUTPUT: ¬´{a => 1, b => 3, c => 4}‚ê§¬ª

[19:31] <moritz> overwrite

[19:31] <moritz> m: my %h = a => 1, b => 2; my %c = b => 3, c => 4; %h.push(%c); say %h

[19:31] <camelia> rakudo-moar 3dd09be33: OUTPUT: ¬´{a => 1, b => [2 3], c => 4}‚ê§¬ª

[19:31] *** pmurias left
[19:31] <moritz> contract into an array

[19:32] *** pmurias joined
[19:33] *** p6bannerbot sets mode: +v pmurias

[19:34] <rindolf> moritz: i want to prepend keys 

[19:34] <rindolf> not append them

[19:35] <moritz> then reverse the order

[19:35] <rindolf> moritz: ok

[19:38] <rindolf> moritz: is there a non destructive, fp way?

[19:38] <rindolf> like %h = (%x, %h) in p5?

[19:38] <moritz> but that doesn't prepend, that overwrites

[19:39] <moritz> just in a different order

[19:39] <timotimo> you can just my %target; %target.push(%a); %target.push(%b)

[19:39] <rindolf> timotimo: ah

[19:39] <moritz> but yes, %h = (%x, %h) works

[19:39] <rindolf> moritz: ok

[19:39] <moritz> timotimo: or jsut my %target = %a; %target.push(%b)

[19:40] <timotimo> m: my %a = :1a, :2b; my %b = :3b, :4c; my %result = do given (my %) { .push(%a); .push(%b); $_ }; say %result.perl

[19:40] <camelia> rakudo-moar 3dd09be33: OUTPUT: ¬´{:a(1), :b($[2, 3]), :c(4)}‚ê§¬ª

[19:40] <timotimo> a little statement-form of that :)

[19:40] <timotimo> indeed, moritz 

[19:41] <rindolf>     $ret = (|%h<_>, |%h.grep(none(*.key ne '_')), |$ret);

[19:41] <rindolf> should i get rid of the pipes?

[19:42] <rindolf> $ret is a hash ref

[19:42] <pmurias> moritz: the 0 seems to be from 0 ** any-positive-integer == 0

[19:42] <pmurias> m: say expmod(0, 0, 100)

[19:42] <camelia> rakudo-moar 3dd09be33: OUTPUT: ¬´1‚ê§¬ª

[19:42] <pmurias> m: say expmod(0, 3, 100)

[19:42] <camelia> rakudo-moar 3dd09be33: OUTPUT: ¬´0‚ê§¬ª

[19:45] <rindolf> https://www.nntp.perl.org/group/perl.perl6.users/2015/11/msg2325.html

[19:46] <rindolf> no answer here

[19:46] <rindolf> timotimo: any idea?

[19:48] <moritz> work with hashes, not with refs :D

[19:51] <Geth> ¬¶ doc: 5bef9ff916 | (JJ Merelo)++ | doc/Type/Exception.pod6

[19:51] <Geth> ¬¶ doc: Adds information on how to change `die` message

[19:51] <Geth> ¬¶ doc: 

[19:51] <Geth> ¬¶ doc: Which closes #2293. Adds examples and some reflow too.

[19:51] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/5bef9ff916

[19:51] <synopsebot> Link: https://doc.perl6.org/type/Exception

[19:52] <rindolf> sigh

[19:52] <rindolf> fine, i'll do it w push

[19:53] <rindolf> why must it be so hard?

[19:55] <moritz> is push so hard?

[19:57] *** aindilis left
[20:00] <rindolf> moritz: https://github.com/shlomif/perl6-CI-Gen/commit/270cbea9f6686a97684342f5f5a9b4f435d73b42 - thanks

[20:01] <moritz> rindolf: none and ne is double negation

[20:01] <moritz> I used none(... eq ...)

[20:02] <moritz> you can also *.key ne '_' without the junction, which would probably me more idiomatic

[20:02] <rindolf> moritz: ah

[20:03] <moritz> m: my %h = a => 1, b => 2, c => 3; say %h.grep(*.key ne 'b')

[20:03] <camelia> rakudo-moar 3dd09be33: OUTPUT: ¬´(c => 3 a => 1)‚ê§¬ª

[20:04] *** Ven` joined
[20:05] *** p6bannerbot sets mode: +v Ven`

[20:09] *** Ven` left
[20:12] *** bobby-jim joined
[20:12] *** p6bannerbot sets mode: +v bobby-jim

[20:16] <bobby-jim> I managed to build Rakudo on my Pi Zero... took hours... but worth it!

[20:19] <timotimo> whew, yeah, i can imagine that'll take a while

[20:19] <bobby-jim> nohup and went home, let it run all night

[20:20] <bobby-jim> had to install swapspace daemon.

[20:20] <timotimo> i wonder what "perf record" will say gets the most ticks, probably GC marking if i'd have to guess

[20:21] <bobby-jim> Next time I'll want to run performance stats

[20:21] <timotimo> right

[20:21] <timotimo> wouldn't surprise me if the "system" time would outgrow the "user" time by more than 10x

[20:21] <timotimo> how much ram does that device have?

[20:22] <timotimo> also, i hope the swapping didn't take too much of a toll on your swap device, like, if it was an sd card

[20:22] <bobby-jim> "Tiny": 500mb.   

[20:22] <bobby-jim> Yeah, an SD card is the drive.

[20:23] <timotimo> oof, yeah, that's not much

[20:23] <timotimo> i imagine i can get close to an approximation of the experience by setting up a VM with that much ram

[20:23] <timotimo> i wonder how much zram would be worth for this workload

[20:23] <bobby-jim> Made me wonder if build performance could be "improved", but meh.

[20:24] <timotimo> there's opportunities for sure

[20:24] <timotimo> but it's hairy

[20:24] <timotimo> and without measuring first, i wouldn't dare start on anything more than single-line changes

[20:25] <bobby-jim> I think zram might help a lot.  While I was looking at it, it seemed as though it didn't use more than a gig of memory, but I'm not sure.

[20:25] <timotimo> is that a 32bit system?

[20:27] <timotimo> 80.79user 0.88system 1:19.94elapsed 102%CPU (0avgtext+0avgdata 1419940maxresident)k

[20:28] <timotimo> this is with jit on, which will consume a bit more ram

[20:28] <timotimo> er, that's the core setting compilation

[20:29] <bobby-jim> Yeah, I think 32bit.  Arm11 apparently.

[20:30] <timotimo> OK, that means smaller pointers on top of not having a JIT compiler

[20:30] <timotimo> 84.57user 0.63system 1:24.49elapsed 100%CPU (0avgtext+0avgdata 1388648maxresident)k

[20:31] <timotimo> this is without the jit compiler on my system

[20:38] *** Sgeo left
[20:42] *** HaraldJoerg left
[20:45] *** bobby-jim left
[20:48] *** leont joined
[20:49] *** p6bannerbot sets mode: +v leont

[20:51] <leont> p6: multi foo { }; sub bar(Sub $sub) { say $sub.multi }; bar(&foo);

[20:51] <camelia> rakudo-moar 3dd09be33: OUTPUT: ¬´False‚ê§¬ª

[20:51] <leont> That's a bug, right?

[20:52] *** jmerelo_ joined
[20:52] *** p6bannerbot sets mode: +v jmerelo_

[20:52] <jmerelo_> releasable6: status

[20:52] <releasable6> jmerelo_, Next release in ‚âà10 days and ‚âà22 hours. 0 blockers. 0 out of 32 commits logged

[20:52] <releasable6> jmerelo_, Details: https://gist.github.com/ce022ce36a2359ebb807c60f4c38c4dd

[20:52] <jmerelo_> So, 2018.08 is out?

[20:53] <pmurias> wouldn't cross compiling Rakudo be a much better strategy than building it on Pi?

[20:53] <buggable> New CPAN upload: I18n-Simple-0.1.2.tar.gz by TYIL http://modules.perl6.org/dist/I18n::Simple:cpan:TYIL

[20:55] <timotimo> one day i want a Magnum PI. it'd come with a helicopter i reckon

[20:55] *** Sgeo joined
[20:56] *** p6bannerbot sets mode: +v Sgeo

[20:56] *** lizmat left
[20:57] *** leont left
[21:05] *** beeman left
[21:07] <jmerelo_> timotimo: and an attitude.

[21:11] *** beeman joined
[21:11] *** p6bannerbot sets mode: +v beeman

[21:11] *** jmerelo_ left
[21:11] *** pmurias left
[21:13] *** pmurias joined
[21:13] <japhb> timotimo: I'm hoping the case looks like this: https://en.wikipedia.org/wiki/Ferrari_308_GTB/GTS#/media/File:1984_Ferrari_308_GTB_qv.jpg

[21:13] *** p6bannerbot sets mode: +v pmurias

[21:18] *** pmurias left
[21:18] *** epony left
[21:20] *** pmurias joined
[21:20] *** aindilis joined
[21:21] *** p6bannerbot sets mode: +v pmurias

[21:21] *** p6bannerbot sets mode: +v aindilis

[21:29] *** robertle left
[21:32] *** mcmillhj left
[21:34] <timotimo> tbh i didn't watch much Magnum PI outside the few times i caught it when i was rather a lot younger, so i remember barely anything apart from the hawaii shirts, the mustache, and the helicopter

[21:35] *** Sgeo left
[21:43] *** mcmillhj joined
[21:44] *** p6bannerbot sets mode: +v mcmillhj

[21:44] *** MasterDuke joined
[21:44] *** p6bannerbot sets mode: +v MasterDuke

[21:46] *** MasterDuke left
[21:46] *** MasterDuke joined
[21:46] *** herbert.freenode.net sets mode: +v MasterDuke

[21:46] *** p6bannerbot sets mode: +v MasterDuke

[21:47] *** mcmillhj left
[21:54] *** rindolf left
[21:58] *** epony joined
[21:58] *** p6bannerbot sets mode: +v epony

[22:04] *** sftp left
[22:06] *** sftp joined
[22:06] *** p6bannerbot sets mode: +v sftp

[22:06] *** Kaiepi joined
[22:07] *** rfold left
[22:07] *** p6bannerbot sets mode: +v Kaiepi

[22:09] *** rindolf joined
[22:09] *** mcmillhj joined
[22:10] *** p6bannerbot sets mode: +v rindolf

[22:10] *** p6bannerbot sets mode: +v mcmillhj

[22:13] *** pmurias left
[22:14] *** mcmillhj left
[22:16] *** pmurias joined
[22:16] *** Sgeo joined
[22:17] *** p6bannerbot sets mode: +v pmurias

[22:17] *** p6bannerbot sets mode: +v Sgeo

[22:20] *** Sgeo_ joined
[22:20] *** p6bannerbot sets mode: +v Sgeo_

[22:20] *** Ven` joined
[22:21] *** p6bannerbot sets mode: +v Ven`

[22:22] *** pmurias left
[22:22] *** Sgeo left
[22:25] *** Ven` left
[22:29] *** mcmillhj joined
[22:30] *** p6bannerbot sets mode: +v mcmillhj

[22:33] *** mcmillhj left
[22:46] *** mcmillhj joined
[22:46] *** p6bannerbot sets mode: +v mcmillhj

[22:47] *** aindilis` joined
[22:47] *** aindilis left
[22:48] *** p6bannerbot sets mode: +v aindilis`

[22:50] *** mcmillhj left
[22:52] <TimToady> .tell leont no, not a bug, because &foo actually represents the implicit proto, not the multi; try $sub.candidates[0].multi instead

[22:52] <yoleaux> TimToady: I'll pass your message to leont.

[23:03] *** Herby_ joined
[23:04] *** p6bannerbot sets mode: +v Herby_

[23:04] <Herby_> o/

[23:05] <timotimo> o/

[23:05] <timotimo> Herby_: thank you for your positive comments btw :)

[23:06] <Herby_> it was a great article :)

[23:06] *** rindolf left
[23:07] <timotimo> hopefully i have a few more of those in me

[23:17] <Herby_> timotimo: how familiar are you with NativeCall?

[23:18] <Herby_> would be interesting to see how a solution in NativeCall performs compared to your others

[23:19] <timotimo> hard to say, i can already think of like three different ways to implement it

[23:20] <timotimo> if you build a function that stores start and end offsets in a big array, for example, that wouldn't have a whole lot of transfer overhead i think

[23:20] <timotimo> then the majority of time would be spent going through the file and reading out the chunks of string inside

[23:21] <timotimo> an array of c strings could be interesting, but that'll do triple copying in total, i think

[23:23] *** leont joined
[23:23] <Herby_> hmm

[23:23] <timotimo> and having one callback every time you "found" a chunk sounds extra bad :)

[23:24] <Herby_> do you think the results would likely fall somewhere between the fastest p6 implementation, and the NQP implementation?

[23:25] <Herby_> my naive reasoning being since using nqp is not ideal, maybe NativeCall could make up for some of the performance 

[23:26] <timotimo> really don't know, there's always the cost of going back and forth between both "worlds"

[23:27] <Herby_> gotcha. do you think a math heavy problem would suffer the same? thinking of that other recent benchmark post: http://brrt-to-the-future.blogspot.com/2018/08/a-curious-benchmark.html

[23:30] <timotimo> well, you can put the whole calculation into a C function

[23:30] <timotimo> call it with an int, receive the float from it, that's cheap

[23:31] <Herby_> my C knowledge is pretty much zero.  So for a problem like that, instead of dipping in to nqp, it would be better to utilize NativeCall?

[23:32] *** mcmillhj joined
[23:33] *** p6bannerbot sets mode: +v mcmillhj

[23:33] <timotimo> not necessarily, since you have to get that C through a C compiler first

[23:34] <timotimo> and i don't think you can load the result directly into memory, so you'll have to go through a file on the filesystem

[23:34] <timotimo> that makes it unwieldy

[23:37] *** mcmillhj left
[23:37] <Herby_> k. thanks for the explanations. and i look forward to your next article :)

[23:39] <timotimo> no problem :)

[23:39] <timotimo> fwiw, there's no reason we can't build a C compiler in nqp or perl6 and NativeCall into what it compiles directly

[23:39] <timotimo> except it's a lot of work to build a full C compiler that gives good performance

[23:41] <MasterDuke> what, it's not as simple as 'use LLVM;'?

[23:42] <timotimo> i have no clue how libllvm or whatever is used to be honest

[23:43] <MasterDuke> heh, neither do i

[23:46] *** leont left
[23:46] <Herby_> MasterDuke: o/

[23:46] *** mcmillhj joined
[23:47] *** pecastro left
[23:47] *** p6bannerbot sets mode: +v mcmillhj

[23:51] *** mcmillhj left
[23:51] *** aindilis` left
[23:52] *** daxim left
[23:55] <MasterDuke> \

[23:57] *** mcmillhj joined
[23:57] *** drot7 joined
[23:58] *** p6bannerbot sets mode: +v mcmillhj

[23:58] *** drot7 left
