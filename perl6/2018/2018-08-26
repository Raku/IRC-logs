[00:03] *** pharv left
[00:03] *** pharv joined
[00:04] *** p6bannerbot sets mode: +v pharv

[00:06] *** Ven` joined
[00:07] *** p6bannerbot sets mode: +v Ven`

[00:10] *** pharv left
[00:11] *** Ven` left
[00:12] *** pharv joined
[00:12] *** p6bannerbot sets mode: +v pharv

[00:17] *** sotona joined
[00:18] *** p6bannerbot sets mode: +v sotona

[00:22] *** sotona left
[00:22] *** pharv left
[00:42] <buggable> New CPAN upload: Git-Log-0.2.0.tar.gz by SAMCV http://modules.perl6.org/dist/Git::Log:cpan:SAMCV

[00:42] *** Ven` joined
[00:43] *** p6bannerbot sets mode: +v Ven`

[00:47] *** Ven` left
[00:49] *** joy_ left
[01:19] *** Ven` joined
[01:19] *** p6bannerbot sets mode: +v Ven`

[01:23] *** lichtkind left
[01:24] *** Ven` left
[01:34] *** sotona joined
[01:35] *** p6bannerbot sets mode: +v sotona

[01:35] *** lichtkind joined
[01:36] *** p6bannerbot sets mode: +v lichtkind

[01:48] *** sotona left
[01:55] *** Ven` joined
[01:56] *** p6bannerbot sets mode: +v Ven`

[02:00] *** Ven` left
[02:01] *** MasterDuke joined
[02:01] *** p6bannerbot sets mode: +v MasterDuke

[02:03] *** MasterDuke left
[02:03] *** MasterDuke joined
[02:03] *** herbert.freenode.net sets mode: +v MasterDuke

[02:03] *** p6bannerbot sets mode: +v MasterDuke

[02:07] *** ifim left
[02:08] *** sotona joined
[02:09] *** p6bannerbot sets mode: +v sotona

[02:13] *** sotona left
[02:31] *** Ven` joined
[02:32] *** p6bannerbot sets mode: +v Ven`

[02:33] *** joy_ joined
[02:34] *** p6bannerbot sets mode: +v joy_

[02:36] *** Ven` left
[02:44] *** MasterDuke left
[02:45] *** joy_ left
[03:08] *** Ven` joined
[03:08] *** p6bannerbot sets mode: +v Ven`

[03:11] *** inbioz joined
[03:11] *** p6bannerbot sets mode: +v inbioz

[03:13] *** Ven` left
[03:16] *** inbioz left
[03:23] *** joy_ joined
[03:24] *** p6bannerbot sets mode: +v joy_

[03:34] *** kurahaupo_ joined
[03:35] *** p6bannerbot sets mode: +v kurahaupo_

[03:44] *** Ven` joined
[03:45] *** p6bannerbot sets mode: +v Ven`

[03:49] *** Ven` left
[04:25] *** kaare__ joined
[04:25] *** p6bannerbot sets mode: +v kaare__

[04:27] <Geth> ¦ doc: 8cfb6db806 | (JJ Merelo)++ | doc/Type/Submethod.pod6

[04:27] <Geth> ¦ doc: Eliminates TODO refs #2277

[04:27] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8cfb6db806

[04:27] <synopsebot> Link: https://doc.perl6.org/type/Submethod

[04:29] *** dominix joined
[04:29] *** p6bannerbot sets mode: +v dominix

[04:41] *** x[LGWs4x4i]uG2N0 left
[04:45] *** x[LGWs4x4i]uG2N0 joined
[04:46] *** saki joined
[04:46] *** saki left
[04:46] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[04:50] *** kaare__ left
[04:50] *** kaare_ joined
[04:51] *** p6bannerbot sets mode: +v kaare_

[04:53] *** vrurg left
[04:54] *** saki joined
[04:54] *** saki left
[05:06] *** vrurg joined
[05:06] *** fake_space_whale left
[05:06] *** p6bannerbot sets mode: +v vrurg

[05:08] *** kerframil left
[05:11] *** AlexDaniel left
[05:11] *** AlexDaniel joined
[05:11] *** livingstone.freenode.net sets mode: +v AlexDaniel

[05:11] *** p6bannerbot sets mode: +v AlexDaniel

[05:38] *** leastbit joined
[05:38] *** leastbit left
[05:38] *** leastbit joined
[05:38] *** leastbit left
[05:39] *** leastbit joined
[05:39] *** leastbit left
[05:39] *** leastbit joined
[05:39] *** leastbit left
[05:41] *** vrurg left
[05:44] *** psychoslave joined
[05:45] *** p6bannerbot sets mode: +v psychoslave

[05:47] *** spycrab0 left
[05:54] <xinming> How do we check value against type?

[05:55] <geekosaur> m: say so 5 ~~ Int

[05:55] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «True␤»

[05:56] <xinming> Ok~~~

[05:56] <xinming> Didn't thought it's that easy.

[05:56] <geekosaur> the thing on the right controls what it actually checks; if it's a type, it checks compatibility

[05:56] <geekosaur> (which includes subclasses)

[06:12] *** araraloren_ joined
[06:13] *** p6bannerbot sets mode: +v araraloren_

[06:16] *** araraloren left
[07:02] *** Guest32399 joined
[07:03] *** psychoslave left
[07:03] *** psychoslave joined
[07:04] *** p6bannerbot sets mode: +v psychoslave

[07:06] *** Guest32399 left
[07:06] *** kurahaupo1 joined
[07:07] *** p6bannerbot sets mode: +v kurahaupo1

[07:07] *** psychoslave left
[07:08] *** psychoslave joined
[07:08] *** p6bannerbot sets mode: +v psychoslave

[07:20] *** psychoslave left
[07:26] *** pmurias joined
[07:27] *** p6bannerbot sets mode: +v pmurias

[07:50] *** x[LGWs4x4i]uG2N0 left
[07:52] *** saki joined
[07:52] *** saki left
[07:54] *** kurahaupo1 is now known as kurahaupo`

[07:54] *** x[LGWs4x4i]uG2N0 joined
[07:55] *** sotona joined
[07:55] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[07:56] *** p6bannerbot sets mode: +v sotona

[07:59] *** sotona left
[08:07] *** psychoslave joined
[08:08] *** p6bannerbot sets mode: +v psychoslave

[08:11] *** saki joined
[08:11] *** saki left
[08:25] *** saki joined
[08:25] *** saki left
[08:40] *** saki joined
[08:41] *** p6bannerbot sets mode: +v saki

[08:50] *** dominix left
[08:50] *** rindolf joined
[08:50] *** p6bannerbot sets mode: +v rindolf

[08:55] *** lizmat joined
[08:56] *** p6bannerbot sets mode: +v lizmat

[09:01] <pmurias> would building a regular static content (html) serving framework on Cro be a good idea?

[09:02] <pmurias> or are old school web frameworks considered passe

[09:07] <pmurias> ;)

[09:17] *** lichtkind left
[09:25] <lizmat> pmurias: static content html is nicely handled By front-ends like Nginx , no ?

[09:26] <pmurias> lizmat: I used the wrong words, by static content I meant dynamically generated html as opposed to sending data that is used by a client side js app

[09:27] <lizmat> what's the difference between dynamically generated HTML and data sent to a client side js app other then the content-type ?

[09:28] <pmurias> having some nice html templating integrated in?

[09:29] <pmurias> maybe less then more I think about it

[09:29] *** lichtkind joined
[09:30] *** p6bannerbot sets mode: +v lichtkind

[09:36] *** sena_kun joined
[09:37] *** p6bannerbot sets mode: +v sena_kun

[09:38] *** psychoslave left
[09:42] *** psychoslave joined
[09:43] *** p6bannerbot sets mode: +v psychoslave

[09:45] *** stmuk_ joined
[09:46] *** p6bannerbot sets mode: +v stmuk_

[09:46] *** lizmat left
[09:47] *** stmuk left
[09:50] <CIAvash[m]> pmurias: If I understood you correctly, jnthn has started working on it https://github.com/jnthn/cro-webapp

[09:52] *** kaare_ left
[09:54] <lichtkind> can anyone tell me why zef still doesnt updated to latest version of my module since over month?

[09:58] <sena_kun> lichtkind, can you please provide some details? A link to your module repo, is it hosted on cpan or github-based ecosystem?

[10:00] <lichtkind> sena_kun, Math::Matrix is still github only and since a Month there is version 0.25 and zef still gives me 0.20

[10:00] <lichtkind> sena_kun, but it was my suspition too that it is because im not on cpan

[10:01] <lichtkind> https://github.com/pierre-vigier/Perl6-Math-Matrix

[10:01] <sena_kun> well, it shouldn't depend on cpan, I think. I'll look now, though cannot promise anything, unfortunately.

[10:01] <sena_kun> thanks

[10:02] <sena_kun> lichtkind, https://github.com/pierre-vigier/Perl6-Math-Matrix/blob/master/META6.json#L24 <- I see your META6.json has 0.2.0 as version, not 0.25.

[10:03] *** aborazmeh joined
[10:03] *** aborazmeh left
[10:03] *** aborazmeh joined
[10:03] *** p6bannerbot sets mode: +v aborazmeh

[10:03] <sena_kun> zef looks on META6.json when calculating meta data, so you should update it there. And then wait maybe just a bit(not sure how much though, but not a month, maybe an hour or something) and it'll be fine. :)

[10:03] *** p6bannerbot sets mode: +v aborazmeh

[10:05] *** Khisanth left
[10:18] *** Khisanth joined
[10:18] *** p6bannerbot sets mode: +v Khisanth

[10:24] *** spycrab0 joined
[10:24] *** p6bannerbot sets mode: +v spycrab0

[10:24] <lichtkind> sena_kun, allright so its my fault i udated it pud i guess due some strange commit from my other computer i set it back somehow, Thanks

[10:25] *** saki left
[10:26] <sena_kun> lichtkind, no problem, have a nice day. :)

[10:27] <lichtkind> thank you sena_kun

[10:37] *** gaurav_ joined
[10:37] *** p6bannerbot sets mode: +v gaurav_

[10:37] <gaurav_> hey all

[10:39] <araraloren_> lichtkind you maye try `zef update` first

[10:39] <araraloren_> gaurav_ o/

[10:39] <lichtkind> araraloren_,  I did

[10:39] <lichtkind> but its resolved now 

[10:40] <araraloren_> okay, cool

[10:40] <lichtkind> sena_kun++ found the issue 

[10:43] *** tejr left
[10:44] *** gaurav_ left
[10:50] *** gaurav_ joined
[10:50] *** p6bannerbot sets mode: +v gaurav_

[10:58] <gaurav_> p6: sub ($a,$b) { dd @_ } (2,3);

[10:58] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Placeholder variable '@_' cannot override existing signature␤at <tmp>:1␤------> 3sub7⏏5 ($a,$b) { dd @_ } (2,3);␤»

[10:58] <gaurav_> p6: sub ($a,$b) { dd $a,$b } (2,3);

[10:58] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3sub ($a,$b) { dd $a,$b }7⏏5 (2,3);␤    expecting any of:␤        infix␤        infix stopper␤        statemen…»

[10:58] <gaurav_> p6: sub ($a,$b) { dd $a,$b; } (2,3);

[10:58] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3sub ($a,$b) { dd $a,$b; }7⏏5 (2,3);␤    expecting any of:␤        infix␤        infix stopper␤        stateme…»

[10:59] <gaurav_> p6: say sub ($a,$b) { dd $a,$b; } (2,3);

[10:59] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3say sub ($a,$b) { dd $a,$b; }7⏏5 (2,3);␤    expecting any of:␤        infix␤        infix stopper␤        pos…»

[11:01] *** psychoslave left
[11:02] <sena_kun> m: -> $a, $b { say ($a, $b); }(2,3)

[11:02] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «(2 3)␤»

[11:02] <sena_kun> ?

[11:03] <sena_kun> m: -> $a, $b { dd $a, $b }(2,3);

[11:03] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «2␤3␤»

[11:06] <gaurav_> trying to see how the anon sub works in p6

[11:07] <gaurav_> so I see you wrote '->' instead of 'say sub.

[11:07] <gaurav_> so I see you wrote '->' instead of 'say sub'.

[11:07] <sena_kun> well, it's a pointy block.

[11:08] <sena_kun> m: sub ($a,$b) { say $a + $b }(2,3);

[11:08] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «5␤»

[11:08] <sena_kun> gaurav_, anonymous subroutine will be something like ^

[11:09] <sena_kun> see last paragraphs of https://docs.perl6.org/language/functions#Subroutines

[11:09] <gaurav_> checking..

[11:09] <sena_kun> m: { say $^a + $^b }(2,3);

[11:09] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «5␤»

[11:10] <sena_kun> :)

[11:12] <buggable> New CPAN upload: Config-2.0.0.tar.gz by TYIL http://modules.perl6.org/dist/Config:cpan:TYIL

[11:12] <buggable> New CPAN upload: Config-2.0.1.tar.gz by TYIL http://modules.perl6.org/dist/Config:cpan:TYIL

[11:14] <gaurav_> p6 seems to be a little sensitive to spaces. example:

[11:14] <gaurav_> sub ($x) - OK

[11:14] <gaurav_> but 

[11:14] <gaurav_> sub($x) - NOK

[11:14] <sena_kun> well, it is almost not sensitive, except for a couple of tiny bits.

[11:15] <gaurav_> okay. just trying to get the hang of it. 

[11:15] <gaurav_> I have used perl5 extensively at work for many things.

[11:15] *** imcsk8 left
[11:15] <sena_kun> a space between `sub` and argument list is one of the exceptions, as it introduces ambiguity.

[11:15] <sena_kun> however, if you "I Know What I Am Doing", you can use Slang::Tuxic module/slang to get the ability to add space there. :)

[11:15] <gaurav_> Now I would like to see whether if there is a possibility of using p6 :)

[11:16] <gaurav_> wow @Slang::Tuxic, that is a cool option. Thanks sena_kunj

[11:16] <gaurav_> *sena_kun

[11:17] <gaurav_> Is perl6 going to be standard linux distribution anytime soon? Where can I read about this topic?

[11:17] <sena_kun> gaurav_, do you mean packages for various distributions to install it using package manager?

[11:18] *** leastbit joined
[11:18] *** leastbit left
[11:18] *** leastbit joined
[11:18] *** leastbit left
[11:18] *** leastbit joined
[11:18] *** leastbit left
[11:18] <gaurav_> you can say that sena_kun

[11:19] <gaurav_> I know that one could intall rakudo by downloading.

[11:19] *** leastbit joined
[11:19] <sena_kun> I am sure there are packages for some popular ones(even for arch/gentoo/void etc). What distro do you use?

[11:19] *** p6bannerbot sets mode: +v leastbit

[11:19] <gaurav_> but are there any plans to include perl6 with the standard linux distribution itself?

[11:19] <gaurav_> I like using RHEL/CentOS

[11:20] *** p6bannerbot sets mode: +v leastbit

[11:20] <gaurav_> currently using RHEL/CentOS 7.5

[11:20] *** sotona joined
[11:21] <sena_kun> gaurav_, see https://nxadm.github.io/rakudo-pkg/#os-repositories see "Centos and Fedora" sub-paragraph.

[11:21] *** p6bannerbot sets mode: +v sotona

[11:21] <gaurav_> thanks. checking..

[11:21] *** leastbit left
[11:22] *** imcsk8 joined
[11:23] *** p6bannerbot sets mode: +v imcsk8

[11:24] <gaurav_> If I remember, 1-2 years ago one had to download rakudo and compile it, instead of a direct package.

[11:24] <sena_kun> about standard linux distribution itself - well, right now I am doubting that. It is very tricky process and there must be serious reasons to do so. Linux community is very big, there are tons of various organizations and corporations behind it. As Perl 6 first release was not so long ago... Well. But you can always install it fine, there are repos and stuff. For tricky cases compiling is always an option.

[11:25] <sena_kun> things are better with time. :)

[11:25] <gaurav_> Yes, I can see that. It is absolutely great.

[11:25] *** sotona left
[11:25] <sena_kun> \o/

[11:27] <gaurav_> Working at a bank, where all development is in Java, people just hate perl5 (dunno why!). Probably because they get scared of the perl5 expressive syntax.

[11:27] <gaurav_> I have to constantly hear stuff like, oh! perl5 is a dead language and blah blah.. 

[11:27] *** aborazmeh left
[11:28] <robertle> I guess staffing for java positions is easier than for most other languages

[11:28] <gaurav_> Java people can't look past Classes and Objects and when I read about Java, I now know why. Because Java only allows Classes and Objects - their brains have never seen functional stuff.

[11:30] <gaurav_> And the best part.. "oh.. you don't use an IDE? IDE is a must...!", I always vim

[11:30] <sena_kun> well, people are not always like to learn new things, even if those things are good. so it's a matter of taste and bravery to help people learn by promotion, helping and creating amazing things.

[11:30] <sena_kun> .o0 ( and we have a Perl 6 IDE, in beta though :D )

[11:31] <robertle> still, you can write some fine stuff in java, and the relatively simple language makes is readable for people less proficient

[11:31] <gaurav_> Yes, I read about that. It is more than welcome! 

[11:32] <gaurav_> Yes, Java is OK or probably good if it suits the development goals of the organization/company. But when their developers start the negativity about other languages, it just doesn't make sense.

[11:34] <pmurias> IDE help a lot when writing java stuff tho

[11:35] <gaurav_> @pmurias, I am sure that is the case. this may be the reason that no one is without an IDE ;)

[11:38] <AlexDaniel> gaurav_: re “standard linux distribution” https://github.com/perl6/user-experience/issues/29#issuecomment-413646915

[11:38] <AlexDaniel> gaurav_: i.e. most distros already have rakudo

[11:39] <robertle> I guess the weird enforced directory structure also makes worrking with vim or so hard, at least for me.

[11:39] <AlexDaniel> though it depends on how recent your distro version is

[11:39] <gaurav_> @AlexDaniel. Checking link. Thanks for it.

[11:40] <robertle> in any case, the success of java is really interesting. it's not because of anything java did by design. in fact noone is using java for what it was designed for

[11:40] <sena_kun> AlexDaniel, I thought he meant https://en.wikipedia.org/wiki/Linux_Standard_Base

[11:40] <sena_kun> s/he/they/

[11:40] <gaurav_> @robertle. enforced directory?

[11:40] <robertle> but somehow they have managed to form a community with shared ideas on how java code should look like

[11:41] <AlexDaniel> sena_kun: oh… oh…

[11:41] <robertle> gaurav_: the package = directory plus the convention of having the com/something/mycorp prefix to make all packages globally unique. makes the package tree really deep

[11:42] <robertle> I think this normative process makes it really easy to get people to start on other codebases, and therefore a good language for corporate development. you can move people around easier

[11:42] <robertle> of course the flipside is that java can't evolve easily, and that is showing at the moment

[11:43] <gaurav_> robertle: Is that the reason Java8 is now trying to do functional programming?

[11:43] <robertle> but it's interesting that the C++ community is doing more of that recently, working towards a less fractured idea of what code should look like. at least that is my impression

[11:44] <robertle> gaurav_: I'd rather think the functional parts are one of the rare cases where java has managed to evolve. it's not like that only perl is combining functional and imperative programming, everyone is

[11:44] *** lizmat joined
[11:44] <robertle> and from a lisp or scheme point of view all of these attempts are relatively weak

[11:45] <AlexDaniel> 8? don't we have java 10 now? :)

[11:45] <AlexDaniel> though I stopped following it at 8, so I don't even have a clue about 9 and 10

[11:45] *** p6bannerbot sets mode: +v lizmat

[11:45] <robertle> the actual changes to the language are relatively small

[11:46] <gaurav_> Not sure about Java 9 or Java 10.

[11:46] <robertle> the only thing i really noticed was c++-style type inferrence at compile time

[11:47] <robertle> and technical improvements to the garbage collector

[11:47] <AlexDaniel> oooooooooo `var` in java 10! Finally!

[11:47] <robertle> the other bit I find interesting or even worrying is that at my work, java is slowly being replaced with golang, an even less expressive language. and one that is even more monoculture in how code should look

[11:48] <AlexDaniel> I've been using `val` from projectlombok since forever. Nice to see it becoming part of the language

[11:49] <gaurav_> @robertle: which sector of industry do you work in?

[11:49] *** tejr joined
[11:49] *** p6bannerbot sets mode: +v tejr

[11:52] <robertle> gaurav_: used to be television, now fitness. but in both cases it's just backend development. some of it was C++ and java, now it's java and golang. some scala by accident

[11:52] *** saki joined
[11:53] *** saki left
[11:54] <robertle> golang is just barbaric, and java has these weird cultural things where you need to have so much useless structure in the form of interfaces and facades around. I don't really like either. C++ lacks good libraries for typical backend work, and (like perl) it requires restraint from the developer, but at least it's fun

[11:54] <gaurav_> I work in Investment Banking firm in Testing/QA division. Our new products are now moving from Java to Scala

[11:55] <robertle> scala is a much saner language than java, but I wonder whether it will hold

[11:56] <gaurav_> But in our case, they are using Scala in conjunction with Apache Spark and Hadoop framework. The volume of data is just too much.

[11:57] *** leastbit joined
[11:57] *** leastbit left
[11:58] *** psychoslave joined
[11:58] *** saki joined
[11:58] *** saki left
[11:58] *** p6bannerbot sets mode: +v psychoslave

[11:58] <robertle> I guess that is the other reason for java or scala: momentum by all these big frameworks

[11:59] <gaurav_> One thing about C++ is that you need to have a discipline and patience. It takes some time to learn it, specially if you know a scripting language and trying to do c++.

[12:00] <gaurav_> Yes robertle. It is only due to these big frameworks. Otherwise I haven't had the time to look into scala to know what it brings on the table. Someday I shall do it.

[12:00] <robertle> yeah, it's a bigger language. but I think the more important aspect, and perhaps more relevant for perl, is that you need to have discipline *during* development, not only in the startup/learning phase. it's just way too easy to do something unnecessarily complex. you even get the excuses, "zero overhead" and all

[12:01] <gaurav_> One thing I like about C/C++ is that you can compile your code and hide the code. Try to understand that there are a lot of people who are just looking to copy your work and present it as your's.

[12:02] *** sotona joined
[12:02] *** p6bannerbot sets mode: +v sotona

[12:02] <buggable> New CPAN upload: Config-2.1.0.tar.gz by TYIL http://modules.perl6.org/dist/Config:cpan:TYIL

[12:06] *** sotona left
[12:06] <robertle> 0b9cd9f22f67

[12:06] <robertle> grrr, sorry

[12:07] <gaurav_> I agree to the point about easy to do something unnecessarily complex. One must clearly know what is to be achieved. Design is king!

[12:07] <gaurav_> There is no escape from poor design, anywhere!

[12:09] *** stmuk joined
[12:10] *** p6bannerbot sets mode: +v stmuk

[12:12] *** stmuk_ left
[12:13] *** molaf joined
[12:13] *** p6bannerbot sets mode: +v molaf

[12:16] *** saki joined
[12:17] *** p6bannerbot sets mode: +v saki

[12:21] *** kaare_ joined
[12:22] *** p6bannerbot sets mode: +v kaare_

[12:26] *** AlexDaniel left
[12:26] *** kaare_ left
[12:28] <stmuk> most of the code I've written I've wished someone had copied it ... and improved it!

[12:28] *** AlexDaniel joined
[12:28] *** p6bannerbot sets mode: +v AlexDaniel

[12:29] <stmuk> I've seen large enterprises lose source code for their projects and have to rewrite it

[12:31] *** molaf left
[12:36] *** stmuk_ joined
[12:37] *** p6bannerbot sets mode: +v stmuk_

[12:39] *** stmuk left
[12:43] *** sotona joined
[12:43] *** p6bannerbot sets mode: +v sotona

[12:47] *** sotona left
[12:48] <rindolf> stmuk_: ah

[12:48] <rindolf> stmuk_: no vcs?

[12:49] <rindolf> stmuk_: https://perlhacks.com/2012/03/you-must-hate-version-control-systems/

[12:59] *** espadrine joined
[12:59] *** p6bannerbot sets mode: +v espadrine

[13:00] *** kurahaupo` left
[13:00] <timotimo> in the videogame industry, many older projects have lost all their source code :(

[13:01] <timotimo> sometimes source code turns up in someone's closet randomly, though

[13:06] *** psychoslave left
[13:19] *** aborazmeh joined
[13:19] *** aborazmeh left
[13:19] *** aborazmeh joined
[13:19] *** p6bannerbot sets mode: +v aborazmeh

[13:20] *** p6bannerbot sets mode: +v aborazmeh

[13:22] *** psychoslave joined
[13:22] *** p6bannerbot sets mode: +v psychoslave

[13:23] *** sotona joined
[13:24] *** p6bannerbot sets mode: +v sotona

[13:28] *** sotona left
[13:28] <rindolf> timotimo: ah

[13:44] *** aborazmeh left
[13:59] *** curan joined
[13:59] *** p6bannerbot sets mode: +v curan

[14:06] *** curan left
[14:30] *** molaf joined
[14:30] *** p6bannerbot sets mode: +v molaf

[14:33] <Geth> ¦ doc: 45cbd5d509 | (Elizabeth Mattijsen)++ | doc/Language/operators.pod6

[14:33] <Geth> ¦ doc: Fix typo

[14:33] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/45cbd5d509

[14:33] <synopsebot> Link: https://doc.perl6.org/language/operators

[14:47] *** albongo left
[14:47] *** stmuk joined
[14:48] *** albongo joined
[14:48] *** albongo left
[14:48] *** albongo joined
[14:48] *** p6bannerbot sets mode: +v albongo

[14:48] *** p6bannerbot sets mode: +v stmuk

[14:49] *** p6bannerbot sets mode: +v albongo

[14:49] *** stmuk_ left
[14:58] <ingy> Hey all. As I've been running the same test suite over and over for the past months it seems like the perl6 tests keep getting slower and slower. Is there some kind of caching going on outside of testing directory, that could somehow be causing a problem?

[15:00] <ingy> I mean I can clear my local .precomps etc, but is perl6 writing something else out somewhere, that it is later checking causing it to slow down more and more

[15:01] <mst> can't think of anything except precomps but that doesn't mean I'm right

[15:03] <timotimo> perhaps the precomp folder is filling up with outdated bytecode files? and finding the right file takes longer for some reason? i don't know how it works ...

[15:04] *** HaraldJoerg joined
[15:04] *** p6bannerbot sets mode: +v HaraldJoerg

[15:12] <mst> since ingy's not explained what his test suite does, "I bet it's the precomps" plus http://trout.me.uk/vaguecat.jpg are my only answers atm

[15:13] <robertle> don't fully understand precomp, but I don't think there is any "scanning" involved. so more files should not really make it slower apart from the OS parts of course

[15:14] *** zakharyas joined
[15:14] <timotimo> is the sha1 of the source file used to find the right file? not sure. strace could tell.

[15:14] *** p6bannerbot sets mode: +v zakharyas

[15:15] <timotimo> though of course rakudo might be getting more optimized for things being run many times and losing some performance for things being run only once or twice?

[15:16] *** psychoslave left
[15:17] <ingy> timotimo: it seems like all thing equal, perl6 tests are running twice as slow each week

[15:17] <timotimo> oh wow

[15:17] <ingy> I'll dig into it later

[15:17] <timotimo> shareable6: help

[15:17] <shareable6> timotimo, Like this: shareable6: f583f22 # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Shareable

[15:17] <timotimo> ingy: you can get pre-built rakudos for any revision from this bot

[15:18] <timotimo> that can help run your code with multiple versions of rakudo very quickly

[15:18] <ingy> timotimo: thanks

[15:19] <ingy> timotimo: is that you project?

[15:19] <timotimo> nope

[15:19] <timotimo> the whateverables are from AlexDaniel and MasterDuke plus contributors

[15:19] <timotimo> https://github.com/perl6/whateverable/graphs/contributors

[15:19] <ingy> I was just thinking about a way to make them relocatable

[15:20] <timotimo> relokudo is a thing many people want

[15:20] <ingy> ActivePerl did this by compiling in a long path, and then subst in the real path at install time

[15:20] <AlexDaniel> ingy: these tars are installed into /tmp :)

[15:20] <ingy> super easy hack

[15:21] <ingy> I saw that

[15:21] <timotimo> that's how our prototype AppImage works, too

[15:21] <timotimo> it uses /./././././. or something

[15:21] <ingy> cool

[15:23] *** zakharyas left
[15:24] *** zakharyas joined
[15:24] *** p6bannerbot sets mode: +v zakharyas

[15:32] <pmurias> timotimo: precomp is not doing a sequential scan

[15:36] <ingy> omg, I just time my p6 run at 7 minutes! (4 secs for p5)

[15:36] <AlexDaniel> that's pretty great

[15:36] <AlexDaniel> because now we have an easy benchmark so that we can improve things

[15:36] <ingy> p6 used to take 30 secs last week

[15:37] <ingy> :P

[15:37] <AlexDaniel> o especially if it's a regression

[15:37] <AlexDaniel> in fact… what version was that last week? :)

[15:37] <AlexDaniel> if it's a regression that was introduced in the last week then that's unfortunate…

[15:38] <ingy> it's been the ubuntu 18.04 version all along. v18.03 

[15:38] <ingy> just can't figure out why it gets slower and slower :\

[15:39] <AlexDaniel> ooh

[15:40] <AlexDaniel> that's interesting :)

[15:40] <[Coke]> are you doing the exact same thing each time? Any chance you're, (e.g.) parsing a log file that's getting bigger, something like that?

[15:41] <ingy> [Coke]: it's exact

[15:41] *** gaurav_ left
[15:41] <ingy> but it feels like that :)

[15:42] <[Coke]> is the whole thing slowing down? or just a subset of the tests?

[15:42] <[Coke]> you're updating rakudo as you go?

[15:42] <ingy> https://gist.github.com/d3e9d633d8e6bd136aa5f6298f52f1c5

[15:43] <ingy> I'm going to plug in my laptop and see what diff it makes

[15:44] <timotimo> wow, almost 1 minute of system time

[15:44] <timotimo> that's impressive

[15:44] <ingy> over 1 minute with precomp

[15:45] <ingy> I mean before -e .precomp

[15:45] <ingy> `make clean` deletes precomp...

[15:45] <timotimo> is this the same thing i get when i git clone your testml repo from github?

[15:46] <ingy> timotimo: sure. you should be able to `make test-runtime-perl6`

[15:46] <timotimo> is it testml-pm6?

[15:46] <ingy> no

[15:47] <ingy> I should get rid of that :)

[15:47] <timotimo> so testml1-pm?

[15:47] <ingy> testml-lang/tesml

[15:47] <ingy> testml-lang/testml

[15:47] <timotimo> ah

[15:49] <ingy> I have some power saving stuff turned on for linux. wonder if it slowed things down. but last week in glasgow wasn't this bad. don't think I was always plugged in.

[15:49] <timotimo> i have moarvm with postrelease-opts, but i get 22.20user 8.68system 0:28.21elapsed 109%CPU (0avgtext+0avgdata 122520maxresident)k

[15:49] <timotimo> but that's without "make clean"

[15:50] <ingy> well it's clean first time :)

[15:50] <Geth> ¦ doc/master: 4 commits pushed by (JJ Merelo)++

[15:50] <Geth> ¦ doc/master: 76f33722e7 | No TODO left, so just reflow

[15:50] <Geth> ¦ doc/master: f8bf712017 | Checks out for #2277, reflows meanwhile

[15:50] <Geth> ¦ doc/master: 08b0f48258 | Adds op examples, refs #2277

[15:50] <Geth> ¦ doc/master: 4789af9137 | Fixes errors and reflows

[15:50] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/45cbd5d50911...4789af91376c

[15:50] <ingy> 2 secs seems like what I used to get

[15:51] <ingy> laptop plugged in not seeming to help

[15:51] <timotimo> yes, but that wasn't the first run :)

[15:51] <ingy> still waiting

[15:51] <ingy> sorry I meant 22 secs seems like what I used to get

[15:51] <ingy> seems normal

[15:52] <timotimo> after clean:

[15:52] <timotimo> 30.19user 10.69system 0:35.84elapsed 114%CPU (0avgtext+0avgdata 167732maxresident)k

[15:52] <ingy> I've apt purge perl6; apt install perl6   # this morning

[15:52] <timotimo> what's perl6 --version?

[15:53] <ingy> went down to 4 minutes plugged in

[15:53] <ingy> This is Rakudo version 2018.03 built on MoarVM version 2018.03   # <== Ubuntu 18.04

[15:53] <timotimo> how filled is your ram? and hard drive?

[15:53] <ingy> how do I check ram?

[15:54] <timotimo> i usually look at htop, but "free -m" is good enough

[15:54] <timotimo> with the common caveat that "free" really means "unused" and +/- cache means "free to be used immediately"

[15:55] <ingy> free -mh

[15:55] <ingy>               total        used        free      shared  buff/cache   available

[15:55] <ingy> Mem:            15G        8.1G        1.5G        629M        5.8G        6.3G

[15:55] <ingy> Swap:           16G        1.1G         15G

[15:56] <ingy> it's a new x1 carbon g6

[15:56] *** reportable6 left
[15:56] *** reportable6 joined
[15:56] <timotimo> that's lots and lots available

[15:57] <ingy> I should try on a 18.04 digitalocean vm

[15:57] <timotimo> here's moarvm master, i.e. without the newest optimizations

[15:57] <timotimo> 33.02user 11.94system 0:41.98elapsed 107%CPU (0avgtext+0avgdata 165972maxresident)k

[15:57] <timotimo> 21.98user 8.46system 0:28.02elapsed 108%CPU (0avgtext+0avgdata 117496maxresident)k

[15:57] <timotimo> first with make clean, then without make clean

[15:57] *** p6bannerbot sets mode: +v reportable6

[15:57] *** araraloren_ left
[15:57] <timotimo> so the postrelease opts don't actually do all that much, except when it has to precompile in which case it's more expensive?

[15:59] <timotimo> wait, did i read that backwards

[15:59] <timotimo> OK, postrelease-opts made it about 5 seconds faster when you have "make clean" before that

[16:00] <timotimo> except now i got 35 seconds after make clean; perhaps because i just recompiled moar and rakudo cleanly

[16:00] <timotimo> as always: timing stuff is fiddly

[16:00] <ingy> what's postrelease-opts?

[16:01] <jnthn> ingy: A MoarVM branch with a bunch of new opts, which we'll merge to master soon after the next release.

[16:01] <timotimo> everything jnthn has been doing in the last ~two weeks; things that shouldn't go into the release because it's too risky

[16:03] <timotimo> ingy: how do i run a single test file "directly" with perl6?

[16:03] <timotimo> i'd like to remove "prove" and "make" from the pipeline

[16:05] <ingy> timotimo: I like your explanation more that jnthns :D

[16:05] <ingy> timotimo: give me a sec... tricky

[16:06] <timotimo> that's not good :D

[16:10] <ingy> it's fine

[16:11] <timotimo> i have to perl6 --profile to work my magic ):

[16:11] <timotimo> :)

[16:11] <ingy> try TESTML_ROOT=$PWD PATH=$PWD/bin:$PATH TESTML_RUN=perl6-tap TESTML_LIB=$PWD/src/perl6/test testml test/runtime-tml/010-math.tml 

[16:11] <ingy> see if it works

[16:11] <ingy> still has some shell

[16:11] <ingy> so I will try to get rid of it

[16:12] <timotimo> it fails to find perl6 :D

[16:13] <ingy> whu?

[16:14] <timotimo> /home/timo/perl6/ecosystem/testml/bin/testml-perl6-tap: line 8: perl6: command not found

[16:16] <ingy> what shell you using?

[16:16] <timotimo> fish

[16:17] <ingy> meh

[16:17] <timotimo> wouldn't fish pass the path on?

[16:17] <timotimo> PATH=/home/timo/perl6/ecosystem/testml/bin:/bin

[16:18] <timotimo> doesn't seem like it, weird.

[16:18] <timotimo> i just added the path for my perl6 binary in the line and it works now

[16:19] <ingy> FOO=fish echo $FOO

[16:19] <ingy> ok

[16:19] <timotimo> fish won't let you do that, you have to put "env" in front

[16:21] <ingy> PERL6LIB=/home/ingy/src/testml/ext/perl6,/home/ingy/src/testml/src/perl6/lib,/home/ingy/src/testml/src/perl6/test,/home/ingy/src/testml/test/runtime-tml,/home/ingy/src perl6 -e 'use TestML::Run::TAP; TestML::Run::TAP.run("/home/ingy/src/testml/test/runtime-tml/.testml/010-math.tml.json")'

[16:21] <ingy> that *should* work but doesn't for me

[16:22] <ingy> that's the final command that the shell bits call

[16:23] <timotimo> i'm not sure what the lines with : do

[16:24] <ingy> where?

[16:24] <timotimo> testml-perl6-tap

[16:24] <timotimo> : "${TESTML_BIN:=testml-perl6-tap}"

[16:24] *** ufobat_ joined
[16:25] <ingy> oh

[16:25] *** p6bannerbot sets mode: +v ufobat_

[16:25] <ingy> : is a shell builtin that is same as `true` command

[16:26] <ingy> that is a idiomatic bash for $TESTML_BIN ||= 'testml-perl6-tap'

[16:27] <ingy> the ${...:=...} needs to be an argument of something so : is handy

[16:27] *** fake_space_whale joined
[16:28] <timotimo> i'm not sure how `true` would cause that to happen, but i generally don't know much shell at all

[16:28] *** p6bannerbot sets mode: +v fake_space_whale

[16:30] <ingy> TESTML_BRIDGE=TestMLBridge PERL6LIB=$PWD/ext/perl6,$PWD/src/perl6/lib,$PWD/src/perl6/test,$PWD/test/runtime-tml perl6 -e 'use TestML::Run::TAP; TestML::Run::TAP.run("'$PWD'/test/runtime-tml/.testml/010-math.tml.json")'

[16:30] <ingy> try that

[16:32] <timotimo> works!

[16:33] <ingy> timotimo: https://gist.github.com/2c4c094a934ae0ebc8a1354ca3359974

[16:33] <ingy> it's not in p6 it seems

[16:33] <ingy> it's something outside of p6 that only happens when testing p6

[16:34] <timotimo> that one runs in only 0.23 seconds or so, so not a good target for benchmarking

[16:34] <timotimo> oh, curious

[16:34] <ingy> look closer

[16:34] <ingy> 19s then 0.4s

[16:35] <ingy> without the shell wrapper

[16:35] *** psychoslave joined
[16:35] <ingy> p6 is still part of equation, but the equation is all on my side

[16:36] <ingy> timotimo: thanks and if you ever need shell help, call me collect!

[16:36] *** p6bannerbot sets mode: +v psychoslave

[16:36] <timotimo> thanks!

[16:37] <benjikun> what if perl6 had an explicit option to prefer nums over rats

[16:37] *** psychoslave left
[16:38] <benjikun> `perl6 --number-prefer=[num/rat] computepi.p6`

[16:38] <ingy> the shell wrapper stuff is just supposed to check if the testml has been compiled, compile it if needed, then call p6

[16:38] <timotimo> m: class Rat { method new(|c) { say c.perl } }; 1.0 + 3.5

[16:38] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «\(1, 1)␤WARNINGS for <tmp>:␤\(35, 10)␤Useless use of "+" in expression "1.0 + 3.5" in sink context (line 1)␤»

[16:38] <ingy> bbl

[16:38] <timotimo> m: class Rat { method new($nu, $de) { $nu.Num / $de.Num } }; say 1.0 + 3.5

[16:38] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «4.5␤»

[16:38] <timotimo> m: class Rat { method new($nu, $de) { $nu.Num / $de.Num } }; say (1.0 + 3.5).perl

[16:38] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «4.5e0␤»

[16:38] <benjikun> hmm, true

[16:38] <timotimo> m: class Rat { method new($nu, $de) { $nu.Num / $de.Num } }; say 1.0 + 2.0 == 3.0

[16:38] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «True␤»

[16:38] <timotimo> not quite

[16:38] <benjikun> could be a rakudo cli parameter too

[16:39] <benjikun> oh, I see

[16:39] <timotimo> m: class Rat { method new($nu, $de) { $nu.Num / $de.Num } }; say 3.0 - 2.0 == 1.0

[16:39] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «True␤»

[16:39] <timotimo> is that not how...?

[16:39] <timotimo> m: class Rat { method new($nu, $de) { say "called $nu $de"; $nu.Num / $de.Num } }; say 3.0 - 2.0 == 1.0

[16:39] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «called 3 1␤called 2 1␤called 1 1␤True␤»

[16:39] <timotimo> m: class Rat { method new($nu, $de --> Num) { say "called $nu $de"; $nu.Num / $de.Num } }; say 3.0 - 2.0 == 1.0

[16:39] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «called 3 1␤called 2 1␤called 1 1␤True␤»

[16:39] <timotimo> m: class Rat { method new($nu, $de --> Num) { say "called $nu $de"; $nu.Num / $de.Num } }; say 30.0 - 20.0 == 10.0

[16:39] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «called 30 1␤called 20 1␤called 10 1␤True␤»

[16:39] <benjikun> isn't that still just converting the Rat to a Num

[16:39] <timotimo> :|

[16:39] <benjikun> at creation

[16:40] <timotimo> i'm converting both numerator and denominator to num before i divide

[16:40] <benjikun> ah

[16:40] <benjikun> I think the cli param for rakudo could be a nice option tbh

[16:40] <timotimo> the return typecheck of the new method also verifies that it's giving me a Num

[16:42] <timotimo> put that definition into a module and use -Mpragma::num

[16:42] <timotimo> :D

[16:44] *** MilkmanDan left
[16:44] <benjikun> hmm I see

[16:44] <benjikun> ty timotimo

[16:44] <timotimo> :)

[16:44] <timotimo> of course it only works for constants in that very file

[16:45] <benjikun> it could be interesting having it built-in to rakudo, too

[16:45] <benjikun> just for programs that prefer speed over absolute numerical accuracy

[16:45] <benjikun> I'm not entirely sure how much that would require to be added

[16:46] *** MilkmanDan joined
[16:46] *** p6bannerbot sets mode: +v MilkmanDan

[16:46] <timotimo> hmm, maybe all in all ten to twenty lines in the right places?

[16:47] <benjikun> perhaps, would be nice if it were just that

[16:48] <benjikun> wouldn't it be under src/Perl6 in rakudo/rakudo

[16:48] <timotimo> one thing i've learned in my years of rakudo and perl6 is that "easy" things and "hard" things both can come down to either five or a hundred lines

[16:59] *** diakopter joined
[16:59] *** p6bannerbot sets mode: +v diakopter

[17:03] *** silug joined
[17:04] *** p6bannerbot sets mode: +v silug

[17:04] *** kerframil joined
[17:04] *** p6bannerbot sets mode: +v kerframil

[17:04] *** noganex joined
[17:05] *** p6bannerbot sets mode: +v noganex

[17:10] *** x[LGWs4x4i]uG2N0 left
[17:14] *** x[LGWs4x4i]uG2N0 joined
[17:14] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[17:15] *** stmuk_ joined
[17:16] *** p6bannerbot sets mode: +v stmuk_

[17:17] *** stmuk left
[17:27] <xinming> m: class T { has $.v; }; my @a = map { T.new(:v("a")) }, (1..5); @a.perl.say; ("a" eq all(@a>>.v)).perl.say; 

[17:27] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «[T.new(v => "a"), T.new(v => "a"), T.new(v => "a"), T.new(v => "a"), T.new(v => "a")]␤all(Bool::True, Bool::True, Bool::True, Bool::True, Bool::True)␤»

[17:28] <xinming> How can I get the "single" result for all of them are the same?

[17:28] <xinming> I know I can use unique

[17:28] <xinming> But doesn't seems right to do so

[17:29] <timotimo> you want to "so" it, i believe

[17:29] <timotimo> or just use it in a boolean context, like with "if" or "unless"

[17:30] <xinming> m: class T { has $.v; }; my @a = map { T.new(:v("a")) }, (1..5); @a.perl.say; ("a" eq all(@a>>.v)).so.perl.say;

[17:30] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «[T.new(v => "a"), T.new(v => "a"), T.new(v => "a"), T.new(v => "a"), T.new(v => "a")]␤Bool::True␤»

[17:30] <xinming> Thanks

[17:42] *** molaf left
[17:47] *** espadrine left
[17:51] *** saki left
[17:52] *** jvmperl joined
[17:52] *** p6bannerbot sets mode: +v jvmperl

[18:04] *** zakharyas left
[18:04] *** zakharyas joined
[18:05] *** p6bannerbot sets mode: +v zakharyas

[18:05] *** jvmperl left
[18:42] <Altreus> someone remind me how to use a string in a variable to access a property from a class

[18:42] <yoleaux> 21 Aug 2018 21:52Z <SmokeMachine> Altreus: thats how you do it

[18:42] <Altreus> hmm

[18:42] <Altreus> I wonder what that was about :D

[18:44] <geekosaur> m: class Foo { has $.a; has $.b }; my Foo $x .= new(a => 4, b => 6); my $y = 'b'; say $x."$y"()

[18:44] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «6␤»

[18:49] <Altreus> hmm

[18:49] <Altreus> that didn't work... lemme try agin

[18:49] <Altreus> oh yea

[18:50] <Altreus> I must've got part of it wrong :)

[18:50] <geekosaur> possibly dropped either of the quotes or the parentheses; both are required to disambiguate

[18:51] <Altreus> I think I dropped a dot actually

[18:51] <Altreus> yea

[18:51] <Altreus> I think I accidentally did `has $a`

[18:51] *** TreyHarris left
[18:57] *** cpage left
[18:57] *** cpage joined
[18:58] *** p6bannerbot sets mode: +v cpage

[19:04] *** TreyHarris joined
[19:04] *** p6bannerbot sets mode: +v TreyHarris

[19:04] *** zakharyas left
[19:05] *** xinming_ joined
[19:06] *** p6bannerbot sets mode: +v xinming_

[19:07] *** xinming left
[19:09] *** HaraldJoerg1 joined
[19:10] *** p6bannerbot sets mode: +v HaraldJoerg1

[19:10] *** HaraldJoerg left
[19:12] <Altreus> does an 'our' variable in a class make sense?

[19:13] <Altreus> I was expecting 'our %FOO' to be %Class::Name::FOO but it isn't so I'm not sure what to expect :)

[19:25] *** molaf joined
[19:26] *** p6bannerbot sets mode: +v molaf

[19:28] <moritz> m: class A::B { our %FOO; method init() { %FOO = a => 1 }; A::B.init; say %A::B::FOO

[19:28] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3OO = a => 1 }; A::B.init; say %A::B::FOO7⏏5<EOL>␤    expecting any of:␤        postfix␤        statement end␤        statement modifier␤        stat…»

[19:28] <moritz> m: class A::B { our %FOO; method init() { %FOO = a => 1 }}; A::B.init; say %A::B::FOO

[19:28] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «{a => 1}␤»

[19:28] <moritz> Altreus: seems to work the way you expected

[19:29] *** robertle left
[19:34] <Altreus> m: class A::B { our %FOO = a => 1 } say %A::B::FOO

[19:34] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3class A::B { our %FOO = a => 1 }7⏏5 say %A::B::FOO␤    expecting any of:␤        infix␤        infix stopper␤…»

[19:34] <Altreus> m: class A::B { our %FOO = a => 1 }; say %A::B::FOO

[19:34] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «{a => 1}␤»

[19:34] <Altreus> hum

[19:34] <Altreus> :x

[19:35] <Altreus> when I do it from another file it says (Any)

[19:35] <jdv79> maybe a precomp thing?

[19:36] <moritz> Altreus: try to do the initialization in an INIT block

[19:37] <Altreus> I've taken the opportunity to refactor anyway

[19:37] <Altreus> :)

[19:39] *** fake_space_whale left
[19:40] <Altreus> where is WHAT documented? :s

[19:41] <moritz> https://docs.perl6.org/language/mop#index-entry-syntax_WHAT-WHAT

[19:41] <Altreus> sweet

[19:42] <Altreus> perl6 follows behind perl5 in being impossible to google for

[19:42] <geekosaur> most languages are difficult if not impossible to google for reliably

[19:43] <geekosaur> (could be worse; see go. but they brought that one on themselves)

[19:43] *** rouking left
[19:45] <moritz> Altreus: pro tip: just enter WHAT in the search field on docs.perl6.org

[19:50] *** xinming_ is now known as xinming

[19:53] *** sotona joined
[19:53] *** p6bannerbot sets mode: +v sotona

[19:54] <Altreus> right, right

[19:54] <Altreus> use the provided tools :D

[20:20] *** TreyHarris left
[20:25] *** HaraldJoerg1 is now known as HaraldJoerg

[20:26] *** molaf left
[20:33] *** TreyHarris joined
[20:33] *** p6bannerbot sets mode: +v TreyHarris

[20:37] *** webstrand left
[20:38] *** webstrand joined
[20:38] *** p6bannerbot sets mode: +v webstrand

[20:40] <xinming> How do we do return from a immediate anonymous block?

[20:40] <xinming> in some cases, I got something like  Attempt to return outside of immediately-enclosing Routine (i.e. `return` execution is outside the dynamic scope of the Routine where `return` was used)

[20:41] <xinming> the error is    "Attempt to return outside of immediately-enclosing Routine (i.e. `return` execution is outside the dynamic scope of the Routine where `return` was used)"

[20:41] *** mscha left
[20:46] *** diakopter left
[20:49] *** dct joined
[20:49] *** p6bannerbot sets mode: +v dct

[21:06] <jnthn> xinming: return binds to the enclosing routine, not block; if you want to use return, you'll need an anonymous sub instead of an anonymous block. If you're in a loop, you can also use `next` to go to the next iteration.

[21:09] *** pmurias left
[21:12] *** pmurias joined
[21:13] *** lichtkind left
[21:13] *** p6bannerbot sets mode: +v pmurias

[21:19] *** kerframil left
[21:19] *** vrurg joined
[21:20] *** p6bannerbot sets mode: +v vrurg

[21:29] *** HaraldJoerg left
[21:45] <rindolf> Altreus: meow, sup?

[21:53] <ingy> timotimo: pingz

[21:55] <ingy> jnthn: hi

[21:55] <jnthn> ingy: o/

[21:56] <ingy> I figured out the p6 sloooowness

[21:56] <timotimo> pong

[21:56] <timotimo> what was it?

[21:56] <ingy> it might be considered a bug

[21:57] <ingy> try: time PERL6LIB=/home perl6 -e 'use NativeCall'

[21:57] <timotimo> aaaaahahahaha

[21:57] <timotimo> yeah, that's not fast

[21:58] <ingy> it explains a lot. I keep all my source repos in ~/src

[21:58] <timotimo> having PERL6LIB set to ~ or even ~/src doesn't work very well either

[21:58] <ingy> and that ended up in PERL6LIB (bug on my part)

[21:58] <ingy> but ~/src got bigger each week

[21:58] <timotimo> what do you suggest we do about it?

[21:59] <ingy> so I wasn't imagining the p6 tests getting slower

[21:59] <timotimo> unsolicited warning output about folders way too large to be useful in PERL6LIB would be kinda weird

[22:00] <ingy> well I had: PERL6LIB=good,also/good,bad/and/big

[22:00] <ingy> bad/and/big was never needed for a look up

[22:00] <ingy> do you do a parallel lookup or something?

[22:01] <timotimo> you don't "use Test" or something?

[22:01] <timotimo> i believe PERL6LIB comes first

[22:01] <ingy> I see

[22:01] <timotimo> so if you use Test or NativeCall or something rakudo has in its lib/ you'll end up going through your whole PERL6LIB before looking there

[22:01] <ingy> before core 

[22:01] <ingy> aye

[22:01] <ingy> ok

[22:01] <timotimo> and doing lookup in parallel won't help much because the earlier ones have to come up negative before a later one can be accepted

[22:02] <ingy> I wasn't suggesting parallel was good

[22:02] <timotimo> OK

[22:02] <ingy> I forgot that stuff would get looked up in ~/src at all

[22:02] <ingy> but now I understadn

[22:03] <ingy> so nothing to see here...

[22:03] <ingy> except... hmm

[22:03] <ingy> I only have 42 repos in ~/src

[22:04] <ingy> seems like should only be 42 stats

[22:04] <ingy> but takes 13 secs

[22:04] <timotimo> it's going through the whole tree

[22:04] <timotimo> deeply recursive

[22:04] <ingy> why?

[22:04] <timotimo> not sure

[22:04] <ingy> no thing FOOLIB would do that

[22:04] <ingy> no other FOOLIB would do that

[22:05] <timotimo> https://github.com/rakudo/rakudo/blob/master/src/core/CompUnit/Repository/FileSystem.pm6#L61-L93

[22:05] <ingy> looking up Foo::Bar under $LIB would just stat $LIB/Foo

[22:05] <ingy> so I'm wrong, only 1 stat not 42 :)

[22:06] <timotimo> i'm not sure who calls the id method there

[22:06] <ingy> I guess p6 lookup is supernatural

[22:07] <timotimo> https://gist.github.com/timo/a8bef611712d2c535c840bde65aefc08

[22:07] <timotimo> here's a stacktrace for you

[22:07] <ingy> seems like a big local lib could also slow things down

[22:08] <timotimo> https://github.com/rakudo/rakudo/blob/master/src/core/CompUnit/PrecompilationRepository.pm6#L104

[22:08] <timotimo> this requires the ids

[22:08] *** graphene joined
[22:08] <timotimo> OK, so here's the rub

[22:08] <timotimo> if you load Test, it'll have some dependencies listed

[22:09] *** sena_kun left
[22:09] *** p6bannerbot sets mode: +v graphene

[22:09] <timotimo> hm

[22:09] <timotimo> maybe this is how it is:

[22:09] <ingy> I wonder if a `use lib` would be faster than a PERL6LIB

[22:09] <timotimo> the first entry in the PERL6LIB is where all precomps are stored

[22:09] <ingy> ok

[22:10] <timotimo> it should do the same thing

[22:10] <timotimo> if something depends on precompiled files, it first checks if the repo has not been touched at all

[22:10] <timotimo> and the file repo does that by sha1-ing all files

[22:10] <ingy> one would expect them to be the same, but p6 is always too magic :)

[22:11] <ingy> hrmm

[22:11] <timotimo> https://github.com/rakudo/rakudo/blob/master/docs/module_management.md - maybe this has the explanations

[22:11] <timotimo> PERL6LIB on a folder with pm files isn't really what you'd have in production

[22:11] <timotimo> you'd have it actually installed properly

[22:11] <ingy> sha1ing all files seems...

[22:15] <ingy> timotimo: what would PERL6LIB be in prod?

[22:15] <timotimo> ""

[22:15] <ingy> oic

[22:15] <timotimo> or something like inst#/path/to/an/installation/folder

[22:16] <ingy> is that folder a .precomp dir?

[22:16] <timotimo> not quite

[22:16] <timotimo> perl6 -e 'say $*REPO.repo-chain'

[22:16] <timotimo> see those for examples

[22:16] <ingy> jnthn: just read about your honeymoon in ^^

[22:16] <ingy> congrats

[22:17] <jnthn> Wow, that was some years ago :D

[22:17] <ingy> hahaha

[22:17] <jnthn> But thanks! ;)

[22:17] <ingy> wel congrats

[22:17] *** pmurias left
[22:17] <jnthn> *:)

[22:17] <ingy> I just saw July

[22:17] <timotimo> :D

[22:18] <timotimo> that was just the last change

[22:18] <ingy> oooo

[22:19] * ingy considers the Honey::Moose module...

[22:19] <jnthn> I'm guessing I wrote that as one of my design notes gists, and it ended up put verbatim into the repo :)

[22:19] <timotimo> sweet jesus, pooh! that's not honey

[22:19] <ingy> :D

[22:21] <ingy> timotimo: how do I prettyprint that chain?

[22:21] <ingy> .gist?

[22:21] <timotimo> well, "say" will gist it for you

[22:21] <ingy> no pretty enough

[22:21] <ingy> .pretty?

[22:21] <timotimo> m: .perl.say for $*REPO.repo-chain

[22:21] <camelia> rakudo-moar 5d1cec5a4: OUTPUT: «CompUnit::Repository::Installation.new(prefix => "/home/camelia/.perl6")␤CompUnit::Repository::Installation.new(prefix => "/home/camelia/rakudo-m-inst-2/share/perl6/site")␤CompUnit::Repository::Installation.new(prefix => "/home/camelia/rakudo-m-in…»

[22:23] <ingy> thx

[22:38] *** sotona left
[23:17] <ingy> timotimo: fyi p6 suite runs in ~5 secs, p5 in about 4

[23:17] <ingy> so good job all :)

[23:17] <ingy> still need to optimize the heck out of things but at least all is sane now

[23:18] *** numbskull15 joined
[23:18] *** p6bannerbot sets mode: +v numbskull15

[23:19] <ingy> export PERL6LIB=/   # Nooooooooooooooooo.....

[23:19] *** numbskull15 left
[23:20] <ingy> time PERL6LIB=/home perl6 -e 'use Test'

[23:20] <ingy> real0m19.694s

[23:21] <ingy> at least PERL6LIB=/ fails on perms (I assume)

[23:23] <ingy> also for all at my Glasgow talk where P6 was soooo sloooow. apologies. p6 is fine. ingy is sloooow...

[23:25] <timotimo> oh, that was in there already by the time you had the talk?

[23:26] *** speedChicken left
[23:27] <timotimo> that's bad PR :)

[23:27] <timotimo> actually, no PR is bad PR

[23:27] *** speedChicken joined
[23:27] <ingy> right!

[23:28] <ingy> I worked with nine on it

[23:28] <ingy> nine: ^^

[23:28] *** p6bannerbot sets mode: +v speedChicken

[23:29] <timotimo> i should hone the reflex to see "oh there's a lot of 'sys' time there" and immediately suggest "hey let's run strace on it!"

[23:29] <timotimo> that should have immediately told us what's up

[23:30] <ingy> you are probably better at reading strace

[23:30] <ingy> but sounds good...

[23:31] <timotimo> you'd see a line with "open" for every single file in your src folder, including lots-and-lots of non-perl6 files

[23:31] <timotimo> that'd surely catch your eye and make you go "that's kinda strange"

[23:32] <ingy> yeah, if I didn't gauge my eyes out first

[23:32] <timotimo> hah, oh my

[23:33] *** rindolf left
[23:33] <ingy> timotimo: are you in .eu?

[23:34] *** speedChicken left
[23:36] <timotimo> yep

[23:36] <ingy> night owl

[23:36] <timotimo> it's true

[23:36] *** speedChicken joined
[23:37] <timotimo> plus bad sleep for a couple of days

[23:37] *** p6bannerbot sets mode: +v speedChicken

[23:38] *** speedChicken left
[23:42] <buggable> New CPAN upload: Dist-Helper-1.0.0.tar.gz by TYIL http://modules.perl6.org/dist/Dist::Helper:cpan:TYIL

[23:59] *** dct left
