[00:05] *** Guest5068 left
[00:07] *** kurahaupo left
[00:14] *** NickEng joined
[00:16] *** NickEng left
[00:19] *** pmmmm left
[00:30] *** BrassLantern joined
[00:30] *** BrassLantern left
[00:30] *** BrassLantern joined
[00:33] *** BrassLantern left
[00:48] *** mcmillhj joined
[00:55] *** llfourn left
[01:02] *** markong left
[01:04] *** comborico1611 left
[01:09] *** llfourn joined
[01:17] *** giraffe joined
[01:18] *** giraffe is now known as Guest29863

[01:18] *** epony left
[01:28] *** mcmillhj left
[01:41] *** athenot joined
[01:45] *** ilbot3 left
[01:48] *** athenot_ joined
[01:49] *** athenot left
[01:57] *** ilbot3 joined
[01:57] *** ChanServ sets mode: +v ilbot3

[01:58] *** lizmat left
[02:01] *** molaf left
[02:02] *** athenot_ left
[02:13] *** molaf joined
[02:25] *** epony joined
[02:27] *** lizmat joined
[02:33] *** DeepIO_ joined
[02:37] *** DeepIO left
[03:10] *** pilne left
[03:12] *** eliasr left
[03:37] *** mtj_ left
[03:38] *** w_richard_w1 joined
[03:38] *** w_richard_w left
[03:41] *** atroxaper joined
[03:41] *** mtj_ joined
[03:50] *** Todd joined
[03:51] <Todd> How do I checkl for a "<" in a regex?   p6 'if "</span xxx" ~~ m/ (\</span) / {say "y"}else{say "n"};'

[03:56] <skids> m: if "</span xxx" ~~ m/ ("</"span) / {say "y"} else {say "n"};

[03:56] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «y␤»

[03:57] <skids> All non-alphanumerics are considered meta unless backslashed or quoted.  The / wasn't backslashed.

[03:58] <Todd> p6 'if "</span xxx" ~~ m/ "<\/"span) / {say "y"}else{say "n"};' ===SORRY!=== Error while compiling -e Couldn't find terminator / (corresponding / was at line 1) at -e:1 ------> if "</span xxx" ~~ m/ "<\/"span⏏) / {say "y"}else{say "n"};     expecting any of:         /

[03:59] <skids> Now you're closing a ) group that you never opened with a (

[03:59] <Todd> Got it!   p6 'if "</span xxx" ~~ m| ("</"span) | {say "y"}else{say "n"};' y

[04:00] <Todd> $ p6 'if "</spmm xxx" ~~ m| ("</"span) | {say "y"}else{say "n"};' n

[04:00] <Todd> Thank you!

[04:00] <skids> np

[04:04] *** w_richard_w1 left
[04:10] *** w_richard_w joined
[04:15] <b2gills> m: if "</span xxx" ~~ /"</span"/ {say "y"}else{say "n"};

[04:15] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «y␤»

[04:34] *** molaf left
[04:43] *** curan joined
[04:56] *** sno left
[05:10] *** troys left
[05:16] *** jmerelo joined
[05:18] *** xtreak joined
[05:35] *** raschipi left
[05:35] *** shareable6 joined
[05:38] *** w_richard_w left
[05:39] *** notable6 left
[05:39] *** unicodable6 left
[05:39] *** squashable6 left
[05:39] *** bloatable6 left
[05:39] *** nativecallable6 left
[05:39] *** benchable6 left
[05:39] *** quotable6 left
[05:39] *** statisfiable6 left
[05:39] *** bisectable6 left
[05:39] *** greppable6 left
[05:39] *** coverable6 left
[05:39] *** undersightable6 left
[05:39] *** reportable6 left
[05:39] *** committable6 left
[05:39] *** shareable6 left
[05:39] *** releasable6 left
[05:40] *** evalable6 left
[05:41] *** ChoHag left
[05:42] *** ChoHag joined
[05:42] *** nativecallable6 joined
[05:42] *** ChanServ sets mode: +v nativecallable6

[05:42] *** bloatable6 joined
[05:42] *** ChanServ sets mode: +v bloatable6

[05:43] *** quotable6 joined
[05:43] *** ChanServ sets mode: +v quotable6

[05:43] *** coverable6 joined
[05:43] *** releasable6 joined
[05:43] *** greppable6 joined
[05:43] *** reportable6 joined
[05:43] *** ChanServ sets mode: +v reportable6

[05:43] *** bisectable6 joined
[05:43] *** notable6 joined
[05:43] *** ChanServ sets mode: +v notable6

[05:43] *** committable6 joined
[05:43] *** evalable6 joined
[05:43] *** ChanServ sets mode: +v evalable6

[05:43] *** unicodable6 joined
[05:43] *** benchable6 joined
[05:43] *** statisfiable6 joined
[05:43] *** squashable6 joined
[05:43] *** undersightable6 joined
[05:43] *** ChanServ sets mode: +v undersightable6

[05:43] *** shareable6 joined
[05:48] *** sno joined
[05:50] *** Todd left
[05:52] <lookatme> Hi, why I can't declare a subset of Code ?

[05:52] <lookatme> m: subset WalkCb of Code where { .signature ~~ :(Int, Int); }; sub (WalkCb) { }

[05:52] <camelia> rakudo-moar 2f4b2f428: ( no output )

[05:53] <lookatme> m: subset WalkCb of Callable where { .signature ~~ :(Int, Int); }; sub (WalkCb) { }

[05:53] <camelia> rakudo-moar 2f4b2f428: ( no output )

[05:53] <lookatme> :/ strange

[05:55] <lookatme> bisectable6: subset WalkCb of Code where { .signature ~~ :(Int, Int); }; sub (WalkCb) { }

[05:55] <bisectable6> lookatme, On both starting points (old=2015.12 new=2f4b2f4) the exit code is 0 and the output is identical as well

[05:55] <bisectable6> lookatme, Output on both points: «»

[05:57] <lookatme> It's so wild, my rakudo report `===SORRY!=== Cannot look up attributes in a WalkCb type object` for the first sentence :/

[06:00] <Geth> ¦ doc: 1b68121105 | (JJ Merelo)++ | doc/Language/traps.pod6

[06:00] <Geth> ¦ doc: Adds introduction to the Cool section of traps

[06:00] <Geth> ¦ doc: 

[06:00] <Geth> ¦ doc: Along the lines suggested by @AlexDaniel. After 29 comments and half a

[06:00] <Geth> ¦ doc: dozen of commits, it's difficult to say if this is solved or not, but

[06:00] <synopsebot> Link: https://doc.perl6.org/language/traps

[06:00] <Geth> ¦ doc: I think that it addresses @alexdaniel's (by copying it almost

[06:00] <Geth> ¦ doc: literally) and thus closes #992.

[06:00] <Geth> ¦ doc: 

[06:00] <Geth> ¦ doc: I would suggest not to open this again. If there's a trap related to

[06:00] <Geth> ¦ doc: Cool and Lists or Strings, please open a different issue and reference

[06:00] <Geth> ¦ doc: this one, #992, for additional information.

[06:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1b68121105

[06:01] <AlexDaniel> jmerelo: I'm happy that it's closed

[06:01] <jmerelo> lookatme: you asked something similar some time ago, and I asked in StackOverflow https://stackoverflow.com/questions/50384890/subsetting-blocks-or-callables-in-general Please check out the answers there, maybe one will help

[06:01] <jmerelo> AlexDaniel: you pretty much provided the closing solution. 

[06:02] <jmerelo> AlexDaniel: issues such as these are the most difficult. Maybe I'll add it to my May list :-)

[06:02] *** wamba joined
[06:03] <lookatme> jmerelo, not that question

[06:03] <lookatme> It raised error when I am using `subset WalkCb of Code where { .signature ~~ :(Int, Int); }; sub (WalkCb) { }`

[06:03] <lookatme> for test

[06:03] <jmerelo> lookatme: I know, but probably there's something in the answers that helps you. Besides, next question in StackOverflow will be #700 for perl 6 https://stackoverflow.com/questions/tagged/perl6

[06:05] <lookatme> jmerelo, because I am just aware Callable not have a signature method, so I am not sure this is right using `of Callable`

[06:07] <jmerelo> lookatme: well, you have to qualify a subset using what's in the subset. But what's exactly what you want to do? Why do you want to do that?

[06:08] <lookatme> jmerelo, declare a callable type can reuse somewhere

[06:10] <El_Che> lookatme: create a role that consumes the calleble role?

[06:12] <lookatme> m: subset WalkCb of Code where { .signature ~~ :(Int, Int); }; sub (WalkCb) { }

[06:12] <camelia> rakudo-moar 2f4b2f428: ( no output )

[06:12] <lookatme> El_Che, Above is right, but not work for my rakudo currently

[06:12] *** sauvin joined
[06:13] <lookatme> I just ask why ..

[06:13] <jmerelo> lookatme: which version of Rakudo are you using? Can't you upgrade?

[06:15] <lookatme> It's 2018.04

[06:16] <lookatme> I compile from source

[06:16] <lookatme> maybe I should make a fresh update :)

[06:16] <lookatme> when 2018.05 ready

[06:17] <El_Che> should be soonish

[06:17] <El_Che> although I don't know if it's a bug

[06:18] *** w_richard_w joined
[06:20] <lookatme> okay, just ignore it currently

[06:22] *** domidumont joined
[06:22] <Geth> ¦ doc: JJ self-assigned LTA example of using The $ Variable more than once https://github.com/perl6/doc/issues/1864

[06:22] <lookatme> another problem occurred, I can not using this subset in NativeCall sub declare :)

[06:24] *** imcsk8 left
[06:24] *** imcsk8 joined
[06:24] <lookatme> maybe I should fill an issue when off work :)

[06:24] <lookatme> Is this problem reported ?

[06:24] <lookatme> The error: Type check failed in binding to parameter '$sig'; expected Signature but got Any (Any)

[06:25] <lookatme> Just using a Callable subset in signature:　sub uv_close(Handle, CloseCb) is native(&find-uv) { * }

[06:28] *** domidumont left
[06:28] *** domidumont joined
[06:32] *** DeepIO_ left
[06:39] *** DeepIO joined
[06:39] <AlexDaniel> squashable6: next

[06:39] <squashable6> AlexDaniel, Next SQUASHathon in 10 days and ≈3 hours (2018-06-02 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[06:40] <AlexDaniel> why do I use ⌁ as a range operator?

[06:51] *** skids left
[06:52] *** w_richard_w left
[07:01] *** abraxxa joined
[07:05] <Geth> ¦ doc: 4cc2a7f252 | (JJ Merelo)++ | doc/Language/traps.pod6

[07:05] <Geth> ¦ doc: Fixes grammar, thanks @vyncemontgomery for the tip

[07:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4cc2a7f252

[07:05] <synopsebot> Link: https://doc.perl6.org/language/traps

[07:11] *** abraxxa left
[07:12] *** DeepIO left
[07:12] *** abraxxa joined
[07:12] *** shareable6 left
[07:13] *** DeepIO joined
[07:13] *** DeepIO left
[07:14] *** ChoHag left
[07:16] *** w_richard_w joined
[07:17] <jmerelo> AlexDaniel: because it's cool. It's the Harry Potter operator.

[07:17] *** robertle joined
[07:18] <AlexDaniel> jmerelo: ✨

[07:20] *** DataLinkDroid4 is now known as DataLinkDroid

[07:23] *** wamba left
[07:26] *** HaraldJoerg joined
[07:27] *** dakkar joined
[07:30] <Geth> ¦ doc: fd7e010046 | (JJ Merelo)++ | 2 files

[07:30] <Geth> ¦ doc: Changes example of re-use of $ variable

[07:30] <Geth> ¦ doc: 

[07:30] <Geth> ¦ doc: Basically following the suggestions in the OP by @jimav. The second

[07:30] <Geth> ¦ doc: suggestion in the comment is probably a bit too verbose for something

[07:30] <Geth> ¦ doc: we wouldn't want people to do anyway. This closes #1864.

[07:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fd7e010046

[07:35] *** rindolf joined
[07:38] <Kaiepi> m: say Blob.new(['a','b','c'].ords).decode

[07:38] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «a b c␤»

[07:38] *** Qwerasd joined
[07:38] <Kaiepi> m: say Blob.new('abc'.ords).decode

[07:38] <camelia> rakudo-moar 2f4b2f428: OUTPUT: «abc␤»

[07:38] <Kaiepi> why does the array include the spaces?

[07:39] *** DeepIO joined
[07:39] *** DeepIO left
[07:41] <Qwerasd> Hey, I'm trying to create a module and it has internal dependencies (The main file is in lib with then another folder containing extra files), but it's giving an error when I try to use the internal dependencies. 'use Foo::Bar' 'SORRY! Could not find Foo::Bar in' + list of locations

[07:42] <El_Che> when developing:

[07:42] <El_Che> perl6 -Ilib bin/your-script.p6

[07:42] <El_Che> or set PERL6LIB env variable toi your lib directory

[07:43] <robertle> I always forget that PERL6LIB does not use ':' as a separator...

[07:44] <El_Che> really?

[07:44] <El_Che> I only use it for my lib dir so I haven't been bitten

[07:44] <Qwerasd> How would I do that (Set PERL6LIB env variable)? Sorry.

[07:44] <El_Che> what does it use?

[07:44] <El_Che> Qwerasd: what OS do you run?

[07:44] <Qwerasd> MacOS

[07:45] <robertle> I am running linux, and I think it is ','

[07:45] <El_Che> export PERL6LIB=<your lib path here>

[07:45] <Kaiepi> or PERL6LIB=path perl6 ...

[07:45] <Kaiepi> for a  one off thing

[07:45] <El_Che> Kaiepi: no, that's not correct

[07:45] <Kaiepi> it's not?

[07:45] <El_Che> it's not setting the path to perl6, but adding the lib directory to the INC

[07:46] <Qwerasd> export PERL6LIB=/full/path/to/lib/ ?

[07:46] <El_Che> Qwerasd: yes

[07:46] *** ChoHag joined
[07:46] <El_Che> relative is ok if you're in the right place

[07:46] <Kaiepi> sorry

[07:46] <El_Che> but go go absolute

[07:46] <El_Che> https://docs.perl6.org/language/5to6-nutshell#index-entry-PERL6LIB-PERL6LIB

[07:47] <El_Che> Kaiepi: no sorry needed, just a misunderstanding :)

[07:50] *** darutoko joined
[08:05] *** eiro joined
[08:06] *** shareable6 joined
[08:06] *** ChanServ sets mode: +v shareable6

[08:09] * lizmat clickbaits https://p6weekly.wordpress.com/2018/05/21/2018-21-mitigating-denial/

[08:10] *** aindilis left
[08:10] *** aindilis joined
[08:16] *** xtreak left
[08:17] *** Kaiepi left
[08:20] *** Kaiepi joined
[08:22] *** wamba joined
[08:43] *** xtreak joined
[08:56] *** wamba left
[08:56] *** Qwerasd left
[09:01] *** wamba joined
[09:05] *** AllenCai joined
[09:10] *** w_richard_w left
[09:10] *** mcmillhj joined
[09:15] *** mcmillhj left
[09:18] *** AllenCai left
[09:23] *** TimToady left
[09:25] *** scimon joined
[09:28] *** xtreak left
[09:29] *** xtreak joined
[09:30] *** notostraca joined
[09:30] *** TimToady joined
[09:30] *** TEttinger left
[09:36] *** eliasr joined
[10:02] *** xtreak left
[10:02] *** dakkar left
[10:03] *** xtreak joined
[10:03] *** dakkar joined
[10:07] *** xtreak left
[10:19] *** xtreak joined
[10:23] <buggable> New CPAN upload: P5pack-0.0.5.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5pack:cpan:ELIZABETH

[10:39] *** lookatme left
[10:40] *** lookatme joined
[10:47] *** markong joined
[10:52] <eiro>  /wg #sympa 

[10:52] <eiro> sorry

[11:00] *** curan left
[11:03] *** araujo joined
[11:04] *** wamba left
[11:08] *** DeepIO joined
[11:08] *** DeepIO left
[11:09] *** shareable6 left
[11:13] *** ChoHag left
[11:20] *** cosimo left
[11:23] *** HaraldJoerg left
[11:24] *** HaraldJoerg joined
[11:27] *** lichtkind left
[11:27] *** domidumont left
[11:28] *** domidumont joined
[11:28] *** kurahaupo joined
[11:29] *** cosimo joined
[11:30] *** wamba joined
[11:31] *** Qwerasd joined
[11:32] <Qwerasd> I'm receiving a very context-less error of 'SORRY! Expected MAST::Frame, but didn't get one', with no stacktrace or anything.

[11:36] <moritz> try running with --ll-exception

[11:36] <moritz> but it sounds like a compiler bug one way or another

[11:38] <Geth> ¦ doc: a51897479e | (Luca Ferrari)++ | writing-docs/STYLEGUIDE.md

[11:38] <Geth> ¦ doc: Add 'filehandle' to the STYLEGUIDE.

[11:38] <Geth> ¦ doc: 

[11:38] <Geth> ¦ doc: See issue #2015.

[11:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a51897479e

[11:39] <Qwerasd> https://i.imgur.com/sDtol6t.png here's the stacktrace it spits out when I run with --ll-exception

[11:40] *** lichtkind joined
[11:40] <Qwerasd> For some context this error appeared after I introduced code using WebSocket::Client

[11:41] *** ChoHag joined
[11:43] *** [particle]1 joined
[11:43] *** [particle] left
[11:44] *** wamba left
[11:44] *** cosimo left
[11:45] *** cosimo joined
[11:47] <moritz> wow, that's... deep

[11:50] <Qwerasd> I guess I can try using Cro::WebSocket but I'm unsure of how well implemented it is.

[11:55] <jkramer> https://paste.pound-python.org/raw/q0lt8IQver3bqFEPKPXV/

[11:55] <jkramer> This tells me that "The iterator of this Seq is already in use/consumed by another Seq", even though I'm already using .cache and I can't see another Seq there

[11:56] <hahainternet> jkramer: i believe the lines.map produces a seq which you are not caching

[11:56] <hahainternet> you are caching the comb

[11:56] <hahainternet> i'm no expert however

[11:56] <jkramer> Ah yeah it's nested

[11:56] <jkramer> Just noticed that too

[11:57] <jkramer> Hmm but with a .cache on the comb as well as on the map outside doesn't help

[11:57] *** atroxaper left
[11:57] *** Ven`` joined
[11:57] <hahainternet> jkramer: at that point I think I need to admit defeat and let someone more experienced answer you :)

[11:57] <hahainternet> apologies

[11:58] <jkramer> Oh wait actually it did help. :)

[11:58] <hahainternet> \o/

[11:58] <jkramer> \o/

[11:58] <Ven``> o/

[11:58] <hahainternet> o7

[11:58] <hahainternet> note correct british salute

[11:58] <hahainternet> inferior american salute not encodable in ascii

[11:58] <hahainternet> ;)

[11:59] <robertle> looks like a correct british salute from behind to me... ;)

[11:59] <Qwerasd> o>

[12:00] <hahainternet> haha that's not far off really Qwerasd :)

[12:00] <Qwerasd> Indeed.

[12:02] <Ven``> is that the teapot salute?

[12:03] <jkramer> m: ("1", "6", "4", "8", "2", "7", "3", "5", "9").Seq.comb.&dd

[12:03] <camelia> rakudo-moar d1d31fd57: OUTPUT: «("1", " ", "6", " ", "4", " ", "8", " ", "2", " ", "7", " ", "3", " ", "5", " ", "9").Seq␤»

[12:04] <jkramer> Somehow .comb seems to turn this Seq into a string, joining the elements with spaces o_O

[12:04] <jkramer> m: ("1", "6", "4", "8", "2", "7", "3", "5", "9").Seq.List.comb.&dd

[12:04] <camelia> rakudo-moar d1d31fd57: OUTPUT: «("1", " ", "6", " ", "4", " ", "8", " ", "2", " ", "7", " ", "3", " ", "5", " ", "9").Seq␤»

[12:04] <jkramer> m: ("1", "6", "4", "8", "2", "7", "3", "5", "9").List.comb.&dd

[12:04] <camelia> rakudo-moar d1d31fd57: OUTPUT: «("1", " ", "6", " ", "4", " ", "8", " ", "2", " ", "7", " ", "3", " ", "5", " ", "9").Seq␤»

[12:04] <jkramer> What

[12:04] *** shareable6 joined
[12:04] *** ChanServ sets mode: +v shareable6

[12:04] <Ven``> jkramer: what's surprising?

[12:05] <Ven``> m: ("1", "6", "4", "8", "2", "7", "3", "5", "9").List.Str.say

[12:05] <camelia> rakudo-moar d1d31fd57: OUTPUT: «1 6 4 8 2 7 3 5 9␤»

[12:05] <Ven``> m: "1 6 4 8 2".comb.perl.say

[12:05] <camelia> rakudo-moar d1d31fd57: OUTPUT: «("1", " ", "6", " ", "4", " ", "8", " ", "2").Seq␤»

[12:05] <jkramer> Aaaaah goddamnit, brain fart :)

[12:05] <jkramer> I thought I was doing rotor :)

[12:06] <jkramer> I was debugging this for ~10min... -_-

[12:07] <hahainternet> is there a perl6 policy on warnings?

[12:07] <hahainternet> because calling comb on a Seq or List might be a good candidate

[12:09] *** wamba joined
[12:12] *** domidumont left
[12:14] *** domidumont joined
[12:16] *** itaipu joined
[12:27] *** xtreak left
[12:28] *** mcmillhj joined
[12:29] <Geth> ¦ doc: 019a264a26 | (Ben Davies)++ | 5 files

[12:29] <Geth> ¦ doc: Implement Perl 6 NBSP linter script

[12:29] <Geth> ¦ doc: 

[12:29] <Geth> ¦ doc: util/perl-nbsp.p6 lints each of the documentation files, checking for

[12:29] <Geth> ¦ doc: cases where Perl 6 is written with a regular space instead of a

[12:29] <Geth> ¦ doc: non-breaking one, and replaces it accordingly.

[12:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/019a264a26

[12:29] <Geth> ¦ doc: 3f4a40381f | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 5 files

[12:29] <Geth> ¦ doc: Merge pull request #2038 from Kaiepi/nbsp

[12:29] <Geth> ¦ doc: 

[12:29] <Geth> ¦ doc: Implement Perl 6 NBSP linter script

[12:29] <Geth> ¦ doc: Thanks for your patience!

[12:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3f4a40381f

[12:29] *** athenot joined
[12:30] *** andrzejku joined
[12:34] *** aindilis left
[12:34] *** aindilis joined
[12:38] *** Ven`` left
[12:44] *** zakharyas joined
[12:47] *** domidumont left
[12:47] *** domidumont joined
[12:53] <hahainternet> what's the 'correct' way to check if every item in a list matches one of a list of values?

[12:53] <hahainternet> i was trying to do it with junctions, but i think i've just confused myself

[12:55] *** Ven`` joined
[12:56] <Qwerasd> Do you not just want the eqv infix? hahainternet

[12:57] <hahainternet> Qwerasd: nah i'm checking whether each list element is one of another list, rather than checking two lists are equal

[12:57] <hahainternet> ie is "abcd" composed of only "a" and "c"?

[12:57] <hahainternet> i could write a regex of course, or even a grammar

[12:57] <hahainternet> but i don't think i grok how to use junctions properly

[12:58] <tobs> m: say so 'abcd'.comb.all ∈ <a c>

[12:58] <camelia> rakudo-moar d1d31fd57: OUTPUT: «False␤»

[12:58] <tobs> m: say so 'abcc'.comb.all ∈ <a c b>

[12:58] <camelia> rakudo-moar d1d31fd57: OUTPUT: «True␤»

[12:59] <hahainternet> oh interesting, i did not know of .all

[12:59] *** pmurias joined
[12:59] <Ven``> m: say so all('abcc'.comb) eq any('acb'.comb)

[12:59] <camelia> rakudo-moar d1d31fd57: OUTPUT: «True␤»

[12:59] <hahainternet> that's roughly what i was trying Ven`` but i don't know why that was failing

[12:59] <hahainternet> thank you for the examples tobs and Ven`` :)

[13:00] <pmurias> I have been porting a rakudo.js dependency to n-api today (so it works on the newest node.js) and it would be cool to have something like N-API in Perl 6

[13:01] <pmurias> so basically instead the often changing V8 internal they abstract it all behind a simple (portable across different JS vms) C API  

[13:01] <pmurias> https://nodejs.org/dist/latest-v10.x/docs/api/n-api.html

[13:04] *** aindilis left
[13:04] *** aindilis` joined
[13:06] *** aindilis` left
[13:06] *** jmerelo left
[13:07] <Ven``> pmurias: what do you need toying with the internals for? Serious question – isn't NQP low-level enough?

[13:08] *** athenot left
[13:13] <buggable> New CPAN upload: perl6-config-json-0.1.0.tar.gz by ROBERTLE https://cpan.metacpan.org/authors/id/R/RO/ROBERTLE/Perl6/perl6-config-json-0.1.0.tar.gz

[13:13] <mcmillhj> What would be the most idiomatic way to do something like an array concat during a recursive call? Something like the ++ operator from Haskell 

[13:13] *** Ven`` left
[13:17] *** assem joined
[13:19] <tobs> mcmillhj: how about just .append?

[13:19] <tobs> m: sub f (@a) { f(@a.append: rand) unless @a > 10 }; f(my @b); say @b

[13:19] <camelia> rakudo-moar d1d31fd57: OUTPUT: «[0.5432306478825039 0.4110160806945523 0.14650540002810652 0.7073301698002327 0.8007418496654223 0.6491922547289161 0.10411972214461196 0.3437942536968286 0.5148771653417428 0.22922980409320337 0.3470693404991614]␤»

[13:20] *** athenot joined
[13:22] *** aindilis joined
[13:22] *** domidumont left
[13:23] <mcmillhj> tobs: That doens't quite fit my use case since I am returning a List at each step of the recursive call: https://gist.github.com/mcmillhj/1d2f7d7cdc220453f1e5429890fec819

[13:23] *** domidumont joined
[13:24] <Qwerasd> The documentation for Cro::WebSocket::Client isn't very good. Can somebody help me figure out how to establish and receive from/send to the socket with it?

[13:28] <jnthn> Qwerasd: Indeed, it's missing something there. Call .messages on the connection to get a Supply of incoming connections, and .send to send a message

[13:29] <Qwerasd> Ah thank you!

[13:31] *** zakharyas left
[13:32] <jnthn> Qwerasd: Also opened https://github.com/croservices/cro/issues/70

[13:32] <tobs> mcmillhj: try sticking a "|" before the recursive call. That gives you a flat list.

[13:34] *** rouking left
[13:35] <tobs> Maybe I should look up what Floyd's triangle is first…

[13:37] <tobs> fwiw, you could also do

[13:37] <tobs> m: say (1..^Inf).rotor(1..^Inf)[^10]

[13:37] <camelia> rakudo-moar d1d31fd57: OUTPUT: «((1) (2 3) (4 5 6) (7 8 9 10) (11 12 13 14 15) (16 17 18 19 20 21) (22 23 24 25 26 27 28) (29 30 31 32 33 34 35 36) (37 38 39 40 41 42 43 44 45) (46 47 48 49 50 51 52 53 54 55))␤»

[13:38] *** wamba left
[13:40] <mcmillhj> tobs: ooh, that looks nice. Thanks tobs 

[13:40] *** easyAnalyst joined
[13:41] <Qwerasd> Huh, more problems with insufficient documentation for Cro::Websocket::Client, connecting through WSS requires a certificate apparently but that isn't shown in the docs.

[13:41] *** assem left
[13:41] <Qwerasd> It errors with "Cannot connect through wss without certificate specified"

[13:42] *** lucasb joined
[13:42] <Summertime> I wanna get the list (1 1 2 2 3 3 etc), one way I've managed that is ($++ div 2 xx *).skip: 2; another being (2..*).map: * div 2;

[13:42] <Summertime> is there a cleaner way?

[13:47] <Qwerasd> 1,1,->$a,$b {$a+1}...*

[13:47] <tobs> mcmillhj: this should be closer to what you wanted. https://hastebin.com/igigutepap.pl (but note I'm still not comfortable with the containers in Perl 6)

[13:47] *** easyAnalyst_ joined
[13:48] <Qwerasd> m: say (1,1,->$a,$ {$a+1}...*)[^10]

[13:48] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(1 1 2 2 3 3 4 4 5 5)␤»

[13:48] <tobs> or even drop the "[ ]" in the return

[13:49] *** easyAnalyst__ joined
[13:50] *** Kaiepi left
[13:50] *** easyAnalyst left
[13:51] <Summertime> I do like getting to use ..., but at the same time, using the generator signature to skip an element makes me feel a bit weird whenever I do it

[13:51] *** Kaiepi joined
[13:52] <Summertime> nice to learn that a plain $ can be used in the sig though, learn something new every day

[13:52] *** easyAnalyst_ left
[13:53] <lucasb> m: say (slip $_, $_ for 1..5)

[13:53] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(1 1 2 2 3 3 4 4 5 5)␤»

[13:53] <Qwerasd> woah

[13:53] <Summertime> oh nice

[13:53] <Qwerasd> m: say (slip $_, $_ for 1..*)[^10]

[13:53] <Qwerasd> Not infinite

[13:54] <Summertime> oh no

[13:54] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(timeout)»

[13:54] <Qwerasd> m: say (slip $_, $_ for 1..*[^10])

[13:54] <camelia> rakudo-moar d1d31fd57: OUTPUT: «({ ... } { ... })␤»

[13:54] <Qwerasd> m: say (slip $_, $_ for (1..*[^10]))

[13:54] <camelia> rakudo-moar d1d31fd57: OUTPUT: «({ ... } { ... })␤»

[13:54] <Qwerasd> huh

[13:54] <Qwerasd> oh

[13:54] <Qwerasd> m: say (slip $_, $_ for (1..*)[^10])

[13:54] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10)␤»

[13:55] <Summertime> tempting to break the infinite requirement and just use a high value so I can use that solution and pretend its lazy

[13:55] <Qwerasd> Lol

[13:56] *** easyAnalyst__ left
[13:58] *** Kaiepi left
[13:58] <Qwerasd> Can someone help me figure this out? Cro::Websocket::Client.new when being used with WSS websockets seems to require a certificate of some kind, but I'm not sure how to go about providing it one.

[13:58] *** Zoffix joined
[13:59] <mcmillhj> tobs: thanks, this is a lot cleaner that what I was using which was [floyds-triangle(n-1)].push: $start ^.. $end;

[14:00] <Zoffix> m: say (|(++$, ++$) xx ∞).head: 100

[14:00] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 4…»

[14:00] <Qwerasd> Amazing wizardry.

[14:00] *** Kaiepi joined
[14:00] <benjikun> I miss so many of these solutions in my own head lol

[14:02] <Zoffix> m: say ((($+=½).Int) xx ∞).head: 100

[14:02] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45…»

[14:02] <Zoffix> m: say ((($+=½).Int) xx ∞).skip.head: 100

[14:02] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 4…»

[14:02] <benjikun> hang the witch

[14:02] <Zoffix> :)

[14:02] <benjikun> lol

[14:05] <Summertime> m: say (flat [Z] (1..*) xx 2)[^10]

[14:05] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(1 1 2 2 3 3 4 4 5 5)␤»

[14:05] <Qwerasd> lol that's a simple way

[14:05] <Zoffix> m: say (flat ^∞ Z, ^∞).head: 100

[14:05] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(0 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 …»

[14:05] <Summertime> I am running out of places to take notes at this point

[14:06] <Summertime> oh geez

[14:06] <Summertime> oh I get it I think

[14:07] <Qwerasd> Can someone help me with that Cro::WebSocket::Client thing? I can't figure it out for the life of me.

[14:07] <Qwerasd> Cro::Websocket::Client.new when being used with WSS websockets seems to require a certificate of some kind, but I'm not sure how to go about providing it one.

[14:08] <Summertime> https://github.com/croservices/cro-websocket/blob/4c6034d3caf4725375c8dcd02670b58e7d255516/lib/Cro/WebSocket/Client.pm6#L42

[14:08] <Summertime> and the formate of ca is...

[14:08] <Zoffix> Qwerasd: did you select "use https" option when creating that app with crostub or whatever that script is?

[14:09] <Zoffix> Qwerasd: it set up a cert for me automagically when I did it

[14:09] <Qwerasd> Huh?

[14:09] <Zoffix> Qwerasd: like this one: http://mi.cro.services/docs/intro/getstarted#Extra_credit:_use_%60cro_stub%60_and_%60cro_run%60

[14:10] <Zoffix> `cro stub http blah blah`.. It asks you at some point if you want https enabled or something

[14:10] <Qwerasd> Oh I didn't use that

[14:10] <Zoffix> ah

[14:10] <Zoffix> Qwerasd: maybe run it and see what code it generates and maybe in that code there's your missing piece that sets up the cert?

[14:11] <Zoffix> hm it creates `resources/fake-tls` dir

[14:11] <Zoffix> with certs up in it

[14:11] <Summertime> that'd be for a websocket server though right?

[14:12] <Zoffix> Ah, right

[14:14] <Qwerasd> Yeah that's for a server.

[14:15] <Summertime> too many layers of indirection D: currently here https://github.com/croservices/cro-http/blob/master/lib/Cro/HTTP/Client.pm6#L505

[14:17] *** psychoslave joined
[14:18] <Zoffix> I'd guess it all ends at IO::Socket::SSL::Async which takes certificate-file and private-key-file named args

[14:18] <Summertime> in this case it should just take the certificate file to verify against

[14:18] <Qwerasd> Why does the client need a certificate in the first place?

[14:20] <Summertime> a certificate is practically the client side of a secure connection

[14:20] <Summertime> you use the cert to encrypt your request before sending it, ensuring only the server with the private key can decrypt

[14:20] <Summertime> normally this is negotiated as part of https... its weird that it expects otherwise

[14:21] <Qwerasd> I still don't understand how to obtain a certificate to provide to the constructor.

[14:21] <Summertime> you can just download it from your browser I believe

[14:22] <Zoffix> Qwerasd: FWIW there's also #cro channel. It's mostly same people as here, but maybe the question will be more noticable there, since there's fewer people there and someone might know?

[14:22] <Summertime> in firefox, rightclick, view page info, security tab, view certificate, details tab, export

[14:28] *** Zoffix left
[14:36] *** aborazmeh joined
[14:36] *** aborazmeh left
[14:36] *** aborazmeh joined
[14:54] *** comborico1611 joined
[15:06] <Qwerasd> https://i.imgur.com/LT3Ngh6.png still yields "Cannot connect through wss without certificate specified"

[15:06] <Qwerasd> What am I doing wrong?

[15:12] *** skids joined
[15:14] <Qwerasd> nvm

[15:15] *** aborazmeh left
[15:15] *** dogbert17 joined
[15:18] *** jmerelo joined
[15:26] *** robertle left
[15:27] <tbrowder_>  hi, #perl6

[15:29] *** irco left
[15:30] *** irco joined
[15:31] *** kurahaupo left
[15:31] <tbrowder_> is there any way to use a unicode value for a char directly in a p6 string similar to the use of \x[] in a regex?

[15:31] *** domidumont left
[15:36] <jkramer> m: say "\c[482]

[15:36] <camelia> rakudo-moar d1d31fd57: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3say "\c[482]7⏏5<EOL>␤    expecting any of:␤        argument l…»

[15:36] <jkramer> m: say "\c[482]"

[15:36] <camelia> rakudo-moar d1d31fd57: OUTPUT: «Ǣ␤»

[15:36] <jkramer> m: say "\x1E2";

[15:36] <camelia> rakudo-moar d1d31fd57: OUTPUT: «Ǣ␤»

[15:36] *** Qwerasd left
[15:36] <jkramer> m: say "\c[PENGUIN]";

[15:36] <camelia> rakudo-moar d1d31fd57: OUTPUT: «🐧␤»

[15:41] <jkramer> m: say "\c[woman gesturing ok]"

[15:41] <camelia> rakudo-moar d1d31fd57: OUTPUT: «🙆‍♀️␤»

[15:42] <jkramer> say "\c[man facepalming]"

[15:42] <evalable6> jkramer, rakudo-moar d1d31fd57: OUTPUT: «🤦‍♂️␤»

[15:53] <tbrowder_> ok, thanks, folks!

[15:55] *** molaf joined
[15:57] *** abraxxa left
[15:59] *** raschipi joined
[16:00] *** domidumont joined
[16:00] *** lizmat left
[16:02] *** lucasb left
[16:06] *** mcmillhj left
[16:10] *** comborico1611 left
[16:10] *** sjoshi joined
[16:12] *** mcmillhj joined
[16:12] *** mcmillhj left
[16:22] *** mcmillhj joined
[16:24] *** lizmat joined
[16:27] *** mcmillhj left
[16:28] *** athenot left
[16:29] *** AlexDaniel left
[16:29] <raschipi> u: ✨

[16:29] <unicodable6> raschipi, U+2728 SPARKLES [So] (✨)

[16:31] *** mcmillhj joined
[16:33] *** scimon left
[16:41] *** athenot joined
[16:45] *** sno left
[16:46] *** dakkar left
[16:50] <lizmat> https://www.perl.com/article/the-2018-perl-developer-survey-results/   # glad to see that Perl 6 is *not* another language

[16:52] <lizmat> weekly: https://www.perl.com/article/the-2018-perl-developer-survey-results/ 

[16:52] <notable6> lizmat, Noted!

[16:52] <El_Che> Here we have a slight change from 2017 that does not bode well for Perl 6, at least in this pool of respondents. The yes option dropped 9% from last year.

[16:53] <buggable> New CPAN upload: P5times-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5times:cpan:ELIZABETH

[16:53] *** robertle joined
[16:54] <lizmat> El_Che: true, but my feeling is that many Perl 6 users didn't bother with a clearly Perl 5 centric survey

[16:54] <El_Che> yes, probably

[16:55] <lizmat> "we received quite a few (negative) responses related to the naming of Perl 6"

[16:56] <mst> I hadn't even realised there was a survey tbh

[16:56] <El_Che>  In the share some thoughts section we received quite a few (negative) responses related to the naming of Perl 6

[16:56] <El_Che> (prospects on the Perl community)

[16:56] <mst> one year somebody used that section to share the thought that everything would be improved if somebody murdered me

[16:56] *** lucasb joined
[16:57] <El_Che> mst: I am pretty sure we agreed to write that with a bunch op people

[16:57] <El_Che> :P

[16:57] *** pilne joined
[16:57] <El_Che> it's like the volunteer-step-forward while everyone takes a step backwards :)

[16:59] <dylanwh> or that time stevan got everyone to vote for mst's hair color to be "bald"

[17:04] *** mahafyi joined
[17:07] <El_Che> lol

[17:08] <El_Che> releasable6: status

[17:08] <releasable6> El_Che, Next release will happen when it's ready. 0 blockers. 115 out of 122 commits logged

[17:08] <releasable6> El_Che, Details: https://gist.github.com/83506c03878b2c6dc104d7110216a9ca

[17:08] <El_Che> AlexDaniel`: looking good?

[17:10] *** ExtraCrispy left
[17:12] *** sjoshi left
[17:13] *** markong left
[17:14] *** molaf left
[17:15] *** margeas joined
[17:15] *** molaf joined
[17:18] *** lucasb left
[17:22] *** lucasb joined
[17:22] <lucasb> m: say ('abc' ~~ m/\w/).list

[17:22] <camelia> rakudo-moar d1d31fd57: OUTPUT: «()␤»

[17:22] *** natrys joined
[17:23] *** kurahaupo joined
[17:23] <lucasb> ^^ Isn't it a little unfortunate that matchs doesn't populate its 'list' slot in this case? (when no capturing, nor global match)

[17:23] <tbrowder_> i’m trying to use unicode properties in a regex mixed with other char selections:

[17:24] <jmerelo> lucasb: A Match contains a list...

[17:24] <jmerelo> m: say ('abc' ~~ m/\w/).perl

[17:24] <camelia> rakudo-moar d1d31fd57: OUTPUT: «Match.new(list => (), pos => 1, orig => "abc", made => Any, hash => Map.new(()), from => 0)␤»

[17:24] <skids> m: say ("abc" ~~ m:g/\w/).list

[17:24] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(｢a｣ ｢b｣ ｢c｣)␤»

[17:25] <jmerelo> m: say ('abc' ~~ m/(\w)/).perl

[17:25] <camelia> rakudo-moar d1d31fd57: OUTPUT: «Match.new(from => 0, made => Any, orig => "abc", pos => 1, list => (Match.new(from => 0, made => Any, orig => "abc", pos => 1, list => (), hash => Map.new(())),), hash => Map.new(()))␤»

[17:25] *** margeas left
[17:26] *** sjoshi joined
[17:26] *** markong joined
[17:26] <jmerelo> tbrowder_: and? Not successful so far?

[17:27] <lucasb> Thanks, but I'm talking specifically about the case where no capturing, nor global match was used

[17:27] <skids> m: say ("abc" ~~ m/\w/)[]

[17:27] <camelia> rakudo-moar d1d31fd57: OUTPUT: «｢a｣␤»

[17:27] <tbrowder_> m: my $r = /<[ <:Zs> ] - [\x[00A0] ]>+/; say “\x[0020]” ~~ $r

[17:27] <camelia> rakudo-moar d1d31fd57: OUTPUT: «Nil␤»

[17:28] <lucasb> skids: thanks! is there a name for that trailing "[]" ?

[17:28] <skids> zen slice

[17:30] *** Zoffix joined
[17:30] <lucasb> m: say (42[], 42[*]).perl

[17:30] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(42, (42,))␤»

[17:30] <tbrowder_> once more:

[17:30] <Zoffix> tbrowder_: you got too many brackets

[17:30] <Zoffix> m: my $r = /<:Zs - [\x[A0]]>+/; say “\x[0020]” ~~ $r

[17:30] <camelia> rakudo-moar d1d31fd57: OUTPUT: «｢ ｣␤»

[17:31] <tbrowder_> ok, great! now another try

[17:32] <tbrowder_> m: my $r = /< \x[0009] :Zs - [\x[A0]]>+/; say “\t” ~~ $r

[17:32] <camelia> rakudo-moar d1d31fd57: OUTPUT: «Nil␤»

[17:32] <Zoffix> m: my $r = /<:Zs - [\x[A0]]>/; say “\x[0020]\xA0\t\nbar” ~~ m:g/<$r>/

[17:32] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(｢ ｣)␤»

[17:32] <Zoffix> Kinda was expecting multiple matches there...

[17:32] <tbrowder_> i want to add the tab char to mix of Zs chars

[17:33] <Zoffix> tbrowder_: now you got too few brackets

[17:33] <Zoffix> m: my $r = /<:Zs + [\x9] - [\xA0]>/; say “\x[0020]\xA0\t\nbar” ~~ m:g/<$r>/

[17:33] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(｢ ｣ ｢  ｣)␤»

[17:33] <Zoffix> u: Zs

[17:33] <unicodable6> Zoffix, U+0020 SPACE [Zs] ( )

[17:33] <unicodable6> Zoffix, U+00A0 NO-BREAK SPACE [Zs] ( )

[17:33] <unicodable6> Zoffix, 17 characters in total: https://gist.github.com/e4a8de5726046c2104466abbe9175bde

[17:33] <Zoffix> m: my $r = /<:Zs + [\x9] - [\xA0]>/; say “\x[0020]\xA0\t\n\x[2000]bar” ~~ m:g/<$r>/

[17:33] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(｢ ｣ ｢  ｣ ｢ ｣)␤»

[17:34] <Zoffix> m: my $r = /<:Zs + [\x9] - [\xA0]>/; say (“\x[0020]\xA0\t\n\x[2000]bar” ~~ m:g/<$r>/).Str.perl

[17:34] <camelia> rakudo-moar d1d31fd57: OUTPUT: «"  \t  "␤»

[17:34] <Zoffix> m: my $r = /<:Zs + [\x9] - [\xA0]>/; say (“\x[0020]\xA0\t\n\x[2000]bar” ~~ m:g/<$r>/)».Str».ord».base(16)

[17:34] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(20 9 2002)␤»

[17:35] <Zoffix> lucasb: that's a heavy Perl 5 accent. In Perl 6, it's written as 'abc'.comb: /\w/

[17:35] <Zoffix> m: say 'abc'.comb: /\w/

[17:35] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(a b c)␤»

[17:35] <tbrowder_> ok, the docs don't show the weird mix of brackets--i'm trying to make it like an integrated char class with exceptions

[17:35] <Geth> ¦ doc: 9827475f59 | (JJ Merelo)++ | doc/Language/subscripts.pod6

[17:35] <Geth> ¦ doc: Adds indexing for Zen slices; minor revs closes #2044

[17:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9827475f59

[17:35] <synopsebot> Link: https://doc.perl6.org/language/subscripts

[17:38] <lucasb> My point was that the 'list' slot from Match (inherited from Capture) could be populate with the original Match object when neither global nor capturing was used, was a convenience to the user

[17:38] <lucasb> m: .say for 'abc' ~~ m/\w/

[17:38] <camelia> rakudo-moar d1d31fd57: ( no output )

[17:38] <lucasb> ^^ neither xxx[] nor xxx[*] will help me in this case, I'll have to be more verbose than that

[17:39] <Geth> ¦ doc: b6038e436d | (JJ Merelo)++ | writing-docs/STYLEGUIDE.md

[17:39] <Geth> ¦ doc: Clarification about dashed/spaced forms

[17:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b6038e436d

[17:39] <tbrowder_> Zoffix: thnx, looks like the Zs has to be first:

[17:39] <lucasb> P5 at least returns a truth value: say for 'abc' =~ /\w/  # 1

[17:40] <lucasb> *as a convenience

[17:40] <tbrowder_> m: my $reg = /<:Zs + [\x[0009]] - [ \x[00A0] \x[202F] ]>+ /; say "   " ~ $r

[17:40] <camelia> rakudo-moar d1d31fd57: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$r' is not declared␤at <tmp>:1␤------> 3 [ \x[00A0] \x[202F] ]>+ /; say "   " ~ 7⏏5$r␤»

[17:40] <tbrowder_> m: my $reg = /<:Zs + [\x[0009]] - [ \x[00A0] \x[202F] ]>+ /; say "   " ~ $reg

[17:40] <camelia> rakudo-moar d1d31fd57: OUTPUT: «Regex object coerced to string (please use .gist or .perl to do that)␤   ␤  in block <unit> at <tmp> line 1␤»

[17:41] <tbrowder_> m: my $reg = /<:Zs + [\x[0009]] - [ \x[00A0] \x[202F] ]>+ /;  say "   " ~~ $reg

[17:41] <camelia> rakudo-moar d1d31fd57: OUTPUT: «｢   ｣␤»

[17:41] <tbrowder_> bingo!

[17:42] <Geth> ¦ doc: f9c3300724 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[17:42] <Geth> ¦ doc: Add more examples for regex character class building

[17:42] <Geth> ¦ doc: 

[17:42] <Geth> ¦ doc: https://irclog.perlgeek.de/perl6/2018-05-22#i_16194042

[17:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f9c3300724

[17:42] <synopsebot> Link: https://doc.perl6.org/language/regexes

[17:42] *** shareable6 left
[17:42] *** Khisanth left
[17:45] <Zoffix> s: ("x" ~~ /./), 'iterator', \()

[17:45] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/d1d31fd57/src/core/Any.pm6#L128

[17:47] <Zoffix> lucasb: briefly looking at it, I think making .list return the match object itself would create ambiguity between whether the Match object has any position captures or not.

[17:47] <Zoffix> P5 is a different story, it doesn't have any Match objects in its regex matches

[17:48] *** jast left
[17:48] <Zoffix> m: .say for 'abc'.comb: /\w/

[17:48] <camelia> rakudo-moar d1d31fd57: OUTPUT: «a␤b␤c␤»

[17:49] <tbrowder_> m: my $reg = /<:Zs + [\x[0009]] - [ \x[00A0] \x[202F] ]>+ /;  say "      " ~~ $reg

[17:49] <camelia> rakudo-moar d1d31fd57: OUTPUT: «｢      ｣␤»

[17:50] *** jast joined
[17:52] <Zoffix> tbrowder_: :Zs doesn't have to be first tho

[17:52] <Zoffix> m: my $reg = /<[\x[0009]] + :Zs - [ \x[00A0] \x[202F] ]>+ /;  say ("      " ~~ $reg)».Str».ord».base: 16

[17:52] <camelia> rakudo-moar d1d31fd57: OUTPUT: «()␤»

[17:52] <tbrowder_> m: my $reg = /<[\x[0009]] + :Zs - [ \x[00A0] \x[202F] ]>+ /;  say "      " ~~ $reg

[17:52] <camelia> rakudo-moar d1d31fd57: OUTPUT: «｢      ｣␤»

[17:52] <tbrowder_> ok!

[17:53] <Zoffix> m: my $reg = /<[\x[0009]] + :Zs - [ \x[00A0] \x[202F] ]> /;  say ("      " ~~ m:g/<$reg>/)».Str».ord».base: 16

[17:53] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(20 20 20 20 20 20)␤»

[17:54] <tbrowder_> i guess what's confusing is the char class is usually shown as <[         ]>  with stuff inside in separate groups if needed

[17:54] *** mahafyi left
[17:55] <tbrowder_> the grouping we just did doesn't fit that syntax

[17:55] *** Khisanth joined
[17:55] <tbrowder_> or maybe it's not exactly a char class

[17:55] <tbrowder_> ??

[17:56] <jmerelo> s: lazy-if

[17:56] <SourceBaby> jmerelo, Something's wrong: ␤ERR: ===SORRY!=== Error while compiling -e␤Undeclared routine:␤    lazy-if used at line 6␤␤

[17:56] <tbrowder_> anyway, i can't make it work in nqp yet, bummer

[17:56] <jmerelo> s: .lazy-if

[17:56] <SourceBaby> jmerelo, Something's wrong: ␤ERR: Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at -e line 6␤␤

[17:56] <jmerelo> s: Any.lazy-if

[17:56] <SourceBaby> jmerelo, Something's wrong: ␤ERR: Too few positionals passed; expected 2 arguments but got 1␤  in block <unit> at -e line 6␤␤

[17:57] <Zoffix> jmerelo: what are you trying to look up?

[17:57] <tbrowder_> nqp: say("foo")

[17:57] <camelia> nqp-moarvm: OUTPUT: «foo␤»

[17:57] <jmerelo> Zoffix: lazy-if

[17:57] <Zoffix> s: &lazy-if

[17:57] <SourceBaby> Zoffix, Something's wrong: ␤ERR: ===SORRY!=== Error while compiling -e␤Undeclared routine:␤    lazy-if used at line 6␤␤

[17:58] <Zoffix> No such routine

[17:58] <timotimo> m: say Any.^lookup("lazy-if")

[17:58] <camelia> rakudo-moar d1d31fd57: OUTPUT: «lazy-if␤»

[17:58] <timotimo> m: say Any.^lookup("lazy-if").perl

[17:58] <camelia> rakudo-moar d1d31fd57: OUTPUT: «method lazy-if ($: $flag, *%_) { #`(Method|42662728) ... }␤»

[17:58] <timotimo> s: Any, "lazy-if", \(1)

[17:58] <SourceBaby> timotimo, Sauce is at https://github.com/rakudo/rakudo/blob/d1d31fd57/src/core/Any.pm6#L472

[17:58] <timotimo> s: Array.new, "lazy-if", \(1)

[17:58] <SourceBaby> timotimo, Sauce is at https://github.com/rakudo/rakudo/blob/d1d31fd57/src/core/Iterable.pm6#L82

[17:58] <lucasb> Zoffix: thanks. I understand the ambiguity, and in some sense, it was exactly what I was proposing

[17:59] <tbrowder_> nqp: my $r := /<[\x[0009]] + :Zs - [ \x[00A0] \x[202F] ]>+ /;

[17:59] <camelia> nqp-moarvm: ( no output )

[17:59] <jmerelo> timotimo: this is so going to StackOverflow...

[17:59] <Zoffix> jmerelo: lazy-if isn't part of the spec though.

[18:00] <timotimo> what is?

[18:00] <jmerelo> timotimo: sourcebaby queries. I just can't figure them out...

[18:00] <jmerelo> Just a sec

[18:00] <tbrowder_> nqp: my $r := /<:Zs + [\x[0009]] - [ \x[00A0] \x[202F] ]>+ /;

[18:00] <camelia> nqp-moarvm: ( no output )

[18:02] <Zoffix> jmerelo: they're just Perl 6 code. You're calling a Perl 6 function with arguments. The valid arguments are:  :(Callable:D \to-lookup, Capture \args?)  and :(Mu \object, Str:D \method-name, Capture \args?)

[18:02] <Zoffix> And if you're trusted by the bot, you can use more advanced expressions like `do { }` statements

[18:03] *** wamba joined
[18:03] <Zoffix> s: (&say, &put, &note, &list, &pair).pick(2).head, \()

[18:04] <Zoffix> ..

[18:04] <jmerelo> Zoffix: thanks! 

[18:04] <jmerelo> Already posted to SO, too: https://stackoverflow.com/questions/50473916/what-is-the-syntax-and-correct-way-of-using-sourcebaby-one-of-the-whateverable

[18:04] <Zoffix> And it's not one of Whateverables.

[18:04] * Zoffix posts the answer.

[18:05] <jmerelo> Zoffix: so it's in another bot herd?

[18:05] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/d1d31fd57/src/core/io_operators.pm6#L45

[18:05] <Zoffix> SourceBaby: help

[18:05] <SourceBaby> Zoffix, Use s: trigger with args to give to sourcery sub. e.g. s: Int, 'base'. See http://modules.perl6.org/dist/CoreHackers::Sourcery

[18:05] <lizmat> 700 Perl 6 questions on SO  !!

[18:05] *** espadrine_ joined
[18:05] <jmerelo> lizmat: woohooo!

[18:07] *** sjoshi left
[18:08] <jmerelo> Zoffix: amazing. And totally unknown to me.

[18:10] *** mcmillhj left
[18:12] *** avalenn joined
[18:13] <buggable> New CPAN upload: P5times-0.0.5.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5times:cpan:ELIZABETH

[18:13] *** mcmillhj joined
[18:15] <lucasb> I know that the match adverb :nth(x) is 1-based, but :nth(*) meaning the last and :nth(*-1) meaning the second to last isn't strange?

[18:16] <lucasb> ...when compared with similar array subscripts

[18:16] <jmerelo> lucasb: there's no zeroth

[18:16] <jmerelo> lucasb: other than the zeroth law of robotics.

[18:17] <lucasb> sorry, I don't know anything about robotics

[18:17] <lucasb> I'm suggesting that :nth(*-1) could mean the last occurrence

[18:17] <timotimo> m: "lllll".match(/l/, th => { say $_; 1 }).say

[18:17] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(Any)␤｢l｣␤»

[18:17] <jmerelo> lucasb: not quite... https://en.wikipedia.org/wiki/Three_Laws_of_Robotics#Zeroth_Law_added

[18:17] <moritz> the zeroth law of robotics is: there is no zeroth law

[18:17] <lucasb> and :nth(*) could mean :nth(1..*), which already works

[18:18] *** mcmillhj left
[18:18] <jmerelo> lucasb: nth implies that it's using ordinals; there's no zero in ordinals. Might seem weird, but it's kind of coherent

[18:19] <jmerelo> moritz: that's the first law of the fight club. :-)

[18:22] <lucasb> I'm not talking about the zeroth or first element here, I'm talking about the last one

[18:22] <lucasb> m: say 'abc' ~~ m:nth(*)/\w/

[18:22] <camelia> rakudo-moar d1d31fd57: OUTPUT: «｢c｣␤»

[18:22] <lucasb> m: say 'abc' ~~ m:nth(1..*)/\w/

[18:22] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(｢a｣ ｢b｣ ｢c｣)␤»

[18:22] <lucasb> m: say 'abc' ~~ m:nth(*-1)/\w/

[18:22] <camelia> rakudo-moar d1d31fd57: OUTPUT: «｢b｣␤»

[18:23] <lucasb> IMO, :nth(*) should mean :nth(1..*)

[18:23] <Zoffix> It also has a special path for WhateverCode vs. Callable and doesn't pass the number of elements if it's not a WhateverCode

[18:24] *** sauvin left
[18:24] <lucasb> I really don't like distinction between WhateverCode and Callable objects. I see them as the same thing

[18:25] <Zoffix> lucasb: it might be more effective to file tickets ( https://github.com/rakudo/rakudo/issues/new ) rather than convincing an arbitrary clutch of active humans on a user IRC channel :)

[18:25] <lucasb> FWIW, I think :nth is the only place that makes distinction between WhateverCode vs. Callable

[18:26] *** raschipi left
[18:26] <Zoffix> I have an entry in my inconsistencies file on a related subject. Just links to this log: https://irclog.perlgeek.de/perl6/2018-03-08#i_15897822

[18:28] <Geth> ¦ doc: JJ self-assigned Broken link in documentation of "my" https://github.com/perl6/doc/issues/2046

[18:31] *** mcmillhj joined
[18:34] *** psychoslave left
[18:34] *** psychoslave joined
[18:34] <lucasb> m: say (*+2).(3)

[18:34] <camelia> rakudo-moar d1d31fd57: OUTPUT: «5␤»

[18:34] <lucasb> m: say (*+2).Callable.(3)

[18:34] <camelia> rakudo-moar d1d31fd57: OUTPUT: «No such method 'Callable' for invocant of type 'Int'␤  in block <unit> at <tmp> line 1␤␤»

[18:35] <lucasb> m: say (*+2).Callable.WHAT

[18:35] <camelia> rakudo-moar d1d31fd57: OUTPUT: «(WhateverCode)␤»

[18:36] *** mcmillhj left
[18:37] *** |oLa| joined
[18:38] <Geth> ¦ doc: 9e948d04b8 | (JJ Merelo)++ | doc/Language/variables.pod6

[18:38] <Geth> ¦ doc: Fixes broken link

[18:38] <Geth> ¦ doc: 

[18:38] <Geth> ¦ doc: And while I was at it, fixed another broken link that went

[18:38] <Geth> ¦ doc: unnoticed. Thanks for the report, closes #2046

[18:38] <synopsebot> Link: https://doc.perl6.org/language/variables

[18:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9e948d04b8

[18:39] *** shareable6 joined
[18:39] *** ChanServ sets mode: +v shareable6

[18:40] *** domidumont left
[18:45] *** mcmillhj joined
[18:46] *** mcmillhj left
[18:48] *** darutoko left
[18:53] <lucasb> ^^ Sorry, disregard my last eval. Method calls participate in WhateverCode construction, and there's no Callable coercion method :)

[18:56] <jmerelo> A small factoid: these past 5 weeks have been among the 6 with the highest number of commits during the last year, and the 3 weeks with the highest activity were last April. https://github.com/perl6/doc/graphs/commit-activity

[18:56] <jmerelo> 4th was the week of Aug 27th.

[18:59] *** mcmillhj joined
[19:06] <Zoffix> lucasb: WhateverCode does Callable

[19:06] <Zoffix> m: say ((*.so)).^roles

[19:06] <camelia> rakudo-moar d1d31fd57: OUTPUT: «((Callable))␤»

[19:16] *** lookatme left
[19:16] *** lookatme joined
[19:20] *** mcmillhj left
[19:22] *** jmerelo left
[19:25] *** mcmillhj joined
[19:25] *** AlexDaniel joined
[19:30] *** mcmillhj left
[19:33] *** mcmillhj joined
[19:34] *** pecastro_ left
[19:37] *** mcmillhj left
[19:38] *** pecastro joined
[19:42] *** mcmillhj joined
[19:42] *** mcmillhj left
[19:54] *** comborico1611 joined
[19:55] *** natrys left
[19:56] <ktown> m: sub got( $x where ^10 ) { say $x.Int }  ;  got( "3") ;

[19:56] <camelia> rakudo-moar d1d31fd57: OUTPUT: «Constraint type check failed in binding to parameter '$x'; expected anonymous constraint to be met but got Str ("3")␤  in sub got at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[19:58] <ktown> hmm lots of times data gets split out of strings, I found this while parsing a longer sting, the first few functions worked then one would fail

[19:59] <ktown> m: sub got( Int $x where ^10 ) { say $x.Int }  ;  got( "3") ;

[19:59] <camelia> rakudo-moar d1d31fd57: OUTPUT: «Type check failed in binding to parameter '$x'; expected Int but got Str ("3")␤  in sub got at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[19:59] <ktown> m: sub got( Int $x where ^10 ) { say $x.Int }  ;  got( "3".Int) ;

[19:59] <camelia> rakudo-moar d1d31fd57: OUTPUT: «3␤»

[19:59] <El_Che> m: sub got( $x where { $_ < 10} ) { say $x.Int }; got "3"

[19:59] <camelia> rakudo-moar d1d31fd57: OUTPUT: «3␤»

[19:59] <El_Che> m: sub got( $x where { $_ < 10} ) { say $x.Int }; got "10"

[19:59] <camelia> rakudo-moar d1d31fd57: OUTPUT: «Constraint type check failed in binding to parameter '$x'; expected anonymous constraint to be met but got Str ("10")␤  in sub got at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[20:00] <ktown> m: sub got( $x where { $_ < 10} ) { say $x.Int }; got "3"

[20:00] <camelia> rakudo-moar d1d31fd57: OUTPUT: «3␤»

[20:00] <El_Che> m: sub got( $x where $_ < 10 ) { say $x.Int }; got "3"

[20:00] <camelia> rakudo-moar d1d31fd57: OUTPUT: «3␤»

[20:02] *** mcmillhj joined
[20:02] *** |oLa| left
[20:05] <ktown>  m: sub got( $x where 0 <= $_ <= 10 ) { say $x.Int }; got "3"

[20:05] <camelia> rakudo-moar d1d31fd57: OUTPUT: «3␤»

[20:07] *** mcmillhj left
[20:09] *** athenot_ joined
[20:10] *** athenot left
[20:10] *** sno joined
[20:12] *** |oLa| joined
[20:18] *** mcmillhj joined
[20:22] *** mcmillhj left
[20:33] *** athenot_ left
[20:34] *** mcmillhj joined
[20:41] *** |oLa| left
[20:43] *** lucasb left
[20:51] *** psychoslave left
[20:57] *** robertle left
[21:03] *** mcmillhj left
[21:08] *** wamba left
[21:11] *** mcmillhj joined
[21:16] *** mcmillhj left
[21:21] *** Qwerasd joined
[21:25] *** wamba joined
[21:33] *** jast left
[21:34] *** jast joined
[21:37] *** mcmillhj joined
[21:43] *** mcmillhj_ joined
[21:44] *** rindolf left
[21:46] <Zoffix> m: sub got(Int() $x where 0 ≤ $_ ≤ 10) { dd $x }; got "3"

[21:46] <camelia> rakudo-moar d1d31fd57: OUTPUT: «3␤»

[21:46] <Zoffix> m: sub got(Int() $x where ^10) { dd $x }; got "3"

[21:46] <camelia> rakudo-moar d1d31fd57: OUTPUT: «3␤»

[21:48] *** mcmillhj_ left
[21:48] <Zoffix> m: sub got(UInt() $x where * ≤ 10) { dd $x }; got "3"

[21:48] <camelia> rakudo-moar d1d31fd57: OUTPUT: «3␤»

[21:50] *** mcmillhj left
[22:05] *** espadrine_ left
[22:08] *** andrzejku_ joined
[22:11] *** andrzejku left
[22:14] *** mcmillhj joined
[22:16] *** TreyHarris left
[22:17] *** dct joined
[22:19] *** mcmillhj left
[22:21] *** HaraldJoerg left
[22:24] *** stee joined
[22:27] *** stee3 left
[22:29] *** TreyHarris joined
[22:33] *** Kaiepi left
[22:33] *** Kaiepi joined
[22:35] *** huf left
[22:38] <ktown> m: sub got(Int $x where 0 ≤ $_ ≤ 10) { dd $x }; got "3"

[22:38] <camelia> rakudo-moar d1d31fd57: OUTPUT: «Type check failed in binding to parameter '$x'; expected Int but got Str ("3")␤  in sub got at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[22:39] <ktown> m: sub got($x where 0 ≤ $_ ≤ 10) { dd $x }; got "3"

[22:39] <camelia> rakudo-moar d1d31fd57: OUTPUT: «Str $x = "3"␤»

[22:40] *** itaipu left
[22:40] *** huf joined
[22:40] *** wamba left
[22:44] <ktown> so sub got(Int() $x and sub got(Int $x are not the same thing

[22:44] *** stee left
[22:45] *** mcmillhj joined
[22:46] *** pmurias left
[22:47] *** itaipu joined
[22:49] *** |oLa| joined
[22:50] *** mcmillhj left
[22:55] *** stee joined
[22:57] *** Qwerasd left
[23:04] *** raschipi joined
[23:04] *** mcmillhj joined
[23:07] *** Kaffe joined
[23:07] *** dct left
[23:08] *** itaipu left
[23:09] *** mcmillhj left
[23:09] *** Kaffe left
[23:15] *** Qwerasd joined
[23:16] *** Qwerasd left
[23:17] *** kurahaupo_ joined
[23:19] *** kurahaupo left
[23:22] *** n0tjack joined
[23:29] *** kurahaupo_ left
[23:30] *** kurahaupo joined
[23:30] *** kurahaupo_ joined
[23:32] *** kurahaupo_ left
[23:32] *** raschipi left
[23:32] *** kurahaupo_ joined
[23:33] *** raschipi joined
[23:33] *** mcmillhj joined
[23:34] *** kurahaupo left
[23:38] *** mcmillhj left
[23:41] *** w_richard_w joined
[23:45] <MasterDuke> ktown: correct. Int() is a coercer https://docs.perl6.org/syntax/Coercion%20Type

[23:47] <Kaiepi> damn forgot my PAUSE password and i get a server error when i try to reset it

[23:55] *** mcmillhj joined
[23:58] *** aborazmeh joined
[23:58] *** aborazmeh left
[23:58] *** aborazmeh joined
