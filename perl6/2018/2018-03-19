[00:18] *** w_richard_w1 joined
[00:20] *** w_richard_w left
[00:24] *** w_richard_w1 left
[00:35] *** eliasr left
[00:36] *** w_richard_w joined
[00:36] *** kurahaupo_ left
[00:37] *** kurahaupo joined
[00:39] *** ribasushi left
[00:40] *** kurahaupo_ joined
[00:41] *** aborazmeh joined
[00:41] *** aborazmeh left
[00:41] *** aborazmeh joined
[00:43] *** lichtkind left
[00:43] *** lichtkind joined
[00:43] *** kurahaupo left
[00:43] *** lichtkind left
[00:43] *** espadrine left
[00:52] *** pierre_ joined
[01:13] *** a3r0 joined
[01:32] *** AlexDaniel left
[01:36] *** markong left
[01:40] *** foop joined
[01:47] *** khisanth__ joined
[01:51] *** foop left
[01:54] *** aborazmeh left
[02:10] *** w_richard_w left
[02:27] *** perlawhirl joined
[02:28] <perlawhirl> .tell jkramer Yes, I am in Australia

[02:28] <yoleaux> perlawhirl: I'll pass your message to jkramer.

[02:56] *** ilbot3 joined
[02:56] *** ChanServ sets mode: +v ilbot3

[03:00] *** wamba joined
[03:05] *** dogbert11 joined
[03:06] *** Seeder joined
[03:06] *** Seeder left
[03:44] *** ufobat___ joined
[03:46] <bocaneri> perl 6 seems a bit slow. :\

[03:48] *** skids left
[03:49] <thowe> It wil get faster.  Speed optimizations haven't been a priority except maybe lately (I think I have heard that, I'

[03:49] <thowe> I'm not really in-the-know).

[03:53] *** khw left
[03:53] <timotimo> bocaneri: most of the time you can reach a dramatic speed-up with only tiny changes to the code. sometimes all that you need is to complain about a specific method or sub being slow here on the channel and the next day you'll find it to be between 1.5x and 100x faster

[03:53] <thowe> and isn't there a profiler built in?

[03:55] <timotimo> that's correct

[03:55] <bocaneri> I have no idea how to use a profiler (yet) and it's not actually a complaint so much as an impression.

[03:56] <timotimo> profile-m: (^100_000).grep(*.is-prime).head(100).tail(1).say

[03:56] <timotimo> (just a totally random workload)

[03:56] <timotimo> i'm not actually sure that's hooked up still

[03:56] <timotimo> camelia: help

[03:56] <camelia> timotimo: Usage: <(nqp-jvm|debug-cat|rakudo-moar|star-m|prof-m|rakudo-jvm|nqp-moarvm|nqp-js|p5-to-p6|sm|nqp-mvm|j|nqp-m|star|perl6|r-jvm|rakudo|rj|p6|m|r-m|r|master|nqp|p56|nqp-q|rm|r-j)(?^::\s(?!OUTPUT)) $perl6_program>

[03:56] <timotimo> prof-m: (^100_000).grep(*.is-prime).head(100).tail(1).say

[03:56] <camelia> prof-m : OUTPUT: «No such file or directory»

[03:56] <camelia> .. Prof: http://p.p6c.org/60ab517

[03:57] <timotimo> well, that isn't working correctly it seems

[03:57] <camelia> prof-m : OUTPUT: «(timeout)Can't exec "./rakudo-inst/bin/perl6-m": No such file or directory at lib/EvalbotExecuter.pm line 206.␤cat: /home/camelia/rakudo-inst/revision: No such file or directory␤␤now running scp...␤lost connection␤»

[03:57] <camelia> .. Prof: http://p.p6c.org/60ab52d

[03:57] <thowe> oh, while I'm thinking of it..  The heck is "perl6-m"?

[03:57] <timotimo> just "perl6 running on moarvm"

[03:57] <timotimo> as opposed to perl6-j which is rakudo on the jvm

[03:57] <timotimo> oh no, oh crap

[03:57] <timotimo> camelia is feeding herself code?!

[03:58] <timotimo> i might have misunderstood?

[03:58] <thowe> I'm trying to figure out why it's explicitly called that way in this one example in Moritz' book.

[03:58] <timotimo> anyway, you get the profiler by calling your code like perl6 --profile -e '(^100_000).grep(*.is-prime).head(100).tail(1).say'

[03:59] <timotimo> it'll spit out an html file which is a little app thingy that'll let you go through all the data

[03:59] <timotimo> i usually recommend going to the Routines tab and sorting by exclusive time

[04:17] *** pierre_ left
[04:35] *** isBEKaml left
[04:47] *** releasable6 joined
[05:05] *** lelf joined
[05:05] *** wamba left
[05:36] *** curan joined
[06:05] *** andrzejku joined
[06:08] *** wamba joined
[06:25] *** w_richard_w joined
[06:25] *** pierre joined
[06:25] *** imcsk8_ joined
[06:27] *** lelf` joined
[06:29] *** imcsk8 left
[06:29] *** lelf left
[06:30] *** lelf`` joined
[06:32] *** lelf` left
[06:43] *** kaare__ is now known as kaare_

[06:44] *** wamba left
[06:58] *** lalitmee joined
[06:59] <bocaneri> anybody have any clue how to hook perl6 up to postgresql with something that has all the power of perl5's DBI?

[07:01] <lookatme> you mean use Perl5 module in Perl6 ?

[07:01] <yoleaux> 16 Mar 2018 10:52Z <Zoffix> lookatme: "I don't like this warning message :)" You should consider adding your voice to R#1356 https://github.com/rakudo/rakudo/issues/1356

[07:02] <lookatme> .tell Zoffix Other guys told me the issue has reported. I will do that in next time :)

[07:02] <yoleaux> lookatme: I'll pass your message to Zoffix.

[07:04] *** domidumont joined
[07:07] *** aindilis joined
[07:09] *** domidumont left
[07:10] *** domidumont joined
[07:13] *** lelf``` joined
[07:15] *** lelf`` left
[07:17] *** lelf``` left
[07:21] *** andrzejku left
[07:21] <buggable> New CPAN upload: perl6/Algorithm-Evolutionary-Simple-0.0.1.tar.gz by JMERELO https://cpan.metacpan.org/authors/id/J/JM/JMERELO/Perl6/perl6/Algorithm-Evolutionary-Simple-0.0.1.tar.gz

[07:23] *** eythian joined
[07:23] *** eythian left
[07:23] *** eythian joined
[07:24] *** darutoko joined
[07:28] *** robertle joined
[07:33] *** vike joined
[07:34] *** ribasushi joined
[07:53] *** wamba joined
[07:54] *** vike left
[07:59] *** vike joined
[08:02] <stmuk_> bocaneri: some of the power of DBI is found in DBIish

[08:03] <bocaneri> I've not looked at that yet, looked a bit underwhelming on first glance.

[08:03] *** neilb joined
[08:03] *** neilb left
[08:04] *** amalia___ joined
[08:05] *** lowbro joined
[08:18] *** pierre left
[08:22] *** eythian left
[08:22] *** eythian joined
[08:23] *** pierre joined
[08:26] <El_Che> bocaneri: there is also https://modules.perl6.org/dist/DB::Pg. I haven't tried it, though. Just saw it mentioned here.

[08:27] <bocaneri> I just discovered zef, use it to list and found what you're talking about. Perl 5 has spoiled me rotten; all the versions to the packages I see listed are 0.something.

[08:28] <El_Che> that's 28 years worth of modules indeed

[08:29] <bocaneri> One of the things I'm planning on looking at as I continue to swear at perl6 is inlining some perl5.

[08:29] <El_Che> I have ended writing perl 5 before when I wanted to write in perl 6 or go. 

[08:29] <El_Che> some things are trivial to roll your own

[08:29] <El_Che> some aren't

[08:30] <El_Che> some perl 6 modules are very nice

[08:30] <bocaneri> Yup. Some aren't. I have no idea how to talk to Pg through a raw socket.

[08:30] <El_Che> it depends on the usecase, I guess

[08:31] *** ufobat___ is now known as ufobat

[08:31] <bocaneri> I'm certainly not above using perl6 for the raw processing and setting up a perl5 server to act as a go-between. :D

[08:32] <El_Che> once you use it, you'll maybe need something and create your own module for us to use :)

[08:34] <bocaneri> If I succeed in cobbling something together that won't get me lynched, you're goddamn right I'll share!

[08:35] *** markong joined
[08:36] <bocaneri> I think mst could confirm, though, that my coding skills leave a LOT to be desired.

[08:41] <bocaneri> I wonder how well these inline modules work.

[08:49] <masak> bocaneri: knowing one's coding skills leave a lot to be desired is a sign of programmer maturity ;)

[08:49] <bocaneri> Oh, I'm "mature", alright. Couple years I'll be eating off the senior citizen's menus.

[08:50] <masak> for example, I've been at this for decades. and I'm woefully aware of how inadequately I code. :)

[08:50] <bocaneri> But... but... but... it can be so much FUN!

[08:51] <masak> in fact, the only thing I'm getting better at is leaving important tasks to tools

[08:53] *** pmurias joined
[08:53] <bocaneri> Well... last thing I gid with perl5 was give up on trying to embed something in something else, so what I embedded instead was something that launches a subshell to call ncat to pipe output from the app to a 'broadcast' ncat. I hooked perl up to that same broadcaster to do my "real" work (DBI crap). Perl has no idea where the data are coming from, and the app generating them has no idea it's hooked up to a Pg DB.

[08:54] <pmurias> https://github.com/rakudo/rakudo/issues/1626 - rakudo bug found by js backend work, got a plan for a fix, will attempt after a heary breakfast

[08:54] <yoleaux> 07:00Z <nine> pmurias: The difference between :api and an extra name part is a very explicit and unified way to express "same goal, but incompatible API". Functionally it's the same as having Foo, Foo2 and Foo3. People are hesitant to tuck a number onto a name. So instead they use convention to assign additional semantics to a version number. :api is explicit and has a chance to become ubiquitous

[08:55] <El_Che> releasable6: status

[08:55] <releasable6> El_Che, Next release will happen when it's ready. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Changelog for this release was not started yet

[08:55] <releasable6> El_Che, Details: https://gist.github.com/73f34f9d894aa932396a4fe6b1d7a817

[09:04] <masak> "Next release will happen when it's ready"? :)

[09:04] <masak> sounds like a message that used to say how many days there are left, but which then was changed in order not to stress people out...

[09:08] *** scimon joined
[09:08] *** darutoko- joined
[09:09] <lookatme> :) when it's ready haha

[09:11] <masak> it's like an API that used to say "The Empire State Building is 381 m tall" but that now says "The Empire State Building is as tall as itself"

[09:11] *** darutoko left
[09:18] *** neilb joined
[09:22] *** dakkar joined
[09:24] <moritz> .seen sergot

[09:24] <yoleaux> I saw sergot 14 Mar 2018 21:46Z in #perl6: <sergot> ufobat_: ping

[09:25] *** pierre left
[09:26] *** pierre__ joined
[09:26] *** rindolf joined
[09:34] *** lalitmee left
[09:38] *** w_richard_w left
[09:38] *** DarthGandalf joined
[09:39] *** AlexDaniel joined
[09:39] <Ulti> has anyone upgraded macOS and have a vague checklist to get back to building

[09:39] <Ulti> Im constantly getting the libc can't be found you should sign the XCode license agreement warning

[09:40] <Ulti> but its definitely all sorted, so wondering if its just a path issue

[09:46] <El_Che> I have only used rakudo on macos, not build it. Check with stmuk, he create macos binaries

[09:47] <stmuk_> yeah I don't think gcc generally works after a macOS upgrade

[09:47] <stmuk_> and there is a licence agreement if you try gcc -o hello hello.c you have to answer

[09:48] *** Matthew[m] joined
[09:48] <Ulti> its always been clang for me

[09:49] <Ulti> and I've already sorted out the license agreement :/ 

[09:50] <Ulti> yeah I can compile my own stuff with clang or gcc

[09:50] <Ulti> :<

[09:50] <Ulti> same shell and environment

[09:51] <stmuk_> sorry I meant clang

[09:51] <Ulti> ok so it looks like library paths

[09:51] <Ulti> because Apple freaking love moving everything even with a minor OS change

[09:52] <stmuk_> is this a brand new macOS upgrade? I don't use Macs so much anymore

[09:53] <stmuk_> libc not being found sounds like headers since if it really wasn't there nothing would work :)

[09:53] <Ulti> yeah exactly

[09:54] <Ulti> its just headers it cant find 

[09:54] <Ulti> just running xcode-select --install as I suspect XCode totally lied about what it was doing

[09:54] <Ulti> I really hate this corner of macOS

[09:54] <El_Che> Ulti: Apple hates you back

[09:55] <stmuk_> I used to selectively install parts of macOS but gave up on that

[09:55] <stmuk_> macOS xcode I mean

[09:55] <El_Che> you damn advanced user :)

[09:55] <Ulti> I only use XCode to bootstrap a dev environment nothing else

[09:56] <stmuk_> my pet perve was not being able to dtrace anything with #!/bin/sh for "security reasons"

[09:57] <Ulti> well yeah Apple need to secure their margin as much as the next mega corp with enough cash to purchase a small country

[09:57] <Ulti> it annoys me they make exceedingly good computers other than this

[09:57] <stmuk_> hmm I probably haven't tried 10.13.3 but I'd be unsurprised if there weren't odd issues 

[09:58] <stmuk_> they lost me with the 2mm keyboard travel

[09:58] <Ulti> Windows 10 is also increasingly dev friendly with the new Ubuntu layer

[09:59] <Ulti> stmuk_: I actually love the new keyboard type, I have really reduced sensitivity in my fingers from RSI the hard bottom out quickly is perfect 

[09:59] <Ulti> YAY that did it

[10:00] <Ulti> stupid XCode

[10:00] <Ulti> ok so if anyone else comes asking thats the answer: `xcode-select --install`

[10:00] <stmuk_> Ulti++

[10:01] <Ulti> as well as the follow up command to sign the license agreement: `sudo xcodebuild -license accept`

[10:01] <Ulti> weird how homebrew had zero issues

[10:03] <stmuk_> did the upgrade totally remove xcode? I'm sure I've seen that before

[10:03] <Ulti> every time you do an OS update it nukes XCode and even if its installed it has to reinstall the CLI stuff and half the build system

[10:04] <Ulti> its so stupid

[10:04] <Ulti> I did this via the GUI but clearly it didnt properly setup the CLI environment

[10:05] <Ulti> I cant see any changes to my user environment so really not sure what running it from a shell accomplished

[10:05] <Ulti> it did download a tonne of additional software

[10:06] *** El_Che joined
[10:07] <El_Che> stmuk_: that bad keyboards?

[10:07] <El_Che> stmuk_: at work we have windows laptops (I have a illegal Linux install to get work done), but they also looking into providing macs.

[10:08] * AlexDaniel clickbaits https://insights.stackoverflow.com/survey/2018

[10:08] <AlexDaniel> a lot of interesting stuff there

[10:09] <stmuk_> El_Che: the new butterfly mac kb has v low travel which many people hate

[10:09] <stmuk_> El_Che: they also removed many ports (HDMI, SD card etc.) from the Pro laptop

[10:11] <El_Che> stmuk_: I have now an air to do some macos tests, which I use on the train to write. Keyboard on that generation is fine

[10:11] <El_Che> only downside is the screen resolution, besides that great laptop

[10:11] <stmuk_> El_Che: yes that's fine ... also rumours of a coming upgrade to that line

[10:12] <El_Che> If would be a hub step down if a laptop that costs 2,5x is less user friendly

[10:12] <El_Che> stmuk_: no, the "real" work laptop would be macbook pro as an alternative for dell latitudes (which are fine nowadays)

[10:12] *** andrzejku joined
[10:13] <AlexDaniel> I am blind / have difficulty seeing 1.4%

[10:13] <stmuk_> I've moved to a Dell XPS13 which works great with linux

[10:13] <AlexDaniel> that's very interesting

[10:14] <El_Che> stmuk_: management: you can't have the xps 13 instead of the latitude 12 (even if we get both models at -60% price), but you are free to get a full stocked macbook pro

[10:14] <El_Che> sigh

[10:15] <El_Che> I am not buying dell inspirons (for home) anymore, they are pretty crappy

[10:19] <AlexDaniel> no way! The majority of respondents have better lifestyle than me. “How Often Do Developers Skip Meals To Be Productive?” Never 63.6%

[10:20] <AlexDaniel> 63% never do that! omg

[10:21] <Ulti> yeah the Dell XPS are what I used to try and purchase as the non Apple option in my last work place

[10:21] <Ulti> at least for engineers

[10:21] <Ulti> its a shame they stopped doing the Linux only developer version for a couple hundred less in the UK

[10:35] <stmuk_> I got the windows one in the UK for less than £1000

[10:37] <El_Che> around 500€ by now? :P

[10:37] <El_Che> stmuk_: that's a great price! previous model?

[10:39] <stmuk_> it wasn't prev model at the time I bought it ... 7th gen I5

[10:39] <stmuk_> it didnt have the ultra high res display

[10:46] *** pierre__ left
[10:48] *** dalek joined
[10:48] *** ChanServ sets mode: +v dalek

[10:48] *** synopsebot joined
[10:48] *** ChanServ sets mode: +v synopsebot

[10:48] *** p6lert joined
[10:48] *** Geth joined
[10:48] *** ChanServ sets mode: +v Geth

[10:48] *** araraloren joined
[10:48] *** SourceBaby joined
[10:48] *** ChanServ sets mode: +v SourceBaby

[10:49] *** releasable6 left
[10:49] *** releasable6 joined
[10:52] *** scovit joined
[10:59] <Geth> ¦ perl6.org: 6c80881650 | (Zoffix Znet)++ (committed using GitHub Web editor) | source/community/irc.html

[10:59] <Geth> ¦ perl6.org: Update URL for Undercover bot

[10:59] <Geth> ¦ perl6.org: 

[10:59] <Geth> ¦ perl6.org: perl6.wtf is a ded domain. It's now at https://wtf.rakudo.party/

[10:59] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/6c80881650

[11:03] *** kst` joined
[11:31] *** scimon left
[11:37] <moritz> I must say that I like the domain wtf.rakudo.party .-)

[11:55] *** pierre_ joined
[11:57] *** dogbert2_ joined
[12:05] *** enheh joined
[12:16] <AlexDaniel> “Who is Primarily Responsible for Considering the Ramifications of AI?”

[12:17] <AlexDaniel> well, uh… AI itself? :P

[12:18] *** athenot joined
[12:21] *** aindilis left
[12:27] <masak> AlexDaniel: context? anyway, people like Yudkowsky would argue that at that point, it'd be too late.

[12:31] <moritz> since we are on a bit of an AI tangent there, I'd like to share an interesting point I heard about it

[12:32] <moritz> so, context: might AI be dangerous? many people say we're too far away from that point to worry

[12:32] <moritz> so an interesting question is: when *should* we start to worry? what's the "fire alarm" for AI?

[12:32] * masak predicts moritz will mention exponentials soon

[12:32] <AlexDaniel> masak: https://insights.stackoverflow.com/survey/2018

[12:33] <moritz> like, if an AI takes a single day to become better at a game that humans spend centuries to improve at, would that be an AI fire alarm?

[12:33] <moritz> fun fact: that already happened.

[12:33] <moritz> masak: nope, no exponentials in that argument

[12:33] <masak> :)

[12:34] <masak> moritz: my prediction was based on the analogy with bacteria, and the thing that ends with "the jar is half-full at minute 59"

[12:34] <stmuk_> AlexDaniel: wrt rakudo/issues/1420 I think the changes which broke FreeBSD were reverted ... I can check on FreeBSD if it helps

[12:35] *** xinming joined
[12:35] <AlexDaniel> stmuk_: according to PufferBot and BeastieBot it builds just fine on freebsd and openbsd

[12:35] <moritz> so, if somebody says that AI is no danger to humans, ask them: what event/achievement would convince you of the opposite?

[12:35] <moritz> </ai-rant>

[12:35] <AlexDaniel> so can we just close that ticket?

[12:36] <stmuk_> yes

[12:36] <masak> moritz: I find asking "what event/fact would convince you of [the opposite of what you believe]?" is a great way to discover open-minded/smart people, but that those are few and far between

[12:37] <masak> and the by far most common answer is "no event/fact" or "that will never happen, since [I have confused my beliefs with reality]"

[12:38] <stmuk_> is there a bigendian bot?

[12:39] <AlexDaniel> stmuk_: no, unfortunately not

[12:39] <AlexDaniel> stmuk_: well, apart from buildd: https://buildd.debian.org/status/package.php?p=rakudo&suite=sid

[12:40] <stmuk_> debian++

[12:40] <AlexDaniel> yes, debian++ indeed

[12:40] <AlexDaniel> also dod38fr++

[12:40] <AlexDaniel> see https://github.com/rakudo/rakudo/issues/1257 for more info

[12:41] <tbrowder_> hi #perl6

[12:42] <masak> hi tbrowder_ 

[12:42] <tbrowder_> hi, masak

[12:42] <tbrowder_> i need some advice on concurrency

[12:42] <moritz> avoid it!

[12:43] <tbrowder_>  right!

[12:43] <masak> wow, that was basically Threads 101

[12:43] <masak> next up: monoids

[12:44] <tbrowder_> i’m playing with Zoffix’s Toaster and it’s leaving orphaned procs after an otherwise successfully completed run.

[12:45] <AlexDaniel> because it doesn't kill the process tree

[12:45] <AlexDaniel> of stuff that is hanging

[12:45] <tbrowder_> it looks like all the await are in the right place.

[12:46] <tbrowder_> yes, the hangers now get SIGKILL

[12:46] <AlexDaniel> IIRC it's not a perl6-level problem. Some modules hang, it sends SIGKILL to the process

[12:46] <AlexDaniel> the top process dies but everything else remains alive

[12:46] <AlexDaniel> that's how I understand it

[12:47] <AlexDaniel> did we have a ticket asking for negated signals?

[12:48] <tbrowder_> i think my work around will be keep a list of all pids and handle them after all modules are toasted and before toaster exits.

[12:48] <AlexDaniel> well, my workaround is to restart the VM

[12:48] <AlexDaniel> but keeping the list of all pids… what pids?

[12:49] <AlexDaniel> top process dies anyway if you sigkill it

[12:49] <tbrowder_> each one from the promises

[12:51] <Geth> ¦ doc: zoffixznet++ created pull request #1852: Post release 2018.03

[12:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1852

[12:51] <tbrowder_> i want the whole run to be cronable, no vm restarts, no top proc kill...

[12:51] <Geth> ¦ doc/master: 7 commits pushed by (Zoffix Znet)++

[12:51] <Geth> ¦ doc/master: 96c5f28b11 | Note IO::Handle.open :r/:mode<ro> are eqv no mode args

[12:51] <Geth> ¦ doc/master: df7a6d1a5a | Use :lang<text> instead of skipping text code blocks

[12:51] <Geth> ¦ doc/master: a94126d85d | Clarify that in unsupported open modes…

[12:51] <Geth> ¦ doc/master: fe8961d34b | Document 1- and 0- arg variants of &[∘]

[12:51] <Geth> ¦ doc/master: 73602ade23 | Fix typo; masak++

[12:51] <Geth> ¦ doc/master: 8bede1c3ca | Merge branch 'master' into post-release-2018.03

[12:51] <Geth> ¦ doc/master: 30a7c186f2 | Merge pull request #1852 from perl6/post-release-2018.03

[12:51] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/7df95b215980...30a7c186f2ae

[12:53] <tbrowder_>  toaster should exit with 0 and leave no orphans.

[12:53] *** aborazmeh joined
[12:53] *** aborazmeh left
[12:53] *** aborazmeh joined
[12:54] <tbrowder_> ideas welcome...

[12:56] <AlexDaniel> tbrowder_: well my idea remains: implement process tree .kill in rakudo

[12:56] <AlexDaniel> maybe with a :tree param instead of negated signals

[12:56] <AlexDaniel> although I think it's OS-specific, but I really don't know

[12:57] *** AlexDaniel left
[12:57] *** AlexDaniel joined
[12:59] <tbrowder_> AlexDaniel: that’s what i was thinking, but it shouldn’t be any more system-specific than other low-level system stuff. jnthn could probably whip that out in no time!

[12:59] *** mcmillhj joined
[13:01] <AlexDaniel> you can whip that out in no time also, just allow negated signals :)

[13:01] *** mcmillhj left
[13:02] <AlexDaniel> IIRC the negative signal is handled by the sys_kill syscall

[13:02] <AlexDaniel> so there's nothing that should be done on rakudo side… maybe?

[13:02] <AlexDaniel> I'm really not qualified to discuss this :)

[13:05] <tbrowder_>  ditto!

[13:06] <El_Che> Rakudo seems to be out

[13:06] <El_Che> files are there

[13:06] <El_Che> kicking in the packages!

[13:06] <AlexDaniel> yes!

[13:06] <tbrowder_> hm, some more info using promises to collect promises in the concurrency docs...

[13:06] <AlexDaniel> tbrowder_: ok, see this: http://man7.org/linux/man-pages/man2/kill.2.html

[13:07] <tbrowder_> looks “promising”

[13:07] <AlexDaniel> tbrowder_: “If pid is less than -1, then sig is sent to every process in the process group whose ID is -pid.”

[13:07] <AlexDaniel> tbrowder_: then also perl5 kill: http://perldoc.perl.org/functions/kill.html

[13:07] <AlexDaniel> tbrowder_: “A negative signal name is the same as a negative signal number, killing process groups instead of processes.”

[13:07] *** cdg joined
[13:08] <AlexDaniel> and I have *no idea* what it does on Windows

[13:08] <tbrowder_> good! i’ll try that

[13:08] <AlexDaniel> but the point is that we don't have an alternative to that in perl 6?

[13:08] <AlexDaniel> or… can you actually pass a negative pid?

[13:09] <AlexDaniel> AH! I forgot

[13:09] <AlexDaniel> we have no &kill, whatsoever

[13:09] <AlexDaniel> tbrowder_: so the quick fix that you can try for your toaster experiments is to follow this: https://docs.perl6.org/language/5to6-perlfunc#kill

[13:10] <tbrowder_> but there is a kill method, in promise i think

[13:10] <AlexDaniel> tbrowder_: and pass a negative pid instead

[13:10] <El_Che> There are many languages where killing threads is considered bad practice

[13:10] <stmuk_> http://examples.perl6.org/categories/cookbook/16processes/16-14-send-signal.html

[13:10] <AlexDaniel> we're not killing threads, we are killing processes

[13:10] <AlexDaniel> sending a SIGTERM or something like that to a process tree is a completely sane move in my opinion

[13:10] <El_Che> death to the process!

[13:11] <AlexDaniel> even more so if some process went nuts and you *have to* SIGKILL it

[13:11] <tbrowder_>  ah, Proc::Async.kill: integer

[13:13] <tbrowder_>  going to see how tia

[13:14] <AlexDaniel> coming to think about it, I guess SIGTERM-ing a process tree should not be done most of the time?

[13:14] <tbrowder_> ok, thnx for good ideas AlexDaniel and El_Che!

[13:18] *** leah2 joined
[13:19] <El_Che> tbrowder_: you mean stmuk :)

[13:19] *** mahafyi joined
[13:21] *** Unavowed joined
[13:21] <tbrowder_>  yep, sorry, thnx stmuk!

[13:28] *** wamba left
[13:28] *** vcv joined
[13:29] <stmuk_> :)

[13:31] <vcv> Given a directory, I'm trying to find all sub-directories (not recursive) where those sub-directories have a .git directory within them.  This isn't working and I can't figure out why: 

[13:31] <vcv> say $!repository-root.IO.dir.grep({ .d and .add(".git").d })

[13:32] <vcv> I know .d can  throw a failure but i thought in boolean context it would resolve to True or False

[13:37] <MasterDuke> evalable6: say ".".IO.dir.grep({ .d and .add(".git").d })

[13:37] <evalable6> MasterDuke, rakudo-moar 96570c5ca: OUTPUT: «()␤»

[13:37] <MasterDuke> evalable6: say ".".IO.dir.grep({ .d })

[13:37] <evalable6> MasterDuke, rakudo-moar 96570c5ca: OUTPUT: «("bin".IO "t".IO "sandbox".IO "3rdparty".IO "maintenance".IO "services".IO "lib".IO "foo".IO "junk".IO ".git".IO "data".IO "logs".IO)␤»

[13:37] <AlexDaniel> e: say "../".IO.dir.grep({ .d and .add(".git").d })

[13:37] <evalable6> AlexDaniel, rakudo-moar 96570c5ca: OUTPUT: «("../rakudo_deleteme".IO "../force_bind".IO "../MoarVM".IO "../http-useragent".IO "../json…»

[13:37] <evalable6> AlexDaniel, Full output: https://gist.github.com/651183bb3aed276a612e4da2af6879ff

[13:37] *** wamba joined
[13:37] <AlexDaniel> I think it works?

[13:38] <MasterDuke> vcv: what version of perl6 do you have?

[13:38] <vcv> i just reran my own code and now it works. it wasn't working all weekend.  my apologies and thank you!

[13:39] *** skids joined
[13:40] * MasterDuke knows Perl 6 touts being lazy as a feature, but taking the weekend off is a bit too much

[13:40] <AlexDaniel> pffft :D :D

[13:40] <vcv> Nice :)

[13:41] *** mcmillhj joined
[13:41] <vcv> .dir does return a lazy list so that checks out

[13:47] *** greppable6 joined
[13:47] *** ChanServ sets mode: +v greppable6

[13:50] *** cdg left
[13:50] *** cdg joined
[13:54] <Geth> ¦ doc: efee510ced | (Will "Coke" Coleda)++ | t/pod-valid.t

[13:54] <Geth> ¦ doc: test files can haz pod

[13:54] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/efee510ced

[13:54] <Geth> ¦ doc: de006c758b | (Will "Coke" Coleda)++ | xt/examples-compilation.t

[13:54] <Geth> ¦ doc: add note about verbosity

[13:54] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/de006c758b

[13:54] *** cdg left
[13:55] *** domidumont left
[13:55] <tbrowder_> ref kill procs again: if inside a script, e,

[13:57] *** domidumont joined
[13:57] <El_Che> 1 false positive (of 10 builds for the threading test)

[13:57] <tbrowder_> e.g., toaster, and i want to kill all its kid pids, shouldn’t i use “kill 0, $signal” instead of “kill -$*PID”?

[13:58] *** mahafyi left
[13:59] <tbrowder_> er, instead of “kill -$*PID, $signal”?

[13:59] *** mahafyi joined
[14:00] <tbrowder_> stmuk: ^^ ?

[14:02] *** khw joined
[14:09] *** aborazmeh left
[14:09] <Geth> ¦ doc: 02594ed87a | (Will "Coke" Coleda)++ | doc/Type/X/Role/Initialization.pod6

[14:09] <Geth> ¦ doc: Mark code

[14:09] <synopsebot> Link: https://doc.perl6.org/type/X::Role::Initialization

[14:09] <Geth> ¦ doc: 

[14:09] <Geth> ¦ doc: (previously output as paragraph text)

[14:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/02594ed87a

[14:09] <Geth> ¦ doc: b895a847ca | (Will "Coke" Coleda)++ | 2 files

[14:09] <Geth> ¦ doc: remove duplicate word

[14:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b895a847ca

[14:10] <Geth> ¦ doc: 848e792c1a | (Will "Coke" Coleda)++ | doc/Language/unicode_entry.pod6

[14:10] <Geth> ¦ doc: remove duplicate word

[14:10] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/848e792c1a

[14:10] <synopsebot> Link: https://doc.perl6.org/language/unicode_entry

[14:13] <AlexDaniel> tbrowder_: ｢kill -$*PID, $signal｣ looks right

[14:13] <AlexDaniel> uhhh maybe not

[14:13] <AlexDaniel> not $*PID

[14:13] <AlexDaniel> unless you want to kill yourself

[14:16] <AlexDaniel> but… there's no way to get the pid of a Proc::Async, right?

[14:17] <moritz> would be nice if Proc had a .pid

[14:18] <AlexDaniel> I think it's spec-ed

[14:18] <AlexDaniel> but fudged on rakudo

[14:18] <AlexDaniel> OK, maybe not

[14:19] <AlexDaniel> but there is a ticket: RT#126380

[14:19] <synopsebot> RT#126380 [open]: https://rt.perl.org/Ticket/Display.html?id=126380 [NYI] Proc.pid

[14:23] *** ChoHag_ joined
[14:23] *** ChoHag left
[14:27] *** travis-ci joined
[14:27] <travis-ci> Doc build failed. Will "Coke" Coleda 'remove duplicate word'

[14:27] <travis-ci> https://travis-ci.org/perl6/doc/builds/355377864 https://github.com/perl6/doc/compare/de006c758b52...b895a847cadd

[14:27] *** travis-ci left
[14:27] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[14:29] *** travis-ci joined
[14:29] <travis-ci> Doc build failed. Will "Coke" Coleda 'remove duplicate word'

[14:29] <travis-ci> https://travis-ci.org/perl6/doc/builds/355378554 https://github.com/perl6/doc/compare/b895a847cadd...848e792c1ae7

[14:29] *** travis-ci left
[14:29] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[14:32] *** vcv left
[14:33] *** vcv joined
[14:35] *** vcv left
[14:35] *** vcv joined
[14:44] *** mcmillhj left
[14:45] *** wamba left
[14:47] *** mcmillhj joined
[14:51] *** wamba joined
[14:51] <El_Che> New rakudo pkgs: https://github.com/nxadm/rakudo-pkg/releases/tag/v2018.03-01

[14:51] *** curan left
[14:53] *** wamba left
[14:53] *** domidumont left
[14:54] <El_Che> lizmat: for the weekly: "New Rakudo 2018003 Linux packages: https://github.com/nxadm/rakudo-pkg"

[14:54] *** domidumont joined
[14:55] * masak likes the look of 2018003

[14:55] <masak> "no-one has version numbers as large as ours!"

[14:55] <El_Che> The hugest

[14:56] <masak> but at the same time quite beautiful and esthetic

[14:56] <El_Che> those puny passents with their 5 <-> 6 fights. We're at version 2018003!

[14:56] <masak> I've been using Perl 2018003 for years now. it's great

[14:57] <El_Che> peasants

[14:57] <masak> actually, the main reason Perl 7 has not materialized in any form is that sorear and I are supposed to design it while on a generation ark through the galaxy

[14:58] <El_Che> masak: is there a murder on board?

[14:58] <masak> nope. it's all very civil and un-murder-y.

[14:58] <El_Che> https://en.wikipedia.org/wiki/Ascension_(miniseries)

[14:59] *** lelf joined
[15:00] <masak> looks nice

[15:00] <masak> anyway, murders are good for driving the plot of TV series, but less so when you're designing the next version of Perl

[15:01] <El_Che> masak: I am not sure about that. I few well timed murders could have sped the process up

[15:03] *** darutoko- left
[15:04] <AlexDaniel> El_Che: why -01? :)

[15:04] <Geth> ¦ doc: 0d060e781c | cfa++ | doc/Type/X/Role/Initialization.pod6

[15:04] <Geth> ¦ doc: Unindent X::Role::Initialization example.

[15:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0d060e781c

[15:04] <synopsebot> Link: https://doc.perl6.org/type/X::Role::Initialization

[15:05] * masak .oO( "The language that wasn't -- what Perl 6 could've been, with a few well-timed murders" )

[15:06] <El_Che> it's the pkg revision

[15:06] <El_Che> eg, 2018.02.1-01

[15:06] <El_Che> starting revisions at 0 is weird :)

[15:07] <AlexDaniel> El_Che: ↓

[15:07] <AlexDaniel> weekly: "New Rakudo 2018003 Linux packages: https://github.com/nxadm/rakudo-pkg"

[15:07] <notable6> AlexDaniel, Noted!

[15:07] *** cfa joined
[15:07] <tbrowder_>  AlexDaniel: i’m going to try the “kill 0, $signal” because i think that  kills all its child pids (fingers crossed).

[15:08] <El_Che> eg if there is a needed zef update for the same release, I'll create 2018.03-02 packages, while if rakudo is bumped it would be 2018.03.1-01

[15:09] <AlexDaniel> tbrowder_: hm, actually… if you do that when toaster exits, I guess it should work!

[15:09] <AlexDaniel> tbrowder_: so you're probably right!

[15:09] <AlexDaniel> El_Che: makes sense I guess

[15:09] <El_Che> AlexDaniel: inventing stuff along the way

[15:10] <tbrowder_> yep, it will be at the end, the last statement

[15:11] <tbrowder_> think i need an END block to be “safe”?

[15:12] *** eliasr joined
[15:13] <Geth> ¦ doc: 221c00f7b3 | cfa++ | xt/aspell.t

[15:13] <Geth> ¦ doc: Explicitly set the aspell language to en_US.

[15:13] <Geth> ¦ doc: 

[15:13] <Geth> ¦ doc: Prevent false positives for machines that have non-US LANG settings

[15:13] <Geth> ¦ doc: (e.g. LANG=en_GB.UTF-8).

[15:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/221c00f7b3

[15:13] <AlexDaniel> cfa++

[15:14] <cfa> this was bugging me (guess what my LANG setting is :))

[15:14] <AlexDaniel> although… I have en_US.UTF-8 but it still complains about a bunch of stuff

[15:14] <cfa> AlexDaniel: interesting

[15:14] <AlexDaniel> or it did in the past, I should really check it

[15:14] <cfa> at least (assuming the dictionary is installed) those problems should be more obviously reproducible now

[15:14] <cfa> also, good morning

[15:15] <moritz> \o cfa

[15:15] <El_Che> o/

[15:15] <cfa> \o/

[15:15] <El_Che> <o>

[15:15] <masak> /o\

[15:16] <cfa> 웃

[15:16] <araraloren> _o_

[15:16] <El_Che> (what did I do?)

[15:16] <El_Che> that looks like operators Zoffix would use :)

[15:16] <cfa> >-Ofun

[15:16] * araraloren prepare for sleep

[15:17] <araraloren> night all :)

[15:18] *** araraloren left
[15:18] <timotimo> cfa: that is awesome, we need that as a real hat to put on our heads (and also some way to hide our arms)

[15:19] <cfa> ha ha

[15:19] <cfa> oh, i came across an interesting (for some definition of interesting) question yesterday

[15:19] <cfa> given this,

[15:19] <cfa> m: my (@a, @b) := <one two three>, <four five six>; {a => @a, b => @b}.say;

[15:19] <camelia> rakudo-moar 96570c5ca: OUTPUT: «{a => (one two three), b => (four five six)}␤»

[15:19] <cfa> m: my ($a, $b)  = <one two three>, <four five six>; {a => $a, b => $b}.say;

[15:19] <camelia> rakudo-moar 96570c5ca: OUTPUT: «{a => (one two three), b => (four five six)}␤»

[15:20] <cfa> we can either bind or assign items to destructure the list of lists on the rhs

[15:20] <cfa> but is there an elegant way to do non-binding assignment to @a and @b?

[15:20] <cfa> (without @a slurping up everything as in:)

[15:20] <cfa> m: my (@a, @b)  = <one two three>, <four five six>; {a => @a, b => @b}.say;

[15:20] <camelia> rakudo-moar 96570c5ca: OUTPUT: «{a => [(one two three) (four five six)], b => []}␤»

[15:22] <jnthn> No, slurping up the rest is the intended semantics of an @foo in a list assignment

[15:22] <cfa> yeah

[15:23] <jnthn> That's why my ($head, @rest) = foo() works

[15:23] <jnthn> The elegant way is to use binding :)

[15:23] <cfa> yeah, i thought there might be a magical incantation i was missing

[15:23] <cfa> like, the slurpy case is as expected

[15:23] <jnthn> It's only a : extra :)

[15:23] <cfa> yeah

[15:24] <cfa> i wanted an array of scalars, so it ended being a bit more verbose

[15:24] <cfa> itemisation then @(...)

[15:25] *** travis-ci joined
[15:25] <travis-ci> Doc build failed. cfa 'Unindent X::Role::Initialization example.'

[15:25] <travis-ci> https://travis-ci.org/perl6/doc/builds/355405312 https://github.com/perl6/doc/compare/848e792c1ae7...0d060e781c24

[15:25] *** travis-ci left
[15:25] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[15:26] <cfa> i also noticed there's no unzip (i.e., complement of Z or zip) builtin; so this was all re: using roundrobin to extract the two lists

[15:26] <AlexDaniel> cfa: what the! I've never seen that one! 웃

[15:26] <AlexDaniel> u: 웃

[15:26] <unicodable6> AlexDaniel, U+C6C3 Hangul Syllable US [Lo] (웃)

[15:26] <cfa> AlexDaniel: my work here is done

[15:26] <AlexDaniel> unidump: 웃

[15:27] <unicodable6> AlexDaniel, https://gist.github.com/ef787acf48a628a79ff97174086c4ce9

[15:27] <AlexDaniel> Alpha – True

[15:28] <AlexDaniel> m: say \웃 = 42; say 웃

[15:28] <camelia> rakudo-moar 96570c5ca: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Preceding context expects a term, but found infix = instead.␤Did you make a mistake in Pod syntax?␤at <tmp>:1␤------> 3say \웃 =7⏏5 42; say 웃␤»

[15:28] <AlexDaniel> ok maybe not

[15:28] *** cdg joined
[15:28] <AlexDaniel> I thought Lo can be used like that

[15:29] <cfa> m: my \웃 = 42; say 웃

[15:29] <camelia> rakudo-moar : OUTPUT: «Cannot allocate memory»

[15:29] <cfa> hunh

[15:29] <AlexDaniel> e: my \웃 = 42; say 웃

[15:29] <evalable6> AlexDaniel, rakudo-moar 96570c5ca: OUTPUT: «42␤»

[15:29] <AlexDaniel> ah, it's just me being blind

[15:29] <AlexDaniel> m: say 42

[15:29] <camelia> rakudo-moar 96570c5ca: OUTPUT: «42␤»

[15:29] <AlexDaniel> m: my \웃 = 42; say 웃

[15:29] <camelia> rakudo-moar 96570c5ca: OUTPUT: «42␤»

[15:29] <AlexDaniel> cfa: camelia was on a vacation

[15:29] <cfa> ha, okay

[15:29] *** cdg left
[15:29] <cfa> lucky  bot

[15:30] *** cdg joined
[15:31] *** travis-ci joined
[15:31] <travis-ci> Doc build failed. cfa 'Explicitly set the aspell language to en_US.

[15:31] <travis-ci> https://travis-ci.org/perl6/doc/builds/355409896 https://github.com/perl6/doc/compare/0d060e781c24...221c00f7b304

[15:31] *** travis-ci left
[15:31] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[15:31] <cfa> i can't reproduce that pod-valid failure on my machine

[15:31] <cfa> but i don't think it's caused by the last two commits

[15:32] *** athenot left
[15:32] * AlexDaniel restarts the build

[15:32] <cfa> travis-ci, stop trolling me

[15:32] *** cdg_ joined
[15:33] <DrForr> o/

[15:34] <Geth> ¦ doc: 7c589cf0d3 | (Will "Coke" Coleda)++ | xt/duplicates.t

[15:34] <Geth> ¦ doc: Check rendered docs, not raw pod

[15:34] <Geth> ¦ doc: 

[15:34] <Geth> ¦ doc: * respect TEST_THREADS

[15:34] <Geth> ¦ doc: * ignore tables (requires a slightly recent rakudo)

[15:34] <Geth> ¦ doc: * ignore some single-char non-letters, e.g.: / < >

[15:34] <Geth> ¦ doc: 

[15:34] <Geth> ¦ doc: (Whoops; part of this commit went in with b895a847)

[15:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7c589cf0d3

[15:34] *** mcmillhj left
[15:35] <AlexDaniel> ah… okay :)

[15:35] *** pierre_ left
[15:36] <[Coke]> ^^ Screwed up my commits here due to not paying attention after a git stash pop; but xt/duplicates is now checking the rendered pod, not the raw stuff, caught several more dupes that are also cleaned out

[15:36] <[Coke]> 16:34 <+Geth> ¦ doc: * ignore some single-char non-letters, e.g.: / < >

[15:36] <[Coke]> 16:34 <+Geth> ¦ doc:

[15:36] <[Coke]> 16:34 <+Geth> ¦ doc: (Whoops; part of this commit went in with b895a847)

[15:36] *** cdg left
[15:36] <[Coke]> (crap, misclick)

[15:36] <[Coke]> cfa++

[15:36] <AlexDaniel> [Coke]: fwiw I typically do ｢git diff --staged｣ before committing and ｢git show｣ after

[15:37] <AlexDaniel> sorta ensures that I'm not committing what I don't want

[15:38] <[Coke]> Yes, I know how to avoid the issue, I merely failed to

[15:38] <[Coke]> thanks, though.

[15:39] <[Coke]> anyway, that avoids the C C<Str> issue (which I know was just skipped recently, but this avoids that entire class of issues)

[15:39] <cfa> nice

[15:39] <cfa> thanks [Coke] 

[15:43] *** zakharyas joined
[15:47] *** mcmillhj joined
[15:50] *** travis-ci joined
[15:50] <travis-ci> Doc build failed. cfa 'Explicitly set the aspell language to en_US.

[15:50] <travis-ci> https://travis-ci.org/perl6/doc/builds/355409896 https://github.com/perl6/doc/compare/0d060e781c24...221c00f7b304

[15:50] *** travis-ci left
[15:50] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[15:52] <cfa> sigh

[15:53] <Geth> ¦ doc: 44e6081521 | (Zoffix Znet)++ | doc/Type/List.pod6

[15:53] <Geth> ¦ doc: Update/fix/improve &combinations/&permutations

[15:53] <Geth> ¦ doc: 

[15:53] <Geth> ¦ doc: - Document consistification update that makes sub forms

[15:53] <Geth> ¦ doc:     be closer to method forms.

[15:53] <Geth> ¦ doc:     Propspec:    https://github.com/perl6/roast/commit/899d4d7858

[15:53] <Geth> ¦ doc:     Rakudo impl: https://github.com/rakudo/rakudo/commit/29dcde1026

[15:53] <synopsebot> Link: https://doc.perl6.org/type/List

[15:53] <Geth> ¦ doc:     Range $from still got an unresolved bug: R#1629

[15:53] <synopsebot> R#1629 [open]: https://github.com/rakudo/rakudo/issues/1629 [audit entire codebase for such issues] [META] Treatment of non-Int ranges as a sequence of Int values

[15:53] <Geth> ¦ doc:         https://github.com/rakudo/rakudo/issues/1629

[15:53] <Geth> ¦ doc: - Simplify examples (get rid of .join business and just show lists as is)

[15:53] <Geth> ¦ doc: - Don't use examples blocks to break up sentences in the middle

[15:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/44e6081521

[16:06] *** pierre_ joined
[16:06] *** wamba joined
[16:10] *** pierre_ left
[16:13] <timotimo> nine: could you check out why prof-m doesn't work?

[16:20] *** mcmillhj left
[16:28] *** rindolf left
[16:36] *** mcmillhj joined
[16:37] *** athenot joined
[16:38] *** aindilis joined
[16:41] *** mcmillhj left
[16:43] *** domidumont left
[16:44] *** eckhardt_ joined
[16:44] *** domidumont joined
[16:45] *** eckhardt_ left
[16:47] *** neilb left
[16:47] *** mcmillhj joined
[16:47] *** rindolf joined
[16:49] *** domidumont left
[16:57] *** lowbro left
[17:00] *** cdg joined
[17:02] *** cdg__ joined
[17:03] *** cdg___ joined
[17:03] *** cdg_ left
[17:05] *** cdg left
[17:06] *** cdg__ left
[17:06] <b2gills> .tell thowe `state` variables (like `$++`) behave as if they were `my` declared in the next outer scope. Meaning they get reset when the outer scope does.

[17:06] <yoleaux> b2gills: I'll pass your message to thowe.

[17:09] *** pierre_ joined
[17:11] <lizmat> reportable6: weekly New Rakudo 2018003 Linux packages: https://github.com/nxadm/rakudo-pkg

[17:11] <reportable6> lizmat, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Reportable

[17:11] <lizmat> notable6: weekly New Rakudo 2018003 Linux packages: https://github.com/nxadm/rakudo-pkg

[17:11] <notable6> lizmat, Noted!

[17:12] *** unicodable6 left
[17:12] *** unicodable6 joined
[17:15] *** pierre_ left
[17:16] *** robertle left
[17:23] *** pharv joined
[17:25] <Geth> ¦ doc: 045d14fc91 | (Zoffix Znet)++ | doc/Type/List.pod6

[17:25] <Geth> ¦ doc: Clarify &combinations

[17:25] <Geth> ¦ doc: 

[17:25] <Geth> ¦ doc: Reword explanation in terms of method form and simplify signature,

[17:25] <Geth> ¦ doc: to make it easier to understand that it's essentially a front for the

[17:25] <synopsebot> Link: https://doc.perl6.org/type/List

[17:25] <Geth> ¦ doc: method form.

[17:25] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/045d14fc91

[17:25] *** travis-ci joined
[17:25] <travis-ci> Doc build failed. Zoffix Znet 'Update/fix/improve &combinations/&permutations

[17:25] <travis-ci> https://travis-ci.org/perl6/doc/builds/355429970 https://github.com/perl6/doc/compare/7c589cf0d335...44e6081521ca

[17:25] *** travis-ci left
[17:25] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[17:34] <Geth> ¦ doc: f68ef83399 | (Zoffix Znet)++ | t/pod-valid.t

[17:34] <Geth> ¦ doc: Fix typo

[17:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f68ef83399

[17:34] *** domidumont joined
[17:35] *** bentham275 joined
[17:35] *** bentham275 left
[17:36] *** epony joined
[17:37] *** dakkar left
[17:43] <pmurias> http://blogs.perl.org/users/pawel_murias/2018/03/rakudojs-update---working-source-maps-and-adhoc-fixes.html

[17:44] <El_Che> reportable6: http://blogs.perl.org/users/pawel_murias/2018/03/rakudojs-update---working-source-maps-and-adhoc-fixes.html

[17:44] <reportable6> El_Che, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Reportable

[17:44] <El_Che> reportable6: weekly http://blogs.perl.org/users/pawel_murias/2018/03/rakudojs-update---working-source-maps-and-adhoc-fixes.html

[17:44] <reportable6> El_Che, Couldn't find a snapshot for weekly (try ｢list｣ command to see what's available).

[17:44] <El_Che> notable6: weekly http://blogs.perl.org/users/pawel_murias/2018/03/rakudojs-update---working-source-maps-and-adhoc-fixes.html

[17:44] <notable6> El_Che, Noted!

[17:45] <El_Che> ouf

[17:45] <El_Che> pmurias: your formatting is off. Lots of break lines

[17:47] <pmurias> El_Che: thanks

[17:49] <El_Che> at your service :)

[17:50] *** pharv left
[17:51] *** pharv joined
[17:52] <Geth> ¦ doc: ab0a18a0cf | (Zoffix Znet)++ | t/pod-valid.t

[17:52] <Geth> ¦ doc: Fix data race in t/pod-valid.t

[17:52] <Geth> ¦ doc: 

[17:52] <Geth> ¦ doc: Seem to produce floppy failures. No idea is this fixes them or not,

[17:52] <Geth> ¦ doc: but fairly sure there's a data race with multiple Proc's trying to

[17:52] <Geth> ¦ doc: create new keys in the same hash.

[17:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ab0a18a0cf

[17:52] *** AzaDO joined
[17:52] *** travis-ci joined
[17:52] <travis-ci> Doc build failed. Zoffix Znet 'Fix typo'

[17:52] <travis-ci> https://travis-ci.org/perl6/doc/builds/355481352 https://github.com/perl6/doc/compare/045d14fc913e...f68ef8339937

[17:52] *** travis-ci left
[17:53] <Geth> ¦ doc: 05a77c6c7c | (Zoffix Znet)++ | 2 files

[17:53] <Geth> ¦ doc: Add debug var for dumping STDERR of t/pod-valid.t failures

[17:53] <Geth> ¦ doc: 

[17:53] <Geth> ¦ doc: And simplify code a bit (the tap receives a Str not a buf and there's

[17:53] <Geth> ¦ doc: no point in assigning it to a param if we never use it);

[17:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/05a77c6c7c

[17:53] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[17:55] <Geth> ¦ doc: 421d2b07c5 | (Zoffix Znet)++ | t/pod-valid.t

[17:55] <Geth> ¦ doc: Add ability to specify just 1 file for t/pod-valid.t

[17:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/421d2b07c5

[17:55] <[Coke]> zoffix, that already did that.

[17:57] *** pharv left
[17:57] *** pharv joined
[17:57] <Geth> ¦ doc: 7158320a4d | (Zoffix Znet)++ | 2 files

[17:57] <Geth> ¦ doc: Follow convention for env var naming for test vars

[17:57] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7158320a4d

[17:58] <Geth> ¦ doc: adc83c923a | (Zoffix Znet)++ | README.md

[17:58] <Geth> ¦ doc: Document P6_DOC_TEST_FUDGE env var

[17:58] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/adc83c923a

[17:58] *** cdg joined
[17:59] <Geth> ¦ doc: 0389774865 | (Zoffix Znet)++ | .travis.yml

[17:59] <Geth> ¦ doc: Enable P6_DOC_TEST_VERSBOSE during make test

[17:59] <Geth> ¦ doc: 

[17:59] <Geth> ¦ doc: To make travis tell us more about what it's not happy about

[17:59] <Geth> ¦ doc: with recent failures.

[17:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0389774865

[18:00] <Geth> ¦ doc: b190f963b8 | (Zoffix Znet)++ | t/pod-valid.t

[18:00] <Geth> ¦ doc: Revert "Add ability to specify just 1 file for t/pod-valid.t"

[18:00] <Geth> ¦ doc: 

[18:00] <Geth> ¦ doc: This reverts commit 421d2b07c57ff97b5f9093426cdda1a4e52fe6f2.

[18:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b190f963b8

[18:00] *** cdg left
[18:00] *** cdg_ joined
[18:01] *** cdg___ left
[18:03] *** AzaDO left
[18:09] *** cdg joined
[18:13] *** comborico1611 joined
[18:13] *** cdg_ left
[18:14] *** Zoffix joined
[18:14] <Zoffix> [Coke]: what's IO::String's purpose in xt/examples-compilation.t? Just to ignore output?

[18:26] *** natrys joined
[18:28] <Zoffix> m: "no worries; if False \{\nclass :: \{\n;\nsay q/a b/ ~~ /a b/; # OUTPUT: «False»\n\n}}".EVAL

[18:28] <camelia> rakudo-moar a0ee718db: ( no output )

[18:28] <Zoffix> weird; when run as part of xt/examplies-compilation.t that prints the warning :9

[18:29] <Geth> ¦ doc: 45ce3b6a17 | (Zoffix Znet)++ | xt/examples-compilation.t

[18:29] <Geth> ¦ doc: Get rid of IO::String usage

[18:29] <Geth> ¦ doc: 

[18:29] <Geth> ¦ doc: Fixes D#1827 https://github.com/perl6/doc/issues/1827

[18:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/45ce3b6a17

[18:29] <synopsebot> D#1827 [open]: https://github.com/perl6/doc/issues/1827 [build] travis build installing modules it doesn't need

[18:32] *** mahafyi left
[18:32] <Geth> ¦ doc: 3a0eadcd50 | (Zoffix Znet)++ | xt/examples-compilation.t

[18:32] <Geth> ¦ doc: no worries

[18:32] <Geth> ¦ doc: 

[18:32] <Geth> ¦ doc: Here is a little song I wrote

[18:32] <Geth> ¦ doc: You might want to sing it note for note

[18:32] <Geth> ¦ doc: Don't worry be happy

[18:32] <Geth> ¦ doc: In every life we have some trouble

[18:32] <Geth> ¦ doc: When you worry you make it double

[18:32] <Geth> ¦ doc: Don't worry, be happy......

[18:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3a0eadcd50

[18:33] *** mahafyi joined
[18:34] <AlexDaniel> xD

[18:34] *** espadrine joined
[18:35] *** thowe joined
[18:42] <Zoffix> Ahhhh

[18:42] <Zoffix> m: "no worries; if False \{\nclass :: \{\n;\n/a b/\n\n}}".EVAL;

[18:42] <camelia> rakudo-moar a0ee718db: ( no output )

[18:42] <Zoffix> m: /./; "no worries; if False \{\nclass :: \{\n;\n/a b/\n\n}}".EVAL;

[18:42] <camelia> rakudo-moar a0ee718db: OUTPUT: «Potential difficulties:␤    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)␤    at /home/camelia/EVAL_0:4␤    ------> 3/a7⏏5 b/␤»

[18:42] <Zoffix> The language braid caching strikes again, I guess.

[18:42] <Geth> ¦ doc: c78c8e6de6 | cfa++ | 3 files

[18:42] <Geth> ¦ doc: P6_DOC_TEST_VERSBOSE => P6_DOC_TEST_VERBOSE

[18:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c78c8e6de6

[18:43] <cfa> Zoffix: ^

[18:43] <Zoffix> m: no worries; /./; "no worries; if False \{\nclass :: \{\n;\n/a b/\n\n}}".EVAL;

[18:43] <camelia> rakudo-moar a0ee718db: ( no output )

[18:43] <Zoffix> cfa: thanks

[18:43] <cfa> np

[18:48] <Geth> ¦ doc: 6725d6975e | (Zoffix Znet)++ | xt/examples-compilation.t

[18:48] <Geth> ¦ doc: Workaround for xt/examples-compilation spewing warning

[18:48] <Geth> ¦ doc: 

[18:48] <Geth> ¦ doc: R#1630 https://github.com/rakudo/rakudo/issues/1630 is the cause;

[18:48] <Geth> ¦ doc: add a hack pre-caching `no worries` pragma in regexes, to prevent

[18:48] <Geth> ¦ doc: spewing warnings from regexes when we're compiling examples.

[18:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6725d6975e

[18:48] <synopsebot> R#1630 [open]: https://github.com/rakudo/rakudo/issues/1630 `no worries` pragma gets cached by regex braid

[18:50] *** itaipu joined
[18:50] *** travis-ci joined
[18:50] <travis-ci> Doc build passed. Zoffix Znet 'no worries

[18:50] <travis-ci> https://travis-ci.org/perl6/doc/builds/355507012 https://github.com/perl6/doc/compare/45ce3b6a17ae...3a0eadcd5002

[18:50] *** travis-ci left
[18:51] <Zoffix> yey

[18:51] *** Zoffix left
[18:51] <cfa> huzzah

[18:51] <buggable> New CPAN upload: ANTLR4-Grammar-0.0.1.tar.gz by JGOFF https://cpan.metacpan.org/authors/id/J/JG/JGOFF/Perl6/ANTLR4-Grammar-0.0.1.tar.gz

[18:59] *** travis-ci joined
[18:59] <travis-ci> Doc build passed. cfa 'P6_DOC_TEST_VERSBOSE => P6_DOC_TEST_VERBOSE'

[18:59] <travis-ci> https://travis-ci.org/perl6/doc/builds/355510682 https://github.com/perl6/doc/compare/3a0eadcd5002...c78c8e6de6ed

[18:59] *** travis-ci left
[19:06] *** zakharyas left
[19:09] *** travis-ci joined
[19:09] <travis-ci> Doc build passed. Zoffix Znet 'Workaround for xt/examples-compilation spewing warning

[19:09] <travis-ci> https://travis-ci.org/perl6/doc/builds/355513275 https://github.com/perl6/doc/compare/c78c8e6de6ed...6725d6975e75

[19:09] *** travis-ci left
[19:09] *** FROGGS joined
[19:10] *** itaipu left
[19:11] *** itaipu joined
[19:11] *** athenot left
[19:25] *** cdg_ joined
[19:26] <Geth> ¦ doc: a4c124ca66 | (JJ Merelo)++ | htmlify.p6

[19:26] <Geth> ¦ doc: Dealing with ? in URLs

[19:26] <Geth> ¦ doc: 

[19:26] <Geth> ¦ doc: Which means it fixes #1677 but it actually does nothing to #1851,

[19:26] <Geth> ¦ doc: which has completely disappeared.

[19:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a4c124ca66

[19:26] <Geth> ¦ doc: 07fd1ac367 | (JJ Merelo)++ | xt/examples-compilation.t

[19:26] <Geth> ¦ doc: Merge branch 'master' of github.com:perl6/doc

[19:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/07fd1ac367

[19:28] *** cdg left
[19:30] *** cdg_ left
[19:31] <buggable> New CPAN upload: ANTLR4-Grammar-0.0.2.tar.gz by JGOFF https://cpan.metacpan.org/authors/id/J/JG/JGOFF/Perl6/ANTLR4-Grammar-0.0.2.tar.gz

[19:32] *** pharv left
[19:34] *** pharv joined
[19:40] <Geth> ¦ whateverable: 5eb618dcca | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[19:40] <Geth> ¦ whateverable: Make bisectable DWIM

[19:40] <Geth> ¦ whateverable: 

[19:40] <Geth> ¦ whateverable: Resolves #282. The user is expected to use `old=…, new=…` syntax, but

[19:40] <Geth> ¦ whateverable: sometimes people forget. This commit makes bisectable understand

[19:40] <Geth> ¦ whateverable: committable-like syntax. Note that bisectable can only detect this by

[19:40] *** domidumont left
[19:40] <Geth> ¦ whateverable: checking the existence of suspected revisions, meaning that it won't be

[19:40] <Geth> ¦ whateverable: able to produce helpful “Did you mean …” messages if you misspell one

[19:40] <Geth> ¦ whateverable: <…commit message has 6 more lines…>

[19:40] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/5eb618dcca

[19:41] *** bisectable6 joined
[19:41] <AlexDaniel> Zoffix: I can't believe you'll find a way to make bisectable not understand what you wn

[19:41] <AlexDaniel> want now ↑

[19:42] <AlexDaniel> bisect: 2016.02 2017.05 say 42

[19:42] <bisectable6> AlexDaniel, Using old=2016.02 new=2017.05 in an attempt to DWIM

[19:42] <bisectable6> AlexDaniel, On both starting points (old=2016.02 new=2017.05) the exit code is 0 and the output is identical as well

[19:42] <bisectable6> AlexDaniel, Output on both points: «42␤»

[19:43] *** cdg joined
[19:43] *** amalia___ left
[19:47] *** cdg left
[19:50] *** pharv left
[19:50] *** pharv joined
[19:51] *** Zoffix joined
[19:51] <Zoffix> AlexDaniel++ thanks.

[19:51] *** Zoffix left
[20:02] *** athenot joined
[20:04] *** mahafyi left
[20:04] <thowe> Oh.  Perl Conference in Salt Lake again :)

[20:04] <yoleaux> 17:06Z <b2gills> thowe: `state` variables (like `$++`) behave as if they were `my` declared in the next outer scope. Meaning they get reset when the outer scope does.

[20:05] <thowe> b2gills, Your message through time is appreciated.  My day is brightened and enlightened.

[20:07] *** wamba left
[20:07] *** wamba joined
[20:13] *** pharv left
[20:13] *** pharv joined
[20:22] <[Coke]> zoffix, yes, IO::String is to capture and ignore all output.

[20:22] <[Coke]> ... and that fix looks fine. Thanks.

[20:40] *** cdg joined
[20:42] *** cdg left
[20:42] *** cdg joined
[20:48] *** wamba left
[20:53] *** pecastro joined
[20:59] *** rindolf left
[20:59] *** MilkmanDan left
[21:01] *** MilkmanDan joined
[21:04] *** skids left
[21:05] *** andrzejk_ joined
[21:07] *** mcmillhj left
[21:07] *** lelf` joined
[21:09] *** lelf left
[21:10] *** athenot_ joined
[21:10] *** vcv left
[21:10] *** athenot left
[21:12] *** ChoHag_ left
[21:13] *** ChoHag joined
[21:24] *** lelf`` joined
[21:24] *** pharv left
[21:25] *** lelf` left
[21:26] *** pharv joined
[21:29] *** pharv left
[21:29] *** pharv joined
[21:43] *** andrzejk_ left
[22:03] *** FROGGS left
[22:28] *** natrys left
[22:29] *** lelf`` left
[22:30] *** dct joined
[22:30] <lizmat> And another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/03/19/2018-12-remotely-edument/

[22:30] <AlexDaniel> weekly: clear

[22:30] <notable6> AlexDaniel, Moved existing notes to “weekly_2018-03-19T22:30:44Z”

[22:31] <lizmat> AlexDaniel: thanks  :-)

[22:34] <AlexDaniel> lizmat++

[22:35] *** sjn_ joined
[22:38] *** sjn_ left
[22:42] *** itaipu left
[22:45] *** mcmillhj joined
[22:47] *** notable6 left
[22:47] *** notable6 joined
[22:50] *** sjn joined
[22:50] *** mcmillhj left
[22:59] *** skids joined
[23:01] *** cdg left
[23:22] *** Kaiepi joined
[23:25] *** comborico1611 left
[23:27] *** pierre joined
[23:32] *** pierre left
[23:34] *** pmurias left
[23:36] *** MilkmanDan left
[23:39] *** MilkmanDan joined
[23:42] *** markong left
[23:52] *** cdg joined
[23:52] *** pharv left
[23:54] *** stmuk_ left
[23:55] *** AlexDaniel left
[23:56] *** cdg left
[23:59] *** cdg joined
