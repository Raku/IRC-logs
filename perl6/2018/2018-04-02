[00:07] *** kurahaupo left
[00:08] *** kurahaupo joined
[00:11] *** vcv joined
[00:17] <MasterDuke> b2gills: `Bool.roll($len)` is twice as slow as `Bool.roll xx $len`

[00:17] <MasterDuke> m: my $l = 1_000_000; my @a = Bool.roll xx $l; say now - INIT now

[00:17] <camelia> rakudo-moar 111f67a4b: OUTPUT: «0.6908779␤»

[00:18] <MasterDuke> m: my $l = 1_000_000; my @a = Bool.roll($l); say now - INIT now

[00:18] <camelia> rakudo-moar 111f67a4b: OUTPUT: «2.5277403␤»

[00:18] *** kurahaupo left
[00:18] *** kurahaupo joined
[00:20] <b2gills> Is there a bug report?

[00:30] *** kurahaupo left
[00:30] *** kurahaupo joined
[00:31] *** pierre joined
[00:32] <MasterDuke> b2gills: don't think so. https://github.com/rakudo/rakudo/issues/1675 is kind of related

[00:32] *** bwisti left
[00:33] <MasterDuke> i'm seeing if there are any quick fixes now

[00:33] <MasterDuke> nqp::floor_n is not being jitted

[00:39] *** khisanth_ joined
[00:42] *** khisanth__ left
[00:44] *** kurahaupo left
[00:45] *** kurahaupo joined
[00:59] *** Ven`` joined
[01:00] *** kurahaupo left
[01:00] *** kurahaupo joined
[01:09] *** Ven`` left
[01:15] *** kurahaupo left
[01:15] *** kurahaupo joined
[01:30] *** kurahaupo left
[01:32] *** kurahaupo joined
[01:34] *** test joined
[01:34] *** test is now known as Guest69315

[01:45] *** kurahaupo left
[01:46] *** kurahaupo joined
[01:47] *** Kaiepi left
[01:48] *** Sgeo_ joined
[01:48] *** ilbot3 left
[01:48] *** vcv left
[01:48] <AlexDaniel> squashable6: next

[01:48] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 4 days and ≈8 hours (2018-04-07 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[01:49] *** Sgeo left
[01:50] *** Kaiepi joined
[01:51] *** Sgeo__ joined
[01:54] *** Sgeo_ left
[01:54] *** aborazmeh joined
[01:54] *** aborazmeh left
[01:54] *** aborazmeh joined
[01:55] *** ilbot3 joined
[01:55] *** ChanServ sets mode: +v ilbot3

[01:58] <AlexDaniel> any p6 magicians here? How can you possibly get 99 Bottles of Beer in 96 characters?

[01:59] <AlexDaniel> I stripped down my solution to only include text (no logic whatsoever)

[01:59] <AlexDaniel> “no more bottle of beer on the wall Take one down and pass it around Go to the store and buy some more” – 101 character

[01:59] <AlexDaniel> oops

[01:59] <AlexDaniel> I mean perl5* of course

[02:00] <AlexDaniel> and I'm talking about this: https://code-golf.io/scores/99-bottles-of-beer

[02:01] *** kurahaupo left
[02:01] <AlexDaniel> I see there are some relatively short golfs of the same task in perl5, but not 96 characters omg

[02:01] *** kurahaupo joined
[02:09] *** vcv joined
[02:12] *** kurahaupo left
[02:12] *** kurahaupo joined
[02:17] *** pierre left
[02:21] <Kaiepi> would it be an encoding thing?

[02:21] <Kaiepi> AlexDaniel, 

[02:22] <AlexDaniel> possibly, yeah?

[02:22] <AlexDaniel> something like this maybe: https://github.com/AlexDaniel/6lang-golf-cheatsheet#base-0x110000

[02:22] <AlexDaniel> but you still can't just encode the whole thing

[02:22] *** kurahaupo left
[02:23] *** kurahaupo joined
[02:25] *** pierre joined
[02:26] *** Zoffix joined
[02:26] <Zoffix> perlbot: eval: '$n=pop||99;sub b{"$n bottle@{[$n!=1&&s=>]} of beer"}print$b=b,$w=' on the wall',", $b!\nTake one down, pass it around,\n",b($n--),"$w!\n\n"while$n

[02:26] <yoleaux> 1 Apr 2018 12:17Z <tbrowder_> Zoffix: i took a quick look at doc build and saw a couple msgs about pod table issues but i can’t duplicate it again

[02:26] <perlbot> Zoffix: [31m===[0mSORRY![31m===[0m Error while compiling /tmp/QJsDllWp8D Bogus statement at /tmp/QJsDllWp8D:1 ------> [32m{[$n!=1&&s=>]} of beer"}print$b=b,$w=' o[33m⏏[31mn the wall',", $b!\nTake one down, pass [0m     expecting any of:         whitespace [Exited 1]

[02:28] <Zoffix> m: say chars «$n=pop||99;sub b{"$n bottle@{[$n!=1&&s=>]} of beer"}print$b=b,$w=' on the wall',", $b!\nTake one down, pass it around,\n",b($n--),"$w!\n\n"while$n»

[02:28] <camelia> rakudo-moar 111f67a4b: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$n' is not declared␤at <tmp>:1␤------> 3say chars «7⏏5$n=pop||99;sub b{"$n bottle@{[$n!=1&&s=>␤»

[02:28] *** pierre left
[02:28] *** xtreak joined
[02:28] *** pierre joined
[02:28] <Zoffix> m: say 147-101

[02:28] <camelia> rakudo-moar 111f67a4b: OUTPUT: «46␤»

[02:29] <Zoffix> m: say chars " bottle of beer on the wall, !\nTake one down, pass it around,\n!\n\n"

[02:29] <camelia> rakudo-moar 111f67a4b: OUTPUT: «65␤»

[02:29] <Zoffix> AlexDaniel: ^ only 65 chars of text in that one, not 101

[02:31] *** dct left
[02:31] *** Kaiepi left
[02:31] *** Kaiepi joined
[02:36] *** kurahaupo left
[02:38] *** xtreak left
[02:39] *** kurahaupo joined
[02:39] <AlexDaniel> Zoffix: but “Go to the store and buy some more” ?

[02:47] *** entonian joined
[02:51] <Zoffix> Ah

[02:52] *** entonian left
[02:54] *** kurahaupo left
[02:54] *** kurahaupo joined
[03:04] *** robertle left
[03:05] *** kurahaupo left
[03:05] <vcv> great cheatsheet, AlexDaniel

[03:06] *** kurahaupo joined
[03:06] *** robertle joined
[03:10] <vcv> another little trick i found, don't know if it's intended to actually work, but if you use the ^ twigil you can later reference the same variable without the twigil

[03:10] <vcv> m: { say $^a, "==", $a } for 1...5

[03:10] <camelia> rakudo-moar 111f67a4b: OUTPUT: «1==1␤2==2␤3==3␤4==4␤5==5␤»

[03:11] <Zoffix> Yeah, that's meant to work. Lets you use that variable in nested scopes

[03:11] <Zoffix> m: { say $^a, ' -> ', { $a + 42 }() }(5)

[03:11] <camelia> rakudo-moar 111f67a4b: OUTPUT: «5 -> 47␤»

[03:11] <vcv> Sweet. 

[03:12] <Zoffix> same with $: twigil

[03:12] <vcv> yep, that's exactly what i used it for on https://code-golf.io/christmas-trees

[03:12] <Zoffix> m: { say $:foo, ' -> ', { $foo + 42 }() }(:5foo)

[03:12] <camelia> rakudo-moar f1b9c7dab: OUTPUT: «5 -> 47␤»

[03:18] *** kurahaupo left
[03:19] *** kurahaupo joined
[03:19] *** eliasr left
[03:20] <Zoffix> .seen pmichaud

[03:20] <yoleaux> I saw pmichaud 22 Mar 2018 09:56Z in #perl6: <pmichaud> happy spring equinox to all

[03:26] *** vcv left
[03:30] *** khw left
[03:31] *** tt left
[03:33] *** kurahaupo left
[03:33] *** kurahaupo joined
[03:41] *** Zoffix left
[03:43] *** aborazmeh left
[03:46] *** kurahaupo left
[03:46] *** kurahaupo joined
[03:46] *** Guest69315 left
[03:57] *** kurahaupo left
[03:57] *** kurahaupo joined
[04:07] *** kurahaupo left
[04:08] *** kurahaupo joined
[04:14] *** Kaiepi left
[04:15] *** Kaiepi joined
[04:17] *** Kaiepi left
[04:17] *** Kaiepi joined
[04:22] *** kurahaupo left
[04:23] *** kurahaupo joined
[04:29] *** skids left
[04:35] *** kurahaupo left
[04:35] *** kurahaupo joined
[04:48] *** kurahaupo left
[04:49] *** kurahaupo joined
[04:59] *** kurahaupo left
[05:00] *** kurahaupo joined
[05:01] *** kurahaupo left
[05:02] *** kurahaupo_ joined
[05:08] *** pierre left
[05:09] *** xtreak joined
[05:14] *** pierre joined
[05:19] *** pierre left
[05:20] *** sena_kun joined
[05:30] *** jmerelo joined
[05:30] *** wamba joined
[05:30] <jmerelo> bench: compare HEAD Bool.roll xx 10000 ||| Bool.roll(10000)

[05:30] <yoleaux> 1 Apr 2018 22:54Z <b2gills> jmerelo: `Bool.roll xx $len` is probably better written as `Bool.roll($len)`

[05:31] <benchable6> jmerelo, starting to benchmark the 1 given commit

[05:31] <benchable6> jmerelo, https://gist.github.com/9962ed8ad9c218ce798bb48fdc1c37b8

[05:32] <jmerelo> .tell b2gills check the comparison above. Maybe it's more idiomatic, but the first way is 300 times faster. 

[05:32] <yoleaux> jmerelo: I'll pass your message to b2gills.

[05:33] *** pierre joined
[05:36] <AlexDaniel> jmerelo: you sure it's 300 times not 3 times?

[05:36] <AlexDaniel> jmerelo: fwiw see this: https://github.com/rakudo/rakudo/issues/1681

[05:37] *** pierre left
[05:40] <jmerelo> AlexDaniel: right, 30 times. Faster anyway.

[05:40] <AlexDaniel> I'm measuring 3 times here

[05:40] <AlexDaniel> bench: compare HEAD Bool.roll xx 1000000 ||| Bool.roll(1000000)

[05:40] <benchable6> AlexDaniel, starting to benchmark the 1 given commit

[05:40] <benchable6> AlexDaniel, https://gist.github.com/75b33fa2381463affaf344011a48a84f

[05:41] <AlexDaniel> bench: compare HEAD say +(Bool.roll xx 1000000) ||| say +Bool.roll(1000000)

[05:41] <benchable6> AlexDaniel, starting to benchmark the 1 given commit

[05:41] <benchable6> AlexDaniel, ¦HEAD: «Benchmark: ␤«timed out after 10 seconds»»

[05:41] <AlexDaniel> gosh…

[05:41] <AlexDaniel> bench: compare HEAD say +(Bool.roll xx 100000) ||| say +Bool.roll(100000)

[05:41] <benchable6> AlexDaniel, starting to benchmark the 1 given commit

[05:41] <benchable6> AlexDaniel, https://gist.github.com/bd886430324ffb4b8ee6252b746b44a2

[05:42] <AlexDaniel> ok whatever

[05:43] * AlexDaniel dislocates

[05:44] <jmerelo> AlexDaniel: Do you maybe have some time to talk about https://gist.github.com/Whateverable/9962ed8ad9c218ce798bb48fdc1c37b8

[05:48] <jmerelo> AlexDaniel: never mind that now.

[06:01] *** robertle_ joined
[06:07] *** AlexDaniel left
[06:18] *** pierre_ joined
[06:23] *** tt joined
[06:27] <Geth_> ¦ doc: d0297beff9 | (JJ Merelo)++ | doc/Type/Signature.pod6

[06:27] <Geth_> ¦ doc: Adds example for destructuring hashes in pointy loops

[06:27] <Geth_> ¦ doc: 

[06:27] <Geth_> ¦ doc: Closes #1466

[06:27] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/d0297beff9

[06:27] <synopsebot> Link: https://doc.perl6.org/type/Signature

[06:36] *** rindolf joined
[06:40] *** traxex2_ joined
[06:40] *** traxex2 left
[06:40] *** traxex2_ left
[06:45] *** traxex2 joined
[06:50] *** travis-ci joined
[06:50] <travis-ci> Doc build passed. JJ Merelo 'Adds example for destructuring hashes in pointy loops

[06:50] <travis-ci> https://travis-ci.org/perl6/doc/builds/361076887 https://github.com/perl6/doc/compare/c91b2de5e01b...d0297beff909

[06:50] *** travis-ci left
[06:54] *** robertle_ left
[06:56] *** robertle_ joined
[07:12] *** domidumont joined
[07:13] <Geth_> ¦ doc/table-sorting: f856a13ec1 | (Zoffix Znet)++ | 14 files

[07:13] <Geth_> ¦ doc/table-sorting: Implement assets generator

[07:13] <Geth_> ¦ doc/table-sorting: 

[07:13] <Geth_> ¦ doc/table-sorting: We're coming up to having 5 JS files now. 2 years ago, the argument

[07:13] <Geth_> ¦ doc/table-sorting: to leave them unminified was that someone would be able to debug

[07:13] <Geth_> ¦ doc/table-sorting: JS problems on live site. Doesn't seem practical to me any more.

[07:13] <Geth_> ¦ doc/table-sorting: No reason to punish thousands of docs readers, for years, with extra

[07:13] <Geth_> ¦ doc/table-sorting: bandwidth and HTTP requests, on an off chance we'll save this

[07:13] <Geth_> ¦ doc/table-sorting: mythical "debugger" 20 seconds of not having to clone the repo and

[07:13] <Geth_> ¦ doc/table-sorting: run the dev web app that caters unminified assets.

[07:13] <Geth_> ¦ doc/table-sorting: review: https://github.com/perl6/doc/commit/f856a13ec1

[07:15] *** AlexDaniel joined
[07:17] *** domidumont left
[07:17] *** ufobat joined
[07:18] *** domidumont joined
[07:22] <AlexDaniel> jmerelo: well, what is about https://gist.github.com/Whateverable/9962ed8ad9c218ce798bb48fdc1c37b8

[07:22] <Geth_> ¦ doc: e7d367c3f2 | (JJ Merelo)++ | doc/Language/5to6-nutshell.pod6

[07:22] <Geth_> ¦ doc: Adds `callsame` example for perl 6

[07:22] <Geth_> ¦ doc: 

[07:22] <Geth_> ¦ doc: Closes #1388

[07:22] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/e7d367c3f2

[07:22] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[07:22] <AlexDaniel> comparing 9ms to 0.3ms is a bit weird :)

[07:22] <AlexDaniel> both are really fast IMO

[07:23] *** lalitmee joined
[07:23] <AlexDaniel> and benchable doesn't really say how noisy these were :(

[07:23] <AlexDaniel> but there were 10 iterations which is of course good :)

[07:24] *** lalit joined
[07:25] *** darutoko joined
[07:27] *** lalitmee left
[07:29] *** travis-ci joined
[07:29] <travis-ci> Doc build passed. Zoffix Znet 'Implement assets generator

[07:29] <travis-ci> https://travis-ci.org/perl6/doc/builds/361085104 https://github.com/perl6/doc/commit/f856a13ec12a

[07:29] *** travis-ci left
[07:29] <jmerelo> AlexDaniel: they matter if you do that millions of times

[07:29] <jmerelo> AlexDaniel: It's unlikely that it's the bottleneck in an application, but they could be...

[07:39] *** FROGGS joined
[07:49] <lichtkind_> how doe travis and appveyor run when my p6 modul is hosted on cpan?

[07:50] *** lichtkind_ is now known as lichtkind

[07:50] *** lalit is now known as lalitmee

[07:53] <Geth_> ¦ doc/table-sorting: 2fcaf61580 | (Zoffix Znet)++ | app.pl

[07:53] <Geth_> ¦ doc/table-sorting: Spurt all asset files in non-minified mode

[07:53] <Geth_> ¦ doc/table-sorting: review: https://github.com/perl6/doc/commit/2fcaf61580

[07:55] <Geth_> ¦ doc/table-sorting: b3481ef6dc | (Zoffix Znet)++ | 4 files

[07:55] <Geth_> ¦ doc/table-sorting: Add table sorter jQuery plugin

[07:55] <Geth_> ¦ doc/table-sorting: review: https://github.com/perl6/doc/commit/b3481ef6dc

[07:55] <jmerelo> lichtkind: you have to include the configuration in your GitHub repo. 

[08:00] *** zakharyas joined
[08:01] *** pmurias joined
[08:01] *** kanishka joined
[08:02] <pmurias> timotimo, anyone else: shouldn't Str:U be identical as it seems to be create at this line: https://github.com/rakudo/rakudo/blob/master/src/Perl6/Metamodel/DefiniteHOW.nqp#L32

[08:03] <lichtkind> jmerelo, so you let it on github anyway and cpan becomes just second storage?

[08:03] <lichtkind> thanks jmerelo i wanted to ask that anyway :)

[08:05] <lichtkind> jmerelo, i added recently veyor.yml and nothing happened on github

[08:09] <Geth_> ¦ doc/table-sorting: d78704204d | (Zoffix Znet)++ | 2 files

[08:09] <Geth_> ¦ doc/table-sorting: Add sort indicator arrows

[08:09] <Geth_> ¦ doc/table-sorting: review: https://github.com/perl6/doc/commit/d78704204d

[08:11] *** Zoffix joined
[08:14] *** xtreak left
[08:14] <Zoffix> pmurias: Yeah, I'd say so. There's bug RT#128287 where parametarization is messed up. I think there's also a ticket where the type smileys cause similar issue

[08:14] <synopsebot> RT#128287 [open]: https://rt.perl.org/Ticket/Display.html?id=128287 [BUG] Type check `Array[Foo]` in module gets confused if `Array[Foo]` was already referenced in another precompiled module.

[08:15] <Zoffix> Maybe not. But yeah, if you're using Hash[Str:U], then ^ that bug (and all the referenced tickets in it) look to be about that bug

[08:16] *** xtreak joined
[08:17] <pmurias> Zoffix: using Hash[Str:U] makes Str:U behave properly

[08:18] <Zoffix> Oh, no idea then

[08:18] <pmurias> Zoffix: I'm running into the bug because I'm trying to fix a failing roast test on rakudo.js and when running stuff on rakudo.moar to understand things stuff seems to behave in a crazy manner

[08:21] <Geth_> ¦ doc: df93a16c00 | (Zoffix Znet)++ (committed using GitHub Web editor) | type-graph.txt

[08:21] <Geth_> ¦ doc: List HyperWhatever in type graph

[08:21] <Geth_> ¦ doc: review: https://github.com/perl6/doc/commit/df93a16c00

[08:21] *** Geth_ left
[08:22] *** Geth joined
[08:22] *** ChanServ sets mode: +v Geth

[08:30] *** xtreak left
[08:34] <Geth> ¦ doc/table-sorting: 930ff6c160 | (Zoffix Znet)++ | 2 files

[08:34] <Geth> ¦ doc/table-sorting: Use proper HTML table headers

[08:34] <Geth> ¦ doc/table-sorting: 

[08:34] <Geth> ¦ doc/table-sorting: Instead of just boldening the first row

[08:34] <Geth> ¦ doc/table-sorting: review: https://github.com/perl6/doc/commit/930ff6c160

[08:34] <Geth> ¦ doc/table-sorting: e1a90438ea | (Zoffix Znet)++ | assets/js/main.js

[08:34] <Geth> ¦ doc/table-sorting: Setup table sorter on largish tables

[08:34] <Geth> ¦ doc/table-sorting: review: https://github.com/perl6/doc/commit/e1a90438ea

[08:36] <Geth> ¦ doc: zoffixznet++ created pull request #1891: Implement table sorting for large tables

[08:36] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1891

[08:36] <Geth> ¦ doc/master: 7 commits pushed by (Zoffix Znet)++

[08:36] <Geth> ¦ doc/master: f856a13ec1 | Implement assets generator

[08:36] <Geth> ¦ doc/master: 2fcaf61580 | Spurt all asset files in non-minified mode

[08:36] <Geth> ¦ doc/master: b3481ef6dc | Add table sorter jQuery plugin

[08:36] <Geth> ¦ doc/master: d78704204d | Add sort indicator arrows

[08:36] <Geth> ¦ doc/master: 930ff6c160 | Use proper HTML table headers

[08:36] <Geth> ¦ doc/master: e1a90438ea | Setup table sorter on largish tables

[08:36] <Geth> ¦ doc/master: acb47f956c | Merge pull request #1891 from perl6/table-sorting

[08:36] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/df93a16c0000...acb47f956c36

[08:39] <lichtkind> i see wher ein my github repo i have to enable travis but nothing about appveyor, what do i do not see?

[08:40] <Zoffix> lichtkind: which repo is this?

[08:40] <jmerelo> lichtkind: I usually search Moritz's all-modules repo for that kind of thing. In the case of appveyor, there's also an .appveyor.yml configuration file, such as this one https://github.com/moritz/perl6-all-modules/blob/d5f54da4283e309ecaf20d42b014583d29180dcd/github/hankache/Acme-Cow/appveyor.yml (firsts on the list)

[08:41] <lichtkind> i did my appveyor file mbut nothing happened

[08:41] <jmerelo> lichtkind: you have to also sign on for Appveyor if you want tests run when you push to master.

[08:41] <lichtkind> Math::Matrix im not the main owner there thatswhy i akse to see if there is something i dont see because of that

[08:42] <lichtkind> jmerelo, i see its a paid service?

[08:42] <jmerelo> Zoffix: I get you dislike comments, even laudatory ones, to commits. Won't happen again. I just wanted to express kudos for that work. That won't happen again either.

[08:42] *** zakharyas left
[08:43] <gfldex> m: my $c = 0; for ^10 { say ({ $c += 2}, { $c -= 2}).pick.() }

[08:43] <camelia> rakudo-moar 916b41a21: OUTPUT: «-2␤0␤2␤4␤6␤4␤6␤8␤6␤8␤»

[08:43] <gfldex> :)

[08:43] <gfldex> random functional programming \o/

[08:44] <Zoffix> jmerelo: yeah, it's annoying to get a notification and then go to the page and scroll through the entire commit looking for a message, only to come to some thumbs icon.

[08:45] <Zoffix> And 159 people watch the repo, so 159 notifications were sent and and a subset of the recepients performed the process I described.

[08:48] *** xtreak joined
[08:48] <jmerelo> lichtkind: I think you can have it for free for public repos. 

[08:48] <lichtkind> jmerelo++,  thanks

[08:52] <Geth> ¦ doc: ac14f6f7f0 | (Zoffix Znet)++ | lib/Pod/Htmlify.pm6

[08:52] <Geth> ¦ doc: Make &svg-for-file 7x faster

[08:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ac14f6f7f0

[08:55] <moritz> Zoffix++

[08:56] *** espadrine joined
[08:58] *** kurahaupo joined
[09:01] *** kurahaupo_ left
[09:02] *** Zoffix left
[09:07] <Geth> ¦ doc: b14f5ddd16 | (Zoffix Znet)++ | 2 files

[09:07] <Geth> ¦ doc: Inline typegraph snippet

[09:07] <Geth> ¦ doc: 

[09:07] <Geth> ¦ doc: To avoid spending CPU time on all the slurpage and replacement

[09:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b14f5ddd16

[09:08] *** markong joined
[09:10] *** travis-ci joined
[09:10] <travis-ci> Doc build failed. Zoffix Znet 'Make &svg-for-file 7x faster'

[09:10] <travis-ci> https://travis-ci.org/perl6/doc/builds/361105273 https://github.com/perl6/doc/compare/acb47f956c36...ac14f6f7f08b

[09:10] *** travis-ci left
[09:10] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[09:13] *** kurahaupo left
[09:13] *** kurahaupo joined
[09:13] <Geth> ¦ doc: a48befd75f | (Zoffix Znet)++ | htmlify.p6

[09:13] <Geth> ¦ doc: Don't create an Array that's not needed

[09:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a48befd75f

[09:14] <Geth> ¦ doc: aaf5fd88fd | (Zoffix Znet)++ | t/pod-htmlify.t

[09:14] <Geth> ¦ doc: Allow newline at end of extracted SVG code

[09:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/aaf5fd88fd

[09:15] *** xtreak left
[09:19] <jmerelo> Zoffix: there's an issue about refactoring htmlify.p6 https://github.com/perl6/doc/issues/1823 I would be very grateful if you would mention it in the commits where you work with it, just so those following that particular issue are aware of changes. 

[09:23] <Geth> ¦ doc: dc5c9e2dc5 | (Zoffix Znet)++ | htmlify.p6

[09:23] <Geth> ¦ doc: Use separate sub for logged URL rewrites

[09:23] <Geth> ¦ doc: 

[09:23] <Geth> ¦ doc: callsame and slurpy handling are both slow.

[09:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dc5c9e2dc5

[09:24] *** travis-ci joined
[09:24] <travis-ci> Doc build failed. Zoffix Znet 'Inline typegraph snippet

[09:24] <travis-ci> https://travis-ci.org/perl6/doc/builds/361108908 https://github.com/perl6/doc/compare/ac14f6f7f08b...b14f5ddd16d7

[09:24] *** travis-ci left
[09:24] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[09:25] *** kurahaupo left
[09:25] *** kurahaupo joined
[09:26] *** w_richard_w left
[09:27] *** lalit joined
[09:28] *** lalitmee left
[09:31] *** wander joined
[09:31] *** lalitmee joined
[09:33] *** kurahaupo left
[09:33] *** lalit left
[09:34] *** kurahaupo joined
[09:34] <stmuk_> hmmm I seem to have missed this

[09:34] <stmuk_> https://www.youtube.com/watch?v=oqo9uu8A-Go

[09:34] <stmuk_> probably similar to

[09:35] <stmuk_> http://sfi.org.pl/prelegenci/larry-wall/

[09:35] *** travis-ci joined
[09:35] <travis-ci> Doc build passed. Zoffix Znet 'Allow newline at end of extracted SVG code'

[09:35] <travis-ci> https://travis-ci.org/perl6/doc/builds/361110710 https://github.com/perl6/doc/compare/a48befd75ffa...aaf5fd88fdf9

[09:35] *** travis-ci left
[09:42] *** travis-ci joined
[09:42] <travis-ci> Doc build passed. Zoffix Znet 'Use separate sub for logged URL rewrites

[09:42] <travis-ci> https://travis-ci.org/perl6/doc/builds/361113242 https://github.com/perl6/doc/compare/aaf5fd88fdf9...dc5c9e2dc539

[09:42] *** travis-ci left
[09:42] *** pierre_ left
[09:50] *** pierre_ joined
[09:53] <Geth> ¦ doc: 42dc344af5 | (Zoffix Znet)++ | lib/Pod/Htmlify.pm6

[09:53] <Geth> ¦ doc: Micro-optimize &rewrite-url routine

[09:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/42dc344af5

[10:00] *** wander left
[10:09] *** pmurias left
[10:13] *** xtreak joined
[10:21] *** kanishka left
[10:22] <Geth> ¦ doc: f27849a0df | (Zoffix Znet)++ (committed using GitHub Web editor) | util/trigger-rebuild.txt

[10:22] <Geth> ¦ doc: Trigger rebuild

[10:22] <Geth> ¦ doc: 

[10:22] <Geth> ¦ doc: New asset maker needed updated modules installed on build server

[10:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f27849a0df

[10:24] *** sena_kun left
[10:31] *** dct joined
[10:33] *** athenot joined
[10:35] <Geth> ¦ doc: a9af713378 | (Zoffix Znet)++ (committed using GitHub Web editor) | util/update-and-sync

[10:35] <Geth> ¦ doc: Use user perl for build

[10:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a9af713378

[10:38] *** pierre_ left
[10:44] <AlexDaniel> fwiw: https://blog.github.com/2018-02-18-deprecation-notice-removing-anonymous-gist-creation/

[10:44] *** jast left
[10:45] <tadzik> ugh

[10:45] <tadzik> then again, they're not a pastebin

[10:45] <timotimo> aaw, i was using that!

[10:46] <tadzik> I wonder if nextcloud has its pastebin module, hm

[10:46] *** lalitmee left
[10:46] <timotimo> let's just make one in perl6 …

[10:46] *** pierrot left
[10:46] <tadzik> źblog kinda was one :)

[10:47] *** pierre_ joined
[10:48] *** pierrot joined
[10:49] *** jast joined
[10:50] *** xtreak left
[10:51] <Geth> ¦ doc: 1c03654242 | (Zoffix Znet)++ (committed using GitHub Web editor) | util/trigger-rebuild.txt

[10:51] <Geth> ¦ doc: trigger-rebuild

[10:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1c03654242

[10:51] *** xtreak joined
[10:51] *** pierre_ left
[10:53] *** jast left
[11:05] *** pierre_ joined
[11:06] *** pierre_ left
[11:06] *** pierre_ joined
[11:07] *** araraloren joined
[11:07] *** zakharyas joined
[11:12] *** jast joined
[11:15] *** synopsebot left
[11:15] *** Geth left
[11:15] *** dct left
[11:16] *** salva left
[11:16] *** jast left
[11:22] *** APic left
[11:27] *** pierre_ left
[11:40] *** jast joined
[11:43] *** [Sno] joined
[11:45] *** sno left
[11:45] *** eliasr joined
[11:56] *** vcv joined
[11:59] *** lalitmee joined
[12:03] *** johnnyt joined
[12:10] <lichtkind> math-matrix sucessfully converted to apüvayor

[12:11] <El_Che> https://i.pinimg.com/564x/f4/ca/a4/f4caa47223882c6fb091f483641b095a--pedestrian-crossing-butterfly-art.jpg

[12:12] *** johnnyt left
[12:12] *** Geth joined
[12:12] *** ChanServ sets mode: +v Geth

[12:12] *** synopsebot joined
[12:12] *** ChanServ sets mode: +v synopsebot

[12:20] *** johnnyt joined
[12:24] *** johnnyt left
[12:28] *** aindilis left
[12:38] *** xtreak left
[12:40] *** xtreak joined
[12:41] *** xtreak left
[12:41] *** zakharyas left
[12:42] <jmerelo> lichtkind: congrats!

[12:47] <MasterDuke> jmerelo: are you using all the versions of xover? or which is the fastest?

[12:48] <jmerelo> for the time being, xover.p6. I followed timotimo's advice of using skip and that kind of things.

[12:48] <MasterDuke> cool

[12:49] <jmerelo> MasterDuke: still, incredibly slow. Like orders of magnitude slower than Perl. I expected using shaped arrays would make it faster, but it does not. In general, using immutable data structures in functional languages speeds things up, but I'm not sure how to it in this case.

[12:49] <timotimo> shaped arrays are very slow at the moment

[12:50] <jmerelo> MasterDuke: Thanks a lot for your contribution, also. And advice.

[12:50] <MasterDuke> yeah, i was trying to experiment with Bufs, or shaped native array, but nothing was faster than an unshaped regular array

[12:51] <MasterDuke> i believe the other things will get faster eventually (for some use cases at least), but i think they just aren't used as much right now and haven't received the same amount of optimization

[12:52] <jmerelo> Just produced another draft https://github.com/JJ/2016-ea-languages-wcci/releases/tag/v2018-0.99 Any help will be appreciated and acknowledged.

[12:53] <jmerelo> MasterDuke: it might just be I am not doing it right, in a properly functional way. I checked out the Haskell version https://github.com/JJ/2016-ea-languages-wcci/blob/master/haskell/onemax.hs but to tell you the truth I couldn't figure it out.

[12:54] <jmerelo> MasterDuke: same happens with Scale. It should be blazingly fast, but it's not, second slowest after Perl 6. Maybe crossover the way we understand it now is simply not made for functional languages.

[12:54] <jmerelo> s/Scale/Scala/

[12:54] <MasterDuke> heh, sorry, i can't help you there in the slightest, i know nothing haskell

[12:55] <jmerelo> MasterDuke: that applies to most people I know. I've been banging my head against it for some time, but I just can't. 

[12:56] <MasterDuke> i was intrigued when the Pugs project got started, but even that wasn't motivation enough to try and learn

[12:59] <jmerelo> MasterDuke: That was a great project. Audrey Tang deserves kudos for that. And she produced the only academic paper I've been able to find on Perl 6...

[12:59] <jmerelo> If my paper is accepted, that will bring up the grand total to two. 

[13:00] <MasterDuke> a 100% increase!

[13:01] *** pierre_ joined
[13:02] <jmerelo> Attracting the economic community would be a great thing for Perl 6. After all, they were the one maintaining R and Scala for a long time until they found their niche...

[13:02] *** lalitmee left
[13:02] <jmerelo> On the other hand, I think it's mostly the academic community what's supporting Java and PHP right now... 

[13:02] <jmerelo> Anyway...

[13:08] *** aindilis joined
[13:15] *** khisanth_ left
[13:18] *** APic joined
[13:19] <Ulti> the academic community???

[13:20] <jmerelo> Ulti: people in universities, I mean.

[13:20] <Ulti> what do you mean by supported

[13:20] <Ulti> Java is one of the most popular languages of all in industry

[13:20] <Ulti> and PHP is still heavily used on the web

[13:21] <Ulti> Facebook both use and hugely improved the implementation of PHP relatively recently for example

[13:23] <jmerelo> Ulti: I don't mean to start a flame war here. Java and PHP are the two languages favored in higher education. Now Java is being substituted by Python, little by little. Point is, it's widely used because it's widely taught. And it's widely taught because it was a nice language like 15 years ago. Academia moves very slowly. Same goes for PHP, it's the thing taught at entry-level web courses. Point is, making a

[13:23] <jmerelo> language known and loved in academia eventually spills over to industry.

[13:23] <Ulti> that doesnt really explain the rise of JavaScript or even how Perl got popular to begin with

[13:24] <jmerelo> Ulti: it's not meant to explain *everything*. Just support my point that academia is a good community to gather support for a new language.

[13:24] <Ulti> Java with Android means its not going to be phased out by anything any time soon

[13:24] <Ulti> other than perhaps Kotlin

[13:25] <jmerelo> Ulti: you can write progressive web apps with HTML and javascript. Also if you use Xamarin you can use any tool.

[13:25] <Ulti> these languages all have niches of use case not just educated users

[13:25] <jmerelo> sorry, off to lunch. Cheers.

[13:25] <Ulti> enjoy

[13:26] *** jmerelo left
[13:26] <Ulti> if the majority of people I knew only stayed in the language they learnt at university I'd be much more up for agreeing with you entirely

[13:27] <Ulti> I actually dont know anyone who did from my undergrad all of us ended up somewhere else and almost ironically the one person I know who writes Java every day was taught Pascal!

[13:27] <Ulti> anecdotal evidence to be sure

[13:28] *** khisanth_ joined
[13:29] <Geth> ¦ doc: e76d3f1faf | (Will "Coke" Coleda)++ | doc/Language/5to6-nutshell.pod6

[13:29] <Geth> ¦ doc: nbsp

[13:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e76d3f1faf

[13:29] <Geth> ¦ doc: 212e191205 | (Will "Coke" Coleda)++ | doc/Language/5to6-nutshell.pod6

[13:29] <Geth> ¦ doc: needs hypen

[13:29] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[13:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/212e191205

[13:29] <Geth> ¦ doc: 317274002a | (Will "Coke" Coleda)++ | xt/code.pws

[13:29] <Geth> ¦ doc: learn new variable name

[13:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/317274002a

[13:35] *** mcmillhj joined
[13:38] *** ufobat left
[13:39] *** zakharyas joined
[13:46] *** MasterDuke left
[13:59] *** FROGGS left
[14:00] *** ChoHag joined
[14:00] *** FROGGS joined
[14:03] <dogbert17> [Coke]: I guess you run htmlify.pl quite often no?

[14:04] *** mcmillhj left
[14:06] <[Coke]> eh?

[14:06] <[Coke]> Not exactly, but what's the question?

[14:07] *** mcmillhj joined
[14:08] *** silug left
[14:11] <jdv79> so if i just say a few times i see them as they happen.  if i redirect stdout to a file i only see the first while the program is running and then the rest on program completion

[14:11] <jdv79> any idea where this buffering is happening?

[14:13] *** khw joined
[14:14] <jdv79> looks like $*OUT.flush fixes it.  is there a flag to turn off buffering?

[14:15] <dogbert17> [Coke]: when was the last time that program SEGV'd on you?

[14:15] <timotimo> jdv79: file handles let you change the buffer size, not entirely sure if it'll work after the file handle had already been created or if you need to build a new one

[14:15] <[Coke]> SEGV? never.

[14:15] <dogbert17> [Coke]: I want to close https://github.com/MoarVM/MoarVM/issues/325 don't think it's relevant anymore

[14:15] <[Coke]> I am running on a mac most of time, fwiw.

[14:16] <timotimo> i think it only crashes when you use parallel builds?

[14:16] <jdv79> i'm confused why the diff tween tty and file but ok

[14:16] <[Coke]> dogbert17: haven't seen that particular failure since the ticket was opened in 2016

[14:17] <timotimo> if you have a tty open, you do not want buffering

[14:17] <timotimo> if you have a file open, you do want buffering

[14:17] <[Coke]> doc build technically supports || builds, but, as far as I know, no one uses them because they are unreliable (but not segfaulting)

[14:18] <jdv79> $*OUT.out-buffer=0 seem to work for now

[14:18] <jdv79> thanks

[14:18] <timotimo> gr8

[14:19] *** silug joined
[14:19] <jdv79> im not sure that "standard operation procedure"

[14:19] <jdv79> as in running foo.pl6 and foo.pl6 > foo.log i don't expect to have to change the program to get the output

[14:20] <jdv79> is it that a "\n" causes a flush? - that might be more normal

[14:20] <jdv79> in genernal unixishness

[14:20] <dogbert17> meh, I'm not allowed to close it so I added a comment instead

[14:20] <[Coke]> jdv79: yes, sounds right.

[14:21] <jdv79> is that a bug?  rakudo does not do that.

[14:21] <Geth> ¦ whateverable/master: 7 commits pushed by (Aleks-Daniel Jakimenko-Aleksejev)++

[14:21] <Geth> ¦ whateverable/master: 600b208002 | Use “proper” useragent

[14:21] <Geth> ¦ whateverable/master: aa5a5682ed | Handle more exceptions

[14:21] <Geth> ¦ whateverable/master: ff5e8784a2 | The deadline is approximate

[14:21] <Geth> ¦ whateverable/master: 6472b55ce3 | Make Releasable understand ChangeLog-Draft

[14:21] <Geth> ¦ whateverable/master: a2a565cc30 | Pull blockers from GitHub also

[14:21] <Geth> ¦ whateverable/master: 5dd8be0b06 | Refactor parse-next-release

[14:21] <Geth> ¦ whateverable/master: ac1d66a018 | Annoyingly notify people about an upcoming release

[14:21] <Geth> ¦ whateverable/master: review: https://github.com/perl6/whateverable/compare/1d76409d4e8b...ac1d66a018b3

[14:25] *** releasable6 left
[14:25] *** releasable6 joined
[14:25] *** ChanServ sets mode: +v releasable6

[14:25] <AlexDaniel> releasable6: status

[14:26] <releasable6> AlexDaniel, Next release in ≈19 days and ≈4 hours. 4 blockers. 0 out of 149 commits logged (⚠ 9 warnings)

[14:26] <releasable6> AlexDaniel, Details: https://gist.github.com/9b541f3d3e7ca71ff84028d963eb2eb1

[14:26] <AlexDaniel> [Coke]: look! It no longer complains about the missing changelog! Isn't it awesome? ;D

[14:27] <AlexDaniel> it also understands github blockers now! wowowowowowowowow

[14:27] <AlexDaniel> xD

[14:34] *** AlexDaniel left
[14:35] <timotimo> sounds good!

[14:47] *** araraloren left
[14:48] *** araraloren joined
[14:48] *** araraloren left
[14:49] *** skids joined
[14:53] *** mniip joined
[14:56] *** zakharyas left
[14:57] *** zakharyas joined
[15:04] *** zakharyas left
[15:05] *** zakharyas joined
[15:17] *** Bowlslaw joined
[15:18] *** jmerelo joined
[15:40] <jnthn> A while back, remote debug support went into MoarVM and I said it was in aid of something we were building at Edument, where I work. This is the thing we're working on: http://www.commaide.com/ :)

[15:41] <jmerelo> jnthn: wow. Looks awesome.

[15:41] *** pharv joined
[15:42] *** FROGGS left
[15:42] *** johnnyt joined
[15:42] <tadzik> waited until April 2nd, haven't you? :P

[15:42] <tadzik> looks fantastic!

[15:43] *** pharv left
[15:44] <dogbert17> jnthn: looks absolutely brilliant

[15:44] *** pharv joined
[15:44] *** pierre_ left
[15:45] *** pharv left
[15:45] *** pharv_ joined
[15:46] <jnthn> :)

[15:54] <Geth> ¦ doc: sfischer13++ created pull request #1892: Fix typo

[15:54] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1892

[16:01] *** johnnyt left
[16:01] *** st_elmo joined
[16:01] *** johnnyt joined
[16:06] *** zakharyas left
[16:08] <jdv79> are peoples clamoring for an IDE these days?

[16:08] <Bowlslaw> ewww IDEs

[16:08] <Bowlslaw> vim master race

[16:08] *** tt left
[16:09] <jnthn> Some are. Some aren't. :-)

[16:09] * Bowlslaw hunkers down for impending flame war

[16:09] <jnthn> Choice is good.

[16:09] <Bowlslaw> On an honest note, I think that it depends on the dev environment and what they are doing

[16:10] <Bowlslaw> if you have a large dev team with a boilerplate language like Java or Scala, it's probably much better for productivity and understanding if you use an IDE

[16:10] *** zakharyas joined
[16:10] *** AlexDaniel joined
[16:13] *** pmurias joined
[16:17] <AlexDaniel> ah, yet another crippled IDE. Next!

[16:17] <pmurias> AlexDaniel: crippled?

[16:17] <AlexDaniel> pmurias: well, the free version ofc

[16:18] <Bowlslaw> of what?

[16:18] <AlexDaniel> and the paid one… well… costs money, so Next! too

[16:18] <pmurias> AlexDaniel: commaide doesn't seem to be free

[16:18] <AlexDaniel> pmurias: free ““community”” version is promised

[16:20] <jmerelo> AlexDaniel: not clear if it's free as in free beer or free as in free speech.

[16:20] <Bowlslaw> lol

[16:20] <AlexDaniel> jmerelo: obviously not libre, or at least the paid version is not

[16:21] <Bowlslaw> you can turn vim into a full-fledged perl IDE with just a few plugins, though I think that does largely eliminate the purpose of using vim

[16:22] <zostay> If someone else wants to use an IDE, that's fine, but I find that using an IDE erodes my skills because I start to forget things I can just Meta+Tab 12 times to find, which leads to slowing down my productivity over time.

[16:23] <jmerelo> I still think it's a good idea and it can help the community at large. Not for me, however. I am (relatively) happy with emacs, although I switch to Atom when I have to edit PODs. 

[16:23] <jmerelo> Besides, I'm in principle against non-free editors for developing free software. And I'm on the record for that https://medium.com/@jjmerelo/7-reasons-or-another-number-ill-find-along-the-way-you-should-never-ever-use-sublime-text-to-54616989be54

[16:24] <jmerelo> But that's a matter of opinion. In this case, I think it's a good idea to have a commercial product based on Perl 6, and in the long run it will benefit the community. It will benefit much more (and the other way round) if it's free software, but that's their call, not mine.

[16:27] *** tt joined
[16:28] <El_Che> Programmers that use an IDE at work, won't move to vim/emacs for Perl 6

[16:28] <El_Che> ideally, perl6 should work out on the box on the major IDEs

[16:28] <Bowlslaw> yeah

[16:29] <jmerelo> El_Che: well, that pretty much happens with Atom. Works pretty well. I still haven't found the way to do interactive debugging, though. Maybe there's one, but I haven't been able to put it to work.

[16:29] <jmerelo> if CommaIDE offers that, I'll dive into it, no questions asked.

[16:29] *** Zoffix joined
[16:29] <El_Che> I use Atom for Perl 6. I know it's an editor, but I must say it's the creappiest IDE I have used

[16:30] <El_Che> crappiest

[16:30] <Zoffix> jnthn: both "Early Supporter" and "Late Supporter" options are priced at €120.. Is that a typo?

[16:31] <Zoffix> Uh... and "Comma Complete" options is also 120 euros... 

[16:31] <jnthn> Zoffix: No, the difference is in updates (also see the FAQ for why this model)

[16:32] <pmurias> people believing in Perl 6 enough to try to build a commercial project for it is reasurring

[16:32] <pmurias> * reassuring

[16:32] <jmerelo> pmurias++

[16:32] <jnthn> jmerelo: Yes, interactive debugging is in there

[16:33] <jnthn> That's why we built and donated remote debug support to MoarVM

[16:34] <Zoffix> Ah, k, now I get it.

[16:34] *** mcmillhj left
[16:34] <Zoffix> Well, sign me up \o/

[16:34] <jnthn> <3

[16:34] <mst> I like the supporter model

[16:35] <mst> jnthn: you're using java for the parser rather than rakudo ?

[16:37] *** johnnyt left
[16:37] <jnthn> mst: Actually the parsing was quite interesting to deal with, because the IDEA platform wants a separate lexer and parser, but the Perl 6 grammars approach doesn't separate them. So I built a Perl 6 grammar subset compiler that spits out a lexer and parser, the parser using the IDEA tree-building mechanism.

[16:38] <El_Che> jnthn: how does the update of the intelliJ plugin work?

[16:38] <mst> jnthn: oooooh right

[16:38] *** Kaiepi left
[16:39] <jnthn> mst: So the parser is written as a Perl 6 grammar with some annotations to define where we expect to build PSI nodes (their name for AST nodes)

[16:39] <El_Che> jnthn: e.g. the golang plugin is only available in the Full IDE (not in de CE), that how they lock the access to the plugin

[16:39] <jnthn> And compiled into a Java lexer and parser

[16:40] <mst> that sounds entirely reasonable, but possibly only because I have a high tolerance for batshit insanity in the name of cool features

[16:40] *** nige joined
[16:40] <jnthn> If you give a compiler writer a problem, guess how they'll solve it? :P

[16:40] *** Kaiepi joined
[16:40] <nige> jnthn++ on Comma - I like the brand :-)

[16:40] * mst laughs ... "point"

[16:42] <jnthn> El_Che: Should work fine with the CE

[16:42] <Geth> ¦ doc: 6197f55770 | (Stefan Fischer)++ | doc/Type/Signature.pod6

[16:42] <Geth> ¦ doc: Fix typo

[16:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6197f55770

[16:42] <Geth> ¦ doc: cf4d89b4eb | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Type/Signature.pod6

[16:42] <Geth> ¦ doc: Fixes unduly capitalized IF

[16:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cf4d89b4eb

[16:42] <Geth> ¦ doc: db79a909d7 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Type/Signature.pod6

[16:42] <synopsebot> Link: https://doc.perl6.org/type/Signature

[16:42] <Geth> ¦ doc: Merge pull request #1892 from sfischer13/master

[16:42] <Geth> ¦ doc: 

[16:42] <Geth> ¦ doc: Fix typo

[16:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/db79a909d7

[16:42] <jnthn> Well, more than should, does, I used it exactly that way today :)

[16:43] <El_Che> jnthn: yes, I thought so. But will it we auto updateble like regular plugins? (I wonder if you can restrict the access that way)

[16:44] <jnthn> El_Che: Not totally sure about that part yet; if we can make it happen that conveniently, we of course will :)

[16:45] *** johnnyt joined
[16:45] <nige> I think there is a real opportunity for an IDE's that can identify syntactic, semantic problems and then offer to the programmer to apply the fix 

[16:46] <nige> - to avoid having to manually type the changes

[16:46] <nige> this is a poor man's version of the kind of workflow I'm thinking of .... https://perl6advent.wordpress.com/2016/12/19/fixing-flow/

[16:48] <nige> currently coding something in golang using visual studio "code" on linux - and it doesn't go the next step of automatically applying fixes

[16:48] <nige> - I think this would be killer feature of a Perl 6 ide - to keep the programmer in 'flow' by helping them to identify problems and automatically apply fixes

[16:49] <jnthn> nige: Yes, for each error or warning that we annotate it's possible to provide matching fixes. :)

[16:49] <nige> that's cool! :-)

[16:49] <jnthn> (And we'll certainly be working on that.)

[16:49] <nige> great - exciting to hear

[16:51] *** mcmillhj joined
[16:55] *** mcmillhj left
[16:56] *** mcmillhj joined
[17:01] *** mcmillhj left
[17:02] *** geospeck joined
[17:02] *** geospeck left
[17:07] <buggable> New CPAN upload: Image-QRCode-0.0.3.tar.gz by FRITH https://cpan.metacpan.org/authors/id/F/FR/FRITH/Perl6/Image-QRCode-0.0.3.tar.gz

[17:07] *** mcmillhj joined
[17:09] <jmerelo> bye now

[17:09] *** jmerelo left
[17:12] *** mcmillhj left
[17:15] *** benjikun left
[17:17] *** TimToady joined
[17:17] *** tt left
[17:18] *** benjikun joined
[17:20] <benjikun> I know standalone executables aren't available yet, but will they be offered with future versions of Rakudo?

[17:21] <Zoffix> benjikun: standalone executables of what? The programs you write?

[17:21] <benjikun> Zoffix: Yeah

[17:21] *** tt joined
[17:21] <benjikun> Is that an aimed to-be feature of Rakudo?

[17:21] <El_Che> benjikun: won't happen in the short period

[17:21] <Zoffix> benjikun: yeah, I've seen a few people try to add that feature, so I'd say it's aimed to-be feature yeah.

[17:22] <benjikun> Ah, thanks buds

[17:22] <Zoffix> eco: Wix

[17:22] <buggable> Zoffix, App::InstallerMaker::WiX 'Tool to make basic WiX installers for Perl 6 apps, bundling MoarVM/Rakudo.': https://github.com/jnthn/p6-app-installermaker-wix

[17:22] <Zoffix> There's already that for Windows. It bundles rakudo + moarvm with the program or something

[17:22] *** Kaiepi left
[17:22] <pmurias> nige: eclipse does the autofix for java

[17:22] <El_Che> Zoffix: I don't see it happening as long rakudo isn't relocable

[17:23] <benjikun> El_Che: What does relocable mean

[17:23] <Zoffix> El_Che: yeah, it's precluded on it being relocable, but it's not like making it relocable isn't on the aimed to-be feature

[17:23] <Zoffix> benjikun: once you install it somewhere, currentl you can't move that installation into a different directory.

[17:24] <El_Che> benjikun: that you the install location insn't hardcode at compile time

[17:24] <El_Che> d

[17:24] <benjikun> I see

[17:25] *** mcmillhj joined
[17:25] *** Kaiepi joined
[17:26] *** AlexDaniel left
[17:30] <benjikun> Interesting how the search term "Perl 6" on Google Trends shows such a large majority of searches from china

[17:30] *** mcmillhj left
[17:31] <benjikun> It looks like it's been on a slow decline since the beginning of 2016

[17:32] <Zoffix> The China thing was brought up before: https://www.reddit.com/r/perl6/comments/85jrf6/perl6_usage_in_china/

[17:32] *** ufobat joined
[17:33] <Zoffix> benjikun: or put differently: the beginning of 2016 is when our first stable release was released, after 15 years of development. That was big news and even people not interested in Perl 6 looked it up and then later that stabilized.

[17:33] <benjikun> Yeah that's a reasonable conclusion

[17:34] <Zoffix> So, a single chart with no context doesn't give you a lot of information. You can see if it's going up or down, but you've no idea why.

[17:34] <benjikun> It still seems like a substantially larger amount of traffic from China compared to most other small(er) programming languages

[17:35] <benjikun> or any search term in general

[17:35] <benjikun> over a considerable amount of time

[17:35] <Zoffix> The difference looks even more extreme with Python: https://trends.google.com/trends/explore?q=perl,python&date=today%205-y#GEO_MAP_1

[17:35] <Zoffix> ZofBot: that's all secret government haxors, amirite?

[17:35] <ZofBot> Zoffix, looked after him every weekend

[17:37] *** marcusramberg joined
[17:38] <benjikun> The term `perl` by itself has been on decline since 2004, overall

[17:40] <benjikun> The majority of universities I've been to (at least in the US) only teach perl5 for system administration

[17:41] *** Zoffix left
[17:41] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/04/02/2018-14-a-perl-6-idea/

[17:42] <benjikun> Whew, a few of the blog posts in this week's p6weekly reflect what we've been discussing

[17:44] *** pharv_ left
[17:45] *** pharv joined
[17:45] *** mcmillhj joined
[17:47] *** pharv left
[17:47] *** pharv joined
[17:50] *** mcmillhj left
[17:54] *** mcmillhj joined
[17:59] *** Zoffix joined
[18:04] *** pierre joined
[18:05] *** johnnyt left
[18:05] *** benjikun left
[18:09] <Zoffix> benjikun: TBH, I really hope the wallowing in self-pity so many Perl 5 users love to do doesn't carry over to the Perl 6 community. The incessant discussions about the decline of Perl are a self-fullfilling prophecy: no one wants to participate in a community that only talks how the end is near. And while the prophecy of the apocalyptic doomsday is metaphorically fitting, given the language's Christian

[18:09] <Zoffix> influence, it's also goddamn depressing. What difference does discussing some chart make? Nothing. Go make something cool in Perl and talk about that instead. Get people fucking excited.

[18:09] *** pierre left
[18:10] <Ulti> yeah agree with that, its offputting enough Im tempted to unsub the /r/perl reddit

[18:10] <Bowlslaw> Zoffix: I haven't seen that much in Perl 5

[18:10] <Ulti> its either super newb questions about regex or someone asking why is perl disliked etc. week by week

[18:10] <Bowlslaw> then again I try to stick to people who only get stuff done

[18:10] <Bowlslaw> i also work at a company that uses perl 5 xd

[18:10] <Zoffix> lizmat++ # yey! 2 weeklies in one week \o/

[18:10] <Bowlslaw> also, reddit = brain damage

[18:11] <Ulti> I think the problem is the "community" dont understand they are actually a minority of perl users, most of whom dont really care or identify with programming in perl

[18:11] <Ulti> probably because its their second or third language and they mostly use it for relatively mundane tasks 

[18:11] <Ulti> not many people go nuts for being in the bash community but everyone uses a shell daily

[18:11] <Zoffix> :)

[18:12] <Ulti> I mean sed and awk are going strong still, but I have zero interest in being part of their user mailing list

[18:12] <Ulti> playing sedtris almost made me want to

[18:13] *** Zoffix left
[18:17] <Ulti> https://github.com/uuner/sedtris/blob/master/sedtris.sed

[18:17] <pmurias> Util: I doubt the fate of sed and awk is something a large part of the "community" is enthusasiastic about

[18:18] *** Kaiepi left
[18:19] *** Kaiepi joined
[18:22] *** lizmat left
[18:24] *** sauvin left
[18:25] *** Kaiepi left
[18:26] *** Kaiepi joined
[18:39] *** darutoko left
[18:43] *** domidumont left
[18:43] *** domidumont joined
[18:44] *** domidumont left
[18:44] *** avalenn joined
[18:46] <Bowlslaw> https://stackoverflow.com/questions/49616943/data-access-layer-with-perl-6-and-dbiish

[18:50] <Ulti> http://www.commaide.com/  oh wow....

[18:50] <Ulti> there arent enough round of aplause emoji for this

[18:52] *** pharv left
[18:52] *** SCHAPiE left
[18:53] *** pharv joined
[18:54] <Ulti> I cant find the place that takes my money....

[18:56] *** SCHAPiE joined
[18:56] <jnthn> Ulti: Yes, available from *May*. :-)

[18:57] <stmuk_> can I suggest another FAQ question for http://commaide.com/faq?

[18:58] <jnthn> stmuk_: Sure

[18:58] <Ulti> jnthn: sure but take my money now :P

[18:58] <jnthn> It'd actually be the first genuine FAQ

[18:58] <Ulti> hah

[18:58] <stmuk_> "why is the parser based on P6 grammar rather than being the P6 grammar itself?"

[18:58] <Ulti> but seriously this is awesome I was recently contemplating buying the rest of the JetBrains suite its a really good platform

[18:59] <Ulti> especially the partial commit stuff for git coming in on the new release... is comma based on that?

[18:59] <jnthn> Ulti: I'd *love it* if taking money were that easy. We have a few legal bits (thanks to digital sales tax rules) that we have to make sure we get right, otherwise we'll be in trouble. :-)

[19:01] *** st_elmo left
[19:02] <Ulti> let me know if I need to send to a shell charity and do gift aid :P

[19:03] *** vcv left
[19:03] *** rindolf left
[19:03] <Bowlslaw> send to my "shell charity" <insert home address.

[19:05] <moritz> jnthn: is this the first b2c product that Edument sells?

[19:05] *** builderror joined
[19:06] *** pprocacci joined
[19:06] <jnthn> Ulti: Looks like we should "inherit" that partial commit stuff from the platform, yeah :)

[19:07] <El_Che> jnthn: price level looks good for companies (intellij ultimate is €500), kind of high for individuals (intellij ultimate is € 149, free for students/teachers/foss). No critic or request, just fyi

[19:07] <stmuk_> "Generates Java code from AST

[19:07] <El_Che> jnthn: great news, by the way. Intellij is a great IDE platform

[19:08] <moritz> jnthn++ (jnthn's boss)++

[19:08] <builderror> Hi, I have some questions about classes and namespaces in perl6, say I have a class in the path 'Web/Framework/Request/Response.pm6', should I name the actual class 'Web::Framework::Request::Response? Ideally I would like to use it as 'Response' after use'ing it, but the documentation is confusing

[19:08] <stmuk_> jnthn: typo "comamnd"

[19:09] <jnthn> moritz: Edument yes, but there's a couple of folks in Edument running another company that does do b2c, so it's not entirely new. :)

[19:09] <builderror> In php I can import it by the fully qualified name and after that use it with just the class name

[19:10] <El_Che> builderror: my $instance = Very::Long::Name.new(); $instance.foo()

[19:10] <pprocacci> RE: postgres ....  Is there a functioning PL/Perl6 module that anyone is aware of?

[19:10] <Bowlslaw> pprocacci: you mean like DBIish?

[19:11] <pprocacci> Bowlslaw: No, like https://github.com/leto/plparrot

[19:11] <builderror> El_Che: so if I have a module in a certain path, best practice dictates that I prefix the module name with the entire path?

[19:11] <jnthn> builderror: If you mark the class with `is export` then you'll export a short name too. You can `is export(:shorts)` and then people can `use The::Long::Thing :shorts;` to get the short names, if you think it's a bad default to always provide them.

[19:11] <moritz> pprocacci: I'm not aware of one

[19:11] <pprocacci> moritz: ok

[19:12] <jnthn> builderror: So you can have the long name always available and then provide people with a short name too.

[19:12] <moritz> builderror: also, you can use 'constant' to create arbitrary aliases (also for types), though that's a bit clumsy in comparison to rename-on-import

[19:12] <jnthn> builderror: Alternatively, if a module doesn't do that, then `my constant Short = Long::And::So::Much;` also does it

[19:12] <jnthn> ah, moritz beat me to that one

[19:12] <builderror> jnthn: can you point me to some documentation that details this?

[19:13] *** Zoffix joined
[19:13] <jnthn> stmuk_: Thanks for the typo, will fix. Also the question is interesting. The heart of the answer is that a grammar for an IDE has to accept every program, no matter how malformed.

[19:13] <Bowlslaw> does Perl 6 have an ORM ?

[19:14] *** comborico1611 joined
[19:14] *** pierre_ joined
[19:14] <builderror> Oh it gets briefly mentioned in https://docs.perl6.org/language/modules.html#is_export

[19:14] <Zoffix> pprocacci: briefly scanning the docs doesn't look like it has what you're looking for, but FWIW there's a DB::Pg module that's better than DBIish for Pg intefacing: http://modules.perl6.org/dist/DB::Pg:cpan:CTILMES

[19:14] <jnthn> builderror: https://docs.perl6.org/routine/is%20export and the article on exporting will help

[19:14] <builderror> Alright I will play with that then

[19:14] <jnthn> (Which is linked from there)

[19:15] <builderror> I have another question about namespaces and classes, I have mentally mapped the namespace to the directory structure the files reside in on the filesystem, see my earlier commend about paths. What is convention for exceptions then, seeing how they are in the 'X' namespace

[19:15] <stmuk_> ah

[19:16] <builderror> This makes it confusing to figure out where the files are to me, are there best practices / examples for dealing with this 

[19:16] <builderror> Or is it just an exception to the general path rule

[19:16] <Zoffix> builderror: Personally, I name my exceptions MyModule::X::ExceptionName

[19:18] <moritz> I name them X::MyModule::ExceptionName

[19:18] <Zoffix> Also, they don't have to be inside X/Foo/Bar.pm, you can stick them in any file. Just provide the proper path in META6.json

[19:18] <builderror> Ah, that makes more sense to me. I looked around on github to see how other people handled this and I saw a few people implementing stuff like `MyModule::Exceptions` which would then be a module filled with exception classes

[19:19] *** pierre_ left
[19:19] <Zoffix> moritz: they always get exported tho, don't they? R#1458 says it's basically how it's meant to work

[19:20] <synopsebot> R#1458 [open]: https://github.com/rakudo/rakudo/issues/1458 Symbols that start with core namespaces always get exported

[19:20] <stmuk_> I wonder if https://github.com/JetBrains/hackathon-Embeditor (real vim with intellij) is useable

[19:20] <builderror> I should look into META6.json I guess? I'm not sure what the use for it is

[19:20] <Zoffix> hmm

[19:20] <Zoffix> eco: author:zoffix

[19:20] <buggable> Zoffix, Found 47 results: Acme::Anguish, IRC::Client, WWW, CoreHackers::Sourcery, GlotIO. See https://modules.perl6.org/s/author%3Azoffix

[19:21] * Zoffix looks for an example

[19:21] <moritz> Zoffix: classes are "our" by default, and thus available in the global namespace (not exported though)

[19:22] *** ChoHag left
[19:22] *** rindolf joined
[19:22] <Zoffix> builderror: here's a module that has a bunch of exceptions, but they're all included in the main file: https://github.com/zoffixznet/perl6-WWW-P6lert/blob/master/lib/WWW/P6lert.pm6#L2-L8   the META6.json maps the types to the file they're in: https://github.com/zoffixznet/perl6-WWW-P6lert/blob/master/META6.json#L17-L19

[19:24] <builderror> So what is the actual use for the META6.json file, is it for me to be able to see where the files are? Or is it related to module management with zef or?

[19:24] <Zoffix> builderror: it's mandatory and it tells zef what files your distro has. If you miss a file in `provides` it won't be installed and so won't be usable

[19:25] <Zoffix> And after installation, I can for example do `use WWW::P6lert::X::Network` and that'd load that module, cause it knows WWW::P6lert::X::Network lives in it

[19:25] <builderror> Aaah I see, that makes sense

[19:26] *** pprocacci left
[19:27] <builderror> Alright thanks everybody, I'm going to cobble together more perl6 now, thanks for explaining stuff to me

[19:28] *** builderror left
[19:29] * Zoffix is disappointed no one took up the call to continue modules.perl6.org CPAN feature development :(

[19:31] <Zoffix> [Coke]: you lied to me :) You said Saturday :)

[19:31] <Zoffix> The http://news.perlfoundation.org/ stuff I mean :)

[19:35] <jdv79> are the p6 based bots stable?  i have a bot that eventually stops responding.

[19:36] <jdv79> idk if its a concurrency thing yet or something else

[19:36] <Zoffix> jdv79: is it using IRC::Client?

[19:36] <[Coke]> Yes, apologies.

[19:36] *** nige1 joined
[19:36] *** nige left
[19:36] <jdv79> no.  homegrown.

[19:36] * [Coke] scopes that out right now

[19:36] <jdv79> only updated every once in a while.  rakudo its using i mean.

[19:37] <Zoffix> Ah. Well, all of our IRC::Client bots are stable, but IME they don't handle netsplits well and people reported that they stop responding to PING events once in a while

[19:37] <Zoffix> huggable: uptime

[19:37] <huggable> Zoffix, nothing found

[19:38] <jdv79> yeah, it eventually stops responding somehow

[19:38] <Zoffix> SourceBaby: uptime

[19:39] <Zoffix> *shrug*. Ain't got a good uptime bot 'cause I recently upgraded and restarted a bunch of 'em

[19:39] <Zoffix> releasable6: uptime

[19:39] <releasable6> Zoffix, 5 hours, 13 minutes, and 32 seconds, 756.710938MiB maxrss. This is Rakudo version 2018.03-134-g20495f097 built on MoarVM version 2018.03-56-g85fc758ce implementing Perl 6.c.

[19:39] *** pharv left
[19:39] <Zoffix> heh, that's not a lot :)

[19:41] <Zoffix> jdv79: I'd say our most oft-used bot is Geth (the one that reports all the commits). It's Perl 6 based and both does async IRC connection *and* an async HTTP server listening to GitHub's hooks. So far I'd call it stable and running smoothly

[19:41] *** pharv joined
[19:43] <jdv79> id say mine kicks out once a week lately.  ok...

[19:44] *** [Sno] left
[19:44] <Zoffix> AlexDaniel` would be able to tell more on stability.

[19:45] <Zoffix> The box Geth is on hangs ded once every few weeks, which kinda interferes with measuring how stable long-running software on it is

[19:47] *** FROGGS joined
[19:51] *** pharv left
[19:51] <dogbert17> note that AlexDaniel was mucking with releasable earlier today, improving the output, hence the restart

[19:52] *** pharv joined
[19:54] *** ufobat left
[19:55] <Geth> ¦ modules.perl6.org: 10655772c4 | (Zoffix Znet)++ | .gitignore

[19:55] <Geth> ¦ modules.perl6.org: Ingore more dev stuff

[19:55] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/10655772c4

[19:57] <Geth> ¦ modules.perl6.org: 3b62279866 | (Zoffix Znet)++ | 2 files

[19:57] <Geth> ¦ modules.perl6.org: Add "View raw file" button for CPAN files

[19:57] <Geth> ¦ modules.perl6.org: 

[19:57] <Geth> ¦ modules.perl6.org: Apparently route was implemented but never plugged in

[19:57] <Geth> ¦ modules.perl6.org: into the template

[19:57] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/3b62279866

[20:02] *** traxex2 left
[20:02] <Geth> ¦ modules.perl6.org: d218820e8b | (Zoffix Znet)++ | lib/ModulesPerl6/Controller/Dist.pm

[20:02] <Geth> ¦ modules.perl6.org: Mark all PDF files for raw serving only

[20:02] <Geth> ¦ modules.perl6.org: 

[20:02] <Geth> ¦ modules.perl6.org: The -B heuristic appears to fail for some cases (e.g. DB::Pg distro)

[20:02] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/d218820e8b

[20:07] *** pharv left
[20:09] *** pharv joined
[20:15] *** pharv left
[20:15] *** pharv joined
[20:20] *** athenot left
[20:20] *** vcv joined
[20:23] *** vcv left
[20:25] *** pierre joined
[20:30] *** pierre left
[20:34] *** enheh joined
[20:36] *** mcmillhj left
[20:41] <Zoffix> .tell tyil FWIW, looks like App::Assixt's META is missing {support}{source} URL that points to a repo, so people ain't got a way to report bugs or anything: https://modules.perl6.org/dist/App::Assixt:cpan:TYIL/META6.json

[20:41] <yoleaux> Zoffix: I'll pass your message to tyil.

[20:47] <Zoffix> .tell tyil and http://modules.perl6.org/dist/App::MPD::AutoQueue:cpan:TYIL/META6.json lists a 404 URL for repo

[20:47] <yoleaux> Zoffix: I'll pass your message to tyil.

[20:47] <tyil> Zoffix: that seems to be missing in the docs too https://docs.perl6.org/language/modules#index-entry-META6.json-META6.json

[20:47] <yoleaux> 20:41Z <Zoffix> tyil: FWIW, looks like App::Assixt's META is missing {support}{source} URL that points to a repo, so people ain't got a way to report bugs or anything: https://modules.perl6.org/dist/App::Assixt:cpan:TYIL/META6.json

[20:47] <yoleaux> 20:47Z <Zoffix> tyil: and http://modules.perl6.org/dist/App::MPD::AutoQueue:cpan:TYIL/META6.json lists a 404 URL for repo

[20:48] <tyil> support.source is the field?

[20:48] <tyil> should be a string representing url or email, or anything goes?

[20:48] *** lizmat joined
[20:48] <tyil> I can update the docs for it if I know what to do with it :>

[20:49] *** mcmillhj joined
[20:50] <Zoffix> tyil: URL to repo: https://github.com/zoffixznet/perl6-WWW-P6lert/blob/master/META6.json#L23

[20:51] <tyil> alright

[20:51] <Zoffix> S22:489

[20:51] <synopsebot> Link: https://design.perl6.org/S22.html#line_489

[20:51] <tyil> any other support fields that I can add?

[20:51] <Zoffix> ^ that page lists 5 of them

[20:51] <tyil> I am aware of that page, and have been informed multiple times it is not trustworthy

[20:51] <Zoffix> this one https://design.perl6.org/S22.html#support

[20:51] <tyil> I used to use that as my go-to reference for META6 until I learned zef doesnt actually support the format there

[20:52] <tyil> hence I stick to the one on docs.perl6, which was promised to work with zef as expected

[20:52] <Zoffix> tyil: the site is outdated yeah, but AFAIK S22 is the most up to date doc we have on the support. None of it actually has been finalized as part of Perl 6 spec basically.

[20:53] <Zoffix> tyil: well, dunno what zef does with it, but modules.perl6.org about to learn to use that field to show a button that leads to the repo

[20:53] <tyil> I know the site is sometimes outdated, but since I also cant rely on S22 it's very annoying to work out such things

[20:53] <tyil> if you are sure this part of S22 is correct I don't minding adding it to docs.perl6

[20:53] <tyil> but I don't feel much for trying to improve things only to be told zef doesnt support it and is therefore plain wrong

[20:54] *** mcmillhj left
[20:55] <Zoffix> tyil: as I've said, it ain't part of the spec. So yes, it may change, as it's not part of the spec.

[20:56] <tyil> while I don't inherently mind adding it to my meta6 in that case, I also don't really want to play around with unspecced stuff since it can create a backlog of stuff that I now need to change

[20:57] <tyil> I'm not sure on whether I want to document things that aren't specced

[20:57] <Geth> ¦ modules.perl6.org: cdb2cf950f | (Zoffix Znet)++ | 9 files

[20:57] <Geth> ¦ modules.perl6.org: [NEWDB] Implement "repo_url" Field

[20:57] <Geth> ¦ modules.perl6.org: 

[20:57] <Geth> ¦ modules.perl6.org: For CPAN dists, the dist_url just leads to the tarball, which is LTA.

[20:57] <Geth> ¦ modules.perl6.org: The META inside the tarball actually has original, unrewritten

[20:57] <Geth> ¦ modules.perl6.org: META with source URL (potentially) pointing to the GitHub or other

[20:57] <Geth> ¦ modules.perl6.org: repo, so we add a new field to the DB that stores THAT URL as repo_url.

[20:57] <Geth> ¦ modules.perl6.org: If repo_url is not the same as dist_url, show a button on search and

[20:57] <Geth> ¦ modules.perl6.org: /dist/ pages that links to "Dist repo".

[20:57] <Geth> ¦ modules.perl6.org: 

[20:57] <Geth> ¦ modules.perl6.org: Also, make /repo/ route direct to repo_url instead of dist_url;

[20:57] <Geth> ¦ modules.perl6.org: Fixes #87 https://github.com/perl6/modules.perl6.org/issues/87

[20:58] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/cdb2cf950f

[20:58] <tyil> if only because everytime I try to go ahead and attempt to fix something I get complaints 

[20:58] <Zoffix> You could champion the spec and get the stuff actually finalized and specced :)

[20:59] <tyil> and how would one start on doing that?

[20:59] <tyil> I have no connections to the spec or know anything about the process things get changed or finalized in

[20:59] <tyil> and I'm not aware on a How To Get Spec Stuff Finalized Tutoraal

[21:01] <Zoffix> Gather nine, lizmat, ugexe, and mst and say "We gotta finish this stuff. What's blocking it?"  There's also a special channel for this stuff: https://irclog.perlgeek.de/perl6-toolchain/2018-04-02

[21:02] <lizmat> in  a few weeks we'll have the Perl Toolchain summit: nine lizmat ugexe will be there afaik

[21:02] <tyil> that's something I can work with

[21:02] <lizmat> I'll put that on the agenda

[21:02] <tyil> thanks lizmat :>

[21:03] *** mcmillhj joined
[21:04] *** wamba left
[21:05] <lizmat> thank me if something comes out of that  :-)

[21:05] *** lichtkind left
[21:05] <Geth> ¦ modules.perl6.org: cac74f8c7b | (Zoffix Znet)++ | assets/sass/main.scss

[21:05] <Geth> ¦ modules.perl6.org: Toss useless `!important` on property

[21:05] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/cac74f8c7b

[21:06] <tyil> I'll give you a warm hug when you come to amsterdam.pm again if you succeed

[21:06] <tyil> it'll only be lukewarm if you fail  :(

[21:06] <lizmat> hehe..  ok, that's a deal

[21:06] <tyil> ^_^

[21:07] *** Zoffix left
[21:08] *** skids left
[21:08] *** mcmillhj left
[21:09] *** bbkr_ left
[21:10] *** zakharyas left
[21:15] *** mcmillhj joined
[21:18] *** rodarmor left
[21:18] *** rodarmor joined
[21:20] *** robertle_ left
[21:20] *** mcmillhj left
[21:21] *** mcmillhj joined
[21:23] *** nige1 left
[21:32] *** pierre joined
[21:33] *** captain-adequate left
[21:34] <lizmat> if we're going to use more fields in the META6.json, perhaps Test::Meta needs an update / PR's as well

[21:36] *** mcmillhj left
[21:37] *** pierre left
[21:37] <Kaiepi> i think we really need documentation on what fields go in META6.json, if there isn't any

[21:38] <tyil> Kaiepi: there is

[21:38] <tyil> but its incomplete

[21:38] <Kaiepi> yeah, that's the problem i have with it

[21:38] <tyil> and I've tried basing my META6 off of S22, but then my module doesnt install anymore

[21:38] <tyil> because zef doesnt agree in all cases

[21:38] *** pmurias left
[21:39] <tyil> so it's hard to get a good sense of what *is* supported properly

[21:39] <lizmat> well, at the PTS we should decide on what zef supports, and then document it :-)

[21:44] <tyil> lizmat: any other fields that will be undergoing discussion at the PTS?

[21:44] <tyil> from the META6?

[21:44] <lizmat> I have no idea

[21:45] <lizmat> I think nine and ugexe have a better idea about that

[21:45] <tyil> ah

[21:45] <tyil> I'd like to have the meta-version field in there asap as well, in case we ever have to break backwards compatability with the META6 layout

[21:46] *** mcmillhj joined
[21:52] *** mcmillhj left
[21:54] *** Sound joined
[21:56] <Geth> ¦ modules.perl6.org: 90f155e90c | (Zoffix Znet)++ | lib/ModulesPerl6.pm

[21:56] <Geth> ¦ modules.perl6.org: Fix perl6-ism

[21:56] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/90f155e90c

[21:57] <timotimo> oh, so that's what "smartmatch is experimental" meant there %)

[21:57] *** mcmillhj joined
[22:03] *** mcmillhj left
[22:08] *** FROGGS left
[22:08] *** mcmillhj joined
[22:13] *** mcmillhj left
[22:18] *** mcmillhj joined
[22:18] <Geth> ¦ modules.perl6.org: 692500a54e | (Zoffix Znet)++ | bin/build-project-list.pl

[22:18] <Geth> ¦ modules.perl6.org: Throw away unique run handling in Perl script

[22:18] <Geth> ¦ modules.perl6.org: 

[22:18] <Geth> ¦ modules.perl6.org: - It doesn't forward [NEWDB] marker to next runs if it detects

[22:18] <Geth> ¦ modules.perl6.org:     a run is already ongoing

[22:18] <Geth> ¦ modules.perl6.org: - Move the unique run handling to flocking the cronjob

[22:18] <Geth> ¦ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/692500a54e

[22:22] *** entonian joined
[22:23] *** mcmillhj left
[22:24] *** mcmillhj joined
[22:27] *** entonian left
[22:31] *** mcmillhj left
[22:36] *** pierre joined
[22:38] *** Bowlslaw left
[22:40] *** pierre left
[22:43] *** espadrine left
[22:44] *** comborico1611 left
[22:46] *** skids joined
[22:57] *** pharv left
[22:57] <buggable> New CPAN upload: Lingua-Palindrome-0.1.0.tar.gz by FISCHER https://cpan.metacpan.org/authors/id/F/FI/FISCHER/Perl6/Lingua-Palindrome-0.1.0.tar.gz

[22:58] *** herby_ joined
[22:58] <herby_> o/

[22:59] <herby_> that new Comma IDE looks awesome

[23:03] *** AlexDaniel joined
[23:15] *** Kaiepi left
[23:17] *** Kaiepi joined
[23:18] *** pierre_ joined
[23:21] *** pierre_ left
[23:22] *** pierre_ joined
[23:22] *** pierre_ left
[23:28] *** MasterDuke joined
[23:30] *** herby_ left
[23:35] *** kent\n left
[23:36] *** kent\n joined
[23:38] *** xtreak joined
[23:39] *** Kaiepi left
[23:39] *** xtreak left
[23:40] *** w_richard_w joined
[23:41] *** Kaiepi joined
[23:42] *** pharv joined
[23:45] *** wamba joined
[23:51] *** pharv left
[23:57] *** Sound left
