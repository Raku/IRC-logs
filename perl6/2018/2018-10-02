[00:00] *** graphene joined
[00:01] *** p6bannerbot sets mode: +v graphene

[00:02] *** leont left
[00:20] <Xliff_> m: class A { }; my $a = A.new; $a.^can('a').elems.say

[00:20] <camelia> rakudo-moar ab83b9d82: OUTPUT: ¬´0‚ê§¬ª

[00:20] <Xliff_> m: class A { }; my $a = A.new; $a.^can('Int').elems.say

[00:20] <camelia> rakudo-moar ab83b9d82: OUTPUT: ¬´0‚ê§¬ª

[00:22] <Xliff_> m: enum A (B C); my $a = B; $a.^can('Int').elems.say

[00:22] <camelia> rakudo-moar ab83b9d82: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared names:‚ê§    B used at line 1‚ê§    C used at line 1‚ê§‚ê§¬ª

[00:22] <Xliff_> m: my enum A (B C); my $a = B; $a.^can('Int').elems.say

[00:22] <camelia> rakudo-moar ab83b9d82: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared names:‚ê§    B used at line 1‚ê§    C used at line 1‚ê§‚ê§¬ª

[00:22] <Xliff_> m: my enum A <B C>; my $a = B; $a.^can('Int').elems.say

[00:22] <camelia> rakudo-moar ab83b9d82: OUTPUT: ¬´3‚ê§¬ª

[00:23] <Xliff_> m: my $a = 3.14159; $a.^can('Int').elems.say

[00:23] <camelia> rakudo-moar ab83b9d82: OUTPUT: ¬´2‚ê§¬ª

[00:39] *** graphene left
[00:40] *** graphene joined
[00:41] *** p6bannerbot sets mode: +v graphene

[00:41] *** dataangel left
[00:43] *** Guest57089 joined
[00:44] *** p6bannerbot sets mode: +v Guest57089

[00:50] *** Guest57089 left
[01:05] *** vike1 left
[01:14] *** saki joined
[01:15] *** p6bannerbot sets mode: +v saki

[01:17] *** saki left
[01:21] *** admin0NO joined
[01:21] *** admin0NO left
[01:23] *** MasterDuke left
[01:28] *** CamnoraFg joined
[01:29] *** p6bannerbot sets mode: +v CamnoraFg

[01:30] *** lindylex left
[01:30] *** kurahaupo left
[01:31] *** kurahaupo joined
[01:32] *** jcallen joined
[01:32] *** p6bannerbot sets mode: +v jcallen

[01:32] *** p6bannerbot sets mode: +v kurahaupo

[01:38] *** andykFL joined
[01:39] *** CamnoraFg left
[01:40] *** ZzZombo left
[01:41] *** andykFL left
[02:06] <tbrowder__> lizmat: great p6 weekly, as usual! i was a bit disappointed to see info on comparison of maths between p5 and p6 (plus julia). is there going to be any progress in that for p6 in future?

[02:08] <tbrowder__> to be clear, i‚Äôm not a mathematician, but one of the many selling points of p6 is math handling.

[02:12] <AlexDaniel> not in the nearest future for sure, but it depends on what you mean exactly

[02:13] <AlexDaniel> in case of ‚àö2√ó‚àö2 you're multiplying two irrational numbers, which I guess can be improved one way or another, but I haven't seen anybody suggest that it should be done

[02:15] <AlexDaniel> also if anybody really needs this kind of stuff, maybe it can be done in a module

[02:23] *** ZzZombo joined
[02:23] *** p6bannerbot sets mode: +v ZzZombo

[02:25] *** w_richard_w joined
[02:26] *** p6bannerbot sets mode: +v w_richard_w

[02:26] *** w_richard_w left
[02:26] <tbrowder__> AlexDaniel: good points, thnx

[02:30] *** manchicken_ joined
[02:31] *** p6bannerbot sets mode: +v manchicken_

[02:33] *** manchicken left
[02:45] *** manchicken_ left
[02:48] *** EmilienMHt joined
[02:49] *** p6bannerbot sets mode: +v EmilienMHt

[02:52] *** Sgeo joined
[02:53] *** waynrsM joined
[02:53] *** p6bannerbot sets mode: +v Sgeo

[02:53] *** p6bannerbot sets mode: +v waynrsM

[02:53] *** Sgeo_ left
[02:54] *** EmilienMHt left
[02:55] *** waynrsM left
[02:59] *** araraloren joined
[03:00] *** p6bannerbot sets mode: +v araraloren

[03:05] *** Herby_ joined
[03:05] *** p6bannerbot sets mode: +v Herby_

[03:06] <Herby_>  o/

[03:18] <tison> \o

[03:35] *** heinrich5991KZ joined
[03:36] *** p6bannerbot sets mode: +v heinrich5991KZ

[03:42] *** heinrich5991KZ left
[04:06] *** eythian joined
[04:06] *** eythian left
[04:06] *** eythian joined
[04:06] *** p6bannerbot sets mode: +v eythian

[04:07] *** p6bannerbot sets mode: +v eythian

[04:25] *** AlexDaniel left
[04:28] *** graphene left
[04:44] *** mahafyi_ joined
[04:44] *** p6bannerbot sets mode: +v mahafyi_

[04:45] *** mahafyi left
[04:49] *** Sgeo_ joined
[04:50] *** p6bannerbot sets mode: +v Sgeo_

[04:51] *** Sgeo left
[05:27] *** kurahaupo left
[05:28] *** kurahaupo joined
[05:28] *** p6bannerbot sets mode: +v kurahaupo

[05:30] *** sauvin joined
[05:30] *** p6bannerbot sets mode: +v sauvin

[05:34] *** araraloren left
[05:34] *** araraloren joined
[05:34] *** telex joined
[05:34] *** jmerelo joined
[05:35] *** p6bannerbot sets mode: +v araraloren

[05:35] *** p6bannerbot sets mode: +v telex

[05:35] *** p6bannerbot sets mode: +v jmerelo

[05:59] <jmerelo> Hi

[06:00] <araraloren> hi

[06:06] <jmerelo> Guess everyone (or most) know that hacktoberfest is on; if you've got some Perl 6 project and want it to participate in it, use "hacktoberfest" as an issue tag: https://github.com/search?o=desc&q=label%3Ahacktoberfest+language%3Aperl6&s=created&type=Issues

[06:07] <jmerelo> We'll focus on that later on during the Squashathon, but there's no need to limit it to a single weekend...

[06:07] *** fake_space_whale left
[06:10] *** domidumont joined
[06:11] *** p6bannerbot sets mode: +v domidumont

[06:15] *** vike1 joined
[06:16] *** p6bannerbot sets mode: +v vike1

[06:18] <Geth> ¬¶ ecosystem: 2df72e4615 | (JJ Merelo)++ | 2 files

[06:18] <Geth> ¬¶ ecosystem: Completed hackathon guide

[06:18] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/2df72e4615

[06:19] <jmerelo> .tell AlexDaniel the squashathon guide is completed: https://github.com/perl6/ecosystem/blob/master/docs/Hacktoberfest.md I'll link it from the wiki.

[06:19] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[06:20] <jmerelo> .tell AlexDaniel oh, well, I see you already did another one... https://github.com/perl6/ecosystem/blob/master/docs/Hacktoberfest.md

[06:20] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[06:22] <squashable6> Webhook for JJ/p6-math-constants is now active! Half measures are as bad as nothing at all.

[06:22] *** success joined
[06:23] *** success is now known as Guest69010

[06:23] *** p6bannerbot sets mode: +v Guest69010

[06:24] <Geth> ¬¶ ecosystem: cd6c210ce5 | (JJ Merelo)++ | docs/Hacktoberfest.md

[06:24] <Geth> ¬¶ ecosystem: Adds secret to make it correct

[06:24] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/cd6c210ce5

[06:24] <Geth> ¬¶ ecosystem: 66bd4339a4 | (JJ Merelo)++ | 2 files

[06:24] <Geth> ¬¶ ecosystem: Updated with secret, camelia and screenshot

[06:24] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/66bd4339a4

[06:25] *** aszlighl joined
[06:25] *** aszlighl left
[06:26] <araraloren> jmerelo Hmm, I have some module, need I add it to Hactkoberfest ?

[06:27] <jmerelo> araraloren: you can do the squashathon, hacktoberfest or both

[06:27] <araraloren> what's the difference ?

[06:27] <buggable> New CPAN upload: Getopt-Advance-1.1.2.tar.gz by ALOREN http://modules.perl6.org/dist/Getopt::Advance:cpan:ALOREN

[06:27] <squashable6> Webhook for JJ/p6-algorithm-evolutionary-simple is now active! Non-blocking is better than blocking.

[06:28] *** epony left
[06:28] <jmerelo> araraloren: if you label issues with Hacktoberfest, someone might come up and help you even if you're not in the hackathon. The squashathon is going to take place only over the weekend, and in principle, you don't need to label anything.

[06:28] <araraloren> oh

[06:29] <araraloren> I think hacktoberfest is better for me :)

[06:29] <araraloren> Looks great

[06:29] <araraloren> jmerelo thanks

[06:30] <Geth> ¬¶ ecosystem: fc6bc61a37 | (JJ Merelo)++ | docs/Hacktoberfest.md

[06:30] <Geth> ¬¶ ecosystem: Adds FAQ

[06:30] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/fc6bc61a37

[06:30] <jmerelo> araraloren: I have added it as FAQ above

[06:30] <araraloren> jmerelo And I notice the domain name is 6lang.org, is it mean something ?

[06:31] <araraloren> Such as the language will rename to 6lang :)

[06:31] <jmerelo> araraloren: it's just a domain we use for hosting stuff, programs, that kind of thing. Including whateverable bots.

[06:31] <araraloren> Got it!

[06:31] <jmerelo> araraloren: Don't think so. Plus I've always supported √æerl

[06:31] <araraloren> Haha

[06:33] *** Bucciarati joined
[06:33] *** ec2-user1 joined
[06:34] *** p6bannerbot sets mode: +v Bucciarati

[06:34] *** p6bannerbot sets mode: +v ec2-user1

[06:39] *** ec2-user1 left
[06:41] *** Guest69010 left
[06:41] *** bluepixelMQ joined
[06:42] *** bluepixelMQ left
[06:42] *** jmerelo left
[06:49] *** success joined
[06:50] *** success is now known as Guest55245

[06:50] *** p6bannerbot sets mode: +v Guest55245

[06:51] *** kensanata joined
[06:51] *** p6bannerbot sets mode: +v kensanata

[06:52] *** ApachezfV joined
[06:52] *** p6bannerbot sets mode: +v ApachezfV

[06:54] *** ApachezfV left
[06:54] *** Summertime joined
[06:54] *** p6bannerbot sets mode: +v Summertime

[06:57] *** robertle left
[07:14] *** oodani joined
[07:15] *** p6bannerbot sets mode: +v oodani

[07:25] *** unsoundKn joined
[07:25] *** maximjaffe joined
[07:25] *** maximjaffe left
[07:26] *** p6bannerbot sets mode: +v unsoundKn

[07:27] <Xliff_> \w

[07:27] <Xliff_> Can someone give me some ideas as to why this error is occurring?

[07:27] <Xliff_> GTK::Roles::ColorChooser is not composable, so GTK::ColorChooser cannot compose it

[07:28] <Xliff_> Why would a role not be composable? Would it have anything to do with having attributes in a role?

[07:32] *** unsoundKn left
[07:33] *** dakkar joined
[07:34] *** p6bannerbot sets mode: +v dakkar

[07:37] *** HaraldJoerg joined
[07:38] *** p6bannerbot sets mode: +v HaraldJoerg

[07:39] <araraloren> Xliff_ Never seen this error :)

[07:40] <Xliff_> araraloren: Yeah. I figured it out. Was originally a class that I turned into a role.

[07:40] <Xliff_> Forgot to change "class" to "role", LOL!

[07:40] <araraloren> ok

[07:41] *** xeaguej joined
[07:42] <tadzik> heh, my first thought was "sounds like it's not a role" :P

[07:42] *** p6bannerbot sets mode: +v xeaguej

[07:43] <araraloren> yeah, it should report something like that

[07:43] <araraloren> what is composeable :/

[07:44] <tadzik> a role is :)

[07:45] <tadzik> or maybe something that has a Rolable role composed...

[07:45] * tadzik hides

[07:47] *** Actualeyes left
[07:47] *** Bucciarati left
[07:47] *** Actualeyes joined
[07:48] *** Ven` joined
[07:48] *** p6bannerbot sets mode: +v Actualeyes

[07:48] *** p6bannerbot sets mode: +v Ven`

[07:51] *** xeaguej left
[07:52] <Xliff_> tadzik: Never go to a rave.

[07:52] * Xliff_ hides.

[07:53] * lizmat clickbaits https://p6weekly.wordpress.com/2018/10/01/2018-40-lesser-than-two/

[07:55] *** Bucciarati joined
[07:55] *** scimon joined
[07:55] *** p6bannerbot sets mode: +v Bucciarati

[07:56] <Xliff_> lizmat: WHOA! Lotsa good news, and a great writeup! :)

[07:56] *** p6bannerbot sets mode: +v scimon

[07:59] *** natrys joined
[08:00] *** p6bannerbot sets mode: +v natrys

[08:02] <Xliff_> Does anyone here do any GTK programming?

[08:02] <scimon> https://gist.github.com/Scimon/0d57fec9a6f6da33978695161d19ec36 : So here's something fun. 

[08:03] <scimon> Any idea why pushing 1 million elements into an Array is noticeably slower than doing it with an Object that just happens to be an array?  

[08:03] <scimon> (Like 10 times slower)

[08:04] <timotimo> scimon: put the two for loops into subs perhaps

[08:05] <timotimo> (if that helps, i can explain exactly why)

[08:06] *** ufobat joined
[08:06] *** p6bannerbot sets mode: +v ufobat

[08:09] <scimon> I shall try it. 

[08:09] <ufobat> i am running "cro run" in a docker container. when i invoke it like this "docker run -ti vi-restapp:latest cro run" i get a "Usage" from cro, when i run /bin/sh in the container and run "cro run" on the shell it works

[08:10] <ufobat> what am i doing wrong that cro or MAIN does get it wrong 

[08:10] <timotimo> maybe you need to pass the command and its arguments in quotes or something

[08:11] <ufobat> my Dockerfile is like ENTRYPOINT  ["/bin/sh", "-c"] and CMD         ["cro", "run"]

[08:11] <ufobat> thats what i actually want to start

[08:11] <scimon> If that's you'r CMD then you just need "docker run -ti vi-restapp:latest"

[08:12] <timotimo> oh, perhaps you were calling "cro run cro run"

[08:12] *** abraxxa left
[08:12] <timotimo> "see cro run. run cro run"

[08:12] <ufobat> if i provide a command in docker run i override the cmd, dont i?

[08:12] *** abraxxa joined
[08:13] *** p6bannerbot sets mode: +v abraxxa

[08:13] <ufobat> providing no command, as you suggested scimon, same behaviour, i get the usage from MAIN

[08:14] <ufobat> is my ENTRYPOINT wrong, maybe?

[08:14] <ufobat> cause i needed to set the entry point because i wanted to override the perl6 entry point of jjmerelo/alpine-perl6

[08:17] <scimon> Hmmm... yeah command args should override your CMD from the docker file. In my Cro app I'm using `perl6 -Ilib service.p6` but I've got a weird docker entry too.

[08:17] <scimon> timotimo: Moving to code into subs didn't make a difference.

[08:18] *** saki joined
[08:18] <timotimo> well, that's interesting

[08:18] *** p6bannerbot sets mode: +v saki

[08:19] <ufobat> scimon, a weired docker entry? what do you mean?

[08:20] *** andrzejku joined
[08:20] <scimon> My Cro system runs an entry point script that starts by using Amazon KMS to decode and populate some ENV vars and also creates a static config js file. (So it's a bit weird).

[08:21] *** p6bannerbot sets mode: +v andrzejku

[08:21] <timotimo> one of them isn't jitted for some reason

[08:21] <scimon> (Heck the Dockerfile is two parts. First a VUE.js system that prerenders itself into static files then a secod Cro image that copies the static files in from the first.

[08:22] <scimon> looks like the array one (from the speed). 

[08:23] <scimon> I would have expected the $a one to be slower than the @a one not the other way around. 

[08:23] <timotimo> what fun, List.pm6's is-lazy is being called two million times, too, and it takes 16.5% of total run time

[08:24] <araraloren> oh

[08:24] <scimon> (I should get more into the guts of things. Today is a day of meetings though)

[08:24] *** saki left
[08:30] <Xliff_> m: sub a (Int() $a, Int() $b) { say $a; say $b; say $a.Int; say $b.Int; };  a(True, False);

[08:30] <camelia> rakudo-moar ab83b9d82: OUTPUT: ¬´True‚ê§False‚ê§1‚ê§0‚ê§¬ª

[08:31] <Xliff_> Shouldn't that output be 1,0,1,0?

[08:31] <timotimo> scimon: pro tip: if you switch around versions one and two, the order of "fast, slow" stays the same

[08:32] <jnthn> No, because Bool is an integer-based enumeration

[08:32] <yoleaux> 1 Oct 2018 20:09Z <lizmat> jnthn: I wonder whether our approach in BUILDALL could be improved by also generating a custom new method with a dedicated signature

[08:32] <Xliff_> m: sub a (Int $a, Int $b) { say $a; say $b; say $a.Int; say $b.Int; };  a(True, False);

[08:32] <camelia> rakudo-moar ab83b9d82: OUTPUT: ¬´True‚ê§False‚ê§1‚ê§0‚ê§¬ª

[08:32] <Xliff_> jnthn: Wouldn't that make all enums integer based?

[08:33] <Xliff_> m: sub a (Int $a, Int $b) { say $a.^name; say $b.^name; say $a.Int; say $b.Int; };  a(True, False);

[08:33] <camelia> rakudo-moar ab83b9d82: OUTPUT: ¬´Bool‚ê§Bool‚ê§1‚ê§0‚ê§¬ª

[08:33] <timotimo> Xliff_: no, you can have string based enums, too

[08:33] <Xliff_> Agh. I didn't think about that.

[08:36] <jnthn> .tell lizmat No, custom `new` is too user-visible and we don't need to code-gen it to get more speedups (there's various tricks we can do in spesh)

[08:36] <yoleaux> jnthn: I'll pass your message to lizmat.

[08:36] *** rindolf joined
[08:36] <lizmat> .

[08:36] <yoleaux> 08:36Z <jnthn> lizmat: No, custom `new` is too user-visible and we don't need to code-gen it to get more speedups (there's various tricks we can do in spesh)

[08:36] <lizmat> ok  :-)

[08:36] *** p6bannerbot sets mode: +v rindolf

[08:38] <lizmat> jnthn: as that was the only real difference I saw between the original benchmark and Zoffix's version

[08:47] *** rochadtQw joined
[08:47] *** rochadtQw left
[08:51] <scimon> timotimo: Ok... now that's just.... WTF? 

[08:52] <timotimo> scimon: something is making spesh unhappy

[08:52] <scimon> Yeah.

[08:56] <scimon> So the takeaway is that's there's actually not much in it between using @a or $a to hold an array speed wise. But I've found a new way to make spesh sad?

[08:57] <jnthn> No, it's reasonably well known that if you put one hot loop after another then it'll only manage to do much with the first one.

[08:58] <jnthn> (Well known to those of us working on spesh, at least)

[08:59] <timotimo> jnthn: i still reproduce it if i put the for loop into two different subs and only call the subs

[09:00] <jnthn> That's more interesting...

[09:00] *** machinautWo joined
[09:01] <timotimo> even when they're method calls and as such less obviously inlinable

[09:01] *** machinautWo left
[09:01] <ufobat> timotimo, scimon, i reduced my problem to those 2 files here: https://github.com/ufobat/docker-cmd-helpme-pls - i would be happy if you could have a look at it

[09:02] <ufobat> but i assume it isnt a perl6 issue

[09:03] *** aiacob joined
[09:03] *** p6bannerbot sets mode: +v aiacob

[09:15] <scimon> ufobat: taking a quick look.

[09:16] <ufobat> thank you

[09:22] <scimon> Ahhhh. I remember this now. Basically docker run IMAGE './script.pl6 run' works. ... I think you need to look at https://medium.freecodecamp.org/docker-entrypoint-cmd-dockerfile-best-practices-abc591c30e21 for a general idea. 

[09:23] <scimon> If you update your ENTRYPOINT to ["./script.pl6", "run"] is works fine. 

[09:23] <scimon> (For instance)

[09:25] <ufobat> if i change my entrypoint from ['/bin/sh', '-c'] to [] it works Oo

[09:25] <scimon> (Also see https://docs.docker.com/engine/reference/run/#overriding-dockerfile-image-defaults)

[09:26] <ufobat> i have a look at your link in a few minutes. i am on the phone

[09:26] <scimon> No probs.

[09:27] <El_Che> entrypoint and cmd can be confusing

[09:27] <El_Che> also because there are 2 syntaxes

[09:28] <El_Che> entrypoint == cmd always run (can be overwritten with --entrypoint)

[09:28] <El_Che> cmd == args for entrypoint

[09:28] <El_Che> if entrypoint is empty, first in cmd is the command

[09:28] <El_Che> [ ] syntax uses execv (no shell)

[09:29] <El_Che> "" calls "sh -c"

[09:29] <El_Che> e.g. if you use shell things like env vars, pipes, stdout redirection, etc

[09:31] *** rindolf left
[09:36] *** rindolf joined
[09:37] <ufobat> but i changed my entrypoint from ['sh', '-c'] to [] and that made it working

[09:37] *** Skarsnik joined
[09:37] *** p6bannerbot sets mode: +v rindolf

[09:37] *** noganex left
[09:38] *** p6bannerbot sets mode: +v Skarsnik

[09:38] <Skarsnik> Hello

[09:38] <yoleaux> 11 Aug 2018 19:28Z <AlexDaniel> Skarsnik: https://rt.perl.org/Public/Bug/Display.html?id=131003#txn-1573999

[09:39] <Skarsnik> hm, anyone remember if a special Perl module was needed to build rakudo 2016.01.1?

[09:41] *** rindolf left
[09:42] <Skarsnik> nvm, it was Module::Install

[09:42] <Skarsnik> AlexDaniel`, Interesting, could be worth checking debug trace when it crash

[09:44] *** abraxxa left
[09:45] *** abraxxa joined
[09:45] <Skarsnik> hm, it was not this module. I get /usr/bin/perl Configure.pl --optimize --prefix=/mnt/f/Project/Perl6/benchmark/rakudo-2016.01.1/install --make-install

[09:45] <Skarsnik> Can't locate build/setup.pm in @INC (you may need to install the build::setup module)

[09:46] *** p6bannerbot sets mode: +v abraxxa

[09:46] *** abraxxa left
[09:47] *** ultraqq joined
[09:47] *** ultraqq left
[09:49] *** abraxxa joined
[09:50] *** p6bannerbot sets mode: +v abraxxa

[09:58] *** goesta_ joined
[09:58] *** goesta_ left
[10:00] *** zakharyas joined
[10:01] *** p6bannerbot sets mode: +v zakharyas

[10:01] *** rindolf joined
[10:02] *** p6bannerbot sets mode: +v rindolf

[10:03] *** ZzZombo left
[10:09] <Xliff_> Wow!

[10:10] <Xliff_> Over 35kloc and Perl6 takes almost 5 minutes to compile and run the whole thing.

[10:17] *** zakharyas left
[10:18] *** zakharyas joined
[10:18] *** p6bannerbot sets mode: +v zakharyas

[10:19] <Geth> ¬¶ doc: MorayJ++ created pull request #2349: Add credit to credits file

[10:19] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2349

[10:35] *** zakharyas left
[10:37] *** zakharyas joined
[10:37] *** p6bannerbot sets mode: +v zakharyas

[10:39] <Geth> ¬¶ doc: 5b975dedc4 | MorayJ++ | CREDITS

[10:39] <Geth> ¬¶ doc: Add credit to credits file

[10:39] <Geth> ¬¶ doc: 

[10:39] <Geth> ¬¶ doc: Add name to CREDITS.MD

[10:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/5b975dedc4

[10:39] <Geth> ¬¶ doc: 4336e4be80 | MorayJ++ (committed using GitHub Web editor) | CREDITS

[10:39] <Geth> ¬¶ doc: Merge pull request #2349 from MorayJ/add-credit

[10:39] <Geth> ¬¶ doc: 

[10:39] <Geth> ¬¶ doc: Add credit to credits file

[10:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4336e4be80

[10:42] *** leont joined
[10:42] <Skarsnik> hm this error disapear in 2016.09

[10:43] *** p6bannerbot sets mode: +v leont

[10:46] *** aiacob left
[10:46] <timotimo> Xliff_: with --stagestats you could see what part of it is compilation and what part of it is running

[10:46] <timotimo> that could be interesting

[10:46] <timotimo> well, if it's one file, that is

[10:46] *** jmerelo joined
[10:47] *** p6bannerbot sets mode: +v jmerelo

[10:48] <Xliff_> timotimo: It's not. It's a ... large amount.

[10:48] <Xliff_> And I was using stagestats and time. ;)

[10:48] <timotimo> OK!

[10:51] <Skarsnik> fun rakudo compilation does not trigger the game mode of my cpu x)

[10:51] *** natrys left
[10:56] <jmerelo> Skarsnik: my UPS starts to beep every time I do it...

[11:06] *** zakharyas left
[11:08] *** zakharyas joined
[11:08] *** p6bannerbot sets mode: +v zakharyas

[11:22] *** tobs` joined
[11:22] *** p6bannerbot sets mode: +v tobs`

[11:24] *** jfe` joined
[11:24] *** p6bannerbot sets mode: +v jfe`

[11:26] *** zakharyas left
[11:27] *** Skarsnik left
[11:28] *** zakharyas joined
[11:28] *** p6bannerbot sets mode: +v zakharyas

[11:29] *** jfe` left
[11:42] <jmerelo>     say <not there yet>.join("\n").lines.elems

[11:42] <evalable6> jmerelo, rakudo-moar ab83b9d82: OUTPUT: ¬´3‚ê§¬ª

[11:42] *** itaipu joined
[11:43] *** p6bannerbot sets mode: +v itaipu

[11:47] *** pecastro joined
[11:48] *** p6bannerbot sets mode: +v pecastro

[11:48] *** ZzZombo joined
[11:48] *** p6bannerbot sets mode: +v ZzZombo

[11:50] *** scimon_ joined
[11:51] *** p6bannerbot sets mode: +v scimon_

[11:53] *** scimon left
[11:54] *** Ven` left
[11:57] *** gnarbariankO joined
[11:57] *** gnarbariankO left
[11:58] <Geth> ¬¶ doc: b62ad101f3 | (JJ Merelo)++ | doc/Type/Str.pod6

[11:58] <Geth> ¬¶ doc: Improves lines with another example

[11:58] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b62ad101f3

[11:58] <Geth> ¬¶ doc: 81981bdc5a | (JJ Merelo)++ | doc/Language/subscripts.pod6

[11:58] <Geth> ¬¶ doc: Some rewriting and eliminating a TODO

[11:58] <synopsebot> Link: https://doc.perl6.org/type/Str

[11:58] <synopsebot> Link: https://doc.perl6.org/language/subscripts

[11:58] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/81981bdc5a

[11:58] <Geth> ¬¶ doc: 4a03fe8015 | (JJ Merelo)++ | doc/Language/setbagmix.pod6

[11:58] <synopsebot> Link: https://doc.perl6.org/language/setbagmix

[11:58] <Geth> ¬¶ doc: Trying to find out stuff about TODOs, refs #2277

[11:58] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4a03fe8015

[11:58] *** noganex joined
[11:59] *** p6bannerbot sets mode: +v noganex

[12:01] *** scimon_ left
[12:02] *** scimon joined
[12:02] <Geth> ¬¶ doc: 14b911a64a | (JJ Merelo)++ | doc/Language/setbagmix.pod6

[12:02] <Geth> ¬¶ doc: Eliminates 4-year old TODO

[12:02] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/14b911a64a

[12:02] <Geth> ¬¶ doc: 9464094a47 | (JJ Merelo)++ | doc/Language/setbagmix.pod6

[12:02] <Geth> ¬¶ doc: Eliminates another TODO

[12:02] <synopsebot> Link: https://doc.perl6.org/language/setbagmix

[12:02] <Geth> ¬¶ doc: 

[12:02] <Geth> ¬¶ doc: It's 4 year old, most stuff after that has changed. It might need some

[12:02] <Geth> ¬¶ doc: revision, sinde some parts are 5 year old; for instance, including the

[12:02] *** Ven` joined
[12:02] <Geth> ¬¶ doc: signature of the operators, which now have many other multis (and we

[12:02] <Geth> ¬¶ doc: no longer include signatures here), but essentially it's changed a lot

[12:02] <Geth> ¬¶ doc: after that comment. Refs #2277

[12:02] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/9464094a47

[12:02] *** p6bannerbot sets mode: +v scimon

[12:03] *** p6bannerbot sets mode: +v Ven`

[12:03] *** zakharyas left
[12:07] *** zakharyas joined
[12:08] *** p6bannerbot sets mode: +v zakharyas

[12:11] *** robertle joined
[12:12] *** p6bannerbot sets mode: +v robertle

[12:15] *** AlexDaniel joined
[12:16] *** p6bannerbot sets mode: +v AlexDaniel

[12:18] <AlexDaniel> .

[12:18] <yoleaux> 06:19Z <jmerelo> AlexDaniel: the squashathon guide is completed: https://github.com/perl6/ecosystem/blob/master/docs/Hacktoberfest.md I'll link it from the wiki.

[12:18] <yoleaux> 06:20Z <jmerelo> AlexDaniel: oh, well, I see you already did another one... https://github.com/perl6/ecosystem/blob/master/docs/Hacktoberfest.md

[12:19] <AlexDaniel> heh, now we have two guides :)

[12:19] <AlexDaniel> I forgot to delete the .md file when I moved it /o\

[12:22] <AlexDaniel> ‚ÄúIf you host your module at GitLab or somewhere else, you can do this too‚Äù

[12:22] <AlexDaniel> can you?

[12:23] <AlexDaniel> are gitlab webhook payloads compatible with github payloads?

[12:27] <buggable> New CPAN upload: WriteOnceHash-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/WriteOnceHash-0.0.1.tar.gz

[12:32] *** sena_kun joined
[12:32] *** p6bannerbot sets mode: +v sena_kun

[12:47] <buggable> New CPAN upload: WriteOnceHash-0.0.2.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/WriteOnceHash-0.0.2.tar.gz

[13:02] *** zakharyas left
[13:07] <buggable> New CPAN upload: WriteOnceHash-0.0.3.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/WriteOnceHash-0.0.3.tar.gz

[13:16] *** jmerelo left
[13:31] <leont> What are \ arguments/variables called again?

[13:31] <jkramer> sigilless

[13:33] <leont> Thanks

[14:06] *** lizmat left
[14:06] *** lizmat joined
[14:06] *** p6bannerbot sets mode: +v lizmat

[14:06] *** lizmat left
[14:17] *** leont left
[14:18] *** lizmat joined
[14:18] *** p6bannerbot sets mode: +v lizmat

[14:19] *** Ven` left
[14:20] *** kensanata left
[14:21] *** Ven` joined
[14:22] *** p6bannerbot sets mode: +v Ven`

[14:25] *** gregf_ joined
[14:25] *** p6bannerbot sets mode: +v gregf_

[14:29] *** zakharyas joined
[14:29] *** p6bannerbot sets mode: +v zakharyas

[14:44] *** leont joined
[14:45] *** p6bannerbot sets mode: +v leont

[14:46] *** troys joined
[14:46] *** p6bannerbot sets mode: +v troys

[15:02] *** kunwon1uI joined
[15:03] *** kunwon1uI left
[15:03] *** fake_space_whale joined
[15:03] *** zakharyas left
[15:04] *** p6bannerbot sets mode: +v fake_space_whale

[15:06] *** SirNeo- joined
[15:07] *** SirNeo- left
[15:07] *** zakharyas joined
[15:08] <pmichaud> Re:  issue #2338 -- I'm confused by the meaning of "is required" on a hash.

[15:08] *** p6bannerbot sets mode: +v zakharyas

[15:08] <pmichaud> is it intended to mean that the hash must be non-empty?

[15:09] *** tobs` left
[15:10] <pmichaud> Also, good morning #perl6

[15:10] *** leont left
[15:12] *** kerframil joined
[15:12] *** p6bannerbot sets mode: +v kerframil

[15:13] <pmichaud> or is it simply that it needs to be instantiated in BUILD instead of being auto-built?

[15:13] <pmichaud> s/instantiated/bound or initialized/

[15:15] *** domidumont left
[15:15] <jnthn> I believe the latter, though in reality the mechanism is "did the attribute get touched during instantiation" and so hangs off lazy allocation of attributes

[15:16] <jnthn> And assignment causes the container to assign into being vivified

[15:19] <jnthn> And the reason for 2338 is, I believe, that the lazy initialization thing can't work for any old type :/

[15:19] *** kbloom left
[15:20] <jnthn> Those of us working on JIT/opt stuff are also grumpy about this particular mechanism, since it makes attribute access more costly than it should be (since it always has to do a vivification check)

[15:20] <jnthn> Plus it doesn't behave sensibly for natives either

[15:21] <jnthn> m: class C { has int $.x is required }

[15:21] <camelia> rakudo-moar 107477b41: ( no output )

[15:21] <jnthn> m: class C { has int $.x is required }; C.new

[15:21] <camelia> rakudo-moar 107477b41: OUTPUT: ¬´The attribute '$!x' is required, but you did not provide a value for it.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:22] <jnthn> m: class C { has int $.x is required }; C.new(x => 42)

[15:22] <camelia> rakudo-moar 107477b41: ( no output )

[15:22] <jnthn> m: class C { has int $.x is required }; C.new(x => 0)

[15:22] <camelia> rakudo-moar 107477b41: OUTPUT: ¬´The attribute '$!x' is required, but you did not provide a value for it.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:22] <jnthn> bah...why wasn't that just made a compile-time error :/

[15:22] <[particle]1> https://www.washingtonpost.com/politics/2018/10/01/big-gulf-kavanaugh-is-partisan-big-change-last-month-was-among-women/?utm_term=.e2bde6e8cf94

[15:37] <AlexDaniel> ? O_o

[15:42] <lizmat> jnthn: should I be looking at QAST generating an alternative for attrinited ?

[15:44] <pmichaud> personally, I'd be fine with "is required" <=> "you touched the thing during instantiation", but I'll leave it to other heads to figure out.  :)  Thanks for the clarification. 

[15:45] <lizmat> pmichaud: I'm going for that interpretation

[15:45] <lizmat> for now, anyway

[15:45] <pmichaud> BTW, the docs page on "is required" only mentions scalar variables, a hash or array example might be useful there.

[15:46] <jnthn> lizmat: I've thought long and hard about how we can replae an alternative for attrinited, and didn't yet find a good one...

[15:46] <jnthn> oops, refactor that sentence in either of the 2 ways that make it make sense :)

[15:48] <lizmat> we would only need this for classes with attributes with default values or "is required" right ?

[15:48] <jnthn> Correct

[15:48] <lizmat> so any overhead would only apply to those classes

[15:48] <lizmat> and we could lose the attrinited overhead for all others

[15:52] <lizmat> pmichaud: perhaps make a doc issue ?

[15:53] *** MilkmanDan left
[15:55] *** MilkmanDan joined
[15:55] *** p6bannerbot sets mode: +v MilkmanDan

[15:56] *** Sigyn left
[15:57] <SmokeMachine> is .HOW the best way to test if a type is an enum?

[15:57] <SmokeMachine> m: enum Bla <a b c d e>; say Bla.HOW ~~ Metamodel::EnumHOW

[15:57] <camelia> rakudo-moar 107477b41: OUTPUT: ¬´True‚ê§¬ª

[15:57] *** Sigyn joined
[15:57] *** p6bannerbot sets mode: +v Sigyn

[15:58] <SmokeMachine> m: enum Bla <a b c d e>; say Bla.^can: "enum_values"

[15:58] <camelia> rakudo-moar 107477b41: OUTPUT: ¬´()‚ê§¬ª

[15:58] <SmokeMachine> m: enum Bla <a b c d e>; say Bla.HOW^can: "enum_values"

[15:58] <camelia> rakudo-moar 107477b41: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    can used at line 1. Did you mean 'tan', 'cas'?‚ê§‚ê§¬ª

[15:58] <SmokeMachine> m: enum Bla <a b c d e>; say Bla.HOW.^can: "enum_values"

[15:59] <camelia> rakudo-moar 107477b41: OUTPUT: ¬´enum_values‚ê§¬ª

[16:01] *** ivoireNe joined
[16:02] *** ivoireNe left
[16:02] *** Actualeyes left
[16:04] *** fake_space_whale left
[16:04] *** zakharyas left
[16:06] *** araraloren left
[16:10] <Geth> ¬¶ ecosystem: 21da251085 | (Fernando Correa de Oliveira)++ (committed using GitHub Web editor) | docs/Hacktoberfest.md

[16:10] <Geth> ¬¶ ecosystem: Update Hacktoberfest.md

[16:10] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/21da251085

[16:12] *** molaf joined
[16:13] *** p6bannerbot sets mode: +v molaf

[16:14] <squashable6> Webhook for FCO/Red is now active! Non-blocking is better than blocking.

[16:16] *** jmerelo joined
[16:16] *** Ven` left
[16:17] *** p6bannerbot sets mode: +v jmerelo

[16:25] *** lizmat left
[16:31] *** scimon left
[16:32] *** molaf left
[16:38] *** zakharyas joined
[16:39] *** p6bannerbot sets mode: +v zakharyas

[16:39] *** Ven` joined
[16:40] *** p6bannerbot sets mode: +v Ven`

[16:41] *** echosixVo joined
[16:43] *** lizmat joined
[16:43] *** p6bannerbot sets mode: +v lizmat

[16:45] *** echosixVo left
[16:49] <Geth> ¬¶ doc: 0707dbc0d7 | (JJ Merelo)++ | doc/Language/glossary.pod6

[16:49] <Geth> ¬¶ doc: Eliminates note abour :rotate in example

[16:49] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/0707dbc0d7

[16:49] <Geth> ¬¶ doc: 148bfc97ab | (JJ Merelo)++ | doc/Language/subscripts.pod6

[16:49] <Geth> ¬¶ doc: Eliminates a TODO refs #2277

[16:49] <synopsebot> Link: https://doc.perl6.org/language/glossary

[16:49] <Geth> ¬¶ doc: 

[16:49] <Geth> ¬¶ doc: Basically adds an example which shows the convenience of binding a

[16:49] <synopsebot> Link: https://doc.perl6.org/language/subscripts

[16:49] <Geth> ¬¶ doc: hash value to a data structure, as requested by comment.

[16:49] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/148bfc97ab

[16:50] *** dakkar left
[16:57] <buggable> New CPAN upload: P5getpriority-0.0.5.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5getpriority:cpan:ELIZABETH

[16:58] <El_Che> lizmat is unstoppable

[17:06] <vrurg> I've got a question which is too long to be asked here. Would very much appreciate any advices here: https://stackoverflow.com/questions/52613076/binding-of-private-attributes-nqpbindattr-vs

[17:09] *** leont joined
[17:10] *** p6bannerbot sets mode: +v leont

[17:13] *** Ven` left
[17:17] *** claes-magnus joined
[17:18] *** p6bannerbot sets mode: +v claes-magnus

[17:24] *** claes-magnus left
[17:24] *** claes-magnus joined
[17:25] *** p6bannerbot sets mode: +v claes-magnus

[17:27] <jmerelo> vrurg: is there some reason why you want to use NQP? You can probably achieve the same using the meta-object protocol.

[17:27] *** patrickb joined
[17:28] *** mandara joined
[17:28] *** p6bannerbot sets mode: +v mandara

[17:28] *** p6bannerbot sets mode: +v patrickb

[17:31] *** mandara left
[17:32] *** W4RL0RD__ joined
[17:32] *** p6bannerbot sets mode: +v W4RL0RD__

[17:32] *** Bucciarati left
[17:32] *** avar left
[17:33] *** avar joined
[17:33] *** avar left
[17:33] *** avar joined
[17:33] *** p6bannerbot sets mode: +v avar

[17:33] *** Bucciarati joined
[17:34] *** p6bannerbot sets mode: +v avar

[17:34] *** p6bannerbot sets mode: +v Bucciarati

[17:35] *** claes-magnus left
[17:39] *** Ven` joined
[17:40] *** p6bannerbot sets mode: +v Ven`

[17:44] *** PossumeK joined
[17:44] *** smoothob joined
[17:47] *** Ven` left
[17:52] *** zxcvz joined
[17:53] *** p6bannerbot sets mode: +v zxcvz

[17:53] *** PossumeK left
[17:56] *** smoothob left
[17:56] *** molaf joined
[17:57] *** p6bannerbot sets mode: +v molaf

[17:57] *** niemeyerST joined
[17:58] *** p6bannerbot sets mode: +v niemeyerST

[17:58] *** niemeyerST left
[18:14] <Xliff_> \o

[18:15] <Xliff_> I'm getting signed integers back from GTK and things work fine the first time around. However when I re-run the routine again, the signedness is gone.

[18:16] <Xliff_> My example code returns -6. I get -g the first time and then 4294967290 the second.

[18:16] <Xliff_> s/'-g'/-6/

[18:17] <jmerelo> Xliff_: number precision overflow?

[18:17] <Xliff_> If force the scalar to a native int, like int32... things work like I expect.

[18:17] <Xliff_> jmerelo: I am hoping its something silly that I'm doing.

[18:18] <Xliff_> But I don't see how it's an overflow. More like the first time the signedness is communicated, and subsequent times it is not.

[18:19] <jmerelo> Xliff_: well, that big number... Looks like a negative number is converted to unsigned along the way... not precision overflow, but wrong conversion, I guess. Some native thing...

[18:19] *** chsanch joined
[18:19] <Xliff_> m: 0b11111111111111111111111111111010.say

[18:19] <camelia> rakudo-moar 107477b41: OUTPUT: ¬´4294967290‚ê§¬ª

[18:20] <Xliff_> ^^ That's negative 6 representation.

[18:20] *** p6bannerbot sets mode: +v chsanch

[18:21] <Xliff_> m: use NativeCall; my int32 $a = -6; my $b = $a; say $b;

[18:21] <camelia> rakudo-moar 107477b41: OUTPUT: ¬´-6‚ê§¬ª

[18:21] <jmerelo> m: use NativeCall; my int32 $a = -6; my UInt $b = $a; say $b; 

[18:21] <camelia> rakudo-moar 107477b41: OUTPUT: ¬´Type check failed in assignment to $b; expected UInt but got Int (-6)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:21] <Xliff_> m: use NativeCall; my int32 $a = -6; my uint32 $b = $a; say $b;

[18:21] <camelia> rakudo-moar 107477b41: OUTPUT: ¬´4294967290‚ê§¬ª

[18:21] <jmerelo> m: use NativeCall; my int32 $a = -6; my UInt $b = 0+$a; say $b; 

[18:21] <camelia> rakudo-moar 107477b41: OUTPUT: ¬´Type check failed in assignment to $b; expected UInt but got Int (-6)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:21] <jmerelo> Right

[18:22] <Xliff_> Yup... somehow it's turning unsigned and returning.

[18:22] <Xliff_> Should be same code path.

[18:25] <Xliff_> Weird.

[18:25] <Xliff_> I put the return value into a gint, rather than returning it directly and it works.

[18:26] <Xliff_> And I have no idea how I would golf this, and putting up my project and submitting a ticket would probably get the ticket..... delayed.

[18:26] <Xliff_> And rightly so.

[18:27] *** sauvin left
[18:27] <Xliff_> Needless to say... that's a lot of fixing to do. :/

[18:28] *** kerframil left
[18:34] *** brabo joined
[18:34] *** p6bannerbot sets mode: +v brabo

[18:51] *** W4RL0RD__ left
[18:52] *** W4RL0RD__ joined
[18:52] *** p6bannerbot sets mode: +v W4RL0RD__

[18:53] <jmerelo> Xliff_: if it works.. leave it at that...

[18:56] <Xliff_> Yes.

[18:56] <Xliff_> For now.

[18:57] *** sena_kun left
[18:59] *** jmerelo left
[19:00] *** zakharyas left
[19:00] *** W4RL0RD__ left
[19:02] *** ExtraCrispy joined
[19:02] *** p6bannerbot sets mode: +v ExtraCrispy

[19:07] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Cordova-0.0.11.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo::VSTS::YAML::Cordova:cpan:MELEZHIK

[19:15] *** HaraldJoerg1 joined
[19:16] *** HaraldJoerg left
[19:16] *** p6bannerbot sets mode: +v HaraldJoerg1

[19:17] <buggable> New CPAN upload: Sparrowdo-Cordova-OSx-Build-0.0.6.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo::Cordova::OSx::Build:cpan:MELEZHIK

[19:18] *** s0me0ne_ joined
[19:19] *** p6bannerbot sets mode: +v s0me0ne_

[19:19] *** Skarsnik joined
[19:19] *** p6bannerbot sets mode: +v Skarsnik

[19:20] *** zx joined
[19:20] *** kurahaupo left
[19:20] *** zx left
[19:21] *** kurahaupo joined
[19:22] *** p6bannerbot sets mode: +v kurahaupo

[19:32] *** testtest joined
[19:32] *** p6bannerbot sets mode: +v testtest

[19:34] *** DarthGandalf left
[19:34] *** alcymd joined
[19:35] *** DarthGandalf joined
[19:35] *** p6bannerbot sets mode: +v DarthGandalf

[19:35] *** p6bannerbot sets mode: +v alcymd

[19:41] <Skarsnik> hm, was that a know bug in 2017.10

[19:41] <Skarsnik>     --setting=NQPCORE --no-regex-lib --target=mbc \

[19:41] <Skarsnik>     --output=gen/moar/stage2/QASTNode.moarvm gen/moar/stage2/QASTNode.nqp

[19:41] <Skarsnik> Segmentation fault (core dumped)

[19:42] <Skarsnik>   /mnt/f/Project/Perl6/benchmark/rakudo-2017.10/install/bin/moar --libpath=gen/moar/stage1 gen/moar/stage1/nqp.moarvm --bootstrap --module-path=gen/moar/stage2 --setting-path=gen/moar/stage2 \

[19:43] *** testtest left
[19:57] <buggable> New CPAN upload: PDF-Class-0.2.9.tar.gz by WARRINGD http://modules.perl6.org/dist/PDF::Class:cpan:WARRINGD

[20:08] *** zxcvz left
[20:11] <Skarsnik> Is there a way to disable precompilation entierly to run a script? (so even dep are not precompiled)

[20:12] *** puxavidavP joined
[20:16] <Geth> ¬¶ doc: ca198c7080 | Coke++ | doc/Language/glossary.pod6

[20:16] <Geth> ¬¶ doc: fix compilation error

[20:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ca198c7080

[20:16] <Geth> ¬¶ doc: 83ea8aedc1 | Coke++ | 2 files

[20:16] <Geth> ¬¶ doc: whitespace

[20:16] <synopsebot> Link: https://doc.perl6.org/language/glossary

[20:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/83ea8aedc1

[20:17] <[Coke]> Skarsnik: pretty sure you can only disable it in a particular compilation unit; so you can 'no precompilation' in your own code, but if you're including a library, don't think so

[20:20] <Skarsnik> My issue I have old code that was crashing rakudo already 2-3 years ago and it still does it now (crash before or after BEGIN phaser) and I think it's an issue with precomp

[20:21] <Skarsnik> https://gist.github.com/Skarsnik/e16b07a324a5858128d30da75c62a1c5

[20:22] *** puxavidavP left
[20:23] <[Coke]> out of curiosity, any nativecall in there?

[20:23] <Skarsnik> nop

[20:24] *** nativecallable6 joined
[20:24] <[Coke]> if not (and maybe even if so) a golf showing the segfault would be very helpful in tracking it down. that's a pretty recent rakudo.

[20:24] *** p6bannerbot sets mode: +v nativecallable6

[20:25] <timotimo> Skarsnik: shouldn't be terribly hard to put a "return false if nqp::getenvhash()<RAKUDO_IGNORE_PRECOMP_FILES>" in the right spot

[20:26] <Skarsnik> (I don't rememnber much) but I was trying to add a type-eq operator to compare Class and it start segfaulting when adding https://github.com/Skarsnik/gptrixie/blob/reftype/lib/GPT/Class.pm6#L73

[20:26] <Skarsnik> I tried using this file alone in a script, but I did not get any issue

[20:31] *** patrickb left
[20:40] *** molaf left
[20:41] *** Michael_S joined
[20:41] *** p6bannerbot sets mode: +v Michael_S

[20:48] *** brabo left
[20:49] *** alcymd left
[20:56] <SmokeMachine> is there a way to make a file (a schema file) that you describe every file that it should use (one file can use types from the other and vice-versa) and it import both without circular loading and without problem of not existing a type not yet loaded?

[20:57] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Build-Assembly-Patch-0.0.3.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo::VSTS::YAML::Build::Assembly::Patch:cpan:MELEZHIK

[20:58] <timotimo> run-time loading with require perhaps :)

[21:00] *** cognominal-p6 left
[21:02] *** El_Che left
[21:02] <SmokeMachine> heres an example: https://gist.github.com/FCO/4578d9935eb355f411b937563d7e6ec6

[21:02] *** cognominal-p6 joined
[21:02] <SmokeMachine> (there are 3 files on that gist)

[21:03] *** p6bannerbot sets mode: +v cognominal-p6

[21:03] <timotimo> hm, not sure how exactly the data will be organized at run-time, perhaps the schema would be fine loading the classes at run-time?

[21:05] <SmokeMachine> timotimo: Sorry, I didnt get it... do you mean that meybe only `use`ing could make it work?

[21:07] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Build-Assembly-Patch-0.0.4.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo::VSTS::YAML::Build::Assembly::Patch:cpan:MELEZHIK

[21:07] <timotimo> i meant more like "require"

[21:08] *** El_Che joined
[21:09] *** p6bannerbot sets mode: +v El_Che

[21:11] *** lizmat left
[21:12] *** kerframil joined
[21:12] *** p6bannerbot sets mode: +v kerframil

[21:14] <SmokeMachine> timotimo: do you mean something like this? https://glot.io/snippets/f5cvyya8x6

[21:16] <timotimo> kind of, but the other way around; the classes wouldn't be able to have a type constraint based on something "require"d, at least i don't think so

[21:16] <timotimo> but if the main file that sets up the schema does the run-time require, that might be fine

[21:19] *** pyrimidine left
[21:19] *** pyrimidine joined
[21:20] *** limarfrek joined
[21:20] *** p6bannerbot sets mode: +v limarfrek

[21:20] *** p6bannerbot sets mode: +v pyrimidine

[21:20] *** kerframil left
[21:22] *** limarfrek is now known as kerframil

[21:22] *** leont left
[21:25] <Skarsnik> hm, still no plan to support circular dependancies btw? or just too much work

[21:25] <timotimo> i don't know of a plan, but i don't have the full perspective on this topic either

[21:26] <geekosaur> afaik all there is is forward declarations

[21:27] *** El_Che left
[21:28] <SmokeMachine> timotimo: I tryed this, and its hanging... https://www.irccloud.com/pastebin/MIQsH4OL/

[21:32] *** ufobat left
[21:34] <Skarsnik> I have 2 use case for circular depancies : 1/ Mapping C headers to perl 6 code (libxml) 2/ Discord/IRC type: an User is in a Channel and a Channel has a list of Users

[21:34] *** El_Che joined
[21:35] *** p6bannerbot sets mode: +v El_Che

[21:35] <SmokeMachine> Red ORM table relationships is mine

[21:40] *** rouiljqU joined
[21:40] *** p6bannerbot sets mode: +v rouiljqU

[21:41] <[Coke]> the support is there - but you need to have all self referential things in a single compilation unit.

[21:45] *** lichtkind joined
[21:46] *** p6bannerbot sets mode: +v lichtkind

[21:47] *** rouiljqU left
[21:47] <ChoHag> Circular _dependencies_ is usually a sign that you're doing something wrong. eg. in the IRC case the initial user doesn't 'own' the channel's user list so if it's a dependency, it's of a different sort.

[21:49] <Skarsnik> we are not in database

[21:49] <Skarsnik> class User { has Channel $.channel-ins} make sense

[21:49] *** Kaiepi left
[21:50] <Skarsnik> or @.channels-in

[21:50] *** Kaiepi joined
[21:51] *** p6bannerbot sets mode: +v Kaiepi

[22:14] *** fake_space_whale joined
[22:15] *** chsanch left
[22:15] *** p6bannerbot sets mode: +v fake_space_whale

[22:16] *** chsanch joined
[22:17] *** p6bannerbot sets mode: +v chsanch

[22:22] *** alcymd joined
[22:23] *** p6bannerbot sets mode: +v alcymd

[22:25] *** MasterDuke joined
[22:25] *** p6bannerbot sets mode: +v MasterDuke

[22:25] *** alcymd left
[22:25] *** MasterDuke left
[22:25] *** MasterDuke joined
[22:25] *** herbert.freenode.net sets mode: +v MasterDuke

[22:25] *** p6bannerbot sets mode: +v MasterDuke

[22:29] *** kurahaupo left
[22:31] *** kurahaupo joined
[22:32] *** p6bannerbot sets mode: +v kurahaupo

[22:34] *** itaipu left
[22:42] *** leont joined
[22:43] *** p6bannerbot sets mode: +v leont

[22:43] *** lichtkind left
[22:44] *** pecastro left
[23:03] *** signineLu joined
[23:04] *** p6bannerbot sets mode: +v signineLu

[23:14] *** signineLu left
[23:17] *** HaraldJoerg1 left
[23:38] *** |oLa| left
[23:41] *** manchicken joined
[23:41] *** p6bannerbot sets mode: +v manchicken

[23:53] *** Skarsnik left
[23:55] *** nightfrog left
