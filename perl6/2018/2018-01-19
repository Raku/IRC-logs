[00:00] <jnthn> Xliff: I've typically just put everything into a module (for example, if it's a CLI thing stuck the MAIN there too and marked it is export) and then the script is just "use My::Thing::CLI;" which is one statement to parse

[00:00] <jnthn> And then all the rest is precompiled

[00:03] <Xliff> jnthn++: Good idea.

[00:05] *** khw joined
[00:11] <lizmat> Xliff: since CompUnitRepo's are pluggable, you can write your own manager that would just manage pre-compiled versions

[00:11] <lizmat> afk&

[00:15] <AlexDaniel> [Coke]: fwiw I've been changing a lot of stuff to use Sake lately

[00:15] <yoleaux> 18 Jan 2018 20:20Z <tbrowder> AlexDaniel: i was able to close the four tickets fixed by merge of rakudo PR #1339: RT #124281, RT #126742, RT #130477, and RT #132632

[00:15] <synopsebot> RT#124281 [resolved]: https://rt.perl.org/Ticket/Display.html?id=124281 colonpairs in [POD] config options always produce strings

[00:15] <synopsebot> RT#126742 [resolved]: https://rt.perl.org/Ticket/Display.html?id=126742 [POD]  config items should not include quotes for string values

[00:15] <synopsebot> RT#130477 [resolved]: https://rt.perl.org/Ticket/Display.html?id=130477 [BUG][POD] Pod config parses colopairs but simply stringifies whatever it matched

[00:15] <synopsebot> RT#132632 [resolved]: https://rt.perl.org/Ticket/Display.html?id=132632 [POD][NYI]. List and hash configuration value formats are not yet implemented (NYI)

[00:16] <AlexDaniel> [Coke]: perhaps it does not have all the features, but that's some extremely pleasant dogfooding :)

[00:21] *** lizmat left
[00:24] <AlexDaniel> oh gosh… «»􏿽xE2􏿽x8C􏿽xA9

[00:24] <AlexDaniel> am I the only one thinking that this feature shouldn't exist really?

[00:25] <AlexDaniel> with all the nonsense it does, like shell-style quoting

[00:26] <AlexDaniel> the only times I used it was in code golf

[00:26] <AlexDaniel> because… well…

[00:26] <AlexDaniel> m: my $x = 42; say «60$x»

[00:26] <camelia> rakudo-moar 90246e652: OUTPUT: «(60 42)␤»

[00:27] <tbrowder> Zoffix: how can i get modules.perl6.org to update my module statuses. all of them had good tests when they were uploaded to CPAN. is there any way to update the cache without bumping the version on CPAN? do we need to add a tag in the .travis file for each version tag?

[00:28] <tbrowder> obviously i’m confused...

[00:31] <AlexDaniel> tbrowder: “closed by merge of rakudo PR #1339”… and “, tests in roast PR #371”

[00:31] <AlexDaniel> tbrowder: because, technically, tickets are closed by commits with tests :)

[00:32] <AlexDaniel> that's for the next time

[00:36] *** Zoffix joined
[00:36] <Zoffix> tbrowder: you can push a commit like this https://github.com/perl6/modules.perl6.org/commit/61bb5c6570858b8d86189e46e2092ea41cc8e093

[00:37] <Zoffix> tbrowder: but it's not needed. As I've said, travis for CPAN dist source does not appear to be implemented

[00:39] *** aborazmeh joined
[00:39] *** aborazmeh left
[00:39] *** aborazmeh joined
[00:39] <Zoffix> And looks like it pointlessly tries to fetch it anyway: https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/p20TravisCI.pm#L23-L24

[00:40] *** traxex_ is now known as traxex

[00:41] <Zoffix> A somewhat rough fix would be to open the original META file packed inside the dist (those are not modified by PAUSE) and read the github source URL from it (well, try to see if it's there) somewhere here: https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder/Dist/Source/CPAN.pm#L59

[00:41] *** pmurias left
[00:41] <Zoffix> And from what figure out travis credentials and pass them (via $dist->{_builder} hashref) to here https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/p20TravisCI.pm#L36

[00:42] <Zoffix> And as a bonus that'll also let us add a "repository" link people wanted.

[00:43] <Zoffix> And it'd prolly be the same for AppVeyor: https://github.com/perl6/modules.perl6.org/blob/master/lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/p10AppVeyor.pm#L39

[00:44] <Zoffix> + with repo URL we can fetch stars and open Issues

[00:44] * Zoffix &

[00:44] *** Zoffix left
[00:44] <AlexDaniel> “From my point of view, Perl6 core developers should slow down their pace of improving the core language, and focus more on practical modules”

[00:45] <AlexDaniel> lol, we have too much effort put into improving the language? :D

[00:46] *** shinobi-cl joined
[00:47] *** lizmat joined
[00:48] <shinobi-cl> r: subset Pos of Int where 1 .. *; class C { has @.arr; method new(@a) { return self.bless(arr => @a) }; method AT-POS(::?CLASS:D: Pos $row) {return @.arr[$row - 1];} }; my $c = C.new([1,2,3]); say $c[0];

[00:48] <yoleaux> 17 Jan 2018 04:45Z <lookatme> shinobi-cl: the type constraints should be `where * >= 1`

[00:48] <camelia> rakudo-moar 90246e652: OUTPUT: «Constraint type check failed in binding to parameter '$row'; expected Pos but got Int (0)␤  in method AT-POS at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[00:48] <camelia> ..rakudo-jvm a92950fb4: OUTPUT: «Constraint type check failed for parameter '$row'␤  in method AT-POS at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[00:49] *** lookatme joined
[00:50] <timotimo> AlexDaniel: how dare we improve runtime performance

[00:57] *** leont left
[01:03] <shinobi-cl> r: subset Pos of Int where * >= 1 ; class C { has @.arr; method new(@a) { return self.bless(arr => @a) }; multi method AT-POS(::?CLASS:D: Pos $row) {return @.arr[$row - 1];} }; my $c = C.new([1,2,3]); say $c[0]; say $c[1];

[01:03] <camelia> rakudo-moar 90246e652, rakudo-jvm a92950fb4: OUTPUT: «C.new(arr => [1, 2, 3])␤1␤»

[01:05] <shinobi-cl> so, i want my class to have indexes starting from 1. I guess i will create a special method to handle the element 0, to generate an exception, for example. Or maybe just leave it so it return the whole array? I'm not sure what should be the saner thing here...

[01:07] <lookatme> add another candidate of AT-POS ? such as `multi method AT-POS($other) { fail "...." }`

[01:11] <timotimo> add a proto to your class so no other AT-POS candidates get inherited from the parent class

[01:14] *** shinobicl joined
[01:15] <lookatme> r: subset Pos of Int where * >= 1 ; class C { has @.arr; method new(@a) { return self.bless(arr => @a) }; method AT-POS(::?CLASS:D: Pos $row) {return @.arr[$row - 1];} }; my $c = C.new([1,2,3]); say $c[0]; say $c[1];

[01:15] <camelia> rakudo-moar 90246e652: OUTPUT: «Constraint type check failed in binding to parameter '$row'; expected Pos but got Int (0)␤  in method AT-POS at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[01:15] <camelia> ..rakudo-jvm a92950fb4: OUTPUT: «Constraint type check failed for parameter '$row'␤  in method AT-POS at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[01:17] *** Ven`` left
[01:17] *** quotable6 left
[01:17] *** quotable6 joined
[01:17] *** ChanServ sets mode: +v quotable6

[01:18] *** shinobi-cl left
[01:29] *** markong left
[01:29] <TimToady> m: say IntStr.new(3, "3").all ~~ Int

[01:29] <camelia> rakudo-moar 90246e652: OUTPUT: «True␤»

[01:30] <mspo> m: IntStr.WHAT

[01:30] <camelia> rakudo-moar 90246e652: ( no output )

[01:33] <tbrowder> Zoffix: thnx, but i guess i have to bump the CPAN version to add the CPAN tag, yes?

[01:34] *** troys is now known as troys_

[01:34] <AlexDaniel> m: say +IntStr.new(3, ‘três’)

[01:34] <camelia> rakudo-moar 90246e652: OUTPUT: «3␤»

[01:34] <AlexDaniel> m: say ~IntStr.new(3, ‘três’)

[01:34] <camelia> rakudo-moar 90246e652: OUTPUT: «três␤»

[01:39] *** Zoffix joined
[01:39] <Zoffix> e: use lib <data/all-modules/github/zoffixznet/perl6-WhereList/lib>;  use WhereList; sub s(*@a where all-items Int){ say 'here' }; s(1,2,3)

[01:39] <evalable6> Zoffix, rakudo-moar 90246e652: OUTPUT: «here␤»

[01:39] <Zoffix> :)

[01:39] <Zoffix> tbrowder: yes. Dists are immutable, so if you want to mutate the META file you need to upload a new dist

[01:41] <Zoffix> lookatme: FWIW `where 1 .. *` is not wrong, although likely slower than `* >= 1`. The `where` clauses thunks and smartmatches, so `$foo where 1..*` is like `$foo ~~ 1..*` and smartmatch with numeric ranges checks the value is in range

[01:42] <Zoffix> m: say 42 ~~ 1..*; say -1 ~~ 1..*

[01:42] <camelia> rakudo-moar 90246e652: OUTPUT: «True␤False␤»

[01:42] <Zoffix> m: { for ^100_000 { my $ = 42 ~~ 1..* }; say now - ENTER now }; { for ^100_000 { my $ = 42 >= 1 }; say now - ENTER now }

[01:42] <camelia> rakudo-moar 90246e652: OUTPUT: «0.25361793␤0.0078689␤»

[01:43] <Zoffix> mhm, like a billion times slower :)

[01:43] <lookatme> Zoffix, oh, didn't know before :) 

[01:45] <AlexDaniel> m: my $x = 42; { for ^100_000 { my $ = $x ~~ 1..* }; say now - ENTER now }; { for ^100_000 { my $ = $x >= 1 }; say now - ENTER now }

[01:45] <camelia> rakudo-moar 90246e652: OUTPUT: «0.22982925␤0.0111522␤»

[01:47] <Zoffix> heh, right :) my version constant folded it

[01:47] *** troys_ is now known as troys

[01:50] <Zoffix> .oO( zef plugin that generates stats during module testing on which routines are called the most so we'd know what has the most benefit optimizing )

[01:51] <Zoffix> And then shove it into toaster runs.

[01:51] *** Zoffix left
[01:53] *** khw left
[01:56] *** itaylor57 joined
[01:57] <shinobicl> lookatme: that's what i have, however, i want my class to be able to handle other things inside the [ ], like pairs or strings, so i have to use multimethods.

[02:01] <lookatme> shinobicl, Okay, you can try proto, IDK whether it is help or not

[02:06] *** khw joined
[02:08] <shinobicl> r: class C { method AT-POS(::?CLASS:D: Str $x) { say "In AT-POS : $x"; } }; my $c = C.new(); say $c[1]; 

[02:08] <camelia> rakudo-moar 90246e652: OUTPUT: «Type check failed in binding to parameter '$x'; expected Str but got Int (1)␤  in method AT-POS at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[02:08] <camelia> ..rakudo-jvm a92950fb4: OUTPUT: «Type check failed in binding to parameter '$x'; expected Str but got Int (1)␤  in method AT-POS at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[02:08] <shinobicl> r: class C { method AT-POS(::?CLASS:D: Str $x) { say "In AT-POS : $x"; } }; my $c = C.new(); say $c["1"]; 

[02:08] <camelia> rakudo-jvm a92950fb4: OUTPUT: «Type check failed in binding to parameter '$x'; expected Str but got Int (1)␤  in method AT-POS at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[02:08] <camelia> ..rakudo-moar 90246e652: OUTPUT: «Type check failed in binding to parameter '$x'; expected Str but got Int (1)␤  in method AT-POS at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[02:08] <shinobicl> r: class C { method AT-POS(::?CLASS:D: Str $x) { say "In AT-POS : $x"; } }; my $c = C.new(); say $c["A"]; 

[02:08] <camelia> rakudo-jvm a92950fb4: OUTPUT: «Earlier failure:␤ (HANDLED) Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5A' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤Final error:␤ Type check failed in binding to parameter '$x';…»

[02:08] <camelia> ..rakudo-moar 90246e652: OUTPUT: «Earlier failure:␤ (HANDLED) Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5A' (indicated by ⏏)␤  in block <unit> at <tmp> line 1␤␤Final error:␤ Type check failed in binding to parameter '$x'…»

[02:09] <shinobicl> hmmm. it wants a Int and only an Int.

[02:10] <shinobicl> r: class C { method AT-POS(::?CLASS:D: Int $x) { say "In AT-POS : $x"; } }; my $c = C.new(); say $c[1]; 

[02:10] <camelia> rakudo-moar 90246e652, rakudo-jvm a92950fb4: OUTPUT: «In AT-POS : 1␤True␤»

[02:28] *** jeromelanteri joined
[02:37] *** stmuk_ joined
[02:37] *** syntaxman left
[02:38] *** stmuk left
[02:44] *** ilbot3 left
[02:57] *** ilbot3 joined
[02:57] *** ChanServ sets mode: +v ilbot3

[02:58] *** Zoffix joined
[02:58] <Zoffix> shinobicl: use "m:" trigger instead of "r:" You're duplicating all your evals by having it run on both backends

[02:59] *** cdg joined
[02:59] <Zoffix> shinobicl: you need to create your own postcircumfixes if you want to pass abitrary stuff

[02:59] <Zoffix> e: &postcircumfix:<[ ]>.candidates».signature».say

[02:59] <evalable6> Zoffix, rakudo-moar 90246e652: OUTPUT: «(\SELF, Any:U $type, |c is raw)␤(\SELF, int $pos)␤(\SELF, int $pos, Mu \assignee)␤(\SELF, …»

[02:59] <evalable6> Zoffix, Full output: https://gist.github.com/4c61ae692a2bd782da808b9e939a10cc

[02:59] <Zoffix> ^ 'cause those are the core ones and they coerce to ints

[02:59] <Zoffix> s: &postcircumfix:<[ ]>, \([], "x")

[02:59] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/90246e652/src/core/array_slice.pm#L180

[03:00] <Zoffix> m: class C { method AT-POS(::?CLASS:D: Str:D $x) { say "In AT-POS : $x"; } }; multi postcircumfix:<[ ]> (C \c, \v) { c.AT-POS: v }; my $c = C.new; say $c["A"];

[03:00] <camelia> rakudo-moar 90246e652: OUTPUT: «In AT-POS : A␤True␤»

[03:03] *** cdg left
[03:06] *** troys is now known as troys_

[03:08] <shinobicl> multi postcircumfix:<[ ]> (C \c, \v) ???? what kind of syntax is that? how should i search for it?

[03:11] <lookatme> operator definition

[03:11] <Zoffix> shinobicl: `multi` is a multi routine https://docs.perl6.org/syntax/multi  `postcircumfix` is a category of ops and `:<[ ]>` is a longname specifying that you want to use `[` and `]` symbols for it. This defines a custom postcircumfix operator https://docs.perl6.org/language/functions#Defining_Operators  then `(C \c, \v)` is the signature. It takes two args. `C` is the type constraint with your class C and

[03:11] <Zoffix> `\c` and `\v` are the parameters. `\c` is the same as `$c is raw` https://docs.perl6.org/type/Signature#index-entry-trait__is_raw

[03:11] <lookatme> great Zoffix ++

[03:11] <Zoffix> s/longname/colonpair part of longname/;

[03:12] <Zoffix> like :foo<bar> except key is an empty string and value is a list of two strings

[03:12] *** mempko left
[03:14] *** syntaxman joined
[03:14] *** syntaxman left
[03:14] *** syntaxman joined
[03:15] *** aborazmeh left
[03:32] *** Zoffix left
[03:36] *** edenc left
[03:47] *** wmoxam joined
[03:51] *** khw left
[03:57] *** bloatable6 left
[03:57] *** bloatable6 joined
[03:58] *** unicodable6 left
[03:58] *** unicodable6 joined
[03:58] *** ChanServ sets mode: +v unicodable6

[04:04] *** khw joined
[04:11] *** Kaiepi left
[04:12] *** Kaiepi joined
[04:14] <Xliff> .tell lizmat Would that CompUnitRepo manager need to be written in nqp?

[04:14] <yoleaux> Xliff: I'll pass your message to lizmat.

[04:28] *** shinobicl left
[04:31] *** shinobicl joined
[04:32] *** wamba joined
[04:35] *** Cabanossi left
[04:36] *** Cabanossi joined
[04:37] *** Kaiepi left
[04:37] *** Kaiepi joined
[04:38] <shinobicl> multi postcircumfix:<[ ]> (C \c, \v) ???? what kind of syntax is that? how should i search for it?

[04:38] <shinobicl> sorry, i posted that line again by mistake :(

[04:43] <AlexDaniel> hehe

[04:52] *** khw left
[04:58] <shinobicl> Hi.. so i have this bidimensional array i need for a toy project of mine. It is immutable (hence the name)... So far the interface looks (more or less) like this... I want to upload it soon, but any ideas to improve the usability are welcome...                 https://pastebin.com/UXp0U18i

[04:59] *** khw joined
[05:00] <shinobicl> s/usability/usefulness/;

[05:03] *** notbenh joined
[05:03] *** troys_ is now known as troys

[05:17] *** eliasr left
[05:20] <Xliff> shinobicl: Why is @shape[1;2] 7 and not 5?

[05:23] <shinobicl> sorry, it is actually 5.. it was a typo in the paste

[05:24] *** khw left
[05:25] <Xliff> kk

[05:25] <Xliff> So the only time you can assign to the table is when it is initialized? What initializers do you have for it?

[05:26] <Xliff> It currently looks like it takes 2 arrays. One for the header and one for the data.

[05:30] <Xliff> Do you have other initializers?

[05:30] <shinobicl> two. If you use an array as first param, this is the header. If you use a number, headers will be created in alpha order, like A, B, C, if you use 3 etc...An old version has also methods to get subsets by using regexes on columns. And to create indexes on any column. But it was a bit too much, so i took all this out and started over.

[05:30] <shinobicl> https://pastebin.com/CUVSdBWx    <--- Current version

[05:34] <Xliff> m: say (<A B C>,<D E F>,<G H I>),invert.say

[05:34] <camelia> rakudo-moar 90246e652: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    invert used at line 1␤␤»

[05:34] <Xliff> m: say (<A B C>,<D E F>,<G H I>).invert.say

[05:34] <camelia> rakudo-moar 90246e652: OUTPUT: «Type check failed in invert; expected Pair but got List ($("A", "B", "C"))␤  in block <unit> at <tmp> line 1␤␤»

[05:35] *** mempko joined
[05:36] <Xliff> m: ([Z] <X Y>).say

[05:36] <camelia> rakudo-moar 90246e652: OUTPUT: «((X Y))␤»

[05:38] <Xliff> shinobicl: I am trying to think about how you would do a Hash initializer.

[05:38] <Xliff> The first part is easy, headers = %h.keys

[05:38] <Xliff> It's the values part that seems to be the problem.

[05:38] <Xliff> I was hoping that Array.transpose existed, but it doesn't.

[05:39] <AlexDaniel> what behavior would you expect from .transpose?

[05:40] <shinobicl> https://pastebin.com/4YevcEmG  <--- Current test suite

[05:41] <Xliff> shinobicl: @shape[1;2] is still expecting 7

[05:42] <shinobicl> yes, please ignore that... i'm writing more test right now :) not everythig passes, is just to show how it is used now :)

[05:42] <Xliff> m: ([Z] (<X Y>, <a b>, <1 2>)).say

[05:42] <camelia> rakudo-moar 90246e652: OUTPUT: «((X a 1) (Y b 2))␤»

[05:42] <Xliff> AlexDaniel: ^^ That, but working.

[05:43] <Xliff> See the bottom of: https://docs.perl6.org/language/traps#___top

[05:43] <Xliff> shinobicl: Fair enough, but I find that best practice is to fix bugs as you find them, less they fall through the cracks. ;)

[05:44] <AlexDaniel> didn't take long for someone to point me to the trap that I've documented myself :D

[05:44] <Xliff> LOL!

[05:45] <Xliff> I guess I could write a transpose that special cases the one element bug.

[05:50] *** committable6 left
[05:50] *** squashable6 left
[05:50] *** statisfiable6 left
[05:50] *** committable6 joined
[05:50] *** ChanServ sets mode: +v committable6

[05:50] *** squashable6 joined
[05:50] *** ChanServ sets mode: +v squashable6

[05:50] *** statisfiable6 joined
[05:50] *** ChanServ sets mode: +v statisfiable6

[05:52] <Geth> ¦ doc: cfcb1f16bc | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[05:52] <Geth> ¦ doc: Fix wording

[05:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cfcb1f16bc

[05:52] <synopsebot> Link: https://doc.perl6.org/language/traps

[05:52] <AlexDaniel> releasable6: next

[05:52] <releasable6> AlexDaniel, Next release in 1 day and ≈13 hours. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Unknown changelog format

[06:04] *** integral joined
[06:05] *** wamba left
[06:06] *** bwisti left
[06:15] *** travis-ci joined
[06:15] <travis-ci> Doc build passed. Aleks-Daniel Jakimenko-Aleksejev 'Fix wording'

[06:15] <travis-ci> https://travis-ci.org/perl6/doc/builds/330677639 https://github.com/perl6/doc/compare/006eccc73d4b...cfcb1f16bcf4

[06:15] *** travis-ci left
[06:28] *** shinobicl left
[06:38] *** troys left
[07:00] *** Xliff_ joined
[07:02] *** abraxxa joined
[07:03] *** Xliff left
[07:07] *** abraxxa left
[07:11] *** darutoko joined
[07:20] *** espadrine left
[07:21] *** lowbro joined
[07:21] *** lowbro left
[07:21] *** lowbro joined
[07:21] *** abraxxa joined
[07:35] *** fluca1978 joined
[07:36] <Geth> ¦ doc/master: 11 commits pushed by (Luca Ferrari)++

[07:36] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/cfcb1f16bc...8d0df9cb5e

[07:39] <AlexDaniel> fluca1978: “inspact”

[07:40] <AlexDaniel> also, “regexp”? Do we actually call it that?

[07:40] <AlexDaniel> quotable6: \bregexp\b

[07:40] <quotable6> AlexDaniel, OK, working on it! This may take up to three minutes (4482999 messages to process)

[07:40] <quotable6> AlexDaniel, https://gist.github.com/922a8e6f5d82aecccd81e04d7b0b959d

[07:40] <AlexDaniel> quotable6: «regexp»

[07:40] <quotable6> AlexDaniel, OK, working on it! This may take up to three minutes (4482999 messages to process)

[07:41] <fluca1978> AlexDaniel: thanks, allow me to work on it 

[07:41] *** sena_kun joined
[07:41] <AlexDaniel> no! Improving things is forbidden! :)

[07:41] <AlexDaniel> sure

[07:41] <quotable6> AlexDaniel, https://gist.github.com/b6a2a591652f4e63b292b95acd7b0b4d

[07:42] <AlexDaniel> wow, that seems to be rather popular

[07:51] <Geth> ¦ doc: 16c033c2e4 | (Luca Ferrari)++ | doc/Language/regexes.pod6

[07:51] <Geth> ¦ doc: Change 'regexp' to 'regular expression'.

[07:51] <Geth> ¦ doc: 

[07:51] <Geth> ¦ doc: While the term 'regexp' is a short of 'regular expression'

[07:51] <Geth> ¦ doc: (see <https://irclog.perlgeek.de/perl6/2018-01-19#i_15709645) in this

[07:51] <synopsebot> Link: https://doc.perl6.org/language/regexes

[07:51] <Geth> ¦ doc: context it could be better to call a regular expression with the

[07:51] <Geth> ¦ doc: extended form.

[07:51] <Geth> ¦ doc: 

[07:51] <Geth> ¦ doc: See <https://irclog.perlgeek.de/perl6/2018-01-19#i_15709640>

[07:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/16c033c2e4

[07:51] <Geth> ¦ doc: d82dc3c4c7 | (Luca Ferrari)++ | doc/Language/regexes.pod6

[07:51] <Geth> ¦ doc: Fix typo ('inspact' -> 'inspect').

[07:51] <Geth> ¦ doc: 

[07:51] <Geth> ¦ doc: See <https://irclog.perlgeek.de/perl6/2018-01-19#i_15709637>

[07:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d82dc3c4c7

[07:57] *** domidumont joined
[07:59] *** abraxxa left
[08:05] *** parv joined
[08:09] *** domidumont left
[08:10] *** domidumont joined
[08:14] <lizmat> .

[08:14] <yoleaux> 04:14Z <Xliff> lizmat: Would that CompUnitRepo manager need to be written in nqp?

[08:14] <lizmat> .tell Xliff no, not as far as I know

[08:14] <yoleaux> lizmat: I'll pass your message to Xliff.

[08:15] *** stmuk joined
[08:17] *** stmuk_ left
[08:37] *** kst` joined
[08:39] *** cgfbee left
[08:41] *** kst left
[08:41] <lizmat> WIP on P5 module to P6 porting guide: https://github.com/lizmat/P5-modules-to-P6-porting-guide

[08:42] <lizmat> they're basically things I've run into while porting things like List::Util and friends

[08:42] <lizmat> I will be on the road most of today and thus afk&

[08:42] <lizmat> will check up on things about 14 hours from now

[08:52] *** rindolf joined
[08:53] *** cgfbee joined
[09:07] *** lookatme left
[09:08] *** parv left
[09:10] *** leont joined
[09:12] *** cpage left
[09:26] *** ChoHag left
[09:27] *** wamba joined
[09:28] *** zakharyas joined
[09:33] *** geekosaur joined
[09:34] *** geekosaur left
[09:35] *** geekosaur joined
[09:38] *** leont left
[09:49] <El_Che> the reddit thread is impossible to monitor for new messages. A good workaround is getting new messages through RSS: https://www.reddit.com/r/perl/comments/7r1b33/an_open_letter_to_the_perl_community/.rss  <-- lizmat 

[09:53] <stmuk> or block reddit with stayfocusd or similar :)

[09:57] *** scimon joined
[09:58] <El_Che> stmuk: ha, good point

[09:58] <TEttinger> lizmat is on the road to the FaceSpaceReddDiggNewsBunker, a castle from ancient times with a room completely sealed off from social media

[09:59] <psch> oh geez a reddit thread

[10:03] <El_Che> TEttinger: she may be kidnapped first by angry reddit users

[10:04] <TEttinger> that's what the castle part is for

[10:04] <TEttinger> if it fended off visigoths it can fend off visinerds

[10:05] <El_Che> In the castle you have to fight the last boss: p5p

[10:05] <TEttinger> weapon of choice, butterfly knives

[10:06] <El_Che> https://img.etsystatic.com/il/bd8a45/880613116/il_570xN.880613116_eu8b.jpg <--- butterfly ninja star

[10:06] <TEttinger> etsy has some crazy stuff

[10:07] <El_Che> it's from Into the Badlands tv-series

[10:07] <TEttinger> ah

[10:08] *** wamba left
[10:10] <TEttinger> I wonder how they made it. laser cutting I don't know how it works on steel. I think 3D printing in metal uses selective laser sintering, which makes stuff like https://www.shapeways.com/product/F9HX968L6/botanical-die12-maple?optionId=4045064&li=marketplace

[10:10] <TEttinger> I have one of those dice, it's everyone's favorite

[10:11] <TEttinger> then there's the "you aren't nerd enough to play this game" dice, with numbers in Tolkien's Tengwar script https://www.shapeways.com/product/QDVP8F2Q5/tengwar-elvish-d20?optionId=63276529&li=related-items

[10:19] <moritz> if it's not in Unicode, I won't play with it :-)

[10:26] *** wamba joined
[10:28] <scimon> Why oh why oh why did I reopen this reddit thread>?

[10:29] <psch> i kinda wonder about this whole "it's a new language" argument, and how many people using it have tried modern perl5 on a perl4 interpreter

[10:29] <psch> or heck, 5.0 perl5

[10:30] <psch> mind, i really have no idea how large the changes between perl4 and perl5 were, so it might well be that the argument holds perfectly well

[10:30] <geekosaur> perl 5 introduced references, which ultimately led to a lot of changes

[10:30] <geekosaur> perl 3 -> perl 4 was more incremental

[10:31] <geekosaur> but as a *language* perl 5 was a lot like perl 4, and in fact there were very few things you could run into if you ran a perl 4 script on perl 5

[10:31] <stmuk> I remember having to escape \@ in "" that was about it

[10:32] <psch> ah, thanks geekosaur++ and stmuk++

[10:32] <geekosaur> yes, tjhat was the main one I wa thinking of --- but there were  few rare others

[10:32] <psch> so the argument as intended would mostly hold -- i.e. "write some bog-standard p5, run it with perl4, it mostly works" is trueish

[10:32] <geekosaur> I would say not

[10:33] <scimon> I luckily came in after the 4 -> 5 transition. 

[10:33] <geekosaur> perl 4 stuff ran in perl 5 mostly unmodified. perl 5 added enough stuff that was badly needed, that perl 5 code was usually not going to run in perl 4

[10:33] <geekosaur> I mean perl 4 didn;t even have "use"

[10:33] <scimon> Having spent the 90's failing to take adventage of the internet craze by working in a bookshop.

[10:33] <psch> ah, okay, i misinterpreted that then

[10:33] <geekosaur> `do "getcwd.pl"`

[10:33] <scimon> :D

[10:34] <stmuk> people did mostly write perl 4 in perl 5 for several years .. maybe using CGI->new would be the only perl 5

[10:34] *** ChoHag joined
[10:34] <stmuk> I'm sure some did use perl 5 features from day one but probably a minority

[10:35] <scimon> What gets me is all the people saying "You need to change the name" as if anyone has any control over it. Beyond Mr Wall.

[10:37] <stmuk> I don't think it would make any difference whatever

[10:37] <scimon> And... I really don't understand the If I have to stop using Perl5 I'm not moving to Perl6... it's weird. I *guess* it's an uncanny vallet thing.

[10:37] <geekosaur> it's not

[10:37] <geekosaur> it's an activation energy thing. it takes a lot of energy to move everything to something incompatible

[10:37] <scimon> That's kind of my point.

[10:37] <psch> i'd agree that changing the name wouldn't really *do* much

[10:38] <geekosaur> but once you've decided to put that energy in, you have lots of othher options on the table as well. perl 5 is not a captive market for perl 6

[10:38] <psch> i mean, sure, maybe p5 can get hype from releasing a v7.0, but is that really enough to crush python and node, which everyone says are the big winners in the market

[10:38] <scimon> Right... I really don't see the whole "Move Perl5 codebases to Perl6" working. Because most of the Perl5 codebases I know are massive. Scary scary massive.

[10:39] <geekosaur> yes. I like things like Inline::Perl5 because it enables interoperability. perhaps we should focus on *that*

[10:40] <scimon> I guess for me it comes down two out of the three (Python, Node and Perl6) Perl6 is the one that fits with the way I think more.

[10:40] <stmuk> I find it a bit odd that the perl 5 community (used to perl 5 like DSLs and syntax extensions) are so scared of perl 6 especially when error messages are so perl 5 friendly

[10:40] <geekosaur> because perl 5 and perl 6 being the same kind of *think* means that interop works better between them in subtle ways

[10:41] <scimon> Python is too staid and reminds me of Java (shudder). Node has some lovely bits but a lot of cruft and the event model is annoying a lot of the time. 

[10:42] <scimon> Anyhoo. Time to go poke about in a big pile of mason. At least it's not looking for a bug this time.

[10:45] <scimon> I looked at Inline::Perl5 one time but the first step about requiring a perl5 compiled to worked with it seemed like way too much work. 

[10:45] <psch> heh "the difference between perl5 the runtime and Perl 5 the language doesn't exist" says one reddit commentor, and yet "Only perl can parse Perl" used to be a popular saying..?

[10:47] <stmuk> scimon: I have thought of bundling a "jumbo" Star-type distro with Inline::Perl5 and perl 5

[10:47] <stmuk> or patching rakudobrew to support it

[10:49] <scimon> Ok looking at the build process it doesn't acutally look at bad as I first thought.

[10:50] <stmuk> scimon: BTW I notice on twitter you were playing elite .. is that the modern PC one?

[10:51] <scimon> It is the only reason I have windows installed on my PC at home.

[10:51] <scimon> (And virtual box, turns out a gaming rig run dev VM's really well)

[10:51] <scimon> (That's a yes ;) )

[10:56] <psch> okay, with "perl6 core devs should stop improving the core language and build useful modules instead" i'm closing the reddit thread

[10:57] *** abraxxa joined
[10:58] *** ufobat joined
[10:58] <jast> yes, please don't improve the language, I hate improvements. especially optimizations, more docs and bugfixes...

[10:59] *** TEttinger left
[11:02] <ilmari> psch: how's that different from the original letter's "perl5 core devs should stop adding features and port the language to nqp"?

[11:02] *** pmurias joined
[11:03] *** abraxxa left
[11:04] <El_Che> omg

[11:04] <El_Che> perl 6 has a hard time finding its way into production and adding a 2nd unrelated runtime (and a hell to debug) is going to help that?

[11:05] <El_Che> I love perl 6, but no way something like that would reach testing at $work (I would block it myself)

[11:05] <pmurias> I guess Perl 5 users feeling someone wants to force them to move to Perl 6 before it's ready is breeding a lot of the resentment

[11:06] <stmuk> I think there is a lot of pent up resentment about the decline of perl 5 and 6 is being scapegoated

[11:06] <El_Che> a lot of it's not scapegoating

[11:06] <El_Che> the version things is killing both projects

[11:06] <psch> ilmari: i'm not sure i'm qualified to speak on that -- i have no idea how development of perl5 works or has worked for recent past

[11:07] <psch> ilmari: but the parts that i'm interested in -- which is mostly r-j -- is kinda neglected and pretty broken

[11:07] <psch> ilmari: i suppose i could write Inline::Java instead...

[11:07] <stmuk> I don't think software project are killed by names or numbers .. they aren't that powerful

[11:07] <ilmari> psch: the people who do it mostly don't care much about perl 6

[11:07] <jast> I have to agree with stmuk here

[11:08] <El_Che> people are real that don't touch perl6 because it's old perl and don't touch perl 5 because perl 6 has obsoleted it

[11:08] <El_Che> they are called colleagues

[11:08] <ilmari> but we do care about keeping perl5 alive and moving forward

[11:08] <El_Che> and pretty much everywhere I go

[11:08] <jast> heck, firefox survived two more-or-less forced renames

[11:08] <psch> ilmari: ah, so we agree that "work on modules instead of core" is a bad suggestion? :)

[11:09] <ilmari> psch: yes. and I was pointing out that at least one of the suggestions in the initial letter was equally bad

[11:09] * jnthn points out that many people who work on core stuff *also* have a bunch of modules

[11:09] <ilmari> disclmaimer: I am actively involved in perl5 core development

[11:12] <Altreus> it's so confusing that #perl and #perl6 have so many common conversers

[11:12] <jast> my interpretation of the letter (we *are* talking about the one on perl.com, right?) isn't that it calls for people to stop working on perl5 core

[11:13] <ilmari> «Place a moratorium on new features, with development confined to maintenance on the current runtime.»

[11:13] <psch> ilmari: ah, i see.  yes, i agree with that

[11:13] <ilmari> «The Butterfly Perl 5 Project» section

[11:13] <jast> there's the "idea" in it that porting perl5 to rakudo might be worthwhile, but the rest of the focus is on porting modules to perl6, mildly implying that maybe porting perl5 is a bit much

[11:14] <Altreus> I just read this letter and I don't know whether I have an opinion so I'm going to borrow these ones

[11:14] <jast> to me, the Butterfly Perl 5 section mainly served as contrast to the *other* plan (CPAN Butterfly)

[11:15] <jast> the section concludes as, "Although I wholeheartedly would support a Butterfly Perl 5 Project, I’ve also come to the conclusion that it is no longer an itch I would want to scratch personally at this moment."

[11:15] <jast> which to me is a reasonably clear indication that the actual plan is the next one :)

[11:16] <pmurias> a "moratorium on new features seems 

[11:16] <pmurias> a "moratorium on new features" seems a lot like declaring it "dead and burried"

[11:16] <stmuk> I think its a pity "v5" slang died

[11:16] <jast> yeah, but that's what I just said, it's not what the letter actually calls for

[11:16] <tyil> I think its a pity that the reddit threads are so hostile 

[11:16] <jast> it's just an option it's putting on the table

[11:16] <jast> without actually pushing that option, instead pushing the other one

[11:17] *** abraxxa joined
[11:17] <stmuk> there haven't really been that many successful new perl 5 features TBH maybe //

[11:17] <jast> notice that all the remaining sections focus on porting modules instead of changing anything about how perl 5 core is developed

[11:17] <tyil> any suggestion that isnt "kill off perl 6 and long reign perl 5 only" gets downvoted and answered with unrelated remarks about hew perl 6 is not perl 5 and therefore the worst thing ever

[11:18] <stmuk> jast: I doubt many "renamers" got past the first few paragraphs

[11:18] <jast> I'm always wary of using new Perl 5 features because half of them get removed again later (at least subjectively)

[11:18] <jast> plus the Perl job I worked before required compatibility with Perl 5.8...

[11:18] <psch> tyil: to be fair, they're saying "call it something else" and not "kill it completely"

[11:18] <tyil> psch: depends on which comment you're reading

[11:19] <jast> personally I don't care what it's called and I don't think a different name would change anything

[11:19] <tyil> but there is a huge hostility coming from most commenters

[11:19] <psch> true

[11:19] <tyil> jast: I agree with both parts

[11:19] <stmuk> I think the "takeaway" is "address the wider programming community rather than the perl 5 one"

[11:19] <tyil> I dont think I've ever taken or dropped a language because of the name it has

[11:20] <tyil> so long as it works for me, I'll use it

[11:20] <jast> right, chances are everyone in the perl 5 community has already made up their mind

[11:20] <jast> probably a bit of a waste of time to try and change it

[11:22] <jast> at best you can change minds one at a time in a situation like this, and that's not what blog posts and comment threads are usually about

[11:25] <stmuk> KBO

[11:30] <scimon> Indeed.

[11:30] *** astj left
[11:31] *** astj joined
[11:35] *** astj left
[11:44] *** astj joined
[11:45] *** markong joined
[11:48] *** astj left
[11:48] *** pmurias left
[11:49] *** zakharyas left
[11:51] <El_Che> there is a lot of hostility in the comments coming from perl 5 people, but what really make me sad is perl 6 people acting or believing that there isn't a problem at all. Perl 5 and Perl 6 both suffer from the current situation.

[11:54] <El_Che> From the outside, the perception game, both risk to be seen as obsolete. The name is not a problem for Perl 5, but for Perl 6, seen as old when it was a new language. And Perl 5 seen as obsolete because there is a major new version already.

[11:54] *** pmurias joined
[11:55] <El_Che> Changing the name won't make millions flock to perl6 nor add tons of improvements to perl 5. But ot would help not loosing the game before the starting line

[11:55] * El_Che off: lunch

[11:57] *** konsolebox_ left
[11:58] *** konsolebox joined
[12:02] *** fluca1978 left
[12:04] *** vichib left
[12:09] <scimon> So.... this conversation has been going on for a while right? With two sides entrenched in their beliefs? Oh god.... it's what the UK is going to be like for the new 20 years isn't it? 

[12:09] <scimon> I can't escape. On the one hand Brexit and on the other Perl naming.... I'm going to go play some cards.

[12:13] <AlexDaniel> I think that there is an increasing number of people agreeing that an alias would be beneficial

[12:13] <AlexDaniel> (as opposed to just leaving it as “Perl 6”)

[12:14] <AlexDaniel> I myself was against it for a long time for example

[12:16] <AlexDaniel> so IMO it's going on for a while not because we can't agree on anything, but because it takes time to accept this kind of revolutionary ideas :)

[12:16] <AlexDaniel> and it's totally understandable that people are against it. Without them we would be changing the name every day

[12:19] <AlexDaniel> for me personally the turning point was when I attempted to talk about Perl 6 with non-perl IT people

[12:21] <AlexDaniel> like, you have to go through the trouble of explaining why it's called Perl 6 if you want them to understand that you're talking about some brand new language and not perl5

[12:21] *** pmurias left
[12:23] <AlexDaniel> and for me that's totally a technical issue, not associated with any beliefs really. The name just doesn't work as well as it should, so fix it maybe

[12:24] *** traxex_ joined
[12:25] <El_Che> AlexDaniel: that's also my experience.

[12:26] <psch> my experience has mostly been along the lines of "all perls are bad anyway" vOv

[12:26] *** eliasr joined
[12:27] *** traxex left
[12:27] *** vike1 left
[12:27] *** kaare__ joined
[12:27] *** esh left
[12:27] *** mingdao left
[12:28] <psch> i like changing the Perl 6 brand because it does actually solve the biggest grievance perl5-exclusive people have

[12:28] *** pmurias joined
[12:28] *** vike joined
[12:28] <psch> like it as an idea, that

[12:28] <psch> is

[12:28] *** syntaxman left
[12:28] <psch> well, *perceived* as biggest from here :)

[12:28] *** mingdao joined
[12:28] *** esh joined
[12:28] *** Ven`` joined
[12:29] *** bloatable6 left
[12:29] *** reportable6 left
[12:29] *** bisectable6 left
[12:29] *** syntaxman joined
[12:29] *** bisectable6 joined
[12:29] *** reportable6 joined
[12:29] *** bloatable6 joined
[12:29] *** benchable6 left
[12:29] *** coverable6 left
[12:29] *** releasable6 left
[12:29] *** joy left
[12:29] *** syntaxman is now known as Guest94921

[12:30] <AlexDaniel> yea that's also a thing. Like, depending on your experience and the kind of people you talk to, you may have a different opinion on that topic

[12:30] *** vichib joined
[12:30] *** nativecallable6 left
[12:30] <AlexDaniel> and it seems that “perl 6” works just fine for some people

[12:30] <AlexDaniel> good for them, I guess…

[12:32] <psch> although i can already see the "oh now you change the name after blocking our next major version for 18 years and making us lose heaps of market share" argument... :)

[12:32] <psch> but that's obviously very likely to be in bad faith anyway, sooo

[12:33] <AlexDaniel> forgive and forget :)

[12:34] <AlexDaniel> .oO( we're not complaining about your language giving our brand new language a bad rep! :D )

[12:34] *** joy joined
[12:36] *** greppable6 left
[12:36] *** reportable6 left
[12:36] *** releasable6 joined
[12:36] *** greppable6 joined
[12:36] *** benchable6 joined
[12:36] *** ChanServ sets mode: +v benchable6

[12:36] <AlexDaniel> releasable6: next

[12:36] <releasable6> AlexDaniel, Next release in 1 day and ≈6 hours. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Unknown changelog format

[12:36] *** coverable6 joined
[12:36] * pmurias really dislikes the Perl 5 community vs Perl 6 community that the renaming talk seems to implicitly assume

[12:36] *** reportable6 joined
[12:38] <Altreus> especially since, as noted, the overlap is sufficient to keep confusing me

[12:40] *** wamba left
[12:41] *** pilne left
[12:42] *** traxex_ is now known as traxex

[12:44] <pmurias> Perl 6 being something that appeals to a community of experienced Perl programmers is at least for me a big selling point

[12:46] <jast> okay, here's a new name idea, leeching off of the success of IPv6: PLv6

[12:48] <El_Che> succes of IPv6?

[12:49] *** grumpster joined
[12:49] <grumpster> pmurias: how could perl6 *possibly* appeal to an *experienced* perl5 programmer?

[12:49] <grumpster> literally every small detail is just sufficiently different to make any instinct go sideways

[12:50] <grumpster>  /\n/ matches "\r"

[12:50] <jast> El_Che: hey, nice, you found my joke :}

[12:50] <grumpster> there is significant whitespace

[12:50] <El_Che> jast: lol

[12:50] <grumpster> sigils differ

[12:50] <grumpster> method invocations differ

[12:51] <grumpster> even scoping seems not-exactly-the-same

[12:51] <grumpster> so what's the appeal?

[12:51] <grumpster> over say golang

[12:51] <traxex> what if someone were to point out that there are experienced perl5 programmers on this channel who find perl6 appealing

[12:51] <jast> I am an experienced perl5 programmer, and perl6 appeals to me

[12:51] <traxex> wow

[12:52] <jast> because (a) perl5 has enough slightly annoying quirks and (b) perl6 has more than enough awesome new things to work with

[12:52] <stmuk> Well I'm an experienced perl5 programmer who prefers it ... but I have to admit most I meet are either indifferent or hostile

[12:52] <stmuk> I think the "renamers" just want the name changed because they don't like the idea of perl 6 being a sort of perl 

[12:52] <jast> I'm a sucker for expressiveness, and if there's anything perl6 definitely is, it's more expressive

[12:52] <Juerd> Next year I will have 20 years experience with Perl 5. In all those years, many things appealed to me even though they were not called Perl.

[12:53] <jast> I think it's very clearly a perl, but I'm also completely indifferent to renaming efforts

[12:53] <Juerd> In fact, this year already.

[12:53] <grumpster> when core Perl5 toolchain people come in and say: https://irclog.perlgeek.de/perl6/2016-01-05#i_11830221

[12:53] <grumpster> you have a clear problem

[12:53] <jast> for me it's about 15 yearas of experience with Perl 5

[12:54] <grumpster> it boggles my mind in the utmost degree how this can be brushed aside as "hostile"

[12:54] <Juerd> stmuk: I'm a strong proponent of renaming Perl 6, because I love both and would like them to have a chance at succeeding.

[12:54] * Ven`` learned Perl 5 after learning Perl 6...

[12:54] <jast> that comment you linked to doesn't read hostile at all, just frustrated

[12:55] <Ven``> Reddit isn't very good for such discussion :\. There are 50 new comments on that thread, but I have no idea how to see them...

[12:55] <jast> which I guess is fair :) there's definitely a lot of room for improvement in a project as young (all things considered) as perl6

[12:55] <stmuk> I don't see the correct answer to the lack of "p6doc" which is to install it in that log either

[12:55] <stmuk> :)

[12:56] <jast> Ven``: you know, to get a basic minimum of functionality all you have to do is buy reddit gold....... (or use a well-known browser extension)

[12:56] <Ven``> jast: I don't have a reddit account

[12:56] <Ven``> and I don't plan on getting one..

[12:56] <jast> who knows, the extension might work anyway

[12:56] <El_Che> !last rss

[12:56] <El_Che> oops

[12:56] <Ven``> RHS probably works anyway, yes

[12:56] <El_Che> https://www.reddit.com/r/perl/comments/7r1b33/an_open_letter_to_the_perl_community/.rss

[12:57] <Ven``> ...why is everything htmlescaped there..?

[12:57] <stmuk> perl5 doesn't even have non-experimental signatures or p5-mop in it yet .. the idea that changing the perl 6 name would help with their basic issues is crazy

[12:57] <stmuk> and what about the "given/when" issues

[12:58] <Ven``> whereso and whereis are no more at least ;-).

[12:58] <El_Che> it's not crazy at all

[12:58] <AlexDaniel> pmurias: that's a selling point for a portion of perl5 devs, but how many perl5 devs do we have out there nowadays? Like, shouldn't we focus on everyone else instead?

[12:58] <El_Che> renaming is to no create the false impression that you're working with an obsolete version

[12:58] <grumpster> the issues for most perl5 programmers are mostly "I can not disassociate myself with this other thing I do not like, and am not considering using. I can not stop my managers, dev-friends, random folks in a coffee shop that saw my laptop sticker to keep bugging me about Perl6, because from their perspective the two are related"

[12:59] <pmurias> grumpster: the knowledge of details doesn't translate over, but (most of the) good stuff has Perl 6 equivalents

[12:59] <grumpster> give perl5 that - and all hostility will go away, as *most* ( not all, most ) want to simply forget perl6 exists

[12:59] <stmuk> El_Che: its too late .. shutting the stable door after the horse bolted

[12:59] <grumpster> if it works out as a language - great, and we wish it luck

[13:00] <grumpster> El_Che: most perl5-ers I know do not care about "this is obsolete" - they *like* it that way

[13:00] <grumpster> the main point is that the conversation keeps resurfacing "when are you upgrading to P6?"

[13:01] <El_Che> grumpster: it's a about new blood

[13:01] <grumpster> this is what most "hostile people" are trying to escape in vain

[13:01] <grumpster> sure - it might be

[13:01] <jast> by the same logic, IPv6 should have been renamed long ago

[13:01] <El_Che> ipv6 is an update

[13:01] <grumpster> but it's not the "new blood" that writes not-so-nice reddit replies

[13:01] <El_Che> perl 6 wasn't

[13:01] <jast> ipv6 is not backward compatible in essentially the same way that perl6 is

[13:02] <grumpster> El_Che: the new blood is indifferent, except it sees the tension and goes "hmmm... I'll go do some rust instead"

[13:02] <stmuk> the "renaming" talk is bikeshedding of the worst sort

[13:02] <jast> throw ipv4 packets at ipv6 and they get thrown away :) except if you do weird hacks (which is part of what the letter is about)

[13:03] <grumpster> stmuk: bikeshedding will continue until clarity improves

[13:03] <jast> people who choose rust for something probably have reasons that would make perl6, or any similar languages, a questionable choice in the first place

[13:03] *** grumpster left
[13:05] *** pmurias left
[13:05] <jast> in any case, the blurb on perl6.org is pretty clear on what perl6 is and isn't

[13:06] <jast> if people don't even read the first sentence on a project's website, how is *anything* going to get through to them?

[13:06] <jast> okay, second sentence :)

[13:10] <stmuk> the question about p6doc is covered in the faq BTW

[13:10] *** pmurias joined
[13:13] <pmurias> grumpster: would a rename even solve that problem? If people where asking you about the "Wicked" (or whatever) language that they heard Perl was renamed to would it be better?

[13:14] *** vichib left
[13:15] <stmuk> pmurias: no it would be more confusing. It would also be an incredible amount of effort to change every ref to "perl 6" by something else and some would be missed.  And we would be the laughing stock of reddit at the end of it

[13:15] <[Coke]> scimon++ # cards

[13:17] <Juerd> jast: The problem is not getting interested people, who read the website, to know what things are.

[13:17] <Juerd> jast: The problem is getting people interested, and something seemingly superficial such as the name is utterly important for that, especially because most people will decide whether to look into something, based on only the most superficial information.

[13:18] <jast> if all they have is a completely new name, that's not going to convince them to look at the language, either

[13:19] <jast> to convince people that it's worth looking at, you have to make it easy for them to be exposed to something that appeals to them

[13:19] <Juerd> jast: While I do think the name clash is fundamentally wrong, that's just a matter of principle and doesn't actually hurt any project. The way the name Perl hurts both Perls isn't one that can be fixed within the community because it has nothing to do with the community.

[13:19] <jast> I'm not saying the name is free of problems, but the more fundamental problem is exposing people to what perl6 is about in the first place

[13:19] <Juerd> jast: Do you have a hackerspace nearby?

[13:20] <Juerd> Go there. Ask fellow geeks about Perl. Then ask them why they haven't tried Perl 6 yet.

[13:20] <jast> not exactly

[13:21] <jast> but I don't think that's the right way to approach this issue, anyway

[13:21] <Juerd> I will predict the following answers: 1. Perl is dead or should die, 2. Because it's Perl. These are not my opinions, but there does almost seem to be concensus over these things.

[13:21] <jast> eliciting people's gut reactions doesn't tell us anything new. I *know* there are lots of associations with the name "Perl"

[13:21] *** aborazmeh joined
[13:21] *** aborazmeh left
[13:21] *** aborazmeh joined
[13:21] <Juerd> Gut reactions are way more important than you think.

[13:21] <jast> if you want to do something *now*, get more cool perl6 code out there, in small and easily-digested portions

[13:22] <stmuk> virtualsue spoke to a room of over 100 go devs and asked for hands up who had heard of "perl6"

[13:22] <stmuk> about 3

[13:22] <jast> yes, which is why it's more important to focus on *changing* them, instead of arguing about things that aren't going to happen any time soon, anyway

[13:22] <stmuk> that's 3% and 100% had heard of it by the end of the evening

[13:23] <jast> btw I'm going to do my part by doing a perl6 talk here at work at some point in the near-to-mid future :)

[13:23] <Juerd> jast: Most of the time I agree. But whenever the discussion comes up, and it does so quite often, I keep hoping that TimToady will change his mind and agree to renaming Perl 6.

[13:23] <stmuk> and if you change the name that's back to 0%

[13:23] <jast> discuss that with him and not with me ;)

[13:24] <Juerd> Personally, I think Camelia and Rakudo would be great candidates for the name of my favourite programming language.

[13:24] <Juerd> stmuk: I think they may have heard about Perl 6 but had filtered the information because they're not interested in Perl.

[13:24] <Juerd> stmuk: At least that's a pattern that I keep seeing with people around me who aren't Perl programmers.

[13:24] <[Coke]> I spent 5 minutes once explaining the difference between 5 & 6 to someone here who asked a very nice question about it, and it's never been a concern since.

[13:25] <jast> I'm willing to concede that the name could use discussing, but there are more immediately worthwhile things that can be done to raise awareness of perl5 vs perl6 (and why perl6 is great ;))

[13:25] <Juerd> [Coke]: I spent those 5 minutes at least a hundred times already and will continue doing so.

[13:25] <[Coke]> where here == $DAYJOB

[13:26] <[Coke]> Juerd: well done, thank you

[13:26] <Juerd> And even if Perl 6 is renamed to something better, some explanation will still be necessary

[13:27] <Juerd> I love to talk about the language and if anything, the name is a good conversation starter.

[13:27] <[Coke]> Agreed.

[13:28] *** pmurias left
[13:29] <[Coke]> I'm a little inured to the "your language is bad and you should feel bad" argument because I backed into doing work with ColdFusion over a decade ago and never still have to support developers using it as their primary language for developing web apps

[13:29] <Juerd> http://www.linuxjournal.com/article/2070  " One of the ideas I keep stressing in the design of Perl is that things that are different should look different."

[13:29] <[Coke]> s/never//

[13:29] <jkramer> Isn't the cro tool installed with the cro package/module? I got the modules but can't find cro in path

[13:30] <timotimo> did you add the path that zef installs stuff to?

[13:30] <timotimo> like /home/timo/perl6/install/bin

[13:30] <stmuk> ${ROOT}/share/perl6/site/bin/cro

[13:30] <jkramer> I don't have ~/perl6 o_O

[13:30] <timotimo> no problem

[13:31] <timotimo> doesn't zef output "installed one script to /foo/bar/baz"?

[13:31] <sena_kun> `.perl6` maybe

[13:31] <timotimo> oh, the perl6 folder is my own creation

[13:31] <timotimo> it's where i have my rakudo, moarvm, and nqp git clones

[13:32] <jkramer> Ich have ~/.perl6 but it only contains a "precomp" directory with a bunch of files with hashes as names

[13:33] <jkramer> I'll re-install cro and see if zef says anything about its location

[13:34] <jkramer> Ahh it's ~/.rakudobrew/moar-nom/install/share/perl6/site/bin

[13:35] <timotimo> oh rakudobrew

[13:35] <jkramer> Shouldn't eval "$(rakdubrew init -)" in my zshrc add that to PATH?

[13:35] <timotimo> no

[13:35] <timotimo> you need to "rakudobrew rehash" every time scripts are installed

[13:35] <moritz> or, like, don't use rakudobrew :-)

[13:35] <jkramer> Ah

[13:35] <timotimo> also, rakudobrew isn't a good fit for people who don't hack on the rakudo/moar core every day

[13:35] <timotimo> huggable: rakudobrew

[13:35] <huggable> timotimo, nothing found

[13:35] <timotimo> huggable: r

[13:35] <huggable> timotimo, nothing found

[13:36] <timotimo> huggable: p6

[13:36] <huggable> timotimo, nothing found

[13:36] <timotimo> what's teh factoid called that gives you zoffix' build tool ...

[13:36] <jkramer> What else would you recommmend?

[13:36] <moritz> jkramer: are you developing rakudo, or only using it?

[13:36] <timotimo> https://github.com/zoffixznet/r

[13:36] <moritz> if just using, https://github.com/nxadm/rakudo-pkg

[13:37] <jkramer> moritz: Just using it, but I actually like rakudobrew. I thought it's basically perlbrew for P6 :)

[13:37] <timotimo> it installs forwarder scripts for everything zef installs so that you can switch between multiple installed versions of rakudo in an instant

[13:38] <timotimo> a user would normally only ever have one version installed, thus these forwarders are only making things more difficult

[13:38] <timotimo> (because you have to regenerate them every time something is installed)

[13:38] <AlexDaniel> huggable: r6

[13:38] <huggable> AlexDaniel, nothing found

[13:38] <AlexDaniel> huggable: r

[13:38] <huggable> AlexDaniel, nothing found

[13:38] <AlexDaniel> huggable: z

[13:38] <huggable> AlexDaniel, Helper script for Rakudo Perl 6 core development: https://github.com/zoffixznet/z

[13:38] <AlexDaniel> oh, here it is

[13:38] <timotimo> no, z is the wrong one

[13:39] <timotimo> oyu want r

[13:39] *** Ven`` left
[13:39] <AlexDaniel> hmmm…

[13:39] <timotimo> what's with my typing today

[13:39] <AlexDaniel> huggable: r :is: https://github.com/zoffixznet/r

[13:39] <huggable> AlexDaniel, Added r as https://github.com/zoffixznet/r

[13:41] *** vichib joined
[13:41] <stmuk> so rakudobrew is bad because its aimed at devs and the recommended replacement is also aimed at devs building the  latest development commit?

[13:42] *** Zoffix joined
[13:42] <Zoffix> stmuk: it builds latest tag

[13:42] <Zoffix> (I forget what rakudo.org page says on that; it might need updating)

[13:42] <stmuk> (git describe --abbrev=0 --tags)

[13:42] <stmuk> ah

[13:44] <stmuk> s/latest version/latest release/ maybe?

[13:45] <Zoffix> changed

[13:47] <stmuk> you could just add a --make-install to the Configure.pl line if you wanted to golf it down a line

[13:48] <stmuk> and can't help thinking it would be easier as a shell script too

[13:50] <scimon> I thought Rakudo Star was the recommended install.

[13:50] <stmuk> scimon: it depends who you speak to

[13:50] <Zoffix> :)

[13:51] <scimon> https://perl6.org/downloads/ ?

[13:51] *** zakharyas joined
[13:52] <scimon> Personally I use these ones. https://github.com/nxadm/rakudo-pkg/releases

[13:52] <Zoffix> scimon: yeah, you heard right. But many users wish to have more bleeding-edge releases so they use compiler releases or even build off development commits. There's a tool to achieve the latter called "rakudobrew" and it has some issues, so the recommendation *for bleed users* is to not use rakudobrew and to just use the alias.

[13:52] <Zoffix> Yeah, packages are good too

[13:52] <scimon> Oh I know I used Rakudobrew for a while.

[13:52] <scimon> But as you say. Issues.

[13:52] <Zoffix> Rakudo Star is basically our most-thoroughly-tested release.

[13:52] <Juerd> Yep, I want to get bleeding edge rakudo and use rakudobrew for that.

[13:53] * stmuk is using a forked version of rakudobrew which installs the lastest release and is modified so the test target actually works

[13:53] <scimon> The monthly release pacakages are a nice why to stay bleeding-ish edge but aheas of star.

[13:53] <Juerd> And whenever that borks I just rm -r ~/.rakudobrew and start over :)

[13:53] <scimon> :D

[13:54] <Juerd> scimon: I'd probably use monthly releases if installing them was a single command. I'm lazy. 

[13:54] <stmuk> I should pinch some of r into my forked 'brew to support Inline::Perl5

[13:54] <stmuk> :>

[13:55] <Juerd> Basically I upgrade rakudo ever other week and hope the performance is good enough for my production needs yet

[13:55] <scimon> There is a chap who has a PPA for unbuntu of the monthly release but it's a bit behind. (Currently on 2017-11)

[13:55] <scimon> Ahhhhh.

[13:55] <Juerd> Most importantly, memory use. It's improved a lot but not there yet.

[13:55] <scimon> What are you trying to do?

[13:55] <jkramer> Ok I dumped the rakudobrew install and re-installed with that r-thing, but it looks like it doesn't bring zef 

[13:55] <Zoffix> Juerd: the command is just `ugrade-perl6` with my "r" instructions: https://github.com/zoffixznet/r  And you don't need to `rakudobrew rehash` when installing binaries. They Just Work

[13:55] <Juerd> scimon: Well, I'd like to use Perl 6 on cheap virtual server instances with only 512 MB of memory.

[13:55] <jkramer> Ah nevermind, that are install instructions for zef too

[13:56] <Juerd> Zoffix: Thanks, I hadn't looked into r yet.

[13:56] <El_Che> Juerd: I have 32-bit ubuntu pkgs for that reason

[13:56] <scimon> Oh... yeah. I've not tried that yet. 

[13:56] *** aborazmeh left
[13:56] <Zoffix> jkramer: right :) it's separate because you only need to install zef once, not after every upgrade of rakudo

[13:57] <Juerd> https://github.com/Juerd/p6-mqtt/blob/master/foo.pl is my canary

[13:58] <Juerd> Once that runs without major memory usage (and memory leaks), Perl 6 is probably ready to replace my Perl 5 scripts.

[14:04] <stmuk> ha perlbrew supports cperl now

[14:04] <timotimo> m: react { whenever Signal(SIGINT) { say "got signal $_" } }; # today's fun mistake

[14:04] <camelia> rakudo-moar 90246e652: OUTPUT: «got signal SIGINT␤»

[14:05] <stmuk> although last time I tried cperl it didn't even compile on linux only os x

[14:06] <scimon> Juerd: Interesting.

[14:07] * stmuk wonders if r doesn't exist as a script to avoid support issues :)

[14:10] <Zoffix> I shove everything into aliases. That's the only reason.

[14:10] <Zoffix> Plus saves the endless debates on the safety of `\curl -L https://blah.blah | bash`

[14:13] <nige> yes - short aliases are good - "go" is a great runtime name, short and verby for running a computer program

[14:13] <nige> it is totally pants however from a Google-ability point of view

[14:14] *** bisectable6 left
[14:14] *** bisectable6 joined
[14:14] <nige> short, and distinctive - easy to type and say 

[14:15] <nige> having watched this channel over the years and its latent punning power I'm sure members could come up with a short list for TimToady++ to consider

[14:16] <Zoffix> FWIW we were talking about bash aliases for compiling from source :P

[14:17] <nige> sorry Zoffix missed the context there

[14:18] <timotimo> Juerd: what rate of memory growth are you observing in foo.pl?

[14:21] <timotimo> huh. after a while it stops giving new messages apparently

[14:26] <El_Che> GoFurtherLang

[14:27] <nige> "gfl"

[14:29] <nige> three letter acronyms are not a bad place to look for trade markable names - they sometimes collide with stock market codes though

[14:30] <nige> ICQ - "I Seek You" was a an inherently strong brand name based 

[14:30] <Zoffix> New blog post: "Long Live Perl 5!": https://rakudo.party/post/Long-Live-Perl-5

[14:30] <nige> on three letters - google-friendly etc

[14:32] <stmuk> 4f865671685c6d53b53dfacf4beb9e5faf8aecf8     Ensure Configure.pl uses gmake for builds on BSDs                             

[14:32] <stmuk> why?

[14:33] <Zoffix> stmuk: there's some comments on the PR: https://github.com/rakudo/rakudo/pull/1335

[14:35] <timotimo> i do see it slowly grow. maybe a megabyte every two minutes?

[14:35] <stmuk> I can't make any sense out of that .. I thought all the makefiles didn't use GNU make features? I've never seen any problems installing on BSD with its native make

[14:35] <stmuk> "BSD's make isn't entirely compatible with GNU's" from the PR

[14:35] <stmuk> it doesn't have to be

[14:35] *** trnh joined
[14:36] *** vichib left
[14:36] *** bwisti joined
[14:38] <nige> Zoffix++ +1 to the "Elephant in the Room" section in https://rakudo.party/post/Long-Live-Perl-5 - just 2 more cents - it would be great if the alias could be trade marked and ideally google-friendly

[14:39] <Zoffix> stmuk: IIRC that user was trying to fix compilation on BSDs. They committed fixes to MoarVM as well: https://github.com/MoarVM/MoarVM/commit/28eaf97d05d18e6e4ce528f6d723022609e8338b

[14:39] *** giraffe left
[14:40] <nige> Zoffix do you see the alias as being the runtime name?

[14:41] <stmuk> has he added a Makefile with GNUisms I wonder?

[14:41] *** grumpster joined
[14:42] <Zoffix> nige: in Perl 6 we have much stronger distinction between language and implementation than Perl 5. The alias concerns the name of the language, not what any particular implementation decides to call its executables.

[14:42] <grumpster> Zoffix++ # excellent interpretation

[14:42] <stmuk> I think if a dependency on gmake has been added it should be documented in the Moar docs .. its likely to break existing BSD ports as well

[14:42] <jast> Zoffix++ # +1 on the entire post

[14:42] <Zoffix> stmuk: as far as I recall those were the only commits in rakudo/moarvm from that person

[14:42] <grumpster> however there remains a problem: the open-letter was written by one of the most ( if currently not *the* most ) prolific contributors

[14:43] <grumpster> until the author stands up and says that she wholehartedly supports "Since Perl 5 is actively maintained, its users should not feel compelled to migrate to anything else, and should continue using what works for them"

[14:43] <grumpster> the hurt is not going to go away I am afraid

[14:44] *** grumpster left
[14:44] <tbrowder> Zoffix: maybe i read the post too rapidly, but what about the issue of 6 blocking 5 to 5+N?

[14:45] <jast> she did mention specific reasons why people would migrate: "because they can, they want to try, or just to see how Perl 6 will work out for them"

[14:45] <nige> Zoffix - yes - I've got your point there - someone could alias the alias to the particular runtime they might want use

[14:45] <jast> clearly if none of these apply to someone, that person wouldn't migrate

[14:45] <Zoffix> tbrowder: I think that's covered by The Naming Issue

[14:46] <stmuk> Zoffix: OK I'll do some BSD make testing and probably email Ben 

[14:47] * Zoffix &

[14:47] *** Zoffix left
[14:50] <nige> a commercial company creating their own version of Perl 6 - could call it <their-name> implementing Perl <Alias>&#174; 

[14:51] <stmuk> the FreeBSD build is broken even if I install gmake

[14:51] <nige> mico$ixy implementing Perl Rak

[14:53] <nige> where Perl is a master brand and Rak is the alias/sub-brand

[14:56] <Juerd> timotimo: That depends on the number of messages received, but for typical work loads, around 250 kB per minute.

[14:56] <timotimo> do you also sometimes get it just not receiving stuff any more?

[14:56] <Juerd> timotimo: Yeah, that it stops giving new messages is a new thing. Didn't happen before, but today it keeps happening. Could just be the server disconnecting for whatever reason; I haven't debugged it yet.

[14:56] <timotimo> now it's just sending keep-alives

[14:57] <Juerd> timotimo: That shouldn't happen; I haven't seen that happen yet.

[14:58] <Juerd> By the way, if you want to get a truck load of data per second, subscribe to the topic "#", which is the mqtt wildcard.

[14:58] <timotimo> uh oh :)

[14:58] <AlexDaniel> stmuk: can you create a ticket?

[14:59] <Juerd> e.g. whenever $m.subscribe("#") { say .<message>.decode("utf8-c8") }

[14:59] <timotimo>      From argument to subbuf out of range. Is: 39, should be in 0..37

[14:59] <timotimo> huh, fun.

[14:59] <timotimo> is it invalid to ask those for a topic?

[14:59] <Juerd> Hmmm

[15:00] <timotimo> no, it also happenns with just .<message>.decode

[15:00] <Juerd> I usually keep to off by 1 bugs. Two is not my style ;)

[15:01] <Juerd> Hm, is this the server spewing invalid data, or a bug in my library. The latter is much more likely but I'm hoping for the former.

[15:01] <timotimo> if i just put a try around the while parse loop it keeps going

[15:01] <timotimo> how does the parse function deal with incomplete data?

[15:01] <Juerd> It should return False

[15:02] <stmuk> AlexDaniel: yeah sure ... it looks like support for a non-standard BSD compiler has broken the standard one (at least on FreeBSD). I suspect the added GNU Make dependency isn't needed either

[15:03] <Juerd> In any case, an $offset of 39 is weird

[15:03] *** vichib joined
[15:04] *** vichib left
[15:04] <Juerd> It's been a while since I wrote this and the variable length message length encoding loop weirds me out. I'll need a minute to try to understand this :)

[15:04] <timotimo> OK :)

[15:05] *** vichib joined
[15:06] <Juerd> Oh, it's the second subbuf that fails, not the first one.

[15:08] *** trnh left
[15:08] <Juerd> Bug found

[15:09] <Juerd> -    return False if $length > $buf.elems + $offset;

[15:09] <Juerd> +    return False if $length + $offset > $buf.elems;

[15:09] <timotimo> lizmat: the Telemetry doc page links to Telemetry::Instrument::AdHoc, but that isn't part of the docs :(

[15:11] *** nige left
[15:12] <timotimo> is someone good with vim regexes and highlighting? it looks like the vim highlighter for perl6 chokes on comments that have many - in them

[15:12] *** nige joined
[15:12] *** giraffe joined
[15:13] <Juerd> Bug fix pushed to p6-mqtt github

[15:14] <Juerd> Damn, the amount of binary garbage published to test.mosquitto.org is staggering.

[15:15] *** rindolf left
[15:20] <mspo> never heard of that

[15:22] *** rindolf joined
[15:22] *** tony-o joined
[15:22] <Juerd> MQTT is a publish/subscribe protocol, Mosquitto is an open source message broker (mqtt server), test.mosquitto.org is their public server and probably the best real world test case ever :D

[15:22] *** nige left
[15:23] <Juerd> I know at least 2 people who never bothered to install their own mqtt server because test.mosquitto.org is surprisingly stable

[15:23] <stmuk> the build is also broken on OpenBSD

[15:23] *** nige joined
[15:24] *** zakharyas left
[15:25] *** zakharyas joined
[15:25] <mspo> stmuk: which build?

[15:26] <stmuk> rakudo

[15:30] <mspo> nqp and moar build okay?

[15:30] <mspo> stmuk: I'm just speculating that the netbsd build is probably also broken

[15:31] <stmuk> I meant in MoarVM .. its recent changes to the FreeBSD and OpenBSD config 

[15:31] <stmuk> I'd guess NetBSD isn't affected

[15:31] <stmuk> RT#132741

[15:31] <synopsebot> RT#132741 [new]: https://rt.perl.org/Ticket/Display.html?id=132741 [BUILD] Broken on FreeBSD and OpenBSD

[15:33] <mspo> rt could use a L&F update :)

[15:33] <stmuk> L&F?

[15:34] <mspo> look and feel

[15:34] <mspo> shouldn't that build be using $CC from the environment?

[15:35] *** konsolebox left
[15:35] *** astj joined
[15:35] <stmuk> yes I'm sure I've used other compilers successfully via environmental config only .. compiler flags on command line

[15:36] <mspo> netbsd has clang too

[15:38] *** trnh joined
[15:39] *** astj left
[15:40] *** vichib left
[15:40] *** vichib joined
[15:41] *** konsolebox joined
[15:45] *** st_elmo joined
[15:50] *** domidumont left
[15:51] *** domidumont joined
[15:52] *** kaare__ is now known as kaare_

[15:56] *** nige left
[15:56] *** konsolebox left
[15:57] *** domidumont left
[15:57] *** nige joined
[15:57] *** lowbro left
[16:03] *** st_elmo left
[16:03] *** konsolebox joined
[16:03] *** st_elmo joined
[16:10] *** wamba joined
[16:12] *** zakharyas left
[16:12] *** zakharyas joined
[16:12] <jkramer> m: my Array[Int where * < 5] $foo; $foo.push($_) for ^5;

[16:12] <camelia> rakudo-moar 90246e652: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in typename; couldn't find final ']' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3my Array[Int7⏏5 where * < 5] $foo; $foo.push($_) for ^5␤    expectin…»

[16:13] <jkramer> m: my Array[subset SmallNum of Int where * < 5] $foo; $foo.push($_) for ^5;

[16:13] <camelia> rakudo-moar 90246e652: ( no output )

[16:13] <jkramer> m: my Array[subset SmallNum of Int where * < 5] $foo; $foo.push($_) for ^10;

[16:13] <camelia> rakudo-moar 90246e652: OUTPUT: «Type check failed in assignment to ; expected SmallNum but got Int (5)␤  in block <unit> at <tmp> line 1␤␤»

[16:15] <jkramer> Shouldn't the first version work too?

[16:15] *** nige left
[16:16] <jkramer> m: sub foo(Int $x where * > 5) { say "yeah $x" }; foo(7); foo(2);

[16:16] <camelia> rakudo-moar 90246e652: OUTPUT: «yeah 7␤Constraint type check failed in binding to parameter '$x'; expected anonymous constraint to be met but got Int (2)␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[16:18] *** scovit joined
[16:21] *** nige joined
[16:22] *** bdmatatu joined
[16:23] *** sjoshi joined
[16:24] <scovit> hello, is it normal that a fresh install of zef from github on rakudo.2017-12 gives me 'No such method 'subst' for invocant of type 'Any''

[16:24] <scovit> ?

[16:24] <timotimo> can you get a stack trace for that? maybe with --ll-exception even?

[16:27] <scovit> sure: https://gist.github.com/scovit/4038354b9e5fdf52905b4cd1082644de

[16:28] <[Coke]> what does 'zef info zef' say?

[16:29] <[Coke]> (Identity is probably the important bit)

[16:29] <timotimo> unfortunately we can't see from the stacktrace what provided the result for the "ver" call

[16:29] <scovit> zef info zef says this :https://gist.github.com/scovit/412c4add9a634bb9fc5c2afffe227afa

[16:31] <[Coke]> seems recent (I'm running 0.1.32 here, need to upgrade!)

[16:31] <scovit> let's say that I modify the sources at /pasteur/homes/vscolari/share/perl6/site/sources/50B47A043364E01112770F7D1C590E62CECFF648

[16:31] <scovit> how do I tell perl6 to take the modifications?

[16:31] <timotimo> not a good idea

[16:32] <timotimo> i'd rather git clone zef, change the code there, then zef install --force-install .

[16:32] <scovit> mmh let's try

[16:32] <timotimo> or just -I. to pull the code in

[16:35] <scovit> Ok, I reinstalled zef

[16:35] <scovit> now back to zef install File::Temp

[16:35] <scovit> Str $v = "0.0.2"

[16:35] <scovit> Any $v = Any

[16:35] <scovit> No such method 'subst' for invocant of type 'Any'

[16:35] *** nige left
[16:35] <timotimo> where does the first $v come from?

[16:35] <scovit> before there are also other Str $v = "0.0.x" kind of stuff

[16:36] <timotimo> oh, there's just one dd in the entirety, and it gets called more often. sure.

[16:36] <Geth> ¦ doc: ec806e6df9 | (Alex Chen)++ | doc/Language/faq.pod6

[16:36] <Geth> ¦ doc: Update Language/faq.pod6

[16:36] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ec806e6df9

[16:36] <Geth> ¦ doc: 8f4b7c8791 | (Alex Chen)++ | doc/Language/variables.pod6

[16:36] <Geth> ¦ doc: Document naming conventions

[16:36] <synopsebot> Link: https://doc.perl6.org/language/faq

[16:36] <synopsebot> Link: https://doc.perl6.org/language/variables

[16:36] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8f4b7c8791

[16:36] <Geth> ¦ doc: 93b9bcea6c | (Alex Chen)++ | 2 files

[16:36] <Geth> ¦ doc: Add myself on CREDITS

[16:36] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/93b9bcea6c

[16:37] *** wander joined
[16:37] <scovit> yep, I putted the dd there

[16:37] <scovit> but I do not know what are those $v

[16:37] <scovit> and why it ends with Any

[16:37] <scovit> when zef installs zef it works fine

[16:37] <timotimo> it's probably the Distribution::DEPRECATED class that gets the ver method called on it

[16:38] <timotimo> can you put a "dd self" in there, too?

[16:40] <scovit> it seems that doing that triggers an infiniloop

[16:40] <timotimo> oh, haha

[16:40] <timotimo> of course

[16:40] <timotimo> let's put in an evil hack

[16:40] <scovit> O can try with self.WHAT

[16:41] <timotimo> m: sub test { my $*FOO = rand; say $*FOO; say CALLERS::<$*FOO>; test unless $++ > 5 }

[16:41] <camelia> rakudo-moar 90246e652: ( no output )

[16:41] <timotimo> m: sub test { my $*FOO = rand; say $*FOO; say CALLERS::<$*FOO>; test unless $++ > 5 }; test

[16:41] <camelia> rakudo-moar 90246e652: OUTPUT: «0.364240484362533␤Nil␤0.954991139474574␤0.364240484362533␤0.954318373402591␤0.954991139474574␤0.789046088766774␤0.954318373402591␤0.708910210756786␤0.789046088766774␤0.647764382083217␤0.708910210756786␤0.522312396438158␤0.647…»

[16:41] <timotimo> cool, that works

[16:42] <timotimo> scovit: put my $*FOO = 1; dd self without CALLERS::<$*FOO>; at the beginning or end of that method

[16:42] <scovit> ok ill try

[16:42] *** nige joined
[16:43] <scovit> I will copy you just the last line of output

[16:44] *** wander left
[16:45] <scovit> here: https://gist.github.com/scovit/b5ad6cfed671cdf073c91174b9bc797b

[16:46] <scovit> updated now

[16:46] <timotimo> is the dd before or after the subst?

[16:46] <scovit> it is beforew

[16:47] <timotimo> strange. the ver method it uses should have used $!version which is set

[16:47] <scovit> ok, let me check

[16:48] *** kraih joined
[16:48] <scovit> there is this extra error: Use of uninitialized value of type Any in string context.

[16:48] <timotimo> right. i wonder where that comes from, exactly

[16:48] <timotimo> oh

[16:49] <scovit> line 32

[16:49] <timotimo> no, not from our dynamic var

[16:50] <timotimo> hm, not sure what calls Str there, but it's likely the ver method giving an undefined value again

[16:50] *** konsolebox left
[16:50] <timotimo> what are you trying to install here? maybe i can try to reproduce

[16:51] <scovit> File::Temp

[16:51] <timotimo> is that the one that explodes?

[16:51] <scovit> yes

[16:51] <timotimo> it installs just fine here, but i'm on latest rakudo master; you're on 2017.12, right?

[16:52] <scovit> right

[16:52] <scovit> I can downgrade

[16:52] <scovit> to rakudo star

[16:52] <timotimo> what, downgrade zef?

[16:52] <timotimo> oh

[16:53] *** khw joined
[16:56] <kraih> lizmat: it would appear that you're being quite dishonest regarding the renaming issue https://irclog.perlgeek.de/perl6/2018-01-17#i_15702313 vs https://www.youtube.com/watch?v=olILAdlWFZk&t=488

[16:57] *** konsolebox joined
[16:58] <kraih> honestly, at this point i just want to see Perl 6 die

[16:58] <tyil> that sounds a bit aggressive

[16:58] <geekosaur> we noticed, troll.

[16:58] *** ChanServ sets mode: +o geekosaur

[16:58] <kraih> lizmat is right, lets leave the sister language solution behind

[16:58] <stmuk>  /ignore kraih is probably best at this point

[16:59] <scovit> :)

[16:59] <kraih> i'll wear that ban as a badge of honor

[16:59] <tyil> whether or not you're here complaining, we like Perl 6, and we'll keep on using it

[16:59] *** setty1 joined
[16:59] <geekosaur> no, god himself has just spoken to you, can you not tell?

[16:59] <tyil> oh

[16:59] <tyil> sorry :(

[17:00] <tyil> I still like Perl 6 tho

[17:00] <timotimo> i find it sensible to point out that inconsistency in liz' opinion fwiw

[17:00] <tyil> I'd just wish for the p5 ond p6 communities to be friendly to eachother so we can benefit from one another

[17:00] <kraih> but think about it, i went from designing the butterfly cover of the first Perl 6 book, to wanting to see Perl 6 die

[17:00] <geekosaur> not when trolls want to feed on it

[17:00] *** st_elmo left
[17:00] <scimon> I do feel it's a real shame you feel that way kraih. 

[17:00] <geekosaur> trolls must feed, you know, they are the true gods

[17:00] <tyil> timotimo: it might've been, but not if he says he wants to see the lang die instead of remain sensible

[17:01] <tyil> kraih: sounds like an issue on your part

[17:01] <tyil> have you considered professional help?

[17:01] <mst> kraih: while the inconsistency was worth pointing out, your other comments are not constructive and merely laying additional damage atop that caused by liz' divisive article

[17:01] <mst> tyil: not cool.

[17:01] <geekosaur> just like hate is the only truth

[17:01] <timotimo> not sure what changed between the presentation and the 6.c release date

[17:02] <geekosaur> just like destruction is the only creation

[17:02] <tyil> I didnt find liz's article divisive tbh

[17:02] <stmuk> https://rakudo.party/post/Long-Live-Perl-5 is positive

[17:03] <mst> tyil: it came across to a lot of people as a giant fuck you to the perl5 community; zoffix's post is much more balanced and much more constructive

[17:03] *** trnh left
[17:04] *** geekosaur sets mode: -o geekosaur

[17:04] <mst> also calling the sister language thing a 'necessary fiction' was *incredibly* counterproductive, since that was absolutely not how any of the people involved in that actually felt

[17:04] <tyil> mst: but it wasnt, people who want to be angry for no reason read it as something divisive just to be justify an angry mob

[17:05] <mst> tyil: if you're unwilling to even try to empathise with the people who were upset, then you're part of the problem and should just keep quiet about the subject

[17:05] <tyil> they'll be angry no matter what we do or propose

[17:05] <mst> a small number of people, yes, but this upset lots more people than that

[17:06] <mst> you might like to read http://strangelyconsistent.org/blog/how-perl-6-could-kill-us-all

[17:06] <kraih> mst: i think the issue needs to escalate

[17:07] <mst> I think that coming into #perl6 to tell the perl6 devs you want perl6 to die is just as terrible an idea as writing an article on perl.com telling the perl5 devs you want perl5 to die

[17:08] <tyil> she never said anything like that

[17:08] <ilmari> the article _did_ suggest stopping perl5 feature development and port it to nqp

[17:08] <tyil> telling people they have no right to speak because they dont empathize with an angry mob is much worse than the open letter

[17:08] <mst> tyil: having given a lightning talk called 'perl5 is the new perl4' that did say that, her remarks are inevitably read with the context - and 'stopping feature development' is effectively killing a project

[17:08] <stmuk> https://perl6.org/ still says "little sister" but people can express their own opinions

[17:08] <ilmari> even if it was presented as a "radical" idea and discarded

[17:08] <stmuk> I'm a "sisterist" myself

[17:08] <tyil> ilmari: that wouldnt be killing perl 5, that would be securing a future

[17:09] *** zakharyas left
[17:09] <mst> tyil: "stopping feature development" is not "securing a future"

[17:09] <ilmari> tyil: except for the people who _want_ to keep perl5 moving and adding new features to it

[17:09] <mst> but, again, you're not even trying to empathise, just dismissing the people who're upset as 'an angry mob'

[17:09] <ilmari> the giant freeze between 5.10 and 5.12 was bad enough, nobody wants a repeat of that

[17:09] <mst> so I don't believe you're actually trying to be constructive

[17:10] <tyil> the people who are upset are calling for killing off perl 6, a language I like a lot, so yeah, excuse for not empathizing with this idea

[17:10] <mst> ...

[17:10] <tyil> I'll use perl 5 or perl 6 depending on what I feel works best

[17:10] <tyil> I don't see *any* need to be this angry at either side

[17:10] *** ChanServ sets mode: +o mst

[17:10] <mst> tyil: enough.

[17:11] <mst> you're calling people who feel like there was a call to kill off perl5 an angry mob and then claiming that they're bad for talking about wishing perl6 would die. this is hypocritical, counterproductive and prima facie stupid. the conversation is now over. I will enforce it with quiets if anybody attempts to continue this divisive bullshit.

[17:12] *** mst sets mode: -o mst

[17:13] *** scimon left
[17:20] <scovit> how does one wipe the zef cache/database ?

[17:20] <jnthn> zef nuke

[17:20] *** MilkmanDan left
[17:20] <jnthn> oh, I think :)

[17:21] <timotimo> well, zef nuke has multiple modes

[17:21] <jnthn> Depends what you want to be rid of

[17:21] <timotimo> at least one of them is probably going to nuke stuff you don't want nuked

[17:21] <scovit> luckily this time zef update did the trick

[17:21] *** MilkmanDan joined
[17:21] <scovit> but still I think there might be a bug

[17:23] *** kraih left
[17:25] <stmuk> zef caching does seem sometimes over agressive

[17:31] *** ChoHag left
[17:34] <El_Che> good evening

[17:35] <sjn> o/

[17:36] <El_Che> hi salve

[17:36] <El_Che> long time no see

[17:49] <El_Che> did the UN sent you here to keep the peace? (Even Trump loves Norway)

[17:50] <tadzik> because they grow his hair?

[17:51] *** astj joined
[17:51] <El_Che> tadzik: 

[17:51] <El_Che> :)

[17:55] *** astj left
[17:56] * sjn is lurking full-time these days

[17:57] <tadzik> so, who's going to fosdem?

[18:01] *** mempko left
[18:10] *** khw left
[18:12] <El_Che> hopefully everyone. I plan to lock all the angry perl 5 and 6 people in a room. They can only come out if they agree on a path forward (or those who survive)

[18:15] * sjn is going to fosdem o/

[18:16] *** Kaiepi left
[18:16] *** domidumont joined
[18:18] <timotimo> i'm not going to fosdem

[18:18] *** Kaiepi joined
[18:22] *** khw joined
[18:25] *** nige left
[18:26] *** nige joined
[18:26] *** sjoshi left
[18:29] <DrForr> sjn++ # yay!

[18:33] *** darutoko left
[18:34] <[Coke]> I am not going to fosdem.

[18:36] *** st_elmo joined
[18:38] *** wamba left
[18:39] *** tyil joined
[18:41] *** nativecallable6 joined
[18:42] *** Scimon joined
[18:45] <Scimon> So. I think I'm going to step back from IRC for a few weeks. After 15 years of being a perl developer and hearing how nice and welcoming the perl community is I'm feeling very down. 

[18:46] <Scimon> I was hoping to go to my first perl conference this year and give a talk on Perl6. But I don't have the mental energy to cope with this sort of environment.

[18:46] <Scimon> So see you all in a while.

[18:46] *** Scimon left
[18:51] *** traxex left
[19:02] *** traxex joined
[19:03] <tyil> tadzik: I'll be at fosdem :>

[19:04] <DrForr> I'll be there as well, natch.

[19:06] <DrForr> Sorry about Scimon (just got in) but I can definitely understand how he feels.

[19:07] <tyil> ^

[19:10] <El_Che> he left

[19:10] <El_Che> he has happier things to think of, his upcoming marriage

[19:12] <DrForr> That'll do it, good on him! (and spouse-to-be FTM)

[19:12] <El_Che> happy news aside, we're not showing our best side either

[19:13] <El_Che> so it should be a lesson for us all

[19:15] * DrForr cranks /I Love Rock-n-Roll/ while waiting for things to pick up.

[19:15] <DrForr> Though the drama is apparently playing out on reddit, not here.

[19:17] *** setty1 left
[19:20] <mspo> you need another dime?

[19:20] <mspo> drama?

[19:22] <DrForr> The mp3 jukebox doesn't require dimes, lucky for me - I'd have to find an exchange office.

[19:22] <El_Che> mp3? You commoner

[19:22] <El_Che> flac is da shit

[19:22] <DrForr> Ogg FTW.

[19:23] <El_Che> lossless or die

[19:25] * DrForr moves on from her rock-n-roll to rocky-horror.

[19:27] <masak> sjn: \o

[19:29] <mspo> hot patootie

[19:29] *** mempko joined
[19:29] <mspo> I think eddie listens to the radio, not a jukebox

[19:30] <DrForr> Just remember, no matter how you slice it, it's still Meatloaf.

[19:31] *** raschipi joined
[19:33] <Xliff_> I just watched a show with Meatloaf in it <_<

[19:33] <yoleaux> 8 Oct 2017 16:51Z <thundergnat> Xliff_: Ah. Oh well, it was worth checking since I was getting that exact same behavior with an older version.

[19:34] <raschipi> Meatloaf has multiple versions? <_<

[19:34] <Xliff_> 2017, yoleaux? Really?

[19:34] <raschipi> yoleaux is a bot that delivers messages

[19:34] <Xliff_> I know. That message is old

[19:34] <raschipi> Oh, ok.

[19:34] <Xliff_> I think I was supposed to get one from lizmat.

[19:35] <raschipi> It's because now you have the _ at the end.

[19:36] *** quotable6 left
[19:36] *** quotable6 joined
[19:36] *** ChanServ sets mode: +v quotable6

[19:37] *** nige left
[19:40] *** raschipi left
[19:43] *** nige joined
[19:49] * [Coke] cannot remember the last time he ended up caring what format a music file was in.

[19:52] <sena_kun> well, with a great pair of headphones, a good record and a good ears you can actually notice a subtle difference if you know to what exactly you should listen to. :)

[19:53] <sena_kun> but this difference is indeed subtle.

[19:53] <El_Che>  there is quality of course, but there is also future-proofing your music collection

[19:53] <[Coke]> I'm sure I couldn't.

[19:53] <El_Che> in case you need to convert to an other format

[19:53] <sena_kun> [Coke], did you tried?

[19:53] <El_Che> you don't want a lossy source

[19:54] <psch> isn't playback of records destructive?

[19:54] <sena_kun> El_Che, sure. I did not implied that "MAH SOUND" is the only reason to keep flac. :)

[19:54] <psch> i.e. you get used to your own slightly-deteriorated-from-lots-of-playing-it sound

[19:54] <El_Che> psch: you can convert your new LP's right away to flac :)

[19:54] <psch> or was that only casettes?

[19:55] <El_Che> psch: everything physical has wear

[19:55] <psch> i'm pretty those definitely get worse over time

[19:55] <psch> +sure

[19:55] <El_Che> casette > LP > CD

[19:55] <psch> El_Che: well casette playback mumble magnetism mumble mumble

[19:55] <psch> :s

[19:56] <El_Che> yeah, I was a snobby kids buying good cassettes for my walkman

[19:56] <El_Che> the dirt cheap ones were crap

[19:56] <[Coke]> sena_kun: yes

[19:57] <sena_kun> [Coke], ah, okay then.

[19:58] *** ChoHag joined
[19:59] *** st_elmo left
[20:05] <psch> the biggest difference in playback quality for me was still from an audio interface upgrade

[20:06] <psch> like, even 128 bit mp3s sounded... i guess "more detailed" is the best phrase

[20:07] <psch> but i strongly believe in diminishing returns there :p

[20:10] *** khw left
[20:12] *** domidumont left
[20:15] <moritz> for me, the biggest upgrade was from tape to CD :-)

[20:15] <[Coke]> moritz: agreed.

[20:16] * [Coke] listens to a presentation on us tax reform

[20:16] <psch> i barely experienced that, and definitely didn't pay enough attention to notice the upgrade :)

[20:20] <mspo> [Coke]: in 192bit sound?

[20:22] *** khw joined
[20:23] *** setty1 joined
[20:27] <stmuk> you can take the FLAC from my cold dead fingers

[20:29] *** rindolf left
[20:30] *** zacts left
[20:33] <timotimo> opus ftw

[20:34] *** zacts joined
[20:46] *** rindolf joined
[20:47] <Xliff_> .tell raschipi Oh. LOL. Missed the '_'

[20:47] <yoleaux> Xliff_: I'll pass your message to raschipi.

[20:49] <Xliff_> Sorry. FLAC is too heavy for my available storage.

[20:49] <Xliff_> Lossy or not, I get more bang for my megabyte-buck from MP3

[20:50] <Xliff_> FLAC = great taste. MP3 = less filling. :P

[20:50] *** evalable6 left
[20:51] *** evalable6 joined
[20:51] *** ChanServ sets mode: +v evalable6

[20:51] <stmuk> losers :P

[20:53] <sena_kun> stmuk, just ooc, what headphones/dac/amp are you using? :)

[20:53] <timotimo> i currently listen to music and stuff using a 60 euros soundbar attached to the headphone output of an asus screen that's fed via displayport :)

[20:54] * timotimo can hear the cringe from hundreds of miles away

[20:54] <psch> timotimo: i used to listen on 40€ headphone via onboard sound

[20:54] <stmuk> sena_kun: I can't remember but its from China and has loads of bits

[20:55] <psch> timotimo: i could hear (and record) the usb port interfering with the DAC, because the noise changed pitch when i lifted my mouse of my desk

[20:55] <psch> *off

[20:55] <sena_kun> stmuk, ah, ok. Good luck with your flac. :) (actually like 70-80% of my records are in flac)

[20:55] <timotimo> psch: the headphone jacks on my laptops all tended to break only a year or so into use ;(

[20:55] * timotimo AFK

[20:57] <stmuk> FiiO E7 Portable Headphone DAC Amplifier

[21:06] *** mempko left
[21:06] *** bdmatatu left
[21:08] *** pilne joined
[21:16] *** colomon joined
[21:16] *** colomon left
[21:20] *** comborico1611 joined
[21:38] <comborico1611> Anyone ever use a straight razor?

[21:38] <yoleaux> 18 Jan 2018 22:05Z <sena_kun> comborico1611: also see https://github.com/emacs-tw/awesome-emacs

[21:43] <El_Che> Xliff_: you can keep flacs and convert to mp3 for devices with less space

[21:43] <El_Che> Xliff_: 320kbits/s is fiiiine :)

[21:50] *** TEttinger joined
[21:51] <timotimo> so with languages like haskell, why don't we rename perl6 to "Wall" or "Larry"?

[21:52] <comborico1611> I'm for that.

[21:52] <comborico1611> Would you choose Wall or Larry?

[21:52] *** S007 left
[21:52] <timotimo> i'm not sure how many programming languages are named after people immediately involved in their development

[21:52] <timotimo> like, Ada wasn't actually developed by ada lovelace

[21:53] <timotimo> and i think haskell curry also didn't have a hand in haskell? not sure if they were even still alive when haskell was started in ~1850

[21:53] <moritz> proposal for anybody who proposes a language rename: create an IRC channel with that name, and see how many people follow

[21:54] <timotimo> but that enforces the limitations of irc channel names on the language name :(

[21:54] <timotimo> like, what if i want to say "perl6 is like C# but without the C and more of the #", so i'd propose to call it ##?

[21:55] <comborico1611> moritz: Ew.  Touchy, touchy.  You sound grumpy.  

[21:56] <sena_kun> while the name is the topic, by the way, just wanted to give an opinion(no, not a holywar one, more like 6.d one).

[21:56] <timotimo> i'm hoping my silly suggestion got a tiny smirk out of moritz

[21:56] <psch> ##++

[21:56] <psch> /o\

[21:56] * AlexDaniel joined #6lang :D

[21:56] <timotimo> rather than just unhappyness

[21:56] <comborico1611> timotimo, you never answered me question!

[21:56] <sena_kun> about https://github.com/perl6/6.d-prep/tree/master/TODO#release-name

[21:56] <timotimo> excuse me, which one was that?

[21:57] <comborico1611> Would you choose Wall or Larry?

[21:57] <timotimo> it's not for me to decide :P

[21:58] <comborico1611> I hate this Dismorphia.

[21:58] <El_Che> I am pretty sure someone already proposed Gloria

[21:58] <AlexDaniel> comborico1611: if we're choosing between these two, then Gloria

[21:58] <comborico1611> You just didn't want to answer!

[21:58] <sena_kun> of course, I don't have a years of experience to say something, but still I think that "dismorphia" is 1)sounds like some disease(I know it's not, but still); and 2)it's harder to type. As for another options, I can say that "rakudo"(I know it's the implementation name) is better in my opinion, yup. Just my 5 cents.

[21:58] <Xliff_> El_Che: OOC, now...but the device without much space is my hard drive.

[21:58] <comborico1611> AlexDaniel: that's not very programmer-ish of you.

[21:58] <sena_kun> ugh, my grammar is awful as always.

[21:59] <comborico1611> I suggest 6lerp.

[21:59] <comborico1611> Pronounced Slurp.

[21:59] <Xliff_> On topic: If the name has to be changed, then 6lang works. I still think this is Perl, though.

[21:59] <El_Che> Xliff_: I don't keep my music on my laptop :)

[21:59] <AlexDaniel> comborico1611: I guess that's from my engineer-ish part :)

[21:59] <Xliff_> There is enough Perl in Rakudo for it to still be Perl.

[22:00] <Xliff_> El_Che: This is my desktop. I have a lot of MP3s. 

[22:00] <El_Che> Rakudo is a very cool name

[22:00] * moritz thinks he has worked too long on Perl 6 to accept a changed name

[22:00] <Xliff_> moritz++

[22:00] <sena_kun> No.

[22:00] <sena_kun> I don't want a name change.

[22:00] <El_Che> moritz: you are allowed to still call it Perl 6

[22:00] <El_Che> you and sena_kun :)

[22:00] <sena_kun> I have a t-shirt with "Perl 6" already. :)

[22:00] <El_Che> and probably stmuk 

[22:00] <stmuk> ha

[22:00] <comborico1611> Remember zoffix's key distinction.  It's not a name change, it's just an alias.

[22:01] <El_Che> moritz: I would by the 2nd edition of your book, the Rakudo one :)

[22:01] <moritz> yet people still talk about renaming

[22:01] <sena_kun> sure

[22:01] <Xliff_> BTW... another OOC.

[22:01] <comborico1611> El_Che: lol

[22:01] <Xliff_> Is there a .transpose equivalent for Arrays?

[22:01] <comborico1611> They talk because they haven't refined their minds enough to promote the alias argument.

[22:01] <Xliff_> Rather, is there a .transpose for Arrays.

[22:02] <moritz> Xliff_: [Z] is kinda like transpose

[22:02] <AlexDaniel> sena_kun: but Dismorphia is just a name for the release

[22:02] <Xliff_> moritz: Has a key flaw. I was talking about this with AlexDaniel, last night

[22:02] <moritz> m: my @a = [1, 2, 3], ['a', 'b', 'z']; say ([Z] @a).perl

[22:02] <camelia> rakudo-moar 90246e652: OUTPUT: «((1, "a"), (2, "b"), (3, "z")).Seq␤»

[22:03] <Xliff_> m: ([Z] <a b c>).say

[22:03] <camelia> rakudo-moar 90246e652: OUTPUT: «((a b c))␤»

[22:03] <AlexDaniel> sena_kun: soo… why is that a problem? Some time later we'll move to 6.e and it will be Ear-Infection, and everyone will forget about Dismorphia :)

[22:04] <sena_kun> AlexDaniel, if it's not an "alias", then I don't mind(though still dislike it for the reasons above).

[22:04] <Xliff_> moritz: ^^ should be ((a) (b) (c))

[22:04] <stmuk>  dysmorphia, is a mental health condition where a person spends a lot of time worrying about flaws in their appearance

[22:05] <moritz> Xliff_: yes, that sucks

[22:05] <AlexDaniel> sena_kun: that's *just* a language release name. 6.c was *C*hristmas, 6.d is *D*ismorphia

[22:05] <sena_kun> though I probably should to address it to Zoffix. because of "Collate all the feedback on the matter in presentable".

[22:05] <stmuk> is there one for worrying about names of things? :>

[22:05] <Juerd> Was diwali (or however that's spelled) dropped?

[22:05] <AlexDaniel> sena_kun: the feedback presentable is about the language name/alias/whatever, not about the 6.d release

[22:05] <moritz> let's name it D&D, shall we?

[22:06] <AlexDaniel> Juerd: well, not really, but some explanation here: https://github.com/perl6/6.d-prep/tree/master/TODO#release-name

[22:06] <Xliff_> moritz: I think there should be a real Array.transpose that addresses this.

[22:06] <Xliff_> m: ([Z] <a <b c d> ce).say

[22:06] <camelia> rakudo-moar 90246e652: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in quote words; couldn't find final '>' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3([Z] <a <b c d> ce).say7⏏5<EOL>␤    expecting any of:␤        a…»

[22:06] <Xliff_> m: ([Z] <a <b c d> e>).say

[22:06] <camelia> rakudo-moar 90246e652: OUTPUT: «((a <b c d> e))␤»

[22:07] <Juerd> AlexDaniel: Thanks for the link

[22:07] <Xliff_> m: ([Z] ('a', <b c d>, 'e').say

[22:07] <camelia> rakudo-moar 90246e652: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in parenthesized expression; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3([Z] ('a', <b c d>, 'e').say7⏏5<EOL>␤    expecting a…»

[22:07] <Xliff_> m: ([Z] ('a', <b c d>, 'e')).say

[22:07] <camelia> rakudo-moar 90246e652: OUTPUT: «((a b e))␤»

[22:07] <sena_kun> AlexDaniel, you lost me. :) So what can(should?) I do with my tiny powers to reduce chances that one day I'll wake up and write "Dismorphia" with a marker on my t-shirt?

[22:07] <Xliff_> m: ('a', <b c d>, 'e').say

[22:07] <camelia> rakudo-moar 90246e652: OUTPUT: «(a (b c d) e)␤»

[22:08] <sena_kun> like, pm someone or do nothing.

[22:08] <AlexDaniel> sena_kun: you can always write v6.d instead

[22:09] <AlexDaniel> but the fact that dysmorphia is an actual mental disorder… is probably a good argument

[22:09] <AlexDaniel> not to even name a release like that, I mean

[22:09] <Juerd> AlexDaniel: dysmorphia ne dismorphia though :)

[22:10] <AlexDaniel> sure, I see that, but it doesn't help much

[22:10] <Juerd> But it's hardly a significant difference :)

[22:10] <El_Che> I like Zoffix' BrokenChicken alias. It could be a good name

[22:10] <Juerd> AlexDaniel: Agreed

[22:11] *** khw left
[22:11] <El_Che> "I wrote the new app in BrokenChicken, boss"

[22:11] <Xliff_> s/Broken/Robot/ and it's good.

[22:11] <Xliff_> Might get sued, though

[22:11] <AlexDaniel> sena_kun: so “A new spec of 6lang was just released – v6.d “Dismorphia””

[22:11] <AlexDaniel> version I mean

[22:11] <AlexDaniel> but I hope you get the point :)

[22:11] <sena_kun> e.g. when I duckduckgo "dismorphia" I have "Body dysmorphic disorder - Wikipedia" as a first link. And butterflies are like 4th.

[22:12] * moritz feels like in a Kafka novel

[22:12] <sena_kun> AlexDaniel, I get the point, just my 5 cents.

[22:12] <sena_kun> ok, back to working~

[22:12] * AlexDaniel back to being ill

[22:12] <sena_kun> o/

[22:12] <El_Che> moritz: which one, mr Samsa?

[22:13] <moritz> dunno, long time since I read one

[22:14] <psch> vor dem gericht /o\

[22:14] <comborico1611> moritz: "

[22:14] <comborico1611> moritz: "This is pure Kafka.  Who's Kafka!?  Tell me!"  What is this quote from?

[22:15] <AlexDaniel> .tell Zoffix Oh well. So turns out that “dysmorphia” (with y instead of i) is actually something bad. Perhaps that argument alone is good enough for getting the Dismorphia suggestion out of v6.d prep docs… https://irclog.perlgeek.de/perl6/2018-01-19#i_15713129

[22:15] <yoleaux> AlexDaniel: I'll pass your message to Zoffix.

[22:15] <AlexDaniel> .tell Zoffix or maybe it's actually good if we give it a positive spin :)

[22:15] <yoleaux> AlexDaniel: I'll pass your message to Zoffix.

[22:17] <comborico1611> It's from the 1995 film Congo.

[22:18] <TEttinger> kafka wrote Metamorphosis

[22:19] <comborico1611> Going to eat supper now.  It's Friday!

[22:19] <timotimo> you haven't been embarassed until you claimed during a lightning talk that kant wrote metamorphosis

[22:19] <TEttinger> kant stop me now

[22:19] <El_Che> timotimo++

[22:19] <comborico1611> lol

[22:19] *** comborico1611 left
[22:20] <TEttinger> 6.d Ditto

[22:20] <TEttinger> ditto, the transforming pokemon

[22:21] <stmuk> Dwalin?

[22:21] <timotimo> Dwayne (The Rock) Programming Language

[22:21] <stmuk> Dent?

[22:22] <timotimo> arthur?

[22:22] <TEttinger> dweomer

[22:22] <stmuk> Dent, Arthur, Dent

[22:22] *** abraxxa left
[22:22] *** khw joined
[22:28] <Xliff_> Determinant

[22:28] <timotimo> deuteronomy

[22:29] <stmuk> Demon Seed

[22:29] <timotimo> Dark Souls

[22:29] <geekosaur> deuterostomy

[22:29] <Xliff_> Dance Dance Revolution

[22:30] <TEttinger> dinnertime

[22:30] <TEttinger> dudette

[22:30] <timotimo> dinner time is great

[22:30] <sena_kun> # debug

[22:30] <TEttinger> haha

[22:31] <TEttinger> done.

[22:31] <stmuk> Donald 

[22:31] <TEttinger> duck.

[22:31] <geekosaur> (he hates that.)

[22:32] <TEttinger> he hates wearing pants, yes

[22:32] *** Kaiepi left
[22:32] *** pmurias joined
[22:32] <stmuk> Dionysus

[22:33] <TEttinger> damocles

[22:34] <TEttinger> I'd be really surprised if no one has made a reference to the sword of damocles as analogous to potential Russian blackmail of Trump

[22:35] <stmuk> weezil

[22:35] <stmuk> Dweezil

[22:36] <El_Che> FrankieJr

[22:36] *** Guest94921 left
[22:37] *** syntaxman joined
[22:37] *** syntaxman left
[22:37] *** syntaxman joined
[22:37] <timotimo> how did we reach F already

[22:38] <pmurias> TEttinger: you mean with not enough recent drama around we need to mix in US politics to liven things up?

[22:40] <pmurias> https://github.com/fglock/Perlito/ # click baiting a alternative Perl 5 implementation that could be grown into a Butterfly Perl 6

[22:42] <TEttinger> neat

[22:46] <pmurias> Perlito5 is interesting in that it's a Perl 5 implementation that has origins as a Perl 6 one

[22:47] *** Zoffix joined
[22:47] <Zoffix> .

[22:47] <yoleaux> 22:15Z <AlexDaniel> Zoffix: Oh well. So turns out that “dysmorphia” (with y instead of i) is actually something bad. Perhaps that argument alone is good enough for getting the Dismorphia suggestion out of v6.d prep docs… https://irclog.perlgeek.de/perl6/2018-01-19#i_15713129

[22:47] <yoleaux> 22:15Z <AlexDaniel> Zoffix: or maybe it's actually good if we give it a positive spin :)

[22:48] <Zoffix> AlexDaniel: don't care much about the release name. There's a commit in 6.d-prep somewhere (might've been commit that added Dismorphia) with lots of comments dissing Dismorphia. I bailed out of that discussion but perhaps it had some conclusions

[22:50] *** espadrine joined
[22:50] * Zoffix is amused that out of all the things in 6.d-prep repo, the only comments Zoffix ever seen is about naming and not any of the techincal issues :P

[22:51] <timotimo> i regret to have to say i'm also not weighing in on the 6.d prep stuff at all :(

[22:53] <Zoffix> The last two are the most contentious I'd imagine: https://github.com/perl6/6.d-prep/blob/master/TODO/FEATURES.md#make--safecall-actually-safe

[22:53] <Zoffix> And https://github.com/perl6/6.d-prep/blob/master/TODO/FEATURES.md#make-method-matcher-forms-not-set-

[22:54] <Zoffix> The safecall one might be a bad idea due to perf penalty that'd entail

[22:54] <Zoffix> Yeah. I'm -1 on it now (if Nil methods are fixed not to try to call Cool candidates, the safecall will be much more usable)

[22:55] <jnthn> It's possible we might be able to find a performant way

[22:57] <Zoffix> \o/

[22:57] <jnthn> I'm in two minds about it from a language design perspective

[22:57] *** cdg joined
[22:57] <jnthn> On the one hand we've said the ?, +, and * are about the MRO

[22:57] *** sortiz joined
[22:58] <jnthn> On the other, I agree .? isn't really DWIM in the way anyone would really expect at the moment

[22:59] <jnthn> ooh, "Make start blocks in sink context attach an error handler" should be on my todo list probably

[23:00] <Zoffix> :)

[23:00] <jnthn> I consider the non-blocking await work for 6.d largely complete

[23:01] <jnthn> Supplies have been using the guts that back that internally, even in 6.c

[23:01] <jnthn> So the code paths are already getting a good workout

[23:03] *** trnh joined
[23:05] *** Zoffix left
[23:12] <Altreus> I wonder whether anyone can suggest some real-world examples of grammars so I can glean some techniques and a bit more knowledge than a contrived tutorial

[23:12] <Altreus> I'm hoping it'll answer some of my immediate questions so I don't have to pester :)

[23:13] <stmuk> Altreus: parsing any config file or structured data whatever

[23:15] <Altreus> slightly surprised the yaml module I found isn't using a grammar

[23:16] <Altreus> which is sort of why I asked for suggestions - I don't know whether the examples I find are good ones or bad ones

[23:16] <Altreus> ah yamlish uses one

[23:16] <jnthn> Docker::File (I think) uses one

[23:17] <jnthn> eco Docker::File

[23:17] <jnthn> eco: Docker::File

[23:17] <jnthn> Aww

[23:17] <buggable> jnthn, Docker::File 'Parsing and generation of Dockerfiles.': https://github.com/jnthn/p6-docker-file

[23:17] <jnthn> Oh :)

[23:17] <timotimo> i'd assume our template languages are implemented with grammars, though they could just as well be search&replace

[23:17] <jnthn> Yeah, I did call it Docker::File :)

[23:17] <jnthn> iirc it's a medium-complexity grammar

[23:20] <Altreus> dank

[23:20] <jnthn> bitt

[23:21] <Altreus> the yamlish parser uses a dot in <.document-prefix> but yours and the JSON one don't, in <image> for example

[23:21] <jnthn> The . just means "don't capture"

[23:21] <Altreus> ah, that's another question I had :)

[23:23] <Altreus> I was going to write a grammar for a "format" that seems to be a bit random. Sometimes people use proper XML, and sometimes people use something XML-like but apparently with an amount of guesswork on the part of the parser

[23:23] <Altreus> Would it make sense for TOP to try XML-like and then just pass the input string to the other grammar to try?

[23:23] <Altreus> wait

[23:23] <Altreus> I mean try XML, and then pass it on to the XMLish parser

[23:23] <Altreus> probably with a warning

[23:27] *** cdg left
[23:28] *** pecastro joined
[23:29] <jnthn> Could try something like that

[23:30] <jnthn> That or just try writing a very liberal XML parser... :)

[23:32] <Altreus> honestly I don't even know if I can. I think I might have to write format-specific logic to know whether a tag is nested or ended

[23:33] <jnthn> *nod*

[23:33] <jnthn> Note that it's possible to embed code conditions and stuff into a grammar

[23:36] <Altreus> I don't grok the term "code conditions"

[23:37] <Altreus> Do you mean conditions as in requirements or conditions as in contextual situation?

[23:39] <psch> m: my token foo { "a" <?{ rand < .5 ?? note() !! 1 }> "b" }; say ("ab" ~~ &foo) xx 2

[23:39] <camelia> rakudo-moar 90246e652: OUTPUT: «Noted␤(｢ab｣ ｢ab｣)␤Noted␤»

[23:39] <psch> m: my token foo { "a" <?{ rand < .5 ?? note() !! 1 }> "b" }; say ("ab" ~~ &foo) xx 2

[23:39] <camelia> rakudo-moar 90246e652: OUTPUT: «Noted␤(｢ab｣ ｢ab｣)␤»

[23:39] <psch> inside the <?{ }> you have $/ iirc?

[23:39] <psch> which is "match so far"

[23:41] *** pilne left
[23:44] *** trnh left
[23:44] *** pmurias left
[23:45] *** sena_kun left
[23:48] *** cdg joined
[23:49] *** leont joined
[23:52] *** cdg left
[23:53] *** yoleaux left
[23:57] *** rindolf left
