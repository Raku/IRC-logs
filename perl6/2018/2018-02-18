[00:07] *** sno joined
[00:12] *** sno left
[00:18] *** Exodist left
[00:18] *** Exodist joined
[00:27] *** Exodist left
[00:27] *** Exodist joined
[00:28] *** Kaiepi joined
[00:33] *** sno joined
[00:36] *** sena_kun left
[00:52] *** sno left
[01:22] *** aborazmeh joined
[01:22] *** aborazmeh left
[01:22] *** aborazmeh joined
[01:25] *** dct_ left
[01:26] *** sno joined
[01:37] *** konsolebox left
[01:39] *** konsolebox joined
[01:41] *** Exodist left
[01:42] *** Exodist joined
[01:45] *** sno left
[01:50] *** Exodist left
[01:50] *** Exodist joined
[01:54] *** markong left
[01:57] *** AlexDaniel left
[01:58] *** Exodist left
[02:00] *** Exodist joined
[02:04] *** epony joined
[02:04] *** wamba left
[02:07] *** konsolebox left
[02:08] *** Lynx_ left
[02:09] *** Lynx_ joined
[02:10] *** konsolebox joined
[02:15] *** pierre joined
[02:21] *** pierre left
[02:21] *** pierre joined
[02:25] *** sno joined
[02:26] *** pierre left
[02:27] *** konsolebox left
[02:28] *** konsolebox joined
[02:32] *** lizmat left
[02:34] *** kurahaupo left
[02:39] *** sno left
[02:44] *** comborico1611 left
[02:46] *** ilbot3 left
[02:48] *** Exodist left
[02:48] *** Exodist joined
[02:52] *** jeromelanteri joined
[02:52] *** mniip joined
[02:52] *** releasable6 left
[02:52] *** releasable6 joined
[02:56] *** ilbot3 joined
[02:56] *** ChanServ sets mode: +v ilbot3

[03:05] *** konsolebox left
[03:06] *** konsolebox joined
[03:12] *** sno joined
[03:13] *** cdg joined
[03:16] *** konsolebox left
[03:17] *** konsolebox joined
[03:17] *** cdg left
[03:20] *** sno left
[03:23] *** Xliff_ joined
[03:26] *** ufobat_ joined
[03:26] *** Xliff left
[03:26] *** lizmat joined
[03:29] *** ufobat left
[03:38] *** jeromelanteri left
[03:39] *** Xliff__ joined
[03:42] *** Xliff_ left
[03:43] *** sno joined
[03:48] *** sno left
[03:50] *** jeromelanteri joined
[03:59] *** skids joined
[04:10] *** Lynx_ left
[04:11] *** Lynx_ joined
[04:29] *** konsolebox left
[04:29] *** sno joined
[04:30] *** konsolebox joined
[04:31] *** Exodist left
[04:33] *** Exodist joined
[04:39] *** sno left
[04:39] *** Exodist left
[04:40] *** Exodist joined
[04:44] *** aborazmeh left
[04:48] *** sno joined
[04:53] *** sno left
[04:58] *** Exodist left
[04:59] *** Exodist joined
[05:00] *** Cabanossi left
[05:03] *** Cabanossi joined
[05:10] *** khw left
[05:16] *** skids left
[05:24] *** xinming left
[05:26] *** xinming joined
[05:27] *** SquireOfGothos joined
[05:28] *** sno joined
[05:29] *** SquireOfGothos left
[05:38] *** sno left
[06:17] *** Exodist left
[06:18] *** Exodist joined
[06:27] *** sno joined
[06:35] *** Exodist left
[06:35] *** Exodist joined
[06:37] *** sno left
[06:46] *** sno joined
[06:51] *** sno left
[07:13] *** cdg joined
[07:14] *** Exodist left
[07:15] *** wamba joined
[07:16] *** Exodist joined
[07:19] *** cdg left
[07:24] *** sno joined
[07:31] *** Exodist left
[07:32] *** Exodist joined
[07:33] *** sno left
[07:40] *** Exodist left
[07:40] *** Exodist joined
[07:48] *** Exodist left
[07:49] *** Exodist joined
[08:02] *** setty1 joined
[08:05] *** kurahaupo joined
[08:05] *** Exodist left
[08:08] *** Exodist joined
[08:14] *** konsolebox left
[08:15] *** konsolebox joined
[08:21] *** pierre_ joined
[08:24] *** sno joined
[08:25] *** Exodist left
[08:26] *** Exodist joined
[08:33] *** sno left
[08:35] *** Exodist left
[08:38] *** Exodist joined
[08:39] <Geth> ¬¶ doc: ffeddb16c7 | (JJ Merelo)++ | doc/Language/containers.pod6

[08:39] <Geth> ¬¶ doc: Rewrites sentence on sigilless variable

[08:39] <Geth> ¬¶ doc: 

[08:39] <Geth> ¬¶ doc: Thanks to @jimav for the suggestion. Also rewrites some other things

[08:39] <Geth> ¬¶ doc: here and there. Refs #1784.

[08:39] <synopsebot> Link: https://doc.perl6.org/language/containers

[08:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ffeddb16c7

[08:45] *** Exodist left
[08:47] *** Exodist joined
[08:47] *** pierre_ left
[08:49] *** konsolebox left
[08:50] *** konsolebox joined
[08:53] *** sena_kun joined
[08:55] *** Exodist left
[08:55] *** darutoko joined
[08:58] *** Exodist joined
[08:59] *** sno joined
[09:01] *** konsolebox left
[09:03] *** konsolebox joined
[09:04] *** Exodist left
[09:05] *** Exodist joined
[09:08] *** konsolebox left
[09:09] *** sno left
[09:10] *** konsolebox joined
[09:11] *** andrzejku joined
[09:12] *** Exodist left
[09:13] *** Exodist joined
[09:14] *** konsolebox left
[09:15] *** konsolebox joined
[09:20] *** konsolebox left
[09:23] *** Exodist left
[09:23] *** pierre_ joined
[09:25] *** parv joined
[09:26] *** Exodist joined
[09:26] *** konsolebox joined
[09:33] *** Exodist left
[09:33] *** Exodist joined
[09:41] *** eroux joined
[09:45] *** konsolebox left
[09:48] *** konsolebox joined
[09:53] *** konsolebox left
[09:53] *** konsolebox joined
[09:59] *** espadrine joined
[10:01] *** konsolebox left
[10:02] *** konsolebox joined
[10:03] *** parv left
[10:03] *** setty1 left
[10:06] *** konsolebox left
[10:08] *** konsolebox joined
[10:12] *** konsolebox left
[10:14] *** konsolebox joined
[10:19] *** konsolebox left
[10:20] *** konsolebox joined
[10:25] *** konsolebox left
[10:26] *** konsolebox joined
[10:31] *** konsolebox left
[10:33] *** konsolebox joined
[10:34] *** char_var[buffer] left
[10:37] *** sno joined
[10:38] *** konsolebox left
[10:39] *** konsolebox joined
[10:45] *** sno left
[10:46] *** konsolebox left
[10:48] *** konsolebox joined
[10:51] *** espadrine left
[10:58] *** konsolebox left
[11:00] *** konsolebox joined
[11:05] *** konsolebox left
[11:05] <DrForr> o/

[11:06] *** konsolebox joined
[11:09] <DrForr> I'm thinking about pushing a CommonMark library binding to CPAN/m.p6.org - Can someone point me to a proper module that does linking/loading?

[11:14] *** konsolebox left
[11:15] *** konsolebox joined
[11:22] *** sno joined
[11:30] *** sno left
[11:33] *** leah2 left
[11:37] *** konsolebox left
[11:38] *** konsolebox joined
[11:47] *** konsolebox left
[11:49] *** konsolebox joined
[11:50] *** leah2 joined
[11:56] *** konsolebox left
[11:58] *** konsolebox joined
[12:03] *** konsolebox left
[12:04] *** konsolebox joined
[12:08] *** konsolebox left
[12:09] *** konsolebox joined
[12:12] *** markong joined
[12:14] *** konsolebox left
[12:15] *** konsolebox joined
[12:20] *** konsolebox left
[12:21] *** konsolebox joined
[12:23] *** leah2 left
[12:33] *** leah2 joined
[12:34] *** konsolebox left
[12:35] *** konsolebox joined
[12:40] *** konsolebox left
[12:41] *** konsolebox joined
[12:46] *** konsolebox left
[12:46] *** konsolebox joined
[13:07] *** pmurias joined
[13:15] *** rindolf joined
[13:22] *** jeromelanteri left
[13:23] *** teatime_ is now known as teatime

[13:44] *** aborazmeh joined
[13:44] *** aborazmeh left
[13:44] *** aborazmeh joined
[13:54] *** sno joined
[14:01] *** aborazmeh left
[14:27] *** rindolf left
[14:45] *** rindolf joined
[14:58] <timotimo> so, what kinds of "stage parse" times are you folks getting?

[14:59] <timotimo> i'm wondering if i should look around for a better CPU in the near future or if i can wait another generation

[14:59] <timotimo> right now i'm getting 65 seconds :(

[15:00] *** pierre_ left
[15:02] <sena_kun> timotimo, for rakudo building? I stopped to use rakudobrew some time ago, but I can remember it to be around 50 seconds, like 50-51 or something like that.

[15:03] <timotimo> that was probably before specter/meltdown made everything slower :S

[15:04] <sena_kun> I am not really sure I have patches for that(yeah, I know, it really sucks) now, but yeah, before that.

[15:09] *** natrys joined
[15:11] <sena_kun> yet I have just a 7500U(note the "U"), I am sure some 7xxxHQ will grind it much faster.

[15:12] *** sharksoft joined
[15:13] <sharksoft> is it possible to have (List) squish return the count of each item it squishes? i.e. (a b b c c c).squish return something like (a 1 b 2 c 3)

[15:21] <timotimo> mine's a i5-3570

[15:22] *** eliasr joined
[15:23] <sena_kun> sharksoft, maybe you want something like Bag(https://docs.perl6.org/type/Bag)?

[15:23] <sena_kun> m: <a b b c c c>.Bag

[15:23] <camelia> rakudo-moar af4dfe827: ( no output )

[15:23] <sena_kun> m: say <a b b c c c>.Bag

[15:23] <camelia> rakudo-moar af4dfe827: OUTPUT: ¬´Bag(a, b(2), c(3))‚ê§¬ª

[15:23] <timotimo> not quite

[15:23] <timotimo> they want RLE

[15:24] <timotimo> sharksoft: http://examples.perl6.org/categories/99-problems.html - check out examples for problems 10, 11, 12, and 13

[15:24] *** dylanwh joined
[15:24] <timotimo> though i haven't looked at any of the code and can't tell you if they are idiomatic

[15:24] <sena_kun> oh, we have 99 problems solved, nice.

[15:24] *** andrzejku left
[15:25] *** Zoffix joined
[15:25] *** andrzejku joined
[15:26] <Zoffix> timotimo: on my home box it hovers around 80s (right now was 89s, but I have Fallout 4 running). On my 24core VM I usually get around upper 60s, lower 70s

[15:26] <Zoffix> 50 is pretty damn good. Wait another gen :)

[15:26] <sena_kun> o.0

[15:27] <sena_kun> I have ssd too, it can make a difference too.

[15:27] <Zoffix> I have SSD on homebox.

[15:27] *** zakharyas joined
[15:28] <sena_kun> then never mind. :)

[15:28] <sharksoft> timotimo: great, thanks!

[15:29] <timotimo> i also have an ssd

[15:29] *** zakharyas left
[15:30] *** pierre_ joined
[15:30] *** zakharyas joined
[15:33] *** zakharyas left
[15:34] *** zakharyas joined
[15:35] *** pierre_ left
[15:36] *** zakharyas left
[15:37] *** zakharyas joined
[15:37] *** khw joined
[15:38] *** skids joined
[15:42] *** zakharyas left
[15:42] *** Zoffix left
[15:42] *** zakharyas joined
[15:43] *** troys joined
[15:52] <timotimo> --optimize=0 for moarvm makes that time balloon up past 100 seconds :(

[16:04] *** M_o_C joined
[16:05] *** andrzejku left
[16:14] *** M_o_C left
[16:34] *** setty1 joined
[16:34] *** robertle joined
[16:36] *** dg left
[16:38] *** pierre_ joined
[16:38] *** AlexDaniel joined
[16:40] <MasterDuke> timotimo: fwiw, i get 80-90s on both desktop and laptop (i7-860 and i5-4200U respectively). that's with MoarVM built with --debug=3

[16:41] <MasterDuke> you should ask nine and dogbert17, i think they are getting much better numbers with their ryzens

[16:41] <timotimo> well, adding more debug doesn't make things noticably slower

[16:42] *** pierre_ left
[16:43] <MasterDuke> i think i see a difference, but very tiny, just a couple seconds

[16:45] <timotimo> huh.

[16:46] <MasterDuke> but my time are pretty variable on the laptop, it's very dependent on what sort of throttling is going on, so i could just be imaging it

[16:52] *** Khisanth left
[16:57] *** zakharyas left
[17:06] *** Khisanth joined
[17:17] *** pierre_ joined
[17:22] *** pierre_ left
[17:23] *** epony left
[17:25] *** zakharyas joined
[17:56] *** domidumont joined
[18:01] <DrForr> o/

[18:03] *** billho joined
[18:05] *** billho left
[18:29] *** pierre__ joined
[18:34] *** pierre__ left
[18:38] *** lelf joined
[18:39] *** espadrine joined
[18:40] *** espadrine left
[18:42] <dpk> p6: say "‚Ö´" ~~ /:ignorecase XII/

[18:42] <camelia> rakudo-moar f74890550: OUTPUT: ¬´Nil‚ê§¬ª

[18:42] <AlexDaniel> unidump: ‚Ö´

[18:42] <unicodable6> AlexDaniel, https://gist.github.com/6fbf90351c4c8973b958f08a1d3a29db

[18:43] <AlexDaniel> p6: say "‚Ö´" ~~ /:ignorecase ‚Öª/

[18:43] <camelia> rakudo-moar f74890550: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unrecognized regex metacharacter ‚Öª (must be quoted to match literally)‚ê§at <tmp>:1‚ê§------> 3say "‚Ö´" ~~ /:ignorecase7‚èè5 ‚Öª/‚ê§    expecting any of:‚ê§        infix stopper‚ê§¬ª

[18:43] <AlexDaniel> p6: say "‚Ö´" ~~ /:ignorecase ‚Äò‚Öª‚Äô/

[18:43] <camelia> rakudo-moar f74890550: OUTPUT: ¬´ÔΩ¢‚Ö´ÔΩ£‚ê§¬ª

[18:43] <lelf> could someone unpuzzle me http://perlpunks.de/paste/show/5a89c93e.706e.13

[18:44] <AlexDaniel> dpk: so why do you think it should match? :) or what's the question?

[18:45] <AlexDaniel> lelf: could it be this? https://docs.perl6.org/language/traps#LEAVE_phaser_may_run_sooner_than_you_think

[18:46] <dpk> i'm puzzled by what you did differently that time, other than spell xii in lowercase, which doesn't make it match when i do it

[18:46] <AlexDaniel> dpk: in your case you have three letters X I I

[18:46] <dpk> ah

[18:46] <dpk> aha

[18:47] <dpk> i don't expect it to match, i just expect the behaviour to be consistent. which it is :-)

[18:47] *** Zoffix joined
[18:49] <Zoffix> lelf: the unpuzzle is .map produces a Seq, which is evaluated lazily. You call `foo` with a code block that closes over the $out handle, foo() creates a Seq with a map call that calls that closure and returns it. MAIN then returns that Seq and it gets sunk somewhere and only *then* does the `fun($_)` stuff gets run, which is past the point of leaving MAIN and past the point of when the handle got closed. You

[18:49] <Zoffix> you prefix line #2 with `eager`, to force evaluation of the Seq right then and there: `eager <one two three>.map: { fun($_) };`

[18:49] <lelf> AlexDaniel: but‚Ä¶ it's defined in my case

[18:50] *** darutoko left
[18:50] <Zoffix> s/You you/You could/;

[18:51] <Zoffix> AlexDaniel: FWIW, I tested the `use Test; use Test` test covers the bug. I guess maybe the bot's setup just prevents exercising it (I think it doesn't precompile or something, right?)

[18:56] <lelf> Zoffix: thanks. lazy I/O punches an unsuspecting haskeller in perl6! :D

[18:58] *** zakharyas left
[18:59] <Zoffix> :D

[19:00] *** zakharyas joined
[19:00] <APic> 8===D

[19:00] <Zoffix> Nice scissors...

[19:01] <APic> *nod*

[19:01] <DrForr> They look more like haemostats :)

[19:01] *** buggable left
[19:02] *** buggable joined
[19:02] *** ChanServ sets mode: +v buggable

[19:07] <AlexDaniel> these are actually ‚Äúmeatball scissors‚Äù

[19:07] <APic> *shrug*

[19:10] <Geth> ¬¶ doc: 003d59bcbd | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[19:10] <synopsebot> Link: https://doc.perl6.org/language/traps

[19:10] <Geth> ¬¶ doc: Clarify C<¬ª> and C<map> interchangeability trap

[19:10] <Geth> ¬¶ doc: 

[19:10] <Geth> ¬¶ doc: - Use simpler example

[19:10] <Geth> ¬¶ doc: - ¬ª uses both deepmap and nodemap

[19:10] <Geth> ¬¶ doc: - Clarify why execution order is not guaranteed

[19:10] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/003d59bcbd

[19:10] <El_Che> 8<

[19:11] <DrForr> Which module should I look for in order to properly do NativeCall?

[19:12] <DrForr> (the basic calls work, I just want to mae sure I'm addressing the native($value) call.

[19:12] *** Zoffix left
[19:14] <APic> Good old Scissors.

[19:14] <AlexDaniel> DrForr: I don't think I understand the question, but what about https://github.com/Skarsnik/gptrixie ?

[19:15] <DrForr> No worries.

[19:16] <DrForr> I've wrapped libcmark (CommonMark - Markdown with a proper spec) and wanted to make sure I'm selecting the library in a portable fashion.

[19:17] <DrForr> I'm also tempted to make the library "switch over" to a pure-Perl version if it "can't find" the C library, but I'm not sure if that's the right thing to do.

[19:18] <DrForr> Er, the module.

[19:19] <APic> lol

[19:19] *** epony joined
[19:22] *** Geth left
[19:23] *** Geth joined
[19:23] *** ChanServ sets mode: +v Geth

[19:23] <DrForr> Mm, not quite what I was after.

[19:24] <DrForr> I have a 'sub cmark_render_xml(...) is native(...)' call, and I'm after a module that properly declares the library name.

[19:25] <DrForr> At the moment I'm just doing "is native('cmark')" - I just want to make sure I'm DTRT.

[19:26] <timotimo> youl'll usually want a version in there, too

[19:27] <DrForr> Righto.

[19:29] *** travis-ci joined
[19:29] <travis-ci> Doc build failed. Zoffix Znet 'Clarify C<¬ª> and C<map> interchangeability trap

[19:29] <travis-ci> https://travis-ci.org/perl6/doc/builds/343086590 https://github.com/perl6/doc/compare/ffeddb16c70c...003d59bcbde3

[19:29] *** travis-ci left
[19:30] *** espadrine joined
[19:32] *** buggable left
[19:33] <Geth> ¬¶ doc: 2940fb04e7 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[19:33] <Geth> ¬¶ doc: Fix pod error

[19:33] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/2940fb04e7

[19:33] <synopsebot> Link: https://doc.perl6.org/language/traps

[19:35] *** travis-ci joined
[19:35] <travis-ci> Doc build errored. Zoffix Znet 'Fix pod error'

[19:35] <travis-ci> https://travis-ci.org/perl6/doc/builds/343092037 https://github.com/perl6/doc/compare/003d59bcbde3...2940fb04e7ad

[19:35] *** travis-ci left
[19:35] <DrForr> Ah, $*VM.config...

[19:41] *** pierre_ joined
[19:46] *** pierre_ left
[19:53] *** Kaiepi left
[19:56] *** Geth left
[19:57] *** Geth joined
[19:57] *** ChanServ sets mode: +v Geth

[19:58] *** domidumont left
[20:01] *** zakharyas left
[20:06] *** Geth left
[20:06] *** Geth joined
[20:06] *** ChanServ sets mode: +v Geth

[20:08] *** zakharyas joined
[20:36] *** Rawriful joined
[20:41] *** aindilis left
[20:42] *** aindilis joined
[20:53] *** vike left
[20:56] *** vike joined
[21:13] <Voldenet> m: "ƒÖƒô≈º≈∫ƒá".encode("ISO-8859-2").say

[21:13] <camelia> rakudo-moar f74890550: OUTPUT: ¬´Unknown string encoding 'ISO-8859-2'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:17] <Voldenet> Is there any way to use custom encodings? The manual isn't so verbose about how would one register class doing role Encoding

[21:17] <Voldenet> as the possible encoding

[21:28] *** pmurias left
[21:34] <geekosaur> I think not currently; encodings depend on backend support (moarvm/jvm)

[21:36] <Voldenet> ugh, so the best bet would be probably passing the Buf object to C and then iconv it from/to utf8

[21:37] <Voldenet> or, since I'm working with files, just qx iconv :)

[21:42] *** sena_kun left
[21:43] *** cpage_ joined
[21:44] <jnthn> You can write encodings at Perl 6 level

[21:44] <yoleaux> 14:12Z <brrt> jnthn: I think when I split the if_o into istrue + if_i, I think i need to move at least some annotations onto the istrue, but possibly not all

[21:45] <jnthn> Granted it's not well documented yet, but it's just a case of implementing some roles and registering it

[21:45] *** cpage left
[21:45] *** cpage_ is now known as cpage

[21:49] *** Kaiepi joined
[21:55] *** zakharyas left
[21:57] *** comborico1611 joined
[21:57] <Voldenet> Hm, Encoding never requires implementing alternative-names (which is understandable)

[21:58] *** zakharyas joined
[21:59] <Voldenet> but the original method returns Empty, which isn't iterable, which gives... quite weird error

[21:59] <Voldenet> m: Encoding::Registry.register(class :: does Encoding { method name { return "test" }; method decoder {}; method encoder {}; }.new())

[21:59] <camelia> rakudo-moar f74890550: ( no output )

[22:00] <Voldenet> huh, nevermind

[22:00] <Voldenet> I'll update

[22:06] *** syntaxman left
[22:11] *** setty1 left
[22:14] *** kurahaupo_ joined
[22:15] *** kurahaupo_ is now known as kurahaupo__

[22:16] *** kurahaupo left
[22:18] *** Kaiepi left
[22:18] *** robertle left
[22:26] *** rindolf left
[22:30] *** itaylor57 left
[22:30] *** konsolebox left
[22:31] *** natrys left
[22:31] *** itaylor57 joined
[22:32] *** itaylor57 left
[22:33] *** itaylor57 joined
[22:36] *** wamba left
[22:36] *** syntaxman joined
[22:36] *** konsolebox joined
[22:45] *** epony left
[22:47] *** zakharyas left
[22:47] *** espadrine_ joined
[22:50] <comborico1611> Personal question, how many spaces do you use to ident code?

[22:50] <comborico1611> indent* 

[22:50] <Voldenet> 2

[22:50] *** espadrine left
[22:50] <comborico1611> That's what I do, but I'm not thinking it is enough now.

[22:50] <comborico1611> Tab is a no-no, right?

[22:51] <Voldenet> some people hate on tabs, but tabs also work

[22:51] <Voldenet> with added bonus that anyone can set them to their own preference

[22:52] <comborico1611> I didn't know that.

[22:52] <lizmat> fwiw, I have a *string* preference for spaces vs tabs, and 4 spaces if you want a number  :-)

[22:53] <comborico1611> lizmat: Is it because tabs can be different system-to-system or program to program?

[22:53] <comborico1611> 4 spaces looks nice.  But SO much work.

[22:53] <El_Che> tab == 4 spaces for perl 5, 6, go ; tab == 2 for ruby, yaml and puppet

[22:54] <Voldenet> comborico1611: good editor would take care of spaces anyway

[22:54] <El_Che> comborico1611: fix your editor

[22:54] <comborico1611> Hmm. Interesting El_Che

[22:54] <comborico1611> Emacs is so complicated . . .

[22:54] <comborico1611> I love it, though.

[22:54] <Voldenet> that's not how you write vim

[22:54] <El_Che> comborico1611: I use vim and intellij

[22:59] <comborico1611> Thanks for the input, guys.

[22:59] <comborico1611> I knew I could count on you.

[23:02] <Ulti> +1 for 4 space, also the argument for and against tabs is basically you dont want to mix them, and some indentation you will want to character rather than tabstop align

[23:02] <Ulti> chaining .methods for examle

[23:04] <comborico1611> Is there any way we can know which kinds of identations character space rather than tab?

[23:04] <comborico1611> which kinds of identations are better with character space

[23:05] <Ulti> yeah just look at what white space is the most frequent prefix of a line

[23:05] <Ulti> most editors that aren't trash do that sort of thing

[23:05] * lizmat puts "# vim: ft=perl6 expandtab sw=4" at the end of each file  :-)

[23:05] <Ulti> yeah editor directives too ;)

[23:05] <comborico1611> Hmm.  I'm not understanding.  I'll just need to wait till it bites me in the butt.

[23:06] <Ulti> well if you are typing spaces by hand its already biting you in the butt

[23:06] <comborico1611> Ignorance is bliss sort of thing.

[23:07] <comborico1611> Plus, I haven't been doing very much coding.

[23:07] <Ulti> comborico1611: https://www.emacswiki.org/emacs/IndentationBasics 

[23:07] <comborico1611> The book I learned from, Deitel, the author teaches to do three physical spaces. :-(

[23:07] <comborico1611> Ulti: Thanks!

[23:08] <comborico1611> Ulti: For better or worse, I have overridden the tab setting for all modes in .emacs file

[23:08] <Voldenet> ugh, how comes I can use my custom encoding to encode a string

[23:09] <Voldenet> but can't use it to decode it

[23:09] <Voldenet> http://ix.io/Mi6

[23:09] <Voldenet> I understand this should give me some silly error, but it doesn't

[23:10] *** pierre joined
[23:12] <comborico1611> El_Che: You program in all those? (Go, Ruby, . . . )

[23:14] *** pierre left
[23:15] <Voldenet> meh, I'm giving up on custom encodings for now, it sounds not very easy to implement, I'll just write a method to convert Blob into string

[23:16] <timotimo> there's still weak spots in the implementation, for example the registry isn't used everywhere and some places still only accept strings and circumvent the registry and all that

[23:17] *** Gruber joined
[23:19] *** Grrrr left
[23:20] <Voldenet> But who in the right mind would use custom encoding... ;)

[23:21] <timotimo> it'd be cool if someone could champion that issue ‚Ä¶

[23:23] <jnthn> timotimo: Where isn't it used, ooc?

[23:24] <jnthn> (I thought all the I/O handles used it, and the .encode and .decode methods too)

[23:24] <timotimo> i'm not quite sure where i encountered it; i looked like 2 months ago maybe?

[23:25] <timotimo> looks like i complained about Blob.encode

[23:26] <timotimo> decode*

[23:29] *** Rawriful left
[23:31] *** Gruber left
[23:32] <comborico1611> Thanks for the help guys.  Bye!

[23:32] *** comborico1611 left
[23:39] *** epony joined
[23:45] *** espadrine_ left
