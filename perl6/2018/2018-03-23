[00:01] <Geth> ¬¶ doc: 3d009178ce | cfa++ | doc/Language/functions.pod6

[00:01] <synopsebot> Link: https://doc.perl6.org/language/functions

[00:01] <Geth> ¬¶ doc: Tweak sub declarator example, address sink context warning.

[00:01] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/3d009178ce

[00:08] *** w_richard_w joined
[00:09] *** mcmillhj joined
[00:12] *** herby_ joined
[00:12] <herby_> o/

[00:14] <El_Che> üëã 

[00:14] *** mcmillhj left
[00:15] <herby_> dumb question: if I opened an issue on github, and the issue was closed, is there a way to re-open it if the issue persists?

[00:16] <herby_> or is it better practice to open another issue

[00:16] <El_Che> if it's the same, I would reopen it

[00:17] <herby_> k thanks

[00:18] <herby_> tyil: i failed further downstream this time in attempting to install App::Assixt.  I added it to the github issue

[00:18] <El_Che> 01:20, time to go to bed

[00:18] * El_Che away

[00:18] <herby_> night!

[00:18] <El_Che> zooof

[00:18] <El_Che> bye

[00:19] *** pierre joined
[00:20] *** markong left
[00:21] *** travis-ci joined
[00:21] <travis-ci> Doc build failed. cfa 'Tweak sub declarator example, address sink context warning.'

[00:21] <travis-ci> https://travis-ci.org/perl6/doc/builds/357163071 https://github.com/perl6/doc/compare/03a749dde206...3d009178cefb

[00:21] *** travis-ci left
[00:21] <buggable> [travis build above] ‚ò† Did not recognize some failures. Check results manually.

[00:24] *** mcmillhj joined
[00:29] *** mcmillhj left
[00:38] *** enheh_ left
[00:43] *** comborico1611 left
[00:47] *** mr_ron left
[01:01] *** mcmillhj joined
[01:05] *** mcmillhj left
[01:17] *** mcmillhj joined
[01:20] <Geth> ¬¶ doc: 6288b87341 | cfa++ | doc/Type/Range.pod6

[01:20] <synopsebot> Link: https://doc.perl6.org/type/Range

[01:20] <Geth> ¬¶ doc: Tidy Range, address sink context warning.

[01:20] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/6288b87341

[01:22] *** Kaiepi left
[01:23] *** mcmillhj left
[01:29] *** mcmillhj joined
[01:33] *** mcmillhj left
[01:34] *** mr_ron joined
[01:35] *** vcv joined
[01:37] *** travis-ci joined
[01:37] <travis-ci> Doc build passed. cfa 'Tidy Range, address sink context warning.'

[01:37] <travis-ci> https://travis-ci.org/perl6/doc/builds/357184603 https://github.com/perl6/doc/compare/3d009178cefb...6288b87341db

[01:37] *** travis-ci left
[01:41] <Geth> ¬¶ doc: 876ea071f0 | cfa++ | 3 files

[01:41] <Geth> ¬¶ doc: Skip tests for a few more sink context blocks.

[01:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/876ea071f0

[01:43] <donpdonp> after "rakudobrew build moar", perl6 --version => This is Rakudo version 2017.07-56-g12d7d5b built on MoarVM version 2017.07-15-g0729f84. implementing Perl 6.c.

[01:43] *** Kaiepi joined
[01:43] <donpdonp> yet the latest perl6 is 2018.01, and i can see 2018 versions in rakudobrew list-available.

[01:45] <cfa> a couple of things: (i) rakudobrew is no longer recommended (ii) i think you're stuck on the nom branch

[01:45] *** mcmillhj joined
[01:45] <cfa> try: rakudobrew build moar master 

[01:45] <cfa> (i think build takes vm and branch, check the help if you want to stick with rakudobrew)

[01:47] *** Herby__ joined
[01:48] *** jast joined
[01:49] <donpdonp> cfa. thx. what is recommended now?

[01:49] *** mcmillhj left
[01:50] <cfa> https://rakudup.github.io is an option

[01:50] <cfa> it'll install the latest release version rather than HEAD of master

[01:50] <MasterDuke> huggable: debs

[01:50] <huggable> MasterDuke, CentOS, Debian, Fedora and Ubuntu Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[01:50] <cfa> or, yeah, if you don't want to track the near latest, rakudo star or ^

[01:50] <AlexDaniel> donpdonp: what's your distro?

[01:51] <cfa> i'll defer to others on this

[01:51] <donpdonp> AlexDaniel: ubuntu 

[01:52] <donpdonp> i'll just keep with rakudobrew for a while longer.

[01:52] <donpdonp> i see there are debs in https://github.com/nxadm/rakudo-pkg/releases

[01:52] <donpdonp> thx all.

[01:52] <cfa> i dropped it after recent discussions here, started using stmuk_'s rakudup

[01:58] *** pierre left
[01:58] <donpdonp> rakudup: git clone https://github.com/rakudo/rakudo.git ; perl Configure.pl --gen-moar ... pretty strightforward :)

[01:59] *** jast left
[01:59] <cfa> yeah, it's boring

[01:59] <cfa> but that's the point

[01:59] <cfa> give me the latest release and zef, no fuss

[02:00] <donpdonp> nod.

[02:02] *** jast joined
[02:05] *** pierre joined
[02:05] *** vcv left
[02:11] *** w_richard_w1 joined
[02:15] *** w_richard_w left
[02:16] *** zubrat joined
[02:16] *** w_richard_w1 left
[02:17] *** mcmillhj joined
[02:18] *** jast left
[02:20] *** jast joined
[02:21] *** w_richard_w joined
[02:22] *** mcmillhj left
[02:25] *** zubrat left
[02:32] *** Herby__ left
[02:34] *** jast left
[02:34] *** mcmillhj joined
[02:35] *** khw joined
[02:37] *** jast joined
[02:37] *** kaare_ joined
[02:38] *** kaare__ left
[02:39] *** mcmillhj left
[02:39] *** lizmat left
[02:39] *** jast left
[02:40] *** lizmat joined
[02:41] *** AlexDaniel left
[02:43] *** jast joined
[02:45] *** ilbot3 left
[02:47] *** itaipu joined
[02:50] *** mcmillhj joined
[02:55] *** mcmillhj left
[02:55] *** ilbot3 joined
[02:55] *** ChanServ sets mode: +v ilbot3

[02:55] <donpdonp> now that im on 2018.03, Could not find Digest::SHA

[02:56] <donpdonp> is that part of the perl6 stdlib? im having a hard time telling.

[02:56] <timotimo> there isn't a "stdlib", there's only "what your distribution of perl6 has for you"; we only have rakudo star

[02:56] <timotimo> https://github.com/rakudo/star/tree/master/modules

[02:56] <Geth> ¬¶ doc: a6ca64e518 | cfa++ | 2 files

[02:56] <Geth> ¬¶ doc: Tidy Mixy and Rat, address sink context warnings.

[02:56] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/a6ca64e518

[02:56] <timotimo> those are the modules that ship with it, donpdonp 

[02:57] <donpdonp> thx timotimo 

[02:57] <timotimo> looks like we have only an MD5 module ... :\

[02:57] <timotimo> Should work with latest (2012.01) release of Rakudo, the "nom" branch-based version.

[02:57] <timotimo> %)

[02:58] <cfa> not finished yet, but at least example compilation warnings are pretty concise now

[02:58] <cfa> (doing this stepwise as most of these sink context warnings call out for slight rewrites)

[03:00] <donpdonp> is there a file that goes in the perl6 project folder to tell zef what packages this app needs? (eg. package.json for nodejs)

[03:01] <timotimo> yes, META6.json

[03:01] <donpdonp> cool.

[03:02] <timotimo> https://docs.perl6.org/language/modules#Preparing_the_Module - this should get you started

[03:06] *** mcmillhj joined
[03:11] *** mcmillhj left
[03:15] <donpdonp> im using Socket::Async.connect( -> $promise { ... if something goes wrong here, the exception is silently dropped

[03:15] <donpdonp> makes it impossible to debug. is there something I can do to get the app to crash or show an error?

[03:16] <timotimo> can you give a little more exact code? connect(-> $promise { }) would surely be wrong?

[03:18] <timotimo> you'll need to act on the result of the promise; if you await the promise, the await statement will throw an exception if the promise is broken

[03:18] <donpdonp> https://gist.github.com/donpdonp/4302a88d1bf6d84a6feaffc4e7e29fa5

[03:18] *** jast left
[03:19] <donpdonp> also I can change read_loop($socket ... to read_loop(Str $socket... and it doesnt complain.

[03:20] <donpdonp> i would have expected an exception since $socket isnt a Str

[03:22] *** jast joined
[03:24] <timotimo> m: my $foo = (1 / 0); say $foo.perl

[03:24] <camelia> rakudo-moar 8ce20ae1f: OUTPUT: ¬´<1/0>‚ê§¬ª

[03:24] <timotimo> m: my $foo = (1 / 0); say $foo + 1

[03:24] <camelia> rakudo-moar 8ce20ae1f: OUTPUT: ¬´Attempt to divide 1 by zero using div‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[03:24] <timotimo> that's why

[03:24] *** mcmillhj joined
[03:24] <donpdonp> ah if I .then{} after the first promise, then i see the broken promise/exception.

[03:24] <donpdonp> hmm thats interesting too.

[03:24] <donpdonp> 1/0 is valid until evaluated

[03:25] <timotimo> m: my $foo = (1 / 0); say $foo.^name

[03:25] <camelia> rakudo-moar 8ce20ae1f: OUTPUT: ¬´Rat‚ê§¬ª

[03:25] <timotimo> mhm

[03:25] <timotimo> we also have another thing called "Failure", which is a "lazy exception"

[03:26] <timotimo> you can "disarm" it by checking for its boolean value, but if you try to actually do something with it, it'll throw

[03:26] <timotimo> m: sub this-fails() { fail "oh no" }; my $result = this-fails; say $result ~ "oooh nooo"

[03:26] <camelia> rakudo-moar 8ce20ae1f: OUTPUT: ¬´oh no‚ê§  in sub this-fails at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[03:26] <timotimo> m: sub this-fails() { fail "oh no" }; my $result = this-fails; say $result ~ "oooh nooo" if $result

[03:26] <camelia> rakudo-moar 8ce20ae1f: ( no output )

[03:27] <timotimo> m: sub this-fails() { fail "oh no" }; my $result = this-fails; say $result

[03:27] <camelia> rakudo-moar 8ce20ae1f: OUTPUT: ¬´oh no‚ê§  in sub this-fails at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[03:27] <timotimo> m: sub this-fails() { fail "oh no" }; my $result = this-fails; say $result unless $result # here we check for its .Bool first

[03:27] <camelia> rakudo-moar 8ce20ae1f: OUTPUT: ¬´(HANDLED) oh no‚ê§  in sub this-fails at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[03:27] <timotimo> the check makes it "handled"

[03:27] <timotimo> anyway, gotta go, seeya and good luck!

[03:28] *** mcmillhj left
[03:29] <donpdonp> thx again!

[03:29] *** herby_ left
[03:33] <donpdonp> IO::Socket::Async.connect($host, 8333).then( -> $promise { CATCH { default { say .^name, ': ', .Str } }; ... that looks like a winner

[03:37] *** mcmillhj joined
[03:38] <donpdonp> ive got a Buf of [w,o,r,d,0,0,0,0,0] (null padding ascii string). is there an easy way to turn this into a Str that stops at the first null?

[03:39] *** ufobat___ joined
[03:42] *** mcmillhj left
[03:43] *** ufobat_ left
[03:45] *** jast left
[03:50] *** itaipu left
[03:51] <llfourn> m: say [|<w o r d>,0,0,0,0,"z"].map: { last when 0; $_  }

[03:51] <camelia> rakudo-moar 8ce20ae1f: OUTPUT: ¬´(w o r d)‚ê§¬ª

[03:52] <llfourn> m: say join "", [|<w o r d>,0,0,0,0,"z"].map: { last when 0; $_  }

[03:52] <camelia> rakudo-moar 8ce20ae1f: OUTPUT: ¬´word‚ê§¬ª

[03:52] <llfourn> donpdonp: maybe^

[03:54] <donpdonp> llfourn: nice thx.

[03:55] <Juerd> unpack Z*... p5pack probably does that

[03:55] *** mcmillhj joined
[03:56] <llfourn> m: say [|<w o r d>,0,0,0,0,"z"].grep: { not 0 ff * } # using ff

[03:56] <camelia> rakudo-moar 8ce20ae1f: OUTPUT: ¬´(w o r d)‚ê§¬ª

[03:59] <llfourn> m: say [|<w o r d>,0,0,0,0,"z"].grep: { last when 0; True } # maybe the most sensible

[03:59] <camelia> rakudo-moar 8ce20ae1f: OUTPUT: ¬´(w o r d)‚ê§¬ª

[04:00] *** mcmillhj left
[04:03] *** jast joined
[04:05] *** troys left
[04:05] <donpdonp> a.pl: use b; b.pl: module b { sub x is export..}

[04:05] *** jast left
[04:06] <donpdonp> i can say x inside a.pl, but I want to keep x inside b::x rather than being brought into a's root namespace

[04:06] <donpdonp> how can i do this?

[04:07] <donpdonp> (actual in my code its b.pm6 instead of b.pl)

[04:08] *** jast joined
[04:15] <zostay> module b { our sub x { ... } }

[04:16] <zostay> m: module b { our sub x { } }; b::x();

[04:16] <camelia> rakudo-moar 8ce20ae1f: ( no output )

[04:16] <zostay> subs are lexically scoped by default, adding our makes them package scoped

[04:19] <donpdonp> ah great. thx.

[04:20] <donpdonp> I did read the docs.perl6.org honest, but couldnt find an answer

[04:21] *** dustinm` joined
[04:21] <zostay> no problem... whether you did or not, i knew the answer to your question

[04:22] *** rindolf joined
[04:25] <zostay> If you want more information on scopes, this is probably the place to start so you can see what scopes there are (lexical vs package vs class member): https://docs.perl6.org/language/variables#Variable_Declarators_and_Scope

[04:26] *** khw left
[04:26] <zostay> The manual on subroutine declarations (https://docs.perl6.org/language/functions#Subroutines) is not totally clear by what it means by "current scope", but it means the current lexical scope. So, the same scope as my $variable

[04:27] <zostay> You can even say my sub x() { ... } to make it explicit if you want.

[04:27] *** mcmillhj joined
[04:32] *** mcmillhj left
[04:35] *** pierre left
[04:36] *** p6lert left
[04:36] *** p6lert joined
[04:39] *** mcmillhj joined
[04:40] *** skids left
[04:43] *** pierre joined
[04:43] *** cdg joined
[04:44] *** mcmillhj left
[04:48] *** cdg left
[04:48] *** pierre left
[04:55] *** mcmillhj joined
[05:00] *** mcmillhj left
[05:01] *** pierre joined
[05:03] *** cfa left
[05:06] *** jast left
[05:06] *** pierre left
[05:18] *** jast joined
[05:19] *** pierre joined
[05:24] *** pierre left
[05:28] *** mcmillhj joined
[05:32] *** mcmillhj left
[05:34] *** pierre joined
[05:35] *** sauvin_ joined
[05:38] *** wamba joined
[05:45] *** eliasr left
[05:58] *** mcmillhj joined
[06:01] *** jast left
[06:02] *** mcmillhj left
[06:03] *** jast joined
[06:15] *** JMERELO joined
[06:15] *** mcmillhj joined
[06:19] <moritz> zostay: it goes one with "By default, subroutines are L<lexically scoped|/syntax/my>. That is,

[06:19] *** mcmillhj left
[06:19] <moritz> C<sub foo {...}> is the same as C<my sub foo {...}> and is only

[06:20] <moritz> defined within the current scope.

[06:20] <moritz> looks pretty clear to me

[06:20] <JMERELO> moritz: hi. Did you see my message yesterday about docs.per6.org logs?

[06:20] *** JMERELO is now known as jmerelo

[06:21] <donpdonp> class Version { has Str $.useragent; method new(Buf $b) { $!useragent = ... #Cannot look up attributes in a btcproto::version::Version type object

[06:21] <donpdonp> what?

[06:21] *** Juancho joined
[06:23] *** jalbo_ joined
[06:26] <donpdonp> hmm. submethod BUILD.

[06:26] *** Juancho left
[06:27] *** jalbo_ left
[06:28] *** buzz_ joined
[06:29] *** buzz_ is now known as Guest75025

[06:29] *** Guest75025 left
[06:34] *** juan_ joined
[06:34] *** mcmillhj joined
[06:35] *** jast left
[06:39] <juan_> Hi there!

[06:39] *** mcmillhj left
[06:40] *** juan_ is now known as jalbo_

[06:41] *** wamba left
[06:41] <Geth> ¬¶ doc: ed2e8ececb | (JJ Merelo)++ | doc/Language/variables.pod6

[06:41] <synopsebot> Link: https://doc.perl6.org/language/variables

[06:41] <Geth> ¬¶ doc: Fixes index entries for $, closes #1861

[06:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ed2e8ececb

[06:42] <jmerelo> jalbo_: hi!

[06:45] *** mcmillhj joined
[06:49] *** guest90000 joined
[06:50] *** mcmillhj left
[06:51] <jalbo_> Any recommendations for a gentle introduction to Perl 6, as a newbie? Little experience in web development. Thanks in advance! 

[06:53] *** jast joined
[06:54] <Juerd> jalbo_: Perl 6 is not a web specific thing and as far as I know, there's no introduction course that focusses on that.

[06:54] <jmerelo> jalbo_: have you tried http://perl6intro.com/?

[06:54] <Juerd> jalbo_: Do you have any experience with other programming languages or is Perl 6 your first language?

[06:55] <jmerelo> jalbo_: this presentation (in Spanish) https://ramiroencinas.com/docs/perl6intro-slides/#/ deals with Perl 6 for web development using a specific module

[06:58] <jalbo_> @Juerd: Basic JavaScript, that's all.

[07:01] *** darutoko joined
[07:01] <jalbo_> @jmerelo: Yes, I've tried http://perl6intro.com/. Very nice place to start with, very friendly in my opinion. Just thinking about books, videos... I suppose there isn't a lot of resources at the moment.

[07:02] <jalbo_> jmerelo: And thanks for your advice. üôÇ

[07:03] <jmerelo> jalbo_: There are 7 books now... https://perl6book.com/ 

[07:04] *** mcmillhj joined
[07:04] <jmerelo> jalbo_: some videos too: https://www.youtube.com/results?search_type=search_videos&search_query=perl6+&search_sort=relevance&search_category=0&page=

[07:04] *** pierre left
[07:04] <jmerelo> jalbo_: this one is mine, and it's focused on web development https://www.youtube.com/watch?v=zmQ3FQCIXmk

[07:05] *** pierre joined
[07:08] <jmerelo> jalbo_: Perl6 is for the server, rather like Node. Not for the frontend. Suppose you know that already.

[07:08] *** darutoko left
[07:08] <jalbo_> Well, it seems I am a bit misinformed. Thanks again for all the information and @jmerelo 

[07:09] <jalbo_> jmerelo: Yes, I know this.

[07:09] *** mcmillhj left
[07:09] <jmerelo> jalbo_: if you have some specific thing in mind, just ask.

[07:09] <Ulti> lizmat: just stumbled across a nice "in comments" for you https://www.reddit.com/r/programming/comments/86cobk/ruby_creator_matz_yukihiro_matsumoto_discusses/dw4n5fx

[07:10] *** pierre left
[07:10] *** lowbro joined
[07:10] *** lowbro left
[07:10] *** lowbro joined
[07:10] *** domidumont joined
[07:13] <jalbo_> jmerelo: üëç. From your personal experience/ point of view is Perl 6 a good choice for a beginner? Just your opinion, no worries.

[07:17] *** espadrine left
[07:17] *** guest90000 left
[07:20] *** jast left
[07:24] *** mcmillhj joined
[07:28] *** mcmillhj left
[07:32] *** jmerelo left
[07:41] *** mcmillhj joined
[07:42] *** jast joined
[07:45] *** mcmillhj left
[07:49] *** jast left
[07:54] *** mcmillhj joined
[07:56] *** jast joined
[07:59] *** mcmillhj left
[08:01] *** jast left
[08:10] *** robertle joined
[08:10] *** sauvin_ is now known as bocaneri

[08:11] *** jabits joined
[08:11] *** jast joined
[08:12] *** mcmillhj joined
[08:13] *** domidumont left
[08:14] *** domidumont joined
[08:16] *** jabits left
[08:17] *** mcmillhj left
[08:18] *** wamba joined
[08:20] *** abraxxa joined
[08:20] *** jast left
[08:27] *** mcmillhj joined
[08:32] *** mcmillhj left
[08:35] *** pierre_ joined
[08:35] *** jast joined
[08:44] *** cdg joined
[08:44] *** jast left
[08:46] <lizmat> notable6 weekly https://www.reddit.com/r/programming/comments/86cobk/ruby_creator_matz_yukihiro_matsumoto_discusses/dw4n5fx

[08:46] <lizmat> notable6: weekly https://www.reddit.com/r/programming/comments/86cobk/ruby_creator_matz_yukihiro_matsumoto_discusses/dw4n5fx

[08:46] <notable6> lizmat, Noted!

[08:47] <lizmat> Ulti: thanks!

[08:47] *** mcmillhj joined
[08:49] *** cdg left
[08:52] *** mcmillhj left
[08:52] *** parv joined
[08:54] *** mcmillhj joined
[08:58] *** mcmillhj left
[09:01] *** jast joined
[09:05] *** scimon joined
[09:07] <scimon> Hey everyone. Not been at my best for a few weeks but gave a talk at LPM last night going into (excruciating and hopefully accurate) detail on Perl6 signatures.

[09:08] <scimon> Turns out I can cover all the rules for signatures in 15 minues giving me 5 minutes for my 2 bonus slides. Type checking and Multi methods.

[09:08] <scimon> I think I may need to give the whole talk in Glasgow.

[09:10] <moritz> and here I contemplated writing a whole book on that subject :-)

[09:10] <scimon> It probably viable. 

[09:11] <scimon> To go into the details.

[09:11] <moritz> if the whole content fits into 20 minutes, a book might be overkill :-)

[09:11] <scimon> That is literally just signatures.

[09:12] <scimon> And there are probably details I missed.

[09:14] <robertle> while we are talking about signatures: yesterday I commented out some code and ended up with an empty block in a Lock.protect:

[09:14] <robertle> m: my $l = Lock.new; $l.protect({});

[09:14] <camelia> rakudo-moar c43817ace: OUTPUT: ¬´Attempt to unlock mutex by thread not holding it‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:15] <robertle> the error message confused me, but lizmat helpfully pointed out that this isn't an empty block, but a hash. great so far

[09:15] <robertle> however: 

[09:15] <robertle> m: sub mp(&c) {&c()}; mp({});

[09:15] <camelia> rakudo-moar c43817ace: OUTPUT: ¬´Type check failed in binding to parameter '&c'; expected Callable but got Hash (${})‚ê§  in sub mp at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:15] *** jast left
[09:16] <robertle> so why do I not get the same error message for teh call to Lock.protect?

[09:16] <robertle> m: use nqp; class SLC { method test(SLC:D: &c) { nqp::decont(c()); } }; my $sl = SLC.new; $sl.test({});

[09:16] <camelia> rakudo-moar c43817ace: OUTPUT: ¬´Type check failed in binding to parameter '&c'; expected Callable but got Hash (${})‚ê§  in method test at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:16] <robertle> that pretty much is a copy of the Lock.protect signature and setup...

[09:19] *** w_richard_w left
[09:19] *** pierre_ left
[09:20] <scimon> First up... I knew I missed something when I covered sigils (I did a brief mention of them but forgot &). Is protect a multi method? Might there be a different one you're hitting? 

[09:20] <robertle> not a multi

[09:20] *** pierre_ joined
[09:20] <scimon> (Yeah just seen the docs)

[09:21] <scimon> I'd need to look at the code for it then. 

[09:21] <lizmat> robertle: did you make a GH issue for it ?

[09:22] <scimon> But I think it's quickly moving beyond the area I'd be able to help with.

[09:22] <robertle> lizmat: nope, not sure it's an issue or just me not understanding

[09:22] <lizmat> it is an issue

[09:22] <robertle> but it is very surprising...

[09:22] <robertle> ok, will create ticket

[09:23] <lizmat> m: sub a(&a) { }; a {} # this should be the error

[09:23] <camelia> rakudo-moar c43817ace: OUTPUT: ¬´Type check failed in binding to parameter '&a'; expected Callable but got Hash (${})‚ê§  in sub a at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:24] <robertle> agreed, that's what I would expect and it would also be much clearer

[09:24] *** pierre_ left
[09:25] *** pierre_ joined
[09:29] *** Ven`` joined
[09:29] <robertle> R#1644, let me know if it needs more detail

[09:29] <synopsebot> R#1644 [open]: https://github.com/rakudo/rakudo/issues/1644 Lock.protect({}) fails, but with surprising message

[09:34] *** Actualeyes left
[09:34] <lizmat> m: class A { method a(A:D: &a) {} }; A.new.a({})   # should be the error

[09:34] <camelia> rakudo-moar c43817ace: OUTPUT: ¬´Type check failed in binding to parameter '&a'; expected Callable but got Hash (${})‚ê§  in method a at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:35] <lizmat> m: class A { method a(A:D: &a) { LEAVE die } }; A.new.a({})   # the plot thickens!

[09:35] <camelia> rakudo-moar c43817ace: OUTPUT: ¬´Died‚ê§  in method a at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:36] <lizmat> apparently the LEAVE phaser is executed even though the method itself never got passed parameter binding

[09:39] <robertle> ah! great find!

[09:39] <robertle> isn't it also interesting that this apparently happens before the other error (siganture mismatch)?

[09:40] <lizmat> m: sub a(&a) { LEAVE die }; a

[09:40] <camelia> rakudo-moar c43817ace: OUTPUT: ¬´Died‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:40] <lizmat> now that one is really strange, because that should  be a compile time error

[09:40] *** parv left
[09:41] <lizmat> m: sub a($a) { }; a()   # like so

[09:41] <camelia> rakudo-moar c43817ace: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Calling a() will never work with declared signature ($a)‚ê§at <tmp>:1‚ê§------> 3sub a($a) { }; 7‚èè5a()   # like so‚ê§¬ª

[09:41] <lizmat> m: sub a(&a) { }; a()   # with & it's a runtime error ?

[09:41] <camelia> rakudo-moar c43817ace: OUTPUT: ¬´Too few positionals passed; expected 1 argument but got 0‚ê§  in sub a at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:41] <lizmat> hmmm...

[09:41] <lizmat> the latter probably warrants a separate issue

[09:42] * lizmat needs to be afk for a bit, and then for a bit longer

[09:43] <scimon> https://www.slideshare.net/SimonProctor8/perl6-signatures : The slides from my talk :)

[09:44] <masak> scimon++ # nice!

[09:47] *** sena_kun joined
[09:49] <lizmat> notable6: weekly https://www.slideshare.net/SimonProctor8/perl6-signatures

[09:49] <notable6> lizmat, Noted!

[09:52] <scimon> (Hopefully there will be a video at some point)

[09:56] <stmuk_> scimon++

[09:56] *** nebuchadnezzar joined
[10:01] <buggable> New CPAN upload: App-Assixt-0.2.3.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/App-Assixt-0.2.3.tar.gz

[10:12] <lizmat> afk&

[10:12] *** lizmat left
[10:32] *** nebuchadnezzar left
[10:38] *** nebuchadnezzar joined
[10:39] *** eliasr joined
[10:40] *** ChoHag left
[10:47] *** ChoHag joined
[10:50] *** pierre_ left
[11:00] *** Voldenet left
[11:05] *** Voldenet joined
[11:05] *** Voldenet left
[11:05] *** Voldenet joined
[11:07] *** Ven`` left
[11:10] *** enheh_ joined
[11:17] *** ChoHag left
[11:32] *** darutoko joined
[11:34] *** kurahaupo left
[11:39] *** ChoHag joined
[11:41] *** darutoko left
[11:43] *** markong joined
[11:50] *** athenot left
[12:00] <DrForr> Today's weird idea: Data::Schema, like Test::is-deeply but just checks the layout, not nitpicking over the exact contents. I think is-deeply() has some flags to loosen matching, but this is more along the lines of JSON::Schema.

[12:06] *** vcv joined
[12:07] <masak> DrForr: sounds nice.

[12:09] *** jast joined
[12:10] *** nebuchad` joined
[12:11] *** itaipu joined
[12:11] *** nebuchadnezzar left
[12:14] *** nebuchad` left
[12:15] *** lizmat joined
[12:16] <El_Che> huggable: help

[12:16] <huggable> El_Che, nothing found

[12:16] <El_Che> How can I update huggable?

[12:16] <El_Che> huggable: debs

[12:16] <huggable> El_Che, CentOS, Debian, Fedora and Ubuntu Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[12:16] <El_Che> ^--- outdated

[12:16] *** nebuchadnezzar joined
[12:17] *** vcv left
[12:18] *** vcv joined
[12:18] *** Actualeyes joined
[12:21] *** wamba left
[12:27] *** abraxxa left
[12:28] *** cdg joined
[12:28] *** abraxxa joined
[12:29] *** abraxxa left
[12:30] *** abraxxa joined
[12:45] <tbrowder_> .tell AlexDaniel it looks like the two main toaster hangers right now are OO::Actors and Test::Scheduler, both of which hang while testing in a local repo with the latest stable Rakudo. The other two hangers pass local testing.

[12:45] <yoleaux> tbrowder_: I'll pass your message to AlexDaniel.

[12:53] *** sena_kun left
[12:56] *** Ven`` joined
[12:56] *** mcmillhj joined
[12:59] *** AlexDaniel joined
[12:59] *** vcv left
[13:00] *** herby_ joined
[13:00] <herby_> o/

[13:01] <buggable> New CPAN upload: ANTLR4-Grammar-0.1.1.tar.gz by JGOFF https://cpan.metacpan.org/authors/id/J/JG/JGOFF/Perl6/ANTLR4-Grammar-0.1.1.tar.gz

[13:15] *** wamba joined
[13:17] *** vcv joined
[13:22] *** athenot joined
[13:26] *** darutoko joined
[13:34] *** Voldenet left
[13:35] *** lizmat left
[13:37] *** cfa joined
[13:39] *** Voldenet joined
[13:39] *** Voldenet left
[13:39] *** Voldenet joined
[13:44] <El_Che> jnthn: Cro question. I have a yaml config with a higher level abstraction of routes and e.g. the external commands to call. In this file I define the services to call (/$service) and the parameters it can have (/$service?group=$group&format=$nagios). Now I want to dynamically create routes from this info. I see routes() is a Cro::HTTP::Router::RouteSet under the covers, but everything in this class seems to 

[13:44] <El_Che> be private. Is there an straightforward way to do what I want?

[13:46] <jnthn> In HEAD (not yet released) a few things have been made public to facilitate doing such things

[13:47] <El_Che> that great news (the HEAD thing and that you understand the question :) )

[13:47] <[Coke]> jnthn++

[13:47] <jnthn> In part 'cus I've been (privately, no details yet) working on one

[13:47] <El_Che> I'll put this smallish project in the cooler, until that is released

[13:47] <El_Che> looking forward to it

[13:47] <[Coke]> I somehow got signed up to do a talk about Perl 6 at TPC.

[13:48] <jnthn> Though note that a RouteSet is just a Cro::Transform, and you can write your own route processing if that's easier

[13:48] <jnthn> And then mount it at a particular base path using `delegate` inside of a `route` block

[13:49] <El_Che> well, if what you're adding is good sugar I'll wait for that

[13:49] <El_Che> if not I'll go the transform way

[13:50] <El_Che> I just wanted to write something very small typical written in go in perl6+cro

[13:51] <El_Che> I want to move some nagios checks (that need lots of code and secrets) on the nagios machine (handled by an other team) to a small rest service

[13:51] <El_Che> so nagios just queries the rest service to get a status

[13:51] <El_Che> and the perl6 program does the real tests

[13:51] *** darutoko- joined
[13:53] <cfa> [Coke]: good stuff :)

[13:54] *** darutoko left
[13:55] *** wamba left
[13:57] *** epony left
[13:57] *** darutoko- left
[13:57] *** darutoko- joined
[13:58] <El_Che> jnthn: you're making us all very curious :)

[14:02] *** darutoko- left
[14:08] *** epony joined
[14:10] <Geth> ¬¶ doc: e96651e910 | cfa++ | doc/Language/py-nutshell.pod6

[14:10] <synopsebot> Link: https://doc.perl6.org/language/py-nutshell

[14:10] <Geth> ¬¶ doc: Tidy Python list comprehensions, address sink context warnings.

[14:10] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e96651e910

[14:12] <herby_> tyil: it installed successfully :)

[14:12] *** skids joined
[14:12] *** khw joined
[14:14] <Geth> ¬¶ doc: 9db0df2854 | cfa++ | doc/Language/rb-nutshell.pod6

[14:14] <Geth> ¬¶ doc: Skip test for sink context colon pair demonstration.

[14:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/9db0df2854

[14:14] <synopsebot> Link: https://doc.perl6.org/language/rb-nutshell

[14:19] <zostay> moritz: thx for the correction, i didn't see that on my quick skim last night ¬Ø\_(„ÉÑ)_/¬Ø

[14:20] <vcv> Has anyone run into this test failure with IO::Socket::Async::SSL in ciphers.t? --> # Failed test 'Connection ok when ciphers match up'

[14:20] <vcv> On macOS if that makes a difference

[14:20] <vcv> # at t/ciphers.t line 27 # Server did not provide a certificate to verify

[14:29] <jnthn> vcv: Yes, saw it on Travis OSX of something that depends on that module just yesterday, but don't have access to OSX to go debugging (nor time right now)

[14:29] <vcv> Ok thanks.  I'll dig in and see if I can at least get more information

[14:29] <jnthn> Though it looked like some cipher suite used in the tests maybe isn't available there

[14:30] <jnthn> In a pinch we could skip that test file on OSX

[14:36] *** epony left
[14:37] *** cdg left
[14:37] *** mcmillhj left
[14:40] *** mcmillhj joined
[14:40] *** epony joined
[14:41] *** comborico1611 joined
[14:52] *** herby_ left
[14:58] *** abraxxa left
[15:01] *** thowe left
[15:15] *** mr_ron left
[15:18] *** mr_ron joined
[15:31] <[Coke]> I have an osx box, what can I do?

[15:34] <vcv> Can you see if the  IO::Socket::Async::SSL tests fail for you?

[15:36] <Ulti> ooc is there a nice way to treat a string as an IO handle in Perl 6?

[15:37] *** cdg joined
[15:37] <vcv> $string.IO ?

[15:38] <timotimo> no, that treats the string as a filename

[15:39] *** kaare_ left
[15:40] <Ulti> https://www.reddit.com/r/programming/comments/86hoz5/alan_kays_answer_to_why_is_functional_programming/dw5dyk5/?sort=confidence&subredditName=programming&confidence=confidence is hacky and based on the docs but you do actually create a temp file

[15:42] <[Coke]> vcv - wonder if that's the one that's been failing forever. :)

[15:43] *** cdg left
[15:43] <[Coke]> ah, probably not, but testing...

[15:48] *** cdg joined
[15:48] *** kurahaupo joined
[15:48] *** wamba joined
[15:56] *** lowbro left
[15:56] *** mcmillhj left
[16:03] *** troys joined
[16:06] <[Coke]> vcv: https://gist.github.com/coke/ad2ed1cb06897ab43c45b40a5c3bca53

[16:06] *** stmuk joined
[16:06] *** troys left
[16:07] <[Coke]> that's on 2018.02.1-164-g57af8b847

[16:09] *** stmuk_ left
[16:12] <ufobat___> jnthn, we had a little chat a while ago regarding a feature request of mine for IO::Async::SSL. maybe you can remember: that's what i am looking for: https://github.com/sergot/openssl/pull/57

[16:14] *** troys joined
[16:17] *** gabiruh joined
[16:18] <jnthn> ufobat___: ah, nice. Unfortunately I'm not likely to have time to help much on that for a few weeks

[16:20] <ufobat___> thats okay :-)

[16:23] *** mcmillhj joined
[16:23] *** cdg left
[16:26] *** FROGGS joined
[16:27] <[Coke]> vcv - I'm failing even on t/bad-incoming.t

[16:27] <ufobat___> oh is there a perl6 equivalent of https://play.rust-lang.org/

[16:27] <AlexDaniel> huggable: try

[16:27] <huggable> AlexDaniel, https://f.perlbot.pl/#perl6 https://tio.run/#perl6 https://glot.io/new/perl6 https://ideone.com/

[16:28] *** mr_ron left
[16:28] <AlexDaniel> ufobat___: ‚Üë

[16:28] *** mcmillhj left
[16:29] <vcv> odd, i dont get those.

[16:30] <vcv> may be a dependency i already had installed via homebrew

[16:38] <ufobat___> there is an example page on www.perl6.org - woudn't it awesome if you view those example in such a "play" window so anyone can execute it and toy around with it

[16:38] <AlexDaniel> ufobat___: yes

[16:39] <ufobat___> i think it is like that in the rust book

[16:39] <AlexDaniel> ufobat___: in fact, snippets on rakudo.party do just that (using glot.io API if I recall correctly)

[16:39] <AlexDaniel> ufobat___: e.g. see https://rakudo.party/post/Perl-6-Seqs-Drugs-and-Rock-n-Roll

[16:40] <AlexDaniel> what I'm thinking also‚Ä¶ is that perl6.org is maybe not the only place we should be doing that

[16:40] <AlexDaniel> docs.perl6.org is where it's really needed IMO

[16:41] <ufobat___> would be super cool

[16:41] <AlexDaniel> ufobat___: can you file some tickets asking for these changes?

[16:41] *** robertle left
[16:41] <ufobat___> sure, but where?

[16:42] <AlexDaniel> ufobat___: https://github.com/perl6/perl6.org/issues and https://github.com/perl6/doc/issues/

[16:42] <ufobat___> will do :-)

[16:43] *** jmerelo joined
[16:43] <AlexDaniel> jmerelo: fwiw logs of this channel are available at https://irclog.perlgeek.de/perl6/today

[16:44] <AlexDaniel> jmerelo: and there was an interesting discussion a few moments ago: https://irclog.perlgeek.de/perl6/2018-03-23#i_15957524

[16:45] <jmerelo> AlexDaniel: getting there. Thanks!

[16:47] *** mr_ron joined
[16:47] *** mcmillhj joined
[16:47] *** domidumont left
[16:49] <jmerelo> AlexDaniel: waiting for those issues :-)

[16:51] <jmerelo> I tried to add POD6 to GitHub https://github.com/github/markup/pull/1173

[16:51] <jmerelo> It's been there for 11 days already. Wonder if you can ping the PR or whatever to encourage them to merge it.

[16:53] <jmerelo> Also this one to Linguist, the GitHub language recognizer https://github.com/github/linguist/pull/4066 That was related to the last one. Wonder if you can ping it or something, there's been no answer. 

[16:57] <jmerelo> AlexDaniel: any idea of how that is done? Is it through glot.io?

[17:01] *** scimon left
[17:02] <jmerelo> AlexDaniel: also all examples in there have the .pl extension. And it fails in the latest Rakudo... 

[17:02] <jmerelo> https://travis-ci.org/perl6/perl6-examples/jobs/349071604

[17:02] <jmerelo> It can be done, of course. It even _should_ be done. However...

[17:03] *** enheh_ left
[17:04] *** pharv joined
[17:04] <AlexDaniel> jmerelo: oh wow that's pretty cool

[17:04] <El_Che> jmerelo: are you taking requests, nowadays? :)

[17:04] <jmerelo> El_Che: I'm DJing now, so I guess that's what I've got to do.

[17:05] * El_Che would like a more verbose NativeCall doc :)

[17:05] <jmerelo> El_Che: I'm only taking requests through the issue system, of course :-)

[17:06] <El_Che> of course you do :)

[17:06] <jmerelo> AlexDaniel: you didn't allow me to close that issue, so one's got to do what one's got to do ...

[17:06] <AlexDaniel> jmerelo: yes :D

[17:07] <AlexDaniel> jmerelo: rakudo.party is open-source, so maybe see https://github.com/zoffixznet/perl6.party ?

[17:07] <AlexDaniel> (on how to make snippets executable)

[17:08] <jmerelo> AlexDaniel: It's not obvious looking at the HTML source. Nor the repo. But I guess it must be there... glot.io has got an API, also, which can be used. Either way we'll have to use a hosted service.

[17:09] <AlexDaniel> jmerelo: that's an OK temporary solution IMO

[17:10] <AlexDaniel> simcop2387: do you have any API that we can hook to use https://f.perlbot.pl/#perl6 ?

[17:10] <AlexDaniel> simcop2387: or, more generally, what would you recommend us if we want to make perl¬†6 snippets on the docs website executable?

[17:11] <jmerelo> AlexDaniel: problem is, it would mean starting a pretty good yak shaving session. Doing that for docs.perl would involve heavy editing of htmlify.p6, which is in need of a rewrite already. But doing that would require a grant all by itself...

[17:11] <simcop2387> AlexDaniel: https://github.com/perlbot/perlbuut-pastebin/wiki/Paste-API-v1 there's a paste api.  it's not documented but you can also hit the endpoint that the check eval button hits to run things directly too

[17:12] *** comborico1611 left
[17:12] <jmerelo> AlexDaniel: I kind of understand it at a certain level right now, but at another level it's like trying to make a potato bag even. When you push something here, something pops up out there.

[17:13] <AlexDaniel> jmerelo: do we? IMO it can be a pure javascript thingie

[17:13] <jmerelo> AlexDaniel: editing is JS, but then you have to evaluate it somewhere, run the script and get the result back.

[17:13] <AlexDaniel> yes, in JS?

[17:14] <jmerelo> AlexDaniel: Javascript, I mean. Editing is pure front-end, but then running perl6 has to be done on the back end somewhere.

[17:14] <AlexDaniel> jmerelo: the idea is that the user can edit the snippet on the fly, right in the browser, hit the button and get a different result

[17:15] <AlexDaniel> jmerelo: there's nothing that has to be changed in htmlify for that as far as I can see

[17:15] *** robertle joined
[17:15] <AlexDaniel> maybe just adding a css class for code blocks, but that's it

[17:15] <jmerelo> AlexDaniel: there's *always* something that has to be changed in htmlify. 

[17:15] * AlexDaniel doesn't get it

[17:16] <tbrowder_> anyone going to TPC NA plan to have a bug-busting party?

[17:17] <jmerelo> AlexDaniel: Well, first you would have to differentiate between Perl6 and non-perl6 code. Then there are code snippets whose test is skipped, which we would probably not want to have people editing... I don't know. If it can be done easily by just adding some JS, let's do that.

[17:18] *** pharv left
[17:18] <AlexDaniel> jmerelo: OK I see, I guess you're right

[17:18] <jmerelo> tbrowder_: my initial intention was going there, I even submitted a tutorial. But then I checked back when the tutorial was actually accepted and flights had gone up to ~ 2K$. So I'd happily attend the party... remotely.

[17:19] <AlexDaniel> jmerelo: exposing the language of the snippet as css class would be useful for other things too, I think

[17:19] <jmerelo> AlexDaniel: there's an issue, and let's give it a try anyway. Maybe I fix links or whatever and all of a sudden that particular feature starts to work. You never know with htmlify

[17:20] <AlexDaniel> jmerelo: I'm thinking of https://github.com/perl6/doc/issues/1430

[17:20] *** epony left
[17:21] <tbrowder_> jmerelo: the only thing stopping me from attending at the moment is my grandson‚Äôs birthday on 19 jun, remote attendance would be cool

[17:22] <jmerelo> AlexDaniel: OK, let's see what we can do. Highlighting is done in coffeescript, which is my second least favorite beverage and language combination.

[17:23] <AlexDaniel> :) cool

[17:24] *** herby_ joined
[17:24] <jmerelo> tbrowder_: let's set something up then. Would you want to focus on the documentation? 

[17:25] <jmerelo> I mean, I'd like to focus on the documentation :-)

[17:27] *** xinming_ left
[17:29] <AlexDaniel> some performance and reliability fixes would be nice though :P

[17:30] <tbrowder_> i‚Äôm working on pod as slang (VERY slowly), but bug smashing can be fun with company

[17:30] <tbrowder_> of core devs for advice

[17:30] <jmerelo> AlexDaniel_: of course, but I'm not there yet... 

[17:31] <jmerelo> tbrowder_: Of course :-) I'll be definitely attending TPC in Glasgow. We can set aside the day after for a bit of hacking, if you want.

[17:32] *** domidumont joined
[17:32] *** epony joined
[17:32] <AlexDaniel> jmerelo: by the way it's nice to have you around :) you're really bringing life into our slightly stagnating doc repo

[17:33] <AlexDaniel> thanks

[17:34] <jmerelo> AlexDaniel: thanks, I'm blushing :-). I'm learning a lot from a lot of great people, including you, so I'm getting more than I'm putting in, I guess. But I hope I can be of help...

[17:36] <jmerelo> AlexDaniel: I'd like to focus on the oldest issues... What do you think about this one? https://github.com/perl6/doc/issues/246

[17:37] <jmerelo> AlexDaniel: you did some work on that, what was the main problem there?

[17:37] <AlexDaniel> jmerelo: oh geez, that one‚Ä¶ I've spent a few hours trying to get it to work during one of the squashathons

[17:37] <AlexDaniel> jmerelo: the problem is that graphviz itself creates this unreadable mess, and it seems like there's no way to force it to produce something meaningful

[17:37] <AlexDaniel> unless you force nodes into specific ranks

[17:38] <jmerelo> AlexDaniel: Does that happen when there's more than a certain amount of nodes? Or when?

[17:39] <AlexDaniel> jmerelo: yea, when there are lots of nodes in the same rank

[17:39] <AlexDaniel> jmerelo: like https://docs.perl6.org/images/type-graph-Metamodel%3A%3AMethodContainer.svg

[17:39] <jmerelo> AlexDaniel: I see. 

[17:39] <AlexDaniel> the graph is correct, but it's just too wide

[17:39] *** pharv joined
[17:39] <El_Che> Just an idea I know it can't be done, becuase of the lang <-> implementation in perl 6. In the Go doc, everything links to the source code of the implementation. That way it's easy to understand how things work when the doc is lacking

[17:39] <El_Che> (more of a musing)

[17:40] <AlexDaniel> El_Che: it can be done, we just have different concepts here

[17:40] <AlexDaniel> El_Che: in our case we should be linking to roast

[17:40] <AlexDaniel> so instead of seeing how it's done you should see what it should do

[17:40] <El_Che> we also have this all mental overhead of nqp

[17:40] <jmerelo> AlexDaniel: you can go ahead and add this thing https://github.com/perl6/doc/issues/1505. It's just local, and as you say it will help debug. 

[17:41] <AlexDaniel> jmerelo: ok will do now

[17:41] <jmerelo> El_Che: I guess if we did that we would point to the Synopsis. 

[17:41] <jmerelo> AlexDaniel: Thanks!

[17:41] <AlexDaniel> jmerelo: no, to roast

[17:41] <cfa> hi jmerelo 

[17:42] <AlexDaniel> jmerelo: roast is our spec, synopsis are historical speculations

[17:42] <El_Che> jmerelo: a too high level of abstraction

[17:42] <jmerelo> AlexDaniel: right. Pointing to the source code would probably only confuse people. 

[17:43] <jmerelo> cfa: hi!

[17:43] <El_Che> hence: just a musing

[17:43] <AlexDaniel> roast is the only promise we have to our users, in a way

[17:43] <AlexDaniel> everything else can be changed without notice, and therefore is insignificant

[17:45] <jmerelo> AlexDaniel: El_Che: code lines can also change, anyhow. Go is probably written mostly in Go, right? Not in not-quite-Go? 

[17:45] <jmerelo> How would you call not-quite-go? I'm-right-outta-my-door? not-really-stopped? 

[17:45] <AlexDaniel> jmerelo: well, if we really wanted to do that, we'd probably have some markers for docs‚Ä¶ but we want to do that at all :)

[17:45] <AlexDaniel> don't*****

[17:46] <AlexDaniel> although maybe some markers in roast can do the trick?

[17:46] <AlexDaniel> dunno

[17:46] <jmerelo> AlexDaniel: definitely we don't want to do that.

[17:47] <jmerelo> AlexDaniel: what I do sometimes is to just search GitHub for where functions are defined. I wouldn't be too difficult to link index entries to a generic search in roast that would include the stuff being defined. Don't know if that would help.

[17:50] <El_Che> jmerelo: go is written in go, yes

[17:50] <El_Che> and the doc corresponds to a released version

[17:50] <jmerelo> El_Che: there you Go :-)

[17:51] *** mcmillhj left
[17:54] *** pharv left
[17:55] *** cognominal joined
[17:55] *** mcmillhj joined
[18:03] *** pharv joined
[18:12] *** pharv left
[18:12] <jmerelo> AlexDaniel: did you try neato? It does not look so bad...

[18:12] *** pharv joined
[18:12] <AlexDaniel> jmerelo: this was with neato I think: http://klonk.bruhat.net/graphviz.png

[18:13] <AlexDaniel> but I'm not sure

[18:13] <jmerelo> AlexDaniel: I take that back. Looks less flat, but horrible.

[18:13] <jmerelo> AlexDaniel: that one does not look so bad...

[18:14] <AlexDaniel> jmerelo: twopi: https://files.progarm.org/grapho.svg circo: https://files.progarm.org/graphH.svg

[18:15] <jmerelo> AlexDaniel: that one does not look so bad...

[18:15] <jmerelo> AlexDaniel: yep, that's neato with overlap=false.

[18:16] <jmerelo> let me know what you think of this one...

[18:17] <AlexDaniel> jmerelo: ideally it should use the default renderer and just put them into separate ranks

[18:17] <AlexDaniel> but at this point any solution will do, I think

[18:17] <AlexDaniel> neato is fine as long as we don't use it for ‚Äúnormal‚Äù graphs

[18:17] <Geth> ¬¶ doc: facc0a65f2 | (JJ Merelo)++ | lib/Perl6/TypeGraph/Viz.pm6

[18:17] <Geth> ¬¶ doc: Changing dot to neato

[18:17] <Geth> ¬¶ doc: 

[18:17] <Geth> ¬¶ doc: And also avoiding overlap. Ideally, it should help with #246. If it's

[18:17] <Geth> ¬¶ doc: OK with everyone, close it.

[18:17] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/facc0a65f2

[18:18] <AlexDaniel> jmerelo: OK let it render the docs, but you'll see that it's not going to look very good

[18:18] <jmerelo> AlexDaniel: theoretically, neato is for non-directed and dot for directed.

[18:19] <jmerelo> AlexDaniel: we can try and look at the files to see if it's going to be "flat" and switch to neato.

[18:19] <AlexDaniel> yea

[18:19] <AlexDaniel> that should resolve the issue temporarily, I think

[18:19] <AlexDaniel> until someone comes up with a better idea

[18:20] <jmerelo> Anyway, take a look at using neato everywhere. Maybe it will solve other issues, too. It won't look so "hierarchical"

[18:20] <AlexDaniel> this graph is beautiful currently: https://docs.perl6.org/type/Str#Type_Graph

[18:21] <AlexDaniel> I bet it's going to look like shit with neato :)

[18:21] *** enheh_ joined
[18:22] *** cdg joined
[18:22] <jmerelo> AlexDaniel: shit is in the eye of the beholder... 

[18:22] <AlexDaniel> xD

[18:22] <jmerelo> AlexDaniel: but people are used to have it look in a particular way.

[18:23] *** kybr joined
[18:24] *** kaare_ joined
[18:26] <Geth> ¬¶ doc: b203c81e8d | (JJ Merelo)++ | lib/Perl6/TypeGraph/Viz.pm6

[18:26] <Geth> ¬¶ doc: Partly reverting while checking other ways

[18:26] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b203c81e8d

[18:26] <Geth> ¬¶ doc: 7fe1758918 | (JJ Merelo)++ | lib/Perl6/TypeGraph/Viz.pm6

[18:26] <Geth> ¬¶ doc: Eliminates debug code

[18:26] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7fe1758918

[18:26] *** cdg_ joined
[18:29] *** kybr left
[18:29] <jmerelo> AlexDaniel: We can switch to neato only for Metamodel::*

[18:30] *** cdg left
[18:31] <AlexDaniel> jmerelo: I think that's acceptable

[18:32] <cfa> is the idea to use neato for role-heavy stuff?

[18:32] <jmerelo> cfa: for longish stuff.

[18:32] <cfa> long names?

[18:33] <jmerelo> cfa: long graph that makes it look small like this https://docs.perl6.org/type/Metamodel::MultipleInheritance

[18:33] <AlexDaniel> heh yea, that's not good at all: https://imgur.com/a/rbuFI

[18:33] <jmerelo> AlexDaniel: I kinda like it. But still.

[18:34] <cfa> ah, right

[18:35] <cfa> but this strikes me as a byproduct of heavy role usage

[18:35] <cfa> like

[18:35] <cfa> if you mix in a bunch of roles, you'll end up with a wide rather than deep graph

[18:35] <Geth> ¬¶ doc: ffad298ba8 | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Perl6/TypeGraph/Viz.pm6

[18:35] <Geth> ¬¶ doc: Keep .dot files for easier debugging

[18:35] <Geth> ¬¶ doc: 

[18:35] <Geth> ¬¶ doc: Resolves #1505

[18:35] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ffad298ba8

[18:36] <cfa> it isn't metamodel specific, it's just that quite a few metamodel roles are documented

[18:39] <Geth> ¬¶ doc: 833d6077e6 | (JJ Merelo)++ | lib/Perl6/TypeGraph/Viz.pm6

[18:39] <Geth> ¬¶ doc: Switches to neato only in some cases.

[18:39] <Geth> ¬¶ doc: 

[18:39] <Geth> ¬¶ doc: Check [this

[18:39] <Geth> ¬¶ doc: discussion](https://irclog.perlgeek.de/perl6/2018-03-23#i_15958129)

[18:39] <Geth> ¬¶ doc: for background.

[18:39] <Geth> ¬¶ doc: 

[18:39] <Geth> ¬¶ doc: (Hopefully) closes #246

[18:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/833d6077e6

[18:39] <Geth> ¬¶ doc: 9b6ee71377 | (JJ Merelo)++ | lib/Perl6/TypeGraph/Viz.pm6

[18:39] <Geth> ¬¶ doc: Solves conflict

[18:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/9b6ee71377

[18:39] *** wamba left
[18:40] <AlexDaniel> ahahahahha

[18:41] <AlexDaniel> dammit is there any place that can take svg uploads

[18:41] <jmerelo> AlexDaniel: Is that panic or happiness?

[18:41] <jmerelo> AlexDaniel: GitHub will probably take care of them...

[18:41] <AlexDaniel> this is art: https://files.progarm.org/type-graph-Exception.svg

[18:42] <AlexDaniel> zoom out a little bit

[18:42] <jmerelo> AlexDaniel: that is beautiful in a spidery kind of way...

[18:43] <jmerelo> AlexDaniel: that's been reverted to old ways, anyway. Just the Metamodel files have been changed.

[18:44] <jmerelo> cfa: that might be the case. But if we have many roles, or superclasses, or subclasses, we'll have the same problem.

[18:46] *** kybr joined
[18:46] *** domidumont left
[18:46] <AlexDaniel> jmerelo: grep -Po 'width=\K"[0-9]+' html/images/*.svg | sort '-t"' -nk 2

[18:47] <AlexDaniel> jmerelo: https://gist.github.com/AlexDaniel/d1eb9964401bac14a5e6dafad34c0bb4

[18:48] <jmerelo> AlexDaniel: Thanks. So, X::Comp too, right?

[18:48] <AlexDaniel> jmerelo: hm‚Ä¶ I think graph generation is really fast, maybe add a quick check for width after every graph is generated?

[18:49] <AlexDaniel> and if it's more than, say, 1000 then rerun with neato

[18:51] *** Ven`` left
[18:52] *** kybr left
[18:54] <jmerelo> X::OS looks good enough at 1818 https://docs.perl6.org/type/X::OS

[18:54] <jmerelo> I think it's enough if I add X::Comp and Metamodel.

[18:54] <jmerelo> If there's some big change in hierarchy in the future, we can add it. No need to overengineer now

[18:55] <jmerelo> No need to overengineer ever, actually :-)

[18:58] <Geth> ¬¶ doc: 27f3a151aa | (JJ Merelo)++ | lib/Perl6/TypeGraph/Viz.pm6

[18:58] <Geth> ¬¶ doc: Adds X::Comp to neato-ized files

[18:58] <Geth> ¬¶ doc: 

[18:58] <Geth> ¬¶ doc: Check [IRC

[18:58] <Geth> ¬¶ doc: log](discussion](https://irclog.perlgeek.de/perl6/2018-03-23#i_15958129))

[18:58] <Geth> ¬¶ doc: for discussion. Also related to #246 (although it's closed).

[18:58] <Geth> ¬¶ doc: 

[18:58] <Geth> ¬¶ doc: Kudos and :+1: to @AlexDaniel for help.

[18:58] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/27f3a151aa

[18:59] <jmerelo> If we close just one issue more today we'll get to 900 issues closed :-)

[19:01] *** dct joined
[19:04] *** kybr joined
[19:05] <jmerelo> Which I just did :-) https://github.com/perl6/doc/issues/897

[19:12] *** mscha joined
[19:12] *** mcmillhj left
[19:13] <mscha> Any recommended modules to send a (simple text) email from Perl 6?

[19:14] <jmerelo> mscha: Probably this one https://github.com/retupmoca/P6-Net-SMTP 

[19:15] <mscha> Thanks, that will probably do.

[19:15] <jmerelo> mscha: Good luck :-)

[19:17] <perlbot> Anonymous pasted a new file at https://f.perlbot.pl/p/iuuqwc - 

[19:18] <[Coke]> Hi, Anonymous.

[19:21] <lichtkind> is ther some mainanace on p6c?

[19:21] <[Coke]> ?

[19:21] <[Coke]> lichtkind: what's the issue?

[19:23] *** mcmillhj joined
[19:23] *** noganex left
[19:26] <lichtkind> [Coke], travis told me: "The program 'perl6' is currently not installed"

[19:27] <timotimo> what does travis have to do with p6c?

[19:27] <timotimo> the actual error message that'll help you is probably further up?

[19:27] <lichtkind> i thought it was in some sort hosted there

[19:27] <timotimo> haha, no, we do not own travis

[19:28] *** mcmillhj left
[19:28] <lichtkind> no i mean the service is hosted there

[19:28] <lichtkind> yes it failed to compile rakudo seems the bleed is broken

[19:29] *** noganex joined
[19:29] <timotimo> not sure what you mean by "the service"

[19:30] <lichtkind> running the travis smoking has to run on some machine

[19:31] <timotimo> https://docs.travis-ci.com/user/reference/overview/

[19:31] <timotimo> they use GCE and EC2, and no clue what they mean by "Virtual machine" for their OSX machines

[19:32] <timotimo> maybe they just have a room full of macbooks or something

[19:32] <lichtkind> allright

[19:36] <mscha> jmerelo: got it working, thanks!

[19:38] *** vcv left
[19:39] *** domidumont joined
[19:40] *** robertle left
[19:40] *** mcmillhj joined
[19:41] *** robertle joined
[19:44] *** mcmillhj left
[19:45] *** mcmillhj joined
[19:46] <jmerelo> mscha: glad to hear that :-)

[19:47] *** kybr left
[19:51] *** kybr joined
[19:53] *** espadrine joined
[19:53] *** mr_ron left
[19:55] *** enheh_ left
[19:58] *** cfa left
[20:06] *** pharv left
[20:07] *** pharv joined
[20:09] *** dct left
[20:12] *** pharv left
[20:12] *** pharv joined
[20:18] *** domidumont left
[20:19] *** itaipu left
[20:21] *** jmerelo left
[20:31] *** itaipu joined
[20:34] <rindolf> lichtkind: hi, sup?

[20:35] <lichtkind> rindolf cheers

[20:36] <lichtkind> coding my p6 matrix lib

[20:36] <rindolf> lichtkind: ah

[20:36] *** xinming joined
[20:37] <rindolf> lichtkind: are you binding to lapack or blas?

[20:38] <lichtkind> real men implement

[20:38] <lichtkind> the whole purpose is to lern math

[20:42] <El_Che> or meth

[20:45] <rindolf> lichtkind: i see

[20:45] <rindolf> lichtkind: have fun

[20:45] <lichtkind> thank you

[20:46] <lichtkind> no meth destroys human

[20:46] *** mr_ron joined
[20:52] *** mcmillhj left
[20:57] *** cog_ joined
[21:00] *** cognominal left
[21:02] <lichtkind> rindolf, : you come to gummersbach?

[21:03] <rindolf> lichtkind: no

[21:03] <rindolf> lichtkind: what is it?

[21:05] <lichtkind> rindolf, i thought you german there is the GPW next week

[21:07] *** herby_ left
[21:08] <rindolf> lichtkind: no, i'm israeli

[21:13] *** mcmillhj joined
[21:14] *** skids left
[21:14] *** athenot left
[21:14] *** itaipu left
[21:16] *** itaipu joined
[21:18] *** mcmillhj left
[21:29] *** mcmillhj joined
[21:34] *** mcmillhj left
[21:41] *** mr_ron left
[21:41] *** lizmat joined
[21:48] *** mcmillhj joined
[21:48] *** dct joined
[21:53] *** mcmillhj left
[21:55] *** mr_ron joined
[22:08] *** mcmillhj joined
[22:13] *** mcmillhj left
[22:33] <lizmat> hmmm... perl6.org and friends appear to be down for me

[22:33] <lizmat> is that just for me?

[22:33] *** bwisti left
[22:33] *** dct left
[22:34] <AlexDaniel> lizmat: not just you

[22:34] <lizmat> paging moritz timeless 

[22:34] <lizmat> timotimo 

[22:34] <jnthn> https://downforeveryoneorjustme.com/perl6.org

[22:34] <jnthn> (And yes, down for me too)

[22:34] <timotimo> let me look if the hosts are in good health

[22:34] <jnthn> But...hm, various things are slow for me

[22:34] <timotimo> m( virt-manager crashes on startup

[22:35] <timotimo> why not ssh x forwarding

[22:38] *** mcmillhj joined
[22:39] *** pharv left
[22:40] <timotimo> it stole my mouse pointer

[22:40] *** pharv joined
[22:42] *** pharv left
[22:42] *** pharv_ joined
[22:42] <timotimo> trying to reset the www host

[22:42] *** mcmillhj left
[22:43] *** cdg joined
[22:44] <timotimo> ok, perl6.org is back up

[22:44] <Juerd> Yay

[22:44] <rindolf> timotimo: thanks

[22:46] <timeless> lizmat: ??

[22:46] * timeless has nothing to do with the infrastructure

[22:47] <timotimo> timeless: i think she meant to ping me and mistabbed

[22:47] *** cdg_ left
[22:47] <timeless> K. Night

[22:48] *** cdg left
[22:48] <timotimo> how can night when timeless

[22:48] <timotimo> :)

[22:49] *** itaipu left
[22:50] *** skids joined
[22:55] *** izuzuz joined
[22:55] *** comborico1611 joined
[22:56] *** mcmillhj joined
[22:59] <lizmat> timeless: sorry, I mistabbed indeed

[23:01] *** vcv joined
[23:02] *** mcmillhj left
[23:06] *** lizmat left
[23:07] *** mcmillhj joined
[23:12] *** mcmillhj left
[23:16] *** mcmillhj joined
[23:20] *** mcmillhj left
[23:31] *** mcmillhj joined
[23:36] *** mcmillhj left
[23:37] <AlexDaniel> squashable6: next

[23:37] <squashable6> AlexDaniel, Next SQUASHathon in 13 days and ‚âà10 hours (2018-04-07 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[23:38] <AlexDaniel> thoughts for the next squashathon?

[23:38] *** lizmat joined
[23:44] <MasterDuke> maybe repos in the perl6 org that are smaller/we haven't done before? like features, etc

[23:45] *** vcv left
[23:45] *** comborico1611 left
[23:47] *** mcmillhj joined
[23:49] *** kaare_ left
[23:50] <AlexDaniel> MasterDuke: I don't think we have enough small repos that are fun enough to work with

[23:50] <AlexDaniel> but it's an interesting idea

[23:50] <AlexDaniel> buggable: tag testneeded

[23:50] <buggable> AlexDaniel, There are 49 tickets tagged with TESTNEEDED; See http://fail.rakudo.party/t/TESTNEEDED for details

[23:51] <AlexDaniel> hmmm

[23:51] <AlexDaniel> maybe testneeded squashathon again?

[23:51] *** mcmillhj left
[23:52] *** SCHAPiE joined
[23:52] <AlexDaniel> we just had it two months ago

[23:52] <AlexDaniel> but then, now we have even more tickets to close, hmm‚Ä¶

[23:53] *** wamba joined
[23:54] *** mcmillhj joined
[23:55] *** kaare_ joined
[23:56] *** robertle left
[23:59] *** mcmillhj left
