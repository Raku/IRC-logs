[00:03] *** pecastro left
[00:13] *** w_richard_w joined
[00:14] *** p6bannerbot sets mode: +v w_richard_w

[00:15] *** eseyman left
[00:19] *** eseyman joined
[00:20] *** p6bannerbot sets mode: +v eseyman

[00:22] *** MasterDuke joined
[00:22] *** p6bannerbot sets mode: +v MasterDuke

[00:22] *** MasterDuke left
[00:22] *** MasterDuke joined
[00:22] *** herbert.freenode.net sets mode: +v MasterDuke

[00:22] *** p6bannerbot sets mode: +v MasterDuke

[00:34] <MasterDuke> timotimo: attempting to --profile Juerd's test file segfaults, is that a known problem?

[00:40] <vrurg> For a type .^name gives its full name, .^shortname – bare type name. But how do I get the containing module name directly, not by cutting off shortname from name?

[00:41] *** jast left
[00:41] *** jast joined
[00:42] *** p6bannerbot sets mode: +v jast

[00:42] *** w_richard_w1 joined
[00:42] *** sena_kun left
[00:42] *** camelia left
[00:42] *** w_richard_w left
[00:43] *** p6bannerbot sets mode: +v w_richard_w1

[00:44] *** camelia joined
[00:45] *** Cabanossi left
[00:45] *** p6bannerbot sets mode: +v camelia

[00:46] *** Cabanossi joined
[00:47] *** p6bannerbot sets mode: +v Cabanossi

[00:55] <MasterDuke> Juerd: i can confirm, your test file takes about the same amount of time as before jnthn++'s commits today

[00:55] <MasterDuke> AlexDaniel: ^^^

[00:56] <MasterDuke> but the isolated test case (which may not be all that representative after all) is faster

[00:57] <MasterDuke> benchable6: 2018.11,HEAD my $r = q|\d+|; "asdf123fdsa321" ~~ /<$r>/ for ^50_000;

[00:57] <benchable6> MasterDuke, starting to benchmark the 2 given commits

[00:57] <benchable6> MasterDuke, ¦2018.11: «1.7040» ¦HEAD: «1.2530»

[00:57] <benchable6> MasterDuke, benchmarked the given commits and found a performance difference > 10%, now trying to bisect

[00:58] <benchable6> MasterDuke, ¦2018.11: «1.7040» ¦52c2af5: «1.6786» ¦b781f8c: «1.6252» ¦af96fbb: «1.6870» ¦5cc0e02: «1.6349» ¦fecfb22: «1.6294» ¦e747b19: «1.3147» ¦adb8560: «1.3888» ¦HEAD: «1.2530»

[01:06] *** erdic joined
[01:06] *** p6bannerbot sets mode: +v erdic

[01:22] *** lucasb left
[01:33] <Juerd> MasterDuke: I've found things making my benchmarks harder; I've switched to KDE Plasma and for reasons I haven't figured out in the past hour or so, performance is different under KDE than it was under XFCE, and less reliably similar :(

[01:34] <Juerd> Everything is noise and I can't find why. No processos show up in top, so it can't be much...

[01:34] <Juerd> s/processos/processes/

[01:41] <leont> IME benchmarks can be disturbed by a lot of things

[01:42] <leont> Once had bizarre results that were apparently caused by having a youtube window in the background

[01:45] <Juerd> I found that my script ran faster when I had firefox running.

[01:45] <Juerd> But not under KDE

[01:45] <Juerd> Er, not under XFCE

[01:45] <Juerd> It was faster with firefox running under KDE

[01:45] <Juerd> So this is sufficiently fucked up that I cannot trust any benchmark anymore.

[01:46] <Juerd> (Note: firefox running means just that: firefox, with no extensions loaded, on about:blank)

[01:47] <Juerd> Really, the regex.t from Net::MQTT runs in 14 seconds without firefox in KDE, and about 9 with firefox running. Or 7 to 8 seconds in XFCE regardless of whether firefox is running.

[01:47] <Juerd> I give up

[02:01] *** holyghost left
[02:21] *** molaf left
[02:24] <timotimo> MasterDuke: i wonder if it's memory exhaustion?

[02:33] *** molaf joined
[02:34] <buggable> New CPAN upload: PDF-Class-0.3.2.tar.gz by WARRINGD http://modules.perl6.org/dist/PDF::Class:cpan:WARRINGD

[02:34] *** p6bannerbot sets mode: +v molaf

[02:36] *** mowcat joined
[02:36] *** p6bannerbot sets mode: +v mowcat

[02:38] <mowcat> hi recently picked up perl after a long break and realised perl6 is a thing! :) nice to meet you...

[02:50] <Kaiepi> welcome o/

[02:58] <timotimo> cool, hi!

[03:09] *** bl4ckm4n_ joined
[03:10] *** p6bannerbot sets mode: +v bl4ckm4n_

[03:11] <vrurg> actually, Perl6 is not 'a thing', it's 'The Thing'... ;)

[03:12] *** graphene left
[03:12] <timotimo> haven't you heard perl6 is the word?

[03:13] <vrurg> does it contradic to each other?

[03:13] <vrurg> *contradict

[03:13] <bl4ckm4n_> where is larry

[03:13] <timotimo> it's hard to not be a thing when you are also the thing

[03:14] *** graphene joined
[03:14] <bl4ckm4n_> it's easy to be a tooll

[03:14] *** bl4ckm4n_ left
[03:14] *** p6bannerbot sets mode: +v graphene

[03:16] <vrurg> it's also hard not to be a god if you're The God. But some may not agree with me...

[03:16] <vrurg> ;)

[03:17] *** mowcat left
[03:18] *** Grauwolf left
[03:19] <vrurg> BTW, seriously. I defined own metamodel HOW module to have a specific kind of classes. How can I register those classes with another module when modules with them a being require'd? Obviously, compose works only once.

[03:20] <vrurg> In other words, I need a place where my code would be executed each time when a module is being required

[03:20] *** ufobat_ joined
[03:21] *** mowcat joined
[03:21] *** leont left
[03:21] *** p6bannerbot sets mode: +v ufobat_

[03:21] *** p6bannerbot sets mode: +v mowcat

[03:22] *** dpk joined
[03:23] *** p6bannerbot sets mode: +v dpk

[03:24] *** ufobat left
[03:26] *** xiaomiao joined
[03:26] *** p6bannerbot sets mode: +v xiaomiao

[03:28] *** Grauwolf joined
[03:28] *** p6bannerbot sets mode: +v Grauwolf

[03:41] *** Elronnd left
[03:51] *** Elronnd joined
[03:52] *** p6bannerbot sets mode: +v Elronnd

[03:55] *** mowcat left
[03:55] *** daotoad joined
[03:56] *** p6bannerbot sets mode: +v daotoad

[03:58] *** mowcat joined
[03:59] *** p6bannerbot sets mode: +v mowcat

[03:59] <mowcat> _vrurg you're not wrong... lol

[03:59] *** graphene left
[04:01] *** graphene joined
[04:02] *** p6bannerbot sets mode: +v graphene

[04:13] *** lookatme_q left
[04:13] *** Cabanoss- joined
[04:13] *** Cabanossi left
[04:14] *** lookatme_q joined
[04:14] *** p6bannerbot sets mode: +v Cabanoss-

[04:14] <MasterDuke> timotimo: the --profile segfault?

[04:14] *** p6bannerbot sets mode: +v lookatme_q

[04:17] *** w_richard_w joined
[04:18] *** p6bannerbot sets mode: +v w_richard_w

[04:19] *** w_richard_w1 left
[04:19] <MasterDuke> i don't think so, i've still got a couple gb free when it dies

[04:20] <MasterDuke> timotimo: now i succeeded creating a profile, but the test file died after 74 tests with `===SORRY!=== P6opaque: no such attribute '$!restart' on type NQPMu in a Perl6::Grammar when trying to get a value`

[04:21] <timotimo> sounds vaguely multithreading related

[04:21] *** graphene left
[04:22] <MasterDuke> that might make sense, right? because of the evalling that's happening

[04:22] <MasterDuke> it was a big profile too, 6.5mb sql file

[04:23] *** graphene joined
[04:23] *** no-n joined
[04:23] *** p6bannerbot sets mode: +v no-n

[04:23] *** p6bannerbot sets mode: +v graphene

[04:24] <timotimo> does it actually eval from multiple threads?

[04:24] *** w_richard_w left
[04:24] *** w_richard_w joined
[04:25] <MasterDuke> don't think so, at least not explicitly

[04:25] <timotimo> OK

[04:25] *** p6bannerbot sets mode: +v w_richard_w

[04:29] *** w_richard_w left
[04:29] <MasterDuke> huh, just got the SORRY! when running under valgrind, but it didn't have anything to say about it

[04:32] <MasterDuke> anyway, off to sleep...

[04:33] *** kktt_ joined
[04:34] *** p6bannerbot sets mode: +v kktt_

[04:37] *** kktt_ left
[04:38] *** kktt_ joined
[04:38] *** kktt_ is now known as kktt007

[04:39] *** p6bannerbot sets mode: +v kktt007

[04:43] *** graphene left
[04:45] *** graphene joined
[04:46] *** p6bannerbot sets mode: +v graphene

[04:52] *** alnewkirk joined
[04:53] *** p6bannerbot sets mode: +v alnewkirk

[04:58] *** alnewkirk is now known as alnk

[05:00] *** sauvin joined
[05:00] *** p6bannerbot sets mode: +v sauvin

[05:10] *** yoleaux joined
[05:10] *** ChanServ sets mode: +v yoleaux

[05:11] *** p6bannerbot sets mode: +v yoleaux

[05:26] *** [particle] joined
[05:27] *** p6bannerbot sets mode: +v [particle]

[05:30] *** [particle]1 left
[05:36] *** MasterDuke left
[05:39] *** graphene left
[05:40] *** graphene joined
[05:41] *** p6bannerbot sets mode: +v graphene

[05:50] *** kktt007 is now known as kktt

[05:50] *** daotoad left
[05:51] *** w_richard_w joined
[05:51] <no-n> waiting for the mailman to deliver my copy of Learning Perl 6

[05:51] <no-n> very excite

[05:51] *** w_richard_w left
[05:53] *** curan joined
[05:53] *** p6bannerbot sets mode: +v curan

[06:05] *** w_richard_w joined
[06:06] *** p6bannerbot sets mode: +v w_richard_w

[06:12] *** graphene left
[06:13] *** graphene joined
[06:14] *** p6bannerbot sets mode: +v graphene

[06:21] *** jmerelo joined
[06:22] *** p6bannerbot sets mode: +v jmerelo

[06:22] <jmerelo> Pod6 are now being rendered in Github!!!! https://github.com/perl6/Pod-To-HTML/blob/master/README.pod6

[06:22] <yoleaux> 13 Dec 2018 17:47Z <masak> jmerelo: yup. :)

[06:24] *** daotoad joined
[06:25] *** p6bannerbot sets mode: +v daotoad

[06:25] *** kurahaupo_ joined
[06:26] *** p6bannerbot sets mode: +v kurahaupo_

[06:26] <Geth> ¦ Pod-To-HTML: a0ebb8c91a | (JJ Merelo)++ | t/test.pod6

[06:26] <Geth> ¦ Pod-To-HTML: Adds from @kivikakk to test #55. Thanks for the issue

[06:26] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/a0ebb8c91a

[06:27] *** mowcat left
[06:29] *** kurahaupo left
[06:42] <Geth> ¦ Pod-To-HTML: 50502ca1ab | (JJ Merelo)++ | t/011-external.t

[06:42] <Geth> ¦ Pod-To-HTML: Adds test

[06:42] <Geth> ¦ Pod-To-HTML: 

[06:42] <Geth> ¦ Pod-To-HTML: Refs #55, for the time being it does not reproduce the error. Will

[06:42] <Geth> ¦ Pod-To-HTML: need more tests.

[06:42] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/50502ca1ab

[06:55] <Geth> ¦ Pod-To-HTML: 4209c9a83c | (JJ Merelo)++ | 2 files

[06:55] <Geth> ¦ Pod-To-HTML: Adds another test for #55

[06:55] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/4209c9a83c

[06:58] *** domidumont joined
[06:59] *** p6bannerbot sets mode: +v domidumont

[07:13] <Geth> ¦ Pod-To-HTML: e4cebe3ceb | (JJ Merelo)++ | 2 files

[07:13] <Geth> ¦ Pod-To-HTML: Move pragmas to the top

[07:13] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/e4cebe3ceb

[07:13] <Geth> ¦ Pod-To-HTML: 74b964473b | (JJ Merelo)++ | t/011-external.t

[07:13] <Geth> ¦ Pod-To-HTML: Removes debugging info

[07:13] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/74b964473b

[07:14] *** jmerelo left
[07:40] *** robertle joined
[07:41] *** p6bannerbot sets mode: +v robertle

[07:52] *** w_richard_w left
[07:57] *** rindolf joined
[07:58] *** p6bannerbot sets mode: +v rindolf

[08:49] *** sena_kun joined
[08:50] *** p6bannerbot sets mode: +v sena_kun

[08:52] *** kktt left
[09:07] *** daotoad left
[09:17] *** reach_satori left
[09:43] *** zakharyas joined
[09:43] *** p6bannerbot sets mode: +v zakharyas

[09:44] *** kst`` left
[10:12] *** leont joined
[10:13] *** p6bannerbot sets mode: +v leont

[10:14] *** Sgeo_ left
[10:15] *** Sgeo_ joined
[10:16] *** p6bannerbot sets mode: +v Sgeo_

[10:17] *** leont left
[10:50] *** tobs` joined
[10:51] *** p6bannerbot sets mode: +v tobs`

[10:52] *** reach_satori joined
[10:53] *** p6bannerbot sets mode: +v reach_satori

[11:00] *** domidumont left
[11:52] *** pecastro joined
[11:53] *** scimon joined
[11:53] *** p6bannerbot sets mode: +v pecastro

[11:53] *** p6bannerbot sets mode: +v scimon

[11:55] *** cofeineSunshine joined
[11:56] *** p6bannerbot sets mode: +v cofeineSunshine

[12:00] *** cofeineSunshine left
[12:00] *** curan left
[12:06] *** scimon left
[12:06] *** scimon joined
[12:07] *** p6bannerbot sets mode: +v scimon

[12:18] *** kurahaupo_ is now known as kurahaupo

[12:19] *** robertle left
[12:24] *** lucasb joined
[12:24] *** p6bannerbot sets mode: +v lucasb

[12:31] *** domidumont joined
[12:32] *** p6bannerbot sets mode: +v domidumont

[12:34] <buggable> New CPAN upload: pod-load-0.0.1.tgz by JMERELO https://cpan.metacpan.org/authors/id/J/JM/JMERELO/Perl6/pod-load-0.0.1.tgz

[12:34] <buggable> New CPAN upload: Pod-Load-0.0.1.tgz by JMERELO https://cpan.metacpan.org/authors/id/J/JM/JMERELO/Perl6/Pod-Load-0.0.1.tgz

[12:40] <lucasb> m: my @a.push(1,2,3); say @a  # It never occurred to me before that this was valid syntax

[12:40] <camelia> rakudo-moar 01c56b484: OUTPUT: «[1 2 3]␤»

[12:41] *** zakharyas left
[12:43] <buggable> New CPAN upload: POD-Load-0.0.1.tgz by JMERELO https://cpan.metacpan.org/authors/id/J/JM/JMERELO/Perl6/POD-Load-0.0.1.tgz

[13:07] *** andrzejku left
[13:07] *** eiro1 is now known as eiro

[13:16] *** andrzejku joined
[13:17] *** p6bannerbot sets mode: +v andrzejku

[13:32] <jnthn> m: [email@hidden.address] say @a # and this too :)

[13:32] <camelia> rakudo-moar 01c56b484: OUTPUT: «[1 2 3]␤»

[13:34] <jnthn> Now, does anyone know *why* these two parse fine? :-)

[13:35] <sena_kun> m: [email@hidden.address] say @a;

[13:35] <camelia> rakudo-moar 01c56b484: OUTPUT: «[1 2 3]␤»

[13:36] <sena_kun> somebody has been golfing a bit too much for this universe to handle. D:

[13:41] <jnthn> I think I've realized it before, but I ran into it just now because I lost the space when editing, then spotted it, and was like "grmbl, why's Comma not say that's a syntax error", then checked with Rakudo to see and...well, it ain't one. :-)

[13:42] <jnthn> It's because the parser wants <.ws> there, and that is satisfied with <!ww> (that is, not between two word chars), and @ isn't a word char, so so far as <.ws> is concerned, it's happy between r and @ :)

[13:43] <jnthn> And the reason for the .push working is that a declaration is just a term, and we can parse a postfix after any term.

[13:45] <lucasb> This is interesting. Is it related with the fact the syntax 'my Foo $obj .= new' works?

[13:46] <lucasb> I spotted the snippet in the post of day 12: Building a flexible grammar

[13:46] <lucasb> for some reason I was expecting the need of parens there: (my @a).method(...)

[13:48] *** infl00p10 joined
[13:48] <tobs`> yeah, declarations being "parsed as terms" means that the parens are there implicitly

[13:48] *** infl00p10 left
[13:51] <jnthn> lucasb: No, that's different; that is parsed as an initializer. The initial "assignment"/"binding" is always parsed specially, since it actually isn't a straight assignment in many cases.

[13:52] <jnthn> Like `has Blah $.foo .= new` has to actually do it once per object creation

[13:54] *** scimon left
[13:55] *** scimon joined
[13:55] *** p6bannerbot sets mode: +v scimon

[14:13] *** ChoHag left
[14:17] *** ChoHag joined
[14:18] *** p6bannerbot sets mode: +v ChoHag

[14:23] *** zakharyas joined
[14:24] *** p6bannerbot sets mode: +v zakharyas

[14:34] *** reach_satori left
[14:44] <alnk> Is the slack group still active? If so, how do I get an invite?

[14:47] <timotimo> last message is three people joining #general on march 29th 2017

[14:58] *** michaelrose18 joined
[14:58] *** michaelrose18 left
[15:06] *** robertle joined
[15:07] *** p6bannerbot sets mode: +v robertle

[15:27] <tobs`> m: role A[$type] { method of { $type } }; role B[$n] { method n { $n } }; role C[$n] does A[B[$n]] {}; C[5].of.n.say

[15:27] <camelia> rakudo-moar 01c56b484: OUTPUT: «(Mu)␤»

[15:27] <tobs`> it seems like the $n in A[B[$n]] is not in the same scope as the parameter $n to role C? Shouldn't it be?

[15:38] <tobs`> m: role B[$n] { method n { $n } }; role C[$n] does B[$n] {}; C[5].n.say # shorter

[15:38] <camelia> rakudo-moar 01c56b484: OUTPUT: «(Mu)␤»

[15:39] <lucasb> In 'role C[$n] does B[$n] {}', the $n in B[$n] is supposed to be the same value that was passed to C[5] ?

[15:41] <tobs`> lucasb: yes

[15:41] *** andrzejku_ joined
[15:41] *** andrzejku left
[15:41] *** andrzejku_ is now known as andrzejku

[15:41] <tobs`> in that case, I want to print "5"

[15:42] <lucasb> m: role B[::T] { method n { T } }; role C[::U] does B[U] {}; C[5].n.say

[15:42] <camelia> rakudo-moar 01c56b484: OUTPUT: «(Int)␤»

[15:42] *** p6bannerbot sets mode: +v andrzejku

[15:42] <lucasb> I was going to write C[Int] :)

[15:43] <lucasb> but looks like types *are* captured, while scalar values are... not? Would you agree?

[15:43] <jnthn> I think it only lets type captures through at present.

[15:43] <tobs`> seems like it. Maybe it's a compile time issue?

[15:44] *** andrzejku_ joined
[15:44] <jnthn> I implemented that lot, but it was long enough ago I can't remember how possible it'd be to have the var case work; I guess if we can find a way to make them be treated a bit like compile-time constants it could maybe be made to work.

[15:44] <jnthn> Or something along those lines...effectively, they need to be made subject to generic instantiation, iirc.

[15:44] *** p6bannerbot sets mode: +v andrzejku_

[15:45] <tobs`> m: role B[$n] { method n { $n } }; role C {}; my $r = rand; (C.new does B[$r]).n.say

[15:45] <camelia> rakudo-moar 01c56b484: OUTPUT: «0.059105454651730116␤»

[15:46] <tobs`> this business happens all at runtime, right?

[15:46] <jnthn> That's a runtime mixin, so a completely different case.

[15:46] <tobs`> Ok, maybe I can rely on that in the meantime. Should I create a ticket about the capturing?

[15:46] *** andrzejku left
[15:47] <tobs`> well, potential "meantime" :)

[15:47] *** andrzejku_ is now known as andrzejku

[15:48] <jnthn> tobs`: Yes; at worst the result will be "can't make that work because X"

[15:48] <jnthn> But it's worth a try; it'd be nice if it did work.

[15:59] *** cosimo left
[16:01] *** silug left
[16:05] *** scimon left
[16:09] <tobs`> R#2546

[16:09] <synopsebot> R#2546 [open]: https://github.com/rakudo/rakudo/issues/2546 RFC: Make role parameters reusable in `does` clauses

[16:10] <SmokeMachine> m: role R[$a] { method bla { $a } }; class C does R[42] {}; C.bla.say

[16:10] <camelia> rakudo-moar 01c56b484: OUTPUT: «42␤»

[16:11] *** jmerelo joined
[16:11] *** p6bannerbot sets mode: +v jmerelo

[16:17] *** silug joined
[16:18] *** Ven`` joined
[16:18] *** p6bannerbot sets mode: +v silug

[16:19] *** p6bannerbot sets mode: +v Ven``

[16:20] *** xinming_ joined
[16:20] *** pmurias joined
[16:20] *** p6bannerbot sets mode: +v pmurias

[16:21] *** p6bannerbot sets mode: +v xinming_

[16:22] <jmerelo> Can someone help Vadim Belman in StackOverflow? https://stackoverflow.com/questions/53773225/catching-up-with-require-for-a-metamodel-class

[16:23] *** xinming left
[16:23] *** silug left
[16:27] *** silug joined
[16:28] *** p6bannerbot sets mode: +v silug

[16:30] *** dct joined
[16:30] *** p6bannerbot sets mode: +v dct

[16:34] <buggable> New CPAN upload: Pod-Load-0.0.1.tar.gz by JMERELO https://cpan.metacpan.org/authors/id/J/JM/JMERELO/Perl6/Pod-Load-0.0.1.tar.gz

[16:34] *** pmurias left
[16:35] <lucasb> m: class C is Mu { method FALLBACK(|c) { dd c } }; C.foo; C.Numeric

[16:35] <camelia> rakudo-moar 01c56b484: OUTPUT: «\("foo")␤Use of uninitialized value of type C in numeric context␤  in block <unit> at <tmp> line 1␤»

[16:35] <lucasb> ^^ I want to intercep all method calls, even those in Mu

[16:36] *** Ven`` left
[16:36] <lucasb> any way to "delete" those methods or inherit from a completely empty object?

[16:36] <lucasb> *intercept

[16:37] *** lizmat joined
[16:37] *** p6bannerbot sets mode: +v lizmat

[16:39] *** pmurias joined
[16:39] *** p6bannerbot sets mode: +v pmurias

[16:40] <timotimo> you should be able to override ^find_method

[16:40] <timotimo> and probably also ^publish_method_cache

[16:40] <timotimo> check out Grammar::Debugger, i think it has a few pieces that can help you out, lucasb 

[16:43] <lizmat> lucasb: https://modules.perl6.org/dist/InterceptAllMethods

[16:48] *** Kaypie joined
[16:48] *** Kaiepi left
[16:48] *** p6bannerbot sets mode: +v Kaypie

[16:49] *** robertle left
[16:52] *** tobs` left
[16:53] *** andrzejku_ joined
[16:54] *** p6bannerbot sets mode: +v andrzejku_

[16:56] <lucasb> timotimo, lizmat: thanks! I'll check out those

[16:57] *** andrzejku left
[16:57] <timotimo> liz' dist is all you need i think

[16:57] *** andrzejku_ is now known as andrzejku

[17:00] <Geth> ¦ Pod-To-HTML: cdc6266fab | (JJ Merelo)++ | 4 files

[17:00] <Geth> ¦ Pod-To-HTML: Pod::To::HTML eliminated from class names in external files.

[17:00] <Geth> ¦ Pod-To-HTML: 

[17:00] <Geth> ¦ Pod-To-HTML: Refs #55. Still the same problem with strings, but that's not a

[17:00] <Geth> ¦ Pod-To-HTML: blocker right now. Please @kivikakk download new version to check this

[17:00] <Geth> ¦ Pod-To-HTML: works correctly, ping me if it does not.

[17:00] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/cdc6266fab

[17:04] <buggable> New CPAN upload: Pod-Load-0.0.2.tar.gz by JMERELO https://cpan.metacpan.org/authors/id/J/JM/JMERELO/Perl6/Pod-Load-0.0.2.tar.gz

[17:04] *** dct left
[17:06] *** mowcat joined
[17:07] *** p6bannerbot sets mode: +v mowcat

[17:08] <lucasb> ^^ has anyone ever downloaded a CPAN distribution tarball announced by buggable? Is there a more useful URL to show?

[17:08] <jmerelo> lucasb: it looks like it's legit...

[17:08] <jmerelo> lucasb: you mean like instructions for zef or something like that?

[17:10] *** zakharyas left
[17:11] <lucasb> hmm, site doesn't know about http://modules.perl6.org/dist/Pod::Load:cpan:JMERELO

[17:11] <lucasb> jmerelo: I mean the line the IRC bot just announced

[17:13] <lucasb> I don't think a tarball link is very useful

[17:13] *** domidumont left
[17:15] <jmerelo> lucasb: two different things, I guess. Buggable prints some information it gets from, really, I don't know where. That can be changed. But it's not buggable who uploads the information to modules.perl6.org

[17:15] *** scimon joined
[17:16] <jmerelo> lucasb: to tell you the truth, I'm not sure where that's taken from. 

[17:16] *** p6bannerbot sets mode: +v scimon

[17:19] <jmerelo> lucasb: it might take a while...

[17:21] <lucasb> ah, maybe it's here: https://github.com/zoffixznet/perl6-buggable/blob/master/lib/Buggable/Plugin/CPANUploads.pm6#L39-L44

[17:24] <jmerelo> yep, that's the line it announces new uploads. But I have no idea where it reads it or why it's not yet on modules.perl6.org

[17:25] <jmerelo> lucasb: took a while, but it got there: https://modules.perl6.org/dist/Pod::Load:cpan:JMERELO

[17:26] *** scimon left
[17:27] <lucasb> cool, thanks for publishing modules, jmerelo++ :)

[17:28] <lucasb> I see you made Pod::To::HTML depend on that

[17:28] <jmerelo> lucasb: right. It fixes a bug that was kind of silly, but bug anyway https://github.com/perl6/Pod-To-HTML/issues/55

[17:28] <jmerelo> lucasb: part of a bug, anyway.

[17:29] <jmerelo> lucasb: when that gets fixed, we might have pod6 displayed on GitHub :-)

[17:33] <lucasb> just a nitpick, to avoid the hard-coded temporary path:

[17:33] <lucasb> m: dd $*TMPDIR.add('perl6-pod-load')

[17:33] <camelia> rakudo-moar 01c56b484: OUTPUT: «IO::Path.new("/tmp/perl6-pod-load", :SPEC(IO::Spec::Unix), :CWD("/home/camelia"))␤»

[17:34] <lucasb> and maybe assign it to $*POD-LOAD-TMPDIR and use that? :)

[17:34] <jmerelo> lucasb: hum

[17:34] <jmerelo> Good idea

[17:40] <lucasb> jmerelo++, I see you made to commit, but IO::Path.add only creates "logical" paths, you still has to mkdir it IIUC :)

[17:43] <jmerelo> lucasb: it actually created the directory, I think

[17:43] <jmerelo> lucasb: let me check

[17:44] *** reach_satori joined
[17:45] *** p6bannerbot sets mode: +v reach_satori

[17:45] *** Cabanoss- left
[17:46] <lucasb> maybe it's not need if CompUnit::PrecompilationStore::File creates the dir...

[17:46] <lucasb> *needed

[17:46] *** Cabanossi joined
[17:47] <[Coke]> jmerelo: commits messages are not a great place to put messages about process/workflow to other developers. 

[17:47] *** p6bannerbot sets mode: +v Cabanossi

[17:50] <jmerelo> [Coke]: um. Sorry. Which one do you mean? 

[17:50] <jmerelo> lucasb: ah, OK, right...

[17:51] <[Coke]> https://github.com/perl6/Pod-To-HTML/commit/cdc6266fab

[17:52] <jmerelo> [Coke]: sorry, but I don't follow you. You mean I shouldn't have pinged the OP of the issue? Because he's going to be getting the message anyway?

[17:57] *** graphene left
[17:57] <AlexDaniel> I agree with [Coke], but I also understand what you wanted to achieve

[17:57] <AlexDaniel> perhaps write a comment next time?

[17:58] <AlexDaniel> I mean here https://github.com/perl6/Pod-To-HTML/commit/cdc6266fab#all_commit_comments

[17:59] *** graphene joined
[17:59] *** p6bannerbot sets mode: +v graphene

[18:00] <jmerelo> AlexDaniel: I would appreciate if you told me why, really. I'm not arguing against, it's only that I don't understand what's the problem. Can you please elaborate?

[18:00] <jmerelo> AlexDaniel [Coke] I will try not to do it again... as long as I understand what's wrong.

[18:01] <AlexDaniel> jmerelo: it just feels inappropriate, like saying in the commit message that the weather is nice today

[18:02] <jmerelo> AlexDaniel: you are talking about the part on strings having the same problem.

[18:02] <jmerelo> AlexDaniel: it was the motivation for not closing the issue. The OP had been addressed, actually.

[18:02] <AlexDaniel> jmerelo: no, about “Please @kivikakk download new version to check this works correctly, ping me if it does not.”

[18:03] <jmerelo> AlexDaniel, [Coke] OK.

[18:04] <jmerelo> Now what _I_ don't appreciate is that I am putting today a good amount of work on getting pod6 to be rendered in GitHub and that's the only comment I get about it.

[18:04] <jmerelo> But OK, so be it.

[18:05] <lucasb> hehe :)

[18:05] <lucasb> I'm sure we *all* appreciate what you are doing! I sure do! Pod 6 in... *GitHub*. Thank YOU for that.

[18:06] <lizmat> jmerelo++

[18:07] <lucasb> folks are just commenting it looks strange personal messages in commits. Commits messages are more permanent than issues. :)

[18:07] <AlexDaniel> jmerelo: welcome to open source :) we do appreciate your work, of course, people just suck at expressing that

[18:08] <AlexDaniel> jmerelo: recently I especially liked the stuff you do for the advent calender, like pinging authors to make sure posts happen

[18:08] <jmerelo> lucasb: OK, I understand perfectly everyone's concerns. This person is not really familiar with Perl 6, I understand. I just thought it would be better for him to instruct on what to do.

[18:09] <jmerelo> I don't usually do that for the Perl6 crew

[18:09] <jmerelo> AlexDaniel: OK, OK, no problems. Thanks for pointing that out anyway. AlexDaniel is right that it would be better to put that in a comment, it's more transparent and public

[18:10] <jmerelo> Never mind me, really :-)

[18:10] * jmerelo feels sorry for lashing out.

[18:10] <AlexDaniel> it's fine, it's an actual problem

[18:11] <AlexDaniel> not sure how to improve the situation, people should just learn to say “thank you” more often, I guess?

[18:12] <AlexDaniel> many times I appreciate someone's work but I say nothing

[18:13] <lucasb> I confess I rarely say it too... it's like its implicit! These are all gifts, of course I'm grateful for all of this :)

[18:14] <jmerelo> And thanks, AlexDaniel, lucasb, lizmat, [Coke] :-)

[18:14] <jmerelo> Now a problem

[18:14] <jmerelo> m: say "This ,is, a =large string , and !ugly".words.map( .substr(1) ).grep( /:alpha/ )

[18:14] <camelia> rakudo-moar 01c56b484: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unrecognized regex modifier :alpha␤at <tmp>:1␤------> 3 !ugly".words.map( .substr(1) ).grep( /:7⏏5alpha/ )␤    expecting any of:␤        argument list␤        term␤»

[18:15] <jmerelo> m: say "This ,is, a =large string , and !ugly".words.map( .substr(1) ).grep( /:alpha:/ )

[18:15] <camelia> rakudo-moar 01c56b484: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unrecognized regex modifier :alpha␤at <tmp>:1␤------> 3 !ugly".words.map( .substr(1) ).grep( /:7⏏5alpha:/ )␤    expecting any of:␤        argument list␤        term␤»

[18:15] <jmerelo> m: say "This ,is, a =large string , and !ugly".words.map( .substr(1) ).grep( /\w/ )

[18:15] <camelia> rakudo-moar 01c56b484: OUTPUT: «No such method 'substr' for invocant of type 'Any'␤  in block <unit> at <tmp> line 1␤␤»

[18:15] <jmerelo> m: say "This ,is, a =large string , and !ugly".words

[18:15] <camelia> rakudo-moar 01c56b484: OUTPUT: «(This ,is, a =large string , and !ugly)␤»

[18:15] <jmerelo> m: say "This ,is, a =large string , and !ugly".words.map( *.substr(1) )

[18:15] <camelia> rakudo-moar 01c56b484: OUTPUT: «(his is,  large tring  nd ugly)␤»

[18:15] <jmerelo> m: say "This ,is, a =large string , and !ugly".words.map( *.substr(1,1) )

[18:15] <camelia> rakudo-moar 01c56b484: OUTPUT: «(h i  l t  n u)␤»

[18:16] <jmerelo> m: say "This ,is, a =large string , and !ugly".words.map( *.substr(1,1) ).join("")

[18:16] <camelia> rakudo-moar 01c56b484: OUTPUT: «hiltnu␤»

[18:16] <jmerelo> I'm trying to get an unique filename out of a string

[18:16] *** kensanata joined
[18:16] *** p6bannerbot sets mode: +v kensanata

[18:16] <jmerelo> Could use SHA, but I don't want any external dependencies. Doing that above would make sense?

[18:17] <jmerelo> Unless there are many words, that would work, right?

[18:17] * lizmat is too tired to think straight, so goes afk&

[18:18] <jmerelo> There's the nice Temp::Path by zoffix, but first it uses SHA1, and second it's another external dependency

[18:19] *** random_yanek left
[18:19] <jmerelo> m: say "This ,is, a =large string , and !ugly".words.map( *.substr(1,1) )[^3].join("")

[18:19] <camelia> rakudo-moar 01c56b484: OUTPUT: «hi␤»

[18:30] *** zakharyas joined
[18:30] *** p6bannerbot sets mode: +v zakharyas

[18:32] *** domidumont joined
[18:33] *** p6bannerbot sets mode: +v domidumont

[18:34] *** random_yanek joined
[18:34] *** p6bannerbot sets mode: +v random_yanek

[18:35] *** pierrot left
[18:38] <vrurg> jmerelo: thanks for taking care of my question!

[18:38] <jmerelo> vrurg: still no answer, though...

[18:39] *** graphene left
[18:40] <vrurg> I have a simple solution of imposing a requirement of placing a registration call in the body of the class. Though I don't like it...

[18:41] *** graphene joined
[18:42] *** p6bannerbot sets mode: +v graphene

[18:42] <jmerelo> vrurg: did you look up EnumHOW? It's kind of curious, but it's got also some kind of "registration" if I remember correctly...

[18:44] <vrurg> jmerelo: not yet. Thanks for the idea! 

[18:45] <Xliff> m: say 3 == True

[18:45] <camelia> rakudo-moar 01c56b484: OUTPUT: «False␤»

[18:46] <Geth> ¦ Pod-To-HTML: 8b32091110 | (JJ Merelo)++ | 2 files

[18:46] <Geth> ¦ Pod-To-HTML: Mostly cosmetic changes

[18:46] <Geth> ¦ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/8b32091110

[18:47] <tobs> m: say 3 +^ True # :P

[18:47] <camelia> rakudo-moar 01c56b484: OUTPUT: «2␤»

[18:54] *** AlexDaniel left
[18:55] *** AlexDaniel joined
[18:55] *** p6bannerbot sets mode: +v AlexDaniel

[19:05] *** pierrot joined
[19:05] *** p6bannerbot sets mode: +v pierrot

[19:07] <jmerelo> Can someone please check if zef install Pod::Load works and what version it returns?

[19:07] *** MasterDuke joined
[19:07] *** p6bannerbot sets mode: +v MasterDuke

[19:07] *** MasterDuke left
[19:07] *** MasterDuke joined
[19:07] *** herbert.freenode.net sets mode: +v MasterDuke

[19:07] *** p6bannerbot sets mode: +v MasterDuke

[19:07] <jmerelo> I don't get why it's not working here: https://travis-ci.org/perl6/Pod-To-HTML/jobs/468129339

[19:11] *** khisanth_ joined
[19:12] *** p6bannerbot sets mode: +v khisanth_

[19:12] <jmerelo> Also, check out this on how multis work https://stackoverflow.com/questions/53785603/constraining-multis-and-its-use-for-selecting-them

[19:14] <lucasb> jmerelo: can't install here: No candidates found matching identity: Pod::Load

[19:14] *** Khisanth left
[19:16] <jmerelo> Um

[19:17] <jmerelo> But it's right here: https://modules.perl6.org/dist/Pod::Load:cpan:JMERELO

[19:17] *** molaf left
[19:18] <jmerelo> Maybe it takes a while to generate new cpan lists?

[19:18] <tobs> jmerelo: re Constraining multis and its use for selecting them: that's because the where clause constrains an Any type (`$file where .IO.e`) and the Str type of the other candidate already wins other Any. If you change the second signature to `Str $file where .IO.e` it'll work.

[19:19] <tobs> sorry, I know you want to boost stackoverflow, but I don't have an account there.

[19:19] <El_Che> hey jmerelo, you've been busy!

[19:19] <El_Che> jmerelo: great work

[19:19] <jmerelo> tobs: Good one. I hadn't thought about that

[19:19] <jmerelo> El_Che: still busy, but thanks.

[19:20] <jmerelo> tobs: wouldn't you consider opening one?

[19:20] <tobs> (I guess there is less of an excuse to not have an account in the age of password managers...)

[19:21] <jmerelo> tobs: but that's right, if I change the definition of the subset to Any it does not work :-)

[19:21] <jmerelo> tobs: answer it there and I'll give you lots of karma :-)

[19:21] <tobs> and the subset you give constrains Str, so it call checks out

[19:21] <jmerelo> El_Che: thanks!

[19:22] <tobs> s/call/all/

[19:22] *** graphene left
[19:23] <jmerelo> tobs: totally correct. Thanks!

[19:24] <buggable> New CPAN upload: Pod-Load-0.0.3.tar.gz by JMERELO http://modules.perl6.org/dist/Pod::Load:cpan:JMERELO

[19:24] *** graphene joined
[19:24] <tobs> jmerelo: maybe answer the question yourself in the meantime. These "might as well" / "might as well not" questions are always the hardest to decide :-)

[19:24] <jmerelo> tobs: not really. That would be cheating, and it's your answer :-) I'll leave someone the chance to answer it herself :-)

[19:24] *** p6bannerbot sets mode: +v graphene

[19:27] <jmerelo> OK, the ecosystem is updated once a day: https://github.com/ugexe/Perl6-ecosystems. So it will take until tomorrow for the new modules to be available.

[19:27] <jmerelo> I'm finding out lots of stuff today about the Perl6 ecosystem...

[19:28] <jmerelo> Also, I wonder why that repo is not under the Perl 6 team...

[19:37] *** zakharyas left
[19:39] <jmerelo> .seen masak

[19:39] <yoleaux> I saw masak 13 Dec 2018 18:47Z in #perl6: <masak> b2gills: I guess my counterargument isn't that that's _wrong_, it's that it's nothing new -- a WhateverCode is just sugar for writing it out as a normal parameterized block

[19:40] <jmerelo> .tell masak you ready to schedule your next advent calendar article during tomorrow, right? The 16th is yours!

[19:40] <yoleaux> jmerelo: I'll pass your message to masak.

[19:40] <jmerelo> .seen RabidGravy

[19:40] <yoleaux> I saw RabidGravy 17 Dec 2017 01:40Z in #perl6: <RabidGravy> that's https://perl6advent.wordpress.com/2017/12/17/something-about-messaging-but-i-couldnt-think-of-a-snappier-title/ if you want to get in early

[19:46] <jmerelo> tobs: you've got everything you need for your Advent Calendar article?

[19:47] <jmerelo> Check out today's Advent calendar entry everyone, on processing ASN.1 https://perl6advent.wordpress.com/2018/12/14/designing-a-space-ship-with-perl-6/

[19:48] <tobs> jmerelo: sadly no, but I'm working on it as we speak. I set up a schedule for myself and have that in mind.

[19:49] <jmerelo> tobs: you have a Wordpress ID and it's added to the site? 

[19:49] <tadzik> that's a name I haven't heard in a looong time

[19:49] <tobs> oh that, yes. You set me up some time ago :-)

[19:49] <jmerelo> Ah, OK. :-)

[19:49] <jmerelo> Anything you need, just let us know :-)

[19:49] <tobs> o7

[20:01] *** jmerelo left
[20:22] <Xliff> Anyone around here with Cairo experience?

[20:22] <Xliff> I need some help debugging some transliterated code.

[20:22] *** MasterDuke left
[20:27] *** pyrimidine left
[20:32] *** ufobat_ left
[20:33] *** coltkirk joined
[20:34] <buggable> New CPAN upload: Tomtit-0.0.1.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Tomtit-0.0.1.tar.gz

[20:34] *** p6bannerbot sets mode: +v coltkirk

[20:40] *** molaf joined
[20:40] *** p6bannerbot sets mode: +v molaf

[20:41] *** dogbert17 joined
[20:41] *** p6bannerbot sets mode: +v dogbert17

[20:43] *** domidumont left
[20:47] *** coltkirk left
[20:50] *** graphene left
[20:52] *** graphene joined
[20:53] *** p6bannerbot sets mode: +v graphene

[20:54] <buggable> New CPAN upload: Tomtit-0.0.2.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Tomtit-0.0.2.tar.gz

[21:14] <buggable> New CPAN upload: Tomtit-0.0.3.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Tomtit-0.0.3.tar.gz

[21:14] <buggable> New CPAN upload: Tomtit-0.0.4.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Tomtit-0.0.4.tar.gz

[21:18] *** pmurias_ joined
[21:18] *** p6bannerbot sets mode: +v pmurias_

[21:18] *** pmurias_ left
[21:19] <pmurias> is there a module to do qq:x in a safe manner? (without passing stuff to a shell)

[21:40] *** leont joined
[21:40] *** p6bannerbot sets mode: +v leont

[21:45] <pmurias> it's a bit surprising that a failure as the last thing in a for is silently ignored :(

[21:57] <lucasb> Do you have an example?

[21:58] <pmurias> for @files -> $path_that_cant_be_create {spew($path_that_cant_be_created, "content")}

[21:59] <lucasb> m: my $x = Failure.new; $x; say 'OK'

[21:59] <camelia> rakudo-moar 01c56b484: OUTPUT: «WARNINGS for <tmp>:␤OK␤Useless use of $x in sink context (line 1)␤»

[22:00] <lucasb> you were suprised that failures don't throw in sink context? well, me too :)

[22:01] <lucasb> is it 'spew' that returns the failure? spew(...).sink helps?

[22:02] <lucs>   

[22:02] <timotimo> you can also use .self to explode failures

[22:03] <lucasb> which makes of '.self' not an "identity" method, right :)

[22:03] <timotimo> well ... i guess?

[22:03] <lucasb> otherwise it would have returned the failure untouchted

[22:04] <lucasb> *untouched

[22:04] <timotimo> well, it would have returned the failure untouched

[22:04] <timotimo> if it didn't throw an exception

[22:05] <lucasb> yes. We are agreeing that '.self' activates the failure. I just wouldn't have made it that way :)

[22:06] <timotimo> oh, no, .made is only for Match :)

[22:06] <lucasb> haha you

[22:07] *** ufobat_ joined
[22:07] <lucasb> the alternative could be: $obj.self(:throw-failures)  :)

[22:07] *** p6bannerbot sets mode: +v ufobat_

[22:08] <lucasb> P6 should have abused more of adverbs to tune the behavior of things

[22:08] *** graphene left
[22:09] *** graphene joined
[22:10] *** p6bannerbot sets mode: +v graphene

[22:16] <timotimo> i think necessity of adverbs is considered a design smell

[22:16] <timotimo> quotable6: design smell

[22:16] <quotable6> timotimo, OK, working on it! This may take up to three minutes (4582161 messages to process)

[22:17] <quotable6> timotimo, 4 messages (Inf⌁-Inf): https://gist.github.com/a52d547a49c4412d302ecc6d3edab687

[22:18] <lucasb> but ok, good point :)

[22:22] *** daotoad joined
[22:22] *** p6bannerbot sets mode: +v daotoad

[22:25] <timotimo> ha

[22:25] <timotimo> quotable6: "design smell"

[22:25] <quotable6> timotimo, OK, working on it! This may take up to three minutes (4582161 messages to process)

[22:26] <quotable6> timotimo, 138 messages (2006-03-20⌁2016-09-26): https://gist.github.com/eec57471562f6684d6d030d04047d994

[22:27] *** kensanata left
[22:32] <Geth> ¦ ecosystem: ec20c4fe7a | Altai-man++ (committed using GitHub Web editor) | META.list

[22:32] <Geth> ¦ ecosystem: Add ASN::BER

[22:32] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/ec20c4fe7a

[22:33] <lucasb> hmm, quotable6 could output the nickname for better context

[22:34] <timotimo> yes, but then it'd have to have its database rebuilt :)

[22:35] <timotimo> it's not a performance beast

[22:35] <timotimo> m: say 4582161 / (60 - 28 + 19)

[22:35] <camelia> rakudo-moar 01c56b484: OUTPUT: «89846.294118␤»

[22:35] <timotimo> 90k regex matches per second.. could be worse i guess?

[22:36] <timotimo> jn's improvements to regex performance yesterday could have an impact

[22:38] *** Sgeo_ left
[22:38] <Xliff> timotimo: Heya. I've run into a problem with my latest example, that looks like it's Cairo based. Rather it looks like what I added to Cairo is messing things up.

[22:38] <Xliff> timotimo: When you have time, could you take a look?

[22:39] <Xliff> Now I think I understand why you left cairo_path_t as a CPointer. :/

[22:40] <Xliff> Problem is in this script: https://github.com/Xliff/p6-Pango/blob/master/t/02-twisted.t

[22:40] *** yqt joined
[22:41] *** p6bannerbot sets mode: +v yqt

[22:41] <Xliff> Which was transliterated from: https://github.com/GNOME/pango/blob/master/examples/cairotwisted.c

[22:42] <timotimo> my brain is really not working very well this week, and that's a few screen pages of code :S

[22:42] <Xliff> I know. Like I said... whenever you have some time.

[22:42] <Xliff> I'm assuming it's my port of cairo_path_t that's the problem, however I can't see it, yet.

[22:43] <Xliff> I do know one thing, It looks like the curves are missing the first point.

[22:43] <Xliff> And that's just the curved part. I haven't even started the text part.

[22:47] <Xliff> And to make things worse... the P5 version is lightning fast and my P6 version takes 70-80 times that.

[22:47] <Xliff> timotimo: Oh well. Thanks In Advance. Hope you have a restful next week.

[22:48] <Xliff> Oh, and for the curious. The p5 version is here: https://github.com/GNOME/perl-Cairo/blob/master/examples/twisted-text.pl

[22:49] *** daotoad left
[22:49] *** Marcool joined
[22:57] *** Marcool left
[23:05] *** pmurias left
[23:07] *** graphene left
[23:09] *** graphene joined
[23:10] *** p6bannerbot sets mode: +v graphene

[23:21] *** graphene left
[23:22] *** graphene joined
[23:23] *** p6bannerbot sets mode: +v graphene

[23:37] *** yqt left
[23:38] *** graphene left
[23:40] *** graphene joined
[23:41] *** p6bannerbot sets mode: +v graphene

[23:43] *** sena_kun left
[23:44] *** Daerist joined
[23:44] *** Daerist left
[23:46] *** dct joined
[23:46] *** p6bannerbot sets mode: +v dct

[23:57] *** Sgeo joined
[23:58] *** p6bannerbot sets mode: +v Sgeo

