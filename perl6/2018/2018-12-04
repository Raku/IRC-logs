[00:02] *** w_richard_w joined
[00:03] *** p6bannerbot sets mode: +v w_richard_w

[00:09] *** w_richard_w left
[00:11] *** kurahaupo left
[00:12] *** kurahaupo joined
[00:13] *** p6bannerbot sets mode: +v kurahaupo

[00:23] *** dct left
[00:24] *** someuser left
[00:27] *** kurahaupo left
[00:27] *** kurahaupo joined
[00:28] *** p6bannerbot sets mode: +v kurahaupo

[00:36] *** xinming_ left
[00:37] *** xinming_ joined
[00:38] *** p6bannerbot sets mode: +v xinming_

[00:42] *** kurahaupo left
[00:43] *** kurahaupo joined
[00:43] *** p6bannerbot sets mode: +v kurahaupo

[00:49] <neteng1198s> SmokeMachine: can you provide an example of using shift on the array within the hash?  I keep getting it wrong

[00:55] *** tobs` joined
[00:55] *** NetDiver joined
[00:55] *** p6bannerbot sets mode: +v NetDiver

[00:56] *** p6bannerbot sets mode: +v tobs`

[00:56] <SmokeMachine> m: my %a = a => [<1 2 3>]; say %a<a>.shift

[00:56] <camelia> rakudo-moar 38bc682b0: OUTPUT: «1␤»

[00:56] <tobs`> m: my @a = 1; my Int @b = 1; use Test; cmp-ok @a, 'eqv', @b

[00:56] <camelia> rakudo-moar 38bc682b0: OUTPUT: «not ok 1 - ␤# Failed test at <tmp> line 1␤# expected: Array[Int].new(1)␤#  matcher: 'infix:<eqv>'␤#      got: [1]␤»

[00:57] <tobs`> can anyone think of a way to make this True?

[00:57] *** kurahaupo left
[00:57] *** NetDiver left
[00:58] <tobs`> (I wish the diagnostics in my real case were that helpful. I always got the same stringification for both values)

[00:58] *** kurahaupo joined
[00:59] *** p6bannerbot sets mode: +v kurahaupo

[00:59] *** Macro joined
[00:59] *** p6bannerbot sets mode: +v Macro

[01:00] *** lizmat joined
[01:00] *** p6bannerbot sets mode: +v lizmat

[01:01] <tobs`> m: my @a = 1; my Int @b = 1; use Test; cmp-ok @a.values, 'eqv', @b.values

[01:01] <camelia> rakudo-moar 38bc682b0: OUTPUT: «ok 1 - ␤»

[01:02] *** JoKing joined
[01:02] *** p6bannerbot sets mode: +v JoKing

[01:02] *** coet left
[01:03] *** JoKing left
[01:06] <timotimo> right, eqv also cares about exact types

[01:09] <tobs`> it still doesn't quite work in my case:

[01:10] <tobs`> m: class A { has $.name }; class X { has A @.arr }; my @arr = A.new(:name<z>); my $x = X.new: :arr(A.new(:name<z>)); say $x.arr.values eqv @arr.values; say Set($x.arr.values) eqv Set(@arr.values)

[01:10] <camelia> rakudo-moar 38bc682b0: OUTPUT: «True␤False␤»

[01:12] <tobs`> m: class A { has $.name }; class X { has @.arr }; my @arr = A.new(:name<z>); my $x = X.new: :arr(A.new(:name<z>)); say $x.arr.values eqv @arr.values; say Set($x.arr.values) eqv Set(@arr.values)

[01:12] <camelia> rakudo-moar 38bc682b0: OUTPUT: «True␤False␤»

[01:12] <timotimo> custom classes don't behave like value types by default

[01:12] <tobs`> apparently it isn't even related to the type constraint on the has'd variable

[01:12] <timotimo> at least i think that's what it does

[01:12] <timotimo> m: class A { has $.name }; class X { has @.arr }; my @arr = A.new(:name<z>); my $x

[01:12] <camelia> rakudo-moar 38bc682b0: ( no output )

[01:12] <timotimo> oops

[01:13] *** kurahaupo left
[01:13] <timotimo> m: class A { has $.name; method WHICH { ValueObjAt.new("A" ~ $.name.WHICH) } }; class X { has @.arr }; my @arr = A.new(:name<z>); my $x = X.new: :arr(A.new(:name<z>)); say $x.arr.values eqv @arr.values; say Set($x.arr.values) eqv Set(@arr.values)

[01:13] <camelia> rakudo-moar 38bc682b0: OUTPUT: «True␤True␤»

[01:13] <timotimo> there you go

[01:14] *** Grinnz joined
[01:14] *** p6bannerbot sets mode: +v Grinnz

[01:14] <Grinnz> neteng1198s: if you want help with perl 5, you should ask in #perl or on irc.perl.org #perl-help, not here

[01:15] *** kurahaupo joined
[01:15] <tobs`> timotimo: thanks, I have to read up on that

[01:15] *** p6bannerbot sets mode: +v kurahaupo

[01:16] *** Grinnz left
[01:17] <tobs`> huh, that's exactly my situation, but I have never heard of "value types" before

[01:18] <timotimo> whether two objects with the same "things in it" are eqv by default depends on whether they act immutable or not

[01:20] <timotimo> an array would use its identity (think: memory address, but constant) for keying

[01:20] <timotimo> in sets and such

[01:20] <tobs`> suddenly all my tests pass \o/

[01:21] <timotimo> \o/

[01:28] *** kurahaupo left
[01:29] *** kurahaupo joined
[01:29] *** p6bannerbot sets mode: +v kurahaupo

[01:38] <buggable> New CPAN upload: DateTime-Monotonic-0.0.1.tar.gz by JMASLAK https://cpan.metacpan.org/authors/id/J/JM/JMASLAK/Perl6/DateTime-Monotonic-0.0.1.tar.gz

[01:39] *** kurahaupo left
[01:41] *** kurahaupo joined
[01:42] *** p6bannerbot sets mode: +v kurahaupo

[01:45] *** graphene left
[01:47] *** graphene joined
[01:47] *** p6bannerbot sets mode: +v graphene

[01:48] *** tobs` left
[01:51] *** kurahaupo left
[01:52] *** kurahaupo joined
[01:53] *** p6bannerbot sets mode: +v kurahaupo

[01:54] *** lucasb left
[02:07] *** kurahaupo left
[02:28] *** kurahaupo joined
[02:29] *** leont left
[02:29] *** p6bannerbot sets mode: +v kurahaupo

[02:38] <holyghost> I've debugged Game::Markov somewhat, needs more time

[02:38] *** kurahaupo left
[02:40] <Geth> ¦ doc: c671af1212 | (Richard Hainsworth)++ (committed using GitHub Web editor) | doc/Language/modules.pod6

[02:40] <Geth> ¦ doc: Update modules.pod6

[02:40] <synopsebot_> Link: https://doc.perl6.org/language/modules

[02:40] <Geth> ¦ doc: 

[02:40] <Geth> ¦ doc: add =end code

[02:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c671af1212

[02:42] *** molaf left
[02:54] *** molaf joined
[02:55] *** p6bannerbot sets mode: +v molaf

[03:30] *** benjikun left
[03:30] *** mniip joined
[03:30] *** p6bannerbot sets mode: +v mniip

[03:32] *** graphene left
[03:33] *** vrurg left
[03:33] *** graphene joined
[03:34] *** p6bannerbot sets mode: +v graphene

[03:34] *** AlexDaniel left
[03:38] <buggable> New CPAN upload: Mathx-Chaos-0.1.3.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Chaos:cpan:HOLYGHOST

[03:38] <holyghost> ^-- includes mainstream correlation dimension

[03:48] <holyghost> s/mainstream/more mainstream

[03:54] *** vrurg joined
[03:55] *** p6bannerbot sets mode: +v vrurg

[04:11] *** w_richard_w joined
[04:12] *** p6bannerbot sets mode: +v w_richard_w

[04:13] <holyghost> .seen Zoffix

[04:13] <yoleaux> I saw Zoffix 30 Nov 2018 23:37Z in #perl6: <Zoffix> huggable: AlexDaniel

[04:16] *** lizmat left
[04:17] *** w_richard_w left
[04:26] *** titsuki left
[04:48] *** Cabanoss- joined
[04:49] *** p6bannerbot sets mode: +v Cabanoss-

[04:49] *** Cabanossi left
[04:54] *** ryn1x joined
[04:55] *** p6bannerbot sets mode: +v ryn1x

[04:59] *** abraxxa joined
[05:00] *** ryn1x left
[05:00] *** p6bannerbot sets mode: +v abraxxa

[05:03] *** kurahaupo joined
[05:04] *** abraxxa left
[05:04] *** p6bannerbot sets mode: +v kurahaupo

[05:20] *** abraxxa joined
[05:21] *** p6bannerbot sets mode: +v abraxxa

[05:26] *** kurahaupo left
[05:36] <hahainternet> m: my $t="test"; given "anything" { when /anything/ { say $t }}

[05:36] <camelia> rakudo-moar 38bc682b0: OUTPUT: «test␤»

[05:36] <hahainternet> m: my $t="test"; given "anything" { when /anything/ { say $t; $t="changed"; say $t; }}

[05:36] <camelia> rakudo-moar 38bc682b0: OUTPUT: «test␤changed␤»

[05:36] <hahainternet> m: my $t="test"; given "anything" { when /anything/ { say $t; $t="changed"; say $t; }}; say $t;

[05:36] <camelia> rakudo-moar 38bc682b0: OUTPUT: «test␤changed␤changed␤»

[05:36] *** [particle]1 left
[05:36] <hahainternet> ok something bizarro is going on for me then

[05:36] <hahainternet> oh, no i'm just tired

[05:37] <hahainternet> and solving aoc problems at 5:30am for some reason

[05:37] *** [particle] joined
[05:37] *** p6bannerbot sets mode: +v [particle]

[05:42] *** sauvin joined
[05:42] *** p6bannerbot sets mode: +v sauvin

[06:18] *** epony joined
[06:19] *** epony is now known as Guest11895

[06:19] *** p6bannerbot sets mode: +v Guest11895

[06:20] *** Guest11895 left
[06:20] *** epony joined
[06:21] *** epony is now known as Guest37147

[06:21] *** p6bannerbot sets mode: +v Guest37147

[06:24] *** sena_kun joined
[06:25] *** p6bannerbot sets mode: +v sena_kun

[06:30] *** Guest37147 left
[06:31] *** eponym joined
[06:31] *** p6bannerbot sets mode: +v eponym

[06:33] *** eponym left
[06:34] *** eponym joined
[06:34] *** p6bannerbot sets mode: +v eponym

[06:35] *** jmerelo joined
[06:36] *** p6bannerbot sets mode: +v jmerelo

[06:36] *** kurahaupo joined
[06:37] *** p6bannerbot sets mode: +v kurahaupo

[06:45] *** domidumont joined
[06:46] *** p6bannerbot sets mode: +v domidumont

[06:47] <jmerelo> Latest data on commits/month in the perl6/doc repo https://github.com/JJ/TPF-Grant/blob/master/illos/commits-authors-entropy.png

[06:47] <yoleaux> 3 Dec 2018 21:16Z <masak> jmerelo: it's not ready, but I'm still planning to write it before the 5th. today is the 3rd. hope that works ;)

[06:47] <jmerelo> .tell masak of course it does :-)

[06:47] <yoleaux> jmerelo: I'll pass your message to masak.

[06:52] *** domidumont left
[06:54] *** mattp_ joined
[06:55] *** p6bannerbot sets mode: +v mattp_

[06:55] *** kurahaupo left
[06:58] *** kurahaupo joined
[06:58] *** p6bannerbot sets mode: +v kurahaupo

[07:00] *** eponym left
[07:00] *** guest joined
[07:00] *** p6bannerbot sets mode: +v guest

[07:01] *** guest left
[07:02] *** guest joined
[07:02] *** p6bannerbot sets mode: +v guest

[07:03] *** guest left
[07:08] *** domidumont joined
[07:09] *** p6bannerbot sets mode: +v domidumont

[07:16] <holyghost> hi jmerelo, I'm debugging Game-Markov, it should be ready for next week

[07:16] <holyghost> The only of my non-working packages

[07:17] <holyghost> I'm full of ideas for it, by reading a bit

[07:18] <jmerelo> holyghost: good luck

[07:18] <Geth> ¦ doc: 931a2d269d | (JJ Merelo)++ | 5 files

[07:18] <Geth> ¦ doc: Reflow, de-indentation and some corrections

[07:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/931a2d269d

[07:20] <holyghost> jmerelo: thx, Mathx-Chaos should be working, I've updated the functionality

[07:22] *** andrzejku left
[07:22] *** andrzejku joined
[07:23] *** p6bannerbot sets mode: +v andrzejku

[07:25] <jmerelo> holyghost: "should be working" does not mean what you think it means.

[07:25] <holyghost> ok

[07:26] <jmerelo> holyghost: it means "I have not tested it, but it looks OK"

[07:26] <jmerelo> holyghost: like Yoda said, "Do and don't, there is no should"

[07:26] <jmerelo> Either it's working, or it's not working. 

[07:27] <holyghost> the updated and same functionality works I meant

[07:28] <holyghost> It has 3 tests that work

[07:28] <holyghost> the rest also

[07:28] <jmerelo> holyghost: it compiles and there are two tests, which work. That's the only thing we can say

[07:28] <jmerelo> holyghost: and the two tests compare a function with itself. No wonder it works.

[07:29] <jmerelo> is-deeply $corrdim.dimension($pop,$pop), $corrdim.dimension($pop,$pop);

[07:29] <holyghost> there's a 3rd test on cpan

[07:29] <jmerelo> holyghost: that, also, does not mean what you think it means

[07:29] <holyghost> which works

[07:29] <jmerelo> holyghost: for me, it means "It's releasing to CPAN stuff that is not on the repository"

[07:30] <holyghost> the above test you mentioned compares numbers by the functionality of the same method

[07:30] *** tmetro joined
[07:30] <holyghost> I use is-deeply because of comparison between numbers

[07:31] <holyghost> e.g. doubles or floats

[07:31] *** p6bannerbot sets mode: +v tmetro

[07:31] <jmerelo> I can't really figure out what it does. It's not documented, nor tested, and there's no main "Mathx::Chaos.pm6" module with documentation.

[07:32] <jmerelo> It apparently computes correlation between two things, which I can't figure out either

[07:32] *** kurahaupo_ joined
[07:33] <holyghost> It's chaos theory math

[07:33] *** p6bannerbot sets mode: +v kurahaupo_

[07:33] <holyghost> I'll write docs later on, after everything of Game-Markov works

[07:33] *** kurahaupo_ is now known as kurahaupo__

[07:33] <jmerelo> holyghost: Mathx::Stat is in better shape, since there's some stuff in the README.md, but still no "main" class file, very few tests.

[07:34] *** kurahaupo left
[07:34] <holyghost> ok

[07:34] *** kurahaupo__ is now known as kurahaupo

[07:34] *** robertle joined
[07:34] <jmerelo> holyghost: far as I can see, same problem with tests there. You are comparing something that returns a scalar with itself. There's no way that does not pass. That's not a test. 

[07:35] *** p6bannerbot sets mode: +v robertle

[07:35] <jmerelo> https://github.com/theholyghost2/Mathx-Stat/blob/master/lib/Mathx/Stat/Covariance.pm6

[07:35] <holyghost> I want to compare the scalars as the function has no bugs

[07:36] <holyghost> scalar to scalar is just a number as I mentioned

[07:36] <jmerelo> holyghost: that is a single function. It should simply be a function. Besides, you are not constraining the type of $xpop and $ypop.

[07:36] <jmerelo> holyghost: in general, if you compare something to itself, it's going to say it's true

[07:37] <jmerelo> You should compare some call to the expected value of that call, which you compute independently.

[07:37] <jmerelo> That's what tests are.

[07:37] <holyghost> ok but they return numbers so they are the same and easily formatted for is-deeply

[07:37] <holyghost> ok never mind

[07:38] <jmerelo> holyghost: is-deeply compares objects. And you should compare the result of a function to the expected result, _computed independently_

[07:38] <holyghost> yes but if you return a decimal number, those tings stay the same

[07:38] <holyghost> numbers matter in this

[07:39] <holyghost> where you say you compare objects you compare numbers

[07:39] <holyghost> so it doesn't matter for my is-deeply

[07:42] <jmerelo> holyghost: you want to test consistency, right. Consistency is good. But you should also test that the returned value is the right one, because if you don't, the value could be consistent but wrong.

[07:43] <Geth> ¦ doc: 4fc1be8803 | (JJ Merelo)++ | doc/Language/control.pod6

[07:43] <synopsebot_> Link: https://doc.perl6.org/language/control

[07:43] <Geth> ¦ doc: Extends the definition of blocks

[07:43] <Geth> ¦ doc: 

[07:43] <Geth> ¦ doc: To include the fact that classes also behave as blocks. Closes #2481

[07:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4fc1be8803

[07:44] <holyghost> jmerelo: sure but in math packages you cannot just put in an ok test against a number as the test itself can fail because of your bitwise system, somewise incorrectly speaking, but if my method is inexact I cannot test against some number

[07:44] <jmerelo> holyghost: yes, you can. You can write tests for approximate numbers. There's the is-approx test

[07:44] <holyghost> ah

[07:45] *** rindolf joined
[07:45] <holyghost> which is the same thing again

[07:45] <holyghost> is-approx is stupid in my tests of Mathx-Chaos

[07:45] <jmerelo> holyghost: look at this: https://github.com/MattOates/Stats

[07:45] *** p6bannerbot sets mode: +v rindolf

[07:46] <jmerelo> holyghost: look at the tests: https://github.com/MattOates/Stats/blob/master/t/correlation.t

[07:46] <holyghost> ok

[07:46] <jmerelo> This is one test: https://github.com/MattOates/Stats/blob/master/t/correlation.t

[07:46] <jmerelo>  is cov(@x,@x), variance(@x), 'Covariance of same values is equal to variance';

[07:46] <holyghost> I know

[07:46] <jmerelo> And then the rest. 

[07:47] <jmerelo> Besides, if correlation and covariance are already tested, and documented, and everything, it's always better to stand in the shoulder of giants and use them.

[07:47] <andrzejku> do you think that it would be possible in the future to have Perl6 compiled executable  like in compile language to tweak performance?

[07:47] *** huggable left
[07:48] <holyghost> again, my tests are not dumb

[07:48] <jmerelo> andrzejku: you can probably have Perl6 bytecode. That's it. Perl 6 works on a virtual machine, so it's difficult to generate machine code.

[07:48] <sena_kun> as a packed moarvm with a script inside? likely yes, if enough hands or funds to do. :)

[07:49] *** [particle]1 joined
[07:49] <sena_kun> though I don't see how it can improve performance in a significant way, however I don't know a lot of things anyway.

[07:49] *** [particle] left
[07:49] *** p6bannerbot sets mode: +v [particle]1

[07:51] *** dct joined
[07:51] *** p6bannerbot sets mode: +v dct

[07:52] <andrzejku> jmerelo humm, maybe question regarding history who took the decision as I read a Perl6 history the first ideas about Perl6 VM it was C++ based VM, and how that happend that finally you created a C one?

[07:52] <jmerelo> andrzejku: _I_ definitely didn't create anything.

[07:52] <jmerelo> And if I remember correctly, the first compiler was created by Audrey Tang in Haskell

[07:53] <andrzejku> jmerelo I read it in Dr Fogs book

[07:53] *** domidumont left
[07:53] *** ChoHag left
[07:55] <jmerelo> andrzejku: I don't know what were the advantages, at the point MoarVM started, of C over C++. Probably speed, but historically, the first was PUGS

[07:55] *** dct left
[08:00] *** buggable left
[08:00] *** buggable joined
[08:00] *** ChanServ sets mode: +v buggable

[08:00] *** peteretep joined
[08:00] *** p6bannerbot sets mode: +v peteretep

[08:00] *** [particle] joined
[08:01] *** p6bannerbot sets mode: +v buggable

[08:01] *** yqt joined
[08:01] *** p6bannerbot sets mode: +v [particle]

[08:01] *** [particle]1 left
[08:02] <jmerelo> andrzejku: Which one is Dr Fogs book?

[08:02] *** p6bannerbot sets mode: +v yqt

[08:05] <andrzejku> Learning Perl6

[08:08] *** domidumont joined
[08:09] *** p6bannerbot sets mode: +v domidumont

[08:15] <jmerelo> Can someone please help Zarul Zajuan here? https://stackoverflow.com/questions/53604775/moar-process-ballooning-while-running-perl6-socket-server

[08:15] <jmerelo> andrzejku: ah, Foy!

[08:17] *** [Sno] joined
[08:17] *** vike left
[08:17] *** p6bannerbot sets mode: +v [Sno]

[08:22] *** coet joined
[08:22] *** p6bannerbot sets mode: +v coet

[08:22] *** coet left
[08:22] *** coet|CAD joined
[08:22] *** p6bannerbot sets mode: +v coet|CAD

[08:22] *** coet|CAD left
[08:23] *** coet joined
[08:23] *** p6bannerbot sets mode: +v coet

[08:23] *** coet left
[08:23] *** [Sno] left
[08:23] *** coet joined
[08:23] *** p6bannerbot sets mode: +v coet

[08:23] *** coet left
[08:24] *** coet joined
[08:24] *** p6bannerbot sets mode: +v coet

[08:28] *** dct joined
[08:28] *** p6bannerbot sets mode: +v dct

[08:31] *** dakkar joined
[08:31] *** p6bannerbot sets mode: +v dakkar

[08:35] *** vike joined
[08:36] *** p6bannerbot sets mode: +v vike

[08:47] *** zakharyas joined
[08:48] *** p6bannerbot sets mode: +v zakharyas

[08:55] <scott> how would i find the index of the largest integer in a list?

[09:00] *** imcsk8 joined
[09:01] *** p6bannerbot sets mode: +v imcsk8

[09:01] *** |oLa| left
[09:02] *** dct left
[09:06] <timotimo> scott: have a look at the maxpairs method: https://docs.perl6.org/routine/maxpairs

[09:06] <timotimo> m: my @ints = 1, 2, 3, 9, 8, 7; say @ints.maxpairs

[09:06] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(3 => 9)␤»

[09:06] *** Sigyn joined
[09:06] *** p6bannerbot sets mode: +v Sigyn

[09:07] <scott> timotimo: perfect, thanks!

[09:30] *** kamba joined
[09:30] *** kamba left
[09:34] *** rindolf left
[09:37] *** lucasb joined
[09:37] *** p6bannerbot sets mode: +v lucasb

[09:38] *** Aix_15 joined
[09:38] *** lizmat joined
[09:38] *** p6bannerbot sets mode: +v lizmat

[09:38] *** Aix_15 left
[09:47] *** rindolf joined
[09:47] *** p6bannerbot sets mode: +v rindolf

[09:48] *** pecastro joined
[09:49] *** p6bannerbot sets mode: +v pecastro

[09:52] *** vike1 joined
[09:53] *** vike left
[09:53] *** p6bannerbot sets mode: +v vike1

[10:05] *** aindilis left
[10:07] *** aindilis joined
[10:08] *** p6bannerbot sets mode: +v aindilis

[10:14] *** aindilis left
[10:29] *** kensanata joined
[10:29] *** p6bannerbot sets mode: +v kensanata

[10:30] *** TeamBlast joined
[10:31] *** p6bannerbot sets mode: +v TeamBlast

[10:41] *** tobs` joined
[10:42] *** p6bannerbot sets mode: +v tobs`

[10:54] *** domidumont left
[10:54] *** pmurias joined
[10:54] *** p6bannerbot sets mode: +v pmurias

[10:55] <pmurias> andrzejku: the C++ Perl 6 VM was an early prototype (I don't remember it)

[10:56] <moritz> smop?

[10:57] <pmurias> moritz: Topaz 

[10:59] <pmurias> moritz: smop was in C (I remember that one as I was helping with it)

[10:59] *** pmurias left
[11:02] <El_Che> AlexDaniel`: now at Dockercon, but looking at the rakudo build failures

[11:03] *** pmurias joined
[11:03] *** p6bannerbot sets mode: +v pmurias

[11:03] *** pmurias left
[11:05] *** pmurias joined
[11:05] *** p6bannerbot sets mode: +v pmurias

[11:06] <pmurias> https://www.windowscentral.com/microsoft-building-chromium-powered-web-browser-windows-10 - hurray!!! microsoft is finally giving up on their browser, one less obstacle for rakudo.js :)

[11:08] <tadzik> hooray, more of google's monopoly on the internet

[11:08] <El_Che> pmurias: I thnk you haven't met microsodt

[11:08] <El_Che> f

[11:08] <El_Che> they will find a sauce to make it not-that-compatible

[11:10] *** harrison joined
[11:10] *** p6bannerbot sets mode: +v harrison

[11:12] <harrison> m: "({(1...4).join(',')});";

[11:12] <camelia> rakudo-moar 38bc682b0: OUTPUT: «WARNINGS for <tmp>:␤Useless use of "({(1...4).join(',')});" in expression "({(1...4).join(',')});" in sink context (line 1)␤»

[11:12] <harrison> m: say "({(1...4).join(',')});";

[11:12] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(1,2,3,4);␤»

[11:12] *** |oLa| joined
[11:13] *** p6bannerbot sets mode: +v |oLa|

[11:13] <harrison> m: say "({(1...4)shuffle.join(',')});";

[11:13] <camelia> rakudo-moar 38bc682b0: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3say "({(1...4)7⏏5shuffle.join(',')});";␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modif…»

[11:14] <harrison> m: say "({(1...4).shuffle.join(',')});";

[11:14] <camelia> rakudo-moar 38bc682b0: OUTPUT: «No such method 'shuffle' for invocant of type 'Seq'␤  in block <unit> at <tmp> line 1␤␤»

[11:14] <El_Che> AlexDaniel`: good news. The failures were 1 travis fluke and 2 rakudo test flappers

[11:14] <lucasb> harrison: do you want ".."?

[11:14] <lucasb> not triplets

[11:14] <harrison> m: say "({(1..4).pick(*).join(',')});";

[11:14] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(3,2,1,4);␤»

[11:14] <harrison> m: say "({(1..4).pick(*).join(',')});";

[11:14] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(2,1,4,3);␤»

[11:14] <El_Che> download the repo here at 8.00 KiB/s :(

[11:14] <harrison> lucasb, what's the difference?

[11:14] <lucasb> ".." creates ranges, "..." creates sequences

[11:15] *** |oLa| left
[11:15] <lucasb> m: say 2, 4 ... 10

[11:15] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(2 4 6 8 10)␤»

[11:15] <harrison> m: say 4...10.WHAT;

[11:15] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(4)␤»

[11:15] <harrison> m: say (4...10).WHAT;

[11:15] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(Seq)␤»

[11:15] <harrison> m: say (4..10).WHAT;

[11:15] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(Range)␤»

[11:16] *** araraloren joined
[11:17] <pmurias> El_Che: they have nothing to gain in making it not-that-compatible, they luckily don't have the market share anymore

[11:17] *** p6bannerbot sets mode: +v araraloren

[11:17] <El_Che> it will be installed on all their desktop OS

[11:17] <harrison> lucasb, for small 'list' of values, is there a difference in terms of range and sequence? Why prefer one over the other?

[11:17] <El_Che> it's a huge marketshare

[11:19] <lucasb> harrison: i guess it depends on the use case, ranges are 2-field unexpanded data structures, where you can handle both ends

[11:19] <lucasb> sequences are the whole shebang expanded, with a possibly arbitrary step/increase

[11:19] *** |oLa| joined
[11:19] <harrison> aha.

[11:19] <pmurias> El_Che: people have learn to not to use the built in browser because IE was so horrible

[11:20] *** p6bannerbot sets mode: +v |oLa|

[11:20] <harrison> m: say 1,2,*+1...*>14;

[11:20] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)␤»

[11:20] <harrison> m: say 1,2,*+1..*>14;

[11:20] <camelia> rakudo-moar 38bc682b0: OUTPUT: «12{ ... }␤»

[11:20] <harrison> eh?

[11:22] <harrison> m: say (1,2,*+1..*>14).WHAT;

[11:22] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(List)␤»

[11:22] <harrison> m: my $a = 1,2,*+1..*>14; say $a.WHAT;

[11:22] <camelia> rakudo-moar 38bc682b0: OUTPUT: «WARNINGS for <tmp>:␤(Int)␤Useless use of ">" in expression "..*>14" in sink context (line 1)␤Useless use of constant integer 2 in sink context (lines 1, 1)␤»

[11:22] <harrison> m: my $a = (1,2,*+1..*>14); say $a.WHAT;

[11:22] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(List)␤»

[11:23] <harrison> m: say 1,3,* * 1..*>14;

[11:23] <camelia> rakudo-moar 38bc682b0: OUTPUT: «13{ ... }␤»

[11:23] <harrison> m: say 1,3,* * 1..*>5;

[11:23] <camelia> rakudo-moar 38bc682b0: OUTPUT: «13{ ... }␤»

[11:24] <harrison> Can anyone explain what is happening?

[11:27] *** Ven`` joined
[11:28] *** p6bannerbot sets mode: +v Ven``

[11:28] *** donaldh joined
[11:29] *** p6bannerbot sets mode: +v donaldh

[11:32] *** lizmat left
[11:34] *** [particle]1 joined
[11:35] *** p6bannerbot sets mode: +v [particle]1

[11:35] *** [particle] left
[11:43] <lucasb> docs: https://docs.perl6.org/type/Range , https://docs.perl6.org/language/operators#index-entry-..._operators

[11:43] *** rindolf left
[11:49] *** zakharyas left
[11:52] *** leont joined
[11:53] *** p6bannerbot sets mode: +v leont

[12:00] *** kensanata left
[12:14] *** Ven`` left
[12:14] *** leont left
[12:14] *** cono joined
[12:15] *** Ven`` joined
[12:15] <jmerelo> harrison: hum

[12:15] *** p6bannerbot sets mode: +v cono

[12:16] *** p6bannerbot sets mode: +v Ven``

[12:16] <jmerelo> harrison: 

[12:16] <jmerelo> OK, I get it.

[12:16] <jmerelo> harrison: it's actually doing this

[12:17] <jmerelo> m: say "1","3", * * 1..*  > 5 

[12:17] <camelia> rakudo-moar 38bc682b0: OUTPUT: «13{ ... }␤»

[12:17] <harrison> jmerelo, oh.

[12:18] <harrison> m: say 1,155,* * 1..*>200;

[12:18] <camelia> rakudo-moar 38bc682b0: OUTPUT: «1155{ ... }␤»

[12:18] <jmerelo> harrison: there's some stuff with operator precedence there. It's creating a WhateverCode with the asterisks, and I really don't know what's going on with the > 5, but it might go also inside

[12:18] <harrison> jmerelo, you're right.

[12:18] <jmerelo> Actually, .. is only for ranges. If you want Sequences, you should use ...

[12:18] <jmerelo> But still, there might be some issues

[12:18] <harrison> m: say 1,155,* * 1...*>200;

[12:18] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(1 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 155 …»

[12:19] <jmerelo> well, no issues. That's good :-)

[12:19] <harrison> Oh no! I hope that is not an infinite sequence I just created.

[12:19] <harrison> m: say 1,155,* + 1...*>200;

[12:19] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(1 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201)␤»

[12:20] <jmerelo> harrison: infinite, but lazy

[12:20] <harrison> :) oh hail laziness.

[12:21] *** mahafyi joined
[12:22] *** p6bannerbot sets mode: +v mahafyi

[12:22] <SmokeMachine> pmurias: isn't await working yet?

[12:22] <Juerd> Picking a nit: I find it much more readable with a bit of extra whitespace: 1, 155, * + 1 ... * > 200

[12:23] <Juerd> If you don't like whitespace, redistributing it can also make it more readable: 1, 155, *+1 ... *>200

[12:24] <Juerd> The whitespace in the original, "1,155,* + 1...*>200" makes it look to me as if "1,155,*" and "1...*>200" are grouped

[12:24] <lucasb> ah, I think it's nice when whitespace follow operator precedence too

[12:24] <Juerd> As if two lists are being added: (1, 155, *) + (1 ... * > 200), not that that makes sense :)

[12:24] <lucasb> 2*3 + 4*5 instead of 2 * 3+4 * 5

[12:25] <SmokeMachine> pmurias: https://perl6.github.io/6pad/#0bbc5596e2d051624946ee5bd1ebe68a

[12:28] <harrison> SmokeMachine, this is what I get on the console https://transfer.sh/2b7si/Screenshot%20from%202018-12-04%2015-27-07.png

[12:28] <SmokeMachine> harrison: that makes sense!

[12:28] *** pmurias left
[12:29] <SmokeMachine> harrison: thanks!

[12:29] <harrison> SmokeMachine, you're welcome.

[12:29] *** pmurias joined
[12:30] *** p6bannerbot sets mode: +v pmurias

[12:30] *** pmurias left
[12:30] <lucasb> SmokeMachine: pudim! om nom nom

[12:32] <lucasb> ah, and this await code works in non-js?

[12:33] *** |oLa| left
[12:35] <SmokeMachine> lucasb: no... Im using the js fetch...

[12:35] <SmokeMachine> now Im getting `semacquire NYI`... :(

[12:35] <SmokeMachine> https://perl6.github.io/6pad/#0bbc5596e2d051624946ee5bd1ebe68a

[12:37] *** pmurias joined
[12:37] *** p6bannerbot sets mode: +v pmurias

[12:40] <pmurias> SmokeMachine: using js promises using await from Perl 6 isn't done yet

[12:40] <SmokeMachine> but im converting js promises to perl6 promises... :(

[12:41] <pmurias> SmokeMachine: coroutines (used by gather/take/await etc.) work on node.js only atm, but there is an alternative implementation done for the browser it's just not yet plugged in

[12:42] *** sena_kun left
[12:42] <pmurias> SmokeMachine: if you made a github repo for MemoizeDOM maybe it would be easier for me to colaborate on it/tweak it

[12:42] <SmokeMachine> pmurias: what are you using for it js async/await?

[12:42] <pmurias> SmokeMachine: yep

[12:43] <SmokeMachine> pmurias: https://github.com/FCO/MemoizedDOM

[12:43] <pmurias> SmokeMachine: in the generated code you can see commented out /*async*/ /*await*/

[12:43] <SmokeMachine> yes... Ive seen

[12:46] *** pmurias left
[12:50] <lucasb> hmm, so parcel is akin to other bundlers like browserify and webpack?

[12:50] <SmokeMachine> lucasb: I think so

[12:50] *** pmurias joined
[12:50] *** p6bannerbot sets mode: +v pmurias

[12:51] *** domidumont joined
[12:51] <lucasb> I know nothing about JS. just wondered if there was any reason to pick one over another

[12:51] <SmokeMachine> pmurias: did you see the repo? https://github.com/FCO/MemoizedDOM

[12:52] *** p6bannerbot sets mode: +v domidumont

[12:52] <lucasb> unfortunately it makes my browser unresponsive

[12:53] <lucasb> eval_code.js is huge (74M), maybe it could get trimmed down

[12:54] <lucasb> but I guess everything comes from P6, can't strip it without changing the language

[12:55] <SmokeMachine> what about save the eval_code.js on a service worker or at least on a local storage?

[12:55] <pmurias> SmokeMachine: cloned it, working on making it build

[12:56] <SmokeMachine> pmurias: would it make sense to use service worker to "save" the eval_code.js?

[12:56] <SmokeMachine> pmurias: or the old app cache

[12:56] <pmurias> how would that help?

[12:56] <SmokeMachine> pmurias: would not download it every time...

[12:56] <pmurias> the big problem is that that it takes a lot of time to load?

[12:57] <pmurias> SmokeMachine: isn't it cached?

[12:57] <SmokeMachine> of course it should be cached... (sorry, I was trying to help to solve the lucasb's problem...)

[12:58] <SmokeMachine> but yes... its cached on my machine...

[12:58] <pmurias> lucasb: yeah parcel is a bundler like webpack/browserify

[13:00] <pmurias> lucasb: I mostly chose it because it insists the least on re-parsing the code rakudo.js generates

[13:00] *** domidumont1 joined
[13:00] *** pmurias left
[13:01] *** pmurias joined
[13:01] *** p6bannerbot sets mode: +v pmurias

[13:01] *** p6bannerbot sets mode: +v domidumont1

[13:01] *** domidumont2 joined
[13:01] *** domidumont left
[13:02] *** p6bannerbot sets mode: +v domidumont2

[13:02] <lucasb> pmurias: thanks! so that was the reason :)

[13:03] <lucasb> it seems there's a lot of unicode stuff in that file...

[13:03] <pmurias> lucasb: had a webpack plugin working for nqp at some time in the past, so it should be doable

[13:03] *** lizmat joined
[13:03] *** p6bannerbot sets mode: +v lizmat

[13:03] *** pmurias left
[13:04] *** zakharyas joined
[13:04] *** domidumont1 left
[13:04] *** pmurias joined
[13:04] *** p6bannerbot sets mode: +v pmurias

[13:05] *** p6bannerbot sets mode: +v zakharyas

[13:05] <pmurias> lucasb: I haven't put time in reducing the size of code rakudo.js generates

[13:07] <lucasb> understood. now that it works on firefox (thanks for this!), I'll try playing with it, see how it works

[13:08] <pmurias> the way dartpad works is the compile stuff on the server side and just execute a small tree shaken script on the user side

[13:08] <araraloren> so the Raku can work on Firefox now ?

[13:08] <pmurias> rakudo.js now supports firefox

[13:08] <araraloren> Cool

[13:10] <SmokeMachine> and safari too

[13:11] <pmurias> haven't tried it on edge (but that's hopefully dead)

[13:16] <moritz> https://www.windowscentral.com/microsoft-building-chromium-powered-web-browser-windows-10

[13:18] <Summertime> edge was absolutely rocking standards compliance for a bit

[13:19] * pmurias doesn't trust the makers of IE 6 ;)

[13:23] *** coet left
[13:23] *** domidumont2 left
[13:24] *** domidumont joined
[13:25] *** p6bannerbot sets mode: +v domidumont

[13:27] <pmurias> lucasb: the downside of parcel is that it often tries to too smart and values potential awesomeness over correctness

[13:28] <SmokeMachine> pmurias: have you a easy example? Im curious...

[13:29] *** |oLa| joined
[13:30] *** p6bannerbot sets mode: +v |oLa|

[13:30] <pmurias> pmurias: sometimes it's output formatting doesn't display error messages in full because it's update output in place and print a ton of emojis and colors formatter is broken

[13:31] <pmurias> SmokeMachine: or it compiles your Perl 6 program twice because before the worker process "warms up" it races it with the main process

[13:32] <SmokeMachine> pmurias: had you the same kind of problem with web pack?

[13:34] *** sena_kun joined
[13:34] *** p6bannerbot sets mode: +v sena_kun

[13:35] <pmurias> SmokeMachine: not, but webpack wants to reparse generated code a lot

[13:35] <pmurias> which I want to avoid

[13:36] <SmokeMachine> pmurias: had you the same problem as me trying to build MemoizedDOM?

[13:36] *** lizmat left
[13:36] <pmurias> SmokeMachine: yep

[13:37] <pmurias> will try to fix the build

[13:37] <SmokeMachine> :)

[13:40] *** AlexDaniel joined
[13:40] *** p6bannerbot sets mode: +v AlexDaniel

[13:41] *** titsuki joined
[13:42] *** p6bannerbot sets mode: +v titsuki

[13:46] *** tobs` left
[13:47] <AlexDaniel> jmerelo: so?

[13:50] *** lizmat joined
[13:50] *** p6bannerbot sets mode: +v lizmat

[13:57] *** tobs` joined
[13:58] <buggable> New CPAN upload: Chart-Gnuplot-0.0.8.tar.gz by TITSUKI http://modules.perl6.org/dist/Chart::Gnuplot:cpan:TITSUKI

[13:58] *** p6bannerbot sets mode: +v tobs`

[13:59] *** harrison left
[14:06] <jmerelo> AlexDaniel: hum

[14:06] <jmerelo> so what?

[14:06] <AlexDaniel> jmerelo: https://colabti.org/irclogger/irclogger_log/perl6?date=2018-12-03#l876

[14:07] <jmerelo> I'll check it out.

[14:07] <jmerelo> I just did a Doc squashathon because no one else proposed anything...

[14:08] <jmerelo> You probably mean 8 contributors, not 88, right?

[14:08] <jmerelo> I would say kensanata is the winner, right?

[14:11] <AlexDaniel> jmerelo: oh whoops, yeah. And yeah

[14:11] <jmerelo> AlexDaniel: changed that already

[14:12] <AlexDaniel> \o/

[14:12] <AlexDaniel> so let's do anything but a doc squashathon next time… :)

[14:13] <jmerelo> AlexDaniel: unbitrot?

[14:13] <AlexDaniel> there are many ideas actually. Bug hunting (submit bug reports), blog posting, another unbitrot…

[14:14] <jmerelo> .seen kensanata

[14:14] <yoleaux> I saw kensanata 30 Nov 2018 21:27Z in #perl6: <kensanata> AlexDaniel: sure

[14:14] <jmerelo> .tell kensanata you're the winner of the last Squashathon! https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[14:14] <yoleaux> jmerelo: I'll pass your message to kensanata.

[14:14] <jmerelo> .tell kensanata contact AlexDaniel for Camelia shipping :-)

[14:14] <yoleaux> jmerelo: I'll pass your message to kensanata.

[14:15] <AlexDaniel> .tell kensanata actually you have to tell your address to lizmat (or figure out another way, like getting it on a conference)

[14:15] <yoleaux> AlexDaniel: I'll pass your message to kensanata.

[14:15] *** sena_kun left
[14:18] *** jmerelo left
[14:19] *** harrison joined
[14:20] *** p6bannerbot sets mode: +v harrison

[14:21] *** [particle]1 is now known as [particle]

[14:22] <Geth> ¦ doc: dba1d79794 | Coke++ | doc/Type/Test.pod6

[14:22] <Geth> ¦ doc: tag multi-line methods properly

[14:22] <synopsebot_> Link: https://doc.perl6.org/type/Test

[14:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/dba1d79794

[14:27] *** kensanata joined
[14:27] *** p6bannerbot sets mode: +v kensanata

[14:36] <AlexDaniel> kensanata: o/

[14:37] <kensanata> yo!

[14:37] <yoleaux> 14:14Z <jmerelo> kensanata: you're the winner of the last Squashathon! https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[14:37] <yoleaux> 14:14Z <jmerelo> kensanata: contact AlexDaniel for Camelia shipping :-)

[14:37] <yoleaux> 14:15Z <AlexDaniel> kensanata: actually you have to tell your address to lizmat (or figure out another way, like getting it on a conference)

[14:38] <kensanata> Haha, wow!

[14:45] *** mahafyi left
[14:47] <Geth> ¦ doc: taboege++ created pull request #2487: Mention value types in eqv documentation

[14:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2487

[14:47] *** aindilis joined
[14:47] *** random_yanek left
[14:47] *** pmurias left
[14:48] *** p6bannerbot sets mode: +v aindilis

[14:48] *** pmurias joined
[14:48] *** p6bannerbot sets mode: +v pmurias

[14:56] *** atweiden-air joined
[14:57] *** p6bannerbot sets mode: +v atweiden-air

[15:14] *** araraloren left
[15:16] *** random_yanek joined
[15:16] *** random_yanek left
[15:18] *** random_yanek joined
[15:19] *** p6bannerbot sets mode: +v random_yanek

[15:34] *** Ven`` left
[15:39] *** harrison left
[15:42] *** graphene left
[15:43] *** graphene joined
[15:43] *** rindolf joined
[15:44] *** p6bannerbot sets mode: +v graphene

[15:44] *** p6bannerbot sets mode: +v rindolf

[15:48] <AlexDaniel> hah, I love JJ's advent post :) 🎅

[15:49] <AlexDaniel> kensanata: some time ago you asked about documentation: https://perl6advent.wordpress.com/2018/12/02/like-perls-in-a-pod-document-everything-and-test-the-documentation/

[16:01] *** molaf left
[16:02] *** dakkar left
[16:02] *** dakkar joined
[16:03] *** p6bannerbot sets mode: +v dakkar

[16:07] *** robertle left
[16:09] *** domidumont left
[16:09] *** atweiden-air left
[16:17] *** pmurias left
[16:17] <Geth> ¦ doc: taboege++ created pull request #2488: Add WAT to Glossary

[16:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2488

[16:18] *** pmurias joined
[16:18] *** p6bannerbot sets mode: +v pmurias

[16:19] *** pmurias left
[16:20] *** vike1 left
[16:23] *** pmurias joined
[16:23] *** p6bannerbot sets mode: +v pmurias

[16:26] *** vike1 joined
[16:27] *** p6bannerbot sets mode: +v vike1

[16:29] *** pmurias left
[16:30] *** pmurias joined
[16:30] *** p6bannerbot sets mode: +v pmurias

[16:31] *** pmurias left
[16:33] *** jmerelo joined
[16:34] *** p6bannerbot sets mode: +v jmerelo

[16:35] *** pmurias joined
[16:35] *** p6bannerbot sets mode: +v pmurias

[16:37] *** robertle joined
[16:38] <buggable> New CPAN upload: Math-FFT-Libfftw3-0.1.1.tar.gz by FRITH http://modules.perl6.org/dist/Math::FFT::Libfftw3:cpan:FRITH

[16:38] *** p6bannerbot sets mode: +v robertle

[16:43] <kensanata> AlexDaniel: Nice!

[16:44] *** |oLa| left
[16:44] <jmerelo> kensanata: congrats :-)

[16:44] * kensanata bows

[16:44] *** kensanata left
[16:45] <Geth> ¦ doc: f8016747c9 | (Tobias Boege)++ | doc/Language/glossary.pod6

[16:45] <synopsebot_> Link: https://doc.perl6.org/language/glossary

[16:45] <Geth> ¦ doc: Add WAT to Glossary

[16:45] <Geth> ¦ doc: 

[16:45] <Geth> ¦ doc: Synopsis 99 has an entry for WAT. It still appears in chat and issues,

[16:45] <Geth> ¦ doc: e.g. in the doc repo, often as the backside of a DWIM [1]. The formulation

[16:45] <Geth> ¦ doc: in this commit differs a bit from S99 to highlight that perceived duality.

[16:45] <Geth> ¦ doc: 

[16:45] <Geth> ¦ doc: [1] https://colabti.org/irclogger/irclogger_log_search/perl6?search=WAT&action=search

[16:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f8016747c9

[16:45] <Geth> ¦ doc: 8558478f9a | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/glossary.pod6

[16:45] <Geth> ¦ doc: Merge pull request #2488 from taboege/WAT-glossary

[16:45] <Geth> ¦ doc: 

[16:45] <Geth> ¦ doc: Add WAT to Glossary

[16:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8558478f9a

[16:48] *** |oLa| joined
[16:48] *** kurahaupo left
[16:49] *** p6bannerbot sets mode: +v |oLa|

[16:55] *** ryn1x joined
[16:56] *** p6bannerbot sets mode: +v ryn1x

[17:03] *** ryn1x left
[17:10] *** graphene left
[17:11] *** graphene joined
[17:11] *** abraxxa left
[17:12] *** p6bannerbot sets mode: +v graphene

[17:17] <pmurias> SmokeMachine: EVALing while compiling the module is causing the weird error

[17:18] <SmokeMachine> you mean the EVAL :lang<JavaScript>?

[17:18] <SmokeMachine> or any EVAL?

[17:18] <SmokeMachine> pmurias: ^^

[17:18] <hahainternet> m: my %h = (a => "b", b => "c", a => "c"); %h.say

[17:18] <camelia> rakudo-moar 194c84b91: OUTPUT: «{a => c, b => c}␤»

[17:18] <hahainternet> is there a nice idiom to avoid this unfortunate misstep?

[17:19] <timotimo> yeah

[17:19] <hahainternet> and create an array / list within the value, ie a => [<b c>]

[17:19] <SmokeMachine> m: my @h = a => "b", b => "c", a => "c"; @h.say

[17:19] <camelia> rakudo-moar 194c84b91: OUTPUT: «[a => b b => c a => c]␤»

[17:19] <timotimo> m: my %h; %h.push((a => "b", b => "c", a => "c")); say %h.perl

[17:19] <camelia> rakudo-moar 194c84b91: OUTPUT: «{:a($["b", "c"]), :b("c")}␤»

[17:19] <hahainternet> aaaaah push, of course

[17:19] <timotimo> when push comes to shove ... :)

[17:19] <hahainternet> (it's not that obvious but i should have checked it)

[17:20] <timotimo> yeah, it's certainly not obvious without checking the docs

[17:20] <hahainternet> timotimo: it makes my line length 1 too long, how do you propose to deal with that? ;)

[17:20] *** molaf joined
[17:21] <pmurias> SmokeMachine: any EVAL is broken, will fix that in a moment

[17:21] <SmokeMachine> pmurias++

[17:21] *** p6bannerbot sets mode: +v molaf

[17:23] <El_Che> weekly: Rakudo 2018.11 Linux packages released (in repos and Github releases) https://github.com/nxadm/rakudo-pkg

[17:23] <notable6> El_Che, Noted!

[17:25] *** dakkar left
[17:26] <pmurias> SmokeMachine: but EVAL :lang<JavaScript> with document won't work anyways

[17:27] <timotimo> shorter variable names :)

[17:27] <pmurias> SmokeMachine: when using parcel we are compiling under node.js

[17:27] <SmokeMachine> but for the compiler isnt it just a string? it will be parsed at runtime, wont?

[17:28] <SmokeMachine> pmurias: ^^

[17:28] <pmurias> SmokeMachine: when you are using MemoizeDOM, the code in it gets run

[17:29] <pmurias> the Perl 6 compiler doesn't complain, the node.js V8 that does the eval complains

[17:29] <SmokeMachine> yesy... you are right... maybe Ill have to transform it in a sub `get-document`

[17:31] <SmokeMachine> pmurias: no... I didnt get it... it would happen if it were on a BEGIN, but why is it running on node?

[17:31] <SmokeMachine> and why it works on 6pad?

[17:33] *** sena_kun joined
[17:33] <pmurias> SmokeMachine: the problem happens when MemoizeDOM is in it's own module

[17:33] <pmurias> when you 'use MemoizeDOM' the stuff in it gets run at BEGIN time

[17:33] *** p6bannerbot sets mode: +v sena_kun

[17:34] <SmokeMachine> pmurias: ok! now I got it!

[17:36] <SmokeMachine> pmurias: maybe a `class Element { has $.document = EVAL :<JavaScript>, "return document"; ...` could work... and that would make it easier to mock on tests...

[17:38] <SmokeMachine> maybe a `my $document; class Element { has $.document = $document //= EVAL :<JavaScript>, "return document"; ...`

[17:38] *** pmurias left
[17:41] *** atweiden-air joined
[17:41] *** tobs` left
[17:42] *** p6bannerbot sets mode: +v atweiden-air

[17:42] <atweiden-air> about to open prs for moarvm, nqp, rakudo at homebrew-core with these:

[17:42] <atweiden-air> https://github.com/atweiden/homebrew-formulae/blob/master/moarvm/moarvm.rb

[17:42] <atweiden-air> https://github.com/atweiden/homebrew-formulae/blob/master/nqp/nqp.rb

[17:42] <atweiden-air> https://github.com/atweiden/homebrew-formulae/blob/master/rakudo/rakudo.rb

[17:42] <atweiden-air> is it a good idea to use system libs in moarvm?

[17:43] <jmerelo> atweiden-air: what does it imply a PR for homebrew? Do you need them to download them using homebrew?

[17:43] <atweiden-air> jmerelo just that it effects lots of potential p6 users, so if system libs are iffy, then i will go back to building 3rdparty in moarvm

[17:44] <SmokeMachine> .tell pmurias is there any plan to implement the `defined` method on the JS object wrapper?

[17:44] <yoleaux> SmokeMachine: I'll pass your message to pmurias.

[17:46] <jmerelo> atweiden-air: sorry, you lost me here. Do you mean you are going to make PRs to somehow make people compiling moarvm (and the rest) use some library that is not the system library? Will that be for the Mac or for everyone?

[17:46] <atweiden-air> jmerelo: the goal is: brew install rakudo

[17:47] <atweiden-air> as opposed to brew install rakudo-star

[17:47] <jmerelo> atweiden-air: ah, OK.

[17:48] *** pmurias joined
[17:48] *** p6bannerbot sets mode: +v pmurias

[17:51] *** [Sno] joined
[17:52] *** p6bannerbot sets mode: +v [Sno]

[17:52] <SmokeMachine> pmurias: I mean something like this: https://github.com/FCO/MemoizedDOM/pull/1/files

[17:56] <jmerelo> .seen timotimo

[17:56] <yoleaux> I saw timotimo 17:27Z in #perl6: <timotimo> shorter variable names :)

[17:56] <jmerelo> .seen masak

[17:56] <yoleaux> I saw masak 3 Dec 2018 21:26Z in #perl6: <masak> otherwise you can't bind an Int argument to a Real parameter

[17:58] <pmurias> SmokeMachine: re .defined I have to think that over

[17:58] <yoleaux> 17:44Z <SmokeMachine> pmurias: is there any plan to implement the `defined` method on the JS object wrapper?

[17:59] <pmurias> SmokeMachine: got to think over what happens if the is a defined method on the JS object etc.

[17:59] <SmokeMachine> pmurias: I think it would help to have: defined, Bool, gist, Str, etc...

[18:00] <pmurias> I'll go grab some food and think that through

[18:01] <pmurias> SmokeMachine: but maybe I could over a 'raw' and 'with extra methods' flag to EVAL

[18:02] <SmokeMachine> pmurias: I think that would work...

[18:03] <SmokeMachine> pmurias: had you had the chance to take a look at the PR?

[18:03] <pmurias> SmokeMachine: that should fix that issue

[18:03] <Geth> ¦ doc: 6f57bbe431 | (Tobias Boege)++ | doc/Language/operators.pod6

[18:03] <Geth> ¦ doc: Mention value types in eqv documentation

[18:03] <synopsebot_> Link: https://doc.perl6.org/language/operators

[18:03] <Geth> ¦ doc: 

[18:03] <Geth> ¦ doc: Add an example where eqv on Set objects is (counter-intuitively) false:

[18:03] <Geth> ¦ doc: putting two objects which are equivalent each into a Set does not make

[18:03] <Geth> ¦ doc: the Set objects equivalent. The explanation refers to documentation of

[18:03] <Geth> ¦ doc: value types.

[18:03] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6f57bbe431

[18:03] <Geth> ¦ doc: c854f4d4ee | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/operators.pod6

[18:03] <Geth> ¦ doc: Merge pull request #2487 from taboege/eqv-on-Set

[18:03] <Geth> ¦ doc: 

[18:03] <Geth> ¦ doc: Mention value types in eqv documentation

[18:03] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c854f4d4ee

[18:04] <SmokeMachine> pmurias: and I think that would make it easier to me start to write some tests...

[18:06] *** clarkema joined
[18:06] *** p6bannerbot sets mode: +v clarkema

[18:09] <lucasb> ^^ I was surprised by this Set/eqv thing

[18:09] <lucasb> m: say ('foo'=>[1,2,3]) eqv ('foo'=>[1,2,3])

[18:09] <camelia> rakudo-moar 194c84b91: OUTPUT: «True␤»

[18:10] <lucasb> m: say ($[1,2,3]).Set eqv ($[1,2,3]).Set

[18:10] <camelia> rakudo-moar 194c84b91: OUTPUT: «True␤»

[18:11] <lucasb> nevermind, I must have mis-interpreted something :)

[18:12] *** tmtvl joined
[18:12] <lucasb> m: say ([1,2,3],).Set eqv ([1,2,3],).Set

[18:12] <camelia> rakudo-moar 194c84b91: OUTPUT: «True␤»

[18:12] <lucasb> m: say ($[1,2,3],).Set eqv ($[1,2,3],).Set

[18:12] <camelia> rakudo-moar 194c84b91: OUTPUT: «False␤»

[18:13] *** p6bannerbot sets mode: +v tmtvl

[18:13] <tmtvl> o/

[18:13] <lucasb> ah, ([1,2],[3,4]).Set expand things... I was expecting a 2-elem set, not 4-elem

[18:16] <masak> right. advent post writing time.

[18:16] <yoleaux> 06:47Z <jmerelo> masak: of course it does :-)

[18:16] * masak rolls up sleeves

[18:17] <jmerelo> masak++

[18:18] <buggable> New CPAN upload: PDF-Class-0.3.1.tar.gz by WARRINGD http://modules.perl6.org/dist/PDF::Class:cpan:WARRINGD

[18:19] <Geth> ¦ doc: cff272d825 | (JJ Merelo)++ | doc/Type/Test.pod6

[18:19] <synopsebot_> Link: https://doc.perl6.org/type/Test

[18:19] <Geth> ¦ doc: Reindent to test shippable refs #2489

[18:19] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cff272d825

[18:22] <lucasb> we'll get to know the adverb usage he is intending :)

[18:24] <masak> actually, no

[18:24] <masak> that's next post ;)

[18:24] <lucasb> ah

[18:24] <Geth> ¦ doc: 4b0a19a92c | (JJ Merelo)++ | README.md

[18:24] <Geth> ¦ doc: Puts badges in a row, closes #2489

[18:24] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4b0a19a92c

[18:25] *** sauvin left
[18:25] * jmerelo gets back from a brief moment of panic

[18:27] <masak> m: sub foo(:$x) { $x }; sub bar { foo :$:x }; say bar :x

[18:27] <camelia> rakudo-moar 194c84b91: OUTPUT: «True␤»

[18:27] * masak .oO( :$:x )

[18:27] <masak> look what happens when Larry gets the colon :P

[18:32] <Kaiepi> ?

[18:32] <Kaiepi> m: sub foo { say :$:foo }; foo :foo<ayy lmao>

[18:32] <camelia> rakudo-moar 194c84b91: OUTPUT: «Unexpected named argument 'foo' passed␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[18:33] <jmerelo> sub foo(:$x) { $x }; sub bar { foo :$:x }; say bar :none

[18:33] <jmerelo> m: sub foo(:$x) { $x }; sub bar { foo :$:x }; say bar :none

[18:33] <camelia> rakudo-moar 194c84b91: OUTPUT: «Required named parameter 'x' not passed␤  in sub bar at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[18:33] <Kaiepi> oh i see what's going on

[18:33] <timotimo> $:x is syntax for the implicit named argument, right?

[18:33] <tobs> it's say that is complaining

[18:34] <Kaiepi> m: sub foo { say $:foo }; foo :foo<ayy lmao>

[18:34] <camelia> rakudo-moar 194c84b91: OUTPUT: «(ayy lmao)␤»

[18:34] *** graphene left
[18:34] <timotimo> and putting a : in front makes it a pair x => $:x

[18:34] <Kaiepi> neat, i didn't know you could do that

[18:34] <masak> timotimo: a pair which is a named *parameter* in this case

[18:34] <timotimo> yeah

[18:35] <masak> (getting its name from the implicit named argument, of course)

[18:35] <timotimo> well, it's a pair of the name to the value that has been passed from outside

[18:35] <masak> timotimo: I think of it as a more syntactic thing than that

[18:35] <masak> Pairs are runtime values -- here, it just denotes "named parameter"

[18:35] <timotimo> it surely is the shortest syntax to pass on an individual named argument :D

[18:36] <masak> hard to beat, yes

[18:36] *** Grauwolf left
[18:36] <masak> though I guess |%* is pretty short, too

[18:36] *** atweiden-air left
[18:39] <timotimo> right, but it won't give you control over individual nameds

[18:42] *** Grauwolf joined
[18:42] *** Grauwolf left
[18:42] *** Grauwolf joined
[18:42] *** p6bannerbot sets mode: +v Grauwolf

[18:43] *** p6bannerbot sets mode: +v Grauwolf

[18:48] <timotimo> unless you use |%*<foo bar baz>:p, but that's neither here nor there :D

[18:48] *** neteng1198s left
[18:56] <pmurias> SmokeMachine: why isn't the PR merged? ;) (I can't do it because I don't have commit access to your repo)

[18:57] <SmokeMachine> I’m on a meetings...

[18:57] <pmurias> ok

[18:59] <SmokeMachine> Merged

[18:59] <SmokeMachine> pmurias: could you please send me your github user?

[19:01] <pmurias> pmurias

[19:03] *** mscha joined
[19:03] *** p6bannerbot sets mode: +v mscha

[19:05] * masak .oO( not the user *name*, silly. the *user* ) :P

[19:05] <mscha> m: my @foo; if 'bar42' ~~ /\d+/ { @foo[1;$/]++ }  # Very helpful error message...

[19:05] <camelia> rakudo-moar 194c84b91: OUTPUT: «Cannot resolve caller postfix:<++>(List); the following candidates␤match the type but require mutable arguments:␤    (Mu:D $a is rw)␤␤The following do not match for other reasons:␤    (Bool:D $a is rw)␤    (Bool:U $a is rw --> Bool::False)…»

[19:05] <mscha> m: my @foo; if 'bar42' ~~ /\d+/ { @foo[1;+$/]++ }  # This works.

[19:05] <camelia> rakudo-moar 194c84b91: ( no output )

[19:05] <mscha> m: my @foo; if 'bar42' ~~ /\d+/ { @foo[$/]++ }  # This doesn't have the same issue.

[19:05] <camelia> rakudo-moar 194c84b91: ( no output )

[19:06] <masak> mscha: that looks like a multidimensional array indexing to me. is that what you intend?

[19:06] <masak> i.e. -- do you know that `;` means "multidim" in index brackets?

[19:07] <mscha> masak: yes, that's what I indend, and it works fine, but not if one of the two indices is a Match object, then you get that weid error message.

[19:08] <masak> mscha: you intend for the Match object to numify automatically?

[19:08] <mscha> With one-dimensional indexing, it works fine with a Match object as the index.

[19:08] <mscha> Most importantly, the error message is confusing.  It took me about 15 minutes to figure out I had to numify it.

[19:09] <timotimo> hm, but you can also pass a list, right?

[19:09] <timotimo> to slicing

[19:09] <timotimo> m: my @foo; if 'bar42' ~~ /\d+/ { @foo[$/]++ }; say @foo

[19:09] <camelia> rakudo-moar 194c84b91: OUTPUT: «[(Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any) (Any…»

[19:09] <timotimo> hm, ok, that does use 42 there

[19:09] <lucasb> too mAny

[19:09] <timotimo> so you'd have to use | there i suppose

[19:09] <timotimo> ha

[19:10] <pmurias> masak: I'm too lanky to fit into a parcel ;)

[19:10] <lucasb> mscha: playing AoC per chance? :)

[19:11] <Geth> ¦ doc: c3a1ccdb38 | Coke++ | doc/Language/operators.pod6

[19:11] <synopsebot_> Link: https://doc.perl6.org/language/operators

[19:11] <Geth> ¦ doc: curly braces

[19:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c3a1ccdb38

[19:11] <mscha> lucasb: exactly.  :-)

[19:11] <lucasb> if you wanna join our leaderboard the code is 169430-b1c331b2

[19:12] <mscha> lucasb: I'm not getting up at 6am to do this, so the leaderboard is useless to me.  ;-)

[19:13] *** kurahaupo joined
[19:13] <lucasb> ok, it's a fun exercise anyway :)

[19:14] *** p6bannerbot sets mode: +v kurahaupo

[19:14] <Xliff> my %h =  |%*<foo bar baz>; %h.gist.say

[19:14] <Xliff> m: my %h =  |%*<foo bar baz>; %h.gist.say

[19:14] <camelia> rakudo-moar 194c84b91: OUTPUT: «Odd number of elements found where hash initializer expected:␤Only saw 1 element␤  in block <unit> at <tmp> line 1␤␤»

[19:14] *** pmurias left
[19:14] <Xliff> m: %*<foo bar baz>.say

[19:14] <camelia> rakudo-moar 194c84b91: OUTPUT: «WARNINGS for <tmp>:␤(foo bar baz)␤Useless use of "*" in expression "%*<foo bar baz>.say" in sink context (line 1)␤»

[19:14] <mscha> lucasb: fun excercise, and a good opportunity to show off Perl 6.  :-)

[19:14] <Xliff> m: %<foo bar baz>.say

[19:14] <camelia> rakudo-moar 194c84b91: OUTPUT: «Use of uninitialized value of type Any in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in block <unit> at <tmp> line 1␤Died with X::Hash::Store::OddNumber␤  in block <unit> at <tm…»

[19:15] <SmokeMachine> pmurias: but it will have a problem with the EVAL of the defined, won’t it?

[19:15] <lucasb> mscha: yeah, keep comming everyday, so we all learn new idioms!

[19:15] <Xliff> ¯\_(ツ)_/¯

[19:17] <lucasb> s/m// :)

[19:20] *** pmurias joined
[19:20] *** p6bannerbot sets mode: +v pmurias

[19:21] *** leont joined
[19:21] *** p6bannerbot sets mode: +v leont

[19:22] *** graphene joined
[19:23] *** p6bannerbot sets mode: +v graphene

[19:23] *** Possum left
[19:23] *** Possum joined
[19:24] *** p6bannerbot sets mode: +v Possum

[19:27] *** graphene left
[19:29] *** pmurias left
[19:29] *** graphene joined
[19:30] *** p6bannerbot sets mode: +v graphene

[19:31] *** pmurias joined
[19:31] *** p6bannerbot sets mode: +v pmurias

[19:31] <[Coke]> in the REPL, if I type $*V and hit tab, the autocomplete is giving me types, not dynamic variables.

[19:35] <Geth> ¦ doc: 7912acddc8 | Coke++ | doc/Language/faq.pod6

[19:35] <Geth> ¦ doc: really wants an article here.

[19:35] <synopsebot_> Link: https://doc.perl6.org/language/faq

[19:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7912acddc8

[19:37] *** lizmat left
[19:47] <jmerelo> [Coke]: old URL alert!!!

[19:51] *** lizmat joined
[19:51] *** p6bannerbot sets mode: +v lizmat

[19:51] <jmerelo> lizmat: how are you?

[19:51] <Geth> ¦ doc: 30aa8aefb2 | (JJ Merelo)++ | doc/Language/faq.pod6

[19:51] <Geth> ¦ doc: Changing to new URL

[19:51] <synopsebot_> Link: https://doc.perl6.org/language/faq

[19:51] <Geth> ¦ doc: 

[19:51] <Geth> ¦ doc: Old one still works, but it redirects and we can use the new one already.

[19:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/30aa8aefb2

[19:58] <[Coke]> jmerelo: ?

[19:59] <[Coke]> oh. I was only looking at the one thing I changed.

[19:59] <[Coke]> also: the URL you added has a double / in it.

[19:59] <[Coke]> (in the path, not just after the scheme)

[19:59] <jmerelo> [Coke]: no problem. There are a few, we would have ot check it...

[20:01] <[Coke]> https://perlconference.us/tpc-2019-pit/ now showing June 16-21 in Pittsburgh, PA

[20:02] *** |oLa| left
[20:02] <[Coke]> also, I just got an email with some details

[20:06] <Geth> ¦ doc: e088d260a5 | (JJ Merelo)++ | 3 files

[20:06] <Geth> ¦ doc: Updates IRC log pointers

[20:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e088d260a5

[20:06] <jmerelo> [Coke]: RFC is kind of close, right?

[20:07] <masak> draft of the advent post: https://gist.github.com/masak/9d586206067f1cfbae31e5e79588a1ce

[20:07] <jmerelo> masak++

[20:07] <masak> let me know what you think! will put it up on wordpress later tonight.

[20:08] <masak> if I'm lucky, I might even be able to work out how to schedule it for automatic publishing

[20:08] <jmerelo> masak: looks fine to me.

[20:10] <jmerelo> masak: although

[20:10] <jmerelo> masak: macros are still experimental, right?

[20:10] <jmerelo> masak: you click on publish, that option will pop up.

[20:14] *** jmerelo left
[20:18] <lucasb> what is the feeling about redirecting docs.perl6.org to doc.perl6.org ?

[20:20] <lucasb> or... *feelings* (in the plural :)

[20:21] <sena_kun> is there a reason besides personal preferences?

[20:21] <lucasb> none that I'm aware of :)

[20:21] <sena_kun> count me -1 then. :)

[20:22] <tadzik> +1 from me, less confusion when you typo

[20:22] <lucasb> seems like we reached zero :)

[20:22] <sena_kun> typo like what? `doc` instaed of `docs`?

[20:22] <sena_kun> *instead

[20:23] *** hankache joined
[20:23] <[Coke]> lucasb: it's going the other way currently. why change it?

[20:24] *** p6bannerbot sets mode: +v hankache

[20:24] <lucasb> as stated before, "personal preferences" :)

[20:24] <lucasb> it's ok, it's just a "S", it was an idea :)

[20:25] * sena_kun has muscule memory already done for typing `docs.p` into address bar

[20:26] * lucasb usually names the directories in the singular

[20:26] *** Khisanth left
[20:26] <hankache> Anyone interested in grabbing my spot in the Advent Calendar? It's the on the 9th.

[20:28] <sena_kun> Skarsnik maybe?

[20:29] <sena_kun> https://colabti.org/irclogger/irclogger_log/perl6?date=2018-12-03#l928

[20:29] <hankache> .seen Skarsnik

[20:29] <yoleaux> I saw Skarsnik 3 Dec 2018 21:58Z in #perl6: <Skarsnik> trait are compile time

[20:30] *** graphene left
[20:31] *** graphene joined
[20:32] <hankache> .tell Skarsnik regarding https://colabti.org/irclogger/irclogger_log/perl6?date=2018-12-03#l928 feel free to take my spot on the 9th. Kindly submit a PR to perl6/advent.

[20:32] <yoleaux> hankache: I'll pass your message to Skarsnik.

[20:32] <hankache> thanks sena_kun

[20:32] *** p6bannerbot sets mode: +v graphene

[20:32] *** ryn1x joined
[20:33] <sena_kun> you're welcome. I hope the spot will be taken. :)

[20:33] *** p6bannerbot sets mode: +v ryn1x

[20:35] <hankache> indeed I'll feel bad if no one does. I was planning on writing something but won't have the time to.

[20:36] <masak> jmerelo: yes, macros are experimental still. I added a pragma to that effect in the blog post.

[20:36] <masak> I should also write something about the new exciting hygiene semantics not working yet

[20:37] <hankache> If anyone wants the 9th of December spot please take it. First one to submit a PR to perl6/advent wins

[20:39] <pmurias> SmokeMachine: I committed some fixes to MemoizedDOM

[20:39] *** Khisanth joined
[20:40] *** p6bannerbot sets mode: +v Khisanth

[20:42] *** mscha left
[20:43] *** pmurias left
[20:49] *** pmurias joined
[20:49] *** p6bannerbot sets mode: +v pmurias

[20:49] <Geth> ¦ advent: hankache++ created pull request #8: Remove my entry on the 9th

[20:49] <Geth> ¦ advent: review: https://github.com/perl6/advent/pull/8

[20:50] <SmokeMachine> pmurias: .rakudorc is a thing?

[20:59] <SmokeMachine> pmurias: thanks!

[21:03] <Geth> ¦ advent: 70f7ae9b24 | (Naoum Hankache)++ (committed using GitHub Web editor) | perl6advent-2018/schedule

[21:03] <Geth> ¦ advent: Remove my entry on the 9th

[21:03] <Geth> ¦ advent: 

[21:03] <Geth> ¦ advent: Unfortunately I won't have the time to prepare my post.

[21:03] <Geth> ¦ advent: Feel free to grab it or tell someone who wants to.

[21:03] <Geth> ¦ advent: review: https://github.com/perl6/advent/commit/70f7ae9b24

[21:03] <Geth> ¦ advent: 82c4847f3d | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | perl6advent-2018/schedule

[21:03] <Geth> ¦ advent: Merge pull request #8 from hankache/patch-1

[21:03] <Geth> ¦ advent: 

[21:03] <Geth> ¦ advent: Remove my entry on the 9th

[21:03] <Geth> ¦ advent: review: https://github.com/perl6/advent/commit/82c4847f3d

[21:04] <SmokeMachine> pmurias: are you getting this? 🚨  /home/fernando/Projects/MemoizedDOM/examples/todo/todo.p6: ENOENT: no such file or directory, open '/home/fernando/Projects/MemoizedDOM/examples/todo/node_modules/rakudo/CORE.setting.js.map'

[21:04] *** ryn1x left
[21:17] *** donaldh left
[21:17] *** donaldh_ joined
[21:18] *** p6bannerbot sets mode: +v donaldh_

[21:19] *** donaldh joined
[21:19] *** donaldh_ left
[21:19] *** p6bannerbot sets mode: +v donaldh

[21:20] *** molaf left
[21:29] <moritz> masak: how is your advent calendar entry for tomorrow coming along?

[21:35] <masak> moritz: it's done; just need to put it into the wordpress thing

[21:37] *** gurmble is now known as grumble

[21:38] *** hankache left
[21:40] <moritz> masak: that's good to hear, thanks

[21:43] <masak> I think I just scheduled it correctly

[21:43] <masak> hint to future-me and all the other authors

[21:44] *** zakharyas left
[21:44] <masak> you need to *both* choose to make the "status" into "Schedule", *and* to hit the big nice "Schedule" button (twice)

[21:44] <masak> the second step is what I usually omit, methinks

[21:44] <masak> I also scrolled through the preview, and it looked OK

[21:44] <Xliff> Is there a way to refer to the current file, in Perl6?

[21:45] <Xliff> _FILE_, is it?

[21:45] <moritz> Xliff: $?FILE I believe

[21:45] <masak> pasting directly from a rendered gist is a surprisingly viable way to use the WYSIWYG editor ;)

[21:45] <masak> m: say $?FILE

[21:45] <camelia> rakudo-moar 194c84b91: OUTPUT: «<tmp>␤»

[21:45] <Xliff> moritz++ 

[21:45] <Xliff> m: say $?FILE.lines

[21:45] <camelia> rakudo-moar 194c84b91: OUTPUT: «(<tmp>)␤»

[21:45] <Xliff> m: say $?FILE.WHAT

[21:45] <camelia> rakudo-moar 194c84b91: OUTPUT: «(Str)␤»

[21:46] <moritz> masak: last I used it, selecting a publishing date in the future automatically selected the status, so fater that I only had to hit "Publish"

[21:46] <Xliff> m: say $?FILE.IO.open.slurp.lines

[21:46] <camelia> rakudo-moar 194c84b91: OUTPUT: «(say $?FILE.IO.open.slurp.lines)␤»

[21:46] <Xliff> m: say $?FILE.IO.open.slurp.lines.elems

[21:46] <camelia> rakudo-moar 194c84b91: OUTPUT: «1␤»

[21:46] <Xliff> Hahahaha!

[21:46] <moritz> Xliff: camelia automatically replaces the current temp file name <tmp> in output

[21:49] <jdv79> what exactly is %?

[21:49] <jdv79> not sure i've ever seen something like "say % .classify-list:..."

[21:53] *** ChoHag joined
[21:54] *** p6bannerbot sets mode: +v ChoHag

[21:55] <Geth> ¦ doc: 8314e10294 | (Mike Clarke)++ | doc/Language/control.pod6

[21:55] <Geth> ¦ doc: Add missing 'end code' to control structure page

[21:55] <synopsebot_> Link: https://doc.perl6.org/language/control

[21:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8314e10294

[21:58] <lucasb> jdv79: looks like an anonymous state hash variable

[22:00] *** clarkema_ joined
[22:01] *** p6bannerbot sets mode: +v clarkema_

[22:03] <moritz> or a hash contextualizer

[22:08] <buggable> New CPAN upload: Sparrowdo-0.0.43.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo:cpan:MELEZHIK

[22:08] <buggable> New CPAN upload: Sparky-0.0.25.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparky:cpan:MELEZHIK

[22:12] <pmurias> SmokeMachine: you get that error while building?

[22:12] <SmokeMachine> yes

[22:12] <SmokeMachine> and the file really does not exist

[22:17] *** sena_kun left
[22:29] <jdv79> is it one or both?

[22:30] <jdv79> anon state

[22:32] *** Manifest0 left
[22:32] *** Manifest0 joined
[22:33] *** p6bannerbot sets mode: +v Manifest0

[22:45] *** |oLa| joined
[22:46] *** p6bannerbot sets mode: +v |oLa|

[22:46] *** |oLa| left
[22:46] *** vrurg left
[22:50] *** vrurg joined
[22:51] *** p6bannerbot sets mode: +v vrurg

[22:54] <pmurias> SmokeMachine: I'll need to make a new rakudo.js release :/

[22:54] <pmurias> sleep&

[22:54] *** pmurias left
[23:07] *** ufobat joined
[23:07] *** p6bannerbot sets mode: +v ufobat

[23:14] *** vike1 left
[23:15] *** vike joined
[23:16] *** p6bannerbot sets mode: +v vike

[23:20] <SmokeMachine> .tell pmurias I splitted the modules into different files and started to write some tests...

[23:20] <yoleaux> SmokeMachine: I'll pass your message to pmurias.

[23:22] <donaldh> Is there an idiomatic way of %h<key> = Thing.new if %h<key>:!exists followed by $obj = %h<key>

[23:24] <tobs> m: my %h; my $obj = %h<key> //= Rat.new; say $obj; say %h<key>

[23:24] <camelia> rakudo-moar 194c84b91: OUTPUT: «0␤0␤»

[23:24] <tobs> m: my %h; %h<key> = 'defined'; my $obj = %h<key> //= Rat.new; say $obj; say %h<key>

[23:24] <camelia> rakudo-moar 194c84b91: OUTPUT: «defined␤defined␤»

[23:24] <tobs> donaldh: like that?

[23:24] <donaldh> tobs++

[23:24] <donaldh> Exactly. was looking for a 1 liner

[23:25] <tobs> though I'm not sure about the corner cases of "//= vs. :!exists"

[23:26] <donaldh> True, the exists as undefined corner case

[23:28] <donaldh> m: my %h; %h<key> = Nil; my $obj = %h<key> //= Rat.new; say $obj; say %h<key>

[23:28] <camelia> rakudo-moar 194c84b91: OUTPUT: «0␤0␤»

[23:29] <donaldh> m: my %h; %h<key> = Nil; say %h<key>

[23:29] <camelia> rakudo-moar 194c84b91: OUTPUT: «(Any)␤»

[23:29] <donaldh> m: my %h; %h<key> = Nil; say %h<key>:exists

[23:29] <camelia> rakudo-moar 194c84b91: OUTPUT: «True␤»

[23:38] <donaldh> m: my %h; %h<key> = Nil; say %h<key>.defined

[23:38] <camelia> rakudo-moar 194c84b91: OUTPUT: «False␤»

[23:38] <donaldh> oh

[23:38] <Kaiepi>   Parse errors: Tests out of sequence.  Found (6) but expected (5)

[23:38] <Kaiepi> how do i tell which tests are out of sequence?

[23:39] *** peaveyman11 joined
[23:39] *** peaveyman11 left
[23:43] *** jaush joined
[23:43] *** p6bannerbot sets mode: +v jaush

[23:43] <jaush> hi!  how do i get zef (This is Rakudo Star version 2018.10 built on MoarVM version 2018.10) to work on windows (2012)?

[23:44] <leont> Kaiepi: by running in verbose mode (-v)

[23:44] *** ryn1x joined
[23:44] <leont> What harness are you using: prove or prove6?

[23:44] <Kaiepi> whichever zef uses

[23:44] <Kaiepi> prove i think

[23:45] <leont> zef can use either, depending on what is installed

[23:45] *** p6bannerbot sets mode: +v ryn1x

[23:45] * leont is the author of prove6

[23:45] <leont> (and the maintainer of prove)

[23:47] <Kaiepi> how do i use prove for perl6 tests again?

[23:48] *** pmmm left
[23:50] <Kaiepi> nvm, prove -e 'perl6 -Ilib' -v t/

[23:51] <Kaiepi> thanks

[23:52] *** ZofBot left
[23:52] *** ZofBot joined
[23:52] *** ChanServ sets mode: +v ZofBot

[23:52] *** p6bannerbot sets mode: +v ZofBot

[23:52] *** huggable joined
[23:52] *** ChanServ sets mode: +v huggable

[23:52] *** buggable left
[23:52] <leont> or just «prove6 -l -v t» ;-)

[23:53] *** buggable joined
[23:53] *** ChanServ sets mode: +v buggable

[23:53] *** p6bannerbot sets mode: +v huggable

[23:53] *** p6bannerbot sets mode: +v buggable

[23:54] *** lichtkind joined
[23:55] *** p6bannerbot sets mode: +v lichtkind

[23:57] <lichtkind> rakudo tells  me cant flush filehandle but all i wanted is to use keyword prompt

