[00:00] <timotimo> greetings

[00:00] <timotimo> please state the nature of your lepidopterological emergency

[00:04] <tbrowder__> i want to assign a function with multple args to a scalar, and then use it, but how is that done? the docs show a weird example for 2 args but it‚Äôs not clear how to practically use it. here is what i would like to do:

[00:04] *** mcmillhj joined
[00:04] <tbrowder__> timotimo: hi

[00:05] *** p6bannerbot sets mode: +v mcmillhj

[00:05] <tbrowder__> ‚Äúmy $sub = &do-something; $sub($a, $b, $c);

[00:06] <timotimo> that's exactly how you do that

[00:07] <timotimo> m: sub do-something($one, $two, $three) { dd $one, $two, $three }; my $sub = &do-something; $sub(1, 2, 3)

[00:07] <camelia> rakudo-moar 8c4546bb5: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[00:07] <TimToady> and you can use .assuming if you want to pre-supply some of those args

[00:09] *** mcmillhj left
[00:09] <tbrowder__> ok, thanks. i need to go back and make sure i‚Äôm not making a typo

[00:18] *** mcmillhj joined
[00:18] *** ZzZombo left
[00:19] *** p6bannerbot sets mode: +v mcmillhj

[00:26] *** knation left
[00:35] <tbrowder__> hm, do the subs have to be declared before the reference is taken?

[00:36] <tbrowder__> the subs i‚Äôm trying to reference are at the end of the program

[00:37] <geekosaur> probably yes. otherwise you'd get a type object

[00:37] <tbrowder__> calling them directly is no problem

[00:38] <geekosaur> there are ways to trip this with variables due to some things happening at compile time and others at run time, and compilation being one-pass

[00:39] <timotimo> m: my $foo = testsub; sub testsub() { say "yes" }; $foo()

[00:39] <camelia> rakudo-moar 8c4546bb5: OUTPUT: ¬´yes‚ê§No such method 'CALL-ME' for invocant of type 'Bool'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[00:39] <timotimo> m: my $foo = &testsub; sub testsub() { say "yes" }; $foo()

[00:39] <camelia> rakudo-moar 8c4546bb5: OUTPUT: ¬´yes‚ê§¬ª

[00:39] <timotimo> that apparently ought to work

[00:45] <tbrowder__> let‚Äôs see

[00:46] <tbrowder__> m: my $f = &bar; $f(); sub bar() { say ‚Äúyes‚Äù}

[00:46] <camelia> rakudo-moar 8c4546bb5: OUTPUT: ¬´yes‚ê§¬ª

[00:48] <tbrowder__> m: my $f = &bar; $f(1, 2); sub bar($a, $b) { say ‚Äú$a, $b‚Äù}

[00:48] <camelia> rakudo-moar 8c4546bb5: OUTPUT: ¬´1, 2‚ê§¬ª

[00:48] <TimToady> subs are the one spot where we worked really hard to allow forward refs

[00:48] <tbrowder__> hm, i must have a typo, this all looks great and as expected (wanted)

[00:48] <TimToady> because mutual recursion

[00:49] <tbrowder__> roger!

[00:49] <tbrowder__> thanks TimToady and timotimo!

[00:49] <TimToady> it does have to be resolved by the end of the file

[00:49] <tbrowder__> yes!

[00:55] *** tejasmanohar6 joined
[00:55] *** p6bannerbot sets mode: +v tejasmanohar6

[00:57] *** tejasmanohar6 left
[00:58] *** hph^ left
[00:59] *** ZzZombo joined
[00:59] *** p6bannerbot sets mode: +v ZzZombo

[01:06] *** LiruCookies joined
[01:07] *** p6bannerbot sets mode: +v LiruCookies

[01:07] *** unixdude5 joined
[01:08] *** p6bannerbot sets mode: +v unixdude5

[01:09] *** unixdude5 left
[01:10] *** molaf left
[01:10] *** LiruCookies left
[01:12] *** hamhu3_ left
[01:14] *** hamhu3 joined
[01:15] *** p6bannerbot sets mode: +v hamhu3

[01:20] *** hph^ joined
[01:21] *** p6bannerbot sets mode: +v hph^

[01:22] *** regreg_ joined
[01:22] *** molaf joined
[01:22] *** p6bannerbot sets mode: +v regreg_

[01:23] *** p6bannerbot sets mode: +v molaf

[01:33] *** regreg_ left
[01:45] *** hamhu3 left
[01:46] *** rindolf left
[01:49] *** Herby_ joined
[01:49] *** p6bannerbot sets mode: +v Herby_

[01:59] *** hamhu3 joined
[02:00] *** p6bannerbot sets mode: +v hamhu3

[02:03] *** hamhu3_ joined
[02:04] *** p6bannerbot sets mode: +v hamhu3_

[02:06] *** hamhu3 left
[02:06] *** mcmillhj left
[02:09] *** Vision28 joined
[02:10] *** p6bannerbot sets mode: +v Vision28

[02:12] *** Vision28 left
[02:18] *** Hopser joined
[02:18] *** Hopser left
[02:22] *** hph^ left
[02:23] *** hph^ joined
[02:23] *** p6bannerbot sets mode: +v hph^

[02:26] *** pahiz joined
[02:26] *** pahiz left
[02:33] <tbrowder__> sub refs working great after i found err elsewhere!

[02:33] *** kirch28 joined
[02:34] *** p6bannerbot sets mode: +v kirch28

[02:37] *** kirch28 left
[02:39] *** Maff15 joined
[02:39] *** p6bannerbot sets mode: +v Maff15

[02:39] *** Maff15 left
[02:46] *** mcmillhj joined
[02:47] *** p6bannerbot sets mode: +v mcmillhj

[02:51] *** mcmillhj left
[02:52] *** AnrDaemon4 joined
[02:53] *** p6bannerbot sets mode: +v AnrDaemon4

[02:54] *** jeromelanteri joined
[02:55] *** p6bannerbot sets mode: +v jeromelanteri

[02:57] *** AnrDaemon4 left
[03:02] *** ShadowNinja18 joined
[03:03] *** p6bannerbot sets mode: +v ShadowNinja18

[03:03] *** jeromelanteri left
[03:05] *** ShadowNinja18 left
[03:20] *** mcmillhj joined
[03:21] *** p6bannerbot sets mode: +v mcmillhj

[03:23] *** cpallares10 joined
[03:24] *** p6bannerbot sets mode: +v cpallares10

[03:25] *** mcmillhj left
[03:27] *** hph^ left
[03:28] *** cpallares10 left
[03:30] *** Herby_ left
[03:40] *** mcmillhj joined
[03:41] *** p6bannerbot sets mode: +v mcmillhj

[03:45] *** mcmillhj left
[03:50] *** graphene left
[03:51] *** graphene joined
[03:52] *** p6bannerbot sets mode: +v graphene

[03:55] *** graphene left
[03:56] *** graphene joined
[03:57] *** aborazmeh joined
[03:57] *** aborazmeh left
[03:57] *** aborazmeh joined
[03:57] *** p6bannerbot sets mode: +v aborazmeh

[03:57] *** p6bannerbot sets mode: +v graphene

[03:57] *** p6bannerbot sets mode: +v aborazmeh

[03:58] *** MasterDuke left
[03:59] *** mcmillhj joined
[04:00] *** p6bannerbot sets mode: +v mcmillhj

[04:03] *** Ven` joined
[04:04] *** p6bannerbot sets mode: +v Ven`

[04:04] *** mcmillhj left
[04:04] *** Sgeo left
[04:05] *** Sgeo joined
[04:06] *** p6bannerbot sets mode: +v Sgeo

[04:06] *** molaf left
[04:07] *** Ven` left
[04:17] <joy_> hello, while compiling perl6 from source on a Centos 7 machine (for which im not root, so i'm installing locally), i got an erorr

[04:17] <joy_> Can't locate Digest/SHA.pm in @INC (@INC contains: /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at tools/build/gen-version.pl line 9.

[04:18] <joy_> i guess i could install Digest/SHA.pm locally (how?) and if so, how can i tell the perl6 make setup to modify @INC to look in my local (i.e. my home folder) Perl library path?

[04:20] *** graphene left
[04:21] *** graphene joined
[04:22] *** p6bannerbot sets mode: +v graphene

[04:25] *** joyjoy joined
[04:25] *** p6bannerbot sets mode: +v joyjoy

[04:26] *** mcmillhj joined
[04:26] *** joyjoy left
[04:26] *** p6bannerbot sets mode: +v mcmillhj

[04:28] *** graphene left
[04:28] *** Herby____ left
[04:29] *** thowe joined
[04:29] *** graphene joined
[04:30] *** p6bannerbot sets mode: +v graphene

[04:30] <geekosaur> export PERL5LIB=whateverdir

[04:31] <joy_> geekosaur: thanks much. One last thing, how to install Digest/SHA.pm locally (i.e. into whateverdir)

[04:31] *** mcmillhj left
[04:33] <geekosaur> (centos installs a lobotomized perl 5 by default)

[04:33] <geekosaur> perl -MCPAN -e shell

[04:33] <geekosaur>                     install File::Slurp

[04:34] <geekosaur> except here it'd be Digest::SHA1, and you rpoably need to do something to overridethe install directory

[04:36] <joy_> let me try

[04:38] *** aborazmeh left
[04:39] <geekosaur> except watch the broken perl5 centos installs ntohave theCPAN module :(

[04:43] *** mcmillhj joined
[04:44] *** curan joined
[04:44] *** p6bannerbot sets mode: +v curan

[04:44] *** p6bannerbot sets mode: +v mcmillhj

[04:48] *** mcmillhj left
[04:55] *** w_richard_w joined
[04:55] <joy_> using perlbrew ...

[04:56] *** p6bannerbot sets mode: +v w_richard_w

[04:58] *** kurahaupo left
[04:59] *** kurahaupo joined
[05:00] *** p6bannerbot sets mode: +v kurahaupo

[05:03] *** Guest54668 joined
[05:03] *** p6bannerbot sets mode: +v Guest54668

[05:08] *** graphene left
[05:08] *** w_richard_w left
[05:09] *** graphene joined
[05:10] *** p6bannerbot sets mode: +v graphene

[05:12] <geekosaur> that may be your best bet

[05:13] *** abaddon joined
[05:14] *** p6bannerbot sets mode: +v abaddon

[05:14] *** fake_space_whale left
[05:15] *** mcmillhj joined
[05:15] *** p6bannerbot sets mode: +v mcmillhj

[05:15] <geekosaur> mention centos to anyone with respec tto a perl 5 question and they mostly won't talk to you unless you use perlbrew or install perl-core

[05:17] *** sauvin joined
[05:17] *** p6bannerbot sets mode: +v sauvin

[05:18] *** abaddon left
[05:19] *** mcmillhj left
[05:26] *** Petter17 joined
[05:26] *** Petter17 left
[05:27] *** mcmillhj joined
[05:28] *** p6bannerbot sets mode: +v mcmillhj

[05:31] *** mcmillhj left
[05:32] *** jmerelo joined
[05:32] *** p6bannerbot sets mode: +v jmerelo

[05:36] *** itaipu joined
[05:37] *** p6bannerbot sets mode: +v itaipu

[05:40] *** ufobat___ joined
[05:40] *** p6bannerbot sets mode: +v ufobat___

[05:41] *** mcmillhj joined
[05:41] *** kurahaupo left
[05:41] *** p6bannerbot sets mode: +v mcmillhj

[05:45] *** HaaTa17 joined
[05:45] *** p6bannerbot sets mode: +v HaaTa17

[05:45] *** mcmillhj left
[05:48] *** itaipu left
[05:48] *** HaaTa17 left
[05:48] *** troys left
[05:51] <Geth> ¬¶ doc: 00b7b00a91 | (JJ Merelo)++ | 3 files

[05:51] <Geth> ¬¶ doc: Rewrites Test and Enumeration to index it properly

[05:51] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/00b7b00a91

[05:54] *** avar left
[05:54] *** avar joined
[05:54] *** avar left
[05:54] *** avar joined
[05:54] *** p6bannerbot sets mode: +v avar

[05:55] *** p6bannerbot sets mode: +v avar

[05:57] *** mcmillhj joined
[05:57] *** p6bannerbot sets mode: +v mcmillhj

[06:01] *** mcmillhj left
[06:05] *** sena_kun joined
[06:05] *** domidumont joined
[06:05] *** p6bannerbot sets mode: +v sena_kun

[06:06] *** p6bannerbot sets mode: +v domidumont

[06:11] *** cpage joined
[06:11] *** p6bannerbot sets mode: +v cpage

[06:19] *** dnscat joined
[06:20] *** p6bannerbot sets mode: +v dnscat

[06:22] *** dnscat left
[06:25] *** MC_saban joined
[06:25] *** jmerelo left
[06:25] *** p6bannerbot sets mode: +v MC_saban

[06:26] *** AlexDaniel left
[06:27] *** Guest90440 joined
[06:27] *** p6bannerbot sets mode: +v Guest90440

[06:28] *** Guest90440 left
[06:30] *** nightfrog joined
[06:31] *** p6bannerbot sets mode: +v nightfrog

[06:31] *** MC_saban left
[06:31] *** mcmillhj joined
[06:32] *** p6bannerbot sets mode: +v mcmillhj

[06:32] *** rindolf joined
[06:33] *** robertle joined
[06:33] *** p6bannerbot sets mode: +v rindolf

[06:34] *** p6bannerbot sets mode: +v robertle

[06:34] *** MerlinTHP21 joined
[06:35] *** p6bannerbot sets mode: +v MerlinTHP21

[06:35] *** MerlinTHP21 left
[06:36] *** mcmillhj left
[06:45] *** Yotson6 joined
[06:45] *** mcmillhj joined
[06:46] *** Yotson6 left
[06:46] *** p6bannerbot sets mode: +v mcmillhj

[06:50] *** mcmillhj left
[06:56] *** EdwardIII15 joined
[06:56] *** p6bannerbot sets mode: +v EdwardIII15

[06:57] <EdwardIII15> how come * under bash can both glob and work as a literal arg for some program, but not for zsh? eg. ls somedir/Downloa* && find somedir -type d -name Downloa* will both work under bash, but for zsh the latter asterisk attempts to glob and messes up the whole command, returning zsh: no matches found: Downloa*

[06:57] <EdwardIII15> .c .010817 * 23

[06:57] <yoleaux> I don't know

[06:57] *** EdwardIII15 left
[07:03] <lookatme_q> I remember this is an option about that in zsh

[07:07] *** paul37419 joined
[07:08] *** p6bannerbot sets mode: +v paul37419

[07:09] *** paul37419 left
[07:09] <tyil> they're different shells, doing different things

[07:10] <tyil> zsh != bash != csh and one could go on and list every shell there

[07:10] <tyil> that's like saying "why does X work in Python but not in Ruby"

[07:11] *** mh_le26 joined
[07:12] *** p6bannerbot sets mode: +v mh_le26

[07:12] *** mh_le26 left
[07:18] *** Dorbian27 joined
[07:19] *** p6bannerbot sets mode: +v Dorbian27

[07:21] *** pooby3 joined
[07:21] *** Dorbian27 left
[07:22] *** p6bannerbot sets mode: +v pooby3

[07:22] *** mcmillhj joined
[07:22] *** pooby3 left
[07:23] *** p6bannerbot sets mode: +v mcmillhj

[07:25] <lookatme_q> I think that guy not here now 

[07:25] <lookatme_q> There is a option can disable this behavior 

[07:27] *** mcmillhj left
[07:44] *** lizmat left
[07:50] *** scimon joined
[07:51] *** p6bannerbot sets mode: +v scimon

[07:55] *** Any14Coffee joined
[07:55] *** p6bannerbot sets mode: +v Any14Coffee

[07:56] <Any14Coffee> Morning all

[07:59] *** hydraz15 joined
[08:00] *** p6bannerbot sets mode: +v hydraz15

[08:01] *** lizmat joined
[08:01] *** p6bannerbot sets mode: +v lizmat

[08:02] <masak> autopun spotting: https://twitter.com/shadowcat_mst/status/1031102524667912192 (via diakopter++)

[08:03] *** mcmillhj joined
[08:03] <Any14Coffee> I can use $ARGV to capture my Cmd line arguments however is there a variable for me to capture what I‚Äôm stunning my script against? I.e.  ./blah.pl <example>

[08:03] *** hydraz15 left
[08:04] *** p6bannerbot sets mode: +v mcmillhj

[08:04] *** robertle left
[08:06] <masak> m: sub foo { return 1; LEAVE { return 2 } }; say foo()

[08:06] <camelia> rakudo-moar 5ff64514f: OUTPUT: ¬´Attempt to return outside of any Routine‚ê§  in sub foo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[08:06] <masak> oh, that's one way to handle that, I guess ;)

[08:06] *** robertle joined
[08:07] *** p6bannerbot sets mode: +v robertle

[08:07] <masak> I was thinking of Java's (and other languages') ability to return a second time in a `finally` clause, overriding the first return value

[08:08] *** mcmillhj left
[08:08] <Any14Coffee> Ah ok, will give it a try

[08:08] <Any14Coffee> Thanks

[08:08] *** Any14Coffee left
[08:11] *** Any14Coffee joined
[08:11] *** p6bannerbot sets mode: +v Any14Coffee

[08:12] *** Any14Coffee left
[08:13] *** robertle left
[08:16] *** robertle joined
[08:17] *** p6bannerbot sets mode: +v robertle

[08:17] *** mcmillhj joined
[08:18] *** p6bannerbot sets mode: +v mcmillhj

[08:20] *** sftp joined
[08:20] *** p6bannerbot sets mode: +v sftp

[08:22] *** mcmillhj left
[08:22] *** eipi-118 joined
[08:23] *** p6bannerbot sets mode: +v eipi-118

[08:25] <masak> the LEAVE above, is it truly "outside of any Routine"?

[08:25] *** Eelis21 joined
[08:25] <masak> I mean, it's clearly textually inside `foo`, but how about dynamically?

[08:25] <masak> I think I had always assumed that LEAVE executes *before* we leave a surrounding block

[08:25] *** p6bannerbot sets mode: +v Eelis21

[08:26] *** eipi-118 left
[08:26] *** Eelis21 left
[08:35] *** mcmillhj joined
[08:35] *** p6bannerbot sets mode: +v mcmillhj

[08:39] *** mcmillhj left
[08:40] <masak> ...is there a mechanism in Perl 6 similar to Java et al.'s "return another value from a `finally` block"?

[08:40] <masak> (I don't have a use case for it, but I'm curious about nailing down the semantics)

[08:43] <masak> my guess is that there isn't, because of how `return` works in Perl 6 as opposed to Java

[08:46] <domm> not sure if this was discussed here, but a Perl 6 solution is missing in this comparison: https://github.com/drujensen/fib

[09:01] *** harrison joined
[09:02] *** p6bannerbot sets mode: +v harrison

[09:03] *** mcmillhj joined
[09:04] *** p6bannerbot sets mode: +v mcmillhj

[09:07] *** justin_childers joined
[09:08] *** p6bannerbot sets mode: +v justin_childers

[09:08] *** mcmillhj left
[09:08] *** xombiemp4 joined
[09:09] *** p6bannerbot sets mode: +v xombiemp4

[09:10] *** xombiemp4 left
[09:10] *** Bucciarati left
[09:10] *** justin_childers left
[09:11] *** avar left
[09:11] *** Bucciarati joined
[09:11] *** avar joined
[09:11] *** avar left
[09:11] *** avar joined
[09:11] *** p6bannerbot sets mode: +v avar

[09:12] *** p6bannerbot sets mode: +v Bucciarati

[09:12] *** p6bannerbot sets mode: +v avar

[09:15] *** ZzZombo left
[09:22] *** huf joined
[09:22] <Ulti> is there a way in the ecosystem to be able to flag operating system compatibility 

[09:22] *** p6bannerbot sets mode: +v huf

[09:23] *** mcmillhj joined
[09:23] <Ulti> Im noticing a lot of things fail on macOS that have a native component but quite often its something like UUID as a dep a million miles from what Im installing, it would be quite useful to flag that just one dep wont install on your operating system to save the ten minute wait for failure

[09:23] *** p6bannerbot sets mode: +v mcmillhj

[09:24] <Ulti> also can I test the ecosystem and feed that back somewhere as something helpful?

[09:26] <Ulti> can you already give binary deps like assumed libraries in the META file?

[09:27] *** mcmillhj left
[09:41] *** sotona joined
[09:42] *** p6bannerbot sets mode: +v sotona

[09:42] *** dude1231241428 joined
[09:43] *** p6bannerbot sets mode: +v dude1231241428

[09:44] *** dude1231241428 left
[09:45] *** sotona left
[09:47] *** pecastro joined
[09:47] *** mcmillhj joined
[09:48] *** p6bannerbot sets mode: +v pecastro

[09:48] *** p6bannerbot sets mode: +v mcmillhj

[09:52] *** mcmillhj left
[09:56] *** lizmat left
[09:58] *** lizmat joined
[09:58] *** p6bannerbot sets mode: +v lizmat

[09:59] *** scroll is now known as hfjvjffju

[10:00] *** mcmillhj joined
[10:01] *** p6bannerbot sets mode: +v mcmillhj

[10:03] *** kurahaupo joined
[10:04] *** p6bannerbot sets mode: +v kurahaupo

[10:05] *** mcmillhj left
[10:07] *** Xor0X18 joined
[10:08] *** p6bannerbot sets mode: +v Xor0X18

[10:09] *** Xor0X18 left
[10:09] *** jga_13 joined
[10:10] *** p6bannerbot sets mode: +v jga_13

[10:12] *** jga_13 left
[10:12] *** yqt joined
[10:12] *** pmurias joined
[10:12] *** p6bannerbot sets mode: +v pmurias

[10:13] *** p6bannerbot sets mode: +v yqt

[10:13] <pmurias> http://skiplang.com/blog/2017/11/20/fixing-the-syntax-barrier.html - a blog most relevant to the p5ism errors discussion

[10:13] <yoleaux> 27 Sep 2018 00:16Z <Zoffix> pmurias: thanks. I reverted that propspec in https://github.com/perl6/roast/commit/7e0b791fa3

[10:16] <lizmat> weekly: http://skiplang.com/blog/2017/11/20/fixing-the-syntax-barrier.html

[10:16] <notable6> lizmat, Noted!

[10:19] *** regreg_ joined
[10:20] *** p6bannerbot sets mode: +v regreg_

[10:25] <tbrowder__> hi, folks

[10:26] *** mcmillhj joined
[10:27] *** p6bannerbot sets mode: +v mcmillhj

[10:28] <tbrowder__> got bit for a while by a left curly brace at the end of a string (in ascii ‚Äú quites). i had to escape it, but the error msgs weren‚Äôt very useful. let me see what happens here...

[10:28] <tbrowder__> m: say ‚Äúa left curly {‚Äú

[10:28] <camelia> rakudo-moar 5ff64514f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in curly double quotes; couldn't find final '‚Äù' (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3say ‚Äúa left curly {‚Äú7‚èè5<EOL>‚ê§    expecting any of:‚Ä¶¬ª

[10:30] <tbrowder__> thats msg looks good to me. now i have to find out why i didn‚Äôt get it in my code (could be because  was writing a code generator).

[10:31] *** mcmillhj left
[10:33] *** hobbs20 joined
[10:33] <tbrowder__> hm, my code seems to be ok otherwise...still checking.

[10:34] *** p6bannerbot sets mode: +v hobbs20

[10:35] *** ZzZombo joined
[10:35] *** p6bannerbot sets mode: +v ZzZombo

[10:35] *** hobbs20 left
[10:41] *** mcmillhj joined
[10:42] <masak> m: foo: say foo.^name

[10:42] <camelia> rakudo-moar 5ff64514f: OUTPUT: ¬´Label‚ê§¬ª

[10:42] <masak> m: foo: say foo.^methods

[10:42] <camelia> rakudo-moar 5ff64514f: OUTPUT: ¬´(new name goto leave Int next redo last gist BUILDALL)‚ê§¬ª

[10:42] *** p6bannerbot sets mode: +v mcmillhj

[10:43] <masak> moritz: on the topic of "should an object of that type really hold that method?", what about Label objects having a .goto method? :)

[10:44] <masak> I think it's comparable to integer objects having a .times method -- it's not that it's super-wrong exactly, but it's kind of ignoring a surrounding "context" that's really doing the heavy lifting

[10:44] <masak> in both the case of .times and .goto, there's an implicit runtime somewhere that does the appropriate control flow

[10:45] <masak> m: foo: say "HELLO WORLD"; foo.goto()

[10:45] <camelia> rakudo-moar 5ff64514f: OUTPUT: ¬´HELLO WORLD‚ê§Label.goto() not yet implemented. Sorry.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:45] <masak> haha :D

[10:46] *** mcmillhj left
[10:46] <masak> "Sorry." -- somehow that "sorry" felt a lot less genuine than the one you get when there's a syntax error. this one is more like "we haven't had the time to implement this feature, because we're *busy*, you know"

[10:49] <lizmat> SORRY!

[10:49] <lizmat> :-)

[10:52] *** staticsafe5 joined
[10:53] *** p6bannerbot sets mode: +v staticsafe5

[10:54] *** mcmillhj joined
[10:55] *** p6bannerbot sets mode: +v mcmillhj

[10:55] <moritz> masak: that's an interesting question. But at least Label is already a control flow object, whereas 5.times(callback) seems like a category error (number vs. control flow)

[10:56] *** staticsafe5 left
[10:58] *** mcmillhj left
[11:00] <masak> moritz: not arguing for the justness of 5.times here, but -- from a Peano/Church interpretation, it's actually not completely crazy that natural numbers represent a kind of iteration/repetition

[11:01] <moritz> there's a reason we use integers to count iterations, yes :-)

[11:01] <sena_kun> `5.times` seems more like a stealing from smalltalk, where we have something like `1 to: 20 do: [:x | x printNl ]`. and in smalltalk there are no real categories between things, as everything is an actor && actor can do only calls.

[11:01] <moritz> the inductive defintion of integers very closely iterations

[11:02] <moritz> sena_kun: I know it from ruby, but I guess ruby might've stolen it from smalltalk :)

[11:02] <sena_kun> moritz, yes, I think they might. :)

[11:03] <masak> yes, they did

[11:03] <masak> my understanding of Smalltalk is that Smalltalk is very un-Liskovian :)

[11:03] <masak> and the criterion is more like "does it feel cute today to send 1 a to:do: message? then let's do that"

[11:04] <masak> this is not a criticism so much as trying to capture what it is Smalltalk is aiming for

[11:05] <masak> inheritance in Smalltalk is not used for some neat/pure subset relation, but for pragmatic re-use

[11:09] *** mcmillhj joined
[11:09] *** p6bannerbot sets mode: +v mcmillhj

[11:10] *** aborazmeh joined
[11:10] *** aborazmeh left
[11:10] *** aborazmeh joined
[11:10] *** p6bannerbot sets mode: +v aborazmeh

[11:11] *** p6bannerbot sets mode: +v aborazmeh

[11:12] <pmurias> masak: re Int having a times method isn't that more a philosophical question as it seems to depend on what we assume numbers are?

[11:13] *** mcmillhj left
[11:13] <masak> pmurias: it's that too, but I was approaching it as an object-oriented design question

[11:13] *** patrickb joined
[11:13] <masak> as in "where does this method go in a 'good' design?"

[11:14] *** p6bannerbot sets mode: +v patrickb

[11:14] <masak> like I said elsewhere, I don't consider 5.times to be either more or less wrong than "OH HAI".say

[11:15] <masak> I think if we could've done Perl 6 from scratch, then `.&say for @values;` would've been enough, and no need for a method

[11:16] <masak> (not bashing methods in general; just that one) :)

[11:16] <jnthn> If you were to assume that 5 is represented as a Church numeral, wouldn't passing a function to apply 5 times kinda makes sense? :P

[11:16] <jnthn> *make

[11:16] <masak> yes, like I wrote above :)

[11:17] <harrison> m: say 1.^methods;

[11:17] <camelia> rakudo-moar 5ff64514f: OUTPUT: ¬´(new Capture Int Num Rat FatRat abs Bridge chr sqrt base polymod expmod is-prime floor ceiling round lsb msb narrow Range succ conj cos cosh acosec sign cotanh log asech acosech pred log10 tanh roots sin acos cosec atan2 sinh cotan isNaN rand tan sech‚Ä¶¬ª

[11:17] <jnthn> Oh, I dind't read backlog :)

[11:17] <masak> <+masak> moritz: not arguing for the justness of 5.times here, but -- from a Peano/Church interpretation, it's actually not completely crazy that natural numbers represent a kind of iteration/repetition

[11:17] <jnthn> haha

[11:17] <jnthn> .oO( Sufficiently warped minds think alike )

[11:17] <masak> 'fraid so

[11:18] <masak> similarly, a semicolon is really just an operator that passes the rest of the statement list into the current statement as a continuation

[11:18] <harrison> Wouldn't it be easier if *.^methods return the list of methods ordered in alphabetical order, for easier scanning?

[11:18] <harrison> I mean, a person scanning with their eyes.

[11:19] <masak> m: say 1.^methods.sort(*.name)

[11:19] <camelia> rakudo-moar 5ff64514f: OUTPUT: ¬´(ACCEPTS Bool Bridge Capture Complex DUMP FatRat Int Num Numeric Range Rat Real Str WHICH abs acos acosec acosech acosh acotan acotanh asec asech asin asinh atan atan2 atanh base ceiling chr cis conj cos cosec cosech cosh cotan cotanh exp expmod floor‚Ä¶¬ª

[11:19] <moritz> harrison: the MOP is optimized for human aye scanning

[11:19] <moritz> *NOT

[11:19] <moritz> m: say 1.^methods.sort

[11:19] <camelia> rakudo-moar 5ff64514f: OUTPUT: ¬´Method object coerced to string (please use .gist or .perl to do that)‚ê§  in block <unit> at <tmp> line 1‚ê§Method object coerced to string (please use .gist or .perl to do that)‚ê§  in block <unit> at <tmp> line 1‚ê§Method object coerced to string (‚Ä¶¬ª

[11:19] * masak .oO( "should I come in again?" ) :P

[11:19] <moritz> m: say 1.^methods¬ª.name.sort

[11:19] <camelia> rakudo-moar 5ff64514f: OUTPUT: ¬´(ACCEPTS Bool Bridge Capture Complex DUMP FatRat Int Num Numeric Range Rat Real Str WHICH abs acos acosec acosech acosh acotan acotanh asec asech asin asinh atan atan2 atanh base ceiling chr cis conj cos cosec cosech cosh cotan cotanh exp expmod floor‚Ä¶¬ª

[11:20] <harrison> moritz: Oh.

[11:20] * masak .oO( TODO: make a MOP that's optimized for human eye scanning )

[11:21] <jnthn> Well, the MOP is at least partly there for people to introspect stuff, but it's just as much there for meta-programming, and making every programmatic use of the data pay for a sort it almost certainly doesn't need would be a bit unfortunate

[11:23] <masak> jnthn++ has a tendency to express things exactly the way I want to say them :>

[11:23] <harrison> jnthn: makes sense.

[11:27] <harrison> How hard would it be to make something like distillery for Perl6. https://github.com/bitwalker/distillery. A quote from the documentation: "Distillery is a tool for packaging Elixir applications for deployment using OTP releases. In a nutshell, Distillery produces an artifact, a tarball, which contains your application and everything needed to run it."

[11:29] *** infectiious18 joined
[11:30] *** infectiious18 left
[11:30] <lizmat> harrison: isn't that called Docker nowadays >

[11:30] <lizmat> ?

[11:33] *** mcmillhj joined
[11:33] *** onefst250r26 joined
[11:34] *** p6bannerbot sets mode: +v mcmillhj

[11:34] *** p6bannerbot sets mode: +v onefst250r26

[11:35] *** vike1 left
[11:35] <tbrowder__> hi, folks, got a question on contributing to roast:

[11:36] *** onefst250r26 left
[11:36] <pmurias> "OH HAI".say doesn't seem to be a good design at all

[11:38] <tbrowder__> i need an exhaustive bunch of pod test for the implementation of ‚Äò#‚Äô :numbered alias and am writing a test generator. should that generator script be in roast, too, mabe somewhere under packages?

[11:38] *** mcmillhj left
[11:38] <harrison> lizmat: Yes, but I actually mean, something a little bit simpler to adopt. Like I run `some-command-line --param1 --param2 --param3` and it generates a tar file with moarvm inside, modules I am using and my application. So all I have to do is upload on my server and run it. No tinkering with things and installing things on the server.

[11:40] <masak> pmurias: that's what I'm saying. who gave strings the responsibility to print themselves?

[11:41] <El_Che> harrison: as long rakudo is not relocatable, it would be very useful

[11:42] <lizmat> m: "this way".put

[11:42] <camelia> rakudo-moar 5ff64514f: OUTPUT: ¬´this way‚ê§¬ª

[11:42] <lizmat> m: "this way".note

[11:42] <camelia> rakudo-moar 5ff64514f: OUTPUT: ¬´this way‚ê§¬ª

[11:42] <lizmat> m: 42.note

[11:42] <camelia> rakudo-moar 5ff64514f: OUTPUT: ¬´42‚ê§¬ª

[11:43] <lizmat> masak: I think it's Cool things that we gave the resposibility

[11:44] <masak> yes, you're right

[11:44] <masak> and Cool is just a manifestation of the p5 scalar concept, that some types are interconvertible

[11:45] <masak> but it doesn't make much more sense for Cool to own the capacity to print itself than for Str to do so

[11:45] <lizmat> perhaps, to me it feels like TIMTOWTDI

[11:45] <lizmat> specifically when testing things

[11:45] <masak> anyway, I'm not angry about this, or proposing a Grand Change -- I'm fully aware Perl 6 has never been about that kind of ideological purity

[11:45] <harrison> El_Che: Yes, it can even be easier to choose a version of rakudo to use so that you can easily generate runnable units of the same app but for different rakudo versions.

[11:46] <lizmat> so you're writing this long expression to test things, and than you realize you forgot the "say"

[11:46] <masak> lizmat: aye, it is very pragmatic. my point was that `.&say` (invented later) would've done just as well, and would've made the method unnecessary

[11:46] <lizmat> then it's nice to be able to do just '.say'

[11:47] <lizmat> masak: fwiw, I find the .&foo syntax an abomination from the P5 days

[11:47] <lizmat> where you didn't know whether something was intended to be used as a sub or a method

[11:47] <tbrowder__> never mind, i think i see some examples

[11:48] <masak> lizmat: interesting. I kind of love it, and I don't mind at all the fluency that exists between subs and methods

[11:48] <masak> in fact the sub <-> method "isomorphism" goes very deep in Perl 6

[11:48] <lizmat> as it goes even deeper in Perl 5 :-)

[11:49] <lizmat> yet, most attempts at MOP's try to make a difference between sub / method use

[11:50] <El_Che> harrison: yes, but that's not an issue if rakudo is part of the package (the best situation). Now you'll need root/admin to write to a generic situation like /opt/rakudo or c:\rakudo because the rakudo path is hardcoded.

[11:50] <masak> m: my method foo(Str $s:) { say $s }; sub bar($s) { say $s }; "this works".&foo; "so does this".&bar

[11:50] <camelia> rakudo-moar 5ff64514f: OUTPUT: ¬´this works‚ê§so does this‚ê§¬ª

[11:50] <El_Che> harrison: you won't be able to run it from e.g. your home (or / if a container)

[11:50] <masak> lizmat: Perl 6 is the only language I know where you can have both subs *and* methods inside a class. (and there's a distinction, and it kinda makes sense)

[11:51] <harrison> El_Che: I see, I hadn't thought of it like that.

[11:51] <masak> lizmat: but the distinction disappears if you go deep enough into the semantics, because (after all) methods are just routines that you called "on an invocant", and so not so different from subs

[11:51] <masak> lizmat: I dunno, I think I've just made peace with that ;)

[11:52] <jnthn> masak: subs in a class pretty much fill the same niche as static methods, no? :)

[11:52] <masak> I remember being frustrated at some point that error messages considered the invocant to be one of the parameters, and so it would kind of report the parameters "off-by-one"... but I've come to accept that as a necessary sacrifice when there's no fundamental distinction between subs and methods

[11:53] <masak> jnthn: yeah, guess so. except that's not how I think about it in Perl 6, but I guess it makes sense

[11:55] *** pmurias left
[11:55] *** cognominal-p6 left
[11:56] *** harrison left
[11:59] *** aborazmeh left
[12:02] *** pmurias joined
[12:02] *** p6bannerbot sets mode: +v pmurias

[12:07] *** hamhu3_ left
[12:10] *** vader-0 joined
[12:10] *** vader-0 left
[12:14] *** itaipu joined
[12:15] *** p6bannerbot sets mode: +v itaipu

[12:16] <Geth> ¬¶ ecosystem: 230a11d9ee | Altai-man++ (committed using GitHub Web editor) | META.list

[12:16] <Geth> ¬¶ ecosystem: Add ECMA262Regex module

[12:16] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/230a11d9ee

[12:23] *** harrison joined
[12:24] *** p6bannerbot sets mode: +v harrison

[12:26] *** knation joined
[12:26] *** p6bannerbot sets mode: +v knation

[12:31] *** vike1 joined
[12:32] *** p6bannerbot sets mode: +v vike1

[12:38] *** MasterDuke joined
[12:38] *** p6bannerbot sets mode: +v MasterDuke

[12:39] *** MasterDuke left
[12:39] *** MasterDuke joined
[12:39] *** herbert.freenode.net sets mode: +v MasterDuke

[12:39] *** p6bannerbot sets mode: +v MasterDuke

[12:42] *** graphene left
[12:44] *** graphene joined
[12:44] *** p6bannerbot sets mode: +v graphene

[12:48] <lizmat> weekly: http://niner.name/blog/house_cleaning_with_perl_6/index.html

[12:48] <notable6> lizmat, Noted!

[12:59] *** eMBee7 joined
[12:59] *** eMBee7 left
[13:09] *** harrison left
[13:10] *** AlexDaniel joined
[13:10] *** p6bannerbot sets mode: +v AlexDaniel

[13:28] *** mcmillhj joined
[13:29] *** p6bannerbot sets mode: +v mcmillhj

[13:29] *** Te3-BloodyIron16 joined
[13:30] *** Te3-BloodyIron16 left
[13:32] *** Henry1512 joined
[13:33] *** p6bannerbot sets mode: +v Henry1512

[13:33] *** curan left
[13:35] <MasterDuke> domm: https://github.com/drujensen/fib/pull/44

[13:35] *** Henry1512 left
[13:38] *** mcmillhj left
[13:39] *** mcmillhj joined
[13:40] *** p6bannerbot sets mode: +v mcmillhj

[13:40] *** cognominal-p6 joined
[13:40] *** p6bannerbot sets mode: +v cognominal-p6

[13:54] *** cognominal-p6 left
[13:54] *** cognominal-p6 joined
[13:55] *** p6bannerbot sets mode: +v cognominal-p6

[14:00] <domm> MasterDuke++

[14:00] *** molaf joined
[14:01] *** p6bannerbot sets mode: +v molaf

[14:03] <lizmat> MasterDuke: that bench would be a lot faster as: $n < 1 ?? 1 !! fib($n - 1) + fib($n - 2)

[14:04] <lizmat> while still being idiomatic Perl 6, I would think ?

[14:04] <MasterDuke> lizmat: heh, https://github.com/drujensen/fib/pull/45

[14:04] *** Zarthus10 joined
[14:04] <MasterDuke> and https://github.com/drujensen/fib/pull/50

[14:05] <lizmat> :-)

[14:05] *** p6bannerbot sets mode: +v Zarthus10

[14:06] <sena_kun> >$n <= 1 ?? 1 !! fib($n - 1) + f(ib$n - 2);

[14:06] <sena_kun> >f(ib$n)

[14:06] <sena_kun> oops

[14:06] <sena_kun> MasterDuke, ^

[14:07] <sena_kun> also s/f(46)/fib(46)/

[14:07] <MasterDuke> sena_kun: ?

[14:08] <sena_kun> isn't code at https://github.com/drujensen/fib/pull/50/files has thinko?

[14:08] <MasterDuke> sena_kun++

[14:08] <sena_kun> I may be mis-understanding something here, sorry if so.

[14:08] *** mst sets mode: +o Sigyn

[14:09] *** Zarthus10 left
[14:09] <sena_kun> but kind of fun how fast memoized version is compared to other benches. I wonder if it's considered as cheating in this repo.

[14:09] <sena_kun> MasterDuke++

[14:11] <MasterDuke> the perl6 version without return is faster than perl5 for fib(35)

[14:13] <lizmat> yeah, it takes a little while for Perl 6 to heat up

[14:18] <timotimo> yeah, return is *really* slow :)

[14:20] <lizmat> hmmm... perhaps we could statically determine in the optimizer that we can lose any 'return' at the end of a sub / method ?

[14:20] <timotimo> i think we already have an opt that tries to do that

[14:20] <timotimo> it must have bitrotted

[14:21] <jnthn> Hm, I wonder if return control exceptions are rewritten into goto yet

[14:22] <jnthn> (Also, I think that `return` once wasn't so obviously slow. I suspect lots of other things have sped up around it.)

[14:23] <timotimo> surely possible :)

[14:25] *** MasterDuke left
[14:33] *** MasterDuke joined
[14:33] *** p6bannerbot sets mode: +v MasterDuke

[14:34] *** MasterDuke left
[14:34] *** MasterDuke joined
[14:34] *** herbert.freenode.net sets mode: +v MasterDuke

[14:34] *** p6bannerbot sets mode: +v MasterDuke

[14:45] *** Zoffix joined
[14:45] *** p6bannerbot sets mode: +v Zoffix

[14:47] *** Herby_ joined
[14:48] *** p6bannerbot sets mode: +v Herby_

[14:48] <Zoffix> jnthn: can't we simply statically throw out `return` if it's in the last statement?

[14:48] <jnthn> Zoffix: Yes, though it'd be nice to make the other cases faster too

[14:48] <Zoffix> I had a bot reminder to check that, but I kinda ignored it on the assumption that something so obvious would've been done already if it weren't already

[14:49] <Zoffix> 'cause one thing I noticed is lots of Perl people stick an explicit `return` for "better style" practices, without realizing it has a perf impact in p6

[14:50] *** fake_space_whale joined
[14:50] <jnthn> Well, it won't once we optimize it :)

[14:50] <awwaiid> AlexDaniel`: Ahh!! no wonder I haven't been getting so much email, I let my domain name expire. Fixing...

[14:50] <Zoffix> And some people stick it in just 'cus: https://github.com/koorchik/formula-evaluation-benchmark/blob/master/perl6/ast.pl#L8-L33

[14:51] *** p6bannerbot sets mode: +v fake_space_whale

[14:54] *** vike1 left
[14:58] <Zoffix> .oO( wonder if it's detrimental to throw out `&return` but leave in `RETURN -> - QAST::Op(lastexpayload)` in the tree

[14:58] <Zoffix> )

[15:02] *** titsuki joined
[15:03] *** p6bannerbot sets mode: +v titsuki

[15:03] <AlexDaniel> awwaiid: o yey it's back!

[15:03] <AlexDaniel> awwaiid: thank you!

[15:05] *** tashie19 joined
[15:05] *** tashie19 left
[15:05] *** molaf left
[15:07] <AlexDaniel> what's the proper name for `@foo.bar: baz` syntax (as opposed to `@foo.bar(baz)`)?

[15:08] <Zoffix> Don't immediatelly see any logic in the optimizer for telling "this is a routine body and not a block/thunk body" so giving up on return elision right now (need to do 6.d stuff), if anyone wants to take a crack at it.

[15:09] <Zoffix> AlexDaniel: colon call? :)

[15:10] <Zoffix> AlexDaniel: FWIW, I saw some term used in the docs for it.

[15:10] <Zoffix> precedence lowering or something (didn't make much sense to me TBH)

[15:10] <timotimo> yeah, listop precedence i think?

[15:11] <timotimo> it's like the indirect object notation, except the object isn't indirect

[15:11] <timotimo> so it should be called "notation"?

[15:11] <Zoffix> .oO( colonotascopy )

[15:11] *** Zoffix left
[15:20] *** MilkmanDan left
[15:22] *** MilkmanDan joined
[15:22] *** p6bannerbot sets mode: +v MilkmanDan

[15:23] <AlexDaniel> on https://thelackthereof.org/Perl6_Colons it is called ‚ÄúPrecedence dropper‚Äù

[15:24] <AlexDaniel> but our docs never say that

[15:26] <awwaiid> (site will be back eventually)

[15:27] <awwaiid> I think I got that language from TimToady 

[15:28] <AlexDaniel> awwaiid: it's already back

[15:28] *** ruffy12 joined
[15:28] <AlexDaniel> here at least

[15:32] * awwaiid reloads harder

[15:33] *** ruffy12 left
[15:35] *** robertle left
[15:41] *** mcmillhj left
[15:41] *** mcmillhj joined
[15:42] *** p6bannerbot sets mode: +v mcmillhj

[15:45] *** ufobat___ left
[15:55] *** domidumont left
[15:55] *** vrurg left
[15:59] *** Scorpion joined
[15:59] *** p6bannerbot sets mode: +v Scorpion

[15:59] <Scorpion> thanks

[16:00] <Scorpion> I want to contribute to the Perl6 project.

[16:00] *** vike1 joined
[16:01] *** p6bannerbot sets mode: +v vike1

[16:03] *** Zoffix joined
[16:03] *** p6bannerbot sets mode: +v Zoffix

[16:03] <sena_kun> Scorpion, sure you can! you can start with reading "Getting involved" section at https://perl6.org/community/

[16:04] <Zoffix> Scorpion: awesome! What sort of tasks were you looking for?

[16:04] <Zoffix> BTW, do we have Hacktoberfest labels set up?

[16:05] <Zoffix> don't look like it

[16:05] <MasterDuke> Zoffix: i think jmerelo and AlexDaniel were chatting about that recently, but i don't remember the outcome

[16:05] <Scorpion> Thanks guys. However I can help. I use perl5 daily in network/system engineering. Perhaps I can start testing code

[16:06] *** troys joined
[16:06] <MasterDuke> Scorpion: https://github.com/rakudo/rakudo/labels/testneeded

[16:06] <Zoffix> Scorpion: there are some already-fixed bugs that need tests written for them: https://github.com/rakudo/rakudo/issues?q=is%3Aopen+is%3Aissue+label%3Atestneeded

[16:06] <Scorpion> Thank you Zoffix

[16:06] <Zoffix> Scorpion: there's also a Brief Newcomer's Guide: https://rakudo.party/post/Newcomer-Guide-to-Contributing-to-Core-Perl-6

[16:06] *** p6bannerbot sets mode: +v troys

[16:06] <Zoffix> As well as this channel and #perl6-dev :)

[16:07] <Scorpion> MasterDuke Thank you

[16:11] <Zoffix> I'm adding "Hacktoberfest" label to all "good first issue" rakudo/rakudo issues and sticking https://rakudo.party/post/Newcomer-Guide-to-Contributing-to-Core-Perl-6 as first line in the issue

[16:12] *** graphene left
[16:12] <MasterDuke> Zoffix++

[16:13] *** graphene joined
[16:14] *** p6bannerbot sets mode: +v graphene

[16:17] <Zoffix> Scorpion: what's your github username?

[16:20] *** scimon left
[16:29] *** jmerelo joined
[16:29] *** p6bannerbot sets mode: +v jmerelo

[16:30] <jmerelo> Hi!

[16:31] <AlexDaniel> MasterDuke: yes but hacktoberfest is not that related to squashathons so the label needs to be added anyway

[16:34] <AlexDaniel> jmerelo: so the upcoming squashathon needs a doc saying that people who want their modules to be worked on have to add a webhook to http://whateverable.6lang.org:4243/ with Content type: `application/json` and `Send me everything`

[16:35] <AlexDaniel> jmerelo: and then mark issues with `hacktoberfest` label

[16:35] <AlexDaniel> the bot will then announce here that the webhook was added, and I guess that's it?

[16:35] <AlexDaniel> we also need a list somewhere of all repos

[16:36] <AlexDaniel> and by doing that, yes, you invite hacktoberfesters and squashathoners at the same time

[16:37] <sena_kun> hmm, the module was properly added in https://github.com/ugexe/Perl6-ecosystems/commit/54c12c9ab76b394ce58ea25d10d5ae49033b0557 but then removed in https://github.com/ugexe/Perl6-ecosystems/commit/5e03ba4030c1f44be869a0126c742b5849021050, what can the reason be?

[16:37] <AlexDaniel> also there will be a winner who gets a plush camelia :)

[16:37] <AlexDaniel> jmerelo: can you write something like that but properly? :)

[16:53] *** molaf joined
[16:53] *** p6bannerbot sets mode: +v molaf

[16:56] *** Amany joined
[16:56] *** Amany left
[16:58] *** hemna_ joined
[16:58] *** hemna_ left
[17:03] *** kephra_lk joined
[17:03] *** p6bannerbot sets mode: +v kephra_lk

[17:03] <MasterDuke> heh https://github.com/drujensen/fib/issues/51

[17:04] <jmerelo> AlexDaniel: OK

[17:04] <jmerelo> I guess you mean something like the two sentences above, but in a place and extension that can make it more understandable, right?

[17:04] <jmerelo> I mean, a howto so that anyone can do that.

[17:05] <kephra_lk> cheers jmerelo

[17:05] <jmerelo> Hi, kephra_lk !

[17:05] <jmerelo> squashable6: status

[17:05] <squashable6> jmerelo, ‚ö†üçï Next SQUASHathon in 6 days and ‚âà16 hours (2018-10-06 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[17:05] <kephra_lk> jou know how if there is still crosswith method to overload X metaop

[17:06] <jmerelo> OK, I'll try to do that over the weekend AlexDaniel 

[17:06] <jmerelo> kephra_lk: you can't overload X directly?

[17:07] <kephra_lk> jmerelo i can but i still wonder what happened to crosswith

[17:07] *** Xliff joined
[17:08] *** p6bannerbot sets mode: +v Xliff

[17:09] <jmerelo> Looking over the source, it looks like it disappeared sometime after 2010... https://github.com/rakudo/rakudo/commit/2f9c946e834f350fb852b91f84a0e457b68ad54d

[17:10] *** dataangel joined
[17:10] <kephra_lk> jmerelo thank you very much, it case you wonder im the matrix guy from glasgow just i travel now

[17:11] *** p6bannerbot sets mode: +v dataangel

[17:12] <kephra_lk> jmerelo could you show me the signature of the X metop ?

[17:16] *** MasterDuke left
[17:18] <tbrowder__> m: my $s=‚Äú1\n2‚Äù;say $s

[17:18] <camelia> rakudo-moar 3d405e89d: OUTPUT: ¬´1‚ê§2‚ê§¬ª

[17:19] *** MasterDuke joined
[17:19] *** p6bannerbot sets mode: +v MasterDuke

[17:19] *** MasterDuke left
[17:19] *** MasterDuke joined
[17:19] *** herbert.freenode.net sets mode: +v MasterDuke

[17:19] *** p6bannerbot sets mode: +v MasterDuke

[17:24] <tbrowder__> m: my $s=‚Äú1\n2‚Äù;say $s eq ‚Äú1\n2‚Äù;

[17:24] <camelia> rakudo-moar 3d405e89d: OUTPUT: ¬´True‚ê§¬ª

[17:34] <AlexDaniel> jmerelo: yes, like a markdown page or something like that

[17:34] <kephra_lk> can anyone help me a little with overloading the X metaop ?

[17:34] <AlexDaniel> jmerelo: similarly to the beautiful page you did for the unbitrot squashathon

[17:34] <jmerelo> AlexDaniel: OK

[17:34] <AlexDaniel> jmerelo: perhaps a list of modules that are participating on the same page

[17:35] <jmerelo> AlexDaniel: OK, will try. Feel free to prod me  back in a couple of days if I don't.

[17:35] *** jmerelo left
[17:47] *** wildsebastian23 joined
[17:47] *** wildsebastian23 left
[17:57] *** joocain2_ joined
[17:57] *** joocain2_ left
[18:05] *** wac14 joined
[18:06] *** p6bannerbot sets mode: +v wac14

[18:07] *** wac14 left
[18:08] <Xliff> \o

[18:08] <Xliff> What does it mean when I get the following error message?

[18:08] <Xliff> cbwood@cbwood-VirtualBox2:~/Projects/p6-GtkPlus$ perl6 -Ilib t/10-menu.t 

[18:08] <Xliff> Default constructor for 'GTK::MenuItem' only takes named arguments

[18:08] <Xliff>   in block <unit> at t/10-menu.t line 22

[18:09] <Xliff> Because I am trying to use both positional AND mixed parameters at  t/10-menu.t line 22

[18:11] <Zoffix> Xliff: it's hitting Mu.new. You got custom multies? Your signatures aren't matching

[18:11] <Zoffix> If you want to block off Mu.new from being considered add a `proto method new` in your class

[18:12] <Xliff> Zoffix: Thanks. Here's the code.

[18:12] <Xliff> https://github.com/Xliff/p6-GtkPlus/blob/master/t/10-menu.t

[18:15] <Zoffix> Xliff: what's with nqp stuff?

[18:16] <Xliff> nqp?

[18:16] <Xliff> What are you looking at?

[18:16] <Zoffix> use nqp;

[18:16] <Zoffix>     my $o = nqp::create(self)

[18:16] <Zoffix> in MenuItem.pm6

[18:16] <Xliff> Oh! I am overriding method bless there.

[18:16] <Xliff> Got that bit from timotimo

[18:17] <Zoffix> nqp is not user-supported. You shouldn't be using it.

[18:17] <Zoffix> Xliff: blocking off Mu.new gives a better error: https://gist.github.com/zoffixznet/b33a0368ecb79a17829916424c001f36

[18:17] <Xliff> I am well aware of that.

[18:17] <Xliff> I have signed the nqp disclaimers. It works. That's all I care about.

[18:18] <Zoffix> Xliff: but that's exactly the point. It works *right now*. It can change at any moment and not work anymore.

[18:19] <Xliff> I am aware of that.

[18:19] <Xliff> Do you have a better method of overriding method bless?

[18:20] <Zoffix>   method bless(*%attrinit) {

[18:20] <Zoffix>     my $o := self.Mu::bless: |%attrinit;

[18:20] <Zoffix>     $o.setType('GTK::MenuItem');

[18:20] <Zoffix>     $o;

[18:20] <Zoffix>   }

[18:21] <Xliff> Zoffix++ !!

[18:22] <moritz> might be better use |c captures

[18:22] <moritz> more efficient, that is

[18:22] <moritz> not sure though

[18:23] <Zoffix> .oO( do `.setType('GTK::MenuItem'); later in the food chain‚Äî.new, .BUILD, .TWEAK‚Äîand leave .bless alone)

[18:23] <moritz> too simple

[18:24] <Xliff> Zoffix: Tried that. BUILD does NOT work becuase of inheritance chain. setType() is only supposed to run ONCE.

[18:24] <Xliff> same with TWEAK

[18:31] <Zoffix> m: class Foo {}; sub (Foo() :$z) {}()

[18:31] <camelia> rakudo-moar 3d405e89d: OUTPUT: ¬´No such method 'Foo' for invocant of type 'Any'‚ê§  in sub  at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:31] *** knation left
[18:31] <Zoffix> m: class Foo {}; multi z (Foo() :$z) {}; z

[18:32] <camelia> rakudo-moar 3d405e89d: OUTPUT: ¬´Cannot resolve caller z(...); none of these signatures match:‚ê§    (:$z)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:32] <Zoffix> Xliff: it's this coercer: https://github.com/Xliff/p6-GtkPlus/blob/master/lib/GTK/MenuItem.pm6#L62

[18:32] <Zoffix> Xliff: you're not giving it a default, so it's trying to coerce the default default value of that parameter (`Any`) to that type, and since it can't that multi gets regarded as non-matching

[18:33] <Xliff> Zoffix: Thanks! That's helpful, since I need those. It's the only time I've tried that using a named-arg.

[18:34] <Xliff> So I guess a better way to write that would be -- "GtkWidget() $submenu = GtkWidget"

[18:34] <Zoffix> prolly

[18:34] <Xliff> Because I need to use a "with" construct later in the code... which should actually be in BUILD. 

[18:34] <Xliff> Thanks a lot!

[18:35] <Zoffix> Xliff: this potentially is also a bug. You're giving `$_` to the subs, yet it doesn't appear to be set to anything: https://github.com/Xliff/p6-GtkPlus/blob/master/lib/GTK/MenuItem.pm6#L64-L67

[18:37] <Xliff> Whoops! That was originally in a with block. Thanks!

[18:39] <lizmat> weekly: https://perlmonks.org/index.pl?node_id=1223228

[18:39] <notable6> lizmat, Noted!

[18:53] *** sotona joined
[18:54] *** p6bannerbot sets mode: +v sotona

[18:55] *** kurahaupo left
[18:55] *** kurahaupo joined
[18:55] *** kurahaupo left
[18:55] *** kurahaupo joined
[18:56] *** p6bannerbot sets mode: +v kurahaupo

[18:58] *** dalek joined
[18:58] *** ChanServ sets mode: +v dalek

[18:59] *** p6bannerbot sets mode: +v dalek

[19:03] *** ExtraCrispy joined
[19:03] *** AlexDaniel left
[19:03] *** AlexDaniel joined
[19:03] *** p6bannerbot sets mode: +v AlexDaniel

[19:03] *** p6bannerbot sets mode: +v ExtraCrispy

[19:06] *** kurahaupo left
[19:06] *** kurahaupo joined
[19:07] *** p6bannerbot sets mode: +v kurahaupo

[19:07] *** fake_space_whale left
[19:10] *** yqt left
[19:12] *** Zoffix left
[19:13] *** kephra_lk left
[19:24] *** graphene left
[19:25] *** graphene joined
[19:26] *** p6bannerbot sets mode: +v graphene

[19:42] *** sotona left
[19:43] *** vrurg joined
[19:44] *** p6bannerbot sets mode: +v vrurg

[19:52] *** mcmillhj left
[19:56] *** michaelstingl15 joined
[19:56] *** michaelstingl15 left
[19:57] *** |oLa|1 left
[19:57] *** kurahaupo left
[19:58] *** kurahaupo joined
[19:59] *** p6bannerbot sets mode: +v kurahaupo

[20:00] <SmokeMachine> is there a way to colorize perl6 code on wordpress?

[20:02] <moritz> you can let vim or other tools generate colored HTML, and add that to WP

[20:05] *** Zoffix joined
[20:05] *** p6bannerbot sets mode: +v Zoffix

[20:05] *** mcmillhj joined
[20:06] *** p6bannerbot sets mode: +v mcmillhj

[20:08] <Zoffix> .tell skids just a minor comment: it's slightly annoying to come across several dozen merges during spec review because it takes a second to realize which changes you reviewed already in earlier commits. Unless it can't be merged to master yet or it's somethign controvercial, just commit directly instead of going through PRs. The commits are bot-announced and the spec is reviewed pre-release, so we don't

[20:08] <yoleaux> Zoffix: I'll pass your message to skids.

[20:08] <Zoffix> really need any FYI-type notifications about new tests.

[20:08] <Zoffix> .tell skids really need any FYI-type notifications about new tests. 

[20:08] <yoleaux> Zoffix: I'll pass your message to skids.

[20:09] *** Zoffix left
[20:09] <SmokeMachine> moritz: yes, thanks... 

[20:10] *** pmurias left
[20:11] *** AlexDaniel left
[20:11] *** AlexDaniel joined
[20:11] *** p6bannerbot sets mode: +v AlexDaniel

[20:12] *** AlexDaniel left
[20:12] *** AlexDaniel joined
[20:12] *** p6bannerbot sets mode: +v AlexDaniel

[20:28] *** lavisher joined
[20:28] *** lavisher left
[20:30] *** user07665434 joined
[20:33] *** user07665434 left
[20:40] *** itaipu left
[20:46] *** pmurias joined
[20:46] *** p6bannerbot sets mode: +v pmurias

[20:46] *** pmurias left
[20:51] *** pmurias joined
[20:51] *** p6bannerbot sets mode: +v pmurias

[20:52] *** pmurias left
[20:56] *** noganex left
[20:56] *** pmurias joined
[20:56] *** p6bannerbot sets mode: +v pmurias

[21:01] *** noganex joined
[21:01] *** MasterDuke_ joined
[21:02] *** p6bannerbot sets mode: +v noganex

[21:02] *** p6bannerbot sets mode: +v MasterDuke_

[21:05] *** rindolf left
[21:06] *** sena_kun left
[21:12] *** pmurias left
[21:12] *** kensanata joined
[21:12] *** p6bannerbot sets mode: +v kensanata

[21:15] *** MasterDuke_ left
[21:16] *** MasterDuke_ joined
[21:17] *** p6bannerbot sets mode: +v MasterDuke_

[21:18] *** MasterDuke_ left
[21:19] *** pmurias joined
[21:19] *** p6bannerbot sets mode: +v pmurias

[21:20] *** orekix17 joined
[21:20] *** pmurias left
[21:21] *** p6bannerbot sets mode: +v orekix17

[21:22] <kensanata> I'm a bit confused about documenting my code. I start with =head1, then =begin pod, some general stuff, =end pod. Then I add #|{...} for functions and classes. The result doesn't look very nice using p6doc. Pod in #|{...} is not rendered. And the text has all line breaks removed but no word wrap added. This doesn't mix well. What do you do in this situation?

[21:22] <kensanata> Example https://alexschroeder.ch/cgit/oddmuse6/tree/Oddmuse/lib/Oddmuse/Diff.pm6

[21:24] *** orekix17 left
[21:24] *** pmurias joined
[21:24] *** p6bannerbot sets mode: +v pmurias

[21:26] *** pmurias left
[21:27] *** Scorpion left
[21:29] *** kensanata left
[21:30] *** mcmillhj left
[21:44] *** regreg_ left
[21:51] *** zxcvz joined
[21:51] *** zxcvz left
[21:52] *** HiSPeed6 joined
[21:53] *** p6bannerbot sets mode: +v HiSPeed6

[21:53] <timotimo> i think you're mixing up a few different things

[21:54] <timotimo> i myself would put =begin pod and =end pod around things like =head1

[21:54] <timotimo> and i didn't actually know you could put parenthesis (any kind) directly after the | or =

[21:55] <timotimo> if it's just one line, you can of course leave it out

[21:56] *** HiSPeed6 left
[21:58] <tyil> timotimo: he's not online anymore

[21:58] <tyil> I sent him an email with a patch to solve it, and explain why I changed things around

[21:59] <[Coke]> tyil++

[22:01] *** mcmillhj joined
[22:02] *** p6bannerbot sets mode: +v mcmillhj

[22:04] <timotimo> damn

[22:04] <timotimo> that's real nice

[22:06] *** mcmillhj left
[22:07] <timotimo> yes, tyil++ indeed

[22:16] *** Kaiepi joined
[22:17] *** mcmillhj joined
[22:17] *** p6bannerbot sets mode: +v Kaiepi

[22:17] *** p6bannerbot sets mode: +v mcmillhj

[22:18] <Kaiepi> is getting the terminal width and height something that'd be better off left as a library or implemented natively?

[22:20] <[Coke]> library

[22:20] <[Coke]> wait.

[22:20] <japhb> Kaiepi: Terminal::Print does this using tput to emit the terminal-specific sequences for this.

[22:20] <[Coke]> I read that as 'library vs. core' not 'library vs. native'. my bad

[22:21] <Kaiepi> oh

[22:21] <japhb> Terminal size is a mess that is implemented by library on all posix-like OSen.

[22:21] <japhb> It's such a pain that we wrapped the command line tool, instead of picking a library

[22:21] *** mcmillhj left
[22:22] <japhb> ... and it's still an ugly mess (see https://github.com/ab5tract/Terminal-Print/blob/master/lib/Terminal/Print/Commands.pm6)

[22:24] * japhb wonders if the Rakudo bug referenced in line 50 is fixed ....

[22:24] <Kaiepi> i do it like this in Net::Telnet https://hastebin.com/upetelofew.pl

[22:27] *** mcmillhj joined
[22:27] <geekosaur> you do somewhat less; telnet isn't trying to figure out whether the user's terminal emulator is antisocial

[22:28] <Kaiepi> wdym?

[22:28] *** p6bannerbot sets mode: +v mcmillhj

[22:28] <geekosaur> (like, when you output a character in the last clumn, where is the cursor afterward? telnet doesn't care. Termina::Print ants to know if it's a terminal that leaves the cursor in thelast column instead of the first column of the next line)

[22:29] <Kaiepi> oh

[22:30] <geekosaur> this stuff gets so very _fun_‚Ä¶ not

[22:31] *** pecastro left
[22:32] *** mcmillhj left
[22:39] *** mcmillhj joined
[22:40] *** p6bannerbot sets mode: +v mcmillhj

[22:44] *** mcmillhj left
[22:49] <tbrowder__> tyil: ref the pod problem, could you please let me see what you sent kensanata!

[22:50] <tbrowder__> s/!/?/

[22:51] <tbrowder__> allowing some formatting in declarator blocks is on my todo list.

[22:52] <tyil> tbrowder__: sure

[22:55] <tyil> tbrowder__: https://p.tyil.nl/bee6

[22:57] <tbrowder__> tyil: thanks!

[22:58] <tyil> :>

[23:07] *** mxf_2 joined
[23:08] *** patrickb left
[23:08] *** p6bannerbot sets mode: +v mxf_2

[23:10] *** mcmillhj joined
[23:10] *** p6bannerbot sets mode: +v mcmillhj

[23:12] *** mxf_2 left
[23:13] <tbrowder__> just added new rakudo pod issue GH# 2332

[23:13] <synopsebot> GH#2332 [open]: https://github.com/rakudo/rakudo/issues/2332 [POD] allow some formatting in pod declarator blocks

[23:14] <tbrowder__> note that has been a TODO note in current code

[23:14] *** mcmillhj left
[23:26] *** mcmillhj joined
[23:27] *** p6bannerbot sets mode: +v mcmillhj

[23:31] *** mcmillhj left
[23:37] *** Celmor15 joined
[23:39] *** vike1 left
[23:41] <Geth> ¬¶ doc: threadless-screw++ created pull request #2335: Rewrite of Identifier-section

[23:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2335

[23:43] *** [particle] left
[23:43] *** Celmor15 left
[23:43] *** [particle] joined
[23:44] *** p6bannerbot sets mode: +v [particle]

[23:46] *** mcmillhj joined
[23:46] *** p6bannerbot sets mode: +v mcmillhj

[23:50] *** mcmillhj left
[23:53] *** [particle] left
