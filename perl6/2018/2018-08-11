[00:00] <tobs> m: sub prefix:<±> (Numeric $x) { $x|-$x }; say so 1/0 ~~ ±Inf; say so -1/0 ~~ ±Inf

[00:00] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «True␤True␤»

[00:04] <Elronnd> I'm using this https://perl6intro.com/#_assignment_vs_binding and in the part about binding it says my $a; my $b; $b := $a.  When I type that into the repl, it gives me an error message of "Cannot use bind operator with this left-hand side"

[00:05] <tobs> Elronnd: try to write it all in one line

[00:05] <tobs> (I don't know why but then it doesn't throw over here)

[00:05] <benjikun> m: my $a; my $b; $a := $b;

[00:05] <camelia> rakudo-moar 3301ddb1c: ( no output )

[00:06] <timotimo> yes, the REPL is often a bit wacky

[00:07] <Elronnd> ok

[00:07] <benjikun> Yeah, works fine if you type it out in a program in any way

[00:09] <Elronnd> awww

[00:10] <Elronnd> it would be *really* nice if I could do $x := $y; $y = x + 1 and then evaluating $y leads to stack overflow

[00:10] <timotimo> what you want is a symbolic math package

[00:10] <timotimo> buggable: eco symbolic

[00:10] <buggable> timotimo, Math::Symbolic 'Symbolic math for Perl 6': http://modules.perl6.org/dist/Math::Symbolic:github:raydiak

[00:10] <timotimo> i believe this hasn't been updated in a while

[00:10] <benjikun> I don't think he does

[00:13] <Elronnd> can I have multidirectional bindings like $x := $y; $y := $z and then if I modify one both of the others are also modified?

[00:13] <timotimo> binding means two variables now serve the same underlying object

[00:14] <timotimo> so when you bind $x := $y and $y := $z, you'll have $x point at what $y used to have, but $y will now share only with $z

[00:14] <timotimo> if you want all three to share the same thing, you need $x := $y; $z := $y

[00:14] <Elronnd> ahh ok

[00:16] <benjikun> m: my ($x, $y, $z); $y := $x; $z := $y; $x = 5; say $x, $y, $z;

[00:16] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «555␤»

[00:19] *** DarthGandalf left
[00:24] *** AlexDani` joined
[00:24] *** p6bannerbot sets mode: +v AlexDani`

[00:25] <AlexDani`> .

[00:25] *** AlexDani` left
[00:25] *** AlexDani` joined
[00:25] *** verne.freenode.net sets mode: +v AlexDani`

[00:25] *** p6bannerbot sets mode: +v AlexDani`

[00:25] *** AlexDaniel left
[00:25] *** AlexDani` is now known as AlexDaniel

[00:27] *** Kaypie joined
[00:27] *** Kaiepi left
[00:28] *** p6bannerbot sets mode: +v Kaypie

[00:34] *** astj joined
[00:34] *** p6bannerbot sets mode: +v astj

[00:38] *** lizmat left
[00:38] *** astj left
[00:42] <Elronnd> why is return type of a function with an arrow specified within the parens?  why sub bla(x --> T), not sub bla(x) --> T?

[00:43] <AlexDaniel> m: sub foo() returns Int { 42 }; say foo

[00:43] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «42␤»

[00:43] <Elronnd> yeah but why with the arrow notation must it be within the parens?

[00:43] <AlexDaniel> Elronnd: I guess a short answer is that it's part of the signature

[00:47] <AlexDaniel> m: sub foo(Str $x --> Int) {}; say &foo.signature

[00:47] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «(Str $x --> Int)␤»

[00:47] <Elronnd> junctions are neat

[00:48] <Elronnd> also the answer to the people who said if (x == 5 || 6 || 7) in another language (and thus potentially dangerous :P)

[00:49] <Zoffix> m: sub prefix:<±> (Numeric $x) { $x|-$x }; say so 0/0 ~~ ±Inf;

[00:49] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «False␤»

[00:50] <Zoffix> m: sub prefix:<±> (Numeric $x) { $x|-$x }; say so $_ ≠ $_ with 0/0;

[00:50] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «True␤»

[00:50] <Zoffix> :)

[00:51] <timotimo> Elronnd: you can have return type annotations in pointy block's signatures, too

[00:51] *** Zoffix left
[00:51] *** rdococ14 joined
[00:51] <timotimo> m: my &bloop = -> $a, $b --> Int:D { $a + $b }; bloop(1, 2)

[00:51] <camelia> rakudo-moar 3301ddb1c: ( no output )

[00:51] <timotimo> m: my &bloop = -> $a, $b --> Int:D { $a + $b }; say bloop(1, 2)

[00:51] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «3␤»

[00:52] *** p6bannerbot sets mode: +v rdococ14

[00:57] *** rdococ14 left
[01:05] *** colomon_ joined
[01:05] *** rindolf joined
[01:05] *** p6bannerbot sets mode: +v colomon_

[01:06] *** colomon left
[01:06] *** colomon_ is now known as colomon

[01:06] *** p6bannerbot sets mode: +v rindolf

[01:09] *** DarthGandalf joined
[01:09] *** p6bannerbot sets mode: +v DarthGandalf

[01:22] *** jeromelanteri joined
[01:22] *** p6bannerbot sets mode: +v jeromelanteri

[01:23] *** Ven` joined
[01:24] *** p6bannerbot sets mode: +v Ven`

[01:25] <Elronnd> what's the difference between for bla -> \i and for bla -> $i?

[01:25] <timotimo> $i will hold the value in "item context", and \i allows you to keep something in any context that it happens to already be in

[01:27] <Elronnd> huh?

[01:27] <Elronnd> so \i will overwrite an existing $i if it exists, but $i will create a new $i just for this scope?

[01:28] *** Ven` left
[01:29] <benjikun> m: my $i = 1; -> \t { t++; }($i); say $i;

[01:29] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «2␤»

[01:29] <benjikun> m: my $i = 1; -> $t { t++; }($i); say $i;

[01:29] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    t used at line 1␤␤»

[01:29] *** astj joined
[01:29] <benjikun> m: my $i = 1; -> $t { $t++; }($i); say $i;

[01:29] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «Cannot resolve caller postfix:<++>(Int); the following candidates␤match the type but require mutable arguments:␤    (Mu:D $a is rw)␤    (Int:D $a is rw)␤␤The following do not match for other reasons:␤    (Bool:D $a is rw)␤    (Bool:U $a …»

[01:29] <benjikun> w/e I think you get the point

[01:29] *** p6bannerbot sets mode: +v astj

[01:30] <Elronnd> yeah

[01:34] *** astj left
[01:44] <tobs> m: -> $s { say [+] $s }(1...10) ; -> \s { say [+] \s }(1...10)

[01:44] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «55␤10␤»

[01:44] <tobs> Elronnd: think that's the aspect timotimo talked about

[01:45] <tobs> can you figure it out? :)

[01:46] <Elronnd> hmmm

[01:46] <Elronnd> m: -> \s { say \s}(1...10)

[01:46] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «\((1, 2, 3, 4, 5, 6, 7, 8, 9, 10).Seq)␤»

[01:49] <Elronnd> what is the ␤?

[01:49] <benjikun> Newline

[01:49] <Elronnd> m: say [+] \((1, 2, 3, 4, 5, 6, 7, 8, 9, 10).Seq)

[01:49] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «10␤»

[01:49] <benjikun> `say` leaves a \n or newline on the end

[01:49] <Elronnd> m: say [+] \((1, 2, 3, 4, 5, 6, 7, 8, 9, 10))

[01:49] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «10␤»

[01:50] <Elronnd> I do not understand

[01:50] <tobs> btw, in addition to what you're reading, I recommend this advent calendar door https://perl6advent.wordpress.com/2017/12/02/perl-6-sigils-variables-and-containers/. I for one read it three times since last Christmas

[01:52] <benjikun> m: my $number = 0; sub foo(\n) { n += 5; }; foo($number); say $number;

[01:52] <tobs> Elronnd: the 1...10 is a Seq. If you stuff it into a scalar container using the "-> $s" signature, it will be "itemized" and the [+] hyperop treats it as one single thing. Since + is a numeric operator, it will coerce the entire Seq into a number, in that case 10, the number of its elements.

[01:52] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «5␤»

[01:53] <tobs> But if the argument is sigil-less, "-> \s", it won't be itemized and [+] treats it as the Seq it is and iterates over it, taking the sum

[01:54] <benjikun> m: say [+] \(1, 2, 3);

[01:54] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «6␤»

[01:54] <benjikun> m: say [+] \((1, 2, 3));

[01:54] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «3␤»

[01:55] <benjikun> m: \((1, 2, 3)).elems

[01:55] <camelia> rakudo-moar 3301ddb1c: ( no output )

[01:55] <benjikun> m: say \((1, 2, 3)).elems

[01:55] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «1␤»

[01:55] *** ddstreet26 joined
[01:55] <benjikun> See why it did that now, Elronnd?

[01:56] <benjikun> `\((1, 2, 3))` treats (1, 2, 3) as one item in the list

[01:56] *** p6bannerbot sets mode: +v ddstreet26

[01:56] <benjikun> m: say \((1, 2, 3))[0];

[01:56] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «(1 2 3)␤»

[01:57] *** ddstreet26 left
[01:58] <benjikun> I think that's what you were asking :P

[01:58] <Elronnd> ohh ok I see now

[01:58] <Elronnd> m: say +\(1, 2, 3)

[01:58] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «3␤»

[02:00] <tobs> hrm, I might have said something wrong? (not uncommon at 4am.) Seems it's not only the sigil-lessness in the signature but the \ when it's used.

[02:01] * tobs queues the fourth reading of the advent calendar

[02:02] <benjikun> It's a capture thing

[02:03] <tobs> I see!

[02:03] <benjikun> m: my $a = \(1, 2, 3); say $a.WHAT;

[02:03] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «(Capture)␤»

[02:05] *** sauvin joined
[02:05] *** p6bannerbot sets mode: +v sauvin

[02:06] <tobs> so, what I said was complete bogus and even the wrong way around :-/

[02:08] <benjikun> :P

[02:12] <tobs> m: -> $s { say "-$_-" for $s }(1...10)

[02:12] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «-1 2 3 4 5 6 7 8 9 10-␤»

[02:13] <tobs> m: -> \s { say "-$_-" for s }(1...10)

[02:13] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «-1-␤-2-␤-3-␤-4-␤-5-␤-6-␤-7-␤-8-␤-9-␤-10-␤»

[02:14] <tobs> now I think what I said earlier applies to this example and before I'm proven wrong, I'll hit the hay o/

[02:14] <benjikun> night

[02:33] *** abraxxa joined
[02:33] *** spycrab0 left
[02:33] *** p6bannerbot sets mode: +v abraxxa

[02:37] *** abraxxa left
[02:48] *** w_richard_w joined
[02:48] *** p6bannerbot sets mode: +v w_richard_w

[02:52] *** abraxxa joined
[02:53] *** p6bannerbot sets mode: +v abraxxa

[02:54] *** drudgesentinel joined
[02:54] *** p6bannerbot sets mode: +v drudgesentinel

[03:06] *** aborazmeh joined
[03:06] *** aborazmeh left
[03:06] *** aborazmeh joined
[03:06] *** p6bannerbot sets mode: +v aborazmeh

[03:07] *** p6bannerbot sets mode: +v aborazmeh

[03:09] *** Guest14099 joined
[03:10] *** p6bannerbot sets mode: +v Guest14099

[03:10] *** Guest14099 left
[03:12] *** abraxxa left
[03:24] *** Ven` joined
[03:24] *** p6bannerbot sets mode: +v Ven`

[03:27] *** araraloren joined
[03:27] *** p6bannerbot sets mode: +v araraloren

[03:29] *** Ven` left
[03:49] *** drudgesentinel left
[03:50] *** mdk10 joined
[03:50] *** mdk10 left
[04:06] <Geth> ¦ doc: 2dbf66ef11 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/modules.pod6

[04:06] <Geth> ¦ doc: Reword module installation info

[04:06] <Geth> ¦ doc: 

[04:06] <Geth> ¦ doc: To address concerns on https://github.com/perl6/doc/pull/2253

[04:06] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2dbf66ef11

[04:06] <synopsebot> Link: https://doc.perl6.org/language/modules

[04:07] *** Zoffix joined
[04:07] *** p6bannerbot sets mode: +v Zoffix

[04:07] * geekosaur contemplates a certain infamous StackOverflow in response to recent list mail

[04:07] * Zoffix hopes the snarky replies are not something P6 community will be known for :)

[04:08] <Zoffix> FWIW: my stock photos plan expires tomorrow. I still have 11 pics to download that must be downloaded tomorrow. If anyone thinks we need some stock for something, find it on https://depositphotos.com/ and gimme the URL to it (to the actual pic, not just search results).

[04:09] <Zoffix> I already got all I could think of and those 11 will likely go into generic stock that'll likely never get used anywhere.

[04:09] <Zoffix> (gonna be downloading stuff in ~16hr)

[04:10] *** Zoffix left
[04:17] <Elronnd> geekosaur: which StackOverflow?

[04:19] <geekosaur> http://stackoverflow.com/questions/1732348/

[04:20] *** Kaypie left
[04:20] <Elronnd> hah

[04:20] <Elronnd> I've always liked that one

[04:20] *** Kaypie joined
[04:20] <Elronnd> what does 'use v6' do?  I've seen it on some online things

[04:21] *** Khisanth left
[04:21] *** p6bannerbot sets mode: +v Kaypie

[04:22] <geekosaur> mostly it catches you if you accidentally run it with perl 5, which will throw an error about an unsupported perl version

[04:23] *** insidious0 joined
[04:24] *** p6bannerbot sets mode: +v insidious0

[04:25] *** insidious0 left
[04:27] <Kaypie> how can i throw a custom exception when a nativecall sub returns an error, but can return two different kinds of errors?

[04:30] *** aindilis left
[04:41] *** aborazmeh left
[04:44] *** Khisanth joined
[04:44] *** molaf joined
[04:44] *** p6bannerbot sets mode: +v Khisanth

[04:45] *** p6bannerbot sets mode: +v molaf

[04:46] *** aborazmeh joined
[04:46] *** aborazmeh left
[04:46] *** aborazmeh joined
[04:46] *** p6bannerbot sets mode: +v aborazmeh

[04:46] *** kent\n left
[04:47] *** p6bannerbot sets mode: +v aborazmeh

[04:52] <Juerd> Kaypie: You could write a wrapper function

[04:53] *** TodAndMargo joined
[04:53] *** p6bannerbot sets mode: +v TodAndMargo

[04:53] <TodAndMargo> What is this error?   

[04:53] <TodAndMargo> $ReturnStr = qqx ( curl $TimeOutStr -L $Url -o $FileName; echo \$\? ); 

[04:53] <TodAndMargo> Malformed UTF-8

[04:54] <TodAndMargo> How do I tell it I do not care what the character are going into $ReturnStr?

[04:55] <TodAndMargo> The file does download perfectly.  The error occurs after the download

[04:58] <AlexDaniel> TodAndMargo: are you sure that it is on that line?

[04:59] <TodAndMargo> Malformed UTF-8   in sub CurlDownloadFile at /home/linuxutil/CurlUtils.pm6 line 52

[04:59] <TodAndMargo> 52:  $ReturnStr = qqx ( curl $TimeOutStr -L $Url -o $FileName; echo \$\? );  # Note qqx need a space before the (

[04:59] <AlexDaniel> the reason I ask is because it seems like your stdout is just a number

[05:00] <AlexDaniel> and qqx shouldn't really catch stderr

[05:00] <AlexDaniel> so what is malformed there I'm not sure

[05:00] <AlexDaniel> anyway

[05:00] <TodAndMargo> I want it NOT to catch the STDERR.  Curl sends its progrss bar to StdErr.

[05:01] <AlexDaniel> what about

[05:01] <TodAndMargo> I just saw this:  `/bin/sh: -o: command not found`

[05:01] <TodAndMargo> hmmmmmm

[05:01] <AlexDaniel> $ReturnStr = run('curl', $TimeOutStr, '-L', $Url, '-o', $FileName).exitcode;

[05:02] <AlexDaniel> not only you don't have to echo anything to get exit code, but it's also bug free because there's no possibility for shell injection through $TimeOutStr, $Url and $FileName

[05:04] <TodAndMargo> All I want is the exit code anyway.  Thank you!

[05:06] <TodAndMargo> wait, what if I want both SteOut and the error code?

[05:07] <AlexDaniel> my $proc = run(:out, 'curl', $TimeOutStr, '-L', $Url, '-o', $FileName); say $proc.exitcode; say $proc.out.slurp;

[05:07] <AlexDaniel> TodAndMargo: oh yea, I think I understand now. Your $TimeOutStr was interpreted by shell

[05:08] <AlexDaniel> so `/bin/sh: -o: command not found` totally makes sense

[05:08] <AlexDaniel> in general, it's easier to avoid `shell` and `qqx`

[05:08] <TodAndMargo> my $TimeOutStr = " ";    if $TimeOut { $TimeOutStr = "--connect-timeout $TimeOut"; }

[05:08] *** ponbiki left
[05:08] <TodAndMargo> I want to see curl's progress bar

[05:10] <AlexDaniel> ok it was $Url then and not $TimeOutStr :)

[05:10] *** ponbiki joined
[05:10] <AlexDaniel> maybe ‘&’ character or something like that

[05:10] <TodAndMargo> Fixed it.  It was the url.

[05:10] <TodAndMargo> $ReturnStr = qqx ( curl $TimeOutStr -L \'$Url\' --output \'$FileName\'; echo \$\? );

[05:10] <TodAndMargo> I had to single quote the url

[05:10] <AlexDaniel> I… wouldn't call that a fix…

[05:10] *** p6bannerbot sets mode: +v ponbiki

[05:11] <TodAndMargo> curl really, really wants their url's in single quotes

[05:11] <AlexDaniel> that has nothing to do with curl

[05:11] <AlexDaniel> it is about how shell is interpreting your single string that you gave it

[05:12] <TodAndMargo> here is an example from firefox of downloading that same file:

[05:12] <TodAndMargo> curl --header 'Host: cdn09.foxitsoftware.com' --user-agent 'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:58.0) Gecko/20100101 Firefox/58.0' --header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' --header 'Accept-Language: en-US,en;q=0.5' --cookie 'FoxitWebsiteRef=25bcpOMBoY0h%2BI5u6Lqx48D6bh0Ek%2B9IVb4a94Dxl8yumDnG%2FCmGTXIXLQQGOHEvVk3OdA' --header 'Upgrade-Insecure-Requests: 1' 'http://cdn09.foxitsoftware.com

[05:12] <AlexDaniel> if your $Url variable had a ' in it, it'd break immediately

[05:12] <AlexDaniel> that has nothing to do with curl, it's how shell works

[05:12] <TodAndMargo> No single quotes in the url.  No worries there

[05:13] <AlexDaniel> also should have no single quotes in $FileName

[05:13] <AlexDaniel> I mean, you can avoid all that trouble by just using `run`

[05:13] <AlexDaniel> as simple as that

[05:14] <TodAndMargo> a single quote in the file name wold drive me bananas!  Since I am the one generating the $FileName, no worries there either

[05:16] <AlexDaniel> my $proc = run(:out, 'curl', ($TimeOut ?? "--connect-timeout $TimeOut" !! Empty), '-L', $Url, '-o', $FileName); say $proc.exitcode; say $proc.out.slurp;

[05:16] <AlexDaniel> there

[05:16] <AlexDaniel> works perfectly, no need to backslash a bunch of stuff

[05:17] <AlexDaniel> no need to double check that your stuff doesn't have “disallowed symbols”

[05:17] <AlexDaniel> doesn't pass anything through shell so just a tiny bit more efficient too

[05:18] <moritz> "--connect-timeout $TimeOut" will pass a single arg, needs «...» instead

[05:19] <TodAndMargo> run kills my progress meter from curl

[05:19] <AlexDaniel> moritz: ah, yeah. I was also thinking maybe --connect-timeout=5 but curl doesn't support that?

[05:20] <TodAndMargo> This is my debug before calling qxx

[05:20] <TodAndMargo> TimeOutStr = <--connect-timeout 6600> Url = <https://www.foxitsoftware.com/downloads/latest.php?product=Foxit-Reader&platform=Windows&version=9.2.0.9297&package_type=exe&language=English> FileName = </home/CDs/WindowsInternet/PDF/FoxitReader-9.2.0.9297_Setup_Prom_IS.exe>

[05:21] *** araraloren_ joined
[05:21] *** p6bannerbot sets mode: +v araraloren_

[05:21] <AlexDaniel> TodAndMargo: I just tried it and I can see stderr without any issues

[05:22] *** epony joined
[05:22] *** p6bannerbot sets mode: +v epony

[05:22] <TodAndMargo> Did you see it count across the screen?

[05:22] *** astj joined
[05:23] <AlexDaniel> TodAndMargo: for a different URL, yes

[05:23] <TodAndMargo> How do I talk to you guys on HexChat?  I could not find where to put the address in.

[05:23] *** p6bannerbot sets mode: +v astj

[05:23] <TodAndMargo> Huh.  Mine is totally blank is I use run

[05:24] *** araraloren left
[05:24] *** Ven` joined
[05:25] *** p6bannerbot sets mode: +v Ven`

[05:26] <AlexDaniel> my $TimeOut = 6600; my $Url = ‘https://www.foxitsoftware.com/downloads/latest.php?product=Foxit-Reader&platform=Windows&version=9.2.0.9297&package_type=exe&language=English’; my $FileName=‘foo’; my $proc = run(:out, ‘curl’, ($TimeOut ?? (‘--connect-timeout’, $TimeOut) !! Empty), ‘-L’, $Url, ‘-o’, $FileName); say $proc.exitcode; say $proc.out.slurp

[05:26] <evalable6> AlexDaniel, rakudo-moar 3301ddb1c: OUTPUT: «  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current␤          …»

[05:26] <evalable6> AlexDaniel, Full output: https://gist.github.com/6c8a5468fc4f38448f47fa27bc690d75

[05:26] <AlexDaniel> heh, poor evalable6 :D

[05:26] *** astj left
[05:27] <AlexDaniel> ↑ although here you don't need stdout I think

[05:28] <TodAndMargo> Huh?  Thank you!

[05:29] *** Ven` left
[05:29] <TodAndMargo> Oh I get it.  I wrote my own call to "run" where I run it together without the segments.  I always return all three, which is why I am not seeing it.

[05:30] *** aborazmeh left
[05:32] <xinming_> Hi, I''m a bit curious, why will the - be better to use as a delimiter? I'm feeling strange, before in perl5, I always use _ as the delimiter for subs, But after I switched to perl6, it supports -  and I can get used to it really fast, and then, I feel - is a better delimiter.

[05:32] <xinming_> What is the reason behind all this?

[05:33] <xinming_> curious the reason behind why - is better for human to accept

[05:33] <xinming_> :-)

[05:35] <TodAndMargo> I'm confused

[05:36] <AlexDaniel> xinming_: because it is a we-use-it-all-the-time-in-English delimiter? :)

[05:37] <AlexDaniel> xinming_: and you_never see_text_like_this

[05:38] <benjikun> I don't think that's proper use of `-` if you want to use it by the english-way-of-using-it

[05:38] <benjikun> :P

[05:39] <benjikun> `_` substitutes a space in my mind

[05:39] <benjikun> tbh either one works fine, just separates words

[05:40] <xinming_> benjikun: I know they both worked fine. But as a Chinese, before, I always use _ for word delimiter.

[05:41] <benjikun> I use _ when I'm doing lower-level languages

[05:41] <xinming_> so, to me, _ and - are almost the same. I learnt lisp, But never programming much in it, it uses - as delimiter, I don't feel the difference. After came to perl6, I can choose both _ and -, And after using -, I feel that I don't like the _ anymore.

[05:41] <benjikun> and likeThis for higher level ones

[05:42] <benjikun> fooBar

[05:42] <xinming_> so, it makes wonder, what caused me that - is better.

[05:42] <xinming_> I don't like the likeThis as function name. to me, It's worse than like_this. :-)

[05:42] <benjikun> :P

[05:43] <benjikun> I've gotten used to either way

[05:43] <benjikun> maybe you like `-` more because it's more vertically symmetrical

[05:43] <xinming_> maybe

[05:44] <AlexDaniel> benjikun: why not? Who defines what I can and cannot use as a compound adjective? Are you going to call the compound adjective police? :)

[05:44] <AlexDaniel> but yeah maybe you're right :P

[05:45] *** lizmat joined
[05:46] *** p6bannerbot sets mode: +v lizmat

[06:05] <TodAndMargo> What am I doing wrong here.  I kow that the caret before the \d is the issue, but why?

[06:05] <TodAndMargo> p6 'my $x="8627-2.2.19882.exe"; if $x ~~ m/ ^\d "-" (.*?) .exe / {say "Found"};'

[06:06] <TodAndMargo> Never mind.  I forgot the +   ^\d+

[06:21] <TodAndMargo> Any idea why this is failing:

[06:21] <TodAndMargo> ShortEntry =<4626-2.2.19882.exe>   BaseTag =<\d+>   Extension = <.exe>

[06:21] <TodAndMargo>  PrintGreenErr( "ShortEntry =<$ShortEntry>   BaseTag =<$BaseTag>   Extension = <$Extension>\n" );       if $ShortEntry ~~ m/ ^$BaseTag "-" (.*?) $Extension / {

[06:21] <TodAndMargo> This works:  PrintGreenErr( "ShortEntry =<$ShortEntry>   BaseTag =<$BaseTag>   Extension = <$Extension>\n" );       if $ShortEntry ~~ m/ ^$BaseTag "-" (.*?) $Extension / {

[06:22] <TodAndMargo> ops: $ p6 'my $x="8627-2.2.19882.exe"; if $x ~~ m/ ^\d+ "-" (.*?) ".exe" / {say "Found"};' Found

[06:22] *** lizmat left
[06:23] *** Ven` joined
[06:24] *** p6bannerbot sets mode: +v Ven`

[06:24] *** jmerelo joined
[06:24] *** p6bannerbot sets mode: +v jmerelo

[06:25] *** breinbaas joined
[06:26] *** imcsk8_ joined
[06:26] *** p6bannerbot sets mode: +v breinbaas

[06:26] *** imcsk8 left
[06:27] *** p6bannerbot sets mode: +v imcsk8_

[06:27] <Elronnd> I have a function sub print-and-copy(Str $s) {, and the compiler is choking up on the '$s' with "Variable '$s' is not declared"

[06:27] <Elronnd> wtf??

[06:27] <Elronnd> m: sub print-and-copy(Str $s) { say $s; }

[06:27] <camelia> rakudo-moar 3301ddb1c: ( no output )

[06:27] *** Ven` left
[06:28] <araraloren_> TodAndMargo ShortEntry =<4626-2.2.19882.exe> , This is the code ?

[06:28] <Elronnd> wait, hmm, no

[06:29] <Elronnd> sorry, I fucked up, figured it out

[06:29] <TodAndMargo> `4626-2.2.19882.exe` is the string being tested.

[06:31] <araraloren_> m: my $BaseTag = "\d+"; my $Extension = ".exe"; say "8627-2.2.19882.exe" ~~ m/ ^$BaseTag "-" (.*?) $Extension /;

[06:31] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unrecognized backslash sequence: '\d'␤at <tmp>:1␤------> 3my $BaseTag = "\7⏏5d+"; my $Extension = ".exe"; say "8627-2␤    expecting any of:␤        double quotes␤        term␤»

[06:31] <araraloren_> you mean this ?

[06:32] *** molaf left
[06:33] <araraloren_> m: my $BaseTag = '\d+'; my $Extension = ".exe"; say "8627-2.2.19882.exe" ~~ m/ ^$(BaseTag) "-" (.*?) $Extension /;

[06:33] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    BaseTag used at line 1␤␤»

[06:33] <araraloren_> m: my $BaseTag = '\d+'; my $Extension = ".exe"; say "8627-2.2.19882.exe" ~~ m/ ^$($BaseTag) "-" (.*?) $Extension /;

[06:33] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «False␤»

[06:33] <araraloren_> m: my $BaseTag = '\d+'; my $Extension = ".exe"; say "8627-2.2.19882.exe" ~~ m/ ^$BaseTag "-" (.*?) $Extension /;

[06:33] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «False␤»

[06:34] <araraloren_> m: my $BaseTag = '\d+'; my $Extension = ".exe"; say "8627-2.2.19882.exe" ~~ m/ ^<$BaseTag> "-" (.*?) $Extension /;

[06:34] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «｢8627-2.2.19882.exe｣␤ 0 => ｢2.2.19882｣␤»

[06:35] <TodAndMargo> It does not bomb out. It just says false

[06:35] <araraloren_> Do you mean using $BaseTag as a pattern, not a literal ?

[06:36] <araraloren_> I am not very understand what you want to do

[06:36] <araraloren_> you should take a look at https://docs.perl6.org/language/regexes#Regex_Interpolation

[06:38] <TodAndMargo> the <> seemed to fix it.  I am looping through a list of entires in a directory and pushing onto a stack the ones that pass the testa

[06:39] <araraloren_> yeah, if you want using the string as regex pattern, you should using <>

[06:40] <TodAndMargo> Thank you!

[06:40] <araraloren_> but notice the document said, it causes implicit EVAL

[06:42] *** panopticon joined
[06:42] *** p6bannerbot sets mode: +v panopticon

[06:43] *** panopticon left
[06:44] *** lizmat joined
[06:44] *** p6bannerbot sets mode: +v lizmat

[06:57] *** nasm joined
[06:57] *** p6bannerbot sets mode: +v nasm

[06:57] *** nasm left
[06:58] *** nasm joined
[06:58] *** p6bannerbot sets mode: +v nasm

[07:01] *** reu left
[07:03] *** mephinet left
[07:03] <Elronnd> I don't mean to presume, and it's ok if not, but would anyone mind looking over this small script that I made and noting if I'm doing something unidiomatic? https://github.com/Elronnd/Uploader/blob/master/upload.p6

[07:07] *** mephinet joined
[07:07] *** p6bannerbot sets mode: +v mephinet

[07:08] *** xq left
[07:11] *** reu joined
[07:11] *** p6bannerbot sets mode: +v reu

[07:12] <nasm> silly noob question, does `Str $arg -> Str` define a parameter of type `Str -> Str` named `$arg` or name a type where the parameter has the name `$arg`?

[07:14] *** erdic left
[07:14] *** erdic joined
[07:14] *** p6bannerbot sets mode: +v erdic

[07:16] <araraloren_> nasm I don't think so

[07:16] <araraloren_> there is not XX -> XX in Perl 6 , I think

[07:17] <nasm> oh. there's no type constructor for functions?

[07:17] <moritz> what's a type constructor?

[07:17] * moritz is a typo constructor

[07:18] <nasm> I'm borrowing terms from other languages, sorry. It's kind of like a type, except parameterized. Like `'a list` (ML) or `List<a>` (C++/Java)

[07:18] <nasm> list or List is the type constructor

[07:19] <Elronnd> how is that different from a normal constructor?

[07:20] <nasm> constructor as in data constructor or the magical almost-method that builds objects?

[07:20] <Elronnd> the difference being?

[07:21] <benjikun> nasm: Is this what you're talking about? https://wiki.haskell.org/Constructor#Type_constructor

[07:23] <nasm> yes. I was just kinda surprised at the syntax `Str $msg --> Str` for declaring a parameter that happens to be a function instead of having a more complex type appearing to the left and was trying to figure out what was going on.

[07:24] <nasm> nevermind, I misinterpreted the syntax completely. sorry.

[07:24] <benjikun> `--> Str` means the function returns a Str

[07:29] <TodAndMargo> is there a way to write `if a || b` and not evaluate b if a passes?

[07:30] *** w_richard_w left
[07:30] <benjikun> Does it TodAndMargo?

[07:31] <benjikun> m: sub a { return True }; sub b { say "CALLED B" }; if a() || b() { say "." }

[07:31] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «.␤»

[07:32] <TodAndMargo> not sure what you said.  

[07:32] <araraloren_> Elronnd It's pretty good, but I recomend you using MAIN to write the script

[07:32] <benjikun> not sure what you mean

[07:33] <araraloren_> m: if 1 || do {"called".say;} { say "True"; }

[07:33] <camelia> rakudo-moar 3301ddb1c: OUTPUT: «True␤»

[07:34] <Elronnd> TodAndMargo: the answer is yes, and that's to write `if a || b`

[07:34] <Elronnd> araraloren_: ok, thanks

[07:34] <araraloren_> TodAndMargo so what do you mean ?

[07:38] <TodAndMargo> I have a test.  If the first part passes, I do not want it to evaluate the second part as it will throw an error.  It will only not throw an error if the first part fails

[07:38] <Elronnd> yes, you can just use || because it already does that

[07:39] <TodAndMargo> Unrecognized regex metacharacter - (must be quoted to match literally) at /home/linuxutil/EVAL_4:1 ------> anon regex {  CimTrak⏏-Enterprise-Server}

[07:39] <Elronnd> (this is a common practice in c to prevent null dereferences -- if (x && x->arr && x->arr[0] == bla))

[07:47] <araraloren_> Elronnd in Perl 6 we have .? for that

[07:49] <Elronnd> that is simultaneously really nice and infuriating

[07:49] <Elronnd> because it's ?. in kotlin

[07:49] <benjikun> lol

[07:49] <Elronnd> now, I've never done any serious programming in kotlin, but I went through the official tutorial and that's the part I remember

[07:50] *** epony left
[07:54] *** nasm left
[07:55] <TodAndMargo> I had to install some escapes to fix the issue `( my $EscBaseTag = $BaseTag ) ~~ s:global/ "-" /\\-/;`

[08:00] *** agree joined
[08:01] *** p6bannerbot sets mode: +v agree

[08:05] *** lizmat left
[08:05] *** agree left
[08:10] <Geth> ¦ doc: 8e211b7f4e | (JJ Merelo)++ | doc/Language/faq.pod6

[08:10] <synopsebot> Link: https://doc.perl6.org/language/faq

[08:10] <Geth> ¦ doc: Reflow

[08:10] <Geth> ¦ doc: 

[08:10] <Geth> ¦ doc: This also closes #2245 after successful upgrade. Should be working

[08:10] <Geth> ¦ doc: pretty soon.

[08:10] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8e211b7f4e

[08:27] *** sena_kun joined
[08:28] *** p6bannerbot sets mode: +v sena_kun

[08:28] *** erdic left
[08:28] *** erdic joined
[08:28] *** p6bannerbot sets mode: +v erdic

[08:33] *** erdic left
[08:34] *** kaare_ left
[08:35] *** kaare_ joined
[08:35] *** p6bannerbot sets mode: +v kaare_

[08:40] *** erdic joined
[08:40] *** p6bannerbot sets mode: +v erdic

[08:42] *** TodAndMargo left
[08:46] <Geth> ¦ doc: d43e7a7ef3 | (JJ Merelo)++ | doc/Type/Int.pod6

[08:46] <synopsebot> Link: https://doc.perl6.org/type/Int

[08:46] <Geth> ¦ doc: Improves and adds examples, refs #2256

[08:46] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d43e7a7ef3

[08:46] <Geth> ¦ doc: 479add6b96 | (JJ Merelo)++ | 2 files

[08:46] <Geth> ¦ doc: Adds polymod for Real, closes #2256

[08:46] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/479add6b96

[08:48] *** robertle joined
[08:49] *** p6bannerbot sets mode: +v robertle

[08:50] *** kaare_ left
[08:52] *** RoBz13 joined
[08:53] *** p6bannerbot sets mode: +v RoBz13

[08:53] *** RoBz13 left
[09:05] *** epony joined
[09:05] *** p6bannerbot sets mode: +v epony

[09:09] *** tobs joined
[09:09] *** p6bannerbot sets mode: +v tobs

[09:26] *** kent\n joined
[09:26] *** p6bannerbot sets mode: +v kent\n

[09:36] *** kerframil left
[09:50] *** tobs left
[09:51] *** erdic left
[09:54] *** kaare_ joined
[09:55] *** p6bannerbot sets mode: +v kaare_

[10:04] *** erdic joined
[10:04] *** p6bannerbot sets mode: +v erdic

[10:04] *** tobs joined
[10:04] *** p6bannerbot sets mode: +v tobs

[10:08] *** erdic left
[10:10] *** robertle left
[10:15] *** Kaypie left
[10:38] *** robertle joined
[10:38] *** p6bannerbot sets mode: +v robertle

[10:45] *** Ven` joined
[10:46] *** p6bannerbot sets mode: +v Ven`

[11:00] *** molaf joined
[11:00] *** p6bannerbot sets mode: +v molaf

[11:00] *** erdic joined
[11:00] *** p6bannerbot sets mode: +v erdic

[11:22] *** xq joined
[11:22] *** p6bannerbot sets mode: +v xq

[11:28] *** HackMaster joined
[11:29] *** HackMaster left
[11:32] <araraloren_> Hi, How I quit from a supply block ?

[11:33] <araraloren_> like I can `done` in that

[11:35] *** Kaiepi joined
[11:35] *** p6bannerbot sets mode: +v Kaiepi

[11:44] *** jmerelo left
[11:45] <timotimo> `quit` should quit, otherwise throw an exception i guess?

[12:09] *** tokomer joined
[12:09] *** p6bannerbot sets mode: +v tokomer

[12:11] <jnthn> araraloren_: Just throw an exception

[12:11] <jnthn> Any unhandled exception in a Supply block will be a quit

[12:11] <jnthn> *supply

[12:12] <araraloren_> yeah, I see

[12:12] <araraloren_> and I have a trouble right now

[12:12] <araraloren_> evalable6: https://gist.githubusercontent.com/araraloren/0f7ea982dfda8b62dcb007e664f6b354/raw/40545ce73649b4a5e5a5ab2fad26eb27b0909b90/share-supply.p6

[12:12] <evalable6> araraloren_, Successfully fetched the code from the provided URL

[12:12] <evalable6> araraloren_, rakudo-moar 0ab628949: OUTPUT: «(signal SIGHUP) called␤«timed out after 10 seconds»»

[12:12] <araraloren_> with the first tap, the code hang on

[12:13] <araraloren_> Is something I am missing ? jnthn 

[12:13] <araraloren_> It'll be fine if I add a done nameargument to the tap

[12:14] <araraloren_> sorry quit

[12:14] <araraloren_> evalable6: https://gist.githubusercontent.com/araraloren/0f7ea982dfda8b62dcb007e664f6b354/raw/4841ea70226080ece12d3bee6a88d10d3cf46527/share-supply.p6

[12:14] <evalable6> araraloren_, Successfully fetched the code from the provided URL

[12:14] <evalable6> araraloren_, rakudo-moar 0ab628949: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/zwWas44dzI␤Undeclared routine:␤    ex used at line 19␤␤»

[12:15] *** vike1 joined
[12:15] <araraloren_> evalable6: https://gist.githubusercontent.com/araraloren/0f7ea982dfda8b62dcb007e664f6b354/raw/86dbbe4efdadfc9db9d33d77b0edd52ad1ba168b/share-supply.p6

[12:15] <evalable6> araraloren_, Successfully fetched the code from the provided URL

[12:15] <evalable6> araraloren_, rakudo-moar 0ab628949: OUTPUT: «(exit code 1) called␤An operation first awaited:␤  in block <unit> at /tmp/aC1EyvPbn_ line…»

[12:15] <evalable6> araraloren_, Full output: https://gist.github.com/173c5372eb6876cf8281b0e399db0cce

[12:15] *** p6bannerbot sets mode: +v vike1

[12:16] *** vike left
[12:26] <jnthn> araraloren_: Not sure what's happening there, maybe worth filing a Rakudo issue about. But I'd probably write it like this: https://gist.github.com/jnthn/d91b387c56d68f48d8a5233a23ddca21

[12:26] <jnthn> Which works

[12:27] <araraloren_> jnthn cool

[12:27] <araraloren_> I will setup a issue about that

[12:33] *** kaare_ left
[12:43] *** tobs left
[12:47] *** tobs joined
[12:47] *** p6bannerbot sets mode: +v tobs

[12:53] *** kspencer5 joined
[12:53] *** kspencer5 left
[12:57] *** tobs left
[12:59] *** erdic left
[13:00] *** xinming_ is now known as xinming

[13:02] *** rindolf left
[13:03] *** kaare_ joined
[13:03] *** p6bannerbot sets mode: +v kaare_

[13:04] *** rindolf joined
[13:05] *** p6bannerbot sets mode: +v rindolf

[13:07] *** tobs joined
[13:07] *** p6bannerbot sets mode: +v tobs

[13:11] *** erdic joined
[13:11] *** p6bannerbot sets mode: +v erdic

[13:31] *** Peetz0r16 joined
[13:32] *** p6bannerbot sets mode: +v Peetz0r16

[13:32] *** Peetz0r16 left
[13:42] *** Some-body_ joined
[13:42] *** p6bannerbot sets mode: +v Some-body_

[13:44] *** DarthGandalf left
[13:44] *** Some-body_ is now known as DarthGandalf

[13:58] *** jeromelanteri left
[14:06] *** jeromelanteri joined
[14:06] *** p6bannerbot sets mode: +v jeromelanteri

[14:06] *** jeromelanteri left
[14:13] *** jor2 joined
[14:13] *** jor2 left
[14:18] *** abraxxa joined
[14:19] *** p6bannerbot sets mode: +v abraxxa

[14:21] <Geth> ¦ marketing: fb6358672b | (Zoffix Znet)++ | 11 files

[14:21] <Geth> ¦ marketing: Add new stock

[14:21] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/fb6358672b

[14:22] *** abraxxa left
[14:27] *** Melody\Concerto2 joined
[14:27] *** Melody\Concerto2 left
[14:37] *** abraxxa joined
[14:38] *** p6bannerbot sets mode: +v abraxxa

[14:43] *** MilkmanDan left
[14:44] *** MilkmanDan joined
[14:44] *** p6bannerbot sets mode: +v MilkmanDan

[14:47] *** BertolucciTalks left
[14:48] *** Checking joined
[14:49] *** p6bannerbot sets mode: +v Checking

[14:49] *** Checking left
[15:06] *** spycrab0 joined
[15:06] *** p6bannerbot sets mode: +v spycrab0

[15:10] *** zakharyas joined
[15:10] *** Ven` left
[15:11] *** p6bannerbot sets mode: +v zakharyas

[15:16] *** MilkmanDan left
[15:16] *** robinsmidsrod left
[15:16] *** MilkmanDan joined
[15:16] *** p6bannerbot sets mode: +v MilkmanDan

[15:18] *** robinsmidsrod joined
[15:18] *** p6bannerbot sets mode: +v robinsmidsrod

[15:18] *** neptune joined
[15:19] *** neptune left
[15:25] *** jmerelo joined
[15:26] *** p6bannerbot sets mode: +v jmerelo

[15:27] *** O-dog1 joined
[15:28] *** p6bannerbot sets mode: +v O-dog1

[15:28] *** O-dog1 left
[15:30] *** w_richard_w joined
[15:30] *** p6bannerbot sets mode: +v w_richard_w

[15:34] *** Ven` joined
[15:34] *** p6bannerbot sets mode: +v Ven`

[15:40] *** MilkmanDan left
[15:40] *** MilkmanDan joined
[15:40] *** p6bannerbot sets mode: +v MilkmanDan

[15:41] *** natrys joined
[15:41] *** p6bannerbot sets mode: +v natrys

[15:57] *** Kaiepi left
[15:57] *** Kaiepi joined
[15:58] *** p6bannerbot sets mode: +v Kaiepi

[16:03] *** raynold joined
[16:03] *** p6bannerbot sets mode: +v raynold

[16:03] *** raynold left
[16:07] *** morsik25 joined
[16:07] *** Libre joined
[16:08] *** morsik25 left
[16:08] *** p6bannerbot sets mode: +v Libre

[16:08] <Geth> ¦ doc: cd5e7a1876 | Coke++ | doc/Type/Any.pod6

[16:08] <synopsebot> Link: https://doc.perl6.org/type/Any

[16:08] <Geth> ¦ doc: remove dupe word

[16:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cd5e7a1876

[16:20] *** Libre left
[16:39] *** Ven` left
[16:44] *** araraloren_ left
[16:46] *** Ben643 joined
[16:46] *** rindolf left
[16:46] *** p6bannerbot sets mode: +v Ben643

[16:47] *** Ben643 left
[16:50] *** rindolf joined
[16:51] *** p6bannerbot sets mode: +v rindolf

[17:07] <xinming> For a non-required named params, Is it possible to set the default value for it?

[17:08] *** zakharyas left
[17:08] <timotimo> of course

[17:09] <timotimo> m: sub no-need-for-names(:$name = "Unnamed") { say "the name is $name" }; no-need-for-names(name => "timo"); no-need-for-names()

[17:09] <camelia> rakudo-moar 3c93f3fae: OUTPUT: «the name is timo␤the name is Unnamed␤»

[17:09] <xinming> Got it, thanks

[17:10] *** zakharyas joined
[17:11] *** p6bannerbot sets mode: +v zakharyas

[17:20] *** zakharyas left
[17:22] *** w_richard_w left
[17:30] *** hami joined
[17:30] *** p6bannerbot sets mode: +v hami

[17:31] *** silug left
[17:35] *** Ven` joined
[17:36] *** p6bannerbot sets mode: +v Ven`

[17:37] *** pmurias joined
[17:38] *** p6bannerbot sets mode: +v pmurias

[17:39] *** Ven` left
[17:41] *** hami left
[18:02] *** luke-jr25 joined
[18:02] *** p6bannerbot sets mode: +v luke-jr25

[18:07] *** luke-jr25 left
[18:13] *** mcspud20 joined
[18:14] *** p6bannerbot sets mode: +v mcspud20

[18:14] *** mcspud20 left
[18:15] *** fryst17 joined
[18:16] *** p6bannerbot sets mode: +v fryst17

[18:21] *** fryst17 left
[18:26] *** aindilis joined
[18:26] *** p6bannerbot sets mode: +v aindilis

[18:31] *** Sgeo__ joined
[18:31] *** p6bannerbot sets mode: +v Sgeo__

[18:32] *** TreyHarris left
[18:35] *** Sgeo_ left
[18:35] *** Sgeo_ joined
[18:36] *** Ven` joined
[18:36] *** p6bannerbot sets mode: +v Sgeo_

[18:36] *** p6bannerbot sets mode: +v Ven`

[18:38] *** Sgeo__ left
[18:41] *** Ven` left
[18:47] *** TreyHarris joined
[18:47] *** p6bannerbot sets mode: +v TreyHarris

[18:48] *** tokomer left
[18:49] *** Xliff joined
[18:50] *** p6bannerbot sets mode: +v Xliff

[18:50] <Xliff> Is there a better way to set proper usage than the following: sub MAIN(Int $num where 1..3) {

[18:50] <Xliff>   

[18:50] <Xliff> } --> Usage:

[18:50] <Xliff>   examples/pack_example.pl6 <num>

[18:51] <Xliff> It works, but the usage message could be better defined.

[18:54] *** zakharyas joined
[18:55] <Ulti> Xliff you can do #`() comments on the parameters iirc

[18:55] *** p6bannerbot sets mode: +v zakharyas

[18:55] <Ulti> also sub USAGE lets you edit the string thats produced

[18:56] *** kaare_ left
[18:56] <Ulti> also #|(comment) for the actual MAIN if its a multi means you get docs for each command use

[19:07] *** MasterDuke left
[19:09] <timotimo> m: subset OneToThree of Int where 1..3; sub MAIN(OneToThree $value) { }

[19:09] <camelia> rakudo-moar 3c93f3fae: OUTPUT: «Usage:␤  <tmp> <value> ␤»

[19:09] <timotimo> hm, i thought it'd put the type name there

[19:12] *** MasterDuke joined
[19:12] *** p6bannerbot sets mode: +v MasterDuke

[19:12] *** MasterDuke left
[19:12] *** MasterDuke joined
[19:12] *** herbert.freenode.net sets mode: +v MasterDuke

[19:12] *** p6bannerbot sets mode: +v MasterDuke

[19:18] <Xliff> Util: Thanks! I will have to remember that. Is there a writeup on how that should work?

[19:18] <Xliff> Somewhere in the docs?

[19:18] <Xliff> m: subset OneToThree of Int where 1..3; sub MAIN(OneToThree $value #`(1..3) ) { }

[19:18] <camelia> rakudo-moar 3c93f3fae: OUTPUT: «Usage:␤  <tmp> <value> ␤»

[19:18] <Xliff> Ulti ^^

[19:28] <AlexDaniel> .tell Skarsnik https://rt.perl.org/Public/Bug/Display.html?id=131003#txn-1573999

[19:28] <yoleaux> AlexDaniel: I'll pass your message to Skarsnik.

[19:35] *** spycrab0 left
[19:36] *** promote joined
[19:36] *** p6bannerbot sets mode: +v promote

[19:37] *** Ven` joined
[19:38] *** p6bannerbot sets mode: +v Ven`

[19:39] <Ulti> Xliff: yeah if you search for USAGE I think you get to the right bit of the docs

[19:41] *** promote left
[19:42] *** Ven` left
[19:56] *** molaf left
[20:04] <xinming> What module is recommend to get http data? LWP::Simple?

[20:05] <timotimo> i think HTTP::UserAgent, or if you need some advanced stuff maybe Cro::HTTP has what you need

[20:05] <timotimo> if you want something simple, go with WWW

[20:06] <xinming> Thanks

[20:21] <Xliff> You will find that as your project grows, you will need more of the features in Cro::HTTP than from any other module.

[20:21] <Xliff> So if you are doing more than get requests, take the time to deal with the learning curve. It's not that hard.

[20:22] <Xliff> xinming ^^

[20:28] *** Peng16 joined
[20:28] *** p6bannerbot sets mode: +v Peng16

[20:30] <xinming> Xliff: Thanks, Will try all of them. :-)

[20:32] <pochi> what's the correct way to implement stingification of objects?

[20:33] *** Peng16 left
[20:38] *** Ven` joined
[20:39] *** p6bannerbot sets mode: +v Ven`

[20:42] *** sena_kun left
[20:42] *** albel72729 joined
[20:43] <MasterDuke> pochi: give them a .Str method

[20:43] *** Ven` left
[20:43] *** p6bannerbot sets mode: +v albel72729

[20:44] *** albel72729 left
[20:48] <pochi> MasterDuke: doesn't seem to work

[20:58] <MasterDuke>  m: class Foo { method Str() { "I am a Foo" }; }; my $a = Foo.new; say "I am a human, but |$a|"

[20:58] <camelia> rakudo-moar 3c93f3fae: OUTPUT: «I am a human, but |I am a Foo|␤»

[20:58] <pochi> hm, I did it a bit different

[20:59] <pochi> m: class Foo { method Str() { "I am a Foo" }; }; my $a = Foo.new; say $a;

[20:59] <camelia> rakudo-moar 3c93f3fae: OUTPUT: «Foo.new␤»

[21:00] <MasterDuke>  m: class Foo { method Str() { "I am a Foo" }; }; my $a = Foo.new; say ~$a

[21:00] <camelia> rakudo-moar 3c93f3fae: OUTPUT: «I am a Foo␤»

[21:00] *** x[LGWs4x4i]uG2N0 left
[21:00] <geekosaur> pochi, "say" uses .gist

[21:00] <pochi> but it had to do something to come up with "Foo.new" too?

[21:01] <geekosaur> so define method gist if you want to override that

[21:01] <pochi> there are two methods to stringify?

[21:01] <geekosaur> one is actual stringification, the other is "produce something compact for human consumption"

[21:01] <pochi> isn't that the same thing?

[21:02] <geekosaur> no?

[21:02] <pochi> put some characters on screen representing this object please

[21:02] <geekosaur> stringify is the whole thing. if youre wokring with an HTML document, there;s a difference between rendering it and giving you the HTML as text

[21:02] <pochi> yeah, but in this context both are text, no?

[21:02] <geekosaur> .Str should produce the whoole thing in some form useful for other functions, .gist should produce a summary ("the gist of it") for people

[21:04] <pochi> but I want stringification to be the same, no matter if you quote it or dont

[21:04] <MasterDuke> m: class Foo { method Str() { "I am a Foo for a computer" }; method gist() { "I am a Foo for a human" }; }; my $a = Foo.new; say $a; say ~$a

[21:04] <camelia> rakudo-moar 3c93f3fae: OUTPUT: «I am a Foo for a human␤I am a Foo for a computer␤»

[21:04] *** x[LGWs4x4i]uG2N0 joined
[21:05] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[21:05] <MasterDuke> m: class Foo { method Str() { "I am a Foo for a computer" }; method gist() { self.Str }; }; my $a = Foo.new; say $a

[21:05] <camelia> rakudo-moar 3c93f3fae: OUTPUT: «I am a Foo for a computer␤»

[21:05] <MasterDuke> m: class Foo { method Str() { "I am a Foo for a computer" }; method gist() { self.Str }; }; my $a = Foo.new; say ~$a

[21:05] <camelia> rakudo-moar 3c93f3fae: OUTPUT: «I am a Foo for a computer␤»

[21:06] <pochi> thanks. that should be the default in my opinion

[21:09] *** abraxxa left
[21:10] <geekosaur> yes, just like everyone knows encodings don;t exist, all text is magically in their locale

[21:10] <MasterDuke> e: my @a = ^1_000; say @a; say ~@a

[21:10] <evalable6> MasterDuke, rakudo-moar 0249afc26: OUTPUT: «[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 …»

[21:10] <evalable6> MasterDuke, Full output: https://gist.github.com/26730a6909821d5adad6128b326d0eb0

[21:11] <geekosaur> "it's a difference I don;t happen to care about right now, its a difference nobody ever should care about"

[21:11] <MasterDuke> pochi: ^^^ stuff like that is why there's both

[21:11] <geekosaur> right up until you do need it and wonder why things don't work

[21:13] *** abraxxa joined
[21:13] <pochi> I would expect the same result for say @a and say ~@a

[21:13] *** p6bannerbot sets mode: +v abraxxa

[21:15] <MasterDuke> but what's the point of printing out its contents (in the context where you assume a human is looking at them) when it's that big?

[21:15] <geekosaur> sigh

[21:16] * geekosaur has three channels all showinbg different forms of people unable to think past their own navels. lovely

[21:16] <MasterDuke> e: my @a = ^1_000; put @a

[21:16] <evalable6> MasterDuke, rakudo-moar 0249afc26: OUTPUT: «0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 3…»

[21:16] <evalable6> MasterDuke, Full output: https://gist.github.com/4e5289a091ad9d495f0bd5c0d3ef99e2

[21:16] <pochi> MasterDuke: that's not the point I was arguing though

[21:16] <MasterDuke> pochi: put uses .Str

[21:17] <pochi> what?

[21:17] <pochi> I thought there only were two, say and print ...

[21:18] *** natrys left
[21:19] <pochi> so put @a and put ~@a outputs the same thing then

[21:19] <pochi> which makes sense

[21:19] <geekosaur> to you, now

[21:19] <geekosaur> but then you've been studiously ignoring any possibility that your right now might not be right for all cases

[21:19] <pochi> as does print @a and print ~@a it seems

[21:20] <pochi> so only say @a and say ~@a differs

[21:20] <MasterDuke> https://docs.perl6.org/type/Mu#method_print and the next two entries (put and say) explain the differences

[21:21] <pochi> ah, so it says not to use "say"

[21:21] *** pmurias left
[21:23] *** johnny5620 joined
[21:24] *** p6bannerbot sets mode: +v johnny5620

[21:24] <MasterDuke> say does some other niceties, like sort hashes

[21:24] *** johnny5620 left
[21:30] *** pmurias joined
[21:31] *** p6bannerbot sets mode: +v pmurias

[21:33] *** zakharyas left
[21:34] *** irv9 joined
[21:34] *** irv9 left
[21:39] *** Ven` joined
[21:40] *** p6bannerbot sets mode: +v Ven`

[21:43] *** Ven` left
[22:08] *** pmurias left
[22:17] *** kerframil joined
[22:17] *** p6bannerbot sets mode: +v kerframil

[22:28] *** HaraldJoerg joined
[22:28] *** p6bannerbot sets mode: +v HaraldJoerg

[22:33] *** robertle left
[22:38] *** rindolf left
[22:40] *** Ven` joined
[22:40] *** p6bannerbot sets mode: +v Ven`

[22:45] *** Ven` left
[22:57] *** lizmat joined
[22:58] *** p6bannerbot sets mode: +v lizmat

[23:00] * lizmat waves from Glasgow

[23:04] * benjikun waves from North Carolina lol

[23:14] <lizmat> \o/

[23:18] *** MilkmanDan left
[23:18] *** MilkmanDan joined
[23:18] *** p6bannerbot sets mode: +v MilkmanDan

[23:25] *** lizmat left
[23:34] *** HaraldJoerg left
[23:40] *** Ven` joined
[23:41] *** p6bannerbot sets mode: +v Ven`

[23:45] *** Ven` left
[23:49] *** SCHAPiE left
[23:53] *** Ven` joined
[23:54] *** p6bannerbot sets mode: +v Ven`

[23:58] *** Ven` left
