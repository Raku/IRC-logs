[00:04] *** Cprossu16 joined
[00:05] *** mcmillhj joined
[00:06] *** p6bannerbot sets mode: +v mcmillhj

[00:08] *** Cprossu16 left
[00:10] *** mcmillhj left
[00:16] *** mcmillhj joined
[00:16] *** p6bannerbot sets mode: +v mcmillhj

[00:20] *** mcmillhj left
[00:21] *** ravioli25 joined
[00:22] *** ravioli25 left
[00:24] *** dant left
[00:25] *** avar left
[00:28] *** cpup left
[00:28] *** Zoffix joined
[00:28] *** p6bannerbot sets mode: +v Zoffix

[00:28] <Zoffix> .

[00:29] *** avar joined
[00:29] *** avar left
[00:29] *** avar joined
[00:29] *** p6bannerbot sets mode: +v avar

[00:29] *** Zoffix left
[00:29] *** p6bannerbot sets mode: +v avar

[00:30] *** mcmillhj joined
[00:31] *** p6bannerbot sets mode: +v mcmillhj

[00:32] <timotimo> m: class IfIAddAName is Hash is Array {method Array{[]}; method Hash {{}}}; use MONKEY-TYPING; augment class Str {method IfIAddAName { IfIAddAName.new }}; my IfIAddAName() $v = "a"

[00:32] <camelia> rakudo-moar 656b0730f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Coercion IfIAddAName(Any) is insufficiently type-like to qualify a variable␤at <tmp>:1␤------> 3 IfIAddAName.new }}; my IfIAddAName() $v7⏏5 = "a"␤    expecting any of:␤        constraint␤»

[00:32] <timotimo> mhm

[00:35] *** sawdey21 joined
[00:35] *** mcmillhj left
[00:36] *** sawdey21 left
[00:44] *** mcmillhj joined
[00:45] *** p6bannerbot sets mode: +v mcmillhj

[00:45] <lookatme_q> o|

[00:49] *** mcmillhj left
[00:55] *** jorik12 joined
[00:59] *** mcmillhj joined
[00:59] *** jorik12 left
[01:00] *** p6bannerbot sets mode: +v mcmillhj

[01:02] *** Dworf joined
[01:04] *** mcmillhj left
[01:05] *** zxcvz left
[01:06] *** Dworf left
[01:07] <vrurg> m: my Str @a = <a b c>; say @a; my Array[Str] $b = <c d e>; say $b

[01:07] <camelia> rakudo-moar 656b0730f: OUTPUT: «[a b c]␤Type check failed in assignment to $b; expected Array[Str] but got List ($("c", "d", "e"))␤  in block <unit> at <tmp> line 1␤␤»

[01:07] <vrurg> Why???

[01:08] <vrurg> m: my Str @a = <a b c>; say @a; my Array[Str] $b = [<c d e>]; say $b

[01:08] <camelia> rakudo-moar 656b0730f: OUTPUT: «[a b c]␤Type check failed in assignment to $b; expected Array[Str] but got Array ($["c", "d", "e"])␤  in block <unit> at <tmp> line 1␤␤»

[01:08] <vrurg> m: my Str @a = <a b c>; say @a; my Array[Str] $b = <c d e>.Array; say $b

[01:08] <camelia> rakudo-moar 656b0730f: OUTPUT: «[a b c]␤Type check failed in assignment to $b; expected Array[Str] but got Array ($["c", "d", "e"])␤  in block <unit> at <tmp> line 1␤␤»

[01:09] <vrurg> Looks like a bug to me.

[01:10] *** mcmillhj joined
[01:10] <lookatme_q> m: my Str @a := <a b c>; say @a.WHAT

[01:10] <camelia> rakudo-moar 656b0730f: OUTPUT: «Type check failed in binding; expected Positional[Str] but got List ($("a", "b", "c"))␤  in block <unit> at <tmp> line 1␤␤»

[01:11] *** p6bannerbot sets mode: +v mcmillhj

[01:11] <vrurg> lookatme_q: with 'my Str @a' it coerces List into Array.

[01:12] <vrurg> m: say Array ~~ Array[Str] 

[01:12] <camelia> rakudo-moar 656b0730f: OUTPUT: «False␤»

[01:12] <MasterDuke> m: my Str @a = <a b c>; say @a; my Array[Str] $b; $b.append(<c d e>.Array); say $b

[01:12] <camelia> rakudo-moar 656b0730f: OUTPUT: «[a b c]␤[c d e]␤»

[01:12] <MasterDuke> m: my Str @a = <a b c>; say @a; my Array[Str] $b; $b.append(<c d e>); say $b

[01:12] <camelia> rakudo-moar 656b0730f: OUTPUT: «[a b c]␤[c d e]␤»

[01:13] <vrurg> m: my Str @a = <a b c>; say @a; my Array[Str] $b; $b.append(1,2,3); say $b

[01:13] <camelia> rakudo-moar 656b0730f: OUTPUT: «[a b c]␤Type check failed in assignment to ; expected Str but got Int (1)␤  in block <unit> at <tmp> line 1␤␤»

[01:13] <vrurg> A workaround, but still I would suspect a bug.

[01:14] *** [particle] left
[01:15] *** mcmillhj left
[01:21] <Xliff> m: class A { }; say A.can('Bool');

[01:21] <camelia> rakudo-moar 656b0730f: OUTPUT: «(Bool)␤»

[01:21] <Xliff> m: class A { }; say A.?Bool;

[01:21] <camelia> rakudo-moar 656b0730f: OUTPUT: «False␤»

[01:21] *** dotdotdot joined
[01:22] *** p6bannerbot sets mode: +v dotdotdot

[01:24] *** mcmillhj joined
[01:24] *** morsik15 joined
[01:24] *** p6bannerbot sets mode: +v mcmillhj

[01:25] <Xliff> m: class A { method blah { say "Blah!"; }; method Bool { False }; }; say A.?Bool; 

[01:25] <camelia> rakudo-moar 656b0730f: OUTPUT: «False␤»

[01:25] <Xliff> ^^ Is that LTA?

[01:25] <Xliff> m: class A { method blah { say "Blah!"; }; method Bool { False }; }; say A.Bool; 

[01:25] <camelia> rakudo-moar 656b0730f: OUTPUT: «False␤»

[01:25] *** zxcvz joined
[01:25] <Xliff> m: class A { method blah { say "Blah!"; }; method Bool { True }; }; say A.Bool; 

[01:25] <camelia> rakudo-moar 656b0730f: OUTPUT: «True␤»

[01:25] <Xliff> m: class A { method blah { say "Blah!"; }; method Bool { True }; }; say A.?Bool; 

[01:25] <camelia> rakudo-moar 656b0730f: OUTPUT: «True␤»

[01:26] <Xliff> m: class A { method blah { say "Blah!"; }; method Bool { True }; }; say A.can('Bool')

[01:26] <camelia> rakudo-moar 656b0730f: OUTPUT: «(Bool Bool)␤»

[01:26] <Xliff> m: class A { method blah { say "Blah!"; }; method Bool { True }; }; say A.can('Bool').gist

[01:26] <camelia> rakudo-moar 656b0730f: OUTPUT: «(Bool Bool)␤»

[01:26] *** p6bannerbot sets mode: +v zxcvz

[01:28] <Xliff> m: class A { method blah { say "Blah!"; }; method Bool { True }; }; say A.can('blah').gist

[01:28] <camelia> rakudo-moar 656b0730f: OUTPUT: «(blah)␤»

[01:28] <Xliff> m: class A { method blah { say "Blah!"; }; method Bool { True }; }; say A.can('blah')

[01:28] <camelia> rakudo-moar 656b0730f: OUTPUT: «(blah)␤»

[01:28] *** zxcvz left
[01:28] *** zxcvz joined
[01:28] *** morsik15 left
[01:28] *** mcmillhj left
[01:29] *** p6bannerbot sets mode: +v zxcvz

[01:32] *** kerframil left
[01:34] *** mcmillhj joined
[01:35] *** p6bannerbot sets mode: +v mcmillhj

[01:37] *** rouking joined
[01:37] *** p6bannerbot sets mode: +v rouking

[01:39] <rouking> Do you folks think it would be a good idea to add some way to put type constraints on array literals?

[01:39] <rouking> The issue I've encountered is that the following doesn't work:

[01:39] *** mcmillhj left
[01:40] <rouking> p6: subset Matrix of Array[Array] where { [==] $_>>.elems }; my Matrix $m1 = [[1, 2], [3, 4]];

[01:40] <camelia> rakudo-moar 656b0730f: OUTPUT: «Type check failed in assignment to $m1; expected Matrix but got Array ($[[1, 2], [3, 4]])␤  in block <unit> at <tmp> line 1␤␤»

[01:41] <rouking> Even minus the `where` clause, it doesn't work, because `[[1, 2], [3, 4]]` is not type-parameterized although one would think it is compatible with `Array[Array]`

[01:42] <rouking> I'm not sure how difficult it would be make this "just work", i.e. check if it's compatible on assigment into a subset type even if the parameterization is not explicit

[01:43] <rouking> Thoughts?

[01:43] <timotimo> you can use .= new(...) for that purpose, maybe that helps?

[01:44] <rouking> p6: subset Matrix of Array[Array] where { [==] $_>>.elems }; my Matrix $m1 .= new: [[1, 2], [3, 4]];

[01:44] <camelia> rakudo-moar 656b0730f: OUTPUT: «You cannot create an instance of this type (Matrix)␤  in block <unit> at <tmp> line 1␤␤»

[01:44] <timotimo> ah, yes, subsets don't do that kind of thing, right

[01:44] <timotimo> p6: subset Matrix of Array[Array] where { [==] $_>>.elems }; my Matrix $m1 is default(Array[Array]) .= new: [[1, 2], [3, 4]]

[01:44] <camelia> rakudo-moar 656b0730f: ( no output )

[01:45] <timotimo> p6: subset Matrix of Array[Array] where { [==] $_>>.elems }; my Matrix $m1 is default(Array[Array]) .= new: [[1, 2], [3, 4]]; say $m1.perl; say $m1 ~~ Matrix

[01:45] <camelia> rakudo-moar 656b0730f: OUTPUT: «Array[Array].new($[1, 2], $[3, 4])␤True␤»

[01:45] <timotimo> the "is default" is not necessary here, you can just put Array[Array].new on the RHS of the = instead

[01:45] <rouking> Ah, that's an interesting way of doing it. Although I feel that's a bit... Less Than Awesome™?

[01:46] <rouking> It's a bit of a leaky abstraction from the subset, if you will

[01:46] <timotimo> we do have shaped arrays, btw

[01:46] <timotimo> but they are slooooow

[01:46] <rouking> "fixing" it might require some systemic change to the type system, though

[01:46] <Xliff> m: class A { method blah { say "Blah!"; }; method c { say ::?CLASS }; }; C.c;

[01:46] <camelia> rakudo-moar 656b0730f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    C used at line 1␤␤»

[01:46] <timotimo> not optimized at all, that's what makes them slow

[01:46] <Xliff> m: class A { method blah { say "Blah!"; }; method c { say ::?CLASS }; }; A.c;

[01:46] <camelia> rakudo-moar 656b0730f: OUTPUT: «(A)␤»

[01:46] <Xliff> m: class A { method blah { say "Blah!"; }; method c { say ::?CLASS; say ::?METHOD; }; }; A.c;

[01:47] <camelia> rakudo-moar 656b0730f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤No such symbol '::?METHOD'␤at <tmp>:1␤------> 3; method c { say ::?CLASS; say ::?METHOD7⏏5; }; }; A.c;␤»

[01:47] <timotimo> probably has to be ::?ROUTINE?

[01:47] *** Maven_ joined
[01:47] <lookatme_q> p6: subset Matrix of Array[Array] where { [==] $_>>.elems }; my Matrix $m1 = Array[Array].new: [[1, 2], [3, 4]];

[01:47] <camelia> rakudo-moar 656b0730f: ( no output )

[01:47] <Xliff> Where are the possible ::? symbols documented?

[01:47] <lookatme_q> p6: subset Matrix of Array[Array] where { [==] $_>>.elems }; my Matrix $m1 = Array[Array].new: [[1, 2], [3, 4]]; dd $m1;

[01:47] <camelia> rakudo-moar 656b0730f: OUTPUT: «Array[Array] $m1 = Array[Array].new($[1, 2], $[3, 4])␤»

[01:47] <Xliff> m: class A { method blah { say "Blah!"; }; method c { say ::?CLASS; say ::?LINE; }; }; A.c;

[01:47] <camelia> rakudo-moar 656b0730f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤No such symbol '::?LINE'␤at <tmp>:1␤------> 3 }; method c { say ::?CLASS; say ::?LINE7⏏5; }; }; A.c;␤»

[01:47] <lookatme_q> p6: subset Matrix of Array[Array] where { [==] $_>>.elems }; my Matrix $m1 = Array[Array].new: [[1, 2], [3, 4], [4, 5, 6]];

[01:47] <camelia> rakudo-moar 656b0730f: OUTPUT: «Type check failed in assignment to $m1; expected Matrix but got Array[Array] (Array[Array].new($[1, 2], $[3, 4]...)␤  in block <unit> at <tmp> line 1␤␤»

[01:48] <Xliff> m: class A { method blah { say "Blah!"; }; method c { say ::?CLASS; say $*METHOD }; }; A.c;

[01:48] <camelia> rakudo-moar 656b0730f: OUTPUT: «(A)␤Dynamic variable $*METHOD not found␤  in method c at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[01:48] *** mcmillhj joined
[01:49] <lookatme_q> m: class A { method blah { say "Blah!"; }; method c { say ::?CLASS; say &?ROUTINE; }; }; A.c;

[01:49] <camelia> rakudo-moar 656b0730f: OUTPUT: «(A)␤c␤»

[01:49] <rouking> Hmmm... I can't even begin to fathom what would be necessary for adding a type parameterization on the fly to an unparameterized class

[01:49] <Xliff> lookatme_q++

[01:49] <timotimo> .^parameterize?

[01:49] *** p6bannerbot sets mode: +v mcmillhj

[01:49] <timotimo> m: say Array.^parameterize([Array]).perl

[01:49] <camelia> rakudo-moar 656b0730f: OUTPUT: «"Can not parameterize Array with [Array,]"␤»

[01:49] <timotimo> m: say Array.^parameterize(Array).perl

[01:49] <camelia> rakudo-moar 656b0730f: OUTPUT: «Array[Array]␤»

[01:49] <timotimo> m: say Array.^parameterize(Str).perl

[01:49] <camelia> rakudo-moar 656b0730f: OUTPUT: «Array[Str]␤»

[01:49] <timotimo> well, that was easy ;) ;)

[01:49] <rouking> Well, dang

[01:50] <rouking> But does it work with actual objects

[01:50] <timotimo> m: say [1, 2, 3].^parameterize(Int).perl

[01:50] <camelia> rakudo-moar 656b0730f: OUTPUT: «Parameter 'arr' of routine 'parameterize' must be a type object of type 'Mu', not an object instance of type 'Array'.  Did you forget a 'multi'?␤  in block <unit> at <tmp> line 1␤␤»

[01:50] <rouking> oof

[01:50] <timotimo> only if you .WHAT, i.e. go from the object back to its type object

[01:50] <timotimo> m: say [1, 2, 3].WHAT.^parameterize(Int).perl

[01:50] <camelia> rakudo-moar 656b0730f: OUTPUT: «Array[Int]␤»

[01:51] <rouking> but that doesn't really solve the problem at hand, does it?

[01:51] *** Maven_ left
[01:51] <rouking> You just end up with a type

[01:51] <vrurg> m: my @a = 1,2,3; @a.WHAT.^parametrize(Int); say @a.perl; say @a.WHAT

[01:51] <camelia> rakudo-moar 656b0730f: OUTPUT: «No such method 'parametrize' for invocant of type 'Perl6::Metamodel::ClassHOW+{<anon>}'. Did you mean 'parameterize'?␤  in block <unit> at <tmp> line 1␤␤»

[01:51] <rouking> I suppose you could simply *attempt* to make a copy into a parameterized type

[01:51] <vrurg> m: my @a = 1,2,3; @a.WHAT.^ parameterize(Int); say @a.perl; say @a.WHAT

[01:52] <camelia> rakudo-moar 656b0730f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed postfix call␤at <tmp>:1␤------> 3my @a = 1,2,3; @a.WHAT.^7⏏5 parameterize(Int); say @a.perl; say @a.␤»

[01:52] <rouking> can't have space, there

[01:52] <vrurg> m: my @a = 1,2,3; @a.WHAT.^parameterize(Int); say @a.perl; say @a.WHAT

[01:52] <camelia> rakudo-moar 656b0730f: OUTPUT: «[1, 2, 3]␤(Array)␤»

[01:53] <vrurg> Thanks, overlooked it. So, as expected, the array type is not changed through .WHAT call.

[01:53] <rouking> Yeah, and that's probably a good thing

[01:53] *** mcmillhj left
[01:53] <vrurg> Perhaps.

[01:53] *** DoctorMir joined
[01:54] * vrurg is dreaming of a singe routine which would try coercing any value into any type, as operator '=' does...

[01:54] *** p6bannerbot sets mode: +v DoctorMir

[01:54] <vrurg> I'm tired permanently fixing attribute coercion in my module...

[01:55] <rouking> Well, I could imagine some code around `subset` which first sees if the types match, then attempts to call .new on the wanted type, passing in the given type

[01:55] <rouking> or rather, the given value.

[01:55] <rouking> Similar to the caller-side solution timotimo gave

[01:56] <rouking> Not sure about the performance impact, though

[01:58] <vrurg> Which is critical because I'm working through Proxy which is pretty slow is at was told.

[02:02] *** lkoranda3 joined
[02:02] *** lkoranda3 left
[02:03] <timotimo> i'm going to bed Real Soon Now, but please feel free to review my next blog post; write your findings/comments here on the channel or privmsg/query me here on freenode (you probably have to be registered with nickserv to privmsg me though?) or find my email address on the mailing list or git log or whatever: https://wakelift.de/p/31a96e34-887c-468e-8b5d-f8c4d448ec1f/

[02:03] <timotimo> thank y'all and good night!

[02:03] <timotimo> watch out: it's a monster of a post, about 3k words

[02:04] <timotimo> 3.4k

[02:05] <lookatme_q> m: my $a = 1,2,3; say $a.WHAT

[02:05] <camelia> rakudo-moar 656b0730f: OUTPUT: «WARNINGS for <tmp>:␤(Int)␤Useless use of constant integer 2 in sink context (lines 1, 1)␤Useless use of constant integer 3 in sink context (lines 1, 1)␤»

[02:05] *** mcmillhj joined
[02:06] <timotimo> m: @(my $a) = 1, 2, 3; say $a.perl; say $a.^name

[02:06] <camelia> rakudo-moar 656b0730f: OUTPUT: «Cannot modify an immutable Any ((Any))␤  in block <unit> at <tmp> line 1␤␤»

[02:06] <lookatme_q> m: my $a := 1,2,3; say $a.WHAT

[02:06] <camelia> rakudo-moar 656b0730f: OUTPUT: «(List)␤»

[02:06] *** p6bannerbot sets mode: +v mcmillhj

[02:06] <lookatme_q> Many things can not understand :)

[02:10] *** mcmillhj left
[02:12] *** [particle] joined
[02:12] *** p6bannerbot sets mode: +v [particle]

[02:15] *** inbioz joined
[02:16] *** p6bannerbot sets mode: +v inbioz

[02:19] *** inbioz left
[02:20] *** inbioz joined
[02:20] *** [particle] left
[02:20] *** p6bannerbot sets mode: +v inbioz

[02:23] *** [particle] joined
[02:23] *** p6bannerbot sets mode: +v [particle]

[02:25] *** mcmillhj joined
[02:25] *** angelds joined
[02:25] *** p6bannerbot sets mode: +v mcmillhj

[02:26] *** p6bannerbot sets mode: +v angelds

[02:30] *** mcmillhj left
[02:31] *** [particle] left
[02:39] *** inbioz_ joined
[02:40] *** p6bannerbot sets mode: +v inbioz_

[02:43] *** mcmillhj joined
[02:43] <buggable> New CPAN upload: AttrX-Mooish-v0.4.3.tar.gz by VRURG http://modules.perl6.org/dist/AttrX::Mooish:cpan:VRURG

[02:43] *** inbioz left
[02:43] *** p6bannerbot sets mode: +v mcmillhj

[02:48] *** mcmillhj left
[02:53] *** mcmillhj joined
[02:54] *** p6bannerbot sets mode: +v mcmillhj

[02:58] *** mcmillhj left
[03:00] *** inbioz_ left
[03:04] *** mcmillhj joined
[03:05] *** p6bannerbot sets mode: +v mcmillhj

[03:09] *** mcmillhj left
[03:13] *** [particle] joined
[03:14] *** p6bannerbot sets mode: +v [particle]

[03:16] *** mcmillhj joined
[03:17] *** p6bannerbot sets mode: +v mcmillhj

[03:21] *** mcmillhj left
[03:26] *** [particle] left
[03:32] *** mcmillhj joined
[03:33] *** p6bannerbot sets mode: +v mcmillhj

[03:37] *** mcmillhj left
[03:43] *** mcmillhj joined
[03:44] *** p6bannerbot sets mode: +v mcmillhj

[03:44] *** [particle] joined
[03:45] *** p6bannerbot sets mode: +v [particle]

[03:46] *** fake_space_whale left
[03:48] *** mcmillhj left
[03:48] *** [particle] left
[03:56] *** [particle] joined
[03:57] *** lichtkind joined
[03:57] *** p6bannerbot sets mode: +v [particle]

[03:58] *** p6bannerbot sets mode: +v lichtkind

[03:59] *** [particle] left
[04:00] *** mcmillhj joined
[04:00] *** p6bannerbot sets mode: +v mcmillhj

[04:01] *** [particle] joined
[04:01] *** p6bannerbot sets mode: +v [particle]

[04:05] *** mcmillhj left
[04:09] *** fake_space_whale joined
[04:10] *** p6bannerbot sets mode: +v fake_space_whale

[04:14] *** mcmillhj joined
[04:15] *** p6bannerbot sets mode: +v mcmillhj

[04:19] *** mcmillhj left
[04:19] *** [particle] left
[04:26] *** molaf joined
[04:26] *** p6bannerbot sets mode: +v molaf

[04:30] *** mcmillhj joined
[04:31] *** p6bannerbot sets mode: +v mcmillhj

[04:31] *** cgfbee left
[04:35] *** mcmillhj left
[04:36] *** cpup joined
[04:37] *** p6bannerbot sets mode: +v cpup

[04:37] *** cgfbee joined
[04:38] *** p6bannerbot sets mode: +v cgfbee

[04:47] *** lichtkind left
[04:48] *** itaipu left
[04:49] *** mcmillhj joined
[04:50] *** p6bannerbot sets mode: +v mcmillhj

[04:50] *** Ven` joined
[04:51] *** p6bannerbot sets mode: +v Ven`

[04:52] <AlexDaniel`> squashable6: next

[04:52] <squashable6> AlexDaniel`, ⚠🍕 Next SQUASHathon in ≈5 hours (2018-09-01 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[04:52] <AlexDaniel`> :O

[04:53] <AlexDaniel`> That one kind of slipped through the cracks!

[04:54] *** mcmillhj left
[04:54] *** Xliff left
[04:55] *** Ven` left
[04:56] <squashable6> Webhook for perl6/doc is now active! Responsive is better than fast.

[04:56] *** [particle] joined
[04:57] *** p6bannerbot sets mode: +v [particle]

[04:57] <AlexDaniel`> .tell jmerelo it's SQUASHathon time!!! :)

[04:57] <yoleaux> AlexDaniel`: I'll pass your message to jmerelo.

[05:07] *** mcmillhj joined
[05:08] *** p6bannerbot sets mode: +v mcmillhj

[05:09] *** robertle left
[05:12] *** molaf left
[05:12] *** mcmillhj left
[05:13] *** molaf joined
[05:14] *** p6bannerbot sets mode: +v molaf

[05:14] *** troys left
[05:18] *** molaf left
[05:20] *** AlexDaniel joined
[05:20] *** p6bannerbot sets mode: +v AlexDaniel

[05:20] *** spycrab0 left
[05:27] *** mcmillhj joined
[05:28] *** p6bannerbot sets mode: +v mcmillhj

[05:32] *** mcmillhj left
[05:33] *** eliasr left
[05:38] *** vrurg left
[05:41] *** mcmillhj joined
[05:42] *** p6bannerbot sets mode: +v mcmillhj

[05:45] *** lichtkind joined
[05:46] *** p6bannerbot sets mode: +v lichtkind

[05:46] *** mcmillhj left
[05:51] *** lichtkind left
[05:52] *** fake_space_whale left
[05:53] *** mcmillhj joined
[05:54] *** p6bannerbot sets mode: +v mcmillhj

[05:58] *** mcmillhj left
[05:59] *** lichtkind joined
[05:59] *** p6bannerbot sets mode: +v lichtkind

[06:05] *** mcmillhj joined
[06:06] *** p6bannerbot sets mode: +v mcmillhj

[06:10] *** EdSaperia2 joined
[06:10] *** lichtkind left
[06:10] *** mcmillhj left
[06:15] *** EdSaperia2 left
[06:18] *** mcmillhj joined
[06:19] *** p6bannerbot sets mode: +v mcmillhj

[06:23] *** mcmillhj left
[06:25] *** lizmat left
[06:25] *** _nipc joined
[06:26] *** lichtkind joined
[06:26] *** p6bannerbot sets mode: +v _nipc

[06:26] *** p6bannerbot sets mode: +v lichtkind

[06:37] *** telex left
[06:38] *** mcmillhj joined
[06:38] *** _nipc left
[06:38] *** telex joined
[06:39] *** p6bannerbot sets mode: +v mcmillhj

[06:39] *** p6bannerbot sets mode: +v telex

[06:41] *** dct joined
[06:41] *** p6bannerbot sets mode: +v dct

[06:41] *** wodwos joined
[06:42] *** p6bannerbot sets mode: +v wodwos

[06:43] *** mcmillhj left
[06:43] *** lichtkind left
[06:44] *** abraxxa joined
[06:45] *** p6bannerbot sets mode: +v abraxxa

[06:51] *** mcmillhj joined
[06:52] *** p6bannerbot sets mode: +v mcmillhj

[06:55] *** domidumont joined
[06:55] *** p6bannerbot sets mode: +v domidumont

[06:56] *** lichtkind joined
[06:56] *** rindolf joined
[06:56] *** mcmillhj left
[06:56] *** p6bannerbot sets mode: +v lichtkind

[06:57] *** p6bannerbot sets mode: +v rindolf

[06:58] *** dct left
[06:58] *** lichtkind left
[07:01] *** robertle joined
[07:02] *** p6bannerbot sets mode: +v robertle

[07:06] *** mcmillhj joined
[07:07] *** p6bannerbot sets mode: +v mcmillhj

[07:11] *** mcmillhj left
[07:12] *** mozzarella5 joined
[07:17] *** mozzarella5 left
[07:20] *** evalable6 joined
[07:20] *** p6bannerbot sets mode: +v evalable6

[07:27] *** mcmillhj joined
[07:27] *** scimon joined
[07:28] *** p6bannerbot sets mode: +v mcmillhj

[07:28] *** p6bannerbot sets mode: +v scimon

[07:29] *** saki joined
[07:29] *** saki left
[07:32] *** mcmillhj left
[07:33] *** cgfbee left
[07:33] *** lichtkind joined
[07:34] *** p6bannerbot sets mode: +v lichtkind

[07:37] *** saki joined
[07:38] *** saki left
[07:38] *** mcmillhj joined
[07:39] *** p6bannerbot sets mode: +v mcmillhj

[07:42] *** lichtkind left
[07:43] *** cpage left
[07:43] *** SyrupThinker left
[07:43] *** mcmillhj left
[07:44] *** jlouis joined
[07:44] *** p6bannerbot sets mode: +v jlouis

[07:44] <jlouis> hello

[07:44] <jlouis> p6: say 3;

[07:44] <camelia> rakudo-moar 656b0730f: OUTPUT: «3␤»

[07:44] *** jlouis left
[07:45] *** cpage joined
[07:45] <AlexDaniel> that was quick

[07:46] *** p6bannerbot sets mode: +v cpage

[07:47] *** saki joined
[07:47] *** saki left
[07:49] *** cgfbee joined
[07:50] *** p6bannerbot sets mode: +v cgfbee

[07:53] *** mcmillhj joined
[07:53] *** Xliff joined
[07:53] *** p6bannerbot sets mode: +v mcmillhj

[07:54] *** p6bannerbot sets mode: +v Xliff

[07:54] <Xliff> \o

[07:54] <Xliff> Is there a way I can define a class inside of a Role?

[07:54] <Xliff> I get this when I do:

[07:54] <Xliff> Cannot declare our-scoped class inside of a role

[07:54] <Xliff> (the scope inside of a role is generic, so there is no unambiguous

[07:54] <Xliff> package to install the symbol in)

[07:55] <Xliff> I would use an anonymous class, but I want to use when to isolate it. If it is possible to identify an anonymous class using "when" then how would that be possible?

[07:55] *** dct joined
[07:55] *** p6bannerbot sets mode: +v dct

[07:56] <Xliff> m: my $a = class { method bleah { say "Bleah!"; } }; say $a.^name;

[07:56] <camelia> rakudo-moar 656b0730f: OUTPUT: «<anon|1>␤»

[07:56] <Xliff> m: my $a = class { method bleah { say "Bleah!"; } }; say $a.WHAT;

[07:56] <camelia> rakudo-moar 656b0730f: OUTPUT: «(<anon|1>)␤»

[07:57] <Xliff> m: my $a = class { method bleah { say "Bleah!"; } }; given $a.^name { when Str { say "WHAT?" }; default { say "DUR!" }; };

[07:57] <camelia> rakudo-moar 656b0730f: OUTPUT: «WHAT?␤»

[07:57] <Xliff> m: my $a = class { method bleah { say "Bleah!"; } }; given $a.^name { when Str { .say }; default { say "DUR!" }; };

[07:57] <camelia> rakudo-moar 656b0730f: OUTPUT: «<anon|1>␤»

[07:58] *** mcmillhj left
[07:58] <Xliff> m: my $a = class { method bleah { say "Bleah!"; } }; given $a.^name { when Str { when /anon/ { .say }; default { "wtf"; }; }; }; default { say "DUR!" }; };

[07:58] <camelia> rakudo-moar 656b0730f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unexpected closing bracket␤at <tmp>:1␤------> 3"wtf"; }; }; }; default { say "DUR!" }; 7⏏5};␤»

[07:58] <Xliff> m: my $a = class { method bleah { say "Bleah!"; } }; given $a.^name { when Str { when /anon/ { .say }; default { "wtf"; }; };  default { say "DUR!" }; };

[07:58] <camelia> rakudo-moar 656b0730f: OUTPUT: «<anon|1>␤»

[07:58] <Xliff> m: my $a = class { method bleah { say "Bleah!"; } }; given $a.^name { when Str { when /<anon/ { .say }; default { "wtf"; }; };  default { say "DUR!" }; };

[07:58] <camelia> rakudo-moar 656b0730f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in metachar:sym<assert>; couldn't find final '>' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3 given $a.^name { when Str { when /<anon7⏏5/ { .say }; defa…»

[07:59] <Xliff> m: my $a = class { method bleah { say "Bleah!"; } }; given $a.^name { when Str { when / '<anon' / { .say }; default { "wtf"; }; };  default { say "DUR!" }; };

[07:59] <camelia> rakudo-moar 656b0730f: OUTPUT: «<anon|1>␤»

[08:04] *** zakharyas joined
[08:05] *** p6bannerbot sets mode: +v zakharyas

[08:05] *** sena_kun joined
[08:06] *** p6bannerbot sets mode: +v sena_kun

[08:11] *** mcmillhj joined
[08:12] *** p6bannerbot sets mode: +v mcmillhj

[08:15] *** stmuk_ joined
[08:16] *** mcmillhj left
[08:16] *** p6bannerbot sets mode: +v stmuk_

[08:17] *** stmuk left
[08:20] *** saki joined
[08:20] *** saki left
[08:27] *** mcmillhj joined
[08:28] *** p6bannerbot sets mode: +v mcmillhj

[08:32] *** mcmillhj left
[08:34] *** saki joined
[08:35] *** p6bannerbot sets mode: +v saki

[08:47] *** mcmillhj joined
[08:47] *** pmurias joined
[08:48] *** p6bannerbot sets mode: +v mcmillhj

[08:48] *** p6bannerbot sets mode: +v pmurias

[08:52] *** mcmillhj left
[08:57] *** itaipu joined
[08:57] *** p6bannerbot sets mode: +v itaipu

[09:05] *** mcmillhj joined
[09:05] *** p6bannerbot sets mode: +v mcmillhj

[09:10] *** mcmillhj left
[09:16] *** mcmillhj joined
[09:17] *** p6bannerbot sets mode: +v mcmillhj

[09:21] *** mcmillhj left
[09:30] <pmurias> hmm, what is a good name for a base class for all the non-resizable P6opaque reprs

[09:30] *** Nothing4You19 joined
[09:31] *** dct left
[09:31] <pmurias> for things like P6int, CPointer etc that are fixed size and don't support adding new attributes

[09:31] <pmurias> ?

[09:33] *** mcmillhj joined
[09:34] *** p6bannerbot sets mode: +v mcmillhj

[09:35] *** SyrupThinker joined
[09:35] *** p6bannerbot sets mode: +v SyrupThinker

[09:35] *** lizmat joined
[09:36] *** p6bannerbot sets mode: +v lizmat

[09:38] *** mcmillhj left
[09:38] *** pecastro joined
[09:39] *** p6bannerbot sets mode: +v pecastro

[09:40] *** Nothing4You19 left
[09:40] <jnthn> pmurias: There's only one (P6Opaque) that supports that anyway

[09:40] <jnthn> There's no name for it that already exists

[09:41] <jnthn> Though if going with the op name, NonMixinable or something works

[09:43] <pmurias> jnthn: I'm thinking about FixedSizeObject ;)

[09:46] <pmurias> it's a big distinction on the truffle backend because the P6opaque objects are being implemented with framework provided truffle magic (Self style object shapes) while other objects are regular old school java ones like on the jvm backend

[09:47] *** mcmillhj joined
[09:48] *** p6bannerbot sets mode: +v mcmillhj

[09:52] *** mcmillhj left
[09:57] *** mcmillhj joined
[09:58] *** p6bannerbot sets mode: +v mcmillhj

[10:02] *** mcmillhj left
[10:11] *** mcmillhj joined
[10:12] *** p6bannerbot sets mode: +v mcmillhj

[10:16] *** mcmillhj left
[10:18] *** Trashlord3 joined
[10:25] *** mcmillhj joined
[10:25] *** Trashlord3 left
[10:25] *** p6bannerbot sets mode: +v mcmillhj

[10:30] *** mcmillhj left
[10:34] *** saki left
[10:36] *** saki joined
[10:36] *** p6bannerbot sets mode: +v saki

[10:36] *** saki left
[10:42] *** mcmillhj joined
[10:43] *** p6bannerbot sets mode: +v mcmillhj

[10:47] *** mcmillhj left
[10:51] *** tyil[m]1 left
[10:51] *** Matthew[m] left
[10:51] *** EuAndreh[m] left
[10:51] *** tyil[m] left
[10:51] *** wictory[m] left
[10:52] *** mirlur[m] left
[10:52] *** unclechu[m] left
[10:52] *** Garland_g[m] left
[10:52] *** MitarashiDango[m left
[10:52] *** AlexDaniel` left
[10:52] *** CIAvash[m] left
[10:52] *** lance_w[m] left
[10:52] *** ilmari_ left
[10:52] *** AlexDaniel-old[m left
[10:56] <El_Che> releasable6: status

[10:56] <releasable6> El_Che, Next release will happen when it's ready. 0 blockers. 480 out of 500 commits logged

[10:56] <releasable6> El_Che, Details: https://gist.github.com/60914c543f1ff5bd57a8e3466d56f3b9

[10:57] <AlexDaniel> El_Che: waiting for moarvm release, expected tomorrow-ish

[10:59] *** MitarashiDango[m joined
[10:59] *** p6bannerbot sets mode: +v MitarashiDango[m

[11:02] *** mcmillhj joined
[11:03] <lizmat> weekly: https://opensource.com/article/18/8/containers-perl-6

[11:03] <notable6> lizmat, Noted!

[11:03] *** p6bannerbot sets mode: +v mcmillhj

[11:04] <El_Che> AlexDaniel: big changes?

[11:04] <AlexDaniel> El_Che: well, it's two months worth of changes, so yes

[11:05] <El_Che> besides that

[11:05] <El_Che> something that needed time to be settled, eg

[11:06] *** sena_kun left
[11:07] *** sena_kun joined
[11:07] *** mcmillhj left
[11:08] *** sena_kun left
[11:09] <AlexDaniel> El_Che: not really, the last few days samcv was trying to manage with the huge changelog (there're some new tools & possibly automation coming)

[11:12] *** stmuk joined
[11:12] *** sena_kun joined
[11:12] *** angelds left
[11:12] *** p6bannerbot sets mode: +v stmuk

[11:12] *** p6bannerbot sets mode: +v sena_kun

[11:12] *** angelds joined
[11:13] <AlexDaniel> El_Che: fwiw, with the rate of changes in moar/rakudo it is likely that in the future the deadlines won't be any stricter

[11:13] *** p6bannerbot sets mode: +v angelds

[11:14] <AlexDaniel> El_Che: so the last release we had to skip because all of the perf improvements needed a bit more time to stabilize, and there are already postrelease branches for after 2018.08

[11:14] *** stmuk_ left
[11:15] <AlexDaniel> with some relatively massive changes :)

[11:17] *** stmuk left
[11:18] <AlexDaniel> I think someone even proposed to do releases once every two months

[11:19] <AlexDaniel> I'm not convinced that it is going to be better that way, even though I'd need to do less work :)

[11:19] *** stmuk joined
[11:20] *** p6bannerbot sets mode: +v stmuk

[11:21] <AlexDaniel> squashable6: status

[11:21] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in 2 days and ≈0 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[11:22] *** mcmillhj joined
[11:23] *** mcmillhj left
[11:29] *** AlexDaniel-old[m joined
[11:29] *** p6bannerbot sets mode: +v AlexDaniel-old[m

[11:29] *** mirlur[m] joined
[11:29] *** CIAvash[m] joined
[11:29] *** unclechu[m] joined
[11:29] *** p6bannerbot sets mode: +v mirlur[m]

[11:29] *** p6bannerbot sets mode: +v CIAvash[m]

[11:29] *** p6bannerbot sets mode: +v unclechu[m]

[11:29] *** tyil[m]1 joined
[11:29] *** lance_w[m] joined
[11:29] *** wictory[m] joined
[11:29] *** tyil[m] joined
[11:29] *** p6bannerbot sets mode: +v tyil[m]1

[11:29] *** EuAndreh[m] joined
[11:29] *** p6bannerbot sets mode: +v lance_w[m]

[11:29] *** p6bannerbot sets mode: +v wictory[m]

[11:29] *** p6bannerbot sets mode: +v tyil[m]

[11:29] *** p6bannerbot sets mode: +v EuAndreh[m]

[11:29] *** Garland_g[m] joined
[11:29] *** p6bannerbot sets mode: +v Garland_g[m]

[11:32] *** robertle left
[11:34] *** robertle joined
[11:35] *** p6bannerbot sets mode: +v robertle

[11:35] *** mcmillhj joined
[11:35] *** saki joined
[11:35] *** saki left
[11:36] *** p6bannerbot sets mode: +v mcmillhj

[11:38] *** zakharyas left
[11:39] *** saki joined
[11:39] *** saki left
[11:40] *** mcmillhj left
[11:48] *** mcmillhj joined
[11:49] *** p6bannerbot sets mode: +v mcmillhj

[11:52] *** saki joined
[11:53] *** mcmillhj left
[11:53] *** p6bannerbot sets mode: +v saki

[11:54] *** robertle left
[11:56] *** sh4nks5 joined
[11:56] *** sh4nks5 left
[11:59] *** abraxxa left
[12:02] *** mcmillhj joined
[12:02] *** p6bannerbot sets mode: +v mcmillhj

[12:07] *** mcmillhj left
[12:12] *** ilmari left
[12:16] *** mcmillhj joined
[12:17] *** p6bannerbot sets mode: +v mcmillhj

[12:20] *** molaf joined
[12:21] *** p6bannerbot sets mode: +v molaf

[12:21] *** mcmillhj left
[12:26] *** ilmari joined
[12:26] *** ilmari left
[12:26] *** ilmari joined
[12:26] *** p6bannerbot sets mode: +v ilmari

[12:27] *** p6bannerbot sets mode: +v ilmari

[12:27] *** robertle joined
[12:27] *** p6bannerbot sets mode: +v robertle

[12:29] *** mcmillhj joined
[12:30] *** p6bannerbot sets mode: +v mcmillhj

[12:34] *** mcmillhj left
[12:37] *** angelds left
[12:40] *** mcmillhj joined
[12:41] *** p6bannerbot sets mode: +v mcmillhj

[12:44] *** AlexDaniel left
[12:49] *** Garland_g[m] left
[12:49] *** wictory[m] left
[12:49] *** tyil[m]1 left
[12:49] *** CIAvash[m] left
[12:49] *** AlexDaniel-old[m left
[12:49] *** mirlur[m] left
[12:49] *** unclechu[m] left
[12:49] *** tyil[m] left
[12:49] *** EuAndreh[m] left
[12:49] *** MitarashiDango[m left
[12:49] *** lance_w[m] left
[12:52] *** notable6 left
[12:52] *** kerframil joined
[12:52] *** p6bannerbot sets mode: +v kerframil

[12:53] *** reportable6 left
[12:57] *** MitarashiDango[m joined
[12:57] *** p6bannerbot sets mode: +v MitarashiDango[m

[12:59] *** AlexDaniel joined
[12:59] *** p6bannerbot sets mode: +v AlexDaniel

[13:09] *** ktr16 joined
[13:09] *** ktr16 left
[13:14] *** robertle left
[13:14] *** zakharyas joined
[13:15] *** p6bannerbot sets mode: +v zakharyas

[13:16] *** robertle joined
[13:17] *** p6bannerbot sets mode: +v robertle

[13:17] *** harrison joined
[13:18] *** p6bannerbot sets mode: +v harrison

[13:18] *** Praise left
[13:23] *** xfil joined
[13:23] *** vrurg joined
[13:23] *** xfil left
[13:24] *** p6bannerbot sets mode: +v vrurg

[13:27] *** AlexDaniel-old[m joined
[13:27] *** AlexDaniel` joined
[13:27] *** p6bannerbot sets mode: +v AlexDaniel-old[m

[13:27] *** p6bannerbot sets mode: +v AlexDaniel`

[13:27] *** tyil[m] joined
[13:27] *** unclechu[m] joined
[13:27] *** mirlur[m] joined
[13:27] *** CIAvash[m] joined
[13:27] *** p6bannerbot sets mode: +v CIAvash[m]

[13:27] *** p6bannerbot sets mode: +v unclechu[m]

[13:27] *** p6bannerbot sets mode: +v tyil[m]

[13:27] *** p6bannerbot sets mode: +v mirlur[m]

[13:27] *** wictory[m] joined
[13:27] *** Matthew[m] joined
[13:27] *** p6bannerbot sets mode: +v wictory[m]

[13:27] *** p6bannerbot sets mode: +v Matthew[m]

[13:27] *** ilmari_ joined
[13:27] *** EuAndreh[m] joined
[13:27] *** lance_w[m] joined
[13:27] *** tyil[m]1 joined
[13:27] *** p6bannerbot sets mode: +v ilmari_

[13:27] *** p6bannerbot sets mode: +v tyil[m]1

[13:27] *** p6bannerbot sets mode: +v lance_w[m]

[13:27] *** p6bannerbot sets mode: +v EuAndreh[m]

[13:27] *** Garland_g[m] joined
[13:27] *** p6bannerbot sets mode: +v Garland_g[m]

[13:29] *** AlexDaniel left
[13:47] *** Hor|zon left
[14:02] *** atweiden-air joined
[14:02] *** robertle left
[14:03] *** p6bannerbot sets mode: +v atweiden-air

[14:03] <atweiden-air> has anyone had any luck cross-compiling nqp for aarch64?

[14:05] *** AlexDaniel joined
[14:05] *** p6bannerbot sets mode: +v AlexDaniel

[14:10] *** zxcvz left
[14:18] *** mcmillhj left
[14:25] *** mcmillhj joined
[14:26] *** Kaiepi left
[14:26] *** p6bannerbot sets mode: +v mcmillhj

[14:34] *** Maven_ joined
[14:35] *** robertle joined
[14:35] *** p6bannerbot sets mode: +v robertle

[14:37] *** Maven_ left
[14:40] *** harrison left
[14:40] *** kerframil left
[14:43] *** cgfbee left
[14:45] *** st_elmo joined
[14:46] *** p6bannerbot sets mode: +v st_elmo

[14:48] <Geth> ¦ doc: MorayJ self-assigned Revise phasers page https://github.com/perl6/doc/issues/2268

[14:48] <squashable6> 🍕🍕🍕  First contribution by MorayJ++! ♥

[14:49] <Geth> ¦ doc: MorayJ self-unassigned Revise phasers page https://github.com/perl6/doc/issues/2268

[14:51] <pmurias> AlexDaniel: don't the releases tend to get more traumatic the rarer they are?

[14:52] <AlexDaniel> pmurias: yes, overall it is better to release often

[14:53] <AlexDaniel> pmurias: but when it comes to things *I* need to do, releasing less often means a bit less stuff to do

[14:56] *** jjmerelo joined
[14:56] *** p6bannerbot sets mode: +v jjmerelo

[14:57] <jjmerelo> Checking in...

[14:57] <jjmerelo> squashable6: status

[14:57] <squashable6> jjmerelo, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈21 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[14:57] <squashable6> jjmerelo, Log and stats: https://gist.github.com/d7787d57ceeed20bb0ab21e04e43301c

[14:57] <AlexDaniel> jjmerelo: CHECK CHECK CHECK CHECK

[14:57] <AlexDaniel> CHECK

[14:58] <jjmerelo> OK, I'll see what I can do.

[15:02] *** uzl joined
[15:02] *** p6bannerbot sets mode: +v uzl

[15:04] *** molaf left
[15:04] *** scimon left
[15:05] *** Alchemy joined
[15:05] <jdv79> can anyone golf this better?: https://nopaste.xyz/?3f0630a4a4dfb467#JtgBpz0kYT/NV7nVrwlwzljjTD+dDI0HhyH71e/5CPo=

[15:06] *** fake_space_whale joined
[15:06] <Geth> ¦ doc: JJ self-assigned .classify docs lack `:as` and `:into` args in shown signatures https://github.com/perl6/doc/issues/2175

[15:06] <squashable6> 🍕🍕🍕  First contribution by JJ++! ♥

[15:06] <AlexDaniel>  jdv79: what about -ne or similar?

[15:06] *** p6bannerbot sets mode: +v Alchemy

[15:06] <uzl> Hello #perl6 

[15:06] *** p6bannerbot sets mode: +v fake_space_whale

[15:06] <uzl> I'm using Rakudo Star version 2018.04.1 and would like to get 2018.06. Do I need to download that version and recompile it again?

[15:07] <AlexDaniel> jdv79: and what kind of a golf you need? :) maybe +… is shorter than ….elems but is that what you are looking for?

[15:07] <jdv79> just a golf that works 

[15:08] <jdv79> its a pretty simple task.  just curious.

[15:08] *** daemon left
[15:10] *** lizmat left
[15:10] <AlexDaniel> jdv79: git shortlog -nse

[15:10] *** Alchemy is now known as daemon

[15:11] *** daemon is now known as Guest15363

[15:11] *** Guest15363 left
[15:11] *** Guest15363 joined
[15:11] *** adams.freenode.net sets mode: +v Guest15363

[15:11] *** p6bannerbot sets mode: +v Guest15363

[15:11] <AlexDaniel> jdv79: doesn't count as a golf right? :P

[15:14] *** silug left
[15:15] <timotimo> jdv79: i'm not sure in what way it doesn't work, or is that not the question?

[15:16] *** onur4 joined
[15:17] <jdv79> AlexDaniel: no

[15:17] *** onur4 left
[15:17] <AlexDaniel> jdv79: perl6 -e 'lines.grep({/^Author:/}).Bag.pairs.perl.say'

[15:17] <jdv79> timotimo: it works

[15:17] <jdv79> just wondering about golfing it.  that's all.

[15:17] <timotimo> oh, ok

[15:17] <timotimo> i thought "a golf that works" meant the code you had didn't work yet

[15:17] <jdv79> i guess that is confusing

[15:18] <AlexDaniel> jdv79: I mean, full command would be like git log --stat | perl6 -e 'lines.grep({/^Author:/}).Bag.sort(*.value).perl.say'

[15:19] <jdv79> yeah.  cool.

[15:19] <jdv79> is there a terse way to print that in line oriented fashion?

[15:20] <timotimo> i like ".say for"

[15:20] <AlexDaniel> golf-like way or proper way? :)

[15:20] <AlexDaniel> ».say should work during this minute

[15:20] <jdv79> golf of course

[15:21] <AlexDaniel> m: <a b c>».say # don't do that in real code though

[15:21] <camelia> rakudo-moar 607ac1541: OUTPUT: «a␤b␤c␤»

[15:24] <squashable6> 🍕 JJ++ wrote a comment on “.classify docs lack `:as…”: https://github.com/perl6/doc/issues/2175#issuecomment-417699130

[15:25] <jdv79> just trying to illustrate stuff for a jr colleague and trying to remember p6 stuffs.

[15:25] <jdv79> thansk

[15:25] <AlexDaniel> lines.grep({/^A/}).Bag.invert.sort».say

[15:25] *** zakharyas left
[15:25] *** atweiden-air left
[15:26] <AlexDaniel> lines.grep(/^A/).Bag.invert.sort».say

[15:26] <jdv79> nice

[15:27] *** silug joined
[15:27] <AlexDaniel> Bag(grep /^A/,lines).invert.sort».say

[15:27] *** p6bannerbot sets mode: +v silug

[15:27] <AlexDaniel> something like that

[15:28] <AlexDaniel> https://github.com/AlexDaniel/6lang-golf-cheatsheet

[15:29] <jdv79> nice

[15:29] *** domidumont left
[15:33] *** troys joined
[15:33] *** mcmillhj left
[15:34] *** p6bannerbot sets mode: +v troys

[15:38] *** mcmillhj joined
[15:39] *** p6bannerbot sets mode: +v mcmillhj

[15:41] <Geth> ¦ doc: fb2dd7aec6 | (JJ Merelo)++ | doc/Type/List.pod6

[15:41] <Geth> ¦ doc: Changes the signature of the methods

[15:41] <Geth> ¦ doc: 

[15:41] <Geth> ¦ doc: Corresponding to the real one. This closes #2175.

[15:41] <Geth> ¦ doc: 

[15:41] <synopsebot> Link: https://doc.perl6.org/type/List

[15:41] <Geth> ¦ doc: The problem is that I'm not sure if `List` is the correct place for this. They are defined in `Any` so in principle they could be applied anywhere. Besides, two of them are subs, not methods.

[15:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fb2dd7aec6

[15:41] <squashable6> 🍕 JJ++ closed issue “.classify docs lack `:as…”: https://github.com/perl6/doc/issues/2175

[15:42] <Geth> ¦ doc: uzluisf++ created pull request #2287: Add minor fixes

[15:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2287

[15:42] <squashable6> 🍕 uzluisf++ opened pull request “Add minor fixes”: https://github.com/perl6/doc/pull/2287

[15:42] <squashable6> 🍕🍕🍕  First contribution by uzluisf++! ♥

[15:42] *** silug left
[15:43] <squashable6> 🍕 JJ++ submitted a review on pull request “Add minor fixes”: https://github.com/perl6/doc/pull/2287#pullrequestreview-151450393

[15:44] <uzl> Is there any reason why the double pointy block is not mentioned here as way to edit values in place? link: https://docs.perl6.org/language/hashmap#In_place_editing_of_values

[15:45] *** cjkinni left
[15:45] *** cjkinni joined
[15:46] *** p6bannerbot sets mode: +v cjkinni

[15:48] <jjmerelo> @uzl probably not.

[15:51] *** uzl left
[15:52] *** Guest15363 is now known as daemon

[15:54] *** silug joined
[15:54] *** p6bannerbot sets mode: +v silug

[15:55] <Geth> ¦ doc: 4ea0a881de | (Luis F. Uceta)++ | doc/Language/hashmap.pod6

[15:55] <Geth> ¦ doc: Add minor fixes

[15:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4ea0a881de

[15:55] <Geth> ¦ doc: 863d28b77d | (Luis F. Uceta)++ | doc/Language/hashmap.pod6

[15:55] <Geth> ¦ doc: Add minor fix

[15:55] <synopsebot> Link: https://doc.perl6.org/language/hashmap

[15:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/863d28b77d

[15:55] <Geth> ¦ doc: 2d6c689881 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/hashmap.pod6

[15:55] <squashable6> 🍕 JJ++ merged pull request “Add minor fixes”: https://github.com/perl6/doc/pull/2287

[15:55] <Geth> ¦ doc: Merge pull request #2287 from uzluisf/master

[15:55] <Geth> ¦ doc: 

[15:55] <Geth> ¦ doc: Add minor fixes

[15:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2d6c689881

[15:57] *** hudo joined
[15:58] *** p6bannerbot sets mode: +v hudo

[16:01] <squashable6> 🍕 JJ++ wrote a comment on “$=finish not documented”: https://github.com/perl6/doc/issues/2284#issuecomment-417710594

[16:03] <squashable6> 🍕 JJ++ labeled issue “Declarators don't know the name of attributes” (big): https://github.com/perl6/doc/issues/2269

[16:06] *** saki left
[16:07] *** mcmillhj left
[16:08] *** alekz29 joined
[16:09] *** leastbit joined
[16:09] *** leastbit left
[16:09] *** leastbit joined
[16:09] *** p6bannerbot sets mode: +v leastbit

[16:10] *** leastbit left
[16:11] *** alekz29 left
[16:11] <squashable6> 🍕 JJ++ edited issue “Proc.run is not documented”: https://github.com/perl6/doc/issues/2233

[16:13] *** mcmillhj joined
[16:13] *** p6bannerbot sets mode: +v mcmillhj

[16:13] <squashable6> 🍕 JJ++ wrote a comment on “Proc.run is not documented”: https://github.com/perl6/doc/issues/2233#issuecomment-417714024

[16:15] *** WhitePhosphorus1 joined
[16:18] *** mcmillhj left
[16:18] *** WhitePhosphorus1 left
[16:18] <squashable6> 🍕 JJ++ wrote a comment on “Proc.run is not documented”: https://github.com/perl6/doc/issues/2233#issuecomment-417715286

[16:21] *** lizmat joined
[16:22] *** p6bannerbot sets mode: +v lizmat

[16:22] *** Kaiepi joined
[16:23] *** p6bannerbot sets mode: +v Kaiepi

[16:23] <timotimo> m: say "foo".substr

[16:23] <camelia> rakudo-moar 607ac1541: OUTPUT: «Must at least specify a 'from' value with 'substr'␤  in block <unit> at <tmp> line 1␤␤»

[16:23] <timotimo> that doesn't look like a thing we want in perl6, right? a method that's "available", but that throws an exception like that?

[16:25] <lizmat> timotimo: I think I had a reason for that...

[16:26] <timotimo> is there another candidate that would otherwise have been hit perhaps?

[16:27] <lizmat> it starts infinilooping without it

[16:27] <lizmat> guess I was too lazy to figure out what caused that

[16:28] <Geth> ¦ doc: b90dcb2850 | (JJ Merelo)++ | 2 files

[16:28] <Geth> ¦ doc: Moves run to Proc

[16:28] <Geth> ¦ doc: 

[16:28] <Geth> ¦ doc: Where it should have been from the beginning. As a matter of fact, `run` was there, but lumped together with shell and new, so it was not indexed properly. It should be now. This closes #2233

[16:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b90dcb2850

[16:28] <squashable6> 🍕 JJ++ closed issue “Proc.run is not documented”: https://github.com/perl6/doc/issues/2233

[16:28] <timotimo> interesting. maybe we can put in a ticket for that so we don't forget about it?

[16:28] *** fake_space_whale left
[16:28] <timotimo> maybe there is already one ...

[16:31] <squashable6> 🍕 JJ++ opened issue “Spin off shell from Proc”: https://github.com/perl6/doc/issues/2288

[16:31] <squashable6> 🍕 JJ++ edited issue “Spin off shell from Proc.new”: https://github.com/perl6/doc/issues/2288

[16:31] <squashable6> 🍕 JJ++ labeled issue “Spin off shell from Proc.new” (docs): https://github.com/perl6/doc/issues/2288

[16:31] <squashable6> 🍕 JJ++ labeled issue “Spin off shell from Proc.new” (update): https://github.com/perl6/doc/issues/2288

[16:31] *** mcmillhj joined
[16:32] *** p6bannerbot sets mode: +v mcmillhj

[16:34] <Geth> ¦ doc: 3f2c47f117 | (JJ Merelo)++ | doc/Type/Proc.pod6

[16:34] <Geth> ¦ doc: Some reflow and typographic changes

[16:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3f2c47f117

[16:34] <synopsebot> Link: https://doc.perl6.org/type/Proc

[16:36] *** mcmillhj left
[16:43] *** jjmerelo left
[16:47] *** wodwos left
[16:49] *** mcmillhj joined
[16:49] *** p6bannerbot sets mode: +v mcmillhj

[16:50] *** TreyHarris left
[16:50] *** TreyHarris joined
[16:50] *** p6bannerbot sets mode: +v TreyHarris

[16:52] <timotimo> https://wakelift.de/2018/08/31/faster-fasta-please/  -  i published my blog post!

[16:52] <timotimo> notable is down :S

[16:54] *** mcmillhj left
[16:54] <Geth> ¦ doc: MorayJ++ created pull request #2289: Phasers

[16:54] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2289

[16:54] <squashable6> 🍕 MorayJ++ opened pull request “Phasers”: https://github.com/perl6/doc/pull/2289

[16:59] *** mcmillhj joined
[17:00] *** p6bannerbot sets mode: +v mcmillhj

[17:00] *** domidumont joined
[17:01] *** p6bannerbot sets mode: +v domidumont

[17:04] <Geth> ¦ doc: MorayJ self-assigned Revise phasers page https://github.com/perl6/doc/issues/2268

[17:11] *** robertle left
[17:11] *** rfold joined
[17:12] *** p6bannerbot sets mode: +v rfold

[17:15] <lizmat> weekly: https://wakelift.de/2018/08/31/faster-fasta-please/

[17:15] <timotimo> but notable is down :<

[17:19] *** darkmagic joined
[17:20] *** darkmagic left
[17:23] *** Jacob8430 joined
[17:24] *** walle30324 joined
[17:27] *** Jacob8430 left
[17:27] *** walle30324 left
[17:32] *** zakharyas joined
[17:33] *** p6bannerbot sets mode: +v zakharyas

[17:33] <squashable6> 🍕 MorayJ++ wrote a comment on “Revise phasers page”: https://github.com/perl6/doc/issues/2268#issuecomment-417737337

[17:34] <squashable6> 🍕 MorayJ++ wrote a comment on “Document COMPOSE phaser as NYI (for now)”: https://github.com/perl6/doc/issues/2281#issuecomment-417737634

[17:36] *** lin joined
[17:37] *** p6bannerbot sets mode: +v lin

[17:37] <lin> Does anyone knoe what happened to spider-mario's arch repo?

[17:40] <MasterDuke> lin: what's wrong? i installed from it two months ago

[17:41] <lin> Doesn't seem to be resolving anymore, I've been using it as well

[17:43] <MasterDuke> lin: oh, do you mean the binary repo?

[17:43] <lin> Yup

[17:45] *** spycrab0 joined
[17:45] *** p6bannerbot sets mode: +v spycrab0

[17:47] *** irc-5225225 joined
[17:50] *** irc-5225225 left
[17:51] <MasterDuke> ah, i haven't used that, just the build-from-source pkg

[17:53] *** natrys joined
[17:53] *** hudo left
[17:54] *** p6bannerbot sets mode: +v natrys

[17:55] *** notable6 joined
[17:55] <lin> Fair enough, I was hoping he might be around here

[17:56] *** p6bannerbot sets mode: +v notable6

[17:56] *** hudo joined
[17:57] *** p6bannerbot sets mode: +v hudo

[17:58] <daemon> random free game: https://www.humblebundle.com/store/warhammer-40000-space-marine

[18:01] *** Khisanth left
[18:05] *** natrys left
[18:07] *** MasterDuke left
[18:07] *** TimToady left
[18:07] *** TimToady joined
[18:07] *** card.freenode.net sets mode: +v TimToady

[18:07] *** p6bannerbot sets mode: +v TimToady

[18:11] *** molaf joined
[18:12] *** kerframil joined
[18:12] *** p6bannerbot sets mode: +v kerframil

[18:12] *** p6bannerbot sets mode: +v molaf

[18:13] *** HaraldJoerg joined
[18:14] *** Khisanth joined
[18:14] *** p6bannerbot sets mode: +v HaraldJoerg

[18:15] *** p6bannerbot sets mode: +v Khisanth

[18:22] *** mcmillhj_ joined
[18:23] *** p6bannerbot sets mode: +v mcmillhj_

[18:24] *** mcmillhj left
[18:30] *** mcmillhj joined
[18:31] *** mcmillhj_ left
[18:31] *** p6bannerbot sets mode: +v mcmillhj

[18:32] *** sena_kun left
[18:43] *** _nipc joined
[18:44] *** p6bannerbot sets mode: +v _nipc

[18:50] *** kerframil left
[18:57] *** [particle] left
[18:57] *** domidumont left
[18:57] *** [particle] joined
[18:58] *** p6bannerbot sets mode: +v [particle]

[18:59] *** mcmillhj left
[19:02] *** mcmillhj joined
[19:02] *** p6bannerbot sets mode: +v mcmillhj

[19:12] *** renormalist left
[19:14] *** renormalist joined
[19:15] *** p6bannerbot sets mode: +v renormalist

[19:22] *** sotona joined
[19:23] *** p6bannerbot sets mode: +v sotona

[19:37] *** rfold left
[19:47] *** zakharyas left
[20:08] *** itaipu left
[20:15] <xinming> m: my $op = "+"; ::(infix:{$op^C.(3, 4).say;

[20:15] <camelia> rakudo-moar fa4d39639: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing block␤at <tmp>:1␤------> 3y $op = "+"; ::(infix:{$op^C.(3, 4).say;7⏏5<EOL>␤»

[20:15] <xinming> m: my $op = "+"; ::(infix:{$op}).(3, 4).say;

[20:15] <camelia> rakudo-moar fa4d39639: OUTPUT: «===SORRY!===␤Cannot find method 'has_compile_time_value' on object of type NQPMu␤»

[20:15] <xinming> What might be the right way to do this?

[20:19] <xinming> We can have [&sub] to make a sub "infix"

[20:19] <xinming> Now, trying to do something reverse, make a "infix" function

[20:21] *** TreyHarris left
[20:21] <avuserow> m: say &infix:<+>(1, 2) # xinming, like this?

[20:21] <camelia> rakudo-moar fa4d39639: OUTPUT: «3␤»

[20:21] *** st_elmo left
[20:21] <xinming> avuserow: yes, something like that

[20:21] <xinming> thanks

[20:21] <xinming> m: my $op = "+"; ::(&infix:{$op}).(3, 4).say;

[20:21] <camelia> rakudo-moar fa4d39639: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤You can't adverb &infix␤at <tmp>:1␤------> 3my $op = "+"; ::(&infix:{$op}7⏏5).(3, 4).say;␤    expecting any of:␤        horizontal whitespace␤        statement end␤        statement mo…»

[20:21] *** itaipu joined
[20:22] <xinming> m: my $op = "+"; ::("&infix:{$op}").(3, 4).say;

[20:22] <camelia> rakudo-moar fa4d39639: OUTPUT: «No such symbol '&infix:+'␤  in block <unit> at <tmp> line 1␤␤»

[20:22] <xinming> m: my $op = "+"; ::("&infix<$op>").(3, 4).say;

[20:22] <camelia> rakudo-moar fa4d39639: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    infix used at line 1. Did you mean 'indir', 'index'?␤␤»

[20:22] <xinming> m: my $op = "+"; ::("&infix:<$op>").(3, 4).say;

[20:22] <camelia> rakudo-moar fa4d39639: OUTPUT: «7␤»

[20:22] <xinming> hahaha

[20:22] *** p6bannerbot sets mode: +v itaipu

[20:22] <avuserow> xinming, another syntax for this is &infix:["+"] but that doesn't seem to make it easier here

[20:23] <xinming> Yea,, thanks

[20:27] *** itaipu left
[20:27] *** itaipu joined
[20:28] *** p6bannerbot sets mode: +v itaipu

[20:35] *** niceplace joined
[20:35] *** p6bannerbot sets mode: +v niceplace

[20:48] *** _nipc left
[20:52] *** reisinge joined
[20:52] *** p6bannerbot sets mode: +v reisinge

[20:55] *** mcmillhj left
[20:59] *** pmurias left
[21:00] *** pmurias joined
[21:01] *** mcmillhj joined
[21:01] *** p6bannerbot sets mode: +v pmurias

[21:02] *** p6bannerbot sets mode: +v mcmillhj

[21:05] *** atweiden-air joined
[21:05] *** atweiden-air left
[21:07] *** atweiden-air joined
[21:07] *** atweiden-air left
[21:07] *** [Coke] left
[21:07] *** lichtkind joined
[21:07] *** [Coke] joined
[21:07] *** p6bannerbot sets mode: +v [Coke]

[21:08] *** p6bannerbot sets mode: +v lichtkind

[21:08] <Altreus> p6 doesn't report the type of an exception if it wasn't given a message

[21:09] *** mcmillhj left
[21:09] <Altreus> I may be mistaken, hold on

[21:11] <Altreus> it does, cro just doesn't supply an exception :P

[21:12] *** HaraldJoerg left
[21:18] *** reisinge left
[21:20] *** mcmillhj joined
[21:21] *** p6bannerbot sets mode: +v mcmillhj

[21:24] *** mcmillhj left
[21:34] *** MasterDuke joined
[21:34] *** p6bannerbot sets mode: +v MasterDuke

[21:34] *** mcmillhj joined
[21:35] *** hudo left
[21:35] *** p6bannerbot sets mode: +v mcmillhj

[21:36] *** MasterDuke left
[21:36] *** MasterDuke joined
[21:36] *** herbert.freenode.net sets mode: +v MasterDuke

[21:36] *** p6bannerbot sets mode: +v MasterDuke

[21:39] *** mcmillhj left
[21:39] <SmokeMachine> m: say &infix:["+"].(31, 11)

[21:39] <camelia> rakudo-moar fa4d39639: OUTPUT: «42␤»

[21:39] <SmokeMachine> m: my $a = +; say &infix:[$a].(31, 11)

[21:39] <camelia> rakudo-moar fa4d39639: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Prefix + requires an argument, but no valid term found␤at <tmp>:1␤------> 3my $a = +7⏏5; say &infix:[$a].(31, 11)␤    expecting any of:␤        prefix␤»

[21:39] <SmokeMachine> m: my $a = "+"; say &infix:[$a].(31, 11)

[21:39] <camelia> rakudo-moar fa4d39639: OUTPUT: «Use of uninitialized value of type Any in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in any ACCEPTS at gen/moar/stage2/NQPCORE.setting line 594␤Use of uninitialized value of type …»

[21:41] <SmokeMachine> m: my $a; BEGIN $a = "+"; say &infix:[$a].(31, 11)

[21:41] <camelia> rakudo-moar fa4d39639: OUTPUT: «42␤»

[21:42] <squashable6> 🍕 MorayJ++ closed pull request “Phasers”: https://github.com/perl6/doc/pull/2289

[21:42] <squashable6> 🍕 MorayJ++ reopened pull request “Phasers”: https://github.com/perl6/doc/pull/2289

[21:48] *** pyrimidine joined
[21:49] *** p6bannerbot sets mode: +v pyrimidine

[21:49] *** sotona left
[21:50] <pyrimidine> timotimo: awesome post on FASTA parsing!  I had a few versions here, including a grammar: https://github.com/cjfields/bioperl6/tree/master/examples/parse-fasta

[21:50] <yoleaux> 27 Aug 2017 12:52Z <AlexDaniel> pyrimidine: https://irclog.perlgeek.de/perl6-dev/2017-08-27#i_15075855

[21:50] <yoleaux> 27 Aug 2017 12:53Z <AlexDaniel> pyrimidine: mystery resolved. It's still not as low, but that's possibly noise

[21:50] <pyrimidine> Heh, been a while :)

[21:51] *** jesse20 joined
[21:52] <pyrimidine> Grammar version I think originated from maybe Ulti, I think.  

[21:53] *** pyrimidine left
[21:57] *** jesse20 left
[22:00] <Geth> ¦ doc/master: 6 commits pushed by MorayJ++

[22:00] <Geth> ¦ doc/master: 6a1088f590 | Adds DOC to summary table of phasers

[22:00] <Geth> ¦ doc/master: 7d04af1eee | Extends abbreviations for clarity

[22:00] <Geth> ¦ doc/master: 565cc34c6f | More writing out of abbreviations

[22:00] <Geth> ¦ doc/master: 6df4d2de29 | Takes COMPOSE out of hidden section and puts as NYI

[22:00] <Geth> ¦ doc/master: 39e169fa0f | Merge branch 'master' into phasers

[22:00] <Geth> ¦ doc/master: 05dcfbf417 | Merge pull request #2289 from MorayJ/phasers

[22:00] <squashable6> 🍕 MorayJ++ merged pull request “Phasers”: https://github.com/perl6/doc/pull/2289

[22:00] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/3f2c47f11719...05dcfbf41750

[22:01] <squashable6> 🍕 MorayJ++ wrote a comment on “Revise phasers page”: https://github.com/perl6/doc/issues/2268#issuecomment-417800231

[22:01] <squashable6> 🍕 MorayJ++ closed issue “Revise phasers page”: https://github.com/perl6/doc/issues/2268

[22:03] *** x[LGWs4x4i]uG2N0 left
[22:04] *** x[LGWs4x4i]uG2N0 joined
[22:05] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[22:08] *** pmurias left
[22:21] *** Juliana joined
[22:21] *** p6bannerbot sets mode: +v Juliana

[22:21] <Juliana> Hi there,

[22:22] <Juliana> is there a way to match everything but excluding a particular string ? 

[22:22] <Juliana> $text ~~ / ^^ "ASUNTO" .* "RESULTANDO QUE" /;

[22:23] <Juliana> this expresion includes the string "RESULTADO QUE" as part of the match

[22:27] <MasterDuke> Juliana: you mean something like `!$text.contains("RESULTADO QUE")` ?

[22:27] <yoleaux> 18:59Z <pmurias> MasterDuke: re nqp::istrue_s it not defined in nqp because it's not used by a QAST::Op but only in a lower level MAST

[22:27] <yoleaux> 18:59Z <pmurias> MasterDuke: re Missing dependency message that's because the setting isn't properly cross compiled and loaded yet

[22:30] <Juliana> MasterDuke: no, just trying to set a grammar to parse a semi-structured text (txt file) which contains sections identified by specific expresion. So I want to parse just the text related to the "ASUNTO" section which comes before the "RESULTANDO QUE" section

[22:36] *** sotona joined
[22:37] <[Coke]> <!before pattern>

[22:37] *** p6bannerbot sets mode: +v sotona

[22:37] <[Coke]> m: /win 3

[22:37] <camelia> rakudo-moar fa4d39639: OUTPUT: «5===SORRY!5===␤Regex not terminated.␤at <tmp>:1␤------> 3/win 37⏏5<EOL>␤Unable to parse regex; couldn't find final '/'␤at <tmp>:1␤------> 3/win 37⏏5<EOL>␤    expecting any of:␤        infix stopper␤Other potential dif…»

[22:40] *** sotona left
[22:46] *** stmuk_ joined
[22:47] *** p6bannerbot sets mode: +v stmuk_

[22:49] *** stmuk left
[22:50] <timotimo> i like <( and )> better than using <!before> and such

[22:50] *** stmuk joined
[22:51] <timotimo> m: say "ASUNTO 99 RESULTANDO QUE CERVEZA" ~~ / ^^ "ASUNTO" .* )> "RESULTANDO QUE" /

[22:51] <camelia> rakudo-moar fa4d39639: OUTPUT: «｢ASUNTO 99 ｣␤»

[22:51] <timotimo> m: say "ASUNTO 99 RESULTANDO QUE CERVEZA" ~~ / ^^ "ASUNTO" .*? )> " RESULTANDO QUE" /

[22:51] <camelia> rakudo-moar fa4d39639: OUTPUT: «｢ASUNTO 99｣␤»

[22:51] *** p6bannerbot sets mode: +v stmuk

[22:52] *** stmuk_ left
[23:00] *** mcmillhj joined
[23:00] *** p6bannerbot sets mode: +v mcmillhj

[23:02] *** lichtkind left
[23:03] *** stmuk_ joined
[23:04] *** p6bannerbot sets mode: +v stmuk_

[23:04] *** mcmillhj left
[23:05] *** stmuk left
[23:06] *** stmuk joined
[23:07] *** p6bannerbot sets mode: +v stmuk

[23:08] *** stmuk_ left
[23:10] *** stmuk_ joined
[23:11] *** stmuk left
[23:11] *** p6bannerbot sets mode: +v stmuk_

[23:14] <Altreus> Somehow my code runs this line https://github.com/shuppet/p6-api-discord/blob/store-self-user/lib/API/Discord.pm6#L172 without running this line https://github.com/shuppet/p6-api-discord/blob/store-self-user/lib/API/Discord.pm6#L190

[23:15] <Altreus> help :)

[23:19] <Juliana> timotimo, thanks!

[23:22] <timotimo> Altreus: you but one of the lines is for having "READY" in the "t" key, and the other is for "MESSAGE_CREATE"?

[23:23] <buggable> New CPAN upload: Async-Command-0.0.3.tar.gz by MLDEVINE http://modules.perl6.org/dist/Async::Command:cpan:MLDEVINE

[23:29] <Altreus> timotimo: that's right

[23:29] <Altreus> timotimo: I need to make a class that wraps up this JSON to make it more legible :)

[23:30] <Altreus> timotimo: the API has some default behaviour for certain message types

[23:30] <Altreus> but IDK why it doesn't return from User.from-json

[23:32] <timotimo> have you put logging absolutely everywhere? :D

[23:32] <timotimo> that's how i tend to do it

[23:32] <timotimo> but just because i haven't made the debugging stuff in moarvm good enough

[23:32] <Altreus> ye

[23:32] <Altreus> I didn't commit it but I had a say on line 172

[23:33] <Altreus> which runs

[23:33] <Altreus> which doesn't make sense because handle-message is synchronous

[23:33] <timotimo> you're not accidentally tapping more than once?

[23:34] <Altreus> it only runs the say once :s

[23:34] <Altreus> and there's only one READY

[23:35] <Altreus> It's late though ... I might have another look in the morning

[23:38] *** mcmillhj joined
[23:39] *** p6bannerbot sets mode: +v mcmillhj

[23:42] *** mcmillhj left
[23:48] *** mcmillhj joined
[23:49] *** p6bannerbot sets mode: +v mcmillhj

[23:56] *** mcmillhj left
