[00:02] *** epony joined
[00:16] *** Diddi joined
[00:36] *** aborazmeh joined
[00:36] *** aborazmeh left
[00:36] *** aborazmeh joined
[00:52] *** markong left
[01:12] *** Diddi left
[01:13] *** pharv joined
[01:14] *** Diddi joined
[01:18] *** pharv left
[01:21] <buggable> New CPAN upload: Text-Sift4-0.0.1.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Text-Sift4-0.0.1.tar.gz

[01:31] <buggable> New CPAN upload: Text-Sift4-0.0.2.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Text-Sift4-0.0.2.tar.gz

[01:31] <buggable> New CPAN upload: Text-Sift4-0.0.3.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Text-Sift4-0.0.3.tar.gz

[01:35] <titsuki_> bench: HEAD (1,2,3).max for ^1000000

[01:35] <benchable6> titsuki_, starting to benchmark the 1 given commit

[01:35] <benchable6> titsuki_, ¬¶HEAD: ¬´3.2251¬ª

[01:35] <titsuki_> bench: HEAD max(1,2,3) for ^1000000

[01:35] <benchable6> titsuki_, starting to benchmark the 1 given commit

[01:35] <benchable6> titsuki_, ¬¶HEAD: ¬´0.1904¬ª

[01:37] <MasterDuke> benchable6: compare HEAD (1,2,3).max for ^1000000 ||| max(1,2,3) for ^1000000

[01:37] <benchable6> MasterDuke, starting to benchmark the 1 given commit

[01:38] <benchable6> MasterDuke, ¬¶HEAD: ¬´Benchmark: ‚ê§¬´timed out after 10 seconds¬ª¬ª

[01:38] <MasterDuke> benchable6: compare HEAD (1,2,3).max for ^100000 ||| max(1,2,3) for ^100000

[01:38] <benchable6> MasterDuke, starting to benchmark the 1 given commit

[01:38] <benchable6> MasterDuke, https://gist.github.com/8fa74e1a3a1161858b628c3f6f5aad6f

[01:39] <MasterDuke> titsuki_: ^^^ another way to compare timings

[01:39] <titsuki_> MasterDuke: Thanks! It's very useful.

[01:40] *** benchable6 left
[01:40] *** benchable6 joined
[01:40] *** ChanServ sets mode: +v benchable6

[01:41] *** FROGGS left
[01:41] <buggable> New CPAN upload: Text-Sift4-0.0.4.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Text-Sift4-0.0.4.tar.gz

[01:49] *** ilbot3 left
[01:50] *** galactus6x joined
[01:52] <galactus6x> i cannot find the answer to this configuration question on regular search. i installed rakudo star from rakudo.org. i did echo PATH and it is listed on that. but when i write and try to run a script it uses perl5! 

[01:53] *** FROGGS joined
[01:54] <galactus6x> i wish perl6 had something like anaconda for python that takes care of that. 

[01:55] <galactus6x> i am sure there is some file that needs editing but in linux it can be dicey. 

[01:55] <MasterDuke> galactus6x: how are you running it? something like: ./script.p6     ??

[01:56] *** ilbot3 joined
[01:56] *** ChanServ sets mode: +v ilbot3

[01:56] <galactus6x> #!/usr/bin/perl6  my $pi = 3.14; my$r = 5; say 4/3 ** ($pi * $r ** 3);

[01:57] <galactus6x> if i put use v6; it says it is perl 5.22. 

[01:57] <galactus6x> i don't know what to put at the top anymore.

[01:57] <MasterDuke> are you executing it by doing 'perl script.pl' ?

[01:57] <galactus6x> i am executing it in geany with run

[01:58] <MasterDuke> that's error is what happens when you use perl5 to run a perl6 script (that has 'use v6' in it)

[01:58] <timotimo> where do i find "run"?

[01:59] <galactus6x> it is on the menu where you can run your script. 

[02:00] <galactus6x> i know it is an error to run perl6 in perl5. the problem is that it is not recoginzing perl6

[02:00] <timotimo> when i do it it says "no such file or directory" for my script ...

[02:01] <timotimo> i have fannkuch.p6 open and it's trying to ./fannkuch, what the hell?

[02:02] <timotimo> but yeah, if you have the filetype set to "perl script" it'll run it with perl5, which will explode

[02:02] <galactus6x> do i need to name the script with p.6 as the file name?

[02:02] <timotimo> no clue why it cuts off the extension

[02:03] <timotimo> i thin geany just has no clue about perl6 in general

[02:03] <galactus6x> well i would use padre but it is too old for my linux version.

[02:03] <timotimo> here's what you can do

[02:03] <timotimo> make a link from myscript.p6 to myscript, make it +x, set the filetype to batch script

[02:04] <timotimo> alternatively, make a Makefile that runs perl6 on the script for you and use the "build" tool

[02:04] <timotimo> gotta go, have a good one!

[02:04] <galactus6x> thanks. 

[02:05] <galactus6x> no that is not good. it should run just like a perl5 script. with #!/usr/bin/env perl6. 

[02:05] <timotimo> we can't do anything about that, sorry :(

[02:06] <AlexDaniel> when I hit run in geany nothing happens

[02:06] *** ufobat___ joined
[02:06] <AlexDaniel> well, a window appears and then disappears, but I don't know what's in the window because it's so fast‚Ä¶

[02:06] <galactus6x> well, that is not a way to get new users to adopt perl6. i really thought it was going to be the next big  thing. back to python. 

[02:07] *** araraloren joined
[02:07] <AlexDaniel> well, because geany for some reason doesn't understand a shebang? :)

[02:08] <galactus6x> geany understands the shebang. just not the perl6 one for some reason. 

[02:08] <galactus6x> it should not be this hard. 

[02:08] <galactus6x> i could use vim but i don't have a month to goof around with it. 

[02:09] <AlexDaniel> it doesn't understand shebang if it doesn't use it

[02:09] <timotimo> if geany only knows about perl5, it'll always treat everything that has perl in it as "run with the perl binary"

[02:09] *** ufobat_ left
[02:10] <timotimo> AlexDaniel: would you file a bug against geany? https://github.com/geany/geany/issues

[02:10] <AlexDaniel> timotimo: that sounds like a good idea, but I can't reproduce unfortunately

[02:10] <AlexDaniel> nothing happens here when I run it

[02:10] <mspo> "Geany is a text editor using the GTK+ toolkit with basic features"

[02:11] <AlexDaniel> mspo: it's actually quite advanced among other text editors

[02:11] <timotimo> on my end geany puts a "press any key to continue" at the end of the run script

[02:12] <timotimo> no clue why it doesn't work on your machine, can you strace it to see what the exact contents of the script is? it disappears way too fast on my machine

[02:12] <galactus6x> geany has so far ran perl and python 3 for me with no problems. 

[02:12] <galactus6x> perl5.

[02:13] <AlexDaniel> timotimo: I think it fails to start up the terminal

[02:13] <timotimo> maybe. look in the settings, you can change what command it uses

[02:13] <mspo> https://www.geany.org/manual/current/index.html#filetype-definition-files

[02:13] <galactus6x> it works with my terminal MATE Terminal 1.12.1

[02:14] <galactus6x> you can edit which terminal it uses.

[02:14] <timotimo> it just uses xterm on my machine

[02:14] <galactus6x> you can make it use others. 

[02:14] <AlexDaniel> YES!

[02:14] <AlexDaniel> reproduced

[02:14] <AlexDaniel> had to force to xterm, yes

[02:15] <galactus6x> did it run a perl6 script?

[02:15] <AlexDaniel> yes, incorrectly with perl5

[02:15] <timotimo> there's also a "don't use run script" thing, also you can use the VTE instead, which will give you essentially gnome-terminal

[02:16] * AlexDaniel git clones geany

[02:16] <galactus6x> i have it running a gnome-terminal since it is larger.

[02:17] <timotimo> galactus6x: here's how you can fix it locally: Tools -> Configuration Files -> Filetype Configuration -> Scripting Languages -> filetypes.perl

[02:18] <timotimo> find the line run_cmd=perl "%f"

[02:18] <timotimo> change it to ./%f, that could work

[02:19] <timotimo> galactus6x: please be aware that our dev team isn't big, and until now nobody told us that geany doesn't run perl6 scripts at all, so nobody knew to fix that

[02:20] <timotimo> thanks to you we should be able to make it work at least a tiny bit better very soon, though creating a full filetype thing for perl 6 is a bunch of work; mostly getting the highlighting right

[02:21] <AlexDaniel> wait a minute‚Ä¶

[02:21] <galactus6x> cool. glad my bumbling could help. i don't see the run_cmd=perl line

[02:21] <timotimo> what version of geany do you have?

[02:21] <AlexDaniel> it does this only if you set the filetype to Scripting languages/Perl source code

[02:21] <timotimo> it's on line 102 on my installation

[02:21] <galactus6x> geany 1.27

[02:22] <timotimo> i have 1.33

[02:22] <AlexDaniel> if you set it to None, then it says:

[02:22] <AlexDaniel> ‚Äú./test2: not found‚Äù

[02:23] <AlexDaniel> my file is named ./test2.p6

[02:23] <timotimo> yeah, it cuts off the extension

[02:23] <AlexDaniel> this stuff is totally broken?

[02:23] <timotimo> i don't think so

[02:23] <timotimo> imagine you have a foo.c, you'll likely be running ./foo instead of ./foo.c

[02:23] <AlexDaniel> but it's an executable file with shebang

[02:23] <timotimo> for a default they'd have to choose either as a default

[02:23] <AlexDaniel> how many clues does it need

[02:23] <AlexDaniel> ok let's name it test2

[02:23] <galactus6x> in the line about perl it has this at the end of the line.

[02:23] <galactus6x> .pod;pl6;

[02:24] <timotimo> i think that's a different file from the one i meant?

[02:24] <timotimo> that's filetypes_extensions.conf maybe?

[02:24] <AlexDaniel> it works!

[02:24] <timotimo> okay i'm off, good night!

[02:26] <galactus6x> well, it doesn't have scripting laguages on that menu

[02:26] *** pierre_ joined
[02:26] <galactus6x> have a nice night. 

[02:28] <galactus6x> it already says %f

[02:30] <galactus6x> okay. kind of a drag. 

[02:32] *** pierre_ left
[02:35] *** galactus6x left
[02:45] *** pharv joined
[02:47] <AlexDaniel> timotimo: I did not file a ticket for geany, but here's one for our marketing issue: https://github.com/perl6/marketing/issues/10

[02:49] *** greppable6 left
[02:49] *** greppable6 joined
[02:50] *** pharv left
[02:58] *** pierre_ joined
[03:15] *** khw left
[03:21] <buggable> New CPAN upload: README.md by SKAJI https://cpan.metacpan.org/authors/id/S/SK/SKAJI/Perl6/README.md

[03:24] *** aborazmeh left
[03:25] <Kaiepi> https://hastebin.com/ihokohelov.pl

[03:25] <Kaiepi> is there a way i can get moar to find the symbols from ncurses without having to compile anything?

[03:26] *** cpage_ joined
[03:27] *** phdphil left
[03:28] *** cpage_ is now known as cpage

[03:43] *** pharv joined
[03:51] <buggable> New CPAN upload: CPAN-Uploader-Tiny-0.0.4.tar.gz by SKAJI https://cpan.metacpan.org/authors/id/S/SK/SKAJI/Perl6/CPAN-Uploader-Tiny-0.0.4.tar.gz

[03:52] *** pharv left
[03:52] *** pharv joined
[03:53] *** pharv left
[03:53] *** pharv joined
[03:57] *** pharv left
[04:06] *** pierre_ left
[04:19] *** kurahaupo left
[04:19] *** kurahaupo joined
[04:22] *** yusrideb left
[04:31] *** skids joined
[04:41] <buggable> New CPAN upload: App-Mi6-0.1.6.tar.gz by SKAJI https://cpan.metacpan.org/authors/id/S/SK/SKAJI/Perl6/App-Mi6-0.1.6.tar.gz

[04:54] *** epony left
[04:54] *** epony joined
[05:32] *** SourceBaby left
[05:32] *** SourceBaby joined
[05:32] *** ChanServ sets mode: +v SourceBaby

[05:35] *** SourceBaby left
[05:35] *** SourceBaby joined
[05:35] *** ChanServ sets mode: +v SourceBaby

[05:37] *** SourceBaby left
[05:41] *** SourceBaby joined
[05:41] *** ChanServ sets mode: +v SourceBaby

[05:42] *** SourceBaby left
[05:42] *** SourceBaby joined
[05:42] *** ChanServ sets mode: +v SourceBaby

[05:42] *** SourceBaby left
[05:44] *** SourceBaby joined
[05:44] *** ChanServ sets mode: +v SourceBaby

[05:53] *** kaare__ joined
[05:55] *** kaare_ left
[06:01] *** skids left
[07:01] *** evalable6 left
[07:01] *** evalable6 joined
[07:01] *** ChanServ sets mode: +v evalable6

[07:16] *** wamba joined
[07:20] *** xinming left
[07:20] *** xinming joined
[08:04] *** rindolf joined
[08:06] *** domidumont joined
[08:12] *** domidumont left
[08:12] *** domidumont joined
[08:19] *** llfourn joined
[08:28] *** llfourn left
[08:32] *** lizmat joined
[08:48] *** lizmat left
[09:04] <Geth> ¬¶ DBIish/wip-mysql-threaded: 595c93d158 | (Tobias Leich)++ | 5 files

[09:04] <Geth> ¬¶ DBIish/wip-mysql-threaded: Attempt to make DBD::mysql stable in async code

[09:04] <Geth> ¬¶ DBIish/wip-mysql-threaded: 

[09:04] <Geth> ¬¶ DBIish/wip-mysql-threaded: According to [^1] we have to care about connections:

[09:04] <Geth> ¬¶ DBIish/wip-mysql-threaded: [1] https://dev.mysql.com/doc/refman/5.7/en/c-api-threaded-clients.html

[09:04] <Geth> ¬¶ DBIish/wip-mysql-threaded: review: https://github.com/perl6/DBIish/commit/595c93d158

[09:21] <buggable> New CPAN upload: Archive-Libarchive-Raw-0.0.5.tar.gz by FRITH https://cpan.metacpan.org/authors/id/F/FR/FRITH/Perl6/Archive-Libarchive-Raw-0.0.5.tar.gz

[09:21] <buggable> New CPAN upload: Desktop-Notify-0.2.2.tar.gz by FRITH https://cpan.metacpan.org/authors/id/F/FR/FRITH/Perl6/Desktop-Notify-0.2.2.tar.gz

[09:21] <buggable> New CPAN upload: Archive-Libarchive-0.0.7.tar.gz by FRITH https://cpan.metacpan.org/authors/id/F/FR/FRITH/Perl6/Archive-Libarchive-0.0.7.tar.gz

[09:48] *** evalable6 left
[09:48] *** evalable6 joined
[10:03] <El_Che> .tell galactus6x: I told your shebang is incorrect. perl6 is installed under /opt/rakudo-pkg/bin/perl6 not /usr/bin/perl6. Can you do run this command? /usr/bin/perl6 -v

[10:03] <yoleaux> El_Che: What kind of a name is "galactus6x:"?!

[10:03] <El_Che> .tell galactus6x I told your shebang is incorrect. perl6 is installed under /opt/rakudo-pkg/bin/perl6 not /usr/bin/perl6. Can you do run this command? /usr/bin/perl6 -v

[10:03] <yoleaux> El_Che: I'll pass your message to galactus6x.

[10:08] <El_Che> .tell galactus6x I adapted the documentation (https://github.com/nxadm/rakudo-pkg/blob/master/README.md) and put the PATH at the end. This way you'll find the perl6 in /opt/rakudo-pkg/bin first.

[10:08] <yoleaux> El_Che: I'll pass your message to galactus6x.

[10:10] *** aindilis left
[10:11] *** aindilis joined
[10:26] *** darutoko joined
[10:29] *** pierre joined
[10:32] *** darutoko left
[10:33] *** darutoko joined
[10:34] *** Ven`` joined
[10:42] *** llfourn joined
[10:50] *** speedChicken left
[10:51] *** Ven`` left
[10:56] *** speedChicken joined
[10:57] *** Ven`` joined
[11:25] *** Ven`` left
[11:28] *** markong joined
[11:41] *** gabiruh_ joined
[11:42] *** gabiruh left
[11:53] <titsuki_> bench: compare HEAD my %a; %a{$_}=True for ^10000; say %a.keys; ||| my Set $a; $a = $a (|) $_ for ^10000; say $a.keys;

[11:53] <benchable6> titsuki_, starting to benchmark the 1 given commit

[11:53] <benchable6> titsuki_, ¬¶HEAD: ¬´Benchmark: ‚ê§¬´timed out after 10 seconds¬ª¬ª

[11:53] *** yusrideb joined
[11:54] <titsuki_> bench: compare HEAD my %a; %a{$_}=True for ^1000; say %a.keys; ||| my Set $a; $a = $a (|) $_ for ^1000; say $a.keys;

[11:54] <benchable6> titsuki_, starting to benchmark the 1 given commit

[11:54] <benchable6> titsuki_, https://gist.github.com/e026ca28239a539617addb678bc8267c

[11:56] <titsuki_> bench: HEAD my %a; %a{$_}=True for ^1000000; say %a.keys;

[11:56] <benchable6> titsuki_, starting to benchmark the 1 given commit

[11:57] *** SyrupThinker joined
[11:57] <benchable6> titsuki_, ¬¶HEAD: ¬´6.3876¬ª

[11:57] <MasterDuke> titsuki_: btw, have you seen my sift4 implementation?

[11:57] *** aborazmeh joined
[11:57] *** aborazmeh left
[11:57] *** aborazmeh joined
[11:57] <titsuki_> MasterDuke: I'm not sure your implementation.

[11:58] <titsuki_> I just have noticed that!

[11:58] <MasterDuke> https://github.com/MasterDuke17/Text-Diff-Sift4

[11:59] <titsuki_> Sorry, I'll delete mine :)

[11:59] <MasterDuke> we could have both versions

[11:59] *** protium joined
[11:59] <MasterDuke> mine isn't on cpan

[12:01] <MasterDuke> feel free to take anything from mine

[12:02] <titsuki_> MasterDuke: Thank you for your kindness :)

[12:03] <MasterDuke> no problem

[12:03] <MasterDuke> btw, how did you find sift4? are you using it for anything?

[12:03] <titsuki_> It's because Perl 6 documentation uses sift4.

[12:04] <MasterDuke> ah, right. forgot about that

[12:05] <MasterDuke> bench: HEAP my %a; %a{$_}=True for ^100000; say %a.keys;

[12:05] <benchable6> MasterDuke, ¬¶HEAP: ¬´Cannot find this revision (did you mean ‚ÄúHEAD‚Äù?)¬ª

[12:05] <MasterDuke> the *ables use it for that ^^^

[12:10] *** rindolf left
[12:13] <titsuki_> btw, is sift4 faster than the other fuzzy search algorithms? I'm curious in it's performance comparison.

[12:15] <MasterDuke> i've only compared my perl6 implementation against a perl6 implementation of levenstein, and it's much faster than that

[12:15] <MasterDuke> haven't compared to anything else

[12:15] <titsuki_> MasterDuke: Thanks, I see.

[12:24] *** rindolf joined
[12:27] *** benchable6 left
[12:27] *** benchable6 joined
[12:42] *** pierre left
[12:51] *** pierre joined
[13:02] *** yusrideb left
[13:04] *** aborazmeh left
[13:07] *** wamba left
[13:12] *** AlexDaniel left
[13:29] <tyil> is JSON::JWT still being developed? last commit is a little under a year ago and it still has an old open PR (and installation just failed for me # Failed test 'correct decode succeeds')

[13:30] <tyil> I wanted to install Cro :(

[13:32] <timotimo> perhaps that's a recent rakudo regression?

[13:32] <tyil> it could be, I havent used this module before :p

[13:37] <jnthn> I've not seen it fail before

[13:38] <jnthn> So perhaps something new

[13:38] <timotimo> yeah, it doesn't fail on my machine right now

[13:42] <tyil> This is Rakudo version 2018.03-15-g3420b67b6 built on MoarVM version 2018.03

[13:42] <tyil> not sure if that matters much

[13:42] <timotimo> This is Rakudo version 2018.03-64-g6be586c58 built on MoarVM version 2018.03-25-g90b05c81b

[13:43] <tyil> I'd look into the module's tests and possibly patch something up, but if the original author abandoned it idk if it's worth the trouble

[13:49] <timotimo> i'd recommend first checking the released version and then HEAD to see if maybe it's just some short-lived bug in rakudo

[14:00] <titsuki_> bench: compare HEAD [min] 1,2,3 for ^1000000 ||| min 1,2,3 for ^1000000

[14:00] <benchable6> titsuki_, starting to benchmark the 1 given commit

[14:00] <benchable6> titsuki_, ¬¶HEAD: ¬´Benchmark: ‚ê§¬´timed out after 10 seconds¬ª¬ª

[14:00] <titsuki_> bench: compare HEAD [min] 1,2,3 for ^10000 ||| min 1,2,3 for ^10000

[14:00] <benchable6> titsuki_, starting to benchmark the 1 given commit

[14:00] <benchable6> titsuki_, https://gist.github.com/7dbe18320a469c2c60329efa670b38e3

[14:01] <timotimo> haha, wow

[14:02] *** AlexDaniel joined
[14:03] <timotimo> one of those is faster than the other

[14:03] <timotimo> greppable6: "[min]"

[14:03] <greppable6> timotimo, 351 lines, 42 modules: https://gist.github.com/419f7ebfec9239f538b1df2fc056303a

[14:03] <AlexDaniel> timotimo: that's perl5 regex

[14:03] <timotimo> that's not what i meant %)

[14:03] <timotimo> greppable6: \[min\]

[14:03] <greppable6> timotimo, 23 lines, 6 modules: https://gist.github.com/018053a5ba1d6457cbae5d3b8e49e041

[14:04] <timotimo> m: say [min] (^100_000).Array

[14:04] *** itaipu joined
[14:04] <camelia> rakudo-moar 17446fc13: OUTPUT: ¬´Too many arguments in flattening array.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:04] <timotimo> m: say min (^100_000).Array

[14:04] <camelia> rakudo-moar 17446fc13: OUTPUT: ¬´0‚ê§¬ª

[14:04] <timotimo> another reason against [min] :(

[14:07] <AlexDaniel> uuuuuuuuuuuuhhhhhhhhhhhhhh??

[14:07] <titsuki_> Text::Levenshtein use [min] or [max] many times and it seems too slow considering its complexity: https://gist.github.com/titsuki/e7ff410b2f18be8d6a2f1e30d3b932d6

[14:08] <titsuki_> (and I surprised that Text::Diff:Sift is over 10 times faster than mine)

[14:08] <AlexDaniel> timotimo: is it doing some sort of optimization for [min]??

[14:08] <AlexDaniel> titsuki_: yeah, I've spent a whole evening doing that

[14:09] <timotimo> no, i don't think so

[14:09] <timotimo> it's probably just calling min over and over on an accumulator

[14:09] <timotimo> in the [min] case

[14:09] <AlexDaniel> titsuki_: https://github.com/MasterDuke17/Text-Diff-Sift4/commit/524f98cdc95c3dc0d982c0ce0782406c61e4a772

[14:09] <timotimo> whereas the min sub itself would probably have a very tight loop

[14:09] <jnthn> It looks more like it's trying to pass all the args flattened

[14:09] <AlexDaniel> timotimo: but how did it get to ‚Äútoo many arguments‚Äù?

[14:09] <jnthn> Which is going to suck even if it doesn't hit the limit

[14:10] <AlexDaniel> 6c: say [min] (^100_000).Array

[14:10] <timotimo> yeah, it is also doing that

[14:10] *** pierre left
[14:10] <timotimo> i believe this has been a problem for ever?

[14:10] <committable6> AlexDaniel, ¬¶6c (29 commits): ¬´Too many arguments in flattening array.‚ê§  in block <unit> at /tmp/OCzXr2yGHM line 1‚ê§‚ê§ ¬´exit code = 1¬ª¬ª

[14:10] <jnthn> Well, probably, but it'd sure be nice to fix it :)

[14:10] <AlexDaniel> c: all say [min] (^100_000).Array

[14:11] <committable6> AlexDaniel, https://gist.github.com/30cc26cd7e88b725e461e7269158fc87

[14:11] <AlexDaniel> :(

[14:11] <timotimo> right :)

[14:14] <timotimo> benchable6: compare HEAD [min] 1, 2, 3 for ^10_000 ||| 1 min 2 min 3 for ^10_000

[14:14] <benchable6> timotimo, starting to benchmark the 1 given commit

[14:14] <benchable6> timotimo, https://gist.github.com/5c1791c793760caf3782cd9ecd8a6872

[14:15] <AlexDaniel> wow

[14:20] <timotimo> benchable6: compare HEAD [min] 1, 2, 3 for ^10_000 ||| 1 min 2 min 3 for ^10_000 ||| min 1, 2, 3 for ^10_000

[14:20] <benchable6> timotimo, starting to benchmark the 1 given commit

[14:20] <benchable6> timotimo, https://gist.github.com/df1a5fd6a53cbb8b31248452977703f5

[14:22] <MasterDuke> btw, i think the static optimizer is "cheating" in some of those cases

[14:22] *** greppable6 left
[14:22] *** greppable6 joined
[14:23] <MasterDuke> istr getting not quite so drastically different numbers if not using literals

[14:23] <timotimo> hm

[14:28] <timotimo> i turned --optimize=off and it's the same speed

[14:30] *** mscha joined
[14:30] <timotimo> anyway, Levenshtein::Damerau is a bit faster when switching [min] for min and [max] for max

[14:30] *** vcv joined
[14:31] <mscha> m: my %foo = bar => (1,2,3); .say for %foo<bar>; # Very annoying

[14:31] <camelia> rakudo-moar eb71edccf: OUTPUT: ¬´(1 2 3)‚ê§¬ª

[14:31] <mscha> m: my %foo = bar => (1,2,3); .say for %foo<bar>[]; # This works, but still, not very DWIM

[14:31] <camelia> rakudo-moar eb71edccf: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[14:32] <timotimo> m: my %foo = bar => (1,2,3); .say for @%foo<bar>

[14:32] <camelia> rakudo-moar eb71edccf: OUTPUT: ¬´Type Seq does not support associative indexing.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:32] <timotimo> mhm

[14:33] <timotimo> m: my %foo = bar => (1,2,3); %foo<bar>.map(*.say)

[14:33] <camelia> rakudo-moar eb71edccf: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[14:33] <timotimo> mscha: that's probably nicer?

[14:34] <timotimo> m: my %foo = bar => (1,2,3); .say for %foo<bar><>

[14:34] <camelia> rakudo-moar eb71edccf: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[14:34] <timotimo> this as well

[14:34] <mscha> timotimo: yeah, a bit, but IMO ".say for %foo<bar>" should just DWIM.

[14:34] <timotimo> that'd mean you can't assign to hash keys, though

[14:35] <timotimo> m: my %foo = bar => (1,2,3)<>; .say for %foo<bar>

[14:35] <camelia> rakudo-moar eb71edccf: OUTPUT: ¬´(1 2 3)‚ê§¬ª

[14:35] <timotimo> because it has a scalar container in there so that you can change the contents

[14:35] <timotimo> that means, though, that it'll behave scalarly, too

[14:35] <timotimo> which is why for-ing won't iterate it

[14:40] *** pierre joined
[14:40] <mscha> What I don't understand is why the single argument rule does't work here.  Wouldn't it make more sense if "for" with a single argument always iterates?  (What's the point of using "for" otherwise?)

[14:41] <timotimo> single argument rule still won't iterate over scalars :)

[14:41] <timotimo> m: my $foo = (1, 2, 3); .say for $foo

[14:41] <camelia> rakudo-moar eb71edccf: OUTPUT: ¬´(1 2 3)‚ê§¬ª

[14:41] <timotimo> m: my $foo = (1, 2, 3); .say for $foo<>

[14:41] <camelia> rakudo-moar eb71edccf: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[14:41] <timotimo> get rid of the scalar container (for example with postfix <>) and it'll iterate it

[14:42] <mscha> I know, but I don't understand.  ;-)

[14:44] *** pierre left
[14:48] *** athenot joined
[14:48] <araraloren> m: my %foo = bar => [1,2,3]; .say for %foo<bar>;

[14:48] <camelia> rakudo-moar eb71edccf: OUTPUT: ¬´[1 2 3]‚ê§¬ª

[14:48] <timotimo> the hash is what gives you the scalar container

[14:49] <timotimo> m: my %foo = bar => [1,2,3].Slip; .say for %foo<bar>;

[14:49] <camelia> rakudo-moar eb71edccf: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[14:49] <timotimo> this is also possible, though

[14:49] <araraloren> m: my %foo = bar => [1,2,3]; .say for @%foo<bar>;

[14:49] <camelia> rakudo-moar eb71edccf: OUTPUT: ¬´Type Seq does not support associative indexing.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[14:49] <araraloren> m: my %foo = bar => [1,2,3]; .say for @(%foo<bar>);

[14:49] <camelia> rakudo-moar eb71edccf: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[14:54] *** araraloren left
[15:00] *** robertle joined
[15:06] *** pmurias joined
[15:09] *** wamba joined
[15:12] *** pierre_ joined
[15:15] <titsuki_> bench: compare HEAD use nqp; my int $a = 0; my int $b = 10; nqp::if(nqp::isle_i($a, $b),$a,$b) for ^1000000; ||| my int $a = 0; my int $b = 10; min($a,$b) for ^1000000; ||| my int $a = 0; my $b = 10; $a < $b ?? $a !! $b for ^1000000;

[15:15] <benchable6> titsuki_, starting to benchmark the 1 given commit

[15:15] <benchable6> titsuki_, ¬¶HEAD: ¬´Benchmark: ‚ê§¬´timed out after 10 seconds¬ª¬ª

[15:15] <titsuki_> bench: compare HEAD use nqp; my int $a = 0; my int $b = 10; nqp::if(nqp::isle_i($a, $b),$a,$b) for ^10000; ||| my int $a = 0; my int $b = 10; min($a,$b) for ^10000; ||| my int $a = 0; my $b = 10; $a < $b ?? $a !! $b for ^10000;

[15:15] <benchable6> titsuki_, starting to benchmark the 1 given commit

[15:15] <benchable6> titsuki_, https://gist.github.com/a867380ae5c7004b989b7fc74dc34e82

[15:17] *** pierre_ left
[15:26] <AlexDaniel> any neovim users here?

[15:34] *** lichtkind joined
[15:41] *** skids joined
[15:46] *** khw joined
[15:49] <titsuki_> bench: compare HEAD use nqp; nqp::ordat("abcde",2) for ^100000; ||| "abcde".substr(2,1) for ^100000;

[15:49] <benchable6> titsuki_, starting to benchmark the 1 given commit

[15:49] <benchable6> titsuki_, https://gist.github.com/1eb0ffb105713a9b7f75f40b5e795f1d

[15:51] <timotimo> titsuki_: you still need to .ords[0] or something in the second one, else you're comparing ord vs string

[15:52] *** comborico1611 joined
[15:52] <titsuki_> timotimo: Thanks! I didn't know that.

[15:53] <timotimo> bench: compare HEAD use nqp; nqp::substr("abcde",2,1 ) for ^100000; ||| "abcde".substr(2,1) for ^100000;

[15:53] <benchable6> timotimo, starting to benchmark the 1 given commit

[15:53] <benchable6> timotimo, https://gist.github.com/83a3c2cefa23790173158cf5c937dfc7

[15:58] *** committable6 left
[15:58] *** committable6 joined
[16:07] <AlexDaniel> please chime in and help with https://github.com/perl6/marketing/issues/10

[16:08] <titsuki_> bench: compare HEAD my @a = 1 xx 10000; +@a for ^1000000 ||| my @a = 1 xx 10000; @a.elems for ^1000000 ||| use nqp; my $a := nqp::list_i; nqp::push_i($a,1) for ^10000; nqp::elems($a) for ^1000000

[16:08] <benchable6> titsuki_, starting to benchmark the 1 given commit

[16:08] <benchable6> titsuki_, https://gist.github.com/22df1dc3cb3a1b714f5bad42b38bb4ef

[16:08] *** benchable6 left
[16:09] *** benchable6 joined
[16:09] *** ChanServ sets mode: +v benchable6

[16:09] <timotimo> we need another emoji for "doesn't have language support for any language" so we can put stuff like pico in

[16:10] <timotimo> is cfa's avatar from babylon 5?

[16:11] <AlexDaniel> timotimo: my pico is symlinked to nano :)

[16:12] <AlexDaniel> nano does some sort of highlighting for a perl6 script‚Ä¶ but is it perl5 highlighting?

[16:12] <AlexDaniel> how do I know?

[16:12] <timotimo> twigils? classes?

[16:12] <timotimo> perl6 regex syntax?

[16:13] <AlexDaniel> oh ok, $foo-bar is an instant giveaway

[16:13] <timotimo> i haven't heard of pluma before

[16:14] <AlexDaniel> I think it's a default editor in MATE?

[16:16] <timotimo> oh? interesting

[16:17] <AlexDaniel> personally haven't heard about Brackets, but every website out there is recommending it as a shiny new cool thing

[16:17] <AlexDaniel> it can't even render basic text on my system properly, but ok

[16:22] *** vcv left
[16:44] <pmurias> do we have a way to see what multi candidate is choosen?

[16:44] <yoleaux> 07:06Z <Zoffix> pmurias: Figured out the fix for nqp::div_In, if you were curious what it'd look like: https://github.com/MoarVM/MoarVM/commit/4d3fc2818d  (along with an earlier commit fixing up mp_get_double() a bit: https://github.com/MoarVM/MoarVM/commit/49b7389058e1b )

[16:44] <yoleaux> 10:57Z <Zoffix> pmurias: Though there appears to be a drift bug, most likely in nqp::div_In: https://github.com/rakudo/rakudo/issues/1651  needs more thinking

[16:46] <AlexDaniel> m: say Str.^lookup('Int').perl

[16:46] <camelia> rakudo-moar eb71edccf: OUTPUT: ¬´method Int (Str:D $: *%_) { #`(Method|30204600) ... }‚ê§¬ª

[16:46] <AlexDaniel> not that‚Ä¶

[16:47] *** daghost joined
[16:47] *** Kaiepi left
[16:48] <AlexDaniel> can someone do `make clean-images` for docs.perl6.org?

[16:48] <AlexDaniel> or is there any other way to retrigger that

[16:51] <pmurias> .tell Zoffix supper cool you fixed both the printing and nqp::div_In

[16:51] <yoleaux> pmurias: I'll pass your message to Zoffix.

[16:56] <pmurias> .tell Zoffix we seem to have a duplicated commit for fixing &val https://github.com/rakudo/rakudo/commit/17446fc1318fbc721ea53c0dc3cad117e4d7aa36

[16:56] <yoleaux> pmurias: I'll pass your message to Zoffix.

[16:58] *** pierre joined
[17:03] *** pierre left
[17:12] *** comborico1611 left
[17:16] *** APic joined
[17:25] *** mscha left
[17:31] *** itaipu left
[17:33] *** daghost left
[17:33] *** pierre joined
[17:37] *** pierre left
[17:47] *** FROGGS_ joined
[17:47] *** FROGGS left
[17:48] *** daghost joined
[18:15] *** daghost left
[18:21] <buggable> New CPAN upload: Inline-Perl5-0.32.tar.gz by NINE https://cpan.metacpan.org/authors/id/N/NI/NINE/Perl6/Inline-Perl5-0.32.tar.gz

[18:24] <moritz> AlexDaniel: I can do that

[18:25] <AlexDaniel> great!

[18:25] <moritz> done

[18:25] <moritz> should I also trigger a rebuild?

[18:25] <AlexDaniel> I guess so

[18:26] <AlexDaniel> hmm

[18:26] *** TeamBlast joined
[18:26] <moritz> runnin'

[18:33] *** robertle left
[18:36] *** robertle joined
[18:45] *** darutoko left
[18:50] *** athenot left
[18:51] *** Aceeri_ joined
[18:52] *** Kaiepi joined
[18:58] *** pierre joined
[19:01] *** domidumont left
[19:02] *** kaare__ left
[19:03] *** pierre left
[19:22] *** bisectable6 left
[19:22] *** bisectable6 joined
[19:29] <Geth> ¬¶ doc: 517152596e | (Aleks-Daniel Jakimenko-Aleksejev)++ | assets/sass/style.scss

[19:29] <Geth> ¬¶ doc: Set svg height to auto

[19:29] <Geth> ¬¶ doc: 

[19:29] <Geth> ¬¶ doc: Otherwise it is using the defined height from the image even when the

[19:29] <Geth> ¬¶ doc: image is scaled because of `max-width: 100%`. Resolves #1868.

[19:29] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/517152596e

[19:31] *** pierre joined
[19:34] <Geth> ¬¶ doc: d972021fec | (JJ Merelo)++ | doc/Type/IO/Path.pod6

[19:34] <synopsebot> Link: https://doc.perl6.org/type/IO::Path

[19:34] <Geth> ¬¶ doc: Basic reformatting

[19:34] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d972021fec

[19:34] <Geth> ¬¶ doc: ba08d680bb | (JJ Merelo)++ | 2 files

[19:34] <Geth> ¬¶ doc: `mkdir` replicated to the first arg

[19:34] <Geth> ¬¶ doc: 

[19:34] <Geth> ¬¶ doc: Which is the convention, and it's where `rmdir` and other similar routines are.

[19:34] <Geth> ¬¶ doc: 

[19:34] <Geth> ¬¶ doc: This would fix #1867. It was probably the best way to do that, and any way mkdir as routine has little to do with `IO::Path` except for return value.

[19:34] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ba08d680bb

[19:34] <Geth> ¬¶ doc: fba54a2261 | (JJ Merelo)++ | assets/sass/style.scss

[19:34] <Geth> ¬¶ doc: Merge branch 'master' of github.com:perl6/doc

[19:34] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/fba54a2261

[19:35] *** dct joined
[19:35] *** pierre left
[19:46] *** kaare__ joined
[19:50] *** kaare__ left
[20:36] *** FROGGS_ is now known as FROGGS

[20:41] *** SyrupThinker left
[20:42] *** lizmat joined
[20:50] <lichtkind> lizmat, hugs

[20:50] <lizmat> lichtkind: thank you  :-)

[20:51] <lichtkind> lizmat, im almost always glad to see you :)

[20:51] <lizmat> :-)

[20:52] <lichtkind> lizmat, come to GPW ?

[20:52] <lizmat> yes

[20:52] <El_Che> *almost*

[20:52] <lichtkind> so good

[20:52] <lichtkind> El_Che, you wanted to get there?

[20:54] <El_Che> lichtkind: I was referring to your "almost always glad to see you" that made me smile :)

[20:55] <lichtkind> liz has such great heart and je enjoys a little poking

[20:57] <El_Che> lichtkind: poking liz and wendy are one of my specialities

[20:57] <El_Che> ask them :)

[20:57] *** kybr left
[20:58] *** comborico1611 joined
[21:01] <lizmat> we also poke back  :-)

[21:02] <El_Che> true dat

[21:02] <El_Che> :)

[21:04] *** kybr joined
[21:11] *** Aceeri_ left
[21:13] *** dct left
[21:14] *** pmurias left
[21:15] <thowe> can confirm...  Liz has been kind to me, also.

[21:32] *** kaare__ joined
[21:33] *** kurahaupo_ joined
[21:35] *** kurahaupo left
[21:38] *** pierre joined
[21:42] *** pierre left
[21:51] *** Ozg joined
[21:54] *** lancew joined
[21:57] *** lancew left
[21:59] *** Ozg left
[22:00] *** robertle left
[22:00] *** comborico1611 left
[22:04] <thowe> is tehre something like getopt long in perl6?

[22:06] <MasterDuke> huggable: eco getopt

[22:06] <huggable> MasterDuke, nothing found

[22:06] <El_Che> thowe: "%*SUB-MAIN-OPTS<named-anywhere>=1" kind of fixed my need for getop long

[22:06] <MasterDuke> buggable: eco getopt

[22:06] <buggable> MasterDuke, Found 7 results: Getopt::Kinoko, Getopt::Tiny, Getopt::Advance, Getopt::Long, Getopt::Type. See https://modules.perl6.org/s/getopt

[22:06] <El_Che> thowe: https://docs.perl6.org/language/functions#named-anywhere

[22:07] <El_Che> that was my main dislike of the built-in param handling

[22:08] <El_Che> lizmat++ by the way

[22:12] <thowe> I might just need to make sure I understand MAIN well enough...

[22:14] <El_Che> MAIN is very powerful

[22:15] <El_Che> thowe: https://perl6advent.wordpress.com/2010/12/02/day-2-interacting-with-the-command-line-with-main-subs/

[22:21] *** espadrine left
[22:25] *** wamba left
[22:27] *** Kaiepi left
[22:43] *** rindolf left
[22:49] *** greppable6 left
[22:50] *** greppable6 joined
[22:50] *** ChanServ sets mode: +v greppable6

[22:57] *** evalable6 left
[22:57] *** evalable6 joined
[23:04] *** lichtkind left
[23:13] *** committable6 left
[23:13] *** committable6 joined
[23:14] <AlexDaniel> moritz: hey, I'm working on a new bot here, and I'm seeing some https-related server config issues. Maybe you're interested: https://gist.github.com/Whateverable/cdbe27f000905ab9508e8ac165e76849

[23:15] *** kaare__ left
[23:17] *** lichtkind joined
[23:17] <Geth> ¬¶ doc: 6700db5895 | (Will "Coke" Coleda)++ | doc/Language/modules.pod6

[23:17] <synopsebot> Link: https://doc.perl6.org/language/modules

[23:17] <Geth> ¬¶ doc: whitespace

[23:17] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/6700db5895

[23:17] <Geth> ¬¶ doc: 938f5d9691 | (Will "Coke" Coleda)++ | xt/words.pws

[23:17] <Geth> ¬¶ doc: new "words"

[23:17] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/938f5d9691

[23:20] *** noganex left
[23:27] *** protium left
[23:30] *** mempko joined
[23:30] <AlexDaniel> moritz: also if some domains are missing from that list let me know

[23:31] <AlexDaniel> fwiw I can add any random links to that bot, so if someone feels like there's some resource that should be checked for upness periodically, let me know

[23:31] *** jcallen joined
[23:32] *** lucs joined
[23:32] *** protium joined
[23:38] *** pierre joined
[23:39] *** w_richard_w joined
[23:42] *** pierre left
[23:43] *** Kaiepi joined
[23:46] *** w_richard_w left
[23:47] *** w_richard_w joined
[23:52] *** markong left
