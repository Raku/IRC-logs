[00:00] <AlexDaniel> libuv has uv_fs_utime, which apparently should also do something on windows

[00:00] <geekosaur> (you can't represent a 0-byte write in a buffer, so it would need to either flush, ignore it, or throw)

[00:16] *** khisanth_ left
[00:18] *** tildedave_ joined
[00:18] *** Ven` joined
[00:19] *** p6bannerbot sets mode: +v tildedave_

[00:19] *** p6bannerbot sets mode: +v Ven`

[00:20] *** lizmat left
[00:21] *** tildedave_ left
[00:22] *** Ven` left
[00:26] *** lizmat joined
[00:26] *** p6bannerbot sets mode: +v lizmat

[00:30] *** khisanth_ joined
[00:30] *** p6bannerbot sets mode: +v khisanth_

[00:45] *** leont left
[00:45] *** leont joined
[00:46] *** p6bannerbot sets mode: +v leont

[00:56] *** sjlxF joined
[00:56] *** sjlxF left
[01:07] *** kerframil left
[01:20] *** leont left
[01:35] <Geth> ¬¶ doc: abc261c9b9 | Coke++ | doc/Language/syntax.pod6

[01:35] <Geth> ¬¶ doc: whitespace

[01:35] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/abc261c9b9

[01:35] <synopsebot> Link: https://doc.perl6.org/language/syntax

[01:42] <k-man> i just got my copy of learning perl6

[01:43] <k-man> the example at the bottom of p8, is perhaps missing a ++ on the $count in: print $count, "\r";

[01:43] <k-man> i mean it works fine without it but seems pointless without a ++ in there somewhere

[02:25] *** saki joined
[02:25] *** saki left
[02:32] *** Herby__ joined
[02:32] *** saki joined
[02:32] *** saki left
[02:32] *** p6bannerbot sets mode: +v Herby__

[02:33] *** kurahaupo left
[02:34] <fake_space_whale> Is there a builtin way to do factorials in perl6? or perhaps a cpan module?

[02:34] *** kurahaupo joined
[02:35] *** p6bannerbot sets mode: +v kurahaupo

[02:40] *** Zoffix joined
[02:40] *** p6bannerbot sets mode: +v Zoffix

[02:40] <Zoffix> fake_space_whale: just use `*` with the reduce meta op

[02:41] <Zoffix> m: say [*] 1..5

[02:41] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´120‚ê§¬ª

[02:41] <fake_space_whale> Thank you

[02:41] <Herby__> Zoffix: o/

[02:43] <Zoffix> m: my $fac := (1, {$_*++$}... *); say $fac[5]

[02:43] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´120‚ê§¬ª

[02:43] <Zoffix> m: my @fac = 1, {$_*++$} ... *; say @fac[5]

[02:43] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´120‚ê§¬ª

[02:43] *** saki joined
[02:43] <Zoffix> fake_space_whale: can also make a Seq with the sequence op like above and it'll cache the already-generated factorials

[02:44] *** p6bannerbot sets mode: +v saki

[02:44] <fake_space_whale> okay

[02:46] *** indymN joined
[02:46] *** indymN left
[02:46] *** Zoffix left
[02:50] *** ufobat_ joined
[02:51] *** p6bannerbot sets mode: +v ufobat_

[02:54] *** ufobat left
[03:08] <Herby__> trying to learn some OO

[03:09] <Herby__> I have a class called Comic.  it has an attribute called Number.  Can I require that the number is > 0?

[03:09] <Herby__> has Int $.number where self.number > 0

[03:09] <Herby__> or something like that

[03:16] *** sacomo left
[03:33] *** dmaestro joined
[03:33] *** p6bannerbot sets mode: +v dmaestro

[03:36] <lucs> class Foo { has Int $.i where * > 0 }; Foo.new(i => 42).i.say; Foo.new(i => -3).i.say

[03:36] <lucs> m: class Foo { has Int $.i where * > 0 }; Foo.new(i => 42).i.say; Foo.new(i => -3).i.say

[03:36] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´42‚ê§Type check failed in assignment to $!i; expected <anon> but got Int (-3)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[03:36] *** dmaestro_ joined
[03:36] *** p6bannerbot sets mode: +v dmaestro_

[03:38] *** dmaestro left
[03:41] <Herby__> lucs: thanks!

[03:47] *** Herby__ left
[03:52] *** saki left
[04:19] *** Ven` joined
[04:19] *** p6bannerbot sets mode: +v Ven`

[04:23] *** Ven` left
[04:33] *** itaipu left
[04:34] *** Ven` joined
[04:35] *** p6bannerbot sets mode: +v Ven`

[04:39] *** Ven` left
[04:44] *** robertle_ joined
[04:45] *** p6bannerbot sets mode: +v robertle_

[04:50] *** sauvin_ joined
[04:50] *** p6bannerbot sets mode: +v sauvin_

[04:51] *** krkini joined
[04:51] *** p6bannerbot sets mode: +v krkini

[04:52] *** avar left
[04:52] *** nightfrog left
[04:52] *** robertle left
[04:52] *** sauvin left
[04:52] *** Hor|zon left
[04:52] *** MilkmanDan left
[04:52] *** ribasushi left
[04:52] *** f3ew_ left
[04:52] *** gfldex_ left
[04:52] *** |oLa| left
[04:52] *** chsanch left
[04:52] *** eythian left
[04:52] *** x[LGWs4x4i]uG2N0 left
[04:52] *** kini left
[04:52] *** agentzh left
[04:53] *** hph^ joined
[04:53] *** |oLa| joined
[04:53] *** hph^ left
[04:54] *** ribasushi joined
[04:54] *** hph^ joined
[04:54] *** p6bannerbot sets mode: +v hph^

[04:54] *** p6bannerbot sets mode: +v |oLa|

[04:54] *** p6bannerbot sets mode: +v ribasushi

[04:55] *** p6bannerbot sets mode: +v hph^

[04:57] *** avar joined
[04:57] *** nightfrog joined
[04:57] *** Hor|zon joined
[04:57] *** MilkmanDan joined
[04:57] *** niven.freenode.net sets mode: +vvvv avar nightfrog Hor|zon MilkmanDan

[04:57] *** gfldex_ joined
[04:57] *** f3ew_ joined
[04:57] *** chsanch joined
[04:57] *** eythian joined
[04:57] *** niven.freenode.net sets mode: +vvvv gfldex_ f3ew_ chsanch eythian

[04:57] *** x[LGWs4x4i]uG2N0 joined
[04:57] *** agentzh joined
[04:57] *** niven.freenode.net sets mode: +vv x[LGWs4x4i]uG2N0 agentzh

[04:57] *** p6bannerbot sets mode: +v avar

[04:57] *** p6bannerbot sets mode: +v MilkmanDan

[04:57] *** p6bannerbot sets mode: +v eythian

[04:57] *** p6bannerbot sets mode: +v agentzh

[04:57] *** p6bannerbot sets mode: +v nightfrog

[04:57] *** p6bannerbot sets mode: +v Hor|zon

[04:57] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[04:57] *** p6bannerbot sets mode: +v f3ew_

[04:57] *** p6bannerbot sets mode: +v chsanch

[04:57] *** p6bannerbot sets mode: +v gfldex_

[05:07] <SmokeMachine> m: my UInt $a = 1; say $a; $a = 0; say $a; $a = -1 # Herby_

[05:07] *** itaipu joined
[05:07] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´1‚ê§Type check failed in assignment to $a; expected UInt but got Int (-1)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§0‚ê§¬ª

[05:08] *** p6bannerbot sets mode: +v itaipu

[05:12] *** jmerelo joined
[05:12] *** itaipu left
[05:13] *** p6bannerbot sets mode: +v jmerelo

[05:24] *** domidumont joined
[05:25] *** p6bannerbot sets mode: +v domidumont

[05:31] *** domidumont left
[05:33] *** zju_xcp joined
[05:33] *** zju_xcp left
[05:37] *** hph^ left
[05:37] *** hph^ joined
[05:38] *** hph^ left
[05:38] *** hph^ joined
[05:39] *** hph^ left
[05:39] *** hph^ joined
[05:40] *** hph^ left
[05:40] *** hph^ joined
[05:41] *** hph^ left
[05:41] *** hph^ joined
[05:42] *** hph^ left
[05:43] *** AlexDaniel left
[05:45] <Geth> ¬¶ doc: 4e3ce8efbe | (JJ Merelo)++ | doc/Language/haskell-to-p6.pod6

[05:45] <Geth> ¬¶ doc: Revises and rephrases, refs #2357

[05:45] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4e3ce8efbe

[05:45] <Geth> ¬¶ doc: 0a1b9c1d5e | (JJ Merelo)++ | doc/Language/5to6-nutshell.pod6

[05:45] <synopsebot> Link: https://doc.perl6.org/language/haskell-to-p6

[05:45] <Geth> ¬¶ doc: Dels already addressed comment refs #2277

[05:45] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[05:45] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/0a1b9c1d5e

[05:51] *** troys left
[05:55] <jmerelo> Working with the perl5-to-6 pages, I had this doubt and went to SO https://stackoverflow.com/q/52659124/891440

[05:56] *** fake_space_whale left
[05:58] <tyil> samcv: ^

[06:05] *** sauvin_ is now known as Sauvin

[06:06] *** domidumont joined
[06:07] *** p6bannerbot sets mode: +v domidumont

[06:10] *** rindolf joined
[06:11] *** p6bannerbot sets mode: +v rindolf

[06:14] <samcv> tyil: thx

[06:17] *** erana joined
[06:18] *** p6bannerbot sets mode: +v erana

[06:21] *** rindolf left
[06:35] *** leont joined
[06:36] *** p6bannerbot sets mode: +v leont

[06:44] *** daemon left
[06:45] *** benchable6 left
[06:45] *** jmerelo left
[06:46] *** rindolf joined
[06:46] *** AlexDaniel joined
[06:47] *** p6bannerbot sets mode: +v rindolf

[06:47] *** p6bannerbot sets mode: +v AlexDaniel

[06:47] *** daemon joined
[06:47] *** daemon left
[06:47] *** daemon joined
[06:47] *** p6bannerbot sets mode: +v daemon

[06:48] *** p6bannerbot sets mode: +v daemon

[06:50] *** AlexDaniel left
[06:51] *** lichtkind joined
[06:52] *** p6bannerbot sets mode: +v lichtkind

[06:59] <lichtkind> is HOW implemented?

[07:10] *** Sgeo_ left
[07:11] *** Sgeo joined
[07:11] *** p6bannerbot sets mode: +v Sgeo

[07:12] *** leont left
[07:18] <geekosaur> yes. but it's somewhat magic; it has to be recognized and handled by the compiler, so some "method-y" things don't work as you might expect

[07:32] *** joy_ left
[07:36] *** benchable6 joined
[07:37] *** p6bannerbot sets mode: +v benchable6

[07:39] *** attilioQZ joined
[07:39] *** attilioQZ left
[07:44] *** AlexDaniel joined
[07:45] *** p6bannerbot sets mode: +v AlexDaniel

[07:45] <AlexDaniel> squashable6: status

[07:45] <squashable6> AlexDaniel, ‚ö†üçï Next SQUASHathon in ‚âà2 hours (2018-10-06 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[07:48] *** reportable6 left
[07:48] *** shareable6 left
[07:48] *** committable6 left
[07:48] *** reportable6 joined
[07:48] *** kensanata joined
[07:48] *** p6bannerbot sets mode: +v kensanata

[07:48] *** bisectable6 joined
[07:48] *** shareable6 joined
[07:48] *** undersightable6 left
[07:48] *** committable6 joined
[07:48] *** ChanServ sets mode: +v committable6

[07:48] *** evalable6 left
[07:48] *** undersightable6 joined
[07:48] *** ChanServ sets mode: +v undersightable6

[07:48] *** releasable6 joined
[07:48] *** evalable6 joined
[07:49] *** p6bannerbot sets mode: +v reportable6

[07:49] *** p6bannerbot sets mode: +v bisectable6

[07:49] *** p6bannerbot sets mode: +v shareable6

[07:49] *** p6bannerbot sets mode: +v committable6

[07:49] *** p6bannerbot sets mode: +v undersightable6

[07:49] *** p6bannerbot sets mode: +v releasable6

[07:49] *** p6bannerbot sets mode: +v evalable6

[07:55] *** cognominal-p6 left
[07:58] *** [particle] left
[07:59] *** HaraldJoerg joined
[07:59] *** robertle_ left
[08:00] *** p6bannerbot sets mode: +v HaraldJoerg

[08:01] *** robertle joined
[08:02] *** p6bannerbot sets mode: +v robertle

[08:05] *** rindolf left
[08:06] *** [particle] joined
[08:07] *** p6bannerbot sets mode: +v [particle]

[08:11] *** saki joined
[08:11] *** saki left
[08:11] *** rindolf joined
[08:12] *** chsanch left
[08:12] *** p6bannerbot sets mode: +v rindolf

[08:13] *** chsanch joined
[08:14] *** p6bannerbot sets mode: +v chsanch

[08:15] *** robertle left
[08:16] *** joy_ joined
[08:16] *** p6bannerbot sets mode: +v joy_

[08:21] *** robertle joined
[08:21] *** p6bannerbot sets mode: +v robertle

[08:27] *** saki joined
[08:28] *** robertle left
[08:28] *** p6bannerbot sets mode: +v saki

[08:34] *** saki left
[08:35] <timotimo> i'll finally set up squashathon stuff

[08:36] *** saki joined
[08:36] *** saki left
[08:37] *** robertle joined
[08:38] *** p6bannerbot sets mode: +v robertle

[08:41] <squashable6> Webhook for timo/SDL2_raw-p6 is now active! Keep it logically awesome.

[08:41] <timotimo> i hope this is a good idea :P

[08:44] <lichtkind> geekosaur, thanks a lot

[08:45] *** [particle]1 joined
[08:46] *** p6bannerbot sets mode: +v [particle]1

[08:46] *** [particle] left
[08:48] *** MasterDuke left
[08:50] <timotimo> there's no mention of what tag to use for issues on the squashathon wiki page; do we just use "hacktoberfest"?

[08:50] <AlexDaniel> timotimo: yes that's a good idea

[08:51] *** dalek left
[08:51] <timotimo> to add it to the wiki, or just to do that?

[08:51] <AlexDaniel> timotimo: both :)

[08:52] <timotimo> https://github.com/timo/SDL2_raw-p6/issues/10 - does this seem like a good issue?

[08:54] <AlexDaniel> maybe!

[08:58] *** [particle]1 left
[08:59] <timotimo> .tell jmerelo can you figure out why there's a faulty line in the river csv file?

[08:59] <yoleaux> timotimo: I'll pass your message to jmerelo.

[09:07] <AlexDaniel> squashable6: status

[09:07] <squashable6> AlexDaniel, ‚ö†üçï Next SQUASHathon is in 52 minutes (2018-10-06 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[09:07] <squashable6> Webhook for timo/json_fast is now active! Keep it logically awesome.

[09:07] <timotimo> ah, i'm glad i've still started with it before it officially began

[09:24] *** [particle] joined
[09:25] *** p6bannerbot sets mode: +v [particle]

[09:33] *** pmurias joined
[09:33] *** p6bannerbot sets mode: +v pmurias

[09:40] <jkramer> What's the squashaton theme this time?

[09:41] *** pmurias left
[09:41] <jkramer> Just look for modules that need help and help?

[09:42] *** pmurias joined
[09:42] *** p6bannerbot sets mode: +v pmurias

[09:42] *** AlexDaniel left
[09:49] *** pecastro joined
[09:50] *** p6bannerbot sets mode: +v pecastro

[09:55] <timotimo> yeah, pretty much

[09:56] *** [particle]1 joined
[09:56] *** p6bannerbot sets mode: +v [particle]1

[09:57] <jkramer> Ah ok I found the repo list :)

[09:57] *** [particle] left
[10:00] *** xinming_ left
[10:05] <timotimo> i didn't put mine in yet

[10:07] <timotimo> it seems like AlexDaniel did it for me

[10:07] <timotimo> or maybe a script?

[10:21] *** sena_kun joined
[10:22] *** p6bannerbot sets mode: +v sena_kun

[10:31] *** Sgeo left
[10:40] *** ExtraCrispy joined
[10:41] *** p6bannerbot sets mode: +v ExtraCrispy

[10:41] <squashable6> üçï timo++ labeled issue ‚Äúfactor out framerate info from examples‚Äù (enhancement): https://github.com/timo/SDL2_raw-p6/issues/11

[10:41] <squashable6> üçïüçïüçï  First contribution by timo++! ‚ô•

[10:41] <squashable6> üçï timo++ opened issue ‚Äúfactor out framerate info from examples‚Äù: https://github.com/timo/SDL2_raw-p6/issues/11

[10:41] <squashable6> üçï timo++ labeled issue ‚Äúfactor out framerate info from examples‚Äù (help wanted): https://github.com/timo/SDL2_raw-p6/issues/11

[10:41] <squashable6> üçï timo++ labeled issue ‚Äúfactor out framerate info from examples‚Äù (hacktoberfest): https://github.com/timo/SDL2_raw-p6/issues/11

[10:42] <timotimo> it hath started

[10:55] *** AlexDaniel joined
[10:55] *** p6bannerbot sets mode: +v AlexDaniel

[10:57] <buggable> New CPAN upload: Getopt-Advance-1.1.3.tar.gz by ALOREN http://modules.perl6.org/dist/Getopt::Advance:cpan:ALOREN

[10:57] <erana> I finished the movement code of my pharo Zelda 1. I am wondering if I can make a zelda-o-matic

[10:57] <yoleaux> 4 Oct 2018 19:57Z <[Coke]> erana: FYI, a perl mongers group != "the perl foundation".

[10:58] <erana> Should read lots of AI books then :-)

[11:00] <AlexDaniel> timotimo: I do it manually, there are not too many repos for it to be a problem

[11:00] <timotimo> OK

[11:00] <AlexDaniel> though I wish it was a problem

[11:01] <timotimo> sorry about that :(

[11:01] <AlexDaniel> wait, why is that your fault? :)

[11:02] <timotimo> i could have more modules, and i could have put up more issues for beginners in them, too :)

[11:02] <timotimo> or i could have blasted the squashathon message on all of my social media channels

[11:05] <squashable6> üçï timo++ labeled issue ‚Äúbuild a little benchmark suite‚Äù (enhancement): https://github.com/timo/json_fast/issues/48

[11:05] <squashable6> üçï timo++ labeled issue ‚Äúbuild a little benchmark suite‚Äù (hacktoberfest): https://github.com/timo/json_fast/issues/48

[11:05] <squashable6> üçï timo++ opened issue ‚Äúbuild a little benchmark suite‚Äù: https://github.com/timo/json_fast/issues/48

[11:05] <squashable6> üçï timo++ labeled issue ‚Äúbuild a little benchmark suite‚Äù (help wanted): https://github.com/timo/json_fast/issues/48

[11:05] <timotimo> i can't eat all this digital pizza

[11:05] <timotimo> also, maybe "opened issue" should come before "labeled issue" :P

[11:06] <AlexDaniel> well, for most people Saturday is tomorrow, so you can still create ten more modules and run a full blown social media marketing campaign :)

[11:06] <timotimo> let me go ahead and buy a thousand twitter bots

[11:07] <AlexDaniel> yesterday I almost got my changes to Sake committed, that's after what‚Ä¶ two months of them being shelved? :S

[11:07] <AlexDaniel> but maybe today!

[11:07] <AlexDaniel> and if that happens, there will be some LHFs :)

[11:09] *** abraxxa left
[11:10] <squashable6> üçï timo++ opened issue ‚Äúadd an example that show‚Ä¶‚Äù: https://github.com/timo/SDL2_raw-p6/issues/12

[11:10] <squashable6> üçï timo++ labeled issue ‚Äúadd an example that show‚Ä¶‚Äù (hacktoberfest): https://github.com/timo/SDL2_raw-p6/issues/12

[11:10] <squashable6> üçï timo++ labeled issue ‚Äúadd an example that show‚Ä¶‚Äù (help wanted): https://github.com/timo/SDL2_raw-p6/issues/12

[11:12] *** kurahaupo left
[11:13] *** araraloren joined
[11:14] *** p6bannerbot sets mode: +v araraloren

[11:18] <tyil> I have this in a signature: `IO::Path:D $target where *.f && *.extension eq "zip",`

[11:18] <tyil> when I Run the script, it warns Useless use of "eq" in expression ".extension eq \"zip\"" in sink context

[11:19] <tyil> but I want to ensure the extension is zip

[11:19] <squashable6> Webhook for lizmat/P5pack is now active! Half measures are as bad as nothing at all.

[11:20] <sena_kun> tyil, you probably want something like...

[11:20] <sena_kun> subset B of IO::Path:D where { .f && .extension eq "zip" }

[11:20] <tyil> I want to make subsets of it later, yes

[11:20] <sena_kun> ah, sorry, well, subset thing is unnecessary.

[11:20] <sena_kun> I just was lazy to type a sub

[11:20] <tyil> oh

[11:20] <tyil> the accolades

[11:20] <sena_kun> I mean, your `where` condition probably should have brackets

[11:21] <sena_kun> At least it does not gives a warning. :)

[11:21] <tyil> Malformed double closure;

[11:21] <sena_kun> hmm

[11:21] <tyil> `IO::Path:D $target where { *.f && *.extension eq "zip" }`

[11:21] <tyil> the * should make it a closure already

[11:22] <squashable6> üçï lizmat++ labeled issue ‚ÄúNeed more tests‚Äù (Hacktoberfest): https://github.com/lizmat/P5pack/issues/5

[11:22] <squashable6> üçïüçïüçï  First contribution by lizmat++! ‚ô•

[11:22] <tyil> I could use $_ isntead of *, but those are slower 

[11:22] <sena_kun> hmm, it is broken in sub case for me too.

[11:22] <tyil> it does seem to work as expected, apart from the warning that the `eq` is apparently useless

[11:23] <sena_kun> then can't help, sorry. :/

[11:23] <tyil> :(

[11:24] <tyil> maybe someone else knows

[11:24] <tyil> otherwise I'll post it on SO later

[11:24] <araraloren> evalable6: sub f(IO::Path:D $target where *.f && *.extension eq "zip") { }; say f ".".IO;

[11:24] <evalable6> araraloren, rakudo-moar 687a3cbb0: OUTPUT: ¬´(exit code 1) WARNINGS for /tmp/WKZTVG9P1A:‚ê§Useless use of "eq" in expression ".extension ‚Ä¶¬ª

[11:24] <evalable6> araraloren, Full output: https://gist.github.com/7c74c45d8f5823783a02ccc12615602b

[11:24] <araraloren> evalable6: sub f(IO::Path:D $target where { .f && .extension eq "zip" }) { }; say f ".".IO;

[11:24] <evalable6> araraloren, rakudo-moar 687a3cbb0: OUTPUT: ¬´(exit code 1) Constraint type check failed in binding to parameter '$target'; expected ano‚Ä¶¬ª

[11:24] <evalable6> araraloren, Full output: https://gist.github.com/86d666b5c36c6211d0ec18fb7df69402

[11:24] <araraloren> evalable6: sub f(IO::Path:D $target where { *.f && *.extension eq "zip" }) { }; say f ".".IO;

[11:24] <evalable6> araraloren, rakudo-moar 687a3cbb0: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/ZBvMdksnWZ‚ê§Malform‚Ä¶¬ª

[11:24] <evalable6> araraloren, Full output: https://gist.github.com/3448140b3df245738f0cf5277c3f0986

[11:27] <lizmat> tyil: you're mixing up WhateverCode and just a Block

[11:28] <lizmat> m: dd (* + *)(42,666)   # using two *'s means you need 2 params

[11:28] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´708‚ê§¬ª

[11:28] <tyil> the error is not clear that that's the issue at all

[11:28] <tyil> :/

[11:28] <lizmat> m: {* + *}(42,666)

[11:29] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed double closure; WhateverCode is already a closure without curlies, so either remove the curlies or use valid parameter syntax instead of *‚ê§at <tmp>:1‚ê§------> 3{* + *}7‚èè5(42,666)‚ê§  ‚Ä¶¬ª

[11:29] *** noganex left
[11:29] <tyil> that's a different error :(

[11:29] <lizmat> m: dd {* && *}(42,666)

[11:29] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´Too many positionals passed; expected 0 or 1 arguments but got 2‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[11:30] <lizmat> well, submit an issue with expectancy  :-)

[11:31] <araraloren> so, what's the * && * mean ?

[11:31] <araraloren> tow or one Whatever ?

[11:31] <araraloren> two

[11:31] <lizmat> I have no idea

[11:31] <araraloren> hmm

[11:31] <lizmat> --target=ast shows that it is anding two Whatever type objects

[11:32] <lizmat> so no magic whatsoever

[11:35] *** ChoHag joined
[11:36] *** p6bannerbot sets mode: +v ChoHag

[11:40] *** thegass joined
[11:41] <AlexDaniel> speaking of two or one Whatever, how the hell does that work? https://github.com/AlexDaniel/6lang-golf-cheatsheet/pull/4/files#diff-04c6e90faac2675aa89e2176d2eec7d8R168

[11:41] <AlexDaniel> m: 1‚Ä¶*.say√ó*>10

[11:41] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´Potential difficulties:‚ê§    Useless use of ‚Ä¶ in sink context‚ê§    at <tmp>:1‚ê§    ------> 031‚Ä¶7‚èè5*.say√ó*>10‚ê§1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§¬ª

[11:42] <AlexDaniel> it prints numbers from 1 to 10 (though with a warning), but why?

[11:43] *** tobs` joined
[11:43] *** p6bannerbot sets mode: +v tobs`

[11:46] *** thegass left
[11:50] <timotimo> because it evaluates the rhs of ‚Ä¶ for every value to see if it should be kept

[11:50] <AlexDaniel> timotimo: yes, but, there are two `*`, right?

[11:51] <timotimo> yeah

[11:51] <AlexDaniel> and both of them represent the same value?

[11:51] <timotimo> i assume it'll pass the same value for each

[11:51] <timotimo> like it does with postcircumfix:<[ ]>

[11:52] <AlexDaniel> so the WhateverCode in question still has two parameters, but it passes the same value to both?

[11:53] <timotimo> yeah, that's what i suspect

[12:01] *** kensanata left
[12:04] <tbrowder__> hi, #perl6

[12:06] <tyil> hi tbrowder__ :D

[12:06] <lizmat> hmmm... looks like none of the CX:: classes are documented :-(

[12:06] <tbrowder__> grammar question: when one declares a :my var on a token, does that var and its value stay with a match?

[12:06] <tbrowder__> tyil: hi, getting close to pod data blocks

[12:07] <tyil> :D

[12:07] <tyil> nice

[12:08] <tbrowder__> i should say closer, still lots of build cycles ahead

[12:10] <tyil> I'm not in a hurry

[12:10] <tyil> I have plenty other things to do lately 

[12:10] <jnthn> tbrowder__: No, the variable is just a normal lexical variable (or dynamic if `:my $*foo = ...`)

[12:10] <timotimo> tbrowder__: it's a lexically scoped variable, so it doesn't

[12:10] <jnthn> Not associated with the Match object in any way

[12:11] <timotimo> jnthn: dynamic vars defined inside a regex like that won't survive into the action method, right?

[12:11] <jnthn> Yes, they will :)

[12:12] <timotimo> nice

[12:12] <jnthn> Because the action method is called from the regex

[12:12] <timotimo> very good

[12:12] *** pmurias left
[12:12] <jnthn> I've used that in a few places :)

[12:12] *** pmurias joined
[12:12] *** p6bannerbot sets mode: +v pmurias

[12:12] <tobs`> I'd like to start a Proc::Async and ideally return a Supply which transforms its stdout. I can't see how I can simultaneously arrange for an exception to be thrown in case the program dies instead of producing output.

[12:13] <tobs`> https://hastebin.com/pawitaboge.pl is a start

[12:13] <timotimo> tobs`: sounds like you want a supply block, or do you want to suck up all output until it's finished and only then decide whether to emit the data or throw an exception?

[12:13] <tbrowder__> on

[12:14] <jnthn> Yes, supply block, and then you can die in there and it'll propagate the exception to the subscriber of the supply you produce

[12:14] <tobs`> timotimo: I very much don't want to wait

[12:14] <tbrowder__> while on grammars, in rakudo nqp, can we use make just as in p6 land?

[12:15] <tobs`> ahh, very nice! Thank you

[12:15] *** ChoHag left
[12:17] <tbrowder__> i need easy access to a match value later for a test, and i would like to ensure it has a zero value even though it was not matched

[12:18] <tbrowder__> that probably doesn‚Äôt make sense.,.

[12:19] <tbrowder__> i‚Äôm trying to get info out of a pod_configuration match. the key/value pairs, if they exist.

[12:20] <tbrowder__> i‚Äôve been able to, in some cases but not all, rely on stringification, but that seems to be blind luck

[12:28] <tbrowder__> in rakudo nqp if i create some dynamic grammar vars to hold special values for use during object construction, is that an ok practice?

[12:30] <timotimo> sure

[12:36] *** Sgeo joined
[12:37] *** p6bannerbot sets mode: +v Sgeo

[12:37] *** pmurias left
[12:37] *** pmurias joined
[12:37] *** p6bannerbot sets mode: +v pmurias

[12:38] <squashable6> üçï FCO++ opened issue ‚ÄúRefactor translate of insert‚Äù: https://github.com/FCO/Red/issues/45

[12:38] <squashable6> üçïüçïüçï  First contribution by FCO++! ‚ô•

[12:38] <squashable6> üçï FCO++ opened issue ‚ÄúRefactor translate of update‚Äù: https://github.com/FCO/Red/issues/46

[12:38] <squashable6> üçï FCO++ opened issue ‚ÄúRefactor translate of delete‚Äù: https://github.com/FCO/Red/issues/47

[12:38] <squashable6> üçï FCO++ opened issue ‚ÄúRefactor translate of select‚Äù: https://github.com/FCO/Red/issues/48

[13:12] <tbrowder__> timotimo: thnx

[13:12] *** mahafyi_ joined
[13:13] *** p6bannerbot sets mode: +v mahafyi_

[13:17] <buggable> New CPAN upload: DB-Migration-Simple-1.0.tar.gz by MBP https://cpan.metacpan.org/authors/id/M/MB/MBP/Perl6/DB-Migration-Simple-1.0.tar.gz

[13:31] *** [particle]1 left
[13:31] *** andrzejku left
[13:31] *** [particle] joined
[13:32] *** p6bannerbot sets mode: +v [particle]

[13:32] *** molaf joined
[13:33] *** p6bannerbot sets mode: +v molaf

[13:39] *** saki joined
[13:39] *** saki left
[13:43] <Herby_> SmokeMachine: cool, that's the first time I think I've seen :UInt: used in p6 code

[13:45] <Herby_> I wonder if there is a performance difference between: has Uint $.number, and has $.number where * > 0

[13:46] *** telex left
[13:49] *** saki joined
[13:49] *** saki left
[13:52] *** helloworld joined
[13:52] *** p6bannerbot sets mode: +v helloworld

[13:53] *** ChoHag joined
[13:53] *** p6bannerbot sets mode: +v ChoHag

[13:54] *** khisanth_ left
[13:54] *** Khisanth joined
[13:55] *** p6bannerbot sets mode: +v Khisanth

[13:56] *** helloworld left
[13:59] <mahafyi_> How should one set a script time out, like if execution is more than 10 seconds, exit the script?

[14:00] <mahafyi_> https://docs.perl6.org/routine/throttle is the correct one?

[14:03] *** itaipu joined
[14:04] *** ChoHag left
[14:04] *** p6bannerbot sets mode: +v itaipu

[14:05] <mahafyi_> or use `now` and use a while or until ?

[14:07] *** mahafyi_ is now known as mahafyi

[14:08] *** mahafyi left
[14:09] <dogbert2> mahafyi_: have you checked https://docs.perl6.org/type/Promise#method_in

[14:09] <dogbert2> ah, he left

[14:15] *** molaf left
[14:25] *** saki joined
[14:25] <SmokeMachine> Herby_: I don‚Äôt think so, (but haven‚Äôt tried). But UInt is just a subset of Int... https://github.com/rakudo/rakudo/blob/master/src/core/Int.pm6#L7

[14:26] *** p6bannerbot sets mode: +v saki

[14:27] *** mahafyi joined
[14:28] *** p6bannerbot sets mode: +v mahafyi

[14:28] *** telex joined
[14:29] *** p6bannerbot sets mode: +v telex

[14:31] <mahafyi> dogbert2, thanks. 

[14:38] *** tobs` left
[14:38] <squashable6> üçï sylints++ opened issue ‚ÄúHow to install?‚Äù: https://github.com/FCO/Red/issues/49

[14:38] <squashable6> üçïüçïüçï  First contribution by sylints++! ‚ô•

[14:40] <SmokeMachine> Sure! I didn‚Äôt do that yet!!!

[14:52] <squashable6> üçï sylints++ opened issue ‚ÄúFailed test on installation‚Äù: https://github.com/JJ/p6-river/issues/4

[14:52] <squashable6> üçï FCO++ closed issue ‚ÄúHow to install?‚Äù: https://github.com/FCO/Red/issues/49

[14:54] <squashable6> üçï FCO++ wrote a comment on ‚ÄúHow to install?‚Äù: https://github.com/FCO/Red/issues/49#issuecomment-427393709

[14:55] <squashable6> üçï FCO++ labeled issue ‚ÄúRefactor translate of select‚Äù (hacktoberfest): https://github.com/FCO/Red/issues/48

[14:55] <squashable6> üçï FCO++ labeled issue ‚ÄúRefactor translate of delete‚Äù (hacktoberfest): https://github.com/FCO/Red/issues/47

[14:55] *** natrys joined
[14:55] <squashable6> üçï FCO++ labeled issue ‚ÄúRefactor translate of update‚Äù (hacktoberfest): https://github.com/FCO/Red/issues/46

[14:55] <squashable6> üçï FCO++ labeled issue ‚ÄúRefactor translate of insert‚Äù (hacktoberfest): https://github.com/FCO/Red/issues/45

[14:56] *** p6bannerbot sets mode: +v natrys

[15:02] *** natrys left
[15:08] <timotimo> Herby_: "has UInt $.number" is certainly slower, perhaps a whole lot

[15:13] <SmokeMachine> timotimo: really? Why?

[15:13] <timotimo> because it's implemented with a "where" clause

[15:13] *** SHODAN joined
[15:13] *** p6bannerbot sets mode: +v SHODAN

[15:13] *** pmurias left
[15:14] <timotimo> m: class A { has UInt $.number is rw }; my $a = A.new; for ^100_000 { $a.number++ }; say now - INIT now

[15:14] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´0.0878734‚ê§¬ª

[15:14] <timotimo> m: class A { has $.number is rw }; my $a = A.new; for ^100_000 { $a.number++ }; say now - INIT now

[15:14] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´0.0267961‚ê§¬ª

[15:14] <SmokeMachine> As the other option he wrote

[15:14] <timotimo> m: class A { has UInt $.number is rw }; my $a = A.new; for ^1_000_000 { $a.number++ }; say now - INIT now

[15:14] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´0.6663289‚ê§¬ª

[15:14] <timotimo> m: class A { has  $.number is rw }; my $a = A.new; for ^1_000_000 { $a.number++ }; say now - INIT now

[15:14] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´0.10356569‚ê§¬ª

[15:15] <timotimo> rather a bit slower, but at least less than 10x

[15:15] *** pmurias joined
[15:15] *** p6bannerbot sets mode: +v pmurias

[15:15] <SmokeMachine> I think he was comparing `UInt $` with `Int $ with * > 0`, wasn‚Äôt it?

[15:17] <SmokeMachine> m: class A { has¬† $.number where * > 0 is rw }; my $a = A.new; for ^1_000_000 { $a.number++ }; say now - INIT now

[15:17] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3class A { has¬† $.number where * > 07‚èè5 is rw }; my $a = A.new; for ^1_000_000 ‚ê§    expecting any of:‚ê§        constraint‚ê§        infix‚ê§        in‚Ä¶¬ª

[15:17] <timotimo> oh, i didn't seew hat happened before that answer

[15:18] <squashable6> üçï JJ++ wrote a comment on ‚ÄúFailed test on installation‚Äù: https://github.com/JJ/p6-river/issues/4#issuecomment-427401678

[15:18] <squashable6> üçïüçïüçï  First contribution by JJ++! ‚ô•

[15:18] <squashable6> üçï JJ++ wrote a comment on ‚ÄúFailed test on installation‚Äù: https://github.com/JJ/p6-river/issues/4#issuecomment-427401741

[15:18] <SmokeMachine> m: class A is rw { has¬† $.number where * > 0 }; my $a = A.new; for ^1_000_000 { $a.number++ }; say now - INIT now

[15:18] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´0.7674835‚ê§¬ª

[15:19] <squashable6> üçï sylints++ wrote a comment on ‚ÄúHow to install?‚Äù: https://github.com/FCO/Red/issues/49#issuecomment-427402247

[15:27] *** st_elmo joined
[15:27] <squashable6> üçï jonathanstowe++ wrote a comment on ‚Äúto-json doesn't like undefined values‚Äù: https://github.com/timo/json_fast/issues/4#issuecomment-427404769

[15:27] <squashable6> üçïüçïüçï  First contribution by jonathanstowe++! ‚ô•

[15:28] *** p6bannerbot sets mode: +v st_elmo

[15:28] *** fake_space_whale joined
[15:29] *** domidumont left
[15:29] *** p6bannerbot sets mode: +v fake_space_whale

[15:30] <squashable6> üçï jonathanstowe++ wrote a comment on ‚ÄúDocu missing on single SQL command limitation?‚Äù: https://github.com/perl6/DBIish/issues/133#issuecomment-427405486

[15:30] <squashable6> üçï FCO++ wrote a comment on ‚ÄúHow to install?‚Äù: https://github.com/FCO/Red/issues/49#issuecomment-427405685

[15:30] <squashable6> üçï FCO++ reopened issue ‚ÄúHow to install?‚Äù: https://github.com/FCO/Red/issues/49

[15:31] <squashable6> üçï jonathanstowe++ labeled issue ‚ÄúDocu missing on single SQL command limitation?‚Äù (Squashathon): https://github.com/perl6/DBIish/issues/133

[15:35] *** rbtBM joined
[15:35] *** rbtBM left
[15:38] <squashable6> üçï sylints++ wrote a comment on ‚ÄúHow to install?‚Äù: https://github.com/FCO/Red/issues/49#issuecomment-427408307

[15:40] *** dotdotdot left
[15:40] <squashable6> üçï timo++ wrote a comment on ‚Äúto-json doesn't like undefined values‚Äù: https://github.com/timo/json_fast/issues/4#issuecomment-427409067

[15:42] <DrForr> Bummer. Are logs still public?

[15:47] <timotimo> DrForr: we have the logs on colabti.org

[15:47] <squashable6> üçï FCO++ wrote a comment on ‚ÄúHow to install?‚Äù: https://github.com/FCO/Red/issues/49#issuecomment-427411103

[15:49] <squashable6> üçï sylints++ wrote a comment on ‚ÄúFailed test on installation‚Äù: https://github.com/JJ/p6-river/issues/4#issuecomment-427411717

[15:50] <squashable6> üçï sylints++ opened pull request ‚Äúsmall tweak to example‚Äù: https://github.com/JJ/p6-river/pull/5

[15:52] <squashable6> üçï JJ++ merged pull request ‚Äúsmall tweak to example‚Äù: https://github.com/JJ/p6-river/pull/5

[15:53] *** molaf joined
[15:54] <squashable6> üçï JJ++ wrote a comment on ‚ÄúFailed test on installation‚Äù: https://github.com/JJ/p6-river/issues/4#issuecomment-427413405

[15:54] *** p6bannerbot sets mode: +v molaf

[16:00] *** emerson left
[16:01] <squashable6> üçï sylints++ wrote a comment on ‚ÄúFailed test on installation‚Äù: https://github.com/JJ/p6-river/issues/4#issuecomment-427415786

[16:01] *** emerson joined
[16:01] *** p6bannerbot sets mode: +v emerson

[16:04] <squashable6> üçï JJ++ wrote a comment on ‚ÄúFailed test on installation‚Äù: https://github.com/JJ/p6-river/issues/4#issuecomment-427416740

[16:14] *** Bucciarati left
[16:15] *** Bucciarati joined
[16:15] <Herby_> vague question here but at what point should I look at packaging my module for the perl 6 ecosystem?

[16:15] <Herby_> so people can: zef install <module>

[16:16] *** p6bannerbot sets mode: +v Bucciarati

[16:16] <Herby_> versus people cloning the repo and running it with -Ilib

[16:17] <Herby_> I ported a library to Perl 6 that parses torrent file names to extract titles and relevant bits.

[16:17] <Herby_> mainly as an exercise to learn grammars

[16:20] <timotimo> i'd say it's entirely up to you, you can do it now, or you can do it at whatever point

[16:21] <Herby_> ok. I didn't know if it needed to be polished package before adding it to the ecosystem. I've never really contributed to an ecosystem before :)

[16:21] <timotimo> nah, there's a couple unpolished packages in there, too ;)

[16:26] *** TimToady left
[16:26] *** TimToady joined
[16:26] *** barjavel.freenode.net sets mode: +v TimToady

[16:26] *** p6bannerbot sets mode: +v TimToady

[16:27] <Kaiepi> oh sweet the squashathon is still going on 

[16:27] <Kaiepi> where's the repo with all the issues?

[16:30] <Kaiepi> specifically which modules need fixing

[16:31] <timotimo> there's a list of modules that participate

[16:31] <timotimo> i don't know if we have one list of all issues, but it'd be cool if we did

[16:31] *** araraloren left
[16:31] *** patrickb joined
[16:31] <Herby_> Kaiepi: this might get you started https://github.com/perl6/ecosystem/wiki/SQUASHathon

[16:31] <timotimo> https://github.com/perl6/ecosystem/wiki/SQUASHathon#participating-repos

[16:31] <timotimo> ah, yes

[16:32] *** p6bannerbot sets mode: +v patrickb

[16:32] <timotimo> https://github.com/search?l=Perl6&q=label%3Ahacktoberfest+state%3Aopen+type%3Aissue&type=Issues

[16:33] <Kaiepi> anyone interested in solving some issues in Net::Telnet?

[16:34] <TimToady> m: constant @fac = flat 1, [\*] 1..*; say @fac[5]

[16:34] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´120‚ê§¬ª

[16:36] *** robertle left
[16:38] <squashable6> Webhook for Kaiepi/p6-Net-Telnet is now active! Speak like a human.

[16:39] <Kaiepi> get hacking! :) 

[16:39] <Kaiepi> https://github.com/kaiepi/p6-Net-Telnet/issues

[16:40] <squashable6> üçï Kaiepi++ wrote a comment on ‚ÄúNet::Telnet::Chunk is insecure‚Äù: https://github.com/Kaiepi/p6-Net-Telnet/issues/5#issuecomment-427427113

[16:40] <squashable6> üçïüçïüçï  First contribution by Kaiepi++! ‚ô•

[16:42] *** xi- joined
[16:42] *** st_elmo left
[16:42] *** domidumont joined
[16:43] *** p6bannerbot sets mode: +v xi-

[16:43] *** p6bannerbot sets mode: +v domidumont

[16:45] *** kbloom joined
[16:45] *** p6bannerbot sets mode: +v kbloom

[16:47] *** noganex joined
[16:48] *** Michael_S left
[16:48] *** mahafyi left
[16:48] *** p6bannerbot sets mode: +v noganex

[16:48] <kbloom> since this is a syntax error

[16:48] <kbloom> m: 123 456 789 

[16:48] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 031237‚èè5 456 789‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        statement end‚ê§        statement modifier‚ê§        statement ‚Ä¶¬ª

[16:48] <kbloom> could this syntax be used for digit grouping?

[16:48] <timotimo> is _ not good enough?

[16:48] <jnthn> m: say 123_456_789

[16:48] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´123456789‚ê§¬ª

[16:49] <kbloom> it's better than most languages, i'm only raising the possibility of an alternative

[16:49] <timotimo> TTIAR errors are often a very good source of "figuring out the user made some mistake"

[16:49] <kbloom> i do find spaces cleaner

[16:50] <kbloom> timotimo: the error would presumably still apply in cases where it's not a number on both sides of a single space

[16:53] <El_Che> dirk gently is crazy

[16:53] <timotimo> you can of course write a slang for this :)

[16:53] <El_Che> oops

[16:53] <kbloom> i'm considering that too...

[16:54] <kbloom> just wondering if it's a good fit for the base language

[17:03] <DrForr> Not being indexed by Google, eh. Something to lok at tonight.

[17:07] *** jmerelo joined
[17:08] *** p6bannerbot sets mode: +v jmerelo

[17:12] <DrForr> I just looked at my hit counts and figured I ws being really boring.

[17:13] *** jast joined
[17:14] *** p6bannerbot sets mode: +v jast

[17:15] <timotimo> i'm getting the impression that i'm missing half the conversation here

[17:15] <timotimo> DrForr: what are you talking about?

[17:16] <DrForr> What the logs mentioned that someone had said to me.

[17:16] <DrForr> Your nick, IRC :)

[17:16] <DrForr> Oo, no, sorry.

[17:16] <DrForr> mantovani.

[17:18] *** kbloom left
[17:18] *** HaraldJoerg left
[17:19] <squashable6> üçï JJ++ wrote a comment on ‚ÄúNet::Telnet::Chunk is insecure‚Äù: https://github.com/Kaiepi/p6-Net-Telnet/issues/5#issuecomment-427437862

[17:19] <timotimo> ah

[17:19] <timotimo> now i see it

[17:19] <timotimo> had to scroll back a few days

[17:20] <DrForr> WEll, I have been offline a bit.

[17:23] *** saki left
[17:24] <squashable6> üçï FCO++ wrote a comment on ‚ÄúHow to install?‚Äù: https://github.com/FCO/Red/issues/49#issuecomment-427439325

[17:25] <squashable6> üçï JJ++ wrote a comment on ‚ÄúNeed more tests‚Äù: https://github.com/lizmat/P5pack/issues/5#issuecomment-427439732

[17:27] *** saki joined
[17:28] *** p6bannerbot sets mode: +v saki

[17:29] <squashable6> üçï lizmat++ wrote a comment on ‚ÄúNeed more tests‚Äù: https://github.com/lizmat/P5pack/issues/5#issuecomment-427440907

[17:29] <squashable6> üçï Kaiepi++ wrote a comment on ‚ÄúNet::Telnet::Chunk is insecure‚Äù: https://github.com/Kaiepi/p6-Net-Telnet/issues/5#issuecomment-427440938

[17:32] <squashable6> üçï JJ++ opened pull request ‚ÄúUniforms sub name‚Äù: https://github.com/lizmat/P5pack/pull/6

[17:32] *** splay joined
[17:32] <squashable6> üçï Kaiepi++ wrote a comment on ‚ÄúAdopt tests from "parsin‚Ä¶‚Äù: https://github.com/timo/json_fast/issues/47#issuecomment-427441884

[17:33] *** p6bannerbot sets mode: +v splay

[17:33] *** splay left
[17:37] <Kaiepi> protip: if you use the us altgr intl keyboard layout, alt-gr+[ and alt-gr+] let you enter ¬´ and ¬ª respectively much easier

[17:38] <tyil> if you're using vim, you can make it so "<<" converts to ¬´ automatically

[17:41] <squashable6> üçï JJ++ wrote a comment on ‚ÄúNet::Telnet::Chunk is insecure‚Äù: https://github.com/Kaiepi/p6-Net-Telnet/issues/5#issuecomment-427444171

[17:45] <Kaiepi> tyil i do have that plugin installed, but i don't like having to wrap >> in spaces to get the replacement to work

[17:45] <timotimo> can't you also ctrl-k >> for that?

[17:45] <timotimo> works in myvim

[17:45] <timotimo> my vim*

[17:52] <Kaiepi> oh it does!

[17:52] <Kaiepi> thanks

[17:53] <DrForr> Sounds like something for the docs :)

[17:55] *** pecastro_ joined
[17:55] <AlexDaniel> `C-x 8 <` in emacs

[17:55] *** pecastro left
[17:55] *** p6bannerbot sets mode: +v pecastro_

[17:57] <AlexDaniel> `<Multi_key> <less> <less>` on any debian system with en_US.UTF-8 locale

[18:04] <squashable6> üçï JJ++ opened pull request ‚ÄúFix typo‚Äù: https://github.com/lizmat/P5pack/pull/7

[18:05] *** Kaiepi left
[18:07] *** Kaiepi joined
[18:08] *** p6bannerbot sets mode: +v Kaiepi

[18:11] *** jmerelo left
[18:12] <squashable6> üçï lizmat++ merged pull request ‚ÄúFix typo‚Äù: https://github.com/lizmat/P5pack/pull/7

[18:12] <squashable6> üçï lizmat++ merged pull request ‚ÄúUniforms sub name‚Äù: https://github.com/lizmat/P5pack/pull/6

[18:12] <squashable6> üçï lizmat++ wrote a comment on ‚ÄúFix typo‚Äù: https://github.com/lizmat/P5pack/pull/7#issuecomment-427453630

[18:26] *** pecastro_ left
[18:27] *** pecastro joined
[18:28] *** p6bannerbot sets mode: +v pecastro

[18:34] *** saki left
[18:34] *** saki joined
[18:34] *** pecastro left
[18:35] *** p6bannerbot sets mode: +v saki

[18:37] *** leont joined
[18:38] *** pecastro joined
[18:38] *** p6bannerbot sets mode: +v leont

[18:38] *** p6bannerbot sets mode: +v pecastro

[18:41] *** Xliff left
[18:47] *** mahafyi joined
[18:47] *** p6bannerbot sets mode: +v mahafyi

[18:47] *** st_elmo joined
[18:48] *** p6bannerbot sets mode: +v st_elmo

[18:52] *** pecastro left
[18:52] *** pecastro joined
[18:53] *** p6bannerbot sets mode: +v pecastro

[18:55] *** scotticles joined
[18:55] *** p6bannerbot sets mode: +v scotticles

[18:57] *** st_elmo left
[18:58] *** |oLa| left
[19:02] *** synopsebot left
[19:02] *** SourceBaby_ left
[19:02] *** p6lert left
[19:02] *** dalek joined
[19:02] *** ChanServ sets mode: +v dalek

[19:02] *** Geth joined
[19:02] *** p6lert joined
[19:02] *** ChanServ sets mode: +v Geth

[19:02] *** synopsebot joined
[19:02] *** ChanServ sets mode: +v synopsebot

[19:03] *** p6bannerbot sets mode: +v dalek

[19:03] *** p6bannerbot sets mode: +v Geth

[19:03] *** p6bannerbot sets mode: +v p6lert

[19:03] *** p6bannerbot sets mode: +v synopsebot

[19:08] *** pecastro left
[19:09] *** pecastro joined
[19:10] *** p6bannerbot sets mode: +v pecastro

[19:10] *** graphene joined
[19:10] *** mahafyi left
[19:10] *** p6bannerbot sets mode: +v graphene

[19:10] <moritz> Full disclosure: the server that hosts {hack,www,irc,master}.p6c.org has a supermicro board

[19:11] <moritz> I'm not going to check it for microscopic extra chips :)

[19:15] <rindolf> moritz: ah

[19:15] *** pecastro left
[19:16] *** pecastro joined
[19:16] *** p6bannerbot sets mode: +v pecastro

[19:20] <shmup> lol

[19:21] <shmup> is this a mirror server moritz?

[19:22] *** pecastro left
[19:23] *** lizmat left
[19:24] *** domidumont left
[19:26] <moritz> shmup: no, just the perl6.org web server and some community resources for p6 development

[19:27] *** lizmat joined
[19:27] *** p6bannerbot sets mode: +v lizmat

[19:28] *** pecastro joined
[19:29] <squashable6> üçï sylints++ wrote a comment on ‚ÄúHow to install?‚Äù: https://github.com/FCO/Red/issues/49#issuecomment-427474587

[19:29] *** p6bannerbot sets mode: +v pecastro

[19:30] <masak> moritz++ # disclosing in full

[19:30] <masak> though I can't imagine what would happen if all these open-source activities fell into the wrong hands :P

[19:31] <squashable6> üçï Kaiepi++ opened pull request ‚ÄúAdd tests from JSONTestSuite‚Äù: https://github.com/timo/json_fast/pull/49

[19:31] <Kaiepi> \o/

[19:32] <AlexDaniel> \o/

[19:32] <AlexDaniel> Kaiepi++

[19:32] *** pmurias left
[19:32] <AlexDaniel> ‚ÄúBinary file not shown.‚Äù

[19:32] <AlexDaniel> github--

[19:33] *** pmurias joined
[19:33] *** p6bannerbot sets mode: +v pmurias

[19:33] <[particle]> did @moritz disclose that or was it the pla?

[19:34] <Herby_> Kaiepi: \o o/

[19:37] <masak> could I ask the friendly experts here about a crazy macro use whose semantics I'm not 100% sure of?

[19:38] <masak> (...as if you have any choice in the matter...) ;)

[19:38] <masak> my $q; macro m1($ast) { $q = $ast; return Nil }; macro m2() { return $q }; for 1, 2, 3 -> $v { m1($v) }; for 4, 5, 6 -> $v { m2() }

[19:38] <masak> what should the above print?

[19:38] <masak> er, make that `say(m2())`, so that it prints something

[19:39] <AlexDaniel> what's the meaning of `return` there?

[19:39] *** dmaestro_ left
[19:40] <masak> well, a macro returns some AST (a Qtree) back to the compiler so it can re-inject it into the code, "expanding" the macro call into the returned AST

[19:41] <masak> though it's, conjectural, `return Nil` is taken to mean "there's no code to be injected here" -- an empty statement, or whatever

[19:45] <masak> I mean, on a purely textual level, `m2()` is expanded to `$v`

[19:46] <masak> but (importantly) it's not "the `$v`" from the `4, 5, 6` loop; it's the one from the `1, 2, 3` loop

[19:47] <masak> at least if macro expansion is hygienic

[19:47] <squashable6> üçï nxadm++ wrote a comment on ‚ÄúTest fails with old versions of Perl 6‚Äù: https://github.com/perl6/DBIish/issues/132#issuecomment-427479285

[19:47] <squashable6> üçïüçïüçï  First contribution by nxadm++! ‚ô•

[19:51] <masak> any help would be appreciated, even in the form of someone else's brain melting in sympathy :)

[19:52] <AlexDaniel> well, I'm not an expert, but either 4 5 6 or an error of some kind

[19:52] <AlexDaniel> as in ‚Äúwtf, where did you find that?‚Äù

[19:52] <masak> fwiw, I believe the output should be `3\n3\n3\n`

[19:52] <AlexDaniel> why?

[19:52] *** |oLa| joined
[19:53] <masak> because that's the value of that $v at the time it's printed, all three times

[19:53] *** |oLa| left
[19:53] *** pmurias left
[19:54] <AlexDaniel> so you can suddenly move $v out of its scope?

[19:57] *** pmurias joined
[19:57] *** p6bannerbot sets mode: +v pmurias

[19:58] *** Praise joined
[19:58] *** Praise left
[19:58] *** Praise joined
[19:58] *** p6bannerbot sets mode: +v Praise

[19:59] <masak> yes, that's a good summary of how macro hygiene is done in practice

[19:59] *** p6bannerbot sets mode: +v Praise

[19:59] <AlexDaniel> so what is $ast? I was thinking it's just a var with a name, which in case of the second loop will point at 4 5 6

[20:00] <AlexDaniel> and if $v wasn't there‚Ä¶ I don't know, an error of some kind‚Ä¶

[20:00] <masak> I wish I had an excellent, final answer to that. but it's a very good question.

[20:00] <AlexDaniel> but yeah, you're asking a wrong person :)

[20:00] *** Kaiepi left
[20:01] <masak> all I know is that Qtrees need to be somehow involved in scoping, like closures are

[20:01] *** Kaiepi joined
[20:02] <masak> I don't usually take these musings public on #perl6, but I was curious about this one

[20:02] *** p6bannerbot sets mode: +v Kaiepi

[20:03] <AlexDaniel> scoped AST :o

[20:03] *** koto joined
[20:03] <masak> I remembe the exact moment I had that (chilling) realization. it was at a hotel breakfast in Copenhagen. moritz was there too.

[20:03] <Demos[m]> hm so I want to have an object that's "some of" some other object, so it has all the same fields but they can be set to "don't care"

[20:04] *** p6bannerbot sets mode: +v koto

[20:04] <masak> remember*

[20:04] <Demos[m]> is there some neat perl6 feature to help me or should I just make a hash of set attributes, or a similar class but with some kind fo option type on the fields

[20:05] *** sena_kun left
[20:05] <squashable6> üçï FCO++ closed issue ‚ÄúHow to install?‚Äù: https://github.com/FCO/Red/issues/49

[20:06] <geekosaur> I'm wondering if there's some clever way to use 'handles' there

[20:06] <jnthn> masak: Your example doesn't seem to print anything?

[20:06] *** pmurias left
[20:07] <masak> jnthn: right, `say(m2())`

[20:07] <jnthn> Except maybe an error saying Nil isn't a valid AST :P

[20:07] *** pmurias joined
[20:07] *** p6bannerbot sets mode: +v pmurias

[20:07] <jnthn> masak: OK, then 3\n3\n3\n

[20:07] <masak> the `return Nil` actually wasn't necessary :)

[20:07] <masak> right.

[20:08] <jnthn> It's not a very good idea to write such code, but... :)

[20:08] <masak> also agreed.

[20:09] <masak> anyway, this is the first live example of "displaced" code that's not saved by the "direct" trick

[20:09] *** pmurias left
[20:10] <Geth> ¬¶ doc: Coleoid++ created pull request #2358: Document the Setty ops for MixHashes per TODO

[20:10] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2358

[20:11] *** TeguFn joined
[20:12] <El_Che> https://marc.info/?l=git&m=153875888916397&w=2 (security flaw (CVE-2018-17456), which allowed an

[20:12] <El_Che> attacker to execute arbitrary code by crafting a malicious .gitmodules

[20:12] <El_Che> file in a project cloned with --recurse-submodules)

[20:12] *** p6bannerbot sets mode: +v TeguFn

[20:12] <El_Che> I think there are some perl6 repos using submodules

[20:12] <jnthn> masak: How so?

[20:12] <El_Che> I wonder if star is built like that

[20:14] <masak> jnthn: the `$v` in the first loop does not originate from a quasi, but from mainline code. it's handled at compile time, long before it has the value 3, long before the *frame* where it has the value 3 exists

[20:15] <masak> jnthn: best I can think of is if the fixup mechanism could be bent to handle this case

[20:15] <jnthn> masak: But the "direct trick" is only about quasi, and there ain't one here?

[20:15] <masak> this is not a case where the "direct trick" can be applied

[20:15] <masak> because there isn't a runtime scope to lookup directly into

[20:15] <jnthn> I don't see what there is to apply. :)

[20:16] *** scotticles left
[20:16] <masak> those only happen inside macros, but $v is outside a macro, in the mainline code

[20:16] <masak> jnthn: I'm relived we agree about the expected output, even when we disagree about the extent of the problem :P

[20:16] <jnthn> Oh, I think I maybe see what you're getting at

[20:17] <jnthn> Hmm

[20:17] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Cordova-0.0.12.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo::VSTS::YAML::Cordova:cpan:MELEZHIK

[20:17] <jnthn> Yeah, that's a problem, though maybe it's also an error.

[20:18] <jnthn> "You can't transport code like that"

[20:18] <masak> I'd be fine with it being an (expansion-time) error

[20:18] <masak> so AlexDaniel might've been right after all :D

[20:18] <jnthn> *nod*

[20:18] *** TeguFn left
[20:18] <masak> anyway, we need to carry enough information about a variable's definition site *in the Qtree* to be able to prove that

[20:19] <jnthn> *nod*

[20:19] <jnthn> Yeah, fun... :)

[20:19] <masak> I like it being an error. that's the conservative option. we ever find out this was actually a potentially useful thing to do, we get more lenient

[20:19] *** pecastro left
[20:19] <Demos[m]> I'm seeing "say map *.Str.chars, 'hello', 1, 22/7, 42, 'world';" in the manual. What does *. do in this context?

[20:21] <AlexDaniel> El_Che: is it the case of classic ‚Äúforgot to use --‚Äù pitfall?

[20:21] <jnthn> Demos[m]: . is method call

[20:21] <AlexDaniel`> Demos: it's a Whatever, so in the end you get WhateverCode

[20:21] <jnthn> Demos[m]: * makes a function

[20:22] <jnthn> Demos[m]: So it's a nicer way to write { .Str.chars }

[20:22] <Demos[m]> a whatever

[20:22] <Demos[m]> that's what I needed to search for

[20:22] * jnthn afk for a bit

[20:23] *** graphene left
[20:24] *** graphene joined
[20:25] *** p6bannerbot sets mode: +v graphene

[20:30] *** pecastro joined
[20:30] *** p6bannerbot sets mode: +v pecastro

[20:32] *** secretmessagenm joined
[20:32] *** secretmessagenm left
[20:34] <timotimo> i wonder what page of the docs the "say map *.Str.chars" comes from. it looks like an unnecessarily complicated variety of ".Str.chars.say for ..."

[20:37] <AlexDaniel> El_Che: exactly: https://github.com/git/git/commit/902df9f5c45cd99720d4ca0a38d0538eb0126ad7#diff-4cab15246fb5e7f4590f335dbe622d39R506

[20:38] *** molaf left
[20:39] *** dct left
[20:39] <AlexDaniel> pretty sure you can find more vulnerabitilies in other software if you just look for that exact pitfall

[20:40] <AlexDaniel> using -- is not the default for most people

[20:40] <squashable6> üçï timo++ wrote a comment on ‚ÄúAdd tests from JSONTestSuite‚Äù: https://github.com/timo/json_fast/pull/49#issuecomment-427492447

[20:40] <AlexDaniel> though I haven't yet figured out how they got code execution from that

[20:41] <AlexDaniel> most programs don't have ‚Äúok I'll execute your argument as code‚Äù behavior :)

[20:41] <timotimo> it sounded like it just assembles a line to pass to the shell

[20:41] <timotimo> otherwise it's indeed not obvious how it'd happen

[21:02] <geekosaur> yeh, I read this as running subsidiary git commands to do checkouts

[21:03] <geekosaur> and my question would be why they're dragging the shell into it, unless there's some compatibility gotcha with respect to e.g. windows

[21:04] <AlexDaniel> who said that the shell is involved?

[21:05] *** pecastro left
[21:05] <timotimo> dunno

[21:05] <AlexDaniel> the issue seems to be in urls starting with --, so it's just a missing --

[21:05] *** pecastro joined
[21:05] <geekosaur> mm, true, that goes deeper.

[21:05] <geekosaur> bturaises the same question n a different fashion: why isn't git a reentrant library?

[21:06] *** p6bannerbot sets mode: +v pecastro

[21:06] <geekosaur> grantig that at this poin the answer might be that it'd be a complete redesign plus another few years of finding exciting new bugs

[21:07] <AlexDaniel> eh, good point I guess

[21:08] <AlexDaniel> .in 30d See how code execution works in CVE-2018-17456

[21:08] <yoleaux> AlexDaniel: I'll remind you on 4 Nov 2018 21:08Z

[21:09] <AlexDaniel> aaaaaaaaaaahhhhhhhhhhhhhh

[21:09] <AlexDaniel> ok there's --template

[21:09] <AlexDaniel> so it's a postcheckout hook

[21:09] <AlexDaniel> dammit, it's always something about hooks

[21:10] *** pecastro left
[21:10] *** pecastro joined
[21:11] *** p6bannerbot sets mode: +v pecastro

[21:11] <AlexDaniel> so I'd guess you need two submodules, one with the template and another with --template=‚Ä¶ as url

[21:12] <AlexDaniel> üí©

[21:13] <AlexDaniel> .in 30d No need

[21:13] <yoleaux> AlexDaniel: I'll remind you on 4 Nov 2018 21:13Z

[21:15] *** SCHAPiE left
[21:18] *** SCHAPiE joined
[21:18] *** p6bannerbot sets mode: +v SCHAPiE

[21:22] *** kensanata joined
[21:22] *** p6bannerbot sets mode: +v kensanata

[21:30] *** koto left
[21:32] *** [particle]1 joined
[21:33] *** [particle] left
[21:33] *** p6bannerbot sets mode: +v [particle]1

[21:35] *** graphene left
[21:37] *** [particle] joined
[21:37] *** graphene joined
[21:37] *** [particle]1 left
[21:37] *** p6bannerbot sets mode: +v [particle]

[21:37] *** p6bannerbot sets mode: +v graphene

[21:41] *** [particle] left
[21:41] *** [particle]1 joined
[21:42] *** p6bannerbot sets mode: +v [particle]1

[21:47] <Demos[m]> Another question: sorry for all these.

[21:47] <Demos[m]> submethod BUILD(:encoding(:$enc), :$data)

[21:47] <Demos[m]> what's going on with :encoding(:$enc) here and how is :$data different from $data (they looks like pair constructors but I'm not sure what the rules are for putting pairs in signatures???

[21:48] <jnthn> They are named arguments

[21:49] <jnthn> And it's indeed not an accident they look like the way you'd pass such arguments

[21:49] <jnthn> m: sub foo(:$a) { say $a }; foo(:a(42))

[21:49] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´42‚ê§¬ª

[21:49] <jnthn> And :encoding(:$enc) means that it's exposed as both encoding and enc to callers

[21:51] <AlexDaniel`> Demos: these are good questions, please keep them coming. While you're at it, maybe it would make sense to also file tickets for the doc repo

[21:51] <AlexDaniel`> Demos: https://github.com/perl6/doc/issues/

[21:52] <AlexDaniel`> Demos: they can be very short, as in ‚ÄúI was reading X which talks about Y, but Y is not linked or explained‚Äù, or something like that

[21:52] <Demos[m]> m: sub foo($a) { say $a}; foo(:a(42));

[21:52] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´Too few positionals passed; expected 1 argument but got 0‚ê§  in sub foo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:52] *** [particle]1 left
[21:53] <AlexDaniel`> yeah, so in that case `$a` is positional and not named

[21:53] <Demos[m]> ah so I can't call a positional arg as if it was named like I can in some languages

[21:54] <AlexDaniel`> yeah

[21:55] *** cheese__ joined
[21:55] *** p6bannerbot sets mode: +v cheese__

[21:55] <AlexDaniel`> m: say 42

[21:55] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´42‚ê§¬ª

[21:55] *** [particle] joined
[21:56] *** p6bannerbot sets mode: +v [particle]

[21:57] <cheese__> Hi, I was reading the logs and saw this mentioned '1‚Ä¶*.say√ó*>10'. FWIW I found there are two values passed, so it is the same as '1‚Ä¶ -> $a, $b { ($a.say * $b) > 10 }'. Cool example!

[22:00] <AlexDaniel> cheese__: ah, two last values?

[22:00] <cheese__> yeah, first iteration it is 1, 2

[22:00] <cheese__> then 2, 3

[22:00] <cheese__> etc.

[22:00] <cheese__> that's why it is *>10

[22:00] <AlexDaniel> that makes sense!

[22:00] <AlexDaniel> but I didn't know you can use that on the right side of ‚Ä¶

[22:01] <cheese__> me neither, the --target=ast option is really cool, didnt know that either :D

[22:01] <AlexDaniel> cheese__: thanks!

[22:01] <cheese__> your welcome, i have to thank you for all the stuff!

[22:03] <AlexDaniel> ahhhh, so that's how they do Fibonacci in 17 characters

[22:07] <Demos[m]> in "sub f(|c){};" is C a sigilless parameter?

[22:07] <Demos[m]> if I write sub f(|) {} do I get *%_ as the slurp?

[22:08] *** itaipu left
[22:08] <Demos[m]> serrr slip

[22:08] <jnthn> | produces a capture containing all the positional and named arguments

[22:09] <jnthn> \p would be a normal sigilless parameter (same as the my \foo = ... syntax)

[22:09] <geekosaur> it's more or less requesting that |c contain all the parameters in as raw a form as possible

[22:09] <Demos[m]> right but what is "c"

[22:10] <geekosaur> so it turns off the slurpy stuff, named parameters, etc.

[22:10] <geekosaur> https://docs.perl6.org/type/Capture

[22:10] <Demos[m]> oh so c is just a sigiless parameter then

[22:11] <jnthn> Well, syntax wise, yes

[22:11] <geekosaur> not quite "just". it's sigilless, btu its contents wil be different from sub f(\c)

[22:11] <jnthn> In the sense that it gives you a term

[22:11] <Demos[m]> right

[22:12] <squashable6> üçï Kaiepi++ wrote a comment on ‚ÄúAdd tests from JSONTestSuite‚Äù: https://github.com/timo/json_fast/pull/49#issuecomment-427512578

[22:12] <Demos[m]> but the identifier "c" is a sigilless variable

[22:14] <jnthn> Yes (except I don't really like calling them variables, because they are immutable :))

[22:15] <squashable6> üçï Kaiepi++ synchronize pull request ‚ÄúAdd tests from JSONTestSuite‚Äù: https://github.com/timo/json_fast/pull/49

[22:20] *** MasterDuke joined
[22:20] *** p6bannerbot sets mode: +v MasterDuke

[22:20] *** MasterDuke left
[22:20] *** MasterDuke joined
[22:20] *** herbert.freenode.net sets mode: +v MasterDuke

[22:20] *** p6bannerbot sets mode: +v MasterDuke

[22:22] *** patrickb left
[22:22] *** rindolf left
[22:29] *** saki left
[22:30] <AlexDaniel> if Foo::Bar exports some subs, how can I make it so that whenever Foo is used it will import stuff from Foo::Bar also? In other words so that I can just do `use Foo` instead of `use Foo; use Foo::Bar`?

[22:30] *** saki joined
[22:31] *** p6bannerbot sets mode: +v saki

[22:34] *** leont left
[22:34] <cheese__> I think the example at https://docs.perl6.org/language/modules#UNIT::EXPORT::* is quite good.

[22:34] *** Sgeo_ joined
[22:35] *** Sgeo left
[22:35] *** Ven`` joined
[22:35] *** p6bannerbot sets mode: +v Sgeo_

[22:35] <cheese__> So you could do it manually with my package EXPORT::DEFAULT { OUR::{'something'} := some_sub }

[22:36] *** p6bannerbot sets mode: +v Ven``

[22:36] *** Ven`` left
[22:38] <AlexDaniel> I think this works: OUR::<&foo> := &foo;

[22:40] <cheese__> And I just read there is also the EXPORT sub, which is even simpler, because you should be able to delegate to the other module's EXPORT sub

[22:40] <AlexDaniel> ooooooooooooooh

[22:40] <cheese__> like EXPORT { %(Foo::Bar.EXPORT) }

[22:41] <cheese__> not sure if that works

[22:41] *** thundergnat joined
[22:42] *** p6bannerbot sets mode: +v thundergnat

[22:42] *** Herby_ left
[22:44] <jnthn> Also, there's been speculated a `use Foo:reexport` or something

[22:44] <jnthn> (Never implemented, though)

[22:44] *** kensanata left
[22:45] <thundergnat> <timotimo> "i wonder what page of the docs the "say map *.Str.chars" comes from..." I believe that would be:  https://github.com/perl6/doc/blob/master/doc/Type/List.pod6#L236

[22:45] <AlexDaniel> cheese__: I can't figure out how to use that though

[22:45] <cheese__> I am trying something rn

[22:46] <cheese__> I will try it like this, but with blocks: unit module Foo::Bar; sub bar is export { "bar" }; unit module Foo; use Foo::Bar; sub foo is export { "foo" }; sub EXPORT { %(Foo::Bar::EXPORT::DEFAULT) }; unit module main; say foo(); say bar()

[22:51] <cheese__> AlexDaniel, I need another try with real files, or do you know how to use an inline-module?

[22:51] <AlexDaniel> cheese__: you can use github gists, will that work for you?

[22:52] <Demos[m]> is there a way to just get all the args that were passed to a method, I want to write a multimethod that has a signature but then passes all it's args along to somebody else

[22:52] <cheese__> AlexDaniel: oh cool, that could work

[22:52] <AlexDaniel> cheese__: it'd need `use lib ‚Äòsandbox/‚Äô` in the main file, but other than that should work out of the box. evalable6 is the bot to do that

[22:52] *** erana left
[22:53] *** erana joined
[22:53] <cheese__> AlexDaniel: okay, I will try to solve it and then try to eval it here :D

[22:54] *** p6bannerbot sets mode: +v erana

[23:01] *** thundergnat left
[23:03] *** kbloom joined
[23:03] *** p6bannerbot sets mode: +v kbloom

[23:04] <kbloom> does p6 have something similar to this?

[23:04] <kbloom> https://github.com/dotnet/csharplang/blob/master/proposals/null-coalescing-assignment.md

[23:08] <AlexDaniel> m: my $x; $x //= 42; say $x

[23:08] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´42‚ê§¬ª

[23:08] <AlexDaniel> m: my $x = 50; $x //= 42; say $x

[23:08] <camelia> rakudo-moar 687a3cbb0: OUTPUT: ¬´50‚ê§¬ª

[23:08] <AlexDaniel> kbloom: is that what you are looking for, or am I misunderstanding it?

[23:09] <cheese__> AlexDaniel: got it, you need to have EXPORT outside of the unit

[23:10] <cheese__> AlexDaniel: https://gist.github.com/mwienand/f1f7272266fd1dcd4a3211d4babcd32a

[23:10] *** thebooort joined
[23:10] *** p6bannerbot sets mode: +v thebooort

[23:10] <AlexDaniel> evalable6: https://gist.github.com/AlexDaniel/2c73c7d509e22d822161bb05337c7aa6

[23:10] <evalable6> AlexDaniel, Using file ‚ÄúFooBar.pm‚Äù as a main file, other files are placed in ‚Äúsandbox/‚Äù

[23:10] <evalable6> AlexDaniel, rakudo-moar 687a3cbb0: OUTPUT: ¬´¬ª

[23:10] <cheese__> ah ok so now I need the lib

[23:11] <AlexDaniel> geez evalable6 is retarded

[23:11] <AlexDaniel> evalable6: https://gist.github.com/AlexDaniel/2c73c7d509e22d822161bb05337c7aa6

[23:11] <evalable6> AlexDaniel, Using file ‚Äúmain.p6‚Äù as a main file, other files are placed in ‚Äúsandbox/‚Äù

[23:11] <evalable6> AlexDaniel, rakudo-moar 687a3cbb0: OUTPUT: ¬´foobar‚ê§bar‚ê§¬ª

[23:12] <cheese__> evalable6: https://gist.github.com/mwienand/f1f7272266fd1dcd4a3211d4babcd32a

[23:12] <evalable6> cheese__, Using file ‚Äúmain.p6‚Äù as a main file, other files are placed in ‚Äúsandbox/‚Äù

[23:12] <evalable6> cheese__, rakudo-moar 687a3cbb0: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /home/bisectable/git/wh‚Ä¶¬ª

[23:12] <evalable6> cheese__, Full output: https://gist.github.com/24e9295938f0fc32fc898e5d25cf4055

[23:13] <cheese__> evalable6: https://gist.github.com/mwienand/f1f7272266fd1dcd4a3211d4babcd32a

[23:13] <evalable6> cheese__, Using file ‚ÄúFoo.pm‚Äù as a main file, other files are placed in ‚Äúsandbox/‚Äù

[23:13] <evalable6> cheese__, rakudo-moar 687a3cbb0: OUTPUT: ¬´(exit code 1) ===SORRY!===‚ê§Could not find FooBar at line 1 in:‚ê§    /home/bisectable/git/wh‚Ä¶¬ª

[23:13] <evalable6> cheese__, Full output: https://gist.github.com/365ff267fcf0d899d68e407f61fca6ad

[23:13] <cheese__> hm.. what is going on? :D

[23:15] <AlexDaniel> cheese__: use lib ‚Äòsandbox/‚Äô; and also rename .pm to .pm6

[23:16] <AlexDaniel> without a slash should work too

[23:16] <thebooort> Hey there! I am trying to make a perl6 tutorial about how to integrate/solve and plot differential equations with Perl6 as I did not find anysimilar in the documentation file. I have found that with rungekuta+mathmodel modules it is quite easy to generate that kind of numerical experiment and as an applied mathematician I decided to do the examples based on populations dynamics models. 

[23:16] <AlexDaniel> cheese__: you had a typo: 'sandbox'/ instead of 'sandbox/'

[23:16] <thebooort> I still have to do some changes and correct some typos, but I would like to hear your opinions! https://github.com/thebooort/doc/blob/master/doc/Language/simulating-growth-models-with-perl6.pod6

[23:16] <cheese__> yeah bit it failed again because of .pm6 I guess

[23:16] <AlexDaniel> kbloom: did I answer your question? :)

[23:16] <cheese__> biut why did it work the second time for you?

[23:17] <cheese__> ah sorry, I see now. Different gist

[23:18] <AlexDaniel> thebooort: nitpick: ‚ÄúRequeriments‚Äù typo (you probably want to run the whole file through a spell checker)

[23:19] <squashable6> üçï timo++ wrote a comment on ‚ÄúAdd tests from JSONTestSuite‚Äù: https://github.com/timo/json_fast/pull/49#issuecomment-427523319

[23:20] <AlexDaniel> moritz: I see formulas! Somehow it makes me want to ping you? Anyway, see ‚Üë

[23:20] <MasterDuke> thebooort: another nitpick, we usually say "Perl 6", with a non-breaking space between "Perl" and "6"

[23:21] <thebooort> yes! there are a lot of typos :lol: thank you for the corrections!  It is okay then to continue writing the tutorial? 

[23:22] <AlexDaniel> thebooort: you want that to be part of the docs, right?

[23:22] <thebooort> Yes, I would like to when i finish it (if possible of course)

[23:23] <AlexDaniel> .tell jmerelo http://colabti.org/irclogger/irclogger_log/perl6?date=2018-10-05#l1076

[23:23] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[23:24] <AlexDaniel> moritz: also, what do you think, does it look like perl6/doc material?

[23:25] <kbloom> AlexDaniel: thanks, that's exactly what i meant

[23:25] <squashable6> üçï azawawi++ wrote a comment on ‚ÄúRefactor & Code improvements‚Äù: https://github.com/timo/SDL2_raw-p6/pull/9#issuecomment-427524186

[23:25] <squashable6> üçïüçïüçï  First contribution by azawawi++! ‚ô•

[23:25] <kbloom> perl 6 is amazing :)

[23:26] <AlexDaniel> thebooort: I think it's a great document so make sure to publish it somewhere once it is finished, but I can't tell if it should be part of the docs. You'd need to talk to doc folks about that :)

[23:27] <SmokeMachine> AlexDaniel: this is how Red ‚Äúreexports‚Äù: https://github.com/FCO/Red/blob/master/lib/Red.pm6

[23:27] <thebooort> Okay, will do!  Thanks guys! appreciatted it 

[23:29] *** thebooort left
[23:35] *** jhoned joined
[23:35] *** p6bannerbot sets mode: +v jhoned

[23:35] *** jhoned left
[23:44] <cheese__> SmokeMachine: I think I like the EXPORT sub more, i.e. sub EXPORT { %(Red::Traits::EXPORT::ALL::, Red::Operators::EXPORT::ALL::, "&database" => &database) }, is there a specific reason for doing it the way Red does it?

[23:46] *** Sgeo_ left
[23:47] *** Sgeo joined
[23:47] <SmokeMachine> cheese__: yes I could be using the EXPORT sub... but that was the first way I thought...

[23:48] *** p6bannerbot sets mode: +v Sgeo

[23:49] <cheese__> SmokeMachine: okay thanks, i was just curious if EXPORT got negative side effects or EXPORTHOW prevents it in this case

[23:49] *** pecastro left
