[00:08] *** flo_ joined
[00:08] *** p6bannerbot sets mode: +v flo_

[00:12] *** flo_ left
[00:18] *** holyghost joined
[00:19] *** p6bannerbot sets mode: +v holyghost

[00:22] *** yqt joined
[00:22] *** Khisanth left
[00:23] *** p6bannerbot sets mode: +v yqt

[00:23] <buggable> New CPAN upload: Chart-Gnuplot-0.0.11.tar.gz by TITSUKI http://modules.perl6.org/dist/Chart::Gnuplot:cpan:TITSUKI

[00:29] *** w_richard_w joined
[00:30] *** p6bannerbot sets mode: +v w_richard_w

[00:34] <timotimo> Xliff: you can slice it with explicit ranges

[00:35] <Xliff> timotimo: Ah! 

[00:35] *** Khisanth joined
[00:36] <Xliff> Still having segfaults, but I don't know if my addition is the cause. I am going to have to go back and see if I can golf the issue. I am wondering if something is wrong with CUnions or my implementation using CUnions. :/.

[00:36] *** p6bannerbot sets mode: +v Khisanth

[00:36] <Xliff> Needless to say, when you segfault trying to access the first element, something is wrong.

[00:37] *** yqt left
[00:40] <timotimo> if the program doesn't take long to run, running valgrind can give you a bit more extra information about the pointer that's segfaulting, though of course it could just be a null pointer you're encountering in which case there isn't much extra to know

[00:56] *** w_richard_w left
[01:00] *** Sigfrid left
[01:03] <Xliff> True dat. Worked around it and I'm happy with it. 

[01:03] <Xliff> Now for the next issue. If I want to be able to iterate using "for $o {...}" what are the requirements for $o? method iterator, yes? Or do I need something else?>

[01:04] <Xliff> I have this use case: 

[01:04] <Xliff> m: class A { has @!a = <1 2 3>; method iterator { my @a := @!a; class :: does Iterator { has $.index is rw = 0; method pull-one { @a.elems > $.index ?? @a[$.index++] !! IterationEnd; } }.new; }; }; for A.new { .say }

[01:04] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[01:04] <Xliff> But when I scale it up, the equivalent of A.iterator isn't being called.

[01:05] <Xliff> m: class A { has @!a = <1 2 3>; method iterator { my @a := @!a; class :: does Iterator { has $.index is rw = 0; method pull-one { @a.elems > $.index ?? @a[$.index++] !! IterationEnd; } }.new; }; }; for A.new -> $a { $a.say }

[01:05] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[01:05] <Xliff> m: class A { has @!a = <1 2 3>; method iterator { my @a := @!a; class :: does Iterator { has $.index is rw = 0; method pull-one { @a.elems > $.index ?? @a[$.index++] !! IterationEnd; } }.new; }; }; my $ao = A.new; for $ao -> $a { $a.say }

[01:05] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´A.new‚ê§¬ª

[01:05] *** lichtkind left
[01:05] <Xliff> HA! What's the difference between the last two invocations?

[01:06] <Xliff> m: class A does Iterable { has @!a = <1 2 3>; method iterator { my @a := @!a; class :: does Iterator { has $.index is rw = 0; method pull-one { @a.elems > $.index ?? @a[$.index++] !! IterationEnd; } }.new; }; }; my $ao = A.new; for $ao -> $a { $a.say }

[01:06] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´A.new‚ê§¬ª

[01:07] *** jast left
[01:07] *** Khisanth left
[01:07] <Xliff> m: class A does Iterable { has @!a = <1 2 3>; method iterator { my @a := @!a; class :: does Iterator { has $.index is rw = 0; method pull-one { @a.elems > $.index ?? @a[$.index++] !! IterationEnd; } }.new; }; }; my $ao = A.new; for $ao.iterator -> $a { $a.say }

[01:07] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´<anon|1>.new(index => 0)‚ê§¬ª

[01:09] *** rindolf left
[01:10] *** jast joined
[01:11] *** eseyman joined
[01:11] *** p6bannerbot sets mode: +v jast

[01:11] *** p6bannerbot sets mode: +v eseyman

[01:15] *** lizmat left
[01:20] *** Khisanth joined
[01:20] *** p6bannerbot sets mode: +v Khisanth

[01:21] *** kktt_ joined
[01:21] *** p6bannerbot sets mode: +v kktt_

[01:42] *** Qwebirc joined
[01:42] *** p6bannerbot sets mode: +v Qwebirc

[01:49] *** epony joined
[01:49] *** p6bannerbot sets mode: +v epony

[01:53] <buggable> New CPAN upload: Uzu-0.2.8.tar.gz by SACOMO http://modules.perl6.org/dist/Uzu:cpan:SACOMO

[01:55] *** kktt_ left
[01:55] *** pierrot left
[01:56] *** kktt_ joined
[01:56] *** p6bannerbot sets mode: +v kktt_

[01:56] *** pierrot joined
[01:56] *** p6bannerbot sets mode: +v pierrot

[01:58] *** Qwebirc left
[02:08] *** kktt left
[02:08] *** kktt joined
[02:08] <Xliff> m: class A does Iterable { has @!a = <1 2 3>; method iterator { my @a := @!a; class :: does Iterator { has $.index is rw = 0; method pull-one { @a.elems > $.index ?? @a[$.index++] !! IterationEnd; } }.new; }; }; my $ao = A.new; for $ao -> $a { $a.say }

[02:08] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´A.new‚ê§¬ª

[02:08] <Xliff> m: class A does Iterable { has @!a = <1 2 3>; method iterator { my @a := @!a; class :: does Iterator { has $.index is rw = 0; method pull-one { @a.elems > $.index ?? @a[$.index++] !! IterationEnd; } }.new; }; }; my $ao = A.new; for $ao.List -> $a { $a.say }

[02:08] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´A.new‚ê§¬ª

[02:09] <Xliff> m: class A does Iterable { has @!a = <1 2 3>; method iterator { my @a := @!a; class :: does Iterator { has $.index is rw = 0; method pull-one { @a.elems > $.index ?? @a[$.index++] !! IterationEnd; } }.new; }; }; my $ao = A.new but Iterable; for $ao -> $a { $a.say }

[02:09] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´A+{Iterable}.new‚ê§¬ª

[02:09] *** p6bannerbot sets mode: +v kktt

[02:09] <Xliff> m: class A does Iterable { has @!a = <1 2 3>; method iterator { my @a := @!a; class :: does Iterator { has $.index is rw = 0; method pull-one { @a.elems > $.index ?? @a[$.index++] !! IterationEnd; } }.new; }; }; my $ao = A.new but Positional; for $ao -> $a { $a.say }

[02:09] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´A+{Positional}.new‚ê§¬ª

[02:09] *** kktt_ left
[02:11] <Xliff> m: class A does Iterable { has @!a = <1 2 3>; method iterator { my @a := @!a; class :: does Iterator { has $.index is rw = 0; method pull-one { @a.elems > $.index ?? @a[$.index++] !! IterationEnd; } }.new; }; }; my $ao := A.new but Positional; for $ao -> $a { $a.say }

[02:11] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[02:11] <Xliff> \o/

[02:11] <Xliff> But why binding?

[02:12] <Xliff> m: class A does Iterable { has @!a = <1 2 3>; method iterator { my @a := @!a; class :: does Iterator { has $.index is rw = 0; method pull-one { @a.elems > $.index ?? @a[$.index++] !! IterationEnd; } }.new; }; }; my $ao = A.new but Positional; for $ao<> -> $a { $a.say }

[02:12] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[02:12] *** kktt left
[02:13] *** kktt joined
[02:14] <Xliff> Ah! Containers!

[02:14] *** p6bannerbot sets mode: +v kktt

[02:16] *** kktt left
[02:16] *** kktt joined
[02:17] *** p6bannerbot sets mode: +v kktt

[02:20] *** kktt_ joined
[02:20] *** p6bannerbot sets mode: +v kktt_

[02:20] *** kktt_ left
[02:22] *** molaf left
[02:26] *** Kaiepi left
[02:26] *** Kaiepi joined
[02:27] *** p6bannerbot sets mode: +v Kaiepi

[02:28] *** Manifest0 left
[02:28] *** lookatme_q left
[02:29] *** Manifest0 joined
[02:29] *** p6bannerbot sets mode: +v Manifest0

[02:35] *** molaf joined
[02:35] *** p6bannerbot sets mode: +v molaf

[02:47] *** kktt007 joined
[02:47] *** p6bannerbot sets mode: +v kktt007

[02:49] *** lookatme_q joined
[02:49] *** p6bannerbot sets mode: +v lookatme_q

[02:50] <kktt007> does vim the best choice for perl6?

[02:57] <holyghost> it syntax highlights perl6, yes

[02:58] <holyghost> there's probably work on emacs for it too

[02:58] <timotimo> please check out https://perl6.org/whatever/ as well as maybe https://github.com/perl6/user-experience/issues/19

[03:00] *** Sgeo__ joined
[03:01] *** p6bannerbot sets mode: +v Sgeo__

[03:03] *** kktt left
[03:03] *** kktt007 is now known as kktt

[03:03] *** Sgeo_ left
[03:11] *** salva left
[03:14] *** kktt left
[03:14] *** kktt joined
[03:15] *** p6bannerbot sets mode: +v kktt

[03:17] *** S007 left
[03:19] *** obfusk joined
[03:20] *** p6bannerbot sets mode: +v obfusk

[03:20] *** salva joined
[03:21] *** p6bannerbot sets mode: +v salva

[03:28] *** gregf_ left
[03:28] *** daotoad left
[03:28] *** Prem left
[03:28] *** Sigyn left
[03:30] *** S007 joined
[03:30] *** p6bannerbot sets mode: +v S007

[03:33] *** Sigyn joined
[03:33] *** tolkien.freenode.net sets mode: +v Sigyn

[03:33] *** p6bannerbot sets mode: +v Sigyn

[03:34] *** ferreira left
[03:41] <Geth> ¬¶ doc: 2c7b2c14b9 | (Richard Hainsworth)++ (committed using GitHub Web editor) | doc/Language/pod.pod6

[03:41] <Geth> ¬¶ doc: Update pod.pod6

[03:41] <Geth> ¬¶ doc: 

[03:41] <Geth> ¬¶ doc: fix formating of P<> section

[03:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/2c7b2c14b9

[03:51] *** kktt left
[03:51] *** kktt joined
[03:52] *** p6bannerbot sets mode: +v kktt

[03:58] *** kktt left
[04:14] *** Technaton joined
[04:14] *** Cabanossi joined
[04:14] *** Cabanoss- left
[04:15] *** p6bannerbot sets mode: +v Technaton

[04:15] *** p6bannerbot sets mode: +v Cabanossi

[04:30] *** molaf left
[04:35] *** reach_satori left
[04:39] *** kktt joined
[04:40] *** p6bannerbot sets mode: +v kktt

[04:49] *** sauvin joined
[04:49] *** p6bannerbot sets mode: +v sauvin

[04:51] *** abraxxa joined
[04:51] *** abraxxa left
[04:52] *** abraxxa joined
[04:52] *** p6bannerbot sets mode: +v abraxxa

[04:56] *** abraxxa left
[05:12] *** abraxxa joined
[05:13] *** p6bannerbot sets mode: +v abraxxa

[05:32] *** reach_satori joined
[05:33] *** p6bannerbot sets mode: +v reach_satori

[05:39] *** abraxxa left
[05:39] *** nelsonhb joined
[05:40] *** p6bannerbot sets mode: +v nelsonhb

[05:49] <holyghost> I've worked on my perl6 wave editor somewhat, I need to refactor the widgets somewhat, it's made in SDL2

[05:49] <holyghost> I am now offline, cya all!

[05:49] *** holyghost left
[05:52] *** curan joined
[05:52] *** p6bannerbot sets mode: +v curan

[06:04] *** graphene left
[06:06] *** graphene joined
[06:06] *** p6bannerbot sets mode: +v graphene

[06:12] *** kktt left
[06:12] *** kktt joined
[06:13] *** p6bannerbot sets mode: +v kktt

[06:27] *** jmerelo joined
[06:28] *** p6bannerbot sets mode: +v jmerelo

[06:34] *** kktt left
[06:37] *** kktt joined
[06:38] *** p6bannerbot sets mode: +v kktt

[06:51] <Geth> ¬¶ Pod-To-HTML: finanalyst++ created pull request #54: Modify tests

[06:51] <Geth> ¬¶ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/pull/54

[06:51] *** andrzejku_ joined
[06:52] *** p6bannerbot sets mode: +v andrzejku_

[06:53] *** andrzejku left
[06:53] *** andrzejku_ is now known as andrzejku

[07:01] <jmerelo> Did you check out today's Advent Calendar? https://perl6advent.wordpress.com/2018/12/13/day-13-web-server-from-scratch-with-cro-and-debian/

[07:01] <Geth> ¬¶ Pod-To-HTML: 600df61f59 | (Richard Hainsworth)++ (committed using GitHub Web editor) | 2 files

[07:01] <Geth> ¬¶ Pod-To-HTML: Merge pull request #2 from perl6/master

[07:01] <Geth> ¬¶ Pod-To-HTML: 

[07:01] <Geth> ¬¶ Pod-To-HTML: update

[07:01] <Geth> ¬¶ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/600df61f59

[07:01] <Geth> ¬¶ Pod-To-HTML: 7f76492143 | finanalyst++ | 2 files

[07:01] <Geth> ¬¶ Pod-To-HTML: tests: link in heading, stop outp in defn

[07:01] <Geth> ¬¶ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/7f76492143

[07:01] <Geth> ¬¶ Pod-To-HTML: 3d6c59599c | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | 2 files

[07:02] <Geth> ¬¶ Pod-To-HTML: Merge pull request #54 from finanalyst/master

[07:02] <Geth> ¬¶ Pod-To-HTML: 

[07:02] <Geth> ¬¶ Pod-To-HTML: Modify tests

[07:02] <Geth> ¬¶ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/3d6c59599c

[07:14] *** domidumont joined
[07:14] <jmerelo> .seen masak

[07:14] <yoleaux> I saw masak 12 Dec 2018 20:15Z in #perl6: <masak> still waiting for the editor that makes Git the inherent saving metaphor and abstracts away the disk itself

[07:14] *** p6bannerbot sets mode: +v domidumont

[07:15] <jmerelo> .tell masak you're scheduled on the 16th, everything coming up good?

[07:15] <yoleaux> jmerelo: I'll pass your message to masak.

[07:15] <jmerelo> .seen RabidGravy

[07:15] <yoleaux> I saw RabidGravy 17 Dec 2017 01:40Z in #perl6: <RabidGravy> that's https://perl6advent.wordpress.com/2017/12/17/something-about-messaging-but-i-couldnt-think-of-a-snappier-title/ if you want to get in early

[07:15] *** kktt_ joined
[07:16] *** p6bannerbot sets mode: +v kktt_

[07:16] *** kktt_ left
[07:23] *** kktt_ joined
[07:24] *** p6bannerbot sets mode: +v kktt_

[07:24] *** kktt_ left
[07:25] *** kktt_ joined
[07:26] *** kktt_ left
[07:26] *** kktt_ joined
[07:27] *** p6bannerbot sets mode: +v kktt_

[07:34] *** abraxxa joined
[07:34] *** abraxxa left
[07:34] *** abraxxa joined
[07:35] *** p6bannerbot sets mode: +v abraxxa

[07:35] *** xlat joined
[07:36] *** p6bannerbot sets mode: +v xlat

[07:39] *** graphene left
[07:40] *** andrzejku_ joined
[07:40] *** p6bannerbot sets mode: +v andrzejku_

[07:41] *** graphene joined
[07:42] *** p6bannerbot sets mode: +v graphene

[07:43] *** andrzejku left
[07:43] *** andrzejku_ is now known as andrzejku

[07:44] *** robertle joined
[07:45] *** p6bannerbot sets mode: +v robertle

[07:46] <jmerelo> m: say $*KERNEL

[07:46] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´linux (4.4.92.31.default)‚ê§¬ª

[07:46] <jmerelo> m: say $*KERNEL.perl

[07:46] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´Kernel.new(release => Str, name => Str, auth => "unknown", version => Version, signature => Blob, desc => Str)‚ê§¬ª

[07:50] <jmerelo> m: say $*DISTRO.perl

[07:50] <camelia> rakudo-moar 06156a7ca: OUTPUT: ¬´Distro.new(release => "42.3", is-win => Bool::False, path-sep => ":", name => "opensuse", auth => "https://www.opensuse.org/", version => v42.3, signature => Blob, desc => "2018-12-13T08:50:59.213619+01:00")‚ê§¬ª

[07:58] *** robertle left
[07:58] *** ufobat joined
[07:59] *** p6bannerbot sets mode: +v ufobat

[07:59] *** robertle joined
[08:00] *** p6bannerbot sets mode: +v robertle

[08:03] *** w_richard_w joined
[08:03] *** p6bannerbot sets mode: +v w_richard_w

[08:13] *** w_richard_w left
[08:15] *** nelsonhb left
[08:25] <Geth> ¬¶ doc: b961fc7cba | (JJ Merelo)++ | doc/Language/variables.pod6

[08:25] <Geth> ¬¶ doc: Reflow, some rewording

[08:25] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b961fc7cba

[08:25] <Geth> ¬¶ doc: 3f3792144a | (JJ Merelo)++ | doc/Language/variables.pod6

[08:25] <Geth> ¬¶ doc: Improving and restructuring documentation for dynamic variables.

[08:25] <Geth> ¬¶ doc: 

[08:25] <Geth> ¬¶ doc: This closes #2510 and also refs #2483.

[08:25] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/3f3792144a

[08:25] *** Manifest0 left
[08:30] *** epony left
[08:32] *** robertle left
[08:33] <buggable> New CPAN upload: IoC-0.0.2.tar.gz by UFOBAT https://cpan.metacpan.org/authors/id/U/UF/UFOBAT/Perl6/IoC-0.0.2.tar.gz

[08:35] <jmerelo> ufobat: cool :-)

[08:41] *** zakharyas joined
[08:42] *** p6bannerbot sets mode: +v zakharyas

[08:42] *** xlatd7 joined
[08:43] *** p6bannerbot sets mode: +v xlatd7

[08:46] *** xlat left
[08:48] *** |oLa| joined
[08:49] *** w_richard_w joined
[08:49] *** kktt_ left
[08:49] *** p6bannerbot sets mode: +v |oLa|

[08:49] *** p6bannerbot sets mode: +v w_richard_w

[08:49] *** robertle joined
[08:50] *** p6bannerbot sets mode: +v robertle

[08:55] <ufobat> jmerelo, :D

[08:55] *** zakharyas left
[08:56] *** zakharyas joined
[08:57] *** p6bannerbot sets mode: +v zakharyas

[09:00] *** kktt left
[09:07] *** lizmat joined
[09:07] *** p6bannerbot sets mode: +v lizmat

[09:09] *** w_richard_w1 joined
[09:10] *** w_richard_w left
[09:10] *** p6bannerbot sets mode: +v w_richard_w1

[09:11] *** nop1 joined
[09:12] *** p6bannerbot sets mode: +v nop1

[09:13] *** zakharyas left
[09:13] *** w_richard_w1 left
[09:15] *** xlatd7 left
[09:15] *** kensanata joined
[09:15] *** p6bannerbot sets mode: +v kensanata

[09:27] *** kurahaupo left
[09:35] <tyil> jmerelo: you're an adamant Emacs user, no?

[09:36] <jmerelo> tyil: right. That does not imply I'm good at it, though...

[09:36] <tyil> I'm mostly a vim user, but perl 6 highlighting in vim is excruciatinly slow, so I'm trying out emacs (which is excruciatingly fast in this regard)

[09:36] * El_Che suspects jmerelo grew a sixth finger per hand by now

[09:37] <tyil> however, as most vim users I have quite some modifications that I'd like to also have in emacs in some way or another

[09:37] <jmerelo> tyil: emacs is mostly OK for perl6, but it does not work very well for pod6

[09:37] <tyil> I was hoping you know your way aroun emacs to make it bahve like my vim setup :>

[09:37] <tyil> (I'm already running evil-mode, ofc)

[09:37] <jmerelo> tyil: and yes, it's fast and good :-)

[09:38] <tyil> startup is slightly slower, but I know that can be remedied by running emacs as server/client

[09:38] <jmerelo> tyil: as I said, I'm not terribly good... I basicaly use syntax highlighting, indentation, and little else. Don't know about ctags or stuff like that, but I guess it can be done...

[09:38] <tyil> ah

[09:38] <tyil> that's too bad, then :(

[09:39] <tyil> would you know any emacs wizards that can tweak this li'l thing to do anything I want in the way I want it?

[09:39] <jmerelo> tyil: that is also in this group, I don't think so. The emacs mode is not updated very often, either... 

[09:40] *** graphene left
[09:42] *** rindolf joined
[09:42] *** graphene joined
[09:43] *** p6bannerbot sets mode: +v rindolf

[09:43] *** p6bannerbot sets mode: +v graphene

[09:44] *** xlatd7 joined
[09:44] *** nop1 left
[09:44] *** Cabanossi left
[09:44] *** p6bannerbot sets mode: +v xlatd7

[09:45] *** Cabanossi joined
[09:46] *** p6bannerbot sets mode: +v Cabanossi

[09:54] <ufobat> tyil, Rolf Langsdorf https://act.perlconference.org/tpc-2018-glasgow/user/5026

[09:55] <ufobat> tyil, he is on perlmonks, for example

[09:55] <ufobat> I am using emacs but not with ctags

[09:56] *** xlatd7 left
[09:57] <tobs> tyil: I was about to mention the vim-perl6 repo on github because the contained syntax file is much faster than the one that shipped with vim over here, but then I saw you contributed to it. Mentioning it just in case you forgot :)

[09:57] *** kurahaupo joined
[09:57] <tobs> (you could still call the faster one slow, I agree)

[09:57] <ufobat> i am not sure wether lanX does perl6 actually :(

[09:57] <ufobat> +h

[09:58] *** p6bannerbot sets mode: +v kurahaupo

[10:03] <ufobat> assuming you want to contribute a feature to perl6 how does this work, since you would contribute a feature to rakudo but the feature is not (yet?) in the specification? where are the specifications? or is the roast the specificiation?

[10:04] <jmerelo> ufobat: assuming you want a new functionality, you should create a new issue and discuss in in #perl6-dev

[10:05] <jmerelo> ufobat: if it's simply disambiguation, it's probably better to start with a test in roast for that, as long as it does not deviate from the specification. The spec for 6.d is published, but mostly roast _is_ spec.

[10:05] <tyil> tobs: that one's also very slow, sadly, which is why I'm looking for alternatives

[10:05] <tyil> I've even considered atom (which is now configured to work reasonably well, on my laptop)

[10:06] <jmerelo> ufobat: if you want some fancy new thing that can't wait, you can just fork. It's free software, after all. You can also call your fork Raku2 or Cameeelia

[10:06] <ufobat> ha! :D

[10:07] <ufobat> where is the spec? foer 6.d published?

[10:08] *** hyperspace joined
[10:08] *** hyperspace left
[10:08] <ufobat> or is it just roast?

[10:09] <ufobat> for example, i can't find %*RESOURCE on roast

[10:09] <ufobat> s/on/in/

[10:10] <ufobat> i know %*RESOURCES is mentioned in the design documents

[10:10] <ufobat> (which are outdated?)

[10:46] *** zakharyas joined
[10:47] *** p6bannerbot sets mode: +v zakharyas

[10:56] *** |oLa| left
[10:58] *** tobs` joined
[10:59] *** p6bannerbot sets mode: +v tobs`

[11:16] <jmerelo> ufobat: yep, 6.d is published, but it should be also in roast, with some stuff not implemente commented out.

[11:17] <jmerelo> ufobat: and yes, the design documents are outdated. If it's not in roast, it's not spec. Yet. So one thing is to add some tests to that...

[11:19] *** mscha joined
[11:19] *** p6bannerbot sets mode: +v mscha

[11:19] <mscha> m: class Point { has Int $.x; has Int $.y }; sub infix:<cmp>(Point $a, Point $b) { $a.y cmp $b.y || $a.x cmp $b.x }; Point.new(:x(4), :y(3)) cmp Point.new(:x(5), :y(2));

[11:19] <camelia> rakudo-moar af96fbb43: OUTPUT: ¬´Type check failed in binding to parameter '$a'; expected Point but got Int (3)‚ê§  in sub infix:<cmp> at <tmp> line 1‚ê§  in sub infix:<cmp> at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[11:19] <mscha> What am I doing wrong here?

[11:20] <mscha> m: class Point { has Int $.x; has Int $.y }; multi sub infix:<cmp>(Point $a, Point $b) { $a.y cmp $b.y || $a.x cmp $b.x }; Point.new(:x(4), :y(3)) cmp Point.new(:x(5), :y(2));

[11:20] <camelia> rakudo-moar af96fbb43: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of "cmp" in expression ".new(:x(4), :y(3)) cmp Point.new(:x(5), :y(2))" in sink context (line 1)‚ê§¬ª

[11:20] <mscha> m: class Point { has Int $.x; has Int $.y }; multi sub infix:<cmp>(Point $a, Point $b) { $a.y cmp $b.y || $a.x cmp $b.x }; say Point.new(:x(4), :y(3)) cmp Point.new(:x(5), :y(2));

[11:20] <camelia> rakudo-moar af96fbb43: OUTPUT: ¬´More‚ê§¬ª

[11:20] <mscha> Never mind, I figured it out.  :-)

[11:20] <lizmat> $a cmp $b right ?

[11:21] <mscha> I forgot the multi

[11:21] <lizmat> ah, duh  :-)

[11:21] <ufobat> what if its in the design documents but not in the roast? :D

[11:22] <lizmat> ufobat: if it is implemented more or less according to design documents and not in roast, it needs tests?

[11:26] <jmerelo> ufobat: there are several reasons why that could happen. But the procedure is pretty much the same, discuss in roast, IRC channel, Rakudo repo...

[11:41] *** lmy9900 joined
[11:41] *** p6bannerbot sets mode: +v lmy9900

[11:44] *** lmy9900 left
[12:03] *** lucasb joined
[12:03] *** p6bannerbot sets mode: +v lucasb

[12:11] *** holyghost joined
[12:11] *** p6bannerbot sets mode: +v holyghost

[12:18] *** pmurias joined
[12:18] *** p6bannerbot sets mode: +v pmurias

[12:19] <pmurias> ufobat: if it's stuff for %*RESOURCES that you want to add, I would start by writing a test

[12:24] <pmurias> ufobat: if it's something from the design document it's likely it's sane and you can add it to rakudo without much discussion etc.

[12:31] *** kurahaupo left
[12:31] *** pmurias left
[12:31] *** kurahaupo joined
[12:31] *** kurahaupo left
[12:31] *** kurahaupo joined
[12:31] *** pmurias joined
[12:31] *** p6bannerbot sets mode: +v pmurias

[12:32] *** p6bannerbot sets mode: +v kurahaupo

[12:37] *** llfourn left
[12:48] *** pmurias left
[12:49] *** pmurias joined
[12:49] *** p6bannerbot sets mode: +v pmurias

[12:59] *** Some-body_ joined
[12:59] *** p6bannerbot sets mode: +v Some-body_

[13:01] *** DarthGandalf left
[13:01] *** Some-body_ is now known as DarthGandalf

[13:22] *** titsuki left
[13:27] *** leont joined
[13:27] *** p6bannerbot sets mode: +v leont

[13:37] *** titsuki joined
[13:37] *** p6bannerbot sets mode: +v titsuki

[13:39] *** robertle left
[13:41] *** Sgeo_ joined
[13:42] *** p6bannerbot sets mode: +v Sgeo_

[13:45] *** Sgeo__ left
[13:55] <ufobat> pmurias, there is a PR that points into that same direction, not merged since 5 months. https://github.com/perl6/roast/pull/456

[13:56] *** pmurias left
[13:58] *** curan left
[14:01] <jmerelo> ufobat: waiting for an answer from Niner. And now it's also stale... Maybe you could ping to see what's going on.

[14:01] <ufobat> okay :)

[14:05] *** pmurias joined
[14:05] *** p6bannerbot sets mode: +v pmurias

[14:05] <jmerelo> ufobat: there are quite a bit of PRs there... Hum. Maybe we should do a roast squashathon or something.

[14:08] *** jmerelo left
[14:22] *** Sgeo__ joined
[14:23] *** p6bannerbot sets mode: +v Sgeo__

[14:25] *** Sgeo_ left
[14:36] *** sena_kun joined
[14:37] *** p6bannerbot sets mode: +v sena_kun

[15:03] *** mscha left
[15:05] *** Ulti_ is now known as Ulti

[15:10] *** zakharyas left
[15:12] *** zacts joined
[15:12] *** p6bannerbot sets mode: +v zacts

[15:16] <AlexDaniel> tyil: yes, just use spacemacs

[15:19] *** lizmat left
[15:19] <AlexDaniel> tyil: you'll have to use spacemacs from `develop` branch, because somehow the last version of spacemacs is almost 1 year old and it didn't have perl6 support back then

[15:20] <AlexDaniel> but otherwise it will be rather straightforward, likely with almost zero things to relearn

[15:26] *** robertle joined
[15:26] *** graphene left
[15:26] <tyil> I dont like the amount of garbage spacemacs comes with

[15:27] *** p6bannerbot sets mode: +v robertle

[15:27] <tobs`> my moar process is using 3168% CPU, race ftw \o/

[15:27] *** graphene joined
[15:28] <El_Che> tobs`: cores and threads many you have

[15:28] *** p6bannerbot sets mode: +v graphene

[15:28] <tobs`> htop shows 88, but it's a shared machine so I stick with 32

[15:28] <tobs`> cores

[15:30] <tobs`> (no wait, it's 88 of whatever htop lists)

[15:31] <tobs`> oh sorry, I read that as a question not a remark ._.

[15:31] <El_Che> and some yoda :)

[15:31] *** pmurias left
[15:33] *** rje_ joined
[15:33] *** p6bannerbot sets mode: +v rje_

[15:35] <timotimo> if you reorder the dots in ... it goes from the yada yada yada operator to the yoda yoda yoda operator

[15:35] *** molaf joined
[15:35] *** pyrimidine joined
[15:36] *** p6bannerbot sets mode: +v molaf

[15:36] *** p6bannerbot sets mode: +v pyrimidine

[15:36] <tobs`> I'm quite happy, the computation will be done by tomorrow coffee break and it was less painful than anything that starts with `from multiprocessing import`, as least for a noob like me

[15:37] <rje_> re http://blogs.perl.org/users/zoffix_znet/2018/10/a-request-to-larry-wall-to-create-a-language-name-alias-for-perl-6.html.

[15:37] <rje_> I've seen mumblings re 'Raku' but I see no obvious announcement.

[15:38] *** pmurias joined
[15:38] *** p6bannerbot sets mode: +v pmurias

[15:38] <AlexDaniel> rje_: https://marketing.perl6.org/id/1541379592/pdf_digital

[15:38] <rje_> Yes, the only reference is in a PDF file.

[15:39] <rje_> Nothing on perl6.com, eh?

[15:39] <rje_> I mean beyond a link to a link...

[15:39] <AlexDaniel> rje_: there was a lot of heat, we refrained from changing too much to let everything cool down a bit

[15:40] <rje_> Just wondering how anyone who didn't know would see it, plain as day, as opposed to having to know where the official slide decks are.  It's almost buried.  Or is it just me?

[15:40] <AlexDaniel> rje_: no, it's not just you

[15:40] <rje_> OK, I understand.  Slow and steady.  Thank you Alex.

[15:40] *** pmurias left
[15:41] *** rje_ left
[15:41] <AlexDaniel> rje_: D#2443 was closed with this commit https://github.com/perl6/doc/commit/0b63543c58056e2d6086bebfc517d9c2402f7ea1

[15:42] <AlexDaniel> which is a good start I guess‚Ä¶

[15:45] <dogbert2_> AlexDaniel: I think you can remove the blocker label from R#2523

[15:45] <AlexDaniel> I NEED THE BOT

[15:45] <AlexDaniel> timotimo: can you help it again? :)

[15:45] <dogbert2_> where is it?

[15:45] *** pmurias joined
[15:45] *** p6bannerbot sets mode: +v pmurias

[15:45] *** Sgeo_ joined
[15:46] <AlexDaniel> dogbert2_: ah yeah, I saw that.

[15:46] <AlexDaniel> robertle: can you confirm that rakudo from ms

[15:46] <AlexDaniel> robertle: ‚Ä¶ master builds correctly on big endian systems?

[15:46] *** p6bannerbot sets mode: +v Sgeo_

[15:49] *** Sgeo__ left
[15:55] *** yqt joined
[15:56] *** rindolf left
[15:56] <timotimo> it doesn't seem like hack is down

[15:56] *** p6bannerbot sets mode: +v yqt

[15:57] <timotimo> oh, you're missing synopsebot?

[15:59] <timotimo> aha

[16:00] <timotimo> DOM::Tiny was failing to compile because a v6.c or .d was too late

[16:02] <robertle> AlexDaniel: moar+nqp+rakudo current masters? and is it enough for the rakudo test suite to pass?

[16:06] *** zacts left
[16:10] *** rindolf joined
[16:10] *** Sgeo__ joined
[16:10] *** p6bannerbot sets mode: +v rindolf

[16:11] *** p6bannerbot sets mode: +v Sgeo__

[16:11] <timotimo> synopsebot will be up once i've upgraded DOM::Tiny

[16:13] *** synopsebot joined
[16:13] *** ChanServ sets mode: +v synopsebot

[16:13] *** Sgeo_ left
[16:14] *** p6bannerbot sets mode: +v synopsebot

[16:15] <timotimo> R#2523

[16:15] <synopsebot> R#2523 [open]: https://github.com/rakudo/rakudo/issues/2523 [Moar][‚ö† blocker ‚ö†] "Bytecode stream version too low" during nqp build

[16:15] *** kurahaupo left
[16:16] *** kurahaupo joined
[16:17] *** Sgeo_ joined
[16:17] *** p6bannerbot sets mode: +v kurahaupo

[16:18] *** p6bannerbot sets mode: +v Sgeo_

[16:19] *** yqt left
[16:19] *** holyghost left
[16:19] *** holyghost joined
[16:20] *** Sgeo__ left
[16:20] *** p6bannerbot sets mode: +v holyghost

[16:21] *** ferreira joined
[16:22] *** p6bannerbot sets mode: +v ferreira

[16:25] *** domidumont left
[16:26] *** sivoais joined
[16:26] *** p6bannerbot sets mode: +v sivoais

[16:28] *** kensanata left
[16:33] *** kurahaupo left
[16:33] <buggable> New CPAN upload: Bailador-0.0.16.tar.gz by UFOBAT http://modules.perl6.org/dist/Bailador:cpan:UFOBAT

[16:34] *** dogbert11 left
[16:34] *** kurahaupo joined
[16:34] *** p6bannerbot sets mode: +v kurahaupo

[16:37] <timotimo> it'd be kind of cool if we scanned the ecosystem for issue numbers and link to the dists from the bugtracker automatically

[16:38] <timotimo> greppable6: R\#\d\d\d\d?

[16:38] <greppable6> timotimo, 3 lines, 3 modules: https://gist.github.com/6d9df725b6dc3ce36e6769457ca6d886

[16:38] <timotimo> greppable6: rakudo\/rakudo.\d\d\d\d?

[16:38] <greppable6> timotimo, Found nothing!

[16:39] <Kaiepi> greppable6: https:\/\/github.com\/rakudo\/issues\/\d\d\d\d?

[16:39] <greppable6> Kaiepi, Found nothing!

[16:39] <Kaiepi> greppable6: https:\/\/github.com\/rakudo\/rakudo\/issues\/\d\d\d\d?

[16:39] <greppable6> Kaiepi, 10 lines, 7 modules: https://gist.github.com/0ec511dd0358f163e714c2e3c4576c25

[16:40] <timotimo> good one

[16:40] <timotimo> now automatically find the issues that have been closed and notify the authors :) :)

[16:46] <robertle> AlexDaniel: just tried with fresh HEAD checkouts, works like a charm on s390x :)

[16:50] *** zacts joined
[16:50] *** p6bannerbot sets mode: +v zacts

[16:53] *** kurahaupo left
[16:54] *** kurahaupo joined
[16:55] *** p6bannerbot sets mode: +v kurahaupo

[16:59] *** graphene left
[17:00] *** daxim joined
[17:01] *** graphene joined
[17:01] *** p6bannerbot sets mode: +v daxim

[17:02] *** p6bannerbot sets mode: +v graphene

[17:06] *** matze_ joined
[17:06] *** p6bannerbot sets mode: +v matze_

[17:07] <matze_> Hello, can someone tell me how can a find an installed module so that I can change and debug it?

[17:07] <Kaiepi> zef locate

[17:08] <matze_> yeah, it gave me: Cro::HTTP::Client => /usr/home/rakudobrew/moar-master/install/share/perl6/site/sources/BD9BD084131C6E7D2BF4FE09570E5EBE604DB8FA

[17:08] <matze_> but when i change the file there nothing happens

[17:09] <sena_kun> matze_, you don't want to use that, I think.

[17:09] <matze_> ok, whats the best way to debug/change a module?

[17:09] <sena_kun> matze_, you want to 1)have a repo locally; 2)use it with `perl6 -I../my-long-path-to-repo/lib foo.p6`.

[17:10] <matze_> mhm ill try it

[17:10] <sena_kun> that is, I think. if you plan to push changes to upstream, all the more reasons for making a fork and cloning it.

[17:11] <matze_> but .. anyway..why has a change to the SHA1ed link no effect?

[17:13] <sena_kun> well, zef uses some smart things internally, Perl 6 does precompilation and stuff you (very likely) don't want to mess with. I don't know exact reason, but I know it is adviced that zef manages, not a user. well, it's package manager approach, anyway.

[17:13] <sena_kun> *advised

[17:13] <sena_kun> *zef manages modules

[17:14] <jnthn> matze_: Because when modules are installed, they are compiled, and the compilation form is always used. This avoids having to do time/content checks etc.

[17:14] <jnthn> matze_: Also, because we considered installed modules immutable per version/auth

[17:15] <jnthn> What sena_kun suggested is the correct way: check out the module source and -I... it. The -Ifoo will always win over anything installed, and the latest files on disk will always be treated as authoritative.

[17:15] *** lichtkind joined
[17:15] <ufobat> i've "fixed" perl5 modules live on production

[17:15] <ufobat> i will probably end in hell for this

[17:15] <matze_> ahh..thx jnthn!

[17:15] *** p6bannerbot sets mode: +v lichtkind

[17:16] <AlexDaniel> .seen dwarring

[17:16] <yoleaux> I saw dwarring 3 Aug 2018 19:34Z in #perl6: * dwarring HTML::Canvas really is bit-rotted

[17:25] <matze_> perl6 -I /usr/home/git/cro-http/lib/Cro/HTTP/ czds.pl    .. like that?

[17:26] <sena_kun> matze_, just cro-http/lib is sufficient

[17:27] <sena_kun> names like `Cro::HTTP::` will be resolved relatively against that.

[17:27] <matze_> because of the :: in the "use" clause right?

[17:27] <sena_kun> `perl6 -I/usr/home/git/cro-http/lib czds.pl`

[17:27] <sena_kun> matze_, ^

[17:28] *** Milou joined
[17:28] *** p6bannerbot sets mode: +v Milou

[17:28] *** Milou left
[17:29] <lucasb> ufobat, AlexDaniel: Seems like HTTP::Server::Ogre stills fails with "Cannot have a 'whenever' block outside the scope of a 'supply' or 'react' block" even with "use v6.c"

[17:30] <Woodi> hi :)

[17:30] <Woodi> nice reading about Waterfall methodology :)  http://beza1e1.tuxen.de/waterfall.html

[17:30] <AlexDaniel> lucasb: uhhh

[17:31] <AlexDaniel> lucasb: was there a ticket?

[17:31] <Woodi> and orginal paper described: http://www-scf.usc.edu/~csci201/lectures/Lecture11/royce1970.pdf

[17:32] <Woodi> it was always strange to me that perl used tests in 90's :)

[17:33] <ufobat> lucasb, meh :-(

[17:33] <lucasb> AlexDaniel: https://github.com/ufobat/HTTP-Server-Ogre/issues/3

[17:35] <AlexDaniel> lucasb: are you sure that you have the latest version of the module?

[17:35] <AlexDaniel> it passes for me

[17:35] <AlexDaniel> ufobat: if you bump the version the issue will go away for users who already have it installed

[17:37] <lucasb> what! it passed now :)

[17:37] *** pmurias left
[17:37] <lucasb> it failed an hour ago. sorry then. and thanks :)

[17:37] <ufobat> i am on version bumping mission right now, will do it for ogre :)

[17:37] <ufobat> in a few hours, 

[17:37] <AlexDaniel> Juerd: was it you who reported this? https://github.com/rakudo/rakudo/issues/2537

[17:39] <AlexDaniel> Juerd: asking because it is now resolved :)

[17:43] *** pmurias joined
[17:43] *** p6bannerbot sets mode: +v pmurias

[17:44] *** pmurias left
[17:48] *** pmurias joined
[17:48] *** p6bannerbot sets mode: +v pmurias

[18:05] *** zacts left
[18:18] *** matze_ left
[18:19] *** zakharyas joined
[18:19] *** p6bannerbot sets mode: +v zakharyas

[18:22] *** pmurias left
[18:24] *** pecastro joined
[18:25] *** p6bannerbot sets mode: +v pecastro

[18:26] *** sauvin left
[18:26] *** pmurias joined
[18:26] *** p6bannerbot sets mode: +v pmurias

[18:32] *** zacts joined
[18:32] *** p6bannerbot sets mode: +v zacts

[18:38] *** domidumont joined
[18:38] *** p6bannerbot sets mode: +v domidumont

[18:38] <Juerd> AlexDaniel: Yes. That was fast :)

[18:39] <b2gills> masak: I would classify a WhateverCode as a closure: `my &c = do {my $a = 1; * - $a++}; say c 1; say c 2` ‚Üê both calls use the current value in `$a`

[18:40] <Juerd> AlexDaniel: Updating to see if the fix is also visible in my test script :)

[18:40] <tobs`> Could someone have a look at this? It prints 2 but I expected 20. https://hastebin.com/inepadidot.rb

[18:42] <Juerd> AlexDaniel: Unfortunately not really :|

[18:42] <b2gills> tobs`: It looks in the class first because it is more specific than the role

[18:43] <tobs`> but the class doesn't have a candidate with :tenfold, why C.f electable?

[18:43] <b2gills> Yes it does have a candidate for :tenfold

[18:43] <b2gills> methods accept any named arguments by default

[18:45] <tobs`> mmm, I think I've heard about that before. Do you have any idea then how to realize those kinds of flags from a role?

[18:46] <masak> b2gills: ok, I see what you mean. the WhateverCode is the `* - $a++` expression at the end; it's a closure.

[18:46] <leont> Whomever wrote today's advent article: using ¬´dpkg -i $file¬ª is usually a bad idea, as it doesn't install dependencies (and I would be surprised if rakudo didn't have any)

[18:46] <leont> The better way to do that is ¬´apt install ./$file¬ª

[18:47] <masak> b2gills: I guess my counterargument isn't that that's _wrong_, it's that it's nothing new -- a WhateverCode is just sugar for writing it out as a normal parameterized block

[18:51] <b2gills> tobs`: you could make sure that `C.f` doesn't get a `:tenfold` argument: `multi method f (Int $x, *% where {.<tenfold>:!exists}) { $x / 5 }`

[18:53] <b2gills> As a generalization, if you don't want any unused named arguments in a method `multi method foo ( *% () ){}`

[18:53] <buggable> New CPAN upload: Bailador-0.0.17.tar.gz by UFOBAT http://modules.perl6.org/dist/Bailador:cpan:UFOBAT

[18:56] <tobs`> oho! thanks. Maybe I should instead just rename C.f to C!f or C._f. The role here is meant to provide all the interface sugar.

[19:10] *** graphene left
[19:11] *** graphene joined
[19:12] *** p6bannerbot sets mode: +v graphene

[19:21] <sena_kun> m: Str.new(value => 'hehe'); Int.new(1); say Str.new('hehe');

[19:21] <camelia> rakudo-moar 01c56b484: OUTPUT: ¬´Default constructor for 'Str' only takes named arguments‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:21] <sena_kun> m: Str.new(value => 'hehe'); Int.new(1);

[19:21] <camelia> rakudo-moar 01c56b484: ( no output )

[19:22] <sena_kun> is there a reason why Str is special?

[19:25] <Juerd> AlexDaniel: Ignore my last remarks, apparently I'm not running the latest :)

[19:25] *** domidumont left
[19:29] *** zakharyas left
[19:43] <Juerd> AlexDaniel: Although *with* the commit it's still as slow. Maybe a bit slower even. I'll try to see if I can find a few hours to dig into this and bisect it

[19:49] *** daved17 joined
[19:49] *** daved17 left
[20:11] *** robertle left
[20:18] <Xliff> What's the best way to force use of native numbers in mathematical computations?

[20:18] *** tobs` left
[20:35] *** zakharyas joined
[20:36] *** p6bannerbot sets mode: +v zakharyas

[20:40] *** zacts left
[20:43] <timotimo> Xliff: you mean num or int?

[20:43] <Xliff> Both

[20:44] <timotimo> for one, you'll use "my int $foo" and "my num $foo"

[20:44] <timotimo> it could still be that it boxes and unboxes in some places

[20:44] <Xliff> OK. Doing that, so this slowdown must me something else.

[20:44] <Xliff> timotimo: Would you mind doing some tests for me?

[20:44] <timotimo> yeah, i guess?

[20:44] <Xliff> :)

[20:45] <Xliff> clone the following: https://github.com/Xliff/cairo-p6.git and https://github.com/Xliff/p6-Pango.git

[20:45] <Xliff> There is an example in the second project called t/02-twisted.t

[20:45] <Xliff> It takes a LONG time to run. 

[20:46] <Xliff> Let me get the C counterpart and post it for you.

[20:46] <timotimo> did you look at the profile yet?

[20:46] <Xliff> https://gist.github.com/Xliff/9161d754ea512f65bbe6902722fbf9a8 <- C equivalent.

[20:46] <Xliff> Oh, how do I profile?

[20:46] <Xliff> (plus, the example is buggered, so...)

[20:46] <timotimo> --profile

[20:47] <Xliff> OK. Will do now.

[20:47] <Xliff> This is going to eat my RAM, isn't it?

[20:47] <Xliff> :)

[20:47] <timotimo> a little

[20:47] <timotimo> in some cases a lot

[20:48] <b2gills> sena_kun: Actually it is Int.new() that is special because it takes a positional argument.

[20:49] <Xliff> 4M .html file! O_o

[20:49] <timotimo> yeah, that's on the lower end

[20:50] <timotimo> what's a good output filename? foo.svg or foo.png or what?

[20:50] <Xliff> twisted.png

[20:51] <timotimo> that is ... really rather fast

[20:51] <timotimo> but there should be text?

[20:51] <Xliff> Yes. That's the buggered part.

[20:51] <timotimo> i gotta go make dinner now, though

[20:52] <Xliff> OK. Play with it and let me know if you can find the bug! :)

[20:52] <Xliff> Enjoy dinner!

[20:52] <timotimo> i thought this was about performance :)

[20:53] <Xliff> Oh, it is!

[20:53] <sena_kun> b2gills, hmm, it may be. I mean, Buf, Array and so on take positional too. But those are not "primitive" one may argue, also Pair, Rational, Bool.new(0)(well, enum case)... It seem to me quite common, so from this perspective it's Str that is odd. :S

[20:53] <Xliff> I'll be happy with insight on either one.

[20:53] <Xliff> But feed yourself! :)

[20:55] <lucasb> sena_kun: I agree. I would expect Str.new($str) to create a copy of $str. "$s2 = Str($s1)" already does that

[20:55] <lucasb> can't see any reason why not :)

[21:03] <lucasb> I may be mistaken. Assignment create copies "$s1 = $s2", but I'm not sure the return of Str($str) isn't $str itself

[21:04] <lucasb> m: my $str = 'foo'; say $str =:= Str($str)  # maybe this is a resonable test? :)

[21:04] <camelia> rakudo-moar 01c56b484: OUTPUT: ¬´False‚ê§¬ª

[21:08] *** kensanata joined
[21:08] *** p6bannerbot sets mode: +v kensanata

[21:20] *** graphene left
[21:21] *** llfourn joined
[21:21] *** p6bannerbot sets mode: +v llfourn

[21:22] *** graphene joined
[21:22] *** p6bannerbot sets mode: +v graphene

[21:30] *** rindolf left
[21:39] *** rindolf joined
[21:40] *** p6bannerbot sets mode: +v rindolf

[21:46] *** zakharyas left
[21:59] *** rindolf left
[22:07] *** graphene left
[22:09] *** graphene joined
[22:10] *** p6bannerbot sets mode: +v graphene

[22:29] *** kensanata left
[22:29] *** graphene left
[22:31] *** graphene joined
[22:32] *** p6bannerbot sets mode: +v graphene

[22:32] *** holyghost left
[22:32] *** holyghost joined
[22:33] *** p6bannerbot sets mode: +v holyghost

[22:52] <timotimo> Xliff: i don't actually have the opportunity to play with the program, but i can tell you that finding "Num" or "Int" in the Allocations tab in the profiler lets you find out what boxes native numbers into objects

[22:52] <timotimo> Xliff: if you go and get the fancy moarperf tool (on my github) you'll be able to see more clearly where they come from, because then you'll not just see "the + operator boxed in int" but "the + operator called from these functions boxed an int:"

[22:54] <Xliff> Int 10309763

[22:55] <Xliff> So getting that number down will speed up things?

[22:55] <timotimo> very possible indeed

[22:55] <Xliff> Unfortunately 491742 come from an anon block with no line number.

[22:56] <timotimo> what do i have to do so that it takes less than a thousandth of a second? :)

[22:56] <timotimo> more than*

[22:56] <Xliff> Num 

[22:56] <Xliff> 7354373

[22:57] <Xliff> I take it binding might help in some cases?

[22:59] <Xliff> timotimo: At any rate, thanks for the help. Once I get this working I think the latest PR will be good for merging.

[22:59] *** pmurias left
[23:00] <Xliff> Please comment if you see something you don't like.

[23:01] <timotimo> you're quite welcome

[23:01] <timotimo> i'm really glad you're working on pango and the other GTK stuff as well, even though you're suffering from its dramatic slowness ATM :(

[23:01] <Xliff> Another thing, can you assign native values to a hash, or are those boxed?

[23:01] <timotimo> they are boxed

[23:01] <Xliff> OK.

[23:02] <Xliff> I will get things working before I try to optimize those out.

[23:02] <Xliff> Actually, much of the GTK code works surprisingly well! 

[23:02] <Xliff> It's just coming up with the test cases that's an issue. That and transliterating C to P6 in a way that works.

[23:03] *** SCHAPiE left
[23:04] <timotimo> yeah that's always fun

[23:04] <Xliff> :)

[23:05] <Xliff> If you could take a look at the PR and note your thoughts, that would be a big help. I know you are busy, tho.

[23:06] <Xliff> Almost 100kloc in between Pango and GTKPlus... :) o_O %-)

[23:06] *** pmurias joined
[23:06] *** p6bannerbot sets mode: +v pmurias

[23:13] *** SCHAPiE joined
[23:13] *** p6bannerbot sets mode: +v SCHAPiE

[23:24] *** lichtkind left
[23:39] *** pmurias left
[23:55] *** graphene left
[23:57] *** graphene joined
[23:58] *** p6bannerbot sets mode: +v graphene

