[00:02] <comborico1611> lucasb: Yeah.  I think the author just wanted to show how... It's hard to describe.  Use Perl logic symbols to picture it in Common Lisp.

[00:02] *** tt left
[00:03] <lucasb> comborico1611: interesting 

[00:05] *** tt joined
[00:05] *** lucasb left
[00:11] *** comborico1611 left
[00:13] *** markong left
[00:22] <Xliff> TimToady: Thanks!

[00:29] *** Exodist left
[00:30] *** pierre joined
[00:30] *** Exodist joined
[00:32] *** MasterDuke left
[00:51] *** rindolf left
[00:57] *** MasterDuke joined
[01:11] *** Exodist left
[01:11] *** Exodist joined
[01:14] *** aindilis joined
[01:20] *** Exodist left
[01:20] *** Exodist joined
[01:26] *** athenot joined
[01:32] *** athenot left
[01:36] *** pharv left
[01:36] *** pharv joined
[01:41] *** pharv left
[01:44] *** pharv joined
[01:49] *** pharv left
[02:06] *** jeromelanteri joined
[02:08] *** char_var[buffer] joined
[02:09] <Geth> ¦ doc: 46c59911a8 | (Will "Coke" Coleda)++ | doc/Language/exceptions.pod6

[02:09] <Geth> ¦ doc: Make sample exception handler a little more useful

[02:09] <Geth> ¦ doc: 

[02:09] <Geth> ¦ doc: Closes #1792

[02:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/46c59911a8

[02:09] <synopsebot> Link: https://doc.perl6.org/language/exceptions

[02:25] <Xliff> What is wrong with this?

[02:25] <Xliff> m: my regex tokenrule { ^ (\s+) 'token' \s+ $<method>=[ <[A..Z_]>+ ] '\{' }; my $a = "   token OWNER { 'OWNER' }"; say $a ~~ /<tokenrule>/

[02:25] <camelia> rakudo-moar f1b7cc4d9: OUTPUT: «Nil␤»

[02:25] <Xliff> If I remove the last curly bracket in the regex, it works.

[02:25] <Xliff> m: my regex tokenrule { ^ (\s+) 'token' \s+ $<method>=[ <[A..Z_]>+ ] " \{" }; my $a = "   token OWNER { 'OWNER' }"; say $a ~~ /<tokenrule>/

[02:25] <camelia> rakudo-moar f1b7cc4d9: OUTPUT: «Nil␤»

[02:25] <Xliff> m: my regex tokenrule { ^ (\s+) 'token' \s+ $<method>=[ <[A..Z_]>+ ] }; my $a = "   token OWNER { 'OWNER' }"; say $a ~~ /<tokenrule>/

[02:25] <camelia> rakudo-moar f1b7cc4d9: OUTPUT: «｢   token OWNER｣␤ tokenrule => ｢   token OWNER｣␤  0 => ｢   ｣␤  method => ｢OWNER｣␤»

[02:26] <Xliff> m: my regex tokenrule { ^ (\s+) 'token' \s+ $<method>=[ <[A..Z_]>+ ] \s+ }; my $a = "   token OWNER { 'OWNER' }"; say $a ~~ /<tokenrule>/

[02:26] <camelia> rakudo-moar f1b7cc4d9: OUTPUT: «｢   token OWNER ｣␤ tokenrule => ｢   token OWNER ｣␤  0 => ｢   ｣␤  method => ｢OWNER｣␤»

[02:26] <Xliff> m: my regex tokenrule { ^ (\s+) 'token' \s+ $<method>=[ <[A..Z_]>+ ] \s+ "\{" }; my $a = "   token OWNER { 'OWNER' }"; say $a ~~ /<tokenrule>/

[02:26] <camelia> rakudo-moar f1b7cc4d9: OUTPUT: «Nil␤»

[02:26] <Xliff> m: my $a = "\{"; say $a ~~ / "{" /

[02:26] <camelia> rakudo-moar f1b7cc4d9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3my $a = "\{"; say $a ~~ / "{" /7⏏5<EOL>␤    expecting any of:…»

[02:26] <Xliff> m: my $a = "\{"; say $a ~~ / "\{" /

[02:26] <camelia> rakudo-moar f1b7cc4d9: OUTPUT: «｢{｣␤»

[02:29] <Xliff> D'OH!

[02:29] <Xliff> I didn't backspace the brackets in $a

[02:29] *** MasterDuke left
[02:36] <Xliff> OK, so this works.

[02:36] <Xliff> m: my regex tokenrule { ^ (\s+) 'token' \s+ $<method>=[ <[A..Z_]>+ ] ( \s+ "\{ '" <[A..Z_]>+  "' \}" ) }; my $a = "   token OWNER \{ 'OWNER' \}"; say $a ~~ /<tokenrule>/;

[02:36] <camelia> rakudo-moar f1b7cc4d9: OUTPUT: «｢   token OWNER { 'OWNER' }｣␤ tokenrule => ｢   token OWNER { 'OWNER' }｣␤  0 => ｢   ｣␤  method => ｢OWNER｣␤  1 => ｢ { 'OWNER' }｣␤»

[02:36] <Xliff> Now how can I use $/<method> in the substitution part of an s/// expression?

[02:37] <Xliff> Becuase when I try to do: s/<method>/$<method>/ I get Nil.

[02:37] <Xliff> Rather

[02:37] <Xliff> Becuase when I try to do: s/<method>/{ $<method> }/ I get Nil.

[02:37] <Xliff> And even...

[02:37] <Xliff> Becuase when I try to do: s/<method>/{ $/<method> }/ I get Nil.

[02:38] *** MilkmanDan left
[02:39] *** MilkmanD1n joined
[02:45] <Xliff> Becuase when I try to do: s/<method>/{ .^methods }/ I get Nil.

[02:46] *** ilbot3 left
[02:49] *** pierre left
[02:49] *** pierre joined
[02:49] <Geth> ¦ doc: 50fc516b2a | (Will "Coke" Coleda)++ | 4 files

[02:49] <Geth> ¦ doc: When creating the list of links, put in ., not html/

[02:49] <Geth> ¦ doc: 

[02:49] <Geth> ¦ doc: If it goes in html/ it gets copied out to the external website

[02:49] <Geth> ¦ doc: 

[02:49] <Geth> ¦ doc: Closes #1761

[02:49] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/50fc516b2a

[02:50] *** Exodist left
[02:52] *** Exodist joined
[02:53] *** sharksoft left
[02:57] *** ilbot3 joined
[02:57] *** ChanServ sets mode: +v ilbot3

[03:00] *** Exodist left
[03:00] <Geth> ¦ doc: c09bc7cc75 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/operators.pod6

[03:00] <Geth> ¦ doc: Improve circumfix:<{ }> docs

[03:00] <Geth> ¦ doc: 

[03:00] <Geth> ¦ doc: - Mention %()/hash constructors (include examples)

[03:00] <Geth> ¦ doc: - Correct the type of content that causes a Hash production

[03:00] <synopsebot> Link: https://doc.perl6.org/language/operators

[03:00] <Geth> ¦ doc: - Returned Hash is not itemized

[03:00] <Geth> ¦ doc: - Remove implementation-specific prose about how Hash is constructed

[03:00] <Geth> ¦ doc:     closes https://github.com/perl6/doc/issues/1758

[03:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c09bc7cc75

[03:01] *** Exodist joined
[03:09] <Geth> ¦ doc: 1b7acd974a | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/operators.pod6

[03:09] <Geth> ¦ doc: Extra clarification for circumfix:<{ }>

[03:09] <Geth> ¦ doc: 

[03:09] <Geth> ¦ doc: Be more precise that it's Pair *literals* or a %-sigiled var (rather than

[03:09] <Geth> ¦ doc: any var containing a Hash object) that should be there for Hash making

[03:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1b7acd974a

[03:15] *** MilkmanD1n is now known as MilkmanDan

[03:23] *** ufobat_ joined
[03:26] *** ufobat left
[03:56] <Xliff> Nevermind. Solved it.

[04:03] *** Exodist left
[04:04] *** Exodist joined
[04:23] *** MasterDuke joined
[04:31] *** pierre left
[04:31] <jeromelanteri> hi, i'm trying to learn to use emacs. Is there any plugin to install to have perl6 code recognition (syntax and why not completion helpers) ?

[04:32] <jeromelanteri> im' actually use vim and tmux and already added some syntax for perl6 and vim, maybe it is a better choice than to try to use emacs for perl6 ?

[04:33] <jeromelanteri> an other one question is: how to install perl6 on freebsd-11 ?

[04:36] *** pharv joined
[04:38] *** pierre joined
[04:40] *** pharv left
[04:43] *** pierre left
[04:47] <MasterDuke> jeromelanteri: i don't use emacs, but there are people here who do. however, i think a lot of them are in europe and are usually not active at this time

[04:49] <jeromelanteri> MasterDuke, ok, nop, thank you for this information. I will wait them, i have time because i'm reading the emacs manual.

[04:49] <jeromelanteri> MasterDuke, and for freebsd, i didn't see any binaries for perl6. Do you know something on that os linked with perl target ?

[04:50] <MasterDuke> i also don't use freebsd, but i know there is some freebsd support. you may have to build it yourself from source though

[04:50] <jeromelanteri> ha ok. thank you

[04:50] <MasterDuke> there are some instructions here http://rakudo.org/how-to-get-rakudo/#Installing-Rakudo-Star-Source

[04:51] <jeromelanteri> MasterDuke, yes, i do use it allready for install perl6 on archlinux (there is packages, but i had to go on this way for any reason i forget)

[04:52] <MasterDuke> huh, the arch packages have been fine for me

[04:53] <jeromelanteri> ho it was maybe me the problem... i had to install some modules for perl6, and i was a bit disapointed about where perl6 was and how to define specific compilations things... so i was going on this link you provide and find some very good things explain and start from install perl6 on my normal user

[04:54] <jeromelanteri> i think it was for ncurse libs used by 

[04:54] <jeromelanteri> modules

[04:57] *** pierre joined
[04:57] <MasterDuke> btw, if you do have to build from source, https://github.com/zoffixznet/z might be useful

[04:57] <jeromelanteri> good

[04:59] <MasterDuke> sorry i couldn't give more detailed answers, but it's time for me to get some sleep

[05:00] *** Cabanossi left
[05:00] *** Cabanossi joined
[05:01] *** pierre left
[05:12] *** pierre joined
[05:14] *** skids left
[05:17] *** pierre left
[05:22] *** wamba joined
[05:31] *** pierre joined
[05:39] *** pierre left
[05:43] *** curan joined
[05:50] *** pierre joined
[05:50] *** shareable6 left
[05:50] *** squashable6 left
[05:50] *** evalable6 left
[05:50] *** notable6 left
[05:50] *** nativecallable6 left
[05:50] *** bisectable6 left
[05:51] *** reportable6 left
[05:51] *** benchable6 left
[05:51] *** committable6 left
[05:52] *** greppable6 left
[05:54] *** pierre left
[05:59] *** troys left
[06:01] *** aindilis left
[06:05] *** pierre joined
[06:09] *** sena_kun joined
[06:09] *** pierre left
[06:09] *** pierre joined
[06:16] *** bloatable6 left
[06:16] *** unicodable6 left
[06:16] *** statisfiable6 left
[06:16] *** coverable6 left
[06:16] *** quotable6 left
[06:16] *** releasable6 left
[06:18] *** darutoko joined
[06:23] *** espadrine left
[06:36] *** sena_kun left
[06:41] <Geth> ¦ doc: d2b03ecff1 | (JJ Merelo)++ | 2 files

[06:41] <Geth> ¦ doc: Cross-references codes and ords

[06:41] <Geth> ¦ doc: 

[06:41] <Geth> ¦ doc: Hinting at differences in speed closes #1781

[06:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d2b03ecff1

[06:42] *** khw left
[06:48] *** ninereasons joined
[06:49] *** ninereasons left
[06:51] *** Exodist left
[06:52] *** Exodist joined
[06:53] *** eliasr left
[07:01] *** Exodist left
[07:03] *** Exodist joined
[07:09] *** Exodist left
[07:11] *** Exodist joined
[07:12] *** jerome___ joined
[07:20] *** domidumont joined
[07:20] *** Exodist left
[07:23] *** Exodist joined
[07:26] *** domidumont left
[07:27] *** domidumont joined
[07:31] *** domidumont left
[07:31] *** domidumont joined
[07:56] *** lowbro joined
[07:56] *** lowbro left
[07:56] *** lowbro joined
[08:08] *** khw joined
[08:28] *** dakkar joined
[08:28] *** wamba left
[08:29] *** Exodist left
[08:30] *** Exodist joined
[08:31] *** __semper__ joined
[08:34] *** char_var[buffer] left
[08:38] *** pharv joined
[08:38] *** Exodist left
[08:39] *** Exodist joined
[08:40] *** quotable6 joined
[08:40] *** coverable6 joined
[08:40] *** ChanServ sets mode: +v coverable6

[08:40] *** nativecallable6 joined
[08:40] *** ChanServ sets mode: +v nativecallable6

[08:40] *** greppable6 joined
[08:40] *** committable6 joined
[08:40] *** benchable6 joined
[08:40] *** ChanServ sets mode: +v committable6

[08:40] *** ChanServ sets mode: +v benchable6

[08:40] *** bloatable6 joined
[08:40] *** notable6 joined
[08:40] *** evalable6 joined
[08:40] *** releasable6 joined
[08:40] *** ChanServ sets mode: +v releasable6

[08:40] *** reportable6 joined
[08:40] *** ChanServ sets mode: +v reportable6

[08:40] *** shareable6 joined
[08:40] *** unicodable6 joined
[08:40] *** bisectable6 joined
[08:40] *** squashable6 joined
[08:40] *** statisfiable6 joined
[08:40] *** ChanServ sets mode: +v statisfiable6

[08:42] *** pharv left
[08:48] *** jerome___ left
[08:50] *** jeromelanteri left
[08:53] <CIAvash[m]> .tell jeromelanteri Emacs packages for Perl 6: https://github.com/perl6/perl6-mode/ https://github.com/hinrik/flycheck-perl6

[08:53] <yoleaux> CIAvash[m]: I'll pass your message to jeromelanteri.

[08:53] *** wamba joined
[08:53] * lizmat clickbaits https://p6weekly.wordpress.com/2018/02/19/2018-08-perl-6ya-giris/

[08:58] <El_Che> lizmat: get better

[08:58] <lizmat> El_Che: working on it  :-)

[09:11] *** wamba left
[09:12] *** TEttinger left
[09:15] *** wamba joined
[09:15] *** khw left
[09:18] *** wamba1 joined
[09:21] *** Exodist left
[09:21] *** wamba left
[09:22] *** scimon joined
[09:24] *** Exodist joined
[09:28] *** rindolf joined
[09:48] *** wamba1 left
[09:48] <moritz> lizmat++

[09:50] *** xtreak joined
[10:16] *** Exodist left
[10:18] *** Exodist joined
[10:18] *** avalenn joined
[10:20] *** espadrine joined
[10:25] *** Exodist left
[10:26] *** espadrine left
[10:27] *** Exodist joined
[10:36] *** zakharyas joined
[10:39] *** pharv joined
[10:44] *** Exodist left
[10:44] *** pharv left
[10:46] *** Exodist joined
[10:47] *** Lee__ joined
[10:47] *** Lee__ is now known as leejo

[10:48] <leejo> hey all, just wondering if there is interest in this year's Swiss Perl Workshop for talks/keynotes/workshops on Perl 6?

[10:49] <jnthn> leejo: I'm planning to be there

[10:49] <leejo> see https://www.nntp.perl.org/group/perl.perl6.users/2018/02/msg4669.html for details - we hope to have students and teachers this year, so a good op to promote Perl 6

[10:49] <leejo> jnthn: great!

[10:49] <leejo> website is now live BTW: http://act.perl-workshop.ch/spw2018/

[10:52] <jnthn> Nice

[10:54] * jnthn registered

[10:59] *** jeromelanteri joined
[11:10] *** pierre left
[11:10] <DrForr> If I can make it...

[11:10] *** pierre joined
[11:15] *** pierre left
[11:23] *** Zoffix joined
[11:23] <Zoffix> jeromelanteri: MasterDuke gave you the wrong link. To install from source, use https://github.com/zoffixznet/r

[11:24] <Zoffix> ( https://github.com/zoffixznet/z is Z-Script; a tool for core developers )

[11:24] <Zoffix> (/r = Rakudo; /z = Z-Script)

[11:24] <jeromelanteri> Zoffix, ok, get it, thank you

[11:24] <yoleaux> 08:53Z <CIAvash[m]> jeromelanteri: Emacs packages for Perl 6: https://github.com/perl6/perl6-mode/ https://github.com/hinrik/flycheck-perl6

[11:25] <jeromelanteri> yoleaux, wow, thank you very much.

[11:26] <jeromelanteri> i"m on tutorial emacs from emacs manual... i see somewhere that it is possible to use vim shortcut commands (i think it should be a good idea for me to not forget or mix different learning for short cut keys commands), like evil or vile, etc... what is the actual one to use ?

[11:27] *** b2gills1 joined
[11:27] <DrForr> last time I did that I think I used viper-mode, don't remember much beyond that.

[11:27] <jeromelanteri> DrForr, long times ago ?

[11:27] <DrForr> Yeah.

[11:28] <jeromelanteri> ho ok.

[11:29] *** b2gills left
[11:29] *** Geth left
[11:30] *** Geth joined
[11:30] *** ChanServ sets mode: +v Geth

[11:32] *** markong joined
[11:33] <DrForr> Aaah, rakudo-star finally passed the parse stage, 683.685s.

[11:33] <timotimo> holy crap

[11:33] <timotimo> was your system swapping or anything?

[11:34] <DrForr> New VM, I think it's got stock RAM enabled.

[11:34] *** b2gills1 left
[11:34] <DrForr> 1Gb.

[11:36] <Zoffix> hehe, yeah, that'd be it. Rakudo uses like 1.2GB to build

[11:36] <DrForr> But on the older system not even that sufficed to build, so there are some OS issues as well, possibly.

[11:36] *** wamba joined
[11:36] <timotimo> aye, it'll swap a whole lot

[11:37] *** b2gills joined
[11:39] <DrForr> I've only ("only", he says...) got 6Gb RAM on the laptop and I needed one for an existing VM, one for the new VM and gods know how much else for Firefox.

[11:39] *** b2gills1 joined
[11:40] *** Exodist left
[11:41] *** b2gills left
[11:41] *** Exodist joined
[11:42] <DrForr> I don't know if it would help, but adding "(at least 1.5Gb RAM recommended)" somewhere in either the install or on the site might serve as a reminder of "Oh, yeah, I set that to..."

[11:44] <DrForr> Or scaring away more potential users :/

[11:45] *** konsolebox left
[11:45] <Zoffix> It would help to have that as a PR or an Issue rather than IRC comment most devs would miss or forget about :)

[11:46] <DrForr> Indeed, got a repo I can post to?

[11:46] *** sena_kun joined
[11:47] <Zoffix> DrForr: https://github.com/rakudo/rakudo/issues/new

[11:47] <DrForr> Dank u wel.

[11:48] *** konsolebox joined
[11:50] *** Exodist left
[11:50] *** Exodist joined
[11:51] *** wamba left
[11:53] *** konsolebox left
[11:55] *** konsolebox joined
[11:56] *** xtreak left
[11:56] *** xtreak joined
[11:58] *** xtreak left
[11:58] *** xtreak joined
[12:00] <DrForr> Added.

[12:01] <DrForr> Incidentally, do we have any prior art yet for having both a C library *and* a pure-perl version of a module?

[12:03] *** Zoffix left
[12:05] *** Exodist left
[12:05] *** Exodist joined
[12:14] *** Exodist left
[12:15] *** Exodist joined
[12:15] *** S007 left
[12:16] *** konsolebox left
[12:17] *** konsolebox joined
[12:30] <moritz> DrForr: not that I'm aware of

[12:30] *** jeromelanteri left
[12:33] *** S007 joined
[12:37] *** scovit joined
[12:37] *** scovit left
[12:38] *** scovit joined
[12:40] *** pharv joined
[12:42] *** abraxxa1 joined
[12:42] *** abraxxa left
[12:42] <DrForr> Okay. I'm binding libcmark so that the app I was working on has a way to let people write lessons in raw HTML or Markdown, and thought it might be nice to have a pure Perl6 equivalent.

[12:45] *** pharv left
[12:46] <DrForr> I thought that having the module fall back to pure-perl6 if it can't find the library would be a nice touch, but there's the situation where someone may have already installed the library, but did so somewhere NativeCall can't find it, and blindly falling back to pure-perl6 here would disguise the fact that the library wasn't in teh right locatio, or more likely the user didn't rerun ldconfig.

[12:47] <DrForr> So right now I figure one for CommonMark and one for CommonMark-PurePerl6, with the same top-level interface. But then keeping the interface common between two modules becomes a potential issue.

[12:51] <DrForr> Or maybe a discreet use of flags in the main module, like :$only-libcmark or :$with-pure-perl6 ...

[12:52] <DrForr> Which is why I was curious - wondered if there was already prior art for this.

[12:54] *** AlexDaniel left
[12:55] *** konsolebox left
[12:56] *** konsolebox joined
[13:01] *** konsolebox left
[13:04] *** konsolebox joined
[13:05] *** Exodist left
[13:05] *** wamba joined
[13:06] *** Exodist joined
[13:09] <timotimo> how about a CommonMark::AnyImpl kind of module

[13:15] *** Exodist left
[13:16] *** Exodist joined
[13:17] *** konsolebox left
[13:18] *** konsolebox joined
[13:22] *** Jams_ joined
[13:26] *** [particle] joined
[13:26] *** Jams_ left
[13:27] *** xtreak left
[13:27] *** xtreak joined
[13:29] *** xtreak left
[13:38] *** pharv joined
[13:41] *** vcv joined
[13:42] *** wamba left
[13:43] *** pharv left
[13:45] *** eliasr joined
[13:46] *** vcv left
[13:47] *** rindolf left
[13:53] *** vcv joined
[14:01] <vcv> Is there a grammar out there for parsing command line arguments?  I checked modules.perl6.org but didn't see anything

[14:08] *** pierre_ joined
[14:08] *** Zoffix joined
[14:09] <Zoffix> vcv: you could check the guts of the GetOpt:: modules to see if any use a grammar. 

[14:09] <Zoffix> eco: GetOpt::

[14:09] <buggable> Zoffix, Found 7 results: Getopt::Kinoko, Getopt::Tiny, Getopt::Long, Getopt::Type, Getopt::Advance. See https://modules.perl6.org/s/GetOpt%3A%3A

[14:10] <Zoffix> vcv: in case you don't know, core Perl 6 handles command line arguments for you; you simply declare what you want as a signature on special sub MAIN: https://docs.perl6.org/language/functions#sub_MAIN

[14:10] <Zoffix> (it doesn't use a grammar to parse them tho)

[14:10] *** Exodist left
[14:12] *** Exodist joined
[14:12] <vcv> Yeah, I looked at those and only tiny uses a grammar but its only for short opts.  And yes MAIN is awesome, but I'm trying to do it in a different context and I can't leverage that unfortunately :(

[14:13] *** cdg joined
[14:13] <vcv> scratch that, Getopt::Advance *might*.  must have missed that

[14:16] *** bwisti joined
[14:16] *** konsolebox left
[14:17] *** curan left
[14:18] *** konsolebox joined
[14:20] *** Exodist left
[14:21] *** Exodist joined
[14:21] *** wamba joined
[14:37] *** pierre_ left
[14:38] *** pierre_ joined
[14:42] *** pierre_ left
[14:43] <[Coke]> grammars work on text; command line args are typically arrays of options.

[14:44] <[Coke]> (so I'd be surprised but not shocked if that was the tool used)

[14:46] *** wamba left
[15:01] *** zakharyas left
[15:01] *** zakharyas joined
[15:05] *** zakharyas left
[15:07] *** Alikzus left
[15:12] *** skids joined
[15:16] *** troys joined
[15:25] *** rindolf joined
[15:26] *** Alikzus joined
[15:27] *** comborico1611 joined
[15:28] <comborico1611> Is the core of Perl6 bigger than core of Perl5?

[15:29] <moritz> bigger? by what metric?

[15:29] <comborico1611> I guess operators.

[15:30] <moritz> then yes

[15:30] <comborico1611> Thank you!

[15:31] <Zoffix> Perl 6 has infinite amount of operators, so yes :)

[15:32] <Zoffix> m: &[ZZZZZZZZZZZZZZZZZZZZZZZZZZZRRRRRRRRRRRRRRRRRRRRRRRRRRR=].name.say # literally infinite...

[15:32] <camelia> rakudo-moar 63775474d: OUTPUT: «infix:<ZZZZZZZZZZZZZZZZZZZZZZZZZZZRRRRRRRRRRRRRRRRRRRRRRRRRRR=>␤»

[15:32] *** S007 left
[15:33] <Zoffix> comborico1611: it's a lot bigger. Especially if you exclude Perl 5's core modules from the list. 

[15:34] <comborico1611> Thank you!

[15:35] *** Exodist left
[15:37] *** S007 joined
[15:38] *** amalia___ joined
[15:39] *** Exodist joined
[15:43] *** wamba joined
[15:44] *** lowbro left
[15:53] *** Exodist left
[15:55] *** Exodist joined
[15:56] *** ingy left
[16:02] *** Exodist left
[16:03] *** Exodist joined
[16:12] *** Exodist left
[16:15] *** Exodist joined
[16:18] <Zoffix> comborico1611: coincidentally, came across this page: https://perldoc.perl.org/perlhist.html#SELECTED-RELEASE-SIZES  For 5.26, Perl 5 core was 9140KB, with 24925KB in lib. For latest Rakudo, it's 7.9MB for core and 156KB in lib

[16:18] <Zoffix> (I'm guessing 7.9MB is accurate... I measured with `du -h rakudo/src MoarVM/src nqp/src`)

[16:19] *** pmurias joined
[16:21] <comborico1611> Zoffix, doesn't that mean p5 is bigger?

[16:21] <comborico1611> Because that's pretty amazing.

[16:21] *** releasable6 left
[16:22] *** releasable6 joined
[16:22] <Zoffix> Oh

[16:22] <Zoffix> Right, #mathishard

[16:22] <comborico1611> Heh.  Made a mistake?

[16:23] <Zoffix> No, the numbers are correct. I just read 9140KB as a LOT smaller than 7.9MB :P

[16:23] <comborico1611> Why is p6 smaller?

[16:24] <comborico1611> More concise language?

[16:24] <timotimo> probably because lots of perl6 is implemented in nqp rather than in C for perl5?

[16:24] <Zoffix> I've no idea about Perl 5's source. But yeah, nqp is probably the reason. It's our "mini language" for writing the core in.

[16:24] <comborico1611> So this number does not take in account nqp section?

[16:25] <Zoffix> It does and MoarVM too. `du -h rakudo/src MoarVM/src nqp/src`

[16:26] <comborico1611> Hmm 

[16:26] <Zoffix> But I guess it just comes out smaller to implement an nqp function in C and then use that function all over than to just implement a C function and use that all over.

[16:26] <comborico1611> Ah! 

[16:26] <Zoffix> + how parsers are written probably matters too.

[16:27] <Zoffix> Ours got "lexer" built in but in Perl 5 it's a separate thing or something? (/me has no idea what these things are or what they're for)

[16:28] <Zoffix> Oh, + Perl 5 probably has more optimization paths in code. That blows up the codebase significantly

[16:29] * Zoffix is reminded of a still-unfixed phaser bug in .grep in one particular optimized path.

[16:31] <comborico1611> Zoffix, write it in a table, note it in a book.

[16:31] <Zoffix> comborico1611: write what?

[16:31] <comborico1611> Unfixed bug

[16:31] <Zoffix> it's in my private stash

[16:32] <Zoffix> m: say ^10 .grep: { FIRST say "byebye" }

[16:32] <camelia> rakudo-moar c2d0d3ace: OUTPUT: «()␤»

[16:33] <Zoffix> m: say ^10 .grep: { ENTER say "byebye" }

[16:33] <camelia> rakudo-moar c2d0d3ace: OUTPUT: «byebye␤byebye␤byebye␤byebye␤byebye␤byebye␤byebye␤byebye␤byebye␤byebye␤(0 1 2 3 4 5 6 7 8 9)␤»

[16:34] <comborico1611> I'm losing my hair.

[16:34] <Zoffix> Or maybe even two bugs; didn't expect return value from a phaser to be used as return value for the block TBH

[16:35] *** Khisanth left
[16:36] <Zoffix> m: say ^10 .map: { LEAVE True }

[16:36] <camelia> rakudo-moar c2d0d3ace: OUTPUT: «WARNINGS for <tmp>:␤(Nil Nil Nil Nil Nil Nil Nil Nil Nil Nil)␤Useless use of constant value True in sink context (line 1)␤»

[16:36] <tobs> on the size topic, I've been wondering what makes rakudo so (comparatively) big at runtime. The REPL comes in at 100MiB resident memory, my irc bot is at 500 and not really doing much. Is there a single broad cause like "the language requires so much flexibility"?

[16:36] <Zoffix> m: say ^10 .map: { ENTER True }

[16:36] <camelia> rakudo-moar c2d0d3ace: OUTPUT: «(True True True True True True True True True True)␤»

[16:36] <Zoffix> :S

[16:37] <tobs> (I remember having read something about optimisation obstructions related to the perl6 grammar somewhere)

[16:37] <Zoffix> tobs: my wild guess at the single broad cause would be: few optimizations to memory were done and in a tradeoff between memory and CPU time, currently CPU time gets the priority.

[16:38] <tobs> that's good to hear then

[16:39] <tobs> (I have to resort to perl5 scripts on my teenie-weenie VPS)

[16:39] *** ingy joined
[16:40] *** khw joined
[16:40] *** troys left
[16:40] <Zoffix> I get 89MB for empty REPL (and 67MB on 32-bit box... I'm guessing smaller because there's no spesh)

[16:41] <Zoffix> releasable6: uptime

[16:41] <releasable6> Zoffix, 19 minutes and 9 seconds, 192.449219MiB maxrss. This is Rakudo version 2018.01-209-gf74890550 built on MoarVM version 2018.01-97-g22d2db5e0 implementing Perl 6.c.

[16:41] <Zoffix> bisectable6: uptime

[16:41] <bisectable6> Zoffix, 8 hours and 51 seconds, 215.085938MiB maxrss. This is Rakudo version 2018.01-209-gf74890550 built on MoarVM version 2018.01-97-g22d2db5e0 implementing Perl 6.c.

[16:41] <jnthn> spesh but not JIT, but also every pointer is half the size

[16:41] <Zoffix> And bots use ~200MB

[16:41] <Zoffix> Oh right.

[16:42] *** zakharyas joined
[16:44] *** Exodist left
[16:44] *** Exodist joined
[16:48] *** Khisanth joined
[16:49] <timotimo> Zoffix: i assume a big part of the savings we get from nqp and such is that we don't have to fiddle around with memory management, i.e. in perl5 code you have to make sure you do all the reference counting properly, whereas nqp code does that "for you"

[16:52] *** troys joined
[16:53] <Zoffix> Ah

[16:59] <timotimo> i mean, reachability analysis is easier to work with, i'd say, in general; in our C code, all we have is lots of MVMROOT macros

[17:05] <Voldenet> Are there any good docs on embedding perl6 in C apps? Especially on use of MVMInstance and MVMCompUnit

[17:08] <Voldenet> the closest possible thing of "how to use" would be probably Inline-Perl6, but it's pretty far from docs

[17:12] <Zoffix> New blog post: "Perl 6: On Specs, Versioning, Changes, and… Breakage": https://rakudo.party/post/Perl6-On-Specs-Versioning-Changes-And-Breakage

[17:13] *** Exodist left
[17:14] *** domidumont left
[17:15] *** Exodist joined
[17:18] <Zoffix> .tell raiph As promised: https://rakudo.party/post/Perl6-On-Specs-Versioning-Changes-And-Breakage

[17:18] <yoleaux> Zoffix: I'll pass your message to raiph.

[17:18] *** Zoffix left
[17:19] <jnthn> Zoffix++ # that's a really good post

[17:20] <Voldenet> if I were trying to be funny I'd say it's a bit cheesy

[17:21] <jnthn> Voldenet: I'm not aware anyone wrote up any docs for that yet; actually the approach to embedding was "see what people actually do/need, and then document that".

[17:22] <Voldenet> ah, okay

[17:22] <jnthn> Though perhaps that only Inline::Perl6 (that I know of) is doing it yet means some docs on it are a blocker of sorts for more folks doing it

[17:22] *** Exodist left
[17:23] *** zakharyas left
[17:25] *** scimon left
[17:25] *** Exodist joined
[17:28] *** lucasb joined
[17:30] <Voldenet> Inline::Perl6 doesn't look to handle exceptions very well, I'm pretty sure that uncaught exceptions should not kill the interpreter

[17:30] <lucasb> Hey timotimo. I would suggest Jekyll on your GitHub user pages (or on a separate project repo)

[17:32] <timotimo> actually i think i want something where making posts - even with outlandish things like syntax-highlighted perl6 code and images, maybe go completely overboard and support svg - is completely trivial

[17:32] <timotimo> i used to run a blog on ikiwiki. it was actually great, but now i want a WYSIWYG do-everything-for-me experience

[17:34] <timotimo> but i don't like wordpress' editor

[17:35] <timotimo> someone got experience with ghost? last time i looked for blog stuff it seemed The New Hot Stuff

[17:41] *** dakkar left
[17:42] *** Jams_ joined
[17:46] *** Jams_ left
[17:54] *** amalia___ left
[17:55] <tony-o> ugexe may

[17:59] <tony-o> timotimo: ^

[17:59] <tony-o> the stuff i'd written for him on there, it was a nice experience

[18:00] <timotimo> ah, that's a ghost setup? i like that blog

[18:01] <mspo> for syntax highlighting don't you normally use embedded-ace or gist or .. that other one?

[18:01] <mspo> codemonkey or something?

[18:02] <mspo> codemirror

[18:02] <mspo> with the monkey label :)

[18:06] <tony-o> timotimo: for sure

[18:06] <mspo> I'm not a fan of ikiwiki and its 10000 dependencies

[18:06] <mspo> I should look for a pp version

[18:07] <mspo> also the cvs backend isn't the best :)

[18:07] <tony-o> of what mspo ?

[18:08] <tony-o> ikiwiki ?

[18:08] <timotimo> i did not know about a csv backend ... oh, cvs :)

[18:13] *** aindilis joined
[18:14] <mspo> yes and yes and yes

[18:14] <mspo> the cvs backend was written, as far as I know, specifically for wiki.netbsd.org

[18:14] <mspo> where it is in use and annoying sometimes :)

[18:27] *** cognominal joined
[18:29] *** Exodist left
[18:29] *** Exodist joined
[18:46] *** pharv joined
[18:51] *** lucasb left
[18:55] <Xliff> timotimo++: Also... MathML.

[18:55] <Xliff> (I mean, if you are doing SVG...)

[18:56] *** domidumont joined
[18:57] <Geth> ¦ doc: 782a49b788 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Str.pod6

[18:57] <Geth> ¦ doc: Clarify .parse-names's removal

[18:57] <Geth> ¦ doc: 

[18:57] <Geth> ¦ doc: That it'll be tossed when 6.e *is released* not just in 6.e language.

[18:57] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/782a49b788

[18:57] <synopsebot> Link: https://doc.perl6.org/type/Str

[18:58] *** syntaxman left
[18:59] *** darutoko left
[19:15] *** travis-ci joined
[19:15] <travis-ci> Doc build passed. Zoffix Znet 'Clarify .parse-names's removal

[19:15] <travis-ci> https://travis-ci.org/perl6/doc/builds/343975534 https://github.com/perl6/doc/compare/d2b03ecff116...782a49b78820

[19:15] *** travis-ci left
[19:15] *** cdg left
[19:16] *** cdg joined
[19:21] *** cdg left
[19:41] <pmurias> timotimo: ghost uses node.js so it should be possible to extend it with Perl 6 in the (near) future

[19:41] * pmurias hasn't actually used ghost

[19:46] *** domidumont left
[19:47] *** AlexDaniel joined
[19:49] *** raschipi joined
[19:50] *** zakharyas joined
[19:50] <raschipi> Why does Int radix notation constructor supports arbitrary base but Str.parse-base only supports bases up to 36? Can't the mechanism for the former be used for the later?

[19:52] <pmurias> what letters do we use after 36?

[19:52] <raschipi> Makes sense.

[20:03] <AlexDaniel> Zoffix++ awesome blog post

[20:05] *** zakharyas left
[20:07] *** cognominal left
[20:09] *** redhands joined
[20:09] <mspo> m: a > b

[20:09] <camelia> rakudo-moar c2d0d3ace: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Preceding context expects a term, but found infix > instead.␤at <tmp>:1␤------> 3a >7⏏5 b␤»

[20:09] <mspo> m: "a" > "b"

[20:09] <camelia> rakudo-moar c2d0d3ace: OUTPUT: «WARNINGS for <tmp>:␤Useless use of ">" in expression "\"a\" > \"b\"" in sink context (line 1)␤Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3⏏5a' (indicated by ⏏)␤  in block <unit> at <tmp> line 1…»

[20:22] *** cognominal joined
[20:26] *** kurahaupo left
[20:26] *** kurahaupo_ joined
[20:29] *** b2gills1 is now known as b2gills

[20:33] *** yqt joined
[20:33] *** yqt left
[20:37] <rindolf> hi all! This program ends up consuming most of my RAM and it runs slowly with rakudo-moar - why? https://paste.debian.net/1011215/

[20:39] <rindolf> it is a translation of this python code - https://github.com/shlomif/project-euler/blob/master/project-euler/618/euler_618_v1.py

[20:40] *** notbenh left
[20:40] <[Coke]> Zoffix++ thanks for the blog post.

[20:43] <[Coke]> rindolf: is 'primesieve' required to demonstrate the issue?

[20:44] <rindolf> [Coke]: for now, but i think i can get rid of it

[20:44] <[Coke]> (style issue: no need for .slurp-rest; you're then splitting into lines, so use .lines ?)

[20:45] <[Coke]> (er, no need for slurp-rest as opposed to slurp)

[20:47] <[Coke]> I don't have primesieve so I can't easily check; might be worth running with --profile to see if you can determine where the slowdown is

[20:48] <moritz> not just a style issue; currently the presence of $out forces the runtime to hold on to two whole input text in memory

[20:49] <moritz> if you go straight for run(...).out.lines.map(*.Int), you need only one copy of the primes in memory

[20:49] <rindolf> [Coke]: here is a version wo it - https://paste.debian.net/1011219/

[20:51] <rindolf> moritz: see that too

[20:53] *** comborico1611 left
[20:57] <[Coke]> Ran it with a subset, a third of the time is spent in infix:%

[20:59] <rindolf> [Coke]: do you also get the large ram consumption?

[20:59] <rindolf> [Coke]: this is the main thing that bothers me

[21:00] <[Coke]> m: my $BASE = 1000000000; say $BASE.^name;

[21:00] <camelia> rakudo-moar c2d0d3ace: OUTPUT: «Int␤»

[21:01] *** cdg joined
[21:03] *** notbenh joined
[21:05] <[Coke]> ff

[21:05] <[Coke]> ww

[21:06] <moritz> rindolf: I get around 252MB VIRT and 159 RES mem usage

[21:06] <moritz> rindolf: does that match your observation?

[21:06] <rindolf> moritz: it ends up consuming over 4 gb here

[21:07] <[Coke]> what version of Perl 6, what OS?

[21:10] <rindolf> [Coke]: rakudobrew moar latest; mageia v7 x86-64

[21:12] <[Coke]> what is mageia?

[21:13] <[Coke]> ah, some kind of linux.

[21:13] *** zakharyas joined
[21:13] <moritz> based on Mandriva, it seems

[21:13] <[Coke]> I can't tell you how much memory it's taking because it's sooo slow.

[21:15] <rindolf> [Coke]: htop quickly shows large mem consumption

[21:19] <MasterDuke> i see approximately the same as moritz 

[21:19] <dogbert17> rindolf: I get this with /usr/bin/time: ret = 7634212216 ; 634212216624.14user 0.39system 10:24.35elapsed 100%CPU (0avgtext+0avgdata 182076maxresident)k

[21:21] <rindolf> dogbert17: ah, seems fine

[21:21] <MasterDuke> rindolf: what does your perl6 --version say? if you haven't switched to the rakudo master branch in rakudobrew even latest will be pretty old

[21:23] <rindolf> shlomif[Perl6]:$base/perl6-examples/categories/euler$ perl6 --version

[21:23] <rindolf> This is Rakudo version 2017.06-228-g46e009bf1 built on MoarVM version 2017.06-70-ga3a58c82

[21:23] *** raschipi left
[21:23] <MasterDuke> yeah, latest is 2018.02-something

[21:23] <[Coke]> 178466816  maximum resident set size

[21:24] <[Coke]> ... that is not latest.

[21:24] <[Coke]> Please try again on the latest release to see if that helps.

[21:24] <rindolf> [Coke]: ok

[21:25] <rindolf> tomorrow

[21:25] <[Coke]> (mine is... about 170M, I think)

[21:25] <rindolf> night all

[21:26] <dogbert17> good night rindolf

[21:32] *** rindolf left
[21:36] *** cdg_ joined
[21:40] *** cdg left
[21:55] *** TEttinger joined
[21:56] *** comborico1611 joined
[21:57] *** vcv left
[22:05] *** zakharyas left
[22:05] *** skids left
[22:07] *** cognominal left
[22:09] *** espadrine joined
[22:15] *** broquaint left
[22:19] *** comborico joined
[22:20] <comborico> Does anyone have any preference for joomla over wordpress?

[22:20] <comborico> I'm looking for free hosting of a simple website for employment purposes.

[22:30] *** breinbaas left
[22:32] <dylanwh> wordpress is better imho

[22:36] <Xliff> I hate Joomla with a passion.

[22:36] <Xliff> Wordpress is the superior solution, but only marginally.

[22:36] <Xliff> I really should try to find another blogging solution written in per.

[22:37] <Xliff> s/per'.'/perl./

[22:37] <Xliff> Kinda like Slashcode but more modern.... and in perl6....

[22:37] <El_Che> yeah, no

[22:37] <El_Che> :)

[22:39] <Xliff> No?

[22:39] <Xliff> :P

[22:40] <Xliff> El_Che: No what?

[22:40] <AlexDaniel> oh my god… https://www.youtube.com/watch?v=aFuA50H9uek

[22:40] <AlexDaniel> … bisectable6, if anything, I'm on your side, ok?

[22:41] <ecocode> El_Che: ehlo

[22:46] <El_Che> lo

[22:46] <ecocode> coming tomorrow ?

[22:46] <El_Che> no, kid with fever, skipping work also :(

[22:47] <ecocode> ayé

[22:47] <ecocode> griep ?

[22:48] <El_Che> a cold + asthma == fever

[22:48] <AlexDaniel> quotable6: /‘slaps’ \s+ [‘Bot’|\w+‘able’6?]/

[22:48] <quotable6> AlexDaniel, OK, working on it! This may take up to three minutes (4506639 messages to process)

[22:48] <El_Che> happens roughly once a year

[22:49] <ecocode> ouch

[22:49] <quotable6> AlexDaniel, https://gist.github.com/514ccf01bbd76d815805eba012c71321

[22:50] <ecocode> so playing Perl6 while keeping an eye on the child ?

[22:50] <AlexDaniel> … bisectable6, right? :S

[22:52] <El_Che> going to bed actually ;). say hi to everyone from me

[22:56] *** pharv left
[22:58] *** pharv joined
[22:59] <ecocode> will do

[23:03] *** pharv left
[23:03] *** pharv joined
[23:05] *** sena_kun left
[23:05] <comborico> LOL you have to install a plugin to delete a Joomla account . . .

[23:06] *** MasterDuke left
[23:06] *** cdg_ left
[23:07] *** cdg joined
[23:07] *** preaction left
[23:08] *** pharv left
[23:09] *** MasterDuke joined
[23:10] *** preaction joined
[23:17] *** kurahaupo_ left
[23:26] *** comborico left
[23:40] *** pharv joined
[23:47] *** obfusk left
[23:47] *** wamba left
[23:48] *** obfusk joined
[23:54] *** pmurias left
[23:55] <Xliff> comborico1611: You have to install a plugin to do anything with Joomla.

