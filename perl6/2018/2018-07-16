[00:06] *** ufobat_ left
[00:13] *** MilkmanDan left
[00:14] *** jameslenz joined
[00:15] *** MilkmanDan joined
[00:19] *** jameslenz left
[00:22] *** simcop2387 joined
[00:28] *** benjikun joined
[00:31] *** JustThisGuy joined
[00:34] *** sauvin left
[00:35] *** sauvin joined
[00:36] *** markoong left
[00:47] <JustThisGuy> Hi all! I have a question about :exists. I have a couple of pared-down examples to illustrate the problem/question. The weird think is that in both cases, the code works in the perl6 REPL. Here is the first: https://gist.github.com/JustThisGuyAZ/da906dc837f8c664e10a3e17b9748d22

[00:48] <JustThisGuy> s/think/thing/

[00:49] <JustThisGuy> Oh, yeah, here's the version info: This is Rakudo version 2018.06 built on MoarVM version 2018.06

[00:49] <JustThisGuy> implementing Perl 6.c.

[00:49] <geekosaur> is <y> a typo?

[00:49] <geekosaur> (I think you wanted <$y>)

[00:49] <geekosaur> oh, in fact you didn't an you're hitting a slight gotcha

[00:50] <geekosaur> {$x}{$y}

[00:50] <geekosaur> <xxx> is shorthand for {'xxx'}

[00:50] <geekosaur> if you want a variable or expression, use the {} form

[00:50] <JustThisGuy> Oh, it's treating the $s as string litterals?

[00:50] <geekosaur> yes

[00:51] <JustThisGuy> Gotcha! Thanks. I bet that's it. I'll give it a try real quick.

[00:52] <JustThisGuy> Yep. That was it. Thanks geekosaur!

[00:53] <JustThisGuy> The dumb thing is I knew that at one point. I've been away from perl6 for a while. :)

[00:54] *** JustThisGuy left
[00:56] <MasterDuke> fwiw, 0..3 can be written as ^4

[00:59] <tbrowder_> not sure about problem you see but <><> i don‚Äôt think is correct syntax. try {$x}{$y} on the hash.

[00:59] <lucs_> He goed away.

[01:00] *** lucs_ is now known as lucs

[01:00] <tbrowder_> and got help from invisible person, too!

[01:06] *** molaf left
[01:07] <geekosaur> hm?

[01:12] *** spycrab0 joined
[01:18] *** molaf joined
[01:31] <Geth> ¬¶ DBIish: kjpye++ created pull request #125: Add code to fail with explicit error messages when required attribute‚Ä¶

[01:31] <Geth> ¬¶ DBIish: review: https://github.com/perl6/DBIish/pull/125

[02:03] *** molaf left
[02:15] *** jameslenz joined
[02:15] *** molaf joined
[02:19] *** jameslenz left
[02:25] *** wamba joined
[02:38] *** Xliff left
[02:55] *** subr left
[03:01] *** eliasr left
[03:47] *** molaf left
[04:15] *** jameslenz joined
[04:19] *** jameslenz left
[04:31] *** jerome_ joined
[04:33] *** jeromelanteri left
[04:35] *** jerome_ left
[04:40] *** sno left
[04:46] *** x[LGWs4x4i]uG2N0 left
[04:50] *** x[LGWs4x4i]uG2N0 joined
[04:53] *** psychoslave joined
[04:53] *** curan joined
[04:55] *** psychoslave left
[04:56] *** psychoslave joined
[04:57] <warriors> hi, i just install p6doc .. but p6doc return, not such type Str

[04:58] <warriors> p6doc Pod::To::HTML seem to work though

[05:16] <geekosaur> hm. I get an error installing it

[05:16] * geekosaur probably needs to purge everything again...

[05:16] <warriors> you need the latest perl6

[05:16] <warriors> 2018

[05:17] <warriors> what is your perl6 version

[05:17] <geekosaur> version => v2018.06.193.gaff.96.ba

[05:18] <warriors> should work i guess

[05:18] <geekosaur> m: dd $*PERL.version

[05:18] <camelia> rakudo-moar aff96baef: OUTPUT: ¬´v6.c‚ê§¬ª

[05:18] <geekosaur> sigh

[05:19] <geekosaur> m: dd $*PERL.compiler.version

[05:19] <camelia> rakudo-moar aff96baef: OUTPUT: ¬´v2018.06.193.gaff.96.baef‚ê§¬ª

[05:19] <geekosaur> right, I got that anyway, derp

[05:20] *** salasrod joined
[05:21] *** xtreak joined
[05:26] *** ufobat_ joined
[05:35] <geekosaur> hm. I might have too new a version. I'm getting some segfaults occasionally

[05:38] <geekosaur> ===FATAL: Table 4 has a mixture of visible and invisible column-separator types.

[05:54] *** wamba left
[06:10] *** psychoslave left
[06:10] *** psychoslave joined
[06:15] *** jameslenz joined
[06:18] *** sno joined
[06:18] *** jimmy_ joined
[06:19] <jimmy_> join 

[06:20] *** jameslenz left
[06:21] *** Summertime left
[06:24] *** Summertime joined
[06:38] *** konsolebox left
[06:41] *** konsolebox joined
[06:49] *** lizmat left
[07:04] *** lizmat joined
[07:11] *** robertle joined
[07:11] *** stmuk_ joined
[07:13] *** stmuk left
[07:13] *** wamba joined
[07:14] *** jimmy_ left
[07:17] *** wamba left
[07:30] *** zakharyas joined
[07:31] *** spycrab0 left
[07:33] *** domidumont joined
[07:34] *** rindolf joined
[07:43] *** psychoslave left
[07:47] *** wamba joined
[07:54] *** sena_kun joined
[08:01] *** scimon joined
[08:02] *** dakkar joined
[08:03] *** zakharyas left
[08:05] *** wamba left
[08:06] *** zakharyas joined
[08:08] *** Ven` joined
[08:15] *** jameslenz joined
[08:19] *** psychoslave joined
[08:20] *** jameslenz left
[08:20] *** ChoHag joined
[08:21] <xinming> eval: class B { method test { "x".say } }; class A { has $b is required handles <test>; }; A.new(:b(B.new));

[08:21] <evalable6> xinming, rakudo-moar aff96baef: OUTPUT: ¬´(exit code 1) 04===SORRY!04=== Error while compiling /tmp/XpZyVcbEmR‚ê§'is required' only works on a public attribute $.b, not a private $!b‚ê§at /tmp/XpZyVcbEmR:1‚ê§¬ª

[08:22] <xinming> bug?

[08:22] <xinming> eval: class B { method test { "x".say } }; class A { has $.b is required handles <test>; }; A.new(:b(B.new));

[08:22] <evalable6> xinming, rakudo-moar aff96baef: OUTPUT: ¬´¬ª

[08:22] <xinming> Oops

[08:28] *** HaraldJoerg joined
[08:28] <moritz> xinming: you don't call "test", so the handles isn't activated

[08:29] <moritz> m: class B { method test { "x".say } }; class A { has $.b is required handles <test>; }; A.new(:b(B.new)).test

[08:29] <camelia> rakudo-moar aff96baef: OUTPUT: ¬´x‚ê§¬ª

[08:29] <moritz> seems to be working

[08:34] *** gregf_ joined
[08:42] *** xtreak left
[08:48] *** domidumont left
[08:49] *** domidumont joined
[08:49] *** wamba joined
[09:12] *** Grrrr left
[09:15] *** xtreak joined
[09:19] *** pmurias joined
[09:26] *** araujo joined
[09:26] *** araujo left
[09:26] *** araujo joined
[09:27] *** zakharyas1 joined
[09:30] *** zakharyas left
[09:33] *** spycrab0 joined
[09:34] *** dogbert2 joined
[09:35] *** rindolf left
[09:35] *** kerframil left
[09:37] *** rindolf joined
[09:38] *** felher left
[09:41] *** felher joined
[09:47] <tbrowder_> g‚Äôday, #perl6

[09:49] <El_Che> tbrowder_: o/

[09:50] <tbrowder_> El_zche: \o    looking for critique of doc PR

[09:51] <tbrowder_> duh, PR #2177

[09:52] <tbrowder_> other than the travis failure :-(

[09:53] <El_Che> the tests seem to fail?

[09:53] <El_Che> https://travis-ci.org/perl6/doc/jobs/404236413

[09:57] *** Xliff joined
[09:57] <Xliff> \o

[10:02] *** salasrod left
[10:03] *** psychoslave left
[10:04] *** zakharyas1 left
[10:04] *** zakharyas joined
[10:05] *** zakharyas left
[10:06] *** zakharyas joined
[10:08] <tbrowder_> Xliff: hi!

[10:09] <tbrowder_> El_Che: fixed a typo, tests should work now

[10:10] <Xliff> Can something like this work in NativeCall: class GtkWidget is repr('CPointer') { }; class GtkContainer is GtkWidget is repr('CPointer') { }

[10:10] <Xliff> Or do I need to nativecast EVERYTHING?

[10:14] <lizmat> Xliff: I have no answer, perhaps moritz timotimo jnthn mIght know

[10:14] <lizmat> or ask it on SO  :-)

[10:14] <Xliff> Thanks, lizmat.

[10:15] <Xliff> Found a bug in the docs...

[10:15] <Xliff> https://docs.perl6.org/routine/nativecast#Function_Pointers <- That should be nativecall#Function_Pointers

[10:15] <Xliff> https://docs.perl6.org/routine/nativecast <- Found on this page. 

[10:15] <Xliff> What's the best way to fix?

[10:15] <sena_kun> Xliff, could you please fill an issue?

[10:16] *** jameslenz joined
[10:17] <Xliff> sena_kun: Can I just provide a PR?

[10:17] <sena_kun> Xliff, if you can fix that - sure. :)

[10:17] <Xliff> perl6/doc?

[10:17] <sena_kun> Xliff, Yes.

[10:18] <sena_kun> Xliff, I think you need to fix https://github.com/perl6/doc/blob/master/doc/Language/nativecall.pod6#L790 <- link to something better.

[10:19] <Xliff> OK. I will file an issue. Not as simple a fix as I thought. LOL

[10:20] <sena_kun> To something like `/langauge/NativeCall#Function_Pointers`.

[10:20] *** robertle_ joined
[10:20] <sena_kun> Or around that area. You can play with docs locally, e.g. make a change, build(it became quite fast over years I believe), see if the issue fixed.

[10:20] *** jameslenz left
[10:21] *** domidumont left
[10:23] <Xliff> sena_kun: Will do that.

[10:23] <Xliff> Thanks for the suggestion.

[10:25] <sena_kun> Xliff, thanks a lot. I'd give you a better help, yet the pod 6 link format is a bit hazy in my head, so I am not 100% sure about syntax.

[10:31] <Geth> ¬¶ doc: Altai-man self-assigned Circular and Incorrect link on NativeCast HTML page. https://github.com/perl6/doc/issues/2178

[10:31] *** xtreak left
[10:35] *** heerold joined
[10:36] *** xtreak joined
[10:36] <heerold> hello all

[10:37] <sena_kun> o/

[10:40] <Xliff> Altai-man?

[10:40] <sena_kun> Xliff, yup.

[10:40] <Xliff> :)

[10:41] <Xliff> OK. I am making the docs now. I see you self-assigned. Just didn't want to duplicate efforts.

[10:41] <sena_kun> Xliff, if you don't mind. Ah, I thought you're not. Feel free to self-assign, sure.

[10:41] *** psychoslave joined
[10:42] <Geth> ¬¶ doc: Altai-man self-unassigned Circular and Incorrect link on NativeCast HTML page. https://github.com/perl6/doc/issues/2178

[10:43] <Xliff> make -j20 barely gives this machine any load at all.

[10:45] <heerold> OK, so perl 6 is for perl 6, but what about perl 5 compilers?

[10:45] <Geth> ¬¶ Pod-To-HTML: 2c2124fccf | (Tom Browder)++ (committed using GitHub Web editor) | lib/Pod/To/HTML.pm

[10:45] <Geth> ¬¶ Pod-To-HTML: add css info

[10:45] <Geth> ¬¶ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/commit/2c2124fccf

[10:46] <pmurias> heerold: are you asking on which channel you should ask Perl 5 questions?

[10:47] <heerold> pmurias: yes may be or if there is a possibility to run perl 5 code with the perl 6 compiler, because I get errors on call

[10:50] *** Ven` left
[10:51] <pmurias> heerold: do you want to use a Perl 5 module from your Perl 6 program or do you want to run your Perl 5 program with the Perl 6 compiler?

[10:51] <heerold> pmurias: I want to compile my Perl 5 script

[10:53] <pmurias> heerold: as far as I know Perl 6 can't currently do it

[10:54] <Geth> ¬¶ doc/handle-6.d: 5c5e02238a | (Zoffix Znet)++ | doc/Type/IO/Handle.pod6

[10:54] <Geth> ¬¶ doc/handle-6.d: Include example of .READ/.WRITE/.EOF on IO::Handle

[10:54] <Geth> ¬¶ doc/handle-6.d: review: https://github.com/perl6/doc/commit/5c5e02238a

[10:54] <heerold> pmurias: thanks

[10:55] <tbrowder_> doc PR #2177 is passing tests now, had to add a missing dir

[10:56] <Geth> ¬¶ doc: Xliff self-assigned Circular and Incorrect link on NativeCast HTML page. https://github.com/perl6/doc/issues/2178

[10:58] <Xliff> That's weird. I keep getting "$SOLIDUS" in my local doc pages.

[10:58] <Xliff> That's in the link where I made my changes.

[11:03] *** zakharyas left
[11:05] *** zakharyas joined
[11:10] *** xtreak left
[11:11] *** sno left
[11:12] *** xtreak joined
[11:21] *** sno joined
[11:22] *** Zoffix joined
[11:22] <Zoffix> heerold: you use Inline::Perl5 module for that purpose

[11:22] <Zoffix> eco: Inline::Perl5

[11:22] <buggable> Zoffix, Inline::Perl5 'Use Perl 5 code in a Perl 6 program': https://github.com/niner/Inline-Perl5 1 other matching results: https://modules.perl6.org/s/Inline%3A%3APerl5

[11:23] <Zoffix> pmurias: FWIW, Perl 5 support (via Inline::Perl) is part of the language spec.

[11:24] <Zoffix> m: "/".uniname.say

[11:24] <camelia> rakudo-moar ee9314d02: OUTPUT: ¬´SOLIDUS‚ê§¬ª

[11:24] <Zoffix> Xliff: ^ fwiw, that comes from the URL fixer-upper that converts special chars to something that can be used in a filename

[11:24] *** zakharyas left
[11:25] <Zoffix> Xliff: the dev app should be able to handle those right and on the live site we have mod_rewrite rules for them

[11:25] <heerold> Zoffix: I will try this, thanks

[11:25] *** Ven` joined
[11:26] <pmurias> Zoffix: that's why I asked him if he wants to use Perl 5 code from his Perl 6 program (a good task for Inline::Perl5)

[11:26] *** eliasr joined
[11:26] <pmurias> Zoffix: I have read you new features policy

[11:27] <Zoffix> .oO( he? )

[11:27] *** sno left
[11:27] <Zoffix> pmurias: it's an early draft, so feel free to make changes by direct commit IMO

[11:28] <Zoffix> pmurias: also, in the past you mentioned overflow tests should not be part of the spec. They're now part of APPENDICES to the spec, which are optional for implementations to follow: https://github.com/perl6/roast/tree/master/APPENDICES

[11:28] * Zoffix gotta go &

[11:28] *** Zoffix left
[11:28] *** sno joined
[11:30] <heerold> Zoffix, pmurias: so I have to first install the module Inline::Perl5

[11:34] <Xliff> Zoffix: Thanks for that. Was able to trigger the issue somewhere else. What is the best way to test doc changes locally to make sure they work before submitting a PR?

[11:39] <pmurias> heerold: Inline::Perl5 runs your Perl 5 program using the Perl 5 interpreter (from Perl 6)

[11:40] <heerold> hm, I did explain it falsely I guess

[11:41] <heerold> pmurias: the module was not received automatically, I did download the file and copy it to the destination

[11:41] <heerold> now I get another error: Cannot locate native library 'D:\sperl\perl\resources\libraries\p5helper.dll': error 0x7e

[11:43] <pmurias> heerold: what do you mean by received automatically?

[11:43] *** sno left
[11:43] *** klapperl joined
[11:44] <heerold> pmurias, I know the mechanism that sometimes modules are fetched automatically from the web, this is not possible for me because I am sitting behind a company firewall

[11:44] *** klapperl_ left
[11:49] <buggable> New CPAN upload: Test-Performance-0.2.1.tar.gz by TYIL http://modules.perl6.org/dist/Test::Performance:cpan:TYIL

[11:49] <tyil> hype

[11:53] *** raschipi joined
[11:59] *** Grrrr joined
[12:05] <Voldenet> m: sub a { $^a }; "test". self.&a.say

[12:05] <camelia> rakudo-moar ee9314d02: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed postfix call‚ê§at <tmp>:1‚ê§------> 3sub a { $^a }; "test". self.7‚èè5&a.say‚ê§¬ª

[12:05] <Voldenet> m: sub a { $^a }; "test".self.&a.say

[12:05] <camelia> rakudo-moar ee9314d02: OUTPUT: ¬´test‚ê§¬ª

[12:06] <Voldenet> Odd.

[12:10] *** aqegtfs joined
[12:10] <aqegtfs> Voldenet: only alphanumeric methods can be detached (and .&foo isn't one, because of `&` char).

[12:11] <aqegtfs> Voldenet: only *chains* with alphanumeric methods can be detached. So even if you got .&foo somewhere in the detached chain, that's not allowed.

[12:11] <aqegtfs> Otherwise there are a lot of potential ambiguities whether an operator or a detached method call was meant

[12:11] <timotimo> so you can always .self, right?

[12:11] <timotimo> (unless you may have a Failure return value at the start)

[12:12] *** sno joined
[12:12] <aqegtfs> .self is inherited from Mu, so yea

[12:14] <aqegtfs> alphanumeric + ' + -

[12:14] <aqegtfs> + _

[12:14] <Voldenet> aqegtfs: I get it, but the position of the error message is... ugh

[12:14] <Voldenet> confusing?

[12:14] *** domidumont joined
[12:16] <aqegtfs> m: 10 .&uc

[12:16] <camelia> rakudo-moar ee9314d02: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed postfix call (only alphabetic methods may be detached)‚ê§at <tmp>:1‚ê§------> 0310 .7‚èè5&uc‚ê§¬ª

[12:16] *** aqegtfs left
[12:16] <Voldenet> m: 10.self.&uc

[12:16] <camelia> rakudo-moar ee9314d02: ( no output )

[12:16] *** jameslenz joined
[12:16] <Voldenet> m: 10. self.&uc

[12:16] <camelia> rakudo-moar ee9314d02: OUTPUT: ¬´5===SORRY!5===‚ê§Decimal point must be followed by digit‚ê§at <tmp>:1‚ê§------> 0310.7‚èè5 self.&uc‚ê§Malformed postfix call‚ê§at <tmp>:1‚ê§------> 0310. self.7‚èè5&uc‚ê§‚ê§¬ª

[12:17] *** domidumont left
[12:18] *** domidumont joined
[12:19] *** domidumont left
[12:19] *** domidumont joined
[12:21] *** jameslenz left
[12:27] *** aqegtfs joined
[12:28] <aqegtfs> Voldenet: yeah, that's the ambiguity I mentioned. It thinks you're writing a decimal above, and earlier it thinks you're trying to use an operator. If it could 100% know for sure you tried to detach a non-alpha method, it may as well have it work instead of throw an error.

[12:28] *** sno left
[12:28] <aqegtfs> So the error points to the place where a misparse occurs, not where the detachment happened.

[12:31] <Geth> ¬¶ modules.perl6.org: cb07ad61e8 | (Zoffix Znet)++ (committed using GitHub Web editor) | use-me-for-commit-triggers

[12:31] <Geth> ¬¶ modules.perl6.org: [NEWDB] try to purge duped modules

[12:31] <Geth> ¬¶ modules.perl6.org: 

[12:31] <Geth> ¬¶ modules.perl6.org: Potential temporary workaround for

[12:31] <Geth> ¬¶ modules.perl6.org: https://github.com/perl6/modules.perl6.org/issues/106

[12:31] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/cb07ad61e8

[12:32] *** aqegtfs left
[12:42] *** sno joined
[12:43] *** xtreak left
[12:52] <pmurias> .tell Zoffix what I'm a bit concerned with the spec changes proposal is the low point cost of adding an extra method argument

[12:52] <yoleaux> pmurias: I'll pass your message to Zoffix.

[13:00] <raschipi> I wonder if that process will evolve into something PEP-like really fast, and if it's worthy just going there, instead of getting there in an adhoc manner.

[13:01] *** Zoffix joined
[13:04] <Zoffix> pmurias: I don't really want coredevs to jump through a load of hoops for anything that isn't a bug fix or to treat them as robots incapable of thought where everything must be mandated through policy. Going by memory, an addition of a method argument will require: documentation (or at least an open docs Issue), spectests (or at least minimal feature tests + an open Issue on roast), and a notification to all

[13:04] <yoleaux> 12:52Z <pmurias> Zoffix: what I'm a bit concerned with the spec changes proposal is the low point cost of adding an extra method argument

[13:04] <Zoffix> other coredevs about the addition. So that's already plenty of room for anything poorly-designed or controvertial to get noticed before it goes into a release.

[13:06] <Zoffix> + for it to be properly documented and tested, at least "eventually" (when the docs/roast issues are resolved by someone)

[13:10] *** molaf joined
[13:12] <lizmat> Zoffix: re https://twitter.com/zoffix/status/1018004966613618689 , is there a public version of the image I can use in the P6W ?

[13:12] <Zoffix> lizmat: yeah, it's in marketing repo: https://github.com/perl6/marketing/blob/master/Flyers/Futureproof--1531540189/Futureproof--1531540189.jpg

[13:12] <Zoffix> There's also a PDF: https://github.com/perl6/marketing/tree/master/Flyers/Futureproof--1531540189

[13:13] <lizmat> that still has the typos in it, correct ?

[13:13] <Zoffix> lizmat: yeah

[13:13] <Zoffix> lizmat: well, missing comma and missing "the". Are there other typos?

[13:14] <lizmat> not that I know off or seen just now

[13:14] <lizmat> hmmm

[13:15] <lizmat> perhaps "of the programming of the future" -> "of programming in the future"  ?

[13:15] <Zoffix> k, I'll fix it up right now

[13:15] <lizmat> cool!  Zoffix++

[13:20] *** zakharyas joined
[13:21] <Geth> ¬¶ marketing: 4beb87b6e0 | (Zoffix Znet)++ | 6 files

[13:21] <Geth> ¬¶ marketing: Fix up typos on Futureproof flyer / ID 1531540189

[13:21] <Geth> ¬¶ marketing: 

[13:21] <Geth> ¬¶ marketing: Closes https://github.com/perl6/marketing/issues/16

[13:21] <Geth> ¬¶ marketing: review: https://github.com/perl6/marketing/commit/4beb87b6e0

[13:21] <Zoffix> lizmat: fixed: https://github.com/perl6/marketing/blob/master/Flyers/Futureproof--1531540189/Futureproof--1531540189.jpg

[13:22] <lizmat> Zoffix++

[13:22] <lizmat> so, shall I refer to the file in the weekly ?  or upload it to wordpress as a separate asset ?

[13:22] <Zoffix> lizmat: I think it's safer to upload as a separate asset

[13:23] <Zoffix> Eventually there's be a marketing web app with permalinks to assets and the files in repo might get restructured

[13:23] <Zoffix> s/there's/there'll/;

[13:23] <lizmat> ok, will do

[13:25] *** jameslenz joined
[13:25] <Zoffix> tyil: I found simple time measures like in your Test::Performance are a bit simplistic to be a general tool for perf measurement. You get JIT and GC skewing results.

[13:25] <Zoffix> m: { for ^1000 { my @a = ^100; }; say now - ENTER now }

[13:25] <camelia> rakudo-moar abfa1b159: OUTPUT: ¬´0.0566984‚ê§¬ª

[13:25] <Zoffix> The above will likely get more than twice faster if you pre-heat JIT

[13:25] <Zoffix> m: for ^1000 { my @a = ^100; }; { for ^1000 { my @a = ^100; }; say now - ENTER now }

[13:25] <camelia> rakudo-moar abfa1b159: OUTPUT: ¬´0.02310777‚ê§¬ª

[13:26] <tyil> I've been considering to add an opt to run it a couple times before taking actual measurements

[13:26] <tyil> but I haven't gotten to that yet

[13:26] <Zoffix> m: for ^1000 { my @a = ^100; }; for ^10000 { DateTime.now }; { for ^1000 { my @a = ^100; }; say now - ENTER now }

[13:26] <camelia> rakudo-moar abfa1b159: OUTPUT: ¬´0.02476375‚ê§¬ª

[13:26] <Zoffix> and here possibly GC run to collect those dateitmes makes it a bit slower

[13:26] <Zoffix> m: for ^1000 { my @a = ^100; }; for ^10000 { DateTime.now }; use nqp; nqp::force_gc; { for ^1000 { my @a = ^100; }; say now - ENTER now }

[13:26] <camelia> rakudo-moar abfa1b159: OUTPUT: ¬´0.024147748‚ê§¬ª

[13:27] <pmurias> Zoffix: I just feel that silently adding some unneeded extra param is a lot more serious threat than a new class being added

[13:27] <Zoffix> Well, the GC thing gets in the way when you're measuring really fast operations

[13:27] *** HaraldJoerg left
[13:27] <Zoffix> pmurias: but it's not silently. Notifying all core devs is mandatory.

[13:27] *** sno left
[13:29] <Zoffix> pmurias: also, it's not set in stone. It'll be a trial period after 6.d release to see if the policy accomplishes the desired goals.

[13:30] <Zoffix> And as I've said, right now it's just a draft, so feel free to tweak it. I didn't even give the points much thought and they're probably an overcomplication all together.

[13:32] <pmurias> Zoffix: I do share your sentiment that they was new stuff sometimes gets just added to the core is not very good

[13:35] <timotimo> Zoffix: did you see when i inspected the @a = ^100 situation last week or so?

[13:35] <Zoffix> timotimo: nope

[13:36] <timotimo> iirc it comes down to the push-all method from the iterator that does ^100 being OSR-speshed, which doesn't make the fact available what the type it's called for is

[13:36] <timotimo> so every access to the target array (actually, i was using my int @a i believe) was being done through virtual function calls, rather than devirtualized to skip the indirection

[13:37] <Zoffix> . <- what you said

[13:37] <timotimo> you'll actually get an even worse situation dependin on how you do it, iirc

[13:37] <Zoffix> o <- my head :)

[13:37] <timotimo> allow me to rephrase

[13:37] <Zoffix> I meant I don't know anything about OSR/spesh/JIT :)

[13:38] *** HaraldJoerg joined
[13:38] <timotimo> OK, the effect is, though:

[13:38] <timotimo> if it first gets optimized because the inner loop gets run often, i.e. if your range is big enough, it'll create a sub-optimal optimization

[13:38] <timotimo> if it first gets optimized because the method is called often, you'll get much better code

[13:39] <timotimo> m: for ^1000 { my @a = ^100; }; { for ^1000 { my @a = ^100; }; say now - ENTER now }

[13:39] <camelia> rakudo-moar abfa1b159: OUTPUT: ¬´0.02210349‚ê§¬ª

[13:39] <timotimo> m: for ^1000 { my @a = ^100; }; { for ^10_000 { my int @a = ^1000; }; say now - ENTER now }

[13:39] <camelia> rakudo-moar abfa1b159: OUTPUT: ¬´0.1598018‚ê§¬ª

[13:39] <timotimo> too fast ...

[13:39] <timotimo> m: for ^1000 { my @a = ^100; }; { for ^100_000 { my int @a = ^1000; }; say now - ENTER now }

[13:39] <camelia> rakudo-moar abfa1b159: OUTPUT: ¬´1.39803853‚ê§¬ª

[13:39] <timotimo> m: for ^1000 { my int @a = ^100; }; { for ^100_000 { my int @a = ^1000; }; say now - ENTER now }

[13:39] <camelia> rakudo-moar abfa1b159: OUTPUT: ¬´1.3322191‚ê§¬ª

[13:39] <timotimo> forgot to put the "int" in there, too

[13:39] <timotimo> m: for ^1000 { my int @a = ^2; }; { for ^100_000 { my int @a = ^1000; }; say now - ENTER now }

[13:39] <camelia> rakudo-moar abfa1b159: OUTPUT: ¬´1.6228818‚ê§¬ª

[13:39] <timotimo> oh?

[13:40] <timotimo> not sure what i done wrong this time

[13:42] * Zoffix &

[13:42] *** Zoffix left
[13:49] *** woolfy joined
[13:52] *** wamba left
[13:54] *** xinming left
[13:56] *** xinming joined
[13:57] *** sno joined
[14:03] *** MasterDuke left
[14:05] *** curan left
[14:06] *** zakharyas left
[14:06] *** skids joined
[14:18] *** sno left
[14:21] *** zakharyas joined
[14:37] *** Libre joined
[14:40] *** ufobat_ left
[14:42] *** zakharyas left
[14:43] *** zakharyas joined
[14:44] <jkramer> m: my @foo[3;3] = [[1,2,3],[4,5,6],[7,8,9]]; .join.say for @foo;

[14:44] <camelia> rakudo-moar 38d046faf: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§¬ª

[14:45] <timotimo> shaped arrays iterate over all the elements

[14:45] <timotimo> rather than over slices like an array of arrays would

[14:45] <jkramer> Hmm

[14:45] <jkramer> That's confusing :)

[14:46] <timotimo> a little

[14:47] <jkramer> How would I turn a shaped array into an array of arrays?

[14:47] <timotimo> if it's two-dimensional, i'd go with rotor

[14:48] <timotimo> if it's three-dimensional, you'd need two rotors

[14:48] *** zakharyas left
[14:48] <jkramer> Yep that should work, thanks!

[14:48] <lizmat> .oO( cogs in cogs )

[14:57] <timotimo> all cogs are plastered

[15:07] *** zakharyas joined
[15:07] *** Libre left
[15:08] <raschipi> Like this: https://i.redd.it/wpgdnw2y13jx.gif ?

[15:09] *** sno joined
[15:10] *** psychoslave left
[15:10] *** fake_space_whale joined
[15:14] <lizmat> raschipi: wow

[15:17] <raschipi> lizmat: http://brettcvz.github.io/epicycles/

[15:18] <raschipi> Theres an interactive version at the bottom of that page.

[15:18] *** troys joined
[15:20] *** psychoslave joined
[15:23] *** subroot joined
[15:30] *** spycrab0 left
[15:43] *** molaf left
[15:51] *** MilkmanDan left
[15:51] *** squashable6 left
[15:51] *** squashable6 joined
[15:52] *** zakharyas left
[15:53] *** MilkmanDan joined
[15:54] *** psychoslave left
[16:00] <El_Che> notable6: weekly

[16:00] <notable6> El_Che, 4 notes: https://gist.github.com/afa1ddefda95db90f708e60183a80e7b

[16:02] <El_Che> lizmat: more optimizations? :)

[16:02] <lizmat> well, trying to, bit the current round of optimizations is turning out to be a bit turbulent  :-(

[16:03] <El_Che> as in breaking stuff?

[16:03] <lizmat> yeah  :-(

[16:03] <El_Che> you can not have a faster ommelet without breaking some extra eggs :)

[16:04] <El_Che> are the speed bumps due to a faster moarvm or nqp magic?

[16:04] <raschipi> Canary performance test is running under 1 second now, wow!

[16:09] <lizmat> raschipi: which canary ?

[16:09] <lizmat> test-t ?

[16:09] <raschipi> Yes

[16:09] <raschipi> with race

[16:09] <lizmat> ah, it's been doing that for 2 weeks already I think

[16:14] *** Ven` left
[16:16] <El_Che> how much faster is the XS version?

[16:19] *** lizmat left
[16:20] <raschipi> So fast it reset her connection

[16:23] <El_Che> hehe

[16:24] *** lizmat joined
[16:27] *** fake_space_whale left
[16:28] *** robertle_ left
[16:32] *** scimon left
[16:42] <Kaypie> when was i pinged?

[16:42] *** kerframil joined
[16:43] *** dakkar left
[16:43] <El_Che> Kaypie: never, accorging to my backlog

[16:44] <Kaypie> oh

[16:44] <raschipi> Didn't you have a variation of your nick before?

[16:44] <timotimo> kaiepi?

[16:44] <Kaypie> no

[16:44] <timotimo> .seen kaiepi

[16:44] <yoleaux> I saw Kaiepi 11 Jul 2018 21:38Z in #perl6: <Kaiepi>     The plus form flattens according to the single argument rule.

[16:44] <timotimo> seems like we have both a kaiepi and a kaypie

[16:44] <Kaypie> hexchat's telling i was pinged but none of my channels show it

[16:45] <Kaypie> lemme check my alts

[16:45] *** wamba joined
[16:46] <timotimo> on the 14th, moritz wrote to you

[16:46] <timotimo> when you pointed out "null multi_declarator"

[16:46] <Kaypie> what about morfent, mrofnet, merfont?

[16:48] <timotimo> i don't see anything

[16:49] <Kaypie> hm

[16:49] <Kaypie> aight, thanks anyway

[16:53] *** sno left
[16:59] *** Geth left
[16:59] *** Geth joined
[16:59] *** ChanServ sets mode: +v Geth

[17:10] *** jameslenz left
[17:22] *** koto joined
[17:23] *** koto left
[17:24] *** sena_kun left
[17:31] *** pecastro joined
[17:32] *** domidumont left
[17:32] *** molaf joined
[17:35] *** wamba left
[17:37] *** spycrab0 joined
[17:38] *** xinming left
[17:39] *** ufobat_ joined
[17:40] *** wamba joined
[17:43] *** sno joined
[18:00] <DrForr> o/

[18:02] <tbrowder_> DrForr: \o

[18:03] <DrForr> Heyo. More prodding today at the readline situation, figured out a different approach last night that I thought I'd try.

[18:09] *** uzl joined
[18:14] *** ExtraCrispy left
[18:17] <rindolf> DrForr: hi, sup?

[18:27] <Juerd> What's up with Readline?

[18:27] *** sauvin left
[18:27] <Juerd> "the readline situation" sounds rather grave

[18:29] * Juerd fondly recalls the workarounds he made at https://github.com/Juerd/shalog/blob/master/lib/Prompt.pm

[18:29] <Juerd> It was a nice, gentle introduction to NativeCall :)

[18:29] *** desperek joined
[18:29] <geekosaur> the readline situation is different platforms have different versions of readline, sometimes in different places, and it's hitting shortcomings of NativeCall with respect to both ABI versions and library path searches

[18:30] <Juerd> geekosaur: Ah, that seems to be what I ran into too, when I tried to augment the Perl 6 Readline with some NativeCall of my own: a version mismatch

[18:31] <Juerd> Line 20..38 of the code above was my workaround: simply load all versions and find the one that Readline uses by looking for a string stored in there :)

[18:33] *** ufobat_ left
[18:58] *** uzl left
[19:03] *** Guest76646 left
[19:16] *** xinming joined
[19:27] <Geth> ¬¶ doc: 98c30cda34 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/terms.pod6

[19:27] <Geth> ¬¶ doc: Remove unneeded indent of code

[19:27] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/98c30cda34

[19:27] <synopsebot> Link: https://doc.perl6.org/language/terms

[19:28] <[Coke]> that looks like you added an whitespace.

[19:28] <[Coke]> s/an//

[19:35] <AlexDaniel> [Coke]: but it will remove code indentation, no?

[19:40] <[Coke]> I guess? we're not picky about it anywhere else.

[19:40] *** stee3 is now known as stee

[19:43] *** Zoffix joined
[19:43] <Zoffix> [Coke]: yeah, I added whitespace in the sauce, but on the rendered page that will remove initial indent in code

[19:45] <Zoffix> (and yeah, we're not picky, but I authored the original and I didn't intend to indent it :))

[19:45] <Zoffix> m: say <didn't intend to indent it> xx 5 # tongue twister

[19:45] <camelia> rakudo-moar 980f692cc: OUTPUT: ¬´((didn't intend to indent it) (didn't intend to indent it) (didn't intend to indent it) (didn't intend to indent it) (didn't intend to indent it))‚ê§¬ª

[19:50] <Zoffix> Man, 6.d changelog gonna be fun, considering I can't really remember what I changed with @- constants and that was only like a month ago...

[19:51] <Zoffix> Actually, no, it'll be very easy, I just need to pretend Rakudo doesn't exit :)

[19:51] <Zoffix> no ZofBot? :o

[19:52] *** ZofBot joined
[19:52] *** ChanServ sets mode: +v ZofBot

[19:52] <Zoffix> ZofBot: damn, dude. You missed my awesome tongue twister!

[19:56] *** lizmat left
[19:57] *** psychoslave joined
[20:01] *** ChoHag left
[20:02] *** Zoffix left
[20:04] *** lizmat joined
[20:05] *** kerframil left
[20:38] *** Qwerasd joined
[20:40] <Qwerasd> How would I run a file to test a module? I took a break from developing a module and forgot how I was running the test file.

[20:40] <yoleaux> 10 Jul 2018 15:25Z <b2gills> Qwerasd: to get the index of an element add :k to .first `[<a b c d>].first('b'):k` or use .grep if you want more than one. Can also be inside `.first(:k,'b')` `.first('b',:k)`

[20:42] *** pmurias left
[20:42] *** pmurias joined
[20:50] *** raschipi left
[20:51] *** jameslenz joined
[20:58] <Qwerasd> I'm trying to install my module with zef and it's erroring on the sub files (i.e. MyModule::Foo) Saying that they can't be found.

[20:59] <Qwerasd> Is there something I need to put in the META6.json to make it work?

[20:59] <Qwerasd> Oh, do I need to add them to the provides? that's probably it, right?

[21:05] *** jameslenz left
[21:05] *** MasterDuke joined
[21:06] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/07/16/2018-29-cross-pollination/

[21:06] <Juerd> \o/

[21:09] <timotimo> Qwerasd: you don't have to add the test files to the provides, and you can use "zef test" for example to run the test files in t/ - not sure if it does xt/ by default, probably not.

[21:09] <buggable> New CPAN upload: PDF-Class-0.2.6.tar.gz by WARRINGD http://modules.perl6.org/dist/PDF::Class:cpan:WARRINGD

[21:15] *** wamba left
[21:16] *** psychoslave left
[21:19] *** skids left
[21:19] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Nuget-Build-0.0.1.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Sparrowdo-VSTS-YAML-Nuget-Build-0.0.1.tar.gz

[21:22] <Qwerasd> The lack of error reporting in threads is very annoying.

[21:24] <lizmat> Qwerasd: could you elaborate ?

[21:24] <Qwerasd> If something in a thread creates an error the thread dies silently. I'm probably doing something wrong, aren't I?

[21:25] <Qwerasd> That is to say if a thread dies it doesn't go to stdout.

[21:26] <lizmat> m: await start { die }

[21:26] <camelia> rakudo-moar 9abc10212: OUTPUT: ¬´An operation first awaited:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Died with the exception:‚ê§    Died‚ê§      in block  at <tmp> line 1‚ê§‚ê§¬ª

[21:26] <lizmat> seems to report ok in the simplest case

[21:26] <Qwerasd> Non-awaited

[21:26] <lizmat> Qwerasd: do you have a gist ?

[21:27] <Qwerasd> No, let me get you an example.

[21:28] <Qwerasd> m: start { die }; sleep 2;

[21:28] <camelia> rakudo-moar 9abc10212: ( no output )

[21:28] <Qwerasd> ^

[21:28] <Qwerasd> as apposed to

[21:28] <Qwerasd> m: die

[21:28] <camelia> rakudo-moar 9abc10212: OUTPUT: ¬´Died‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:29] <Xliff> m: start { die "Died"; } sleep 2;

[21:29] <camelia> rakudo-moar 9abc10212: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Strange text after block (missing semicolon or comma?)‚ê§at <tmp>:1‚ê§------> 3start { die "Died"; }7‚èè5 sleep 2;‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        statement‚Ä¶¬ª

[21:29] <Xliff> m: start { die "Died"; }; sleep 2;

[21:29] <camelia> rakudo-moar 9abc10212: ( no output )

[21:29] <Qwerasd> see

[21:29] <lizmat> ah, interesting

[21:30] <lizmat> yeah, that is a bug

[21:30] <Qwerasd> Doy

[21:30] <Qwerasd> I thought I must have just been missing something.

[21:30] *** rindolf left
[21:30] <lizmat> well, a bit of a gotcha

[21:31] <lizmat> the Promise that "start" returns is sunk

[21:31] <DrForr> Juerd: Thanks, looking.

[21:31] <lizmat> Qwerasd: it's the checking of the Promise in "await" that throws the error from the thread

[21:31] <Xliff> I just created a PR for p6-doc, however when I test it locally, the links don't work.

[21:31] <Xliff> I have had this happen on more than one page.

[21:32] <Qwerasd> I see. Is there any way I could direct that to stdout without blocking?

[21:32] <Xliff> Forward slashes become $SOLIDUS.

[21:32] <lizmat> since you never check the Promise, the exception in the thread goes into the wide blue yonder

[21:32] *** subr joined
[21:32] <Xliff> m: my $a = start { die "Died"; }; sleep 2; say $a.kept

[21:32] <camelia> rakudo-moar 9abc10212: OUTPUT: ¬´Cannot resolve caller kept(Promise: ); none of these signatures match:‚ê§    (Promise:U: *%_)‚ê§    (Promise:U: Mu \result, *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:33] <Juerd> I recognise that gotcha

[21:33] *** HaraldJoerg left
[21:33] <Juerd> Sunk promises are probably not a good idea but they're in examples everywhere :)

[21:34] *** subroot left
[21:34] <lizmat> Perhaps Promise.sink should add a .then that does a .result and sink that

[21:35] *** lizmat left
[21:35] *** Zoffix joined
[21:36] <Zoffix> m: start { CATCH { default { .say } }; die }; sleep 2

[21:36] <camelia> rakudo-moar 9abc10212: OUTPUT: ¬´Died‚ê§  in block  at <tmp> line 1‚ê§‚ê§¬ª

[21:36] *** lizmat joined
[21:36] <Zoffix> Qwerasd: you can use that ^. When 6.d language is released, Promises in sunk context will report errors automatically

[21:37] <Qwerasd> Thanks!

[21:38] <Zoffix> .tell lizmat the sunk promise throwing errors thing is on the 6.d TODO list: https://github.com/perl6/6.d-prep/blob/master/TODO/FEATURES.md#make-start-blocks-in-sink-context-attach-an-error-handler However, we can't do it by changing behaviour of .sink (can't detect callers lang), so some compile-time thing needs to be done instead. If you wanna volunteer the impl, that'd be great :)

[21:38] <yoleaux> Zoffix: I'll pass your message to lizmat.

[21:38] <lizmat> Zoffix: why don't we do that now already ?

[21:38] <yoleaux> 21:38Z <Zoffix> lizmat: the sunk promise throwing errors thing is on the 6.d TODO list: https://github.com/perl6/6.d-prep/blob/master/TODO/FEATURES.md#make-start-blocks-in-sink-context-attach-an-error-handler However, we can't do it by changing behaviour of .sink (can't detect callers lang), so some compile-time thing needs to be done instead. If you wanna volunteer the impl, that'd be great :)

[21:39] <Zoffix> lizmat: dunno. jnthn is the stakeholder. 

[21:39] <Zoffix> Maybe he just didn't want to have this behaviour in 6.c or maybe there are spectest blocking it

[21:40] <lizmat> perhaps, I find my naive approach doesn't cut it, so that might also be a reason

[21:41] <Geth> ¬¶ doc: Xliff++ created pull request #2180: - Fixes bad link in route page for nativecast.

[21:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2180

[21:42] <lizmat> hmmm.. install-core-dist appears to be doing ~ 30 promises in sink context

[21:51] <Zoffix> lizmat++ 

[21:51] <Zoffix> # good weekly

[21:53] <lizmat> ok, the simple fix I tried does not work

[21:53] <lizmat> and I'm too tired to think about that now

[21:55] <lizmat> afk&

[22:00] <jnthn> Zoffix, lizmat: I've pretty much figured it should be done as a language-level transform and for `start` in particular rather than Promise in general. It's really just a case of getting around to implementing it, and making sure it only does that with 6.d semantics. I'll take a look at it once I'm past the current mass of spesh-related work :)

[22:00] <jnthn> (Or anyone can feel free to try based on what I just described :))

[22:00] *** pmurias left
[22:01] <SmokeMachine> m: use v6.d.PREVIEW; my $a = start { die "Died"; }; sleep 2; say $a.kept

[22:01] <camelia> rakudo-moar 9abc10212: OUTPUT: ¬´Cannot resolve caller kept(Promise: ); none of these signatures match:‚ê§    (Promise:U: *%_)‚ê§    (Promise:U: Mu \result, *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[22:11] <Zoffix> alright :)

[22:11] <Zoffix> SmokeMachine: I think .kept is the Vow's method. Promise has .result

[22:12] <Zoffix> m: my $a = start { die "Died"; }; sleep 2; say $a.result

[22:12] <camelia> rakudo-moar 8a8ce95ef: OUTPUT: ¬´Tried to get the result of a broken Promise‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Original exception:‚ê§    Died‚ê§      in block  at <tmp> line 1‚ê§‚ê§¬ª

[22:12] <Zoffix> m: my $a = start { die "Died"; }; sleep 2; say $a.status

[22:12] <camelia> rakudo-moar 8a8ce95ef: OUTPUT: ¬´Broken‚ê§¬ª

[22:12] *** robertle left
[22:12] *** Zoffix left
[22:12] <SmokeMachine> Zoffix: thanks!

[22:13] <timotimo> vow's method is "keep", not "kept"; kept is a method to create a promise that is already kept

[22:13] <timotimo> that's why it only works on Promise:U

[22:14] <SmokeMachine> m: say await Promise.kept: 42

[22:14] <camelia> rakudo-moar 8a8ce95ef: OUTPUT: ¬´42‚ê§¬ª

[22:15] <timotimo> .broken also exists

[22:15] <timotimo> m: say await Promise.broken: 42

[22:15] <camelia> rakudo-moar 8a8ce95ef: OUTPUT: ¬´An operation first awaited:‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§Died with the exception:‚ê§    42‚ê§      in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[22:17] <jnthn> And .kept explicitly doesn't work on an instance to avoid making that mistake silently :)

[22:19] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Nuget-Build-0.0.2.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo::VSTS::YAML::Nuget::Build:cpan:MELEZHIK

[22:22] *** Qwerasd left
[22:27] *** pecastro left
[22:36] <warriors> the humble bundle have a perl5 book, i think it will be good idea, to get a perl6 book on the humble bundle at some point 

[22:37] <warriors> 1 dollar you get the perl one line bookand 4 other books

[22:39] *** raschipi joined
[22:39] <warriors> a Perl6 book for 1 dollar, may do it for some, they will be like, i got this book, might as well read it, and then  they will be like, i read it , might as well use Perl6 ... problem is Think Perl is already less than 1 dollar :/ .. they ruined my plans for Perl6 domination 

[22:39] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Nuget-Build-0.0.3.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo::VSTS::YAML::Nuget::Build:cpan:MELEZHIK

[22:40] <raschipi> warriors: Perl Foundation will give money so that you can print the brochure and distribute at events.

[22:53] *** desperek left
[23:01] *** jameslenz joined
[23:05] *** jameslenz left
[23:12] *** gabiruh left
[23:14] *** gabiruh joined
[23:16] *** kerframil joined
[23:26] <Geth> ¬¶ doc/handle-6.d: b88595b143 | (Zoffix Znet)++ | doc/Type/IO/CatHandle.pod6

[23:26] <Geth> ¬¶ doc/handle-6.d: Document .WRITE/.READ/.EOF on IO::CatHandle

[23:26] <Geth> ¬¶ doc/handle-6.d: 

[23:26] <Geth> ¬¶ doc/handle-6.d: These just throw X::NYI; blocking out these methods from IO::Handle

[23:26] <Geth> ¬¶ doc/handle-6.d: 

[23:26] <Geth> ¬¶ doc/handle-6.d: SAP (Spec APpendices): https://github.com/perl6/roast/commit/e0f6f389d5

[23:26] <Geth> ¬¶ doc/handle-6.d: Rakudo impl: https://github.com/rakudo/rakudo/commit/9246b03520

[23:26] <Geth> ¬¶ doc/handle-6.d: review: https://github.com/perl6/doc/commit/b88595b143

[23:26] *** raschipi left
[23:29] <Geth> ¬¶ doc/handle-6.d: f8453816dc | (Zoffix Znet)++ | doc/Type/IO/CatHandle.pod6

[23:29] <Geth> ¬¶ doc/handle-6.d: Reword IO::CatHandle's NYI's methods

[23:29] <Geth> ¬¶ doc/handle-6.d: 

[23:29] <Geth> ¬¶ doc/handle-6.d: Don't mention a specific implementation as these methods throwing

[23:29] <Geth> ¬¶ doc/handle-6.d: NYI ATM is advised by SAP now:

[23:29] <Geth> ¬¶ doc/handle-6.d: https://github.com/perl6/roast/commit/3e734149f1

[23:29] <Geth> ¬¶ doc/handle-6.d: review: https://github.com/perl6/doc/commit/f8453816dc

[23:31] <haxmeister> what did you do Geth ?

[23:39] *** kerframil left
[23:42] <Geth> ¬¶ doc: zoffixznet++ created pull request #2181: Document IO::[Cat]Handle.READ/.WRITE/.EOF

[23:42] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2181

[23:42] <Geth> ¬¶ doc/master: 5 commits pushed by (Zoffix Znet)++

[23:42] <Geth> ¬¶ doc/master: b1ff1b0ae9 | Document IO::Handle.READ/.WRITE/.EOF

[23:42] <Geth> ¬¶ doc/master: 5c5e02238a | Include example of .READ/.WRITE/.EOF on IO::Handle

[23:42] <Geth> ¬¶ doc/master: b88595b143 | Document .WRITE/.READ/.EOF on IO::CatHandle

[23:42] <Geth> ¬¶ doc/master: f8453816dc | Reword IO::CatHandle's NYI's methods

[23:42] <Geth> ¬¶ doc/master: 87f2365a0d | Merge pull request #2181 from perl6/handle-6.d

[23:42] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/98c30cda3404...87f2365a0da3

[23:43] *** kerframil joined
[23:43] *** nebuchadnezzar left
[23:46] *** avalenn joined
[23:48] *** Ven` joined
[23:48] *** buggable left
[23:48] *** buggable joined
[23:48] *** ChanServ sets mode: +v buggable

[23:52] *** Ven` left
[23:54] *** Celelibi joined
