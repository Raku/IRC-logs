[00:05] *** regreg left
[00:12] <tbrowder> ref p6 and chromebook: i just got my hands on one and there is already available an installable app: linux (beta).

[00:12] *** abraxxa left
[00:14] <tbrowder> it‚Äôs ubuntu and i will try to install p6 on it if it has enough ram and hd space; otherwise i will provide a small digital ocean droplet the user can ssh to for the p6 cli

[00:15] *** lgtaube joined
[00:15] *** kurahaupo joined
[00:15] *** p6bannerbot sets mode: +v lgtaube

[00:15] *** p6bannerbot sets mode: +v kurahaupo

[00:21] <jnthn> tbrowder: If it's Ubuntu you can perhaps just install a .deb instead of having to build it, which should greatly reduce the RAM needs compared to building it there 

[00:21] *** i1nfusion left
[00:23] *** i1nfusion joined
[00:24] *** p6bannerbot sets mode: +v i1nfusion

[00:30] *** nadim left
[00:43] *** i1nfusion left
[00:45] *** i1nfusion joined
[00:46] *** p6bannerbot sets mode: +v i1nfusion

[01:04] *** ryn1x joined
[01:04] *** p6bannerbot sets mode: +v ryn1x

[01:14] *** Manifest0 left
[01:14] *** Manifest0 joined
[01:15] *** p6bannerbot sets mode: +v Manifest0

[01:24] *** Averna joined
[01:25] *** p6bannerbot sets mode: +v Averna

[01:29] *** lizmat left
[01:29] *** Actualeyes joined
[01:29] *** p6bannerbot sets mode: +v Actualeyes

[01:34] *** ryn1x left
[01:45] *** vrurg joined
[01:46] *** p6bannerbot sets mode: +v vrurg

[02:22] <tbrowder> jnthn: good idea! thnx

[02:25] <buggable> New CPAN upload: Uzu-0.3.1.tar.gz by SACOMO http://modules.perl6.org/dist/Uzu:cpan:SACOMO

[02:33] <tbrowder> i‚Äôll try using nxadm‚Äôs rakudo-pkg repositories for chromebook ubuntu linux

[02:37] *** Ven`` left
[02:40] *** zacts joined
[02:40] *** p6bannerbot sets mode: +v zacts

[03:03] *** mowcat left
[03:04] *** ryn1x joined
[03:05] *** p6bannerbot sets mode: +v ryn1x

[03:06] *** kozet joined
[03:07] *** p6bannerbot sets mode: +v kozet

[03:07] <kozet> hey is there a way to ask .subst to replace the last occurrence of a match?

[03:12] <kozet> is the answer "pass * to :nth"?

[03:12] <kozet> because that seemed to work

[03:16] *** kktt007 joined
[03:16] *** p6bannerbot sets mode: +v kktt007

[03:22] *** ryn1x left
[03:26] *** kktt007 left
[03:37] *** Ven`` joined
[03:38] *** p6bannerbot sets mode: +v Ven``

[03:57] <loops> kozet: It sure looks like that is the case.  Can't find it in the docs though.

[03:58] <kozet> yeah should probably be noted

[04:00] *** uzl joined
[04:00] *** p6bannerbot sets mode: +v uzl

[04:02] <uzl> m: shell "date"

[04:02] <camelia> rakudo-moar 420abcb97: OUTPUT: ¬´Mon Dec 31 05:02:43 CET 2018‚ê§¬ª

[04:03] <uzl> m: my $var = shell "date"; say $var;

[04:03] <camelia> rakudo-moar 420abcb97: OUTPUT: ¬´Mon Dec 31 05:03:02 CET 2018‚ê§Proc.new(in => IO::Pipe, out => IO::Pipe, err => IO::Pipe, exitcode => 0, signal => 0, pid => 7696, command => ("date",))‚ê§¬ª

[04:04] <uzl> How do I store the stringified value returned by either `run` or `shell`? 

[04:05] <uzl> Everything just print to the terminal.

[04:08] <uzl> noted: https://news.ycombinator.com/item?id=18783655

[04:08] <uzl> weekly: https://news.ycombinator.com/item?id=18783655

[04:08] <notable6> uzl, Noted!

[04:15] <buggable> New CPAN upload: Sparrowdo-0.0.44.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo:cpan:MELEZHIK

[04:18] *** uzl left
[04:24] <loops> m: my $var = qqx{date}; say $var

[04:24] <camelia> rakudo-moar 420abcb97: OUTPUT: ¬´Mon Dec 31 05:24:56 CET 2018‚ê§‚ê§¬ª

[04:28] <loops> m: my $var = run("date", :out).out.slurp; say $var

[04:28] <camelia> rakudo-moar 420abcb97: OUTPUT: ¬´Mon Dec 31 05:28:49 CET 2018‚ê§‚ê§¬ª

[04:29] <loops> m: my $var = run("date", :out).out.slurp.chomp; say $var

[04:29] <camelia> rakudo-moar 420abcb97: OUTPUT: ¬´Mon Dec 31 05:29:44 CET 2018‚ê§¬ª

[04:33] *** uzl joined
[04:34] *** p6bannerbot sets mode: +v uzl

[04:34] <uzl> I've posted my previous question on SO: https://stackoverflow.com/questions/53983604/how-do-i-store-the-value-returned-by-either-run-or-shell

[04:34] *** uzl left
[04:36] *** zacts left
[04:44] <u-ou> Cannot import symbol Foo from Foo, because it already exists in this lexical scope. Why do I get this when exporting class Foo from module Foo?

[04:52] *** Cabanoss- joined
[04:53] *** p6bannerbot sets mode: +v Cabanoss-

[04:54] *** Cabanossi left
[05:08] *** Ven`` left
[05:09] <Geth> ¬¶ doc: ugexe++ created pull request #2530: Add docs on $?DISTRIBUTION

[05:09] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2530

[05:30] <pony> ah, I can just do Foo::Foo without 'is export'

[05:55] *** zacts joined
[05:55] *** p6bannerbot sets mode: +v zacts

[06:10] *** zacts left
[06:34] *** kktt007 joined
[06:35] *** p6bannerbot sets mode: +v kktt007

[06:35] *** reach_satori joined
[06:36] *** p6bannerbot sets mode: +v reach_satori

[06:40] *** vrurg left
[06:47] *** Averna left
[06:49] *** hythm_ joined
[06:49] *** p6bannerbot sets mode: +v hythm_

[06:49] <hythm_> p6: my @t = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".comb; @t.indices("H I"); @t[14]

[06:49] <camelia> rakudo-moar 32d480aba: ( no output )

[06:49] <hythm_> p6: my @t = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".comb; say @t.indices("H I"); say @t[14]

[06:49] <camelia> rakudo-moar 32d480aba: OUTPUT: ¬´(14)‚ê§O‚ê§¬ª

[06:50] <hythm_> Where does index 14 come from?

[06:52] <hythm_> should not it return index 7, what I'm doing wrong?

[06:58] <loops> hythm_: looks like indicies works on a string.. which ends up having all the characters separated by spaces first.

[06:59] <loops> m: my @t = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".comb; say ~ @t

[06:59] <camelia> rakudo-moar 32d480aba: OUTPUT: ¬´A B C D E F G H I J K L M N O P Q R S T U V W X Y Z‚ê§¬ª

[06:59] <loops> and H is in the 14th position accounting for those spaces

[07:00] <hythm_> aaah, makes sense now. thanks loops

[07:02] <loops> m: my @t = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".comb; say @t.join.indices('H')

[07:02] <camelia> rakudo-moar 32d480aba: OUTPUT: ¬´(7)‚ê§¬ª

[07:05] <hythm_> that works perfect, thank you

[07:22] *** dct joined
[07:22] *** p6bannerbot sets mode: +v dct

[07:29] *** i1nfusion left
[07:31] *** i1nfusion joined
[07:32] *** p6bannerbot sets mode: +v i1nfusion

[07:45] *** jmerelo joined
[07:45] *** p6bannerbot sets mode: +v jmerelo

[07:55] <Geth> ¬¶ doc: 7f6718347b | (Nick Logan)++ | doc/Language/variables.pod6

[07:55] <Geth> ¬¶ doc: Add docs on $?DISTRIBUTION

[07:55] <Geth> ¬¶ doc: 

[07:55] <Geth> ¬¶ doc: Requires https://github.com/rakudo/rakudo/pull/2574

[07:55] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7f6718347b

[07:55] <synopsebot> Link: https://doc.perl6.org/language/variables

[07:55] <Geth> ¬¶ doc: fdd5ef4c60 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Language/variables.pod6

[07:55] <Geth> ¬¶ doc: Merge pull request #2530 from ugexe/current-distribution

[07:55] <Geth> ¬¶ doc: 

[07:55] <Geth> ¬¶ doc: Add docs on $?DISTRIBUTION

[07:55] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/fdd5ef4c60

[08:04] *** |oLa| left
[08:24] *** regreg joined
[08:24] *** p6bannerbot sets mode: +v regreg

[08:29] *** cronus_ joined
[08:29] *** p6bannerbot sets mode: +v cronus_

[08:33] <cronus_> Hello everyone. Is there a way to explicitly install File::Zip from p6c using zef? when I try zef install File::Zip i get the one from cpan which is incompatible with Selenium::WebDriver.

[08:36] *** hythm_ left
[08:54] <jmerelo> cronus_: You can always try from source. But a more permanent solution would be to tell the author...

[08:56] <jmerelo> cronus_: there's some chance you can use the :from<> to install from a particular source. Let me see...

[08:57] <jmerelo> .tell tyil can you please check the log around this sentence? 

[08:57] <yoleaux> jmerelo: I'll pass your message to tyil.

[08:59] <jmerelo> cronus_: and right. If you do a zef search File::Zip you get two different versions and authors... The problem is that File::Zip is the default, and the latest version is from cpan. I think, anyway, that the p6c version is obsolete, but if it was versioned it could be installed directly.

[09:00] <jmerelo> cronus_: so I would say the real issue is what you mention about Selenium. It would be better if you raised an issue with the author, Tyil.

[09:05] <cronus_> jmerelo: thanks, I tried zef install https://github.com/azawawi/perl6-file-zip.git --force-install but I still get the version from cpan.

[09:05] <jmerelo> cronus_: Problem is that they are two different modules, but they have the same name. They have to be differenced by author. I'm forking now the "original" one and will try to propose that as a change.

[09:06] <jmerelo> cronus_: meanwhile, you might want to download and install from source. Just cloning the repo and doing a zef install . will do (maybe preceded by a zef build .)

[09:07] <cronus_> jmerelo: thanks, I'll try that

[09:12] *** kurahaupo left
[09:15] <cronus_> jmerelo: zef build . gave me !!!> Build failure: . After zef uninstall File::Zip and trying zef install https://github.com/azawawi/perl6-file-zip.git it seems to work. Thanks for your help

[09:15] <jmerelo> cronus_: great :-)

[09:19] *** nadim joined
[09:19] *** p6bannerbot sets mode: +v nadim

[09:27] <jmerelo> .tell lizmat is there some info about the next Perl Toolchain Summit? Because I'd like to propose a few topics and/or attend...

[09:27] <yoleaux> jmerelo: I'll pass your message to lizmat.

[09:29] <jmerelo> .tell lizmat (and maybe propose a venue)

[09:29] <yoleaux> jmerelo: I'll pass your message to lizmat.

[09:32] *** lizmat joined
[09:32] *** p6bannerbot sets mode: +v lizmat

[09:33] * lizmat clickbaits https://p6weekly.wordpress.com/2018/12/30/2018-53-goodbye-perljam/

[09:34] *** scimon joined
[09:35] *** Manifest0 left
[09:35] *** p6bannerbot sets mode: +v scimon

[09:35] *** Manifest0 joined
[09:36] *** p6bannerbot sets mode: +v Manifest0

[09:37] *** cronus_ left
[10:18] *** Manifest0 left
[10:18] *** Manifest0 joined
[10:19] *** p6bannerbot sets mode: +v Manifest0

[10:20] *** ChoHag joined
[10:21] *** p6bannerbot sets mode: +v ChoHag

[10:23] <moritz> lizmat: thanks!

[10:24] <moritz> I hadn't read that PerlJam had died; I'm very sad, I really liked him

[10:24] <El_Che> yeah :(

[10:26] *** jmerelo left
[10:27] <tyil> .

[10:27] <yoleaux> 08:57Z <jmerelo> tyil: can you please check the log around this sentence?

[10:27] <tyil> .tell jmerelo I can take a peek if it's still needed (in case its a bug on my end)

[10:27] <yoleaux> tyil: I'll pass your message to jmerelo.

[10:31] *** lizmat_ joined
[10:31] *** p6bannerbot sets mode: +v lizmat_

[10:35] *** lizmat left
[10:39] *** lizmat_ is now known as lizmat

[10:40] *** rindolf joined
[10:41] *** p6bannerbot sets mode: +v rindolf

[10:55] *** cpage joined
[10:56] *** p6bannerbot sets mode: +v cpage

[10:57] *** dogbert2_ joined
[10:57] *** p6bannerbot sets mode: +v dogbert2_

[11:04] <Ulti> wow Apple are making it harder and harder to actually just build software on macOS

[11:05] <Ulti> if anyone complains about macOS Mojave and building Rakudo tell them to do `open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg` installing XCode and the command line tools and signing the EULA is not enough in Mojave you also have to explicitly run that install package to get the header files in /usr/include!

[11:06] *** abraxxa joined
[11:06] <Ulti> starting to really hate Apple with each OS release they are making everything more and more idiot proof which also means expert fail

[11:06] *** p6bannerbot sets mode: +v abraxxa

[11:08] <Ulti> wow 1 hour to install them too this is crazy

[11:15] <Ulti> more fun is if you do `xcrun --show-sdk-path` you discover XCode has all of the headers/libs just in a super weird path... so Im not sure what this installer is even doing given you could just do a single hard link

[11:15] <Ulti> :<

[11:17] *** rindolf left
[11:17] *** reach_satori left
[11:18] * lizmat holds off upgrading to Mojave a little longer

[11:20] *** rindolf joined
[11:21] <Ulti> well its not something that will change ;3

[11:21] *** p6bannerbot sets mode: +v rindolf

[11:29] *** Ven`` joined
[11:30] *** p6bannerbot sets mode: +v Ven``

[11:31] *** lichtkind left
[11:43] *** lichtkind joined
[11:44] *** p6bannerbot sets mode: +v lichtkind

[11:45] *** lizmat_ joined
[11:45] *** p6bannerbot sets mode: +v lizmat_

[11:47] *** reach_satori joined
[11:47] *** p6bannerbot sets mode: +v reach_satori

[11:48] *** lizmat left
[11:52] *** mowcat joined
[11:53] *** p6bannerbot sets mode: +v mowcat

[11:59] *** marmor joined
[12:00] *** p6bannerbot sets mode: +v marmor

[12:00] *** jmerelo joined
[12:01] *** p6bannerbot sets mode: +v jmerelo

[12:02] <jmerelo> There are a few unanswered questions in StackOverflow. Can someone help? https://stackoverflow.com/questions/52082308/comparing-2-data-sets-possibly-with-concurrency-asynchronous-parallel-approach

[12:02] <yoleaux> 09:33Z <lizmat> jmerelo: the channel to ask this question on is #pts on irc.perl.org

[12:02] <yoleaux> 10:27Z <tyil> jmerelo: I can take a peek if it's still needed (in case its a bug on my end)

[12:02] <jmerelo> .tell tyil other than choosing that name, I guess you did OK, since you actually inserted the auth key

[12:02] <yoleaux> jmerelo: I'll pass your message to tyil.

[12:04] <tyil> it's one of the inconveniences of allowing duplicate module names 

[12:04] <yoleaux> 12:02Z <jmerelo> tyil: other than choosing that name, I guess you did OK, since you actually inserted the auth key

[12:04] <jmerelo> tyil: right.

[12:05] <jmerelo> Also, having two separate ways to store modules.

[12:05] <tyil> you should be able to give zef a :author, iirc

[12:05] <tyil> or :auth

[12:06] <jmerelo> tyil: that, too. Or if there are two different authors, ask for disambiguation. If the other author all of a sudden changes its version it will supersede your file. It might be a zef problem, too...

[12:07] <tyil> I generally try to have explicit dependencies in my META6.json, but it seems the de-facto standard is to just use the shortest name

[12:07] <tyil> which comes with all sorts of problems 

[12:08] <tyil> like when a dep gets a 2nd :auth, or you need a newer version of a dep than you already have installed

[12:09] <tyil> I should see if I can get assixt's `depend` command to include all those :meta data when it writes a dep to META6.json

[12:10] <jmerelo> tyil: great

[12:14] *** marmor left
[12:18] *** random_yanek left
[12:18] *** loops left
[12:41] *** molaf joined
[12:42] *** p6bannerbot sets mode: +v molaf

[12:43] <andrzejku> I followed DrForr advice and wrote my first blog post :D

[12:43] <andrzejku> unfortunately it is not related to Perl6

[12:43] <andrzejku> buuuut I am planning for the future to write Perl6 one

[12:44] <lizmat_> andrzejku++

[12:44] *** lizmat_ is now known as lizmat

[12:44] <andrzejku> Although I am afraid a little bit that people will ignore it it looks too amateur from view what I am usually reading

[12:44] <robertle> give us a link! 

[12:45] <andrzejku> https://damaxi.github.io/personal/notes/2018/12/18/logging-exercise.html

[12:46] <andrzejku> I wrote yesterday how to write a small snippet instead of creating logging function :P

[12:46] <andrzejku> robertle but I have to train

[12:50] <andrzejku> robertle I pasted a link onto reddit but noone like it :D

[12:53] *** abraxxa left
[12:53] *** abraxxa joined
[12:54] *** p6bannerbot sets mode: +v abraxxa

[12:55] <buggable> New CPAN upload: App-Mi6-0.2.4.tar.gz by SKAJI http://modules.perl6.org/dist/App::Mi6:cpan:SKAJI

[13:02] *** mowcat left
[13:03] *** WqZtM52a joined
[13:03] *** p6bannerbot sets mode: +v WqZtM52a

[13:08] *** abraxxa left
[13:15] <Geth> ¬¶ doc: ceedca6d70 | (JJ Merelo)++ | doc/Type/ForeignCode.pod6

[13:15] <Geth> ¬¶ doc: Documents ForeignCode as Rakudo specific

[13:15] <Geth> ¬¶ doc: 

[13:15] <Geth> ¬¶ doc: Also clarifies difference between name and ^name (name is Callable

[13:15] <Geth> ¬¶ doc: specific) and what <anon> means. Closes #2528.

[13:15] <synopsebot> Link: https://doc.perl6.org/type/ForeignCode

[13:15] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ceedca6d70

[13:20] *** mowcat joined
[13:21] *** p6bannerbot sets mode: +v mowcat

[13:23] *** jmerelo left
[13:28] *** WqZtM52a is now known as daemon

[13:29] *** rindolf left
[13:36] *** rindolf joined
[13:37] *** p6bannerbot sets mode: +v rindolf

[13:38] <timotimo> crypto in perl6: the dead fish operator: ¬ª+^¬ª 0x80

[13:40] <lizmat> m: dd (1,2,3,4) ¬ª+^¬ª 0x80

[13:40] <camelia> rakudo-moar 32d480aba: OUTPUT: ¬´(129, 130, 131, 132)‚ê§¬ª

[13:53] *** marmor joined
[13:54] *** p6bannerbot sets mode: +v marmor

[14:00] *** leont joined
[14:01] *** p6bannerbot sets mode: +v leont

[14:04] <masak> I think I have an idea how to break that crypto

[14:05] * masak .oO( nah, if running it once is not enough, we'll just do it more times ) :P

[14:07] *** molaf left
[14:15] *** loops joined
[14:16] *** p6bannerbot sets mode: +v loops

[14:16] <masak> sometimes I'd like a "grammar querier", not a full grammar debugger

[14:17] <masak> I could ask it "hm hey so why does this rule not match this input here, even though I expected it to?" and it'd go "well, you see..." and explain it to me

[14:17] <masak> one can dream :)

[14:17] <masak> the same but for CSS would also be nice ;)

[14:18] <masak> perhaps "grammar explainer" is a better term

[14:18] <timotimo> how would you imagine the explanation to look like, UX wise?

[14:18] <masak> let me think about it using a concrete example

[14:19] <masak> ok, here's a small but good example

[14:19] <masak> m: grammar G { regex TOP { <foo>+ }; rule foo { foo } }; say ?G.parse("foofoo")

[14:19] <camelia> rakudo-moar 26c0e620a: OUTPUT: ¬´False‚ê§¬ª

[14:20] <masak> I'd ask the grammar explainer "why doesn't this parse?"

[14:21] <masak> and it'd go "well, you see, you have significant whitespace at the end of rule `foo` which triggers (because the literal string "foo" ends in an alnum), but there's nothing matching that in the input string between 'foo' and 'foo'"

[14:21] <masak> basically, the explainer would *debug for me*

[14:22] <masak> and it'd deliberately go looking for the point at which things start to not match

[14:22] <masak> same as I would manually when I'm debugging a grammar

[14:23] <masak> I realize that's not being too specific with the UX -- maybe https://elm-lang.org/blog/compiler-errors-for-humans is a good start, though

[14:24] <masak> like, a human-readable error message explaining why one's expectations failed on that grammar and that input

[14:29] <leont> Given a class and a list of roles, is there an easy way to compose all of the latter into the former? (preferably in a way that detects collisions between the roles)

[14:29] <leont> Currently doing ($class, |@with).reduce: { $^base but $^role }

[14:30] <leont> It feels like there should be an easier and more correct way

[14:37] <andrzejku> .seen lookatme_q

[14:37] <yoleaux> I saw lookatme_q 25 Dec 2018 07:10Z in #perl6: <lookatme_q> Xliff, okay

[14:47] <Ulti> masak: yeah something that visualised the grammar as a little graph with colours where a set of strings do/dont match and jumping around the code would be super nice

[14:47] <Ulti> there are regex tools like this

[14:47] <timotimo> masak: it'd be difficult to figure out the "real" failure reason when you have stuff that scans and backtracks, i'd think

[14:47] <Ulti> generating usable strings where its gone wrong to patch and go further would be an interesting bit to add

[14:48] <timotimo> like, if your regex is "foo\s+bar" it'll say "oh, the regex match failed because at the last character we expected "foo", but the string was already over

[14:48] <Ulti> timotimo: you might as a human be able to see the real failure more easily though

[14:48] <timotimo> yeah, with a graphical approach that shows "everything" that'd surely be easier

[14:48] <timotimo> we also have the "high water mark" thing that could help in many cases i'd assume

[14:49] <Ulti> https://en.wikipedia.org/wiki/Syntax_diagram 

[14:50] <Ulti> the current debugger walk but highlighting where it is in one of those diagrams would be quite handy

[14:52] *** zacts joined
[14:52] *** p6bannerbot sets mode: +v zacts

[14:59] *** kurahaupo joined
[15:00] *** p6bannerbot sets mode: +v kurahaupo

[15:00] *** Ven` joined
[15:01] *** p6bannerbot sets mode: +v Ven`

[15:07] *** pmurias joined
[15:07] *** p6bannerbot sets mode: +v pmurias

[15:13] *** random_yanek joined
[15:13] *** random_yanek left
[15:15] *** random_yanek joined
[15:16] *** p6bannerbot sets mode: +v random_yanek

[15:22] *** sena_kun joined
[15:22] *** p6bannerbot sets mode: +v sena_kun

[15:23] *** i1nfusion left
[15:25] *** i1nfusion joined
[15:25] *** p6bannerbot sets mode: +v i1nfusion

[15:27] <pmurias> masak: re debugging grammars, the elm link helps with the ui, regardless how we present the info we need to figure out what info we want to present

[15:27] <yoleaux> 30 Dec 2018 21:27Z <lizmat> pmurias: why do you think BINARY_ENDIAN_NATIVE is useless ?  nqp f82058fc739db76c0

[15:27] <lizmat> pmurias: I've reverted that removal...  needed in rakudo

[15:28] <pmurias> lizmat: saw the change, I removed it because I thought it's just a lack of any flags

[15:28] <pmurias> but the BINARY_* constants aren't proper flags anyway so I think it's better if we have it

[15:29] <lizmat> yeah, that was my reason to use it explicitely

[15:34] <pmurias> by not being proper flag I mean we use 12 as marker for 32bit value

[15:37] *** obfusk left
[15:38] <lizmat> not 8 ?   

[15:38] <pmurias> 12

[15:39] <pmurias> wait

[15:39] <lizmat> 10 would be 32 bit, big endian, and 9 would be 32 bit little endian >

[15:39] <lizmat> ?

[15:39] <pmurias> sorry 12 is for 64 bit

[15:40] <pmurias> 8 is for 32bit

[15:40] <lizmat> ah, ok, indeed

[15:42] *** obfusk joined
[15:42] *** p6bannerbot sets mode: +v obfusk

[16:08] *** marmor left
[16:12] *** jmerelo joined
[16:12] *** zacts left
[16:12] *** p6bannerbot sets mode: +v jmerelo

[16:25] *** Ven` left
[16:31] *** nadim left
[16:44] *** Actualeyes left
[16:44] *** Actualeyes joined
[16:45] *** p6bannerbot sets mode: +v Actualeyes

[16:54] *** vrurg joined
[16:54] *** p6bannerbot sets mode: +v vrurg

[16:57] *** zacts joined
[16:57] *** p6bannerbot sets mode: +v zacts

[17:00] *** ChoHag left
[17:00] *** vrurg left
[17:10] *** pmurias left
[17:14] <jmerelo> .seen pmurias

[17:14] <yoleaux> I saw pmurias 15:40Z in #perl6: <pmurias> 8 is for 32bit

[17:14] *** Sgeo_ left
[17:14] <jmerelo> .tell pmurias is there a way to embed program output in HTML in 6pad?

[17:14] <yoleaux> jmerelo: I'll pass your message to pmurias.

[17:14] *** Sgeo_ joined
[17:15] *** p6bannerbot sets mode: +v Sgeo_

[17:22] <timotimo> jmerelo: you mean just "say" and "note" and such?

[17:28] <jmerelo> timotimo: right. I've seen what you did in your Advent entry, and it's OK, but there should be an easier way...

[17:28] *** marmor joined
[17:28] <jmerelo> timotimo: I mean, it's amazing, changing the DOM and stuff from Perl 6, but I was looking for something like <html><!-- your output will be printed here --></html>

[17:29] *** p6bannerbot sets mode: +v marmor

[17:29] <jmerelo> timotimo: basically, some HTML tag that gobbles up all program output.

[17:31] *** scimon left
[17:33] <timotimo> i mean, there's the console tab that does basically what you want?

[17:34] <jmerelo> timotimo: right, but imagine I want the output in a blinking tag.

[17:34] <jmerelo> timotimo: I mean, who wouldn't want their output in a blinking tag?

[17:39] <AlexDaniel> .tell pmurias `dd` is not working in 6pad, is that expected?

[17:39] <yoleaux> AlexDaniel: I'll pass your message to pmurias.

[17:40] *** Ven`` left
[17:41] <jmerelo> AlexDaniel: I would say so. dd is Rakudo (not rakudo.js) specific...

[17:42] <AlexDaniel> ooooooooooooooooooooh‚Ä¶

[17:43] <AlexDaniel> I think anything that prints to stderr doesn't work

[17:43] <AlexDaniel> so I guess `dd` is actually working, you just can't see the output

[17:43] <AlexDaniel> same as you can't see the output of `note`

[17:43] <AlexDaniel> .tell pmurias oh, I think anything that prints to stderr doesn't show up in the console

[17:43] <yoleaux> AlexDaniel: I'll pass your message to pmurias.

[17:44] <AlexDaniel> .tell pmurias I can see it in the dev console though :)

[17:44] <yoleaux> AlexDaniel: I'll pass your message to pmurias.

[17:44] <AlexDaniel> so maybe all that is expected, hmm

[17:45] *** zacts left
[17:46] *** vrurg joined
[17:47] *** p6bannerbot sets mode: +v vrurg

[17:47] * jmerelo goes AFK to start new year's eve celebration by lying on the couch reading a book.

[17:48] * AlexDaniel already did a bit of cycling today :)

[17:48] *** jmerelo left
[17:50] <AlexDaniel> this year the winter feels more like spring, even the grass is green

[18:02] *** vrurg left
[18:06] *** domidumont joined
[18:07] *** p6bannerbot sets mode: +v domidumont

[18:19] *** i1nfusion left
[18:21] *** i1nfusion joined
[18:22] *** p6bannerbot sets mode: +v i1nfusion

[18:22] *** jme` left
[18:23] *** zacts joined
[18:23] *** p6bannerbot sets mode: +v zacts

[18:25] *** jme` joined
[18:26] *** p6bannerbot sets mode: +v jme`

[18:26] *** Ven`` joined
[18:27] *** p6bannerbot sets mode: +v Ven``

[18:30] *** atta joined
[18:30] *** p6bannerbot sets mode: +v atta

[18:38] *** domidumont left
[18:38] *** leont left
[18:52] *** Manifest0 left
[18:53] *** Manifest0 joined
[18:53] *** vrurg joined
[18:53] *** p6bannerbot sets mode: +v Manifest0

[18:54] *** p6bannerbot sets mode: +v vrurg

[19:19] *** Ven`` left
[19:19] *** zacts left
[19:39] <moritz> ah, you're on the other side :-)

[19:41] *** marmor left
[19:47] *** random_yanek left
[19:49] *** mowcat left
[19:50] *** pmurias joined
[19:50] *** p6bannerbot sets mode: +v pmurias

[19:53] *** hph^ joined
[19:53] *** p6bannerbot sets mode: +v hph^

[19:54] <masak> philosophically, I don't think you can be on the other side. you're always on this side.

[19:54] * masak runs and hides on the other side

[19:58] <moritz> ... of a moebius strip

[19:59] <lizmat> where taking sides is without choice  :-)

[20:01] * masak suddenly feels all non-oriented

[20:02] <masak> moritz: curious aside: do Germans usually write M√∂bius like that? or are you being kind to us umlaut-less foreigners? :)

[20:03] * masak .oO( Unic√∂de is your fri√´nd! ¬ª√∂¬´ )

[20:03] <moritz> masak: I was just being l√§zy :-)

[20:03] <moritz> we do write it with √∂, usually

[20:03] <lizmat> .oO( √∂sually )

[20:04] * masak .oO( moritz stripped away the M√∂bius )

[20:04] <lucs> ¬ª√∂¬´ agrees

[20:07] <masak> may your new year be homeomorphic to your old one

[20:08] <lizmat> .oO( all the same to me )

[20:11] *** zacts joined
[20:11] *** p6bannerbot sets mode: +v zacts

[20:24] *** pmurias left
[20:29] *** vrurg left
[20:36] *** random_yanek joined
[20:36] *** random_yanek left
[20:38] *** random_yanek joined
[20:38] *** p6bannerbot sets mode: +v random_yanek

[20:40] *** |oLa| joined
[20:40] *** |oLa| left
[20:40] *** |oLa| joined
[20:41] *** |oLa| left
[20:41] *** |oLa| joined
[20:41] *** p6bannerbot sets mode: +v |oLa|

[20:42] *** p6bannerbot sets mode: +v |oLa|

[20:44] *** Xliff joined
[20:46] *** Xliff left
[20:46] *** Xliff joined
[20:47] *** p6bannerbot sets mode: +v Xliff

[20:47] <Xliff> \o

[20:47] <Xliff> Happy Upcomming New Year

[20:47] <Xliff> m: constant BULLET = '‚Ä¢'; my $text = "A bunch of bulleted lines:\n  ‚Ä¢ Line 1\n  ‚Ä¢ Line 2\n  ‚Ä¢ Line 3"; say "B: { .from }, B: { .to }"  for ( $text ~~ m:g/'‚Ä¢'/ )

[20:47] <camelia> rakudo-moar c9fe9463e: OUTPUT: ¬´B: 29, B: 30‚ê§B: 40, B: 41‚ê§B: 51, B: 52‚ê§¬ª

[20:48] <Xliff> m: constant BULLET = '‚Ä¢'; my $text = "A bunch of bulleted lines:\n  ‚Ä¢ Line 1\n  ‚Ä¢ Line 2\n  ‚Ä¢ Line 3"; say "B: { .from }, B: { .to }"  for ( $text ~~ m:g/BULLET/ )

[20:48] <camelia> rakudo-moar c9fe9463e: ( no output )

[20:48] <Xliff> m: constant BULLET = '‚Ä¢'; my $text = "A bunch of bulleted lines:\n  ‚Ä¢ Line 1\n  ‚Ä¢ Line 2\n  ‚Ä¢ Line 3"; say "B: { .from }, B: { .to }"  for ( $text ~~ m:g/{ BULLET }/ )

[20:48] <camelia> rakudo-moar c9fe9463e: OUTPUT: ¬´B: 0, B: 0‚ê§B: 1, B: 1‚ê§B: 2, B: 2‚ê§B: 3, B: 3‚ê§B: 4, B: 4‚ê§B: 5, B: 5‚ê§B: 6, B: 6‚ê§B: 7, B: 7‚ê§B: 8, B: 8‚ê§B: 9, B: 9‚ê§B: 10, B: 10‚ê§B: 11, B: 11‚ê§B: 12, B: 12‚ê§B: 13, B: 13‚ê§B: 14, B: 14‚ê§B: 15, B: 15‚ê§B: 16, B: 16‚ê§B: 17, B: 17‚ê§B‚Ä¶¬ª

[20:48] <Xliff> ^^ Why doesn't this work?

[20:48] <Xliff> m: constant BULLET = '‚Ä¢'; my $text = "A bunch of bulleted lines:\n  ‚Ä¢ Line 1\n  ‚Ä¢ Line 2\n  ‚Ä¢ Line 3"; say "B: { .from }, B: { .to }"  for ( $text ~~ m:g/{ \BULLET }/ )

[20:48] <camelia> rakudo-moar c9fe9463e: OUTPUT: ¬´B: 0, B: 0‚ê§B: 1, B: 1‚ê§B: 2, B: 2‚ê§B: 3, B: 3‚ê§B: 4, B: 4‚ê§B: 5, B: 5‚ê§B: 6, B: 6‚ê§B: 7, B: 7‚ê§B: 8, B: 8‚ê§B: 9, B: 9‚ê§B: 10, B: 10‚ê§B: 11, B: 11‚ê§B: 12, B: 12‚ê§B: 13, B: 13‚ê§B: 14, B: 14‚ê§B: 15, B: 15‚ê§B: 16, B: 16‚ê§B: 17, B: 17‚ê§B‚Ä¶¬ª

[20:54] <Xliff> m: constant BULLET = '‚Ä¢'; say "{BULLET}"

[20:54] <camelia> rakudo-moar c9fe9463e: OUTPUT: ¬´‚Ä¢‚ê§¬ª

[20:55] <Xliff> m: constant BULLET = '‚Ä¢'; my $text = "A bunch of bulleted lines:\n  ‚Ä¢ Line 1\n  ‚Ä¢ Line 2\n  ‚Ä¢ Line 3"; say "B: { .from }, B: { .to }"  for ( $text ~~ m:g/"{ \BULLET }"/ )

[20:55] <camelia> rakudo-moar c9fe9463e: OUTPUT: ¬´B: 29, B: 30‚ê§B: 40, B: 41‚ê§B: 51, B: 52‚ê§¬ª

[20:55] <Xliff> Oh piss.

[21:00] *** rindolf left
[21:05] *** rindolf joined
[21:06] *** p6bannerbot sets mode: +v rindolf

[21:08] *** natrys joined
[21:08] *** p6bannerbot sets mode: +v natrys

[21:09] *** Actualeyes left
[21:26] *** pmurias joined
[21:26] *** p6bannerbot sets mode: +v pmurias

[21:48] *** pmurias left
[22:23] *** irdr joined
[22:24] *** p6bannerbot sets mode: +v irdr

[22:31] *** zacts left
[22:40] <AlexDaniel> moritz: I think I'm on the same side :)

[22:40] <AlexDaniel> also, it snowed for the last few hours, and it's really cold right now :)

[22:51] *** kensanata joined
[22:51] *** p6bannerbot sets mode: +v kensanata

[23:04] *** lichtkind left
[23:09] *** vrurg joined
[23:10] *** p6bannerbot sets mode: +v vrurg

[23:17] *** kensanata left
[23:38] <masak> well, that's it. the other side. at least over here.

[23:40] *** rindolf left
[23:52] <moritz> same here. Godt Nytt Aar!

[23:56] *** natrys left
[23:58] *** sena_kun left
