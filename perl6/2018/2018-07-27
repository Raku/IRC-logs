[00:02] <benjiikun> https://github.com/ijneb/telegram-bot

[00:02] <benjiikun> My bot is kind of a half-butted way of doing it

[00:02] <benjiikun> with just returning a tap

[00:02] <benjiikun> but cro does some clever signature constraint stuff to pass a single block

[00:02] <benjiikun> I'm making a mockup of that for you now

[00:03] <Qwerasd> Thanks a ton!

[00:08] *** Alchemy joined
[00:08] *** Alchemy is now known as Guest77413

[00:11] *** Guest77413 left
[00:11] *** Guest77413 joined
[00:11] *** Guest77413 is now known as daemon

[00:15] <benjiikun> Qwerasd: https://gist.github.com/ijneb/ddd7ebe6a35b12a6ef1d1c7ceb311cc5

[00:16] <benjiikun> This is how cro gets the `route { get -> '/' { #do stuff } }` form for reacting to changes

[00:16] *** mcmillhj joined
[00:17] <Qwerasd> Interesting.

[00:19] <benjiikun> And then it passes the `handlers { get '/' { }; get '/home' { }; ... }` for internal usage

[00:19] <benjiikun> I think it's a neat form for a library's purpose

[00:20] <benjiikun> So if you call $h() in that example, it will extract the 'hello' parameter as a constraint

[00:20] *** fsdfsdfsdfsdfdsf left
[00:20] *** mcmillhj left
[00:23] *** Khisanth left
[00:26] *** Sgeo_ joined
[00:27] *** Sgeo left
[00:28] *** roguelazer left
[00:29] <benjiikun> I just realized I typod my nick to have two `i`s lol

[00:29] *** benjiikun is now known as benjikun

[00:32] *** mcmillhj joined
[00:36] *** mcmillhj left
[00:38] *** MilkmanDan left
[00:39] *** MilkmanDan joined
[00:39] *** daemon left
[00:39] *** daemon joined
[00:40] *** daemon left
[00:40] *** daemon joined
[00:40] <Qwerasd> Is it possible to dynamically assemble a grammar? If so how?

[00:40] <timotimo> well, EVAL can do it

[00:41] <Qwerasd> True but I

[00:41] <Qwerasd> Oops enter too soon.

[00:41] <timotimo> otherwise, a grammar is "just a class", and you can create that during runtime through the MOP

[00:41] <Qwerasd> True but I'm apt to shy away from EVAL

[00:41] <timotimo> regexes/rules etc inside a grammar are also "just methods", so they can be added at runtime as well

[00:42] <Qwerasd> Basically I want to assemble my TOP based on a function signature I'm iterating through. How can I do that?

[00:42] <timotimo> right, i don't think that can be done without either EVAL or the compiler in general

[00:43] <Qwerasd> Well, guess I'll have to use EVAL :\

[00:43] *** Khisanth joined
[00:44] <benjikun> Based on what about the function signature Qwerasd?

[00:45] <Qwerasd> The type of each argument etc.

[00:45] *** stmuk joined
[00:46] <benjikun> Couldn't you just iterate through the signature in the TOP method of the grammar and decide what rules to use from there?

[00:46] <Qwerasd> You can do that?

[00:47] <benjikun> https://docs.perl6.org/language/grammars#Methods_in_Grammar

[00:47] <Qwerasd> Oh neat. That works then :p

[00:47] <benjikun> :)

[00:47] *** stmuk_ left
[00:48] <Qwerasd> Thanks

[00:48] <benjikun> anytime

[00:49] <Qwerasd> How would I return tokens though, exactly?

[00:49] <Qwerasd> Would returning a string work?

[00:49] <Qwerasd> like return "<token1> <token2>"

[00:49] <Qwerasd> I don't feel like it would.

[00:50] <timotimo> you can use strings interpolated as regex, which is more or less equivalent to EVAL

[00:51] <Qwerasd> Oh nice that would work? That makes me happy.

[00:51] <timotimo> has to be like regex use-the-string { <$my-string-which-is-a-regex> }

[00:52] <Qwerasd> Err can you show what my example would be like as a return statement then?

[00:52] <timotimo> won't work with just a return, i'm afraid

[00:52] <Qwerasd> Oh?

[00:52] <Qwerasd> I'm confused now.

[00:53] <Qwerasd> If I'm in the TOP method how do I turn my string in to the used regex.

[00:53] <timotimo> hmm

[00:53] <timotimo> you could probably have an attribute that has the string-to-be-used in it

[00:54] <Qwerasd> I... don't understand.

[00:54] <timotimo> and then TOP would just look like regex TOP { <{ $!string-to-be-used }> }

[00:54] <Qwerasd> Oh?

[00:54] <Qwerasd> So I don't iterate inside of the TOP method?

[00:55] <timotimo> if $!string-to-be-used is already the whole thing, then no, that should be fine

[00:55] <Qwerasd> OK thanks. I think I get it.

[00:57] *** lizmat left
[01:01] *** mcmillhj joined
[01:06] *** mcmillhj left
[01:06] <Qwerasd> I keep getting this error with no stacktrace, (It's being caught in a try/catch) is there a way I could force a stacktrace?

[01:07] <lookatme> ... can do this

[01:07] <Qwerasd> Err, how? Basically what should my CATCH block look like?

[01:08] <lookatme> CATCH { when foo { }; when bar { }; default { }; }

[01:08] <Qwerasd> I want to resume the error after it happens.

[01:08] <Qwerasd> How can I get the stacktrace of an error?

[01:09] <lookatme> oh, you mean get the stack trace ?

[01:09] <timotimo> check the methods that Exception has

[01:09] <timotimo> m: .name.say for Exception.^methods

[01:09] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´backtrace‚ê§vault-backtrace‚ê§reset-backtrace‚ê§throw‚ê§rethrow‚ê§resume‚ê§die‚ê§fail‚ê§is-compile-time‚ê§Str‚ê§gist‚ê§BUILDALL‚ê§¬ª

[01:09] <lookatme> https://docs.perl6.org/type/Exception

[01:09] <Qwerasd> Probably .backtrace, right?

[01:09] <lookatme> yeah, you better read the documents

[01:15] <MasterDuke> Qwerasd: also, you know about --ll-exception ?

[01:15] <benjikun> I think he wants for it to continue working after it fails

[01:15] *** mcmillhj joined
[01:18] <geekosaur> that doesn't make it stop, it just includes parts of the backtrace that go into the setting

[01:19] <benjikun> oh, woops

[01:19] <geekosaur> as such, probably not useful here unless you're debugging rakudo internals

[01:19] <timotimo> all you have to do to make it not rethrow (which is what stops the program) is to match the type with a "when" block, or by having a "default" block

[01:19] <timotimo> inside the CATCH

[01:20] *** mcmillhj left
[01:22] <Qwerasd> Cannot resolve caller Str(Mu: Command::Parser); none of these signatures match:    (Mu:U \v: *%_)    (Mu:D $: *%_)

[01:22] <Qwerasd> I did something wrong with a grammar I think. I'm getting this.

[01:24] <lookatme> Can you paste your code to somewhere

[01:24] <Qwerasd> I'll try to recreate it out of the context of my gigantic module.

[01:27] <Qwerasd> https://hastebin.com/ebudoheqoc.p6

[01:30] <geekosaur> hm. wonder if it's calling the wrong Str

[01:30] <Qwerasd> So it may be a problem with the name I gave to the token?

[01:30] <geekosaur> conceivably

[01:31] <Qwerasd> yuuup

[01:31] <Qwerasd> That was the problem

[01:31] <geekosaur> you'll get the same with Int, then

[01:31] <Qwerasd> Mhm, gonna lowercase em all

[01:31] <geekosaur> that type exists too

[01:31] <geekosaur> (native string, for NativeCall)

[01:31] <Qwerasd> Does it? Cause lowercasing it fixed it.

[01:32] <Qwerasd> I guess maybe... _Str? I want to make it similar because I'm directly shoving type names in.

[01:32] <timotimo> nativecall isn't exactly what str is for

[01:35] <Kaiepi> aren't native strings NativeCall::CStr?

[01:35] <geekosaur> maybe

[01:35] <Qwerasd> Now how do I typecast things parsed by a grammar?

[01:37] <Qwerasd> Using grammar actions I assume?

[01:38] <Kaiepi> yeah

[01:39] <Kaiepi> m: grammar Foo::Grammar { token TOP { <a> }; token a { a } }; class Foo::Actions { method TOP($/ --> Int) { make $<a>.ast }; method a($/ --> Int) { make ~$/.ord } }; say Foo::Grammar.parse('a', actions => Foo::Actions.new)

[01:39] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´Type check failed for return value; expected Int but got Str ("97")‚ê§  in method a at <tmp> line 1‚ê§  in regex a at <tmp> line 1‚ê§  in regex TOP at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:39] <Kaiepi> m: grammar Foo::Grammar { token TOP { <a> }; token a { a } }; class Foo::Actions { method TOP($/ --> Int) { make $<a>.ast }; method a($/ --> Int) { make $/.ord } }; say Foo::Grammar.parse('a', actions => Foo::Actions.new)

[01:39] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´ÔΩ¢aÔΩ£‚ê§ a => ÔΩ¢aÔΩ£‚ê§¬ª

[01:40] <Kaiepi> m: grammar Foo::Grammar { token TOP { <a> }; token a { a } }; class Foo::Actions { method TOP($/ --> Int) { make $<a>.ast }; method a($/ --> Int) { make $/.ord } }; say Foo::Grammar.parse('a', actions => Foo::Actions.new).ast

[01:40] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´97‚ê§¬ª

[01:40] <Kaiepi> there we go

[01:40] *** stmuk_ joined
[01:42] *** stmuk__ joined
[01:42] *** stmuk left
[01:43] *** warriors left
[01:44] <Qwerasd> Hmm this function is saying too many positionals when passed 2 arguments but it has a signature of Str $foo, Int $bar = 1

[01:45] *** stmuk_ left
[01:46] <Qwerasd> Oh wait I think I see the issue.

[01:48] *** mcmillhj joined
[01:54] *** mcmillhj left
[01:55] <Geth> ¬¶ perl6-most-wanted: aa0d01730b | (Ben Davies)++ (committed using GitHub Web editor) | most-wanted/modules.md

[01:55] <Geth> ¬¶ perl6-most-wanted: Add WIP link for Net::Telnet

[01:55] <Geth> ¬¶ perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/aa0d01730b

[02:01] *** molaf left
[02:02] *** raschipi joined
[02:04] *** mcmillhj joined
[02:10] *** mcmillhj left
[02:10] *** Qwerasd_ joined
[02:12] *** Qwerasd left
[02:14] *** molaf joined
[02:14] *** Qwerasd_ left
[02:15] *** Qwerasd joined
[02:18] *** skids left
[02:23] <raschipi> .tell moritz What do you think about putting the content from perl6book.com into perl6.org/resources/ and then you pull the content from there. I think it would solve all the problems. Fell free to ignore if you think it's a silly idea because your content doesn't fit in the Perl6 site.

[02:23] <yoleaux> raschipi: I'll pass your message to moritz.

[02:28] *** AlexDaniel left
[02:29] *** AlexDaniel joined
[02:30] *** AlexDaniel left
[02:30] *** AlexDaniel joined
[02:34] <Qwerasd> I cannot for the life of me figure out why this grammar.parse is returning nil.

[02:34] <Qwerasd> Cloning the code out of context and setting the values makes it not do so so I'm very confused.

[02:35] *** stmuk joined
[02:36] <benjikun> Qwerasd: can you make a gist of it

[02:37] <Qwerasd> No because in context it's 16 files, a network connection, and an API key. Out of context I can't reproduce the issue.

[02:37] *** stmuk__ left
[02:39] *** mcmillhj joined
[02:39] *** Zoffix joined
[02:39] <Zoffix> eco: Grammar::Debugger

[02:39] <yoleaux> 26 Jul 2018 20:12Z <brrt> Zoffix: - repsectfully, and given the heat with the intent of not letting annoyance grow bigger, that is not what I said

[02:39] <buggable> Zoffix, Grammar::Debugger 'Simple tracing and debugging support for Perl 6 grammars': http://modules.perl6.org/dist/Grammar::Debugger:github:N'A

[02:39] <yoleaux> 26 Jul 2018 20:13Z <brrt> Zoffix: what I said was, since there is an intent to release a version, and there is a blocking bug that is hard to fix, we may circumvent it for now, and do a point release later

[02:40] <Zoffix> Qwerasd: ^ you can install that module and it comes with a debugger that'll let you see why it's returning Nil as well as with Grammar::Tracer that is similar, but just does the trace of the matching process

[02:40] <Qwerasd> Ok thanks.

[02:40] <Zoffix> Just `use` one of those modules and it'll enable the mode: https://tpm-regex.perl6.party/#/50

[02:41] <Zoffix> And here's how the trace looks like: https://tpm-regex.perl6.party/#/51

[02:43] *** Me joined
[02:43] <Me> Hello

[02:44] *** mcmillhj left
[02:44] *** Me left
[02:44] <Zoffix> :(

[02:45] <Qwerasd> Grammar::Tracer is spitting out this error at me (Without it enabled the grammar in question works fine): Cannot invoke this object (REPR: Null; VMNull)

[02:46] <Zoffix> :( bummer

[02:46] <Zoffix> What version of Perl 6 are you using?

[02:46] <Qwerasd> Rakudo Star version 2018.04.1

[02:47] <Zoffix> no idea :/

[02:51] <Qwerasd> Is there a way to get a grammar to return an array of each token from TOP? (ex. TOP { <a> ' ' <b> ', ' <c> } -> [a, b, c])

[02:55] <Zoffix> You'd have to make TOP a method and make it parse with something and then make an Array. Or have the Actions class make the array for you

[02:55] <Zoffix> m: grammar { rule TOP { <a> <b> <c> }; token a { "a" }; token b { "b" }; token c { "c" } }.parse("a b c", actions => class { method TOP ($/) { make $<a b c>¬ª.Str.Array } }).made.say

[02:55] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´[a b c]‚ê§¬ª

[02:56] <Zoffix> Qwerasd: BTW, you could try changing a bunch of tokens from rules/tokens to `regex` (or use :!ratchet adverb in them). Lack of backtracing in token/rule is a pretty common cause of a failed parse 

[02:56] <Zoffix> Also, I assume you know it has to parse the string from very start to very end, otherwise it'll fail the parse (it'

[02:57] <Qwerasd> Yes I know.

[02:57] <Zoffix> ok

[02:57] *** fbynite joined
[02:59] <benjikun> Zoffix: when are your presentations

[03:00] <Zoffix> In the past :)

[03:03] *** vrurg left
[03:03] <benjikun> oof

[03:03] <benjikun> where can I find them?

[03:05] <Zoffix> Eventually they'll be posted here, I'm assuming: https://www.youtube.com/channel/UC3xi2HEaL9W9v2fNfW61Zdg

[03:08] <Zoffix> Slides are at https://tpm-regex.perl6.party/ and https://tpm-perf.perl6.party/

[03:09] <Qwerasd> Oh god this is a headache.

[03:09] <Zoffix> Qwerasd: :) sounds like a good time to take a break :)

[03:10] <Qwerasd> Yeah, and a good time to sleep. It's 11 PM. Sleep will probably help. (Fingers crossed)

[03:10] *** mcmillhj joined
[03:10] <benjikun> I went to sleep at 6am 

[03:11] <Qwerasd> gn

[03:11] *** Qwerasd left
[03:11] <benjikun> night

[03:15] *** mcmillhj left
[03:30] <raschipi> Zoffix: Very nice slides, I'm eager to see the presentations.

[03:35] <benjikun> https://www.youtube.com/watch?v=paa3niF72Nw

[03:35] <benjikun> raschipi: found it!

[03:36] <raschipi> I already watched that one a long time ago, it's from 2016.

[03:38] *** Zoffix left
[03:43] <benjikun> oh

[03:43] <benjikun> oof

[03:43] <benjikun> didnt look at the time posted

[03:45] *** mcmillhj joined
[03:49] *** mcmillhj left
[04:15] *** mcmillhj joined
[04:19] *** mcmillhj left
[04:26] *** molaf left
[04:45] *** mcmillhj joined
[04:50] *** mcmillhj left
[04:50] *** jmerelo joined
[04:51] *** curan joined
[04:52] *** raschipi left
[04:54] <Geth> ¬¶ doc: 965c2f4633 | (Ben Davies)++ | doc/Language/grammars.pod6

[04:54] <Geth> ¬¶ doc: Document grammar attributes

[04:54] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/965c2f4633

[04:54] <Geth> ¬¶ doc: afd5944dd5 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Language/grammars.pod6

[04:54] <Geth> ¬¶ doc: Merge pull request #2219 from Kaiepi/grammars

[04:54] <synopsebot> Link: https://doc.perl6.org/language/grammars

[04:54] <Geth> ¬¶ doc: 

[04:54] <Geth> ¬¶ doc: Document grammar attributes

[04:54] <Geth> ¬¶ doc: Thanks a lot!

[04:54] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/afd5944dd5

[05:00] <Geth> ¬¶ doc: be4208a8cd | (JJ Merelo)++ | 2 files

[05:00] <Geth> ¬¶ doc: Decapitalize and rewrite a bit

[05:00] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/be4208a8cd

[05:01] *** spycrab0 joined
[05:06] *** mcmillhj joined
[05:07] *** rindolf joined
[05:09] <moritz> \o

[05:09] <yoleaux> 02:23Z <raschipi> moritz: What do you think about putting the content from perl6book.com into perl6.org/resources/ and then you pull the content from there. I think it would solve all the problems. Fell free to ignore if you think it's a silly idea because your content doesn't fit in the Perl6 site.

[05:10] <moritz> .tell rashipi you are welcome to reuse the contents of perl6book.com on perl6.org. When perl6.org has all the relevant information (and book covers), I'll consider making perl6book.com a redirect

[05:10] <yoleaux> moritz: I'll pass your message to rashipi.

[05:10] *** mcmillhj left
[05:11] <benjikun> o/

[05:11] <benjikun> m: -> --> 1 { }()

[05:11] <camelia> rakudo-moar 08b449e1a: ( no output )

[05:11] <benjikun> m: say -> --> 1 { }();

[05:11] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´1‚ê§¬ª

[05:14] *** fbynite left
[05:17] <benjikun> m: ->-->0{}()

[05:17] <camelia> rakudo-moar 08b449e1a: ( no output )

[05:17] <benjikun> interesting looking

[05:18] <Geth> ¬¶ doc: e03987d63d | (JJ Merelo)++ | doc/Language/operators.pod6

[05:18] <Geth> ¬¶ doc: Checking around postfix calls

[05:18] <Geth> ¬¶ doc: 

[05:18] <Geth> ¬¶ doc: Rephrased `.:` which used *colonpair* (which is clearly

[05:18] <Geth> ¬¶ doc: not). Eliminated index entry "postfix call" which didn't make a lot of

[05:18] <synopsebot> Link: https://doc.perl6.org/language/operators

[05:18] <Geth> ¬¶ doc: sense. And closes #1346, although that had been solved before.

[05:18] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e03987d63d

[05:24] <benjikun> m: my \say = 1; say.say.say.say;

[05:24] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´1‚ê§True‚ê§True‚ê§¬ª

[05:33] *** mcmillhj joined
[05:37] *** mcmillhj left
[05:40] *** sauvin joined
[05:54] <Geth> ¬¶ doc: 5a4d7cf20b | (JJ Merelo)++ | doc/Language/grammars.pod6

[05:54] <Geth> ¬¶ doc: Fixes categories refs #1410

[05:54] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/5a4d7cf20b

[05:54] <synopsebot> Link: https://doc.perl6.org/language/grammars

[05:55] <jmerelo> benjikun: yep, say returns True

[05:56] <jmerelo> benjikun: and say method is different from say sigilless variable, I guess...

[05:57] <benjikun> mhm

[05:57] <benjikun> m: my \say = 1; say say say say;

[05:57] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3my \say = 1; say7‚èè5 say say say;‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        statement end‚ê§        statement modifier‚ê§ ‚Ä¶¬ª

[05:57] <benjikun> only knows because I was using it as a method

[05:59] *** abraxxa joined
[05:59] <jmerelo> Warning: bumpy road ahead.

[06:00] <jmerelo> There's something wrong with docs.perl6.org

[06:00] <benjikun> again?

[06:00] <benjikun> what's up with it now

[06:00] <jmerelo> the search.js file is out of sync, and it's not being generated

[06:00] <jmerelo> benjikun: let me see if I found out what's the problem...

[06:07] *** mcmillhj joined
[06:09] <jmerelo> OK, it's synced now. I don't know what's happened, but it's OK now.

[06:11] <benjikun> woo

[06:11] *** mcmillhj left
[06:18] <Geth> ¬¶ doc: e85d8d1948 | (JJ Merelo)++ | doc/Language/exceptions.pod6

[06:18] <Geth> ¬¶ doc: General revision of the Exceptions page

[06:18] <Geth> ¬¶ doc: 

[06:18] <Geth> ¬¶ doc: Reflow, elimination of capitals and stuff, but also eliminates the Try

[06:18] <Geth> ¬¶ doc: category (refs #1410) and the incorrect indexing of Try. This would

[06:18] <synopsebot> Link: https://doc.perl6.org/language/exceptions

[06:18] <Geth> ¬¶ doc: close the nicely numbered 2222 issue: closes #2222

[06:18] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e85d8d1948

[06:22] *** epony joined
[06:23] *** wamba joined
[06:26] *** mcmillhj joined
[06:31] *** mcmillhj left
[06:42] *** psychoslave joined
[06:44] *** mcmillhj joined
[06:49] *** mcmillhj left
[06:54] *** lizmat joined
[07:01] <jmerelo> lizmat: hi

[07:01] <jmerelo> lizmat: there was something I wanted to ask you. But I forgot what.

[07:01] <jmerelo> lizmat: let me see if I find it again...

[07:02] *** domidumont joined
[07:02] *** mcmillhj joined
[07:05] <jmerelo> lizmat: I should have opened an issue...

[07:07] *** mcmillhj left
[07:09] *** domidumont left
[07:10] *** domidumont joined
[07:19] <jmerelo> lizmat: OK, after some digging among recently edited files and visited pages, here it is. 

[07:20] <jmerelo> lizmat: is this true? https://docs.perl6.org/language/faq.html#Can_I_use_Perl_5_modules_from_Perl_6? I seem to remember you mentioned something about that in your talk in Arnhem

[07:23] *** mcmillhj joined
[07:26] <El_Che> jmerelo: you mean Inline::Perl5 ?

[07:27] *** mcmillhj left
[07:28] <jmerelo> El_Che: right

[07:30] <jmerelo> El_Che: does it work?

[07:31] <stmuk> yes why wouldn't it?

[07:31] <El_Che> yes, nine keeps making it better all the time: https://github.com/niner/Inline-Perl5

[07:31] <jmerelo> stmuk: dunno. 

[07:32] <jmerelo> El_Che, stmuk: many issues, one-year-old pull requests, CI badge in gray...

[07:33] <jmerelo> El_Che, stmuk: but the thing is that I seem to remember lizmat mentioned something about it in the Netherlands Perl workshop. I might be wrong, however...

[07:33] <El_Che> jmerelo: I don't use it myself (I don't like the idea of managing 2 stacks), but I am under the impression that it works very well from the people that use it

[07:34] <El_Che> We'll get more info from lizmat and nine if they survived the heat

[07:34] <jmerelo> El_Che, stmuk: also it says "most Perl 6 modules". Don't know what "most" means...

[07:35] <jmerelo> El_Che: OK. If that FAQ is true, then I'm OK with that.

[07:35] <stmuk> I don't see any problems with "most"

[07:36] <jmerelo> stmuk: well, it's a catch all. It's useful when your particular module does not run, you can always say "Well, we said most"

[07:36] <El_Che> I think nine is going for "all"

[07:36] <El_Che> from his doc

[07:37] <El_Che> something not working is a bug in that cas

[07:37] <El_Che> e

[07:37] <jmerelo> stmuk: but my main issue with that is how does that carry through time. Most for perl 5.24 perl6 2017.07 might become "a bunch" in perl 5.28 perl6 2018.06

[07:38] <stmuk> yes it's a particularly hard module to maintain but nine does a good job and I don't see any problems with the FAQ answer which seems perfectly clear to me

[07:38] <jmerelo> stmuk: I mean, I would need a bit of qualification for that. "Most modules that have these features, for these versions of Perl and Perl6, and none of the modules that have these features"

[07:39] <jmerelo> stmuk: OK. No problem then.

[07:40] <El_Che> jmerelo: let's wait to what nine has to say. He could qualify the statement probably

[07:41] <jmerelo> El_Che: I mean, right now, this seems to be a problem https://travis-ci.org/niner/Inline-Perl5/jobs/393161623

[07:41] <jmerelo> El_Che: that's probably only a change of perlbrew interface...

[07:41] <jmerelo> I'll create an issue for that.

[07:45] <stmuk> my guess is its a network error or something transient like that

[07:48] <jmerelo> stmuk: looks like a perlbrew error...

[07:49] *** andrzejku joined
[07:49] <stmuk> yes maybe the perlbrew author pushed a version which didn't work for a few mins or the script couldn't contact the server or something ... it worked for me just now

[07:50] <jmerelo> stmuk: it did here when I upgraded.

[07:51] <jmerelo> stmuk: anyway, thanks for the clarification

[08:02] *** mcmillhj joined
[08:03] <jmerelo> stmuk: I patched and it seems to be working now https://travis-ci.com/JJ/Inline-Perl5/jobs/136754408. Apparently, the default installation procedure for perlbrew was not serving the last version...

[08:05] *** scimon joined
[08:06] *** blackberry9900 joined
[08:07] *** mcmillhj left
[08:20] *** mcmillhj joined
[08:22] *** zakharyas joined
[08:25] *** mcmillhj left
[08:25] *** pecastro joined
[08:27] <jmerelo> I'm checking out the number of commits this month, and it's the third highest ever. Could be the second, we're not done yet... Also it's the month with the second-highest number of contributors.

[08:28] *** [particle] left
[08:28] *** [particle]1 joined
[08:28] <lizmat> jmerelo: yes, that is true

[08:30] <jmerelo> lizmat: what?

[08:30] <lizmat> " is this true? https://docs.perl6.org/language/faq.html#Can_I_use_Perl_5_modules_from_Perl_6? I seem to remember you mentioned something about that in your talk in Arnhem"

[08:30] <jmerelo> lizmat: OK, the FAQ. 

[08:30] <jmerelo> lizmat: thanks.

[08:31] <jmerelo> lizmat: did you mention something about Inline::Perl6 in your talk? Or is it a fake memory?

[08:31] <jmerelo> lizmat: sorry, Perl6

[08:31] <jmerelo> lizmat: sorry, Perl5

[08:31] <jmerelo> My fingers go directly to type 6 after Perl...

[08:31] <stmuk> jmerelo++ # fixing travis perlbrew

[08:32] <jmerelo> stmuk: it's still broken for MacOSx... And that I can't fix.

[08:33] <lizmat> jmerelo: it's not in the slides, perhaps I did mention Inline::Perl5 but my memory fails me if I did or not

[08:33] *** psychoslave left
[08:34] *** Ven`` joined
[08:52] *** mcmillhj joined
[08:56] *** mcmillhj left
[09:09] *** rindolf left
[09:16] *** rindolf joined
[09:19] *** mcmillhj joined
[09:25] *** mcmillhj left
[09:25] *** psychoslave joined
[09:41] <Geth> ¬¶ doc: 423c007ce0 | (JJ Merelo)++ | 2 files

[09:41] <Geth> ¬¶ doc: Some reflow and corrections

[09:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/423c007ce0

[09:42] *** sarna joined
[09:49] *** kerframil joined
[09:49] <jmerelo> m: say $*IN

[09:49] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´IO::Handle<IO::Special.new("<STDIN>")>(opened)‚ê§¬ª

[09:50] *** japhb joined
[09:51] *** mcmillhj joined
[09:56] *** mcmillhj left
[10:06] <tbrowder_> \o

[10:07] <tbrowder_> jmerelo: search messed up earlier i see. how did you fix it? make it an issue?

[10:09] <tbrowder_> i‚Äôm still working on doc reorg‚Äîearly am i think i hsve some new insight after dreaming about htmlify.p6 and friends.

[10:09] *** mcmillhj joined
[10:09] <tbrowder_> *have

[10:09] *** psychoslave left
[10:14] *** mcmillhj left
[10:17] <stmuk> lizmat: just watching your talk starting with discussion of Plato and wondered if you had seen this https://www.irata.online/

[10:19] <El_Che> (I thought we would discuss philosophy. Mildy disappointed)

[10:22] *** daemon left
[10:22] *** daemon joined
[10:22] *** daemon is now known as Guest52056

[10:24] *** Ven`` left
[10:25] *** Guest52056 left
[10:25] *** Guest52056 joined
[10:26] *** curan left
[10:26] <stmuk> the underlying plato-like system is "cyber1"

[10:27] *** Guest52056 is now known as daemon

[10:28] <jmerelo> tbrowder_: I really have no idea.

[10:28] <jmerelo> tbrowder_: checked the logs, and everything seemed to be OK.

[10:29] <jmerelo> tbrowder_: that's what I call a bad dream

[10:29] <tbrowder_> ok, thanks.

[10:29] <tbrowder_> more of a nightmare!

[10:31] <jmerelo> tbrowder_: the problem was that there was a difference between what was on the site and what was searched

[10:33] <tbrowder_> yep, sounds like a build problem. i don‚Äôt understand yet how the actual site is published. caching may be a factor.

[10:34] <jmerelo> tbrowder_: I kinda understand it a bit.

[10:34] *** robertle joined
[10:35] <jmerelo> tbrowder_: in a nutshell, you clean up everything, then it's your script to generate stuff, then htmlify.p6, which generates search.js among other things, then it's rsynced to the actual place where it's published, and then the mojo-based web generates more stuff

[10:36] <tbrowder_> thnx

[10:36] <jmerelo> So there are like 3 build steps: your script, then htmlify.p6, then make run. Two before deployment, one after deployment

[10:36] <jmerelo> I wonder if we should use Sparrowdo or some other serious deployment tool. Maybe Sake, I don't know.

[10:37] <tbrowder_> does the rsync have the options set to delete old stuff? that can cause weird things to happen

[10:37] <jmerelo> But one fine day we should take htmlify.p6 (and related modules) and rewrite it from scratch. We could call it htmlify-6.p6

[10:38] <jmerelo> tbrowder_: right, it deletes stuff rsync -az --delete html/* html/.ht* [email@hidden.address]
[10:38] <jmerelo> but more weird stuff could happen if you don't delete.

[10:38] *** mcmillhj joined
[10:40] <jmerelo> tbrowder_: I don't know if you have seen this: http://colabti.org/irclogger/irclogger_log/perl6?date=2018-07-27#l362, which is to a large extent your fault :-) Kudos

[10:42] <tbrowder_> hm, i guess it‚Äôs like throwing thumb tacks on the dance floor

[10:43] *** mcmillhj left
[10:44] <tbrowder_> lots more movement for painful reasons

[11:03] *** sergot joined
[11:09] *** blackberry9900 left
[11:11] *** lizmat left
[11:22] *** [particle] joined
[11:22] *** zakharyas left
[11:23] *** [particle]1 left
[11:25] *** HaraldJoerg joined
[11:34] *** robertle left
[11:37] *** [particle]1 joined
[11:39] *** [particle] left
[11:47] <jmerelo> tbrowder_: that's a good one. But no, it's only natural. 

[11:47] <jmerelo> tbrowder_: more like the sandpile. You drop one grain, nothing happens, you drop the next, avalanche.

[11:48] *** pmurias joined
[11:51] *** [particle] joined
[11:53] *** [particle]1 left
[12:02] *** molaf joined
[12:11] <tbrowder_> good

[12:11] <tbrowder_> good analogy!

[12:19] <tbrowder_> git question: has anyone had any problems rsyncing a git repo between two locations (one fixed at home, one mobile)? i use the two hosts regularly and would like to work on my favorite git repos on both of them, changing beween them often as we travel to/from nearby relatives.

[12:19] <tbrowder_> *between

[12:20] <jmerelo> tbrowder_: yep. All kind of problems. It's better to just use git to sync...

[12:20] *** pmurias left
[12:21] <jnthn> 1I also move between different hosts quite a bit, but just push up a Work In Progress commit in a branch when I need to move.

[12:25] <tbrowder_> ok, how do you handle cleaning up accumulated commits to submit a PR? squashing seems to be too easy to mess up.

[12:27] <tbrowder_> and i get enough complaints about my commits as it is...

[12:29] *** abraxxa left
[12:32] *** pmurias joined
[12:32] <jnthn> tbrowder_: Depends, but `git add ...` for the files I changed since and `git commit --amend` in simple cases

[12:32] <jnthn> Or interactive rebase if I want to do something more involved

[12:32] *** diakopter left
[12:35] <tbrowder_>  thanks. i need to study more in-depth git use.

[12:40] *** MilkmanDan left
[12:41] *** raschipi joined
[12:42] <raschipi> .

[12:42] *** raschipi is now known as rashipi

[12:42] <rashipi> .

[12:42] <yoleaux> 05:10Z <moritz> rashipi: you are welcome to reuse the contents of perl6book.com on perl6.org. When perl6.org has all the relevant information (and book covers), I'll consider making perl6book.com a redirect

[12:42] *** rashipi is now known as raschipi

[12:42] *** diakopter joined
[12:43] <moritz> sorry, did I mis-type your nick?

[12:53] <raschipi> No problem.

[12:59] *** sena_kun joined
[13:01] *** SyrupThinker joined
[13:02] <Ulti> tbrowder_ I dont use it myself but someone stepped me through the stuff you can do with an interactive rebase and its kind of amazing

[13:03] <timotimo> i use it every now and then to merge together commits or change commit messages

[13:03] <Ulti> yeah I always wondered why commits were hideous compared to other people on my team and they pointed out I was just a lot more lazy than them :'(

[13:04] <timotimo> hahaha

[13:04] <Ulti> I've not seen a nice GUI for doing that stuff though

[13:04] <timotimo> i hear emacs has something extremely good

[13:04] <Ulti> oh really

[13:05] <timotimo> i've never used emacs, though

[13:05] *** zakharyas joined
[13:05] <timotimo> i mean, never longer than a few minutes

[13:13] *** vrurg joined
[13:25] <sarna> I've found a typo in the docs, what do I do?

[13:25] <yoleaux> 26 Jul 2018 18:25Z <AlexDaniel> sarna: squashathon discussion http://colabti.org/irclogger/irclogger_log/perl6?date=2018-07-26#l900

[13:25] <tbrowder_> smartgit may have something, usable on linux and windows (maybe mac, too), java based.

[13:25] <AlexDaniel> sarna: just fix it? https://github.com/perl6/doc/

[13:26] <sarna> AlexDaniel: ok :)

[13:26] <tbrowder_> i use it on windows mostly, debian rarely cause i mostly

[13:26] <tbrowder_> am using ssh

[13:27] *** maettu joined
[13:28] <jmerelo> AlexDaniel: perl6 river, v0.1 ready https://github.com/JJ/p6-river/releases/tag/v0.1

[13:28] <maettu> jnthn has completed his grant http://news.perlfoundation.org/2018/07/perl-6-performance-and-reliabi-5.html

[13:29] <maettu> and requested another 200h. Please leave your comments. http://news.perlfoundation.org/2018/07/grant-extension-request-perl-6-2.html

[13:29] <jmerelo> AlexDaniel: I would have to do stuff a bit more finely, but basically big name tagas are the ones with the most dependencies downriver. Download the PDF or the SVG from the repo

[13:29] <AlexDaniel> jmerelo: what about having a top-down placement?

[13:30] <El_Che> the pdf is a tease

[13:30] <AlexDaniel> or left to right

[13:30] <El_Che> it doesn't show anything :)

[13:30] <jmerelo> AlexDaniel: I tried that, but then it's not so clear. Download and check out sankey.html from that repo

[13:30] <jmerelo> El_Che: let me see...

[13:31] <El_Che>     51 KB

[13:31] <El_Che>     river.pdf 

[13:31] <El_Che> the image was resized to death by the pdf creator soft, I suppose

[13:31] <jmerelo> El_Che: well, it shows... something

[13:31] <El_Che> a teaser

[13:32] <jmerelo> El_Che: if you bump it up to 400% you can see a bit

[13:32] <jmerelo> and the gephi files are in the same repo, or the .net, use them with your favorite software...

[13:32] <AlexDaniel> jmerelo: what can I use with dot?

[13:32] *** MilkmanDan joined
[13:33] <jmerelo> AlexDaniel: let me export it to that format

[13:33] <AlexDaniel> ok now we're talking :)

[13:34] *** araraloren joined
[13:34] <tbrowder_> i just saw syntevo (German co i think) has deepgit too. samartgit and deepgit are free for non-commercial use.

[13:35] <sarna> AlexDaniel: I've just read the squashaton discussion thingy. I haven't written any scripts dealing with github yet

[13:36] <jmerelo> AlexDaniel: Gephi does not work with that. I've added you to the repo, and exported it to graphml. Either that or Pajek's .net should be convertible to anything...

[13:37] *** jmerelo left
[13:38] <El_Che> ff kan show the svg fine

[13:44] *** araraloren_ joined
[13:47] <AlexDaniel> uh but that's from perl6-all-modules‚Ä¶ not gonna work :S

[13:47] *** robertle joined
[13:47] *** araraloren left
[13:51] *** mcmillhj joined
[13:53] <Geth> ¬¶ doc: sarna++ created pull request #2224: Fixes some small typos in "Ruby to Perl 6"

[13:53] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2224

[13:53] <sarna> oh hi

[13:57] *** MilkmanDan left
[13:58] <raschipi> sarna: did you see the answer to your pull request?

[13:58] <Geth> ¬¶ doc: be1b3d529c | sarna++ | doc/Language/rb-nutshell.pod6

[13:58] <Geth> ¬¶ doc: typos

[13:58] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/be1b3d529c

[13:58] <Geth> ¬¶ doc: da0cd0dcc2 | sarna++ | doc/Language/rb-nutshell.pod6

[13:58] <Geth> ¬¶ doc: added a colon

[13:58] <synopsebot> Link: https://doc.perl6.org/language/rb-nutshell

[13:58] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/da0cd0dcc2

[13:58] <Geth> ¬¶ doc: f171ae0779 | (Bartosz Janus)++ (committed using GitHub Web editor) | doc/Language/rb-nutshell.pod6

[13:58] <Geth> ¬¶ doc: Merge pull request #2224 from sarna/ruby-typos

[13:58] <Geth> ¬¶ doc: 

[13:58] <Geth> ¬¶ doc: Fixes some small typos in "Ruby to Perl 6"

[13:58] <raschipi> yes

[13:58] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f171ae0779

[13:58] *** MilkmanDan joined
[13:58] <sarna> raschipi: yes :) I was too excited to check IRC, sorry

[14:06] *** Zoffix joined
[14:08] <Zoffix> Must... resist... urge... to use this stock in 6.d Diwali teaser posters: https://depositphotos.com/88166820/stock-photo-goddess-lakshmi-and-lord-ganesha.html

[14:08] <Zoffix> ^_^

[14:10] <diakopter> yah, the ambiguity/overlap with Nazi symbols is ... suboptimal

[14:10] <Zoffix> :)

[14:12] <timotimo> yes, that would be *quite* an unfortunate look

[14:14] <robertle> these could esily be photoshopped into butterflies

[14:14] <robertle> :)

[14:15] *** mcmillhj left
[14:16] <raschipi> robertle: then what's the point of buying the stock, just buy another one without an unfortunate association.

[14:20] <Geth> ¬¶ doc: 7f9915925e | (Ben Davies)++ | doc/Language/js-nutshell.pod6

[14:20] <Geth> ¬¶ doc: Use sentence casing in JS nutshell page

[14:20] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7f9915925e

[14:20] <synopsebot> Link: https://doc.perl6.org/language/js-nutshell

[14:23] <jkramer> How would I go about writing a P6 version of Module::Refresh? Is it even possible?

[14:25] <Zoffix> That's such a common question it should be researched and placd into our FAQ

[14:25] <jkramer> Hmm probably not, at least not the way I want it.

[14:25] <jkramer> Is it? Sorry :)

[14:25] <Zoffix> (the "reload a module in a running program" question, I mean)

[14:25] <Zoffix> jkramer: no need to be sorry, I've not heard a good answer to it yet :)

[14:25] <Zoffix> squashable6: status

[14:25] <squashable6> Zoffix, ‚ö†üçï Next SQUASHathon in 6 days and ‚âà19 hours (2018-08-04 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[14:26] *** mcmillhj joined
[14:31] *** mcmillhj left
[14:40] *** nebuchadnezzar joined
[14:42] *** mcmillhj joined
[14:45] <raschipi> jkramer: A related problem is the fact that modules are cached after being compiled. So even if you reload the program it won't pick up changes made to the module.

[14:48] *** mcmillhj left
[14:48] *** w_richard_w joined
[14:49] <Geth> ¬¶ marketing: 36c5fb493d | (Zoffix Znet)++ | 13 files

[14:49] <Geth> ¬¶ marketing: Add "Spec Clarifications" 6.d teaser / ID 1532698761

[14:49] <Geth> ¬¶ marketing: review: https://github.com/perl6/marketing/commit/36c5fb493d

[14:49] <jkramer> I wouldn't even need to reload it from disk, I just wanted to outsource some code from long-running script to tweak it during runtime. I naively tried to just slurp and EVAL it but of course it didn't work :)

[14:49] <timotimo> you'll probably need a little indirection between the module's symbols and the actual code being run

[14:49] <jkramer> Turns out that types need to be known at compile-time of you want type checking :D

[14:49] *** benjikun left
[14:50] <jkramer> But it's not that important anyway

[14:51] *** benjikun joined
[14:53] <timotimo> actually, you can use "where" clauses :)

[14:54] *** mcmillhj joined
[14:54] <jkramer> I think I'll just dump the state of my script so I can restart it without losing progress :)

[14:55] <timotimo> that's probably better

[14:55] <timotimo> do that regularly and you're also probably relatively safe from crashes

[14:59] *** ctilmes joined
[14:59] <raschipi> We need Systemd bindings so that processes can stash their open file descriptors in systemd.

[15:03] *** scimon left
[15:03] <mst> jkramer: note that now rakudo's imports are lexical, there's perhaps tricks you can do involving reloading in a new scope

[15:03] *** troys joined
[15:04] <ctilmes> If I put this in 'test.pl': "multi MAIN('foo') {}; sub USAGE { say $*USAGE }" and run it, I get (as expected) "Usage:‚ê§  test.pl foo"

[15:04] <ctilmes> But if I change the 'say' to 'print', I get "Cannot auto-decontainerize argument‚ê§in sub USAGE at test.pl line 1‚ê§in block <unit> at test.pl line 1

[15:04] *** domidumont left
[15:04] <Zoffix> It's possible each `use` of the same module doesn't actually load it from scatch each time, but rather caches the load.

[15:04] <ctilmes> Just seemed weird to me.  'put' works fine too.

[15:06] <Zoffix> ctilmes: would you report it as a bug, please?

[15:07] <raschipi> m: multi MAIN('foo') {}; sub USAGE { print $*USAGE }

[15:07] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´Cannot auto-decontainerize argument‚ê§  in sub USAGE at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:08] *** lucasb joined
[15:09] <Zoffix> m: my $x := Proxy.new: :FETCH{"42\n"}, :STORE(-> $, $ {}); print $x

[15:09] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´Cannot auto-decontainerize argument‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:10] <raschipi> bisectable6: multi MAIN('foo') {}; sub USAGE { print $*USAGE }

[15:10] <bisectable6> raschipi, Bisecting by output (old=2015.12 new=08b449e) because on both starting points the exit code is 1

[15:10] *** vrurg left
[15:11] <bisectable6> raschipi, bisect log: https://gist.github.com/671e8ce9c39a6aa43f60815baf2d26d8

[15:11] <bisectable6> raschipi, (2017-06-07) https://github.com/rakudo/rakudo/commit/e538cbc5464447c4a0cf217119a9ff30bd74d765

[15:11] <ctilmes> Zoffix: Bugged: https://github.com/rakudo/rakudo/issues/2137

[15:11] <Zoffix> ctilmes++

[15:13] *** wamba left
[15:14] <Zoffix> m: multi MAIN('foo') {}; sub USAGE { print $*USAGE<> }

[15:14] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´Usage:‚ê§  <tmp> foo ¬ª

[15:18] <AlexDaniel> 6c: multi MAIN('foo') {}; sub USAGE { print $*USAGE }

[15:18] <committable6> AlexDaniel, https://gist.github.com/609c434bb7e086ae4042b2b5c2a673bb

[15:18] <AlexDaniel> raschipi: ‚Üë typically committable is a better tool for the first query :)

[15:19] <Zoffix> m: -> int { }( Proxy.new: :FETCH{42}, :STORE(-> | {}) 

[15:19] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3( Proxy.new: :FETCH{42}, :STORE(-> | {})7‚èè5<EOL>‚ê§¬ª

[15:19] <Zoffix> m: -> int { }( Proxy.new: :FETCH{42}, :STORE(-> | {}) )

[15:19] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´Cannot auto-decontainerize argument‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:19] *** wamba joined
[15:22] *** AlexDaniel left
[15:22] *** AlexDaniel joined
[15:26] *** andrzejku left
[15:27] <Zoffix> AlexDaniel: is there a gameplan for squashathon?

[15:28] <Zoffix> I wanna advertise this month's squashthon a bit more, 'cause fixing modules is really something we should do.... What do I tell people? Like, what will be the process for squashing?

[15:29] <AlexDaniel> Zoffix: http://colabti.org/irclogger/irclogger_log/perl6?date=2018-07-14#l329 http://colabti.org/irclogger/irclogger_log/perl6?date=2018-07-26#l900

[15:29] *** jmerelo joined
[15:29] <jmerelo> releasable6: status

[15:29] <releasable6> jmerelo, Next release will happen when it's ready. 3 blockers. 80 out of 256 commits logged (‚ö† 7 warnings)

[15:29] <releasable6> jmerelo, Details: https://gist.github.com/34313630748f8d5acf00862b0256aa4b

[15:30] <AlexDaniel> Zoffix: https://github.com/JJ/p6-river

[15:30] <AlexDaniel> and also: https://gist.github.com/AlexDaniel/a2d42affde57723229ed8ca28ee7b88c

[15:30] *** zakharyas left
[15:31] <jmerelo> AlexDaniel: cool :-)

[15:31] <Zoffix> k

[15:34] <jmerelo> AlexDaniel: what are the numbers behind the module name?

[15:35] <AlexDaniel> jmerelo: it's an attempt to untangle the ratsnest, don't look at it yet, it's not finished

[15:36] *** x[LGWs4x4i]uG2N0 left
[15:37] <Zoffix> 6.d release makes a lot of clarifications to 6.c spec. So far, it contains over 3,400 comits, made by more than 60 authors: https://raw.githubusercontent.com/perl6/marketing/master/Flyers/6.d-Teasers/T3-Spec-Clarifications--1532698761/T3-Spec-Clarifications--1532698761.jpg

[15:38] <AlexDaniel> Zoffix++

[15:39] *** x[LGWs4x4i]uG2N0 joined
[15:41] *** fake_space_whale joined
[15:47] *** wamba left
[15:48] <Geth> ¬¶ marketing: 7bd98fad7d | (Zoffix Znet)++ | 7 files

[15:48] <Geth> ¬¶ marketing: Add more stock

[15:48] <Geth> ¬¶ marketing: review: https://github.com/perl6/marketing/commit/7bd98fad7d

[15:51] <AlexDaniel> jmerelo: https://gist.github.com/AlexDaniel/6cd3e4af7f600edc04ba625516cf130c https://github.com/JJ/p6-river/blob/master/dep-to-dot.p6

[15:51] <AlexDaniel> jmerelo: that's as much as I'd be doing for it today, so take it away from here :)

[15:52] <Geth> ¬¶ doc: e664ce4785 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/classtut.pod6

[15:52] <Geth> ¬¶ doc: tweak grammar and text

[15:52] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e664ce4785

[15:52] <synopsebot> Link: https://doc.perl6.org/language/classtut

[15:52] <AlexDaniel> on github do right click/view image, then you'd get proper rendering of the svg

[15:52] <AlexDaniel> with hyperlinks and stuff

[15:53] <jmerelo> AlexDaniel: thanks!

[15:53] <raschipi> I I find it fascinating that webbrowsers consider svg to be on par with html as a rendering method.

[15:54] <AlexDaniel> yeah, you can also do css styling for svgs with stuff like onhover events

[15:55] <AlexDaniel> hmm maybe not withing .svg itself and you'd have to wrap it in .html, I'm not sure

[15:55] <AlexDaniel> within*

[15:55] <Zoffix> AlexDaniel: is there a way to see this magnified? https://gist.github.com/AlexDaniel/a2d42affde57723229ed8ca28ee7b88c

[15:56] <Zoffix> GitHub sends it as text/plain if you try "Raw"

[15:56] <AlexDaniel> Zoffix: right click on it, then ‚Äúview image‚Äù, then unzoom

[15:56] <AlexDaniel> code for generating it is here: https://github.com/JJ/p6-river/blob/master/dep-to-dot.p6

[15:57] *** vrurg joined
[15:57] <AlexDaniel> modules marked with * are shown on the graph multiple times, because otherwise it becomes completely unreadable

[15:57] <AlexDaniel> because yeah, everything depends on JSON::Fast :)

[15:58] <Zoffix> What would be cool is to to have the data for how active the author is and when the last commit was made to the module

[15:59] <Zoffix> I know I have a bunch of PRs that I sent like a year ago and they still were never accepted. 

[16:02] *** vrurg left
[16:02] *** wamba joined
[16:03] <Zoffix> buggable: toast

[16:03] <buggable> Zoffix, Between 2018.06-140-g68ed6f2 and 2018.06: 50 (4.53%) modules got burnt; 73 (6.61%) got unsucced; 383 (34.69%) out of 1104 modules appear unusable. See https://toast.perl6.party/ for details.

[16:03] <Zoffix> 34% :o

[16:03] <Zoffix> AlexDaniel: wait, is this a list of all modules or just the broken ones? https://gist.github.com/AlexDaniel/a2d42affde57723229ed8ca28ee7b88c

[16:04] <Zoffix> The image

[16:04] <timotimo> that's gotta be all of them

[16:04] <Zoffix> BTW, there's also a bunch of module errors in ecosystem build log: http://modules.perl6.org/update.log

[16:05] <Zoffix> As well as a bunch of TODOs: http://modules.perl6.org/todo

[16:05] <Zoffix> Though some of them, like missing `perl`, are already "fixed" (PR sent, but still not accepted)

[16:06] <AlexDaniel> Zoffix: lal modules

[16:07] <Zoffix> ZofBot: LAL

[16:07] <AlexDaniel> dammit what's up with my typing :)

[16:07] *** HaraldJoerg1 joined
[16:09] <raschipi> AlexDaniel: SVG itself supports scripting in Javascript, but it doesn't use CSS as far as I know. Here is an interesting SVG demo: https://tympanus.net/Tutorials/InteractiveSVG/

[16:09] <AlexDaniel> hmmmm

[16:09] <AlexDaniel> you're probably right

[16:10] <raschipi> Oh, yes, it does use CSS, just found out.

[16:10] *** HaraldJoerg left
[16:11] <jmerelo> Zoffix: that can be added, I guess.

[16:12] *** w_richard_w left
[16:13] <raschipi> The combination of dependency graphs with the staleness of the module is interesting because a stale leaf module isn't as concerning as one that has deps.

[16:13] *** MilkmanDan left
[16:13] *** MilkmanDan joined
[16:14] *** pmurias left
[16:16] <Geth> ¬¶ marketing: b343a07fa5 | (Zoffix Znet)++ | 13 files

[16:16] <Geth> ¬¶ marketing: Add Aug. 2018 Squashathon poster / ID 1532704910

[16:16] <Geth> ¬¶ marketing: review: https://github.com/perl6/marketing/commit/b343a07fa5

[16:16] *** pmurias joined
[16:18] *** HaraldJoerg1 is now known as HaraldJoerg

[16:18] <Zoffix> Join us next week, Saturday, August 4, 2018 for the Monthly SQUASHathon! This month we will be fixing broken ecosystem modules: https://bit.ly/2LUVRdu

[16:20] <Zoffix> More info on the SQUASHathon: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[16:20] *** ctilmes left
[16:25] *** Zoffix left
[16:25] *** alexghacker joined
[16:26] <tbrowder_>  if you want to see animated svg with css checkout https://psrr.info

[16:26] *** fake_space_whale left
[16:27] <alexghacker> I was looking at some unicode-related things today and I started wondering which version of the UCD my installation of perl6 was using and I can't figure out a way to tell.

[16:30] *** sftp joined
[16:31] *** lizmat joined
[16:34] <[Coke]> m: multi MAIN('foo') {}; sub USAGE { print $*USAGE.gist }

[16:34] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´Usage:‚ê§  <tmp> foo ¬ª

[16:35] <[Coke]> m: say $*USAGE.^name

[16:35] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´Failure‚ê§¬ª

[16:35] <lizmat> stmuk: thanks for the link  :-)

[16:35] <[Coke]> m: multi MAIN('foo') {}; sub USAGE { print $*USAGE.^name }

[16:35] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´Str¬ª

[16:35] <[Coke]> interesting.

[16:37] *** donpdonp joined
[16:37] <donpdonp> my_project$ zef install .  => install succeeds but I cant find my .pm6 files anywhere

[16:37] <AlexDaniel> Zoffix++ awesome poster, I love it

[16:38] <donpdonp> where should I be looking? ive searched ~/.zef and ~/.rakudobrew. is there something missing in my META6.json?

[16:38] <[Coke]> donpdonp: "zef locate <name of module>"

[16:38] <xinming> What is the correct way to get the resource files bundled with module?

[16:39] <xinming> put the files under resources, and what API should I use to locate that file?

[16:39] <xinming> since the file names are created with sha1sum IIRC

[16:39] <donpdonp> $ zef locate CamelPub => ===> From Distribution: CamelPub:ver<0.1.0>:auth<>:api<> (end of output). 

[16:39] <AlexDaniel> squashable6: next

[16:39] <squashable6> AlexDaniel, ‚ö†üçï Next SQUASHathon in 6 days and ‚âà17 hours (2018-08-04 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[16:40] <donpdonp> trying the same thing with Linenoise, it has an extra line of Linenoise => /home/donp/.rakudobrew/moar-2018.06/....

[16:40] <[Coke]> donpdonp: do you have a git repo we can examine?

[16:40] <[Coke]> is your META6.json correct?

[16:40] <donpdonp> [Coke]: https://nest.pijul.com/donpdonp/camelpub

[16:41] <[Coke]> does "zef locate CamelPub::ActivityPub" work?

[16:41] <araraloren_> they change the name of the file

[16:41] <donpdonp> [Coke]: ah yes it does.

[16:41] <araraloren_> so you can't find them according the file or module name

[16:42] <donpdonp> apparently i need more entries in the provides section

[16:42] <donpdonp> i wasnt sure if/how that part was used.

[16:42] <[Coke]> not to make him the support person, but niner can probably answer the rename question.

[16:42] *** sarna left
[16:47] <donpdonp> perl6/site/sources/189B5556FCC638ADAA39A49DF8476B133BD8C310: OS/2 REXX batch file, ASCII text

[16:47] <donpdonp> is that how p6 stores installed pm6 files??

[16:47] <araraloren_> yeah

[16:47] <donpdonp> o.O

[16:47] *** wamba left
[16:48] <donpdonp> [Coke]: things are happy with zef install now, thx for the tip.

[16:49] *** wamba joined
[16:51] <[Coke]> \o/

[16:51] * geekosaur is afraid to ask how libmagic came to that interpretation

[16:52] <[Coke]> we might want to submit some magic info for moarvm files.

[16:52] *** vrurg joined
[16:53] <raschipi> What is the magic number for Perl 6 files?

[16:53] <timotimo> those are source files, though

[16:54] <[Coke]> I don't know if donpdonp is pointing at a moarvm bytecode file there, or perl6 source or what.

[16:54] <araraloren_> Perl 6 not have magic number, I think

[16:54] <timotimo> precompiled moar bytecode files start with MOAR or MOARVM

[16:54] <[Coke]> it would be the bytecode files if anything. if that's source, magic is confused.

[16:54] <[Coke]> timotimo++

[16:54] <timotimo> oh

[16:54] <timotimo> actually

[16:54] <raschipi> And libmagic has no problem recognizing shebangs, just gotta teach it.

[16:55] <timotimo> the bytecode files in precomp directories start with a hash sum, then a piece of perl6 code that expresses dependencies, perhaps?

[16:55] *** psychoslave joined
[16:55] <timotimo> and then comes the MOARVM, at probably a non-fixed offset

[16:55] <araraloren_> yeah, they think my Perl 6 script is Perl script

[16:56] <araraloren_> that's right, but not exactly:)

[16:56] <lucasb> I think files under perl6/site/sources/* is always Perl 6 source code

[16:57] <raschipi> Can't put the 0x4d4f4152564d at the start?

[16:58] <araraloren_> Is Rakudo compile the source file only once ?

[16:58] <lucasb> for installed modules

[16:59] <raschipi> No, it compiles and caches any module. Causes problems if you include one from a directory with many files.

[16:59] <araraloren_> But I modify a file of a module, the change make works, why ?

[16:59] <raschipi> It takes a snapshot of the filesystem to know if it needs to recompile a module.

[17:00] <lizmat> actually, I think it's sha1's of the files, but yeah

[17:00] <araraloren_> oh

[17:00] <araraloren_> I thought they would work as pyc 

[17:00] <lizmat> so: if you make a change, it will recompile, but if you change it back, it might find the previous one and not recompile again

[17:01] <araraloren_> if the pyc exists, you change will not make works

[17:01] <araraloren_> in python module

[17:01] <araraloren_> yeah, thanks the explain :)

[17:01] <araraloren_> good night

[17:02] <lizmat> well, I guess we're batter than python then in that respect  :-)

[17:02] <lizmat> good night!

[17:02] *** araraloren_ left
[17:02] *** vrurg left
[17:03] <donpdonp> [Coke]: i wasnt sure either, i assumed it was binary, but the first line of that hex-filename is: use CamelPub::Commands; i have no idea how file came up with OS/2. haha.

[17:03] *** vrurg joined
[17:04] *** psychoslave left
[17:04] *** domidumont joined
[17:05] <lucasb> hmm, Rexx language also uses the "say" word

[17:05] <alexghacker> donpdonp: it did recognize it as ASCII text, so probably something in the content of the file matched a pattern thought to be characteristic of the REXX language as used on OS/2

[17:05] <jmerelo> .tell zoffix this is the list of non-core distros with more than 1 dependencies https://github.com/JJ/p6-river/blob/master/dependent-distros.csv

[17:05] <yoleaux> jmerelo: I'll pass your message to zoffix.

[17:08] *** vrurg left
[17:09] <geekosaur> yeh, libmagic is based on heuristics

[17:09] <geekosaur> unless you have a reliable byte sequence ("magic number") to identify something

[17:09] <timotimo> it'd be easy to notice if you have a current-version precomp file, or one starting in a magic number

[17:10] <timotimo> just make sure the magic number has something in it that's beyond hexadecimal

[17:10] <timotimo> probably wants something no filesystem would like %)

[17:16] *** clarkema joined
[17:21] *** Kaiepi left
[17:22] *** Kaiepi joined
[17:25] <jmerelo> .tell zoffix I have crossed the toast db with the dependency calculation DB and here's the list of failing distros with number of deps https://github.com/JJ/p6-river/blob/master/dependent-failing-distros.csv

[17:25] <yoleaux> jmerelo: I'll pass your message to zoffix.

[17:27] *** vrurg joined
[17:31] <buggable> New CPAN upload: Net-LibIDN2-0.1.0.tar.gz by KAIEPI http://modules.perl6.org/dist/Net::LibIDN2:cpan:KAIEPI

[17:32] <Geth> ¬¶ marketing: eebddc43c2 | (Zoffix Znet)++ | 6 files

[17:32] <Geth> ¬¶ marketing: Fix typo

[17:32] <Geth> ¬¶ marketing: review: https://github.com/perl6/marketing/commit/eebddc43c2

[17:34] *** Zoffix joined
[17:36] <Zoffix> jmerelo: thanks. Would you just prefix your messages with "Zoffix" like if I were in the channel instaed of using .tell command? My bot gives me all the messsages anyway, so there's no need to use .tell with me

[17:36] <yoleaux> 17:25Z <jmerelo> Zoffix: I have crossed the toast db with the dependency calculation DB and here's the list of failing distros with number of deps https://github.com/JJ/p6-river/blob/master/dependent-failing-distros.csv

[17:36] <Zoffix> less spam

[17:37] <Zoffix> I don't get why NativeCall is in that list. It's not an ecosystem distro

[17:39] <Zoffix> jmerelo: is that against last release? Test::Notice is listed as failing in that .csv, but it's passing

[17:40] *** psychoslave joined
[17:41] *** donpdonp left
[17:42] <jmerelo> Zoffix: sure. I have downloaded the database directly from the site.

[17:43] *** domidumont left
[17:43] *** psychoslave left
[17:43] <Zoffix> Which site? toast.perl6.party?

[17:43] <jmerelo> Zoffix: correct

[17:44] <[Coke]> (virtual pizza) I would be willing to donate some cash to a PM or something for actual pizza if there was an event.

[17:44] <Zoffix> jmerelo: You probably used the data from the dev commit that was toasted rather than the last stable release column

[17:44] <Zoffix> I now deleted the dev commit data. There was confusion about it on Facebook too -_-

[17:45] <jmerelo> Zoffix: I use the "status" column. What's the correct one?

[17:45] <jmerelo> Zoffix: and the correct database?

[17:46] <Zoffix> jmerelo: the status just says this module worked on last release but got broken on latest dev commit. 

[17:46] <Zoffix> jmerelo: the correct column is the "2018.06" in current data

[17:47] <Zoffix> jmerelo: in the database it's rakudo or rakudo_long column

[17:47] <Zoffix> jmerelo: oh wait

[17:47] <Zoffix> jmerelo: nevermind, yeah, it's the status column

[17:48] <Zoffix> jmerelo: but there were data for 2018.06 *and* the latest dev commit. You need to filter it by the value of `rakudo` column

[17:48] <Zoffix> Tho now all the data is just for 2018.06 in https://temp.perl6.party/toast.sqlite.db

[17:48] <jmerelo> Zoffix: which value? If it's 2018.16 it's not failing?

[17:49] <jmerelo> Zoffix: something like this? select module, status from toast where rakudo == "2018.06" and status != "Succ" and module like "Test%";

[17:50] <Zoffix> Why "and module like "Test%" ?

[17:50] <jmerelo> Zoffix: to test the module you mentioned above

[17:50] <jmerelo> Zoffix: and right, it's not there.

[17:51] <Zoffix> it'd be module == 'Test::Notice'

[17:52] <timotimo> except sql wants = instead of ==

[17:53] <Zoffix> sqlite> select module, status from toast where rakudo == "2018.06" and module == 'Test::Notice';

[17:53] <Zoffix> Test::Notice|Succ

[17:53] <timotimo> it was probably meant to be pseudocode

[17:53] <timotimo> oh?

[17:53] <timotimo> i sit corrected

[17:53] <Zoffix> :D

[17:53] <Zoffix> Looks like the two are just aliases, at least in SQLite: https://www.techonthenet.com/sqlite/comparison_operators.php

[17:54] <moritz> mysql doesn't like == iirc

[17:54] <rindolf> hi all

[17:56] *** kiwi_46 joined
[17:56] <raschipi> hi rindolf 

[17:56] <rindolf> raschipi: hi. sup?

[17:58] *** kiwi_46 left
[17:59] <Geth> ¬¶ doc/master: 4 commits pushed by (Will "Coke" Coleda)++

[17:59] <Geth> ¬¶ doc/master: e55c32d331 | whitespace

[17:59] <Geth> ¬¶ doc/master: 800b7eedf8 | whitespace

[17:59] <Geth> ¬¶ doc/master: ebc8cb215b | pass finicky links test

[17:59] <Geth> ¬¶ doc/master: dd1295ab21 | fix code typo that didn't compile.

[17:59] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/e664ce478525...dd1295ab219c

[18:00] *** lucasb left
[18:05] *** raiph joined
[18:05] <Zoffix> timotimo: maybe you can offer advice on whether `constant`s can be optimized in R#2138  IIRC you wrote the original optimizations for the literals case.

[18:05] <synopsebot> R#2138 [open]: https://github.com/rakudo/rakudo/issues/2138 Constants slower than literals in range creation

[18:07] <jmerelo> Zoffix: new version of failing modules with dependencies https://github.com/JJ/p6-river/blob/master/dependent-failing-distros.csv

[18:07] *** sarna joined
[18:08] <sarna> AlexDaniel: hey, do you by any chance know if spacemacs plays well with perl6 now?

[18:08] <Zoffix> jmerelo: cool. That's a lot more managable than the total 300+ failing modules.

[18:09] <AlexDaniel> sarna: if you use the dev version, then yes

[18:09] <jmerelo> Zoffix: this new new version includes only modules in the ecosystem https://github.com/JJ/p6-river/blob/master/dependent-failing-distros.csv

[18:09] <sarna> AlexDaniel: sweet, thanks!

[18:09] <AlexDaniel> sarna: what I mean by that is that you'd have to switch spacemacs repo to `develop` branch

[18:09] <jmerelo> Zoffix: that's what we are looking for, right? Or should I include core modules too? I mean, NativeCall is one of them...

[18:09] <AlexDaniel> sarna: last spacemacs release was in January, and perl6 layer was merged after that

[18:10] <AlexDaniel> sarna: so the next release will come with perl6 layer, but for now you'd have to use `develop`

[18:10] <Geth> ¬¶ doc: 07f3c96b3e | (Will "Coke" Coleda)++ | doc/Type/Signature.pod6

[18:10] <Geth> ¬¶ doc: remove stray char

[18:10] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/07f3c96b3e

[18:10] <synopsebot> Link: https://doc.perl6.org/type/Signature

[18:10] <sarna> AlexDaniel: I see, I see. I wonder how stable it is

[18:10] <AlexDaniel> ü§∑

[18:10] <Zoffix> jmerelo: no, since NativeCall isn't failing. In the toaster db it's listed as "Unknown". I dunno why it;'s even in the toaster list at all

[18:11] <sarna> AlexDaniel: I've been using vscode, but the highlighting breaks too often :^(

[18:11] <sarna> anyway, thanks :)

[18:11] <Geth> ¬¶ doc: b75421d493 | (Will "Coke" Coleda)++ | doc/Type/Cool.pod6

[18:11] <synopsebot> Link: https://doc.perl6.org/type/Cool

[18:11] <Geth> ¬¶ doc: pass finicky links test

[18:11] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/b75421d493

[18:11] <raiph> hi all, has anyone here installed/used comma?

[18:11] <[Coke]> Yes.

[18:11] <AlexDaniel> I attempted to switch to spacemacs a few weeks ago (that's after years after switching back to vanilla emacs), but the biggest issue for me was the lack of a good dark theme‚Ä¶

[18:11] <jmerelo> Zoffix: I'm including anything that's not Succ

[18:11] <[Coke]> (comma: yes)

[18:12] <sarna> AlexDaniel: I like the default theme

[18:12] <Zoffix> jmerelo: I don't remember exactly, but I think "Unkn" status means the toaster doesn't know if the module is failing or not.

[18:12] <sarna> but yeah, I could use something less bluey

[18:12] <Zoffix> raiph: I have

[18:13] <AlexDaniel> sarna: well, uhhh‚Ä¶ I like the default theme of emacs (the one that you get if your system is dark)

[18:13] <AlexDaniel> sarna: but in *spacemacs* it's not supported for some random reason https://github.com/syl20bnr/spacemacs/issues/4723

[18:13] <raiph> [Coke], Zoffix great, i've installed, it's not working yet, going to try again, will either of you be around in next hour or two?

[18:14] <sarna> AlexDaniel: hmm, weird

[18:14] *** fbynite joined
[18:14] <jmerelo> Zoffix: here it goes with just "Fail" and "Kill". https://github.com/JJ/p6-river/blob/master/dependent-failing-distros.csv HTTP::UserAgent takes the top

[18:14] <raiph> (in case i can't get it to work and it's cuz i'm doing something dumb that you can spot)

[18:16] <jmerelo> Zoffix: just 8 with more than 1 dep. Problem is I am not sure I have all modules, I'm using perl6-all-modules from moritz, but there are only ~300 there.

[18:16] <Zoffix> raiph: I think timotimo is one of the actual devs and can help you a lot betterer.

[18:16] <Zoffix> jmerelo: ohhhh.. Yeah, there's a bug with all modules repo and it's missing a bunch.

[18:17] <Zoffix> jmerelo: we have 1186 modules in the ecosystem: http://modules.perl6.org/search/?q=

[18:17] <Zoffix> m: say 1189-5

[18:17] <camelia> rakudo-moar 08b449e1a: OUTPUT: ¬´1184‚ê§¬ª

[18:17] <Zoffix> That many

[18:18] <[Coke]> raiph: nope

[18:18] <[Coke]> (I wouldn't plan on it, anyway)

[18:18] <raiph> Zoffix: thx

[18:18] <raiph> [Coke]: thx

[18:19] <jmerelo> Zoffix: is there an API I can use?

[18:19] <AlexDaniel> jmerelo: https://github.com/JJ/p6-river/blob/master/dep-to-dot.p6

[18:19] <[Coke]> wouldn't perl6-all-modules just be git-related ones anyway?

[18:20] <AlexDaniel> jmerelo: I believe it will fetch everything

[18:20] <Zoffix> [Coke]: no, it gets cpan too

[18:20] <[Coke]> (or is there a script to grab cpan-latest for those?)

[18:20] <[Coke]> woot

[18:20] <[Coke]> Zoffix++

[18:20] <jmerelo> AlexDaniel: OK, I'll use that

[18:22] *** sauvin left
[18:23] <Zoffix> jmerelo: there's a JSON endpoint, tho I don't think there's a way to use zero-length search query with it. You have to triplicate it: http://modules.perl6.org/s/from:cpan/.json  http://modules.perl6.org/s/from:gitlab/.json  http://modules.perl6.org/s/from:github/.json

[18:23] <Zoffix> (or figure out some other query that gets all modules and isn't empty)

[18:25] *** lucasb joined
[18:27] <jmerelo> Zoffix: I've finally used AlexDaniel's script, and here's the result https://github.com/JJ/p6-river/blob/master/dependent-failing-distros.csv

[18:27] <Zoffix> jmerelo: figured out the endpoint for all results. It's just: http://modules.perl6.org/search.json

[18:27] <jmerelo> Zoffix: 26 with more than 1 downstream dep

[18:28] <jmerelo> Is it worth the while to fix HTTP::UserAgent? Or is it better to fix whatever depends on it?

[18:30] <jmerelo> Zoffix: It's a single test. We should probably fix that... Weird error, too.

[18:31] <lucasb> some issue with this line: https://github.com/ingydotnet/testml-pm6/blob/master/META6.json#L27

[18:32] <Zoffix> lucasb: 'cause protocol is git, but the URL points to a ZIP file, not a git repo.

[18:32] <lucasb> source-url should be git://github.com/ingydotnet/testml-pm6.git ? zef is capable of cloneing and checkout the correct tag/revision?

[18:33] *** Zoffix left
[18:33] <jmerelo> Zoffix, AlexDaniel: now what needs to be done? Create issues in ecosystem and point the pizzabot to all these modules?

[18:35] *** clarkema left
[18:35] <jmerelo> Zoffix: "kill" apparently means it's taking too long. Should I eliminate those too?

[18:36] *** AlexDaniel left
[18:36] *** vrurg left
[18:37] <jmerelo> Zoffix: also, in some cases it's a problem with non-perl6 dependencies, such as this one: https://toast.perl6.party/module?module=Net::ZMQ&commit=2018.06

[18:38] *** psychoslave joined
[18:42] *** Possum left
[18:42] *** Possum joined
[18:53] *** jmerelo left
[19:01] *** kybr joined
[19:02] *** sarna left
[19:07] *** psychoslave left
[19:08] *** zakharyas joined
[19:11] *** mcmillhj left
[19:11] *** mcmillhj joined
[19:11] *** mcmillhj left
[19:12] *** gfldex joined
[19:13] *** mcmillhj joined
[19:14] *** robertle_ joined
[19:14] *** raschipi left
[19:22] *** dct joined
[19:27] *** vrurg joined
[19:42] *** zakharyas left
[19:55] *** vrurg left
[19:59] *** raiph left
[20:02] *** domidumont joined
[20:04] *** molaf left
[20:06] *** lucasb left
[20:09] *** fbynite left
[20:20] *** domidumont left
[20:21] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Cordova-0.0.1.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Sparrowdo-VSTS-YAML-Cordova-0.0.1.tar.gz

[20:21] *** domidumont joined
[20:23] *** molaf joined
[20:29] *** raiph joined
[20:33] <raiph> Does anyone know if the interactive nqp shell can be made to use up arrow for command line history? If you see this and know an answer, please .tell me. tia.

[20:35] *** vrurg joined
[20:37] <geekosaur> suspect you need to use rlwrap

[20:37] *** vrurg left
[20:39] *** domidumont left
[20:49] *** mcmillhj left
[20:51] *** x[LGWs4x4i]uG2N0 left
[20:52] *** gabiruh left
[20:53] *** gabiruh joined
[20:54] <raiph> geekosaur: thx. that helped. but no cigar for me so far. installed rlwrap. cd'd to nqp dir; rlwrap ./nqp; Unhandled exception: While looking for 'nqp.moarvm': no such file or directory. now i need to remember how to use find. dusting off linux sysadmin braincells mostly unused this century...

[20:56] *** x[LGWs4x4i]uG2N0 joined
[20:57] <raiph> ah, -iname, now i remember

[20:57] *** gb00s joined
[20:57] *** gb00s left
[20:58] *** mcmillhj joined
[20:59] <raiph> geekosaur: yay, success, thx 

[21:05] *** mcmillhj left
[21:12] *** mcmillhj joined
[21:17] *** mcmillhj left
[21:19] *** AlexDaniel joined
[21:21] *** fbynite joined
[21:24] <AlexDaniel> Zoffix: btw you can also PM yoleaux to receive your messages (less spam this way)

[21:26] *** vrurg joined
[21:27] *** a3r0 joined
[21:30] *** Zoffix joined
[21:30] *** fbynite left
[21:31] <Zoffix> AlexDaniel: yes, but it's annoying useless work for me

[21:31] <Zoffix> :)

[21:31] <timotimo> so automate it! :)

[21:31] <AlexDaniel> or just don't leave the channel :)

[21:31] <Zoffix> I gotta

[21:31] *** Zoffix left
[21:38] *** mcmillhj joined
[21:38] *** |oLa| left
[21:39] *** vrurg left
[21:39] *** |oLa| joined
[21:40] *** fbynite joined
[21:41] *** |oLa|1 joined
[21:42] *** mcmillhj left
[21:44] *** |oLa| left
[21:45] *** sena_kun left
[21:48] *** cpage_ joined
[21:49] *** mcmillhj joined
[21:49] *** mcmillhj left
[21:50] *** cpage left
[21:50] *** cpage_ is now known as cpage

[21:51] *** rindolf left
[21:55] *** |oLa|1 left
[21:55] *** |oLa| joined
[21:55] *** |oLa| left
[21:56] *** HaraldJoerg left
[22:01] *** mcmillhj joined
[22:06] *** mcmillhj left
[22:10] *** TreyHarris left
[22:11] *** Kaiepi left
[22:18] *** Zamenhof joined
[22:20] <Zamenhof> can anyone tell me the name of the perl6 equivalent to perlbrew?  Is rakudobrew the recommended application to manage multiple perl 6 installs?

[22:20] *** vrurg joined
[22:21] *** Kaiepi joined
[22:21] <Zamenhof> I have rakudo 2017.07 and wanted to keep it, but install rakudo 2018.04

[22:22] <benjikun> That's what rakudobrew is used for, yeah, but I don't know if people still use rakudobrew

[22:23] *** vrurg left
[22:23] <Zamenhof> that was my question.  I recall reading that there is something new to do this, but I can't recall the name

[22:23] *** TreyHarris joined
[22:23] <El_Che> Zamenhof: what os do you run?

[22:24] <Zamenhof> Windows 10

[22:24] <El_Che> rakudo star has 2018.04 windows packages

[22:24] <El_Che> it releases every 3 months

[22:24] <masak> Zamenhof: saluton, amiko!

[22:25] <Zamenhof> saluton! my esperanto is very bad atm

[22:25] <masak> I just thought, given the name... :)

[22:25] <masak> 'night, #perl6

[22:25] *** fbynite left
[22:25] <benjikun> night night masak

[22:26] <Zamenhof> El_Che: I wanted to install the newest rakudo compiler, but keep the older version too

[22:26] <MasterDuke> there are some other tools to get/build rakudo, but i don't think they allow keeping older versions

[22:26] <Zamenhof> ah, ok.  good to know

[22:26] <MasterDuke> rakudup, lonestar, etc

[22:27] <Zamenhof> I checked github and rakudobrew had a commit in October.

[22:27] <benjikun> maybe you could just compile the different versions to different directories and alias the version name in the command

[22:27] <benjikun> or make a sym link for each perl6 binary

[22:27] <Zamenhof> benjikun: I figured there was a lazier way to do it.  This is the perl community after all :)

[22:27] *** skids joined
[22:28] <benjikun> ah, good :)

[22:29] <Zamenhof> I was in the perl 5 irc the other day and brought up berrybrew (a windows version of perlbrew).

[22:29] <Zamenhof> it is a bit rough, and some had played with the idea of a rewrite in powershell

[22:30] <Zamenhof> perhaps a windows version of perlbrew could incorporate various versions of perl 6 too

[22:30] <MasterDuke> https://github.com/zoffixznet/z might be another option. it's geared more toward developers of rakudo, but your usecase kind of overlaps

[22:31] <Zamenhof> thx.  I did not know about that one.

[22:31] *** fbynite joined
[22:32] *** mcmillhj joined
[22:32] *** vrurg joined
[22:36] *** mcmillhj left
[23:01] *** |oLa| joined
[23:10] *** molaf left
[23:25] *** skids left
[23:33] *** fbynite left
[23:36] *** SCHAPiE left
[23:37] *** SCHAPiE joined
[23:42] *** dct left
[23:43] *** pecastro left
[23:52] *** mcmillhj joined
[23:57] *** mcmillhj left
[23:58] *** mcmillhj joined
[23:59] *** Zamenhof left
