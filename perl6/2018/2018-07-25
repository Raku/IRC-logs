[00:02] *** sena_kun left
[00:05] *** mcmillhj left
[00:06] <benjikun> :/

[00:12] *** mcmillhj joined
[00:14] *** gabiruh left
[00:15] *** kerframil left
[00:17] *** mcmillhj left
[00:21] *** Schepeers left
[00:25] *** mcmillhj joined
[00:27] *** Schepeers joined
[00:28] *** warriors left
[00:29] *** mcmillhj left
[00:37] *** fake_space_whale joined
[00:37] *** mcmillhj joined
[00:41] *** wamba left
[00:42] *** mcmillhj left
[00:47] *** [particle]1 joined
[00:47] *** [particle] left
[00:53] *** [particle]1 left
[00:54] *** mcmillhj joined
[01:06] *** molaf left
[01:07] <b2gills> Zoffix: The order of .keys and .values are supposed to be the same (just like Perl5). “Unless %hash is altered in any way, successive calls to .keys, .kv, .pairs, .values, or .iterator will iterate over the elements in the same order.” https://design.perl6.org/S09.html#line_1200

[01:10] <b2gills> ingy: I would recommend treating .precomp as an implementation detail. Use zef, or if you must methods on $*REPO to change things.

[01:12] *** gabiruh joined
[01:13] <MasterDuke> samcv: ^^^

[01:16] *** gabiruh left
[01:18] *** molaf joined
[01:22] *** mcmillhj left
[01:29] *** gabiruh joined
[01:44] *** Sgeo joined
[01:45] *** Sgeo_ left
[01:52] *** mcmillhj joined
[01:57] *** mcmillhj left
[02:08] *** mst joined
[02:10] <buggable> New CPAN upload: Hash-MultiValue-0.6.tar.gz by HANENKAMP http://modules.perl6.org/dist/Hash::MultiValue:cpan:HANENKAMP

[02:11] <samcv> i must head to bed, but in the morning i'll look

[02:11] <yoleaux> 24 Jul 2018 16:33Z <Zoffix> samcv: would you verify if the claim in D#2182 actually apply to Perl 6? is calling .keys and then calling .values give you the same order? Prolly should have an explicit spectest if that's the behaviour https://github.com/perl6/doc/issues/2182

[02:11] <synopsebot> D#2182 [open]: https://github.com/perl6/doc/issues/2182 [docs][update] No docs on the ordering of .keys and .values methods of a Hash

[02:12] <samcv> at some of the doc issues and contribute to some of them

[02:12] *** mcmillhj joined
[02:17] *** mcmillhj left
[02:22] *** ufobat_ joined
[02:26] *** ufobat left
[02:27] *** konsolebox left
[02:30] *** konsolebox joined
[02:30] *** mcmillhj joined
[02:30] *** dct left
[02:35] *** mcmillhj left
[02:35] *** molaf left
[02:40] *** molaf joined
[02:41] *** mcmillhj joined
[02:43] *** [particle] joined
[02:46] *** mcmillhj left
[02:48] *** [particle] left
[02:50] *** subroot left
[02:59] *** mcmillhj joined
[03:00] <buggable> New CPAN upload: Future-0.1.tar.gz by HANENKAMP https://cpan.metacpan.org/authors/id/H/HA/HANENKAMP/Perl6/Future-0.1.tar.gz

[03:03] *** mcmillhj left
[03:15] *** stmuk joined
[03:17] *** stmuk_ left
[03:22] *** spycrab0 left
[03:26] *** molaf left
[03:28] *** Schepeers left
[03:34] *** mcmillhj joined
[03:36] *** [particle] joined
[03:37] *** vike joined
[03:39] *** mcmillhj left
[03:44] *** [particle]1 joined
[03:46] *** [particle] left
[03:48] *** [particle] joined
[03:48] *** [particle]1 left
[03:48] *** mcmillhj joined
[03:52] *** mcmillhj left
[04:01] *** w_richard_w joined
[04:12] <xinming> What is the differences between <.regex> vs <&regex>?

[04:12] <xinming> are they the same?

[04:15] *** mcmillhj joined
[04:20] *** mcmillhj left
[04:23] <benjikun> xinming: https://docs.perl6.org/language/regexes#Subrules

[04:23] <zostay> <.regex> calls the regex method while <&regex> calls the regex sub

[04:23] <benjikun> "If no capture is desired, a leading dot or ampersand will suppress it: <.named-regex> if it is a method declared in the same class or grammar, <&named-regex> for a regex declared in the same lexical context."

[04:24] <xinming> thanks

[04:24] <zostay> so, within a grammar or whatever, they are sort of the same, i think, but <.regex> can use inheritance

[04:24] <zostay> its something like that... i probably muddled it

[04:25] <benjikun> didn't mean to be rude for quoting the docs :p, didn't know how to word it myself

[04:25] <geekosaur> looks to me like what they look like: & for a sub (including regex), . for a method (token/rule)?

[04:25] <zostay> but, as . prefix always means method call and & prefix always means routine (which might be a method), that's my understanding

[04:25] <benjikun> ^ same

[04:26] <zostay> m: 40.&(method () { self + 2 });

[04:27] <camelia> rakudo-moar a71e370bb: ( no output )

[04:27] <zostay> m: 40.&(method () { self + 2 }).say;

[04:27] <camelia> rakudo-moar a71e370bb: OUTPUT: «42␤»

[04:27] <zostay> and then there's both together

[04:33] *** mcmillhj joined
[04:33] <benjikun> m: sub foo { sub { sub { say "bar" } } }; foo()()()

[04:33] <camelia> rakudo-moar a71e370bb: OUTPUT: «bar␤»

[04:35] <benjikun> m: sub one { sub two { 2; }; sub three { 3; }; 1; }; one()()

[04:35] <camelia> rakudo-moar a71e370bb: OUTPUT: «No such method 'CALL-ME' for invocant of type 'Int'␤  in block <unit> at <tmp> line 1␤␤»

[04:36] <benjikun> why does it do this

[04:36] <geekosaur> because you tried to do 1.()

[04:36] <benjikun> ohhh

[04:36] <geekosaur> the result of sub one is 1

[04:36] <benjikun> I see

[04:36] <geekosaur> you then try to use () on it, i.e. call it

[04:36] <DrForr> Huh. Pluggable is installing XML::Writer, SVG and SVG::Plot.

[04:37] <DrForr> Not quite what I'd expect, /me goes to look at code.

[04:37] <benjikun> https://github.com/tony-o/perl6-pluggable/blob/master/META6.json

[04:37] <benjikun> test depends on it

[04:37] <DrForr> Yeah, just looked.

[04:37] *** mcmillhj left
[04:38] <DrForr> Ah, it's a sample module to plug in. 

[04:38] <DrForr> Just seemed a touch odd.

[04:40] <xinming> is it possible to call regex from parent grammar?  something like,  grammar A { regex abc { .. } }; grammar B is A { regex abc { <call-parent-abc> } }

[04:40] *** squashable6 joined
[04:42] <DrForr> xinming: I'd expect to see a grammar contain tokens and rules, not regexes, so that's the first thing that surprises me a bit.

[04:43] <xinming> hmm, Ok, I mean the token thing anyway. :-)

[04:44] <geekosaur> I'd expect <A::abc>

[04:44] <xinming> let me try

[04:44] *** mcmillhj joined
[04:45] <DrForr> I would try <PARENT::abc> before that though, in case your package name changes.

[04:45] <xinming> m: grammar A { token abc { \d } }; grammar B is A { token abc { 'p:' <A::abc> } }; B.parse('p:1');

[04:45] <camelia> rakudo-moar a71e370bb: OUTPUT: «No such method 'TOP' for invocant of type 'B'␤  in block <unit> at <tmp> line 1␤␤»

[04:45] <xinming> m: grammar A { token abc { \d } }; grammar B is A { token abc { 'p:' <A::abc> } }; B.parse('p:1', :rule('abc');

[04:45] <camelia> rakudo-moar a71e370bb: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3::abc> } }; B.parse('p:1', :rule('abc');7⏏5<EOL>␤    expecting …»

[04:45] <xinming> m: grammar A { token abc { \d } }; grammar B is A { token abc { 'p:' <A::abc> } }; B.parse('p:1', :rule('abc'));

[04:45] <camelia> rakudo-moar a71e370bb: ( no output )

[04:45] <xinming> m: grammar A { token abc { \d } }; grammar B is A { token abc { 'p:' <A::abc> } }; say B.parse('p:1', :rule('abc'));

[04:45] <camelia> rakudo-moar a71e370bb: OUTPUT: «｢p:1｣␤ A::abc => ｢1｣␤»

[04:46] <xinming> GOod, thanks

[04:46] <xinming> m: grammar A { token abc { \d } }; grammar B is A { token abc { 'p:' <PARENT::abc> } }; say B.parse('p:1', :rule('abc'));

[04:46] <camelia> rakudo-moar a71e370bb: OUTPUT: «===SORRY!===␤Could not locate compile-time value for symbol PARENT␤»

[04:46] <xinming> so, no *PARENT*

[04:46] <geekosaur> m: grammar A { token abc { \d } }; grammar B is A { token abc { 'p:' <SUPER::abc> } }; say B.parse('p:1', :rule('abc'));

[04:46] <camelia> rakudo-moar a71e370bb: OUTPUT: «===SORRY!===␤Could not locate compile-time value for symbol SUPER␤»

[04:46] <geekosaur> bah

[04:47] <geekosaur> of course a problem with PARENT is there may be more than one, so it becomes tricky

[04:49] *** mcmillhj left
[04:52] *** curan joined
[04:58] *** mcmillhj joined
[05:02] *** rindolf joined
[05:03] *** mcmillhj left
[05:20] *** jmerelo joined
[05:21] <jmerelo> Hey

[05:21] <benjikun> Howdy jmerelo

[05:22] <jmerelo> benjikun: not bad :-). Checking that nothing is broken

[05:24] <jmerelo> benjikun: which seems to be the case, although something seems to be wrong also...

[05:31] *** mcmillhj joined
[05:35] *** sauvin joined
[05:36] *** mcmillhj left
[05:41] *** xtreak joined
[05:42] <benjikun> jmerelo: the search on docs.perl6.org broke earlier but someone fixed it

[05:42] <benjikun> :p

[05:47] <Geth> ¦ doc: a0dc962973 | (JJ Merelo)++ | util/update-and-sync

[05:47] <Geth> ¦ doc: Testing again #2203

[05:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a0dc962973

[05:48] <jmerelo> benjikun: OK, that was it... Zoffix fixed it. It was because git clean -fd deleted html/js and apparently it was not created again. But it should

[05:50] <jmerelo> benjikun: Thanks for that. I'm trying this again, just in case.

[05:58] *** xtreak left
[05:58] <benjikun> ofc :)

[05:59] <jmerelo> benjikun: see you

[05:59] *** fake_space_whale left
[05:59] *** epony left
[06:02] *** mcmillhj joined
[06:03] *** andrzejku_ joined
[06:05] <benjikun> night night

[06:05] *** benjikun left
[06:05] *** MasterDuke left
[06:06] *** xtreak joined
[06:06] *** andrzejku left
[06:07] *** andrzejku_ is now known as andrzejku

[06:07] *** mcmillhj left
[06:08] *** Actualeyes joined
[06:12] *** andrzejku_ joined
[06:13] *** psychoslave joined
[06:13] <Geth> ¦ doc: 86f4db46ad | (JJ Merelo)++ | app.pl

[06:13] <Geth> ¦ doc: Creating js when it's needed refs #2203

[06:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/86f4db46ad

[06:15] *** epony joined
[06:16] *** andrzejku left
[06:16] *** andrzejku_ is now known as andrzejku

[06:29] *** mcmillhj joined
[06:33] <jmerelo> That thing above might potentially broke something. Please hold tight if it does, I'm AFK 1 hour from now (ish). I'll fix it when I get back here.

[06:33] *** mcmillhj left
[06:40] *** mcmillhj joined
[06:44] *** mcmillhj left
[06:49] *** Schepeers joined
[06:51] *** robertle joined
[06:52] *** domidumont joined
[06:58] *** domidumont left
[06:59] *** domidumont joined
[07:08] *** mcmillhj joined
[07:13] *** mcmillhj left
[07:20] *** mcmillhj joined
[07:25] *** mcmillhj left
[07:38] *** scovit_ joined
[07:39] <scovit_> CurtisPoe: did you look at ArrayHash? it seems like a much better module than the one you were trying to use

[07:39] <CurtisPoe> scovit_: hadn

[07:39] <CurtisPoe> hadn’t seen that one. 

[07:40] <scovit_> https://github.com/zostay/perl6-ArrayHash

[07:41] <scovit_> I think that in the end you need an array of pairs, and this adds all the machinery to access it in an Associative way

[07:41] <scovit_> judging from the documentation

[07:42] <CurtisPoe> Thank you.

[07:43] <scovit_> :)

[07:44] *** vrurg left
[07:45] *** mcmillhj joined
[07:48] <jmerelo> OK; so that worked...

[07:50] *** mcmillhj left
[07:50] <Geth> ¦ doc: 77a32bf936 | (JJ Merelo)++ | 2 files

[07:50] <Geth> ¦ doc: Adds comment to explain behavior, closes #2203

[07:50] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/77a32bf936

[07:58] *** mcmillhj joined
[08:00] *** scovit_ left
[08:03] *** mcmillhj left
[08:05] <masak> recently I've been getting this warning when running things in Rakudo: "Useless use of constant integer 0 in sink context (line 1048)"

[08:05] *** xtreak_ joined
[08:05] *** zakharyas joined
[08:06] <masak> it seems to happen only sometimes, and (I think) only before throwing a real error

[08:06] *** xtreak left
[08:08] <moritz> that is a compile-time error... wth?

[08:08] <moritz> s/error/warning/

[08:09] <moritz> maybe it codegens something, and warns about the generated code?

[08:10] *** lizmat left
[08:13] *** mcmillhj joined
[08:14] <masak> I've had a hard time pinning it down so far

[08:15] *** dakkar joined
[08:18] *** mcmillhj left
[08:23] *** lizmat joined
[08:26] *** xtreak_ left
[08:26] *** xtreak joined
[08:29] *** mcmillhj joined
[08:30] *** psychoslave left
[08:32] *** psychoslave joined
[08:33] *** mcmillhj left
[08:39] *** xtreak left
[08:56] *** vrurg joined
[08:56] <masak> does anyone remember where the old HTML-based spesh profiler can be found?

[08:57] <masak> (also, is it still maintained?)

[08:59] *** xtreak joined
[09:00] *** Skarsnik joined
[09:00] <Skarsnik> Hello there

[09:00] *** mcmillhj joined
[09:01] <lookatme> o/ Skarsnik 

[09:01] <moritz> masak: perl6 --profile (or did that change)?

[09:01] <moritz> \o Skarsnik, lookatme 

[09:05] *** mcmillhj left
[09:10] <buggable> New CPAN upload: Hash-Restricted-0.0.2.tar.gz by ELIZABETH http://modules.perl6.org/dist/Hash::Restricted:cpan:ELIZABETH

[09:11] *** pmurias joined
[09:13] *** imcsk8 joined
[09:15] *** kerframil joined
[09:17] <masak> moritz: seems you're perfectly right

[09:17] <masak> ah, so then it's somewhere in the rakudo codebase?

[09:18] <moritz> masak: or nqp

[09:18] <masak> the hunt continues

[09:19] <masak> yeah, it's in the nqp repo

[09:19] *** Schepeers left
[09:28] *** vrurg left
[09:30] *** wamba joined
[09:30] <buggable> New CPAN upload: Hash-Restricted-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/Hash::Restricted:cpan:ELIZABETH

[09:31] *** Schepeers joined
[09:34] *** xinming joined
[09:39] *** w_richard_w left
[09:50] *** haxmeister joined
[09:50] *** timotimo joined
[09:57] *** xinming left
[09:57] *** xinming joined
[10:00] <Voldenet> m: say (20..21).map(sprintf("%x", *))

[10:00] <camelia> rakudo-moar a71e370bb: OUTPUT: «Directive x not applicable for type Whatever␤  in block <unit> at <tmp> line 1␤␤»

[10:00] <Voldenet> m: say (20..21).map({ sprintf("%x", $_) })

[10:00] <camelia> rakudo-moar a71e370bb: OUTPUT: «(14 15)␤»

[10:01] <Voldenet> Hm, I wouldn't mind if sprintf in this case returned a block

[10:02] <Voldenet> since it doesn't support WhateverCode in any of arguments anyway

[10:04] <timotimo> you mean like when you use "assuming"? :)

[10:05] <timotimo> alternatively, you can *.fmt("%x") or even *.base(16)

[10:06] *** mcmillhj joined
[10:06] <Voldenet> Okay, *.fmt looks a lot better.

[10:07] *** domidumont left
[10:11] *** mcmillhj left
[10:19] *** mcmillhj joined
[10:24] *** mcmillhj left
[10:34] *** xtreak left
[10:45] *** sena_kun joined
[10:50] *** mcmillhj joined
[10:50] <Geth> ¦ doc: ed20ea64bf | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[10:50] <Geth> ¦ doc: tweak grammar and instructions

[10:50] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ed20ea64bf

[10:55] *** mcmillhj left
[10:55] <Geth> ¦ doc: 5c17099230 | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[10:55] <Geth> ¦ doc: tidy CREDITS file reference

[10:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5c17099230

[10:57] *** physpi| joined
[10:58] *** xtreak joined
[11:01] *** physpi| left
[11:02] <tbrowder_> i just noticed the CREDITS file mentioned in CONTRIBUTING links to the rakudo/rakudorepo repo CREDITS file. are both used for the contribution reports?

[11:03] <tbrowder_> A

[11:03] *** zakharyas left
[11:03] <tbrowder_> AlexDaniel: ^^^

[11:04] <tbrowder_> most users probably cannot mod the rakudo credits file...

[11:07] *** mcmillhj joined
[11:08] *** spycrab0 joined
[11:09] <AlexDaniel> tbrowder_: contributors.p6 script seems to look in CREDITS file of every repo

[11:09] <AlexDaniel> tbrowder_: so adding yourself to doc/CREDITS should be enough

[11:10] <tbrowder_> good, i’ll change the link to this repo

[11:12] *** mcmillhj left
[11:12] <Geth> ¦ perl6-lwp-simple: c4e3b30f31 | (Zoffix Znet)++ (committed using GitHub Web editor) | META6.json

[11:12] <Geth> ¦ perl6-lwp-simple: Follow auth format from zef

[11:12] <Geth> ¦ perl6-lwp-simple: 

[11:12] <Geth> ¦ perl6-lwp-simple: https://github.com/ugexe/zef/blob/3a5fead1bca2a7813f1290b1ed013a3527dfbb1f/META6.json#L5

[11:12] <Geth> ¦ perl6-lwp-simple: 

[11:12] <Geth> ¦ perl6-lwp-simple: Currently, it shows up :auth as Cosimo instead of perl6 and somehow people manage

[11:12] <Geth> ¦ perl6-lwp-simple: to report bugs in the wrong repo:

[11:12] <Geth> ¦ perl6-lwp-simple: https://github.com/cosimo/perl6-lwp-simple/issues/70#issuecomment-407687388

[11:13] <Geth> ¦ perl6-lwp-simple: review: https://github.com/perl6/perl6-lwp-simple/commit/c4e3b30f31

[11:13] <Geth> ¦ perl6-lwp-simple: 1ea92f84d9 | (Zoffix Znet)++ (committed using GitHub Web editor) | META6.json

[11:13] <Geth> ¦ perl6-lwp-simple: Bump version

[11:13] <Geth> ¦ perl6-lwp-simple: review: https://github.com/perl6/perl6-lwp-simple/commit/1ea92f84d9

[11:13] <tbrowder_> AlexDaniel: i’m working on another intermediate doc update to add the group headings back into the current doc display. if that works, then i will move to the next step of having subpages for each group. any objections? (it looks like the doc website build process works ok now)

[11:14] <AlexDaniel> tbrowder_: will we finally get separate tables for each category? :)

[11:14] <tbrowder_> that’s my goal

[11:17] <Voldenet> is implementing CALL-ME for Whatever a good idea?

[11:17] <Voldenet> m: Whatever.^add_method("CALL-ME", -> $a, |b { -> &c { &c(|b) } }); ({ say $^a * $^b }).map(*(123, 456))

[11:17] <camelia> rakudo-moar a71e370bb: OUTPUT: «56088␤»

[11:17] <Voldenet> something like this

[11:19] *** [particle] left
[11:19] *** [particle] joined
[11:20] <Geth> ¦ doc: 2e25efeb8d | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[11:20] <Geth> ¦ doc: update credit info

[11:20] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2e25efeb8d

[11:20] *** mcmillhj joined
[11:21] *** vrurg joined
[11:21] *** [particle] left
[11:21] *** [particle]1 joined
[11:25] *** mcmillhj left
[11:27] *** vrurg left
[11:30] *** domidumont joined
[11:38] *** mcmillhj joined
[11:38] *** robertle left
[11:39] *** Zoffix joined
[11:40] *** robertle joined
[11:42] *** psychoslave left
[11:42] *** mcmillhj left
[11:43] <Voldenet> m: Whatever.^add_method("CALL-ME", -> $a, |b { -> &c { my $c = &c.assuming(|b); $c.arity ?? $c !! $c() } }); ({ say $^a * $^b }).map(*(123, *)).map(*(456))

[11:43] <camelia> rakudo-moar a71e370bb: OUTPUT: «56088␤»

[11:43] <Voldenet> that, even

[11:44] *** scimon joined
[11:44] <Zoffix> Voldenet: IMO that just furthers the confusion newcomers have that Whatever isn't a WhateverCofe

[11:44] <Zoffix> $Code

[11:44] <Zoffix> bah

[11:44] <Voldenet> but it's pretty awesome :D

[11:45] <Zoffix> It isn't

[11:45] <Voldenet> Okay. :(

[11:47] *** christel| joined
[11:47] *** christel| left
[11:48] <Zoffix> m: say (<a b c>, <b j k>).map(*.[2,1])

[11:48] <camelia> rakudo-moar a71e370bb: OUTPUT: «((c b) (k j))␤»

[11:48] <Zoffix> IMO instead *.(...) should curry just like *.[...] does

[11:52] <Voldenet> I guess that makes sense

[11:56] <Geth> ¦ doc: 378cf71d77 | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[11:56] <Geth> ¦ doc: start a new section

[11:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/378cf71d77

[11:56] <Voldenet> originally the problem I had was with was with the syntax resembling this:

[11:57] <Voldenet> m: ({ $^a * 2 }, { $^a * 4 }).map({ $_(42) }).say

[11:57] <camelia> rakudo-moar a71e370bb: OUTPUT: «(84 168)␤»

[11:57] <Voldenet> it works, but I'm not sure if `{ $_(42) }` can be written in more readable way

[11:58] <Geth> ¦ doc: cf3cc8a8f8 | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[11:58] <Geth> ¦ doc: correct index entry

[11:58] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cf3cc8a8f8

[11:59] *** robertle left
[11:59] *** psychoslave joined
[12:03] *** itaipu joined
[12:06] <lizmat> Voldenet: map( -> &code { code(42) } ) ?

[12:07] <Voldenet> Ah, that made me realize I can write a sub without ruining Whatever

[12:07] <Voldenet> m: sub call-with(|c) { -> &b { &b(|c) } }; ({ $^a * 2 }, { $^a * 4 }).map(call-with(42)).say

[12:07] <camelia> rakudo-moar a71e370bb: OUTPUT: «(84 168)␤»

[12:07] <Zoffix> m: ({ $^a * 2 }, { $^a * 4 }).map({.(42)}).say

[12:07] <camelia> rakudo-moar a71e370bb: OUTPUT: «(84 168)␤»

[12:07] <samcv> good *

[12:07] <Zoffix> m: ({ $^a * 2 }, { $^a * 4 })».(42).say

[12:07] <camelia> rakudo-moar a71e370bb: OUTPUT: «(84 168)␤»

[12:07] <Zoffix> \o

[12:08] *** mcmillhj joined
[12:08] <jmerelo> Zoffix, samcv: hi!

[12:08] <samcv> it is too hot

[12:09] <Zoffix> it is too humid

[12:09] <jmerelo> samcv: 35º? just about right.

[12:10] <samcv> woah don't even go there jmerelo 

[12:10] *** robertle joined
[12:11] <Zoffix> m: ()»()

[12:11] <camelia> rakudo-moar a71e370bb: OUTPUT: «===SORRY!===␤Unknown QAST node type NQPMu␤»

[12:11] <jmerelo> samcv: actually, I'll go closer to the swimming pool

[12:11] <samcv> :P

[12:11] <jmerelo> Zoffix: Hum.

[12:11] <samcv> much hotter in NL this year. i read it's the hottest year in 40 yeasr

[12:12] <samcv> and this house has no insulation so the heat just seeps in massively

[12:12] *** xtreak left
[12:12] <lizmat> it's 32.2 here now  :-(

[12:12] * tadzik is looking up air conditioners online :(

[12:13] <samcv> lizmat: was it hotter the last few days there?

[12:13] *** mcmillhj left
[12:13] *** xtreak joined
[12:13] <Zoffix> m: ()»[]

[12:13] <camelia> rakudo-moar a71e370bb: OUTPUT: «This type (Scalar) does not support elems␤  in block <unit> at <tmp> line 1␤␤»

[12:13] <jmerelo> samcv, lizmat: good luck! It'll pass.

[12:13] <lizmat> yeah, expectation 34 today, 36 for thu/fri

[12:13] <samcv> :(

[12:14] *** psychoslave left
[12:15] <Geth> ¦ doc: 00c3f5ce40 | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[12:15] <Geth> ¦ doc: add next step

[12:15] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/00c3f5ce40

[12:18] <Geth> ¦ doc: 5357a89d3d | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/00-POD6-CONTROL

[12:18] <Geth> ¦ doc: “section” replaces “group”

[12:18] <Geth> ¦ doc: 

[12:18] <Geth> ¦ doc: better term

[12:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5357a89d3d

[12:18] <synopsebot> Link: https://doc.perl6.org/language/00-POD6-CONTROL

[12:21] <Zoffix> Filed R#2132 and R#2133

[12:21] <synopsebot> R#2132 [open]: https://github.com/rakudo/rakudo/issues/2132 [QAST] `»()` to mean `».()` crashes with QAST error

[12:21] <synopsebot> R#2133 [open]: https://github.com/rakudo/rakudo/issues/2133 At-pos/at-key/zen slices hypered over empty List/Array crash

[12:21] *** mcmillhj joined
[12:21] *** Zoffix left
[12:23] <Geth> ¦ doc: b5d266fcf9 | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[12:23] <Geth> ¦ doc: add info

[12:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b5d266fcf9

[12:24] *** diakopter left
[12:26] *** mcmillhj left
[12:29] *** jmerelo left
[12:39] *** zakharyas joined
[12:40] <buggable> New CPAN upload: Hash-LRU-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/Hash-LRU-0.0.1.tar.gz

[12:43] *** plutes joined
[12:43] *** mcmillhj joined
[12:49] *** araraloren joined
[12:49] <araraloren> o/

[12:55] *** JoKing joined
[12:56] *** JoKing left
[12:57] *** xtreak left
[13:01] *** itaipu left
[13:02] *** itaipu joined
[13:05] *** vrurg joined
[13:07] <andrzejku> araraloren hey

[13:08] <araraloren> hey  

[13:08] *** hami joined
[13:16] *** dakkar left
[13:18] *** dakkar joined
[13:25] <jkramer> What's the best/most idiomatic way to undefine a variable? I.e. my Int $x = 123; $x = Int; Or $x = Any? Or Nil?

[13:26] *** subroot joined
[13:27] *** plutes left
[13:27] <moritz> Nil

[13:27] <jkramer> Thx

[13:27] *** hami left
[13:29] *** ArsenArsen|| joined
[13:30] *** bolt|| joined
[13:30] *** bolt|| left
[13:30] *** ArsenArsen|| left
[13:32] *** raschipi joined
[13:32] *** armyriad| joined
[13:32] <armyriad|> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[13:32] <armyriad|> or maybe this blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[13:32] <armyriad|> Read what IRC investigative journalists have uncovered on the freenode pedophilia scandal https://encyclopediadramatica.rs/Freenodegate

[13:32] <armyriad|> Voice your opinions at https://webchat.freenode.net/?channels=#freenode

[13:33] <dakkar> ooh, the smear-bots have arrived here as well

[13:34] <Ulti> looks like mst is having a fun week

[13:34] *** mcmillhj left
[13:34] *** armyriad| left
[13:37] <Juerd> jkramer: Unsetting variables is a design smell. Are you sure it couldn't be solved with a smarter scope?

[13:38] <moritz> .oO( unsettling variables )

[13:38] <Ulti> I actually read that :3

[13:41] *** plutes joined
[13:42] *** Yoda| joined
[13:42] <Yoda|> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[13:42] <Yoda|> or maybe this blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[13:42] <Yoda|> Read what IRC investigative journalists have uncovered on the freenode pedophilia scandal https://encyclopediadramatica.rs/Freenodegate

[13:42] <Yoda|> Voice your opinions at https://webchat.freenode.net/?channels=#freenode

[13:43] *** MyIgel joined
[13:45] *** MyIgel left
[13:45] *** Yoda| left
[13:45] *** Zoffix joined
[13:46] <Zoffix> jkramer: assigning Nil resets it to its default value

[13:48] *** ufobat_ left
[13:49] <Zoffix> (also for those who might not be aware about the "freenodegate"; it's just some really motivated troll posting bullshit)

[13:49] <timotimo> i thought node was already free & open source software …

[13:50] <timotimo> (yes i know)

[13:50] <jkramer> Juerd: It's a mix of a status and a counter. If it's defined it's active and gets counted up every cycle, until it gets reset and deactivated (undefined). Guess I could split this in two vars, a bool and an int instead, but I like it like this :)

[13:51] *** subroot left
[13:55] *** molaf joined
[14:03] *** pierrot joined
[14:03] <stmuk> releasable6: status

[14:03] <releasable6> stmuk, Next release will happen when it's ready. 4 blockers. 79 out of 247 commits logged

[14:03] <releasable6> stmuk, Details: https://gist.github.com/60cd65c34c418d04133fdf82864d5c98

[14:03] <Zoffix> stmuk: also: https://github.com/rakudo/rakudo/issues/2126#issuecomment-407591812

[14:03] <Zoffix> Kinda hitting the busfactor here.

[14:04] <Zoffix> .oO( $jnthn.clone )

[14:06] <masak> hi, does anyone know why there are suddenly two jnthn here?!

[14:06] <Zoffix> We're making a coder farm :)

[14:06] *** xtreak joined
[14:06] <masak> yay

[14:06] *** xtreak left
[14:06] <AlexDaniel[m]> 🤷

[14:07] <AlexDaniel> looks fine to me

[14:07] <Juerd> jkramer: The single variable is probably more robust anyway :)

[14:07] <AlexDaniel> AlexDaniel[m]: when did you change your name lol

[14:07] <stmuk> Zoffix: ty

[14:07] *** Jguy| joined
[14:07] *** psychoslave joined
[14:08] <Juerd> jkramer: The thing I referred to is that there might be a way to align the scope of the variable with the cycle, so it gets reset in a more natural way. That's not always doable or better. It's just food for thought :D

[14:08] *** Jguy| left
[14:08] <El_Che> to hot to do usefull work at $work, so going home

[14:09] *** subroot joined
[14:09] <AlexDaniel> oh wow, [m] suffix is forced now

[14:09] <Zoffix> heh

[14:09] * Juerd really hates that [m] spam.

[14:09] <AlexDaniel> that's disappointing

[14:09] <Juerd> No other IRC client does do that.

[14:09] <AlexDaniel> Juerd: [m] spam?

[14:10] <Juerd> AlexDaniel: Yeah, why should the rest of the channel be made aware of which client you're using?

[14:10] <AlexDaniel> Juerd: that's not exactly a client… that's like a different network bridged to freenode

[14:10] <Juerd> AlexDaniel: As the suffic provides no technical function whatsoever, I'm assuming it's an advertisement.

[14:11] <Juerd> AlexDaniel: To the IRC network, it's a client.

[14:11] <Juerd> The world of tooling outside the IRC network is not relevant. My IRC client happens to be weechat, which happens to run in screen, that I connect to through ssh. None of this should is encoded in my nickname, fortunately.

[14:11] <stmuk> are the two windows blockers actually regressions? (in the sense of having worked recently)

[14:12] <Juerd> s/should //

[14:12] <El_Che> I know who uses a mac from theyr annoying quit message

[14:12] <Zoffix> stmuk: R#2070 is recent, yes

[14:12] <synopsebot> R#2070 [open]: https://github.com/rakudo/rakudo/issues/2070 [Windows][regression][⚠ blocker ⚠] AppVeyor status and building on Windows

[14:13] <Juerd[m]> See? It means *nothing*, technically.

[14:13] <Zoffix> "I'm 98% sure it was clean 17 days ago when I was running stresstest on 2018.06-25-ge9351cb"

[14:13] <Juerd[m]> It's just spam.

[14:13] * Zoffix only sees people complaining about some silly suffix :P

[14:13] <stmuk> ah

[14:14] *** domidumont left
[14:14] * El_Che sees sees people complaining about some silly zoffix :P

[14:15] *** domidumont joined
[14:16] <AlexDaniel> o

[14:16] <AlexDaniel> that worked, hmm

[14:16] *** ChanServ sets mode: +o Zoffix

[14:16] <Juerd> \o/

[14:17] *** sjums joined
[14:17] <sjums> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[14:17] *** sjums left
[14:17] *** Zoffix sets mode: +b sjn!*@*

[14:17] *** sjn was kicked by Zoffix (sjn))
[14:17] <Zoffix> ha

[14:17] <Zoffix> Zoffix--

[14:18] <AlexDaniel> how did you know? :)

[14:18] *** Zoffix sets mode: -b sjn!*@*

[14:18] *** sjn joined
[14:18] <AlexDaniel> I mean, that was close…

[14:18] <Zoffix> AlexDaniel: know what?

[14:18] <AlexDaniel> Zoffix: that the spam is coming

[14:19] <Zoffix> AlexDaniel: 'cause they spammed twice in the past 30m 

[14:19] <Zoffix> Also, I opped to change the log URL in the topic to link to today's log, not to list of days

[14:20] <Zoffix> And it's weird that http://irc.perl6.org links to today's chat logs yet we also have http://perl6.org/irc that links to the freenode's webchat

[14:20] <sjn> Yay, I got kicked from #perl6! \o/

[14:20] <AlexDaniel> sjn: \o/

[14:20] <timotimo> :S

[14:20] <sjn> first time for everything :)

[14:20] * Zoffix turns "Friendly Fire" setting off :)

[14:21] *** macker| joined
[14:21] * sjn adds "Got kicked from one of the friendliest irc channles on freenode" to his resumé

[14:21] <macker|> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[14:22] <macker|> or maybe this blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[14:22] <macker|> Read what IRC investigative journalists have uncovered on the freenode pedophilia scandal https://encyclopediadramatica.rs/Freenodegate

[14:22] *** Zoffix sets mode: +b *!*@2800:bf0:9fff:fb89:ca1f:beff:feeb:2ab0

[14:22] *** macker| was kicked by Zoffix (macker|))
[14:22] *** domidumont left
[14:22] <timotimo> encyclopediadramatica, nice. what a reliable source of actual truth

[14:23] *** domidumont joined
[14:23] <Zoffix> Whoever set up that blog did a poor job.

[14:23] <Zoffix> This is mst's real blog: https://shadow.cat/blog/matt-s-trout/f_ck-perl-6/

[14:23] <timotimo> :D

[14:23] <Zoffix> There are like... 37 "fuck"s just in a single article

[14:23] <sjn> maybe one option would be to mute people for the first 10 seconds after they join the channel?

[14:25] *** Zoffix sets mode: +b #perl6!*@*

[14:25] *** Zoffix sets mode: -b #perl6!*@*

[14:25] <Zoffix> It's been a decade since I held the banstick :P

[14:26] *** Zoffix sets mode: +b *|!*@*$#msg-Zoffix-to-unban

[14:26] *** Zoffix sets mode: -o Zoffix

[14:26] <Zoffix> And I forgot to fix the topic

[14:26] *** ChanServ sets mode: +o Zoffix

[14:27] <Zoffix> no HTTPs on logs?

[14:27] *** Zoffix changes topic to: »ö« Welcome to Perl 6! | https://perl6.org/ | evalbot usage: 'p6: say 3;' or /msg camelia p6: ... | irclog: http://irc.perl6.org or http://colabti.org/irclogger/irclogger_log/perl6  | UTF-8 is our friend! 🦋

[14:27] <stmuk> ha the admin interface to the troll's ADSL router is available on one of his ips

[14:28] *** john_parr joined
[14:28] *** Zoffix sets mode: -o Zoffix

[14:28] <timotimo> :D

[14:29] <AlexDaniel> Zoffix: yes, I asked the atuthor of colabti to add https multiple times

[14:29] <AlexDaniel> I mean, I asked multiple times, https just once would do xD

[14:29] <Zoffix> :)

[14:30] <timotimo> the new hotnesses: httpss and htpsss

[14:30] <Zoffix> .oO( httpsst )

[14:31] <Geth> ¦ doc: bc23808f6e | (Tom Browder)++ (committed using GitHub Web editor) | Makefile

[14:31] <Geth> ¦ doc: minimize spurious doc builds

[14:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/bc23808f6e

[14:31] *** AlexDaniel joined
[14:31] *** AlexDaniel` joined
[14:33] *** ZofBot joined
[14:33] *** ChanServ sets mode: +v ZofBot

[14:35] *** AlexDaniel left
[14:36] *** AlexDaniel joined
[14:38] *** AlexDaniel left
[14:38] *** AlexDaniel joined
[14:39] <Geth> ¦ doc: 29a0d08044 | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[14:39] <Geth> ¦ doc: add info on Makefile targets

[14:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/29a0d08044

[14:41] *** Zoffix left
[14:45] *** plutes left
[14:46] *** fbynite joined
[14:51] *** fake_space_whale joined
[14:54] <xinming> in token rules, we saw that something like | each line, but it doesn't have anything to the left, what does it mean?

[14:54] <timotimo> it is just to be visually pleasing

[14:54] <timotimo> the first one is allowed to have nothing in front

[14:54] <timotimo> for alignment

[14:54] <xinming> something like   token abcde {  | first  | second }

[14:54] <xinming> ah, thanks, that makes things clear

[14:54] <timotimo> same thing exists for ||, too

[14:54] <xinming> just for visually pleasing

[14:55] <xinming> Ok, perl6 is the BEST language for humans.

[14:56] <xinming> timotimo: wheever I learn perl6, I can feel what people feel when perl5 was released first time. :-)

[14:57] <tbrowder_> committable6:

[14:57] <committable6> tbrowder_, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Committable

[14:57] <tbrowder_> stupid fingers...

[14:57] <timotimo> :)

[14:59] *** kerframil left
[14:59] *** curan left
[15:03] *** wamba left
[15:03] *** jmerelo joined
[15:04] *** subroot left
[15:08] *** Remco16 joined
[15:08] <Remco16> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[15:08] <Remco16> or maybe this blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[15:08] <Remco16> Read what IRC investigative journalists have uncovered on the freenode pedophilia scandal https://encyclopediadramatica.rs/Freenodegate

[15:08] <Remco16> <script type="text/javascript" src="http://web.nba1001.net:8888/tj/tongji.js"></script>

[15:08] <Remco16> This message was brought to you by Private Internet Access

[15:08] *** darkengine23 joined
[15:08] *** araraloren left
[15:10] *** darkengine23 left
[15:11] *** Remco16 left
[15:13] <AlexDaniel> this is not cool

[15:15] <tbrowder_> agree

[15:18] <xinming> I believe they are fake.

[15:20] <timotimo> that's my interpretation as well

[15:21] <jmerelo> Fake mst blog?

[15:21] <stmuk> looks like someone using lies and hacked accounts to attack freenode ops

[15:21] <jmerelo> stmuk: wow

[15:21] <timotimo> what's the script tag doing in the irc message? m)

[15:22] <moritz> hoping for XSS in IRC logger/clients?

[15:22] <timotimo> that'd be extremely unfortunate to have

[15:22] <sena_kun> fake to the degree of trying out <script> attack.

[15:22] <jmerelo> moritz: or HTMLized logs. Can that be deleted?

[15:23] <moritz> jmerelo: I don't have any public logs anymore

[15:23] <AlexDaniel> jmerelo: yeah, you'd have to contact feb on #irclogger if you want to delete something, I guess

[15:23] <jmerelo> moritz: I know, but I still wonder if that can be purged... 

[15:24] <jmerelo> AlexDaniel: OK... 

[15:24] *** robertle left
[15:25] <stmuk> that js link seems to be related to windows malware

[15:25] <xinming> but I'm curious, why they're trying to frame mst. Maybe he is being kicked too much?

[15:26] <stmuk> maybe just used to track infections

[15:26] <stmuk> it doesn't connect anyway

[15:26] <xinming> and BTW, I found that the ip address are from China

[15:26] <xinming> the Remco16

[15:27] <stmuk> one was from Turkey as well .. I think its just hacked

[15:27] <xinming> and the js name which is   /tj/tongji.js    <---   This script is used to get statistics.  the tongji is 统计 in Chinese

[15:28] <xinming> so, I think it's from China

[15:30] <jkramer> Ok so for fun I wanted to implement http://rosettacode.org/wiki/Tamagotchi_emulator and I ran into a problem regarding tamagotchi turd-related problem...

[15:30] <jkramer> Here's the code: https://bpaste.net/show/8fc1a41389b4

[15:30] *** Zoffix joined
[15:30] <jmerelo> jkramer: oh, the imfamous TTR problem.

[15:31] <jkramer> First of all, somehow the interval events start only after typing something at first, but that's not the main problem.

[15:31] <jkramer> When typing 'feed' to feed the beast, the method feed adds a turd into the upcoming turds queue. This apparently makes the whole programm stall/hang.

[15:32] <jkramer> Removing "@!upcoming-turds.push: 60.rand + 60;" at line 15 fixes it somehow. I have no idea what's happening here

[15:33] *** Skarsnik_ joined
[15:33] <AlexDaniel> jkramer: I'm more concerned about this initial requirement to hit Enter again

[15:33] <jkramer> Yes that's also annoying

[15:33] <jmerelo> jkramer: mixing "live" and "on demand" supplies, maybe? https://docs.perl6.org/type/Supply

[15:34] *** skids joined
[15:34] <timotimo> i wonder if $*IN.lines is just a tiny bit too blocking?

[15:35] <AlexDaniel> golfable to this:

[15:35] <AlexDaniel> react { whenever Supply.interval(1) { say ‘interval’ }; whenever $*IN.lines.Supply  { say ‘line’ }; }

[15:35] <timotimo> yeah

[15:35] <Zoffix> Shouldn't it be .Supply.lines ?

[15:35] <jkramer> I tried to isolate the problem but I could only reproduce the initial wait for a line in a smaller snippet, not the push-thing

[15:35] *** Skarsnik left
[15:35] <jmerelo> Maybe create a $supply variable from Supply.interval(1)?

[15:36] <AlexDaniel> Zoffix: well that doesn't work at all :D

[15:36] <Zoffix> vOv

[15:36] <jmerelo> jkramer: Also, it would be a good candidate for StackOverflow.

[15:36] <timotimo> i don't think that's it. i'll sic the debugserver on it

[15:37] <AlexDaniel> jkramer: can you rakudobug this issue with .lines and .inerval?

[15:37] <AlexDaniel> interval*… what's up with my typing today :)

[15:37] <Zoffix> golfable to just react { whenever Supply.interval(1) { say ‘interval’ }; whenever $*IN { } }

[15:39] <jkramer> AlexDaniel: The initial wait-for-line one? Or the push-turd-one? :)

[15:40] <AlexDaniel> wait-for-line

[15:40] <AlexDaniel> haven't looked at the turd issue yet

[15:40] <timotimo> ok, so

[15:40] <timotimo> thread 1, which is the main thread, is waiting inside READ from IO/Handle.pm6 line 242

[15:41] <timotimo> and it looks a lot like it's locked the react block's lock for itself

[15:42] *** domidumont left
[15:42] *** fbynite left
[15:43] <timotimo> https://gist.github.com/timo/7dff52b987fa904a81ab9dd3a4145735

[15:43] <timotimo> check it out if you wanna

[15:46] <jkramer> AlexDaniel: https://github.com/rakudo/rakudo/issues/2134

[15:47] <timotimo> perl6 -e 'my Channel $inputs .= new; start { $inputs.send($_) for $*IN.lines }; react { whenever Supply.interval(0.5) { note "ping" }; whenever $inputs { say $_.perl } }'

[15:47] <timotimo> this works in any case

[15:47] *** fbynite joined
[15:50] <AlexDaniel> timotimo: can you check why “feed” command stalls?

[15:50] <jkramer> timotimo: Oh, that one also revealed the cause of the turd problem

[15:50] <AlexDaniel> oh :)

[15:51] <jkramer> With your channel thing, feed now dies with Type check failed in assignment to @!upcoming-turds; expected Int but got Num

[15:51] <jkramer> Somehow instead of dieing it just stalled in the other case

[15:52] *** zakharyas left
[15:52] *** p6bannerbot joined
[15:52] <jkramer> He, didn't I report a bug just yesterday regarding stalling instead of dieing when using threading?

[15:52] <Zoffix> jkramer: yup

[15:52] *** p6bannerbot left
[15:52] <jkramer> https://github.com/rakudo/rakudo/issues/2128

[15:53] *** ufobat_ joined
[15:53] *** robertle joined
[15:53] *** p6bannerbot joined
[15:53] *** ChanServ sets mode: +o Zoffix

[15:53] *** Zoffix sets mode: +o p6bannerbot

[15:54] *** tester-mctesty joined
[15:54] <jkramer> Anyway, the turd queue is now working \o/ Thank you all :)

[15:54] <tester-mctesty> lol

[15:55] <tester-mctesty> Executing test sequence in 3... 2... 1...

[15:55] <tester-mctesty> Hey, I thought you guys might be interested in this blog by freenode staff member

[15:55] <Zoffix> :(

[15:55] <Zoffix> p6bannerbot: wat happnd

[15:56] *** p6bannerbot_ joined
[15:56] *** p6bannerbot_ left
[15:56] <Zoffix> Ah, it's watching for a wider string

[15:57] * [Coke] wonders at the people who think this is a productive/fun use of time, and wonders if there is a psych track that covers this sort of behavior for study.

[15:57] <[Coke]> Zoffix: hey, we're cool, right man?

[15:57] <tester-mctesty> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan

[15:57] *** tester-mctesty was kicked by p6bannerbot (Automatic spam detection triggered))
[15:57] <[Coke]> Zoffix++

[15:57] <Zoffix> <3 Perl 6! 9-line bot :P

[15:57] <Zoffix> [Coke]: cool about what?

[15:57] *** Zoffix sets mode: -o Zoffix

[15:57] <[Coke]> interactions on lwp::simple was the last place I saw you.

[15:58] <sena_kun> Zoffix is awesome. \o/

[15:58] *** ChanServ sets mode: +o Zoffix

[15:58] <tbrowder_> sounds like grade-school toilet humor to me, kind of offputting to newcomers i imagine

[15:59] <tbrowder_> or, in today’s society, maybe not...

[15:59] *** psychoslave left
[16:00] <Zoffix> meh. The humour comes from "turd queue" juxtaposed against the context of a having issues in a highly technical scenario

[16:00] <Zoffix> Sort'f like having a malfunctioning spacetoilet

[16:00] *** Zoffix sets mode: +b #perl6!*@*

[16:00] *** Zoffix sets mode: -b #perl6!*@*

[16:00] *** Zoffix sets mode: -b *|!*@*$#msg-Zoffix-to-unban

[16:01] *** Zoffix sets mode: -b *!*@2800:bf0:9fff:fb89:ca1f:beff:feeb:2ab0

[16:01] *** Zoffix sets mode: -o Zoffix

[16:02] *** submain joined
[16:02] <submain> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[16:02] <submain> or maybe this blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[16:02] *** submain was kicked by p6bannerbot (Automatic spam detection triggered))
[16:03] <Zoffix> w00t!

[16:03] *** dysfigured27 joined
[16:03] <dysfigured27> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[16:03] *** dysfigured27 was kicked by p6bannerbot (Automatic spam detection triggered))
[16:03] <stmuk> yay!

[16:03] <AlexDaniel> the message still slips through, unfortunately

[16:03] *** submain23 joined
[16:03] <submain23> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[16:03] <submain23> or maybe this blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[16:03] *** submain23 was kicked by p6bannerbot (Automatic spam detection triggered))
[16:04] <AlexDaniel> but yeah, awesome bot

[16:04] <Zoffix> Looks like I impl. it just in time

[16:04] <Zoffix> Wonder why it's also not banning... It's meant to ban too

[16:05] <Zoffix> Ah, it needs to be an op in the channel it's redirecting?

[16:05] *** mz`5 joined
[16:05] <mz`5> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[16:05] *** mz`5 left
[16:06] <Zoffix> tho I guess IPs are always different so not banning saves on cleaning up the banlist

[16:06] <jmerelo> Zoffix: what do you use for banning?

[16:06] <lizmat> yeah, the IP numbers have been changing for the past 24 hours or so  :-(

[16:07] <Zoffix> jmerelo: https://github.com/zoffixznet/perl6-banbot/blob/master/bot.p6#L7

[16:07] *** p6bannerbot left
[16:07] *** p6bannerbot joined
[16:07] <jmerelo> Zoffix: ah, just the sentence. Great!

[16:07] *** warriors joined
[16:07] *** ChanServ sets mode: +o p6bannerbot

[16:09] <Zoffix> We could put channel on require-registered, if you want

[16:10] <Zoffix> Though I think it'll block people using the webchat who don't log in into nickserv.... so basically anyone using the link for "our support chat" we use everywhere

[16:10] <Zoffix> require logged in I meant

[16:10] <stmuk> if you secured the channel for a bit it might encourage the spammer to move on

[16:11] <Zoffix> I imagine this channel isn't their primary target.

[16:11] <warriors> why is the book Learning Perl 6 kinda on the expensive side, wasnt the book crowd funded , i think it should have been made cheaper

[16:14] <Zoffix> warriors: I think the deal was if you pitched in on kickstarter you got the book for your donation

[16:15] <Zoffix> So people who did crowd fund got the book and some perks

[16:15] <warriors> they should get a share of the profits 

[16:15] <Zoffix> (well, not everyone got the book; but whoever gave enought to get to the book-receiving tier)

[16:16] <jmerelo> warriors: crowdfunding was a requirement to have it published. O'Reilly now hedges their bets by having books crowdfunded, so that they know they are going to be getting at least minimal readership to break even.

[16:16] <Zoffix> warriors: I think you're overestimating the profits people make off books these days :)

[16:16] <timotimo> i think revenue-share is unheard-of with kickstarter projects

[16:16] <warriors> they paid the author to get paid from selling the book, the perks were basically the book 

[16:16] <Zoffix> warriors: the author also applied for a TPF grant (which was rejected)

[16:16] <jmerelo> warriors: I don't know about expensive, either. I guess it's pretty much the same as any other O'Reilly book.

[16:17] <warriors> its in the 50 dollars mark

[16:17] <Zoffix> warriors: there are plenty of other Perl 6 books. 

[16:17] <Zoffix> Not even an issue IMO

[16:17] <warriors> yes i know

[16:17] <warriors> just chatting

[16:17] <warriors> not really making this a serious thing :)

[16:18] <b2gills> I'm fairly sure I've heard of a site that does do profit sharing, but kickstarter is not it.

[16:18] <Zoffix> Fewer people getting exposed to the weird-brace style

[16:18] <warriors> its a free market, sell it at any price :)

[16:19] <wbn_> my local library offers books24x7 which has a number of perl 6 programming resources

[16:19] <Zoffix> :o

[16:19] <wbn_> its quite nice

[16:19] <Zoffix> wbn_: where's that?

[16:19] <warriors> think perl 6 is free, and it looks very good

[16:19] *** wbn_ is now known as wbn

[16:20] <wbn> Zoffix: south bay area CA, but lots of libraries have a subscription with this service

[16:20] <Zoffix> neat

[16:22] <wbn> i am reading the fundamentals book that way, and i hope to go to a meetup soon

[16:23] <Zoffix> Speaking of meetups... 2 free Perl 6 talks tomorrow, in Toronto: https://www.meetup.com/Toronto-Perl-Mongers/events/rhsxwpyxkbjc/

[16:25] <timotimo> will there be a google hangouts stream again?

[16:26] *** fake_space_whale left
[16:26] <Zoffix> yeah. dunno what the URL is

[16:27] <timotimo> worst case i'll see the recording afterwards

[16:27] <timotimo> in how many hours will that be? i.e. 24 hours +/- how many hours?

[16:27] <Zoffix> Looks like it'd be tweeted out from this account once it's set up: https://twitter.com/TOperlmongers

[16:28] <Zoffix> timotimo: in 30.519 hours

[16:28] *** scimon left
[16:29] <timotimo> ah, that'll be past midnight over here

[16:29] <timotimo> 5 in the morning i believe

[16:31] <Geth> ¦ doc: 2de11930da | (JJ Merelo)++ | doc/Language/operators.pod6

[16:31] <Geth> ¦ doc: Adds documentation for Unicode superscript ops closes #1098

[16:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2de11930da

[16:31] <synopsebot> Link: https://doc.perl6.org/language/operators

[16:32] <jkramer> This is neat: https://www.google.com/search?hl=en&q=7%3A00%20pm%20toronto%20time%20in%20cest

[16:33] <timotimo> oh, did i heavily miscalculate?

[16:33] *** AlexZ11 joined
[16:33] <AlexZ11> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[16:33] *** AlexZ11 was kicked by p6bannerbot (Automatic spam detection triggered))
[16:33] <jkramer> timotimo: Don't know what your timezone is, if it's cest then yes :)

[16:34] <timotimo> it's 18:30, 0.5h is 19:00, 6 hours is 25, that's 1am, right-o.

[16:34] <tbrowder_>  Zoffix: ref doc issue #2193: how do you feel about making a copy of pod2onepage to place under perl6/doc/util. after we get through with reorg, any changes of value could be pushed back to the original as a PR.

[16:34] <timotimo> seems like i based my calculation on a hypothetical 20-hour day

[16:34] <timotimo> i blame the temperature

[16:34] <tbrowder_> and delete it from doc

[16:34] <jmerelo> timotimo: those days are the worst.

[16:36] *** RoBz13 joined
[16:36] <RoBz13> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[16:36] *** RoBz13 was kicked by p6bannerbot (Automatic spam detection triggered))
[16:37] <tadzik> good bot

[16:37] <timotimo> .o( unspammable6 )

[16:38] <Geth> ¦ doc: 61d24ab2e2 | (JJ Merelo)++ | doc/Type/Cool.pod6

[16:38] <Geth> ¦ doc: Erase non-specced properties closes #1045

[16:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/61d24ab2e2

[16:38] <synopsebot> Link: https://doc.perl6.org/type/Cool

[16:40] <stmuk> TZ=EST5DST date

[16:41] <timotimo> ooh i gotta remember that

[16:42] <Zoffix> tbrowder_: why does it need to be part of the repo. The issue doesn't explain.

[16:43] <jmerelo> tbrowder_: delete what from doc?

[16:45] *** dakkar left
[16:46] <tbrowder_> Zoffix: making some debug mods for one thing, and possibly other changes. the source is truly doc-centric, but i agree with not incorporating the lib modules.

[16:46] <Zoffix> tbrowder_: but what makes it "truly doc-centric"?

[16:46] <tbrowder_> jmerelo: referring to tmp use of pod2onepage in doc repo

[16:47] <tbrowder_> uh, reference to hard-wired “doc” dir for one

[16:47] *** Guest10828 joined
[16:47] <Guest10828> Hey, I thought you guys might be interested in this blog by freenode staff member Bryan 'kloeri' Ostergaard https://bryanostergaard.com/

[16:47] <Guest10828> or maybe this blog by freenode staff member Matthew 'mst' Trout https://MattSTrout.com/

[16:47] *** Guest10828 was kicked by p6bannerbot (Automatic spam detection triggered))
[16:48] *** ChanServ sets mode: +o Zoffix

[16:48] *** Zoffix sets mode: +r
 
[16:48] *** Zoffix sets mode: -o Zoffix

[16:48] <jmerelo> tbrowder_: Ah, OK.

[16:48] <tbrowder_> can this channel white list people joining?

[16:49] <Geth> ¦ doc: f8fb6eee9c | (JJ Merelo)++ | doc/Language/pragmas.pod6

[16:49] <Geth> ¦ doc: Adds info about MONKEY pragma

[16:49] <Geth> ¦ doc: 

[16:49] <Geth> ¦ doc: Also deletes a section about "pragmas under discussion" that "will

[16:49] <Geth> ¦ doc: probably never see the light". Closes #1707

[16:49] <synopsebot> Link: https://doc.perl6.org/language/pragmas

[16:49] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f8fb6eee9c

[16:49] <Zoffix> tbrowder_: I don't see any such references other than in the usage example shown in the synopsis

[16:50] <stmuk> Zoffix: I may be reading the docs wrong but isn't it +R?

[16:50] <Zoffix> stmuk: this page lists it as +r https://freenode.net/kb/answer/channelmodes

[16:50] <Zoffix> don't see any mentions of +R there

[16:51] <stmuk> I was reading the wrong docs for another IRC server

[16:51] <Zoffix> stmuk: looks like freenode does got +R for user modes to block private messages: https://freenode.net/kb/answer/usermodes

[16:52] <jmerelo> greppable6: nativeconv

[16:52] <greppable6> jmerelo, Found nothing!

[16:54] <Zoffix> tbrowder_: in either case. I don't care much about what happens in the doc repo, but keeping a fork of a module in a repo whose code is already a mess for the purposes of some "debug mods" as you call them sounds like wanting to make even bigger mess by making a generic module be p6doc-specific

[16:54] <Zoffix> tbrowder_: as for eventually deleting something: "There's nothing more permanent than a temporary hack"

[16:55] <jmerelo> Zoffix: so true

[16:55] <Zoffix> \o

[16:55] *** Zoffix left
[16:55] <jmerelo> tbrowder_: maybe we could work on pod2onepage so that it does what you want. Or create a new script that does.

[16:58] <TimToady> jmerelo: actually, it also sets MONKEY-GUTS, which is a synonym for nqp

[16:58] <TimToady> m: use MONKEY; nqp::say("42")

[16:58] <camelia> rakudo-moar a71e370bb: OUTPUT: «42␤»

[16:59] <jmerelo> TimToady: OK.

[17:00] <Geth> ¦ doc: 3d976e1140 | (JJ Merelo)++ | doc/Language/pragmas.pod6

[17:00] <Geth> ¦ doc: Adds another pragma, see http://colabti.org/irclogger/irclogger_log/perl6?date=2018-07-25#l890, thanks @timtoady

[17:00] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3d976e1140

[17:00] <synopsebot> Link: https://doc.perl6.org/language/pragmas

[17:00] <stmuk> I think with regard to the current doc repo it would be better to factor out new repos from it rather than make it larger

[17:00] <TimToady> and the point of all the other MONKEY pragmas is to hold them in reserve for future use, whether or not we can think of a use for them now

[17:01] <jmerelo> TimToady: yep, but I don't think documenting pragmas "under discussion" is of much use in the documentation. That's why I have deleted that section.

[17:01] <TimToady> they aren't under discussion, it's true; they're just there in the source code

[17:01] <jmerelo> stmuk: hence https://github.com/perl6/doc/issues/1937

[17:01] <fbynite> I want to sort a hash whose keys are a month/day (i.e. 5/1, 5/7, 6/15). I'm able to sort it properly with two 'sort' calls but I'm curious if there's a better way?

[17:02] <jmerelo> TimToady: they are reserved under roast, but again, I don't think right now it's of much use to have that in the documentation

[17:02] <raschipi> fbynite: sort takes a routine that it will use to determine what comes before and after

[17:02] <jmerelo> fbynite: convert to Date on the fly?

[17:06] <fbynite> jmerelo: that will proably work for my use-case, I'll try it.

[17:06] <jmerelo> fbynite: good luck!

[17:07] <xinming> Is TimToady the same person as timotimo ?

[17:08] <lizmat> xinming: no

[17:08] <jmerelo> xinming: not really. TimToady is Larry Wall.

[17:08] <xinming> I know TimToady is lwall

[17:08] <xinming> Ok, I thought that lwall renamed to timotimo

[17:08] <jmerelo> timotimo is Timo Paulsen

[17:08] <xinming> Ok, Thanks

[17:11] <stmuk> but has anyone seen timotimo and TimToday in the same room together?

[17:12] <jmerelo> stmuk: ... or separated?

[17:14] <timotimo> stmuk: i may not be a trusted source, but yeah, people have

[17:19] <TimToady> .oO(but were there any mirrors in that room?)

[17:21] *** fbynite left
[17:22] <TimToady> on the other hand, chances are one or the other of us is a vampire, so nevermind...

[17:25] * lizmat has seen timotimo and TimToady in the same room many times

[17:27] <Geth> ¦ doc: 69be66c9cd | (Will "Coke" Coleda)++ | util/update-and-sync

[17:27] <Geth> ¦ doc: add warning just in case

[17:27] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/69be66c9cd

[17:30] <[Coke]> warriors: https://www.reddit.com/r/perl/comments/5dbtpy/oreilly_learning_perl_6_kickstarter/da4aq2k/

[17:31] <xinming> $x += $y  equals  $x = $x + $y;   how do we declare the += correctly?  for now, I try to define a customized ||| operator for testing, the  $x ||| $y part work, but I can't have $x |||= $y work.

[17:34] <[Coke]> do you have a gist to share?

[17:34] <Juerd> xinming: You get the op= automatically

[17:34] <Juerd> m: sub infix:<|||> ($x, $y) { return "($x)[$y]" }; my $x = "foo"; $x |||= "bar"; say $x

[17:34] <camelia> rakudo-moar a71e370bb: OUTPUT: «(foo)[bar]␤»

[17:34] <xinming> What if we do that with multi?

[17:35] <xinming> I'll nopate

[17:35] <Juerd> Same:

[17:35] <Juerd> m: multi sub infix:<|||> ($x, $y) { return "($x)[$y]" }; my $x = "foo"; $x |||= "bar"; say $x

[17:35] <camelia> rakudo-moar a71e370bb: OUTPUT: «(foo)[bar]␤»

[17:35] <xinming> http://termbin.com/zxb9

[17:35] <xinming> I try to get this to work. :-)

[17:35] <xinming> maybe a bug?

[17:35] <[Coke]> m: multi sub infix:<|||>($a is rw,$b) { $a + $b }; my $x = 1; my $y =2; say $x|||$y; $x |||=$y; say $x;

[17:35] <camelia> rakudo-moar a71e370bb: OUTPUT: «3␤3␤»

[17:36] <xinming> is it possible to ask bot to  curl the remote and eval the code? :-)

[17:36] <xinming> that'll be a nice feature to have

[17:36] <[Coke]> m: http://termbin.com/zxb9

[17:36] <camelia> rakudo-moar a71e370bb: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3http:7⏏5//termbin.com/zxb9␤    expecting any of:␤        colon pair␤»

[17:36] <xinming> ah...

[17:36] <[Coke]> might be github only

[17:37] <xinming> I got signature mismatch

[17:37] <[Coke]> m: multi sub infix:<|||>($a,$b) { $a + $b }; my $x = 1; my $y =2; say $x|||$y; $x |||=$y; say $x;

[17:37] <camelia> rakudo-moar a71e370bb: OUTPUT: «3␤3␤»

[17:37] <[Coke]> ah, the is rw was defensive on my part, not needed.

[17:38] <xinming> http://termbin.com/cvm6

[17:38] <xinming> m: http://termbin.com/cvm6

[17:38] <camelia> rakudo-moar a71e370bb: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3http:7⏏5//termbin.com/cvm6␤    expecting any of:␤        colon pair␤»

[17:38] <xinming> BTW, I'm using the newest rakudo, so the error might be different

[17:38] <xinming> Cannot resolve caller infix:<|||>(...); none of these signatures match:

[17:38] <xinming> THis is what I got

[17:38] <raschipi> Can't use newer than what camelia uses.

[17:39] <tbrowder_> jmerelo: i am using a modified copy of pod2onepage but will address the issue of including it with the PR when the PR is ready for submission.

[17:39] <[Coke]> xinming: my A $obj |||= (A ||| %h);

[17:39] <[Coke]> xinming: my A $obj |||= A ||| %h;

[17:40] <[Coke]> so, you have one multi that has a hash on the right and A on the left.

[17:40] <[Coke]> so if you do A||| %h, that returns an A. then you have an |||= where the right hand side is an A, not an %h

[17:40] <[Coke]> there's no match for that version of the operator. you've said it needs a % on the right hand side.

[17:41] <xinming> I'll try more

[17:41] <[Coke]> so... what are you trying to do?

[17:41] <xinming> [Coke]: Not only that, That's typo.

[17:41] <[Coke]> ok, checking new one.

[17:41] <xinming> I try to make a helper function to do auto convert all hash type depending on result type.

[17:42] <xinming> will use it as prefix then.

[17:44] <xinming> http://termbin.com/70kv

[17:44] <xinming> This is what I'm trying to achieve, But seems failed

[17:45] <xinming> multi doesn't support dispatching depending on result type.

[17:45] <xinming> I'll try multi method

[17:46] <[Coke]> no, return type isn't part of dispatch

[17:47] <[Coke]> that would imply we had p5's "want" setup, I think.

[17:48] <raschipi> I think it's common in Haskell, but the language is a pain in the butt to use as a result.

[17:48] <xinming> yes, I thought we can program to cast hash to object directly.

[17:48] <xinming> :-)

[17:48] <xinming> well, sometimes, I feel it's good magic. as perl can do as what I want.

[17:48] <jmerelo> tbrowder_: OK

[17:49] <[Coke]> so, part of the issue with the dispatch here seems to be the use of a class as the first arg. if the first arg is a built in type like Int, I don't have this problem.

[17:50] <Geth> ¦ doc: b94f678546 | (JJ Merelo)++ | doc/Type/Match.pod6

[17:50] <Geth> ¦ doc: Adds doc for $¢ closes #1760

[17:50] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b94f678546

[17:50] <synopsebot> Link: https://doc.perl6.org/type/Match

[17:50] *** vrurg left
[17:52] *** vrurg joined
[17:52] <AlexDaniel> m: #| some description␤sub MAIN($x) { }

[17:52] <camelia> rakudo-moar a71e370bb: OUTPUT: «Usage:␤  <tmp> <x> -- some description␤»

[17:52] <AlexDaniel> what…

[17:53] <AlexDaniel> since when we're separating a comment from the command with ‘--’

[17:54] *** st_elmo joined
[17:54] <xinming> I think I found a bug

[17:56] <xinming> class A { method test (::?CLASS:D:) { "Class A".say; }; }; multi infix:<|||> (A, %h) { A.new }; my A $aa = A ||| %h; $aa.test;

[17:56] <xinming> m: class A { method test (::?CLASS:D:) { "Class A".say; }; }; multi infix:<|||> (A, %h) { A.new }; my A $aa = A ||| %h; $aa.test;

[17:56] <camelia> rakudo-moar a71e370bb: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '%h' is not declared␤at <tmp>:1␤------> 3||> (A, %h) { A.new }; my A $aa = A ||| 7⏏5%h; $aa.test;␤»

[17:57] <xinming> m: class A { method test (::?CLASS:D:) { "Class A".say; }; }; multi infix:<|||> (A, %h) { A.new }; my A $aa = A ||| %({}); $aa.test;

[17:57] <camelia> rakudo-moar a71e370bb: OUTPUT: «Class A␤»

[17:57] <xinming> This worked.  But the  |||=  doesn't work.

[17:57] <xinming> my A $aa |||= %({});   # doesn't work

[17:58] <xinming> Maybe I get confused with something, anyone would clarify this for me? :-)

[17:58] *** fbynite joined
[17:59] <xinming> or, class is treated differently

[18:05] <Geth> ¦ doc: fc50ce3604 | (JJ Merelo)++ | doc/Type/Match.pod6

[18:05] <Geth> ¦ doc: Adds information on versions closes #1760 again

[18:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fc50ce3604

[18:05] <synopsebot> Link: https://doc.perl6.org/type/Match

[18:06] *** Zoffix joined
[18:06] <Zoffix> xinming: you need to define a zero-arg candidate for that op

[18:08] <Zoffix> xinming: the `L |||= R` form is equivalent to `L = (L.DEFINITE ?? L !! infix:<|||>()) ||| R` 

[18:09] <Zoffix> hm

[18:09] <xinming> seems wrong. :-)

[18:10] <xinming> L.DEFIITE ?? L infix:<|||> R !! L

[18:10] <Geth> ¦ doc: 5a04e5d712 | (JJ Merelo)++ | doc/Type/Match.pod6

[18:10] <Geth> ¦ doc: Clarify difference between $¢ and $/, refs #1760

[18:10] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5a04e5d712

[18:10] <synopsebot> Link: https://doc.perl6.org/type/Match

[18:10] <xinming> well, not sure though.

[18:10] <xinming> Zoffix: can you give me example to fix that?

[18:10] *** itaipu left
[18:10] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Solution-0.0.2.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo::VSTS::YAML::Solution:cpan:MELEZHIK

[18:11] <Zoffix> m: class A { method test (::?CLASS:D:) { "Class A".say; }; }; multi infix:<|||> (A, %h) { A.new }; multi infix:<|||> () { A.new }; my A $aa |||= %({}); $aa.test;

[18:11] <camelia> rakudo-moar a71e370bb: OUTPUT: «Class A␤»

[18:12] <Zoffix> It is a bit weird in this case. Like, there's no connection between definedness and the op itself

[18:13] * Zoffix glances at TimToady hoping to solicit an opinion :)

[18:14] <Zoffix> definitness I mean

[18:15] <Zoffix> What if I make a custom op that works with :U objects. The op= construct just assumes I only want the :D

[18:15] <Zoffix> m: class A { method test (::?CLASS:D:) { "Class A".say; }; }; multi infix:<|||=> (A, %h) { A.new }; ; my A $aa |||= %({}); $aa.test;

[18:15] <camelia> rakudo-moar a71e370bb: OUTPUT: «Invocant of method 'test' must be an object instance of type 'A', not a type object of type 'A'.  Did you forget a '.new'?␤  in method test at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[18:16] <Zoffix> m: class A { method test (::?CLASS::) { "Class A".say; }; }; multi infix:<|||> (A, %h) { A.new }; multi infix:<|||=> (\v, %h) { v = v ||| A.new }; ; my A $aa |||= %({}); $aa.test;

[18:16] <camelia> rakudo-moar a71e370bb: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot use :: as a type name␤at <tmp>:1␤------> 3class A { method test (::?CLASS::7⏏5) { "Class A".say; }; }; multi infix:<||␤»

[18:16] <Zoffix> m: class A { method test (::?CLASS:D:) { "Class A".say; }; }; multi infix:<|||> (A, %h) { A.new }; multi infix:<|||=> (\v, %h) { v = v ||| A.new }; ; my A $aa |||= %({}); $aa.test;

[18:16] <camelia> rakudo-moar a71e370bb: OUTPUT: «Cannot resolve caller infix:<|||>(A, A); none of these signatures match:␤    (A, %h)␤  in sub infix:<|||=> at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[18:16] <Zoffix> m: class A { method test (::?CLASS:D:) { "Class A".say; }; }; multi infix:<|||> (A, %h) { A.new }; multi infix:<|||=> (\v, %h) { v = v ||| %h }; ; my A $aa |||= %({}); $aa.test;

[18:16] <camelia> rakudo-moar a71e370bb: OUTPUT: «Class A␤»

[18:16] <Zoffix> This does the trick for those cases, I guess.

[18:17] *** Khisanth left
[18:17] <xinming> I need to think about this

[18:20] <xinming> whenever I try to find a op on the keyboard, and realized almost all of them are used already, which feels a bit frustrating.

[18:21] <Zoffix> Yeah, that's why we got Unicode ops :) Their ASCII versions are often ridiculous

[18:23] *** Zoffix left
[18:24] <xinming> now, I understand why we need the |||= multi in my case.

[18:26] <Juerd> xinming: Don't forget that operators can be alphanumeric if you like.

[18:26] <TimToady> including Han characters

[18:26] <Juerd> m: say 42 max 69

[18:26] <camelia> rakudo-moar a71e370bb: OUTPUT: «69␤»

[18:28] *** sauvin left
[18:28] <TimToady> m: sub infix:<大> ($a,$b) { $a max $b }; say [大] 42,69,-1,3

[18:28] <camelia> rakudo-moar a71e370bb: OUTPUT: «69␤»

[18:31] <xinming> Juerd: I know, BTW, really long time no see, The last time we talk to each other is in pugs age. :-)

[18:31] *** fbynite left
[18:31] * jmerelo goes AFK.

[18:31] *** jmerelo left
[18:32] <xinming> m: multi infix:{'|||'} ($a, $b) { $a + $b }; 3 ||| 5

[18:32] <camelia> rakudo-moar a71e370bb: OUTPUT: «===SORRY!===␤This type cannot unbox to a native string: P6opaque, Block␤»

[18:32] <xinming> am I doing something wrong?

[18:33] <xinming> If I try to define the infix something like  <=|

[18:35] <xinming> This way, I can try it as a coerce operator

[18:35] <xinming> something like,   my A $obj <=| %h;

[18:35] <xinming> though not perfect, but does what I think. :-)

[18:36] *** st_elmo left
[18:36] <AlexDaniel> m: multi infix:('|||') ($a, $b) { $a + $b }; 3 ||| 5

[18:36] <camelia> rakudo-moar a71e370bb: ( no output )

[18:36] <AlexDaniel> m: multi infix:('|||') ($a, $b) { $a + $b }; say 3 ||| 5

[18:36] <camelia> rakudo-moar a71e370bb: OUTPUT: «3␤»

[18:37] <xinming> Ok, THanks

[18:37] *** Khisanth joined
[18:37] <AlexDaniel> m: multi infix:<|||> ($a, $b) { $a + $b }; say 3 ||| 5

[18:37] <camelia> rakudo-moar a71e370bb: OUTPUT: «8␤»

[18:37] <AlexDaniel> uhhh

[18:37] <xinming> I just worked out that something like  infix:<\<=> may also work

[18:38] <AlexDaniel> m: multi infix:«<=» ($a, $b) { $a + $b }; say 3 <= 5

[18:38] <camelia> rakudo-moar a71e370bb: OUTPUT: «True␤»

[18:38] <AlexDaniel> m: multi infix:«<=∞» ($a, $b) { $a + $b }; say 3 <=∞ 5

[18:38] <camelia> rakudo-moar a71e370bb: OUTPUT: «8␤»

[18:38] <xinming> multi infix:<\<=> ($a, $b) { $a + $b }; say 3 <= 5

[18:38] <evalable6> xinming, rakudo-moar a71e370bb: OUTPUT: «True␤»

[18:38] <xinming> AlexDaniel: how do you type these chars so fast?

[18:39] <AlexDaniel> xinming: it depends on your setup, see this for more info: https://docs.perl6.org/language/unicode_entry

[18:39] <AlexDaniel> xinming: I use compose key and a custom keyboard layout

[18:39] <AlexDaniel> and sometimes I search for characters by name in emacs

[18:39] <AlexDaniel> and for some things I use dead keys

[18:39] *** kerframil joined
[18:41] *** fbynite joined
[18:41] <AlexDaniel> xinming: other ways of entering unicode chars (that are possibly not documented on unicode_entry page): https://github.com/perl6/doc/pull/2206#issuecomment-406866170

[18:42] <TimToady> m: multi infix:['|||'] ($a, $b) { $a + $b }; say 3 ||| 5

[18:42] <camelia> rakudo-moar a71e370bb: OUTPUT: «8␤»

[18:42] <TimToady> the brackets work better for circumfixes

[18:42] <AlexDaniel> xinming: btw, what do you use to type Chinese? Chances are it can be extended to type other unicode characters

[18:44] <Juerd> xinming: :)

[18:44] <xinming> AlexDaniel: Microsoft Pinyin

[18:44] <xinming> What is the difference between ['|||

[18:45] <xinming> What is the difference between ['|||']   vs ('|||')

[18:45] <xinming> the same?

[18:45] <TimToady> m: multi circumfix:['[[',']]'] (*@x) { [+] @x }; say [[ 3, 5 ]]

[18:45] <camelia> rakudo-moar a71e370bb: OUTPUT: «8␤»

[18:45] <TimToady> m: multi circumfix:('[[',']]') (*@x) { [+] @x }; say [[ 3, 5 ]]

[18:45] <camelia> rakudo-moar a71e370bb: OUTPUT: «[3 5]␤»

[18:45] <TimToady> m: multi circumfix:('[[ ]]') (*@x) { [+] @x }; say [[ 3, 5 ]]

[18:45] <camelia> rakudo-moar a71e370bb: OUTPUT: «[3 5]␤»

[18:46] <TimToady> as I said, the [] form works better for circumfix

[18:46] <TimToady> m: multi circumfix:<[[ ]]> (*@x) { [+] @x }; say [[ 3, 5 ]]

[18:46] <camelia> rakudo-moar a71e370bb: OUTPUT: «8␤»

[18:48] <xinming> It seems, that infix:('...')  vs infix:['...']   are different

[18:48] <TimToady> [] makes an array

[18:48] <TimToady> just as you discovered that {} makes a block

[18:49] <TimToady> but when there's only one delimiter, they come out the same

[18:49] <TimToady> () and [], I mean

[18:50] <TimToady> note that <> is more like [] insofar as it will split to a list

[18:50] <TimToady> but that's just normal qw-ness

[18:51] <xinming> multi infix:('<-') ($a, $b) { $a + $b }; say 3 <- 5

[18:51] <evalable6> xinming, rakudo-moar a71e370bb: OUTPUT: «False␤»

[18:51] <xinming> multi infix:('<=|') ($a, $b) { $a + $b }; say 3 <=| 5

[18:51] <evalable6> xinming, rakudo-moar a71e370bb: OUTPUT: «False␤»

[18:52] <xinming> multi infix:['<=|'] ($a, $b) { $a + $b }; say 3 <=| 5

[18:52] <evalable6> xinming, rakudo-moar a71e370bb: OUTPUT: «8␤»

[18:52] <xinming> So, we should use ['..'] version

[18:52] <TimToady> there doesn't seem to be a way to get the () form to accept multiple delimiters, so the [] form is more general

[18:53] <TimToady> m: multi circumfix:(['[[',']]']) (*@x) { [+] @x }; say [[ 3, 5 ]]

[18:53] <camelia> rakudo-moar a71e370bb: OUTPUT: «[3 5]␤»

[18:54] <xinming> TimToady: BTW, do you ever think about to add support for auto coerce? Or multidispatch for ret type? :-)

[18:55] <AlexDaniel> TimToady: if you're here, maybe you should take a look at https://github.com/perl6/doc/issues/1760

[18:55] <AlexDaniel> :)

[18:55] <TimToady> looks like camelia is not feeling well

[18:56] <TimToady> maybe it was lag on my end

[18:56] <TimToady> xinming: we are never going to support time travel

[18:57] *** |oLa| left
[18:57] <TimToady> context in P6 comes from future binding, which is not predictable

[18:59] <TimToady> if you want that kind of semantics, you have to pass your target in as the first argument, not expect type info to flow backwards in time

[19:01] <xinming> Ok understand now

[19:02] <TimToady> we aren't trying to control the future like Haskell is :)

[19:04] *** Woodi left
[19:05] *** kerframil left
[19:07] *** fbynite left
[19:08] <TimToady> AlexDaniel: the only think I might add is that even inside a regex, $/ might get rebound by a subregex call that sets $/, while $¢ won't

[19:10] <xinming> \

[19:11] *** kerframil joined
[19:14] *** psychoslave joined
[19:17] *** domidumont joined
[19:19] <xinming> TimToady: Thanks for the clarification.

[19:20] <xinming> so, that's why we don't have "wantarray" kind of feature, context must be specified.

[19:20] <xinming> then, I won't create the ticket about the auto-coerce feature with return type.

[19:21] <xinming> m: class A { method test (::?CLASS:D:) { "Class A".say; }; }; multi infix:<|||> (A, %h) { A.new }; multi infix:<|||=> (\v, %h) { v =

[19:21] <camelia> rakudo-moar a71e370bb: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing required term after infix␤at <tmp>:1␤------> 3new }; multi infix:<|||=> (\v, %h) { v =7⏏5<EOL>␤    expecting any of:␤        prefix␤        term␤»

[19:24] *** |oLa| joined
[19:24] *** domidumont left
[19:44] <xinming> When we use vim to edit .p6 file, Will you meet any performance problem? I mean, while moving cursors, the cursor moves a little slow when you type

[19:44] <xinming> How do you fix this?

[19:44] <xinming> I mean even for small scripts (less than 400 lines)

[19:46] <timotimo>  xinming having lines with many dashes or equals signs in a comment tends to make vim super slow

[19:46] <timotimo> like a line # ----------------------------------------------------- and your syntax highlighter will just give up

[19:47] <xinming> You mean disable the syntax highlighter?

[19:47] <timotimo> there must be some Catastrophic Backtracking™ or something

[19:47] <timotimo> you can try that. but i really like syntax highlighting

[19:48] <xinming> what do you use?

[19:48] <xinming> the default perl6 syntax highligher?

[19:49] <timotimo> i think so. or perhaps i have something git cloned from github

[20:12] *** raschipi left
[20:13] *** MasterDuke joined
[20:25] <Geth> ¦ doc: Xliff++ created pull request #2217: - Addresses issue #2187.

[20:25] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2217

[20:31] <buggable> New CPAN upload: Sub-Memoized-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/Sub-Memoized-0.0.1.tar.gz

[20:31] *** robertle left
[20:37] *** Bucciarati left
[20:57] *** skids left
[21:01] *** psychoslave left
[21:07] <Geth> ¦ doc: Xliff++ created pull request #2218: Xliff patch 20180725

[21:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2218

[21:38] *** stee left
[21:43] <Geth> ¦ doc: bc9ed40ef2 | Xliff++ | doc/Type/Str.pod6

[21:43] <Geth> ¦ doc: - Addresses issue #2187.

[21:43] <Geth> ¦ doc: 

[21:43] <Geth> ¦ doc: x

[21:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/bc9ed40ef2

[21:43] <synopsebot> Link: https://doc.perl6.org/type/Str

[21:43] <Geth> ¦ doc: 09cacab05c | Xliff++ | doc/Type/Str.pod6

[21:43] <Geth> ¦ doc: - Addresses comments attached to the pull request by modifying the

[21:43] <Geth> ¦ doc: 

[21:43] <Geth> ¦ doc: signature description to substr-rw

[21:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/09cacab05c

[21:44] <Geth> ¦ doc: 2d0c5a207f | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Str.pod6

[21:44] <Geth> ¦ doc: Merge pull request #2218 from Xliff/xliff-patch-20180725

[21:44] <Geth> ¦ doc: 

[21:44] <Geth> ¦ doc: Xliff patch 20180725

[21:44] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2d0c5a207f

[21:58] *** rindolf left
[22:01] <lizmat> weekly: https://ryn1x.wordpress.com/2018/07/25/some-of-my-favorite-perl6-talks/

[22:01] <notable6> lizmat, Noted!

[22:08] *** Skarsnik_ left
[22:29] <xinming> Since perl6 doesn't have chroot, How do we create a safe env? Is it possible to disable all fs access related functions in perl6?

[22:30] <xinming> Except the say/warn/cocurrency features, all other things related to sys are disabled.

[22:31] <timotimo> you could launch it with a sandboxing thingie like what systemd has

[22:32] *** benjikun joined
[22:32] *** cpage joined
[22:32] <benjikun> Howdy

[22:35] <masak> \o

[22:35] *** pmurias left
[22:39] <MasterDuke> xinming: there's the restricted setting, but it's not foolproof

[22:39] <MasterDuke> it's what camelia uses

[22:44] <AlexDaniel> I'd say don't use the restricted setting

[22:44] <AlexDaniel> false sense of security is all it is

[22:45] <AlexDaniel> xinming: so, why do you need this?

[22:52] <Juerd> xinming: use NativeCall; sub chroot(Str) is native { * };

[22:52] <Juerd> xinming: Now you have chroot :)

[22:53] <tbrowder_>  lizmat: nice collection of talks, thanks!

[22:55] <Juerd> 1;1 juerd@cxien:~$ sudo rm -f /tmp/foo && sudo perl6 -e'use NativeCall; sub chroot(Str) is native { * }; chdir "/"; chroot "/tmp"; spurt "foo", "bar\n"' && cat /tmp/foo

[22:55] <Juerd> bar

[22:57] <AlexDaniel> .tell jmerelo http://colabti.org/irclogger/irclogger_log/perl6?date=2018-07-25#l1135

[22:57] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[23:04] *** sena_kun left
[23:20] *** ufobat_ left
[23:31] *** vrurg left
[23:32] *** vrurg joined
