[00:08] *** kurahaupo left
[00:09] *** kurahaupo joined
[00:10] *** mcmillhj joined
[00:12] *** margeas left
[00:15] *** mcmillhj left
[00:19] *** kurahaupo left
[00:20] *** kurahaupo joined
[00:23] *** mcmillhj joined
[00:23] *** mwhisenhunt joined
[00:26] *** AlexDaniel joined
[00:26] <AlexDaniel> .

[00:26] <yoleaux> 7 Apr 2018 17:29Z <smls> AlexDaniel: I've uploaded my codegolf tests here: https://github.com/smls/coding-challenges/tree/master/codegolf

[00:27] <AlexDaniel> notable6: release try these tests: https://github.com/smls/coding-challenges/tree/master/codegolf

[00:27] <notable6> AlexDaniel, Noted!

[00:28] *** mcmillhj left
[00:29] *** mwhisenhunt left
[00:34] *** mcmillhj joined
[00:34] *** kurahaupo left
[00:36] *** kurahaupo joined
[00:38] *** MasterDuke joined
[00:39] *** mcmillhj left
[00:46] *** pierre joined
[00:49] *** kurahaupo left
[00:50] *** kurahaupo joined
[00:50] *** pierre left
[00:52] *** mcmillhj joined
[00:55] <AlexDaniel> squashable6: status

[00:55] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈11 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[00:55] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/45cb166710239b3142c1b479a8afaad0

[00:56] *** mcmillhj left
[00:59] *** kurahaupo left
[01:00] *** kurahaupo joined
[01:05] <squashable6> 🍕🍕🍕  First contribution by MasterDuke17++! ♥

[01:05] <Geth> ¦ roast: b477bee606 | MasterDuke17++ (committed using GitHub Web editor) | CONTRIBUTING.md

[01:05] <Geth> ¦ roast: Add a couple of suggestions

[01:05] <Geth> ¦ roast: 

[01:05] <Geth> ¦ roast: Wording stolen nearly verbatim from zoffix++.

[01:05] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b477bee606

[01:07] *** mcmillhj joined
[01:10] *** aborazmeh joined
[01:10] *** aborazmeh left
[01:10] *** aborazmeh joined
[01:11] <Geth> ¦ rakudo: ronaldxs++ created pull request #1706: Update 05-messages/03-errors.t test for RT #132238

[01:11] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1706

[01:11] <squashable6> 🍕 ronaldxs++ opened pull request “Update 05-messages/03-errors.t test for RT #132238”: https://github.com/rakudo/rakudo/pull/1706

[01:11] <synopsebot> RT#132238 [new]: https://rt.perl.org/Ticket/Display.html?id=132238 [LTA] $<> and “Corresponding … was at line”

[01:12] *** mcmillhj left
[01:13] <squashable6> 🍕 zoffixznet++ merged pull request “Update 05-messages/03-errors.t test for RT #132238”: https://github.com/rakudo/rakudo/pull/1706

[01:13] <Geth> ¦ rakudo: 27e77c8d03 | (Ronald Schmidt)++ | t/05-messages/03-errors.t

[01:13] <Geth> ¦ rakudo: Update 05-messages/03-errors.t test for RT #132238 clearer error message for unclosed <> hash quote index operator

[01:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/27e77c8d03

[01:13] <squashable6> 🍕 zoffixznet++ wrote a comment on “Update 05-messages/03-errors.t test for RT #132238”: https://github.com/rakudo/rakudo/pull/1706#issuecomment-379510886

[01:13] <Geth> ¦ rakudo: 9ff655645b | (Zoffix Znet)++ (committed using GitHub Web editor) | t/05-messages/03-errors.t

[01:13] <Geth> ¦ rakudo: Merge pull request #1706 from ronaldxs/rakudo-t-RT-132238-match-hash-2

[01:13] <Geth> ¦ rakudo: 

[01:13] <Geth> ¦ rakudo: Update 05-messages/03-errors.t test for RT #132238

[01:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9ff655645b

[01:15] *** kurahaupo left
[01:15] *** kurahaupo joined
[01:22] *** mcmillhj joined
[01:26] *** kurahaupo left
[01:26] *** mcmillhj left
[01:26] *** kurahaupo joined
[01:27] *** aindilis left
[01:28] *** mwhisenhunt joined
[01:35] *** mcmillhj joined
[01:40] *** aindilis joined
[01:40] *** mcmillhj left
[01:41] *** kurahaupo left
[01:41] *** kurahaupo joined
[01:43] *** pierre joined
[01:46] *** ilbot3 left
[01:46] *** FROGGS left
[01:47] *** pierre left
[01:52] *** leont left
[01:55] *** mcmillhj joined
[01:56] *** kurahaupo left
[01:56] *** kurahaupo joined
[01:58] *** ilbot3 joined
[01:58] *** ChanServ sets mode: +v ilbot3

[01:59] *** mcmillhj left
[02:00] *** FROGGS joined
[02:00] *** pierre joined
[02:04] <titsuki_> bisectable: say (1 +< -10)

[02:04] *** pierre left
[02:04] <bisectable6> titsuki_, On both starting points (old=2015.12 new=9ff6556) the exit code is 0 and the output is identical as well

[02:04] <bisectable6> titsuki_, Output on both points: «0␤»

[02:05] *** ufobat_ joined
[02:05] <titsuki_> bisectable: say (1 +> -10)

[02:06] <bisectable6> titsuki_, On both starting points (old=2015.12 new=9ff6556) the exit code is 0 and the output is identical as well

[02:06] <bisectable6> titsuki_, Output on both points: «1024␤»

[02:08] *** ufobat left
[02:09] *** kurahaupo_ joined
[02:10] <titsuki_> bisectable: say (1 +< -100000000000)

[02:10] <bisectable6> titsuki_, Bisecting by exit code (old=2015.12 new=9ff6556). Old exit code: 1

[02:10] <bisectable6> titsuki_, bisect log: https://gist.github.com/779c0cfd73ed4af784f8dabcc8108d67

[02:10] <bisectable6> titsuki_, (2017-05-10) https://github.com/rakudo/rakudo/commit/6409ee582ee5870af576e178c5b3c668243f0115

[02:11] *** kurahaupo left
[02:13] *** mcmillhj joined
[02:16] <titsuki_> bisectable: say (1 +> 100000000000)

[02:16] <bisectable6> titsuki_, Bisecting by exit code (old=2015.12 new=9ff6556). Old exit code: 1

[02:16] <bisectable6> titsuki_, bisect log: https://gist.github.com/2c95a78636f5c783d03bbecd50eb628a

[02:16] <bisectable6> titsuki_, (2017-05-10) https://github.com/rakudo/rakudo/commit/ef29bb9f41aa5d50638544db1ff966459c888f68

[02:18] *** mcmillhj left
[02:27] *** eliasr left
[02:28] *** kurahaupo joined
[02:29] *** mcmillhj joined
[02:31] *** kurahaupo_ left
[02:32] *** kurahaupo left
[02:33] *** aborazmeh left
[02:34] *** mcmillhj left
[02:35] *** kurahaupo joined
[02:39] *** mcmillhj joined
[02:41] *** kurahaupo left
[02:41] *** kurahaupo joined
[02:42] *** kurahaupo_ joined
[02:44] *** mcmillhj left
[02:45] *** kurahaupo left
[02:46] *** kurahaupo_ left
[02:46] *** kurahaupo joined
[02:49] <squashable6> 🍕 titsuki++ opened issue “The bitshift operation o…”: https://github.com/rakudo/rakudo/issues/1707

[02:49] <squashable6> 🍕🍕🍕  First contribution by titsuki++! ♥

[02:53] *** mcmillhj joined
[02:57] *** kurahaupo left
[02:57] *** kurahaupo joined
[02:58] *** mcmillhj left
[03:04] *** pierre joined
[03:06] *** mcmillhj joined
[03:08] *** pierre left
[03:11] *** mcmillhj left
[03:12] *** kurahaupo left
[03:12] *** kurahaupo joined
[03:19] *** mcmillhj joined
[03:24] *** mcmillhj left
[03:26] *** kurahaupo left
[03:27] *** kurahaupo joined
[03:38] *** kurahaupo left
[03:38] *** kurahaupo joined
[03:39] <squashable6> 🍕 AlexDaniel++ opened issue “… xx ∞ should return a Seq”: https://github.com/rakudo/rakudo/issues/1708

[03:40] *** pierre joined
[03:43] <Geth> ¦ roast: b320464868 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S03-operators/repeat.t

[03:43] <Geth> ¦ roast: Test xx not dying with large repetition count

[03:43] <Geth> ¦ roast: 

[03:43] <Geth> ¦ roast: Closes RT#126014.

[03:43] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b320464868

[03:43] <synopsebot> RT#126014 [open]: https://rt.perl.org/Ticket/Display.html?id=126014 Too many repetitions with xx operator causes out of memory; should it work lazily?

[03:45] *** pierre left
[03:45] <Geth> ¦ roast: 19344b3c7f | (Aleks-Daniel Jakimenko-Aleksejev)++ | S03-operators/repeat.t

[03:45] <Geth> ¦ roast: Oops. Fix RT number in the last commit

[03:45] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/19344b3c7f

[03:46] <squashable6> 🍕 AlexDaniel++ wrote a comment on commit b320464868d3: https://github.com/perl6/roast/commit/b320464868d3b8da98c090ddc4b0d57604683e13#commitcomment-28472097

[03:52] *** mcmillhj joined
[03:52] *** kurahaupo left
[03:56] *** mcmillhj left
[04:09] *** mcmillhj joined
[04:11] *** athenot joined
[04:13] *** wamba joined
[04:14] *** mcmillhj left
[04:19] <squashable6> 🍕 zoffixznet++ wrote a comment on “… xx ∞ should return a Seq”: https://github.com/rakudo/rakudo/issues/1708#issuecomment-379519020

[04:22] <Geth> ¦ roast: a7af87465e | (Aleks-Daniel Jakimenko-Aleksejev)++ | S32-io/io-handle.t

[04:22] <Geth> ¦ roast: Test that nl-in has \n and \r\n

[04:22] <Geth> ¦ roast: 

[04:22] <Geth> ¦ roast: Closes RT#131858, but I still don't understand why it gives an array

[04:22] <Geth> ¦ roast: instead of a Junction. There's probably a good reason, but speccing it

[04:22] <synopsebot> RT#131858 [open]: https://rt.perl.org/Ticket/Display.html?id=131858 [REGRESSION] default $.nl-in on IO::Handle does not correctly work in subclasses

[04:22] <Geth> ¦ roast: this way is probably wrong. Please adjust.

[04:22] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/a7af87465e

[04:24] <squashable6> 🍕 AlexDaniel++ wrote a comment on “… xx ∞ should return a Seq”: https://github.com/rakudo/rakudo/issues/1708#issuecomment-379519219

[04:25] <AlexDaniel> Zoffix: can you take a look at https://github.com/perl6/roast/commit/a7af87465e0dc593f4e008d6dcfe077f1bbff0f1 ?

[04:28] * AlexDaniel goes for another nap

[04:48] *** mcmillhj joined
[04:50] *** araraloren joined
[04:51] *** Zoffix joined
[04:51] <araraloren> good noon :)

[04:51] *** pierre joined
[04:54] *** mcmillhj left
[04:55] *** khw left
[04:56] *** pierre left
[04:57] <squashable6> 🍕 zoffixznet++ self-assigned issue “… xx ∞ should return a Seq”: https://github.com/rakudo/rakudo/issues/1708

[04:58] <Zoffix> AlexDaniel: `is` is not an appropriate test here. It'll stringify the return value so even if it returns ((((((((“\n”,)))))), “\r\n”), the test would still pass. As for Array vs. Junction. Junctions aren't introspectable, so I wouldn't say that's an appropriate type, so you're left with array/list and since it's a mutable attribute, array seems a fine choice.

[04:59] <AlexDaniel> Zoffix: I see

[04:59] <Zoffix>  and I'll fix the … xx ∞ thing shortly, to behave like the 42 xx 2**99999 case

[05:00] <AlexDaniel> Zoffix: so what's the appropriate test sub there? is-deeply will complain about list vs array difference, and I don't feel like this is right

[05:01] <Zoffix> AlexDaniel: what's right?

[05:02] <AlexDaniel> I'd say some sort of positional with the required elements

[05:02] <Zoffix> It's a mutable attribute. If it's not an array, it'll crash

[05:04] <Zoffix> m: class { has $.nl-in = (1, 2, 3) }.new.nl-in = 1, 2, 3

[05:04] <camelia> rakudo-moar 9ff655645: OUTPUT: «Cannot modify an immutable Int (1)␤  in block <unit> at <tmp> line 1␤␤»

[05:04] <AlexDaniel> m: my $z = class Z is IO::Handle { }.new; dd $z.nl-in; $z.nl-in = ("\n", "\r\n"); dd $z.nl-in; $z.nl-in = <a b c>; dd $z.nl-in

[05:04] <camelia> rakudo-moar 9ff655645: OUTPUT: «Z is disallowed in restricted setting␤  in sub restricted at src/RESTRICTED.setting line 1␤  in method new at src/RESTRICTED.setting line 32␤  in block <unit> at <tmp> line 1␤␤»

[05:04] <AlexDaniel> what the f

[05:04] <AlexDaniel> e: my $z = class Z is IO::Handle { }.new; dd $z.nl-in; $z.nl-in = ("\n", "\r\n"); dd $z.nl-in; $z.nl-in = <a b c>; dd $z.nl-in

[05:04] <evalable6> AlexDaniel, rakudo-moar 9ff655645: OUTPUT: «$["\n", "\r\n"]␤$("\n", "\r\n")␤$("a", "b", "c")␤»

[05:06] *** mcmillhj joined
[05:06] <AlexDaniel> I guess I'm confused about something

[05:06] <Zoffix> m: class Foo { has $.nl-in = (1, 2, 3) }; my Array $x = Foo.new.nl-in

[05:06] <camelia> rakudo-moar 9ff655645: OUTPUT: «Type check failed in assignment to $x; expected Array but got List ($(1, 2, 3))␤  in block <unit> at <tmp> line 1␤␤»

[05:07] *** Zoffix left
[05:07] <Geth> ¦ roast: ec2b4c3a7c | (Aleks-Daniel Jakimenko-Aleksejev)++ | S32-io/io-handle.t

[05:07] <Geth> ¦ roast: Change nl-in test to is-deeply

[05:07] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ec2b4c3a7c

[05:11] *** mcmillhj left
[05:12] <Geth> ¦ roast: 22001cb924 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S04-statements/for.t

[05:12] <Geth> ¦ roast: Use is-deeply in hole tests

[05:12] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/22001cb924

[05:17] *** ray_ joined
[05:17] *** AlexDaniel left
[05:22] *** mcmillhj joined
[05:24] *** Raymond_ joined
[05:25] <Geth> ¦ rakudo: 5f256baec2 | (Zoffix Znet)++ | src/core/Rakudo/Iterator.pm6

[05:25] <Geth> ¦ rakudo: Implement optimized Iterator methods for `42 xx ...`

[05:25] <Geth> ¦ rakudo: 

[05:25] <Geth> ¦ rakudo: Fixes R#1708 https://github.com/rakudo/rakudo/issues/1708

[05:25] <synopsebot> R#1708 [open]: https://github.com/rakudo/rakudo/issues/1708 … xx ∞ should return a Seq

[05:25] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/5f256baec2

[05:25] *** Raymond_ left
[05:25] *** ray_ left
[05:26] *** mcmillhj left
[05:28] *** Raymond_ joined
[05:29] <Geth> ¦ roast: b4b0d584bc | (Zoffix Znet)++ | S03-operators/repeat.t

[05:29] <Geth> ¦ roast: Test opt methods/sinkage of `xx` with simple value

[05:29] <squashable6> 🍕 zoffixznet++ closed issue “… xx ∞ should return a Seq”: https://github.com/rakudo/rakudo/issues/1708

[05:29] <Geth> ¦ roast: 

[05:29] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1708 R#1708

[05:29] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/5f256baec2

[05:29] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/b4b0d584bc

[05:30] *** Raymond_ left
[05:36] *** mcmillhj joined
[05:37] *** rindolf joined
[05:41] *** mcmillhj left
[05:44] *** Raymond_ joined
[05:44] *** Raymond_ left
[05:49] *** mcmillhj joined
[05:51] *** Ray|2 joined
[05:51] <Geth> ¦ roast: 5fe5978a18 | (Zoffix Znet)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[05:51] <Geth> ¦ roast: Use implementation-neutral language

[05:51] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/5fe5978a18

[05:52] *** lizmat joined
[05:54] *** Ray|2 left
[05:54] *** mcmillhj left
[05:54] *** Ray|3 joined
[06:02] *** mwhisenhunt left
[06:02] *** pierre_ joined
[06:03] *** Ray|3 left
[06:04] *** Ray|2 joined
[06:06] *** pierre_ left
[06:07] *** mcmillhj joined
[06:11] *** mcmillhj left
[06:15] *** Ray|2 left
[06:17] *** Ray|2 joined
[06:18] *** mcmillhj joined
[06:19] *** Ray|3 joined
[06:19] *** Ray|3 left
[06:21] <Geth> ¦ roast: 03ac03f16c | usev6++ | MISC/bug-coverage-stress.t

[06:21] <Geth> ¦ roast: [JVM] Skip tests using 'atomicint'

[06:21] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/03ac03f16c

[06:21] <squashable6> 🍕🍕🍕  First contribution by usev6++! ♥

[06:22] *** Ray|2 left
[06:23] *** mcmillhj left
[06:33] *** mcmillhj joined
[06:35] *** Ray|2 joined
[06:36] <Geth> ¦ doc/master: 4 commits pushed by CC++, cc++, (Juan Julián Merelo Guervós)++

[06:36] <Geth> ¦ doc/master: 88cd564864 | Translate README for chinese

[06:36] <Geth> ¦ doc/master: 82eed3980b | CCAutoTag 20180408124244

[06:36] <Geth> ¦ doc/master: 84f2d1460c | CCAutoTag 20180408124649

[06:36] <Geth> ¦ doc/master: b3f94bb986 | Merge pull request #1900 from ccworld1000/master

[06:36] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/afc3593c0599...b3f94bb986a3

[06:36] *** Ray|2 left
[06:36] *** Ray|2 joined
[06:37] *** Ray|2 left
[06:37] *** Ray|2 joined
[06:37] *** Ray|2 left
[06:38] *** mcmillhj left
[06:43] *** sena_kun joined
[06:44] *** darutoko joined
[06:49] *** domidumont joined
[06:52] *** mcmillhj joined
[06:56] *** mcmillhj left
[06:57] *** domidumont left
[06:57] *** domidumont joined
[07:00] *** ingy left
[07:01] <Geth> ¦ doc: bd81a89833 | (JJ Merelo)++ | 2 files

[07:01] <Geth> ¦ doc: Checks links in grammars

[07:01] <Geth> ¦ doc: 

[07:01] <Geth> ¦ doc: Closes #1901 since it was actually fixed. Maybe it was not in the

[07:01] <Geth> ¦ doc: published site yet. Also changes link to what the link points to and

[07:01] <Geth> ¦ doc: rephrases some sentences Atom does not like.

[07:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/bd81a89833

[07:01] *** ingy joined
[07:01] *** SCHAPiE left
[07:01] *** dct joined
[07:03] *** mcmillhj joined
[07:06] *** pierre_ joined
[07:08] *** mcmillhj left
[07:10] *** pierre_ left
[07:11] *** SCHAPiE joined
[07:15] *** jmerelo joined
[07:15] *** mcmillhj joined
[07:20] *** mcmillhj left
[07:22] *** parv joined
[07:26] *** mcmillhj joined
[07:29] <Geth> ¦ rakudo: 4402839adb | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[07:29] <Geth> ¦ rakudo: Fix crash in double-sink for for ... { Package::foo }

[07:29] <Geth> ¦ rakudo: 

[07:29] <Geth> ¦ rakudo: Fixes R#1693 https://github.com/rakudo/rakudo/issues/1693

[07:29] <synopsebot> R#1693 [open]: https://github.com/rakudo/rakudo/issues/1693 [regression][⚠ blocker ⚠] Cannot find method 'Nil'

[07:29] <Geth> ¦ rakudo: 

[07:29] <Geth> ¦ rakudo: After adding a sink call to the last statement, we UNWANTED,

[07:29] <Geth> ¦ rakudo: the guts and because of the setup, we ended up adding another

[07:29] <Geth> ¦ rakudo: sink call into the QAST inside UNWANTED, causing the error in the Issue.

[07:29] <Geth> ¦ rakudo: <…commit message has 5 more lines…>

[07:29] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4402839adb

[07:30] <Geth> ¦ roast: 06d2abbc6c | (Zoffix Znet)++ | S04-statements/sink.t

[07:30] <Geth> ¦ roast: Test sinkage of package call in for

[07:30] <squashable6> 🍕 zoffixznet++ closed issue “Cannot find method 'Nil'”: https://github.com/rakudo/rakudo/issues/1693

[07:30] <Geth> ¦ roast: 

[07:30] <Geth> ¦ roast: Closes https://github.com/rakudo/rakudo/issues/1693 R#1693

[07:30] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/4402839adb

[07:30] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/06d2abbc6c

[07:31] *** mcmillhj left
[07:37] *** mcmillhj joined
[07:40] *** dirtiestharp joined
[07:42] *** mcmillhj left
[07:42] *** dct left
[07:44] *** AlexDaniel joined
[07:45] <Geth> ¦ doc: 55eaffe2f1 | (JJ Merelo)++ | doc/Language/concurrency.pod6

[07:45] <Geth> ¦ doc: Adds headings for react and whenever

[07:45] <Geth> ¦ doc: 

[07:45] <Geth> ¦ doc: While keeping the index. It's level 3 indexing, although it shows up

[07:45] <Geth> ¦ doc: at the same level in the headings. Contributes to improve a bit the

[07:45] <synopsebot> Link: https://doc.perl6.org/language/concurrency

[07:45] <Geth> ¦ doc: tutorial, thus refs #1906, and at the same time fixes #1552

[07:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/55eaffe2f1

[07:45] *** pierre_ joined
[07:48] *** mcmillhj joined
[07:50] *** pierre_ left
[07:50] <AlexDaniel> squashable6: status

[07:50] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈4 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[07:50] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/d511d8fc3a95d0c3cb6397907f4306a1

[07:52] <Geth> ¦ rakudo: 9bcc8e523e | (Zoffix Znet)++ | src/core/CompUnit/PrecompilationUnit.pm6

[07:52] <Geth> ¦ rakudo: Fix thinko in CURR conditional

[07:52] <Geth> ¦ rakudo: 

[07:52] <Geth> ¦ rakudo: Part of fixing R#1662 https://github.com/rakudo/rakudo/issues/1662

[07:52] <synopsebot> R#1662 [open]: https://github.com/rakudo/rakudo/issues/1662 [⚠ blocker ⚠] Windows Issues with "Replace error-prone file timestamp check by checksum when loading deps"

[07:52] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9bcc8e523e

[07:52] <jmerelo> Can I propose a topic for the next SQUASHathon? I'd like to focus on https://github.com/perl6/doc/issues/561

[07:53] *** mcmillhj left
[07:54] <buggable> New CPAN upload: App-FindSource-0.0.2.tar.gz by ALOREN https://cpan.metacpan.org/authors/id/A/AL/ALOREN/Perl6/App-FindSource-0.0.2.tar.gz

[08:00] *** pierre_ joined
[08:02] *** mcmillhj joined
[08:05] *** xinming_ joined
[08:06] *** mcmillhj left
[08:08] *** xinming left
[08:08] *** FROGGS left
[08:09] <AlexDaniel> “Documentation has changed since you last contributed 9 days ago. Take a look before submitting an issue: Contributing guidelines (Last updated 23 hours ago)”

[08:09] <AlexDaniel>  

[08:09] <AlexDaniel> heh, that's a very interesting kind of a notification

[08:10] <jmerelo> AlexDaniel: nothing too important. Mostly related to HTML layout.

[08:10] <AlexDaniel> jmerelo: yeah you can propose, but there are things to consider. For example, the topic should be approachable for newcomers

[08:11] <AlexDaniel> it's a doc squashathon next month for sure, feel free to narrow it down if you think that'd be useful

[08:11] <AlexDaniel> but maybe just say during the squashathon that you want more attention to that issue, and we'll do our best to help there

[08:11] <jmerelo> AlexDaniel: OK, I'll do that. The thing is that I keep coming back to that issue whenever I try to fix things somewhere else.

[08:12] *** eliasr joined
[08:13] <jmerelo> AlexDaniel: I'll try to label some issues as easy to newcomers also, to help people get incorporated. But come this point, there are not many of those... Most issues are quite gnarly.

[08:13] *** pierre_ left
[08:13] <AlexDaniel> so we are 12+6 tickets down from the start of the squashathon, I think we should push a bit more right now :)

[08:14] <jmerelo> AlexDaniel: I'm quite the newcomer here, but if you feel there's something easy I could do, please feel free.

[08:14] <AlexDaniel> jmerelo: yes, I know. All lhfs were squashathoned away very early I think

[08:15] <AlexDaniel> jmerelo: well at this point I think you should just scroll through https://fail.rakudo.party/t/TESTNEEDED and see if there's any issue that can be easily tested

[08:15] <AlexDaniel> and if so, just write the test and submit a PR for roast or rakudo

[08:15] <AlexDaniel> probably skip those that are EXOTICTEST or PERFTEST

[08:16] <jmerelo> AlexDaniel: OK. I'll try to do that. Thanks!

[08:18] <squashable6> 🍕 zoffixznet++ labeled issue “A race in HyperRace causing rare crash/hang”: https://github.com/rakudo/rakudo/issues/1709

[08:18] <squashable6> 🍕 zoffixznet++ opened issue “A race in HyperRace causing rare crash/hang”: https://github.com/rakudo/rakudo/issues/1709

[08:18] <squashable6> 🍕 zoffixznet++ labeled issue “A race in HyperRace causing rare crash/hang”: https://github.com/rakudo/rakudo/issues/1709

[08:21] *** mcmillhj joined
[08:21] *** pierre_ joined
[08:26] <squashable6> 🍕 zoffixznet++ opened issue “New stresstest floppers”: https://github.com/rakudo/rakudo/issues/1710

[08:26] *** mcmillhj left
[08:27] *** FROGGS joined
[08:28] *** andrzejku joined
[08:32] *** kurahaupo joined
[08:38] <squashable6> 🍕 AlexDaniel++ labeled issue “New stresstest floppers”: https://github.com/rakudo/rakudo/issues/1710

[08:43] *** kurahaupo left
[08:43] *** kurahaupo joined
[08:44] <jmerelo> AlexDaniel: I'm checking out this one https://rt.perl.org/Public/Bug/Display.html?id=125384#ticket-history but having lots of trouble logging in. If I use GitHub, I can't display the ticket, if I use anything else, it simply does not work.

[08:45] <jmerelo> Anyway, the only problem I see there is (possibly) the declaration of the sub as "our". I can write a test for that, but it can also be closed safely, I guess. 

[08:50] <jmerelo> commit: releases module foo { our sub bar ()  { return "baz" }; } say foo::bar;

[08:50] <committable6> jmerelo, https://gist.github.com/50a38176af49a2b4176ec7e5c4271b21

[08:51] <jmerelo> commit: releases module foo { our sub bar ()  { return "baz" }; }; say foo::bar;

[08:51] <committable6> jmerelo, ¦releases (28 commits): «baz␤»

[08:53] <AlexDaniel> jmerelo: oh well… I think we'll have to reproduce the whole thing in whateverable to figure out what's going on there

[08:53] <AlexDaniel> but that's not too hard, let's see

[08:53] *** kurahaupo left
[08:53] <jmerelo> AlexDaniel: I think https://rt.perl.org/Public/Bug/Display.html?id=125384#ticket-history can be closed. It was probably some problem with the local installation. 

[08:53] *** kurahaupo joined
[08:54] <AlexDaniel> we'll have to try it to know for sure

[08:54] *** dirtiestharp left
[08:55] <jmerelo> AlexDaniel: see above. I think the error was probably local due to some old version of the library not including parse-string in the path

[08:56] *** albongo joined
[08:57] <AlexDaniel> e: mkdir ‘sandbox/rt125384/lib/Pod/Perl5’

[08:57] <evalable6> AlexDaniel, rakudo-moar 9bcc8e523: OUTPUT: «»

[08:58] <synopsebot> RT#125384 [open]: https://rt.perl.org/Ticket/Display.html?id=125384 Could not find symbol '&parse-string' in installed module, local version works fine. 

[08:58] <AlexDaniel> e: spurt ‘sandbox/rt125384/lib/Pod/Perl5.pm’, ｢use Pod::Perl5::Grammar; use Pod::Perl5::ToHTML; module Pod::Perl5 { our sub parse-string (Str:D $pod) { Pod::Perl5::Grammar.parse($pod); } }｣

[08:58] <evalable6> AlexDaniel, rakudo-moar 9bcc8e523: OUTPUT: «»

[08:58] <squashable6> 🍕 zoffixznet++ wrote a comment on “A race in HyperRace causing rare crash/hang”: https://github.com/rakudo/rakudo/issues/1709#issuecomment-379533340

[08:59] <AlexDaniel> e: spurt ‘sandbox/rt125384/lib/Pod/Perl5/ToHTML.pm’, ｢class Pod::Perl5::ToHTML { }｣

[08:59] <evalable6> AlexDaniel, rakudo-moar 9bcc8e523: OUTPUT: «»

[08:59] <AlexDaniel> e: spurt ‘sandbox/rt125384/lib/Pod/Perl5/Grammar.pm’, ｢grammar Pod::Perl5::Grammar { token TOP { .* } }｣

[08:59] <evalable6> AlexDaniel, rakudo-moar 9bcc8e523: OUTPUT: «»

[09:00] <AlexDaniel> now what…

[09:01] <AlexDaniel> e: shell(:cwd(‘sandbox/rt125384’), ｢PERL6LIB=lib perl6 -MPod::Perl5 -e 'say Pod::Perl5::parse-string("=pod\n\n")'｣)

[09:01] <evalable6> AlexDaniel, rakudo-moar 9bcc8e523: OUTPUT: «｢=pod␤␤｣␤»

[09:01] <AlexDaniel> oh, that works?

[09:02] <AlexDaniel> nooow…

[09:02] <AlexDaniel> c: 2015.05 shell(:cwd(‘sandbox/rt125384’), ｢PERL6LIB=lib perl6 -MPod::Perl5 -e 'say Pod::Perl5::parse-string("=pod\n\n")'｣)

[09:02] <committable6> AlexDaniel, ¦2015.05: «Unexpected named parameter 'cwd' passed␤  in block <unit> at /tmp/9x3_m2xkii:1␤  in any <unit-outer> at /tmp/9x3_m2xkii:1␤␤ «exit code = 1»»

[09:02] <AlexDaniel> haha

[09:03] <AlexDaniel> c: 2015.05 shell(｢cd sandbox/rt125384; PERL6LIB=lib perl6 -MPod::Perl5 -e 'say Pod::Perl5::parse-string("=pod\n\n")'｣)

[09:03] <committable6> AlexDaniel, ¦2015.05: «｢=pod␤␤｣␤»

[09:03] <AlexDaniel> c: 2015.06 shell(｢cd sandbox/rt125384; PERL6LIB=lib perl6 -MPod::Perl5 -e 'say Pod::Perl5::parse-string("=pod\n\n")'｣)

[09:03] <committable6> AlexDaniel, ¦2015.06: «｢=pod␤␤｣␤»

[09:03] <AlexDaniel> c: all shell(｢cd sandbox/rt125384; PERL6LIB=lib perl6 -MPod::Perl5 -e 'say Pod::Perl5::parse-string("=pod\n\n")'｣)

[09:04] <committable6> AlexDaniel, https://gist.github.com/3b421ae9ffb7fadd93d7114b226eff03

[09:04] <AlexDaniel> jmerelo: well, I guess you're right

[09:05] <AlexDaniel> jmerelo: oh wait, it needs ｢panda install ./｣ ?

[09:08] *** kurahaupo left
[09:08] <squashable6> 🍕 lizmat++ wrote a comment on “rakudo 2018.02 test fail…”: https://github.com/rakudo/rakudo/issues/1663#issuecomment-379534089

[09:09] <lizmat> decommute from GPW&

[09:09] *** lizmat left
[09:09] *** kurahaupo joined
[09:10] *** TEttinger left
[09:11] *** espadrine_ left
[09:15] <squashable6> 🍕 zoffixznet++ wrote a comment on “New stresstest floppers”: https://github.com/rakudo/rakudo/issues/1710#issuecomment-379534521

[09:15] <squashable6> 🍕 ronaldxs++ wrote a comment on “Update S02-types/hash_ref.t test for RT #132238”: https://github.com/perl6/roast/pull/413#issuecomment-379534530

[09:15] <squashable6> 🍕 ronaldxs++ closed pull request “Update S02-types/hash_ref.t test for RT #132238”: https://github.com/perl6/roast/pull/413

[09:15] <synopsebot> RT#132238 [resolved]: https://rt.perl.org/Ticket/Display.html?id=132238 [LTA] $<> and “Corresponding … was at line”

[09:18] <AlexDaniel> jmerelo: OK! -1 ticket then: https://rt.perl.org/Ticket/Display.html?id=125384#txn-1545278

[09:18] <AlexDaniel> jmerelo: next?

[09:18] <jmerelo> AlexDaniel: :-)

[09:19] <jmerelo> AlexDaniel: Sure.

[09:19] *** benjikun left
[09:20] <squashable6> 🍕 zoffixznet++ wrote a comment on “rakudo 2018.02 test fail…”: https://github.com/rakudo/rakudo/issues/1663#issuecomment-379534906

[09:21] *** benjikun joined
[09:22] <squashable6> 🍕 AlexDaniel++ wrote a comment on “rakudo 2018.02 test fail…”: https://github.com/rakudo/rakudo/issues/1663#issuecomment-379535029

[09:24] *** kurahaupo left
[09:24] *** kurahaupo joined
[09:24] <squashable6> 🍕 AlexDaniel++ wrote a comment on “rakudo 2018.02 test fail…”: https://github.com/rakudo/rakudo/issues/1663#issuecomment-379535207

[09:34] *** kurahaupo left
[09:35] *** andrzejku left
[09:35] *** kurahaupo joined
[09:40] <ufobat_> is there any work in progress on some i18n modules?

[09:41] <AlexDaniel> ufobat_: I don't think so: https://github.com/perl6/perl6-most-wanted/blob/master/most-wanted/modules.md#i18n-and-nlp

[09:42] <ufobat_> okay, ty

[09:46] *** kurahaupo left
[09:46] *** kurahaupo joined
[09:54] *** dirtiestharp joined
[09:56] *** pierre_ left
[09:58] *** kurahaupo left
[09:59] *** kurahaupo joined
[10:02] <Geth> ¦ roast: JJ++ created pull request #414: Adds test for RT#126394

[10:02] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/414

[10:02] <squashable6> 🍕 JJ++ opened pull request “Adds test for RT#126394”: https://github.com/perl6/roast/pull/414

[10:02] <squashable6> 🍕🍕🍕  First contribution by JJ++! ♥

[10:03] <synopsebot> RT#126394 [open]: https://rt.perl.org/Ticket/Display.html?id=126394 [BUG] Assigning Failure to typed variable swallows Failure information

[10:03] <squashable6> 🍕 zoffixznet++ merged pull request “Adds test for RT#126394”: https://github.com/perl6/roast/pull/414

[10:03] <squashable6> 🍕 zoffixznet++ wrote a comment on “Adds test for RT#126394”: https://github.com/perl6/roast/pull/414#issuecomment-379537760

[10:03] <Geth> ¦ roast: ce173d4c66 | (JJ Merelo)++ | S04-exceptions/fail.t

[10:03] <Geth> ¦ roast: Adds test for RT#126394

[10:03] <Geth> ¦ roast: 

[10:03] <Geth> ¦ roast: Checking that it fails and effectively includes the important message.

[10:03] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/ce173d4c66

[10:04] <Geth> ¦ roast: 295d101a09 | (Zoffix Znet)++ (committed using GitHub Web editor) | S04-exceptions/fail.t

[10:04] <Geth> ¦ roast: Merge pull request #414 from JJ/master

[10:04] <Geth> ¦ roast: 

[10:04] <Geth> ¦ roast: Adds test for RT#126394

[10:04] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/295d101a09

[10:04] <Geth> ¦ roast: 39b4d2a83e | (Zoffix Znet)++ (committed using GitHub Web editor) | S04-exceptions/fail.t

[10:04] <Geth> ¦ roast: Remove needless ticket title

[10:04] <Geth> ¦ roast: 

[10:04] <Geth> ¦ roast: (along with possibly-conflicting with fudger `#?` portion)

[10:04] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/39b4d2a83e

[10:05] <jmerelo> You can't see me now, but I'm smiling with a smile that's 4 inches wider than my face

[10:06] <jmerelo> OK, I see that. Still smiling.

[10:07] *** w_richard_w left
[10:07] <Geth> ¦ roast: d3c04b47ca | (Zoffix Znet)++ (committed using GitHub Web editor) | S04-exceptions/fail.t

[10:07] <Geth> ¦ roast: Add test description

[10:07] <Geth> ¦ roast: 

[10:07] <Geth> ¦ roast: (and toss unneeded `say` code)

[10:07] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/d3c04b47ca

[10:08] <jmerelo> Right :-)

[10:08] *** margeas joined
[10:10] *** kurahaupo left
[10:11] *** kurahaupo joined
[10:12] <AlexDaniel> jmerelo: should I close the ticket for you?

[10:15] *** andrzejku joined
[10:18] <jmerelo> AlexDaniel: Thanks!

[10:20] *** andrzejku left
[10:20] *** kurahaupo left
[10:21] *** kurahaupo joined
[10:25] *** kurahaupo_ joined
[10:27] *** pierre_ joined
[10:28] *** kurahaupo left
[10:31] *** pierre_ left
[10:32] <timotimo> m: m: (say "hi") xx Inf

[10:32] <camelia> rakudo-moar 9bcc8e523: OUTPUT: «(timeout)hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi␤hi…»

[10:32] <squashable6> 🍕 robertlemmen++ wrote a comment on “rakudo 2018.02 test fail…”: https://github.com/rakudo/rakudo/issues/1663#issuecomment-379539551

[10:32] <squashable6> 🍕🍕🍕  First contribution by robertlemmen++! ♥

[10:33] <timotimo> OK, so that doesn't use UnendingValue

[10:36] *** wamba left
[10:37] <ufobat_> is there a way to access the local file pod data? i am looking for a workaround for the NYI pod variable $=

[10:39] <ufobat_> I've got a bunch of data that's documented in the pod and i need to get the same data into a local datastructe, without repeating myself

[10:41] <timotimo> we do have $= partially implemented

[10:41] *** Zoffix joined
[10:42] <Zoffix> timotimo: yeah, and that one can't be cheated to not sink either, 'cause sinking executes the code

[10:42] <Zoffix> ufobat_: $=pod should work

[10:42] <timotimo> m: =begin pod␤Hello␤=end pod␤say $=POD.perl

[10:42] <camelia> rakudo-moar 9bcc8e523: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Pod variable $=POD not yet implemented. Sorry.␤at <tmp>:4␤------> 3say $=POD7⏏5.perl␤»

[10:42] <timotimo> m: =begin pod␤Hello␤=end pod␤say $=pod.perl

[10:42] <camelia> rakudo-moar 9bcc8e523: OUTPUT: «[Pod::Block::Named.new(name => "pod", config => {}, contents => [Pod::Block::Para.new(config => {}, contents => ["Hello"])])]␤»

[10:43] *** wamba joined
[10:43] *** Zoffix left
[10:44] <Geth> ¦ roast: 1f171a9d2f | (Aleks-Daniel Jakimenko-Aleksejev)++ | S07-hyperrace/basics.t

[10:44] <Geth> ¦ roast: Add tests for hyperized s///

[10:44] <Geth> ¦ roast: 

[10:44] <Geth> ¦ roast: Should also catch other reliability issues of .hyper, including

[10:44] <Geth> ¦ roast: segfaults. Closes RT#126752.

[10:44] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/1f171a9d2f

[10:44] <synopsebot> RT#126752 [open]: https://rt.perl.org/Ticket/Display.html?id=126752 [BUG] $/ vs .hyper gets confused

[10:46] <ufobat_> it seems not to be documented, or i coudn't find it

[10:47] <ufobat_> is just $=pod working?

[10:48] *** athenot left
[10:51] <ufobat_> yeah i guess it will work :)

[10:51] <AlexDaniel> why am I using “RT#…” when everything else in the file has “RT #…” with a space

[10:51] <AlexDaniel> am I blind or what

[10:53] *** domidumont left
[10:53] *** domidumont joined
[10:55] *** parv left
[10:55] <jmerelo> .tell moritz I still need the docs.per6.org website logs, or the public ones updated, to search for 404s and, if possible, referrers to them.

[10:55] <yoleaux> jmerelo: I'll pass your message to moritz.

[10:57] <ufobat_> jmerelo, i would find it good if the pod section of the docs would mention how to access pod via $=

[10:57] <jmerelo> ufobat_: OK

[10:57] <squashable6> 🍕 robertlemmen++ wrote a comment on “rakudo 2018.02 test fail…”: https://github.com/rakudo/rakudo/issues/1663#issuecomment-379541036

[11:00] <squashable6> 🍕 robertlemmen++ opened issue “intermittent "Bytecode v…”: https://github.com/rakudo/rakudo/issues/1711

[11:01] *** pierre_ joined
[11:01] <squashable6> 🍕 robertlemmen++ wrote a comment on “Rakudo 2017.10 fails to …”: https://github.com/rakudo/rakudo/issues/1257#issuecomment-379541231

[11:01] <AlexDaniel> squashable6: status

[11:01] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event is in 58 minutes. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[11:01] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/a6e0160962a391743ee7fd055578c69d

[11:01] <AlexDaniel> oh 58 minutes more!

[11:04] *** andrzejku joined
[11:05] <squashable6> 🍕 AlexDaniel++ labeled issue “intermittent "Bytecode v…”: https://github.com/rakudo/rakudo/issues/1711

[11:11] *** pierre_ left
[11:12] *** kurahaupo_ is now known as kurahaupo

[11:20] <dogbert17> [Tux]: I believe that you got lucky today, the SEGV you found is still present

[11:22] <dogbert17> releasable: next

[11:22] <releasable6> dogbert17, Next release in ≈13 days and ≈7 hours. 8 blockers. 0 out of 189 commits logged (⚠ 9 warnings)

[11:22] <releasable6> dogbert17, Details: https://gist.github.com/724ebb60723cc411e717e8e91f78cd34

[11:23] <dogbert17> eight blockers, could be a record

[11:30] <AlexDaniel> dogbert17: we had more, Zoffix++ closed a bunch recently I think

[11:32] *** FROGGS left
[11:32] <squashable6> 🍕 dogbert17++ wrote a comment on “New stresstest floppers”: https://github.com/rakudo/rakudo/issues/1710#issuecomment-379543072

[11:33] *** FROGGS joined
[11:34] <dogbert17> damn, you can't do anything without a bot picking it up :)

[11:35] <squashable6> 🍕 robertlemmen++ edited issue “intermittent "Bytecode v…”: https://github.com/rakudo/rakudo/issues/1711

[11:35] * dogbert17 wonders if https://github.com/rakudo/rakudo/issues/1654 is still present

[11:36] <AlexDaniel> dogbert17: you can – focus on testneeded tickets :P

[11:37] <squashable6> 🍕 AlexDaniel++ wrote a comment on “New stresstest floppers”: https://github.com/rakudo/rakudo/issues/1710#issuecomment-379543361

[11:39] <AlexDaniel> dogbert17: also, you can do something like

[11:39] <AlexDaniel> squashable6: shut up

[11:39] <squashable6> AlexDaniel, .oO( Mmmm… pizza! )

[11:39] <AlexDaniel> squashable6: be loud again

[11:39] <squashable6> AlexDaniel, ALRIGHT, LET'S DO IT!!!

[11:40] <jmerelo> :-)

[11:40] *** pierre_ joined
[11:40] <squashable6> 🍕 dogbert17++ wrote a comment on “New stresstest floppers”: https://github.com/rakudo/rakudo/issues/1710#issuecomment-379543561

[11:43] *** andrzejku left
[11:44] *** AlexDani` joined
[11:46] *** AlexDaniel left
[11:55] <squashable6> 🍕 dogbert17++ wrote a comment on “Fresh-clone builds fail …”: https://github.com/rakudo/rakudo/issues/1654#issuecomment-379544462

[11:55] *** AlexDani` is now known as AlexDaniel

[11:57] *** andrzejku joined
[12:08] *** lizmat joined
[12:15] *** FROGGS|m joined
[12:15] <Geth> ¦ roast: dogbert17++ created pull request #415: Add test for RT #127974

[12:15] <Geth> ¦ roast: review: https://github.com/perl6/roast/pull/415

[12:15] <dogbert17> tada

[12:15] <synopsebot> RT#127974 [open]: https://rt.perl.org/Ticket/Display.html?id=127974 [CONC] sprintf() not threadsafe/reentrant if the format tokens use explicit indices

[12:16] * dogbert17 was probably too late, i.e. no pizza

[12:21] *** FROGGS|m2 joined
[12:21] <jmerelo> squashable: time

[12:21] <squashable6> jmerelo, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Squashable

[12:21] <jmerelo> squashable6: status

[12:21] <squashable6> jmerelo, Next SQUASHathon in 25 days and ≈21 hours (2018-05-05 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:21] *** FROGGS|m left
[12:22] <jmerelo> dogbert17: you can still squash as many bugs as you lile :-)

[12:23] <dogbert17> jmerelo: you're right, and besides, too much pizza isn't good for you :-)

[12:24] <jmerelo> dogbert17: but I _love_ pizza!

[12:29] <AlexDaniel> dogbert17: that test does not seem to be good enough I think

[12:29] <AlexDaniel> dogbert17: see https://gist.github.com/Whateverable/9fce96abe24c92496515b0048e1ee073

[12:29] <AlexDaniel> dogbert17: it says “ok” on 2016.01.1

[12:32] <AlexDaniel> .tell [Coke] can you write a description for ｢new｣ label on https://github.com/perl6/doc/labels ? Because I think it's currently being misused often

[12:32] <yoleaux> AlexDaniel: I'll pass your message to [Coke].

[12:33] <jmerelo> AlexDaniel: I see there are some going back to 2017

[12:33] <jmerelo> AlexDaniel: I add it to new issues, and try to delete them one month later or so

[12:34] <jmerelo> I'll proceed to delete a few

[12:34] <AlexDaniel> jmerelo: yeah that's not what it was supposed to be I think. The idea was that ｢new｣ is for tickets which require entirely new text to be written, and ｢update｣ is when some text needs a tweak

[12:35] <jmerelo> AlexDaniel: Then you're right. A description is needed

[12:35] <AlexDaniel> interestingly, there was a time when we had *a lot* of labels, then we cleaned it up and we had just 4 or 5

[12:35] <jmerelo> AlexDaniel: actually, there's a description here https://github.com/perl6/doc/blob/master/CONTRIBUTING.md

[12:36] <AlexDaniel> now we have a lot of labels again :)

[12:36] <dogbert17> AlexDaniel: so lives-ok gave that a pass despite the messages?

[12:36] <AlexDaniel> jmerelo: IMO put these into github label descriptions, and throw away that section

[12:37] <AlexDaniel> dogbert17: yea

[12:37] <jmerelo> AlexDaniel: issue that

[12:37] <dogbert17> hmm, thought that would be a runtime error

[12:37] <AlexDaniel> … did someone rename ｢meta｣ to ｢style｣?

[12:38] <jmerelo> AlexDaniel: where?

[12:40] <AlexDaniel> jmerelo: okay: https://github.com/perl6/doc/issues/1909

[12:40] <AlexDaniel> jmerelo: doc repo, the black ｢style｣ label was previously ｢meta｣ I think

[12:40] *** pierre_ left
[12:40] *** dirtiestharp left
[12:41] *** dirtiestharp joined
[12:42] <jmerelo> AlexDaniel: thanks!

[12:42] <AlexDaniel> .tell [Coke] https://github.com/perl6/doc/issues/1909

[12:42] <yoleaux> AlexDaniel: I'll pass your message to [Coke].

[12:45] <jmerelo> AlexDaniel: I don't know if there's a log for activity in the repo to find out who did it, and maybe the reason why.

[12:48] <AlexDaniel> not a big deal

[12:54] *** jmerelo left
[12:58] *** domidumont left
[13:02] *** pierre_ joined
[13:03] <Geth> ¦ rakudo: ronaldxs++ created pull request #1712: Update 05-messages/03-errors.t simpler and clearer tests for RT#132238

[13:03] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/pull/1712

[13:03] <synopsebot> RT#132238 [resolved]: https://rt.perl.org/Ticket/Display.html?id=132238 [LTA] $<> and “Corresponding … was at line”

[13:29] <AlexDaniel> squashable6: log 2018-04-07

[13:29] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/454e1080b59a19e162658aecc16907b1

[13:31] <AlexDaniel> so we closed 21 this time compared to the previous testneeded squashathon when we closed 18

[13:31] <AlexDaniel> not bad at all in my opinion :)

[13:32] <AlexDaniel> also, 20 people touched roast and rakudo repos during these 50 hours

[13:32] <AlexDaniel> that's a lot

[13:33] <AlexDaniel> not that different from other squashathons though

[13:35] *** aborazmeh joined
[13:35] *** aborazmeh left
[13:35] *** aborazmeh joined
[13:36] <AlexDaniel> https://gist.github.com/7d7c5c796d5d48527faba749e03121e9

[13:36] <AlexDaniel> 35 tickets closed overall

[13:47] *** gabiruh left
[13:47] *** andrzejku left
[13:47] *** andrzejku joined
[13:47] *** gabiruh joined
[13:48] *** andrzejku left
[14:06] *** dirtiestharp left
[14:07] *** aborazmeh left
[14:11] *** dirtiestharp joined
[14:11] *** khisanth_ left
[14:16] *** skids joined
[14:19] *** jeek left
[14:19] *** jeek joined
[14:23] *** zakharyas joined
[14:23] *** khisanth_ joined
[14:28] <AlexDaniel> hmmm https://www.reddit.com/r/ProgrammerHumor/comments/8anhzt/my_codes_got_99_problems/

[14:30] *** pierre_ left
[14:31] <AlexDaniel> the second line in any of these can be changed to “I won't use Perl 6” :)

[14:41] *** jeek left
[14:41] *** jeek joined
[14:43] *** zakharyas left
[14:44] *** zakharyas joined
[14:51] *** jeek left
[14:51] *** jeek joined
[14:53] *** jeek left
[14:53] *** jeek joined
[14:58] *** araraloren left
[15:01] *** pierre_ joined
[15:01] *** jeek left
[15:01] *** jeek joined
[15:03] *** FROGGS|m2 left
[15:05] *** pierre_ left
[15:08] *** zakharyas left
[15:10] *** zakharyas joined
[15:11] *** andrzejku joined
[15:15] *** andrzejku left
[15:16] *** pierre_ joined
[15:33] *** xinming_ left
[15:34] *** xinming joined
[15:36] *** khw joined
[15:36] *** Sgeo left
[15:36] *** Sgeo joined
[15:38] *** lichtkind left
[15:46] *** mwhisenhunt joined
[15:47] *** RandalSchwartz joined
[15:48] <RandalSchwartz> rakudobrew build moar has been failing for a few days.  is this expected?

[15:48] <AlexDaniel> Ran

[15:48] <RandalSchwartz> fails at "Configuration FAIL"

[15:48] <AlexDaniel> RandalSchwartz: by any chance can it be this? https://alerts.perl6.org/alert/7

[15:49] <RandalSchwartz> lemme loook

[15:49] <RandalSchwartz> might be... lemme try the fix

[15:50] <APic> May the Schwartz be with You!

[15:51] <RandalSchwartz> Nope, still failed.

[15:51] <RandalSchwartz> Failed running /opt/local/bin/perl5.26 Configure.pl --backends=moar --gen-moar --git-reference="/Users/merlyn/MIRROR/rakudobrew-GIT/bin/../git_reference" --make-install  at /Users/merlyn/MIRROR/rakudobrew-GIT/bin/rakudobrew line 57.

[15:52] <RandalSchwartz> not really anything else other than "Command failed"

[15:53] <RandalSchwartz> anything else I can try?

[15:53] <RandalSchwartz> maybe git clean in the repo?

[15:53] <timotimo> buggable: sauce

[15:53] <timotimo> huggable: sauce

[15:53] <huggable> timotimo, Install latest version of Rakudo from source: https://github.com/zoffixznet/r#table-of-contents

[15:54] <timotimo> RandalSchwartz: ^- better than rakudobrew unless you're a core developer who wants to switch rakudo multiple times per hour

[15:55] *** jmerelo joined
[15:55] <RandalSchwartz> so many years ago, I was building from the rakudo git, then I was told to use rakudobrew, and now it's something different again? :)

[15:55] *** mwhisenhunt left
[15:56] <timotimo> yes, one of the things problematic about rakuodbrew is you just get whatever's up on git at that moment

[15:56] <jmerelo> RandalSchwartz: Hi! You can use rakudobrew. I use rakudobrew. It's OK for developers. The rationale behind this discouragement has more to do with first time users than with everyone

[15:56] <timotimo> also, i can't help but repeat this funny anecdote all the time

[15:57] <timotimo> at one point, rakudobrew switch used rm -rf ~/.rakudobrew/bin/* (or similar) to clean everything before it creates the shell scripts and links again

[15:57] <timotimo> and someone decided to symlink that to their /usr/bin or some other system-wide bin folder

[15:57] <jmerelo> I like it, anyway. I have HEAD if I need it and monthlies if I want that. But Rakudo Star is what we're encouraging now. 

[15:57] <jmerelo> timotimo: wow

[15:58] <timotimo> that was at least two years ago

[15:59] <RandalSchwartz> and I build rakudo star from the zoffixnet github?

[15:59] <timotimo> it automatically gives you the latest released tag

[15:59] <timotimo> so you'll get newer than rakudo star

[15:59] <timotimo> but not bleading edge, which isn't guaranteed to not crash

[16:00] <jmerelo> RandalSchwartz: you can also download Debian/Ubuntu packages and a docker containers. We have the whole nine yards.

[16:00] <timotimo> huggable: packages

[16:00] <huggable> timotimo, CentOS, Debian, Fedora and Ubuntu Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[16:00] <timotimo> this also has alpine linux apks

[16:00] <jmerelo> timotimo: right. Thanks!

[16:01] <timotimo> there's even something there for windows subsystem for linux

[16:02] <jmerelo> BTW, there's also rakudup now. https://rakudup.github.io/

[16:02] <RandalSchwartz> well, since I don't run linux anywhere..

[16:02] <timotimo> if you're on mac, we do have rakudo star .dmg installers, don't we?

[16:02] <timotimo> and for windows, see above :)

[16:03] <jmerelo> Baseline is: you can't go wrong with rakudo star, rakudobrew is probably OK for most users (including me), there are binary versions for most OSs if you want that.

[16:03] <RandalSchwartz> except that rakudobrew is failing

[16:03] <RandalSchwartz> for the past few days

[16:03] <jmerelo> RandalSchwartz: is it?

[16:03] <RandalSchwartz> yes... see above

[16:03] <timotimo> yeah, that's what he came to tell us

[16:04] <jmerelo> OK, I'll go to the log. I came in the middle of the conversation.

[16:04] <timotimo> what you pasted was really all output there was?

[16:04] <RandalSchwartz> yeah, failed

[16:04] <RandalSchwartz> no details

[16:04] <RandalSchwartz> I would recognize details :)

[16:04] <RandalSchwartz> I am a bit familiar with programming. :)

[16:04] <timotimo> you should be able to cd into the folder it would have used to build stuff in

[16:04] <timotimo> i did not mean to imply, sorry

[16:04] <RandalSchwartz> hehe

[16:04] <RandalSchwartz> perfectly ok

[16:05] <RandalSchwartz> it's just funny when support people start asking me questions

[16:05] <RandalSchwartz> and I say, well, I've already done a traceroute, and I suspect it's your router

[16:05] <timotimo> sir, have you tried removing the plug and rotating it 180 degrees?

[16:05] <RandalSchwartz> for 3-prong plugs, that's hard. :)

[16:06] <jmerelo> I built HEAD a couple of days ago...I think I have perl 5.22... could that be a Perl error?

[16:06] <timotimo> european engineering at its finest

[16:06] <timotimo> anyway, if you cd into the folder rakudobrew was trying to use to build your stuff, you can try invoking "perl Configure.pl --gen-moar" manually and seeing if that also fails

[16:07] <timotimo> that should allow for more fine-grained failure diagnostics

[16:07] <jmerelo> RandalSchwartz: BTW, big admirer here. I bought one of the tees after the 1995 incident, with the names on it. 

[16:07] <timotimo> if rakudobrew outputs the commands it issues maybe you'll also see the --prefix it was trying to use

[16:08] <RandalSchwartz> ok lemme try that

[16:10] <RandalSchwartz> this is what's failing: Command failed (status 256): /opt/local/bin/perl5.26 Configure.pl --optimize --prefix=/Users/merlyn/MIRROR/rakudobrew-GIT/moar-master/install --make-install

[16:10] <RandalSchwartz> what dir am I in?

[16:10] <jmerelo> It's failing also for me now

[16:10] <RandalSchwartz> heh

[16:10] <RandalSchwartz> not just me then

[16:11] <jmerelo> perl 5.20 in my case.

[16:11] *** andrzejku joined
[16:11] *** pierre_ left
[16:12] <RandalSchwartz> 5.26 for me

[16:12] <jmerelo> But it does say something about the libatomic thingie, so it might have something to do with the alert Alex Daniel mentioned before

[16:12] <timotimo> which Configure.pl is this, rakudo's? can you tell if it's one of the sub-project's configures that it should be calling?

[16:12] <jmerelo> This https://alerts.perl6.org/alert/7

[16:12] <RandalSchwartz> I tried deleting that

[16:13] <RandalSchwartz> at least one of them.  there were multiple ones

[16:13] <jmerelo> No way, right?

[16:13] <RandalSchwartz> what's the git clean that resets everything back to HEAD?

[16:13] <timotimo> git reset --hard

[16:13] <timotimo> but you might have to manually delete the folder anyway

[16:13] <RandalSchwartz> no, that doesn't remove build products

[16:14] <timotimo> oh, true

[16:14] <timotimo> git clean -xdf or something?

[16:14] <RandalSchwartz> too early in the morning to remember the incantation

[16:14] <RandalSchwartz> yeah, that might be it

[16:14] <jmerelo> It's working now...

[16:14] <timotimo> i *think* this one won't be fixed by a clean, though

[16:14] <jmerelo> rm -rf /home/jmerelo/.rakudobrew/moar-HEAD/nqp/MoarVM/3rdparty/ was the thing

[16:14] <timotimo> or only if git clean descends into submodules maybe?

[16:14] <RandalSchwartz> yeah, that didn't help

[16:15] <timotimo> we had code in a folder for a while, then changed the folder to be a submodule instead

[16:15] <jmerelo> I deleted _the whole_ 3rd party directory, not just the libatomic one

[16:16] <jmerelo> It's working now...

[16:16] <jmerelo> And it took shorter than usual: "Rakudo has been built and installed.

[16:17] <jmerelo> perl6 -v now returns "This is Rakudo version 2018.03-189-g9bcc8e523 built on MoarVM version 2018.03-59-gfc1bb3126"

[16:18] <jmerelo> ... which is HEAD right now... https://github.com/rakudo/rakudo/commit/9bcc8e523e72e137db10e1b5f01ed9116d33ac2f

[16:18] <RandalSchwartz> Ahh... rm -rf **/*3rd*

[16:18] <RandalSchwartz> and now it seems to be building

[16:18] <jmerelo> RandalSchwartz: :-)

[16:21] <RandalSchwartz> Done, moar-master built

[16:21] <RandalSchwartz> This is Rakudo version 2018.03-189-g9bcc8e523 built on MoarVM version 2018.03-75-g156a7a6ff

[16:21] <RandalSchwartz> Mine is newer!

[16:22] * RandalSchwartz carefully pets his shiny new perl6

[16:22] <jmerelo> :-) MoarVM is newer, that's right. I'll have to update that... 

[16:22] <RandalSchwartz> OK, so I'll have to add that to my daily build script

[16:23] <RandalSchwartz> the rm -rf :)

[16:23] <jmerelo> RandalSchwartz: that always helps keep everything clean and tidy :-)

[16:23] <timotimo> you'll only need to do that every few years

[16:23] <RandalSchwartz> well, the git fetch will restore those tomorrow

[16:25] *** wamba left
[16:25] <timotimo> the 3rdparty stuff is fetched by the Configure.pl that moarvm runs

[16:26] <RandalSchwartz> ahh, ok

[16:26] <timotimo> without them your moarvm build is not likely to succeed

[16:27] *** wamba joined
[16:27] <jmerelo> How can I update the MoarVM version? 

[16:28] <timotimo> rakudobrew will by default only take the version that we require

[16:28] <timotimo> rakudobrew triple master master master should give you whatever's absolutely latest

[16:29] <jmerelo> timotimo: it's deleting 3rdparty/ all by itself...

[16:29] <jmerelo> timotimo++

[16:31] <jmerelo> Well, that failed...

[16:34] *** xinming left
[16:34] *** xinming joined
[16:35] <jmerelo> This is Rakudo version 2018.03-189-g9bcc8e523 built on MoarVM version 2018.03-96-gfa167464a

[16:36] <jmerelo> RandalSchwartz: well, who's got the newest Perl 6 now? :-)

[16:36] <jmerelo> Now, I'll benchmark the evolutionary algorithms again :-)

[16:38] <lizmat> jmerelo: if you have a --profile output, I'm willing to have a look at that  :-)

[16:38] *** dirtiestharp left
[16:39] *** dirtiestharp joined
[16:39] <jmerelo> lizmat: I will give you one in a moment.

[16:39] <lizmat> okido

[16:42] *** avalenn left
[16:43] <jmerelo> lizmat: crossover now has improved a lot. Not too much for small sizes, but it's 60% faster now for reasonable sizes.

[16:44] <timotimo> how did that happen :) :)

[16:44] <jmerelo> timotimo: it happened by Perl 6 having the most amazing team of developers there is out there :-)

[16:45] <timotimo> there's always some way to improve

[16:46] <timotimo> for example, i need to figure out how to see unanswered pull requests on all my own github repositories

[16:47] *** domidumont joined
[16:47] <timotimo> i bet there's been a pull request or two open for months and i just didn't see it out of the >2k github notifications that have piled up again >:(

[16:47] <jmerelo> lizmat: here's the profile http://jj.github.io/perl6eo/profile-1523205705.686118.html

[16:47] <timotimo> now that's interesting. how come push-all and push aren't getting jitted there?

[16:48] * lizmat will looks after she's moved to the terrace

[16:49] <jmerelo> timotimo: you can have them sent to a Slack channel so that now there's double chance you don't see it among the >2k notifications from Slack channels 

[16:50] <timotimo> it should be trivial to just put a search query in github ...

[16:50] <jmerelo> timotimo: BTW, thanks a lot with that. With everything, in general :-)

[16:51] *** domidumont left
[16:51] <jmerelo> timotimo: maybe have them go to their very own tab in GMail...

[16:51] <timotimo> i have a folder in my thunderbird that has all github messages in it

[16:51] *** mniip left
[16:51] <timotimo> it currently has 5.3k unread

[16:52] <timotimo> though surely i could filter out the names of my own repos

[16:53] <jmerelo> lizmat: Sorry to say I was comparing it to the string version. It's still faster, though, and scales much better with size. For chromosomes size 4096 it's 30% faster

[16:54] *** domidumont joined
[16:54] <jmerelo> timotimo: wow. It's probably better to delete them all and start with a blank slate :-)

[16:56] <jmerelo> lizmat: still the slowest of the bunch, but now only 4x slower than C++, while before it was 5x slower. 

[16:56] *** mniip joined
[16:58] <jmerelo> timotimo: any advice from the profiler on the implementation you can give? I can't really make head or tails of it. To try and avoid push-until-lazy?

[16:58] *** lizmat_ joined
[16:58] <timotimo> the exclusive time is usually more interesting

[16:58] *** lizmat left
[16:59] <timotimo> List.pm6:1100 is not being jitted and it has push from Array.pm6 inlined into it, which therefore also doesn't get jitted

[16:59] <timotimo> that could be interesting

[16:59] <timotimo> could you run the code with the env variable MVM_JIT_LOG set to some filename, and put the file up somewhere?

[16:59] <jmerelo> timotimo: sure

[17:03] *** mniip left
[17:05] *** lizmat joined
[17:05] *** zakharyas left
[17:06] *** mniip joined
[17:06] *** lizmat_ left
[17:07] <jmerelo> timotimo: here you go https://raw.githubusercontent.com/JJ/perl6eo/master/jit.log

[17:09] *** zakharyas joined
[17:11] <lizmat> .oO( flaky wifi on the terrace, 4G much more reliable out here )

[17:11] *** kurahaupo_ joined
[17:12] <timotimo> looks like floor_n might cause this to be jitted. why does it try to floor_n in the first place, i wonder

[17:13] *** kurahaupo left
[17:14] <timotimo> ah, it's the iterator of roll

[17:15] <jmerelo> bad, bad roll iterator

[17:15] <lizmat> jmerelo: using floor_n here is probably the reason it got so much faster

[17:16] <timotimo> yo jmerelo how's your x86_64 assembly? :)

[17:16] <jmerelo> timotimo: between zero and nonexistent

[17:17] <jmerelo> timotimo: both my daughters have it in class, but I think they mostly hate it.

[17:18] <timotimo> x86 assembly is a very natural thing to despise

[17:18] <jmerelo> timotimo: :-) it really is. Sorry can't be of help in that department

[17:18] <lizmat> I used to be fluent in 8086  :-(

[17:18] <mst> the only assembly I've ever got on with was arm26

[17:18] <timotimo> nah, it's fine

[17:19] <timotimo> i wonder, is there a notable difference between coerce_ni and floor_n?

[17:19] <lizmat> but that's at least 25 years agi

[17:19] <timotimo> coerce_ni uses cvttsd2si

[17:19] * lizmat looks up coerce_ni

[17:20] <timotimo> oh, neat, konsole lets me select something and the right click menu has a "search for $x with" -> "google"

[17:20] <timotimo> m: use nqp; say nqp::coerce_ni(0.1e2)

[17:20] <camelia> rakudo-moar 9bcc8e523: OUTPUT: «===SORRY!===␤No registered operation handler for 'coerce_ni'␤»

[17:20] <timotimo> right, we don't expose this one

[17:21] <lizmat> right  

[17:21] <timotimo> how exactly does the truncation cvttsd2si does match what floor_n does?

[17:22] <timotimo> i think it might actually be what we need

[17:23] <lizmat> if it doesn't round, I think you may be right :-)

[17:24] <timotimo> well, there's still the question of "floor towards -inf" and "floor towards 0"

[17:24] <El_Che> lizmat: you need one of these: https://www.ubnt.com/unifi/unifi-ap-ac-pro/

[17:24] <timotimo> m: say floor(-19.9e0)

[17:24] <camelia> rakudo-moar 9bcc8e523: OUTPUT: «-20␤»

[17:24] <timotimo> m: say floor(19.9e0)

[17:24] <camelia> rakudo-moar 9bcc8e523: OUTPUT: «19␤»

[17:25] <lizmat> El_Che: probably, but for our new house

[17:25] <El_Che> lizmat: I remember now

[17:25] <timotimo> um, huh.

[17:25] <lizmat> timotimo ?

[17:26] <timotimo> for some reason i get NaN there

[17:26] *** kurahaupo_ left
[17:26] *** andrzejku left
[17:26] <timotimo> oh, wait, is floor_n supposed to give you a num back?

[17:26] <timotimo> it is.

[17:26] *** kurahaupo joined
[17:27] <timotimo> what we need is just roundsd

[17:28] <lizmat> que?

[17:28] <lizmat> rounded would not produce a uniform distribution *and* out of bounds values ?

[17:32] <timotimo> how do you mean?

[17:32] *** sno joined
[17:34] <lizmat> if we're making random ints between 0..N and we're rounding the nqp::rand_n value

[17:35] <lizmat> you will underrepresent values < 0.5 and also give N as a possible value (which you shouldn't)_

[17:35] <timotimo> anyway, we now jit floor_n :)

[17:35] <lizmat> whee! 

[17:36] *** domidumont left
[17:36] *** domidumont joined
[17:37] <timotimo> m: my @all-values = ^100 .roll(1_000_000); say @all-values.grep(0).elems; say @all-values.grep(10).elems;

[17:38] <camelia> rakudo-moar 9bcc8e523: OUTPUT: «10031␤10036␤»

[17:38] <timotimo> m: my @all-values = ^1000 .roll(10_000_000); say @all-values.grep(0).elems; say @all-values.grep(10).elems;

[17:38] *** domidumont left
[17:38] <camelia> rakudo-moar 9bcc8e523: OUTPUT: «(timeout)»

[17:38] *** kurahaupo left
[17:38] <timotimo> a bit too much, eh?

[17:38] <timotimo> m: my @all-values = ^1000 .roll(3_000_000); say @all-values.grep(0).elems; say @all-values.grep(10).elems;

[17:39] *** kurahaupo joined
[17:39] <camelia> rakudo-moar 9bcc8e523: OUTPUT: «3075␤2977␤»

[17:39] *** domidumont joined
[17:41] *** |oLa| joined
[17:42] <MasterDuke> m: say ^100 .roll(1_000_000).Bag.minmax(*.value)

[17:42] <camelia> rakudo-moar 9bcc8e523: OUTPUT: «7 => 9782..2 => 10280␤»

[17:45] <b2gills> RandalSchwartz: Have you been watching Perl 6 development in recent years? For example react/whenever was added somewhat recently.

[17:48] <timotimo> turns out it takes a little while to get 100_000_000 numbers bagged up

[17:48] <timotimo> though i think since the memory keeps growing it might not actually be bagging it very good

[17:49] <lizmat> could be it's vivifying a complete list of 1M elems first

[17:49] *** kurahaupo left
[17:50] *** kurahaupo joined
[17:50] <lizmat> hmmm...not, should not

[17:51] <timotimo> my $bag = bag ^1000 .roll(100_000_000); say $bag{0, 1, 2, 3}

[17:52] <timotimo> the best way would have been to keep a running tally and output it regularly

[18:00] *** domidumont1 joined
[18:02] *** Kaiepi left
[18:02] <lizmat> one of the reasons jmerelo is allocating so much, is because it's creating Scalars for the values in the arrays

[18:02] *** espadrine_ joined
[18:02] <lizmat> however, the values in the array never change

[18:02] <lizmat> so technically, they wouldn't need a Scalar container

[18:03] *** kurahaupo left
[18:03] *** domidumont left
[18:03] *** kurahaupo joined
[18:03] <timotimo> yeah, in that case don't assign into an array ;)

[18:04] *** |oLa| left
[18:05] <Geth> ¦ doc: 6e1318831e | (JJ Merelo)++ | README.md

[18:05] <Geth> ¦ doc: Minor edits to README.md

[18:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6e1318831e

[18:05] <Geth> ¦ doc: ed5cda5579 | (JJ Merelo)++ | highlights/package.json

[18:05] <Geth> ¦ doc: Address warnings about the package.json file

[18:05] <Geth> ¦ doc: 

[18:05] <Geth> ¦ doc: Which probably does not fix #1910, but it helps anyway.

[18:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ed5cda5579

[18:05] <Geth> ¦ doc: 2ae9ffc45d | (JJ Merelo)++ | README.md

[18:05] <Geth> ¦ doc: Eliminates wishlist stuff closes #1908

[18:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2ae9ffc45d

[18:06] *** Guest18 joined
[18:07] <jmerelo> lizmat: how can I address that?

[18:07] <timotimo> probably assign into a $ container and use .List at the end so you don't just take the Seq

[18:08] <MasterDuke> is there a way to clean up/close/garbage collect the threads started because of a .race?

[18:09] <Geth> ¦ rakudo: a53811cd4d | (Elizabeth Mattijsen)++ | tools/build/NQP_REVISION

[18:09] <Geth> ¦ rakudo: Bump NQP to get the nqp::floor_n jitting

[18:09] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/a53811cd4d

[18:09] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.03-65-g9b75f67...2018.03-72-gf79f0ce

[18:10] <lizmat> MasterDuke: nqp::force_gc ?

[18:11] *** andrzejku joined
[18:11] <jmerelo> timotimo: can't use splice then... 

[18:11] <lizmat> timotimo: that's not to simple, you can't use splice on a List

[18:11] <lizmat> *so

[18:12] <MasterDuke> lizmat: doesn't seem to help, actually seems to make it worse

[18:12] <lizmat> jmerelo: are you really married to Bools ?  Could you work with 0 and 1 instead ?

[18:12] <jmerelo> lizmat: I can get rid of that, but I seem to remember that sped up things a list...

[18:12] <jmerelo> lizmat: (thinking of a joke to answer to that)

[18:12] <jmerelo> lizmat: (nope, nothing comes up)

[18:12] <lizmat> well, looking at that now

[18:13] <lizmat> jmerelo: fwiw, with floor_n jitted now, your program became about 5% faster for me

[18:13] <jmerelo> lizmat: random generation in Bools was much faster than for ints... Why should, in this case, changing to Ints help? I can see it in the case of the count-ones benchmarks, but not really here.

[18:13] <jmerelo> lizmat: that's great. Everything helps. Thanks!

[18:14] <lizmat> well, I feel mative ints *should* be faster

[18:14] <jmerelo> lizmat: checking now

[18:15] <lizmat> jmerelo: they're not

[18:15] <lizmat> figuring out why they're not  :-)

[18:16] *** kurahaupo left
[18:16] <jmerelo> lizmat: Right, they are faster. But just slightly so. I'm using (0,1).roll instead of Bool.roll.

[18:16] <jmerelo> lizmat: it's going to make count-ones really faster.

[18:16] *** kurahaupo joined
[18:17] <MasterDuke> (re jmerelo's code, not my .race question) i think i also tried using a Buf, but that wasn't any faster

[18:17] <jmerelo> MasterDuke++

[18:19] <MasterDuke> (back to my .race question) `/usr/bin/time perl6-m -e 'for ^10_000 { (^100).race(batch=>1).map({ $_ }).List }'` uses 645140maxresident

[18:20] <MasterDuke> but `/usr/bin/time perl6-m -e 'use nqp; for ^10_000 { (^100).race(batch=>1).map({ $_ }).List; nqp::force_gc() if $_ %% 1_000 }'` uses 923220maxresident

[18:20] <jmerelo> c: Bool.roll(10_000) ||| Bool.roll xx 10_0000 ||| (0,1).roll(10_000) ||| (0,1).roll xx 10_000

[18:20] <committable6> jmerelo, ¦Bool.roll(10_000): «Cannot find this revision (did you mean “0111f10”?)»

[18:21] <jmerelo> c: HEAD Bool.roll(10000) ||| Bool.roll xx 10000 ||| (0,1).roll(10000) ||| (0,1).roll xx 10000

[18:21] <committable6> jmerelo, ¦HEAD(a53811c): «»

[18:21] <MasterDuke> jmerelo: you probably mean, bench:

[18:21] <jmerelo> bench: HEAD Bool.roll(10000) ||| Bool.roll xx 10000 ||| (0,1).roll(10000) ||| (0,1).roll xx 10000

[18:21] <benchable6> jmerelo, starting to benchmark the 1 given commit

[18:21] <benchable6> jmerelo, ¦HEAD: «0.1444»

[18:21] <jmerelo> MasterDuke++

[18:21] <MasterDuke> and 'compare'

[18:22] <jmerelo> bench: HEAD compare Bool.roll(10000) ||| Bool.roll xx 10000 ||| (0,1).roll(10000) ||| (0,1).roll xx 10000

[18:22] <benchable6> jmerelo, starting to benchmark the 1 given commit

[18:22] <benchable6> jmerelo, ¦HEAD: ««run failed, exit code = 1, exit signal = 0»»

[18:23] <Geth> ¦ rakudo: d9869e53b5 | (Elizabeth Mattijsen)++ | src/core/Array.pm6

[18:23] <Geth> ¦ rakudo: Mark reification target .push / .append as --> Nil

[18:23] <Geth> ¦ rakudo: 

[18:23] <Geth> ¦ rakudo: Hopefully that will mean they optimize better in the future

[18:23] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/d9869e53b5

[18:24] <jmerelo> bench: compare HEAD Bool.roll(10000) ||| Bool.roll xx 10000 ||| (0,1).roll(10000) ||| (0,1).roll xx 10000

[18:24] <benchable6> jmerelo, starting to benchmark the 1 given commit

[18:24] <benchable6> jmerelo, https://gist.github.com/06c3413d371079365f1f6d90ef5237f1

[18:24] *** MilkmanDan left
[18:27] *** Guest18 left
[18:28] *** andrzejku left
[18:29] *** Guest18 joined
[18:30] *** Cleverson joined
[18:31] *** kurahaupo left
[18:31] <Cleverson> Hello, is there a place to request new modules or vote for wanted modules? I've located only a text file listing the most wanted modules.

[18:31] *** kurahaupo joined
[18:32] <jmerelo> Cleverson: do you mean this? https://github.com/perl6/perl6-most-wanted

[18:32] *** andrzejku joined
[18:33] <moritz> well, you could state your wish(es) here

[18:33] <yoleaux> 10:55Z <jmerelo> moritz: I still need the docs.per6.org website logs, or the public ones updated, to search for 404s and, if possible, referrers to them.

[18:35] <moritz> jmerelo: how would you like to get them? 153MB as a compressed tarball

[18:36] <jmerelo> moritz: do you have some way to process them in finer grain, like monthly or so, using the program you already use? The problem is that current statistics are from forever

[18:36] <jmerelo> moritz: I mean these http://www.p6c.org/stats/doc.perl6.org#Pageviews%20per%20visit

[18:36] *** andrzejku left
[18:37] <Cleverson> jmerelo: Hi, I had found the most wanted listing, thanks for informing the URL of the entire repo. I'd like basically two functionalities which seems still lacking...

[18:37] <jmerelo> moritz: for the time being I'm mainly interested in having this http://www.p6c.org/stats/doc.perl6.org#404%20Errors by month. Or for the last few months.

[18:37] *** andrzejku joined
[18:38] <jmerelo> Cleverson: just shoot. This place is as good as any other...

[18:38] <jmerelo> Cleverson: besides, I'm not sure people is really checking that repo on a daily, or even monthly, basis.

[18:38] <Cleverson> First, a way to control the entire keyboard on a terminal, so that I could for example get every key press on the keyboard, and take an action depending on the key or key sequence.

[18:39] <Cleverson> The other I'd like is a simpler audio module to play and stop sound files, simpler than the already existing portAudio module.

[18:41] <jmerelo> Cleverson: best way to do that is to start yourself... :-) WRT the second one, you'll probably get more mileage if you post issues on the existing module.

[18:41] <moritz> jmerelo: http://www.p6c.org/stats/doc.perl6.org.recent

[18:41] <jmerelo> moritz++

[18:41] *** kurahaupo left
[18:42] *** andrzejku left
[18:42] <jmerelo> off to dinner o/ See you tomorrow!

[18:42] *** kurahaupo joined
[18:42] *** jmerelo left
[18:42] *** darutoko left
[18:43] *** Zoffix joined
[18:44] *** Skarsnik joined
[18:44] *** Skarsnik left
[18:46] *** andrzejku joined
[18:46] <Zoffix> .tell jmerelo FWIW, the discouragement against rakudobrew isn't just first time users. It introduces a bug with USAGE. It is known to introduce precomp bugs. It builds random dev commit instead of a release. It requires running a command after installing any binary. And it requires reinstalling modules after each update, which isn't needed anymore for rakudo.

[18:46] <yoleaux> Zoffix: I'll pass your message to jmerelo.

[18:47] <robertle> Zoffix: which reminds me of a question I had: is there a way to tell whether precompiled stuff needs re-compiling after upgrading moar+nqp+rakudo?

[18:48] <Zoffix> robertle: after moarvm it doesn't. The rest, I don't know. Ask nine++

[18:48] <robertle> so you are saying that no moarvm update will require a recompilation? ever?

[18:49] <Zoffix> robertle: dunno, but I don't have to recompile rakudo/nqp when I make changes to moarvm, so I guess stuff doesn't need recompilation

[18:50] *** andrzejku left
[18:50] <robertle> and will ask nine++ of course! the root of the question is how to package perl6 modules foer debian. there seem to be two ideas so far: either only ship the raw sources and compile on installation, plus recompile on (certain) upgrades of moar/nqp/rakudo

[18:50] <robertle> or ship the precopmpiled files with the sourc

[18:51] <robertle> es and rebuild the whole ecosystem when (certain) moar/nqp/rakudo upgrades do happen

[18:51] <lizmat> robertle: how about just shipping the precomped files ?

[18:51] <robertle> neither sound great

[18:51] <robertle> lizmat: right, the problem is that you need to rebuild the whole ecosystem, and guarantee that they get installed together. so very tight coupling of dependencies. essentially you turn the whole ecosystem into one big package

[18:52] *** kurahaupo left
[18:52] *** Cleverson left
[18:52] <robertle> recompiling on the target system when moar/nqp/rakudo get updated avoids that, but of course wastes cycles and has some intereting race conditions as well

[18:52] <Zoffix> robertle: FWIW, I don't need to recompile any modules **manually** when I upgrade rakudo. It figures out they need recompilation and recompiles them automatically.

[18:52] <robertle> plus, in both cases, it is unclear how long-running programs would be handled

[18:53] <robertle> Zoffix: ah! the problem with that is that it then needs to put the precompiled stuff in you homedir, because you can't write to /usr/lib/perl6 or whatever

[18:53] <Zoffix> probably

[18:53] <robertle> so we would duplicate the precompiled stuff for each user...

[18:54] <robertle> a can of worms, but apparently it's the same for other languages that do on-the-fly precompilation. (python, haskell)

[18:56] *** andrzejku joined
[18:56] <robertle> there would be some ways to make this easier for distributions: if there was a way to know that a moar/nqp/rakudo combination is incompatible with another one, that

[18:57] <robertle>  would be a great start. then we would only need to do the recompilation in the rarer cases (helps in both scenarios)

[18:58] *** zakharyas left
[18:59] <robertle> is the whole precompilation a rakudo, an nqp or a moar thing anyway? I somehow assumed it would be a moar thing, but thinking about it now I am not so sure anymore...

[18:59] *** zakharyas joined
[19:00] <geekosaur> rakudo, but it generates something appropriate for the backend

[19:00] <robertle> k, thanks!

[19:01] *** Guest18 left
[19:01] *** kurahaupo joined
[19:01] <robertle> do you think there is a way to tell whether the

[19:01] *** athenot joined
[19:01] <robertle>  way rakudo stores these has changed? there must be, after all rakudo can tell when loading them. is there a version or so embedded?

[19:03] <Zoffix> Fairly sure each rakudo version change requires recompilation.

[19:03] <geekosaur> it'll be somewhere in the CompUnitRepo stuff but I don't think that's exposed as such

[19:04] <robertle> ok, I'll do some digging!

[19:05] *** domidumont1 left
[19:10] *** Zoffix left
[19:10] *** MilkmanDan joined
[19:16] *** kurahaupo left
[19:16] *** kurahaupo joined
[19:18] *** Guest18 joined
[19:19] *** renormalist joined
[19:22] *** andrzejku left
[19:23] *** MilkmanDan left
[19:25] *** lizmat_ joined
[19:26] *** MilkmanDan joined
[19:27] *** lizmat left
[19:28] *** kurahaupo left
[19:29] *** kurahaupo joined
[19:30] *** andrzejku joined
[19:31] *** Guest18 left
[19:34] *** sena_kun left
[19:34] *** sena_kun joined
[19:39] *** kurahaupo left
[19:40] *** kurahaupo joined
[19:44] *** sena_kun left
[19:44] *** avalenn joined
[19:49] *** kurahaupo left
[19:55] *** khw left
[19:56] <timotimo> (100123 99647 99620 100327)

[19:57] <timotimo> MasterDuke: it would be possible to signal to threads to shut themselves down

[19:58] *** Kaiepi joined
[19:58] <MasterDuke> but that's NYI?

[19:58] <timotimo> yup

[20:00] *** andrzejku left
[20:03] <MasterDuke> timotimo: would you expect the code i pasted to just keep creating threads or reuse them?

[20:04] *** andrzejku joined
[20:04] <timotimo> where was that?

[20:05] <MasterDuke> 'for ^10_000 { (^100).race(batch=>1).map({ $_ }).List }'

[20:05] <timotimo> shouldn't just keep creating threads. you can set RAKUDO_SCHEDULER_DEBUG and see what it's thinking

[20:07] <MasterDuke> just "created initial...", "supervisor started", "sup thinks there are 4 cores"

[20:08] <MasterDuke> lizmat_: how do i use RAKUDO_REPORT_COLUMNS? `RAKUDO_REPORT_COLUMNS=tcd perl6 -Msnapper -e '<...>'` gives `Some exceptions were thrown in END blocks:   X::AdHoc: Cannot unbox a type object (Any) to a str.`

[20:09] * lizmat_ checks

[20:09] *** lizmat_ is now known as lizmat

[20:10] <lizmat> MasterDuke: any particular code I should run?

[20:11] <timotimo> MasterDuke: if that's the output, it shouldn't be creating threads

[20:11] <MasterDuke> lizmat: what i pasted for timotimo immediately above 

[20:12] <lizmat> ah, ok, checking

[20:12] <MasterDuke> timotimo: heaptrack seemed to suggest that the leak (or maybe just the large amount of mem allocated) was from thread cloning/pthread creations/something like that

[20:13] *** andrzejku left
[20:14] <lizmat> MasterDuke: looks like there's no tcd data and it's not protected against that

[20:14] <lizmat> could you file an issue pls?

[20:15] <MasterDuke> k

[20:16] <timotimo> um, huh.

[20:16] *** dirtiestharp left
[20:16] <timotimo> make: *** No rule to make target '3rdparty/uthash.h', needed by 'src/main.o'.  Stop.

[20:16] <timotimo> how did i mess this up?

[20:17] *** dirtiestharp joined
[20:17] *** andrzejku joined
[20:17] <timotimo> oh, haha

[20:17] <timotimo> i rm -rf'd 3rdparty, it did not like that

[20:20] <MasterDuke> lizmat: https://github.com/rakudo/rakudo/issues/1714

[20:21] <lizmat> MasterDuke++  # will look at it soon

[20:21] *** andrzejku left
[20:22] *** dirtiestharp left
[20:23] <robertle> lizmat: do you have some benchmarks that you use to drive your perf improvements? or some other method to find worthwhile targets?

[20:23] *** khw joined
[20:23] *** andrzejku joined
[20:23] <lizmat> well, these last ones were inspired by jmerelo's benchmarks

[20:24] <lizmat> I thought that using native int arrays should be a lot faster

[20:24] <lizmat> but alas, it was way slower

[20:24] <lizmat> so I am delving in that area at the moment

[20:24] <lizmat> with relatively low hanging fruit for me

[20:24] <buggable> New CPAN upload: ANTLR4-Grammar-0.5.2.tar.gz by JGOFF https://cpan.metacpan.org/authors/id/J/JG/JGOFF/Perl6/ANTLR4-Grammar-0.5.2.tar.gz

[20:24] <lizmat> so targeting is really by what people notice as being slow

[20:25] <robertle> understood, thanks!

[20:27] *** domidumont joined
[20:31] *** zakharyas left
[20:32] *** lichtkind_ joined
[20:32] *** domidumont left
[20:44] <timotimo> MasterDuke: i've begun implementing a "kill a worker" thing

[20:45] <MasterDuke> oooh, nice

[20:45] <moritz> the unions might not like that

[20:45] *** lichtkind_ is now known as lichtkind

[20:47] <timotimo> unions are bad for my plans to become a billionaire by benefiting from other's work and barely reimbursing them sufficiently for feeding themselves and their family

[20:52] <timotimo> not entirely sure how exactly which part should be responsible for what

[20:53] <El_Che> Perl 6 will not have threading problems but a workers' revolt

[20:54] <lichtkind> timotimo, was great chatting with you unfortunately was not as much time

[20:54] <lizmat> lichtkind o/

[20:54] <timotimo> true

[20:54] <timotimo> your exam is tomorrow?

[20:55] <lichtkind> common people no communist propagande here this killed already enough worker

[20:55] <lichtkind> timotimo, you memorized correctly

[20:55] <timotimo> i'll be hoping for your success

[20:55] <lichtkind> thank you

[20:56] <lichtkind> yes even today i mostly coded in perl 6 :)

[20:56] <lichtkind> and even got some interesting possibilty propaganda wise but wil tell if something really happens

[20:56] <lichtkind> lizmat, cheers

[20:59] *** TEttinger joined
[21:00] *** athenot left
[21:08] *** khw left
[21:08] *** khw joined
[21:12] <AlexDaniel> Zoffix: fwiw “it requires reinstalling modules after each update, which isn't needed anymore for rakudo” I don't think that's true, at least I don't do that

[21:13] <AlexDaniel> precomp takes some time after updating though

[21:14] *** wamba left
[21:22] *** andrzejku left
[21:26] *** FROGGS left
[21:38] *** robertle left
[21:49] *** rindolf left
[22:00] *** Zoffix joined
[22:07] *** Guest18 joined
[22:07] *** Sgeo_ joined
[22:09] *** Sgeo left
[22:10] <Zoffix> AlexDaniel: that's cause you're building random, potentially buggy, dev commits and it just sticks it to `master` cell. If you tell it to build releases, you'll have to reinstall modules for each release, because it keeps all the things separate.

[22:10] <AlexDaniel> Zoffix: aw yeah that's right

[22:29] *** lichtkind left
[22:34] *** Sgeo__ joined
[22:36] *** AlexDaniel left
[22:36] *** Sgeo_ left
[22:37] *** Zoffix left
[22:56] *** kurahaupo joined
[23:08] *** kurahaupo left
[23:18] *** pierre joined
[23:18] *** pierre left
[23:20] *** margeas left
[23:56] *** dmaestro left
