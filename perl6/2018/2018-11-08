[00:12] *** kerframil joined
[00:12] *** p6bannerbot sets mode: +v kerframil

[00:16] *** MasterDuke joined
[00:16] *** p6bannerbot sets mode: +v MasterDuke

[00:16] *** MasterDuke left
[00:16] *** MasterDuke joined
[00:16] *** herbert.freenode.net sets mode: +v MasterDuke

[00:16] *** p6bannerbot sets mode: +v MasterDuke

[00:40] *** rindolf left
[00:51] <buggable> New CPAN upload: IP-Addr-v0.0.2.tar.gz by VRURG http://modules.perl6.org/dist/IP::Addr:cpan:VRURG

[00:59] *** molaf left
[01:14] *** stmuk_ joined
[01:15] *** p6bannerbot sets mode: +v stmuk_

[01:17] *** stmuk left
[01:24] *** maerciba joined
[01:24] *** maerciba left
[01:29] *** stmuk joined
[01:30] *** p6bannerbot sets mode: +v stmuk

[01:31] *** stmuk_ left
[01:41] <buggable> New CPAN upload: Augment-Util-0.0.3.tar.gz by DOOM https://cpan.metacpan.org/authors/id/D/DO/DOOM/Perl6/Augment-Util-0.0.3.tar.gz

[01:41] <buggable> New CPAN upload: Object-Examine-0.0.3.tar.gz by DOOM https://cpan.metacpan.org/authors/id/D/DO/DOOM/Perl6/Object-Examine-0.0.3.tar.gz

[01:41] <buggable> New CPAN upload: Symbol-Scan-0.0.3.tar.gz by DOOM https://cpan.metacpan.org/authors/id/D/DO/DOOM/Perl6/Symbol-Scan-0.0.3.tar.gz

[01:41] <buggable> New CPAN upload: method-menu-0.0.3.tar.gz by DOOM https://cpan.metacpan.org/authors/id/D/DO/DOOM/Perl6/method-menu-0.0.3.tar.gz

[01:45] *** mattp_ joined
[01:46] *** p6bannerbot sets mode: +v mattp_

[01:50] *** eilliot joined
[01:51] *** p6bannerbot sets mode: +v eilliot

[02:00] *** hamhu3 joined
[02:00] *** p6bannerbot sets mode: +v hamhu3

[02:02] *** hamhu3_ left
[02:07] *** eilliot left
[02:28] *** kerframil left
[02:28] *** kerframil joined
[02:28] *** p6bannerbot sets mode: +v kerframil

[02:30] *** Sgeo joined
[02:31] *** p6bannerbot sets mode: +v Sgeo

[02:31] *** Sgeo_ left
[02:32] *** khisanth_ left
[02:41] *** leont left
[02:44] *** n0tjack_ is now known as n0tjack

[02:44] *** n0tjack is now known as n0tjack_

[02:45] *** n0tjack_ is now known as n0tjack

[02:45] *** khisanth_ joined
[02:45] *** n0tjack is now known as n0tjack_

[02:46] *** p6bannerbot sets mode: +v khisanth_

[02:48] *** n0tjack_ is now known as n0tjack

[02:48] *** n0tjack is now known as n0tjack_

[02:52] *** n0tjack_ is now known as n0tjack

[02:53] *** n0tjack is now known as n0tjack_

[02:55] *** kdr22 is now known as kdr2

[02:58] *** n0tjack_ is now known as n0tjack

[02:58] *** n0tjack is now known as n0tjack_

[02:58] *** n0tjack_ is now known as n0tjack

[02:58] *** n0tjack is now known as n0tjack_

[03:01] <Xliff> m: use NativeCall; class A is repr('CStruct') { has uint64 $.a; has uint64 $.b; }; my $a = A.new; nativesizeof($a).say

[03:01] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´16‚ê§¬ª

[03:02] <Xliff> m: use NativeCall; class A is repr('CStruct') { has uint64 $.a; has uint64 $.b; }; my $ca = CArray[A].new; my $a = A.new; $ca[0] = $a; nativesizeof($ca[0]).say

[03:02] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´16‚ê§¬ª

[03:03] <Xliff> m: use NativeCall; class A is repr('CStruct') { has uint64 $.a; has uint64 $.b; }; my $ca = CArray[Pointer[A]].new; my $a = A.new; $ca[0] = $a; nativesizeof($ca[0]).say

[03:03] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´CArray of CPointer passed non-CPointer object‚ê§  in method ASSIGN-POS at /home/camelia/rakudo-m-inst-1/share/perl6/sources/8660F65A7B3492675BB3B2058DB30E411A4C4E54 (NativeCall::Types) line 184‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[03:03] <Xliff> m: use NativeCall; class A is repr('CStruct') { has uint64 $.a; has uint64 $.b; }; my $ca = CArray[Pointer[A]].new; my $a = A.new; $ca[0] = nativecast(Pointer, $a); nativesizeof($ca[0]).say

[03:03] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´8‚ê§¬ª

[03:05] *** ufobat_ joined
[03:06] *** p6bannerbot sets mode: +v ufobat_

[03:08] *** ufobat left
[03:13] *** MasterDuke left
[03:56] *** ferreira left
[04:12] *** n0tjack_ is now known as n0tjack

[04:12] *** n0tjack is now known as n0tjack_

[04:43] *** telex left
[04:44] *** telex joined
[04:45] *** p6bannerbot sets mode: +v telex

[04:52] *** sauvin joined
[04:52] *** p6bannerbot sets mode: +v sauvin

[05:00] *** xinming joined
[05:01] *** p6bannerbot sets mode: +v xinming

[05:02] *** kdr2 left
[05:02] *** xinming left
[05:05] *** xinming joined
[05:05] <holyghost> eco: AI::Agent::Music

[05:05] <buggable> holyghost, Nothing found

[05:06] *** p6bannerbot sets mode: +v xinming

[05:06] *** xinming left
[05:11] <holyghost> AI::Agent::Music is in zef and should compile

[05:19] <holyghost> I have AI::Agent::Embedded in the works but I do not know if I want to publish it, it parses pieces of NES and M68k microcode

[05:21] <holyghost> There's also a assembler hash for M68000 e.g. key = "add.l" value = 0xA9

[05:21] <buggable> New CPAN upload: Tika-0.1.0.tar.gz by AZAWAWI https://cpan.metacpan.org/authors/id/A/AZ/AZAWAWI/Perl6/Tika-0.1.0.tar.gz

[05:23] *** mod_cure left
[05:28] *** kdr2 joined
[05:29] *** p6bannerbot sets mode: +v kdr2

[05:31] *** piccolo left
[05:36] *** stmuk_ joined
[05:37] *** p6bannerbot sets mode: +v stmuk_

[05:39] *** stmuk left
[05:46] *** xinming joined
[05:46] *** p6bannerbot sets mode: +v xinming

[05:55] *** curan joined
[05:55] *** p6bannerbot sets mode: +v curan

[06:18] *** n0tjack_ left
[06:19] <holyghost> ^-- do hack your irc client :-)

[06:20] <Xliff> holyghost++ 

[06:20] <Xliff> You've been a machine, lately.

[06:21] <holyghost> thx

[06:21] <Xliff> What's the next module on your list? ;)

[06:21] <holyghost> Bayes::Learn :-)

[06:22] *** n0tjack joined
[06:22] <holyghost> I need to edit as it does not compile yet, it's available though already

[06:22] *** p6bannerbot sets mode: +v n0tjack

[06:23] <Xliff> :)

[06:23] <Xliff> What's not working?

[06:23] <holyghost> Several classes

[06:24] <Xliff> You on github?

[06:24] <holyghost> yes

[06:24] <Xliff> nick?

[06:24] <holyghost> github.com/theholyghost2

[06:24] <holyghost> just the Agent packages and Mathx::Stat are on there

[06:25] <Xliff> Noticed.

[06:26] <holyghost> I hope I get some feedback :-) but I don't need to publish uncompilable code on github else a flood of messages

[06:27] <holyghost> I wouldn't know where to publish the github address ?

[06:27] <holyghost> anyway, I'll manage

[06:30] <holyghost> I'll post it on the mailing list later on, I still need to code a lot to get the agents working

[06:30] <holyghost> They to parse each other

[06:30] <holyghost> s/to/need to

[06:32] <holyghost> On there, I've got to put in the AI of AI::Agent

[06:32] <holyghost> That's how agents work

[06:32] <holyghost> They're AIs

[06:35] <Xliff> LOL!

[06:35] <Xliff> Well, if you are having problems, post gists with the problem areas. I'll be glad to help where I can.

[06:37] <Xliff> BTW - I put uncompilable code on github all the time. It's there to keep your code safe and trackable.

[06:37] <Xliff> Just don't publish until you're ready.

[06:38] <Xliff> I've had my project on there publicly for 2 months now. No flood of messages.

[06:38] <Xliff> I also have a private git server on AWS

[06:39] *** mingdao left
[06:42] <holyghost> ok

[06:42] *** jmerelo joined
[06:43] <holyghost> I'm not too familiar with web interfaces, I need to install a shell git 

[06:43] *** p6bannerbot sets mode: +v jmerelo

[06:44] <jmerelo> holyghost: you mean, a regular git

[06:45] <holyghost> The whole github thing is after my knowledge of using CVS

[06:45] <holyghost> jmerelo: yes

[06:47] <holyghost> jmerelo: BTW you wanted to check out AI::Agent, it's on github (github.com/theholyghost2) together with AI::Agent::Music

[06:48] <holyghost> It's less a clutter of classes now

[06:48] <holyghost> I need to post on the mailing list

[06:49] <holyghost> But I'm going to look it through first

[06:49] <jmerelo> holyghost: I might when you write tests for it as well as some documentation for every function.

[06:50] <holyghost> good to know

[06:50] <holyghost> a pod I presume, I'm have to lookup how tests work first, the whole thing is probably for next week

[06:51] *** mingdao joined
[06:51] *** p6bannerbot sets mode: +v mingdao

[06:52] <holyghost> jmerelo, Xliff : could you post that on github, that you want to help out ?

[06:54] <jmerelo> holyghost: I will when, you know, you write proper tests and document properly the module.

[06:54] <holyghost> Xliff: if you want to help, maybe post something on github of HashedAgent.pm6 in AI::Agent

[06:55] <holyghost> jmerelo: ok

[06:55] <holyghost> Xliff: I mean test HashedAgent.pm6

[06:55] <holyghost> more or less

[06:56] <jmerelo> holyghost: if you want people to help, you have to do your homework first. Just by looking at some of the modules it's clear that they don't compile, since they don't include declaration of some libraries, they don't use the proper syntax 

[06:57] <jmerelo> holyghost: I'm looking at AI::Agent::Agent in particular and it does not seem to do a thing but (with an incorrect syntax) assign an status of 1. 

[06:57] <holyghost> It's a base class

[06:58] <holyghost> I modularize

[06:58] <jmerelo> holyghost: no single method in that file is correct. Please do your homework, write tests as specification of what you want your code to do, check that it effectively does (by compiling it first) and _then_ ask for help

[06:58] <holyghost> jmerelo: ok as you wish

[06:59] <holyghost> I said it was for next week

[07:01] <holyghost> so I need tests to show my code, non-base classed, ok I'll do that

[07:04] *** domidumont joined
[07:05] *** p6bannerbot sets mode: +v domidumont

[07:06] <holyghost> I saved the irc log so I can continue next week

[07:07] <Geth> ¬¶ doc/master: 10 commits pushed by (Christian S√°nchez)++, (Juan Juli√°n Merelo Guerv√≥s)++

[07:07] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/8ae1d3ad3d21...dcc6668311d9

[07:11] *** stmuk joined
[07:11] *** p6bannerbot sets mode: +v stmuk

[07:13] <Xliff> holyghost: I will try to write tests for some of the modules, but we will need to get together and discuss how it is all supposed to work. I can help you write tests if you want.

[07:13] *** stmuk_ left
[07:13] *** n0tjack left
[07:13] <holyghost> Xliff: that'd be great :-)

[07:13] <Xliff> What should I clone first?

[07:14] <holyghost> AI::Agent

[07:14] <holyghost> so AI-Agent

[07:14] <Xliff> OK

[07:15] *** zakame joined
[07:16] *** stmuk_ joined
[07:16] <holyghost> The Agent is superclassed by Actor that's it for an agent base class override. You need to test with an agent derived from AI::Agent::Agent

[07:16] *** p6bannerbot sets mode: +v zakame

[07:16] *** p6bannerbot sets mode: +v stmuk_

[07:16] <holyghost> You can see what I mean in AI::Agent::Music::MusicAgent.pm6, AI::Agent::Music is a seperate module

[07:18] *** stmuk left
[07:18] <holyghost> The only thing that a test must do is Agent().dispatch($msg, %optargs) {}

[07:18] <holyghost> overriden 

[07:19] <holyghost> Then agents parse each other with several messages in "ask about" in the dispatch

[07:19] <holyghost> you can call these methods but a regular Agent doesn't return anything, he has to be overriden such a MusicAgent

[07:20] <holyghost> HTH

[07:20] <Xliff> Yeah. Might want to email me with that. I have the chatlogs, regardless.

[07:20] <Xliff> I am fixing things, right now.

[07:21] <holyghost> thanks

[07:22] <holyghost> HashAgent.pm6 probably does not work, but you have to register methods so you can call them from a list or hash (@!dependencies I think)

[07:22] <holyghost> s/HashAgent/HashedAgent

[07:23] <holyghost> again, dispatch gets overriden, not super.dispatch

[07:23] <holyghost> s/not/note

[07:24] *** laminowany joined
[07:24] *** p6bannerbot sets mode: +v laminowany

[07:26] <holyghost> Xliff: If you're done, just post the files on github (no patch -p0 < pathfile please). Else you mail them to [email@hidden.address]
[07:30] <holyghost> If you have energy left, clone Mathx-Stat and post tests for it. Just call Covariance().Covariance etc after adding a population's probailities, they're just numbers. The population master class calculates Variance and Expectance for those probabilities

[07:30] <Xliff> holyghost: I sent you a pull-request. Check the diff and if you don't understand anything, comment on the pull request.

[07:30] *** |oLa| left
[07:30] <holyghost> Xliff: thanks

[07:31] <holyghost> Xliff: I'll manage next week as I said before

[07:31] <holyghost> So for example you have some time left. I do understand directory diffs though

[07:32] <Xliff> Read through the pull request. If you have questions about some of the things I did, please ask.

[07:32] *** robertle joined
[07:32] <Xliff> Rather comment on the PR to keep this channel clean. If it is generic enough, asking here is fine.

[07:33] <holyghost> ok, I'll just ask test then :-) I'll have a look at the PR next week 

[07:33] *** p6bannerbot sets mode: +v robertle

[07:33] <holyghost> s/test/tests

[07:33] <holyghost> Xliff: If you'd like to look at Mathx::Stat /

[07:33] <holyghost> s/\//?

[07:34] <holyghost> It needs what I said above, just add probabilities to a population then calc the variance etc

[07:37] <holyghost> If you continue to help out, I just authorize you

[07:37] <Geth> ¬¶ doc: 7075ac4428 | (JJ Merelo)++ | doc/Language/pod.pod6

[07:37] <Geth> ¬¶ doc: Some reflow and grammar changes

[07:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7075ac4428

[07:37] <Geth> ¬¶ doc: 4992c97148 | (JJ Merelo)++ | doc/Language/pod.pod6

[07:37] <Geth> ¬¶ doc: Some reflow and grammar changes

[07:37] <synopsebot> Link: https://doc.perl6.org/language/pod

[07:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4992c97148

[07:38] <Xliff> holyghost: Remindme to look at Nathx::Stat, tomorrow. It's gettin late, here.

[07:38] <holyghost> Xliff: ok :-)

[07:38] <holyghost> You're in what time zone ?

[07:38] <Xliff> EST

[07:38] <holyghost> I can get up early

[07:38] <Xliff> Nah. I sleep late.

[07:38] <holyghost> so -6 hours ?

[07:39] <holyghost> we're at GMT stuff here :-)

[07:39] <holyghost> Thanks a lot

[07:39] <Xliff> -5

[07:39] <holyghost> -5 ?

[07:39] <Xliff> Yes

[07:39] <holyghost> right

[07:40] <holyghost> daylight savings time

[07:40] <Xliff> Over. EST, now

[07:40] <Xliff> EDT is -4, EST is -5

[07:40] <holyghost> I get up at 4 or 6 am in central Europe, GMT+1

[07:40] <holyghost> s/central/western

[07:41] <holyghost> ok

[07:41] <Xliff> I get up around noon, so that puts my wake time at your 5-6pm

[07:41] <holyghost> I don't want to be rude, but do tell your phase 

[07:41] <Xliff> So it's about 7:40 your time, yes?

[07:41] <holyghost> 8:40

[07:41] <Xliff> Phase?

[07:42] <holyghost> TNHD, the hacker dictionary at catb.org/~esr

[07:42] *** laminowany left
[07:42] <holyghost> daylight savings time

[07:43] <holyghost> anyway, we'll manage :-) I like testers :-)

[07:43] <holyghost> Most of the time I writee out of my head, to gain momentum

[07:43] <Xliff> I'm a night-moder

[07:43] <holyghost> ok

[07:44] <holyghost> I get up at 4 or 6 am, so it'll be almost midnight on your timezone when I get up

[07:45] *** zakame left
[07:45] <holyghost> Xliff: anyway, good night :-) I really appreciate

[07:46] <holyghost> I just don't do testing as it's silly, there's autotools in C/C++ etc, you don't test your software

[07:46] <holyghost> that way

[07:47] <Xliff> No. Perl6 testing is different, and it is definitely not silly.

[07:47] <Xliff> I will show you what I mean.

[07:47] <Xliff> G'night!

[07:47] *** |oLa| joined
[07:47] <holyghost> apt-get, urpmi, pkg do not do tests. But I know it's perl

[07:47] <holyghost> gn

[07:48] <El_Che> holyghost: your statement sounds silly to me

[07:48] *** p6bannerbot sets mode: +v |oLa|

[07:48] <holyghost> El_Che: see above, C does not do tests

[07:49] <holyghost> El_Che: but never mind, I will adapt to the perl eco

[07:50] <El_Che> I don't see testing as something lang specific

[07:50] <El_Che> just an adknowledgement my code always does things I don't always expect

[07:51] <El_Che> corner cases and the like

[07:51] <holyghost> sure

[07:51] <El_Che> I even write test for static langs

[07:51] <El_Che> s

[07:51] <El_Che> but certainly dynamic languages need good tests

[07:52] <holyghost> I'm not going to start a holy war about it, but as long as packages deploy fullly without tests

[07:52] <holyghost> s/fullly/fully

[07:54] <holyghost> If I check out some code, it'll better deploy instead of refusing

[07:54] <holyghost> to work

[07:55] <holyghost> I hacked gnome 2.4, a 2.4 linux kernel for G3 powermacs fully compiled

[07:56] <holyghost> yellowdog linux

[07:56] *** dct joined
[07:56] *** p6bannerbot sets mode: +v dct

[07:58] <tadzik> sqlite would like a word with your "c does not do tests" :P

[07:58] <tadzik> https://sqlite.org/testing.html

[07:59] <holyghost> "SELECT * FROM Perl6" :-)

[08:00] *** hamhu3_ joined
[08:00] *** p6bannerbot sets mode: +v hamhu3_

[08:01] <jmerelo> holyghost: C can do whatever it wants, perl6 does do tests. And you should, too. 

[08:02] *** dct left
[08:02] <holyghost> jmerelo: sure, as you say, but Xliff already posted some :-)

[08:02] <jmerelo> untested code is broken code. And, incidentally, code that does not compile is also broken code. 

[08:02] <holyghost> ok

[08:02] *** hamhu3 left
[08:03] <jmerelo> It would be a good idea to look at the code fixes people have done for you and learn from them, do the changes yourself to the rest of your code, and then write tests for them

[08:04] <jmerelo> holyghost: you haven't even looked at what Xliff has done for you. It's here, and it's not a test https://github.com/theholyghost2/AI-Agent/pulls 

[08:04] <lizmat> https://opensource.com/article/18/11/how-make-perl-more-classy

[08:05] <jmerelo> holyghost: look at it, and look at the fixes he has done. Do the same for the rest of the your code, starting with the most basic one. Check if it compiles by creating a basic "use" test, as lizmat said, like, 3 days ago. If you don't know how to do something, we're here to help

[08:05] <jmerelo> lizmat++

[08:06] <jmerelo> lizmat: there seems to be some trouble in the syntax highlighting in the code; for instance, in the Point definition. It's the same thing in GitHub, I think.

[08:07] <jmerelo> lizmat: great article, BTW. 

[08:08] <holyghost> jmerelo: I knew that, but I said I'm going to look into it next week. I'll cooperate with Xliff

[08:10] *** zakharyas joined
[08:10] *** jmerelo left
[08:10] <holyghost> jmerelo: more heads into my code, matter more

[08:10] *** p6bannerbot sets mode: +v zakharyas

[08:17] *** kerframil left
[08:19] *** dakkar joined
[08:20] *** p6bannerbot sets mode: +v dakkar

[08:22] <lizmat> jmerelo: I've given up trying to get it to render correctly, it is apparently too much outside of the realm of rendering provided by opensource.com

[08:31] *** rindolf joined
[08:31] <Xliff> lizmat: This article is really good! :)

[08:31] *** rindolf left
[08:32] *** dct joined
[08:32] *** p6bannerbot sets mode: +v dct

[08:40] *** rindolf joined
[08:41] *** p6bannerbot sets mode: +v rindolf

[08:43] *** Sgeo_ joined
[08:43] *** p6bannerbot sets mode: +v Sgeo_

[08:44] <holyghost> Xliff : I've merged in your PR

[08:45] <holyghost> Xliff: great to have some help :-)

[08:46] *** Sgeo left
[08:47] *** kurahaupo left
[08:47] <lizmat> Xliff: thank you

[08:47] *** kurahaupo joined
[08:48] <holyghost> lizmat: :-)

[08:48] *** p6bannerbot sets mode: +v kurahaupo

[08:51] <buggable> New CPAN upload: AI-Agent-0.2.2.tar.gz by HOLYGHOST http://modules.perl6.org/dist/AI::Agent:cpan:HOLYGHOST

[08:51] <holyghost> Xliff, lizmat: ^-- here you go

[08:57] *** random_yanek left
[08:58] <Xliff> holyghost: Now for tests. Really shouldn't be in CPAN without tests.

[08:58] <Xliff> But we will get there.

[09:01] <holyghost> thanks :-)

[09:01] <holyghost> Xliff: It's 4 am ?

[09:02] <Xliff> Yes

[09:02] <holyghost> Xliff: you should sleep :-) I didn't remember the RET syntax, I know it's a lot of perl 5

[09:03] <Xliff> I started reading lizmat's articles... and I keep reading "just one more"

[09:03] <holyghost> sure, I have to make an article on advent about Mathx::Stat by 15 dec

[09:04] <holyghost> I hope tomorrow "we" get in some tests

[09:04] <holyghost> I didn't know the PRs were that powerful

[09:07] <tadzik> :) I like your spirit 

[09:07] <holyghost> of Xliff and me I presume :-)

[09:08] <holyghost> Xliff: Mathx::Stat needs to compile first, I saw the tag based system in unit module *

[09:08] <Xliff> lol

[09:08] <Xliff> holyghost: Look at what I did for AI::Agent and see if you can fix it.

[09:08] <Xliff> We can go through the errors when I wake up.

[09:09] <holyghost> sure but for me next week

[09:09] <holyghost> tomorrow for Mathx::Stat

[09:09] <Xliff> I might not sleep long. I am an insomniac.

[09:09] <Xliff> Yes Mathx::Stat

[09:09] <holyghost> phase of the moon :-)

[09:09] <Xliff> But you should look at the changes I've made for AI::Agent, so you can see how to fix common errors. 

[09:10] * holyghost opens up vi

[09:11] <holyghost> I'm going to fix the class/unit module system

[09:14] <Xliff> Good luck.

[09:23] *** kdr2 left
[09:23] <holyghost> Xliff: I've fixed it, tomorrow we'll look into it

[09:23] <holyghost> Xliff: it's on github

[09:27] *** kdr2 joined
[09:28] *** p6bannerbot sets mode: +v kdr2

[09:30] <holyghost> It's on CPAN in a minute

[09:31] <buggable> New CPAN upload: Mathx-Stat-0.1.13.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[09:34] *** random_yanek joined
[09:34] *** p6bannerbot sets mode: +v random_yanek

[09:46] <El_Che> jnthn: you struck the correct tone one #33. jnthn++

[09:47] <Altreus> hi so

[09:47] <Altreus> I have a cro service that outputs statistics like this: content 'application/json', %statistics;

[09:47] <Altreus> pretty normal

[09:48] <Altreus> But if I have my $start-time = DateTime.now; ... %statistics<uptime> = (DateTime.now - $start-time);

[09:48] <Xliff> El_Che: I agree

[09:48] <Altreus> This Duration renders as {0: null}

[09:48] <Altreus> I can .Int it, but I wondered why it renders like that

[09:49] *** Sound joined
[09:49] *** p6bannerbot sets mode: +v Sound

[09:49] <Xliff> m: say DateTime.now.later(hours => 5) - DateTime.now

[09:49] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´17999.99631326‚ê§¬ª

[09:49] <Xliff> Altreus: That's weird. 

[09:50] <lizmat> m: m: say .later(hours => 5) - $_ with now

[09:50] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´No such method 'later' for invocant of type 'Instant'. Did you mean any of these?‚ê§    Date‚ê§    eager‚ê§‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:50] <Xliff> m: say .later(hours => 5) - $_ with now

[09:50] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´No such method 'later' for invocant of type 'Instant'. Did you mean any of these?‚ê§    Date‚ê§    eager‚ê§‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[09:50] <Xliff> m: say .later(hours => 5) - $_ with DateTime.now

[09:50] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´18000‚ê§¬ª

[09:50] <lizmat> ah, duh  :-)

[09:51] <Xliff> lizmat: Yes. I keep forgetting the .method form. 

[09:52] <Altreus> I suspect it may be the way Cro serialises objects

[09:52] <Xliff> Ah.

[09:52] <Altreus> it's just a weird outcome

[09:53] <Altreus> because I don't know what in the Duration is 0 or [undef]

[09:53] <Altreus> where [undef] is whatever counts as undefined in this new world

[09:54] <Xliff> Can you gist what your JSON looks like?

[09:55] <Altreus> Closed everything... hang on :)

[09:55] <Xliff> :)

[09:59] <Altreus> Xliff: https://gist.github.com/Altreus/6646f2effd9534f9746f5b705a7be8ab

[10:01] *** Skarsnik joined
[10:02] *** p6bannerbot sets mode: +v Skarsnik

[10:04] *** AlexDaniel left
[10:07] <Xliff> Oohhh

[10:07] <Xliff> That's weird.

[10:10] <Skarsnik> Hello

[10:11] <holyghost> Hail to Skarsnik :-)

[10:11] <Xliff> Altreus: Added a comment. What version of Perl6?

[10:11] <Altreus> this? perl6::version=2018.04.1

[10:12] <Xliff> Yeah. Updated my comment with my version of perl6.

[10:12] <Altreus> to be clear, it was a Duration object. Not sure whether you've got one just at a glance

[10:12] <Xliff> I have a much later version than you do. I'm still on version v6.c but the compiler is using v6.d by default, now.

[10:12] <Altreus> I haven't rebuilt perl6 in a while

[10:13] <Xliff> I rebuild mine bi-weekly, at least.

[10:13] <Xliff> You using Rakudo Star?

[10:14] <holyghost> Altreus: To be rude, I have a Duration object in Tick.pm6 and Time.pm6 in Game::Markov

[10:14] <holyghost> It was built for games though

[10:14] <Altreus> um, cool

[10:14] <Altreus> I guess

[10:14] <Altreus> Xliff: uh yes I think so

[10:15] <Altreus> I built it once and then sort of forgot. I don't use it in anger

[10:15] <Xliff> Heh.

[10:15] <Xliff> No problem. You will want to upgrade as soon as the next version is released. 

[10:15] <Altreus> I should probably make a script to Just Do It

[10:16] <Altreus> although ISTR it was quite painless

[10:16] <Xliff> You might want to move your old star location to a safe place and do tests before you settle on it, though.

[10:16] <Altreus> sounds scriptable

[10:18] <holyghost> you shouldn't script it :-) Just use a shell

[10:23] *** SHODAN left
[10:25] *** SHODAN joined
[10:25] *** p6bannerbot sets mode: +v SHODAN

[10:27] <Skarsnik> m: say "\n"

[10:27] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´‚ê§‚ê§¬ª

[10:28] <Skarsnik> m: sub foo() {return Hash}; ‚ê§‚ê§ my %h = foo();

[10:28] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´Invocant of method 'iterator' must be an object instance of type 'Map', not a type object of type 'Hash'.  Did you forget a '.new'?‚ê§  in block <unit> at <tmp> line 3‚ê§‚ê§¬ª

[10:28] <Skarsnik> This error look LTA

[10:28] <Skarsnik> or is that even an error?

[10:29] <Skarsnik> std: sub foo() {return Hash}; ‚ê§‚ê§ my %h = foo();

[10:30] <Skarsnik> c: 2015.01 sub foo() {return Hash}; ‚ê§‚ê§ my %h = foo();

[10:30] <committable6> Skarsnik, ¬¶2015.01: ¬´¬ª

[10:36] <sacomo> m: sub foo(--> Hash); my %h = foo();

[10:36] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§A unit-scoped sub definition is not allowed except on a MAIN sub;‚ê§Please use the block form. If you did not mean to declare a unit-scoped sub,‚ê§perhaps you accidentally placed a semicolon after routi‚Ä¶¬ª

[10:36] <sacomo> m: sub foo(--> Hash){}; my %h = foo();

[10:36] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´Odd number of elements found where hash initializer expected:‚ê§Only saw 1 element‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:36] <sacomo> m: sub foo(--> Hash()){}; my %h = foo();

[10:36] <camelia> rakudo-moar cbbe16edd: ( no output )

[10:37] <sacomo> m: sub foo(--> Hash()){}; my %h = foo(); say %h.^name;

[10:37] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´Hash‚ê§¬ª

[10:37] <Skarsnik> accodring to bisectable6 it's from https://github.com/rakudo/rakudo/commit/2f69be91446ab3f3ed85c54f741cf701b8cba8d5

[10:37] <lizmat> m: sub foo(--> Hash) { }; dd foo

[10:37] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´Nil‚ê§¬ª

[10:38] <lizmat> sacomo: that's the one element seen

[10:38] <Skarsnik> I mean you could sub foo{ return Hash.new}

[10:38] <Skarsnik> if it's supposed to be an error, the error message should be more clear maybe ^^

[10:39] <lizmat> Skarsnik: it's the equivalent of:

[10:39] <lizmat> m: my %h = 42

[10:39] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´Odd number of elements found where hash initializer expected:‚ê§Only saw: 42‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:39] <sacomo> yeah

[10:39] <lizmat> m: my %h = Nil

[10:39] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´Odd number of elements found where hash initializer expected:‚ê§Only saw 1 element‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:39] <Skarsnik> m: my %h = Hash;

[10:39] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´Invocant of method 'iterator' must be an object instance of type 'Map', not a type object of type 'Hash'.  Did you forget a '.new'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:39] <lizmat> hmmm... why isn't it saying Nil there ?

[10:39] <Skarsnik> m: my %h = Hash:U;

[10:39] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´Invocant of method 'iterator' must be an object instance of type 'Map', not a type object of type 'Hash:U'.  Did you forget a '.new'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:40] <Skarsnik> I think I wanted an undef Hash in the original code x)

[10:40] <Skarsnik> m: my %hash; say "foo" unless %hash.defined

[10:40] <camelia> rakudo-moar cbbe16edd: ( no output )

[10:43] <Skarsnik> everytime I touch perl 6 I found 10 bugs!

[10:44] <sacomo> m: my %h := Hash; say %h.^name;

[10:44] <camelia> rakudo-moar cbbe16edd: OUTPUT: ¬´Hash‚ê§¬ª

[10:46] *** pmurias joined
[10:46] *** p6bannerbot sets mode: +v pmurias

[10:49] *** lichtkind joined
[10:50] *** p6bannerbot sets mode: +v lichtkind

[11:01] <sacomo> welp, another mass shooting..

[11:09] <SmokeMachine> m: sub foo { {} }; my %h := foo

[11:09] <camelia> rakudo-moar 0bc72e050: ( no output )

[11:12] <Skarsnik> m: sub foo { Array}; my @a = foo; say "foo" unless @a.defined;

[11:12] <camelia> rakudo-moar 0bc72e050: ( no output )

[11:13] <Skarsnik> m: sub foo { Array}; my @a = foo; say @a;

[11:13] <camelia> rakudo-moar 0bc72e050: OUTPUT: ¬´[(Array)]‚ê§¬ª

[11:14] <SmokeMachine> m: sub foo { Array }; my @a := foo; say @a

[11:14] <camelia> rakudo-moar 0bc72e050: OUTPUT: ¬´(Array)‚ê§¬ª

[11:14] <SmokeMachine> m: sub foo { Array }; my @a = foo; say @a.defined

[11:14] <camelia> rakudo-moar 0bc72e050: OUTPUT: ¬´True‚ê§¬ª

[11:17] <SmokeMachine> m: sub foo { Array }; my @a := foo; say @a.defined

[11:17] <camelia> rakudo-moar 0bc72e050: OUTPUT: ¬´False‚ê§¬ª

[11:20] <SmokeMachine> Skarsnik: ^^

[11:20] <holyghost> .tell Xliff I've updated, if you want to coauthor, AI::Agent::Music

[11:20] <yoleaux> holyghost: I'll pass your message to Xliff.

[11:21] <buggable> New CPAN upload: AI-Agent-Music-0.2.2.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/AI-Agent-Music-0.2.2.tar.gz

[11:22] <holyghost> .tell I'm going to bed early so we can fix the modules tomorrow at GMT early night time

[11:22] <yoleaux> holyghost: What kind of a name is "I'm"?!

[11:22] <holyghost> .tell I am going to bed early so we can fix the modules tomorrow at GMT early night time

[11:22] <yoleaux> holyghost: I'll pass your message to I.

[11:23] <holyghost> .tell Xliff I am going to bed early so we can fix the modules tomorrow at GMT early night time

[11:23] <yoleaux> holyghost: I'll pass your message to Xliff.

[11:26] <holyghost> .tell jmerelo I'm fixing my modules with Xliff, if it needs be we should incorporate tests, I'll write the documentation

[11:26] <yoleaux> holyghost: I'll pass your message to jmerelo.

[11:26] *** pmurias left
[11:27] *** pmurias joined
[11:27] *** p6bannerbot sets mode: +v pmurias

[11:27] *** rindolf left
[11:28] *** Itaipu joined
[11:29] *** molaf joined
[11:29] *** Itaipu left
[11:29] *** p6bannerbot sets mode: +v molaf

[11:31] *** pmurias left
[11:32] *** Itaipu joined
[11:33] *** p6bannerbot sets mode: +v Itaipu

[11:36] *** pheix joined
[11:37] *** p6bannerbot sets mode: +v pheix

[11:37] *** rindolf joined
[11:38] *** p6bannerbot sets mode: +v rindolf

[11:40] *** pheix left
[11:49] *** ufobat_ left
[11:53] *** Skarsnik left
[12:00] *** molaf left
[12:02] *** kensanata joined
[12:02] *** p6bannerbot sets mode: +v kensanata

[12:07] *** jmerelo joined
[12:08] *** p6bannerbot sets mode: +v jmerelo

[12:09] <jmerelo> squashable6: status

[12:09] <yoleaux> 11:26Z <holyghost> jmerelo: I'm fixing my modules with Xliff, if it needs be we should incorporate tests, I'll write the documentation

[12:09] <squashable6> jmerelo, Next SQUASHathon in 23 days and ‚âà21 hours (2018-12-03 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:09] <jmerelo> .tell AlexDaniel what's in store for next Squashathon?

[12:09] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[12:10] <holyghost> jmerelo: I didn't see you come online, tomorrow we have 3 modules compilable and running, it's very easy to write tests for AI::Agent* and Mathx::Stat

[12:11] <holyghost> jmerelo: just by cooperation

[12:11] <jmerelo> holyghost: yep, it's very easy, and it's something the module author should do _before_ publishing.

[12:11] <buggable> New CPAN upload: AI-Agent-Music-0.2.3.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/AI-Agent-Music-0.2.3.tar.gz

[12:11] <holyghost> lol

[12:11] <jmerelo> Meaning before you do that ^^^^

[12:13] <holyghost> jmerelo: can we manage such things as :

[12:13] <holyghost> eco: AI::Agent::Music

[12:13] <buggable> holyghost, Nothing found

[12:13] <jmerelo> holyghost: you can publish in your repo whatever you want, ask for collaboration any way you want. But you should wait until something actually _works_ before you publish. The fact that one file that did not compile does compile now is not a reason to publish a new version.

[12:14] <holyghost> jmerelo: I agree, Xliff told me

[12:14] <jmerelo> holyghost: is a reason for joy because it means you have some work done before you publish anything. Even if they compile, if there are no tests it's impossible to know what they _should_ do.

[12:15] <holyghost> jmerelo: yes, writing docs

[12:15] <holyghost> and so on

[12:15] <jmerelo> holyghost: you have agreed with this the third time, if I haven't lost count. Still, you keep publishing new versions without compiling them and testing them properly.

[12:15] <holyghost> jmerelo: if my perl6 zef doesn't work should I login somwhere to test ?

[12:16] <holyghost> I don't have a zef, I have the latest perl6 rakudo

[12:16] <jmerelo> holyghost: documentation is not spec. Tests are spec. That is why you need tests before you publish anything in CPAN (or, for that matter, anywhere else).

[12:16] <holyghost> jmerelo: that's what I comprehended on CPAN

[12:17] <jmerelo> holyghost: still, that's something you _don't_ do, because you keep updating versions without checking them that they compile or that they do what they intend to do.

[12:17] <holyghost> jmerelo: I released too early on CPAN, on github I can do my thing

[12:17] <holyghost> that's all

[12:18] <holyghost> I didin't realize the diff in github to show my code, not just compilables, I just don't want to remove my reepos on CPAN, that's logic 

[12:18] <holyghost> s/reepos/repos

[12:18] *** finanalyst joined
[12:19] *** jbotz joined
[12:19] <holyghost> jmerelo: I am used to shell clients, not web stuff

[12:19] *** p6bannerbot sets mode: +v finanalyst

[12:19] *** p6bannerbot sets mode: +v jbotz

[12:20] <jmerelo> holyghost: _git_ is a shell client.

[12:20] <finanalyst> good time of day. I am having problems understanding inheritance of subclasses. See following

[12:20] <finanalyst> m:perl6 -e 'class A { has $.a; class B { method xx { say $.a }}};my A::B $q.=new(:a(3));$q.xx;'

[12:20] <evalable6> finanalyst, rakudo-moar 0bc72e050: OUTPUT: ¬´Cannot test 0bc72e0504ade2fbf8a24420332309c37edf8363 (Commit exists, but a perl6 executable could not be built for it)¬ª

[12:20] <jmerelo> hi, finanalyst !

[12:20] <finanalyst> hi jj

[12:21] <finanalyst> m: class A { has $.a; class B { method xx { say $.a }}};my A::B $q.=new(:a(3));$q.xx;

[12:21] <camelia> rakudo-moar 0bc72e050: OUTPUT: ¬´No such method 'a' for invocant of type 'A::B'‚ê§  in method xx at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:21] <holyghost> holyghost: I'll be alright

[12:21] <jmerelo> finanalyst: seems to be a Camelia error, right?

[12:22] <jmerelo> finanalyst: A::B does not include a. All attributes are private in Perl6

[12:22] <jmerelo> https://docs.perl6.org/language/objects#Attributes

[12:22] <finanalyst> but i thought that B as a subclass of A was supposed to inherit attribute of A

[12:22] <jmerelo> finanalyst: you have to access a through the public interface

[12:22] <jmerelo> finanalyst: no, it does not. It's private

[12:23] <finanalyst> but i set $.a to make it public

[12:23] <jmerelo> m: class A { has $.a; class B { method xx { say self.a() }}};my A::B $q.=new(:a(3));$q.xx;

[12:23] <camelia> rakudo-moar 0bc72e050: OUTPUT: ¬´No such method 'a' for invocant of type 'A::B'‚ê§  in method xx at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:23] <jmerelo> hum

[12:23] <timotimo> why would you expect self.a to work in an instance of B when it's an attribute of A?

[12:24] <jmerelo> No, wait, I'm wrong above. B does not inherit from a, it's a class which is included in A

[12:24] <jmerelo> So it's not a matter of inheritance, but scope.

[12:24] <timotimo> methods are not looked up in scopes :)

[12:24] <jmerelo> timotimo: right

[12:25] <Xliff> m: class A { has $.a; };  class B is A { method xx { say self.a() }}};my A::B $q.=new(:a(3));$q.xx;

[12:25] <yoleaux> 11:20Z <holyghost> Xliff: I've updated, if you want to coauthor, AI::Agent::Music

[12:25] <camelia> rakudo-moar 0bc72e050: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unexpected closing bracket‚ê§at <tmp>:1‚ê§------> 3ass B is A { method xx { say self.a() }}7‚èè5};my A::B $q.=new(:a(3));$q.xx;‚ê§¬ª

[12:25] <yoleaux> 11:23Z <holyghost> Xliff: I am going to bed early so we can fix the modules tomorrow at GMT early night time

[12:25] <finanalyst> Oh. So to let B inherit, I need to declare it outside of A

[12:25] <holyghost> If you like I have a module for you AI::Agent::Embedded (AWS), I don't want to release it in public as it parses NES and M68000 microcode

[12:25] <Xliff> m: class A { has $.a; };  class B is A { method xx { say self.a() }; my B $q.=new(:a(3));$q.xx;

[12:25] <camelia> rakudo-moar 0bc72e050: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3y self.a() }; my B $q.=new(:a(3));$q.xx;7‚èè5<EOL>‚ê§¬ª

[12:25] <holyghost> s/If/ Xliff If

[12:25] <Xliff> m: class A { has $.a; };  class B is A { method xx { say self.a() }; }; my B $q.=new(:a(3));$q.xx;

[12:25] <camelia> rakudo-moar 0bc72e050: OUTPUT: ¬´3‚ê§¬ª

[12:25] <Xliff> ^^ finalyst

[12:26] <Xliff> Er... finanalyst, even

[12:26] <jmerelo> Xliff: thanks, that's what I meant...

[12:26] <finanalyst> Xliff: no problem. I mistype too

[12:26] *** zakharyas left
[12:26] * jmerelo goes AFK to cook.

[12:27] *** jmerelo left
[12:27] <holyghost> Xliff : see above

[12:27] <holyghost> You might want to put it on your priv git server

[12:28] <holyghost> It's reverse engineering, but I need a place for it

[12:29] *** CIAvash left
[12:29] *** lucasb joined
[12:30] *** p6bannerbot sets mode: +v lucasb

[12:30] <holyghost> It's NESROM and NESROMMusic classed, you just parse agents with it tha carry free ROMs

[12:31] <holyghost> You can let the 6502 (NES) processor just play music

[12:31] <holyghost> d00d systems

[12:31] <timotimo> so you implemented a 6502 emulator?

[12:31] <holyghost> timotimo: just a has of NES opcodes

[12:31] <Xliff> holyghost: I will do it sometime within the next 36 hours.

[12:32] <holyghost> s/has/hash

[12:32] <holyghost> Xliff: you may have it but I'm interested in 6502 code, so I want to hack beyond perl6, e.g. a private git server

[12:33] <Xliff> I said I'd do it before the weekend.

[12:33] <holyghost> beyond in the meaning that I want to hack the NES code

[12:33] <holyghost> ok

[12:33] <Xliff> I will have to set you up with git creds and a shell account.

[12:33] <holyghost> coolness :-)

[12:33] <Xliff> Again... weekend.

[12:33] <holyghost> ok

[12:34] <holyghost> I really don't crack but I do like reverse engineering, I can give you much more than that solo

[12:34] <holyghost> weekend it is

[12:34] <holyghost> do .tell me or something

[12:35] <holyghost> I hacked the CPAN server, without zef

[12:35] <holyghost> eco: AI::Agent::Music

[12:35] <buggable> holyghost, Nothing found

[12:36] *** evalable6 left
[12:37] <holyghost> prob just a directory make in the META

[12:38] <holyghost> Xliff: I just checked my agenda, I'll be here this weekend, login is holyghost, pass you give me

[12:38] <Xliff> 'k

[12:38] * lucasb took the liberty to answer the recenlty closed issue

[12:39] <Xliff> heh

[12:39] <Xliff> Can someone tell me why I am having problems with a CArray of a CStruct.

[12:39] <lucasb> s/answer/reply/

[12:39] <timotimo> holyghost: both MusicAgent.pm6 and MusicDB.pm6 still use "super", which is not a thing that exists

[12:40] <timotimo> and ".db = ..." where no $_ is set, which will also not work

[12:40] <holyghost> timotimo: ah ok

[12:40] <holyghost> timotimo: I miscompiled the super compiles on my system

[12:40] <Xliff> Instead of super, use nextwith or nextsame

[12:40] <holyghost> Xliff: I understand

[12:41] <Xliff> timotimo: Will that work with overrides?

[12:41] <timotimo> m: class Test { method BUILD { super.BUILD } }

[12:41] <camelia> rakudo-moar 0bc72e050: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    super used at line 1‚ê§‚ê§¬ª

[12:41] <holyghost> ok

[12:41] <timotimo> Xliff: you mean nextsame and derived classes?

[12:41] <Xliff> Yes

[12:41] <holyghost> timotimo: I thought otherwise to shorten $! and $.

[12:41] <timotimo> you're not supposed to call other BUILD methods from your own BUILD method

[12:42] <Xliff> BUILD is a submethod, so it is limited to the class it is defined in.

[12:42] <holyghost> timotimo: I don't know *

[12:42] <timotimo> in MusicAgent, BUILD is not a submethod, it's a method

[12:42] <Xliff> If you want common code to run across classes like that, you have to define methods.

[12:42] <timotimo> which is also problematic

[12:42] <holyghost> super should call the next BUILD upwise

[12:42] <Xliff> holyghost: Perl6 does that automatically.

[12:43] <holyghost> ok, I understand

[12:43] <Xliff> You want to pass something to lower level builds, use the same named parameter.

[12:43] <holyghost> Xliff: I cannot self = super.BUILD then, slashing

[12:44] <holyghost> that's the whole meaning I suppose

[12:44] <Xliff> so: Class A { has $!a; submethod BUILD (:$a) { $!a = $a }; }; class B is A { has $!b; submethod BUILD(:$a, :$b) { $!b = $b; }; }; 

[12:45] <holyghost> $.a gets set

[12:45] <Xliff> So if class B then has: "method new($a, $b { self.bless(:$a, :$b) }" it works as expected.

[12:45] <holyghost> $!a

[12:45] <holyghost> I knew that

[12:45] <Xliff> So why try to reinvent the wheel?

[12:45] <holyghost> lol, there's more OOP paradigms for that

[12:46] <Xliff> Oops... should read: "method new($a, $b) { self.bless(:$a, :$b) }" it works as expected.

[12:46] <holyghost> bless uses super class methods, that's what I knew

[12:46] <Xliff> Yes. I got hung up on SUPER myself, when I started.

[12:47] <holyghost> It's perl 5 and smalltalk of course 

[12:48] <lizmat> lucasb++  lizmat--  # closing the wrong issue

[12:48] <lucasb> lizmat++ reopening :)

[12:48] <holyghost> lol

[12:48] *** scimon joined
[12:48] <lucasb> BTW #33 was already closed

[12:49] *** p6bannerbot sets mode: +v scimon

[12:50] <holyghost> Xliff: do watch out with your server this weekend because I get a lot of attention from DOSers

[12:50] <SmokeMachine> m: class A { has $.a;  class B is A { method xx { say self.a() }; } }; my A::B $q.=new(:a(3));$q.xx;

[12:51] <camelia> rakudo-moar 0bc72e050: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§'A::B' cannot inherit from 'A' because 'A' isn't composed yet (maybe it is stubbed)‚ê§at <tmp>:1‚ê§¬ª

[12:51] <SmokeMachine> m: class A { ... }; class A { has $.a;  class B is A { method xx { say self.a() }; } }; my A::B $q.=new(:a(3));$q.xx;

[12:51] <camelia> rakudo-moar 0bc72e050: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§'A::B' cannot inherit from 'A' because 'A' isn't composed yet (maybe it is stubbed)‚ê§at <tmp>:1‚ê§¬ª

[12:51] <lizmat> lucasb: that's why I was slightly miffed when I thought it was opened again

[12:51] <Xliff> m: class Parent { method dothething() { say "parent does the thing" } }; class Child is Parent { method dothething() { say "child does the thing" }; method parentdo($classname) { self."{$classname}::dothething"() } }; Child.new.parentdo("Parent")

[12:51] <camelia> rakudo-moar 75c9456a8: OUTPUT: ¬´No such method 'Parent::dothething' for invocant of type 'Child'‚ê§  in method parentdo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:52] <Xliff> m: class Parent { method dothething() { say "parent does the thing" } }; class Child is Parent { method dothething() { say "child does the thing" }; method parentdo($classname) { ::{"self.{$classname}"}::dothething"() } }; Child.new.parentdo("Parent")

[12:52] <camelia> rakudo-moar 75c9456a8: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> 3o($classname) { ::{"self.{$classname}"}:7‚èè5:dothething"() } }; Child.new.parentdo("‚ê§    expecting any of:‚ê§        colon pair‚ê§¬ª

[12:52] <Xliff> m: class Parent { method dothething() { say "parent does the thing" } }; class Child is Parent { method dothething() { say "child does the thing" }; method parentdo($classname) { ::{"self.{$classname}"}.dothething() } }; Child.new.parentdo("Parent")

[12:52] <camelia> rakudo-moar 75c9456a8: ( no output )

[12:52] <Xliff> m: class Parent { method dothething() { say "parent does the thing" } }; class Child is Parent { method dothething() { say "child does the thing" }; method parentdo($classname) { ::{"self.{$classname}"}.dothething() } }; Child.new.parentdo("Parent").say

[12:52] <camelia> rakudo-moar 75c9456a8: OUTPUT: ¬´Nil‚ê§¬ª

[12:53] <Xliff> m: class Parent { method dothething() { say "parent does the thing" } }; class Child is Parent { method dothething() { say "child does the thing" }; method parentdo($classname) { ::{"self::{$classname}"}.dothething() } }; Child.new.parentdo("Parent").say

[12:53] <camelia> rakudo-moar 75c9456a8: OUTPUT: ¬´Nil‚ê§¬ª

[12:53] <Xliff> m: class Parent { method dothething() { say "parent does the thing" } }; class Child is Parent { method dothething() { say "child does the thing" }; method parentdo($classname) { ::{"self.{$classname}.dothething"}() } }; Child.new.parentdo("Parent").say

[12:53] <camelia> rakudo-moar 75c9456a8: OUTPUT: ¬´Cannot find method 'Nil' on object of type List‚ê§  in method parentdo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:53] <scimon> lizmat: Today's article on objects and stuff it very nice :)

[12:54] *** andrzejku joined
[12:54] <lizmat> scimon: thank you  :-)

[12:54] <Xliff> m: class Parent { method dothething() { say "parent does the thing" } }; class Child is Parent { method dothething() { say "child does the thing" }; method parentdo($classname) { self."{$classname}::dothething"() } }; Child.new.parentdo("Parent").say

[12:54] <camelia> rakudo-moar 75c9456a8: OUTPUT: ¬´No such method 'Parent::dothething' for invocant of type 'Child'‚ê§  in method parentdo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:54] <Xliff> m: class Parent { method dothething() { say "parent does the thing" } }; class Child is Parent { method dothething() { say "child does the thing" }; method parentdo($classname) { self.{"&{$classname}::dothething"}() } }; Child.new.parentdo("Parent").say

[12:54] *** p6bannerbot sets mode: +v andrzejku

[12:54] <camelia> rakudo-moar 75c9456a8: OUTPUT: ¬´Type Child does not support associative indexing.‚ê§  in method parentdo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:54] <Xliff> LOL OK I'm done.

[12:55] <Xliff> m: class Parent { method dothething() { say "parent does the thing" } }; class Child is Parent { method dothething() { say "child does the thing" }; method parentdo { self.Parent::dothething() } }; Child.new.parentdo("Parent").say

[12:55] <camelia> rakudo-moar 75c9456a8: OUTPUT: ¬´Too many positionals passed; expected 1 argument but got 2‚ê§  in method parentdo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:55] <Xliff> m: class Parent { method dothething() { say "parent does the thing" } }; class Child is Parent { method dothething() { say "child does the thing" }; method parentdo { self.Parent::dothething() } }; Child.new.parentdo.say

[12:55] <camelia> rakudo-moar 75c9456a8: OUTPUT: ¬´parent does the thing‚ê§True‚ê§¬ª

[12:55] <Xliff> holyghost: ^^ A way to do SUPER

[12:56] <holyghost> ok, self.Parent::do

[12:56] <holyghost> looks like perl 5

[12:56] <holyghost> then it's ok with me :-)

[12:56] <Xliff> m: class Parent { method dothething() { say "parent does the thing" } }; class Child is Parent { method dothething() { say "child does the thing"; say self.Parent::dothething }; }; Child.dothething.say

[12:56] <camelia> rakudo-moar 75c9456a8: OUTPUT: ¬´child does the thing‚ê§parent does the thing‚ê§True‚ê§True‚ê§¬ª

[12:56] <holyghost> self.SUPER::new and so on

[12:57] <Xliff> Yes, but there is no super. The child must reference the proper namespace.

[12:57] <holyghost> indeed

[12:57] <holyghost> now I know, thanks

[13:08] *** jmerelo joined
[13:08] *** p6bannerbot sets mode: +v jmerelo

[13:12] <holyghost> Xliff, timotimo : I've removed super

[13:12] <Geth> ¬¶ ecosystem: 204be93380 | (Mauro Panigada)++ (committed using GitHub Web editor) | META.list

[13:12] <Geth> ¬¶ ecosystem: Add Xmav::JSON to ecosystem

[13:12] <Geth> ¬¶ ecosystem: 

[13:12] <Geth> ¬¶ ecosystem: See https://github.com/shintakezou/Xmav-JSON

[13:12] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/204be93380

[13:12] <Geth> ¬¶ ecosystem: 0db2234eeb | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[13:12] <Geth> ¬¶ ecosystem: Merge pull request #415 from shintakezou/patch-1

[13:12] <Geth> ¬¶ ecosystem: 

[13:12] <Geth> ¬¶ ecosystem: Add Xmav::JSON to ecosystem

[13:12] <Geth> ¬¶ ecosystem: Thanks!

[13:12] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/0db2234eeb

[13:12] *** hamhu3_ left
[13:13] *** hamhu3 joined
[13:13] <timotimo> there's still things wrong

[13:13] <timotimo> BUILD isn't called with any positional parameters, only named parameters

[13:13] <timotimo> and ".db = ..." won't work in BUILD, and ".db.add(...)" won't work in add_to_music_db

[13:13] <timotimo> there's still super in method ask

[13:13] *** p6bannerbot sets mode: +v hamhu3

[13:13] *** hamhu3 left
[13:14] <holyghost> timotimo: I'm going to rework later on

[13:14] *** hamhu3 joined
[13:14] *** hamhu3 left
[13:14] <timotimo> and if anything should be able to derive from AI::Agent::Music::MusicAgent, you really should make BUILD a submethod; just do that always

[13:15] <holyghost> ok

[13:15] <timotimo> in AI::Agent::Music::MusicDB as well

[13:15] *** hamhu3 joined
[13:15] <holyghost> thanks

[13:16] <timotimo> YW

[13:16] <timotimo> how are you making sure that it compiles, btw?

[13:16] *** p6bannerbot sets mode: +v hamhu3

[13:17] <holyghost> timotimo: I released too early on CPAN

[13:17] <timotimo> the solution to that is probably not to release much much more :)

[13:17] <holyghost> timotimo: I'll fixify with Xliff tomorrow

[13:17] <timotimo> OK

[13:18] <holyghost> timotimo: I don;t have working zef

[13:18] <timotimo> you don't need a working zef to just try to compile

[13:18] <holyghost> I'll post to github for code then release on CPAN

[13:18] <SmokeMachine> holyghost: do you try to run the code after you write it?

[13:18] <timotimo> you can perl6 -I ../path-to-AI-agent-folder -I lib lib/AI/Agent/Music/Music.pm6

[13:19] <holyghost> timotimo: I know but the module system does not work

[13:19] <timotimo> you don't need the module system

[13:19] <holyghost> SmokeMachine: There's going to be tests later on

[13:19] <jmerelo> holyghost: what do you mean? The module system works perfectly. 

[13:20] *** jbotz left
[13:20] <SmokeMachine> holyghost: Im not talking about tests... do you just runs it?

[13:20] <holyghost> jmerelo: ok

[13:20] <holyghost> SmokeMachine: I coded it out of my head

[13:20] <holyghost> timotimo: I used PERL6LIB

[13:21] <jmerelo> holyghost: he's not asking that. He's asking if you try to run the code, as in write some program that uses the code and try to run it. It can be as simple as a test that just "uses" the module, or it can be something that exemplifies what it should do.

[13:21] <timotimo> it might be a good idea to write in your README.md that "this code has not been tried yet" perhaps

[13:21] <holyghost> jmerelo: again I'll rework tomorrow

[13:21] <timotimo> so that a user that just stumbles upon the module and tries it for the first time doesn't get horribly confused when it doesn't compile

[13:21] <holyghost> timotimo: sure

[13:22] <Xliff> holyghost: Take a look at this script: https://github.com/Xliff/p6-GtkPlus/blob/master/scripts/dependencies.pl6

[13:23] <Xliff> You can modify that for each of your projects. It should create a BuildList file with an optimal build order.

[13:23] <holyghost> ok

[13:24] <Xliff> once you have that file you can do the following from shell: time ( for a in `cat BuildList`; do

[13:24] <Xliff>  (echo " === $a ==="; perl6 --stagestats -Ilib -e "use $a" 2>&1) | tee -a LastBuildResults

[13:24] <Xliff> ; done

[13:24] <Xliff> )

[13:24] <Xliff> That should compile EVERYTHING and give you errors in a LastBuildResults file.

[13:25] <holyghost> Again, I don't need scripts, I just need a working system with perl6 -I

[13:25] <moritz> btw bash 4+ supports  |& tee -a ....

[13:25] <holyghost> I can compile m yself

[13:26] <moritz> which pipes both stdout and stderr to the same program

[13:26] <Xliff> That first script will also output everything you need for META6.json provides section

[13:26] <holyghost> Xliff: again I edit by hand

[13:26] <jmerelo> Xliff: nifty trick. Thanks!

[13:26] <Xliff> jmerelo: No problem.

[13:27] <Xliff> holyghost: It's a recommendation. A very strong one.

[13:27] <Xliff> At least until the tests can be written.

[13:27] <holyghost> Anyway, if Xliff and I find some build errors, I'll refactor/redistribute. I'm sorry I released on CPAN

[13:27] *** jbotz joined
[13:28] <Xliff> holyghost: Refactor, not redistribute until we have tests and they work.

[13:28] <holyghost> Xliff: as you wish

[13:28] <Xliff> CPAN is not the place for broken modules. Github is.

[13:28] <holyghost> Xliff: that's what you told me :-)

[13:28] *** p6bannerbot sets mode: +v jbotz

[13:28] <Xliff> :P)

[13:28] <Xliff> Err.. s/P//

[13:30] *** evalable6 joined
[13:30] <lucasb> SmokeMachine: blz bro? se vc ou qualquer outro BR na sala quiser conversar sobre P6 em portugues, a gente entra em #perl6-br (ou #perl6br), ok?

[13:31] *** p6bannerbot sets mode: +v evalable6

[13:31] <holyghost> I'm AFK ATM

[13:32] <SmokeMachine> lucasb: Im ther on #perl6-br!

[13:32] *** uzl joined
[13:33] *** p6bannerbot sets mode: +v uzl

[13:34] <SmokeMachine> .seen rschipura

[13:34] <yoleaux> I haven't seen rschipura around.

[13:36] <uzl> hello!

[13:36] <uzl> lizmat: great article as always!

[13:40] <uzl> hopefully the P6 Weekly articles can come back. If not weekly, at least monthly. It was a great overview of what's going on in the P6 community.

[13:40] <Xliff> What? When did the weeklys stop?

[13:40] <timotimo> no weekly this week

[13:41] <jmerelo> Plus an incredible amount of work scouting all fora and social networks...

[13:42] <lizmat> uzl: unless strange things happen, I will write a P6W next week

[13:42] <jmerelo> lizmat++ and then lizmat++ :-)

[13:42] <El_Che> jmerelo: can you send me a /msg ? I can not send one to you because of stupid freenode spam setup

[13:44] <uzl> lizmat: nothing strange will happen ;-)!

[13:45] *** zakharyas joined
[13:46] *** p6bannerbot sets mode: +v zakharyas

[13:47] <Xliff> lizmat++!

[13:48] <uzl> I know there are already several books about P6. But would writing an introductory book about Perl 6, created and maintained by the community, be feasible?

[13:48] *** pheix joined
[13:48] <uzl> Like the Rust book?!

[13:48] <lizmat> uzl: I think such a book was once already started?

[13:48] <tadzik> indeed :)

[13:48] <tadzik> https://github.com/perl6/book

[13:49] *** sena_kun joined
[13:49] *** p6bannerbot sets mode: +v pheix

[13:49] <moritz> uzl: it turns out that writing doesn't work all that well if there isn't a primary author pushing the project

[13:49] *** p6bannerbot sets mode: +v sena_kun

[13:50] <moritz> uzl: but I did have an idea for something similar: write a Perl 6 book, put it on leanpub (where you can sell early drafts directly to consumers, get 85% royalties), and open-source it once it hits a certain monetary goal

[13:51] <moritz> I'm still undecided whether I should actually do it

[13:53] <uzl> moritz: I'm looking at it and there's a sizable amount of material. You all were doing a great job. 

[13:54] <uzl> That sounds like a great idea.

[13:54] *** yqt joined
[13:54] <moritz> my topic would be around routines and signatures (and include multi dispatch)

[13:55] <uzl> I've seen many authors do that. I've come across few Python introductory books that were published like that.

[13:55] *** p6bannerbot sets mode: +v yqt

[13:56] <uzl> So you mean like the whole book? Or do you intend to have other authors?

[13:56] <moritz> given that there are several introductory books out there, I don't want to crowd that

[13:56] <moritz> uzl: everytime I started to write a book with co-authors, it turned out that one of us didn't have enough time, or we didn't really have the same vision, or something

[13:57] <moritz> so I'd start out solo, but accept contributions

[13:57] *** jmerelo left
[13:58] <uzl> Yeah, a common vision must certainly exist!

[13:58] <Xliff> moritz: Do you know if you can assign constants that can be used in sub signatures?

[13:58] <Xliff> ie for things like Function refs

[13:59] <moritz> Xliff: I don't understand the question

[14:00] <uzl> moritz: Now I'm wondering how much one could expand a book about P6's routines and signatures (and include multi dispatch)? 200 pages?

[14:01] <Xliff> moritz: I have a signature like this: sub dothat( &sort_func (Sortee, Sortee, Pointer --> int32) )

[14:02] *** uzl left
[14:02] *** jbotz left
[14:02] *** andrzejku left
[14:02] *** Itaipu left
[14:02] *** mingdao left
[14:02] *** susmus left
[14:02] *** Kaiepi left
[14:02] *** x[LGWs4x4i]uG2N0 left
[14:02] *** avar left
[14:02] *** mantovani left
[14:02] *** BooK_ left
[14:02] *** bhm left
[14:02] *** aeruder left
[14:02] *** SakiTW left
[14:02] *** phogg left
[14:02] *** k-man left
[14:02] *** SqrtNegInf left
[14:02] *** samcv left
[14:02] *** Summertime left
[14:02] *** kybr left
[14:02] *** sunnavy left
[14:02] <moritz> uzl: that's the wrong thinking, IMHO :)

[14:02] *** x[LGWs4x4i]uG2N0 joined
[14:02] *** BooK_ joined
[14:02] *** bhm joined
[14:02] <Xliff> Rather than have to define that over and over, I'd like to put that into a constant.

[14:02] *** aeruder joined
[14:02] *** andrzejku joined
[14:02] *** phogg joined
[14:02] *** uzl joined
[14:02] *** Summertime joined
[14:02] *** p6bannerbot sets mode: +v Summertime

[14:02] *** sunnavy joined
[14:02] *** mingdao joined
[14:02] *** p6bannerbot sets mode: +v mingdao

[14:02] *** kybr joined
[14:02] <moritz> Xliff: I don't think that's possible

[14:02] *** Kaiepi joined
[14:02] <Xliff> Ah.

[14:02] *** phogg left
[14:02] *** phogg joined
[14:02] *** p6bannerbot sets mode: +v phogg

[14:02] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[14:02] *** p6bannerbot sets mode: +v BooK_

[14:02] *** susmus joined
[14:02] <Xliff> Any ideas on how to make that easier for re-use?

[14:02] *** p6bannerbot sets mode: +v bhm

[14:02] *** Itaipu joined
[14:03] *** p6bannerbot sets mode: +v aeruder

[14:03] *** p6bannerbot sets mode: +v andrzejku

[14:03] *** p6bannerbot sets mode: +v phogg

[14:03] *** p6bannerbot sets mode: +v uzl

[14:03] *** mantovani joined
[14:03] *** p6bannerbot sets mode: +v sunnavy

[14:03] <moritz> not immediately, no

[14:03] *** p6bannerbot sets mode: +v kybr

[14:03] *** p6bannerbot sets mode: +v Kaiepi

[14:03] *** k-man joined
[14:03] *** p6bannerbot sets mode: +v susmus

[14:03] *** p6bannerbot sets mode: +v Itaipu

[14:04] *** p6bannerbot sets mode: +v mantovani

[14:04] *** samcv joined
[14:04] *** samcv left
[14:04] *** samcv joined
[14:04] *** p6bannerbot sets mode: +v samcv

[14:04] *** p6bannerbot sets mode: +v k-man

[14:04] *** jbotz joined
[14:04] *** woolfy left
[14:04] *** p6bannerbot sets mode: +v samcv

[14:05] *** woolfy joined
[14:05] *** p6bannerbot sets mode: +v jbotz

[14:05] *** jbotz left
[14:05] *** jbotz joined
[14:05] *** p6bannerbot sets mode: +v woolfy

[14:06] *** uzl left
[14:06] *** uzl joined
[14:06] *** p6bannerbot sets mode: +v jbotz

[14:06] *** p6bannerbot sets mode: +v uzl

[14:07] *** avar joined
[14:07] *** avar left
[14:07] *** avar joined
[14:07] *** p6bannerbot sets mode: +v avar

[14:07] <woolfy> uzl: Perl 6 at a Glance is made available freely by AndrewShitov recently: https://deeptext.media/i/perl6-at-a-glance/perl6-at-a-glance-downloadable.pdf

[14:07] *** p6bannerbot sets mode: +v avar

[14:08] <Xliff> moritz: OK, thanks.

[14:11] *** sjoshi joined
[14:11] *** p6bannerbot sets mode: +v sjoshi

[14:12] <uzl> woolfy: Thanks. I also got the Shitov's Perl 6 Deep Dive the other day from the Packt's free ebook deal. Reading through it currently.

[14:12] *** molaf joined
[14:13] *** p6bannerbot sets mode: +v molaf

[14:16] *** sjoshi left
[14:17] *** sjoshi joined
[14:17] *** p6bannerbot sets mode: +v sjoshi

[14:17] <woolfy> uzl: have fun

[14:19] <uzl> woolfy: ;)!

[14:21] *** sjoshi left
[14:21] *** lucasb left
[14:22] *** molaf left
[14:24] *** sjoshi joined
[14:24] *** p6bannerbot sets mode: +v sjoshi

[14:28] *** sjoshi left
[14:29] *** sjoshi joined
[14:30] *** p6bannerbot sets mode: +v sjoshi

[14:30] <moritz> there's also a free ebook version of "Think Perl 6" bei Rosenfeld

[14:38] <pheix> moritz: where?

[14:39] <uzl> pheix: https://github.com/LaurentRosenfeld/thinkperl6

[14:40] <uzl> moritz: I know about that one. I translated it to Spanish: https://uzluisf.gitlab.io/piensaperl6/

[14:40] *** uzl left
[14:41] *** Itaipu left
[14:42] <pheix> moritz:  thanx for link! What's about your contest? ;)))

[14:44] <moritz> pheix: I need time to blog about it :)

[14:45] *** Itaipu joined
[14:46] *** p6bannerbot sets mode: +v Itaipu

[14:46] <pheix> moritz: super!

[14:56] *** SqrtNegInf joined
[14:57] *** p6bannerbot sets mode: +v SqrtNegInf

[15:01] <[Coke]> h

[15:09] *** Sound left
[15:18] *** molaf joined
[15:18] *** p6bannerbot sets mode: +v molaf

[15:21] <buggable> New CPAN upload: JSON-Path-1.4.tar.gz by JNTHN http://modules.perl6.org/dist/JSON::Path:cpan:JNTHN

[15:23] *** pheix left
[15:23] *** fnux_ joined
[15:23] *** finanalyst left
[15:24] *** p6bannerbot sets mode: +v fnux_

[15:26] *** fnux left
[15:34] *** fake_space_whale joined
[15:35] *** p6bannerbot sets mode: +v fake_space_whale

[15:40] *** melezhik joined
[15:40] *** p6bannerbot sets mode: +v melezhik

[15:41] <melezhik> Hi! How do I print exception class in catch {} block?

[15:41] <buggable> New CPAN upload: JSON-Path-1.5.tar.gz by JNTHN http://modules.perl6.org/dist/JSON::Path:cpan:JNTHN

[15:41] <timotimo> you can "put .^name"

[15:42] <melezhik> thanks

[15:43] <SmokeMachine> m: die "this is an error"; CATCH { default { .say } }

[15:43] <camelia> rakudo-moar 2eb43ab9e: OUTPUT: ¬´this is an error‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:43] <SmokeMachine> melezhik: ^^

[15:44] <SmokeMachine> oh! sorry! exception class!

[15:44] <SmokeMachine> m: die "this is an error"; CATCH { default { .^name.say } }

[15:44] <camelia> rakudo-moar 2eb43ab9e: OUTPUT: ¬´X::AdHoc‚ê§¬ª

[15:44] <melezhik> ok

[15:44] <timotimo> no need for the default unless you want to actually catch the exception, rather than have it rethrown

[15:46] *** ChoHag left
[15:47] *** lizmat left
[15:47] *** ChoHag joined
[15:47] *** jmerelo joined
[15:47] *** p6bannerbot sets mode: +v ChoHag

[15:48] *** p6bannerbot sets mode: +v jmerelo

[15:49] <SmokeMachine> m: die "this is an error"; CATCH { .^name.say }

[15:49] <camelia> rakudo-moar 2eb43ab9e: OUTPUT: ¬´X::AdHoc‚ê§this is an error‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[15:53] *** pmurias joined
[15:53] *** p6bannerbot sets mode: +v pmurias

[15:56] *** n0tjack joined
[15:57] *** p6bannerbot sets mode: +v n0tjack

[16:00] *** pmurias left
[16:01] *** pmurias joined
[16:01] *** p6bannerbot sets mode: +v pmurias

[16:03] *** molaf left
[16:05] *** n0tjack left
[16:08] *** jmerelo left
[16:10] *** curan left
[16:15] <[Coke]> just got this running 'make xtest' in doc repo:

[16:15] <[Coke]> Unhandled exception in code scheduled on thread

[16:15] <[Coke]> 4

[16:15] <[Coke]> too many open files

[16:15] *** ferreira joined
[16:15] *** pmurias left
[16:16] *** pmurias joined
[16:16] *** p6bannerbot sets mode: +v pmurias

[16:16] *** p6bannerbot sets mode: +v ferreira

[16:23] *** domidumont left
[16:29] <Xliff> OK. Latest (and to my knowledge...last) hangup I've got with my white whale...

[16:29] <Xliff> https://gist.github.com/Xliff/8e402d623cea2dc39ceaf245e820d7fd

[16:29] <Xliff> Hopefully someone more familiar with NativeCall can help.

[16:30] *** irdr joined
[16:31] *** p6bannerbot sets mode: +v irdr

[16:31] *** irdr left
[16:31] *** pmurias left
[16:33] *** pmurias joined
[16:33] *** p6bannerbot sets mode: +v pmurias

[16:33] *** pmurias left
[16:36] *** irdr joined
[16:36] *** p6bannerbot sets mode: +v irdr

[16:37] *** irdr left
[16:40] *** scimon left
[16:43] *** stmuk joined
[16:43] *** pmurias joined
[16:43] *** p6bannerbot sets mode: +v pmurias

[16:44] *** p6bannerbot sets mode: +v stmuk

[16:44] <Geth> ¬¶ modules.perl6.org: 6f471c81bf | (Lucas Buchala)++ (committed using GitHub Web editor) | lib/ModulesPerl6/Controller/Dist.pm

[16:44] <Geth> ¬¶ modules.perl6.org: Associate test files (*.t) with file type "perl6"

[16:44] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/6f471c81bf

[16:46] *** stmuk_ left
[16:50] *** melezhik left
[16:51] <buggable> New CPAN upload: Algorithm-MinMaxHeap-0.13.4.tar.gz by TITSUKI http://modules.perl6.org/dist/Algorithm::MinMaxHeap:cpan:TITSUKI

[16:52] *** xinming left
[16:58] *** hamhu3 left
[16:59] *** hamhu3 joined
[16:59] *** hamhu3 left
[17:00] *** hamhu3 joined
[17:00] *** p6bannerbot sets mode: +v hamhu3

[17:06] *** fake_space_whale left
[17:11] *** xinming joined
[17:12] *** p6bannerbot sets mode: +v xinming

[17:12] *** robertle_ joined
[17:13] *** p6bannerbot sets mode: +v robertle_

[17:24] *** HaraldJoerg joined
[17:25] *** p6bannerbot sets mode: +v HaraldJoerg

[17:28] *** Itaipu left
[17:30] *** sjoshi left
[17:32] *** Itaipu joined
[17:33] *** p6bannerbot sets mode: +v Itaipu

[17:33] *** dct left
[17:37] <woolfy> uzl : you translated Think Perl 6 to Spanish.  Wow.  Cool.  Thank you.

[17:38] *** ExtraCrispy joined
[17:38] <El_Che> the author tranlated the original to p6 from python, I think I heard him saying ;)

[17:38] *** p6bannerbot sets mode: +v ExtraCrispy

[17:38] <timotimo> woolfy: i'm sure you don't mean it that way, but to me the punctuation in that sentence makes it look like sarcasm

[17:39] <mst> doesn't to me

[17:39] <mst> especially given the 'thank you' at the end

[17:39] <El_Che> mst: Are. You. Sure?

[17:39] <mst> El_Che: THERE ARE FOUR LIGHTS

[17:40] <El_Che> stay away if they are white, though

[17:40] <timotimo> lock phasers on that vessel

[17:40] * [particle] hands timotimo a fatal stub operator !!!

[17:41] <El_Che> Is there an utf8 inverse polarity operator in p6?

[17:43] <mst> use Saucery;

[17:45] *** lucasb joined
[17:45] <timotimo> buggable: eco sourcery

[17:45] <buggable> timotimo, CoreHackers::Sourcery 'Helper for showing actual source code locations of core subs and methods': http://modules.perl6.org/dist/CoreHackers::Sourcery:github:Zoffix%20Znet

[17:45] *** p6bannerbot sets mode: +v lucasb

[17:50] *** AlexDaniel joined
[17:50] *** p6bannerbot sets mode: +v AlexDaniel

[17:53] *** snowfox joined
[17:54] *** p6bannerbot sets mode: +v snowfox

[17:55] *** dakkar left
[17:59] *** stmuk_ joined
[17:59] *** lizmat joined
[17:59] *** p6bannerbot sets mode: +v lizmat

[17:59] *** p6bannerbot sets mode: +v stmuk_

[18:00] <AlexDaniel> .

[18:00] <yoleaux> 12:09Z <jmerelo> AlexDaniel: what's in store for next Squashathon?

[18:00] *** stmuk left
[18:01] <AlexDaniel> .tell jmerelo Haven't decided yet (though I had many ideas). Any suggestions?

[18:01] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[18:01] <SmokeMachine> AlexDaniel: what are the ideas?

[18:04] <SmokeMachine> What about helping not yet published modules? (like Red)

[18:05] *** xinming left
[18:06] <AlexDaniel> SmokeMachine: that sounds hard‚Ä¶ probably not something people will be able to do casually

[18:07] <AlexDaniel> SmokeMachine: one of the cool/crazy ideas I had was ‚ÄúWrite a blog post about Perl¬†6‚Äù

[18:07] <AlexDaniel> but with recent events‚Ä¶ not sure if we want to see a bunch of blog posts about naming :D

[18:08] <El_Che> AlexDaniel: hold my beer

[18:08] <snowfox> what sort of recent events

[18:08] <SmokeMachine> "Write a blog post about Perl 6 feature, not names" :P

[18:09] <Xliff> How about this one?

[18:09] <Xliff> https://gist.github.com/Xliff/8e402d623cea2dc39ceaf245e820d7fd

[18:09] *** Itaipu left
[18:09] <SmokeMachine> what about right perl6 applications?

[18:09] <Xliff> It's more a question than an article, but I'm hoping to turn it into one with help.

[18:09] <SmokeMachine> AlexDaniel: ^^

[18:10] <AlexDaniel> snowfox: v6.d was released, and together with it ‚ÄúRaku‚Äù alias became a thing https://marketing.perl6.org/id/1541379592/pdf_digital

[18:10] <AlexDaniel> snowfox: this however turned out to be controversial, so some people who care about Perl¬†6 and its future got very emotional

[18:10] *** Itaipu joined
[18:11] <snowfox> I don't really see the problem there, to be honest

[18:11] *** p6bannerbot sets mode: +v Itaipu

[18:11] <lucasb> AlexDaniel: https://i.imgur.com/zUEwpV7.png

[18:11] <lucasb> AlexDaniel: why not create a wiki there? looks so easy :)

[18:12] <woolfy> timotimo: eh, no, no sarcasm.  I posted about that translation on the Perl6 group in Facebook, because I thought it was an awesome thing to happen.  And I don't know who is behind all the nicknames here (yeah, I know you and mst and El_Che and many others).

[18:13] <AlexDaniel> snowfox: I don't want to bring that discussion back to life again right now, everyone is rather exhausted‚Ä¶ but here's a blog post explaining why it may be a problem https://liztormato.wordpress.com/2018/11/06/on-raku/

[18:13] <timotimo> <3

[18:13] <SmokeMachine> AlexDaniel: what about translating the docs?

[18:14] <AlexDaniel> SmokeMachine: we don't have any code for that yet‚Ä¶ IIRC there was a PR for Chinese translation, I don't know what we ended up doing with it

[18:14] <AlexDaniel> so surely we can tell people to translate the docs, and we'll get a bunch of PRs‚Ä¶ but then what?

[18:15] <AlexDaniel> lucasb: where's that?

[18:15] <lucasb> AlexDaniel: https://miraheze.org/

[18:15] <SmokeMachine> AlexDaniel: dont we have the infrastucture to let the user read the doscs in a different language?

[18:16] <SmokeMachine> AlexDaniel: if we dont, maybe creating it could be a good idea to a squashathon?

[18:16] *** domidumont joined
[18:17] <AlexDaniel> SmokeMachine: I think we don't. Related ticket: https://github.com/perl6/doc/issues/2195

[18:17] *** p6bannerbot sets mode: +v domidumont

[18:17] <AlexDaniel> SmokeMachine: here's a comment that sums it up: https://github.com/perl6/doc/pull/2194#issuecomment-418982608

[18:18] <AlexDaniel> creating it, hmm‚Ä¶ is again, hard

[18:18] <AlexDaniel> what works best for squashathons is when you have a bunch of separate small tasks that can be picked up easily

[18:19] <AlexDaniel> which is why ecosystem-unbitrot idea turned out to be that great

[18:19] <AlexDaniel> and also why doc squashathons used to be fun (until we resolved all easy tickets)

[18:19] <Xliff> Ah... unbitrot.. that was fun.

[18:20] <AlexDaniel> releasable6: next

[18:20] <releasable6> AlexDaniel, Next release in ‚âà9 days and ‚âà0 hours. 4 blockers. 0 out of 95 commits logged

[18:20] <releasable6> AlexDaniel, Details: https://gist.github.com/855562396395a7e0c238f6b04f02ab6e

[18:20] <AlexDaniel> squashable6: next

[18:20] <squashable6> AlexDaniel, Next SQUASHathon in 23 days and ‚âà15 hours (2018-12-03 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:21] <AlexDaniel> lucasb: it looks easy indeed, but I don't know if there are any downsides

[18:22] <chsanch> There is a propose to redesign the documentation system, I think this will help with the translations later https://github.com/perl6/doc/issues/2392

[18:22] <AlexDaniel> maybe we wouldn't be able to install extension at will

[18:22] <AlexDaniel> extensions*

[18:23] <lucasb> "Miraheze would be more than willing to host a wiki for Perl 6 and install extensions on request" :)

[18:24] <AlexDaniel> :o

[18:24] <lucasb> :D

[18:24] <Xliff> A semi-functional directory browser in Perl6.

[18:25] <Xliff> https://github.com/Xliff/p6-GtkPlus/blob/master/t/25-iconview.t

[18:28] *** noganex_ left
[18:29] *** noganex joined
[18:29] *** p6bannerbot sets mode: +v noganex

[18:30] *** yqt left
[18:30] <AlexDaniel> lucasb: I'm pretty sure that a self-hosted solution will be preferred by most devs, but maybe we can start it anywhere and move later if it ends up being useful

[18:31] <AlexDaniel> lucasb: but yeah, I really don't know what's the best way to make it happen, but I do know that I will use it :)

[18:31] <lucasb> I could personally create the 'Unofficial Perl 6' and if you think it's worth you could join my editing the pages :)

[18:32] <SmokeMachine> what's the problem with the github's wiki?

[18:32] <lucasb> it's not MediaWiki :)

[18:32] <chsanch> I think github's wiki could work fine

[18:32] <Xliff> What's so great about MediaWiki?

[18:32] <SmokeMachine> so, what's the problem of not being MediaWiki?

[18:33] <Xliff> If we really want a blog, I could always port Slashcode to Bailador.

[18:33] * Xliff flees

[18:33] <AlexDaniel> ok, here's the thing

[18:33] *** sftp left
[18:33] <AlexDaniel> I'm not agains or for mediawiki, but the point is that we currently don't have any single wiki where you'd be able to do stuff

[18:33] <lucasb> SmokeMachine: j/k about it not being MW, I'll try to expand on that later :)

[18:34] <AlexDaniel> There were attempts to abuse https://github.com/rakudo/rakudo/wiki/ but it does not seem to be very popular

[18:34] <AlexDaniel> so please leave comments on https://github.com/perl6/user-experience/issues/34

[18:34] <AlexDaniel> like, maybe we should just start https://github.com/perl6/wiki/wiki

[18:35] <chsanch> I'm not really sure we need a wiki right now, those efforts could be used to work on the various proposes to improve the actual documentation 

[18:35] <SmokeMachine> is the problem with that that it is on github or the problem is it's a wiki?

[18:35] <lucasb> SmokeMachine: I think the GitHub interface may get in the way, but IDK, I never edited a GH wiki

[18:35] <AlexDaniel> SmokeMachine: you mean with rakudo/wiki? It's a wiki of the *compiler*, so it doesn't really fit questions regarding the language

[18:35] <AlexDaniel> or so I think

[18:36] <lucasb> wiki.perl6.org would be as general as possible

[18:36] <AlexDaniel> we can make wiki.perl6.org redirect to github, or whatever. We should decide. But there must be some meaningful single place

[18:37] <woolfy> uzl: I hope some people came to your help to proofread the Spanish translation for you.  I posted this on the 30th of October on Perl6 on Facebook: https://www.facebook.com/groups/perl6/permalink/2216038305329183/

[18:37] <SmokeMachine> #`(Squashothon idea: http://github.com/perl6/awesome-perl6)

[18:37] *** sftp joined
[18:37] *** p6bannerbot sets mode: +v sftp

[18:37] <AlexDaniel> SmokeMachine: explain :)

[18:38] <SmokeMachine> AlexDaniel: https://github.com/search?q=awesome

[18:38] <poohman> Hello all

[18:39] <AlexDaniel> poohman: hi!

[18:39] <poohman> a small question

[18:39] <SmokeMachine> AlexDaniel: a github repo listing awesome things on perl6

[18:39] <AlexDaniel> SmokeMachine: ooooooooohh

[18:39] <lucasb> took a while to understand :D

[18:40] <poohman> If I declare a Hash, can I assume the values will be initialised to 0??

[18:40] <chsanch> woolfy: I didn¬¥t know there were a Perl 6 book in spanish, I could help proofread the translation (I'm not in the facebook group, are those announcements also in twitter?)

[18:40] <AlexDaniel> m: my %h is default(42); say %h<abc>

[18:40] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´42‚ê§¬ª

[18:40] <AlexDaniel> m: my %h is default(0); say %h<abc>

[18:40] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´0‚ê§¬ª

[18:40] <AlexDaniel> m: my %h is default(0); say %h<abc>; say %h

[18:40] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´0‚ê§{}‚ê§¬ª

[18:40] <poohman> I tried it and it seems to be initialised - just wanted to be sure to avoid any surprises later

[18:41] <AlexDaniel> poohman: yeah, accessing non-existent values will just give Nil

[18:41] <SmokeMachine> m: Str %a; say %a<qwer>

[18:41] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '%a' is not declared‚ê§at <tmp>:1‚ê§------> 3Str %a; say 7‚èè5%a<qwer>‚ê§¬ª

[18:41] <SmokeMachine> m: my Str %a; say %a<qwer>

[18:41] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´(Str)‚ê§¬ª

[18:41] <AlexDaniel> poohman: what did you try exactly? It shouldn't work unless you use `is default`

[18:42] <SmokeMachine> m: my %a; say %a<qwer>++

[18:42] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´0‚ê§¬ª

[18:42] <poohman> AlexDaniel : let me see if I can try it here - its a bit long

[18:43] <SmokeMachine> AlexDaniel: what did you think about http://github.com/perl6/awesome-perl6 ?

[18:43] <poohman> m: my Int %a; say %a<qwer>++

[18:43] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´0‚ê§¬ª

[18:44] <poohman> m: my Int %a; say %a<qwer>++;%a<qwer>++

[18:44] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´0‚ê§¬ª

[18:44] <SmokeMachine> poohman: that's not the hash that makes it 0... but the ++

[18:44] <SmokeMachine> m: my $a; say $a++

[18:44] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´0‚ê§¬ª

[18:44] <SmokeMachine> m: my $a; say $a

[18:44] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´(Any)‚ê§¬ª

[18:45] <SmokeMachine> m: my $a; say $a; say $a++

[18:45] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´(Any)‚ê§0‚ê§¬ª

[18:45] <poohman> SmokeMachine: Ok - any logic behind the ++ operator??

[18:45] <poohman> or History?

[18:45] <SmokeMachine> autovivification

[18:46] <SmokeMachine> is that autovivification?

[18:47] <SmokeMachine> poohman: https://github.com/rakudo/rakudo/blob/de4e82259be36ac9c97b56d594591ea796a1b131/src/core/Any.pm6#L481

[18:48] <AlexDaniel> SmokeMachine: it's a great idea in general. I'm not fully sure how to turn that into a squashathon though, but feel free to organize that if you see how that can happen

[18:49] <AlexDaniel> I have to get some sleep ASAP, so see you all later o/

[18:49] <poohman> AlexDanil : later - thanks 

[18:49] <SmokeMachine> I thought of each person searching for awesome perl6 stuff and commiting on the repo...

[18:50] <poohman> sorry

[18:50] <poohman> wanted to see if I could reply automatically

[18:51] <SmokeMachine> poohman: did you get that?

[18:52] *** Itaipu left
[18:53] *** Itaipu joined
[18:53] <poohman> SmokeMachine : not yet

[18:54] *** p6bannerbot sets mode: +v Itaipu

[18:55] *** Itaipu left
[18:55] *** pmurias left
[18:55] <SmokeMachine> poohman: if the variable is Any and undefined, so ++ will set its value to 1 and return 0

[18:56] *** pmurias joined
[18:56] *** p6bannerbot sets mode: +v pmurias

[18:56] <lizmat> do we have a nice and easy way to have a method dispatch on the value of an *attribute* ?

[18:56] *** pmurias left
[18:56] *** lucasb left
[18:57] *** Itaipu joined
[18:57] <moritz> m: class A { has $.a = 42 }; multi a ($) { 'fallback' }; multi a ( $ (:$a where 42 ) ) { 'specific' }; say a A.new

[18:57] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´specific‚ê§¬ª

[18:57] <poohman> m: my $a; say $a; say ++$a

[18:57] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´(Any)‚ê§1‚ê§¬ª

[18:57] <moritz> lizmat: ^^

[18:58] <timotimo> right, you can destructure self in front of a :, too

[18:58] <timotimo> just like that

[18:58] *** p6bannerbot sets mode: +v Itaipu

[18:59] *** pecastro joined
[18:59] *** p6bannerbot sets mode: +v pecastro

[19:01] <SmokeMachine> poohman: I mean postfix:<++>

[19:02] <lizmat> moritz: but that won't be very performant, I guess

[19:02] <poohman> SmokeMachine : was just testing prefix

[19:02] <poohman> multi sub postfix:<++>(Mu:U $a is rw) { $a = 1; 0 }

[19:02] <poohman> Mu:U means undefined??

[19:02] <SmokeMachine> poohman: yes

[19:02] <poohman> Mu is Anything I guess

[19:03] <poohman> ok

[19:03] <tobs> poohman: no, that would be Any :-)

[19:03] <SmokeMachine> poohman: thats it!

[19:03] <SmokeMachine> poohman: and for prefix: https://github.com/rakudo/rakudo/blob/de4e82259be36ac9c97b56d594591ea796a1b131/src/core/Any.pm6#L474

[19:04] *** Itaipu left
[19:04] <poohman> m: my $a; say $a; say $a++; say $a++; 

[19:04] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´(Any)‚ê§0‚ê§1‚ê§¬ª

[19:04] <poohman> m: my $a; say $a; say $a++; say $a;

[19:04] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´(Any)‚ê§0‚ê§1‚ê§¬ª

[19:06] <tobs> moritz: that's very cool, would have never occurred to me.

[19:06] *** pmurias joined
[19:06] *** p6bannerbot sets mode: +v pmurias

[19:07] <[Coke]> .seen makoto

[19:07] <yoleaux> I haven't seen makoto around.

[19:07] <tobs> There are definitely some things in Perl 6 (like everywhere, really) that someone else has to show you once. So I hope you save such goodies for the signature book, if you do decide to write it.

[19:09] <poohman> SmokeMachine : thanks

[19:10] <timotimo> lizmat: could be faster with a "where" clause directly on the invocant

[19:10] <timotimo> rather than using destructuring

[19:10] *** zakharyas left
[19:10] <lizmat> ok, will do some tests

[19:11] <lizmat> specifically looking at dispatching to a specific method in Hyper where nqp::eqaddr(&!operator,&infix:<+>)

[19:12] *** Itaipu joined
[19:12] *** holyghost left
[19:13] *** holyghost joined
[19:13] *** p6bannerbot sets mode: +v Itaipu

[19:14] *** p6bannerbot sets mode: +v holyghost

[19:23] *** ferreira left
[19:24] *** ferreira joined
[19:25] *** p6bannerbot sets mode: +v ferreira

[19:26] *** Itaipu left
[19:26] *** snowfox left
[19:26] <woolfy> chsanch: the Facebook group is open, you can click on the link and see the post.  The translator is uzl who is a regular on this channel, so you can contact him to ask him if he still needs proofreaders.  Thank you for offering.

[19:28] <woolfy> chsanch: anyway, I wrote this in that post: "Luis F. Uceta needs help, as in Spanish-speaking volunteers willing  to be external reviewers and/or proofreaders for this Spanish  translation of Laurent Rosenfeld's Think Perl 6."

[19:28] <woolfy> chsanch: "My mastery of Spanish  is not even enough to order a vegetarian meal, so I am hoping for other  members of this Facebook group. I think it is amazing anyway..."

[19:28] <woolfy> chsanch: "Luis has translated 450 pages of that book into Spanish.  And on page  455 you will find a very nice Perl 6 cheat sheet (in Spanish of course)."

[19:29] <woolfy> chsanch: https://uzluisf.gitlab.io/piensaperl6/

[19:32] *** Itaipu joined
[19:33] *** p6bannerbot sets mode: +v Itaipu

[19:38] *** ferreira left
[19:39] *** Itaipu left
[19:39] *** Itaipu joined
[19:40] *** p6bannerbot sets mode: +v Itaipu

[19:42] *** noganex_ joined
[19:42] *** Itaipu left
[19:42] *** p6bannerbot sets mode: +v noganex_

[19:43] *** Itaipu joined
[19:44] *** p6bannerbot sets mode: +v Itaipu

[19:45] *** Itaipu left
[19:45] *** noganex left
[19:46] *** Itaipu joined
[19:47] *** p6bannerbot sets mode: +v Itaipu

[19:55] *** dct joined
[19:55] *** p6bannerbot sets mode: +v dct

[19:56] *** mahafyi joined
[19:56] *** p6bannerbot sets mode: +v mahafyi

[20:00] *** dct left
[20:00] *** domidumont left
[20:00] <SmokeMachine> what do you guys think about the idea of doing a http://github.com/perl6/awesome-perl6 ?

[20:01] <lizmat> a 404 ?

[20:02] <SmokeMachine> lizmat: no, the idea of creating that... that does not exists yet...

[20:02] <lizmat> what would that be?

[20:03] <lizmat> A list of awesome Perl 6 things ?

[20:03] <lizmat> as a wiki ?

[20:03] <lizmat> I feel like I'm missing a clue here

[20:04] <SmokeMachine> lizmat: a github repo listing awesome things on perl6

[20:04] <SmokeMachine> lizmat: like: https://github.com/search?q=awesome

[20:05] <lizmat> aaaah... see, that was what I was missing...

[20:05] <lizmat> sounds like a good idea to me

[20:06] <SmokeMachine> for example: https://github.com/vinta/awesome-python

[20:07] <Xliff> m: class A { has $.a = 42 }; multi a ($) { 'fallback' }; multi a ( $ (:$a where 42 ) ) { 'specific' }; say a A.new

[20:07] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´specific‚ê§¬ª

[20:07] <Xliff> Hunh?

[20:07] <Xliff> (:$a where 42) refers to the Attribute from A?

[20:08] <Xliff> m: class A { has $.a = 42 }; multi a ($) { 'fallback' }; multi a ( $ (:$a where 42 ) ) { 'specific' }; say a A.new(a => 43)

[20:08] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´fallback‚ê§¬ª

[20:08] <SmokeMachine> we are not here: https://github.com/sindresorhus/awesome#programming-languages

[20:10] <Xliff> Where can I read up on deconstruction?

[20:11] <Xliff> er... destructuring, rather.

[20:15] <SmokeMachine> m: class C { has Bool $.a = True; method bla { $!a } }; say C.new ~~ :bla; say C.new(:!a) ~~ :bla

[20:15] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´True‚ê§False‚ê§¬ª

[20:15] <Xliff> Nevermind. Found this: https://perl6advent.wordpress.com/2017/12/05/day-5-destructure-your-arguments-with-perl-6-signatures/

[20:16] <Xliff> m: class C { has Bool $.a = True; method bla { $!a } }; say C.new ~~ :bleh; 

[20:16] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´No such method 'bleh' for invocant of type 'C'. Did you mean any of these?‚ê§    bla‚ê§    bless‚ê§‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:17] <SmokeMachine> m: class C { has Bool $.a = True; method bla { say "here";  $!a } }; say C.new ~~ :bla; say C.new(:!a) ~~ :bla

[20:17] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´here‚ê§True‚ê§here‚ê§False‚ê§¬ª

[20:21] <SmokeMachine> m: class C { has Bool $.a = True; method bla { say "here";  $!a } }; multi a(C $ where :bla) { say "yes" }; a C.new

[20:21] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´here‚ê§here‚ê§yes‚ê§¬ª

[20:22] <SmokeMachine> m: class C { has Bool $.a = True; method bla { say "here";  $!a } }; multi a(C $ where :bla) { say "yes" }; a C.new: :!a

[20:22] <camelia> rakudo-moar b0a2ce765: OUTPUT: ¬´here‚ê§Cannot resolve caller a(C.new(a => Bool::False)); none of these signatures match:‚ê§    (C $ where { ... })‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:22] <El_Che> In case someone is interested, my thought on the the latest debated in underlying issues: https://nxadm.wordpress.com/2018/11/08/quo-vadis-perl/ (cc: AlexDaniel)

[20:23] <chsanch> woolfy: Great, I'll take a look. Thanks!

[20:23] <El_Che> Not meant to rekindle the fire, but a view on where we are today

[20:28] *** stmuk joined
[20:28] *** p6bannerbot sets mode: +v stmuk

[20:29] *** molaf joined
[20:29] <mst> having a decent summary of the multiple overlapping positions involved should hopefully be a net win

[20:30] *** p6bannerbot sets mode: +v molaf

[20:30] *** stmuk_ left
[20:32] *** |oLa| left
[20:33] *** ExtraCrispy left
[20:39] *** ferreira joined
[20:40] *** p6bannerbot sets mode: +v ferreira

[20:54] <pmurias> El_Che: re VMs are interchangable did you mean -mostly Perl *6*'s-?

[20:55] *** Sgeo_ left
[20:56] *** Sgeo_ joined
[20:56] *** p6bannerbot sets mode: +v Sgeo_

[20:56] <El_Che> pmurias: I mean that Perl will stay perl even if perl5 is replaced by perl6

[20:56] <El_Che> (thx, I will clarify that)

[20:58] <El_Che> (updated)

[21:24] *** sunnavy left
[21:42] *** Ven`` joined
[21:42] *** p6bannerbot sets mode: +v Ven``

[21:44] *** delon joined
[21:45] *** p6bannerbot sets mode: +v delon

[21:46] *** Ven`` left
[21:49] <lichtkind> is 6.d officially out?

[21:50] *** kensanata left
[21:52] *** delon left
[21:52] *** delon joined
[21:53] *** p6bannerbot sets mode: +v delon

[22:01] <stmuk> the raku specification is out and its default on master of rakudo

[22:01] *** delon left
[22:09] *** lucasb joined
[22:09] *** p6bannerbot sets mode: +v lucasb

[22:11] <lichtkind> rhanks stmuk

[22:12] * lizmat refrains from making a comment

[22:12] <benjikun> that is a comment

[22:14] *** sena_kun left
[22:14] <stmuk> its an undefined comment just not the most undefined comment :)

[22:15] <benjikun> not with some context heh

[22:17] <lichtkind> i meant thanks stmuk

[22:17] <lizmat> let me put it this way: stmuk is helping me in my argument that "Raku Perl 6" is a thinly veiled attempt at a full rename of Perl 6

[22:18] <benjikun> I don't think it's veiled

[22:19] *** rindolf left
[22:20] <El_Che> this didn't take long

[22:20] <stmuk> I think the meaning of "refrains" has been overloaded!

[22:22] *** kerframil joined
[22:22] *** p6bannerbot sets mode: +v kerframil

[22:29] <woolfy> Claudio Ramirez: Hoi, ik ben je stuk aan het lezen...  ik hoop dat je deze kleine typo accepteert: "Perl 5 in not really active on Github and the code mirror there..."  -> (in -> is) -> "Perl 5 is not really active on Github and the code mirror there ..."

[22:30] <woolfy> (sorry for the Dutch...  irc did not let me contact Claudio personally... some thing with registration of my nickname dat I tried to do but that did not work out)

[22:31] <lucasb> I thought it was rot13

[22:32] <lucasb> j/k :)

[22:32] <benjikun> lol

[22:35] <woolfy> Hehe

[22:36] <woolfy> Claudio Ramirez: "and a feeling of not being listen to." -> "and a feeling of not being listened to."

[22:38] <woolfy> Claudio Ramirez ++: I like the article.  We disagree on minor points.  Thank you.

[22:39] *** HaraldJoerg left
[22:44] *** k-man left
[22:44] *** k-man joined
[22:44] *** tolkien.freenode.net sets mode: +v k-man

[22:44] *** p6bannerbot sets mode: +v k-man

[22:44] *** robertle_ left
[22:48] *** Sgeo__ joined
[22:48] *** p6bannerbot sets mode: +v Sgeo__

[22:50] *** Sgeo_ left
[22:53] *** k-man left
[22:55] *** k-man joined
[22:56] *** p6bannerbot sets mode: +v k-man

[22:57] *** k-man left
[22:57] *** k-man joined
[22:57] *** karatkievich.freenode.net sets mode: +v k-man

[22:57] *** p6bannerbot sets mode: +v k-man

[22:59] *** k-man left
[23:00] *** k-man joined
[23:00] *** p6bannerbot sets mode: +v k-man

[23:00] *** MasterDuke joined
[23:00] *** p6bannerbot sets mode: +v MasterDuke

[23:00] *** MasterDuke left
[23:00] *** MasterDuke joined
[23:00] *** herbert.freenode.net sets mode: +v MasterDuke

[23:00] *** p6bannerbot sets mode: +v MasterDuke

[23:05] *** lucasb left
[23:10] *** pmurias left
[23:21] *** fake_space_whale joined
[23:22] *** p6bannerbot sets mode: +v fake_space_whale

[23:29] *** Itaipu left
[23:31] *** Itaipu joined
[23:32] *** p6bannerbot sets mode: +v Itaipu

[23:35] *** Itaipu left
[23:35] *** Itaipu joined
[23:36] *** p6bannerbot sets mode: +v Itaipu

[23:38] *** MasterDuke left
[23:47] <AlexDaniel> lichtkind: regarding the language version defaulting to v6.d on master, there's a chance that rakudo 2018.11 will not default to v6.d

[23:47] <AlexDaniel> lichtkind: see this ticket: https://github.com/rakudo/rakudo/issues/2451

[23:48] <AlexDaniel> I'm a bit busy at the moment so cannot work on submitting PRs to affected modules

[23:59] *** pecastro left
