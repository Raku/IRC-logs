[00:00] <buggable> üé∫üé∫üé∫ It's time for the monthly Accidental /win Lottery üòçüòçüòç We have 1 ballots submitted by 1 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 5! Congratulations to Ulti! You win a roll of duck tape!

[00:10] *** patrickb left
[00:16] <holyghost> eco: roll of duck tape

[00:16] <yoleaux> 31 Oct 2018 11:15Z <Zoffix> holyghost: you should write an Advent article for your modules. Sign up: https://github.com/perl6/mu/blob/master/misc/perl6advent-2018/schedule

[00:16] <buggable> holyghost, Nothing found

[00:16] <yoleaux> 31 Oct 2018 11:21Z <Zoffix> holyghost: better link: https://perl6.party/post/Perl-6-Advent-Calendar-2018--Call-for-Authors

[00:16] <jnthn> rouking: Oh! It's becuase you're using `rule`, which inserts <.ws> calls for you automatically

[00:16] <jnthn> rouking: And the default `<.ws>` matches vertical whitespace too

[00:17] <jnthn> Try token ws { <!ww> \h* } or some such

[00:18] *** cognominal-p6 left
[00:18] *** cognominal-p6 joined
[00:19] *** p6bannerbot sets mode: +v cognominal-p6

[00:21] <jnthn> sleep 

[00:21] <jnthn> 'night o/

[00:21] <timotimo> gnite o/

[00:24] *** atMaxRink21 joined
[00:24] *** atMaxRink21 left
[00:31] *** rindolf left
[00:45] <rouking> jnthn: That's progress--it at least tries to match another line, but it fails immediately

[00:46] <rouking> what is <!ww> there, by the way?

[00:48] *** cognominal-p6 left
[00:49] <leont> It's a zero-length assertion

[00:49] <leont> <ww> checks if you're in the middle of a word, so <!ww> checks the opposite

[00:50] <leont> Not entirely sure what the difference between <wb> and <!ww> would be though

[00:52] <rouking> This is giving me much more grief than I had hoped

[00:56] <leont> I tend to use token or regex instead of rule, that gives less surprises

[00:56] <leont> (token doesn't do backtracking, so it's faster but there are situations where regex parses things that token can't)

[00:57] <leont> rule tends to be useful when parsing a freeform grammar, and quite a lot of parsing problems aren't that. It just happens to be that most programming languages that aren't python are such freeform grammers.

[00:58] <timotimo> yeah, rule can be very surprising indeed

[00:59] <rouking> Alright, I will just try using token since I know exactly what my format will be

[01:00] <rouking> hmm, still fails on the second line...

[01:09] *** kaare_ left
[01:09] *** kaare_ joined
[01:10] *** p6bannerbot sets mode: +v kaare_

[01:27] *** fake_space_whale joined
[01:28] *** p6bannerbot sets mode: +v fake_space_whale

[01:32] *** sno left
[01:34] *** sno joined
[01:34] *** p6bannerbot sets mode: +v sno

[02:05] *** leont left
[02:06] *** molaf left
[02:19] *** molaf joined
[02:20] *** p6bannerbot sets mode: +v molaf

[02:22] <Xliff> \o

[02:22] <Xliff> Just managed to bring down a piece of code generating segfaults.

[02:23] <Xliff> Will generate segfault even with SPESH and JIT disabled.

[02:25] *** [Sno] joined
[02:25] *** donaldh joined
[02:25] *** p6bannerbot sets mode: +v donaldh

[02:26] *** p6bannerbot sets mode: +v [Sno]

[02:28] *** sno left
[02:29] <Xliff> OK. I can trigger the segfault with what appears to be regularity.

[02:29] *** [Sno] left
[02:33] *** sno joined
[02:34] *** p6bannerbot sets mode: +v sno

[02:41] <Xliff> Segfaulting issue has been submitted as #2455

[02:42] <Xliff> Ping me if anyone would like support to help debug this. I will continue my attempts from here.

[02:44] <AlexDaniel> e: chdir ‚Äòsandbox‚Äô; run <git clone https://github.com/Xliff/p6-GtkPlus.git>

[02:44] <evalable6> AlexDaniel, rakudo-moar 4c05a0b13: OUTPUT: ¬´Cloning into 'p6-GtkPlus'...‚ê§¬ª

[02:44] <AlexDaniel> ahhhhhh that's gtk stuff again

[02:44] <AlexDaniel> alright‚Ä¶

[02:46] *** kurahaupo left
[02:46] <AlexDaniel> Xliff: does it require an X server or anything like that?

[02:46] <AlexDaniel> I'm wondering if running it bisectable makes sense

[02:46] *** sno left
[02:46] *** kurahaupo joined
[02:47] <Xliff> AlexDaniel: No. It's a code generator, so it should NOT.

[02:47] <Xliff> And yes, AlexDaniel ... the GTK stuff is my current bone! :p

[02:47] <Xliff> woof

[02:47] *** p6bannerbot sets mode: +v kurahaupo

[02:47] <AlexDaniel> ok, then‚Ä¶

[02:47] <AlexDaniel> e: chdir ‚Äòsandbox/p6-GtkPlus‚Äô; run <git checkout a6d22e9427503ed9274386a2e3b708315ea5403d>

[02:47] <evalable6> AlexDaniel, rakudo-moar 4c05a0b13: OUTPUT: ¬´Note: checking out 'a6d22e9427503ed9274386a2e3b708315ea5403d'.‚ê§‚ê§You are in 'detached HEAD'‚Ä¶¬ª

[02:48] <evalable6> AlexDaniel, Full output: https://gist.github.com/b39762b2547b937cbe433e77150ef8bd

[02:48] <AlexDaniel> e: chdir ‚Äòsandbox/p6-GtkPlus‚Äô; run <perl6 -Ilib -Iscripts scripts/ui-to-code.pl6>

[02:48] <evalable6> AlexDaniel, rakudo-moar 4c05a0b13: OUTPUT: ¬´(exit code 1) ===SORRY!===‚ê§Could not find Data::Dump::Tree at line 7 in:‚ê§    /home/bisecta‚Ä¶¬ª

[02:48] <evalable6> AlexDaniel, Full output: https://gist.github.com/61841e0c3d87cf20c246f7702607d1bf

[02:48] <AlexDaniel> argh

[02:48] <Xliff> Ack! Ditch that line.

[02:48] <Xliff> Just comment it.

[02:48] <Xliff> Or would you rather I recommit?

[02:49] <AlexDaniel> it's fine

[02:50] *** MasterDuke left
[02:50] <AlexDaniel> e: chdir ‚Äòsandbox/p6-GtkPlus‚Äô; run <perl6 -Ilib -Iscripts scripts/ui-to-code.pl6>

[02:50] <evalable6> AlexDaniel, rakudo-moar 4c05a0b13: OUTPUT: ¬´(exit code 1) ===SORRY!===‚ê§Could not find Pluggable at line 3 in:‚ê§    /home/bisectable/git‚Ä¶¬ª

[02:50] <evalable6> AlexDaniel, Full output: https://gist.github.com/163660444175d5aaaf0626f3bc28605c

[02:50] <Xliff> I'm horrible at writing bug reports.

[02:51] <Xliff> Updating.

[02:51] <AlexDaniel> what's Pluggable?

[02:51] <AlexDaniel> oh so that's a module‚Ä¶ ok hmm

[02:51] <Xliff> Yeah. Kinda required for that bit.

[02:53] <Xliff> AlexDaniel: What's the best way to compile rakudo so you can get decent backtrace info out of it?

[02:54] <AlexDaniel> Xliff: maybe run it with perl6-valgrind-m ? You won't get a nice stacktrace unless you Configure it with --moar-option=--debug=3 I think

[02:56] <Xliff> Ahhh... THAT'S what I am looking for.

[02:56] *** sno joined
[02:57] *** p6bannerbot sets mode: +v sno

[03:00] <AlexDaniel> Xliff: I have no idea what that is: https://gist.github.com/476fa136f6162b8501d434065c0e5ec2

[03:02] <Xliff> O fer crissakes.

[03:03] <Xliff> It looks like the bot doesn't have permissions to open the lib dir?

[03:04] <AlexDaniel> e: .say for dir ‚Äò/home/bisectable/git/whateverable/sandbox/p6-GtkPlus/sandbox/lib‚Äô

[03:04] <evalable6> AlexDaniel, rakudo-moar 4c05a0b13: OUTPUT: ¬´(exit code 1) Failed to get the directory contents of '/home/bisectable/git/whateverable/sandbox/p6-GtkPlus/sandbox/lib': Failed to open dir: 2‚ê§  in block <unit> at /tmp/teNQ4qNmxf line 1‚ê§‚ê§¬ª

[03:05] <AlexDaniel> huh.

[03:05] <AlexDaniel> e: .say for dir ‚Äòsandbox/p6-GtkPlus/sandbox/lib‚Äô

[03:05] <evalable6> AlexDaniel, rakudo-moar 4c05a0b13: OUTPUT: ¬´(exit code 1) Failed to get the directory contents of '/home/bisectable/git/whateverable/sandbox/p6-GtkPlus/sandbox/lib': Failed to open dir: 2‚ê§  in block <unit> at /tmp/B4mmDOnz8r line 1‚ê§‚ê§¬ª

[03:05] <AlexDaniel> what's 2

[03:05] <AlexDaniel> WHAT IS 2

[03:05] <AlexDaniel> no such file or directory?

[03:06] <AlexDaniel> Xliff: ah, correct! The path is all wrong

[03:06] <AlexDaniel> how is it constructing this path?

[03:07] <Xliff> Is that Pluggable constructing the path?

[03:09] <AlexDaniel> ü§∑

[03:44] *** cognominal-p6 joined
[03:45] *** p6bannerbot sets mode: +v cognominal-p6

[03:48] *** lizmat left
[03:50] <Xliff> OK. I am going to see if I can recompile rakudo and get a backtrace.

[03:51] <Xliff> What's the best way to get moar, nqp and rakudo to compile after a recent rakudobrew?

[03:56] *** cognominal-p6 left
[03:56] *** cognominal-p6 joined
[03:56] *** moonythevampire is now known as moonythedustpile

[03:57] *** p6bannerbot sets mode: +v cognominal-p6

[04:08] *** sno left
[04:09] *** sno joined
[04:09] <Xliff> m: 'ü§∑'.uniname.say

[04:09] <camelia> rakudo-moar 4c05a0b13: OUTPUT: ¬´SHRUG‚ê§¬ª

[04:09] *** cognominal-p6 left
[04:09] *** p6bannerbot sets mode: +v sno

[04:18] *** sauvin joined
[04:18] *** p6bannerbot sets mode: +v sauvin

[04:39] <donaldh> Couple of unassuming PRs if anyone has a moment: https://github.com/rakudo/rakudo/pull/2454 and https://github.com/rakudo/rakudo/pull/2457

[04:43] <Xliff> Got a backtrace of the segfault. I've updated https://github.com/rakudo/rakudo/issues/2455

[04:56] <AlexDaniel> donaldh: thanks!

[04:56] <AlexDaniel> Xliff: cool!

[04:56] *** molaf left
[04:57] <Xliff> AlexDaniel: Yes. And now I realize how badly some of this was written. :/

[04:57] <Xliff> This is what happens when you code way past your bedtime.

[04:58] <AlexDaniel> what's bedtime

[05:00] *** fake_space_whale left
[05:09] * AlexDaniel declares it now

[05:21] *** kurahaupo left
[05:21] *** kurahaupo joined
[05:22] *** p6bannerbot sets mode: +v kurahaupo

[05:23] <SmokeMachine> is anyone here used to CQRS? could comment my first attempt to do it with Red? https://github.com/FCO/Red/blob/master/examples/cqrs/index.p6

[05:31] *** donaldh left
[05:35] *** fake_space_whale joined
[05:35] *** p6bannerbot sets mode: +v fake_space_whale

[05:39] *** fake_space_whale left
[05:45] *** noganex left
[05:46] *** noganex joined
[05:46] *** p6bannerbot sets mode: +v noganex

[06:21] *** curan joined
[06:21] *** p6bannerbot sets mode: +v curan

[06:40] *** troys left
[07:00] *** kurahaupo left
[07:00] *** kurahaupo joined
[07:01] *** p6bannerbot sets mode: +v kurahaupo

[07:03] *** MilkmanDan left
[07:05] *** cognominal-p6 joined
[07:06] *** p6bannerbot sets mode: +v cognominal-p6

[07:06] <holyghost> .tell Zoffix my code does not compile yet, if you like I can write something up for it on Advent as it's open source and consistent for the math formulas

[07:06] <yoleaux> holyghost: I'll pass your message to Zoffix.

[07:07] *** Summertime2 is now known as Summertime

[07:07] *** cognominal-p6 left
[07:07] *** MilkmanDan joined
[07:07] *** p6bannerbot sets mode: +v MilkmanDan

[07:07] *** cognominal-p6 joined
[07:08] *** p6bannerbot sets mode: +v cognominal-p6

[07:24] <Geth> ¬¶ doc/master: 6 commits pushed by (Luis Balderas Ruiz)++, (Juan Juli√°n Merelo Guerv√≥s)++

[07:24] <Geth> ¬¶ doc/master: cc62c4acd1 | Improving and adding details about Allee Effect

[07:24] <Geth> ¬¶ doc/master: 212ab456e6 | Correcting an error #2353

[07:24] <Geth> ¬¶ doc/master: 6ea7c981f7 | New correction... sorry about that #2353

[07:24] <Geth> ¬¶ doc/master: bb358e41ab | Correcting old spelling mistakes #2353

[07:24] <Geth> ¬¶ doc/master: 9aedfe1a3c | Working on #2353

[07:24] <Geth> ¬¶ doc/master: cf128b377c | Merge pull request #2428 from luisbalru/master

[07:24] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/4aade00dbab9...cf128b377c0c

[07:24] *** jmerelo joined
[07:25] *** p6bannerbot sets mode: +v jmerelo

[07:30] *** cognominal-p6 left
[07:53] *** dalek left
[08:01] *** cognominal-p6 joined
[08:02] *** p6bannerbot sets mode: +v cognominal-p6

[08:08] *** cognominal-p6 left
[08:09] *** cognominal-p6 joined
[08:10] *** p6bannerbot sets mode: +v cognominal-p6

[08:12] *** kurahaupo_ joined
[08:13] *** p6bannerbot sets mode: +v kurahaupo_

[08:14] *** kurahaupo left
[08:16] *** Geth left
[08:16] *** zakharyas joined
[08:17] *** p6bannerbot sets mode: +v zakharyas

[08:21] <buggable> New CPAN upload: Bayes-Learn-0.1.8.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Bayes::Learn:cpan:HOLYGHOST

[08:21] <buggable> New CPAN upload: Mathx-Stat-0.1.10.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[08:30] *** ufobat joined
[08:30] *** p6bannerbot sets mode: +v ufobat

[08:31] <buggable> New CPAN upload: Bayes-Learn-0.1.9.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Bayes::Learn:cpan:HOLYGHOST

[08:32] *** dakkar joined
[08:32] *** p6bannerbot sets mode: +v dakkar

[08:36] <holyghost> .tell Zoffix I do not have enough knowledge about the module system except that I read https://docs.perl6.org/language/modules and set the PERL6LIB path, Mathx::Stat should compile, I can Advent it if you like, AFAIK tests of Mathx::Stat are useless as they are just math formulas and can break an download/install

[08:36] <yoleaux> holyghost: I'll pass your message to Zoffix.

[08:39] *** cognominal-p6 left
[08:42] *** lizmat joined
[08:42] *** p6bannerbot sets mode: +v lizmat

[08:43] *** [Sno] joined
[08:43] *** sno left
[08:44] *** p6bannerbot sets mode: +v [Sno]

[08:44] *** [Sno] left
[08:46] <ufobat> jnthn++

[08:46] *** rindolf joined
[08:47] *** p6bannerbot sets mode: +v rindolf

[08:47] <holyghost> My "the legend of kyrandia game" is available at shameen.ddns.net, it's programmed in GNU smalltalk, the site is not reachable from everywhere

[08:47] <holyghost> It's a start with a blitter as I said before

[08:48] *** cognominal-p6 joined
[08:48] <holyghost> graphics will be licensed from Westwood studios

[08:48] *** p6bannerbot sets mode: +v cognominal-p6

[08:49] *** robertle joined
[08:50] *** p6bannerbot sets mode: +v robertle

[08:50] <holyghost> time for a drink :-) thx ufobat

[08:50] <ufobat> a drink at 10am?

[08:51] <holyghost> yes I work at night mostly

[08:52] <ufobat> what about a gin tonic? :)

[08:52] <jmerelo> Just plotted the contributions per month for the perl6/doc repo https://raw.githubusercontent.com/JJ/TPF-Grant/master/illos/commits-authors-entropy.png

[08:52] <holyghost> I have a terrific phase, I start coding at 4am

[08:52] <holyghost> gin tonic is declasse :-)

[08:53] <jmerelo> Number of authors and contributions has picked up a bit since the Aug-Sep slump, but it's far from peaks. Let's see if this weekend's squashathon helps

[08:54] *** cognominal-p6 left
[08:54] <jmerelo> holyghost: great work, too, on AI stuff. Also, you can test math formulae too. Advent article would be great

[08:54] *** cognominal-p6 joined
[08:54] <holyghost> ok

[08:55] *** p6bannerbot sets mode: +v cognominal-p6

[08:55] <holyghost> the AI-Agent is cool, I know

[08:56] <holyghost> I still need to compile, but I might have to refactor

[08:56] <holyghost> I have a HashAgent and Agent superclass

[08:56] <holyghost> s/HashAgent/HashedAgent

[08:57] <holyghost> They have to go in concert with th rest of the code

[09:03] <holyghost> It's just an override on an Actor class with a "method dispatch($message, %optargs)"

[09:03] <holyghost> It should be hackable by perlbies

[09:06] <holyghost> s/perlbies/gnubies, newbies, perl wizards and so on

[09:09] *** sno joined
[09:09] *** p6bannerbot sets mode: +v sno

[09:10] *** sno left
[09:11] *** kdr2 left
[09:18] *** kurahaupo_ left
[09:18] *** kurahaupo joined
[09:18] *** kurahaupo left
[09:19] *** kurahaupo joined
[09:19] *** p6bannerbot sets mode: +v kurahaupo

[09:24] *** kensanata joined
[09:24] *** p6bannerbot sets mode: +v kensanata

[09:31] <holyghost> .tell Zoffix I've posted a small addon to Advent, AFAIK I can write a HTML page on it, I will do that later

[09:31] <yoleaux> holyghost: I'll pass your message to Zoffix.

[09:36] *** ufobat left
[09:40] *** kdr2 joined
[09:41] *** p6bannerbot sets mode: +v kdr2

[09:43] *** sno joined
[09:43] *** p6bannerbot sets mode: +v sno

[09:49] *** sena_kun joined
[09:50] *** p6bannerbot sets mode: +v sena_kun

[10:00] <holyghost> Advent is showing up december 2017 in my browser

[10:00] <jmerelo> holyghost: what do you mean?

[10:01] <holyghost> I get Bonus Xmas ÙèøΩx96 Concurrent HTTP Server implementation and the scripterÙèøΩx92s approach

[10:01] <holyghost> December 25, 2017ramiroencinas Leave a comment 

[10:01] <jmerelo> holyghost: if you want to propose something for the calendar, you have to modify this file https://github.com/perl6/mu/blob/master/misc/perl6advent-2018/schedule

[10:01] <holyghost> lol

[10:01] <holyghost> jmerelo: I did

[10:02] <holyghost> At the end of the month I'll write something about Mathx::Stat, it's in if you like

[10:02] <holyghost> I am going to extend it

[10:02] <jmerelo> holyghost: Er. It's not.

[10:03] <jmerelo> holyghost: if you want to have it for the 24th, just add your nick and title behind that day to "claim" it.

[10:03] <holyghost> ok

[10:04] <holyghost> I can write something about the package as it is now

[10:04] <holyghost> I'll figure out the web editor later

[10:04] <jmerelo> holyghost: if you mean the Wordpress blog, that comes after. You'll need to obtain privs from Zoffix or one of the other admins (if you don't have them already). Anyway, claiming goes first, to know what we have

[10:04] <holyghost> ah now I understand

[10:05] <holyghost> It's priviledged from the github schedule file ?

[10:05] <jmerelo> holyghost: kinda. It's done by hand. Zoffix or someone will contact you for your Wordpress account after you claim a day.

[10:05] <holyghost> ok, I understand

[10:06] <holyghost> I just need to dump an HTML page with zoffix's tool then

[10:06] <jmerelo> holyghost: yep, when your article is ready.

[10:06] <holyghost> ok

[10:07] <holyghost> I have to talk about a simple statistics package :-)

[10:07] <jmerelo> holyghost: that's good :-)

[10:07] <holyghost> It was programmed for speed. done. :-)

[10:07] <holyghost> lol

[10:08] <holyghost> I'll talk about games then

[10:09] <holyghost> It was made for Game::Markov and Bayes::Learn

[10:09] *** sno left
[10:09] <holyghost> ok, I'll figure it out at the end of the month :-)

[10:09] <jmerelo> holyghost: great idea!

[10:09] <jmerelo> holyghost: you can just claim the day and say "TBA"

[10:09] <holyghost> I know

[10:10] <holyghost> I'll make a second entry later on when I get my chaos theory statistics read and sorted out

[10:10] <jmerelo> holyghost: great!

[10:10] <holyghost> upgrades :-)

[10:11] <holyghost> Now there's a correlation dimension which is a popular chaos theory formula

[10:12] <holyghost> It needs refactoring though (with addition of classes I mean, I write everything in modules)

[10:12] <holyghost> .pm6 :-)

[10:16] <timotimo> jmerelo: DM-ping, but also AFK now

[10:16] <holyghost> jmerelo: basically you just calculate with lists of probabilities until you figure out your variance in a game. Oh! I am posting my article :-)

[10:27] *** ufobat joined
[10:28] *** p6bannerbot sets mode: +v ufobat

[10:31] <jmerelo> timotimo: sorry, what?

[10:31] *** sergot left
[10:31] *** SourceBaby left
[10:31] *** dalek joined
[10:31] *** ChanServ sets mode: +v dalek

[10:31] *** Geth joined
[10:31] *** ChanServ sets mode: +v Geth

[10:31] *** p6lert_ joined
[10:31] *** synopsebot_ joined
[10:31] *** ChanServ sets mode: +v synopsebot_

[10:31] *** p6lert left
[10:31] *** synopsebot left
[10:32] *** SourceBaby joined
[10:32] *** ChanServ sets mode: +v SourceBaby

[10:32] *** niko joined
[10:32] *** p6bannerbot sets mode: +v niko

[10:32] *** p6bannerbot sets mode: +v dalek

[10:32] *** synopsebot_ left
[10:32] *** p6bannerbot sets mode: +v Geth

[10:32] *** p6bannerbot sets mode: +v p6lert_

[10:32] *** p6lert_ left
[10:32] *** synopsebot joined
[10:32] *** ChanServ sets mode: +v synopsebot

[10:32] *** p6lert joined
[10:32] <Geth> ¬¶ ecosystem: ccworld1000++ created pull request #413: CCLog Simple and lightweight cross-platform logs

[10:32] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/pull/413

[10:32] *** p6bannerbot sets mode: +v SourceBaby

[10:33] *** p6bannerbot sets mode: +v synopsebot

[10:33] *** p6bannerbot sets mode: +v p6lert

[10:35] *** HaraldJoerg joined
[10:36] *** p6bannerbot sets mode: +v HaraldJoerg

[10:36] <Geth> ¬¶ ecosystem: dee60699db | CC++ (committed using GitHub Web editor) | META.list

[10:36] <Geth> ¬¶ ecosystem: CCLog Simple and lightweight cross-platform logs

[10:36] <Geth> ¬¶ ecosystem: 

[10:36] <Geth> ¬¶ ecosystem: easy-to-use simple learning, and support for multiple languages, such as C, C++, Perl 6, shell, Objective-C .

[10:36] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/dee60699db

[10:36] <Geth> ¬¶ ecosystem: bd5ff55660 | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | META.list

[10:36] <Geth> ¬¶ ecosystem: Merge pull request #413 from ccworld1000/patch-1

[10:36] <Geth> ¬¶ ecosystem: 

[10:36] <Geth> ¬¶ ecosystem: CCLog Simple and lightweight cross-platform logs

[10:36] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/bd5ff55660

[10:49] *** yqt joined
[10:50] *** p6bannerbot sets mode: +v yqt

[10:53] <holyghost> .tell Zoffix I cannot use your schedule tool, but here's my printed HTML page for Advent if you like (for Mathx::Stat): https://pastebin.com/x3mENvQE

[10:53] <yoleaux> holyghost: I'll pass your message to Zoffix.

[10:53] <holyghost> I hopy you like it, C&C welcome

[10:53] <chsanch> japhb: You can install it skipping the tests: zef install --/test croOA

[10:53] <holyghost> s/hopy/hope

[10:57] *** isBEKaml joined
[10:57] *** p6bannerbot sets mode: +v isBEKaml

[10:57] *** sno joined
[10:57] <jmerelo> holyghost: the articles for Advent should be a bit longish... Also include a few code examples. Sometimes they are written in a festive-mock-Santa mood, but that's optional.

[10:58] *** p6bannerbot sets mode: +v sno

[10:58] <jmerelo> holyghost: it's a good start anyway. Also, remember to claim a particular day.

[11:02] <holyghost> jmerelo: ok, I'll see what I can do, problem is you cannot say much about core statistics

[11:02] *** sno left
[11:03] <holyghost> I claimed 30 nov 2018 (another login, my theholyghost login has been faulted)

[11:04] <jmerelo> holyghost: Advent starts by Dec 1st

[11:04] <holyghost> 30 dec 2018 I meant then

[11:05] <jmerelo> holyghost: it ends by Dec 24th. Sometimes there's a bonus on the 25th, but that's it...

[11:05] *** kdr21 joined
[11:05] *** isBEKaml left
[11:05] <holyghost> I've updated the schedule file to 30: 

[11:06] *** p6bannerbot sets mode: +v kdr21

[11:06] <jmerelo> holyghost: you can't do that. Please just claim one of the available days.

[11:07] <holyghost> ok

[11:07] *** Spooktober left
[11:07] *** grumble joined
[11:07] *** p6bannerbot sets mode: +v grumble

[11:07] *** kdr2 left
[11:08] <holyghost> I'm not too good at fixing web edits but Zoffix'll have to post the article anyway

[11:08] <holyghost> It's just a piece of HTML file

[11:08] <holyghost> I'll extend anyhow later on

[11:09] <holyghost> problem is I am flooding .tell

[11:09] <jmerelo> holyghost: that's not how it works. 1. You claim a day 2. You get permission to post in the wordpress blog 3. You schedule the post for that day, and leave it for others to check it out and edit (and you can edit it yourself) 4. It's published on the scheduled day.

[11:11] <holyghost> I knew that

[11:12] <holyghost> 1. I claimed 30 dec 2018 2. I'll post my text/html file if Zoffix concurs

[11:12] <holyghost> with my zork9 login

[11:13] <holyghost> I added further numbers than 25 (dec 2018)

[11:14] <holyghost> but I'll add-on sooner :-)

[11:14] <timotimo> there will not be advent posts later than the 25th

[11:15] *** sno joined
[11:15] *** p6bannerbot sets mode: +v sno

[11:16] <holyghost> timotimo: ok, as I said, I'll have my post ready even for dec 25

[11:17] <holyghost> I release often, you know :-)

[11:18] <timotimo> yeah, i see your releases show up on irc every day

[11:19] <holyghost> that's all

[11:23] <holyghost> I wrote 1500+ lines for it, but the packages are still not figured out right. I need to factor HLL OOP

[11:23] <holyghost> in 20 days

[11:23] <jmerelo> holyghost: where's the source?

[11:23] *** kurahaupo left
[11:24] <holyghost> eco: Mathx::Stat, Bayes::Learn, Game::Markov, AI::Agent

[11:24] <buggable> holyghost, Nothing found

[11:24] <holyghost> eco: Mathx::Stat

[11:24] <buggable> holyghost, Mathx::Stat 'Statistics package unto Correlation Dimension.': http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[11:24] *** kurahaupo joined
[11:24] <holyghost> eco: Bayes::Learn Game::Markov AI::Agent

[11:24] <buggable> holyghost, Nothing found

[11:24] <holyghost> eco: Bayes::Learn

[11:24] <buggable> holyghost, Bayes::Learn 'Bayesian Inference based upon ditributions. Minimax': http://modules.perl6.org/dist/Bayes::Learn:cpan:HOLYGHOST

[11:24] <holyghost> eco: Game::Markov

[11:24] <buggable> holyghost, Game::Markov 'Markov Strategy kit for games': http://modules.perl6.org/dist/Game::Markov:cpan:HOLYGHOST

[11:24] <holyghost> eco: AI::Agent

[11:24] <buggable> holyghost, AI::Agent 'AI network Agent system, example: Music Link Agent': http://modules.perl6.org/dist/AI::Agent:cpan:HOLYGHOST

[11:24] <holyghost> there you go

[11:24] *** p6bannerbot sets mode: +v kurahaupo

[11:25] <jmerelo> holyghost: right, but where's the repo so that people can create issues, pull requests and things like that?

[11:25] <lizmat> holyghost: have you thought about adding tests ???

[11:26] *** noganex_ joined
[11:27] <holyghost> there's no github repo, I thought CPAN was ok

[11:27] *** p6bannerbot sets mode: +v noganex_

[11:27] <holyghost> github doesn;t wuantify everything with just a web interface

[11:27] <holyghost> s/does;t wuantify/doesn't quantify

[11:28] <holyghost> lizmat: tests for a statistics package are uneasy

[11:28] <jmerelo> holyghost: it's OK for release, but if you want people to contribute, create issues, all that, there needs to be a repo. Need not be GitHub, could be Gitlab or Bitbucket

[11:29] <lizmat> holyghost: at least write some usage examples in the documentation (and make sure they run)

[11:29] <holyghost> jmerelo: I'm on my own for now

[11:30] <holyghost> lizmat: sure, but it's open source code, anyone knows their perl inclusion path

[11:30] *** noganex left
[11:30] <lizmat> having a way to report issues, allows people to do pull requests for you, e.g. for s/probabiltiy/probability/ 

[11:31] <holyghost> lizmat: ok but I can manage

[11:32] <holyghost> TMOTOWTDI

[11:33] <timotimo> i mean, you can always do it the classical way and do it via mail, but that won't let others see if there's already a PR for what they found

[11:33] <timotimo> unless you have a publically archived mailing list

[11:34] <holyghost> you probably cannot pull older versions but my package stays final and so is archived on CPAN for everyone who knows

[11:34] <holyghost> That was the perl5 way

[11:35] <holyghost> I don't need webeditors for that to be frank

[11:35] <lizmat> well, zef install Mathx::Stat does not work

[11:35] <jmerelo> lizmat: it's not released in CPAN, but in backpan: https://metacpan.org/author/HOLYGHOST

[11:35] <lizmat> 'Mathx::Stat::Mathx::Stat::DistributionPopulation' cannot inherit from 'Population' because it is unknown.

[11:36] <jmerelo> lizmat: for some reason, it was picked up by modules.

[11:36] <jmerelo> lizmat: that's because the class is declared as an unit module, and then as a class.

[11:36] <lizmat> jmerelo: I don't care what the problem is at this stage

[11:36] <jmerelo> lizmat: right

[11:37] <lizmat> It's for this reason that I specced the concept of a recommendation manager

[11:37] <jmerelo> lizmat: sorry. 

[11:37] *** kurahaupo left
[11:37] *** kurahaupo joined
[11:37] <jmerelo> lizmat: point is, that code does not compile. 

[11:38] <lizmat> not having tests in your distribution could be a reason to not recommend a distribution

[11:38] *** kurahaupo left
[11:38] <holyghost> lizmat: I know my perl 5 classes, I just need to remove the non-intuitive way

[11:38] <lizmat> well, if the distribution had had tests, then the author could have known that it doesn't compile

[11:38] *** kurahaupo joined
[11:38] <jmerelo> lizmat: you are right.

[11:39] *** p6bannerbot sets mode: +v kurahaupo

[11:39] <lizmat> if you use App::Mi6, you always get a single test added

[11:39] <lizmat> "use Module"; pass "it lives" !

[11:39] *** pmurias joined
[11:39] *** p6bannerbot sets mode: +v pmurias

[11:39] <lizmat> that's already a good start

[11:39] <lizmat> but holyghost's distributions don't even have that  :-(

[11:40] <pmurias> holyghost: re perl5 way, modern modules have a repository up

[11:41] <jmerelo> lizmat: :-( Right so. And there's no repo where we can report that as an issue. Or provide a pull request.

[11:42] <lizmat> FWIW, I have removed mention of holyghost's modules from all Perl 6 Weeklies

[11:42] <jmerelo> lizmat: makes sense

[11:42] <lizmat> I'll be glad to mention them if they have tests and install

[11:46] <holyghost> lizmat: some modules do not install with tests, you can hack them as they are open source

[11:46] <holyghost> lizmat: you do know perl -M -CPAN ?

[11:46] <lizmat> holyghost: that's fine, but that doesn't mean we need to recommend them

[11:47] <lizmat> "Missing argument to -M"

[11:47] <holyghost> I don't mind but they do stay in the ecosystem

[11:47] <holyghost> perl -MCPAN -e shell

[11:47] <lizmat> *

[11:48] <lizmat> yeah, I know about that, so ?

[11:48] <lizmat> do you know "cpan"

[11:48] <holyghost> I'd rather write an interface to CPAN than use a simple github server

[11:49] <lizmat> that's a lot shorter then perl -MCPAN -e shell

[11:49] <jmerelo> holyghost: your code is simply broken. Just try to "use" it from an example and run it using perl6. It will not run. Saying that people can hack it to make it run does not make it any better

[11:50] <lizmat> it's a bit like graffiti: anybody can do a tag and add a tag to that

[11:50] <jmerelo> holyghost: the whole point of running tests is to force authors to actually create something that, at least, compiles. 

[11:50] <lizmat> generally, people like to see a complete painting

[11:51] <buggable> New CPAN upload: Mathx-Stat-0.1.11.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[11:51] <holyghost> SFY

[11:51] <lizmat> like https://twitter.com/streetartmagic/status/1057514488465891329

[11:52] <holyghost> Mathx::Stat needs to resolve, but I do not think there are any faults left

[11:52] <pmurias> holyghost: the point of including a repo isn't that people download the code to use from their it's that they can have the version control history?

[11:52] <pmurias> holyghost: do you use version control?

[11:52] <jmerelo> holyghost: if there's no source repo, if there's no Changelog, we don't even know what's changed. There's still no test, we still don't know if it runs or not.

[11:52] * lizmat just plonked

[11:53] <lizmat> afk&

[11:54] <holyghost> jmerelo: I just put in the minial LICENSE and README.md

[11:54] <holyghost> s/minial/minimal

[11:55] <holyghost> You need a patch or fidd to see the changes

[11:55] <holyghost> s/fidd/diff

[11:55] *** Zoffix joined
[11:55] *** p6bannerbot sets mode: +v Zoffix

[11:55] <jmerelo> holyghost: no, *you* need to upload that to a repo to show changes. 

[11:55] <Zoffix> holyghost: but didn't you say your modules don't even compile?

[11:55] <yoleaux> 10:53Z <holyghost> Zoffix: I cannot use your schedule tool, but here's my printed HTML page for Advent if you like (for Mathx::Stat): https://pastebin.com/x3mENvQE

[11:56] <holyghost> Zoffix: Mathx::Stat should compile, it needs to resolve

[11:56] <holyghost> The rest I am doing tomorrow

[11:56] <Zoffix> holyghost: advents are about showing off technology and building cool stuff with it. That pastebin reads like someone's TODO list rather than showcase of tech

[11:57] <jmerelo> holyghost: "should compile" as in "I haven't compiled it, but it looks OK"?

[11:57] <Zoffix> "The package was meant to support Markov strategies for calculating several     variances"   great. What's the code to do that?

[11:57] <holyghost> that's in the Game::Markov package

[11:58] <holyghost> I hope nobody frames me for releasing early and often ?

[11:58] <Zoffix> holyghost: even if Mathx::Stat compiles, there's no way it works correctly, because this isn't the syntax for calling methods on `self`: https://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST/lib/Mathx/Stat/CorrelationDimension.pm6#L13

[11:58] <holyghost> you just said I should write a handout, I did, so I tried to compile

[11:59] <jmerelo> holyghost: "tried to" as in "I did it, but it didn't work"?

[11:59] <Zoffix> holyghost: you can release as often as you want, but if you're gonna write an Advent Post about modules that don't work when people try them, I imagine a lot of people will be pissed off with you.

[11:59] <Zoffix> holyghost: well yeah, I suggested you should write something. Don't mean you should, if you're not ready :)

[11:59] <holyghost> I concurred to support the community, the system still holds

[12:00] <Zoffix> You can always write a non-Advent blog later on when the modules work.

[12:00] <holyghost> I only wanted to help

[12:00] <Zoffix> It's apreciated.

[12:00] <holyghost> Mathx::Stat is easy to debug

[12:00] <holyghost> as I said I'll do the rest of the packages later on (to compile I mean)

[12:01] <holyghost> s/compile/compile and test

[12:01] * pmurias was once slightly pissed off after going to a super boring YAPC talk that was going through minute internals of a module that didn't compile

[12:01] <jmerelo> holyghost: debugging supposes they compile. If there are no tests, it's impossible even to know what they're supposed to produce.

[12:02] <holyghost> jmerelo: problem is it's instance.Covariance for example

[12:02] <holyghost> you cannot calculate a covariance/correlation without knowing the result, thing is it can differ on x-bit systems

[12:03] <holyghost> pmurias: I understand but released early, I've put them in the eco to support open source

[12:03] <pmurias> holyghost: what's an x-bit system?

[12:03] <holyghost> 8,16,32,64

[12:03] <jmerelo> holyghost: problem is the whole thing. First upload it to a repo. Then write a basic "use Module" test, as lizmat has said. Then start writing tests, one by one, for all functions in your class. Then start to work on the code until it passes tests.

[12:04] <holyghost> jmerelo: ok but I'm still working on the codebase

[12:04] <jmerelo> holyghost: the first step to support open source is to upload it to a repo so that people can engage the code at the repo level, comment, all that.

[12:04] *** Zoffix left
[12:05] <jmerelo> holyghost: that's great, but it would be much better if you had waited to release it until it compiles and passes tests. You have produced several versions already, and we have no guarantee even one of them actually works.

[12:05] <holyghost> jmerelo: ok, I just mirror my code

[12:06] <jmerelo> holyghost: we really appreciate your enthusiasm, but it would really help if you waited until you have some code that compiles to upload the next version.

[12:07] <holyghost> ok, I didn't know that

[12:09] <holyghost> I wrote the code out of my head, I am still working on it, non-versioned except cpan, but people sometimes like an upload to debug/compile themselves if they know what it is all about

[12:09] <holyghost> It's called hacking

[12:10] <jmerelo> holyghost: hacking is twice as good if you use a source control system like git locally and git(lab|hub) offsite and check that everything works by compiling and testing it.

[12:12] <holyghost> ok, but CPAN doesn't have that system

[12:12] <holyghost> although somebody might have written that for cpan back in the day

[12:12] <holyghost> W3C HTML is 23 years old at the least

[12:13] <jmerelo> holyghost: that's not the point. CPAN is for releasing modules that work. It just reads metadata from your module and publishes it. You still have to use a source control system for managing yours and others' contributions.

[12:14] <holyghost> ok

[12:15] <holyghost> I can do that, but I want to work to a package that works as you concurred

[12:15] <holyghost> to be honest, my updates are multiple such as Zoffix said

[12:16] <jmerelo> holyghost: please do that. I would be very grateful if you did.

[12:16] <holyghost> thx

[12:16] <holyghost> I know git from savannah, same thing, of course

[12:18] <holyghost> jmerelo: could you (once) see that Mathx::Stat compiles, I told Zoffix, I am a bit confused with the module system. Back in the day we hacked that way by logging into someone else

[12:18] <jmerelo> holyghost: git is the client, savannah is the host. You can use savannah to host your code if you want, although there might be better choices, also free

[12:19] <jmerelo> holyghost: OK, I'll try it out

[12:19] <holyghost> It should upload first to the ecosystem

[12:19] <holyghost> 0.1.11 I believe

[12:23] <jmerelo> holyghost: here you go: https://gist.github.com/JJ/750c8d8c75239a1a0f411763d0aa265a

[12:25] <jmerelo> holyghost: you'd do well, after you upload it to a repository, to include that test and repeat it for every module in your distribution. When it compiles, take it from there and write tests for what they are actually supposed to do.

[12:31] <holyghost> jmerelo: it's probably on line 11 : .population = DistributionPopulation.new; ?

[12:32] <holyghost> I program smalltalk, Scheme and other languages so I get confused

[12:32] <jmerelo> holyghost: that's exactly what it says in the error. Perl6 compiler is usually great at errors.

[12:32] <holyghost> I know :-) I love perl for that 

[12:33] <holyghost> I'll reupload, I comment out such things to compile

[12:35] <jmerelo> holyghost: First, you should try to fix them, not comment them out. That's in the BUILD submethod, it's doubtful that anything will work if you comment that out. Second, I hope that by "reupload" you mean "upload it to a source control hosting site". And before you do that, include that test (and tests for all the other modules). When they pass, we at least know it's syntactically correct code. 

[12:35] *** mniip left
[12:36] <holyghost> jmerelo: do try to understand perl6 doesn't in this  case check a type of a ctor

[12:37] *** kensanata left
[12:37] *** leont joined
[12:38] <jmerelo> holyghost: do try to understand that it's a syntax error and that you should try to fix that. Checking type does not have to do anything with that.

[12:38] *** p6bannerbot sets mode: +v leont

[12:38] <holyghost> jmerelo: to uncomment I mean

[12:39] <holyghost> s/uncomment/comment

[12:39] <jmerelo> holyghost: you can't comment it out. You need to fix it.

[12:39] <holyghost> jmerelo: the new syntax, yes

[12:40] <holyghost> I've got the point now :-)

[12:41] <jmerelo> holyghost: great. Good luck.

[12:41] * jmerelo goes AFK

[12:41] <holyghost> thx

[12:41] <holyghost> s/thx/thx for the help

[12:46] *** yqt left
[12:46] * jmerelo comes back to keyboard

[12:47] <jmerelo> holyghost: You have just uploaded a new version. Does it compile now? If it still does not, why did you do that?

[12:49] *** daxim left
[12:51] <buggable> New CPAN upload: Mathx-Stat-0.1.12.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[12:52] <holyghost> jmerelo: I thought you were AFK, it should compile now

[12:55] <jmerelo> holyghost: it "should"? You haven't tried to compile it either?

[12:56] <holyghost> I commented out the .new and it compiles

[12:57] <jmerelo> holyghost: it compiles but it does not do a thing

[12:58] <jmerelo> holyghost: and the rest does not compile either.

[12:58] <jmerelo> /does/do9

[12:58] <holyghost> I need to fix the rest

[12:59] <jmerelo> holyghost: ... before you upload anything else to CPAN.

[13:00] * jmerelo *really* goes AFK

[13:01] *** GDPR is now known as emerson

[13:05] *** jmerelo left
[13:09] *** zakharyas left
[13:13] *** ufobat left
[13:14] *** cjkinni left
[13:15] *** cjkinni joined
[13:16] *** p6bannerbot sets mode: +v cjkinni

[13:47] *** isBEKaml joined
[13:47] *** p6bannerbot sets mode: +v isBEKaml

[13:50] <Geth> ¬¶ doc: 456118e16e | Coke++ | doc/Language/modules.pod6

[13:50] <Geth> ¬¶ doc: run more tests with :solo

[13:50] <Geth> ¬¶ doc: 

[13:50] <Geth> ¬¶ doc: change skip-test to :lang for clarity on one.

[13:50] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/456118e16e

[13:50] <synopsebot> Link: https://doc.perl6.org/language/modules

[13:53] <Geth> ¬¶ mu: a390255b87 | (Simon Proctor)++ (committed using GitHub Web editor) | misc/perl6advent-2018/schedule

[13:53] <Geth> ¬¶ mu: Added myself in on the 20th

[13:53] <Geth> ¬¶ mu: 

[13:53] <Geth> ¬¶ mu: Got a few thoughts on what to write about.

[13:53] <Geth> ¬¶ mu: review: https://github.com/perl6/mu/commit/a390255b87

[14:01] <Geth> ¬¶ doc: 203c8c3e22 | Coke++ | doc/Type/Supplier/Preserving.pod6

[14:01] <Geth> ¬¶ doc: output, not code

[14:01] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/203c8c3e22

[14:01] <synopsebot> Link: https://doc.perl6.org/type/Supplier::Preserving

[14:33] <pmurias> bikeshedding question when bundling with parcel how should the rakudo.js config file be called? .rakudorc or rakudoconfig.json?

[14:34] *** zakharyas joined
[14:34] *** p6bannerbot sets mode: +v zakharyas

[15:00] <SmokeMachine> Does anyone know if COMMA can breakpoint code that runs at compile time?

[15:02] <jnthn> SmokeMachine: Just tried it with a BEGIN block and it hit it

[15:03] <jnthn> And the stack trace is full of compiler internals, so it's certainly BEGIN time :)

[15:03] <SmokeMachine> jnthn: and that works for traits too, right?

[15:03] <jnthn> I'd expect it to

[15:04] <lizmat> SmokeMachine: it should, as that's also BEGIN time

[15:04] <jnthn> The debugger works at MoarVM level, so actually it doesn't even know the difference between BEGIN time and not. It's all just code.

[15:04] <SmokeMachine> :) good too know! the more I know about COMMA the more I think I should buy it! :)

[15:05] <SmokeMachine> thanks

[15:06] <jnthn> SmokeMachine: That said, the debugger is still a bit weak in various ways...lots of improvements coming there over the next month or so.

[15:06] <jnthn> Though I'm kind of fighting myself there, in that the more aggressive Rakudo optimizations I've currently working on will make the job harder :P

[15:07] *** Sigyn left
[15:07] <SmokeMachine> jnthn: had you thought about the possibility of paying monthly for COMMA?

[15:07] <SmokeMachine> like a subscription payment?

[15:12] *** Actualeyes joined
[15:12] *** p6bannerbot sets mode: +v Actualeyes

[15:13] *** jast left
[15:15] <jnthn> SmokeMachine: Sort of, but the problem is that our model already *is* a subscription one, but in the "you get a year's worth of updates", not in the sense of "it stops working when your year runs out" (so folks can keep on using what they have for as long as they like). If we make it monthly under that model, then the loophole is obvious. :) And if we don't, then we have to spend time exploring DRM-y stuff

[15:15] <jnthn> that we really, really don't want to. We're still on track for a free version of it in early 2019 also, and are more focused on making *that* happen.

[15:15] *** sno left
[15:16] <El_Che> jnthn: everyone hates DRM. Specially paying users :)

[15:17] <jnthn> Yeah, exactly.

[15:17] <moritz> I also thought everybody hates monthly subscriptions to software :-)

[15:17] <SmokeMachine> :( I'd like to use it, I'd like to help it (paying) but my with doesnt let me pay R$ 500 for an IDE... :(

[15:18] <SmokeMachine> moritz: I do! but I think it would be the easyest way to let me use COMMA (but I undertand the reasons why its not possible...)

[15:18] *** fake_space_whale joined
[15:19] *** p6bannerbot sets mode: +v fake_space_whale

[15:21] *** sno joined
[15:22] *** p6bannerbot sets mode: +v sno

[15:23] *** troys joined
[15:24] *** p6bannerbot sets mode: +v troys

[15:30] *** jast joined
[15:30] *** p6bannerbot sets mode: +v jast

[15:36] *** curan left
[15:39] *** Sgeo left
[15:40] <El_Che> best for users would be if intellij would integrate comma and pay jnthn a lot of moneys

[15:40] <El_Che> monthly :)

[15:40] *** Sgeo joined
[15:40] <moritz> daily :)

[15:40] <El_Che> when you're employer is paying for intellij, the often won't want to pay for extras for the same ide

[15:41] *** p6bannerbot sets mode: +v Sgeo

[15:44] *** mniip joined
[15:44] *** p6bannerbot sets mode: +v mniip

[15:57] *** kurahaupo left
[15:58] *** isBEKaml left
[15:58] *** kurahaupo joined
[15:59] *** p6bannerbot sets mode: +v kurahaupo

[16:00] * japhb is mystified by any but the most cash-strapped company skimping on productivity tools.  Productivity pays for itself *really* quickly, even if you only consider the direct benefits and not other important things like quality of life and job satisfaction

[16:02] <japhb> (To be clear, I understand a pure FOSS company not wanting to buy a proprietary product, I'm just talking about the concept of "Well, it's going to cost $100 a head to make everyone XX% more efficient, that's too much" ... to which I think, "Under what possible mathematical system?!"

[16:02] <japhb> )

[16:06] *** cognominal-p6 left
[16:07] *** cognominal-p6 joined
[16:08] <leont> Companies still put all their programmers into noisy open office spaces as well...

[16:08] *** p6bannerbot sets mode: +v cognominal-p6

[16:09] *** ExtraCrispy joined
[16:09] *** p6bannerbot sets mode: +v ExtraCrispy

[16:10] *** domidumont joined
[16:10] *** p6bannerbot sets mode: +v domidumont

[16:14] *** cognominal-p6 left
[16:14] *** cognominal-p6 joined
[16:15] *** p6bannerbot sets mode: +v cognominal-p6

[16:16] * [Coke] kind-of-enjoys his new home office.

[16:17] <[Coke]> new-in-that-my new gig has no local office and so I'm forced to work from home now. definitely a switch from the crowded IT office.

[16:18] * jnthn has a nice spacious office that most of the time is just for him, and loves that :)

[16:19] *** [particle]1 is now known as [particle]

[16:23] *** molaf joined
[16:24] *** p6bannerbot sets mode: +v molaf

[16:35] <El_Che> what leont says rings a bell

[16:39] <El_Che> "let's all be agile and lean, here let's kill the offices and put everyone in a huge overcrowded space. Oh, and we don't dare measure productivity afterwards"

[16:50] *** sena_kun left
[16:51] *** sena_kun joined
[16:51] *** p6bannerbot sets mode: +v sena_kun

[16:56] *** ufobat joined
[16:56] *** p6bannerbot sets mode: +v ufobat

[16:57] <SmokeMachine> japhb: Yes, I agree... the problem is when is no a company that are paying...

[17:02] <pmurias> japhb: it might be easier to convince for people that don't actually use Perl 6 at work to get their employer to buy them intellij than comma

[17:13] <japhb> SmokeMachine: True.  That's part of why companies do student discounts.  (Though admittedly, the larger reason is to get students used to their product so that they will more likely buy it at full price after graduating.)  (And of course I'm also well aware that students aren't the only cash-strapped people by a long shot, I'm just saying that's a common case.)

[17:20] *** sauvin left
[17:22] <pmurias> japhb: a lot of developer tools are given for free to students

[17:31] *** dannymk joined
[17:31] *** p6bannerbot sets mode: +v dannymk

[17:33] *** zakharyas left
[17:33] *** dakkar left
[17:34] <dannymk> Does anyone have an example of how to implement the TO_JSON sub in a class?  

[17:38] <Xliff> Is there a way to get ^mro to list roles as well as classes?

[17:39] *** zxcvz joined
[17:40] <jnthn> Xliff: No (roles aren't searched for methods, since the methods from roles are composed into the classes)

[17:40] <jnthn> Xliff: You'd need to map over the .^mro result and do .^roles on each one

[17:40] *** p6bannerbot sets mode: +v zxcvz

[17:40] <jnthn> greppable6: TO_JSON

[17:40] <greppable6> jnthn, Found nothing!

[17:40] <jnthn> heh, apparently not :)

[17:41] * jnthn bbl

[17:42] <Xliff> jnthn++ #Thanks!

[17:42] <jdv79> i will say my perf case has been wandering into worse territory but generally trending well lately:)

[17:53] *** |oLa| left
[18:01] <dannymk> Yes, as in providing a TO_JSON sub so when the serialization happens only the attributes we want listed get included.

[18:02] *** domidumont left
[18:03] <dannymk> See:  https://metacpan.org/pod/JSON#OBJECT-SERIALISATION

[18:11] <pmurias> dannymk: isn't that Perl 5?

[18:11] <Xliff> Do arrays have a Str.substr-rw equivalent?

[18:12] <lizmat> splice ?

[18:13] <Xliff> lizmat: Hmm... will look into that. Thanks!

[18:14] <dannymk> pmurias:  Yes, of course.  Was asking how to provide the sub in a class in 6. 

[18:14] <dannymk> when using modules like JSON::Fast

[18:15] <dannymk> https://github.com/jonathanstowe/JSON-Marshal  does help but it may include attributes that I do not want

[18:16] <lizmat> weekly: https://www.facebook.com/ashport/posts/10156667439278326

[18:16] <notable6> lizmat, Noted!

[18:17] <lizmat> weekly: https://laurent-rosenfeld.developpez.com/tutoriels/perl/perl6/regex-grammaire-puissance/

[18:17] <notable6> lizmat, Noted!

[18:19] <pmurias> dannymk: sorry didn't notice that you where the person asking the question

[18:25] <Xliff> Well, never use @a.splice when attempting to loop over @a. Instant infinite loop. 

[18:30] *** |oLa| joined
[18:31] *** p6bannerbot sets mode: +v |oLa|

[18:31] *** |oLa| left
[18:36] *** jmerelo joined
[18:37] *** pecastro joined
[18:37] *** p6bannerbot sets mode: +v jmerelo

[18:38] *** p6bannerbot sets mode: +v pecastro

[18:39] <jmerelo> squashable6: status

[18:39] <squashable6> jmerelo, ‚ö†üçï Next SQUASHathon in ‚âà15 hours (2018-11-03 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:39] <jmerelo> Ready for squashathonint? 

[18:46] <AlexDaniel> did anybody mention it in social media?

[18:46] <jmerelo> AlexDaniel: yep, Zoffix and me, at least.

[18:48] <AlexDaniel> nice

[18:48] <jmerelo> Can't hurt to say it again

[18:48] <AlexDaniel> alright I need to set up the bot I guess

[18:48] <jmerelo> We would need a single splash page also. Right now it's kind of spread over: here are the issues, here're some introductory instructions, here's the hackathon...

[18:49] *** kurahaupo left
[18:50] <jmerelo> AlexDaniel: but anyway, here we go again.

[18:50] *** domidumont joined
[18:50] *** kurahaupo joined
[18:51] *** p6bannerbot sets mode: +v domidumont

[18:51] <squashable6> Webhook for perl6/doc is now active! Non-blocking is better than blocking.

[18:51] *** p6bannerbot sets mode: +v kurahaupo

[18:59] <jmerelo> I've updated the flowchart I created in June: https://drive.google.com/file/d/1a4nUM5XoStagv7ycZpQG48_PHGodVJYm/view?usp=sharing

[19:21] *** Actualey` joined
[19:22] *** p6bannerbot sets mode: +v Actualey`

[19:22] *** Actualeyes left
[19:27] *** dannymk left
[19:38] <holyghost> jmerelo: I've updated AI::Agent a little to load the right module, I'll debug it as a 2nd package tomorrow. Later on I will build some tests for Mathx::Stat and the former to calm lizmat about it

[19:38] <holyghost> I hope I didn't went too far with name calling

[19:39] <holyghost> Then I'll refactor my Advent

[19:40] <holyghost> Back in the day for project Altima we just needed compilable code

[19:41] <holyghost> I understand perl6's wishes now

[19:43] <holyghost> Only thing is tests broke perl 5 cpan code

[19:47] <holyghost> Then we had smoothly functioning anarchy, not anymore these days :-)

[19:47] <jmerelo> holyghost: you miss the point here. Tests are not made to calm anyone. They are there to prove your code is not broken. They are not perl6's wishes either. Untested code is broken code.

[19:48] <holyghost> ok

[19:50] <holyghost> It's probably a hassle from normal coding, I'll build some tests

[19:51] <buggable> New CPAN upload: AI-Agent-0.1.24.tar.gz by HOLYGHOST http://modules.perl6.org/dist/AI::Agent:cpan:HOLYGHOST

[19:51] * jmerelo gives up

[19:52] *** ExtraCrispy left
[19:53] <holyghost> never mind, I'll fix later on :-)

[19:54] <robertle> isn't there a nicer way to do travis than with

[19:54] <robertle> "lang: perl6" that recompiles perl6 itself all the time?

[19:55] <jmerelo> robertle: you can use a Docker image like mine: https://hub.docker.com/r/jjmerelo/test-perl6/

[19:55] <El_Che> robertle: https://github.com/nxadm/rakudo-pkg#using-rakudo-pkg-on-travis

[19:56] <jmerelo> El_Che++

[19:57] <robertle> ah, interesting! thanks a lot

[19:58] <El_Che> I have pkgs from every release for more than a few years. So maybe a matrix could be useful

[19:58] <El_Che> like:

[19:58] <El_Che> language: raku

[19:58] <El_Che> rako:

[19:58] <El_Che> - 2018.10

[19:58] <El_Che> - 2010.09

[19:58] <jmerelo> Do we have raku officially now?

[19:58] <El_Che> - ...

[19:59] <El_Che> jmerelo: it's the alias TimToady liked the most

[19:59] <moritz> has that been made official in any way?

[19:59] <jmerelo> El_Che: so it's unofficially official

[19:59] <El_Che> moritz: not that I know of, probably will Zoffix take care of that

[20:00] <El_Che> jmerelo: it's the officially the almost-official non-official alias

[20:00] <El_Che> or something like that :)

[20:00] <jmerelo> :-)

[20:01] <holyghost> lol, raku is a perl6 dialect ?

[20:01] *** koto joined
[20:01] <El_Che> non, is an alias for perl 6, the latter being the official name

[20:01] <holyghost> ok

[20:02] <El_Che> Some of us, including me, feel that it's easier to market 

[20:02] *** p6bannerbot sets mode: +v koto

[20:02] <holyghost> sure, whatever you need

[20:02] <jmerelo> El_Che: ... extra-officially.

[20:02] *** domidumont left
[20:03] <holyghost> do is ut in Flemish, the note I mean

[20:04] *** sena_kun left
[20:04] <El_Che> do is ut in most languages I know

[20:05] <holyghost> I hope I can get some market share from it :-)

[20:06] <robertle> El_Che: do you have a project that uses this travis setup? I get "No Rakefile found..." failures with this

[20:07] <El_Che> robertle: I had, but removed it. Let me check

[20:07] <Woodi> hi :)

[20:07] <El_Che> robertle: put this on top: 

[20:07] <jmerelo> robertle: I wouldn't want to butt in again, but I do use that docker image in my own modules, like here: https://github.com/JJ/p6-math-constants/blob/master/.travis.yml

[20:07] <El_Che> language: generic

[20:08] <jmerelo> Woodi: hi

[20:08] <El_Che> it using the ruby as default

[20:08] <holyghost> hello

[20:08] *** kurahaupo left
[20:09] <jmerelo> El_Che: language: generic suppressed downloading of Ruby stuff?

[20:09] <robertle> El_Che: makes sense

[20:09] <El_Che> kind of

[20:09] <El_Che> I use it in https://github.com/nxadm/rakudo-pkg itself

[20:09] *** kurahaupo joined
[20:09] <holyghost> I have 2 beers left, my workable code should make next week :-|

[20:09] <El_Che> where I create containers to create rakudo pkgs

[20:09] <robertle> jmerelo: I will try that next, but if I can get El_Che's method to work then I can also adapt it to use the debian packages, which would be sweet (for me)

[20:09] <Woodi> found today that C have div in stdlib.h, it returns struct with both quotient and remainder at once. cannot find equivalent in docs...

[20:10] *** |oLa| joined
[20:10] <jmerelo> robertle: they work fine, actually. We use them in Perl6/docs along with the docker container. 

[20:10] *** p6bannerbot sets mode: +v kurahaupo

[20:10] *** |oLa| left
[20:10] <El_Che> robertle: the pkgs are built for the oldish 14.04 ubuntu travis uses

[20:10] <jmerelo> robertle: good thing about docker container is that you can create your own custom one, which will download in a jiffy if you have a bunch of dependencies.

[20:10] *** noganex_ left
[20:11] <jmerelo> Woodi: there's %%

[20:11] <jmerelo> m: say 333 %% 6

[20:11] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´False‚ê§¬ª

[20:11] <jmerelo> No, wait

[20:11] *** noganex joined
[20:11] <jmerelo> That's divisibility

[20:11] <jmerelo> m: say 333 % 6

[20:11] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´3‚ê§¬ª

[20:11] <robertle> jmerelo: cool, so close to having zef in debian main as well...

[20:12] <El_Che> robertle: that's great news

[20:12] <jmerelo> robertle++

[20:12] *** p6bannerbot sets mode: +v noganex

[20:12] <holyghost> Woodi: https://www.perlmonks.org/?node_id=981240

[20:12] <El_Che> robertle: I am waiting for MS to buy Canonical to move back to Debian :P

[20:12] <Woodi> jmerelo: but I looking something that gives both numbers back

[20:13] <jmerelo> Woodi: I don't think we have that... 

[20:14] <holyghost> y ($var, $mod) = (4999, 100);

[20:14] <holyghost> my ($quot, $rem) = (int $var / $mod, $var % $mod);

[20:14] <holyghost> s/y/my

[20:14] <jmerelo> and int / should be div

[20:15] <geekosaur> holyghost, point here is there's usuallya  CPU op that produces both at the same tme

[20:15] <geekosaur> rather than doing it twice and each throwing away the half it's not using

[20:15] <holyghost> sure, I just looked it up

[20:15] <jmerelo> m: my $mod-and-rem = -> $num, $div { return [ $num div $div, $num % div ] }; say $mod-and-rem(333,3), $mod-and-rem(777,8)

[20:15] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    div used at line 1. Did you mean 'die', 'dir'?‚ê§‚ê§¬ª

[20:16] <jmerelo> m: my $mod-and-rem = -> $num, $div { return [ $num div $div, $num % $div ] }; say $mod-and-rem(333,3), $mod-and-rem(777,8)

[20:16] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´Attempt to return outside of any Routine‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:16] <jmerelo> m: my &mod-and-rem = -> $num, $div { return [ $num div $div, $num % $div ] }; say mod-and-rem(333,3), mod-and-rem(777,8)

[20:16] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´Attempt to return outside of any Routine‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[20:16] <jmerelo> m: my &mod-and-rem = -> $num, $div { [ $num div $div, $num % $div ] }; say mod-and-rem(333,3), mod-and-rem(777,8)

[20:16] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´[111 0][97 1]‚ê§¬ª

[20:16] <holyghost> coolness

[20:16] <jmerelo> Woodi: ^^^^. Kinda

[20:17] <Woodi> jmerelo: it's cheating :)

[20:17] <jmerelo> Woodi: you can cheat even more

[20:18] <holyghost> jmerelo: you said you liked my AI::Agent work, could you tell me what you liked the most about it ? I have to invent more agents

[20:18] *** jast left
[20:19] <jmerelo> m: sub term:<///> ( $num, $div ) { [ $num div $div, $num % $div ] }; say 333 /// 3, 777 /// 8

[20:19] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´5===SORRY!5===‚ê§Unrecognized regex metacharacter , (must be quoted to match literally)‚ê§at <tmp>:1‚ê§------> 3div $div, $num % $div ] }; say 333 /// 37‚èè5, 777 /// 8‚ê§Unable to parse regex; couldn't find final '/'‚ê§at <tmp>:1‚ê§------> 3‚Ä¶¬ª

[20:19] <jmerelo> m: sub term:<\> ( $num, $div ) { [ $num div $div, $num % $div ] }; say 333 \ 3, 777 \ 8

[20:19] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in quote words; couldn't find final '>' (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3v, $num % $div ] }; say 333 \ 3, 777 \ 87‚èè5<EOL>‚ê§    expecting an‚Ä¶¬ª

[20:19] *** jast joined
[20:19] <jmerelo> m: sub term:<%%%> ( $num, $div ) { [ $num div $div, $num % $div ] }; say 333 %%% 3, 777 %%% 8

[20:19] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3m div $div, $num % $div ] }; say 333 %%%7‚èè5 3, 777 %%% 8‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        stat‚Ä¶¬ª

[20:20] <jmerelo> m: sub term:<%%%> ( $num, $div ) { return [ $num div $div, $num % $div ] }; say 333 %%% 3, 777 %%% 8

[20:20] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3m div $div, $num % $div ] }; say 333 %%%7‚èè5 3, 777 %%% 8‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        stat‚Ä¶¬ª

[20:20] *** p6bannerbot sets mode: +v jast

[20:22] <Woodi> geekosaur: yea, I looking something like in asm. C probably do exactly this and packs eax and edx into struct. except it's not so nice: div, idiv, few register sizes and not automatic for unlimited numbers like in Perl :)

[20:23] <holyghost> Woodi: in assembly ?

[20:23] <Woodi> no, in Perl 6 :)

[20:23] <holyghost> you're programming e.g. without bignums or C or asm

[20:23] <Woodi> it could return Pair or something

[20:24] <holyghost> pair is old STL

[20:24] *** noganex_ joined
[20:24] <holyghost> C++

[20:24] *** p6bannerbot sets mode: +v noganex_

[20:26] <holyghost> Woodi: perl6 is a High Level Language more than perl 5

[20:26] <holyghost> It's less libc interfaced

[20:27] <holyghost> less a UNIX swiss army-knife

[20:27] <geekosaur> but thereis some effort to unbox and use native ops when possible, as an optimization

[20:27] <El_Che> lizmat's modules

[20:27] <El_Che> ?

[20:27] *** noganex left
[20:28] <Woodi> holyghost: Perl 6 seems also having everything, if possible :)

[20:28] <holyghost> Woodi: sure :-)

[20:29] <holyghost> Woodi: look :http://www.google.com/search?hl=nl-BE&source=hp&biw=&bih=&q=perl6+quotient+remainder&btnG=Google+zoeken&gbv=2

[20:29] <jmerelo> m: sub infix:<%%%> ( $num, $div ) { return [ $num div $div, $num % $div ] }; say 333 %%% 3, 777 %%% 8

[20:29] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´[111 0][97 1]‚ê§¬ª

[20:30] <jmerelo> Woodi: ^^^

[20:34] <jmerelo> Ah, wait, you want Pairs

[20:34] <jmerelo> m: sub infix:<%%%> ( $num, $div ) { return  $num div $div => $num % $div  }; say 333 %%% 3, 777 %%% 8

[20:34] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´111 => 097 => 1‚ê§¬ª

[20:34] <Woodi> no, probably array is better

[20:34] <Woodi> thanx :)

[20:35] <jmerelo> m: sub infix:<%%%> ( $num, $div ) { return  Pair.new($num div $div, $num % $div  ); say 333 %%% 3 ~ " and " ~  777 %%% 8

[20:35] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3 ); say 333 %%% 3 ~ " and " ~  777 %%% 87‚èè5<EOL>‚ê§    expecting any of:‚ê§        postfix‚ê§        statement end‚ê§        statement modifier‚ê§        stat‚Ä¶¬ª

[20:35] <jmerelo> m: sub infix:<%%%> ( $num, $div ) { return  Pair.new($num div $div, $num % $div  ) }; say 333 %%% 3 ~ " and " ~  777 %%% 8

[20:35] <camelia> rakudo-moar 94dd0a411: OUTPUT: ¬´111     0 and 97        1‚ê§¬ª

[20:36] <jmerelo> I could mix in a role that stringifies more beautifully, but that would be showing off.

[20:36] <jmerelo> Talking about off and away...

[20:36] * jmerelo goes AFK to my coach to watch b-series movies

[20:36] *** jmerelo left
[20:42] <holyghost> I'm also off to bed and a beer 

[20:42] <El_Che> in that order?

[20:43] <holyghost> I have 2 pints left

[20:43] <AlexDaniel> so yes

[20:43] <AlexDaniel> :)

[20:43] <holyghost> lol

[20:44] <holyghost> I am probably not going to reach a functional update of AI::Agent tomorrow

[20:44] <holyghost> I go off to my kids on saturday

[20:46] <holyghost> I hope I can manage next week with META.json and tests

[20:47] *** holyghost is now known as holyghost[afk]

[20:49] *** zxcvz left
[20:51] <holyghost[afk]> now I have a headache

[20:53] <holyghost[afk]> ok I am off to bed

[20:53] *** holyghost[afk] is now known as holyghost

[21:02] *** cognominal-p6 left
[21:13] *** dogbert17 left
[21:21] <tobs> I'm on the fence if I should claim a date for the advent calendar. I just started porting some code and its dependencies from a research project last year to Perl 6. It involves mostly propositional calculus and interfaces to various forms of SAT solvers.

[21:21] <tobs> It's a labor of love, but besides not being done with the module(s) yet, a blog post about it would be equal parts P6 and my applications in maths, so I'm not sure if it's suitable.

[21:22] <tobs> Is anyone able to comment/advise based on the information given?

[21:38] *** random_yanek left
[21:49] *** random_yanek joined
[21:50] *** p6bannerbot sets mode: +v random_yanek

[21:50] <koto> tobs, as far as I know, claims are almost always welcome when you have something to show, and your case sounds good to me(but keep in mind I am novice here). A completed module will be welcome but, I think, as a general rule, if you have some "Perl 6 code that nicely deals with something useful"(and math _is_ useful, and most programmers should know about propositional calculus :) ), I don't see anything wrong with it.

[21:51] *** pmurias left
[21:52] *** pyrimidine left
[21:59] <tobs> koto: thanks, that's what I wanted to hear :-) Then I think I make it dependent on the status of the main module by next week's end. (The material will become blog posts one way or the other, so nothing is lost.)

[22:01] <tbrowder___> tobs: i agree with koto

[22:01] <koto> tobs, great. I mean, I read blogs posts about "Cool, nice tricks you can do with $language-thing you probably didn't try out" before and those were entertaining enough.

[22:02] * sjn too. A "This is what it looks like to port a project to Perl 6" report is always useful, and if one can learn a little math at the same time, that's an awesome bonus :)

[22:03] <sjn> or what you said :)

[22:11] <tobs> sjn: such a report would be so-so, I suppose :-) I'm porting from sagemath, so I'm lucky that I only miss prop calc, but OTOH it's a chance to make the replacement more beautiful than it is (can be?) in their python dialect.

[22:12] <tobs> but I'll keep that in mind, too.

[22:14] * tobs is not a python programmer

[22:25] <tobs> SmokeMachine: while on that topic, I for one would like to read about Red, what it does and more importantly how.

[22:33] *** ufobat left
[22:39] <SmokeMachine> tobs: id love to write about Red, but I‚Äôm not sure if it‚Äôll be published yet...

[22:42] *** cognominal-p6 joined
[22:42] *** koto left
[22:43] *** p6bannerbot sets mode: +v cognominal-p6

[22:43] *** ufobat joined
[22:44] *** p6bannerbot sets mode: +v ufobat

[22:57] *** sno left
[23:04] *** HaraldJoerg left
[23:06] <SmokeMachine> tobs: I think I‚Äôll publish it ‚Äúas it is‚Äù any way... and write about it... what do you think?

[23:11] *** moonythedustpile left
[23:12] *** moony joined
[23:12] *** p6bannerbot sets mode: +v moony

[23:13] *** robertle left
[23:13] *** robertle joined
[23:14] *** p6bannerbot sets mode: +v robertle

[23:22] *** rindolf left
[23:23] <tobs> SmokeMachine: maybe you don't even have to publish it beforehand. AFAICS, it uses traits extensively. From my point of view, that's an interesting design element that is probably already set in stone.

[23:24] <tobs> well, it's already published, but just not zeffable, I take it?

[23:25] <tobs> most of all though, I'm thinking about going to bed o/

[23:26] <tobs> I for one haven't written traits myself, so what I was going at was this: I'd like to be told how traits are used in Red, how a trait is implemented and how nice a sample program using them looks. For me, that'd be enough already :)

[23:29] *** HaraldJoerg1 joined
[23:29] *** sno joined
[23:29] *** p6bannerbot sets mode: +v HaraldJoerg1

[23:30] *** p6bannerbot sets mode: +v sno

[23:35] *** kurahaupo left
[23:35] *** kurahaupo joined
[23:35] *** p6bannerbot sets mode: +v kurahaupo

[23:49] <SmokeMachine> tobs: yes, it‚Äôs on github... but it would better to the reader if he/she could zef install it to test, wouldn‚Äôt?

[23:57] *** pecastro left
