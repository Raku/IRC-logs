[00:00] <buggable> 🎺🎺🎺 It's time for the monthly Accidental /win Lottery 😍😍😍 We have 2 ballots submitted by 2 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 10! Congratulations to nine! You win a roll of duck tape!

[00:01] *** comborico1611 left
[00:16] *** mcmillhj joined
[00:18] *** markong left
[00:21] *** ambs joined
[00:29] *** zachk left
[00:48] *** comborico1611 joined
[00:49] <comborico1611> m: say "Word count: ", $/.elems if "I have a dream" ~~ / \w+ \

[00:49] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «5===SORRY!5===␤Unrecognized regex metacharacter \ (must be quoted to match literally)␤at <tmp>:1␤------> 3 $/.elems if "I have a dream" ~~ / \w+ \7⏏5<EOL>␤Unable to parse regex; couldn't find final '/'␤at <tmp>:1␤------> 3 $/.el…»

[00:50] <comborico1611> say "Word count: ", $/.elems if "I have a dream" ~~ / \w+ /

[00:50] <evalable6> comborico1611, rakudo-moar 8cd70d1ee: OUTPUT: «Word count: 0␤»

[00:50] <comborico1611> Why no word count?

[00:51] *** guifa joined
[00:52] <guifa> Has anyone had much trouble with the syntax highlighter in Atom?  It's having trouble with a regex and turning everything after it a single color

[00:54] *** comborico1611 left
[00:54] <Herby_> guita, can you throw it up on gist?

[00:58] *** vcv_ left
[00:59] <TEttinger> Herby_: you may have meant guifa?

[00:59] <TEttinger> I've had similar issues before, but long ago

[01:00] <TEttinger> I think I used \C[APOSTROPHE] or something instead of '

[01:00] <guifa> https://gist.github.com/alabamenhu/81c6c2d27fc397fd6b4a044ddb2b2f5e

[01:01] <TEttinger> I think the \\ escapes the backslash, so the ' isn't escaped

[01:01] <TEttinger> not sure

[01:02] <TEttinger> may need some spaces if only to make Atom see it clearly

[01:03] *** raynold joined
[01:04] <sacomo> hi all

[01:08] <guifa> Yeah that's what I was thinking.  

[01:08] <guifa> Spaces didn't help.  Only solution was to throw it in a variable

[01:09] <guifa> Which actually honestly a bit more readable, I just didn't know how common it was and if there was a good place to report minor issues like that 

[01:19] *** athenot joined
[01:20] *** retupmoca left
[01:22] *** athenot_ joined
[01:22] *** retupmoca joined
[01:25] *** athenot left
[01:27] <AlexDaniel> m: say "Word count: ", +"I have a dream".comb(/ \w+ /)

[01:27] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «Word count: 4␤»

[01:27] <AlexDaniel> m: say "Word count: ", +"I have a dream".words

[01:27] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «Word count: 4␤»

[01:27] <sacomo> I am trying to confirm that an object that I pass around is the same version ever time it is used. Right now I am testing by doing something like this in the class: ENTER { say .WHERE }, this executes every time it is used, and is printing the same memory address every time. Is that a confirmation that this is the same version of the object?

[01:28] <moritz> it is, but it's not reliable

[01:29] <moritz> use .WHICH for identity

[01:29] <sacomo> ok, thanks

[01:29] <moritz> a compacting GC can move objects around, which might lead to a changing .WHERE

[01:29] <sacomo> ok

[01:30] <sacomo> is there also any way to determine how many instances of a class exist in memory at a given time?

[01:33] <moritz> only if the class counts

[01:34] <sacomo> ok, I am testing with a state variable also, inside the ENTER {}. seems to work ok.

[01:34] <sacomo> thanks

[01:37] *** mcmillhj left
[01:45] *** ilbot3 left
[01:46] *** Zoffix joined
[01:47] <Zoffix> guifa: Yeah, there are some bugs in the highligher. You can file the Issue here: https://github.com/perl6/atom-language-perl6 though I think our resident expert on that stuff is currently busy with More Important Things™, so it might take awhile before someone fixes it.

[01:48] <Zoffix> guifa: it's also the same highligher used by GitHub to highlight code samples, so if you got the know-how to fix it, that'd be awesome :)

[01:48] <guifa> Zoffix: Sadly, probably out of my league.  =\ 

[01:50] <Zoffix> guifa: if you're well-versed with setting up your keyboard to type fancy Unicode, the '\\' construct is a lot more readable as ｢\｣

[01:50] <guifa> That I am, actually.  I'm doing a diplomatic edition of an old incunable so my keyboard is set to do some ... interesting things ha

[01:50] <guifa> Maybe I should make a perl6 keyboard layout ... that I could :-)

[01:52] <guifa> In the meantime I just used <!after $backslash> $open-brace ... which ended up looking better than any quoted / escaped options.  

[01:56] *** ilbot3 joined
[01:56] *** ChanServ sets mode: +v ilbot3

[01:56] <Zoffix> guifa: looks like the highligher doesn't know that adverbs on s/// can take args. You could workaround with method form of that operator: https://gist.github.com/zoffixznet/bc9f8054a3bacf142a8a47b188665ce2

[01:59] <Zoffix> guifa: and I filed an Issue: https://github.com/perl6/atom-language-perl6/issues/84

[01:59] * Zoffix flies away into the sunset, cape flapping in the wind

[01:59] *** Zoffix left
[02:20] *** araraloren joined
[02:20] *** guifa left
[02:24] *** kt_ left
[02:52] *** khisanth__ left
[02:52] *** skids left
[03:03] *** eliasr left
[03:04] *** khisanth__ joined
[03:13] *** hobbified left
[03:15] *** Chigger joined
[03:20] *** Chigger left
[03:26] *** hobbs joined
[03:26] *** hobbs left
[03:26] *** hobbs joined
[03:36] *** Chigger joined
[03:49] *** kurahaupo_ is now known as kurahaupo

[03:53] *** Chigger left
[04:02] *** khisanth__ left
[04:05] *** AlexDaniel left
[04:09] *** retupmoca left
[04:11] *** Herby_ left
[04:15] *** khisanth__ joined
[04:24] *** irco left
[04:59] *** khw left
[04:59] <Geth> ¦ doc: e8d5cf7eb3 | 陈梓立++ | doc/Language/operators.pod6

[04:59] <Geth> ¦ doc: Fix #1983

[04:59] <Geth> ¦ doc: 

[04:59] <Geth> ¦ doc: Though I don't know if we can replace `infix_%26%26`

[04:59] <Geth> ¦ doc: to `infix &&`.

[04:59] <synopsebot> Link: https://doc.perl6.org/language/operators

[04:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e8d5cf7eb3

[05:02] <Geth> ¦ doc: W4anD0eR96 self-assigned Convert 1-file docs to epub with TOC https://github.com/perl6/doc/issues/1981

[05:06] *** andrzejk_ joined
[05:20] *** sauvin joined
[05:20] *** athenot_ left
[05:37] *** athenot joined
[05:56] *** andrzejk_ left
[06:04] *** wamba joined
[06:19] *** jmerelo joined
[06:19] *** andrzejk_ joined
[06:21] <Geth> ¦ doc: b5d86a18fa | (JJ Merelo)++ | t/02-pod-valid.t

[06:21] <Geth> ¦ doc: Separates files in batches. Should help with #1951

[06:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b5d86a18fa

[06:22] *** sena_kun joined
[06:27] *** [Sno] joined
[06:29] *** sno left
[06:31] *** Guest43854 joined
[06:35] *** stee joined
[06:36] *** stee3 left
[06:36] *** wamba left
[06:40] <jmerelo> Service unavailable in whateverable.6lang.org ... https://travis-ci.org/perl6/doc/jobs/373354420

[06:40] <jmerelo> Good morning

[06:50] *** darutoko joined
[06:57] *** troys left
[06:58] *** Guest43854 left
[07:01] *** dwarring left
[07:02] <jmerelo> p6: say 'ðu' ~~ rx/.u/; say 'ðu' ~~ m/.u/;

[07:02] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «｢ðu｣␤｢ðu｣␤»

[07:12] <jmerelo> p6: say 'ðu' ~~ rx/.u/; say 'ðu' ~~ m/.u/;  say 'ðu' ~~ /.u/;

[07:12] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «｢ðu｣␤｢ðu｣␤｢ðu｣␤»

[07:13] <jmerelo> p6: my $r-var = '.u'; say 'ðu' ~~ rx/$r-var/; say 'ðu' ~~ m/$r-var/;  say 'ðu' ~~ /$r-var/;

[07:13] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «Nil␤False␤Nil␤»

[07:14] <jmerelo> p6: my $r-var = m'.u'; say 'ðu' ~~ rx/$r-var/; say 'ðu' ~~ m/$r-var/;  say 'ðu' ~~ /$r-var/;

[07:14] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «Use of uninitialized value of type Any in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤Nil␤False␤Nil␤  in block <unit> at <tmp> line 1␤»

[07:15] <jmerelo> p6: my $r-var = rx'.u'; say 'ðu' ~~ rx/$r-var/; say 'ðu' ~~ m/$r-var/;  say 'ðu' ~~ /$r-var/;

[07:15] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «｢ðu｣␤｢ðu｣␤｢ðu｣␤»

[07:17] <jmerelo> p6: my $r-var = /.u/; say 'ðu' ~~ rx/$r-var/; say 'ðu' ~~ m/$r-var/;  say 'ðu' ~~ /$r-var/;

[07:17] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «｢ðu｣␤｢ðu｣␤｢ðu｣␤»

[07:41] *** parv joined
[07:43] *** rindolf joined
[07:47] *** domidumont joined
[07:51] <Geth> ¦ doc: b86c6ee320 | (JJ Merelo)++ | doc/Language/faq.pod6

[07:51] <Geth> ¦ doc: Adds FAQ on entering special characters closes #1850

[07:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b86c6ee320

[07:51] <synopsebot> Link: https://doc.perl6.org/language/faq

[07:53] *** domidumont left
[07:54] *** domidumont joined
[07:55] <stmuk> wow that was a long p6weekly

[07:59] * lizmat clickbaits https://p6weekly.wordpress.com/2018/04/30/2018-18-releases-galore/

[07:59] <lizmat> yeah, I noticed  :-)

[08:01] *** robertle joined
[08:03] *** aindilis` joined
[08:04] *** aindilis left
[08:14] *** scimon joined
[08:27] *** wamba joined
[08:31] *** molaf joined
[08:44] *** andrzejk_ left
[08:45] *** andrzejk_ joined
[08:50] *** andrzejk_ left
[08:55] *** andrzejk_ joined
[08:57] <moritz> lizmat++

[09:11] <Geth> ¦ doc: W4anD0eR96 self-unassigned Convert 1-file docs to epub with TOC https://github.com/perl6/doc/issues/1981

[09:17] *** andrzejk_ left
[09:17] *** andrzejk_ joined
[09:21] *** parv left
[09:41] *** Woodi joined
[09:41] <Woodi> hallo :)

[09:51] <Geth> ¦ doc/master: 13 commits pushed by (Luca Ferrari)++

[09:51] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/b86c6ee32085...dab7432a73db

[09:51] *** zakharyas joined
[09:52] <araraloren> hi

[09:52] *** Ven`` joined
[09:52] *** Ven`` left
[09:53] *** Ven`` joined
[09:53] <Geth> ¦ doc: 01233ad35a | (Luca Ferrari)++ | README.md

[09:53] <Geth> ¦ doc: POD -> Pod coherently with the rest of the readme.

[09:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/01233ad35a

[09:55] <jmerelo> Woodi: hi!

[10:02] *** Ven`` left
[10:02] *** andrzejk_ left
[10:03] *** Ven`` joined
[10:06] *** eliasr joined
[10:16] *** irco joined
[10:21] <hahainternet> if i wanted to zip a list of numbers with hash keys, i can use Z but this truncates to the shortest length, i can use roundrobin, but this consumes the available keys then zips with nothing, i know in some hyper operator use they 'extend' the values indefinitely

[10:21] <hahainternet> is there a way to zip a list of numbers with hash keys in a way that will repeat hash keys in the output if there are enough #s?

[10:22] <Ulti> do you have more keys than numbers and want to pad with some kind of undef or default value?

[10:22] <Ulti> might just be worth padding the list of keys

[10:28] <hahainternet> oh sorry Ulti i wanted to ideally repeat them

[10:29] <hahainternet> but it's more of a theoretical question, wondering if there's operator forms or variations i don't know

[10:29] <hahainternet> i can obviously take the keys list and make a list that's long enough

[10:29] <hahainternet> but i wondered if there was some fancy form :)

[10:32] <Ulti> out of curiosity what is it you're doing?

[10:33] <jnthn> m: my %h = a => 'x', b => 'c'; my @numbers = 1..10; dd (|%h.keys xx *) Z @numbers

[10:33] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «(("b", 1), ("a", 2), ("b", 3), ("a", 4), ("b", 5), ("a", 6), ("b", 7), ("a", 8), ("b", 9), ("a", 10)).Seq␤»

[10:33] *** epony left
[10:33] <jnthn> m: my %h = a => 'x', b => 'c'; my @numbers = 1..10; dd %h.keys <<,<< @numbers

[10:33] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «(("a", 1), ("b", 2), ("a", 3), ("b", 4), ("a", 5), ("b", 6), ("a", 7), ("b", 8), ("a", 9), ("b", 10))␤»

[10:34] <jnthn> The latter ain't lazy, the first is

[10:34] <jnthn> m: my %h = a => 'x', b => 'c'; my @numbers = 1..10; dd (|%h.keys, *) Z @numbers

[10:34] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «(("b", 1), ("a", 2), ("a", 3), ("a", 4), ("a", 5), ("a", 6), ("a", 7), ("a", 8), ("a", 9), ("a", 10)).Seq␤»

[10:34] <Ulti> xx * ooooo

[10:35] <Ulti> thats neat

[10:35] <jnthn> That also works (Z pays attention to * at the end and takes it to mean repeat)

[10:35] <jnthn> oh, but it repeats the *last* element

[10:35] <jnthn> So it's not what you want here :)

[10:35] <Ulti> ah

[10:35] <jnthn> Whereas the hyper form does seem to do the right thing, and the xx one too 

[10:36] *** rindolf left
[10:36] *** andrzejk_ joined
[10:37] *** epony joined
[10:41] *** rindolf joined
[10:42] <Woodi> jnthn: links to MoarVM releases are busted, eg:  http://moarvm.org/releases/2018.04.tar.gz  ; no 'MoarVM-'

[10:42] *** markong joined
[10:44] <jnthn> Woodi: Links from where?

[10:44] <hahainternet> Ulti: it has no practical purpose, a friend in another channel was doing it in python

[10:45] *** notbenh left
[10:45] <hahainternet> and every time someone does something neat in python, i like to wonder how i could do that in perl

[10:45] <hahainternet> jnthn: tyvm that is indeed a better solution to python as usual :)

[10:45] <jnthn> Welcome :)

[10:45] <jnthn> Woodi: oh, releases page on the site...I see

[10:46] <hahainternet> jnthn: i didn't realise you could hyper to , but it was that hyper behaviour i was familiar with, and the ability to 'repeat the last' and 'repeat the block' is equally a very useful tool

[10:46] <hahainternet> if i could remember the code for unicode thumbs up i'd type that a lot

[10:57] *** epony left
[11:00] <lizmat> 👍

[11:00] <lizmat> (ready to copy-paste)

[11:01] <titsuki> bisectable: my $a = 0; say do for ^10 { $a++; $a }

[11:01] <bisectable6> titsuki, On both starting points (old=2015.12 new=8cd70d1) the exit code is 0 and the output is identical as well

[11:01] <bisectable6> titsuki, Output on both points: «(10 10 10 10 10 10 10 10 10 10)␤»

[11:02] <jmerelo> The whateverable.6lang.org site keeps returning "service unavailable" for a while...  One of the two tests keeps erroring

[11:02] <titsuki> bisectable: my $a = 0; say do for ^10 { $a++; $a.Int }

[11:02] <bisectable6> titsuki, On both starting points (old=2015.12 new=8cd70d1) the exit code is 0 and the output is identical as well

[11:02] <bisectable6> titsuki, Output on both points: «(1 2 3 4 5 6 7 8 9 10)␤»

[11:03] <jmerelo> Just announced a mini-hackathon in Granada next Friday http://granada.pm/blog/squashathon/

[11:03] <lizmat> jmerelo++

[11:03] <jmerelo> If you happen to be around, there will be lots of fun, stickers and beer (or your favorite $*BEVERAGE) with tapas.

[11:04] <jmerelo> squashable6: status

[11:04] <squashable6> jmerelo, ⚠🍕 Next SQUASHathon in 2 days and ≈22 hours (2018-05-05 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[11:04] <jmerelo> It's intended to start at the same time as that

[11:06] <buggable> New CPAN upload: P5getpwnam-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5getpwnam-0.0.1.tar.gz

[11:07] <hahainternet> lizmat: i've been trying to remember the codes for everyting that's not on Compose

[11:07] <hahainternet> but all i can remember is 􏿽xE2􏿽x84􏿽xA6 lol

[11:07] * lizmat has a MBP with a little touch screen above the keyboard  :-)

[11:09] <lizmat> 💻

[11:10] <titsuki> bisectable: my $a = 0; say gather for ^10 { $a++; take $a }

[11:10] <bisectable6> titsuki, On both starting points (old=2015.12 new=8cd70d1) the exit code is 0 and the output is identical as well

[11:10] <bisectable6> titsuki, Output on both points: «(1 2 3 4 5 6 7 8 9 10)␤»

[11:12] <El_Che> lizmat: you're the first mbp user I met that liked the touch bar :)

[11:12] <lizmat> El_Che: I must admit I don't use it much other than what I would normally do with function keys

[11:13] <lizmat> but for emoji searching, it's really nice

[11:13] <lizmat> And if I don't want to use it I can 

[11:14] <lizmat> ^^ this was typed with the suggestions on the touch bar

[11:14] <El_Che> most people grumble "where is my esc key" :)

[11:15] <lizmat> it's still at the same place, but you can't feel it, that's true

[11:16] *** kurahaupo left
[11:16] *** kurahaupo_ joined
[11:25] <Ulti> hahainternet: hmm Im not sure how you would do that easily in Python actually

[11:25] <Ulti> unless zip has that behaviour by default and I never noticed

[11:25] <lizmat> m: dd <a b c> Z <d e f>

[11:25] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «(("a", "d"), ("b", "e"), ("c", "f")).Seq␤»

[11:26] <lizmat> m: dd <a b c> Z, <d e f>   # , is default for Z

[11:26] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «(("a", "d"), ("b", "e"), ("c", "f")).Seq␤»

[11:26] <Ulti> ???

[11:26] <evalable6> Ulti, rakudo-moar 8cd70d1ee: OUTPUT: «Stub code executed␤  in block <unit> at /tmp/dhHcvufSS2 line 1␤»

[11:27] <Ulti> uh oh what have I done

[11:29] *** epony joined
[11:36] <lizmat> Ulti: you type something that evalable6 thought was Perl 6 code and then executed it and told you the result

[11:36] <buggable> New CPAN upload: P5getgrnam-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5getgrnam-0.0.1.tar.gz

[11:37] <Geth> ¦ doc: 8f45c1caa3 | (JJ Merelo)++ | doc/Language/grammar_tutorial.pod6

[11:37] <Geth> ¦ doc: Adds a mini-tutorial on grammar inheritance

[11:37] <Geth> ¦ doc: 

[11:37] <Geth> ¦ doc: With roles thrown in for good measure. That would close #1816

[11:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8f45c1caa3

[11:37] <Geth> ¦ doc: deef7b455b | (JJ Merelo)++ | util/trigger-rebuild.txt

[11:37] <Geth> ¦ doc: Triggers rebuild

[11:37] <synopsebot> Link: https://doc.perl6.org/language/grammar_tutorial

[11:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/deef7b455b

[11:42] *** andrzejk_ left
[11:42] <Geth> ¦ doc: 6f170fc507 | 陈梓立++ (committed using GitHub Web editor) | README.zh.md

[11:42] <Geth> ¦ doc: Sync

[11:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6f170fc507

[11:43] *** molaf left
[11:43] <Geth> ¦ doc: 2437626325 | 陈梓立++ (committed using GitHub Web editor) | README.md

[11:43] <Geth> ¦ doc: Update README.md

[11:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2437626325

[11:44] <Geth> ¦ doc: 29be0e362f | 陈梓立++ (committed using GitHub Web editor) | README.zh.md

[11:44] <Geth> ¦ doc: Sync

[11:44] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/29be0e362f

[11:44] *** molaf joined
[11:48] *** epony left
[11:54] *** epony joined
[11:54] <hahainternet> Util: there was no nice way that properly expressed intentions like there is in 6

[11:55] *** MasterDuke left
[12:02] *** molaf left
[12:03] *** molaf joined
[12:06] <buggable> New CPAN upload: Chart-Gnuplot-0.0.4.tar.gz by TITSUKI http://modules.perl6.org/dist/Chart::Gnuplot:cpan:TITSUKI

[12:13] *** epony left
[12:13] *** epony joined
[12:17] *** Actualeyes left
[12:17] *** Actualeyes joined
[12:17] *** wamba left
[12:31] <Util> hahainternet: s/Util/Ulti/   ;^)

[12:31] <yoleaux> 13 Apr 2018 16:22Z <Zoffix> Util: FWIW, there's irc.p6c.org for IRC users if you don't to be dropped any time hack hangs

[12:31] <hahainternet> Util: my apologies you similarly nicked person :)

[12:33] <Util> hahainternet: No problem, has happened before. Half of why I spoke was to signal Ulti if he missed out being alerted to your message.

[12:34] <hahainternet> it happens to me on a few sites a lot as i have two or three letter nicks

[12:34] <hahainternet> and so perl lists named that way function as an @at for me :(

[12:34] <Util> Ouch!

[12:36] *** lizmat left
[12:41] *** mcmillhj joined
[12:42] <Ulti> yeah I like reading what people try and mention Util for :D

[12:42] <Ulti> I'd change if it wasnt for having had this nick since the dawn of time

[12:42] <jmerelo> .tell Zoffix there's some problem with builds; I'm using trigger-rebuild to do it to no avail. 

[12:42] <yoleaux> jmerelo: I'll pass your message to Zoffix.

[12:43] *** AlexDaniel joined
[12:44] <jmerelo> AlexDaniel: hi o/

[12:44] <[Coke]> "some problem"?

[12:44] <AlexDaniel> hello :)

[12:44] <[Coke]> if you're trying to get new versions of packages installed, you have to do it on the server itself. Is that what the issue is?

[12:44] *** Zoffix joined
[12:44] <jmerelo> [Coke]: Can't tell from logs. They simply stopped yesterday.

[12:44] <Zoffix> jmerelo: what sort of problem?>

[12:44] <jmerelo> [Coke]: shouldn't adding spaces to trigger-rebuild be enough?

[12:45] <Zoffix> Also triggers rebuild, and bumps up the bigpage version to the one

[12:45] <Zoffix> that includes this fix

[12:45] <jmerelo> Zoffix: it's stopped building, and adding spaces to util/trigger-rebuild does not, well, trigger any rebuild...

[12:45] <Zoffix> jmerelo: the "bumps up the bigpage version"... Did anyone actually upgrade the module on the server?

[12:46] <jmerelo> Zoffix: yep, I did

[12:46] <Zoffix> jmerelo: and you upgraded it in rakudobrew user?

[12:47] <jmerelo> Zoffix: I had no idea I had to do that... Or how that's done.

[12:47] *** windyhouse joined
[12:47] <Zoffix> jmerelo: what user did you upgraded it as? (I'm assuming "yep, I did" refers to upgrading the module on hack, right?:)

[12:48] <Zoffix> Still 0.3.2 installed

[12:48] * Zoffix upgrades

[12:48] <jmerelo> I bumped up the version in META6.json in https://github.com/perl6/perl6-pod-to-bigpage, bumped up in dependencies in perl6/doc, trigger rebuild... 

[12:48] *** andrzejk_ joined
[12:48] <jmerelo> Zoffix: I don't have an user there. I tought that editing util/trigger-rebuild was enough.

[12:49] *** kurahaupo joined
[12:49] <mcmillhj> I have been trying to wrap my head around why this junction doesn't function the same as a loop: https://gist.github.com/mcmillhj/f66fa2bd452bfe74baa958ca0f55068d Any thoughts?

[12:49] <[Coke]> jmerelo: none of those things upgrades the installed module on the server.

[12:49] <Zoffix> jmerelo: right, that won't upgrade it on the server, as the build uses server-wide install of perl6 and one of the admins https://github.com/perl6/infrastructure-doc/blob/master/hosts/hack.p6c.org.pod#administration has to upgrade it (using rakudobrew user). You could figure out how to make the doc build use its own installation and be upgradable through meta file changes or ask moritz if you could have access

[12:49] <Zoffix> to rakudobrew user on hack to do upgrades yourself.

[12:50] <mcmillhj> I can also post to StackOverflow for posterity 

[12:50] <[Coke]> Zoffix: I'm on that box now. want me to trigger the module update?

[12:50] *** kurahaupo left
[12:50] <jmerelo> mcmillhj: please do.

[12:50] <jmerelo> [Coke]: yes, please.

[12:50] *** kurahaupo joined
[12:50] <[Coke]> jmerelo: making sure I'm not stepping on zoffix's toes.

[12:51] <Zoffix> jmerelo: if you go the META file route, note that zef doesn't immediatelly know about new versions. There can be an ~15m delay until zef knows about new version, so you'd need to use `zef install https://URL-to-repo.git`

[12:51] <Zoffix> [Coke]: I updated the module

[12:51] <[Coke]> Zoffix++

[12:51] *** kurahaupo_ left
[12:52] <jmerelo> Zoffix: that's not complicated to figure out, just create a humongous lib/ dir would do. But it's kind of big. If you think I need access to that server, just priv me up. 

[12:52] <[Coke]> probably wouldn't hurt to add a note about module upgrades here: https://github.com/perl6/infrastructure-doc/blob/master/hosts/hack.p6c.org.pod#docperl6org-rebuild

[12:52] <Geth> ¦ doc: fc2d84d550 | (Zoffix Znet)++ (committed using GitHub Web editor) | util/trigger-rebuild.txt

[12:52] <Geth> ¦ doc: Update trigger-rebuild.txt

[12:52] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fc2d84d550

[12:52] <jmerelo> Version changes do not happen so often...

[12:52] <Zoffix> jmerelo: and if you go the module upgrade route, note that you also need to run `rakudobrew rehash` to update binaries shim (and there's a binary included in Pod::To::BigPage)

[12:53] <jmerelo> Zoffix: but wait. So why is trigger-rebuild needed then?

[12:53] <Zoffix> jmerelo: I don't think I have the authority to give sudo access to non-CLA-signed devs... Talk to moritz. It's his box.

[12:53] *** andrzejk_ left
[12:53] <[Coke]> if you're on the box, you can also use the force-update trick at the infra doc URL above.

[12:54] <Zoffix> jmerelo: because updates of the site happen only on new commits (or if you `touch` some trigger file on server) and since there weren't any new commits since last (failed) update, I had to trigger the build again

[12:54] <[Coke]> but either the trigger or force-update forces it to run asap, as opposed to whenever the next commit occurs

[12:54] * [Coke] stops talking and just lets zoffix handle it. :)

[12:55] <jmerelo> [Coke]: let me see if I understand this correctly. 

[12:55] * Zoffix stops talking and let [Coke] handle it

[12:55] <Zoffix> :)

[12:55] <Zoffix> \o

[12:55] *** Zoffix left
[12:56] <jmerelo> You can either edit trigger-update or dome some other magic to trigger updates, but only if you are user in the box, is that correct?

[12:56] <[Coke]> Yes.

[12:56] <jmerelo> That means that I can edit util/trigger-update as much as I want, it's going to do zip. 

[12:56] <jmerelo> (I mean, *I* as in some random guy with no access to the box)

[12:57] <El_Che> Zi Zeñor

[12:57] <[Coke]> ... no, it means that if you touch it, a rebuild will happen.

[12:57] <jmerelo> [Coke]: well it didn't

[12:57] <[Coke]> but that rebuild has nothing to do with the modules installed on the box.

[12:57] <[Coke]> just like if you did a build locally, touching meta6.json doesn't install new versions of modules.

[12:58] <jmerelo> [Coke]: what does it rebuild then?

[12:58] <jmerelo> modules for some random box user that gets triggered when a push is made to master?

[12:59] <jmerelo> [Coke]: which probably means that some modules might be available for actually doing the build, but not serving the pages. Is that correct?

[12:59] *** lizmat joined
[13:00] <jmerelo> so trigger-rebuild rebuilds for the build server, but not the serving-server. that's a global thing, and I need to call the superuser on watch.

[13:00] *** Zoffix joined
[13:01] <Zoffix> jmerelo: there's a cronjob that runs every 5 minutes. It runs this script: https://github.com/perl6/doc/blob/master/util/update-and-sync

[13:01] <Zoffix> jmerelo: the script runs htmlify.p6 and syncs generated HTML pages to the live site

[13:01] <jmerelo> Zoffix: OK. But not pod2onepage, I guess.

[13:02] <Zoffix> jmerelo: this portion makes that shell script run htmlify.p6 only if new commits happened (or force-update file exists): https://github.com/perl6/doc/blob/master/util/update-and-sync#L12-L18

[13:02] <Zoffix> jmerelo: and pod2onepage too

[13:02] <Zoffix> jmerelo: so the trigger-rebuilt commit is just a way to create a new commit to make this portion think there's something new in the site and the site needs to be re-generated: https://github.com/perl6/doc/blob/master/util/update-and-sync#L12-L18

[13:02] <Zoffix> That's it.

[13:03] <Zoffix> And just as you can sit and run htmlify.p6 on your box a thousand times, no modules will be installed.

[13:03] <jmerelo> Zoffix: OK, thanks... Anyway, I need someone to upgrade Pod::To::OneBigPage on the server. 

[13:03] <Zoffix> Same on the build server. Triggering a rebuild, just triggers htmlify.p6 (and whatever else is needed to generate HTML website). It doesn't deal with support infrastructure, like updating modules.

[13:03] <Zoffix> jmerelo: I did that before triggering the rebuild.

[13:04] <Zoffix> It's now on 0.3.3

[13:05] <jmerelo> Zoffix: There are many pushes since yesterday, and still, a single build log. For instance, this one 5 hours ago https://github.com/perl6/doc/commit/b86c6ee320851e4b6b5b2f19a9e9a3f292130040

[13:06] <jmerelo> But still last build log https://docs.perl6.org/build-log/ is stuck at 16:22 yesterday. (don't know the TZ, but still, it was like that this morning)

[13:06] <Zoffix> zoffix@hack:~$ date

[13:06] <Zoffix> Tue May  1 13:06:16 UTC 2018

[13:07] *** Ven`` left
[13:07] <jmerelo> Zoffix: last build was 21 hours ago... right about when I did this commit https://github.com/perl6/doc/commit/82121ec3a7b46559a8abba864177e1b5bd2fe421

[13:08] <jmerelo> Zoffix: so maybe it failed because the 0.3.3 version was not available?

[13:09] <Zoffix> Right, but it's supposed to sync failed build logs

[13:10] <jmerelo> Zoffix: right...

[13:10] <jmerelo> I'm leaving for now. Will be back in 2 hours...

[13:10] * jmerelo heeds the call of his sofa who's crying "Siesta"

[13:11] *** jmerelo left
[13:12] <Zoffix> Must be nice to have culturally-approved daytime naps

[13:17] <Geth> ¦ doc: a822a6de23 | (Will "Coke" Coleda)++ | README.it.md

[13:17] <Geth> ¦ doc: whitespace

[13:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a822a6de23

[13:17] <Geth> ¦ doc: 58277733f8 | (Will "Coke" Coleda)++ | xt/aspell.t

[13:17] <Geth> ¦ doc: ignore non english doc

[13:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/58277733f8

[13:25] <Geth> ¦ doc: 9e8a5eb2ee | (Zoffix Znet)++ (committed using GitHub Web editor) | util/trigger-rebuild.txt

[13:25] <Geth> ¦ doc: Update trigger-rebuild.txt

[13:25] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9e8a5eb2ee

[13:27] *** domidumont left
[13:27] *** zod_ joined
[13:28] *** domidumont joined
[13:30] *** windyhouses joined
[13:31] *** skids joined
[13:31] *** windyhouse left
[13:33] <Geth> ¦ doc: 6f3db2eecf | (Zoffix Znet)++ (committed using GitHub Web editor) | Makefile

[13:33] <Geth> ¦ doc: Fix hang with pod2onepage

[13:33] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6f3db2eecf

[13:40] *** retupmoca joined
[13:40] <Geth> ¦ doc: 7a12dc0fa0 | (Zoffix Znet)++ (committed using GitHub Web editor) | util/trigger-rebuild.txt

[13:40] <Geth> ¦ doc: Write down a copy-pasteable way to trigger a build on box

[13:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7a12dc0fa0

[13:41] <Zoffix> .tell jmerelo so what happened is the pod2bigpage script hangs with --threads option. It hung on the build box and the build just sat there waiting for it (real1078m12.091s). So that's why there were no updated build logs. I reverted the change that added the --threads option to fix the build. To debug the hang, you can just run it locally as `pod2onepage --threads=2 --html -v --source-path=./doc

[13:41] <yoleaux> Zoffix: I'll pass your message to jmerelo.

[13:42] <Zoffix> --exclude=404.pod6,/.git` Hangs with --threads option after outputting CSS/ doesn't hang without it.

[13:42] <Zoffix> .tell The command broke up between lines. It's pod2onepage --threads=2 --html -v --source-path=./doc --exclude=404.pod6,/.git       Hangs with --threads option after outputting CSS/ doesn't hang without it.

[13:42] <yoleaux> Zoffix: I'll pass your message to The.

[13:43] <Zoffix> .tell jmerelo The command broke up between lines. It's pod2onepage --threads=2 --html -v --source-path=./doc --exclude=404.pod6,/.git       Hangs with --threads option after outputting CSS/ doesn't hang without it.

[13:43] <yoleaux> Zoffix: I'll pass your message to jmerelo.

[13:43] *** Zoffix is now known as The

[13:43] *** The is now known as Zoffix

[13:46] <buggable> New CPAN upload: P5getgrnam-0.0.2.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5getgrnam:cpan:ELIZABETH

[13:48] <[Coke]> Zoffix++

[13:51] *** sena_kun left
[13:52] *** sena_kun joined
[13:53] *** Zoffix left
[14:00] *** zakharyas left
[14:00] *** zakharyas joined
[14:01] <zod_> should ruby programmers move to perl6?

[14:03] *** apathor joined
[14:03] *** comborico1611 joined
[14:03] <xq> this page is really nice https://alerts.perl6.org/

[14:04] <xq> I wish it was updated more often

[14:04] *** lizmat left
[14:05] <jnthn> xq: Given it's purpose is to report potential breakages that could impact people's code, I think we'd all like it to be quite rarely updated. ;-)

[14:05] *** zakharyas left
[14:05] <xq> hmm

[14:05] <jnthn> xq: If you're looking for general Perl 6 news, see the Perl 6 Weekly, if you don't already read it :)

[14:06] <Ulti> zod_: depends why they want to move and what they are relying on ruby for

[14:06] <buggable> New CPAN upload: P5built-ins-0.0.13.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5built-ins-0.0.13.tar.gz

[14:07] *** davercc joined
[14:07] <xq> jnthn p6weekly.wordpress.com ?

[14:07] <jnthn> xq: That's the one

[14:07] <Ulti> yeah

[14:08] <Ulti> there is also the sub reddit thats relatively good at keeping up

[14:08] <Ulti> /r/perl6

[14:08] <xq> I am trying to subscribe to its rss feed but everytime I scroll to the bottom of that page to click it, the page auto-loads more posts and the rss link escapes

[14:08] <xq> 10/10 usability 

[14:08] <xq> :D

[14:08] <Voldenet> zod_: everyone should move to perl6

[14:08] <Voldenet> ideally

[14:08] *** retupmoca left
[14:09] *** pilne left
[14:10] <jnthn> zod_: I don't think blanket statements of "language X users should move to language Y" ever make sense, since everyone's situation will be different. It's probably fair to say that Ruby programmers might want to give Perl 6 a look, though. :)

[14:11] *** andrzejk_ joined
[14:14] *** Zoffix joined
[14:15] *** retupmoca joined
[14:16] <Geth> ¦ doc: c3d66be58a | (Will "Coke" Coleda)++ | xt/trailing-whitespace.t

[14:16] <Geth> ¦ doc: OK to check makefile for trailing space

[14:16] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c3d66be58a

[14:16] <Zoffix> xq: here's the URL: https://p6weekly.wordpress.com/feed/   Alternatively, you could sub to http://pl6anet.org/atom.xml which includes the Weekly and a bunch of other Perl 6 blogs. As for alerts.perl6.org, they're meant for "emergency alerts"; basically anything the users can examine to see whether they might encounter any issues when upgrading:

[14:16] <Zoffix> https://rakudo.party/post/Announcing-P6lert-Perl-6-Alerts-Directly-From-Core-Developers

[14:16] <xq> thanks Zoffix I will use the atom link

[14:18] <Zoffix> Filed the problem as https://github.com/perl6/user-experience/issues/21

[14:18] <Zoffix> .tell lizmat If you have any Wordpress theming experience: looks like it's hard to reach RSS feeds for the Weekly: https://github.com/perl6/user-experience/issues/21

[14:18] <yoleaux> Zoffix: I'll pass your message to lizmat.

[14:22] <Zoffix> zod_: we have "Perl 6 from Ruby Nutshell" docs: https://docs.perl6.org/language/rb-nutshell    As for "moving": I tried learning Ruby after learning Perl 6 and was annoyed by it, so from that I'd surmise Ruby devs might find Perl 6 enjoyable :)

[14:34] *** troys joined
[14:34] *** lizmat joined
[14:35] *** lizmat_ joined
[14:35] *** lizmat left
[14:39] *** Zoffix left
[14:41] *** andrzejk_ left
[14:42] *** silug joined
[14:45] *** lizmat_ left
[14:47] *** davercc left
[14:55] <zod_> how are the employment opportunities for perl6?

[14:55] *** Zoffix joined
[14:56] <Zoffix> zod_: well, the language first got released only 2 years ago, so I imagine unless you get to choose your own tech to use, not many.

[14:57] <Zoffix> I choose my own tech, but even then, lots of sites/programs we got are older than 2 years, and we're not gonna spend the resources to rewrite them into Perl 6 even if it'd be nicer to have them in Perl 6.

[14:59] <Zoffix> Which is also why the "Language X devs should move to language Y" statements are a bit weird. It's often a mix of many languages.

[14:59] <Zoffix> (unless you want to be cool and popular and use only the trendiest lang and most fashionable JS framework of the week :P)

[15:00] <[Coke]> Zoffix: which is rakudo-js, of course.

[15:00] <Zoffix> :D

[15:03] *** Ven`` joined
[15:06] *** Ven`` left
[15:16] *** jmerelo joined
[15:18] *** molaf left
[15:22] <Voldenet> it's not true that js devs JS are changing the framework every week

[15:22] <Voldenet> they change it every month though

[15:22] <Voldenet> s/JS//

[15:22] *** molaf joined
[15:22] <Voldenet> rewriting lines on the fly never works well

[15:24] *** domidumont left
[15:25] <xq> is perl6 reference documentation autogenerated? i.e. this page and others https://docs.perl6.org/type/Hash

[15:25] <timotimo> https://github.com/perl6/doc/blob/master/doc/Type/Hash.pod6 - check the source for that site

[15:26] *** lizmat joined
[15:26] <xq> I am curious about how the list of methods on the left is generated

[15:27] <xq> "Routines supplied by class Map"

[15:27] <Voldenet> xq: it is

[15:27] <xq> and down

[15:27] <Zoffix> xq: that part is autogenetated

[15:27] <xq> is this a pod6 feature?

[15:27] <Zoffix> xq: no

[15:27] *** sena_kun left
[15:29] <xq> p6doc genertes it?

[15:30] <Voldenet> https://github.com/perl6/doc/blob/master/htmlify.p6#L382

[15:30] <Voldenet> I think this generates it

[15:30] *** domidumont joined
[15:32] <xq> umm

[15:32] <jmerelo> xq: right, it's generated by htmlify.p6 as Voldenet says.

[15:32] <yoleaux> 13:41Z <Zoffix> jmerelo: so what happened is the pod2bigpage script hangs with --threads option. It hung on the build box and the build just sat there waiting for it (real1078m12.091s). So that's why there were no updated build logs. I reverted the change that added the --threads option to fix the build. To debug the hang, you can just run it locally as `pod2onepage --threads=2 --html -v --source-path=./doc

[15:32] <yoleaux> 13:43Z <Zoffix> jmerelo: The command broke up between lines. It's pod2onepage --threads=2 --html -v --source-path=./doc --exclude=404.pod6,/.git       Hangs with --threads option after outputting CSS/ doesn't hang without it.

[15:32] <xq> so is this thing reusable for a project?

[15:32] <jmerelo> Zoffix: I saw your change. Thanks.

[15:33] *** robertle left
[15:33] <xq> i.e. if I write something in perl6, document it in pod6, will I be able to generate a documentation like this?

[15:33] <xq> or is this just a private docs.perl6.org specific script?

[15:33] *** robertle joined
[15:33] <jmerelo> xq: it's kind of jury-rigged for perl6/doc. It would be nice if that were the case...  It's not private, but there are many things that are specific, and there's no easy way to configure it.

[15:34] <xq> I see

[15:34] <xq> thanks, jmerelo 

[15:34] <jmerelo> xq: it's not even easy to configure it for perl6/doc itself...

[15:34] <jmerelo> xq: depending on what you want to do, you might use Pod::To::Html

[15:34] *** zakharyas joined
[15:34] <jmerelo> xq: and there's a Pod::Htmlify in there.

[15:35] <jmerelo> But the specific part of including all classes up to the one being documented, that's in htmlify.p6

[15:35] <xq> that's a useful feature

[15:35] <xq> very, very useful

[15:36] <jmerelo> xq: please write an issue telling just that and we'll keep it there to see if we get the time or resources to do wo.

[15:40] *** jdoege joined
[15:41] *** jdoege left
[15:41] *** jdoege joined
[15:42] *** araraloren left
[15:42] *** wamba joined
[15:44] <jdoege> Good day, all! Question: Is there a way to have perl6(rakudo) execute some code and then drop you into the REPL?

[15:44] *** natrys joined
[15:46] <jdoege> Also, maybe for jnthn, is there knowledge of if the Comma Supporter Program is going to be available today? #TakeMyMoneyPlease

[15:47] <[Coke]> jdoege: that's an excellent question, I think there must be, but I don't know the invocation off the top of my head.

[15:47] <moritz> maybe ask on stackoverflow?

[15:47] <jmerelo> moritz++ 

[15:47] <timotimo> probably something in Perl6::Compiler, perhaps derived from HLL::Compiler

[15:48] <jdoege> It's something I do with Python to provide tools that use the Python REPL as the interface. I'd like to do the same with Perl6.

[15:48] <jdoege> moritz: I'll ask on Stack Overflow.

[15:49] <jmerelo> jdoege: Perl 5 does have Devel::Trace too, which does more or less the same.

[15:49] <jdoege> I understand the value, but this has been a friendlier venue. :-)

[15:50] <[Coke]> I would have guessed Perl6::Compiler.new.interactive ; but that isn't right.

[15:50] <jmerelo> jdoege: StackOverflow is unwelcoming sometimes... But you can always ask there and post the question here. You'll get the best of both worlds.

[15:52] *** zod_ left
[15:52] <Zoffix> jdoege: are you the same person who was asking about that a couple days ago?

[15:52] <ktown> re StackOverflow, if you know the answer it's easier to ask the right question

[15:52] *** andrzejk_ joined
[15:53] <Zoffix> jdoege: (i.e. do you know about the nqp::getcomp option?)

[15:53] <jdoege> Zoffix: No I am not. This is the first time I am asking.

[15:54] <Zoffix> jdoege: ah, it was asked a few days ago there are a couple of options mentioned: https://irclog.perlgeek.de/perl6/2018-04-28#i_16105200

[15:54] <Zoffix> Notably, using `nqp::getcomp("perl6").interactive` which is an unsupported low-level op. Or spawning another `perl6` with `run $*EXECUTABLE`

[15:54] <jdoege> Zoffix: I'll look into that. Thanks. I'll still ask on SO so others can find the answer and I'll answer my own question if I figure it out.

[15:55] <Zoffix> unsupported = it can change at any time and devs don't guarantee it won't change without notice.

[15:55] <Zoffix> .oO( double negative... )

[15:56] <Zoffix> well, I mean unlike the actual language, it might change without notice :)

[15:57] <Zoffix> jdoege: what do you need this for? Maybe it can be offered as a proper feature

[15:57] <jdoege> Zoffix: :-( It's a really useful feature. It would be great to make it part of the Rakudo spec. Is there a way to suggest that? A command line flag is the easiest way to access this functionality (apart from mandating a call to exit at the end of source which probably isn't desireable.)

[15:57] <Zoffix> jdoege: oh, do you mean you want to just execute some code from STDIN?

[15:58] *** andrzejk_ left
[15:58] <jdoege> Zoffix: I need it for the following: I write a tool but don't want to make a user interface so I just dump the user into the REPL and let them use Rakudo and all the power of Perl6 as an interface.

[15:58] <[Coke]> I don't think it needs to be part of the language, but it would make a great debugger module.

[15:58] <[Coke]> (and that module right now is that npq command)

[15:59] <Zoffix> jdoege: ah, ok. I was gonna suggest `--repl-mode=non-interactive` option, but that's just for evaling code from STDIN

[15:59] <jdoege> Zoffix: I do this with Python, now, and it is really useful.

[15:59] <[Coke]> note that scoping is going to make any variable introspection... wonky.

[15:59] <[Coke]> e.g. perl6 -Mnqp -e '{ my $a = 234; nqp::getcomp("perl6").interactive}' # you can't get at $a easily here in the spawned REPL

[16:00] <jdoege> Coke: yeah, that would be problematic.

[16:01] <timotimo> in general the repl wants a little bit of a rethink, i believe

[16:01] <timotimo> the way we currently handle adding more code is ... pretty bad

[16:03] *** zakharyas left
[16:04] *** mcmillhj left
[16:06] <jmerelo> jdoege: how does Python do it? Maybe what you want is something like Linenoise, the library used there.

[16:07] <jmerelo> timotimo: it shouldn't be too difficult to add completion, for instance. 

[16:07] <Zoffix> jdoege: I think I can hack something up that reaches $a in there... 1min

[16:09] <Voldenet> can't you just use $*a

[16:10] *** Ven`` joined
[16:12] <jdoege> Python does it with a command line option: "python -i <source.py>". Instead of exiting it just leaves you in the REPL at 'main' scope.

[16:14] *** andrzejk_ joined
[16:17] <Zoffix> jdoege: https://gist.github.com/zoffixznet/548274905bc9230c4151e3b7df5dc0f4

[16:17] <yoleaux> 16:11Z <lizmat> Zoffix: I have 0 experience with Wordpress theming experience

[16:17] <Zoffix> jdoege: it uses a couple of nqp ops (and there's no backwards-compatibility/user support offered for NQP), but it works. 

[16:18] <Zoffix> replify takes string with a piece of code you want to run before dropping the user to the REPL

[16:19] <jmerelo> Zoffix: can you turn that into a tiny module? Call it Trace or whatever?

[16:19] <Zoffix> jdoege: note there are a couple of REPL-specific bugs that'd apply to that code ( https://fail.rakudo.party/t/REPL https://github.com/rakudo/rakudo/issues?q=is%3Aopen+is%3Aissue+label%3AREPL ) like custom ops don't survive 

[16:19] <Zoffix> jmerelo: don't got time and don't really want to proliferate nqp-using modules :)

[16:19] <Zoffix> eco: author:zoffix

[16:19] <buggable> Zoffix, Found 48 results: Acme::Anguish, Acme::Anguish, IRC::Client, WWW, CoreHackers::Sourcery. See https://modules.perl6.org/s/author%3Azoffix

[16:19] <Zoffix> got way too many modules already

[16:19] *** zakharyas joined
[16:20] *** mcmillhj joined
[16:22] <jdoege> Zoffix: That seems like it will work! Thanks so much. Do you want to post that to Stack overflow in answer to my question?

[16:23] <Zoffix> jdoege: oh and `my %adverbs;` is currently empty, but that's where command line switches would go. I think you can actually bind it to `nqp::getcomp("perl6").cli-options` and it'll do the trick

[16:23] <Zoffix> m: use nqp; dd nqp::getcomp("perl6").cli-options

[16:23] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «{:setting("RESTRICTED")}␤»

[16:23] <Zoffix> jdoege: I don't use StackOverflow, but feel free to post that as the answer. Just be sure to include a warning that there's no user-support for NQP and the `nqp::*` ops can change at any time without warning.

[16:24] <jdoege> Zoffix: Will do. Thanks again.

[16:25] *** mcmillhj left
[16:29] *** scimon left
[16:30] *** mcmillhj joined
[16:33] <Zoffix> jdoege: as for Comma: (from last week's convo) `<F ROGGS> j nthn: and I'll be able to buy comma next week?" <j nthn> F ROGGS: Not quite that soon, but "sometime in May" is still looking good.`

[16:35] *** cog_ left
[16:36] *** windyhouses left
[16:39] *** HaraldJoerg joined
[16:39] *** Zoffix left
[16:49] <xq> hmm

[16:49] <xq> this is strange

[16:49] *** zakharyas left
[16:50] <xq> m: for <1,2,3> { .say }

[16:50] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «1,2,3␤»

[16:50] <xq> m: for <1, 2, 3> { .say }

[16:50] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «1,␤2,␤3␤»

[16:50] <xq> 1 lines vs 3 lines

[16:51] <retupmoca> m: <thing>.perl.say

[16:51] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «"thing"␤»

[16:51] *** khw joined
[16:51] <retupmoca> m: <more things>.perl.say

[16:51] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «("more", "things")␤»

[16:52] <xq> ah so it's basically like qw

[16:52] <xq> ok then, makes sense

[16:56] *** retupmoca left
[16:56] *** Zoffix joined
[16:56] *** retupmoca joined
[16:57] <Zoffix> xq: it's similar but not the same.

[16:57] <Zoffix> m: dd qw/1 2 3/

[16:57] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «("1", "2", "3")␤»

[16:57] <Zoffix> m: dd <1 2 3>

[16:57] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «(IntStr.new(1, "1"), IntStr.new(2, "2"), IntStr.new(3, "3"))␤»

[16:57] <Zoffix> It makes allomorphs: https://docs.perl6.org/language/glossary#index-entry-Allomorph

[16:58] <Zoffix> m: my \z := set <1 2 3>; say z{1}

[16:58] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «False␤»

[16:58] <Zoffix> Which matters for things that care about object identity as an allomorphic 1 is not the same as just an Int 1 or Str 1

[16:59] *** athenot left
[16:59] <Zoffix> m: say 1 ∈ <1 2 3>

[16:59] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «False␤»

[16:59] <Zoffix> m: say "1" ∈ qw/1 2 3/

[16:59] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «True␤»

[16:59] <Zoffix> m: say 1 ∈ (1, 2, 3)

[16:59] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «True␤»

[16:59] *** athenot joined
[17:02] <Zoffix> m: my $s := anon sub factorial { $^x == 1 ?? 1 !! $x * factorial $x-1 }; $s(5).say

[17:02] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    factorial used at line 1␤␤»

[17:02] * Zoffix was under the impression this would work...

[17:03] <Zoffix> So the *only* thing it does is stick the name to .name attribute?

[17:06] *** jdoege left
[17:07] <Zoffix> yup

[17:09] <Zoffix> m: sub factorial (|) { say "you trippin" }; my $s := anon sub factorial { $^x == 1 ?? 1 !! $x * factorial $x-1 }; $s(5).say

[17:09] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «you trippin␤5␤»

[17:09] <Zoffix> ^_^

[17:09] *** Zoffix left
[17:10] *** HaraldJoerg left
[17:10] *** HaraldJoerg1 joined
[17:11] <jmerelo> whateverable.6lang.org seems to be still down...

[17:12] *** andrzejk_ left
[17:17] *** athenot_ joined
[17:18] *** athenot_ left
[17:19] *** athenot left
[17:19] *** athenot_ joined
[17:22] *** windyhouses joined
[17:28] *** dwarring joined
[17:30] <xq> Why does the list of methods and inherited methods in the left side of page https://docs.perl6.org/type/Hash not include sort ?

[17:30] <xq> I am having trouble finding on that page what exactly %hash.sort does

[17:30] <xq> even though it works

[17:30] <jmerelo> xq: it comes from Cool, possibly

[17:31] <xq> not listed in "Routines supplied by class Cool"

[17:31] <jmerelo> xq: no, Any. And Any and Mu were eliminated from the pages a short time ago.

[17:32] <xq> ok, I see

[17:33] <xq> so .sort is callable on anything? what exactly 1.sort do

[17:33] <xq> m: 123.sort

[17:33] <camelia> rakudo-moar 8cd70d1ee: ( no output )

[17:33] <xq> m: sub { }.sort

[17:33] <camelia> rakudo-moar 8cd70d1ee: ( no output )

[17:33] <xq> <_<

[17:34] <xq> I have tried to parse and understand the %vowels.sort(*.key)>>.kv but now I am even more confused

[17:37] <jmerelo> xq: yep, pretty much

[17:38] <moritz> %vowels.sort does the same as %vowels.pairs.sort

[17:38] <ktown> m: use YAMLish; say save-yaml( "key"=>"value" ) ;

[17:38] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «===SORRY!===␤Could not find YAMLish at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    CompUnit::…»

[17:38] <ktown> m: use YAML; say yaml.dump( "key"=>"value" ) ;

[17:38] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «===SORRY!===␤Could not find YAML at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    CompUnit::Rep…»

[17:39] <xq> < moritz> %vowels.sort does the same as %vowels.pairs.sort

[17:39] <xq> is this documented?

[17:39] *** ktown left
[17:41] *** ktown joined
[17:47] <jmerelo> xq: well, kinda https://docs.perl6.org/type/Any#method_sort

[17:48] <jmerelo> xq: it does not say what happens if they are not Iterables... Makes you wonder why it's so low in the class hierarchy, but, well...

[17:50] *** andrzejk_ joined
[17:50] <xq> hash is iterable according to https://docs.perl6.org/type/Hash#Type_Graph

[17:50] <Geth> ¦ perl6-pod-to-bigpage/master: 7 commits pushed by (JJ Merelo)++

[17:50] <Geth> ¦ perl6-pod-to-bigpage/master: c60cd4489b | For the time being, eliminate reference to threads since it does not work

[17:50] <Geth> ¦ perl6-pod-to-bigpage/master: d07512c700 | Adds another Pod for testing

[17:50] <Geth> ¦ perl6-pod-to-bigpage/master: 54f7e093c4 | Redoing anchors

[17:50] <Geth> ¦ perl6-pod-to-bigpage/master: 78f6929588 | Moving functions to library

[17:50] <Geth> ¦ perl6-pod-to-bigpage/master: f81b358540 | Any extension now allowed. Closes #19

[17:50] <Geth> ¦ perl6-pod-to-bigpage/master: 2b6138c66f | Fixes path conversion, fixes #25

[17:50] <Geth> ¦ perl6-pod-to-bigpage/master: 39f0c0a8d6 | Bumps up version

[17:50] <Geth> ¦ perl6-pod-to-bigpage/master: review: https://github.com/perl6/perl6-pod-to-bigpage/compare/0d2e0e0c1c1c...39f0c0a8d682

[17:51] <xq> but what exactly happens on %hash.sort is not clear at all

[17:52] *** andrzejk_ left
[17:55] <ktown> xq: it coerces the hash to a list of pairs and sorts the key of the pairs

[17:55] *** athenot_ left
[17:55] *** athenot joined
[17:55] <Geth> ¦ doc: 56292752d1 | (JJ Merelo)++ | 2 files

[17:55] <Geth> ¦ doc: Bumps up version of Pod::To::OneBigPage

[17:55] <Geth> ¦ doc: 

[17:55] <Geth> ¦ doc: Which should get all good and fixed #1980 when correctly deployed.

[17:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/56292752d1

[17:56] <jmerelo> moritz: There's a new version of Pod::To::OneBigPage

[17:56] <jmerelo> moritz: can someone please get the server download it?

[17:56] *** Zoffix joined
[17:57] <moritz> jmerelo: and can give you a shell account if you want

[17:57] <Zoffix> xq: would you improve the docs, to make it clear what it does? https://github.com/perl6/doc/blob/master/doc/Type/Any.pod6#L131-L147

[17:57] <ktown> xq: and %hash.sort collapsed deeper nested hash

[17:57] <Zoffix> jmerelo: what was the reasoning for removal of Any & Mu methods from individual pages?

[17:58] <jmerelo> moritz: I shouldn't need to do this so often... 

[17:58] <Zoffix> It kinda sucks that unless you most objects inherit from Any/Mu you wouldn'

[17:58] <Zoffix> It kinda sucks that unless you most objects inherit from Any/Mu you wouldn't know a lot of the methods are available

[17:58] <jmerelo> Zoffix: this issue https://github.com/perl6/doc/issues/1916

[17:58] <Zoffix> Especially as in the case above, where the user sees .sort being called on a Hash object, yet the Hash docs don't mention sort anywhere.

[17:58] <xq> Zoffix I would if I knew what was happening

[17:59] *** athenot left
[17:59] <xq> right now the only sources of information is, 1) call it and investigate results with .WHAT etc 2) guys said on irc

[17:59] <xq> probably not the best basis to write documentation on

[17:59] *** athenot joined
[18:00] *** aindilis` left
[18:00] <Zoffix> xq: %hash.sort is equivalent to %hash.sort(*.key)

[18:01] *** aindilis joined
[18:01] <jmerelo> The issue asked for removal of Cool, Any & Mu. And I would add Exception. And I kinda agree with that. You have to jump over a lot of Mu/Any stuff to get to the interesting bits, plus Mu and Any stuff are everywhere, muddling results in search engines

[18:01] <Zoffix> jmerelo: what do you mean by "jump over"?

[18:02] <jmerelo> Zoffix: scroll down. Point is, there must be a balance between letting people know what a class does, and physically inserting all the docs for that class in its description.

[18:03] <Zoffix> jmerelo: why?

[18:03] <Zoffix> jmerelo: why should the documentation omit documention for a class?

[18:04] <jmerelo> Zoffix: it does not. There's the class graph, which includes all the inheritance graph

[18:04] <Zoffix> jmerelo: why does the user need to be burdened with that?

[18:05] <jmerelo> Zoffix: why does the user need to be burdened with 20Ks of documentation for other classes in every single page?

[18:05] <jmerelo> Zoffix: repeated documentation, at that?

[18:05] <Zoffix> jmerelo: there are many solutions available and not all of them include making life difficult for the most vulnerable class of readers: those who don't know the type hierarchy or how the docs site is structured. For example, there's nothing to jump over on most desktop devices: https://i.imgur.com/Z62C0R9.png

[18:06] <jmerelo> Zoffix: I would have loved to have those solutions discussed in that issue.

[18:06] <jmerelo> Zoffix: or here, for that matter.

[18:07] <jmerelo> We could just eliminate Mu, for instance. Still, Any has got lots of functions, many of which will be useless in some cases. 

[18:08] <Zoffix> jmerelo: you just asked another question instead of answering mine. But I can give you an answer: because xq above would've found the Hash.sort docs.

[18:08] <jmerelo> See above when someone asks about 1.sort. You can do that. And before this change, you could see "sort" in "Num". 

[18:09] <jmerelo> Zoffix: as well as Num.sort and NumStr.sort and EverySingleClassOutThere.sort

[18:09] <jmerelo> With the self same description, besides.

[18:09] <tobs> s: Hash, 'sort'

[18:09] <SourceBaby> tobs, Something's wrong: ␤ERR: Type check failed in binding to parameter '&code'; expected Callable but got Method+{is-nodal} (Method+{is-nodal}.new)␤  in sub do-sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 45␤  in sub sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 36␤  in block <unit> at -e line 

[18:10] <jmerelo> Saying "if it's iterable, well, you can sort. If it's not, we keep mum"

[18:10] <jmerelo> So say you're in Num and you read "Sorts iterables with cmp or given code object and returns a new Seq. Optionally, takes a Callable as a positional parameter, specifying how to sort." 

[18:10] <jmerelo> In what possible way is that helpful?

[18:10] <Zoffix> s: %, 'sort', \|()

[18:10] <SourceBaby> Zoffix, Something's wrong: ␤ERR: Could not find candidate that can do \(())␤  in sub sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 32␤  in block <unit> at -e line 6␤␤

[18:11] <Zoffix> s: %, 'sort', \()

[18:11] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/8cd70d1ee/src/core/Map.pm6#L92

[18:11] <Zoffix> jmerelo: see above.

[18:12] <jmerelo> As you say there are many solutions, and in this particular case, I would put sort in Iterable, which is not excluded, with context-specific text to make it really usable.

[18:13] <jmerelo> p6: say 3.sort

[18:13] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «(3)␤»

[18:13] <jmerelo> Zoffix: see above

[18:13] <Zoffix> jmerelo: but it's not a method provided by Iterable role. It's a method provided by Any class and is inherited by Hash class

[18:14] <jmerelo> Zoffix: ... a method that does not mention what happens if it's applied to something that is not Iterable. And we intend the documentation to be helpful to newcomers. That's why I was proposing this particular solution.

[18:15] <Zoffix> jmerelo: wouldn't fixing documentation of Any.sort be the right solution here instead of removing it from all classes?

[18:17] <jmerelo> Zoffix: removing it from all classes was the solution to that issue. Putting that particular thing somewhere else would be a solution to this particular case.

[18:17] *** mcmillhj left
[18:18] *** lindylex joined
[18:19] <lindylex> I am tring to execute a function X amount of time with using a loop.  This is what I have tried.  https://pastebin.com/i0SEvsbu  It only executes once.

[18:20] *** sauvin left
[18:21] <Voldenet> lindylex: you are evaluating greet() once

[18:21] <Zoffix> lindylex: the operator is two x: xx

[18:22] <Zoffix> lindylex: single `x` just calls code and uses the return value as a string repeated $xTimes times

[18:22] <Voldenet> oh

[18:23] *** andrzejk_ joined
[18:23] <Geth> ¦ doc: 7faaaf9054 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Map.pod6

[18:23] <Geth> ¦ doc: Document Map.sort

[18:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7faaaf9054

[18:23] <synopsebot> Link: https://doc.perl6.org/type/Map

[18:24] <lindylex> Zoffix : Thanks this worked https://pastebin.com/CNaPf18W

[18:24] <Zoffix> cool

[18:25] *** wamba left
[18:25] <jmerelo> Zoffix: that's an excellent solution. Thanks.

[18:25] <jmerelo> Zoffix: if you find any other functions that should be documented that way, just raise an issue and I'll try to add them in the most suitable place in the class hierarchy.

[18:29] *** wamba joined
[18:31] *** jmerelo left
[18:31] *** mcmillhj joined
[18:32] *** Ven`` left
[18:33] *** mcmillhj_ joined
[18:36] *** Ven`` joined
[18:40] *** jdoege joined
[18:41] *** comborico1611 left
[18:42] *** comborico1611 joined
[18:43] *** lindylex left
[18:50] *** jdoege left
[18:51] <Geth> ¦ doc: f276531657 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Map.pod6

[18:51] <Geth> ¦ doc: Fix method name in definition

[18:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f276531657

[18:51] <synopsebot> Link: https://doc.perl6.org/type/Map

[18:51] *** domidumont left
[18:54] *** Zoffix left
[18:55] *** andrzejk_ left
[18:56] <TimToady> m: my $s := anon sub factorial { $^x == 1 ?? 1 !! $x * samewith $x-1 }; $s(5).say

[18:56] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «120␤»

[18:56] <buggable> New CPAN upload: Font-FreeType-0.0.9.tar.gz by WARRINGD http://modules.perl6.org/dist/Font::FreeType:cpan:WARRINGD

[18:59] *** ChoHag joined
[19:01] *** andrzejk_ joined
[19:04] *** cog_ joined
[19:05] <retupmoca> should I move my modules from p6c over to CPAN?

[19:06] <ktown> m: my %h = :x(${"1" => ${:b(1)}}), :c(${"2" => ${:y(1)}}), :a(${"3" => ${:z(1)}}) ; say %h.sort ;

[19:06] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «(a => {3 => {z => 1}} c => {2 => {y => 1}} x => {1 => {b => 1}})␤»

[19:06] <retupmoca> or does it not matter where they are right now?

[19:06] <ktown> m: my %h = :x(${"1" => ${:b(1)}}), :c(${"2" => ${:y(1)}}), :a(${"3" => ${:z(1)}}) ; for %h.sort -> (:$key,:$value) {say "$key : $value ", $value ; }

[19:06] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «a : 3   z       1 {3 => {z => 1}}␤c : 2 y       1 {2 => {y => 1}}␤x : 1 b       1 {1 => {b => 1}}␤»

[19:06] <timotimo> it doesn't yet matter

[19:06] <timotimo> each has benefits

[19:07] <ktown> note to self do not use a hash in sting interpolation 

[19:09] <retupmoca> ok, I'll probably leave them be for now

[19:09] <retupmoca> unless I get requests for stronger versioning

[19:11] <timotimo> aye, stronger versioning is one way the cpan one is better

[19:12] <ktown> m: my %h = :x(${"1" => ${:b(1)}}), :c(${"2" => ${:y(1)}}), :a(${"3" => ${:z(1)}}) ; for %h.sort -> (:$key,:%value) {say "$key : %value {%value} ", %value ; }

[19:12] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «a : %value 3    z       1 {3 => {z => 1}}␤c : %value 2  y       1 {2 => {y => 1}}␤x : %value 1  b       1 {1 => {b => 1}}␤»

[19:12] *** skids left
[19:19] *** darutoko left
[19:29] *** lizmat left
[19:36] *** comborico joined
[19:38] <ktown> set theme fear2

[19:41] *** aindilis left
[19:43] *** zakharyas joined
[19:53] <ktown> m: my %h = :x(${"1" => ${:b(1)}}), :c(${"2" => ${:y(1)}}), :a(${"3" => ${:z(1)}}) ; for %h.sort -> (:$key,:%value) {say "$key : %value {%value.keys} ", %value ; }

[19:53] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «a : %value 3 {3 => {z => 1}}␤c : %value 2 {2 => {y => 1}}␤x : %value 1 {1 => {b => 1}}␤»

[19:58] *** skids joined
[20:03] *** aindilis joined
[20:12] *** andrzejk_ left
[20:14] *** molaf left
[20:15] *** pmurias joined
[20:16] *** zakharyas left
[20:17] *** zakharyas joined
[20:28] *** comborico left
[20:32] *** wamba left
[20:39] *** robertle left
[20:41] *** mcmillhj_ left
[20:57] *** zakharyas left
[21:05] *** skids left
[21:08] *** xiaomiao is now known as bonsaikitten

[21:13] <ktown> 8

[21:13] *** HaraldJoerg1 left
[21:18] *** zachk joined
[21:18] *** zachk left
[21:18] *** zachk joined
[21:23] *** shareable6 joined
[21:23] *** ChanServ sets mode: +v shareable6

[21:26] <AlexDaniel> .tell jmerelo ah, oops! Yes, fixed now, sorry. Next time ping me directly please.

[21:26] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[21:26] *** mcmillhj left
[21:26] *** Ven`` left
[21:26] *** retupmoca left
[21:27] <AlexDaniel> .tell jmerelo if you're wondering why that happened, it's because *ables fail to write some precomp files… I know how to fix that though!

[21:27] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[21:30] *** Rawriful joined
[21:31] *** mcmillhj joined
[21:36] *** mcmillhj left
[21:43] *** mcmillhj joined
[21:47] *** mcmillhj left
[21:56] *** mcmillhj joined
[21:57] *** dct joined
[22:00] *** mcmillhj_ joined
[22:02] *** mcmillhj left
[22:05] *** mcmillhj_ left
[22:10] *** comborico1611_ joined
[22:11] *** mcmillhj joined
[22:14] *** Ven`` joined
[22:15] *** mcmillhj left
[22:22] *** pmurias left
[22:28] *** mcmillhj joined
[22:29] <ingy> perl -e 'print <<FOO;' -e '  xxx' -e '    yyy' -e 'FOO'   # :)

[22:29] <ingy> perl6 -e 'print q:to/FOO/;' -e '  xxx' -e '    yyy' -e 'FOO'   # :(

[22:32] *** mcmillhj_ joined
[22:32] *** mcmillhj left
[22:33] <comborico1611_> Any emacs users here?

[22:34] <ingy> gave it up in 2002

[22:34] <ingy> ctl-x ctl-c

[22:35] <comborico1611_> Haha

[22:35] <comborico1611_> Whatcha using now?

[22:35] <ingy> notepad

[22:35] <comborico1611_> Oh.

[22:35] <ingy> j/k, vim

[22:36] <comborico1611_> I thought you meant notepad++

[22:38] *** pilne joined
[22:39] *** mcmillhj joined
[22:41] *** athenot_ joined
[22:41] *** athenot left
[22:44] *** mcmillhj left
[22:45] <tobs> ingy: that doesn't work in the REPL either. You can write a multiline heredoc (all at once) from your shell into perl6.

[22:47] <tobs> but that's hard to do in a one-liner

[22:49] <AlexDaniel> comborico1611: yes

[22:50] *** jferrero_ left
[22:55] <ingy> tobs: I was just pointing out that multiple -e lines should probably be concatenated before compilation starts

[22:55] <ingy> like in perl5

[22:56] <ingy> (I'm assuming(

[22:58] <ingy> one liners like this totally fail for python and node

[22:58] <ingy> ruby gets it right

[22:58] *** mcmillhj joined
[22:58] <ingy> I'm working on a compiler for a language, and there are useful one-liners that need at least 2 lines

[22:59] <ingy> and decided to use multiple -e lines for that

[22:59] <jnthn> ingy: Hmm, my guess was that they were being concatenated but not with newlines between them

[22:59] <ingy> and was pleased to note the p5 gets it right

[23:00] *** Zoffix joined
[23:01] <comborico1611_> AlexDaniel: Yes what?

[23:01] <AlexDaniel> e: run ‘perl6’, ‘-e’, ‘dd @*ARGS’, ‘-e’, ‘say 50’

[23:01] <evalable6> AlexDaniel, rakudo-moar 8cd70d1ee: OUTPUT: «Array @ARGS = ["-e", "say 50"]␤»

[23:01] <ingy> perl6 -e 'say "foo' -e ' bar";'

[23:02] <AlexDaniel> ingy: ↑ this is what it does

[23:02] <comborico1611_> AlexDaniel: Ah, emacs users.  So you using 25 or 24?  

[23:02] <AlexDaniel> comborico1611_: yes, I use emacs

[23:02] <ingy> ugh

[23:02] <AlexDaniel> comborico1611: 25

[23:02] <comborico1611_> Thanks!

[23:02] *** mcmillhj left
[23:03] *** skids joined
[23:04] *** Herby_ joined
[23:04] <Herby_> o/

[23:04] <jnthn> AlexDaniel: Oh...right.

[23:05] <ingy> compate this: node -e 'console.log(process.argv)' -e 'console.log(50)'

[23:05] <ingy> to this: coffee -e 'console.log(process.argv)' -e 'console.log(50)'

[23:05] <ingy> p6 acts like coffee

[23:06] <ingy> node just acts dumb

[23:06] * comborico1611_ timing installation of Rakudo-star-2018.01

[23:07] <Zoffix> ingy: why not just write it on multiple lines?

[23:07] <Zoffix> without closing `'`

[23:07] <Zoffix> https://i.imgur.com/IUzL5HV.png

[23:08] <ingy> python -c 'import sys; print(sys.argv)' -c 'print(50)'

[23:08] <ingy> ['-c', '-c', 'print(50)']

[23:08] <ingy> Zoffix: what part of *one-liner* don't you...

[23:08] <ingy> sorry :)

[23:09] <AlexDaniel> Zoffix: bonus trick in bash: ctlr+x ctrl+e lets you edit commands in your favorite text editor

[23:09] *** Mithaldu left
[23:09] <AlexDaniel> (which is extremely useful if you have multiline stuff)

[23:10] *** mcmillhj joined
[23:12] <AlexDaniel> heh, you have to enable that explicitly in zsh…

[23:12] * AlexDaniel ♥ readline

[23:15] *** mcmillhj left
[23:16] <AlexDaniel> or is it a bash feature? Not sure

[23:16] <ingy> I once did some serious hacking in readline https://github.com/ingydotnet/live-demo/blob/master/lib/live-demo.bash

[23:16] <ingy> that was a deep dive into readline guts

[23:17] *** Zoffix left
[23:17] <AlexDaniel> ingy: why [ ] if you're using bash anyway?

[23:17] *** lex joined
[23:17] <ingy> ?

[23:17] *** lex is now known as Guest94289

[23:18] *** Ven`` left
[23:20] <ingy> you mean instead of [[ ]]

[23:20] <AlexDaniel> yeah

[23:20] <ingy> I was younger then

[23:20] <AlexDaniel> also you should try https://www.shellcheck.net/

[23:20] <ingy> use it every day

[23:21] <AlexDaniel> :)

[23:21] <ingy> it's the best excuse for Haskell to exist :)

[23:21] *** todd_ joined
[23:21] *** Mithaldu joined
[23:21] <ingy> I found heredoc bugs in shellcheck

[23:22] <todd_> HI All.  I need to "mooch" a question.  I am trying to do a regex removed everything after the final "-"  

[23:22] <todd_> perl6 -e 'my $x="abc-def-hij"; $x ~~ s/\-$//; say $x;'

[23:22] <todd_> desired result is "abc-def"

[23:24] <AlexDaniel> m: my $x="abc-def-hij"; $x ~~ s/‘-’<-[-]>+$//; say $x;

[23:24] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «abc-def␤»

[23:25] <todd_> Thank you!

[23:25] <AlexDaniel> m: my $x="abc-def-"; $x ~~ s/‘-’<-[-]>+$//; say $x;

[23:25] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «abc-def-␤»

[23:25] <AlexDaniel> m: my $x="abc-def-"; $x ~~ s/‘-’<-[-]>*$//; say $x;

[23:25] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «abc-def␤»

[23:26] <ingy> AlexDaniel: https://gist.github.com/ingydotnet/7b23eb050eb492e125686f675a6c8c41

[23:26] <ingy> even pygments gets it right ;)

[23:27] *** mcmillhj joined
[23:28] *** Guest94289 left
[23:29] <AlexDaniel> m: my $x = q:to｢FOO｣;␤  xx␤    yy␤  FOO␤ dd $x;

[23:29] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «Str $x = "xx\n  yy\n"␤»

[23:29] <AlexDaniel> ingy: notice how “xx” is not indented

[23:29] <AlexDaniel> m: my $x = q:to｢FOO｣;␤  xx␤    yy␤FOO␤ dd $x;

[23:29] <camelia> rakudo-moar 8cd70d1ee: OUTPUT: «Str $x = "  xx\n    yy\n"␤»

[23:29] <AlexDaniel> but now it is

[23:29] <AlexDaniel> it's a feature, as far as I can tell

[23:30] <AlexDaniel> ingy: assuming that you imply that perl 6 gets it worng

[23:30] <AlexDaniel> yeah… worng :)

[23:30] <ingy> shellcheck

[23:30] <ingy> shellcheck barfs on that gist

[23:30] <AlexDaniel> oh :O

[23:30] <AlexDaniel> indeed

[23:30] <ingy> I was going to try and patch it

[23:31] <todd_> what does `<-[-]>+$` and `<-[-]>$` do?

[23:31] <ingy> but then like everything I do with Haskell, I gave up

[23:31] <ingy> I wonder if I ever reported it...

[23:31] <todd_> perl6 -e 'my $x="screws/nuts/bolts/washers"; $x ~~ s|‘/’<-[/]>+$||; say $x;' screws/nuts/bolts

[23:32] <AlexDaniel> todd_: <[abc]> will match a b or c, <-[abc]> will match anything but a b and c

[23:32] <AlexDaniel> todd_: so <-[-]> is anything but -

[23:32] <todd_> cool!  Thank you!

[23:32] *** mcmillhj left
[23:32] <AlexDaniel> todd_: and + or * is just repeated more than once (where * could be 0 times also)

[23:33] <todd_> doesn't work without the `+`  $ perl6 -e 'my $x="screws/nuts/bolts/washers"; $x ~~ s|‘/’<-[/]>$||; say $x;' screws/nuts/bolts/washers

[23:34] <AlexDaniel> ingy: can you ticket it? https://github.com/koalaman/shellcheck/issues

[23:34] <ingy> this is me going off on coffeescript (my favorite syntax) for not having heredocs: https://github.com/jashkenas/coffeescript/issues/3299

[23:34] <TimToady> todd_: needs the * instead of the +

[23:34] <AlexDaniel> ingy: I searched for SC1039 but nothing comes up, I think you're the first one to notice :)

[23:34] <todd_> $ perl6 -e 'my $x="screws/nuts/bolts/washers"; $x ~~ s|‘/’<-[/]>*$||; say $x;' screws/nuts/bolts

[23:34] <todd_> awesome

[23:35] <ingy> AlexDaniel: https://github.com/koalaman/shellcheck/issues/1050 related and open

[23:37] *** rindolf left
[23:37] <ingy> AlexDaniel: ok I'll go for it

[23:39] *** w_richard_w joined
[23:42] * comborico1611_ clocks full Rakudo Star installation (with testing) at 36 minutes on 3 ghz AMD and 8 gigs RAM

[23:42] <ingy> AlexDaniel: interestingly bash doesn't even require the ending token

[23:42] <ingy> heredoc just goes to eof

[23:45] *** mcmillhj joined
[23:47] *** todd_ left
[23:49] *** mcmillhj left
[23:52] <ingy> AlexDaniel: actually, bash fixed that

[23:52] <ingy> I was using a crappy old mac bash

[23:53] <ingy> the missing ending still works but you get a warning now

[23:53] <ingy> with a modern bash

[23:53] <ingy> AlexDaniel: https://github.com/koalaman/shellcheck/issues/1198

[23:54] <AlexDaniel> ingy++

[23:54] <ingy> another 7 minutes of my life has expired

[23:54] <AlexDaniel> :)

[23:55] *** comborico1611 left
[23:55] *** mcmillhj joined
