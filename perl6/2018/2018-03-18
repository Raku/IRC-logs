[00:00] <El_Che> I mostly do this: https://askubuntu.com/questions/690703/save-current-terminal-scrollback-to-file (no styleful, but not often needed so far)

[00:00] <Geth> ¬¶ rakudo.org: fa72f3a16f | (Zoffix Znet)++ | 2 files

[00:00] <Geth> ¬¶ rakudo.org: Fix some links

[00:00] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/fa72f3a16f

[00:02] <AlexDaniel> Does not support bitmap fonts‚Ä¶ NEXT!

[00:03] <El_Che> it has great utf8 cats screenshots, though

[00:03] <TEttinger> heh, bitmap fonts. for when 1986 was only yesterday

[00:04] <AlexDaniel> TEttinger: yeah, and when text didn't look like smudgy üí© I guess

[00:05] <TEttinger> I use unifont for my IRC font, and it is a bitmap font as a TTF

[00:05] <TEttinger> it can bold by doing that, for example

[00:05] <Geth> ¬¶ rakudo.org: bcf02471ce | (Zoffix Znet)++ | conf.conf

[00:05] <Geth> ¬¶ rakudo.org: Use different binaries dir on production

[00:05] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/bcf02471ce

[00:06] <AlexDaniel> yeah, unifont. I know how that looks. :S

[00:06] <El_Che> on my gnomer-terminal setup your emoji looks like a hot cup of Java

[00:06] <TEttinger> AlexDaniel: you should look into better-hinted fonts

[00:06] <TEttinger> envy code r is a good one but hasn't been updated in a while. I love iosevka

[00:06] <AlexDaniel> TEttinger: maybe, yes. Any suggestions?

[00:07] <TEttinger> iosevka isn't always hinted the best, BUT you can customize the debatable letter forms

[00:07] <TEttinger> like som people prefer variants on @

[00:07] <TEttinger> or 0 with / vs. 0 with dot vs. 0 with nothing

[00:07] <TEttinger> l with curve, l with top hook, etc.

[00:08] *** neilb left
[00:09] *** BenGoldberg joined
[00:09] <TEttinger> at lighter weights it is a little smudgy, but at least it has weights to choose :) https://be5invis.github.io/Iosevka/

[00:09] <TEttinger> if you use the very high weights, it may seem more solid

[00:10] <AlexDaniel> that's not good enough

[00:10] <AlexDaniel> but envy code r looks about right

[00:11] <TEttinger> yeah, it's very well hinted

[00:11] <AlexDaniel> TEttinger: so you're saying that all I need is a better-hinted non-bitmap font? Mind blowing‚Ä¶ but it seems like you're right

[00:12] <TEttinger> I think so yeah. the main problem is hinting is HARD

[00:13] <AlexDaniel> well, it's easy if you‚Ä¶ ok-ok I'll shut up :D

[00:15] <TEttinger> https://www.typotheque.com/articles/hinting

[00:15] <TEttinger> they claim 99% of all fonts are unhinted

[00:16] <TEttinger> also that verdana is one of the most expensive fonts produced, because every size from 9 to 60 pt is manually hinted for every char

[00:17] <El_Che> that doesn't scale!

[00:18] <TEttinger> past 60 point you don't need pixel resolution to be that fine

[00:18] <TEttinger> but yeah verdana is a large effort

[00:19] <TEttinger> probably the "smudgy" windows 7 fonts like consolas are optimized for cleartype and display poorly on other OS' renderers

[00:19] *** pierre joined
[00:20] <AlexDaniel> ‚ÄúNewer technology has made black and white hinting obsolete and permitted onscreen results that are much truer to the original letterforms.‚Äù

[00:20] <AlexDaniel> not sure I understand that

[00:20] <El_Che> my os gets verdana through microsft

[00:20] <AlexDaniel> non-black&white rendering is basically the definition of smudginess

[00:21] <TEttinger> you can have curves on some fonts that are exactly halfway between two chars, but they shouldn't render at halfway to the background color

[00:21] *** Ben_Goldberg joined
[00:21] <TEttinger> generally most of the smudgy appearance comes from large gray areas where there shouldn't be

[00:21] *** Zoffix left
[00:21] *** BenGoldberg left
[00:22] <TEttinger> a single pixel of dark gray for a black font on white BG may improve the suggestion of a curve, but 4 is too many for sure

[00:22] *** Ben_Goldberg is now known as BenGoldberg

[00:22] <AlexDaniel> my point is that there shouldn't be any at all. It's OK if you're rendering emoji or something, but pixelated normal text is just easier on the eyes‚Ä¶ or so I think

[00:23] <TEttinger> it can be, yeah. envy code r uses non-B&W colors very rarely, and looks fine with black and white only, surprisingly

[00:23] <AlexDaniel> maybe not that important if dealing with high-dpi display, but I don't

[00:24] <El_Che> TEttinger: I am reading what you write, and typing this on my gnome-terminal (irssi) using the default font "Monospace Regular" and it looks fine

[00:24] *** pierre left
[00:24] <TEttinger> everyone has aesthetic preferences

[00:24] <El_Che> TEttinger: I am kind of picky for stuff like that

[00:24] <TEttinger> I should link you to pages on bad kerning and upside down n

[00:25] <El_Che> I just don't see it

[00:25] <TEttinger> does that mean you aren't picky?

[00:25] <El_Che> that the logical conclusion

[00:25] <El_Che> I am easier-going that I suspect :)

[00:27] <AlexDaniel> ‚ÄúThese files are free to download and use from damieng.com but CAN NOT be redistributed either by other web sites or be included in your package, download, product or source repository at this time.‚Äù

[00:27] <El_Che> I remember leaving gnome 1.* for its awful textrending and moving to KDE

[00:27] <AlexDaniel> OK next‚Ä¶

[00:27] <TEttinger> haha yeah that license is weird

[00:27] <TEttinger> he didn't want the beta as final

[00:27] <TEttinger> but hasn't released a final 11 years later

[00:27] <El_Che> (and there is something in QT that I dislike, without knowing exactly what)

[00:27] <TEttinger> https://www.facebook.com/UpsideDownN/

[00:28] <TEttinger> I can't find the original page :(

[00:28] *** BenGoldberg left
[00:29] <TEttinger> oh man, the reddit page on bad kerning made their kerning as bad as possible https://www.reddit.com/r/badkerning/

[00:29] <AlexDaniel> kerming was the subreddit I think

[00:29] <El_Che> it can not be unseen

[00:30] <AlexDaniel> sorry, keming

[00:30] <AlexDaniel> https://www.reddit.com/r/keming/

[00:32] <El_Che> releasable6: status

[00:32] <releasable6> El_Che, Next release will happen when it's ready. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Changelog for this release was not started yet

[00:32] <releasable6> El_Che, Details: https://gist.github.com/9c1009e3b034fc3923a92ab9b2985261

[00:32] <AlexDaniel> when moarvm release is ready

[00:33] <El_Che> nice. I will be dropping fedora 25 on this run. It's EOL

[00:33] <El_Che> that will save the travis people a few cents :)

[00:36] <El_Che> AlexDaniel: is moarvm released by an other team?

[00:36] <AlexDaniel> El_Che: yes

[00:36] <El_Che> pmichaud?

[00:36] <AlexDaniel> samcv

[00:37] <El_Che> thanks to you both, then

[00:37] <AlexDaniel> yes, samcv++ for sure

[00:37] <AlexDaniel> and jnthn++ for doing so many releases before samcv++ :)

[00:45] <AlexDaniel> hm, so Alacritty does gpu rendering, supports bitmap fonts but does not have scrollback because of course you're using tmux

[00:53] *** markong left
[00:56] *** aborazmeh joined
[00:56] *** aborazmeh left
[00:56] *** aborazmeh joined
[01:14] <Geth> ¬¶ rakudo.org: 30f74cfae1 | (Zoffix Znet)++ | conf.conf

[01:14] <Geth> ¬¶ rakudo.org: Fix typo

[01:14] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/30f74cfae1

[01:29] *** ifim joined
[01:45] *** araraloren joined
[01:46] <araraloren> morning :)

[01:53] *** eckhardt joined
[02:00] <Geth> ¬¶ rakudo.org: 77f4b86910 | (Zoffix Znet)++ | templates/bugs.html.ep

[02:00] <Geth> ¬¶ rakudo.org: List RT shortcuts

[02:00] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/77f4b86910

[02:16] *** pierre joined
[02:16] *** tt_ left
[02:16] *** tt joined
[02:17] <Geth> ¬¶ rakudo.org: 55f8969d58 | (Zoffix Znet)++ | apache.conf

[02:17] <Geth> ¬¶ rakudo.org: Add apache config with all the redirects

[02:17] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/55f8969d58

[02:20] *** pierre left
[02:31] <Geth> ¬¶ rakudo.org: 353aab43f8 | (Zoffix Znet)++ | post/announce-mac-os-x-installer-for-rakudo-star-2016-04.md

[02:31] <Geth> ¬¶ rakudo.org: Fix 404 in blog post

[02:31] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/353aab43f8

[02:37] <Geth> ¬¶ rakudo.org: 848a6b07a6 | (Zoffix Znet)++ | apache.conf

[02:37] <Geth> ¬¶ rakudo.org: More rewrites

[02:37] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/848a6b07a6

[02:38] *** Zoffix joined
[02:41] <daemon> wb Zoffix :)

[02:43] <Geth> ¬¶ rakudo.org: 213a388d42 | (Zoffix Znet)++ | 2 files

[02:43] <Geth> ¬¶ rakudo.org: Try to hide easter more

[02:43] <Geth> ¬¶ rakudo.org: 

[02:43] <Geth> ¬¶ rakudo.org: Stupid Chrome still flashes it on load

[02:43] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/213a388d42

[02:44] <Zoffix> \o

[02:46] *** ilbot3 left
[02:51] *** FROGGS_ joined
[02:55] *** FROGGS left
[02:58] *** ilbot3 joined
[02:58] *** ChanServ sets mode: +v ilbot3

[03:01] <Geth> ¬¶ rakudo.org: 28e9f4d76c | (Zoffix Znet)++ | 4 files

[03:01] <Geth> ¬¶ rakudo.org: Try another hack for chrome--

[03:01] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/28e9f4d76c

[03:02] <Zoffix> ZofBot: Zoffix: 1; Stupid browser: 0

[03:02] <ZofBot> Zoffix, And take a ladder from Father‚Äôs van and climb up onto the roof, and when get to the edge of the roof put the ladder across the gap and climb to the next roof, because in a dream you are allowed to do anything

[03:02] <Zoffix> ZofBot: do you dream of electric sheep?

[03:02] <ZofBot> Zoffix, 41 csys = 2408

[03:02] <Zoffix> I'll take it as a yes.

[03:08] <Geth> ¬¶ rakudo.org: e9c13b0071 | (Zoffix Znet)++ | update-rakudo.org.sh

[03:08] <Geth> ¬¶ rakudo.org: Add auto-restart-from-repo script

[03:08] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/e9c13b0071

[03:22] *** pierre joined
[03:24] *** AlexDaniel left
[03:27] *** pierre left
[03:28] *** aborazmeh left
[03:33] *** vike left
[03:35] <Geth> ¬¶ rakudo.org: f477146fac | (Zoffix Znet)++ | post/announce-rakudo-star-release-2018-01.md

[03:35] <Geth> ¬¶ rakudo.org: Add announcement for 2018.01 release

[03:35] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/f477146fac

[03:36] <Geth> ¬¶ rakudo.org: 023a7f7940 | (Zoffix Znet)++ | post/announce-rakudo-star-release-2018-01.md

[03:36] <Geth> ¬¶ rakudo.org: Revert "Add announcement for 2018.01 release"

[03:36] <Geth> ¬¶ rakudo.org: 

[03:36] <Geth> ¬¶ rakudo.org: This reverts commit f477146fac14c7f066b59c4a3170150b90c83e57.

[03:36] <Geth> ¬¶ rakudo.org: 

[03:36] <Geth> ¬¶ rakudo.org: Just a test of auto-push script

[03:36] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/023a7f7940

[03:36] *** khw left
[03:36] <Geth> ¬¶ rakudo.org: aedc102921 | (Zoffix Znet)++ | push-latest-rakudo-star-announcement.p6

[03:36] <Geth> ¬¶ rakudo.org: Add auto-star-announcement-push script

[03:36] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/aedc102921

[03:40] *** releasable6 left
[03:41] *** releasable6 joined
[03:41] *** ChanServ sets mode: +v releasable6

[03:41] <Zoffix> .tell stmuk I updated the Star release guide with the new way to publish announcements on rakudo.org. There's a script that does everything or you can just commit a markdown file to perl6/rakudo.org repo manually. Site will pull the repo and update itself in a cronjob that runs every 5m: https://github.com/rakudo/star/commit/86d29b73d8edf4ef031b874fa2fe60090745f8da

[03:41] <yoleaux> Zoffix: I'll pass your message to stmuk.

[03:42] <Geth> ¬¶ rakudo.org: b167fcbc6d | (Zoffix Znet)++ | post/announce-rakudo-star-release-2018-01.md

[03:42] <Geth> ¬¶ rakudo.org: Test site auto-update

[03:42] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/b167fcbc6d

[03:45] *** ufobat_ joined
[03:48] <eckhardt> > Zoffix:	I'll take it as a yes.

[03:48] <eckhardt> lol

[03:48] *** ufobat left
[03:49] <Geth> ¬¶ infrastructure-doc: bb41a8cbb1 | (Zoffix Znet)++ (committed using GitHub Web editor) | hosts/www.p6c.org.pod

[03:49] <Geth> ¬¶ infrastructure-doc: Add info on rakudo.org

[03:49] <Geth> ¬¶ infrastructure-doc: review: https://github.com/perl6/infrastructure-doc/commit/bb41a8cbb1

[03:50] *** wamba joined
[03:53] <Geth> ¬¶ rakudo.org: 65e4b419ec | (Zoffix Znet)++ | README.md

[03:53] <Geth> ¬¶ rakudo.org: Add info on maintaining the site

[03:53] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/65e4b419ec

[04:03] <Zoffix> .tell pmichaud new rakudo.org is good to go. Just need to move the domain. More info: https://github.com/perl6/perl6.org/issues/96#issuecomment-373971373

[04:03] <yoleaux> Zoffix: I'll pass your message to pmichaud.

[04:03] <Zoffix> w00t. That was pretty easy.

[04:03] <Zoffix> ZofBot: high-five, brother!

[04:03] <ZofBot> Zoffix, while drop him off at the station? 'll get Tony to swing by and pick you up

[04:03] *** Zoffix left
[04:08] *** kurahaupo left
[04:08] *** kurahaupo joined
[04:18] *** pierre joined
[04:22] *** pierre left
[04:53] *** kurahaupo left
[05:48] *** rindolf joined
[06:17] *** pierre joined
[06:22] *** pierre left
[06:37] *** pierre joined
[07:13] *** darutoko joined
[07:21] *** ilogger2 joined
[07:21] *** ChanServ sets mode: +v ilogger2

[07:21] *** evalable6 joined
[07:24] *** g- joined
[07:24] *** ribasushi joined
[07:28] *** unicodable6 joined
[07:28] *** notable6 joined
[07:28] *** ChanServ sets mode: +v unicodable6

[07:28] *** ChanServ sets mode: +v notable6

[07:28] *** committable6 joined
[07:28] *** reportable6 joined
[07:28] *** ChanServ sets mode: +v committable6

[07:28] *** ChanServ sets mode: +v reportable6

[07:30] *** samcv joined
[07:32] *** nige joined
[07:33] <nige> Zoffix - I like the new Rakudo website - nice and simple and clear

[07:34] <nige> I wonder if a language stack diagram might help place Rakudo in relation to the other parts (MoarVM) etc

[07:35] <nige> something like: http://nigelhamilton.com/perl6-stack.png

[07:40] <nige> separately, it might be useful to provide a feature stack image on perl6.org to show all the Perl6's good bits (concurrency/parallel/reactive, mop, regex, rules, grammars etc) - something akin to - http://www.cs.mun.ca/java-api-1.5/images/j2se5.gif 

[07:41] <nige> albeit IMO that image is too busy now -^

[07:56] <FROGGS> how can I watch the new site?

[07:58] <FROGGS> ahh, got it, it is: http://p6c.org:4242/

[08:00] <FROGGS> Zoffix: is it intentional that the home-site does not show the logo image?

[08:09] *** aindilis joined
[08:10] *** domidumont joined
[08:18] *** domidumont left
[08:18] *** nativecallable6 joined
[08:18] *** ChanServ sets mode: +v nativecallable6

[08:18] *** benchable6 joined
[08:19] *** statisfiable6 joined
[08:19] *** domidumont joined
[08:38] *** Jnx joined
[08:43] *** Jnx left
[09:19] *** nige left
[09:23] *** wamba joined
[09:26] *** sena_kun joined
[09:26] *** andrzejku joined
[09:33] *** neilb joined
[09:35] *** rurban joined
[09:43] <Geth> ¬¶ doc: 62a2aae5ba | (JJ Merelo)++ | doc/Language/pod.pod6

[09:43] <Geth> ¬¶ doc: Specifying which Pod we're talking about

[09:43] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/62a2aae5ba

[09:43] <Geth> ¬¶ doc: 5b61c7cd11 | (JJ Merelo)++ | 10 files

[09:43] <Geth> ¬¶ doc: Merge branch 'master' of github.com:perl6/doc

[09:43] <synopsebot> Link: https://doc.perl6.org/language/pod

[09:44] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/5b61c7cd11

[09:45] <moritz> .tell Zoffix SSL for {doc,alert}.perl6.org seems to work fine here; /etc/cron.d/certbot just runs 'certbot -q renew'; not much else involved

[09:45] <yoleaux> moritz: I'll pass your message to Zoffix.

[09:48] *** neilb left
[10:00] *** kaare__ joined
[10:01] <Geth> ¬¶ doc: d750345ff4 | (JJ Merelo)++ | xt/space-after-comma.t

[10:01] <Geth> ¬¶ doc: Added double-dot test to space-after-comma

[10:01] <Geth> ¬¶ doc: 

[10:01] <Geth> ¬¶ doc: If everything is OK, double-dot can be eliminated. Refs #1822

[10:01] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d750345ff4

[10:20] *** travis-ci joined
[10:20] <travis-ci> Doc build failed. JJ Merelo 'Added double-dot test to space-after-comma

[10:20] <travis-ci> https://travis-ci.org/perl6/doc/builds/354956909 https://github.com/perl6/doc/compare/5b61c7cd1193...d750345ff48a

[10:20] *** travis-ci left
[10:20] <buggable> [travis build above] ‚ò† Did not recognize some failures. Check results manually.

[10:22] *** rumble joined
[10:23] *** rumble is now known as grumble

[10:26] <Geth> ¬¶ doc: 7df95b2159 | (JJ Merelo)++ | xt/space-after-comma.t

[10:26] <Geth> ¬¶ doc: Now without tabs

[10:26] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7df95b2159

[10:30] *** kurahaupo joined
[10:38] *** neilb joined
[10:45] *** travis-ci joined
[10:45] <travis-ci> Doc build passed. JJ Merelo 'Now without tabs'

[10:45] <travis-ci> https://travis-ci.org/perl6/doc/builds/354961735 https://github.com/perl6/doc/compare/d750345ff48a...7df95b215980

[10:45] *** travis-ci left
[10:57] *** mprelude joined
[11:03] *** shareable6 joined
[11:08] *** sena_kun left
[11:14] *** andrzejku left
[11:24] *** lelf joined
[11:27] *** wamba left
[11:27] *** wamba joined
[11:35] *** andrzejku joined
[11:39] *** andrzejku left
[11:44] *** aindilis left
[11:47] *** aborazmeh joined
[11:47] *** aborazmeh left
[11:47] *** aborazmeh joined
[11:51] *** aborazmeh left
[11:52] *** SyrupThinker joined
[11:57] *** kurahaupo left
[11:59] *** eliasr joined
[12:07] *** stmuk_ joined
[12:08] *** markong joined
[12:14] *** pierre_ joined
[12:19] <lelf> anyone using jvm backend?  What does ‚ÄúMissing serialize function for REPR ContextRef‚Äù refer to?

[12:22] *** telex joined
[12:23] <MasterDuke> lelf: the jvm backend has a bunch of known problems, it doesn't work as well as the moarvm backend. however, bartolin is the person to ask, he's been working on the jvm backend the most recently

[12:25] *** andrzejku joined
[12:26] *** mprelude left
[12:27] <lelf> ,l;/"

[12:29] *** andrzejku left
[12:30] <lelf> sorry. If it could make me a standalone jar, all is forgiven :) and trivial examples do work

[12:36] <MasterDuke> i don't know the answer to that. i'd suggest you .ask bartolin and jnthn, they'll probably know

[12:36] *** vike joined
[12:37] <MasterDuke> oh, the bot to leave messages isn't in this channel right now

[12:37] <MasterDuke> dpk: looks like yoleaux isn't here

[12:38] *** yoleaux joined
[12:38] *** ChanServ sets mode: +v yoleaux

[12:39] <dpk> well, he was here, and i just restarted him

[12:41] <MasterDuke> huh. i don't see him in the user list

[12:41] <MasterDuke> but he does autocomplete

[12:42] <MasterDuke> whoops, my bad, here he's listed with the other bots at the beginning

[12:43] <MasterDuke> lelf: if you `.ask <username> message`, yoleaux will tell the user your message when they next talk

[12:49] *** AlexDaniel joined
[13:01] *** vike left
[13:09] *** vike joined
[13:11] *** rurban left
[13:12] *** rurban joined
[13:16] *** rurban left
[13:24] *** aborazmeh joined
[13:24] *** aborazmeh left
[13:24] *** aborazmeh joined
[13:26] <stmuk_> .tell zoffix Thanks for the heads up! That looks great! It was always a PITA putting the accouncement on Wordpress

[13:26] <yoleaux> stmuk_: I'll pass your message to zoffix.

[13:44] *** khw joined
[13:53] *** skids joined
[13:53] <Geth> ¬¶ rakudo.org: 45ab15e287 | (Zoffix Znet)++ | post/announce-rakudo-star-release-2018-01.md

[13:53] <Geth> ¬¶ rakudo.org: Remove test code

[13:53] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/45ab15e287

[14:00] *** aborazmeh left
[14:02] <Geth> ¬¶ rakudo.org: ac078b84f5 | (Zoffix Znet)++ | templates/layouts/default.html.ep

[14:02] <Geth> ¬¶ rakudo.org: [REAPP] Use rakudo/rakudo for GitHub in the footer

[14:02] <Geth> ¬¶ rakudo.org: 

[14:02] <Geth> ¬¶ rakudo.org: The repo for the site is still mentioned on the "Bugs" page,

[14:02] <Geth> ¬¶ rakudo.org: and is less useful.

[14:02] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/ac078b84f5

[14:03] *** Zoffix joined
[14:05] <Zoffix> FROGGS: what do you mean? It has a huge logo on the home page: https://i.imgur.com/rddTAqK.png

[14:06] <FROGGS> Zoffix: yeah but when you click other menu items, the menu jumps to the right

[14:16] <Zoffix> without the jump alignment is grating :(

[14:18] <Geth> ¬¶ rakudo.org: 1721b7305b | (Zoffix Znet)++ | 2 files

[14:18] <Geth> ¬¶ rakudo.org: [REAPP] Fix nav jump

[14:18] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/1721b7305b

[14:20] <Zoffix> FROGGS: fixed: http://perl6.org:4242/

[14:22] <Zoffix> AlexDaniel: also fixed. repo's in the footer now: http://perl6.org:4242/

[14:22] <AlexDaniel> Zoffix: awesome! Thanks!

[14:22] <moritz> Fun Fact: you can also refer to it as http://rakudo.perl6.org:4242/

[14:25] <AlexDaniel> Zoffix: hm‚Ä¶ here's a thing and I don't know if we should do anything about it. Right now the twitter logo is being ‚Äúadblocked‚Äù by these lists: ‚ÄúFanboy‚Äôs Annoyance List‚Äù, ‚ÄúFanboy‚Äôs Social Blocking List‚Äù

[14:25] <AlexDaniel> Zoffix: the filter is: /twitter-logo. 

[14:26] <AlexDaniel> do we want to work around it?

[14:27] <AlexDaniel> otherwise it looks like this: https://screenshots.firefox.com/iWjVmZAqq8xboBgZ/perl6.org

[14:28] <moritz> looks acceptable to me

[14:28] <Zoffix> Isn't the purpose of that filter specifically to block twitter logo? I say, mission achieved.

[14:29] <AlexDaniel> yeah but then it shouldn't take any space?

[14:29] *** andrzejku joined
[14:29] <Zoffix> Well, fix your filter then :P

[14:30] <AlexDaniel> there's nothing the filter can do if you fix the ::before element to 20px width

[14:31] <AlexDaniel> but I guess that's done because we don't want it to jump around when it's loading

[14:31] * AlexDaniel shrugs

[14:31] <Zoffix> Yeah, the filter could not block stuff it doesn't know how block.

[14:32] <Geth> ¬¶ rakudo.org: d23e23e6b9 | (Zoffix Znet)++ | 3 files

[14:32] <Geth> ¬¶ rakudo.org: Rename twitter logo

[14:32] <Geth> ¬¶ rakudo.org: 

[14:32] <Geth> ¬¶ rakudo.org: https://irclog.perlgeek.de/perl6/2018-03-18#i_15936072

[14:32] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/d23e23e6b9

[14:32] <AlexDaniel> that should work, yes :)

[14:32] <AlexDaniel> thanks

[14:32] <Geth> ¬¶ rakudo.org: c9a1278dcd | (Zoffix Znet)++ | dummy-file-for-restart-app-commits.txt

[14:32] <Geth> ¬¶ rakudo.org: [REAPP] the app

[14:32] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/c9a1278dcd

[14:33] *** andrzejku left
[14:37] *** SyrupThinker left
[14:37] *** Zoffix left
[14:42] <FROGGS> Zoffix: awesome!

[15:06] *** kurahaupo joined
[15:06] *** lichtkind joined
[15:14] *** pierre_ left
[15:16] <lichtkind> how ca i see the p6 modules on cpan?

[15:22] *** Zoffix joined
[15:22] <Zoffix> lichtkind: http://modules.perl6.org/search/?q=from%3Acpan

[15:22] <lichtkind> thanks but i hopen something like that for metacpan

[15:23] <tyil> metacpan only indexes p5 modules I thought

[15:23] <Zoffix> Right.

[15:24] <Zoffix> It doesn't even support our versioning system (same name; multiple authors)

[15:30] <lichtkind> yes but search.cpan.org also ignores

[15:31] <Zoffix> lichtkind: right. All that stuff is for a different language. We get to piggy back on the mirrors, but other than browsing the mirrors manually, you can only view the modules on http://modules.perl6.org/search/?q=from%3Acpan

[15:33] *** espadrine joined
[15:33] *** ChoHag joined
[15:34] <Zoffix> And looks like even not all mirrors mirror Perl 6 modules. I don't see "Perl6" dir on this one ftp://cpan.mirror.rafal.ca/pub/CPAN/modules/by-authors/id/Z/ZO/ZOFFIX/

[15:35] <Zoffix> or this one ftp://ftp.ottix.net/pub/CPAN/authors/id/Z/ZO/ZOFFIX/

[15:35] <Zoffix> So I guess, even with mirrors we don't piggy much on yet. Just the PAUSE stuff

[15:37] <AlexDaniel> ‚ÄúI'm sorry but I'm that guy that doesn't like non-ASCII characters as part of the language.‚Äù and then when pointed out that there are texas equivalents ‚ÄúThat's a lot more to write and is considerably less expressive‚Äù

[15:37] <AlexDaniel> oh my xD

[15:38] <Zoffix> :)

[15:40] <Zoffix> Ah, wait, no. We do get mirrors: ftp://cpan.mirror.rafal.ca/pub/CPAN/authors/id/T/TY/TYIL/Perl6/

[15:40] <Zoffix> I think I just deleted all my modules off PAUSE

[15:40] <tyil> nice

[15:41] <tyil> apartfrom deleting all your modules

[15:43] <Zoffix> Well, they're still on p6c ecosystem. I just like GitHub's system more

[15:45] *** Zoffix left
[15:45] *** pierre_ joined
[15:53] *** pierre_ left
[16:05] <thowe> I'm fairly certain I will never understand containers.

[16:08] <thowe> or maybe it's binding vs assigning I don't get...  I don't even understand what part I don't understand.

[16:08] <timotimo> got an example that stumps you?

[16:08] <yoleaux> 01:54Z <MasterDuke> timotimo: some conversation starting here https://irclog.perlgeek.de/moarvm/2018-03-18#i_15934422 where your input is requested

[16:09] <thowe> https://perl6advent.wordpress.com/2017/12/02/  I'm reading this for the third time.  But I'm also staring at another thing I'll gist.

[16:10] <thowe> https://gist.github.com/thowe/e10c5fa967ed1ca6fc54ad27e2813489

[16:11] <thowe> I'm imagining I am going to fill my programs with bugs full of misunderstanding this.

[16:12] <timotimo> ah

[16:12] <timotimo> right, that's list assignment being special that's potentially tripping you up

[16:12] <timotimo> m: my @stuff = (1, 2, 3), (4, 5, 6); say @stuff.^name; @stuff := (1, 2, 3), (4, 5, 6); say @stuff.^name

[16:12] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´Array‚ê§List‚ê§¬ª

[16:12] <thowe> I use a lot of hierachically embedded data structures, and I am now afraid to.

[16:13] <timotimo> the trick is that when you assign to an @-sigiled variable, you'll get "iterate the thing on the right side and stash the contents into the @-sigiled variable" semantics

[16:13] <timotimo> % works in a similar manner

[16:13] <timotimo> that's why this doesn't do what you probably mean:

[16:13] <timotimo> m: my SomeKindOfList is List {}; my @foo = SomeKindOfList.new(1, 2, 3); say @foo.^name

[16:13] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed my (did you mean to declare a sigilless \SomeKindOfList or $SomeKindOfList?)‚ê§at <tmp>:1‚ê§------> 3my SomeKindOfList7‚èè5 is List {}; my @foo = SomeKindOfList.ne‚ê§¬ª

[16:13] <timotimo> m: class SomeKindOfList is List {}; my @foo = SomeKindOfList.new(1, 2, 3); say @foo.^name

[16:13] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´Array‚ê§¬ª

[16:14] <timotimo> if you want that, you can for example:

[16:14] <timotimo> m: class SomeKindOfList is List {}; my @foo := SomeKindOfList.new(1, 2, 3); say @foo.^name # binding instead of assignment

[16:14] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´SomeKindOfList‚ê§¬ª

[16:14] <timotimo> this is more obvious when you're working with hashes, because we have Set and Mix and friends

[16:14] <timotimo> check this example:

[16:15] <timotimo> m: my %result-of-calc = <1 2 3> (-) <3 4 5>; say %result-of-calc.perl; say %result-of-calc.^name

[16:15] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´{"1" => Bool::True, "2" => Bool::True}‚ê§Hash‚ê§¬ª

[16:15] <timotimo> m: my %result-of-calc := <1 2 3> (-) <3 4 5>; say %result-of-calc.perl; say %result-of-calc.^name # binding instead of assignment

[16:15] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´Set.new(IntStr.new(1, "1"),IntStr.new(2, "2"))‚ê§Set‚ê§¬ª

[16:15] <thowe> hold up, I'm still trying to absorb the first thing you said...

[16:15] <timotimo> OK

[16:17] <thowe> What is different about the first two examples?

[16:18] <thowe> assign vs bind?

[16:18] <thowe> they seem to result in the same structure

[16:19] <timotimo> that was the one with Array and List in the result?

[16:19] <thowe>  ((1 2 3) (4 5 6))

[16:20] <timotimo> m: my @stuff = (1, 2, 3), (4, 5, 6); say @stuff.^name; @stuff := (1, 2, 3), (4, 5, 6); say @stuff.^name

[16:20] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´Array‚ê§List‚ê§¬ª

[16:20] <timotimo> this one?

[16:20] <thowe> one is a list and one an array?  So, the array is mutable is the diff?

[16:21] <thowe> no  my $stuff = (1, 2, 3), (4, 5, 6);   vs   my $stuff := (1, 2, 3), (4, 5, 6);

[16:21] <thowe> scalar

[16:21] <thowe> first two in my gist

[16:23] <timotimo> ooh

[16:23] <timotimo> well, if you have a $-sigiled variable that you assign to, that's really just stashing the object into the variable

[16:23] <timotimo> like

[16:24] <timotimo> m: ((1, 2, 3), (4, 5, 6)).^name.say

[16:24] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´List‚ê§¬ª

[16:24] <timotimo> it's literally Just A List Object‚Ñ¢

[16:24] <thowe> what is "^name"?

[16:24] <timotimo> asking the metaobject to give me the class name of the object

[16:25] <timotimo> most of those are introspection methods, for example:

[16:25] <timotimo> m: say (1, 2, 3).^methods

[16:25] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´(from-iterator from-slurpy from-slurpy-onearg from-slurpy-flat new to from sum fmt ASSIGN-POS BIND-POS reification-target iterator sink STORE eager Capture FLATTENABLE_LIST FLATTENABLE_HASH CALL-ME pick roll reverse rotate combinations permutations jo‚Ä¶¬ª

[16:25] <b2gills> ÔΩ¢A.^name(B)ÔΩ£ is the same as ÔΩ¢A.HOW.name(A,B)ÔΩ£

[16:25] <thowe> so this is two things with a newline between them?   ¬´Array‚ê§List‚ê§¬ª

[16:26] <b2gills> camelia uses ‚ê§ as newline indicators so that the IRC message stays as a single message

[16:27] <thowe> OK, sorry I am easily distracted by details :P

[16:27] <timotimo> yeah, that's right

[16:27] <timotimo> IRC doesn't really do newlines well

[16:28] <timotimo> the server would kick you off if you send too much at once, so what usually happens if someone copy-pastes a lot of text, it'll space it out over a minute or two

[16:28] <timotimo> "helpfully"

[16:28] <timotimo> "it'll" being the user's irc client, of course

[16:29] <timotimo> so you could basically make this channel unusable for a day or two by sending m: say "hi" for ^100_000

[16:29] *** andrzejku joined
[16:32] <thowe> so, if I am used to perl5 behavior of passing around a reference to an array of references to hashes, what's the equiv in perl6 so I can iterate and change values like I might expect?

[16:33] <thowe> it kind of seems like I can use the sigiled variables in much the same way(?)

[16:33] <thowe> which would be the wrong way in perl5, but look like the right way to someone who didn't know what references were.

[16:34] <timotimo> hm

[16:35] <timotimo> how do i best explain

[16:35] <El_Che> clearly?

[16:35] *** andrzejku left
[16:35] <El_Che> :)

[16:35] <timotimo> the idea of "reference" from perl5 is basically gone, but only because now everything is a reference

[16:36] <El_Che> there is also the pass by copy/reference for sub/methods

[16:36] <thowe> OK, before we do that...

[16:36] <thowe> My eyes can't make sense of the first hash example you put way back up there...

[16:37] *** andrzejku joined
[16:37] <timotimo> OK, let's go through it in detail

[16:37] <thowe> the heck is this?   %result-of-calc = <1 2 3> (-) <3 4 5>

[16:37] <timotimo> hah, yeah, that's a bit much syntax at once

[16:38] <timotimo> (-) is the set subtraction operator

[16:38] <thowe> is that a comparison, or math?

[16:38] <timotimo> you surely know qw from perl5, <1 2 3> is just that in perl6, but shorter because it's used in so many places

[16:39] <thowe> I interpreted as a list like ("1", "2", "3")

[16:40] <thowe> I think I saw somewhere that that's what < > do

[16:41] <timotimo> right, with just a little bit extra

[16:42] <thowe> I just don't see how you get {"1" => Bool::True, "2" => Bool::True}  out fo that

[16:42] <timotimo> ah, yes, that's the trick

[16:42] <timotimo> assigning to a %-sigiled variable does that

[16:42] <timotimo> it'll iterate over the contents of the RHS and store it in a hash

[16:42] <timotimo> so the set-like nature of the result gets lost and you just get the list of pairs you'd get from a set

[16:44] <thowe> what is it deciding is the RHS of "1" ?

[16:44] <thowe> er, what does "1" point to?

[16:44] <El_Che> this is something of the too-smart-for-it's-own-good book, though

[16:45] <timotimo> i'm not sure i understand the question

[16:45] <timotimo> think of it like this:

[16:46] <japhb> thowe: A set is logically equivalent to a hash of all things that are in the set, and thus when you assign a set to a hash, that's what happens.

[16:46] <timotimo> m: my $the-set = set <cat mouse dog pizza>; say $the-set.keys;

[16:46] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´(mouse pizza cat dog)‚ê§¬ª

[16:46] <timotimo> m: my $the-set = set <cat mouse dog pizza>; say $the-set.values

[16:46] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´(True True True True)‚ê§¬ª

[16:46] <timotimo> that's how that comes to be

[16:46] <thowe> OK, but why does it stop at the second one?  why not at least the third?

[16:47] <japhb> The second one?

[16:47] <japhb> Oh, do you mean, why no "3" => Bool::True?

[16:47] <thowe> "1" is the first item, "2" is the second...

[16:47] <thowe> yeah

[16:47] <japhb> Yeah, that's because he subtracted out another set that had a 3 in it.

[16:47] <thowe> for starters...

[16:47] <japhb> So that's gone from the result.

[16:48] <thowe> oh, the operator does head hurting things...  OK

[16:48] <japhb> Yes, set algebra is very much a head hurting thing.  :-)

[16:48] <thowe> like a matrix or something?  I'm too old to remember how to do those things.

[16:48] <timotimo> oh, sorry, i used set math too often for things like blacklists so that was a natural example for me

[16:49] <japhb> A matrix is from linear algebra.

[16:49] <thowe> or just "if these things are at the left, remove them"?

[16:49] <japhb> Mathematicians love algebras.

[16:49] <timotimo> algebrae? :D

[16:49] <timotimo> algaebra.

[16:50] <japhb> thowe: $set1 (-) $set2 just says "Give me $set1, but with all the entries that also exist in $set2 removed)

[16:50] <japhb> s/\)/"/

[16:50] <thowe> so is it (heres some things) (-) (remove any of these things from those things)

[16:50] <japhb> Yes

[16:50] <thowe> That's andy

[16:50] <thowe> er Handy

[16:50] <japhb> Oh, sets are very handy.

[16:51] <timotimo> i'm kind of the guy who cooks for his friend and accidentally uses a gram of 1000000 scoville chili powder because he's gotten so used to hot food

[16:51] <bocaneri> What am I doing wrong with this? --> my ($a, $b, $c) = $s.split(/<['|' ',']>/);

[16:51] <timotimo> i mean i'm not like that in real life, just with this particular example

[16:51] <bocaneri> Oh, and I'm forever chucking some ground white pepper and some chipotle in Mom's spaghetti.

[16:51] <japhb> One problem is that if you're not careful you will without thinking do set math with arrays, and it will Just Work, except you won't notice it's doing a lot of conversion under the covers for you.  Painful in a tight loop.

[16:53] *** extrubi joined
[16:53] <thowe> I got lost in the weeds.

[16:53] *** extrubi_ joined
[16:54] <bocaneri> I'm trying to learn perl6 and finding that I keep trying to do perl5 in it. It ain't working so well.

[16:54] *** neilb_ joined
[16:54] <thowe> bocaneri, that's kind of the theme at the moment, I think

[16:55] *** SyrupThinker joined
[16:55] <thowe> for me anyway

[16:55] <bocaneri> It's a new thing. I keep seeing things that look like they'd simplify a crapload of things I've run into in the past, but I just can't make the goddamn thing work.

[16:55] <timotimo> we're just having that kind of day right now, aren't we? :D

[16:56] <bocaneri> Anybody have any insight into my split question?

[16:56] <timotimo> m: my $s = "hello|what,even"; my ($a, $b, $c) = $s.split(/<['|' ',']>/); dd $a, $b, $c;

[16:56] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´Potential difficulties:‚ê§    Quotes are not metacharacters in character classes‚ê§    at <tmp>:1‚ê§    ------> 3hat,even"; my ($a, $b, $c) = $s.split(/<7‚èè5['|' ',']>/); dd $a, $b, $c;‚ê§    Repeated character (') unexpectedly found in character‚Ä¶¬ª

[16:56] <timotimo> m: my $s = "hello|what,even"; my ($a, $b, $c) = $s.split(/<[|,]>/); dd $a, $b, $c;

[16:56] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´Str $a = "hello"‚ê§Str $b = "what"‚ê§Str $c = "even"‚ê§¬ª

[16:57] *** neilb left
[16:57] *** neilb_ is now known as neilb

[16:59] <bocaneri> Guessing I'm going to have to spend a weekend learning regular expressions all over again.

[16:59] <thowe> So, circling back...  my $stuff = (1, 2, 3), (4, 5, 6);   vs   my $stuff := (1, 2, 3), (4, 5, 6);   there's a difference, right?

[16:59] <thowe> bocaneri, there's a book I got for that.  Price reduced on Amazon right now

[16:59] <bocaneri> thowe, as I understood it from reading (but not trying), the second form makes $stuff immutable.

[17:02] <thowe> that's the only difference I seem to see in practice, but that somehow doesn't seem like the entire story.

[17:02] * bocaneri is now busy trying to figure out how to populate and maintain a multidimensional hash

[17:03] <thowe> is that really the only difference between assigning and binding?   Am I conflating them with scalar and Positional roles erroneously?

[17:03] <thowe> bocaneri, Yeah, I'm trying to get to something similar :)

[17:04] <mst> I think assigning creates a container for it, which is how it can be mutable

[17:04] <mst> whereas binding just binds the values directly

[17:05] <mst> but *handwaves vigorously* that's just my current tentative mental model

[17:05] <timotimo> yeah, that's not wrong

[17:05] <thowe> mst, That might be a useful model for me too...  I think I get that.

[17:05] <timotimo> if you bind something that doesn't support assigning - scalars do support that - you won't be able to assign

[17:06] <timotimo> plus, there are read-only scalars that will also refuse assignment

[17:06] <timotimo> notably, arguments to routines that you don't declare either rw, copy, or raw

[17:06] <Ulti> is anyone building on macOS High Sierra?

[17:06] <bocaneri> !#$%@%#@$

[17:07] *** extrubi_ left
[17:07] *** extrubi left
[17:07] <thowe> OK, I'm going to go back and read this again and see if I have gained some context to grasp more of it.

[17:08] <timotimo> bocaneri: creating a multi-dimensional hash is easy, thanks to autovivification

[17:08] <timotimo> m: my %foo; %foo<hello><how><are><you> = "fine thanks"; say %foo.perl

[17:08] <camelia> rakudo-moar b75d9b1e1: OUTPUT: ¬´{:hello(${:how(${:are(${:you("fine thanks")})})})}‚ê§¬ª

[17:08] * thowe puts his fingers in his ears and starts humming

[17:08] <bocaneri> It's easy once you know how. In my particular case, it was impossible to learn because my hash builder was OUTSIDE its "when" clause of a "given".

[17:09] *** syrup joined
[17:10] <bocaneri> craploads easier than in perl5, I'll tell you that!

[17:10] *** SyrupThinker left
[17:10] *** MilkmanDan joined
[17:11] <bocaneri> Thinking I gonna take up residence in this channel.

[17:12] <thowe> I keep trying to look at examples that have syntax in them I haven't learned.  I need to go back to the beginning and stop trying to jump ahead.

[17:14] <timotimo> oh, you found the "a matching when will terminate execution of a given unless you 'proceed'"

[17:14] *** syrup left
[17:15] <thowe> timotimo, What did I ever do to you?

[17:16] <thowe> this kind of thing is just the devs trying to screw with me:  %(:42foo, :bar<ber>)

[17:16] <timotimo> oh, colon pair syntax

[17:16] <timotimo> the :42foo thing is a generalization of :1st, :2nd, :3rd for the s/// regex syntax

[17:17] <timotimo> so you can just use it for everything that wants a Pair or Named Argument

[17:17] <timotimo> i didn't come up with it, but i do love it to bits

[17:17] <thowe> according to the example I am looking at, foo => 42

[17:18] <thowe> I first saw that and thought I hadn't had enough coffee, because surely not.

[17:20] <thowe> I can only assume it is a side effect of wanting some other kind of black magic to work with something else.

[17:20] <bocaneri> I gonna drive myself to drink trying to remember what's a method and what's an adverb. :\

[17:21] <lizmat> an adverb is essentially a named parameter in the subroutine/method call it binds to

[17:22] <thowe> I'm going to stop and read my new book.  I'm obviously getting ahead of myself.  I owe Moritz an Amazon review anyway.

[17:22] *** squashable6 joined
[17:22] *** SyrupThinker joined
[17:24] <bocaneri> I'm the wrong kind of guy for that. I kinda skim over a book, tell myself "I know this.. I can do this..." and then fire up a text editor and spend the next month swearing like a sailor.

[17:25] <bocaneri> Worse I'm swearing, more fun I'm actually having, but I'm not doing this under any kind of deadline.

[17:25] <timotimo> i might not be here much more this evening, but if i'm around, i'll be happy to try explaining stuff

[17:25] <timotimo> i might be bad at it, though

[17:27] <thowe> I just started looking at Perl6 yesterday, so I should probably read more before I make much more noise.

[17:27] <thowe> I've been using it as a desktop calculator for a while, but not much more

[17:28] <bocaneri> thowe, as far as I'm personally concerned, you can make as much "noise" as you want.

[17:30] <mst> thowe: I made a one-liner dice-roller using the weird pair syntax at one point

[17:30] <mst> thowe: since it meant I could have 'roll :2d6'

[17:34] <bocaneri> say "roll :" ~ (1..6).pick ~ "d" ~ (1..6).pick # maybe?

[17:34] <evalable6> bocaneri, rakudo-moar 2a0b90f83: OUTPUT: ¬´roll :4d1‚ê§¬ª

[17:34] <bocaneri> o.O

[17:36] <timotimo> m: sub do-the-roll(*%rolls) { .perl.say for %rolls }; do-the-roll :4d6, :1d20, :2d6

[17:36] <camelia> rakudo-moar 2a0b90f83: OUTPUT: ¬´:d6(2)‚ê§:d20(1)‚ê§¬ª

[17:36] <thowe> docs seem to say comb(7) should split a string at eash 7th char and return a list, but it seems to just insert spaces for me.

[17:36] <timotimo> ah, named parameters of course mean you only get the first value for the same key

[17:36] <timotimo> m: sub do-the-roll(*@rolls) { .perl.say for @rolls }; do-the-roll (:4d6, :1d20, :2d6)

[17:36] <camelia> rakudo-moar 2a0b90f83: OUTPUT: ¬´:d6(4)‚ê§:d20(1)‚ê§:d6(2)‚ê§¬ª

[17:37] <thowe> m: my $sen = "imightnotbeheremuchmorethiseveningbutifimaroundillbehappytotryexplainingstuff"; $sen.comb(7);

[17:37] <camelia> rakudo-moar 2a0b90f83: ( no output )

[17:38] <thowe> nm, I think I just don't know what perl6 REPL is telling me

[17:38] <thowe> I should ask it for .perl I think

[17:39] *** SyrupThinker left
[17:39] <timotimo> be aware that the REPL sometimes has really weird bugs with some things, notably variable definitions

[17:39] <thowe> oh good

[17:41] <thowe> Is there some key or document that will help me understand how to read the subroutine defenitions in the Perl6 docs?  e.g.  multi method comb(Str:D $input: Str:D   $matcher, $limit = Inf)

[17:41] *** comborico1611 joined
[17:42] <thowe> colons are all over the place for, I assume, different reasons.

[17:42] <mst> thowe: :D means 'must be defined'

[17:42] <mst> the : after the first parameter indicates that the thing preceding it is the invocant

[17:42] <mst> method thing ($class: $arg1, $arg2 = 'default') {

[17:43] <bocaneri> I've been chucking stuff into text files and running them.

[17:43] <thowe> so...  Str:D $input:   means a string is the invocant 

[17:44] <timotimo> if you use vim, you can make a Makefile that just runs the p6 file and just :make whenever you've saved

[17:44] *** CptnNitpick joined
[17:45] <CptnNitpick> More precisely, :D means "must be .DEFINITE", that is an object instance rather than a typeobject. An object instance can still be undefined, by simply overriding it's "defined" method

[17:45] <mst> thowe: yah, coz it's $string.comb(...)

[17:45] <thowe> mst right

[17:45] <mst> CptnNitpick: thanks zoffix

[17:46] <CptnNitpick> m: say Failure.new.defined; sub (Any:D $v) { say "we're in: ", $v.defined }(Nil)

[17:46] <camelia> rakudo-moar 2a0b90f83: OUTPUT: ¬´False‚ê§Parameter '$v' of routine '<anon>' must be an object instance of type 'Any', not a type object of type 'Nil'.  Did you forget a '.new'?‚ê§  in sub  at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:46] <CptnNitpick> ah, right Nil is not an instance

[17:46] <CptnNitpick> m: say Failure.new.defined; sub (Any:D $v) { say "we're in: ", $v.defined }(class NotDefined { method definite { False } }.new)

[17:46] <camelia> rakudo-moar 2a0b90f83: OUTPUT: ¬´False‚ê§we're in: True‚ê§¬ª

[17:46] <mst> in soviet perl6, camelia nitpick you

[17:46] <El_Che> thowe: the symbolic notation is confusing. IRL I tend to just stick to the mandatory sigils and defaults

[17:46] <CptnNitpick> m: say Failure.new.defined; sub (Any:D $v) { say "we're in: ", $v.defined }(class NotDefined { method defined { False } }.new)

[17:46] <camelia> rakudo-moar 2a0b90f83: OUTPUT: ¬´False‚ê§we're in: False‚ê§¬ª

[17:46] <CptnNitpick> :)

[17:46] *** CptnNitpick left
[17:54] <thowe> where are anonymous variables explained?  This book shows one early, but never explains them and I'm not finding them in the docs by searching.

[17:56] <El_Che> thowe: this one? https://docs.perl6.org/language/variables#The_$_Variable

[17:58] *** eliasr left
[17:59] <thowe> I don't get how it is scoped, but OK.

[18:00] <bocaneri> You know how in perl5 you can say " my (undef, $second, undef, $fourth) = @crap; " ? I've been saying in perl 6 "my ($, $second, $, $fourth) = @crap". Seems to work. 

[18:01] <thowe> yeah, but I see $++ being used in a for loop, and it seems to retain it's incremented value.  I don't get why it doesn't go out of scope and reinitializes to 0 at each run through.

[18:02] <mst> scoped exactly like a normal 'state $thing' variable

[18:02] <mst> i.e. lexical-but-persistent

[18:02] <thowe> but garbage collected when the for loop is done running, yeah?

[18:05] <thowe> when using multiple $ in a signature, how do you access the variables?

[18:05] <mst> $ in a signature is meant to be "I don't care"

[18:05] <thowe> there I go again asking things I should just read up on

[18:05] <mst> if you want it, give it a name

[18:05] <thowe> OK, that makes sense

[18:07] <MasterDuke> thowe: https://docs.perl6.org/type/Signature has a lot of info

[18:26] *** kaare__ left
[18:27] *** kaare__ joined
[18:30] <Geth> ¬¶ perl6-lwp-simple: afc54b994f | (David Warring)++ | t/getstore.t

[18:30] <Geth> ¬¶ perl6-lwp-simple: use w3c.org for plain http: getstore test

[18:30] <Geth> ¬¶ perl6-lwp-simple: 

[18:30] <Geth> ¬¶ perl6-lwp-simple: Since this site is already used ielsewhere in the test suite. close #25.

[18:30] <Geth> ¬¶ perl6-lwp-simple: review: https://github.com/perl6/perl6-lwp-simple/commit/afc54b994f

[18:32] *** lelf left
[18:36] *** lelf joined
[18:40] *** lelf left
[18:45] *** markong left
[18:45] *** noganex joined
[18:52] *** lelf joined
[18:56] *** lelf left
[18:59] *** comborico1611 left
[19:00] <timotimo> it's not about garbage collecting; when the block containing the state var gets cloned, usually because the block one level outside it gets entered, the state var gets initialized again

[19:02] *** SyrupThinker joined
[19:27] *** vike left
[19:31] <timotimo> i was about to write an example, but dinner got served :)

[19:31] <timotimo> m: for ^5 { for ^4 { say $++ } }

[19:31] <camelia> rakudo-moar 2a0b90f83: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§0‚ê§1‚ê§2‚ê§3‚ê§0‚ê§1‚ê§2‚ê§3‚ê§0‚ê§1‚ê§2‚ê§3‚ê§0‚ê§1‚ê§2‚ê§3‚ê§¬ª

[19:32] <timotimo> m: for ^5 { for ^4 { say "X" x $++ } }

[19:32] <camelia> rakudo-moar 2a0b90f83: OUTPUT: ¬´‚ê§X‚ê§XX‚ê§XXX‚ê§‚ê§X‚ê§XX‚ê§XXX‚ê§‚ê§X‚ê§XX‚ê§XXX‚ê§‚ê§X‚ê§XX‚ê§XXX‚ê§‚ê§X‚ê§XX‚ê§XXX‚ê§¬ª

[19:38] *** kaare__ left
[19:41] *** kaare__ joined
[19:42] *** lelf joined
[19:51] <thowe> DateTime in perl6 seems to be like the DateTime module, but Duration is not.  Is there some other class that is like DateTime::Duration?

[19:52] <thowe> the biggest thing I am missing is the in_units method

[19:54] <lizmat> thowe: you mean something like .earlier or .later ? https://docs.perl6.org/type/DateTime#method_later

[19:56] <thowe> well, no..  I need to be able to take something like 2018-03-20 - 2018-03-15 and get told that it is 0 months, but 5 days.  That helps me calculate whole billing periods and fractions of days.

[19:57] <thowe> 2018-06-27  -  2018-03-15  helps me calculate 3 whole billing periods and then I deal with day fractions seperately

[19:58] <thowe> having some number of seconds returned doesn't save me work.  It means I have to do a lot of other figuring on my own.

[20:00] <thowe> https://metacpan.org/pod/DateTime::Duration has a lot of calendar smarts built in.

[20:03] <thowe> My current implementation does all the extra figuring, but I want to avoid that code this time around if I can.

[20:03] *** Zoffix joined
[20:03] <Zoffix> eco: Number::Denominal

[20:03] <buggable> Zoffix, Nothing found

[20:03] <Zoffix> eco: Number::Denominate

[20:03] <buggable> Zoffix, Number::Denominate 'Break up numbers into preset or arbitrary denominations': https://github.com/zoffixznet/perl6-Number-Denominate 1 other matching results: https://modules.perl6.org/s/

[20:03] <Zoffix> thowe: ^ I think that module has date units

[20:04] <Zoffix> thowe: though it doesn't have any smarts

[20:05] *** domidumont left
[20:07] <Zoffix> looks like time goes up to only weeks, but you can specify custom units

[20:07] <thowe> it gets tricky..  there's more seconds in March than Feb for example

[20:12] <Zoffix> yeah

[20:13] *** evalable6 left
[20:13] <thowe> and then there's the whole Jan 28, Jan 29, Jan 30, and Jan 31 are all Feb 28 when you add one month.

[20:14] <thowe> proratable billing is fun...  I love it when billing is on the 15th, but you billed them through to the next 5th and now you have to credit them back to the previous month's 21st.

[20:16] *** wamba left
[20:16] <Zoffix> Core Duration is a sucky type. All it does is store a single Rational :/ with no reference point

[20:16] <Zoffix> Hindsight's 20/20, I guess.

[20:19] <thowe> so imagine needing to credit from April 5th to Feb 21st.   Do you call April 5th to March 5th one duration, plus 5/31 durations in march and 7/28 durations in Feb?  Or since billing is on the 15th, is march split in half?  Depends on how your decision tree drills down to edge cases.  Then add in the fact that some surcharges and taxes are proratable and others are not.

[20:19] <moritz> it might still be possible to add more information to a Duration while keeping it backwards compatible

[20:20] <moritz> but such an attempt should be prototyped out of core, because it's not trivial, and more likely than not to fail

[20:21] <Zoffix> Definitely.

[20:24] <moritz> for example, if a duration has an anchor point stored, does it make it an error to add two durations with incompatible (whatever that means) anchor points?

[20:25] <Zoffix> m: say Duration.new(42.0) + Duration.new(42.0)

[20:25] <camelia> rakudo-moar 2a0b90f83: OUTPUT: ¬´84‚ê§¬ª

[20:25] <Zoffix> I think the ship's saled with Duration :) 

[20:27] <El_Che> I bought this all Perl 6 cool aid because it had a lean core so it was easier to advance and fix thing (unlike the macro-ridden p5 core). So no ships are allow to sail :)

[20:27] <thowe> Perhaps a CalendarDuration class would be different

[20:28] <Zoffix> Well, it's not broken. Just designed differently.

[20:28] <Zoffix> And you can't just re-design a thing without affecting users who use it, regardless of how lean your core is.

[20:29] <El_Che> that's the thing, you're not breaking half the internet

[20:29] <El_Che> yet

[20:29] <Zoffix> "yet"? Hasn't this "yet" been around for almost two decades?

[20:29] <El_Che> I wouldn't break, you have a obsoleting policy :)

[20:29] <El_Che> Zoffix: you risk to break my 2000-something perl6 book, maybe

[20:30] <Zoffix> No, I risk perpetuating the "Perl 6's not finished" meme by constantly pulling the rug from under the users.

[20:30] <El_Che> obsoletion policy: warning, this feature will be remove on X major release of X years

[20:31] <El_Che> that's not pulling the plug, that warning years before pulling the plug

[20:31] <Zoffix> And here's people warning others not to buy a Perl 6 book, because we were changing components that weren't even part of spec: http://www.perlmonks.org/?node_id=1189877

[20:32] <El_Che> whoever buys a computer book and think it won't be fast outdated is a fool

[20:32] <thowe> =O

[20:32] <El_Che> (or your protocol is old and in life support)

[20:32] <El_Che> (I enjoy my radius and ldap books, by example)

[20:33] <Zoffix> Warnings don't matter. The bottom line is $x number of users will have $y broken pieces of software that they'll either have to leave broken or fix. And there's a point when the second option becomes annoying and you switch to something else.

[20:33] <El_Che> Zoffix: that's a good point

[20:33] <El_Che> The counterpoint is that perl 6's lang is huge

[20:33] <El_Che> a lot of gotchas

[20:33] <El_Che> weird stuff

[20:33] <Zoffix> Mojolicious made a tiny change that slurp got moved from Mojo::Util to Mojo::Path.... And I'm still encountering my old apps that got broken by that change. Sure, Mojolicious has a deprecation policy, but I don't want to use an ancient version forever

[20:33] <El_Che> next to the cool stuff

[20:34] <El_Che> if you really care about write and don't touch, you really need a statically compile language for that (and don't upgrade OSes too much)

[20:35] * Zoffix &

[20:35] *** Zoffix left
[20:36] <El_Che> I killed Zoffix

[20:37] *** eliasr joined
[20:37] <thowe> Zoffix, come back.  We love you.

[20:41] *** evalable6 joined
[20:42] <timotimo> brr. i use windows like once a year ... this time it's apparently rebooting over and over again giving me "failed to configure windows updates" >_>

[20:43] *** neilb_ joined
[20:43] * AlexDaniel clickbaits https://github.com/AlexDaniel/6lang-golf-cheatsheet

[20:43] <AlexDaniel> a bunch of new stuff there

[20:43] <moritz> seldomly-used windows is the worst, since it always wants to install updates, and reboot twice

[20:43] *** Sgeo joined
[20:44] <Herby_> o/

[20:44] *** unicodable6 left
[20:44] *** unicodable6 joined
[20:44] <El_Che> moritz: you mean 10 probably? 7 is Ok on that aspect

[20:45] <moritz> should have been "at least twice"

[20:46] <timotimo> moritz: i started it to play a videogame on steam; steam refused to download/update anything for about an hour, probably because the search indexer and malware protection service were going over the whole damn disk

[20:46] *** neilb left
[20:46] *** neilb_ is now known as neilb

[20:46] <timotimo> when i shut it down it installed just above 100 updates before it turned off

[20:46] *** erdic joined
[20:46] *** comborico1611 joined
[20:47] <timotimo> now it's not coming up again :(

[20:47] <AlexDaniel> problem solved

[20:47] <timotimo> i'm only running windows 7 in the first place because windows 8 flat-out refuses to boot

[20:48] <timotimo> something something signature of some file blah blah

[20:49] <timotimo> winloader.exe or something i seem to recall?

[20:53] * timotimo uses "last known good configuration" boot mode in the hopes of it working

[20:53] <El_Che> you poor fool

[20:53] <El_Che> :)

[20:56] *** SyrupThinker left
[20:58] <timotimo> hum. that gives me the "failure configuring" message again

[20:58] <timotimo> and probably about 20 minutes of waiting for it to "revert changes"

[21:02] <thowe> There's a third party windows update installer that I have had to use in the past to snap Windows 7 out of its inability to move forwrd.  It seems once the database gets touched by something that moves it, it can recover on its own after.

[21:03] *** comborico1611 left
[21:03] <timotimo> i know WSUSOfflineUpdater

[21:04] <timotimo> i don't want to deal with this crap, but similarly i don't want to just reinstall from a fresh install medium

[21:06] <timotimo> back to linux i guess

[21:06] *** athenot joined
[21:14] *** athenot left
[21:25] *** andrzejku left
[21:28] <stmuk_> oddly I'm running WSUS right now in a VM

[21:28] <timotimo> uncanny

[21:28] <timotimo> so it turns out newer wine versions are actually almost able to run this game well

[21:49] *** comborico1611 joined
[21:51] *** kurahaupo_ joined
[21:54] *** kurahaupo left
[22:11] *** lizmat joined
[22:11] <MasterDuke> between native linux ports and wine working so well, i haven't had to use an actual windows install for a game in years

[22:11] *** markong joined
[22:12] <El_Che> really? I keep a windows 7 partition around for when I feel like gaming (every 6 months√†

[22:18] *** damnlie joined
[22:18] <MasterDuke> i'm not playing as frequently as i used to, so the sample size of games is not large, but i don't even keep around a windows install (to play games with) anymore

[22:31] *** comborico1611 left
[22:34] *** Zoffix joined
[22:35] *** isBEKaml joined
[22:46] *** Zoffix left
[22:53] <mspo> there is only OpenTTD

[23:06] <El_Che> reportable6: status

[23:06] <reportable6> El_Che, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Reportable

[23:07] <El_Che> releasable6: status

[23:07] <releasable6> El_Che, Next release will happen when it's ready. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Changelog for this release was not started yet

[23:07] <releasable6> El_Che, Details: https://gist.github.com/89ac2a75d4aeb61563822cf576b8c4ce

[23:07] <AlexDaniel> I should teach releasable6 to understand this page: https://github.com/rakudo/rakudo/wiki/ChangeLog-Draft

[23:09] <El_Che> AlexDaniel: it would be more informative

[23:11] *** neilb left
[23:13] <AlexDaniel> El_Che: here: https://github.com/perl6/whateverable/blob/132adebc1e189851e58950903185c215cbc8c7ce/bin/Releasable.p6#L155 just fetch this page: https://raw.githubusercontent.com/wiki/rakudo/rakudo/ChangeLog-Draft.md and concat the results

[23:14] <AlexDaniel> + delete all lines before ^^‚ÄúNew‚Äù

[23:14] <AlexDaniel> and it will work

[23:19] <AlexDaniel> also fetch this before pointing to blockers: https://api.github.com/repos/rakudo/rakudo/issues?state=open&labels=%E2%9A%A0%20blocker%20%E2%9A%A0

[23:22] *** w_richard_w joined
[23:23] *** imcsk8 joined
[23:24] *** lelf left
[23:31] *** lookatme joined
