[00:01] *** wbn joined
[00:02] *** p6bannerbot sets mode: +v wbn

[00:03] *** w_richard_w left
[00:03] *** lucasb joined
[00:04] *** p6bannerbot sets mode: +v lucasb

[00:09] *** vrurg left
[00:14] <lucasb> ($x.defined ?? ($x.Str // 'default') !! 'default')

[00:15] <lucasb> ^^ How do I simplify this?

[00:15] <lucasb> I was doing $x // 'default'

[00:16] <lucasb> but then decided to call .Str: $x.Str // 'default'

[00:16] <leont> ($x // 'default').Str

[00:16] <lucasb> what if the return value of .Str is undefined?

[00:16] <lucasb> I wanted something like the method version of the "with" statement

[00:16] <lucasb> $x.with.Str // 'default'

[00:17] <lucasb> ah

[00:18] <lucasb> ($x//Nil).Str // 'default'

[00:18] <lucasb> hm, don't look good :)

[00:19] <leont> You want a Maybe Monad

[00:20] <lucasb> maybe

[00:20] *** vrurg joined
[00:21] *** p6bannerbot sets mode: +v vrurg

[00:25] <lucasb> nevermind, my idea wouldn't work

[00:26] <lucasb> I was thinking Nil.Str would return propagating Nil

[00:26] <lucasb> but it coerces to empty string and emits a warning

[00:27] <tobs> lucasb: try ($x andthen .Str) orelse 'default'

[00:27] <tobs> and the warning can be suppressed with a `quietly`

[00:29] <lucasb> tobs: worked smooth! thanks

[00:30] *** DuMu joined
[00:30] *** p6bannerbot sets mode: +v DuMu

[00:33] *** vrurg left
[00:33] <lucasb> now the embarrassing moment, it was for this: https://gist.github.com/lucasbuchala/ae5d69e5ea4af5fb252e50543a11bcf3

[00:33] *** vrurg joined
[00:34] *** p6bannerbot sets mode: +v vrurg

[00:34] <lucasb> to test if my classes are calling the corrects .gist/.Str/.perl methods, while developing

[00:37] *** DuMu left
[00:39] <tobs> lucasb: it seems that the parentheses around andthen are not necessary

[00:40] <lucasb> correct

[00:40] <tobs> ah, it has tighter precedence

[00:41] <tobs> than orelse

[00:44] <lucasb> hmm, "dd" sends the output to STDERR

[01:03] <lucasb> m: .say for class { method list { 1..3 } }.item

[01:03] <camelia> rakudo-moar e7ce194a7: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[01:04] <lucasb> just because I put a "list" method in 

[01:04] <lucasb> my class, it made the class iterable?

[01:04] <timotimo> weird

[01:04] <lucasb> and not even .item will help in this situation?

[01:05] <lucasb> does the concept of itemized vs non-itemized applies to arbitrary user-defined classes or only to core data structures like lists, arrays and hashes?

[01:06] <timotimo> itemizing puts the value into a scalar container

[01:06] <timotimo> that's what's supposed to itemize it

[01:07] <lucasb> ah, so no special flag in the class :)

[01:07] <lucasb> just wrap in a scalar

[01:08] <timotimo> right

[01:08] <timotimo> which is why binding can often get you around itemization even when you have a $-sigiled var

[01:09] <lucasb> thanks timotimo

[01:10] *** lucasb left
[01:20] *** kurahaupo joined
[01:21] *** p6bannerbot sets mode: +v kurahaupo

[01:21] *** kurahaupo_ joined
[01:21] *** p6bannerbot sets mode: +v kurahaupo_

[01:23] *** mrsolo_ left
[01:24] *** kurahaupo left
[01:24] *** mrsolo_ joined
[01:24] *** p6bannerbot sets mode: +v mrsolo_

[01:25] *** mrsolo_ left
[01:26] *** mrsolo joined
[01:26] *** p6bannerbot sets mode: +v mrsolo

[01:38] <buggable> New CPAN upload: Uzu-0.2.4.tar.gz by SACOMO https://cpan.metacpan.org/authors/id/S/SA/SACOMO/Perl6/Uzu-0.2.4.tar.gz

[01:47] *** kurahaupo_ is now known as kurahaupo

[02:02] <Geth> ¬¶ ecosystem: scmorrison++ created pull request #419: Remove Uzu, now available on CPAN

[02:02] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/pull/419

[02:03] *** Kaiepi joined
[02:04] *** p6bannerbot sets mode: +v Kaiepi

[02:12] *** kiwi_95 joined
[02:12] *** p6bannerbot sets mode: +v kiwi_95

[02:16] <SmokeMachine> jnthn, lizmat: now Im thinking on something like this: https://gist.github.com/FCO/87d7645286d7f836e1f8e1e76514a599

[02:19] *** ferreira1 joined
[02:19] *** p6bannerbot sets mode: +v ferreira1

[02:20] *** ferreira left
[02:20] *** kiwi_95 left
[02:24] *** ReenignE1 joined
[02:24] *** ReenignE1 left
[02:30] <SmokeMachine> Maybe I should do a ‚Äúregister-model‚Äù that would receive a schema name and a file... and when I `use` the schema name it would return a CompUnit with every file registered with that name concated...

[02:31] <SmokeMachine> But my question is: the models should de resources? They can‚Äôt compile...

[02:31] <SmokeMachine> Not alone

[02:37] *** Xliff joined
[02:38] *** p6bannerbot sets mode: +v Xliff

[02:41] <Xliff> \o

[02:41] <SmokeMachine> Hi!

[02:41] *** Xliff_ left
[02:41] <Xliff> Hi, SM!

[02:43] *** molaf left
[02:43] *** discoD joined
[02:44] *** p6bannerbot sets mode: +v discoD

[02:55] *** molaf joined
[02:56] *** p6bannerbot sets mode: +v molaf

[02:57] *** kurahaupo_ joined
[02:57] *** kurahaupo left
[02:58] *** p6bannerbot sets mode: +v kurahaupo_

[02:58] *** kurahaupo_ is now known as kurahaupo

[03:04] *** ufobat___ joined
[03:05] *** p6bannerbot sets mode: +v ufobat___

[03:08] *** ufobat_ left
[03:27] *** Sgeo_ joined
[03:28] *** p6bannerbot sets mode: +v Sgeo_

[03:29] *** Sgeo left
[03:37] *** leont left
[04:37] *** bloatable6 left
[04:37] *** coverable6 left
[04:37] *** statisfiable6 left
[04:37] *** evalable6 left
[04:37] *** notable6 left
[04:37] *** squashable6 left
[04:37] *** undersightable6 left
[04:37] *** committable6 left
[04:37] *** greppable6 left
[04:37] *** bisectable6 left
[04:37] *** benchable6 left
[04:37] *** unicodable6 left
[04:37] *** quotable6 left
[04:37] *** reportable6 left
[04:37] *** nativecallable6 left
[04:37] *** releasable6 left
[04:37] *** shareable6 left
[04:38] *** notable6 joined
[04:38] *** committable6 joined
[04:38] *** reportable6 joined
[04:38] *** ChanServ sets mode: +v reportable6

[04:38] *** bisectable6 joined
[04:38] *** greppable6 joined
[04:38] *** ChanServ sets mode: +v greppable6

[04:39] *** p6bannerbot sets mode: +v notable6

[04:39] *** p6bannerbot sets mode: +v committable6

[04:39] *** p6bannerbot sets mode: +v reportable6

[04:39] *** p6bannerbot sets mode: +v bisectable6

[04:39] *** benchable6 joined
[04:39] *** ChanServ sets mode: +v benchable6

[04:39] *** releasable6 joined
[04:39] *** ChanServ sets mode: +v releasable6

[04:39] *** p6bannerbot sets mode: +v greppable6

[04:39] *** squashable6 joined
[04:40] *** quotable6 joined
[04:40] *** p6bannerbot sets mode: +v benchable6

[04:40] *** p6bannerbot sets mode: +v releasable6

[04:40] *** evalable6 joined
[04:40] *** ChanServ sets mode: +v evalable6

[04:40] *** p6bannerbot sets mode: +v squashable6

[04:40] *** p6bannerbot sets mode: +v quotable6

[04:41] *** shareable6 joined
[04:41] *** p6bannerbot sets mode: +v evalable6

[04:41] *** bloatable6 joined
[04:41] *** coverable6 joined
[04:41] *** p6bannerbot sets mode: +v shareable6

[04:41] *** undersightable6 joined
[04:41] *** ChanServ sets mode: +v undersightable6

[04:41] *** unicodable6 joined
[04:41] *** ChanServ sets mode: +v unicodable6

[04:42] *** molaf left
[04:42] *** p6bannerbot sets mode: +v bloatable6

[04:42] *** p6bannerbot sets mode: +v coverable6

[04:42] *** p6bannerbot sets mode: +v undersightable6

[04:42] *** p6bannerbot sets mode: +v unicodable6

[04:42] *** statisfiable6 joined
[04:42] *** nativecallable6 joined
[04:43] *** p6bannerbot sets mode: +v statisfiable6

[04:43] *** p6bannerbot sets mode: +v nativecallable6

[04:52] *** Sgeo_ left
[04:56] *** Sgeo joined
[04:57] *** p6bannerbot sets mode: +v Sgeo

[05:00] *** Cabanossi left
[05:01] *** Cabanossi joined
[05:02] *** p6bannerbot sets mode: +v Cabanossi

[05:16] *** sauvin joined
[05:16] *** p6bannerbot sets mode: +v sauvin

[05:16] *** kurahaupo left
[05:24] *** probablymoony is now known as moony

[05:30] *** eythian left
[05:31] *** eythian joined
[05:31] *** p6bannerbot sets mode: +v eythian

[05:43] *** p6noob left
[05:49] *** kurahaupo joined
[05:50] *** p6bannerbot sets mode: +v kurahaupo

[05:54] *** kurahaupo left
[05:58] *** curan joined
[05:58] *** p6bannerbot sets mode: +v curan

[06:18] *** jmerelo joined
[06:19] *** p6bannerbot sets mode: +v jmerelo

[06:20] *** kurahaupo joined
[06:21] *** p6bannerbot sets mode: +v kurahaupo

[06:22] *** stevie left
[06:45] <jmerelo> Hi

[06:46] <jmerelo> The Perl 6 

[06:46] <jmerelo> Advent Calendar

[06:46] <jmerelo> Schedule looks a little tiny bit better, but there are still slots to fill https://github.com/perl6/mu/blob/master/misc/perl6advent-2018/schedule

[06:46] <jmerelo> So please get yourself a slot, think about some topic, and start banging away at the keyboard...

[06:54] <holyghost> jmerelo: hello, I'll put something for Mathx-Stat as Zoffix suggested on it in january. I'm don't have good english though

[06:54] <holyghost> s/I'm/I

[06:56] <jmerelo> holyghost: you can post it for reviewing some time in advance. Maybe in your own module's repo.

[06:56] <jmerelo> You can even include it as documentation.

[06:57] *** lizmat left
[06:57] <holyghost> ok, I'll do my best, so X-mas-advent wise ?

[06:57] <jmerelo> right

[06:57] <holyghost> ok

[06:58] <holyghost> I'll try to give something on with it

[06:58] <holyghost> a present from a perl6er

[06:58] *** zacts joined
[06:58] *** p6bannerbot sets mode: +v zacts

[06:59] <holyghost> so there's not much choice and probably the same people write all the time I guess

[07:00] *** domidumont joined
[07:00] <holyghost> I have 3 modules, so should write 3 advents ...

[07:00] *** p6bannerbot sets mode: +v domidumont

[07:01] <holyghost> During the weekend I can help out

[07:04] *** lizmat joined
[07:04] *** p6bannerbot sets mode: +v lizmat

[07:13] *** lizmat left
[07:14] <Geth> ¬¶ doc: f1d4ae3216 | (JJ Merelo)++ | doc/Language/py-nutshell.pod6

[07:14] <Geth> ¬¶ doc: Minor changes and reflow

[07:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f1d4ae3216

[07:14] <Geth> ¬¶ doc: 2c1c964942 | (JJ Merelo)++ | doc/Language/operators.pod6

[07:14] <Geth> ¬¶ doc: Reflow and reformatting

[07:14] <synopsebot_> Link: https://doc.perl6.org/language/py-nutshell

[07:14] <synopsebot_> Link: https://doc.perl6.org/language/operators

[07:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/2c1c964942

[07:14] <Geth> ¬¶ doc: cfb6e81645 | (JJ Merelo)++ | doc/Type/Test.pod6

[07:14] <synopsebot_> Link: https://doc.perl6.org/type/Test

[07:14] <Geth> ¬¶ doc: Eliminates non-existing variable

[07:14] <Geth> ¬¶ doc: 

[07:14] <Geth> ¬¶ doc: Also some reflow, some additional comments, overall closes #2466

[07:14] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/cfb6e81645

[07:18] *** andrzejku_ joined
[07:18] *** Sgeo left
[07:18] *** p6bannerbot sets mode: +v andrzejku_

[07:20] <Geth> ¬¶ ecosystem: 5426af2fe4 | (Sam Morrison)++ | 2 files

[07:20] <Geth> ¬¶ ecosystem: Remove Uzu, now available on CPAN

[07:20] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/5426af2fe4

[07:20] <Geth> ¬¶ ecosystem: 6ee2317221 | (Sam Morrison)++ | .travis/testpackagemeta.pl

[07:20] <Geth> ¬¶ ecosystem: revert permissions

[07:20] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/6ee2317221

[07:20] <Geth> ¬¶ ecosystem: 90b18fe782 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | META.list

[07:20] <Geth> ¬¶ ecosystem: Merge pull request #419 from scmorrison/master

[07:21] <Geth> ¬¶ ecosystem: 

[07:21] <Geth> ¬¶ ecosystem: Remove Uzu, now available on CPAN

[07:21] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/90b18fe782

[07:21] *** andrzejku left
[07:21] *** andrzejku_ is now known as andrzejku

[07:25] *** m01ar joined
[07:25] *** p6bannerbot sets mode: +v m01ar

[07:28] *** Sgeo joined
[07:29] *** p6bannerbot sets mode: +v Sgeo

[07:36] *** robertle joined
[07:37] *** p6bannerbot sets mode: +v robertle

[07:38] *** m01ar_ joined
[07:38] *** p6bannerbot sets mode: +v m01ar_

[07:38] *** m01ar_ left
[07:39] *** m01ar_ joined
[07:39] *** p6bannerbot sets mode: +v m01ar_

[07:40] *** m01ar left
[07:40] *** m01ar_ is now known as m01ar

[07:43] *** jmerelo left
[07:57] *** rindolf joined
[07:58] *** zakharyas joined
[07:58] *** p6bannerbot sets mode: +v rindolf

[07:58] *** p6bannerbot sets mode: +v zakharyas

[08:06] *** ufobat___ is now known as ufobat

[08:31] *** dct joined
[08:31] *** p6bannerbot sets mode: +v dct

[08:54] *** discoD left
[08:58] *** coet[work] joined
[08:58] *** p6bannerbot sets mode: +v coet[work]

[09:06] *** scimon joined
[09:07] *** p6bannerbot sets mode: +v scimon

[09:10] *** hamhu3_ left
[09:10] *** squashable6 left
[09:12] *** dct left
[09:14] *** squashable6 joined
[09:14] *** p6bannerbot sets mode: +v squashable6

[09:22] *** hamhu3 joined
[09:22] *** hamhu3 left
[09:23] *** hamhu3 joined
[09:24] *** hamhu3 left
[09:24] *** hamhu3 joined
[09:25] *** p6bannerbot sets mode: +v hamhu3

[09:25] *** dct joined
[09:25] *** p6bannerbot sets mode: +v dct

[09:46] <scimon> So after all my complaining about Module documentation I was alerted to a thing of beauty. Uzu is lovely. 

[09:52] <masak> what's Uzu?

[09:53] * masak .oO( nothing much, what's uzu with you? ) :P

[09:54] <sacomo> scimon, thanks. uzu is a my project, still lots of work to do, but it has a lot of features if you are looking for a static site generator.

[10:10] <scimon> A) I love static site generators B) It LOVE modules with this much documentation. 

[10:11] *** lizmat joined
[10:11] *** p6bannerbot sets mode: +v lizmat

[10:14] <lizmat> weekly: https://opensource.com/article/18/11/failure-option-perl-6

[10:14] <notable6> lizmat, Noted!

[10:16] <sacomo> lizmat, great article. thanks for introducing me to `quietly`, I am going to start using that.

[10:17] <sacomo> scimon, me too. I am working on some big updates / additions for uzu.

[10:21] <SmokeMachine> .

[10:21] <yoleaux> 07:07Z <lizmat> SmokeMachine: not sure, and no time to look at as commuting to London

[10:21] *** p6noob joined
[10:21] *** p6bannerbot sets mode: +v p6noob

[10:24] *** m01ar left
[10:26] *** p6noob left
[10:33] *** lizmat_ joined
[10:33] *** p6bannerbot sets mode: +v lizmat_

[10:33] *** lizmat left
[10:36] *** domidumont left
[10:37] *** tobs` joined
[10:38] *** p6bannerbot sets mode: +v tobs`

[10:49] *** sena_kun joined
[10:50] *** p6bannerbot sets mode: +v sena_kun

[10:50] *** lizmat_ left
[10:54] *** kensanata joined
[10:54] *** p6bannerbot sets mode: +v kensanata

[11:00] *** scimon left
[11:00] *** scimon joined
[11:01] *** tux68 joined
[11:01] *** p6bannerbot sets mode: +v scimon

[11:02] *** p6bannerbot sets mode: +v tux68

[11:14] *** p6noob joined
[11:14] *** p6bannerbot sets mode: +v p6noob

[11:21] *** dct left
[11:24] *** scimon left
[11:25] *** scimon joined
[11:25] *** p6bannerbot sets mode: +v scimon

[11:27] *** rindolf left
[11:27] *** rindolf joined
[11:28] *** p6bannerbot sets mode: +v rindolf

[11:33] *** gregf_ joined
[11:33] *** p6bannerbot sets mode: +v gregf_

[11:35] *** leont joined
[11:36] *** p6bannerbot sets mode: +v leont

[11:44] *** dct joined
[11:44] *** p6bannerbot sets mode: +v dct

[11:48] *** leont left
[11:53] <SmokeMachine> .tell lizmat very good article! Would it worth to tell that currently custom specialization of X::Control won‚Äôt be catched by a CONTROL phaser but will by a CATCH?

[11:53] <yoleaux> SmokeMachine: I'll pass your message to lizmat.

[11:55] *** kurahaupo left
[12:08] *** tux68 left
[12:16] *** DuMu joined
[12:16] *** p6bannerbot sets mode: +v DuMu

[12:18] <DuMu> Hello folks, I'm trying to build Rakudo Perl 6 on Cygwin. Everything seems fine until I get to `src/platform/win32/mmap.c` in the MoarVM folder. Then, I get loads of errors. 

[12:19] <timotimo> buggable: mingw

[12:19] *** kurahaupo joined
[12:19] <timotimo> er

[12:19] <timotimo> buggable: cygwin

[12:19] <timotimo> isn't that our factoid bot

[12:19] <timotimo> huggable: cygwin

[12:19] <huggable> timotimo, nothing found

[12:19] <AlexDaniel> too many bots huh

[12:19] <timotimo> it's probably wrong to use the win32 platform code on cygwin?

[12:19] <DuMu> I've tried loading some of the MinGW modules in Cygwin to get gcc working, that seems to help a bit...

[12:20] <DuMu> could be

[12:20] *** p6bannerbot sets mode: +v kurahaupo

[12:20] <DuMu> how can I stop it from being configured by Configure.pl?

[12:20] <DuMu> (the win32 stuff that is)

[12:20] <timotimo> dunno, the build system scares me

[12:20] <DuMu> :D

[12:20] <DuMu> ouch

[12:21] <DuMu> perhaps I should just erase the win32 dir before running make!

[12:21] <Summertime> if in doubt, do it and then git reset head later

[12:22] <timotimo> that will probably not work

[12:22] <DuMu> aye

[12:23] <Summertime> thats no fun though

[12:23] *** fnux left
[12:23] *** zakharyas left
[12:28] <Summertime> the probable thing would be an incorrect platform check? that shouldn't be the hardest thing to track down

[12:29] <Summertime> I'd volunteer but no windows machines

[12:38] <Summertime> if the issue is within Configure.pl, the two main tests are: $Config{archname} , $^O

[12:40] <Summertime> but it also looks like you might be able to pass `--os=posix` and have that work

[12:44] <DuMu> aha!!!

[12:44] <DuMu> I hope so, because practically every line is `if ($^O eq 'MSWin32) ...`

[12:45] *** lucasb joined
[12:46] *** p6bannerbot sets mode: +v lucasb

[12:50] <DuMu> well, $^O on Cygwin returns ... "cygwin"

[12:51] *** coet[work] left
[13:03] <Summertime> yeah I think the use Config ; $Config{archname} might be the problematic one

[13:06] *** coet[work] joined
[13:06] *** p6bannerbot sets mode: +v coet[work]

[13:07] *** coet[work] left
[13:11] *** cygx joined
[13:12] *** p6bannerbot sets mode: +v cygx

[13:12] <cygx> DuMu: you can pass `--os cygwin` to Configure.pl, but I doubt it'll do the right thing

[13:12] <cygx> libuv used to be broken on cygwin, so there was no point in making the moarvm build work

[13:15] <DuMu> that is too bad...

[13:15] <DuMu> so... no Perl6 on Cygwin

[13:16] <DuMu> seems you are right... " no idea how to build '3rdparty/libuv/libuv.a' "

[13:16] <DuMu> I passed "--os=posix"

[13:20] <cygx> apparently, libuv works on cygwin nowadays (cf https://github.com/libuv/libuv/issues/2034 )

[13:21] <cygx> so in principle, someone could add cygwin support to moarvm

[13:22] <cygx> DuMu: you could try building libuv seperately and then passing --has-libuv to Configure.pl

[13:31] *** gregf_ left
[13:31] *** R3sol left
[13:34] *** domidumont joined
[13:34] *** p6bannerbot sets mode: +v domidumont

[13:36] *** domidumont left
[13:37] *** scimon left
[13:37] *** uzl joined
[13:37] <DuMu> Thanks @cygx!

[13:37] *** domidumont joined
[13:37] *** p6bannerbot sets mode: +v uzl

[13:38] *** p6bannerbot sets mode: +v domidumont

[13:40] *** domidumont left
[13:42] <Geth> ¬¶ doc: uzluisf++ created pull request #2467: Change from list items to lower-level headings and whitespace

[13:42] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2467

[13:43] <uzl> .seen jmerelo

[13:43] <yoleaux> I saw jmerelo 06:57Z in #perl6: <jmerelo> right

[13:44] *** dct left
[13:45] <uzl> .tell Hey, jmerelo! Could you please review this PR: https://github.com/perl6/doc/pull/2467?

[13:45] <yoleaux> uzl: What kind of a name is "Hey,"?!

[13:46] *** scimon joined
[13:46] *** p6bannerbot sets mode: +v scimon

[13:47] <uzl> .tell Hey, jmerelo! Could you please review this PR: https://github.com/perl6/doc/pull/2467?

[13:47] <yoleaux> uzl: What kind of a name is "Hey,"?!

[13:48] <uzl> What? Is youleaux going mad? This is weird. 

[13:48] <sena_kun> uzl, format is ".tell $nickname "

[13:50] <sena_kun> uzl, can you look into a conflict?

[13:51] <sena_kun> it seems to me like a simple wrapping issue. And I personally like more sparse variant better.

[13:51] <uzl> sena_kun: thanks! I wasn't even realizing it.

[13:52] <sena_kun> uzl, you can use github interface if you fancy, it's quite nice imho.

[13:53] *** zacts left
[13:55] *** p6noob left
[13:56] <uzl> sena_kun: it seems I didn't pull from upstream to collect all the latest changes. What should be the course action here?

[13:57] <sena_kun> uzl, if you are using github editor, just remove obsolete part(with `====` things around it, leaving the whole section as it could look in master) and `Conflict is resolved` or something button. :)

[13:58] *** domidumont joined
[13:59] *** p6bannerbot sets mode: +v domidumont

[13:59] <sena_kun> uzl, exact button is `Mark as resolved`.

[13:59] *** cygx left
[13:59] <uzl> sena_kun: great! will do that.

[14:01] *** dct joined
[14:01] *** p6bannerbot sets mode: +v dct

[14:02] <Geth> ¬¶ doc/master: 4 commits pushed by (Luis F. Uceta)++, Altai-man++

[14:02] <Geth> ¬¶ doc/master: f6fa825d42 | Change list items to lower-level headings

[14:02] <Geth> ¬¶ doc/master: ef50b8a7ea | whitespace and c<> -> C<>

[14:02] <Geth> ¬¶ doc/master: 6d865bb7b0 | Merge branch 'master' into master

[14:02] <Geth> ¬¶ doc/master: 8be0d24eb4 | Merge pull request #2467 from uzluisf/master

[14:02] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/cfb6e816456a...8be0d24eb4de

[14:02] <sena_kun> uzl++

[14:03] <uzl> sena_kun: thanks! ;-)

[14:03] <DuMu> Aha, happily, libuv can be installed using the official Cygwin setup app!

[14:06] *** tobs` left
[14:12] <sena_kun> m: subset A of Str; subset B of Str; multi f(A $a) { 'A'.say }; multi f(B $b) { 'B'.say }; my B $b = 'haha'; f($b);

[14:12] <camelia> rakudo-moar e7ce194a7: OUTPUT: ¬´A‚ê§¬ª

[14:12] <sena_kun> is this a bug or I just want too much?

[14:12] <sena_kun> but

[14:13] <sena_kun> subset A of Str; subset B of Str; multi f(B $b) { 'B'.say }; multi f(A $a) { 'A'.say }; my A $a = 'haha'; f($a);

[14:13] <evalable6> sena_kun, rakudo-moar e7ce194a7: OUTPUT: ¬´B‚ê§¬ª

[14:13] <sena_kun> so it is sensitive to where `multi` method is in a file. :S

[14:16] <sena_kun> ooh, I see https://rt.perl.org/Public/Bug/Display.html?id=123577

[14:17] <jnthn> Yes, subset types are tie-breakers, and first matching one wins

[14:18] <sena_kun> I see

[14:18] *** zakharyas joined
[14:18] <sena_kun> is there nothing I can do besides using a wrapper class? I am not particulary hesistant of it, just what if.

[14:19] <jnthn> Values don't have subset types

[14:19] <jnthn> They just might match them

[14:19] *** p6bannerbot sets mode: +v zakharyas

[14:19] <jnthn> So "my A $a" is saying that what's stored into $a has to match the subset type

[14:19] <sena_kun> ah, I see now.

[14:19] <jnthn> The multi-dispatch works on the actual type; the declared type of the variable it happens to be stored in isn't relevant.

[14:20] <sena_kun> well, then never mind, I'll use a wrapper, I guess. thanks.

[14:20] <jnthn> np

[14:26] *** loops joined
[14:27] *** p6bannerbot sets mode: +v loops

[14:31] *** loops left
[14:35] *** loops joined
[14:35] *** p6bannerbot sets mode: +v loops

[14:36] *** curan left
[14:37] *** dct left
[14:37] <uzl> .tell lizmat Great article! BTW, `say $foo;` doesn't throw a warning even when outside of the quietly block. I guess you meant to use `print`?.

[14:37] <yoleaux> uzl: I'll pass your message to lizmat.

[14:38] <uzl> .tell lizmat I also have a question about the article on containers: https://colabti.org/irclogger/irclogger_log/perl6?date=2018-11-20#l424

[14:38] <yoleaux> uzl: I'll pass your message to lizmat.

[14:38] *** uzl left
[14:44] *** kensanata left
[14:45] <tbrowder___> .ask DrForr Can one of your modules be used to debug Rakudo NQP Grammar.nqp?

[14:45] <yoleaux> tbrowder___: I'll pass your message to DrForr.

[14:48] <DuMu> Still no luck building p6 on cygwin :(

[14:49] <Summertime> don't have windows 10 for WSL use?

[14:49] <DuMu> It is now failing here: cc -o moar -O -DNDEBUG -Wl,-rpath,"//home/ludov/rakudo/install/lib"  src/main.o -L. -lmoar

[14:49] <DuMu> WSL is ridiculously slow on this laptop

[14:49] <DuMu> at least the Debian version is

[14:49] <Summertime> damn

[14:50] <DuMu> maybe it isn't too bad

[14:50] <DuMu> I'll give it a shot. It would be great to have it on Cygwin though. 

[14:52] *** kensanata joined
[14:52] *** p6bannerbot sets mode: +v kensanata

[14:53] <DuMu> I have it installed on Windows anyway, it's just a step down having to use cmd.exe as a shell!

[14:57] <Summertime> hm, you'll still need to use cmd as your terminal, but, msys2 (iirc what the git installer auto-installs) will give you bash and I think interoperability with win32 programs

[15:02] *** Resol joined
[15:02] *** p6bannerbot sets mode: +v Resol

[15:03] <DuMu>  Summertime: WSL seems to be using xterm

[15:03] <DuMu> for me 

[15:03] *** devmikey joined
[15:03] *** p6bannerbot sets mode: +v devmikey

[15:05] <DuMu> When I run `p6doc -f IO.say` in cmd, I am seeing stuff like this: "say Range;        # OUTPUT: ‚î¨¬Ω(Range)√î√â√±‚î¨‚ïó"

[15:05] <DuMu> Is that meant to be happening?

[15:10] *** xinming joined
[15:11] *** p6bannerbot sets mode: +v xinming

[15:12] *** xinming_ left
[15:17] <tbrowder___> DrForr: ignore my question above‚Äîjust revisiting yr perl parser answered it

[15:27] *** ChoHag_ is now known as ChoHag

[15:27] *** coet[work] joined
[15:27] *** p6bannerbot sets mode: +v coet[work]

[15:30] <DuMu> My MacBook correctly renders the chevrons in the p6docs. cmd.exe evidently isn't Unicode-aware. 

[15:50] <SqrtNegInf> I wonder if the behavior of the anonymous state variable here expected:

[15:50] <SqrtNegInf> m: say "increments NOT {++$}" for ^3; say "increments OK " ~ ++$ for ^3;

[15:50] <camelia> rakudo-moar e7ce194a7: OUTPUT: ¬´increments NOT 1‚ê§increments NOT 1‚ê§increments NOT 1‚ê§increments OK 1‚ê§increments OK 2‚ê§increments OK 3‚ê§¬ª

[15:51] <SmokeMachine> m: subset NotARole of Any where so *.^lookup: "required-method"; class A { method required-method {} }; multi bla(NotARole) { "not a role" }; multi bla($) {"anything else"}; say bla A; say bla 42

[15:51] <camelia> rakudo-moar e7ce194a7: OUTPUT: ¬´not a role‚ê§anything else‚ê§¬ª

[15:52] <SqrtNegInf> Does interpolation in the string count as a separate 'lexical scope' (as per documentation)?  I wouldn't think so, and at some point in the past both versions would increment.  

[15:53] <SmokeMachine> Does subset can be used as golang's interfaces? ^^

[15:54] <SmokeMachine> I mean, like interfaces that bo not need to be "used" to be implemented...

[15:54] <SmokeMachine> was that the intention?

[15:57] <timotimo> SqrtNegInf: every { } gets a lexical scope

[15:57] <timotimo> SqrtNegInf: in order to do what you want there, you can use $($++) instead of {$++}

[15:58] <SqrtNegInf> That did the trick, thanks.

[16:01] <timotimo> YW

[16:09] *** kensanata left
[16:14] <Poohman> hello all, im trying to install cro in my windows box using zef - but it fails because "tar p5star or unzip" is missing

[16:15] <moritz> so, install tar or unzip?

[16:15] <Poohman> are these dependencies to be installed using zef?

[16:15] <moritz> no

[16:15] <Poohman> or should they be installed separately

[16:16] <Poohman> In windows?

[16:16] <moritz> yes, I think so

[16:17] <Poohman> tar.exe - hmmm - let me search

[16:17] <Poohman> thanls

[16:18] <Poohman> thanks

[16:18] *** DuMu left
[16:23] *** domidumont left
[16:30] <Poohman> moritz: p5tar seems to be a script which is a part of zef

[16:34] *** Sound joined
[16:34] *** p6bannerbot sets mode: +v Sound

[16:35] <Poohman> if I search for it using zef it refers back to zef

[16:35] <Poohman> ill try to update zef and try

[16:37] *** musca left
[16:38] *** robertle left
[16:44] *** Sound left
[16:54] *** leont joined
[16:55] *** p6bannerbot sets mode: +v leont

[17:03] *** kerframil joined
[17:03] *** p6bannerbot sets mode: +v kerframil

[17:04] *** Sound joined
[17:04] *** p6bannerbot sets mode: +v Sound

[17:08] *** kerframil left
[17:08] *** Sound left
[17:22] *** molaf joined
[17:23] *** p6bannerbot sets mode: +v molaf

[17:25] *** molaf left
[17:35] *** scimon left
[17:39] *** sauvin left
[17:47] <loops> Where would the difference between  Map.new: (1,2)  and  Map.new(1,2)   be found in the docs?

[17:51] *** rindolf left
[17:57] *** rindolf joined
[17:58] *** p6bannerbot sets mode: +v rindolf

[18:06] <loops> Here's one little tidbit about "method call colon syntax", https://docs.perl6.org/language/syntax#Precedence_drop

[18:10] *** domidumont joined
[18:11] *** domidumont left
[18:12] *** domidumont joined
[18:13] *** p6bannerbot sets mode: +v domidumont

[18:17] *** kerframil joined
[18:17] *** p6bannerbot sets mode: +v kerframil

[18:27] *** coet[work] left
[18:27] *** Sound joined
[18:27] *** p6bannerbot sets mode: +v Sound

[18:28] *** Resol left
[18:38] <Juerd> loops: The difference between .foo(x) and .foo: x is purely syntactic

[18:38] <Juerd> loops: I don't think this is documented

[18:39] <Juerd> loops: Note that the extra parentheses in Map.new: (1,2)  make it like  Map.new((1,2))

[18:39] <Juerd> This doesn't matter for Map.new, but it might for other method calls

[18:40] *** phogg left
[18:43] <loops> Juerd, thanks.  My example wasn't the best, I was just trying to figure out a search term for the docs.

[18:44] *** phogg joined
[18:44] *** p6bannerbot sets mode: +v phogg

[18:50] *** CindyLin1 is now known as CindyLinz

[18:53] *** domidumont left
[18:54] <SmokeMachine> Do you guys think something like this would make any sense? https://gist.github.com/FCO/b23b055ada6ef458a8c3c1d29e39aa91

[18:55] <SmokeMachine> (Im not sure about the name)

[18:56] <SmokeMachine> i think it would be useful to define a set of methods that a attribute/parameter/something must implement but it will not need to `does` a role...

[18:56] <SmokeMachine> like golang interfaces

[18:57] <moritz> you can kinda do that with subsets

[18:58] *** domidumont joined
[18:58] <moritz> m: subset XY of Any where {.can('x') && .can('y') }

[18:58] <camelia> rakudo-moar 8e27d5f5b: ( no output )

[18:58] <moritz> m: subset XY of Any where {.can('x') && .can('y') }; say class { has ($.x, $.y) } ~~ XY; say Int ~~ XY

[18:58] <camelia> rakudo-moar 8e27d5f5b: OUTPUT: ¬´True‚ê§False‚ê§¬ª

[18:59] *** p6bannerbot sets mode: +v domidumont

[18:59] <SmokeMachine> moritz: yes... but with subset you would have to implement the details to test the methods...

[18:59] <SmokeMachine> https://gobyexample.com/interfaces

[19:00] <SmokeMachine> moritz: yes... but you had to implement the test if the methods x and y exists...

[19:03] <moritz> SmokeMachine: hence "kinda" :)

[19:04] *** olinkl left
[19:04] *** zakharyas left
[19:04] *** olinkl joined
[19:04] *** p6bannerbot sets mode: +v olinkl

[19:06] <SmokeMachine> moritz: :)

[19:07] <SmokeMachine> does any one know if LPW will be streamed?

[19:16] *** Sound left
[19:21] <Geth> ¬¶ ecosystem: 089e9749e4 | (Lucas Buchala)++ (committed using GitHub Web editor) | META.list

[19:21] <Geth> ¬¶ ecosystem: Add Duo, a pair object, to the ecosystem

[19:21] <Geth> ¬¶ ecosystem: 

[19:21] <Geth> ¬¶ ecosystem: See: https://github.com/lucasbuchala/p6pairs

[19:21] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/089e9749e4

[19:30] <lucasb> ^^ My first dist :) Any comments or review welcomed. 

[19:31] <lucasb> after the ecosystem is updated, I would appreciate if anyone could confirm 'zef install Duo' works

[19:31] <SmokeMachine> lucasb: Duo won't always be reflexive?

[19:31] <lucasb> in the current code, yes. always [Any,Any]

[19:32] <lucasb> one can create a Duo::Role[Str, Cool] or whatever, but currently, the "class Duo is Duo::Role[Any,Any]" is hard coded

[19:34] <AlexDaniel> lucasb: obligatory comment ‚ÄúWhy not CPAN?‚Äù

[19:34] <lucasb> obviously the documentation is lacking, but I intend to fill with the differences between Pair vs Duo

[19:34] <lucasb> AlexDaniel: idk, first time doing this :)

[19:35] <lucasb> let me get some experience then maybe in the future I put in CPAN

[19:36] <Poohman> hello - having some trouble installing Cro in windows using zef

[19:36] <Poohman> If the dependencies are in tar.gz format there seems to be a problem

[19:37] <Poohman> I have installed git and gnu tar - updated the path file

[19:37] <Poohman> path variable I mean

[19:37] *** molaf joined
[19:38] <Poohman> ther is a p5tar script which seems to be written for such an evnetuality

[19:38] <Poohman> but I guess I need perl to be installed for that 

[19:38] *** p6bannerbot sets mode: +v molaf

[19:39] <Poohman> I would like to try that as well - what version of perl is the best choice for windows

[19:39] <Poohman> ?

[19:41] *** phogg left
[19:53] *** phogg joined
[19:53] *** p6bannerbot sets mode: +v phogg

[19:55] <timotimo> you should be able to extract the distributions and "zef install ." in the folder

[19:56] *** kurahaupo left
[19:58] <Poohman> timotimo : ok 

[19:59] <timotimo> it could be interesting to figure out how to make it work anyway

[19:59] <timotimo> but just making it work right now could be more important

[19:59] <Poohman> i can try that - I just installed Activestate perl and it seems to work now 

[19:59] <timotimo> oh, that's good

[19:59] *** kurahaupo joined
[20:00] <Poohman> just googled perl and the installed this

[20:00] *** p6bannerbot sets mode: +v kurahaupo

[20:00] *** phogg left
[20:01] *** phogg joined
[20:01] *** phogg left
[20:01] *** phogg joined
[20:01] *** p6bannerbot sets mode: +v phogg

[20:01] <Poohman> timotimo : are you involved in the CommaIDE project??

[20:02] *** p6bannerbot sets mode: +v phogg

[20:05] <timotimo> yes, though i haven't put in work in a month or two

[20:05] <timotimo> can i do something for you?

[20:06] <Poohman> I had some trouble updating because everytime I downloaded the update for Windows, the saved filename was a long strange one and I didnt know what to do with it

[20:06] <Poohman> last week I tried renaming it with an .EXE at the end and then could update it

[20:07] <timotimo> you went to the subscriber login and used the "Comma for Windows" link?

[20:07] <Poohman> yes

[20:07] <timotimo> interesting. when i click that i just get a .exe directly. could it be some antivirus software interfering?

[20:07] <Poohman> just wanted to inform you as Zoffix told me that Jonathon and you could help me regarding this

[20:09] <Poohman> I just followed the prompt from the IDE for update - I guess it took me to the page you are referring to

[20:09] <timotimo> does it still give you the strange filename when you click on that download link right now?

[20:09] <Poohman> let me try

[20:10] <Poohman> no now its a proper exe with a small name

[20:11] <timotimo> that's quite strange, but i'm glad it somehow got resolved

[20:12] <Poohman> looks ok now

[20:13] <timotimo> you don't happen to remember the old filename, or the time of day and date you downloaded it? perhaps it can be found in the web server's log

[20:14] <Poohman> i was searching for it but must have deleted it

[20:14] <Poohman> was very long - the name I mean

[20:14] <timotimo> OK

[20:14] <timotimo> perhaps like a sha1 or sha256 hash?

[20:14] <Poohman> it seemed more like a link than a name

[20:15] <timotimo> like a full url with a path name inside it? perhaps with %20 encoding?

[20:16] <timotimo> AFK BBIAB

[20:16] <Poohman> got it

[20:17] <Poohman> commaCO-2018.10.0.com_20181012_us_storage_goog4_request&x-goog-date=20181012T181405Z&x-goog-expires=120&x-goog-signedheaders=host

[20:17] <Poohman> this was the name of the downloaded file

[20:17] <Poohman> 142,285 KB

[20:18] <buggable> New CPAN upload: App-Tasks-0.0.13.tar.gz by JMASLAK http://modules.perl6.org/dist/App::Tasks:cpan:JMASLAK

[20:18] <Poohman> I had this problem for some weeks and just renamed it with an exe at the end and it worked

[20:19] <sena_kun> hmm, that's odd. what browser do you use?

[20:20] <Poohman> normally Chrome - but when I got redirected from the Comma IDE it was internet explorer

[20:20] <sena_kun> ah

[20:21] <Poohman> I did this many a times - not sure if I always did it with internet explorer

[20:21] <sena_kun> well, I can believe Internet Explorer can ruin downloads.

[20:21] <sena_kun> it is not very reliable when it comes to browsing pages in terms of quality. I think it should be totally okay in Chrome.

[20:22] <Poohman> ok 

[20:40] <Poohman> got Cro installed via zef but only after overriding the tests - tests seem to fail for it - will check tomorrow- need to hit the sack - thanks for all the help

[20:41] <sena_kun> sometimes tests fail. it's a known issue for now, unfortunately, but it's easier to note than fix. :S

[20:41] *** pecastro joined
[20:41] <sena_kun> though it's still mosly okay to use on a daily basis.

[20:42] *** p6bannerbot sets mode: +v pecastro

[20:52] *** kurahaupo_ joined
[20:53] *** kurahaupo left
[20:53] *** p6bannerbot sets mode: +v kurahaupo_

[20:55] *** jamesaxl joined
[20:56] *** p6bannerbot sets mode: +v jamesaxl

[20:56] *** holyghost left
[20:56] *** holyghost joined
[20:56] <jamesaxl> which book do you recommend for perl6 ?

[20:57] *** p6bannerbot sets mode: +v holyghost

[20:58] <sena_kun> jamesaxl, have you saw https://perl6book.com/img/p6-book-flowchart.png ?

[21:01] <jamesaxl> sena_kun: that's nice, Thank you very much

[21:02] *** kurahaupo_ left
[21:02] *** kurahaupo joined
[21:03] *** p6bannerbot sets mode: +v kurahaupo

[21:06] *** sftp left
[21:07] *** sftp joined
[21:07] *** p6bannerbot sets mode: +v sftp

[21:11] <jamesaxl> does perl6 has something like Carton ?

[21:11] <mornfall> hmm, do scalars in perl6 get a type? as in, can i tell a string from a number?

[21:12] <jamesaxl> I just discovered rakudobrew

[21:12] <sena_kun> jamesaxl, rakudobrew takes latest from git, iirc, so you likely don't want to use it. or, what is your purpose?

[21:12] <sena_kun> mornfall, you mean, like...

[21:13] <sena_kun> m: my $a = "Foo"; say $a ~~ Int; say $a ~~ Str;

[21:13] <camelia> rakudo-moar 8e27d5f5b: OUTPUT: ¬´False‚ê§True‚ê§¬ª

[21:13] <sena_kun> ?

[21:13] <mornfall> sena_kun: more like my $a = "7"; but yes

[21:13] <sena_kun> ah... well, in your case it is Str for sure.

[21:13] <sena_kun> so I doubt it'll work like that.

[21:14] <sena_kun> but you can match if it's an Int using a regex, etc. depending on what you want to do.

[21:14] <jamesaxl> sena_kun: I just need something like Carton, install package locally without building new perl

[21:14] <sena_kun> jamesaxl, re Carton: maybe https://github.com/FCO/6pm can help?

[21:15] <mornfall> sena_kun: no, i *want* that to be Str

[21:15] <mornfall> sena_kun: in p5 it is pretty much impossible to tell

[21:15] <sena_kun> jamesaxl, do you want to install your local package with Perl 6 package manager? It will be just `zef install .` inside of package directory. Or `zef install DirectoryWithMyModule`.

[21:16] <jamesaxl> sena_kun: thank you I get it

[21:16] <sena_kun> mornfall, sorry, don't know Perl 5 so well. Maybe an example or a use-case(even with pseudo-code will do) can help.

[21:17] *** kurahaupo_ joined
[21:18] *** p6bannerbot sets mode: +v kurahaupo_

[21:19] <mornfall> sena_kun: well, as long as "7" ~~ Str in p6, I'm happy :p

[21:20] <sena_kun> it surely is. :)

[21:20] <mornfall> (that'd be a good excuse to port over this crummy thing to p6 perhaps)

[21:21] *** kurahaupo_ left
[21:21] * sena_kun usually does various type-related tricks and that'd be tricky to debug otherwise

[21:22] *** kurahaupo left
[21:22] *** kurahaupo joined
[21:23] *** p6bannerbot sets mode: +v kurahaupo

[21:25] *** dct joined
[21:25] *** p6bannerbot sets mode: +v dct

[21:27] *** kurahaupo left
[21:32] *** moony left
[21:33] *** moony joined
[21:33] *** p6bannerbot sets mode: +v moony

[21:33] *** moony left
[21:34] *** moony joined
[21:34] *** p6bannerbot sets mode: +v moony

[21:34] *** domidumont left
[21:45] <SmokeMachine> jamesaxl: had you taken a look at 6pm? 

[21:47] <jamesaxl> SmokeMachine: before no, now I check it on giyhub

[21:47] <SmokeMachine> Oh! I just saw! sena_kun thanks for talking about 6pm!

[21:48] <sena_kun> SmokeMachine, well, I thought I definetely saw mentioning of `Carton` at most wanted modules page, though I myself don't have a clue what `Carton` is, and saw a link to 6pm there. :)

[21:59] *** NeVada joined
[21:59] *** p6bannerbot sets mode: +v NeVada

[22:00] <NeVada> Hey, new guy here. I was just wondering, are there any downsides to using Perl6 on Windows rather than Linux?

[22:00] <sena_kun> o/

[22:02] <timotimo> we don't have very many volunteers developing perl6 on windows, so if you like running versions of perl6 right out of git, you may encounter bugs more often

[22:05] <NeVada> Thanks. I learned a bit of Perl5 in the past and I'm trying to get the hang of Perl6 now. With Perl5, I often encountered problems. Think I was using Strawberry Perl.

[22:06] <timotimo> perl6 is very different, I hope you'll find very different problems with it :)

[22:07] <NeVada> So I've heard, yes. It has a lot of potential.

[22:07] <timotimo> we like to think so :)

[22:08] <AlexDaniel> heh, what about a built in class called ‚ÄúPotential‚Äù

[22:09] <AlexDaniel> don't know what it'd do, but we can have a lot of it :P

[22:09] <NeVada> Well, classes is something I like about Perl6. I no longer need to do weird things with modules to simulate classes like in Perl5.

[22:10] <timotimo> to be fair, there's modules that make that nicer ... i think? i don't actually write any perl5 :|

[22:11] <timotimo> why don't we rename "Promise" "Potential"

[22:11] <AlexDaniel> timotimo: have you ever seen anyone show off this thing? ‚Üì

[22:11] <AlexDaniel> m: say (‚Äòabc‚Äô x 999999999).substr: *-5, 5

[22:11] <camelia> rakudo-moar 8e27d5f5b: OUTPUT: ¬´bcabc‚ê§¬ª

[22:11] <timotimo> i have not

[22:12] <AlexDaniel> I feel like most blog posts/talks don't go beyond 0.1+0.2==0.3‚Ä¶ :)

[22:12] <timotimo> hah

[22:12] <NeVada> Well, Rakudo on Windows seems to be doing fine so far.

[22:12] <timotimo> to be fair, "abc" x 9999999999 is kind of not very useful on the day-to-day?

[22:12] <timotimo> that's good to hear!

[22:12] <sena_kun> re potential: I think a constant `$potential = ‚àû` is sufficient. :)

[22:12] <AlexDaniel> yes but

[22:13] <AlexDaniel> m: say (‚ÄòAAA‚Äô ~ ‚Äòabc‚Äô x 999999999 ~ ‚ÄòZZZ‚Äô).substr: *-5, 5

[22:13] <camelia> rakudo-moar 8e27d5f5b: OUTPUT: ¬´bcZZZ‚ê§¬ª

[22:13] <AlexDaniel> it's not limited to just repetitions

[22:13] <timotimo> that's true

[22:13] <timotimo> but the moment you try to run a regex against it, your memory's gonna run out :)

[22:13] <NeVada> I wish I could fully dedicate my laptop to Linux, but it has some very weird ACPI-related issues I run into. Also, the touchpad doesn't even work on most distributions. ASUS really doesn't like making their machines Linux compatible...

[22:13] <timotimo> because the first thing our regex engine does is make ropy strings into flat arrays for performance reasons

[22:14] <timotimo> oh, that sucks to hear

[22:14] <timotimo> but i keep hearing windows 10's WSL is super good

[22:14] <AlexDaniel> m: say (‚ÄòAAA‚Äô ~ ‚Äòabc‚Äô x 999999999 ~ ‚ÄòZZZ‚Äô).contains: ‚ÄòabcZ‚Äô

[22:14] <AlexDaniel> I feel like it's an optimization opportunity here

[22:15] <NeVada> Well, running the real thing would make me feel better than using WSL.

[22:15] <camelia> rakudo-moar 8e27d5f5b: OUTPUT: ¬´(timeout)¬ª

[22:15] *** lizmat joined
[22:15] *** p6bannerbot sets mode: +v lizmat

[22:15] <AlexDaniel> there's no point in trying to match the same repeated string over and over

[22:15] <timotimo> go ahead, you can totally have a look at the implementation of that :)

[22:15] <AlexDaniel> true that maybe not super useful in day to day stuff, but that again could've been a cool thing to show off :)

[22:18] *** dct left
[22:18] <NeVada> I'm not very educated in this sense. Is Larry Wall advocating for either Perl5 or Perl6 currently? I tried to find something online, but nothing conclusive showed up.

[22:19] <timotimo> i think larry likes both of his brain-children in the perl family very much

[22:20] <NeVada> Seems fair.

[22:21] <timotimo> maybe love is the appropriate word when using a family/parenting thing out of it

[22:21] *** sftp left
[22:22] *** sftp joined
[22:22] *** p6bannerbot sets mode: +v sftp

[22:26] <NeVada> Is there any easy to use Perl6 web application framework?

[22:28] <sena_kun> Cro? Though not exactly a web framework, as you need to take care about model(DB) layer and templating yourself, as Cro::HTTP only takes care of nice serving.

[22:28] <NeVada> Will try, thank you.

[22:28] <sena_kun> Also Bailador maybe.

[22:29] <sena_kun> NeVada, https://cro.services/ <-

[22:29] <NeVada> Much appreciated.

[22:30] <timotimo> cro is cool for all of its async/multithreaded/reactive features, and it does http/2 with push promises and also websockets

[22:30] <timotimo> but cro is really currently mainly meant for microservices

[22:30] <timotimo> so doesn't have much html related things embedded into it

[22:31] <timotimo> that said, there's https://github.com/jnthn/cro-webapp which has a prototype of a html templating library

[22:31] <sena_kun> yup, exactly. and there are some ssues with stability right now, not really seen too often though, but 1 run in a 200 can die. :S

[22:33] <sena_kun> *issues

[22:33] <timotimo> i'm using it with great success for the moarvm performance analysis tool

[22:37] *** SourceBaby joined
[22:37] *** ChanServ sets mode: +v SourceBaby

[22:38] <NeVada> It seems zef install Bailador doesn't really like something on Windows. http://prntscr.com/llswjd

[22:38] *** Sgeo_ joined
[22:38] *** p6bannerbot sets mode: +v SourceBaby

[22:39] <AlexDaniel> heh, expected \n but got \r\n

[22:39] *** p6bannerbot sets mode: +v Sgeo_

[22:40] <sena_kun> https://github.com/Bailador/Bailador/issues/295

[22:40] *** Sgeo left
[22:41] <NeVada> So, I guess --force-test is the way to go?

[22:41] <NeVada> Thank you for the link to the issue, btw.

[22:41] <sena_kun> yes, it might be.

[22:47] *** dct joined
[22:47] *** p6bannerbot sets mode: +v dct

[22:56] *** moony left
[22:57] *** moony joined
[22:57] *** p6bannerbot sets mode: +v moony

[23:03] *** NeVada left
[23:15] <AlexDaniel> ‚ÄúUnboundLocalError: local variable 'foo' referenced before assignment‚Äù

[23:15] <AlexDaniel> why did you even run then!!!

[23:16] <AlexDaniel> other languages are so rage inducing sometimes :)

[23:26] *** rindolf left
[23:47] *** dct left
[23:49] <lucasb> https://gist.github.com/lucasbuchala/9340fcfee0d8671d8572b002d7418172

[23:50] <lucasb> ^^ I just can't make that work

[23:50] <lucasb> grabbed this idea/snippet from SmokeMachine++

[23:51] *** Ven`` joined
[23:52] *** p6bannerbot sets mode: +v Ven``

[23:52] <lucasb> the intention is: Duo.new(1, 2) should be a Duo::Role[Any, Any]

[23:53] <lucasb> because I choosed [Any, Any] to be the default generic pair

[23:54] <lucasb> but it should be possible to also create things like Duo[Int, Str].new(1, "foo"), that should do Duo::Role[Int, Str]

[23:54] <sena_kun> lucasb, don't know how to ask maybe, are you trying to implement a Pair with more features or?

[23:54] <lucasb> yup, 

[23:54] <lucasb> just playing with the idea

[23:55] <sena_kun> ah, ok. was wandering is there something cool missing in plain Pair I am not aware enough about. :)

[23:55] <lucasb> a generic nonsense useless pair :)

[23:55] <lucasb> well, the API is different

[23:56] <lucasb> for example, mypair.List returns a 2-elem list (key, value)

[23:56] <lucasb> core P6 pair isn't made for this kind of use :)

[23:57] <sena_kun> I see

