[00:00] *** p6bannerbot sets mode: +v w_richard_w

[00:01] *** nadim left
[00:04] <timotimo> ohai jmaslak 

[00:08] *** theorbtwo7 joined
[00:08] *** theorbtwo7 left
[00:09] <ryn1x> jmaslak: That worked! It was so easy... all I did was wrap the whole section of function in .cpp and .h with: extern "C" { }

[00:10] <ryn1x> nm now shows the name are not mangled too: 0000000000002d10 T TinyTIFFReader_open

[00:10] <ryn1x> and the perl6 test passes with the unmangled symbol =)

[00:12] *** w_richard_w left
[00:14] *** sno joined
[00:15] *** p6bannerbot sets mode: +v sno

[00:17] *** dct left
[00:17] <jmaslak> Awesome, glad to help!

[00:20] *** sno left
[00:25] <ryn1x> hmm... not working for overloaded functions though... might just need to rename those

[00:26] <jmaslak> Yes, overloads will be one of the limitations - you might make an extern C version of those that calls the overloaded ones.  That should work.

[00:32] <timotimo> overloads are at least one part of the reason that name mangling exists; that's how i think of it anyway

[00:33] *** mowcat left
[00:34] *** thundergnat left
[00:34] *** mowcat joined
[00:35] *** p6bannerbot sets mode: +v mowcat

[00:37] *** mowcat left
[00:37] *** mowcat joined
[00:38] *** mowcat left
[00:41] *** mowcat joined
[00:42] *** p6bannerbot sets mode: +v mowcat

[00:47] *** graphene left
[00:49] *** graphene joined
[00:50] *** p6bannerbot sets mode: +v graphene

[00:51] *** mahdouch87 joined
[00:52] *** p6bannerbot sets mode: +v mahdouch87

[00:53] *** mahdouch87 left
[00:58] *** sno joined
[00:58] *** p6bannerbot sets mode: +v sno

[01:03] *** sno left
[01:03] *** molaf left
[01:20] *** daotoad left
[01:22] *** kktt joined
[01:23] *** p6bannerbot sets mode: +v kktt

[01:23] <kktt> Is there any IDE could be use on linux

[01:23] *** JackFly26 joined
[01:23] *** p6bannerbot sets mode: +v JackFly26

[01:24] <JackFly26> hi

[01:24] <kktt> hi

[01:24] <JackFly26> im trying to make a language parser with grammars

[01:25] <JackFly26> not working out

[01:26] <kktt> oh , i couldn't help u. i am a newbie. I am finding a IDE here.

[01:27] <lookatme_q> kktt, maybe try ATOM/VSCODE

[01:27] <JackFly26> oh

[01:27] <JackFly26> i use vs code

[01:27] <lookatme_q> or Emacs/Vim

[01:27] <kktt> linux?

[01:27] <JackFly26> i apologize in advance

[01:27] <kktt> ok. i will try vim.

[01:27] <JackFly26> my cat is near my pc

[01:27] *** lizmat left
[01:27] <lookatme_q> It's all have plugin for Perl 6

[01:28] <lookatme_q> :)

[01:28] <kktt> ok. thank u .dear lookatme_q

[01:28] <lookatme_q> welcome

[01:28] <JackFly26> how would i share code

[01:28] <kktt> do you use vim?

[01:28] <JackFly26> ‮

[01:29] <JackFly26> 

[01:29] <JackFly26> oops

[01:30] <kktt> you cat...

[01:31] <JackFly26> no that was me

[01:31] <JackFly26> round with unicode

[01:33] *** lucasb left
[01:34] <JackFly26> how should i send code on this

[01:35] <kktt> on irc?

[01:39] <JackFly26> yes

[01:39] <kktt> I think you could use the <https://pastebin.com/>

[01:39] <JackFly26> ok

[01:40] *** JackFly26 left
[01:41] *** jackfly26__ joined
[01:41] *** p6bannerbot sets mode: +v jackfly26__

[01:42] *** JackFy26 joined
[01:42] *** p6bannerbot sets mode: +v JackFy26

[01:43] *** JackFy26 left
[01:44] *** jackfly26__ left
[01:44] *** jackfly26 joined
[01:45] *** jackfly26 left
[01:45] *** jackfly26 joined
[01:51] <ryn1x> What do I do for a c signature like this:  (TinyTIFFFile* tiff, double* data)    Is it:  ( Pointer, num64 is rw ) ? 

[01:52] *** JackFly26_ joined
[01:52] *** p6bannerbot sets mode: +v JackFly26_

[01:52] *** JackFly26_ left
[01:52] *** jackfly26 left
[01:53] *** jackfly26 joined
[01:53] *** p6bannerbot sets mode: +v jackfly26

[02:01] <ryn1x> or maybe (Pointer, CArray[num64) is rw)

[02:02] <timotimo> just num64 is rw

[02:04] <ryn1x> And I would be able to pass it some type of array of doubles for the image data?

[02:04] <timotimo> oh

[02:04] <timotimo> in that case it'd have to be CArray[num64] or Pointer[num64] or num64 @foo

[02:04] <timotimo> or Buf[num64] $data

[02:05] <ryn1x> ok

[02:05] <jackfly26> i think the official thing says CArray

[02:07] <timotimo> i think all of them are compatible with what you want

[02:08] <ryn1x> thanks

[02:08] <timotimo> "num64 is rw" will only give you a single spot of data for nums

[02:08] <timotimo> hm

[02:09] <timotimo> actually, if you want the function to be able to change your array, maybe it has to actually be a CArray

[02:09] <timotimo> not sure about that

[02:10] *** AlexDani` joined
[02:11] <jackfly26> hi

[02:11] *** p6bannerbot sets mode: +v AlexDani`

[02:11] <timotimo> greetings jackfly26 

[02:12] <jackfly26> i was saying hi to alexdani but ok

[02:15] *** AlexDaniel left
[02:18] <timotimo> oh, sorry

[02:18] <timotimo> my irc client hides joins and parts until the user in question says something so that my screen isn't filled with 50% status messages

[02:18] <timotimo> so i didn't notice

[02:19] *** sno joined
[02:19] <timotimo> jackfly26: you still looking for help with the grammar parsing thing?

[02:20] *** p6bannerbot sets mode: +v sno

[02:20] <timotimo> if you want something to share code with that also runs the code for you, try https://tio.run/

[02:20] <timotimo> buggable: browser

[02:20] <timotimo> huggable: browser

[02:20] <huggable> timotimo, Run Perl 6 in your browser: https://tio.run/nexus/perl6 or https://glot.io

[02:21] <jackfly26> yes i am

[02:21] <timotimo> ah, yes, glot.io is the other one

[02:21] <jackfly26> but i gotta do homework

[02:21] <jackfly26> be right back

[02:21] <timotimo> OK

[02:21] <timotimo> i need a late night snack or my tummy growling will wake all the neighbors

[02:25] *** sno left
[02:25] *** daotoad joined
[02:26] *** p6bannerbot sets mode: +v daotoad

[02:26] <jackfly26> its at https://glot.io/snippets/f7ntga1650

[02:27] <jackfly26> i modified it to work with stdin

[02:38] <no-n> what's a synonym for @a.push: $_ for @b?

[02:39] <jackfly26> maybe use map?

[02:39] <timotimo> @a.append(@b)

[02:39] <no-n> ty

[02:42] <timotimo> https://glot.io/snippets/f7ntga1650

[02:42] <timotimo> does that give you my modifications?

[02:43] <timotimo> oh

[02:44] <timotimo> that's just your snippet again

[02:44] <timotimo> hold on

[02:44] <timotimo> https://glot.io/snippets/f7ntxvmzx2

[02:44] <timotimo> there try that

[02:45] <timotimo> this will give you a trace of the grammar

[02:46] *** Xliff left
[02:47] <timotimo> oh, hehe

[02:47] *** Cabanoss- left
[02:47] <timotimo> jackfly26: replacing "{" with '{' makes it get a bit further already

[02:48] <jackfly26> i used the tracer

[02:48] <jackfly26> why does that do anything

[02:48] *** AlexDani` is now known as AlexDaniel

[02:48] *** Cabanossi joined
[02:48] <timotimo> because a { inside "" will start an interpolation :)

[02:48] <timotimo> m: say "hello { 1 + 2 } is good"

[02:48] <camelia> rakudo-moar 7f3f77d43: OUTPUT: «hello 3 is good␤»

[02:48] <timotimo> m: say "hello {"foo bar"} is good"

[02:48] <camelia> rakudo-moar 7f3f77d43: OUTPUT: «hello foo bar is good␤»

[02:49] <jackfly26> oh'

[02:49] <timotimo> m: say "{"foo bar"}"

[02:49] <camelia> rakudo-moar 7f3f77d43: OUTPUT: «foo bar␤»

[02:49] <AlexDaniel> jackfly26: hi :)

[02:49] *** p6bannerbot sets mode: +v Cabanossi

[02:49] <timotimo> i think your token statement wants to be different, what you got there isn't a character class

[02:49] <jackfly26> it isnt

[02:49] <timotimo> m: say "hello world" ~~ / <-[\s(){}\[\]]>+ /

[02:49] <camelia> rakudo-moar 7f3f77d43: OUTPUT: «｢hello｣␤»

[02:49] <jackfly26> how would i do that then

[02:50] <timotimo> like that

[02:50] <jackfly26> ok

[02:50] <jackfly26> the minus means not i assume

[02:50] <timotimo> that's right

[02:50] <timotimo> it's for "arithmetic" on stuff

[02:50] <timotimo> so you can also do something like

[02:50] <timotimo> m: say "foo!! bar! baz?" ~~ m:g/ <[a..z]-[aeiou]>+ /

[02:50] <camelia> rakudo-moar 7f3f77d43: OUTPUT: «(｢f｣ ｢b｣ ｢r｣ ｢b｣ ｢z｣)␤»

[02:51] <timotimo> <-[bar]> is just that without the first class

[02:51] <jackfly26> alright thats as far as i expected it

[02:51] <jackfly26> thanks

[02:51] <jackfly26> im gonna go do math now

[02:51] <timotimo> good luck!

[02:52] <jackfly26> im probably gonna come back when I do the actions class

[02:52] <jackfly26> thats gonna be fun

[02:52] <timotimo> i'll probably be asleep by then

[02:52] <jackfly26> i mean not today

[02:52] <timotimo> ah, OK

[02:52] <timotimo> action classes can be tricky to figure out at first, but then they are somewhat simple

[02:55] <jackfly26> ok

[02:55] <jackfly26> thanks for all your help

[02:55] <timotimo> whenever any of your tokens/rules/whatever gets parsed successfully, it'll try to call a method of the same name on your action class (or instance if you used .new or something) and it will pass the match object as the first parameter

[02:55] <timotimo> you're welcome :)

[03:01] *** jackfly26 left
[03:08] *** Xliff joined
[03:08] *** p6bannerbot sets mode: +v Xliff

[03:17] *** ufobat_ joined
[03:18] *** p6bannerbot sets mode: +v ufobat_

[03:21] *** ufobat___ left
[03:30] *** lookatme_q left
[03:31] *** sno joined
[03:32] *** p6bannerbot sets mode: +v sno

[03:36] *** sno left
[03:40] *** Xliff left
[03:55] <ryn1x> So my module using nativecall was along smoothly, but I am stuck on probably the most important function! Any ideas for this one:    int TinyTIFFReader_getSampleData(TinyTIFFReaderFile* tiff, void* buffer, uint16_t sample);

[03:55] <ryn1x> I dont know what to put as a parameter for "void* buffer" so that I can access the image data.

[04:05] *** mowcat left
[04:06] *** mowcat joined
[04:07] *** p6bannerbot sets mode: +v mowcat

[04:07] *** mowcat left
[04:08] *** mowcat joined
[04:09] *** p6bannerbot sets mode: +v mowcat

[04:10] *** sno joined
[04:10] <jmaslak> Declare it similar to:

[04:10] <jmaslak> ub inet_ntop(int32, Pointer, Blob, int32 --> Str) is native {*}

[04:10] <jmaslak> sub inet_ntop(int32, Pointer, Blob, int32 --> Str) is native {*}

[04:10] *** Cabanoss- joined
[04:10] *** Cabanossi left
[04:10] *** p6bannerbot sets mode: +v sno

[04:10] <jmaslak> (The blob paramter is a char*, but close enough here - use Blob)

[04:11] *** p6bannerbot sets mode: +v Cabanoss-

[04:11] <jmaslak> Then you can use buf8.allocate($length) to create a buf, and you just pass it as that parameter (in the Blob spot)

[04:15] *** sno left
[04:16] <ryn1x> hmm... I keep getting 

[04:16] <ryn1x> Non-zero wait status: 11

[04:16] <ryn1x>   Parse errors: Bad plan.

[04:17] <ryn1x> my sub is:

[04:17] <ryn1x> sub TinyTIFFReader_getSampleData( TinyTIFFReaderFile is rw, Blob is rw, uint16 )

[04:17] <ryn1x>     returns int32 is native('tinytiff') is export { * }

[04:19] <ryn1x> and the test is:

[04:19] <ryn1x> sub TinyTIFFReader_getSampleData( TinyTIFFReaderFile is rw, Blob is rw, uint16 )

[04:19] <ryn1x>     returns int32 is native('tinytiff') is export { * }

[04:19] <ryn1x> oops

[04:19] <ryn1x> my $sample-data = buf8.allocate(191*159);

[04:19] <ryn1x> lives-ok { TinyTIFFReader_getSampleData($tiff, $sample-data, 0) };

[04:20] *** `presiden joined
[04:20] *** p6bannerbot sets mode: +v `presiden

[04:25] <ryn1x> hmm... I wonder it is my CStructs... something that this function is using that the others so far have not...

[04:32] *** lookatme_q joined
[04:33] *** p6bannerbot sets mode: +v lookatme_q

[04:38] <loops> ryn1x: if my google-fu is okay, that error means your code is generating a SEGV fault from a bad memory access.

[04:38] <ryn1x> Is this correct for a struct ?  C++:   uint32_t* stripoffsets;    Perl6:    has CArray[uint32] $.stripoffsets;

[04:39] *** leont left
[04:39] <ryn1x> loops: thanks... i think it is probably my struct then...

[04:45] *** zacts joined
[04:45] *** p6bannerbot sets mode: +v zacts

[04:58] *** jmerelo joined
[04:59] *** p6bannerbot sets mode: +v jmerelo

[05:05] *** autoprime19 joined
[05:06] *** p6bannerbot sets mode: +v autoprime19

[05:10] *** autoprime19 left
[05:12] *** daotoad left
[05:13] <ryn1x> I put the commented out c++ structs next to my perl6 CStructs if someone can have a peek and see if there is anything obviously wrong? https://github.com/ryn1x/Graphics-TinyTIFF/blob/master/lib/Graphics/TinyTIFF.pm6#L6:L103

[05:17] <loops> ryn1x: I didn't look at your code sorry.. but I was playing around with Nativecall a bit here https://pastebin.com/vP2gXcE1

[05:18] <loops> ryn1x: If you omit the BUILD method of the struct, you get a SEGV..

[05:18] <loops> ryn1x: (really don't know if it's related to what you're seeing tho.. just a stab in the dark)

[05:20] <ryn1x> loops: Cool thanks! It looks like I'm not doing `method BUILD() { $!val := CArray[uint8].new }` ... is that required?

[05:20] *** sno joined
[05:21] <loops> ryn1x: you do need to initialize that field with an actual CArray it seems, declaring the type is not enough.. 

[05:21] *** p6bannerbot sets mode: +v sno

[05:22] <loops> ryn1x: i'm just casting about in the dark here.. i am learning too.

[05:23] <loops> ryn1x: if you look at https://docs.perl6.org/language/nativecall#Notes_on_memory_management   it shows that you can initialize those fields in C rather than the way I did it.

[05:23] <loops> But one way or the another they need to be created at runtime

[05:25] <ryn1x> Hmm... I see here that they are doing somthing similar in TWEAK too... https://docs.perl6.org/language/nativecall#Structs

[05:25] <ryn1x> not sure if that is similar... I dont know what TWEAK is yet

[05:26] <loops> ryn1x: I think that when you declare that struct field as a CArray you're essentially declaring a pointer

[05:27] <loops> ryn1x: so it makes sense that at runtime you have to arrange for it to point at some memory.. either in C or inside a BUILD method

[05:27] *** sno left
[05:27] <ryn1x> loops: that does make sense if you think of it that way

[05:28] <loops> that's what that $!val := CArray[uint8].new is doing... and notice it is binding with :=  not assigning with =

[05:33] <`presiden> so, I'm reading https://design.perl6.org/S01.html

[05:34] <`presiden> > Larry's First Law of Language Redesign: Everyone wants the colon.

[05:34] <`presiden> question: what's the colon?

[05:35] <loops> presiden: It literally means the colon... he's saying that everyone wants the short easy syntax to signify their favorite language feature

[05:36] <loops> so you have to be really careful when deciding how to use the most desirable characters etc.

[05:36] <`presiden> ah, the literal : character >_<

[05:39] <ryn1x> loops: I am still getting the wait status 11 thing... I'm not good ar reading c, but it looks like you created a CArray[uint8] and passed it to the c func... and then the c func printed the value at index 0?

[05:42] <loops> ryn1x: yes

[05:43] <ryn1x> loop: I need to go the other way... pass a CArray pointer to the c function for it to populate

[05:43] <ryn1x> loops*

[05:44] <loops> ryn1x: does the c function malloc the memory for you, or are you expected to pass in enough memory?

[05:46] <loops> lol.. i just search for Tiny Tiff to take a look... and ended up in a porn site named Tiny Tiff heh

[05:47] <ryn1x> I'm trying to read through the source. Here is a link right to the function that is giving me trouble: https://github.com/ryn1x/TinyTIFF/blob/88eec9a80b5a25b8c48ccffa9eb561d895f76eba/tinytiffreader.cpp#L590

[05:48] <ryn1x> Tiny Tiff 😂

[05:49] <loops> I just cloned https://github.com/jkriege2/TinyTIFF   hope it's the same cuz i have it built here

[05:50] <loops> Oh, I see it's the same as the one you're using

[05:50] <ryn1x> No its not... I had to midify some stuff like extern "C" to get it to work...

[05:50] <loops> ah K.. i'll grab yours

[05:51] <ryn1x> cool. thanks a lot for looking.

[05:51] <ryn1x> The Perl6 code/tests I have written so far are here too https://github.com/ryn1x/Graphics-TinyTIFF

[05:53] *** sno joined
[05:54] *** p6bannerbot sets mode: +v sno

[05:56] <loops> ryn1x: okay, if you look in the README example,  the _caller_ is expected to pass in enough memory for the function to fill with the image data

[05:57] <loops> ryn1x: that means that likely the CArray.new is likley the way to go.  Although not the only option

[05:58] *** sno left
[05:59] <ryn1x> loops: let me try that real quick... I was doing CArray[uintxx].new   not just CArray.new ...

[05:59] *** moony joined
[05:59] *** p6bannerbot sets mode: +v moony

[05:59] <ryn1x> and then in my test file I pass it a:   my $sample-data = buf8.allocate(191*159);

[06:01] <ryn1x> nope... same error... I guess it could be something else causing the null pointer...

[06:02] <loops> ryn1x: use   $sample-data :=  

[06:02] <loops> not =

[06:02] <ryn1x> oh shoot... good catch...

[06:02] <loops> and if you're doing it that way, I don't think you need the BUILD stuff.

[06:04] <ryn1x> ok.. took away the build stuff and changed to := but same issue

[06:05] <ryn1x> the other thing I am not super sure about it `HANDLE hFile;` and `HANDLE hFile;` in the TIFFReaderFile struct

[06:05] <ryn1x> I just used has Pointer $.xxxx for both of those...

[06:07] *** lookatme_q left
[06:08] *** lookatme_q joined
[06:08] *** p6bannerbot sets mode: +v lookatme_q

[06:14] <buggable> New CPAN upload: Pod-Load-0.2.0.tar.gz by JMERELO http://modules.perl6.org/dist/Pod::Load:cpan:JMERELO

[06:15] *** sno joined
[06:15] *** p6bannerbot sets mode: +v sno

[06:24] <masak> I know I promised to have an excellent use for adverbs in the advent post, but I didn't end up using that

[06:24] <masak> partly because I didn't find a way to do what I wanted in Rakudo

[06:25] <loops> ryn1x: okay, I think i have it working here in a fashion

[06:25] <loops> but my first try i get the error "only planar TIFF files are supported by this library

[06:26] <loops> ryn1x: I need a test tiff to try it out

[06:26] <ryn1x> loops: oooh

[06:26] <masak> m: sub infix:<≅>($l, $r, :$mod) { "$l ≅ $r (mod $mod)" }; say 3 ≅ 13 :mod(10)

[06:26] <camelia> rakudo-moar e2e5cc53c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤You can't adverb &infix:<≅>␤at <tmp>:1␤------> 3 ≅ $r (mod $mod)" }; say 3 ≅ 13 :mod(10)7⏏5<EOL>␤»

[06:26] <loops> ryn1x: I don't know what a planar tiff is heh

[06:27] <masak> ...this seems to hit operators that were already defined in CORE.

[06:27] <ryn1x> loops: I dont know that either... there are some tiffs in here: https://github.com/ryn1x/TinyTIFF/tree/master/test/tinytiff_reader_test

[06:27] <masak> I don't know why I shouldn't be allowed to override an operator in a local scope and put an adverb on it

[06:28] <masak> m: sub infix:<floomp>($l, $r, :$mod) { "$l ≅ $r (mod $mod)" }; say 3 floomp 13 :mod(10)

[06:28] <camelia> rakudo-moar e2e5cc53c: OUTPUT: «3 ≅ 13 (mod 10)␤»

[06:29] <masak> m: sub infix:<≅≅>($l, $r, :$mod) { "$l ≅ $r (mod $mod)" }; say 3 ≅≅ 13 :mod(10)

[06:29] <camelia> rakudo-moar e2e5cc53c: OUTPUT: «3 ≅ 13 (mod 10)␤»

[06:29] <loops> ryn1x: okay test16m_imagej.tif  worked... and your library works with just a small change

[06:30] <ryn1x> loops: cool!

[06:30] <loops> ryn1x: actually i cheated.. but i'll show you how i did it, and you can go from there..

[06:30] <ryn1x> ok

[06:32] <loops> What's a good pastebin for P6?

[06:33] <ryn1x> I usually use gist.github.com

[06:34] <loops> ryn1x: okay : https://is.gd/nBfTK9

[06:35] <loops> ryn1x: So I cheated by importing NativeCall and doing my own thing.. but hopefully that is easy to incoporate in your module

[06:37] <loops> ryn1x: (actually, i just realized that's not exactly the struct issue you were working on, I just got excited that I read the .tif heh)

[06:38] <loops> you may have already gotten that far before.

[06:43] *** abraxxa left
[06:44] <ryn1x> loops: if you got getSampleData working that is exactly my problem... trying to modify my code to be like yours now... not quite there yet ...

[06:45] <loops> ryn1x: yeah, it is working okay.  Although all the tiff's i had locally weren't planar for some reason.  but it printed out a nice error message saying so at least.

[06:48] <jmerelo> masak++

[06:54] *** reportable6 left
[06:55] *** reportable6 joined
[06:55] *** ChanServ sets mode: +v reportable6

[06:56] *** p6bannerbot sets mode: +v reportable6

[06:57] <ryn1x> loops: So I ran you script and it worked perfectly! I still get the same error in my .t file though. maybe somethig with lives-ok..

[06:57] <ryn1x> loops: thanks for all your help!

[06:58] <loops> ryn1x: no worries, good luck with it

[07:05] *** domidumont joined
[07:05] *** ToddAndMargo joined
[07:05] *** p6bannerbot sets mode: +v ToddAndMargo

[07:05] <ToddAndMargo> Is there sometig wrong with the perl6 mailing list?  [Status: Error, Address: [email@hidden.address] ResponseCode 421, Host not reachable.]

[07:05] *** p6bannerbot sets mode: +v domidumont

[07:07] <ryn1x> loops: wow.... found the seg fault. it is with the getImageDescription sub. weird cause it only crashed when getImageData is called after it.... use Test made me think it was the last test causing the error.

[07:08] <loops> ryn1x: oh yeah, I should have mentioned that.. I saw that and ignored it. 

[07:10] <ryn1x> loops: it works with Buf now too... that way I don't need to hardcode the bit-depth in the library =)

[07:11] <ryn1x> man... use Test really sent me in the wrong direction on that one...

[07:12] *** kktt__ joined
[07:12] *** p6bannerbot sets mode: +v kktt__

[07:14] *** kktt left
[07:21] *** rindolf joined
[07:22] *** p6bannerbot sets mode: +v rindolf

[07:24] *** sno left
[07:25] *** zacts left
[07:25] *** kktt__ left
[07:25] *** kktt joined
[07:26] *** p6bannerbot sets mode: +v kktt

[07:28] *** nadim joined
[07:29] *** p6bannerbot sets mode: +v nadim

[07:33] <jmerelo> Has everyone checked today's 

[07:33] <jmerelo> AC?

[07:34] <jmerelo> https://perl6advent.wordpress.com/2018/12/17/day-17-compiling-our-way-to-happiness/

[07:34] <jmerelo> by masak

[07:34] *** ToddAndMargo left
[07:35] *** jmerelo left
[07:58] *** dct joined
[07:58] *** p6bannerbot sets mode: +v dct

[08:03] *** nadim left
[08:04] *** domidumont left
[08:10] *** dct left
[08:12] *** `presiden left
[08:14] *** coet joined
[08:14] *** p6bannerbot sets mode: +v coet

[08:19] *** domidumont joined
[08:20] *** p6bannerbot sets mode: +v domidumont

[08:22] *** zakharyas joined
[08:23] *** p6bannerbot sets mode: +v zakharyas

[08:23] <moritz> masak++ # very nice advent post

[08:25] <moritz> masak: it seems the "S E N D" line is mis-aligned with the other lines by one space. Intentional?

[08:27] *** kurahaupo left
[08:31] *** kurahaupo joined
[08:32] *** p6bannerbot sets mode: +v kurahaupo

[08:36] *** kensanata joined
[08:36] *** p6bannerbot sets mode: +v kensanata

[08:37] *** zacts joined
[08:37] *** p6bannerbot sets mode: +v zacts

[08:48] <masak> moritz: no, not intentional. I noticed it too. will try to fix.

[08:48] <masak> I like how the post turned out, but I'd like to make it a *lot* less vaporware-y

[08:49] <masak> maybe that's a good topic of discussion for here on #perl6, though

[08:49] <masak> I deeply believe this is the part we should steal from Lisp and Smalltalk: the notion that the language/grammar is not only not fixed, but subject to re-interpretation and mutation

[08:49] <masak> and that "raising up the language" to meet the problem often is a sensible thing to do

[08:53] <masak> mis-alignment fixed now. moritz++

[08:57] *** lizmat joined
[08:57] *** p6bannerbot sets mode: +v lizmat

[08:57] *** finanalyst joined
[08:58] *** p6bannerbot sets mode: +v finanalyst

[08:58] <finanalyst> p6: class A {has @!xx; method v{ @!xx=Nil; say @!xx}};my A $q.=new; $q.v

[08:58] <camelia> rakudo-moar e2e5cc53c: OUTPUT: «[(Any)]␤»

[08:58] *** kktt left
[09:00] <finanalyst> Is setting @!variable = Nil expected to generate [(Nil)] ? That means @!variable.elems = 1

[09:01] <finanalyst> p6: class A {has @.xx; method v{ @xx=Nil; say @!xx}};my A $q.=new; $q.v; say $q.xx.elems

[09:01] <camelia> rakudo-moar e2e5cc53c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '@xx' is not declared. Did you mean '@!xx'?␤at <tmp>:1␤------> 3class A {has @.xx; method v{ 7⏏5@xx=Nil; say @!xx}};my A $q.=new; $q.v; ␤»

[09:01] <finanalyst> p6: class A {has @.xx; method v{ @.xx=Nil; say @!xx}};my A $q.=new; $q.v; say $q.xx.elems

[09:01] <camelia> rakudo-moar e2e5cc53c: OUTPUT: «[(Any)]␤1␤»

[09:03] <SyrupThinker> finanalyst: https://docs.perl6.org/type/Nil#index-entry-Nil_assignment

[09:04] <finanalyst> p6: class A {has @.xx default (); method v{ @.xx=Nil; say @!xx}};my A $q.=new; $q.v; say $q.xx.elems

[09:04] <camelia> rakudo-moar e2e5cc53c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3class A {has @.xx7⏏5 default (); method v{ @.xx=Nil; say @!x␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤  …»

[09:05] <finanalyst> p6: class A {has @.xx is default (); method v{ @.xx=Nil; say @!xx}};my A $q.=new; $q.v; say $q.xx.elems

[09:05] <camelia> rakudo-moar e2e5cc53c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Signatures as constraints on variables not yet implemented. Sorry.␤at <tmp>:1␤------> 3class A {has @.xx is default ()7⏏5; method v{ @.xx=Nil; say @!xx}};my A $q␤»

[09:06] <finanalyst> SyrupThinker: Thanks. 

[09:07] *** holyghost joined
[09:07] *** p6bannerbot sets mode: +v holyghost

[09:17] *** finanalyst left
[09:19] <no-n> is it ok to export variables? (I read it is bad for perl 5)

[09:31] *** dakkar joined
[09:32] *** p6bannerbot sets mode: +v dakkar

[09:43] *** zacts left
[09:55] <masak> anyone interested in talking about "slang compilation"? we could also take the discussion on #perl6-macros

[09:55] <jnthn> masak: hmm, maybe :)

[09:55] <masak> no-n: I'd say it's OK to export variables. not sure about the risk in Perl 5.

[09:56] <masak> jnthn: did you read my advent post? :) https://perl6advent.wordpress.com/2018/12/17/day-17-compiling-our-way-to-happiness/

[09:56] * masak is shameless in his self-promotion

[09:56] <jnthn> No :)

[09:58] <masak> tl;dr: even a puzzle problem like "SEND + MORE = MONEY" boils down to a compilation task

[09:58] <masak> Perl 6 will shine and be fully realized to the extent we can do what I do in that post but *inside the compiler pipeline*

[09:59] <masak> this requires slangs, and the ability to write rules that translate and modify Qtrees

[10:00] <jnthn> Nice post :)

[10:00] <masak> \o/

[10:01] *** brrt joined
[10:01] <masak> maybe I should be consistent and refer to those as "langs", not "slangs": https://github.com/masak/007/issues/378

[10:02] *** brrt left
[10:03] <masak> I guess my question is: what can we do (aside from landing macros from 007) to make this a reality in Perl 6?

[10:04] <jnthn> Well, it's the QTrees part of 007 that's key here, I think?

[10:05] <jnthn> Question is to what degree QTrees are a good compilation target...

[10:05] <masak> aye, and I guess that'd be the biggest "adoption pain point" for the Rakudo stack, too

[10:06] <masak> it's pretty targeted towards nqp's ASTs right now

[10:06] <masak> hm, maybe something could be done there, though: some kind of spike or exploration wherein we try to "slide Qtrees in" in a layer between

[10:07] <masak> maybe not even with the express goal of building the Final Thing, just harvesting feedback and seeing it work in *some* way

[10:08] <jnthn> QAST is quite language agnostic, and that's its strength and its weakness. Qtrees are quite tied to Perl 6, which I guess will also turn out to be their strength and weakness :)

[10:09] <masak> the provided-from-the-start Qtrees are quite tied to 007^WPerl 6

[10:09] <masak> but the hierarchy is built to be extensible, and an open set

[10:10] <masak> I wish I had more hard data there :) haven't actually extended it so much yet

[10:12] <jnthn> But what would an extension look like in terms of compilation?

[10:12] <jnthn> Would one just need to desugar into other existing Qtrees?

[10:13] <masak> aye

[10:13] <masak> I still don't have all the answers, but it seems that there are different types of desugaring

[10:13] <masak> there's "I fully expect to be replaced by my desugar", as in macro expansion -- the original only sticks around when tooling wants it

[10:14] <masak> there's also "I want to present as first-class, but here's my implementation desugar" -- like when you create a repeat-while loop but it's implemented in terms of a while loop

[10:15] <masak> in the latter case, tooling that traverses the program structure is likely to see the unexpanded form, whereas tooling that wants to reason about data flow is likely to see the expanded form

[10:16] <masak> in a sense, the staged compilation that the blog post is talking about looks a lot like a slang-centered orchestrated macro expansion

[10:19] <jnthn> Where the expanded form is effectively a subset of the Qtree language that is a closed set?

[10:19] <masak> aye

[10:20] <masak> it must bottom out in something that the compiler can attach to runtime semantics

[10:20] <jnthn> Right

[10:20] <masak> (in 007, I'm currently toying around with "subatomic" semantics for this; in that case even built-in `if` and `while` can be described in terms of these. but same end result.)

[10:20] <jnthn> I guess there's the declaration side of it too (the actions/world split)

[10:21] <masak> I confess to still not understanding world so well :/

[10:21] <masak> it's where declarations go, that much I know

[10:21] <masak> can it be summarized as a "static description" of program declarations?

[10:22] <masak> amusingly, *declarations* have come into focus in 007 in the past few months as something that the compiler needs to treat as first-class

[10:23] <masak> for two reasons: the new hygiene/lexical model hinges on them, and operator prec/assoc information hangs on that peg

[10:24] <timotimo> masak: "represents a digits"? :)

[10:25] <masak> aie.

[10:25] <masak> fixing.

[10:25] * masak made a typos

[10:26] <masak> fix'd

[10:26] <masak> timotimo++

[10:27] *** leont joined
[10:27] <jnthn> masak: Well, static description in what sense?

[10:28] *** p6bannerbot sets mode: +v leont

[10:28] <masak> my understanding of World is that when you write `my` in your program, the parser finds that and something is added to World

[10:28] <masak> but I'm not at all sure my understanding is correct :)

[10:28] <jnthn> Yes, that's about right

[10:28] <jnthn> It's the declarations

[10:29] <masak> and it makes a lot of sense to have that "on its own level"

[10:29] <masak> I distinctly remember the pain of *not* having that on its own level

[10:29] <jnthn> Me too :)

[10:29] <masak> furthermore, I think Perl 6 is relatively unique in even having a level for that

[10:29] <masak> (but I might be wrong)

[10:30] <masak> I'm also proud of having named World :>

[10:30] <masak> but if I were to do it again, I would've gone with the German Veldt :P

[10:30] * masak Second Naming Syndrome

[10:31] * masak .oO( ^^ )

[10:42] *** dogbert2_ left
[10:48] *** zacts joined
[10:48] *** p6bannerbot sets mode: +v zacts

[11:03] *** domidumont left
[11:06] *** nadim joined
[11:07] *** p6bannerbot sets mode: +v nadim

[11:23] *** sena_kun joined
[11:24] <buggable> New CPAN upload: Math-FFT-Libfftw3-0.1.3.tar.gz by FRITH http://modules.perl6.org/dist/Math::FFT::Libfftw3:cpan:FRITH

[11:24] *** p6bannerbot sets mode: +v sena_kun

[11:45] *** nadim left
[11:54] *** dogbert2_ joined
[11:54] <tbrowder>  jmerelo: just checked my advent post more closely and see another chunk wp ate! hope i can fix it, but not holding my breath...

[11:55] *** p6bannerbot sets mode: +v dogbert2_

[11:58] *** lucasb joined
[11:58] *** p6bannerbot sets mode: +v lucasb

[12:18] *** lichtkind joined
[12:18] *** p6bannerbot sets mode: +v lichtkind

[12:21] <lichtkind> is there a reason why rakudo .11 is not mentioned on this rakudo.org

[12:24] <lucasb> the links show here: https://rakudo.org/files/rakudo

[12:25] <lucasb> the rakudo and nqp 2018.11 tarball releases

[12:27] <lichtkind> yes but not there https://rakudo.org/files

[12:28] <lucasb> maybe because it only shows rakudo star releases, and there wasn't a Star release for the 2018.11 monthly

[12:30] *** zacts left
[12:34] <lucasb> Why rakudo.org is kept around? I agree it's very pretty and nicely designed. :) But IMO, I think I would prefer its content merged into perl6.org and rakudo.org become just a redirect to perl6.org.

[12:35] *** nadim joined
[12:35] *** p6bannerbot sets mode: +v nadim

[12:39] *** zakharyas left
[12:39] *** kurahaupo left
[12:40] *** kurahaupo joined
[12:40] *** p6bannerbot sets mode: +v kurahaupo

[12:51] *** Xliff joined
[12:51] *** p6bannerbot sets mode: +v Xliff

[12:52] *** domidumont joined
[12:53] *** p6bannerbot sets mode: +v domidumont

[13:19] *** yqt joined
[13:20] *** p6bannerbot sets mode: +v yqt

[13:30] *** Trestto joined
[13:30] *** p6bannerbot sets mode: +v Trestto

[13:31] <tyil> I wouldn't remove the rakudo site tbh

[13:31] <tyil> it's a very slick design, and is the site to get R* releases

[13:40] *** Trestto left
[13:41] <moritz> lucasb: we still hope that, one day, there will be more than one major implementation of Perl 6

[13:42] <tyil> afaiui, Perl 6 is "just" a spec, with rakudo being an implementation of it

[13:43] <lucasb> agreed, that's the way the story is being told for years :)

[13:44] <lucasb> an alternative way of telling the story is saying that rakudo is *not* just one of the implementations, but rather, is the *reference implementation*, and for now, the only implementation avaiable

[13:44] <moritz> but that we don't want to do, because it discourages other implementations

[13:44] <tyil> that doesn't strike me as a good reason to undo all the work people have put into the rakudo.org site

[13:45] <jnthn> lucasb: It's an alternative, but it's the story we're telling.

[13:45] <jnthn> opos

[13:45] <jnthn> it's *not* the story we're telling

[13:46] <jnthn> We should keep the door open to alternative implementations.

[13:46] <jnthn> That's served us very well in the past.

[13:48] <lucasb> I don't see how "reference implementation" is associated with discouraging/shutting the door for other implementations

[13:48] <lucasb> the name says "implementation", it's just one, for it's the "reference" one :)

[13:48] <lucasb> *but it's the...

[13:48] <moritz> it gives one implementation a special place that a newcomer cannot claim

[13:49] <jnthn> Reference implementation suggests that Rakudo is what another implementation has to match up with to call itself a Perl 6 compiler, while in reality we want that to be the spectest suite.

[13:50] <jnthn> For example, there's no reason for another implementation to provide any of the nqp::ops

[13:52] <masak> I'm reminded of something pmichaud said

[13:52] <masak> the answer to "what's the [official]...?" is "no"

[13:53] <masak> :)

[13:53] <lucasb> seems the word "reference" or "official" is the problem :)

[13:54] <masak> it seems to rub Perl people the wrong way a little

[13:54] <masak> well, I guess Perl 5 has an official implementation :)

[13:54] <jnthn> Well, I think we'd tend to agree the test suite is official, but not much else :)

[13:54] <lucasb> if I start refering to Rakudo as the *de facto* or *most well-established* implementation, would you agree?

[13:55] *** reach_satori left
[13:58] <masak> it'd take blindness to reality not to agree with those two labels ;)

[13:58] <masak> but I'd be wary of throwing around even "de facto", since the way we use words tends to affect reality

[13:59] <lucasb> yeah, subtleties in synonyms :)

[14:13] *** yqt left
[14:20] *** graphene left
[14:22] *** graphene joined
[14:22] *** p6bannerbot sets mode: +v graphene

[14:23] *** reach_satori joined
[14:24] *** p6bannerbot sets mode: +v reach_satori

[14:27] *** zakharyas joined
[14:28] *** p6bannerbot sets mode: +v zakharyas

[14:42] *** graphene left
[14:44] *** graphene joined
[14:44] *** p6bannerbot sets mode: +v graphene

[14:55] <Geth> ¦ doc: f0d6bb84d5 | (Elizabeth Mattijsen)++ | doc/Type/Buf.pod6

[14:55] <Geth> ¦ doc: Document buf8.write-int/uint/num methods

[14:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f0d6bb84d5

[14:55] <synopsebot> Link: https://doc.perl6.org/type/Buf

[14:59] <Geth> ¦ doc: 3660283c66 | (Elizabeth Mattijsen)++ | doc/Type/Blob.pod6

[14:59] <Geth> ¦ doc: Some types in signature refinements

[14:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3660283c66

[14:59] <synopsebot> Link: https://doc.perl6.org/type/Blob

[15:13] *** nadim left
[15:21] <lucasb> "In my view we have only one Perl community and it can’t be divisible."  <-- I liked this response in the awards post :)

[15:24] * lizmat hopes her opinion on this subject is clear and will therefore refrain from commenting publicly as not to draw fire

[15:24] <lucasb> I wouldn't mind leaving the Perl 5 folks alone and the P6 community start their own Camelia awards

[15:24] *** nadim joined
[15:25] <lucasb> in fact, I think I even prefer a separate event :)

[15:25] <El_Che> lizmat: write a blog post :P

[15:25] <El_Che> lizmat: in the open letter format :)

[15:25] *** p6bannerbot sets mode: +v nadim

[15:25] <lizmat> ferry vunny

[15:26] <El_Che> I am hilarious!

[15:28] <lizmat> El_Che: are you allowed to play with matches?     :-)

[15:28] <lucasb> but maybe P6 community is too small to keep awarding 3 folks yearly

[15:28] <Geth> ¦ doc: 7ffe0d1f3c | Coke++ | doc/Type/Blob.pod6

[15:28] <Geth> ¦ doc: whitespace

[15:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7ffe0d1f3c

[15:28] <Geth> ¦ doc: 622183d6ab | Coke++ | doc/Type/Buf.pod6

[15:28] <Geth> ¦ doc: fix typo in sig

[15:28] <synopsebot> Link: https://doc.perl6.org/type/Blob

[15:28] <synopsebot> Link: https://doc.perl6.org/type/Buf

[15:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/622183d6ab

[15:29] <El_Che> lucasb: "and the yearly Liz White Camelia goes this year to lizmat!"

[15:29] <lizmat> [Coke]++   # well caught!

[15:30] <El_Che> yeah, bdoy's response was weird coming from a Perl 6 book author

[15:30] <lizmat> El_Che: one is enough  :)

[15:31] <El_Che> lizmat: it's not a "Liz White Camelia", though

[15:31] <El_Che> lizmat: your award is outdated :)

[15:32] <[Coke]> lizmat: I just run the tests. :)

[15:32] <lizmat> also for whitespace ??

[15:33] <[Coke]> yes.

[15:33] <[Coke]> that was the "we prefer spaces after our commas" test.

[15:34] <[Coke]> the method sig was the compile test.

[15:34] <lizmat> wow

[15:34] <lucasb> is there a "after periods, prefer a single space instead of two" test?

[15:34] <lucasb> (or the other way around)

[15:35] <[Coke]> I have a utility script that updates the git repo, then runs the extended tests only on those files so i can get things good locally and then just test the small things that have changed since (util/update-and-test)

[15:35] <[Coke]> lucasb: no, but it would be fairly easy to add if someone was excited about it.

[15:36] <lucasb> hehe, I'm not. :)

[15:36] * [Coke] would start with https://github.com/perl6/doc/blob/master/xt/space-after-comma.t

[15:36] *** smlck joined
[15:37] *** p6bannerbot sets mode: +v smlck

[15:38] <lucasb> I prefer if authors would avoid gratuitous "paragraph reflows" commits

[15:40] *** smlck left
[15:42] *** uzl joined
[15:43] *** p6bannerbot sets mode: +v uzl

[15:46] *** reach_satori left
[15:49] *** reach_satori joined
[15:49] *** p6bannerbot sets mode: +v reach_satori

[16:02] *** nadim left
[16:09] *** zakharyas left
[16:11] *** graphene left
[16:12] <uzl> Hello everyone! So I'm trying to convert this .pod6 to .html and getting the following message: ===DEBUG: final cell layout for table 0. === cell contents are enclosed in single quotes ...

[16:12] <yoleaux> 12 Dec 2018 16:48Z <jmerelo> uzl: thanks!

[16:12] *** graphene joined
[16:12] <Altreus> m: 'asdfdf <#506956345119866881> dasd as <#506956332247678986>' ~~ m:g/ '<#' (\d+) '>' /; say $/.list

[16:12] <camelia> rakudo-moar 38afa2d6f: OUTPUT: «(｢<#506956345119866881>｣␤ 0 => ｢506956345119866881｣ ｢<#506956332247678986>｣␤ 0 => ｢506956332247678986｣)␤»

[16:12] <Altreus> help

[16:12] <Altreus> I thought I would only get the numbers when I did this

[16:12] <uzl> Pod: http://snippi.com/raw/gvaart3 . I'm using the perl6 command with RAKUDO_POD_TABLE_DEBUG

[16:13] <Altreus> what have I not understood?

[16:13] *** p6bannerbot sets mode: +v graphene

[16:13] <uzl> No problem, jmerelo!

[16:13] <Altreus> the regex docs implies I'll get just the numbers but as usual matching 'abc' against /(a) b (c)/ doesn't explain very much :P

[16:15] <jnthn> Maybe you want <( \d+ )> instead

[16:16] <uzl> could you probably access each Match object's first element?

[16:17] <uzl> m: 'asdfdf <#506956345119866881> dasd as <#506956332247678986>' ~~ m:g/ '<#' (\d+) '>' /; say $/.list[0][0]

[16:17] <camelia> rakudo-moar 38afa2d6f: OUTPUT: «｢506956345119866881｣␤»

[16:17] <Altreus> I understand

[16:17] <Altreus> kind of

[16:18] <Altreus> m: 'abc' ~~ /(a) b (c)/; say $/.list

[16:18] <camelia> rakudo-moar 38afa2d6f: OUTPUT: «(｢a｣ ｢c｣)␤»

[16:18] <Altreus> hmm

[16:18] <Altreus> but those are at the ends

[16:18] <Altreus> I think I get it

[16:21] <jnthn> m:g does multiple matches, and <( )> set the limits of the matching

[16:21] <evalable6> jnthn, rakudo-moar 38afa2d6f: OUTPUT: «(exit code 1) 04===SORRY!04=== Error while compiling /tmp/O2Rtjzi3To␤Two ter…»

[16:21] <evalable6> jnthn, Full output: https://gist.github.com/eea772e80efd46824cfd08cf7403a759

[16:21] <jnthn> Oh, be quiet, evalable6 

[16:28] *** jmerelo joined
[16:29] *** p6bannerbot sets mode: +v jmerelo

[16:30] *** smallick joined
[16:31] *** p6bannerbot sets mode: +v smallick

[16:31] <smallick> m: say 'Hello!';

[16:31] <camelia> rakudo-moar 38afa2d6f: OUTPUT: «Hello!␤»

[16:31] <jmerelo> .seen tobs

[16:31] <yoleaux> I saw tobs 16 Dec 2018 19:01Z in #perl6: <tobs> heh, I expect great things from the next three years

[16:31] <tobs> jmerelo: o/

[16:31] <jmerelo> tobs: Ready for your Advent Calendar article?

[16:32] <jmerelo> hi :-)

[16:33] <smallick> m: (2..999).grep({ $_ %% 3 || $_ %% 5 }).reduce({ $^a + $^b })

[16:33] <camelia> rakudo-moar 38afa2d6f: ( no output )

[16:34] <tobs> no, and in fact I might have to shuffle to the 20th because the final part of my code is not ready. I have today and tomorrow almost exclusively for the article though and could also lower my bar to meet the 19th.

[16:35] <tobs> sorry to say :/

[16:35] <jmerelo> tobs: I can ask scimon if he could move it up. I've seen it's already up there... No problem, I just wanted to check.

[16:36] <uzl> Anybody has any idea if Pod formatting code(B<>, etc.) are rendered inside tables?

[16:36] <tobs> The last week before Christmas always feels like a marathon

[16:36] <jmerelo> uzl: it's not

[16:37] <jmerelo> tobs: let me check with scimon

[16:38] <tobs> jmerelo: thanks

[16:38] <tobs> and good job keeping an eye on everyone

[16:38] <uzl> jmerelo: Any way around it? In code blocks they're not by default but can be rendered if :allow is used.

[16:38] <jmerelo> tobs: no problem :-) 

[16:39] <jmerelo> uzl: I'm afraid not. I think it happens at the parsing level, so no way to get it back when rendering it to something else.

[16:39] <uzl> jmerelo: oh, OK. Thanks!

[16:40] <uzl> 'til later!

[16:40] *** uzl left
[16:41] <jmerelo> see you!

[16:42] *** tobs` joined
[16:42] *** p6bannerbot sets mode: +v tobs`

[16:43] *** smallick left
[16:45] <jmerelo> .seen SmokeMachine

[16:45] <yoleaux> I saw SmokeMachine 16 Dec 2018 00:31Z in #perl6: <SmokeMachine> like -MO=Deparser?! would be great!

[16:45] <SmokeMachine> jmerelo: hi!

[16:46] *** molaf joined
[16:46] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/12/17/2018-51-principally-designed/

[16:46] <jmerelo> SmokeMachine: hi!

[16:46] *** p6bannerbot sets mode: +v molaf

[16:47] <jmerelo> SmokeMachine: this is just a maybe, and a big one. Your article has been ready for a long time, up there in the site. I don't preview anything going amiss in the next few days, but if it happens, might I use it?

[16:49] <SmokeMachine> Sure!

[16:50] <Geth> ¦ advent: 458275ce3a | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | perl6advent-2018/schedule

[16:50] <Geth> ¦ advent: Changing schedule

[16:50] <Geth> ¦ advent: 

[16:50] <Geth> ¦ advent: Changing @taboege and @Scimon

[16:50] <Geth> ¦ advent: review: https://github.com/perl6/advent/commit/458275ce3a

[16:50] <SmokeMachine> I’ve been doing some small changes on the post as I’m writing new stuff on Red... but it’s read every time I save :)

[16:51] <SmokeMachine> Ready

[16:52] *** kensanata left
[16:57] *** domidumont left
[16:58] *** CaptHindsight joined
[16:58] *** graphene left
[16:59] *** p6bannerbot sets mode: +v CaptHindsight

[17:00] *** graphene joined
[17:00] *** p6bannerbot sets mode: +v graphene

[17:01] <jmerelo> SmokeMachine: thanks! I don't think it's going to be needed after the last reshuffle, but just in case :-)

[17:03] *** CaptHindsight left
[17:04] *** graphene left
[17:06] *** graphene joined
[17:06] *** p6bannerbot sets mode: +v graphene

[17:24] *** graphene left
[17:25] *** graphene joined
[17:26] *** p6bannerbot sets mode: +v graphene

[17:27] *** domidumont joined
[17:28] *** p6bannerbot sets mode: +v domidumont

[17:32] *** dakkar left
[17:35] *** reach_satori left
[17:37] *** nadim joined
[17:38] *** p6bannerbot sets mode: +v nadim

[17:40] *** zakharyas joined
[17:41] *** p6bannerbot sets mode: +v zakharyas

[17:43] *** tobs`` joined
[17:43] *** tobs` left
[17:44] *** p6bannerbot sets mode: +v tobs``

[17:53] *** itimmer joined
[17:54] *** p6bannerbot sets mode: +v itimmer

[17:58] *** itimmer left
[18:01] *** yqt joined
[18:01] *** p6bannerbot sets mode: +v yqt

[18:02] *** canr joined
[18:02] *** p6bannerbot sets mode: +v canr

[18:04] <canr> I have code using native call that work fine on unix, but on windows it cannot find the ".dll". I have the directory with the dll in PATH and also LD_LIBRARY_PATH. Does anyone have experience with this?

[18:14] *** reach_satori joined
[18:15] *** p6bannerbot sets mode: +v reach_satori

[18:16] <Elronnd> is there any type corresponding to an 80-bit float, lond double in c?

[18:16] <timotimo> we don't have that natively yet

[18:18] <Elronnd> ok

[18:22] *** random_yanek left
[18:34] <buggable> New CPAN upload: Tomtit-0.0.5.tar.gz by MELEZHIK http://modules.perl6.org/dist/Tomtit:cpan:MELEZHIK

[18:34] *** random_yanek joined
[18:34] <leont> long double's semantics aren't well standardized, that doesn't help

[18:35] *** p6bannerbot sets mode: +v random_yanek

[18:35] <lizmat> at least we can read / write 128bit ints now  :-)

[18:37] <canr> Also with like DBIish, sqlite3.dll cannot be found even though it is my windows path variable... on unix it works just fine...  I don't know what I am doing wrong in windows...

[18:37] *** sno joined
[18:37] <lizmat> canr: if nobody answers you here, maybe asking on StackOverflow might help

[18:38] <lizmat> https://stackoverflow.com/questions/tagged/perl6

[18:38] *** p6bannerbot sets mode: +v sno

[18:41] <timotimo> are dlls actually looked up in path? huh.

[18:44] <timotimo> i haven't windowsed in so long, i've forgotten almost everything :o

[18:48] *** tobs`` left
[18:53] <loops> Is there a way to mark a bunch of functions as "is export" as a group rather than adding that to each one?

[18:53] *** zakharyas left
[18:55] <timotimo> yeah, you can directly call trait_mod:<is>($the-routine, :export) on the objects, and you can find the function objects in MY::, so you can loop over them :D

[18:55] *** tobs`` joined
[18:55] <timotimo> though you'll find everything else in MY:: as well

[18:56] *** p6bannerbot sets mode: +v tobs``

[18:57] <loops> timotimo: ah okay, it's just as easy to manually edit them then.. was hoping to just say "export everything in this scope"

[18:58] <timotimo> dunno, i'd call using a little for loop easier

[18:58] <timotimo> oh, should be at BEGIN time, though

[18:59] <loops> timotimo: the other one that is a bit wordy, is having to say "is native('./mylib.so') { * };" for a big bunch of funcs too

[18:59] <timotimo> m: sub foo { }; sub bar { }; sub quux { }; BEGIN for MY::.grep(*.name.startswith('&')).map({ trait_mod:<is>($_, :export) })

[18:59] <camelia> rakudo-moar e96b7ffed: OUTPUT: «5===SORRY!5===␤Expression needs parens to avoid gobbling block␤at <tmp>:1␤------> 3&')).map({ trait_mod:<is>($_, :export) }7⏏5)␤Missing block (apparently claimed by expression)␤at <tmp>:1␤------> 3')).map({ trait_mod:<is>($_, :e…»

[18:59] <Geth> ¦ doc: MorayJ++ created pull request #2512: Fix typo in example

[18:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2512

[18:59] <timotimo> m: sub foo { }; sub bar { }; sub quux { }; BEGIN do for MY::.grep(*.name.startswith('&')).map({ trait_mod:<is>($_, :export) })

[18:59] <camelia> rakudo-moar e96b7ffed: OUTPUT: «5===SORRY!5===␤Expression needs parens to avoid gobbling block␤at <tmp>:1␤------> 3&')).map({ trait_mod:<is>($_, :export) }7⏏5)␤Missing block (apparently claimed by expression)␤at <tmp>:1␤------> 3')).map({ trait_mod:<is>($_, :e…»

[18:59] <timotimo> whoops

[18:59] <loops> timotimo: yeah, i suppose i could do that, but it means a runtime task then, and can't be pre-compiled into the module.

[19:00] <timotimo> m: sub foo { }; sub bar { }; sub quux { }; BEGIN MY::.grep(*.name.startswith('&')).map({ trait_mod:<is>($_, :export) })

[19:00] <camelia> rakudo-moar e96b7ffed: ( no output )

[19:00] <timotimo> no it totally gets pre-compiled

[19:00] <canr> timotimo: The Docs say "...will be searched for in the paths in the LD_LIBRARY_PATH (PATH on Windows)"  https://docs.perl6.org/language/nativecall#Library_paths_and_names

[19:00] <loops> timotimo: really?  that is surprising

[19:00] <timotimo> everything done and made in BEGIN will be precomped, for better or for worse

[19:00] <canr> i assumed that implied windows looked up dlls in path, but i don't know windows...

[19:01] <timotimo> e: my $foo = BEGIN open("/tmp/test.txt"); say $foo

[19:01] <evalable6> timotimo, rakudo-moar e96b7ffed: OUTPUT: «Cannot test e96b7ffed44d13e25cce942b233c61fb1975d760 (Commit exists, but a perl6 executable could not be built for it)»

[19:01] <timotimo> e: 2018.10 my $foo = BEGIN open("/tmp/test.txt"); say $foo

[19:01] <evalable6> timotimo, rakudo-moar e96b7ffed: OUTPUT: «Cannot test e96b7ffed44d13e25cce942b233c61fb1975d760 (Commit exists, but a perl6 executable could not be built for it)»

[19:01] <timotimo> er

[19:01] <timotimo> e: 2018.09 my $foo = BEGIN open("/tmp/test.txt"); say $foo

[19:01] <evalable6> timotimo, rakudo-moar e96b7ffed: OUTPUT: «Cannot test e96b7ffed44d13e25cce942b233c61fb1975d760 (Commit exists, but a perl6 executable could not be built for it)»

[19:01] <timotimo> AlexDaniel: are the whateverables sick?

[19:02] <AlexDaniel> o_o

[19:02] <AlexDaniel> ah no

[19:02] <AlexDaniel> timeless: c: not e:

[19:02] <AlexDaniel> oops

[19:02] <AlexDaniel> timotimo: ↑

[19:02] * timeless looks up

[19:02] <timotimo> oh

[19:02] <AlexDaniel> timeless: sorry wrong nickname! :)

[19:02] <timotimo> c: 2018.10 my $foo = BEGIN open("/tmp/test.txt"); say $foo

[19:02] <committable6> timotimo, ¦2018.10: «===SORRY!===␤Failed to open file /tmp/test.txt: No such file or directory␤ «exit code = 1»»

[19:02] <timotimo> c: 2018.10 my $foo = BEGIN open("/tmp/test.txt", :w); say $foo

[19:02] <committable6> timotimo, ¦2018.10: «IO::Handle<"/tmp/test.txt".IO>(opened)␤»

[19:02] <timotimo> oh, handles survive that now?

[19:02] <timeless> no worries

[19:03] <timotimo> but probably not for full module precome

[19:03] <timotimo> gotta go AFK now, though!

[19:03] <timotimo> loops: you can do "is native" the same way as "is export", you'll give the export named parameter the string value, then

[19:04] <timotimo> like trait_mod:<is>($theroutine, native => './mylib.so')

[19:06] *** pecastro joined
[19:06] <loops> timotimo: you're right, that is pretty handy, esp since its included in the precompile

[19:06] *** p6bannerbot sets mode: +v pecastro

[19:09] <Xliff> (π/180).sin.cos

[19:09] <Xliff> m: (π/180).sin.cos

[19:09] <camelia> rakudo-moar e96b7ffed: ( no output )

[19:09] <Xliff> m: (π/180).sin.cos.say

[19:09] <camelia> rakudo-moar e96b7ffed: OUTPUT: «0.9998477106202734␤»

[19:10] <Xliff> m: π/180.sin.cos.say

[19:10] <camelia> rakudo-moar e96b7ffed: OUTPUT: «WARNINGS for <tmp>:␤0.6958793964545379␤Useless use of "/" in expression "π/180.sin.cos.say" in sink context (line 1)␤»

[19:11] <Xliff> m: π * 180.sin.cos.say

[19:11] <camelia> rakudo-moar e96b7ffed: OUTPUT: «WARNINGS for <tmp>:␤0.6958793964545379␤Useless use of "*" in expression "π * 180.sin.cos.say" in sink context (line 1)␤»

[19:11] <Xliff> m: (π * 180.sin.cos).say

[19:11] <camelia> rakudo-moar e96b7ffed: OUTPUT: «2.1861695996860755␤»

[19:13] <Geth> ¦ doc: 1be949fcf5 | MorayJ++ | doc/Type/Signature.pod6

[19:13] <Geth> ¦ doc: Fix typo in example

[19:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1be949fcf5

[19:13] <Geth> ¦ doc: 60048bcbb0 | Altai-man++ (committed using GitHub Web editor) | doc/Type/Signature.pod6

[19:13] <Geth> ¦ doc: Merge pull request #2512 from MorayJ/fix-type

[19:13] <synopsebot> Link: https://doc.perl6.org/type/Signature

[19:13] <Geth> ¦ doc: 

[19:13] <Geth> ¦ doc: Fix typo in example

[19:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/60048bcbb0

[19:20] <canr> So if windows has no standard lib dir, and .lib's are not auto found in path, do you need to check %*ENV for some predefined location when writing for windows?

[19:20] *** random_yanek left
[19:21] *** random_yanek joined
[19:21] *** random_yanek left
[19:22] *** random_yanek joined
[19:23] *** p6bannerbot sets mode: +v random_yanek

[19:26] *** tobs`` left
[19:26] *** coet left
[19:27] <timotimo> m: say Π

[19:27] <camelia> rakudo-moar e96b7ffed: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    Π used at line 1␤␤»

[19:28] <timotimo> m: π/180 andthen .sin.cos.say

[19:28] <camelia> rakudo-moar e96b7ffed: OUTPUT: «0.9998477106202734␤»

[19:28] <timotimo> ^- fun way to drop precedence if you know the value isn't falsey

[19:43] *** domidumont left
[19:56] *** canr left
[19:57] *** gnustavo joined
[19:57] *** p6bannerbot sets mode: +v gnustavo

[20:00] *** gnustavo left
[20:07] *** graphene left
[20:08] *** graphene joined
[20:09] *** p6bannerbot sets mode: +v graphene

[20:12] *** kensanata joined
[20:12] *** p6bannerbot sets mode: +v kensanata

[20:21] *** graphene left
[20:22] *** jmerelo left
[20:23] *** graphene joined
[20:24] *** p6bannerbot sets mode: +v graphene

[20:32] *** melezhik joined
[20:32] *** p6bannerbot sets mode: +v melezhik

[20:39] *** pmurias joined
[20:39] *** p6bannerbot sets mode: +v pmurias

[20:39] *** yqt left
[20:42] *** pmurias left
[20:46] *** graphene left
[20:47] *** graphene joined
[20:48] *** p6bannerbot sets mode: +v graphene

[20:50] *** melezhik left
[21:05] *** graphene left
[21:07] *** graphene joined
[21:08] *** p6bannerbot sets mode: +v graphene

[21:09] *** graphene left
[21:10] *** graphene joined
[21:11] *** p6bannerbot sets mode: +v graphene

[21:16] *** graphene left
[21:18] *** graphene joined
[21:19] *** p6bannerbot sets mode: +v graphene

[21:25] *** ufobat_ left
[21:26] *** ufobat_ joined
[21:26] *** p6bannerbot sets mode: +v ufobat_

[21:28] *** lucasb left
[21:33] *** ufobat_ left
[21:38] *** kensanata left
[21:52] *** dct joined
[21:52] *** p6bannerbot sets mode: +v dct

[22:05] *** koto joined
[22:05] *** koto left
[22:07] *** sena_kun left
[22:26] *** rindolf left
[22:26] <Geth> ¦ ecosystem: 155afa22b0 | thundergnat++ (committed using GitHub Web editor) | META.list

[22:26] <Geth> ¦ ecosystem: Add X11-Xdo to the ecosystem

[22:26] <Geth> ¦ ecosystem: 

[22:26] <Geth> ¦ ecosystem: Add bindings to libxdo X11 automation library. See https://github.com/thundergnat/X11-Xdo

[22:26] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/155afa22b0

[22:31] *** coet joined
[22:31] *** p6bannerbot sets mode: +v coet

[23:07] *** go|dfish left
[23:09] *** nadim left
[23:12] *** go|dfish joined
[23:12] *** p6bannerbot sets mode: +v go|dfish

[23:16] *** aindilis left
[23:20] *** dct left
[23:30] *** irolaya joined
[23:30] *** p6bannerbot sets mode: +v irolaya

[23:31] *** irolaya left
[23:58] *** w_richard_w joined
[23:58] *** pecastro left
[23:59] *** p6bannerbot sets mode: +v w_richard_w

[23:59] *** w_richard_w left
