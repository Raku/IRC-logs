[00:15] *** markoong left
[00:18] *** MasterDuke joined
[00:23] *** |oLa| left
[00:24] *** rindolf left
[00:40] *** [particle] left
[00:42] *** [particle] joined
[00:48] *** [particle] left
[00:53] *** kjk joined
[01:09] *** [particle] joined
[01:12] *** [particle] left
[01:14] *** [particle] joined
[01:17] *** comborico1611 left
[01:22] *** klapperl joined
[01:25] *** Khisanth left
[01:39] *** Khisanth joined
[01:41] *** Xliff left
[02:23] *** Sgeo__ joined
[02:27] *** Sgeo_ left
[02:45] <lookatme> ÔºöÔºâ

[03:02] *** eliasr left
[03:30] *** Xliff joined
[03:30] <Xliff> \op

[03:30] <Xliff> Oops. \o

[04:02] *** psychoslave joined
[04:16] *** n1ge joined
[04:17] *** kurahaupo left
[04:18] *** kurahaupo joined
[04:31] *** kjk left
[04:35] *** mahafyi joined
[04:52] *** kurahaupo left
[04:52] *** curan joined
[05:05] *** jmerelo joined
[05:05] *** kurahaupo joined
[05:13] *** kurahaupo left
[05:13] *** kurahaupo joined
[05:16] *** kurahaupo left
[05:17] *** espadrine left
[05:18] *** psychoslave left
[05:19] *** xtreak joined
[05:22] *** psychoslave joined
[05:34] *** domidumont joined
[05:37] <Geth> ¬¶ doc: 65c9c4f58a | (JJ Merelo)++ | doc/Type/List.pod6

[05:37] <Geth> ¬¶ doc: List :as docs added closes #1162

[05:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/65c9c4f58a

[05:37] <synopsebot_> Link: https://doc.perl6.org/type/List

[05:39] *** domidumont left
[05:39] *** domidumont joined
[05:41] *** kurahaupo joined
[05:48] *** xtreak left
[05:50] *** xtreak joined
[05:52] *** wamba joined
[06:05] *** Schepeers_ joined
[06:06] *** Schepeers left
[06:10] *** jmerelo left
[06:12] *** Schepeers_ left
[06:14] *** Schepeers joined
[06:15] *** HaraldJoerg joined
[06:17] *** skids left
[06:17] *** Praise- joined
[06:17] *** Praise- left
[06:17] *** Praise- joined
[06:19] *** Schepeers_ joined
[06:19] *** Schepeers left
[06:21] *** HaraldJoerg1 joined
[06:22] *** HaraldJoerg left
[06:24] *** Schepeers_ left
[06:25] *** Schepeers joined
[06:30] *** Schepeers left
[06:33] *** Schepeers joined
[06:39] *** robertle_ joined
[06:40] *** domidumont left
[06:43] *** psychoslave left
[06:48] *** psychoslave joined
[06:57] *** jmerelo joined
[07:00] *** darutoko joined
[07:03] *** cgfbee joined
[07:07] *** domidumont joined
[07:19] *** domidumont left
[07:22] *** domidumont joined
[07:22] *** psychoslave left
[07:28] *** markoong joined
[07:28] *** markoong left
[07:29] *** markoong joined
[07:41] *** zakharyas joined
[07:45] *** dakkar joined
[07:47] *** xtreak left
[07:49] *** zakharyas left
[07:49] *** zakharyas joined
[07:53] *** sena_kun joined
[07:53] *** psychoslave joined
[07:53] *** HaraldJoerg1 is now known as HaraldJoerg

[07:54] *** psychoslave left
[08:11] *** epony joined
[08:11] *** xtreak joined
[08:15] *** mahafyi left
[08:18] *** Xliff left
[08:23] *** xtreak left
[08:23] *** xtreak joined
[08:25] *** xtreak left
[08:25] *** jmerelo left
[08:25] *** mahafyi joined
[08:28] *** xtreak joined
[08:39] *** ChoHag left
[08:42] *** wbn joined
[08:44] *** xtreak left
[08:49] *** xtreak joined
[09:12] *** kurahaupo left
[09:12] *** kurahaupo joined
[09:13] *** ChoHag joined
[09:17] *** eliasr joined
[09:17] *** w_richard_w left
[09:18] *** kurahaupo_ joined
[09:18] *** kurahaupo_ left
[09:18] *** kurahaupo_ joined
[09:21] *** kurahaupo left
[09:25] *** zakharyas left
[09:28] *** zakharyas joined
[09:38] *** sena_kun left
[09:42] *** rindolf joined
[09:42] <jkramer> m: use HTTP::UserAgent; class Foo { has HTTP::UserAgent:D $.ua is rw .= new; }

[09:42] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´===SORRY!===‚ê§Could not find HTTP::UserAgent at line 1 in:‚ê§    /home/camelia/.perl6‚ê§    /home/camelia/rakudo-m-inst-1/share/perl6/site‚ê§    /home/camelia/rakudo-m-inst-1/share/perl6/vendor‚ê§    /home/camelia/rakudo-m-inst-1/share/perl6‚ê§    Co‚Ä¶¬ª

[09:42] <jkramer> Hmm

[09:43] <jkramer> With HTTP::UserAgent installed this gives me the error message "You cannot create an instance of this type (HTTP::UserAgent:D)"

[09:43] <jkramer> Without :D it works.

[09:44] <jkramer> Oh guess it wants to call .new on HTTP::UserAgent:D, including the :D part?

[09:48] <Ulti> jkramer :D on the end of a class name is a special type object for saying a *defined* one of these

[09:48] <Ulti> you use it for saying in a function parameter you want only defined things like this

[09:48] *** wamba left
[09:49] <Ulti> just drop the :D for doing a .new()

[09:49] <Ulti> unless I'm radically missing what you're upto?

[09:49] <jkramer> Ulti: I want to ensure $.ua is always defined :)

[09:50] <jkramer> This works though: has HTTP::UserAgent:D $.ua is rw = HTTP::UserAgent.new;

[09:50] <Ulti> ahh intersting

[09:50] <jkramer> It's just not as nice as .= new :)

[09:50] <Ulti> yeah I guess the .new there is trying to call it on the :D

[09:51] <Ulti> yeah I guess you want the :D declaration in the attribute if you're doing is rw

[09:52] <Ulti> personally I wouldn't do it this way though since more likely you want a constructor that lets someone pass in optionally a user agent or not

[09:53] <Ulti> one time rather than changing it all the time, at the moment you'd create a new user agent then throw it away if they put something else in

[09:53] *** xtreak left
[09:53] <Ulti> through the attribute rather than constructor that is

[09:54] *** jmerelo joined
[09:56] <jkramer> Well you can still set the agent via the constructor

[09:57] <jkramer> There's little to no reason for the user to replace the user-agent actually but why limit them if they really want to :)

[09:57] *** xtreak joined
[10:11] *** kurahaupo_ is now known as kurahaupo

[10:11] *** damnlie left
[10:12] *** damnlie joined
[10:14] *** jmerelo left
[10:42] *** mahafyi left
[10:44] *** psychoslave joined
[10:47] *** psychoslave left
[10:48] *** psychoslave joined
[10:53] *** mahafyi joined
[10:58] *** mahafyi left
[11:01] *** mahafyi joined
[11:11] *** mahafyi_ joined
[11:11] *** mahafyi left
[11:11] *** Schepeers left
[11:11] *** mahafyi_ is now known as mahafyi

[11:15] *** Schepeers joined
[11:17] *** Schepeers left
[11:19] *** Schepeers joined
[11:21] *** mscha left
[11:21] *** Schepeers left
[11:23] *** Schepeers joined
[11:29] *** raschipi joined
[11:33] *** raschipi_ joined
[11:36] *** raschipi left
[11:39] *** raschipi_ is now known as raschipi

[11:42] <Ulti> for the reason you create a class ;P 

[11:43] <Ulti> rather than have a global variable 

[11:55] *** noganex joined
[12:09] *** lizmat left
[12:10] *** lizmat joined
[12:15] *** Actualeyes left
[12:15] *** mahafyi_ joined
[12:15] *** Actualeyes joined
[12:16] *** mahafyi left
[12:16] *** mahafyi_ is now known as mahafyi

[12:42] *** xtreak left
[12:43] *** zakharyas left
[12:44] *** xtreak joined
[12:44] *** xtreak left
[12:50] *** mcmillhj joined
[12:54] *** wamba joined
[12:55] *** bdmatatu joined
[12:57] *** jmerelo joined
[13:00] *** curan left
[13:02] *** jmerelo left
[13:07] *** Tison joined
[13:13] *** raynold left
[13:16] *** Xliff joined
[13:17] *** HaraldJoerg1 joined
[13:17] *** HaraldJoerg left
[13:21] *** ExtraCrispy left
[13:22] *** ExtraCrispy joined
[13:26] *** psychoslave left
[13:42] *** psychoslave joined
[13:44] *** sergot joined
[13:48] *** Kaiepi left
[13:49] *** Kaypie joined
[13:49] *** Kaypie left
[13:49] <Geth> ¬¶ doc: 9ca8115dd3 | (Will "Coke" Coleda)++ | doc/Language/system.pod6

[13:49] <Geth> ¬¶ doc: fix type typo that broke compilation

[13:49] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/9ca8115dd3

[13:49] <synopsebot_> Link: https://doc.perl6.org/language/system

[13:49] *** Kaypie joined
[13:58] <mahafyi> Somewhat offtopic item: i used an example from jnthn to connect to postgresql with DB::Pg, the credentials are set as environment variables. There seems to be a ton of differing opinions whether to do that, or how else to store them. Whats the usual practice?

[13:59] *** speedChicken left
[14:00] <jnthn> mahafyi: fwiw, I do it that way because I deploy everything in containers, and it's a pretty standard (and convenient) approach there

[14:00] <mahafyi> jnthn : oh ok thanks. 

[14:01] <jnthn> I guess how you deploy will guide your decision there

[14:03] *** Xliff left
[14:04] *** mcmillhj left
[14:15] *** mcmillhj joined
[14:20] *** mcmillhj left
[14:28] *** zakharyas joined
[14:31] *** mcmillhj joined
[14:32] *** Schepeers left
[14:36] *** mcmillhj left
[14:42] <moritz> right, for a traditionally packaged app, a config file would be more typical

[14:43] *** Schepeers joined
[14:43] *** Schepeers left
[14:46] *** robertle_ left
[14:47] <Ulti> dunno even for traditionally packaged if you're in the cloud you often want to load balance on some env variables which read slave you hit etc.

[14:47] <Ulti> usually I have a heirarchy of preferences for that stuff

[14:47] <Ulti> where ENV variables always win out on configs

[14:47] *** mcmillhj joined
[14:47] <jnthn> Another option is that your config is actually a shell script that sets env vars and invokes :)

[14:48] *** Schepeers joined
[14:49] *** Schepeers left
[14:49] <moritz> like the /etc/defaults/* mechanism in debian, for example

[14:50] <Ulti> depends if you want the optional extra of local windows dev without effort

[14:50] <Ulti> actually does Cro currently do any conf for you?

[14:51] <Ulti> guess its not so much about the app layer of things

[14:52] *** mcmillhj left
[14:53] <mahafyi> no , i am not using Cro, but will learn soon i trust

[14:53] *** Schepeers joined
[14:54] *** Schepeers left
[14:57] <raschipi>  /etc/default is hideous, have the application itself detect what it should do instead of offloading it to the init system.

[14:58] *** troys joined
[14:58] <Ulti> yeah no worries I meant more generally, as Im starting to use it for my vanity site 

[14:58] *** mcmillhj joined
[14:58] <timotimo> cro has "cro run" which sets env vars for you and such

[14:59] *** mcmillhj left
[14:59] <timotimo> https://cro.services/docs/cro-yml - it reads from this file

[15:00] *** Schepeers joined
[15:00] *** Schepeers left
[15:03] <timotimo> it also watches your source dir for changes and restarts your app in that case

[15:04] *** Schepeers joined
[15:15] <raschipi> yuck

[15:16] <Ulti> sounds good to me

[15:16] <raschipi> can that be turned off?

[15:16] <raschipi> config changes should be applied as a whole transaction

[15:17] <jnthn> The `cro` command line tool is (and is clearly documented as) a development time only tool

[15:17] <jnthn> Not something to run the system under when deployed

[15:18] <Ulti> yeah you're talking about ensuring roll out to a forking server there surely raschipi ?

[15:18] <raschipi> It's a recipe to have the server unavailable because it picked up changes before other necessary ones are in effect, like updating the firewall.

[15:18] <raschipi> But it's fine in a development aid, sure.

[15:18] <jnthn> Right, you're talking about deployment, which it isn't for. :-)

[15:19] <Ulti> yeah for dev the magical just hack whats there right this second to the state Im trying to debug is invaluable

[15:19] *** mcmillhj joined
[15:20] <El_Che> jnthn: I like it in development, but you can be sure that once cro takes off people will use the cro command in production

[15:20] <El_Che> (I would be myself tempted when wrapped in a container)

[15:21] <timotimo> just force "cro run" and "cro trace" to make every 100_000th request take 10s to complete, that'll keep people from using it in production, but not hinder them in development

[15:21] <raschipi> They will use the development tool in production, I guarantee it. But there's nothing a dev can do about that, people love to shoot themselves on the foot.

[15:21] <Ulti> timotimo: lol maybe for sites that get a lot of traffic

[15:22] <timotimo> ok, 1_000 would also be enough

[15:22] *** domidumont left
[15:22] <jnthn> El_Che: Yeah, it'll be like with docker compose, which was also not intended as a production tool. :)

[15:23] <Ulti> I heard if you wrap things in enough abstractions it becomes production quality 

[15:23] <El_Che> yeah, we all collectively decided to throw the demo away :)

[15:23] <raschipi> Qeue devs trying to debug cro, because sometimes it get's a long time to answer.

[15:24] *** mcmillhj left
[15:24] <raschipi> Besides, the only possible answer to that is to patch it away.

[15:28] <jkramer> Or restart the service every 999 requests

[15:29] <El_Che> breaking devtools in purpose is a bad thing

[15:29] <El_Che> 2 wrongs won't make it right

[15:29] *** jmerelo joined
[15:30] <El_Che> the cro command could be production ready, e.g. if the feature could be enabled/disabled with a cmd line switch

[15:30] *** mahafyi left
[15:31] <El_Che> the hashicorp tools like vault have a -dev switch, that gives you a simplified dev server (on localhost, etc)

[15:31] <El_Che> it's a good approach

[15:33] *** mcmillhj joined
[15:34] *** kurahaupo left
[15:34] *** kurahaupo joined
[15:34] *** sena_kun joined
[15:34] *** kurahaupo_ joined
[15:36] *** maha_ joined
[15:36] *** maha_ is now known as mahafyi

[15:37] *** mahafyi left
[15:37] *** mcmillhj left
[15:38] *** mcmillhj joined
[15:39] *** kurahaupo left
[15:40] *** mahafyi joined
[15:43] *** mcmillhj left
[15:43] *** skids joined
[15:46] *** mcmillhj joined
[15:46] *** Matthias__ joined
[15:49] <Matthias__> hi all, seems like someone (I suspect moritz) changed the IRC logs so https://irclog.perlgeek.de/perl6/today leads to 404 while it should redirect to http://colabti.org/irclogger/irclogger_log/perl6?date=2018-06-11 (at least today). sorry for not fixing it directly, but at least wanted to let you know.

[15:49] *** Matthias__ left
[15:51] *** mcmillhj left
[15:51] *** wamba left
[15:51] <jmerelo> Matthias__ : they were closed due to the GDPR

[15:51] <lizmat> that's something Zoffix would need to fix on his irc.perl6.party site

[15:52] <jmerelo> I think you have to set up the redirecion locally...

[15:52] <lizmat> jmerelo: moritz's sote redirects to Zoffix's site, but that one doesn't know how to handle /todat

[15:52] <lizmat> */today

[15:52] <lizmat> *site

[15:52] <lizmat> grrr

[15:52] <jmerelo> lizmat: ah, OK. I didn't know that...

[15:53] *** zakharyas left
[15:53] *** kurahaupo_ is now known as kurahaupo

[15:53] <lizmat> it's going to be in the P6W  :-)

[15:55] *** kurahaupo left
[15:55] *** kurahaupo joined
[15:56] *** Zoffix joined
[15:56] *** wamba joined
[15:57] <Zoffix> I'm not gonna fix it. The 404 page tells what the right link is. I don't want people hitting my app all the time instead of just using the right link from the start.

[15:58] *** mcmillhj joined
[16:00] *** reportable6 joined
[16:01] <Zoffix> .tell AlexDaniel since you're in contact with the colabti person maybe you could mention to them: I noticed the "today's log" URL (e.g. https://colabti.org/irclogger/irclogger_log/perl6 ) has an LTA behaviour. When a new day just starts, that page says "No data for the day" or whatever and there's no way to view log previous day. Would be nice to at least have that link there.

[16:01] <yoleaux> Zoffix: I'll pass your message to AlexDaniel.

[16:03] * AlexDaniel also wanted to mention /today

[16:04] <AlexDaniel> btw I also asked for https some time ago :)

[16:04] <AlexDaniel> Zoffix: k, thanks

[16:05] <AlexDaniel> Zoffix: btw if you're touching the thing, you can probably already add a redirect for #perl6-dev #moarvm and #p6dev

[16:05] <Zoffix> How? There's no data in the db

[16:06] <Zoffix> and perlgeek URLs for those channels don't redirect to irc.perl6.party either

[16:07] <AlexDaniel> well, the logs will be populated shortly, I have the files ready

[16:07] *** mcmillhj left
[16:07] <AlexDaniel> the redirect should be added, but I guess we have to ping moritz about that?

[16:08] <Zoffix> mhm

[16:08] *** domidumont joined
[16:08] <AlexDaniel> Zoffix: and the message id ‚Üí hash lookup file is here: https://files.progarm.org/lookup

[16:14] <AlexDaniel> Zoffix: btw I think links like this are not working: https://irclog.perlgeek.de/perl6/2018-05-30

[16:15] *** mcmillhj joined
[16:15] <moritz> there should be no old links to pages that irclog.perlgeek.de never had

[16:15] <moritz> and if anybody creates new links, it's their own fault

[16:16] <HaraldJoerg1> m: my atomicint $a = 1; $a‚öõÔ∏è++; say $a

[16:16] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Bogus postfix‚ê§at <tmp>:1‚ê§------> 3my atomicint $a = 1; $a7‚èè5‚öõÔ∏è++; say $a‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        statement end‚ê§        statement modifie‚Ä¶¬ª

[16:16] <HaraldJoerg1> m: my atomicint $a = 1; $a‚öõ++; say $a

[16:16] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´2‚ê§¬ª

[16:17] <AlexDaniel> moritz: sure?

[16:17] *** HaraldJoerg1 is now known as HaraldJoerg

[16:17] <AlexDaniel> moritz: btw can you set up a redirect for #moarvm #perl6-dev and #p6dev ? That would be awesome

[16:18] <moritz> AlexDaniel: redirect to where?

[16:18] <AlexDaniel> moritz: to irc.perl6.party, much like #perl6 currently redirects

[16:19] *** mcmillhj left
[16:20] <moritz> AlexDaniel: done, please check if they work to your satisfaction

[16:20] <Zoffix> I took the app down for a sec while I'm loading new hashes

[16:21] <Zoffix> oh wait, I didn't misspelt the stop command. Oh well

[16:22] <AlexDaniel> the logs are not there just yet, but I'm waiting for colabti folks to come up online, so that's the last missing piece I think

[16:22] <AlexDaniel> Zoffix++ moritz++

[16:22] *** psychoslave left
[16:22] *** mcmillhj joined
[16:26] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/06/11/2018-24-discussion-redirect/

[16:27] <Zoffix> wooo \o/

[16:28] <Zoffix> AlexDaniel: OK, hashes loaded

[16:28] *** kubrat_ joined
[16:28] *** kubrat_ left
[16:29] <AlexDaniel> Zoffix: thank you!

[16:31] <lizmat> fwiw, if we think chat logs are that important to Perl 6, we should house them ourselves under irclog.perl6.org, I would think

[16:32] <Zoffix> +1

[16:33] <Zoffix> Though, perl6.org infrastructure is moritz's so we're back at the GDPR issue :)

[16:33] <moritz> I'm happy to delegate the subdomain to another IP address

[16:33] <lizmat> not sure, as moritz is sysadmin on that, not responsible for the site itself

[16:34] <lizmat> as that would be the Perl Foundation, afaik

[16:34] <moritz> well, if you host PII with a 3rd party, you need a contract with them

[16:34] <moritz> and I'm not providing such a contract for the Perl 6 infrastructure

[16:36] <AlexDaniel> lizmat: ‚Äúis worked‚Äù in the first paragraph :)

[16:36] <Zoffix> AlexDaniel: and this works now: https://irclog.perlgeek.de/perl6/2018-06-11

[16:36] <AlexDaniel> Zoffix: o that's awesome, thank you!

[16:37] <lizmat> AlexDaniel++   # was fixo, first read "is working"   :-)

[16:44] <Zoffix> "So far, the Perl 6 presentations are in a majority" woooooo \o/

[16:45] <jmerelo> So, who's going?

[16:45] <El_Che> that's a first

[16:45] * lizmat is going  :)

[16:46] <El_Che> that's a first

[16:46] * jmerelo has plane tickets already

[16:46] * lizmat is going to do http://www.perlworkshop.nl/nlpw2018/talk/7388

[16:46] <lizmat> aka "The Future Of Perl Is Here"

[16:47] <moritz> ... it's just not evenly distributed

[16:48] <lizmat> :)

[16:48] <El_Che> lizmat: I suggest you wear this: https://bit.ly/2JuQVyP

[16:49] <Zoffix> lizmat++ # good weekly

[16:49] * El_Che is looking at rurban's comment on speed

[16:50] <lizmat> .oO( some people are equal opportunity offenders )

[16:51] * jnthn wonders whether the reader or the author are on speed...

[16:51] <El_Che> lol

[16:51] <Zoffix> :)

[16:51] *** dakkar left
[16:51] <El_Che> it's not because you're paranoid that they aren't after you

[16:51] *** dataangel left
[16:52] *** dataangel joined
[16:52] <lizmat> El_Che: not so worried about the NLPW

[16:52] * [Coke] reads rurban's comment linked to from the weekly and is not sure if that is pro 6 or anti 6.

[16:52] * jmerelo thanks lizmat for her kind words in the weekly

[16:52] <El_Che> I find it weird he mentions p2, pony and parrot as arguments

[16:53] <El_Che> [Coke]: it could be pro perl6 as a language, but against its implementation

[16:53] <lizmat> fwiw, I always thought it was PONIE

[16:53] * jmerelo adds there was also a cake and I got a prize for it :-) https://jj.github.io/manzanachos-con-natamole/

[16:53] <El_Che> "I think I'm the only one in the Perl community working on a VM which is actually that fast, pony. It's also properly designed and has a proper and safe concurrency model. The only other VM besides parrot."

[16:53] <jmerelo> El_Che: sorry, I'm lost here... What are we talking aout?

[16:53] <El_Che> https://www.reddit.com/r/perl6/comments/8p26bb/is_perl6_faster_than_perl_5_on_average/

[16:54] <El_Che> from the weekly

[16:54] <lizmat> El_Che: I may need the flame retardant more at https://perlconference.us/tpc-2018-slc/session/the-state-of-the-cpan-butterfly-plan-2/

[16:54] <raschipi> I think [Coke] meant this one: https://news.ycombinator.com/item?id=17244677

[16:55] <El_Che> yeah, the backslash was mostly from the USA, I remember

[16:55] *** Zoffix left
[16:55] <[Coke]> as far as I know, parrot has been the bad stable for some kind, and I thought pony was long dead.

[16:55] <[Coke]> "for some *time*"

[16:55] <El_Che> if you kick a dead ponie and it moves, ...

[16:55] <raschipi> Oh, he's in both.

[16:56] *** gregf_ joined
[16:56] <[Coke]> ah. ok, that is very clearly anti p6.

[16:56] <El_Che> it would make his argument stronger if there were no personal attacks

[16:56] <[Coke]> (the reddit link)

[16:56] <El_Che> it reads as a rant

[16:57] <lizmat> .oO( stream of subconsciousness )

[16:57] <[Coke]> I unfortunately have to basically discount everything Reini says because he cannot separate the tech discussion from anything else.

[16:57] <raschipi> In the reddit thread he is against the implementation. In the hackernews thread, he is against the language.

[16:58] *** nnunley left
[16:59] *** nnunley joined
[17:00] <jmerelo> I can see a meme with the words "It's tainted its name, and it's doomed" With many more o's, probably.

[17:02] <gregf_> p6: say "test " x 10

[17:02] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´test test test test test test test test test test ‚ê§¬ª

[17:07] *** molaf joined
[17:12] *** telex joined
[17:14] *** Guest75834 left
[17:14] *** jmerelo left
[17:18] *** hythm_ joined
[17:19] *** wamba left
[17:20] <hythm_> P6: my @a = <1 2>; sub(:@a) { say @a };  s(:@a);

[17:20] <hythm_> p6: my @a = <1 2>; sub(:@a) { say @a };  s(:@a);

[17:20] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´5===SORRY!5===‚ê§Word 'sub' interpreted as 'sub()' function call; please use whitespace around the parens‚ê§at <tmp>:1‚ê§------> 3my @a = <1 2>; sub7‚èè5(:@a) { say @a };  s(:@a);‚ê§Unexpected block in infix position (two terms in a row)‚ê§at ‚Ä¶¬ª

[17:21] <hythm_> p6: my @a = <1 2>; sub s(:@a) { say @a };  s(:@a);

[17:21] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´[1 2]‚ê§¬ª

[17:21] <hythm_> p6: my @a = <1 2>; sub s(Int :@a) { say @a };  s(:@a);

[17:21] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´Type check failed in binding to parameter '@a'; expected Positional[Int] but got Array ($[IntStr.new(1, "1"),...)‚ê§  in sub s at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:22] <hythm_> How can i have Int constrain on  @a?

[17:22] <jnthn> Declare the array as my Int @a

[17:24] <hythm_> Makes sense, Thanks jnthn

[17:25] <raschipi> hythm_: Array[Int] is different from an Array with Ints on it. For performance reasons.

[17:26] *** wamba joined
[17:27] <hythm_> rashcipi: noted.

[17:28] <lizmat> m: dd my Int @a  # raschipi: not sure that's true

[17:28] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´Array[Int] @a = Array[Int].new()‚ê§¬ª

[17:28] <jnthn> I think the point was that it's a different *type*

[17:28] <jnthn> Which is true, and the thing that matters here

[17:29] <raschipi> And signatures won't accept one for the other.

[17:29] <raschipi> There's a way to ask for an array with Ints using where, but I don't remember the idiom.

[17:30] <hythm_> p6: my Int @a = <1 2>; sub s(:@a) { say @a };  s(:@a);

[17:30] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´[1 2]‚ê§¬ª

[17:32] <timotimo> [Coke]: fwiw i believe ponie and pony are two rather different things

[17:32] <timotimo> ponie was supposed to be perl5 on parrot, pony is a new language iirc

[17:33] *** wamba left
[17:33] <ilmari> wasn't there a perl 1 on parrot as well?

[17:34] *** psychoslave joined
[17:42] <[Coke]> timotimo: well, that's embarrasing. Thanks for letting me know!

[17:42] <[Coke]> ilmari: wasn't a full impl., as I recall. something allison had worked on

[17:44] *** pecastro joined
[17:50] *** giraffe joined
[17:50] *** giraffe is now known as Guest9306

[17:51] *** hythm_ left
[18:00] *** espadrine joined
[18:05] *** HaraldJoerg1 joined
[18:05] <timotimo> shouldn't rakudo have become "as fast as c" when we published perl6.c?

[18:05] *** HaraldJoerg left
[18:06] <El_Che> timotimo: you're evil

[18:07] <masak> you can't ever achieve c, not if you have nonzero mass

[18:09] <El_Che> new Science Fiction series have FTC space ships

[18:10] <timotimo> the obvious way to be faster than C is not having to go the long way around

[18:11] <timotimo> that's how pypy got their one Faster Than C blog post where they measured pypy's string format against C's sprintf

[18:11] <timotimo> because their formatting got turned into static code because the format string was constant

[18:11] *** comborico1611 joined
[18:11] <timotimo> but sprintf had to evaluate it over and over

[18:16] <Juerd> masak: lol

[18:16] <El_Che> the pypy approach is a no go. rakudorakudo is way too long

[18:18] *** brrt joined
[18:18] <Juerd> It'd be rara... Not sure if that's better.

[18:21] *** sauvin left
[18:22] <masak> I think Lady Gaga already tried that.

[18:25] <raschipi> Just call it Èß±ÈßùÈß±Èßù

[18:25] <comborico1611> I will rejoice when that satanist is dead.

[18:28] <geekosaur> can we, er, take that kind of talk elsewhere?

[18:28] <geekosaur> yo're welcome to your opinions but this is not the place for them

[18:30] <comborico1611> Oh.  I didn't realize I'd be censored.  Sorry about that.

[18:32] <geekosaur> how many people do you see here mouthing off?

[18:33] <comborico1611> Exactly where in my two statements that I've made today, did I "mouth off"?

[18:34] <raschipi> The first.

[18:35] *** ExtraCrispy left
[18:42] *** Xliff joined
[18:43] *** wamba joined
[18:47] *** HaraldJoerg1 is now known as HaraldJoerg

[18:48] <masak> comborico1611: are you here for the #perl6? :)

[18:50] <geekosaur> they've been doing perl 6 for a while

[18:50] <geekosaur> and mostly well behaved, up to then

[18:51] <masak> goodie. I have a hard time staying up to sync nowadays ;)

[18:54] * moritz too

[18:54] <masak> in many cultures, it is considered impolite to rejoice at someone's demise

[18:56] <masak> but more shocking, I think, was the non sequitur

[18:58] <timotimo> yeah, that swung from light-hearted banter and puns to that ...

[19:05] <masak> m: sub shuffle($l) { $l.pick(*) }; sub balanced($s) { so all([\+] $s.comb.map(-> $c { $c eq "(" ?? 1 !! -1 })) >= 0 }; repeat until balanced(my $s) { $s = ("(" xx 5, ")" xx 5).flat.&shuffle.join }; say $s

[19:05] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´()(()()())‚ê§¬ª

[19:05] <masak> there. that should make the discussion more balanced.

[19:07] <moritz> nice use of triangle reduce, masak++

[19:07] <masak> I don't reduce often...

[19:07] <moritz> m: say ord '('

[19:07] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´40‚ê§¬ª

[19:07] <masak> ...but when I do, I trangle reduce

[19:07] <moritz> m: say ord ')'

[19:07] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´41‚ê§¬ª

[19:07] <masak> moritz: oh no no no no :)

[19:07] <moritz> masak: you know me far too well :-)

[19:08] <masak> you're having impure thoughts

[19:10] <[Coke]> IMO, wishing someone dead is grounds for an outright ban.

[19:10] <moritz> I've learned much of the Art of Evil Shortcut by reading my predeccor's code at $work

[19:11] <moritz> [Coke]: I wish death to far too many people to support that. It's just that on good days, I can contain myself

[19:11] * masak .oO( IMO, people wishing someone dead should be shot on sight )

[19:12] * masak .oO( sincerely, Epimenides )

[19:12] <raschipi> masak, noted

[19:15] <masak> moritz: the containment is actually a monad. in Haskell, it's in Control.Monad.Dead.Lazy

[19:15] <AlexDaniel> quotable6: dead

[19:15] <quotable6> AlexDaniel, OK, working on it! This may take up to three minutes (4582161 messages to process)

[19:16] <quotable6> AlexDaniel, 3756 messages (2005-02-28‚åÅ2018-04-26): https://gist.github.com/d1ef66c8fa6642a3c66590bc68d1ea76

[19:16] <masak> "not to beat a dead horse, but aside from inertia and masak and the pain of switching, why are we still using rt.perl.org ?" -- ouch :)

[19:17] <AlexDaniel> I also like this one

[19:17] <AlexDaniel> ‚ÄúIt's really flappy. Two runs dies right away, then many runs doesn't die: https://gist.github.com/zoffixznet/9ee7467b279b2801d3fdeada33498099‚Äù

[19:17] *** comborico1611 left
[19:17] <AlexDaniel> for a bit I was trying to figure out how it matched ‚Äúdies‚Äù from /dead/

[19:18] <AlexDaniel> :)

[19:18] <masak> haha

[19:18] * masak too

[19:18] <timotimo> wow, nice

[19:18] <masak> that's death for ya. sneaks up on you.

[19:19] <masak> you're enjoying a standard SHA-1, and then, BOOM!

[19:19] <raschipi> there's dead

[19:19] <masak> you try to act cool about it, like

[19:19] <masak> "nice to see you there, dead"

[19:20] <masak> but it's too late. the day is ruined

[19:25] <masak> can someone calculate the probability of the substring "dead" happening in a uniformly random 40-hexdigit string? I can almost see how to calculate it, but I'm a bit tired.

[19:26] *** Zoffix joined
[19:27] <masak> in a 4-hexdigit string it's already 0.0015, so... it's unlikely.

[19:27] <Zoffix> masak: 4‚Å¥*10?

[19:27] <Zoffix> m: say 4‚Å¥

[19:27] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´256‚ê§¬ª

[19:27] <Zoffix> err

[19:27] <Zoffix> m: say (1/40)‚Å¥

[19:27] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´0.00000039‚ê§¬ª

[19:27] <masak> Zoffix: I think there's an assumption in there about 10 non-overlapping 4-digit segments, which is not how it works.

[19:27] <Zoffix> masak: how did you get 0.0015?

[19:27] <masak> Zoffix: 1 / 16 ** 4

[19:28] <Zoffix> Oh duh, I've used 40 :P

[19:28] <masak> * 100, although I neglected to say it was a percentage :/

[19:28] *** domidumont left
[19:28] <masak> 0.0015%

[19:29] <Zoffix> masak: and there are 36 trials, right? 

[19:29] <masak> 37, methinks

[19:29] <Zoffix> m: say +(10‚Å¥‚Å∞).comb.rotor: 4 => -3

[19:29] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´38‚ê§¬ª

[19:30] <Zoffix> m: say (1/16)‚Å¥*38

[19:30] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´0.00058‚ê§¬ª

[19:30] <masak> but they're not independent

[19:31] <moritz> .oO( good enough approximation for a physicist :D )

[19:31] <masak> moritz: this is why we can't have nice things :P

[19:31] <AlexDaniel> 0%, good, let's move on. :P

[19:31] <Zoffix> Why not? I can shuffle 40 chars, by shuffling each segment of 4 and seeing if I got "dead"

[19:32] <masak> Zoffix: because "dead" might not fit neatly in such a segment

[19:32] <masak> it might straddle two

[19:32] <moritz> Zoffix: if the 4th character is a 0, that stops 4 possible substrings from being "dead"

[19:33] <Zoffix> ok

[19:33] <masak> moritz said it better

[19:33] <AlexDaniel> m: say (1/16)‚Å¥ * 29

[19:33] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´0.000443‚ê§¬ª

[19:33] * AlexDaniel has no idea what he is doing

[19:33] <masak> this, interestingly, is also the basis of Knuth-Morris-Pratt

[19:34] <Zoffix> m: say (sum do for ^10000 { ('a'‚Ä¶'z', 0‚Ä¶9).flat.pick(40).contains: 'dead' and 1 or 0 })/10000

[19:34] <AlexDaniel> that should be a good approximation :)

[19:34] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´0‚ê§¬ª

[19:35] <Zoffix> hah

[19:35] <masak> and so it was

[19:35] <moritz> a..f, not a..z

[19:35] <Zoffix> m: say ('a'‚Ä¶'z', 0‚Ä¶9).flat.pick(40)

[19:35] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´(4 v r t 6 g o c b k z 7 3 h a s m f d 8 j u y 9 5 w p q e i n 2 0 l x 1)‚ê§¬ª

[19:35] <masak> right. hexdigits.

[19:36] <Zoffix> m: my \c := ('a'‚Ä¶'f', 0‚Ä¶9).flat; my \n = 10_000; say (sum do for ^n { c.pick(40).contains: 'dead' and 1 or 0 })/n

[19:36] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´The iterator of this Seq is already in use/consumed by another Seq‚ê§(you might solve this by adding .cache on usages of the Seq, or‚ê§by assigning the Seq into an array)‚ê§  in code  at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[19:36] <moritz> m: say (sum do for ^10000 { ('a'‚Ä¶'f', 0..9).flat.pick(40).join.contains: 'dead' and 1 or 0 })/10000

[19:36] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´0‚ê§¬ª

[19:36] <Zoffix> m: my \c := ('a'‚Ä¶'f', 0‚Ä¶9).flat.cache; my \n = 10_000; say (sum do for ^n { c.pick(40).contains: 'dead' and 1 or 0 })/n

[19:36] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´0‚ê§¬ª

[19:36] <Zoffix> m: my \c := ('a'‚Ä¶'f', 0‚Ä¶9).flat.cache; my \n = 100_000; say (sum do for ^n { c.pick(40).contains: 'dead' and 1 or 0 })/n

[19:36] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´0‚ê§¬ª

[19:36] <Zoffix> m: my \c := ('a'‚Ä¶'f', 0‚Ä¶9).flat.cache; my \n = 10000_000; say (sum do for ^n { c.pick(40).contains: 'dead' and 1 or 0 })/n

[19:36] <AlexDaniel> but fwiw gists have 32 char ids, not 40

[19:36] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´(timeout)¬ª

[19:36] <Zoffix> Oh I forgot a join

[19:36] <masak> and .roll(40), not .pick(4)

[19:37] *** Xliff left
[19:37] <masak> 40

[19:37] <hoelzro> also, are .pick and .roll uniform?

[19:37] <Zoffix> m: my \c := ('a'‚Ä¶'f', 0‚Ä¶9).flat.cache; my \n = 100_000; say (sum do for ^n { c.roll(40).join.contains: 'dead' and 1 or 0 })/n

[19:37] <masak> yes, but .pick removes

[19:37] * hoelzro has been successfully nerd-sniped

[19:37] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´0.00046‚ê§¬ª

[19:37] <moritz> hoelzro: yes

[19:37] *** darutoko left
[19:37] <Zoffix> m: my \c := ('a'‚Ä¶'f', 0‚Ä¶9).flat.cache; my \n = 1000_000; say (sum do for ^n { c.roll(40).join.contains: 'dead' and 1 or 0 })/n

[19:37] * hoelzro nods

[19:37] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´0.000594‚ê§¬ª

[19:37] <masak> m: my $i = 0; repeat until my $s.contains("dead") { ++$i; $s = ("a".."f", 0..9).flat.pick.join }; say $i

[19:37] <Zoffix> That's pretty close to my calculated 0.00058

[19:38] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´(timeout)¬ª

[19:38] *** bwisti joined
[19:38] <moritz> good enough for a physicist, as I said :)

[19:38] <Zoffix> :)

[19:38] <masak> I'm running that timed-out thing locally, and it's still running.

[19:38] <Zoffix> masak: you picked just one letter

[19:39] <Zoffix> instead of 4 or whatever

[19:39] <moritz> or 32 :)

[19:39] <masak> oops

[19:39] * masak is new at this "coding" activity

[19:40] <moritz> maybe you should start with some tests :-)

[19:40] <masak> and someone I wrote .pick, too

[19:40] * masak slaps moritz with a big herring :)

[19:40] <AlexDaniel> cording? sounds fun

[19:40] <masak> m: my $i = 0; repeat until my $s.contains("dead") { ++$i; $s = ("a".."f", 0..9).flat.roll(40).join }; say $i

[19:40] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´933‚ê§¬ª

[19:40] <masak> oh, that's better

[19:40] <masak> m: say 1 / 933

[19:40] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´0.001072‚ê§¬ª

[19:41] <raschipi> ?

[19:41] <AlexDaniel> m: my \c := ('a'‚Ä¶'f', 0‚Ä¶9).flat.cache; my \n = 100_000; say (sum do for ^n { c.pick(40).contains: 'dead' and 1 or 0 })/n; say now - BEGIN now

[19:42] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´0‚ê§3.3429909‚ê§¬ª

[19:42] *** mcmillhj left
[19:42] <Zoffix> m: my \n := 1000; say (sum do for ^n { my $i = 0; repeat until my $s.contains("dead") { ++$i; $s = ("a".."f", 0..9).flat.roll(40).join }; $i })/n

[19:42] <AlexDaniel> e: my \c := ('a'‚Ä¶'f', 0‚Ä¶9).flat.cache; my \n = 100_000; say (sum do for ^n { c.pick(40).contains: 'dead' and 1 or 0 })/n; say now - BEGIN now

[19:42] <evalable6> AlexDaniel, rakudo-moar 20bf96f9e: OUTPUT: ¬´0‚ê§3.2739375‚ê§¬ª

[19:42] <AlexDaniel> just a bit faster :)

[19:42] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´(timeout)¬ª

[19:43] <masak> getting 0.00063 after 100_000 runs

[19:43] <masak> locally

[19:44] <masak> bet sorear would've gisted me the exact calculation by now if he were here... :)

[19:49] *** Zoffix left
[19:50] *** raschipi left
[19:58] <masak> m: my %s = "" => 1, D => 0, DE => 0, DEA => 0, DEAD => 0; for ^40 { %s = "" => %s{""} * 15 + %s<D> * 14 + %s<DE> * 14 + %s<DEA> * 15, D => %s{""} + %s<D> + %s<DE>, DE => %s<D>, DEA => %s<DE>, DEAD => %s<DEAD> + %s<DEA> }; say %s<DEAD> / 16 ** 40

[19:58] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´1.626389518047305e-05‚ê§¬ª

[19:58] <masak> I've probably gotten details wrong, but I think the general idea there is sound.

[19:59] <masak> it's basically a NFA parsing all possible SHA-1s and keeping track of the probability of a "dead" substring

[20:02] <hoelzro> fraction of "dead" in 5 letter hex strings: 3.0517578125e-05

[20:02] <hoelzro> in 6 letter: 4.57763671875e-05

[20:03] <hoelzro> so it looks like each additional letter increases the chances by 50%

[20:03] <hoelzro> hmm, that can't be right...

[20:05] <hoelzro> yeah, nevermind - I'm crap at probability anyway ¬Ø\_(„ÉÑ)_/¬Ø

[20:06] <masak> neater version:

[20:06] <masak> m: my $N = 40; my ($Œµ, $D, $DE, $DEA, $DEAD) = 1, 0, 0, 0, 0; for ^$N { ($Œµ, $D, $DE, $DEA, $DEAD) = $Œµ * 15 + $D * 14 + $DE * 14 + $DEA * 15, $Œµ + $D + $DE, $D, $DE, $DEAD + $DEA }; say $DEAD / 16 ** $N

[20:06] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´1.626389518047305e-05‚ê§¬ª

[20:10] *** mcmillhj joined
[20:10] * masak ‚ô° Perl 6

[20:10] *** Kaypie left
[20:11] <moritz> the simulation over 10M attempts comees out at 0.000557

[20:11] *** Kaypie joined
[20:12] <masak> moritz: the NFA above ought to be a lot more precise than the simulation.

[20:12] <masak> whether it's correct is another matter... :)

[20:14] <masak> 557 times in a million sounds plausible to my feeble intuition, though.

[20:16] <masak> m: say 1 - ((1 - 1 / 16 ** 4) ** 37)

[20:16] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´0.0005644201577048591‚ê§¬ª

[20:16] <masak> and there's the physicist's approximation, IMO

[20:16] <masak> I stand by the 37. there's 1 chance when the string length is 4, and then you add 36 more hexdigits.

[20:17] <masak> which means the simulation and the physicist's approx agree, and my NFA is wrong :)

[20:20] <timotimo> what just happened to perlmonks, i'm getting an https certificate problem

[20:20] <timotimo> "This server could not prove that it is perlmonks.org; its security certificate is from *.pairsite.com." ??

[20:20] <[Coke]> hoelzro: hio

[20:20] <hoelzro> o/ [Coke] 

[20:23] <geekosaur> cert expired and got defaulted back to their provider (pair networks)?

[20:23] <geekosaur> or said provider glitched and is feeding the default cert

[20:26] <[Coke]> timotimo: I just went there, no issues in chrome

[20:26] <timotimo> funny how it happened right between two requests i made

[20:26] <[Coke]> O_o;

[20:27] <timotimo> i ctrl-r'd and still get the warning

[20:28] <moritz> iirc they have a ton of domains for perlmonks, but only some work with HTTPS, and only on some of the application servers

[20:36] <AlexDaniel> I think links to #perl6-dev and #moarvm should be working now

[20:37] <AlexDaniel> please check

[20:37] <AlexDaniel> e.g. https://irclog.perlgeek.de/moarvm/2018-04-11#i_16035620

[20:38] <HaraldJoerg> Re perlmonks certificate: This has been discussed in a couple of perlmonks threads... as far as I recall, one of the servers in the pool responds with a pairsite certificate

[20:40] <AlexDaniel> quotable6: p6dev

[20:40] <quotable6> AlexDaniel, OK, working on it! This may take up to three minutes (4582161 messages to process)

[20:41] <quotable6> AlexDaniel, 122 messages (2010-04-07‚åÅ2018-01-04): https://gist.github.com/18315bd9d65f6596c019b15f050eecd2

[20:50] *** bwisti left
[20:50] *** noobp6 joined
[20:51] <noobp6> hi.   anyone have a string that outputs to a file (via spurt) differently depending on if  :bin  is given as a parameter?

[20:52] <noobp6> trying to understand exactly what bin mode does, but so far I can find a string that is affected at all by bin mode in the output

[20:52] <noobp6> can't*

[20:52] <timotimo> if you want to take advantage of bin mode, you'll need to spurt a Buf or Blob

[20:53] *** brrt left
[20:53] <noobp6> timotimo: but even with Buf or Blob, they seem to output the same even if :bin isn't provided

[20:53] <timotimo> it doesn't seem like spurt accepts a bin parameter at all

[20:53] <b2gills> I think :bin affects input more than output

[20:53] <timotimo> just by virtue of being a method and accepting any named parameter

[20:54] <timotimo> oh, the docs are just not complete

[20:54] <noobp6> b2gills: that is what I was starting to suspect

[20:54] <timotimo> s: IO, "spurt", \("foo", :bin)

[20:54] <SourceBaby> timotimo, Something's wrong: ‚ê§ERR: Too many positionals passed; expected 2 arguments but got 3‚ê§  in sub sourcery at /home/zoffix/services/lib/CoreHackers-Sourcery/lib/CoreHackers/Sourcery.pm6 (CoreHackers::Sourcery) line 28‚ê§  in block <unit> at -e line 6‚ê§‚ê§

[20:54] <timotimo> mhh

[20:56] <timotimo> IO::Path.spurt doesn't actually take a bin parameter

[20:57] <noobp6> timotimo: okay.. I was reading from https://docs.perl6.org/type/IO.html#sub_spurt

[20:57] <noobp6> which said it did.

[20:57] <timotimo> yup!

[20:58] <timotimo> i was looking there, too, but then i looked further at the source

[20:58] <timotimo> and i'd say that doc page needs changed

[20:58] <noobp6> okay, thanks so much for taking the time to look.

[20:59] <timotimo> https://github.com/rakudo/rakudo/blob/master/src/core/IO/Path.pm6#L624

[21:00] <noobp6> timotimo:  so it turns bin mode on if the data type is a buf

[21:01] <noobp6> Blob*

[21:01] <timotimo> yes, looks like; note that Buf is also Blob

[21:03] <[Coke]> ah, now I'm getting the perlmonks cert error repeatedly.

[21:05] <AlexDaniel> awwaiid azawawi b2gills bartolin brrt btyler cognominal [Coke] colomon DrForr FROGGS geekosaur hankache hoelzro japhb jnthn lizmat lucasb MadcapJake masak moritz mst nine perlpilot pmurias psch RabidGravy Skarsnik skids sno sortiz stmuk tadzik teatime timotimo TimToady tomboy64 [Tux] ugexe Ven vendethiel Woodi

[21:05] <AlexDaniel> ‚Üë do you give your permission to publish #p6dev logs (that may contain messages sent by you + join events) for the 2016-03-15 .. 2016-05-20 period? (the topic on that channel never said that it is being logged, which is why I ask)

[21:05] <geekosaur> I do

[21:05] <timotimo> you have mine

[21:06] <lizmat> I do 2

[21:06] <b2gills> Affirmative

[21:06] <hoelzro> AlexDaniel: yes

[21:06] *** mcmillhj left
[21:06] <geekosaur> (as far as I am concerned, if I put it somewhere on the Internet, it's public unless only I control the encryption)

[21:08] <jnthn> AlexDaniel: yes

[21:12] <[Coke]> AlexDaniel: yes

[21:13] *** mcmillhj joined
[21:15] <AlexDaniel> as a bonus, these users joined the channel but never sent any message: astj Begi BenGoldberg Brock bros CurtisOvidPoe Danishman devtom30 dogbert17 gregf_ Hotkeys ilmari JimmyZ kpPuvP lbvcxNpu llfourn lucs mojca mops PerlJam pmichaud pouledodue pyrimidine raydiak saaki SauceRageuse SrKeys ufobat YvargDibar _z Zoffix

[21:16] <AlexDaniel> so please let me know if there's a problem with publishing your join events, we'll filter them out

[21:16] <AlexDaniel> although‚Ä¶ just because I said it now‚Ä¶ :)

[21:20] *** AlexDaniel left
[21:20] *** AlexDaniel joined
[21:22] *** sena_kun left
[21:22] *** psychoslave left
[21:23] *** mcmillhj left
[21:23] *** AlexDaniel`` left
[21:23] *** AlexDaniel`` joined
[21:31] *** mcmillhj joined
[21:33] <AlexDaniel> OK I think most logs are now recovered and should redirect correctly

[21:33] <AlexDaniel> a huge thanks to user feb from #irclogger

[21:34] *** Zoffix joined
[21:34] <Zoffix> AlexDaniel: but how do you know the Zoffix that's giving permission right now is the same Zoffix that sent a particular message? :)

[21:35] <AlexDaniel> Zoffix: I guess this was mostly to show feb that I'm not trying to sneak some logs into public without users expecting that

[21:35] *** robertle left
[21:36] <AlexDaniel> would've been easier if /topic on that channel had the right words from the start :)

[21:37] *** psychoslave joined
[21:38] <Zoffix> noobp6: did you figure it out?

[21:38] <AlexDaniel> but it's interesting, just two months of channel existence, and people are already linking to it from other channels, from commit messages, from bug reports‚Ä¶

[21:39] <AlexDaniel> .oO( Cool URIs don't change )

[21:40] <Zoffix> noobp6: if you give .spurt a Blob, it'll write it out as binary data, otherwise it's nonbinary mode.

[21:41] <Geth> ¬¶ doc: e3cb4be3c1 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/IO.pod6

[21:41] <Geth> ¬¶ doc: Remove `:bin` from &spurt

[21:41] <Geth> ¬¶ doc: 

[21:41] <Geth> ¬¶ doc: It used to exist, but IIRC around the IO Grant time, it was tossed and the decision

[21:41] <Geth> ¬¶ doc: on whether to use binary mode was made solely based on whether a Blob or a Str

[21:41] <Geth> ¬¶ doc: was given as argument.

[21:41] <synopsebot_> Link: https://doc.perl6.org/type/IO

[21:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/e3cb4be3c1

[21:42] <AlexDaniel> Zoffix: thank you for redirection btw, I think it's awesome

[21:42] <Zoffix> m: $*OUT.spurt: Blob.new: 200, 200

[21:42] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´\xC8¬ª

[21:44] *** rindolf left
[21:45] <AlexDaniel> btw for anybody wondering, logs for the period 2018-04-29 .. 2018-05-24 (on perl6-dev and moarvm) are missing, I don't have them

[21:46] <AlexDaniel> and personal logs will not do as far as I can see, so we'll have to live with that

[21:47] *** psychoslave left
[21:49] <Zoffix> masak: but didn't my rotor eval showed there are 38, not 37 places? 

[21:50] <Zoffix> m: say 10 sDF sdFGz XDFG zsxDFG sDFGTR sZXDFG

[21:50] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3say 107‚èè5 sDF sdFGz XDFG zsxDFG sDFGTR sZXDFG‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚Ä¶¬ª

[21:50] <Zoffix> s DF

[21:50] <Zoffix> freeking windows.... Grabbing Windows key from my VM, but it's my compose key -_-

[21:50] <Zoffix> m: say (10**40).chars

[21:50] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´41‚ê§¬ª

[21:50] <Zoffix> masak: ah, k, I had an offbyone in my string :P

[21:51] <Zoffix> m: say (10**39).chars

[21:51] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´40‚ê§¬ª

[21:51] <Zoffix> m: say +(10**39).comb.rotor: 4 => -3

[21:51] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´37‚ê§¬ª

[21:52] *** Zoffix left
[21:55] *** mcmillhj left
[22:06] <masak> AlexDaniel: sure, permission granted

[22:07] *** bdmatatu left
[22:09] *** mcmillhj joined
[22:14] *** mcmillhj left
[22:15] *** wamba left
[22:20] *** mcmillhj joined
[22:24] *** mcmillhj left
[22:27] *** Praise- is now known as Praise

[22:31] *** HaraldJoerg left
[22:42] *** Kaypie left
[22:43] *** Kaiepi joined
[22:43] *** Khisanth left
[22:54] *** mcmillhj joined
[22:57] *** Khisanth joined
[22:59] *** mcmillhj left
[23:01] <tony-o_> m: sub r :hidden-from-backtrace { die 'dead'; };  r;

[23:01] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3sub r7‚èè5 :hidden-from-backtrace { die 'dead'; };‚ê§    expecting any of:‚ê§        new name to be defined‚ê§¬ª

[23:01] <tony-o_> m: sub r() :hidden-from-backtrace { die 'dead'; };  r;

[23:01] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3sub r()7‚èè5 :hidden-from-backtrace { die 'dead'; };‚ê§    expecting any of:‚ê§        new name to be defined‚ê§¬ª

[23:02] <tony-o_> m: sub r() is hidden-from-backtrace { die 'dead'; };  r;

[23:02] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´dead‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[23:03] <tony-o_> m: sub r() { die 'dead'; };  r;

[23:03] <camelia> rakudo-moar 20bf96f9e: OUTPUT: ¬´dead‚ê§  in sub r at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[23:03] <tony-o_> a+

[23:07] *** pecastro left
[23:29] *** mcmillhj joined
[23:32] *** w_richard_w joined
[23:34] *** lizmat left
[23:34] *** mcmillhj left
[23:42] *** mcmillhj joined
[23:45] *** [particle] left
[23:46] *** [particle] joined
[23:47] *** mcmillhj left
[23:50] *** [particle]1 joined
[23:53] *** [particle] left
