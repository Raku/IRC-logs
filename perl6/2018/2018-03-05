[00:02] <Zoffix> I got some proptests failing, but they look iffy to me. A shift on `int` variable expects -170141183460469231731687303715884105728 as a value

[00:03] <Zoffix> m: use nqp; dd nqp::bitshiftr_i(-9223372036854775808, -64)

[00:03] <camelia> rakudo-moar b5100d6a2: OUTPUT: «-9223372036854775808␤»

[00:03] <Zoffix> m: use nqp; dd nqp::bitshiftr_I(-9223372036854775808, -64, Int)

[00:03] <camelia> rakudo-moar b5100d6a2: OUTPUT: «-170141183460469231731687303715884105728␤»

[00:04] <Zoffix> ZofBot: @expletives.pick

[00:04] <ZofBot> Zoffix, m

[00:04] <MasterDuke> i think so, but i didn't record what actually failed

[00:04] *** martinp2 joined
[00:04] <MasterDuke> maybe there was another file also?

[00:04] *** comborico1611 joined
[00:05] <Zoffix> Some of the tests in that bunch are already fudged with RT#125466

[00:05] <synopsebot> RT#125466 [open]: https://rt.perl.org/Ticket/Display.html?id=125466 [MATH][@LARRY] bitwise shift is inconsistent on int

[00:06] <Zoffix> "There are three fudges where it's unknown what the proper behaviour should be (overflow or switch to Int?)."  yeah, mine fall into that category too, so I'm just gonna fudge them (they're proptests, not spectests)

[00:06] * Zoffix votes "overflow with natives" while at it

[00:11] <Zoffix> .ask TimToady what's your opinion, should `use nqp; dd nqp::bitshiftr_i(-9223372036854775808, -64)` overflow and return -9223372036854775808 or switch to an Int instead -170141183460469231731687303715884105728? Right now we have this inconsistency between Int and int candidates, but I'm leaning towards: people might wants overflowing stuff

[00:11] <yoleaux> Zoffix: I'll pass your message to TimToady.

[00:17] <Zoffix> MasterDuke: rindolf the native shift candidates should now work, as of https://github.com/rakudo/rakudo/commit/3d73597556

[00:22] <Zoffix> cfa: are you still trying to build locally? Just commit

[00:23] <Zoffix> $forgiveness > $permission is how we like to say. `git revert` works, after all

[00:26] <lookatme> :)

[00:28] <Geth> ¦ doc: cb4a69905b | cfa++ | 2 files

[00:28] <Geth> ¦ doc: Clarification on subscript adverbs.

[00:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cb4a69905b

[00:28] <cfa> hope that's okay?

[00:28] <cfa> i just wanted to test those links so waited on the full build, yeah

[00:28] <TEttinger> I would vote for overflow as long as JS compatibility isn't a concern

[00:28] <TEttinger> my vote doesn't really count though

[00:29] *** konsolebox left
[00:32] *** konsolebox joined
[00:32] <Zoffix> TEttinger: why overflow? You couldn't for example do `my int64 @a = -9223372036854775808; @a[0] +>= -64` for example. It'd explode

[00:33] <Zoffix> cfa: looks fine to me

[00:34] *** martinp2 left
[00:34] <Zoffix> m: my int64 @a = -9223372036854775808; @a[0] +>= -63; dd @a

[00:34] <camelia> rakudo-moar 3d7359755: OUTPUT: «Cannot unbox 127 bit wide bigint into native integer␤  in block <unit> at <tmp> line 1␤␤»

[00:35] *** pierre_ joined
[00:35] * perlawhirl clickbaits http://www.0racle.info/articles/pick_and_choose_part1

[00:36] <perlawhirl> happy for any grammar or logic corrections before I throw this on reddit

[00:36] <Zoffix> TEttinger: ah, you can't do that anyway :( the meta-assign op gets boxed

[00:36] <Zoffix> m: my int64 @a = -9223372036854775808; @a[0] = @a[0] +> -63; dd @a

[00:36] <camelia> rakudo-moar 3d7359755: OUTPUT: «Cannot unbox 127 bit wide bigint into native integer␤  in block <unit> at <tmp> line 1␤␤»

[00:37] <Zoffix> Ah, wait, we box on array access so far, don't we

[00:37] *** espadrine left
[00:37] *** comborico1611 left
[00:37] <Zoffix> m: my int64 $a = -9223372036854775808; $a = $a +> -63; dd $a

[00:37] <camelia> rakudo-moar 3d7359755: OUTPUT: «-4611686018427387904␤»

[00:37] <Zoffix> OK, yeah, I'm changing my vote on that the two should behave the same.

[00:37] <cfa> hmm, it looks like Array tucks slice adverb documentation away under grep

[00:37] <TEttinger> Zoffix: overflow matters for some algorithms and there should at the very least be an option

[00:38] <Zoffix> TEttinger: oh, right I misread what you originally said.

[00:38] <TEttinger> JS is just a mess regarding ints and overflow

[00:39] <Zoffix> Yeah, that was my original reasoning too, but the above evals show this isn't a good method to rely on when it comes to controlling overflow.

[00:39] <TEttinger> since Number doesn't actually support 64 bits of integer precision on JS

[00:39] <cfa> actually, that's coming from list

[00:40] <MasterDuke> perlawhirl: "is a branch mathematics", missing an "of" i assume

[00:40] <Zoffix> .tell TimToady I changed my leaning; I think both HLL and native should behave the same as autoboxing makes stuff too unpredictable as can be seen here: https://irclog.perlgeek.de/perl6/2018-03-05#i_15883977

[00:40] <yoleaux> Zoffix: I'll pass your message to TimToady.

[00:40] * Zoffix &

[00:40] *** Zoffix left
[00:41] <TEttinger> I do like that GWT, when emulating Java's types with JS, will correctly handle long (64-bit signed integers) in the browser despite taking a performance hit to do so

[00:41] *** konsolebox left
[00:41] <TEttinger> correctness is important

[00:42] *** konsolebox joined
[00:42] <MasterDuke> perlawhirl: "so it's can"

[00:43] *** bwisti left
[00:44] *** cog_ left
[00:47] <perlawhirl> MasterDuke++ thanks, fixed

[00:49] *** Zoffix joined
[00:50] <Zoffix> MasterDuke: rindolf wait, so wtf is "run('./primesieve', $n, '-p1', :out)". Is that some program I need to install to run that example program?

[00:50] *** sharksoft joined
[00:50] *** cognominal joined
[00:50] <Geth> ¦ doc: ed980c7f69 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/nativecall.pod6

[00:50] <synopsebot> Link: https://doc.perl6.org/language/nativecall

[00:50] <Geth> ¦ doc: tweak grammar, punctuation, spelling, format

[00:50] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ed980c7f69

[00:50] <rindolf> Zoffix: yes - https://primesieve.org/

[00:50] <Zoffix> Thanks.

[00:51] <Zoffix> I see P5 version has them hardcoded: https://github.com/shlomif/project-euler/blob/master/project-euler/618/euler_618_v1.pl

[00:51] <Zoffix> I think I'll that that version and try to convert it to P6 and see how it compares to yall's versions

[00:51] <Zoffix> :)

[00:51] *** pierre_ left
[00:52] <Zoffix> 0m17.789s for p5 version... I can beat it :P

[00:53] <cfa> okay, closed off the issue---i think the operator link from signatures and the hash clarification are sufficient

[00:53] <cfa> otherwise this'll get way too noisy

[00:56] *** sharksoft left
[00:57] *** pierre_ joined
[00:57] *** cognominal left
[01:05] *** trnh joined
[01:11] *** Zoffix left
[01:12] *** kurahaupo_ joined
[01:15] *** kurahaupo left
[01:18] *** buggable left
[01:20] *** trnh left
[01:22] *** trnh joined
[01:29] *** trnh left
[01:30] *** martinp2 joined
[01:48] <Geth> ¦ doc: 5c99779397 | (Richard Hainsworth)++ (committed using GitHub Web editor) | doc/Language/nativecall.pod6

[01:48] <synopsebot> Link: https://doc.perl6.org/language/nativecall

[01:48] <Geth> ¦ doc: Minor bit logic error

[01:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5c99779397

[01:48] *** evalable6 left
[01:48] *** evalable6 joined
[02:28] *** Zoffix joined
[02:28] <Zoffix> Well, I failed. Got 33s to P5's 17.7s

[02:28] <Zoffix> m: say 33/17.7

[02:28] <camelia> rakudo-moar a5a6c7786: OUTPUT: «1.864407␤»

[02:29] <Zoffix> Still 86% slower, despite being NQP gibberish

[02:29] <Zoffix> .tell rindolf managed to get P6 version to 1.86x the time of P5 version by rewriting it in NQP, if you were curious: https://gist.github.com/zoffixznet/cb19c862d4fc6954558cf519f7ee9383

[02:29] <yoleaux> Zoffix: I'll pass your message to rindolf.

[02:29] <MasterDuke> where does a profile say the time is being spent?

[02:29] <rindolf> Zoffix: hi

[02:29] <yoleaux> 02:29Z <Zoffix> rindolf: managed to get P6 version to 1.86x the time of P5 version by rewriting it in NQP, if you were curious: https://gist.github.com/zoffixznet/cb19c862d4fc6954558cf519f7ee9383

[02:30] <Zoffix> Hmmmm

[02:30] <Zoffix> Actually, I think that might be 'cause we don't buffer TTYs

[02:30] <rindolf> Zoffix: holy shit

[02:30] *** epony left
[02:31] <rindolf> Zoffix: that looks really cluttered

[02:31] <Zoffix> hm, no nevermind, 0m33.353s with the say commented out (I was piping to /dev/null anyway)

[02:31] <rindolf> Zoffix: ah

[02:32] <Zoffix> It looks really nice and even :)

[02:33] <Zoffix> .tell MasterDuke FWIW rindolf's program in NQP version; still 1.86x slower. Maybe some of these ops don't get JITted? No idea how to check: https://gist.github.com/zoffixznet/cb19c862d4fc6954558cf519f7ee9383

[02:33] <yoleaux> Zoffix: I'll pass your message to MasterDuke.

[02:33] * Zoffix goes to bed

[02:33] *** Zoffix left
[02:46] *** ilbot3 left
[02:54] *** martinp2 left
[02:57] *** ilbot3 joined
[03:08] *** cdg joined
[03:12] *** cdg left
[03:23] *** wamba joined
[03:25] <jdv79> m: {}<sadf>.sort.head(2).perl.say

[03:25] <camelia> rakudo-moar a5a6c7786: OUTPUT: «(Any,).Seq␤»

[03:25] <jdv79> why does that have an element?

[03:26] <jdv79> or, why isn't that ().Seq?

[03:27] *** cdg joined
[03:27] <ZzZombo> Because it does have an element.

[03:27] <ZzZombo> m: dd {}<a>

[03:27] <camelia> rakudo-moar a5a6c7786: OUTPUT: «Any % = Any␤»

[03:28] <jdv79> oh, default.  meh...

[03:28] <ZzZombo> You just added it.

[03:48] *** gabiruh left
[03:48] *** ufobat___ joined
[03:51] *** ufobat_ left
[03:53] *** gabiruh joined
[04:16] *** cdg left
[04:17] *** kaare__ left
[04:17] *** pierre_ left
[04:17] *** kaare__ joined
[04:21] *** gabiruh left
[04:22] <Geth> ¦ doc: 1b6453970e | cfa++ | doc/Type/Signature.pod6

[04:22] <Geth> ¦ doc: A slightly gentler walk through :D/:U constraint examples

[04:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1b6453970e

[04:22] <synopsebot> Link: https://doc.perl6.org/type/Signature

[04:23] *** gabiruh joined
[04:25] <cfa> hopefully that's okay; i found the existing documentation a little dense as it dives straight into a code block

[04:29] *** pierre_ joined
[04:43] *** konsolebox left
[04:44] *** konsolebox joined
[04:45] *** gabiruh left
[04:47] *** gabiruh joined
[04:49] *** skids left
[04:51] *** gabiruh left
[04:52] *** pierre_ left
[04:53] *** stmuk_ joined
[04:55] *** stmuk left
[04:57] *** gabiruh joined
[04:59] *** pierre_ joined
[04:59] *** wamba left
[05:03] *** pierre_ left
[05:07] *** konsolebox left
[05:07] *** konsolebox joined
[05:08] *** kaare__ left
[05:08] *** kaare__ joined
[05:17] *** pierre_ joined
[05:17] *** eythian left
[05:19] *** eythian joined
[05:21] *** pierre_ left
[05:30] *** APic left
[05:33] *** gabiruh left
[05:34] *** konsolebox left
[05:35] *** konsolebox joined
[05:35] *** xiaoyafeng joined
[05:35] *** noganex left
[05:36] *** APic joined
[05:36] <xiaoyafeng> hello , I found min function just return one elem.

[05:38] *** gabiruh joined
[05:38] <xiaoyafeng> but look this code:  my %dd = ( a => 3, b => 3, c =>4); (keys %dd).min({%dd{$_}});

[05:38] <xiaoyafeng> I expect return 2 elems:a and b

[05:39] <xiaoyafeng> do I miss something?

[05:40] <shinobi-cl> m:  my %dd = ( a => 3, b => 3, c =>4); say %dd.minpairs;

[05:40] <camelia> rakudo-moar a5a6c7786: OUTPUT: «(a => 3 b => 3)␤»

[05:40] <shinobi-cl> maybe minpairs is what you need

[05:42] <shinobi-cl> m:  my %dd = ( a => 3, b => 3, c =>4); my %smallest = %dd.minpairs; say %smallest.keys;

[05:42] <camelia> rakudo-moar a5a6c7786: OUTPUT: «(a b)␤»

[05:43] <xiaoyafeng> Thanks! let me check minpairs document;) 

[05:44] *** xtreak joined
[05:47] <ZzZombo> `min` returns values

[05:47] <shinobi-cl> sure. BTW, if you don't want to use a temporary hash (%smallest) you have to use this:

[05:47] <shinobi-cl> m:  my %dd = ( a => 3, b => 3, c =>4); say (%dd.minpairs.hash).keys;

[05:47] <camelia> rakudo-moar a5a6c7786: OUTPUT: «(a b)␤»

[05:48] <ZzZombo> why the parentheses in `say`?

[05:49] <shinobi-cl> oh, sorry those were a leftover of what i was testing... you do not need those :P

[05:52] <xiaoyafeng> so .hash means explicit conversion to hash type?

[05:54] <shinobi-cl> yes, for some reason, minpairs returns a Seq, not another hash. but using .hash fixes that

[05:54] <shinobi-cl>  m:  my %dd = ( a => 3, b => 3, c =>4); say %dd.minpairs.perl;

[05:54] <camelia> rakudo-moar a5a6c7786: OUTPUT: «(:a(3), :b(3)).Seq␤»

[05:56] <xiaoyafeng> one more question, is there a count like function in perl6? I find classify, similar but not equal. how translate below perl5 code to perl6? count_by {$_}, (a,a, a, b,b,b c,c)

[05:56] <xiaoyafeng> will return a => 3, b => 3, c => 2;

[05:58] *** eliasr left
[06:00] *** w_richard_w joined
[06:01] *** kaare__ left
[06:02] *** kaare__ joined
[06:05] *** atweiden-air joined
[06:06] <ZzZombo> m: say <a a a b b c c>.Bag

[06:06] <camelia> rakudo-moar a5a6c7786: OUTPUT: «Bag(a(3), b(2), c(2))␤»

[06:07] <atweiden-air> my latest innocuous commit seems to freeze rakudo compilation of Config::TOML https://github.com/atweiden/config-toml/commit/7985e60905247496fedcb7b34b770d22e967be5c

[06:07] <atweiden-air> can anyone with a high perf comp try and get Config::TOML to compile?

[06:07] *** wamba joined
[06:07] *** pierre_ joined
[06:08] *** pierre_ left
[06:08] *** pierre_ joined
[06:15] *** wamba1 joined
[06:17] *** cdg joined
[06:18] *** wamba left
[06:21] *** cdg left
[06:26] *** w_richard_w1 joined
[06:30] *** w_richard_w left
[06:40] *** domidumont joined
[06:43] *** gabiruh left
[06:47] *** domidumont left
[06:48] <atweiden-air> fixed: freeze was caused by a missing `.Array()` in method table-header-text, uncovered after reverting hypers

[06:48] *** gabiruh joined
[06:49] *** atweiden-air left
[06:51] *** wamba1 left
[06:52] *** obra left
[06:52] *** darutoko joined
[06:52] *** obra joined
[07:23] *** w_richard_w1 left
[07:26] *** domidumont joined
[07:28] *** wamba joined
[07:32] *** robertle joined
[07:33] *** noganex joined
[07:42] *** abraxxa joined
[07:54] *** AlexDaniel joined
[07:55] *** vike left
[07:57] *** wamba left
[08:01] *** wamba joined
[08:17] *** zakharyas joined
[08:22] *** zakharyas left
[08:22] <Geth> ¦ whateverable: a401e1da8d | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Whateverable.pm6

[08:22] <Geth> ¦ whateverable: Support older zstd version, complain if not installed

[08:22] <Geth> ¦ whateverable: 

[08:22] <Geth> ¦ whateverable: Tackles issue #122 a little bit. This *should* make it work for older

[08:22] <Geth> ¦ whateverable: zstd versions like 0.5.1 (but I haven't tested it just yet).

[08:22] <Geth> ¦ whateverable: 

[08:22] <Geth> ¦ whateverable: Also, it should now die with a more helpful message if zstd or lrzip

[08:22] <Geth> ¦ whateverable: is not installed.

[08:22] <Geth> ¦ whateverable: <…commit message has 7 more lines…>

[08:22] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/a401e1da8d

[08:22] *** zakharyas joined
[08:25] *** domidumont left
[08:27] *** domidumont joined
[08:28] <AlexDaniel> actually maybe someone can suggest a better approach for https://github.com/perl6/whateverable/commit/a401e1da8d

[08:28] <yoleaux> 00:17Z <jnthn> AlexDaniel: zstd 0.5.1, lrzip 0.621

[08:28] *** Xliff left
[08:29] <AlexDaniel> how else can I check that the command does not exist

[08:29] *** Xliff joined
[08:29] <AlexDaniel> `run` just exits with “exit code: 1”, and that doesn't tell enough

[08:29] <AlexDaniel> e: run ‘oeunohunteohuntoahuonathu’

[08:29] <evalable6> AlexDaniel, rakudo-moar a5a6c7786: OUTPUT: «(exit code 1) The spawned command 'oeunohunteohuntoahuonathu' exited unsuccessfully (exit code: 1)␤  in block <unit> at /tmp/ki3cOsjZr7 line 1␤␤»

[08:29] <AlexDaniel> 6c: run ‘oeunohunteohuntoahuonathu’

[08:30] <committable6> AlexDaniel, https://gist.github.com/aa42b6eb50f114c31e4c070a59b26a53

[08:30] <AlexDaniel> oh ya see, it was -1 at some point

[08:30] <AlexDaniel> which is kinda useful-ish

[08:30] <AlexDaniel> bisect: old=2016.09 new=2016.10 run ‘oeunohunteohuntoahuonathu’

[08:30] <bisectable6> AlexDaniel, Bisecting by output (old=2016.09 new=2016.10) because on both starting points the exit code is 1

[08:31] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/17d512674b22c5d7dc2116a7a994d1fb

[08:31] <bisectable6> AlexDaniel, (2016-09-17) https://github.com/rakudo/rakudo/commit/c4fd9f515d49deea06d1462057e820608041eb9b

[08:31] <AlexDaniel> no way

[08:31] <AlexDaniel> c: c4fd9f515d49d^,c4fd9f515d49d run ‘oeunohunteohuntoahuonathu’

[08:31] <committable6> AlexDaniel, https://gist.github.com/af495ec00f05dcaf0aca8eaa0af9a0b2

[08:31] <AlexDaniel> bisect: old=c4fd9f515d49d new=2016.10 run ‘oeunohunteohuntoahuonathu’

[08:31] *** lowbro joined
[08:31] <bisectable6> AlexDaniel, On both starting points (old=c4fd9f5 new=2016.10) the exit code is 1 and the output is identical as well

[08:31] <bisectable6> AlexDaniel, Output on both points: «The spawned command 'oeunohunteohuntoahuonathu' exited unsuccessfully (exit code: -1)␤  in block <unit> at /tmp/69ysAF8JdZ line 1␤␤»

[08:32] *** lowbro left
[08:32] *** lowbro joined
[08:32] <AlexDaniel> ah!! I'm blind!

[08:32] <AlexDaniel> bisect: old=2017.05 new=2017.06 run ‘oeunohunteohuntoahuonathu’

[08:32] <bisectable6> AlexDaniel, Bisecting by output (old=2017.05 new=2017.06) because on both starting points the exit code is 1

[08:32] <bisectable6> AlexDaniel, bisect log: https://gist.github.com/70f4e99d23827941baf128e5c69604c3

[08:32] <bisectable6> AlexDaniel, (2017-06-12) https://github.com/rakudo/rakudo/commit/92bd7e4f54a92fa660f99b4d056d33a08fb98bd2

[08:32] <AlexDaniel> c: 92bd7e4f54a^,92bd7e4f54a run ‘oeunohunteohuntoahuonathu’

[08:32] <committable6> AlexDaniel, https://gist.github.com/0b57fda07c31cf2e7ac2703029b13bde

[08:33] <AlexDaniel> yeah…

[08:34] *** kaare_ joined
[08:34] *** kaare__ left
[08:36] <TEttinger> is oeunohunteohuntoahuonathu an inside joke?

[08:37] <AlexDaniel> TEttinger: no, it's like asldfhlgdsahf;ldsafj;alfdsj but better

[08:38] <AlexDaniel> c: 92bd7e4f54a^,92bd7e4f54a run(‘oeunohunteohuntoahuonathu’).signal.say

[08:38] <committable6> AlexDaniel, ¦92bd7e4f54a^: «254␤» ¦92bd7e4: «0␤»

[08:39] <TEttinger> weird

[08:40] <AlexDaniel> I filed R#1590

[08:40] <synopsebot> R#1590 [open]: https://github.com/rakudo/rakudo/issues/1590 [regression] Procs should not get back with “exit code: 1” if the program does not exist at all

[09:02] *** pierre_ left
[09:04] *** sena_kun joined
[09:10] *** dakkar joined
[09:11] *** xtreak left
[09:12] *** pierre_ joined
[09:18] *** pierre_ left
[09:18] *** AlexDani` joined
[09:18] *** pierre___ joined
[09:18] *** yoleaux left
[09:19] *** bisectable6 left
[09:19] *** shareable6 left
[09:19] *** reportable6 left
[09:19] *** quotable6 left
[09:19] *** nativecallable6 left
[09:19] *** benchable6 left
[09:20] *** a3f_ joined
[09:20] *** a3f left
[09:20] *** greppable6 left
[09:21] *** evalable6 left
[09:21] *** cfa left
[09:21] *** AlexDaniel left
[09:22] *** cfa joined
[09:24] *** AlexDani` is now known as AlexDaniel

[09:24] *** scimon joined
[09:31] *** simcop2387 left
[09:37] *** simcop2387 joined
[09:38] *** cdg joined
[09:39] *** xtreak joined
[09:43] *** cdg left
[09:49] *** kaare_ left
[09:51] *** kaare_ joined
[09:54] *** Geth left
[09:54] *** Geth joined
[09:54] *** ChanServ sets mode: +v Geth

[09:58] *** pierre___ left
[10:00] *** pierre__ joined
[10:06] *** stmuk joined
[10:09] *** stmuk_ left
[10:15] <moritz> moin moin

[10:16] *** quotable6 joined
[10:16] *** nativecallable6 joined
[10:16] *** bisectable6 joined
[10:16] *** greppable6 joined
[10:16] *** evalable6 joined
[10:16] *** benchable6 joined
[10:16] *** reportable6 joined
[10:16] *** ChanServ sets mode: +v benchable6

[10:16] *** ChanServ sets mode: +v reportable6

[10:25] *** xtreak_ joined
[10:28] *** xtreak left
[10:41] *** xiaoyafeng left
[11:13] *** yoleaux joined
[11:13] *** ChanServ sets mode: +v yoleaux

[11:26] *** Zoffix joined
[11:26] <Zoffix> m: {}<sadf>:v.sort.head(2).perl.say

[11:26] <camelia> rakudo-moar a5a6c7786: OUTPUT: «().Seq␤»

[11:26] <Zoffix> jdv79: ^ just ask for :v if you don't want default-default of autovivification

[11:29] *** Zoffix left
[11:34] *** lichtkind left
[11:45] *** shareable6 joined
[11:47] *** shinobi-cl left
[11:52] *** pierre__ left
[11:53] *** zakharyas left
[11:55] *** pmurias joined
[12:01] *** daxim left
[12:13] <AlexDaniel> perl

[12:13] <AlexDaniel> oops

[12:14] <AlexDaniel> .tell perlawhirl if python has combinations_with_replacement in itertools, why don't we have a more readable alternative? ;) Maybe file a ticket

[12:14] <yoleaux> AlexDaniel: I'll pass your message to perlawhirl.

[12:15] <AlexDaniel> “One final observation about Perl 6 and math: although Perl 6 has all the usual functions from math.h, it could certainly use a few more.”

[12:15] <AlexDaniel> https://www.evanmiller.org/a-review-of-perl-6.html

[12:18] <AlexDaniel> ↑ very similar issue :)

[12:31] *** pierre_ joined
[12:33] *** buggable joined
[12:33] *** ChanServ sets mode: +v buggable

[12:35] *** pierre_ left
[12:36] *** kurahaupo_ is now known as kurahaupo

[12:37] *** shinobi-cl joined
[12:44] *** lowbro left
[12:47] *** eliasr joined
[12:59] *** shinobi-cl left
[13:00] *** cognominal joined
[13:02] *** Zoffix joined
[13:02] <Zoffix> I propose an better idea: a module.

[13:03] <Zoffix> People keep saying how small our ecosystem is, yet everyone's so keen to add stuff to core.

[13:04] <Zoffix> And often protest when suggestion to add a module is. And stuff that's implemented in core then doesn't get neither tests nor documentation. Just shows how insignificant the added feature really is.

[13:04] * Zoffix checks whether IO::Path.parent(Int) was ever documented or tested

[13:06] <Zoffix> Nope.

[13:08] <Zoffix> Not to mention, if you're adding a method to List, you essentially must add it to 99% of Perl 6 classes, to maintain the everything-is-a-1-el-list semantics.

[13:08] <Zoffix> Like why were both .classify and .classify-list added :/

[13:08] <Zoffix> </rant>

[13:09] *** lichtkind joined
[13:14] *** AlexDaniel left
[13:15] <DrForr> It worked so well with PHP...

[13:16] <Zoffix> Yeah, I remember 10 years ago #perl cracking jokes about inconsistencies in routine names in PHP... In Perl 6 we now have worse inconsistencies. That's just Karma.

[13:17] *** xtreak_ left
[13:17] <DrForr> I'm not sure if I was trying to be ironic, sarcastic or depressed there.

[13:19] <Zoffix> :)

[13:20] *** xtreak joined
[13:21] <huf> oh it'll be fine. it's not like "ironic", "sarcastic" and "depressed" fit any pattern

[13:21] <huf> yet we handle them fine

[13:21] <DrForr> Speak for yourself. :/

[13:22] <DrForr> (sorry, just playing the waiting game today and not doing a wonderful job of it.)

[13:23] <DrForr> OTOH App::Mi6 does help with releasing.

[13:24] *** athenot joined
[13:28] <Geth> ¦ doc: 3d7974671f | (Zoffix Znet)++ | doc/Type/IO/Path.pod6

[13:28] <Geth> ¦ doc: Document IO::Path.parent(UInt)

[13:28] <Geth> ¦ doc: 

[13:28] <Geth> ¦ doc: Spec:        https://github.com/perl6/roast/commit/bf3f347e11

[13:28] <Geth> ¦ doc:              https://github.com/perl6/roast/commit/1b39fb200c

[13:28] <synopsebot> Link: https://doc.perl6.org/type/IO::Path

[13:28] <Geth> ¦ doc: Rakudo impl: https://github.com/rakudo/rakudo/commit/7bea3a2dddcfc11

[13:28] <Geth> ¦ doc: Closes https://github.com/perl6/doc/issues/1616 D#1616

[13:28] <synopsebot> D#1616 [closed]: https://github.com/perl6/doc/issues/1616 [NOTSPECCED][docs] IO::Path.parent(Int)

[13:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3d7974671f

[13:28] <DrForr> (more accurately, sending out notes to recruiters that haven't bothered to respond and waiting on those non-replies while looking for others to send email to that will never get read.)

[13:30] <DrForr> "Wonderful! Great job with the interview!" ... "Huh? Who are you?"

[13:30] *** Zoffix left
[13:31] <rindolf> lizmat: hi

[13:31] <rindolf> lizmat: https://github.com/shlomif/project-euler/tree/master/project-euler/618 - here is the py and pl5 versions

[13:31] <lizmat> rindolf: will have a look at it after I finish the P6W today

[13:32] *** wamba left
[13:32] <rindolf> lizmat: this is the p6 code - https://github.com/perl6/perl6-examples/blob/master/categories/euler/prob618-shlomif-timotimo.p6

[13:32] <rindolf> lizmat: thanks

[13:34] <rindolf> lizmat: this is the nqp version - https://gist.github.com/zoffixznet/cb19c862d4fc6954558cf519f7ee9383

[13:34] <cfa> morning folks

[13:34] <El_Che> DrForr: I got 2 job offers from the same guy on the same day. 1 was non-really-technical multi-language helpdesk, the other was CTO :)

[13:34] <El_Che> worthless :)

[13:34] <rindolf> lizmat: by Zoffix++

[13:35] <DrForr> Thanks, it's a gray day here and I need to keep my mood up.

[13:35] *** wamba joined
[13:36] <rindolf> El_Che: heh

[13:38] * lizmat just moved the curtain a bit to block out the sun

[13:39] <DrForr> Hrm, I *do* have cheap bus fares to Amsterdam from here... :)

[13:45] <lizmat> DrForr: I'm not in Amsterdam  :-)

[13:46] <lizmat> ~190km south-east of it

[13:46] *** Ven`` joined
[13:46] *** zakharyas joined
[13:47] <El_Che> lizmat: .nl is a big suburb of Amsterdam

[13:47] <rindolf> El_Che: heh

[13:47] <DrForr> I know, one step at a time :)

[13:54] *** cdg joined
[13:56] *** vcv joined
[13:57] *** domidumont left
[13:58] *** mcmillhj joined
[13:58] *** vcv left
[13:58] *** domidumont joined
[13:58] *** cdg left
[13:59] *** athenot left
[13:59] *** cdg joined
[14:00] *** athenot joined
[14:04] *** AlexDaniel joined
[14:04] *** khisanth_ left
[14:09] *** vcv joined
[14:15] *** vcv left
[14:17] *** khisanth_ joined
[14:18] *** zakharyas left
[14:18] *** zakharyas joined
[14:21] *** vcv joined
[14:22] *** pmurias left
[14:22] *** wamba left
[14:25] *** vcv left
[14:27] *** vcv joined
[14:34] <Geth> ¦ doc: titsuki++ created pull request #1821: Add Range.rand

[14:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1821

[14:35] <Geth> ¦ doc: c3e251d4f4 | (Itsuki Toyota)++ | doc/Type/Range.pod6

[14:35] <Geth> ¦ doc: Add Range.rand

[14:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c3e251d4f4

[14:35] <Geth> ¦ doc: 68cade4271 | (Itsuki Toyota)++ (committed using GitHub Web editor) | doc/Type/Range.pod6

[14:35] <Geth> ¦ doc: Merge pull request #1821 from titsuki/range-rand

[14:35] <Geth> ¦ doc: 

[14:35] <Geth> ¦ doc: Add Range.rand

[14:35] <synopsebot> Link: https://doc.perl6.org/type/Range

[14:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/68cade4271

[14:37] *** zakharyas left
[14:37] *** zakharyas joined
[14:39] <Geth> ¦ doc: ef09dec099 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Range.pod6

[14:39] <Geth> ¦ doc: fix typo

[14:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ef09dec099

[14:44] <titsuki> Zoffix: Thanks!

[14:45] *** vcv left
[14:47] *** domidumont left
[14:48] *** domidumont joined
[14:52] <El_Che> .tell Zoffix: isn't the d release supposed to clean up some of the inconsistencies?

[14:52] <yoleaux> El_Che: What kind of a name is "Zoffix:"?!

[14:52] <El_Che> .tell Zoffix isn't the d release supposed to clean up some of the inconsistencies?

[14:52] <yoleaux> El_Che: I'll pass your message to Zoffix.

[14:53] *** pmurias joined
[14:53] *** cog_ joined
[14:54] *** vcv joined
[14:54] *** zakharyas left
[14:55] *** zakharyas joined
[14:57] *** mniip left
[14:57] *** Alikzus_ joined
[14:57] *** Alikzus left
[14:57] *** cognominal left
[14:57] *** simcop2387 left
[14:57] *** a3f_ left
[14:57] *** TimToady left
[14:57] *** El_Che left
[14:58] *** simcop2387_ joined
[14:58] *** El_Che_ joined
[14:58] *** mniip joined
[14:58] *** TimToady joined
[14:58] *** El_Che_ is now known as El_Che

[14:58] *** a3f joined
[14:58] *** a3f left
[14:58] *** a3f joined
[14:58] *** simcop2387_ is now known as simcop2387

[14:58] *** simcop2387 left
[14:58] *** simcop2387 joined
[14:58] *** imcsk8_ joined
[14:58] *** pmurias left
[14:59] *** webstrand left
[15:00] *** xtreak left
[15:00] *** greppable6 left
[15:00] *** evalable6 left
[15:00] *** quotable6 left
[15:00] *** nativecallable6 left
[15:01] *** greppable6 joined
[15:01] *** imcsk8 left
[15:02] *** webstrand joined
[15:04] *** Zoffix joined
[15:04] <Zoffix> El_Che: not that I'm aware of. 

[15:10] <Zoffix> El_Che: and I think the ship has sailed for many of them. Fixing all of them at this point in time would have too much impact on users.

[15:13] *** skids joined
[15:16] <El_Che> Zoffix: I thought the versioning of the lang was to have a license to break stuff, with a compiler/implementation targetting x versions

[15:17] <El_Che> wishful thinking, then :)

[15:20] <Zoffix> El_Che: not at all what I'd call it. People wouldn't be too keen on using a language that keeps changing everything from under them all the time. Even though you can specify a language version, if you do so, it means you cannot use latest features in that file and I can't imagine latest compilers supporting ancient language versions indefinitely. More-over, the language-versioning doesn't help much with

[15:20] <Zoffix> objects and method implementations (what does a 6.c version file meant to do when it's given a 6.d Str object?)

[15:21] <El_Che> true

[15:21] <Zoffix> Even with the things we *are* able to change, I'd never call it "license to break stuff", but "diminishing impact from fixing stuff"

[15:21] <Zoffix> https://rakudo.party/post/Perl6-On-Specs-Versioning-Changes-And-Breakage

[15:22] <Zoffix> I imagine some driven person will eventually create a fork of Perl 6. It'd not have "Perl" in the name and it won't have billion methods most people won't need in core. It'd also polish all the inconsistencies before releasing the stable version (or even before releasing a publicly available version).

[15:24] <Zoffix> And would have full tests and documentation of everything.

[15:25] <AlexDaniel> well good luck to them, but I'm pretty sure we'll fix the name before that happens :)

[15:25] <El_Che> hehe

[15:25] <Zoffix> + puritanical standards of development: mandatory tests, docs, and justification for all features, and consistency review for how the feature and its behaviour fits with the rest of the language.

[15:27] <Zoffix> Anyway, toast is done

[15:27] <Zoffix> buggable: toast

[15:27] <buggable> Zoffix, Between 2018.02-1-118ga5a6c77 and 2018.02: 12 (1.21%) modules got burnt; 17 (1.72%) got unsucced; 258 (26.09%) out of 989 modules appear unusable. See https://toast.perl6.party/ for details.

[15:28] *** natrys joined
[15:29] <AlexDaniel> did JSON::Fast fail because of the .comb change?

[15:29] <AlexDaniel> “The iterator of this Seq is already in use/consumed by another Seq”

[15:29] <AlexDaniel> sounds related

[15:29] <Zoffix> AlexDaniel: yeah, and it should already be fixed.

[15:30] <Zoffix> AlexDaniel: where do you see it fail? It says "Succ" for me

[15:30] <AlexDaniel> oh…

[15:30] <AlexDaniel> https://toast.perl6.party/module?module=Dist::Helper&commit=2018.02-1-118ga5a6c77

[15:31] <AlexDaniel> and also: https://toast.perl6.party/module?module=App::Cpan6&commit=2018.02-1-118ga5a6c77

[15:31] <Zoffix> AlexDaniel: well, the reason is that module locked their version: https://modules.perl6.org/dist/Dist::Helper:cpan:TYIL/META6.json#L11

[15:31] <Zoffix> And App::Cpan6 is by the same author, so I bet the same is the case there.

[15:31] *** zakharyas left
[15:31] <AlexDaniel> awesome

[15:32] <Zoffix> I wonder if the author meant those locks as "at least this version" rather than precicely this version.

[15:32] *** st_elmo_ joined
[15:32] <AlexDaniel> tyil: ↑ ping? :)

[15:32] *** bisectable6 left
[15:32] *** bisectable6 joined
[15:32] <AlexDaniel> but that looks better than I expected actually!

[15:33] <AlexDaniel> so I think we're good with the change generally

[15:33] * AlexDaniel runs away for the rest of the evening

[15:33] *** zakharyas joined
[15:35] <rindolf> lizmat: here?

[15:35] <lizmat> rindolf: yes

[15:35] <rindolf> lizmat: i want to go for a walk

[15:36] <lizmat> please do: I'm working on the Perl 6 weekly, and I said I'd look at the Euler question *after* I finished the Perl 6 Weekly

[15:36] <rindolf> lizmat: ok

[15:36] <lizmat> which will still be at least 5 hours or so

[15:38] <rindolf> lizmat: ah

[15:41] <[Coke]> FYI: http://news.perlfoundation.org/2018/03/january-2018-grant-votes.html

[15:41] <lizmat> I was just about to paste that link here as well  :-)

[15:41] <Zoffix> wait, wtf... both Dist::Helper and App::Cpan6 both have dist-helper as repo URL

[15:42] <lizmat> [Coke]: would it be difficult to put a link to the original proposals in the Grant Votes post ?

[15:42] <Zoffix> .tell tyil FWIW, both Dist::Helper and App::Cpan6 appear to be in the ecosystem, despite apparently App::Cpan6's repo being renamed to Dist::Helper's repo

[15:42] <yoleaux> Zoffix: I'll pass your message to tyil.

[15:43] <lizmat> would be helpful to those that will only see the Grant Votes post in the P6W

[15:43] <El_Che> rperl got a lot of rejections

[15:43] <DrForr> A touch disapponted that my +1s for JJ's project didn't seem to get published, but it looked like it went through.

[15:43] <DrForr> JJ++

[15:44] *** comborico1611 joined
[15:44] <AlexDaniel> Oh! So JJ's work is going to be funded!

[15:44] <AlexDaniel> that's wonderful news!

[15:45] <Zoffix> :)

[15:45] <DrForr> Yep, 5:1 1 abstention, the rest were all solid 'no's.

[15:45] <[Coke]> lizmat: sure, I can do an update.

[15:46] <[Coke]> DrForr: I didn't see any of your comments held up in moderation

[15:46] <[Coke]> or in spam

[15:47] <DrForr> They were as anonymous as I couldn't get the password recovery to work.

[15:47] <El_Che> are comments counted as votes?

[15:47] <DrForr> And at least one was done on a tablet so f*ck knows if it actually got posted.

[15:48] <Zoffix> El_Che: no, it's community feedback. TPF votes.

[15:48] <DrForr> El_Che: The committee votes, they take the comments into consideration.

[15:49] <[Coke]> lizmat: done, will take a minute to update the cache

[15:49] <lizmat> [Coke]++

[15:49] *** zakharyas left
[15:49] <[Coke]> thanks for the suggestion. (I really need to script the generation of these posts.)

[15:49] <[Coke]> (not the actual posting itself, but the content)

[15:49] <Zoffix> I'll also likely submit a TPF grant proposal for next round. Draft is here: (from last draft I posted, I bumped the amount requested slightly, based on feedback): https://temp.perl6.party/Constant-Rat-TPF-Grant.html

[15:50] <[Coke]> I will note that having a dollar off the price is probably not going to help anything on the GC end. :)

[15:51] <[Coke]> but I appreciate you saving the TPF a dollar.

[15:51] <Zoffix> :D

[15:51] <[Coke]> (assuming funding, etc. I have no idea how people are going to vote on things)

[15:53] *** troys joined
[15:54] <jkramer> This is weird: http://dpaste.com/02K9QVB

[15:54] <jkramer> Why is it only working when it's on the same line?

[15:55] <Zoffix> jkramer: RT#131900

[15:55] <synopsebot> RT#131900 [open]: https://rt.perl.org/Ticket/Display.html?id=131900 [REPL] REPL loses custom operators

[15:55] *** reportable6 left
[15:55] *** reportable6 joined
[15:56] *** wamba joined
[15:56] <jkramer> Oh, ok

[15:57] *** reportable6 left
[15:57] *** reportable6 joined
[15:57] *** ChanServ sets mode: +v reportable6

[15:57] *** quotable6 joined
[15:59] *** reportable6 left
[15:59] *** reportable6 joined
[15:59] *** ChanServ sets mode: +v reportable6

[15:59] *** araujo joined
[16:00] *** araujo left
[16:04] <tyil> Zoffix: Dist::Helper is indeed the correct name, I'll drop the App::Cpan6 from PAUSE

[16:04] <yoleaux> 15:42Z <Zoffix> tyil: FWIW, both Dist::Helper and App::Cpan6 appear to be in the ecosystem, despite apparently App::Cpan6's repo being renamed to Dist::Helper's repo

[16:05] *** reportable6 left
[16:05] *** nativecallable6 joined
[16:05] *** ChanServ sets mode: +v nativecallable6

[16:05] <tyil> also it should've been "at least this version" checks, I did ask around here a couple times for the correct notation but got no replies, and I had to at least get the versions mentioned in the META6, so I went with this for now

[16:07] <Zoffix> eco: Test::META

[16:07] <buggable> Zoffix, Test::META 'Test a distributions META file': https://github.com/jonathanstowe/Test-META

[16:08] <Zoffix> hm. I thought that module had the "at least this version" specified, but I think it got removed because zef had trouble understanding them

[16:08] *** mcmillhj left
[16:08] <Zoffix> m: say v0.9.6 ~~ v0.9.6+

[16:08] <camelia> rakudo-moar a5a6c7786: OUTPUT: «True␤»

[16:08] <Zoffix> m: say v0.9.10 ~~ v0.9.6+

[16:08] <camelia> rakudo-moar a5a6c7786: OUTPUT: «True␤»

[16:09] <Zoffix> Not an expert on it, but I think :ver<v0.9.6+> is how you'd specify it, but I don't know whether zef supports that, even if it were correct format

[16:09] <timotimo> m: say v0.9.6 ~~ v0.9.6^

[16:09] <camelia> rakudo-moar a5a6c7786: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing required term after infix␤at <tmp>:1␤------> 3say v0.9.6 ~~ v0.9.6^7⏏5<EOL>␤    expecting any of:␤        prefix␤        term␤»

[16:09] <timotimo> m: say v0.9.6 ~~ v0.9.6~

[16:09] <camelia> rakudo-moar a5a6c7786: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Missing required term after infix␤at <tmp>:1␤------> 3say v0.9.6 ~~ v0.9.6~7⏏5<EOL>␤    expecting any of:␤        prefix␤        term␤»

[16:10] <timotimo> hm, so + really is allowed there?

[16:10] <timotimo> m: say v0.9.6 ~~ v0.9.6-

[16:10] <camelia> rakudo-moar a5a6c7786: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed postfix call␤at <tmp>:1␤------> 3say v0.9.6 ~~ v0.9.7⏏056-␤»

[16:10] <Zoffix> Yeah, it's part of the version spec.

[16:11] <Zoffix> And * too

[16:11] <Zoffix> m: say v0.9.10 ~~ v0.9.*

[16:11] <camelia> rakudo-moar a5a6c7786: OUTPUT: «True␤»

[16:11] <Zoffix> https://github.com/rakudo/rakudo/blob/master/src/core/Version.pm6#L78 (for +) and https://github.com/rakudo/rakudo/blob/master/src/core/Version.pm6#L40 (for *)

[16:12] <Zoffix> aw :( no history due to .pm -> .pm6 rename: https://github.com/rakudo/rakudo/commits/master/src/core/Version.pm6

[16:13] *** releasable6 left
[16:13] *** releasable6 joined
[16:13] *** ChanServ sets mode: +v releasable6

[16:13] <Zoffix> More readabable version of the version parser: https://github.com/rakudo/rakudo/blob/46a7baff42860f0364c68c3f5a26be310d768a83/src/core/Version.pm#L38-L60

[16:17] <rindolf> hi all

[16:17] <rindolf> Zoffix: hi

[16:17] <rindolf> Zoffix: sup?

[16:17] <rindolf> Zoffix: thanks again for your help

[16:17] <jkramer> Is it possible to perform modifiy two LHVs at the same time with some operation? For example I'd like to do: %foo{$a, $b} += 2; (add 2 to the values of both $a and $b in that hash)

[16:18] <jkramer> I'm getting "Cannot assign to an immutable value" with that

[16:19] <ZzZombo> m: say <a b c><a c>

[16:19] <camelia> rakudo-moar a5a6c7786: OUTPUT: «Type List does not support associative indexing.␤  in block <unit> at <tmp> line 1␤␤»

[16:19] <ZzZombo> m: say %(<a b c>)<a c>

[16:19] <camelia> rakudo-moar a5a6c7786: OUTPUT: «Odd number of elements found where hash initializer expected:␤Found 3 (implicit) elements:␤Last element seen: "c"␤  in block <unit> at <tmp> line 1␤␤»

[16:20] <timotimo> jkramer: you can >>+=>> for example

[16:20] <jkramer> Ah nice, I keep forgetting about that synta

[16:21] <jkramer> x

[16:21] <rindolf> ZzZombo: are you asleep? ;)

[16:21] <ZzZombo> Yes, why?

[16:22] <rindolf> ZzZombo: never knew someone who could chat on irc when sleeping

[16:22] <ZzZombo> You never seen someone who needs to finish work before going to bed? Wow.

[16:23] <rindolf> ZzZombo: i did

[16:25] <Zoffix> m: my %foo; my $a = "meows"; my $b = "foos"; %foo{$a, $b}»++; dd %foo

[16:25] <camelia> rakudo-moar a5a6c7786: OUTPUT: «Hash %foo = {:foos(1), :meows(1)}␤»

[16:25] <Zoffix> m: my %foo; my $a = "meows"; my $b = "foos"; %foo{$a, $b} »+=» 2; dd %foo

[16:25] <camelia> rakudo-moar a5a6c7786: OUTPUT: «Hash %foo = {:foos(2), :meows(2)}␤»

[16:25] <Zoffix> my %foo; my $a = "meows"; my $b = "foos"; %foo{$a, $b} = 2 xx 2; dd %foo

[16:25] <Zoffix> m: my %foo; my $a = "meows"; my $b = "foos"; %foo{$a, $b} = 2 xx 2; dd %foo

[16:25] <camelia> rakudo-moar a5a6c7786: OUTPUT: «Hash %foo = {:foos(2), :meows(2)}␤»

[16:26] *** mcmillhj joined
[16:28] <Zoffix> m: my %foo; my $a = "meows"; my $b = "foos"; %foo{$a, $b}».:<++>; dd %foo

[16:28] <camelia> rakudo-moar a5a6c7786: OUTPUT: «Cannot find method 'Any' on object of type List␤  in block <unit> at <tmp> line 1␤␤»

[16:28] <Zoffix> booo

[16:30] <Zoffix> c: 2017.01 my %foo; my $a = "meows"; my $b = "foos"; %foo{$a, $b}».:<++>; dd %foo

[16:30] <committable6> Zoffix, ¦2017.01: «Cannot find method 'Any' on object of type List␤  in block <unit> at /tmp/TDLmLNCG6V line 1␤␤ «exit code = 1»»

[16:31] *** cdg left
[16:31] <Zoffix> I guess that's one case that was missed during the Great Method Hypering work

[16:31] *** mcmillhj left
[16:31] *** cdg joined
[16:32] *** mcmillhj joined
[16:36] <Zoffix> m: my %foo; my $a = "meows"; my $b = "foos"; %foo{$a, $b}».&[+=](2); dd %foo

[16:36] <camelia> rakudo-moar a5a6c7786: OUTPUT: «Hash %foo = {:foos(2), :meows(2)}␤»

[16:36] <Zoffix> m: my %foo; my $a = "meows"; my $b = "foos"; %foo{$a, $b}».&[RRRRRRRRRRRRRRRRRR+=](2); dd %foo

[16:36] <camelia> rakudo-moar a5a6c7786: OUTPUT: «Hash %foo = {:foos(2), :meows(2)}␤»

[16:36] *** cdg left
[16:37] <Zoffix> hehe, there're literally infinite ways to do what you want, jkramer :)

[16:39] *** Kaiepi left
[16:40] *** Kaiepi joined
[16:42] *** domidumont left
[16:44] *** Zoffix left
[16:58] *** comborico1611 left
[17:06] *** bisectable6 left
[17:06] *** bisectable6 joined
[17:16] *** vcv left
[17:16] *** pharv joined
[17:17] *** scimon left
[17:17] *** mcmillhj left
[17:22] *** Kaiepi left
[17:23] *** Kaiepi joined
[17:24] *** khw joined
[17:25] *** pmurias joined
[17:31] *** domidumont joined
[17:32] *** mcmillhj joined
[17:32] *** cdg joined
[17:33] *** dakkar left
[17:38] *** cdg left
[17:44] *** mingdao left
[17:52] *** pmurias left
[17:57] *** vcv joined
[17:58] *** pmurias joined
[18:10] *** pharv left
[18:11] *** pharv joined
[18:12] *** robertle left
[18:15] *** zakharyas joined
[18:17] *** pharv left
[18:18] *** pharv joined
[18:34] *** cdg joined
[18:39] *** cdg left
[18:39] *** darutoko left
[18:41] *** Ven`` left
[18:45] *** Ven`` joined
[18:52] *** zakharyas left
[18:57] *** Ven`` left
[18:58] *** go|dfish left
[18:58] *** khw left
[19:04] *** pharv left
[19:05] *** Ven`` joined
[19:06] *** pharv joined
[19:06] *** mcmillhj left
[19:08] *** vike joined
[19:09] *** mcmillhj joined
[19:10] *** Ven`` left
[19:10] *** khw joined
[19:11] *** wamba left
[19:11] *** wamba joined
[19:14] *** mcmillhj left
[19:15] *** Kaiepi left
[19:15] *** mcmillhj joined
[19:16] *** Kaiepi joined
[19:17] *** Ven`` joined
[19:17] *** reportable6 joined
[19:20] *** comborico1611 joined
[19:21] *** pharv left
[19:21] *** pharv joined
[19:24] *** cdg joined
[19:30] *** zakharyas joined
[19:32] *** zakharyas left
[19:34] *** zakharyas joined
[19:34] *** zakharyas left
[19:42] *** Ven`` left
[19:49] *** pharv left
[19:51] *** pharv joined
[19:52] *** domidumont left
[19:55] *** espadrine joined
[19:57] *** Ven`` joined
[20:04] *** zakharyas joined
[20:12] *** Ven`` left
[20:17] *** Ven`` joined
[20:20] *** pharv left
[20:20] *** pharv joined
[20:25] <Geth> ¦ doc: 5d73d9a99c | (JJ Merelo)++ | 3 files

[20:25] <Geth> ¦ doc: Removing a couple of 404s

[20:25] <Geth> ¦ doc: 

[20:25] <Geth> ¦ doc: Mainly related to #561

[20:25] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5d73d9a99c

[20:26] *** Ven`` left
[20:30] <AlexDaniel> heh, Amazon Go. Cool, cool. Except that you'd still have to go to the damn store. Outdated concept :P :P

[20:33] <dylanwh> Amazon Rust is safer.

[20:36] *** wamba left
[20:36] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/03/05/2018-10-pragmatic-perl/

[20:37] *** Ven`` joined
[20:42] *** Ven`` left
[20:42] *** Ven`` joined
[20:45] <comborico1611> lizmat: I've been messing around A BUNCH with the Lisp community lately, and I can tell you your weekly newsletter really adds a lot of important connectivity to the Perl 6 community.

[20:46] <comborico1611> (By comparison)

[20:46] <lizmat> thank you  :-)

[20:46] <comborico1611> You bet!

[20:46] <El_Che> comborico1611: the Lisp community can do a weekly like that. It has side effects.

[20:47] <comborico1611> El_Che: Is that a joke?

[20:47] <El_Che> comborico1611: It can be proofed it's a joke

[20:47] <comborico1611> I'm still new to Lisp, so I'm not sure what people say about Lisp and so forth.

[20:47] <comborico1611> :-) I'm confused, but happy.

[20:48] <El_Che> https://en.wikipedia.org/wiki/Side_effect_(computer_science)

[20:48] <dylanwh> it's a joke depending on you interpreter it.

[20:48] <El_Che> dylanwh++

[20:56] *** Ven`` left
[20:57] <AlexDaniel> Question! How can I avoid stuff like this: https://github.com/perl6/whateverable/blob/a401e1da8df61ba6a93c5c233264730951c60345/bin/Committable.p6#L51-L53

[20:57] <AlexDaniel> that is, a type constraint spanning across multiple lines

[20:57] <AlexDaniel> OK I can have a regex defined earlier or something like that, but it doesn't make things much clearer

[20:58] <AlexDaniel> is there something like `also` but for constraints?

[20:58] *** zakharyas left
[21:01] *** Ven`` joined
[21:05] *** natrys left
[21:07] *** Zoffix joined
[21:07] <Zoffix> AlexDaniel: I'd just define a subset or a regex https://github.com/zoffixznet/perl6-ZofBot/blob/master/lib/ZofBot/Plugin/Twitter.pm6#L13

[21:08] *** buggable left
[21:08] <Zoffix> There's no 'also' for parametets and given `returns` is on the chopping block unlikely to be

[21:09] *** Kaiepi left
[21:09] <Zoffix> or just put params one per line and stuff and make em more like attributes https://github.com/zoffixznet/perl6-ZofBot/blob/master/lib/ZofBot/Plugin/Twitter.pm6#L59

[21:11] *** Kaiepi joined
[21:11] <AlexDaniel> hmm ok, thanks!

[21:12] <Zoffix> or just process the regex in the body and return $.NEXT if the event doesn't match

[21:13] <timotimo> stmuk: can you add https://wakelift.de/rss to pl6anet?

[21:13] *** Ven`` left
[21:14] *** vcv left
[21:14] *** vcv joined
[21:16] <Zoffix> timotimo: you'll need to PR your feed addition to this file: https://github.com/stmuk/pl6anet.org/blob/master/perlanetrc#L93

[21:16] *** vcv left
[21:17] <timotimo> oh, cool

[21:17] *** Zoffix left
[21:21] *** Ven`` joined
[21:26] *** Ven`` left
[21:27] *** evalable6 joined
[21:28] *** m0ltar joined
[21:30] *** athenot left
[21:34] *** pharv_ joined
[21:34] *** pharv left
[21:34] <El_Che> lizmat: it's always a pleasure to read the weekly!

[21:35] *** vcv joined
[21:35] <El_Che> lizmat: you should curate all the stuff that interest me :)

[21:46] *** vcv left
[21:49] *** robertle joined
[21:49] *** pmurias left
[21:50] *** cdg left
[21:51] *** cdg joined
[21:51] *** go|dfish joined
[21:55] *** cdg left
[21:56] *** pmurias joined
[21:59] *** AlexDaniel left
[22:02] *** _28_ria joined
[22:05] *** mcmillhj left
[22:05] *** sena_kun left
[22:20] *** pmurias left
[22:23] *** epony joined
[22:24] *** releasable6 left
[22:24] *** releasable6 joined
[22:24] *** ChanServ sets mode: +v releasable6

[22:27] *** pmurias_ joined
[22:27] <timotimo> https://github.com/arangodb/linenoise-ng - this may be interesting for us

[22:30] *** st_elmo_ left
[22:32] *** pmurias_ left
[22:36] <timotimo> i'd like a line editing library that lets me take control of the terminal at arbitrary points so i can do miscellaneous screen operations

[22:37] *** titsuki_ joined
[22:38] *** titsuki left
[22:38] *** aindilis left
[22:39] *** pmurias joined
[22:46] *** aindilis joined
[22:48] *** pmurias left
[22:49] <timotimo> huh, i wonder why titsuki and krunen both have a Term::termios which are almost identical, but each has only themselves in the author and authors field?

[22:58] <TEttinger> are they the same person?

[22:59] <timotimo> i don't think so

[23:05] *** lichtkind left
[23:08] <titsuki_> timotime: Should I delete mine ASAP? I received an answer that there are no problem if there are two modules that have the same name but have the different authors.

[23:10] <TEttinger> maybe only delete yours if they're identical? if yours is bugfree but the other isn't, yours should stay for sure

[23:11] *** Ven`` joined
[23:11] <timotimo> no problem to keep it; users can disambiguate by the :auth anyway, it's just confusing :)

[23:11] <timotimo> i'd prefer one on cpan over one on github+ecosystem, fwiw

[23:13] <titsuki_> timotime: OK, I see. But I'll delete mine sometime soon.

[23:14] <timotimo> but yours is the one on cpan :D

[23:15] <timotimo> m: say 5.7 / 7.15

[23:15] <camelia> rakudo-moar 90303c1e3: OUTPUT: «0.797203␤»

[23:15] <timotimo> zoffix, you can make it about 20% faster by making the \Token parameter required - that prevented the jit from jitting that frame.

[23:17] *** lichtkind joined
[23:17] *** Zoffix joined
[23:18] <Zoffix> timotimo: well, wow! With that change I get it nearly 50% faster. 18s vs P5's 17s

[23:18] <timotimo> oh my

[23:18] <Zoffix> timotimo: so JIT can't jit anything with optional params? Should we look through core code and see if anything could have optionals eliminated? Also, how did you figure out that that wasn't being jitted?

[23:19] <timotimo> first i ran it with --profile to see that calc_S, which was at the top of the routines list by "exclusive time", was 100% red on the right side

[23:19] <timotimo> then i used MVM_JIT_LOG to find the line that starts with "BAIL:" after the line that has "calc_S" in it

[23:19] <Zoffix> m: say 33.298/18.634

[23:20] <camelia> rakudo-moar 90303c1e3: OUTPUT: «1.786949␤»

[23:20] <Zoffix> Yeah, changing Token to mandatory param makes the program 78% faster

[23:20] <timotimo> it was param_op_o, which is "get a parameter that's optional, positional, and object typed"

[23:20] <timotimo> you probably got a better improvement because i used a much smaller workload

[23:21] <jnthn> Most of the time, optional parameter ops are rewritten and never make it do the JIT 

[23:21] <jnthn> So something must have blocked that rewriting

[23:22] <timotimo> potentially OSR-related

[23:22] <timotimo> because calc_S was only called a single time and relied on OSR to get jitted at all

[23:23] <Zoffix> I don't see calc_S line at all in jit log

[23:23] <timotimo> somehow p6box_I comes out at 14.5% inclusive time in a perf report

[23:23] <timotimo> Constructing JIT graph (cuuid: 1, name: 'calc_S')

[23:23] <timotimo> this is what it ought to look like

[23:23] <Zoffix> $ G calc_S j.log 

[23:23] <Zoffix> 2018.02.1 zoffix@VirtualBox~/R/rakudo (master)$ 

[23:24] <timotimo> that's strange, can you send the jitlog file and maybe the shell history over?

[23:24] <Zoffix> Ah, I don't have debug options in moarvm. Does that matter?

[23:24] <timotimo> shouldn't matter

[23:24] <timotimo> the --debug option in moarvm's Configure.pl just instructs C compiler and linker to keep debug symbols around, i.e. which memory locations in the binary correspond to what functions and variables and such

[23:25] <timotimo> it's important for debugging with gdb

[23:27] <Zoffix> timotimo: wget https://temp.perl6.party/j.log;  and I made it with `MVM_JIT_LOG=j.log ./perl6 ../z.p6 > /dev/null` where `./perl6` is 2018.02.1-118-ga5a6c7786 built on MoarVM version 2018.02-27-g760b0913e and ../z.p6 is https://gist.github.com/zoffixznet/3e3d31ae9dc116c54b3cacfe59704470

[23:27] * Zoffix chuckles at `686320:BAIL: op <setmethcache>`

[23:27] <timotimo> that's certainly interesting

[23:28] <Zoffix> ZofBot: where'd you put the meth cache?

[23:28] <ZofBot> Zoffix, And he said, “Yes, it’s the -to-

[23:28] *** Ven`` left
[23:29] <timotimo> why it doesn't show up at all ... no clue :(

[23:29] <timotimo> but now it's fast, so ... :)

[23:30] <Zoffix> It shows up if I also set MVM_SPESH_BLOCKING=1; maybe program exits before it get a chance to write that out?

[23:31] <Zoffix> mhm, if I add `sleep 2` at the end of the program, it shows up even without SPESH_BLOCKING

[23:31] <timotimo> a speshlog would tell us if it got to specialize it before it quit

[23:31] <timotimo> it shouldn't take long enough to spesh that so that it could fail to install :o

[23:32] <Zoffix> Maybe it installs but quits before writing to the file? It's like a 20MB file

[23:33] <timotimo> oh, that could be, yeah

[23:34] <timotimo> so, if we had an op that turns a native int into a str without going via Int, that'd make this thing faster

[23:34] <timotimo> at least i think so

[23:34] <Zoffix> nice

[23:35] <timotimo> nope, barely a difference at all

[23:35] *** cdg joined
[23:35] <Zoffix> :)

[23:35] <timotimo> what allocates all these Int objects ...

[23:35] <timotimo> 7757486 Int objects

[23:36] <Zoffix> I got `nqp::say(nqp::concat(nqp::tostr_I(nqp::box_i(Token, Int)),

[23:36] <Zoffix>                 nqp::concat(' ', nqp::tostr_I(nqp::box_i($ip, Int))))),

[23:36] <Zoffix> there. Could that be it?

[23:36] <timotimo> i commented that out and it still allocates that much

[23:37] <Zoffix> m: say 18.287/17.735

[23:37] <camelia> rakudo-moar 90303c1e3: OUTPUT: «1.031125␤»

[23:37] <timotimo> it's barely a difference at all

[23:37] <Zoffix> .tell rindolf I got P6(NQP) version fast enough to be to just 3% slower than P5: https://gist.github.com/zoffixznet/6082e290e87fb4d2f800a24d7426791c

[23:37] <yoleaux> Zoffix: I'll pass your message to rindolf.

[23:38] <timotimo> not getting line numbers because nqp code :S

[23:38] <rindolf> Zoffix: hi

[23:38] <yoleaux> 23:37Z <Zoffix> rindolf: I got P6(NQP) version fast enough to be to just 3% slower than P5: https://gist.github.com/zoffixznet/6082e290e87fb4d2f800a24d7426791c

[23:39] *** cdg left
[23:39] <Zoffix> And 2s is what it takes to compiler it, so I'd say my original challenge completed: I got P5 beat (despite the final result being NQP soup appreciated by few:P)

[23:40] <Zoffix> s/compile <( r//

[23:41] <Zoffix> m: use nqp; my int $x = 42; for ^10 { say nqp:add_i($x, 1) }

[23:41] <camelia> rakudo-moar 90303c1e3: OUTPUT: «===SORRY!===␤Lexical with name '$x' has wrong type␤»

[23:41] <Zoffix> why u say dat?

[23:42] <Zoffix> oh right, nqp int != P6 native int

[23:42] <Zoffix> right?

[23:42] <timotimo> no, that should be compatible

[23:43] <Zoffix> Ah lol

[23:43] <Zoffix> m: say 'nqp:add_i'.comb(':').elems

[23:43] <timotimo> um yo

[23:43] <camelia> rakudo-moar 90303c1e3: OUTPUT: «1␤»

[23:43] <timotimo> check what happens when you turn $ii into int, too

[23:44] <Zoffix> damn, I thought it were an int alread y:o

[23:44] <timotimo> it may surprise you

[23:44] <Zoffix> Woooohoo!

[23:45] <Zoffix> Actually, this is what I originally was expecting when I started on this journey :) 'cause that other program I rewrote in NQP was a bunch faster than P5

[23:45] <Zoffix> m: say 17.735/7.168

[23:45] <camelia> rakudo-moar 90303c1e3: OUTPUT: «2.474191␤»

[23:46] <timotimo> that's more like it.

[23:46] <Zoffix> rindolf: timotimo++ made the program 2.5x FASTER than Perl 5 :D https://gist.github.com/zoffixznet/4df7a30549b26e2b238982fb65bbb0a4

[23:46] <timotimo> can you measure with MVM_JIT_EXPR_DISABLE=yes ?

[23:47] <Zoffix> 0m6.904s

[23:47] <timotimo> so a bit faster, yeah?

[23:47] <Zoffix> Yeah

[23:47] <timotimo> how stable is that measurement?

[23:47] *** vike left
[23:47] <Zoffix> 0m6.813s 0m6.976s 0m6.874s

[23:47] <timotimo> OK

[23:48] <timotimo> well, brrt has lots of ideas for making the exprjit smarter :)

[23:48] <Zoffix> Sweet :)

[23:50] <timotimo> with $fkE at 25, the program runs the GC a single time

[23:51] <rindolf> Zoffix: nice

[23:54] *** pierre joined
[23:56] <timotimo> given ~2 seconds of that are parsing the code - no doubt because of the huge array of primes at the start - it's pretty good

[23:59] *** pierre left
