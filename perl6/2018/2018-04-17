[00:00] *** lizmat joined
[00:01] <MasterDuke> samcv: have you seen https://probablydance.com/2017/02/26/i-wrote-the-fastest-hashtable/ ?

[00:01] *** zachk left
[00:02] <samcv> no i haven't

[00:04] *** cocozachk joined
[00:04] *** lizmat left
[00:04] <Herby_> I need a little help with completing this grammar

[00:05] <Herby_> https://gist.github.com/sylints/2936b68a0b9b46131df71f145dd47797

[00:05] <Herby_> as a learning exercise, I'm trying to parse torrent file names and extra information.  Its a JS and Python library that gave me the idea: https://github.com/divijbindlish/parse-torrent-name

[00:06] <Herby_> my problem is that when using a grammar, how do I account for an unknown string?  The way the python library handles it is extracting all the other relevant parts from the file name, and then the leftover part must be the title

[00:06] <MasterDuke> samcv: i believe jnthn has referenced it as a potential source of ideas for redoing MVMHash entirely

[00:06] <Herby_> at the bottom of the gist, you can see it two examples.  when I don't include an unknown title, it matches fine. if I add a title, it fails because I can't figure out how to account for it

[00:07] <samcv> MasterDuke: that would be neat

[00:07] *** cozachk left
[00:08] <MasterDuke> Herby_: try .subparse

[00:08] <Herby_> hmmmm

[00:09] *** mirlur[m] left
[00:09] *** tadzik left
[00:09] *** CIAvash[m] left
[00:09] *** ilmari[m] left
[00:10] *** unclechu left
[00:10] *** Matthew[m] left
[00:11] *** yoleaux left
[00:11] <MasterDuke> Herby_: .parse *must* match the entire input, .subparse will match just parts of the input

[00:11] *** mcmillhj left
[00:11] *** reportable6 left
[00:12] <Herby_> I was hoping that there was a regex pattern that I could have be checked last in the grammar, as essentially a "catch all"

[00:12] *** reportable6 joined
[00:12] *** greppable6 left
[00:12] <Herby_> but my regex skills are weak and I don't think thats doable

[00:12] *** bisectable6 left
[00:13] *** mcmillhj joined
[00:14] *** speedChicken joined
[00:15] <MasterDuke> well, you could just add .* at the end

[00:15] <MasterDuke> but what do you mean "checked"?

[00:18] <Herby_> not sure. i'm flailing a bit :)

[00:18] <Herby_> maybe grammars aren't the best way to tackle this. maybe the Python route of using for loops and regex might be better

[00:18] <Herby_> let me rephrase: maybe grammars arent the best for my current skill set

[00:18] *** mcmillhj left
[00:19] <MasterDuke> have you read moritz++'s grammar book?

[00:20] <MasterDuke> but .subparse didn't do what you want?

[00:20] *** lookatme joined
[00:20] <Herby_> MasterDuke: I did buy moritz book. Just started it

[00:21] <MasterDuke> cool, he'd be much better help than i

[00:21] <Herby_> fiddling with subparse now

[00:24] *** Kaiepi left
[00:25] *** mcmillhj joined
[00:25] <Herby_> MasterDuke: thanks for taking a look

[00:26] <MasterDuke> welcome

[00:27] *** Kaiepi joined
[00:29] *** mcmillhj left
[00:30] *** comborico1611 left
[00:31] <Geth> ¦ marketing: dbe669e1b2 | (Zoffix Znet)++ | 2 files

[00:31] <Geth> ¦ marketing: Implement thumblerizer

[00:31] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/dbe669e1b2

[00:31] *** Zoffix left
[00:36] <Geth> ¦ rakudo.org: e307ea61e5 | (Zoffix Znet)++ | 2 files

[00:36] <Geth> ¦ rakudo.org: [REAPP] Add -L to curl so it follows any redirects

[00:36] <Geth> ¦ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/e307ea61e5

[00:38] *** mcmillhj joined
[00:43] *** mcmillhj left
[00:43] *** BenGoldberg joined
[00:43] *** Guest94188 joined
[00:44] <Guest94188> can perl6 read keyboard interactions? getc does not detect shift for example

[00:47] <Guest94188> getc also needs the user to press enter

[00:48] <buggable> New CPAN upload: PDF-Class-0.1.7.tar.gz by WARRINGD http://modules.perl6.org/dist/PDF::Class:cpan:WARRINGD

[00:48] <MasterDuke> Guest94188: i think there's a module that provides lower level access

[00:48] <lookatme> the termios ?

[00:48] <MasterDuke> buggable: eco termios

[00:48] <buggable> MasterDuke, Found 2 results: Term::termios, Term::termios. See https://modules.perl6.org/s/termios

[00:49] <MasterDuke> yeah. i haven't used it though, so can't provide any actual help

[00:49] <geekosaur> shift requires event / gui level

[00:49] <timotimo> https://docs.perl6.org/routine/getc#Buffering_terminals - Guest94188 check out these two sections

[00:49] *** pilne joined
[00:51] <BenGoldberg> I would suggest looking through the modules in https://modules.perl6.org/t/TERMINAL and seeing which one best suits your ultimate task, rather than saying, "I need getc" and then trying to solve your task with it.

[00:52] <BenGoldberg> Also, these: https://modules.perl6.org/search/?q=term

[00:53] *** kurahaupo_ joined
[00:56] *** kurahaupo left
[00:56] <Guest94188> how do you set the terminal to "unbuffered"?

[00:56] *** mcmillhj joined
[00:57] <timotimo> you need termios for that

[00:58] <Guest94188> is that `$termios.setattr(:DRAIN)`?

[00:58] <pilne> so, silly question... what's the general update procedure for when a new rakudo version comes out? delete and a fresh make/install?

[00:59] <Guest94188> is it possible to capture magic sysrq keys before it reisubs?

[01:00] <geekosaur> only by hackingt he kernel

[01:00] <Guest94188> lets say you want to make an interactive tutorial where the learner is in a simulation mode

[01:01] <geekosaur> you fully expect that every program gets to see every single keypress, including magic sysrq and other special kernel overrides?

[01:01] <geekosaur> or keys that mean things only to gui programs, like shift, that literally cannot be delivered to a program in terminal mode, only in gui mode?

[01:01] *** mcmillhj left
[01:07] *** mcmillhj joined
[01:09] *** bisectable6 joined
[01:13] *** mcmillhj left
[01:15] <Herby_> pilne: I've pondered that myself. I don't have an answer that I'm confident in :)

[01:16] <pilne> i'm attempting to use "checkinstall" to make that process a bit easier for myself in the future if that is what it comes down to (:

[01:18] *** mcmillhj joined
[01:18] <Herby_> clear

[01:18] <Herby_> whoops!

[01:23] *** mcmillhj left
[01:24] <BenGoldberg> If you use rakudobrew, you can have multiple versions installed simultaneously.

[01:24] <Geth> ¦ doc: 033880b1bc | 陈梓立++ | doc/Type/utf8.pod6

[01:24] <Geth> ¦ doc: Eliminates useless X<> tag

[01:24] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/033880b1bc

[01:24] <Geth> ¦ doc: 0827139c57 | 陈梓立++ | htmlify.p6

[01:24] <Geth> ¦ doc: Merge branch 'master' of https://github.com/perl6/doc

[01:24] <synopsebot> Link: https://doc.perl6.org/type/utf8

[01:24] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0827139c57

[01:25] *** daxim left
[01:25] *** daxim joined
[01:25] *** Tison joined
[01:26] *** cocozachk left
[01:30] <pilne> i thought rakudobrew was not reccomended at one point in the recent past?

[01:30] <pilne> or am i thinking of a different tool?

[01:30] *** mcmillhj joined
[01:31] <geekosaur> rakudobrew is not generally recommended for perl6 users as opposed to developers, because it complicates a number of things for users

[01:31] <geekosaur> but allows developers to keep multiple versions around and switch between them easily

[01:32] <geekosaur> (the way it does that is known to interfere with things like automatic usage messages)

[01:33] <pilne> fair enough

[01:33] <pilne> so is the general process (for now) to just do a make uninstall with the old version, and make install with the new?

[01:35] *** mcmillhj left
[01:37] <Herby_> pilne: I might be imagining this but I think I remember being told just install the new version over the old

[01:37] <Herby_> but if you do have an easy way to uninstall the old, then might as well (i'm a linux rookie)

[01:38] <pilne> i'm mostly a "i don't like windows" linux user, so i'm far from advanced, despite being advanced in my years :D

[01:45] *** ilbot3 left
[01:46] *** mcmillhj joined
[01:51] *** mcmillhj left
[01:56] *** ilbot3 joined
[01:56] *** ChanServ sets mode: +v ilbot3

[02:01] *** khisanth__ left
[02:01] *** eliasr left
[02:03] *** Tison left
[02:05] *** mcmillhj joined
[02:10] *** yoleaux joined
[02:10] *** ChanServ sets mode: +v yoleaux

[02:10] *** mcmillhj left
[02:14] *** khisanth__ joined
[02:23] *** mcmillhj joined
[02:26] <Herby_> m: my $s = "test's()z"; $s.=subst(/[\'\(\)]/, '', :g); put $s;

[02:26] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «test's()z␤»

[02:26] <Herby_> ...

[02:26] <Herby_> if I have a list of characters I'd like to remove from a string, whats a good way to go about it?

[02:26] <Herby_> for instance, if I have to remove any of these characters: . \ / ( )

[02:27] <Herby_> m: my $s = "test's()z"; $s.=subst(/<[\'\(\)]>/, '', :g); put $s;

[02:27] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «testsz␤»

[02:28] <Herby_> :)

[02:28] <geekosaur> https://docs.perl6.org/routine/trans

[02:28] *** mcmillhj left
[02:29] <Herby_> thanks, I hadn't seen that method before

[02:29] <Herby_> do you know how it compares in performance to .subst?

[02:30] <geekosaur> I would expect it to be faster

[02:30] *** Kaiepi left
[02:30] <geekosaur> but don;'t know for certain. but avoiding the regex (list of chars instead) should count for a lot

[02:31] <Herby_> i'll give it a whirl. thanks!

[02:31] <Herby_> i hope to have this project done by the end of the week so I can get some feedback

[02:31] <Herby_> I think my regex mutilation is going to make some people cry

[02:38] *** mcmillhj joined
[02:43] *** mcmillhj left
[02:49] *** mcmillhj joined
[02:52] *** pierrot_ is now known as pierrot

[02:52] *** pierrot left
[02:52] *** pierrot joined
[02:54] *** mcmillhj left
[02:59] *** mcmillhj joined
[03:00] *** pilne left
[03:04] *** mcmillhj left
[03:34] *** mcmillhj joined
[03:39] *** mcmillhj left
[03:46] *** mcmillhj joined
[03:50] *** mcmillhj left
[03:58] *** greppable6 joined
[03:59] *** char_var[buffer] left
[04:02] *** a3f_ joined
[04:03] *** mcmillhj joined
[04:04] *** ilmari_ joined
[04:05] *** ilmari_ is now known as ilmari

[04:05] *** japanoise joined
[04:05] *** ilmari left
[04:05] *** ilmari joined
[04:05] *** reu joined
[04:08] *** mcmillhj left
[04:08] <Geth> ¦ marketing: 78dc1d71b4 | (Zoffix Znet)++ | 10 files

[04:08] <Geth> ¦ marketing: Implement pages preview pop outs

[04:08] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/78dc1d71b4

[04:14] *** mcmillhj joined
[04:14] <hahainternet> i just want to pop in and say how much i appreciate the weekly updates still

[04:14] <hahainternet> i don't have time to keep up with things as much as i'd like

[04:14] <hahainternet> and it's lovely to have somewhere to read concise details

[04:15] <donpdonp> hahainternet: that sounds good, where do I find the updates?

[04:18] *** mcmillhj left
[04:18] <hahainternet> donpdonp: https://p6weekly.wordpress.com/

[04:19] <donpdonp> thx

[04:37] *** sauvin joined
[04:37] *** curan joined
[04:44] *** Voldenet joined
[04:44] *** wamba joined
[04:50] *** Voldenet left
[04:50] *** Voldenet joined
[04:57] *** ilmari[m] joined
[05:01] *** Matthew[m] joined
[05:05] *** unclechu joined
[05:08] *** tadzik joined
[05:15] *** jmerelo joined
[05:22] *** ufobat joined
[05:24] *** wictory[m] joined
[05:27] *** Guest94188 left
[05:28] *** BenGoldberg left
[05:29] *** troys left
[05:33] *** mack[m] joined
[05:36] *** Garland_g[m] joined
[05:36] *** mirlur[m] joined
[05:37] *** CIAvash[m] joined
[05:39] *** mienaikage joined
[05:40] *** eater left
[05:44] *** eater joined
[05:45] *** AlexDaniel` joined
[05:55] <Geth> ¦ doc: JJ self-assigned Create a new page with info about OS portability https://github.com/perl6/doc/issues/670

[06:00] <El_Che> Zoffix: I see you already changed the curl instructions. THx

[06:01] *** espadrine left
[06:08] *** darutoko joined
[06:11] *** noganex left
[06:15] <Geth> ¦ doc/master: 6 commits pushed by (JJ Merelo)++

[06:15] <Geth> ¦ doc/master: 6f2c5f49d6 | [Build] Test docker for shippable

[06:15] <Geth> ¦ doc/master: fb00a53695 | [Build] Switching to specific image

[06:15] <Geth> ¦ doc/master: da4197748e | [Build] tags image

[06:15] <Geth> ¦ doc/master: a25bd838c7 | [Build] forces pull

[06:15] <Geth> ¦ doc/master: ce8e782812 | [Build] Adds caching to shippable

[06:15] <Geth> ¦ doc/master: 68d04875c0 | Removes trailing whitespace

[06:15] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/0827139c57a3...68d04875c059

[06:19] <llfourn> m: my \⍴ = 42

[06:19] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed my␤at <tmp>:1␤------> 3my7⏏5 \⍴ = 42␤»

[06:21] <moritz> .uni ⍴

[06:21] *** lizmat joined
[06:21] <moritz> .u ⍴

[06:21] <yoleaux> U+2374 APL FUNCTIONAL SYMBOL RHO [So] (⍴)

[06:21] <moritz> not an identifier

[06:22] <moritz> m: multi term:sym<⍴> { 42 }

[06:22] <camelia> rakudo-moar ceeb3a00d: ( no output )

[06:22] *** noganex joined
[06:22] <moritz> m: multi term:sym<⍴> { 42 }; say ⍴

[06:22] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «42␤»

[06:28] *** khw left
[06:29] <jmerelo> I've deleted Codeship from the perl6/doc repo integrations. It was actually doing nothing, and I couldn't find the way to make a fast test using Docker, since it does not have Docker installed

[06:32] <TEttinger> but moritz! rho, rho rho of x, always equals one, merrily merrily merrily merrily APL is fun!

[06:35] *** domidumont joined
[06:37] <moritz> TEttinger: you should put that on rhosettapoems.org :-)

[06:38] <TEttinger> it's one of a few almost-well-known APL quotes. along with "Tis the dream of every hacker / before his day is done / to write three lines of APL and make the damn thing run"

[06:39] <TEttinger> the other quotes being pure profanity and howls

[06:41] *** domidumont left
[06:42] *** domidumont joined
[06:44] *** robertle joined
[06:50] <moritz> sounds like a fun culture all around

[06:54] <Geth> ¦ doc: JJ self-assigned Suggestions for expanding the Community page https://github.com/perl6/doc/issues/1920

[06:55] <Geth> ¦ doc: ae860521ba | (JJ Merelo)++ | doc/Language/community.pod6

[06:55] <Geth> ¦ doc: Expands the community page

[06:55] <Geth> ¦ doc: 

[06:55] <Geth> ¦ doc: With links to the perl6.org community page, and Perl 6 weekly. Closes #1920.

[06:55] <Geth> ¦ doc: 

[06:55] <synopsebot> Link: https://doc.perl6.org/language/community

[06:55] <Geth> ¦ doc: If anyone's got more suggestions, feel free to reopen and/or make a

[06:55] <Geth> ¦ doc: pull request.

[06:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ae860521ba

[06:59] <TEttinger> moritz: to be fair, the howls are only from newcomers who are trying to port an old hand's codebase after they retired, and the profanity is mild compared to the obscenity of RPG programmers

[07:00] <El_Che> omg, I just got travis + bintray working for creating rakudo repos

[07:00] <El_Che> (poc for now, to see how it works)

[07:00] <jmerelo> El_Che: what's bintray? Kudos, OTOH

[07:01] <El_Che> jmerelo: an artifact distributor (e.g. maven, rpm, deb, repos, etc)

[07:01] <El_Che> they have a free model for foss

[07:01] <stmuk_> I can't install p6doc on 2018.01 anymore "Expected MAST::Frame"

[07:01] <El_Che> integration with travis means a lot of yaml, json, gpg and api keys :)

[07:02] *** wamba left
[07:03] <stmuk_> this is probably a good argument for increased doc bundling since anyone installing a rakudo release won't necessarily be able to install docs a few months later

[07:03] <llfourn> moritz: so not every greek letter is an identifier?

[07:03] <llfourn> is there any reason for that?

[07:03] <moritz> llfourn: oh, greek letters are identifiers

[07:04] <moritz> llfourn: but the character you posted was a U+2374 APL FUNCTIONAL SYMBOL RHO, not a greek character

[07:04] <jmerelo> moritz++

[07:04] <moritz> m: my \ρ = 42; say ρ

[07:04] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «42␤»

[07:04] <llfourn> m: my \ρ = 42

[07:04] <camelia> rakudo-moar ceeb3a00d: ( no output )

[07:04] <moritz> works fine

[07:04] <llfourn> ahhhh

[07:04] <moritz> .u ρ

[07:04] <yoleaux> U+03C1 GREEK SMALL LETTER RHO [Ll] (ρ)

[07:04] <llfourn> thanks moritz++

[07:04] <moritz> llfourn: you're welcome :-)

[07:05] <llfourn> I'm kind of curious about this APL and why it needed a special rho

[07:06] <llfourn> is that a path I want to walk down?

[07:06] <jmerelo> llfourn: it's an 80's language that uses lots of special symbols for operations. You probably don't want to go that way.

[07:07] <llfourn> jmerelo: thanks!

[07:07] <llfourn> feels good to be a 90s kid

[07:08] <jmerelo> llfourn: yep, you didn't have BASIC as a first language...

[07:09] * moritz had QBASIC as the first language

[07:09] <llfourn> no I had visual basic as my first language lol

[07:09] <moritz> line numbers were optional, yay!

[07:09] * jmerelo feels old

[07:09] <El_Che> jmerelo: don't let these hipsters let you down!

[07:10] <jmerelo> El_Che: all those memories are coming back... Like reserving <1000 line numbers for subroutines in ZX Spectrum's Basic... Or learning that GOTO was bad... 

[07:11] <jmerelo> Or the joy of using a computer called "NewBrain". 

[07:11] <jmerelo> Amazing graphics, BTW, https://es.wikipedia.org/wiki/Grundy_NewBrain

[07:12] <jmerelo> Sorry, that's Spanish https://en.wikipedia.org/wiki/Grundy_NewBrain

[07:12] <El_Che> wow

[07:12] <El_Che> you *are* old

[07:12] * El_Che ducks :)

[07:12] <El_Che> just kidding :)

[07:13] <jmerelo> El_Che: that's simply a fact...

[07:13] <El_Che> I find it funny my kids say that the radio "is crashing" when there is some interference

[07:15] <jmerelo> El_Che: that's rich :-)

[07:16] *** AlexDaniel joined
[07:19] *** lizmat left
[07:21] <Geth> ¦ doc: JJ self-assigned language/modules is too weak on tooling https://github.com/perl6/doc/issues/431

[07:22] <Geth> ¦ doc: ccce1a2239 | (JJ Merelo)++ | doc/Language/modules.pod6

[07:22] <Geth> ¦ doc: Adds a section on using `zef`

[07:22] <Geth> ¦ doc: 

[07:22] <Geth> ¦ doc: Hopefully, closes #431. Please feel free to reopen and/or change.

[07:22] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ccce1a2239

[07:22] <synopsebot> Link: https://doc.perl6.org/language/modules

[07:26] *** dakkar joined
[07:29] *** rindolf joined
[07:34] <stmuk_> jmerelo: https://github.com/perl6/perl6-pod-to-bigpage/issues/15

[07:37] <El_Che> stmuk_: oh

[07:37] <El_Che> that's sad

[07:38] <jmerelo> stmuk_: I think it can be safely removed. I'll try that.

[07:41] <stmuk_> yes the test uses http://http.perl6.org/robots.txt correctly

[07:41] <stmuk_> El_Che: it's sad we are cross platform and don't just work on linux? :)

[07:42] *** tt left
[07:42] <El_Che> sad the my windows brothers and systems don't get ssl

[07:42] <El_Che> :)

[07:43] <stmuk_> probably the correct solution would be to use the windows native ssl library but I've no idea how to do that

[07:43] <stmuk_> or particular interest in doing it :)

[07:43] <jmerelo> stmuk_: pardon me if I'm wrong, but isn't SSL supposed to be deprecated in favor of TLS?

[07:44] <stmuk_> I'm using SSL loosely to mean TLS just like everyone else does like the OpenSSL people for example

[07:44] <jmerelo> stmuk_: ah, OK :-)

[07:45] <jmerelo> So, all this SSL dependence thing is due to portability problems? Does it work on macs?

[07:45] <stmuk_> macOS uses openssl

[07:46] *** AlexDaniel left
[07:54] <Geth> ¦ perl6-pod-to-bigpage: JJ++ created pull request #16: Removes SSL module dependency

[07:54] <Geth> ¦ perl6-pod-to-bigpage: review: https://github.com/perl6/perl6-pod-to-bigpage/pull/16

[07:54] <Geth> ¦ perl6-pod-to-bigpage: d912bf170d | (JJ Merelo)++ | META6.json

[07:54] <Geth> ¦ perl6-pod-to-bigpage: Removes dependency from IO::Socket::SSL

[07:54] <Geth> ¦ perl6-pod-to-bigpage: 

[07:54] <Geth> ¦ perl6-pod-to-bigpage: Which probably was there for no reason, anyway. Refs #15

[07:54] <Geth> ¦ perl6-pod-to-bigpage: review: https://github.com/perl6/perl6-pod-to-bigpage/commit/d912bf170d

[07:54] <Geth> ¦ perl6-pod-to-bigpage: 01d69594f9 | (JJ Merelo)++ | README.md

[07:54] <Geth> ¦ perl6-pod-to-bigpage: Improves documentation

[07:55] <Geth> ¦ perl6-pod-to-bigpage: review: https://github.com/perl6/perl6-pod-to-bigpage/commit/01d69594f9

[07:55] <Geth> ¦ perl6-pod-to-bigpage: 397bfaf5f6 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 2 files

[07:55] <Geth> ¦ perl6-pod-to-bigpage: Merge pull request #16 from JJ/master

[07:55] <Geth> ¦ perl6-pod-to-bigpage: 

[07:55] <Geth> ¦ perl6-pod-to-bigpage: Removes SSL module dependency

[07:55] <Geth> ¦ perl6-pod-to-bigpage: review: https://github.com/perl6/perl6-pod-to-bigpage/commit/397bfaf5f6

[07:55] <jmerelo> stmuk_: done. Thanks for the heads up :-)

[07:56] <stmuk_> jmerelo++

[08:01] <Geth> ¦ doc: JJ self-assigned Blob.allocate not documented https://github.com/perl6/doc/issues/917

[08:02] <Geth> ¦ doc: 201d90a4ba | (JJ Merelo)++ | shippable.yml

[08:02] <Geth> ¦ doc: [Shippable] Cache modules dir

[08:02] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/201d90a4ba

[08:02] <Geth> ¦ doc: f7d88ec0a2 | (JJ Merelo)++ | doc/Type/Channel.pod6

[08:02] <Geth> ¦ doc: Clarifies `list` for Channel

[08:02] <synopsebot> Link: https://doc.perl6.org/type/Channel

[08:02] <Geth> ¦ doc: 

[08:02] <Geth> ¦ doc: Based on @jnthn answer. Closes #879.

[08:02] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f7d88ec0a2

[08:02] <Geth> ¦ doc: f1207d9bfb | (JJ Merelo)++ | doc/Type/Blob.pod6

[08:02] <synopsebot> Link: https://doc.perl6.org/type/Blob

[08:03] <Geth> ¦ doc: Checking if `allocate` is documented.

[08:03] <Geth> ¦ doc: 

[08:03] <Geth> ¦ doc: It apparently is, so I have just improved the description based on the

[08:03] <Geth> ¦ doc: linked code. Closes #917.

[08:03] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f1207d9bfb

[08:04] <jmerelo> I'm test-driving shippable to see if I can get a faster test there but it's rather useless unless I make the container based build work (which I haven't) https://app.shippable.com/github/JJ/doc/runs?branchName=master

[08:04] <jmerelo> There are two ways of using containers: one, provide your own container. However, it's got to be based in Ubuntu, and the `doccer` container right now is based on Alpine

[08:06] <jmerelo> Two, use your own container, but since Shippable also launches a container there's a bit of directory mounting involved I haven't been able to fathom so far. Here's the issue I have opened https://github.com/Shippable/support/issues/4270

[08:06] <jmerelo> Last thing I've tested is to cache perl6 modules, which takes 4 minutes. But it simply does not work, or I couldn't make it work. 

[08:07] <jmerelo> So now we have a Shippable based test, which runs only prove, and is slower than the Docker-based full tests. But at least it runs in parallel.

[08:07] <jmerelo> Any suggestion will be appreciated.

[08:18] *** andrzejku joined
[08:27] *** AlexDaniel joined
[08:28] <AlexDaniel> jmerelo: what editor are you using?

[08:28] <El_Che> releasable6: stztus

[08:28] <releasable6> El_Che, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Releasable

[08:28] <El_Che> releasable6: status

[08:28] <releasable6> El_Che, Next release in ≈4 days and ≈10 hours. 6 blockers. 224 out of 239 commits logged

[08:28] <releasable6> El_Che, Details: https://gist.github.com/27c21c591055cd270f4556b1167fd384

[08:29] <Geth> ¦ doc/master: 4 commits pushed by (Luca Ferrari)++

[08:29] <Geth> ¦ doc/master: 781f351b74 | Remove smile in native call array documentation.

[08:29] <Geth> ¦ doc/master: fadf3c94db | Itemize the CArray methods.

[08:29] <Geth> ¦ doc/master: 939cc25374 | Provide a simple example to demonstrate and document CArray main methods.

[08:29] <Geth> ¦ doc/master: 0cabf21d57 | Make it clear that CArray is a Perl 6 object.

[08:29] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/f1207d9bfba1...0cabf21d5710

[08:29] <AlexDaniel> El_Che: heh, you can misspell “releasable6” but not “status”… that's LTA

[08:30] <AlexDaniel> rlesable6: status

[08:30] <AlexDaniel> rleasable6: status

[08:30] <releasable6> AlexDaniel, Next release in ≈4 days and ≈10 hours. 6 blockers. 224 out of 239 commits logged

[08:30] <releasable6> AlexDaniel, Details: https://gist.github.com/b28a15f93f6c6c6ace2f4fc5b2b2a34c

[08:30] <AlexDaniel> El_Che: :) https://github.com/perl6/whateverable/issues/305#issuecomment-381898110

[08:32] *** andrzejku left
[08:37] *** eliasr joined
[08:44] *** Sgeo_ left
[08:44] *** Sgeo_ joined
[08:45] *** aindilis left
[08:49] <jmerelo> AlexDaniel: right now, El_Che's packages, but the problem is it takes a while to install modules.

[08:49] <AlexDaniel> jmerelo: no I mean text editor

[08:51] <jmerelo> AlexDaniel: Ah, sorry. In general, I use emacs, but I tend to use Atom for pod6, since emacs support for that is nil.

[08:51] <jmerelo> AlexDaniel: why?

[08:51] <jmerelo> AlexDaniel: you want to prove hypothesis that Emacs is old folk's preferred editor?

[08:52] <AlexDaniel> jmerelo: there's “Show Invisibles” textbox in Editor Settings

[08:53] <AlexDaniel> or maybe “showInvisibles: true” in the config, I don't know really

[08:53] <AlexDaniel> use it, please :)

[08:54] <jmerelo> Emacs does, but Atom does not.

[08:54] <jmerelo> I think I know what you mean...

[08:54] <AlexDaniel> that's for Atom :)

[08:57] <El_Che> jmerelo: modules? It would be trivial to build a deb with the included modules

[08:57] <El_Che> jmerelo: I probably have a private repo doing that :)

[08:58] <Geth> ¦ doc: 1a66f2c942 | (JJ Merelo)++ | doc/Type/Blob.pod6

[08:58] <Geth> ¦ doc: Eliminates trailing whitespace

[08:58] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1a66f2c942

[08:58] <Geth> ¦ doc: 7799883ec8 | (JJ Merelo)++ | doc/Language/nativecall.pod6

[08:58] <Geth> ¦ doc: Merge branch 'master' of github.com:perl6/doc

[08:58] <synopsebot> Link: https://doc.perl6.org/type/Blob

[08:58] <synopsebot> Link: https://doc.perl6.org/language/nativecall

[08:58] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7799883ec8

[08:59] <jmerelo> AlexDaniel: I have found some of them. Thanks for the tip. Any other place where I should take them off?

[08:59] <AlexDaniel> jmerelo: no, just please keep that option enabled in your editor at all times, so that you're not producing any extra :)

[09:00] <jmerelo> AlexDaniel++

[09:03] <El_Che> AlexDaniel: autch, me bad typist

[09:04] <jmerelo> p6: my Blob $b0 = Blob.allocate(10,0)

[09:04] <camelia> rakudo-moar ceeb3a00d: ( no output )

[09:04] <jmerelo> p6: my Blob $b0 = Blob.allocate(10,0); $b0

[09:05] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «WARNINGS for <tmp>:␤Useless use of $b0 in sink context (line 1)␤»

[09:05] <jmerelo> p6: my Blob $b0 = Blob.allocate(10,0); $b0.say

[09:05] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «Blob:0x<00 00 00 00 00 00 00 00 00 00>␤»

[09:07] <Geth> ¦ doc: a6c13ad466 | (JJ Merelo)++ | doc/Type/Blob.pod6

[09:07] <Geth> ¦ doc: Adds example to Blob

[09:07] <Geth> ¦ doc: 

[09:07] <Geth> ¦ doc: After this question

[09:07] <Geth> ¦ doc: https://www.nntp.perl.org/group/perl.perl6.users/2018/04/msg4731.html

[09:07] <Geth> ¦ doc: in the perl6-users list

[09:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a6c13ad466

[09:23] *** markong joined
[09:29] <jkramer> For the record, in vim I use this for whitespaces, maybe someone can use it: https://gist.github.com/jkramer/65abdae02e714fd60f7fb666aa077e73

[09:32] <Juerd> I have a simpler one: match WhitespaceEOL /\s\+$/

[09:33] <Juerd> Do you happen to know what the extra metachars in your vim regex do?

[09:34] *** zakharyas joined
[09:34] <jkramer> Juerd: I was just thinking about that too when I looked at it, I actually don't know. :) I copied that snippet to my config from somewhere else ~10 years ago :D

[09:36] <jkramer> From help: \%#     Matches with the cursor position.

[09:36] <Juerd> In fact, your regex doesn't seem to work here...

[09:36] <Altreus> vim has list and listchars

[09:37] <Altreus> one of which is trailing whitespace

[09:37] <Altreus> set listchars=eol:⏎,tab:▸–,trail:—,extends:⇉,precedes:⇇,nbsp:␣

[09:37] *** lizmat joined
[09:37] <Altreus> not that this works

[09:37] <Altreus> I keep meaning to figure out why

[09:37] * lizmat clickbaits https://p6weekly.wordpress.com/2018/04/16/2018-16-so-that/

[09:37] <yoleaux> 16 Apr 2018 21:44Z <timotimo> lizmat: i think "the fix makes moarvm significantly faster" is wrong, the performance difference is not noticable

[09:38] *** w_richard_w left
[09:39] <lizmat> .tell timotimo updated

[09:39] <yoleaux> lizmat: I'll pass your message to timotimo.

[09:40] <Juerd> Altreus: I can't use listchars because I like to copy/paste snippets between terminals

[09:40] <Juerd> Altreus: So I have all my whitespace highlights set up as color coding only

[09:41] <Altreus> Ah, I can't do that anyway because I usually have something else in the way, like NERDTree or line numbers

[09:41] <Altreus> for some reason I can't easily turn off line numbering when I have it in relative mode

[09:41] <Altreus> vim is kinda pesky tbh

[09:42] <Juerd> https://gist.github.com/Juerd/cc4a187aeb5c6fd8d0ff68d31e53e30b

[09:42] <Juerd> This is also why I don't use line numbering, indeed :)

[09:43] <tyil> Altreus: cant you just copy it into the system clipboard buffer? https://stackoverflow.com/questions/3961859/how-to-copy-to-clipboard-in-vim#3961954

[09:43] <Altreus> I'm not usually running vim on the system I'm typing on

[09:43] <tyil> Juerd: * 

[09:43] <Altreus> It doesn't work across SSHes, or even tmux windows, apparently

[09:44] <tyil> that could be an issue

[09:44] <tyil> I generally run vim locally, so it works pretty well

[09:44] <tyil> I guess I could make a plugin to send the selection to a paste site and have vim :echo the url

[09:44] <Juerd> tyil: I probably could, but two decades of using select+paste with the mouse have left me unwilling to learn a different method for each program :)

[09:45] <Altreus> or just use emacs in vim mode :D

[09:45] <jkramer> Juerd: It works for me. I think sometimes vim doesn't refresh the highlighting instantly sometimes, try ctrl+l.

[09:45] <tyil> Altreus: thats just evil

[09:45] <tyil> if you know what I mean :')

[09:46] <Altreus> I like the cut of your jib

[09:46] <Juerd> jkramer: Ah, indeed, with ^L it does show. Interesting that it needs that; my simpler regex doesn't

[09:53] <jkramer> Juerd: Happens only sometimes apparently. I only noticed for the first time when I just tested it.

[09:53] <Juerd> lizmat: Thanks for yet another weekly :)

[09:54] <jkramer> Although I don't know what the extra stuff after \s\+ is supposed to do, so I guess I'll just use yours from now on. :)

[09:54] <lizmat> Juerd: you're very welcome :-)

[09:55] <Juerd> jkramer: It seems to mean: if the cursor is at the end of the line. But it doesn't do that.

[09:55] <Juerd> Or maybe if the cursor is not at the end of the line

[09:55] <Juerd> Vim regexes are a much higher level voodoo than Perl regexes

[09:56] *** thundergnat left
[09:58] <jkramer> Juerd: I guess it's supposed to prevent highlighting spaces at EOL when you're still editing the line so not every space you type will instantly be highlighted as error.

[09:58] <jkramer> But yeah, doesn't seem to work that well. :)

[10:00] *** domidumont left
[10:04] <Geth> ¦ rakudo.org: 8507e7436d | (Zoffix Znet)++ (committed using GitHub Web editor) | templates/files-rakudo-third-party.html.ep

[10:04] <Geth> ¦ rakudo.org: [REAPP] Fix OpenSUSE URL

[10:04] <Geth> ¦ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/8507e7436d

[10:14] *** scimon joined
[10:23] *** jmerelo left
[10:40] *** lizmat left
[10:57] <Geth> ¦ marketing: b6c184cbe3 | (Zoffix Znet)++ | web/assets/sass/main.scss

[10:57] <Geth> ¦ marketing: Toss ded CSS

[10:57] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/b6c184cbe3

[11:15] *** Zoffix joined
[11:18] <Zoffix> .ask [Coke] hypothetical scenario: someone is organizing a Perl 6 event and wants to make prints of some of the marketing materials in our marketing repo. Would TPF be willing to pay the printing costs? If yes, what's the process for getting that funding?

[11:18] <yoleaux> Zoffix: I'll pass your message to [Coke].

[11:23] *** lizmat joined
[11:25] *** TEttinger left
[11:25] *** speedChicken left
[11:31] *** speedChicken joined
[11:36] *** rindolf left
[11:38] *** domidumont joined
[11:42] *** Zoffix left
[11:44] *** tt_ joined
[11:49] *** rindolf joined
[11:50] *** lizmat left
[11:57] *** lizmat joined
[11:58] *** wamba joined
[11:58] *** scovit joined
[12:00] *** noganex left
[12:02] <scovit> Hello, when one would use native arrays and when one would use Bufs?

[12:04] <moritz> native arrays when you want to do numerical calculations with the elements

[12:05] <moritz> and Bufs when doing binary IO

[12:08] *** tt_ left
[12:19] *** lizmat left
[12:20] <scovit> are there any issues in doing binary IO with native arrays?

[12:21] <moritz> I don't think it's implemented

[12:21] *** wamba left
[12:27] *** lizmat joined
[12:28] <timotimo> not quite

[12:28] *** Xliff joined
[12:28] <timotimo> Buf[int8] and my int8 @foo are almost indistinguishable to the ops that do IO

[12:29] *** lizmat left
[12:29] <timotimo> they don't look at classes, they only look at REPRs and the size of the individual elements

[12:29] <timotimo> and those are both VMArray under the hood

[12:36] *** noganex joined
[12:38] <buggable> New CPAN upload: Lingua-Stem-Es-0.0.1.tar.gz by CHSANCH https://cpan.metacpan.org/authors/id/C/CH/CHSANCH/Perl6/Lingua-Stem-Es-0.0.1.tar.gz

[12:56] *** raynold left
[13:02] *** mcmillhj joined
[13:08] *** vcv joined
[13:29] *** vcv left
[13:30] <Geth> ¦ doc: b12182b88d | (Will "Coke" Coleda)++ | 3 files

[13:30] <Geth> ¦ doc: whitespace

[13:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b12182b88d

[13:30] <Geth> ¦ doc: 94ce89fe67 | (Will "Coke" Coleda)++ | 2 files

[13:30] <Geth> ¦ doc: This isn't Perl 6 code

[13:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/94ce89fe67

[13:30] <Geth> ¦ doc: 31641d8602 | (Will "Coke" Coleda)++ | doc/Type/Blob.pod6

[13:30] <synopsebot> Link: https://doc.perl6.org/type/Blob

[13:30] <Geth> ¦ doc: Fix compile time error in code sample

[13:30] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/31641d8602

[13:32] *** vcv joined
[13:32] <[Coke]> .tell jmerelo you can test your local doc changes with the full test suite with this: https://github.com/perl6/doc/blob/master/CONTRIBUTING.md#running-tests

[13:32] <yoleaux> 11:18Z <Zoffix> [Coke]: hypothetical scenario: someone is organizing a Perl 6 event and wants to make prints of some of the marketing materials in our marketing repo. Would TPF be willing to pay the printing costs? If yes, what's the process for getting that funding?

[13:32] <yoleaux> [Coke]: I'll pass your message to jmerelo.

[13:34] <[Coke]> zoffix: I'd talk to the events committee. (I've heard it called that, but don't see that here: http://www.perlfoundation.org/who_s_who)

[13:35] <[Coke]> (maybe it's really "conferences" ?)

[13:44] *** lucasb joined
[13:46] <lucasb> Seems like some JS table sorting magic is happening in the operator precedence table at https://docs.perl6.org/language/operators

[13:46] <lucasb> they get sorted by associativity, and NOT from tightest to loosest like I would expect

[13:46] <lucasb> with JS turned off, it sorts correctly

[13:47] <lucasb> anyone can confirm what I'm seeing?

[13:48] *** curan left
[14:00] *** zakharyas left
[14:00] *** zakharyas joined
[14:05] *** zakharyas left
[14:07] *** araujo joined
[14:07] *** araujo left
[14:07] *** araujo joined
[14:09] *** AlexDaniel left
[14:09] <Geth> ¦ doc: 684d429ce5 | (Zoffix Znet)++ (committed using GitHub Web editor) | assets/js/main.js

[14:09] <Geth> ¦ doc: Don't sort operators precedence table

[14:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/684d429ce5

[14:12] *** aindilis joined
[14:21] <Geth> ¦ perl6.org: ccworld1000++ created pull request #106: Chinese translation resources

[14:21] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/pull/106

[14:26] <Geth> ¦ perl6.org: f693a6332f | CC++ (committed using GitHub Web editor) | source/resources/index.html

[14:26] <Geth> ¦ perl6.org: Chinese translation resources

[14:26] <Geth> ¦ perl6.org: 

[14:26] <Geth> ¦ perl6.org: Chinese translation resources (中文翻译资源)

[14:26] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/f693a6332f

[14:26] <Geth> ¦ perl6.org: ad5d990ad3 | (Zoffix Znet)++ (committed using GitHub Web editor) | source/resources/index.html

[14:26] <Geth> ¦ perl6.org: Merge pull request #106 from ccworld1000/patch-1

[14:26] <Geth> ¦ perl6.org: 

[14:26] <Geth> ¦ perl6.org: Chinese translation resources

[14:26] <Geth> ¦ perl6.org: review: https://github.com/perl6/perl6.org/commit/ad5d990ad3

[14:46] *** Kaiepi joined
[14:47] *** troys joined
[14:49] <[Coke]> zoffix: should that have been an && or an || ?

[14:49] <[Coke]> (line 15 of https://github.com/perl6/doc/commit/684d429ce5)

[14:50] *** Zoffix joined
[14:51] <Zoffix> [Coke]: &&: "where first column's header is 'A' and second colums's header is 'Level'; don't set sorting"

[15:01] *** Zoffix left
[15:14] *** Xliff left
[15:14] *** Xliff__ left
[15:15] *** zakharyas joined
[15:15] *** vcv left
[15:18] *** gregf_ joined
[15:19] <[Coke]> ah, misread the depth there. Thanks.

[15:20] <Geth> ¦ marketing: f20cddd2ee | (Zoffix Znet)++ | 12 files

[15:20] <Geth> ¦ marketing: Toss Rakudo/6lang "Concise" posters

[15:20] <Geth> ¦ marketing: 

[15:20] <Geth> ¦ marketing: Keep messaging consistent, until official marketing alias exists

[15:20] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/f20cddd2ee

[15:22] *** vcv joined
[15:23] *** vcv left
[15:24] <Geth> ¦ marketing: 3c33982543 | (Zoffix Znet)++ | 7 files

[15:24] <Geth> ¦ marketing: Add "Perl 6 Concise" poster

[15:24] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/3c33982543

[15:25] *** vcv joined
[15:26] <Geth> ¦ marketing: a4ea563b7f | (Zoffix Znet)++ | 32 files

[15:26] <Geth> ¦ marketing: Organize archive into material types

[15:26] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/a4ea563b7f

[15:26] *** dogbert2_ left
[15:27] <Geth> ¦ marketing: f68fe7b60e | (Zoffix Znet)++ | 70 files

[15:27] <Geth> ¦ marketing: Move SQUASHathon posters to archive

[15:27] <Geth> ¦ marketing: 

[15:27] <Geth> ¦ marketing: We don't make 'em anymore (kinda'f a PITA to make them monthly).

[15:27] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/f68fe7b60e

[15:27] *** araujo left
[15:29] *** zakharyas left
[15:42] *** khw joined
[15:48] *** simpleseeker joined
[15:49] *** domidumont left
[15:49] *** pharv joined
[15:53] <lucasb> Thanks Zoffix++ for fixing the operator table

[15:53] *** lucasb left
[16:06] *** pharv left
[16:07] *** pharv joined
[16:14] *** domidumont joined
[16:18] <Geth> ¦ marketing: c50da67681 | (Zoffix Znet)++ | 13 files

[16:18] <Geth> ¦ marketing: Add new "Regex Poster"

[16:18] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/c50da67681

[16:21] <Geth> ¦ museum-items: c204e4666d | (Zoffix Znet)++ (committed using GitHub Web editor) | 2009/Periodic-Table-of-Operators.md

[16:21] <Geth> ¦ museum-items: Create Periodic-Table-of-Operators.md

[16:21] <Geth> ¦ museum-items: review: https://github.com/perl6/museum-items/commit/c204e4666d

[16:23] *** raynold joined
[16:33] <Geth> ¦ doc: JJ assigned to coke Issue Spin off Perl6::Documentable https://github.com/perl6/doc/issues/1937

[16:33] <Geth> ¦ doc: JJ assigned to fluca1978 Issue Spin off Perl6::Documentable https://github.com/perl6/doc/issues/1937

[16:33] <Geth> ¦ doc: JJ assigned to lizmat Issue Spin off Perl6::Documentable https://github.com/perl6/doc/issues/1937

[16:33] <Geth> ¦ doc: JJ assigned to AlexDaniel Issue Spin off Perl6::Documentable https://github.com/perl6/doc/issues/1937

[16:33] <Geth> ¦ doc: JJ assigned to zoffixznet Issue Spin off Perl6::Documentable https://github.com/perl6/doc/issues/1937

[16:33] <Geth> ¦ doc: JJ assigned to dogbert17 Issue Spin off Perl6::Documentable https://github.com/perl6/doc/issues/1937

[16:34] *** scimon left
[16:34] *** dakkar left
[16:35] <Geth> ¦ doc: JJ assigned to W4anD0eR96 Issue Spin off Perl6::Documentable https://github.com/perl6/doc/issues/1937

[16:35] <Geth> ¦ doc: JJ assigned to cfa Issue Spin off Perl6::Documentable https://github.com/perl6/doc/issues/1937

[16:36] <Geth> ¦ doc: JJ assigned to Tyil Issue Spin off Perl6::Documentable https://github.com/perl6/doc/issues/1937

[16:38] *** jmerelo joined
[16:39] * jmerelo travels in a train through Portugal

[16:39] <yoleaux> 13:32Z <[Coke]> jmerelo: you can test your local doc changes with the full test suite with this: https://github.com/perl6/doc/blob/master/CONTRIBUTING.md#running-tests

[16:39] <Geth> ¦ marketing: 656c0adbbf | (Zoffix Znet)++ | 7 files

[16:39] <Geth> ¦ marketing: Use Transparent Wing Camelia for Regex Poster

[16:39] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/656c0adbbf

[16:40] <jmerelo> [Coke]: OK

[16:42] <Geth> ¦ doc: zoffixznet self-unassigned Spin off Perl6::Documentable https://github.com/perl6/doc/issues/1937

[16:42] *** pharv left
[16:43] *** pharv joined
[16:45] *** simpleseeker left
[16:46] *** aindilis left
[16:47] *** comborico1611 joined
[16:48] *** simpleseeker joined
[16:59] <Geth> ¦ marketing: 40958e85c9 | (Zoffix Znet)++ | 2 files

[16:59] <Geth> ¦ marketing: Add Soft-Black ver of Transparent Wings Camelia

[16:59] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/40958e85c9

[17:01] <Geth> ¦ marketing: 626cf826f6 | (Zoffix Znet)++ | 8 files

[17:01] <Geth> ¦ marketing: More tweaks to "Regex Poster"

[17:01] <Geth> ¦ marketing: 

[17:01] <Geth> ¦ marketing: - Use soft-black version of Camelia

[17:01] <Geth> ¦ marketing: - Use more realer regex for swear word

[17:01] <Geth> ¦ marketing: - Fix kerning

[17:01] <Geth> ¦ marketing: - Reduce colors

[17:01] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/626cf826f6

[17:03] *** wamba joined
[17:14] *** jmerelo left
[17:18] *** epony joined
[17:20] <Geth> ¦ doc: cfa self-unassigned Spin off Perl6::Documentable https://github.com/perl6/doc/issues/1937

[17:20] *** epony left
[17:20] *** rindolf left
[17:20] *** epony joined
[17:23] *** rindolf joined
[17:24] *** dha joined
[17:31] <Geth> ¦ doc: 00982d91fc | 陈梓立++ | README.zh.md

[17:31] <Geth> ¦ doc: Update README.zh.md

[17:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/00982d91fc

[17:33] *** Tison joined
[17:35] *** pilne joined
[17:35] *** pharv left
[17:37] *** espadrine joined
[17:37] *** pharv joined
[17:43] *** mcmillhj left
[17:45] *** zachk joined
[17:45] *** zachk left
[17:45] *** zachk joined
[17:47] *** brrt joined
[17:51] *** pharv_ joined
[17:53] <Geth> ¦ doc: f4321a57e0 | 陈梓立++ | README.zh.md

[17:53] <Geth> ¦ doc: Update README.zh.md

[17:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f4321a57e0

[17:55] *** pharv left
[17:55] <Geth> ¦ doc: 60292afab9 | 陈梓立++ | README.zh.md

[17:55] <Geth> ¦ doc: Update README.zh.md

[17:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/60292afab9

[17:57] *** mcmillhj joined
[17:57] *** pharv_ left
[17:59] *** pharv joined
[17:59] *** simpleseeker left
[18:01] <Geth> ¦ doc: e6f0dfd8be | 陈梓立++ | 2 files

[18:01] <Geth> ¦ doc: Merge license stuff in README

[18:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e6f0dfd8be

[18:01] *** simpleseeker joined
[18:02] *** mcmillhj left
[18:03] *** pharv left
[18:03] *** pharv joined
[18:09] <Geth> ¦ doc: 1759e05da5 | 陈梓立++ | README.zh.md

[18:09] <Geth> ¦ doc: Update README.zh.md

[18:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1759e05da5

[18:15] *** mcmillhj joined
[18:18] <[Coke]> using a slightly out of date rakudo; I have a block that I am trying to de-||ize; it's this block: https://github.com/perl6/doc/blob/coke/build/htmlify.p6#L228-L243

[18:19] <[Coke]> if I remove the array and the start, and the await, I get errors about mismatched types. if I remove the array and set the start to a scalar, and then "await $scalar", same error. if I await Promise.allof: $scalar --- that works.

[18:20] *** mcmillhj left
[18:21] *** brrt left
[18:22] *** AlexDaniel joined
[18:22] *** sauvin left
[18:24] <Geth> ¦ doc: W4anD0eR96 self-unassigned Spin off Perl6::Documentable https://github.com/perl6/doc/issues/1937

[18:25] <Geth> ¦ doc: AlexDaniel self-unassigned Spin off Perl6::Documentable https://github.com/perl6/doc/issues/1937

[18:26] <jnthn> [Coke]: Yes, because Promise.allof doesn't convey errors, it's just used for sequencing

[18:29] <[Coke]> in that case, i suspect that parts of the doc build have been failing for some time and it's been hidden behind that.

[18:29] <[Coke]> Danke.

[18:29] *** mcmillhj joined
[18:30] <jnthn> .oO( Bitte-sweet... )

[18:31] *** dha left
[18:34] <[Coke]> oh, wow. few dozen pages are not getting processed. wonder if this is responsible for any open tickets.

[18:34] *** mcmillhj left
[18:34] <jnthn> Note that if one wants to wait for a bunch of results, then `await` in Perl 6 is slurpy so you can `await $p1, $p2, @p-these`, etc.

[18:37] *** domidumont left
[18:38] <perlawhirl> bisectable6: say dir.sort(&lc)

[18:38] <bisectable6> perlawhirl, Bisecting by exit code (old=2015.12 new=ceeb3a0). Old exit code: 0

[18:38] <bisectable6> perlawhirl, bisect log: https://gist.github.com/f1dd78f91bf09798c9b9f5eb4cce8b3b

[18:38] <bisectable6> perlawhirl, (2018-02-21) https://github.com/rakudo/rakudo/commit/cdb45fa5a65f06b543db7939fc51af7b598e0bfb

[18:38] <[Coke]> this may explain this comment: https://github.com/perl6/doc/blob/master/htmlify.p6#L162-L164

[18:42] *** mcmillhj joined
[18:43] <AlexDaniel> perlawhirl: can you please leave a comment here? https://github.com/rakudo/rakudo/issues/1566#issuecomment-373856074

[18:44] *** mcmillhj left
[18:45] <Geth> ¦ doc/coke/build: 16 commits pushed by (Will "Coke" Coleda)++

[18:45] <Geth> ¦ doc/coke/build: review: https://github.com/perl6/doc/compare/c8c49b974606...57d51097e54b

[18:46] *** mcmillhj joined
[18:46] <perlawhirl> AlexDaniel: Will do... was just looking to see if there was issue mentioning this already

[18:47] <perlawhirl> FWIW, the current workaround for this case is simple: dir.sort(*.lc) works fine

[18:54] *** darutoko left
[18:58] *** eliasr left
[19:05] *** FROGGS joined
[19:06] <moritz> .fc is recommended for sorting/comparison

[19:08] <perlawhirl> thanks, moritz

[19:10] <Bowlslaw> is there any way to run perl 6 on my rpi3?

[19:10] <Bowlslaw> I've tried many times but it lacks the RAM

[19:12] *** Tison left
[19:13] <AlexDaniel> Bowlslaw: are you trying to compile it yourself?

[19:13] <AlexDaniel> just take a deb and install it

[19:13] <AlexDaniel> huggable: debs

[19:13] <huggable> AlexDaniel, CentOS, Debian, Fedora and Ubuntu Rakudo packages: https://github.com/nxadm/rakudo-pkg/releases

[19:14] <AlexDaniel> oh wait… no arm packages here

[19:14] <Bowlslaw> yes i'm trying to compile it

[19:14] <Bowlslaw> :(

[19:14] <moritz> might need a swap file

[19:14] <moritz> and compilation will be slooow with swap

[19:15] <AlexDaniel> Bowlslaw: well, is that on debian stretch?

[19:15] <AlexDaniel> apt install rakudo should give 2016.12, isn't that good enough

[19:15] <AlexDaniel> ?

[19:15] <AlexDaniel> you can add unstable repo and install 2018.03

[19:15] <AlexDaniel> that's what I've been doing for rpi

[19:16] <Bowlslaw> AlexDaniel well isn't 2 years a big difference for perl 6 ?

[19:16] <Bowlslaw> how did you add that repo?

[19:19] <AlexDaniel> well the easiest way is to just edit /etc/apt/sources.list and add some extra lines with “sid” there

[19:19] <AlexDaniel> same ones that you have with “stretch”

[19:20] <AlexDaniel> be aware that mixing unstable & stable packages is potentially bad, but it should work just fine if you're only going to install rakudo like this

[19:22] <AlexDaniel> El_Che: by the way, what about arm packages?

[19:22] <Bowlslaw> AlexDaniel: thanks

[19:23] <AlexDaniel> Bowlslaw: did that work? After adding a repo it should be as simple as apt update && apt install rakudo

[19:23] <Bowlslaw> I don't have access right now, I have to try later

[19:23] *** zakharyas joined
[19:33] *** pharv left
[19:35] *** pharv joined
[19:35] *** Zoffix joined
[19:39] *** simpleseeker left
[19:40] <Zoffix> FWIW, looking at the list of blockers make me think we should skip 2018.04 release and make any new changes for the next 4 weeks in a "post-release-2018.05" branch. With master left for blocker resolution and testing. 

[19:41] <AlexDaniel> this is a tough month for sure

[19:41] <Zoffix> The multies blocker alone is quite a bit of work to fix. And the rare hang + memory leak + random stresstest floppers. As much as trust jnthn's superpowers, kinda hard to see all those being fully resolved in 3-10 days.

[19:41] <AlexDaniel> alright, let's look…

[19:41] <AlexDaniel> releasable6: status

[19:41] <releasable6> AlexDaniel, Next release in ≈3 days and ≈23 hours. 8 blockers. 224 out of 239 commits logged

[19:41] <releasable6> AlexDaniel, Details: https://gist.github.com/c9ab4986ca2723f1787cab5ef8f7265b

[19:42] <AlexDaniel> big endian issue seems to be resolved, just awaiting confirmation

[19:42] <Zoffix> The R#1736 can be ignored. Those are easy and just PRing fixes to modules.

[19:42] <synopsebot> R#1736 [open]: https://github.com/rakudo/rakudo/issues/1736 [LHF][⚠ blocker ⚠] Toaster results show several modules' tests rely on buggy Num stringification

[19:42] <Zoffix> R#1566 is also an easy workaround, if any new routines are even affected

[19:42] <synopsebot> R#1566 [open]: https://github.com/rakudo/rakudo/issues/1566 [regression][⚠ blocker ⚠] multi built-ins are not assignable to Callable

[19:43] <AlexDaniel> new stress test floppers are actually not very new, if I got everything right

[19:43] <AlexDaniel> or at least some of them

[19:44] <AlexDaniel> so optimistically we are down to 4

[19:44] <Zoffix> So it's a rare hang + random stresstest floppers + SEGV + memory leak + reworking all the routines that care about .count to examine multies

[19:44] <Zoffix> stresstest floppers *are* new. I almost always run stresstests instead of spectest and these just recently started popping up. 

[19:45] <AlexDaniel> ok

[19:45] <AlexDaniel> I don't know what to do with the memory leak, it's not very significant

[19:45] <Zoffix> And the "rare hang + random stresstest floppers + SEGV + memory leak" ones have a bus factor issue

[19:45] <AlexDaniel> but it is noticeable in whateverable

[19:45] <AlexDaniel> right

[19:45] <Zoffix> And we gonna base Star off this release, so any LTAness will linger around for 3months

[19:46] <xq> why is it a problem to test numbers with is() ?

[19:46] <Zoffix> xq: because that routine stringifies everything except type objects.

[19:47] <Zoffix> xq: it's a really bad testing routine (for historical reasons, really)

[19:47] <xq> why is it a problem to stringify numbers?

[19:47] <timotimo> it can be problematic if you were relying on it rounding for you

[19:47] <timotimo> m: say 10 - 1e-15

[19:47] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «9.999999999999998␤»

[19:47] <timotimo> m: say 10 - 1e-14

[19:47] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «9.99999999999999␤»

[19:47] <timotimo> m: say 10 - 1e-16

[19:47] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «10␤»

[19:47] <Zoffix> m: use Test; is .1e+.2e0, .3e0

[19:48] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3use Test; is .1e7⏏5+.2e0, .3e0␤»

[19:48] <timotimo> wow, i accidentally hit exactly the right spot

[19:48] <Zoffix> m: use Test; is .1e0+.2e0, .3e0

[19:48] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «not ok 1 - ␤# Failed test at <tmp> line 1␤# expected: '0.3'␤#      got: '0.30000000000000004'␤»

[19:48] <timotimo> Zoffix: omg, the regex poster %)

[19:48] <xq> what about rats and ints ?

[19:48] <xq> I understand that it's bad for floating point and rounding

[19:49] <timotimo> you might also want to assert that the type is correct

[19:49] <Zoffix> xq: well, the problem most of them stringify to the same thing: Int 1, Num 1e0, Rat 1.0; they'll all stringify the same. But you could have a routine that takes only one of them

[19:49] <Zoffix> xq: or in other words, what exactly are you testing?

[19:50] <AlexDaniel> Zoffix: IMO let's not cancel 2018.04 release just yet, we can give it a day or two from now to see which direction it's going… if even more blockers pop up then yeah, but sometimes magic happens. Also we can just delay it by a week or more if needed.

[19:50] * Zoffix relocates

[19:50] <Zoffix> AlexDaniel: sounds good

[19:50] <xq> the whole thing just caught my eye as confusing; in perl5 I test integer scalars vs each other with is() without thinking twice if it was '123' or 123

[19:51] <xq> and I was wondering if it's different/problematic in perl6

[19:54] <xq> very simple real example - I retrieve a row from database by a search on unique key, and test if the id column (bigint) equals to a known value

[19:54] <japhb> xq: perl5 has a fuzzier line between strings and numbers than Perl 6 does.  For example, the special case of the string "0" being false because it can be numerified to 0 no longer exists.  Also, Perl 6 numbers don't cache their own string representation unless they are explictly allomorphs.

[19:55] <Zoffix> m: use Test; is 1000000000000, 1e12

[19:55] <xq> would is() still work in perl6 for my example?

[19:55] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «ok 1 - ␤»

[19:55] <Zoffix> m: use Test; is 1000000000000000, 1e15

[19:55] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «not ok 1 - ␤# Failed test at <tmp> line 1␤# expected: '1e+15'␤#      got: '1000000000000000'␤»

[19:56] <Zoffix> m: use Test; cmp-ok 1000000000000000, '==', 1e15

[19:56] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «ok 1 - ␤»

[19:56] <Zoffix> xq: ^ 

[19:56] <Zoffix> xq: Perl 5 doesn't have types so it matters less

[19:56] <xq> I would never use scientific notation :P

[19:57] <xq> powers of 10 if anything

[19:57] <japhb> xq: It always pains me when we phrase it like that.  It *does* have types.  Just not anything like Perl 6 does.

[19:57] <xq> m: use Test; is 1000000000000000, 10**15;

[19:57] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «ok 1 - ␤»

[19:58] <xq> m: use Test; is 1000000000000000, '1000000000000000';

[19:58] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «ok 1 - ␤»

[19:58] <xq> good enough for me

[19:58] <japhb> m: (10**15).WHAT.say

[19:58] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «(Int)␤»

[19:59] <japhb> That's because we detect Int exponentiated to Int, and make sure it stays Int.

[20:01] <Zoffix> m: use Test; is (((((42,),),),),), 42

[20:01] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «ok 1 - ␤»

[20:02] <Zoffix> xq: how abou this? ^ You made a bug that caused your routine to return a quintuple-nested list and your test didn't even catch it

[20:03] <xq> lol

[20:03] <Zoffix> m: sub (Int) {}(1.0)

[20:03] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «Type check failed in binding to parameter '<anon>'; expected Int but got Rat (1.0)␤  in sub  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[20:03] <xq> are lists not flat in perl6 ?

[20:04] <Zoffix> xq: orhow about this ^ your routine was meant to return an Int but it regressed to return a Rat, breaking user's code and your test didn't catch it

[20:04] <Zoffix> no, there's no auyo-flattening

[20:04] <xq> wow

[20:04] <xq> that's a pretty major difference

[20:04] <Zoffix> is-deeply is the right test routine most of the time

[20:05] *** irco left
[20:05] <Zoffix> xq: it's a completely different language

[20:05] <xq> yeah...

[20:05] <Zoffix> m: '0' and print 'Perl 6' or print 'Perl 5'

[20:05] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «Perl 6»

[20:06] <Zoffix> perlbot: eval: '0' and print 'Perl 6' or print 'Perl 5'

[20:06] <perlbot> Zoffix: Perl 6

[20:06] <Zoffix> eval it with p5  stupid bot

[20:06] <xq> uhh

[20:06] <timotimo> perlbot: eval: print $[

[20:06] <perlbot> timotimo: ===SORRY!=== Error while compiling /tmp/kLpoM_EQ8p Unable to parse expression in array composer; couldn't find final ']' (corresponding starter was at line 1) at /tmp/kLpoM_EQ8p:1 ------> print $[⏏<EOL> [Exited 1]

[20:06] <xq> those both were perl6 right

[20:06] <timotimo> right, that's 6

[20:07] *** reportable6 left
[20:07] *** unicodable6 left
[20:07] *** undersightable6 left
[20:07] *** evalable6 left
[20:07] *** committable6 left
[20:07] *** notable6 left
[20:07] *** quotable6 left
[20:07] *** bloatable6 left
[20:07] *** nativecallable6 left
[20:07] *** coverable6 left
[20:07] *** bisectable6 left
[20:07] *** statisfiable6 left
[20:07] *** greppable6 left
[20:07] *** benchable6 left
[20:07] *** releasable6 left
[20:07] *** squashable6 left
[20:07] *** shareable6 left
[20:09] <Geth> ¦ doc: 2fd7d90d8a | (JJ Merelo)++ | doc/Language/operators.pod6

[20:09] <Geth> ¦ doc: Tries to fix HTMLify errors

[20:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2fd7d90d8a

[20:09] <Geth> ¦ doc: 05ca7b3e28 | (JJ Merelo)++ | 17 files

[20:09] <Geth> ¦ doc: Merge branch 'master' of github.com:perl6/doc

[20:09] <synopsebot> Link: https://doc.perl6.org/language/operators

[20:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/05ca7b3e28

[20:10] <xq> I have installed rakudo star by building from a source tarball. Is there a way to somehow install modules into this perl6 ?

[20:10] <xq> I did not do make install

[20:10] <xq> just using rlwrap ./perl6 inside ./rakudo/

[20:11] <timotimo> yes, you can "git clone" or unzip/untar module sources and add their directories with -I

[20:11] <xq> aha, I see

[20:12] <timotimo> some modules do require a build step before their installation, and i'm not sure if that's easily doable without doing an actual install

[20:12] <xq> I just realized that I can actually do a make install

[20:12] *** jmerelo joined
[20:12] <xq> so doing that, it's installing in ./install

[20:13] <timotimo> yup, that's the default --prefix value

[20:13] <xq> very convenient

[20:13] <Zoffix> xq: the one way I know is using step 12 from this guide (without last line) to setup path and install zef and then you can just use zef to install modules: https://github.com/rakudo/rakudo/blob/master/docs/release_guide.pod

[20:13] <timotimo> i have my perl6 in ~/perl6/install - and a second no-experiments perl6 in ~/build/stableperl6/install (for when i put massive debugspam or potentially crashy stuff in my regular perl6 and need to run some perl6 commands with a working perl6)

[20:14] <xq> is there something like perlbrew ?

[20:14] <timotimo> for what purpose do you want it?

[20:14] <timotimo> we have rakudobrew, but its purpose is to let you switch between many rakudo versions with a single command, but it makes everything else more complicated

[20:14] <comborico1611> I cannot find perl6-mode on Emacs through Melpa archive.

[20:15] <Zoffix> comborico1611: check in perl/perl6-mode on github

[20:15] <Zoffix> xq: there's rakuduo and lonestar

[20:15] <xq> I think the most value of perlbrew for me is that it automatically setups local::lib

[20:15] <timotimo> you mean rakudup?

[20:15] <Zoffix> yeah

[20:16] <comborico1611> I see why.  I'm on Emacs25.

[20:16] <comborico1611> Zoffix: Thanks though!

[20:16] <Zoffix> for that use rakudup ir lonestar

[20:16] <Zoffix> huggable: sauce

[20:16] <huggable> Zoffix, Install latest version of Rakudo from source: https://github.com/zoffixznet/r#table-of-contents

[20:16] <Zoffix> xq: ^ I just use that bash alias

[20:16] *** pharv left
[20:17] <Zoffix> xq: rakudup: https://rakudup.github.io/

[20:17] <Zoffix> xq: lonestar https://github.com/Tyil/lonestar

[20:18] <xq> thanks Zoffix 

[20:18] <xq> I understand that updating rakudo or installing another one is not a problem

[20:19] *** lizmat joined
[20:19] <xq> the module management however still is not exactly clear. As I understand, 'zef' is the tool to install modules (like cpanm?) but does it install modules 'globally' or per-rakudo-installation ?

[20:20] <xq> also, does perl6 support installing modules per-project (carton-style) ?

[20:21] *** Zoffix left
[20:21] <timotimo> rakudo can load modules from anywhere that you pass a -I for, i believe zef has an install "into" functionality

[20:21] <Geth> ¦ doc: 5dc5869e95 | (JJ Merelo)++ | Makefile

[20:21] <Geth> ¦ doc: Eliminates debug code

[20:21] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5dc5869e95

[20:21] <timotimo> i have not tried any of this yet, and i don't think there's a nice tool for this workflow yet

[20:21] <timotimo> but having a tool like that would sure be nice :)

[20:21] <xq> I see

[20:25] <xq> well, this is weird

[20:26] <xq> m: use Test; is(1, 1);

[20:26] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «ok 1 - ␤»

[20:26] <xq> m: use Test; is (1, 1);

[20:26] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «Cannot resolve caller is(List); none of these signatures match:␤    (Mu $got, Mu:U $expected, $desc = "")␤    (Mu $got, Mu:D $expected, $desc = "")␤  in block <unit> at <tmp> line 1␤␤»

[20:26] <xq> ' ' between is and ( matters? Perl6 has significant whitespace?

[20:29] <AlexDaniel> yes, it does matter in that case. with “is (1, 1)” you're passing a list as an argument

[20:29] <xq> ... seriously?

[20:29] <AlexDaniel> what's bad about that?

[20:30] <timotimo> if you don't like it, you can use Slang::Tuxic

[20:30] <xq> this is going to take some time getting used to

[20:30] <xq> is all I can say

[20:31] <timotimo> you can leave out the parens, too :)

[20:31] <jmerelo> 6lang.org is returning a 503: https://travis-ci.org/perl6/doc/jobs/367836916

[20:31] <lizmat> xq: use Slang::Tuxic

[20:31] <AlexDaniel> jmerelo: I know, I know

[20:31] <jnthn> Note that this design choice means that `say ($a + $b) * $c` does what it looks like :)

[20:31] <lizmat> xq: it will allow you to "is (1,1)"

[20:32] <xq> no it's fine

[20:32] *** pharv joined
[20:32] <xq> it's a new language after all

[20:33] <xq> also being able to omit () is probably going to make it irrelevant anyway

[20:33] <xq> this is a pretty big thing

[20:34] <xq> does perl6 have something like deparse?

[20:35] <timotimo> hm, deparse gives you back source code, right?

[20:35] <xq> yes

[20:35] <timotimo> we don't have that yet

[20:35] <xq> ok

[20:35] <timotimo> what we do have is --target=ast (and =optimize)

[20:36] <lizmat> timotimo: that's not what deparse is

[20:36] <timotimo> you can gleam what the code you wrote does by using that, though

[20:36] <lizmat> *that* is true  :-)

[20:36] * lizmat is tired and not quite as coherent as she thought she would be

[20:36] <lizmat> night!

[20:38] <timotimo> night liz!

[20:38] <timotimo> https://github.com/zoffixznet/q - this is useful if you're working with --target=ast or optimize

[20:38] *** committable6 joined
[20:38] *** evalable6 joined
[20:38] *** quotable6 joined
[20:38] *** nativecallable6 joined
[20:38] *** notable6 joined
[20:38] *** bloatable6 joined
[20:38] *** coverable6 joined
[20:38] *** unicodable6 joined
[20:38] *** greppable6 joined
[20:38] *** ChanServ sets mode: +v notable6

[20:38] *** ChanServ sets mode: +v bloatable6

[20:38] *** ChanServ sets mode: +v coverable6

[20:38] *** bisectable6 joined
[20:38] *** reportable6 joined
[20:38] *** benchable6 joined
[20:38] *** shareable6 joined
[20:38] *** statisfiable6 joined
[20:38] *** squashable6 joined
[20:39] *** ChanServ sets mode: +v squashable6

[20:39] *** undersightable6 joined
[20:39] *** ChanServ sets mode: +v undersightable6

[20:39] *** releasable6 joined
[20:39] *** ChanServ sets mode: +v releasable6

[20:39] <AlexDaniel> jmerelo: fixed

[20:39] <xq> the --target thing looks slightly like too much for now

[20:40] <[Coke]> (p6doc) processing issues with head C<...> and X<C<...>> that were hidden by the previous code. 

[20:40] <xq> I'll stick to figure out the basics - make a function, make a module, make a CLI script using this module, make a test, make a webapp

[20:43] <timotimo> sure :)

[20:43] <timotimo> can always ask in here

[20:43] *** FROGGS left
[20:44] <jmerelo> [Coke]++

[20:46] <Geth> ¦ doc: coke self-assigned Parallel processing is broken, even with --parallel=1 https://github.com/perl6/doc/issues/1938

[20:46] *** Kaiepi left
[20:47] *** Kaiepi joined
[20:48] <[Coke]> I'm working on that in the coke/build branch, if I can extract my fixes back to master, will do so.

[20:51] <comborico1611> I don't care for the error message you get when you call the same function you are defining: 

[20:51] <comborico1611> Calling seconds() will never work with declared signature ($raw)

[20:51] <comborico1611> at seconds.p6:1

[20:53] <comborico1611> But I'm not sure what is possible. 

[20:53] <[Coke]> if 'seconds' takes an arg and you try to call it without one, it will fail.

[20:54] <[Coke]> m: sub seconds($raw) { 'hi' } ; seconds();

[20:54] <camelia> rakudo-moar ceeb3a00d: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Calling seconds() will never work with declared signature ($raw)␤at <tmp>:1␤------> 3sub seconds($raw) { 'hi' } ; 7⏏5seconds();␤»

[20:54] <[Coke]> doesn't matter if the call is coming from inside the sub you're defining or not

[20:54] <comborico1611> I see.  Thank you!

[20:54] <[Coke]> m: sub seconds($raw) { 'hi' } ; seconds(3);

[20:54] <camelia> rakudo-moar ceeb3a00d: ( no output )

[20:54] <[Coke]> you can define an optional arg with ?

[20:54] <[Coke]> m: sub seconds($raw?) { 'hi' } ; seconds();

[20:54] <camelia> rakudo-moar ceeb3a00d: ( no output )

[20:55] <comborico1611> I didn't know that!  I just got confused.  I've been playing around with Lisp lately.

[20:55] <comborico1611> What is the name of that ? operator?

[20:56] *** mcmillhj left
[20:56] <comborico1611> I would liek to read more at docs.

[20:56] *** _28_ria joined
[20:56] <geekosaur> it's not an operator, it's part of a signature. indicates an optional parameter

[20:57] <geekosaur> so lokk at docs for signatures

[20:57] <geekosaur> *look

[20:57] <comborico1611> I see.  Thank you!

[20:57] <comborico1611> Found it: Constraining Optional Arguments

[20:58] <[Coke]> \o/

[20:59] <comborico1611> *high-five

[21:00] *** _28_ria left
[21:02] *** cog_ left
[21:02] *** cog_ joined
[21:04] *** aindilis joined
[21:04] *** vcv left
[21:05] *** pmurias_ joined
[21:05] <pmurias_> http://www.graalvm.org/ - graalvm 1.0 has been released

[21:08] *** pmurias joined
[21:08] *** simpleseeker joined
[21:09] *** Zoffix joined
[21:10] *** pharv left
[21:11] * [Coke] wonders how much we could speed up repeated doc builds if we cached the highlighting work.

[21:11] *** mcmillhj joined
[21:14] *** zakharyas left
[21:16] *** mcmillhj left
[21:17] <jmerelo> [Coke]: I don't think that takes the most time...

[21:18] <[Coke]> it's a large part of the "writing type document" time, IIRC.

[21:18] <jmerelo> [Coke]: Hum. Maybe a couple of minutes

[21:19] <jmerelo> pmurias: does it do Perl 6?

[21:20] <jmerelo> [Coke]: Travis caches module directories... https://docs.travis-ci.com/user/caching/

[21:21] <jmerelo> [Coke]: and I haven't managed to make Shippable cache work properly.

[21:22] <jmerelo> [Coke]: we could create a data container with Docker... and cache it there. 

[21:22] <comborico1611> geekosaur: Actually, I didn't find ? in the signature article of Docs.

[21:25] *** mcmillhj joined
[21:25] <Geth> ¦ doc: d1c19d5a43 | (JJ Merelo)++ | 2 files

[21:25] <Geth> ¦ doc: Adds single arg rule closes #600

[21:25] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d1c19d5a43

[21:25] * Zoffix reads reddit comments and notices a broken telephone effect with Zoffix's profession.

[21:26] <Zoffix> I don't work in branding or advertising :) I work as multi-media designer in a marketing department of a company that sells stuff :)

[21:27] <jmerelo> I'm going to call it a day

[21:28] * jmerelo says Bôa Noite da Coimbra

[21:28] <Zoffix> \o

[21:28] *** jmerelo left
[21:28] *** TEttinger joined
[21:30] *** mcmillhj left
[21:31] *** cozachk joined
[21:33] *** rindolf left
[21:34] *** zachk left
[21:41] <pilne> i don't work in anything programmming related, i'm a dabbler, that can't keep away from perl6 for long :D

[21:41] <pilne> in the mmorpg analogy i'm the "cheerful but unhelpful npc"

[21:42] *** kurahaupo_ left
[21:43] *** kurahaupo joined
[21:43] *** mcmillhj joined
[21:44] *** Praise left
[21:44] <Zoffix> :)

[21:44] *** ufobat left
[21:47] <simcop2387> What does it take to port rakudo/nqp/etc to a new VM? Just curious after reading about GraalVM

[21:48] *** mcmillhj left
[21:49] <Zoffix> I think you'd largely just port the nqp ops

[21:49] <Zoffix> Like these three dirs are compilers for specific VMs: https://github.com/perl6/nqp/tree/master/src/vm

[21:49] <Zoffix> Also, some here: https://github.com/rakudo/rakudo/tree/master/src/vm

[21:50] <tadzik> https://blogs.oracle.com/developers/announcing-graalvm look, ma, Parrot in a new hat!

[21:50] <simcop2387> basically, :)

[21:51] <tadzik> "Our vision was to create a single VM that would provide high performance for all programming languages, therefore facilitating communication between programs" :D

[21:51] <Zoffix> comborico1611: it's here: https://docs.perl6.org/type/Signature#Optional_and_Mandatory_Parameters

[21:51] <simcop2387> it looks like they've actually got it working, though I don't know how well for a lot of cases

[21:51] <tadzik> if I had a dollar every time someone said that I could probably get a beer already

[21:51] <simcop2387> https://news.ycombinator.com/item?id=16859559 # HN discussion about Graal

[21:55] *** pharv joined
[21:55] *** mcmillhj joined
[22:00] *** mcmillhj left
[22:07] *** AlexDaniel left
[22:09] *** lichtkind left
[22:12] *** Praise joined
[22:12] *** Praise left
[22:12] *** Praise joined
[22:14] *** simpleseeker_ joined
[22:14] *** simpleseeker left
[22:14] *** simpleseeker_ is now known as simpleseeker

[22:14] *** mcmillhj joined
[22:19] *** mcmillhj left
[22:22] <comborico1611> Zoffix: Thanks!

[22:30] *** mcmillhj joined
[22:34] *** mcmillhj left
[22:40] *** pmurias_ left
[22:40] *** pmurias left
[22:42] *** pharv left
[22:42] <Geth> ¦ museum-items: 776395ea47 | raiph++ (committed using GitHub Web editor) | 2000/State Of The Onion 2000 introduces Perl 6.md

[22:42] <Geth> ¦ museum-items: Create State Of The Onion 2000 introduces Perl 6.md

[22:42] <Geth> ¦ museum-items: review: https://github.com/perl6/museum-items/commit/776395ea47

[22:43] *** pharv joined
[22:48] *** mcmillhj joined
[22:51] <Herby_> o/

[22:53] *** mcmillhj left
[22:58] <Herby_> \o

[22:59] <timotimo> ö

[22:59] <Herby_> timotimo: how goes it?

[23:00] <timotimo> eh, rakudo release is looking a little rough

[23:03] <timotimo> how's you?

[23:04] <Herby_> chugging along on my parsing project

[23:04] *** mcmillhj joined
[23:04] <timotimo> parsing projects is a good pastime

[23:05] <Herby_> yeah. it's helping me get a somewhat better grasp on the basics of grammars

[23:07] <Herby_> timotimo: do you have a blog or some sort for the work you're doing with rakudo?

[23:07] <Herby_> or am I imagining that

[23:07] <timotimo> i do!

[23:07] <timotimo> it's https://wakelift.de/

[23:07] <timotimo> it's only got two posts so far, but i should really write another very soon

[23:08] *** mcmillhj left
[23:09] <Herby_> i look forward to a new one

[23:10] <timotimo> glad to hear it :)

[23:15] *** khw left
[23:19] *** mcmillhj joined
[23:24] *** mcmillhj left
[23:29] *** pharv left
[23:31] *** mcmillhj joined
[23:32] *** pharv joined
[23:35] *** mcmillhj left
[23:37] *** pharv left
[23:38] <Geth> ¦ doc: 26fd96dcbb | (Christopher Bottoms)++ (committed using GitHub Web editor) | doc/Language/list.pod6

[23:38] <Geth> ¦ doc: Code format for (minor edit)

[23:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/26fd96dcbb

[23:38] <synopsebot> Link: https://doc.perl6.org/language/list

[23:42] *** eater left
[23:43] *** pharv joined
[23:44] *** eater joined
[23:45] *** pharv left
[23:45] *** pharv joined
[23:47] *** wamba left
[23:50] *** mcmillhj joined
[23:51] *** pharv left
[23:51] *** pharv joined
[23:51] *** markong left
[23:54] *** pharv left
[23:56] *** mcmillhj left
