[00:09] <Xliff> Can objects have state attributes?

[00:09] <timotimo> you mean attributes that are shared between all instances of the class?

[00:09] <Xliff> Yes

[00:09] <timotimo> i think putting a "my" scoped variable in there does that for you

[00:10] <timotimo> plus probably an accessor method you'd write yourself

[00:10] <Xliff> OK, thanks.

[00:10] <timotimo> method sharedThing is rw { $shared-var }

[00:10] <geekosaur> irc my is private to the instance, our is shared between instances

[00:10] <geekosaur> iirc

[00:10] <timotimo> i'd say it more like "my is private to the scope", and i don't think classes are closures, so you get one shared by every instance of the class

[00:11] <timotimo> more specifically, all methods (and other things with curlies) in the classes curly-braces-block should share the same closure with the variable in it

[00:11] <timotimo> let me quickly verify

[00:13] <timotimo> m: sub test-it { sub gimme-class($val) { class TestClass { my $shared-val = 99; method set($oval) { $shared-val = $oval }; method get { $shared-val } } }; my $i1 = gimme-class(99); say $i1.get; my $i2 = gimme-class(1000); say $i1.get; say $i2.get; }; test-it; test-it;

[00:13] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´99‚ê§99‚ê§99‚ê§99‚ê§99‚ê§99‚ê§¬ª

[00:13] *** w_richard_w joined
[00:13] <timotimo> oh, i don't even use $val

[00:13] <timotimo> m: sub test-it { sub gimme-class($val) { class TestClass { my $shared-val = 99; method set($oval) { $shared-val = $oval }; method get { $shared-val } } }; my $i1 = gimme-class(99); say $i1.get; my $i2 = gimme-class(1000); say $i1.get; say $i2.get; $i1.set("changed on i1"); say $i1.get; say $i2.get; }; test-it; say "next test"; test-it;

[00:13] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´99‚ê§99‚ê§99‚ê§changed on i1‚ê§changed on i1‚ê§next test‚ê§99‚ê§99‚ê§99‚ê§changed on i1‚ê§changed on i1‚ê§¬ª

[00:14] *** p6bannerbot sets mode: +v w_richard_w

[00:14] <timotimo> looks like i was wrong, and classes actually are closures?

[00:14] <timotimo> so you'll have to be careful not to get the class closure-cloned. just having it at the outermost level should be enough for that

[00:15] <Xliff> Noted.

[00:15] <Xliff> timotimo++

[00:17] <timotimo> not 100% sure how modules will interact with that. i don't think use-ing a module a second time would give you a different closure

[00:17] <timotimo> but it'd surely be prudent to check it out

[00:29] <Xliff> Will do.

[00:48] *** leont left
[01:04] *** molaf left
[01:10] *** Actualeyes joined
[01:11] *** p6bannerbot sets mode: +v Actualeyes

[01:15] *** fake_space_whale joined
[01:16] *** p6bannerbot sets mode: +v fake_space_whale

[01:19] <Xliff> m: 1.does(Int).sayu

[01:19] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´No such method 'sayu' for invocant of type 'Bool'. Did you mean 'say'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:19] <Xliff> m: 1.does(Int).say

[01:19] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´True‚ê§¬ª

[01:21] *** rindolf left
[01:23] <Xliff> m: package A { sub a {}; }; class B { method b {}; }; say A ~~ B

[01:23] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´False‚ê§¬ª

[01:23] <Xliff> m: package A { sub a {}; }; class B { method b {}; }; say A.^name

[01:23] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´A‚ê§¬ª

[01:23] <Xliff> m: package A { sub a {}; }; class B { method b {}; }; say A.WHAT

[01:23] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´(A)‚ê§¬ª

[01:23] <Xliff> m: package A { sub a {}; }; class B { method b {}; }; say A ~~ Class

[01:23] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    Class used at line 1‚ê§‚ê§¬ª

[01:23] <Xliff> m: package A { sub a {}; }; class B { method b {}; }; say A ~~ class

[01:23] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Whitespace required after keyword 'class'‚ê§at <tmp>:1‚ê§------> 3class B { method b {}; }; say A ~~ class7‚èè5<EOL>‚ê§¬ª

[01:24] <tbrowder___> .ask [Coke] are the dates for TPC::NA 2019 decided yet?

[01:24] <yoleaux> tbrowder___: I'll pass your message to [Coke].

[01:30] *** w_richard_w left
[01:30] <Xliff> m: package A { sub a {}; }; class B { method b {}; }; say A.HOW

[01:30] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´Perl6::Metamodel::PackageHOW.new‚ê§¬ª

[01:30] <Xliff> m: package A { sub a {}; }; class B { method b {}; }; say A.HOW; say B.HOW

[01:31] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´Perl6::Metamodel::PackageHOW.new‚ê§Perl6::Metamodel::ClassHOW.new‚ê§¬ª

[01:31] <Xliff> m: package A { sub a {}; }; class B { method b {}; }; say A.HOW ~~ PackageHOW

[01:31] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    PackageHOW used at line 1‚ê§‚ê§¬ª

[01:31] <Xliff> m: package A { sub a {}; }; class B { method b {}; }; say A.HOW ~~ Perl6::Metamodel::PackageHOW

[01:31] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´Could not find symbol '&PackageHOW'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:31] <Xliff> m: package A { sub a {}; }; class B { method b {}; }; say A.HOW ~~ /'PackageHOW'/

[01:31] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´ÔΩ¢PackageHOWÔΩ£‚ê§¬ª

[01:32] <timotimo> m: use Perl6::Metamodel:from<NQP>; say Int.HOW ~~ Perl6::Metamodel::ClassHOW

[01:32] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´True‚ê§¬ª

[01:41] <Xliff> timotimo++ # Thanks, again.

[01:45] <timotimo> merely passing on what took me $amount-of-time to figure out the first time around :)

[01:47] <timotimo> i think i just came up with a most exquisite footgun for y'all to recklessly play with

[01:48] *** Bucciarati left
[01:48] *** avar left
[01:49] <timotimo> just need to find a good example of sillyness to use it with

[01:50] <timotimo> m: BEGIN $*W does role { method compile_time_evaluate($/, $ast, :$mark-wanted) { die "no CTE allowed" } }; constant hello = 99 + 5;

[01:50] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§An exception occurred while evaluating a BEGIN‚ê§at <tmp>:1‚ê§Exception details:‚ê§  No such method 'BUILD_LEAST_DERIVED' for invocant of type 'Perl6::World+{<anon|1>}'‚ê§    in code  at <tmp> line 1‚ê§‚ê§¬ª

[01:51] <timotimo> whoops, hah

[01:51] *** avar joined
[01:51] *** Bucciarati joined
[01:51] *** avar left
[01:51] *** avar joined
[01:51] *** p6bannerbot sets mode: +v avar

[01:52] <timotimo> well, that's not so easy :D

[01:52] *** p6bannerbot sets mode: +v avar

[01:52] *** p6bannerbot sets mode: +v Bucciarati

[01:52] <timotimo> m: BEGIN $*W does role { method compile_time_evaluate($/, $ast, :$mark-wanted) { die "no CTE allowed" }; method BUILD_LEAST_DERIVED(|c) {} }; constant hello = 99 + 5;

[01:52] <camelia> rakudo-moar 266af373d: ( no output )

[01:52] <timotimo> hmm

[01:53] <timotimo> m: BEGIN $*W does role { method compile_in_context($past, $code-type) { die "no CTE allowed" }; method BUILD_LEAST_DERIVED(|c) {} }; constant hello = 99 + 5; BEGIN say "hi"

[01:53] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§An exception occurred while evaluating a constant‚ê§at <tmp>:1‚ê§Exception details:‚ê§  Type check failed in binding to parameter '$past'; expected Any but got QAST::Block (?)‚ê§    in method compile_in‚Ä¶¬ª

[01:53] <timotimo> m: BEGIN $*W does role { method compile_in_context(Mu \past, Mu \code-type) { die "no CTE allowed" }; method BUILD_LEAST_DERIVED(|c) {} }; constant hello = 99 + 5; BEGIN say "hi"

[01:53] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§An exception occurred while evaluating a constant‚ê§at <tmp>:1‚ê§Exception details:‚ê§  no CTE allowed‚ê§    in method compile_in_context at <tmp> line 1‚ê§‚ê§¬ª

[01:53] <timotimo> m: BEGIN $*W does role { method compile_in_context(Mu \past, Mu \code-type) { exit note "no CTE allowed" }; method BUILD_LEAST_DERIVED(|c) {} }; constant hello = 99 + 5; BEGIN say "hi"

[01:53] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´no CTE allowed‚ê§¬ª

[01:54] <timotimo> gnite!

[01:58] *** ryn1x joined
[01:58] *** p6bannerbot sets mode: +v ryn1x

[02:07] *** lgtaube left
[02:07] *** Zoffix joined
[02:07] *** p6bannerbot sets mode: +v Zoffix

[02:07] <Zoffix> m: say Int.HOW ~~ Metamodel::ClassHOW

[02:07] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´True‚ê§¬ª

[02:11] *** Zoffix left
[02:12] *** lgtaube joined
[02:13] *** p6bannerbot sets mode: +v lgtaube

[02:35] *** ryn1x left
[02:35] *** ryn1x joined
[02:36] *** p6bannerbot sets mode: +v ryn1x

[02:41] *** ryn1x left
[02:41] *** ryn1x joined
[02:42] *** p6bannerbot sets mode: +v ryn1x

[03:03] *** Bucciarati left
[03:06] *** Bucciarati joined
[03:06] *** p6bannerbot sets mode: +v Bucciarati

[03:11] *** holyghost joined
[03:12] *** p6bannerbot sets mode: +v holyghost

[03:13] <holyghost> hello, I'm going to try to extend Game::Markov

[03:13] <holyghost> I need to read up first

[03:15] <holyghost> This week I mean

[03:21] *** kst joined
[03:21] *** p6bannerbot sets mode: +v kst

[03:22] <buggable> New CPAN upload: App-Tasks-0.0.10.tar.gz by JMASLAK http://modules.perl6.org/dist/App::Tasks:cpan:JMASLAK

[03:32] *** ufobat___ joined
[03:33] *** p6bannerbot sets mode: +v ufobat___

[03:36] *** ufobat_ left
[04:05] *** lookatme_q left
[04:06] *** lookatme_q joined
[04:06] *** p6bannerbot sets mode: +v lookatme_q

[04:11] *** fake_space_whale left
[04:22] <buggable> New CPAN upload: Mathx-Stat-0.1.6.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[04:26] *** fake_space_whale joined
[04:26] *** p6bannerbot sets mode: +v fake_space_whale

[04:28] <holyghost> eco: Game::Markov

[04:28] <buggable> holyghost, Game::Markov 'Markov Strategy kit for games': http://modules.perl6.org/dist/Game::Markov:cpan:HOLYGHOST

[04:32] <buggable> New CPAN upload: Game-Markov-0.1.7.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Game::Markov:cpan:HOLYGHOST

[04:32] *** ryn1x left
[04:40] <holyghost> ok, beer time

[04:41] <holyghost> I'd better release under the beerware license, I just knocked my head off on the Rao-Blackwell algorithm

[04:41] <holyghost> :-)

[04:45] <holyghost> for iterator's sake we can have a for @indices -> $x,$x.index or something

[04:45] <holyghost> it's and old programming paradigm but it's come clean :-)

[04:47] <holyghost> for is Ken's loop word, but never mind 

[04:48] <holyghost> loop comes from Lisp

[04:52] <holyghost> index is from python

[05:07] <Juerd> An element of an array does not know it belongs to the array, so .index can't work like that. The same variable can be an element of multiple arrays, even.

[05:09] <Juerd> Instead, if you have an array of indices @indices of the array @array, then just iterate over the indices and the corresponding elements in parallel:  for @indices Z @array -> ($index, $element) { ... }

[05:10] <Juerd> Errr

[05:10] <Juerd> Nope.

[05:10] <Juerd> I meant  for @indices Z @array[@indices] -> (...) { ... } of course

[05:11] <Juerd> I should go to bed :)

[05:11] <Juerd> afk

[05:16] <geekosaur> m: my @a = <a b c d>; for @a.kv -> $index, $element { say "$index is $element" }

[05:16] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´0 is a‚ê§1 is b‚ê§2 is c‚ê§3 is d‚ê§¬ª

[05:17] <geekosaur> the element doesn't know, but the array does ‚Äî so make the array do the lifting

[05:19] *** lizmat left
[05:22] *** lizmat joined
[05:22] *** p6bannerbot sets mode: +v lizmat

[05:32] *** jc_denton1 joined
[05:33] *** leont joined
[05:33] *** p6bannerbot sets mode: +v jc_denton1

[05:33] *** p6bannerbot sets mode: +v leont

[05:41] <holyghost> geekosaur: thx

[05:41] <holyghost> so kv on a list instead of a hashmap

[05:42] <buggable> New CPAN upload: Mathx-Stat-0.1.7.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[05:43] <holyghost> ^-- I programmed in the long awaited iterative conditional probability method :-)

[05:43] <holyghost> Now I need to extend Bayes::Learn with a second system in it with the above

[05:53] *** jc_denton2 joined
[05:53] *** p6bannerbot sets mode: +v jc_denton2

[05:55] *** jc_denton1 left
[05:55] *** curan joined
[05:55] *** p6bannerbot sets mode: +v curan

[06:02] <buggable> New CPAN upload: Mathx-Stat-0.1.8.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[06:02] <buggable> New CPAN upload: Mathx-Stat-0.1.9.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[06:08] *** jmerelo joined
[06:09] *** p6bannerbot sets mode: +v jmerelo

[06:16] *** Spot__ left
[06:16] *** Spot__ joined
[06:16] *** p6bannerbot sets mode: +v Spot__

[06:18] *** Garland_g[m] left
[06:18] *** AlexDaniel-old[m left
[06:18] *** AlexDaniel` left
[06:20] *** Garland_g[m] joined
[06:20] *** p6bannerbot sets mode: +v Garland_g[m]

[06:20] *** AlexDaniel` joined
[06:20] *** p6bannerbot sets mode: +v AlexDaniel`

[06:20] *** AlexDaniel-old[m joined
[06:20] *** p6bannerbot sets mode: +v AlexDaniel-old[m

[06:26] *** leont left
[06:27] *** Spot__ left
[06:27] *** Spot__ joined
[06:27] *** p6bannerbot sets mode: +v Spot__

[06:27] *** jc_denton1 joined
[06:28] *** p6bannerbot sets mode: +v jc_denton1

[06:29] *** jc_denton2 left
[06:32] <buggable> New CPAN upload: Game-Markov-0.1.8.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Game::Markov:cpan:HOLYGHOST

[06:34] *** troys left
[06:36] *** fake_space_whale left
[06:40] *** AlexDaniel` left
[06:47] *** AlexDaniel` joined
[06:47] *** p6bannerbot sets mode: +v AlexDaniel`

[06:51] *** k-man left
[06:52] <buggable> New CPAN upload: AI-Agent-0.1.21.tar.gz by HOLYGHOST http://modules.perl6.org/dist/AI::Agent:cpan:HOLYGHOST

[06:53] *** k-man joined
[06:53] *** p6bannerbot sets mode: +v k-man

[06:53] <holyghost> ^-- done for today, now some BSD wine :-)

[06:56] <holyghost> man, I feel better after some coding :-)

[06:57] *** dct joined
[06:57] *** p6bannerbot sets mode: +v dct

[06:57] <jmerelo> holyghost: great job :-)

[06:58] <holyghost> thx :-) There's still bugs left but I'll refactor/debug after everything is finished

[06:59] <holyghost> I'm burning ozon in the ecosystem :-)

[07:00] <jmerelo> holyghost: not by the least. You're adding another ecological niche, which is good. Lots of good stuff can be done with that

[07:00] *** vike1 left
[07:00] <holyghost> it's open source in the download directory

[07:00] <holyghost> So anyone can debug indeed

[07:01] <holyghost> I have my niche and I am happy about that, did 20 years of linux coding while I caught up with perl 5

[07:01] *** vike1 joined
[07:02] *** p6bannerbot sets mode: +v vike1

[07:02] <jmerelo> holyghost: anyway, a great addition. Will check it out.

[07:02] <holyghost> thx, enjoy

[07:06] *** fake_space_whale joined
[07:07] *** p6bannerbot sets mode: +v fake_space_whale

[07:10] *** jc_denton1 left
[07:14] *** dct left
[07:36] *** lizmat left
[07:43] *** jmerelo left
[07:56] *** noganex_ left
[07:57] *** noganex joined
[07:58] *** p6bannerbot sets mode: +v noganex

[08:01] *** fake_space_whale left
[08:03] *** robertle joined
[08:04] *** p6bannerbot sets mode: +v robertle

[08:08] *** kensanata joined
[08:08] *** p6bannerbot sets mode: +v kensanata

[08:26] <Geth> ¬¶ doc/master: 5 commits pushed by (Christian S√°nchez)++, (Juan Juli√°n Merelo Guerv√≥s)++

[08:26] <Geth> ¬¶ doc/master: 656a04744b | Fix example for Pod::Block::Named. Fixes #2425

[08:26] <Geth> ¬¶ doc/master: 59849b43e2 | Merge remote-tracking branch 'upstream/master' into fix-2425

[08:26] <Geth> ¬¶ doc/master: bb4c332671 | Remove :skio-test

[08:26] <Geth> ¬¶ doc/master: 68dbc081f5 | Fix line space in example

[08:26] <Geth> ¬¶ doc/master: 74189ce5cd | Merge pull request #2427 from chsanch/fix-2425

[08:26] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/d2daaa61383e...74189ce5cdd6

[08:27] *** dakkar joined
[08:28] *** p6bannerbot sets mode: +v dakkar

[08:35] *** abraxxa left
[08:35] *** k-man left
[08:36] *** abraxxa joined
[08:36] *** p6bannerbot sets mode: +v abraxxa

[08:37] <ufobat___> what am i doing wrong?

[08:37] <ufobat___> https://nopaste.xyz/?31baf62bf499a213#+fyWGV/IyQyj8h+VL0wqTc27Lr22SIb4fIIBV2da8DA=

[08:38] <ufobat___> my basic authentiactoin is not called at all, the say in line 7 is never called

[08:38] *** ufobat___ is now known as ufobat

[08:40] *** k-man joined
[08:40] *** p6bannerbot sets mode: +v k-man

[08:40] <timotimo> you're never asking for a user to be passed to your route, maybe that's it?

[08:42] <ufobat> what do you mean?

[08:42] <ufobat> isnt this question the "before MyBasicAuth.new"?

[08:42] <timotimo> none of your routes takes a session parameter

[08:43] <ufobat> true, but there is no session, is there any? i just wanna check if they pass the authentication

[08:44] <timotimo> let me check the sauce

[08:45] <timotimo> aha

[08:45] <timotimo> Cro::HTTP::Auth::Basic requires an Authorization header to be set in the request

[08:45] <timotimo> only then will it call self.authenticate

[08:46] <ufobat> that means i cant protect my routes ;D

[08:46] <timotimo> how do you mean?

[08:46] <ufobat> the route should only be available if youre sending the authentication header

[08:46] <ufobat> if net, you're not allowed to see it

[08:47] <timotimo> then you need to tell cro that the routes are for authenticated users only

[08:47] <ufobat> how?

[08:47] <geekosaur> do consider that http doesn't provide a way to do that

[08:47] <timotimo> -> LoggedInUser $user, 'foo' { ... }

[08:47] <timotimo> have LoggedInUser be a subset type that identifies whether a MyUser object is logged in or not

[08:47] <geekosaur> the client doesn't know to send auth until it has requested a page and the servr has resnded with an auth-required eror

[08:48] <timotimo> iirc it will then always send that authorization header, right?

[08:48] <ufobat> geekosaur, that is true. the client is my curl. what i wanted to archive is that my request gets rejected

[08:51] *** AlexDaniel` left
[08:53] <ufobat> I find the cro documentation hard to understand :(

[08:53] <timotimo> your input is probably appreciated!

[08:54] <ufobat> i dont know how to improve it, yet. still thinking

[08:54] <ufobat> i started a project with a friend of mine, he was a java backend guy, i convinced him learning perl6, i am learning vuejs and typescript

[08:55] <ufobat> after 20 minutes the called me and told me he doesnt get it at all

[08:55] *** mryan joined
[08:55] <ufobat> he started with https://cro.services/docs/http-auth-and-sessions and didnt understand how to apply the "middlewares" i think it is called

[08:55] *** p6bannerbot sets mode: +v mryan

[08:56] <ufobat> after a while you realize that there is a tiny little link that points to https://cro.services/docs/reference/cro-http-router that has tha information for you

[08:56] <ufobat> you realize that there is a before for that

[08:57] <ufobat> but the next thought was, hm is before correct, because what if i am not logged in, i actually wanna reject it or say "please log in first" in http manner

[08:57] <ufobat> so he decides to better understand middlewares first. we started to read https://cro.services/docs/reference/cro-http-middleware

[08:58] <ufobat> the idea was that you actually need to "send"/ajust the response if the login fails or is missing so you need to do a "conditional" middleware like https://cro.services/docs/reference/cro-http-middleware#

[08:59] <ufobat> wich looks like a perfect firt at a first glance

[08:59] *** abraxxa left
[09:00] <timotimo> yeah that looks like it'd work

[09:00] *** abraxxa joined
[09:00] <ufobat> after a while when you read the http-router documentation again in the last part "Applying_middleware_in_a_route_block" you see that the before introduces a after as well

[09:00] <ufobat> so you realize hey it might still be much simpler

[09:01] *** p6bannerbot sets mode: +v abraxxa

[09:02] *** AlexDaniel` joined
[09:02] *** p6bannerbot sets mode: +v AlexDaniel`

[09:02] <timotimo> right, an "after" middleware could replace the response body with some custom html if the status is 401

[09:02] <ufobat> i am not complaining or wining or something, that was just what happend to us, we're jumping around serveral pages and dont know nothing afterwards

[09:02] <timotimo> you're winning :)

[09:02] <ufobat> wineing :)

[09:02] <ufobat> wine?

[09:02] <ufobat> :D

[09:03] <moritz> pining, for the fjords :D

[09:03] <timotimo> Wine Ingenieur: WinIng

[09:03] <sjn> whining, schmining :)

[09:03] *** mryan left
[09:03] *** shortguy joined
[09:03] *** p6bannerbot sets mode: +v shortguy

[09:04] <ufobat> and after you said -> LoggedInUser i was at the http-router documentation to really understand `get` and i am not decided if `-> LoggedInUser $user, '/foo/` means that the URL is /username/foo or not

[09:05] <shortguy> Where are the language flow control structures declared, such as if and while? I'm having zero luck so far. And in a related question, where are some of the built in methods declared, such as "require" ? I've looked at the rakudo source and the nqp source but I'm not having much luck with either.

[09:05] <ufobat> in fact it is just me reading the documentation "wrong" but tell me, how could we improve it that you dont get missleaded like i did?

[09:06] *** HaraldJoerg joined
[09:07] *** p6bannerbot sets mode: +v HaraldJoerg

[09:08] <timotimo> the section "router support" explains that part

[09:09] <timotimo> "Such a parameter will not be treated as the first route segment, but instead will be populated with the contents of the auth property of the Cro::HTTP::Request being processed."

[09:09] *** dogbert17 left
[09:09] <ufobat> ah :-)

[09:09] <timotimo> shortguy: https://docs.perl6.org/language/control - not sure if that's enough to answer your first question

[09:09] <geekosaur> shortguy, https://docs.perl6.org/language/control which is linked as "Control Flow" from https://docs.perl6.org/language.html

[09:10] * ufobat feels like he did a rant ;)

[09:10] <timotimo> https://docs.perl6.org/routine.html - this lists all routines - including operators - that are doced in the docs

[09:10] <geekosaur> "require" is https://docs.perl6.org/language/modules likewise linked as "Modules" from the language page

[09:11] <holyghost> for hashed methods in a hash, I suppose @!dependencies is a class variable

[09:12] <shortguy> timotimo: I'm looking for the implementation though, I'm guessing the control flow bits are implemented in a grammar file defining perl6, but I'm having trouble finding it

[09:12] <buggable> New CPAN upload: AI-Agent-0.1.22.tar.gz by HOLYGHOST http://modules.perl6.org/dist/AI::Agent:cpan:HOLYGHOST

[09:12] <timotimo> oooh

[09:12] <timotimo> yes, i can help that

[09:12] <shortguy> Fantastic

[09:13] <timotimo> it's the series of statement_control:sym<blah> rules in the Grammar.nqp

[09:14] <timotimo> there's more than just "if" and "else", as import/use/no/... are also among those

[09:15] <timotimo> huh, i should really have been able to tell from your question that you were looking for source, not documentation

[09:16] <shortguy> No worries

[09:17] <holyghost> I'm just doing things documentation wise

[09:17] <shortguy> I've been spending some time looking at how hard it would be to implement an "as" qualifier to the use statement, so I could do use Long::Namespace::Qualifier::Class as Class 

[09:18] <shortguy> I tried adding a shortname in the %EXPORT hash in module declaration, but that clashes if you have two modules with the same short name

[09:18] <holyghost> shortguy: same as Class is export

[09:19] <timotimo> holyghost: no, used on the "use" side, not the declaration side

[09:19] <geekosaur> I thik the main problem is that currently any extra stuff in use is passed to the importer

[09:19] <shortguy> I also tried adding an if switch in the export statement so I could do use Long::Namespace::Qualifier::Class "Class", which kinda worked but it still involved lots of boiler plate writing the switches because idk how to dynamically figure out the current class in the EXPORT statement, because that is seperate from the class definition

[09:19] <holyghost> timotimo: I'm, from @ISA world

[09:19] <geekosaur> so 'as' would need a special case

[09:20] <shortguy> Well I mean, I got it working using some grep & eval magic on the debug backtrace but it felt pretty dirty 

[09:20] <timotimo> "current class" isn't always a thing

[09:20] <holyghost> Maybe you could re-export the hash

[09:20] <timotimo> if you have a "unit class", that makes sense, but a package/module can have as many classes as you want, including none

[09:20] <holyghost> true

[09:20] <holyghost> re-export at runtime

[09:21] <shortguy> Yeah I know, that's why my solution was never going to work, but it was cool doing a spot of metaprogramming 

[09:21] <timotimo> if you're feeling especially fancy, you could offer a slang

[09:21] <geekosaur> isn't the usual way to do this a module constant?

[09:21] <timotimo> you mean like "constant MyModule = do { need FooModule; FooModule }; or something?

[09:22] <timotimo> i guess inside a "constant" it'd be enough to "require"

[09:22] <geekosaur> constant Foo = My::Long::Foo::Thingy; or some such

[09:22] <timotimo> that doesn't help if a module is spewing symbols all across the user's namespace thanks to "is export"

[09:23] <holyghost> and unit module

[09:26] <shortguy> This Grammar.nqp file is pretty intimidating

[09:27] <holyghost> NQP is the way to go, AFAIK

[09:27] <timotimo> oh yeah, it's huge

[09:27] <timotimo> how do you mean, holyghost?

[09:27] <holyghost> OOP wise with perl6 in mind

[09:28] <timotimo> i don't think i understand

[09:28] <holyghost> I wrote a nqp class for an SDL2::Raw game that's where I know from

[09:28] <holyghost> It's in PaganVisions2 at github.com/theholyghost

[09:28] <timotimo> NQP has a major shortcoming for things like simulations and such, it often converts between int and float without a good reason

[09:29] <holyghost> I don't remember

[09:31] <shortguy> So Grammar.nqp just describes how stuff is parsed and then the actual implementation is in another file

[09:31] <shortguy> I think I'll spend some time hacking on this

[09:35] <timotimo> i'm not sure what you mean by "actual implementation"

[09:36] <timotimo> but Actions.nqp is directly coupled to the Grammar.nqp; whenever a rule/token/regex is successfully parsed, a method of the same name is called on the Actions class and the match object is passed as first argument

[09:37] <shortguy> Grammar.nqp has a rule statement_control:sym<use> and Actions.nqp has a method statement_control:sym<use>, so I'm guessing once it gets parsed/matched in Grammar.nqp the rule is called from Actions.nqp?

[09:37] <shortguy> well there we go, should've just waited a few seconds for you to explain it

[09:38] <timotimo> haha

[09:42] *** lizmat joined
[09:42] *** p6bannerbot sets mode: +v lizmat

[09:50] <shortguy> The rule matches "<sym> <name>" which I'm lazily going to assume matches "use packagename", this in turn calls a method load_module, which is then loaded from whatever backend I'm using, right?

[09:52] <timotimo> <sym> is short for "match what is part of the rule name"

[09:53] <timotimo> so rule foo:sym<hello> { <sym> } would match the string "hello"

[09:54] <lizmat> .

[09:54] <holyghost> I guess it's meta-circular eval

[09:55] <holyghost> I didn't know

[09:55] * lizmat clickbaits https://p6weekly.wordpress.com/2018/10/29/2018-44-diwali-approaching/

[09:58] *** robertle left
[09:58] <Altreus> oh good

[09:59] <Altreus> I was about to scroll up looking for this

[09:59] <Altreus> :)

[09:59] <holyghost> lol

[09:59] <Altreus> lizmat++ # clairvoyant

[09:59] <holyghost> I'm in SSL 0.96. though :-)

[10:00] <holyghost> s/0.96/0.9.6

[10:00] <lizmat> Altreus:  https://p6weekly.wordpress.com  will always give you the most recent

[10:01] <Altreus> well that's just cheating :P

[10:01] <lizmat> I mention the specific ones for the logs, really

[10:01] <Altreus> also to remind me to check ;)

[10:03] <Altreus> do we know who owns perl11.org? the cert is invalid

[10:04] *** rindolf joined
[10:04] *** p6bannerbot sets mode: +v rindolf

[10:04] <holyghost> Just recalculate ;-)

[10:06] <holyghost> dump the packets and calculate :-)

[10:07] <ufobat> timotimo, sill doesnt work :( https://nopaste.xyz/?0bcaf75dbe253266#r96Dpn33v8AUoWGojSA6FB0F73TZnpEFOfXg6nV6MrQ=

[10:07] <holyghost> Altreus: maybe just use Bayes::Learn

[10:11] <shortguy> <+timotimo> if you're feeling especially fancy, you could offer a slang

[10:11] <shortguy> timotimo: what did you mean by this?

[10:11] <timotimo> invent a whole new keyword to replace "use"

[10:12] <timotimo> that would allow parsing an "as" parameter

[10:12] <timotimo> maybe have it be like "use-as Foo The::Actual::Module"

[10:12] <lizmat> timotimo: or we could just implement "use longname as shortname" for 6.e ?

[10:13] <ufobat> sounds like pyhton :)

[10:13] <shortguy> I feel like adding "as" to the existing "use" would lower complexity, so you don't have to look at a bunch of different operators in the top of the file 

[10:14] <jnthn> I think there's already a proposed syntax for that renaming, using an adverb

[10:14] <shortguy> Not one that I could find, though perl6 discussions are pretty sprawled out

[10:15] <timotimo> worst case, have a module that does the "renamed" importation for you

[10:15] <timotimo> a bit like the "if" module

[10:16] <timotimo> use LoadThisForMe "The::Original::Module:ver<1.9>" => "ShortName";

[10:16] <timotimo> BBL

[10:16] <jnthn>  use 

[10:16] <jnthn> oops

[10:16] <lizmat> jnthn: the proposal was "use alias:name<longname>"  I think

[10:16] <jnthn> Glancing S11, I think it's `use ShortName:name<The::Really::Long::Name>`

[10:16] <jnthn> Yup

[10:17] <lizmat> m: use Foo:name<Test>

[10:17] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´===SORRY!===‚ê§Could not find Foo at line 1 in:‚ê§    /home/camelia/.perl6‚ê§    /home/camelia/rakudo-m-inst-2/share/perl6/site‚ê§    /home/camelia/rakudo-m-inst-2/share/perl6/vendor‚ê§    /home/camelia/rakudo-m-inst-2/share/perl6‚ê§    CompUnit::Repo‚Ä¶¬ª

[10:17] <lizmat> fwiw, that still is a bit counter-intuitive for me

[10:18] <lizmat> m: use Benchmark:from<Perl5>

[10:18] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´===SORRY!===‚ê§Please install Inline::Perl5 for Perl 5 support. ‚ê§¬ª

[10:18] <shortguy> the order of arguments to that seems weird to me

[10:18] <shortguy> But what do I know

[10:18] <shortguy> jnthn: Where do I find this proposal?

[10:18] <lizmat> S11

[10:19] <lizmat> actually as part of:

[10:19] <lizmat> m: use Foo:from<Perl5>:name<Benchmark>

[10:19] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´===SORRY!===‚ê§Please install Inline::Perl5 for Perl 5 support. ‚ê§¬ª

[10:20] <lizmat> ===SORRY!===

[10:20] <lizmat> Can't locate Foo.pm in @INC

[10:20] <lizmat> if you do have Inline::Perl5 installed

[10:25] <Altreus> shortname:name<longname> looks backwards to me

[10:25] <Altreus> Is that what you meant?

[10:25] <Altreus> use Module:as<M> looks forwards

[10:26] <shortguy> yeah

[10:26] <jnthn> The :name approach is logical, when considered together with :auth and :ver

[10:27] <jnthn> Since it's just specifying the name of the thing to load

[10:27] <jnthn> And so leaves the name immediately after the `use` as consistently being the one that's introduced

[10:27] <jnthn> Whereas if you start doing it the other way around, you have to read ahead to know what names you're introducing into the scope

[10:28] <jnthn> So the design proposal probably has it right

[10:29] <shortguy> But this isn't implemented currently?

[10:29] <lizmat> indeed

[10:30] <Altreus> But it's only logical if you know the logic behind it, whereas one of the nice things about Perl5 is you could make your code look like it was written in sentences

[10:30] <Altreus> So rather than having logical consistency one layer down, we'd have grammatical consistency at the top layer

[10:30] <Altreus> less thinking

[10:30] <Altreus> I suppose the other way of looking at it is simply that I don't think "name" means the right thing grammatically

[10:30] <Altreus> "from" would make more sense

[10:30] <Altreus> or something like that

[10:30] <Altreus> lag? In 2018?

[10:30] <jnthn> :from is already used

[10:31] <Altreus> use Foo:actually<FooBar>

[10:31] <Altreus> :bywhichimean

[10:31] <jnthn> But the point is that there's already a `name` property and you've probably already used it in META6.json :)

[10:32] <Altreus> I can see the logic but for some reason it doesn't fit

[10:33] <Altreus> Not like I wouldn't get used to it after a while, but if there's time left to make it perfect then let's

[10:33] <shortguy> "As" is what makes sense to me, but that might be because it's what I'm used to, but it makes intuitive sense to say "use Project::Admin::User as Adminuser; use Project::RegularSchmoe::User as Regularuser" 

[10:34] <jnthn> shortguy: There's very, very little chance of us introducing such an arbitrary syntax.

[10:34] <Altreus> I think the reason I don't like :name is simply that whenever I'm linking A to B, I would use a property of A, not of B, as the key

[10:35] <Altreus> Foo:name<Bar> is using the property of Bar (name) as a property of Foo, which is illogical

[10:35] <jnthn> So you think :ver and :auth are illogical too?

[10:35] <Altreus> In fact you're setting the *source* of Foo

[10:35] <Altreus> no, because then you're setting the version and auth of Foo

[10:35] <Altreus> Foo is the name of Foo, but it comes from Bar

[10:36] <Altreus> For :name to be consistent with :ver and :auth like that, you'd have to *end up* with those properties

[10:36] <jnthn> Not really; the adverbs are lookup keys that indicate how to find the thing to import.

[10:36] <Altreus> Foo:ver<1>:auth<meow>:name<Bar> should end up with something at version 1, authed by meow, and called Bar

[10:37] <Altreus> But you actually end up with the name being Foo

[10:38] *** zakharyas joined
[10:39] <Altreus> hmm the more I stare at that the more I flick between one side and the other

[10:39] *** p6bannerbot sets mode: +v zakharyas

[10:40] <lizmat> Altreus: that feeling is very well known to me

[10:40] <Altreus> it's probably those government mind rays

[10:40] <lizmat> the ones responsible for the contrails ?

[10:40] <Altreus> I did wonder what they were! that makes sense

[10:41] <Altreus> But yeah now I think about it, it's like you're constructing an object out of :name :ver :auth, and putting it in Foo

[10:41] <Altreus> mind you, if I were constructing an object like this, I'd use a different parameter for :name so it's not confusing ;)

[10:42] <jnthn> The already *is* such an object in the API behind `use`, and it has precisely those properties :)

[10:45] *** shortguy left
[10:45] *** gregf_ left
[10:45] *** zashi left
[10:45] *** Sigyn left
[10:49] *** mattp__ left
[11:03] *** mattp__ joined
[11:04] *** p6bannerbot sets mode: +v mattp__

[11:08] *** mattp__ left
[11:12] <buggable> New CPAN upload: AI-Agent-0.1.23.tar.gz by HOLYGHOST http://modules.perl6.org/dist/AI::Agent:cpan:HOLYGHOST

[11:13] *** mattp__ joined
[11:14] *** p6bannerbot sets mode: +v mattp__

[11:21] *** mattp__ left
[11:22] *** mattp__ joined
[11:23] *** p6bannerbot sets mode: +v mattp__

[11:31] *** mattp__ left
[11:42] *** mattp__ joined
[11:42] *** p6bannerbot sets mode: +v mattp__

[11:46] *** mattp__ left
[11:46] *** cog left
[11:54] *** mattp__ joined
[11:55] *** p6bannerbot sets mode: +v mattp__

[11:58] *** mattp__ left
[11:58] *** sergot joined
[11:59] *** p6bannerbot sets mode: +v sergot

[12:03] *** noganex_ joined
[12:03] *** p6bannerbot sets mode: +v noganex_

[12:06] *** robertle joined
[12:06] *** noganex left
[12:07] *** p6bannerbot sets mode: +v robertle

[12:08] *** domidumont joined
[12:08] *** p6bannerbot sets mode: +v domidumont

[12:18] *** cog joined
[12:19] *** p6bannerbot sets mode: +v cog

[12:25] *** cog left
[12:26] *** cognominal-p6 joined
[12:27] *** p6bannerbot sets mode: +v cognominal-p6

[12:44] *** emerson is now known as GDPR

[12:54] *** Sigyn joined
[12:54] *** niven.freenode.net sets mode: +v Sigyn

[12:54] *** p6bannerbot sets mode: +v Sigyn

[13:37] *** john_parr left
[13:39] *** john_parr joined
[13:40] *** p6bannerbot sets mode: +v john_parr

[13:45] *** Sauvin left
[13:50] *** lizmat left
[13:53] *** lizmat joined
[13:53] *** p6bannerbot sets mode: +v lizmat

[14:09] *** melezhik joined
[14:09] *** p6bannerbot sets mode: +v melezhik

[14:12] <melezhik> Hi! I have a date in format "2018-10-30T08:10:42-06:00" I'd like to convert it into  "x time ago" ( "5 minutes ago, 1 hour ago and so on ") .. any ready Perl6 modules for that?

[14:21] *** Zoffix joined
[14:21] *** p6bannerbot sets mode: +v Zoffix

[14:21] <Zoffix> eco: Number::Denominal

[14:21] <buggable> Zoffix, Nothing found

[14:21] <Zoffix> eco: Number::Denominate

[14:21] <buggable> Zoffix, Number::Denominate 'Break up numbers into preset or arbitrary denominations': http://modules.perl6.org/dist/Number::Denominate:github:Zoffix%20Znet

[14:22] <Zoffix> melezhik: try that one. IIRC it can take a number of seconds and convert to "5 weeks, 4 days, ..." formatted string

[14:22] <melezhik> sounds good, Zoffix: , thanks

[14:24] <Zoffix> $ perl6 -MNumber::Denominate -e 'say denominate(DateTime.now - DateTime.new("2018-10-30T08:10:42-06:00")) ~ " ago"'

[14:24] <Zoffix> 13 minutes and 38 seconds ago

[14:24] <Zoffix> $ perl6 -MNumber::Denominate -e 'say denominate(DateTime.now - DateTime.new("2015-12-25T08:10:42-06:00")) ~ " ago"'

[14:24] <Zoffix> 148 weeks, 4 days, 13 minutes, and 59 seconds ago

[14:24] <Zoffix> It only goes up to `weeks` but you can define your own units

[14:25] *** Zoffix left
[14:27] <melezhik> thanks, Zoffix:

[14:27] <melezhik> will give it a try

[14:34] *** klapperl joined
[14:35] *** p6bannerbot sets mode: +v klapperl

[14:35] *** klapperl_ left
[14:39] *** klapperl_ joined
[14:40] *** p6bannerbot sets mode: +v klapperl_

[14:41] *** klapperl left
[14:41] *** leont joined
[14:42] *** p6bannerbot sets mode: +v leont

[14:47] *** Altreus left
[14:55] *** st_elmo joined
[14:56] *** p6bannerbot sets mode: +v st_elmo

[14:56] *** cxreg2 is now known as cxreg

[14:59] *** Altreus joined
[14:59] *** p6bannerbot sets mode: +v Altreus

[15:04] *** zakharyas left
[15:04] *** zakharyas joined
[15:05] *** p6bannerbot sets mode: +v zakharyas

[15:09] *** zakharyas left
[15:16] *** troys joined
[15:17] *** p6bannerbot sets mode: +v troys

[15:23] *** fake_space_whale joined
[15:24] *** p6bannerbot sets mode: +v fake_space_whale

[15:30] *** domidumont left
[15:31] <melezhik> does Perl6 has sort construction, like Perl5 does?

[15:31] <melezhik> I need to sort array of hashes by one hash key

[15:32] <timotimo> i don't know what "sort construction" means, but you can just .sort(*.<thekey>)

[15:32] <melezhik> like this one? - say 'bca'.comb.sort({$^b cmp $^a}).join; 

[15:33] <timotimo> i would not recommend using a two-argument function as the argument to sort

[15:33] <timotimo> only if you really need it

[15:33] <melezhik> .sort(*.<thekey>) would be ok too, thanks

[15:34] <melezhik> how to do the same in reverse order?

[15:34] <melezhik> ! *.<thekey> ?

[15:36] <moritz> .sort(*.<thekey).reverse

[15:36] <moritz> .sort({ $^b<thekey> cmp $^a<thekey>))

[15:36] <melezhik> thanks

[15:36] *** holyghost left
[15:37] *** holyghost joined
[15:37] *** curan left
[15:38] *** p6bannerbot sets mode: +v holyghost

[15:38] <lizmat> melezhik: using a 2 arg sorter prohibits the sorter to do a Schwartzian transform under the hood, which may have performance implications

[15:41] <melezhik> ok, thanks, i decided to choose 1 arg sorting , it works for me

[15:41] <lizmat> also: .reverse on an array is almost a noop, as it will just use an iterator that goes from end to beginning

[15:42] <lizmat> so no data is hurt during the .reverse  :-)

[15:52] <rindolf> Hi all! I am using https://github.com/shlomif/rakudo-git-master-install and zef stopped getting installed

[15:52] <moritz> rindolf: maybe you should open an issue in that repo :-)

[15:52] <rindolf> moritz: heh

[15:54] <El_Che> rindolf: your block brackets are all wrong, that's why! /o\

[15:55] <rindolf> https://www.shlomifish.org/Files/files/text/rakudo-log.txt - log

[15:55] <rindolf> El_Che: where?

[15:55] <rindolf> El_Che: wrong how?

[15:56] <El_Che> wrong as a discussion between tabs and spaces

[15:56] <El_Che> KR and not

[15:56] <rindolf> El_Che: what?

[15:56] <rindolf> El_Che: is this bikeshedding?

[15:56] <El_Che> https://en.wikipedia.org/wiki/Indentation_style#K&R_style

[15:56] <El_Che> it's rather playful trolling :)

[15:56] <moritz> rindolf: it looks like zef is already installed

[15:57] <rindolf> moritz: ah

[15:57] <rindolf> moritz: it is not in the path

[15:57] <moritz> rindolf: you might need to adjust your PATH

[15:58] *** moony_ joined
[15:58] *** p6bannerbot sets mode: +v moony_

[15:58] <rindolf> moritz: ah

[15:59] <moony_> p6: say ¬´moo 1 2 3>[0]

[15:59] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in shell-quote words; couldn't find final '¬ª' (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3say ¬´moo 1 2 3>[0]7‚èè5<EOL>‚ê§    expecting any of:‚ê§      ‚Ä¶¬ª

[16:00] <moony_> p6: say ¬´moo 1 2 3¬ª[0]

[16:00] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´moo‚ê§¬ª

[16:00] <moony_> p6: say ¬´moo 1 2 3¬ª[0] √ó ¬´oom¬ª

[16:00] <camelia> rakudo-moar 266af373d: OUTPUT: ¬´Cannot convert string to number: base-10 number must begin with valid digits or '.' in '3‚èè5moo' (indicated by ‚èè)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[16:00] <rindolf> moony_: i cannot find it anywhere

[16:00] <moony_> ?

[16:01] <rindolf> moritz: : i cannot find it anywhere

[16:01] <rindolf> moony_: sorry

[16:02] <moritz> rindolf: for me, it's installed to $PREFX/share/perl6/site/bin/zef

[16:02] <rindolf> moritz: ah

[16:04] <moritz> in case of doubt, find -name zef

[16:04] <rindolf> moritz: yes

[16:04] *** moony_ left
[16:06] *** moony_ joined
[16:06] *** p6bannerbot sets mode: +v moony_

[16:06] <moony_> y u ping

[16:12] <rindolf> moritz: thanks, had to tweak the path

[16:13] <rindolf> moony_: ping?

[16:13] <ugexe> for the purist you can use zef without tweaking the path even -- `perl6 -MZef::CLI -e '' install Cro::HTTP -v`

[16:16] <El_Che> could be useful as an alias for switch between the local and the global zef install

[16:17] <rindolf> moritz: next question - why does this work locally even after a complete reinstall - https://travis-ci.org/shlomif/ci-gen-framework/jobs/448310042 ?

[16:18] <rindolf> leont: any idea?

[16:19] *** sena_kun joined
[16:19] <SmokeMachine> `use RealNameModule:as<Foo>`looks good imo

[16:19] *** p6bannerbot sets mode: +v sena_kun

[16:20] <ugexe> :as<> isn't consistent with anything else

[16:22] <ugexe> :name is already in the meta data. we already have Foo.^name Foo.^ver Foo.^auth

[16:25] *** zxcvz joined
[16:25] <jkramer> I just had P6 segfault on after running for ~2 weeks :(

[16:26] *** p6bannerbot sets mode: +v zxcvz

[16:29] *** robertle left
[16:30] <timotimo> oh crap. do you happen to have a core dump?

[16:30] *** jmerelo joined
[16:31] *** p6bannerbot sets mode: +v jmerelo

[16:31] <moony_> timotimo: *eats apple* core dumped. I have no idea how to actually use core dumps, which bugs me. Mind telling me how to debug with them?

[16:32] <jkramer> timotimo: Nope. I also don't know when exactly happened, I just saw it in a tmux session.

[16:32] <timotimo> OK

[16:32] <timotimo> moony_: have you played nethack? it's basically just like that :P

[16:32] <jkramer> timotimo: Actually nevermind, I updated perl6 today, I'm pretty sure replacing the binary/libs was what caused the crash

[16:32] <moony_> uh, i pulled that joke straight out of nethack. Course i have.

[16:33] <timotimo> oh

[16:34] * moony_ goes back to playing nethack, like he was just a few seconds ago

[16:34] <timotimo> yeah, rebuilding moar or rakudo or something while one is running causes other moar processes to either crash immediately, or very soon after

[16:34] <timotimo> moony_: i tried to make an additional bad joke on top, but it didn't land

[16:34] <timotimo> debugging with a core dump is a lot like debugging with a program, except you can't do any "continue" or "step" or things

[16:34] <timotimo> and i'm not sure if you can "call" either?

[16:36] <leont> rindolf: I may have broken your code, sorry about that. That constructor wasn't intended for public consumption (but until recently it didn't have documentation)

[16:37] <rindolf> leont: ah

[16:37] <rindolf> leont: what is the latest version in the pkg repo?

[16:37] <rindolf> leont: i am getting v0.0.1

[16:37] *** elfuego joined
[16:38] <rindolf> leont: https://github.com/Leont/getopt-long6 - no tags here

[16:38] *** p6bannerbot sets mode: +v elfuego

[16:38] <perlbot> Anonymous pasted a new file at https://f.perl.bot/p/4kf482 - 

[16:47] *** moony_ left
[16:48] *** jc_denton1 joined
[16:49] *** p6bannerbot sets mode: +v jc_denton1

[17:05] *** robertle joined
[17:06] <Geth> ¬¶ doc: 101be5ac5c | Coke++ | doc/Language/module-packages.pod6

[17:06] <Geth> ¬¶ doc: run more tests

[17:06] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/101be5ac5c

[17:06] <synopsebot> Link: https://doc.perl6.org/language/module-packages

[17:06] *** p6bannerbot sets mode: +v robertle

[17:11] *** cognominal-p6 left
[17:17] <rindolf> leont: ping

[17:19] <leont> I've made a 0.0.2 now

[17:19] <leont> Previous really should have been 0.0.0 or something

[17:19] *** melezhik left
[17:34] <moritz> version numbers are just smoke and mirror

[17:37] *** st_elmo left
[17:48] *** ufobat left
[17:49] <El_Che> moritz: but which smoke and which mirror

[17:55] <xinming> How can i profile memory usage for the code? I found for a long run, the memory will take up over 3G

[18:01] <El_Che> Fedora 29 is out! Adding support for in rakudo-pkg. Probably with the hour in a repo close to you :)

[18:01] <timotimo> there's the heap snapshot profiler, xinming 

[18:01] <lizmat> short answer: run with --profile ?

[18:01] <lizmat> long answer: listen to timotimo

[18:01] <timotimo> the --profile will give you info on what gets created, the heap snapshot profiler will give you info on what gets kept around

[18:02] <timotimo> the heap snapshot profiler will currently take one heap snapshot per GC run, which can lead to extremely big files rather quickly

[18:03] <timotimo> i've tried to make it only run on major GC runs in the past, but somehow that caused crashes and misbehaviour, and since then i've focused mainly on the instrumented profiler

[18:05] <timotimo> do you want any specific help?

[18:07] *** rindolf left
[18:08] *** moony_ joined
[18:08] *** p6bannerbot sets mode: +v moony_

[18:10] *** rindolf joined
[18:11] *** p6bannerbot sets mode: +v rindolf

[18:13] <rindolf> hi all

[18:13] <rindolf> leont: here?

[18:13] *** ryn1x joined
[18:13] <leont> Yeah

[18:14] *** p6bannerbot sets mode: +v ryn1x

[18:14] <rindolf> leont: hi

[18:15] <rindolf> leont: what is the latest release of getopt::long?

[18:16] <leont> NOw 0.0.2. You probably want to be using the get-options function

[18:17] <rindolf> leont: ok

[18:17] *** kensanata left
[18:17] <rindolf> leont: with a custom array?

[18:17] <leont> get-options-from

[18:18] <xinming> timotimo: yes.

[18:18] <xinming> timotimo: how do I use heap snapshot profiler?

[18:19] *** dakkar left
[18:20] *** hami joined
[18:20] *** p6bannerbot sets mode: +v hami

[18:20] <rindolf> leont: thanks

[18:20] <timotimo> all you need to do‚Ñ¢ is to pass --profile=heap to your perl6 commandline

[18:20] <timotimo> be sure to watch the resulting file (it will be a file called something like heapsnapshot-123233411234.08354 in the current working directory

[18:21] <timotimo> if you ctrl-c the program before it gets the opportunity to "end the profile", it will not be able to be read yet

[18:21] <timotimo> so you may want to either have a signal handler or some other means of stopping the program early that goes through a proper shutdown sequence

[18:22] <xinming> timotimo: Got it, thanks

[18:24] <timotimo> when you've generated the file, you need the moarvm heapsnapshot analyzer, it's a tool written in perl6

[18:24] <timotimo> buggable: eco Heap

[18:24] <buggable> timotimo, Heap 'Simple Heap implementation': https://github.com/FCO/Heap 4 other matching results: https://modules.perl6.org/s/Heap

[18:24] <timotimo> buggable: eco Heapanalyzer

[18:24] <buggable> timotimo, App::MoarVM::HeapAnalyzer 'MoarVM heap snapshot analysis tool': http://modules.perl6.org/dist/App::MoarVM::HeapAnalyzer:github:Jonathan%20Worthington%20%3Cjnthn@jnthn.net%3E

[18:24] <timotimo> https://github.com/jnthn/p6-app-moarvm-heapanalyzer

[18:24] *** hami left
[18:25] <timotimo> the readme links to two blogposts on jnthn's blog that ought to help you get started

[18:25] <xinming> Thanks

[18:25] <Geth> ¬¶ doc: d73aad759a | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/grammars.pod6

[18:25] <Geth> ¬¶ doc: Try to fix rogue `>` on the page

[18:25] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d73aad759a

[18:25] <synopsebot> Link: https://doc.perl6.org/language/grammars

[18:27] <rindolf> leont: thanks, seems to work now

[18:28] <xinming> Cannot unbox 66 bit wide bigint into native integer

[18:28] <xinming> I got this kind of errory

[18:29] <xinming> error*

[18:29] <xinming> when I run    moar-ha head-snapshot...

[18:29] <timotimo> oh? that's certainly not right :D

[18:29] <timotimo> can you run moar-ha like "perl6 --ll-exception bin/moar-ha heap-snapshot-... ?

[18:29] <timotimo> "

[18:31] <Geth> ¬¶ doc: c118f9498b | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/grammars.pod6

[18:31] <Geth> ¬¶ doc: Simplify example

[18:31] <Geth> ¬¶ doc: 

[18:31] <Geth> ¬¶ doc: Per https://colabti.org/irclogger/irclogger_log/perl6-dev?date=2018-10-30#l379

[18:31] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/c118f9498b

[18:31] <synopsebot> Link: https://doc.perl6.org/language/grammars

[18:33] *** domidumont joined
[18:33] *** p6bannerbot sets mode: +v domidumont

[18:36] <xinming> timotimo: I just got this

[18:36] <xinming> Considering the snapshot...oops!

[18:36] <xinming> then, that error, can't unbox blabla

[18:36] <timotimo> oh, i wonder if you require my fork for it to work

[18:37] <xinming> I can try.

[18:37] <xinming> But I'll go to sleep soon. :-)

[18:37] <timotimo> https://github.com/timo/p6-app-moarvm-heapanalyzer

[18:39] *** mattp_ joined
[18:40] *** p6bannerbot sets mode: +v mattp_

[18:42] <xinming> timotimo: Your version still has the error

[18:42] <xinming> I'm using the 2018.10 version anyway

[18:44] <timotimo> how big is the resulting heapsnapshot file?

[18:47] <jmerelo> releasable6: status

[18:47] <releasable6> jmerelo, Next release in ‚âà18 days and ‚âà0 hours. 0 blockers. 0 out of 29 commits logged

[18:47] <releasable6> jmerelo, Details: https://gist.github.com/3171cb9c8daf5148c77eba6b87702025

[18:47] <jmerelo> So there was a release and I didn't know...

[18:50] <lizmat> jmerelo: it *was* mentioned in the P6W :-)

[18:50] *** itaipu joined
[18:50] *** molaf joined
[18:50] <xinming> 75M

[18:50] <xinming> 101M actually.

[18:51] *** p6bannerbot sets mode: +v itaipu

[18:51] *** p6bannerbot sets mode: +v molaf

[18:51] <jmerelo> lizmat: didn't have time to read it either... 

[18:51] <jmerelo> Busy last two days.

[18:51] <jmerelo> OK, will check it out. 

[18:53] *** moony_ left
[18:55] *** itaipu left
[18:57] <timotimo> damn, that should totally be doable

[19:00] <jmerelo> BTW, is there going to be a Perl 6 Advent this year? I'm already seeing PRs for the Perl 5's one.

[19:01] * lizmat hopes so

[19:03] <jmerelo> OK, I see it's already launched, albeit quietly: https://github.com/perl6/mu/blob/master/misc/perl6advent-2018/schedule

[19:03] <jmerelo> So please add yourself to the schedule on whatever day you choose

[19:03] <lizmat> weekly: https://github.com/perl6/mu/blob/master/misc/perl6advent-2018/schedule

[19:03] <notable6> lizmat, Noted!

[19:04] *** ryn1x left
[19:04] *** Zoffix joined
[19:04] *** p6bannerbot sets mode: +v Zoffix

[19:04] <Zoffix> jmerelo: I saw it being started when it did, but "traditionally" it was launched on Nov 1st, so I kept quiet about it :)

[19:05] <jmerelo> Zoffix: it's almost November 1st in some far away island in the middle of the Pacific... So we could as well release it.

[19:06] <lizmat> weekly: https://uzluisf.gitlab.io/piensaperl6/   # Think Perl 6 in Spanish, comments / Spanish proofreading welcome!

[19:06] <notable6> lizmat, Noted!

[19:06] <Zoffix> jmerelo: sure, why not

[19:06] <moritz> I don't think earlier planning / announcement hurts

[19:07] <moritz> tweeted about it

[19:07] <Zoffix> moritz++

[19:07] <Geth> ¬¶ mu: 69d030933c | (JJ Merelo)++ | misc/perl6advent-2018/schedule

[19:07] <Geth> ¬¶ mu: Adds my stuff for Dec 2nd, cna be moved

[19:07] <Geth> ¬¶ mu: review: https://github.com/perl6/mu/commit/69d030933c

[19:07] <jmerelo> Zoffix: are you still the only person who has the privs to add to the Wordpress blog if they aren't already?

[19:08] <moritz> no, I've always had that priv too :-)

[19:08] <Zoffix> jmerelo: doubt it. 

[19:09] <moritz> so, what could I write about this year?

[19:09] <jmerelo> I don't think I have them. However, I just noted I do have permission for moderating comments, and there were 5 to be approved.

[19:09] <moritz> I dont feel I've done muhc Perl 6 stuff this year...

[19:09] <AlexDaniel> squashable6: status

[19:09] <squashable6> AlexDaniel, ‚ö†üçï Next SQUASHathon in 2 days and ‚âà14 hours (2018-11-03 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[19:10] <AlexDaniel> :o

[19:10] <AlexDaniel> jmerelo: ‚Üë :o

[19:10] <jmerelo> AlexDaniel: 

[19:10] <jmerelo> Right

[19:10] <jmerelo> Bad weekend, also

[19:10] <lizmat> argh

[19:11] <jmerelo> All Saints' long weekend here in Spain and in many other places in Europe.

[19:11] <jmerelo> Will try to do our best

[19:11] * lizmat forgot to say something about the Squashathon in the P6W  :-(

[19:11] <Zoffix> jmerelo: masak colomon jnthn lizmat Ulti moritz perlpilot timotimo and couple others no-longer-regulars have admin privs.

[19:11] <AlexDaniel> lizmat: yeah I also forgot, was too focused on the release I guess‚Ä¶

[19:11] <jmerelo> Zoffix: OK, no problem. Just didn't want to leave all the grunt work for you.

[19:12] <jmerelo> Will try to prepare something tomorrow in the morning.

[19:12] <jmerelo> I've launched TuPR.club here

[19:12] <Zoffix> moritz: dunno, something about grammars? Its our most popular feature, if I recall survey results correctl.y

[19:12] <jmerelo> That's a tupper (ware) for your PR (tu PR in Spanish)

[19:13] <jmerelo> Means I will offer food in a container for anyone whose PR is accepted. Payable here in Granada, Spain. So I was going to launch the thing offering free food for anyone whose PR in perl6/doc is accepted.

[19:14] <Zoffix> :)

[19:14] <Zoffix> Do people get to keep the container? :)

[19:14] <jmerelo> Because tees are great, but a good old container with homemade food is even greater.

[19:14] <jmerelo> Zoffix: I actually went to Ikea and bought el cheapo containers just in case they don't give it back.

[19:15] <Zoffix> I wish they'd offer something other than tees. I'm getting my 5th one this year‚Ä¶

[19:15] <jmerelo> Zoffix: yep, I thought about stickers initially. But then, a sleepless night (jetlag) got in the way...

[19:16] <AlexDaniel> jmerelo: that's during the squashathon? :O

[19:16] <Zoffix> Yeah, food's good.

[19:17] <jmerelo> AlexDaniel: yep, I'm going to start with the Squashathon

[19:17] <AlexDaniel> :O that's awesome

[19:17] <jmerelo> Then go ahead, open it to anyone...

[19:18] <El_Che> Travis is busy pushing packages to github and repo. Added Fedore 29 packages (just out), EOL'ed Fedora 26

[19:20] <jmerelo> El_Che++

[19:21] *** Zoffix left
[19:21] <El_Che> We go for same day delivery. Better than Amazon :)

[19:22] *** titsuki left
[19:22] <jmerelo> El_Che: great :-)

[19:23] *** titsuki joined
[19:24] *** p6bannerbot sets mode: +v titsuki

[19:36] *** molaf left
[19:47] *** jmerelo left
[19:51] *** AlexDaniel left
[19:51] *** AlexDaniel joined
[19:51] *** p6bannerbot sets mode: +v AlexDaniel

[19:52] *** AlexDaniel left
[19:55] *** zakharyas joined
[19:56] *** p6bannerbot sets mode: +v zakharyas

[19:58] *** kensanata joined
[19:58] *** p6bannerbot sets mode: +v kensanata

[20:07] *** AlexDaniel joined
[20:07] *** p6bannerbot sets mode: +v AlexDaniel

[20:07] *** cognominal-p6 joined
[20:08] <El_Che> new Fedora 29 repo up

[20:08] *** p6bannerbot sets mode: +v cognominal-p6

[20:15] *** elfuego left
[20:15] *** cognominal-p6 left
[20:15] *** cognominal-p6 joined
[20:16] *** p6bannerbot sets mode: +v cognominal-p6

[20:17] *** elfuego joined
[20:17] *** p6bannerbot sets mode: +v elfuego

[20:19] *** lolo78 joined
[20:19] *** p6bannerbot sets mode: +v lolo78

[20:28] *** molaf joined
[20:29] *** p6bannerbot sets mode: +v molaf

[20:35] *** cognominal-p6 left
[20:40] *** kensanata left
[20:43] *** molaf left
[20:44] *** ufobat joined
[20:45] *** p6bannerbot sets mode: +v ufobat

[20:46] *** domidumont left
[20:48] *** random_yanek left
[20:49] * SmokeMachine should write something about Red on Perl 6 Advent...

[20:50] <SmokeMachine> but im not sure if it will be published until there...

[20:51] <El_Che> SmokeMachine: I think a lot of people are looking forward to it

[20:51] <SmokeMachine> El_Che: really?

[20:52] <El_Che> SmokeMachine: yes, dbish has its issues

[20:53] <El_Che> (looking at the github issues, I am not claiming it does not work :) )

[20:54] <SmokeMachine> El_Che: but Red isn't a substitute for dbiish... its just an ORM (for SQLite it uses DBIish (but not for Pg))

[20:55] <El_Che> We've some people asking about ORMs here in the channe

[20:56] <El_Che> l

[20:56] <SmokeMachine> :)

[20:58] <ufobat> does anyone still has an idea regarding https://stackoverflow.com/questions/53062118/basic-authentication-in-perl6-with-cro because it just doesn't work on my box :(

[20:59] * sena_kun tries to look into it, but cannot promise things on rest day

[21:01] <ufobat> :)

[21:02] *** AlexDaniel left
[21:03] *** AlexDaniel joined
[21:03] *** p6bannerbot sets mode: +v AlexDaniel

[21:08] *** zxcvz left
[21:09] *** kerframil joined
[21:09] *** p6bannerbot sets mode: +v kerframil

[21:11] *** zakharyas left
[21:21] *** koto joined
[21:22] *** p6bannerbot sets mode: +v koto

[21:22] *** AlexDaniel left
[21:22] *** AlexDaniel joined
[21:22] *** p6bannerbot sets mode: +v AlexDaniel

[21:23] *** sena_kun left
[21:25] <CIAvash> ufobat (IRC): not an answer to your question, but I think `$success` is always going to be defined, so `without $success` should be `unless $success`

[21:25] *** sno left
[21:25] <koto> ufobat, ping?

[21:25] <ufobat> ja?

[21:26] <ufobat> CIAvash, okay thanks :-)

[21:26] *** elfuego left
[21:27] <ufobat> koto?

[21:27] <koto> one thing I know for sure: there are necessary fixes in master(not related to your question), that are not sliced as a version, so to "truly" update it you need git clone && zef install . thing. At least not unless jnthn will make a release, which he is planning to do for sure, I think.

[21:27] <koto> with this "authentication called" message is emitted.

[21:28] <ufobat> thats easy to test

[21:28] *** robertle left
[21:28] <ufobat> wondering which version curt was using

[21:29] <koto> I have `curl 7.61.1` and used exact commands as Curl wrote.

[21:30] <koto> using `unless $success { forbidden };` I can see an exception. Which is better than nothing, I think. :)

[21:31] <ufobat> its sufficient to clone cro and invoke perl6 -Icro/lib example.pl right?

[21:31] <koto> you need to clone `cro-http`.

[21:32] <koto> https://github.com/croservices/cro-http <- ufobat 

[21:32] *** jc_denton2 joined
[21:32] <ufobat> ty!

[21:33] *** p6bannerbot sets mode: +v jc_denton2

[21:33] <koto> np. now looking at how what you want to do can be done(403 repsonse).

[21:33] *** jc_denton1 left
[21:33] *** koto is now known as sena_kun

[21:34] <ufobat> YEAH!

[21:34] <ufobat> https://nopaste.xyz/?2e7f33044c06cd6c#dxL0DNd+Lb2O5lxoKugo/0JKSvVVd211eze3K8wW7qs=

[21:35] <ufobat> ^ much better, but still meh ;)

[21:35] <sena_kun> "Cannot unbox a type object (Nil) to int." is pretty unexpected and I am not sure about its cause. :) Personally, I get "Can only use 'content' inside of a request handler", which is reasonable here.

[21:36] <sena_kun> ufobat, what code did you cahnge from what's in SO question?

[21:36] <ufobat> but thats pretty anoying if the stable release of cro is buggy in a way that basic authentication is not working :-(

[21:37] <ufobat> let met check

[21:37] <ufobat> SO is currently not working? :-(

[21:38] <sena_kun> but, well, if you fix that, you'll get an exception that I posted, about `request handler`.

[21:39] <sena_kun> this one must be fixed inside of cro, I know how to do that, but I'll discuss it with jnthn tomorrow to be sure it won't break anything design-wise, though I bet it's likely not.

[21:39] <ufobat> sena_kun, i think i am using 100% Curts example not mine

[21:39] <sena_kun> afk for 15 minutes&

[21:41] *** sno joined
[21:42] *** p6bannerbot sets mode: +v sno

[21:45] *** sno left
[21:47] *** jc_denton1 joined
[21:48] *** p6bannerbot sets mode: +v jc_denton1

[21:48] <ufobat> sena_kun, i think the exception that i am running into is because my curl does Content-Type: application/x-www-form-urlencoded

[21:48] *** jc_denton2 left
[21:49] <sena_kun> reproduced it this way.

[21:49] <ufobat>  curl -v -X POST http://admin:secret@localhost:10000/api -H 'Content-Type: application/json' -d '{}' <- works

[21:49] <ufobat>  curl -v -X POST http://admin:secret@localhost:10000/api -d '{}' <- doesn't

[21:50] <sena_kun> and with json one you'll get one I mentioned, so there are two.

[21:51] *** |oLa| joined
[21:52] <sena_kun> ufobat, I'll write those down into todo list and fix it after sleep, thanks for raising it.

[21:52] *** p6bannerbot sets mode: +v |oLa|

[21:52] <ufobat> i dont get thet content thingy

[21:52] * sena_kun .o0 ( and hopefully try to help with the release to make it as effortless as possible, we need one )

[21:52] <ufobat> that works for me?

[21:53] <sena_kun> ufobat, no, it can't be, I think. You have `forbidden unless $user eq 'admin' && $pass eq 'secret';` line in your code?

[21:53] <ufobat> no i am using curts code not my example, right now

[21:53] <ufobat> no forbidden here

[21:53] <sena_kun> if not, I have it. I thought one of your conditions was to return forbidden on incorrect creds, so I added that.

[21:54] <sena_kun> try to add it. :)

[21:54] *** lolo78 left
[21:55] *** sno joined
[21:55] <ufobat> yeah

[21:55] <ufobat> there it is

[21:55] *** p6bannerbot sets mode: +v sno

[21:56] <sena_kun> yup. are you in a hurry for those to be fixed? I can do a quickfix, to avoid waiting for tomorrow.

[21:56] <ufobat> so that means maybe, after the release its possible to make a 403 for failed log ins :)

[21:56] <ufobat> not at all :)

[21:56] <sena_kun> it for sure will be possible. ok.

[21:56] <ufobat> :-)

[21:57] <ufobat> i'll wait for the release :-) i think there enough things that are fixed

[21:57] <ufobat> thanks a lot!

[21:57] <sena_kun> you are welcome!

[21:57] *** [Sno] joined
[21:58] *** p6bannerbot sets mode: +v [Sno]

[21:59] *** sno left
[22:03] *** [particle]1 joined
[22:04] *** p6bannerbot sets mode: +v [particle]1

[22:04] *** sena_kun left
[22:05] *** [particle] left
[22:06] *** ryn1x joined
[22:07] *** p6bannerbot sets mode: +v ryn1x

[22:07] *** [Sno] left
[22:12] *** jc_denton1 left
[22:15] *** ryn1x left
[22:15] *** ryn1x joined
[22:15] *** ufobat left
[22:15] *** rindolf left
[22:15] *** elfuego joined
[22:16] *** p6bannerbot sets mode: +v ryn1x

[22:16] *** p6bannerbot sets mode: +v elfuego

[22:20] *** elfuego left
[22:22] *** rindolf joined
[22:22] *** p6bannerbot sets mode: +v rindolf

[22:28] *** dct joined
[22:28] *** p6bannerbot sets mode: +v dct

[22:31] *** elfuego joined
[22:31] *** sno joined
[22:32] *** p6bannerbot sets mode: +v elfuego

[22:32] *** p6bannerbot sets mode: +v sno

[22:36] *** sno left
[22:42] *** elfuego left
[22:44] *** MasterDuke joined
[22:44] *** p6bannerbot sets mode: +v MasterDuke

[22:45] *** MasterDuke left
[22:45] *** MasterDuke joined
[22:45] *** herbert.freenode.net sets mode: +v MasterDuke

[22:45] *** p6bannerbot sets mode: +v MasterDuke

[22:48] *** cognominal-p6 joined
[22:48] *** p6bannerbot sets mode: +v cognominal-p6

[22:50] *** ryn1x left
[22:53] *** rindolf left
[22:56] *** random_yanek joined
[22:56] *** random_yanek left
[22:58] *** fake_space_whale left
[23:00] *** random_yanek joined
[23:01] *** p6bannerbot sets mode: +v random_yanek

[23:01] *** kurahaupo left
[23:01] *** kurahaupo joined
[23:02] *** p6bannerbot sets mode: +v kurahaupo

[23:28] *** dct left
[23:43] *** ryn1x joined
[23:44] *** p6bannerbot sets mode: +v ryn1x

[23:53] *** HaraldJoerg1 joined
[23:54] *** p6bannerbot sets mode: +v HaraldJoerg1

[23:56] *** HaraldJoerg left
[23:59] *** ryn1x left
[23:59] *** moony is now known as moonythevampire

