[00:06] <ugexe> its utterly embarrassing, which i say this as someone who has made money using these "impossible to promote" tools

[00:07] *** Zoffix joined
[00:07] *** p6bannerbot sets mode: +v Zoffix

[00:08] <Zoffix> ugexe: why should the conferences split up?

[00:08] <ugexe> why are they paired up in the first place?

[00:08] <Zoffix> Good question.

[00:09] <ugexe> so you can see the writing on the wall 

[00:09] <ugexe> that this nonsense leads to

[00:09] <Zoffix> ugexe: no, I don't.

[00:10] <ugexe> of course you don't

[00:10] <Zoffix> ugexe: throwing around "shit" and "nonsense" doesn't help the actual fact that Damian Conway was asked not to mention the name of the language.

[00:11] <Zoffix> ugexe: what's your problem? Can you describe it directly instead of metaphors about walls?

[00:11] <ugexe> "thanks" for "pointing" this out

[00:11] <k-man> are there p5 devs who object to p6 being included in the perl confs?

[00:11] *** HaraldJoerg1 joined
[00:11] *** HaraldJoerg1 left
[00:12] <Zoffix> ugexe: you're welcome.

[00:12] *** HaraldJoerg left
[00:13] <ugexe> i'm sure one of your personalities is

[00:13] <Zoffix> is what? Your problem?

[00:13] <[Coke]> k-man: not that I noticed at the last TPC in utah.

[00:14] <[Coke]> gentlemen: this isn't helping. 

[00:14] <Zoffix> I don't know why any discussions occurring right now at all. We had a year and a half for all the discussions. It's now up to TimToady to make an executive ruling.

[00:15] <[Coke]> ugexe: Zoffix asked if you could explain your point more directly. I don't think that's unreasonable; but if you don't want to you, then don't. no need to drag out a conversation you don't want to have.

[00:15] <ugexe> yeah why should anyone discuss things that affect their lively hood

[00:15] <ugexe> coke this isn't the first time i've explained my position

[00:15] <ugexe> like ive mentioend before -- many of us are tired of arguing our points on this and just ignored it

[00:16] *** aborazmeh joined
[00:16] *** aborazmeh left
[00:16] *** aborazmeh joined
[00:16] *** p6bannerbot sets mode: +v aborazmeh

[00:16] *** itaipu left
[00:16] *** lizmat left
[00:16] *** p6bannerbot sets mode: +v aborazmeh

[00:16] * [Coke] heads off to zzz.

[00:16] <Zoffix> ugexe: exactly! You ignored it! And those who were trying to solve the problem didn't and now are proceeding with actions announced well in advance, and all of a sudden you don't want to ignore the issue anymore and wish to discuss it

[00:17] <ugexe> you are seriously complaining that I am objecting to this

[00:17] <ugexe> that explains enough to me

[00:17] <Zoffix> ugexe: more cryptic bullshit.

[00:17] <ugexe> more unstable bullshit

[00:17] <Zoffix> ugexe: I'm complaining that instead of participating in dialogue, you ignored it.

[00:18] <ugexe> i did participate. i didnt participate in EVERY SINGLE THREAD on it

[00:18] <Zoffix> ugexe: and now when the dialog that did happen was summarized, you complain that your point wasn't the dominant one.

[00:19] <ugexe> give it a ret

[00:19] <ugexe> rest

[00:19] <Zoffix> Take your own advice.

[00:20] <ugexe> you heard it here. shut up ugexe and let me push my view unchallenged.

[00:20] <Zoffix> haha

[00:21] <Zoffix> Yeah, and yet I'm the "unstable" one.

[00:22] <Zoffix> You had a year and a half to challenge everything.

[00:22] <Zoffix> Instead you decided to self-exhile.

[00:22] <ugexe> I did challenge everything. And now I'm still here doing so.

[00:23] <Zoffix> ugexe: your challenge is not very convincing

[00:23] <ugexe> how many times have you self-exhiled, including removing all your perl6 code from the ecosystem? made a big show of it

[00:23] <ugexe> the difference is i just left irc

[00:24] <Zoffix> ugexe: a couple. But I'm not the one complaining that my point of view was not included somewhere.

[00:26] <ugexe> if that is how you are interpreting me voicing my opinion here, its incorrect

[00:27] <Zoffix> ugexe: Why not write a blog post similar to mine, except one that demonstrates why creation of the alias is more detrimental than the current situation (such as the Damian's incident)?

[00:27] <Zoffix> It'd be more productive than calling people's ideas shit and me unstable.

[00:27] <ugexe> that pretty patronizing after the conversation we just had

[00:28] <Zoffix> ugexe: you seem to be just looking for a fight.

[00:28] *** Zoffix left
[00:29] <ugexe> yeah i self exhiled and popped in here all of a sudden looking to fight

[00:29] <ugexe> because there is no way there could be any legitimacy to what i've said 

[00:35] <perlawhirl> hi perlers... I'm consistently getting a 'JIT ERROR: Negative offset for dynamic label 33' in some code... what would be the best way to troubleshoot the cause?

[00:35] *** aborazmeh left
[00:38] *** aborazmeh joined
[00:38] *** aborazmeh left
[00:38] *** aborazmeh joined
[00:38] *** p6bannerbot sets mode: +v aborazmeh

[00:39] *** p6bannerbot sets mode: +v aborazmeh

[00:44] <Kaiepi> i've never encountered a panic caused by libuv while testing before

[00:44] <Kaiepi> guess there's always a first

[00:45] *** aborazmeh left
[00:49] *** aborazmeh joined
[00:49] *** aborazmeh left
[00:49] *** aborazmeh joined
[00:49] *** p6bannerbot sets mode: +v aborazmeh

[00:50] *** p6bannerbot sets mode: +v aborazmeh

[00:51] <perlawhirl> I'm on Centos 6. As it uses an older gcc/libc, I tend to hit bugs most users on more modern OS's do not :D

[00:52] <AlexDaniel> perlawhirl: the last JIT ERROR I saw was golfed to one line, so maybe try golfing it

[00:52] <AlexDaniel> perlawhirl: also please file a ticket

[00:53] *** aborazmeh left
[00:53] <perlawhirl> i've tried golfing it a little... but it occurs when I'm creating a bunch of objects using my module Net::Netmask. The object creation doesn't seem to do anything special, but i'll see if i can whittle it down to a root cause, and will raise a ticket

[00:54] <Kaiepi> if you're a masochist you could compile gcc8 yourself

[00:54] <Kaiepi> trust me it takes hours

[00:55] <AlexDaniel> perlawhirl: you can file a ticket without a golf, and provide a golf later when you have it

[00:56] <AlexDaniel> for example, if you have steps to reproduce, that is helpful too

[01:04] <MasterDuke> perlawhirl: i believe brrt fixed one cause of those kinds of errors recently, are you on HEAD? i think there have been some other reports after his fix, but am not 100% sure

[01:15] <perlawhirl> yeah, i rebuilt from HEAD this morning after I saw lizmat's commit that referenced 'bit shift JIT' hoping it would fix the issue

[01:15] <perlawhirl> but still occuring

[01:20] *** lichtkind left
[01:22] <b2gills> There was a recent change that caused (nearly) silent errors to stop being so silent

[01:23] <b2gills> m: my $a = ('a' x 200).comb; $a ~~ s:g/<ws>//

[01:23] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´JIT ERROR: Negative offset for dynamic label 32‚ê§¬ª

[01:23] <AlexDaniel> b2gills: ouch, is this one ticketed?

[01:23] <b2gills> That was on #perl6-dev

[01:30] <AlexDaniel> b2gills: thanks, I filed a ticket

[01:32] *** lichtkind joined
[01:33] *** p6bannerbot sets mode: +v lichtkind

[01:34] <timotimo> i do believe we've already rootcaused it and a fix is close to being committed

[01:50] *** jameslenz joined
[01:51] *** p6bannerbot sets mode: +v jameslenz

[02:02] <Kaiepi> supplies are supposed to be able to have multiple taps open at the same time right?

[02:13] <AlexDaniel> notable: Another SQUASHathon happened \o/. The winner is announced here: https://github.com/perl6/ecosystem/wiki/SQUASHathon#results

[02:13] <notable6> AlexDaniel, Noted!

[02:19] <AlexDaniel> I really liked the interactions during the squashathon. The idea of going to someone's repo and helping out is great

[02:19] <AlexDaniel> but it was hard, these repos didn't have enough LHFs I think

[02:20] <AlexDaniel> next month doc repo, should be somewhat easier I think

[02:20] <AlexDaniel> and I'm accepting ideas for December! :)

[02:22] <AlexDaniel> many interesting things can be done

[02:23] <AlexDaniel> there's advent calendar, v6.d release, etc.

[02:25] <SmokeMachine> LHF?

[02:25] <AlexDaniel> SmokeMachine: low-hanging fruit ‚Äì tickets that are easy to resolve

[02:25] <AlexDaniel> nowadays labeled with `good first issue` or `easy to resolve` labels on github

[02:25] <AlexDaniel> LHF was previously used on RT

[02:26] <AlexDaniel> and we switched from RT to github issues some time ago

[02:26] <Geth> ¬¶ doc: 757bdf9af6 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/math.pod6

[02:26] <Geth> ¬¶ doc: fix typos

[02:26] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/757bdf9af6

[02:26] <synopsebot> Link: https://doc.perl6.org/language/math

[02:28] <tbrowder__> congrats to JJ!

[02:28] <tbrowder__> aka jmerelo

[02:29] <Geth> ¬¶ mu: e1b1fa3519 | (Aleks-Daniel Jakimenko-Aleksejev)++ | misc/perl6advent-2018/schedule

[02:29] <Geth> ¬¶ mu: Start Advent 2018 Schedule

[02:29] <Geth> ¬¶ mu: review: https://github.com/perl6/mu/commit/e1b1fa3519

[02:31] <SmokeMachine> AlexDaniel: thanks

[02:35] <Geth> ¬¶ mu: 35ad0df630 | (Zoffix Znet)++ (committed using GitHub Web editor) | misc/perl6advent-2018/schedule

[02:35] <Geth> ¬¶ mu: Claim 1st

[02:35] <Geth> ¬¶ mu: review: https://github.com/perl6/mu/commit/35ad0df630

[02:35] <SmokeMachine> .tell jmerelo congratulations for The SQUASHathon! And thanks for helping Red!

[02:35] <yoleaux> SmokeMachine: I'll pass your message to jmerelo.

[02:37] <Xliff> \o

[02:37] <Xliff> What's the best way to write roles where one rule depends on the attributes of another?

[02:38] <Xliff> When I attempt to write the dependent one with no attributes and make it "also does Role1", it complains that the attribute is not define.

[02:38] <Xliff> If I define the attribute in two roles, it complains that there are duplicate roles when I assign the dependent role to an object.

[02:39] *** comborico1611 joined
[02:40] *** p6bannerbot sets mode: +v comborico1611

[02:40] <Geth> ¬¶ mu: eb0dce5e78 | (Zoffix Znet)++ (committed using GitHub Web editor) | misc/perl6advent-2018/schedule

[02:40] <Geth> ¬¶ mu: reword title

[02:40] <Geth> ¬¶ mu: review: https://github.com/perl6/mu/commit/eb0dce5e78

[02:47] *** lookatme_q joined
[02:47] *** lookatme_q left
[02:47] *** lookatme_r joined
[02:47] *** lookatme_q joined
[02:48] *** lookatme_q left
[02:48] *** p6bannerbot sets mode: +v lookatme_r

[02:57] *** comborico1611 left
[03:21] *** agentzh left
[03:22] *** agentzh joined
[03:22] *** p6bannerbot sets mode: +v agentzh

[03:33] *** cpup joined
[03:34] *** p6bannerbot sets mode: +v cpup

[03:40] *** Khisanth left
[03:45] *** regreg joined
[03:46] *** p6bannerbot sets mode: +v regreg

[03:46] *** ChoHag left
[03:49] *** nige_ joined
[03:49] *** MasterDuke left
[03:50] *** p6bannerbot sets mode: +v nige_

[03:50] *** nige left
[03:51] *** nige_ left
[03:52] *** nige_ joined
[03:52] *** rindolf joined
[03:52] *** p6bannerbot sets mode: +v nige_

[03:53] *** p6bannerbot sets mode: +v rindolf

[03:58] *** Khisanth joined
[03:59] *** p6bannerbot sets mode: +v Khisanth

[04:31] *** aindilis left
[04:31] *** aindilis joined
[04:32] *** p6bannerbot sets mode: +v aindilis

[04:49] <Xliff> \0

[04:49] <Xliff> How do you schedule an event to run every x ticks?

[05:13] <moritz> there's a Supply method for that, iirc

[05:15] *** ufobat_ joined
[05:15] <Geth> ¬¶ doc: 651d20bff4 | (Luis F. Uceta)++ | doc/Language/functions.pod6

[05:15] <Geth> ¬¶ doc: Rephrase sentence and add small example

[05:15] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/651d20bff4

[05:15] <Geth> ¬¶ doc: ef85fe00b7 | (Luis F. Uceta)++ | doc/Type/Signature.pod6

[05:15] <Geth> ¬¶ doc: Add few minor fixes.

[05:15] <synopsebot> Link: https://doc.perl6.org/language/functions

[05:15] <synopsebot> Link: https://doc.perl6.org/type/Signature

[05:15] <Geth> ¬¶ doc: 

[05:15] <Geth> ¬¶ doc: Remove I<> that wasn't being rendered inside C<>, fix a typo, etc.

[05:15] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ef85fe00b7

[05:15] <Geth> ¬¶ doc: f759c7d56d | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | 2 files

[05:15] <Geth> ¬¶ doc: Merge pull request #2366 from uzluisf/master

[05:15] <Geth> ¬¶ doc: 

[05:15] <Geth> ¬¶ doc: Rephase sentence and fix minor typo

[05:15] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f759c7d56d

[05:15] *** p6bannerbot sets mode: +v ufobat_

[05:17] *** jmerelo joined
[05:17] *** p6bannerbot sets mode: +v jmerelo

[05:35] *** regreg left
[05:44] *** regreg joined
[05:45] *** p6bannerbot sets mode: +v regreg

[05:46] *** AlexDani` joined
[05:47] *** p6bannerbot sets mode: +v AlexDani`

[05:51] *** AlexDaniel left
[05:56] *** nige joined
[05:57] *** p6bannerbot sets mode: +v nige

[05:57] *** nige_ left
[06:06] *** domidumont joined
[06:07] <jmerelo> Just in case someone is in the mood for answering SO questions: https://stackoverflow.com/questions/52696276/exporting-regexes-from-grammars

[06:07] <yoleaux> 7 Oct 2018 23:18Z <AlexDaniel> jmerelo: by any chance are you interested in this? http://colabti.org/irclogger/irclogger_log/perl6?date=2018-10-07#l884

[06:07] <yoleaux> 02:35Z <SmokeMachine> jmerelo: congratulations for The SQUASHathon! And thanks for helping Red!

[06:07] *** p6bannerbot sets mode: +v domidumont

[06:08] <jmerelo> .tell SmokeMachine thanks! Congratulations for what, exactly?

[06:08] <yoleaux> jmerelo: I'll pass your message to SmokeMachine.

[06:09] <jmerelo> .tell uzl, AlexDaniel: I don't have much time for translations. There's a small, but enthusiastic, Perl Spanish translation team that would probably be willing to help, anyway.

[06:09] <yoleaux> jmerelo: What kind of a name is "uzl,"?!

[06:09] <jmerelo> .tell uzl: I don't have much time for translations. There's a small, but enthusiastic, Perl Spanish translation team that would probably be willing to help, anyway.

[06:09] <yoleaux> jmerelo: What kind of a name is "uzl:"?!

[06:09] <jmerelo> .tell uzl I don't have much time for translations. There's a small, but enthusiastic, Perl Spanish translation team that would probably be willing to help, anyway.

[06:09] <yoleaux> jmerelo: I'll pass your message to uzl.

[06:10] <jmerelo> .tell uzl I can take a look anyway. 

[06:10] <yoleaux> jmerelo: I'll pass your message to uzl.

[06:11] <jmerelo> .tell SmokeMachine I got the Camelia! Woohooo! I didn't know...

[06:11] <yoleaux> jmerelo: I'll pass your message to SmokeMachine.

[06:12] *** fake_space_whale left
[06:13] *** zakharyas joined
[06:14] *** p6bannerbot sets mode: +v zakharyas

[06:16] *** zakharyas left
[06:18] *** zakharyas joined
[06:18] *** p6bannerbot sets mode: +v zakharyas

[06:27] *** cbk1090 joined
[06:28] *** p6bannerbot sets mode: +v cbk1090

[06:36] *** abraxxa joined
[06:37] *** p6bannerbot sets mode: +v abraxxa

[06:43] *** jmerelo left
[06:50] *** zakharyas left
[06:59] *** telex joined
[07:00] *** p6bannerbot sets mode: +v telex

[07:08] *** zakharyas joined
[07:09] *** p6bannerbot sets mode: +v zakharyas

[07:11] *** regreg_ joined
[07:12] *** p6bannerbot sets mode: +v regreg_

[07:15] *** regreg left
[07:19] <Xliff> .tell jmerelo At a guess, you are missing what would be self, since as a method, that is always passed first.

[07:19] <yoleaux> Xliff: I'll pass your message to jmerelo.

[07:20] <Xliff> .tell jmerelo Regarding your SO question re: grammars.

[07:20] <yoleaux> Xliff: I'll pass your message to jmerelo.

[07:34] *** kurahaupo left
[07:35] *** Kaiepi left
[07:36] *** kurahaupo joined
[07:36] *** p6bannerbot sets mode: +v kurahaupo

[07:39] *** Kaiepi joined
[07:40] *** p6bannerbot sets mode: +v Kaiepi

[07:40] *** regreg_ left
[07:46] *** ToddAndMargo joined
[07:46] *** p6bannerbot sets mode: +v ToddAndMargo

[07:49] <ToddAndMargo> Hi All!   Question: I am using `read` to read the first 400 bytes of a unknown file (could be a binary file).  Once I have these 400 bytes in a variable of type "Buf", how do I turn that variable into something (a string?) that will allow me to use "contains" to search for patterns of characters?

[07:50] <ToddAndMargo> p6 'my $fh=open "/home/linuxutil/To", :r; my Buf $f = $fh.read( 400 ); $fh.close; my $g=$f.Stringy; say so $g.contains( chr(0) );' Cannot use a Buf as a string, but you called the Stringy method on it   in block <unit> at -e line 1

[07:50] <buggable> New CPAN upload: File-XML-DMARC-Google-0.1.0.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/File-XML-DMARC-Google-0.1.0.tar.gz

[08:01] *** zakharyas left
[08:01] <moritz> ToddAndMargo: you have to decode it

[08:02] <moritz> ToddAndMargo: and you can use Latin-1 as the encoding

[08:04] <ToddAndMargo> Can you point me to the directions?

[08:04] *** zakharyas joined
[08:04] <ToddAndMargo> I just want to dig trouhg the bytes to see if it contains any 0H000's

[08:04] <moritz> https://docs.perl6.org/type/Buf.html

[08:05] *** p6bannerbot sets mode: +v zakharyas

[08:05] <ToddAndMargo> buf8 	Buf[uint8]   ?

[08:07] <ToddAndMargo> 0H00   added an extra zero

[08:07] *** zakharyas left
[08:08] *** kensanata joined
[08:08] *** p6bannerbot sets mode: +v kensanata

[08:17] <ToddAndMargo> I will ask on the mailing list.

[08:20] <pmurias> Zoffix: two big problems behind an official alias are that it creates confusion (for people that don't realize that it's really Perl 6) and creates resentment in some Perl 5 programmers (as it plays into the Perl 5 brand is dead sentiment)

[08:20] <buggable> New CPAN upload: File-Zip-0.1.1.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/File-Zip-0.1.1.tar.gz

[08:21] *** ToddAndMargo left
[08:26] *** Ven` joined
[08:27] *** p6bannerbot sets mode: +v Ven`

[08:28] <Xliff> m: "hello".encode.say

[08:28] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´utf8:0x<68 65 6C 6C 6F>‚ê§¬ª

[08:29] <Xliff> m: "hello\0\0".encode.decode('utf8').contains( chr(0) )

[08:29] <camelia> rakudo-moar 8bb34ff07: ( no output )

[08:29] <Xliff> m: "hello\0\0".encode.decode('utf8').contains( chr(0) ).say

[08:29] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´True‚ê§¬ª

[08:29] <Xliff> m: "hello".encode.decode('utf8').contains( chr(0) ).say

[08:29] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´False‚ê§¬ª

[08:30] <Xliff> .tell ToddAndMargo "hello".encode.decode('utf8').contains( chr(0) ) ... You want the ".decode" part on.

[08:30] <yoleaux> Xliff: I'll pass your message to ToddAndMargo.

[08:39] *** Ven` left
[08:40] <buggable> New CPAN upload: File-XML-DMARC-Google-0.1.1.tar.gz by TYIL http://modules.perl6.org/dist/File::XML::DMARC::Google:cpan:TYIL

[08:40] *** Ven` joined
[08:41] *** p6bannerbot sets mode: +v Ven`

[08:46] *** lizmat joined
[08:46] *** p6bannerbot sets mode: +v lizmat

[08:50] *** pmurias left
[08:50] *** pmurias joined
[08:50] *** p6bannerbot sets mode: +v pmurias

[09:27] <pmurias> http://blogs.perl.org/users/pawel_murias/2018/10/rakudojs-update---it-has-been-merged-into-master-plus-6pad-unveiling.html # rakudo.js update

[09:27] <masak> woo

[09:27] <yoleaux> 7 Oct 2018 09:59Z <brrt> masak: re macros, it might be interesting for you to learn that since I implemented hygienic macros in the the expression template compiler, I can actually abstract things that I couldn't in C

[09:27] <masak> pmurias++

[09:28] <masak> brrt: that is interesting. we should have a chat sometime

[09:28] <masak> (simply because I need to keep the pool of peers whose brains stay solid when talking about macros as large as possible)

[09:33] <moritz> def not me :)

[09:35] *** Sgeo_ joined
[09:36] <masak> more than with any piece of software, with 007 I've felt how true the "debugging is twice as hard as writing the code" is

[09:36] *** p6bannerbot sets mode: +v Sgeo_

[09:36] <masak> just wait until you hit your first lexical-scoping-related bug

[09:37] <moritz> I remember that breakfast in Kopenhavn where we first discussed macros

[09:37] *** Sgeo left
[09:38] *** robertle joined
[09:39] <masak> that feeling when an over-eager parse causes a block entry to happen that shouldn't: https://github.com/masak/007/commit/e2dd3e66d0ac59d0af57e33ccc6d4a44aaf8d81b

[09:39] *** p6bannerbot sets mode: +v robertle

[09:39] <masak> &

[10:05] *** regreg_ joined
[10:06] *** p6bannerbot sets mode: +v regreg_

[10:11] <lichtkind> good morning 

[10:13] <lizmat> lichtkind  o/

[10:13] <lichtkind> hugs liz

[10:14] <lichtkind> does anyone knows what happened to https://perl6.party/post/A-Request-to-Larry-Wall-to-Create-a-Language-Name-Alias-for-Perl-6 ?

[10:14] <lizmat> it's still there ?

[10:14] <lichtkind> lizmat, so nowhere?

[10:15] <lizmat> page works for me ?

[10:15] <lichtkind> i mean the wish for second name

[10:15] <lichtkind> was this discussed?

[10:15] <moritz> many times

[10:15] <lizmat> https://www.reddit.com/r/perl6/comments/9m2k6l/a_request_to_larry_wall_to_create_a_language_name/e7cdgih/  # my opinion on the matter

[10:16] <lichtkind> moritz, i read rejected

[10:16] <moritz> lichtkind: renaming was rejected

[10:18] *** f3ew_ left
[10:18] <lichtkind> moritz, technically it was just an alias but allright, thank you both

[10:19] *** f3ew joined
[10:19] *** p6bannerbot sets mode: +v f3ew

[10:23] *** MilkmanDan left
[10:24] *** MilkmanDan joined
[10:24] *** p6bannerbot sets mode: +v MilkmanDan

[10:25] <moritz> lichtkind: the distinction between rename and alias are kinda important

[10:25] <moritz> *is

[10:28] <lichtkind> moritz, yes, that is why i asked since i knew the rename discussions well, but didnt heard about the alias thing

[10:30] <CIAvash> lichtkind: People have been talking about it, but TimToady hasn't said anything if that's what you're asking

[10:33] <pmurias> didn't TimToady agree that we can have aliases?

[10:33] <masak> lizmat: I like your summary

[10:33] <pmurias> having an "official" alias a bit like a covert way of getting a sort of a rename

[10:34] <masak> I won't throw my hat in the ring in the renaming debate; all I will say is that it will always be name "Perl 6" in my head -- for better or worse

[10:34] <masak> people can start calling it "Avocado" or whatever; my brain will still go "that's Perl 6 they're talking about"

[10:35] <CIAvash> pmurias: I meant that he has not responded to the blog post

[10:36] <moritz> ... and it's only been one way

[10:38] <lizmat> actually, not renaming Perl 6 may benefit Perl 5 as well

[10:39] * lizmat knows of at least one case where Perl is used *extensively* without upper management of the company knowing about it

[10:39] *** pmurias left
[10:39] *** regreg_ left
[10:39] <lizmat> and the dev team doesn't want anybody to know it's Perl that they're using

[10:40] *** pmurias joined
[10:40] *** p6bannerbot sets mode: +v pmurias

[10:40] *** sergot joined
[10:40] <lizmat> making Perl more reputable with Perl 6 may help them using Perl 5

[10:40] <lizmat> *keep using

[10:40] *** p6bannerbot sets mode: +v sergot

[10:41] <CIAvash> Right now I'm neutral because I don't know if it will make things better or worse. Although I have had frustrating expriences too.

[10:43] *** pmurias left
[10:44] <Kaiepi> is it possible to close an async server's socket?

[10:45] *** pmurias joined
[10:45] *** p6bannerbot sets mode: +v pmurias

[10:52] *** cgfbee joined
[10:53] *** p6bannerbot sets mode: +v cgfbee

[11:09] <Xliff> \o

[11:10] *** azawawi joined
[11:10] *** p6bannerbot sets mode: +v azawawi

[11:10] <azawawi> hi

[11:12] <Xliff> m: say gather { for (^10) { take if .is-prime }; }; 

[11:12] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´take without parameters doesn't make sense‚ê§  in block  at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[11:12] <Xliff> m: say gather { for (^10) { take $_ if .is-prime }; }; 

[11:12] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´(2 3 5 7)‚ê§¬ª

[11:12] <Xliff> m: say gather { for (^10) { .take if .is-prime }; }; 

[11:12] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´(2 3 5 7)‚ê§¬ª

[11:12] <Xliff> \o/

[11:12] <azawawi> https://github.com/azawawi/ide-perl6 # syntax checking now works üéâ WIP for other features and releasing the final thing to atom before the weekend hopefully üôÇ

[11:13] <Xliff> Oooh! For Atom? 

[11:13] <Xliff> azawawi++

[11:13] *** pmurias left
[11:14] <azawawi> Xliff: and for VSCode, neovim, vim , etc afterwards :)

[11:14] * lizmat looks forward on being able to report that for next week's P6W  :-)

[11:14] <azawawi> all-in-one :)

[11:14] *** wamba joined
[11:14] <azawawi> https://microsoft.github.io/language-server-protocol/specification  # for reference

[11:15] *** p6bannerbot sets mode: +v wamba

[11:15] *** pmurias joined
[11:15] *** p6bannerbot sets mode: +v pmurias

[11:16] *** sena_kun joined
[11:17] *** p6bannerbot sets mode: +v sena_kun

[11:18] <Kaiepi> i'm so happy i'll finally be able to use code that i need for Net::Telnet like this if my pullreqs get merged https://hastebin.com/foxaqoquge.pl

[11:23] <azawawi> lizmat: ping

[11:23] <lizmat> pong

[11:24] <wamba> p6:  (1  ... {!.say}).head(3)

[11:24] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[11:25] <wamba> p6: (1,2  ... {!.say}).head(3)

[11:25] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´1‚ê§2‚ê§2‚ê§3‚ê§¬ª

[11:25] <azawawi> lizmat: What's our replacement for std.pm6 parsing in perl6 nowadays? so we can generate p6 program structure outline view

[11:25] <wamba> p6: (1,*+1  ... {!.say}).head(3)

[11:25] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[11:25] <lizmat> azawawi: I'm not sure, maybe moritz masak jnthn know ?

[11:26] <lizmat> m: dd (1,*+1  ... {!.say}).head(3)

[11:26] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´1‚ê§(1, 2, 3).Seq‚ê§2‚ê§3‚ê§¬ª

[11:26] <azawawi> lizmat: i remember a perl6 --target=something output some ast

[11:27] <lizmat> ah that, --target=ast for initial AST

[11:27] <timotimo> there's --output=parse, ast, and optimize

[11:27] <timotimo> --stagestats gives you every stage you can put into --target, though not every stage can be dumped to the console

[11:28] <azawawi> cool thx

[11:29] <azawawi> the animated gif in https://github.com/rust-lang-nursery/atom-ide-rust explains what services we need to implement (find definition, outline, hover, etc)

[11:31] <wamba> p6: (1,2  ... {!.say}).head(3)

[11:31] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´1‚ê§2‚ê§2‚ê§3‚ê§¬ª

[11:31] <wamba> why is there "2" tests two times?

[11:33] *** araraloren joined
[11:33] <timotimo> https://tio.run/##K0gtyjH7/1/DUMdIQU9PT6HaKTE5u6QoMTlVLy@1XC@tNCdHrzix0lpBEUTVauplpCamaBhr/v8PAA

[11:34] *** p6bannerbot sets mode: +v araraloren

[11:34] <timotimo> https://github.com/rakudo/rakudo/blob/master/src/core/operators.pm6#L194

[11:35] <timotimo> https://github.com/rakudo/rakudo/blob/master/src/core/operators.pm6#L427

[11:36] <azawawi> source code formatting => Perl6::Tidy maybe, keyword help => farabi6, rename => ??, goto-definition => ?? (we need to do some ast), outline => same thing

[11:36] <timotimo> the first one is on the stack when 2 gets printed the first time, the second one is on the stack, in between lines 212, 432, and 444, when the second 2 is printed

[11:39] <azawawi> lizmat: thanks

[11:39] * azawawi work &

[11:40] *** azawawi left
[11:41] <Xliff> If people have the time, would you mind looking at this and commenting?

[11:41] <Xliff> https://github.com/Xliff/p6-GtkPlus/blob/master/lib/GTK/Roles/Properties.pm6

[11:42] <Xliff> I think I have it right. Just want to make sure my use of gather/take is proper. It usage just clicked like 40 minutes ago.

[11:43] *** epony left
[11:43] <araraloren> gather take is slower than the normal way

[11:43] <yoleaux> 7 Oct 2018 17:41Z <El_Che> araraloren: ping me about the rakudo-pkg problem so we can have a look. Feel free to raise an issue in github

[11:45] <Xliff> araraloren: What's the "normal" way? .grep?

[11:45] <Xliff> And how much of a performance hit are we talking?

[11:45] <wamba>  timotimo: thank you for explanation 

[11:45] <araraloren> yeah, Make a new Array, or grep

[11:46] <Xliff> araraloren: Ah! Thanks.

[11:46] <timotimo> lazy hashes don't actually exist

[11:46] <timotimo> so the gather there would immediately be eager-ified

[11:46] <timotimo> the code should be equivalent to %( do for (...) { @names[$_] => @values[$_] } )

[11:46] <araraloren> Xliff IDK, but it is slower, and I think you don't need that

[11:47] <Xliff> araraloren: OK! Thanks for that tip. I will look at redoing it.

[11:47] <araraloren> welcome

[11:47] <Xliff> But... I kinda wanna leave it after I went through the trouble of finally grokking

[11:47] <Xliff> :)

[11:49] <wamba> p6: say 1,2,3,4,5  ... * > *'

[11:49] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3say 1,2,3,4,5  ... * > *7‚èè5'‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        statemen‚Ä¶¬ª

[11:49] *** nige left
[11:49] *** ZzZombo joined
[11:49] *** p6bannerbot sets mode: +v ZzZombo

[11:49] <wamba> p6: say 1,2,3,4,5  ... * > *

[11:49] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´(1 2 3 4)‚ê§¬ª

[11:49] <Xliff> timotimo: Oh! Thanks.

[11:50] <Xliff> So is gather take more for lazyness?

[11:50] <Xliff> s/lazyness/laziness/

[11:50] <araraloren> yeah

[11:51] <timotimo> i'd say so, though there's an optimization for when gather/take is used in an eager context

[11:51] <timotimo> normally take will store a continuation of the gather block so that the next .pull-one can resume the code where it left off

[11:51] <Xliff> Ah!

[11:51] <timotimo> but when it's eager, it'll just push the value to the result array and continue without going through the continuation mechanism

[11:52] <lizmat> timotimo: does it ?

[11:52] <timotimo> i believe so

[11:53] <Xliff> The only reason why I used that is because I didn't realize the pairs would propagate to the return. Is that the result of 'do'?

[11:53] <ufobat_> sena_kun, have you had some time to look into it, or should i make another issue out of my gist?

[11:53] <timotimo> do is used to turn a for loop into an expression

[11:54] <Xliff> Right. OK. I just never thought to use it in a loop. I always use 'do' to take the last value of a block and assign to a variable.

[11:54] <timotimo> if for doesn't come right at the start, or after a "do", it'll be interpreted as a statement-end-for, and then the parser will get confused by the presence of a block

[11:54] <Xliff> TIL!

[11:55] <sena_kun> ufobat_, sorry, not yet. Yesterday I was not able to get out of my bad, yet alone code something properly, and the amount of things is not decreasing either. :/

[11:55] <Xliff> So would the !checkNames and !checkValues methods be better written with .grep?

[11:56] <sena_kun> ufobat_, I think, please, open an issue with some details / a gist to reproduce and we'll work on it eventually, sorry again.

[11:56] <timotimo> Xliff: i personally would use grep, yeah

[11:56] <Xliff> OK, thanks!

[11:57] <Xliff> araraloren++ && timotimo++

[11:57] <timotimo> another thing is that when you "die" inside a gather/take and it's being consumed lazily, then the exception will arrive while iterating

[11:57] <timotimo> if you do it eagerly, it'll be thrown immediately when !checkNames is "still running"

[11:59] <Xliff> So... better with .map -- not .grep

[12:00] <timotimo> it's fine to die inside of grep, too

[12:00] <ufobat_> sena_kun, no need to say sorry :-) 

[12:01] <Xliff> Yeah, but I need to return a list of either Str or GValue objects, especially if they need to be co-erced.

[12:01] <timotimo> oh

[12:02] <timotimo> right, map makes more sense in that case

[12:02] <timotimo> seems like my waking up hasn't finished yet

[12:02] <Xliff> :)

[12:02] <Xliff> Last thing.

[12:02] <Xliff> If I need a type coerced to a specific type in a specific package, will calling the fully packaged type name be sufficient?

[12:03] <Xliff> So if my GValue is in A::B, then can I do self.A::B::GValue()

[12:04] <timotimo> coercions are implemented as methods on the object that are named the same as the type; i haven't ever thought about how it interacts with packages, but what A::B::GValue will give you is the method that A::B provides which is looked up in self

[12:04] <timotimo> so that will only work if your self also inherits from or mixes in A::B

[12:04] <Xliff> Ah. That's weird.

[12:05] <wamba> p6: say 1,2,3 ... { say "$^a,$^b"; $^a > $^b }

[12:05] <camelia> rakudo-moar 8bb34ff07: OUTPUT: ¬´1,2‚ê§2,3‚ê§3,2‚ê§(1 2)‚ê§¬ª

[12:05] <timotimo> it's for when you want to call superclass' implementations of a specific method

[12:05] *** pmurias left
[12:05] <timotimo> or when you want to disambiguate between roles that offer the same method

[12:05] <Xliff> Because when I have something like sub(GValue() $v) { ... }, I needed to create "method A::B::GValue" to return the coerced type.

[12:05] <timotimo> i'd expect it to "just" use GValue as the name in that case

[12:06] <timotimo> though i'd have to check

[12:06] <Xliff> Would it then be better to do "my GValue() $v = $my_object_to_coerce"

[12:06] <timotimo> it's possible to invoke a method called A::B::GValue, though, it just occurs to me

[12:06] <timotimo> self.'A::B::GValue'()

[12:06] <timotimo> that could be the right way to go about it

[12:06] <Xliff> aHA!

[12:06] <timotimo> anyway, i gotta go AFK for a bit

[12:06] <Xliff> I will check.

[12:06] <timotimo> i hope this leads to success

[12:06] <Xliff> It's kinda important, as this is the latest long-term refactor I have to do, now.

[12:07] <Xliff> So I need a path to completion. ;)

[12:07] <Xliff> Well, it compiles OK.

[12:07] <Xliff> This is promising.

[12:09] <timotimo> it really comes down to how GValue() is implemented, i.e. what exact method name the coercer will call for you

[12:10] <timotimo> BBL

[12:11] *** pmurias joined
[12:11] *** p6bannerbot sets mode: +v pmurias

[12:19] *** davidp left
[12:23] <jnthn> Kaiepi: Just be .close of the tap that comes back from .listen

[12:23] <jnthn> *by

[12:26] *** epony joined
[12:26] *** p6bannerbot sets mode: +v epony

[12:29] *** fake_space_whale joined
[12:30] *** p6bannerbot sets mode: +v fake_space_whale

[12:31] <Xliff> Hi, jnthn

[12:32] <jnthn> o/ Xliff 

[12:33] <Xliff> I think I am close to a not-so generic method of signal handling with Supplies. 

[12:33] <jnthn> :)

[12:33] <Xliff> The problem is that my first attempt at it isn't working. 

[12:34] <Xliff> This is a bit messy, but it is mostly working. 

[12:34] <Xliff> The only problem is that it doesn't draw anything.

[12:34] <Xliff> https://github.com/Xliff/p6-GtkPlus/blob/master/t/24-overlay.t

[12:34] <Xliff> LOL!

[12:35] <Xliff> That is a port of this: https://github.com/sweckhoff/GTK-Cairo-Sinusoids/blob/master/gtk_cairo_sinusoid_plot.c

[12:36] <Xliff> Is it possible to get two roles to use the same attribute?

[12:38] <lizmat> you mean with same name, or actually referring to the same attribute ?

[12:38] <lizmat> if the latter, then that can only be done if you make it a public attribute and use the accessor

[12:38] <lizmat> afaik

[12:39] <Xliff> lizmat: OK. So I HAVE to have get/set for that role so that it can be used by other roles.

[12:39] <Xliff> Damn.

[12:39] <lizmat> atm, afaik, yes

[12:40] <Xliff> I was hoping I was missing a trait. That way two roles can exist that use the same attribute. Especially when one role must work independently of the other.

[12:40] <Xliff> I guess the only way to accomplish that is to decouple the attribute from both roles and have them both use that role.

[12:40] <lizmat> m: role A { has $!a }; role B does A { method b { $!a } }

[12:40] <camelia> rakudo-moar 92735770f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Attribute $!a not declared in role B‚ê§at <tmp>:1‚ê§------> 3!a }; role B does A { method b { $!a } }7‚èè5<EOL>‚ê§¬ª

[12:40] <Kaiepi> which code are you talking about jnthn?

[12:40] <lizmat> m: role A { has $!a }; role B does A { method b { $.a } }

[12:40] <camelia> rakudo-moar 92735770f: ( no output )

[12:41] <Xliff> lizmat: Yes, but both roles need read-write.

[12:41] <lizmat> has $.foo is rw ?

[12:41] <Xliff> And in my case, Role A may not be used with Role B, but in most cases they are.

[12:42] <Xliff> So for that case...

[12:45] <Xliff> m: role ‚Ñµ { has %.foo is rw }; role A does ‚Ñµ { method a { %.foo<a> = 1; }; }; role B does ‚Ñµ { also does A;  method b { self.a %.foo<b> = 2; %.foo.gist}; };  class AA does B { method new { self.b }; }; Aa.new

[12:45] <camelia> rakudo-moar 92735770f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Attribute '%!foo' conflicts in role composition‚ê§at <tmp>:1‚ê§¬ª

[12:45] *** epony left
[12:46] <Xliff> See... that's a problem.

[12:46] <Xliff> Because sometimes A and B need to work together.

[12:47] <Xliff> m: role ‚Ñµ { has %.foo is rw }; role A does ‚Ñµ { method a { %.foo<a> = 1; }; }; role B does ‚Ñµ { method b { %.foo<b> = 2; %.foo.gist}; };  class AA does B { also does A; method new { self.a; self.b }; }; Aa.new

[12:47] <camelia> rakudo-moar 92735770f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Attribute '%!foo' conflicts in role composition‚ê§at <tmp>:1‚ê§¬ª

[12:47] <Xliff> m: role ‚Ñµ { has %.foo is rw }; role A does ‚Ñµ { method a { %.foo<a> = 1; }; }; role B does ‚Ñµ { method b { %.foo<b> = 2; %.foo.gist}; };  class AA does B { also does A; method new { self.a; self.b }; }; Aa.new;

[12:47] <camelia> rakudo-moar 92735770f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Attribute '%!foo' conflicts in role composition‚ê§at <tmp>:1‚ê§¬ª

[12:49] <lizmat> Xliff: abstract it into a role C that both A and B do ?

[12:50] <Xliff> It would be nice if ‚Ñµ could do "has %.foo is shared" so that multiple roles can compose it.

[12:50] <Xliff> lizmat: I thought that was what I was doing with role ‚Ñµ

[12:50] <Xliff> The problem comes when a class needs both A and B. See class AA in the above example.

[12:51] <lizmat> Xliff: but you're also doing A in B

[12:51] <lizmat> then you don't need to do M, right ?

[12:52] <lizmat> m: role ‚Ñµ { has %.foo is rw }; role A does ‚Ñµ { method a { %.foo<a> = 1; }; }; role B does ‚Ñµ { method b { %.foo<b> = 2; %.foo.gist}; };  class AA does B { method new { self.a; self.b }; }; Aa.new

[12:52] <camelia> rakudo-moar 92735770f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    Aa used at line 1. Did you mean 'AA'?‚ê§‚ê§¬ª

[12:52] <Xliff> lizmat: A previous example did that, yes. 

[12:52] <lizmat> m: role ‚Ñµ { has %.foo is rw }; role A does ‚Ñµ { method a { %.foo<a> = 1; }; }; role B does ‚Ñµ { method b { %.foo<b> = 2; %.foo.gist}; };  class AA does B { method new { self.a; self.b }; }; AA.new

[12:52] <camelia> rakudo-moar 92735770f: OUTPUT: ¬´No such method 'a' for invocant of type 'AA'. Did you mean 'b'?‚ê§  in method new at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:53] <lizmat> m: role ‚Ñµ { has %.foo is rw }; role A does ‚Ñµ { method a { %.foo<a> = 1; }; }; role B does A { method b { %.foo<b> = 2; %.foo.gist}; };  class AA does B { method new { self.a; self.b }; }; AA.new

[12:53] <camelia> rakudo-moar 92735770f: OUTPUT: ¬´Cannot look up attributes in a AA type object‚ê§  in method foo at <tmp> line 1‚ê§  in method a at <tmp> line 1‚ê§  in method new at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:53] <lizmat> hmmm

[12:53] *** regreg_ joined
[12:53] <Xliff> lizmat: ^^"

[12:54] <Xliff> Roles that shared an attribute never came up in the language design?

[12:54] *** p6bannerbot sets mode: +v regreg_

[12:54] <lizmat> not sure... was busy keeping myself alive when that happened

[12:54] <Xliff> Oh. Sorry to hear. Didn't mean to dredge up pain.

[12:54] <jnthn> Kaiepi: You asked earlier how to stop a server socket listening

[12:54] <yoleaux> 12:47Z <lizmat> jnthn: the difference between my $a := 42 and my \a = 42 appears to be one less QAST::Var(lexical $a :decl(var))

[12:55] <yoleaux> 12:47Z <lizmat> jnthn: is that something to pursue in the core setting, to get rid of those QAST::Var's ?

[12:55] <Xliff> I will try to find the right Synopsis

[12:55] <Kaiepi> oh

[12:55] <jnthn> lizmat: new is a constructor, you can't call an instance method in there

[12:55] <Kaiepi> but doesn't the socket for the server object still exist?

[12:56] <masak> Xliff: roles do share an attribute, no?

[12:56] <Xliff> masak: Aparently not.

[12:56] <Xliff> m: role ‚Ñµ { has %.foo is rw }; role A does ‚Ñµ { method a { %.foo<a> = 1; }; }; role B does ‚Ñµ { method b { %.foo<b> = 2; %.foo.gist}; };  class AA does B { also does A; method new { self.a; self.b }; }; Aa.new;

[12:56] <camelia> rakudo-moar 92735770f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Attribute '%!foo' conflicts in role composition‚ê§at <tmp>:1‚ê§¬ª

[12:57] <masak> Xliff: right, just noticed

[12:57] <Xliff> :)

[12:57] <jnthn> Kaiepi: Exist where?

[12:58] <jnthn> Xliff: Sorry, tad tied up with work at the moment so can't look through the code in detail right now

[12:58] <Kaiepi> wait, i'm forgetting the socket is just an int when it's not listening or anything

[12:58] <masak> Xliff: in some sense, this makes sense -- roles are composed, so a collision is sort of the easiest thing that can happen

[12:58] <Xliff> jnthn: No problem. Take your time. I have a large scrollback for a reason.

[12:58] <Xliff> masak: I agree. I was hoping there was an elegant workaround, however.

[12:59] <Xliff> I have a hack. But those are nasty.

[12:59] <jnthn> Kaiepi: Pretty sure at the MoarVM level we drop the listener from the active handles and then it all becomes collectable

[12:59] <masak> Xliff: oh, right, you're the person on this channel who runs into a problem and then keeps beating your head against it instead of compromising and moving on :P

[12:59] <Kaiepi> ah

[12:59] <masak> Xliff: no offense -- it's probably a great way to learn things

[12:59] <Xliff> masak: :P

[12:59] <Xliff> I solved the last one, BTW.

[12:59] <masak> great

[12:59] <Xliff> Well... lizmat did.

[12:59] <Kaiepi> right, the socket doesn't get created until the server's tapped iirc

[12:59] <Xliff> It was a bug.

[13:00] *** tison joined
[13:00] *** p6bannerbot sets mode: +v tison

[13:00] <Xliff> masak: And I did compromise. I have a hack. It does work. It just puts extra responsibility on the invoking classes.

[13:00] <Xliff> Which is fine, as long as it works.

[13:00] <jnthn> Kaiepi: Yes, indeed.

[13:01] <Xliff> I am not as dense as you think I am.

[13:01] *** wamba left
[13:01] <lizmat> m: role ‚Ñµ { has %.foo is rw }; role A does ‚Ñµ { method a { %.foo<a> = 1; } }; role B does A { method b { %.foo<b> = 2; %.foo.gist } }; class AA does B { method bar { self.a; self.b } }; AA.new.bar  # Xliff this seems to work ?

[13:01] <camelia> rakudo-moar 92735770f: ( no output )

[13:01] <masak> Xliff: again, no offense intended. I was once where you are now, asking about everything. it's a great way to learn.

[13:01] <masak> Xliff: specifically, I did not imply you're in any way dense

[13:01] <Xliff> :)

[13:01] <masak> Xliff: just that you have a tendency to tilt at problems as if they're windmills

[13:02] <masak> if anything, I recognize that trait in myself ;)

[13:02] <Xliff> LOL

[13:02] <Xliff> You sould look at my latest windmill.

[13:02] <Xliff> https://github.com/Xliff/p6-GtkPlus

[13:02] * masak <-- has been trying to implement macro hygiene semantics for 3.5 years now

[13:03] <moritz> I kinda remember that masak++ was very good at work-arounding when writing the November wiki

[13:03] <masak> ah, memories

[13:03] <masak> yeah. first do the workaround, then file the RT tickets

[13:03] <masak> and discuss on channel. great way to learn indeed

[13:04] <Xliff> I just attained enlightenment on gather/take.

[13:04] <masak> Xliff: anyway, I distinctly remember discussing attribute (non-)merging in role composition back in the day

[13:04] <Xliff> And then proceeded to completely remove all of the code I wrote that used it.

[13:05] <Xliff> masak: I can understand the reason behind not wanting to merge attributes, but there are situations in mixing where it would be helpful.

[13:05] <jast> you're one step ahead of me, then... I know I need to delete a fair bit of code, but I still have to make up my mind which fair bit it will be :)

[13:06] <Xliff> Particularly when two roles can work independently doing a portion of the same work.

[13:06] <Xliff> jast: Heh. I know. I shed one tear when I did it. Just one.

[13:06] <jast> one of my most productive days I wrote 1000 lines of code... and deleted 3000

[13:07] <Xliff> One step forward and three steps back.

[13:07] <masak> Xliff: seems to me attribute merging could just as easily be a convenience as it could be a trap for the unwary

[13:07] <Xliff> But that's only bad when you are trying to go somewhere.

[13:07] <Xliff> When you can remove code and make it better, you are doing something right.

[13:07] <jast> well, no user-visible changes as a result

[13:07] <jast> I basically despaghettized an inherited codebase

[13:08] <Xliff> masak: And how many other features of Perl6 could be put in that same bucket? :)

[13:08] <masak> that's not a particularly good counterargument

[13:08] <masak> Xliff: I mean, it could just as easily be "the same" attribute used from two roles, as it could be two distinct attributes that just happen to share a name

[13:08] <masak> I do not look kindly on an argument such as "other features are potentually dangerous too, so let's be less careful with this one!"

[13:08] <Xliff> Yes. That's why I like the idea of decoupling the attribute and its accessors from the roles that use it. 

[13:09] <jast> I like the "pit of success" argument: make the behaviour the default which has the least potential for misuse and surprises

[13:09] <Xliff> You could then add a trait "is shared" to allow roles to merge that attribute if used together.

[13:10] <Xliff> masak: Not to belittle your point, but I have run into a use-case where it would be more elegant to have a shared attribute between roles, than to have them implement different, stand-alone ones.

[13:10] <jast> in that sense I wouldn't mind this as an optional behaviour, but I'm not sure what would be a good way of making it available

[13:10] <Xliff> Arguably, I'd need to see your arguments against to determine if my use-case is worth attention.

[13:11] <masak> jast: yes, agreed.

[13:11] <Xliff> For now, each role has its own attribute, but each object will need to free each individual list, when the code to do that cleanup is the same, regardless of role.

[13:12] <Xliff> Yes, that cleanup code is abstracted, but it would be nice to make one call instead of umpteen.

[13:12] <masak> m: role R { has $!x = "OH HAI" }; class C does R { method foo { say $!x } }; C.new.foo

[13:12] <camelia> rakudo-moar 92735770f: OUTPUT: ¬´OH HAI‚ê§¬ª

[13:12] <masak> Xliff: attributes are not private to roles

[13:12] <Xliff> (and yes, I exaggerate)

[13:13] *** AlexDani` is now known as AlexDaniel

[13:13] <Xliff> masak: Yes. However you miss the point of my argument. :/

[13:13] <Xliff> m: role ‚Ñµ { has %.foo is rw }; role A does ‚Ñµ { method a { %.foo<a> = 1; }; }; role B does ‚Ñµ { method b { %.foo<b> = 2; %.foo.gist}; };  class AA does B { also does A; method new { self.a; self.b }; }; Aa.new;

[13:13] <camelia> rakudo-moar 92735770f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Attribute '%!foo' conflicts in role composition‚ê§at <tmp>:1‚ê§¬ª

[13:14] <Xliff> When role A and B are used together, it's intended that they use the same attribute to store their resource use.

[13:14] <masak> Xliff: my point is this: if (in your proposed semantics) attributes are not shared by default, by what mechanism do they not collide if several distinct ones of the same name are composed in a class?

[13:14] <Xliff> Ah! I see.

[13:15] <Xliff> In that example, as long as a role does ‚Ñµ, then it is shared.

[13:15] <Xliff> However if another role comes along that defines %.foo, it is a conflict.

[13:16] <jast> hmm, that actually makes sense to me

[13:16] <Xliff> If a role does ‚Ñµ and still defines %.foo, it is a conflict

[13:16] <Xliff> (actually, it would be a redeclaration...)

[13:17] *** zxcvz joined
[13:17] <masak> I like how you needed to `also does A;` to expose your problem :P

[13:17] <jast> this would require tracking the origin of each attribute definition... I'm not familiar with the current implementation though

[13:17] <Xliff> In that situation, you could say that said role would override the shared %.foo

[13:17] <Xliff> But that behavior is out-of-scope.

[13:17] *** p6bannerbot sets mode: +v zxcvz

[13:17] <Xliff> masak: That is exactly the point, though.

[13:18] <Xliff> Both A and B do ‚Ñµ which has a shared %.foo.

[13:18] <Xliff> And in that case, the collision isn't a collision at all!

[13:18] *** reportable6 left
[13:18] *** reportable6 joined
[13:19] *** p6bannerbot sets mode: +v reportable6

[13:20] *** Zoffix joined
[13:20] *** p6bannerbot sets mode: +v Zoffix

[13:20] <Zoffix> pmurias: and having a "Perl 6" doesn't create resentment in Perl 5 folks?

[13:20] <Zoffix> pmurias: and having everyone pick arbitrary names when they're asked not to name the language they're presenting doesn't create confusion?

[13:23] <pmurias> Zoffix: at YAPCs I haven't seen resentment in Perl 5 folks towards Perl 6

[13:23] <masak> besides which, I do not want to shoulder someone else's resentment, whatever the reason

[13:23] <Zoffix> I trust moritz's description of Damian's incident is true, in which case IMO the naming issue is a lot worse than I thought. I don't know how you can completely ignore that and say that nothing's wrong.

[13:24] <pmurias> Zoffix: I don't ignore that, I understand the reasons for not wanting to use the Perl name

[13:25] <pmurias> Zoffix: there is some online, but largely the sentiment in real life from Perl 5'ers is that it's super cool and from some of the high profile Perl 5er would switch often if it wasn't slow

[13:25] <El_Che> I think most people accept there is a problem

[13:25] <El_Che> but some believe it will go away with time, some don't

[13:25] <Zoffix> pmurias: it's already being used. All I'm saying is let's agree on a single alternate name to use instead of making up wizard names each time.

[13:26] <AlexDaniel> El_Che: I'm not so sure about that

[13:26] * masak writes some Perl 6 instead of discussing its name

[13:27] <pmurias> Zoffix: you don't need to have an "official" alias to agree on it

[13:27] *** epony joined
[13:27] *** p6bannerbot sets mode: +v epony

[13:28] <El_Che> AlexDaniel: are there people in the "there is no problem"-camp?

[13:29] <El_Che> let's call it masak ("Masak: it gets shit done")

[13:29] <Zoffix> pmurias: in my backlog a screen above, a Rakudo core developer is calling me unstable and mentally ill for merely compiling the naming discussions together in one blog. How long does your plan of agreeing on one unofficial alias will take?

[13:30] <Kaiepi> go and golang are synonymous and people have no problem with it

[13:30] <Zoffix> pmurias: I want TimToady to pick an official alias to put all these discussions to rest.

[13:32] <pmurias> Zoffix: that's the effect trying to get rid of the Perl names will have on some people

[13:32] <Zoffix> pmurias: but that's not what we're doing.

[13:33] <AlexDaniel> Zoffix: I appreciate your work on that issue

[13:33] <AlexDaniel> and I'm happy that it's moving somewhere

[13:33] <AlexDaniel> finally

[13:33] <Zoffix> pmurias: the alternate name is already in use. "Camelia" on Perlmonks, "Rakudo" in some other places, "Albus" in Damian's talk when he was asked not to say the language name. We're not moving anywhere from any Perls. We're not splitting any confs. We're just merging all those made up names into a single one to have some consistency.

[13:34] <pmurias> Zoffix: sure, but it looks a lot like that

[13:35] <AlexDaniel> El_Che: you've seen it already, I think it's one of the examples http://colabti.org/irclogger/irclogger_log/perl6?date=2018-10-07#l640

[13:35] <Zoffix> AlexDaniel: I don't think it's moving anywhere. The alias proposal was the first thing on 6.d-prep TODO list and no one blinked an eye. Now that's it's finally done, suddenly I'm unstable.

[13:35] <pmurias> Zoffix: I feel like Larry picking an official alias would be giving it "official" support

[13:36] *** regreg_ left
[13:36] <Zoffix> pmurias: and why is that bad?

[13:37] <AlexDaniel> Zoffix: don't worry about it too much, any change is hard

[13:37] <pmurias> because it gives it make it seem like the alias is more official than the "Perl 6" name itself

[13:37] <jast> I kind of doubt that

[13:38] <jast> it's not like the moment an official name is announced all the URLs and the tagline on the official website will change

[13:38] <AlexDaniel> Zoffix: my university changed it' name. This required domain name change (so all emails are now also different) as well as all printed labels, signs, etc. had to be changed as well

[13:38] <Zoffix> pmurias: that logic doesn't make sense to my mind.

[13:38] <AlexDaniel> Zoffix: it was fun to watch, especially in context of an alias for perl¬†6

[13:38] <Zoffix> AlexDaniel: many vendors at my job change logos, names, etc. That includes all the packaging changes.

[13:38] <jast> *official alias. my bad.

[13:39] *** pmurias left
[13:39] <AlexDaniel> Zoffix: also people (who work in the university) are unhappy, because they don't like the name or whatever

[13:39] <Zoffix> heh

[13:39] <AlexDaniel> even though it is technically better

[13:39] <Zoffix> .oO( South Hampton Institute of Technology )

[13:40] * jast .oO( People's Front of Judea )

[13:40] <SmokeMachine> .

[13:40] <yoleaux> 06:08Z <jmerelo> SmokeMachine: thanks! Congratulations for what, exactly?

[13:40] <yoleaux> 06:11Z <jmerelo> SmokeMachine: I got the Camelia! Woohooo! I didn't know...

[13:40] *** pmurias joined
[13:40] *** p6bannerbot sets mode: +v pmurias

[13:40] <SmokeMachine> .tell jmerelo :)

[13:40] <yoleaux> SmokeMachine: I'll pass your message to jmerelo.

[13:42] <pmurias> Zoffix: that's at least how I view the intentions behing the proposal

[13:43] <pmurias> * viewed

[13:43] *** mahafyi joined
[13:44] <pmurias> Zoffix: btw have you consider refering to Perl 6 just as "6"

[13:44] <Zoffix> pmurias: it would be of equal status to "Perl 6", in fact, slightly less, given the $*PERL dyn var, PERL6_* env var, `perl6` binary, etc.

[13:44] *** p6bannerbot sets mode: +v mahafyi

[13:44] <Zoffix> pmurias: what about just a blank space?

[13:44] <AlexDaniel> Zoffix: another possibly related issue was RT ‚Üí GitHub switch. A lot of people were against and didn't see any problem, then suddenly nobody wants to touch RT anymore

[13:45] <AlexDaniel> even though I agree that GitHub is LTA, and maybe especially after Microsoft acquisition. But for development and for users, from convenience standpoint, it's just better

[13:45] <Zoffix> AlexDaniel: oh yeah, I remember the huge winging and bikeshedding against the switch and when we finally did no one even blank an eye.

[13:47] <Zoffix> And that's exactly why TimToady needs to pick an alias instead of hoping to come to agrement on an unofficial one. People love to discuss

[13:48] <Zoffix> Like, why would I refer to "Perl 6" as just "6"?

[13:49] <Zoffix> "Hacktoberfest! Send 5 PRs to 6 and win a shirt!"

[13:49] <Zoffix> "Local mongers today: 6 presentation!"

[13:50] <AlexDaniel> ahhh, that one made me chuckle

[13:50] *** knation joined
[13:50] *** p6bannerbot sets mode: +v knation

[13:51] <pmurias> Zoffix: I feel you just want a rename and are just trying to get it some roundabout manner

[13:51] <AlexDaniel> 6lang is basically that, just googleable and clearer

[13:52] <AlexDaniel> pmurias: so you're worried that people will prefer the alias so much that ‚Äúperl¬†6‚Äù will be given up completely?

[13:53] <AlexDaniel> because if they don't, ‚Äúperl¬†6‚Äù as the main name will just stay

[13:53] <AlexDaniel> and everyone who can't use it for any reason will just use the alias

[13:53] <AlexDaniel> everyone wins, no?

[13:54] *** aindilis left
[13:55] <Zoffix> pmurias: I do want a rename. Then people, including ugexe, said they don't want it. So as a compromise between two camps, the alias idea came to be. It can be a rename if the alias will become so much more popular than "Perl 6" that no one uses "Perl 6", but it will be a natural death of the name and not a result of some kind of secret mastermind scheme of mine. It's as I've said in my blog, the alias is the

[13:55] <Zoffix> means for the rename crowd to prove their claims of the alias being superior. If it isn't, then no one will use it and the "perl 6" name will stay dominant.

[13:55] <lizmat> Zoffix: that feels like an Edsel to me  :-(

[13:56] <Zoffix> lizmat: Edsel the car?

[13:56] <lizmat> yup

[13:58] <Zoffix> "Historians have advanced several theories in an effort to explain the Edsel's failure. Popular culture often faults the car's styling. Consumer Reports has alleged that poor workmanship was the Edsel's chief problem. Marketing experts hold the Edsel up as a supreme example of the corporate culture's failure to understand American consumers. Business analysts cite the weak internal support for the product

[13:58] <Zoffix> inside Ford's executive offices. According to author and Edsel scholar Jan Deutsch, the Edsel was "the wrong car at the wrong time."

[13:58] <Zoffix> lizmat: I don't see how unifying the alternate name people use fits into any of that.

[13:58] <pmurias> eta-lang is also doing the rename to hide the fact it's haskell on the jvm

[13:59] <pmurias> AlexDaniel: making the alias "official" seems to be like something that would give "official" status to the "we are getting rid of the Perl brand" movement

[14:01] <Zoffix> Think of it this way: if TimToady stays silent and no alias gets created, PerlMonks will continue to use "Camelia", I will start using "Rakudo" again, Damian will continue using "Albus" or some other wizard name, and ugexe will use "Perl 6". If TimToady makes Foo alias. PerlMonks will use "Foo", I will use "Foo", Damian will use "Foo", and ugexe will use "Perl 6". I see progress for the first three and no

[14:01] <Zoffix> change for the last one.

[14:01] *** regreg_ joined
[14:02] <Zoffix> pmurias: IMO ignoring the desire to get rid of the Perl brand will just lead to someone getting sufficiently fed up to make a hostile fork and move on.

[14:02] <moritz> I agree with Zoffix's reasoning here

[14:02] *** p6bannerbot sets mode: +v regreg_

[14:02] <lizmat> the idea of being the best thing to both worlds and winding up with something that does't please anybody

[14:03] <Zoffix> lizmat: to me, it's not best of both worlds but a compromise.

[14:03] <pmurias> Zoffix: why do you want to have TimToady choose the "official" "community alias"

[14:04] <Zoffix> pmurias: so I wouldn't have to eyeroll at proposals of using "6" as unofficial alias. Or "+-1" or "perlsex" or any other ridiculous proposal.

[14:05] <pmurias> all the renamers could just agree to a vote and vote

[14:05] <AlexDaniel> hehe yes everyone can just agree

[14:05] <Zoffix> pmurias: the "perlsex" won the last vote, as I recall

[14:06] *** wamba joined
[14:06] <moritz> an edict from our BDFL is the best way to achieve some form of common focus

[14:06] *** p6bannerbot sets mode: +v wamba

[14:06] <Zoffix> Ah, no it was third: https://www.perlmonks.org/?node_id=1217692

[14:07] <Zoffix> With Perl 6 and Perl++ being the top choices, both of which miss the point of the alias.

[14:08] <Zoffix> And yeah, Rakudo is the top one without "Perl" in it.

[14:08] <moritz> also, the selection of items to land on that list hasn't been democratic at all, and the poll was mostly directed at a Perl 5 audience

[14:11] <lizmat> indeed.  And at the current time, it would have one vote less for "Perl 6" because I've decided to not do Perlmonks anymore

[14:11] <lizmat> and I'm not the only one

[14:12] <lizmat> so that is a very biased poll indeed

[14:12] <lizmat> both in selection of options, as in the audience

[14:12] *** aindilis joined
[14:13] *** p6bannerbot sets mode: +v aindilis

[14:14] <Geth> ¬¶ p6-sake: 08ce6c0628 | (Aleks-Daniel Jakimenko-Aleksejev)++ | META6.json

[14:14] <Geth> ¬¶ p6-sake: Fix ‚Äúprovides‚Äù section (oops)

[14:14] <Geth> ¬¶ p6-sake: review: https://github.com/perl6/p6-sake/commit/08ce6c0628

[14:16] <Kaiepi> using rakudo as the secondary name would be like calling frontend javascript node.js

[14:16] <timotimo> except javascript has already had many implementations in the past that are still in use

[14:16] <Zoffix> lizmat: why are you not doing Perlmonks anymore?

[14:16] <lizmat> Because of all of the shit I got directed at me

[14:16] <timotimo> whereas the prior implementations of perl6 have all been discontinued, except for fanlang, which is to my knowledge not public

[14:17] <AlexDaniel> Kaiepi: yeah, it's really weird

[14:18] <Zoffix> Would the unofficial alias have a footing in the docs? As in, would a person writing documentation who prefers to use the alias instead of "Perl6" be able to use it in a sentence or would they be forced to use "Perl 6" always?

[14:18] <Kaiepi> i think the docs should use the official name

[14:18] <Kaiepi> but mention that the alias exists

[14:19] <moritz> only an official alias

[14:19] <AlexDaniel> Zoffix: I think docs can be neutral in most cases (i.e. not spelling out the name at all)

[14:19] <AlexDaniel> and it can depend on the document, too

[14:20] <AlexDaniel> for example 5to6 docs will surely use Perl¬†6 because that totally makes sense

[14:21] <Zoffix> Well, yeah, then unofficial alias doesn't really solve anything if people can't freely use it in official spaces. There's no selection of the fittest happening for the name. And the naming bikeshed will return eventually.

[14:23] <AlexDaniel> Zoffix: that's a different issue, and there are many possible solutions. I wouldn't worry about it too much

[14:23] <AlexDaniel> Zoffix: I'm just thinking out loud, but, for example, the name can depend on the domain

[14:24] <AlexDaniel> or something like that

[14:24] <pmurias> why should offiical spaces use a community alias?

[14:26] <Zoffix> pmurias: because otherwise we're not changing anything?

[14:26] <pmurias> you could have a docs.randomcrapname.org do automatically to a s// substituation

[14:26] <pmurias> s/do automatically/do automatically

[14:26] <pmurias> s/do automatically/automatically add :(

[14:27] <AlexDaniel> well, that's what I was trying to say, but without the word ‚Äúcrap‚Äù

[14:28] <AlexDaniel> still, IMO, in most cases there is a way to phrase things without saying the name all the time

[14:28] <AlexDaniel> we can open a ticket for that

[14:30] <Zoffix> AlexDaniel: so... picking the list of all the suggestions received so far (except "perlsex") and making a poll until 27th, and going with that as unofficial alias? Is that the plan?

[14:31] <AlexDaniel> Zoffix: it could be, but for clarity, what happened to the original idea of leaving it to TimToady? I may have missed something

[14:31] <AlexDaniel> ahhh you're saying unofficial

[14:32] <AlexDaniel> but again, why unofficial if we can first wait for the official one?

[14:32] <pmurias> Zoffix: you can even call that the "community alias" if it's chosen by a vote

[14:32] <AlexDaniel> I'm really missing something it feels like

[14:32] *** Ven` left
[14:33] *** regreg_ is now known as regreg

[14:33] <Geth> ¬¶ doc: finanalyst++ created pull request #2369: Language page categories

[14:33] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2369

[14:34] <Zoffix> AlexDaniel: well, I don't know if TimToady will even respond (he didn't say he'd pick one when I asked if he were open for making one last week). I rage-quitted our FB group because I got spammed to death by people saying they're against the rename. ugexe called me mentally unstable while dissing the idea of the alias as "this shit", and pmurias thinks I'm an evil mastermind weaving a scheme for a full rename.

[14:35] <AlexDaniel> Zoffix: ‚Ä¶ nice. Let's maybe wait a bit, if I was TimToady I'd prefer to think a bit before doing any decision

[14:35] <Zoffix> ok

[14:36] <AlexDaniel> Zoffix: it will work fine as a backup plan if something goes wrong, we will lose a bit of time but that's not too critical I think

[14:36] <Zoffix> ok

[14:38] *** pmurias left
[14:39] <Zoffix> s/the rename/the alias/;

[14:39] *** knation left
[14:39] *** Ven` joined
[14:39] *** pmurias joined
[14:39] *** p6bannerbot sets mode: +v pmurias

[14:39] *** knation joined
[14:39] *** p6bannerbot sets mode: +v knation

[14:40] *** p6bannerbot sets mode: +v Ven`

[14:46] *** timber3252 joined
[14:46] *** p6bannerbot sets mode: +v timber3252

[14:47] *** timber3252 left
[14:54] *** araraloren left
[14:56] *** Zoffix left
[14:59] <El_Che> (I didn't know there was a name vote)

[15:00] *** MilkmanDan left
[15:01] *** MilkmanDan joined
[15:01] *** p6bannerbot sets mode: +v MilkmanDan

[15:01] *** thundergnal joined
[15:01] *** p6bannerbot sets mode: +v thundergnal

[15:02] <cosimo> what is the idea behind this "alias" initiative?

[15:03] <El_Che> cosimo: I think Zoffix' post explains it pretty well

[15:03] <El_Che> https://perl6.party/post/A-Request-to-Larry-Wall-to-Create-a-Language-Name-Alias-for-Perl-6

[15:04] <cosimo> thanks El_Che 

[15:04] <thundergnal> (Not seriosly proposing, just my own idle thoughts) I've always been slightly sad we didn't go with Opel. It's Perl! But with more objects, and less... (something that starts with r :-/) Unfortuantely there already is a (obscure) language called Opel.

[15:05] <El_Che> You know about the cars, right?

[15:05] <thundergnal> Or Nacre. It's <strike>mother</strike> sister of Perl!

[15:05] <jast> more objects and less regular expressions ;)

[15:05] *** Ven` left
[15:06] <thundergnal> El_Che yep, but cars aren't programming languages.

[15:06] <El_Che> It does not matter, ideas are already associated to the existing brand

[15:07] <thundergnal> Similar to Apple records that has nothing to do with Apple computers.

[15:07] <thundergnal> Ah well, just idle musings.

[15:07] <El_Che> e.g. Call it LADA, RollsRoyce or Tesla

[15:08] <El_Che> (Apple is a generic word, Opel a family name)

[15:08] *** molaf joined
[15:08] <El_Che> and be sure, that in the Apple case attorneys were involved :)

[15:08] <thundergnal> El_Che you did see the thing about "not seriously proposing" ?

[15:09] <El_Che> https://en.wikipedia.org/wiki/Apple_Corps_v_Apple_Computer

[15:09] <El_Che> thundergnal: I am serious 100% of the time

[15:09] *** p6bannerbot sets mode: +v molaf

[15:09] <El_Che> thundergnal: people that know me can certify my claim

[15:09] <lizmat> eh

[15:09] <timotimo> https://www.theguardian.com/world/2013/oct/07/apfelkind-cafe-trademark-battle-apple-germany

[15:09] <El_Che> otherwise I'll sue them for defamation and calumny

[15:10] <thundergnal> El_che: Snort :-)

[15:10] <El_Che> :)

[15:12] *** thundergnal left
[15:12] <jast> remember when firefox was called firebird? remember when firebird was called phoenix? :)

[15:15] <jast> (phoenix, which had the ambitious goal of fitting the entire browser on a floppy disk... and today firefox is bigger than netscape navigator 4)

[15:16] *** jmerelo joined
[15:16] <phogg> Phoenix was already bigger than that, as I recall.

[15:16] *** pmurias left
[15:16] <jast> I remember Netscape Navigator 4.something being around 6 MB and Phoenix 0.5 being 4.7 MB (give or take)

[15:17] *** pmurias joined
[15:17] *** p6bannerbot sets mode: +v pmurias

[15:17] <tyil> remember when browsers were still fast and didn't require you to have 16 gb of ram to read simple text articles

[15:17] <jast> oh, you mean w3m

[15:19] <tyil> yes

[15:19] <jast> actually the installer for Netscape Navigator 4.08 was 9.7 MB on Windows 4.0+

[15:19] <phogg> You can still get that, but it won't do everything a modern browser is expected to do. Netsurf is an example.

[15:19] <tyil> basically any browser without js :'D

[15:20] <jast> today's firefox download for macOS is 54.1 MB

[15:20] <phogg> jast: I may be thinking of a later (early firefox) release. I don't seem to have it in my archives any more.

[15:20] <jast> 38.3 MB for Windows

[15:21] <jast> I was a little off the mark, but firefox is still bigger than navigator today...

[15:21] <jast> http://ftp.mozilla.org/pub/phoenix/releases/0.5/

[15:22] *** Ven` joined
[15:22] *** pmurias_ joined
[15:22] *** p6bannerbot sets mode: +v pmurias_

[15:23] *** p6bannerbot sets mode: +v Ven`

[15:23] *** pmurias left
[15:23] <jast> don't trust the numbers too much... where the mozilla web server says the Windows installer for firefox 0.9 is "4M", the download actually weighs in at 5.9 MB

[15:23] <El_Che> https://i.ytimg.com/vi/NpYEJx7PkWE/hqdefault.jpg

[15:23] <jast> oh never mind, this toy OS here tricked me

[15:24] *** epony left
[15:28] *** troys joined
[15:29] *** p6bannerbot sets mode: +v troys

[15:29] *** MasterDuke joined
[15:29] *** p6bannerbot sets mode: +v MasterDuke

[15:30] *** MasterDuke left
[15:30] *** MasterDuke joined
[15:30] *** herbert.freenode.net sets mode: +v MasterDuke

[15:30] *** p6bannerbot sets mode: +v MasterDuke

[15:32] *** ExtraCrispy joined
[15:32] *** p6bannerbot sets mode: +v ExtraCrispy

[15:34] *** domidumont left
[15:36] <tyil> I dont care much about storage size of the browser to be honest

[15:37] *** kent\n left
[15:37] <tyil> I'm working in terabytes, I could care less about the browser being 55mb or 100mb in storage consumption

[15:37] <tyil> ram usage and speed, however

[15:37] <tyil> and bandwidth usage

[15:37] <tyil> and cpu usage

[15:38] <tyil> those have all increased far beyond reasonable numbers, even for the most simple of sites

[15:38] *** kent\n joined
[15:38] *** p6bannerbot sets mode: +v kent\n

[15:39] <Kaiepi> have you guys ever compiled firefox before

[15:39] <tyil> yes

[15:39] <Kaiepi> it's almost as bad as gcc

[15:39] <tyil> I do it every release, which is every couple days nowadays

[15:39] <Kaiepi> damn

[15:40] <tyil> compiling it is the only way to sanely get rid of all the garbage Mozilla is putting in to it these days

[15:40] <Kaiepi> are you using poudriere on freebsd?

[15:41] <tyil> nope

[15:41] <Kaiepi> or doing it on your computer

[15:41] *** ExtraCrispy left
[15:41] <Kaiepi> oh

[15:41] <tyil> I'm using Funtoo, and compiling usually on my desktop

[15:41] <tyil> but I can also compile on a server if needs be

[15:42] <tyil> I make binaries out of them which I then redistribute to my other machines

[15:42] <Kaiepi> bsd ports allow you to do that as well

[15:43] <tyil> I didn't like the tooling available for BSD ports, and their hardware support is behind GNU+Linux as well

[15:43] <Kaiepi> nowadays i just use pkg on openbsd since its configurations for packages are reasonably sane

[15:43] <tyil> works fine for VMs and the like, though

[15:43] <Kaiepi> you don't like the tooling?

[15:43] *** ExtraCrispy joined
[15:43] *** p6bannerbot sets mode: +v ExtraCrispy

[15:43] <Kaiepi> i found it easier to use than gentoo

[15:43] <tyil> I dont think any pre-compiled firefox is sane, an any distro/os these days

[15:44] <tyil> but that's mozilla's fault, not the distro/os maintainers

[15:44] <tyil> to make sane use of ports on bsd you need to install other ports that introduce management utils for dealing with ports

[15:45] <tyil> all the utils I need to get started with building packages on Funtoo/Gentoo are provided in the base install

[15:46] <Geth> ¬¶ doc: efb41519ca | (Jason Cole)++ | 3 files

[15:46] <Geth> ¬¶ doc: Document the Setty ops for MixHashes per TODO

[15:46] <Geth> ¬¶ doc: 

[15:46] <Geth> ¬¶ doc: Also added code examples to a note in BagHash.pod6 about .reverse

[15:46] <Geth> ¬¶ doc: and included that note in MixHash.pod6.

[15:46] <Geth> ¬¶ doc: Also a few grammar/accuracy touches.

[15:46] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/efb41519ca

[15:46] <Geth> ¬¶ doc: 031027c660 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | 3 files

[15:46] <Geth> ¬¶ doc: Merge pull request #2358 from Coleoid/mixhash-todo

[15:46] <Geth> ¬¶ doc: 

[15:46] <Geth> ¬¶ doc: Document the Setty ops for MixHashes per TODO

[15:46] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/031027c660

[15:47] *** pdcawley joined
[15:48] *** p6bannerbot sets mode: +v pdcawley

[15:52] *** pdcawley left
[15:55] *** molaf left
[16:02] *** pmurias_ is now known as pmurias

[16:03] *** robertle left
[16:07] *** tison left
[16:08] *** regreg left
[16:35] *** kensanata left
[16:39] *** [particle]1 joined
[16:40] *** p6bannerbot sets mode: +v [particle]1

[16:40] *** domidumont joined
[16:41] *** [particle] left
[16:41] *** p6bannerbot sets mode: +v domidumont

[16:42] *** [particle] joined
[16:42] *** itaipu joined
[16:43] *** p6bannerbot sets mode: +v [particle]

[16:43] *** p6bannerbot sets mode: +v itaipu

[16:43] *** jameslenz left
[16:43] *** [particle]1 left
[16:45] *** wamba left
[16:48] *** knation left
[16:49] *** knation joined
[16:49] *** p6bannerbot sets mode: +v knation

[16:50] <El_Che> (the constant joining and quitting is annoying)

[16:51] <dylanwh> weechat's smartfilters are really nice for this

[16:51] <tadzik> I can't imagine using high-traffic channels withou tthem

[16:52] <dylanwh> https://screenshots.firefox.com/aF8MyFTIKcn3cELL/null for non-weechat-ers

[16:53] <El_Che> yeah, it should be trivial with irssi as well

[16:53] <dylanwh> the thing is I can turn it off and see what I've missed too

[16:53] <dylanwh> like the messages are still there -- just hidden

[16:54] <dylanwh> so if someone joins and says something, retroactively I see their join message. 

[16:54] <El_Che> ah, nice indeed

[16:55] *** MilkmanDan left
[16:58] *** regreg joined
[16:58] *** p6bannerbot sets mode: +v regreg

[17:11] *** Ven` left
[17:12] *** patrickb joined
[17:13] *** p6bannerbot sets mode: +v patrickb

[17:17] *** jmerelo left
[17:33] *** pecastro joined
[17:34] *** p6bannerbot sets mode: +v pecastro

[17:34] *** metelik joined
[17:35] *** p6bannerbot sets mode: +v metelik

[17:36] <metelik> hello folks

[17:36] <metelik> quick question on  https://raw.githubusercontent.com/ugexe/Perl6-ecosystems/master/cpan1.json

[17:36] <metelik> the resource seems to exist

[17:36] <metelik> yet with a zef command like

[17:37] <metelik> # zef install CSV::Parser

[17:37] <metelik> I am getting:

[17:37] <metelik> ===> Searching for: CSV::Parser

[17:37] <metelik> !!!> Failed to update cpan mirror: https://raw.githubusercontent.com/ugexe/Perl6-ecosystems/master/cpan1.json

[17:37] <metelik> !!!> Failed to update cpan mirror: https://raw.githubusercontent.com/ugexe/Perl6-ecosystems/master/cpan.json

[17:37] <metelik> ===> Updated cpan mirror: git://github.com/ugexe/Perl6-ecosystems.git

[17:37] <metelik> any  particular reason for the !!! messages?

[17:40] <metelik> another question we (NetBSD folks) would have is about us upgrading to zef 0.4.6

[17:40] <metelik> In our case the change is as follows:

[17:41] <metelik> do-build:

[17:41] <metelik> -       cd ${WRKSRC} && ${ZEF} build . --debug

[17:41] <metelik> +       echo "Build of ZEF no longer needed skipping"

[17:41] <metelik> +#      cd ${WRKSRC} && ${ZEF} build . --debug

[17:41] *** MilkmanDan joined
[17:41] *** p6bannerbot sets mode: +v MilkmanDan

[17:42] <metelik> according to zef-0.4.6/README.pod:  $ git clone https://github.com/ugexe/zef.git

[17:42] <metelik>     $ cd zef

[17:42] <metelik>     $ perl6 -I. bin/zef install .

[17:42] <metelik> is our understanding correct ?

[17:43] *** epony joined
[17:43] *** p6bannerbot sets mode: +v epony

[17:48] *** MilkmanDan left
[17:54] *** wamba joined
[17:55] *** p6bannerbot sets mode: +v wamba

[18:11] *** domidumont left
[18:13] *** domidumont joined
[18:13] *** pecastro left
[18:14] *** p6bannerbot sets mode: +v domidumont

[18:14] *** webstrand left
[18:14] *** MilkmanDan joined
[18:14] *** p6bannerbot sets mode: +v MilkmanDan

[18:16] *** domidumont left
[18:16] *** webstrand joined
[18:17] *** p6bannerbot sets mode: +v webstrand

[18:19] *** MilkmanDan left
[18:30] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Cordova-0.0.13.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo::VSTS::YAML::Cordova:cpan:MELEZHIK

[18:30] *** pecastro joined
[18:31] *** MilkmanDan joined
[18:31] *** p6bannerbot sets mode: +v MilkmanDan

[18:31] *** p6bannerbot sets mode: +v pecastro

[19:04] *** HaraldJoerg joined
[19:04] *** p6bannerbot sets mode: +v HaraldJoerg

[19:05] <metelik> we (NetBSD folks) would have is about us upgrading to zef 0.4.6

[19:05] <metelik> <metelik> In our case the change is as follows:

[19:05] <metelik> <metelik> do-build:

[19:05] <metelik> <metelik> -       cd ${WRKSRC} && ${ZEF} build . --debug

[19:05] <metelik> <metelik> +       echo "Build of ZEF no longer needed skipping"

[19:05] <metelik> <metelik> +#      cd ${WRKSRC} && ${ZEF} build . --debug

[19:05] <metelik> * MilkmanDan (~dan@wilug/expat/MilkmanDan) has joined #perl6

[19:05] <metelik> * p6bannerbot gives voice to MilkmanDan

[19:05] <metelik> <metelik> according to zef-0.4.6/README.pod:  $ git clone https://github.com/ugexe/zef.git

[19:05] <metelik> <metelik>     $ cd zef

[19:05] <metelik> <metelik>     $ perl6 -I. bin/zef install .

[19:05] <metelik> <metelik> is our understanding correct ?

[19:06] <lizmat> ugexe nine ^^

[19:11] *** metelik left
[19:15] *** MasterDuke left
[19:28] *** MasterDuke joined
[19:28] *** p6bannerbot sets mode: +v MasterDuke

[19:29] *** MasterDuke left
[19:29] *** MasterDuke joined
[19:29] *** herbert.freenode.net sets mode: +v MasterDuke

[19:29] *** p6bannerbot sets mode: +v MasterDuke

[19:35] *** metelik joined
[19:35] *** AlexDaniel left
[19:35] *** AlexDaniel joined
[19:35] *** p6bannerbot sets mode: +v metelik

[19:36] *** p6bannerbot sets mode: +v AlexDaniel

[19:49] *** hami joined
[19:49] *** p6bannerbot sets mode: +v hami

[19:52] *** pmurias left
[19:56] *** hami left
[19:58] *** pmurias joined
[19:58] *** p6bannerbot sets mode: +v pmurias

[20:15] *** sena_kun left
[20:18] <shmup> use lib 'path' makes sense for your project specific modules, while adjusting the PERL6LIB might make more sense for your other modules?

[20:18] <shmup> i'm asking to figure out if I'm going about this in a pretty "normal" way

[20:18] <shmup> as of now I'm splashing `use lib 'path'` around

[20:18] *** pmurias left
[20:19] <timotimo> once you've installed the library to the system, you won't need "use lib" any more :)

[20:19] <timotimo> and when you run your stuff out of the module's root folder where the META6 lives it'll pick up everything in the "provides" section

[20:24] *** pmurias joined
[20:24] *** p6bannerbot sets mode: +v pmurias

[20:25] <shmup> i don't want to install the library to the system

[20:25] <shmup> it is in active development

[20:26] <shmup> assume everything I said above was pertaining to my own modules, and their dev state

[20:26] <tobs> Are the META6 structure and semantics documented somewhere? For the module I'm writing now, I just copied everything together until it worked

[20:26] <shmup> i haven't really cared about META6 structures yet, in my 2 weeks of exploration

[20:26] <shmup> like i have some skeleton ones around but haven't needed them quite yet

[20:27] <El_Che> tobs: there is this: https://docs.perl6.org/language/modules#Preparing_the_module

[20:27] <shmup> tobs: have you tried tihs? https://docs.perl6.org/language/modules#Exporting_and_selective_importing

[20:28] <shmup> yes that is what i used El_Che, it is nice

[20:28] <El_Che> ans this may be handy: https://github.com/gfldex/perl6-meta6-bin

[20:28] <lizmat> shmup: modules in semi-finished state *can* be installed from their root directory with "zef install ."

[20:28] <shmup> lizmat: and updates don't require additional `zef install .` ?

[20:29] <El_Che> I certainly miss content, but do you need to install?

[20:29] <shmup> lizmat: any benefits to that approach versus the other exporting/importing methods? (during development)

[20:29] <tobs> hmm, yes, thanks. That answers more than I remembered.

[20:29] <lizmat> if the version doesn't change, you would have to do "zef install . --force"

[20:29] <El_Che> perl6 -Ilib bin/foo.p6

[20:29] <shmup> that is a bad feedback loop

[20:29] <lizmat> shmup: YMMV

[20:29] <shmup> imo

[20:29] <shmup> yeah lizmat probably heh

[20:29] <El_Che> PERL6LIB=lib bin/foo.p6

[20:29] <shmup> ^ is a better feedback loop

[20:29] *** wamba left
[20:30] <lizmat> I've found it handy a few times when developing a role depending on another role in a different distribution

[20:30] <tobs> the meaning of the "provides" key isn't entirely clear to me though. Surely I don't list every package in my module there?

[20:30] <shmup> tobs: are you interested in these details for public consumption? or are you only interested in local development at the moment

[20:30] <shmup> i probably missed context above, selective reading etc

[20:30] * tobs starts reading El_Che++s link

[20:31] <tobs> no, there was no context. Your question reminded me of one I had. It's for public consumption though

[20:31] <tobs> and zef is fine with my META6 as it is, so I'm good to go at the moment

[20:35] <cognominal-p6> I would expect https://gist.github.com/cognominal/be3eb3d2943799cda70805adf73ba27a to give me an array of two lines because ws is lexical. What am I doing wrong ? It seem to me I once ran to a similar problem with ws. Not sure that was the same

[20:37] *** molaf joined
[20:37] <cognominal-p6> https://github.com/perl6/specs/issues/96  no one cane with the lexical ws. Maybe ws is special and cannot be lexical. That would be a bug.

[20:38] *** p6bannerbot sets mode: +v molaf

[20:38] <geekosaur> I wold guess that, because it's compiled as part of the setting, the implicit <.ws> is the one in scope when that is compiled

[20:38] <cognominal-p6> I would expect a lexical ws to hide it.

[20:38] <geekosaur> not the one when your code is compiled, and ws would need to become magical to do what you want, or the setting would need to be compiled along wth your code

[20:39] <cognominal-p6> my code is not in the setting :)

[20:40] <geekosaur> exactly

[20:40] <geekosaur> your'e imagining that somehow it tacks the ws in scpe ontot he rule. I'm imagining that is dne as part of the definition of rule itself, so the ws in scope at that time is used

[20:40] <geekosaur> and there may be performance implications to changng it

[20:44] <cognominal-p6> Not so much after jnthn optimizations

[20:46] <cognominal-p6> m: grammar A { token a { a };  { my token a { b }; token TOP { <a>  }}}. say b.parse('b')

[20:46] <camelia> rakudo-moar 560e94ef2: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3token a { b }; token TOP { <a>  }}}. say7‚èè5 b.parse('b')‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        statement end‚ê§      ‚Ä¶¬ª

[20:46] <cognominal-p6> m: grammar A { token a { a };  { my token a { b }; token TOP { <a>  }}}. say A.parse('b')

[20:46] <camelia> rakudo-moar 560e94ef2: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3token a { b }; token TOP { <a>  }}}. say7‚èè5 A.parse('b')‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        statement end‚ê§      ‚Ä¶¬ª

[20:47] <cognominal-p6> m: grammar A { token a { a };  { my token a { b }; token TOP { <a>  }}}; say A.parse('b')

[20:47] <camelia> rakudo-moar 560e94ef2: OUTPUT: ¬´ÔΩ¢bÔΩ£‚ê§ a => ÔΩ¢bÔΩ£‚ê§¬ª

[20:47] <cognominal-p6> specific to ws indeed.

[20:53] *** knation left
[20:54] *** zxcvz left
[20:59] <lichtkind> can i POD link into another document?

[21:03] <cognominal-p6> ws seems to be hardwired here https://github.com/perl6/nqp/blob/master/src/QRegex/Cursor.nqp#L956

[21:12] *** MilkmanDan left
[21:13] *** MilkmanDan joined
[21:13] *** p6bannerbot sets mode: +v MilkmanDan

[21:19] *** jast left
[21:20] *** jast joined
[21:20] *** p6bannerbot sets mode: +v jast

[21:23] *** patrickb left
[21:27] <timotimo> can't you "my token ws"?

[21:27] <Demos[m]> are there any good, structured, ways to use dynamic vars? Like I have one type that gets used in the context of another, containing type

[21:28] <cognominal-p6> timotimo, that's what I do

[21:29] <timotimo> does it work?

[21:29] <cognominal-p6> no

[21:29] <timotimo> then maybe we should look into implementing what pmichaud mentions there, giving "sigspace" an argument

[21:30] <timotimo> at first glance that shouldn't be very hard to implement?

[21:32] <cognominal-p6> checking S05

[21:33] <cognominal-p6> Anyway ws should not be special

[21:35] *** kensanata joined
[21:35] *** p6bannerbot sets mode: +v kensanata

[21:36] *** random_yanek left
[21:36] <cognominal-p6> Also an argumented sigspace should be added to any rule. The block scope is more elegant.

[21:37] *** random_yanek joined
[21:37] *** random_yanek left
[21:37] <timotimo> does it work for other things? like ww or ident?

[21:38] *** random_yanek joined
[21:38] *** random_yanek left
[21:38] *** random_yanek joined
[21:38] *** random_yanek left
[21:39] <cognominal-p6> m: say 'bab' ~~ m:s( /a/ )/ b + /

[21:39] <camelia> rakudo-moar 605bcb391: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Adverb s value must be known at compile time‚ê§at <tmp>:1‚ê§------> 3say 'bab' ~~ m:s( /a/ )7‚èè5/ b + /‚ê§¬ª

[21:39] *** random_yanek joined
[21:39] *** p6bannerbot sets mode: +v random_yanek

[21:39] *** random_yanek left
[21:40] <lizmat> AlexDaniel: is there a Squashathon link ?

[21:40] <cognominal-p6> m: say 'bab' ~~ m:s( rx/a/ )/ b + /

[21:40] <camelia> rakudo-moar 605bcb391: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Adverb s value must be known at compile time‚ê§at <tmp>:1‚ê§------> 3say 'bab' ~~ m:s( rx/a/ )7‚èè5/ b + /‚ê§¬ª

[21:40] <AlexDaniel> notable6: weekly

[21:40] <notable6> AlexDaniel, 8 notes: https://gist.github.com/fed4ec8388e5cb952bf94698f6fc1c5b

[21:40] <lizmat> AlexDaniel: with a report on what happened and a winner?

[21:40] *** random_yanek joined
[21:40] *** p6bannerbot sets mode: +v random_yanek

[21:40] *** random_yanek left
[21:41] <AlexDaniel> lizmat: yes, except that I don't know how to use my bots

[21:41] <AlexDaniel> lizmat: http://colabti.org/irclogger/irclogger_log/perl6?date=2018-10-08#l105

[21:41] *** random_yanek joined
[21:41] *** random_yanek left
[21:42] <AlexDaniel> notable6: reset Another

[21:42] <notable6> AlexDaniel, Moved existing notes to ‚ÄúAnother_2018-10-08T21:42:33Z‚Äù

[21:43] <AlexDaniel> https://github.com/perl6/whateverable/issues/344

[21:44] <AlexDaniel> notable6: list

[21:44] <notable6> AlexDaniel, https://gist.github.com/c19b7f6a270402d9dc61eba26fedaf08

[21:44] <AlexDaniel> notable6: Perl

[21:44] <notable6> AlexDaniel, 2 notes: https://gist.github.com/fcb943a619fb63085fc2ab10f8e6e05c

[21:44] <AlexDaniel> notable6: reset Perl

[21:44] <notable6> AlexDaniel, Moved existing notes to ‚ÄúPerl_2018-10-08T21:44:50Z‚Äù

[21:45] <AlexDaniel> notable6: weekly:

[21:45] <notable6> AlexDaniel, 1 note: 2018-04-30T20:07:38Z <El_Che>: https://github.com/nxadm/rakudo-pkg/releases/tag/v2018.04.1-01

[21:45] <AlexDaniel> notable6: reset weekly:

[21:45] <notable6> AlexDaniel, Moved existing notes to ‚Äúweekly:_2018-10-08T21:45:09Z‚Äù

[21:45] <AlexDaniel> notable6: that

[21:45] <notable6> AlexDaniel, 1 note: 2018-08-09T14:23:31Z <lizmat>: was with the bumped MoarVm

[21:45] <AlexDaniel> notable6: reset that

[21:45] <notable6> AlexDaniel, Moved existing notes to ‚Äúthat_2018-10-08T21:45:26Z‚Äù

[21:45] <AlexDaniel> notable6: list

[21:45] <notable6> AlexDaniel, https://gist.github.com/a01790eccbf3f160179c7b0f1e2d5b8b

[21:45] *** pmurias left
[21:45] <AlexDaniel> I mean, notable6 is only used for weeklies, all this fancy functionality is not even needed

[21:47] <lizmat> And another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/10/08/2018-41-merged-the-js/

[21:47] *** pmurias joined
[21:47] *** p6bannerbot sets mode: +v pmurias

[21:48] <cognominal-p6> yea

[21:50] <timotimo> maybe in the future

[21:50] <AlexDaniel> wow all that in one week

[21:50] <timotimo> lizmat: no link to 6pad?

[21:50] <timotimo> https://perl6.github.io/6pad/ - where you can put perl6 code and run it immediately, in your browser?

[21:51] <lizmat> I've thought about it, but it seemed a bit premature to me

[21:51] <timotimo> OK

[21:51] <lizmat> I'd rather mention it next week when it is hopefully more fleshed out

[21:51] <lizmat> people reading Pawel's articlle *will* find it anyway

[21:52] <AlexDaniel> weekly: reset

[21:52] <notable6> AlexDaniel, Moved existing notes to ‚Äúweekly_2018-10-08T21:52:15Z‚Äù

[21:52] <AlexDaniel> weekly: https://perl6.github.io/6pad/ - where you can put perl6 code and run it immediately, in your browser

[21:52] <notable6> AlexDaniel, Noted!

[21:52] <AlexDaniel> weekly: https://next.oddmuse.org/ working prototype of a wiki engine written in Perl¬†6

[21:52] <notable6> AlexDaniel, Noted!

[21:54] <AlexDaniel> same thing, probably better to mention next week :)

[21:58] *** itaipu left
[22:00] *** lichtkind left
[22:01] *** Ven` joined
[22:02] *** rindolf left
[22:02] *** p6bannerbot sets mode: +v Ven`

[22:04] *** huf left
[22:06] *** Ven` left
[22:07] *** kensanata left
[22:08] *** ExtraCrispy left
[22:08] *** ExtraCrispy joined
[22:08] *** p6bannerbot sets mode: +v ExtraCrispy

[22:19] *** Actualeyes joined
[22:19] *** p6bannerbot sets mode: +v Actualeyes

[22:21] *** Bucciarati left
[22:21] *** Bucciarati joined
[22:22] *** p6bannerbot sets mode: +v Bucciarati

[22:27] <lizmat> weekly: https://scruss.com/blog/2018/10/08/íê≥-‡º≥-‚ëΩ-êπ≠-íê≤-êÖâ-of-course/

[22:27] <notable6> lizmat, Noted!

[22:28] <Demos[m]> hey I'm having trouble doing something like what's in "https://github.com/perl6/roast/blob/master/S11-modules/re-export.t"

[22:28] <Demos[m]> saying use InnerModule :ALL :EXPORT works

[22:28] <Demos[m]> but use InnerModule :EXPORT says "no tag export" and as does use InnerModule :ALL, :EXPORT

[22:29] <Demos[m]> and I can't call methods or subs in the inner module no matter what

[22:35] *** jsimonet left
[22:40] *** HaraldJoerg left
[22:41] <Demos[m]> ah that's a 6.d thing

[22:42] *** HaraldJoerg joined
[22:43] *** p6bannerbot sets mode: +v HaraldJoerg

[22:44] *** jsimonet joined
[22:45] *** p6bannerbot sets mode: +v jsimonet

[22:48] *** Ven` joined
[22:49] *** p6bannerbot sets mode: +v Ven`

[22:53] *** Ven` left
[22:54] *** syntaxman left
[22:54] *** syntaxman joined
[22:54] *** p6bannerbot sets mode: +v syntaxman

[22:59] *** jsimonet left
[23:01] *** syntaxman left
[23:02] *** pecastro left
[23:03] *** syntaxman joined
[23:03] *** p6bannerbot sets mode: +v syntaxman

[23:06] *** jsimonet joined
[23:06] *** erana joined
[23:07] *** p6bannerbot sets mode: +v jsimonet

[23:07] *** p6bannerbot sets mode: +v erana

[23:14] *** dwarring left
[23:19] <cognominal-p6> One can redefine ws but as lexical it is invisible

[23:19] <cognominal-p6> as a sigspace ?

[23:23] <cognominal-p6> m: say grammar A { token TOP { <ws> }; my token ws { a }  }.parse('a')

[23:23] <camelia> rakudo-moar 7e86d4e30: OUTPUT: ¬´Nil‚ê§¬ª

[23:24] <cognominal-p6> m: say grammar A { token TOP { <a> }; my token a { a }  }.parse('a')

[23:24] <camelia> rakudo-moar 7e86d4e30: OUTPUT: ¬´No such method 'a' for invocant of type 'A'. Did you mean 'at'?‚ê§  in regex TOP at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[23:25] <cognominal-p6> m: say grammar A { my token a { a }; token TOP { <a> };   }.parse('a')

[23:25] <camelia> rakudo-moar 7e86d4e30: OUTPUT: ¬´ÔΩ¢aÔΩ£‚ê§ a => ÔΩ¢aÔΩ£‚ê§¬ª

[23:26] <cognominal-p6> m: say grammar A { my token ws { a }; token TOP { <ws> };   }.parse('a')

[23:26] <camelia> rakudo-moar 7e86d4e30: OUTPUT: ¬´ÔΩ¢aÔΩ£‚ê§ ws => ÔΩ¢aÔΩ£‚ê§¬ª

[23:40] *** aborazmeh joined
[23:40] *** aborazmeh left
[23:40] *** aborazmeh joined
[23:40] *** p6bannerbot sets mode: +v aborazmeh

[23:41] *** p6bannerbot sets mode: +v aborazmeh

[23:47] <AlexDaniel> e: use MONKEY-SEE-NO-EVAL; my %nums; for ^0x10FFFF { %nums{.unival}.push: $_ if !.unival.isNaN and try EVAL .chr }; for %nums.keys.sort(+*) { say ‚Äú\n===== $_ =====‚Äù; for %nums{$_}.list { say .chr, ‚Äò 0x‚Äô, .base(16), ‚Äò ‚Äô, .uniname } }

[23:47] <evalable6> AlexDaniel, rakudo-moar 7e86d4e30: OUTPUT: ¬´‚ê§===== -0.5 =====‚ê§‡º≥ 0xF33 TIBETAN DIGIT HALF ZERO‚ê§‚ê§===== 0.00625 =====‚ê§‡µò 0xD58 MALAYAL‚Ä¶¬ª

[23:47] <evalable6> AlexDaniel, Full output: https://gist.github.com/fe4426dd96c7ebe7bb181426e1aa1264

[23:53] <AlexDaniel> hah https://gist.githubusercontent.com/Whateverable/fe4426dd96c7ebe7bb181426e1aa1264/raw/e3a3e04dd6606a2d627fed8adcd08901b17934c2/result

[23:53] <AlexDaniel> some lines are right aligned

[23:54] *** aborazmeh left
