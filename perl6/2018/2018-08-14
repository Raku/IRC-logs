[00:03] *** DarthGan- is now known as DarthGandalf

[00:03] *** itaipu left
[00:03] *** ceevusee left
[00:04] *** itaipu joined
[00:05] *** p6bannerbot sets mode: +v itaipu

[00:08] *** itaipu left
[00:09] *** itaipu joined
[00:10] *** p6bannerbot sets mode: +v itaipu

[00:11] <buggable> New CPAN upload: AttrX-Mooish-v0.2.1.tar.gz by VRURG http://modules.perl6.org/dist/AttrX::Mooish:cpan:VRURG

[00:11] *** itaipu left
[00:28] *** metelik left
[00:29] *** aindilis left
[00:31] <buggable> New CPAN upload: AttrX-Mooish-v0.2.2.tar.gz by VRURG http://modules.perl6.org/dist/AttrX::Mooish:cpan:VRURG

[00:31] *** rindolf joined
[00:32] *** p6bannerbot sets mode: +v rindolf

[00:52] *** mst_ joined
[00:52] *** p6bannerbot sets mode: +v mst_

[00:52] *** samebcha1e joined
[00:52] *** Syrup joined
[00:53] *** p6bannerbot sets mode: +v samebcha1e

[00:53] *** p6bannerbot sets mode: +v Syrup

[00:57] *** |oLa| left
[00:57] *** benjikun left
[00:57] *** x[LGWs4x4i]uG2N0 left
[00:57] *** robinsmidsrod left
[00:57] *** mephinet left
[00:57] *** cjkinni left
[00:57] *** sacomo left
[00:57] *** Grauwolf left
[00:57] *** go|dfish left
[00:57] *** samebchase left
[00:57] *** SyrupThinker left
[00:57] *** dotdotdot left
[00:57] *** speedChi- left
[00:57] *** El_Che left
[00:57] *** pierrot left
[00:57] *** gfldex left
[00:57] *** a3r0 left
[00:57] *** japhb left
[00:57] *** mst left
[00:57] *** [Coke] left
[00:57] *** m0ltar left
[00:59] *** benchable6 left
[00:59] *** committable6 left
[00:59] *** bisectable6 left
[00:59] *** benchable6 joined
[01:00] *** p6bannerbot sets mode: +v benchable6

[01:00] *** greppable6 left
[01:00] *** statisfiable6 left
[01:00] *** nativecallable6 left
[01:01] *** nativecallable6 joined
[01:01] *** statisfiable6 joined
[01:01] *** greppable6 joined
[01:01] *** p6bannerbot sets mode: +v nativecallable6

[01:02] *** p6bannerbot sets mode: +v statisfiable6

[01:02] *** p6bannerbot sets mode: +v greppable6

[01:04] *** |oLa| joined
[01:04] *** benjikun joined
[01:04] *** x[LGWs4x4i]uG2N0 joined
[01:04] *** robinsmidsrod joined
[01:04] *** cherryh.freenode.net sets mode: +vvvv |oLa| benjikun x[LGWs4x4i]uG2N0 robinsmidsrod

[01:04] *** mephinet joined
[01:04] *** cjkinni joined
[01:04] *** sacomo joined
[01:04] *** Grauwolf joined
[01:04] *** cherryh.freenode.net sets mode: +vvvv mephinet cjkinni sacomo Grauwolf

[01:04] *** go|dfish joined
[01:04] *** dotdotdot joined
[01:04] *** speedChi- joined
[01:04] *** El_Che joined
[01:04] *** cherryh.freenode.net sets mode: +vvvv go|dfish dotdotdot speedChi- El_Che

[01:04] *** pierrot joined
[01:04] *** [Coke] joined
[01:04] *** gfldex joined
[01:04] *** a3r0 joined
[01:04] *** cherryh.freenode.net sets mode: +vvvv pierrot [Coke] gfldex a3r0

[01:04] *** japhb joined
[01:04] *** m0ltar joined
[01:04] *** cherryh.freenode.net sets mode: +vv japhb m0ltar

[01:04] *** p6bannerbot sets mode: +v mephinet

[01:04] *** p6bannerbot sets mode: +v Grauwolf

[01:04] *** p6bannerbot sets mode: +v go|dfish

[01:04] *** p6bannerbot sets mode: +v pierrot

[01:04] *** p6bannerbot sets mode: +v [Coke]

[01:04] *** lizmat left
[01:05] *** p6bannerbot sets mode: +v |oLa|

[01:05] *** p6bannerbot sets mode: +v benjikun

[01:05] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[01:05] *** p6bannerbot sets mode: +v robinsmidsrod

[01:05] *** p6bannerbot sets mode: +v cjkinni

[01:05] *** p6bannerbot sets mode: +v sacomo

[01:05] *** p6bannerbot sets mode: +v dotdotdot

[01:05] *** p6bannerbot sets mode: +v speedChi-

[01:05] *** p6bannerbot sets mode: +v El_Che

[01:05] *** p6bannerbot sets mode: +v gfldex

[01:05] *** p6bannerbot sets mode: +v a3r0

[01:05] *** p6bannerbot sets mode: +v japhb

[01:05] *** p6bannerbot sets mode: +v m0ltar

[01:06] *** yoleaux left
[01:09] *** leedo joined
[01:10] *** p6bannerbot sets mode: +v leedo

[01:12] *** lex joined
[01:13] *** p6bannerbot sets mode: +v lex

[01:14] *** lex is now known as lindylex

[01:39] <lindylex> What is back refference in Perrl 6?

[01:40] <lindylex> WHat does the variable look like?

[01:40] <lindylex> This is what I am trying?  say "The first occurrence of a double letter ".match( / :i\w\1+ /, :global);

[01:41] <lindylex> This returns an empty list :  say "The first occurrence of a double letter ".match( / :i\w$0+ /, :global);

[01:43] <lookatme_q> m: say "The first occurrence of a double letter ".match( m:i/ (\w) $0+ /, :global);

[01:43] <camelia> rakudo-moar 80a7cff69: OUTPUT: ¬´Use of uninitialized value of type Any in string context.‚ê§Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.‚ê§  in block <unit> at <tmp> line 1‚ê§Cannot resolve caller match(Str: Nil, :global); none of these ‚Ä¶¬ª

[01:44] *** rwg2 joined
[01:44] *** jeromelanteri joined
[01:44] *** p6bannerbot sets mode: +v jeromelanteri

[01:44] <lookatme_q> m: say "The first occurrence of a double letter ".match( m:i/ (\w) $0 /, :global);

[01:44] <camelia> rakudo-moar 80a7cff69: OUTPUT: ¬´Use of uninitialized value of type Any in string context.‚ê§Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.‚ê§  in block <unit> at <tmp> line 1‚ê§Cannot resolve caller match(Str: Nil, :global); none of these ‚Ä¶¬ª

[01:45] <lookatme_q> m: say "The first occurrence of a double letter ".match( /:i (\w) $0 /, :global);

[01:45] <camelia> rakudo-moar 80a7cff69: OUTPUT: ¬´(ÔΩ¢ccÔΩ£‚ê§ 0 => ÔΩ¢cÔΩ£ ÔΩ¢rrÔΩ£‚ê§ 0 => ÔΩ¢rÔΩ£ ÔΩ¢ttÔΩ£‚ê§ 0 => ÔΩ¢tÔΩ£)‚ê§¬ª

[01:45] <lookatme_q> lindylex, you should capture them first

[01:45] <lookatme_q> m: say "The first occurrence of a double letter ".match( /:i (\w) $0+ /, :global);

[01:45] <camelia> rakudo-moar 80a7cff69: OUTPUT: ¬´(ÔΩ¢ccÔΩ£‚ê§ 0 => ÔΩ¢cÔΩ£ ÔΩ¢rrÔΩ£‚ê§ 0 => ÔΩ¢rÔΩ£ ÔΩ¢ttÔΩ£‚ê§ 0 => ÔΩ¢tÔΩ£)‚ê§¬ª

[01:48] *** rwg2 left
[01:48] <lindylex> lookatme_q : thanks!

[01:53] <lookatme_q> m: say "ccc".match( /:i (\w) $0+ /, :global);

[01:53] <camelia> rakudo-moar 80a7cff69: OUTPUT: ¬´(ÔΩ¢cccÔΩ£‚ê§ 0 => ÔΩ¢cÔΩ£)‚ê§¬ª

[01:53] <lookatme_q> m: say "ccc" ~~ m:ig/(\w) $0+ /;

[01:53] <camelia> rakudo-moar 80a7cff69: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Adverb ig not allowed on m‚ê§at <tmp>:1‚ê§------> 3say "ccc" ~~ m:ig/(\w) $0+ /7‚èè5;‚ê§¬ª

[01:54] <lookatme_q> m: say "ccc" ~~ m:i:g/(\w) $0+ /;

[01:54] <camelia> rakudo-moar 80a7cff69: OUTPUT: ¬´(ÔΩ¢cccÔΩ£‚ê§ 0 => ÔΩ¢cÔΩ£)‚ê§¬ª

[01:54] <lookatme_q> lindylex, and it's recommend to using `~~`, the smart match operator

[01:56] *** aborazmeh joined
[01:56] *** aborazmeh left
[01:56] *** aborazmeh joined
[01:56] *** p6bannerbot sets mode: +v aborazmeh

[01:56] <lindylex> lookatme_q : is there in any advantage to it over match>

[01:56] <lindylex> ?

[01:56] *** p6bannerbot sets mode: +v aborazmeh

[01:56] <lookatme_q> hmm, easy to type ?

[01:56] <lindylex> Ok 

[01:57] <lookatme_q> yeah, short than the match, and I think most of people love it

[01:57] *** bisectable6 joined
[01:58] *** p6bannerbot sets mode: +v bisectable6

[02:20] *** aindilis joined
[02:21] *** p6bannerbot sets mode: +v aindilis

[02:23] *** lindylex left
[02:23] *** rouking left
[02:25] *** regreg left
[02:30] *** aborazmeh left
[02:37] *** sftp left
[02:37] *** sftp joined
[02:37] *** p6bannerbot sets mode: +v sftp

[02:42] *** spycrab0 left
[02:56] *** jelly9 joined
[02:58] *** jelly9 left
[03:05] *** yoleaux joined
[03:05] *** ChanServ sets mode: +v yoleaux

[03:06] *** p6bannerbot sets mode: +v yoleaux

[03:21] *** Zen_ joined
[03:21] *** p6bannerbot sets mode: +v Zen_

[03:32] *** Zen_ left
[03:35] *** Zen_ joined
[03:36] *** p6bannerbot sets mode: +v Zen_

[03:49] *** uzl joined
[03:49] *** p6bannerbot sets mode: +v uzl

[03:52] <uzl> GN, #perl6! 

[03:54] *** Zen_ left
[03:56] <benjikun> night uzl

[03:57] <uzl> Sometime ago I came across a small line of code to get a function's signatures in the REPL. That was pretty neat but I forgot all about it. Any idea of what that might look like? 

[03:57] *** Zen_ joined
[03:57] <uzl> Hello, benjikun. 

[03:57] *** p6bannerbot sets mode: +v Zen_

[04:02] *** MasterDuke left
[04:16] <benjikun> uzl: It's just &callable.signature

[04:17] <benjikun> https://docs.perl6.org/type/Signature

[04:22] *** molaf joined
[04:23] *** p6bannerbot sets mode: +v molaf

[04:25] <uzl> I'm pretty sure it looked quite different. For example, if called on join, it would list all join's signatures as listed here (https://docs.perl6.org/routine/join).

[04:28] *** Sgeo joined
[04:28] *** p6bannerbot sets mode: +v Sgeo

[04:30] *** Sgeo_ left
[04:30] *** Zen_ left
[04:35] *** Zen_ joined
[04:35] *** p6bannerbot sets mode: +v Zen_

[04:37] *** molaf left
[04:38] *** vrurg left
[04:39] *** Zen_ left
[04:40] *** vrurg joined
[04:40] *** p6bannerbot sets mode: +v vrurg

[04:46] *** uzl left
[04:46] *** _uzl joined
[04:47] *** p6bannerbot sets mode: +v _uzl

[04:50] *** _uzl left
[04:58] *** molaf joined
[04:58] *** p6bannerbot sets mode: +v molaf

[05:02] *** molaf left
[05:02] *** curan joined
[05:02] *** p6bannerbot sets mode: +v curan

[05:18] *** vrurg left
[05:26] *** vrurg joined
[05:27] *** p6bannerbot sets mode: +v vrurg

[05:33] *** montag45116 joined
[05:38] *** montag45116 left
[05:38] *** jmerelo joined
[05:39] *** stmuk joined
[05:39] *** p6bannerbot sets mode: +v jmerelo

[05:39] *** p6bannerbot sets mode: +v stmuk

[05:40] *** sauvin joined
[05:40] *** p6bannerbot sets mode: +v sauvin

[05:41] *** stmuk_ left
[05:42] <Geth> ¬¶ doc: 4db318750f | (David Warring)++ | 3 files

[05:42] <Geth> ¬¶ doc: describe .pick(*) as shuffling

[05:42] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4db318750f

[05:42] <Geth> ¬¶ doc: dc5bd2b1bf | (David Warring)++ (committed using GitHub Web editor) | doc/Type/Setty.pod6

[05:42] <Geth> ¬¶ doc: typo

[05:42] <synopsebot> Link: https://doc.perl6.org/type/Setty

[05:42] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/dc5bd2b1bf

[05:42] <Geth> ¬¶ doc: ba59def9df | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | 3 files

[05:42] <Geth> ¬¶ doc: Merge pull request #2261 from dwarring/pick-star--aka-shuffle

[05:42] <Geth> ¬¶ doc: 

[05:42] <Geth> ¬¶ doc: describe .pick(*) as shuffling

[05:42] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ba59def9df

[05:53] *** jmerelo_ joined
[05:53] *** p6bannerbot sets mode: +v jmerelo_

[05:54] *** hami joined
[05:54] *** p6bannerbot sets mode: +v hami

[05:58] *** Syrup is now known as SyrupThinker

[05:58] *** coltkirk left
[06:01] *** e10 joined
[06:03] *** e10 left
[06:13] *** jmerelo_ left
[06:13] <xinming> timotimo: Yesterday, I tried with newest version of rakudo, And I found we that bug is fixed in newest rakudo.

[06:14] <xinming> I mean, I compiled newest rakudo yesterday, and test it today. :-)

[06:16] *** hami left
[06:24] *** jmerelo left
[06:26] *** vrurg left
[06:26] *** metelik joined
[06:27] *** p6bannerbot sets mode: +v metelik

[06:38] *** JJJ joined
[06:38] *** p6bannerbot sets mode: +v JJJ

[06:39] <JJJ> Hi everyone

[06:39] *** Zen_ joined
[06:40] <JJJ> I think this chatroom is as dead as the perl language

[06:40] <JJJ> ouch!

[06:40] *** p6bannerbot sets mode: +v Zen_

[06:41] <SHODAN> cool

[06:45] <benjikun> No

[06:45] <benjikun> Right now is #perl6's least active time of day

[06:46] <benjikun> On squashathons / When people need help, people chip in more

[06:46] <tyil> .tell uzl Do you mean .candidates? https://docs.perl6.org/type/Routine#method_candidates

[06:46] <yoleaux> tyil: I'll pass your message to uzl.

[06:46] <tyil> its late in USA, but early in EU

[06:47] <tyil> and many people are currently moving or attending the perl conference in glasgow

[06:47] <benjikun> ^

[06:47] <lookatme_q> JJJ, here is Perl 6 

[06:47] <benjikun> I'm in the US, but I'm one of the few of North American perl6 users that stay up this late ... lol

[06:48] <JJJ> Sorry guys

[06:49] <benjikun> Is there a diagram for all Perl6 types?

[06:49] <benjikun> That'd be nice

[06:50] <tyil> all types, I dont think so

[06:50] <benjikun> well

[06:50] <benjikun> I guess we could use the one generated on the `Any` page

[06:50] <tyil> you can get the graph for a certain type on its page in the docs

[06:50] <benjikun> yeah, I know

[06:50] <benjikun> It'd be nice to have a big render of all of the main core types

[06:51] <benjikun> https://docs.perl6.org/images/type-graph-Any.svg

[06:51] <tyil> yea

[06:51] <tyil> I think thats it

[06:52] <tyil> was about to post it myself :p

[06:52] <benjikun> Mhm

[06:52] <tyil> seems to contain pretty much everything

[06:52] <benjikun> Not very appealing zoomed out

[06:52] <benjikun> contains all of the meta stuff

[07:09] <Geth> ¬¶ perl6-most-wanted: e80f400304 | Michael++ (committed using GitHub Web editor) | most-wanted/modules.md

[07:09] <Geth> ¬¶ perl6-most-wanted: Update modules.md

[07:09] <Geth> ¬¶ perl6-most-wanted: 

[07:09] <Geth> ¬¶ perl6-most-wanted: Removed  API::USNavalObservatory from list of Most Wanted Modules, as it is now in the ecosystem.

[07:09] <Geth> ¬¶ perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/e80f400304

[07:32] *** abraxxa joined
[07:33] *** p6bannerbot sets mode: +v abraxxa

[07:37] *** JJJ left
[08:04] <tyil> looking through that list of most-wanted, I see File::pushd, and I already have IO::Path::Dirstack, implementing popd/pushd. Perl 5's File::pushd seems to keep a stack for each scope, and resets the stack once the scope is exited

[08:05] <tyil> if anyone can give me pointers how I could do the latter part in Perl 6, I'd gladly implement it in IO::Path::Dirstack

[08:14] *** Ven` joined
[08:15] *** p6bannerbot sets mode: +v Ven`

[08:16] <benjikun> I think you'd have to do some weird wrapping stuff, considering P6 doesn't have a destructor method

[08:16] <benjikun> hmm

[08:20] *** stevoo3 joined
[08:21] *** stevoo3 left
[08:22] *** lookatme_q left
[08:23] <tyil> I'd probably need something that gets called when a new block is entered, and exited

[08:25] *** lookatme_q joined
[08:26] *** p6bannerbot sets mode: +v lookatme_q

[08:30] *** xtreak joined
[08:31] *** p6bannerbot sets mode: +v xtreak

[08:31] <benjikun> tyil: Yeah :/

[08:31] <benjikun> There's ought to be some way to do it, I'm sure

[08:32] <benjikun> not coming to my mind though

[08:32] <tyil> same

[08:32] <tyil> but if anyone reads this and knows an answer, do let me know :>

[08:32] <tyil> or poke me at the perl conf tomorrow

[08:33] <tyil> I'll afk for a bit

[08:39] *** tyil[m] joined
[08:39] *** p6bannerbot sets mode: +v tyil[m]

[08:55] *** xtreak left
[09:07] *** metelik left
[09:13] *** robertle joined
[09:14] *** p6bannerbot sets mode: +v robertle

[09:19] *** xtreak joined
[09:20] *** p6bannerbot sets mode: +v xtreak

[09:24] *** stmuk_ joined
[09:25] *** p6bannerbot sets mode: +v stmuk_

[09:26] *** stmuk left
[09:27] *** pmurias joined
[09:28] *** p6bannerbot sets mode: +v pmurias

[09:35] *** Theking^4 joined
[09:36] *** lizmat joined
[09:36] *** Theking^4 left
[09:36] *** p6bannerbot sets mode: +v lizmat

[09:39] *** Ven` left
[09:48] *** spycrab0 joined
[09:48] *** p6bannerbot sets mode: +v spycrab0

[09:53] *** zakharyas joined
[09:54] *** Kaypie joined
[09:54] *** p6bannerbot sets mode: +v zakharyas

[09:54] *** p6bannerbot sets mode: +v Kaypie

[09:55] *** xtreak_ joined
[09:56] *** Kaiepi left
[09:56] *** p6bannerbot sets mode: +v xtreak_

[09:58] *** xtreak left
[10:00] *** pmurias left
[10:01] *** pmurias joined
[10:01] *** p6bannerbot sets mode: +v pmurias

[10:08] *** Ven` joined
[10:09] *** p6bannerbot sets mode: +v Ven`

[10:13] *** diogenese2 joined
[10:17] *** diogenese2 left
[10:21] *** astj joined
[10:21] *** astj left
[10:27] *** lizmat_ joined
[10:28] *** p6bannerbot sets mode: +v lizmat_

[10:29] <lizmat_> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/08/14/2018-33-a-quick-one-from-glasgow/

[10:30] *** lizmat left
[10:30] *** lizmat_ is now known as lizmat

[10:37] *** pmurias left
[10:37] *** araraloren joined
[10:38] *** p6bannerbot sets mode: +v araraloren

[10:39] <araraloren> so the spam robots will try to send message when they join the channel ?

[10:40] *** pmurias joined
[10:41] *** p6bannerbot sets mode: +v pmurias

[10:45] <Altreus> lizmat: is there inherent value in linking to a reddit link to medium?

[10:45] <Altreus> I don't know how to make that question not sound snarky

[10:45] <Altreus> sorry -_-

[10:45] <lizmat> Altreus: not sure what you're referring to

[10:45] *** pmurias left
[10:45] <lizmat> don't know how not to sound dumb  :-)

[10:46] *** pmurias joined
[10:46] <Altreus> the link Small stuff #5: Gather around, it‚Äôs time to get lazy (‚Ä¶but why?) by Jo Christian Oterhals links to reddit

[10:46] <Altreus> but that just links to medium

[10:46] <lizmat> ah... copy_pasto

[10:46] <Altreus> it's https://medium.com/@jcoterhals/perl-6-small-stuff-5-gather-around-its-time-to-get-lazy-but-why-da20fdb18a3b

[10:46] <lizmat> will fix

[10:46] <Altreus> :)

[10:46] <Altreus> I wondered if maybe you meant to link to the comments thread

[10:46] *** p6bannerbot sets mode: +v pmurias

[10:47] <Altreus> the web is way more confusing than it once was

[10:49] *** coltkirk joined
[10:50] *** p6bannerbot sets mode: +v coltkirk

[10:50] <lizmat> yeah... and I'm suffering from an oncoming flu as well.. so I'll be going back to bed for some more rest shortly

[10:52] <Altreus> oh no

[10:52] <Altreus> get well soon!

[10:52] <Altreus> or else :P

[10:52] <lizmat> :-)

[10:52] <lizmat> aye aye!

[10:54] <lizmat> afk&

[11:03] *** pmurias left
[11:05] *** pmurias joined
[11:06] *** p6bannerbot sets mode: +v pmurias

[11:10] <Altreus> we're making a discord bot framework called Yxmi and I can't decide whether it should be Discord::Yxmi, Bot::Discord::Yxmi, Framework::Discord::Yxmi, or other

[11:10] <Altreus> Bot:: has perl5 precedence but it's not a runnable bot

[11:10] <Altreus> well I guess it could be

[11:11] <Altreus> I think I answered my own question

[11:11] <Altreus> ;d

[11:11] <Altreus> :D

[11:11] <xq> Discord::Bot::Yxmi

[11:12] *** itaipu joined
[11:13] *** p6bannerbot sets mode: +v itaipu

[11:19] *** itaipu left
[11:20] *** itaipu joined
[11:20] *** p6bannerbot sets mode: +v itaipu

[11:23] *** pmurias left
[11:24] *** shareable6 joined
[11:25] *** p6bannerbot sets mode: +v shareable6

[11:26] *** itaipu left
[11:27] <Altreus> really? :x

[11:27] *** itaipu joined
[11:27] <Altreus> is there prior art for Tech::Wossname::Name as opposed to Wossname::Tech::Name?

[11:27] *** p6bannerbot sets mode: +v itaipu

[11:28] <tadzik> hmm

[11:28] <tadzik> https://github.com/tadzik/Geo-Coder-OpenCage is the opposite prior art by yours truly :)

[11:28] *** regreg joined
[11:28] *** pmurias joined
[11:29] <tadzik> then again, it's not uncommon for "named" frameworks to just have their own namespace

[11:29] <tadzik> you don't have WWW::Framework::Catalyst

[11:29] *** p6bannerbot sets mode: +v regreg

[11:29] *** p6bannerbot sets mode: +v pmurias

[11:31] <pmurias> with frameworks having cute names instead of sensible hierarchical ones kind of makes sense because a whole lot of them are contending for the same spot

[11:32] *** lizmat left
[11:35] *** itaipu left
[11:36] *** itaipu joined
[11:36] *** p6bannerbot sets mode: +v itaipu

[11:39] *** itaipu left
[11:40] *** itaipu joined
[11:41] *** titsuki joined
[11:41] *** itaipu_ joined
[11:41] *** p6bannerbot sets mode: +v itaipu

[11:41] *** p6bannerbot sets mode: +v titsuki

[11:41] *** p6bannerbot sets mode: +v itaipu_

[11:43] *** itaipu left
[11:43] *** itaipu_ left
[11:46] *** itaipu joined
[11:46] *** itaipu_ joined
[11:46] *** itaipu left
[11:47] *** p6bannerbot sets mode: +v itaipu_

[11:47] *** itaipu_ left
[11:48] *** Zen_ left
[11:48] *** Zen joined
[11:49] *** Zen is now known as Guest32749

[11:49] *** p6bannerbot sets mode: +v Guest32749

[11:51] *** itaipu joined
[11:51] <sjn>  

[11:51] *** itaipu_ joined
[11:51] * sjn is looking forward to the Perl Conference in Glasgow :)

[11:51] *** p6bannerbot sets mode: +v itaipu

[11:52] *** p6bannerbot sets mode: +v itaipu_

[11:52] *** itaipu_ left
[11:52] *** Guest32749 left
[11:53] *** itaipu left
[11:55] *** itaipu joined
[11:56] *** itaipu_ joined
[11:56] *** p6bannerbot sets mode: +v itaipu

[11:56] *** p6bannerbot sets mode: +v itaipu_

[11:56] *** itaipu left
[11:57] *** itaipu_ left
[12:01] *** itaipu joined
[12:01] *** itaipu_ joined
[12:01] *** p6bannerbot sets mode: +v itaipu

[12:02] *** p6bannerbot sets mode: +v itaipu_

[12:03] *** itaipu left
[12:03] *** itaipu_ left
[12:03] *** xtreak joined
[12:04] *** xtreak left
[12:06] *** itaipu joined
[12:06] *** itaipu_ joined
[12:06] *** p6bannerbot sets mode: +v itaipu

[12:06] *** xtreak_ left
[12:07] *** p6bannerbot sets mode: +v itaipu_

[12:07] *** itaipu left
[12:07] *** itaipu_ left
[12:11] *** itaipu joined
[12:11] *** itaipu_ joined
[12:11] *** p6bannerbot sets mode: +v itaipu

[12:12] *** p6bannerbot sets mode: +v itaipu_

[12:14] *** itaipu left
[12:15] *** pmurias left
[12:15] *** itaipu_ left
[12:16] *** itaipu joined
[12:16] *** itaipu_ joined
[12:17] *** p6bannerbot sets mode: +v itaipu

[12:17] *** p6bannerbot sets mode: +v itaipu_

[12:17] *** itaipu_ left
[12:18] *** itaipu left
[12:19] *** pmurias joined
[12:20] *** p6bannerbot sets mode: +v pmurias

[12:21] *** itaipu joined
[12:21] *** itaipu_ joined
[12:22] *** p6bannerbot sets mode: +v itaipu

[12:22] *** p6bannerbot sets mode: +v itaipu_

[12:23] *** lizmat joined
[12:23] *** itaipu left
[12:23] *** itaipu_ left
[12:23] *** p6bannerbot sets mode: +v lizmat

[12:26] *** itaipu joined
[12:26] *** itaipu_ joined
[12:27] *** p6bannerbot sets mode: +v itaipu

[12:27] *** p6bannerbot sets mode: +v itaipu_

[12:27] *** itaipu_ left
[12:27] *** itaipu left
[12:29] *** Kaypie left
[12:31] *** itaipu joined
[12:31] *** itaipu_ joined
[12:32] *** p6bannerbot sets mode: +v itaipu

[12:32] *** regreg left
[12:32] *** p6bannerbot sets mode: +v itaipu_

[12:32] *** itaipu_ left
[12:32] *** itaipu left
[12:32] *** Ven` left
[12:36] *** itaipu joined
[12:36] *** itaipu_ joined
[12:36] *** p6bannerbot sets mode: +v itaipu

[12:37] *** p6bannerbot sets mode: +v itaipu_

[12:38] *** itaipu left
[12:38] *** itaipu_ left
[12:41] *** itaipu joined
[12:41] *** regreg joined
[12:41] *** itaipu_ joined
[12:41] *** p6bannerbot sets mode: +v itaipu

[12:41] *** p6bannerbot sets mode: +v regreg

[12:42] *** p6bannerbot sets mode: +v itaipu_

[12:42] *** itaipu left
[12:43] *** itaipu_ left
[12:46] *** itaipu joined
[12:46] *** itaipu_ joined
[12:46] *** araraloren_ joined
[12:46] *** p6bannerbot sets mode: +v itaipu

[12:47] *** p6bannerbot sets mode: +v itaipu_

[12:47] *** p6bannerbot sets mode: +v araraloren_

[12:47] *** pmurias left
[12:47] *** itaipu_ left
[12:47] *** itaipu left
[12:48] *** pmurias joined
[12:49] *** araraloren left
[12:49] *** p6bannerbot sets mode: +v pmurias

[12:51] *** w_richard_w joined
[12:51] *** itaipu joined
[12:51] *** itaipu_ joined
[12:51] <Altreus> tadzik: right, but this is a new ecosystem so we can start doing it right

[12:51] *** jeromelanteri left
[12:52] *** p6bannerbot sets mode: +v w_richard_w

[12:52] *** p6bannerbot sets mode: +v itaipu

[12:52] *** p6bannerbot sets mode: +v itaipu_

[12:52] *** itaipu_ left
[12:52] *** itaipu left
[12:56] *** itaipu joined
[12:56] *** itaipu_ joined
[12:57] *** p6bannerbot sets mode: +v itaipu

[12:57] *** p6bannerbot sets mode: +v itaipu_

[12:57] *** Kaiepi joined
[12:58] *** itaipu_ left
[12:59] *** diakopter left
[12:59] *** itaipu left
[13:00] *** Ven` joined
[13:01] *** p6bannerbot sets mode: +v Ven`

[13:01] *** itaipu joined
[13:01] *** araraloren_ left
[13:01] <pmurias> Altreus: Geo::Coder::OpenCage seems to make more sense then OpenCage::Geo::Coder

[13:01] *** itaipu_ joined
[13:02] *** araraloren_ joined
[13:02] *** p6bannerbot sets mode: +v itaipu

[13:02] <pmurias> Altreus: especially if all the Geo::Coder::* modules have compatible API

[13:02] *** p6bannerbot sets mode: +v itaipu_

[13:02] *** itaipu_ left
[13:02] *** p6bannerbot sets mode: +v araraloren_

[13:02] *** itaipu left
[13:06] *** itaipu joined
[13:06] *** itaipu_ joined
[13:07] *** p6bannerbot sets mode: +v itaipu

[13:07] <tadzik> Altreus: true

[13:07] *** itaipu left
[13:07] *** p6bannerbot sets mode: +v itaipu_

[13:07] *** itaipu_ left
[13:11] *** itaipu joined
[13:11] *** itaipu_ joined
[13:12] *** p6bannerbot sets mode: +v itaipu

[13:12] *** p6bannerbot sets mode: +v itaipu_

[13:12] *** itaipu left
[13:13] *** itaipu_ left
[13:13] *** diakopter joined
[13:13] *** p6bannerbot sets mode: +v diakopter

[13:16] *** itaipu joined
[13:16] *** itaipu_ joined
[13:17] *** p6bannerbot sets mode: +v itaipu

[13:17] *** p6bannerbot sets mode: +v itaipu_

[13:19] *** itaipu_ left
[13:19] *** itaipu left
[13:21] *** itaipu joined
[13:21] *** itaipu_ joined
[13:22] *** p6bannerbot sets mode: +v itaipu

[13:22] *** p6bannerbot sets mode: +v itaipu_

[13:23] *** vrurg joined
[13:23] *** p6bannerbot sets mode: +v vrurg

[13:23] *** itaipu left
[13:24] *** itaipu_ left
[13:26] *** itaipu joined
[13:26] *** itaipu_ joined
[13:27] *** p6bannerbot sets mode: +v itaipu

[13:27] *** p6bannerbot sets mode: +v itaipu_

[13:28] *** alexghacker left
[13:28] *** skids joined
[13:28] *** itaipu left
[13:28] *** itaipu_ left
[13:29] *** p6bannerbot sets mode: +v skids

[13:31] *** itaipu joined
[13:31] *** itaipu_ joined
[13:32] *** p6bannerbot sets mode: +v itaipu

[13:32] *** p6bannerbot sets mode: +v itaipu_

[13:33] *** itaipu left
[13:33] *** itaipu_ left
[13:36] *** itaipu joined
[13:36] *** itaipu_ joined
[13:37] *** p6bannerbot sets mode: +v itaipu

[13:37] *** p6bannerbot sets mode: +v itaipu_

[13:38] *** regreg left
[13:38] *** itaipu left
[13:41] *** itaipu joined
[13:42] *** Zen_ joined
[13:42] *** p6bannerbot sets mode: +v itaipu

[13:42] *** itaipu_ left
[13:43] *** p6bannerbot sets mode: +v Zen_

[13:43] *** itaipu_ joined
[13:43] *** alexghacker joined
[13:44] *** p6bannerbot sets mode: +v itaipu_

[13:44] *** itaipu left
[13:44] *** regreg joined
[13:44] *** p6bannerbot sets mode: +v alexghacker

[13:44] *** itaipu_ left
[13:45] *** p6bannerbot sets mode: +v regreg

[13:46] *** itaipu joined
[13:47] *** p6bannerbot sets mode: +v itaipu

[13:48] *** itaipu_ joined
[13:48] *** itaipu left
[13:49] *** p6bannerbot sets mode: +v itaipu_

[13:51] *** itaipu joined
[13:52] *** itaipu_ left
[13:52] *** p6bannerbot sets mode: +v itaipu

[13:53] *** itaipu left
[13:53] *** itaipu joined
[13:54] *** p6bannerbot sets mode: +v itaipu

[13:55] *** curan left
[13:55] *** itaipu left
[13:56] *** itaipu joined
[13:57] *** p6bannerbot sets mode: +v itaipu

[13:58] *** itaipu_ joined
[13:59] *** p6bannerbot sets mode: +v itaipu_

[13:59] *** Zen_ left
[13:59] *** itaipu_ left
[13:59] *** lizmat left
[13:59] *** Zen_ joined
[14:00] *** p6bannerbot sets mode: +v Zen_

[14:01] *** zakharyas left
[14:01] *** zakharyas joined
[14:02] *** itaipu left
[14:02] *** p6bannerbot sets mode: +v zakharyas

[14:02] *** itaipu joined
[14:03] *** itaipu_ joined
[14:03] *** p6bannerbot sets mode: +v itaipu

[14:03] *** itaipu left
[14:04] *** p6bannerbot sets mode: +v itaipu_

[14:05] *** itaipu_ left
[14:06] *** zakharyas left
[14:07] *** itaipu joined
[14:08] *** p6bannerbot sets mode: +v itaipu

[14:08] *** itaipu_ joined
[14:09] *** p6bannerbot sets mode: +v itaipu_

[14:09] *** itaipu left
[14:10] *** itaipu_ left
[14:11] *** C0c0dril011 joined
[14:12] *** C0c0dril011 left
[14:12] *** itaipu joined
[14:13] *** p6bannerbot sets mode: +v itaipu

[14:13] *** itaipu_ joined
[14:14] *** p6bannerbot sets mode: +v itaipu_

[14:14] *** itaipu left
[14:15] *** itaipu_ left
[14:17] *** itaipu joined
[14:18] *** p6bannerbot sets mode: +v itaipu

[14:18] *** itaipu left
[14:18] *** itaipu joined
[14:18] *** w_richard_w left
[14:19] *** p6bannerbot sets mode: +v itaipu

[14:20] *** itaipu left
[14:22] *** itaipu joined
[14:23] *** p6bannerbot sets mode: +v itaipu

[14:23] *** itaipu_ joined
[14:24] *** p6bannerbot sets mode: +v itaipu_

[14:24] *** itaipu left
[14:24] *** Ven` left
[14:25] *** itaipu_ left
[14:27] *** vrurg left
[14:27] *** itaipu joined
[14:28] *** p6bannerbot sets mode: +v itaipu

[14:28] *** vrurg joined
[14:28] *** itaipu_ joined
[14:29] *** p6bannerbot sets mode: +v vrurg

[14:29] *** itaipu left
[14:29] *** p6bannerbot sets mode: +v itaipu_

[14:30] *** itaipu_ left
[14:32] *** itaipu joined
[14:33] *** p6bannerbot sets mode: +v itaipu

[14:33] *** itaipu_ joined
[14:34] *** itaipu left
[14:34] *** p6bannerbot sets mode: +v itaipu_

[14:37] *** itaipu joined
[14:38] *** p6bannerbot sets mode: +v itaipu

[14:39] *** itaipu_ left
[14:39] *** itaipu_ joined
[14:39] *** Zen_ left
[14:40] *** Zen_ joined
[14:40] *** itaipu left
[14:40] *** p6bannerbot sets mode: +v itaipu_

[14:41] *** p6bannerbot sets mode: +v Zen_

[14:41] *** itaipu_ left
[14:41] *** Khisanth left
[14:42] *** theWhisper_26 joined
[14:42] *** itaipu joined
[14:43] *** theWhisper_26 left
[14:43] *** p6bannerbot sets mode: +v itaipu

[14:44] *** itaipu left
[14:44] *** itaipu joined
[14:45] *** p6bannerbot sets mode: +v itaipu

[14:46] *** itaipu left
[14:47] *** itaipu joined
[14:48] *** p6bannerbot sets mode: +v itaipu

[14:49] *** itaipu_ joined
[14:50] *** p6bannerbot sets mode: +v itaipu_

[14:51] *** itaipu_ left
[14:54] *** Khisanth joined
[14:55] *** itaipu_ joined
[14:55] *** p6bannerbot sets mode: +v Khisanth

[14:55] *** p6bannerbot sets mode: +v itaipu_

[14:57] <itaipu> p6: say 3;

[14:57] <camelia> rakudo-moar 2b2f568a3: OUTPUT: ¬´3‚ê§¬ª

[14:59] *** itaipu_ left
[14:59] *** itaipu left
[14:59] *** itaipu joined
[15:00] *** itaipu_ joined
[15:00] *** p6bannerbot sets mode: +v itaipu

[15:01] *** p6bannerbot sets mode: +v itaipu_

[15:04] <araraloren_> How can I call a method in a base role ?

[15:05] <jnthn> self.RoleName::method()

[15:05] <moritz> self.method or self.Role::method

[15:05] <araraloren_> m: role B { method f() { "called".say; }; }; class C does B { method f() { "IN C".say; self.B::f(); }; }; C.new.f

[15:05] <camelia> rakudo-moar 2b2f568a3: OUTPUT: ¬´IN C‚ê§called‚ê§¬ª

[15:05] <araraloren_> I mean this

[15:05] <araraloren_> m: role B { method f() { "called".say; }; }; class C does B { method f() { "IN C".say; self.f(); }; }; C.new.f

[15:06] <camelia> rakudo-moar 2b2f568a3: OUTPUT: ¬´(timeout)IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚ê§IN C‚Ä¶¬ª

[15:06] <araraloren_> I implement a new version in C, but I want call the f in B

[15:06] <araraloren_> Is this the only way ?

[15:06] <araraloren_> why nextsame is not working

[15:07] <araraloren_> m: role B[::T] { method f() { "called".say; }; }; class C does B[Int] { method f() { "IN C".say; self.B[Int]::f(); }; }; C.new.f

[15:07] <camelia> rakudo-moar 2b2f568a3: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> 3 { method f() { "IN C".say; self.B[Int]:7‚èè5:f(); }; }; C.new.f‚ê§    expecting any of:‚ê§        colon pair‚ê§¬ª

[15:07] <araraloren_> And Is there a way call the method of a paramterized role

[15:07] *** MilkmanDan left
[15:08] <araraloren_> m: role B[::T] { method f() { "called".say; }; }; class C does B[Int] { method f() { "IN C".say; self.^roles[0].f(); }; }; C.new.f

[15:08] <camelia> rakudo-moar 2b2f568a3: OUTPUT: ¬´IN C‚ê§called‚ê§¬ª

[15:08] <araraloren_> m: role B[::T] { method f() { dd self; "called".say; }; }; class C does B[Int] { method f() { "IN C".say; self.^roles[0].f(); }; }; C.new.f

[15:08] <camelia> rakudo-moar 2b2f568a3: OUTPUT: ¬´IN C‚ê§B[Int]‚ê§called‚ê§¬ª

[15:08] *** MilkmanDan joined
[15:08] *** p6bannerbot sets mode: +v MilkmanDan

[15:08] <araraloren_> m: role B { method f() { dd self; "called".say; }; }; class C does B { method f() { "IN C".say; self.B::f(); }; }; C.new.f

[15:08] <camelia> rakudo-moar 2b2f568a3: OUTPUT: ¬´IN C‚ê§C.new‚ê§called‚ê§¬ª

[15:09] <araraloren_> seems like not working

[15:09] *** itaipu left
[15:09] *** itaipu joined
[15:10] *** p6bannerbot sets mode: +v itaipu

[15:10] <jnthn> m: role B[::T] { method f() { "called".say; }; }; my constant \BInt = B[Int]; class C does BInt { method f() { "IN C".say; self.BInt::f(); }; }; C.new.f

[15:10] <camelia> rakudo-moar 2b2f568a3: OUTPUT: ¬´IN C‚ê§called‚ê§¬ª

[15:10] *** Zen__ joined
[15:11] <jnthn> You just need to arrange of a syntactically valid name to use in the qualified call

[15:11] <jnthn> *for a

[15:11] *** itaipu_ left
[15:11] <araraloren_> oh, great 

[15:11] <araraloren_> thanks jnthn 

[15:11] *** p6bannerbot sets mode: +v Zen__

[15:11] *** itaipu_ joined
[15:12] <jnthn> And nextsame won't do it because roles do flattening composition, not inheritance

[15:12] *** p6bannerbot sets mode: +v itaipu_

[15:12] <jnthn> So from a dispatch point of view it's as if the role method never existed if it's replaced.

[15:12] <araraloren_> so, where the method f in the role ?

[15:12] <araraloren_> we have a f in C, where the method f in B ?

[15:13] <jnthn> In what sense? For introspection?

[15:13] *** Zen_ left
[15:13] <jnthn> Roles are generic, and are made concrete per composition

[15:14] <jnthn> The concretizations are stored in the meta-object for the class

[15:14] <jnthn> That's how they are resolved to the self.Foo::bar calling form

[15:14] <araraloren_> I just curious :)

[15:14] <jnthn> We can't actually call the method declared in the role directly because it's generic 

[15:14] *** itaipu left
[15:14] <araraloren_> oh

[15:15] <jnthn> So there's quite a bit going on behind the scenes to make self.SomeRole::foo work

[15:15] <araraloren_> sounds cool

[15:15] <jnthn> (Though thankfully since I stuck a spesh plugin there to optimize it, the calls are actually fast, whereas a few months ago they were 12x slower than normal method calls :))

[15:15] *** itaipu joined
[15:16] *** p6bannerbot sets mode: +v itaipu

[15:17] <araraloren_> yeah, I have seen the post long time ago :)

[15:17] <araraloren_> great job, jnthn ++

[15:17] *** itaipu_ left
[15:18] *** itaipu left
[15:18] *** itaipu_ joined
[15:19] *** AlexDaniel` left
[15:19] *** AlexDaniel` joined
[15:19] *** moon.freenode.net sets mode: +v AlexDaniel`

[15:19] *** p6bannerbot sets mode: +v AlexDaniel`

[15:19] *** p6bannerbot sets mode: +v itaipu_

[15:20] *** itaipu joined
[15:21] *** p6bannerbot sets mode: +v itaipu

[15:22] *** itaipu_ left
[15:23] *** araraloren_ left
[15:23] *** itaipu_ joined
[15:24] *** p6bannerbot sets mode: +v itaipu_

[15:26] *** itaipu_ left
[15:28] <El_Che> spam seems to be gone for now

[15:28] *** itaipu_ joined
[15:29] *** p6bannerbot sets mode: +v itaipu_

[15:29] *** itaipu left
[15:30] *** itaipu_ left
[15:30] *** itaipu joined
[15:30] *** mcmillhj joined
[15:30] *** robertle left
[15:31] *** strengthen joined
[15:31] *** mcmillhj left
[15:31] *** p6bannerbot sets mode: +v itaipu

[15:32] *** itaipu left
[15:33] *** itaipu joined
[15:34] *** p6bannerbot sets mode: +v itaipu

[15:35] *** itaipu left
[15:35] *** strengthen left
[15:35] *** itaipu joined
[15:36] *** p6bannerbot sets mode: +v itaipu

[15:36] *** Zen__ left
[15:37] *** itaipu left
[15:38] *** itaipu joined
[15:39] *** itaipu left
[15:40] *** itaipu joined
[15:41] *** p6bannerbot sets mode: +v itaipu

[15:41] *** mst_ is now known as mst

[15:41] *** Guest19967 joined
[15:42] *** kloeri23 joined
[15:43] *** itaipu_ joined
[15:43] *** itaipu left
[15:44] *** p6bannerbot sets mode: +v itaipu_

[15:45] *** itaipu_ left
[15:45] *** Guest19967 left
[15:45] *** itaipu joined
[15:46] *** p6bannerbot sets mode: +v itaipu

[15:47] *** kloeri23 left
[15:47] *** zakharyas joined
[15:48] *** p6bannerbot sets mode: +v zakharyas

[15:48] *** itaipu_ joined
[15:49] *** p6bannerbot sets mode: +v itaipu_

[15:49] *** itaipu left
[15:54] *** MilkmanDan left
[15:56] *** Ven` joined
[15:56] *** p6bannerbot sets mode: +v Ven`

[15:59] *** abraxxa left
[16:00] *** MilkmanDan joined
[16:00] *** p6bannerbot sets mode: +v MilkmanDan

[16:05] *** regreg left
[16:06] *** zakharyas left
[16:11] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Cordova-0.0.6.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo::VSTS::YAML::Cordova:cpan:MELEZHIK

[16:13] *** caa51h joined
[16:14] *** ensyde joined
[16:14] *** p6bannerbot sets mode: +v caa51h

[16:14] *** ensyde left
[16:24] *** lucasb joined
[16:25] *** p6bannerbot sets mode: +v lucasb

[16:26] *** leah2 left
[16:29] *** leah2 joined
[16:29] *** p6bannerbot sets mode: +v leah2

[16:30] *** Xliff left
[16:46] *** Xliff joined
[16:47] *** p6bannerbot sets mode: +v Xliff

[16:48] <Xliff> \o

[16:49] <Xliff> Does anyone know how a NativeCall binding to a va_list parameter would work?

[16:49] *** robertle joined
[16:50] *** p6bannerbot sets mode: +v robertle

[16:51] <Juerd> Whoa :)

[16:53] <Xliff> Juerd: ?

[16:53] <Juerd> Xliff: Ambitious :)

[16:53] <Xliff> Oh. va_list?

[16:53] <Juerd> Yea

[16:53] <Xliff> I don't think I can do it natively.

[16:53] <Xliff> It would have to be a NativeCall mechanism.

[16:54] <Xliff> mainly because everything I've seen says that va_list needs macros va_start and va_end and so on.

[16:54] <Xliff> So after thunking on it (LOL) this might need to be a MoarVM thing.

[16:55] <Xliff> Juerd: Can't write bindings for some of the features in GTK without it. GTKListStore for example.

[16:56] <Juerd> I understand

[16:57] <Xliff> So, I take it no one has tackled this?

[16:57] <Geth> ¬¶ ecosystem: 190a8350f0 | (Zoffix Znet)++ (committed using GitHub Web editor) | META.list

[16:57] <Geth> ¬¶ ecosystem: Move Toaster to p6cm

[16:57] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/190a8350f0

[16:58] <tobs> Xliff: fwiw I remember it being discussed recently http://colabti.org/irclogger/irclogger_log/perl6?date=2018-06-17#l683

[16:58] <Xliff> tobs++

[17:03] <Xliff> LOL! I was actually online and idle at that point.

[17:04] <Xliff> Why can't MoarVM wrap va_start and va_end?

[17:05] <Xliff> va_list, va_start and va_end are defines, and couldn't a function match those?

[17:05] <Xliff> Might be interesting to try and compile an .so and see if that works.

[17:06] *** w_richard_w joined
[17:07] <timotimo> difficult to use a function for that because you call a function, and that gives you a call frame for that rather than the callframe for the function you're using the va_ functions from

[17:07] *** p6bannerbot sets mode: +v w_richard_w

[17:10] *** w_richard_w left
[17:10] *** w_richard_w joined
[17:10] <Xliff> OK. I will have to look around and see if there are alternatives in the GTK spec.

[17:10] <Xliff> Thanks.

[17:11] *** w_richard_w left
[17:12] *** itaipu_ left
[17:12] *** AlexDaniel left
[17:13] <b2gills> m: use NativeCall; sub c-printf-II (Str,int32,int32 --> int32) is native is symbol<printf> {}; c-printf-II('%d/%d',1,3)

[17:13] <camelia> rakudo-moar 66aa6892b: OUTPUT: ¬´1/3¬ª

[17:17] *** itaipu joined
[17:18] *** cjkinni left
[17:18] *** p6bannerbot sets mode: +v itaipu

[17:18] *** cjkinni joined
[17:19] *** p6bannerbot sets mode: +v cjkinni

[17:19] *** itaipu_ joined
[17:20] *** p6bannerbot sets mode: +v itaipu_

[17:20] *** cjkinni left
[17:23] *** telnet left
[17:26] *** lizmat joined
[17:27] *** p6bannerbot sets mode: +v lizmat

[17:34] *** Maven_ joined
[17:34] *** Maven_ left
[17:34] *** inbioz joined
[17:35] *** p6bannerbot sets mode: +v inbioz

[17:39] *** thomasb9511 joined
[17:41] *** ZLSA19 joined
[17:42] *** thomasb9511 left
[17:42] *** p6bannerbot sets mode: +v ZLSA19

[17:43] *** AlexDaniel joined
[17:43] *** p6bannerbot sets mode: +v AlexDaniel

[17:44] *** sumandoc joined
[17:44] *** p6bannerbot sets mode: +v sumandoc

[17:45] *** lucasb left
[17:46] *** ZLSA19 left
[17:46] <sumandoc> Here is gist with C file containing 3 functions. When I write functions with nativecall in perl 6, for each function I am doing "is native(shared_library)". Is there any way to avoid doing this duplication

[17:46] <sumandoc> https://gist.github.com/sumandoc/8b20c1b0e323a89359e00a671833974f

[17:47] *** lizmat left
[17:47] <sumandoc> Everytime for each function  I have to write "is native trait" for each function. 

[17:47] <jnthn> Declare a constant to hold shared_library and use the constant

[17:48] *** MilkmanDan left
[17:50] <sumandoc> jnthn Still after declaring constant, is native trait will be in each function. 

[17:50] *** MilkmanDan joined
[17:50] *** p6bannerbot sets mode: +v MilkmanDan

[17:50] <sumandoc> jnthn Any link I can look for this?

[17:51] <xinming> m: my $x; $x ~~ 20|rx/3\d/

[17:51] <camelia> rakudo-moar 7c75ab8e4: OUTPUT: ¬´Use of uninitialized value of type Any in string context.‚ê§Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.‚ê§  in block <unit> at <tmp> line 1‚ê§¬ª

[17:52] <xinming> m:  (20 ~~ 20|rx/3\d/).say;

[17:52] <camelia> rakudo-moar 7c75ab8e4: OUTPUT: ¬´True‚ê§¬ª

[17:52] <xinming> m:  (30 ~~ 20|rx/3\d/).say;

[17:52] <camelia> rakudo-moar 7c75ab8e4: OUTPUT: ¬´True‚ê§¬ª

[17:52] <xinming> m:  (40 ~~ 20|rx/3\d/).say;

[17:52] <camelia> rakudo-moar 7c75ab8e4: OUTPUT: ¬´False‚ê§¬ª

[17:57] *** molaf joined
[17:57] *** p6bannerbot sets mode: +v molaf

[18:04] *** Kaiepi left
[18:04] *** sumandoc left
[18:11] *** jcline2 joined
[18:15] *** inbioz left
[18:15] *** inbioz joined
[18:16] *** p6bannerbot sets mode: +v inbioz

[18:17] *** benoliver99923 joined
[18:17] *** jcline2 left
[18:18] *** benoliver99923 left
[18:20] *** inbioz left
[18:27] *** sauvin left
[19:04] *** xinming_ joined
[19:05] *** p6bannerbot sets mode: +v xinming_

[19:07] *** xinming left
[19:17] <SmokeMachine> m: say False ?? "foi!!" # is this a LTA error?

[19:17] <camelia> rakudo-moar 7c75ab8e4: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Your !! was gobbled by the expression in the middle; please parenthesize‚ê§at <tmp>:1‚ê§------> 3 False ?? "foi!!" # is this a LTA error?7‚èè5<EOL>‚ê§¬ª

[19:19] *** committable6 joined
[19:19] *** p6bannerbot sets mode: +v committable6

[19:25] *** zakharyas joined
[19:25] *** |oLa| left
[19:25] *** p6bannerbot sets mode: +v zakharyas

[19:39] <geekosaur> yes, its guessing wrongly as to the cause of the syntax error

[19:41] <buggable> New CPAN upload: Test-HTTP-Server-0.3.0.tar.gz by SCIMON http://modules.perl6.org/dist/Test::HTTP::Server:cpan:SCIMON

[19:45] *** colomon left
[19:57] *** coltkirk left
[20:05] *** Kaiepi joined
[20:06] *** p6bannerbot sets mode: +v Kaiepi

[20:08] *** dct joined
[20:08] *** p6bannerbot sets mode: +v dct

[20:25] *** Ven` left
[20:31] *** zakharyas left
[20:36] *** acerbic0 joined
[20:37] *** lizmat joined
[20:37] *** acerbic0 left
[20:38] *** p6bannerbot sets mode: +v lizmat

[20:41] <Geth> ¬¶ doc: 81678327ad | (JJ Merelo)++ | doc/Type/Iterable.pod6

[20:41] <synopsebot> Link: https://doc.perl6.org/type/Iterable

[20:41] <Geth> ¬¶ doc: Reflows, add markup

[20:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/81678327ad

[20:41] <Geth> ¬¶ doc: 5a3133bc02 | (JJ Merelo)++ | 3 files

[20:41] <Geth> ¬¶ doc: Minor changes and reflow

[20:41] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/5a3133bc02

[20:41] <xinming_> What are the differences between callwith and samewith?

[20:42] *** Ven` joined
[20:42] <timotimo> one calls, the other more or less "gotos"s

[20:43] <timotimo> so a "callwith" will return

[20:43] *** p6bannerbot sets mode: +v Ven`

[20:47] *** Ven` left
[20:49] <Altreus> I seem to have come a cropper of the fact that two enums in the same scope have to have unique member names

[20:49] <Altreus> I sort of assumed the symbols defined by the enum would be sort of namespaced to the enum

[20:50] <Altreus> so enum Foo ( <quux quack> ) would be referred to as Foo::quux

[20:50] <timotimo> i think it's magical; if you use them without their namespace they get exported if there's no conflict? or something?

[20:50] <timotimo> m: enum Foo <quux quack>; say MY::.keys

[20:50] <camelia> rakudo-moar 7c75ab8e4: OUTPUT: ¬´(quack $?PACKAGE $=pod $=finish $/ ::?PACKAGE !UNIT_MARKER Foo quux $¬¢ $! $_ EXPORT GLOBALish)‚ê§¬ª

[20:50] <timotimo> m: enum Foo <quux quack>; enum Bar <quux qook>; say MY::.keys

[20:50] <camelia> rakudo-moar 7c75ab8e4: OUTPUT: ¬´Potential difficulties:‚ê§    Redeclaration of symbol 'quux'‚ê§    at <tmp>:1‚ê§    ------> 3m Foo <quux quack>; enum Bar <quux qook>7‚èè5; say MY::.keys‚ê§($/ quack quux qook Foo $=finish $=pod !UNIT_MARKER $¬¢ Bar $! $_ EXPORT ::?PACKAGE GLOBALi‚Ä¶¬ª

[20:50] <timotimo> oh, ok

[20:57] <xinming_> Is it possible to manually get the nextsame code?

[20:57] *** Coffee-N-Donuts joined
[20:57] *** p6bannerbot sets mode: +v Coffee-N-Donuts

[20:57] <xinming_> I mean, get the ref to it, then, later, we call it by hand.

[20:58] <timotimo> hm, i don't think so. what happens if you just return a block that does "nextsame"?

[20:59] <xinming_> I'll try.

[21:00] <xinming_> Because I found, that when we use next same, it seems, rakudo get mixed with next method where I take the snapshot.

[21:00] <xinming_> I mean, where I do the next same, It just get skipped

[21:01] <Altreus> I suppose I just ... add a prefix to all the names :s

[21:01] <Altreus> I don't want weird, inconsistent ones

[21:02] <xinming_> timotimo: I can now get the ideas of  callwith nextwith  callsame samewith

[21:02] <xinming_> callsame/nextsame callwith/nextwith    But still in confusion about the samewith

[21:03] *** Ven` joined
[21:03] *** skids left
[21:03] *** p6bannerbot sets mode: +v Ven`

[21:05] <xinming_> It's the bug in newest rakudo.

[21:05] <xinming_> after downgrade, It worked fine.

[21:06] <xinming_> Hope to see 2018.08 to be released soon

[21:07] *** Ven` left
[21:09] <timotimo> Altreus: you can put them in a package of your own

[21:10] <timotimo> hm, do anonymous enums exist

[21:10] <Altreus> they're "my" enums in a class

[21:10] <timotimo> m: enum :: <foo bar>;

[21:10] <camelia> rakudo-moar b7190f649: ( no output )

[21:10] <timotimo> cool.

[21:10] <timotimo> m: package Foo { enum :: <foo bar> }; package Bar { enum :: <foo boo> }; say Foo::foo; say Bar::foo

[21:10] <camelia> rakudo-moar b7190f649: OUTPUT: ¬´foo‚ê§foo‚ê§¬ª

[21:11] <timotimo> m: package Foo { enum :: <foo bar> }; package Bar { enum :: <foo boo> }; say Foo::foo.^longname; say Bar::foo.^longname

[21:11] <camelia> rakudo-moar b7190f649: OUTPUT: ¬´No such method 'longname' for invocant of type 'Perl6::Metamodel::EnumHOW'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:11] <timotimo> m: package Foo { enum :: <foo bar> }; package Bar { enum :: <foo boo> }; say Foo::foo.^long_name; say Bar::foo.^long_name

[21:11] <camelia> rakudo-moar b7190f649: OUTPUT: ¬´No such method 'long_name' for invocant of type 'Perl6::Metamodel::EnumHOW'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:11] <timotimo> i thought this was a thing that exists

[21:11] <timotimo> anyway, Altreus, this ought to help

[21:12] <timotimo> xinming_: i'm not sure what bug you mean, can you show a short piece of code for the bug?

[21:14] *** dct left
[21:17] <Altreus> oh I see

[21:17] <Altreus> can I have 'my package' or is 'package X {...}' sufficient?

[21:18] *** itaipu_ left
[21:18] *** regreg joined
[21:18] <jnthn> xinming_: there's nextcallee if you want to get the thing nextsame would go to

[21:18] *** itaipu left
[21:19] <timotimo> ooooh

[21:19] *** p6bannerbot sets mode: +v regreg

[21:19] <timotimo> i thought i remembered something like that, but then i assumed i was just thinking of "lastcall"

[21:20] *** itaipu joined
[21:20] *** itaipu_ joined
[21:20] *** itaipu left
[21:21] *** p6bannerbot sets mode: +v itaipu_

[21:21] <Altreus> Why doesn't this DWIM? Type check failed in assignment to $!id; expected Int but got Str ("269438629775015936")

[21:21] <Altreus> Didn't think perl6 suffered from too-big ints so it won't be that surely

[21:22] *** itaipu_ left
[21:23] <jnthn> Int is a types are constraints, not a coercion

[21:24] <Altreus> sure but since there exists a coercion I anticipated that it would use it

[21:24] <Altreus> Can I get it to use it by magic? :)

[21:25] <b2gills> m: constant Foo := do { enum Foo < quux quack >; Foo }; constant Bar := do { enum Bar ( quux => 2, quack => 3 ); Bar }; say Foo::quux ~~ Foo

[21:25] <camelia> rakudo-moar b7190f649: OUTPUT: ¬´True‚ê§¬ª

[21:25] *** ChoHag_ joined
[21:25] *** itaipu joined
[21:25] *** itaipu_ joined
[21:25] *** p6bannerbot sets mode: +v ChoHag_

[21:26] *** p6bannerbot sets mode: +v itaipu

[21:26] *** p6bannerbot sets mode: +v itaipu_

[21:26] <Altreus> cos I'm just trying to inflate from JSON and it would be handy if it tried to coerce the stuff I pass to the constructor before it complains about the structure

[21:26] <Altreus> Otherwise I have to manually convert all the types

[21:26] *** itaipu left
[21:26] <Altreus> :s

[21:27] <jnthn> You can write something like submethod TWEAK(Int() :$!foo) { } or some such

[21:27] <jnthn> Which asks for it and does it fairly declaratively

[21:27] *** ChoHag left
[21:27] <Altreus> hmm, that's almost worse, given how many properties the class has

[21:28] <Altreus> What's the difference between Int and Int() there?

[21:29] *** itaipu_ left
[21:29] <b2gills> Int() is short for Int(Any), it coerces an Any to an Int

[21:29] <Altreus> o

[21:30] *** itaipu joined
[21:30] *** itaipu_ joined
[21:31] *** p6bannerbot sets mode: +v itaipu

[21:31] *** p6bannerbot sets mode: +v itaipu_

[21:32] <b2gills> m: my Any $Any = '123'; dd Int( $Any ); # it resembles this

[21:32] <camelia> rakudo-moar b7190f649: OUTPUT: ¬´123‚ê§¬ª

[21:33] *** itaipu left
[21:33] *** itaipu_ left
[21:35] *** itaipu joined
[21:35] *** itaipu_ joined
[21:36] *** p6bannerbot sets mode: +v itaipu

[21:36] *** p6bannerbot sets mode: +v itaipu_

[21:36] *** itaipu left
[21:39] *** itaipu_ left
[21:40] *** itaipu joined
[21:40] <Altreus> is there a rationale behind these being constraints but not coercions?

[21:40] *** itaipu_ joined
[21:40] <Altreus> It seems to make everything super verbose by not coercing things before complaining about them

[21:41] <Altreus> Especially trivial conversions we're used to from perl5

[21:41] *** p6bannerbot sets mode: +v itaipu

[21:41] *** itaipu left
[21:41] *** p6bannerbot sets mode: +v itaipu_

[21:41] *** itaipu_ left
[21:43] <jnthn> Isn't it more that you're choosing to make things more verbose by putting in type constraints, while if you left them out then things would just coerce on demand when you do math on them anyway?

[21:44] <Altreus> not every type constraint is a primitive type

[21:44] <Altreus> Some of them are enums

[21:44] <Altreus> kinda the point of them is to make sure the object is sane before you even try to use it

[21:44] <Altreus> but if you happen to pass a string where an int was wanted, languages called perl oughtn't complain :P

[21:45] <AlexDaniel> xinming_: ‚ÄúIt's the bug in newest rakudo‚Äù ‚Äì what's the bug?

[21:45] <AlexDaniel> xinming_: is it fixed on HEAD?

[21:45] * jnthn sighs

[21:46] <Altreus> I suppose I don't have any type constraints that are particularly needed but that I don't coerce manually anyway

[21:46] <Altreus> hmm

[21:46] <Altreus> fine you win xD

[21:46] <Altreus> jnthn is always right

[21:46] <Altreus> when will I learn

[21:48] <Altreus> hmm although "0" is true huh

[21:48] *** diakopter left
[21:48] <Altreus> ah but the JSON might be a boolean anyway

[21:48] <Altreus> hope so or else

[21:48] <jnthn> I'm curious, are the integers actually stored as strings in the json?

[21:48] <Altreus> yes, because some languages might trip up over them

[21:48] <jnthn> Ah

[21:48] <Altreus> the doc explicitly says that's the reason

[21:48] <jnthn> Due to size?

[21:48] <Altreus> indeed

[21:49] <AlexDaniel> interesting :)

[21:49] <timotimo> oh, big ints

[21:50] <jnthn> In the future we'd like to make it so you can write has Int() $.x; fwiw

[21:50] <jnthn> Which'd make things rather less verbose

[21:50] <AlexDaniel> ‚Ä¶ I write that every now and then somehow expecting it to work :)

[21:50] <timotimo> it might not be a very hard implementation

[21:51] <jnthn> It's a bit tricky, but worse, it's right on a really hot path

[21:51] <jnthn> Oh!

[21:51] <timotimo> but we code-gen buildplans :)

[21:51] <jnthn> But actually...I re-did assignment recently :D

[21:51] <Altreus> that would be fairly grand

[21:51] <timotimo> :D

[21:51] <jnthn> No, it's actually part of assignment

[21:51] <timotimo> ah

[21:51] <timotimo> yeah, right, that makes sense

[21:51] <Altreus> but for now the constraints aren't too important indeed

[21:51] <jnthn> But because I re-did assignemnt with a spesh plugin of late...we actually get a way to implement it *without* hosing performance :D

[21:51] <AlexDaniel> btw it doesn't say that it is NYI

[21:52] <jnthn> So yeah, we can probably have that soon :)

[21:52] <jnthn> AlexDaniel: that's a bit LTA

[21:52] <AlexDaniel> m: class Foo { has Int() $x }

[21:52] <camelia> rakudo-moar b7190f649: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Coercion Int(Any) is insufficiently type-like to qualify a variable‚ê§at <tmp>:1‚ê§------> 3class Foo { has Int() $x 7‚èè5}‚ê§    expecting any of:‚ê§        constraint‚ê§¬ª

[21:52] <AlexDaniel> ‚Äúis insufficiently type-like to qualify a variable‚Äù yeah thanks that's extremely clear :)

[21:53] <jnthn> Oh, I thought you meant it's not an error

[21:53] <jnthn> OK, now I'm less worried :)

[21:54] *** molaf left
[21:58] *** rindolf left
[22:01] <buggable> New CPAN upload: Sparrowdo-0.0.40.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo:cpan:MELEZHIK

[22:14] <mempko> what's the best way to assign a default to a variable if a key does not exist, otherwise assign the value of the key?

[22:15] <mempko> or even more general would be, assign value of variable if it is defined, otherwise assign a default

[22:15] <mempko> my $var = $some-undefined-var ?? $some-undefined-var !! 0;

[22:16] <AlexDaniel> my $var = $some-undefined-var // 0;

[22:16] <AlexDaniel> m: my $some-undefined-var; my $var = $some-undefined-var // 0; say $var

[22:16] <camelia> rakudo-moar b7190f649: OUTPUT: ¬´0‚ê§¬ª

[22:16] <AlexDaniel> m: my $some-undefined-var = 42; my $var = $some-undefined-var // 0; say $var

[22:16] <camelia> rakudo-moar b7190f649: OUTPUT: ¬´42‚ê§¬ª

[22:17] <AlexDaniel> if a key does not exist? So it's a hash?

[22:18] <AlexDaniel> m: my %h = b => 50; %h<a> //= 42; %h<b> //= 42; say %h

[22:18] <camelia> rakudo-moar b7190f649: OUTPUT: ¬´{a => 42, b => 50}‚ê§¬ª

[22:19] <mempko> nice! thanks Alex! exactly what I was looking for

[22:19] <Juerd> my $some-undefined-var = 42;  # Not a very good example of an undefined var :D

[22:20] <mempko> I love this language. It has replaced my day to day perl5, python, and other scripting needs.

[22:20] <Juerd> mempko: Before this, how did you decide between perl5 and python?

[22:22] <mempko> in reality I rarely used python. Usually only when someone else used python and I needed to use it.

[22:23] <mempko> I'm mostly working in C++ day to day, and perl6 has quickly become #2 for me. #3 is javascript.

[22:23] *** Kaiepi left
[22:24] <mempko> The most interesting thing I use perl6 for is writing simulations. It's parallel compute primitives are so nice, so my cores get a good work out.

[22:24] <Juerd> Do you find switching between languages easy to do? For me, such context switches can really throw me off.

[22:26] <mempko> I've been programming for 22+ years so a lot of stuff is muscle memory really. Perl6 has not infested enough of my brain that it's become natural. But I still have to do a lot of doc lookups for it.

[22:26] <mempko> now*

[22:26] <Juerd> Same here, but my muscle memory always seems to tuned to the language I'm not currently using :)

[22:27] <mempko> what pulled me in was Grammars, and what kept me was the insanely awesome type system and multi-proc model.

[22:27] *** Kaiepi joined
[22:27] <mempko> I'm starting to get offended that other languages don't care about being as fun and usable as perl6 seems to be.

[22:28] *** p6bannerbot sets mode: +v Kaiepi

[22:29] <Juerd> Finally there's a language for non-masochists :D

[22:30] <lizmat> m: my %h is default 42; say %h<a>   # mempko

[22:30] <camelia> rakudo-moar b7190f649: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3my %h is default7‚èè5 42; say %h<a>   # mempko‚ê§    expecting any of:‚ê§        constraint‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§   ‚Ä¶¬ª

[22:30] <lizmat> m: my %h is default(42); say %h<a>   # mempko

[22:30] <camelia> rakudo-moar b7190f649: OUTPUT: ¬´42‚ê§¬ª

[22:31] <lizmat> m: my %h is default(42); say %h<a>:exists; say %h<a>

[22:31] <camelia> rakudo-moar 26b491693: OUTPUT: ¬´False‚ê§42‚ê§¬ª

[22:35] <jnthn> Juerd: Only if you're not one of the folks implementing it ;)

[22:36] <Juerd> jnthn: Aww

[22:37] <Juerd> jnthn: I had no idea it'd hurt. Thanks for the sacrifice, though :D

[22:41] <mempko> I always found there is a direct correlation between ease of use and difficulty implementing the software.

[22:42] <timotimo> i think there's an inflection point towards one end where the easiest to implement are also the easiest to use

[22:42] <mempko> If it's insane to implmenent, that's a good sign it might be user friendly.

[22:43] *** regreg left
[22:55] <timotimo> like, implementing cat for example

[22:55] <timotimo> i would have said "true", but i hear it's a hundred line file

[23:09] *** MasterDuke joined
[23:09] *** p6bannerbot sets mode: +v MasterDuke

[23:10] *** MasterDuke left
[23:10] *** MasterDuke joined
[23:10] *** herbert.freenode.net sets mode: +v MasterDuke

[23:10] *** p6bannerbot sets mode: +v MasterDuke

[23:31] *** regreg joined
[23:32] *** p6bannerbot sets mode: +v regreg

[23:33] <Kaiepi> net::icmp is nuts to implement

[23:34] <Kaiepi> i have to do it mostly in c since io::socket::inet doesn't really support IPPROTO_ICMP and i have to write 3 different implementations for bsd, linux, and windows

[23:34] <Kaiepi> no clue what i'm gonna do for windows since it handles it entirely different from bsd and linux

[23:37] <Kaiepi> i can definitely implement ping for windows but idk how i'll be able to implement the rest of the icmp messages

[23:37] <timotimo> .o( does SDL_Net support ICMP? )

[23:37] *** DarthGandalf left
[23:38] *** DarthGandalf joined
[23:38] *** p6bannerbot sets mode: +v DarthGandalf

[23:38] *** pmurias left
[23:46] <benjikun> Kaiepi: hmm

[23:46] <benjikun> maybe ping by itself would be okay, on the wanted list it just specifies "ping" i think

[23:48] <Kaiepi> it doesn't look like SDL_Net supports ICMP timotimo

[23:49] <timotimo> i feared as much

[23:50] <Kaiepi> then that's doable benjikun

[23:53] <benjikun> thanks for still working on this :)

