[00:06] *** mcmillhj joined
[00:09] *** lancew joined
[00:11] *** mcmillhj left
[00:21] *** mcmillhj joined
[00:22] <ryn1x> Does anyone know if there is a way to run a GUI app built with GTK::Simple without having a shell open?

[00:23] *** stee left
[00:23] *** stee joined
[00:25] <skids> Make a custom desktop icon for it maybe?

[00:26] <ryn1x> Ok. That's what I was thinking..

[00:42] *** mcmillhj left
[00:48] *** mcmillhj joined
[00:54] <ryn1x> Yeah that works... just a shell script calling the perl6 script with an "&" at the end. 

[00:56] *** raynold joined
[00:56] *** mcmillhj_ joined
[00:58] *** mcmillhj left
[01:01] *** mcmillhj_ left
[01:06] *** mcmillhj joined
[01:20] *** markong left
[01:25] <Geth> ¦ doc/car-grant-midrat: 824d7800b0 | (Zoffix Znet)++ | doc/Type/MidRat.pod6

[01:25] <Geth> ¦ doc/car-grant-midrat: [CaR Grant] Document MidRat type

[01:25] <Geth> ¦ doc/car-grant-midrat: review: https://github.com/perl6/doc/commit/824d7800b0

[01:34] <Geth> ¦ doc/car-grant-midrat: ccfafecbc7 | (Zoffix Znet)++ | doc/Type/MidRat.pod6

[01:34] <Geth> ¦ doc/car-grant-midrat: [CaR Grant] Do not offer :U .Rat/.FatRat coercers on MidRat

[01:34] <Geth> ¦ doc/car-grant-midrat: 

[01:34] <Geth> ¦ doc/car-grant-midrat: To be consistent with similar coercers on other numerics

[01:34] <Geth> ¦ doc/car-grant-midrat: review: https://github.com/perl6/doc/commit/ccfafecbc7

[01:39] <Geth> ¦ doc/car-grant-midrat: b1b494d3d0 | (Zoffix Znet)++ | doc/Type/MidRatStr.pod6

[01:39] <Geth> ¦ doc/car-grant-midrat: [CaR Grant] Document MidRatStr

[01:39] <Geth> ¦ doc/car-grant-midrat: review: https://github.com/perl6/doc/commit/b1b494d3d0

[01:43] *** Khisanth left
[01:46] *** mcmillhj_ joined
[01:47] *** ilbot3 left
[01:51] *** mcmillhj_ left
[01:52] *** mcmillhj left
[01:53] *** molaf left
[01:55] *** ilbot3 joined
[01:55] *** ChanServ sets mode: +v ilbot3

[02:01] *** mcmillhj joined
[02:01] *** Khisanth joined
[02:06] *** molaf joined
[02:06] *** mcmillhj left
[02:32] *** Kaiepi left
[02:34] *** Kaiepi joined
[02:35] *** ufobat___ joined
[02:36] *** lancew left
[02:36] *** mcmillhj joined
[02:38] *** ufobat_ left
[02:41] *** mcmillhj left
[02:49] *** mcmillhj joined
[02:54] *** HaraldJoerg left
[02:54] *** mcmillhj left
[03:02] *** hythm_ joined
[03:04] <hythm_> m: grammar Pkg { regex TOP { <name>'-'?<ver>? }; regex name { [<alnum>+]+ % '-' };  token ver { [<digit>+]+ % '.' } }; Pkg.parse('rakudo').say; Pkg.parse('rakudo-1.0.1').say; Pkg.parse('rakudo-star-1.0.1').say;

[03:04] <camelia> rakudo-moar febcb9177: OUTPUT: «｢rakudo｣␤ name => ｢rakudo｣␤  alnum => ｢r｣␤  alnum => ｢a｣␤  alnum => ｢k｣␤  alnum => ｢u｣␤  alnum => ｢d｣␤  alnum => ｢o｣␤｢rakudo-1.0.1｣␤ name => ｢rakudo｣␤  alnum => ｢r｣␤  alnum => ｢a｣…»

[03:06] <hythm_> Is it possible to parse this grammar with token instead of regex for TOP and name?

[03:11] *** Zoffix joined
[03:13] <Zoffix> .tell [Coke] are you in contact with Mark at TPF? The link to "his blog for April" in last grant update links to SO, not the blog: http://news.perlfoundation.org/2018/05/grant-report-improving-perl-6-.html#comments   (P.S.: I still have no idea who's *my* grant manager :|)

[03:13] <yoleaux> Zoffix: I'll pass your message to [Coke].

[03:14] <AlexDaniel> hythm_: what happens there is that <name> eats “rakudo-1”

[03:14] <hythm_> Yes

[03:16] *** stee left
[03:17] <AlexDaniel> hythm_: token name { [<alnum>+ <!before '.'>]+ % '-' };

[03:17] <AlexDaniel> this should work

[03:17] <AlexDaniel> m: https://gist.github.com/AlexDaniel/6aaeadbbcbf0a27c327c2914d9028889

[03:17] <camelia> rakudo-moar febcb9177: OUTPUT: «｢rakudo｣␤ name => ｢rakudo｣␤  alnum => ｢r｣␤  alnum => ｢a｣␤  alnum => ｢k｣␤  alnum => ｢u｣␤  alnum => ｢d｣␤  alnum => ｢o｣␤｢rakudo-1.0.1｣␤ name => ｢rakudo｣␤  alnum => ｢r｣␤  alnum => ｢a｣…»

[03:18] <AlexDaniel> e: https://gist.githubusercontent.com/AlexDaniel/6aaeadbbcbf0a27c327c2914d9028889/raw/0a0781c237f1170a78fc8176d30bb9fc181c4031/foo.p6

[03:18] <evalable6> AlexDaniel, Successfully fetched the code from the provided URL.

[03:18] <evalable6> AlexDaniel, rakudo-moar febcb9177: OUTPUT: «｢rakudo｣␤ name => ｢rakudo｣␤  alnum => ｢r｣␤  alnum => ｢a｣␤  alnum => ｢k…»

[03:18] <evalable6> AlexDaniel, Full output: https://gist.github.com/a382075e8fc435326d5a1f872df79b97

[03:19] *** mcmillhj joined
[03:19] <hythm_> Thank you :)

[03:20] <AlexDaniel> e: https://gist.githubusercontent.com/AlexDaniel/6aaeadbbcbf0a27c327c2914d9028889/raw/decb66fc2891637f558322a5641c95ec40bbd494/foo.p6

[03:20] <evalable6> AlexDaniel, Successfully fetched the code from the provided URL.

[03:20] <evalable6> AlexDaniel, rakudo-moar febcb9177: OUTPUT: «｢rakudo｣␤ name => ｢rakudo｣␤｢rakudo-1.0.1｣␤ name => ｢rakudo｣␤ ver => ｢1.0…»

[03:20] <evalable6> AlexDaniel, Full output: https://gist.github.com/6a263b0b4d60e106fea862a6d5d5f503

[03:20] <AlexDaniel> ↑ that's probably cleaner

[03:21] <AlexDaniel> hythm_: there are probably other ways to do that, basically anything that will avoid the need for backtracking will do

[03:21] <Zoffix> m: class Pkg { method parse (Str:D \v) { %(name => .head, version => Version.new(.[1]//'')) with v.flip.split('-', 2)».flip.rotate} }; Pkg.parse('rakudo').say; Pkg.parse('rakudo-1.0.1').say; Pkg.parse('rakudo-star-1.0.1').say;

[03:21] <camelia> rakudo-moar febcb9177: OUTPUT: «{name => rakudo, version => v}␤{name => rakudo, version => v1.0.1}␤{name => rakudo-star, version => v1.0.1}␤»

[03:22] *** Zoffix left
[03:24] *** mcmillhj left
[03:29] <hythm_> Grea. Thanks for $<verpart>, that will be helpfull

[03:29] *** aindilis left
[03:37] <Geth> ¦ doc/car-grant-midrat: f4af5a84e9 | (Zoffix Znet)++ | doc/Type/Rational.pod6

[03:37] <Geth> ¦ doc/car-grant-midrat: [CaR Grant] Document Rational.base-repeating with no args

[03:37] <Geth> ¦ doc/car-grant-midrat: 

[03:37] <Geth> ¦ doc/car-grant-midrat: Spec: https://github.com/perl6/roast/commit/7263105372

[03:37] <Geth> ¦ doc/car-grant-midrat: Rakudo impl: since before the Christmas

[03:37] <Geth> ¦ doc/car-grant-midrat: review: https://github.com/perl6/doc/commit/f4af5a84e9

[03:44] <Geth> ¦ doc: fe726428c6 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Real.pod6

[03:44] <synopsebot> Link: https://doc.perl6.org/type/Real

[03:44] <Geth> ¦ doc: [CaR Grant] Document Real.rand bridges the numeric

[03:44] <Geth> ¦ doc: 

[03:44] <Geth> ¦ doc: This is especially relevant with zero-denominator Rationals

[03:44] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fe726428c6

[03:46] *** hythm_ left
[03:57] *** mcmillhj joined
[04:02] *** mcmillhj left
[04:14] *** stee joined
[04:14] *** mcmillhj joined
[04:15] *** khw left
[04:19] *** mcmillhj left
[04:21] *** stee left
[04:28] *** AlexDaniel left
[04:29] *** f_u_c_k_y_o_u joined
[04:29] *** f_u_c_k_y_o_u left
[04:30] *** stee joined
[04:43] *** mcmillhj joined
[04:48] *** mcmillhj left
[05:00] *** mcmillhj joined
[05:02] *** aindilis joined
[05:05] *** mcmillhj left
[05:11] *** lasse_ joined
[05:12] *** eliasr left
[05:13] *** lasse_ left
[05:14] *** mcmillhj joined
[05:14] *** raynold left
[05:16] *** sauvin joined
[05:17] *** lasse_ joined
[05:18] *** mcmillhj left
[05:30] *** mcmillhj joined
[05:32] *** skids left
[05:34] *** mcmillhj left
[06:03] *** mcmillhj joined
[06:06] *** vivus-ignis joined
[06:08] *** mcmillhj left
[06:21] *** sena_kun joined
[06:35] *** no1 joined
[06:36] *** no1 left
[06:40] *** sena_kun left
[06:41] *** vivus-ignis is now known as ignis__away

[06:44] *** mcmillhj joined
[06:47] *** espadrine joined
[06:50] *** mcmillhj left
[06:55] *** ignis__away is now known as vivus-ignis

[07:04] *** wamba joined
[07:08] *** jmerelo joined
[07:15] *** Perl6_Fan joined
[07:15] *** vivus-ignis is now known as ignis__away

[07:18] *** Perl6_Fan left
[07:20] *** mcmillhj joined
[07:25] *** mcmillhj left
[07:29] *** ignis__away is now known as vivus-ignis

[07:40] *** Phil21 left
[07:40] *** robertle joined
[07:44] <ufobat___> what is the easiest way to create a $buf from a $blob

[07:47] <tobs> m: Buf.new: Blob.new(^4)

[07:47] <camelia> rakudo-moar febcb9177: ( no output )

[07:47] <tobs> (modulo say) seems pretty easy to me

[07:53] *** rindolf joined
[08:03] *** mcmillhj joined
[08:06] *** |oLa|1 joined
[08:07] <ufobat___> somehow i managed to get this error: Type check failed in initializing element #0 to Buf; expected uint8 but got Blob[uint8] (Blob[uint8].new(114,9...)

[08:07] *** lancew joined
[08:08] *** mcmillhj left
[08:10] <ufobat___> ah i know why

[08:11] <ufobat___> oh my!

[08:11] <ufobat___> m: my %data = (    "xx" => Buf.new:  "random binary data".encode("latin-1"), b => 1)

[08:11] <camelia> rakudo-moar febcb9177: ( no output )

[08:11] <ufobat___> m: my %data = (    "xx" => Buf.new:  "random binary data".encode("latin-1"), "b" => 1)

[08:11] <camelia> rakudo-moar febcb9177: OUTPUT: «Type check failed in initializing element #0 to Buf; expected uint8 but got Blob[uint8] (Blob[uint8].new(114,9...)␤  in block <unit> at <tmp> line 1␤␤»

[08:12] <ufobat___> that's a pretty confusing error :(

[08:14] *** vivus-ignis left
[08:15] <cono> m: my %data = (    "xx" => Buf.new("random binary data".encode("latin-1")), "b" => 1)

[08:15] <camelia> rakudo-moar febcb9177: ( no output )

[08:15] <tobs> m: say %["xx" => Buf.new:  "random binary data".encode("latin-1") ; "b" => 1]

[08:15] <camelia> rakudo-moar febcb9177: OUTPUT: «{b => 1, xx => Buf:0x<72 61 6e 64 6f 6d 20 62 69 6e 61 72 79 20 64 61 74 61>}␤»

[08:27] *** darutoko joined
[08:46] <jmerelo> p6: / <?after foo> bar /

[08:46] <camelia> rakudo-moar febcb9177: ( no output )

[08:46] <jmerelo> p6: say "foobar" ~~ / (oo) <?after foo> bar /;

[08:46] <camelia> rakudo-moar febcb9177: OUTPUT: «｢oobar｣␤ 0 => ｢oo｣␤»

[08:47] *** bonsaikitten left
[08:49] *** |oLa|1 left
[08:54] <jmerelo> p6: say "atfoobar" ~~ / (.**3) .**2 <?after foo> bar /;

[08:54] <camelia> rakudo-moar febcb9177: OUTPUT: «｢atfoobar｣␤ 0 => ｢atf｣␤»

[09:03] <Geth> ¦ doc: a494a4ba7c | (JJ Merelo)++ | doc/Language/regexes.pod6

[09:03] <synopsebot> Link: https://doc.perl6.org/language/regexes

[09:03] <Geth> ¦ doc: Adds explanation on zero-width assertions

[09:03] <Geth> ¦ doc: 

[09:03] <Geth> ¦ doc: Complements @moritz's addition in

[09:03] <Geth> ¦ doc: 895f932decdfd3f3b3b4b085ee10dbb3014d6f67 and closes #2023.

[09:03] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a494a4ba7c

[09:14] *** |oLa| joined
[09:20] <jmerelo> May I draw your attention to this? https://github.com/perl6/doc/issues/2015 It would be good to have uniform terminology through the docs...

[09:30] *** vivus-ignis joined
[09:44] <jmerelo> squashable6: statujs

[09:44] <squashable6> jmerelo, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Squashable

[09:44] <jmerelo> squashable6: status

[09:45] <squashable6> jmerelo, Next SQUASHathon in 20 days and ≈0 hours (2018-06-02 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[09:51] *** scobra joined
[09:52] <scobra> this is kinda a long shot but does anyone have experience with calling a DLL generated by Ada with nativecall?

[09:52] <jmerelo> p6: say glob("*.p*)

[09:52] <camelia> rakudo-moar febcb9177: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in double quotes; couldn't find final '"' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3say glob("*.p*)7⏏5<EOL>␤    expecting any of:␤        argumen…»

[09:52] <jmerelo> p6: say glob("*.p*")

[09:52] <camelia> rakudo-moar febcb9177: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    glob used at line 1␤␤»

[09:53] <jmerelo> p6: use IO::Glob; say glob("*.p*")

[09:53] <camelia> rakudo-moar febcb9177: OUTPUT: «===SORRY!===␤Could not find IO::Glob at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    CompUnit:…»

[10:07] *** scobra left
[10:10] *** |oLa| left
[10:10] <jmerelo> p6: use IO::Glob; say dir()

[10:10] <camelia> rakudo-moar febcb9177: OUTPUT: «===SORRY!===␤Could not find IO::Glob at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    CompUnit:…»

[10:11] <jmerelo> p6: use say dir()

[10:11] <camelia> rakudo-moar febcb9177: OUTPUT: «===SORRY!===␤Could not find say at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    CompUnit::Repo…»

[10:11] <jmerelo> p6: say dir()

[10:11] <camelia> rakudo-moar febcb9177: OUTPUT: «(".cpanm".IO ".local".IO ".npm".IO ".perlbrew".IO ".rcc".IO ".ssh".IO "Perlito".IO "evalbot".IO "log".IO "nqp-js".IO "p1".IO "p2".IO "perl5".IO "std".IO ".bash_history".IO ".bashrc".IO "mbox".IO ".lesshst".IO "evalbot.log".IO ".cpan".IO "dalek-queue".…»

[10:15] <Geth> ¦ doc: 380669561e | (JJ Merelo)++ | doc/Language/5to6-perlfunc.pod6

[10:15] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlfunc

[10:15] <Geth> ¦ doc: Expand information on globs

[10:15] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/380669561e

[10:29] *** lancew_ joined
[10:29] *** lancew left
[10:31] *** vivus-ignis is now known as ignis__away

[10:35] *** rindolf left
[10:36] *** ignis__away is now known as vivus-ignis

[10:43] *** markong joined
[10:45] *** vivus-ignis left
[10:48] <jmerelo> I have marked issue #114 in perl6/docs as "Help wanted". There are not that many, but still enough, new tutorial-style pages that glue together several classes on the "Type" directory.

[10:48] <Geth> ¦ doc: JJ self-assigned Roadmap for our language/ docs https://github.com/perl6/doc/issues/114

[10:49] <jmerelo> I have self-assigned it, since I'm working now on the "Datetime" page. If you want to help, please comment on the issues or self-assign if you've got the privileges.

[10:51] <MasterDuke> jmerelo: i don't think you can use any non-core modules with camelia. however, you can with the *ables by something like `use lib ‘data/all-modules/moritz/json/lib/’; use JSON::Tiny`

[10:52] <jmerelo> MasterDuke: thanks. I just thought it was core-ish :-) But that's absolutely brilliant.

[10:57] *** vivus-ignis joined
[10:58] *** |oLa| joined
[10:58] *** |oLa| left
[11:07] *** lancew_ left
[11:08] *** vivus-ignis left
[11:08] *** rindolf joined
[11:16] *** xiaomiao joined
[11:20] <moritz> star: use JSON::Tiny; say from-json '{"foo": 42}'

[11:20] <camelia> star-m 2017.07: OUTPUT: «{foo => 42}␤»

[11:21] <jmerelo> moritz: there's a bot for that?

[11:21] *** xiaomiao left
[11:23] <moritz> I guess I could give camelia a newer star

[11:30] *** Woodi left
[11:32] *** parv joined
[11:40] *** jmerelo left
[11:46] *** pmurias joined
[11:55] *** Zoffix joined
[11:56] <Zoffix> .ask tbrowder why is drawing a border on a Pod table considered "bad practice"? What's bad about it? Also, can't get a table to render without that warning https://github.com/rakudo/rakudo/issues/1821

[11:56] <yoleaux> Zoffix: I'll pass your message to tbrowder.

[12:02] <Geth> ¦ doc: 3b9f9625ba | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/5to6-perlfunc.pod6

[12:02] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlfunc

[12:02] <Geth> ¦ doc: Fix up glob docs

[12:02] <Geth> ¦ doc: 

[12:02] <Geth> ¦ doc: - Toss useless reference to speculations

[12:02] <Geth> ¦ doc: - dir doesn't offer a lot of Perl 5's glob's features

[12:02] <Geth> ¦ doc: - Refer to ecosystem module that does

[12:02] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3b9f9625ba

[12:03] <Geth> ¦ doc/car-grant-midrat: 0ed7c35a81 | (Zoffix Znet)++ | doc/Type/MidRat.pod6

[12:03] <Geth> ¦ doc/car-grant-midrat: [CaR Grant] Document MidRat.narrow

[12:03] <Geth> ¦ doc/car-grant-midrat: review: https://github.com/perl6/doc/commit/0ed7c35a81

[12:03] <Geth> ¦ doc/car-grant-midrat: 1ee8ba3cc1 | (Zoffix Znet)++ | doc/Language/numerics.pod6

[12:03] <Geth> ¦ doc/car-grant-midrat: [CaR Grant] Fix pod compilation errors

[12:03] <Geth> ¦ doc/car-grant-midrat: review: https://github.com/perl6/doc/commit/1ee8ba3cc1

[12:03] <Geth> ¦ doc/car-grant-midrat: 55 commits pushed by 9 authors

[12:03] <Geth> ¦ doc/car-grant-midrat: review: https://github.com/perl6/doc/compare/1ee8ba3cc144...d174ea22a08c

[12:04] *** Zoffix left
[12:21] *** eliasr joined
[12:23] *** Khisanth left
[12:23] *** kurahaupo left
[12:25] *** lancew_ joined
[12:29] *** zakharyas joined
[12:30] *** kaare_ left
[12:33] <Geth> ¦ doc/car-grant-midrat: 020b259377 | (Zoffix Znet)++ | doc/Language/numerics.pod6

[12:33] <Geth> ¦ doc/car-grant-midrat: [CaR Grant] Document atomicint in Numerics tut

[12:33] <Geth> ¦ doc/car-grant-midrat: review: https://github.com/perl6/doc/commit/020b259377

[12:36] *** Khisanth joined
[12:46] *** AlexDaniel joined
[13:00] <Geth> ¦ doc: W4anD0eR96 self-unassigned Document S05 treatment of alternations as atoms for ratchet https://github.com/perl6/doc/issues/1962

[13:05] *** kurahaupo joined
[13:06] *** kurahaupo_ joined
[13:07] *** kurahaupo_ left
[13:07] *** caa51h left
[13:08] *** lancew_ left
[13:09] *** caa51h joined
[13:09] *** mtj_ left
[13:09] *** lancew_ joined
[13:10] *** mtj_ joined
[13:21] *** mienaikage left
[13:25] *** unclechu left
[13:25] *** elcaro[m] left
[13:25] *** wictory[m] left
[13:25] *** Matthew[m] left
[13:25] *** Garland_g[m] left
[13:25] *** mirlur[m] left
[13:25] *** AlexDaniel` left
[13:25] *** ilmari[m] left
[13:26] *** tadzik left
[13:26] *** CIAvash[m] left
[13:29] *** ilbot3 left
[13:33] *** MasterDuke left
[13:33] *** MasterDuke joined
[13:36] *** ilbot3 joined
[13:36] *** ChanServ sets mode: +v ilbot3

[13:36] *** kurahaupo left
[13:37] *** colomon left
[13:41] *** tadzik joined
[13:52] *** lucasb joined
[13:56] *** lancew_ left
[13:58] <pmurias> is there a pure js bignum library that is *NOT trash?

[14:03] <Juerd> I think you may have better luck with that question in a javascript channel ;)

[14:05] <pmurias> Juerd: asked it that there too, but I don't trust their judgements as it seems that libraries with hundreds of dependencies have basic features broken

[14:06] <pmurias> like 4**2 is 10 in bn.js ;)

[14:07] *** lancew joined
[14:10] <Juerd> lol

[14:10] <Juerd> That is... creative!

[14:16] *** skids joined
[14:18] *** kaare_ joined
[14:22] *** lucasb left
[14:29] *** lucasb joined
[14:30] *** BenGoldberg joined
[14:32] <donpdonp> pmurias: ok i had to see it for myself. > new bn(4).pow(new bn(2)) => <BN: 10> is not what it appears to be. try (4**2)-1

[14:37] *** foo___ joined
[14:37] *** foo___ left
[14:38] *** Matthew[m] joined
[14:38] *** ilmari[m] joined
[14:38] *** AlexDaniel` joined
[14:38] *** unclechu joined
[14:38] *** wictory[m] joined
[14:38] *** mirlur[m] joined
[14:38] *** CIAvash[m] joined
[14:38] *** elcaro[m] joined
[14:38] *** mienaikage joined
[14:38] *** Garland_g[m] joined
[14:38] *** zakharyas left
[14:43] <pmurias> donpdonp: ahh, it displayed in hex 

[14:44] <pmurias> donpdonp: (4**-2) still suck tho

[14:46] *** pilne left
[14:47] *** pilne joined
[15:03] *** chsanch joined
[15:14] *** lancew_ joined
[15:14] *** lancew left
[15:22] *** xiaomiao joined
[15:27] *** lancew_ left
[15:31] <El_Che> I wondered why the go tag on Stackoverflow had a gopher icon while the perl6 one had no camelia: 

[15:31] <El_Che> magnet:?xt=urn:btih:49978868c8131d7f520158a36b621f27c395e16c&dn=Marvels.Agents.of.S.H.I.E.L.D.S05E21.1080p.WEB.H264-DEF&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Fzer0day.ch%3A1337&tr=udp%3A%2F%2Fopen.demonii.com%3A1337&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Fexodus.desync.com%3A6969

[15:31] <El_Che> oo

[15:31] <El_Che> ps

[15:31] <El_Che> This one: https://meta.stackoverflow.com/questions/251363/how-can-i-set-an-icon-on-a-tag

[15:31] *** lancew joined
[15:32] <stmuk> hahaha

[15:33] *** lancew_ joined
[15:36] *** lancew left
[15:39] *** skids left
[15:51] *** comborico1611 joined
[16:07] *** jmerelo joined
[16:23] *** dogbert11 joined
[16:50] *** kaare_ left
[16:51] *** kaare_ joined
[16:52] *** chsanch left
[16:56] *** xinming joined
[16:59] *** xinming_ left
[17:01] *** xinming_ joined
[17:02] *** xinming left
[17:02] *** mcmillhj joined
[17:02] <jmerelo> s: DateTime

[17:02] <SourceBaby> jmerelo, Something's wrong: ␤ERR: Cannot resolve caller sourcery(DateTime); none of these signatures match:␤    ($thing, Str:D $method, Capture $c)␤    ($thing, Str:D $method)␤    (&code)␤    (&code, Capture $c)␤  in block <unit> at -e line 6␤␤

[17:04] <jmerelo> grep: DateTime

[17:04] <greppable6> jmerelo, 5431 lines, 134 modules: https://gist.github.com/0a27848947812a836ba5fc3163b4897f

[17:04] <jmerelo> grep: X::DateTime

[17:04] <greppable6> jmerelo, 9 lines, 3 modules: https://gist.github.com/307ec46cef5d2d032f8ae8c58d8e55aa

[17:13] *** mcmillhj left
[17:13] *** lancew_ left
[17:30] <jmerelo> p6: my $time-of-day = ".cpan".changed.DateTime.hh-mm-ss but Dateish; say $time-of-day.^name

[17:30] <camelia> rakudo-moar 776ff354c: OUTPUT: «No such method 'changed' for invocant of type 'Str'␤  in block <unit> at <tmp> line 1␤␤»

[17:30] <jmerelo> p6: my $time-of-day = ".cpan".IO.changed.DateTime.hh-mm-ss but Dateish; say $time-of-day.^name

[17:30] <camelia> rakudo-moar 776ff354c: OUTPUT: «Str+{Dateish}␤»

[17:31] <jmerelo> I love these lazy afternoons when it's only Camelia and me, swinging in the porch, throwing ASTs at each other...

[17:41] *** wamba left
[17:43] <Voldenet> a propos 'but' operator, docs for it are not clear

[17:44] <jmerelo> Voldenet: these https://docs.perl6.org/routine/but?

[17:44] <Voldenet> yeah

[17:44] <Voldenet> $obj1 vs $obj

[17:45] <jmerelo> $obj2 is "mixed in"

[17:45] <Voldenet> I mean, ugh

[17:45] <Voldenet> >Creates a copy of $obj with $role mixed in.

[17:46] <El_Che> what the reason for using "but"?

[17:46] <Voldenet> >multi sub infix:<but>(Mu $obj1, Mu   $role) is assoc<non>

[17:46] <El_Che> butt I would get

[17:46] <Voldenet> there's no 3$obj at all :)

[17:46] <El_Che> or mixin or add

[17:46] <jmerelo> above? I want it to be Dateish

[17:46] <jmerelo> So it's a String and Dateish stuff is mixed in so I can call Dateish methods.

[17:47] <MasterDuke> El_Che: a play on "but wait, there's more!" maybe?

[17:48] <jmerelo> MasterDuke: :-)

[17:48] <El_Che> but-but would be more applicable then

[17:48] <jmerelo> In this particular case, you can apply Dateish formatters to the time.

[17:49] <El_Che> it looks like a formula for sutle bugs

[17:49] <El_Che> subtle

[17:50] <jmerelo> p6: my $date = ".cpan".IO.changed.DateTime.yyyy-mm-dd but Dateish; say $date.^name; say $date.daycount;

[17:50] <camelia> rakudo-moar 776ff354c: OUTPUT: «Str+{Dateish}␤Invocant of method 'Bridge' must be an object instance of type 'Int', not a type object of type 'Int'.  Did you forget a '.new'?␤  in block <unit> at <tmp> line 1␤␤»

[17:51] <jmerelo> p6: my $date = ".cpan".IO.changed.DateTime.yyyy-mm-dd but Dateish; say $date.week-year;

[17:51] <camelia> rakudo-moar 776ff354c: OUTPUT: «Invocant of method 'Bridge' must be an object instance of type 'Int', not a type object of type 'Int'.  Did you forget a '.new'?␤  in block <unit> at <tmp> line 1␤␤»

[17:51] <jmerelo> p6: my $date = ".cpan".IO.changed.DateTime.yyyy-mm-dd but Dateish; say $date;

[17:51] <camelia> rakudo-moar 776ff354c: OUTPUT: «Ambiguous call to 'gist(Str+{Dateish}: )'; these signatures all match:␤:(Str:D: *%_)␤:(Dateish:D: *%_)␤  in block <unit> at <tmp> line 1␤␤»

[17:52] <jmerelo> Looks like in some cases you can't simply mix in...

[17:52] <jmerelo> p6: my $date = ".".IO.changed.DateTime.yyyy-mm-dd but Dateish; say $date;

[17:52] <camelia> rakudo-moar 776ff354c: OUTPUT: «Ambiguous call to 'gist(Str+{Dateish}: )'; these signatures all match:␤:(Str:D: *%_)␤:(Dateish:D: *%_)␤  in block <unit> at <tmp> line 1␤␤»

[17:52] <Voldenet> *cough* what subtle bugs

[17:53] <jmerelo> p6: my $date = ".".IO.changed.DateTime.yyyy-mm-dd; say $date;

[17:53] <camelia> rakudo-moar 776ff354c: OUTPUT: «2018-05-12␤»

[17:53] <El_Che> jmerelo is more persevering than subtle

[17:55] *** kaare_ left
[17:55] <jmerelo> El_Che: Stubborn as a Spaniard, I guess...

[17:56] <El_Che> hehe

[17:57] <Voldenet> p6: my $date = ".".IO.changed.DateTime.yyyy-mm-dd but Dateish; say $date.lc;

[17:57] <camelia> rakudo-moar 776ff354c: OUTPUT: «2018-05-12␤»

[17:57] <jmerelo> Posted to SO, just in case someone wants to have a look https://stackoverflow.com/questions/50309179/problems-with-dateish-strings

[17:57] *** |oLa| joined
[17:57] <Voldenet> hacks everywhere :D

[17:58] <jmerelo> Voldenet: you can use the Str part, not the Dateish part, I guess.

[17:58] <Voldenet> yeah, apparently

[17:58] <Voldenet> p6: my $date = ".".IO.changed.DateTime.yyyy-mm-dd but Dateish; say $date.year;

[17:58] <camelia> rakudo-moar 776ff354c: OUTPUT: «(Int)␤»

[17:59] <jmerelo> Voldenet: that's weird...

[17:59] <El_Che> jmerelo: you're omnipresent on SO, wow

[18:00] <jmerelo> El_Che: I wouldn't be if there were an order of magnitude more posters...

[18:00] <jmerelo> El_Che: but until that happens... 

[18:01] *** |oLa| left
[18:01] <El_Che> jmerelo: yeah, I reactivated my dead account (for like 8 years) and I made the top 20 :)

[18:01] <El_Che> in 2 days :)

[18:02] <Geth> ¦ doc: c647731762 | (JJ Merelo)++ | doc/Language/temporal.pod6

[18:02] <synopsebot> Link: https://doc.perl6.org/language/temporal

[18:02] <Geth> ¦ doc: Adds a new "temporal" tutorial for dates and stuff

[18:02] <Geth> ¦ doc: 

[18:02] <Geth> ¦ doc: This is one of the new pages requested in #114. Doesn't close the

[18:02] <Geth> ¦ doc: issue, does not probably even close the creation of this particular

[18:02] <Geth> ¦ doc: file, but it's a first serviceable version that can be improved with time.

[18:02] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c647731762

[18:02] <jmerelo> El_Che: exactly my point.

[18:03] <jmerelo> El_Che: it's slowly improving to the point that you needn't say "Another day without any Perl6 question". But still a long way to go...

[18:03] <El_Che> my perl6 production program is running the last month of it life. I was meant to help with the transition to a new cert provider and monitor who needed to switch and warn them. I would be running for 1,5y. I don't dare change the rakudo version it's running

[18:03] <El_Che> :)

[18:03] <jmerelo> El_Che: if it works...

[18:05] <El_Che> I like keeping stuff up to date

[18:08] *** kaare_ joined
[18:09] <jmerelo> p6: my $date = ".".IO.changed.DateTime.yyyy-mm-dd but Dateish.new($_); say $date;

[18:09] <camelia> rakudo-moar 776ff354c: OUTPUT: «Default constructor for 'Dateish' only takes named arguments␤  in block <unit> at <tmp> line 1␤␤»

[18:11] <jmerelo> p6: my $date = ".".IO.changed.DateTime.yyyy-mm-dd.Date but Dateish; say $date.week-year;

[18:11] <camelia> rakudo-moar 776ff354c: OUTPUT: «No such method 'Date' for invocant of type 'Str'. Did you mean any of these?␤    Rat␤    note␤    path␤    take␤␤  in block <unit> at <tmp> line 1␤␤»

[18:12] <kybr> https://gist.github.com/ad17c2246f693c08ea817be7ab3aa089

[18:12] <kybr> that's a question.

[18:14] <MasterDuke> kybr: `.<statement>.say for @match` maybe?

[18:16] <kybr> thanks. yes. still has ｢｣ stuff. what's the story with those? i like them

[18:16] <jmerelo> kybr: they are simply funny quotes.

[18:16] <MasterDuke> u: ｢｣

[18:16] <unicodable6> MasterDuke, U+FF62 HALFWIDTH LEFT CORNER BRACKET [Ps] (｢)

[18:16] <unicodable6> MasterDuke, U+FF63 HALFWIDTH RIGHT CORNER BRACKET [Pe] (｣)

[18:17] <jmerelo> It's a quoting construct: https://docs.perl6.org/language/unicode_ascii#index-entry-%EF%BD%A2

[18:18] *** kurahaupo joined
[18:19] *** kurahaupo left
[18:19] <tobs> I want to interface with a C library that takes ORd flags as an "options" argument. There is `enum` to declare the individual constants, but is there a more verbose type than Int which I can use to type "options" in my signature?

[18:19] *** kurahaupo joined
[18:19] *** ChoHag_ joined
[18:20] <jmerelo> tobs: do you mean a native type? Like uint32 and things like that?

[18:20] <kybr> cool. but are they really there? how do i get a dequoted string?

[18:20] <lucasb> .Str

[18:20] <evalable6> lucasb, rakudo-moar 776ff354c: OUTPUT: «Use of uninitialized value $_ of type Any in string context.␤Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.␤  in block <unit> at /tmp/nZ8z9NNIFi line 1␤»

[18:20] <lucasb> oops, didn't mean to evaluate

[18:21] <lucasb> kybr: $match<statement>.Str

[18:22] <tobs> jmerelo: no, in my Perl 6 routine's signature, which wraps the C function. The C library is do_sth(void *data, int options) and I hoped I could use sub do_sth(Blob $data, enum Flags $options)

[18:22] *** ChoHag left
[18:22] <tobs> but if I `+|` enum Flag objects, they obviously lose their enum Flags type

[18:23] <kybr> thank you!

[18:25] <jmerelo> tobs: right. Did you check out is repr("CStruct")?

[18:25] <tobs> Oh, I guess passing bitfields isn't P6y to begin with. I could think about using :named-args for the few flags there are

[18:26] <jmerelo> tobs: that's probably a more p6y way of doing it...

[18:27] <tobs> jmerelo: thanks, I'll look at CStruct too. Maybe it does more than its name reveals.

[18:27] <jmerelo> tobs++

[18:31] *** ChoHag_ is now known as ChoHag

[18:32] *** Ben_Goldberg joined
[18:32] *** BenGoldberg left
[18:32] *** Ben_Goldberg is now known as BenGoldberg

[18:33] <Geth> ¦ doc: 4bb17a8e15 | (JJ Merelo)++ | doc/Language/glossary.pod6

[18:33] <synopsebot> Link: https://doc.perl6.org/language/glossary

[18:33] <Geth> ¦ doc: Adds p6y to glossary

[18:33] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4bb17a8e15

[18:33] <jmerelo> tobs: just gave us a new term for the glossary

[18:33] <tobs> \o/

[18:35] <Geth> ¦ doc: f43ab2a4ec | (JJ Merelo)++ | doc/Language/temporal.pod6

[18:35] <synopsebot> Link: https://doc.perl6.org/language/temporal

[18:35] <Geth> ¦ doc: Fixes pod error

[18:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/f43ab2a4ec

[18:35] *** Kaiepi left
[18:36] *** Kaiepi joined
[18:37] *** lancew_ joined
[18:38] *** lucasb left
[18:40] *** kaare_ left
[18:43] *** hythm_ joined
[18:47] <hythm_> how to match regex but exclude the ones end with hyphen or dot,  I tired this but it doesn't seem to work      token <a> { <b>+ & <-[\-\.]>$

[18:48] <moritz> hythm_: the problem is that for &, all branches must match the same text

[18:48] <moritz> hythm_: so maaybe  <b>+ & .* <-[\-\.]>$

[18:48] <jmerelo> hythm_: you might want to have a look at zero-width assertions https://docs.perl6.org/language/regexes#Zero-Width_Assertions

[18:49] <moritz> hythm_: or <b>+ <!after <[.-]>> $

[18:50] <moritz> also, let me plug a book I wrote on this: https://smile.amazon.com/dp/1484232275/ :-)

[18:52] *** wamba joined
[18:52] <hythm_> Thanks moritz. I tried .* <[\-\.]>$ but no luck

[18:53] <hythm_> m: grammar Pkg { token TOP { <name>'-'?<ver>?  & .* <-[\-\.]>$ }; token name { [<.alnum>+ <!before '.'>]+ % '-' }; token ver { [$<verpart>=<.digit>+]+ % '.' }}; Pkg.parse('rakudo').say; Pkg.parse('rakudo-').say

[18:53] <camelia> rakudo-moar 776ff354c: OUTPUT: «Nil␤Nil␤»

[18:56] *** Kaiepi left
[18:56] *** Kaiepi joined
[18:58] <moritz> hythm_: oh, it needs to be regex, not token

[18:59] <moritz> hythm_: because .* first tries to use all characters, and needs to backtrack to give up one character for the negated char class

[19:00] <moritz> TOP, that is

[19:03] <hythm_> Oh, I think I will lleave it with token then and trim extra chars in the actions method

[19:05] *** tomaw joined
[19:09] <moritz> hythm_: option with token: token TOP { [<name>'-'?<ver>?] <!after <[.-]> > };

[19:12] *** vivus-ignis joined
[19:13] *** darutoko left
[19:14] <hythm_> that wil do it. thanks moritz

[19:14] *** zachk joined
[19:14] *** zachk left
[19:14] *** zachk joined
[19:14] <moritz> so, has anybody consumed SSE (server-sent events) with Perl 6 yet?

[19:19] *** jmerelo left
[19:26] <moritz> http://cro.services/docs/reference/cro-http-response#Push_promises_(client_side) looks promising, kinda

[19:27] *** hythm_ left
[19:37] *** athenot joined
[19:38] *** lancew_ left
[19:42] *** athenot left
[19:46] *** Kaiepi left
[19:46] *** vivus-ignis is now known as ignis__away

[19:54] *** thundergnat joined
[19:55] <thundergnat> m: my $r=.99999999999999999; say $r.Rat; say $r.perl; say $r.FatRat; # certainly less than awesome, but is it a bug?

[19:55] <camelia> rakudo-moar 776ff354c: OUTPUT: «1␤<99999999999999999/100000000000000000>␤1␤»

[19:58] *** itaipu joined
[19:58] <thundergnat> Should reduced Rats ever have any trailing zeros in their fractional part? There isn't anything in roast checking for or testing it, and there isn't anything in the synopses either.

[19:58] *** ignis__away is now known as vivus-ignis

[19:58] <thundergnat> m: say for 7/250378, 17/85099, 100/99953873, 777777/222222222, 331/20687744, 336/336005, 5/277777

[19:58] <camelia> rakudo-moar 776ff354c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of bare "say"; in Perl 6 please use .say if you meant to call it as a method on $_, or use an explicit invocant or argument, or use &say to refer to the function as a noun␤at <tmp>:1…»

[19:59] <thundergnat> m: .say for 7/250378, 17/85099, 100/99953873, 777777/222222222, 331/20687744, 336/336005, 5/277777

[19:59] <camelia> rakudo-moar 776ff354c: OUTPUT: «0.0000280␤0.000200␤0.000001000␤0.00350000␤0.000016000␤0.0010000␤0.0000180␤»

[19:59] *** Ven`` joined
[20:01] <MasterDuke> thundergnat: fyi, https://github.com/rakudo/rakudo/issues/1818

[20:02] <thundergnat> Heh, I SWEAR that wasn't there when  looked for bug reports...

[20:02] <thundergnat> Ok, it's only 19 hours old.

[20:03] <MasterDuke> heh, yeah

[20:04] <thundergnat> FWIW the Stringification speedup I've been working on 'fixes' those things, but I wasn't sure they were considered bugs. 

[20:05] <thundergnat> Also, is there any spec on the minimum significant digits of precision for FatRats? There ARE tests in roast that specifically checks for 6 digits (same as Rat) but they are all from six years ago (when fatrat stringification was horribly slow).

[20:06] <MasterDuke> no idea

[20:06] <thundergnat> There isn't any mention of it in the synopsis either that I can find.

[20:07] <Ven``> o/

[20:07] <thundergnat> My suspicion is that it was put into roast just to test _something_ event though there wasn't a formal spec, but now roast IS the spec....

[20:08] <thundergnat> *even

[20:08] <thundergnat> So are we stuck with it forever?

[20:09] <thundergnat> Whats the point of having FatRats if they can't display more precision? (existential questions...)

[20:12] <MasterDuke> it could be changed in 6.d

[20:14] <MasterDuke> thundergnat: https://github.com/perl6/6.d-prep

[20:16] <MasterDuke> thundergnat: btw, did my most recent comments on https://github.com/rakudo/rakudo/pull/1807 make sense?

[20:16] *** Ven`` left
[20:18] <thundergnat> Yes Thanks for the commentary and critique. It was really helpful.

[20:19] <thundergnat> I'm probably going to close that pull request and open a new one based on your suggestions.

[20:20] <MasterDuke> could always just force push

[20:21] *** Ven`` joined
[20:28] *** vivus-ignis left
[20:38] <MasterDuke> thundergnat: oh, and feel free to disagree with what i said and/or ask for a second opinion. i'm by no means the final arbiter of PRs (and don't have a commit bit, so can't even merge them)

[20:39] <thundergnat> NP, I value your input as someone who has seen a bunch of code go by and has some idea of what he is talking about.(or at least can fake it very well...) :-)

[20:41] *** |oLa| joined
[20:46] *** vendethiel- joined
[20:50] *** Ven`` left
[20:51] *** rindolf left
[20:56] *** AlexDani` joined
[20:57] *** khw joined
[20:58] *** AlexDaniel left
[20:59] *** lasse_ left
[21:00] *** |oLa| left
[21:04] *** AlexDani` left
[21:05] *** |oLa| joined
[21:05] *** AlexDani` joined
[21:11] *** |oLa| left
[21:18] *** |oLa| joined
[21:24] *** athenot joined
[21:30] *** |oLa| left
[21:31] *** athenot left
[21:34] *** athenot joined
[21:38] *** athenot left
[21:55] *** itaipu left
[21:59] *** athenot joined
[22:04] *** athenot left
[22:10] *** wamba left
[22:38] *** ufobat___ left
[22:39] *** fascinum joined
[23:26] *** pmurias left
[23:26] *** vendethiel- left
[23:46] *** ZeonPeon joined
[23:47] *** ZeonPeon left
[23:48] *** ZeonPeon joined
