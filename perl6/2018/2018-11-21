[00:01] *** leont left
[00:05] *** daxim left
[00:09] *** Kaiepi left
[00:09] *** leont joined
[00:10] *** p6bannerbot sets mode: +v leont

[00:11] *** Kaiepi joined
[00:12] *** p6bannerbot sets mode: +v Kaiepi

[00:21] *** leont left
[00:26] <Geth> ¦ Blin: b535dc0d72 | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/blin.p6

[00:26] <Geth> ¦ Blin: Oops, only save *new* output

[00:26] <Geth> ¦ Blin: 

[00:26] <Geth> ¦ Blin: New = Bad, so that's what we are interested in.

[00:26] <Geth> ¦ Blin: review: https://github.com/perl6/Blin/commit/b535dc0d72

[00:32] *** Kaypie joined
[00:32] *** Kaiepi left
[00:33] *** p6bannerbot sets mode: +v Kaypie

[00:49] *** coet[work] joined
[00:49] *** p6bannerbot sets mode: +v coet[work]

[00:49] *** coet[work] left
[00:50] *** coet_ joined
[00:50] *** p6bannerbot sets mode: +v coet_

[00:50] *** coet_ left
[00:51] *** coet_ joined
[00:51] *** p6bannerbot sets mode: +v coet_

[00:51] *** coet_ left
[00:51] *** coet_ joined
[00:51] *** p6bannerbot sets mode: +v coet_

[00:51] *** coet_ left
[00:56] *** Kaypie left
[00:56] *** Kaypie joined
[00:57] *** p6bannerbot sets mode: +v Kaypie

[01:01] *** daxim joined
[01:02] *** p6bannerbot sets mode: +v daxim

[01:13] *** rindolf left
[02:13] *** statisfiable6 left
[02:13] *** notable6 left
[02:13] *** unicodable6 left
[02:13] *** releasable6 left
[02:13] *** bisectable6 left
[02:13] *** nativecallable6 left
[02:13] *** squashable6 left
[02:13] *** undersightable6 left
[02:13] *** bloatable6 left
[02:13] *** committable6 left
[02:13] *** greppable6 left
[02:13] *** reportable6 left
[02:13] *** shareable6 left
[02:13] *** coverable6 left
[02:13] *** evalable6 left
[02:13] *** quotable6 left
[02:13] *** benchable6 left
[02:14] *** notable6 joined
[02:14] *** ChanServ sets mode: +v notable6

[02:14] *** benchable6 joined
[02:14] *** coverable6 joined
[02:14] *** p6bannerbot sets mode: +v notable6

[02:15] *** releasable6 joined
[02:15] *** p6bannerbot sets mode: +v benchable6

[02:15] *** reportable6 joined
[02:15] *** ChanServ sets mode: +v reportable6

[02:15] *** p6bannerbot sets mode: +v coverable6

[02:15] *** p6bannerbot sets mode: +v releasable6

[02:15] *** undersightable6 joined
[02:15] *** bisectable6 joined
[02:16] *** p6bannerbot sets mode: +v reportable6

[02:16] *** evalable6 joined
[02:16] *** ChanServ sets mode: +v evalable6

[02:16] *** p6bannerbot sets mode: +v undersightable6

[02:16] *** p6bannerbot sets mode: +v bisectable6

[02:17] *** p6bannerbot sets mode: +v evalable6

[02:17] *** unicodable6 joined
[02:17] *** statisfiable6 joined
[02:17] *** ChanServ sets mode: +v statisfiable6

[02:17] *** greppable6 joined
[02:17] *** bloatable6 joined
[02:17] *** ChanServ sets mode: +v bloatable6

[02:17] *** committable6 joined
[02:17] *** ChanServ sets mode: +v committable6

[02:17] *** shareable6 joined
[02:17] *** p6bannerbot sets mode: +v unicodable6

[02:17] *** p6bannerbot sets mode: +v statisfiable6

[02:18] *** p6bannerbot sets mode: +v greppable6

[02:18] *** quotable6 joined
[02:18] *** nativecallable6 joined
[02:18] *** p6bannerbot sets mode: +v bloatable6

[02:18] *** squashable6 joined
[02:18] *** ChanServ sets mode: +v squashable6

[02:18] *** Poohman left
[02:18] *** p6bannerbot sets mode: +v committable6

[02:18] *** p6bannerbot sets mode: +v shareable6

[02:19] *** lizmat left
[02:19] *** p6bannerbot sets mode: +v quotable6

[02:19] *** p6bannerbot sets mode: +v nativecallable6

[02:19] *** p6bannerbot sets mode: +v squashable6

[02:20] *** MasterDuke left
[02:29] *** Kaypie left
[02:30] *** Kaypie joined
[02:31] *** p6bannerbot sets mode: +v Kaypie

[02:34] <holyghost> good morning

[02:44] *** molaf left
[02:56] *** molaf joined
[02:57] *** p6bannerbot sets mode: +v molaf

[02:57] *** thothamon left
[02:58] *** [particle] left
[02:58] *** thothamon joined
[02:58] *** SqrtNegInf left
[02:59] *** [particle] joined
[02:59] *** p6bannerbot sets mode: +v thothamon

[02:59] *** p6bannerbot sets mode: +v [particle]

[03:06] *** ufobat_ joined
[03:07] *** p6bannerbot sets mode: +v ufobat_

[03:08] <buggable> New CPAN upload: Mathx-Chaos-0.1.1.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Mathx-Chaos-0.1.1.tar.gz

[03:08] <holyghost> ^-- working correlation dimension (with tests)

[03:08] <holyghost> My newest package, the chaos theory I mentioned

[03:08] *** agentzh left
[03:10] *** ufobat___ left
[03:10] <holyghost> You can for example use a correlation dimension as a Boltzman model to prodict jackpots :-)

[03:10] *** Sgeo_ joined
[03:11] *** p6bannerbot sets mode: +v Sgeo_

[03:12] <holyghost> s/prodict/predict

[03:13] *** Sgeo left
[03:15] *** molaf left
[03:16] *** thothamon left
[03:17] *** w_richard_w joined
[03:18] *** p6bannerbot sets mode: +v w_richard_w

[03:19] *** BlackBerry9999 joined
[03:20] *** p6bannerbot sets mode: +v BlackBerry9999

[03:20] *** Kaypie left
[03:21] *** Kaypie joined
[03:21] *** p6bannerbot sets mode: +v Kaypie

[03:29] *** vrurg left
[03:32] *** w_richard_w left
[03:32] *** w_richard_w1 joined
[03:33] *** vrurg joined
[03:33] *** p6bannerbot sets mode: +v w_richard_w1

[03:34] *** p6bannerbot sets mode: +v vrurg

[03:44] *** w_richard_w1 left
[03:46] *** discoD joined
[03:47] *** p6bannerbot sets mode: +v discoD

[03:52] <holyghost> I've added marginal distributions sample calculation method in Mathx::Stat at github

[03:52] <holyghost> Apparently these can be used for Monte Carlo methods

[03:53] <holyghost> which where the statistics comes into the dynamical systems

[03:54] *** hythm_ joined
[03:54] *** p6bannerbot sets mode: +v hythm_

[03:56] *** ecocode left
[03:57] *** ecocode joined
[03:57] <holyghost> basic samples on random variables are Monte Carlo samplers, then highly dimensional for dynamical systems

[03:57] <holyghost> then use the  marginal distributions for calculations

[03:57] *** p6bannerbot sets mode: +v ecocode

[03:58] <holyghost> Problem is 'where am I going to put my Markov Chain in my modules

[03:58] <holyghost> for MCMC (Markov chain Monte Carlo)

[04:03] *** Cabanossi left
[04:04] *** Cabanossi joined
[04:05] *** p6bannerbot sets mode: +v Cabanossi

[04:11] *** BlackBerry9999 left
[04:12] *** BlackBerry9999 joined
[04:13] *** p6bannerbot sets mode: +v BlackBerry9999

[04:25] <hythm_> Hi, Let's say I have package a version 1 and package a version 2, will call them a1 and a2. package a1 depends on package b1. and package a2 depends on any of b2 or b3, pluse it also depends on package c2. I will represent this dependency as this datastructure:  for a1 it is  (a1, b1). for a2 it is (a2, (b2, b3), c2)

[04:26] <hythm_> combining these two together ((a1, b1), (a2, (b2, b3), c2)) I'm trying to select best candidate a1 or a2 (and its dependencies) based on a predefined condition.

[04:26] <hythm_> that is first check a1 if it meets the condition, then check its deps, if b1 doesn't meet the condition then discard the whole (a,b), and move to next item (a2, (b2, b3), c2), if a2 meets the condition, check (b2, b3) and take only the first one that meet the condition,assuming it is b2, then move to c2.

[04:26] *** BlackBerry9999 left
[04:26] *** Manifest1 left
[04:26] <hythm_> I'm trying to rephrase my question I posted earlier here https://gist.github.com/hythm7/c0d4a99e50d54ea5ada9fe81b02b7095

[04:28] <buggable> New CPAN upload: Mathx-Stat-0.2.6.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[04:28] <holyghost> ^-- Marginal Distributions are in

[04:30] <holyghost> you have to generate the distribution itself by calculating the marginal distribution randoms from another distribution

[04:31] <holyghost> by method GeneratedNumber in DistributionPopulation.pm6

[04:31] <holyghost> I didn't double disptach however

[04:36] *** kurahaupo joined
[04:37] *** p6bannerbot sets mode: +v kurahaupo

[04:43] *** kurahaupo left
[04:43] *** kurahaupo_ joined
[04:44] *** p6bannerbot sets mode: +v kurahaupo_

[04:48] <buggable> New CPAN upload: Mathx-Stat-0.2.7.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[04:52] <holyghost> ^-- test bugfixes

[04:52] <holyghost> Mathx::Stat is mature enough now to use

[04:57] *** kurahaupo joined
[04:57] *** p6bannerbot sets mode: +v kurahaupo

[05:01] *** kurahaupo_ left
[05:08] *** w_richard_w joined
[05:09] *** p6bannerbot sets mode: +v w_richard_w

[05:09] *** hythm_ left
[05:13] *** kurahaupo left
[05:13] *** kurahaupo joined
[05:14] *** p6bannerbot sets mode: +v kurahaupo

[05:16] *** kurahaupo left
[05:16] *** kurahaupo joined
[05:17] *** p6bannerbot sets mode: +v kurahaupo

[05:20] *** Sgeo joined
[05:21] *** p6bannerbot sets mode: +v Sgeo

[05:22] *** Sgeo_ left
[05:28] <buggable> New CPAN upload: Mathx-Chaos-0.1.2.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Mathx::Chaos:cpan:HOLYGHOST

[05:28] <buggable> New CPAN upload: Bayes-Learn-0.2.2.tar.gz by HOLYGHOST http://modules.perl6.org/dist/Bayes::Learn:cpan:HOLYGHOST

[05:29] <holyghost> ^-- my tests bufgixes

[05:30] <holyghost> That'll be it for today, so AI::Agent, Mathx::Stat, Mathx::Chaos and Bayes::Learn are working. Tomorrow I'll start back on Mathx-Chaos and Game-Markov when I read up

[05:48] <buggable> New CPAN upload: AI-Agent-0.2.7.tar.gz by HOLYGHOST http://modules.perl6.org/dist/AI::Agent:cpan:HOLYGHOST

[05:48] *** curan joined
[05:48] *** p6bannerbot sets mode: +v curan

[05:51] <holyghost> ^-- same test bugfixes

[05:57] *** w_richard_w left
[06:00] *** Actualeyes joined
[06:01] *** p6bannerbot sets mode: +v Actualeyes

[06:03] *** jmerelo joined
[06:03] <holyghost> hi jmerelo 

[06:04] <holyghost> jmerelo: I fixed the use Test; with is-deeply instead of ok

[06:05] <holyghost> Then I put in marginal distributions in Mathx::Stat and there's Mathx::Chaos now (working, test incl.) where I need it for sampling e.g. Monte Carlo or Markov Chain 

[06:06] <holyghost> AFAIK now, the meaning is to calculate chaos theory with statistics

[06:06] <holyghost> e.g. calculate attractors 

[06:07] <holyghost> this will end up in Mathx::Chaos

[06:08] <holyghost> now there's just the old correlation dimension routine from Mathx::Stat into Mathx::Chaos

[06:08] <holyghost> HTH

[06:10] <holyghost> thx for helping me out, I have 4 mature packages now

[06:12] <holyghost> They're all also in the CPAN ecosystem

[06:12] <holyghost> last upload, 1/2 hour ago

[06:15] *** sauvin joined
[06:15] *** p6bannerbot sets mode: +v sauvin

[06:17] <holyghost> un ceaux a vin pour moi oui (a bucket of wine for me yes)

[06:19] <holyghost> I'm going to buy a beer in 10 minutes, then I'm going to give up smoking and drink less

[06:20] <holyghost> It'll make my perl6 code better

[06:21] <holyghost> My oldest daughter would not want any less, she's 17 now :-)

[06:22] <holyghost> With the pm job, I'll have more money for both of them

[06:23] <holyghost> anyway, I'm very happy with my niche :-)

[06:29] *** domidumont joined
[06:30] *** p6bannerbot sets mode: +v domidumont

[06:32] *** domidumont left
[06:37] <Geth> ¦ doc: 1aff04599c | (JJ Merelo)++ | doc/Language/regexes.pod6

[06:37] <Geth> ¦ doc: Revises rephrasing of \n matching magic.

[06:37] <Geth> ¦ doc: 

[06:37] <Geth> ¦ doc: @fluca1978's contribution is OK. Some reformatting, too. Closes #1709.

[06:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/1aff04599c

[06:37] <synopsebot_> Link: https://doc.perl6.org/language/regexes

[06:39] <Geth> ¦ doc: 16d30e0aa1 | (JJ Merelo)++ | doc/Language/regexes.pod6

[06:39] <Geth> ¦ doc: Reflows and reformats, closes #1790

[06:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/16d30e0aa1

[06:42] *** hamhu3_ joined
[06:42] *** hamhu3_ left
[06:43] *** hamhu3_ joined
[06:43] *** p6bannerbot sets mode: +v hamhu3_

[06:45] *** hamhu3 left
[06:48] <holyghost> good work, jmerelo 

[06:48] *** domidumont joined
[06:49] *** p6bannerbot sets mode: +v domidumont

[06:52] *** KotH left
[07:04] <Geth> ¦ doc: 69a8d377e9 | (JJ Merelo)++ | doc/Language/regexes.pod6

[07:04] <Geth> ¦ doc: Unicode should go in caps

[07:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/69a8d377e9

[07:04] <Geth> ¦ doc: b49df78296 | (JJ Merelo)++ | doc/Language/regexes.pod6

[07:04] <Geth> ¦ doc: Rephrasing and reflow

[07:04] <synopsebot_> Link: https://doc.perl6.org/language/regexes

[07:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b49df78296

[07:31] *** discoD left
[07:35] *** jmerelo left
[07:41] *** scp1 joined
[07:41] *** p6bannerbot sets mode: +v scp1

[07:43] *** hamhu3 joined
[07:43] *** p6bannerbot sets mode: +v hamhu3

[07:45] *** hamhu3_ left
[07:50] *** scp1 left
[08:00] *** lizmat joined
[08:00] *** p6bannerbot sets mode: +v lizmat

[08:05] *** robertle joined
[08:05] *** p6bannerbot sets mode: +v robertle

[08:07] *** coet[work] joined
[08:08] *** p6bannerbot sets mode: +v coet[work]

[08:15] *** kensanata joined
[08:15] *** p6bannerbot sets mode: +v kensanata

[08:21] *** Kaypie left
[08:21] *** Kaypie joined
[08:22] *** p6bannerbot sets mode: +v Kaypie

[08:31] *** w_richard_w joined
[08:32] *** p6bannerbot sets mode: +v w_richard_w

[08:44] *** lichtkind left
[08:56] *** Kaypie left
[08:57] *** dakkar joined
[08:57] *** p6bannerbot sets mode: +v dakkar

[08:58] *** Kaiepi joined
[08:58] *** p6bannerbot sets mode: +v Kaiepi

[09:18] *** zakharyas joined
[09:18] *** Sgeo left
[09:18] *** p6bannerbot sets mode: +v zakharyas

[09:20] *** w_richard_w left
[09:21] *** Sgeo joined
[09:22] *** p6bannerbot sets mode: +v Sgeo

[09:31] *** scimon joined
[09:32] *** p6bannerbot sets mode: +v scimon

[09:33] *** nine left
[09:35] *** nine joined
[09:35] *** p6bannerbot sets mode: +v nine

[09:36] *** KotH joined
[09:36] *** p6bannerbot sets mode: +v KotH

[09:42] *** hamhu3_ joined
[09:43] *** gregf_ joined
[09:43] *** p6bannerbot sets mode: +v gregf_

[09:43] *** p6bannerbot sets mode: +v hamhu3_

[09:45] *** hamhu3 left
[09:46] *** nine left
[09:49] *** nine joined
[09:50] *** p6bannerbot sets mode: +v nine

[09:52] *** camelia joined
[09:53] *** p6bannerbot sets mode: +v camelia

[09:58] *** kurahaupo left
[09:59] *** kurahaupo joined
[10:00] *** p6bannerbot sets mode: +v kurahaupo

[10:07] *** AlexDani` joined
[10:08] *** p6bannerbot sets mode: +v AlexDani`

[10:12] *** AlexDaniel left
[10:13] *** tobs` joined
[10:14] *** p6bannerbot sets mode: +v tobs`

[10:17] *** sena_kun joined
[10:17] *** p6bannerbot sets mode: +v sena_kun

[10:31] <scimon> 22 of 24 modules chosen for Saturdays talk.

[10:31] <scimon> Broke my rule and selected at least one with LTA documentation. 

[10:40] <timotimo> .o( i wonder if it's one of mine )

[10:41] *** wbn left
[10:41] <lizmat> scimon: or mine ?

[10:44] *** random_yanek joined
[10:44] *** random_yanek left
[10:46] *** random_yanek joined
[10:47] *** random_yanek left
[10:47] *** random_yanek joined
[10:48] *** p6bannerbot sets mode: +v random_yanek

[10:50] *** AlexDani` is now known as AlexDaniel

[10:52] <scimon> timotimo and lizmat nope. 

[10:53] <scimon> (Though I think I have at least one from both of you)

[10:53] <lizmat> *phew*  :-)

[10:53] <scimon> This one is actually really old but really neat. 

[10:53] <scimon> (But I have preferred libraries with some solid docs, preferably in the Readme)

[10:54] <sena_kun> scimon, is there a list somewhere or it's a secret right now?

[11:01] *** gregf_ left
[11:03] <scimon> Well I'd like to have *some* suprises ;)

[11:04] <scimon> What I might do for the advent calender is document one of two modules as blog posts and then use that as basis for a documentation PR.

[11:06] <scimon> (one or two even)

[11:07] <scimon> I figure doing more than one advent calendar post would be good at this rate?

[11:12] <jnthn> Yeah, it seems the list of advent posts is a bit sparse this year

[11:12] <jnthn> I'm trying to think what I could write about :)

[11:14] *** domidumont left
[11:16] <sena_kun> jnthn, Comma in daily use? ^^' inb4: that's another topic for you, sena_kun.

[11:19] *** lucasb joined
[11:19] <Geth> ¦ mu: 492803ff7e | (Elizabeth Mattijsen)++ (committed using GitHub Web editor) | misc/perl6advent-2018/schedule

[11:19] <Geth> ¦ mu: add one entry

[11:19] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/492803ff7e

[11:20] *** p6bannerbot sets mode: +v lucasb

[11:41] *** vrurg left
[11:42] <lucasb> in a pair, if KeyType =:= ValueType, would you say the pair is "reflexive" or "symmetric" ? (I'm looking for the right word, but I guess both applies)

[11:43] <lucasb> for example, I want to reverse the pair (k,v) => (v,k), but that should only be possible if the k/v types are compatible

[11:45] *** kurahaupo left
[11:45] *** holyghost left
[11:46] *** Kaiepi left
[11:46] *** holyghost joined
[11:46] *** kurahaupo joined
[11:46] *** p6bannerbot sets mode: +v holyghost

[11:47] *** p6bannerbot sets mode: +v kurahaupo

[11:49] <tobs`> lucasb: "symmetric" sounds strange to me if you leave the context out that it is about the *types* (it might as well mean that key and value are the same).

[11:53] <scimon> (NB I'm not thinking about the advent calender too much until Monday)

[11:53] <lucasb> yeah, I want to mean that the pair is "reverseable", "invertable", "flippable"

[11:54] <tobs`> "reflexive" would be better in the sense that I'd have no strong conviction what it's supposed to mean and would go look it up the first time around.

[11:54] <tobs`> oops, gotta go

[11:54] <lucasb> ok, thanks

[11:55] <lucasb> another terminology would be to use homogeneous/heterogeneous to mean to pairs that have the same k/v types or k/v with different types

[12:11] *** zakharyas left
[12:38] *** leont joined
[12:39] *** p6bannerbot sets mode: +v leont

[12:46] *** rindolf joined
[12:47] *** p6bannerbot sets mode: +v rindolf

[12:47] *** coet[work] left
[12:50] *** leont left
[12:51] *** m01ar joined
[12:51] *** p6bannerbot sets mode: +v m01ar

[12:52] <m01ar> hi everybody

[12:53] <sena_kun> o/

[12:53] <m01ar> tried to find any faq on rakudo.org and moarvm.org, but found nothing. The question is my moarvm on Win7x64 hangs when i execute prompt in repl mode

[12:54] <m01ar> in script mode everything is ok

[12:54] <timotimo> interesting, it could be a problem with the readline/linenoise library in use

[12:55] <m01ar> can I help with finding out the source of this bug/behavior?

[12:58] *** molaf joined
[12:59] *** p6bannerbot sets mode: +v molaf

[13:01] <andrzejku> .seen araraloren

[13:01] <yoleaux> I saw araraloren 4 Nov 2018 16:06Z in #perl6: <araraloren> Zoffix okay, thanks :)

[13:01] <andrzejku> .seen loren

[13:01] <yoleaux> I saw loren 8 Jul 2016 13:51Z in #perl6: <loren> e, ^_^ .. haha don't mind

[13:01] *** domidumont joined
[13:02] *** p6bannerbot sets mode: +v domidumont

[13:03] <timotimo> i think you can

[13:03] <timotimo> i'm a little sidetracked at the moment

[13:03] <kensanata> m01ar: Perhaps trying it in a different terminal, like mintty from cygwin, or the gitbash terminal (not sure what they use?), just not cmd?

[13:03] <timotimo> do you have a gdb or windows equivalent available? you could attach it to the process and get stack traces from all threads

[13:04] <timotimo> then we would see if it hangs in some suspicious place

[13:05] <kensanata> My first suspicion would be terminal detection. If the process thinks there is no terminal attached, it might do buffering instead of printing line by line?

[13:05] *** Marcool joined
[13:05] <kensanata> This is based on my experience with interactive processes running within Emacs, though. :)

[13:06] <m01ar> kensanata: I tried on cmd.exe and via ConEmu. I'll try on mintty now

[13:07] <timotimo> right, there's an env var that forces rakudo to believe it's a non-interactive version, but i don't know if you can do it the other way around, too

[13:07] <timotimo> could actually be, for testing the repl and such?

[13:07] <m01ar> timotimo: I'm not quite familiar with debuggers, but I'll try to get the stack traces

[13:08] <timotimo> in gdb you will probably just have to "thread apply all bt"

[13:09] <timotimo> aha!

[13:09] <timotimo> rakudo can take a --repl-mode=interactive flag

[13:09] <timotimo> m01ar: please try if that makes a difference

[13:09] <m01ar> timotimo: already tried this switch - no difference

[13:10] <timotimo> OK

[13:10] <kensanata> Oh. :(

[13:12] <m01ar> having slow connection, sorry. Trying to download cmder/git-for-windows bundle :)

[13:16] <timotimo> when you have something like "say 'hi'", return and then ctrl-d (or equivalent), does the code execute?

[13:17] <m01ar> timotimo: you mean in which --repl-mode= ?

[13:17] <timotimo> try it with and without, please

[13:17] <m01ar> ok

[13:19] <m01ar> > say 'hi' [Enter] \n hi \n > [Ctrl+D] Repl terminates

[13:19] <timotimo> oh

[13:19] <timotimo> OH!

[13:19] <timotimo> when you execute prompt() in repl mode

[13:19] <timotimo> if i had read that, it would have been much better %)

[13:20] <timotimo> prompt is supposed to return after a single line has been entered, but on your machine it just eats text for seemingly ever?

[13:22] <m01ar> cmd: perl6 /newline/ To exit type 'exit' or '^D'/newline/> prompt 'enter something '[ENTER] /newline/ enter something # Hanging here

[13:23] <m01ar> cmd: perl6 --repl-mode=interactive # same story

[13:23] <timotimo> what if you type like a big amount of stuff?

[13:23] *** khisanth_ left
[13:24] <m01ar> timotimo: sorry?

[13:25] *** araraloren joined
[13:25] *** p6bannerbot sets mode: +v araraloren

[13:25] <araraloren> not araraloren; just clearing the bot

[13:25] *** araraloren left
[13:25] *** Ven`` joined
[13:26] *** p6bannerbot sets mode: +v Ven``

[13:27] <m01ar> prompt 'prompt-text: ' [ENTER] then I see my prompt-text and it does not respond to keyboard input ever

[13:27] <lucasb> are you trying to read input while in the REPL?

[13:29] <m01ar> yes

[13:31] <lucasb> I don't think the standard REPL is sufficiently advanced to do that

[13:31] <lucasb> I mean, the REPL already controls STDIN

[13:32] <lucasb> I tried this in other languages repls and in fact they can do that, but not the current P6 REPL

[13:34] <m01ar> that's why I'm asking for help or comments. Should it really hang or abort with a message like "sorry, prompt is not supported in REPL on your OS/shell"

[13:34] <lucasb> oops, sorry. I was testing a different REPL. disconsider everything I wrote about the P6 REPL :)

[13:36] <lucasb> looks like everything works fine in unixland P6 REPL

[13:36] <lucasb> in windows, I don't know, but I agree, yes, a little message warning the user would be nice

[13:37] *** khisanth_ joined
[13:38] *** p6bannerbot sets mode: +v khisanth_

[13:43] *** zakharyas joined
[13:43] <m01ar> tried to start perl6.bat on mintty but it didn't even start

[13:43] *** p6bannerbot sets mode: +v zakharyas

[13:45] *** Ven`` left
[13:47] <m01ar> what is the purpose of perl6-debug-m.bat? it runs in ansi colors and does not accept prompt command at all ("Sorry, I don't understand; for help type h")

[13:48] <m01ar> seem like it's not a perl6 repl at all, sorry

[13:49] *** hamhu3_ left
[13:51] *** hamhu3 joined
[13:52] *** p6bannerbot sets mode: +v hamhu3

[13:54] <m01ar> here is my stack trace when moarvm hung https://pastebin.com/U74WUfJa

[13:56] *** si joined
[13:56] *** p6bannerbot sets mode: +v si

[13:56] *** si is now known as Guest76897

[13:57] *** Guest76897 left
[14:01] *** Poohman joined
[14:02] *** p6bannerbot sets mode: +v Poohman

[14:07] *** Possum joined
[14:08] <m01ar> timotimo: here is my stack trace by gdb https://pastebin.com/uGgaNQca and by processhacker https://pastebin.com/U74WUfJa

[14:08] *** p6bannerbot sets mode: +v Possum

[14:10] *** kensanata left
[14:12] <Poohman> m: say {say "Enter:"; return {$*IN.get.Str eq "y"}}

[14:12] <camelia> rakudo-moar 0dc6efd63: OUTPUT: «-> ;; $_? is raw { #`(Block|69277040) ... }␤»

[14:12] <timotimo> oh

[14:12] <timotimo> could you re-run but set "MVM_JIT_DISABLE" in the environment first?

[14:12] <timotimo> having the jit on can make stack traces a bit weird

[14:12] <m01ar> ok

[14:14] <Poohman> hello all, how can I return a value from a lexical scope outside it without writing a subroutine?

[14:14] <masak> m: IMMEDIATE: { say "A"; last IMMEDIATE; say "B" }

[14:14] <camelia> rakudo-moar 0dc6efd63: OUTPUT: «A␤labeled last without loop construct␤  in block <unit> at <tmp> line 1␤␤»

[14:14] <masak> this doesn't work in Perl 6, but it works in JavaScript (as per spec)

[14:14] <moritz> Poohman: only if it's the last statement in the scope

[14:14] <masak> ISTR it also works in Perl 5...?

[14:15] <masak> any other languages where it (breaking from a labeled immediate block) works?

[14:15] <moritz> Poohman: it's supposed to work with the 'leave' statement, but that's not yet implemented

[14:15] <Poohman> ok

[14:16] <Poohman> moritz: if its the last statement, will it work now??

[14:16] <moritz> m: my $x = -> { 23; 42 }(); say $x

[14:16] <camelia> rakudo-moar 0dc6efd63: OUTPUT: «WARNINGS for <tmp>:␤42␤Useless use of constant integer 23 in sink context (line 1)␤»

[14:17] <moritz> Poohman: ^^ see above (ignore the warning)

[14:18] <Poohman> m: say ->{say "Enter:"; return {$*IN.get.Str eq "y"}}

[14:18] <camelia> rakudo-moar 0dc6efd63: OUTPUT: «->  { #`(Block|68628000) ... }␤»

[14:18] <Poohman> m: say ->{say "Enter:"; {$*IN.get.Str eq "y"}}

[14:18] <camelia> rakudo-moar 0dc6efd63: OUTPUT: «->  { #`(Block|59477504) ... }␤»

[14:18] <Poohman> m: say ->{{$*IN.get.Str eq "y"}}

[14:18] <camelia> rakudo-moar 0dc6efd63: OUTPUT: «->  { #`(Block|84846488) ... }␤»

[14:19] <Poohman> m: say ->{$*IN.get.Str eq "y"}

[14:19] <camelia> rakudo-moar 0dc6efd63: OUTPUT: «->  { #`(Block|68540312) ... }␤»

[14:19] <Poohman> m: say ($*IN.get.Str eq "y")

[14:19] <camelia> rakudo-moar 0dc6efd63: OUTPUT: «False␤»

[14:19] <Poohman> m: say ({{$*IN.get.Str eq "y"}})

[14:19] <camelia> rakudo-moar 0dc6efd63: OUTPUT: «-> ;; $_? is raw { #`(Block|57445048) ... }␤»

[14:24] *** dakkar left
[14:27] <m01ar> timotimo: new stack trace https://pastebin.com/AHWdGMRZ

[14:32] *** domidumont1 joined
[14:33] *** p6bannerbot sets mode: +v domidumont1

[14:34] *** ChoHag_ joined
[14:34] *** p6bannerbot sets mode: +v ChoHag_

[14:35] *** ChoHag left
[14:36] *** domidumont left
[14:48] *** lichtkind joined
[14:49] *** p6bannerbot sets mode: +v lichtkind

[14:51] *** SqrtNegInf joined
[14:52] *** p6bannerbot sets mode: +v SqrtNegInf

[14:55] *** Ven`` joined
[14:55] *** p6bannerbot sets mode: +v Ven``

[15:03] *** m01ar left
[15:07] *** coet[work] joined
[15:07] *** p6bannerbot sets mode: +v coet[work]

[15:12] *** curan left
[15:15] *** Marcool left
[15:23] <Poohman> hello all, how does STDIN work for REPL?

[15:23] <moritz> not very good

[15:24] <Poohman> ok I thought was a Windows thing

[15:37] <lichtkind> what exactly is now different with $*ARGFILES  ? Thanks

[15:39] <moritz> different? in comparison to what?

[15:49] *** Ven`` left
[15:51] <lichtkind> moritz 6.c and 6.d i read the delta but i can only vaguely assume what was strictened

[15:53] *** dakkar joined
[15:54] *** p6bannerbot sets mode: +v dakkar

[15:54] *** holyghost left
[15:54] *** Ven`` joined
[15:54] *** holyghost joined
[15:55] *** p6bannerbot sets mode: +v Ven``

[15:55] *** p6bannerbot sets mode: +v holyghost

[15:55] *** molaf left
[15:56] <moritz> lichtkind: https://github.com/rakudo/rakudo/commit/84d45f07fb4a6b08f0acb8ac15e0e4da80b7f3f3 seems to be the main change

[15:56] <lichtkind> moritz++

[15:57] *** sena_kun left
[15:59] *** lucasb left
[16:09] *** jmerelo joined
[16:09] *** p6bannerbot sets mode: +v jmerelo

[16:12] <jmerelo> So

[16:13] <jmerelo> I'm starting to be mildly worried by the absence of writers for this year's calendar

[16:13] *** domidumont1 left
[16:13] <jmerelo> https://github.com/perl6/mu/blob/master/misc/perl6advent-2018/schedule

[16:14] <jmerelo> You know it does not need to be a technical article. It can be a set of pointers to articles, talking about the community, resources to get introduced to Perl 6

[16:20] *** sena_kun joined
[16:21] *** p6bannerbot sets mode: +v sena_kun

[16:21] <Summertime> its the 25 posts for december thing right?

[16:21] <jmerelo> Summertime: right

[16:23] <jmerelo> First free day is Dec 3rd. Would you want to take that one?

[16:23] <scimon> So I need to think of some things. Right now I'm thinking I'll be picking some cool but under documented modules and writing some How-To's

[16:24] <jmerelo> scimon: that would be great :-)

[16:24] <Poohman> m: say $*DISTRO

[16:24] <camelia> rakudo-moar a728bb2d9: OUTPUT: «opensuse (42.3)␤»

[16:24] <scimon> But I don't want to say I'll do more than the one I'm down for until after the weekend.

[16:24] *** robertle left
[16:24] <Poohman> m: say {$*DISTRO}

[16:24] <camelia> rakudo-moar a728bb2d9: OUTPUT: «-> ;; $_? is raw { #`(Block|70340472) ... }␤»

[16:25] <Summertime> if I was to do something it'd be "porting sh scripts to perl6", but I dunno if I could make that more interesting than a link to a .diff :n I'll try writing something up over the next couple days and let you know if something worthwhile comes out

[16:26] <jmerelo> scimon: In which time I need to invite you to a couple of beers

[16:26] <jmerelo> Summertime: you don't need to write it in advance. Just the will will do for the time being. That sounds interesting enough.

[16:27] <Summertime> if I don't write it in advance, I can't write it at all! inverse motivation is a pain

[16:28] <jmerelo> Summertime: suit yourself :-) Remember this is not like a conference call for papers. Something lighter, even basic, will do.

[16:31] <SmokeMachine> scimon: where do I sign to make Red a candidate for that?

[16:31] <SmokeMachine> :P

[16:32] <scimon> SmokeMachine: Red has awesome documentation (compared to somethings I've looked in the last couple of weeks).

[16:32] <tobs`> I'm writing a module that I'd be happy to talk about even for two advent days, but it could be that the things I want to talk about aren't functioning yet by then :/

[16:33] <scimon> Just make that plain "Here's what I've done. Here's what I'm planning to do"

[16:34] <Summertime> an article listing relatively beginner-friendly issues within perl6 and the perl6 module ecosystem, would be nice

[16:36] <SmokeMachine> scimon: :) Im afraid of what you've been reading... :P

[16:40] *** ferreira left
[16:43] <jmerelo> tobs`: you'll have something functioning. That's enough. 

[16:43] <jmerelo> I mean, I'm not going to say we are kind of desperate. But check the date, check the schedule.

[16:44] <jmerelo> We really need all hands on deck.

[16:44] <jmerelo> That means you too, Poohman 

[16:44] <jmerelo> Whatever it is you're doing, it's good enough for the Perl Advent Calendar if you're good enough with English. If you're not, the editing crew (meaning whoever I'm able to cordon for the task) will help you.

[16:51] *** kurahaupo left
[16:51] *** kurahaupo joined
[16:52] *** p6bannerbot sets mode: +v kurahaupo

[16:53] <Geth> ¦ mu: taboege++ created pull request #37: perl6advent-2018: claim 15th

[16:53] <Geth> ¦ mu: review: https://github.com/perl6/mu/pull/37

[16:54] * tobs` crosses fingers

[16:54] <Geth> ¦ mu: fd2173d4e8 | (Tobias Boege)++ | misc/perl6advent-2018/schedule

[16:54] <Geth> ¦ mu: perl6advent-2018: claim 15th

[16:54] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/fd2173d4e8

[16:54] <Geth> ¦ mu: b7755825a1 | Altai-man++ (committed using GitHub Web editor) | misc/perl6advent-2018/schedule

[16:54] <Geth> ¦ mu: Merge pull request #37 from taboege/advent-2018

[16:54] <Geth> ¦ mu: 

[16:54] <Geth> ¦ mu: perl6advent-2018: claim 15th

[16:54] <Geth> ¦ mu: review: https://github.com/perl6/mu/commit/b7755825a1

[16:55] <sena_kun> tobs`, I am writing a module with quite a severe deadlines too(for another deal though), worse I don't know the spec perfectly, but I think it's possible to make it in time. So you are not alone. :)

[16:57] *** abraxxa joined
[16:58] *** p6bannerbot sets mode: +v abraxxa

[16:58] <sena_kun> I'll claim another spot if it'd be possible to separate my topic into two posts(content-wise it is doable, not sure about amount) and if some will be missing.

[17:00] <Summertime> just so I'm sure, this is what feeds modules.perl6.org? https://github.com/perl6/ecosystem/blob/master/META.list

[17:01] * sena_kun checks sources...

[17:01] <Summertime> hmm, grabbing all issues from all github/gitlab repos listed there shouldn't be too hard

[17:02] <jmerelo> Summertime: that, and CPAN

[17:02] <jmerelo> When you use zef, it updates itself with a couple of files, one from there, the other from CPAN. Those contains all known modules.

[17:02] <jmerelo> just about 1500

[17:02] <jmerelo> sena_kun: sure. Do that by all means.

[17:03] <jmerelo> Thanks both!

[17:04] <sena_kun> Summertime, I think, github one is one that you've posted here, cpan one is queried. anyway, you can find ready cache at https://github.com/ugexe/Perl6-ecosystems

[17:05] <Summertime> thank you both kindly

[17:06] *** moony left
[17:11] *** robertle joined
[17:12] *** p6bannerbot sets mode: +v robertle

[17:12] <tobs`> I wonder if someone could help me optimize (for speed) a script I made (for beauty) and we get a joint article out of that, for one of the early unclaimed days. https://github.com/taboege/p6-costas/blob/master/costas.p6

[17:12] <tobs`> As a matter of fact, this script has been running (with input N=32) for 254 processor hours and is currently using 238 GiB of RAM, which I don't think it should.

[17:13] <tobs`> (Apologies for the state of that repository. I just pushed it from the dark corners of my hard disk, didn't expect to share it.)

[17:13] <timotimo> m0ltar: sorry, most of these functions don't tell me much; i can't really tell what's going on there

[17:15] <timotimo> tobs`: is there a way to reduce the amount of work easily so we can get it to finish in a minute or two and improve performance from that?

[17:15] <tobs`> yes, N=32 is an open (toy) problem in research

[17:16] <SmokeMachine> tobs`: `new Literal: :!negated, :i($ij[0]), :j($ij[1]);` is something I'd never thought... but makes sense... (I mean the `new Type: args`)

[17:16] <tobs`> `./costas.p6 $N outfile` for any N ≤ 13 should be very ok

[17:16] <tobs`> timotimo: ^

[17:17] <tobs`> SmokeMachine: I'm not a C++ programmer, but I like how it reads :-)

[17:21] <tobs`> timotimo: uhh, let's say N ≤ 7 :-)

[17:22] <timotimo> i went with 5 for now

[17:22] <timotimo> all the -> ($i, $j) seem to force usage of the slow-path binder for some reason, that's not so good

[17:23] <timotimo> i'll have to go AFK for an unknown amount of time soon

[17:23] <tobs`> me too

[17:24] <timotimo> changing those to flat ..... -> $i, $j doesn't make things faster

[17:26] <tobs`> (fwiw, N=24 took almost exactly 2000 minutes ≈ 33 hours to compute, so I didn't expect 13 to be that hard already but 5 should be ideal for profiling)

[17:26] *** lucasb joined
[17:26] *** tobs` left
[17:27] *** p6bannerbot sets mode: +v lucasb

[17:34] *** scimon left
[17:34] *** ferreira joined
[17:35] *** p6bannerbot sets mode: +v ferreira

[17:40] *** dakkar left
[17:41] *** Ven`` left
[17:46] *** probablymoony joined
[17:46] *** p6bannerbot sets mode: +v probablymoony

[17:52] *** leont joined
[17:52] *** p6bannerbot sets mode: +v leont

[17:58] *** Ven`` joined
[17:58] *** |oLa| joined
[17:59] *** |oLa| left
[17:59] *** p6bannerbot sets mode: +v Ven``

[18:01] *** jmerelo left
[18:04] *** Ven`` left
[18:12] *** coet[work] left
[18:19] *** domidumont joined
[18:19] *** p6bannerbot sets mode: +v domidumont

[18:24] <Poohman> m: say "{$*DISTRO}"

[18:24] <camelia> rakudo-moar a728bb2d9: OUTPUT: «opensuse␤»

[18:26] <Poohman> m: say "{$*DISTRO}{$*DISTRO}"

[18:26] <camelia> rakudo-moar a728bb2d9: OUTPUT: «opensuseopensuse␤»

[18:26] <Poohman> m: say "{$*DISTRO;$*DISTRO}"

[18:26] <camelia> rakudo-moar a728bb2d9: OUTPUT: «opensuse␤»

[18:27] <Poohman> m: say "{$*DISTRO;$*PERL}"

[18:27] <camelia> rakudo-moar a728bb2d9: OUTPUT: «Perl 6␤»

[18:28] <Poohman> m: say "{$*DISTRO;$*PERL eq Perl 6}"

[18:28] <camelia> rakudo-moar a728bb2d9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3say "{$*DISTRO;$*PERL eq Perl7⏏5 6}"␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modifier…»

[18:28] <Poohman> m: say "{$*DISTRO;$*PERL eq "Perl 6"}"

[18:28] <camelia> rakudo-moar a728bb2d9: OUTPUT: «True␤»

[18:28] <timotimo> what are you trying to do here? :)

[18:29] <Poohman> m: say {say "Enter:"; return {$*IN.get.Str eq "y"}}

[18:29] <camelia> rakudo-moar a728bb2d9: OUTPUT: «-> ;; $_? is raw { #`(Block|59418992) ... }␤»

[18:29] <Poohman> something like this

[18:29] <Poohman> basically wanted to have a condition for a while looü

[18:29] <timotimo> sorry, i don't understand

[18:30] <Poohman> loop

[18:30] <Poohman> but was using a repeat while

[18:30] <timotimo> OK

[18:30] <Poohman> so wanted to include 2 statements in the while condition 

[18:30] <Poohman> one to print stuff out  - like a question

[18:31] <timotimo> ah

[18:31] <timotimo> well, you could just use prompt instead of $*IN.get

[18:31] <timotimo> that prints a little piece of text and then gets a line from stdin

[18:31] <Poohman> aaaahhhh

[18:31] <sena_kun> maybe "until prompt('Enter (y/n): ') eq 'y');

[18:31] <Poohman> nein

[18:31] <timotimo> perhaps use .fc so y and Y both work

[18:31] <Poohman> spent three hours on that 

[18:32] <sena_kun> `until prompt('Enter (y/n): ') eq 'y' { say "Do again!" }`

[18:32] <sena_kun> if I understand correctly.

[18:33] <timotimo> yes, but in a while/until puts the block in front of the condition

[18:33] <Poohman> cool - thought about everything - didnt y`all

[18:33] <Poohman> I want the condition in the begiining - I could have written a second say - but wanted to avoid that and was playing around

[18:34] <Poohman> thanks

[18:41] * [Coke] was confronted by a wolf spider at his home office earlier today. he kind of jumped when I screamed at him, which was, in retrospect, adorable.

[18:44] <timotimo> would you rather fight one spider the size of a wolf, or a hundred wolves the size of spiders ...

[18:50] <[Coke]> the former.

[18:51] <[Coke]> Thankfully this guy was not quite that large.

[18:55] <SmokeMachine> https://www.youtube.com/watch?v=MnKJzCUy9Tw

[19:03] *** zakharyas left
[19:07] <lucasb> SmokeMachine: chega mais em #perl6br se vc quiser trocar idea

[19:22] *** kst left
[19:25] *** sauvin left
[19:29] *** Actualeyes left
[19:33] <lucasb> I'm trying to make my pair object have this API to convert to a Hash: https://github.com/lucasbuchala/p6pairs/blob/master/t/05-hash.t#L8-L15

[19:34] <lucasb> But I'm having difficult coding the right multi methods: https://github.com/lucasbuchala/p6pairs/blob/master/lib/Duo.pm#L41-L52

[19:35] <lucasb> the .Hash API tested in 05-hash.t seems doable, no?

[19:35] <lucasb> ...and looks like a reasonable API? :)

[19:37] *** jast left
[19:38] *** vrurg joined
[19:39] *** p6bannerbot sets mode: +v vrurg

[19:39] *** jast joined
[19:40] *** p6bannerbot sets mode: +v jast

[19:40] *** vrurg left
[19:40] *** vrurg joined
[19:41] *** p6bannerbot sets mode: +v vrurg

[19:51] *** vrurg left
[19:51] <tobs> lucasb: :$named! only means that $named is mandatory, not that it must be true, i.e. p.Hash(named => False) would also match that candidate.

[19:51] *** vrurg joined
[19:52] <tobs> m: class Duo { has $.key; has $.value; multi method Hash (:$named where *.so, :$object where *.so) { :{key => $!key, value => $!value} } }; my \p = Duo.new(key => 1, value => 2); is-deeply p.Hash(:named, :object), :{key=>1, value=>2}, 'hash :named, :object'

[19:52] <camelia> rakudo-moar a728bb2d9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    is-deeply used at line 1␤␤»

[19:52] *** hamhu3 left
[19:52] <tobs> m: use Test; class Duo { has $.key; has $.value; multi method Hash (:$named where *.so, :$object where *.so) { :{key => $!key, value => $!value} } }; my \p = Duo.new(key => 1, value => 2); is-deeply p.Hash(:named, :object), :{key=>1, value=>2}, 'hash :named, :object'

[19:52] <camelia> rakudo-moar a728bb2d9: OUTPUT: «ok 1 - hash :named, :object␤»

[19:52] *** p6bannerbot sets mode: +v vrurg

[19:52] *** hamhu3 joined
[19:52] <tobs> `:$named where *.so` requires it to be True

[19:53] *** hamhu3 left
[19:53] *** hamhu3 joined
[19:54] *** p6bannerbot sets mode: +v hamhu3

[19:55] *** Ven`` joined
[19:56] *** p6bannerbot sets mode: +v Ven``

[19:59] *** Ven`` left
[20:01] <lucasb> tobs: thanks! I'll try to understand how to put everything together :)

[20:02] <lucasb> I didn't know I would need 'where' guards for such a simple scenario

[20:02] *** p6noob joined
[20:02] *** p6bannerbot sets mode: +v p6noob

[20:02] <tobs> I don't know of a shorter way, at least

[20:03] <p6noob> I know i'm missing something obvious about P6 arrays, but what is a more concise way to do this:       my @p; @p.append(@a); @p.append(@b);

[20:03] <p6noob> everything i try ends up with a .Seq or [] instead of the individual elements inside of @p

[20:03] <timotimo> m: my @a = <a b c>; my @b = <1 2 3>; my @p; @p.append(flat(@a, @b)); say @p.perl

[20:03] <camelia> rakudo-moar a728bb2d9: OUTPUT: «["a", "b", "c", IntStr.new(1, "1"), IntStr.new(2, "2"), IntStr.new(3, "3")]␤»

[20:04] <timotimo> m: my @a = <a b c>; my @b = <1 2 3>; my @p; @p.append(@a); @p.append(@b); say @p.perl

[20:04] <camelia> rakudo-moar a728bb2d9: OUTPUT: «["a", "b", "c", IntStr.new(1, "1"), IntStr.new(2, "2"), IntStr.new(3, "3")]␤»

[20:04] <timotimo> looks like that works

[20:04] <sena_kun> m: my @a = <a b c>; my @b = <1 2 3>; my @p; @p.append(|(@a, @b)); say @p.perl

[20:04] <camelia> rakudo-moar a728bb2d9: OUTPUT: «[["a", "b", "c"], [IntStr.new(1, "1"), IntStr.new(2, "2"), IntStr.new(3, "3")]]␤»

[20:04] <sena_kun> don't mind me

[20:05] <p6noob> heh, no no, thanks for the input sena_kun.

[20:05] <p6noob> And thank you timotimo

[20:05] <timotimo> NP

[20:05] <SmokeMachine> m: my @a = <a b c>; my @b = <1 2 3>; my @p; @p.append(|@a, |@b); say @p.perl

[20:05] <camelia> rakudo-moar a728bb2d9: OUTPUT: «["a", "b", "c", IntStr.new(1, "1"), IntStr.new(2, "2"), IntStr.new(3, "3")]␤»

[20:06] <timotimo> may also want to check what happens if the arrays have some nesting in them

[20:06] <p6noob> i was really hoping to do this..       sub  x(@p) { ...}        x(@a, @b)        

[20:06] <timotimo> well, arrays always have scalars around their values anyway

[20:06] <p6noob> timotimo, yes, .flat()  bit me because there were some elements inside i didn't want unpacked.

[20:07] *** kerframil joined
[20:07] *** p6bannerbot sets mode: +v kerframil

[20:08] <SmokeMachine> m: sub x(@p) {dd @p}; @a = ^5; @b = "a" .. "e"; x [|@a. |@b]

[20:08] <camelia> rakudo-moar a728bb2d9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '@a' is not declared␤at <tmp>:1␤------> 3sub x(@p) {dd @p}; 7⏏5@a = ^5; @b = "a" .. "e"; x [|@a. |@b]␤»

[20:08] <SmokeMachine> m: sub x(@p) {dd @p}; my @a = ^5; my @b = "a" .. "e"; x [|@a. |@b]

[20:08] <camelia> rakudo-moar a728bb2d9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of . to concatenate strings; in Perl 6 please use ~␤at <tmp>:1␤------> 3 my @a = ^5; my @b = "a" .. "e"; x [|@a.7⏏5 |@b]␤»

[20:09] <SmokeMachine> m: sub x(@p) {dd @p}; my @a = ^5; my @b = "a" .. "e"; x [|@a, |@b]

[20:09] <camelia> rakudo-moar a728bb2d9: OUTPUT: «Array element = [0, 1, 2, 3, 4, "a", "b", "c", "d", "e"]␤»

[20:09] <SmokeMachine> p6noob: ^^

[20:10] <SmokeMachine> m: sub x(@p) {dd @p}; my @a = ^5; my @b = "a" .. "e"; x [flat @a, @b]

[20:10] <camelia> rakudo-moar a728bb2d9: OUTPUT: «Array element = [0, 1, 2, 3, 4, "a", "b", "c", "d", "e"]␤»

[20:10] <p6noob> SmokeMachine, oh these are all good, thank you

[20:10] <SmokeMachine> m: sub x(*@p) {dd @p}; my @a = ^5; my @b = "a" .. "e"; x flat @a, @b

[20:10] <camelia> rakudo-moar a728bb2d9: OUTPUT: «Array element = [0, 1, 2, 3, 4, "a", "b", "c", "d", "e"]␤»

[20:11] <SmokeMachine> m: sub x(*@p) {dd @p}; my @a = ^5; my @b = "a" .. "e"; x |@a, |@b

[20:11] <camelia> rakudo-moar a728bb2d9: OUTPUT: «Array element = [0, 1, 2, 3, 4, "a", "b", "c", "d", "e"]␤»

[20:11] <timotimo> m: sub x(*@p) {dd @p}; my @a = ^5; my @b = "a" .. "e"; x @a, @b

[20:11] <camelia> rakudo-moar a728bb2d9: OUTPUT: «Array element = [0, 1, 2, 3, 4, "a", "b", "c", "d", "e"]␤»

[20:11] <timotimo> regular slurpy also flattens like that

[20:11] <SmokeMachine> timotimo: right! thanks!

[20:12] <timotimo> **@a gives you the other thing

[20:12] <p6noob> timotimo, oh that's really what i was missing there... slurpy array works nicely and makes the call sites less verbose too.

[20:14] *** jast left
[20:24] *** jast joined
[20:25] *** vrurg left
[20:25] *** p6bannerbot sets mode: +v jast

[20:26] *** domidumont left
[20:27] *** kurahaupo_ joined
[20:27] *** kurahaupo left
[20:28] *** p6bannerbot sets mode: +v kurahaupo_

[20:28] *** kurahaupo joined
[20:29] *** p6bannerbot sets mode: +v kurahaupo

[20:29] *** jast left
[20:30] *** kurahaupo left
[20:31] *** kurahaupo joined
[20:31] *** kurahaupo left
[20:31] *** kurahaupo joined
[20:32] *** p6bannerbot sets mode: +v kurahaupo

[20:32] *** kurahaupo_ left
[20:32] *** p6bannerbot sets mode: +v kurahaupo

[20:32] *** kurahaupo_ joined
[20:33] *** p6bannerbot sets mode: +v kurahaupo_

[20:33] *** jast joined
[20:34] *** kurahaupo left
[20:34] *** p6bannerbot sets mode: +v jast

[20:34] *** kurahaupo joined
[20:35] *** p6bannerbot sets mode: +v kurahaupo

[20:35] *** kurahaupo_ left
[20:35] *** kurahaupo_ joined
[20:36] *** p6bannerbot sets mode: +v kurahaupo_

[20:38] *** jast left
[20:38] *** robertle left
[20:39] *** kurahaupo left
[20:40] *** kurahaupo_ is now known as kurahaupo

[20:41] *** kurahaupo left
[20:41] *** kurahaupo joined
[20:42] *** kurahaupo left
[20:42] *** kurahaupo joined
[20:43] *** p6bannerbot sets mode: +v kurahaupo

[20:43] *** Skarsnik joined
[20:44] *** p6bannerbot sets mode: +v Skarsnik

[20:44] <Skarsnik> Hello

[20:48] <Skarsnik> It's quiet

[20:49] <SmokeMachine> hi!

[20:50] *** kurahaupo_ joined
[20:50] *** p6bannerbot sets mode: +v kurahaupo_

[20:53] *** hamhu3_ joined
[20:54] *** kurahaupo left
[20:54] *** p6bannerbot sets mode: +v hamhu3_

[20:55] *** pecastro joined
[20:55] *** hamhu3 left
[20:55] <timotimo> sorry about that!

[20:56] *** p6bannerbot sets mode: +v pecastro

[21:02] <lizmat> .

[21:04] <masak> I'm getting an error which is just ===SORRY!=== Unknown type Some::Type -- when does that usually happen?

[21:05] *** molaf joined
[21:05] *** p6bannerbot sets mode: +v molaf

[21:07] <Skarsnik> typo?

[21:09] <masak> I've ruled that out

[21:09] <masak> I've even been able to move the code and run it in a different place *in the same file*, and it works

[21:10] <lizmat> --ll-exception ?

[21:10] <timotimo> turn the optimizer off?

[21:10] <lucasb> reboot the computer?

[21:11] *** vrurg joined
[21:11] *** voxelot7 joined
[21:11] <masak> ah, --ll-exception is the good idea I always forget about

[21:11] *** vrurg left
[21:12] <SmokeMachine> masak: mabe moved to a place where Some::Type wasn't defined yet?

[21:12] *** p6bannerbot sets mode: +v voxelot7

[21:14] <masak> ok. it seems my own code is throwing the exception. *headdesk*

[21:14] <masak> thank you for your unparalleled patience

[21:16] *** voxelot7 left
[21:19] *** rindolf left
[21:20] *** jast joined
[21:21] *** p6bannerbot sets mode: +v jast

[21:24] <lucasb> "Stability and backwards compatibility stand in conflict with the need to iterate on ideas and replace newly discovered better ideas with old worse ideas"

[21:24] <lucasb> hehe, sounds like a fun project

[21:24] <lucasb> I want to get acquainted with 007 sometime

[21:25] *** jast left
[21:27] *** discoD joined
[21:28] *** p6bannerbot sets mode: +v discoD

[21:29] <masak> lucasb: \o/

[21:30] <masak> we're all about iterating

[21:30] <masak> tonight, I'm implementing Location, which is on that list of short-term goals

[21:32] *** p6noob left
[21:32] *** silug left
[21:38] <SmokeMachine> is there any way to write 2 different files where each one defines a type that is used on the other file?

[21:39] <SmokeMachine> I mean: file 1 defines type1 that is used on file 2 and file 2 defines type2 that is used by file 1

[21:39] <lizmat> SmokeMachine: I think jnthn recently explained somewhere, maybe SO, that that is not possible

[21:40] <SmokeMachine> lizmat: thanks!

[21:40] <SmokeMachine> Ill look for it

[21:40] <lizmat> basically, because you cannot circularly "use" modules

[21:46] <SmokeMachine> lizmat: yes, but if it was possible to stub a type (class Bla { ... }) and define it in another file, it could work...

[21:46] <lizmat> you wouldn't be able to precompile without the stub being defined, afaik

[21:47] <SmokeMachine> that wouldnt be a bigger problem than have to write every single Red model into the same file...

[21:47] <SmokeMachine> i think

[21:49] <SmokeMachine> my problem is: the way Red relationships work, I need to use almost every model inside of almost every model...

[21:49] <lizmat> SmokeMachine: the approach we take in the setting is that files are merged into a single file, and *then* compiled

[21:49] <lizmat> that might work for RED as well, maybe?

[21:49] <lizmat> tools/build/gen-cat.nqp is what it does for the setting

[21:50] <lizmat> you can give it a file with filenames with -f

[21:50] <lizmat> afk&

[21:51] <SmokeMachine> I am almost trying trying to write a "Schema" model that will receive a list of models (like: use Schema <Model1 Model2 Model3>) and do something like concat every model file, add a stub of each model at de begining of the concated string, eval it and return each model...

[21:52] <SmokeMachine> thanks lizmat!

[21:55] *** silug joined
[21:56] *** p6bannerbot sets mode: +v silug

[22:00] *** dogbert21 joined
[22:00] *** p6bannerbot sets mode: +v dogbert21

[22:02] *** dogbert2_ left
[22:03] *** agentzh joined
[22:03] *** p6bannerbot sets mode: +v agentzh

[22:18] *** lucasb left
[22:22] *** discoD left
[22:25] *** p6noob joined
[22:25] *** p6bannerbot sets mode: +v p6noob

[22:29] *** Sound joined
[22:29] *** p6bannerbot sets mode: +v Sound

[22:36] *** lichtkind left
[22:38] <SmokeMachine> lizmat: I am thinking of writing something like this to solve my problem: https://gist.github.com/FCO/8badb8ffc1ff86a2c2c4ae7963f37fd2

[22:39] <SmokeMachine> lizmat: do you know if it would precompile?

[22:39] <SmokeMachine> it created a .precomp on my dir... but Im not sure if its right...

[22:40] *** kurahaupo_ left
[22:41] *** kurahaupo joined
[22:41] *** p6bannerbot sets mode: +v kurahaupo

[22:45] *** Sound left
[22:49] *** EuAndreh[m] left
[22:49] *** kurahaupo_ joined
[22:50] *** EuAndreh[m] joined
[22:50] *** p6bannerbot sets mode: +v EuAndreh[m]

[22:50] *** p6bannerbot sets mode: +v kurahaupo_

[22:51] *** kurahaupo left
[22:54] *** kurahaupo_ left
[23:02] <SmokeMachine> .tell lizmat I am thinking on doing something like this, what do you think? https://gist.github.com/FCO/8badb8ffc1ff86a2c2c4ae7963f37fd2

[23:02] <yoleaux> SmokeMachine: I'll pass your message to lizmat.

[23:04] <SmokeMachine> .tell lizmat but Im not sure how META6.json would handle that... should Bla, Ble and Bli (on that example) be resources?

[23:04] <yoleaux> SmokeMachine: I'll pass your message to lizmat.

[23:17] *** kerframil left
[23:17] *** kerframil joined
[23:17] *** p6bannerbot sets mode: +v kerframil

[23:17] *** sena_kun left
[23:20] <Skarsnik> lizmat, not having circular dependancy is really annoying with working with huge library to bind with NC ^^

[23:23] *** pecastro left
[23:27] <jnthn> A typical solution is to extract a role, have the roles in some file that everything includes, and then just talk about the roles rather than the concrete types. I think it's also possible to write a bunch of classes with just their attributes in one file, and then provide all the methods in others by `augment`.

[23:27] <Skarsnik> will not work with NC

[23:27] <jnthn> What will not work?

[23:28] <Skarsnik> since you need the type fully defined x)

[23:29] <Skarsnik> hm, you could always separate struct definition and function I guess

[23:30] <jnthn> Like in C ;)

[23:30] <Skarsnik> ?

[23:31] <Skarsnik> anyways, it could be nice that this work one day ^^

[23:32] <SmokeMachine> jnthn: something like this would work? https://gist.github.com/FCO/8badb8ffc1ff86a2c2c4ae7963f37fd2

[23:33] *** Skarsnik left
[23:34] <jnthn> SmokeMachine: ufff...maybe :)

[23:35] *** kerframil left
[23:35] <jnthn> SmokeMachine: It might even do something sensible with the precomp, but I don't know. I think nine++ did some work some time ago to deal with BEGIN-time EVAL

[23:36] <jnthn> Just know that EXPORT runs once per `use`

[23:36] <jnthn> So if two different modules do this then you'll be in bother

[23:37] <jnthn> There's probably a better way to do this with a custom CompUnit::Repo that lets you name a directory and it concatenates all the things in it and precomps them as one or some such.

[23:38] <SmokeMachine> jnthn: that’s a good idea...

[23:39] <jnthn> I think that'd interact more properly with multiple `use` statements and precomp

[23:39] *** silug left
[23:41] *** qyliss22 joined
[23:42] *** qyliss22 left
[23:43] *** vrurg joined
[23:44] *** vrurg left
[23:44] *** vrurg joined
[23:45] *** p6bannerbot sets mode: +v vrurg

[23:50] *** silug joined
[23:51] *** p6bannerbot sets mode: +v silug

[23:54] *** w_richard_w joined
[23:55] *** p6bannerbot sets mode: +v w_richard_w

