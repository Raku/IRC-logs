[00:06] *** Khisanth left
[00:19] *** Khisanth joined
[00:20] *** p6bannerbot sets mode: +v Khisanth

[00:24] *** lizmat joined
[00:25] *** p6bannerbot sets mode: +v lizmat

[00:45] *** john_parr left
[00:47] *** john_parr joined
[00:47] *** ckraniak joined
[00:47] *** p6bannerbot sets mode: +v ckraniak

[00:48] *** p6bannerbot sets mode: +v john_parr

[01:00] *** ccc joined
[01:01] *** p6bannerbot sets mode: +v ccc

[01:02] *** mingdao left
[01:02] <ccc> Is there a way to get a square array dynamicly (ie without my @arr[n,n])

[01:03] <buggable> New CPAN upload: DB-Pg-0.4.tar.gz by CTILMES http://modules.perl6.org/dist/DB::Pg:cpan:CTILMES

[01:04] *** graphene left
[01:06] *** graphene joined
[01:06] <ccc> Say I have an array of arrays, all of the same type & size. Is there some way to turn it into something that will respond properly to .shape?

[01:06] *** p6bannerbot sets mode: +v graphene

[01:07] *** mingdao joined
[01:07] *** p6bannerbot sets mode: +v mingdao

[01:09] <MasterDuke> ccc: not 100% sure, but i don't think so

[01:09] <ccc> hmmm

[01:10] <ccc> makes shaped arrays not very good to work with

[01:11] <ccc> It seems making a pure perl matrix module is right out

[01:11] <MasterDuke> there is some matrix module already

[01:11] <MasterDuke> buggable: eco matrix

[01:11] <buggable> MasterDuke, Found 3 results: Math::Matrix, Matrix::Client, RPi::Device::ST7036. See https://modules.perl6.org/s/matrix

[01:12] <ccc> well then there IS a way. Are these just wrapped P5 modules?

[01:14] *** leont left
[01:15] *** graphene left
[01:16] *** graphene joined
[01:17] *** p6bannerbot sets mode: +v graphene

[01:18] *** ckraniak left
[01:30] *** molaf left
[01:37] *** ydlr joined
[01:37] *** p6bannerbot sets mode: +v ydlr

[01:43] *** molaf joined
[01:43] *** p6bannerbot sets mode: +v molaf

[01:49] *** aborazmeh joined
[01:49] *** aborazmeh left
[01:49] *** aborazmeh joined
[01:49] *** p6bannerbot sets mode: +v aborazmeh

[01:49] *** p6bannerbot sets mode: +v aborazmeh

[01:51] *** cognominal-p6 joined
[01:51] *** p6bannerbot sets mode: +v cognominal-p6

[01:55] *** cognominal-p6 left
[01:56] *** cognominal-p6 joined
[01:56] *** vike left
[01:56] *** p6bannerbot sets mode: +v cognominal-p6

[02:11] *** vike joined
[02:12] *** epony joined
[02:12] *** p6bannerbot sets mode: +v epony

[02:12] *** p6bannerbot sets mode: +v vike

[02:14] *** cognominal-p6 left
[02:17] *** kent\n joined
[02:17] *** p6bannerbot sets mode: +v kent\n

[02:48] *** quester joined
[02:48] *** p6bannerbot sets mode: +v quester

[02:56] *** ydlr left
[03:10] *** ccc left
[03:28] *** regreg joined
[03:29] *** p6bannerbot sets mode: +v regreg

[03:33] <samcv> .tell Zoffix it's guarenteed to be the same as long as you don't *add* anything.

[03:33] <yoleaux> samcv: I'll pass your message to Zoffix.

[03:33] <yoleaux> 8 Sep 2018 23:48Z <Zoffix> samcv: I think I asked you this before but totally forgot what the answer was. Is it guaranteed that an unmodified hash would maintain order when iterated over? There's a 6.d spec that declares a bunch of methods (.pairs, .keys, etc.) called on a hash must produce the values in the same order: https://github.com/perl6/roast/blob/fc96f8a7113a26512b8c7b7cbdf0f0b83549e0c8/S32-hash/iterator.t#L18-L33 Would you

[03:33] <yoleaux> 8 Sep 2018 23:48Z <Zoffix> samcv: check if that new spec make sense?

[03:34] <samcv> also if you delete something it should be the same, except with the element missing

[03:54] *** psychoslave joined
[03:55] *** p6bannerbot sets mode: +v psychoslave

[03:57] *** eliasr left
[04:08] *** aborazmeh left
[04:36] *** sena_kun joined
[04:36] *** p6bannerbot sets mode: +v sena_kun

[04:55] *** Zoffix joined
[04:55] *** p6bannerbot sets mode: +v Zoffix

[04:55] <Zoffix> I don't get this. Here, it looks like `~` is performed first, and `?` is performed second:

[04:55] <Zoffix> m: say ?~0

[04:55] <camelia> rakudo-moar 3272207ae: OUTPUT: «True␤»

[04:55] <Zoffix> But here, looks like `+` is performed... actually

[04:55] <Zoffix> m: say +^Inf

[04:55] <camelia> rakudo-moar 3272207ae: OUTPUT: «Cannot convert Inf to Int: ␤  in block <unit> at <tmp> line 1␤␤»

[04:56] <Zoffix> nm

[04:56] <Zoffix> m: say &prefix:<+^>

[04:56] <camelia> rakudo-moar 3272207ae: OUTPUT: «&prefix:<+^>␤»

[04:57] <Zoffix> Forgot that's an op

[04:57] *** Zoffix left
[05:10] *** cognominal-p6 joined
[05:10] *** p6bannerbot sets mode: +v cognominal-p6

[05:11] *** cognominal-p6 left
[05:12] *** cognominal-p6 joined
[05:12] *** p6bannerbot sets mode: +v cognominal-p6

[05:28] *** quester left
[05:33] *** cognominal-p6 left
[05:41] *** psychoslave left
[05:57] *** cpup joined
[05:58] *** chenyf left
[05:58] *** p6bannerbot sets mode: +v cpup

[06:28] *** chenyf joined
[06:29] *** p6bannerbot sets mode: +v chenyf

[06:33] <timotimo> m: my $a = Array.new([1,2;3,4;5,6], :shape(3,2)); say $a.perl

[06:33] <camelia> rakudo-moar 3272207ae: OUTPUT: «Array.new(:shape(3, 2), [1, 2], [3, 4], [5, 6]).item␤»

[06:46] *** MasterDuke left
[07:31] *** psychoslave joined
[07:32] *** p6bannerbot sets mode: +v psychoslave

[07:40] *** discoD left
[07:42] *** domidumont joined
[07:43] *** p6bannerbot sets mode: +v domidumont

[07:49] *** domidumont left
[07:58] *** araraloren joined
[07:59] *** p6bannerbot sets mode: +v araraloren

[08:00] *** marmor joined
[08:01] *** p6bannerbot sets mode: +v marmor

[08:03] *** araraloren left
[08:03] *** araraloren_ joined
[08:03] *** p6bannerbot sets mode: +v araraloren_

[08:16] *** araraloren_ left
[08:16] *** araraloren joined
[08:17] *** p6bannerbot sets mode: +v araraloren

[08:22] *** dct joined
[08:22] *** p6bannerbot sets mode: +v dct

[08:30] *** cognominal-p6 joined
[08:30] *** p6bannerbot sets mode: +v cognominal-p6

[08:35] *** Kaiepi joined
[08:36] *** p6bannerbot sets mode: +v Kaiepi

[08:42] *** cognominal-p6 left
[08:43] *** cognominal-p6 joined
[08:43] *** p6bannerbot sets mode: +v cognominal-p6

[08:46] *** rindolf joined
[08:46] *** p6bannerbot sets mode: +v rindolf

[08:51] *** dct left
[08:51] *** fake_space_whale left
[08:54] *** cognominal-p6 left
[08:56] *** rfold joined
[08:57] *** p6bannerbot sets mode: +v rfold

[08:59] <araraloren> m: my $p = Promise.new; my $sup = Supplier.new; $p.then({ $sup.emit(1); }); $sup.Supply.tap( -> \v { say "GOT A ", v; }); react { whenever $s { $sup.done; }; $p.keep(1); } 

[08:59] <camelia> rakudo-moar 3272207ae: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$s' is not declared␤at <tmp>:1␤------> 3{ say "GOT A ", v; }); react { whenever 7⏏5$s { $sup.done; }; $p.keep(1); }␤»

[08:59] <araraloren> m: my $p = Promise.new; my $sup = Supplier.new; $p.then({ $sup.emit(1); }); $sup.Supply.tap( -> \v { say "GOT A ", v; }); react { whenever $sup.Supply { $sup.done; }; $p.keep(1); } 

[08:59] <camelia> rakudo-moar 3272207ae: OUTPUT: «GOT A 1␤»

[08:59] <araraloren> m: my $p = Promise.new; my $sup = Supplier.new; $p.then({ $sup.emit(1); }); $sup.Supply.tap( -> \v { say "GOT A ", v; die 42; }); react { whenever $sup.Supply { $sup.done; }; $p.keep(1); } 

[09:00] <camelia> rakudo-moar 3272207ae: OUTPUT: «(timeout)GOT A 1␤»

[09:00] <araraloren> How can I handle the exception maybe throwed in the tap ?

[09:00] <araraloren> m: my $p = Promise.new; my $sup = Supplier.new; $p.then({ $sup.emit(1); }); $sup.Supply.act( -> \v { say "GOT A ", v; die 42; }); react { whenever $sup.Supply { $sup.done; }; $p.keep(1); } 

[09:00] <camelia> rakudo-moar 3272207ae: OUTPUT: «(timeout)GOT A 1␤»

[09:00] <timotimo> is that what .on-close is for?

[09:01] <araraloren> Will take a look :)

[09:01] <timotimo> i'm not actually sure why that would timeout there

[09:03] <araraloren> m: my $p = Promise.new; my $sup = Supplier.new; $p.then({ $sup.emit(1); }); $sup.Supply.on-close(-> { say "something ?"; }).tap( -> \v { say "GOT A ", v; die 42; }); react { whenever $sup.Supply { $sup.done; }; $p.keep(1); } 

[09:03] <araraloren> timotimo do you mean this ? seems like not working 

[09:03] <camelia> rakudo-moar 3272207ae: OUTPUT: «(timeout)GOT A 1␤»

[09:03] <timotimo> that's the one i thought of, but maybe that's not right

[09:04] <timotimo> ah, i see

[09:04] <timotimo> it's for when you actually close the tap itself by calling .close on the return value of the tap method

[09:04] <timotimo> i don't think there's anything on tap to react to errors

[09:04] <timotimo> not outside of a supply or react block anyway

[09:05] *** lizmat_ joined
[09:05] <araraloren> m: my $o = Promise.new; my $p = Promise.new; my $sup = Supplier.new; $p.then({ $sup.emit(1); }); $sup.Supply.tap( -> \v { say "GOT A ", v; try { die 42; CATCH { $o.break(42); } } }); react { whenever $sup.Supply { $sup.done; }; $p.keep(1); } 

[09:06] <camelia> rakudo-moar 3272207ae: OUTPUT: «(timeout)GOT A 1␤»

[09:06] *** p6bannerbot sets mode: +v lizmat_

[09:07] <araraloren> m: my $o = Promise.new; my $p = Promise.new; my $sup = Supplier.new; $p.then({ $sup.emit(1); }); $sup.Supply.tap( -> \v { say "GOT A ", v; try { die 42; CATCH { $o.break(42); } } }); react { whenever $sup.Supply { $sup.done; }; whenever $o { }; $p.keep(1); } 

[09:07] <camelia> rakudo-moar 3272207ae: OUTPUT: «GOT A 1␤An operation first awaited:␤  in block <unit> at <tmp> line 1␤␤Died with the exception:␤    42␤      in block <unit> at <tmp> line 1␤␤»

[09:08] *** lizmat left
[09:09] <araraloren> :/ tired to handle this, there are problems when using Supply/react 

[09:13] <Geth> ¦ doc: cfb80ef37d | (JJ Merelo)++ | htmlify.p6

[09:13] <Geth> ¦ doc: Refactoring to advance #1306

[09:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/cfb80ef37d

[09:22] <timotimo> can you tell me more about what problem you're trying to solve?

[09:22] <timotimo> maybe we can find out if it's an X/Y thing

[09:27] <araraloren> timotimo yeah, I am trying write my module with Supply/react

[09:28] <araraloren> and just like the example, exception may throw by the user code

[09:29] <araraloren> https://github.com/araraloren/perl6-getopt-advance/blob/supply/lib/Getopt/Advance/NonOption.pm6#L17

[09:29] <timotimo> oh, so it's like an event or stream based parser?

[09:29] <araraloren> yes

[09:30] <timotimo> and the $v.process thing, that calls into user code?

[09:30] <araraloren> yeah, it will

[09:30] <timotimo> "all you need" is to CATCH around that, IMO

[09:31] <araraloren> I want handle this in the getopt method: https://github.com/araraloren/perl6-getopt-advance/blob/supply/lib/Getopt/Advance.pm6#L81

[09:31] <timotimo> of course i don't know what you need to do when that happens

[09:32] <araraloren> but when I got a exception, it is hang on, similar like what you see in the example

[09:33] <araraloren> Will appreciate if you can checkout the module run the test :)

[09:34] <timotimo> right now i'm watching a presentation recording from the SPW, and i'm hoping to recover from a headache, so maybe i'll sit out on the balcony for a bit; before that i might not have enough brain to help with the whole module

[09:35] <araraloren> timotimo I want try next OptionSet when user said they think the Option not matched

[09:35] <araraloren> :) okay, I will try the Promise solution anyway

[09:35] <timotimo> good luck!

[09:36] <araraloren> thanks :)

[09:58] <timotimo> oh my word, there was just a really bad volume/noise spike in the stream recording

[09:58] <timotimo> oh well, the talk just ended anyway

[10:04] *** chenyf left
[10:20] *** marmor left
[10:21] <araraloren> timotimo Seems like the Promise can be a solution currently, but that's ugly :/

[10:33] *** chenyf joined
[10:34] *** p6bannerbot sets mode: +v chenyf

[10:42] *** kylese joined
[10:42] *** p6bannerbot sets mode: +v kylese

[11:31] *** leont joined
[11:31] *** p6bannerbot sets mode: +v leont

[11:47] *** MasterDuke joined
[11:47] *** p6bannerbot sets mode: +v MasterDuke

[11:47] *** MasterDuke left
[11:47] *** MasterDuke joined
[11:47] *** herbert.freenode.net sets mode: +v MasterDuke

[11:47] *** p6bannerbot sets mode: +v MasterDuke

[11:50] *** cognominal-p6 joined
[11:50] *** cognominal-p6 left
[11:51] *** cognominal-p6 joined
[11:51] *** p6bannerbot sets mode: +v cognominal-p6

[12:14] *** cognominal-p6 left
[12:45] *** psychoslave left
[12:47] *** ccc joined
[12:48] *** p6bannerbot sets mode: +v ccc

[12:51] <ccc> Is there a way to tell need, use, require etc. to load a file from current directory instead of installing the silly thing from zef?

[12:51] <ccc> While I'm still learning, I don't want my ignorant attempts littering an install repository

[12:57] <MasterDuke> ccc: i think `use lib '.';` might do what you want

[13:02] <ccc> Thanks - checking it out

[13:06] *** psychoslave joined
[13:07] *** p6bannerbot sets mode: +v psychoslave

[13:15] <ccc> MasterDuke: While searching for "use lib" docs, found this in modules doc, which may be more suitable for my purposes:

[13:16] <ccc> A user may have a collection of modules not found in the normal ecosystem, maintained by a module or package manager, but needed regularly. Instead of using the use lib pragma one can use the PERL6LIB environment variable to point to module locations.

[13:25] <ccc> p6: say hi

[13:25] <camelia> rakudo-moar 18a6968b9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    hi used at line 1␤␤»

[13:25] <ccc> p6: say "hi"

[13:25] <camelia> rakudo-moar 18a6968b9: OUTPUT: «hi␤»

[13:26] <ccc> p6: say <A B> X 1^2

[13:26] <camelia> rakudo-moar 18a6968b9: OUTPUT: «((A one(1, 2)) (B one(1, 2)))␤»

[13:27] <ccc> p6: say <A B> X~ <1 2>

[13:27] <camelia> rakudo-moar 18a6968b9: OUTPUT: «(A1 A2 B1 B2)␤»

[13:32] *** ccc left
[13:44] *** psychoslave left
[13:49] *** lizmat_ left
[13:54] *** lizmat joined
[13:54] *** p6bannerbot sets mode: +v lizmat

[14:06] *** chenyf left
[14:07] *** chenyf joined
[14:07] *** p6bannerbot sets mode: +v chenyf

[14:58] <araraloren> m: module Foo { role K { } }; import Foo; role L { ... }; sub f(K \k) { }; f L.new; role L does K { };

[14:58] <camelia> rakudo-moar be07f3001: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Invalid typename 'K' in parameter declaration.␤at <tmp>:1␤------> 3} }; import Foo; role L { ... }; sub f(K7⏏5 \k) { }; f L.new; role L does K { };␤»

[14:58] <araraloren> m: module Foo { role K is export { }; }; import Foo; role L { ... }; sub f(K \k) { }; f L.new; role L does K { };

[14:58] <camelia> rakudo-moar be07f3001: OUTPUT: «Type check failed in binding to parameter 'k'; expected Foo::K but got L (L.new)␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[14:58] <araraloren> m: module Foo { role K is export { }; }; import Foo; role L { ... }; sub f(K \k) { }; f L.new; role L does Foo::K { };

[14:58] <camelia> rakudo-moar be07f3001: ( no output )

[14:59] <araraloren> Why it think L is not a K ??

[15:00] *** zakharyas joined
[15:01] *** p6bannerbot sets mode: +v zakharyas

[15:06] <araraloren> m: module Foo { role K is export { }; }; module Bar { import Foo; role L { ... }; role L does K { }; }; import Foo; sub f(K \k) { }; import Bar; f(L.new);

[15:06] <camelia> rakudo-moar be07f3001: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    L used at line 1␤␤»

[15:06] <araraloren> m: module Foo { role K is export { }; }; module Bar { import Foo; role L is export does K { }; }; import Foo; sub f(K \k) { }; import Bar; f(L.new);

[15:06] <camelia> rakudo-moar be07f3001: OUTPUT: «Type check failed in binding to parameter 'k'; expected Foo::K but got Bar::L (Bar::L.new)␤  in sub f at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:07] *** atweiden-air joined
[15:08] *** p6bannerbot sets mode: +v atweiden-air

[15:10] *** cognominal-p6 joined
[15:10] *** p6bannerbot sets mode: +v cognominal-p6

[15:16] <araraloren> Help here: https://stackoverflow.com/questions/52245858/problem-when-using-role-between-two-module

[15:22] *** dogbert17 joined
[15:22] *** p6bannerbot sets mode: +v dogbert17

[15:23] *** cognominal-p6 left
[15:24] *** cognominal-p6 joined
[15:24] *** p6bannerbot sets mode: +v cognominal-p6

[15:29] <Geth> ¦ doc: 6bc8ce7fc4 | (Elizabeth Mattijsen)++ | 2 files

[15:29] <Geth> ¦ doc: Add documetation for the PredictiveIterator role

[15:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6bc8ce7fc4

[15:34] *** cognominal-p6 left
[15:36] <Geth> ¦ doc: b049dc1f6b | (Luis F. Uceta)++ | doc/Language/traps.pod6

[15:36] <Geth> ¦ doc: Remove period from headings and subheadings and other minor fixes

[15:36] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b049dc1f6b

[15:36] <Geth> ¦ doc: 9c5ccd09ce | (Luis F. Uceta)++ (committed using GitHub Web editor) | doc/Language/traps.pod6

[15:36] <Geth> ¦ doc: Merge pull request #2300 from uzluisf/master

[15:36] <synopsebot> Link: https://doc.perl6.org/language/traps

[15:36] <Geth> ¦ doc: 

[15:36] <Geth> ¦ doc: Remove period from headings and subheadings and other minor fixes

[15:36] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9c5ccd09ce

[16:05] *** epony left
[16:07] *** epony joined
[16:07] *** p6bannerbot sets mode: +v epony

[16:13] *** lizmat left
[16:24] *** Zoffix joined
[16:24] *** p6bannerbot sets mode: +v Zoffix

[16:24] <Zoffix> araraloren: feels like a bug. If you use full name for K, then it works

[16:24] <Zoffix> m: module Foo { role K is export { }; }; module Bar { import Foo; role L does K is export  { }; }; import Foo; sub f(Foo::K \k) { }; import Bar; f(L.new);

[16:24] <camelia> rakudo-moar e717e21be: ( no output )

[16:25] <Zoffix> m: module Foo { role K is export { }; }; module Bar { import Foo; role L does K is export  { }; }; import Foo; dd Foo::K === K

[16:25] <camelia> rakudo-moar e717e21be: OUTPUT: «Bool::False␤»

[16:26] *** Zoffix left
[16:28] <araraloren> .tell Zoffix, thanks, I see :/

[16:28] <yoleaux> araraloren: What kind of a name is "Zoffix,"?!

[16:28] <araraloren> .tell Zoffix thanks, I see :/

[16:28] <yoleaux> araraloren: I'll pass your message to Zoffix.

[16:30] *** araraloren left
[16:58] <masak> hm, 007 builds are suddenly failing: https://travis-ci.org/masak/007/builds/426180309 -- doesn't seem to be something I did

[16:59] <masak> `The program 'perl6' is currently not installed. To run 'perl6' please ask your administrator to install the package 'rakudo'`

[17:00] <masak> has something changed in this area recently such that my travis config needs to adapt?

[17:00] <timotimo> that was a version mismatch between nqp and rakudo

[17:00] <timotimo> probably just perfectly bad timing?

[17:00] <masak> ok, restarting build

[17:01] <diakopter> sounds like an OS upgrade

[17:02] *** AlexDani` joined
[17:02] <masak> seems to go better now :>

[17:03] *** p6bannerbot sets mode: +v AlexDani`

[17:06] *** AlexDaniel left
[17:12] *** AlexDani` is now known as AlexDaniel

[17:12] *** AlexDaniel left
[17:12] *** AlexDaniel joined
[17:12] *** hitchcock.freenode.net sets mode: +v AlexDaniel

[17:12] *** p6bannerbot sets mode: +v AlexDaniel

[17:13] *** chenyf left
[17:18] *** pecastro joined
[17:18] *** p6bannerbot sets mode: +v pecastro

[17:25] *** regreg left
[17:27] *** lichtkind joined
[17:28] *** p6bannerbot sets mode: +v lichtkind

[17:28] *** regreg joined
[17:29] *** p6bannerbot sets mode: +v regreg

[17:49] *** jh joined
[17:49] *** p6bannerbot sets mode: +v jh

[17:49] <jh> yo

[17:49] *** jh is now known as Guest3042

[17:50] <Guest3042> hello

[17:50] <masak> hi, jh

[17:50] <Guest3042> perl6 sounds cool

[17:50] <masak> it's OK I guess :P

[17:50] <Guest3042> how could i contribute?

[17:51] <masak> I usually suggest "learning it in public" -- if you come in here regularly, ask questions, and use camelia, that in itself is a contribution

[17:51] <masak> then there's all the other tasks like bug reporting, documentation, module management

[17:51] <Guest3042> right

[17:52] <Guest3042> could contribute with documentation to begin with

[17:52] <Guest3042> if someone could point me in the right direction, i suppose :)

[17:53] *** domidumont joined
[17:53] <masak> https://github.com/perl6/doc/issues

[17:54] *** p6bannerbot sets mode: +v domidumont

[17:54] <AlexDaniel> or even https://github.com/perl6/doc/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22

[17:57] <Guest3042> thanks @AlexDaniel @masak

[17:58] <masak> well, thank *you*, in a prefix-increment sort of way

[17:58] *** Guest3042 left
[17:58] *** jk joined
[17:58] *** p6bannerbot sets mode: +v jk

[17:58] *** jk left
[17:59] *** ExtraCrispy left
[18:02] *** ggoebel_ joined
[18:03] *** p6bannerbot sets mode: +v ggoebel_

[18:14] *** kylese left
[18:30] *** cognominal-p6 joined
[18:30] *** p6bannerbot sets mode: +v cognominal-p6

[18:31] *** cognominal-p6 left
[18:32] *** cognominal-p6 joined
[18:32] *** p6bannerbot sets mode: +v cognominal-p6

[18:36] <Geth> ¦ ecosystem: b987600cfc | (Aleks-Daniel Jakimenko-Aleksejev)++ | META.list

[18:36] <Geth> ¦ ecosystem: Fix link to META6.json file

[18:36] <Geth> ¦ ecosystem: 

[18:36] <Geth> ¦ ecosystem: The file was renamed.

[18:36] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/b987600cfc

[18:45] <AlexDaniel> tbrowder__: https://github.com/tbrowder/Foo-Bar-Perl6/commit/3b8d4a5010183b9ae6f4d5f3acf7513d5d9a76e9

[18:45] <AlexDaniel> tbrowder__: ↑ the name was fixed but there was no new release on cpan, so it doesn't resolve properly still

[18:46] <AlexDaniel> .tell stmuk can you fix that please? It's Test::META not Test::Meta https://gitlab.com/stmuk/p6-task-galaxy/blob/600adfac93f0da62025097853f8f021604a35e8f/META6.json#L52

[18:46] <yoleaux> AlexDaniel: I'll pass your message to stmuk.

[18:47] <AlexDaniel> .seen gabrielash

[18:47] <yoleaux> I haven't seen gabrielash around.

[18:51] <AlexDaniel> what is Lingua::EN::Stem::Porter ?

[18:51] <AlexDaniel> does anybody know?

[18:51] <AlexDaniel> .seen kmwallio

[18:51] <yoleaux> I saw kmwallio 17 Jun 2016 23:27Z in #perl6: <kmwallio> m: ((1,2) == 1).say

[18:53] <AlexDaniel> btw there are just 7 modules in the ecosystem that have something wrong in their “depends” or “test-depends” field: https://gist.github.com/AlexDaniel/b613eb4106244c5b2d04581052385754

[18:54] <AlexDaniel> Lingua::EN::Stem::Porter seems to be a module that no longer exists? Or there's something wrong with my setup, I'm not sure

[18:54] *** cognominal-p6 left
[18:54] <AlexDaniel> both Acme::Skynet and Text::TFIdf are by the same author

[18:54] <AlexDaniel> tbrowder__, stmuk: ↑ hoping for your cooperation to reduce the list to just 5 :)

[18:55] <AlexDaniel> “IO::Socket::INET” and “Net::ZMQ:auth('github:gabrielash')” issues already have PRs for them, though unmerged…

[19:06] *** woolfy joined
[19:07] *** p6bannerbot sets mode: +v woolfy

[19:17] *** domidumont left
[19:21] *** spycrab0 joined
[19:21] *** p6bannerbot sets mode: +v spycrab0

[19:24] *** chenyf joined
[19:25] *** p6bannerbot sets mode: +v chenyf

[19:25] *** rfold left
[19:29] *** chenyf left
[19:30] *** sena_kun left
[19:31] *** fake_space_whale joined
[19:32] *** p6bannerbot sets mode: +v fake_space_whale

[19:35] *** woolfy left
[19:38] *** rfold joined
[19:39] *** p6bannerbot sets mode: +v rfold

[19:40] *** lizmat joined
[19:41] *** p6bannerbot sets mode: +v lizmat

[19:48] <moritz> is there anything that helps against the privmsg spam on freenode?

[19:49] *** rfold left
[19:54] <AlexDaniel> moritz: they're now spamming with privmsgs?

[19:54] <AlexDaniel> yesterday I was surprised how clean this channel is

[19:54] *** Zoffix joined
[19:54] *** p6bannerbot sets mode: +v Zoffix

[19:55] <Zoffix> moritz: set +R user mode

[19:55] <Zoffix> moritz: freenode does that auomatically now on connect, so you could try just reconnecting

[19:56] <lichtkind> Zoffix, thanks for clarifyiing

[19:56] <moritz> Zoffix: thanks, will try

[19:57] <moritz> AlexDaniel: they've been doing that for weeks :(

[19:57] * AlexDaniel never got their messages

[19:57] * Zoffix has +R set and haven't seen a single message

[19:57] *** robertle left
[19:58] *** Zoffix left
[20:26] *** dct joined
[20:26] *** p6bannerbot sets mode: +v dct

[20:36] *** zakharyas left
[20:38] *** fake_space_whale left
[20:44] <xinming> use MIME::Base32:from<Perl5> <decode_base32>; my $str = decode_base32("NY4A5CPJZ46LXZCP"); $str.decode("ascii").perl.say;

[20:44] <xinming> In this case, How can we correctly to handle the Buf returned via perl5 functions?

[20:44] <xinming> s/to//g

[20:45] <xinming> echo -n "NY4A5CPJZ46LXZCP" | base32 -d      shows correct result

[20:46] <timotimo> what does the thing you get back look like when you .perl it or something? maybe youh ave to .list it first or something?

[20:46] <xinming> Just now, I found that use  $str.decode("ISO-8859-1")  gave something meaningful.

[20:47] <timotimo> ascii doesn't allow anything above 127

[20:47] <xinming> timotimo: Will not decode invalid ASCII (code point > 127 found)      It'll return error

[20:47] <xinming> I understood.

[20:47] <xinming> n8�éÏ<»äO

[20:47] <xinming> with ISO-8859-1,  that's the string I got.

[20:48] <timotimo> utf8 doesn't work?

[20:48] <xinming> echo -n NY4A5CPJZ46LXZCP | base32 -d    <--- This prints  n8<O

[20:48] <xinming> timotimo: No, It doesn't work.

[20:49] <xinming> It seems the returned thing in perl6 is a bit different from what we can use in perl5

[20:49] <timotimo> timo@schmand ~> echo -n NY4A5CPJZ46LXZCP | base32 -d | xxd

[20:49] <timotimo> 00000000: 6e38 0e89 e9cf 3cbb e44f                 n8....<..O

[20:49] <timotimo> if the shell only prints n8<O, it's leaving out about half the data

[20:50] <xinming> Ok...

[20:50] <xinming> Got it, thanks. :-)

[20:50] <timotimo> no prob! :)

[20:51] <timotimo> looking at the xxd of stuff is a reflex i took a long time to learn, and it has served me well

[21:26] *** dmaestro joined
[21:26] *** p6bannerbot sets mode: +v dmaestro

[21:28] <dmaestro> camelia: perl6 -e 'package Test { role R { method foo(-->Int) {...} }; class C { has R $.delegate handles * is required; }; class D does R { has Int $.foo; }; }; my $d = Test::D.new(:foo(2)); my $c = Test::C.new(delegate => $d); say $d.foo; say $c.foo

[21:28] <dmaestro> camelia: package Test { role R { method foo(-->Int) {...} }; class C { has R $.delegate handles * is required; }; class D does R { has Int $.foo; }; }; my $d = Test::D.new(:foo(2)); my $c = Test::C.new(delegate => $d); say $d.foo; say $c.foo

[21:29] <dmaestro> :camelia say <hello>

[21:29] <dmaestro> I've obviously forgotten how to do this ...

[21:29] <dmaestro> m: say <hello>

[21:29] <camelia> rakudo-moar 53e82c9ab: OUTPUT: «hello␤»

[21:30] <dmaestro> m: package Test { role R { method foo(-->Int) {...} }; class C { has R $.delegate handles * is required; }; class D does R { has Int $.foo; }; }; my $d = Test::D.new(:foo(2)); my $c = Test::C.new(delegate => $d); say $d.foo; say $c.foo

[21:30] <camelia> rakudo-moar 53e82c9ab: OUTPUT: «2␤2␤»

[21:31] <dmaestro> That's more like it. Delegating a method works fine here, as a one-liner. But if I put the package in a file and try to use it, I get this:

[21:32] <dmaestro> perl6 -Ilib -MTest::Delegate -e 'my $d = Test::D.new(:foo(2)); my $c = Test::C.new(delegate => $d); say $d.foo; say $c.foo'

[21:33] <dmaestro> 2 Cannot invoke this object (REPR: Null; VMNull)   in block <unit> at -e line 1

[21:33] <dmaestro> Can anybody guess what is going on?

[21:36] *** kensanata joined
[21:36] *** p6bannerbot sets mode: +v kensanata

[21:46] <Kaiepi> m: use experimental :smallnatives; my bit \foo = 1

[21:46] <camelia> rakudo-moar 53e82c9ab: OUTPUT: «===SORRY!===␤Unknown uint size 1␤»

[21:46] <Kaiepi> what are the plans for this?

[21:46] *** dct left
[21:50] *** cognominal-p6 joined
[21:51] *** p6bannerbot sets mode: +v cognominal-p6

[22:00] <dmaestro> m: package TestD { role R { method foo(-->Int) {...} }; class C { has R $.delegate handles * is required; }; class D does R { has Int $.foo; }; }; my $d = TestD::D.new(:foo(2)); my $c = TestD::C.new(delegate => $d); say $d.foo; say $c.foo

[22:00] <camelia> rakudo-moar bd8320619: OUTPUT: «2␤2␤»

[22:03] <dmaestro> If someone can take a look, I'd appreciate it -- thinking I should submit a rakudobug ...

[22:03] <dmaestro> https://gist.github.com/dmaestro/826f4a602136606b8db98a1c72785ef2

[22:03] *** MasterDuke left
[22:04] *** sotona joined
[22:04] *** p6bannerbot sets mode: +v sotona

[22:05] *** cognominal-p6 left
[22:05] *** cognominal-p6 joined
[22:06] *** p6bannerbot sets mode: +v cognominal-p6

[22:13] *** cognominal-p6 left
[22:21] *** atweiden-air left
[22:30] *** kensanata left
[22:50] <Geth> ¦ ecosystem: a3449ab99e | (Aleks-Daniel Jakimenko-Aleksejev)++ | META.list

[22:50] <Geth> ¦ ecosystem: Add Foo::Regressed modules

[22:50] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/a3449ab99e

[22:52] *** reportable6 left
[22:52] *** reportable6 joined
[22:52] *** ChanServ sets mode: +v reportable6

[22:53] *** graphene left
[22:53] *** p6bannerbot sets mode: +v reportable6

[22:55] *** graphene joined
[22:55] *** p6bannerbot sets mode: +v graphene

[23:00] <tbrowder__> AlexDaniel: i have uploaded a new version of Foo::Bar to cpan...i  hope that works.

[23:01] <AlexDaniel> tbrowder__: thanks!

[23:04] <buggable> New CPAN upload: Foo-Bar-Perl6-72.0.1.tar.gz by TBROWDER https://cpan.metacpan.org/authors/id/T/TB/TBROWDER/Perl6/Foo-Bar-Perl6-72.0.1.tar.gz

[23:04] <buggable> New CPAN upload: Foo-Bar-Perl6-72.0.1.zip by TBROWDER https://cpan.metacpan.org/authors/id/T/TB/TBROWDER/Perl6/Foo-Bar-Perl6-72.0.1.zip

[23:05] <tbrowder__> you’re very welcome, i’m sorry i forgot about the problem, but when will you run another test to make sure it works?

[23:05] *** reportable6 left
[23:05] *** reportable6 joined
[23:05] *** ChanServ sets mode: +v reportable6

[23:06] *** p6bannerbot sets mode: +v reportable6

[23:09] <AlexDaniel> tbrowder__: I'm waiting for this thing to be updated: https://raw.githubusercontent.com/ugexe/Perl6-ecosystems/master/cpan.json

[23:11] <AlexDaniel> seems to be twice a day, so tomorrow should be fine

[23:23] *** sotona left
[23:25] *** chenyf joined
[23:26] *** p6bannerbot sets mode: +v chenyf

[23:30] *** chenyf left
[23:41] *** MasterDuke joined
[23:41] *** p6bannerbot sets mode: +v MasterDuke

[23:42] *** MasterDuke left
[23:42] *** MasterDuke joined
[23:42] *** herbert.freenode.net sets mode: +v MasterDuke

[23:42] *** p6bannerbot sets mode: +v MasterDuke

