[00:00] *** troys_ is now known as troys

[00:04] *** trnh left
[00:39] *** cdg joined
[00:41] *** cdg left
[00:41] *** cdg joined
[00:47] *** ccntrq joined
[00:53] *** lookatme joined
[01:02] *** Cabanossi left
[01:05] *** Cabanossi joined
[01:05] <Xliff_> jnthn++ -- Good tutorial which is highly relevant to something I am trying to design.

[01:05] <Xliff_> cono++ for asking a good question. ;)

[01:10] *** aborazmeh joined
[01:10] *** aborazmeh left
[01:10] *** aborazmeh joined
[01:17] *** comborico1611 joined
[01:19] *** aborazmeh left
[01:27] *** cdg left
[01:27] *** cdg joined
[01:32] *** cdg left
[01:53] <Geth> ¦ doc: zoffixznet++ created pull request #1746: Post release

[01:53] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1746

[01:54] <Geth> ¦ doc/master: 4 commits pushed by (Zoffix Znet)++

[01:54] <Geth> ¦ doc/master: 9d07ddbeff | Document `no worries` pragma

[01:54] <Geth> ¦ doc/master: 3f25ea5589 | Fix typo; jkramer++

[01:54] <Geth> ¦ doc/master: 5541be5df9 | Merge branch 'master' into post-release

[01:54] <Geth> ¦ doc/master: e0c5903339 | Merge pull request #1746 from perl6/post-release

[01:54] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/890bfa1926...e0c5903339

[01:59] *** wander left
[02:04] *** comborico1611 left
[02:09] *** astj joined
[02:11] <Geth> ¦ doc: 04a545ecb4 | (Zoffix Znet)++ | doc/Type/Routine.pod6

[02:11] <Geth> ¦ doc: Remove trailing whitespace

[02:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/04a545ecb4

[02:11] <synopsebot> Link: https://doc.perl6.org/type/Routine

[02:12] *** Kaiepi left
[02:12] *** Kaiepi joined
[02:15] <Geth> ¦ doc: 9558369991 | (Zoffix Znet)++ | doc/Language/pragmas.pod6

[02:15] <Geth> ¦ doc: Fix pod error

[02:15] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9558369991

[02:15] <synopsebot> Link: https://doc.perl6.org/language/pragmas

[02:15] *** _Kaiepi joined
[02:16] *** Kaiepi left
[02:17] *** travis-ci joined
[02:17] <travis-ci> Doc build failed. Zoffix Znet 'Merge pull request #1746 from perl6/post-release

[02:17] <travis-ci> https://travis-ci.org/perl6/doc/builds/333081223 https://github.com/perl6/doc/compare/890bfa192679...e0c590333939

[02:17] *** travis-ci left
[02:17] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[02:26] *** troys is now known as troys_

[02:27] <Geth> ¦ doc: 0770f3a205 | (Zoffix Znet)++ | doc/Language/variables.pod6

[02:27] <Geth> ¦ doc: Reword \ sigil

[02:27] <Geth> ¦ doc: 

[02:27] <Geth> ¦ doc: - "thru" isn't liked by spellcheck

[02:27] <Geth> ¦ doc: - in this context, `\` isn't an operator

[02:27] <synopsebot> Link: https://doc.perl6.org/language/variables

[02:27] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0770f3a205

[02:36] *** travis-ci joined
[02:36] <travis-ci> Doc build failed. Zoffix Znet 'Remove trailing whitespace'

[02:36] <travis-ci> https://travis-ci.org/perl6/doc/builds/333084841 https://github.com/perl6/doc/compare/e0c590333939...04a545ecb4a9

[02:36] *** travis-ci left
[02:36] <buggable> [travis build above] ☠ Did not recognize some failures. Check results manually.

[02:39] <Geth> ¦ doc: b023a9a144 | (Zoffix Znet)++ | 3 files

[02:39] <Geth> ¦ doc: Make xtest pass

[02:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b023a9a144

[02:39] *** eliasr left
[02:45] *** dj_goku left
[02:45] *** ilbot3 left
[02:49] *** aborazmeh joined
[02:49] *** aborazmeh left
[02:49] *** aborazmeh joined
[02:50] *** travis-ci joined
[02:50] <travis-ci> Doc build passed. Zoffix Znet 'Reword \ sigil

[02:50] <travis-ci> https://travis-ci.org/perl6/doc/builds/333088080 https://github.com/perl6/doc/compare/95583699911a...0770f3a205d3

[02:50] *** travis-ci left
[02:55] *** cdg joined
[02:55] *** ilbot3 joined
[02:55] *** ChanServ sets mode: +v ilbot3

[02:59] *** cdg left
[03:06] *** cdg joined
[03:06] *** cdg left
[03:07] *** cdg_ joined
[03:07] <SmokeMachine> m: class C {multi method a(Int){}; method b {}}; say C.^methods # why multi methods don't show up on .^methods?

[03:07] <camelia> rakudo-moar d1a48efc9: OUTPUT: «(b a)␤»

[03:07] <SmokeMachine> sorry... seems Im on a old version...

[03:09] <SmokeMachine> m: role R {multi method a(Int){}; method b {}}; say R.^methods

[03:09] <camelia> rakudo-moar d1a48efc9: OUTPUT: «(b)␤»

[03:09] <SmokeMachine> that's only true on roles! ^

[03:09] <SmokeMachine> is that a bug?

[03:10] <SmokeMachine> m: role R {multi method a(Int){}; method b {}}; say R.^pun.^methods

[03:10] <camelia> rakudo-moar d1a48efc9: OUTPUT: «(b a)␤»

[03:10] <SmokeMachine> I thought that call .^methods would call .^pun...

[03:18] *** aborazmeh left
[03:23] *** espadrine left
[03:31] *** _Kaiepi left
[03:32] *** _Kaiepi joined
[03:39] <MasterDuke> i do find that a bit surprising

[04:02] <SmokeMachine> there are implementations of the method methods into MethodContainer and ParametricRoleGroupHOW

[04:03] <SmokeMachine> the one at ParametricRoleGroupHOW just calls the method of the meta class of the @!candidates[0]

[04:04] <SmokeMachine> is it possible to the multi method is being "stored" at MultiMethodContainer and thats the motive that its not being found?

[04:14] *** _Kaiepi left
[04:15] *** _Kaiepi joined
[04:15] *** shinobi-cl joined
[04:28] *** Cabanossi left
[04:30] *** Cabanossi joined
[04:44] *** cdg_ left
[04:44] *** cdg joined
[04:49] *** cdg left
[04:53] *** nativecallable6 left
[04:53] *** nativecallable6 joined
[05:08] *** shinobi-cl left
[05:44] * Xliff_ wonders what Zoffix's native language is...

[05:44] <Xliff_> http://blogs.perl.org/users/zoffix_znet/2016/01/why-in-the-world-would-anyone-use-perl-6.html

[05:44] <Xliff_> How precient that post is, nearly a year later.

[05:44] <Xliff_> Not to add fuel to the fire, though...

[05:45] <Xliff_> (although, after thinking about it... I probably did... mea culpa)

[05:45] <AlexDaniel> Xliff_: IIRC he was not using his native language for way too long

[05:45] <Xliff_> Still... what was it. I'm curious now.

[05:45] <AlexDaniel> :)

[05:46] <Xliff_> oOoh.

[05:46] <Xliff_> I see what you did thar, AlexDaniel 

[05:46] <AlexDaniel> what did I do? I think he'll answer himself if he wants to

[05:46] <lookatme> Is NativeCall support static link library ?

[05:50] *** statisfiable6 left
[05:52] <Xliff_> AlexDaniel: Hah! You can't play innocent, now.

[05:52] <Xliff_> lookatme: Um. I'm not sure.

[05:52] <Xliff_> https://gist.github.com/Xliff/daae42a5ca02e695ac8710e528fab297

[05:52] <Xliff_> m: https://gist.github.com/Xliff/daae42a5ca02e695ac8710e528fab297

[05:52] <camelia> rakudo-moar 7c8bbc8da: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Redeclaration of symbol 'transpose'␤at <tmp>:25␤------> 3    transpose:7⏏5 <X Y Z>,␤»

[05:53] <lookatme> seems like not :)

[05:53] <Xliff_> Hoo.

[05:54] <Xliff_> lookatme: Ouch. One solution (if the library is not that large) is to write a shared wrapper for each call.

[05:54] <Xliff_> Not ideal, but...

[05:54] <Xliff_> s/shared wrapper/shared lib with wrappers/

[05:55] <Xliff_> m: transpose(<X Y Z>).say

[05:55] <camelia> rakudo-moar 7c8bbc8da: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    transpose used at line 1␤␤»

[05:57] <Xliff_> m: https://gist.github.com/Xliff/daae42a5ca02e695ac8710e528fab297

[05:57] <camelia> rakudo-moar 7c8bbc8da: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in parenthesized expression; couldn't find final ')' (corresponding starter was at line 24)␤at <tmp>:29␤------> 3<BOL>7⏏5}␤»

[05:57] <Xliff_> GRRR... 

[05:57] <Xliff_> This is why I wanted to use the colon form to begin with!!!

[05:58] <Xliff_> (҂⌣̀_⌣́)

[05:58] <AlexDaniel> that's a nice smiley :)

[05:58] <Xliff_> I know.

[05:58] <Xliff_> http://japaneseemoticons.me/angry-emoticons/

[05:58] <Xliff_> My go to site for nice smileys. :)

[05:59] <Xliff_> I like this one, too

[05:59] <Xliff_> (ʘ言ʘ╬)

[05:59] <Xliff_> (ᗒᗣᗕ)՞

[05:59] <Xliff_> (｡☉︵ ಠ╬)

[06:00] <Xliff_> ୧༼ಠ益ಠ༽୨

[06:00] <Xliff_> I need to macro these.

[06:03] <Xliff_> m: https://gist.github.com/Xliff/daae42a5ca02e695ac8710e528fab297

[06:03] <camelia> rakudo-moar 7c8bbc8da: OUTPUT: «True␤True␤»

[06:03] <Xliff_> \o/

[06:03] <Xliff_> I'm surprised that's not already there.

[06:04] <AlexDaniel> you can also have these with compose key

[06:05] <Xliff_> AlexDaniel: Note, this fixes that warning you wrote that I pointed you too... 

[06:05] <Xliff_> (´つヮ⊂)

[06:05] <Xliff_> compose key?

[06:05] <Xliff_> Oh... Something like WinCompose?

[06:05] <Xliff_> I am running that already. It's faster to cut and paste.

[06:07] <Xliff_> AlexDaniel: So how would proposing this for inclusion in Array work?

[06:08] <AlexDaniel> Xliff_: create a rakudo issue where you explain the problem with the obvious approach, mark it with RFC label, submit a pull request, link these to each other

[06:08] <Xliff_> kk

[06:09] <Xliff_> Would converting this to nqp, help?

[06:09] <Xliff_> (groan)

[06:09] <AlexDaniel> I don't think so

[06:09] <Xliff_> kk

[06:11] <AlexDaniel> the only reason to have that written in nqp is for performance reasons, but I'd prefer to have that as a followup pull request (with measurements on how much faster it is than the p6 implementation)

[06:11] <AlexDaniel> and that's only needed if we agree to get that included, so leave that for now :)

[06:13] <AlexDaniel> FWIW I'm +1 on that one, but I'll also be +1 on any idea on how we can have (an alternative to) [ ] that does no crap like that

[06:13] <AlexDaniel> this issue is very unfortunate because we kinda want to have both

[06:14] <AlexDaniel> Xliff_: fwiw maybe it should check for Positional instead of Array

[06:15] *** cdg joined
[06:15] <AlexDaniel> .oO( or Iterable? not sure about this case )

[06:15] *** khw left
[06:17] <Xliff_> AlexDaniel: That can come up in the discussion.

[06:18] <Xliff_> I will have to get the PR ready, which means code, test cases, and possibly adjustments to documentation.

[06:18] <Xliff_> And I should include test case output and roast...

[06:20] *** cdg left
[06:21] *** rahulruns joined
[06:26] *** rahulruns left
[06:31] <AlexDaniel> Xliff_: well you can start with the RFC ticket

[06:31] <AlexDaniel> the PR is just something we'll be able to use once later

[06:32] <AlexDaniel> s/once//

[06:32] <AlexDaniel> but yes, I don't expect it to be used multiple times :D

[06:32] *** darutoko joined
[06:34] *** troys_ is now known as troys

[06:35] *** dj_goku joined
[06:37] <Geth> ¦ doc: 61ea388637 | (JJ Merelo)++ | doc/Type/Any.pod6

[06:37] <Geth> ¦ doc: Changed "treats" to "coerces"

[06:37] <Geth> ¦ doc: 

[06:37] <Geth> ¦ doc: This addresses @zoffixznet first concern in #1731

[06:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/61ea388637

[06:37] <synopsebot> Link: https://doc.perl6.org/type/Any

[06:37] *** ChoHag joined
[06:40] *** troys left
[06:46] <Geth> ¦ doc: 46302f3109 | (JJ Merelo)++ | doc/Type/Any.pod6

[06:46] <Geth> ¦ doc: Correcting the documentation

[06:46] <Geth> ¦ doc: 

[06:46] <Geth> ¦ doc: Now that I've read item 2 of @zoffixznet's list, I see that what I've

[06:46] <Geth> ¦ doc: said for the first item is wrong. Hope it's OK now. Refs #1731

[06:46] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/46302f3109

[06:46] <Geth> ¦ doc: ab045aeab6 | (JJ Merelo)++ | doc/Type/Any.pod6

[06:46] <Geth> ¦ doc: Addresses second problem

[06:46] <Geth> ¦ doc: 

[06:46] <Geth> ¦ doc: There was a single instance. Refs #1731

[06:46] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ab045aeab6

[06:55] *** chakli joined
[06:58] *** wamba joined
[06:59] *** dorothyw is now known as johnnymacs

[07:01] *** curan joined
[07:02] <chakli> Hello

[07:04] <chakli> i know i need not create new User Agent objects but this snipped seems to give errors after 100 or so tries

[07:04] <chakli> use HTTP::UserAgent;for 1..300 { say "try >> $_"; my $res = HTTP::UserAgent.new.get("google.com"); say $res.status-line; }

[07:06] <Xliff_> That's probably because google is throttling (or outright blocking you) due to usage limits.

[07:06] <Xliff_> See if the problem goes away (or is mitigated) after introducing delays.

[07:08] <moritz> or try it with a different domain that isn't known to block automated requests so agressively

[07:16] *** cdg joined
[07:19] *** johnnymacs is now known as dorothyw

[07:23] <chakli> I am trying it with delay, but i am not sure if it is google blocking me. 

[07:23] <chakli> This is the error i get->  Too few positionals passed; expected 2 arguments but got 1

[07:23] <chakli>   in method get-proxy

[07:25] <chakli> It points to like 360 in a file, which is

[07:25] <chakli> 366 has $.http-proxy;

[07:25] <chakli> 367 # want the request to possibly match scheme, no_proxy etc

[07:25] <chakli> 368 method get-proxy(HTTP::Request $request) {

[07:25] <chakli> 369     $!http-proxy //= do if self.is-cgi {

[07:26] *** domidumont left
[07:28] *** cdg left
[07:28] <chakli> i tried a couple of times now, but its always happening on the 102nd try

[07:29] <chakli> @moritz any domain you can suggest?

[07:32] <ecocode> good morning Perl6 !

[07:34] <llfourn> chakli: can you post the full error on a github gist or something?

[07:39] *** domidumont joined
[07:39] <moritz> chakli: perl6.org for example

[07:39] <chakli> this is the full log https://gist.github.com/anonymous/5a20d7a39efc91dc6dd7d26f6aa565bf

[07:42] <llfourn> chakli: thanks

[07:44] <llfourn> I wonder why there's two get-proxy's in that callstack :S

[07:45] <llfourn> it's probably google blocking you after around 100 requests but still that error is weird

[07:47] <chakli> got the same error with perl6.org, didnt have any delays this time

[07:48] *** cdg joined
[07:48] <chakli> perl6 version is 2017.12 Perl 6.c. os is ubuntu 17.10

[07:50] *** parv joined
[07:50] <chakli> gave a 30 sec delay between requests for google.com and the same error happens

[07:52] <llfourn> chakli: the error itself is very weird and could be indicative of some deeper issue with rakudo. If you look at: https://github.com/sergot/http-useragent/blob/master/lib/HTTP/UserAgent.pm6 you'll see get-proxy is only called in one place

[07:52] <llfourn> and it is called correctly

[07:52] <llfourn> and it is the one matching your trace

[07:52] *** cdg left
[07:53] <llfourn> I'm not sure but I'm afraid it could be some low level moarvm optimization that kicks in after a certain amount of calls

[07:53] <llfourn> causing the runtime to get confused and think it's not being called with an argument

[07:55] <chakli> the call stack expects 2 arguments, but the function has only one $request argument

[07:55] *** rindolf joined
[07:55] <llfourn> it's a method call so the invocant is always the first argument

[07:55] <chakli> i am not sure if there is an implicit argument like "this" in c++ 

[07:55] <chakli> ok

[07:56] <llfourn> m: class F { method a($a) { say "win" } }; F.new.a()

[07:56] <camelia> rakudo-moar 7c8bbc8da: OUTPUT: «Too few positionals passed; expected 2 arguments but got 1␤  in method a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[07:56] <llfourn> m: class F { method a($a) { say "win" } }; F.new.a("yay")

[07:56] <camelia> rakudo-moar 7c8bbc8da: OUTPUT: «win␤»

[07:57] <llfourn> it's worth reporting https://github.com/rakudo/rakudo/issues I'd say with a link to this coversation maybe

[07:58] <chakli> ok, i can create an issue there. how do i link this conversation?

[08:01] *** Guest22031 is now known as teatime

[08:01] <TEttinger> there's logs in the channel topic

[08:01] <TEttinger> irclog: http://irc.perl6.org or http://colabti.org/irclogger/irclogger_logs/perl6

[08:12] <chakli> Thanks, created one at https://github.com/rakudo/rakudo/issues/1442

[08:14] *** Ven`` joined
[08:16] *** dakkar joined
[08:20] *** Alikzus left
[08:20] <ecocode> is there any documentation or book describing the easiest/safest way to do CRUD in Perl6 ?

[08:21] <moritz> ecocode: you mean through a web interface?

[08:22] <moritz> https://leanpub.com/bailador is a work in progress; no idea if it covers CRUD yet

[08:22] <ecocode> *any* interface :)

[08:22] <ecocode> I don't need RAD.  just the data interface

[08:22] <El_Che> ecocode: I am planning to use cro to wtite a small crud mini service (+dbish for the db)

[08:24] <ecocode> google gave me this https://books.google.be/books?id=g4otDwAAQBAJ&pg=PA63&lpg=PA63&dq=perl6+database+application&source=bl&ots=__I7hb8RbV&sig=-WEL3jkvmB6W2nO-MrRJFmCJ5uE&hl=en&sa=X&ved=0ahUKEwjYqojuz_LYAhVmLcAKHfI-AiEQ6AEISDAG#v=onepage&q=perl6%20database%20application&f=false

[08:24] <ecocode> but that seems pretty low level

[08:25] <ecocode> I'm not looking for speed but for easy data access

[08:26] *** lookatme left
[08:27] <El_Che> ecocode: if you add db access to this you'll get a nice modern crud: http://cro.services/

[08:27] <ecocode> An ORM would be awesome, but the project I'm considering can do without that

[08:27] <ecocode> El_Che: yep, cro looks nice indeed :)

[08:27] *** lookatme joined
[08:28] <ecocode> I already selected it for the UI part

[08:28] <ecocode> Now I need the data part :)

[08:31] <El_Che> dbish

[08:31] <El_Che> I don't think there is much alternative

[08:31] <El_Che> if any

[08:32] *** zakharyas joined
[08:32] <El_Che> I wrote it in my backlog for a service I need, scope is limited enough to not miss any modules

[08:33] <moritz> there's https://github.com/tony-o/perl6-db-orm-quicky but I have no idea how good it is

[08:35] <El_Che> the quickly is a weird part of the name that does not inspire confidence :)

[08:35] <El_Che> (no disrespect intended for the author)

[08:36] *** parv left
[08:36] *** dh7320 joined
[08:49] *** cdg joined
[08:53] <El_Che> ecocode: got inspired yesterday?

[08:53] *** cdg left
[08:54] <ecocode> :)

[08:54] *** scimon joined
[08:55] <ecocode> I have this project I was considering to code with Catalyst / DBIx::Class.  But I figured I can try Perl6 on it

[08:57] <ecocode> I need a new inventory program, but there is no hurry.. so eventually I have some time to learn Perl6 a bit

[08:58] *** dh7320 left
[08:58] <scimon> cono: saw your questions yesterday. I don't know if Timer::Breakable would be any use to you?

[08:58] *** wamba left
[09:00] <lizmat> ecocode  o/

[09:02] <ecocode> I touched a little Perl6 some time ago, but basically did some test by writing Perl5 code in Perl6.  I most certainly need some 'switch' to effectively use Perl6.  Where should I start?

[09:02] <ecocode> good morning liz :)

[09:03] <masak> ecocode: have you found https://docs.perl6.org/language/5to6-nutshell ?

[09:04] <Xliff_> https://github.com/tony-o/perl6-db-orm-quicky -- looks good, but I'm not that thrilled about needing to create a data row to create a table.

[09:04] <Xliff_> And this leaves out advanced creation features like indexes and row parameters (auto-increment, not null, etc)

[09:05] <scimon> There are a few good books now too. 

[09:05] <Xliff_> Still looks good if you really don't want the SQL.

[09:06] <Xliff_> ecocode: Do you really need the CREATE part? If not, then DB::ORM::Quickly might work for you.

[09:06] <scimon> Never been a fan of ORM's myself. Though... letting devs just write SQL queries willy nilly does tend to end badly too. 

[09:07] <Xliff_> scimon: True enough. At least for "careless" values of "dev"

[09:07] <ecocode> Xliff_: The first part is the data entry.. so yes, I need CREATE

[09:07] <Xliff_> I mean, I've hit that point several times, but testing is key.

[09:07] <scimon> The problem is the temptation (oft spurred by management and time constraints) to do the quck rather than correct is always there.

[09:08] <scimon> (Hand up who's seen SQL queries in Mason templates) o/

[09:08] <ecocode> masak: Last time I tried Perl6 I started by converting Perl5 into Perl6.  Basically I need a _fresh_ look into Perl6 to really use the features of P6

[09:09] <Xliff_> scimon: *shivers*

[09:09] <Geth> ¦ doc/master: 5 commits pushed by (Luca Ferrari)++

[09:09] <Geth> ¦ doc/master: 3687640481 | Document (shortly) Any.cache.

[09:09] <Geth> ¦ doc/master: 2bc94a7ab4 | Signature update for Any.list.

[09:09] <Geth> ¦ doc/master: 9bf044a634 | Document Any.pairs a little more.

[09:09] <Geth> ¦ doc/master: 36d8b4a8aa | Document a  little more Any.antipairs.

[09:09] <Geth> ¦ doc/master: 112ec537b8 | Document a little more Any.kv.

[09:09] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/ab045aeab6...112ec537b8

[09:09] <masak> ecocode: yes, that makes sense

[09:09] <Xliff_> I hate non-display code in templates!

[09:09] <daemon> scimon, I have seen it directly written into html templates before :P

[09:09] <daemon> that site did not stay online long for some reason .. :)

[09:09] <masak> ecocode: I still think you will find much in the language documentation

[09:09] <masak> ecocode: I basically learned Perl 6 through the synopses, but that's a long time ago :)

[09:09] *** lookatme left
[09:09] <Xliff_> ecocode: If you have the tables created already, I think that will work.

[09:10] <Xliff_> My concerns don't apply to you, then.

[09:10] <ecocode> masak: yep, tried the synopsis too... but I'd prefer something more digestive if available

[09:10] <scimon> ecocode: the docs do help. Think Perl 6 and Perl6 Primer are good starters. Though if you're already doing perl5 the start may be a bit simple.

[09:11] <scimon> Still both cover perl6 methods well. Using Perl 6 is a neat book as it covers a bunch of problems (compute fibonacci etc) gradualy getting more complex.

[09:11] <scimon> And Perl6 Deep dive really gets into it.

[09:12] *** BuildTheRobots joined
[09:12] <scimon> (By Perl6 Primer is meant Perl6 Fundementals) 

[09:12] <ecocode> Well, I'll dig in the books Wendy and Liz brought to Brussels yesterday.  Perhaps I'll find hapiness there

[09:12] <scimon> (I went on a bit of a book buying spree last year)

[09:12] <ecocode> Which books best desribes Grammars ?

[09:13] <masak> moritz++' book, I'm sure

[09:13] <masak> https://smile.amazon.com/Parsing-Perl-Regexes-Grammars-Recursive-ebook/dp/B0785L6WR6

[09:13] <scimon> Oh yeah. Moritz wrote a whole book on them.

[09:13] <moritz> the reviews are very positive so far :-)

[09:14] <scimon> I've read it once. I figure a couple more times and I might fully grasp them.

[09:14] <moritz> scimon: if you liked it, please rate it on amazon :-)

[09:14] <scimon> I thought I had... I'll got check.

[09:15] <scimon> Side note. It did lead me to this fun stuff yesterday. $encoded.comb(/ .*?(.) <?{ $/[0] ~~ any( (63..92).map( *.chr ) ); }> /)

[09:16] <scimon> Yeah I had already.

[09:19] <moritz> thanks!

[09:19] *** cdg joined
[09:21] <scimon> S'good book. Keep it up :)

[09:24] *** cdg left
[09:26] <ecocode> I'll start with an easy book and then I'll get into the grammars :)

[09:27] <stmuk> AlexDaniel++ 

[09:28] *** Ven`` left
[09:28] <moritz> ecocode: https://perl6book.com/ has an overview of Perl 6 books

[09:31] *** _Kaiepi left
[09:31] *** statisfiable6 joined
[09:31] *** ChanServ sets mode: +v statisfiable6

[09:31] <ecocode> Another question: I'm the maintainer of a web-parsing module written in Perl5: Finance::Quote.  It makes extensive use of HTML::TreeBuilder and HTML::TableExtract.  Should I already consider to write it in Perl6 with grammars or should I wait for some kind of HTML parser to be written in P6 ?

[09:31] *** _Kaiepi joined
[09:31] <scimon> There is one... one sec.

[09:32] <ecocode> moritz: yep, liz sent me the link before, but I needed some inside view which one to start with.. thanks scimon for that info :)

[09:33] <scimon> ecocode: https://github.com/tony-o/perl6-html-parser-xml It does give you an XML document representation of the HTML file but it does the job.

[09:34] <scimon> I have been thinking about picking up WWW::Mechanize and thought about writing an HTML Grammar... but HTML doesn't really lend itself to Grammars because bad HTML is considered OK and XHTML never caught on.

[09:34] <scimon> Because humans. ;)

[09:35] <ecocode> thx for the link

[09:35] <jast> well there *is* a distinction between tag soup (more or less hopelessly broken HTML) and standards compliant HTML

[09:36] <jast> I'm sure there are a few websites that adhere to the standards

[09:37] *** Ven`` joined
[09:38] <ecocode> :)

[09:39] <jast> personally I'd consider using grammars to parse the individual tags, but not for building the tree representation of elements

[09:40] <scimon> jast++

[09:40] <scimon> indeed.

[09:40] <Geth> ¦ doc/master: 4 commits pushed by (Luca Ferrari)++

[09:40] <Geth> ¦ doc/master: 06cb1faffb | Any.List uses Any.list.

[09:40] <Geth> ¦ doc/master: b0b7dccc68 | Fix typo in Any.roll.

[09:40] <Geth> ¦ doc/master: d9c9646858 | Remove Any.reduce.

[09:40] <Geth> ¦ doc/master: 598500f614 | Remove Any.produce.

[09:40] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/112ec537b8...598500f614

[09:41] <Xliff_> ecocode: For parsing HTML code, I've always done "use Mojo::DOM<Perl5>"

[09:41] <Juerd> Much of the "bad html" that you will encounter is actually compliant: many closing tags are optional. The html, head, and body tags are also optional.

[09:41] <Xliff_> Which really doesn't answer your question for a pure Perl6 implementation.

[09:41] <scimon> Meanwhile I'm looking at the work codebase and trying to understand bits. Hence finding and rewriting Algorithm::GooglePolylineEncoding which was interesting.

[09:41] <Xliff_> But it really simplifies things, even over something like HTML::Parser::XML

[09:41] <jast> I like Mojo::DOM in Perl 5 land

[09:42] <buggable> New CPAN upload: P5hex-0.0.2.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5hex-0.0.2.tar.gz

[09:42] <buggable> New CPAN upload: P5oct-0.0.2.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5oct-0.0.2.tar.gz

[09:42] <buggable> New CPAN upload: Algorithm-GooglePolylineEncoding-0.0.2.tar.gz by SCIMON https://cpan.metacpan.org/authors/id/S/SC/SCIMON/Perl6/Algorithm-GooglePolylineEncoding-0.0.2.tar.gz

[09:42] <Xliff_> It works just fine in Perl6 using Inline::Perl5

[09:42] <scimon> There's some REALLY awful HTML out there (I knew a site that had 200 lines between the </head> and <body> tags with links and css in them. 

[09:42] <scimon> There's some REALLY awful HTML out there (I knew a site that had 200 lines between the </head> and <body> tags with links and css in them.)

[09:42] <scimon> *shudder*

[09:42] <scimon> (Oooops.)

[09:42] <Xliff_> scimon++

[09:42] <lizmat> *shudder*  :-)

[09:43] <Xliff_> And the sad thing is that most sites are starting to look like that.

[09:43] <Xliff_> Please don't start me on WordPress themes.

[09:43] <Xliff_> (and folks say that's the future!)

[09:44] <Xliff_> ／(x~x)＼

[09:44] <ecocode> Xliff_: Well I'd prefer a pure P6 solution, but I might consider some kind of temporary bridge using Inline::Perl5 in a first stage

[09:44] <Xliff_> ecocode: Someone has mentioned porting Mojolicious to Perl6. I hope that happens. I'm even willing to help.

[09:45] <scimon> Xliff_: I'm pretty sure they've been saying it's the future for 10 years.

[09:45] *** zakharyas left
[09:46] <jast> Mojolicious is one of the least terrible web frameworks I've seen (that's a compliment in case you were wondering :))

[09:48] * ecocode is still using Catalyst for the stuff he runs @work

[09:48] *** zakharyas joined
[09:48] * ecocode with heavy use of DBIx::Class

[09:48] *** wamba joined
[09:49] <jast> I don't like ORMs :)

[09:50] * moritz only somewhat liked DBIx::Class, but is pretty happy with sqlalchemy

[09:50] <ecocode> after listening to lizmat and El_Che yesterday evening I figured I should definitely study micro services.  So that kept me awake till somewhere around 4am :)

[09:51] <moritz> fwiw I found http://www.dwmkerr.com/the-death-of-microservice-madness-in-2018/ to be a pretty well balanced articles on mircoservices, when to use them, and when not

[09:52] <buggable> New CPAN upload: Sparrowform-0.0.12.tar.gz by MELEZHIK https://cpan.metacpan.org/authors/id/M/ME/MELEZHIK/Perl6/Sparrowform-0.0.12.tar.gz

[09:54] *** cdg joined
[09:59] *** cdg left
[10:02] *** Sgeo left
[10:03] *** Sgeo joined
[10:16] *** TEttinger left
[10:20] *** astj left
[10:21] *** astj joined
[10:25] *** erdic joined
[10:25] *** astj left
[10:34] *** rindolf left
[10:34] *** markong joined
[10:39] *** astj joined
[10:40] *** tyil left
[10:42] *** benchable6 left
[10:42] *** bisectable6 left
[10:42] *** bisectable6 joined
[10:42] *** coverable6 left
[10:45] *** releasable6 left
[10:45] *** player joined
[10:45] *** releasable6 joined
[10:46] <player> Hi. Is there way to delete perl6 version using rakudobrew?

[10:46] <player> I didn't find any mention of it in docs.

[10:49] *** tobs joined
[10:49] <tadzik> rakudobrew nuke <version> should work

[10:49] <tadzik> and you're right, it's not in the docs

[10:49] *** tyil joined
[10:49] <tadzik> oh my, I have a lot of PRs :)

[10:51] *** rindolf joined
[10:55] *** cdg joined
[10:56] *** benchable6 joined
[10:56] *** ChanServ sets mode: +v benchable6

[10:57] *** Ven`` left
[11:00] *** cdg left
[11:02] *** coverable6 joined
[11:02] *** ChanServ sets mode: +v coverable6

[11:03] *** astj left
[11:04] *** jeromelanteri joined
[11:17] *** zakharyas left
[11:17] *** zakharyas joined
[11:18] <El_Che> ecocode: about the C in CRUD. I think that "creating" in the question someone asked to you was about creating tables and not creating rows. So any simple sql framework would be enough 

[11:19] *** dh7320 joined
[11:25] *** Alikzus joined
[11:34] <ecocode> El_Che: yep

[11:37] *** eliasr joined
[11:39] *** konsolebox left
[11:39] *** konsolebox joined
[11:48] *** konsolebox left
[11:50] *** zakharyas left
[11:50] *** konsolebox joined
[11:53] <cono> Xliff_: this is the final piece of code I have: https://glot.io/snippets/exotklz7vs

[11:53] <cono> scimon: thanks, will look into Timer::Breakable

[11:54] *** zakharyas joined
[11:54] <jnthn> cono: That looks pretty nice :)

[11:54] <cono> jnthn: well, I just groomed what you have typed :D

[11:55] <cono> this is actually good patter to be included somewhere

[11:55] <cono> probably in IO::Async

[11:55] <cono> io::socket::async I mean

[11:56] *** cdg joined
[11:57] <lizmat> perhaps more general, on Supply ?

[11:58] *** cdg_ joined
[11:58] *** itaipu left
[11:58] *** itaipu joined
[12:00] <cono> yeah, could be

[12:00] <cono> Supply.timeable(4) --> Supply :)

[12:00] *** zakharyas left
[12:01] *** cdg left
[12:02] <jnthn> I think first of all put it in a module :)

[12:02] <buggable> New CPAN upload: P5chomp-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5chomp-0.0.1.tar.gz

[12:02] *** lucasb joined
[12:02] *** cdg_ left
[12:03] *** zakharyas joined
[12:03] <cono> got it :)

[12:05] <lucasb> o/

[12:05] <jnthn> lunch &

[12:05] * lucasb is waiting on a moarvm package :)

[12:05] *** konsolebox left
[12:06] *** konsolebox joined
[12:08] *** astj joined
[12:09] <player> tadzik, I'm just curious. Don't you consider 1 alias something like "uninstall" to "nuke" 2 rewriting rakudobrew in Perl 6?

[12:11] *** cdg joined
[12:12] *** astj left
[12:13] *** konsolebox left
[12:15] *** konsolebox joined
[12:15] *** cdg left
[12:22] <buggable> New CPAN upload: P5chop-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5chop-0.0.1.tar.gz

[12:30] *** konsolebox left
[12:31] *** konsolebox joined
[12:31] <jkramer> is there a good module for reading images and analyzing them (pixelwise)? I only find stuff for writing/modifying images

[12:32] *** zakharyas left
[12:36] *** reportable6 left
[12:37] *** reportable6 joined
[12:37] *** obra joined
[12:38] <tadzik> player: never considered the former. The latter has a bit of a bootstraping problem :)

[12:39] *** Zoffix joined
[12:40] <Zoffix> Xliff_: it's Russian. Though, I lived in English speaking countries for 60% of my life

[12:42] <Zoffix> Xliff_: what's prescient in my article? I don't see any predictions in it...

[12:48] *** konsolebox left
[12:48] *** konsolebox joined
[12:59] *** Zoffix left
[13:03] *** dh7320 left
[13:12] <buggable> New CPAN upload: P5chr-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5chr-0.0.1.tar.gz

[13:12] <buggable> New CPAN upload: P5ord-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5ord-0.0.1.tar.gz

[13:15] <player> Is there someting like perltidy for Perl 6?

[13:18] <lucasb> hmm, one module for each P5 function? Isn't it too much granular?

[13:18] <lizmat> player: no, not yet afaik, although I think DrForr has been working on something in that direction

[13:19] <lizmat> lucasb: perhaps, but I'd like to have each function its own issues queue

[13:19] <lizmat> and there will be a P5function module that will give you all of them in one go

[13:19] <Juerd> Having installed a nodejs application with approximately 1300 dependencies yesterday, I'd say: yes, one module per function is too granular.

[13:20] *** Ven`` joined
[13:20] <masak> the JavaScript people are still reeling with joy over finally having a package manager at all ;)

[13:20] <lizmat> Juerd: fortunately there aren't 1300 builtins in Perl 5 that have different semantics in Perl 6

[13:28] <jast> I like how in nodejs, each dependency has its own dependencies in a subtree

[13:28] <jast> so you can have several copies of the same dependency in your dependency tree

[13:30] <moritz> I hope they manage to change multiple identical dependencies?

[13:30] <moritz> s/change/join/

[13:30] <jast> there may be some kind of hack there to deduplicate, I'm not sure

[13:30] * moritz not thinking properly

[13:31] <jast> but generally the dependencies of each dependency are in a physical subdir

[13:31] <masak> I believe the situation used to be worse than it is now

[13:31] *** Zoffix joined
[13:31] <masak> but sometimes you can't join dependencies, because it's two versions of the same thing

[13:32] <jast> sure, and you wouldn't want to randomly switch to a newer version for your average npm package

[13:32] <Zoffix> lizmat: BTW, 2016-Zoffix implemented Perl 5's `quotemeta` in Perl 6. It's an unlisted module. In case you wanted to steal code: https://github.com/zoffixznet/perl6-String-Quotemeta

[13:32] <lizmat> Zoffix++  will do

[13:33] <jast> the community around nodejs seems to delight in taking 'move fast and break things' to its extremes

[13:33] <jast> with some notable exceptions, I'm sure, but still :)

[13:46] *** zakharyas joined
[13:47] *** Zoffix left
[13:48] *** curan left
[13:52] *** cdg joined
[13:52] <buggable> New CPAN upload: P5ord-0.0.2.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5ord-0.0.2.tar.gz

[13:52] <buggable> New CPAN upload: P5chr-0.0.2.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5chr-0.0.2.tar.gz

[13:53] <DrForr> .tell jnthn 'static $filename;' ignores encoding, at least for UTF-8 HTML files. I'm using "content 'text/html', slurp $filename;" as a workaround.

[13:53] <yoleaux> DrForr: I'll pass your message to jnthn.

[13:54] <DrForr> .tell jnthn (at least for Cro)

[13:54] <yoleaux> DrForr: I'll pass your message to jnthn.

[13:55] *** wamba left
[13:56] *** cdg left
[13:57] *** itaipu left
[13:59] *** cdg joined
[13:59] *** wamba joined
[14:01] <scimon> I don't see an issue with the granularity of the modules lizmat is doing (and am impressive rate of knots) because they are intended as stopgap measures.

[14:02] <masak> lizmat++ # doing impressive work in general

[14:03] *** comborico1611 joined
[14:04] <DrForr> lizmat++ # in general, work or not :)

[14:04] <masak> :)

[14:04] *** traxex left
[14:05] <mst> I don't know about anybody else but I don't really feel that it's appropriate for the rakudo star release manager to be actively trying to piss off the entire perl5 community: https://github.com/rakudup/rakudup.github.io

[14:05] <mst> we've had enough childish drama from everybody over the last week or so already

[14:05] <mst> and I'm sure we'd all prefer to get back to hacking on our perl(s) of choice

[14:06] *** comborico1611 left
[14:06] *** comborico1611 joined
[14:07] *** zakharyas left
[14:08] *** comborico1611 left
[14:08] <ilmari> mst: I don't see that as targeting the perl5 community, just snarking at anti-perl6 people (between which there is a certain overlap, to be sure)

[14:08] *** comborico1611 joined
[14:08] <masak> I wasn't aware of that repository, but fwiw I agree with mst

[14:08] <masak> it's unnecessary and immature to actively add fuel to the fire

[14:10] *** comborico1611 left
[14:10] <mst> ilmari: specifically "Prepare to be triggered grumpy old sysadmin snowflakes" is deeply unconstructive, especially at the moment

[14:10] *** zakharyas joined
[14:10] *** comborico1611 joined
[14:11] <mst> also I can't say I'm fond of a pro-perl6 site using alt-right-style rhetoric

[14:11] <ilmari> mm, point

[14:11] <jast> seems to me like it's making fun of that rhetoric. I mean, comic sans isn't exactly a subtle choice...

[14:12] <lizmat> fwiw, that's my interpretation as well

[14:12] * ilmari doesn't have comic sans

[14:13] <jast> aww, then you're missing at least half of the genuine internet experience

[14:14] <ilmari> ooh, comic neue is in debian now

[14:14] *** astj joined
[14:14] <jast> huh, I didn't know that. looks like a 50% more serious comic sans.

[14:14] <geekosaur> I'd like to point out the existence of Poe's Law...

[14:15] <ilmari> the debian package even configures it as a replacement for Comic Sans MS

[14:15] <ilmari> https://salsa.debian.org/fonts-team/fonts-comic-neue/blob/master/debian/30-comic-sans.conf

[14:15] <mst> I'd like to point out that when the author is a thatcherite and brexit supporter who liked clinton conspiracy theories, I'm less likely to assume 'making fun'

[14:16] <DrForr> And it's written in Perl6, not INTERCAL, so the tagline doesn't make sense :)

[14:16] <jast> I don't know the author, I'm judging the website on its own

[14:16] <lizmat> yes, and I think we all should do that

[14:16] <jast> and I certainly don't intend to turn this into a politics thing

[14:17] <lizmat> many of the people here aren't even old enough to know what a thatcherite is

[14:17] <jast> I do see that this is not equally funny to everyone, of course

[14:17] <mst> the author is stmuk, aka itz on irc.perl.org, who does the rakudo star releases, hence my feeling this is a trifle unfortunate

[14:18] *** KDr2 joined
[14:18] <lizmat> https://github.com/rakudup/rakudup.github.io/pull/1/files

[14:18] *** astj left
[14:19] <comborico1611> Everything is political.

[14:20] *** konsolebox left
[14:20] <mst> I don't normally consider people's politics relevant to technical matters, but in terms of the application of poe's law to what's clearly intentionally nasty trolling, it seems relevant in this specific case; I have no issue with people having whatever politics they prefer but I do prefer them to stay out of technical matters

[14:20] <jast> I see your point, at the same time I think everyone should be entitled to having a public opinion about something they're also connected to in a more official capacity, as long as it's not officially advertised / clearly affiliated / sponsored

[14:22] *** konsolebox joined
[14:22] <jast> not that I have any power to decide anything. I just happen to be here right now. :)

[14:22] <mst> I believe everyone should be entitled to have a public opinion, but at the same time I'm still entitled to a public opinion that this is inappropriate divisive bullcrap that will only achieve prolonging and exacerbating the recent futile drama

[14:22] <jast> oh, definitely

[14:23] <mst> I think masak's "unnecessary and immature" is probably the best summary

[14:23] <DrForr> jnthn++ # Sorting out React toolchain so we don't have to.

[14:28] <comborico1611> Has anyone ever not been able to get the capcha thing to work?

[14:28] * jnthn would appreciate everyone taking some extra care over their words and actions now and for the coming weeks, so as not to inflame the mess that has already been made

[14:29] <comborico1611> It is really crazy how long i was willing to click on squares that contain street signs.

[14:29] *** Zoffix joined
[14:29] <scimon> How else are the cars going to learn?

[14:30] <comborico1611> Yeah, there were cars, too.

[14:30] *** Zoffix left
[14:30] <mst> a wild zoffix ... yoyos

[14:31] <lizmat> no: Zoffix has decided to only be on the channel if there is something sensible to say

[14:31] <lizmat> otherwise he's being very productive, fwiw

[14:31] <lizmat> mst: so that was not funny either  :-(

[14:32] <mst> what. I was just commenting on him joining and quitting

[14:32] *** Zoffix joined
[14:32] <lizmat> "wild" ?

[14:32] <mst> that's a pokemon reference

[14:32] <mst> 'a wild pikachu appears!'

[14:32] <jast> I was thinking about using proof-of-work instead of captchas, and making it mildly inconvenient to automate

[14:32] <Zoffix> Heh, no. I was going to suggest comborico1611 to install an IRC client and not have to deal with captcha on our webchat, but /version told me they already were using AndChat :)

[14:33] <scimon> I got the reference. 

[14:33] <Zoffix> I always thought it was a nethack reference.

[14:33] <mst> it may be that the pokemon thing was a nethack reference

[14:33] <scimon> One probably spawned the other.

[14:34] <mst> scimon: "a wild nethack reference appears!" :D

[14:34] *** itaipu joined
[14:34] <scimon> The meta. It's smothering me.

[14:34] <mst> this is #perl6 - meta isn't just a word, it's a way of life

[14:35] <jast> a weak reference appears! ... and gets garbage collected

[14:35] <mst> jast++

[14:35] <DrForr> -- more --

[14:35] <jast> scimon: we're going to need more meta to fix that

[14:35] <mst> surely it should be

[14:35] <mst> -- moar --

[14:36] <DrForr> Verily.

[14:36] <scimon> Going to need a bigger boat. And possibly some cowbell.

[14:36] <scimon> Anyway....

[14:38] <jast> anyway, my favourite reference is &argc

[14:39] *** Ven`` left
[14:39] *** Ven`` joined
[14:43] <comborico1611> Finally went audio to solve crapcha.

[14:45] <comborico1611> Garble garble.  Even the audio is terrible.  I forgot the word, but it was a weird word

[14:49] *** ckraniak joined
[14:50] *** lucasb left
[14:51] <timotimo> fwiw, i was also not happy with the rakudop 'site

[14:51] <tadzik> I think one of those days captchas will be considered a discriminatory action against robots, and in the name of equal rights we'll abolish them completely

[14:51] <tadzik> but right now they just discriminate humans :|

[14:52] *** Guest55775 left
[14:53] <geekosaur> and, a bit too often, humans without a11y concerns

[14:53] <tadzik> and yes, I think proof-of-work is a sensible alternative

[14:53] <tadzik> perhaps it seems sensible because I never saw it in practice

[14:54] <timotimo> i do believe cloudflare makes ddos impact lesser by requiring proof-of-work on sites that get too much traffic at that moment?

[14:54] *** ckraniak left
[14:55] <DrForr> And pisses off everyone using Tor because we routinely trip captcha.

[14:55] <timotimo> heh.

[14:57] <tadzik> oooh, so *that's* what it's doing :)

[14:57] *** Zoffix left
[14:57] <tadzik> that's sensible

[14:58] <jast> I was thinking about writing a tiny JS base for making proof-of-work barriers

[14:58] <timotimo> i haven't actually verified, of course

[14:59] <timotimo> jast: integrate it with some cryptocurrency so you also get money out of it once every five years

[14:59] <jast> the approach I had in mind is not exactly compatible with slapping a blockchain on it :)

[14:59] *** Ven`` left
[15:00] <jast> btw it occurred to me you could even combine the proof-of-work with a simple captcha: generate a captcha together with the POW challenge so that the POW is parameterized by the captcha solution

[15:00] <timotimo> right, you'd want to have a blockchain client on the server then, too, so it could seed what the client needs to work on

[15:00] <jast> then you could go with a really straightforward captcha and "harden" it with a POW cycle

[15:01] <jast> now I'm afraid someone will *actually* spin up a captcha service that is used to mine coins :)

[15:01] <timotimo> well, there's already coin miner scripts to easily drop in your 'site

[15:01] <jast> though that doesn't really work, you'd have to verify all of the results from the client to *know* there's no solution in there

[15:02] <jast> and you can't exactly give them a full block to solve, that would take weeks

[15:02] <timotimo> that's why i say "once every five years" ;)

[15:02] <jast> yeah, but that would turn the whole exercise into "proof of nothing" (except every five years)

[15:03] <jast> not only does it not earn any money most of the time, it also serves no other purpose most of the time

[15:03] <timotimo> since mining a block means getting a hash that's below a certain number, you can just have the client return the lowest number it was able to get

[15:04] <jast> but then you still have to check whether that's *really* the lowest number in the range you assigned them

[15:04] *** domidumont left
[15:04] <timotimo> just have a minimum requirement that's solvable in a sensible timeframe

[15:05] <jast> you do need to give them some kind of target

[15:05] <jast> yeah

[15:05] <jast> side note, crypto and hashing implemented in JS isn't as terribly slow as I thought it would be

[15:06] <jast> it's plenty of slow, of course, but not "watch the bytes come in" slow

[15:06] <DrForr> Look up partial hash collisions. They're a reasonable compromise.

[15:07] <jast> POW usually uses a fixed prefix to target, which comes down to the same thing

[15:07] <jast> "this many leading zero bits"

[15:07] <DrForr> "Here's a sample bit of text. Match the first 5 LSBs of its MD5." or simiar.

[15:07] <DrForr> jast: Yeah.

[15:08] *** domidumont joined
[15:09] <timotimo> jast: just take a wasm or asm.js implementation, that should be reasonably fast

[15:12] <jast> wow, everyone supports wasm now

[15:13] <jast> (except for android's stock browser and opera mini...)

[15:13] <El_Che> oh wow, we're fighting again?

[15:13] *** itaipu left
[15:13] <jast> a day without fighting is a day wasted

[15:13] <El_Che> if perl5 and 6 would my children I would take away their iPads

[15:13] <El_Che> maybe an idea for larry

[15:14] <jast> if I had children they wouldn't be getting ipads in the first place

[15:14] *** itaipu joined
[15:14] <El_Che> jast: come back when you do :)

[15:15] <timotimo> jast: fwiw, i'd suggest using a hash that can't be easily sped up by using the GPU, so that a potential DDoSer can't just implement your hash 1000x faster than any legit client would and overload your server anyway

[15:15] <moritz> I have kids, and they don't have ipads :-)

[15:15] <timotimo> also: people will be happy to see you're draining their smart phone batteries by 10% just to visit your site :)

[15:16] <jast> it's not that bad. I'd target maybe five minutes of execution time on an average smart phone. ;)

[15:17] <jast> El_Che: so, never? thanks, I'll pass :}

[15:17] <El_Che> jast: good plan! :)

[15:17] <lizmat> El_Che: nothing to see here

[15:18] <jast> these are not the droids you are looking for.

[15:18] <jast> move along.

[15:19] <lizmat> El_Che  :-)

[15:19] *** cdg left
[15:20] *** domidumont left
[15:21] *** domidumont joined
[15:22] <scimon> Oh boy... Needing to do some frontend work. Installing node modules... Hopefully will be done before I head home.

[15:25] *** zakharyas left
[15:26] *** zakharyas joined
[15:26] *** wamba left
[15:27] <scimon> ..... I hate node. I've just been reminded why I hate node.

[15:30] * DrForr is currently refactoring stuff into React/mui. I feel your pain, brota.

[15:30] <DrForr> *brotha

[15:30] <timotimo> oh, i haven't heard of mui. is that the new thing now?

[15:30] <jast> I deeply distrust people who *like* node ;)

[15:30] <mst> scimon: you might wish to consider trying yarn

[15:30] <mst> I hear it's significantly less annoying than npm

[15:31] <jast> "mui v1 is coming!" vote of confidence right there

[15:31] <scimon> See I have always liked a lot of things about JS. I was playing about the Rhino years ago. But.... this is insane.

[15:31] <jast> yeah, I don't exactly dislike JS

[15:32] <jast> but everything that's been built *around* JS... yeah.

[15:32] *** Ven`` joined
[15:32] <jast> though JS-the-language has a bunch of very puzzling properties, too

[15:34] <scimon> Considering it was throw together in a VERY small amount of time it's impressive.

[15:34] <scimon> I love that it's a functional language pretending to be C. 

[15:35] <ilmari> it was originally going to have a lisp-like syntax and be called livescript, but netscape decided to ride the java hype wave and changed the syntax and name at the last minute

[15:37] <scimon> Yeah.

[15:38] <scimon> (Things I don't miss. Finding the trailing comma that caused a JS file to explode in IE6)

[15:43] *** zakharyas left
[15:45] *** zakharyas joined
[15:48] <jast> yeah, I was quite happy when we stopped supporting IE8 in my previous job, they changed that in IE9

[15:52] <buggable> New CPAN upload: P5quotemeta-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5quotemeta-0.0.1.tar.gz

[15:52] <lizmat> Zoffix++  ^^^

[15:53] *** cdg joined
[16:01] *** khw joined
[16:09] *** domidumont left
[16:19] *** wamba joined
[16:24] *** troys joined
[16:28] *** Ven`` left
[16:29] *** astj joined
[16:32] <buggable> New CPAN upload: P5index-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5index-0.0.1.tar.gz

[16:34] *** astj left
[16:48] <[Coke]> https://github.com/perl6/doc/blob/master/doc/Type/Any.pod6#L91 - this pod isn't rendering in the way it was intended, I think. Was it supposed to be a L<> ?

[16:48] <[Coke]> https://docs.perl6.org/type/Any#method_list has the rendering

[16:49] <[Coke]> Note: this was caught by the "space after comma" xt

[16:57] *** zakharyas left
[16:58] *** abraxxa left
[17:01] *** zakharyas joined
[17:02] <buggable> New CPAN upload: P5rindex-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5rindex-0.0.1.tar.gz

[17:03] <El_Che> lizmat is on a roll

[17:04] <lizmat> yeah, finnicky differences in semantics

[17:04] <lizmat> but otherwise pretty easy  :-)

[17:06] *** cgfbee left
[17:07] <El_Che> I thought you wanted to migrate modules, didn't get the idea that you also meant core functions

[17:10] *** cdg left
[17:10] *** cgfbee joined
[17:10] <[Coke]> I assume that having the core functions available makes it easier to make a p5 slang.

[17:11] <lizmat> right

[17:11] <lizmat> without the core functions, even with all of the standard modules, Perl 5 programmers would have a higher thresuold

[17:11] <lizmat> *threshold

[17:11] <El_Che> aaaah

[17:11] <El_Che> ah slang

[17:12] <lizmat> yes, and they would be needed for a P5 slang anyway

[17:12] <El_Che> I was thnking "what's the use of core functions when you need to write p6 anyway"

[17:12] <lizmat> I'm giving people options

[17:12] <lizmat> you want to stick to P5's semantics of index/rindex

[17:12] <lizmat> well, there you go: use P5index;

[17:12] <lizmat> and you're set

[17:13] <lizmat> and I'm sticking to a module per core function (basically) so that you can get a better idea of which core functions are using P5 semantics in a compilation uint

[17:13] <lizmat> *unit

[17:17] <El_Che> would something like "use v5" enable the slang and all the core functions?

[17:17] <El_Che> so, you're just being agile :)

[17:17] <El_Che> bit by bit

[17:18] <lizmat> yup, that's the idea

[17:19] <Geth> ¦ doc: 40b28b46b4 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Any.pod6

[17:19] <Geth> ¦ doc: Convert some C<>s to L<>s

[17:19] <Geth> ¦ doc: 

[17:19] <Geth> ¦ doc: So readers could easily click on types/routines they don't know

[17:19] <Geth> ¦ doc: and learn them

[17:19] <synopsebot> Link: https://doc.perl6.org/type/Any

[17:19] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/40b28b46b4

[17:23] *** troys is now known as troys_

[17:27] *** troys_ is now known as troys

[17:27] *** scimon left
[17:33] *** cdg joined
[17:36] *** KDr2 left
[17:37] <[Coke]> zoffix++

[17:42] *** dakkar left
[17:43] *** evalable6 left
[17:44] *** evalable6 joined
[17:44] *** ChanServ sets mode: +v evalable6

[18:02] *** kaare_ left
[18:03] *** zakharyas left
[18:06] *** bayprogrammer joined
[18:06] *** zakharyas joined
[18:07] *** kaare_ joined
[18:07] *** bayprogrammer left
[18:08] *** novalinium joined
[18:09] <novalinium> Is there a way to debug a UTF-8 decoding error in IO::Socket::Async.bind-udp Suuply?

[18:11] *** itaipu left
[18:11] <timotimo> yeah, you can use the utf8-c8 encoding for it, which will turn broken utf8 into something that looks funky when rendered to regular utf8, or back to what it originally was when rendered to utf8-c8

[18:12] <timotimo> alternatively, use a :bin supply, do .decode('utf8') inside a try/catch, and output the original binary blob if something fails

[18:14] *** comborico1611 left
[18:14] <novalinium> OK, so I use a bin adverb on the supply?

[18:15] <timotimo> i think so

[18:15] <timotimo> yes, indeed

[18:15] *** comborico1611 joined
[18:23] *** setty1 joined
[18:29] *** domidumont joined
[18:32] <buggable> New CPAN upload: P5length-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5length-0.0.1.tar.gz

[18:33] *** itaipu joined
[18:33] *** troys is now known as troys_

[18:39] *** player left
[18:40] *** zakharyas left
[18:45] *** darutoko left
[18:54] *** quotable6 left
[18:54] *** quotable6 joined
[18:54] *** ChanServ sets mode: +v quotable6

[18:59] *** cdg left
[19:08] *** novalinium left
[19:24] *** troys_ is now known as troys

[19:27] *** itaipu left
[19:28] *** itaipu joined
[19:32] *** GregDonald left
[19:32] *** roguelazer left
[19:32] *** GregDonald joined
[19:33] *** roguelazer joined
[19:36] *** traxex joined
[19:37] *** itaipu left
[19:37] *** itaipu joined
[19:47] *** committable6 left
[19:47] *** unicodable6 left
[19:47] *** bloatable6 left
[19:48] *** committable6 joined
[19:48] *** unicodable6 joined
[19:48] *** bloatable6 joined
[19:49] *** statisfiable6 left
[19:49] *** greppable6 left
[19:49] *** greppable6 joined
[19:52] *** statisfiable6 joined
[19:52] *** ChanServ sets mode: +v statisfiable6

[19:53] *** trnh joined
[19:56] *** squashable6 left
[19:56] *** nativecallable6 left
[19:56] *** coverable6 left
[19:56] *** nativecallable6 joined
[19:56] *** squashable6 joined
[19:56] *** ChanServ sets mode: +v nativecallable6

[19:56] *** coverable6 joined
[20:05] *** trnh left
[20:05] *** mempko joined
[20:07] *** mempko left
[20:17] *** mempko joined
[20:23] *** trnh joined
[20:30] *** notostraca joined
[20:30] *** astj joined
[20:32] <buggable> New CPAN upload: P5length-0.0.2.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5length-0.0.2.tar.gz

[20:35] *** astj left
[20:37] *** zakharyas joined
[20:39] *** notostraca is now known as TEttinger

[20:40] *** troys is now known as troys_

[20:43] *** pecastro joined
[20:44] <cono> is there any way to define class outside of unit module namespace?

[20:44] <lizmat> m: class A { }; dd A.new

[20:44] <camelia> rakudo-moar a2499c90f: OUTPUT: «A.new␤»

[20:45] <lizmat> cono: ^^ like that ?

[20:47] <cono> when I do something like this unit module A:ver...; class B { } as a result I will have A::B

[20:48] <lizmat> ah

[20:48] <moritz> you can also declare  class A::B { } directly

[20:48] <lizmat> yeah, but he want just B I guess

[20:48] <cono> but I don't know how to specify ver and author if I'm doing this w/o unit module

[20:48] <cono> yeah

[20:48] <lizmat> right

[20:48] <cono> just B

[20:49] <cono> https://github.com/cono/p6-supply-timeout/blob/master/lib/Supply/Timeout.pm6

[20:49] <cono> something like this, but this do not compile :)

[20:51] <lizmat> move the X::Supply::Timeout class within the Supply::Timeout class

[20:52] <lizmat> move the :ver.... info to the class Supply::Timeout

[20:52] <cono> would I be able to use QUIT { when X::Supply::Timeout, or should I use export trait ?

[20:52] <lizmat> remove the module Supply::Timeout line

[20:52] <cono> how to move :ver ?

[20:53] <cono> I don't think I understand what :ver actually means

[20:53] <lizmat> class Supply::Timeout:ver<0.0.1>:auth<cono [email@hidden.address] { ... }

[20:53] <cono> ah

[20:55] <cono> yeah, this works, thanks :)

[20:55] <cono> another question. looks like making use-ok('Supply::Timeout'); my $su = Supply::Timeout.new; isa-ok($su, 'Supply::Timeout'); doensn't work

[20:56] <cono> looks like because use doing eval"use"

[20:56] <cono> I'm getting: Could not find symbol '&Timeout'

[20:57] <cono> nevermind, rework it in another way :)

[20:57] <lizmat> cono: perhaps you found a bug

[20:58] <lizmat> perhaps: class Supply::Timeout:ver<0.0.1>:auth<cono [email@hidden.address] is export { ... }

[21:00] <timotimo> is that how :auth is supposed to work?

[21:01] <cono> export trait not resolving it :(

[21:01] <gfldex> timotimo: I don't think we know that yet.

[21:02] <cono> it looks like it importing class name but not in current namespace

[21:04] <psch> m: module A { class B::C is export { } }; import A; use Test; isa-ok C.new, 'A::B::C'

[21:04] <camelia> rakudo-moar a2499c90f: OUTPUT: «ok 1 - The object is-a '"A::B::C"'␤»

[21:07] <cono> m: module A { class B::C is export {} }; use Test; use-ok("A"); isa-ok A::B::C.new, 'A::B::C';

[21:07] <camelia> rakudo-moar a2499c90f: OUTPUT: «not ok 1 - A module can be use-d ok␤# Failed test 'A module can be use-d ok'␤# at <tmp> line 1␤# Could not find A at line 1 in:␤#     /home/camelia/.perl6␤#     /home/camelia/rakudo-m-inst-2/share/perl6/site␤#     /home/camelia/rakudo-m-in…»

[21:08] <psch> cono: 'use' always looks for a file, can't really emulate that with camelia :/

[21:09] <psch> cono: i think more precisely it's the 'require' part of 'use' that looks for a file

[21:10] <cono> m: module A { class B::C is export {} }; use Test; eval("import A"); isa-ok A::B::C.new, 'A::B::C';

[21:10] <camelia> rakudo-moar a2499c90f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    eval used at line 1. Did you mean 'EVAL', 'val'?␤␤»

[21:10] <cono> m: module A { class B::C is export {} }; use Test; EVAL("import A"); isa-ok A::B::C.new, 'A::B::C';

[21:10] <camelia> rakudo-moar a2499c90f: OUTPUT: «ok 1 - The object is-a '"A::B::C"'␤»

[21:11] *** lostinfog joined
[21:11] <cono> hm, EVAL import works, strange that use-ok doesn't work then

[21:12] <psch> s/require/need/ # whoops

[21:13] <psch> m: module A { }; need A # that's the part of use that looks for a file

[21:13] <camelia> rakudo-moar a2499c90f: OUTPUT: «===SORRY!===␤Could not find A at line 1 in:␤    /home/camelia/.perl6␤    /home/camelia/rakudo-m-inst-2/share/perl6/site␤    /home/camelia/rakudo-m-inst-2/share/perl6/vendor␤    /home/camelia/rakudo-m-inst-2/share/perl6␤    CompUnit::Reposi…»

[21:13] <psch> m: need Test; say &Test::isa-ok

[21:13] <camelia> rakudo-moar a2499c90f: OUTPUT: «(Any)␤»

[21:13] <cono> pushed test which fails for me: https://github.com/cono/p6-supply-timeout

[21:13] <psch> m: need Test; say Test::

[21:13] <camelia> rakudo-moar a2499c90f: OUTPUT: «Test␤»

[21:14] <psch> m: need Test; say Test::.keys

[21:14] <camelia> rakudo-moar a2499c90f: OUTPUT: «(&todo_output EXPORT &failure_output &output)␤»

[21:14] <cono> tried with `is export` doesn't work either

[21:14] *** lostinfog left
[21:15] <psch> cono: the use-ok passes?

[21:15] <cono> yes

[21:15] <cono> Supply::Timeout.new fails

[21:16] *** cdg joined
[21:17] <psch> m: use Test; use-ok('newline :cr'); is $?NL, "\r"

[21:17] <camelia> rakudo-moar a2499c90f: OUTPUT: «ok 1 - newline :cr module can be use-d ok␤not ok 2 - ␤# Failed test at <tmp> line 1␤# expected: "\r"␤#      got: "\n"␤»

[21:17] <psch> does use-ok actually affect the mainline..?

[21:17] <El_Che> New rakudo pkgs for Linux: https://github.com/nxadm/rakudo-pkg/releases/tag/v2018.01

[21:19] <psch> cono: fwiw, the one module i wrote that also has tests does the use-ok test in a seperate test file, and does a normal 'use' for the next test file

[21:20] <cono> that how I workarounded too :)

[21:21] <cono> thanks for tip :)

[21:23] <Xliff_> .tell Zoffix HAH! I almost guessed Russian.

[21:23] <yoleaux> Xliff_: I'll pass your message to Zoffix.

[21:24] *** itaipu left
[21:33] *** armin left
[21:45] <El_Che> lizmat: do you add it to the weekly? impoetant part is addition of opensuse packages

[21:46] <lizmat> yes, will do  :-)

[21:46] <El_Che> thx

[21:48] *** espadrine joined
[21:51] *** SCHAPiE left
[21:52] *** rindolf left
[21:54] *** SCHAPiE joined
[21:54] *** buggable left
[21:55] *** buggable joined
[21:55] *** ChanServ sets mode: +v buggable

[22:02] *** zakharyas left
[22:07] *** itaipu joined
[22:14] *** setty1 left
[22:17] *** comborico1611 left
[22:18] *** comborico1611 joined
[22:22] *** troys_ is now known as troys

[22:24] *** trnh left
[22:25] *** giraffe left
[22:28] <Geth> ¦ whateverable/master: 4 commits pushed by (Aleks-Daniel Jakimenko-Aleksejev)++

[22:28] <Geth> ¦ whateverable/master: f170b7b97a | Also overcompress MoarVM builds

[22:28] <Geth> ¦ whateverable/master: 3e0014888b | Use data/ directory

[22:28] <Geth> ¦ whateverable/master: 13eeae8a29 | Overwrite existing files

[22:28] <Geth> ¦ whateverable/master: 6776e35931 | slurp-rest → slurp

[22:28] <Geth> ¦ whateverable/master: review: https://github.com/perl6/whateverable/compare/0532012f7f...6776e35931

[22:31] *** pecastro left
[22:36] <Geth> ¦ whateverable: 8bf0be40ea | (Aleks-Daniel Jakimenko-Aleksejev)++ | maintenance/long-term-storage.p6

[22:36] <Geth> ¦ whateverable: More aggressive compression

[22:36] <Geth> ¦ whateverable: 

[22:36] <Geth> ¦ whateverable: This saves about 21G of storage (≈⅓ shaved off). The midpoint is

[22:36] <Geth> ¦ whateverable: supposed to be in front of the cutoff point so that bisectable

[22:36] <Geth> ¦ whateverable: stumbles about the fast build at its first step. I haven't counted the

[22:36] <Geth> ¦ whateverable: actual number of commits, but it should be right. Even if not, it'll

[22:36] <Geth> ¦ whateverable: fix itself in a month or so.

[22:36] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/8bf0be40ea

[22:37] * AlexDaniel hates his file manager for showing “G”

[22:38] <AlexDaniel> .oO( what is G? GiB? GB? )

[22:38] <ilmari> gibbons

[22:38] <ilmari> grammes

[22:38] <lizmat> googlots

[22:38] <ilmari> gigagrammes

[22:39] <tadzik> I think "G" stands for "Go use a different tool if the difference between 1000 and 1024 matters" :P

[22:39] <geekosaur> gegenschein >.>

[22:39] <ilmari> groots

[22:40] <tadzik> . o O ( I am gibigroot )

[22:43] <stmuk> reading the backlog on the web has made me glad I've had mst on ignore for several years

[22:43] <AlexDaniel> that's spacefm by the way

[22:44] <AlexDaniel> if somebody can recommend a better file manager I'd be happy, but everything I've seen so far is much less useful compared to spacefm

[22:44] <tadzik> oh wow

[22:45] <tadzik> I thought "that sounds a bit like pcmanfm, I wonder if they're related", and they are!

[22:45] <stmuk> if people think there is any confusion about rakudup being an official rather than personal site I can put a disclaimer and/or remove Camelia branding

[22:46] <stmuk> AlexDaniel: midnight commander!

[22:46] <timotimo> stmuk: i'd like a disclaimer to be included, actually

[22:47] <AlexDaniel> stmuk: I can hardly imagine myself using it, unfortunately. I'm too used to thumbnails and icons and stuff

[22:47] <AlexDaniel> I can assign a keyboard shortcut to *any* button in spacefm, so it's keyboard-heavy already

[22:49] <timotimo> the background image in the text box of spacefm repeats %)

[22:49] <stmuk> "disclaimer this website and associated software is not officially associated with the Rakudo Project and Perl foundation"

[22:49] <AlexDaniel> timotimo: xD screenshot?

[22:50] <stmuk> "disclaimer this website and any related software is not officially associated with the Rakudo Project and Perl foundation"

[22:50] <timotimo> https://imgur.com/mJ4tyt4

[22:50] <stmuk> ok?

[22:50] <timotimo> at first glance that sounds okay

[22:51] <AlexDaniel> ah, on the website :D

[22:52] <AlexDaniel> the project seems to be abandoned :(

[22:52] <AlexDaniel> (spacefm that is)

[22:52] <AlexDaniel> the main dev was on hiatus which is ok, but there was a promising spacefm-ng fork… dead now

[22:54] *** trnh joined
[22:56] *** wamba left
[22:58] <Geth> ¦ whateverable: e53c6883bc | (Timo Paulssen)++ (committed by Aleks-Daniel Jakimenko-Aleksejev) | maintenance/fetch-irc.p6

[22:58] <Geth> ¦ whateverable: Add timings and debug info to fetch-irc script

[22:58] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/e53c6883bc

[22:58] <AlexDaniel> timotimo: hehe 

[23:00] <Geth> ¦ whateverable: ec03e01cbd | (Aleks-Daniel Jakimenko-Aleksejev)++ | maintenance/fetch-irc.p6

[23:00] <Geth> ¦ whateverable: Note instead of saying

[23:00] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/ec03e01cbd

[23:01] <stmuk> Snowflake was in the Flight Club film and is a well known meme

[23:02] <stmuk> anyway the content will migrate to something more positive when the joke wears thin to a invisible degree

[23:04] <Geth> ¦ whateverable: 7f880a56bb | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[23:04] <Geth> ¦ whateverable: Take the config from STDIN

[23:04] <Geth> ¦ whateverable: 

[23:04] <Geth> ¦ whateverable: … Instead of assuming that it is located somewhere.

[23:04] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/7f880a56bb

[23:04] <stmuk> and the font will be replaced :)

[23:05] <buggable> New CPAN upload: Supply-Timeout-0.0.1.tar.gz by CONO https://cpan.metacpan.org/authors/id/C/CO/CONO/Perl6/Supply-Timeout-0.0.1.tar.gz

[23:09] *** domidumont left
[23:10] *** domidumont joined
[23:13] <Geth> ¦ whateverable: 981c1dac2b | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[23:13] <Geth> ¦ whateverable: Adapt code to the new config

[23:13] <Geth> ¦ whateverable: 

[23:13] <Geth> ¦ whateverable: See 7f880a56bb690626188405bd26bcee4e012de7d0

[23:13] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/981c1dac2b

[23:13] <Geth> ¦ whateverable: 7db29a7d05 | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Reportable.p6

[23:13] <Geth> ¦ whateverable: Don't autocorrect too much

[23:13] <Geth> ¦ whateverable: 

[23:13] <Geth> ¦ whateverable: Otherwise it's triggered when you talk to other bots.

[23:13] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/7db29a7d05

[23:17] *** cdg left
[23:18] *** cdg joined
[23:19] <Geth> ¦ whateverable: d7ac0c2818 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 3 files

[23:19] <Geth> ¦ whateverable: html-escape helper function

[23:19] <Geth> ¦ whateverable: 

[23:19] <Geth> ¦ whateverable: It's probably not entirely correct, but it does work a bit.

[23:19] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/d7ac0c2818

[23:19] <Geth> ¦ whateverable: c9cac8c23e | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Reportable.p6

[23:19] <Geth> ¦ whateverable: Typo

[23:19] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/c9cac8c23e

[23:19] <Geth> ¦ whateverable: 76ff3a5607 | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Reportable.p6

[23:19] <Geth> ¦ whateverable: Move directories correctly

[23:19] <Geth> ¦ whateverable: 

[23:19] <Geth> ¦ whateverable: It seems that this is the only way right now?

[23:19] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/76ff3a5607

[23:22] *** cdg left
[23:24] <stmuk> mst: after that you are very lucky I didn't change it to  "Prepare to be triggered like a Shouty Trouty grumpy old sysadmin snowflakes"

[23:25] <timotimo> lucky because that'd have been grammatically incorrect, right?

[23:27] <Geth> ¦ whateverable: a2f3d7c8e5 | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Bloatable.p6

[23:27] <Geth> ¦ whateverable: Adapt the code to the new bloaty output format

[23:27] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/a2f3d7c8e5

[23:27] <Geth> ¦ whateverable: b74a7db73a | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/lib/Testable.pm6

[23:27] <Geth> ¦ whateverable: Indicate that the bot process finished

[23:27] <Geth> ¦ whateverable: 

[23:27] <Geth> ¦ whateverable: This should make it easier to see segfaults when running tests.

[23:27] <Geth> ¦ whateverable: 

[23:27] <Geth> ¦ whateverable: Also, use the new stdin config (see 7f880a56bb690626188405bd26bcee4e012de7d0).

[23:27] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/b74a7db73a

[23:27] <AlexDaniel> omg, can't believe that all this stuff was changed

[23:27] <AlexDaniel> but never committed

[23:28] <AlexDaniel> bisectable6: uptime

[23:28] <bisectable6> AlexDaniel, No! It wasn't me! It was the one-armed man! Backtrace: https://gist.github.com/bcf71ec09b0573235215e221ec05bb51

[23:28] <stmuk> timotimo: probbably

[23:29] <AlexDaniel> don't know which rakudo that is but it's probably old

[23:29] <AlexDaniel> kaboom!

[23:29] *** quotable6 left
[23:29] *** greppable6 left
[23:29] *** coverable6 left
[23:29] *** bloatable6 left
[23:29] *** committable6 left
[23:29] *** benchable6 left
[23:29] *** unicodable6 left
[23:29] *** squashable6 left
[23:29] *** nativecallable6 left
[23:29] *** releasable6 left
[23:29] *** reportable6 left
[23:29] *** statisfiable6 left
[23:29] *** evalable6 left
[23:29] *** bisectable6 left
[23:36] *** Merfont joined
[23:37] *** _Kaiepi left
[23:54] *** |oLa| left
[23:58] *** comborico1611 left
