[00:01] <nadim> did you try running things in jupyter? I think I saw a perl6 kernel, doesn't that do the same thing as 6Pad?

[00:01] <timotimo> not the same thing

[00:01] <timotimo> jupyter has perl6 run on some server

[00:02] <timotimo> 6pad runs rakudo in the browser as rakudo-js

[00:07] <nadim> so what's next thing? I have some time tomorrow, otherwise I have a little bash project to start

[00:10] <timotimo> i'm not entirely sure what to do next

[00:11] <timotimo> perhaps build a very simple data format for Grammar::Tracer to output that can be consumed by a little piece of JS code that builds a user intefrace

[00:11] <timotimo> and then "marry" the two into a single 6pad

[00:11] <lizmat> and another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/12/24/2018-52-three-years-later/

[00:12] <nadim> lizmat++ 

[00:12] * lizmat is off to bed&

[00:12] <nadim> timotimo: I have no idea how the regex engine works, where does it build and run the grammar? can one hook there?

[00:13] <timotimo> or before that, just an output for a Match object to HTML, which could use DDT

[00:13] <nadim> that's easy

[00:13] <timotimo> the grammar tracer/debugger works by modifying the regex slang to put a bunch of function calls in the right places that allow matches to be stopped in the middle of working

[00:14] <nadim> I wrote Grammar-Tracer-Compact which is jonathan's module with a different output

[00:14] <nadim> shorter output, like half

[00:16] <nadim> timotimo: did you run the example?

[00:16] <timotimo> i think i remember that, but i'm not sure if i tried it

[00:16] <timotimo> not yet, sorry; distracted at the moment

[00:16] <timotimo> and may soon go to bed

[00:17] <nadim> I am tired too :) when will be online tomorrow?

[00:18] <timotimo> i'm visiting my parents and i'm not sure if they have anything planned for the next day

[00:19] <nadim> ping me if you are online. Good night

[00:19] <timotimo> good night nadim!

[00:20] *** moony left
[00:20] *** moony joined
[00:20] *** p6bannerbot sets mode: +v moony

[00:23] *** leont joined
[00:24] *** p6bannerbot sets mode: +v leont

[00:25] *** ryn1x joined
[00:26] *** p6bannerbot sets mode: +v ryn1x

[00:36] *** kurahaupo left
[00:36] *** kurahaupo joined
[00:37] *** p6bannerbot sets mode: +v kurahaupo

[00:40] <vrurg> jnthn: https://github.com/rakudo/rakudo/issues/2565

[00:41] <vrurg> Looks like there is no easy solution for my wish. Not even through grammar patching...

[00:43] <jnthn> vrurg: Yeah, I think Rakuod needs patching. 

[00:46] <vrurg> I'm still investigating. Perhaps I can manage with mixin in my HOW into ParametricRoleHOW even after it was composed (and it gets composed in package_def, if I'm not mistaken)

[00:51] <jnthn> If nobody beats me to it, I'll be happy to do the patch or review a PR for it. But for now, sleep. :)

[00:51] <jnthn> o/

[00:58] <vrurg> o/

[00:59] *** daotoad joined
[01:00] *** p6bannerbot sets mode: +v daotoad

[01:00] *** w_richard_w joined
[01:01] *** p6bannerbot sets mode: +v w_richard_w

[01:09] <SmokeMachine> jnthn: sorry to bore you, but have you any idea?

[01:09] <SmokeMachine> I’m not with my computer here, but I just remembered a question I have to ask: does anyone have any idea of why if I remove this `no precompilation` everything breaks? https://github.com/FCO/Red/blob/master/lib/Red/Operators.pm6#L5

[01:12] *** zacts left
[01:17] *** _Xliff_ joined
[01:18] *** p6bannerbot sets mode: +v _Xliff_

[01:19] <_Xliff_> \o

[01:20] *** _Xliff_ left
[01:20] <Xliff_> Can someone tell me what an IntLexRef is?

[01:23] <Xliff_> Error here: Native call expected return type with CPointer representation, but got a NativeRef (IntLexRef)

[01:23] <Xliff_> Never seen it before.

[01:26] *** Xliff_ left
[01:27] <loops> Xliff: Is there something doing callbacks into Perl code from C?

[01:28] <loops> It sounds like a Perl callback was supposed to return a pointer but returned an int instead

[01:28] <loops> (because I can't imagine how a C function returned the wrong thing, which is why i guess Perl callback)

[01:29] <Xliff> Routine in question should return a cairo_surface_t. I am assuming that is a pointer and not an int.

[01:29] <Xliff> Now I need to check.

[01:31] <Xliff> Nope. Opaque struct.

[01:31] <Xliff> And no callbacks, this should be a pure call.

[01:35] <loops> Sorry, was just a shot in the dark. :-/

[01:35] <Xliff> Nevermind. Found it. Parameter order mix up. Thanks! :)

[01:49] *** ryn1x left
[01:51] *** hahainte1net is now known as hahainternet

[01:52] *** nadim left
[01:58] *** Manifest0 left
[01:58] *** Manifest0 joined
[01:59] *** p6bannerbot sets mode: +v Manifest0

[01:59] *** |oLa| left
[02:02] *** lizmat left
[02:03] *** zacts joined
[02:03] *** p6bannerbot sets mode: +v zacts

[02:20] *** kktt joined
[02:21] *** p6bannerbot sets mode: +v kktt

[02:25] *** kurahaupo_ joined
[02:26] *** kurahaupo left
[02:26] *** p6bannerbot sets mode: +v kurahaupo_

[03:00] <AlexDaniel> squ

[03:00] <AlexDaniel> squashable6: status

[03:00] <squashable6> AlexDaniel, Next SQUASHathon in 11 days and ≈6 hours (2019-01-05 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[03:00] <AlexDaniel> releasable6: status

[03:00] <releasable6> AlexDaniel, Next release in ≈26 days and ≈15 hours. 0 blockers. 0 out of 39 commits logged

[03:00] <releasable6> AlexDaniel, Details: https://gist.github.com/da042c2b27a8cfc36abdd576ccbeda74

[03:00] <AlexDaniel> awesome

[03:04] <buggable> New CPAN upload: Uzu-0.3.0.tar.gz by SACOMO http://modules.perl6.org/dist/Uzu:cpan:SACOMO

[03:10] *** khisanth_ left
[03:29] *** khisanth_ joined
[03:29] *** kktt left
[03:30] *** p6bannerbot sets mode: +v khisanth_

[03:33] *** ferreira joined
[03:33] *** p6bannerbot sets mode: +v ferreira

[03:39] *** kktt joined
[03:40] *** p6bannerbot sets mode: +v kktt

[03:41] *** leont left
[03:42] *** kktt left
[03:44] *** w_richard_w1 joined
[03:45] *** p6bannerbot sets mode: +v w_richard_w1

[03:47] *** w_richard_w left
[03:47] *** w_richard_w joined
[03:48] *** p6bannerbot sets mode: +v w_richard_w

[03:48] *** w_richard_w1 left
[03:49] <Xliff> m: my $a = Nil; say "a" without $a;

[03:49] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «a␤»

[03:50] <Xliff> m: my $a = Nil; say "a" without $a else say "b";

[03:50] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3my $a = Nil; say "a" without $a7⏏5 else say "b";␤    expecting any of:␤        infix␤        infix stopper␤»

[03:50] <Xliff> m: my $a = Nil; say "a" without $a;

[03:50] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «a␤»

[03:50] <Xliff> m: my $a = Nil; say ("b" // $a);

[03:50] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «b␤»

[03:50] <Xliff> m: my $a = 1; say ("b" // $a);

[03:50] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «b␤»

[03:50] <Xliff> m: my $a = 1; say ($a // 'b');

[03:50] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «1␤»

[03:50] <Xliff> m: my $a = Nil; say ($a // 'b');

[03:50] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «b␤»

[03:50] *** w_richard_w1 joined
[03:51] <Xliff> m: say Nil.Int

[03:51] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «Use of Nil in numeric context␤0␤  in block <unit> at <tmp> line 1␤»

[03:51] *** p6bannerbot sets mode: +v w_richard_w1

[03:51] *** w_richard_w left
[03:53] *** reportable6 left
[03:53] *** shareable6 left
[03:53] *** squashable6 left
[03:53] *** evalable6 left
[03:54] <Xliff> m: sub a(Int() $l?) { say $l.defined; say ($l // -1); } a(Nil)

[03:54] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3$l?) { say $l.defined; say ($l // -1); }7⏏5 a(Nil)␤    expecting any of:␤        infix␤        infix stopper␤…»

[03:54] <Xliff> m: sub a(Int() $l?) { say $l.defined; say ($l // -1); }; a(Nil)

[03:54] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «Use of Nil in numeric context␤True␤0␤  in sub a at <tmp> line 1␤»

[03:54] *** shareable6 joined
[03:54] *** ChanServ sets mode: +v shareable6

[03:54] <Xliff> m: sub a(Int() $l?) { say $l.defined; }; a(Nil)

[03:54] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «Use of Nil in numeric context␤True␤  in sub a at <tmp> line 1␤»

[03:54] <Xliff> m: sub a(Int() $l?) { say $l.defined; $l; }; a(Nil)

[03:54] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «Use of Nil in numeric context␤True␤  in sub a at <tmp> line 1␤»

[03:54] <Xliff> m: sub a(Int() $l?) { say $l.defined; $l.say; }; a(Nil)

[03:54] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «Use of Nil in numeric context␤True␤0␤  in sub a at <tmp> line 1␤»

[03:55] <Xliff> m: sub a(Int() $l?) { say $l.defined; "L: $l".say; }; a(Nil)

[03:55] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «Use of Nil in numeric context␤True␤L: 0␤  in sub a at <tmp> line 1␤»

[03:55] <Xliff> m: sub a(Int() $l?) { say $l.defined; "L: $l".say; }; a()

[03:55] *** p6bannerbot sets mode: +v shareable6

[03:55] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «No such method 'Int' for invocant of type 'Any'␤  in sub a at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[03:55] *** squashable6 joined
[03:55] *** evalable6 joined
[03:56] *** p6bannerbot sets mode: +v squashable6

[03:56] *** p6bannerbot sets mode: +v evalable6

[03:57] *** w_richard_w1 left
[03:57] *** reportable6 joined
[03:58] *** p6bannerbot sets mode: +v reportable6

[03:59] *** zacts left
[04:23] *** ryn1x joined
[04:24] *** p6bannerbot sets mode: +v ryn1x

[04:24] <buggable> New CPAN upload: HTTP-Supply-0.3.4.tar.gz by HANENKAMP http://modules.perl6.org/dist/HTTP::Supply:cpan:HANENKAMP

[04:31] *** kktt joined
[04:31] *** p6bannerbot sets mode: +v kktt

[04:36] *** kktt left
[04:37] *** kktt joined
[04:37] *** p6bannerbot sets mode: +v kktt

[04:57] *** zacts joined
[04:57] *** p6bannerbot sets mode: +v zacts

[04:59] *** Cabanoss- joined
[04:59] *** ryn1x left
[05:00] *** p6bannerbot sets mode: +v Cabanoss-

[05:01] *** Cabanossi left
[05:08] *** hythm_ joined
[05:08] *** p6bannerbot sets mode: +v hythm_

[05:09] <hythm_> hello, I'm trying to add color to GTK button, but I'm getting this error: Native call expected return type with CPointer representation, but got a P6opaque (GTK::Simple::Button)

[05:09] <hythm_> here is the code: https://gist.github.com/hythm7/a38902105bc421183496a17d68ea14dd#file-button-color-p6     What I'm doing wrong?

[05:14] <Xliff> You are passing the object as opposed to the pointer it represents.

[05:16] <Xliff> I've commented on your gist page. Good luck!

[05:18] <hythm_> checking... Thank you

[05:24] <hythm_> That fixed the error. but the button doesn't have color, any idea where to look further?

[05:36] *** APic joined
[05:37] *** p6bannerbot sets mode: +v APic

[05:41] *** shareable6 left
[05:43] *** shareable6 joined
[05:43] *** ChanServ sets mode: +v shareable6

[05:44] *** p6bannerbot sets mode: +v shareable6

[05:53] <Xliff> hythm_: Did you update the gist?

[05:55] <hythm_> xliff: just did now

[05:57] <Xliff> hythm_: Hrm. I'm afraid this is one of those areas where GTK::Simple falls short.

[05:58] <Xliff> I'm working on an alternative that allows you to do this with CSS, but it takes a LONG time to install (pre-compile)

[05:58] <Xliff> For your example, it might NOT take all that long (maybe 5 minutes or so)

[05:59] <Elronnd> is there a good way to have some types in perl6?  I see the note in here https://docs.perl6.org/language/haskell-to-p6, but I want to store data so binding it up in functions seems like overkill

[05:59] <Xliff> https://github.com/Xliff/p6-GtkPlus

[05:59] <Xliff> ↑ hythm_ 

[05:59] <Xliff> hythm_ -- See this example: https://github.com/Xliff/p6-GtkPlus/blob/master/t/30-widget-css.t

[06:00] <hythm_> Yeah I think GTK::Simple doesn't support coor yet, thats why I was trying to add GdkRGBA class hoping that will help. I don't mind the long install time, I think being able to add color in GTK widgets is important.

[06:00] <hythm_> checking the example ...

[06:00] <Xliff> If you wouldn't mind adding --stagestats when you attempt to run, I would appreciate it.

[06:01] <hythm_> will do

[06:01] <Xliff> For now, there IS no installing, yet. You have to run everything with -Ilib from the project root dir.

[06:01] <Xliff> Elronnd: What kind of types?

[06:03] <Elronnd> I want to say something like type Token = | (Str $str, TokenTypes::identifier) | (Int $num, TokenTypes::number)

[06:04] <Elronnd> (or, I guess:  type Token = | (Str $str, TokenTypes::identifier) | (Int $num, TokenTypes::number) | (TokenTypes $type))

[06:05] <Xliff> Is Token supposed to be a function signature?

[06:05] <Xliff> (Sorry...unfamiliar with Haskell)

[06:06] <Elronnd> I don't know haskell either :P

[06:06] <Elronnd> (or perl6 -- can I translate that to pseudo-C?)

[06:06] <hythm_> Xliff: running now "perl6 --stagestats -Ilib t/30-widget-css.t "

[06:06] <Xliff> OK. So that are you trying to do here?

[06:06] <Xliff> hythm_: Thanks!

[06:06] <Elronnd> that would be like union Token { struct { String str; TokenTypes type = identifier}; struct { Int int; TokenTypes type = number}; struct { TokenTypes type; } }

[06:07] <Elronnd> I want to have a union that can hold a token, which has an associated type.  If that type is identifier or number then I want to have a guarantee that you can access the value and have it be the right type

[06:07] <Elronnd> i.e. if the type is identifier, then you get a value with type str, if it's num then you get a value of type int, otherwise you aren't allowed to get a value

[06:07] <Xliff> Elrond: In that case, shouldn't "TokenTypes type" be first?

[06:08] <Elronnd> sure

[06:08] <Xliff> Pure perl or are you trying to use this with something elsE?

[06:09] <Elronnd> pure perl, unless there's something I can/should use?

[06:09] <lookatme_q> It's a type constraint ?

[06:09] <lookatme_q> subset ?

[06:09] <Elronnd> yes

[06:10] <Xliff> Elronnd: I think you are overthinking it. Don't impose a type until as late as possible.

[06:10] <Xliff> To do this with a hash, you can do something like:

[06:12] <lookatme_q> m: class A { has Int $.a; }; class B { has Str $.a; }; subset C of Any where * ~~ A | B; sub f(C $c) { dd $c; }; f A.new(:a1); f B.new(a => "!23");

[06:12] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «A.new(a => Int)␤B.new(a => "!23")␤»

[06:12] <lookatme_q> Is something like this ?

[06:12] <hythm_> Xliff: Thank you for sharing the example, here is the result https://gist.github.com/hythm7/0895174d7e693557b546b2a8bd2ee995

[06:12] <Xliff> hythm_: Does that work for you? 

[06:13] <Xliff> Thanks for the timings!

[06:13] <Elronnd> Xliff: woah

[06:13] <Elronnd> that's way more perl6 than I know

[06:14] <Xliff> I think it's something more like the following:

[06:14] <hythm_> yeah. that's great. I'm reading through the code so I can apply it to my work

[06:14] <Elronnd> I ended up with something like this http://sprunge.us/q9SAzQ; is that idiomatic?

[06:14] <Xliff> Let me know if you need more help. Especially if you find bugs!

[06:14] <SmokeMachine> m: class Token { has Str $.type is required; has IntStr $id  }; say Token.new: :type<bla>, :1id; say Token.new: :type<bla>, :id<bla>; say Token.new: :type<bla>;

[06:14] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «Token.new(type => "bla")␤Token.new(type => "bla")␤Token.new(type => "bla")␤»

[06:14] <hythm_> Xliff: Will do.

[06:14] <SmokeMachine> m: class Token { has Str $.type is required; has IntStr $.id  }; say Token.new: :type<bla>, :1id; say Token.new: :type<bla>, :id<bla>; say Token.new: :type<bla>;

[06:14] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «Type check failed in assignment to $!id; expected IntStr but got Int (1)␤  in block <unit> at <tmp> line 1␤␤»

[06:15] <SmokeMachine> m: class Token { has Str $.type is required; has IntStr() $.id  }; say Token.new: :type<bla>, :1id; say Token.new: :type<bla>, :id<bla>; say Token.new: :type<bla>;

[06:15] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Coercion IntStr(Any) is insufficiently type-like to qualify a variable␤at <tmp>:1␤------> 3 $.type is required; has IntStr() $.id  7⏏5}; say Token.new: :type<bla>, :1id; say ␤    expecting a…»

[06:15] <SmokeMachine> m: class Token { has Str $.type is required; has IntStr $.id  }; say Token.new: :type<bla>, :id<1>; say Token.new: :type<bla>, :id<bla>; say Token.new: :type<bla>;

[06:15] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «Token.new(type => "bla", id => IntStr.new(1, "1"))␤Type check failed in assignment to $!id; expected IntStr but got Str ("bla")␤  in block <unit> at <tmp> line 1␤␤»

[06:16] *** Hotkeys joined
[06:16] *** p6bannerbot sets mode: +v Hotkeys

[06:16] <SmokeMachine> m: class Token { has Str $.type is required; has Cool $id where Str | Int  }; say Token.new: :type<bla>, :1id; say Token.new: :type<bla>, :id<bla>; say Token.new: :type<bla>;

[06:16] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «Token.new(type => "bla")␤Token.new(type => "bla")␤Token.new(type => "bla")␤»

[06:16] <SmokeMachine> m: class Token { has Str $.type is required; has Cool $.id where Str | Int  }; say Token.new: :type<bla>, :1id; say Token.new: :type<bla>, :id<bla>; say Token.new: :type<bla>;

[06:16] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «Token.new(type => "bla", id => 1)␤Token.new(type => "bla", id => "bla")␤Token.new(type => "bla", id => <anon>)␤»

[06:17] <SmokeMachine> Elronnd: something like this? ^^

[06:17] <Elronnd> SmokeMachine: not exactly

[06:17] <Elronnd> I want to saya, if $type is 'string', then the type if $id _must_ be str; if it is 'integer', then $id _must_ be an int

[06:18] <Xliff> m: my enum TokenType <Unknown Str Int>; class Token { has TokenType $.type is required; has Str $.string; has Int $.integer; method val { given $.type { when TokenType::String { $.string }; when TokenType::Int { $.int }; default { die "Unknown type!" }: }; my $a-string = A.new(:type(String), :val<this is a string>)

[06:18] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable definition of type TokenType (implicit : by pragma) requires an initializer␤at <tmp>:1␤------> 3ype $.type is required; has Str $.string7⏏5; has Int $.integer; method val { given ␤ …»

[06:18] <Xliff> Elronnd: OK. So you want something more like this... (one minute)

[06:19] <Elronnd> yes!

[06:24] <Xliff> OK. Let me gist this, so it is readable. One sec.

[06:24] <SmokeMachine> m: role R[::T $type] { has T $.type = $type; has T $.id }; say R[“bla”].new: :id<ble>; say R[13].new: :42id; R[“bla”].new: :42id

[06:24] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «R[Str].new(type => "bla", id => "ble")␤Type check failed in assignment to $!id; expected Str but got Int (42)␤  in block <unit> at <tmp> line 1␤␤R[Int].new(type => 13, id => 42)␤»

[06:24] <SmokeMachine> Elronnd: like this? ^^

[06:26] <SmokeMachine> Why the exception msg is coming at the middle???

[06:36] <Xliff> Elronnd: Something like this gist?

[06:36] <Xliff> m: https://gist.github.com/Xliff/6a438b3e0ab736c0be1c17c952250432

[06:36] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «10␤AA␤Not a Int value.␤Not a Str value.␤»

[06:36] <Xliff> Note that output!

[06:37] <Xliff> Now let me format the gist so its readable:

[06:37] <Xliff> OK. Check that gist now. Feel free to download that code and play with it. If you need help unpacking, feel free to ask.

[06:40] <Elronnd> thank you so much!

[06:40] <Xliff> Is that something close to what you wanted?

[06:41] <Elronnd> yes, that's pretty much exactly it

[06:41] <Elronnd> I don't quite understand the implementation, though

[06:41] <Xliff> OK. What other types were you planning on adding, or was that it?

[06:41] <Elronnd> in STORE, how does the type end up in $nv?

[06:41] <Xliff> It doesn't.

[06:41] <Xliff> OK, let me explain.

[06:41] <Xliff> In Perl6, it's best to leave type constraints until as late as possible.

[06:42] <lookatme_q> Maybe using the type parameter role

[06:42] <lookatme_q> https://docs.perl6.org/language/objects#index-entry-Parameterized_Roles

[06:42] <Xliff> so we start with: "class Token { has $.typel has $!id; ... }

[06:42] <Xliff> $.type and $!id are not typed. This is important.

[06:42] <Xliff> Given that $!id means "private member", so we have to create a way to access ID.

[06:43] <Xliff> Hence "method id is rw".

[06:43] <Xliff> Saying "$inty = 10" is the same as saying "$inty.STORE(10)"

[06:44] <Elronnd> ok

[06:44] <Xliff> Correction... Saying "$inty.id = 10" is the same as saying "$inty.id.STORE(10)"

[06:44] <Xliff> For the sake of this conversation, at any rate.

[06:45] <Xliff> So that "10" value is passed to $nv in the STORE part

[06:45] <Xliff> When we initialized $inty, we did so like this "my $inty = Token.new(:type(Int))"

[06:46] <Xliff> That created a new Token object with $.type set to the type object Int.

[06:46] <Xliff> Following?

[06:46] <Elronnd> yes

[06:47] <Xliff> So when any Token object sets the id value, it is smartmatched against the type object stored in the type attribute

[06:47] <Xliff> What is unsaid here is that $!type MUST be a Perl6 type object.

[06:47] <Xliff> That way it Just Works.

[06:47] <lookatme_q> m: role Token[::T] { has T $.id; }; say Token[Int].new(id => 123); say Token[Int].new(id => "123");

[06:47] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «Token[Int].new(id => 123)␤Type check failed in assignment to $!id; expected Int but got Str ("123")␤  in block <unit> at <tmp> line 1␤␤»

[06:47] <Elronnd> ahhh ok, that makes sense

[06:47] <Elronnd> (can we add a setter for $.type to make sure it's a type object? :P)

[06:48] <lookatme_q> Maybe you can consider the type parameterized role ^^ Elronnd 

[06:48] <Xliff> Elronnd: lookatme_q Just put up a much more efficient way of doing this with a role

[06:48] <Xliff> Elronnd: Ah! Good that you mentioned "setter".

[06:49] <Xliff> What I did in the ID method is pretty much the way you would implement get/set methods in Perl6.

[06:49] <Xliff> Proxy FETCH ==> gety

[06:49] <Elronnd> lookatme_q: ahh, that looks cleaner

[06:49] <Xliff> Proxy STORE ==> set

[06:51] <Xliff> m: role Token[::T] { has T $.id is rw ; }; my $inty = Token[Int].new(id => 123); $inty.id.say; $inty.id='A';

[06:51] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «123␤Type check failed in assignment to $!id; expected Int but got Str ("A")␤  in block <unit> at <tmp> line 1␤␤»

[06:51] <Xliff> m: role Token[::T] { has T $.id is rw ; }; my $inty = Token[Pair].new(); $inty.id = a => 1; $inty.id='A';

[06:51] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «Type check failed in assignment to $!id; expected Pair but got Str ("A")␤  in block <unit> at <tmp> line 1␤␤»

[06:51] <Xliff> m: role Token[::T] { has T $.id is rw ; }; my $inty = Token[Pair].new(); $inty.id = a => 1; $inty.id.say

[06:51] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: «a => 1␤»

[06:53] *** ryn1x joined
[06:54] *** p6bannerbot sets mode: +v ryn1x

[06:56] <Summertime> so, weird question, if you were "porting" perl's range/sequence syntaxes to python, how would you go about it?

[06:57] <Summertime> I'm thinking something like p6range(1, '..', 5) or the such, but it seems cumbersome

[06:59] <Xliff> That's about the best way you could do it, I think.

[07:01] *** zacts left
[07:05] *** kurahaupo_ left
[07:09] *** ryn1x left
[07:11] *** hythm_ left
[07:27] *** w_richard_w joined
[07:27] *** p6bannerbot sets mode: +v w_richard_w

[07:36] *** w_richard_w left
[07:36] *** shareable6 left
[07:38] *** shareable6 joined
[07:39] *** p6bannerbot sets mode: +v shareable6

[07:39] <Geth> ¦ DBIish: 5e3ef11430 | (Jonathan Stowe)++ | t/43-sqlite-threads.t

[07:39] <Geth> ¦ DBIish: Up the busy-timeout for multiple connections test

[07:39] <Geth> ¦ DBIish: 

[07:39] <Geth> ¦ DBIish: This started failing with 'database is locked' at some point

[07:39] <Geth> ¦ DBIish: for some systems.  It will only slow down the tests in those cases

[07:39] <Geth> ¦ DBIish: where it was going to fail anyway.

[07:39] <Geth> ¦ DBIish: 

[07:39] <Geth> ¦ DBIish: Fixes #136

[07:39] <Geth> ¦ DBIish: review: https://github.com/perl6/DBIish/commit/5e3ef11430

[07:50] *** dct joined
[07:50] *** p6bannerbot sets mode: +v dct

[08:01] *** jmerelo joined
[08:02] *** p6bannerbot sets mode: +v jmerelo

[08:15] <jmerelo> squashable6: status

[08:15] <squashable6> jmerelo, Next SQUASHathon in 11 days and ≈1 hour (2019-01-05 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[08:16] *** nadim joined
[08:17] *** p6bannerbot sets mode: +v nadim

[08:22] *** rindolf joined
[08:23] *** p6bannerbot sets mode: +v rindolf

[08:44] <Geth> ¦ doc/master: 4 commits pushed by (Richard Hainsworth)++, finanalyst++, (Juan Julián Merelo Guervós)++

[08:44] <Geth> ¦ doc/master: 10ba037079 | Merge pull request #2 from perl6/master

[08:44] <Geth> ¦ doc/master: 1e5db1ab68 | bump required Pod::To::HTML to 0.6.1

[08:44] <Geth> ¦ doc/master: c2acf4fea2 | Update README.md

[08:44] <Geth> ¦ doc/master: de2a6d58c3 | Merge pull request #2519 from finanalyst/master

[08:44] <Geth> ¦ doc/master: review: https://github.com/perl6/doc/compare/909627c51d70...de2a6d58c3a5

[08:45] <andrzejku_> lookatme_q hey

[08:51] *** kktt left
[08:58] <lookatme_q> andrzejku_, hey

[09:05] <Xliff> Is there a way to supress a linefeed in a heredoc?

[09:07] <timotimo> there's supposed to be a :chomp adverb, but you'll have to .chomp instead since it's NYI

[09:07] <Xliff> Yeah, that's what I've been doing for a while. Thanks.

[09:08] <Xliff> timotimo: Expect a PR for Cairo either today or tomorrow.

[09:08] <Xliff> :)

[09:08] <timotimo> \o/

[09:12] <Geth> ¦ DBIish: 71d97d49e7 | (Jonathan Stowe)++ | t/36-pg-enum.t

[09:12] <Geth> ¦ DBIish: Quieten non-problematic worry in t/36-pg-enum.t

[09:12] <Geth> ¦ DBIish: 

[09:12] <Geth> ¦ DBIish: We were getting:

[09:12] <Geth> ¦ DBIish: 

[09:12] <Geth> ¦ DBIish: 	Potential difficulties:

[09:12] <Geth> ¦ DBIish: 	    No values supplied to enum (does @options need to be declared constant?)

[09:12] <Geth> ¦ DBIish: 	    at /home/jonathan/devel/perl6/3rdparty-modules/DBIish/t/36-pg-enum.t:74

[09:12] <Geth> ¦ DBIish: <…commit message has 11 more lines…>

[09:12] <Geth> ¦ DBIish: review: https://github.com/perl6/DBIish/commit/71d97d49e7

[09:21] *** robertle left
[09:22] *** robertle joined
[09:23] *** p6bannerbot sets mode: +v robertle

[09:26] *** domidumont joined
[09:27] *** p6bannerbot sets mode: +v domidumont

[09:34] *** kurahaupo joined
[09:34] *** p6bannerbot sets mode: +v kurahaupo

[09:35] *** i1nfusion left
[09:37] *** i1nfusion joined
[09:38] *** p6bannerbot sets mode: +v i1nfusion

[10:04] *** lizmat joined
[10:04] *** p6bannerbot sets mode: +v lizmat

[10:06] *** lordblackadder joined
[10:06] *** p6bannerbot sets mode: +v lordblackadder

[10:07] * lizmat clickbaits https://p6weekly.wordpress.com/2018/12/24/2018-52-three-years-later/

[10:07] *** lordblackadder left
[10:08] *** kurahaupo left
[10:08] *** kurahaupo joined
[10:08] *** p6bannerbot sets mode: +v kurahaupo

[10:20] *** sena_kun joined
[10:21] *** p6bannerbot sets mode: +v sena_kun

[10:22] *** kurahaupo left
[10:22] *** kurahaupo_ joined
[10:22] *** p6bannerbot sets mode: +v kurahaupo_

[10:28] *** kurahaupo_ left
[10:28] *** kurahaupo joined
[10:29] *** scovit joined
[10:29] *** p6bannerbot sets mode: +v kurahaupo

[10:30] *** p6bannerbot sets mode: +v scovit

[10:50] *** scovit left
[10:52] *** i1nfusion left
[10:54] *** i1nfusion joined
[10:55] *** p6bannerbot sets mode: +v i1nfusion

[11:03] *** i1nfusion left
[11:05] *** i1nfusion joined
[11:06] *** p6bannerbot sets mode: +v i1nfusion

[11:16] <Juerd> Hi lizmat :)

[11:16] <Juerd> m: say qq{{ 16.sqrt }}

[11:16] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: « 16.sqrt ␤»

[11:16] *** zacts joined
[11:16] *** p6bannerbot sets mode: +v zacts

[11:16] <Juerd> m: say qq{ { 16.sqrt } }

[11:16] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: « { 16.sqrt } ␤»

[11:17] <Juerd> m: say qq[ { 16.sqrt } ]

[11:17] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: « 4 ␤»

[11:17] <Juerd> Is this a bug or intended?

[11:18] *** jmerelo left
[11:47] <timotimo> S02-literals/misc-interpolation.t:is(qq{a{chr 98}c}, 'a{chr 98}c', "curly brace delimiters interfere with closure interpolation");

[11:47] <timotimo> there is a test for this

[11:48] <timotimo> so it's at least specified to behave like this

[11:50] *** daotoad left
[11:50] <timotimo> Juerd: does that help?

[12:06] *** ChoHag joined
[12:07] *** p6bannerbot sets mode: +v ChoHag

[12:08] *** zacts left
[12:11] *** dct left
[12:23] *** rindolf left
[12:34] <lizmat> m: say qq:c{ { 16.sqrt } }   # one could argue that this should show " 4 "

[12:34] <camelia> rakudo-moar 83f0fd6c9: OUTPUT: « { 16.sqrt } ␤»

[12:50] *** kurahaupo_ joined
[12:51] *** p6bannerbot sets mode: +v kurahaupo_

[12:51] *** Manifest0 left
[12:53] *** kurahaupo left
[12:55] *** rindolf joined
[12:56] *** p6bannerbot sets mode: +v rindolf

[12:57] *** Manifest0 joined
[12:58] *** p6bannerbot sets mode: +v Manifest0

[12:59] *** domidumont left
[13:00] <Juerd> timotimo: Ah, in that case I'll file a doc bug. Thanks :)

[14:12] *** evalable6 left
[14:14] *** evalable6 joined
[14:14] *** ChanServ sets mode: +v evalable6

[14:15] *** p6bannerbot sets mode: +v evalable6

[14:18] *** ChoHag left
[14:39] *** eater left
[14:40] *** domidumont joined
[14:41] *** p6bannerbot sets mode: +v domidumont

[14:55] *** kurahaupo_ is now known as kurahaupo

[14:55] *** pmurias joined
[14:55] *** p6bannerbot sets mode: +v pmurias

[15:08] *** domidumont left
[15:14] <buggable> New CPAN upload: StrictClass-0.0.2.tar.gz by UFOBAT https://cpan.metacpan.org/authors/id/U/UF/UFOBAT/Perl6/StrictClass-0.0.2.tar.gz

[15:40] *** Sgeo left
[15:40] *** Sgeo joined
[15:41] *** eater joined
[15:41] *** p6bannerbot sets mode: +v Sgeo

[15:41] *** p6bannerbot sets mode: +v eater

[15:50] *** leont joined
[15:51] *** p6bannerbot sets mode: +v leont

[16:03] *** ryn1x joined
[16:04] *** p6bannerbot sets mode: +v ryn1x

[16:11] <leont> When I load a module, that loads my module TAP.pm, I get a «Cannot look up attributes in a NQPMu type object» error from the guts of rakudo.

[16:11] <leont> This is a weird error

[16:11] <timotimo> yeah, that'd be weird

[16:11] <timotimo> something very null-ish is coming somewhere it's not expected

[16:12] <timotimo> any outdated precomp or something that could be to blame?

[16:12] <timotimo> can you reliably reproduce it?

[16:14] <leont> I can reliably reproduce it, with and without precomp

[16:14] <leont> Ah, it appears to be caused by this line: my &colored = try { EVAL q{ use Terminal::ANSIColor; &colored } } // sub ($text, $) { $text }

[16:14] <leont> If I eliminate the try { EVAL }, the error goes away

[16:15] <timotimo> https://rakudo.org/post/lexical-require-upgrade-info

[16:15] <timotimo> it's much easier to get this to work :)

[16:16] <leont> Yeah, that does solve the problem :-)

[16:16] <timotimo> would probably be interesting to find out what causes the issue, though

[16:18] *** aindilis left
[16:27] <timotimo> btw what do we have to do for perl6 scripts to show up with much less words in ps and friends?

[16:29] <leont> Fixing that is one of those very non-portable things

[16:29] <timotimo> it'd be good enough if it only works on my machines :D

[16:39] <nadim> "Bogus postfix" what a lovely error message!

[16:39] <leont> I'm not sure how I would get the colored subroutine the way that link recommends though

[16:40] <leont> Though in this case, I guess «try { require Terminal::ANSIColor; &colored }» is good enough

[16:42] <timotimo> i suppose

[16:44] * timotimo AFKBBL

[16:45] <leont> Just worried it will break again. This like has a history of being fragile :-/

[16:52] <leont> Oh, it actually doesn't work. It just doesn't crash

[16:57] *** moony left
[16:57] *** moony joined
[16:57] *** p6bannerbot sets mode: +v moony

[17:06] *** i1nfusion left
[17:08] *** i1nfusion joined
[17:09] *** p6bannerbot sets mode: +v i1nfusion

[17:14] <leont> Anyone able to tell me how to "try to load a module, and use a subroutine from it if successful"

[17:16] *** ryn1x left
[17:20] *** bSsdtfrG joined
[17:20] *** p6bannerbot sets mode: +v bSsdtfrG

[17:20] <bSsdtfrG> leont: https://github.com/zoffixznet/perl6-IRC-Client/blob/master/lib/IRC/Client.pm6#L25-L29

[17:20] <bSsdtfrG> leont: it's possible it can be simplified...

[17:21] <leont> That is … not optimal

[17:24] *** zacts joined
[17:24] *** p6bannerbot sets mode: +v zacts

[17:24] *** bSsdtfrG left
[17:24] <leont> The not serializing exceptions bit doesn't make it better (I assume that's about precomp)

[17:57] <nadim> hi, if I define a set of regex:  regex A { \s*} ; regex B { <A> abc} ; is there a whay to declare them the other way around? 

[18:01] *** i1nfusion left
[18:03] *** i1nfusion joined
[18:04] *** p6bannerbot sets mode: +v i1nfusion

[18:20] *** dct joined
[18:20] *** p6bannerbot sets mode: +v dct

[18:38] *** regreg joined
[18:39] *** p6bannerbot sets mode: +v regreg

[18:50] *** mowcat joined
[18:50] *** Xliff left
[18:51] *** p6bannerbot sets mode: +v mowcat

[18:51] *** zacts left
[18:54] *** Xliff joined
[18:55] *** p6bannerbot sets mode: +v Xliff

[19:10] *** sergot joined
[19:11] *** mowcat left
[19:11] *** p6bannerbot sets mode: +v sergot

[19:12] *** mowcat joined
[19:13] *** p6bannerbot sets mode: +v mowcat

[19:13] *** mowcat left
[19:22] *** mowcat joined
[19:23] *** p6bannerbot sets mode: +v mowcat

[19:25] <pmurias> what should the be the default endiannes of rakudo.js? like if you pass NativeEndian to write-int?

[19:28] <leont> little-endian has won, for better or worse

[19:29] *** dct left
[20:27] *** molaf joined
[20:27] *** p6bannerbot sets mode: +v molaf

[20:31] *** zacts joined
[20:31] *** p6bannerbot sets mode: +v zacts

[20:41] *** zacts left
[20:54] <SmokeMachine> pmurias: hi! do you know why is it broken? https://travis-ci.org/FCO/MemoizedDOM/jobs/471501335

[20:55] <pmurias> SmokeMachine: hi

[20:55] <pmurias> SmokeMachine: looking

[20:56] <pmurias> SmokeMachine: that doesn't look like a rakudo.js bug

[20:57] <pmurias> SmokeMachine: in the provides section you map MeomizedDOM to a directory not MemoizedDOM.pm6

[20:57] <SmokeMachine> really?! sorry for that...

[20:58] <SmokeMachine> fixing...

[20:59] <SmokeMachine> pmurias: sorry, Im  a little out of attention...

[21:16] <pmurias> SmokeMachine: np

[21:21] *** sena_kun left
[21:30] <nadim> the error message uses colors but the stack trace doesn't, when the lines wrap I find it pretty difficult to read (I am getting old I guess), any way to fix that except wrapping it a shell script that colors the output? 

[21:36] *** i1nfusion left
[21:38] *** i1nfusion joined
[21:38] *** p6bannerbot sets mode: +v i1nfusion

[21:44] <SmokeMachine> pmurias: Have you seen the `is bonded` trait of MemoizedDOM? https://github.com/FCO/MemoizedDOM/blob/master/t/02-trait.t#L7

[21:44] <SmokeMachine> s/bonded/binded/

[21:44] <timotimo> pmurias: is there a simple instruction for how to add modules to a rakudo-js, and also a 6pad perhaps?

[21:48] <SmokeMachine> timotimo: take a look at MemoizedDOM... we have separated it into different files and it seems to work...

[21:49] <SmokeMachine> timotimo: https://github.com/FCO/MemoizedDOM/tree/master/examples/todo

[21:55] <timotimo> OK, tbh i have no clue what part of the machinery does what :)

[21:55] <timotimo> m: regex A { … }; regex B { <A> abc }; regex A { \s* }; say "    abc" ~~ A

[21:55] <camelia> rakudo-moar 4fc7bef2c: OUTPUT: «5===SORRY!5===␤Unrecognized regex metacharacter … (must be quoted to match literally)␤at <tmp>:1␤------> 3regex A {7⏏5 … }; regex B { <A> abc }; regex A { \s*␤Unrecognized regex metacharacter   (must be quoted to match literally)…»

[21:55] <timotimo> m: regex B { <A> abc }; regex A { \s* }; say "    abc" ~~ A

[21:55] <camelia> rakudo-moar 4fc7bef2c: OUTPUT: «5===SORRY!5===␤Undeclared name:␤    A used at line 1␤␤Other potential difficulties:␤    Useless declaration of a has-scoped method in mainline (did you mean 'my regex B'?)␤    at <tmp>:1␤    ------> 3regex 7⏏5B { <A> abc }; rege…»

[21:56] <timotimo> m: regex B { <&A> abc }; regex A { \s* }; say "    abc" ~~ A

[21:56] <camelia> rakudo-moar 4fc7bef2c: OUTPUT: «5===SORRY!5===␤Undeclared name:␤    A used at line 1␤␤Other potential difficulties:␤    Useless declaration of a has-scoped method in mainline (did you mean 'my regex B'?)␤    at <tmp>:1␤    ------> 3regex 7⏏5B { <&A> abc }; reg…»

[21:56] <timotimo> m: my regex B { <&A> abc }; my regex A { \s* }; say "    abc" ~~ A

[21:56] <camelia> rakudo-moar 4fc7bef2c: OUTPUT: «===SORRY!===␤Cannot find method 'match': no method cache and no .^find_method␤»

[21:56] <timotimo> m: my regex B { <A> abc }; my regex A { \s* }; say "    abc" ~~ A

[21:56] <camelia> rakudo-moar 4fc7bef2c: OUTPUT: «===SORRY!===␤Cannot find method 'match': no method cache and no .^find_method␤»

[21:56] <timotimo> well, that's not how

[22:01] <pmurias> timotimo: https://github.com/FCO/MemoizedDOM/blob/master/examples/todo/.rakudorc

[22:01] <pmurias> that addes a -I

[22:02] <pmurias> timotimo: this teaches parcel how to compile a .p6 file https://github.com/FCO/MemoizedDOM/blob/master/examples/todo/package.json#L8 

[22:04] <SmokeMachine> .tell jnthn thanks for your issue on Red! That's a great idea!

[22:04] <yoleaux> SmokeMachine: I'll pass your message to jnthn.

[22:08] <pmurias> timotimo: I don't have support for running properly installed modules in rakudo.js yet :(

[22:09] <timotimo> how about improperly installed modules? :) :)

[22:12] <SmokeMachine> .tell jnthn sorry, wrong Jonathan! :)

[22:12] <yoleaux> SmokeMachine: I'll pass your message to jnthn.

[22:14] <pmurias> timotimo: you can copy their files to a directory and the -Ilib that with .rakudorc 

[22:15] <pmurias> timotimo: I haven't focues on the rakudo.js experience yet much :(

[22:15] <pmurias> trying to get more roast tests to pass in browser currently

[22:16] <timotimo> that's okay

[22:17] <SmokeMachine> pmurias: I don't remember if I have asked: .rakudorc is rakudo.js only thing?

[22:17] <pmurias> SmokeMachine: yes

[22:18] <pmurias> It's very likely I should document it ;)

[22:19] <pmurias> SmokeMachine: currently it's just a way to pass a -Ilib

[22:19] <pmurias> maybe it should be called .rakudojsrc

[22:19] <timotimo> so i expect 6pad will expose other files in the gist so they can be used if there's an -I. ?

[22:22] <pmurias> timotimo: there isn't a way to expose other files in 6pad :/

[22:23] <pmurias> timotimo: 6pad works by passing code to a simple perl 6 script that EVALs it

[22:24] <pmurias> but getting 6pad to read the other files shouldn't be super hard

[22:25] <pmurias> timotimo: I'll get some sleep and look into it more tommorow as I'm not really thinking clearly enough at the moment to write docs

[22:26] <timotimo> that's okay, feel free to do this in a week or two

[22:36] *** molaf left
[22:41] *** rindolf left
[22:43] *** ryn1x joined
[22:43] *** p6bannerbot sets mode: +v ryn1x

[22:44] <buggable> New CPAN upload: TAP-0.0.5.tar.gz by LEONT http://modules.perl6.org/dist/TAP::Harness:cpan:LEONT

[22:50] <pmurias> timotimo: I hate to disapoint people who want to use 6pad/rakudo.js but I want to get all stuff in grant deliverable to pass ;)

[22:55] <leont> I think I fudged that upload :-/

[22:58] *** i1nfusion left
[23:00] *** i1nfusion joined
[23:01] *** p6bannerbot sets mode: +v i1nfusion

[23:03] *** ryn1x left
[23:14] *** uzl joined
[23:15] *** p6bannerbot sets mode: +v uzl

[23:17] *** uzl left
[23:21] *** uzl joined
[23:21] *** aindilis joined
[23:22] *** p6bannerbot sets mode: +v uzl

[23:22] *** p6bannerbot sets mode: +v aindilis

[23:22] *** uzl left
[23:24] *** uzl joined
[23:25] *** p6bannerbot sets mode: +v uzl

[23:25] <uzl> anybody here?

[23:25] <yoleaux> 23 Dec 2018 07:05Z <jmerelo> uzl: great! Now just schedule it at Wordpress and you're good to go!

[23:26] <AlexDaniel> o/

[23:27] <uzl> hey, AlexDaniel!

[23:27] <uzl> AlexDaniel: To what timezone is the P6 Advent WP set?

[23:28] <AlexDaniel> uzl: I really don't know, but I think it works based on your timezone

[23:28] <AlexDaniel> so I'm in UTC+2 and I had to schedule it for 02:00 AM

[23:29] <AlexDaniel> the `advent` doc says

[23:29] <AlexDaniel> “I would please ask everyone to have their article ready at least one day in advance. The site is programmed for Madrid's time, please schedule it for 00:01 the day you have assigned.”

[23:29] <AlexDaniel> but that's likely wrong

[23:30] <AlexDaniel> I think the person writing the doc was in Spain, that's why :)

[23:30] <uzl> I'm in UTC-5 (still the 24th here) and I just my post was published!

[23:31] <uzl> That's fine by me if it doesn't cause any problem.

[23:32] <AlexDaniel> uzl: yeah it's live, that's totally OK :)

[23:33] <uzl> AlexDaniel: Oh, great! I got somewhat scared that I've taken the 24th spot ;). 

[23:33] <uzl> AlexDaniel: Thanks and Happy Holidays!

[23:34] *** uzl left
[23:35] *** aindilis left
[23:36] *** aindilis joined
[23:37] <AlexDaniel> uzl: you too!

[23:37] *** p6bannerbot sets mode: +v aindilis

[23:44] <buggable> New CPAN upload: TAP-0.0.6.tar.gz by LEONT http://modules.perl6.org/dist/TAP::Harness:cpan:LEONT

