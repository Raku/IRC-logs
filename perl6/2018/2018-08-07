[00:02] *** wamba left
[00:21] *** Ishaq1 joined
[00:22] *** p6bannerbot sets mode: +v Ishaq1

[00:23] *** Xliff joined
[00:23] *** Ishaq1 left
[00:23] *** p6bannerbot sets mode: +v Xliff

[00:29] <Xliff> Can someone tell me why a call to the GTK::Widget version won't print "PSW" when called with nextwith -> https://github.com/Xliff/p6-GtkPlus/blob/master/lib/GTK/Box.pm6#L128

[00:31] <lookatme_q> This blog https://rakudo.party/post/Perl6-But-Heres-My-Dispatch-So-Callwith-Maybe will be helpful Xliff 

[00:32] *** olinkl joined
[00:32] *** p6bannerbot sets mode: +v olinkl

[00:34] <lookatme_q> Xliff, and this https://stackoverflow.com/questions/51239934/callwith-not-calling-other-candidates-what-are-other-candidates-is-it-exhaus

[00:35] <lookatme_q> https://stackoverflow.com/questions/49698773/what-are-callwith-and-samewith-supposed-to-do

[00:42] *** lindylex joined
[00:42] *** p6bannerbot sets mode: +v lindylex

[00:49] <Xliff> lookatme_q: Thanks!

[00:51] *** [particle]1 joined
[00:51] *** p6bannerbot sets mode: +v [particle]1

[00:52] *** [particle] left
[00:54] *** [particle] joined
[00:55] *** [particle]1 left
[00:55] *** p6bannerbot sets mode: +v [particle]

[00:56] <Xliff> lookatme_q: OK, so I've read through a few, and I'm still not grokking. 

[00:57] *** Kaiepi left
[00:59] <Xliff> OK. I am done. I think I will drink beer and maybe my muse will figure shiznit out for me.

[00:59] <lookatme_q> OK :)

[01:00] <Xliff> But if you have help to offer, I am listneing.

[01:00] <Xliff> Of course, listening... is not something I can spell rite

[01:00] <Xliff> The problem, as I can see it, is that the parameter is not GtkWidget.

[01:01] <Xliff> However, I am nativecasting the bloody thing, so I can't get why it doesn't work.

[01:01] <lookatme_q> what's the type of $child.widget ?

[01:02] *** [particle] left
[01:02] *** [particle] joined
[01:02] *** p6bannerbot sets mode: +v [particle]

[01:03] <Xliff> GtkWidget

[01:04] <lookatme_q> Have you tried samewith

[01:06] <lookatme_q> Xliff, or how to run the code

[01:06] <lookatme_q> I want have a try

[01:06] *** [particle] left
[01:07] <Xliff> Yeah, the problem is not only the GtkWidet. It's converting the Bool value to uint32, and Bool.Int isn't enough, it seems.

[01:07] <Xliff> Something tells me that I might need to do something drastic.

[01:08] *** [particle] joined
[01:08] <Xliff> I thought Int's should resolve properly to uint32/int32. but apparently I am mistaken.

[01:08] *** w_richard_w joined
[01:09] *** p6bannerbot sets mode: +v [particle]

[01:09] *** p6bannerbot sets mode: +v w_richard_w

[01:11] *** eliasr left
[01:11] <lookatme_q> Xliff, they are native type

[01:12] <Xliff> And? 

[01:12] <Xliff> How to resolve? Do I need to assign them to native containers and THEN pass?

[01:12] <Xliff> That becomes a bit of a problem.

[01:12] *** [particle] left
[01:13] <Xliff> Why can't Int just be passed to a uint/int/32/64?

[01:13] <lookatme_q> m: use NativeCall; my Int $a = 2; sub f(int32 $a) { say $a; }; f $a;

[01:13] <camelia> rakudo-moar f8b79306c: OUTPUT: «2␤»

[01:13] <lookatme_q> but seems like it can 

[01:13] <benjikun> they can

[01:13] <Xliff> That's the point. In that situation, they DO.

[01:13] <Xliff> However I am running into cases where they are not.

[01:14] <benjikun> what cases?

[01:14] *** [particle] joined
[01:14] <Xliff> samewith($child.widget, $expand.Int, $fill.Int, $padding);

[01:14] <lookatme_q> Xliff, so there still be something else wrong in the code

[01:14] <Xliff> Should pass to this sig: multi method pack_start (GtkWidget $child, uint32 $expand, uint32 $fill, guint $padding)

[01:14] <lookatme_q> Xliff, so how to run the test, I have fetch the code

[01:14] *** p6bannerbot sets mode: +v [particle]

[01:14] <Xliff> lookatme_q: perl6 -Ilib t/01-widget.t

[01:15] <lookatme_q> okay

[01:15] <lookatme_q> let me have a look

[01:15] <Xliff> Thanks!

[01:18] <lookatme_q> m: use NativeCall; my Int $a = 2; sub f(uint32 $a) { say $a; }; f $a;

[01:18] <camelia> rakudo-moar f8b79306c: OUTPUT: «2␤»

[01:21] *** Phanes joined
[01:21] *** Phanes left
[01:24] *** [particle] left
[01:27] *** [particle] joined
[01:28] *** p6bannerbot sets mode: +v [particle]

[01:28] *** astj joined
[01:29] *** p6bannerbot sets mode: +v astj

[01:30] <lookatme_q> m: use NativeCall; class Foo { multi method b(Bool $a) { say "BOol"; my uint32 $au = $a; samewith($au); }; multi method b(uint32 $a) { say "UINT32"; }; }; my $f = Foo.new; $f.b: True

[01:30] <camelia> rakudo-moar f8b79306c: OUTPUT: «BOol␤UINT32␤»

[01:30] <lookatme_q> m: use NativeCall; class Foo { multi method b(Bool $a) { say "BOol"; samewith($au.Int); }; multi method b(uint32 $a) { say "UINT32"; }; }; my $f = Foo.new; $f.b: True

[01:30] <camelia> rakudo-moar f8b79306c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$au' is not declared. Did you mean 'tau'?␤at <tmp>:1␤------> 3ethod b(Bool $a) { say "BOol"; samewith(7⏏5$au.Int); }; multi method b(uint32 $a) {␤»

[01:30] <lookatme_q> Xliff, so they not support that in method

[01:31] <lookatme_q> or caused by something else

[01:31] *** [particle] left
[01:31] <lookatme_q> m: use NativeCall; class Foo { multi method b(Bool $a) { say "BOol"; samewith(my uint32 $ = $au); }; multi method b(uint32 $a) { say "UINT32"; }; }; my $f = Foo.new; $f.b: True

[01:31] <camelia> rakudo-moar f8b79306c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable '$au' is not declared. Did you mean 'tau'?␤at <tmp>:1␤------> 3a) { say "BOol"; samewith(my uint32 $ = 7⏏5$au); }; multi method b(uint32 $a) { say␤»

[01:31] <lookatme_q> m: use NativeCall; class Foo { multi method b(Bool $a) { say "BOol"; samewith(my uint32 $ = $a); }; multi method b(uint32 $a) { say "UINT32"; }; }; my $f = Foo.new; $f.b: True

[01:31] <camelia> rakudo-moar f8b79306c: OUTPUT: «BOol␤Cannot resolve caller b(Foo: Int); none of these signatures match:␤    (Foo: Bool $a, *%_)␤    (Foo: uint32 $a, *%_)␤  in method b at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[01:31] <lookatme_q> m: use NativeCall; class Foo { multi method b(Bool $a) { say "BOol"; samewith($a.Int); }; multi method b(uint32 $a) { say "UINT32"; }; }; my $f = Foo.new; $f.b: True

[01:31] <camelia> rakudo-moar f8b79306c: OUTPUT: «BOol␤Cannot resolve caller b(Foo: Int); none of these signatures match:␤    (Foo: Bool $a, *%_)␤    (Foo: uint32 $a, *%_)␤  in method b at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[01:33] <lookatme_q> And actually they said we can use `my uint32 $ = $a` create a uint32 pass to the method, but seems like they not fix that yet

[01:34] <lookatme_q> my gboolean ($expand_, $fill_, $padding_) = ($expand, $fill, $padding); samewith($child.widget, $expand_, $fill_, $padding_);

[01:34] <lookatme_q> Xliff, anyway this will be work, but they cause the test failed with MoarVm panic

[01:35] <lookatme_q> oh, I used the wrong type for $padding_

[01:36] <timotimo> was it chocolate or vanilla?

[01:36] <Xliff> LOL!

[01:36] <Xliff> lookatme_q+_

[01:36] <Xliff> lookatme_q++ # Oops!

[01:36] <Xliff> I will look into that.

[01:36] <lookatme_q> Okay :)

[01:37] <lookatme_q> have to do work now

[01:37] <Xliff> kk

[01:37] <Xliff> Thanks for the help!

[01:45] <benjikun> https://en.wikipedia.org/wiki/Enumerated_type#Perl_6

[01:45] <benjikun> See if you guys want to change/add anything to that

[01:46] <benjikun> There are a few articles on wikipedia that don't include Perl6 as programming examples

[01:47] <benjikun> I'll compile a list of wikipedias that should include Perl6 examples that we can add to

[01:49] <lookatme_q> I don't like the design of enum in Perl6 :/

[01:49] <benjikun> What's wrong with it?

[01:49] <benjikun> I think it was an afterthought sorta

[01:50] <geekosaur> there's some known warts

[01:51] <lookatme_q> hmm

[01:52] <lookatme_q> m: enum Foo < A B C >; enum Bar < A B C>; 

[01:52] <camelia> rakudo-moar f8b79306c: OUTPUT: «Potential difficulties:␤    Redeclaration of symbol 'A, B and C'␤    at <tmp>:1␤    ------> 3enum Foo < A B C >; enum Bar < A B C>7⏏5;␤»

[01:52] <lookatme_q> so you get the error

[01:52] <lookatme_q> But I just want to using them like Foo::A or Bar::A

[01:52] <geekosaur> that's a warning, though.

[01:53] <geekosaur> m: enum Foo < A B C >; enum Bar < A B C>;  say Bar::B

[01:53] <camelia> rakudo-moar f8b79306c: OUTPUT: «Potential difficulties:␤    Redeclaration of symbol 'A, B and C'␤    at <tmp>:1␤    ------> 3enum Foo < A B C >; enum Bar < A B C>7⏏5;  say Bar::B␤B␤»

[01:53] <lookatme_q> though I have a skill about that :)

[01:53] <geekosaur> note that it actually did the 'say' afterward

[01:53] <lookatme_q> m: class Foo { enum < A B C >; }; class Bar { enum < A B C >; }; say Foo::A; say Bar::A;

[01:53] <camelia> rakudo-moar f8b79306c: OUTPUT: «A␤A␤»

[01:54] <benjikun> https://pastecode.xyz/view/5a4e619d

[01:54] <benjikun> Here are the places I've found that need Perl6 examples

[01:54] <geekosaur> m: no worries; enum Foo < A B C >; enum Bar < A B C>;  say Bar::B

[01:54] <camelia> rakudo-moar f8b79306c: OUTPUT: «B␤»

[01:55] <lookatme_q> but why raised an warning ?

[01:55] <lookatme_q> :/ not know that

[01:55] <geekosaur> because if you do 'say B' it won't know which one to use

[01:55] <geekosaur> and if you'd done so, that would raise an actual error

[01:55] <lookatme_q> I won't using `say B`

[01:55] <geekosaur> so it warns you about the conflict, but you can use 'no worries' to suppress it

[01:56] <lookatme_q> only suppress that warning ?

[01:57] <benjikun> It doesn't mess anything up

[01:57] <geekosaur> you'd need to scope it to only suppress that one, I think

[01:57] <geekosaur> m: { no worries; enum Foo < A B C >; enum Bar < A B C>;  } say Bar::B

[01:57] <camelia> rakudo-moar f8b79306c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Strange text after block (missing semicolon or comma?)␤at <tmp>:1␤------> 3num Foo < A B C >; enum Bar < A B C>;  }7⏏5 say Bar::B␤    expecting any of:␤        infix␤        infix stoppe…»

[01:58] <geekosaur> m: { no worries; enum Foo < A B C >; enum Bar < A B C>;  }; say Bar::B

[01:58] <camelia> rakudo-moar f8b79306c: OUTPUT: «B␤»

[01:58] *** Peng_26 joined
[01:58] <geekosaur> m: { no worries; enum Foo < A B C >; enum Bar < A B C>;  }; enum Baz <A B C>; say Bar::B

[01:58] <camelia> rakudo-moar f8b79306c: OUTPUT: «B␤»

[01:58] <geekosaur> ...that's escaping its scope. sigh

[01:58] <lookatme_q> seems like better

[01:58] *** p6bannerbot sets mode: +v Peng_26

[01:59] * geekosaur wanted to get a warning from Baz but not Bar. so 'no worries' escapes its scope.

[02:01] <lookatme_q> m: { no worries; enum Foo < A B C >; enum Bar < A B C>;  }; say ::.keys;

[02:01] <camelia> rakudo-moar f8b79306c: OUTPUT: «(GLOBALish $?PACKAGE $_ $/ $=pod $¢ $! $=finish EXPORT !UNIT_MARKER ::?PACKAGE)␤»

[02:01] <lookatme_q> m: enum Foo < A B C >; enum Bar < A B C>; say ::.keys;

[02:01] <camelia> rakudo-moar f8b79306c: OUTPUT: «Potential difficulties:␤    Redeclaration of symbol 'A, B and C'␤    at <tmp>:1␤    ------> 3enum Foo < A B C >; enum Bar < A B C>7⏏5; say ::.keys;␤(::?PACKAGE $¢ $=pod C A $?PACKAGE Foo B EXPORT Bar !UNIT_MARKER $_ $=finish GLOBALish $…»

[02:01] <geekosaur> hm, or the unqualified names are scoped to the braces, so no conflict. which would be another wart if the qualified names do so escape

[02:01] <lookatme_q> m: enum Foo < A B C >; enum Bar < B A C>; say Bar::B.Int;

[02:01] <camelia> rakudo-moar f8b79306c: OUTPUT: «Potential difficulties:␤    Redeclaration of symbol 'B, A and C'␤    at <tmp>:1␤    ------> 3enum Foo < A B C >; enum Bar < B A C>7⏏5; say Bar::B.Int;␤0␤»

[02:02] <lookatme_q> that's better, but I still think it's not a good design, which export the enum variable to out side

[02:04] *** Peng_26 left
[02:09] <geekosaur> many expect that, though, especially if they are used to C enums

[02:10] <benjikun> True

[02:10] <benjikun> But everything else I've encountered in Perl6 is supposed to be highlevel and DWIW

[02:20] *** benjikun left
[02:25] *** danielhuman joined
[02:25] *** danielhuman left
[02:30] *** AlexDaniel joined
[02:30] *** p6bannerbot sets mode: +v AlexDaniel

[02:31] *** AlexDaniel left
[02:31] *** AlexDaniel joined
[02:31] *** barjavel.freenode.net sets mode: +v AlexDaniel

[02:31] *** p6bannerbot sets mode: +v AlexDaniel

[02:31] *** lindylex left
[02:35] *** kerframil left
[03:03] *** benjikun joined
[03:04] *** p6bannerbot sets mode: +v benjikun

[03:09] *** Kaiepi joined
[03:09] *** p6bannerbot sets mode: +v Kaiepi

[03:11] *** Frosty13 joined
[03:11] *** p6bannerbot sets mode: +v Frosty13

[03:12] *** Frosty13 left
[03:19] *** FROGGS left
[03:19] *** FROGGS joined
[03:20] *** FROGGS left
[03:20] *** FROGGS joined
[03:21] *** p6bannerbot sets mode: +v FROGGS

[03:21] *** benjikun left
[03:22] *** spycrab0 left
[03:28] *** FROGGS left
[03:29] *** FROGGS joined
[03:29] *** p6bannerbot sets mode: +v FROGGS

[03:32] *** FROGGS left
[03:32] *** FROGGS joined
[03:33] *** khandielas joined
[03:33] *** p6bannerbot sets mode: +v khandielas

[03:33] *** p6bannerbot sets mode: +v FROGGS

[03:40] *** [particle] joined
[03:40] *** p6bannerbot sets mode: +v [particle]

[03:42] *** FROGGS left
[03:42] *** FROGGS joined
[03:43] *** p6bannerbot sets mode: +v FROGGS

[03:45] *** FROGGS left
[03:46] *** FROGGS joined
[03:46] *** p6bannerbot sets mode: +v FROGGS

[03:59] <Geth> ¦ ecosystem: d0c6518a2a | 0racle++ (committed using GitHub Web editor) | META.list

[03:59] <Geth> ¦ ecosystem: Remove deprecated module

[03:59] <Geth> ¦ ecosystem: 

[03:59] <Geth> ¦ ecosystem: Pod::To::Markdown::Fenced is obsolete and deprecated. It's functionality is now available in Pod::To::Markdown.

[03:59] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/d0c6518a2a

[04:09] *** vrurg left
[04:26] *** fk_ joined
[04:26] *** SailorHaumea19 joined
[04:27] *** SailorHaumea19 left
[04:27] *** p6bannerbot sets mode: +v fk_

[04:35] *** fk_ left
[04:36] *** TreyHarris left
[04:42] *** vrurg joined
[04:43] *** p6bannerbot sets mode: +v vrurg

[04:45] *** khandielas left
[04:50] *** TreyHarris joined
[04:50] *** p6bannerbot sets mode: +v TreyHarris

[04:55] *** curan joined
[04:55] *** p6bannerbot sets mode: +v curan

[05:05] *** FROGGS left
[05:06] *** FROGGS joined
[05:06] *** p6bannerbot sets mode: +v FROGGS

[05:07] *** w_richard_w left
[05:08] *** w_richard_w joined
[05:09] *** w_richard_w left
[05:09] *** w_richard_w joined
[05:09] *** p6bannerbot sets mode: +v w_richard_w

[05:10] *** p6bannerbot sets mode: +v w_richard_w

[05:27] *** spycrab0 joined
[05:27] *** p6bannerbot sets mode: +v spycrab0

[05:28] *** sauvin joined
[05:28] *** p6bannerbot sets mode: +v sauvin

[05:30] *** w_richard_w left
[05:30] *** w_richard_w joined
[05:31] *** p6bannerbot sets mode: +v w_richard_w

[05:33] *** DarthGandalf left
[05:37] *** troys left
[05:44] *** CIAvash joined
[05:45] *** p6bannerbot sets mode: +v CIAvash

[05:50] *** Maple__21 joined
[05:51] *** p6bannerbot sets mode: +v Maple__21

[05:51] *** FROGGS left
[05:51] <tyil> .tell benjikun are you the Benji from the ML to poke about the user survey?

[05:51] <yoleaux> tyil: I'll pass your message to benjikun.

[05:52] *** FROGGS joined
[05:52] *** Maple__21 left
[05:52] *** p6bannerbot sets mode: +v FROGGS

[05:53] *** __idiot__ joined
[05:53] *** p6bannerbot sets mode: +v __idiot__

[05:54] *** FROGGS left
[05:54] *** FROGGS joined
[05:55] *** p6bannerbot sets mode: +v FROGGS

[05:57] *** __idiot__ left
[06:07] *** robertle joined
[06:08] *** p6bannerbot sets mode: +v robertle

[06:18] *** FROGGS left
[06:18] *** FROGGS joined
[06:19] *** p6bannerbot sets mode: +v FROGGS

[06:33] *** Kaiepi left
[06:40] *** jmerelo joined
[06:40] *** p6bannerbot sets mode: +v jmerelo

[06:41] *** FROGGS left
[06:41] *** FROGGS joined
[06:42] *** p6bannerbot sets mode: +v FROGGS

[06:44] *** Kaiepi joined
[06:44] <Geth> ¦ doc: 884b443a0a | Moray++ | 44 files

[06:44] <Geth> ¦ doc: Sentence case for titles/subtitles/heads in Language docs

[06:44] <Geth> ¦ doc: 

[06:44] <Geth> ¦ doc: Changes a number of different heading types into sentence case in the Language documents.

[06:44] <Geth> ¦ doc: 

[06:44] <Geth> ¦ doc: Only worked on strings and not on generated strings.

[06:44] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/884b443a0a

[06:44] <Geth> ¦ doc: 9087e95ef0 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | 44 files

[06:44] <Geth> ¦ doc: Merge pull request #2241 from MorayJ/sentenceCasing

[06:45] <Geth> ¦ doc: 

[06:45] <Geth> ¦ doc: Sentence case for titles/subtitles/heads in Language docs. Closes #2223

[06:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9087e95ef0

[06:45] *** p6bannerbot sets mode: +v Kaiepi

[06:46] *** Connection joined
[06:47] *** p6bannerbot sets mode: +v Connection

[06:48] *** Connection left
[06:50] <jmerelo> Hi!

[06:54] <Geth> ¦ ecosystem-unbitrot: JJ self-assigned Task::Noise https://github.com/perl6/ecosystem-unbitrot/issues/48

[06:55] *** Ellenor9 joined
[06:55] *** p6bannerbot sets mode: +v Ellenor9

[06:56] *** Ellenor9 left
[07:06] *** O-dog1 joined
[07:07] *** O-dog1 left
[07:10] *** rindolf joined
[07:11] *** p6bannerbot sets mode: +v rindolf

[07:14] *** dakkar joined
[07:15] *** p6bannerbot sets mode: +v dakkar

[07:18] <jmerelo> .seen mziescha

[07:18] <yoleaux> I saw mziescha 18 Dec 2017 21:17Z in #perl6: <mziescha> Ok thanks for your help :-)

[07:20] <masak> famous last words

[07:24] *** sena_kun joined
[07:25] *** p6bannerbot sets mode: +v sena_kun

[07:29] *** ToddAndMargo joined
[07:29] *** p6bannerbot sets mode: +v ToddAndMargo

[07:30] <ToddAndMargo> Hi All,  I am truing to convert a string into an array of integers.  What am I doing wrong?

[07:30] <ToddAndMargo> p6 'my Str $x = "1\n22\n333\n"; my Int @y; @y = ( split "\n", $x ) + 0; for @y -> $i {say $i;}'  4

[07:31] <lookatme_q> m: my Str $x = "1\n22\n333\n"; my Int @y; @y = ( split "\n", $x )>>.Int; for @y -> $i {say $i;}

[07:31] <camelia> rakudo-moar f8b79306c: OUTPUT: «1␤22␤333␤0␤»

[07:31] <lookatme_q> ToddAndMargo, ^^^

[07:31] <lookatme_q> using hyper operator >>

[07:32] <lookatme_q> and you maybe not want the last 0

[07:32] <lookatme_q> m: my Str $x = "1\n22\n333\n"; my Int @y; @y = ( split "\n", $x, :skip-empty )>>.Int; for @y -> $i {say $i;}

[07:32] <camelia> rakudo-moar f8b79306c: OUTPUT: «1␤22␤333␤»

[07:33] <ToddAndMargo> Cool!  Thank you!

[07:33] <lookatme_q> Welcome :)

[07:35] *** w_richard_w left
[07:36] *** ToddAndMargo left
[07:36] *** DarthGandalf joined
[07:36] *** p6bannerbot sets mode: +v DarthGandalf

[07:40] *** duckgoose4 joined
[07:41] *** duckgoose4 left
[07:45] *** ChoHag left
[07:46] <masak> m: my Str $x = "1\n22\n333\n"; my Int @y = $x.words>>.Int; say @y

[07:46] <camelia> rakudo-moar f8b79306c: OUTPUT: «[1 22 333]␤»

[07:47] *** haxmeister left
[07:47] *** alexghacker left
[07:47] *** alexghacker joined
[07:48] *** p6bannerbot sets mode: +v alexghacker

[07:56] *** ChoHag joined
[07:57] *** p6bannerbot sets mode: +v ChoHag

[07:58] *** zakharyas joined
[07:59] *** p6bannerbot sets mode: +v zakharyas

[08:05] *** Ven` joined
[08:06] *** p6bannerbot sets mode: +v Ven`

[08:07] *** dakkar left
[08:20] *** dakkar joined
[08:20] *** p6bannerbot sets mode: +v dakkar

[08:45] *** w_richard_w joined
[08:45] *** p6bannerbot sets mode: +v w_richard_w

[09:00] *** CIAvash left
[09:09] *** w_richard_w left
[09:10] *** nightfrog joined
[09:11] *** p6bannerbot sets mode: +v nightfrog

[09:12] *** mrDSide joined
[09:13] *** p6bannerbot sets mode: +v mrDSide

[09:13] *** mrDSide is now known as __mrDSide__

[09:13] *** __mrDSide__ is now known as mrDSide

[09:14] *** mrDSide is now known as __mrDSide__

[09:14] *** __mrDSide__ left
[09:16] * lizmat clickbaits https://p6weekly.wordpress.com/2018/08/06/2018-32-squashathon-done/

[09:16] <lizmat> .tell benjikun you'll be the first next week

[09:16] <yoleaux> lizmat: I'll pass your message to benjikun.

[09:18] <Altreus> lizmat: s/a another/another/

[09:19] <lizmat> Altreus++   # fixed

[09:19] *** Ven` left
[09:19] <Altreus> :)

[09:19] <Altreus> I had to guess you wrote it because as far as I can see, it doesn't say :O

[09:19] <Altreus> oh there! liztormato

[09:20] <lizmat> yeah...  well... yeah, I try to be as little as schizo as possible  :-)

[09:20] <lizmat> tormato just happens to be my favourite Yes album

[09:21] *** Ven` joined
[09:22] *** p6bannerbot sets mode: +v Ven`

[09:22] *** scimon joined
[09:22] *** p6bannerbot sets mode: +v scimon

[09:22] <Altreus> It is a good one

[09:23] <Altreus> Mine is 90125 because I had it on vinyl when I was a kid

[09:23] <Altreus> I used to listen to it while playing Goldeneye on my N64 :D

[09:24] *** wamba joined
[09:24] *** p6bannerbot sets mode: +v wamba

[09:25] <lizmat> :-)

[09:26] <lizmat> weekly: https://codewat.ch/blog/4

[09:26] <notable6> lizmat, Noted!

[09:26] <masak> codewat.ch ?

[09:26] <masak> oh! it's someone's blog

[09:27] <masak> for a confusing moment I thought it was the URL of the weekly... :)

[09:27] <masak> don't mind me, ENOTENOUGHCOFFEE

[09:27] * lizmat pours masak some java

[09:28] <masak> that hits the hotspot

[09:31] <lizmat> notable6: weekly

[09:31] <notable6> lizmat, 8 notes: https://gist.github.com/c87e8d645b96817e2bc003ac812f4732

[09:31] <lizmat> notable6: weekly reset

[09:31] <notable6> lizmat, Moved existing notes to “weekly_2018-08-07T09:31:19Z”

[09:31] <lizmat> weekly: https://codewat.ch/blog/4

[09:31] <notable6> lizmat, Noted!

[09:31] <lizmat> ok, so we're on schedule for next week

[09:32] *** c1nil joined
[09:33] *** p6bannerbot sets mode: +v c1nil

[09:34] <jast> so, the arguments about camelia. did someone actually spell out the argument that one function of camelia is to filter out people who are "too serious", or is that just my imagination?

[09:34] <masak> I've seen it here on the channel, but not in a blog post

[09:34] <masak> might've missed it, though

[09:35] <masak> anyway, it comes down to taste, for which there is famously no accounting. I like Camelia, and so does my 3-year-old at home.

[09:35] <Altreus> am I to understand that the use of a not-cartoony animal is serious enough for these curmudgeons?

[09:35] <lizmat> "Camelia is designed to impress 7-year-old girls more than 47-year-old alpha geeks, and generally succeeds at that."

[09:35] <lizmat> from https://developers.slashdot.org/story/16/07/14/1349207/the-slashdot-interview-with-larry-wall

[09:36] <jast> purely in terms of personal taste I think it could have been polished a little more

[09:36] * masak is more of a lambda geek

[09:36] <jast> by which I don't mean, make it less cute/fun/etc., just purely drawing/design details

[09:36] <jast> but generally the idea works for me

[09:37] <Altreus> well at least we're complaining about the mascot now, instead of the name

[09:37] <masak> I think Camelia works fine as a bikeshedding absorber

[09:37] <jast> the name is now officially 8lang, isn't it

[09:38] <jast> alpha, lambda... I need some other greek letter to set myself apart, any ideas?

[09:38] <masak> last I checked, it's called Perl 7000

[09:38] <masak> jast: gamma geek

[09:38] <jast> how can it compete against a BFG 9000, then?

[09:38] * masak .oO( some other geek letter )

[09:38] <jast> as in gamma rays, as in mess everything up? works for me

[09:39] <xiaomiao> jast: they don't mess things up, they are just very effective for transferring energy

[09:39] <Altreus> in that case I bagsy omicron

[09:39] <jast> yes, and transferring too much energy into something messes it up. :}

[09:39] <Altreus> o, micron, where art thou?

[09:40] <jast> also, not too much facts, please... I'm allergic to those

[09:40] <Altreus> wherefore art thou so damn micro

[09:40] *** robertle left
[09:40] <jast> that's nothing compared to opicon

[09:41] <Altreus> The nuon is the quantum particle of subtlety

[09:41] <jast> I'm afraid that's not my area of expertise... subtlety, I mean

[09:41] *** robertle joined
[09:42] *** p6bannerbot sets mode: +v robertle

[09:44] <scimon> So whilst the heat sapped my ability to think coherently during the Squashathon it did remind me about Test::HTTP::Server. I've done some additional work on it today so it now serves a selection of files. 

[09:44] <scimon> Next up being able to add a config so it can give different mock data for different requests. The goal being to have a simple system to allow for testing systems that are making requests to HTTP based services. 

[09:45] <scimon> Hey I've got a cuddly Camelia on my desk at work. She cheers me up when I'm feeling down.

[09:48] <jast> someone else is already doing that for me... http://www.gamalive.com/images/fiches/2185-lapins-cretins-peluches.jpg

[09:49] <scimon> Also good :)

[09:50] *** wamba left
[09:51] <buggable> New CPAN upload: Test-HTTP-Server-0.2.1.tar.gz by SCIMON http://modules.perl6.org/dist/Test::HTTP::Server:cpan:SCIMON

[09:53] *** eliasr joined
[09:53] *** p6bannerbot sets mode: +v eliasr

[09:57] <masak> speaking of greek letters, has anyone done anything with the κ calculus?

[09:58] <masak> it's like lambda calclus but without higher-order functions

[09:58] *** johnnytao joined
[09:59] <jmerelo> masak: that's interesting. Tell me more.

[09:59] *** p6bannerbot sets mode: +v johnnytao

[09:59] <jmerelo> masak: that means it's only currying and things like that?

[09:59] *** johnnytao left
[10:00] <jmerelo> scimon++

[10:02] <masak> jmerelo: someone called Hasegawa wrote a paper about it. details are on Wikipedia. basically you can "split" lambda calculus into a kappa calculus and a zeta calculus. the former is (I think) more concerned with pure computation, and the latter more with control flow.

[10:02] <jmerelo> masak: interesting.

[10:03] *** johnnytao joined
[10:03] *** p6bannerbot sets mode: +v johnnytao

[10:04] <jmerelo> masak: checking out the wikipedia page, they lost me at e

[10:05] <masak> jmerelo: yeah, it's a quite particular jargon. one gets used to it.

[10:05] <jmerelo> masak: fortunately, the presentation uses sequents instead of hypothetical judgments. Or a language that I can understand, for that matter. 

[10:06] <jmerelo> masak: One probably has to go into category theory to understand it, and formal languages, all that. I don't really know what to make of it.

[10:06] <jmerelo> masak: AFAIK, category theory is not fully implemented in Perl 6, due mainly to the fact that subsets are not really types.

[10:07] <masak> I see CT more as a way of reasoning, not as something one necessarily has to implement into a language

[10:07] *** johnnytao left
[10:07] <jmerelo> masak: OK

[10:07] <Geth> ¦ doc: mienaikage++ created pull request #2242: Fix link to Inline::Ruby

[10:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2242

[10:08] <jmerelo> masak: but you need the tools in the language to follow the reasoning, right? You need HOF for instance to think about lambda calculus. And a strong type system to think in terms of category theory

[10:11] <Geth> ¦ doc: fdd901ef34 | (Daniel Mita)++ | doc/Language/rb-nutshell.pod6

[10:11] <synopsebot> Link: https://doc.perl6.org/language/rb-nutshell

[10:11] <Geth> ¦ doc: Fix link to Inline::Ruby

[10:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fdd901ef34

[10:11] <Geth> ¦ doc: c7d08dc4be | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/rb-nutshell.pod6

[10:11] <Geth> ¦ doc: Merge pull request #2242 from mienaikage/inline-ruby-url

[10:11] <Geth> ¦ doc: 

[10:11] <Geth> ¦ doc: Fix link to Inline::Ruby

[10:11] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c7d08dc4be

[10:12] <masak> jmerelo: Perl 6 has very little in terms of a static type system.

[10:12] <masak> or, at least, Rakudo does.

[10:13] <jmerelo> masak: what about 007?

[10:13] <masak> heh.

[10:13] <masak> there's an issue with some ideas for type annotations, but nothing implemented.

[10:14] <masak> I get into discussions with raiph sometimes about whether macro expansion ought to get entwined with typechecking somehow. (my stance is it oughtn't.)

[10:14] *** johnnyt joined
[10:15] *** p6bannerbot sets mode: +v johnnyt

[10:16] <jmerelo> masak: Don't know about kappa, then. I've gone down to the affine types and so on. Does not look like the kind of stuff a "normal" language will be using, but who knows...

[10:26] <Geth> ¦ doc: MorayJ++ created pull request #2243: Fixes missed and doubtful sentence cases on Language docs

[10:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2243

[10:28] <Geth> ¦ doc: e364a5d2aa | Moray++ | doc/Language/5to6-nutshell.pod6

[10:28] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[10:28] <Geth> ¦ doc: Fixes missed and doubtful sentence cases on Language docs

[10:28] <Geth> ¦ doc: 

[10:28] <Geth> ¦ doc: These are sentence cases I was less sure of as wasn't sure whether to consider things like "List Separator" as pronoun. Hopefully digestible enough for someone to consider in this separate commit.

[10:28] <Geth> ¦ doc: 

[10:28] <Geth> ¦ doc: Also a couple that I noticed I missed whilst looking at those.

[10:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e364a5d2aa

[10:28] <Geth> ¦ doc: 35c5c94c37 | (Juan Julián Merelo Guervós)++ (committed using GitHub Web editor) | doc/Language/5to6-nutshell.pod6

[10:28] <Geth> ¦ doc: Merge pull request #2243 from MorayJ/sentence-case-follow

[10:28] <Geth> ¦ doc: 

[10:28] <Geth> ¦ doc: Fixes missed and doubtful sentence cases on Language docs

[10:28] <Geth> ¦ doc: Thanks!

[10:28] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/35c5c94c37

[10:31] *** johnnyt left
[10:46] *** jmerelo left
[10:48] *** xinming left
[10:48] *** xinming joined
[10:49] *** p6bannerbot sets mode: +v xinming

[10:50] *** astj left
[10:52] *** robertle left
[10:54] *** robertle joined
[10:55] *** p6bannerbot sets mode: +v robertle

[10:55] *** DrForr left
[11:03] *** DrForr joined
[11:03] *** astj joined
[11:03] *** p6bannerbot sets mode: +v DrForr

[11:04] *** p6bannerbot sets mode: +v astj

[11:06] *** kerframil joined
[11:06] *** p6bannerbot sets mode: +v kerframil

[11:08] *** astj left
[11:27] *** benjikun joined
[11:28] *** p6bannerbot sets mode: +v benjikun

[11:28] *** Ven` left
[11:30] <SmokeMachine> m: multi trait_mod:<is>(Attribute $a, :&some-trait!) { $a.package.^add_role: role { method run { say some-trait self } } }; class A { has $.a; has $.b is some-trait(method { $!a })}; A.new(:42a).run

[11:30] <camelia> rakudo-moar 7c08ba744: OUTPUT: «42␤»

[11:30] <SmokeMachine> any way to do that without using a method on some-trait?

[11:33] *** zakharyas left
[11:35] *** foxcookie joined
[11:35] *** calcul0n17 joined
[11:35] <SmokeMachine> is there a way to transform a Block into a method?

[11:36] *** p6bannerbot sets mode: +v foxcookie

[11:36] *** p6bannerbot sets mode: +v calcul0n17

[11:36] *** foxcookie left
[11:38] <SmokeMachine> or a way to set `self` inside a Block

[11:39] <masak> ..."set `self`"?

[11:39] <masak> taking a step back, why are you attempting to set `self`? :)

[11:40] <masak> m: my &m = my method { say self.name }; class C { has $.name }; C.new(:name("Fred")).&m

[11:40] <camelia> rakudo-moar 7c08ba744: OUTPUT: «Fred␤»

[11:40] *** calcul0n17 left
[11:41] <SmokeMachine> masak: Im trying to create a trait that can access Attributes of a class from a block...

[11:41] <SmokeMachine> thats it... I dont want to use a method...

[11:42] <ilmari> why not?

[11:42] <SmokeMachine> it "looks ugly" on a trait...

[11:42] <ilmari> if you need to access self, it's a method..

[11:42] <SmokeMachine> like this:

[11:42] <SmokeMachine> m: multi trait_mod:<is>(Attribute $a, :&some-trait!) { $a.package.^add_role: role { method run { say some-trait self } } }; class A { has $.a; has $.b is some-trait(method { $!a })}; A.new(:42a).run

[11:42] <camelia> rakudo-moar 7c08ba744: OUTPUT: «42␤»

[11:45] <SmokeMachine> ilmari: ^^

[11:52] *** robertle left
[12:11] *** Ven` joined
[12:11] *** p6bannerbot sets mode: +v Ven`

[12:19] <Geth> ¦ marketing: 31c6f0140d | (Zoffix Znet)++ | 5 files

[12:19] <Geth> ¦ marketing: Fix incorrect number shown on flyer

[12:19] <Geth> ¦ marketing: 

[12:19] <Geth> ¦ marketing: Fixes https://github.com/perl6/marketing/issues/17

[12:19] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/31c6f0140d

[12:20] *** Guest76078 joined
[12:20] *** Guest76078 left
[12:32] *** molaf joined
[12:33] *** p6bannerbot sets mode: +v molaf

[12:43] *** zakharyas joined
[12:44] *** p6bannerbot sets mode: +v zakharyas

[12:48] *** kipd_ joined
[12:48] *** p6bannerbot sets mode: +v kipd_

[12:49] *** pierrot_ joined
[12:49] *** a3f_ joined
[12:49] *** p6bannerbot sets mode: +v pierrot_

[12:49] *** p6bannerbot sets mode: +v a3f_

[12:50] *** El_Che_ joined
[12:50] *** pochi left
[12:50] *** kipd left
[12:50] *** vike left
[12:50] *** a3f left
[12:50] *** pierrot left
[12:50] *** xiaomiao left
[12:50] *** camelia left
[12:50] *** mempko left
[12:50] *** El_Che left
[12:50] *** xiaomiao joined
[12:50] *** kipd_ is now known as kipd

[12:50] *** speedChi- joined
[12:50] *** vike joined
[12:51] *** xiaomiao left
[12:51] *** xiaomiao joined
[12:51] *** p6bannerbot sets mode: +v xiaomiao

[12:51] *** p6bannerbot sets mode: +v El_Che_

[12:51] *** p6bannerbot sets mode: +v xiaomiao

[12:51] *** p6bannerbot sets mode: +v speedChi-

[12:51] *** broquaint joined
[12:51] *** p6bannerbot sets mode: +v vike

[12:52] *** p6bannerbot sets mode: +v broquaint

[12:52] *** shareable6 left
[12:52] *** nativecallable6 left
[12:53] *** pochi joined
[12:53] *** p6bannerbot sets mode: +v pochi

[12:54] *** reportable6 left
[12:54] *** benchable6 left
[12:54] *** statisfiable6 left
[12:54] *** greppable6 left
[12:54] *** dotdotdot left
[12:55] *** dotdotdot joined
[12:56] *** p6bannerbot sets mode: +v dotdotdot

[12:56] *** camelia joined
[12:57] *** p6bannerbot sets mode: +v camelia

[12:57] *** robertle joined
[12:58] *** p6bannerbot sets mode: +v robertle

[12:58] <Altreus> I have a role that defines a property, and then I would like the consuming class to statically set the value for that property. Is there a shortcut for this or should it happen in BUILD or similar?

[13:00] <Altreus> role RESTy { has $!base-url } class Connection does RESTy { $.base-url = "default thingy" }  # this, but working

[13:01] <jnthn> role RESTy[$base-url] { has $!base-url = $base-url }; class Connection does RESTy["default"] { }

[13:02] <Altreus> O_o

[13:02] <Altreus> how delightful!

[13:04] <Geth> ¦ marketing: 6a20ae97e4 | (Zoffix Znet)++ | Flyers/All-Your-Cores-Flyer--1524053519/thumbs/All-Your-Cores-Flyer--1524053519.pdf.jpg

[13:04] <Geth> ¦ marketing: Update thumb for All Your Cores flyer

[13:04] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/6a20ae97e4

[13:04] *** scimon left
[13:05] *** scimon joined
[13:05] *** p6bannerbot sets mode: +v scimon

[13:14] *** xiaomiao left
[13:14] *** xiaomiao joined
[13:14] *** p6bannerbot sets mode: +v xiaomiao

[13:17] *** mempko joined
[13:18] *** linear9 joined
[13:18] *** p6bannerbot sets mode: +v mempko

[13:18] *** p6bannerbot sets mode: +v linear9

[13:19] *** linear9 left
[13:22] *** ced11716 joined
[13:22] *** ced11716 left
[13:26] *** andrzejku left
[13:30] *** scimon left
[13:34] *** lizmat left
[13:34] *** Ven` left
[13:35] *** Ven` joined
[13:36] *** p6bannerbot sets mode: +v Ven`

[13:43] *** SkyPatrol joined
[13:43] *** SkyPatrol left
[13:50] *** reportable6 joined
[13:51] *** scimon joined
[13:51] *** p6bannerbot sets mode: +v reportable6

[13:52] *** p6bannerbot sets mode: +v scimon

[13:57] *** curan left
[13:57] *** burnout_4 joined
[13:58] *** p6bannerbot sets mode: +v burnout_4

[14:00] *** skids joined
[14:01] *** p6bannerbot sets mode: +v skids

[14:02] <Geth> ¦ marketing: e7a2827221 | (Zoffix Znet)++ | 6 files

[14:02] <Geth> ¦ marketing: Add constrast to all cores flyer

[14:02] <Geth> ¦ marketing: 

[14:02] <Geth> ¦ marketing: Closes https://github.com/perl6/marketing/issues/20

[14:02] <Geth> ¦ marketing: review: https://github.com/perl6/marketing/commit/e7a2827221

[14:02] *** burnout_4 left
[14:13] *** kerframil left
[14:14] *** pmurias joined
[14:15] *** p6bannerbot sets mode: +v pmurias

[14:18] *** pierrot_ is now known as pierrot

[14:18] *** pierrot left
[14:18] *** pierrot joined
[14:18] *** adams.freenode.net sets mode: +v pierrot

[14:18] *** p6bannerbot sets mode: +v pierrot

[14:21] <buggable> New CPAN upload: MeCab-0.0.7.tar.gz by TITSUKI http://modules.perl6.org/dist/MeCab:cpan:TITSUKI

[14:44] *** molaf left
[14:45] *** molaf joined
[14:46] *** p6bannerbot sets mode: +v molaf

[14:59] *** FROGGS left
[15:00] *** FROGGS joined
[15:00] *** p6bannerbot sets mode: +v FROGGS

[15:01] *** FROGGS left
[15:01] *** FROGGS joined
[15:02] *** p6bannerbot sets mode: +v FROGGS

[15:10] *** troys joined
[15:11] *** p6bannerbot sets mode: +v troys

[15:15] *** diakopter left
[15:25] *** jmerelo joined
[15:26] *** p6bannerbot sets mode: +v jmerelo

[15:34] *** SyrupThinker left
[15:36] *** diakopter joined
[15:36] *** p6bannerbot sets mode: +v diakopter

[15:40] *** dakkar left
[15:40] *** dakkar joined
[15:41] *** p6bannerbot sets mode: +v dakkar

[15:45] <[Coke]> xt/examples-compilation.t is segfaulting.

[15:51] *** lichtkind joined
[15:51] *** p6bannerbot sets mode: +v lichtkind

[15:52] <[Coke]> xt/examples-compilation.t doc/Language/operators.pod6 (in the doc repo)

[15:58] *** lizmat joined
[15:59] <lichtkind> cheers

[15:59] *** p6bannerbot sets mode: +v lizmat

[15:59] *** SyrupThinker joined
[16:00] *** p6bannerbot sets mode: +v SyrupThinker

[16:00] *** Geth left
[16:01] *** Geth joined
[16:01] *** ChanServ sets mode: +v Geth

[16:01] *** p6bannerbot sets mode: +v Geth

[16:11] *** robertle left
[16:26] *** FROGGS left
[16:27] *** FROGGS joined
[16:27] <jmerelo> [Coke]: Always?

[16:27] *** p6bannerbot sets mode: +v FROGGS

[16:28] *** Ritche5 joined
[16:29] *** p6bannerbot sets mode: +v Ritche5

[16:30] *** Ritche5 left
[16:31] <jmerelo> [Coke]: Just tested it with 2018.06

[16:33] *** haxmeister joined
[16:34] *** p6bannerbot sets mode: +v haxmeister

[16:39] *** dakkar left
[16:40] *** ChoHag left
[16:43] *** scimon left
[16:44] *** robertle joined
[16:44] *** p6bannerbot sets mode: +v robertle

[16:48] *** Ven` left
[16:55] *** ketas1 joined
[16:56] *** p6bannerbot sets mode: +v ketas1

[16:58] *** icywiz18 joined
[16:59] *** p6bannerbot sets mode: +v icywiz18

[17:00] *** ketas1 left
[17:00] *** icywiz18 left
[17:02] *** Grauwolf joined
[17:02] *** Grauwolf left
[17:02] *** Grauwolf joined
[17:02] *** p6bannerbot sets mode: +v Grauwolf

[17:02] *** p6bannerbot sets mode: +v Grauwolf

[17:03] *** TreyHarris left
[17:08] *** zakharyas left
[17:08] *** zakharyas joined
[17:09] *** p6bannerbot sets mode: +v zakharyas

[17:10] <Kaiepi> is there a way to create a UInt32 class that supports overflows/underflows without having to rely on NativeCall?

[17:10] <Kaiepi> or subset

[17:11] <timotimo> m: my uint32 $a = 2 ** 32 - 1; say $a; $a++; say $a

[17:11] <camelia> rakudo-moar 7c08ba744: OUTPUT: «4294967295␤0␤»

[17:12] <timotimo> look ma, no nativecall

[17:12] <timotimo> BBL

[17:13] <Kaiepi> thanks

[17:15] *** zyley joined
[17:15] *** p6bannerbot sets mode: +v zyley

[17:16] <Kaiepi> i'm working on convincing a c programmer that perl 6 can both do accurate math and the type of math that other languages use

[17:16] *** FROGGS left
[17:16] *** TreyHarris joined
[17:16] *** p6bannerbot sets mode: +v TreyHarris

[17:17] *** zyley left
[17:17] *** FROGGS joined
[17:17] *** sena_kun left
[17:17] *** sena_kun joined
[17:17] *** p6bannerbot sets mode: +v FROGGS

[17:18] *** Kaiepi left
[17:18] *** p6bannerbot sets mode: +v sena_kun

[17:21] *** zakharyas left
[17:21] *** michagogo28 joined
[17:22] *** michagogo28 left
[17:22] *** Kaiepi joined
[17:23] *** p6bannerbot sets mode: +v Kaiepi

[17:24] *** sena_kun left
[17:24] *** sena_kun joined
[17:25] *** cfields10 joined
[17:25] *** p6bannerbot sets mode: +v sena_kun

[17:25] *** sena_kun left
[17:25] *** p6bannerbot sets mode: +v cfields10

[17:26] *** cfields10 left
[17:26] *** sena_kun joined
[17:27] *** p6bannerbot sets mode: +v sena_kun

[17:33] *** sena_kun left
[17:33] *** sena_kun joined
[17:34] *** p6bannerbot sets mode: +v sena_kun

[17:35] <Summertime> Would it be possible for perl to somewhat "batch" term definitions and the such? to reduce compile time?

[17:36] <Summertime> or would the one-pass compiling prevent that too much?

[17:36] *** haxmeister left
[17:38] *** sena_kun left
[17:38] *** sena_kun joined
[17:39] *** p6bannerbot sets mode: +v sena_kun

[17:51] *** FROGGS left
[17:52] *** FROGGS joined
[17:53] *** p6bannerbot sets mode: +v FROGGS

[17:54] <timotimo> i discussed this with TimToady a while back. it's probably possible to cheat a little

[17:54] <timotimo> until then, precompilation is the only thing that'll grant relief, i think

[17:54] <timotimo> that and making the NFA optimizer smarter/faster

[17:56] <Kaiepi> what's the difference between using |args and *@args/**@args as a parameter?

[17:57] <timotimo> |args also captures keyword arguments

[17:59] <Kaiepi> keyword arguments?

[17:59] <Kaiepi> like :foo<bar>?

[18:00] <timotimo> yes

[18:00] <Kaiepi> ahh

[18:01] <timotimo> m: sub bloop(|thing) { dd thing }; bloop(1, 2, :foo<bar>, 4, 5)

[18:01] <camelia> rakudo-moar 6e661e9e4: OUTPUT: «\(1, 2, 4, 5, :foo("bar"))␤»

[18:01] *** sena_kun left
[18:01] *** barbietoss joined
[18:01] *** sena_kun joined
[18:02] *** p6bannerbot sets mode: +v barbietoss

[18:02] *** p6bannerbot sets mode: +v sena_kun

[18:02] *** sena_kun left
[18:02] *** barbietoss left
[18:03] *** sena_kun joined
[18:04] *** p6bannerbot sets mode: +v sena_kun

[18:06] <jmerelo> I have asked this in SO: https://stackoverflow.com/questions/51732545/changing-a-class-variable-from-outside-the-class

[18:06] <jmerelo> Basically I want to test for "Windows" code without windows, and I need to set the values of certain class variables, either in Rakudo Internals or in Encoding::Builtin

[18:07] <timotimo> mock + dependency injection? :\

[18:07] <jmerelo> Basically I need is-win to be true, timotimo 

[18:08] <jmerelo> timotimo: some code is well-behaved and uses the dynamic variable $*DISTRO; which I can change (through PROCESS). But some other don't, and rely in class variables. So...

[18:11] *** FROGGS left
[18:11] *** FROGGS joined
[18:12] *** p6bannerbot sets mode: +v FROGGS

[18:19] *** sena_kun left
[18:19] *** sena_kun joined
[18:20] *** p6bannerbot sets mode: +v sena_kun

[18:23] *** ChoHag joined
[18:23] *** p6bannerbot sets mode: +v ChoHag

[18:24] *** jmerelo left
[18:28] *** ChoHag_ joined
[18:28] *** sauvin left
[18:28] *** ChoHag left
[18:29] *** p6bannerbot sets mode: +v ChoHag_

[18:31] *** TreyHarris left
[18:40] *** ChoHag_ left
[18:40] *** FROGGS left
[18:41] *** FROGGS joined
[18:41] *** RoBz3 joined
[18:41] *** p6bannerbot sets mode: +v FROGGS

[18:42] *** p6bannerbot sets mode: +v RoBz3

[18:42] *** RoBz3 left
[18:43] *** Zoffix joined
[18:43] *** p6bannerbot sets mode: +v Zoffix

[18:43] *** lindylex joined
[18:43] *** ChanServ sets mode: +o Zoffix

[18:43] *** p6bannerbot sets mode: +v lindylex

[18:44] *** p6bannerbot left
[18:44] *** p6bannerbot joined
[18:44] *** Zoffix sets mode: +o p6bannerbot

[18:44] *** Zoffix sets mode: +o p6bannerbot

[18:44] *** TreyHarris joined
[18:44] *** p6bannerbot sets mode: +v TreyHarris

[18:44] *** Zoffix left
[18:48] <[Coke]> .

[18:48] *** FROGGS left
[18:49] *** FROGGS joined
[18:49] *** p6bannerbot sets mode: +v FROGGS

[18:53] *** FROGGS left
[18:53] *** FROGGS joined
[18:54] *** lindylex left
[18:54] *** p6bannerbot sets mode: +v FROGGS

[18:56] *** FROGGS left
[18:57] *** FROGGS joined
[18:58] *** p6bannerbot sets mode: +v FROGGS

[19:00] *** FROGGS left
[19:01] *** FROGGS joined
[19:01] *** p6bannerbot sets mode: +v FROGGS

[19:10] *** FROGGS left
[19:11] *** FROGGS joined
[19:11] *** p6bannerbot sets mode: +v FROGGS

[19:17] *** FROGGS left
[19:17] *** FROGGS joined
[19:18] *** p6bannerbot sets mode: +v FROGGS

[19:22] *** FROGGS left
[19:23] *** FROGGS joined
[19:23] *** FROGGS left
[19:39] <xinming> What is the right way to pass all args intact?

[19:40] <Kaiepi> what do you mean?

[19:41] *** anataex joined
[19:41] <xinming> something like,  sub t (Str $a, Int $b) { "$a and $b".say; };   class A { method t (Str $a, Int $b) { t($a, $b) } }; A.new.t;

[19:41] <xinming> m: sub t (Str $a, Int $b) { "$a and $b".say; };   class A { method t (Str $a, Int $b) { t($a, $b) } }; A.new.t;

[19:41] <camelia> rakudo-moar bc2ca535f: OUTPUT: «Too few positionals passed; expected 3 arguments but got 1␤  in method t at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[19:41] *** anataex left
[19:41] <xinming> m: sub t (Str $a, Int $b) { "$a and $b".say; };   class A { method t (Str $a, Int $b) { t($a, $b) } }; A.new.t("str", 1);

[19:41] *** AlexDaniel left
[19:41] <camelia> rakudo-moar bc2ca535f: OUTPUT: «str and 1␤»

[19:42] <xinming> now, I wish that the method t can receive all "args", and pass to sub t intact.

[19:42] *** AlexDaniel joined
[19:42] <xinming> so, I don't need to keep sync for the signatures for the method t

[19:42] <xinming> m: sub t (Str $a, Int $b) { "$a and $b".say; };   class A { method t (|) { t(|) } }; A.new.t("str", 1);

[19:42] <camelia> rakudo-moar bc2ca535f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Prefix | requires an argument, but no valid term found␤at <tmp>:1␤------> 3".say; };   class A { method t (|) { t(|7⏏5) } }; A.new.t("str", 1);␤    expecting any of:␤        prefix␤»

[19:42] *** AlexDaniel left
[19:42] *** AlexDaniel joined
[19:42] *** p6bannerbot sets mode: +v AlexDaniel

[19:42] *** p6bannerbot sets mode: +v AlexDaniel

[19:43] <xinming> m: sub t (Str $a, Int $b) { "$a and $b".say; };   class A { method t (\c) { t(|c) } }; A.new.t("str", 1);

[19:43] <camelia> rakudo-moar bc2ca535f: OUTPUT: «Too many positionals passed; expected 2 arguments but got 3␤  in method t at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[19:43] <xinming> m: sub t (Str $a, Int $b) { "$a and $b".say; };   class A { method t (|c) { t(|c) } }; A.new.t("str", 1);

[19:43] <camelia> rakudo-moar bc2ca535f: OUTPUT: «str and 1␤»

[19:43] <xinming> ah

[19:43] <xinming> finally got it right

[19:50] *** TreyHarris left
[19:51] *** x[LGWs4x4i]uG2N0 left
[19:54] <Kaiepi> how can i set a fixed size array with NativeCall?

[19:54] *** sena_kun left
[19:54] *** sena_kun joined
[19:55] *** x[LGWs4x4i]uG2N0 joined
[19:55] *** p6bannerbot sets mode: +v sena_kun

[19:55] *** p6bannerbot sets mode: +v x[LGWs4x4i]uG2N0

[19:57] *** skids left
[19:59] <Kaiepi> m: class sockaddr is repr('CStruct') { has int32 $.sa_len; has int32 $.sa_family; has CArray[int8] $.sa_data; };

[19:59] <camelia> rakudo-moar bc2ca535f: OUTPUT: «5===SORRY!5===␤Type 'CArray' is not declared. Did you mean any of these?␤    array␤    Array␤␤at <tmp>:1␤------> 3a_len; has int32 $.sa_family; has CArray7⏏5[int8] $.sa_data; };␤Malformed has␤at <tmp>:1␤------> 3t32 $.sa_l…»

[20:00] <Kaiepi> sorry, trying to type in the wrong window

[20:00] <timotimo> i think we just recently got support for that?

[20:00] <Kaiepi> i'll check my email, it should show up there somewhere

[20:00] <timotimo> m: use NativeCall; class foo is repr('CStruct') { has int32 $.sa_len; has int8 CArray[16] $.foo };

[20:00] <camelia> rakudo-moar bc2ca535f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤An exception occurred while parameterizing CArray␤at <tmp>:1␤Exception details:␤  Parameter 't' of routine 'parameterize' must be a type object of type 'Mu', not an object instance of type 'Int'. …»

[20:00] <timotimo> not like that, clearly

[20:00] <timotimo> m: use NativeCall; class foo is repr('CStruct') { has int32 $.sa_len; has CArray[uint8, 16] $.foo };

[20:00] <camelia> rakudo-moar bc2ca535f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤An exception occurred while parameterizing CArray␤at <tmp>:1␤Exception details:␤  5===SORRY!5=== Error while compiling ␤  Too many positionals passed; expected 3 arguments but got 4␤  at :␤»

[20:01] *** benchable6 joined
[20:01] *** p6bannerbot sets mode: +v benchable6

[20:03] *** TreyHarris joined
[20:03] *** p6bannerbot sets mode: +v TreyHarris

[20:03] *** espadrine joined
[20:03] *** p6bannerbot sets mode: +v espadrine

[20:06] *** kaare__ left
[20:07] *** aindilis left
[20:07] *** lex joined
[20:08] *** p6bannerbot sets mode: +v lex

[20:17] *** aindilis joined
[20:18] *** SCHAPiE left
[20:18] *** p6bannerbot sets mode: +v aindilis

[20:18] *** SCHAPiE joined
[20:18] *** p6bannerbot sets mode: +v SCHAPiE

[20:24] <Kaiepi> m: use NativeCall; my CArray[int8] $a = CArray[int8].allocate: 0; dd nativesizeof($a)

[20:24] <camelia> rakudo-moar 36d37cbc8: OUTPUT: «8␤»

[20:25] <Kaiepi> this should be 4, not 8 if the c equivalent is int arr[1] = {0}

[20:25] <Kaiepi> *1

[20:25] <timotimo> you mean 1 not 8?

[20:26] <Kaiepi> no, 1 not 4

[20:26] <Kaiepi> i meant char, not int

[20:28] *** lex left
[20:29] <lichtkind> for what date is denali scheduled for?

[20:29] <diakopter> diwali?

[20:29] <masak> lichtkind: denali is not a river in Egypt

[20:30] <diakopter> wild.ai

[20:31] <[Coke]> there is not a hard date.

[20:31] <[Coke]> but probably close to Diwali.

[20:31] * masak boggles

[20:32] <[Coke]> (the loop, I may not be in it)

[20:32] <[Coke]> zoffix++ #

[20:32] <masak> I'm mostly amused. it's like Christmas all over again :)

[20:32] <lizmat> yeah

[20:33] <timotimo> loop { }; timo;

[20:34] <masak> m: loop { }; timo;

[20:34] <camelia> rakudo-moar 81a5e4ba8: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    timo used at line 1␤␤»

[20:34] <[Coke]> oh. in that case, the time loop, I am stuck in it.

[20:34] <[Coke]> I am so not on the hook for this release, you guys. :)

[20:34] * [Coke] throws confetti in the air.

[20:35] <masak> [Coke]: clearly Perl 6.g should be "Groundhog Day" :P

[20:36] <moritz> and after that, 6.g for "Groundhog Day" :D

[20:36] <masak> auugh

[20:36] <timotimo> followed by 356 days of the same release over and over again

[20:37] * masak .oO( 6.f -- Festivus )

[20:38] <masak> I'm here for all your customized holiday needs

[20:38] <timotimo> Perl 6.Wacken

[20:39] * moritz drove by Wacken last Saturday

[20:39] <masak> so, that's Christmas, Diwali, Easter, Festivus, Groundhog Day, Halloween...

[20:40] <timotimo> you could say ... perl6 had a little Nightmare Before Christmas

[20:41] <masak> ...Imbolc...

[20:41] <AlexDaniel> weekly: drawings of camelia: https://www.reddit.com/r/perl6/comments/956qq3/why_i_still_think_camelia_is_a_mistake/

[20:41] <notable6> AlexDaniel, Noted!

[20:42] <timotimo> you know, when jonathan skellington and sally wall did that thing

[20:42] <AlexDaniel> .oO( maybe we should start a trend :) )

[20:42] <masak> ...Jumu'atul-Wida...

[20:42] <masak> ...Kwanzaa...

[20:42] <AlexDaniel> dammit that didn't link to the comment

[20:43] <AlexDaniel> weekly: I mean this: https://www.reddit.com/r/perl6/comments/956qq3/why_i_still_think_camelia_is_a_mistake/e3rc5o1

[20:43] <notable6> AlexDaniel, Noted!

[20:46] <lichtkind> diakopter yes diwali i meant

[20:49] <timotimo> is diwali the time in camelia's development where she temporarily turns into a diva?

[20:55] *** shreyansh_k11 joined
[20:56] *** p6bannerbot sets mode: +v shreyansh_k11

[20:57] *** Zoffix joined
[20:57] *** p6bannerbot sets mode: +v Zoffix

[20:58] <Zoffix> buggable: d

[20:58] <buggable> Zoffix, Diwali is in 91 days, which is 12 weeks, 6 days, 3 hours, 1 minute, and 56 seconds. Need to review 35 commits per day (250/week) to complete. Need 6 teaser flyers. Still have 7 TODO features costing 110 hours. Still have 0.3 policies to write. Still have ~95% of ChangeLog to do.

[20:58] <Zoffix> lichtkind: ^ in 91 days, but there's still a ton of work to do, so it's not a hard date.

[20:58] <lichtkind> thanks  Zoffix

[21:00] *** shreyansh_k11 left
[21:01] <Zoffix> m: sub a($, $) {}; sub b (|args) { a |args }; b rand, rand for ^2000_000; say now - ENTER now

[21:01] <camelia> rakudo-moar 1cd654a22: OUTPUT: «2.28153525␤»

[21:01] <Zoffix> m: sub a($, $) {}; sub b (\a1, \a2) { a a1, a2 }; b rand, rand for ^2000_000; say now - ENTER now

[21:01] <camelia> rakudo-moar 1cd654a22: OUTPUT: «0.321998␤»

[21:02] <Zoffix> xinming: ^ note that (currently) slurpies come with a perf hit, which is even worse if you're dispatching to a multi with a ton of candidates, so if you can avoid slurpies/captures, avoid them :)

[21:02] *** JesseOor joined
[21:03] *** lizmat left
[21:03] *** p6bannerbot sets mode: +v JesseOor

[21:03] *** JesseOor left
[21:08] *** Zoffix left
[21:12] *** robertle left
[21:12] <Kaiepi> is there a page with the full list of features added to 6.d somewhere?

[21:12] <benjikun> https://github.com/perl6/6.d-prep/blob/master/TODO/FEATURES.md

[21:12] <yoleaux> 05:51Z <tyil> benjikun: are you the Benji from the ML to poke about the user survey?

[21:12] <yoleaux> 09:16Z <lizmat> benjikun: you'll be the first next week

[21:16] <benjikun> .tell tyil Yeah, I am. :)

[21:16] <yoleaux> benjikun: I'll pass your message to tyil.

[21:16] <benjikun> .tell lizmat Thanks

[21:16] <yoleaux> benjikun: I'll pass your message to lizmat.

[21:24] *** kerframil joined
[21:24] *** p6bannerbot sets mode: +v kerframil

[21:24] <benjikun> Kaiepi: just glance around that repository, the specific page I linked doesn't have all of the new features

[21:27] <Kaiepi> thanks

[21:29] *** espadrine left
[21:31] *** rindolf left
[21:39] <lichtkind> is there a way to add self made quoting q :qudliboob / / attribute ?

[21:41] <buggable> New CPAN upload: PDF-Class-0.2.8.tar.gz by WARRINGD http://modules.perl6.org/dist/PDF::Class:cpan:WARRINGD

[21:44] *** nativecallable6 joined
[21:45] *** p6bannerbot sets mode: +v nativecallable6

[21:47] <El_Che_> rain

[21:47] <El_Che_> I missed it

[22:11] <Kaiepi> how do i use SOCK_RAW with IO::Socket::INET?

[22:15] <Kaiepi> i need to use it for Net::ICMP, but looking through src/core/IO/Socket/INET.pm6 it doesn't look like it's used at all

[22:16] <Kaiepi> i might have to write a Native::Socket module before i can get to work on it if there isn't any way to use it

[22:16] *** pmurias left
[22:18] *** ChoHag joined
[22:19] *** p6bannerbot sets mode: +v ChoHag

[22:22] <MasterDuke> hm, i thought someone had written one

[22:22] <MasterDuke> huggable: eco native

[22:22] <huggable> MasterDuke, nothing found

[22:22] <MasterDuke> huggable: eco socket

[22:22] <huggable> MasterDuke, nothing found

[22:27] *** Kaiepi left
[22:27] *** Kaiepi joined
[22:28] *** p6bannerbot sets mode: +v Kaiepi

[22:29] <benjikun> Kaiepi: you're going to make Net::ICMP? :3

[22:29] <benjikun> woo

[22:29] *** bisectable6 joined
[22:30] *** p6bannerbot sets mode: +v bisectable6

[22:31] *** troys left
[22:33] *** Zoffix joined
[22:33] *** p6bannerbot sets mode: +v Zoffix

[22:33] <Zoffix> MasterDuke: wrong bot

[22:33] <Zoffix> eco: socket

[22:33] <Zoffix> It's buggable, not huggable

[22:33] <buggable> Zoffix, Found 7 results: cro, WebSocket, IO::Socket::Async::SSL, Cro::WebSocket, IO::Socket::SSL. See https://modules.perl6.org/s/socket

[22:34] <Zoffix> Kaiepi: there's no list yet. It'll be around probably by end of October

[22:35] <Zoffix> benjikun: FWIW, that repo is mostly for coredev's housekeeping. It might be best not to link users to it, to avoid confusion. (in the past, someone already saw a TODO item and was teaching users about behaviour that not only did they understand incorrectly, but has now also been postponed for later language versions, with at least one coredev being against the feature entirely)

[22:36] <Zoffix> lichtkind: no way that I know of that involves standard features. This is the job for macros, which are experimental, or slangs, which are also experimental.

[22:37] <lichtkind> Zoffix, thanks i just guesses there are certains methods to create for that

[22:40] <benjikun> Zoffix: I see

[22:40] <benjikun> we should make a list of additions for future references at some point

[22:41] <benjikun> then again, there's plenty of time before the release, so I guess it's not really necessary yet

[22:45] <Zoffix> benjikun: yeah, that's one of the TODO items. ATM the spec is still being reviewed, so the final list of features is unknown.

[22:46] <Zoffix> buggable: commits

[22:46] <buggable> Zoffix, Commits are currently set at 2184

[22:46] <Zoffix> 2184 commits to review still

[22:46] <benjikun> phew

[22:46] <Zoffix> That doesn't include features that were implemented without a spec.

[22:46] <benjikun> dang

[22:59] <Kaiepi> yeah benjikun 

[22:59] <benjikun> that's nice

[23:00] <benjikun> thanks for your contributions :)

[23:06] *** kerframil left
[23:10] *** kerframil joined
[23:10] *** p6bannerbot sets mode: +v kerframil

[23:21] *** astj joined
[23:22] *** p6bannerbot sets mode: +v astj

[23:24] *** sena_kun left
[23:39] *** phoe24 joined
[23:39] *** p6bannerbot sets mode: +v phoe24

[23:40] *** phoe24 left
[23:40] *** ^Phantom^18 joined
[23:40] *** p6bannerbot sets mode: +v ^Phantom^18

[23:41] *** ^Phantom^18 left
[23:44] *** Zoffix left
