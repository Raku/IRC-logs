[00:00] *** ChoHag left
[00:03] *** rindolf left
[00:04] *** mcmillhj left
[00:07] *** athenot left
[00:10] *** athenot joined
[00:10] *** athenot left
[00:11] *** athenot_ joined
[00:16] *** quotable6 joined
[00:16] *** nativecallable6 joined
[00:16] *** coverable6 joined
[00:16] *** ChanServ sets mode: +v coverable6

[00:16] *** evalable6 joined
[00:16] *** bloatable6 joined
[00:16] *** ChanServ sets mode: +v evalable6

[00:16] *** ChanServ sets mode: +v bloatable6

[00:17] *** daxim_ joined
[00:20] *** markong left
[00:21] *** athenot_ left
[00:21] *** molaf left
[00:21] *** athenot joined
[00:27] *** w_richard_w left
[00:28] *** w_richard_w joined
[00:28] *** athenot left
[00:31] *** athenot joined
[00:36] *** markong joined
[00:38] *** markong left
[01:03] *** Kaypie joined
[01:03] *** Kaiepi left
[01:08] *** zachk left
[01:13] *** telex left
[01:14] *** telex joined
[01:21] *** aborazmeh joined
[01:21] *** aborazmeh left
[01:21] *** aborazmeh joined
[01:39] *** mcmillhj joined
[01:47] *** ilbot3 left
[01:58] *** ilbot3 joined
[01:58] *** ChanServ sets mode: +v ilbot3

[02:12] *** Actualeyes left
[02:13] *** pilne left
[02:32] *** cog_ joined
[02:33] *** mcmillhj left
[02:34] *** Sgeo joined
[02:35] *** Sgeo__ left
[02:36] *** athenot left
[02:38] *** eliasr left
[02:46] *** lookatme left
[02:50] *** lookatme joined
[02:53] *** softmoth joined
[02:55] *** aborazmeh left
[02:57] *** cog_ left
[03:09] *** huggable left
[03:09] *** ZofBot left
[03:09] *** buggable left
[03:15] *** w_richard_w1 joined
[03:17] *** w_richard_w left
[03:23] *** skids left
[03:54] *** Herby_ left
[03:54] *** softmoth left
[03:55] *** softmoth joined
[04:05] *** ChoHag joined
[04:10] *** ymddmy joined
[04:16] *** ymddmy left
[04:23] *** unicodable6 joined
[04:39] *** softmoth_ joined
[04:39] *** softmoth left
[04:48] *** curan joined
[04:49] *** wamba joined
[04:58] *** khisanth__ left
[05:02] *** curan left
[05:09] *** wamba left
[05:10] *** khisanth__ joined
[05:12] *** jmerelo joined
[05:15] *** sauvin joined
[05:16] <Geth> ¬¶ doc: 3f1e54ae26 | COMBORICO++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[05:16] <Geth> ¬¶ doc: '/ /' and 'rx/ /' clarified purpose of use

[05:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/3f1e54ae26

[05:16] <Geth> ¬¶ doc: ef1904306c | COMBORICO++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[05:16] <Geth> ¬¶ doc: Update regexes.pod6

[05:16] <synopsebot> Link: https://doc.perl6.org/language/regexes

[05:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ef1904306c

[05:16] <Geth> ¬¶ doc: f3cf4dd102 | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[05:16] *** ufobat joined
[05:16] <Geth> ¬¶ doc: Merge pull request #1982 from COMBORICO/patch-2

[05:16] <Geth> ¬¶ doc: 

[05:16] <Geth> ¬¶ doc: '/ /' and 'rx/ /' clarified purpose of use

[05:16] <Geth> ¬¶ doc: Failure in tests has nothing to do with the PR, so I'm merging it. Thanks!

[05:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f3cf4dd102

[05:21] <jmerelo> squashable6: status

[05:21] <squashable6> jmerelo, ‚ö†üçï Next SQUASHathon in 1 day and ‚âà4 hours (2018-05-05 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[05:53] *** cog_ joined
[05:54] *** domidumont joined
[05:55] *** domidumont left
[05:57] *** domidumont joined
[06:00] *** wamba joined
[06:03] *** AlexDaniel joined
[06:04] *** domidumont left
[06:05] *** ChoHag left
[06:05] *** domidumont joined
[06:05] *** softmoth_ left
[06:06] *** softmoth_ joined
[06:10] *** troys left
[06:11] *** ChoHag joined
[06:17] *** cog_ left
[06:17] *** curan joined
[06:25] *** AlexDaniel left
[06:34] *** darutoko joined
[06:34] *** curan left
[06:37] *** grondilu joined
[06:37] <Geth> ¬¶ doc: 33283d3e6c | (Luca Ferrari)++ | doc/Type/Map.pod6

[06:37] <Geth> ¬¶ doc: Move Map postcircumfix {} example in the class description.

[06:37] <Geth> ¬¶ doc: 

[06:37] <Geth> ¬¶ doc: Move it out from the Map.ACCEPTS method.

[06:37] <Geth> ¬¶ doc: Close issue #1986

[06:37] <synopsebot> Link: https://doc.perl6.org/type/Map

[06:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/33283d3e6c

[06:37] <Geth> ¬¶ doc: 2b9349195f | (Luca Ferrari)++ | doc/Type/Map.pod6

[06:37] <Geth> ¬¶ doc: Add postcircumfix Map{} with list of keys.

[06:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/2b9349195f

[06:38] <Geth> ¬¶ doc: 8b7304c4eb | (Luca Ferrari)++ | doc/Type/Map.pod6

[06:38] <Geth> ¬¶ doc: Clarify the immutabily concept of Map with a straight example.

[06:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/8b7304c4eb

[06:38] <grondilu> Hello.  Anybody got a recent success compiling rakudo on LSFW?

[06:38] <grondilu> I got :

[06:38] <grondilu> /usr/bin/perl Configure.pl --optimize --prefix=/usr/local --make-install

[06:38] <grondilu> Welcome to MoarVM!

[06:38] <grondilu> Updating submodules .................................... ^CCommand failed (status 2): /usr/bin/perl Configure.pl --optimize --prefix=/usr/local --make-install

[06:38] <grondilu> Command failed (status 7424): /usr/bin/perl Configure.pl --prefix=/usr/local --backends=moar --make-install --git-protocol=https --gen-moar

[06:39] <grondilu> Had to ^C as it was stalling when trying to update submodules

[06:40] *** softmoth_ left
[06:41] <jmerelo> grondilu: sorry, what is LSFW?

[06:41] *** softmoth_ joined
[06:41] <jmerelo> It seems to be failing in the configure stage, which is written in perl. What version of perl are you using?

[06:42] <grondilu> "Linux Subsystem For Windows"

[06:42] <grondilu> This is perl 5, version 22, subversion 1 (v5.22.1) built for x86_64-linux-gnu-thread-multi

[06:42] <grondilu> (with 68 registered patches, see perl -V for more detail)

[06:42] <grondilu> Copyright 1987-2015, Larry Wall

[06:42] <grondilu> Perl may be copied only under the terms of either the Artistic License or the

[06:42] <grondilu> GNU General Public License, which may be found in the Perl 5 source kit.

[06:42] <grondilu> Complete documentation for Perl, including FAQ lists, should be found on

[06:42] <grondilu> this system using "man perl" or "perldoc perl".  If you have access to the

[06:42] <grondilu> Internet, point your browser at http://www.perl.org/, the Perl Home Page.

[06:42] <grondilu> (oops, sorry.  perl -v was more verbose than expected)

[06:42] <jmerelo> grondilu: that should be good to go. Where does it stop?

[06:43] <grondilu> at "Updating submodules....."

[06:44] <jmerelo> grondilu: this is what it does in that stage https://github.com/MoarVM/MoarVM/blob/3619e989170134701e454cc96ac347b4792bf67c/Configure.pl#L74

[06:44] <jmerelo> grondilu: do you have git installed?

[06:44] <grondilu> could be yes

[06:45] <grondilu> sorry meant just yes

[06:45] <jmerelo> grondilu: you know you can download the Rakudo Star distro already compiled and in .msi form, right? https://rakudo.org/files

[06:45] <grondilu> could be a permission issue.  Trying to install in $HOME

[06:45] <lookatme> we call it WSL(Windows Subsystem for Linux)

[06:46] <jmerelo> grondilu: good luck!

[06:46] <grondilu> lookatme: oh my bad

[06:47] <lookatme> grondilu, and there some problem when compile rakudo under WSL

[06:48] <grondilu> I managed once.   But it did not work this morning.

[06:48] <lookatme> grondilu, https://github.com/nxadm/rakudo-pkg/releases maybe you can using the prebuilt binary

[06:49] <grondilu> WSL is getting better quick though.  For instance right now I'm using irssi under it.  Not so long ago irssi did not work properly there.

[06:50] <lookatme> oh

[06:59] <grondilu> oh it was indeed a permission issue.  Configure.pl worked fine on $HOME

[07:01] <lookatme> oh, try sudo -s and bash config.status again

[07:04] <jmerelo> grondilu: great to hear that :-)

[07:09] <grondilu> compilation worked and ./perl6 executed well

[07:10] *** robertle joined
[07:12] * grondilu tries again to compile it from /usr/local/src

[07:16] *** ZofBot joined
[07:16] *** ChanServ sets mode: +v ZofBot

[07:16] *** huggable joined
[07:16] *** ChanServ sets mode: +v huggable

[07:16] *** buggable joined
[07:16] *** ChanServ sets mode: +v buggable

[07:24] *** aborazmeh joined
[07:24] *** aborazmeh left
[07:24] *** aborazmeh joined
[07:25] *** AlexDaniel joined
[07:31] *** rindolf joined
[07:32] * grondilu chmods g+w a bunch of directories in /usr/local

[07:35] <grondilu> "Hash key must be concrete strings" : http://paste.ubuntu.com/p/zTFdrHpzRm/

[07:35] <grondilu> I think my successful compilation earlier relied on a previous install of either nqp or MoarVM

[07:36] <grondilu> and I removed those installs for cleaness purpose

[07:43] <jmerelo> grondilu: really have no idea... This is where it's called https://cry.nu/coverage/roast/libmoar/coverage/home/samantha/git/MoarVM/src/6model/reprs/MVMHash.h.html

[07:44] <jmerelo> grondilu: maybe file an issue in MoarVM?

[07:47] *** softmoth_ left
[07:48] <grondilu> meh, I'll try again in a few days, see if it happens again.

[07:48] *** softmoth_ joined
[07:49] <jmerelo> grondilu: again, good luck.

[07:56] *** zakharyas joined
[07:57] *** scimon joined
[08:17] *** aborazmeh left
[08:18] <samcv> jmerelo: grondilu the latest coverage reports are here https://moarvm.github.io/coverage/

[08:18] <El_Che> grondilu: my packages work on WSL (if you're looking for pkg and not the process)

[08:18] <samcv> (it uses the nqp tests to generate the coverage info)

[08:20] <El_Che> "09:36 < grondilu> and I removed those installs for cleaness purpose" <-- rakudo, needs moarmv and nqp in a hardcode place (chosen by --prefix if not default). You can delete the src but not the compiled target

[08:20] <El_Che> (dunno if you're talking about that, just in case)

[08:23] <jmerelo> samcv: those coverage reports were the only place where I found the error mesage grondilu got. I wasn't looking for coverage reports per se, but thanks.

[08:25] <AlexDaniel> squashable6: next

[08:25] <squashable6> AlexDaniel, ‚ö†üçï Next SQUASHathon in 1 day and ‚âà1 hour (2018-05-05 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[08:26] <samcv> oh

[08:26] <samcv> heh

[08:26] <jmerelo> samcv++ 

[08:27] *** noganex left
[08:28] *** windyhouse joined
[08:28] <samcv> looks like google hasn't indexed our coverage reports

[08:32] *** grondilu left
[08:37] *** rurban joined
[08:37] *** rurban left
[08:39] <Geth> ¬¶ doc: 39543f694d | (Elizabeth Mattijsen)++ | doc/Language/5to6-perlfunc.pod6

[08:39] <Geth> ¬¶ doc: Refer to the CPAN Butterfly Plan for moreifunctions

[08:39] <Geth> ¬¶ doc: 

[08:39] <Geth> ¬¶ doc: Now that they've become available.

[08:39] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/39543f694d

[08:39] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlfunc

[08:44] *** wamba left
[08:47] *** noganex joined
[09:08] *** Ven`` joined
[09:08] *** Ven`` left
[09:09] *** Ven`` joined
[09:11] *** rurban joined
[09:11] *** rurban left
[09:12] *** cog_ joined
[09:16] <Geth> ¬¶ doc: 774789c6ad | (Luca Ferrari)++ | doc/Type/Buf.pod6

[09:16] <Geth> ¬¶ doc: Improve Buf.subbuf-rw documentation.

[09:16] <Geth> ¬¶ doc: 

[09:16] <Geth> ¬¶ doc: Code snippets tested on moar-2018.03.

[09:16] <Geth> ¬¶ doc: Align method prototype from the source.

[09:16] <synopsebot> Link: https://doc.perl6.org/type/Buf

[09:16] <Geth> ¬¶ doc: Close #1974

[09:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/774789c6ad

[09:16] <Geth> ¬¶ doc: 1dc88f2dc3 | (Luca Ferrari)++ | doc/Type/Buf.pod6

[09:16] <Geth> ¬¶ doc: Align subbuf-rw sub declarations.

[09:16] <Geth> ¬¶ doc: 

[09:16] <Geth> ¬¶ doc: See issue #1974

[09:16] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/1dc88f2dc3

[09:26] <Geth> ¬¶ doc: 7ec81b2341 | (Luca Ferrari)++ | doc/Type/Buf.pod6

[09:26] <Geth> ¬¶ doc: Buf.reallocate example improved.

[09:26] <Geth> ¬¶ doc: 

[09:26] <Geth> ¬¶ doc: Show that the buffer can be enlarged.

[09:26] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7ec81b2341

[09:26] <Geth> ¬¶ doc: ef2eb3887e | (Luca Ferrari)++ | doc/Type/Buf.pod6

[09:26] <Geth> ¬¶ doc: Reword Buf.reallocate.

[09:26] <Geth> ¬¶ doc: 

[09:26] <Geth> ¬¶ doc: As detailed

[09:26] <Geth> ¬¶ doc: <https://github.com/perl6/nqp/blob/master/docs/ops.markdown#setelems>

[09:26] <Geth> ¬¶ doc: the new items will have a null virtual machine dependent value.

[09:26] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ef2eb3887e

[09:26] *** ChoHag_ joined
[09:28] *** ChoHag left
[09:29] *** stmuk_ joined
[09:31] *** wamba joined
[09:31] <jmerelo> A little howto for tomorrow's squashathon https://dev.to/jj/squashing-perl-6-documentation-bugs-one-at-a-time-4ojn

[09:31] *** stmuk left
[09:34] *** CQ joined
[09:36] *** cog_ left
[09:39] <jmerelo> p6: say 256.base(2) ~ " issues to solve in perl6/doc "

[09:39] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´100000000 issues to solve in perl6/doc ‚ê§¬ª

[09:48] *** ChoHag_ left
[09:48] *** wamba left
[09:50] *** stmuk joined
[09:51] *** w_richard_w1 left
[09:53] *** stmuk_ left
[10:03] *** nebuchad` is now known as nebuchadnezzar

[10:04] <lizmat> weekly: https://dev.to/jj/squashing-perl-6-documentation-bugs-one-at-a-time-4ojn

[10:04] <notable6> lizmat, Noted!

[10:04] <lizmat> too bad I couldn't put this in the previous weekly

[10:08] <jmerelo> lizmat: I just wrote it today...

[10:09] <lizmat> yeah, I got that  :-)

[10:09] <jmerelo> lizmat: I have been wanting to write it for a long time, but life gets in the way... Today it had to get out, so, well...

[10:09] <lizmat> SDD  # Squashathon Driven Development

[10:10] <lizmat> afk for a bit&

[10:15] *** rindolf left
[10:16] *** raynold joined
[10:16] <jmerelo> lizmat++ :-)

[10:19] *** rindolf joined
[10:23] *** scimon left
[10:24] *** scimon joined
[10:24] <AlexDaniel> jmerelo: ‚Äúfinishing on Sunday morning‚Äù

[10:25] <AlexDaniel> jmerelo: officially the idea is that Saturday is the squashathon day, the reasons it spans from Friday to Sunday is timezones

[10:26] <AlexDaniel> jmerelo: also ‚ÄúCoordination will be done through the #perl6 dev channel‚Äù, actually we have #perl6 and #perl6-dev

[10:26] <AlexDaniel> jmerelo: squashathons are coordinated on #perl6, which is not a dev channel

[10:26] *** jmerelo left
[10:27] *** wamba joined
[10:27] *** wamba left
[10:27] *** eliasr joined
[10:29] <AlexDaniel> ‚ÄúSearch for it in the general Github search.‚Äù btw we also have this:

[10:29] <AlexDaniel> greppable6: ‚Äò.ACCEPTS‚Äô

[10:29] <greppable6> AlexDaniel, Found nothing!

[10:29] <AlexDaniel> greppable6: ‚Äò.PULL‚Äô

[10:30] <greppable6> AlexDaniel, Found nothing!

[10:30] <AlexDaniel> rly?

[10:30] <AlexDaniel> greppable6: ‚Äòshell(‚Äô

[10:30] <greppable6> AlexDaniel, Sorry, can't do that

[10:30] <AlexDaniel> ah

[10:30] <AlexDaniel> oops

[10:30] <AlexDaniel> greppable6: \.ACCEPTS

[10:30] <greppable6> AlexDaniel, 30 lines, 12 modules: https://gist.github.com/88e44d0314f73d432564dbaddbc9e253

[10:33] *** Ven`` left
[10:36] <AlexDaniel> .tell jmerelo https://irclog.perlgeek.de/perl6/2018-05-03#i_16124307

[10:36] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[10:36] <AlexDaniel> .tell jmerelo btw I added a link to your article to https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day , it's pretty cool

[10:36] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[10:36] <AlexDaniel> jmerelo++

[10:39] *** softmoth_ left
[10:49] *** windyhouse left
[11:09] *** ExtraCrispy joined
[11:09] *** windyhouse joined
[11:36] *** traxex2 joined
[11:37] *** morjo joined
[11:40] *** zakharyas left
[12:03] <Geth> ¬¶ perl6.org: ab5043b6ed | (Claudio Ramirez)++ | 2 files

[12:03] <Geth> ¬¶ perl6.org: update rakudo-pkg info

[12:03] <Geth> ¬¶ perl6.org: review: https://github.com/perl6/perl6.org/commit/ab5043b6ed

[12:04] <unclechu> hey guys, i'm using perl6 as a calculator for date and time, e.g. perl6 -e 'DateTime.new(DateTime.new(q/0000-01-01T16:30:00Z/) - DateTime.new(q/0000-01-01T01:15:00Z/)).say'

[12:05] <ktown> m: DateTime.new(DateTime.new(q/0000-01-01T16:30:00Z/) - DateTime.new(q/0000-01-01T01:15:00Z/)).say

[12:05] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´1970-01-01T15:15:00Z‚ê§¬ª

[12:05] <unclechu> but i'm wondering if i can describe time easier, like `Duration.new(q/3:30/) - Duration.new(q/1:15/)`, it isn't a legal code but demonstration how i would like to use it?

[12:06] <unclechu> is there a way to write it down shorter?

[12:07] <unclechu> without filling ISO date with zeros

[12:09] <Geth> ¬¶ rakudo.org: 92fa1cf3a6 | (Claudio Ramirez)++ | templates/files-rakudo-third-party.html.ep

[12:09] <Geth> ¬¶ rakudo.org: update rakudo-pkg info

[12:09] <Geth> ¬¶ rakudo.org: review: https://github.com/perl6/rakudo.org/commit/92fa1cf3a6

[12:21] <AlexDaniel> m: say DateTime.new(:year, :2hour, :15minute)

[12:21] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´0001-01-01T02:15:00Z‚ê§¬ª

[12:32] <Geth> ¬¶ perl6.org: 099503acd2 | (Claudio Ramirez)++ | source/downloads/index.html

[12:32] <Geth> ¬¶ perl6.org: shorten button

[12:32] <Geth> ¬¶ perl6.org: review: https://github.com/perl6/perl6.org/commit/099503acd2

[12:32] <AlexDaniel> unclechu: I don't know if there's any neat way to do that

[12:32] *** cog_ joined
[12:33] *** scimon left
[12:33] *** scimon joined
[12:33] <AlexDaniel> m: dd DateTime.new(:year, :16hour, :30minute) - DateTime.new(:year, :1hour, :15minute)

[12:33] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´Duration.new(54900.0)‚ê§¬ª

[12:34] <AlexDaniel> ‚Üë that's not too bad though

[12:42] <unclechu> :m say DateTime.new(DateTime.new(:year, :15hour, :30minute) - DateTime.new(:year, :1hour, :15minute))

[12:42] <unclechu> AlexDaniel, thanks, that's better

[12:43] <AlexDaniel> m: say DateTime.new(DateTime.new(:year, :15hour, :30minute) - DateTime.new(:year, :1hour, :15minute))

[12:43] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´1970-01-01T14:15:00Z‚ê§¬ª

[12:45] <unclechu> :m say DateTime.new(DateTime.new(:year, :15hour, :30minute) - DateTime.new(:year, :1hour, :15minute)).hh-mm-ss

[12:46] <AlexDaniel> unclechu: it's ‚Äúm:‚Äù not ‚Äú:m‚Äù

[12:46] <unclechu> m: say DateTime.new(DateTime.new(:year, :15hour, :30minute) - DateTime.new(:year, :1hour, :15minute)).hh-mm-ss

[12:46] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´14:15:00‚ê§¬ª

[12:46] <unclechu> silly me :)

[12:47] *** undersightable6 joined
[12:57] *** cog_ left
[13:00] *** zakharyas joined
[13:00] *** bisectable6 left
[13:01] *** bisectable6 joined
[13:01] *** bisectable6 left
[13:01] *** ChoHag joined
[13:03] *** athenot joined
[13:04] *** wamba joined
[13:10] *** bisectable6 joined
[13:10] *** ChanServ sets mode: +v bisectable6

[13:10] *** zakharyas left
[13:11] *** zakharyas joined
[13:12] *** committable6 left
[13:13] *** committable6 joined
[13:13] *** sena_kun joined
[13:14] *** committable6 left
[13:15] *** committable6 joined
[13:18] *** committable6 left
[13:22] *** committable6 joined
[13:23] *** curan joined
[13:23] *** Sgeo left
[13:24] *** Sgeo joined
[13:25] *** curan left
[13:25] *** undersightable6 left
[13:25] *** curan joined
[13:26] *** undersightable6 joined
[13:28] *** scimon left
[13:29] *** undersightable6 left
[13:31] *** scimon joined
[13:31] *** undersightable6 joined
[13:36] <buggable> New CPAN upload: P5getprotobyname-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5getprotobyname-0.0.1.tar.gz

[13:44] *** skids joined
[13:44] *** mcmillhj joined
[13:44] *** CQ left
[13:51] *** ufobat left
[13:53] *** athenot_ joined
[13:54] *** athenot left
[13:56] <buggable> New CPAN upload: P5getgrnam-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5getgrnam:cpan:ELIZABETH

[13:58] *** ggherdov joined
[13:58] *** ggherdov left
[13:59] *** ggherdov joined
[13:59] *** ggherdov left
[14:00] *** ggherdov joined
[14:00] *** ggherdov left
[14:02] *** ggherdov joined
[14:02] *** ggherdov left
[14:03] *** ggherdov joined
[14:03] *** ggherdov left
[14:05] *** smash joined
[14:05] *** ggherdov joined
[14:05] *** ggherdov left
[14:06] *** ggherdov joined
[14:06] *** ggherdov left
[14:08] *** ggherdov joined
[14:08] *** ggherdov left
[14:10] *** ggherdov joined
[14:10] *** ggherdov left
[14:11] *** zakharyas left
[14:11] *** zakharyas joined
[14:13] *** ggherdov joined
[14:13] *** ggherdov left
[14:17] *** zakharyas1 joined
[14:20] *** ggherdov joined
[14:20] *** ggherdov left
[14:23] *** zakharyas1 left
[14:25] *** ggherdov joined
[14:25] *** ggherdov left
[14:32] *** ggherdov joined
[14:32] *** ggherdov left
[14:36] *** molaf joined
[14:37] *** ggherdov joined
[14:37] *** ggherdov left
[14:38] *** mcmillhj left
[14:39] *** mcmillhj joined
[14:41] *** curan left
[14:43] *** molaf left
[14:45] *** ggherdov joined
[14:45] *** ggherdov left
[14:49] *** itaipu joined
[14:57] *** ggherdov joined
[14:57] *** ggherdov left
[14:58] *** AlexDaniel left
[14:58] *** windyhouse left
[14:59] *** windyhouse joined
[15:01] *** ggherdov joined
[15:01] *** ggherdov left
[15:09] *** ggherdov joined
[15:09] *** ggherdov left
[15:10] *** molaf joined
[15:13] *** troys joined
[15:14] *** ggherdov joined
[15:14] *** ggherdov left
[15:18] *** robertle left
[15:22] *** molaf left
[15:22] *** zakharyas left
[15:24] *** ChoHag left
[15:24] *** domidumont left
[15:25] *** shinobicl joined
[15:45] *** wamba left
[15:45] *** itaipu left
[15:45] *** comborico1611 joined
[15:47] *** molaf joined
[15:50] *** Petit_Dejeuner joined
[15:53] *** cog_ joined
[15:54] *** jmerelo joined
[15:55] <jmerelo> O/

[15:55] <yoleaux> 10:36Z <AlexDaniel> jmerelo: https://irclog.perlgeek.de/perl6/2018-05-03#i_16124307

[15:55] <yoleaux> 10:36Z <AlexDaniel> jmerelo: btw I added a link to your article to https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day , it's pretty cool

[15:56] <jmerelo> AlexDaniel`: Thanks! Hope it helps tomorrow

[15:56] <jmerelo> Will change that.

[15:59] *** robertle joined
[16:00] <jmerelo> greppable6: ~~

[16:01] <jmerelo> greppable6: ComUnit

[16:01] <jmerelo> greppable6: CompUnit

[16:01] <greppable6> jmerelo, Found nothing!

[16:01] <greppable6> jmerelo, 418 lines, 78 modules: https://gist.github.com/48604c2445258702b31957d6c956c851

[16:01] <greppable6> jmerelo, 10251 lines, 698 modules: https://gist.github.com/35124b916a96e596a18786b8fe318d71

[16:07] <jmerelo> .tell Alexdaniel: it's updated now. Any suggestion will be appreciated/welcome/give you a prize of a couple of beers payable when we meet.

[16:07] <yoleaux> jmerelo: What kind of a name is "Alexdaniel:"?!

[16:07] <jmerelo> .tell Alexdaniel it's updated now. Any suggestion will be appreciated/welcome/give you a prize of a couple of beers payable when we meet.

[16:07] <yoleaux> jmerelo: I'll pass your message to Alexdaniel.

[16:08] *** mcmillhj left
[16:08] *** MilkmanDan left
[16:09] *** MilkmanDan joined
[16:16] *** ggherdov joined
[16:16] *** ggherdov left
[16:16] *** mcmillhj joined
[16:17] *** cog_ left
[16:20] *** st_elmo joined
[16:21] *** domidumont joined
[16:21] *** mcmillhj left
[16:23] *** scimon left
[16:24] *** itaipu joined
[16:24] <lizmat> jmerelo: I think it's actually AlexDaniel

[16:24] <jmerelo> lizmat: With the capital D, right?

[16:25] <jmerelo> .tell AlexDaniel it's updated now. Any suggestion will be appreciated/welcome/give you a prize of a couple of beers payable when we meet.

[16:25] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[16:25] <jmerelo> Anyway, here's the write up on how to help with the Squashathon. https://dev.to/jj/squashing-perl-6-documentation-bugs-one-at-a-time-4ojn any other suggestion will be appreciated.

[16:25] <jmerelo> squashable6: status

[16:25] <squashable6> jmerelo, ‚ö†üçï Next SQUASHathon in ‚âà17 hours (2018-05-05 UTC-12‚åÅUTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[16:30] *** APic left
[16:30] *** Gothmog_ left
[16:30] *** Gothmog_ joined
[16:30] *** APic joined
[16:31] *** mcmillhj joined
[16:32] <comborico1611> I feel rx { } is so much clearer than / /.  I'm very pleased that I am given the option.

[16:32] <jmerelo> comborico1611: that's Perl 

[16:33] <jmerelo> there are always many ways to do it :-)

[16:33] <comborico1611> Same thing with \- and '-'

[16:33] <comborico1611> Yes, it is wise.   The best option will eventually rise to the top by reason of popularity of use.

[16:36] *** mr_ron joined
[16:41] *** Ven`` joined
[16:42] *** stmuk_ joined
[16:43] *** Ven`` left
[16:44] *** stmuk left
[16:45] *** wamba joined
[16:46] *** stmuk_ left
[16:46] *** MasterDuke left
[16:47] <timotimo> why not rx"foo" :D

[16:47] *** stmuk_ joined
[16:50] <Voldenet> I prefer rx ! !

[16:51] <mr_ron> I came up with a blog posting about getting advent Grammar::Modelica to finish parsing the Modelica Standard Library but wonder if it might make sense to put it on the perl6advent blog.

[16:51] <mr_ron> https://perl6monger.software-path.com/2018/05/02/a-comeback-for-the-little-match-girls-perl-6-grammar/

[16:52] <timotimo> you mean as an edit to the post?

[16:53] <mr_ron> Not as an edit.  It looks to big for a comment.  I was thinking of separate post referring to the original.

[16:53] <timotimo> hm, so far i believe we've only posted to that blog during actual pre-christmas times

[16:53] <timotimo> not sure how well that change would work

[16:55] *** ggherdov joined
[16:55] *** ggherdov left
[16:55] <mr_ron> There were two posts that weren't during December but I now see that those were special cases.

[16:56] <comborico1611> Is there any way to add "expressions" to a Character Class.  Example: '\d ** 4'.

[16:56] <timotimo> how did these special cases differ from your proposed post?

[16:56] <timotimo> comborico1611: can you explain with an example what you want?

[16:56] <timotimo> i mean, \d ** 4, you can do that

[16:57] <timotimo> what did you want that you can't find out how to do?

[16:57] <comborico1611> So the entire rx would look like this: rx { <[ (\d ** 4) '-' \d\d '-' \d\d }

[16:57] <comborico1611> The idea being use each unit as a character.

[16:57] <timotimo> no, character classes are not for that kind of thing

[16:57] <timotimo> but you can re-use regexes inside other regexes

[16:57] <comborico1611> Crazy.

[16:58] <mr_ron> The two posts bracketed the Dec 2015 release of Perl 6.

[16:58] <timotimo> m: my regex four { \d \d \d \d }; my regex two { \d\d }; say "2018-04-03" ~~ rx{ <&four> '-' <&two> '-' <&two> }

[16:58] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´ÔΩ¢2018-04-03ÔΩ£‚ê§¬ª

[16:58] <timotimo> m: my regex four { \d \d \d \d }; my regex two { \d\d }; say "2018-04-03" ~~ rx{ <four> '-' <two> '-' <two> }

[16:58] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´ÔΩ¢2018-04-03ÔΩ£‚ê§ four => ÔΩ¢2018ÔΩ£‚ê§ two => ÔΩ¢04ÔΩ£‚ê§ two => ÔΩ¢03ÔΩ£‚ê§¬ª

[16:59] <timotimo> no need to use the & there, it'll only cause it to not capture

[16:59] <comborico1611> Thanks.  Yup, that's the ticket!

[16:59] <timotimo> that's also how you would design a grammar

[17:00] <timotimo> m: my regex four { \d \d \d \d }; my regex two { \d\d }; say "2018-04-03" ~~ rx{ <year=.four> '-' <month=.two> '-' <day=.two> }

[17:00] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´No such method 'four' for invocant of type 'Match'. Did you mean 'floor'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:00] <timotimo> oops

[17:00] <timotimo> m: my regex four { \d \d \d \d }; my regex two { \d\d }; say "2018-04-03" ~~ rx{ <year=&four> '-' <month=&two> '-' <day=&two> }

[17:00] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´ÔΩ¢2018-04-03ÔΩ£‚ê§ year => ÔΩ¢2018ÔΩ£‚ê§ month => ÔΩ¢04ÔΩ£‚ê§ day => ÔΩ¢03ÔΩ£‚ê§¬ª

[17:00] <comborico1611> I see.  Yeah, I hear about these grammars, here and there.

[17:00] *** stmuk_ left
[17:00] <timotimo> here you get year, month, and day instead of four, two, and two

[17:01] <comborico1611> It's too bad IRC doesn't have like a <code> tag.  So much more difficult to read in-line.

[17:01] <timotimo> that's true, irc only has conventions

[17:02] *** stmuk_ joined
[17:03] <comborico1611> timotimo: What are the < > groupings called, as in <four> '-' <two>...

[17:03] <timotimo> that's the multi-purpose syntax for lots of different things

[17:04] <comborico1611> Would [ ] also work?

[17:04] <timotimo> no, that'll give you, for example, a character class that matches an f, an o, a u, or an r

[17:05] <comborico1611> Okay, thanks!

[17:06] *** stmuk_ left
[17:07] * comborico1611 Out for lunch!

[17:09] *** stmuk_ joined
[17:12] *** siigl joined
[17:18] <mr_ron> Does it make sense to put my blog posting on r/perl6?

[17:18] *** ggherdov joined
[17:18] *** ggherdov left
[17:19] *** stmuk joined
[17:20] *** amalia___ joined
[17:21] *** pilne joined
[17:22] *** stmuk_ left
[17:22] *** stmuk__ joined
[17:24] *** stmuk left
[17:32] <siigl> p6: say 3

[17:32] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´3‚ê§¬ª

[17:35] *** stmuk joined
[17:38] *** stmuk__ left
[17:38] *** isigl_ joined
[17:39] <isigl_> p6: say [*] 1..5;

[17:39] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´120‚ê§¬ª

[17:40] <masak> p6: say [*] reverse 1..5

[17:40] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´120‚ê§¬ª

[17:40] <masak> works backwards too :)

[17:40] <isigl_> great to know. Thanks!

[17:42] <masak> p6: say [*] "12345".comb

[17:42] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´120‚ê§¬ª

[17:43] *** Rawriful joined
[17:47] <sena_kun> m: class A { has $.a is rw }; my $a = A.new(:a(1)); A.^attributes(:local)[0].set_value($a, 2); $a.a = 3;

[17:47] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´Cannot modify an immutable Int (2)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:50] *** wamba left
[17:51] <Voldenet> what does :local do in this context?

[17:52] <Voldenet> m: class A { has $.a is rw }; my $a = A.new(:a(1)); A.^attributes[0].set_value($a, 2); $a.a = 3;

[17:52] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´Cannot modify an immutable Int (2)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:52] <Voldenet> it seems roughly the same, but is it?

[17:52] <sena_kun> m: class A { has $.a is rw }; say A.^attributes; say A.^attributes(:local);

[17:52] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´(Mu $!a)‚ê§(Mu $!a)‚ê§¬ª

[17:53] <sena_kun> hmm, don't see it in the docs. don't mind me, it was some kind of shady magic here. :)

[17:54] <Voldenet> Aha, there's docs for it

[17:54] <Voldenet> >The :local named argument limits the returned methods to those defined in the Programmer class and excludes the inherited methods.

[17:55] <sena_kun> yup

[17:57] *** ggherdov joined
[17:57] *** ggherdov left
[18:06] *** siigl__ joined
[18:06] *** isigl_ left
[18:10] *** wamba joined
[18:12] *** lucs joined
[18:15] *** siigl__ left
[18:16] *** xinming joined
[18:18] *** sacomo left
[18:20] *** ggherdov joined
[18:20] *** ggherdov left
[18:22] *** sauvin left
[18:23] *** jmerelo left
[18:27] *** AlexDaniel joined
[18:28] *** sacomo joined
[18:30] *** _sfiguser joined
[18:30] <_sfiguser> hello all, is there something comparable to numpy for perl6 ?

[18:31] <_sfiguser> which is continuously updated not an ancient relic i mean

[18:34] <AlexDaniel> .

[18:34] <yoleaux> 16:07Z <jmerelo> AlexDaniel: it's updated now. Any suggestion will be appreciated/welcome/give you a prize of a couple of beers payable when we meet.

[18:34] <yoleaux> 16:25Z <jmerelo> AlexDaniel: it's updated now. Any suggestion will be appreciated/welcome/give you a prize of a couple of beers payable when we meet.

[18:43] <lizmat> _sfiguser: I'm afraid I'm too unfamiliar with numpy to be able to answer that question

[18:44] <moritz> I'm not aware of any dynamic language that has libraries comparable to numpy/scipy

[18:45] <Petit_Dejeuner> julia probably has something in the stdlib

[18:47] <Petit_Dejeuner> There's this, but it still looks immature. https://github.com/pierre-vigier/Perl6-Math-Matrix

[18:53] *** boucher joined
[18:54] *** siigl left
[18:55] <boucher> Hey folks, trying to wrap my head around Perl 6, hope someone wouldn't mind answering a few questions about how hyper and reduce can/do combine...?

[18:56] <moritz> boucher: we can certainly try

[18:56] <boucher> In particular, I assume the outcome of a non-associative operation, like [>>-<<] is kinda undefined?

[18:57] <Petit_Dejeuner> Is there a way to handle a failed call to 'open' with a statically typed variable? I have code like 'my IO::Handle $f = open $name', but if $name does not exist, then a Failure object is passed back and the type check fails.

[18:57] <Petit_Dejeuner> "statically" or whatever you call it

[18:58] <Petit_Dejeuner> I could just catch the type error, but that's a pretty broad error to catch.

[18:58] <lizmat> Petit_Dejeuner: with open($name) -> $handle { }

[18:58] <AlexDaniel> Petit_Dejeuner: what about my IO::Handle $f = try open ‚Äòblah‚Äô;

[18:58] <AlexDaniel> Petit_Dejeuner: it will be Nil if unsuccessful

[18:58] <lizmat> AlexDaniel: open doesn't throw

[18:58] <moritz> boucher: I don't even know what's that supposed to do :-)

[18:58] <AlexDaniel> ah

[18:59] <AlexDaniel> lizmat: uh oh‚Ä¶ but‚Ä¶ it works?

[18:59] <moritz> you can always "use fatal;"

[18:59] <moritz> then it throws

[18:59] <AlexDaniel> m: my IO::Handle $f = try open ‚Äòblah‚Äô; say 42

[18:59] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´42‚ê§¬ª

[18:59] <AlexDaniel> m: my IO::Handle $f = try open ‚Äòblah‚Äô; say $f

[18:59] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´IO::Handle is disallowed in restricted setting‚ê§  in sub restricted at src/RESTRICTED.setting line 1‚ê§  in method gist at src/RESTRICTED.setting line 33‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[18:59] <AlexDaniel> e: my IO::Handle $f = try open ‚Äòblah‚Äô; say $f

[18:59] <evalable6> AlexDaniel, rakudo-moar 1447f41e6: OUTPUT: ¬´(Handle)‚ê§¬ª

[18:59] <AlexDaniel> it works? But why?

[18:59] <timotimo> i interpret that as "a list of same-shaped vectors or hashes or whatever ought to be subtracted in a row"

[18:59] <moritz> AlexDaniel: "open" generally behaves differently with camelia

[19:00] *** ggherdov joined
[19:00] <AlexDaniel> moritz: but there it is with evalable

[19:00] *** ggherdov left
[19:00] <lizmat> AlexDaniel: I think it's the try sinking the Failure

[19:00] <lizmat> and then catching thar

[19:00] <lizmat> *that

[19:00] <boucher> Heh, well, okay, suppose I say [+] ^10  That gives 45, as I'd expect.

[19:01] *** darutoko left
[19:02] <boucher> If I say [>>+<<] ^10  that also gives 45, and even though I don't think Rakudo Perl yet does autothreading, in theory, it should attempt to parallelize the reduction if it can.

[19:02] <timotimo> ah, no that's a misunderstanding

[19:02] <timotimo> [>>+<<] is actually just a regular [ ] but the operator inside is for lists/hashes instead of single values

[19:02] <timotimo> observe:

[19:03] <boucher> Ah.

[19:03] <timotimo> m: my @input = <a b c>; my @other = <1 2 3>; my @result = @input >>~<< @other; say @result.perl

[19:03] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´["a1", "b2", "c3"]‚ê§¬ª

[19:03] <boucher> Is there a syntax for parallel reduction?

[19:03] <timotimo> so you can use [>>+<<] the following way:

[19:03] <timotimo> m: my @inputs = <a b c>, <x y z>, <1 2 3>, <9 8 7>; say [>>~<<] @inputs;

[19:03] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´(ax19 by28 cz37)‚ê§¬ª

[19:04] <boucher> Ah, I see.

[19:04] <timotimo> m: my @values = ^100_000; say @values.race.sum; # not sure if that's implemented

[19:04] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´4999950000‚ê§¬ª

[19:05] <timotimo> looks like that's single-threaded still

[19:06] <timotimo> probably just an NYI

[19:06] <timotimo> but here's a silly work-around

[19:06] <boucher> Yeah, autothreading's probably going to be a nightmare to implement properly.  It sounds nice, but I wonder if I'll ever be able to trust it to be efficient without holding its hand.

[19:07] <timotimo> m: my @values = ^100_000; say @values.rotor(1000).race.map({ $_.sum });

[19:07] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´(499500 1499500 2499500 3499500 4499500 5499500 6499500 7499500 8499500 9499500 10499500 11499500 12499500 13499500 14499500 15499500 16499500 17499500 18499500 19499500 20499500 21499500 22499500 23499500 24499500 25499500 26499500 27499500 28499500 ‚Ä¶¬ª

[19:07] <timotimo> m: my @values = ^100_000; say @values.rotor(1000).race.map({ $_.sum }).sum;

[19:07] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´4999950000‚ê§¬ª

[19:08] <timotimo> needs much more values to actually benefit from multi-threading at all

[19:08] <boucher> Yeah, obviously.

[19:08] <timotimo> actually, it seems like sum is so much faster than the rest, that it doesn't benefit even for 10k chunks out of 10 million values

[19:08] <lizmat> weekly: https://perl6monger.software-path.com/2018/05/02/a-comeback-for-the-little-match-girls-perl-6-grammar/

[19:08] <notable6> lizmat, Noted!

[19:08] <timotimo> oh, i need to set batches to 1

[19:09] <timotimo> i can't get it noticably above 130% cpu usage

[19:09] <timotimo> not sure what part of this is splitting the values up at the beginning, though

[19:09] <lizmat> timotimo: yeah, that's because the work each job does is not enough, so there's always a thread available to pick the next one

[19:09] <lizmat> so we never get more threads

[19:10] <timotimo> yeah, that's what i expected

[19:12] <Petit_Dejeuner> The 'with' worked, but is there no easier way to get open to raise an exception when it fails?

[19:12] <Petit_Dejeuner> Like X::IO::DoesNotExist ?

[19:13] <lizmat> like moritz suggested: 'use fatal'

[19:13] *** cog_ joined
[19:15] <Petit_Dejeuner> That's an X::AdHoc.

[19:16] <_sfiguser> guys i would like to start with perl and don√¨t know if to start with 6 or 5, any suggestion^

[19:16] <_sfiguser> ?

[19:16] <Petit_Dejeuner> Which is better, but still not super helpful since (afaik) there's no information on the cause of the error in the type.

[19:16] <Petit_Dejeuner> Unless I parse some kind of error string.

[19:17] <lizmat> Petit_Dejeuner: yeah, I'm surprised we don't have a typed error for that

[19:17] <moritz> Petit_Dejeuner: that is indeed not awesome

[19:17] <moritz> _sfiguser: what do you want to do in the end?

[19:17] <_sfiguser> data analysis

[19:17] <_sfiguser> data science and machine learning

[19:18] *** AlexDaniel left
[19:18] <lizmat> hmmm... it appears the error comes from the bowels of nqp / MoarVM:

[19:18] <lizmat> CATCH { .fail }; nqp::open(...)

[19:19] <moritz> _sfiguser: I think currently Perl 5 and Python both do better in that area than Perl 6

[19:19] <Petit_Dejeuner> _sfiguser: For Machine Learning, Python has all the libraries afaict.

[19:20] <moritz> TensorFlow in particular, and numpy/scipy

[19:20] <Petit_Dejeuner> lizmat: Is this sort of thing (the error type) even worth changing at this point? I assume changing 'open' will break a bunch of code.

[19:21] <lizmat> yeah, maybe something for 6.d  

[19:22] *** ggherdov joined
[19:22] *** ggherdov left
[19:30] *** domidumont left
[19:33] *** athenot_ left
[19:34] *** athenot joined
[19:36] <shinobicl> What is really required for data analysis, besides statistics/GPU libraries? are some specific data structures needed for this? 

[19:36] <buggable> New CPAN upload: P5getpwnam-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5getpwnam:cpan:ELIZABETH

[19:37] *** cog_ left
[19:38] <El_Che> shinobicl: python needs a lot of C libs for speed (huge arrays and the like)

[19:38] <yoleaux> 12:03Z <AlexDaniel> El_Che: prerelease is up and tested :) That's pretty cool. I'd try to do these regularly, and maybe I'll even automate it

[19:38] <El_Che> \o/

[19:40] <boucher> Data structure-wise, vector and matrix support, optionally sparse, is handy.  I like a good graph theory framework too.

[19:41] *** mcmillhj left
[19:46] <buggable> New CPAN upload: P5built-ins-0.0.15.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5built-ins-0.0.15.tar.gz

[19:46] <moritz> also you want lots of linear algebra libs like matrix multiplication, inversion, LU and LR decomposition etc.

[19:47] <moritz> determinants, eigenvector decomposition etc.

[19:48] <boucher> Yeah, I figured since the question was about data structures, that all the things that can be done to the data was covered by "statistics/GPU libraries"

[19:49] <shinobicl> mmm that sounds fun to build :) I wonder if i could speed up my module Data::StaticTable to be of any use for this. I know is more like a toy module, but might be a good start to build something decent.

[19:50] <boucher> But yeah...even though Perl was my first love, I admit I use Python most of the time for stuff like this.

[19:51] *** mcmillhj joined
[19:56] <boucher> I started off with Perl 4...nearly, goodness, 25 years ago already, but I haven't dipped my toe seriously into Perl 6 until this year, fearing it was too in flux to bother with.

[20:00] <skids> You did manage to miss most of the rug-pulling, I think.

[20:00] <boucher> (Or for a period, dead/infinitely postponed/abandoned, but it seems like things are shaking out in a positive direction)

[20:02] <boucher> I'm a bit of a conservative programmer.  It took me forever to embrace many of Perl 5's additions, even.

[20:02] *** ggherdov joined
[20:02] *** ggherdov left
[20:03] <skids> I think there's a strong committment now to keeping "it" working fast if "it" was already working fast, "it" being whatever feature.

[20:04] <boucher> But things like grammars and junctions definitely attracted me as things that neither Perl 5 nor Python do especially elegantly by themselves, that I want to have as a core language feature.

[20:04] *** john___ joined
[20:06] *** Kaypie left
[20:07] <boucher> I certainly appreciate performance, and it's why I'm interested in autothreading whenever it happens, but for me, Perl was always about the efficiency with which *I* could express something in code, with the efficiency of the code itself being somewhat secondary in most situations.

[20:08] *** Kaiepi joined
[20:09] <boucher> It's always nice if I don't find myself having to turn to external libraries or rewriting in C or whatever to make it more performant, but Perl was never my first choice for heavy lifting...it was my swiss army knife.  And now, it has way more nifty tools packed into it.

[20:10] *** Kaiepi left
[20:11] *** amalia___ left
[20:11] *** _sfiguser left
[20:11] *** molaf left
[20:12] <boucher> In fact, it's about as daunting as https://www.amazon.com/dp/B001DZTJRQ/

[20:12] *** Kaiepi joined
[20:12] <boucher> So I'm not entirely sure it still fits in my pocket, but I'm gonna try.

[20:13] *** softmoth joined
[20:24] *** st_elmo left
[20:24] *** ggherdov joined
[20:24] *** ggherdov left
[20:25] <skids> shinobicl: in addition to whatever the vector crowd needs for libs, there is some heavy lifting to do on the native types and CStruct to fix bugs that can be a real turn-off for anyone working with structured data.  e.g. RT#124088 and the NYI bits of HAS attributes.

[20:25] <synopsebot> RT#124088 [open]: https://rt.perl.org/Ticket/Display.html?id=124088 [SEVERE] Unsigned int in highest bit length, stays negative

[20:25] *** molaf joined
[20:31] *** _sfiguser joined
[20:36] <buggable> New CPAN upload: P5built-ins-0.0.16.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5built-ins-0.0.16.tar.gz

[20:39] *** softmoth left
[20:40] *** softmoth joined
[20:47] *** softmoth left
[20:48] *** softmoth joined
[20:49] *** brrt joined
[20:51] *** ExtraCrispy left
[20:57] *** mr_ron left
[20:58] *** athenot left
[20:58] *** athenot_ joined
[21:03] *** athenot_ left
[21:07] *** molaf left
[21:08] *** skids left
[21:11] *** Rawriful left
[21:22] <john___> 

[21:22] *** john___ left
[21:29] *** brrt left
[21:31] *** mr_ron joined
[21:35] *** sena_kun left
[21:39] *** stmuk_ joined
[21:40] *** ChoHag joined
[21:42] *** stmuk left
[21:44] *** stmuk joined
[21:46] *** stmuk_ left
[21:47] *** MasterDuke joined
[21:53] *** stmuk left
[22:02] *** shinobicl left
[22:04] *** robertle left
[22:05] *** stmuk joined
[22:05] *** zachk joined
[22:06] *** zachk left
[22:06] *** zachk joined
[22:13] *** itaipu left
[22:13] <comborico1611> How do you apply SUBST to all, not just first occurrence?

[22:14] <timotimo> also pass :g

[22:14] <comborico1611> m: my $string = 'abcdefgcd'; $string = $string.subst('cd', 'CD');

[22:14] <camelia> rakudo-moar 1447f41e6: ( no output )

[22:14] <comborico1611> m: my $string = 'abcdefgcd'; $string = $string.subst('cd', 'CD'); say $string

[22:14] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´abCDefgcd‚ê§¬ª

[22:14] <timotimo> m: my $string = 'abcdefgcd'; $string = $string.subst('cd', 'CD', :g);

[22:14] <camelia> rakudo-moar 1447f41e6: ( no output )

[22:14] <timotimo> m: my $string = 'abcdefgcd'; $string = $string.subst('cd', 'CD', :g); say $string

[22:14] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´abCDefgCD‚ê§¬ª

[22:14] <timotimo> m: my $string = 'abcdefgcd'; $string .= subst('cd', 'CD', :g); say $string

[22:14] <camelia> rakudo-moar 1447f41e6: OUTPUT: ¬´abCDefgCD‚ê§¬ª

[22:14] <comborico1611> :g is the global adverb?

[22:15] <comborico1611> That thing is tricky to understand.

[22:15] <comborico1611> Thanks!

[22:15] <timotimo> :g is just the same as g => True

[22:15] <timotimo> i.e. pass a named parameter named "g" with the value "True"

[22:16] *** stmuk_ joined
[22:17] <comborico1611> I'm not very familiar with => except for in hashes.

[22:18] <comborico1611> But I got your example in my notes in the book now.

[22:18] *** stmuk left
[22:18] <comborico1611> With an accrediation to you. : -_)

[22:18] <timotimo> there's no need for that ;)

[22:18] *** stmuk joined
[22:18] <comborico1611> I like to do that.  Just help me remember people, as well.

[22:19] <timotimo> OK :)

[22:19] <comborico1611> And I know who to blame for bad info... haha.

[22:20] *** stmuk_ left
[22:25] *** Kaiepi left
[22:26] *** Kaiepi joined
[22:28] *** windyhouse left
[22:29] *** windyhouse joined
[22:33] *** cog_ joined
[22:34] *** rindolf left
[22:43] *** itaipu joined
[22:45] *** mcmillhj left
[22:54] *** Kaiepi left
[22:55] *** Kaiepi joined
[22:57] *** cog_ left
[22:59] *** mcmillhj joined
[23:01] *** skids joined
[23:04] *** mcmillhj left
[23:04] *** wamba left
[23:13] *** mcmillhj joined
[23:17] *** itaipu left
[23:18] *** mcmillhj left
[23:26] *** protium joined
[23:41] *** mcmillhj joined
[23:46] *** mcmillhj left
[23:55] *** mcmillhj joined
