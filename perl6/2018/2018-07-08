[00:01] <Geth> ¦ doc: a966b33ff9 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/5to6-nutshell.pod6

[00:01] <Geth> ¦ doc: remove the period

[00:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a966b33ff9

[00:01] <synopsebot> Link: https://doc.perl6.org/language/5to6-nutshell

[00:03] *** gabiruh joined
[00:03] <Geth> ¦ doc: c62f69efeb | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/5to6-perlfunc.pod6

[00:03] <Geth> ¦ doc: remove the period

[00:03] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c62f69efeb

[00:03] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlfunc

[00:04] <Geth> ¦ doc: 03235bcb24 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/5to6-perlop.pod6

[00:04] <Geth> ¦ doc: remove the period

[00:04] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/03235bcb24

[00:04] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlop

[00:05] <Geth> ¦ doc: b0309b716a | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/5to6-perlsyn.pod6

[00:05] <Geth> ¦ doc: remove the period

[00:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b0309b716a

[00:05] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlsyn

[00:05] <Geth> ¦ doc: 978850c698 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/5to6-perlvar.pod6

[00:05] <Geth> ¦ doc: remove the period

[00:05] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/978850c698

[00:05] <synopsebot> Link: https://doc.perl6.org/language/5to6-perlvar

[00:07] <Geth> ¦ doc: 438e823fac | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/py-nutshell.pod6

[00:07] <Geth> ¦ doc: remove the period

[00:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/438e823fac

[00:07] <synopsebot> Link: https://doc.perl6.org/language/py-nutshell

[00:09] <Geth> ¦ doc: d35923b086 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/contexts.pod6

[00:09] <Geth> ¦ doc: remove the period

[00:09] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/d35923b086

[00:09] <synopsebot> Link: https://doc.perl6.org/language/contexts

[00:12] <Geth> ¦ doc: 59f0d5c89e | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/js-nutshell.pod6

[00:12] <Geth> ¦ doc: update sort order, remove period

[00:12] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/59f0d5c89e

[00:12] <synopsebot> Link: https://doc.perl6.org/language/js-nutshell

[00:13] <Geth> ¦ doc: 14797d5210 | Coke++ | 3 files

[00:13] <Geth> ¦ doc: convert to p6; make it easy to retest

[00:13] <Geth> ¦ doc: 

[00:13] <Geth> ¦ doc: add overview

[00:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/14797d5210

[00:13] <Geth> ¦ doc: e149f1fe4d | Coke++ | 3 files

[00:13] <Geth> ¦ doc: whitespace

[00:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e149f1fe4d

[00:13] <[Coke]> yay, finally managed to squeeze it in. :)

[00:13] <Geth> ¦ doc: 49cb5678d2 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/math.pod6

[00:13] <Geth> ¦ doc: remove period

[00:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/49cb5678d2

[00:13] <synopsebot> Link: https://doc.perl6.org/language/math

[00:14] <[Coke]> util/update-and-test now creates a script so you can rerun it a few times while you're cleaning up xtest.

[00:14] <Geth> ¦ doc: 2c8fd67dfa | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/nativetypes.pod6

[00:14] <Geth> ¦ doc: remove period

[00:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2c8fd67dfa

[00:14] <synopsebot> Link: https://doc.perl6.org/language/nativetypes

[00:16] <Geth> ¦ doc: 2ae36f3901 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/newline.pod6

[00:16] <Geth> ¦ doc: remove period

[00:16] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2ae36f3901

[00:16] <synopsebot> Link: https://doc.perl6.org/language/newline

[00:17] <Geth> ¦ doc: 7e1743b1e2 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/structures.pod6

[00:17] <Geth> ¦ doc: remove period

[00:17] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7e1743b1e2

[00:17] <synopsebot> Link: https://doc.perl6.org/language/structures

[00:17] *** mcmillhj joined
[00:18] <Geth> ¦ doc: 9fbf5a4137 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/system.pod6

[00:18] <Geth> ¦ doc: remove period

[00:18] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9fbf5a4137

[00:18] <synopsebot> Link: https://doc.perl6.org/language/system

[00:19] <Geth> ¦ doc: fa42c9bed9 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/traits.pod6

[00:19] <Geth> ¦ doc: remove period

[00:19] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fa42c9bed9

[00:19] <synopsebot> Link: https://doc.perl6.org/language/traits

[00:23] <Geth> ¦ doc: e7594bf494 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/MIGRATION.pod6

[00:23] <Geth> ¦ doc: change to title to see effect

[00:23] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e7594bf494

[00:23] <synopsebot> Link: https://doc.perl6.org/language/MIGRATION

[00:23] *** mcmillhj left
[00:26] *** zachk left
[00:29] *** HaraldJoerg left
[00:31] *** stmuk_ joined
[00:33] *** mcmillhj joined
[00:33] *** stmuk left
[00:38] *** jeromelanteri joined
[00:38] *** mcmillhj left
[00:42] <Geth> ¦ doc: c853b2b5cc | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/concurrency.pod6

[00:42] <Geth> ¦ doc: use sentence case

[00:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c853b2b5cc

[00:42] <synopsebot> Link: https://doc.perl6.org/language/concurrency

[00:42] <p6noob> jnthn, thanks for the hint.  MVM_JIT_DISABLE=1  does indeed make the problem go away

[00:43] <Geth> ¦ doc: fd88c0646b | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/concurrency.pod6

[00:43] <Geth> ¦ doc: sentence case

[00:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fd88c0646b

[00:45] <Geth> ¦ doc: 3603ef1c18 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/faq.pod6

[00:45] <Geth> ¦ doc: sentence case

[00:45] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3603ef1c18

[00:45] <synopsebot> Link: https://doc.perl6.org/language/faq

[00:46] <Geth> ¦ doc: 6e0f863bb8 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/functions.pod6

[00:47] <Geth> ¦ doc: sentence case

[00:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6e0f863bb8

[00:47] <synopsebot> Link: https://doc.perl6.org/language/functions

[00:48] <Geth> ¦ doc: 38c4c705aa | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/mop.pod6

[00:48] <Geth> ¦ doc: sentence case

[00:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/38c4c705aa

[00:48] <synopsebot> Link: https://doc.perl6.org/language/mop

[00:50] <Geth> ¦ doc: e5d2bab8d4 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/objects.pod6

[00:50] <Geth> ¦ doc: sentence case

[00:50] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e5d2bab8d4

[00:50] <synopsebot> Link: https://doc.perl6.org/language/objects

[00:50] *** epony left
[00:53] *** kaare_ joined
[00:55] <Geth> ¦ doc: 41e920f5d3 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/tables.pod6

[00:55] <Geth> ¦ doc: using a Clint Eastwood movie title

[00:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/41e920f5d3

[00:55] <synopsebot> Link: https://doc.perl6.org/language/tables

[00:56] *** markoong left
[00:56] <Geth> ¦ doc: 76a637d3ba | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/unicode.pod6

[00:56] <Geth> ¦ doc: sentence case

[00:56] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/76a637d3ba

[00:56] <synopsebot> Link: https://doc.perl6.org/language/unicode

[00:58] <squashable6> 🍕 tbrowder++ wrote a comment on “Inconsistent capitalizat…”: https://github.com/perl6/doc/issues/2146#issuecomment-403253321

[00:58] <squashable6> 🍕 tbrowder++ closed issue “Inconsistent capitalizat…”: https://github.com/perl6/doc/issues/2146

[01:00] <squashable6> 🍕 tbrowder++ wrote a comment on “"I don't know what's introductory in perl6/doc"”: https://github.com/perl6/doc/issues/2145#issuecomment-403253389

[01:03] *** mcmillhj joined
[01:06] *** speedChicken joined
[01:07] <Geth> ¦ doc: 3846e78e1e | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/tables.pod6

[01:07] <Geth> ¦ doc: italics are the proper way to show titles

[01:07] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3846e78e1e

[01:07] <synopsebot> Link: https://doc.perl6.org/language/tables

[01:08] *** speedChicken_ joined
[01:08] *** mcmillhj left
[01:13] <Geth> ¦ doc: 8331829414 | (Aleks-Daniel Jakimenko-Aleksejev)++ | writing-docs/STYLEGUIDE.md

[01:13] <Geth> ¦ doc: Reflow STYLEGUIDE.md

[01:13] <Geth> ¦ doc: 

[01:13] <Geth> ¦ doc: If we say that text should be wrapped at 72 characters, might as well

[01:13] <Geth> ¦ doc: do that in the styleguide itself…

[01:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8331829414

[01:13] <Geth> ¦ doc: 2caa412ef5 | (Aleks-Daniel Jakimenko-Aleksejev)++ | writing-docs/STYLEGUIDE.md

[01:13] <Geth> ¦ doc: Mention that abbreviations are LTA

[01:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/2caa412ef5

[01:13] <Geth> ¦ doc: 221ddb54bc | (Aleks-Daniel Jakimenko-Aleksejev)++ | writing-docs/STYLEGUIDE.md

[01:13] <Geth> ¦ doc: Not just language, but CS in general

[01:13] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/221ddb54bc

[01:17] * TimToady no longer wraps text at any particular length...

[01:17] <TimToady> backlogging somewhat, the whole %() thing seems a bit fraught when you can just say %{} or @[]

[01:18] <TimToady> m: say %{}.perl

[01:18] <camelia> rakudo-moar b236faecd: OUTPUT: «{}␤»

[01:19] <TimToady> m: say %{:a, :!b}.perl

[01:19] <camelia> rakudo-moar b236faecd: OUTPUT: «{:a, :!b}␤»

[01:19] <TimToady> m: say %[:a, :!b].perl

[01:19] <camelia> rakudo-moar b236faecd: OUTPUT: «{:a, :!b}␤»

[01:20] <TimToady> curious

[01:20] <TimToady> m: say @{1,2,3}.perl

[01:20] <camelia> rakudo-moar b236faecd: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unsupported use of @{1,2,3}; in Perl 6 please use @(1,2,3) for hard ref or @::(1,2,3) for symbolic ref␤at <tmp>:1␤------> 3say @{1,2,3}7⏏5.perl␤»

[01:20] <TimToady> heh

[01:21] *** subroot joined
[01:21] <TimToady> m: say @[1,2,3].perl

[01:21] <camelia> rakudo-moar b236faecd: OUTPUT: «[1, 2, 3]␤»

[01:21] *** mcmillhj joined
[01:21] <TimToady> oops, dinner &  # bad timing...

[01:21] <AlexDaniel> m: dd %( 2, 4, 5, 8 )

[01:21] <camelia> rakudo-moar b236faecd: OUTPUT: «Hash % = {"2" => 4, "5" => 8}␤»

[01:22] <AlexDaniel> m: dd %{ 2, 4, 5, 8 }

[01:22] <camelia> rakudo-moar b236faecd: OUTPUT: «Odd number of elements found where hash initializer expected:␤Only saw: -> ;; $_? is raw { #`(Block|66645312) ... }␤  in block <unit> at <tmp> line 1␤␤»

[01:22] <AlexDaniel> m: dd { 2, 4, 5, 8 }

[01:22] <camelia> rakudo-moar b236faecd: OUTPUT: «-> ;; $_? is raw { #`(Block|58335448) ... }␤»

[01:22] <AlexDaniel> heh 3 different behaviors

[01:23] <araraloren> m: dd {}

[01:23] <camelia> rakudo-moar b236faecd: OUTPUT: «Hash % = {}␤»

[01:23] <araraloren> default is a Hash, has something it become a Block ?

[01:23] <AlexDaniel> m: dd {;}

[01:23] <camelia> rakudo-moar b236faecd: OUTPUT: «-> ;; $_? is raw { #`(Block|66620960) ... }␤»

[01:24] *** speedChicken_ left
[01:24] *** speedChicken left
[01:25] <araraloren> that's a confused design, for me

[01:25] <araraloren> I prefer add -> before the {}, cause it will not confused anyone

[01:25] <araraloren> m: dd -> {}

[01:25] <camelia> rakudo-moar b236faecd: OUTPUT: «->  { #`(Block|67829152) ... }␤»

[01:26] <AlexDaniel> araraloren: but again, that's slightly different behavior

[01:26] *** mcmillhj left
[01:26] <AlexDaniel> m: say {;}(42)

[01:26] <camelia> rakudo-moar b236faecd: OUTPUT: «Nil␤»

[01:26] <AlexDaniel> m: say -> {;}(42)

[01:26] <camelia> rakudo-moar b236faecd: OUTPUT: «Too many positionals passed; expected 0 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤»

[01:26] <AlexDaniel> m: say -> $? {;}(42)

[01:26] <camelia> rakudo-moar b236faecd: OUTPUT: «Nil␤»

[01:26] <araraloren> yeah, you are right

[01:27] <araraloren> It like a `sub {}` without signature

[01:27] <AlexDaniel> no… a sub is a sub!

[01:27] <AlexDaniel> m: sub a { { return 42}() }; say a

[01:27] <camelia> rakudo-moar b236faecd: OUTPUT: «42␤»

[01:28] <araraloren> m: say sub {}(2);

[01:28] <camelia> rakudo-moar b236faecd: OUTPUT: «Too many positionals passed; expected 0 arguments but got 1␤  in sub  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[01:28] <AlexDaniel> m: sub a { sub { return 42}() }; say a

[01:28] <camelia> rakudo-moar b236faecd: OUTPUT: «42␤»

[01:28] <araraloren> oh

[01:28] <AlexDaniel> m: sub a { sub { return 42}(); 50 }; say a

[01:28] <camelia> rakudo-moar b236faecd: OUTPUT: «50␤»

[01:28] <AlexDaniel> m: sub a { { return 42}(); 50 }; say a

[01:28] <camelia> rakudo-moar b236faecd: OUTPUT: «42␤»

[01:28] <araraloren> m: say sub{}(2);

[01:28] <camelia> rakudo-moar b236faecd: OUTPUT: «Too many positionals passed; expected 0 arguments but got 1␤  in sub  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[01:28] <AlexDaniel> let's not involve subs into this :)

[01:30] <araraloren> oh, so it will not accept arguments except you accessed the @_ ..

[01:30] *** kaare_ left
[01:30] <araraloren> m: say sub{@_;}(2);

[01:30] <camelia> rakudo-moar b236faecd: OUTPUT: «[2]␤»

[01:30] <AlexDaniel> araraloren: the design is indeed somewhat surprising, especially if you have just written something like `if True {}` not so long before needing an empty Block… :)

[01:30] *** epony joined
[01:30] *** speedChicken joined
[01:31] <araraloren> yeah, I see

[01:32] <Geth> ¦ doc: 4ded02b22e | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/MIGRATION.pod6

[01:32] <Geth> ¦ doc: another variant

[01:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4ded02b22e

[01:32] <synopsebot> Link: https://doc.perl6.org/language/MIGRATION

[01:33] *** speedChicken_ joined
[01:33] <Geth> ¦ doc: 4a69a091f2 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/MIGRATION.pod6

[01:33] <Geth> ¦ doc: another tweak

[01:33] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/4a69a091f2

[01:39] <Geth> ¦ doc: 63a2bc27be | (Aleks-Daniel Jakimenko-Aleksejev)++ | writing-docs/STYLEGUIDE.md

[01:39] <Geth> ¦ doc: Actually use non-ASCII ops after recommending that

[01:39] <Geth> ¦ doc: 

[01:39] <Geth> ¦ doc: + tiny text tweaks

[01:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/63a2bc27be

[01:39] *** mcmillhj joined
[01:45] *** mcmillhj left
[01:59] *** subroot left
[02:08] <Geth> ¦ doc: 7102b779b0 | Coke++ | doc/Language/MIGRATION.pod6

[02:08] <Geth> ¦ doc: whitespace

[02:08] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7102b779b0

[02:08] <synopsebot> Link: https://doc.perl6.org/language/MIGRATION

[02:08] *** stmuk joined
[02:10] *** stmuk_ left
[02:14] *** mcmillhj joined
[02:15] *** softmoth joined
[02:16] *** softmoth left
[02:16] *** softmoth joined
[02:19] *** mcmillhj left
[02:37] *** mcmillhj joined
[02:39] *** softmoth left
[02:40] *** softmoth joined
[02:41] *** ufobat_ joined
[02:45] *** ufobat___ left
[02:46] *** softmoth left
[02:47] *** softmoth joined
[02:48] *** softmoth left
[02:49] *** softmoth joined
[02:57] *** subroot joined
[03:07] *** softmoth left
[03:08] *** softmoth joined
[03:11] *** softmoth left
[03:12] *** softmoth joined
[03:44] *** softmoth left
[03:45] *** softmoth joined
[03:46] *** stmuk_ joined
[03:47] *** stmuk left
[03:48] *** mcmillhj left
[03:49] *** softmoth left
[03:50] *** softmoth joined
[03:51] *** softmoth left
[03:52] *** softmoth joined
[03:56] *** psychoslave_ joined
[03:59] *** mcmillhj joined
[04:00] *** softmoth left
[04:01] *** softmoth joined
[04:03] *** mcmillhj left
[04:04] *** softmoth left
[04:05] *** softmoth joined
[04:22] *** softmoth left
[04:23] *** softmoth joined
[04:24] *** softmoth left
[04:25] *** softmoth joined
[04:27] *** softmoth left
[04:28] *** softmoth joined
[04:33] *** mcmillhj joined
[04:34] *** subroot left
[04:37] *** kerframil left
[04:38] *** mcmillhj left
[04:48] *** softmoth left
[04:49] *** softmoth joined
[04:49] *** kaare_ joined
[04:52] *** mcmillhj joined
[04:56] *** mcmillhj left
[05:19] *** softmoth left
[05:20] *** softmoth joined
[05:21] *** softmoth left
[05:21] *** softmoth joined
[05:22] *** softmoth left
[05:23] *** softmoth joined
[05:24] *** mcmillhj joined
[05:29] *** mcmillhj left
[05:34] *** wamba joined
[05:42] <Geth> ¦ doc: 0d57bfa1d3 | (Aleks-Daniel Jakimenko-Aleksejev)++ | writing-docs/STYLEGUIDE.md

[05:42] <Geth> ¦ doc: Recommend Wikipedia's MoS for anything not covered

[05:42] <Geth> ¦ doc: 

[05:42] <Geth> ¦ doc: See issue #2146.

[05:42] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0d57bfa1d3

[05:43] <squashable6> 🍕 JJ++ wrote a comment on “Need a way to mark which…”: https://github.com/perl6/doc/issues/302#issuecomment-403264236

[05:47] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Need a way to mark which…”: https://github.com/perl6/doc/issues/302#issuecomment-403264332

[05:49] *** lizmat left
[05:55] *** mcmillhj joined
[05:56] *** leah2 left
[05:59] *** leah2 joined
[05:59] *** BenGoldberg left
[06:00] *** mcmillhj left
[06:00] *** kaare__ joined
[06:01] *** kaare_ left
[06:01] <Geth> ¦ doc: 676c8f2bce | (JJ Merelo)++ | 2 files

[06:01] <Geth> ¦ doc: Taking out I<> which was making htmlify.p6 complain

[06:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/676c8f2bce

[06:02] *** softmoth left
[06:03] *** softmoth joined
[06:04] *** softmoth left
[06:04] *** softmoth joined
[06:10] <Geth> ¦ doc: a950e6f032 | Coke++ | doc/Language/tables.pod6

[06:10] <Geth> ¦ doc: Actually test pod examples

[06:10] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a950e6f032

[06:10] <synopsebot> Link: https://doc.perl6.org/language/tables

[06:13] *** spycrab0 left
[06:14] <squashable6> 🍕 coke++ wrote a comment on “Fix p6doc build errors”: https://github.com/perl6/doc/pull/2103#issuecomment-403265282

[06:14] <Geth> ¦ doc: 0905e8b431 | (Ben Davies)++ | Build.pm

[06:14] <Geth> ¦ doc: Fix p6doc build errors

[06:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/0905e8b431

[06:14] <Geth> ¦ doc: e25f712a5e | (Will Coleda)++ (committed using GitHub Web editor) | Build.pm

[06:14] <Geth> ¦ doc: Merge pull request #2103 from Kaiepi/build

[06:14] <Geth> ¦ doc: 

[06:14] <Geth> ¦ doc: Fix p6doc build errors

[06:14] <squashable6> 🍕 coke++ merged pull request “Fix p6doc build errors”: https://github.com/perl6/doc/pull/2103

[06:14] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e25f712a5e

[06:15] *** lizmat joined
[06:15] *** softmoth left
[06:27] *** psychoslave_ left
[06:28] *** mcmillhj joined
[06:31] <Geth> ¦ doc: 3308069bba | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[06:31] <Geth> ¦ doc: Rewrite for [~] trap

[06:31] <Geth> ¦ doc: 

[06:31] <Geth> ¦ doc: Closes #2124.

[06:31] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/3308069bba

[06:31] <synopsebot> Link: https://doc.perl6.org/language/traps

[06:31] <squashable6> 🍕 AlexDaniel++ closed issue “Potential trap with conc…”: https://github.com/perl6/doc/issues/2124

[06:31] <AlexDaniel> .tell jmerelo take a look at https://github.com/perl6/doc/commit/3308069bba , does it make sense?

[06:31] <yoleaux> AlexDaniel: I'll pass your message to jmerelo.

[06:33] *** mcmillhj left
[06:36] *** Khisanth left
[06:36] <Geth> ¦ doc/coke/build: 20 commits pushed by (Will "Coke" Coleda)++, Coke++

[06:36] <Geth> ¦ doc/coke/build: review: https://github.com/perl6/doc/compare/50ed6a7e59c4...d0976063193b

[06:39] *** konsolebox left
[06:41] *** konsolebox joined
[06:44] *** mcmillhj joined
[06:46] <Geth> ¦ doc/coke/build: 7a1f774618 | Coke++ | 2 files

[06:46] <Geth> ¦ doc/coke/build: Convert make test targets to sake

[06:46] <Geth> ¦ doc/coke/build: review: https://github.com/perl6/doc/commit/7a1f774618

[06:47] <Geth> ¦ doc: 346273c6bd | Coke++ | Makefile

[06:47] <Geth> ¦ doc: Fix test name

[06:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/346273c6bd

[06:47] <AlexDaniel> [Coke]: oh cool, a Sakefile!

[06:47] <AlexDaniel> [Coke]++

[06:49] *** Khisanth joined
[06:50] *** mcmillhj left
[06:53] <Geth> ¦ doc/coke/build: 175acb5481 | Coke++ | Makefile

[06:53] <Geth> ¦ doc/coke/build: add note

[06:53] <Geth> ¦ doc/coke/build: review: https://github.com/perl6/doc/commit/175acb5481

[06:56] <AlexDaniel> squashable6: next

[06:56] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈5 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[06:56] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/6881f580dd095e679b1dff06765e779d

[06:57] *** domidumont joined
[06:58] <squashable6> 🍕 coke++ wrote a comment on “convert 'make run' to use Perl 6”: https://github.com/perl6/doc/issues/1057#issuecomment-403267167

[06:59] *** kaare_ joined
[07:00] *** kaare__ left
[07:01] *** mcmillhj joined
[07:02] *** domidumont left
[07:03] *** domidumont joined
[07:06] *** mcmillhj left
[07:16] *** lizmat left
[07:24] <Geth> ¦ doc: e9be362b53 | (Aleks-Daniel Jakimenko-Aleksejev)++ | doc/Language/traps.pod6

[07:24] <Geth> ¦ doc: Fixed link

[07:24] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e9be362b53

[07:24] <synopsebot> Link: https://doc.perl6.org/language/traps

[07:25] *** jmerelo joined
[07:27] *** robertle joined
[07:27] *** aindilis left
[07:27] <squashable6> 🍕 JJ++ wrote a comment on “/tmp files don't get cleaned up properly”: https://github.com/perl6/doc/issues/1973#issuecomment-403268551

[07:28] * jmerelo again working from a Dutch train

[07:28] <yoleaux> 06:31Z <AlexDaniel> jmerelo: take a look at https://github.com/perl6/doc/commit/3308069bba , does it make sense?

[07:29] <jmerelo> .tell AlexDaniel I already did, looking for some reason to open it back on you :-) Didn't find it. Thanks!

[07:29] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[07:29] <AlexDaniel> .

[07:29] <yoleaux> 07:29Z <jmerelo> AlexDaniel: I already did, looking for some reason to open it back on you :-) Didn't find it. Thanks!

[07:29] <AlexDaniel> :)

[07:29] *** mcmillhj joined
[07:29] <jmerelo> AlexDaniel: it's pretty good and straighforward. Good job.

[07:30] *** sno joined
[07:31] *** aindilis joined
[07:34] *** mcmillhj left
[07:38] *** lizmat joined
[07:39] *** wamba left
[07:52] <AlexDaniel> squashable6: status

[07:52] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈4 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[07:52] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/0db6540eaf5637386d95c84655087fe7

[07:55] <Geth> ¦ doc: 6664e97356 | (JJ Merelo)++ | doc/Language/operators.pod6

[07:55] <Geth> ¦ doc: Changes example for #1889 and adds link

[07:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/6664e97356

[07:55] <Geth> ¦ doc: 237e9568cc | (JJ Merelo)++ | doc/Language/operators.pod6

[07:55] <Geth> ¦ doc: Adds example for infix |, closes #1889

[07:55] <synopsebot> Link: https://doc.perl6.org/language/operators

[07:55] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/237e9568cc

[07:55] <squashable6> 🍕 JJ++ closed issue “Improve documentation for |”: https://github.com/perl6/doc/issues/1889

[07:57] * jmerelo closes laptop and tries to enjoy the Dutch landscape. Great job everyone!

[08:01] *** Xliff left
[08:02] *** jmerelo left
[08:03] *** sno left
[08:03] *** mcmillhj joined
[08:09] *** mcmillhj left
[08:09] *** mst joined
[08:10] *** sno joined
[08:10] *** benjikun2 left
[08:15] *** rindolf joined
[08:30] *** sno left
[08:31] *** HaraldJoerg joined
[08:36] *** mcmillhj joined
[08:41] *** mcmillhj left
[08:44] *** sno joined
[08:50] *** cog joined
[08:53] *** cognominal left
[08:53] *** stephane_ joined
[08:54] *** domidumont left
[08:56] *** cog left
[08:59] <moritz> masak: does that qualify as a autopun? https://twitter.com/RichRogersIoT/status/1015339720409276416

[09:08] *** mcmillhj joined
[09:13] *** mcmillhj left
[09:31] *** pecastro joined
[09:36] *** sno left
[09:37] *** mcmillhj joined
[09:40] <Geth> ¦ doc: 5de1a0111f | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/module-packages.pod6

[09:40] <Geth> ¦ doc: remove period

[09:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/5de1a0111f

[09:40] <synopsebot> Link: https://doc.perl6.org/language/module-packages

[09:41] <Geth> ¦ doc: b1c99c863e | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/MIGRATION.pod6

[09:41] <Geth> ¦ doc: change to single word

[09:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b1c99c863e

[09:41] <synopsebot> Link: https://doc.perl6.org/language/MIGRATION

[09:42] *** mcmillhj left
[09:43] *** sno joined
[09:57] *** xiaomiao joined
[10:01] *** ufobat_ left
[10:06] *** mcmillhj joined
[10:08] *** spycrab0 joined
[10:10] <squashable6> 🍕 tbrowder++ wrote a comment on “convert 'make run' to use Perl 6”: https://github.com/perl6/doc/issues/1057#issuecomment-403276989

[10:11] *** mcmillhj left
[10:14] *** markoong joined
[10:26] <rindolf> hi all! I am getting a test failure with git master - http://paste.debian.net/1032838/

[10:26] *** wamba joined
[10:33] *** mcmillhj joined
[10:38] *** mcmillhj left
[10:50] *** sno left
[10:53] *** sena_kun joined
[11:04] *** mcmillhj joined
[11:05] *** rindolf left
[11:09] *** mcmillhj left
[11:15] *** jeromelanteri left
[11:15] *** Luneburg joined
[11:16] <Luneburg> I'm having a problem where it looks like a subroutine is taking "True" as an argument, but it should only accept an Int type?

[11:17] <lizmat> Luneburg: care to elaborate ?

[11:17] *** sno joined
[11:17] <El_Che> m: say +True

[11:17] <camelia> rakudo-moar d6c161ba5: OUTPUT: «1␤»

[11:17] <El_Che> m: say +False

[11:17] <camelia> rakudo-moar d6c161ba5: OUTPUT: «0␤»

[11:18] <Luneburg> lizmat: It's for the ackermann function from the thinkperl6 book, I'm using multi subroutines to try to finish the exercise. One of the multi functions takes (0, Int $n), but it is accepting "True" as the second argument

[11:18] <lizmat> m: True ~~ Int

[11:18] <camelia> rakudo-moar d6c161ba5: ( no output )

[11:19] <lizmat> m: say True ~~ Int

[11:19] <camelia> rakudo-moar d6c161ba5: OUTPUT: «True␤»

[11:19] <lizmat> that's the reason, for better or worse  :-)

[11:19] <lizmat> m: say True ~~ Int:D

[11:19] <camelia> rakudo-moar d6c161ba5: OUTPUT: «True␤»

[11:19] <Luneburg> lizmat: Wait, so "True" is an Int?

[11:19] <lizmat> I think the only way around that would be to create a separate multi that explicitely takes a Bool

[11:19] <lizmat> m: dd True.^mro

[11:19] <camelia> rakudo-moar d6c161ba5: OUTPUT: «(Bool, Int, Cool, Any, Mu)␤»

[11:20] <lizmat> apparently Bool inherits from Int

[11:20] <El_Che> very perl5-ish :)

[11:21] <El_Che> lizmat: how went your talk? I saw a pic on twitter

[11:21] <Luneburg> lizmat: Ah, interesting stuff! 

[11:21] *** wamba left
[11:21] <lizmat> El_Che: it went quite alright

[11:21] *** wamba joined
[11:21] <El_Che> \o/

[11:21] * lizmat handed out stickers during the talk

[11:22] <lizmat> https://www.flickr.com/photos/wendyga/42501306974/in/dateposted-public/

[11:22] <El_Che> wanna

[11:22] <El_Che> :)

[11:22] *** mcmillhj joined
[11:22] <El_Che> keep one on the side for the next time we meet :)

[11:23] <El_Che> https://www.flickr.com/photos/wendyga/42160973995/

[11:23] <El_Che> that could be useful in talks :)

[11:27] *** mcmillhj left
[11:31] <Luneburg> lizmat: Do you have any ideas on how to create a separate multi that explicitly takes a Bool? It comes back with a "Ambiguous call...these signatures all match" error.

[11:31] * lizmat checks

[11:31] <El_Che> m: say so 255

[11:31] <camelia> rakudo-moar d6c161ba5: OUTPUT: «True␤»

[11:31] <El_Che> m: say so -255

[11:31] <camelia> rakudo-moar d6c161ba5: OUTPUT: «True␤»

[11:32] <El_Che> it looks like all ints are True besides zero

[11:32] <El_Che> I would use named parameters in this case

[11:32] <El_Che> to make things clear

[11:32] <lizmat> m: multi a(Int) {"Int"}; multi a(Bool) {"Bool"}; say a 42; say a True

[11:32] <camelia> rakudo-moar 75192f2df: OUTPUT: «Int␤Bool␤»

[11:33] <lizmat> seems to work in the simplest way

[11:33] <lizmat> m: multi a(Int) {"Int"}; multi a(Bool) {"Bool"}; say a 42; say a False

[11:33] <camelia> rakudo-moar 75192f2df: OUTPUT: «Int␤Bool␤»

[11:33] *** raynold left
[11:42] <Luneburg> Thanks guys! I've solved this now :)

[11:46] <El_Che> Luneburg++

[11:51] <tbrowder_> .tell tyil i hope to have =defn working properly by end of today. it will be a new class Pod::Block::Defn and will have a $.term attribute.

[11:51] <yoleaux> tbrowder_: I'll pass your message to tyil.

[11:52] <tyil> oh

[11:52] <yoleaux> 11:51Z <tbrowder_> tyil: i hope to have =defn working properly by end of today. it will be a new class Pod::Block::Defn and will have a $.term attribute.

[11:53] <tyil> tbrowder_: awesome

[11:53] <tyil> :D

[11:53] <tyil> I hadn't even posted an issue about it on a repo

[11:53] <tyil> you're not at the dutch perl workshop are you? :o

[11:54] *** mcmillhj joined
[11:54] <tyil> once that's working I can do a new Pod::To::Pager release, all other stuff should be good by now

[12:01] *** mcmillhj left
[12:12] *** mcmillhj joined
[12:15] *** gabiruh left
[12:17] *** mcmillhj left
[12:17] *** BenGoldberg joined
[12:20] *** gabiruh joined
[12:26] *** ExtraCrispy joined
[12:37] <tbrowder_> tyil: i’m wrong. the new class should be named Pod::Defn to be consistent with existing classes.

[12:37] *** aborazmeh joined
[12:37] *** aborazmeh left
[12:37] *** aborazmeh joined
[12:37] *** andrzejku joined
[12:37] <andrzejku> hello

[12:37] <tyil> the name isn't too important

[12:37] <andrzejku> araraloren: hey

[12:38] *** mcmillhj joined
[12:40] <tbrowder_> arg, the original name is more appropriate! anyhoo, it will show up later today.

[12:43] <tbrowder_> tyil: you mentioned here earlier that defn didn’t di the right thing, and i found an old open but about that. then i found out it isn’t even specced! another nyi pod piece.

[12:43] *** mcmillhj left
[12:43] <tyil> nice

[12:43] <tbrowder_> *open bug

[12:44] <tyil> ping me when it lands, I'll compile and try it out

[12:47] <andrzejku> do you think Perl 6 have a chance in scientific calculations?

[12:48] <El_Che> andrzejku: I am fairly positive about that

[12:48] <El_Che> andrzejku: it needs to beat python on speed (that's low bar) and it has good (read: easy) C bindings

[12:48] <El_Che> we'll see

[12:48] *** domidumont joined
[12:48] <andrzejku> El_Che: me too

[12:49] <andrzejku> El_Che: for scientifics speed is not so important

[12:49] <andrzejku> since you create only a model

[12:49] <El_Che> andrzejku: I was under the impression it was

[12:49] <andrzejku> El_Che: I don't know much about speed

[12:49] <El_Che> I hear scientiest complain about python all the time

[12:49] <El_Che> the like the lang, but are more often than not writing C

[12:49] <El_Che> (anecdoctic evidence)

[12:50] <andrzejku> El_Che: I think now for python comes hard time, I spend a little bit time with Rust and I have a company here which took the Rust for development because of speed

[12:50] <andrzejku> El_Che: there many languages for web

[12:50] <andrzejku> and almost a few for bare metal programming and sciense

[12:51] <andrzejku> El_Che: and Perl6 is slow as fuck

[12:51] <andrzejku> El_Che: so it would be bettwe to take area where it can gain popularity

[12:51] <El_Che> it's slow now

[12:51] <El_Che> get faster all the time

[12:52] <El_Che> speed is acceptable for a lot of stuff though

[12:53] <El_Che> e.g. heavy log parsing is too slow (wrote that in Go), but for area's where perl 6 is fast enough sometime the missing libs are the issue (as they are not trivial to implement your self)

[12:53] <El_Che> I picked perl 5 for a project that needed ldap libs

[12:54] <El_Che> and was missien oauth integration in perl 6 to pick for a small project

[12:54] <El_Che> (small as rest service where not a lot of traffic is expected)

[12:55] <El_Che> I had a nice perl6 service running for more than 1,5y in production though, that worked very well

[12:55] <andrzejku> El_Che: WoW!;D

[12:55] <andrzejku> what do you mean by service?

[12:55] <El_Che> (I stopped it because it did what it was supposed to do, it was a CA provider migration voor 3000 domains)

[12:55] <andrzejku> El_Che: ahh, I am far away from web : (

[12:55] <El_Che> it checked cert info on remote host, to see if they moved to the new CA

[12:56] <El_Che> or if it was almost expired

[12:56] <andrzejku> El_Che: I only could help with MoarVM but I have no idea how :D

[12:57] <El_Che> people where only force to move to the new CA once their old certs expired

[12:57] <El_Che> hence, 1,5 Y runtime

[12:57] *** mcmillhj joined
[12:57] *** gabiruh left
[12:57] <El_Che> andrzejku: there is a internal course

[12:57] <El_Che> atm I lack the time and skill

[12:57] *** gabiruh joined
[12:59] <El_Che> andrzejku: anyway, some time ago perl6 wasn't really there yet for webdevelopment, and now it certainly a nice option

[12:59] <El_Che> things change

[13:01] <El_Che> it makes me very optimistic

[13:01] *** mcmillhj left
[13:04] *** Luneburg left
[13:07] *** aborazmeh left
[13:11] *** pmurias joined
[13:12] *** mcmillhj joined
[13:15] <buggable> New CPAN upload: unprint-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/unprint-0.0.1.tar.gz

[13:16] <pmurias> El_Che: to what extent does existing triumph over easy bindings?

[13:16] *** mcmillhj left
[13:24] *** rindolf joined
[13:29] <El_Che> pmurias: good question. It's not zero sum, I think.

[13:31] *** jmerelo joined
[13:31] <jmerelo> squashable6: status

[13:31] <squashable6> jmerelo, Next SQUASHathon in 25 days and ≈20 hours (2018-08-04 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[13:31] <jmerelo> What about the stats?

[13:34] <El_Che> the type of how 4 statitians downed on a pool of average 4cm deep?

[13:35] *** mcmillhj joined
[13:36] <jmerelo> El_Che: right. I came too late for the squashathon stats...

[13:36] <jmerelo> Anyway, here's the album with the NLPW workshop https://www.flickr.com/photos/atalaya/albums/72157670951338508

[13:36] <jmerelo> (and some more stuff, just go to the middle of it skipping graffiti and railway landscapes)

[13:38] * jmerelo backs AFK again and boards a plane again

[13:38] *** rindolf left
[13:41] *** rindolf joined
[13:41] *** gabiruh left
[13:42] *** jmerelo left
[13:45] *** gabiruh joined
[13:49] *** gabiruh left
[13:50] <pmurias> El_Che: it's obviously not zero sum, binding creation being easy seems to directly encourage creation of them ;)

[13:52] *** andrzejku left
[13:55] *** gabiruh joined
[14:02] *** lizmat_ joined
[14:03] *** lizmat left
[14:09] *** lizmat_ is now known as lizmat

[14:14] *** kaare_ left
[14:15] <buggable> New CPAN upload: unprint-0.0.2.tar.gz by ELIZABETH http://modules.perl6.org/dist/unprint:cpan:ELIZABETH

[14:21] *** mcmillhj left
[14:22] *** gabiruh left
[14:26] *** damaxi joined
[14:38] *** zakharyas joined
[14:48] *** konsolebox left
[14:50] *** konsolebox joined
[14:50] *** molaf joined
[14:51] *** subroot joined
[14:53] *** sno left
[14:55] *** araraloren left
[15:02] *** Kaiepi left
[15:03] *** Kaiepi joined
[15:03] *** guest_123 joined
[15:04] *** gabiruh joined
[15:04] <guest_123> m: my \Str = 123 ; 'str'.WHAT

[15:04] <camelia> rakudo-moar 75192f2df: OUTPUT: «===SORRY!===␤No compile-time value for Str␤»

[15:06] <guest_123> It seems like letting users define sigiless variables that repurpose class names causes sadness

[15:06] <moritz> m: my class Str is Int { }; 'str'.WHAT

[15:06] <camelia> rakudo-moar 75192f2df: OUTPUT: «===SORRY!===␤This type cannot box a native string: P6opaque, Str␤»

[15:07] <moritz> guest_123: or redefine a class name of a literal's type through any other means, and don't provide compatibility with the old type

[15:08] <guest_123> Indeed...

[15:08] *** lizmat_ joined
[15:08] <timotimo> that seems like a DIHWIDT to me, you might want to use a different class for literals in a given scope and this is how to do it

[15:08] <timotimo> alternatively, we can force it to look up the types for literals only from the core setting instead of the current scope

[15:09] *** lizmat left
[15:10] *** lizmat_ left
[15:10] <moritz> but then it's almost impossible to do some language modifications we might want to allow

[15:11] <timotimo> it'd have to be exposed as a pragma i suppose

[15:12] *** Sgeo__ joined
[15:14] *** Sgeo_ left
[15:14] <guest_123> m: my \Str = IntStr ; 'asd'.WHAT

[15:14] <camelia> rakudo-moar 75192f2df: OUTPUT: «===SORRY!===␤No compile-time value for Str␤»

[15:15] <timotimo> must be binding instead of assignment

[15:15] <timotimo> or make it "constant"

[15:15] <guest_123> huh. That worked differently in my repo...

[15:16] <guest_123> s/repo/repl/

[15:16] <timotimo> yes, the repl is very different in some ways

[15:18] *** kerframil joined
[15:18] *** mcmillhj joined
[15:27] *** mcmillhj left
[15:30] *** kaare_ joined
[15:31] *** ufobat_ joined
[15:35] *** zakharyas left
[15:35] *** zakharyas joined
[15:39] *** zakharyas left
[15:41] *** zakharyas joined
[15:45] <buggable> New CPAN upload: String-Fold-0.1.0.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/String-Fold-0.1.0.tar.gz

[15:55] <tbrowder_> .tell tyil check out my Text::More module

[15:55] <yoleaux> tbrowder_: I'll pass your message to tyil.

[15:55] *** mcmillhj joined
[16:00] *** Kaiepi left
[16:01] *** mcmillhj left
[16:01] *** Kaiepi joined
[16:02] <p6noob> tbrowder_: where can that be checked out?  meta::cpan search doesn't find it, and http://modules.perl6.org doesn't list it.

[16:03] <tbrowder_> try Text::More

[16:03] <tbrowder_> in the search box

[16:04] <tbrowder_> at modules.perl6.org

[16:05] *** gabiruh left
[16:06] *** leah2 left
[16:08] <ecocode> how come modules.perl6.org shows 2 versions of XML::XPath ? I see two different authors, but that looks bizare..

[16:08] <ecocode> http://modules.perl6.org/t/PARSING

[16:08] <El_Che> I don't think namespacing is unique

[16:08] <moritz> why? if two authors decide they want to publish a module called XML::XPath, we let 'em :)

[16:09] <ecocode> same thing for US-ASCII.  two mentions, same author !

[16:09] <p6noob> tbrowder_: thx

[16:09] <ecocode> actually that happens a lot

[16:10] <El_Che> moritz: I think that matches perfectly in the github centric workflow (like go's), but it's very strange when you're used to CPAN

[16:10] <ecocode> http://modules.perl6.org/t/PARSER

[16:10] <ecocode> two mentions of ANTLR4::Grammar

[16:10] <ecocode> the author is the same, albeit listed differently

[16:11] <ecocode> JGOFF versus Jeffrey Goff [email@hidden.address]
[16:11] <ecocode> weird

[16:11] <El_Che> sounds like a bug

[16:11] <El_Che> although JGOFF is way cooler

[16:11] <El_Che> :)

[16:11] <MasterDuke> one is the CPAN version, one is from github

[16:12] <ecocode> US-ASCII lists 2 exactly same mentions

[16:12] <MasterDuke> he likely didn't remove the github version from the module list after he created the cpan version

[16:13] <ecocode> hmprf... shouldn't that get checked automagicaly ?

[16:13] <p6noob> tbrowder_: lil typo.. Add commas to a mumber  

[16:13] <moritz> ecocode: it could be checked automatically if you contributed a patch that did it

[16:13] <ecocode> :)

[16:14] <ecocode> my perl6 coding is way too bad for that

[16:14] <ecocode> but hence I can file a bug ?

[16:14] <ecocode> where should I do that ?

[16:15] <moritz> ecocode: modules.perl6.org is a P5 application, actually

[16:15] <ecocode> really ?

[16:15] <moritz> https://github.com/perl6/modules.perl6.org/issues

[16:15] <ecocode> well, it is already filed

[16:15] <ecocode> https://github.com/perl6/modules.perl6.org/issues/106

[16:16] <timotimo> you can see from the icon that one is from github and one is from cpan

[16:17] <ecocode> not the case for US-ASCII

[16:17] <timotimo> OK

[16:17] <timotimo> ah, i didn't scroll down :S

[16:17] <timotimo> sorry about the noise

[16:18] <ecocode> Is there an RSS feed of perl6 modules ?

[16:18] <ecocode> updates and new modules

[16:23] <timotimo> they do show up in the perl6 weekly

[16:23] <timotimo> but i don't think we have an actual rss feed for the modules

[16:23] <timotimo> cpan uploads show up on the irc

[16:23] *** ExtraCrispy left
[16:25] *** leah2 joined
[16:29] <tbrowder_> p6noob: good eye! please file an issue so.

[16:29] *** rindolf left
[16:29] *** guest_123 left
[16:29] <tbrowder_> so i don’t forget.

[16:31] *** rindolf joined
[16:31] *** Xliff joined
[16:34] *** musca left
[16:34] *** dct_ joined
[16:35] *** subroot left
[16:41] *** gabiruh joined
[16:44] *** jameslenz left
[16:59] *** curan joined
[17:07] *** zakharyas left
[17:09] *** mcmillhj joined
[17:10] *** gtodd is now known as hinklevoss-one

[17:10] *** pukku joined
[17:10] *** hinklevoss-one is now known as hinklevoss-two

[17:11] *** hinklevoss-two is now known as gtodd

[17:12] <pukku> Quick question -- is there any sort of XSLT package for Perl 6? `modules.perl6.org` doesn't seem to think so. I have an XML data structure that I want to extract a bunch of data from, and I'm trying to find a better way than tons of calls to `XML::XPath.find().contents()[0]`.

[17:12] <yoleaux> 10 Mar 2017 00:22Z <BenGoldberg> pukku: You said you are interested in a DOM manipulator which doesn't change the order of attributes when you stringify it... first, look at https://github.com/zostay/perl6-ArrayHash; then, look at DOM::Tiny, specifically the source of DOM::Tiny::HTML.  Note that there are precisely three places where Hash.new is used; if these were changed to ArrayHash, I'm 99% sure that you'd have a solution.

[17:13] *** mcmillhj left
[17:15] *** jmerelo joined
[17:15] <jmerelo> Hi again :-)

[17:15] *** jameslenz joined
[17:22] *** curan left
[17:23] <MasterDuke> pukku: i don't think so

[17:27] <tyil> tbrowder_: what about Text::More?

[17:27] <yoleaux> 15:55Z <tbrowder_> tyil: check out my Text::More module

[17:30] <tbrowder_> it has some string and text wrapping and stuff that may be useful

[17:33] *** stmuk joined
[17:35] *** stmuk_ left
[17:36] <tyil> ah

[17:36] <tyil> I just got home and I'm a tad tired from the NLPW

[17:36] <tyil> I'll take a better look soon(tm)

[17:36] <tyil> thanks for bringing it to my attention :>

[17:38] <rindolf> hi all! Behold my creation - https://github.com/shlomif/rakudo-git-master-install - and it is under expatL

[17:44] *** zakharyas joined
[17:45] *** mcmillhj joined
[17:46] <jmerelo> rindolf: that makes it the 4th? 5th? Great anyway to have such variety :-)

[17:47] *** MasterDuke left
[17:48] *** MasterDuke joined
[17:50] *** mcmillhj left
[17:51] <rindolf> jmerelo: http://shlomifishswiki.branchable.com/How_Alternatives_Proliferate/ ;)

[17:52] <jmerelo> rindolf: :-) That's all good and well :-)

[17:52] <jmerelo> squashable6: status 2018-07-07

[17:52] <squashable6> jmerelo, Log and stats: https://gist.github.com/c3c7ca754a1536422b4a4f0b606bff33

[17:54] *** curan joined
[18:00] *** damaxi left
[18:06] *** spycrab0 left
[18:07] <tbrowder_> Folks I have in place a simple way to rearrange the docs Language page in desired order and to create GROUPS to put them under.  Until Pod::To:HTML is modified to render the page to look better, the page at the moment has a MIGRATING group at the top and ALL the migrating docs immediately underneath. I'm looking for a bit of consensus on more GROUPS, their order, and the names of the docs to go under each.

[18:08] <tbrowder_> AlexDaniel: is there a p6 doc wiki we can start a page with a proposal to critique?

[18:08] <tbrowder_> jmerelo: ^^^?

[18:08] *** musca joined
[18:09] <jmerelo> tbrowder_: I don't think we have that wiki

[18:10] <jmerelo> tbrowder_: maybe just open another issue? They can be modified and acted upon, in the same way as a wiki

[18:11] *** domidumont left
[18:12] <tbrowder_>  ok, i’ll do that.

[18:12] <jmerelo> tbrowder_: thanks!

[18:16] <Geth> ¦ doc: c9d0fc0a60 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/hashmap.pod6

[18:16] <Geth> ¦ doc: remove period

[18:16] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c9d0fc0a60

[18:16] <synopsebot> Link: https://doc.perl6.org/language/hashmap

[18:20] * jmerelo goes AFK. Until tomorrow!

[18:20] *** jmerelo left
[18:28] *** gabiruh left
[18:29] *** molaf left
[18:30] *** gabiruh joined
[18:37] *** psychoslave_ joined
[18:39] <Geth> ¦ doc: tbrowder self-assigned proposed Language page grouping https://github.com/perl6/doc/issues/2160

[18:42] *** psychoslave_ left
[18:43] <tbrowder_> New issue (thanks jmerelo) GH #2160 is a proposed gropuping and child page listing.  Feel free to modify or critique.  I will modify the Language page according maybe tomorrow, but it's pretty easy to rearrange.

[18:44] <p6noob> tbrowder_: what is the "docs Language page"?   Is there a link available?

[18:46] <tbrowder_> go to the docs page and select the "Language" tab at the top

[18:46] <tbrowder_> direct link: https://docs.perl6.org/language.html

[18:48] <p6noob> Ah thanks, groupings make more sense now :)

[18:50] *** zakharyas left
[18:50] *** damaxi joined
[18:56] *** spycrab0 joined
[18:57] *** molaf joined
[19:09] <AlexDaniel> .

[19:10] <AlexDaniel> tbrowder_: yeah, I think opening a ticket should work

[19:11] <AlexDaniel> tbrowder_: if you want others to modify your post, just leave a note that they should feel free to do it

[19:13] <AlexDaniel> tbrowder_: oh, now I have read it. Yes, sounds like a great idea

[19:13] *** Kaiepi left
[19:14] *** Kaiepi joined
[19:14] <AlexDaniel> tbrowder_: hey, have you seen https://github.com/perl6/doc/issues/114 ?

[19:14] <AlexDaniel> it also groups pages by topic

[19:15] <AlexDaniel> well, by category

[19:19] <AlexDaniel> tbrowder_: maybe “PERL 6 SPECIFICS” can be split into more than one category.

[19:21] <AlexDaniel> tbrowder_: for example maybe “Perl 6 fundamentals” with basic stuff like “Functions”, “Lists, Sequences, and Arrays Positional data constructs”, etc

[19:21] <AlexDaniel> tbrowder_: this way we'd be able to close D#2145 :)

[19:21] <synopsebot> D#2145 [open]: https://github.com/perl6/doc/issues/2145 [build][site] "I don't know what's introductory in perl6/doc"

[19:27] *** sno joined
[19:27] <masak> I feel like the past few days I've been on a mental pilgrimage through S04's "When is a closure not a closure".

[19:28] <masak> I was wondering whether to turn `for` loops in 007's bytecode-to-be into function calls, or just local jumps

[19:28] <masak> turns out I want both

[19:31] *** zakharyas joined
[19:37] *** noganex_ left
[19:43] *** noganex joined
[19:46] *** mcmillhj joined
[19:48] *** Kaiepi left
[19:51] *** Kaiepi joined
[19:51] *** mcmillhj left
[19:59] <tbrowder_>  AlexDaniel: yes, i saw #114 some time ago (but forgot about it). some good ideas there, and my first cut is rough but i wanted to get something concrete, using current page titles, for people to shoot at. also, i think i left a comment at #2145 saying something like we’re on track for groupng so we could close the issue soon. maybe close it and reference the new issue with the wip list.

[19:59] *** pukku left
[20:01] *** wamba left
[20:01] *** lizmat joined
[20:14] *** wamba joined
[20:26] *** damaxi left
[20:28] <tbrowder_> i just looked at the community page for the first time—looks good, but it shows Wendy as author of p6 weekly. i thought Elizabeth wrote that article.

[20:28] *** zakharyas left
[20:31] <lizmat> tbrowder_: which page are you talking about ?

[20:32] <lizmat> https://perl6.org/community/ ?

[20:32] <tbrowder_> the Language page on the docs website. there’s a recent page listed as “Community...”

[20:34] <tbrowder_> https://docs.perl6.org/language/community

[20:34] <lizmat> yeah, fixing it now  :-)

[20:37] <Geth> ¦ doc: c1b001c269 | (Elizabeth Mattijsen)++ | doc/Language/community.pod6

[20:37] <Geth> ¦ doc: Tweak Perl 6 Weekly reference a bit

[20:37] <Geth> ¦ doc: 

[20:37] <Geth> ¦ doc: Wendy does help me with collecting items and proofreading, but yours

[20:37] <Geth> ¦ doc: truly is usually responsible for writing.  The blog in this form was

[20:37] <synopsebot> Link: https://doc.perl6.org/language/community

[20:37] <Geth> ¦ doc: started by Timo Paulssen actually, and has had other guest writers,

[20:37] <Geth> ¦ doc: such as Zoffix Znet.

[20:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c1b001c269

[20:42] <tbrowder_> can some irc expert tell me why some user names, like mine, have a trailing underscore?

[20:43] *** robertle is now known as test234

[20:43] *** test234 is now known as robertle

[20:43] <robertle> ot an expert, but can't you change it with /nick?

[20:44] <robertle> my client uses a trailing underscore if my real nick is taken. typically by me in anotehr session that I had forgotten

[20:44] <tbrowder_> haven’t tried, but i didn’t add the char and i see quite a few others with the same thing.

[20:45] <tbrowder_> ah, dup sessions is probably it

[20:45] <lizmat> tbrowder_: that usually happens if your irc client loses the connection, and you reconnect.  If you do that before your original connection has timed out on the server side, you cannot use the same nick

[20:45] <lizmat> so your client adds a "_"

[20:45] <buggable> New CPAN upload: P6Repl-Helper-0.0.2.tar.gz by KJK http://modules.perl6.org/dist/P6Repl::Helpers:cpan:KJK

[20:47] <geekosaur> unless you get clever

[20:47] *** kerframil left
[20:48] <geekosaur> (my client has an on-connect macro to send a "ghost" and then try to renick 5 seconds later)

[20:48] <tbrowder_> if i send text to joe_ does joe get it, i.e., is it an alias?

[20:49] <geekosaur> no

[20:49] <geekosaur> one reason to use memoserv instead of channel message bots is that a registered user can link the nicks and then they'd get a message directed to any of the linked nicks

[20:58] *** BenGoldberg left
[21:03] *** mcmillhj joined
[21:12] *** robertle left
[21:13] *** Xliff left
[21:18] *** eliasr joined
[21:26] *** rindolf left
[21:32] <Geth> ¦ doc: 9ed216388e | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/modules-core.pod6

[21:32] <Geth> ¦ doc: use sentence case

[21:32] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/9ed216388e

[21:32] <synopsebot> Link: https://doc.perl6.org/language/modules-core

[21:34] *** dct_ left
[21:34] <Geth> ¦ doc: 85134c3cee | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/about.pod6

[21:34] <Geth> ¦ doc: use sentence case

[21:34] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/85134c3cee

[21:34] <synopsebot> Link: https://doc.perl6.org/language/about

[21:35] <Geth> ¦ doc: 7eb5ad6978 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/objects.pod6

[21:35] <Geth> ¦ doc: use sentence case

[21:35] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/7eb5ad6978

[21:35] <synopsebot> Link: https://doc.perl6.org/language/objects

[21:36] *** molaf left
[21:36] <Geth> ¦ doc: df09208911 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/unicode_entry.pod6

[21:36] <Geth> ¦ doc: use sentence case

[21:36] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/df09208911

[21:36] <synopsebot> Link: https://doc.perl6.org/language/unicode_entry

[21:37] <Geth> ¦ doc: ebfb045724 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/tables.pod6

[21:37] <Geth> ¦ doc: use sentence case

[21:37] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/ebfb045724

[21:37] <synopsebot> Link: https://doc.perl6.org/language/tables

[21:38] *** wamba left
[21:38] <Geth> ¦ doc: e33297a386 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/setbagmix.pod6

[21:38] <Geth> ¦ doc: use sentence case

[21:38] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/e33297a386

[21:38] <synopsebot> Link: https://doc.perl6.org/language/setbagmix

[21:39] <Geth> ¦ doc: 890bc5f55d | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/quoting.pod6

[21:39] <Geth> ¦ doc: use sentence case

[21:39] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/890bc5f55d

[21:39] <synopsebot> Link: https://doc.perl6.org/language/quoting

[21:41] <Geth> ¦ doc: fb29aa7186 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/pod.pod6

[21:41] <Geth> ¦ doc: use sentence case

[21:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/fb29aa7186

[21:42] <synopsebot> Link: https://doc.perl6.org/language/pod

[21:42] *** pecastro left
[21:45] <pmurias> masak: is 007 evolving into a "proper" language rather then being a macro experiment?

[21:47] <tbrowder_> erg, the page changes i've been making are auto-generated and must be made inside  the files!! too much tv while perling

[21:48] *** mcmillhj left
[21:49] *** mcmillhj joined
[21:54] *** mcmillhj left
[21:56] *** sarna joined
[21:57] *** MasterDuke left
[22:01] *** kerframil joined
[22:02] *** mcmillhj joined
[22:05] <DrForr> o/

[22:06] *** benjikun joined
[22:06] *** HaraldJoerg left
[22:08] *** mcmillhj left
[22:09] *** mcmillhj joined
[22:09] *** w17t joined
[22:11] <tbrowder_> hi, DrForr

[22:12] <DrForr> Afternoon, locally.

[22:12] <DrForr> Buckling down to fix readline while I've got downtime.

[22:12] <tbrowder_> hm, what time zone?

[22:13] <DrForr> MDT, 4pm here. 

[22:13] <DrForr> Looks like nxadm's fix was just to force version 7.

[22:13] <DrForr> I'd like a more portable way though.

[22:13] <tbrowder_> aha, not a perl conf, eh?

[22:14] *** dct_ joined
[22:14] <DrForr> No, mostly waiting for the UK consulate to make up their mind on the visa.

[22:14] *** mcmillhj left
[22:15] <DrForr> This problem's also caused an issue with cro, or at least the OpenSSL module it relies on. I was wanting to build a wiki app, but as usual other yaks poked their noses in.

[22:17] <DrForr> I also recall talking with Lembark about this at TPC, with him explaining that it wasn't really my module's problem but how perl6 treats LD_LIBRARY_PATH stuff on his system; Liz was fiddling with a fix but I don't know if any progress was made.

[22:19] <DrForr> I think it'd be a great start if native('foo') looked for the highest version of the 'foo' library, and if a separate v7 argument was added it searched for that and failed if it's not present, but I'm just going on current docs without background.

[22:20] <geekosaur> "portable" varies. what happens when the API changes?

[22:20] <geekosaur> everyone really badly wants the shared library API to magically figure out all possible compatibility issues

[22:20] <DrForr> Oh, I know there are arguments for and against...

[22:20] *** benjikun left
[22:21] <DrForr> I really could only argue two ways for this, if I were thinking straight.

[22:22] <DrForr> Actually just one, now that I think on it.

[22:22] <DrForr> Create NativeCall::LibraryMagic that does loading magic.

[22:23] <DrForr> It needs to be a library *somewhere* so that Perl6 authors don't repeat other's work, and it can't be in core because modules innovate faster than the language core.

[22:23] <jnthn> I'm not sure there's any magic, alas. Either the NativeCall binding matches the ABI and things work, or it doesn't and things are unlikely to work

[22:23] <jnthn> *API

[22:25] *** quester joined
[22:25] <geekosaur> ABI's actually more correct, since NativeCall has to work at ABI level

[22:25] <geekosaur> it'd be easier if it were API, but then NativeCall would have to compute C code on the fly

[22:25] <geekosaur> *compile

[22:25] <DrForr> In my case I can certainly push a change to tie things to readline v7 and have things "just work" for that particular version but still horribly break for others. It's not optimal but if it gets things working again I'm for it.

[22:25] <jnthn> I thought that then noticed you wrote API and then automatically assumed you knew better than me. :-)

[22:25] <geekosaur> yeh, I wrote that and then realized I should have said ABI

[22:26] <geekosaur> I still think NativeCall is the wrong approach, there's too many things it will never be able to get right

[22:27] <DrForr> Lisp CFFI seems to get it right but it takes the "Much magic" approach by shielding a lot of crap behind the (load-library "file") method.

[22:27] *** mcmillhj joined
[22:28] <DrForr> I wonder if there's an argument for creating another v-number for library versions that we can use 'when' on.

[22:28] <pmurias> geekosaur: what do you think is the right approach?

[22:30] <geekosaur> there's a reason everyone else relies on separate compilation in some form (e.g. Perl 5 XS, and the Pythin equivalent). there's too many things you need a C compiler to get right

[22:30] <DrForr> Huh, that could actually have some merit - adding a :libver<7> to the class declaration and maybe having zef find the matching library and load the appropriate version. It doesn't solve the issue of incompatible APIs for the perl 6 side.

[22:30] <geekosaur> and too many things that hide some of their API in C macros, and the ABI will be fairly opaque unless someone translates those macros into Perl 6 --- which will then probably be ABI dependent and need to be rewritten for different versions

[22:31] <timotimo> cffi in python parses headers i think

[22:31] <timotimo> it's a pypy-team invention

[22:31] <DrForr> And then we're off to the Perl 5 XS races again, with macro layers but at least this time it'd be in a module rather than cluttering up core.

[22:33] <pmurias> geekosaur: Perl 5 XS doesn't look like something that was carefully designed

[22:33] *** mcmillhj left
[22:34] <jnthn> I figure even then, you'd do it by compiling a C library to act as the mapping layer, and using NativeCall to talk to that mapping library.

[22:34] <geekosaur> I didn't say it was carefully designed. I said it goes through a C compiler

[22:34] <timotimo> i mean, how hard can it be to re-implement gcc in nqp

[22:36] <jnthn> Or, more clearly, using the same "call stuff from a loaded native library" VM-level interface, even if the NativeCall module itself was circumvented.

[22:36] *** benjikun joined
[22:36] *** metelik joined
[22:37] <metelik> hello everyone

[22:37] <timotimo> greetings metelik 

[22:38] *** committable6 joined
[22:38] *** reportable6 joined
[22:38] *** ChanServ sets mode: +v reportable6

[22:38] <metelik> after a bit of a break from perl (current project is in elixir) I decided to give p6 a go ;) here the story starts 

[22:38] <metelik> has anyone had any joy using zef ?

[22:38] <DrForr> Well, from my standpoint I'd settle for something I could pass to the :native(...) adverb to (lazily if need be) generate the path the right library. Too many UNIX variants...

[22:39] <DrForr> metelik: Have you been having issues?

[22:39] <metelik> I daresay so

[22:40] <DrForr> I know that Liz had some ideas, but I had to teach so I never heard if she made progress, and it's late over there. I'll throw a .tell in here...

[22:40] <metelik> not sure whether this is due to lack of experience with p6, non-exaustive documentation (or both)

[22:40] <metelik> I just installed  rakudo+moarVM on my NetBSD host

[22:41] <DrForr> .tell lizmat Did you make any headway with Lembark's problem vis-a-vis readline? I've got time and inspiration to throw in whatever ideas you've got.

[22:41] <yoleaux> DrForr: I'll pass your message to lizmat.

[22:41] <metelik> and was hoping to get it going in few

[22:41] <metelik> minutes to be precise

[22:41] <metelik> :D

[22:41] *** mcmillhj joined
[22:41] <DrForr> metelik: NetBSD, nice, we need more OSen to run on. I take it you're getting errors?

[22:41] <metelik> # perl6 You may want to `zef install Readline` or `zef install Linenoise` or use rlwrap for a line editor  To exit type 'exit' or '^D' > use Zef::CLI

[22:42] <timotimo> oh, you're trying to use zef from inside the repl?

[22:43] <metelik> yup  because from shell it had failed ;)

[22:43] <timotimo> that's unusual

[22:43] <metelik> Use of uninitialized value % of type Any in string context. Methods .^name, .perl, .gist, or .say can be used to stringify it to something meaningful.   in sub guess-path at /home/srcs/pkgsrc/wip/p6-zef/work/.destdir/usr/pkg/share/perl6/site/sources/5F41CB8F10943DCE9677D3F0E81EA6A5302F4134 (Zef::Config) line 21   in sub preprocess-args-config-mutate at /home/srcs/pkgsrc/wip/p6-zef/work/.destdir/usr/pkg/share/perl6/site/sources/8CF719A

[22:43] <DrForr> The '> use Zef::CLI' was a giveaway there :)

[22:43] <timotimo> maybe Zef::CLI wants to inspect @*ARGS?

[22:43] <metelik>  zef install Readline Badly placed ()'s.

[22:44] <metelik> both csh and  bash

[22:44] <timotimo> i haven't seen that output yet

[22:44] <timotimo> how did you install rakudo?

[22:44] <geekosaur> csh error

[22:44] <DrForr> 'zef' is an external program, trying to invoke that from the REPL doesn't make much sense to me.

[22:45] <timotimo> i'd assume "zef" is the launcher that is actually a shell script that invokes the perl6 binary (shell script)

[22:45] <timotimo> if it doesn't have the right hashbang, that could be trouble

[22:45] <tbrowder_> .tell tyil i’m not going to make my eta for defn class today, life intervened, sorry.

[22:45] <yoleaux> tbrowder_: I'll pass your message to tyil.

[22:46] <timotimo> like, maybe it has #!/bin/sh but it uses bash-isms?

[22:46] *** mcmillhj left
[22:46] <geekosaur> it sounds to me like it's trying to use csh

[22:46] <geekosaur> which really isn't going to work if it's intended for sh

[22:48] *** metelik left
[22:49] *** lizmat left
[22:53] *** metelik joined
[22:53] <metelik> darn ffox

[22:53] <metelik> bash-4.4# cat /usr/pkg/bin/zef  #!/usr/pkg/bin/perl6 sub MAIN(:$name is copy, :$auth, :$ver, *@, *%) {     CompUnit::RepositoryRegistry.run-script("zef", :dist-name<zef>, :$name, :$auth, :$ver); }

[22:53] <metelik> this the wrapper that got installed

[22:55] *** mcmillhj joined
[22:56] <DrForr> /usr/pkg/bin/perl6 - Perl6 is in NetBSD ports?

[22:56] <metelik> yup

[22:57] <metelik> rakudo per se

[22:57] <metelik> I think rakudo-star looks a bit abandoned

[22:57] <metelik> zef is in its wip

[22:58] *** w17t left
[22:58] <DrForr> It's great to know it's in the ports tree, but especially for zef I'd definitely install from source, or at least rakudo.org.

[22:58] *** dct_ left
[22:58] <metelik> lemme check the origin

[22:59] <DrForr> (or wherever we're telling people to install from - I'd use rakudobrew, but that's not the popular choice.)

[23:00] *** mcmillhj left
[23:01] *** pmurias left
[23:01] <metelik> it was fetched from github.com/ugexe/zef

[23:01] <metelik> tag v0.1.26

[23:02] <metelik> okidok slightly behind ;)

[23:03] <metelik> the other question I had was- is it possible to bytecompile  a module

[23:03] <metelik> then feed the VM with the already bytecompiled code?

[23:03] <DrForr> They build to a .precomp directory by default.

[23:05] <metelik> ?

[23:05] <DrForr> I.E. they're precompiled.

[23:06] <metelik> haven't noticed such a thing hence I am asking

[23:06] <metelik> the only erxperience I have so far  is that perl6 test.pl takes way longer than with perl5

[23:07] *** mcmillhj joined
[23:08] <metelik> bash-4.4# perl6 --target=moar test.pl  ===SORRY!=== Cannot dump this object; no dump method

[23:08] <metelik> am I missing something ?

[23:08] <metelik> well if the port is incomplete I could put some work in it ;)

[23:09] <DrForr> What does 'perl6 --version' return?

[23:09] <metelik> it is christmas ver

[23:09] <metelik> ash-4.4# perl6 --version This is Rakudo version 2017.09 built on MoarVM version 2017.09.1 implementing Perl 6.c.

[23:10] *** sena_kun left
[23:12] <metelik> that debug print comes from nqp

[23:12] <DrForr> Quite a bit behind... what debug print? (looks back)

[23:12] *** mcmillhj left
[23:13] <metelik> Cannot dump this object; no dump method

[23:13] <metelik> nqp --version This is nqp version 2017.09 built on MoarVM version 2017.09.1

[23:14] <metelik> test.pl contains only a print statement

[23:14] <DrForr> Right. I don't think you need to specify '--target=moar' explicitly, unless you're running multiple versions. Are you?

[23:14] <DrForr> Sorry, multiple backends, not versions.

[23:14] <metelik> that'd  be my best educated guess too

[23:15] <metelik> but where the bytecompiled version of the thing go ?

[23:15] <metelik> i tried the -o option but also without success

[23:15] <DrForr> .precomp or some other .dot directory.

[23:16] <DrForr> You shouldn't need special CLI options just to run a file. If you're expecting it to be like gcc, don't. It's closer to shell or python/ruby.

[23:16] <DrForr> 'perl6 test.pl' should be all you need.

[23:17] <metelik> but then it absolutely makes no sense

[23:17] <metelik> as there's no gain

[23:17] <metelik> only penalty in bytecompiling time

[23:18] <metelik> comparing to interpreted version

[23:18] <geekosaur> I would hope you're not only running it once ever

[23:18] <timotimo> 2017.09 is unlikely to work with today's zef

[23:19] <timotimo> and --target=moar won't work without an --output flag i don't think

[23:19] <metelik> bash-4.4# perl6 --target=moar test.pl --output=test.p6 ===SORRY!=== Cannot dump this object; no dump method

[23:19] <DrForr> metelik: Again, there should be a .precomp directory generated after the initial run, it'll check if there's a .precomp/test.pl file is there and run that instead...

[23:20] <timotimo> it might have to be --target=mbc actually

[23:20] <metelik> there's something in the home directory

[23:20] <metelik> but it is not that .precom/test.pl

[23:20] <timotimo> we only precompile modules, not scripts

[23:21] <DrForr> Oh, right. use D::Oh.

[23:21] <timotimo> use D'oh;

[23:21] <DrForr> Wasn't actually aware of that, come to think of it.

[23:21] <timotimo> you can ask --stagestats what part of the script takes so long

[23:21] <timotimo> i.e. if it's parsing, then precompilation can get you a benefit

[23:21] <DrForr> I was actually just talking with ^pudge about that module at TPC.

[23:21] *** curan left
[23:24] <metelik> bash-4.4# perl6 --target=moar test.pl --output=test.p6 ===SORRY!===

[23:24] <timotimo> it has to be --target=mbc

[23:24] <metelik> same stuff

[23:24] <timotimo> but it'll work better if you just put the code in the mainline of a module and just "use" that

[23:25] <timotimo> oh, haha

[23:25] <timotimo> you're passing --output to the test.pl script

[23:25] <timotimo> that's why it's not being picked up

[23:25] <metelik>   -o, --output=name    specify name of output file

[23:25] <metelik> input is test.pl

[23:26] <metelik> i chose test.p6 as output

[23:26] <timotimo> yes, but it has to come before test.pl

[23:26] <metelik> not the same file ;)

[23:29] <metelik> it was stage parse taking so long

[23:29] <timotimo> OK, then you'll actually get a benefit from precompilation

[23:29] <metelik> but come on

[23:30] <metelik> my gramma parses it faster

[23:30] <metelik> bash-4.4# cat test.pl  print "dupa maryny";

[23:30] <metelik> 0.3s??!!

[23:30] <timotimo> that's all your script is?

[23:30] <metelik> yes

[23:30] <metelik> i wanna just give it a go

[23:30] <timotimo> Stage parse      :   0.199

[23:30] <metelik> and get the environment running ;)

[23:31] <metelik> perl5 does it in a lightning speed

[23:31] <timotimo> stage parse contains loading the core setting, which is big

[23:31] <timotimo> it's only spending a tiny bit of time parsing your code

[23:32] <timotimo> check the stagestats of -e '', it'll take 0.188 (on my machine) to parse the empty string, but it's just a fixed cost that every script gets

[23:32] <timotimo> oh, i had optimization turned off

[23:33] <timotimo> Stage parse      :   0.082

[23:33] <timotimo> that's what i'm used to

[23:33] <metelik> my machine has only two cores

[23:33] <metelik> 2GHz each

[23:33] <timotimo> doesn't matter for this workload

[23:33] <metelik> so yes printing a string may take half of a second ;)

[23:33] <metelik> yes i know

[23:34] <metelik> but ok stats do not have to be overly accurate

[23:34] <timotimo> anyway, we're optimizing moar and rakudo all the time, you may want to get a more up to date version to get better performance

[23:35] <metelik> the idea is to get the VM on let;'s say some embedded system and run the bytecompilaed code

[23:35] <metelik> let's say the modules

[23:35] <metelik> the main script may remain interpreted then bytecompiled

[23:35] <timotimo> you currently won't get around having it run through the perl6 binary

[23:36] *** gabiruh left
[23:36] <metelik> the vital question is how to produce the perl binary

[23:36] <timotimo> moarvm requires libuv; that may not work on your embedded system

[23:37] <metelik> bash-4.4# ls /usr/pkg/lib/libuv.* /usr/pkg/lib/libuv.a           /usr/pkg/lib/libuv.la          /usr/pkg/lib/libuv.so          /usr/pkg/lib/libuv.so.1        /usr/pkg/lib/libuv.so.1.0.0

[23:37] <timotimo> if your embedded system runs netbsd, that's gonna be fine

[23:37] <metelik> nad that libuv I most likely shall crosscompile for the target

[23:37] <metelik> ;)

[23:39] <timotimo> if it's something like a attiny or even atmega, that won't have libuv support, for lack of unix on it

[23:39] <timotimo> well, i don't know if maybe netbsd would run on it

[23:40] <timotimo> but the lack of a MMU is usually troublesome

[23:41] <metelik> naj  'twill run BSD

[23:41] <timotimo> cool

[23:41] <metelik> limited  dram but still

[23:42] <timotimo> i mean, there's linux for nintendo ds, which is based on uclinux

[23:43] <metelik> didn't know that bit

[23:43] *** mcmillhj joined
[23:44] <metelik> heard some roumouirs about the nintendo switch

[23:44] <metelik> running beautifully  customised kernel

[23:44] <metelik> but dunno whether those are true

[23:45] <metelik> k  'tis running late here... I shall put the perl6 frustration on a long finger ;)

[23:47] <timotimo> seeya!

[23:47] <metelik> actually is there any documentation available ?

[23:47] <metelik> on how to use perl6 ?

[23:47] <metelik> the only thing i have is the bloody --help

[23:47] <timotimo> lots

[23:48] <timotimo> we have docs.perl6.org, we have books, we have perl6intro, we have learnxinyminutes, the list goes on

[23:48] <metelik> you know i tried the perl6 official tutorial first right ?

[23:48] <timotimo> i don't think we have an official tutorial

[23:48] <timotimo> can you tell me where you found that?

[23:48] *** mcmillhj left
[23:49] <metelik> i looked @ prl6intro.com

[23:49] <timotimo> ah, that's good, but it's not "the official tutorial"

[23:50] <metelik> i was reiderected there from the page with a butterfly ;)

[23:50] <metelik> but I did not mean the language itself

[23:50] <metelik> those bloody options: --encoding=mode      specify string encoding mode

[23:51] <metelik> --target=<guess what the heck put in there>

[23:51] <metelik> so far I read internet and did not found anything that worked

[23:51] <metelik> did not find*

[23:51] <timotimo> the official, encouraged, and only supported way to use precompilation is to use the automatic precompilation that you get for modules

[23:52] <timotimo> you're digging around in the guts, where we don't have as much user-friendly (or user-targeted) info & help

[23:52] <timotimo> that's not a cool situation for sure

[23:52] <metelik> but if i would change my  test.pl to test.pm

[23:52] <timotimo> it should go into a lib/ folder

[23:52] <timotimo> and you will need a -I lib, too

[23:53] <metelik> oh ok

[23:53] <metelik> so then i would eventually get the precompiled module

[23:53] <timotimo> after the first use, the precompiled file will be there

[23:54] <metelik> what the --output option is for then ?

[23:54] <timotimo> it directs the result of the stage supplied in --target to a file

[23:54] <timotimo> some stages don't have a textual output format, so outputting them to stdout makes no sense

[23:55] <timotimo> every entry in the stagestats list can be passed to --target

[23:55] <timotimo> parse, ast, and optimize are usually the most interesting ones

[23:56] <metelik> is there any particular reason for which i could not get the mbc or moar stages outputed for my sorry test.pl ?

[23:56] *** mcmillhj joined
[23:56] <metelik> perl6 --stagestats -e 'print "dupa maryny"' --tagert=ast --output=xxx

[23:56] <timotimo> yes, you put the --target option after test.pl, which means perl6 didn't get the option

[23:56] <metelik> 0

[23:57] <metelik> null

[23:57] <metelik> nil

[23:57] <timotimo> and there the -e got the option

[23:57] <timotimo> as i said, it needs to go in front of the script

[23:57] <timotimo> otherwise it's options to the script itself

[23:57] <metelik> ahhhh

[23:57] <timotimo> looks like i didn't make myself clear :S

[23:58] <metelik> nope it is already 1am

[23:58] <metelik> in here

[23:58] *** ufobat_ left
